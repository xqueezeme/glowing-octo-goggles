{
    "title": "Reflections on Ice Ch. 06",
    "pages": [
        "For a good half hour, they didn't say much. Cassia was more familiar with Dallas than he was, and offered a few directions to cut the drive time down. Cassia didn't find the silence awkward. She was consumed with thoughts of how she would handle this once they stopped but she felt a level of comfort and ease with Dylan she didn't feel with anyone else in her life. Even her friends, people she'd known since grade school, felt the need to fill the quiet spaces with chatter about work or a new haircut.\n\nBefore long, they were free of the trappings of the city, the lights fading in the distance behind them.\n\nDylan's deep voice broke the comfortable silence. \"So, do you have an actual destination in mind, or are you taking me out to drop me off in a farmer's field somewhere and leave me there?\"\n\nCassia laughed. \"I don't know how you think I could manage that.\"\n\nHe cleared his throat and when she looked over at him, his smile was crooked. She loved that smile. \"I probably shouldn't tell you this, but I'm sure you could disarm me without a struggle.\"\n\nCassia bit her lip, not at all certain she knew what he meant. She knew what she hoped. Her heart kicked into double time again. Then she spotted the sign ahead and pointed out the windshield. \"Take that exit right up there.\"\n\nHe did as she directed, turning off the interstate and then down a few rural roads until they reached their destination.\n\nWhen Dylan cut the engine, he looked over at Cassia with a worried expression on his face.\n\n\"What?\"\n\n\"You promise you're not going to abandon me here?\"\n\nShe laughed. \"It's your truck, your keys. How will I abandon you here?\"\n\n\"You're a mechanic. I'm positive you know how to hotwire a vehicle.\"\n\nShe pasted an innocent look on her face and climbed out of the truck, laughing when she heard his muttered grumbling. He followed a moment later, meeting her at the back of the truck as she lowered the tailgate. He eyed her as she clambered up and swung around, leaving her legs dangling.\n\n\"Come on.\" She put her hand on the spot beside her.\n\n\"We could have sat in the diner, you know. Eating pie at the same time.\"\n\n\"Man, all this time, I never knew what a whiner you are. Get your ass up here.\"\n\n\"All this time, I never knew how bossy you can get.\" But he climbed up and sat beside her. \"So what are we doing here?\"\n\n\"I used to love coming out to the country with my dad when I was a kid. He'd take us fishing or out to some deserted country road where we could practice driving.\" She smiled and tilted her head back. \"He'd always end up keeping us out until after dark and I'd lay down in the back of the car on the drive home, staring out the window.\"\n\nDylan tipped his head back as well and let out a low whistle. \"What a sight.\"\n\nFor several long minutes, neither of them spoke. Cassia's breath caught when she spied a shooting star. With a contented sigh, she reclined back, heedless of the cold metal and ridges of the truck bed. Beside her, Dylan glanced back.\n\n\"It's easier on the neck this way.\"\n\nHe followed suit, laying back beside her, their shoulders touching. In another minute, Cassia was warmed through, and couldn't help but wonder if he felt the same.\n\n\"You brought me out here to look at the stars?\" His voice was pitched low, as if he didn't want to disturb the peaceful darkness around them. And it was very dark. The moon was the barest sliver off in the distance and they were well outside the city.\n\nCassia took a deep breath. \"Not exactly.\"\n\nHe didn't reply and Cassia was scared to look at him.\n\n\"So you did bring me out here to murder me and leave my body for the coyotes.\"\n\nShe burst out laughing and reached over to give him a playful shove. He chuckled with her and she rolled onto her side, propping herself up on one elbow. She could barely make out his features in the dark. But the longer she looked, the better she could see the shape of his smile and the glint in his eyes.\n\n\"I wanted to thank you for everything you've been doing for me. You've been so great, and all I've done is go to that casino night with you.\"\n\n\"There does seem to be a lot more going on in your life than mine.\"\n\n\"I guess. I feel bad sometimes that you're having to put on a show and I feel like I haven't been keeping up my end of the bargain.\"\n\nHe chuckled. \"I'm not keeping score, if that's what you're worried about.\"\n\nIt wasn't. Not really. She was stretching out the moment, afraid to come to the point. Then again, if she waited too long, she might lose her nerve.\n\nHe spoke up again before she could. \"I do have another team event later in the month, that you could come to, but if you want, why don't you come to a game?\"\n\n\"A game?\"\n\n\"Yeah. You'd probably see some of the people you saw at the casino night, and you could cheer me on, play the part.\"\n\nShe stared down at him, his offer throwing her off. It had never occurred to her to ask to attend a Stars game. The thought was exciting. She'd always loved live games, and had only been to a handful in her entire life. \"But... I wouldn't have anyone to go with. None of my friends care about hockey.\"\n\n\"What about your mom?\"\n\nShe made a face. While her mother had apologized earlier, she didn't know if she was ready for an entire night of her mother's well-meaning but pointed questions about any relationship of hers.\n\n\"Or Jill?\"\n\n\"Jill? Howie's wife?\" Cassia had enjoyed talking to the other woman at the cookout. \"Yeah. Maybe.\"\n\n\"There you go.\"\n\nHe turned his head, his gaze going back to the night sky. Cassia continued to study him. He lifted one arm and rested his head on it. When she still didn't move, or look away, he let out a short laugh.\n\n\"You're starting to make me nervous.\"\n\n\"I'm sorry. I just... I still feel bad about how much you're having to do with all this. You probably didn't imagine family dinners with third degrees when we made this deal.\"\n\n\"I guess not. But it's fine. I like your family.\"\n\nShe narrowed her eyes. \"Even my brothers?\"\n\n\"Yes. They were just looking out for their sister. It's something I can relate to.\"\n\n\"I suppose you can.\" Cassia tilted her head back, her eyes going to the stars again. She spotted a few constellations she recognized and wondered what the sky would look like in Dylan's hometown.\n\n\"Would you like your birthday gift?\" Dylan's voice was soft and when Cassia looked down at him again, he wasn't looking at her.\n\n\"Dylan, you really didn't have to get me a gift.\"\n\n\"Well, you can get me something for my birthday, and then we'll be even.\" He rolled to one side and reached in his pocket. \"Close your eyes.\"\n\nShe laughed. \"I can barely even see your face.\"\n\n\"Just do it.\"\n\nShe sat up and closed her eyes. He picked up her hand, wrapping his fingers around hers, and dropped something small and round into her palm, with something cold trailing over one side. She closed her fist around it. \"Can I open my eyes now?\"\n\n\"Yes.\"\n\nShe did and opened her hand to see a small pendant on a plain silver necklace. The pendant was a perfect little pie, about a half inch in diameter. \"Oh, it's so cute. I love it!\"\n\nDylan rubbed his neck, sitting up beside her. \"Do you? I wasn't sure. I've never seen you wearing jewelry before.\"\n\n\"I don't normally, especially not on my hands or wrists. Gets in the way at work.\" Cassia brought the necklace up to her face, trying to make out details but it was far too dark. \"I love this, Dylan. Thank you so much.\"\n\n\"I'm glad.\"\n\nShe managed to get the little clasp open and slipped it around her neck. It took a moment for her to attach the clasp again, but she held the pendant in her hand after she did, smiling down at the thoughtful little gift. \"Perfect.\"\n\nIn the dim night, Cassia could make out Dylan's smile, his eyes still on her. \"I agree.\"\n\nCassia shivered. Then leaned close, pressing her mouth to Dylan's. She could tell she'd caught him by surprise. He didn't move for so long that Cassia started to wonder if she'd made a huge mistake. She pulled back and covered her mouth with her hand.\n\n\"I'm sorry.\"\n\nDylan let out a rough laugh. \"For what?\"\n\nCassia waved her hand between them. \"That.\"\n\nShe didn't know what else to say. Or do. Embarrassment coursed through her, burning up her neck to her face. God, he really must think she was the most unrefined woman he'd ever met. She turned away, shifting her weight so she could get close enough to the edge to jump out of the truck bed. Dylan clamped a hand around her wrist, stopping her. She couldn't bring herself to look at him.\n\nWhen he tugged on her arm, she turned, seeing the shadowy outline of him, and his other hand as he lifted it to her face.\n\nBefore she knew what was happening, he slid his hand to the back of her head and pulled her to him. His mouth came down on hers, the kiss stealing her breath. Then she parted her lips and her eyes closed when she felt his sharp exhalation on her lips.\n\n\"I told you don't ever be sorry for that.\"\n\nCassia grinned and grabbed hold of the front of his shirt, pulling him back. She wanted more of this, shivering when his hands tangled in her hair, holding her still as he kissed her again. This time, when she slid her tongue against his, the sound he made was deep and sent a shiver skittering up her spine.\n\nShe wrapped one arm around his neck as she lifted up onto her knees. One of his hands dropped to her waist, hauling her close enough that she was almost straddling his lap. All her self-doubt disappeared and all Cassia wanted was to get closer. She wanted to feel all of his heat against all of her. Even as she thought it, he angled his head, taking the kiss deeper and a moan rose in her throat.\n\nAll of a sudden, the world was tilting and he was pressing her down, laying her on her back. Their kiss broke, and Cassia's eyes blinked open. She saw the stars first, framing Dylan's head and shoulders. He bent his head, kissing her once, a brief, hard press against her lips. Then he did it again, and again, before she made a noise and reached for his head.\n\nHe pinned her hands down beside her head and kissed her hard. His tongue slid into her mouth, and she opened for him, loving the weight of him on her. He moved his lips from hers, pressing a gentle kiss to her bruised cheek, before moving lower. She lifted her chin, arching off the truck bed, wanting him to let her hands loose.\n\nHe clamped his lips to the curve of her throat, his tongue gliding over her skin. Then he released one of her hands, only to reach for the top button of her shirt.\n\nShe gasped, her hand clamping down on his in a swift reaction. \"What are you doing?\"\n\nHe chuckled, a sensation she felt through her entire chest. She swallowed hard and fought to regain some self-control.\n\n\"I would have thought it was fairly obvious.\"\n\nCassia's breath escaped in a weak laugh. Her hold on his hand loosened and she felt his fingers working the top button on her shirt free. He moved on to the next one and pressed close again to kiss her as he did, his lips undoing any reservations she was feeling with every passing second.\n\n\"Dylan...\"\n\nHis mouth was descending along with his hand, his breath warm on all the skin he was baring. \"Hmm?\"\n\n\"I thought you had no experience with women.\" It was why she thought she'd have to make the first move, even if she hadn't exactly planned it for tonight.\n\nFor a moment, he didn't respond. Then he lifted his head and Cassia angled hers down so she could meet his eyes.\n\n\"I never said I had no experience. I just have a hard time getting to know women.\"\n\n\"Oh.\" She didn't know why she'd assumed otherwise. On the other hand, until she'd considered her feelings more closely, she hadn't thought of what his experience level might be.\n\nHe shifted, moving himself down beside her until he had his head propped on one upturned hand. His other hand stayed in the parted section of her shirt, not far from her thudding heart. His fingers grazed her skin, sliding one way and then back. Cassia shivered, though she was far from cold.\n\n\"And as you're constantly reminding me, I have no trouble talking to you. Why should this be any different?\" He punctuated his question with a quick kiss.\n\n\"You have a point.\" Cassia put her hand over his. \"So it's OK that I brought you out here and kissed you?\"\n\nDylan blinked and started to laugh. Cassia grinned, rolling with him as he flopped to his back.\n\n\"Yes. I'm totally fine with you kissing me. Did I seem like I was upset or something?\"\n\nCassia bit her lip and shook her head. \"No, but every other time, it's been because someone was watching.\"\n\n\"That's true. Do you want to drive back to the city and do this in public?\"\n\nCassia laughed and smacked his shoulder. \"Of course not.\"\n\nDylan lifted his hand and cupped her cheek in his palm, pulling her down onto his chest. \"Then what are we talking about?\"\n\nAs he kissed her again, his tongue sliding over her lips before going deeper, Cassia couldn't figure out what her point had been. She leaned into the kiss, loving the way he tasted and the way he held her waist, pressing her closer to his body.\n\nIt might have been a minute, or hours, but Cassia felt the tenor of the kiss change. Suddenly, she was short of breath and his hold on her wasn't as gentle. His fingers clenched in her hair and she bit down on his bottom lip as she wedged a knee between his legs.\n\nHis hand came down on her backside and he wrenched his mouth away, breathing hard. Cassia pressed her mouth to his neck, reaching for the buttons of his shirt, unable to stop grinning. She followed her hands with more kisses, her breath stuttering when she felt the way his heart was pounding in his chest.\n\nThen she stopped, rolling away from him, both of them struggling to catch their breath.\n\n\"Cass?\"\n\n\"Yeah.\"\n\n\"Are you all right?\"\n\nCassia laughed and reached for his hand, twining their fingers together. \"Yes. I'm more than all right.\"\n\nHe rolled to his side and she turned her face to him. Even in the shadows, she could feel his questioning look.\n\n\"I was thinking that maybe the back of the truck isn't the best place for this.\"\n\nDylan's responding laugh was deep and Cassia smiled. \"You might be right. Then again... we do both have roommates. Out here, at least we know we're alone.\"\n\nAs if on cue, a coyote started to yip and bark in the distance.\n\nDylan sat up. \"On the other hand, I'm sure we could find a nice safe parking lot in town.\"\n\nCassia laughed and sat up beside him. \"You know, for a hockey player, you're a real wimp. That coyote is probably miles away.\"\n\nDylan laughed with her. \"I know that. But you're right. The truck isn't the best location.\"\n\nHe turned to help her towards the end of the tailgate. They sat on the end, both buttoning their shirts up and stealing glances at each other. Then Dylan hopped down first and held a hand up to her. Cassia could make the landing on her own, but she loved his chivalry. She was surrounded by her less-than-polite family and coworkers every day, and her last relationship had been Alex, so having someone treat her as special as Dylan did was a treat.\n\nShe jumped to the ground and would have turned to lift the tailgate, but Dylan stepped close, closing his arms around her. His mouth came down on hers, hard and demanding. Cassia clutched his shoulders, rising up on her toes as he hauled her up against his chest. She felt his hands clench in her shirt and his tongue touched hers, igniting everything she'd been feeling since they'd left Dallas.\n\nAll too soon, he set her back on her feet, and she did her best to ignore the wobble in her knees. God help her, what was she going to do if they ever managed a better location than the truck?\n\nDylan released her and turned to lift the tailgate, slamming it back into place. Then he took her hand and led her around to the passenger door of the truck. He held it for her and she climbed in, buckling herself in as he circled the truck and got in the driver's side.\n\nHe looked over at her. \"Pie?\"\n\nShe grinned. \"That sounds great.\"\n\nHe nodded and started the engine. As he turned the truck around and headed back to Dallas, he reached for her hand. Cassia let him, closing her fingers around his, and wondered if she'd ever be able to stop smiling.\n\n****\n\nDylan didn't know how he knew, but he could almost swear that he heard Cassia cheering every time he got on the ice. It was ridiculous, of course, but then, he'd felt ridiculous for days now. In the best possible way. It had been a week since that eye-opening drive to the country and Dylan still couldn't believe it, or get enough of her.\n\nThe schedule had taken him out of town only two days after her birthday but they'd spoken on the phone every day and had a brief reunion the night before.\n\nAs Dylan sat on the bench, waiting for the third period to get underway, he told himself to forget about the way Cassia had smiled at him when he'd surprised her at work, and that she'd been wearing the pie necklace even under her coveralls. And he definitely didn't need to be thinking about the hour they'd spent, parked in his truck, after dark.\n\nHe rolled his head back and forth, willing himself to focus. The team was taking a beating from the Ottawa Senators tonight and he didn't need any distractions.\n\nOut on the ice, Tristen and four of his teammates took up their places. The music stopped as the puck hit the dot in the middle of the rink, and the game was back on.\n\nWhen Dylan next jumped over the boards, his thoughts were one hundred percent on the game. He glided over to take up his position around the red circle near his goalie. The center took his spot at the middle and the official dropped the puck.\n\nDylan shoved into the Senator across from him, moving forward. He caught the puck on his stick a second later and pivoted to move to the neutral zone. He almost made it too, but someone closed in on him from the left. He passed the puck and moved back, circling wide as the Senators scrambled after them.\n\nTheir opponents kept up the pressure until the puck finally shifted beyond the blue line. Dylan headed with his linemates to the bench, throwing back mouthfuls of water.\n\n\"Shit, these guys are on fire tonight.\"\n\nDylan glanced over at Tristen beside him and nodded. Their chances of making a comeback this period were slim. It was hard to fight back when the team was down by three goals.\n\nThey continued to battle but even with a power play goal, the Stars couldn't make anything else happen, and lost the game.\n\nThe atmosphere in the locker room afterward was subdued. Dylan sat for several minutes with his hands between his knees, slowly bringing his breathing back to normal. They'd fought hard in the final minutes and he'd been on the ice for a large portion of it.\n\nJake sat down next to him after pulling his jersey and upper body pads off. \"You OK, Sams?\"\n\nDylan nodded. \"That was rough.\"\n\nOn his other side, Tristen expressed the same sentiment with some more colorful adjectives thrown in.\n\n\"Easy, man.\" Dylan chuckled. \"It's not the end of the world. We've got a few games left to get our act together.\"\n\nTristen said nothing, just finished stripping his gear off before heading for the showers.\n\nDylan, breathing normal once more, did the same. After he was finished, and dressed again, he checked his phone. He hadn't made any firm plans with Cassia for after the game, but he was happy to see a single word on the screen that she'd texted. Pie?\n\nAs if she even needed to ask.\n\nHe hurried out of the arena and was glad to have minimal traffic to deal with on his way to Cassia's neighborhood. He parked at the end of the block and jogged to the diner, bursting in to find Cassia and Sally laughing down at the far end of the counter.\n\n\"There you are, sugar!\" Sally waved him over and poured him a cup of coffee. \"Pie?\"\n\n\"Of course.\" Dylan grinned as he approached. \"What kind is it tonight?\"",
        "\"Blackberry.\" Sally slid his mug across the counter. \"I'll be right back with it.\"\n\n\"Thank you, ma'am.\"\n\nCassia smiled up at him as he sat down next to her. \"How are you doing?\"\n\nDylan didn't answer. He reached over and pulled her close, sealing their lips together and not letting her go until Sally set the plate of pie in front of him.\n\n\"Thanks, Sall.\" Dylan brushed Cassia's hair back over her shoulder and stole another quick kiss. \"Mmm. You taste like blackberries.\"\n\nShe smiled, her cheeks turning pink. \"I already ate my slice. So? How are you doing?\"\n\nDylan sighed and reached for his fork. \"Better now.\"\n\n\"That was a tough game. You guys fought hard.\"\n\n\"Not hard enough.\" Dylan didn't want to talk about the game anymore. He dug into the pie, his eyes almost rolling back in his head at the first taste. He didn't know how Sally did it, but every pie he'd had was a delight all its own.\n\nAfter, he stirred sugar and cream into his coffee and turned to Cassia. \"Did you enjoy yourself, at least?\"\n\nHer nod was enthusiastic. \"Oh yeah. It was great. Those seats were fantastic and Jill was a riot. She was cheering for everyone and every goal, no matter who did it.\"\n\nDylan laughed. \"Well, I don't know if I like that.\"\n\n\"She was just excited to go. She doesn't have much opportunity to attend games, since she and Howie moved to Louisiana last year.\"\n\n\"Ah, yeah. That would be tough.\" Dylan sipped his coffee and his brow wrinkled. \"They've been here for a few weeks though, since the cookout at least. How are they managing that?\"\n\n\"Jill said since Howie isn't working right now, he might as well stay in Dallas and help out with the wedding.\" Cassia lifted her cup to her lips. \"Which is kind of funny, because I think the only way he's 'helping' is by keeping Troy out of Vivian's hair.\"\n\nDylan grinned. \"Sounds about right.\"\n\n\"Jill has only been here for weekends and came back yesterday. She'll be staying now until after the wedding.\"\n\n\"Are they staying at a hotel?\"\n\n\"No, with some of Howie's family, I think.\"\n\nThey fell silent, their eyes going to the television in the corner. Dylan let his eyes drop from the screen to Cassia's profile.\n\nShe was so pretty, with those round cheeks, and the freckles, and the way her grey-green eyes sparkled whenever she laughed. And he loved to make her laugh. He set his mug down and reached for her hand, drawing her gaze.\n\n\"What?\"\n\nHe shook his head. \"Nothing.\"\n\nShe smiled and leaned close, making his heart race. It was a good thing he was in shape, otherwise she'd have put him in the hospital days ago.\n\n\"I was thinking we should go for another drive soon.\"\n\nHis grin grew wider. \"Do you? Are you that desperate to get me alone?\"\n\nShe nodded, her expression serious.\n\n\"I'm thinking we should go on a proper date, at least once.\"\n\nShe laughed. \"A proper date? What for?\"\n\nHe shrugged, some of his old reticence creeping back. \"We never talked about it this week, but... you know, we're not just... pretending now, right?\"\n\nShe watched him as he stammered through an explanation, the smile never leaving her face, those gorgeous eyes dancing the further on he went.\n\n\"I mean... so, you know, a date might be the thing to do if we're... you know, actually... dating.\" Damnit. He could feel his ears getting hot.\n\n\"Dylan Samuels, are you asking me to go steady?\"\n\nHe gave her a mock scowl, and she laughed. That's it. He could do this. He didn't need to hesitate with Cassia, not now.\n\nHe leaned over and put his arm around her waist, bringing their faces close together, gratified when he saw her smile disappear and her eyes widen. \"Actually, I was thinking a date would be the proper thing to do before I get you into bed.\"\n\nHer mouth dropped open and he knew he'd caught her by surprise. His grin turned wicked and he tilted his head, putting his lips close to her ear. \"But if you'd rather skip that part, why don't we get out of here right now.\"\n\nBefore he pulled away, he brushed his lips over the skin below her ear, tasting her once. She shivered and put her hands on his shoulders, her fingers clutching his jacket into fists.\n\nYes, she'd had to make the first move that night last week, but he was capable of doing the same. With Cassia, it was easy. Everything was easy, from talking to teasing and touching. All the touching and now that he knew how much she liked it, there was nothing holding him back.\n\n\"So.\" He sat back so he could look into her eyes, now dark with what he knew he was feeling too. \"You ready to go?\"\n\nShe nodded, her breath coming fast. \"I'm pretty sure Kyle said something about going out with a friend tonight.\"\n\nDylan blinked before nodding once. He released her and stood up, digging in his pocket for enough cash to cover both their slices of pie. Then he grabbed her hand and all but hauled her out of the restaurant, barely waving goodnight to Sally.\n\nOut on the sidewalk, he spun around, yanking Cassia into his arms. He covered her mouth with his, swallowing her surprised gasp. Then her arms were around his neck and she was pressed against him and he knew she had to be feeling what was going on below his belt. And he didn't care. All he cared about was getting her into the promised bed.\n\n****\n\nSomehow, Dylan had turned Cassia into a gasping, heaving pile of hormones. That crooked smile when he'd been trying to ask her on a 'proper date', and the way he'd changed gears, leaning close, setting her every nerve ending on fire... she was putty in his hands. And she loved it. She loved that he'd come out of his shell in the past week, letting her know how much he wanted her every time they'd seen each other. She could get used to it in a hurry.\n\nShe didn't even care that they were standing on the sidewalk, in full view of anyone who might care, kissing like they hadn't seen each other in months. She pushed up onto her toes, wanting to feel more of him. Then she did. She pulled back, their bodies still connected from hip to chest, their breath coming hard and fast.\n\n\"Where are you parked?\"\n\nHe chuckled and kissed her again, a quick, hard kiss. \"We're not doing this in the truck.\"\n\nShe swatted his arm. \"That's not what I meant. We should drive. It'll be faster.\"\n\n\"Done.\" He turned and they hurried along the sidewalk to his truck, hand-in-hand.\n\nShe prayed the whole way on the short drive to her apartment that Kyle was still out with his friend. He hadn't said anything about when he'd be home, only mentioning a nightclub of some sort, so Cassia had assumed he'd be out late. When Dylan pinned her to the wall outside her apartment a few short minutes later, his lips and tongue sliding up and down her throat, she really, really hoped Kyle was gone.\n\n\"Dylan...\" She held onto him with one hand, her other hand holding the keys in the vague direction of the door.\n\nHe lifted his head after he'd turned her knees to jelly, his hand sliding along her arm until he took the keys from her. Then he kissed her, making her forget about the keys and the door and everything in the world but the way he tasted.\n\nSomehow, the door opened and Dylan wrapped his arms around her, half-lifting, half-guiding her inside the apartment. She laughed when the door slammed, kicked shut by a foot. That was when she realized there was a light on in the apartment, and a second later, she heard the couch springs creaking.\n\nSpinning around, she saw Kyle sitting up.\n\n\"Kyle!\" Cassia slipped from Dylan's grasp, her face flaming. Then she blinked as a second face appeared next to her brother's. \"Tyler?\"\n\nKyle was on his feet in another second, wiping his mouth and doing up his pants. Cassia's eyes widened when she took in Kyle's rumpled appearance and Tyler's missing shirt.\n\n\"Oh my God, were you going to have sex on my couch?\" Cassia's voice was low, and she didn't know why she was whispering. There was no mistaking what she and Dylan had just burst in on.\n\nKyle scowled, straightening his shirt with one hand while he ran a hand through his hair. \"It's not what it looks like.\"\n\nCassia glared at Kyle, crossing her arms over her chest. \"Really? Because it looks like you were getting busy on my couch, in my apartment, when you knew I could be home any time.\"\n\n\"You said you were going to the game.\"\n\n\"Which ended over an hour ago.\" Cassia threw her hands up in the air. \"I can't believe this.\"\n\nKyle's expression darkened as Tyler reached for his shirt, turning it right-side out before pulling it over his head.\n\n\"You're just freaking out because it's Tyler.\"\n\n\"I'm freaking out because you were about to have sex in the middle of the living room.\" Cassia covered her eyes with one hand. \"Look, Kyle, I've dealt with your video games, and you not picking up after yourself, but this is a serious breach of privacy.\"\n\n\"Yeah, mine.\"\n\nCassia dropped her hand and pointed at her brother. \"No. You could have been doing this in your own bedroom. Instead, you chose to start getting naked on my couch.\"\n\n\"You wouldn't care if I had a woman in here.\"\n\nCassia's mouth dropped open. \"Is that what you think? Seriously?\"\n\nKyle dropped, his expression full of that familiar Morgan belligerence. Behind Cassia, she heard Dylan shift on his feet and turned. She'd almost forgotten he was there. Reaching out, she took his hand and glanced over her shoulder at Kyle.\n\n\"Don't think we're done here.\"\n\nKyle said nothing as she led Dylan out of the apartment and closed the door.\n\n\"I am so sorry about this.\"\n\nDylan smiled and put his arms around her. \"Don't worry about it.\"\n\nCassia warmed in his embrace, her cheek on his shoulder, for a moment before lifting her head. \"I was having a really good time up until then.\"\n\nHe chuckled and nodded. \"Me too.\" He bent his head to steal a quick kiss. \"But there's always tomorrow. Or the next day.\"\n\nCassia dropped her head to his chest with a groan. \"I wanted it to be tonight.\"\n\nHis hold tightened around her and he kissed the top of her head. \"Me too.\"\n\nThey didn't say anything for a minute. Then the silence was broken by a shout from inside the apartment and the door yanked open beside them. Cassia pulled away from Dylan as Tyler stormed out.\n\nHe barely looked at them. \"Good to see you again, Cass.\"\n\n\"You too, Tyler.\" She reached out one hand to stop him. \"I hope you're not leaving because of me.\"\n\nHe shook his head and Cassia was surprised to see his eyes glassy with tears. She'd known Tyler for ages. He'd been one of Kyle's closest friends in high school. Obviously closer than even she'd thought, though that still wasn't as much of a shock as how she'd found them inside, on her couch.\n\n\"I've gotta go.\" He pulled his arm from her grasp, shoved his hands in his pockets and stalked down the hall.\n\nCassia watched him go before turning back to Dylan. \"I should go talk to Kyle.\"\n\nDylan nodded. \"Of course. I'll call you tomorrow.\"\n\n\"OK. Good night.\" She lifted up on her toes to kiss him once more and then let him go.\n\nBack inside her apartment, she walked down the hall and pounded on her brother's closed bedroom door.\n\n\"Go away.\"\n\n\"No. We need to talk, Kyle.\"\n\nThere was some incoherent grumbling from inside before the door opened. Cassia reeled back on her heels when she saw the tears on Kyle's face.\n\n\"Kyle, what on earth...\"\n\n\"I'm sorry about your couch.\"\n\nCassia didn't know what to say. Kyle scrubbed at his face and Cassia reached for him then. He was her little brother after all, and by far the most sensitive of all the Morgan kids. She'd always been there for him when he was hurting and she wasn't about to stop now.\n\n\"What happened?\"\n\nKyle shook his head, unable to reply for a moment. At length, he pushed her away and walked over to his bed. Cassia followed, perching on the end of the bed, and waited for Kyle to explain.\n\n\"Tyler was embarrassed and wanted to apologize to you.\"\n\n\"Well, he was always the most polite of your friends.\"\n\nHe shot her a look that she returned in full measure. She may be sympathetic but she wasn't going to let him off the hook yet.\n\n\"I said how I knew you'd freak out and that's why I didn't bring him in here when he first mentioned it earlier.\" Kyle looked away. \"I knew you'd probably be home any minute.\"\n\nCassia's eyebrows rose. \"Excuse me? Are you saying you wanted me to catch you and Tyler on the couch?\"\n\nHe shrugged. \"Sort of. I thought it would be the easiest way of coming out.\"\n\nCassia covered her face with one hand. \"Kyle, that is the stupidest thing I've ever heard you say.\"\n\n\"What? It's stupid that I'm gay?\"\n\n\"No.\" She dropped her hand and glared at him. \"It's stupid that you thought you couldn't just tell me.\"\n\nHe met her glare for a second before his face fell and he looked away. \"I'm sorry.\"\n\nCassia sighed. She wanted to reach out and hug him, because she couldn't even imagine how difficult this must be for him. He was lashing out, and acting defensive because of the situation. And possibly because of whatever else he and Tyler had just fought about.\n\n\"Well, Tyler was mad because he thought I'd already told you.\"\n\n\"Why would he think that?\"\n\n\"Because it's what I told him.\"\n\n\"Oh, Kyle.\" No wonder Tyler had been so upset. \"He must be so embarrassed. You have to apologize to him.\"\n\n\"I know.\"\n\n\"Like, now, Kyle. He can't have gone far.\"\n\n\"He's probably halfway home by now.\"\n\nCassia stood up and grabbed her brother's phone off his nightstand. She tossed it on his lap. \"Then call him. He didn't deserve that.\"\n\n\"I didn't do anything that bad.\"\n\nStill a stubborn Morgan male. Cassia rolled her eyes and walked past him to the door. \"You lied to him and then used him in your weird attempt to come out to me.\"\n\nWhen Kyle didn't respond, she turned at the doorway. \"And for the record, I don't care if you're gay, straight, or into animals. You're my brother and it's never OK for you to have sex on my couch.\"\n\nHe looked over then, a tiny smile quirking his lips. \"Animals?\"\n\nShe shrugged. \"To each their own. Call Tyler. We can talk in the morning.\"\n\nWith that, she closed the door and left him alone.\n\nShe washed up, brushed her teeth, and went into her own bedroom, pulling her phone out of her pocket as she went. As she flopped onto her bed, she texted Dylan to apologize again for their aborted evening.\n\nThe phone rang a second later.\n\nShe put the phone to her ear. \"You didn't have to call.\"\n\n\"I'm still driving so it's easier to call than text.\"\n\n\"Good point.\" She sighed, rolling to her back. \"I'm sorry about all that.\"\n\n\"Don't worry about it. How's your brother?\"\n\n\"He's upset, and probably feeling like an ass.\" Cassia gave him a quick rundown of what Kyle had told her. \"I hope they can work it out. I've always liked Tyler.\"\n\n\"High school relationships don't always last forever.\"\n\nCassia could hear his turn signal in the background. \"That's true. Mine didn't.\"\n\n\"You had a high school sweetheart?\"\n\n\"Sort of. We dated and went to prom together.\"\n\n\"I see. And was your prom everything a traditional prom is meant to be?\"\n\nCassia laughed. \"Are you asking if we did it at prom?\"\n\n\"I'll tell you if you tell me.\"\n\n\"As a matter of fact, we didn't.\" Cassia smiled. Why she didn't mind talking about this sort of thing with Dylan, she didn't know. She didn't care, either. She just enjoyed talking to him, about everything. \"It was later, right before he left for college.\"\n\n\"How long were you together after that?\"\n\n\"Oh, maybe a couple months. We broke up when he came home for Thanksgiving that year, but I wasn't all that upset. You kind of expect it not to last, especially considering the distance and our ages.\" She left out the part when that old boyfriend had come home from college, saying he couldn't see himself with someone like her anymore, not when he'd been surrounded by so many hot co-eds and that she didn't know what she was missing by not having gone to college herself.\n\n\"I suppose you're right.\" There was a pause and then Cassia heard the engine cut out.\n\n\"Are you home already?\"\n\n\"Yeah. There was no traffic.\" There was the sound of his door opening and closing.\n\n\"It's your turn. Tell me about your prom.\"\n\n\"Well, we don't really have prom. Not like you do here, but I only went with a few friends, no dates.\"\n\n\"You didn't have a high school sweetheart?\"\n\n\"Not really. I dated a little bit, but nothing lasted for long.\"\n\n\"Why doesn't that surprise me.\"\n\nDylan chuckled. \"Yeah, it really shouldn't.\"\n\n\"You probably spent all your time playing hockey, thinking about hockey, and studying to make sure you got into college.\"\n\n\"Pretty much. Plus, girls are complicated.\"\n\n\"You don't have to tell me that.\" Cassia laughed. \"I am a girl and didn't even know what was going on half the time in high school.\"\n\nDylan laughed with her. \"Hey, do you have plans for tomorrow night?\"\n\n\"No. Why?\"\n\n\"I think it's time we do have that date I mentioned.\"\n\nCassia grinned, even as she warmed through at the thought of going on a real date with Dylan Samuels. Not a pretend one where they'd be worried about everyone watching them. \"What did you have in mind?\"\n\n\"I'm not sure yet, but how about I come pick you up at seven?\"\n\n\"Sounds great.\"\n\nThey chatted for a few more minutes before Cassia started yawning repeatedly. After all the excitement of the night, she was exhausted. She fell asleep, her dreams a weird mixture of hockey and shooting stars that looked like the Dallas logo.\n\n****\n\nDylan arrived at her apartment at six fifty-three and ran into Kyle on his way up the stairs.\n\n\"Hey, Kyle. How are you?\"\n\nKyle stopped. \"All right. Look, I'm sorry about last night.\"\n\nDylan waved a hand. \"Don't even worry about it, man. I'm just sorry we interrupted you.\"\n\nKyle blinked, clearly taken aback by his response.\n\nDylan grinned and clapped him on the shoulder. \"No one wants that.\"\n\nAfter another moment, Kyle burst out laughing. \"You and Cassia are so perfect for each other.\" He continued on his way with a wave as he disappeared out the door at the bottom of the stairs.\n\nDylan watched him go, feeling hot under the collar. Then he cleared his throat as he walked up the rest of the way and knocked on Cassia's door.\n\n\"Hi.\" She opened it with a harried smile, wrapped in nothing but a towel, her damp hair all over her shoulders.\n\nEverything Dylan had been thinking a second ago vanished when he saw her. Pretty much every thought he'd ever had went up in smoke.\n\n\"I'm sorry. Work ran late and I just got home twenty minutes ago.\" She turned to walk away. \"Come on in. I'll be just a few minutes, I promise.\"\n\nShe disappeared down the hall before he had even walked inside. His heart started to pound as he turned and closed the door. What he wanted to do was lock the door, follow Cassia to her room, and yank that towel off her body. He didn't think he had the courage for that. Instead, he listened to the sounds of her moving around her room, her closet opening, something else banging, and her muffled oath that followed. All the while, he paced through her living room, alternately staring out the window and checking her collection of books and movies on the shelf.\n\nHe ended up on the couch, his head thrown back against the cushions and his eyes closed. He could still hear Cassia moving around and hoped she'd appear, fully clothed, soon, so he could stop picturing her in that damn towel.\n\n\"Dylan?\"\n\n\"Yeah?\"\n\nFootsteps sounded and the couch dipped beside him. He kept his eyes closed, even as Cassia touched his arm.\n\n\"Are you all right?\"\n\n\"Yeah. I'm just trying to focus.\"\n\nShe laughed. \"On what?\"\n\nHe hesitated, his heart skipping a beat or two when she ran her hand down his arm until their hands were linked. Oh, to hell with it. \"I'm trying to keep myself from jumping on you like a horny sixteen-year old.\"\n\nWhen she didn't respond, he opened his eyes. She was looking at him, her lower lip caught between her teeth, and those amazing grey-green eyes dancing with amusement. \"Was it the towel?\"",
        "He chuckled. \"It was everything, Cassia.\"\n\nHer fingers tightened around his before she ran her hand back up his arm. She played with the button at the top of his shirt. He found that he really loved it when she did that. Then it popped open and she undid the next one. When her hand slid across his bare chest, Dylan swallowed hard and put his hand over hers.\n\n\"You want me to stop?\"\n\nHe shook his head, unable to look away from her perfect eyes. He wanted to never not have her close enough to touch again. But he'd come tonight with the intention of doing this right, taking her out, treating her to a great meal, making her feel special.\n\nShe shifted up onto her knees, and leaned over him, a wicked smile on her beautiful face. Her hand moved on his chest again, her fingers rubbing over his skin until he shuddered.\n\n\"Because, I can stop, if you want.\"\n\nHe shook his head again, incapable of words. More of his buttons parted, until his shirt was hanging open to his waist. There was no way he could disguise what was going on below his waist either. But Cassia didn't look away from his face. She continued to stroke his skin, leaning against his shoulder.\n\nEnough of this.\n\nDylan lifted his hand, pushing his hand into her still-damp hair and pulled her face to his. His tongue parted her lips and she moaned into his mouth, her hands coming up to his shoulders. Her surprise dissolved as he took the kiss deeper, and he dropped a hand to wrap around her waist, pulling her closer.\n\nEvery single one of her curves felt incredible and she was so warm and soft in his arms. One of her legs slid over his until she sat in his lap, her fingers sliding into his hair, the scrape of her nails on his scalp making him shiver.\n\nHe pulled back, breathing hard, and stared into her flushed face.\n\n\"What?\"\n\nHe shook his head. \"I was just thinking... we're on the couch.\"\n\nCassia laughed and nodded, looking around them. \"We are. I can keep a secret if you can.\"\n\nDylan followed her glance and shook his head. \"No. We should get up.\"\n\nHer smile dimmed but she pushed off of him, rising to her feet. He could see that she would have walked away but he grabbed her arm and headed down the hall. She let out a breathless little laugh that he loved and followed as they walked into her room. Dylan slammed the door and turned, hauling Cassia into his arms.\n\nNo, the couch just wouldn't cut it. Not this time.\n\nInside the privacy of her room, he didn't hesitate. He kissed her, drinking in all the little moans she let out and sliding his hands up and down her sides until he had her ass in his hands. She felt so good pressed against him. In another few seconds, Dylan felt his knees shake and he turned, pressing her back against her bed.\n\nTheir kiss broke with a gasp, and Cassia stared at him. Her eyes were bright, her cheeks flushed, and those amazing lips were damp from his kisses. Dylan brushed her hair back over her shoulders and moved his hands down to the hem of her shirt. He lifted it without a word, and she raised her arms, letting him slide the shirt right off over her head. Not looking away from her eyes, he undid the button on her jeans before hooking his thumbs over the waist and pushing them down her legs.\n\nThat she was letting him do this was as much of a turn-on as her kisses. He wrapped his arms around her again, brushing her lips with his until she teased him back with her tongue.\n\n\"Get on the bed.\"\n\nShe blinked, and he could only assume she was as surprised as he was by the command. She did as he asked, pulling herself into the center of the bed, while Dylan watched and kicked his shoes off. Then he followed, reaching for her bra, divesting her of it as fast as he could. Her giddy laugh was stopped by another kiss and he let himself sink into her, his hand running up and down her naked side to the only strip of clothing left on her. Taking hold of one side of her panties, he pulled and sat back on his knees as he slid the fabric down her legs. Then he tossed them over the side of the bed, and looked his fill. He stared at every inch of her, starting with her toes, and traveling up her legs, his mind and everything stalling out when he got a little higher.\n\n\"What are you staring at?\"\n\nHis eyes darted to her face, which was pink. He leaned over her, putting his hands to either side of her head.\n\n\"You're beautiful.\" He may have a degree in literature but at the moment, words failed him.\n\nHer eyes dropped and she bit her lip. He kissed her face, her cheeks, her nose and the corner of her mouth before she turned her head to catch his lips with hers. He obliged, for the moment. He wanted to keep on kissing her for a good long while. But he also wanted to see what she'd do if he kissed other parts of her.\n\nThe thought drew his attention away from her luscious mouth and down her throat as she lifted her chin. He reached her chest and spent a moment just stroking one hand around the curve of each breast. The more he touched her, the heavier her breathing became, and the more she trembled under him.\n\nIt was a heady feeling. Cassia wasn't shy or restrained. She spoke her mind, she knew what she wanted, and he was just lucky that it was him.\n\nHis circling caresses brought his touch closer to the taut nipple in the center and he bent his head, licking in circles while she arched off the bed.\n\n\"Jesus, Dylan...\"\n\nHe grinned, doing it again and again until she had her hands clenched in his hair. He lifted his head, still laving one delicious nipple as he did. She looked down at him, her eyes dark.\n\n\"You have too many clothes on.\"\n\n\"Naw.\" He sucked hard for a second, loving the reaction he got. \"You just have too little on.\"\n\nShe laughed, a weak, breathless sound, that had him moving his mouth lower. He trailed kisses down her stomach to her navel, and placed a gentle love bite to the curve of her hips. She jerked in his hold, one leg coming up to brush against him. He looked up at her face as he pushed that leg aside and slid lower.\n\nHe stroked his tongue from the bottom to the very top, ready to die of happiness at the sheer taste of her. She was so warm, so silky sweet in his mouth, that he was a mass of sensation and he hadn't even taken a single piece of clothing off. When he licked her again, pausing to swirl his tongue around that singular spot, Cassia let out a cry and her hand came down on his head as she twisted away from him.\n\n\"Cassia?\"\n\n\"Oh God, Dylan.\" She covered her face with both hands, her shoulders shaking.\n\nTerrified that he'd done something wrong, Dylan moved up and gently pulled her hands from her face. \"What's wrong?\"\n\nShe wasn't upset though. She was laughing. \"I'm just...\" she paused to catch her breath. \"This is going very fast.\"\n\nDylan squeezed his eyes shut, feeling like an ass. He rolled to his back beside her, flinging an arm over his face. \"I'm so sorry. I shouldn't have pushed.\"\n\n\"What?\" She sat up beside him but he couldn't look at her. So long as she was naked, he wasn't sure he could control himself. \"No, Dylan. That's not what I meant.\"\n\nWhen he didn't move his arm, she pulled it away, her mouth curved in an impish grin. \"Dylan, stop. I just meant that I wasn't expecting this from you so soon.\"\n\nDylan felt his ears heating and let out a short laugh. \"Neither was I. I guess we both underestimated your powers.\"\n\n\"My powers?\" She threw herself down on his chest, still naked and feeling incredible. \"What powers?\"\n\nAs she spoke, she played with the first button on his open shirt. He swallowed when she moved on to run her fingers across his chest. He held her around her waist as she worked her way down his shirt, parting it and sliding a hand over his stomach. His muscles jumped at her touch and she made a contented little noise that he quite enjoyed.\n\n\"I like having special powers.\" She leaned down and pressed a kiss to his chest, just below his collarbone, then another, closer to his chin, all while her hand stroked his stomach, slow strokes, up and down. \"Special powers over a hockey player, no less.\"\n\nAs she bent to kiss his neck again, Dylan caught her against his chest, holding her tight. Yes, she had special powers. The kind that made him feel like he could do anything in the world, all because she let him do them to her.\n\nUsing his weight, he rolled her onto her back again and loomed over her. He grinned when he saw her eyes widen as he pulled his shirt off and tossed it over his shoulder. He lowered himself, nudging her thighs apart with his shoulders, until he was back where he wanted to be.\n\n\"Now, where were we?\"\n\n****\n\nThey were in her bed, and she was stark naked. And Cassia couldn't believe what Dylan -- shy, unlucky with women, Dylan -- had done to her with his mouth. She stayed there, trying to catch her breath while Dylan stood up beside the bed, his hands working at his belt, his hungry gaze never moving from hers.\n\nShe watched him as he pushed his pants down and stepped out of them. Then she pushed herself up to her knees and threw her arms around him as he stood at the edge of the bed. His mouth came down on hers, their tongues gliding against each other.\n\nShy Dylan no longer. The thought made her grin and he pulled back to look into her eyes.\n\n\"What are you smiling at?\"\n\nShe shrugged one shoulder, loving the way their bare chests felt against each other. \"Everything, Samuels.\"\n\nHe chuckled, a deep sound that made her shiver. She was rapidly discovering there were many ways he made her shiver, the most recent being what he'd just done to her. At the memory, she felt heat rush to her face and she pressed her cheek to his shoulder.\n\nHe stroked her hair with one hand, his other holding her around her bare waist. Between them, she could feel the evidence of his desire, still wholly at attention.\n\nCould this be happening? Had they really gone from the occasional conversation over pie to full-bodied need and heated desperation in less than two months?\n\nDylan brought her face to his, pressing his lips to hers in a gentle kiss that made her ache for more. As if sensing the need in her, he dropped his other hand to her leg and tossed her onto her back on the bed.\n\nShe laughed but was silenced when he crawled over her, spreading her legs with his body as he did. Her breath caught when she felt the hard ridge of him brushing against her overheated core. He slid a hand along her thigh, pushing her leg to one side and stroking a finger along the back of her knee.\n\n\"Dylan...\" Cassia didn't even care that she sounded like she was begging. She was. She wanted this, wanted him, so much more than she ever thought she would.\n\nGone was the uncertainty and boyish charm. He was all man as he took hold of her wrists and pinned them to the bed beside her head. He pressed his mouth over hers, stealing her breath and rubbing his entire body along the length of hers. Cassia twisted beneath him, loving the way he held her down and took control. She loved his lips on hers and the taste of him, as much as she loved the way he brought a hand between them to stroke her, driving her to the edge with just a few moves.\n\nThen he was inside of her, driving every coherent thought from her mind. She cried out at the first, full rush of sensation as he drove in, pulled back, and thrust again. He released her arms to brace himself over her and she clung to his neck, arching off the bed like a bow. He dropped his head, his hot breath on her neck before he kissed her there, drawing his tongue up to her ear, where he clamped his lips around her ear lobe.\n\nCassia moaned, turning her head to one side, not sure if she wanted to escape the overwhelming feelings he was giving her or beg for more. He was turning her inside out. Dylan trailed kisses along her jaw, stopped to nibble on her lower lip before he grasped her thigh and lifted it, pushing himself deeper inside. Their lips met again in an explosive kiss, as she dug her nails into his shoulders. Her climax shot through her veins and she cried out, twisting in his arms, trying to catch her breath.\n\nHe pressed her down into the bed, moving faster, sliding back and forth, prolonging the dizzying sensations. His mouth was open on the skin of her neck and he was breathing hard, a second before he came apart in her arms. A groan wrenched out of him and his hold on her thigh became almost bruising.\n\nCassia gasped when he turned his head and kissed her neck. She felt so sensitive, over every inch of her skin, and wondered if she'd ever feel like herself again.\n\nAfter what may have been hours, Dylan moved off of her, flopping onto his back, his chest heaving. Cassia stayed where she was, rolling her head to look at him. He turned his face to her and they grinned, identical sated, silly grins.\n\nHe rubbed a hand over his stomach and Cassia watched the motion with avid interest. The man was a work of art. Those abs, that broad chest, and those arms... she now knew how strong he was, and she didn't mind letting him take over. Not at all. Her heart skipped a few beats at the thought. How could she possibly want more already?\n\nAt the sound of his voice, she met his eyes again. \"I don't know about you, but I'm starving.\"\n\nCassia didn't know whether to laugh or cry. The thought of having to drag herself up and get dressed so they could go for dinner was almost painful.\n\nDylan reached out and pulled her to his side, bending his head to kiss her forehead. \"Why don't we order in?\"\n\nShe squeezed her eyes shut, falling in love with him in that instant, and scaring the life out of herself in the process. \"Dylan Samuels, you are my hero.\"\n\nHe chuckled, kissed her again, and slid off the bed to search for his phone. She eyed his backside and bit her lip as she pressed her face into a pillow.\n\nGet a hold of yourself, woman.\n\nHe sat on the edge of the bed, tapping on his phone while reaching his other hand out to stroke her backside. \"What do you feel like? Chinese?\"\n\n\"How about pizza? Kyle and I ordered Chinese a few days ago.\"\n\n\"Sure. What's the nearest place?\"\n\nCassia told him and he called the number that came up on the website. After a few minutes, the pizza was on its way, and Cassia dragged herself out of bed. She walked over to the closet, feeling Dylan's eyes on her the entire way.\n\nHe continued to watch her as she pulled on sweatpants and a tank top. \"Why are you getting dressed?\"\n\nShe turned to him with a smile and crossed to stand between his legs. \"Because we can't answer the door without clothes on.\"\n\nDylan nodded. \"Good point.\" He didn't move to get dressed himself, instead wrapping his arms around her middle. \"This wasn't exactly what I had planned for our first date.\"\n\nCassia laughed and draped her arms on his shoulders, her fingers playing in his hair. \"No? This is exactly how I pictured it.\"\n\n\"Seriously?\"\n\nShe laughed again at his expression. \"Well, it's how I pictured it ending, at least.\"\n\n\"I see.\" His eyebrows shot up. \"If I'd known that, I'd have asked you out the first day we met.\"\n\n\"Gawd, all you guys are the same, aren't you? It's all about sex.\"\n\nDylan nodded, his smile wry. \"Yup. It's all I care about. That's why I've had more pie than I should, and went to that cookout with you, and gave you this...\" He lifted the tiny pie from her chest. \"All I wanted was to get in your pants.\" As he said that last, he pushed the elastic waist of her sweatpants down, planting hot kisses to the skin he revealed on the way.\n\nCassia smiled as she looked down at him, barely keeping herself from crawling onto his lap. \"Well, it worked. You got in my pants.\"\n\nWhen he looked up again, his blue eyes were full of mirth and he rose to his feet, wrapping her in his arms. \"Technically, I didn't get into your pants. I got you out of them.\"\n\n\"You really want to argue semantics?\"\n\nHe shook his head. \"No. I really want to do it again.\"\n\nShe grinned until his stomach emitted a loud rumble, making them both laugh. \"Soon, Dylan. Very soon.\"\n\n\"Unless Kyle comes back.\"\n\nCassia shook her head. \"He's working the late shift. He won't be home until one or two in the morning.\"\n\n\"Excellent.\" Dylan kissed her. \"That gives me plenty of time.\"\n\n\"Plenty of time for what?\"\n\n\"Two or three repeats.\"\n\nCassia's eyes widened and Dylan kissed her again. \"At least.\"\n\n\"I'm impressed, Samuels.\"\n\n\"Not yet.\" His hold dropped to her butt and he squeezed. \"But you will be.\"\n\nWhen he released her, she let out a breathless laugh. Leaving him to put on his clothes, she walked down the hall, her mind reeling.\n\nA short while later, they snuggled up together on the couch, watching some movie that neither of them paid much attention to.\n\nCassia loved how she fit against his chest while they sat, his chin brushing her forehead when he spoke.\n\n\"What were your plans for tonight anyway?\" She trailed her fingers over his chest and down his stomach.\n\nHe made some noise in his throat and put his hand to her wrist to stop her movements. \"What?\"\n\nShe let out a soft laugh. It was his own fault for leaving his shirt hanging open. She tilted her head back to look at him. \"Your plans? For our date?\"\n\n\"I'm going to keep it to myself for now. Might still surprise you some other time.\"\n\nShe pressed her cheek to his chest. \"You surprised me tonight.\" And she'd surprised herself, with the revelation of her feelings the last thing she'd have expected.\n\nHis arms tightened around her. \"I think I'm ready to surprise you again.\"\n\nShe laughed and continued to laugh, until he picked her up, carried her to bed, and got in her pants. "
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey",
        "hockey player",
        "hockey team",
        "hockey romance",
        "athlete",
        "sports",
        "sports romance",
        "romance novella",
        "drama",
        "love story"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/reflections-on-ice-ch-06"
}