{
    "title": "Karina The Sorceress Ch. 04",
    "pages": [
        "The door burst open, and three men poured into the room. I recognized one man as the manager of the establishment, a short, gray-haired, tough-looking fellow. \"Are you ok, miss?\" he demanded. Then he did a double take, seeing me dressed in my lewd outfit and slave chains. He was looking at me, as if trying unsuccessfully to recall my face. Finally he turned and looked suspiciously at the large figure smirking at my side. The three men who'd followed him spread out around the tall figure. Although they couldn't know what he really was, the demon was an imposing figure, even in human form. The men drew their swords. \n\n\"This man broke into my room,\" I said accusingly, glaring at the demon. \"I want you to arrest him!\"\n\nThe gray-haired man looked at the demon. \"Explain yourself, stranger,\" he said, menace in his voice.\n\nThe demon turned to face the man. He wore a sword, but he made no move to reach it. Instead he simply gestured, toward me. \"Is this girl one of your slaves?\"\n\nI sputtered indignities. \"I'm not a slave!\" \n\nThe demon raised an eyebrow, \"You are what then, a free woman dressed in a slave's clothing, wearing slave chains?\" he said, looking doubtful. \n\n\"I . . . I will not be spoken to this way!\" I exclaimed. \"I'm a guest here, and I want you to remove these chains he put on me, and . . . arrest this man!\"\n\nThe gray-haired man looked at me curiously. His eyes trailed downward, taking in my flushed face and heaving breasts, thinly covered by the white top. I paled as his eyes traveled down my body, following the chain that dangled between my breasts, over my belly, to disappear between my split panties. I winced as I realized the chain was still held within the folds of my pussy. My knees started to bend inward, to try to cover myself from his intense gaze.\n\nThen his eyes returned to my face, and I saw what looked like recognition.\n\n\"She is indeed dressed in slave chains, and a slave's entertainment garb, ours in fact,\" he said to no one in particular. Then he looked at the demon. \"And these chains are certainly ours. But to answer your question, she is not one of ours, she arrived with one of our guests.\" \n\n\"I'm not anybody's slave,\" I corrected. \"I . . . I was simply dressing up . . . to please my friend. And then this . . . beast broke into my room, and put these . . . terrible things on me!\"\n\n\"And where is your friend now?\" asked the manager, his voice sounding a bit skeptical. \n\n\"He\u2014he's outside, nearby I think,\" I said, \"I'm sure he'll return soon.\"\n\n\"Ask her if her friend is her husband,\" suggested the demon. \n\nThe gray-haired man looked at me, then the demon, curious. Then he shrugged and asked me. \n\nI didn't know what business that was of theirs, but didn't see the harm in answering. \"No, he's not,\" I said. \n\n\"Then you should arrest her,\" said the demon, looking coolly at me. \"Because this female is a convicted adulteress, and if he isn't her husband, it looks like she's back to her old ways.\" \n\n\"What? That's ridiculous!\" I protested, looking at the manager, who looked as shocked as I. \"Get him out of my room!\"\n\nThe manager clearly didn't like being given orders by a woman, for his eyes narrowed and he spoke in a low voice. \"Silence, girl. I will take care of this, not another word from you, unless you are asked, understood?\"\n\n\"Take these chains off me at least!\" I demanded, my voice breaking under the strain of the situation.\n\nThe innkeeper shot me a 'silence' look. \"We will, as soon as we ascertain the truth!\" he commanded.\n\nBarely containing my indignation, I managed to nod in agreement. What choice did I have? \n\n\"Good,\" said the man, turning from me to the demon. \"Now explain yourself quickly, sir, or I shall have you removed from this establishment.\"\n\nThe demon shrugged, as if it didn't really matter to him. He gestured at me. \"It is simple really, she is a convicted adulteress, and she bears the mark.\"\n\nI gaped at him. What was he talking about? I looked at the manager, and he was looking at me differently. He seemed to be thinking, and he was still looking at me, making me nervous.\n\n\"What, I don't understand,\" I said. \"What mark is he talking about?\"\n\nThe manager looked at me curiously, then spoke. \"As you . . . may be aware, in our province, female adultery is a serious crime, and those guilty are branded, so that all may know their shame.\"\n\nHow revolting I thought. Just the women? And for adultery? \"And he says I have one of those brands? That's absurd, I've never even been married,\" I retorted, glaring at the demon. \n\nThe manager nodded solemnly. \"Perhaps. But I'm afraid I must check if his claim is true.\" He turned to the demon. \"And if what you say is false, I may decide to arrest you, sir, for fraud.\"\n\nThe demon didn't say anything, so the manager turned back toward me. Before he spoke, I took a step back. \"Wait a minute,\" I said. \"You can't be serious!\" He was serious, and he gestured toward his men. Two of them moved to me and grabbed my arms. \"Let go of me!\" I exclaimed, struggling to release my arms from their grip. The men held me easily, bound as I was. They both smiled, looking at my barely covered body. One of them spoke to the others. \"She sure has the body of an adulteress.\" The men laughed at my expense, and my reddened features only increased their amusement.\n\n\"Turn her around,\" said the manager, who hadn't been laughing. Despite my struggles, the two men spun me around so that my back faced the manager, each of my upper arms held in a firm grip. \"Now check her.\"\n\nI squirmed and muttered indignations as I felt a hand lifting up my thin skirt behind my back, to expose my ass. I felt a hand touching the upper part of my butt cheek.\n\n\"I'll be damned, boss,\" said the man with his hand on me. \"He's right.\"\n\n\"W-what?\" I gasped, craning my neck to try to see, but I couldn't see what he was pointing to. \"There's nothing there.\"\n\nThe manager could see however, and when the men spun me around, I saw that the way he looked at me had changed. I felt a chill run through me. \"What mark?\" I said. \"It's impossible . . . I . . . show me in the mirror, let me see!\"\n\nThe manager looked at me impatiently, then gestured to his men, who roughly brought me over to the mirror. Looking where the one man pointed, I saw . . . \"Oh my god!\" I gasped. There was a black mark, just below the panty string on my right buttock; it looked a bit like a horseshoe, and it was small, but clear. I'd never seen it before. In fact, come to think of it . . . . it hadn't been there only minutes before, when I'd preened in front of the mirror.\n\n\"You!\" I suddenly shouted, breaking the loose grip of the two men as I spun to accuse the demon. \"You put it there, you horned river toad!\" \n\n\"Hold her you idiots!\" commanded the manager to his two men. They quickly moved to regain their grip on my arms and held me there, facing the demon, who stood smugly grinning as he enjoyed my struggles. \n\n\"No, let me go!\" I shouted, struggling uselessly. \"That bastard, he's a . . . I mean, he used magic to put that mark on me! I've never been married, I can't be an adulteress!\" One of the men painfully grabbed a fistful of my hair, drawing a yelp from me as I was pushed to my knees. A hand on my neck kept me in a kneeling position. I was about to let out another tirade at the manager, when a stinging slap to my face made me cry out, more in surprise than pain.\n\nMy eyes shot to the manager with anger, and I was shocked to see the change in his manner. As he crouched before me, his polite, almost respectful expression was gone, replaced by menace. I had been about to let him have it, but his look momentarily stole my voice. He spoke before I could.\n\n\"Now listen to me, girl, for I'm only going to say this once,\" he said, his voice now so hard and uncompromising that my anger was suddenly wavering. \"I gave you a lot of leeway because I thought you were my guest. I won't tolerate any trouble from a criminal, especially an adulteress. You'll be silent now, and speak only when spoken to. Any more accusations toward this gentlemen, or any more outbursts, and I'll have you stripped naked and whipped soundly. Do you understand me?\"\n\nMy mouth hung open in shock, trying to digest the rapidly changed situation. I like to think of myself as a strong woman, but at that moment, bound and on my knees, my magic gone and my face stinging from the slap I'd received, I felt anything but. I simply nodded, not wanting to speak, for fear my voice would crack.\n\n\"Good,\" said the man, his anger easing slightly. As I knelt on the hard wood floor before the four men, I noticed how they now looked at me entirely differently. Their polite looks of interest were now replaced by open leers, with no regard to my modesty. I wasn't used to men looking at me that way, would never get used to it. Being bound and on my knees made it considerably worse.\n\n\"My apologies, sir,\" said the gray haired man, looking at the demon. \"You are correct that she is a convicted adulteress, and by her own admission, she has committed her crime a 2nd time. We will take her away immediately for sentencing.\" \n\n\"Sentencing?\" I blurted, drawing a hard look from the man.\n\n\"Silence, girl,\" he said. \"I won't warn you again.\" A sound of protest escaped my lips before I stopped myself. It would do me no good to be whipped, and words at this point weren't likely to convince them of anything. I remained silent.\n\nThe demon smiled, not looking at me. \"I look forward to her sentencing,\" he said, as if making idle conversation. Both men looked at me then, and I tried to tell myself it was just a temporary predicament. The demon had used magic to place the mark on me, that meant it would disappear with time or distance. But neither would be easy to come by. \n\nThe innkeeper looked at me. \"Get her on her feet,\" he said, gesturing to the two guards at my side. The two men lifted me to my feet, and the innkeeper looked me up and down. \"I just have a few questions for your sentencing.\"\n\n\"Let's see,\" he said, pulling out a writing implement and a small scroll. \"Height, hair color, dark brown, yes . . . eyes a greenish brown -- very pretty those, though tinged with anger at the moment. That'll change, love, they'll fix your insolence, do not worry.\"\n\nI glared at him, and the demon. They could both roast in hell together, if I had my choice. \n\n\"Breasts . . . should we get the measuring string? Maybe not necessary, I'll just guess. Virgin? Hmm, that's a silly question to ask an adulteress, eh? Answer it anyway, you never know.\"\n\nI looked with open-mouthed shock at the men, as they talked amongst themselves about my status. I shook my head, protesting, \"Of what concern is that?\"\n\nThe gray-haired innkeeper looked up from his paper, and took a step toward me. \"Spread your legs, slave,\" he said, his eyes shining as he looked at me.\n\nMy eyes grew big. \"What?\" I stammered. \"No!\" I protested, twisting in their grip. They could whip me if they wanted to, but I wasn't going to spread my legs for some kind of twisted inspection.\n\nThe innkeeper didn't ask again, instead he nodded toward the guard to my left. \"You have your whip? Give her ass ten strikes, just hold her.\"\n\n\"No wait, please!\" I said, my courage foundering. I lowered my head. \"I'm not a virgin . . .\"\n\nThe innkeeper lifted my chin, enjoying the look of shame on my face. \"Spread your legs, slave, I won't ask you again.\"\n\nThe rose tinge on my cheeks increased as I spread my thighs, and I closed my eyes, not wanting to see his expression of satisfaction. \n\n\"Oh!\" I gasped, when I felt rough fingers at the folds of my still moist crevice. Then he inserted a finger into my wetness, and my thighs jerked, a moan slipping from my lips. My head went back and I bit my lower lip, containing a whimper as he moved his finger around. Satisfied, he removed his hand. \n\n\"Quite aroused, this one,\" he declared, wiping his finger on his jerkin. \"And not a virgin.\" He looked at the demon. \"We have no way to thank you, sir. But perhaps, you'd like to have a little fun with her before we take her away?\"\n\nThe men all seemed to smile in unison, but I was shaking my head. \"No, please.\" I murmured, squirming helplessly in the tightened grip of the men at my side. \n\nThe innkeeper ignored my protests and was looking at the chain dangling between my breasts. He reached out a hand to take gentle hold of it. My eyes went wide, remember how the demon had used it on me, and the innkeeper smiled. \n\n\"Ah,\" he said, smiling at the demon, \"you know what this chain is for then?\" When I didn't answer, his eyes darkened, \"answer me, girl!\"\n\n\"I . . . I'm sorry,\" I stammered. I nodded toward the demon. \"Yes. He . . . he used it on me.\"\n\nThe innkeeper turned to the demon, and handed him the chain. \"She seems in need of some discipline, sir,\" said the innkeeper.\n\n\"No!\" I exclaimed, \"what are you doing?\"\n\n\"Silence, slut,\" said the demon, at the same time, his hand jerked up on the chain, drawing a cry of surprise and shame from my lips. \n\n\"I'm not a slut, please stop!\" I choked, my thighs coming together with a fleshy slap. He yanked the chain higher, up between my nether lips and against my tender hood, and I moaned in misery. \n\nThe demon spoke, not to me, but to the two men at my side. \"She seems in great need, boys. See if you can ease the tension in those breasts . . .\"\n\nI gaped at him, turning to look at the man beside me. He was grinning, all but drooling as he reached up his free hand to my breast. I groaned, as rough hands came to each of my breasts, to squeeze me hard. \n\n\"Gently boys,\" scolded the demon, \"she's not a cow. Light touches, like a feather. If you feel you must mash her nipples with your fingers, do it sparingly, as a reminder of her new status as a captured criminal.\"\n\nI was squirming, the chain still riding high up between my legs, the demon giving it gentle tugs. Now the two guards seemed to have caught on. They'd slid their hands up underneath my top, and were using their fingertips to gently explore my quivering breasts. \"Oh!\" I moaned, when first one then the other tugged firmly on my swollen nipples. My hips jerked on the chain, and I whimpered, shaking my head in disbelief.\n\n\"Tell us what you are,\" said the demon to me, twirling the chain around a bit, before pulling it hard, driving me up on my toes. \n\n\"Oh!\" I cried, my feet hurting from the strain, and my pussy burning. \n\n\"You're a slut, aren't you? There is no shame in admitting it, you cannot help what you are,\" said the demon, his voice a teasing accusation. \n\n\"No!\" I whimpered, trembling. The guards seemed to have lost direction, and were now just squeezing and flicking my nipples with their fingers. Crude technique or not, my breasts ached and my nipples felt like bursting. Yet the two men continued patiently and methodically, and I was reminded how patient men could be when tormenting a female. \n\nAnother minute and I felt the wave building again, my body responding beyond my control. \"Oh god!\" I choked, my breasts arching into their hands, my thighs parting slightly to let the chain grind against my burning clit. It was coming, and I embraced it . . . \n\n\"Easy girl,\" said the demon suddenly, letting the chain go slack. \"You haven't earned the right to cum.. Just keep her on boil, boys,\" he added, waving toward the two men enthusiastically fondling my heaving breasts.\n\n\"No, you can't!\" I croaked, feeling my orgasm begin to slip away. I whimpered as my desire eased ever so slightly to a torturous burn. \"You're a bastard,\" I said to the demon, hating him.\n\nThe men chuckled, finding renewed energy in the realization that it was torture for me. I looked desperately at the innkeeper. \"Please sir, you must make them stop!\"\n\nHe shook his head. \"You are a criminal, and clearly a wanton slut as well, you have no rights.\"\n\nI moaned again, my body squirming to their rough manipulations. \"No! I\u2014I deserve a trial\u2014Oh! Please, w-what if I'm right, and\u2014and this is just a trick,\" I looked frantically from the innkeeper to the demon, but neither showed me the least bit of compassion. \n\n\"You're a natural born slave,\" said the demon, tugging the chain for emphasis. My knees nearly buckled, but I shook my head, my dark hair thrashing about. \"Perhaps they will grant you what you truly desire.\"\n\n\"No!\" I protested meekly, my chest struggling to escape the relentless torments of the two guards. I didn't know what he meant, but it didn't matter. \n\n\"Beg these men to use you,\" pursued the demon, \"you crave release, they will give it to you.\"\n\nI did crave release, for cumming would return my magic. My mind had been working on spells I could use, even while bound. Some spells required use of the hands, others only the spoken word. Perhaps there was a chance . . . no! I would not debase myself, with two filthy inn guards no less. \n\n\"You beg them, demon!\" I cried, my eyes shooting daggers at him. \"Perhaps they will give you what you need?\"\n\nSlap! I gasped as I felt a stinging pain on my ass; one of the guards had spanked me. \n\n\"Silence, slut,\" he said, slapping me again. I cried out in pain this time, the pain snapping me out of my desire-induced stupor. \n\n\"Go to hell, pig-face,\" I retorted, turning to face him. Men who struck women in chains . . . they all deserved a good burning spell. Yet I was indeed in chains, an easy target for him, and his hand wound up for a vicious slap to the face. I winced in anticipation, yet in mid arc, the demon's hand shot out, catching the guard's wrist.\n\n\"You touch her again, I will break it off at the shoulder,\" hissed the demon. I could swear his eyes turned red, and perhaps the guard saw it, for he stepped back suddenly. The other guard forgot about mashing my breast, and reached for his sword. \n\n\"Listen mister,\" the second one said, \"we're a gonna take this eager female away, and 'ave a little fun with her, understand?\"\n\nTensions were quickly escalating, but I was just grateful that their slimy hands had left my flesh, and were now tightly gripping the hilts of their swords. The demon, however, showed no fear, and he gave the guard's wrist a strong twist, so that he twisted back and fell to his knees.\n\n\"Listen to me, pig-face,\" said the demon to the still standing second guard. \"If I see that sword leave its scabbard, I'm going to rip his arm out and beat you with it.\"\n\nI watched the exchange in fascination. Yes, go ahead and kill each other, boys, I thought. The innkeeper however looked mortified by the thought of a battle in one of his rooms.\n\n\"Hold on a moment, men!\" he blurted, holding his hands up in a sign of peace. \"Nobody do anything rash! I . . . I will work this out, to everyone's satisfaction.\"\n\nEveryone's except mine, no doubt. The masculine glares continued for a few moments, and then finally the guard blinked, relaxing the grip on his sword. The demon with a huff let go of the other guard's wrist. I groaned in disappointment.\n\nThe innkeeper nodded agreeably. \"Yes, good! Thank you, sir, thank you! Err . . . sir, we really should . . . take her down for sentencing.\" Then he perked up with a thought. \"You're welcome to watch . . .\"\n\nMy eyes went to the demon, saw the anger in his expression. Yet suddenly it was gone, all too easily replaced by the familiar smirk. \"Yes, of course,\" he said finally, waving dismissively at me. \"Take her away.\"\n\nThe innkeeper smiled and nodded, gesturing to the guards. I wasn't sure I wanted to go with them, nor did I want to stay with the demon. But no sooner had I framed the thought than I was half walked, half carried out the door. \"No!\" I shouted back as I was taken out of the room, \"I want to speak to an official!\" \n\nThe two goons took me down the stairs, laughing to each other at me. \"Be wary of what you wish for, adulteress.\" \n\nThat was clearly an inside joke, which I wasn't privy to, and I cursed the two men under my breath. At the bottom of the stairs, instead of turning to head toward the main hall of the inn, where we'd checked in, they turned the opposite way, taking me down a long hallway lined with boxes of cheap wine and vegetables. With a burly hand on each of my upper arms, I was paraded through a series of doors and short hallways, and I realized I'd had no idea this place was so large. Suddenly one of the men stopped, forcing me and the 2nd guard to stop as well.",
        "\"Ilias,\" said the man, looking at his buddy suddenly. \"How long since you've used a female?\"\n\nThe second man frowned, and then both sets of eyes turned to look at me. I realized my face was still slightly flushed, and my nipples were poking against my thin top. The men were looking at me in a most ungentlemanly manner. \"She looks ripe, doesn't she?\" said the second man.\n\nI gasped, shaking my head rapidly, \"No! What . . . don't even think it,\" I warned, trying to look threatening. It was a difficult task dressed like a slave girl, with one's wrists bound behind her. I was too late, for one of the men was opening a side door, and I was quickly pushed into the room, sputtering protests. \n\nThe room was small, dominated by a low cushioned platform against one wall, like a bed, but lower. I suddenly felt myself lose my balance as I was pushed onto the platform, my face landing on a pillow as I was unable to use my arms to stop myself. I quickly scrambled to turn over and face the two men. One of them was unbuckling his sword belt, and that sight made my insides tighten with fear.\n\n\"Go ahead and scream, girl,\" said one of them. \"These walls are filled with sheep's wool to quiet the sounds of pleasure. Or pain.\" The man stepped forward to grab my bare ankle and dragged me toward him. \n\n\"No, don't!\" I burst, trying to kick him in vain. His hand took a fistful of my hair, forcing me into a kneeling position on the soft platform. \n\n\"Show us a little respect,\" said the man, his hand twisted painfully in my hair. I thought of screaming, but my voice caught in my throat. \"Please, please don't do this,\" I said, the fear making me change tact. He only grinned, reaching a large hand down to squeeze my breast, drawing a groan from me. \n\nThe second man's pants were already down, and he reached into his underwear, pulling out a large and partially erect member. His buddy looked on in admiration, saying \"What do you say, Ilias, would you like her to service you with her lovely mouth, or her tight little flower?\"\n\nThis wasn't happening, couldn't be. \"You c-can't do this . . .\" I stammered, unable to tear my eyes from the terrible weapon attached to this ordinary looking man. His hand was squeezing my breast, his fingers tweaking my poor sensitive nipple, which responded against my will. He pulled down my top, exposing my breasts, and I moaned in despair, shaking my head.\n\n\"Oh, not to worry,\" said the ring leader whose hand gripped my hair. \"we're not unreasonable men. We'll give you pleasure as well as taking it. And we'll clean you up after, so no one will need to know. It will be our little secret,\" he added, with a laugh.\n\nI turned to look up at him, shaking my head. Desperation was making my mind work double time. \"But they will know,\" I said, \"I will tell them!\"\n\nThe man shrugged, \"they won't believe you. You're just a criminal. And a female.\" He was right of course, and I felt despair flowing into my veins. I was near panic, and I looked about the room, trying desperately to think. \n\n\"They w-will believe me,\" I stammered, fear making me quake as I spoke. \"B-because I'll describe this room, in detail.\" I used my shoulder to gesture, fear making my voice quake. \"That shelf there, w-with the green chalice and red leather prayer book. That crude painting of the Elorian mountains. This platform with sheets adorned with that purple crown, whatever it is.\" They looked at me blankly. I had to spell it out for them. \"How will I have known the inside of this room, if you claim to have taken me directly to sentencing?\"\n\nSuddenly the man looked less sure, I could almost see the slow-moving wheel inside his head that passed for a brain. Encouraged, I continued. \"I'll tell them about your friend's huge, crooked . . . thing there. They'll wonder how I could know about that, huh?\" \n\nWould they even know such details about a guard, I wondered. Apparently yes, I could see that from the look of shock on both faces. They were wavering, their confidence shriveling, as well as other things. I added the final jab.\n\n\"What will they do to you two, for raping a woman as . . . attractive as me, before I'm even sentenced? I'm guessing you'll be lucky if you're just fired. Maybe you'll go to jail with me?\"\n\nCrooked man was stuffing his now deflated member back into his trousers, and then he tied his belt. I felt the relief flowing through me when the other man pulled my top up over my breasts again.\n\n\"She's right, Quintus,\" the man said, \"we're just guards. If we get caught soiling a fine slice like her . . . come on, hurry, let's go drop her off and be done with it!\"\n\nI bristled at being compared with a slice of something, but as the two men hustled me out of the play room, relief poured ever me. I couldn't help grinning to myself. I didn't have my magic, but I still had more wits than these two put together. That was some sort of comfort. I resisted the urge to gloat, however. Pride was a powerful emotion in men. No need to tempt fate.\n\nWe must have been close to our destination, for the next door the men opened was a fairly large grassy area that was actually open to the sky. The heavy clouds kept the summer sun from blinding me as I was brought over to one of a half dozen small wooden platforms raised about two feet off the ground. I complained as the men suddenly stopped next to one of the platforms and hoisted me up onto it. \n\n\"Kneel on it,\" one of them said, and I tucked my knees under me with a mumbled curse, not wanting to push my luck with these two men who'd nearly gotten away with raping me. I was grateful for the thin cushion placed on the platform, not covering it, but just big enough for me to kneel on, my thinly covered bottom resting on my ankles. \n\n\"Hey!\" I exclaimed, as the guard reached behind me to pull my wrists. I could hear him doing something, and then he stepped away. He must have tied off the chain between my wrists to the platform. \n\n\"What are you doing?\" I complained as they stepped back. \n\n\"We can't have you wandering off and getting into more trouble,\" he said. I felt ridiculous kneeling on the platform and I tried to find a more comfortable position by unfolding my legs.\n\nOne of the men slapped my thigh. \"No!\" he ordered, \"you must kneel here, quietly, until you are sentenced.\" \n\n\"How long will that take?\" I demanded, glaring at them both.\n\nOne of them laughed. \"Not long, from the looks of you.\" I didn't know what they meant, and when that was apparent, they both laughed, even harder. Then their laughter died out, as they both stood there gazing at me, the curves of my breasts visible through the sheer material, two enticing peaks that they seemed to find fascinating. My earlier arousal had subsided somewhat. Yet at that moment, kneeling before two men, I found myself blushing at the twinge of pleasure I felt between my thighs, which were closed tightly to keep their prying eyes from seeing what they shouldn't. They seemed to be questioning whether they really needed to leave me alone. I shook my head, my anxiety growing again. Why wouldn't they just leave? Did men never tire of ogling helpless females? \n\nMercifully, a distant bell sounded, and the two men tore their eyes reluctantly from their kneeling prey, looked at each other and quickly hustled off to their next shift, leaving me all alone in the open air courtyard. \n\nI knelt there for a minute, wondering how I'd gotten myself into such a mess. It was bad enough I was in this predicament, but why did I have to be dressed so scantily? I felt like an idiot. My skirt was so short that the way I knelt, if I didn't keep my knees closed, anyone in front of me would have a nice view of my tiny panties. Tiny split panties, I remembered with a groan. Who created such a thing? Surely not a woman. At least the chain had fallen out, and now dangled loosely against one thigh.\n\nAfter another minute, I'd had enough, and I eased my legs out from under me, twisting so that I didn't have to sit upright. My ass felt barely covered by the skirt, sitting this way, but I didn't care, for there was no one to see me. Suddenly I heard the patter of running feet. I turned just as Alex appeared at my side, his eyes filled with concern, and . . . something else.\n\n\"Karina, I found you! And . . . what on earth are you wearing?\" Alex was looking at my panties with the fascination of a young male. I quickly straightened, snapping my thighs together with reddening cheeks.\n\n\"Alex!\" I gushed, \"what took you so long!\" I wanted to lean in and hug him, but of course it was impossible. As if reading my mind, he leaned down and gave me a tender hug. \n\n\"I was able to sell the ring!\" he exclaimed with a sheepish grin. \"Now I have enough money to get you out of here.\"\n\nI grinned at the thought of the demon's precious ring ending up on some rich proper lady's finger. \"Get me out of here, how?\" I inquired.\n\n\"I don't know,\" said Alex, his hand going to his chin. \"What are you arrested for?\"\n\n\"Adultery,\" I explained, with a look of disgust. \"The demon put some mark on me, that identified me as an adulteress. Is it still there?\" I used my bound hands to point. Alex nodded unfortunately.\n\n\"Adultery,\" repeated Alex. \"I don't know the punishment for that here, but maybe I can bribe an official, or . . . I'll claim I'm your husband!\"\n\nI shook my head. \"I don't need you to do that, I just need my magic back, and I can make the mark go away.\"\n\n\"Okay . . .\" said Alex, \"but I thought your magic was going to return since we removed the ring?\"\n\nI shook my head, \"I thought so too, but it hasn't. I think I know why.\" I looked at him, embarrassment making it difficult to continue. \"I think I need to climax, to complete the cycle.\" \n\nAlex gasped a bit, then after thinking, he nodded. \"That does make sense, from what you told me of the ring. So what will you do?\"\n\nI nearly laughed at the innocence in his eyes. \"Alex! My hands are bound . . . I can't do it myself . . . you have to help me.\"\n\nHis innocent look disappeared, replaced by shock. Alex's mouth was opening and closing like a stranded fish. \"Karina . . . I . . . I can't do that, not here, not like this!\" \n\n\"Yes, don't be silly, of course you can!\" I corrected hopefully, leaning toward him. \"Please, Alex, just . . . use your hand . . . it won't take much, with the state I'm in.\"\n\n\"Karina!\" he shushed, embarrassed by my frankness. \"Women shouldn't say such things!\" He thought for what seemed like a minute, seemed to change his mind. I watched, nearly salivating, for my need had grown high at the thought of his hand relieving me of my need. He reached out, his hand sliding up my bare thigh. I gasped, then widened my thighs, encouraging him. His hand slid higher, making me tremble in anticipation. Then suddenly he withdrew his hand. \n\n\"No Karina, I just can't, please understand, it's not right. I . . . I'll just go talk to the magistrate, get this cleared up. I'll be back very soon, just . . . don't go anywhere.\"\n\nWhere was I going to go? \"Alex, no, please!\" I begged, but he was already hustling away, as if eager to be out of my sight for fear of changing his mind. In just a few seconds, I was alone again, only now the terrible fire in my belly was rekindled. Minutes past, and no Alex; my legs were aching from kneeling on the platform. I was ready for my 'sentencing' by that point, eager to get a chance to explain myself. The demon wouldn't be able to follow me forever, especially if they sent me to some jail, and as soon as his magical adultery brand disappeared from my body, the reason for detaining me would disappear as well. As soon as I was free, I was going to track that bastard down and roast him with my best fireball. \n\n\"You just wait,\" I murmured out loud.\n\n\"Wait for what?\" said a deep male voice from behind me. I gasped and twisted my neck around. \n\n\"You!\" I hissed. It was the demon, he must have entered from the one open doorway behind me and out of my sight. \n\n\"My my,\" he said, moving around in front of me so I didn't have to crane my head to glare at him. \"What have you got yourself into this time?\"\n\n\"Me?\" I sputtered in outrage. \"This is your doing! You just wait 'til that brand you put on me wears off, then I'm coming after you.\"\n\nThe demon looked offended for a second, and then he grinned, looking down at me. He towered over the low platform I knelt on.. Damn if he wasn't almost painfully handsome, especially dressed as he was in formal leather armor, his muscular arms bare as he stood there with arms crossed on his chest, gazing down at me. I blushed suddenly, when he seemed to realize the effect he was having on me. Then he spoke. \"You're not ready for me yet, sorceress. But you're making progress.\"\n\nI remembered what he'd said, back in his cave. About how the ring would prepare my body for his eventual use. My jaw fell open as an image popped into my head, of being taken by this powerful being. I trembled slightly, then pushed that thought from my head. \"That's not going to happen. Clever, getting me sent to jail, but I don't know what you hope to accomplish -- once my magic returns, a jail won't be enough to hold me.\"\n\n\"What makes you think they'll send you to jail?\" he replied, in a matter of fact way. \n\nI blinked in confusion. \"Why . . . what else would they do?\"\n\nHe seemed to find great satisfaction in giving me the bad news. \"Where you come from, adulteresses are made into slaves. But in this district, such crime by a female is punishable by death. Carried out immediately after sentencing I believe. Married men don't like their wives cheating on them, it would seem. When do you expect your magic to return, because I think the sentencing will start any moment now?\"\n\nThe world suddenly dropped out from underneath me, and I felt like fainting. The demon's hand came to my shoulder to steady me. I looked up at him, and instead of cruelty, his eyes were almost tender. Almost. \"They . . . they can't do that . . .\" I muttered in a daze. Then I glared at him. \"You! This . . . this is some trick, you want something from me!\"\n\nThe demon raised an eyebrow innocently, but I would have nothing of it.\n\n\"No, I know you,\" I continued, grasping at hope. To my own ears, my voice sounded pitifully strained, fearful. \"You don't want me dead, s-so just tell me what I have to do, t-to avoid . . . such a fate.\"\n\nThe demon simply shrugged. \"I confess I wasn't any more aware of the local laws than you were. You might have thought of that before you screamed back in the room.\"\n\nIt couldn't end like this. I'd always found my way out of trouble in the past, had I not? I looked up at him, pleadingly. \"You put it on me, you can make this brand go away!\" I told him. \"Make it disappear and they'll let me go.\"\n\nHe shook his head, his look serious. \"It doesn't work that way. The spell will last the night, I can't undo it. I suppose you'll simply have to convince them of your innocence yourself.\"\n\nI sunk my head in defeat, tears coming to my eyes. I felt an almost gentle hand on my head, tilting my face up to look at him. Were it any other man, I might have been touched by his gentleness. Were he even a man. \"Look, just do your best to act . . .\" he gestured in the air, \"repentant, and . . . obedient. Powerful men can't resist that in a woman, if you convince them that you've mended your ways, and you'll never betray a man again, I'm sure you'll get off with a lighter sentence.\"\n\nHe wiped a tear from my cheek, and I suddenly felt a ray of hope. He seemed to be telling me the truth, I was sure he didn't want to see me executed either. And he was right, that men couldn't seem to resist a woman who acted like that. Under normal circumstances, obedient and contrite were not my strong points, but these were not ordinary times. \"All right,\" I nodded with a sniff. \"I'll . . . try.\"\n\n\"Good, that's more like the sorceress I know,\" said the demon, his deep, grumbly voice resonating pleasantly in my chest. \"But you had better confess, if they think you are the lying type, it won't go well for you.\"\n\nHe was probably right. They'd never believe me if I claimed it was magic that put the brand on me. \n\nThe demon held up his second finger to point at me. \"Now don't revert back to your usual difficult, stubborn self either.\" \n\nI shook my head in agreement. My life was at stake, I'd have to keep my pride in check. \n\n\"If a man comes to pass judgment on you, you might want to . . . offer to service him.\"\n\n\"What?\" I exclaimed, my eyes widening. \"Service him?\"\n\n\"Yes,\" said the demon, giving me a knowing smile. \"I think you've proven your lips are quite talented.\"\n\n\"I . . . I couldn't . . . do such a thing!\" I protested, tears welling up in my eyes. \n\nThe demon shrugged. \"It's your neck.\" Then he paused, cocking his head. \"Wait . . . they're coming.\"\n\nI sat up straight in alarm, not hearing or seeing anyone, but the demon had extrasensory perception. He suddenly gripped me by both shoulders. \"Quickly, sit up straight, up on your knees, that's right. And keep your back straight; good, just like that. Now remember, obedient and repentant, say it.\"\n\nMy eyes widened. \"Obedient and repentant, I got it. I can do that,\" I replied, looking about as he let go of my shoulders and moved away. Just as the demon left me, a stocky man dressed in dark leathers entered from the same door I'd been brought through. He was followed by two guards, better dressed than the previous ones, yet more impressive in stature as well. The man saw me, not even noticing the large frame of the demon disappearing through the open doorway on the opposite side. I tried to sit still and calm my trembling insides, as I nervously watched the man approach, his two guards in trail. \n\nHe was of medium height and muscular, dressed formally, and he had a stern look about him. Like a judge, I realized. He stopped in front of me, looking me up and down. He reached out to touch the chain that dangled from my collar, but thankfully he didn't use it to torment me. Then he moved around behind me, and I felt my skirt lifted up behind me. He gestured to the two guards.\n\n\"Remove this chain from the prisoner, it is obscene. And the collar as well.\"\n\nI tried not to look too grateful, but it was a blessed relief to be rid of the chain. When the guards were done, the man looked down at me directly.\n\n\"Adultery is the charge,\" he said. It wasn't really a question, but I felt compelled to speak anyway.\n\n\"Yes, but I\u2014\"\n\n\"Silence!\" he commanded, moving around in front of me again to shoot me a hard look. \"You will speak only when spoken to, and you will address me as \"Sir.\" I gulped, nodding quickly. Obedient and repentant, that was me. \n\n\"Good, now tell me as simply as possible, your side of the story. You said . . . the brand was put on you? By magic?\" He looked skeptical, to say the least.\n\nI hesitated for only a moment, and then the words burst from my lips, half acting, and half fear driven. \"No, I . . . I'm sorry . . . Sir. I made that up!\" I whispered, as if wanting only him to hear it. \"I . . . it's real, I was convicted in my own lands, where the punishment is less severe . . . had I known, I'd never have\u2014\"\n\n\"Yes, yes,\" he interrupted, \"so you admit you are guilty?\"\n\nI looked at him, trying to determine if admitting my guilt was going to be a smart move or not. But his face was impassive, almost bored. The next part was easy, for it was nearly true. \n\n\"My . . . my husband was an evil man, he\u2014he used to beat me . . . so I ran away . . .\" Well, he'd tried to beat me anyway. It was a mistake to try to beat a skilled sorceress. And we hadn't been married, therefore no adultery. But I didn't mention that.\n\nThe man held up his hand. \"How many men have you taken to your bed?\" \n\nIt was a strange question, and I answered without thinking, \"Only one, my . . . husband,\"\n\nSlap! One of the guards struck my face, not hard, but enough to snap me to attention. I looked up in confusion.",
        "\"Address him as Sir,\" said the guard in a matter-of-fact manner, as if impatient with a slow learner.\n\n\"I\u2014I'm sorry, only one, Sir!\"\n\nThe man gave me a very direct look. \"Only one?\" \n\nOh damn, I thought. Stupid me, how could one commit adultery sleeping only with your husband? I backpedaled quickly, \"I mean . . . the other man . . . we were caught in the act, so I didn't actually . . . sleep with him. Sir.\"\n\nThe man nodded, accepting my story. \"Very well then, on to your sentencing.\" He looked up at me with a deadly serious look. \"Where you come from, female adultery may be . . . distasteful. But here, we look on it very seriously. You're aware of the punishment for female adultery in our district?\"\n\nI felt light headed. \"Yes . . . yes sir!\" I blurted. \"I'm very sorry, I'll never do it again, I promise!\" I couldn't think of what to say that would sound repentant. \"Please, sir, I'll do anything, just tell me what I have to do . . .\"\n\nHe looked at me for a moment, without much expression. \"We carry out the sentence immediately, right up there on that platform,\" he said. I followed his arm to see a four foot high wooden stage, with rows of benches facing it. \n\n\"There?\" I asked, incredulous, \"before an audience?\"\n\n\"Oh yes,\" nodded the man. \"It draws quite a crowd, men in particular.\"\n\nI paled. How could people watch such a thing? \"Before an audience . . . you can't! How can you be so cruel?\" They executed the poor women on stage, probably with a dull, rusty axe. I was trembling in fear by now. \n\nHe didn't seem to have much sympathy. \"You should have thought of that before you committed a grave act. You deserve your punishment. Do you not?\"\n\n\"Y-yes, sir,\" I stammered, trembling, unable to even protest. Perhaps my usual bravery was a falsehood, easily stripped from me just like my clothing. I could only shake my head, pleading for mercy. \n\nThe man was looking at me oddly, and his expression changed subtly. \"There is . . . another way, should you choose it. . .\" My head jerked up, my eyes wide. He was looking me up and down. I couldn't fathom why he was looking at me that way, but I didn't care. \n\n\"Yes, yes!\" I babbled, \"Please, sir, make an exception for me, I'm very sorry for my crime!\"\n\n\"How sorry are you, adulteress?\" he said, his arms crossed.\n\n\"Oh, very sorry, sir!\" I wailed. \"I'll do anything to show my repentance, please just let me show you!\"\n\nHe gazed down at me for a few moments, then shook his head. \"I can of course get you an alternate punishment, but . . . I don't see the requisite level of obedience in you.\"\n\n\"Oh no, sir,\" I protested. \"I can be obedient, please, just tell me what I should do?\"\n\nHe looked skeptical, but he gestured with his hand, in a side to side motion. \"You kneel before a powerful man. You could do so properly, as a start.\"\n\nKneeling properly? It must be some local thing, it didn't matter, I was willing to learn. \"Yes, sir, of course. Uhmm, how?\"\n\n\"Country girls,\" the man sighed, exasperated. \"Spread your ankles, so they are flat on the cushion, then spread your thighs, wide as you can.\"\n\nI stifled my indignation, for he seemed rather serious, not simply a man enjoying tormenting some prisoner. Seeing a look in his eyes, I quickly obeyed, squatting down on my ankles, then I widened my thighs about a foot, blushing, for this I knew would expose my panties to his view. \n\n\"Wider,\" he commanded, his gaze now fixated down at my hips. \"Wider still, and thrust your hips forward if you can . . . yes . . . that's better. Very good, you are very flexible.\"\n\nIt was humiliating, this position, with my thighs spread wide like a harlot, and my back was arched now as well, with my wrists still bound behind me. \n\n\"That's an interesting undergarment,\" said the man. \"When you spread your thighs like that, it opens up like a flower petal.\" I think my whole body reddened, and I could feel the cool breeze flowing up between my thighs to caress my partially exposed womanhood. I shuddered. \n\nThe man smiled, which only increased my shame. It was a small price to pay for survival, I told myself. But still, it was difficult, being displayed before a strange man like this. At least he hadn't touched me. \n\n\"Your breasts are quite bountiful,\" he said. \"See if you can stick out your chest a little more. Did you hear me? Don't make me ask you twice . . . that's it, good. Your nipples look quite engorged . . . does it arouse you to pose like this?\" \n\n\"No!\" I protested, knowing it wasn't what he wanted to hear, but unable to say yes to such a question. The guard to my left raised a hand to slap me again, and I cringed, blurting \"no, sir!\"\n\nThe well dressed man only chuckled, saying, \"why don't you address me as 'master,' ay girl?\"\n\n\"Yes . . . master,\" I managed, unable to look him in the eye while saying such a humiliating thing. \"Why must I say such a thing?\"\n\n\"Very well, it's the platform for you, shall I fetch the torturer.\"\n\nI blanched, picturing a fat, half naked man with a huge axe. \"No, please! I'll do as you ask . . . master!\"\n\n\"Indeed,\" purred the man. \"Perhaps I can spare you the platform after all.\"\n\n\"Yes!\" I bubbled, \"I mean . . . yes, master!\" \n\n\"Can you not spread your lovely thighs a little wider? . . . . Yes, that's better, and arch your back, I find your firm lobes beckon to me, ripe for the picking . . . yes, beautiful, offer them to me, just like that. You are nothing but a lowly female, beautiful though you are. Display yourself like this and ponder the magnificent pleasures a man might grant you if you are dutifully obedient. Good, I want you to remember this pose, for you shall adopt it again when you are before the regional councilor. Understood? Very good.\"\n\nMy face burned as I willingly participated in my own degradation. Yet the fear of losing my head was a strong motivator. I could regain my dignity later, while I couldn't regain my head. And then I'd come back with my magic restored, to give them a little payback for the humiliations hoisted on me. At least it didn't seem that I'd have to 'service' anyone with my mouth. That was a fate no preferable to death.\n\n\"Ah, here he comes now,\" announced the man suddenly. \"Keep that pose, don't move a muscle! Address him as your Honor!\" My eyes followed his gaze. A man was striding toward us, a tall, older gentleman, dressed in fine clothing and wearing an important-looking hat. For a moment, I thought he was going to pass us by, but unfortunately he stopped right in front of me. He was looking at me with some interest, which made me blush with shame at my jutting breasts and widespread thighs. \n\nThe man spoke, his voice cultured and deep. \"I am on a tight schedule. This is the adulteress, is that correct?\"\n\n\"Yes, your honor,\" said the man, nodding toward me. \"She has confessed to me.\"\n\nThe man ignored him, instead looking at me directly. \"Subject, you may speak the truth. Has this man harmed you in any way?\"\n\n\"No, your Honor,\" I answered.\n\n\"Has he touched you?\"\n\n\"No, sir,\" I said. So that was why he hadn't touched me.\n\n\"Good. Now if this man has coerced you in any way into admitting guilt for a crime you didn't commit, you may speak to me without fear of reprisal.\"\n\nI quickly shook my head, \"No, your Honor, it is true, I am guilty, but I . . . he said I wouldn't have to be . . .\"\n\n\"She'd like to throw her mercy on the court's judgment, your Honor, in hopes to avoid the block.\" said the man. \n\n\"I see,\" said the Councilor, raising an eyebrow. He looked skeptical.\n\n\"She's very . . . eager to please, your Honor, and as you can see, she's very beautiful. It would be a shame to send her to the block, when she is so eager to please.\" I felt a surge of pride at the word 'beautiful.' My vanity was immune to even the most deadly of circumstances, it seemed.\n\n\"I don't know,\" said the Councilor impatiently. \"I'm of the opinion that adulterers should receive the appropriate sentence.\"\n\nMy mouth fell open. \"No, please, your Honor,\" I begged, a tear forming on my cheek as I strained toward him. \"Please don't do that to me, I swear, I'll be good, I'll never break the law again!\"\n\nThe Councilor looked at me, his eyes wandering down my body, before returning to my face, eager for his reply. Finally he nodded. \"Very well, you agree to Councilor's judgment in lieu of sentencing?\"\n\nI wasn't sure what that meant, but the man next to him nodded to me encouragingly. \"Yes, I agree, thank you, Councilor!\"\n\nI watched as he scribbled something on a large pad he carried, then he looked up. \"Very well, the sentence is three months of full, unrestricted service, after which you will choose whether to remain in servitude, or take your freedom. I would normally encourage females to take their freedom, but from the looks of you, you've already made your choice. Good then, I remand you to the custody of the manager of the Dusty Shield Inn. Good day.\" Then he walked away, leaving me with the other man.\n\nRelief flooded through me. I'd escaped the executioner's axe, with 3 months . . . of what, jail? Custody of the inn? No matter, whatever he'd meant wouldn't matter much, since I planned to escape once my magic returned. I realized I should ask the Councilor what exactly was my sentence, but he had already walked away.\n\n\"That went well, I was worried there for a second,\" said the man. \"I was hoping for six months, but at least it's unrestricted. Most females get 3 months of restricted service. That's not very useful to me.\"\n\nHe was hoping for a longer sentence? \"What do you mean?\" I asked. \n\nHe looked at me. \"You seem to have forgotten your manners, girl.\"\n\nMy eyes widened in surprise. Was that obedience thing still necessary, now that I'd gotten off? But I shouldn't complain too much, this man had probably just saved my life. \n\n\"I'm sorry, sir,\" I said, \"but could you please explain to me what's going on? What is my three months sentence? And why were you hoping for six?\"\n\nThe man was looking at me strangely. \"You mean you have no idea what sentence you just bargained for?\"\n\nI swallowed heavily, an ominous pit in my stomach. \"No, I . . . I just didn't want to be executed for adultery,\" I said. \n\nHis eyebrows narrowed when I said that, and he looked at me strangely. Finally, he laughed, a loud, bellowing laugh. \"I'll be damned,\" he exclaimed. \"I was wondering why you were so eager. Executed?\" said the man, laughing even louder. \"Who executes women for adultery? You were to be given the standard 20 lashes on the block, same as all adulterers. And the women don't even get the real whip. Splendid! I guess it's true what they say about dark haired females!\" \n\nMy head was spinning. \"What are you talking about, 20 lashes? The punishment is execution. Isn't it?\" The man and the two guards all shook their heads, the lot of them smiling at my ignorance.\n\n\"No, of course not. The punishment for adultery is 20 lashes, up there on the punishment block.\"\n\nI couldn't believe what had just happened. \"So, what did you get me,\" I demanded, \"what is . . . unrestricted service?\"\n\nThe man smiled, reaching up with one hand to touch my breast. I recoiled from his touch. As domineering as he'd been, he hadn't touched me before, and I didn't miss the distinction. \"You are to be auctioned off, to serve a three month sentence as an unrestricted pleasure slave. Meaning you are like any other pleasure slave, no protections save your master's mercy. At least for 3 months.\"\n\n\"W-what?\" I squeaked, my voice cracking. \n\n\"Usually he gives a month of restricted service, in which the women work as maids, or house servants, and they have some protections, and aren't true slaves. But the Councilor has great disdain for lecherous females, look at the way you posed for him, like you were a pleasure slave at heart already! And of course he gets a small cut of our auction earnings. He only gives unrestricted to girls who seem to want it.\"\n\nI thought I might faint, and my shoulders started swaying. \"I . . . I did that because you told me!\" I wailed. \"You . . . you tricked me! I can't believe it.\" And the demon, he had set me up. \n\nThe man looked concerned suddenly, \"Not so loud, girl,\" he scolded. It dawned on me, that if the Councilor found out I'd been deceived, he might change my sentence. I had to get him back here.\n\n\"Councilor!\" I shouted, \"Council---mmmph!\" His large hand stifled my voice, and I struggled as the man moved around behind me, his hand allowing only muffled protests to escape from my lips.\n\n\"What are you trying to do, get me thrown in jail? Oh, you're going to pay for that, my little lovely,\" whispered the brute. He held me still, waiting to see if the Councilor would return. I struggled for an entire minute, trying to shout past his hand, as we both watched the door that the Councilor had left through. Suddenly, the door opened, and my eyes went wide and my heart left when a figure entered the courtyard. But my heart sank when I saw it was just one of the guards.\n\n\"Elrond,\" said the man who held me, \"got a gag handy?\"\n\n\"Sure boss,\" said the man, moving toward us. I struggled wild eyed as the guard pulled out a leather strap with a large rag tied in the middle, reaching toward my head. I tried to scream when the hand left my face, but the rag was quickly stuffed into my open mouth, and my cries dwindled into pitiful mewling sounds. Then it was tied behind my head, and the two men stepped back.\n\n\"Can't have you messing things up, girlie,\" said the man.\n\n\"Damn, she's a fine piece,\" said the guard, looking at me. I realized my thighs were still spread, and I snapped them shut with a slap, but the two men only laughed. \"You gonna auction her?\" added the guard.\n\n\"She's on 3 month service duty,\" said the man who'd tricked me. \"That would limit her auction value, although she's a real beauty, and her responsiveness is at the top of the scale. It'll be up to Snake. I hope he just makes her serve her sentence out in the brothel. Would take a week's pay, but I plan to use her myself.\"\n\nThat drew more muffled sounds from my throat, as I struggled in my bonds. I wanted to light them all on fire, but all I could do was make gagging sounds. The men just laughed at my helplessness. \"Come on, give me a hand,\" the man said to the guard, \"let's get her out of here before the Councilman comes back and wonders why she's gagged.\"\n\nI struggled with all my strength as they removed me from the platform. I landed a good kick into the stomach of the guard, who only grunted and spun me around, then the two men each took hold of one upper arm and guided me roughly through a nearby door, down a long hallway, around two corners, to another door. When they opened it, they were stopped by two more guards, who held their hands up. I stopped struggling just long enough to hear their brief exchange.\n\n\"New acquisition for Snake. Tell him she's got a 3 month unrestricted sentence.\"\n\n\"Understood,\" said one of the guards. \"What about her gag, should we leave it in?\"\n\n\"Just until you give her to the Snake, you know he won't need it.\"\n\nThey all nodded knowingly, chuckling at my expense. With a smack on my ass, he left me with the two guards, who immediately grabbed me and took me through another heavy, ornate wooden door. The sign above the door said \"auction prep.\" I shivered. A slave auction. I'd heard of such things, but never had the nerve to go witness one. Now I was going to be an unwilling participant. \n\nAlex, where did you go off to?"
    ],
    "authorname": "Tanuki",
    "tags": [
        "bondage",
        "mind control",
        "slave girl",
        "magic",
        "demon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/karina-the-sorceress-ch-04-1"
}