{
    "title": "Velma",
    "pages": [
        "*Author's Note: Any persons engaging in any sexual activity are at least eighteen years of age.\n\n\n\nChapter 1\n\nShe let herself out of the trailer quietly; she'd learned long ago not to disturb her mother. It was still dark out but she could walk this path blindfolded; she'd walked it every schooldays of her life. Every school day of her life, she'd walk the quarter mile from her trailer, down the dirt road to the asphalt road of Highway 52, cross the two lane highway and stand and wait for the bus. \n\nWhen she was younger, she'd get off at the first stop, H. P. Long Elementary. Then, when she graduated H. P. Long, she'd ride it down to the second stop, O. K. Allen High School.\n\nShe remembered when she was younger; the students that were big enough to go to O. K. Allen seemed like gods to her. She thought it must be so great to be in high school, to be almost grown up.\n\nNow, at eighteen years of age, she realized there really wasn't anything great about being in high school; it was just a continuation of the ostracization and alienation she'd endured in elementary school. She endured ridicule as 'trailer trash' and the daughter of a single mom and drunkard. No one knew who her father was, but there was plenty of speculation.\n\nShe looked both ways but there was no traffic so she crossed the road and looked once more to the west. No sign of the school bus.\n\nShe turned and faced the east and smiled as the sky began to slowly, majestically turn from black to deep purple to violet.  A faint line of gold could be seen as the sun's rays began to spread out along the horizon.\n\n\"Come on, ain't got all day!\" Miss Hebert's gravelly rasp broke into the beauty and Velma sighed and turned and got onto the bus.\n\n\"Standing around dawdling,\" Miss Hebert groused and complained as she swung the doors shut and floored the accelerator.\n\nVelma sighed as she scanned the dark interior of the bus for an empty seat. Finally she gave up and sat down next to Stevie Miller.\n\n\"Hey, I'm saving that seat for Jack!\" Stevie complained.\n\n\"Tough shit,\" Velma groused. \"Guess you'll just have to wait until lunch to be with your boyfriend.\"\n\n\"Nun uh,\" Stevie said and tried to shove Velma out of the seat.\n\nVelma grabbed Stevie by the back of his head and slammed it into the back of the seat in front of them.\n\n\"That's it, Aucoin!\" Miss Hebert yelled as she slammed on the brakes. \"You! Off!\"\n\n\"Fucking cry baby,\" Velma hissed as Stevie cried and held his hand to his bloody nose.\n\n****\n\n\"Come on, Velma,\" Mr. Boudreaux sighed. \"Surely you could have found another way to resolve this.\"\n\n\"I think she was drunk, or high or something,\" Velma accused. \"Should have seen her, weaving all over the road and shit.\"\n\nJim smiled and shook his head.\n\n\"Miss Aucoin, you know she was not weaving all over the road,\" he said and she smiled.\n\n\"Look, Mr. Boudreaux, I sat down, and Stevie starts trying to push me out of the seat and...\"\n\n\"Yes, he was wrong for that,\" he conceded. \"But again, you're an adult here. Surely you could have found another way to resolve this problem?\"\n\n\"Uh huh,\" Velma said\n\n\"But Miss Hebert said she will not let you back on her bus until you apologize to her and to Stevie, okay?\" he went on.\n\n\"Uh huh,\" she said and he smiled and stood, indicating that their 'meeting' was over.\n\nHe knew she would do it. Despite her deplorable living conditions and her tough girl fa\u00e7ade, Velma Aucoin was a Straight 'A' student and was rarely in his office. Whenever she was in his office, he talked to her like she was an adult, an equal. He knew that she was a good girl; she just didn't have much of a chance.\n\nHe'd been raised the same way; his own parents constantly lost custody of him due to excessive drinking, fights, abuse of him and his two sisters. He grew up in a succession of foster homes and run-down trailers and decrepit apartments and rotted shacks in and around Bay St. Louis in Mississippi. But he applied himself and went to college and was now the principal of O. K. Allen High School in Mumphrey, Louisiana.\n\nHis two sisters chose to blame their lot in life on their traumatic childhood and follow in the footsteps of their parents. Patricia was a crack addict, living in Biloxi, Mississippi. Rebecca had three children by three different fathers and was constantly losing them to Child Protection Services due to abuse. Jim had long ago ceased giving them money or any other assistance.\n\nJust to show him that she wasn't giving in that easily, Velma 'scratched an itch' on her nose, using only her middle finger. He hid his smile; he knew that little trick of giving someone the finger without blatantly giving him or her the finger.\n\n\"That will be all, Miss Aucoin,\" he said and dismissed her.\n\n****\n\nMrs. Davis barely glanced at the note that Velma showed her for being tardy. Her dislike of Velma Aucoin was barely disguised. Velma took her usual seat, after brushing off the thumbtack that someone had put on it and glared at Stacie Coutre. \n\nStacie was pretending to find a spot above Mrs. Davis' head very interesting. Kimberly Webber likewise looked anywhere but at Velma. That didn't surprise Velma; Stacie and Kimberly rarely did anything without the other's participation.\n\nShe wanted to scratch her head. Her head itched terribly, but she knew if she scratched her head, the rumors would fly that she had head lice again.\n\nThat was why her brunette hair, formerly long, luxurious locks, was cut short to her scalp. They'd gone on a field trip to Baton Rouge, the state capital. While there, somehow they'd contracted head lice. Of course, everyone blamed Velma for it.\n\nMomma, making a decision between the lice shampoo and a bar tab, had simply taken scissors and whacked away at Velma's hair to get rid of the pesky critters. Of course, it didn't work and she had to buy the shampoo anyway, but Velma had to endure being called 'Elmer Fudd' for the rest of her junior year.\n\nShe wondered if she dared ask Mrs. Davis if she could go to the bathroom, but knew that Mrs. Davis wouldn't let her and would do her best to embarrass her in front of the other Seniors.\n\nFinally the bell rang and she gathered up her books and dashed to the bathroom.\n\nStacie and Kimberly were already in the bathroom, checking on their already far too excessive make-up, but Velma's head itched too badly for her to turn around and leave. She passed the two smirking eighteen year olds and went into a stall.\n\nShe unzipped her baggy jeans and shoved them down and sat down. Finally, she scratched the maddening itch and sighed. \n\n\"What is that smell?\" Stacie screeched. \"Smells like, like, trailer trash!\"\n\n\"Oh, that's just Elmer Fudd,\" Kimberly laughed.\n\nVelma heard the other toilet flush and the stall door creak open.\n\n\"Y'all, y'all are wrong for that and you know it,\" she heard Paris Mouton tell the two giggling tormentors.\n\nVelma then heard the door of the bathroom open and close, then silence.\n\nStacie and Kimberly suppressed their giggles as they attached the hose to the sink faucet. Velma opened the door to the stall and they sprayed her liberally.\n\n\"She says we did WHAT?\" Stacie asked, mouth open in disbelief.\n\n\"We hosed her? In the bathroom?\" Kimberly asked, her face a mirror of Stacie's.\n\nJim Boudreaux sighed. He wanted to expel the two girls outright, but knew their parents wouldn't take that lying down. Stacie's father was a lawyer who liked to bully people and Kimberly's father was the mayor of Mumphrey.\n\n\"Of course, if Velma had sprayed either one of these two spoiled little brats, I'd have no choice but to expel her,\" he thought bitterly.\n\nAs he predicted, neither Kimberly's or Stacie's fathers took their daughters' suspensions lying down. But he was adamant; they would not return to school until Monday.\n\n****\n\nVelma sat in her bed and tuned out the disgusting, animal sounds her mother and her mother's latest boyfriend, Randall, were making. Her bedroom window faced the west; she loved watching the sunsets.\n\nShe could tune out all other senses; the offensive stench of her mother's cigarettes and whiskey, the grunting pig noises of sex, the feel of the stale, dank air on her skin, the taste in her mouth, and just focus on the setting sun.\n\nThe descent of the blue and gold, the sun throwing up its last gasp efforts of yellows, then fiery orange, dwindling down to red, then purple, and finally black claiming reign. She could wrap herself in the velvet blackness, a cocoon that blocked out all other sensations.\n\nThe absolute best, however, was a late night thunderstorm. She would throw open the window to embrace the heart racing, overwhelming beauty. All of her senses would be alive and on fire. The inky blackness, then the sudden brilliance of the lightning, the rumble and growl of the thunder, the smell of the rain, the electric taste in her mouth. \n\nShe remembered once, the lightning had been sheet lightning and she had nearly fainted from the sheer grandeur of it. The whole world would light up for that instance, like the brightest of days, then the snap and groan of the thunder rolled through her, into her heart. Her brown eyes searched frantically for the next flash, her full lips stretched wide in an awestruck smile.\n\nShe'd written a poem about that night, but Mrs. Davis made fun of it, in front of all the other students, so Velma never shared her feelings with anyone else since that day.\n\nChapter 2\n\nJim turned up the stereo in his battered old pick up truck. Robin Trower's 'Bridge of Sighs' blasted out of the powerful speakers.\n\n\"A car ain't nothing but a place to wrap around a stereo,\" Mack, his best friend used to joke.\n\nThe truck had cost him fifteen hundred, but he'd put an eight hundred dollar stereo system in it.\n\nHe remembered the first time he'd ever heard this song. He and Mack and Linda and Suzanne were down on the pier. Mack had an eight track player and was ranting on and on about this great song by Procol Harum's former guitarist.\n\nLinda had looked so good in that bikini, and asked him to put some lotion on her back. The song wailed and soared as he rubbed the oil into her skin. She didn't protest as his hand went around to her side and rubbed up and down on her small breasts.\n\n\"Want to?\" she whispered and he nodded his head yes.\n\nFrom the back seat of Mack's car, he could still faintly hear the song as Linda slid her bikini bottom down. He looked at the very first pussy he'd ever seen and groaned as he blew his load into his swim trunks.\n\n\"Thank God for youth,\" he thought as he remembered that day. \n\nDespite the huge load he'd blown, he did not lose his erection and managed to avoid a repeat ejaculation as he slid the condom on.\n\n\"'Been a long time crossing.... Bridge of Sighs,'\" and he drove himself into Linda's tight, wet pussy.\n\nHer moans of passion drowned out the rest of the song, as did his grunts and moans.\n\n\"Wonder what ever happened to her?\" he mused.\n\nThe driver of the sugar cane truck was looking directly into the setting sun when he pulled out onto Highway 52; did not see Jim's battered old white pick up truck.\n\n****\n\nVelma sat, stunned, as Mrs. Davis tearfully announced that Jim Boudreaux had been in an automobile accident on the previous evening and was in ICU at Southeast Medical Center.\n\n\"Velma! Velma, where do you think you're going?\" she snapped as Velma raced out of the classroom.\n\nParis heard the girl's heartbroken sobs as she entered the bathroom.\n\n\"So the little bitch ain't made of ice after all,\" she thought as she too dabbed her own tears.\n\nShe'd tried once to befriend the friendless girl, but Velma had rebuffed her so vehemently that Paris never tried that again. While she didn't participate in or encourage the petty treatment of Velma, she did little to stop it either. Even if she was the daughter of Jim Mouton, owner of Mouton Toyota and Lexus dealership, she still had to worry about her own social standing at O. K. Allen.\n\n****\n\nVelma sat and tried to choke down the tuna salad the cafeteria served. They always put too much pickle relish in it, rendering it almost unpalatable. If she weren't so hungry, she would have simply eaten the gelatinous macaroni and cheese and green peas. But she was hungry.\n\nParis put her own tray down and grimaced.\n\n\"I hate tuna salad,\" she confided to Velma. \"Well, THIS tuna salad. They ought to call it 'Pickle salad,' you know?\"\n\nVelma ignored the girl.\n\n\"But, I forgot it was Friday, so now I got to choke this stuff down and try not to vomit,\" Paris went on.\n\n\"How in the fuck do you forget it's Friday?\" Velma snapped.\n\n\"Alarm didn't go off, what I wanted to wear was still in the laundry hamper, shoe lace broke, Consuela burned the eggs, Grant's giving me all kind of shit about wanting to go see Mr. Boudreaux tomorrow, Dad's on my ass about a couple of charges from like three months ago, guess it just felt like a Monday,\" Paris shrugged and shuddered as she bit into the tuna salad. \"God, do you think they could have made this any grosser?\"\n\nVelma looked at the blonde haired girl and tried to make her tear go away without wiping it.\n\n\"You, you're going to see Mr. Boudreaux tomorrow?\" she asked, voice barely more than a whisper. \n\nShe didn't want her voice to crack, to let the other girl know there were any chinks in her armor.\n\n\"Uh huh, he's in ICU, so visiting hours are all screwed up,\" Paris said and shoved another forkful of the unappetizing salad into her mouth. \"So, I figured if I get there at eight, I should be able to get in to see him. They only let two people at a time go visit him.\n\nShe looked up and saw the tears sliding down Velma's face.\n\n\"You want to go?\" she asked.\n\nVelma shook her head no, unable to speak.\n\n\"You sure?\" I can swing by, I know where you live, and...\" Paris said.\n\n\"No! All right? I said 'no!'\" Velma yelled and left the cafeteria.\n\nChapter 3\n\nMomma and Randall were arguing, nothing new there, about where he had gotten the money to buy a bag of marijuana. Esther shrilly accused him of stealing it from her.\n\n\"Uh huh, and where the fuck you get that kind of money, huh? Huh bitch?\" Randall yelled back. \"You ain't never got no fucking money when I need it but you telling me you had two hundred? Huh? That's what you telling me?\"\n\n\"Two hundred? You out of your fucking mind?\" Esther screamed. \"You know what we could have done with two hundred?\"\n\nThen the slapping started, the shoving, and thumps and Velma sat in her bed and looked out the window at the brilliant sun, low in the horizon, but not quite touching the lip of the horizon yet.\n\nIf she could just hold on for another thirty or forty minutes, she'd be able to pull the night around her\n\n****\n\n\"Hey, sleepy head,\" she heard, and then felt the threadbare blanket being pulled down.\n\nShe grabbed at the blanket and pulled it back up. She was nude underneath; a thunderstorm had rolled in at two in the morning, waking her with its deep-throated rumbles. She'd stripped off the long tee shirt she slept in and masturbated as she watched the flashes of lightning and heard the thunder. The harsh slap of the rain against her window was one of the most romantic, loving sounds she knew and she loved imagining herself and a lover making love, out in a field, being drenched in the storm.\n\nShe wasn't a virgin; she knew what it felt like to have a man on top of her, his penis driving itself into her, filling her. A friend of her cousin's had asked her out and they went to Chili's in Hammond, then to see some stupid movie that he wanted to see. Afterward, they came back to the trailer, but Momma was still down at Paradise Lounge so she let him come in.\n\nHis kisses were clumsy, but still felt pretty good to her. His gropes were clumsy as well, but he managed to hit the right spots on her breasts and her nipples responded. She pulled him off of the couch and into her bedroom.\n\nThe first thrust hurt her horribly and his erection wilted at her agonized scream. Moments later, though, she was encouraging him to fuck her.\n\nHe didn't call her for a second date but did let all of his friends; including her cousin know that he'd fucked her.\n\nThe blanket again slithered down and her eyes flew open. She looked into the laughing blue eyes of Paris Mouton.\n\n\"Paris, what the... What are you doing here?\" Velma whispered, afraid of waking Momma or Randall.\n\n\"I know you said you didn't want to go see Mr. Boudreaux, but I could tell you really did, so I came to get you,\" Paris said and shrugged. \"I knocked and knocked, but no one ever answered, so I tried the knob and it wasn't locked, so I let myself in, hope you don't mind.\"\n\nVelma didn't want to tell her, but the lock hadn't worked in about ten years. Momma had gotten really drunk one night, and couldn't get her key to work, so she busted the lock and they'd never bothered to have it fixed. Anything of any value had long since been stolen or pawned so there was no need to lock the trailer.\n\n\"Paris, get out of here!\" she hissed hoarsely. \"You can't just, who the fuck do you think you are?\"\n\n\"Come on, get up,\" Paris said and began to pull the blanket down again.\n\n\"Paris! Stop it! I'm, I'm naked!\" Velma hissed.\n\n\"Oh, so what?\" Paris giggled. \"It ain't like I ain't seen it a hundred times already! Remember Coach Shelly makes us shower after every P.E.?\"\n\nParis leaned closer to Velma.\n\n\"I bet she does that shit so she can see us naked,\" she whispered.\n\nResigned to the fact that Paris wasn't going away, and wasn't going to give her any privacy, Velma got out of the bed and pulled her long tee shirt on.\n\n\"I'll go take a shower and then I'll be ready,\" Velma said and left the room.\n\n\"Okay,\" Paris said and sat back on the bed, facing the window. \n\nThe morning was still gray, the clouds from the thunderstorm not fully dissipated by the morning sun.\n\nVelma went into the bathroom and made sure to slide the bolt in fully. Randall hadn't tried it yet, but Momma's last boyfriend liked to 'accidentally' walk in on her whenever she was in the shower, or on the commode. He was a creepy old drunk; Velma hadn't cried any tears when he died of a massive heart attack. Momma had been mortified to find out that he was not divorced, as he'd told her, but infect had a very attractive wife and five children living in Hammond.\n\nParis was looking through Velma's few prized possessions; her books, when Velma returned. She looked over at Velma and smiled.\n\n\"I have a bunch of these books too,\" she said. \"I haven't read this one, though, it any good?\"\n\nShe held up 'Alice Doesn't Live Here Anymore,' by Anonymous.\n\n\"Yeah, yeah, it's good, kind of depressing, it's about drug addiction,\" Velma said and yanked open a drawer on the battered, wobbly chest of drawers.\n\n\"Can I borrow it?\" Paris asked. \"I promise I'll bring it right back.\"\n\n\"Uh, yeah, yeah,\" Velma agreed and wished Paris would leave the room, give her some privacy. \n\nShe pulled a pair of panties on and wished she'd had better-looking panties. She rummaged around until she found her nicest bra and slipped it on. From another drawer, she pulled on her only pair of khaki shorts, the ones she wore whenever her mother decided they needed to go to church, then found a purple half-shirt. She pulled her canvas tennis shoes on and turned to face Paris again.\n\n\"Ready?\" Paris smiled.\n\n\"Ready,\" Velma agreed.\n\nChapter 4\n\nVelma wasn't sure what model it was, but she could recognize that the Lexus that Paris drove was one of the nicer models. Paris giggled as she hit a button on the key and the car chirped to let them know that it had been unlocked.\n\n\"I just love that sound!\" she giggled and opened the driver's door.\n\nVelma perched on the edge of her seat, not wanting to make any indentations in the expensive leather interior.\n\n\"You like Classical?\" Paris was asking. \"Kimberly and Stacie are always giving me a bunch of crap about 'that's not real music,' and 'how can you listen to that boring stuff?' but I like it. And you know, when I try to point out to them how the stuff they call music is just borrowed from Classical, they act like they don't know what I'm talking about.\"",
        "She hit the play button on her stereo and Vivaldi's 'Four Seasons' came pouring out.\n\nVelma sat, rooted to the spot. She listened as someone painted an auditory portrait of the sunrise. She could hear the black begin to give away, could hear the colors begin to insinuate themselves into the tapestry of the sky, then heard the crashing, triumphant splendor of the sun making its presence felt and seen across the entire dome of the sky.\n\n\"Two Egg mcmuffins, and two large coffees, Paris shouted into the speaker at the McDonalds. \"Um, three sugars and two creams into those, okay? Oh, and two large orange juices, please.\"\n\nVelma broke out of her trance when Paris thrust one of the breakfast sandwiches into her hand.\n\n\"Um, thanks,\" Velma mumbled.\n\n\"Yeah, I didn't give you any time to get breakfast,\" Paris said.\n\nVelma ate the sandwich ravenously, and then drank down the juice rapidly. The coffee would have disappeared just as quickly if it had not been so hot.\n\nHer gastronomic pleasure was interrupted by a piece of Chopin. She listened, spellbound, as the piano described a leaf, clinging, clinging, then breaking fee of its mooring to the tree, and fluttering along in the Autumn breeze, captive to the whim of the wind, but also free.\n\n\"I can change it if you'd like,\" Paris said, mistaking Velma's silence for disapproval.\n\n\"No!\" Velma cried out.\n\nThe six discs C.D. changer was set to 'Random' play and Velma listened, in rapture to each piece for the forty miles from Mumphrey to Hammond.\n\nParis pulled into the parking lot of the hospital and let the Nigel Kennedy piece play out before turning off the car. Velma didn't feel anything as Paris pulled her along the corridor of the hospital toward the ICU wing, her head; her senses were wrapped up in the beauty of music.\n\n****\n\nMr. Boudreaux was almost unrecognizable. Nearly his entire head was swathed in bandages. Velma stared, horrified at the image of the man she could honestly say she loved and trusted, lying, helpless, unresponsive.\n\n\"Talk to him,\" the nurse on duty encouraged. \"They say that they can hear you.\"\n\n\"Um, Mist... Mister Boudreaux?\" Velma asked, her voice quavering. \"Um, hi, it's Velma.\"\n\nShe broke into sobs and Paris pulled her into a hug, patting her back and crooning in a comforting tone. Finally, Velma pulled away from her and turned to face Mr. Boudreaux again.\n\n\"I'm sorry Mr. Boudreaux,\" she sobbed, holding onto the rail of his bed. I know you didn't want a bunch of crying and stuff.\" \n\n\"Hi Mr. Boudreaux, it's Paris,\" Paris said when Velma stepped back from the bed. \"But don't worry, I didn't bring Stacie or Kimberly with me.\"\n\nShe turned and smiled at Velma.\n\n\"I brought Velma with me instead,\" she went on.  \n\nVelma listened as Paris prattled on, not really saying anything, but just telling Mr. Boudreaux about school, how everybody was so upset to hear about his accident.\n\n\"Let me,\" Velma begged and Paris smiled and nodded her head yes.\n\n\"Mr. Boudreaux, I hope you can hear me,\" Velma said. \"I want you to know I love you, I love you a lot, and I hope you get better real soon, 'cause you're the only friend I got there.\"\n\nFinally, Mrs. Davis entered the ward. Her surprise at seeing Velma was evident, as was her displeasure at seeing Velma.\n\nVelma and Paris saw that visiting hours in the ICU ward were nearly over anyway, so they left the room and Mrs. Davis curtly thanked them for allowing her to visit with Mr. Boudreaux.\n\n\"You do have other friends there, you know,\" Paris said quietly as they left the hospital.\n\n\"Who?\" Velma challenged. \"Who I got? Huh?\"\n\n\"I ever do anything mean to you?\" Paris asked and looked at the sullen girl over the roof of her car.\n\n\"Well, no, but...\" Velma conceded.\n\n\"And I have tried to talk to you, but you're always so fucking angry, you shove people away whenever anyone says 'hi' to you,\" Paris went on, anger creeping into her voice.\n\n\"Yeah, but what'm I supposed to do, huh?\" Velma yelled. \"You're always hanging around those two bitches!\"\n\n\"You ever think maybe I need friends too?\" Paris said and hit the button to unlock the car. \"They're the only ones ever talk to me! Everyone else is all like 'Oh, you're Daddy's so rich, can you get me this? Or that?' At least Stacie and Kimberly don't just try to use me!\"\n\nThe two eighteen year olds got into the car and Paris started it and slammed it into gear. She floored the accelerator.\n\n\"Buckle up,\" she snapped at Velma and then angrily turned the stereo off as another Vivaldi piece began.\n\n\"God damn it!\" she screamed in frustration as she approached the exit of the parking lot.\n\n\"What?\" Velma barely dared to ask.\n\n\"I got to pee!\" Paris exclaimed.\n\nShe whipped the car around and drove back toward the hospital's entrance.\n\n\"You going to wait in the car, or do you have to pee too?\" Paris snapped as she abruptly stopped the car and put it into 'Park.'\n\n\"Um, yeah, yeah, I got to pee too,\" Velma muttered.\n\n\"Well, come on,\" Paris barked and got out of the car. \n\nUnwittingly, instinctively, she hit the 'lock' button and Velma struggled with the door.\n\n\"Oh, come on!\" Paris yelled, not at Velma, but at herself, and hit the 'unlock' button on the key.\n\n\"Sorry!\" Velma yelled back. \"The fucking door was locked! What the fuck you want me to do?\"\n\n\"Never fucking mind, come on,\" Paris demanded and marched back into the hospital.\n\nThey found the ladies room and both slammed their stall's doors. Velma tried to hurry, not wanting Paris to leave her stranded in Hammond. True, Mrs. Davis was probably still around, but she REALLY didn't want to have to ride with that woman for forty miles.\n\n\"I'm so sorry,\" Paris said softly and hugged Velma after Velma finished washing her hands. \"I'm not mad at you, I'm mad at me.\"\n\n\"It's okay,\" Velma said and stiffly, woodenly returned Paris' hug.\n\n\"Friends?\" Paris asked.\n\n\"Uh huh,\" Velma said, trying to extricate herself from the hug without simply shoving Paris away.\n\n\"Good,\" Paris said and kissed a stunned Velma on her lips.\n\nShe then giggled and used her thumb to wipe her pink lipstick off of a till stunned Velma's lips.\n\n\"Pink isn't your color,\" she giggled again and wiped her thumb on her black tee shirt.\n\nChapter 5\n\n\"So what color lipstick do you normally use?\" Paris asked, the music turned down to be heard in the background.\n\n\"I don't,\" Velma replied.\n\nLipstick, cosmetics of any sort was an expense that Velma didn't have the luxury of. Esther used quite a bit of makeup, more and more of it to cover the effects of aging and excessive drinking. Velma didn't use her mother's make up; they weren't the same skin tone. Besides that, Velma had seen the type of men Esther's make up attracted and certainly wasn't interested in attracting that kind of man.\n\n\"Really?\" Paris asked. \"But your lips are always so pretty! I just kind of thought, well, whatever.\"\n\nVelma looked at Paris to see if Paris was making fun of her. If she was, she was doing a great job of covering it up.\n\n\"You have to go straight home or what?\" Paris asked.\n\nHome. Momma and Randall were probably still asleep. If they weren't asleep, they'd both be hung over, or working on their next drunk.\n\n\"No, no, I don't got to go home,\" Velma said. \"Why?\"\n\n\"You want to come over and go swimming?\" Paris asked excitedly.\n\n\"I um, I don't got a suit.\n\n\"Oh, that's okay, we're probably the same size,\" Paris bubbled. \"You can borrow one of mine. I mean, your boobs are a little smaller, but not THAT much. We'll find...\"\n\n\"Paris, I don't know how to swim,\" Velma admitted, a little frightened.\n\n\"Oh,\" Paris said, stunned. \"Really?\" \n\n\"Uh huh,\" Velma said.\n\nWhere would she have learned how to swim? If they had any extra money, it went to alcohol, not luxuries like swim suits or swimming lessons.\n\n\"Well, then we'll just stay in the shallow end, how about that?\" Paris suggested.\n\n\"What do you mean?\" Velma asked.\n\n\"Okay, our pool has two sides, a deep side and a shallow side,\" Paris explained. \"You just stay on the shallow side, think that'll work?\"\n\n\"I don't know,\" Velma said.\n\n\"And we got a life jacket, we'll put that on you, okay?\" Paris went on, her enthusiasm bubbling up.\n\n****\n\nVelma looked around the room in awe. Paris' bedroom was easily four times the size of her own. In the middle, against the far wall, was a large canopy bed. On the fluffy comforter were several stuffed animals and dolls. One doll, Velma recognized, Patty Playtime.\n\nShe had sat on Santa's lap and told the fat man that reeked of cigarettes and cheap beer what she wanted, what she really wanted most of all in the whole world, a Patty Playtime. Yes, she had been a good girl, she'd been a very good girl, and even her teachers said she was a good girl.\n\nThere was no doll under the tree. There had been a few coloring books, and a brand new box of crayons, the big sixty-four set, but no doll. Her mother sent her to her room for not being grateful for what Santa Claus brought for her.\n\nShe quit believing in Santa Claus right then and there.\n\n\"I know, I know,\" Paris giggled, embarrassed. \"I know I should just throw all that stuff out, I keep telling myself 'Paris, your almost a grown woman, time to get rid of all this stuff,' but every time I try, I just can't bring myself to do it.\"\n\n\"That's cool,\" Velma said and looked around the rest of the room.\n\nThere was a desk and hutch, which matched the bed and chest of drawers perfectly. A flat screen monitor sat on it, along with keyboard and mouse. Velma assumed the computer must be hidden away in one of the many drawers or cubbyholes.\n\nThere was a plasma television mounted to the wall across from the television and Velma looked at it in wonder.\n\n\"Yeah, Daddy put that in here when I was out sick last year,\" Paris said and opened a drawer of her bureau. \"God a dvd player built in and all.\"\n\n\"A what?\" Velma asked.\n\n\"A dvd player, you know, movies and stuff,\" Paris said and took out a black bikini. \"Here, I bet this'll fit.\" Velma took the thin scraps of material and tried to make sense out of the skimpy bits.\n\n\"Go ahead, try it on,\" Paris said and pulled her own tee shirt off. \n\nShe unhooked her black satin bra, exposing her Thirty-four D breasts without any qualms, and began to shimmy out of her shorts and panties. Velma looked at the hairless slit for a second, then watched as Paris easily slipped into a pink swimsuit.\n\n\"Daddy hates this one, says it's obscene,\" Paris giggled. \"But he's at works...\n\nVelma undressed then put on the black bikini. The top was very loose, across her thirty-two C Breasts, allowing a glimpse of her large dark aureole. The bottom was a little snugger, but several tendrils of her curly brown pubic hair were visible on all sides.\n\n\"We're going to have to get you your own,\" Paris mused. \"Thank God it's just us, huh?\" \n\n\"I'd have to trim down there too,\" Velma said and pointed to the pubic hair sprouting out on all sides.\n\n\"Yeah, but there's nothing to that,\" Paris said and went into her bathroom and grabbed two large fluffy towels. \"Come on.\"\n\n----\n\nConsuela smiled as Miss Paris and an unknown girl left Miss Paris' bedroom, dressed in very skimpy bathing suits. Miss Paris knew her father would not approve of his little girl in such daring attire, the top squashed her breasts, forcing them out on the sides, and barely covered her nipples. The bottom had a thin strap that separated Miss Paris' buttocks, and a thin strap in front that barely covered the pubic mound. What Mr. Mouton didn't know, Mr. Mouton wouldn't hear about from Consuela.\n\n\"Consuela, this is my friend Velma,\" Paris cheerfully introduced the maid. \"Velma, this is Consuela. She's the best cook ever, except when it comes to eggs.\"\n\n\"Oh, Miss Paris, you stop that!\" Consuela laughed. \"I burn eggs one time! One time I burn them and she act like I do it every day!\"\n\n\"It's nice to meet you,\" Velma muttered, trying to hide her body from the maid's gaze.\n\n\"It nice to see you too,\" Consuela said. \"You stay for lunch?\"\n\nVelma looked at Paris.\n\n\"One, one thirty, okay, Consuela?\" Paris ordered.\n\n\"Okay, I bring outside on deck, okay?\" Consuela said.\n\n****\n\nVelma felt a little funny as Paris slipped the large life vest over her head, then cinched it on her, and made sure it was fitted properly.\n\n\"It's kind of tight,\" she offered.\n\n\"Supposed to be,\" Paris said and readjusted the bottom strap. \"You don't want it slipping off.\"\n\nWas it her imagination, or were Paris' hands purposefully rubbing against the sides of her boobs?\n\n\"Which side is the shallow one?\" Velma asked as Paris led them to the large in ground pool.\n\n\"This side,\" Paris assured her.\n\nVelma luxuriated in the sensation; her entire body was enveloped in the cool water. Every now and then, she would try to fill her bathtub with enough water to get this sensation, but either her head was sticking out, or her feet, or her knees. The buoyant life vest prevented her from dunking her head for very long, but she did it as much as possible and laughed out loud when she broke the water's surface.\n\n\"Oh, God, this is great!\" she whooped. \"I'd love to take a bath in this!\"\n\n\"You'd love my tub,\" Paris assured her.\n\nConsuela brought out two plates, nothing fancy, just two turkey and Swiss cheese sandwiches and carrot and celery sticks. A tall glass of iced tea sat next to each plate.\n\nAgain, Velma felt a little funny as Paris helped her take the bulky life vest off.\n\n\"Didn't I tell you?\" Paris happily said.  \"She's the best cook ever!\"\n\n\"Yeah,\" Velma agreed and munched on the sandwich.\n\nAfterward, they stretched the towels out and lay in the afternoon sun. Paris liberally coated her pale skin with a light tanning oil, then turned to Velma.\n\n\"Here, you don't want to burn,\" Paris said and Velma likewise liberally coated herself.\n\nAt three o'clock, Consuela roused the drowsing girls for more iced tea and fresh fruit.\n\n\"That enough sun,\" she told Paris. \"You going to burn.\"\n\n\"Yes ma'am,\" Paris agreed.\n\nChapter 6\n\n\"You don't have to go home, huh?\" Paris asked hopefully.\n\nThey were in her bedroom, dressing back into their clothes.\n\n\"Um, no, not really,\" Velma said.\n\n\"Thank you can stay the night?\" Paris begged and clutched Velma's hand.\n\n\"Um, yeah, yeah, I guess so,\" Velma agreed.\n\n\"Oh good!\" Paris said and again kissed Velma on her lips.\n\nAgain, she used her thumb to wipe her pink lipstick off of Velma's lips.\n\n\"Um, I got to pee,\" Velma said.\n\n\"Bathroom's right there,\" Paris said and pointed.\n\nThe bathroom was twice the size of her own bathroom. Actually, it was larger than her bedroom and bathroom combined. There was a large walk in shower, with two showerheads, one on the north wall, and the other on the south wall. Next to that was a large manufactured marble tub, large enough for four people to sit in without touching one another. There were two sinks at the vanity and a recessed area in the middle, with a vanity chair facing the large lighted mirror.\n\nBut there was no commode. Velma looked around for another minute, and then went back out into the bedroom.\n\n\"Um, hey, Paris, where's the toilet?\" Velma asked.\n\n\"Oh, I'm sorry!\" Paris giggled. Come on, I'll show you!\"\n\n\"I forgot, you've never been here before,\" Paris explained as she walked around to the rear of the shower and pointed to the concealed commode.\n\nVelma plopped down and down and sighed contentedly as she relieved herself.\n\nParis smiled at her when she exited the bathroom.\n\n\"Did you wash your hands?\" she teased.\n\n\"No!\" Velma said and grabbed Paris and wiped her hands on Paris' tee shirt.\n\n\"Ew, gross!\" Paris laughed.\n\nHer cell phone rang and she dug it out of her purse.\n\n\"What?\" she snapped into the phone, all humor gone. \"No, Grant, I don't have a nicer way of saying 'hello.' You know how much Mr. Boudreaux means to me, the least you could have done was be a little more supportive.\"\n\nShe listened for a minute then screwed her normally quite pretty face into an ugly mask of contempt.\n\n\"Oh, bull fucking shit, Grant.\" She snapped. \"You were just worried about getting your nuts taken care of, that's all.\"\n\nShe laughed out loud, a mirthless laugh.\n\n\"Really? She will, huh? Well, go right ahead, Mr. Coutre, go ahead and fuck little Miss Kimberly Webber.\" She lowered her voice somewhat.\n\n\"See if she'll let you do her up the butt,\" she hissed. \"I bet she don't.\"\n\nShe slapped the cell phone closed, then screamed in frustration and threw the phone against the wall with considerable force. It struck the wall, bounced to the floor, then lay on the plush carpet, undamaged. There was a faint crack on the plasterboard of the wall.\n\nVelma stood, rooted to the spot and Paris wrapped her arms around the uncertain girl and sobbed. Velma clumsily patted her on the back, not really sure what to do.\n\n****\n\nConsuela smiled as she served Jim Mouton his dinner, and nodded to Paris and Velma. \n\nVelma felt a little uncomfortable around Mr. Mouton; he reeked of power and money. He was a curt, abrupt man and did not let emotions come out very easily.\n\n\"Heard from Mom yesterday,\" Paris said.\n\n\"Really?\" Jim Mouton said. \"And what did Miss Peace Corps have to say?\"\n\nThe people are still living in mud huts, running water is non-existent, no medical supplies, no doctor for hundreds of miles,\" Paris rattled off.\n\n\"In other words, she's happy,\" he said and continued to read through his stack of mail while eating.\n\n\"Thank you, Consuela,\" Velma mumbled.\n\n\"You welcome, Miss Vee,\" Consuela smiled and lightly rested her hand on Velma's shoulder.\n\n\"Um, where is your mother?\" Velma dared to ask.\n\n\"Right now?\" Paris asked. \"In Columbia, helping out the victims of some mud slide, or avalanche or something.\" \n\nParis shrugged and took a forkful of her rice. \"No, no, wait, it was a hurricane.\"\n\n\"Tropical storm,\" Jim Mouton corrected. \n\n\"That's it!\" Paris said.\n\n\"My wife,\" Jim Mouton said and tapped the envelopes into a neat stack again. \"Feels guilty because I make a great deal of money. Never mind the fact that I work for it, she just feels guilty about it. To offset her feelings of guilt, she runs off to these little third-world nations to do what she can to help out those less fortunate than us.\"\n\n\"Will there be anything else, Mr. Mouton?\" Consuela asked as she picked up his plate.\n\n\"No, that will be all, thank you,\" he said without looking at her.\n\n\"Um, could I um, could I have some more tea?\" Velma dared to ask.\n\n\"Of course, Miss Vee, I get it right away!\" Consuela answered happily.\n\n\"I have told her, if she would just open her eyes, she could find people less fortunate, right here in the good old United States of America,\" he said and stood up. \"Hell, she could probably find some right here in Mumphrey! But that's not good enough; I have to spend thousands of dollars on plane tickets to these shit holes for her to feel fulfilled.\"\n\n\"It doesn't take much to make Dad go off the deep end,\" Paris said to Velma, not bothering to lower her voice.\n\n\"Uh huh,\" he said. \"Like an eight hundred dollar shopping spree at Dillards.\" \n\nJim Mouton smiled and patted his daughter's cheek.\n\n\"Three months!\" Paris exclaimed. \"That was three months ago!\" \n\n\"And you still haven't paid a penny on that,\" he smiled.\n\n\"Here you go, Miss Vee,\" Consuela smiled and set the glass down.\n\n\"I'll be in the study,\" he said.\n\n\"He's going to drink,\" Paris translated.\n\n\"Paris, my dear,\" he sighed playfully. \"Not all of my secrets have to be exposed to everyone, do they?\"\n\n\"No, I still haven't told her about all the dead bodies buried in the back yard,\" Paris said, then covered her mouth. \"Oops!\"\n\n\"Smart ass,\" he smiled and kissed her on the top of her head.\n\n\"It's very nice to meet you, um, Vicky, right?\" he said.\n\n\"Velma,\" she corrected.\n\n\"That's right, I'm sorry,\" he smiled and patted her on the shoulder. \"It's real nice to meet you.\"",
        "\"Nice meeting you too,\" Velma mumbled.\n\n\"Hey, Da da da,\" Paris said.\n\n\"Oh no,\" he smiled as he stood in the doorway. \"Baby talk. She's about to ask for money.\"\n\n\"But it's not for me,\" Paris lisped and pouted.\n\n\"Who's it for?\" he smiled.\n\n\"It's for Velma, she needs a new bathing suit and I figured, as long as we're there...\" Paris said.\n\n\"Go ahead,\" he said and disappeared.\n\n\"But I don't want another eight hundred dollar spree, you hear?\" his voice floated back.\n\n\"I knew he'd say 'yes,'\" she giggled and clutched Velma's hand. \"We'll go to the mall tomorrow, okay?\"\n\n\"But Paris, I don't need a bathing suit,\" Velma protested.\n\n\"But you are coming back, right?\" Paris asked and a tear began to form in her eye.\n\n\"Uh, yeah, yeah,\" Velma agreed.\n\n\"I mean, I just kind of figured you'd like to have your own suit,\" Paris mumbled and stuffed a forkful of the food in her mouth.\n\n\"But what's wrong with the one I had on today?\" Velma asked her.\n\n\"It didn't fit,\" Paris said and dabbed at the freely falling tears.\n\n\"No, no, it didn't, did it?\" Velma agreed.\n\n\"So, can we go and get you one?\" Paris asked.\n\n\"Yeah, yeah, I guess so,\" Velma agreed.\n\n\"Good,\" Paris said and finished eating her dinner.\n\n\"You all finished?\" Consuela asked and cleared the plates away.\n\nChapter 7\n\nDarkness fell outside and Velma yawned. Paris' room faced the east, so the setting sun wasn't visible in the large bay window. She could see the violet advancing rapidly, chasing and overtaking the deepening blue of day.\n\n\"Come on,\" Paris said.\n\n\"Where?\" Velma asked.\n\n\"Bath time,\" Paris said and opened the door to the large bathroom.\n\nShe began to fill the large tub and rummaged around in the cabinet of the vanity. She poured a handful of a liquid into her hand, and then held the hand under the gushing faucet. The tub began to rapidly fill with bubbles.\n\n\"Oh, cool!\" Velma laughed.\n\n\"I LOVE bubble Baths,\" Paris happily told her and stripped off her clothes in front of Velma.\n\nWith absolutely no sense of shame or decency, Paris ran a finger along her pubic mound and decided that it needed to be shaved. She squatted down again at the cabinet and pulled out her razor and shaving gel.\n\nShe also pulled out a gaily-wrapped package and handed it to Velma.\n\n\"What's this?\" Velma asked as she kicked her own discarded clothing over to lie next to Paris' discarded clothing.\n\n\"Scrubbing bag,\" Paris explained. \"Mine's oatmeal in lemon grass, but I figured you'd be a 'Peppermint' kind of girl!\"\n\nShe sat on the wide lip of the tub and squirted some shaving gel into her hand and applied it to her mound. Velma stood and watched as Paris took a long, leisurely stroke with the razor.\n\n\"Go ahead, get in,\" Paris ordered and Velma climbed over the high edge of the tub.\n\n\"Oh, my God!\" she exclaimed as she sat down in the silky sensation of the water. It was already at breast height when she sat down, but the bubbles were almost to the tip of her nose.\n\nParis laughed when Velma blew a chunk of the bubbles at her, and rapidly finished shaving her pussy. She turned off the water and slipped into the tub. \n\nShe disappeared under the Bubbles and Velma screamed as she felt something pinch her big toe.\n\n\"Didn't I tell you?\" Paris breathed in Velma's ear. \"I told you you'd love my tub. You should see the one in my Mom and Dad's room; it's twice as big as this!\"\n\nUh huh,\" Velma sighed, luxuriating in the steamy comfort.\n\n\"Where's your scrubbing bag?\" Paris asked.\n\n\"Right here, Velma said, reaching behind her and retrieving it from the lip of the tub, still wrapped in its plastic bag and ribbon.\n\n\"Go ahead, open it,\" Paris urged.\n\nVelma pulled the ribbon off and pulled the small bag out.\n\n\"See, it's got oatmeal and peppermint and minerals, it's much better for your skin than soap, you know how soap just kind of dries out your skin?\" Paris bubbled and showed Velma her own bag.\n\n\"You just dunk it, get it wet, and use it like soap,\" she went on and began to scrub her arms and neck. \"It's even real good to use on your face, especially if you use a lot of make up.\"\n\nVelma did and smiled as she felt her skin tingle as the peppermint oil got into her skin.\n\n\"I like this,\" she said.\n\n\"Take it,\" Paris offered. \"I got a whole bunch of them.\"\n\n\"Thanks,\" Velma said and tensed up as the peppermint tingled on her nipples.\n\n\"Get my back?\" Paris asked and turned around.\n\nOkay,\" Velma said and took Paris' scrubbing bag from the girl's hand.\n\nParis got to her knees so that more of her back was exposed. Velma continued to scrub downward, then playfully scrubbed one of Paris' buttocks. She froze; she'd expected Paris to squeal, or push her hand away. Instead, Paris just held the position. She stopped and tried to hand the bag back to Paris.\n\n\"You going to get the other one?\" Paris asked.\n\n\"Um, yeah, okay,\" Velma, mumbled, blushing brightly, and scrubbed the other buttock.\n\n\"Want me to get yours?\" Paris asked and held out her hand for Velma's bag.\n\nVelma sighed; despite her awkwardness and initial discomfort, Paris' ministrations to her back felt wonderful. She began to sit back down when Paris ' hand reached her buttock, but Paris pushed her back up into a kneeling position with her other hand and vigorously scrubbed at Velma's buttocks.\n\n\"Oh! Hey!\" Velma protested as Paris brought the bag to rest firmly against Velma's puckered anus.\n\nParis giggled and gave the bag back to Velma.\n\n\"A clean butt is a happy butt,\" Paris giggled and slipped back under the bubbles.\n\nVelma kicked out as she felt Paris pinch her big toe and Paris broke the surface at the far end of the tub and laughed.\n\n\"Ready for something that'll really feel good?\" Paris asked in a excited voice.\n\n\"Um,\" Velma hesitated.\n\nParis pushed a button that was recessed in the corner of the lip and Velma felt dozens of little jets begin to bubble underneath the water.\n\nParis laughed at Velma's stunned expression and again slipped under the water.\n\n\"Ow!\" Velma exclaimed as she felt Paris playfully pinch her big tow again, then Paris broke the surface; but the bubbles were really building up in intensity, so Paris had to blow the bubbles aside.\n\n\"Isn't that great?\" Paris asked.\n\n\"Uh huh,\" Velma agreed, feeling her body being buffeted by all the little jets.\n\n\"And watch,\" Paris said and gripped Velma's hips and twisted her to face the side of the tub. laying on her left side.\n\n\"Oh, my God!\" Velma grunted as one jet hit her directly on her clitoris and another sprayed water forcefully along her breast.\n\n\"I like to put my butt up against it,\" Paris confided.\n\nVelma tensed up in orgasm, shutting out anything else Paris might be saying. She clenched her jaw tightly and waited for another orgasm to overtake her senses.\n\n\"I'm real anal like that,\" Paris whispered in Velma's ear. \"A clean butt is a happy butt!\"\n\nVelma weakly rolled back and slid under the water for a moment. She pulled herself up and looked over at Paris. Paris had her back flattened against the opposite wall of the tub and had her eyes shut in bliss.\n\n\"See, there's one hitting me right around my, my ass hole,\" she moaned, holding herself up by gripping the stainless steel rail that was bolted to the wall.\n\nHer other arm was obscured by the mountains of bubbles, but it was obvious that she was masturbating.\n\n\"You really like it, the butt, I mean?\" Velma asked.\n\n\"Told you, I'm anal,\" Paris gasped, and then shuddered.\n\nVelma rolled back and groaned in orgasm as the jet battered her clitoris relentlessly.\n\n\"No, try this,\" Paris insisted and rolled Velma over onto her right hip and pushed her buttocks against the wall of the tub.\n\n\"Uh!\" Velma grunted.\n\n\"It getting you?\" Paris giggled.\n\n\"I think so,\" Velma said.\n\n\"Let me see,\" Paris said and Velma felt the other girl's hands at her crotch, then wiggling around behind her, tickling around her tightly clenched anus.\n\nScoot up,\" Paris ordered and easily pushed Velma up slightly.\n\n\"Oh, uh, oh damn!\" Velma grunted as the jet hit her clenched anus, sending little ripples from her spine to the top of her head.\n\nParis smiled at her.\n\n\"Isn't that great!\" she asked and let go of Velma's leg and waist and sloshed back to the opposite wall and again flattened herself against it.\n\n\"What else do you, um, what else do you do, with your butt?\" Velma asked.\n\n\"Promise not to tell anyone?\" Paris asked. And sloshed back over to Velma.\n\n\"Uh huh,\" Velma responded.\n\n\"I like to um, I like to stick my fingers in there, when I you know, pleasure myself,\" Paris whispered. \"And I like it when...\"\n\nHer face clouded over.\n\n\"I USED to like it when Grant would do me up the butt,\" she said bitterly. \"I liked it when he'd ream me, you know, stick his tongue up there, get it all wet, then he'd stick a couple of fingers in and get it all nice and ready.\"\n\nParis slipped back under the water and reappeared at the far wall. She hit the button and the jets ceased.\n\n\"Aw!\" Velma complained.\n\n\"We're getting bubbles all over the floor,\" Paris apologetically explained. \"Consuela doesn't like cleaning up all that water.\"\n\n\"We don't have to get out yet, do we?\" Velma begged.\n\n\"No, no, just had to turn the jets off,\" Paris smiled and again disappeared under the bubbles.\n\n\"Ow!\" Velma giggled as Paris playfully pinched her on her right breasts, then resurfaced amount the mountain of bubbles.\n\n\"You really, you really stick your fingers, you know, up there?\" Velma whispered.\n\n\"Uh huh,\" Paris blushed.\n\n\"Why? What's that like?\" Velma asked, still whispering.\n\n\"I, um, I'll show you, if you'd like,\" Paris offered.\n\nUh uh!\" Velma said quickly and Paris looked slightly sick at Velma's quick refusal.\n\n\"I don't know, that just seems kind of, you know, weird,\" Velma said.\n\n\"Well, yeah, I guess,\" Paris said and looked away, embarrassed.\n\n\"You really do that?\" Velma asked. \"A lot?\"\n\n\"No, not a lot,\" Paris denied. \"Maybe once or twice a week.\"\n\n\"I, really?\" Velma said.\n\n\"You like it when the jet was hitting you there?\" Paris asked.\n\n\"Well, yeah, but...\" Velma admitted.\n\n****\n\n\"Velma, you don't have to do that,\" Paris said as Velma knelt on the bathroom floor and sopped up the puddles of cold water.\n\n\"We can't just leave it here,\" Velma argued.\n\n\"But, but, that's what Consuela's here for,\" Paris said.\n\n\"Uh uh,\" Velma said. \"She didn't make this mess; we did.\"\n\n\"Okay, fine, whatever,\" Paris said and picked up another towel and knelt next to Velma and mopped up the water.\n\nFinally, Velma stood and dropped the sodden towel into the hamper.\n\nVelma shrieked as Paris playfully popped her buttock with the end of her wet towel.\n\n\"No, no!\" Paris screamed out and laughed as Velma advanced on her.\n\nVelma grabbed Paris and easily pinned Paris' arms down at her sides. The two girls were the same height, five feet, four inches. Paris giggled, then Velma screamed, then laughed as Paris playfully pinched her Buttock.\n\n\"Not ticklish, are you?\" Velma asked menacingly.\n\n\"If you tickle me, I swear I'll pee on you!\" Paris threatened, already giggling in anticipation.\n\nVelma quickly let go of Paris and backed away sixthly, no longer smiling. She hadn't realized it at first; the adrenaline of competition blocking out all other sensations, but her breasts had been rubbing against Paris large breasts, her crotch had been firmly mashed against Paris' hairless mound. She blushed hotly and looked away.\n\n\"So there!\" Paris said and stuck her tongue out at Velma.\n\n\"Whatever,\" Velma said.\n\nChapter 8\n\nVelma again wiggled in the bed. It was so very soft; Paris said it was a 'pillow-top' mattress. The sheets were Egyptian cotton, pink of course. The simple nightshirt, again pink, was a sensuous silk. Paris laughed as Velma gasped and pulled on a matching nightshirt.\n\n\"Good night,\" Paris said and kissed Velma on the lips.\n\n\"Good night,\" Velma said and snuggled down onto a stack of pillows.\n\nA moment later, she felt Paris' hand on her back.\n\n\"See if you can guess what I'm writing,\" Paris whispered, and then began to 'write' onto Velma's back with the tip of her index finger. She scribbled then paused.\n\n\"I,\" Velma said.\n\n\"Uh huh,\" Paris said then wrote some more and paused.\n\n\"Love,\" Velma said.\n\n\"Okay,\" Paris said and wrote again and paused.\n\n\"You,\" Velma said and laughed.\n\n\"Yay!\" Paris laughed, and then Velma heard her rustling.\n\n\"Okay, your turn,\" Paris demanded.\n\nVelma rolled over and thought and thought, then smiled and said, \"Okay, but it's a long word, okay?\"\n\n\"Then go slow,\" Paris said.\n\n\"T,\" Velma wrote, Paused then added an 'H.'\n\n\"Thunderstorms,\" Paris finally said \"'I Like thunderstorms.'\"\n\n\"Yep,\" Velma laughed, and then flopped over onto her stomach.\n\n\"I,\" she said and Paris bent close and whispered in her ear.\n\n\"Don't say it until I put a 'period' on it, like this, Okay?\" she said and to demonstrate a 'period,' jabbed Velma in the back with the tip of her finger.\n\n'I,' Paris began again and Velma began to get a funny, almost queasy feeling in the pit of her stomach. It wasn't a bad feeling, just was a very unfamiliar feeling.\n\n\"Well?\" Paris demanded almost immediately when she put the 'period' at the end of her sentence.\n\n\"'I think you are beautiful,'\" Velma said.\n\n\"Oh, thank you!\" Paris said and burst into merry laughter.\n\n\"You are, you know that?\" Velma said and was glad for the darkness; Paris could not see her blush.\n\n\"Sometimes I don't feel all that beautiful,\" Paris admitted. \"A lot of times, I wish I was you.\"\n\n\"Me?\" Velma exclaimed. \"Why me\"\n\n\"'Cause you're so pretty, but you don't give a shit what anyone thinks about you; you just do what you want and don't even care,\" Paris said.\n\n\"You're wrong,\" Velma whispered. \"I do care, I care a lot and it hurts a lot.\"\n\n\"I mean, you're not all worried about if you got the right clothes, you're hair is always just right, I used to think you had the best make-up in the world, then I find out you don't even have to wear any!\" Paris went on.\n\n\"Paris, I can't afford the 'right' clothes, unless it's at Goodwill,\" Velma admitted.\n\n\"And you have the perfect body, God, you're just great!\" Paris said.\n\n\"Shut up, Paris,\" Velma laughed, embarrassed.\n\n\"I love you,\" Paris whispered and gave Velma a soft, lingering kiss.\n\n\"Love you too,\" Velma whispered back when Paris finally pulled her soft lips away.\n\nHer heart was in her throat and that slightly sick feeling was still in her stomach.\n\n\"I want to be your lover,\" Paris whispered and again put her soft lips to Velma's lips.\n\n\"What?\" Velma exclaimed when Paris pulled away again.\n\n\"I want to be your lover,\" Paris repeated, her tone slightly frantic. \"You don't have to do anything, just let me, please? Let me make love to you, please? And if you don't like it we can, I'll stop, okay?\"\n\nVelma felt Paris' hands at the buttons of her sleep shirt and then felt Paris' lips at her neck. Then cool air blew across her bared breasts.\n\n\"Mmm,\" Paris moaned in her throat as her lips encircled one of Velma's stiff nipples.\n\n\"Oh God, you're so beautiful,\" Paris moaned and undid a couple more buttons.\n\nVelma combed her fingers through Paris' long blonde hair as Paris rained kisses all over Velma's belly.\n\nThe last button was undone and Paris sighed happily as she spread the sleep shirt wide open.\n\n\"Mmph!\" Velma groaned and hugged a pillow to her face as Paris' tongue slowly, Maddeningly dragged up and down her pussy lips, then tried to force its way inside of her.\n\n\"Oh!\" Paris moaned and Velma could hear the wet, sloshing sounds of Paris fingering her own pussy while she licked at Velma's pussy.\n\n\"Aah!\" Velma screamed into the pillow as Paris located her clitoris and gave the hypersensitive organ an almost painful suck.\n\n\"Yes, yes, yes,\" Paris chanted as Velma orgasmed.\n\nVelma weakly responded as she felt Paris roll her over onto her belly. The hem of her sleep shirt fluttered up, exposing her round buttocks to the cool air.\n\n\"Oh, God!\" Paris moaned loudly as she orgasmed.\n\nVelma felt Paris' hands pull her buttocks apart. She felt Paris' warm breath on her hot flesh, then felt Paris' tongue slowly trace the outside of her anus. Around and around, Paris traced her tongue against Velma's anus. Then Paris stiffened her tongue and tried to force it into Velma's rectum.\n\n\"Oh!\" Velma groaned, as Paris pulled at her buttocks harder in an effort to gain entry.\n\n\"Oh, God, your ass is so beautiful!\" Paris moaned and abandoned the languid measures and began ravenously lapping and sucking at Velma's anus.\n\n\"Uh!\" Velma grunted as Paris began to work her middle and index fingers into her rectum.\n\n\"Oh, Baby, Baby, Baby,\" Paris chanted as she drove the two fingers in and out of Velma's clutching rectum.\n\n\"Aah!\" Velma screamed into her pillow as Paris' thumb mashed against her throbbing clitoris.\n\nShe caught her breath as Paris flopped on the bed next to her, then slithered over and put an arm across Velma's back.\n\n\"I love you,\" Paris whispered and thrust her tongue into Velma's still gaping mouth. \n\nVelma returned the kiss and put her arm across Paris' nude body. She realized that Paris must have taken off her sleep shirt at some time while she made love to her.\n\nChapter 9\n\nParis woke up to see Velma seated in the bay window, knees pressing to her chin, watching the dawn break. Her heart caught in her throat; Velma was truly breathtaking, beautiful in the early morning light.\n\nBut suppose, in the light of day, Velma was ashamed of what they had done?\n\nParis slowly, cautiously got out of bed and Velma turned and looked at her. Paris' heart leapt for joy as Velma smiled and held out her arms to her.\n\n\"Come watch the sunrise,\" she whispered and pulled Paris onto the bay window seat to sit in front of her. \n\nShe put her head on Paris' shoulder, combed Paris' blonde hair away from her ear, and lightly kissed the ear. She hugged Paris to her tightly and stared as the sun finally, triumphantly claimed the sky for itself.\n\n\"You're beautiful,\" Velma whispered into Paris' ear and kissed it again.\n\n\"You're the beautiful one,\" Paris argued.\n\nVelma squeezed Paris tightly.\n\n\"I got to pee,\" Paris lightly complained.\n\n\"Okay,\" Velma said and let her lover go.\n\n****\n\nParis let a little squeal escape when Velma grabbed her as she exited the bathroom. Velma pushed the lightly struggling blonde backward until Paris was against her bed.\n\n\"Oh!\" Paris moaned as Velma pushed her to lie on her mattress, feet dangling off the side.\n\nVelma got down on her knees and slobbered her tongue up and down the wet slit and found Paris' clitoris easily.\n\n\"Oh God!\" Paris screamed, muffling her scream wit a pillow.\n\nVelma thought to herself that Paris did not taste at all like fish, as she'd always heard people joke. The taste was a musky one, not at all unpleasant. She used her fingers to spread the heavy pussy lips apart wider and dug her tongue in as far as she could.\n\nShe lowered her head and tentatively touched Paris' anus with her tongue. It didn't taste at all like she'd imagined it would. It had a musky, earthy taste to it and she spread Paris' buttocks apart with her hands and Paris' anus opened slightly.\n\n\"Oh God, oh God, so good,\" Paris moaned and reached around to spread her own buttocks apart even wider for Velma's tongue.\n\nVelma wet a finger in her mouth and brought it up to Paris' anus and slowly inserted it.\n\n\"Yes!\" Paris hissed and grabbed Velma's wrist and fucked it in and out.\n\n\"Another,\" Paris begged and Velma, after a moment's hesitation, added another finger.\n\nUh, uh, uh!\" Paris grunted and Velma added a third finger.\n\nParis screamed again as Velma dragged her tongue up and down Paris' slit, then sucked Paris's clitoris into her mouth.\n\nVelma sat back on her heels and looked in amazement; her entire hand was inside of Paris' rectum and Paris was trying to drive her fist in deeper. Paris' pussy drooled her excitement down her thighs and down Velma's forearm. The pillow she clutched to her face hid Paris' face.",
        "With a final spasm, Paris weakly pulled at Velma's forearm, indicating she couldn't take it any more. \n\n\"Oh my goodness!\" Paris giggled as a low rumbling fart escaped.\n\nVelma wobbled on unsteady legs to the bathroom and washed her hands clean in the sink.\n\nWhen she came back, Paris had not moved from her spot on the bed. Paris dragged a couple of fingers up and down her wet slit and hummed happily.\n\n****\n\nVelma pulled her shorts on and was preparing to pull the same blouse she'd worn the day before.\n\n\"Hey, try this on,\" Paris said and handed Velma a blouse from her closet.\n\nVelma looked at the pretty blouse, a short sleeved silk button up. The tags were still on it.\n\n\"Oh, that is so pretty on you!\" Paris exclaimed and fiddled with the collar.\n\nYeah, it is nice,\" Velma, agreed.\n\n\"It's yours,\" Paris decided and went back to trying to pick out an outfit for herself.\n\n\"Paris, I can't take this!\" Velma protested.\n\n\"Sure you can,\" Paris laughed. \"Stacie gave it to me for my birthday, but I guess she forgot she gave me the exact same thing the year before!\"\n\n\"See?\" she said and pulled a similar blouse out of the closet and showed it to Velma.\n\n\"Oh, okay, um, thanks,\" Velma, conceded.\n\n\"Sure,\" Paris said and pulled a short sleeve blouse out and shrugged it on. She then walked over to the chest of drawers and pulled on a pair of khaki shorts.\n\nShe and Velma prepared to leave the bedroom and Paris looked at Velma.\n\n\"Do you still love me?\" she whispered to Velma.\n\n\"Yeah, sure,\" Velma agreed.\n\n\"Even though we, um, I made love to you?\" Paris asked, her blue eyes searching Velma's brown eyes for any sign of rejection or revulsion. \"And then I made you do, do me up the butt?\"\n\n\"I love you,\" Velma assured Pairs and kissed her on her lips.\n\n\"Mmm,\" Paris moaned and thrust her tongue into Velma's mouth.\n\n****\n\nConsuela smiled and put the two plates down in front of the girls. She picked up Mr. Mouton's plate and returned to the kitchen. Velma took her fork and cut a corner off the French toast and gasped as the cream cheese and fruit filling came oozing out.\n\n\"How'd you do that?\" she demanded and Consuela looked over at the girl.\n\n\"How I do what?\" she asked, smiling.\n\n\"Get that stuff inside the bread like that,\" Velma demanded to know.\n\n\"You eat another?\" Consuela asked and Velma nodded her head yes.\n\n\"Okay, you come watch,\" Consuela said.\n\nShe took two slices of sourdough bread. She quickly spooned the softened cream cheese onto one slice of the bread, and then spooned cherries on top of that. A light brushing of egg wash around the edge of the bread, then she put the other slice on top and lightly pinched around the edges. She picked up the thick 'sandwich' and dunked it into the egg wash and transferred the now soggy bread to the hot cast-iron skillet.\n\n\"And that's it,\" Consuela smiled, flipped the bread in the pan and let it finish cooking.\n\nChapter 10\n\n\"Fucking great,\" Velma groused and Paris looked over.\n\nStacie and Kimberly were wandering their way, a couple of bags already in their hands. Stacie was the first to see Paris and she smiled widely. Then she saw Velma and her smile froze. Kimberly looked over at Stacie to see what made the girl falter in her step. She followed Stacie's line of vision and smiled as she too saw Paris.\n\n\"Um, hey, um, Paris, what's up?\" Stacie said, slightly angling her body so that Kimberly was between Velma and herself.\n\n\"Nothing, you?\" Paris easily said, smiling.\n\n\"Oh, you know,\" Kimberly, said, obviously as uncomfortable as Stacie.\n\n\"We're trying to get a swimsuit for Velma, but you know all the good ones been gone like months ago,\" Paris said.\n\n\"Yeah, spring's the best time,\" Stacie agreed.\n\n\"Yeah, tell me about it,\" Paris agreed. \"I'm thinking we might even have to go to Bailey's, and you know what cheap stuff they got!\"\n\n\"Bailey's Sporting Goods?\" Kimberly said and made a gagging sound. \"Stay away from the manager! He's like this really old, gross guy that wants to follow you around all the time!\"\n\n\"Ew!\" Stacie, Velma and Paris all screeched in disgust.\n\n\"But we did find these really cool jeans,\" Paris enthused and took the bag out of Velma's hands. \"They were on sale, half off!\"\n\n\"Paris, you know your old man ain't never going to let you wear those!\" Stacie laughed when Paris showed them the low-rider jeans.\n\n\"Ain't for me, they're for Velma,\" Paris said and pulled another pair out, and showed them the distressed jeans.\n\n\"And these tops; I think they look so awesome with the jeans,\" Paris went on and dug out the two black tops.\n\n\"Yeah,\" both Stacie and Kimberly agreed.\n\n\"We're going to Chelsea's, you eat yet?\" Paris asked.\n\n\"Um, no, not yet,\" Stacie and Kimberly said.\n\n\"Their salads are the best,\" Paris assured Velma.\n\nVelma's eyebrows shot up as she looked at the menu. At fifteen ninety-five, their salad had better be good.\n\n\"I like the avocado,\" Paris said and Velma looked over at that salad.\n\n\"The Chinese is the best,\" Stacie argued.\n\n\"Yeah, it would be, if they'd leave that mustard stuff off,\" Paris argued.\n\n\"That's what makes it so good,\" Stacie replied.\n\nVelma felt Paris tap her leg and looked over. Paris pointed under the table in Kimberly's direction and Velma bent down, as if to retrieve her napkin. \n\nShe saw Stacie and Kimberly's fingers entwined, lying in Kimberly's lap. She sat up and looked over at Paris and smiled.\n\n\"'I Love you,'\" Paris wrote on Velma's bare leg and smiled at Velma.\n\n****\n\nThey did have to go to Bailey's and the manager; a short, fat bald-headed man did follow them around. Velma tried on three different suits, one a one-piece and the others were bikinis and Paris decided the red bikini was the perfect one for Velma.\n\n****\n\n\"Thank you,\" Velma said as Paris pulled up in front of the trailer.\n\n\"Thank you, Paris said quietly as she held Velma's hand.\n\n\"Thank me? For what?\" Velma asked.\n\n\"I was so lonely without you,\" Paris said and squeezed Velma's hand.\n\n\"Me too,\" Velma agreed. \"Come in?\"\n\nShe knew Momma was most likely at the bar; the sun hadn't even begun to set yet.\n\n\"I can't,\" Paris said sadly. \"I didn't do any of my homework this weekend.\"\n\n\"Oh shit!\" Velma said. \"Me either!\"\n\nChapter 11\n\nShe watched the sun set and marveled at the beauty, the splendor of it all. Consuela came outside to let her know that dinner was ready and Paris looked at the woman and nodded.\n\n\"You're friend?\" Consuela said as she stood aside for Paris to pass. \"I like her, she's nice.\"\n\n\"I like her too,\" Paris smiled and gave Consuela an affectionate pat.\n\n****\n\nVelma woke up and turned off the alarm clock. The trailer was dark and quiet. She went to the bathroom and relieved herself, then climbed into the shower. She pulled the moist scrubbing bag from the plastic bag and smelled it and smiled.\n\nThe peppermint tingled her skin and she left the shower feeling awake and invigorated.\n\nIt was still dark outside as she trekked the familiar route to the bus stop. She slowed her steps as she could see the headlights of a car at the entrance of the dirt road, then smiled widely as she recognized Paris' car. She could hear the glorious, beautiful music spilling out.\n\n\"Get in,\" Paris called out and Velma opened the passenger door.\n\n\"Hey!\" she said happily. \"What are you doing here?\"\n\n\"Taking you to school,\" Paris smiled and leaned over to kiss Velma passionately.\n\n\"But first,\" she whispered and playfully unsnapped Velma's jeans.\n\n\"Paris!\" Velma laughed and tried to snap the jeans again.\n\n\"But first,\" Paris said and tried to wrest Velma's hands away from the snap. \"I want to make love to you, I want to eat that beautiful ass.\"\n\nVelma knelt on the back seat of the car, her new low-rider jeans bunched up around her knees.\n\n\"Mmm,\" Paris moaned as she lapped and sucked at Velma's anus. Her left hand clawed inside of her own jeans, rubbing frantically at her pussy, her right hand fingered in and out of Velma's drooling pussy.\n\n\"Oh!\" Velma shudder in orgasm and Paris redoubled her frenzied sucking and lapping.\n\n****\n\n\"Hi Mrs. Davis,\" Paris smiled as she entered the woman's office.\n\n\"Hi,\" Mrs. Davis smiled in return. \"What can I do for you?\"\n\n\"You're the Senior Advisor, right?\" Paris asked.\n\n\"Yes, I also do the advising for the juniors,\" Mrs. Davis agreed.\n\n\"Okay, what college is Velma Aucoin going to?\" Paris asked.\n\n\"Velma?\" Mrs. Davis asked, upper lip involuntarily curling up in a sneer. \"I'm not sure that she's going to any...\"\n\n\"She's a straight 'A' student, has been for three years now, and you've not gotten her into any college?\" Paris asked, her disdain evident.\n\n\"Well I um, well she hasn't come to me for...\" Mrs. Davis stammered, not used to being cornered by any of her students.\n\n\"Mrs. Davis, that's your job,\" Paris coolly reminded the woman.\n\n\"Well, I suppose I could get her into maybe McNeese, or...\" Mrs. Davis said, reaching for the familiar folders.\n\n\"She's going to Tulane, with me,\" Paris told the woman. \"And get her a scholarship.\"\n\n\"Paris!\" Mrs. Davis exclaimed. \"You cannot be serious! A scholarship to Tulane would take at least two years to arrange!\"\n\n\"Is it her fault you're incompetent?\" Paris sneered. \"She is a Straight 'A' student and living in impoverished conditions and the product of a single parent domicile; surely those would qualify her for a scholarship. So, um, like, why don't you do your job and see what you can do, huh?\"\n\nMrs. Davis felt her anger begin to boil to the surface.\n\n\"You better get off your ass and do what you can to get her in Tulane,\" Paris said and leaned close to the woman. \"Or I will have you sued for gross negligence and misconduct. You'll never teach another class in the entire state of Louisiana.\"\n\n****\n\nVelma looked at the packet and frowned. She'd not ordered any information from Tulane, nor had she requested any scholarship information. Her new cell phone played Beethoven's Fifth Symphony and she flipped it open.\n\n\"Did you get it?\" Paris' voice came bubbling through.\n\n\"Paris, this is the thousandth time you've asked me...\" Velma said, exasperated. \"Hang on a minute. What college are you going to?\"\n\n\"Tulane University,\" Paris laughed; that question let her know that Velma had indeed gotten it.\n\n\"Yes, Baby, I got it,\" Velma said and begin to cry softly.\n\n\"Consuela wants to know what you want for dinner,\" Paris bubbled.\n\n\"I love you so much,\" Velma sobbed into the phone.\n\n\"Be right there,\" Paris said and terminated the call.\n\n****\n\nEpilogue.\n\nJim Boudreaux was able to walk, with the use of a cane, onto the small stage at graduation to give Velma and the rest of the Class of 2006 their diplomas. He beamed with almost fatherly pride as he called upon the valedictorian of the Class of 2006 to give her speech.\n\nJim Mouton and his wife, Georgette dabbed at their eyes as the valedictorian gave her speech. They were as proud of Velma as if she had been their own daughter. Consuela did not try to cry silently; her pride in Velma audible to nearly the entire auditorium.\n\nEsther Aucoin also beamed with pride as her daughter spoke eloquently of the sunrises that lay ahead for her and for the Class of 2006.\n\nVelma spoke of the sunrises, the occasional thunderstorms, even of the sunsets, of the beautiful music that could be heard and felt.\n\nShe did not speak of, not out loud, the love she felt for Paris Angela Mouton. She did not speak of the sunrises she saw in Paris' eyes, or the music that spilled from Paris' lips.\n\nShe did not speak of the brilliant, glorious thunderstorms that Paris awakened in her when she hugged her, or when she heard the soft, sweet 'I love you.'\n\nStacie Coutre enrolled in the University of Arkansas, simply to get away from Mumphrey, Louisiana. She does not plan to ever return; she doesn't even come home for Thanksgiving or Christmas. She has cut all ties with her family and former friends.\n\nKimberly Webber was arrested on the campus of the University of Arkansas for stalking Stacie. Kimberly has been ordered to stay at least five hundred yards away from Stacie. Kimberly's father pulled a couple of strings to keep his daughter out of jail. \n\nCurrently she is enrolled at the University of Georgia. Her third roommate has applied with the Dormitory Matron to please, please switch her to another room. She says it is frightening; the way Kimberly sits and stares at her for hours on end without ever saying a word.\n\nMrs. Davis is in the process of getting a divorce from Sheriff Don Davis. To her utter dismay, though, her former lover, Jim Boudreaux, has informed her that he had an epiphany as he lay in the hospital; he would not continue to be her lover. He certainly would not be marrying any woman that would so willingly and easily cheat on her husband.\n\nStevie Miller enrolled in the Army upon his graduation in 2008. A roadside bomb killed him and three of his platoon in Iraq. Velma sent the Millers a heartfelt sympathy card.\n\nMiss Hebert still drives the bus for H. P. Long and O.K. Allen schools.\n\n\n\n****\n\nParis let herself into the condominium her father bought for her and Velma and sniffed the air. Velma was cooking smothered steak, another one of the dishes Consuela had taught her. She smiled; Chopin's piano was a perfect compliment to the smells in the home. She put her schoolbooks down on the leather couch next to Velma's books and turned the corner \n\nVelma stood in the small kitchen, nude except for an apron. She turned and smiled at Paris.\n\n\"Mmm,\" Paris moaned and she and Velma kissed softly.\n\nHer hand trailed up Velma's leg, closer and closer to that beautiful ass.\n\n\"\"Uh uh, leave my ass alone; I'm not burning five dollars worth of meat just 'cause you're horny,\" Velma said and nudged Paris away.\n\n\"Fine, fine,\" Paris complained playfully. \n\nShe left the small kitchen and Velma heard her stomping up the circular stairway. Moments later she heard Paris' 'Whee!' as Paris slid down the banister.\n\nParis reappeared in the doorway of the kitchen, nude except for the large strap-on cock and leather harness. Paris was liberally coating the tip of the dildo with lubricant.\n\n\"I told you, I'm not burning five dollars worth of meat,\" Velma complained as Paris advanced on her.\n\nThe End."
    ],
    "authorname": "JimBob44",
    "tags": [
        "lesbian anal",
        "lesbian romance",
        "poor girl",
        "rich girl",
        "small town",
        "louisiana"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/velma-2"
}