{
    "title": "Lost Empire Ch. 68",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner- Thomas\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship)\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0805 - Toran\n\n0808 - Radella\n\n0908 - Tara - Mara\n\n--------------------------\n\nUngrown - unnumbered\n\n------------------------\n\n2 - onboard Shelby, in Re-gen\n\n0250 Tendra\n\n1000 - Sherry\n\n0999 - Zan - still lost\n\n--------------------------------\n\nKnown and OR numbered\n\n-------------------------------\n\n0501 - Thaddeus\n\n???? - Lena\n\n---------------------------------------------------------------------------------------------------------------------\n\n\"Thaddeus! No!\" Shelby gasp out. \"Please son, there's no need to do this. We will find them all.\" Shelby was begging.\n\nTears were now starting to stream down Lucie's face as she was also listening to what was being said. \"NO!\" She suddenly yelled.\n\nShelby also had tears in her eyes as she said, \"You have been out here alone for so long, please come home to me.\"\n\nBoth started to object then were suddenly quiet as Shelby watched the box as it started to drift away. Turning toward Derrick she couldn't look up from the floor.\n\n\"I'm sorry Derrick, Thaddeus refuses to come aboard. He says he cannot 'til he knows that they all are safe. I cannot force him.\" Shelby told Derrick her face still turned to the floor.\n\nDerrick could only shake his head. There was dedication and then there was damn dedication. In this case he'd have to reserve his opinion.\n\n\"Alright Shelby, I want a marker on him. If we are to leave him here, I want to make sure that we can come back for him.\" Derrick told her.\n\nA smile appeared on her face as she rapidly hurried to carry out Derrick's instructions. A moment later a small tracking device shot out of Shelby hooking to the newly released box. With a last tear in her eye Shelby turned toward Derrick even as the ship turned away from the box.\n\nShelby was on the floor beside an almost shattered Lucie. \"I tried to convince him to come with us. He wouldn't listen to me. Why? After being out here so long why?\"\n\n\"I have no answer for you my dear. I assume it has something to do with honor I'm not sure.\" Looking up at Derrick she could see the look of pain and pride on his face.\n\nTaking a deep breath Derrick took another moment to speak. \"Get the sixth one Shelby. Then we can start on the next eight. The faster we can get them the faster we can all be together.\" Turning away from the two females, neither saw him curse under his breath.\n\n______________________________________________________________\n\nBoth Kimison and Rayburn were in their racks not long after their visit with Derrick. Almost an hour later Kimison jerked awake something was bothering him. Getting up he went to where he and Rayburn had been working.\n\n\"Good evening Commander.\" Tempro greeted him when he turned the lights on. \"Can I be of assistance?\"\n\n\"Something has been bothering me since Commander Rayburn's incident. I need to go over the logs of what transpired.\" Kimison ordered.\n\n\"Yes sir, now brining up all recordings and data. Are you looking for something specific sir? Something I might be able to help you discern?\" Tempro asked.\n\n\"If I knew I would advise you. For right now I am trying to determine why he shut off almost all the safeties.\" An hour later Kimison was starting to get frustrated. \"What in the hell had you so worried that you shut them all off? Hell, half of them though not all of them, maybe...\"\n\nKimison stopped, looking behind him, as he thought Tempro was keeping a very close eye on him. Damn it ,now that he knew, how was he going to test the theory?\n\nScrolling through a few more screens, Kimison would type a command then move on. Almost another hour later an alarm sounded then immediately shut off.\n\n\"Warning! Warning! Instability in A.I. personality matrix. Warning, all A.I. functions shutting down to re-boot.\" Came Tempro's voice.\n\nKimison shook his head who knew that the same program from Celeste would work here. He only had a few minutes at most as he started to rapidly type more complex functions on the screen. Finally finished, he donned the head set, then hit the activation button.\n\nIt wasn't an alarm, Tempro nor anything tangible that caused Rayburn to jerk awake. It was a feeling of incredible pain in his head. He almost made it to the door of the work lab when it increased.\n\n\"MARY! TEMPRO!\" He was yelling as he fell through the door way. Mary appeared immediately though strangely Tempro was absent. The next thing he noticed, was that Kimison was screaming at the top of his voice.\n\n\"Can you shut it down?\" Rayburn asked.\n\n\"Attempting now, it appears that my son is in re-boot. I am afraid he won't be any help for two minutes.\" Mary stated.\n\nRayburn nodded as he ran for the main console. Bringing up the headset control he cursed when he saw that Kimison had almost the exact settings that he had before. \"Clearing a path, now beginning extraction.\"\n\nA minute later the machine shut down as Rayburn ran to where Kimison was prone on the deck.\n\nA moment later Kimison's eyes open as he stared at Rayburn. \"A modified sigma energy variance cannot be maintained if the energy of the matrix is not adjusted accordingly. Packets of two gigabytes can be added with such adjustment.\"\n\nRayburn was writing as fast as he could. That was the one way he hadn't been sure of. \"You idiot! Are you actually trying to fry your brain? What in the hell got into you?\"\n\nIn a barely whispered voice Kimison stated, \"I know you moron. I saw what you did only took me a little longer. I...\" Rayburn could only shake his head as Kimison's eyes rolled up into his head then he was unconscious.\n\nSighing, Rayburn nodded, he hadn't thought anyone would find what he had. \"Better let the Emperor know. I'm getting him back to his bunk. Then I'm going to sleep myself.\"\n\nA now re-booted Tempro nodded to his mother then she was gone. \"Would you like help sir?\" Tempro asked. \"I wish to apologize to you sir. He caught me completely unaware.\"\n\n\"No need to apologize Tempro, we both know he is far smarter than he lets on.\" Here Rayburn shook his head, \"A hell of a lot smarter.\"\n\n________________________________________________________\n\nThree fourths of the distance to the Imperial world from where the battle had taken place, Admiral Hartwell was having problems of his own. It seemed that the female he'd started calling Bee was still having an aversion to clothing.\n\n\"You have to wear them where we are going.\" Hartwell told her again.\n\n\"NO! They are an abomination! Please master, Please do not make me wear them!\" Bee pleaded.\n\nTaking a deep breath Hartwell thought to take a different route. \"You said that you are mine, correct?\"\n\nBee looked at him with narrowed eyes then slowly replied, \"Yes lord sir, I am yours. This is the law after all.\"\n\n\"Then, you should not be disobeying my orders correct?\" Hartwell stated hoping that this worked.\n\n\"Yes, lord sir, though,\" Here Bee lowered her head. \"Though you haven't made a direct claim to me either. Until such time, I have to obey your orders though, not pertaining to interaction between us.\"\n\n\"So, you're telling me, you will obey me as long as it's not personal.\" Hartwell said a feeling of dread creeping into him.\n\nWith a bright smile Bee nodded her head emphatically. This of course caused Hartwell to groan again.\n\n\"So, the fact that I have not claimed you means that, you don't have to do all I say?\" Hartwell said the dread starting to grow larger.\n\n\"You are a very smart master, lord sir, many do not gain that knowledge for a longer period of time.\" Bee stated a slight smile on her face seeing Hartwell with a look of confusion on his face.\n\nFinally, with a groan Hartwell threw up his hands, \"So, no matter what, you won't wear them unless I claim you.\" Hartwell's eyes narrowed as he stared at Bee. These females appeared to be far smarter than he'd given them credit.\n\n\"No Lord Sir, I will not. No matter where we go, no female is allowed to cover themselves. Only when we have been bred, are we ever demanded by society to cover ourselves.\" Bee related as if every day information.\n\nHartwell issued a slight growl from his throat. He had to convince the commander to declare war on these idiots.\n\n_________________________________________________\n\nOn the duke's planet, Willian and Trent Hartwell had finally helped the last of Greeson's men to the cave.\n\nThey had finally sat down to relax after the long day. Neither had eaten having to help constrain all the prisoners that went up to the ships. Both had just lifted a fork to their lips, when they both swore they saw something flash past their location.\n\nBoth stopped to stare at the area where they saw the flash. Turning to stare at each other they both shrugged.\n\nTrent Hartwell thought a moment longer, then grabbed a communicator that Greeson had left the last time.\n\nOpening the communicator up he hesitated, \"Uh hello? I was told by an officer Greeson that if I saw anything strange to call. We both just saw a flash near our area much like when Greeson left here as well as his master.\"\n\nA moment later a female voice came back. \"Please identify yourself.\"\n\n\"I am Trent Hartwell; I am the uncle of Johnathon and Lucie Hartwell.\" Trent responded a little befuddled.\n\n\"Please stand by.\" The female voice responded.\n\nA moment later a beam shot out of the communicator, revealing a petite older woman. \"I am Mary, the Palace A.I. Please recount what you saw.\"\n\n\"I was hoping to tell Greeson or the Emperor.\" A slightly shocked Trent told Mary.\n\nGiving a slight sigh Mary started again. \"Unfortunately, the Emperor is at the other side of the galaxy. As for Lieutenant Greeson, he was far more injured than any at first thought. He is for the moment recovering in the med bay.\"\n\nAn even more shocked Trent and William Hartwell could only stare at each other. Just what in the hell was going on? This seemed to be an almost all-out war.\n\nFinally, Trent then William retold exactly what they had seen. Mary stood there taking in all that was said. It sounded very familiar though she had no hard data to go on at the moment.\n\n\"I will report this to the Emperor as soon as possible. Though at the moment he is rather close to a field of interference. Thank you for the information.\" Mary said then the com went silent.\n\n\"Well,\" Trent started, \"It seems that we aren't the only ones having problems right now.\"\n\n_________________________________________________\n\nGeneral Norman had left not long after his daughter and Greeson. Walking to the nearest com he had the med bay prepare for them.\n\nWhen they were finally there he breathed a sigh of relief. Heading back to his duty station something was nagging at the back of his mind. The way that the pilot had spoken for one. For one who was just a pilot and nothing more, he seemed to have far more knowledge than Norman thought he should.\n\nThen there was the fact that her father had acted far more calm than he thought the man should have. Norman knew for a fact that the older man treasured his family. No, he should have been far more upset than he was.\n\nSomething wasn't adding up here, that was for sure. The thing was, he'd only spent a few weeks at a time on Kimon's planet. Not really all that much time to glean anything at all about their craft or art as they called it. True he had seen a few things that many would call miracles.\n\nShaking his head, it was only after the third brief visit that he earned their respect, plus nearly lost his life. A child had fallen on the roadway near him. Without even thinking, he'd stepped out grabbing the child getting it out of danger. Though he saved the child, he had been struck in the process. He awoke three days later bound in the foulest smelling bandages.\n\nLooking around he soon met the face of Isamu Sakuta plus several stately oriental males. Then he made the mistake of trying to sit up. Though the pain was intense, more than he'd had in a long time, he didn't make a sound promptly passing out.\n\nHe awoke a day later bound in even more foul bandages. A female about his and Kimon's age was sitting nearby. Upon seeing him awake she slightly smiled, then said into her com, \"Kare wa okite iru, chichioyadesu.\" (He is awake, Father)\n\n\"Arigato musume.\" Came the reply. (Thank you daughter.)\n\nLooking back at Norman her smile disappeared. \"We know that you are a great man. You did not have to prove it,\" here she bowed. Norman could only stare at her words. \"After you gave us so much honor, you tried even injured to honor father and the council. Father was very impressed, as was the council. It is hoped that the healing bandages will restore you to health.\"\n\nThough he was in pain beyond belief, Norman had to try and speak. \"Healing bandages?\" He mumbled through the bandages that were covering almost all of his body, plus most of his face.\n\nThe female's eyes were wide a moment then she slightly bowed to him. \"Again, you set out to prove just how strong you are. As I stated before it is not necessary. Especially for one who has been as close a Tomodachi to Kimon Dempsy as you have been. I know that has been more than a trial.\"\n\nNorman tried to shrug then immediately regretted it, wincing as a slicing, hot, wave of pain washed over him.\n\nThe female seeing it immediately applied another layer of foul smelling bandages. \"You must try not to move again. These will only help if you remain still. You should put all your energy toward healing. It might get you out of here faster.\"\n\nThe female moved to stand stopping only when Norman asked her a question. \"You know much about me, I know nothing of you. Could I at least know the name of my nurse?\" When she gave him a strange look, he had to think a moment. \"The person who is helping me to heal a Nasu.\"\n\n\"I am no Nasu. I am Onai Sakuta, it was an honor to help one as strong as you.\" The female stated then left.\n\nA few moments later the same Oriental bunch of males from before appeared. They were led by an older male that Norman again recognized as Isamu Sakuta.\n\nSitting nearby the older male spoke. \"Do not attempt to move young man. You have already shown us honor twice, though the second time was unnecessary. I understand that you are the close friend of Kimon Dempsy. Please do not attempt to talk. Yes, I can see that you are.\"\n\nIn a low raspy voice Norman slowly said. \"The female here before you, said it must be a trial to be his friend. Sir, I do not see it as such.\"\n\nIsamu Sakuta's eyes were wide, the man before him was obviously far stronger than they thought. \"I know you have many questions, rest now, when you are better we will continue. Sleep now it will aid you\"\n\nThe older man passed a hand over Norman. Damn! He could swear he could feel an almost invisible blanket settle on him. Suddenly his body, mind and eyes felt so heavy. Fighting as hard as he could was to no avail, with sleep claiming him.\n\nIt seemed as if two more days passed when he next awoke. Well, he thought he awoke, an angry looking Kimon was sitting by his Tamani. Where in the hell had he learned that?\n\n\"This one was only supposed to be with us here. You were not to perform acts of a hero.\" Here Kimon bowed to Norman. \"You are completely unaware what you have done, are you not?\"\n\n\"No,\" Norman stated his throat extremely dry. Kimon immediately held a small cup to Norman's lips.\n\nKimon nodded his head, \"you are being bestowed with an honorable position within my clan. It is not a high position, though it is a great honor to a Gaikoku hito, an outsider. Well,\" here Kimon smirked, \"you were, welcome to the clan my Tomodachi, Ani.\"\n\nNorman shook his head at the sudden memory that he'd seemed to have forgotten or blocked. He had always wonder why he and Kimon were always honored when they went back the last two times. He still hadn't learned who the child was all those years ago. Hm, something to look into.\n\nShaking his head, he sat at his desk trying to figure out what the hell was going on. Then it hit him after all these years. The female that had tended him, it had been Kimon's future bride! Holly shit! No wonder she had acted the way that she had. There was more there in his head, though for some reason it was still hidden, damn trying to get to it hurt his head.\n\n_______________________________________________________\n\nOnboard Onai's ship an alarm was going off. Immediately Riku opened his com. A moment later Isamu Sakuta's image appeared, \"It appears that the conditioning that he asked for is starting to fail. After all this time I would have thought that his mind was far stronger.\" The older man stated.\n\n\"Father, according to the latest readings, it has increased to more than five times its strength. Isn't that were he wished it to be?\" Riku asked.\n\n\"It is, though he will have to be tested before the memory shield can be lifted. He showed more honor than many are capable off. To lose part of one's self to protect a whole culture. Even I, do not think I could accomplish what he has.\" The older man stated.\n\n\"We may have to test him soon. It appears that he has already regained the day of the 'incident'.\" Riku said.\n\nThe older man's features held a momentary look of worry. \"Does it appear as if the shield is collapsing or merely parts crumbling?\"\n\n\"I will have to monitor him to make sure father. I cannot allow him to be released before he wished to be. I owe him that and very much more.\" Riku stated watching the readings labeled, Norman, Daniel memory shield.\n\nThe older man nodded to Riku then his image was gone.\n\n_______________________________________________________\n\nNot far from the remnants of the Tendraxian battle Derrick, Shelby, ship Shelby and Lucy had just picked up the fourteenth box. Lucy had just secured it when almost all the warning alarms went off.\n\n\"Warning! Warning! An extremely large contingent of Delcron ships entering the galactic boundary. Now gathering information as well as count. Presently I am picking up well over sixty thousand ships. Beyond that I have no clear resolution. It appears the energy from the Tendraxian ships is still interfering with sensors.\" Shelby suddenly stated.\n\n\"Shit!\" Derrick shouted, \"I thought we'd have more time than this. Is our proximity to the galactic edge the cause of their accelerated advance?\"\n\n\"No Derrick, it appears that they are almost as blind as we are sensor wise. Though I am afraid that the closer they get the more likely we will be seen. I am afraid that they have slightly better sensors than we do.\" Shelby said.\n\n\"We need to get the hell out of here as soon as possible. As close to the debris field as we are, that is going to take time.\" Derrick said with a sigh. Shaking his head, he turned to Shelby. \"Let's get going, I haven't seen any other race with better sub-light. I don't want to take the chance that these just might.\"\n\nBoth Shelby and Lucy nodded to Derrick as both ships started back toward the Imperial planet.\n\n\"It appears that it will be another six hours before we can activate the trans-warp engines.\" Shelby conveyed to Derrick.\n\nDerrick groaned as he went to a console to study the readings that they had gotten from the Delcron ships. They had met a few races that were nowhere as high as they were. There was always the first though. Also, this was another empire, as hostile as the galaxy they came from was, he was sure they tried to stay as far ahead as possible.\n\n__________________________________________________\n\nOnly a few hundred thousand miles away the Delcron Emperor was pacing. They had halted, scanning everything as far as they could. Cursing he saw that a huge field of debris with the same energy signature was blocking all their scans.",
        "Nodding his head, it was as he thought, there was hardly anything recognizable of the tech thief fleet left. Well, as far as their scanners could reach.\n\nHe was going to have them wait longer 'til he got a response from this new empire. Then he saw that, nothing was getting past the debris field. He'd checked with all the scientists to make sure they could transverse the field.\n\nFinally, he ordered them to move forward at a quarter speed. They had only advance a short time when there were two different energy signatures that suddenly left the area. They were fast, almost as fast as his ships. It shouldn't take long to catch them. \n\nWatching the reading the Emperor's mouth dropped open at the immense size of the two ships. If he could capture them they would strike fear into all their enemies. Then a clear scan came through as the Emperor smiled even bigger.\n\nSo, he thought, two of the old harbinger of death ships were still around. A damn fine prize, though as he remembered his empire had lost a major battle to just ten of those ships. Though they might look weak, they had a lot of power.\n\n\"Follow them, advise all ships not to engage.\" The Emperor ordered.\n\n\"Sir?\" His second asked perplexed. \"There are only two of them, surely we have the numbers to...\"\n\n\"Look closely at those ships, recognize anything about them? Anything in our history?\" The Emperor asked the entire bridge crew.\n\nAn older crew member was almost off the bridge when they stopped and gasp at what they heard.\n\n\"Sire?\" The crew man asked. \"Weren't those ancient harbingers of death ships almost unstoppable?\"\n\nThere was a myriad of gasps around the bridge, all heads snapped around to stare at the older crew member.\n\nThe Delcron emperor was nodding his head. \"If I recount correctly, only ten of those took out well over half our old fleet. I expected them to not have been upgraded, it appears that they have. Just those two are a force to be reckoned with. If the old tales are true? Just those two could decimate most of this part of the fleet.\"\n\nAgain, there were gasps from most there on the bridge. A moment later a female gasp was added to the rest.\n\n\"Father are you afraid to go to battle with them?\" His daughter stated.\n\n\"Afraid? Never, though cautious for the moment. It is one thing to enter a battle, for battle's sake. It is altogether another thing to act like a cub and blindly rush in. So, afraid no, cautious to engage with an enemy I know little of? Yes, if all holds true as the old tales say, we could lose a great deal if we rush in unprepared.\" The Delcron Emperor stated.\n\n\"But father! Surely we have the superior...\" The emperor's daughter started.\n\n\"DIFINA!\" The emperor roared at his daughter. \"Do you wish to challenge for the throne? How dare you doubt my decisions! I can just as easily reduce you to a market vendor for a full planet time span. Remember how well both your brothers took to it. Your oldest brother should be released from imprisonment soon.\"\n\nDifina's eyes went wide then she lowered her head. \"I withdraw all that I said to insult your rule father. I am just so anxious to catch that male. Even now my emotions are pushing all my strength to pursue him.\"\n\nThe Emperor slowly nodded his head, the heat of mating. It was the only reason she wasn't incarcerated at the present moment. He remembered his last mate; her heat of mating had given her the strength to almost take his head off. Ah! Such fond memories!\n\nHe'd have them follow as closely as they dared. At their present speed they should clear the debris field in only a few time units. Perhaps they might get through this without the battle, though he hoped that they wouldn't. Nothing got the blood and emotions going more than a good battle.\n\n_____________________________________________________\n\nIt was over two hours later onboard Tempro where both Kimison and Rayburn were about to add two gigabytes of data. They had gotten up after only another hour of sleep. They both had been going nonstop trying to get this new large packet ready.\n\nTaking a deep breath Kimison nodded to Rayburn as he started the data integration. \"Even as fast as we are going, it's still going to take at least an hour.\"\n\nRayburn nodded, \"keep a close eye on the energy. I am ready at this end, with what you discovered we should have most of it by the end of the day.\"\n\nKimison smiled as he started to adjust energy levels faster and faster. \"After the first thirty minutes it won't need to adjust as much. At least with this first packet, most of the personality should be set. Then it can help more with the uploads.\"\n\nRayburn was nodding as he also started to adjust faster and faster. Almost an hour later there was a steady beeping on the consoles. Both males smiled at each other when they saw the readout.\n\nWell, the first part was done, now to get the rest integrated.\n\n________________________________________________________\n\nOn the Duke's planet Dempsy was finally through all of the men that were left to delay him. Forging ahead he saw that his prey didn't seem to be in a hurry, there was most certainly a trap not far ahead.\n\nHe had almost caught them when, he started to detect another strong presence approaching his position from behind. The blood lust that had taken over his mind, had his senses to their upmost.\n\nA wry smile crossed his lips this would be over long before the other reached him. 'Til then he would have ample time to destroy this demon.\n\nSpeeding up he soon broke into a wide clearing. There on the far side he could sense his prey. As he moved closer he was slightly startled when a ship launched, leaving the same scared, younger man from before.\n\n\"Ah! I see that my peons slowed you to a pathetic crawl. Just enough for me to get the Duke away. Now, oh failed one, though you have restored your clan's honor, how will you yours?\" The scared man laughed.\n\nIn a low guttural voice Dempsey replied. \"I will not as I will destroy you 'til nothing is left. I have accepted that I will go to Jigoku, as will you when I am finished.\"\n\nThe scared man started to laugh pointing a finger at Kimon. \"You make jokes even though you know that you are about to die. I was trained by the greatest martial artist. The absolute finest assassin, one that was far above your paltry skills. How one as dishonored as you beat her is a mystery. Today though, I will claim your head in revenge for her, for my mother!\"\n\nA slight shock came to Kimon's eyes then the blood lust returned. It figured that the bastard offspring had survived."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "non-erotic",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-68"
}