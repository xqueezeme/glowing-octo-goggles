{
    "title": "More Oral After the Exam Ch. 04",
    "pages": [
        "I am back to continue the second part of my \"Oral Exam\" storyline. The dirty stories too much to stay away.... If you haven't read the first series (or the first three stories in this series), I'd suggest that you stop here and go back. Don't worry! They have naughty bits too. Thank you, thank you, THANK YOU to Mykittystar for editing. I deeply appreciate your thoughts and encouragement. You've really made this something special. Otherwise, feel free to send me your thoughts. I will respond. I'd love to hear where you think this should go next. I am not always sure myself. Keep your eyes open for the next installment. It will be up shortly. I have several more all set and ready to go (after a little more minor editing). Don't forget to vote. Enjoy.\n\n*\n\nI received yet another text from Jessica:\n\n\"R U in ur office?\"\n\nThis was the fourth text from the blonde college coed in just three days. I knew what she wanted. It was pretty obvious. The girl was begging to be fucked.\n\nAnd I wasn't ready to comply. \n\nToo much had happened. The last few days had been a gigantic dose of reality. No matter how much I wanted to get my dick wet, I wasn't ready. School had only been going on for a week and already things were far too complicated.\n\nSo I let my phone buzz. For now Jessica's text would go unanswered. Instead I would continue to stare out the window and watch the snow fall over campus. Perhaps this weekend I could leave everything behind. When my office hours were done I would bundle my body against the cold, drive home, and wrap myself in the cocoon of my apartment. I could delve back into the books and find my way again. Studying would help. From there I could regain my focus. I'd avoid the world until then.\n\nThen a knock at the door. Fuck, she had found me....\n\n*****\n\n\"Give it to me Professor, fucking give it to me! Bring it to the tip, I want it. Oh I fucking want it all in my fucking pussy. I WANT IT ALL IN MY FUCKING PUSSY!!! OOOOHHH!!! YES!!! Fuck right there. You wanna fucking cum in me, you wanna fucking cum in me - do it! Shit yes, I can feel it! Fill meeeeeeeeeee...\"\n\nAnd I came.\n\nSpurt upon spurt of nut emptied into Taryn's welcoming cunt. \n\nAnd that's when the door opened.\n\nTaryn and I were both naked from the waist down (although, her shirt was pushed up above her tits). I was holding her athletic frame up on a wooden bar while I slid my meat in and out of her slick pussy. Taryn's long, toned legs were wrapped around me while my hand partially covered her mouth. At least I had muffled some of her moans.\n\nFor the last several minutes I had been drilling this brunette coed with my cock. Taryn had found me on the running track and led me to what I had mistakenly thought was a discreet and private sanctuary in the school gym: an empty aerobics room lined with mirrors. First Taryn slobbered on my shaft. Then I bent her over an exercise ball and banged her from behind. As a finale, I picked up the slender brunette so I could fuck her against the wall. And that's when we were discovered. \n\nSomewhere in the periphery of my mind I was aware that Taryn and I had been caught; the situation had changed. I knew that my world would come crashing down in just a few short seconds. For now though my body couldn't stop. Unbidden, my hips continued to thrust in the heaves of orgasm. My mind was a lust-filled fog. This college coed was spread wide, giving me everything, and I was a fucking god. Taryn's pussy was so sloppy good and I was already caught up in shooting my load. \n\nOne. More. Thrust. So gooooooood... \n\nI blinked and shuddered. A final gasp escaped my lips.\n\nAnd then I fully realized what had happened.\n\nA big yellow cart laden with a mop, broom, and other cleaning implements was sitting in the doorway. A short, blonde woman with feathered hair had been pushing it. Behind her was a second woman, about thirty years older (probably in her fifties) with frizzy, red hair and glasses.\n\nThe two cleaning women halted, frozen by the pornographic scene thrust upon them. Their eyes bulged with shock; until now their work shift had been like any other. They had gone from room to room sweeping and emptying trashcans; along the way they had probably chitchatted and gossiped. Nothing unusual. Everything had been so routine and mundane. But now -- what the fuck?!\n\nClearly these poor women had not been ready to find two students furiously fornicating against the wall. \n\nI released Taryn's ass from my grip and stumbled backwards. \n\nMy cock slid out of her pussy, uncorking all of our combined juices. The viscous flood of jizz and cunt nectar ran unconstrained from her battered hole. A thin stream of globular liquid poured onto the floor. \n\nThe blonde squeaked and clapped a hand to her mouth. The redhead just froze in shock.\n\nTaryn slid to the floor and scanned for her clothes. \n\nUnfortunately for her, they were strewn about the room. The striptease she had given me had been sexy, but did not make for an easy get away. Not bothering with panties, Taryn dove for her shorts. She tugged them on, but became caught up in the legs; the brunette lost her balance and tumbled to the floor.\n\nThere was no masking what Taryn and I had been doing. Heck, the DNA evidence was in a puddle on the floor. So why hide? \n\nPerhaps I could salvage a shred of dignity? Confidence, my friend, is the key to all. Maybe I could just keep it cool and brashly bluff my way out of this nightmare. After all, I had been fucking bad ass! Is there anything more balls out than banging a taken woman in a public fuck?\n\nSo I breathed deeply and found my Zen. I blinked twice and put my hands on my hips. Grinning widely, I looked up. My cock was wet, shiny, and still fully erect. It stood proudly on perfect display. I shrugged apologetically as I unflinchingly said, \"I'm sorry, but you caught us in a delicate moment. Obviously, we weren't expecting visitors. Would you give me and my lady friend a moment to freshen up?\"\n\nThe redhead, still in a semi-catatonic state, nodded blankly. \n\nHer blonde associate gestured a few times and opened her mouth as if she were about to speak. But no words came out. \n\nFinally, she broke out in a fit of giggles and nodded her head in exasperated amusement. She grabbed her co-worker by the elbow and tugged, managing to mumble between peels of laughter, \"We'll be out in the hall.\"\n\nThe door closed behind the two women. \n\nI felt like a marionette whose string had been cut. All energy fled my body. A buzzing whooshed into my ears. That risk was damn fucking insane. Getting caught was bound to happen. I had been living on the edge for far too long with way too many women. With all of the public sex, sooner or later I would get spotted. Someone would see. And they did. I had been caught red-handed with my dick inside the proverbial cookie jar.\n\nAir left me and a sense of doom filled my lungs. This could be the end. I could lose my job and be arrested for public indecency. My career in academe would never recover from this kind of trauma. I was one cooked goose.\n\nNow dressed, Taryn shoved my clothes at me; I flailed and snatched the garments instinctually. Shaking away the fog, I quickly got dressed. I suppose I had lost myself for a moment, my thoughts had taken over, shutting everything else down. But \n\nI couldn't afford such luxuries. We needed to move fast; those women wouldn't stay out in the hall very long. We had to move on before one of them thought to ask who we were.\n\nTaryn was right with me. She understood the explosive nature of the situation and was ready to bolt. With a nod of silent agreement, we both headed for the door. Perhaps through balls and bullshit we might be able to barnstorm our way out of here.\n\nWe opened the door and the women were gone. No cart, no sign, no trace.\n\nShit!\n\nTaryn was white -- fucking white -- with terror. She looked at me, her eyes pleading. I nodded and said, \"We need to get out of here.\"\n\n\"Totally,\" she replied, grabbing my hand. \n\nWe bolted down the hall. The sex room had been left in our tracks. Exhaustion vanished. Pure adrenaline was our fuel. We raced past the main stairs and turned down a side hall. At the far end was a door with a stair sign. Sweet, had we found a back way? Wasting no time we barreled into the stair well. Our feet flew as we raced for the bottom landing. \n\nBefore us, like red fluorescent mana from heaven, was an emergency exit door. For a moment I worried about tripping an alarm. If the women hadn't told anyone we could get snatched up anyway. But that was a minor risk; we could be gone before security could be summoned. No, it was best to roll the dice. \n\nTaryn and I had to blast out of here.\n\nTaryn reached the door first. She threw her whole body against the metal door bar. Thank God! No alarms. The door clanged open and we were deposited into an unshoveled snow drift. The icy air stung while flecks of white dotted our hair. Taryn and I were sweaty and in our thin gym clothes; the damp fabric would soon freeze. Clearly, we weren't prepared for the dead of a Midwest winter. But we didn't care. For now, escaping was enough.\n\nA few minutes later the two of us shivered in my car. I cranked up the heater and made for an empty parking lot around the corner. I found a spot and idled. Time ticked by while we just sat there, teeth chattering, trying to tame our inner hobgoblins. \n\nWarm air billowed out from the vents, and slowly the insanity melted. \n\nTaryn was the first to break the silence when she blurted, \"I'm so sorry.\" She launched herself into my arms and gave me a huge bear hug. Taryn's shoulders shook as she sobbed. \n\nI held Taryn against me and rubbed her back. My fingers absently fluttered up and down tracing silly geometric patterns. \n\nThis wasn't her fault; I was complicit during every step of the way. I could have said no. So I muttered, \"There's no need to apologize. No worries. I'm sorry too, but I guess we're safe.\"\n\nI'm not sure how long we huddled together, locked in that embrace. She felt so good in my arms. While I would never want to go through that hellish escape again, I also savored this result. This part felt right -- holding Taryn, comforting her. Was this the silver lining? The world had thrown its worst at us and for now we remained unscathed -- together. And because of that, had our relationship changed?\n\nTaryn pulled back and held my face in her hands. Her eyes flitted back and forth searching my reactions. What did she see? \n\nWhatever she found, it must have been enough.\n\nTaryn kissed me. \n\nI met her lips. They were moist and gentle. I pulled her tight. Taryn shuddered and sighed in my arms. \n\nNeither of us expected this moment. Intimacy had not been what we were after. But there it was... \n\nI broke the kiss. Taryn looked at me through heavy-lidded eyes and wiped away a stray tear; a of hair had fallen loose from her ponytail and covered half her face. The girl was a wreck, but no matter; I'm pretty sure that I was a disaster too. \n\n\"Well, so that happened,\" Taryn croaked, her voice flat and tired.\n\nThere wasn't much to say so I nodded blankly, \"Yeah it did.\"\n\n\"Think anything will come of it?\"\n\nI shrugged. There was no way of knowing. The cleaning women might talk, but they could just as easily stay silent. \n\nTaryn smirked, \"At least part of it was good.\"\n\nI thought about making a joke, but decided against it. Instead I just said simply: \"Yes. Very good.\"\n\nTaryn nodded. I think my answer gave her what she needed. \n\nShe put her arm around me and settled against my shoulder. With the car console between us, we weren't in a comfortable position. Simple human touch, though, can be a wonderful thing. \n\nTime was ticking, and I knew it was time to raise an unpleasant subject. \"What about your boyfriend?\"\n\nTaryn shook her head and blinked. \"What about him?\"\n\n\"Weren't you supposed to meet him at the gym?\"\n\n\"Fuck!\" Taryn spat. \"I totally forgot. Hold on.\" Taryn patted down her shorts and cursed again. \"Shit, I left my cell in the gym locker. All my clothes are there too.\" \n\n\"When does he get off work?\"\n\nTaryn squinted and looked at the clock. \"About two hours, when the gym closes.\"\n\n\"My cell's at home. Whenever I work out I just bring my wallet and keys. I'll take you to my place and from there we can call Roxy. I can drive her back to the gym and she can get your stuff. And you can tell your boyfriend whatever you like from there. Sound good?\"\n\n\"Sure, I think it'll work.\"\n\nI cranked up the car and put it into reverse. There was little time to waste. \n\n***** \n\nRoxy had been watching QVC (an odd choice of programming for someone so punk, I thought) and wasn't keen on being disturbed. After a few minutes of pleading though, she consented to help. \n\nForty-five minutes later Roxy had retrieved all of her sister's stuff. I was impressed. Roxy had been bundled up in enough winter clothes to disguise her otherwise recognizable appearance. Her tats were buried under a scarf and an old army parka. Her day-glo blue hair was tucked up under her hat. And tonight, she wore glasses. \n\n\"I walked right by him and the lug didn't even look up from the issue of Maxim he had open. No offense Taryn, but I don't think the guy even knows how to read. He just likes the pretty pictures. Oooh shiny.... And why the fuck does the school even waste money on student security like that? So worthless... and yet they will jack up tuition again in the fall,\" Roxy ranted.\n\nTaryn rolled her eyes and giggled. \"Thanks sis. You saved my life.\"\n\n\"I know. You owe me. Big time,\" Roxy replied, holding up a hand. \"But I still don't understand. What happened?\" \n\nSo Taryn and I took turns explaining our rendezvous at the gym. \n\nAt first Roxy looked impressed. Then her expressions turned to shock. Finally, she just slumped back in her car seat and shook her head in disbelief. \n\nAfter giving Roxy the highlights, Taryn called her boyfriend. It wasn't a long conversation. She told him that she had a cramp and went home from the gym early to get some rest. She was sorry she didn't see him as she left. He must have been in the bathroom or something. No, he didn't need to stop by the dorm. She would be fine and see him tomorrow for lunch. \n\nOverall, Taryn gave a winning performance. \n\n\"Well ladies....\" I said, my voice trailing off. I wasn't sure what to say. \n\n\"Do you want to, uh, go back to your apartment?\" Taryn hesitatingly asked.\n\n\"Do you?\" I asked back.\n\n\"Well....\" Taryn sighed hesitatingly and then shook her head. \"Don't take this the wrong way, but no. I should go home. It's been one hell of an evening, tonight. I'm not sure if any more excitement would be good for me.\" \n\n\"I know what you are saying.\"\n\n\"Really? Is that ok?\"\n\n\"Sure, sure. Believe me, I get it,\" I said. And it was true. I needed time to clear my own head too. This evening felt pretty game changing. \"I think I just need to take a shower and get some sleep.\"\n\n\"Cool.\"\n\n\"Should I just drop you off back at your dorm?\"\n\n\"Yeah.\"\n\nI looked at Roxy. She opened her mouth, about to let loose with some snide comment, but then reconsidered. Gauging her - she probably expected to get laid tonight. I wondered if that was why she had been so quick to assist. My willingness to use my dick could be (and had been) taken for granted. I guess that's what happens when one is a male slut. \n\n\"Sorry Roxy, no action for you tonight,\" I said. \n\n\"Well, I'll take a rain check. I'm sure that you're good for a future fuck,\" she winked. \n\nI sighed as I drove down the road. I wasn't so sure.\n\n*****\n\n\"David Riggins?\"\n\n\"Here.\" A sleepy-eyed boy underneath a hoodie moaned from the back of the classroom. \n\nI hated taking attendance. If a student attended class, cool. If they didn't show and flunked out, it served them right. And if they don't show, but still managed to ace the projects and exams? Well... then bonus for them. Why do I need to force anyone to attend? What is the point of a bogus attendance policy? Do I really need the ego stroke of seeing a classroom full of packed seats? After all, they're paying (quite handsomely) for the educational privilege of attending my lectures. If they have some place more important to be that is their adult decision. Who am I to judge? \n\nAnd I'm not a goddamn babysitter. \n\nBut I don't make the rules. The high muckety-muck course director demanded that we have a strong attendance policy with heavy penalties. Thus, I am forced to waste the first five minutes of every class checking to see who rolled out of bed in the morning.\n\n\"Eleanor Rudolph?\"\n\n\"Here,\" said a brunette sporting a backwards baseball cap. A wicked smile crept onto her face as she licked her lips. Her eyes twinkled as she continued, \"But Professor, I asked you to call me Ellie. Remember?\"\n\nI started to jot down a note on my attendance list and then...\n\nOn went the light switch. What? WHAT?! Couldn't be? Shit! I hadn't gotten too good of a peek at her the other night. \n\nI looked up from my notes and made eye contact. Was it her? \n\nThe woman leaned back in her chair, crossed her arms, and nodded. Fuck, it was.... \n\nI blinked in recognition. I knew this woman. I had met Ellie for the first time in class two days ago, but that instance hadn't registered. I taught three classes and there were just too many faces. Besides, the first day was always a blur. The second time though, was golden. Unknowingly, I had encountered her again later that night. More importantly, she had also seen me -- and I mean really seen me. She was there in the hallway on Monday night, coming back from the dorm showers; that's when she saw me. And Shannon. And my cock. And I had been getting a blow job.\n\nIt was happening all over again. I was falling into the same trap that I had bumbled into last semester. I was fucking all over the place and now I was getting caught. The circle of people who knew about my sex life was just getting bigger and bigger. \n\nMy life needed to change.\n\nI shrugged my shoulders and nodded. Ellie smiled in return. I couldn't tell if there was any malice behind it. Nor would I know until the semester had come and gone. I guess I just needed to plan for the worst and get on with class.\n\n\"Fiona Sagen?\"\n\n*****\n\nSo that's how I decided to become celibate. \n\nSeriously.\n\nI was done. Women were at the heart of all my problems. I couldn't think, I couldn't focus. A girl would spread her legs and I would drop everything to insert my schlong. The time and the place didn't matter. I was a nympho in constant heat. Danger and boundaries didn't mean jack anymore. Wherever and whenever, I was ready to fuck. \n\nAnd this needed to stop. \n\nMultiple people had caught me banging coed hotties. My job and future could evaporate at any moment. It would only take one person to report me. In addition my advisor, Jen, wanted to be done with me; a year and a half of research would be lost if she had her way. \n\nI came to this conclusion as the students were discussing in groups. I know I zoned out. What should have been five minutes became ten. I was in my own space, lost in transient thoughts. \n\nA group on the left side began to get rowdy. One of them, a football player type, threw something at the trash can next to me. The din of an apple core reverberating off the rim shook me out of my state. And that's when it all became clear. \n\nNo more pussy. No more BJs. No more coeds.\n\nI looked up and grinned. The answer was so easy. Now I just had to fucking finish teaching class. \n\n\"Are you guys all done? You ready to talk this out?\" I said moving to the blackboard. I could do this.\n\nYeah, right.\n\n*****\n\nAfter class I didn't go back to my office. I was pretty sure that Jessica might be sitting at my desk waiting for me. She would be swiveling around in my chair in low-rider jeans... or a frayed, mini-denim skirt. Would she be wearing panties? Cute, satin t-backs? Or maybe lacy boy shorts? Either way the garment could be taken off so easily. I bet the buxom tart wouldn't even need me to say a word before she bent over my desk. She would just do it, completely ready for a hard pounding. And then I would raise my hand and give her an afternoon spanking...",
        "Fuck! How did these thoughts come to me? \n\nIf Jessica wasn't all hot, bothered, and waiting then maybe my office mate Cindy would be around. She might be up for a quickie before her class, right? She'd look good with a little butter on her warm, Southern grits. \n\nOr Shannon might swing by. One could always use a spinner like her. She'd gladly be flipped over and bent in every direction. I did the math. There are so many potential angles, especially from such a willing accomplice.\n\nGet your head in the game, dude! \n\nI had slipped too many times. Now was the time for restraint. \n\nWhat had become of me? Like any other guy when bored, my mind strayed to sex. I had all the predictable appetites. What normal, hetero guy wouldn't want to bang hot, college coeds? \n\nBut my life had plunged into the surreal; this wasn't standard happenstance. I was horny 24/7. My thoughts were sex. My dreams were sex. My every waking moment was sex. I had a perpetual hard-on of the brain. It was like I had spotted a seductive woman eating a banana, or licking an ice cream cone, or sucking on a lollipop in public. And then another. And another. All day long... every day.\n\nWhatever the case, I needed to be free of distractions. \n\nSo I went to a diner away from campus and staked out a spot. \n\nThere was a booth with my name written all over it. I spread books and papers all over the formica table top. After ordering a turkey club I did my best to ignore the waitress (a dirty blonde that wiggled just right and nibbled on her pencil as she listened to my order). I ate my food and set to work. That diner booth was my home for the next several hours. That's the beauty of diners: once you stake your claim no one bothers you. \n\nEventually my eyes began to blur. It was time to go back to my apartment; I was strung out on caffeine and wired on the books. But I had a cunt free afternoon -- all studying, no complications. \n\nThat night Jessica sent me two texts. The first asked if I was busy. The second informed me that she was headed out with her sorority sisters, but that I should call if I was up for some fun. I'm pretty sure that Jessica meant the \"fun\" would be had by everybody: me, her, and her sorority sisters. Oh boy.\n\nThe next day was packed with school so I kept my head down and said very little. Sarah cornered me in the hall and tried to talk but I shrugged her off. While she was my best friend, I still wasn't ready to unload yet. I went home again after classes. \n\nLife was easier as a hermit.\n\nI got Jessica's text just before midnight. It told me to check my email. Now. \n\nFlying to my computer, I logged into the email program. \n\nHmmmn... Two minutes ago Jessica had sent me an email. \n\nThere were no words in the message, only an unfamiliar link. \n\nWhat harm could occur from checking it out? I blinked twice and then clicked. \n\nI found myself in a video chat room. \n\nAfter a few seconds of buffering, I was looking at Shannon. The entire screen was filled with her smiling face. The girl absently bit her lip in thought, then brushed a strand of hair out of her eyes and hooked it over an ear. \n\nNow I was intrigued. What was going on? I swiveled in my desk chair, watching expectantly. This was not a link to Lol Cats, a Rick Astley vid, or even to \"Two Girls and a Cup.\" \n\nSomething live was about to happen. With Shannon and Jessica involved, this spectacle was bound to be interesting.\n\nAnd probably naughty.\n\nOne minute passed, then two. All I could see was Shannon's face. She started to hum something nonsensical to herself, possibly that song by Cobra Starship. Two more minutes ticked by and then Shannon shook her head. As if waking up, she asked, \"Ummm... think he's here yet?\"\n\n\"Probably, but if he isn't it won't matter.\"\n\n\"Really?\"\n\n\"Well Shan, I'd rather he watch but I'm totally gonna get my fuck on one way or another.\"\n\n\"True.\"\n\n\"So I might as well get started, right?\"\n\n\"That's what I was thinking.\"\n\n\"You know what to do with the camera?\"\n\n\"Sure. I'll try to, like, keep it as bond as possible.\"\n\nA pause. \"Shan, what the hell does that mean?\"\n\nShannon giggled, \"Fuck if I know, but it was fun to say.\"\n\nAnother pause. \"Whatever... let's get started.\"\n\nShannon's eyes twinkled as she grinned wickedly from ear to ear. \"Professor, I hope you are watching,\" she said. \"Me and my roomie have a little show for you. She's a dirty girl, you know? So that bitch is going to totally get all sudsy-wudsy for your filthy viewing, piggy pleasure.\"\n\nShannon picked up the camera and panned. I instantly recognized the location; I was viewing the girl's showers in their dorm - I had been there a couple times following previous rendezvous with Shannon and Jessica. \n\nOnly now, instead of getting a shampoo hand job from Taryn, I was looking through a camera. The lens was pointed straight at one of the shower stalls. The vinyl curtain was pulled to the side. \n\nJessica was standing naked in the center of the stall. Her hand rested on her hip, which was cocked in a sassy stance. She tossed her blonde mane and flashed a cheshire smile directly into the camera. Jessica was daring me to meet her eyes. She was nervous, but I think that was the razor's edge of the thrill. \n\nThe tickle of panic itself was exhilarating. Besides the girl had nothing to worry about: Jessica had a fucking fantastic body and she better damn well know it. \n\nJessica strutted forward, working her hips deliciously as she approached. About two feet from the camera she fell still. The blonde bombshell bent at the waist. I couldn't help drool at how her breasts hung in front of her. \n\n\"Hello Professor. You want a piece of this pussy?\" Jessica asked, soft and low before giving her snatch a smack. \"If you are wearing pants, unbutton them. Grab hold of the zipper and tug it down. I want what ever you are wearing to be around your ankles. Then grip your johnson. Seize the pickle. Say hello to your monster. Choke that fucking chicken. He and I are going to have some fun tonight.\"\n\nMy resistance was gone. Masturbation and a shower couldn't possibly hurt. It wasn't sex. I could wank off and still keep my vow. \n\nBesides, who was I to argue? I decided to do as I was told.\n\nJessica waited for a moment (it was as if she knew precisely how long it would take me to strip down to my bare ass - odd) before speaking, \"Go ahead and start stroking. I'm going to get wet. No. Soaked\"\n\nThe eighteen year old coed spun on her heel and channeled Marilyn Monroe. She sauntered back to the shower and rotated the dial. A spray of water burst out of the head, dousing her completely. \n\nJessica jumped and squealed as she turned and clutched herself. \n\nThe initial shot must have been shockingly cold and icy. She hopped on one foot trying to dodge the freezing bullets. After a hellish few seconds Jessica loosened up and regained her composure; I could practically feel the increase in temperature as Jessica's shoulders relaxed. \n\nUnable to help myself, I chuckled. Jessica was trying so hard to be the grown-up seductress. How like her to have an over-elaborate plan that hinged on playing the cool, sophisticated vamp. Instead something small went wrong and so too collapsed her house of cards. Her playful desire couldn't help but shine through - adorably. That moment of spontaneity where her guard came crashing down was far sexier than whatever she had been trying to portray. \n\nBesides I could never get enough of watching her boobs bounce.\n\nJessica turned back to face the wall and stepped fully into the water's spray. Her hair darkened and slicked back. Grasping the blonde locks between her hands she smoothed them into a single plait. Water cascaded down her back and over her well-rounded posterior. \n\nJessica bent down to pick up a bottle of body wash and a mesh pouf. She squirted a creamy dollop of soap onto the pink pouf ball and started to rub. With her back still trained on me, she reached over shoulder and stretched. There was something feline in the way her muscles flexed into position.\n\n\"That's the fresh hotness. The girl's fucking sexy, isn't she Professor?\" Shannon asked off camera. \"You understand I got it bad, right? With this slut as my roomie I get so itchy all the time. We are two goddamn horny, fucking bitches. Pussy is great but we totally need some dick too. There's nothing like being filled. Too bad you aren't around.\"\n\nI gulped and dumped lube all over my cock. \n\nMy barely legal cutie was now a soapy, wet dream. Bubbles and suds ran along the curve of Jessica's back. \"Oh my God, that is so much ass!\" Shannon blurted. \"Bend over baby girl - one more time for me. Sweet paradise!\"\n\nJessica snorted derisively, but I knew she was faking. The girl adored attention. She folded at the waist and wiggled her tush. Body wash foam flowed over her ass and into the cleft, molding to the succulent folds of her teenage pussy. Several thin, white lines dribbled down her thighs. Was there any more perfect view in the world?\n\nShannon couldn't help herself: she was getting into this shower tease too, \"Yes, yes! Right there you naughty thing you. You're such a good little whore. Oh yes... Now turn around and like lather up your front.\"\n\nJessica dutifully did as she was instructed. More soap was applied to that lucky pouf ball. With a wink the blonde slut made sure I was paying close attention. How? By scrubbing those dirty tits spotlessly clean. And why should she not? Who would want dirty breasts? \n\nShannon's narrative continued, \"You know Professor, Jessica is totally a good shower buddy. We've done it so many times. I scrub her, she scrubs me. Our skin gets all slippery and slidey. We sometimes can't study so we just come in here and rub our bodies together. It's a prefect way to relieve tension, you know?\"\n\nJessica was now rubbing her sopping pussy with the pink pouf. \n\nHer whole cooch was a soapy mess. \n\nLost in her reverie Shannon prattled on, she was flying through past memories. Her words felt more reminiscent of collusion than anything else, \"Late at night is when we do it, so we don't make too much of a scene. I wonder if any of the other girls in the dorm know what we do. How do you think they would react? Would they be haters all up on us? Would they be choking on big, warm glasses of hate-o-rade? It'd suck to get in trouble. But I don't think they'd do that. Who would do that?\"\n\nJessica hung up the pouf ball. She stood under the shower spray and rinsed off the soap. \n\nAwwwww.... \n\nWith dismay I watched while the white suds flowed down the drain. But I couldn't stay sad for very long. Jessica cupped her hand over her cunt and dipped her fingers inside. First she used one digit and then two. They moved inside her molten honey pot with well-practiced ease. Meanwhile, the heel of her hand rubbed against her clit. I could tell by the way her lips formed an \"O\" that Jessica was getting very excited.\n\nAnd bless her heart, Shannon kept on talking, \"All the girls on the floor are probably already wise. Oh you know Professor - that Jessica screams pretty fucking loud whenever she cums. How could they not hear her? Or me? I can't help myself either.\" Shannon giggled. \n\nThen she dropped the bomb, \"Besides if they caught us, don't you think those bitches would want to join us?\" \n\nI stroked my cock faster.\n\nShannon purred. Her mouth must have been right next to the mic. \"After we are all clean we are still dirty. You know? We can't help ourselves. I know I can't. Jessica is just too yummy and juicy. We often end up with our fingers buried in each other's pussies. Look at her right now. What she is doing feels sooooooo good. Jessica totally gets how to fuck a girl silly but still. The best part is when we break out the toys.\"\n\nJessica took her cue. Wicked delight played upon the blonde's lips as she grinned lewdly. She reached behind the vinyl shower curtain and pulled out a giant rubber dildo. My eyes widened. It was a big, pink monster with semi-realistic veins. I'd have bet big money that could do some serious damage to a cute, tight teenage twat.\n\nJessica's tight teenage twat. \n\nOh my, fuck!\n\nThe beast had a suction cup on the base; gripping the cunt-stretcher by the root, Jessica slapped it against the wall about a foot and a half from the ground. It stuck to the tiles, bouncing wildly up and down when she let it go. \n\nI knew what was coming next.\n\nJessica.\n\n\"And now we get to the good part,\" Shannon whispered, as much to herself as to me. Her voice was filled with reverence and awe.\n\nJessica dropped to the floor on her hands and knees. The water continued to cascade down her tan body. She gulped in focus and stoic preparation before her face broke into a grin. She nodded a single time before mouthing a single phrase, \"Fuck me, Professor.\" \n\nThe blonde flexed her knees sending her ass flying back against the wall in a downward motion. Jessica's mouth flew open wide upon the sudden penetration. Her arms locked and shoulders trembled. While I couldn't hear Jessica's voice over the beating water, I knew that she loosed a fantastic wail. \n\nSudden shock overwhelmed Jessica. She paused, holding her position, face contorting in a cocktail of pleasure, pain, and surprise. Rolling her head, she visibly swallowed. Then Jessica looked up, panting. \n\nAnd smiled. \n\n\"I'm on all fours like a good slut,\" Jessica yelled over the shower. \n\nThis was the first time I could make out her words. Damn! She was fucking screaming! \"Now grab a hold of those hips and MAKE that pussy yours, Professor!\"\n\nThen she slammed her ass against the wall. While the specifics were different, the game was familiar. Unfortunately, my cock was only a sideline participant this time. Her cunt must have been soaked, since she swallowed the entire dildo in a single thunderous stroke. \n\nMy darling Jessica wasn't loose, quite the contrary: she was a wonderfully delicious, tight teenage fuck. Her snatch always gripped my dick like a vice. She loved every moment of our congress; at just the mention of a fuck, she was spread and ready -- more slippery than I would have otherwise thought possible. \n\n\"Yeah ride that cock. Bang the shit out of it,\" Shannon ordered. \n\nHer voice had become strong and clear. The tiny teen was now giving the orders - and she liked being the boss, the fuck mistress that called the shots. \n\n\"Yes, baby girl, look at me with your pretty eyes,\" Shannon continued. \"I bet the Professor is pumping it all hard and fast watching you fuck that giant dong. Think about his cock and how it would feel in your pussy. So good...right? I know. I can't help myself either.\"\n\nShannon panned the camera down. For the first time that night I could see what she was wearing: typical of a late night dorm rat Shannon had on a pink baby-t and some loose fitting pajama bottoms. Most interestingly, her free hand was buried within those pants. She must have been finger-fucking herself. I could clearly make out her knuckles rising and falling against the fabric.\n\nJessica's eyes grew wide as she continued to throw herself against the wall. Eyes burning, her mind had transported her to another place. The raw, unabated fury of the fuck was unprecedented. She was a fucktoy hurtling toward a screeching orgasm.\n\nSensations bore down upon Jessica more rapidly than she expected. The slut howled and clawed at the floor. Her wail hovered pure and clear above the din of the pelting water. With Jessica's tush high in the hair, her face was now an inch or two from the tiles. She shuddered and fell into a high vibrato. Her breasts shook, tracing patterns in the pooling water.\n\nReleasing my cock, I put both hands behind my head. I interlocked my fingers, so that I would feel no temptation to continue stroking. My body was a hair's breath away from an explosion. With two to three more shakes I would send jizz spurting high and wide. The release would feel fantastic, but the moment didn't seem right -- yet. I sensed there was more to come.\n\nBreathing heavy, Jessica stared glassy-eyed into the camera. \n\nShe panted as she blinked through heavy lids. The beast was alive and well inside of her. It had roared. Crouched on the floor, hair wet and disheveled, she was a feral force. \n\nJessica sprung. Her body unwound into action. She twirled and yanked the dildo from the wall. Rocking back onto the balls of her feet she turned to face me. The blonde was crouching, pussy spread wide before me. With surprising force she drove that dick home, sticking it to bathroom floor.\n\n\"One more fuck!\" Jessica roared before impaling her cunt. Once again she was lanced on the giant rubber dick. \n\nFuck. She had done this same thing to me so many times. I knew what it was like for her to assault my cock. She'd bend at the knees, squatting over my prone body, my disco stick standing vertical, lined up with her slippery, pink velvet glove. \n\nSlowly, she would descend. Jessica's cherry lips would part and - Bam -- I'd be buried inside her sweet, teenaged hole. Flesh would press against flesh, reveling in the pressure of our two bodies. We'd linger in the slow caress of pussy to cock. But lovers cannot stand still...\n\nSoon we would be fucking like animals and the flesh of her ass would quiver as she bounced against me.\n\n\"Screw this shit,\" I heard Shannon mutter, as she set down the camera. The lens was trained directly onto the pornographic scene unfurling before my eyes.\n\nOnly now there was a second participant. Shannon stepped into the camera frame. She pulled the baby-T over her head and shimmied out of her PJ bottoms. Leaving the clothes on the floor she placed her tiny ass front and center. The girl was horny. She didn't bother wasting time with a tease. Shannon didn't wiggle, strut, bend over, or spread. \n\nShe simply moved farther forward...\n\nShannon stood inches away from Jessica. The brunette leaned into her roommate, seizing Jessica's head, and grasped two hand-fulls of blonde hair. Shannon pulled Jessica to her pubis and then pushed down.\n\nWhile I couldn't see the precise connection of tongue to pussy, I could tell the instant that it happened. Shannon crackled with electricity. Her body went rigid and she threw her head back. \n\nAn instant orgasm pressed down upon Shannon, fireworks popped off all around her. She writhed, clutching Jessica tightly. \n\nThe blonde's face was driven deep -- oh so deep -- into Shannon's cunt. \n\nJessica's arms wrapped around Shannon's hips, fiercely grabbing her butt and squeezing the cheeks, kneading the supple flesh. \n\nA throaty moan exploded from Shannon lips. \"OHHHH FUCKING GAWD!!!!\" \n\nJessica seized this opportunity to hammer down on the dildo. \n\nAs she descended, the giant rubber punisher tore into her pussy for a final time. It was as deep as she could take it. The fake balls rubbed directly against her needy clit.\n\nAlthough I couldn't be certain, Jessica went through all of the tell-tale signs of her orgasm; her body shook, the muscles on her forearms tightened, and then Jessica rocked forward onto her knees, making Shannon stumble slightly backward. \n\nThrough it all, the girls somehow managed to clutch each other tight. \n\nI began to cum. \n\nThe orgasm beat down upon me like waves from nowhere. \n\nOddly I hadn't even realized that my hands were back on my cock. \n\nWhite spunk flew up and over my left shoulder. A second splatter thudded onto my chest, while a third arced up and came back down. The lesbian shower-fest was more than I could handle. Who could blame me? Teenaged college cuties getting hot, steamy, and wet in their dorm showers? Better yet, they were putting on this peep show just for me! Holy fucking shit!!! \n\nDamn straight, I'm going to bust a nut.\n\nI closed my eyes and sank into the sensation. An infinite, black expanse zoomed out in every direction. I floated, transcendent over life's complications. This was the gooey warm center, the crux of everything and nothing. I had reached the place that was the heart of it all. For the eternity of an instant my world was clear.",
        "Then my eyes fluttered open. The ladies were detangling their bodies, another moment and they were picking themselves up off the floor. Shannon walked over to the web cam and picked it up. Jessica curtsied and blew me a kiss \n\nThe screen went black.\n\nAnd I went to bed.\n\n*****\n\nWhile pondering Jessica's unanswered text: \"R U in ur office?\" I heard her knock. \n\nI was sitting in my office, incapacitated, and staring out the window watching snow swirl in the glow of lamplights. The events of the past few days tumbled through my mind. The moment felt ripe for a grand gesture. \n\nBut what was the answer? I was torn. So much had transpired. I wanted Jessica. No, I ached for her. She was every fantasy I could imagine. Even more though, she was fun. When I was around her I couldn't imagine being anywhere else; Jessica became my entire world. Perhaps that was the biggest gift I could ever be given.\n\nBut I was terrified. The sex was too dangerous. Just the basic act of being with her (and only her) was inappropriate. But we never, ever, stopped at that line of just one-on-one vanilla sex. \n\nWe always played in the deep end. I needed to stop it. Now. \n\nSex with students, sex in public, sex with bondage, sex with threesomes, foursomes, and more-somes. Sex, sex, sex. \n\nI had gone to the precipice too many times. My life was spinning out of control. Fuck, I had gotten caught with my dick in the candy jar, twice (both Taryn's pussy and Shannon's mouth were like candy). I had to pull back. \n\nBreaking my plan to Jessica would be difficult; she might not understand. Our entire relationship was built upon sex. She was very important to me and I meant it when I had told her I loved her. I wasn't sure though, if that was enough. If someone talked I could lose my education, my job, and my future career. \n\nMy life could easily be doomed. I had to say something. Avoidance would never be a satisfactory long-term answer. \n\nAnd Jessica deserved answers. \n\nThat was my second epiphany. \n\nSo I resolved at that moment to tell Jessica my thoughts. I would level with her and propose lowering the risks. I didn't want her to go, we just needed to cool things down for a while. \n\nWe could date, but sex would take a hiatus. With a short break I hoped I could clear my head. All of the bullshit could empty out. Maybe then we could find a relationship with some sanity, stability, and depth.\n\nYes that had to be the answer. She would understand. I would tell her right now.\n\nI got up from my chair and crossed the room. I opened the door, ready to have a heart-to-heart with Jessica...\n\nOnly to find Jen Endicott glaring back at me.\n\nShe pushed on my chest making me fall back into my chair in surprise. Kicking the door closed she threw her sleek, black trench coat over the desk. She stood in a violet corset, lacy thong, garter belt, and stockings. Her stiletto heels clicked against the floor.\n\nI timidly held up my hand like I was gazing directly into the sun. \n\nI shrunk into my chair, stuttering incoherently. I knew the gestures were pathetic. But there it was; I was caught off guard. \n\nTowering over me my advisor snarled, \"Shut up worm. I don't give a shit about your teenage bitches. You're going to give me your cock.\"\n\nAnd so I did."
    ],
    "authorname": "gradprof",
    "tags": [
        "shower",
        "shannon",
        "jessica",
        "jen",
        "coed",
        "sorority",
        "slut",
        "professor",
        "blonde",
        "internet"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/more-oral-after-the-exam-ch-04"
}