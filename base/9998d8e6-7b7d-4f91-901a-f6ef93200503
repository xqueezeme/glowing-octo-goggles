{
    "title": "New York Strip",
    "pages": [
        "All people and places are fictional. All characters are over eighteen.\n\n*****\n\nMelody Rivers was blessed with good looks, a name that sounded like poetry, and intelligence wrapped up in a winning personality that took her to the top floor of the corporate world. She was also an insatiable exhibitionist.\n\nIt started innocently enough. For her thirtieth birthday a girlfriend had given her a gag gift \u2014 a big rubber dildo rolled up in a copy of Playgirl magazine. All her girlfriends whooped with laughter when she opened it at the fancy restaurant where they were celebrating. A handsome waiter was filling their water glasses when it all came into view. Melody, blushing with more intensity than she ever had in her life, mumbled something about her friends being crazy as she fumbled the big rubber cock and it rolled off her lap onto the floor. The laughter increased to epic proportions as she kicked it under the table.\n\nShe didn't show the gift to her husband David when she got home. Instead she hid the magazine, the first she'd ever looked at, and the dildo, the first she'd ever owned, in a shoe box in her closet, the way a schoolgirl might hide such things from her mother. Her sex life with her husband of ten years was good, a steady but somewhat monotonous affair of before sleep couplings. Missionary, girl on top, some rudimentary oral, both giving and receiving. It was the kind of sex someone without a sex life would love to have, but there was no getting around the fact that it was a bit plain. For quite a while both she and David had been secretly hoping for more, but for some reason both thought the other would be less than receptive to the idea of 'dirtier' sex.\n\nThe images in Melody's shoebox of naked men, and her first time playing with her new rubber cock opened her eyes to the joys of something a little different. It wasn't long before the dildo came out into the open. Telling David about it was nerve wracking but exciting, but just as she'd hoped he smiled and was excited about it too. It did take him by surprise \u2014 Melody didn't seem the type to go in for that type of play \u2014 but he loved the extra spark it brought to their lovemaking. Using the big dildo on her while he licked her clit soon became their favorite way to make Melody fly.\n\nThe magazine, on the other hand, remained secret. Pouring over the photographs on its pages was exciting, and she wanted more. The internet seemed the obvious thing, and soon she was surfing porn like an old pro. First it was still pictures of men, and then stills of couples. The sight of another man's cock fucking a woman, and of big cocks being sucked deeper into women's mouths than she realized was possible, was deeply erotic to Melody, making her horny in a way she'd never felt before. Of course it wasn't long before she'd moved on to video clips on the internet, and the raw sexuality that pored forth out of her monitor and speakers took her breath away. The subject came up with her friend Gina one evening, after one too many Cosmopolitans...\n\n\"I think I saw that guy on a porn the other day,\" Gina said, gesturing to a good looking young guy at the bar.\n\n\"Really?\" Melody said, her eyes huge with surprise.\n\n\"I'm kidding!\" Gina laughed. \"You'd never know anything about that anyway. Or would you? You leading a secret life I don't know about?\"\n\n\"I watch porn,\" Melody said proudly but a little too loudly. She looked around embarrassedly to see if anyone had heard her.\n\n\"Don't worry honey,\" Gina laughed. \"I guarantee you everybody else in here watches it too. But you my buttoned-down friend, you surprise me. Melody Rivers watches porn?\"\n\n\"It's no big deal,\" Melody said, squirming in her seat a little. \"Is it?\"\n\n\"No honey, I'm just messin' with you,\" Gina said. \"So what do you like to watch \u2014 gang bangs? Big black cocks? Lesbian orgies?\" Gina laughed again as Melody's eyes grew.\n\n\"Just...regular,\" she said quietly.\n\n\"I love watching the anal stuff, but I've never had the guts to do it,\" Gina said, twirling her cocktail glass between her fingers.\n\n\"You ever watch the public...exposure kind of thing?\" Melody asked shyly. \n\n\"You mean like exhibitionist voyeur kind of stuff? Yeah that's cool too,\" Gina said. \"Don't tell me you're into that! The showing off or the watching?\"\n\n\"I'm not sure. I think it's the being watched thing that gets me,\" Melody said. \"I'm not sure though. I've never...\"\n\n\"Well guys have never been shy about looking you over, that's for sure,\" Gina said. \"Whether you realize it or not, just showing yourself in public with that body is exhibitionism. If you like having guys look at you when you dress nice, then you've got it in you, it's as simple as that.\"\n\n\"Tell me this,\" Gina continued. \"Imagine you're sitting here in your tiniest bra and panties right now, with all these guys watching you. Does that thought excite you?\"\n\nAll the air went out of Melody's lungs and her eyes opened wide again. A shiver went through her all the way out to the tips of her fingers and toes.\n\n\"I think I just had a little orgasm, if that's what you mean,\" Melody said quietly. She looked a little shaken by the thought.\n\n\"That's what I mean girlfriend. Nice! I had no idea,\" Gina said, clicking glasses with her friend and smiling. They both took a sip. \"You need to explore this honey. That's the stuff great sex is made of. Have you talked to David about it?\"\n\n\"No!\" Melody said firmly. \"Not about the porn stuff either. I feel bad being sneaky about it, but...\"\n\n\"But what?\" Gina asked. \"Guys love it when girls watch porn. Trust me, it'll be all right. And the exhibitionism thing, I'm pretty sure he'll find that hot too. You guys are good, right? Sex wise?\"\n\n\"Oh, yeah,\" Melody said. \"You know that crazy huge dildo you gave me? He likes that.\"\n\n\"What? You stick it in his ass? Gina asked.\n\n\"No! God no! In me!\" Melody said quietly.\n\n\"Oh! Sweet! Playful, I like it!\" Gina said. \"You know when I bought that thing I had visions of you throwing it away. I'm glad I was wrong. So I hate to say it, but I gotta get out of here. What do you say we give those guys at the bar a show when we walk by, show 'em some cleavage and swing our asses a little.\"\n\nGina unfastened two buttons on her top and pushed up her bra. Melody sat stone-faced.\n\n\"Come on honey, think of it as the first day of your new life \u2014 Melody Rivers, super-hot sex-pot,\" Gina laughed.\n\nMelody undid a button and looked down, blushing a little.\n\n\"No way!\" Gina said, shaking her head, \"Think porn honey. You got the body for it, use it up before you're old and wrinkled. Two more buttons, lets see.\"\n\n\"Two?\" Melody asked. She looked around to make sure no one was looking and followed her friends request. \"I don't know,\" she said, looking down at herself. \"It's slutty, isn't it.\"\n\n\"Embrace your inner slut sweetheart, she's a hot son-of-a-bitch,\" Gina said. \"Stand behind me and roll the top of your skirt...yeah that's it...two more times. Nice. Damn, if I had that body I'd be fuckin' everything that moves. Follow me, and do what I do.\"\n\nGina drank the last few drops of her Cosmo and headed toward the bar, her ass swinging beautifully. Melody hustled to catch up, wanting to stick close to her friend. As they passed the bar the men smiled, their eyes devouring the two women. Melody's hips detached from her nervous brain and swung even more than Gina's. \"Damn!\" she heard one of the men say under his breath. Out in the lobby Gina giggled.\n\n\"Now you're all horny right?\" she said. \"I wish I had a David to go home to. Fuck him good for me will ya? And leave this the same all the way home,\" she said, pointing to Melody's cleavage and shortened skirt. \"I want a report Monday about the cab driver and anyone else who sees you, okay? Good night honey.\"\n\nMelody watched her leave and paused inside the glass doors. She was about to button her shirt up when a man walked by on the sidewalk. He smiled at her through the glass and nearly walked into an oncoming stranger. When he'd gone Melody walked out into the dusky light, her tits and long legs on display as never before. A cab driver nearly locked up his brakes when he saw her. Melody Rivers was on her way.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nMelody stood at the window of her loft style apartment and took in the view. She had readjusted her clothing in the cab, back to her semi-conservative self, and as she waited for David's arrival home she looked at her reflection in the floor-to-ceiling window, with the lights of Manhattan beyond. Typical of a twentieth floor New York apartment, she could see hundreds of windows, some fairly close, and hundreds of windows had a view of her. \n\nThree Cosmopolitans gave a girl like her a good buzz, and it hadn't worn off yet. Without thinking too much about it she playfully unbuttoned her blouse, showing the cleavage she had exposed earlier. Two more buttons opened, and a flush of heat rushed through her. With her eyes focused on her reflection the rest of the city was a blurry haze. She turned sideways, surprised at how much of her bra-covered breast she could see. Another button, and another, and soon the blouse hung open. She watched the reflection of her flat, heaving belly as her heart beat faster. She lowered the shirt off her shoulders, holding it there like a model on a runway, turning this way and that as she watched herself. The blouse slipped off her arms and floated to the floor.\n\nShe pulled the sides of her skirt up, higher, and then higher, until the tops of her thigh-high stockings came into view. The main thing that struck her about her reflection was that she wished it was sexier, those thigh-highs with the lace tops she had seen at the store would be better, instead of the plain ones she had on. Her heart beat even faster as she unzipped the skirt, stepped out of it and tossed it on the arm of a nearby chair. She started to squat to pick up her blouse but stopped herself. With a mischievous twinkle in her eyes she abandoned the lady-like move, bending at the waist instead, turning her panty covered ass toward the big window. The blouse joined the skirt on the chair, and she took a step closer to the glass. She put her arms up above her head with her hands on the big window, her breaths coming quick and close, fogging up the glass in front of her face. It blurred the view of all the windows facing her way, making her feel somehow protected even though she knew she wasn't. Someone was watching, she could feel it. And then another set of eyes found her, and then another. She could feel them all taking her in, the pretty, every-day lingerie she'd always kept so carefully hidden, her heaving bosom, her goosebumps, every inch of her.\n\nShe heard a key in the door and it opened. She had time to swing around and stand straight, but there she was, on display in front of the huge windows, red faced with her chest heaving.\n\n\"David!\" she gasped in a near whisper.\n\n\"Mel?\" David said, looking at her quizzically.\n\nShe was frozen, not moving a muscle as her mind spun out of control.\n\n\"This is a nice surprise,\" David said as he tossed his keys on the table and walked closer. \"Taking in the view?\"\n\nMelody still couldn't speak, her breaths coming even quicker. David embraced her and kissed her. A flood of passion poured out of her, and David drank it in. His hands roamed her warm flesh as they kissed, their moaning mouths devouring each other. David unclasped her bra. A moment later his hands were full of her big, firm tits, and then his mouth was on them. He backed her up against the glass to steady her, and dropped slowly to his knees, keeping his hands on her soft bosom as his mouth trailed down her belly. The bra fluttered to the floor and in an instant her panties were down around her ankles. As Davids' tongue split through the lips of her wet pussy she kicked one high-heeled foot free of the damp panties and spread her legs as she moaned.\n\nThe cool glass on her back was a new sensation, and Melody turned her head to the side, glancing at the city as her husband devoured her pussy. The three sets of eyes she sensed as she stripped were now dozens, she was sure of it, and suddenly, quicker than ever, her body erupted in orgasm, a free-flowing internal lava flow that took her out of this world as never before.\n\nDavid couldn't quite believe it \u2014 walking in on his somewhat conservative wife nearly naked in front of their windows, and now writhing in a quietly screaming orgasm on his tongue, an orgasm different than any she'd had with him in the past. His cock was beyond hard, threatening to burst the zipper on his new suit, and he knew what he wanted to do. He needed to fuck his beautiful wife, right there in front of the windows, in front of all of Manhattan.\n\nAs Melody's monster orgasm calmed, he turned her forcefully and took her by the hips. Before she could protest she was bent over the back of the chair with her clothes, David's cock was out and he was fucking her. He thrust into her with urgency, and Melody quietly screamed again. She turned her head to the window, first watching the reflection of her husband, still in his suit, fucking her hard. Then her focus drifted through the glass, and there, in the next building, two men in two separate windows stood watching. If there were two, she knew there were more. David pulled her hips toward him and her back arched low, her arms on the back of the chair, her big tits flailing like sexual pendulums beneath her. Sideways to the window as they were, the men, and the city, had a perfect view, a scene that couldn't have been arranged any better. Melody screamed again, clutching at the chair back to steady herself as David pummeled her, fucking his beautiful wife like a wild animal.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next morning they woke early, their bedroom bathed in golden sunlight. For the first time they had left the curtains open on the tall bedroom windows, and the night's wild exhibitionism flooded into Melody's brain as she shook off the cobwebs of sleep.\n\n\"Morning my love,\" David said groggily.\n\nHe threw his leg over Melody's and could feel the thigh high stocking still on her long leg. They were all she had on.\n\nMelody moaned as she felt David's hand gently caress her tummy and bare tits. Laying there naked, for the whole city to see, stirred her hormones again and without a word she was on top of David in a sensual sixty-nine. His mouth engulfed her fragrant pussy as her head lowered on her man's cock, spongy and half-hard at first but quickly hardening in her warm mouth.\n\nIt was a new position for them, first tried with great success the night before, with the bedside lights still on and the curtains open. They'd put on quite a show, she was remembering, and tried many new things. Her strip in front of the window was new, doggy style was new, fucking standing up was new, sixty-nine was new, and of course fucking so brazenly in front of the city was new. The thought of it all, and David's talented tongue on her well-used pussy, took her to another beautiful orgasm, this one quiet and warm in the golden morning light. David came too, spurting what little cum was left inside him into the air and onto his thigh as Melody watched in awe from close range, her small hand pumping his big cock slowly.\n\n\"Can we wake up like this every day from now on?\" he said softly. \"And end the day like last night too for that matter.\"\n\nMelody didn't respond, not sure how to talk about everything that had happened. She turned around and snuggled against her man with her head on his chest.\n\n\"Did you like it all?\" she said shyly, not making eye contact.\n\n\"Like it? Are you kidding? That was the best night of my life!\" David said. He kissed the top of her head.\n\n\"Me too,\" Melody said. \"Why was it so different? How did you...know about all that stuff?\"\n\n\"I guess now's when I admit I, uh...watch a little...on the computer, you know? It was nice to finally put some of that knowledge into practice,\" David said with a little chuckle. \"I hope that doesn't shock you.\"\n\n\"No!\" Melody said quietly. \"I mean...I sort of...do too. Watch I mean.\"\n\n\"Ha! Well I'll be!\" David said. \"My Mel, watchin' porn! I'm so in love with you right now I can't even stand it.\"\n\nMelody lifted her head and looked at her husband, deeper into his eyes than usual, and then she kissed him. It was a long, smoldering kiss that warmed her insides again.\n\n\"I though you'd think I was slut, standing there in front of the window the way I was when you got home. For a few seconds I thought you'd turn around and leave me.\"\n\n\"That, my sweet girl, was the most amazingly wonderful sight I've ever come home to,\" David said. \"Apart from wanting to devour you, my only thought was, is that really Mel? May I ask what brought that on?\"\n\n\"Gina,\" Melody said, deciding instantly she needed to spill the truth. \"We had our usual Friday happy hour. She got me to drink one more Cosmo than usual. And then we kinda talked about sex a little. She...talked me into...showing off a little, in the bar. I sound like I'm blaming her. I shouldn't, it was me who went along with it,\" Melody said, her head down on David's chest again, averting eye contact. \"She got me to unbutton a little, and shorten my skirt. Just for fun, nothing more. We walked out past some men and they watched us, and then out on the street, and in the cab. I covered up before I got here,\" she said, lifting her head and looking at David to assure him she didn't flash the doorman.\n\n\"Remind me to thank Gina,\" David said. \"So you got home and decided you liked it I'm guessing?\"\n\n\"That...sort of took me by surprise,\" Melody said. \"I really don't know what got into me. Before I knew it I was up against the glass, and then you came home. It was like a dream I wasn't in control of.\"\n\n\"It was a dream all right,\" David said. \"Every man with a wife as beautiful as you dreams of her being seen.\"\n\n\"Really?\" Melody asked. \"Seen...like that?\"\n\n\"Oh yeah!\" David said.\n\n\"Whoa! I guess so!\" Melody said when she noticed David's growing cock. She swung a leg over and slipped him into her juicy pussy.\n\n\"You want me to be a dirty girl for you?\" she sighed as his cock went deep. \"Fuck you with other men watching? Huh baby? Is that what you want?\"\n\nDavid looked up at his wife riding his cock, sitting up proud with her big tits on view. It was another first from the night before \u2014 previously girl on top had always been a down low affair, never tits bouncing cowgirl style.\n\n\"Oh my God!\" Melody said as her fucking rose in intensity. She looked out through the huge window next to them and knew her life had changed.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nMelody called Gina on the phone Monday morning from her sleek fortieth floor office. It was a weekly call that always started their work week off with news of the weekend and a few laughs.\n\n\"So, did you do what I said?\" Gina asked.\n\n\"What?\" Melody said as she gazed over the Manhattan skyline.\n\n\"Did you keep that body of yours smokin' on the way home Friday?\"\n\n\"I did,\" Melody said, wondering if her smirk could be detected over the phone.\n\n\"Nice! I don't suppose you let David see you like that?\"\n\n\"Not exactly,\" Melody said. \"I was in my underwear in front of the big windows when he came home.\"\n\n\"Nice honey! Details! Details!\"\n\n\"He, um...liked it.\"\n\n\"I'm sure he did! What did he do?\"\n\n\"Me. Right there there by the window. I saw at least two men watching in another building.\"\n\n\"Fuck Mel, that's hotter than shit!\"\n\n\"Your tellin' me! Then we went to the bedroom and left the curtains open and the lights on. Not only that, we did all kinds of new things. I can't even tell you how amazing it was. The whole weekend really. I'm exhausted,\" Melody laughed.\n\n\"Wow. I'm trying to picture it. You two've got such hot bodies. I wish I was your neighbor. You know, other people do that shit too. You should get some binoculars, or a telescope. You've got the perfect spot there, you're surrounded by high-class lofts with big windows.\"",
        "Melody laughed, thinking it was crazy, but she couldn't help wonder if she could see others doing what she and David had done.\n\nWhen she got home from work that day the doorman handed her a package. It was a pair of powerful binoculars and a tripod, a gift from Gina. David arrived soon after.\n\n\"Has my sweet wife gone off the deep end?\" he asked when he saw her trying them out at the window.\n\n\"A gift from Gina,\" Melody said, blushing a little.\n\n\"I take it you told her about...\" \n\n\"I'm sorry. She has a way of getting me to talk more than I should.\"\n\n\"It's okay,\" David said, embracing and kissing Melody. \"As long as you tell her what a hot stud I am. So are you actually gonna use this and look at...stuff?\"\n\n\"I kind of want too. Is that perverted?\"\n\n\"Absolutely, and I love it! What do you see?\"\n\n\"It's not really dark enough yet,\" Melody said looking out through the binoculars.\n\n\"So we'll kill a little time,\" David said.\n\nHe embraced her from behind, fondling her tits through her designer dress. It was conservative, but very modern and stylish. David lowered the zipper on the back and Melody stepped out of it.\n\n\"Wow!\" he said, taking in her lingerie. \"Damn girl! If the guys you work with only knew what was under that dress...\"\n\n\"Would they be as hard as you are right now?\" she said softly, her hand cradling the lump in his pants.\n\nShe dropped to her knees, pulled down David's dark-gray suit trousers and inhaled his cock into her mouth. Being wicked like that in front of the windows made her shudder with a little orgasm as the warm cock thrusted gently between her red lipsticked lips.\n\n\"Oh God I love you!\" David moaned softly.\n\nMelody tried to take him deeper, the way the internet girls do, but a gag stopped her. She vowed right then and there to learn, and show off her skill to the world at the window someday. After a few more minutes of oral pleasure David came. Still not quite ready for a mouthful, Melody held his throbbing cock in her hand as he sprayed a thick squirt if cum all over her neck and chest. The warm goo was funneled between her tits, a thin stream running onto her belly as David moaned.\n\n\"Fuck Mel...\" he said, his knees weak as he gazed down at his sexy wife.\n\nThey spent the rest of the evening exploring the windows of the city though the new binoculars, Melody in her lingerie and David bare chested in a pair of boxer shorts. Take-out food was delivered and David dared his wife to pay the delivery person in her bra and panties. Feeling sexy after the blissful weekend, she had worn her sexiest underthings to work, a tiny bra and thong set that David had bought her for Valentines Day a few years back. The bra was spattered with cum from the blow-job earlier. With no time to think about it she smiled a nervous smile, swallowed hard and walked to the door. David watched as a handsome young guy handed her the food. His eyes followed her ass as she got him the money, and he smiled as she thanked him and closed the door.\n\n\"I like this,\" she said, standing by the door. \"Why didn't I know I liked this?\"\n\n\"It's never too late to learn something about yourself,\" David said.\n\nAs the evening wore on they found three sexual situations to watch through their binoculars. A young woman watching porn in her underwear, two women making love on a couch in the flickering light of a television, and a bedroom scene that took Melody's breath away when she first saw it. An older man, not terribly handsome but very masculine, fucking a very young woman hard from behind, the way David had done her in the living room Friday night. The woman appeared to be screaming, and the man's hands groped her tits as he fucked her, the power of his thrusts jarring her whole body with each slap of his pelvis. It was rough and visceral, and Melody could imagine the sound of the screams as she watched.\n\n\"Holy shit!\" David said when Melody finally let him have a look. \"Right here from our living room we get to watch this stuff! Who knew?\"\n\nThe lights stayed on in Melody and David's bedroom that night, and the curtains stayed open too.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nFriday at happy hour Gina wanted to hear all the dirt. After telling her about the voyeuristic scenes in the other buildings, Melody got into some of her new sexual exploits with her husband, including the delivery boy incident.\n\n\"David thanks you, but I...I feel like I've gone a little overboard,\" Melody said.\n\n\"Are you kidding?\" Gina said. \"That's just a healthy sex life girl! Well, maybe the watching people screw thing is frowned upon, but it's fun, and the other stuff? I'm totally jealous. It's awesome. Be happy you discovered it all. There's nothing wrong with the exhibitionist thing either. Embrace it! Get into it! It's fuckin' hot! David's the one who sent you to the door, so obviously he gets off on it too. I would too if I had a hottie like you to show off.\"\n\nAs they talked Gina spotted the cute guy she'd seen the week before.\n\n\"So what do you think he's packin'? Seven, eight inches?\" she said, soaking in his body with her eyes. \"What's David workin' with? I've always wondered.\"\n\n\"Gina!\" Melody said in her best 'that's none of your business' tone. \"Seven and a half. I measured him the other day,\" she giggled.\n\n\"Nice! Lucky girl!\"\n\n\"I want to try and...get him down,\" Melody said, gesturing to her throat. \"You know?\"\n\n\"Oh I know,\" Gina said with a smile. \"It's easier than you think. It's just a mind over matter thing. If you practice with a banana or something it'll just click someday and you'll wonder what the problem was.\"\n\n\"Really? Just keep trying?\"\n\n\"Yeah but not with David though,\" Gina said. \"You'll relax more with a banana or a dildo on your own. Relaxing is the secret. Once you master it you can do him. Oh baby, seven and a half? Yum!\"\n\nThey both giggled at the thought, and then worked through another Cosmo before another sexy exit parade past the cute guys at the bar. Melody didn't have to be asked twice this time, unbuttoning three buttons on her blouse. Her pants were tighter than usual, so that was good to go. She saw one of the men tap another guy with his elbow as they approached, and all the male heads swiveled their way. Melody didn't hesitate to walk out on the street either, walking two blocks with her cleavage on view and her ass swinging before hailing a cab.\n\nLater that night she got an email from Gina. You should check this out, she wrote. It was a website link for something called New York Strip \u2014 Show Your Meat. Melody clicked on it. It was a no frills website about a private strip club in Brooklyn, where people could 'show their stuff' with only other club members around and their husbands, boyfriend or girlfriends.\n\n\"Yeah right!\" Melody laughed sarcastically.\n\n\"What's up hun?\" David asked. Melody handed him the iPad.\n\n\"Gina sent me the link. She's determined to get me into trouble.\"\n\n\"I like the trouble she's gotten you in so far,\" David said as he read the details. \"I'd sure love to see you do this, but it's up to you.\"\n\n\"You wouldn't!\" Melody said, amazed at her husband's casualness toward the idea. \"You want your wife to strip in front of a bunch of strangers...in a stripper club?\"\n\n\"Sounds super hot to me baby. You're already doing far dirtier things in front of all these buildings around here. I suppose it wouldn't be good for your career though, if it got out.\"\n\nMelody had worked hard to get were she was, Vice President of Sales for a children's toy manufacturer. The only woman in the boardroom, she loved her job and all the perks that went along with it. But the tingle in her that grew when David said \"I'd sure love to see you do this\" was threatening to overwhelm her responsible side.\n\n\"How would it get out? It's private, right?\" she said, already trying to justify the crazy idea even though she was sure she could never take off her clothes like that.\n\n\"Yeah, and way out in Brooklyn,\" David said with a smile. \n\nWith the bedroom curtains open again that night, and a table lamp lighting them, David fucked Melody doggie style on the soft comforter. She wore new lace-top stockings and a garter belt, just for show. David imagined eyes on them and thought about how Melody would look on a stripper stage. He didn't last long before he came.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"You know you've got both David and me interested in this crazy stripper idea, right?\" Melody said to Gina on the phone Monday morning. \"I can't believe I'm even thinking about it.\"\n\n\"You're thinking about it because it's hot and it's something you'll get off on,\" Gina said. \"A guy I know tried it a while back and I remember him saying it was cool. No pressure, really supportive.\"\n\n\"Guys strip too?\" Melody said, surprised at the thought.\n\n\"Yeah. Think of the eye candy,\" Gina said.\n\n\"Since you're the one who came up with the idea, you'll do it with me if I'm crazy enough to take the bait, right?\" Melody said.\n\n\"Whoa, no honey, you're the one that likes to be watched.\"\n\n\"Oh come on! I've seen your ass swinging in the bar,\" Melody said.\n\n\"Clothed honey! Clothed! You've seen me almost naked. You've got twice the body I have. Three times maybe.\"\n\n\"Oh come on Gina! Those guys are lookin' at you as much as me. You're fully undressed in those eyes of theirs and they seem happy. Guys like women with a little meat on their bones these days. And yeah, I've seen your tits. You've got some nipples on you girl! Anyway, think about it. I'm not saying I'm doing it, but I'm sure not doing it without you.\"\n\nA few nights later Melody and Gina were at a pole dancing class at a nearby dance studio. Neither one was agreeing yet to a full-on stripper session, but they thought they should learn the basics, 'just in case'. Good exercise is how they justified it in their minds, but Melody knew it was a slippery slope, and stripping on a stage seemed like it was creeping up on her.\n\nTwo weeks later they were both working the pole with some finesse, showing their bodies off in their leotards like sexy sluts. Dance moves in high heels were smoother looking too.\n\n\"Okay, this is too much fun,\" Gina laughed as the other girls in the class cheered her on.\n\nOut on the sidewalk after class Gina broke the ice.\n\n\"It seems like it'd be so fun to do this while you're actually stripping, doesn't it?\"\n\n\"I know,\" Melody said. \"We're all so much better than two weeks ago. It's sexy watching you guys!\"\n\n\"So when are you gonna show David?\" Gina asked. \"Or are you waiting for something I should be nervous about?\"\n\n\"Lookin' good ladies!\" a man yelled as he whizzed by on a bicycle. It was a warm spring evening and they both wore tight shorts over their leotards, their braless tits snugly packaged but definitely 'out there'.\n\n\"Ha!\" Gina laughed. \"I guess the exercise is paying off.\"\n\n\"Damn right! You're lookin' good girl,\" Melody said. \"When you're doing the arched back doggie moves? You look hot! Your body's made for that.\"\n\n\"Really? I would never have guessed that,\" Gina said. \"You realize we're supposed to be naked when we do that. It's like right out there, although I guess you don't have to aim it at the audience. Listen to us, standing on the street talking about the finer points of stripping. How wacky is this?\" she laughed.\n\n\"I don't want to make you too nervous, but I'm starting to feel it,\" Melody said. \"It's like I've got this inner thing going on that's just dying to get out.\"\n\n\"Jesus, I never should have given you that dildo,\" Gina laughed. \"You use that thing in your neighbor show?\"\n\n\"Sometimes,\" Melody said sheepishly.\n\n\"Fuck,\" Gina said, shaking her head. \"So little miss Vice President in charge of sales wants to be a stripper. All right, you wore me down. I'm in if you're in.\"\n\n\"Oh my God!\" Melody said, looking surprised. \"We're doing this?\"\n\n\"Hey, it's your fuckin' idea. It's totally up to you at this point. I suppose David's gonna be there and see me too, huh? Is that okay with you?\"\n\n\"Is it okay with you?\"\n\n\"Hey, the man's hot, and I've had more than one dream about him, you know that,\" Gina said. \"Giving him something to dream about me doesn't sound too bad. If it fucks up you and me I'm not for it at all though. You gotta be honest with me, every step of the way. Right up to the last minute we can back out if you're feeling weird about it.\"\n\n\"Yeah, okay. It's all good so far,\" Melody said. \"In fact I gotta go because I'm horny as hell right now.\"\n\n\"You lucky bitch,\" Gina said playfully. \"Find me a seven-and-a-half incher, will ya? Get your ass outta here. Go get fucked.\"\n\nBack at the apartment Melody broached the stripping subject gently.\n\n\"Remember that website a few weeks ago, New York Strip?\" she asked David as they ate take-out.\n\n\"I do,\" David said with a glimmer of a smile.\n\n\"Gina kind of wore me down and we're...thinking about it.\"\n\n\"Both of you? I didn't know she was into that kind of thing.\"\n\n\"Yeah, it's been in her head for a couple of weeks now, and she really wants to try it. She'll only do it if I do it though. Is it too crazy, with my job and everything?\"\n\n\"Hey, it's a private club,\" David said. \"After you told me about it I did some checking and it seems legit. It's pretty obscure too, from what I can tell. Sounds like fun to me.\"\n\n\"What about Gina. Obviously you'd be there, seeing her. We don't want to do anything that makes things weird between us all.\"\n\n\"Oh, yeah, well...would it hurt your feelings if I said I'd kind of love it? She's your cute best friend after all. Guys can't help but...our brains are sort of hard wired for...\"\n\n\"Okay! I get it!\" Melody laughed. \"But if you decide any of it would make things weird, tell me okay? She and I have the same agreement.\"\n\n\"Deal,\" David said.\n\n\"So I guess we're doing this,\" Melody said. \"What a crazy month, huh?\"\n\n\"The best ever,\" David said. \"What do you say we celebrate, take a bottle of wine up to the roof? I wandered up the other day and the lounge chairs are out for the season. It's a beautiful warm night. Wear something sexy for me.\"\n\n\"What if we're not alone?\"\n\n\"Then we'll come back down.\"\n\nMelody smiled and went to change. Her favorite garter belt, shear hose and a slinky little summer dress that she hadn't shown David yet went on over her freshly shaved bare pussy and bare tits. She was almost hoping someone would be up there, the gentle breeze blowing the hem of the short dress up around her pussy, the warm air caressing it as they talked to a neighbor. Her nipples would be hard too, and the thin dress didn't contain them too well. The horniness from dance class was about to boil over.\n\n\"You look good enough to eat,\" David said when he saw her. \n\nThey made their way to the roof hand-in-hand, with a bottle of Riesling and two glasses. Sure enough, an older man from a few floors down was on the terrace. They had spoken to him briefly a few times before.\n\n\"Hello! Mr. Marks, isn't it? Melody and David.\" Melody said, extending her businesslike hand.\n\n\"Please call me John,\" he said. \"I hope you don't take this the wrong way my dear, I've never seen you look lovelier. You're usually in your business clothes.\"\n\n\"Why thank you John!\" Melody smiled, and her nipples started to do their thing. \"I'm working at shedding that conservative image.\"\n\n\"Well you're spot-on tonight my dear,\" John said. \"Spot-on.\"\n\n\"Will you excuse me John? I'll be right back,\" Melody said. \"I'm going to get another glass while I'm down there. You'll have a glass with us, won't you?\"\n\n\"Oh my dear, don't go special on my account,\" John said.\n\n\"It's no trouble,\" Melody said as she disappeared into the elevator.\n\nJohn and David chatted as they looked at the city lights. John was British, with only half of his accent hanging on after being in New York for twenty years, and an easy conversationalist. \n\nMelody returned with another wine glass. She'd also taken off the garter belt and put on sexy panties. She wanted to use her long legs to flirt with John, but she didn't want him to think she was a crude, pantyless slut. The three of them sat on the lounge chairs and David poured three glasses of wine.\n\n\"So John, I seem to recall you're in the theater?\" Melody said.\n\n\"Yes, yes,\" he said. \"Came over as an actor. Never terribly successful. Better business head I suppose. I produce now.\"\n\nHe told of the shows he was involved with, some of them quite well known. He glanced often at Melody's body, but not in a lecherous way. She loved the attention, and arranged herself as sexy as she could manage, which was very sexy indeed. Her hard nipples had calmed themselves, but the thin dress still molded to them, and her braless tits were cradled by the cotton fabric in a most delightful way. The warm breeze flapped the hem of her dress playfully, and when it blew up enough to show the top of her stockings she let it be, casually taking a sip of her wine. The new exposure had brought her hard nipples back into play, and John admired the new scenery.\n\n\"Thank you so much for the delightful chat,\" John said after he'd finished his wine. \"I'll leave you two to this delicious night.\"\n\nThey said their goodbyes and John left.\n\n\"You do look delicious,\" David said. \"I think John was hoping the wind would help him out a little more.\" He joined Melody on her lounge and pushed her dress up, exposing her lacy panties. \"Yes, that's what he was hoping for. And this...\"\n\nDavid kissed Melody's thigh and pulled her panties aside. His tongue lapped at her already juicy sex, his wine soaked taste buds shifting effortlessly to the womanly flavor.\n\n\"What if someone comes up the elevator,\" Melody moaned.\n\n\"Let them,\" David said. \"I want the world to see you like this.\"\n\nThe excitement overwhelmed Melody as she watched the elevator doors. It didn't take long for the rush to sweep her away, her hips thrusting instinctively against David's mouth as a big orgasm seemed to lift her off the roof into the night air.\n\n\"God!\" she said breathlessly as she came down.\n\nDavid looked up from between her legs, his smile glistening with the juices from her wet pussy.\n\n\"I need you to fuck me,\" she moaned, \"but this is too much right here. Can we go around there?\" She gestured behind the elevator room.\n\n\"Sure baby,\" David said. \"As long as I get to fuck you in the moonlight.\"\n\nThey dragged a lounge chair around and behind the brick cubical that housed the elevator. It was a different side of the building than the view they were used to from their windows. Only a twenty-two story building, it was in an area of taller structures, many of which were apartments. \n\nDavid kissed Melody, unzipped her dress and let it fall around her feet. Her lovely tits, milky white and almost glowing in the diffuse light of the big city, drew his mouth. She closed her eyes and moaned. Opening them slowly she looked at her surroundings. Melody knew she had been seen many times through their apartment windows, naked, having sex, but she was amazed at how different it felt being out from behind that piece of glass \u2014 so much more of a sense of being on display, almost a palpable sense of people surrounding her, fucking her with their eyes.\n\nShe opened David's pants and pushed them down.\n\n\"If I'm going to be naked you are too mister,\" she said as she unbuttoned his shirt.\n\n\"I can work with that,\" David said. \n\nHe kissed her passionately and her hand went to his hard cock. She moaned as she felt it's warm flesh in the outdoors for the first time. David let his shirt fall to the concrete and Melody dropped to her knees.\n\n\"Oh baby!\" he said quietly as his wife's warm mouth enveloped him.\n\nShe tried to take too much, gagged, and vowed to practice, practice, practice. She was far from disappointed in the proceedings though \u2014 being nearly naked on the roof with her husband's cock in her mouth was the most thrilling thing she had ever experienced. She couldn't imagine anything any hotter, and then she experienced that too, riding him cowgirl style as he lay on his back on the lounge, her beautiful big tits bouncing in the glow of the city lights. She looked around at all the windows that could see them, thousands of them, and a psychedelic haze washed through her brain. Her hands went to her bouncing tits and she threw her head back as she met David's powerful thrusts. The noisy din of traffic, distant car horns and sirens blurred into some kind of avant-garde jazz, and her voice joined it, a singing moan that carried off the roof top and added to the music of the city.",
        "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Damn, there's that guy again,\" Gina said. \"What the hell!\"\n\nMelody watched him walk in and join his friends at the bar.\n\n\"I gotta admit, you have good taste,\" she said.\n\n\"Right?!\" Gina said. \"I swear to God he's got eight inches or more in there. Those fuckin' jeans just kill me.\"\n\n\"So what are we Gonna wear?\" Melody asked as she sipped her Cosmo.\n\n\"You mean when the Vice President in charge of sales takes her clothes of in front of strangers? I thought you'd wanna do like a business suit or something.\"\n\n\"I could I guess. Would that be good?\"\n\n\"Fuck yeah. Guys dig that shit. I'd kinda like to see it myself,\" Gina said with a wink.\n\n\"I just assumed we'd do slutty stripper clothes. I think David might think that was hotter.\"\n\n\"It's all good honey. Gettin' David off should be your primary concern. There's a shop like two blocks from here that sells that stuff.\"\n\n\"Lets go!\" Melody said.\n\n\"Right now? I was hoping to catch the eye of Mr. Big Dick In His Pants over there, but yeah, okay,\" Gina said, and she downed her Cosmo in one gulp. \"Whoa!\" she said when it hit her. \"Okay, now I'm ready for slut clothes.\"\n\nAs they walked out the Cosmo rush hit Gina hard and she paused in front of Mr. Big Dick.\n\n\"You and me. Next time,\" she said.\n\nBefore she got to the door her ran over.\n\n\"Meet me here later?\" he asked with a twinkle in his eye.\n\nThey agreed on a time and the two girls headed out to the slut store.\n\n\"Oh yeah, I'm gettin' some tonight. Did you see those eyes up close? Damn!\" Gina said, and Melody laughed.\n\nThe little store had sophisticated lingerie in the front and wild slutty clothes in the back, lots of it perfect for the stripper thing. Well lubed with Cosmos, the two girls had a ball trying things on, getting wilder and sluttier as they went. Melody picked up the tab for what they bought. It was the least she could do for dragging Gina along with her on the whole adventure.\n\n\"Do me a favor and tell David you talked me into this, okay?\" Melody said as they looked for a cab.\n\n\"Oh, so that's how you're playin' it, huh?\" Gina said with a smile. \"When are we doin' this anyway?\"\n\n\"I don't know. I'll call you Monday,\" Melody said as she got in her cab. \"Have fun with Mr...Big.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"That guy knows how to do it!\" Gina said over the phone.\n\n\"That guy?\" Melody said. \"Don't tell me you didn't even get his name!\"\n\n\"Alec. And fuck can he fuck! I've never been done like that in all my life!\"\n\n\"Details,\" Melody smiled as she leaned back in her chair and put her feet up on her big glass desk.\n\n\"I was right about the big dick part. Seven inches maybe, but super fat. God it felt good! Fuck, I'm just about cummin' sittin' here thinkin' about it!\"\n\n\"So he's a nice guy? Or just a good lay?\" Melody asked.\n\n\"He's a little odd actually, but I'm not complaining. I don't wanna marry him, I just want him to fuck me silly.\"\n\n\"So are you seeing him again?\" Melody asked.\n\n\"Yeah, he's comin' over tonight. I think he liked it too.\"\n\n\"I'm sure he did. You're much hotter than you give yourself credit for. So I called New York Strip for some info when I got home Friday, and David and I went over there. I knew you were with Mr. Big Dick so I didn't call you.\"\n\n\"What was it like?\" Gina asked.\n\n\"It's pretty cool. It's a small live music venue that they rent out a couple times a month. Sometimes more if there's not going to be a band playing. There's a real stage with a pole, tables and chairs and a nice P.A. with music you can choose from, or you can bring your own. They put a 'private party' sign out front on strip nights, and there's a guy at the door to keep out people out who aren't members. You're a member now by the way, so you can go anytime you want. You get to bring one guest with you, and you can make special arrangements to bring more. You might want to stop in now and then, because there's almost as many husbands stripping as wives, and some gay guys too. The whole things a hoot. The bar's open and it's just laid back and fun. The other thing is, there wasn't anything hard-core when we were there, but, because it's a private members only thing they're a little looser about open sexuality.\"\n\n\"So I can lick your pussy onstage honey? You know I've always wanted too,\" Gina said. Melody was shocked and speechless. Gina loved the awkward pause. \"So, the million dollar question is...when are doin' this?\"\n\n\"Uh...Friday...at eight? Does that work for you?\" Melody said, still trying to process Gina's comment. \"I think I'll skip happy hour and just drink there.\"\n\n\"Sounds good honey,\" Gina said. \"My butterflies are already kickin' in, but I'll be there.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThursday evening Melody was a nervous wreck. The stripping thing seemed like such a fun, flirtatious exercise, she hadn't really felt the full weight of doing it for real until then. The people at the club seemed nice, but they were really watching, taking in all the stripping like it was theater. It wasn't the 'background for a drinking party' atmosphere she had expected. And then there was Gina's comment about licking her pussy onstage. She didn't mean that, did she? Melody had to admit she'd thought about Gina's tits before. So soft and curvy and warm looking. Some Fridays when they drank their Cosmos she got a little lost looking at them. She was starting to wonder if Gina had noticed.\n\nDavid noticed Melody's nerves.\n\n\"Tense about tomorrow?\" he asked. Melody nodded. \"I know how to fix that,\" he said.\n\nHe sat melody down on the couch, turned on the stereo and started to strip. A smile grew on her face and she laughed a low-pitched laugh. She leaned back and took in the show, along with anyone who happened to be looking though their big windows. David's shirt came off and he held it around his neck like a scarf as he swiveled his hips to the music. He tossed it to Melody and unfastened his pants. The hip swiveling got wider as he pushed them down, his half-hard cock starting to tent his too-tight boxers. He pushed them down too. Melody's eyes got big as she watched her handsome husband's naked body come into full view, his cock growing as he danced toward her. By the time he reached her it was standing proud and she teased him by tickling the tip with her tongue. He turned and she felt his ass, the way a girl in a club would touch a male stripper. Dancing wasn't David's usual thing, so it was easy for her to pretend he was a real stripper, someone she didn't know.\n\n\"Does your wife know you're a stripper on the side, working in strange women's apartments?\" she asked.\n\n\"No, she doesn't,\" he said. \"Does your husband know you hired me?\"\n\n\"No, he doesn't,\" she said.\n\nMelody's heart was racing. Her first role-playing experience with David came out of nowhere, and both of them looked like they were about to explode from the excitement of it. Melody reached out and nervously touched David's cock while his hips slowly shifted with the beat.\n\n\"It's...so big...compared to my husband,\" she said, and she looked up at him with eyes full of girl-like wonder. \"I shouldn't be touching it.\"\n\n\"I won't tell...if you don't,\" he said. \"What's your name?\"\n\n\"Mrs. Rivers,\" she said, barely touching the throbbing cock in her cradling hand.\n\n\"I'm Johnny.\"\n\n\"Johnny...\" she sighed as she kissed the side of his cock. \"Johnny...\"\n\nThe fleshy tip slipped between her lips and she licked and sucked it slow, like something new to savor.\n\n\"It's so warm in here Johnny, do you mind if I... I don't mean to be presumptuous,\" she said as she started unbuttoning her shirt. \"Do your clients ever dance with you Johnny? Or aren't we allowed to?\"\n\n\"I'm supposed to report to much contact, but I can make an exception for you Mrs. Rivers.\"\n\nShe slipped out of her shirt and stood up, her body instinctually moving to the slow, funky beat of the music.\n\n\"I'm still so warm. You don't mind, do you?\" she asked as she lowered her business skirt and stepped out of it.\n\nThey held each others hands and danced, their bodies not touching.\n\n\"You're a beautiful young man Johnny,\" she said, and one of her hands went to his cock as they danced.\n\n\"Mrs. Rivers, you shouldn't touch me like that. You might start something that shouldn't happen. What if your husband found out?\"\n\n\"He's working late tonight,\" she said, with lust building in her eyes. \"I want you Johnny. Would you like to fuck someone who's not your wife? If I promise not to tell?\"\n\nShe moved in and kissed him, still holding his throbbing cock. They both moaned.\n\n\"I'm sorry Mrs. Rivers,\" he said as his hand slipped down inside her panties onto her ass. \"I shouldn't,\" he sighed quietly into her ear.\n\n\"Please Johnny? Please fuck me,\" she whispered. \"Please fuck me.\"\n\nMelody's breathing was erratic and her heart was about to jump out of her chest. David's other hand went down the front of her panties, one hand playing with her asshole, the other her pussy.\n\n\"Oh God Johnny! Fuck me! Fuck me up against the window!\"\n\nDavid kissed her and walked her backwards with one hand still at work inside her panties. She felt the cool glass on her back and moaned. David turned her around, pulled her panties aside and pressed his cock into her steamy pink pussy. Her forearms went against the glass and her back arched, letting him in deeper.\n\n\"Oh fuck Johnny! You're so fucking big! I'll never be the same! My husband will know! You're stretching me all out! He'll know!\" she screamed.\n\nThe city lights looked at her like a thousand unblinking eyes. She saw a man in the next building, one of her biggest fans who she often saw watching. He had binoculars this time, and she smiled at him, a lusty, half way to orgasm kind of smile.\n\nSoon she was all the way there, and came hard, her sweaty hands slipping lower and lower on the glass as David pummeled her.\n\n\"Johnny! Oh Fuuuuuck!\" she wailed, loud enough to be heard by the neighbors.\n\nWhen David had finished with her she was bent in half at the waist, and she crumbled to the ground. She took David's slippery cock on her tongue, hungrily sucking out the last of his seed. David moaned deep as the last of his energy was sucked into Melody's mouth.\n\n\"You'll come back Johnny? When my husband's not home?\" she said, licking and kissing and worshiping the sticky cock.\n\n\"I'll come back Mrs. Rivers,\" he said. \"I should probably charge you more though, if we're gonna...\"\n\n\"Anything Johnny. I'll pay you anything.\"\n\nDavid picked up his clothes and went to the bathroom, leaving Melody breathless on the floor.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nMelody and David took a cab to Brooklyn Friday evening, and Gina took the subway. They converged on New York Strip, spotting each other down the block.\n\n\"Hey you two,\" Gina said, giving them both a hug. \"I guess this is it, huh? Looks like a sufficiently funky place.\"\n\n\"It's a little better inside, but yeah, it's got some atmosphere,\" Melody said.\n\n\"Alec's coming. I hope you don't mind,\" Gina said. \"He called me right before I left and kinda begged me. I haven't learned how to say no to him yet.\"\n\n\"That's a little awkward Gina,\" Melody said, unhappy with the idea. \"He's part of that gang at happy hour.\"\n\n\"So we'll find another one. There's like four happy hours on every block in this city.\"\n\n\"I guess,\" Melody said. \"This is suddenly getting very real.\"\n\n\"Hey, at any point until we're naked on that stage you can back out you know,\" Gina said.\n\n\"I know. Lets go in and have a look.\"\n\nThe three of them went in and Gina left Alec's name with the bouncer. They went to the bar and looked at the small crowd and the woman on stage, a very conservative looking sixty-something, dancing to a Neil Diamond song in a bra, panties and high heels. As they ordered drinks four more people came in, and then four more. By the time they finished their second round the tables were mostly full and the bar was busy.\n\n\"There's a lot more people here than last week,\" Melody said nervously.\n\n\"You said you'd rather have a more distracted crowd,\" David said. \"This might be it.\"\n\n\"She's good,\" Gina said, clearly transfixed by the current act. \n\nMelody and David turned their attention to the girl on stage. In her young twenties, petite, small breasted and topless, she was dancing up a storm to Led Zeppelin.\n\n\"Fuckin' hot!\" Gina said as she sipped her drink, not taking her eyes off the girl.\n\nThe girl's panties came off at the very end, and she walked off the stage to applause and cheers, swinging her tight little ass.\n\n\"I like this place,\" David deadpanned.\n\n\"Fuckin' A!\" Gina said fanning her face with her hand. \"Me too!\"\n\n\"Why Gina! Don't tell me you're one of those newfangled bisexuals!\" David said with a smile.\n\n\"No comment,\" Gina said, glancing quickly at Melody and then away. \"Hey there he is,\" she said, waving at Alec as he walked in.\n\nIntroductions were made and more drinks were ordered. Gina took Melody aside as the men talked.\n\n\"You still wanna do this?\" Gina asked.\n\n\"Yeah. I mean I'm sacred as shit, but...yeah, lets do it,\" Melody said.\n\nShe took Gina's hand and they went to the sign-in table. They looked over the list of music and picked a disco tune they had danced to at the pole dancing class. \"About an hour and a half,\" they were told, and the guy pointed out the dressing rooms. While they were talking to him a nice looking nude woman of about forty danced ballet to chamber music.\n\n\"We're in,\" Melody told David. Her voice fluttered with nerves. \"About an hour and a half.\"\n\nNext up on stage another completely nude woman walked out with a microphone and did a stand-up comedy routine.\n\n\"When you learn nude stand-up,\" she said, \"the experienced people always tell you, picture your audience fully clothed, it'll help your nerves.\" \n\nEveryone laughed.\n\nWhen she was finished a pleasantly plump young woman with big tits walked out already nude. She spread out a yoga mat while a man set up a microphone on a boom stand. She adjusted the mic down low near the mat and he handed her a vibrator. She lay herself down on the mat, the top of her head facing the audience, her spread-legged pussy facing the other way, and switched the vibrator on. Through the microphone the steady buzzing was loud and filled the room with sound. The crowd got very quiet. The buzzing varied as she pleasured herself, sometimes loud and steady, sometimes muffled with squishy pussy noises added. She proceeded to bring herself to a moaning orgasm and the crowd cheered.\n\n\"Ya gotta love this city, don't ya?\" Gina said as the woman collected her things and left the stage.\n\nA red-faced man was next. He told the audience his wife had talked him into it, and that she had stripped the week before. Melody recognized her. He was nervous but charming, never showing his clearly hard cock outside of his pouch style underwear.\n\nTwo more 'conventional' stripteases were next, but Melody and Gina missed most of them because they were back stage getting ready. The long wait had given them plenty of time to down a few Cosmos, and they were feeling no pain. Standing at the stage door, they watched the girl before them do her routine, a not very well thought out miss-mash of hair flinging, hip swiveling and pelvis thrusting. She was clearly having fun though.\n\n\"I feel like we should have practiced together,\" Gina said. \"We never tried anything together at the class.\"\n\n\"We sort of did,\" Melody said. \"That last day, when we all just danced free-form. It was like we were at a disco. Let's just do that. If we pay attention to each other we can synchronize things. I'll take off a piece and then you take off a piece. There aren't too many critics from The Times here anyway. Lets just have fun.\"\n\n\"Why do you sound so calm?\" Gina asked. \"I can barely breath I'm so nervous.\"\n\n\"I have no idea,\" Melody said. \"It's like I don't even realize I'm here yet. I've never felt like this before. Kinda dreamy.\"\n\n\"I may need some contact with you to get me through this,\" Gina said as she took Melody's hand. \"Is that okay?\"\n\n\"God, you're trembling!\" Melody said. \"Touch me all you want. Guys like that kind of thing anyway, don't they?\"\n\nGina's heart raced at the thought. Melody was the hottest girl she had ever known, and the dreams she'd had about David involved Melody too.\n\nThe girl onstage finished up and trotted off to where Melody and Gina were standing.\n\n\"What a rush!\" she said. \"Holy shit!\"\n\n\"Your first time?\" Melody asked.\n\n\"Yeah,\" the girl said. \"I kinda love it!\"\n\nShe looked like she was in a daze as she walked away. It was time for Melody's crazy fantasy to come true.\n\n\"You ready?\" she asked Gina.\n\nGina nodded, their music started and they walked hand in hand onto the stage. The lights were brighter than Melody had expected, making the crowd darkly anonymous, but she could hear David's whooping cheer.\n\nThe girls started dancing to the old-school disco beat, still hand-in-hand with their eyes locked on each other. Gina had on a black fishnet outfit \u2014 a net 'skirt', tight to her full hips with a black leather thong clearly visible beneath. Her big, soft tits were barely contained by a black leather bra, and her arms were covered almost all the way to her shoulders with black fishnet 'sleeves' that attached to her fingers, almost like long gloves. Black high heels completed the look. Her smooth, full body looked smoking hot, in a slutty hooker kind of way.\n\nMelody was also in black \u2014 a super short dress that showed off her long legs. Strapless and low cut, the sides were open at the hip with a black fishnet detail to match Gina. Black, thigh-high lace-up boots with high heels, a black thong and a strapless bustier bra completed the outfit.\n\nThe loud disco beat swept them away, and they took turns swinging themselves around the pole, showing off the moves they had learned. Gina's nerves seemed to leave her after her first turn on the pole and a big smile never left her face.\n\nKnowing it was now or never, Melody started to unfasten her dress, but it wasn't going smoothly. Gina came to her rescue, lowering the full-length zipper. The little dress was tossed aside and Melody was surprised to feel Gina's arms encircle her from behind.\n\n\"You okay baby?\" Gina whispered in her ear.\n\n\"Yeah, you?\" Melody asked quietly.\n\n\"Pull my skirt down for me, and kiss my butt while you're down there,\" Gina whispered.\n\nMelody danced around behind Gina and pulled the fishnet skirt down off her swiveling hips. Gina stepped out of it, spread her legs and arched her back, presenting her beautiful round ass to Melody's face. It was basically naked, with only the string of the thong in there somewhere. Melody surprised herself, and Gina, when she not only kissed it, but lapped up through the crack with her tongue, inhaling the scent as she went. David's whooping cheer rose above the loud music.\n\nBack on her feet, they danced the pole again, and then Melody stood in front of Gina, ready to show her tits to the audience.\n\n\"Do my bra,\" she whispered.\n\nShe was standing at attention facing the crowd, her back arched, her ass and chest thrust out. Gina unhooked the little strapless bustier and surprised Melody again, cupping her hands over Melody's beautiful tits as the bra fell away. Melody could hear Gina moan, and then Gina kissed her softly on the neck. Melody's eyes closed and they just stood there, Gina's body against Melody's back, hands fondling playfully, fingers brushing over hard nipples. Melody could hear the crowd egging them on, and a whistle she thought was David, but mostly the sound was just a blur.\n\nShe snapped out of it and turned, not even thinking about her bare tits in front of the audience anymore. She reached for Gina's front clasp bra and stripped it away, tossing it hard against the wall. The crowd whooped, Melody bent at the waist with her back nicely arched and took one of Gina's soft beauties into her mouth, and then the other.",
        "\"Oh yeah!\" Gina said just loud enough for Melody to hear.\n\nThe crowd loved it, but the song was ending. The music guy quickly hit the next song, a slow grinder with an even throbbier bass line, and the dance continued.\n\nMelody's thong would be next to go, and her head spun with thoughts of how it might play out. Being naked onstage was suddenly only a distraction, although her shaved pussy, under the lights, oh my! Her mind flashed back to Gina's comment on the phone the other day...\n\n\"So I can lick your pussy onstage honey? You know I've always wanted too...\"\n\nShe wouldn't, Melody thought. Would she? The alcohol, the music, the nudity, the cheering crowd, it was all a wild, crazy dream that seemed to be out of Melody's control. Nothing could be done \u2014 what was happening was just going to happen, she thought. It wasn't real life after all. Just let it flow. She hooked her thumbs in her little thong and inched it down as her hips rocked side to side. \n\nGina was twirling around the pole as Melody's pussy showed itself, and each time around her eyes locked on her friend's puffy little piece of perfection. When Melody took the thong off over her knee-high boots Gina let go of the pole, her spin launching her toward Melody. It was a rookie mistake, letting go too soon after too many spins. Melody reached out, sensing how unstable Gina was and Gina melted into her arms. Their eyes met and they kissed, their warm bodies touching as never before. The crowd erupted, thinking the move was choreographed.\n\n\"Strip me Mel,\" Gina whispered in Melody's ear.\n\nShe stood back a step and they looked at each others bodies. Melody squatted and looked up at her friend. She pulled down the little leather thong and could smell Gina's scent.\n\n\"Lick me,\" Gina said in a pleading voice, just loud enough for Melody to hear. \"Please Mel.\"\n\nShe stepped forward and put her hands on Melody's head, guiding her opening mouth where she wanted it to go.\n\n\"Ohhhh ffuuucck!\" she whimpered, and the crowd whooped again.\n\nDavid wanted to whistle, but he just looked on in amazement as his formerly conservative wife continued to astonish him. This was the stuff of his dreams, not a Friday night stage show in front of strangers.\n\nThe song ended with the girls that way, Gina standing with her eyes closed while Melody's tongue caressed her wet pussy and clit. The crowd applauded and the whole experience washed over Gina like a warm cocaine buzz. Melody stopped when she realized it was over, stood up, and the two of them took a quick bow and walked off the stage as they had started, hand in hand.\n\n\"Oh my God!\" Gina said, starting to come back to reality.\n\n\"Hang on a minute,\" Melody said. \n\nShe casually walked back out on stage and picked up the various pieces of clothing. There was a smattering of applause amongst the buzzing crowd when they saw her.\n\n\"Yeah Mel!\" David yelled and he whistled.\n\nMelody smiled in his direction and scurried off the stage again.\n\n\"You look way too comfortable out there,\" Gina said as she took her clothes from Melody.\n\n\"You didn't like it?\" Melody asked.\n\n\"Oh I liked it! I fuckin' loved it! Lets get dressed, we'll talk later.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Wear your boots for me, and that little bra,\" David said when he and Melody got home. They were kissing just inside the door.\n\n\"Nothing else?\" Melody said with a mischievous little smile.\n\n\"Nothing else,\" David said.\n\nHe turned on all the lights while Melody was in the bathroom getting cleaned up. She returned wearing nothing but her thigh-high boots and the black bustier, her luscious tits about ready to overflow the slutty little bra.\n\n\"I can't believe you're mine,\" David said as she strutted past him toward the big windows.\n\n\"You seem to like showing me off,\" Melody said.\n\nShe put a hand on the glass, her eyes focused on her reflection. It suddenly hit her what a first-class slut she looked like, and a tingle washed over her. Goosebumps rose on her flesh as her focus shifted outward, to all the windows facing her way.\n\n\"Did Gina make you hard tonight?\" she asked, still gazing out the window.\n\n\"You both did. It was a dream Mel. I didn't know you had that in you,\" David said. \"Do you guys...play like that often?\"\n\n\"It was the first time,\" she said. Her eyes took in the other buildings, glancing from window to window, thinking more than looking, not yet ready to look at David. \"Did it surprise you?\"\n\n\"Completely! So did you like, rehearse it all, or plan it out?\"\n\n\"No, it just kind of happened,\" she said, reliving it all in her head. She noticed a man in the next building looking at her with binoculars. She'd seen him once before.\n\n\"Wow,\" David said, sensing a different tone in Melody's voice. \"So, was it good? I mean you guys aren't all awkward now, are you?\"\n\n\"No, we're good I think. It wasn't really the place to get into deep in discussion about it. I'm sure we will though, we're pretty open with each other.\"\n\nMelody turned and looked at David before she walked over to join him on the couch.\n\n\"You don't think I'm too slutty now?\" she said as she sat down. \"This is all pretty wild. I feel like I've changed a lot in a month. Is it too much?\"\n\n\"I'm good with it babe,\" David said as Melody snuggled against him. \"I'll tell you if I'm not, okay?\"\n\n\"Okay,\" Melody said as her lips met his. \"We're being watched you know. Binoculars.\"\n\n\"Well I better do you good then, huh?\" David said quietly as he nuzzled her lips. \"I'd hate to let anybody down. They're all imagining they're me you know. I'm the luckiest man in this city.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"How's my slutty stripper friend this morning?\" Gina said on the phone Monday, and then she laughed. \"You know, saying that doesn't surprise me so much as who I'm saying it too.\"\n\n\"Yeah,\" Melody laughed. \"I guess stepping out of my comfort zone sort of worked out for me, huh?\"\n\n\"You got that right. When I grow up I wanna be just like you,\" Gina said.\n\n\"So are we good, or did stuff we're never gonna want to talk about happen?\" Melody asked.\n\n\"You mean when you licked my ass and licked my pussy, and put my tits in your mouth?\" Gina chuckled.\n\n\"Yeah...that,\" Melody said.\n\n\"Hey, it was fuckin' awesome is all I got to say,\" Gina said. \"We'll just play it by ear, no pressure, okay? If nothin' ever happens again that's cool, we'll just be closer friends because of it.\"\n\n\"And if something does...happen?\"\n\n\"Then we'll be even closer friends,\" Gina said. \"So what did David think of it all?\"\n\n\"He's very much okay with it all. Even the you and me part.\"\n\n\"Cool! So life is good, right?\" Gina said, sounding very casual about it all.\n\n\"So good,\" Melody said. \"Too good maybe.\"\n\n\"Fuck that! Soak it in baby. Roll around in it. Life's supposed to be juicy and fun, right. Isn't that what we always wish for when things are sucky?\"\n\nLater that day, soon after Melody had gotten out of a long meeting that didn't go well, her secretary put through another call from Gina.\n\n\"Hi Mel. I thought I should tell you this right away. My idiot boyfriend put a video of us up on the internet.\"\n\n\"Fuck Gina!\" Melody said, loud enough for her secretary to hear.\n\n\"Don't freak out! There's like ten gazzilion clips out there, the chances of anybody seeing it are super small.\"\n\n\"Gina...what the fuck! What if somebody from the company sees? Everybody knows what I look like.\"\n\n\"I really doubt it's gonna happen Mel. I already told him to take it down, but he said it won't do any good once it's out there. I'm sorry Mel. He's a fuckin' idiot.\"\n\n\"Fuck. I guess I had this coming,\" Melody said dejectedly. \"Playing with fire, you know?\"\n\n\"I say you just ignore it and see what happens. Chances are nothing at all will happen,\" Gina said.\n\n\"All right,\" Melody said, sounding a little calmer. \"I gotta go, it's a real shit of a day around here.\"\n\n\"Sorry honey. Call me later if you want.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nFriday evening Melody met Gina at a different bar. Melody didn't want to see Alec, afraid she'd blow up at him, and she didn't want to have to walk past the other guys, who she was sure knew all about the night at the strip club.\n\n\"This place is nice, huh?\" Gina said.\n\n\"Yeah,\" Melody said. \"The drinks are stronger too.\"\n\n\"So I can't help noticing, you workin' a little more cleavage at the office these days?\" Gina asked.\n\n\"Is it too much?\" Melody said, looking down at herself.\n\n\"I don't think so, but I've always liked the 'smoldering librarian' thing,\" Gina said.\n\n\"So, what's up with that dumb-ass boyfriend of yours?\" Melody said. \"I hope you told him how fucked up that was.\"\n\n\"Don't worry, I let him have it. I'm gonna end it with him I think. Sometimes I think he's not all there. The way he talks about stuff is just bizarre. I'll miss the way he fucks me though. God almighty...\"\n\n\"You deserve somebody great. So I hate to even ask, but David and I kind of want to see the video. Do you know where to find it?\"\n\n\"Yeah, I can show you. And I've got it downloaded at home. Hell, that's my finest hour. I want 'em to play that at my funeral,\" Gina laughed.\n\n\"I hope it's blurry. Please tell me it's blurry.\"\n\n\"Actually it's pretty good quality,\" Gina said. \"A little shaky. I'm surprised David didn't stop him.\"\n\n\"He said he was so astonished at what he was seeing he didn't notice much else, and Alec was behind him I guess. Whatever, what's done is done. I guess I wanted to put myself out there. I got my wish.\"\n\n\"So, apart from that, David liked our little show?\"\n\n\"Oh yeah!\" Melody said. \"He wanted me in my boots and bustier when we got home.\"\n\n\"Nice! Let me guess...in front of the window?\"\n\n\"You know too many of my secrets.\"\n\n\"I'd like to know more,\" Gina said, her eyes twinkling as she looked deep into Melody's.\n\n\"More huh?\" Melody took a big sip of her Cosmo. \"I'm in my boots on the couch...he's behind me...fucking me,\" Melody said, surprised at herself for speaking so freely, \"and he asks me what you taste like.\"\n\n\"Fuck!\" Gina said quietly. For the first time in her life she was nearly speechless.\n\n\"So I say I can't tell him, because it tasted so good he'll want some.\"\n\n\"Damn Mel! We're gonna get kicked outta this place on our first night because I'm about to have a fuckin' orgasm!\"\n\n\"Ha ha!\" Melody giggled. \"Who knew sex was so much fun?\"\n\n\"Everybody. Well, me at least, but you seem to be having all the fun lately.\"\n\n\"What about Mr. Big Dick? I thought you loved that thing?\"\n\n\"Yeah, but...it's not the same as what you got goin' on,\" Gina said.\n\n\"Don't dump him on my account. I'll get over what he did.\"\n\n\"No, it's not that. It's already over I think,\" Gina said dejectedly. \"If I don't call him I bet he won't even call me.\"\n\nGina looked around at the men within view, glancing from one to the next longingly. Melody could sense the 'where's my soulmate' look in her eyes. It was heartbreaking.\n\n\"Maybe it's these wicked strong Cosmo's, but I have an idea,\" Melody said, her eyes twinkling.\n\n\"I like your ideas,\" Gina said.\n\n\"David won't be home for an hour or so. What would happen if he came home and found you and me...you know...in bed or something?\"\n\n\"Well I know what's happening in my head right now,\" Gina said as a delicious little smile curled her lips. \"Are you cool with that though? This is a big step. If your marriage gets fucked up I'll never forgive myself.\"\n\n\"Let me put it this way...all week long I've been wanting him to know what you taste like.\"\n\n\"Hey, if you're sure, I'd be into that like you can't imagine.\"\n\nGina followed Melody through the bar, her eyes locked on Melody's skirt\u2014tighter and a little shorter than usual\u2014as her hips swished and swayed their way toward the door.\n\nNeither one said much on the short cab ride, and the twenty floor elevator ride was silent. They went into the apartment and Gina walked to the big windows as Melody turned on the lights.\n\n\"So this is the scene of the crimes, huh?\" she said, gazing out at all the nearby windows.\n\n\"Yeah. Not much new since the last time you were here.\"\n\n\"The neighbors might disagree,\" Gina said with a smirk.\n\n\"See the place with the red walls, at the left end of that building,\" Melody said, pointing it out. \"Keep your eye on that one. He's a big fan. And that yellowish room over there.\"\n\n\"Oh my God!\" Gina laughed. \"You've got regular customers?\"\n\n\"I guess you could say that. We've got a few we watch a lot too. It's kind of addicting.\"\n\n\"Fuckin' wild! You're so much different than you come across. Makes me wonder about other folks I know, what they're into.\"\n\n\"So, this feels a bit awkward,\" Melody said. \"Want to just kiss and see what happens?\"\n\n\"Can I tell you first how long I've been attracted to you? Remember that weekend in The Hamptons with the girls, like six years ago? That little bikini you brought with you, black with the little yellow stripes? I was already playing with girls a little at that point, fresh out of college, still experimenting. That fuckin' bikini blew my goddamned mind. The way you wore it...the way it wore you. I was a mess that whole trip.\"\n\n\"Gina! I had no idea!\"\n\n\"Yeah. I mean I knew you were straight, and not into that kind of stuff, but, I've kinda had the hots for you for years.\"\n\n\"So the other night at the club...wow...I had no idea,\" Melody said. \"I mean, you said something about licking my pussy the week before. That kind of threw me, but...\"\n\n\"I never did get to.\"\n\n\"Wow. This is big, isn't it? For both of us I mean. Me sharing David. You and me...\"\n\n\"Don't forget my dreams about him that I told you about in my usual blathering way.\"\n\n\"I love that about you. I love so much about you,\" Melody said. \n\nTheir lips met in a smoldering kiss that quickly caught fire. Buttons were undone, moans were moaned, all while their mouths devoured each others. \n\n\"Getting you out of your work clothes is just...oh my God, I don't know if I'm gonna make it,\" Gina said as she unzipped Melody's skirt.\n\nTheir mouths met again, and the kiss took off to even hotter territory as hands touched bra-covered breasts, and breasts came out to play.\n\n\"God I love your tits,\" Melody said. She had worked her way behind Gina, fondling them and kissing her neck, the way Gina had done to her on stage. \"Guys must go wild for these things. I can't wait to see David's eyes when he knows he can have them. They're so warm...are mine this warm?\"\n\n\"Can we go to your bed? That's where all my dreams happen,\" Gina said.\n\nThe two panty clad women went down the hall, Melody leading Gina by the hand. They tumbled onto the king-sized bed, surrounded on two sides by the huge corner windows. Melody switched on the two bedside lamps.\n\n\"Holy shit! You really do like doin' it in front of the world don't you?\" Gina said, marveling at the openness and the hundreds of windows with an easy view. \"This is downright obscene! I fuckin' love it!\"\n\n\"Too much talking,\" Melody said as she stripped off her panties and spread her stocking clad legs. \"You mentioned something about licking me?\"\n\n\"Oh fuck, this is too much,\" Gina said. \"I swear to God I'm not gonna make it. I'll die happy though. What a way to go.\"\n\nHer mouth zeroed in on the puffy pink perfection and Melody moaned deep when she felt Gina on her. It was quickly evident that Gina knew what she was doing. A quick orgasm rocked Melody, her breathless body rolling between tension and release, over and over as she clutched Gina's head tight to her fire-filled pussy. The big orgasm may have hit quick, but it lasted long, and the whole experience left Melody drained and woozy, as if she'd been injected with a drug.\n\n\"Wow!\" Gina said when she finally came up for air.\n\n\"Oh fuck!\" Melody could barely whisper as her brain cells continued to fire like the last slow falling sparkles from a big fireworks display.\n\n\"David's due any minute now. I'd love him to find us like this,\" Melody said, rolling Gina onto her back and sixty-nineing her. \"This'll be hot for him, right? These last few weeks it's become our favorite position.\"\n\n\"Too much talking,\" Gina said, the words muffled out as her mouth engulfed Melody's pussy again.\n\nShe moaned when she felt Melody's tongue lick her clit, a feeling that brought her back to the club and the glorious feeling of Melody's mouth on her in front of that audience.\n\nMelody heard the front door open and David call for her. She got a side-to-side flicking motion going with her tongue on Gina's clit, the way she had felt on hers when Gina rocked her. As she listened to David's footsteps coming down the hall Gina went off, screaming into Melody's pussy and finally into the air as David stood in the bedroom doorway watching.\n\n\"Hi honey, I'm home,\" he said with a smirk after the ruckus settled down.\n\n\"Hi baby. We were hoping you'd get here. Can Gina help you with your clothes?\"\n\n\"Uh huh,\" he said, unable to wipe the smile of his face.\n\n\"I don't know if I can move after that,\" Gina said. \"That was too much, hearing footsteps coming down the hall. I haven't lost it that big in a while.\"\n\n\"I was a little worried when I came in, with all the clothes in the living room,\" David said. \"But then I realized they were all women's.\"\n\n\"Is it all right honey? We probably should have talked about this first. I got this crazy idea at happy hour, and then...\"\n\n\"It's more than all right with me,\" David said. \"You sure you're good with this?\"\n\n\"So good,\" she said, and she kissed Gina's pussy again. \"Wanna taste?\"\n\n\"How about you Gina. Are we all on the same page here? I hope so, 'cause I really want a taste.\"\n\n\"I'm all yours tonight,\" Gina moaned. Melody's tongue was at work again. \"Oh God!\"\n\n\"From the looks of things you're the whole city's tonight,\" David said as he quickly removed his clothes. \"My wife seems to have a serious show-off fetish.\"\n\n\"Fuck!\" Gina yelped. \n\nMelody was giving her the tongue flick move again, intent to hone the skills she was learning. David joined them on the bed, kissing Melody's juicy mouth and then diving in to Gina's steamy pussy for the taste he was craving.\n\n\"Ohhh Godddd!\" Gina moaned loud and low when she felt the masculine mouth on her.\n\nMelody sat up, riding Gina's face as she took in the scene. Her sweet husband's face buried in her best friends pussy; Gina's big tits oozing off her sides, capped by the big hard nipples she wanted back in her mouth; and the lit-up windows of her beloved city surrounding them, egging the three of them on, asking for more.\n\n\"Fuck her baby. She's had dreams about you you know,\" Melody said.\n\nGina groaned into Melody's pussy when she heard the words. David positioned himself, lifting her legs up over his shoulders, and slipped his long cock in.\n\nGina was beside herself, groaning and writhing. David started to fuck her with long, slow strokes. Melody thrust her hips, grinding her pussy on Gina's mouth while her hands fondled the big tits below her. She leaned forward and David did too, their mouths meeting for a moaning kiss as the carnal triangle was completed. David's deep fucking picked up in pace as the kiss broke off, he and Melody smiling at each other, their eyes burning with lust.\n\n\"OHHHH GODDDD!\" Gina screamed from underneath. \"FFFUUCCKK MEEEEEE!\"\n\nShe came with a violent spasm as David fucked her fast and hard. More spasms rocked her as all the air in her lungs rushed out. She gasped in a huge breath and groaned it out long and low as her body twitched. David pulled out and came in a massive spurt, plastering Melody's belly with his cum. The spurts continued, landing on Gina as he stroked his long cock with his hand, groaning deep and loud. If anybody was watching \u2014 and someone probably was \u2014 it was one hell of a show.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Hi honey,\" Melody said to Gina on the phone Monday morning.\n\n\"Did you call to ask me to move in with you guys, 'cause I'll go and get my stuff right now,\" Gina said. Melody giggled.",
        "\"David was on cloud nine all weekend,\" Melody said. \"I was too.\"\n\n\"Well that makes three of us,\" Gina said. \"Sweet mother of God that was fun. Fun's not a good enough word for it, we need to invent a new word for what that was. So I take it you guys are all right with it all? Nothing weird?\"\n\n\"Nothing weird honey. I can't promise you a regular thing, but I know for a fact it'll happen again. And you and me maybe more often, if you want.\"\n\n\"If I want? Can I come to your office right now? I'll sixty-nine you right on that big desk of yours. Fuckin' New Jersey'd be able to see us from there. We could leave your office door open too, you'd probably like that,\" Gina laughed.\n\n\"You're funny!\" Melody laughed. \"It does sound hot though. I just wanted to say hi. I've gotta go though. Meeting with the Big Kahuna this morning.\n\n\"Okay sweetie,\" Gina said. \"I'm sending you pussy kisses through the air right now.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Good Morning Melody. With your permission I'd like to record this meeting. Sexual harassment can bite CEO's too you know. It's come to my attention there's a not-safe-for-a-toy-company video of you floating around the internet. Do you know anything about that?\"\n\nThe words were spoken by Melody's boss, a serious but friendly man named Jack, the President and CEO of the company, as he switched on a small voice recorder. He leaned back in his desk chair looking surprisingly calm. Melody liked him, and she knew she had to come clean.\n\n\"Yes, I know about it. It was posted without my knowledge, and without my permission.\"\n\n\"I was hoping you'd say that, and I believe you. You've always been truthful with me Melody, including a few times when I wish you hadn't been. But this isn't one of those times. I'd just like to have full knowledge of this, so we can head off any unpleasantness. Tell me what you can, but I understand it's delicate, so I don't want to pry.\"\n\n\"Yes, well I can't really give you full knowledge without getting into the delicate, but I'm all right with that. We've known each other a long time Jack.\" Melody paused, collecting her thoughts. She shifted in her chair, wishing she was still wearing the more conservative clothes she used to wear. \"David and I, we...our sex life has sort of blossomed. Just in the last month or so. It's sort of taken us by surprise. We've been trying new things, nothing disgusting or unsafe really, just...new. I'm afraid we got carried away and joined a private club, a place were you can...strip...in what's supposed to be a private, safe environment. David checked it out before we went, and thought it would be okay, and it was I think, except for my girlfriend's boyfriend, who she's since broken up with by the way. He shot the video and posted it without permission. Once something like that's out there it spreads to all these other sites and there's no getting it back from what I understand.\"\n\n\"Yes, we've had a somewhat similar situation before,\" Jack said. \"Two actually. This modern world we live in is different isn't it? You know Melody, I'm inclined to say we ignore all this. I've heard nothing of it getting out to clients or the buyers you deal with, or anyone else within the company for that matter. I don't like the anonymous way it was brought to my attention \u2014 it smacks of a grudge, which I detest.\" He paused for a moment and looked at a picture on his desk of his kids. \"You know all about Cheryl and me. It's my second divorce, and it was ugly, just finalized a month ago. I can tell you why my marriages don't last \u2014 I'm all work and no play. I envy people like you who seem to have such a healthy balance. You have a rewarding work life that you're incredibly good at \u2014 the best we've ever had in your position \u2014 and your married life, well, lets just say I'm envious of David. I'm assuming he's aware of what went on in the video, with your...friend?\"\n\nMelody suddenly realized Jack had watched it \u2014 the lick of Gina's ass, the big tits in her mouth, the shaky but clear zoom-in on her tongue licking Gina's pussy and the look of ecstasy on Gina's face. All of it.\n\n\"Yes. He was there,\" Melody said.\n\n\"Lucky man,\" Jack said. \"Look Melody, if you have sex on a subway and get arrested I'll probably have to fire you. You know that, right? But for now, I'm calling foul on whoever tipped me off about this, and we'll leave it at that, all right?\"\n\n\"Thank you Jack,\" Melody said as she stood to leave. \"I'm embarrassed but grateful.\"\n\n\"If you run into any others like you out there, keep me in mind, will you?\" Jack said as he walked her to his office door.\n\nGina came to mind as Melody walked out of the top floor office. About the right height for Jack, she thought, and feisty enough to keep up with him. On the elevator to her floor she wondered if Jack had a big cock like Gina liked. She'd known Jack for years and had been to his house and to parties with him, but this was the first time she had wondered about his cock. It struck her odd, and she put the matchmaking thoughts out of her head.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nAs David's cock fucked her deep on the dining room table Melody thought about why playing with fire excited her so much. The lights were on and the big window curtains were wide open again, even though she understood the dangers even better after her meeting with her boss. There could have been ten guys shooting video of her through the window right then and there, but the idea just made her more excited, more wildly orgasmic. Would Jack happen upon one of those videos too? The thought launched her, and David reaped the rewards.\n\n\"Damn baby!\" he said when her body calmed, her arms stretched out past her head on the table, her big tits still heaving after the massive orgasm. She gathered her wits and propped herself up on her elbows.\n\n\"I need to tell you what happened today,\" she said.\n\n\"Tell me everything,\" David said, still fucking her slowly as he softened.\n\n\"Jack's seen the video.\"\n\n\"What?!\" David gasped as his body stopped the subtle thrusting. \"That can't be good.\"\n\n\"He called me to his office. He was really very nice about it. Very understanding. He's pissed that someone tipped him off anonymously. I don't know who would do that. I just assumed most people there liked me, but I guess that's naive.\"\n\n\"He actually watched it? Oh my God!\"\n\n\"Yeah, I know, right? I mean he's a good guy, but it's an odd feeling, that's for sure. I didn't tell you his divorce is final. He tried to hide it, but this one hurt I think.\"\n\n\"What's that, two? That's not so bad these days.\"\n\n\"I know. He's a nice guy. He can be intense at the office, but you've seen him at home, and at parties. I've got half a mind to fix him up with Gina.\"\n\n\"Whoa! Holy shit Mel! For real?\"\n\n\"He said something when I was leaving, about if there were any more like me, to keep him in mind. There was some real sadness behind it,\" Melody said. \"It's crazy I know, but they both need somebody great. I never knew his first wife, but Cheryl was not even close to great.\"\n\nMelody wiggled her butt off the table. David embraced and kissed her, and they both felt the rush of being unclothed where they could be seen.\n\n\"Don't worry, it's just a crazy thought. What do you say we watch a movie naked?\"\n\n\"Nice!\" David said. \"Popcorn?\"\n\n\"Yup,\" Melody said. \"And beer. I feel like a beer tonight.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nFriday evening Melody met Gina at the same bar they had been at the previous week. The incredible night of three-way sex had grown out of the good vibes and strong drinks there, so why mess with a good thing?\n\n\"I guess I don't need to ask if you've been gettin' any,\" Gina said. \"You got that glow kiddo. You keepin' the neighbors entertained?\"\n\n\"I can't seem to stop. Even after my boss talked to me,\" Melody said.\n\n\"Your boss? You mean the Big Kahuna?\" Gina said with surprise in her eyes.\n\n\"Top floor, biggest office. He found out about Alec's handiwork. Watched me lick your pussy in living color.\"\n\n\"Ho-ly SHIT! Gina gasped. Are you fuckin' kidding me?!\"\n\n\"In living color Sweetie.\"\n\n\"Oh fuck. Am I dead? Did you come here to kill me?\"\n\n\"No, things are surprisingly okay,\" Melody said. \"He likes me, I like him. It went okay.\"\n\n\"You mean like like?\"\n\n\"No!\" Melody laughed.\n\nAfter two more Cosmos Melody couldn't help herself, and brought up the subject of getting Gina together with her boss.\n\n\"You ever date anybody outside of your comfort zone?\" she asked Gina.\n\n\"You mean like guys who wanna tie me up and shit? I actually kinda like that.\"\n\n\"No,\" Melody laughed. \"Like a rich guy, or a big executive or somebody like that.\"\n\n\"Nothing serious. A couple one-nighters I guess. Why?\"\n\n\"I have a really strong feeling you and my boss would get along really well.\"\n\n\"The Big Kahuna? What are you, smokin' weed or somethin'? These fuckin' drinks in this place are makin' you do things girl!\"\n\n\"No, I'm serious. He's a really nice guy. Just got through an ugly divorce, his second actually. He blames the workaholic thing, but I knew the one he just split from and she was no prize. She comes from big money, one of those 'New York royalty' types. Full of herself, you know what I mean? I'm guessing she was lousy in bed, but that's just speculation.\"\n\n\"If that's his type, then you really are smokin' something. Can I have a hit?\"\n\n\"This morning, when we were talking about the video and his marriage breaking up, he was saying how much he envied David. There was something very deep and sad about how he said it. Anyway, as I left I got this picture in my head of you with him, and it worked. I shook it off and thought it was crazy, but the more I think about it...\"\n\n\"So let me get this straight. He's already seen me naked, right? With your tongue in my puss?\"\n\n\"Yeah. What's your point?\" Melody chuckled.\n\n\"I don't know. The whole thing's pretty far fetched isn't it? And how does this affect you? Do you really want him pulled into your life like that? Last time I checked, you and I, we're pretty close, you know?\"\n\n\"Hey, I'm good with it. Like I said, I've always liked the guy. David does too.\"\n\n\"All right, I'd be lying if I said I wasn't intrigued. Explain this Big Kahuna to me.\"\n\n\"He's about your height...\"\n\n\"Whoa! Stop right there! I don't do short guys honey. I know that's a horrible, shallow part of my personality, but...\"\n\n\"He makes about twenty million a year...\"\n\n\"I'm listening.\"\n\n\"...he lives in a great waterfront house in Mamaroneck, just a short commute in to the city. He has a son and a daughter from his first marriage, they're both through college and on their own. I met the daughter one time, she's really sweet and down to earth, not like her stepmother at all...\"\n\nMelody went on with the sales pitch and Gina bought the goods. Sales was, after all, Melody's thing. Gina agreed to a date if Jack was interested. They had another Cosmo, Gina admired a few men's asses at the bar, and Melody broached the next big subject. \n\n\"David's working late tonight, preparing for court tomorrow. I told him I might stop by your place...\"\n\n\"Check Please!\" Gina yelled comically.\n\nThey made their way to Gina's tiny apartment, kissing softly as the yellow cab shot through the tiniest gaps in traffic.\n\n\"Your place looks so cute! New curtains?\" Melody asked when they walked in.\n\n\"Cute's one way of putting it,\" Gina said. \"Mind-numbingly small is another.\"\n\n\"Well I've always loved it. I could see myself in a place like this. I've always had a thing for these funky old buildings.\"\n\nMelody went in the bathroom and Gina straightened up a bit, smoothing the bed, putting away some clothes. She took a big dildo out of her drawer, opened the bathroom door a crack and stuck her arm in to show Melody.\n\n\"It's Johnny's twin,\" Gina laughed. \"Why'd you name yours Johnny anyway?\"\n\n\"It's a long story,\" Melody said through the door. \"I'll tell you when I come out.\"\n\nGina tossed the big rubber cock on the bed, and then she joined it, very carefully arranging herself so she wouldn't look arranged. The bathroom door opened and Melody stepped into the warm glow of the bedside lamp, dressed in the black bikini she wore in The Hamptons all those years ago, the one with the little yellow stripes. She looked incredible, and a wide-eyed Gina could only manage three words...\n\n\"Oh! My! God!\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nTwo years later Melody and David were visiting Gina and Jack at their winter home in the Virgin Islands. It was a special trip to celebrate the first anniversary of Gina and Jack's marriage. David had recently opened his own law firm, so he and Melody were celebrating too.\n\nMelody had left the toy company soon after Jack left, taking a job with a concert production company headquartered in one of those funky old Manhattan buildings she liked so much. The day she went for the interview a news story was breaking on the morning news...\n\n\"A link to numerous sex videos of an executive from a children's toy company is trending on twitter today. The company says it's taking steps to contain the embarrassment,\" the reporter said.\n\nShe had already told the CEO of the production company all about the scandal. He was an old friend of Jack's, and was happy to get a sales executive of her caliber, scandal be damned. As soon as she walked into the company's offices she knew she was home \u2014 the vibe was laid-back and flirty, women wearing much sexier clothes than she was used too in a business environment, men in leather pants, jeans, playful little ties and t-shirts. Music was playing. Good art was on the walls.\n\nJack had left the toy company with a hefty severance package. Even after the financial blow of his last divorce he was a very wealthy man. Gina's free spirit \u2014 which he fell hard for on their first date \u2014 had led to a re-think of his life's choices. He sold his big house and boat in Mamaroneck, bought a nice loft apartment in Melody and David's neighborhood and a villa on St. Thomas, with a swallowed-up-by-a-jungle feel and a high-up view of the Caribbean. \n\n\"This place is unbelievable,\" Melody said as she sipped a Cosmo on the front verandah, taking in the view to infinity across the turquoise water. \"I'm surprised you ever come back to New York.\"\n\n\"I have to pinch myself every time I wake up and look out the window,\" Gina said.\n\n\"We could never give up the city,\" Jack said. \"We'll be bouncing back and forth a lot I think. I hope you guys do too.\" He went inside for a minute and came back out. \"In fact, this is for you,\" he said, handing a small package to Melody, \"for leading me to my Gina. This place belongs to you guys too.\"\n\nInside the nicely wrapped little box was a key to the villa.\n\n\"See that little place on the side of the hill over there, the one with all the flowers?\" Gina asked. \"They wander around naked a lot, so you guys should feel right at home.\"\n\n\"And there's a nude beach not too far away,\" Jack said. \"It's unofficial, but nice. Gina loves it, and I love the fact that she loves it.\"\n\n\"You mean I don't need my tiny little black-and-yellow bikini that you like so much?\" Melody asked Gina playfully. \"I brought it with me.\"\n\n\"Oh fuck!\" Gina said quietly. \"I don't suppose you'd like to model it for us?\"\n\n\"I will if you will,\" Melody smiled. \"Let me see what you got girlfriend. Jack can you mix us up some more Cosmos? We like 'em strong.\"\n\nThe men both smiled. It was going to be quite a week."
    ],
    "authorname": "riverboy",
    "tags": [
        "manhattan",
        "amateur stripper",
        "lesbian first time",
        "role play",
        "threeway",
        "sharing husband",
        "rooftop",
        "female executive"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/new-york-strip"
}