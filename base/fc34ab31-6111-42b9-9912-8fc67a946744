{
    "title": "Firestorm Pt. 02",
    "pages": [
        "\"Because I'm in love with you.\" \n\nI took a step back. I was so certain I could've found a way to get Hannah and I past whatever was going on with her. I was so sure I could've fixed things. But I was honestly blindsided by her admission. It was actually the complete opposite of what I'd thought the issue was. \n\nI was convinced that she didn't want me to touch her anymore because there was a new person in the picture. She'd been so distant, so withdrawn. I figured maybe she'd met someone, someone she saw herself dating. I knew from the very start that our arrangement was temporary and at some point, Hannah was going to move forward in 'The Game of Life.' The rainbow wheel would spin and her tiny car would carry her across the tiles, off to the future she'd always dreamed of. \n\nA future I wasn't capable of giving her. \n\nMy head was reeling. I didn't know how to even begin processing what she'd told me. The influx of questions and emotions rendered me silent, motionless, stunned. I should've stopped her, but I didn't know what to say. So, I let her leave my apartment without a word. \n\nWaves and waves of guilt were crashing against every part of my body. I felt horrible for what I'd said to her, but I also felt horrible for what I didn't say to her. I wasn't in love with her, but even if I couldn't say that I loved her back... She deserved so much more than my silence. \n\nI got ready for bed on autopilot. Hannah's words and sobs were replaying in my mind on a loop. Over and over. I tried to sleep, to shut my brain down, but every single time I closed my eyes, I only saw her. The guilt I felt was nothing short of excruciating. She was in so much pain and apparently, I was the cause. \n\nI should've just kept my mouth shut. I wasn't prepared for the turn of events my words had caused at all. If the idea of Hannah being in love with another woman made me sick to my stomach, the idea of her being in love with me terrified me to my core. I would've gladly taken the unfamiliar jealousy I felt when I'd assumed she was moving on with someone else over whatever it was I was feeling. \n\nIf she really was in love with me, then there was nothing I could do. She was right. Because I just couldn't reciprocate her feelings. \n\nI would've done anything within my power to keep her in my life. Unfortunately though, 'love' just wasn't something I could've given her. I knew that she was a hopeless romantic at heart. She believed in true love, marriage, soulmates\u2014all of the things I'd classified as fallacies very early on. She'd told me before that all she really wanted in life was to find someone to love who'd love her in return. She'd made it sound so simple, so doable... Like it was such an attainable form of happiness.\n\nShe deserved someone to love her the way she needed. Actually, she deserved so, so much more than just that. Whoever she ended up with was going to be extremely lucky... It just wasn't going to be me. \n\nHannah was intelligent, thought-provoking. She was also super easy to look at, a stunner. She was a starburst in a petite package. She brightened up any room she walked into. Plus, her pussy was golden (I missed it a lot). Having to keep my hands off her was probably one of the most difficult things I'd ever had to endure in my life. I would've described sex with her as magic, but that wouldn't have been accurate. I'd felt that 'magic' way, way before I saw her naked for the first time. \n\nI had no idea how I was going to pull it off yet, but I needed us to bounce back from the ordeal we were going through. It was self-centered, but even if she had feelings for me, feelings that I wasn't capable of returning, I wasn't willing to lose her. I had to find a way for us to be friends again because I simply couldn't live without her.\n\n<center>. . .</center>\n\nMe: Can we please talk?\n\nMe: I'm sorry.\n\nMe: Hannah, please.\n\nIt'd been a week since Hannah and I last saw each other. No matter what I wrote, she left me on 'Read.' She never replied to my texts or answered my calls. I'd mulled over just showing up to her apartment a few times, but that would've been wrong, right? She was obviously not willing to talk to me yet. It would've been wrong to force her into doing so. But it was seriously using up all of my self-control to not take the elevator down to her place.\n\nThe longer she ignored me, the more my anxiety built up. I hated how bad things were between us and I was so sure that if she gave me a chance, we could've talked through all of the issues. In the long days that passed since her confession, I felt like I'd finally figured it all out... She'd just confounded sex with love. There was no way she was in love with me. I knew that if she let me, I could've shown her that the whole thing was just a big mix-up.\n\nI couldn't really blame her for mistakenly thinking she was in love with me. I was the only person in the world aside from her who knew firsthand just how great the sex was between us (hands down, best sex I ever had). It was simple, she'd just misinterpreted how good we made each other feel and mistook it for love.\n\nIt was hard to explain, but sex with her was like... Fire? Every time we slept together, it felt like flames were dancing on my skin in the most exquisite way possible. Our chemistry was undeniable, incandescent. \n\nHannah thinking that she was in love with me was exactly the kind of misunderstanding I was trying to avoid. I wasn't an idiot. I knew that sex was going to blur lines, which was why I'd decided to set boundaries for us. \n\nIn hindsight, I probably should've discussed it with her before I took it upon myself to compartmentalize our relationship. But our little arrangement was supposed to be fun and sexy, a whole discussion on why we couldn't hang out the way that we used to pre-sex would've been a massive turn-off. So, I'd made it my sole responsibility to ensure we didn't enter the 'more than friends' territory. \n\nHanging out all the time? Friends. Having no-strings-attached sex? Friends with benefits. Hanging out all the time while also having sex? More than friends.\n\nI'd forced myself to rein back my urges to always be around her. I'd brushed aside the constant compulsions to invite her out, to crash her place, to be with her all the time, everywhere and anywhere. And even if it was super difficult, I'd fought the blazing temptation of falling asleep wrapped around her (well, for the most part, there were still nights one or both of us had passed out after hooking up). \n\nThere were so many times I wanted to ask her to do something other than have sex, but I didn't because of the limits I'd set to make sure she wouldn't get hurt. And fine, maybe these 'limits' were also self-serving to an extent... What Hannah and I were doing always had an expiration date. I knew she was going to move on with her life one day, so I couldn't anchor myself to her more than I already did. \n\nYet, here we were... She was too hurt to talk. And her sudden absence from my life made me feel like I was completely lost at sea. \n\nI had to keep telling myself that we'd find a way to move forward, we could've even gone backward (all the way to the start) if necessary. We just needed to do whatever we needed to, so things could be good between us again. I had no idea how we were going to do it, but I knew I needed to find us a way to fix everything... Because Hannah was meant to be in my life. Forever. I just had to show her things were going to be okay. We just had to learn how to be friends again. It wasn't going to be easy, but it was possible\u2014and definitely worth it. \n\n<center>. . .</center>\n\nTurns out, Hannah was really, really good at ignoring me. In addition to an embarrassing number of unanswered texts, she'd also ignored a bouquet of mixed flowers I sent her. One morning, I'd even dropped off a phone charger outside her door with a note that said: 'Just in case you need battery.' \n\nI'd officially run out of ideas. Which was why I decided to go out and have a drink with friends. 'A drink' turned into 'a lot of drinks.' And as more and more alcohol pumped through my veins, my need to see Hannah grew stronger and stronger. Too strong for me to fight. Alcohol had always made me crave the touch of another person, probably because I felt lonelier when I was drunk. But I couldn't remember a time where I felt that particular ache more than I did with Hannah. \n\nI was consumed by my need to hold her. I didn't care if everything was still up in the air, I just needed a good night's sleep and I always slept well next to her. I knocked on her door loudly. I should've been quieter, more mindful of her dreaming neighbors. But I was just too gone to care about anything other than seeing her. \n\nShe opened the door. She was blinking and squinting as she adjusted to the change in light. \"Ellie?\" \n\nI'd obviously woken her up. She was wearing cloud-print pajama pants and a tight white tank top. I couldn't help but leer at her nipples poking against the thin cloth. Her tanned skin looked so inviting, so smooth. Somehow, she was always simultaneously cute and sexy. I barely suppressed my need to reach out and touch her. \n\nI tried to go inside her apartment. But she didn't let me. Instead, she stepped out to join me in the hallway. \n\n\"Can I come in?\" I asked. Her unfamiliar act of blocking my way affected me more than it should have. \"I just want to talk... No sex, just talk. Maybe sleep in your bed tonight?\" I rambled drunkenly. \"Remember we said, if fucking wasn't our thing, we could go back to cuddles? So, let's just do that. I miss you.\"\n\nShe shook her head, no. \"You should go home.\" \n\nI eyed her closed door. I really couldn't recall a time when she didn't let me in. This was far from the first time I'd shown up at her place unannounced, but it was the first time I didn't receive a warm welcome. A strange feeling of suspicion filled my gut. I knew I had no claim on her. I was the one who wanted us to remain just friends. The unexpected jealousy I felt was scorching though. \n\n\"Is there someone inside?\" \n\nMy accusatory tone was unreasonable, illogical, ridiculous because if she did have someone else in her apartment, that would've been a good thing, right..? That meant she didn't really love me. I was off the hook. We could've remained friends. I didn't feel any relief. \n\nWhen I looked at her again, I noticed that she was mad, too. A lot madder than I was actually. She was glaring at me. \"Go home.\"\n\n\"So, there is someone else.\"\n\n\"There's no one fucking in there!\" She said pointedly. She wasn't yelling at me, but it was clear that she wanted to be. It was the angriest I'd ever seen her. Her brown eyes were aglow with rage. \n\nMy envy and possessiveness were swiftly replaced by apprehension. I was supposed to be making things better. I wasn't supposed to be pissing her off. It was the first time we were together since everything went down and I so clearly dropped the ball. \"Hannah\u2014\"\n\n\"Actually, I don't care what you do, just go away!\" She ignored me and my pleas for her to 'wait a second.' If it wasn't so late into the night, she would've slammed the door in my face. I timidly tapped on the wood, but she didn't open up again. \n\n\"I'm sorry,\" I whispered out in the empty hallway. \n\n<center>. . .</center>\n\nWith my tail between my legs, I knocked on Hannah's door at a much more acceptable time. The shame from the night prior was very fresh. And though my memory was hazy, I knew I owed her a big apology for the way I'd acted. \n\n\"Hannah, it's me. I just want to talk about last night...\" I called out from the other side. \"I was out of line.\"\n\nTo my surprise, she opened up right away. She looked exhausted. There were dark circles under her eyes and I felt even worse for waking her up at an ungodly hour. I was glad it was the weekend and she didn't have to be at work. She stepped out, making sure to shut her apartment door behind her. \n\nLike our last one, the conversation was apparently going to play out in the corridor as well. \n\n\"I was drunk. I know that's not an excuse, but I just need you to know I'm sorry,\" I apologized, frowning. \"I shouldn't have come here last night.\" \n\n\"It's okay...\" She rubbed the back of her neck. \"I'm actually glad you're here now.\"\n\n\"You are?\" I furrowed my brow. She made a move to reach for the doorknob, but I stepped closer. I wasn't done talking to her. There was so much I needed to say, so much I needed her to hear. \"Wait, I am sorry about last night\u2014but I'm also sorry about everything else.\" I had a whole apology planned out and rehearsed, but seeing her again had me all tongue-tied. \"I didn't mean to hurt you.\"\n\n\"I know you didn't.\" She looked away, nibbling on her lower lip. \"It's not all on you. I should've said something before things got so bad. But I didn't.\" She let out a drawn-out, airy sigh. \"Speaking of, I really need to talk to you about\u2014\"\n\n\"One second,\" I interrupted her. I had to say what I needed to say before I lost my nerve. \"You don't love me,\" I began. She looked back at me, baffled but also insulted. Like an idiot, I kept going despite the warning bells that her expression set off. \"You're not actually in love with me. I think you were just confused because we\u2014\"\n\n\"Wow.\" She shook her head, disbelief evident on her features. Without another word, she turned around and entered her apartment. I followed after her. I was going to explain what I meant, I was going to ask her to let me finish. But I stopped dead in my tracks. \n\nHer place was basically empty, only two small cardboard boxes and a suitcase were on the floor. Her curtains were gone, her walls were clear and her bed was bare. The explosion of unmitigated panic that burst through me was instant and unbearable. I looked at her wide-eyed, so many questions were racing through my mind. \n\n\"What?\" I uttered stupidly, slack-jawed. My anxious eyes dashed around. Everything was gone and Hannah was going to be gone, too. Images of my life before I met her flashed in my mind, memories of a time that was less saturated, less bright. The life that I was going to be returning to once she left me. She made everything so much better. \"You can't go.\"\n\nShe scoffed. \"I can't go, I don't love you...\" She listed, her tone laced with venom. Her glare was icy, but her anger was scorching. If looks could hurt, I would've been in a world of pain physically. Fortunately, too, since my heart was already hurting way more than I could handle. \"Anything else you wanna decide for me today, Ellie?\"\n\n\"Hannah... You can't go,\" I repeated myself. I shook my head, dumbfounded. The fear I felt over losing her was white-hot. It wasn't like anything I'd ever experienced before. I knew in that moment, whatever hang-ups I had, nothing came close to how important it was to keep her in my life. She couldn't leave me. It would've destroyed me. \"Please don't go.\" \n\n\"Look...\" She stepped closer and placed a hand on my forearm. She was still angry, but I figured that the pure devastation on my face was making her treat me more gently than I deserved. \"It's not like I'm moving to another country. My lease was up and I just really needed a change.\"\n\n\"You were just gonna leave? Without telling me?\" \n\n\"I was trying to tell you outside!\" She raised her voice, throwing her hands in the air, frustrated. She took a deep breath before folding her arms across her chest. \"I know I should've said something sooner. I just- I'm still processing everything that happened. I swear though, I was gonna call you today before I left.\"\n\n\"Don't go.\"\n\n\"Ellie, it's already done. I'm just grabbing the last of my stuff.\" She explained and it was as if the ground underneath me was crumbling. \"I'm actually glad you're here... At least now I can thank you in person before I go. 'Cause even if the last couple months have been a mess, I just want you to know how glad I am that I met you. You're such a\u2014\"\n\n\"No,\" I cut her off. What she was saying didn't sound like a thank-you, it sounded like a goodbye. \"Okay, you're moving out... But we still need to talk about things. We still need to fix things,\" I said resolutely even if it felt like I was breaking from inside out. \n\nI needed time (a lot of it) to process the news that she was leaving, but time wasn't on my side. Whether I liked it or not, she wasn't going to be living in the same building as me anymore. But a change in address wasn't enough of a reason for me to let her go. That just wasn't going to happen. \n\nShe widened the space between us again. \n\n\"There's nothing to fix. I don't love you, right? There\u2014fixed.\" I wasn't used to how sarcastic and snippy she was being with me, but her anger was justified. What I'd said to her was awful\u2014I was awful. I studied her face, she was still so pretty even when she was so clearly going through a lot. \n\nActions had consequences, but was the damage I caused so destructive that she had to leave me? \n\n\"Hannah...\"\n\n\"Why are you making this so much harder than it has to be?\" She demanded. Her deep brown eyes were shining with unshed tears. \"What do you want from me?\"\n\n\"I want you,\" I admitted not only to her but also to myself. I didn't understand the specifics of what my revelation meant yet. But faced with the dark reality that I was going to lose her, I knew it was the truth. I knew I would've done absolutely anything for her not to disappear on me. \n\n\"Stop playing with me!\"\n\n\"I'm not.\"\n\n\"Then what the fuck are you doing?\" She hugged herself. I fought the urge to unwrap her arms from her body. I wanted to be the one to embrace her. Regardless of the expletive, she didn't look mad anymore. She just looked really, really sad. I wanted to wring my own neck. \"Ellie, I told you, I can't have you in my life.\" \n\nSomehow, even if the first time she said it had wrecked me, hearing her say it the second time hurt more. \n\n\"Well, I can't not have you in mine.\"\n\n\"Ellie...\" For a moment, it seemed like she was going to stop fighting the pull that was calling her body to me. She looked at her suitcase though then at her phone. \"I really can't deal with any of this right now. I have to go.\"\n\nReluctantly, I was going to let her leave. But only temporarily. I was going to be mature, and give her some time and space. Then we'd discuss how we were supposed to move forward. Together. \n\n\"Yeah, okay. Do what you need to, but promise me we'll meet up when you can\u2014when you're ready.\" Before she could stop me, I reached out and pulled her into my arms. I really didn't want to let her go. \"Wherever you want, anytime, I'll be there. Please just promise me that I'll see you again.\"\n\nShe gave a hesitant nod. The rest of her body remained completely still. Her hands never left her sides. And although she wasn't hugging me back, I kept my arms securely around her for as long as I could. Until she softly reminded me that she really had to go. \n\nI fought the urge to kiss her goodbye, opting instead to squeeze her once tightly before finally leaving her studio apartment for the last time ever. Our conversation was life-altering. Losing her for good would've been hell on earth, it was a nightmare I couldn't let become reality. \n\n<center>. . .</center>\n\nI replayed as many of my encounters with Hannah as I could. I called to mind as much of her as possible. Remembering every memory made me happy and sad at the same time. I wondered about when she first knew that she loved me... Whenever my mistake of trying to tell her she was just 'confused' popped into my brain, I felt my skin crawl. I couldn't shut out the voice in my head that repeatedly told me I'd ruined things past the point of no return. \n\nEverything was in pieces and there was no sure-fire way for me to put it all back together. ",
        "All of it was just so messy. It was like I'd unknowingly entered a labyrinth, and after already taking so many wrong turns, I had no idea how to get to where I needed to be. The goal was to be with Hannah, but I was at a loss on how to make that happen. The most straightforward path was usually the simplest one, right?\n\nShe couldn't have me in her life anymore because she was in love with me and I didn't believe in love. I'd shamefully already tried convincing her that she didn't love me. So, the only avenue left was for me to adjust my own beliefs. A simple path didn't mean the journey was going to be an easy one though.\n\nMy parents had divorced when I was young but already old enough to be aware of what was happening. And even when they were 'staying together for the kids,' they didn't seem to be in love. I had no real basis to use as reference. Plus, my mom's words kept echoing in my head. Her frequent warnings to never give someone so much power over you that if they left, you'd lose the ability to function. I'd always thought that my avoidance of real, monogamous relationships would've been enough to follow her age-old advice.\n\nIf I lost Hannah for good though\u2014if she didn't come back, the desolate thought was enough to make my eyes sting.\n\nI thought back to the night I'd asked her if she wanted to have sex with me. I knew it was a bad idea, I knew I already cared about her way too much. I needed her in a way that was entirely new to me. So, I was gambling something I was by no means willing to lose. It was reckless, careless, dumb, but I just couldn't resist my attraction to her anymore. Not when she was underneath me, shyly letting me know that she was horny, too.\n\nWhen I first met her, I was honestly just planning to sleep with her a few times and let things fizzle out naturally, just like anyone else I'd ever hooked up with. But then we started talking and I couldn't help but think that she was the cutest person I'd ever met. Yeah, I wanted to fuck her, but I also just really wanted to keep her around. \n\nShe made me happy. \n\nBefore our arrangement started, there was a never-ending game of tug-of-war in my mind: sleep with Hannah, don't sleep with Hannah. But the fear of ruining such an amazing thing made me settle for just touching her all the time. I used to hug her as often as I could. I incessantly touched every part of her I was allowed to. My hands seemingly had a mind of their own whenever she was around. They just needed to be on her at all times. \n\nI thought the attraction I had to her during those days, a blazingly powerful attraction I couldn't act on, was torture. But no, true torture was what my life became once she was no longer around. The indescribable pain and fear I felt were enough to make me reevaluate many of my steadfast beliefs. \n\nIn all honesty, despite how happy Hannah made me, I'd never seriously considered dating her before she moved out. In addition to my parents' issues, the idea of meeting, dating then marrying one person sounded like such a dull way to live. There were seven billion people in the world, how could anyone ever really be sure that they found the one?\n\nBut as I thought about Hannah non-stop, I began to yearn for the sense of security being in a real relationship with her would've provided me. The more I thought about it, the more I realized just how much easier things would've been if they were dull. After we met in the elevator, I could've asked her out, we could've begun dating and at some point, she could've been my girlfriend. We would've never landed in the mess we were in. \n\nIf it was a story, it would've been three paragraphs max. 'Once upon a time... Fluff, fluff, fluff. And they lived happily ever after.' So simple. \n\nI had no idea what was going to happen next, all I really knew was that I wanted Hannah to be my girlfriend. \n\nOkay, so maybe I'd never been the relationship-type before, but people could change (or in our case, people could change people, i.e., she changed me). I was still navigating and overthinking the concept of 'love,' but there was no doubt in my mind anymore about wanting to date her. There was no tug-of-war. \n\nThe decision was so much easier when the options were: date Hannah, lose Hannah. It was clear-cut. I just needed to wait for her to come around, so I could tell her all my realizations and then our very own 'dull, simple story' would begin.\n\n<center>. . .</center>\n\nWhen Hannah's text finally came a little over three weeks later, the relief that washed over me was a much-needed reprieve from misery. Since she'd moved out of our building, every single time I was in the elevator, I envisioned the first time I laid eyes on her. Crazy how clueless I was about how much she was going to change my life\u2014about how much she was going to mean to me. It actually still hadn't fully sunk in that she wasn't my neighbor anymore. \n\nEven if I'd told her I was willing to meet her at any hour, anywhere, she kept things simple: after work, a coffeeshop near my office we used to go to. \n\nShe looked a lot more well-rested than when I'd seen her last. Her eyes were more alive albeit still troubled. Her thick, straight brown hair was up in a neat bun that made her neck look irresistible. I'd always found her stunning, gorgeous, breathtaking, but given all of my self-discoveries during our time apart, she became perfection personified in my eyes. I'd truly never missed anyone or anything as much as I'd missed her. \n\n\"Hi,\" she shyly greeted me as I took the seat across from her. \n\n\"Hey, you.\" I bit back a smile after seeing that she got me a decaf iced coffee (just how I liked my caffeine past noon). We hadn't gone out for coffee in a long time, but she still remembered my go-to order. \"Thank you so much. Been here long?\"\n\n\"Nope.\" It seemed like everything around us was more interesting to her than my face. She was making an active effort to not look at me. She'd opted for a bottle of juice instead of caffeine, but her fingers were tapping away at the table. \n\n\"I'm really glad to see you. I missed you.\" I covered her jittering hand with mine, but she pulled away. I barely stopped myself from frowning. \"How's the new place?\" My own nerves were making it hard for me to stick to my plan of starting things out light and easy. I wasn't ready for how removed her body language was. She looked like she was fighting the urge to run.\n\n\"Good.\" She folded her arms across her chest, which placed yet another barrier between us. \"Look, Ellie, I want to tell you that I'm sorry...\" I opened my mouth, but she sent me an imploring look to let her talk. \"I shouldn't have sprung my feelings on you the way that I did, it wasn't fair.\" She pursed her lips together and I wanted nothing more than to kiss her. \"We were just using each other for sex, I just- I don't know. I guess I got too attached.\" \n\nThe description made me frown. I wouldn't have described what we were doing like she just did. I didn't use her for sex. That wasn't what happened. \n\n\"Hannah, I wasn't using you, it wasn't like that,\" I said as clearly as I could. \"And you shouldn't be apologizing for anything...\" I really wanted her to look at me for longer than a quick glance, but she wouldn't let herself. I bit the inside of my cheek. I had to choose my next words very carefully. \"I've been thinking about you a lot, about us. And I know I messed up really badly.\"\n\nI repeatedly apologized to her as I explained why I'd pushed her away and restricted the time we spent together to strictly sex. I told her about all the boundaries I'd set on my own accord to keep things from getting too complicated. She barely reacted to what I was saying though. She just nodded a few times to acknowledge that she heard me. \n\n\"It's okay,\" she said. The cold look on her face told me that it was very, very far from okay. \"You were just doing what you thought was right.\" She shrugged a shoulder. Everything about her was so detached, so defeated. \"I wish you told me about what you were doing, but there were things I should've also told you that I didn't. None of it matters anymore anyway. It's done.\" \n\n\"Well, it doesn't have to be,\" I said restlessly. My nerves were now in full-blown chaos. \"I know it's gonna take time, but I wanna make this all up to you.\"\n\n\"Ellie, you don't have to. I should've just told you right away when I started feeling things I wasn't supposed to, but I didn't 'cause I wanted to keep having sex with you even if it meant different things for us.\" She exhaled deeply. \"It all just got so out-of-hand so quickly.\"\n\n\"Hann\u2014\" \n\n\"It's okay,\" she repeated. \"Don't even worry about it anymore.\" It was supposed to be placating, but the way she said it troubled me immensely. \"You and I were friends, and we slept together... Things got complicated. Not exactly an uncommon plot, we'll be fine.\" \n\nI scrunched my brow. Her words sent a shot of cold panic through my system. \"What do you mean we 'were friends'..?\"\n\n\"Exactly that\u2014we used to be friends.\" She combed her hair away from her face. \"I'm always going to care about you, okay? I\u2014\" She stopped talking. She finally let our eyes lock. \"But I can't be around you anymore. Not even as friends. Maybe someday... Who knows?\" She sent me a sad smile. I felt a piece of my heart break off. \"I just can't right now.\"\n\n\"You don't mean that.\" \n\nAll the time I'd spent figuring out my feelings for Hannah, I stupidly didn't consider what she was doing with her feelings for me. I was so na\u00efve. I'd really thought I could just waltz back in her life and we'd ride off into the sunset. \n\nThe pain in my chest was so intense. I felt like I could've passed out right there and then. I wanted to keep my eyes on her, but for the first time ever, looking at her hurt. I started fidgeting with my coffee cup. My fingertips traced over the cool condensation. \n\nI wanted her to say something else, to take it all back, to say she didn't really mean it\u2014but for what felt like hours, there was just silence.\n\n\"I have to go.\" She was leaving. I was going to lose her. \n\nI squeezed my eyes shut. I felt like there was a ticking time bomb on my lap. One wrong move and I would've lost everything that mattered. I had to lay it all on the line. I made sure to keep my voice clear but soft, so Hannah was the only one who could hear me. I started spewing things out that I never thought I'd dredge up to another living person. \n\n\"When my dad left my mom, like when he walked out on our family, it didn't faze her at all. She acted as if it was no loss to any of us. 'Good riddance' or whatever.\" My brain told me to shut up, but my heart needed me to keep going. \"She used to tell me and my brothers all the time\u2014never get too attached to anyone or anything. Never need something so much that you won't be able to function anymore if you lose it.\"\n\nI raised my head. She was looking at me. She looked like she was really listening, like she was really hearing me. Which made it easier for me to continue. \"Hannah, if I lost you... If you left me\u2014\" I bit my lower lip. I couldn't even remember the last time I cried (probably more than a decade ago), but despite being in public, I was barely holding back my tears. \"I wouldn't know what to do.\"\n\n\"Ellie...\" She looked so torn. I was being selfish. In response to her telling me what she needed, I told her what I needed. I would've done absolutely anything else for her, anything other than letting her go. \"I don't know what you want me to say to that.\"\n\n\"I just want a chance.\" I hoped my eyes were helping convey everything my words were struggling to express. \n\n\"A chance?\" She squinted at me, confused. \n\n\"A chance to really be with you. For us to be together-together.\" She tilted her head to one side. Incredulity colored her entire face. \"I've never wanted to be with anyone, I never thought I would. But I know I want to be with you,\" I finally confessed what I should've said to her a long, long time ago. \"I'm sorry it took me so long to realize how much I care about you.\"\n\nThe fieriness of her sudden anger surprised me. Clearly, what I was asking her for made her mad. If we were alone, I knew she would've been shouting. Although she kept her voice low, her words were infused with rage. \n\n\"Do you know how fucked up this is?\" I was going to answer 'yeah,' but she didn't let me. She had something to say and she was going to say it. \"I tell you I love you, you say nothing. Then you blow up my phone for weeks, then you show up at my place drunk, accusing me of having someone in my apartment,\" she recounted and embarrassment seared my skin. \"Then you come back the next day, telling me I'm confused about being in love with you? Now you're here, telling me you want to be with me... Seriously, what's this game you're playing?\"\n\n\"It's not a game.\" \n\n\"I wasn't confused about my feelings for you, Ellie, they were my feelings,\" she stressed sharply. \"They weren't yours to explain away.\" She glared at me and for the nth time, I cursed myself and my stupid mouth. \"But right now, I am confused, so fucking confused. What are you trying to do here? Why are you such a head-fuck?\" \n\n\"You don't know how badly I wish I could take back what I said, it was so stupid,\" I acknowledged. All the callous words I'd uttered were going to haunt me for the rest of my life. \"I was so stupid.\"\n\n\"I'm trying my best to move on. Why are you making it so hard for me?\" She cast her gaze down to the wooden table. \"You keep messing with me and I really need you to stop. You have no idea how difficult this whole thing has been.\"\n\nOh, but I did\u2014I really, really did. \n\n\"Listen to me,\" I begged. \"I'm really not messing with you.\" I hated myself for hurting her. I knew I didn't deserve her, but I wasn't going to give her up without a fight. \"I know I'm asking for a lot, but I need you to give me a chance.\" She still wasn't looking at me. \"I'll understand if you can't... But Hannah, I'm begging you, please don't end this before it even starts.\" \n\n\"I got really hurt and we weren't even together...\" She said softly, lifting her head again. \"I know you didn't mean to and I really should've said something sooner, but you're still the one who hurt me. I don't know what to do here.\"\n\n\"I'm so sorry,\" I apologized again. I wished there was a better word than 'sorry.' It was so inadequate, so incapable of showing the depth of my remorse for what had happened. \"Give me a shot to treat you the way I should've all along... Please don't leave me.\" I was being the most vulnerable I'd ever been with anyone and though I was painfully uncomfortable, there was no other choice. \n\n\"I don't know. What if cutting our losses is the best thing for us right now?\"\n\n\"Hannah, I wouldn't be cutting my losses.\" My voice was trembling. \"Losing you would be the worst thing for me. I know it.\"\n\n\"This is so fucked up...\" She mumbled out as she stared at me. I knew she was silently debating with herself, weighing the pros against the cons of giving me what I was asking for. As always, I wished I could read her mind. \"How would we even..?\" She trailed off, still studying my face. \n\n\"Well, I was thinking we could start by going on dates, like real ones. Honestly, whatever you want to do, we can do, just as long as you're with me.\" \n\n\"Like the ones you go on with Miss A, Miss B and Miss C?\" She questioned and I raised my eyebrows in confusion.\n\n\"Who?\"\n\n\"The girls.\" She looked away. \"The ones you meet on the apps or wherever it is you pick them up from now.\"\n\nWhat she was asking finally dawned on me. She thought I was still seeing other women. It took me a second to understand because it'd been so long since my last one-night stand. I'd stopped messing around with randoms as soon as she and I started sleeping together. There was no point. Compared to being with her, even the best random fuck wouldn't have been good enough. \n\n\"No, nothing like my dates with Miss A, Miss B and Miss C...\" I copied the names she used. I barely stopped myself from smiling at how adorable she was. \"Our dates will be so much better, I promise.\" She eyed me doubtfully. \"And from now on, you don't need to think about me being with anyone else. I just want to be with you.\" \n\n\"You want me now because..?\" She challenged. \"Because you can't have me anymore?\" \n\n\"No.\" I shook my head. \"Look, I was an idiot for not figuring things out sooner. I hate that it took losing everything we had to knock some sense in me, but it's not too late... Right?\" I sent her an imploring look. \"Please tell me it's not too late.\"\n\n\"Ellie...\"\n\n\"One chance.\" I was basically groveling, but I didn't care how pathetic I looked. \"Everything will be so much better this time around.\" \n\n\"Okay,\" she sighed out. Her pained expression as she said the word made it clear to me that agreeing to my request was an incredibly difficult choice for her to make. Despite her hesitance, I felt the vice grip on my heart loosen. She was giving us a chance. \"We can try.\"\n\n<center>. . .</center>\n\nI parked my car in front of Hannah's building and shot her a quick text. I was picking her up for our first date. Her new place was a twenty-minute drive away. Which was way, way too far for my liking. Like almost everything else Hannah-related, I'd taken for granted how accessible she used to be, how close. \n\n\"Hi,\" she mumbled out as she strapped herself in the passenger seat. I leaned over the center console to place a quick peck on her cheek. Her skin was always so warm, kissing any part of her never failed to leave tingles on my lips. \n\nI frowned at her expression when I was back on my side. She looked uncomfortable. \"Sorry,\" I apologized. \n\n\"It's okay.\"\n\nThe drive to the restaurant was full of inquisitive questions and long rambling stories. Sadly, the questions and stories were all coming from me. Every answer or reply Hannah gave in return seemed to adhere to a strict two-word limit. There were a lot of 'yeah-s,' 'kind of-s,' 'nope-s,' 'I know-s' and 'it's okay-s' (the worst one). \n\nWith how little she was saying, it was like she was in police custody and we were in the middle of an interrogation, not a date. I wouldn't have been surprised if she suddenly pleaded the fifth. I kept glancing at her as I drove. I wanted to know what she was thinking so badly. \n\nThe dinner itself didn't fare much better. She was still tightlipped. I was trying my best not to let it get to me, but I'd exhausted all of my go-to small talk topics, bar politics. Ultimately, I decided to just bite the bullet and lay all my cards on the table again. \n\n\"Hannah...\" I reached for her hand. She stiffened but didn't pull away. \"I know it's gonna take time until things are good again, but I need you to be here with me, too. This won't work if we're not on the same page.\" \n\n\"We aren't on the same page though.\" She took a few sips of her wine with her free hand. Finally, she let herself look at me for more than five seconds. \"You and I want completely different things.\"\n\n\"That's not true, I told you I want to be with you,\" I reiterated. \n\n\"For now\u2014but you'll change your mind,\" she argued. Even if I knew for a fact that I had no plans to change my mind, the look on her face told me that she wholeheartedly believed what she was saying. \"Or I don't know, you'll get bored. You'll want more, something else.\"\n\n\"I won't, I\u2014\"\n\n\"You will,\" she interrupted me. \"People don't just change overnight. You say you want me, you say you want to be with me... But you're not wired the same way as I am.\" She raised an eyebrow. \"You want me now, but at some point, you're gonna realize this whole thing was a mistake, you're gonna realize what I want is not for you. And then you're gonna leave.\" \n\nI gaped at her. Similar to me, she'd obviously given us a lot of thought. But unlike me, her views on our relationship were far more somber, far more bleak, far more grim. It appeared that we'd switched lenses, I was now the one wearing rose-colored glasses, while she was sporting a pair of doom and gloom specs. Her new negativity was all my fault. ",
        "I was the one who had extinguished the light in her eyes. \n\n\"You don't really believe that 'cause if you did, you wouldn't be here with me right now,\" I reasoned.\n\n\"I'm here with you because...\" She shook her head and took a deep breath. \"I'm here with you, Ellie, because I don't know how to say no to you.\" She laced her fingers with mine. \"The way I feel whenever I'm around you\u2014I can't resist it. So, even if I know this is all going to end badly, I'm going to play along because I'm weak.\"\n\n\"Hann, please don't talk about yourself like that.\" I wished she could've just seen into my soul, so she would've known that I wasn't lying to her. \"And how come you sound so sure things will end? As long as you want me around, I'm not going anywhere.\" She was still eying me skeptically and I couldn't help but feel frustrated. \"Can we please just give this a real shot? I know you're not gonna believe me, but I really want you to be my girlfriend.\" I blushed\u2014a blush that deepened when I heard her laughing. \"What?\"\n\n\"Nothing. I'm sorry.\" She chuckled dryly one more time before flashing me a sad smile. \"It's just crazy how cruel life can be.\" She downed the rest of her wine. \n\nI tightened my grip on her hand, begging her with my eyes to trust me. \"I know I have a long way to go to make up for how I treated you, but as long as you let me, I promise I'm not going to stop trying to make everything right.\" I brought our clasped hands to my mouth and planted kisses on her knuckles. \"You just need to trust me.\"\n\nShe nodded her head in cautious acceptance and it got easier to breathe. \n\n<center>. . .</center>\n\nI tapped on Hannah's name on my phone to call her. It rang a few times before she answered. \"Hey.\"\n\n\"Hi, babe,\" I greeted her. I'd really tried to stop myself from calling her 'babe' since we technically 'just started dating,' but it kept slipping out, so I gave up. She didn't ask me to stop anyway. \"Wanna go out for dinner tonight? My friends keep raving about this new Italian place and I was wondering if you wanted to check it out.\"\n\nThere was a pause. \"I have work stuff due on Monday, so I can't go out-out tonight.\" I recognized my own words immediately. \"Invite another friend or something.\"\n\n\"Hannah...\" I pinched the bridge of my nose. She was being bratty, but I reminded myself that she was still hurting. \"Don't do that please,\" I requested, keeping my voice calm. \n\n\"Do what?\"\n\n\"You know what.\" I exhaled deeply. \"I'm sorry for how I treated you,\" I apologized again. Each time I told her I was sorry, I hoped she could feel that I meant it with my whole heart. \n\n\"I know. Sorry, too... I'm being a dick.\" She sighed. \"I just- I still- I'm sorry.\"\n\n\"You don't need to apologize.\" I let out a chuckle, hoping to defuse the situation. \"Let's just go have dinner. I want to see you.\"\n\n\"I want to see you, too.\" Her admission made me smile, big and bright. \"But I can't. I really have stuff I need to work on today. I mean it though, you should go with friends tonight, have fun. My dumb boss is already ruining my weekend, you should enjoy yours.\"\n\n\"Don't worry, babe. We'll go another time, no problem,\" I replied reassuringly. \"But just to be clear, this call wasn't me asking one of my friends to have dinner with me. This was me asking you out on a date, okay? A date we'll go on when you're free.\" \n\n\"Okay.\" She let out a soft giggle and I bit my lip. The sound made it so difficult for me to end the call. \n\n<center>. . .</center>\n\nWhen Hannah and I had first met, I thought that everything about our friendship was naturally effortless... I was wrong. During those days, it was only easy for us to get to know each other and spend time together because we both wanted to do those things. She wanted to be around me as much as I wanted to be around her. \n\nBut now... Each time we met, each date we went on, she was guarded, careful, wary. The new way she carried herself around me was so foreign and quite frankly, it sucked. We knew each other so, so intimately, but she was determined to keep me at arm's length. \n\nEven if it made me the biggest hypocrite ever, I was desperate for her to let me in the way that she used to. I wanted to tear down all of the new walls she had around her, the walls she'd so clearly created to shield herself from me. But although I found it devastating each time she shut me out or pulled away, I steeled myself. I needed to patiently wait until she was ready to come around. I was the one who'd caused her pain, I couldn't be the one to dictate when she was supposed to be over that pain. \n\nSince she was struggling to open up to me, I did the only thing I could do. I opened myself up to her\u2014completely and without restraint. I said things to her I never imagined I'd ever say outside the safety of my own head. I also brought up things I had kept under lock and key for so long... Memories I would've never revisited for anyone other than her. \n\nSome of the stories I shared were chapters of my life I hadn't thought about in over a decade. They were so unfamiliar to me, it was as if I was hearing them for the first time even if I was the one narrating the events. There were sad tales, but there were happy ones, too. I outlined for her the entire 'history of me,' I gave her so much more access to who I was than I'd ever given anyone. I even told her how when I used to feel scared at night, I'd close my eyes tight and pretend I was an astronaut. Tucked under my blanket with pillows surrounding me, I imagined I was piloting a rocket ship headed to the stars, away from everything in my life that made it hard for me to find sleep.\n\nEach piece of me I gifted her was meant to be another promise that things were, in fact, different the second time around.\n\n<center>. . .</center>\n\nMy thumbs tapped away on my phone's screen. I already had two whole paragraphs typed out before I erased everything. I'd always second-guessed my text messages to Hannah, but the level of overthinking that went into texting her when we started dating was overkill. \n\nEvery message I ever sent her had like five discarded drafts. I was constantly trying to find a balance between the clinginess of a baby koala and the stoic professionalism of a work email. So, basically, the range was from 'I really, really miss you, babe' to 'To whom it may concern... All the best'\u2014I always leaned toward being a baby koala though. \n\nMe: Hi. \n\nI placed a red heart at the end. After twenty minutes of furious typing, all I came up with was 'Hi.' What a literary genius.\n\nHannah: Hey.\n\nMe: I was wondering if you wanna come over? We could binge watch something or whatever. \n\nWe already had plans to see each other the next day. But it was a Friday. So, if I was just going to think about being with Hannah the whole night, might as well just be with her already. If she agreed, it would be the first time we spent any time alone together since our new normal began. \n\nHannah: Can't.\n\nShe replied with a sad face, which my own expression immediately resembled. \n\nHannah: Hanging out with friends... I'll see you tomorrow though.\n\nQueue my fingers typing and deleting a series of questions that asked: who she was with, what she was doing, where she was, when she'd be home, why she didn't mention anything. The surge of possessiveness was shattering. Before her, never in my life had I ever felt that blistering need to stake my claim over another person. Jealousy was never something I had to really tackle and apparently, it was something that made me feel sick all over. Green was not my color. \n\nFor someone who'd always harped on about 'no-strings-attached' to everyone I'd ever been remotely interested in, it was insane that I wanted to be completely tethered to Hannah. Once the initial onslaught of emotions subsided though, I thought about who she was and how she'd never act out any of the things that I saw in the darkest places of my mind. I trusted her. \n\nMe: Oh okay, no worries! Have fun, baby. I'll see you tomorrow. \n\nI kept my reply relaxed. I hoped that calling her 'baby' was enough to serve as a light but clear reminder that we were seeing each other. I was delusional when I thought I would've been okay with Hannah ending up with someone else. \n\n<center>. . .</center>\n\n\"Okay... Seriously, what's on your mind?\" Hannah asked with an amused smile and I shook my head to clear it. I completely missed what she just said. \n\n\"Sorry?\" \n\n\"I just asked you if you wanted to go for a swim in the duck pond.\" She gestured at the small body of water in front of the park bench we were sitting on, full of quacking ducks and ducklings. \"And you were all like, 'yeah, sure, babe.'\" She raised her pitch slightly to imitate my voice (she was so cute, it hurt). \"So, your mind is obviously elsewhere.\"\n\n\"It's nothing.\"\n\n\"Ellie...\"\n\n\"It's awkward.\"\n\n\"So? Tell me anyway.\" She shrugged a shoulder. \"I wanna know.\" \n\n\"I was just curious\u2014when did you know you liked-liked me?\" I internally rolled my eyes at the playground terminology I was using. I didn't want to use a different L-word though, I knew it was still a sore topic. \n\n\"You're right, that is awkward, let's pretend you didn't bring that up.\" She visibly blushed as she looked toward the ducks again. \"I'm going to call that one, the littlest one, Stanley...\" She trailed off. \n\n\"Babe...\" I gripped her hand and rested it on my thigh. I heard her release a heavy sigh. \n\n\"I always 'liked-liked' you, Ellie,\" she admitted softly. \"Way before we started hooking up, I knew I was interested in you, in a more-than-friends kind of way.\" She side-eyed me. \"But you knew that, too, didn't you?\"\n\n\"I\u2014\" I hesitated, pressing my lips together before releasing a sigh of my own. \"Yeah, I did. I figured it was just a harmless crush though.\"\n\n\"Yeah, harmless...\" A far-away look took over her face and I groaned internally because of my misstep. I brought her hand to my lips and kissed it. I asked her to look at me and she quietly complied. \n\n\"I was only asking because I wanted to tell you, in no unclear terms, that I really, really like you, Hannah. And I'm very glad we've been spending so much time together.\" \n\nThere was no room for uncertainty from my end. This time around, if I felt like it was important to say certain sentences aloud, I wouldn't allow them to remain unspoken. My 'silence to keep the peace' had already backfired once... Allusions were great and all, but there were too many gray areas the last time I'd assumed Hannah and I were in the same boat. \n\nI made it my mission to make sure that she didn't need to read between the lines when it came to me anymore. \n\n<center>. . .</center>\n\nI was walking with Hannah back to her apartment building. We just finished having dinner in a quaint little restaurant nearby. Since I didn't have my car with me, I was planning to book a ride for myself once I made sure she was home safe. Thankfully, as time passed, the conversations during our frequent dates were flowing more and more easily. \n\nEvery now and then, she still expressed dubiousness and hesitation, but I mostly took it in stride, patiently reassuring her each time with both my words and actions. I also dealt with her passive-aggressive comments as best as I could. She was still clearly holding herself back, but I didn't let it bother me. I just reminded myself that I should've been over the moon she was even giving us a chance. \n\n\"So... Next Saturday, I have this work seminar thing and it's in that new, fancy hotel that just opened downtown. It ends pretty early, probably no later than four in the afternoon.\" I glanced at her. \"All the attendees from my company are being given complimentary rooms for the night and I was wondering if you wanted to stay over, too.\" Before she could object, I babbled on. \"No funny business, I promise. I just figured it'd be fun, we could go swimming in an actual pool\u2014not a pond. Check out one of the buffet places or something. And all my colleagues usually bring their spouses to these things, or you know, girlfriends or boyfriends. Whatever.\" \n\nI was clearly rambling, but I really wanted her to say yes. \n\n\"I'm not your girlfriend.\"\n\n\"Not yet,\" I replied confidently. I refused to let her hand go even when she tried to pull away. \"Okay, okay, maybe nothing is official... But we're dating at least.\" \n\n\"We're not dating,\" Hannah told me with a slight shake of her head. \"We've gone on dates, but we're not dating.\" The way she said 'dates' made it evident that she still wasn't completely sold on the idea that I was in this with her for real. \n\n\"Babe...\" I stopped walking and forced her to look at me. Despite agreeing to go along with what I wanted for the most part, she was still so closed off in many ways. Her walls were very much still up. I looked into her brown eyes. I wanted to kick myself whenever I saw the insecurity that still swirled in them. \"We're trying, right?\"\n\n\"I\u2014\" She opened and closed her mouth but said nothing more. Her look of uncertainty kickstarted my heart. The thought of her changing her mind about us sent a torrent of dread through my bloodstream. I commanded myself to reel it in, to keep it light, easygoing, breezy. \n\nEven if I would've taken back all the pain I caused her in a split second, I sadly couldn't do that. All I could do was show her through my actions just how sorry I was for everything that went down, again and again. I needed to prove to her that I really wanted to be with her. That my decision wasn't a fleeting one. \n\n\"We're dating,\" I countered playfully. The change in my tone was drastic, conspicuous. I was moving us away from the solemn path our conversation was on. \"Say what you want, but technically, we go on dates, ergo, we're dating.\" I grinned at her. \"That's like a present participle or whatever, right?\"\n\nShe rolled her eyes but finally smiled again. I asked her about work and I could tell she was appreciative of the subject change. Before I was ready, we were outside her building and it was time for me to go. Parting ways with her never seemed to get any easier. \n\nUnder the moonlight and street lamps, she was a vision. I blinked in awe. I couldn't believe I was almost dumb enough to let her slip through my fingers. Not being able to kiss her made me realize how badly I took it for granted when she did let me kiss her, when she wanted me to kiss her. I was the luckiest person in the world and I didn't even know it. Tragic. \n\nMy hands were longing to grab her face. My lips were yearning to be reunited with hers. My urge to kiss her was extreme, burning. But I needed to keep my promise to her about taking things slow, so despite my body's fervent pleas, I managed to behave myself. \n\n\"I had a great time tonight. Thank you.\"\n\n\"You're super welcome, baby,\" I responded immediately. \"I can't wait for our next date. I love spending time with you.\" I constantly reminded her how much I enjoyed her company. Hindsight was 20/20, I wasn't going to take anything about her for granted anymore. She needed to know how grateful I was to her for not walking away from me. \n\nI couldn't read the look on her face, but I knew she wanted to talk about something else. So, I waited, giving her time to find her words. Unlike me, she was cautious when it came to the words she spoke into the world. Jokes came easy to her and all, but she classified 'serious conversations' as an allergen. More often than not, she chose to bottle things up inside, which was why she'd managed to keep her feelings for me hidden until the floodgates broke. \n\nDating her was like dating a crossword puzzle. She usually only gave clues to what was on her mind. It was hard work, but it was worth it. However much of herself she wanted to give me, I would've gladly accepted. Whatever pace she wanted to set for us, I would've loyally followed. \n\n\"About next Saturday...\" When she finally spoke, I held my breath. \"Okay, we can have a 'sleepover.'\" I raised my eyebrow at the term. \"But I'm not your girlfriend.\"\n\n\"You're not my girlfriend.\" I nodded in fake acquiescence. \"Yet.\"\n\nShe sent another eye-roll my way. \"Can I\u2014\" She darted her gaze away and looked down. \n\n\"Hey.\" I reached for her fingers. \"What do you need, babe? Just tell me.\" Her eyes locked with mine and again, I wished I could make time stop. \n\nWhen we first met, she used to look into my eyes all the time, but she began stopping herself for some reason. So, I wanted to be able to pause time and get my fill whenever she did allow herself to really look at me. My blue eye color may have been rarer than her brown, but there was something in her eyes that warmed up my insides. It was a special kind of warmth that I constantly craved. \n\n\"Can I have a hug?\"\n\nNo time was wasted before I gladly met her request. I was keeping my hands off her because she wanted to take things slow. But honestly, she could've fondled any part of me anytime, anywhere (even in public if she wanted). I'd told her as much, but so far, she'd been controlling herself, too. \n\n\"You didn't have to ask,\" I whispered into her hair. I inhaled the smell of her fruity shampoo and it brought back delicious memories. I held her as close as I could. She hugged me back and I felt more whole. Her body fit perfectly against mine. \"Anything you need from me, it's already yours.\" \n\nRight then and there, I promised her the world. But I knew she needed more than just promises. I needed to prove to her that I not only chose her, but I was going to continue choosing her, every day. \n\n<center>. . .</center>\n\nDuring the seminar, I may have physically been sitting in that function room, but I was already mentally with Hannah. I was so excited to see her. I was like a little kid at school waiting for the final bell. Seriously though, if I was quizzed on any of the speakers' lectures, I would've failed, no question. I was glad to see that my colleagues were taking notes. Luckily for me, our team shared all of our files with one another because we believed in working as a unit (all for one and one for all). \n\nI couldn't wait to finally be able to get close to Hannah again, away from anyone else. I cherished every single date we went on, but I just wanted to be alone with her. Although I knew we weren't going to have sex, I was at least going to have her all to myself for a whole night. No waitstaff, no cashiers, no other pedestrians. Just her and me. The last time this had happened, we were standing in her old apartment, months ago. \n\nBut as if the universe was playing a cruel joke on me, the one-bedroom hotel suite we were given had twin single beds. I knew it was a free stay in a five-star hotel and I really had no right to complain, but I still marched all the way down to the front desk. In spite of my insistence that I needed a room with just one bed, I was informed it was a no-go since they were fully booked. They did have a honeymoon suite available, but I figured Hannah would've disapproved if I paid for that upgrade (it sure was tempting though). \n\nWhen I got back to the bedroom, Hannah couldn't help but laugh at the big fuss I was making. And as I looked around the palatial, luxurious, modern space, it was clear I was hyper-focused on something that shouldn't have been a big deal... But it was a big deal to me.\n\nThe memory of the last time we were in bed together wasn't a good one. It hurt to remember her crying her eyes out, trying to pull herself away from me on my own bed. So, I wanted the weekend to be filled with better memories, happier ones. I couldn't erase the past, how close I came to ruining the best thing that ever happened to me. But I could at least do good things to help dilute the bad memories. \n\n\"Stop sulking,\" Hannah told me with a grin. She was sitting on the bed closer to the floor-to-ceiling windows. \"This place is insanely nice. Have you seen the shower? The tub?\" I held back a remark about not being able to fully enjoy the bathroom either. \"There's really no reason to look like someone just told you Christmas was canceled. Plus, even if we were going to share a bed, we weren't going to... You know.\"",
        "\"I know that.\" I shook away the steamy thought of hot shower sex with Hannah. \"I just really wanted to hold you while we slept. I miss holding you.\"\n\n\"I miss you holding me, too.\" Her quiet disclosure sent elation through my bones. I stared at her. I wanted to tackle her flat. \"But... This is fine. More than fine, it's great!\" She looked around. \"We're like roommates.\" \n\nShe'd developed this bad habit of trying to make what we had sound platonic. After the first few times, I'd made it a point to counter her, deciding it'd be better to nip things in the bud. We weren't just friends anymore, so I frequently reminded her that my interest in her was 100% romantic. \"Babe, we're not roommates. You and I aren't friends,\" I stated clearly, voice sure. \"You're my girlfriend.\"\n\n\"No, I'm not.\" She grinned and I rolled my eyes. \n\n\"Okay, fine, you're this incredibly hot, smart woman I'm dating...\" I looked right at her. \"Who I want to do very inappropriate things to all the time.\" I made it a point to blatantly check her out, my eyes tracing her sexy body hungrily. \"Like you have no idea how much effort it takes for me not to jump you. But I'm going to keep behaving,\" I promised despite the noticeable changes in her cheeks and breathing. \"Because I want so much more than sex with you, I want all of you. So, no, we're not roommates. Not even close.\" \n\nShe nodded in defeat and I felt triumphant after seeing her reaction to what I just said. She was clearly turned on, which thrilled me. I was really glad to know that she still wanted me sexually. On the downside, my little speech also made me kinda horny, but I couldn't do anything about it. She wasn't ready to start sleeping with me again. Which was completely fine, I was ready to wait as long as she needed me to. \n\n<center>. . .</center>\n\nThe embers of desire I felt in our room were stoked into a bright blaze by the sight of Hannah in her little red bikini. Despite the cool water of the pool, I was completely burning up. I even had to cut swim time short because the temptation to tug on one of those little strings keeping her top on was frankly unbearable. And I really didn't want to scandalize the other hotel guests enjoying the pool area (even if a bunch of them would've definitely appreciated the view of a topless Hannah). \n\nShe didn't seem to mind my abrupt decision though. If the number of times I'd caught her blatantly staring at my boobs indicated anything, she was struggling to exercise self-control, too. We took (sadly) separate showers in our hotel room to wash off the chlorine before deciding to have a nice, multi-course dinner in one of the fancy restaurants downstairs. \n\nOver dinner, I couldn't stop admiring how good-looking Hannah was. Her golden olive skin. Her deep, dark eyes framed perfectly by flawless makeup. Her absolutely gorgeous smile. She was so attractive, but she was so unassuming about it. Humility was not a strength of mine though, so I silently gloated over the fact that the hottest, sexiest, prettiest woman ever was on a date with me. At the end of the great meal, she informed me that she was paying and I let her without protest. \n\n<center>. . .</center>\n\nIt was much later in the night and we were back in the room. We were ready to sleep, both tucked in our incredibly comfy hotel beds with their noticeably high thread count covers. Despite how luxurious the bedding was, I was still feeling vexed with our unfortunate sleeping situation. \n\nHannah was right there, but she was still way too far. \n\nShe was looking at the ceiling, while I was on my side, staring right at her. The lights were turned off, but we kept the window shades open. The bright cityscape lights twinkled on the walls. I was silently rehearsing my spiel. As soon as I perfected what to say, I was going to ask her if I could join her in her bed. Logic and reason be damned.\n\n\"Ellie?\" She turned her body to copy my position, so we were both on our sides, facing each other. \"You still up?\"\n\n\"Yeah,\" I answered. I was about to ask her if I could sleep beside her, but she started speaking.\n\n\"You know I still want to jump you all the time, too, right?\" She brought up our earlier conversation. \"Like... You have no idea how badly I wanted to touch you when we were swimming a while ago.\" Actually, I had some idea. She didn't exactly hide it very well. My heart started beating faster. I wanted to tell her to go ahead and do whatever she wanted to me, but I let her keep talking. \"I don't think I'm ready yet though,\" she said softly and I nodded in understanding. \n\n\"That's okay, babe, I wasn't trying to put pressure on you or anything. I just wanted to remind you how much you turn me on because of your roommates comment,\" I explained. \"You can take as much time as you need. I'm not going anywhere.\"\n\n\"Are you turned on now?\"\n\nI blinked before admitting. \"Yeah\u2014a bit.\" I was always in the mood when she was around (like always, always). I really didn't understand where she was going with the conversation though. It seemed to be bouncing all over the place. \"But I swear, I'm fine.\"\n\n\"Did you...\" I was watching her dimly lit face. Whatever was on her mind was clearly bothering her, so I told her she could ask me anything she wanted. \"Like when we stopped doing it, did you sleep with anyone else? I won't be mad if you did, I just wanna know.\" \n\nShe sounded so small and shy. It made me want to cuddle with her even more. I wanted to take her in my arms and repeatedly whisper that she had nothing to worry about until she fell asleep to dream of only good things. \n\n\"No,\" I answered truthfully. She looked like she wasn't sure if I was being honest. \"I swear, the last time I had sex was um... Was that night\u2014with you,\" I said uncomfortably. Letting her leave my apartment after she'd told me she loved me would forever be one of my life's biggest regrets. I didn't like remembering it, but I couldn't pretend it didn't happen. \n\n\"Me too.\" She didn't even really have to say it. She just wasn't the type to have random or meaningless sex, that was my forte (well, it used to be my forte). \"So, how are you still alive?\" She asked in a much more lighthearted tone. \"It's been months since that night... That's gotta be a record for you.\" \n\n\"Let's just say I've gotten really good at self-care,\" I told her with a grin. \"And I now have a bunch of new toys I can't wait to show you when you're ready.\" Suddenly, visions of Hannah naked overwhelmed my brain. \n\n\"Do you think about me when you take care of yourself?\" She asked, her voice slightly raspier. \n\n\"Always.\" I squeezed my thighs together. I was getting so turned on and we were just talking. \n\n\"What do you think about?\"\n\n\"Lots of things...\" If she wanted to play this game, then I was all in. \"I think about you coming on my lips, around my fingers. I think about your little pussy and how good it tastes, how insanely tight it is.\" She closed her eyes and moaned, and I realized she was touching herself under the covers. \"Fuck, that's so hot.\" \n\nIt would've been so easy to slip in her bed and take over for her. The desire to be the one to make her come was intense. I wanted to slide my fingers inside her pussy. I wanted to wrap my lips around her clit. I wanted to please her all night long. Somehow, I found the strength to stay where I was. Like a vampire though, if she invited me in, I would've sucked her dry. No question about it. \n\n\"Keep going,\" she requested breathlessly, so I continued providing her with spoken smut. I reached under my own damp panties to touch myself. I dragged two of my fingers through the wetness before tracing small circles around my clit. \n\nI stared at her face. \"I think about everything we've done... How I used to eat you out until you begged me to stop, but I'd keep going then suddenly, you're begging me to let you come again. I think about how I feel whenever your fingers are inside me and your tongue is on my clit, how great you are at making me come.\" I stuck two fingers in my pussy. \"I also think about everything I plan to do to you in the future.\"\n\nShe was groaning, loud. I was so glad I was hearing the sexy sounds she made in bed again. I'd missed them so much. I was familiar enough with her grunts and moans to know she was getting close. \"Like?\"\n\n\"Like tying you up, blindfolding you. Maybe fucking you with a better strap-on. Mm, taking you from behind again... You seemed to really enjoy that.\" She let out the loudest moan yet. I listed a few more things off the top of my head. \"I have so many plans for you, baby, I can't wait. I'm going to make you feel so, so good.\" Hearing my promise of pleasure, she came apart. Thankfully, listening to her climax sent me over the edge, too. I admired her for a few minutes. \n\nShe was too pretty. \n\nWe took turns using the bathroom. When I got back, she was already tucked in. It was now or never. \n\n\"Can I sleep in your bed?\" I asked it so bashfully. As if I didn't just recite an entire sex monologue to talk her to an orgasm less than ten minutes earlier. \n\n\"Yeah.\" She shifted a little to make just enough space for the two of us on the bed made for one. \"Come here.\"\n\nI hurriedly joined her under the sheets before she could take it back. I immediately took her in my arms. I felt warm all over. I kept the rest of our night PG, more than content that she was letting me hold her. \n\nIt was the best night of sleep I had in months.\n\n<center>. . .</center>\n\nSurrounded by oversized art installations, Hannah was yelling at me. \"You're so full of shit!\" She shook her head, laughing loudly. She finally caught on to the game I was playing. I feigned confusion, but I couldn't help but laugh along with her. \"I can't believe I thought you were being serious!\"\n\n\"Hey, Leonardo Da Vinci and Vincent Van Gogh could've really been BFFs, we'll never know for sure!\" I defended myself. I dodged the brochure she tried to swat me with. We were standing in front of blown-up replicas of 'The Mona Lisa' and 'The Starry Night.'\n\nBy the entrance to the pop-up mixed art exhibit we were in, there were audio tour headsets available. I'd dissuaded Hannah from picking one up by telling her that I was well-versed in the world of art. It may have been a lie, but it was a trivial, inconsequential, little one for the greater good. If she'd put on a pair of headphones, then I wouldn't have been able to talk to her until we finished seeing everything...\n\nAnd being around her without being allowed to talk to her seemed like a horrible way to spend a Sunday afternoon. So, I'd led her through a few of the areas earlier. Pointing at random art pieces, giving them fabricated origin stories that may or may not have been more interesting than the truth\u2014I had no idea. \n\n\"No, we do know for sure.\" She lifted the pamphlet again. \"It says here Da Vinci was born in 1452, while Van Gogh was born in 1853! They never even met.\"\n\n\"Oh?\" I grinned. \"So those two had a bit of an age gap, kinda like us.\"\n\n\"Yeah, exactly like us,\" she replied sarcastically. \"You and I were born three years apart, while Da Vinci was like 401 years older than Van Gogh. Completely the same thing.\"\n\n\"It's so hot when you do quick math.\" \n\nI may have been teasing her, but I really did find it attractive. She never pulled out her phone to calculate anything, but she always knew exactly how much we were supposed to tip or how much our total was in a convenience store. Numbers had given me a hard time for as long as I could remember, so I just saw it as another reason why we fit so well together. \n\n\"You're so annoying!\" She rolled her eyes. She was trying and failing to shake off her smile. \n\n\"Yeah, maybe, but you find me cute, right?\"\n\n\"Maybe. A little bit,\" she conceded. \"Still annoying though.\"\n\n\"Mm... I think you find me super cute.\" I stepped closer to her. It was subtle, but I knew my closer proximity was having an effect on her. \"Like so cute, you wanna kiss me right now,\" I challenged and her dark eyes darted to my lips. \n\nI thought she was just going to tell me to quit it as usual, but instead, she planted a lightning-fast kiss on my lips. \n\nIt was so quick, so light, but it still set my senses on fire. It'd been so long since the last time her lips had touched mine. So, the kiss sent a jolt of nostalgia combined with pleasure right through me. I let her drag me around the other parts of the exhibit after that. Honestly, after such an intense reaction to such a chaste kiss, my body would've let her drag me to anywhere in the world. \n\n<center>. . .</center>\n\nAfter our teeny, tiny kiss in the art exhibit, things had escalated quickly. Hannah and I still weren't having sex, but we were kissing\u2014we were kissing a lot. Every time we saw each other, we ended up making out in my place or hers for at least an hour. \n\nBy the grace of the gods, I was always able to stop myself from tearing off her clothes during our extensive make out sessions. That didn't mean I kept my hands to myself though. I squeezed her ass and played with her boobs through her clothes as often as I could. We were like two teenagers exploring our urges. Despite always wanting more in the end, I was thoroughly enjoying this new stage in our relationship. \n\nI already knew Hannah was a good kisser, I just wasn't aware of how phenomenal she was at it. The way her wet tongue moved in-sync against mine, the way her teeth tugged on my lower lip, the way her fingers threaded through my hair to firmly keep my mouth where she wanted. Kissing her had so many intricacies that I'd previously glossed over because my brain was already picturing sex. I'd always thought it was hyperbolic when someone said that a kiss took their breath away, but I was wrong... So wrong.\n\nKissing Hannah didn't just take my breath away, it set my lungs on fire. \n\nAll of the deep kissing was just incredibly intimate. In a way that made it so powerfully addictive. My whole adult life, making out had always been just a prelude to sex. Like a pit stop on the way to the final destination. \n\nBut I was kissing Hannah just to kiss her... I was kissing her as a way to wordlessly express that I loved her. Although it would've made for a better storyline if there was a climactic event that made me certain that I was in love with her, nothing momentous had really happened. \n\nIt was just all of the little things about her, about us together, that told me the new feeling I was experiencing for the first time ever\u2014that was love. Any doubt I may have originally had was completely gone. The months I'd spent getting to know her better and allowing her to really get to know me proved to me that being in love was, in fact, something I was capable of. \n\nAnd I was very, very much in love with Hannah. I loved her. I loved her so much. I loved her more than I thought was humanly possible. \n\nThe love I had for her made me hate myself even more for how I'd reacted when she told me she loved me. If anyone told me now that I wasn't really in love with her, I would've been ready for a fight (maybe even for a war). I still couldn't wrap my head around the things I did, the bullshit I said when I was trying to prevent her from falling in love with me. \n\nAt times, the feelings of regret and remorse were so powerful, it felt as if they were destroying my insides. On the very worst days, I always asked her to spend the night with me. I was perpetually afraid that at some point, she'd want to leave me because of all the hurt I'd caused her. I would've deserved it because I was truly a self-centered asshole in the past. But I couldn't even imagine living in a world without her by my side anymore. \n\nIt was definitely one of those anxiety-ridden nights where I needed to be around Hannah\u2014badly. But she was out for a friend's birthday and she didn't ask me to go with her. She met most of my friends already at various social events I'd brought her to. She didn't correct me in front of any of them when I'd proudly introduced her as my girlfriend, but she laughingly reminded me later on that she wasn't my girlfriend. And even if I knew it was just one of her go-to jokes, it still got under my skin.\n\nAll of my friends loved her. So, I wondered non-stop if her friends would even like me. Would they know what I did? Probably, they were her friends. \n\nWas that why I'd yet to meet any of them? Did they already have set opinions on me? I wouldn't have been very keen to meet someone who'd messed with one of my friends the way that I did with Hannah. I thought back to when she'd asked me to be her date to a wedding... I'd turned her down so quickly, so casually. Who knew there'd come a time I'd be wishing she took me with her everywhere? \n\nThe shame spiral was in full force. I needed to talk to her or I would've driven myself insane. I called her phone. It was just going to be a quick conversation. I just really needed to hear her voice. \n\n\"Ellie?\" She picked up almost immediately. I could hear the sound of music and heavy bass in the background. \"Give me a sec...\" She was probably moving to a quieter place to hear me better\u2014smoking area or restroom? I didn't even know where she was. \"Hi, what's up?\" \n\n\"Sorry to bother you,\" I began lamely. \"I just wanted to check in. See how your night was going.\"\n\n\"It's good. Always fun to see the gang. Yours?\"\n\n\"I miss you,\" I admitted, not really answering her question. I wasn't going to ruin her night because I was feeling insecure and small. \n\n\"I miss you, too,\" she replied without hesitation. Which made me feel a lot better. \"Is something wrong?\"\n\n\"No, I just really called to tell you I miss you.\" She giggled cutely and the sound made me smile. \"Okay, I'll let you get back to your friends now. Good night, babe.\" I held back the 'I love you' that I wanted to tack on at the end. \"See you tomorrow?\"\n\n\"Good night, I'll see you tomorrow.\"\n\nThe call ended and her promise of tomorrow was enough for me to emerge from my ghastly angst trench. \n\n<center>. . .</center>\n\nI was on top of Hannah on her sofa and I was so turned on. I was delirious with need. I couldn't stop grinding myself against her denim-covered thigh. I wondered if I was crossing any lines by basically dry humping her. She was gripping my hips, keeping me where I was though.\n\n\"Is this okay?\" I still asked, breathless. She nodded before hiking my short dress up even higher, so I could move more freely. The delicious friction became more intense as I repeatedly dragged my soaked lace underwear against her. I squeezed my eyes shut when she took over, guiding my frantic movements, increasing the pace. She kissed me deeply and I came apart. I looked down to see a darker spot on her light-wash skinny jeans. \n\n\"Holy shit,\" I whispered out, gasping. \n\n\"Good?\"\n\n\"Amazing. Everything about you turns me on so much,\" I confessed in a dopey state. The unexpected rush of orgasm chemicals in my brain was making me even more lovesick. \"Seriously, I feel like I'm on fire whenever you touch me.\" She looked surprised by my choice of words, so I quickly elaborated. \"In like a good way though! It's hard to explain, but whenever you touch me, I feel flames.\" I attempted, but it was too hard to describe what I was trying to say. \"Never mind, I just mean I love it when you touch me, babe. It makes me super-hot.\" \n\n\"Like fire?\"\n\n\"Like fire.\" I nodded. She wasn't making fun of me. She just seemed to be really fixated on the silly, little analogy I used. \n\n\"Ellie...\" There was so much emotion in the way she was looking at me. \"Wanna do more tonight?\"\n\n\"Yeah, of course, baby.\" My heart was racing. She was gazing at me as if I did something special. I couldn't pinpoint what it was though. \"Only if you're ready,\" I reminded her softly. \"I got a little carried away.\" I shamelessly glanced at the wet spot on her jeans. \"But we can just keep making out again, I promise.\"",
        "\"Is it okay if I just touch you though?\"\n\nShe didn't say it explicitly, but I knew she was really asking me if I would've been okay with not touching her. Just like how things were during the last stage of our friends-with-benefits situation. It hurt. The request made me internally question if we were really making as much progress as I thought. \n\n\"Of course, anything you want.\" \n\nI'd promised her that she was the one going to call the shots. I couldn't go back on that promise. Not even if what she wanted made my heart feel sore. She led me to her bed where she quickly removed all of my clothes. She took her top and pants off but kept her bra and thong on. I was just going to let myself drown in the amazing view and what she wanted to do to me. I postponed the overthinking for later.\n\nShe didn't start out slow, she dove right in. Her tongue went straight to my pussy. And I rapidly got lost in the pleasure she was giving me. She sucked on my clit and licked at my dripping folds. Then she began fucking me with two of her long fingers, deep and hard. She was doing everything with so much intensity, so much passion, it made my eyes roll to the back of my head.\n\nAfter I came, I pulled her up, so we were face-to-face. I brought my lips near hers, but I wanted her to be the one to close the gap. My eyes shut in pure relief when she did.\n\nThe kiss was rough and frenzied, but it still sent much-needed comfort to my heart. Without breaking our kiss, she traced her fingers down my body and pushed them back inside me. Despite the lengthy hiatus, she remembered exactly what I liked during sex. I couldn't stop screaming her name even when she begged me to keep it down because she liked her neighbors (as if it wasn't her fault I was making so much noise). \n\nShe made me come three more times before finally telling me she'd let me get ready for bed. Although it really bothered me that I couldn't return the favor, I took solace in the fact that unlike how things were before, she had no problems kissing me and I wouldn't be ending the night alone in my room.\n\n<center>. . .</center>\n\nIf I were a passive lover, Hannah could've kept doing whatever she wanted without issue. I knew I was extremely lucky to be coming as often as I did... As hard as I did. But the overwhelming desire to make her feel good was driving me crazy. Each time I asked her if maybe I could do more for her, she replied with a soft 'no.' \n\nI never pushed her. I just reassured myself that she'd be ready at some point, but even if that were the case, I still didn't understand why she was refusing to let me give her the relief she clearly needed. I knew that she wasn't the opposite of a 'pillow queen.' So, the fact that she was denying herself the pleasure I desperately wanted to give her made no sense to me.\n\n\"Oh my god,\" I groaned up at the ceiling. I was sitting on Hannah's face, grinding myself against her velvet tongue. I was gripping my bed's headboard so tightly, my knuckles were bone-white. Each time I tried to carry more of my weight, she'd pull me back down to make sure I was firmly planted on her face. She seriously could've taught a class on topping from the bottom. She was an expert at it. \n\nShe began to tug on my hips, guiding me to buck against her face. After a few minutes of pure pleasure, she stilled my movements, so she could take over completely. She wrapped her soft lips around my clit as her tongue swiped across it over and over again. I felt myself gushing. Her cheeks and chin were definitely coated with my juices. She moved her mouth and stuck her tongue through my opening as deep as it would go. I climaxed with a deafening scream (I didn't care about my neighbors). I fell backward, my head landing close to the foot of the bed. \n\nShe immediately crawled up my body to join me on the opposite end of the bedspread. Her tongue licked as much of my skin as possible as she made her way to her destination. She kissed me deeply and tasting myself on her tongue just made me want to feast on her even more. She reached between our bodies to cup my pussy again, her fingers gently stroking my folds. \n\n\"How are you still in the mood?\" I asked with a light laugh. \"Give me like three minutes, that last one was like two orgasms back-to-back.\"\n\n\"Babe, I already told you this...\" She grinned. And her smile was just so beautiful, so genuine, so pure, seeing it made me feel unbelievably lucky. \"I'm always in the mood to fuck you.\" \n\n\"Same.\" I pulled her face to mine. I roughly kissed away the apology before it could leave her lips. I would've waited as long as she needed me to. No matter how much time it took, I would've still been in the mood to fuck her when she was finally ready to let me. \n\n<center>. . .</center>\n\nAnother thing that really comforted me was that despite the return of sex in our relationship, the cute dates didn't stop. The places we visited didn't dwindle down to just our apartments like it did before. One more bonus of us 'half sleeping' together was that we were basically spending every night with each other. I slept the most soundly beside her. Which was amazing because sleeping enough had always been an issue for me. \n\nI didn't know when I started doing it, but all my plans were suddenly readjusted to fit Hannah. \n\nDream trip to Europe? Used to be backpacking adventures, now it was wine-tasting and long hotel stays where we could waste entire days in bed. Dream car? Used to be a light blue, two-seater sports car, now it was a practical mini SUV for random road trips around the country. Dream house? Used to be the 'Ellie Mansion' (which had way, way too many rooms), now it was anywhere Hannah would've been willing to call her home, too. \n\nI wanted her to be the one to give shape to the rest of my days. \n\nSpending the rest of my life loving her was the outline, everything else just had to fit within those contours. \n\n<center>. . .</center>\n\nWe were at a hip gay bar I hadn't been to before. I was finally meeting five of Hannah's closest friends. One of them was moving out of state and they wanted one last hurrah together. The cautious looks they'd flashed me as Hannah introduced me to each one of them served as confirmation that they all already knew who I was. \n\nThey knew what had happened\u2014all the awful things I had said and done. They didn't make me feel uncomfortable or unwelcome though. In fact, they were all going out of their way to make sure I was having a good time. And despite my uneasiness about whether or not they thought I was right for Hannah, I was enjoying myself in their company. \n\nAnd I was definitely enjoying all of the embarrassing Hannah anecdotes they were relaying despite her (cute) threats about murdering them if they didn't shut up. \n\nWe were all sitting around a large table. Instead of buying individual drinks, the six of them took turns heading to the bar to order rounds for the entire group. I wasn't surprised that they were all so witty and interesting, birds of the same feather and all that. Their conversations flowed easily, full of well-timed jokes and teasing quips. \n\nTheirs was obviously a very tight group with a lot of history. I'd quickly noticed that Hannah drank a lot less than the rest of them. Which made sense given that she was such a lightweight (she was adorable when she was drunk though). As the newcomer, they made sure that I always had a drink in my hand. And before I knew it, I'd already drunk more than I was planning to. \n\nI wasn't drunk yet, but I knew I would've surely been wasted by the end of the night if we kept drinking at the pace that we were. I was holding Hannah's hand on my lap. She was already sitting right beside me, our chairs were even touching. But illogically, I wanted her to find a way to get even closer. I honestly would've pulled her over to sit on my lap if I didn't care about making a good first impression. \n\nIt was her turn to order and pay for a round. I frowned when she stood up and let go of my hand. She rolled her eyes at my crestfallen expression but planted a quick kiss on my lips, causing her friends to tease us. Two of them got up to go to the restroom and I tagged along. \n\nI glanced at Hannah on the way and since it was crowded, she was still trying to get a bartender's attention. When we got back to the bar area, I noticed that she wasn't sitting at the table yet. My eyes landed on her talking to a raven-haired woman by the bar. \n\nI rushed over. I'd never been possessive, but I'd also never been in love before. Sue me. I wrapped an arm around Hannah's waist from behind. She jumped but instantly relaxed when she realized it was me. \n\n\"Hi, what's up?\" I icily asked the woman talking to her. I wouldn't have called the stranger ugly or unattractive, but I knew she wasn't Hannah's type... How did I know that? Because I was Hannah's type. \n\n\"Just trying to make friends,\" she replied with a pleasant grin. \"Hey, I'm\u2014\"\n\n\"Find someone else to be friendly with.\" I didn't even let her finish introducing herself. I didn't care what her name was. Hannah apologized embarrassedly for my rude behavior and the still-polite stranger wished us both a nice night.\n\nI made sure to keep an arm securely around Hannah as I waited for her to finish up her transaction at the bar. I knew I was acting irrationally jealous and overprotective, but I didn't care. She was my everything. \n\n\"Drinks are coming!\" She happily announced to her friends back at the table. \"But we gotta go, Ellie's not feeling very well...\" I tried my best not to let my confusion show. Despite the group's pleas for us to stay for one last drink, she insisted that I already drank too much. Not true. I could've drunk way more and she knew it. Her friends took turns hugging her goodbye and two of them even gave me a hug. \n\nThey told Hannah to make sure to bring me with her next time, which made me feel really good. \n\nHannah booked us a ride to my apartment and as we were waiting by the curb, I apologized. \"I'm sorry... I know I was acting crazy back there, I didn't mean to cut the night short. I just- I don't know, I didn't like seeing that girl all over you. I know you keep saying you're not my girlfriend, but you kinda, sorta are. And I don't want anyone to get the wrong idea that you're single.\"\n\n\"Oh, Ellie...\" She tilted her head to the side. \"I'm not 'kinda, sorta your girlfriend'\u2014I am your girlfriend.\" She held my hand. \"You know I'm just teasing you when I say I'm not, right?\" \n\n\"Yeah...\" I didn't sound convincing, but she let it slide and just squeezed my hand. \n\n\"And babe, the girl at the bar wasn't all over me. I would've told her that I'm very happily taken if she was,\" she reassured me and I instantly felt better. A lot better. She proceeded to tell me that the stranger was actually asking about one of her friends. And before she could say what kind of drink should be sent over, I came around and basically told the poor woman to fuck off. \n\n\"Oh...\" I mumbled. My face was burning. \"Sorry,\" I said again, making her laugh. \"Wow, I'm actually crazy, huh?\" \n\n\"Mhmm, completely bonkers.\" She agreed before kissing me right on the lips. \"But that's okay... If the hot ones are crazy, then that means the crazy ones are also hot, right?\" She was referencing our first conversation ever and it made me swoon. \n\nOnce we made it back to my place, she wasted no time leading us to my bedroom and getting me undressed. To my surprise and delight, she got naked, too. Completely. The sight of her perfect tits and pretty little pussy made my mouth water. Too much time had passed since I last saw all of her. \n\nI was already bending down, ready to get on my knees and in between her thighs to worship her. \n\n\"Can I?\" I let out a loud, disappointed groan when she shook her head, no. I was going to ask her if she was just naked to punish me when she told me to go get my strap-on. \"Which one?\" I called out from my walk-in closet with a huge grin. I returned and placed a medium-sized, faux leather box on the floor. It contained some options for her to choose from: a pink one with black straps and a rabbit, a pinkish purple strapless one, a black vibrating one and the familiar light blue one. Like I'd told her in the hotel, I had a whole new arsenal of sex toys I couldn't wait to use on her. \n\nShe raised an eyebrow from where she was on my bed. \"Oh my god, Ellie...\"\n\n\"What?\" I laughed. \"Hey, just because I was patiently waiting doesn't mean I wasn't planning.\" I licked my lips. My eyes greedily took in her body. I was so glad she was naked. \"And believe me, baby, I have so many plans for you.\" \n\nShe began touching herself, her fingers moving through her visibly wet folds. \"Blue for tonight.\" She pointed at the familiar dildo we'd used a few times in the past. \"Hurry.\" \n\nI grabbed and quickly put on her chosen toy. I glanced at her pussy, it was already glistening. More than wet enough. There was no need for the lube in the nightstand. I got on the bed and placed a pillow exactly where I wanted it underneath her. I took my spot in between her spread out thighs. I didn't want to do anything she didn't want, so I played it safe by using the tip to trace her wet slit up and down. I would've preferred using my fingers and mouth to get her nice and ready, but I wasn't about to start complaining out loud. \n\nI was just about to push in when she yelled. \"Oh fuck\u2014\" Her hips began to jerk. She unexpectedly shut her thighs, squeezing her legs together. Her whole body shook as she climaxed. I stared, captivated by what I was seeing. \n\n\"Shit. Sorry,\" she gasped out with a light laugh. She was using her forearm to cover her eyes as she tried to get her breathing under control. I joined her on the bed to take her in my arms. \"I just need a second,\" she whispered and I nodded before kissing her deeply. \"Fuck, I can't believe that just happened.\" She laughed and I placed kisses all over her blushing cheeks. \n\n\"Babe, you've been denying yourself so much, I'm not surprised that happened. I'm glad it did though, you really needed to come.\" I moved down to kiss her throat all over. \"And it was so hot, you're so hot.\" I bit her neck lightly before soothing the spot with my tongue. \"I bet that felt really good...\" I caressed her body, my palm moving from right above her pelvis to right under her boobs, back and forth. Seriously, how was I still behaving myself? \"But please, Hann, let me show you how much better I can make you feel.\" \n\n\"I\u2014\" She threaded her fingers through my hair, pulled my face to hers and kissed me. When we broke apart, she cupped my cheek and traced my cheekbone with her thumb. \"Okay, you can show me...\" She grinned out. Her smile was perfect. The consent caused a hot wave of excitement to rush through my body. \"But can I ask you a question first?\"\n\n\"Anything.\" \n\n\"Why?\"\n\n\"Huh?\" I sat up a little and tilted my head to the side, confused. \"Why?\"\n\n\"Why do you wanna fuck me?\"\n\nThe question caught me off guard. I wasn't sure how to answer it. It was like being asked why the sky was blue or why the sun was hot. I briefly considered telling her I just wanted to make her feel good because I loved her, but I stopped myself. The first time she'd ever hear those words from me wouldn't be for the purpose of getting her to agree to sex.\n\n\"First off, I don't just want to fuck you. Though there will be plenty of fucking, I promise.\" To emphasize my point, I poked her thigh with the strap-on I was still wearing. \"But I wanna make love to you tonight and as often as you'd let me afterwards because you make me so, so happy,\" I explained. \"And the way I feel because of you is so beyond what I deserve and yet, you're still here, on my bed, with me.\" \n\n\"Ellie, you deserve the world.\"\n\n\"No, you do... And you're here even if I don't deserve you.\" As I gazed at her from above, her perfect, petite body naked on my sheets, I knew for a fact that I'd never be able to do better than her. Physically, she was a bombshell but somehow, her personality was even greater. She was the most kindhearted person I knew. Any dream girl I could've conjured up would've still paled in comparison. \"Also, you've been taking such good care of me these past few weeks, baby, always letting me come all over that pretty face of yours... I think it's time you let me try to make you as happy as you make me.\"\n\n\"But you already do. You need to know that, okay? You make me super happy.\" She bit her lower lip. Her sweet reassurance caused more liquid pleasure to flow through my bloodstream. \"Now, make me come.\"\n\n\"Yes, ma'am.\" I kissed her. \"You sure though, right?\" I asked again, one last time. She rolled her eyes before grabbing one of my hands and placing it on her boobs. I stopped wasting time. I slunk down her body and wrapped my lips around one of her tight nipples as I tweaked the other one with my fingers. \"You have no idea how much I missed this,\" I told her as I quickly kissed my way down her body. \n\nThere was no way I could've teased her. I'd been dreaming of being with her again for months, teasing her would've been tantamount to torturing myself. I was so excited to taste her again, too excited. My heart felt like it was going to just suddenly stop. \n\n\"Babe, can we...\" I looked up at the same time as Hannah touched the toy on my hips with her leg. \"Can we do that first?\" I groaned. Only my girlfriend was capable of turning strap-on sex into a way to tease me. \"Please? We didn't get to a while ago.\"\n\n\"But my mouth is literally inches away from your pussy right now,\" I argued. \"How about just a quick\u2014\" She cut me off with another super cute, elongated 'please,' which probably had like five E-s if you asked her to spell it out. \"You're killing me right now,\" I grumbled. \"Fine, but after, I'm giving you head for hours, okay?\" I slowly licked her wet slit from bottom to top and she moaned. She tasted amazing. I wanted to devour her. \"For hours.\"\n\nShe agreed and for the second time, I situated myself in between her thighs. I pushed the tip of the toy against her pussy's entrance, loving the breathy squeaks that she made as I stretched her out. She was staring at the silicone cock as it slowly disappeared inside her, but I was looking right at her face. She was squinting, fighting the need to close her eyes, so she could keep watching. The look of awe she had on was so adorably sexy. \n\nShe was so tight, but I slipped inside her without too much trouble since she was soaking wet. She snaked her arms around the back of my neck and wrapped her legs around my body, her calves lightly resting on my ass. We locked eyes and I realized what she really wanted. \n\nI kissed her as I began moving my hips a lot more gently than I'd first intended. I kept my strokes slow but deep, making sure that I went as deep as I could every time. She whimpered each time the full length was all the way inside her. Rolling my hips, I smoothly glided in and out of her, keeping the slow pace for a few minutes until she begged me to go faster. \n\nI sped up and her body rose to meet all of my thrusts. A lot earlier than I'd expected, I felt myself already nearing the edge. It should've taken either way more time or way more pressure for me to reach this point. But like with everything else in my life, the whole experience was just different with Hannah. The constant, pleasurable friction against my clit and my girlfriend's thundering screams were like irresistible siren calls to my orgasm. I somehow held it together for a few more minutes though, knowing that I needed to keep my pace steady until she came. \n\nHer fingernails dug into my back before tracing their way down to my butt. She roughly squeezed my ass cheeks and began bucking upwards with more force. I lost it first and tumbled over the edge into a pool of sex endorphins, but thankfully, it didn't take very long until she was coming, too.",
        "I was about to pull out of her when she tugged on my forearms without warning, making me lose my balance and drop my entire weight on her. She held me firmly, locking me in place with both her arms and legs. She let out a contented, breathy sigh as she shifted her hips to accommodate the toy which was once again fully buried inside her. \n\nAfter about a minute, I tried to push against the mattress, worried that I was crushing her. But she shook her head, refusing to let go. With eyes still shut, she blindly sought my lips and I kissed her. \"Can we stay just like this for a bit? I really like it when you're on top of me.\"\n\nPhysically, I may have been on her. But in all other aspects, I was the one under her thumb, the one wrapped around her finger. She was my happy place. \n\n\"Okay, fine. Five minutes,\" I conceded. She opened her eyes and pouted at me, but I just chuckled. \"Don't forget, you promised I could eat you out for hours.\" I grabbed her chin before covering her lips with mine again. We made out until she reluctantly released her hold on me. After months and months of fantasizing, I was finally going to ravish, worship and satisfy my girlfriend again. \n\nI removed and tossed aside our little plaything. \n\nThe sex we just had was fun and hot, but I needed so much more when it came to Hannah. I needed all of her. I gently pried her legs apart, making sure she kept her knees bent. I made a mental note to cover her glorious legs with kisses later on, from her ankles to her upper thighs. Right now though, right now was all about the main act. I positioned myself on the bed, so my face was once again mere inches from her sex. \n\nI caught her eye, gave her a wink then plunged right in. \"Oh fuck, babe\u2014\"\n\nMy eyes closed in euphoria as soon as I tasted Hannah again. I greedily began lapping up the remnants of her two earlier climaxes, making sure none of it went to waste. God, I couldn't even fully express how much I'd missed taking care of her like this. She probably wasn't even aware of it, but she was by far the person I'd slept with the most. Like ever. My longest 'fuck buddy situation' was probably around the two-week mark, so apart from my own, my girlfriend's pussy was the most familiar one to me. And yet, as my tongue traced over her wet folds, the experience felt new. So much so that it was as if I was going down on her for the first time.\n\nI looked up, our eyes locked again and then it clicked. This was so much more than sex, so much deeper than a hookup. Even during our wildest and kinkiest nights together, my heart had never felt like this. \n\nLove? Was that what this was? Why did it feel so good?\n\nShe wasn't even touching me, but I felt like there was a small fireball in my stomach. One that radiated delightful heat to the rest of my body. I felt high. \n\nShe was the closest thing to heaven on this earth. \n\nThe first time I made her come with my mouth, I took things exceedingly slow. I leisurely explored her pussy with my lips and tongue as if it was uncharted territory. She desperately begged me to stop teasing her when in reality, I was just savoring her. Every warm drop I licked up, every breathless moan she choked out. I just wanted to soak everything in. The second time, she didn't have to ask me for anything at all. My tongue dashed up and down her slit, circling her clit then pushing into her entrance without mercy. Over and over. The third time was a pleasant surprise, I was just cleaning her up when she began bucking her hips to hump my face, and a new wave of wetness suddenly gushed onto my lips and mouth. The fourth time, my fingers joined the fun. I roughly pumped two of them in and out of her, while my lips and tongue massaged her clit. \n\nShe asked for a break to catch her breath. Which I agreed to but didn't exactly help with. If my tongue couldn't be inside her, then it was at least going to be in her mouth. I kissed her deep, immediately searching for her tongue with my own. \n\n\"You're gonna break me,\" she panted out when we finally separated. She looked dazed and her pupils were slightly dilated. \"You know that, right?\"\n\n\"I would never break you, you taste too good,\" I replied with a grin as my mouth descended to her throat. \"Help me with the math, how many more times do you need to come to make up for all the orgasms you missed out on?\" I licked the side of her left boob before wrapping my lips around her tight nipple and lightly sucking on it. \n\n\"Is that your goal tonight?\" She raised an eyebrow at me. She had a wide smile across her face. \"For real, babe, I will die.\" She let out a helpless groan before laughing. \n\n\"Okay, fine.\" I nodded before licking my way down her slight abs. \"We have all the time in the world for that anyway.\" I pressed a lingering kiss on her bare mound then ducked my head lower. \"But don't forget, you said I could do this to you for hours tonight.\" I began licking her pussy again. \n\n\"Oh, Ellie\u2014\"\n\n<center>. . .</center>\n\nI was staring at Hannah as she slept. The sight of her peacefully in my bed, her body safely tucked under my sheets was one I wished to wake up to every morning. The bit of sunlight drifting through my shaded windows lit her face with a slight golden glow. I kissed her forehead ever so lightly before getting up to brush my teeth, take a shower and get ready for the day. \n\nGiven what I did to my girlfriend last night, I wanted to make her breakfast. Well, I mostly wanted to make sure she drank something... She really needed to rehydrate. \n\n\"Good morning, baby,\" she greeted me in the kitchen about half an hour after my shower. She was all smiles. Her arms wrapped around me from behind, locking around my middle. I turned my head to the side and she stood on her tiptoes to kiss me. She tasted like toothpaste. We made out for a few minutes before I gently pushed her, so I could finish cutting up the fresh fruit on the chopping board. \n\n\"Drink.\" I pointed at the pitcher of juice, but she opted for water. She drained one glass then quickly poured herself another one. \"How'd you sleep?\"\n\n\"Oh, I don't know... Like I came a million times last night?\" \n\n\"A million, huh?\" I smiled wide, joining her where she was sitting by the breakfast bar. I placed a bowl of perfectly good oatmeal and a plate of fruit in front of her. The look of shock she gave me was adorable. \"I promise I'll stock up on that sugary crap you call 'cereal' next time I go grocery shopping.\" I kissed her again. \"Now, eat.\"\n\nShe grabbed my shirt and pulled me back toward her. She claimed my lips in an even deeper kiss, full of tongue. When we finally broke apart, she pecked my lips one last time before releasing her grip. \"But Ellie, you taste so much better than oatmeal...\" She scooped up a spoonful of oatmeal then let it drop back onto the bowl with a resounding plop.\n\nHer last statement was just such a Hannah-statement. So cute but also somehow so sexy (at least to me). And just like that, the three words I was so scared to say tumbled out of my lips without any applause, without any fanfare, without any doubt. As if saying them to her came naturally to me. \n\n\"I love you.\"\n\nShe squinted at me but said nothing. I waited a long while, but she remained silent. Her deep brown eyes were just studying me.\n\n\"Say something. I mean, you don't have to say it back,\" I continued unsurely. \"But I don't know, just say something.\" \n\n\"I don't think you're gonna like what I have to say.\"\n\n\"Say it anyway.\"\n\n\"You sure you're not just confused?\" It was a well-deserved jab, but it stung nonetheless. The pain was short-lived though. \"I love you, too.\"\n\n\"Really?\"\n\n\"I never stopped.\" She stretched out her arms and I moved my stool, so she could hug me while we were both sitting. She was combing her fingers through my still damp hair. It felt nice. \"I knew I was in trouble when we first kissed and I likened it to a firestorm...\" \n\n\"What?\" I looked up at her from where I was resting against her collarbone. She angled her head to kiss me. \n\n\"Mm, I do this thing in my head where I describe how you make me feel using fire.\" She explained further and I melted. \"So, when you said sex with me was like fire, I thought that made us like soulmates or something.\"\n\nSoulmates. I smiled. She was right. She was my soulmate. She was everything to me. \"I love you, Hannah.\"\n\n\"I love you.\" There was no hesitation this time, no pause. \"When I first told you that, my feelings for you were so, so intense, I didn't think I could love you more than I already did. But here and now?\" She kissed me again. \"I know I love you so much more than I did back then. Which is crazy... Like the firestorm, our firestorm, just keeps burning brighter and brighter.\" \n\nI knew exactly what she meant. \n\n\"I need to ask you something.\" I moved back a little. I wanted to see her face. \"Can you tell me why you didn't want me to touch you? Like before last night, why wouldn't you let me? Don't get me wrong, I would've waited centuries if I had to,\" I exaggerated with a reassuring smile. \"But I just want to understand.\"\n\nShe was hesitant while doing so, but she finally told me the reason. During our arrangement, when she knew that she felt so much more for me than I did for her, it'd hurt her to think that every time I touched her, it was meaningless. Like she was just another one of the random women I'd previously messed around with. \n\nThat long-standing doubt was also the reason behind her asking me to explain why I wanted to touch her the night before. She wanted to make sure it was going to mean more to me than it used to. Although she looked so fragile as she spoke, she leaned over to kiss me again once she was done. \n\n\"I'm so sorry,\" I whispered out, deeply guilty. \n\n\"It's okay. We're okay now.\" She hugged me. It was crazy that she was the one trying to comfort me. \"Which I'm super happy about... It would've sucked if the greatest love story of my life was a story about random and meaningless hookups.\" \n\n\"I love you so much.\" I wrapped my arms around her. I was hugging her so tight, too tight. I really didn't deserve her. \"I can't change what happened in the past but now... Whenever I make love to you, there should be no doubt in your mind about how much doing so means to me, okay?\" \n\nShe nodded her head, yes, and I smiled brightly. \n\nEnd."
    ],
    "authorname": "SpaceFirefly",
    "tags": [
        "oral",
        "toys",
        "love",
        "drama",
        "lesbian romance",
        "lesbian drama",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/firestorm-pt-02"
}