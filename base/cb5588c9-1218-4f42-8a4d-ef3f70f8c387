{
    "title": "Don't Judge Me Ch. 02",
    "pages": [
        "Disclaimer: Like all lit stories this one would fit in multiple categories. This story has light playing between friends, exhibitionism, and lots of light bondage. If those aren't your thing, stop now and find another story.\n\n*****\n\nThe next few days passed just like before, he took me to nice restaurants and I had a nice time. The sex was raw, passionate and intense. Despite our differences, we each filled a role in each other's lives. At the end like last time he left early after leaving a fat envelope with five thousand dollars by me on the bed. Less upset this time I took him up on his offers, I worked out, had a nice meal and massage then got dressed and left. \n\n*****\n\n\"Can you help me out?\" I asked.\n\nOfficer Tommy Scott looked up at me from his computer with bright shining eyes. A fellow officer for the last three years he was the resident computer genius. We'd gone drinking as friends a few times and I knew he'd developed a small crush on me. I always gave him a kiss under the mistletoe at the company Christmas party but I'd also gently but firmly let him know that we'd only be friends so he kept his advances to light flirting. I liked him and he was genuinely funny and warm but he lacked the force of personality I craved in a man. \n\n\"Sure, what you need chica?\"\n\n\"Trying to find some info on a person but I really don't know much about him. Also, I'd like it kept unofficial, I don't want it traced that I looked him up.\"\n\nHe raised an eyebrow at me.\n\nI gave him my best neutral stare.\n\n\"I could get into a little trouble for this,\" he said nervously.\n\nThinking quick and deciding that the best way to deal with this and ensure his loyalty was to throw him a bone, \"And I could get in trouble by letting you come into the girl's locker room to watch me change out of my uniform but I guess it's a chance we'll both have to take.\"\n\nHis eyes practically bulged out of his head as my words sunk in, he looked around the nearly deserted room to the multiple officer desks scattered to make sure nobody was near us. Fortunately, his desk was in front of a wall so nobody could sit behind him.\n\n\"But I'm on a short time span because I'm taking off early so the locker room will be empty, but in another hour or two, too many people will be here.\"\n\nHe nodded and cracked his knuckles, \"Give me what info you have.\"\n\nI quickly gave a name and distinguishing characteristics as his hands flew across the keyboard. \n\n\"That's all you got? A first name.\"\n\n\"I don't even know if it's a first or last.\"\n\nHe gave a hmmmm noise as he kept working the computer, after a few minutes he looked up.\n\n\"Based on everything you've told me is this him?\"\n\nI looked at the screen, a military photo and a civilian mugshot were side-by-side. \n\n\"That's it, that's him.\"\n\n\"Well it looks like his name is Kevin Chase, former military special forces now turned mob hitman. This says he seems to be trading up.\"\n\n\"How so?\"\n\n\"They're not sure, he seems to be acting as a liaison for the Bonano crime family. Nobody knows for what,\" he kept reading and gave a soft whistle. \"This guy is a badass.\"\n\nHis face took on a dark expression and he looked up at me, \"What's this for? Have you met him or something?\"\n\n\"No, nothing like that, just a cold case I'm working on,\" I quickly lied.\n\nHe nodded, seeming to take the explanation at face value, as he began to read, \"Well, if this guy's involved be careful. File here says he's an expert marksman, a hand-to-hand combat instructor, and was awarded a bunch of medals while serving. When he got out, he somehow hooked up with various criminal drug organizations and became a freelance hitter. He's the prime suspect in more than a dozen murders and a person of interest in at least a dozen disappearances... wow, that's a little... uhm...\"\n\n\"What?\"\n\n\"Where the person has simply never been seen again.\"\n\n\"Scary,\" we both said at the same time. \n\n\"Riiiiiight, he's smart too, got his Bachelor's at Syracuse in Business and a Law degree. Huh, go figure, he can be his own lawyer.\"\n\n\"Probably how he's able to stay out of jail.\"\n\n\"Probably.\"\n\n\"Notes on him say he's cold and methodical, extremely dangerous, and this guy is of interest in a cold case you're working?\"\n\nI nodded.\n\n\"Sounds like if you run into him you need to bring SWAT, do not mess with him.\"\n\n\"For sure.\"\n\nSwallowing he looked around, \"So did you need anything else or does that cover us?\"\n\nI smiled and told him, \"No, nothing else, but I did want to show you a new gun I bought.\"\n\nHe couldn't hide his disappointed look, \"Oh, uh sure, that sounds cool.\"\n\n\"It's in my locker.\"\n\n\"Oh... uhm...\"\n\n\"In my locker,\" I emphasized.\n\n\"Ohhhhhhh.\"\n\nI giggled as he finally grasped my meaning, he stood and we walked back toward the locker rooms.\n\n\"Do you really have a new gun?\" he whispered.\n\n\"I actually do. I brought it today because I wanted to test it on the range, that's why I'm leaving early.\"\n\n\"What kind?\"\n\n\"Heckler & Koch HK45.\"\n\n\"Ouch, that must've cost a little bit.\"\n\n\"It did, but I recently got a few extra bucks so I decided to splurge. I've always wanted one.\"\n\nWhen we got to the women's locker room I knocked loudly and opened the door, \"Anybody here? Male on deck.\"\n\nThe room was silent so I motioned Tommy forward and went to my locker. Opening it I pulled out the gun case and handed it to him.\n\n\"Just in case somebody does walk in,\" I said.\n\nHe opened it and gave a small whistle of approval. While he admired it, I focused on myself as I unbuttoned my shirt and took off my work belt. When I stowed my gear, I could feel his eyes on me. I methodically took of my shirt, vest, shoes, and slacks. I turned to him and put a hand on my hip standing in just a black performance sport bra and thong panties. I had a dozen pairs of each of them since that's all I usually chose to wear when I worked. Call me crazy, but if I ever needed medical attention and they had to cut my clothes off I wanted to be in sexy yet practical underwear. \n\nHis mouth dropped open as he looked me up and down, I let him gaze at me a minute then turned around to show him my backside. I watched his expression over my shoulder at the sight of my thonged ass as his eyes almost popped out of his head. He barely breathed with his eyes glued to my ass. I gave it a little wiggle then got dressed, putting on jeans, a dark blue form fitting blouse and sneakers. \n\n\"Thank you,\" he said as he handed me back my gun case.\n\n\"We're good?\"\n\nHe nodded, \"We're good, but do be careful if you happen to cross that guy. I'd hate to have my work crush disappear.\"\n\n*****\n\nIt'd been three weeks since our last visit and even though he'd waited more than a month to call me last time I was getting anxious. Was I ever going to see him again? Did I want too? I hated the answer to that question, because if I was honest with myself it was a definite yes. \n\nI worked, studied, worked out, and found comfort in my routine. One night after my workout and following shower, I walked into my bedroom wearing white bikini panties with little red hearts all over them dancing to Aerosmith's \"Dream On.\" The music was blaring, I was shaking my butt and my head was down as I was drying my hair. \n\n\"Hello beautiful.\"\n\n\"Jesus fucking Christ,\" I yelped jumping straight up and looking around wildly. \n\nChase was sitting on my bed dressed in white cotton pants and black t-shirt. \n\nMy heart soared when I first saw him, immediately followed by a surge of annoyance at his breaking into my house. What the hell was he doing here? How did he even know where I lived? I'd dropped my towel so I reflexively started to cover my tits until I realized that was dumb so I brought my hands back down but that felt awkward. I took one hand in the other and realized I was acting like a little kid. Frustrated, I picked up my towel and wrapped it around me. He kept that same infuriating smirk on his face the whole time and I felt my anger rising. \n\n\"What the hell are you doing here? How do you even know where I live?\" I snapped. \n\n\"I knew where you lived an hour after we met, remember, I saw your driver's license.\"\n\nI'd completely forgotten that. The first time we were together I'd been worried about him finding out my address and he'd had it the whole time. I felt dumb for not remembering and that made me feel awkward again and my awkwardness only made me angrier.\n\n\"What the hell do you want?\"\n\n\"For starters I'd like you to take that towel back off.\"\n\nI scowled at him, \"Not happening.\"\n\nHe kept looking at me.\n\n\"Besides, it's not like you haven't seen them before.\"\n\n\"True, but that just makes me want to see them all the more. You're extraordinary and I love looking at you.\"\n\nI blushed at his compliment but didn't move. He kept looking at me without saying a word. After a minute of silence, I began to fidget.\n\n\"What else do you want?\"\n\nHe didn't answer but continued to stare as Aerosmith played in the background. I'd kept a window cracked and his silence made the street noise stand out in comparison. \n\nI looked away but undid my towel and let it drop. I couldn't face him as my body flushed with embarrassment. \n\n\"Stunning.\"\n\nI looked into his eyes and saw he was serious. I felt my anger slipping away. His eyes scanned my body up and down, strangely the discomfort I'd felt a minute ago disappeared under his gaze. It was obvious he enjoyed looking at me and if I was forced to admit, I enjoyed being looked at. \n\n\"As it happens, I'm here to offer you one last opportunity to spend time together.\"\n\nMy stomach flipped. My mind somehow focused equally on the more time together aspect and last opportunity. I felt elated and sad at the same time. I'm not sure what I wanted to happen but somehow not seeing him again made me feel ill but having one more chance to be with him made me ecstatic. \n\n\"The same deal as last time? I'm starting to lose a lot of vacation days on this you know.\"\n\n\"I'd hardly call six a lot.\"\n\n\"Nine if you count this next time, and that's a lot to me.\"\n\n\"Well then it's good that this time I was going to give you ten thousand,\" he said.\n\nMy eyes went wide as he stood, pulled out a thick envelope and tossed it on my dresser.\n\nBiting my lip, I eyed the money, \"What makes you think I'll do it?\"\n\nHe looked at me for almost a minute before he shrugged and moved to stand in front of me.\n\n\"Do it or not, either way, keep the money.\"\n\nI straightened up as I looked into his eyes while he inched closer. I could smell the clean scent of him as my heart pounded in my chest. He reached forward and hooked his fingers into my panties. I stayed still as he inched my underwear down over my hips and slowly down my legs moving to one knee as he did so. He let gravity take over at my knees and they fell to the light grey carpet at my feet. \n\nHe stood and moved around me forcing me to turn in place to keep him in front of me. Reaching out two fingers into my shoulder he gently moved me. I took awkward steps back as he took me to my bed, once at the edge he pushed just a little harder and I let myself fall onto the bed. I shifted to the center with my body facing him while keeping my eyes focused on his.\n\n\"Spread your legs.\"\n\nOur eyes locked and at first, I didn't move. He narrowed his eyes and cocked his head at my defiance.\n\n\"Now.\"\n\nGlaring at him, I spread my legs wide. He took off his shirt and knelt by the bed. I watched as he leaned forward and began to lick my pussy. The feel of his tongue was electrifying. I loved getting oral from him. He was very good at it, his hands kept my legs spread as his tongue explored me in alternating soft and hard erotic ways. Despite myself I was so turned on I quickly came and was gripping the sheets as my body shook. \n\nAfterward he stood and took of his clothes. Silently he moved on top of me as I wrapped my legs around him. Neither of us spoke as we came together, he wrapped his arms around me in a tight embrace as I clung to his back. I closed my eyes and relaxed in the rhythm of our bodies. My senses focused on the back and forth movement, the rock music mixing with outside sounds, the musky smell of his body combined with the raw sexual scent, and the warmth of his skin and feel of his corded muscle. I felt my second orgasm building as I bit into his shoulder. When it hit it was mild compared to others he'd given me but still satisfying.\n\nAfterward, I lay relaxed on the bed while he stood up and got dressed.\n\n\"What time do you want me there?\"\n\n\"Noon, don't be late. Wear a long coat and only thigh high stockings and heels underneath.\"\n\n\"You mean into the hotel like that?\"\n\nHe looked at me intensely, \"Yes.\"\n\nI nodded once. I'd never been that brave before but since this was most likely our last time together, I didn't mind being more daring. \n\nHe glanced at my nightstand and I followed his gaze. I flushed red as I saw he was smiling and looking at the pair of handcuffs, ballgag, and vibrator gifts he'd given me.\n\n\"Put those to good use?\"\n\nSheepishly I smiled, \"Some, kind of hard to use handcuffs and a ballgag on your own.\"\n\n\"But the vibrator?\"\n\nI looked down, \"Almost every night.\"\n\n\"Hey.\"\n\nI looked up into his eyes, \"I like that.\"\n\nContinuing, \"But let's see what we can do about the rest.\"\n\nHe grabbed both pairs of handcuffs and bent over and cuffed my arms to either side of the bed.\n\nI grinned, \"You ready to do this again?\"\n\nHe just smirked at me and grabbed my panties and put them on my ankles. Confused I watched as he slid them up my legs and adjusted them to fitting position. \n\nI laughed, \"Kind of going the wrong way with those aren't you?\"\n\nHe stayed quiet as he walked to my dresser and opened the drawers one by one, He found a pair of black stockings after the third one and pulled them out before coming back to the bed. He quickly tied my ankles to either side leaving me tied spread-eagle to the bed. I grinned and wiggled my body to tease him. I tested my restraints in a playful way wanting him to get worked up as I moaned and struggled helplessly. I was getting turned on as he watched me silently. When I stopped, he reached over and grabbed my ballgag. I eagerly opened my mouth and let him secure it. I let out a few moans and whimpers because I could tell he liked it when I tried to speak but couldn't. I gave him my best pouty face and relaxed when he reached out and began tracing lines across my body with his fingers. \n\n\"Just so you understand, we're done for tonight.\"\n\nMy forehead crinkled in a frown, I was confused as his fingers played with my hardened nipples.\n\n\"I told you we'd see about getting use out of the handcuffs. I know you know I like the bondage thing but in case you missed it I like the exhibition thing almost as much.\"\n\nI did note that, truthfully, I was kind of digging on both myself.\n\n\"I'm about to leave and I'll put the phone in your hand and you'll just have to get a friend to come untie you.\"\n\nWHAT THE FUCK?! Oh hell no. I struggled for real as he kept teasing my nipples. I was still excited but there was a real edge of fear in me. I didn't have a lot of girlfriends and I wasn't sure any could come help me. I looked at each restraint and realized that I really was helpless, there was no way I could get free on my own.\n\nBreathing hard through my nose I glared at him as he stood up to leave. I flipped him off as he grabbed my iPhone and put it in my hand. Without another word he turned and walked away, seconds later I heard my front door close.\n\nFuck, fuck, fuck. I lay there for a few minutes waiting for him to return. My phone buzzed a text and I looked, he'd sent me a pic of him in the car at a stoplight, he really had left me! Son of a bitch! \n\nI started scrolling through my contacts, my bestie lived three hours away. Next girlfriend was a bit of a prude and while I loved her, I really didn't want to explain this to her silent judgement. Next one was out of town, next too far away. I mentally checked every female friend I had and couldn't find a single one that could come help me. I lay there for a few minutes trying to figure what to do. \n\nI had a few gym friends but I wasn't close with any of them. I definitely wasn't calling a fellow officer or my family. My mother was five minutes away but I'd die here before that happened. Suddenly I remembered Tommy Scott, I shook my head and groaned. He lived only 10 minutes away, he would be one I could get to help me. I reviewed my lack of options for another 10 minutes before steeling myself. I needed to do this quick in case he wasn't available and I was forced to try and text somebody else. \n\nI tried to sound playful as I texted. I really wasn't even sure how this conversation would go, \"Want to come untie my naked ass?\" was probably not a good way to start. \n\nMe: Hey you, what you doing?\n\nBarely a minute later.\n\nTommy: Just getting some food, kind of near you. Great little steak sandwich place.\n\nOf course he'd be near, it was like god conspired with Chase. Might as well make this a twofer.\n\nMe: I'm super hungry, they got good food?\n\nTommy: Best steak sandwiches in the city.\n\nMe: Want to bring me one?\n\nTommy: Fries and a coke?\n\nMe: Yes please.\n\nTommy: I'll be at your place in 15 minutes.\n\nMe: Let me know when you get here.\n\nThankfully he'd been to my place before to pick me up when we hung out and once or twice, I'd used him for a ride and stuff. The next fifteen minutes I idly tried to find a less embarrassing friend to come untie me. I was sure I could make up some excuse to Tommy if I had to. I texted a few girlfriends and got one response but she was out of town like I expected. \n\nTommy: I'm here.\n\nI took a deep breath. \n\nMe: K, need you to come in and go to my back bedroom but don't freak out.\n\nTommy:???\n\nMe: Just do it.\n\nI heard the door open and a few seconds later footsteps led to my room. Tommy walked in holding a brown bag in one hand and a coke in the other. He was wearing blue jeans and 'Star Wars' shirt with Darth Vader on the front. His mouth dropped as he stared at me in total shock. I didn't move or make any noise while he digested the scene, after a minute he moved closer to me.\n\n\"Uhmmm, is this... or, uhm... Not sure what to do here?\"\n\nI made a noise through the gag and shook my head.\n\n\"Oh yeah,\" he said, looking around he set the food down then came and undid the ballgag from my mouth. \n\n\"Look, it's a long story,\" I blurted. \"Just untie me and I'll explain afterward.\"\n\nHe nodded and looked at my body again, he shifted lower and began untying my ankles while never taking his eyes of my tits. I couldn't decide if I was mortified or secretly thrilled. I was definitely mad but I was also unmistakably aroused. I didn't want to have sex with Tommy or anything but I was enjoying letting him look. \n\nHe untied my ankles and I was able to close my legs, he stood up and looked around and saw the handcuff key on the nightstand. He grabbed it and reached over me to undo the cuff farthest from him. I was a little confused by his decision until I felt his hand softly cup my breast as he leaned over me, it was subtly nonchalant as he used my body for balance in order to reach my away hand. \n\nI almost said something but despite myself I was impressed with his audacity. I let him continue just to see how far he'd go, I knew I could stop him if needed. He undid the cuff and shifted up, his thumb casually grazed my hardened nipple and I felt a squeeze that was so slight I wondered if I'd imagined it as he stood up. I tried to look him in the eyes but he avoided my gaze as he began to undo my other hand, there was no way touch me this time without being crudely obvious. He worked quick and I was free, I sat up and rubbed my wrists waiting for him to look at me but he kept his gaze down as he put the key back.\n",
        "\"Thank you,\" I said, trying to get him to look at me. \n\n\"Uh huh,\" he mumbled, as he kept looking away and grabbed our food. \"I'll be out in the living room.\"\n\nHe practically ran out of the room as I stood up. I was positive he was waiting for me to say something about the boob feel. I decided to give him a pass, he earned it. I picked up my towel from earlier and tossed it on the bed. Grabbing a black Metallica t-shirt from my closet, I put it on and walked out. It barely met my panties for coverage but I figured what the hell, he'd earned it. \n\nI went to my living room and found him sitting on my couch putting the food on some paper plates. Quietly I grabbed my portion, sat on the carpet Indian style across from him and took a bite. We ate for a minute as I thought of how I was going to explain this.\n\n\"This really is a great steak sandwich.\"\n\nHe nodded.\n\n\"Ok sweetie, I need to let you know something. This wasn't a thing for you okay, you do understand that?\"\n\nHe nodded.\n\n\"I've been seeing this guy and we've been messing around. He kind of likes the bondage thing so he left me like that and was going to get dinner. He left my phone just in case something happened, but his job has him on call and he got summoned in to an emergency.\"\n\nI hated lying but it was better than the truth. A crazy criminal uses me as a prostitute whenever he feels like it.\n\nTommy nodded again and took a sip of coke.\n\n\"I figured it wasn't for me but I hoped.\"\n\nI gave him a gentle smile, \"I'm sorry sweetie, but if it's a consolation you were the only male friend I considered.\"\n\nHe thought about that for a few seconds, \"Not sure if that's a good thing or a bad thing.\"\n\nWe both laughed.\n\n\"I guess that means I'm a permanent friend zone resident huh?\"\n\nI nodded, \"I'm sorry, you know I love you to death but I just don't feel that way toward you.\"\n\nHe nibbled a French fry, \"It's ok, I hoped for more but I guess I can live with being your bff.\"\n\nI giggled.\n\nHe gave me a cheesy leer, \"Feel free to call me to come untie you anytime you want.\"\n\nI narrowed my eyes at him, \"On one condition, I'll forget everything that happened tonight as long as you make sure to do the same. I better not hear about this from anybody.\"\n\nHe looked sheepish because I'd emphasized 'everything' and he knew I was referring to his quick feel, but he gave me a small smile and nodded. \n\n\"Then it's a deal.\"\n\nWe spent the next hour talking and eating, I kept catching his quick glances at my panties so I teased him as I shifted around. I stood and went to the kitchen with our trash making sure he got a view of my butt as he talked to me about work stuff, a backward glance and sure enough I caught him staring. \n\nAfter a while he looked at me seriously, \"Did you like what he did to you?\"\n\n\"What do you mean?\"\n\n\"I'd think most girls would be furious to have a guy friend find them like that.\"\n\n\"Well I wasn't happy when it happened but it doesn't bother me too much. It might if it'd gone bad but it turned out ok.\"\n\n\"Meaning that I'm no threat?\"\n\nI saw the hurt in his eyes, \"Meaning that I trust you, it's not that you're not a threat, it's that you're not dangerous.\"\n\n\"That makes sense.\"\n\n\"If I didn't trust someone and had to use whoever to untie me, I'd be livid. You're right, I'm not bothered, in fact the whole thing turns me on. I like showing off in body but only in particular circumstances. I wouldn't want everybody seeing me.\"\n\n\"I can understand that.\"\n\nI laughed, \"Besides, you've already proved you're a little dangerous.\"\n\nHe knew what I was referring to and ducked his head with an embarrassed smile, \"Sorry.\"\n\n\"Don't be, if you'd crossed the line, I'd have let you know. That was the perfect level of naughty without me losing trust in you. A girl likes a little bit of danger, even from the safe guys.\"\n\n\"Really?\"\n\nI nodded.\n\n\"So, if this happened again...,\" he trailed off questioningly. \n\nI raised my voice just a touch, enough to let him know that there were lines he better not cross, \"A little naughty is cool, a lot gets you banned from my presence.\"\n\nHe swallowed, I was sure he got the point. \n\nWe sat in silence for a while just listening to music. \n\nAfter he left, I went to bed, I woke up early and called into work and arranged the next few days, then I packed my bags and got ready. I dressed like he told me and called a cab. My heart was pounding as the cabby took my bag and opened the door for me. I was sure he knew what I was wearing but he never said a word. Even though the top of my coat was buttoned I kept one hand tight against the front making sure it didn't open. \n\nI got to the hotel and walked inside. It was exhilarating knowing I wearing only the coat and black thigh high stockings with sandals. My nipples brushed against the soft fabric on the inside of my coat, hard and taut each movement sent jolts of arousal through my body, my bare pussy was wet from anticipation. I walked to the front when Daniel the concierge saw me and walked over to me. \n\n\"Hello Miss Cruz,\" he said taking my hand. \"Is this your only bag?\"\n\nI nodded. \n\n\"I'll see it brought up.\"\n\nHe handed me a key card.\n\n\"Just swipe this and it will call his elevator.\"\n\nI remembered Nicky doing this. I just hadn't realized it was a private elevator. I nodded and took the key, Daniel's eyes flicked down and a bare hint of a smile crossed his face. I blushed as I suspected he knew what I was wearing. \n\nI walked to the elevator and suddenly Tommy was standing next to me.\n\nI looked at him in shock as the elevator opened and I stepped inside, he followed and the doors closed.\n\n\"What are you doing here?\" I whispered fiercely. \n\n\"I was concerned about you when you didn't show up at work today so I came by at lunch. When I got to your place, I saw you leaving. The wind caught the side of your coat and I saw what you were wearing underneath. I figured you were doing something crazy again and wanted to be close by in case you needed help so I followed you.\"\n\n\"You need to leave now.\"\n\nEyes bright with a goofy grin he asked, \"You're meeting your friend, right? Is he rich? This place is crazy expensive.\"\n\nMy phone beeped in my pocket and I grabbed it to see a text from Chase.\n\n\"Yes, I am,\" I said. \"And yes he is, I think anyway.\"\n\nTommy nodded as I read the text.\n\nChase: Who's the friend?\n\nI looked around and saw the camera in the corner, it figures he'd be able to see anybody that called his elevator.\n\nMe: Nobody.\n\nChase: You do know this has a microphone and I can hear and see everything.\n\nI swore under my breath.\n\nMe: No, I didn't but he's just a friend. In fact, he's the friend I had to call when some asshole left me handcuffed to my bed in my panties.\n\nChase: Lol\n\nChase: That's interesting.\n\nMe: Give me a second to get him on his way and then bring me up.\n\nChase: Are you dressed like I asked?\n\nI struggled with myself for a second. I could practically hear the smugness in his voice and knowing I'd done as he said was showing him that he controlled me more than I liked, but it was useless to deny it since he'd find out in a minute anyway. I gritted my teeth as I texted. \n\nMe: Yes\n\nI glared at the camera and flipped it off. By now the door had closed but the elevator hadn't moved. I looked back at Tommy.\n\n\"Hey, I'm safe this time. I'm meeting him in his room, so you can go and not worry about me.\"\n\nMy phone buzzed.\n\nChase: Give him your coat.\n\nI stared dumbfounded at the screen, I knew he meant what he said. I looked at the ceiling while shaking my head. A sigh escaped my lips and I turned to Tommy. He was watching me with a big grin as if he understood what was about to happen.\n\n\"You're about to be bad again, aren't you?\"\n\nRolling my eyes, I unbuttoned my coat, his eyes went wide but he stayed silent as he watched me. I slipped the coat off my shoulders and handed it to him standing in the elevator wearing only stocking and sandals. His eyes immediately went to my shaved pussy, he'd gotten an eyeful last night but this was his first view of me without any obstructing clothing. The elevator started moving and I glared at the wall camera. My phone buzzed.\n\nChase: Tell him he can take your coat and give it to you at work once you reach the top.\n\n\"Apparently you're to ride up with me but will take my coat home and give it to me at work,\" I said.\n\n\"I'm starting to like this guy,\" Tommy said grinning. \n\n\"Of course you would,\" I said drily. \"Well, get it all out of your system.\"\n\nI stood with my hands on my hips with one leg bent and a bored expression. He unashamedly kept looking at my body never even bothering to look at my face. I watched his eyes flick toward the mirror behind me and my ass so I turned around and made sure he had a solid look at that too. After a minute the elevator reached the top and with a ding the door opened, I turned around and stepped out. Tommy didn't follow but just grinned at me.\n\n\"Tell your friend I like his style.\"\n\nLaughing, I shook my head as the elevator closed.\n\nThe next few days Chase continued to show me off, tie me up, and have passionate, wild, sometimes angry sex with me. Unlike last time when I woke up the last day he was already gone. My heart was heavy with the knowledge that I'd be unlikely to ever see him again. \n\n*****\n\nPart of me hoped that Chase was lying when he said that it would be the last time he called me, but it'd been three months since I heard from him and I'd accepted that it was over. \n\nI put his money to good use and paid off my school debt allowing me more time to study. This turned out really good because I got a call one day telling me I'd been bumped up six months to the next test and I only had two weeks before the exam. I took vacation the week prior and studied my ass off. When I took the detective examination I passed with flying colors, so I'd gotten orders to a new precinct to meet the chief of detectives. \n\nAfter driving to my new unit, I parked in the lot across the street. As I got out of my car, I saw a small group of officers standing around a car separated from the rest. Whoever owned it had parked towards the back of the lot where there were less cars. Curious I walked towards the group to see what had captured their interest and as I got closer, I lost my breath. Oh my God, whoever owned this car didn't deserve her, this was my dream car, it was a black and silver trim 1967 Ford Mustang Custom Fastback Shelby GT500.\n\nI walked around the car, she was perfect in every detail. Gleaming paint, bright chrome, and through the windows I could see a perfect gray leather interior. The other officers around all nodded their heads as we each appreciated the beauty of this classic car.\n\nAll four of the officers were in uniform but they must have sensed I was a cop too, one looked up at me.\n\n\"You a detective?\"\n\nFlashing my badge with a grin, \"Yes, my first day.\"\n\n\"Congratulations,\" he said\n\n\"Yeah, congratulations,\" the others chimed.\n\n\"Thank you.\"\n\n\"Do any of you own this car?\" I asked\n\n\"I wish,\" one of them said. \n\n\"No,\" the first officer said. \"We were just admiring it like yourself.\"\n\nI nodded, I was barely able to take my eyes away from such a beautiful car. As I walked behind it, I noticed the license plate, STAR. Oh my God, this car was made for me.\n\nWe spent a few more minutes admiring the car and chatting before we all walked away. I made my way inside and found my new captain's door. I knocked and heard a rough voice yell \"Come in.\" \n\nCaptain Holmes was the stereotypical movie definition of grizzled detective, he wore a clean grey suit with crisp white shirt and ugly brown tie. He was black with close cut greying hair, medium height, and build. He had an unlit cigar in his mouth that he chewed on nonstop. Somehow, keeping it in his mouth even while talking. He had a clean-cut face like a Pitbull, full of lines and experience. I'd heard he was tough but very fair and had a reputation for going above and beyond for any of his subordinates. \n\nHe motioned me to a chair in front of his desk. Once seated, he picked up a manila folder with paperwork inside of it, he read a few pages while I sat quietly. Finally, he looked up and congratulated me on my promotion and high scores.\n\n\"You have very impressive scores and even more impressive letters of recommendation. These are some very important people, Special Agent from the FBI, the mayor, I'm impressed you know these people,\" he said.\n\nKeeping my face neutral, I nodded. I wasn't quite sure what letters of recommendation he was talking about. I suppose my former captain had gotten some friends to write me good letters.\n\n\"It is a little unusual to give a junior officer such a critical position with so little detective experience but based on everything we've seen so far I think you'll do fine,\" he said.\n\n\"What position is that?\" I asked.\n\n\"You'll be a liaison officer for the Federal Bureau of Investigations. Given that so many of our cases involve federal jurisdiction the FBI is giving us a senior agent to help work our cases that way there's better cooperation between our two offices, so the detective working with him will be working some very important cases. Like I said I should probably assign a much more senior detective but given your impressive resume I think you'll do fine and it will be an invaluable learning experience.\"\n\n\"Do you know who I'll be working with?\" I asked.\n\n\"No, just that he's a heavy-hitter, he's taken down some pretty heavy bosses in the mafia recently.\"\n\nThe way he was talking, I was getting excited about this position. I knew it was unusual for a junior detective to be given this opportunity.\n\n\"In fact, I see him walking in now,\" he said.\n\nHe stood up, so I did too. I heard his office door open behind me and I turned around and came face-to-face with Chase. My jaw dropped and I stood transfixed as he walked into the room wearing a black three-piece suit, dark blue silk shirt, crisp military haircut, and that same insufferable smirk he always wore.\n\n\"Detective Cruz, congratulations, read your profile and saw your scores, very impressive,\" he said. \"I'm Special Agent Mark Steel.\" \n\nThankfully, having turned around my back was to the captain so he couldn't see my astonished expression. Mark walked straight up to me and shook my hand. Dumbfounded I was on autopilot and just went through the motions, he applied a slight squeeze to my hand shaking me from my stupidity. I realized I needed to get on the ball if I was going to deflect suspicion about knowing him from the Chief of Detectives.\n\nI barely heard anything else as we all sat down and Mark talked to the Captain. After a few minutes Mark looked over at me and told the captain. \n\n\"I was thinking about taking her to FBI offices downtown. I figure since we're going to be working together Detective Cruz should see and get familiar with our facility. Plus, there is some paperwork I'll get done for her so that she'll have access to our building permanently.\"\n\nHolmes nodded, \"Do what you need to today, we'll get you guys working together tomorrow. \n\nIn a daze I followed Mark out of the building, walking across the street into the parking lot. As he made his way toward the back, I had a sick second of premonition and sure enough he walked straight to my dream car and unlocked the doors.\n\n\"Hop in,\" he said.\n\n\"You've got to be kidding me,\" I yelled. \"This is your fucking car?\"\n\nHe just looked at me.\n\n\"Of course it is,\" I said, shaking my head. \"And what the hell, your FBI?\"\n\nMark looked around then back at me, \"Get in the car,\" he said, through clenched teeth. \"You really don't want to do this here.\"\n\nI tried to match his stare but even though now I knew he wasn't a criminal I still saw the same iron will that had captivated me and brought me to my knees, I looked away first and nodded then got into his car. I opened the door and was assaulted by the clean car and perfect leather scent, as soon as we got in, he turned to me. \n\n\"First things first,\" he said, pulling out his gun he placed it into his lap, \"Your gun please.\"\n\n\"What?\" I cried outraged.\n\n\"I'm not going to ask you again, your gun please or I'll arrest you on the spot.\"\n\nFurious I looked into his eyes and saw the resolve there. This wasn't a joke or anything, he was serious. I reluctantly handed him my gun. \n\n\"Good,\" he said, producing a pair of handcuffs, \"Hands behind the seat please.\"\n\nI glared at him, he was impassive as he held up the cuffs. \n\n\"This can happen the hard way or the easy way, but it will happen, your choice.\"\n\nFrustrated but resigned, I put my hands behind me in back of the seat, he leaned over and cuffed me. I tested the cuffs, he hadn't left me any freedom, once again I was helpless in front of him. He reached across me and grabbed the seat belt and strapped me in.\n\n\"Wha...\"\n\nHe held up a hand to silence me as he put the car in gear and drove out of the parking lot. We went for a few blocks quietly.\n\n\"You really need to explain some things to me,\" I grumbled. \n\nHe shook his head and rolled his eyes, \"You really don't know when to shut up do you?\"\n\n\"Fuck you,\" I said frustratingly rattling my hands in the cuffs.\n\nShaking his head, he stayed quiet. At the next light he reached into a pocket and brought out my ballgag. I was shocked, my eyes went wide but I was motionless as he slipped it in my mouth and fastened it tight. I'd secretly hoped to see him again but this was a disaster, never in my wildest dreams had I imagined this. I don't know what he was planning but it couldn't be good, was he going to blackmail me for sex, was he going to turn me in, was I getting arrested? The ballgag actually eased my mind a little since he'd have a hard time explaining that if he did arrest me. Still I couldn't believe this was happening, life had been looking up and now it looked like once again I was going to be used. \n\nInwardly I was scared as Mark drove a few more blocks and turned into a parking garage. He found a dark semi-deserted level and parked in the corner before shutting off his car. The silence was deafening as he took a moment to look at me. \n\nAfter a minute he moved toward me, \"Not that I don't trust you but we need to make sure you're clean.\"\n\nCuffed with my hands behind his car seat I was helpless as he frisked me, he cupped my breasts, slid his hands around my waist and then squeezed my thighs and legs. I shifted against him and my blouse opened a little, it caught his eye and as he looked down my shirt he froze.\n\n\"What the...\"\n\nConfused for a moment. I suddenly realized what he saw but was powerless to do anything about it, his eyes narrowed and he looked up at me. Unable to match his stare I embarrassedly turned away. \n\n\"Oh hell no,\" he breathed. \n\nHe unbuttoned my blouse exposing my chest. I struggled but it was worthless, he shifted my jacket off my shoulders and moved my blouse wide. I was breathing heavily through my nose and could only watch as he stared at my tits encased in the expensive bra he'd bought me. He looked at my slacks, I knew what was coming next but couldn't stop it. His finger moved to my waist as he unbuttoned my pants, then pulled my slacks down to my thighs revealing the matching panty. I'd reflexively lifted my butt to allow him to take them down. He paused and my face turned bright red as our eyes locked after my mistake and we both knew what I'd done. He finished taking them down the rest of the way and let them pool around my ankles. His smirk returned and I lowered my eyes but stayed motionless as he admired my body. He traced a finger from my chest to my panty line then moved his finger inside the waistline and tugged it back a little. I'd gone from completely smooth to a small racing stripe and he looked up in my eyes as he noticed. A second later he let my panty snap back in place.",
        "\"I like it, but I got to say, this hurts and disappoints me. I thought you were going to think of me when you wore this,\" he sighed. \"Guess I'm not that special after all.\"\n\n\"Now I'm going to ungag you but before you speak let me tell you the story and then you can ask me what you want,\" he said, undoing the gag and putting it to the side.\n\nBefore he spoke, I quickly said, \"For the record I was thinking of you.\"\n\nHe looked dubious, \"Really?\"\n\nIt's not like I owed him an explanation but I wanted him to know it was special, that I was thinking of him, \"Yes, it was your money that allowed me to pay off my school which allowed me more study time. That was why I did so well on my test and that's why I was thinking of you when I put these on this morning.\"\n\n\"Hmmm,\" he said nodding. \"Go figure.\"\n\n\"Anyway,\" he continued. \"To start, obviously I was undercover, you were a wrench thrown into the situation. If you haven't heard we collared most of the Bonano family including Nicky and his boys.\"\n\n\"Clearly you couldn't tell me because you didn't know what I would do,\" I said.\n\n\"That's correct.\" \n\n\"Why'd you call me back?\"\n\n\"Misdirection, Nicky was watching you to see what you'd do, I knew if I used you again, he'd think he had leverage or whatever and he'd scrutinize me less. Nicky always looks for an advantage, if he thought he could hold you over me he'd do it.\"\n\n\"Great, so I was bait.\"\n\n\"Yes, but it worked and I made sure you were safe, I've had you under some surveillance for a while.\"\n\nThat made my eyes widen, there were definitely some things that would be embarrassing if found out about me.\n\nHe noticed my expression and smiled, \"If you're wondering, do I know about your little skinny dipping at midnight in your apartment complex pool or the fact that you like to dance around your apartment in your underwear, the answer is yes.\"\n\n\"You're a bad girl,\" he said but his smile took the edge off.\n\nI shrugged, \"Don't judge me,\" I said in the exact same way he told me months ago.\n\nHe nodded, \"And if you're also wondering, nobody knows about us.\"\n\nI swallowed, I'd been questioning exactly how much trouble I was in and his statement eased my mind a little.\n\n\"Nicky had a heart attack in custody and the others turned evidence against their employers. Neither one even remembered to bring you up and it wouldn't matter if they did. I was under surveillance and I made sure any part that mentioned your name or who you are was lost.\"\n\nTears formed in my eyes.\n\n\"I wanted to make sure you had a clean start since the incident wasn't really your fault. I'm the only one who knows anything.\"\n\n\"What are you going to do about it?\"\n\n\"Do?\"\n\n\"I'm handcuffed in my panties again, is this going to become a thing for your continued silence?\" I said anger edging into my voice, sexy and everything he was but no woman likes being forced into a situation feelings or not. \n\nHe shook his head and reached behind me to uncuff me, \"No, I was only going to talk to you but when I saw the bra, I got a little mad, I'm sorry.\"\n\n\"And the gag?\"\n\nHe chuckled, \"You really do talk a lot when you're nervous, that was just to shut you up.\"\n\nI glared daggers at him, \"Why did you even have it?\"\n\n\"I was going to give it back to you today, just kind of a teasing gift.\"\n\n\"So there isn't going to be a price?\" I asked disbelieving.\n\n\"If you forget about the strip search right now, I promise I'll never bring up our past as a negative and I'll never ask you for anything with regards to that.\"\n\nRubbing my wrists, I swallowed, \"Really?\"\n\n\"Really really.\"\n\nI nodded my head and pulled my clothes back into place, \"I want to believe you but it seems like every time I turn around, I'm getting used somehow. Brent used me, you used me.\"\n\n\"True, I did, but believe me you should be happy I used you.\"\n\nI frowned, \"Why?\"\n\n\"To be honest, you were a test for me, I found out later in an interview with his gorillas that if I'd refused to take you, neither one of us would have walked out of there.\"\n\nMy face drained of blood and my heart sped as I realized how close I'd come to death, \"I swear I'll kill Brent if I ever see him again,\" I muttered. \n\nMark looked at me funny for a second before shaking his head, \"Look Estrella, I've got bad news for you, Brent's dead. He tried to make some money and ran courier for Nicky, except he tried to skim a little and Nicky found out. After that Nicky made an example of him in ways you don't want to know about.\"\n\nWe sat in silence as I digested what he said. Tears fell from my eyes as I thought about Brent. I was mad as hell at him for what he'd done and the danger he'd put me in but I really didn't wish him dead despite what I'd just said. Mark squeezed then held my hand while I let my emotions run free, he reached into his glovebox and grabbed a napkin for my tears. After a few minutes I gained composure and nodded thank you to him, he let my hand go and patted it. \n\nContinuing, \"Look, I know it's a lot to take in but I really have looked out for you. I know you got into a bad situation and I made sure it didn't come back to haunt you. For the record, I'm the one who got you the letters of recommendation from the mayor and the rest, I also got you bumped to take the test six months early.\"\n\n\"And of course, you don't want anything in return,\" I said sarcastically.\n\n\"No, I don't.\"\n\n\"No sex or anything?\"\n\n\"I know it's hard to believe but I meant what I said, you drop this and I'll forget about everything that's happened before this.\"\n\n\"It's not like I could complain, what am I going to say? If I brought it up, they'd dig into why my brand-new partner felt justified in handcuffing me in my panties on the first day. I can't imagine that'd go good for me.\"\n\n\"Clean slate,\" he said extending his hand.\n\n\"Clean slate,\" I agreed taking it.\n\nAfter a second, he gave me a boyish grin, \"So were you really thinking of me today?\"\n\n\"I thought you weren't going to bring it up?\"\n\n\"I said as a negative, teasing is not a negative, and admiring even less so, but don't worry, I won't do anything that will upset you. As of this moment if I do feel free to file a complaint.\"\n\n\"We'll see,\" I said.\n\nHe nodded and turned his car on and took us back out driving to his headquarters. \n\nHalfway there I said, \"Yes I was thinking about you.\"\n\nHe didn't turn to me or say anything but smiled the rest of the way. \n\n*****\n\nThe next few months flew by, true to his word Mark never brought the incidents up again, he was professional and treated me as an equal in all ways. He never hit on me but every now and again I did catch him admiring me out of the corner of my eye. Occasionally I made sure to bend over for him when nobody was around and he was always facing my direction whenever I stood back up. We worked out together when we could and I wore light color skimpy spandex and made sure he the color of my thong panty showed through, usually by making sure I sweated a lot or because I bent over right in front of him. It was fun teasing him and watching him shift around to cover his arousal. We may not have ever hooked up again but more than one night I'd used my vibrator to climax with him as the star in my fantasy. \n\nThe cases I worked with him were incredible and his intelligence was amazing. At first, I was intimidated by his skill and figured I'd soon be a glorified sidekick but he taught me everything he could and what to look for. He was patient and would let me do interrogations and interactions first almost every time, he never let his ego show or tried to make me feel inferior to him. For a while I thought he was just humoring me or setting me up for failure but soon I realized that he just wasn't as narcissistic as all the other people we ran into. He had a quiet strength, he knew what he was capable of and it didn't bother him when other people tried to shine. He was also utterly without fear, a fact that I learned firsthand the hard way. \n\nWe were conducting an arrest on a known gang leader/ drug smuggler. Mark had found him at an abandoned warehouse and we'd called in backup but Viktor started to move out before help could arrive. Mark had moved forward with me behind him but Viktor was surrounded by armed criminals. Guns had been drawn but we were outnumbered at least three to one. \n\n\"Viktor, my name is Special Agent Steel, I have a warrant for your arrest.\"\n\n\"Yo dog, you must be crazy rolling up on me here like that.\"\n\nMy heart was pounding so hard I thought it would burst. I couldn't hear anything over the white noise from my brain, it took everything I had just to keep my breathing normal. I was sure we were going to die. Mark pointed his weapon straight at Viktor while I kept mine moving back and forth between the rest. Their guns never wavered and the tension could be cut with a knife.\n\nViktor raised his hand pointing at us, \"Now why don't you get on outta here and take yo bitch before somthin bad happens to the both of y'all.\"\n\nMark's voice got quiet, \"Let me explain something to you Viktor. I may die tonight, the bitch may die tonight. Some of your men may die tonight too, but you, you I guarantee will die right now if your men don't lower their weapons.\"\n\nViktor sneered and raised his arm, \"If this fucking pork don't drop his gun on three end his life.\"\n\nMark slid forward with unexpected speed until he was less than six feet from Viktor, \"I promise you won't reach two,\" he said, cocking his gun. \"Now who wants a promotion?\"\n\nViktor very clearly did not like what he saw in Mark's eyes because he never started counting. He swallowed then we all heard the sound of distant police sirens. Realizing even if they shot us, they'd be unlikely to leave before they were surrounded everybody relaxed their guns.\n\nOur backup showed and things got under control but the rest of the night I had the shakes. Mark came over to me after we got everybody secured. \n\n\"How you doing?\"\n\n\"I don't know why but my hands are freezing,\" I said. I kept rubbing them together to try and warm them. \n\n\"That's the side effect of adrenaline. It's normal, your body thinks that you need more blood to perform better when things go competitive or serious so your heart starts working faster and draws blood away from the extremities.\"\n\nI nodded, he pulled me into his arms and hugged me. For minutes I clung to him without shame. A few other officers saw us and I was worried that rumors might start but surprisingly everyone understood what had happened and that we'd just held each other for support.\n\nMore time passed and we became closer. \n\nOne night we were drinking with a few fellow officers and one of them decided to set him up on a blind date.\n\n\"I'm telling you she'd be perfect for you.\"\n\n\"How do you even know what's perfect for me?\" Mark asked.\n\n\"She's breathing, that's all that matters,\" another officer yelled making all of us laugh.\n\nMark rolled his eyes, but his friend kept pushing. \n\nLooking at me he said, \"You believe this guy.\"\n\nDespite the small surge of jealousy I felt, I nodded my head, \"I think you should do it.\"\n\nFast forward to three nights later and I was sitting next to him on a double date. I'd opened my big mouth to prod him into the blind date when another officer had talked about the perfect man for me. Of course, no matter what I said my partner justified my going as conditional to his and here I was. I really needed to quit letting my smartass mouth get me into these messes. \n\nWe both decided to have a shot of whiskey before they arrived and then we each nursed a Blue Moon beer. I'd dressed in a high waist tan leather mini skirt and black sweater with black boots and he'd dressed in black jeans with a black button up shirt that was completely unbuttoned with the sleeves rolled to his forearms and a white t-shirt underneath. \n\nThey finally arrived, Cody and Andrew. She was a cute waifish blonde and he was a decent looking Italian with thick black hair. We ordered drinks and some appetizers and chatted away, he was an accountant and she worked as a loan officer at a bank. Despite us both trying to keep each other talking our dates were soon talking to each other more than either of us. After a while Mark excused himself to go to the bathroom, I sat quietly as our dates talked about the new conditions for mortgage loans or something equally boring.\n\nLooking over I saw Mark heading back to us. Feeling mischievous I checked to make sure nobody could see me. When he got close to the table, I shifted my legs and made sure he had a good peek up my skirt to my red satin panties. I saw his eyes widen for a second and a smile crossed his face before he dropped it to a neutral expression and sat back down. \n\n\"Anybody want fresh drinks?\" he asked.\n\nAndrew and I nodded.\n\nI started to signal the waitress but Mark stopped me, he pointedly looked down at my skirt and back into my eyes, \"No, I'll go get them.\n\nI smirked as I realized he wanted another flash. He left to the bar and got our orders then took his time shifting around people when he returned. Once again, I checked to make sure it was discreet and when he was close enough, I shifted and spread my legs a few inches making sure he had time to look.\n\nHe kept his face blank as he handed me and Andrew our drinks but his finger stroked my hand as we touched. After a while Andrew and Mark suggested going to a nearby place to eat and we agreed so we all got up and went outside. Once on the sidewalk Andrew moved to get a cab when Mark stopped him.\n\n\"Change of plans, I've got a new idea,\" he said. \"How about me and Estrella go hang out and you and Cody go get something to eat.\"\n\nWe all looked at him weirdly.\n\nHe held up his hands at our puzzled expressions, \"Look, first dates are to see if there's chemistry and there definitely is, just not with us.\"\n\nHe pointed back and forth between the two of them.\n\n\"I mean come on, be honest, you two seem to be hitting it off, right?\"\n\nAndrew and Cody looked at each other guiltily and nodded.\n\n\"So why don't you two get to know each other and have a good time, I'll take my partner here out and we'll grab a bite on our own.\"\n\nAndrew looked up, \"No hard feelings?\"\n\nI shook my head, Cody looked happy too. She walked to Mark and hugged him, as she broke away, she brushed her lips against his. \n\n\"You're a good guy,\" she said.\n\nA cab pulled up and Andrew nodded at us and they both hopped in and drove away.\n\nI turned to look at him, \"You know you're buying me dinner, right?\"\n\n\"What? Why?\"\n\n\"You just lost me my date, since he was buying my meal that's now your responsibility.\"\n\nHe laughed, \"Fair enough.\"\n\n\"I'll buy us drinks to, there's a new one I want to try, it's called the red satin panty.\"\n\nI blushed and lightly punched his arm. \n\n\"Steel,\" a voice cried out. \"Is that you?\"\n\nWe looked around for the source and I saw a tall blonde man walking toward us with his arms outstretched. He was lean, muscular and good looking in a preppy sort of way, he was wearing jeans and a blue striped Tommy Hilfiger shirt. \n\n\"David,\" Mark yelled. \n\nThey hugged and patted each other on the back then Mark introduced us.\n\n\"His taste is exquisite as always,\" David said while kissing my hand.\n\nMark rolled his eyes, \"David and I grew up together, we only see each other a few times a year.\"\n\n\"And I won't use this time to interrupt your date,\" he said.\n\nMark and I looked at each other and both started laughing, we spent a few minutes explaining what happened making David laugh.\n\n\"Well, that's perfect, we can hang out tonight, I'll even buy dinner and the three of us will have a blast.\"\n\nWe agreed and David took us to a nearby steakhouse. When we were seated Mark held out my chair for me, as he took his seat, I gave him another panty flash, this time though I was caught.\n\n\"I saw that,\" David said.\n\n\"Huh?\" I said, trying to play dumb.\n\n\"No way, don't try and play that off with me, I saw that.\"\n\nHe looked over and Mark was laughing as I turned bright red.\n\n\"Wait,\" David looked back and forth between us, \"Are you two...\"\n\n\"No,\" Mark said. \"We're really not, she was just bored at dinner and was teasing me.\" \n\nDavid turned full faced to me, \"Really?\"\n\nI sighed, he wasn't going to let this go. I nodded, \"Yeah, I was just playing around.\"\n\n\"So flash me,\" he said.\n\nShocked I said, \"No way.\"\n\n\"Why not?\"\n\n\"Because I just met you.\"\n\n\"So?\"\n\n\"So no, not happening.\"\n\nHe stared at me as I sat there, after a few seconds I got uncomfortable and squirmed a little. I looked at Mark, \"You need to control your friend.\"\n\nHe laughed, \"Actually, I agree with him.\"\n\nMy mouth dropped and they both stared at me as my face flushed with heat. Another few seconds went by quietly, swallowing I looked around, when I looked back at David I shifted and spread my legs a few inches, I held that pose for a few seconds as he glanced down with a smile.\n\n\"I do love red.\"\n\nI shook my head and closed my legs as the waiter came to our table, the rest of the meal we laughed, talked and had a good time. I managed to flash each of them one more time throughout dinner and loved it. My nipples stayed hard throughout the meal and I was excited at my own daring. Afterward they took me for a walk and I linked my arms with one on either side of me. \n\n\"My dear, you are unique,\" David said. \"And why has this fool not claimed you yet?\"\n\n\"Too complicated, as partners a relationship could get awkward,\" Mark said.\n\n\"Yeah, I can't be having him all mopey at work when I put him in his place.\"\n\nDavid roared with laughter and Mark chuckled as we teased each other. Soon our walk led us past a hot tub sauna house. \n\n\"I want to go soak,\" I said pointing inside.\n\nMark and David looked at me and shrugged. \n\n\"You sure?\"\n\nI nodded and we went inside and Mark paid for a hot tub, they gave us keys to the locker rooms and we each went away to meet back at our private hot tub. A few minutes later I walked into the room in a white robe the establishment provided to find both of them waiting for me.\n\n\"You guys not getting in?\" I asked.\n\nThey looked at each other, \"Well we weren't sure how to bring this up,\" David said. \"Was this supposed to be in our underwear or was this au naturel?\"\n\nI gave them my best \"Are you stupid look?\" and undid my robe letting it drop to the floor. I put a hand on my hip and stood in front of them completely naked. \n\nI let them look for a few seconds then walked to the hot tub, \"Quit being a bunch of girls and get in the water.\"\n\nDavid turned to Mark, \"I like her.\"\n\nDavid ordered us drinks and a minute later a girl came in and dropped off our order, we sat drinking and chatting about our jobs. David was interested in what me and Mark did together and listened to our stories intensely. I talked about little things and asked how they knew each other. They told me they'd grown up together and even went to the same college but David worked as an investment banker, I raised my eyebrows at him. \n\n\"So that means he's got all the money huh partner?\"\n\nI turned to put my empty bottle down or I would have seen the look and small shake of head that Mark gave David. \n\nWhen I turned back, I realized I was dizzy from the heat and drinking too fast so I hopped up on the side and just kept my legs in the water. Both men were staring at me as I had everything on presentation. \n\n\"You truly are superb,\" David said holding his beer in salute.\n\nI smiled, \"Thank you.\"\n\n\"How has some guy not snatched you up?\" David asked.\n\n\"My last relationship ended in disaster.\"\n\nA small frown crossed Mark's face.\n\nI knew he thought I was talking bad about our arrangement so I clarified, \"I had a good affair with somebody right after but the relationship before kind of affected it.\"\n\n\"That sucks,\" David said.\n\nI laughed, \"Yeah, the second one was good, it all clicked and the sex was pretty awesome but my ex was kind of in the picture in a weird sort of way so I couldn't really make a go with the next guy. That was my last sexscapade and it was a more than six months ago. Since then I've just been throwing myself into work.\"",
        "\"Sounds like a story.\"\n\n\"It is but I really can't talk about it.\"\n\nDavid nodded and held up his hands, \"No pressure.\"\n\nHe took a sip of beer, \"So what is your favorite thing in sex?\"\n\nI laughed hard, \"Oh my god, you are a flirt.\"\n\nShaking my head, \"I don't think we should go there.\"\n\n\"Why not? We're all adults, like you said, 'Don't be a girl.'\"\n\n\"God you're so bad,\" I said giving in. \"But fine, I love oral.\"\n\nI sat up straight and parted my legs as I closed my eyes and traced my pussy lips to my small racing stripe slowly stroking up and down, I knew they were watching. The heat and buzz from my drinks were getting me worked up, the warm water was cooling in the open air on my skin and my nipples were hard. \n\nKeeping my eyes closed I tilted my head back and put one hand behind me for support, \"I love to feel a tongue on my pussy. I love to feel his head between my legs, the rough stubble from his cheek on my thighs, the texture of his tongue against my soft skin.\"\n\nI paused and opened my eyes, they each had a rapt expression on their face, their eyes were gleaming at my sexual exhibition. At that moment the girl came back in with more drinks. I unashamedly took a beer without moving. She glanced at my nudity and spread legs and the two men and smiled at me, let her think what she wants I thought. I winked and she hurried away. \n\n\"Well if you really need oral, I can offer my services.\"\n\nI giggled, \"I'm sure you would.\"\n\n\"I'm just saying, as beautiful as you are you should not be frustrated sexually.\"\n\nFeeling frisky I played along, \"And you'd just offer your services free of charge, how generous of you.\"\n\n\"Yep, that's me, a generous guy.\"\n\nI laughed harder.\n\n\"I'm serious though, I promise no sex just oral till you cum.\"\n\n\"Yeah right, like you wouldn't want anything in return,\" I said sarcastically.\n\n\"I wouldn't, I swear.\"\n\n\"Oh really.\"\n\n\"On my honor,\" he said holding a hand over his heart.\n\n\"Hmmmm,\" I said taking a sip of beer. I eyed him playfully, making a decision I spread my legs wider and said, \"Ok, impress me.\"\n\nHis jaw dropped and it took a second for him to recover, Mark was laughing and smiled at me. David looked at Mark then back at me, finally he set his beer down and moved toward me. I looked into his eyes as he positioned himself between my legs. Tentatively his tongue came out and licked me, his eyes looked into mine as he gave me a slow lick again. I knew he was waiting for me to tell him to stop so I gave him some encouragement, I moaned and closed my eyes. Gaining confidence, he continued to lick my pussy for a few minutes. Despite my playfulness and teasing he was doing a good job. His tongue moved up and down steadily, I was quickly wet and was getting really excited. I kept my eyes closed and bit my lip as he licked and thrust his tongue inside me, my free hand grabbed his hair and I ran my fingers through his head. I was building up when he stopped and stood out of the water, his dick was rock hard and he moved between my legs. Snapping out of my passion I put a hand on his chest to stop him.\n\n\"I don't think so,\" I said.\n\n\"What? Are you serious?\"\n\nMark laughed out loud breaking my arousal as I smiled at David, \"The deal was you give me oral, I'm definitely not having sex with you.\" \n\nI smiled to make the letdown easier but I held firm.\n\n\"Fine,\" he said sinking back down, he started to move forward.\n\n\"Nu uh,\" I said. \"You lost your chance at more of that.\"\n\nI pushed him away and sank back into the water myself.\n\nHe gave a frustrated groan but saw I was serious so he moved back to his side of the hot tub. \n\n\"She's ruthless,\" he said looking at Mark.\n\n\"Man, she gave you a chance and you went outside the rules.\"\n\nDavid shook his head \"Like you could do better.\"\n\nMark laughed, \"I know I could.\"\n\n\"Prove it,\" he said gesturing at me.\n\n\"Wait...,\" I started.\n\n\"Oh no my dear, you have the iron will, let's see if it'll work here,\" David continued.\n\n\"He is my partner, things could get awkward,\" I said. \n\n\"I promise I won't try anything else.\"\n\nI pretended to think about it, secretly we both knew it wouldn't be that big a deal for either of us, but I had to put on an act. Inwardly I was excited, I couldn't wait to have his head between my legs again. I'd never felt so sexually energized by a man and I wanted this to happen. \n\nNo way would I ever let him know that though, so I said, \"I'm more worried you'll fall in love. I'm like a hot fudge sundae baby, once you had one, you'll always want another.\"\n\n\"I promise if I fall in love with you, you can have my car, Star!\"\n\n\"I'll take you up on that,\" I said. \"You sure? Cause if you fall in love, I will hold you to that promise, I want that car.\"\n\n\"I'll take my chances,\" he said as he moved toward me. \n\nI stood out of the water and once again sat on the side and spread my legs. This time Mark moved toward me while David watched, I put my hands behind me and leaned back. Mark reached out and traced a finger up leg from my ankle to my pussy. My breath caught as he stroked a finger across my lips. He took his hand off and did the same with the other leg, then he drew both hands and trailed them up and down my legs. I couldn't help it when I let out a small whimper. He moved his head forward until I could feel his breath on my skin, my pussy throbbed as he gave me the smallest flick of his tongue across my mound. I let my arms fold as I lay back on the warm granite and spread my legs wide giving him easy access. He gave another flick of his tongue and I cried out. He gave a slow lick up then down; my lips were puffy and sensitive from arousal and I responded by running my fingers through his hair. He ran his tongue slowly up then down and back up again making me groan. Finally, he started licking me up and down, no longer teasing but keeping a steady pace, my back arched and breath came in gasps as his tongue thrust inside me. He found my clit and gently twirled his tongue around it sending me into spasms. I cried out even louder and looked up scared we'd made too much noise. I grabbed at my robe but it took me three tries before my fingers had the strength to grab it, all the while his tongue was sending crashing waves through my body. I bit down on the white cotton to stifle my cries as he kept licking. It was beginning to be too much so I tried to bring my legs together and he glanced up and his eyes met mine. He licked again and used all his strength to keep my legs from closing. I looked over at David and our eyes met, I shouldn't be turned on that he was watching me but I was. I felt the wave in my body growing larger as Mark circled his tongue on, around, and inside my pussy. This time when his tongue touched my clit my world exploded. My vision went white as electric pleasure shot through my body. I wadded the robe around one arm and bit down on it to stifle my screams as aftershocks went through me. He pulled back and my legs and body went limp as he ducked under the water, I lay panting and trying to catch my breath until he came up thirty seconds later. \n\nBoth of them were looking at me as I recovered. \n\n\"Dude, you have got to bring her on the lake trip.\"\n\n*****\n\nThe next day at work I wondered if anything would be different. I know we'd had our relationship before but now I knew what he was. Unsurprisingly he acted like he always did and I was completely at ease. \n\nWe stopped at a local deli for lunch and I asked him, \"So what is the lake trip?\"\n\nHe shook his head, \"David should not have mentioned that.\"\n\n\"Why not?\"\n\nSighing he looked at me and seemed to make a decision, \"It's a guy week vacation. We fly out and rent a houseboat and spend the week on Lake Havasu. We barbeque, drink, catch up on each other's lives, we also spend the last night in Vegas and fly back home Sunday.\"\n\n\"Each other's?\"\n\n\"There are five of us, grew up together, college together, we don't get to see each other as much as we want so we created the lake trip as a yearly tradition to stay in each other's lives. We've been doing it about ten years now.\"\n\n\"When?\"\n\n\"The next one is next Saturday.\"\n\n\"So why wouldn't it be a good idea for me to go?\"\n\n\"We have certain rules regarding women.\"\n\nI arched an eyebrow at him, \"That's ominous.\"\n\nLaughing, \"So one year one of us wanted to bring a woman, the others were worried that it would spoil the fun. Then David came up with a rule, you can invite a woman as a plus one but any women on our trip has to be topless.\"\n\nMy eyes went wide and shock registered on my face.\n\n\"Exactly, that's why I didn't mention it.\"\n\n\"And you've had girls do this?\"\n\n\"Not me specifically but a few have had girls do it.\"\n\n\"Is that the only rule?\"\n\n\"It's kind of developed into thong only after lunch but before lunch you can wear a shirt and panty.\"\n\n\"Well isn't that generous,\" I said rolling my eyes. \n\n\"Not really, the shirt can't go below your belly button.\"\n\n\"So why don't you want me to go?\"\n\nHe looked incredulous, \"Are you saying you'd want to?\"\n\nI shrugged, \"I'm not sure but it'd be my choice if not. Why don't you want me to?\"\n\n\"Look, I like to think I've been very professional and last night exception I haven't treated you any different, right?\"\n\nI nodded, \"Last night was just releasing some tension.\"\n\n\"I agree, and teasing each other aside, if I bring you to the lake it's not going to be as a friend. I'm not going to have other guys hitting on you because they think you're single. If you come, you'll come with me.\"\n\n\"I assume with you means in the biblical sense.\"\n\nHe laughed, \"Yes, very much so.\"\n\nI thought about it for a minute or two, \"Is there somebody else you planned on asking?\"\n\nHe looked me square in the eyes and smiled, \"My last relationship was with my own personal whore.\"\n\nI blushed at that but smiled back and nodded, another minute went by before I said, \"I want to go.\"\n\nOur eyes met and neither looked away.\n\n*****\n\nIt was Saturday morning, we'd flown in last night and stayed at a hotel. Mark had booked separate rooms. I was strangely nervous, this was a planned retreat and from our previous conversation I knew he wanted sex on this trip. We hadn't touched each other or said anything else regarding relationships or sex since I'd told him I wanted to go. I'd packed light, per his instructions, only one casual and one nice outfit for wearing out and around if we left the yacht. The rest of my wardrobe consisted of panties, thong bikinis and a few midriff shirts. We'd taken a cab to the marina in the morning and David had met us as we came on board, he'd given me a hug and a light peck on the lips which earned me a sharp slap on the ass from Mark. I yelped and looked back to see him pointing at his eyes and then me with two fingers made into a V. David and I laughed as he took us inside, we were now sitting in the main room of the huge luxury yacht they'd rented. There was David, Mark, three other guys and three other girls. Mark and David had promised me introductions after he said a few words. \n\n\"Good morning everyone,\" David said nodding to each everyone. \n\nGeneral murmurs of good morning and such were returned. \n\n\"As you all know or should know if you are a guest, this is our annual lake trip. The five of us have grown up together and this is our way of staying in touch and keeping up on each other's lives.\"\n\n\"Since this is primarily a man get together, we have been reluctant to add women. However, objections were raised by various females in our lives so we came up with some rules. You should know about these rules but I will clarify.\"\n\n\"If you stay on board after my speech you will spend the rest of the trip wearing only a thong bottom for most of the time. You are allowed to wear panties before lunch with a shirt but the shirt must not go below your belly button. After lunch it is only thong bikini or panties.\"\n\n\"These rules are not negotiable, I own this boat and I say who stays, you can complain to your man all you want but if you disagree, I will have you off my ship in the next 15 minutes.\"\n\n\"Just so you know this is not a joke, Melanie here is a repeater,\" he pointed at a beautiful blonde girl seated next to one of the other men. \n\nShe nodded her head. \n\n\"Ask her, we have had one girl that tried to complain and stay aboard and I sent her home. John was not happy but he agreed to the rules and I will enforce them.\"\n\nHe pointed to another guy sitting opposite him who nodded agreement.\n\n\"Are there any questions?\"\n\n\"You guys aren't swingers, are you?\" piped a cute brown-haired girl.\n\n\"No Sara, we're not swingers. To my knowledge nobody here has ever been a swinger.\"\n\nNobody said anything else as we all looked at each other.\n\n\"Well then ladies, if you please.\"\n\nNervously all the girls looked to Melanie, as a repeater we assumed she'd go first. \n\n\"Nope,\" she said crossing her arms and leaning back. \"I go last, these guys know I'll get naked. The first time I did it I was alone. I'll be damned if you all don't have to sweat a little.\"\n\nI sighed and stood up, I was wearing a jean short and a grey sweat top without a bra. Everybody looked at me as I pushed my chair back.\n\n\"Before I do this could you hand me my bag babe?\"\n\nMark nodded and grabbed my black duffle bag. I reached inside and drew my HK45 and set it on the table, everybody's eyes went wide.\n\n\"If I drop trou and afterward you all shout 'Oh my god I can't believe she did that' or something or if this is some kind of joke, I want you to know I'm shooting you,\" I said pointing to Mark. \n\nWithout another word I pulled my top over my head and tossed it on the table. Then I unbuttoned my shorts and tugged them off. Now I was standing in front of everyone topless and wearing a small black g-string. \n\n\"Oh my god, I can't believe she did that! We were just joking.\"\n\nI turned to the only black man in the room, he looked like a young Idris Elba but more muscular. He was dressed in navy blue knee length shorts and matching tanktop. Everyone turned to him as he gave me a big grin.\n\n\"What?\" he laughed, holding up his hands. \"I just want to see her shoot him.\"\n\nDavid sighed and shook his head, \"Estrella meet AJ, our resident comedian.\"\n\n*****\n\nIt was bedtime on our first night and I was lazing on the white leather couch in the master bedroom while Mark showered, I'd gone first and was now wrapped in a burgundy towel and a light pink cotton thong. He came out with a towel around his waist and still wet hair. Heat flushed through my body at the sight of his casual manner and sexy body. He didn't pay any attention to me as he walked to a dresser and dropped his towel, he pulled out a pair of black briefs and put them on. His butt was perfect, I wanted to go over and bite it like an apple. I gave a small growl that made him start and turn toward me. \n\n\"Can I help you?\"\n\n\"That depends.\"\n\n\"On?\"\n\nI gave him my best wicked smile and raised an eyebrow as I stood up letting the towel drop off my body, \"Are there any more rules that I should know about?\"\n\nFor once he was speechless, my panties were small and tight against my sex, my nipples were hard and my hair was still a little wet. I walked toward him and pushed him back onto the bed. Our eyes locked as I parted my lips with my tongue and straddled his legs, I worked my way up till I was sitting on his stomach.\n\nHe swallowed and whispered, \"Now that you mention it, there are a couple other rules.\"\n\n\"Oh really.\"\n\n\"Yeah, you must sleep naked, no panties in the bed.\"\n\nI cocked my head and thought for a second, \"Seems fair.\"\n\nI lifted my butt up till I was on my knees, \"If you want them off you have to do it yourself, those are my rules!\"\n\nHe nodded and slipped his fingers into my waistband then slowly pulled them down my legs, as they reached closer to his chest, I stood up letting him tug them to my ankles. He let them go and held up a hand, I grabbed it to steady myself as I kicked the panties the rest of the way off before I straddled his chest again. I'd shaved smooth for this trip so my bare pussy pressed into his stomach. \n\nWe stared at each other for a minute before he reached over and interlocked his fingers with mine. He gently pulled me down till I was pressing against his chest and our lips were inches from each other. \n\n\"Last chance to get away Cruz,\" he whispered.\n\n\"Typical male, you think you've been doing the hunting.\"\n\nI leaned forward and our lips met. We kissed slow and gently, our mouths exploring each other in gentle surges. I could feel the warmth of every inch of his skin that was pressed to me. The hairs on my arms were tingling and a familiar heat blossomed between my legs and in my stomach. I stretched my legs back and entwined them with his. I rested my weight on him and explored his body with my hands. I started by running my fingers through his hair and then bringing them down his shoulders and arms. \n\nWe spent the rest of the night making love, slowly and tenderly. Before tonight our sex had been all raw passion and intensity. Tonight, we explored each other's bodies in gentle loving ways. I rode him slowly as we turned off the light and the windows bathed the room in starlight. He kissed every inch of my body and I returned the favor as I took my time and pressed my body to his. Our kisses were loving and passionate as our bodies melded. The sky was barely lightening to silver as we both collapsed in each other's arm to sleep.\n\n*****\n\nThat week was special as I met his friends and learned more about him. I got used to being half-naked very easily and the other girls lost their shyness too. By midday on the second day I took it a step further, not wanting to go swimming and then walk around in wet bottoms or go change I decided to swim naked. I was about to hop off the back of the boat into the water when I dropped my bottoms and went in. The other girls saw me and the guys were all watching from the side with beers in hand. One girl asked why and I gave her a quick explanation. Before I knew it, Melanie had done the same and joined me in the water. Once she joined me the rest didn't waste any time. For the rest of the trip whenever we went into the water or the hot tub on the back of the boat, we'd go naked. The guys sure didn't mind and the girls got used to it in no time.\n\n*****\n\nI'd decided to take a nap and was sprawled across the bed in my panties. Not wanting to wear a bikini bottom to bed I'd changed to a cute little leopard spotted thong. After a couple of hours, I groggily started to wake up. I felt a presence next to me on the bed and looked up to see Mark laying shirtless and wearing only his black board shorts while reading a book. \n\nI gave him a sleepy smile and snuggled next to his warm body. Fingers stroked through my hair and across my shoulders and I gave a small happy sigh. Minutes passed as he continued to trail his hands across my body in slow caress. I heard a rustle and looked to see him put the book on the black lacquered nightstand and then shift to a sideways position with his chest toward me. He had more reach now and stroked his hands across my shoulders, back, and ass.\n\nHe would go back and forth across my back moving down by inches till he came to my ass where he would still trace but after each line, he would cup a cheek and give a small squeeze. I gave happy little sounds as he worked. When he reached as far as he could he moved back to my head and ran fingers through my hair while massaging my scalp. Next, he spent time on my neck, digging his fingers in gently and closing his fingers toward each other after a while he went back to tracing my back and ass. I was getting goosebumps as drew patterns on my ass. This went on for twenty minutes or so and I admit it was having an effect on me. I rolled over and let his fingers continue to work on my front. He moved up and down my stomach and around and over my tits. My nipples hardened instantly to his touch, he gave them gentle pinches that made my breath stop. I was beginning to writhe and my sounds were turning to moans. ",
        "\"I want you inside me,\" I murmured. \n\nHe smiled, \"We have a small problem with that.\"\n\n\"What's the problem?\" I whined still grinding my legs together.\n\n\"You broke my rules.\"\n\n\"What rules?\"\n\n\"Well, precisely one rule. Why are you wearing panties?\"\n\n\"Wha...\" I started to say, I realized what rule he meant and thought about it. \n\nI stuttered, \"But you're not in bed with me.\"\n\n\"I'm not?\"\n\nGaining confidence, \"Well you weren't when I went to bed.\"\n\n\"That's true, however, I'm sure what I said was 'you must sleep naked, no panties in the bed.'\"\n\nI paused to think, shit, he was right, he hadn't said anything about if he was with me or not. I was about to argue it was implied but I knew I'd lose. I decided to try a different tactic. \n\nI slithered my body against his, crawling up the side I whispered in his ear \"I'll give you a blowjob if you forgive me.\"\n\nHe gently disengaged himself from me, got up and stood next to the bed, \"An intriguing offer but I think I'm going to have to discipline you. I can't let you think that this kind of behavior can go unpunished.\"\n\n\"Wha...\" I breathed.\n\n\"Put your ass in the air,\" he commanded.\n\nI swallowed but did as he said.\n\n\"Now hike your panties down.\"\n\nI was getting more and more turned on by his authority, he was scaring me but I trusted him so I did what he told me. I kept my face buried in the bed as my hands reached up and tugged my underwear down to mid-thigh.\n\nHe grabbed a pillow and pushed it toward my face, \"You might need this to keep quiet.\"\n\nI knew what was happening and I wrapped my arms around the pillow and buried my face in it while biting down on the fabric.\n\n\"I think six will be enough for your first lesson.\"\n\nI watched his arm move back then forward, WHACK, heat blossomed over my ass on the cheek closest to him and I shrieked into the pillow. He wasn't holding back, I mentally tried to prepare myself when WHACK, another blow from his hand dropped on the opposite cheek. I gripped the pillow tighter as WHACK, WHACK two more, one on each side.\n\nHe paused as my butt throbbed. My muscles were straining to stay in place and I was as wet as I'd ever been. WHACK, WHACK, the last two fell in quick succession on either side and I collapsed. \n\nHis fingers slid my panties off the rest of the way. I looked up and saw him tugging his own shorts off, his cock stood at rigid attention and I knew he was as ready as I was. Without a word he moved on top of me and straddled my legs, I lay limp as the head of his dick probed me from behind. I shifted and he slid deep inside me making us both groan. We both froze for a moment.\n\n\"Is that going to happen again?\"\n\n\"No baby, never.\"\n\nHe thrust against me and I grabbed the sheets as he took me. I couldn't help it as I pushed back against him moaning the whole time. My ass was burning and I could feel the red marks his hands had left on me. He'd marked me like I was his property and it'd turned me on. He took me, rough and commanding. He stayed quiet except for grunts and heavy breathing as he drove into me again and again making me nonstop moan. In no time we each built to a climax and I unleashed first as his hands grabbed my hips to hold me in place, the act of dominance had me electrified and a surge of energy arced through my body causing me to cry out. A second later I felt his dick throb inside of me as his own climax burst from his body. He crashed against my back pinning me to the mattress as we each rode our orgasm.\n\n*****\n\nThe day before our last night I'd walked into the room to take a nap. I debated wearing panties just so I'd get into trouble and maybe get another spanking. It'd been delicious the way he'd taken me and I'd even enjoyed afterward when we went on the deck of the boat, everybody had seen my red ass and snickered. The girls had all gave me small smiles and raised eyebrows and the guys had simply nodded. I'd tanned on my stomach just to show his handprints like a badge of honor. I decided against it, since I wanted to try something different so I dropped my bikini. At this point I was super dark from tanning all week and had a perfect white thong tan line across the top of my ass. Mark had commented how it was a huge turn on to see that. \n\nI'd asked why and he said, \"When a guy sees a girl with a thong tan line that means we know she tans in a thong, it's sexy as hell.\"\n\nI thought he was crazy for that statement, of course a girl with a thong tan line tans in a thong, that's just stupid to say but all his friends had nodded agreement as if he spoke gospel.\n\nAnyway, I decided to get his attention in a new method. I lay face down on the bed and spread my legs just over shoulder width apart. I figured he'd come in and get a great view of my pussy, ass, and tan line. Tucking a pillow under my head I fell asleep.\n\n\"Wow,\" David whispered.\n\n\"I know.\"\n\n\"She's special brother.\"\n\n\"I know that too.\"\n\nI came awake as I heard the voices. I could tell they were both about six feet directly behind me from the bed. That meant they were both getting a perfect view of me, I stayed still as they talked. \n\n\"Not going to lie man, I'm jealous of you.\"\n\n\"Thanks.\"\n\n\"You going to keep her?\"\n\n\"I think I'm in love with her.\"\n\nMy heart surged with joy and it took all my control not to cry out. I heard the tinkling of ice as it swirled in glasses, then quiet as they watched me. \n\nMinutes later, \"Well, I'll leave you to her.\"\n\nFootsteps left the room and some rustling happened before a warm body slid next to me on the bed. I murmured and curled up next to him as he stroked my hair. Happiness coursed through me and I fell asleep again. \n\nSunshine poured through the windows waking me up. I looked around but found myself alone, I got out of bed, dressed, then went to find everybody. \n\nI figured they were eating breakfast so I walked down the galley hallway but stopped right before the corner that turned into the eating area, I heard whispering so I wanted to make sure I wasn't intruding.\n\nI recognized the voices instantly.\n\n\"Are you really going to ask her?\" David said.\n\n\"Yeah, I think I am.\"\n\n\"When?\"\n\n\"I don't know, I was wondering if you had any ideas.\"\n\n\"You should do it as soon as possible,\" Melanie said.\n\nThere were general murmurs of agreement.\n\n\"I can't believe she's nailed your ass,\" AJ said.\n\nSome laughter followed, I think they were they talking about me. It sounded suspiciously like Mark was planning something, I had a gut feeling but the reality of that would be impossible. There was no way it could be what I was thinking.\n\nSteeling myself I walked around the corner yawning and stretching. I was wearing a small white tank top that I'd cut to show lots of underboob and tiny white cotton bikini panties. I knew he liked this outfit, I made sure the panties were small and tight and exposed the crack of my ass, my lips pressed against the cotton fabric in the front teasingly. I ran my fingers through my hair as I walked to the counter and grabbed a plate with eggs and bacon. As I made my way to the table, I felt everyone's eyes on me, the way they all stopped talking when I entered spoke volumes. \n\n\"Why'd it get quiet all the sudden?\" I asked taking a seat across from Mark.\n\n\"No reason my dear, we were just admiring your outfit,\" David said.\n\nI looked around the table, it was AJ, David, Mark and Melanie. They were watching me with smug conspiratorial looks. \n\n\"Oh yeah, here's your ring Mark,\" David said as he handed him a small black box.\n\nMark glared daggers at David but took the box.\n\nMy heart sped, \"Ring? Who's that for?\" I asked nonchalantly while eating a piece of bacon.\n\n\"Yeah Mark, who's it for?\" AJ asked.\n\nFor a second, I thought Mark was going to jump over the table and choke AJ the way he looked at him but he gritted his teeth and said, \"It's no big deal.\"\n\n\"But I thought you said...\" David began.\n\nMark interrupted, \"I know what I said.\"\n\n\"You should show it to Estrella. Estrella, don't you want to see the ring Mark has?\"\n\nI really thought Mark was going to start punching his friends, the looks he was giving them and the self-satisfied smiles they were returning made it almost impossible not to laugh. The only thing that stopped me were the implications of what might be happening.\n\n\"Sure,\" I said.\n\nHe looked at me and shyly and handed over the box. I opened it and caught my breath, it was a gorgeous platinum and diamond ring surrounded by sapphires. I worked to keep my face neutral as my stomach flipped.\n\n\"Nice,\" I said as casually as I could. Closing the box, I slid it on the table toward Mark. \n\nEverybody was smirking and Mark looked at a loss, he reached for it and as his hand closed around the box my hand snaked out and slammed down on his wrist.\n\n\"Oh damn,\" David said straightening.\n\n\"Zip it princess or I swear to god I'll throw you overboard,\" I said.\n\nMark looked up into my narrowed eyes, we locked gazes and time froze. I tilted my head after he didn't say anything for a minute, he gave me a barely perceptible nod.\n\n\"Will you marry me?\"\n\nI held my face bland for just a second to make him sweat then squealed like a little girl and jumped up and around the table. I launched myself into his lap and wrapped my arms around his neck. \n\n\"Of course.\"\n\nHis friends started cheering us on as I grabbed his face and refused to release his lips from mine. \n\n*****\n\nThe rest of the trip passed and we flew back to New York, I clung to his arm on the way from the airport.\n\n\"So where are we going to live?\" I asked.\n\nHe gave me a funny look before speaking, \"There is something we need to talk about, but I'd like to wait until we get home.\"\n\nI nodded and kept silent, I was happy to snuggle into his arm and watch the city go by. Soon we were at the hotel we'd first met. I was a little confused but followed him as he went to the elevator and swiped a card. In a short time, we were at his penthouse suite again. \n\nAs we walked inside, he dropped his bag at the front door. Daniel was inside to greet us dressed in silver suit and slacks, with a sapphire tie and black shirt. Mark motioned him to follow us as we took a seat inside the living room.\n\nFirst, he looked at Daniel, \"As you know I've asked Miss Cruz to marry me.\"\n\nDaniel smiled and nodded, \"Good choice, I assume full privileges and knowledge?\"\n\nMark nodded, then turned to me.\n\n\"To explain a few things. First, I'm rich.\"\n\n\"Rich?\"\n\n\"Rich.\"\n\nMy brow crinkled, \"Like how rich?\"\n\n\"My family is billionaire rich.\"\n\nMy mouth dropped.\n\n\"This is actually my place, one of several in fact.\"\n\n\"Are you kidding?\"\n\n\"Nope, in fact the yacht we were on was not rented by David, it's mine, soon to be ours.\"\n\nMy mind was reeling. \n\n\"So what are you? Are you FBI? Or what?\"\n\n\"I am FBI, I didn't want to follow in the family business and my family approves of the work I do.\"\n\n\"So your family is rich?\"\n\n\"I have my own business interests and have more than one hundred million separate from family interests.\"\n\nMy mouth dropped again.\n\n\"Second, Daniel here is my employee, he's my assistant, we were in special forces together. He's highly trained and is a combination assistant, friend, bodyguard, fixer, and general whatever I need to get done person.\"\n\nI looked at Daniel in a new light.\n\n\"Do you work for the hotel?\"\n\n\"Just an act, I work for Mark, but I do have reserve status with the police force so I can carry a firearm.\"\n\nI looked at Mark, \"Wait, you really were special forces?\"\n\nI realized I slipped and that he hadn't known I'd looked up information about him, he eyed me for a minute.\n\n\"Yes, the best way to tell a lie is to sprinkle it with truth, and don't worry, I knew you and Officer Scott had checked my record.\"\n\n\"Yikes,\" I said biting my lip.\n\n\"He's very good but we had people waiting for the search to happen. We were a little surprised at where it came from and I had to tap dance to keep it a secret and out of the files when I realized it was you. For a brief moment we thought Scott worked for Nicky.\"\n\nI realized I'd almost gotten Tommy into deep trouble. \n\n\"You used your own house as undercover, aren't you worried they'll track you down?\"\n\n\"This building has very good security and I'm still not known as an agent.\"\n\n\"You said you interviewed them.\"\n\n\"And I did, as a lawyer, not as an agent. Nobody knows I gathered evidence, they contacted me when they were arrested. In fact, I got them all sweetheart deals for cooperation. It was a weird line and I could have gotten in trouble if they'd fought it. As their lawyer I'd have been immune to testify against them on certain things.\"\n\n\"You really played them all.\"\n\nHe shrugged.\n\n\"Do you get paid by the FBI?\" I asked.\n\n\"Yes.\"\n\n\"A normal salary?\"\n\n\"I do, but I just put that money in a separate account and use if for undercover stuff or equipment. I only just started using it, it's been untouched for years.\"\n\n\"What have you used it for?\"\n\nHe smiled, \"I was using it to pay a whore to help her out with school.\"\n\nI blushed red and Daniel laughed, I assumed he knew what Mark was talking about.\n\n\"At this point that account has more than three hundred thousand in it, maybe I'll start a college fund for hookers.\"\n\nI narrowed my eyes, \"There better only be one hooker in your life buddy or you're a dead man.\"\n\nHe held up his hands in mock fear, \"I swear babe, I only have one personal whore in my life.\" \n\n\"Damn right.\"\n\nOver the next few hours I found out more about Mark's and Daniel's background. After a while I realized I wanted to clean up and change to new clothing and told them I needed to get some clothes from my house.\n\nDaniel looked at me and spoke, \"I hope you don't mind, Mark called me and gave me the news. I've had your apartment packed up. All your clothes are inside the bedroom closet. I took the liberty of selling most of your furniture, paid your utilities, and broke your apartment contract. The few things I wasn't sure to bring in the house are at a storage, you can go with me later to look and decide what you want or if you tell me I can get it brought here immediately.\"\n\nI just stared at him digesting the volume of information he'd just given me.\n\n\"Wait...wha...my stuff.\"\n\nMark looked at me, \"Name one thing other than clothes and personal stuff that you need that I don't have or can't get for you.\"\n\nI sat back and absorbed what they'd both said. I realized they were right, there was nothing I needed. Mark looked at me and nodded at Daniel, he grabbed his phone and walked to the balcony. Daniel stood and indicated for me to follow him. He took me to the bedroom closet and showed me all clothes. Then he took me to a spare room and showed me all my personal stuff, laptop, pictures, wall hangings, books, and other assorted things.\n\nHe reached into a pocket and pulled out a credit card with my name, \"It has a million dollars linked to a separate account Mark opened for you.\"\n\nMy eyes bulged, \"A million dollars?\"\n\nHe smiled, \"I know it'll take some getting used to but I'll help you. If you need anything, I'm here for you. I live in the suite below this one and can be here for you in seconds if you need me.\"\n\nDaniel left to the kitchen leaving me reeling from the shock of everything. I made my way to the bedroom and took off my clothes and went to shower. I spent almost a half hour under the warm water while I mentally processed the situation. I turned the shower off and opened the door to find Daniel standing there with a giant navy-blue towel. I paused for a second and realized that he'd already seen me naked, plus given the way Mark probably wanted me around the house and the way Daniel seemed to be involved in his life I assumed that Daniel was going to have plenty of opportunities to see me without clothes... and probably tied up too I realized. I took the towel and dried off, as I did I studied him, he was slender, just shy of six feet with short dark hair and Puerto Rican features. I'd noticed before that he moved with the same economy of motion as Mark. They both had a casual confidence in their movements. \n\nI wondered, on impulse I asked, \"Do you spar with Mark a lot?\"\n\nDaniel looked at me a second, then nodded, \"Yes I do.\"\n\n\"How good are you?\"\n\n\"In many ways we're equal but he does have a good twenty pounds of muscle on me. In a bare hand fight he wins three of four.\"\n\n\"And in a not bare hand fight?\"\n\nAgain, he watched me for a while, he seemed to be deciding something, his wrist flickered and suddenly a double-bladed knife was in his hands.\n\n\"Same ratio, just not the same winner.\"\n\nI nodded visibly impressed, he flicked his wrist again and the knife disappeared. Finished with it I handed him the towel and he raised an eyebrow. \n\n\"I expect I should get used to you seeing me naked.\"\n\nHe gave me a heartfelt laugh and bowed his head, he took my hand in his and brought it to his lips, \"You definitely understand your fianc\u00e9. It will be a pleasure to be your assistant too, if you need anything please do not hesitate to ask.\"\n\nI nodded and walked out of the bedroom with him following me. Mark was on the couch drinking from a half full crystal glass. He raised an eyebrow at my nudity and I gave him a wink. I walked to him and took the glass out of his hand smelling whiskey, I downed the whole thing and put it on the side table. \n\nLooking over my shoulder I spoke, \"Daniel love, I do think we won't be needing your services the rest of the night. I plan on doing some very naughty things to my future husband here so please take the rest of the night off.\"\n\nWithout waiting for a response, I straddled Mark's legs and kissed him, I heard the front door close seconds later. \n\n*****\n\nA few days later I was relaxing in the hot tub when I heard the doorbell and a few seconds later Mark was greeting David in the living room. \n\n\"David, I'm glad you're here there was something I needed to talk to you about,\" I yelled.\n\n\"What you need chica?\" he yelled back.\n\n\"Come in here.\"\n\nMark and David walked to the edge of the hot tub as I swirled around. I ducked under the water and swam closer to them. I noticed the change in their expression as they realized I was swimming naked. The clear water left little to the imagination, even less when Mark reached over and turned on a switch flooding the underwater with light.\n\n\"Really?\" I asked sarcastically.\n\n\"Just enjoying the view baby.\"\n\nI rolled my eyes, \"Anyway, I'm glad you're here too babe, we need to have a discussion with David.\"\n\n\"About?\" David asked. \n\n\"About the fact that I won your car babe,\" I said looking at Mark.\n\nHe choked for a second, \"What?\"\n\nTurning back to David, \"You obviously remember the night at the hot tub a few weeks ago correct?\"\n\nDavid nodded.\n\n\"Do you remember what was said as lover boy here tried to have his way with me?\"\n\nHis face scrunched up in thought and then his eyes flew open as he suddenly remembered the moment I was talking about.\n\n\"Oh shit,\" he breathed.\n\n\"Exactly,\" I said.\n\n\"What are you talking about?\" Mark asked.\n\n\"When you were talking about going down on me, I said you better not fall in love, you replied and I quote 'I promise if I fall in love with you, you can have my car, Star.\"\n\nMark stared at me for a few seconds with a dumbfounded expression.\n\n\"Wait, what?\" he said.\n\nI stayed quiet as I let the implications sink in. \n\n\"Wait, that doesn't count, that wasn't an actual bet or anything.\"\n\n\"Says who?\" I asked. \"As I recall I very specifically said 'I'll take you up on that.'\"\n\n\"But...\"\n\nInterrupting him, \"But what, you made a deal, you lost.\"\n\n\"Well I didn't actually say...\"\n\nI narrowed my eyes and walked toward him out of the water, I was on the top step and the water was less than six inches deep, rivulets ran down my body and I crossed my arms, I could care less that I was naked in front of my fianc\u00e9 and one of his best friends. \"Say what, that you love me? Think really careful here.\"",
        "He stuttered, \"It... It's just that my dad gave me that car as a gift for college graduation.\"\n\n\"Then you shouldn't have bet.\"\n\n\"But it wasn't...\"\n\nI held up my hand stopping him, \"You have three choices, one, sign your car to me.\" \n\nI ticked off my fingers as I talked, \"Two, tell me you don't love me, in which case you can take back your ring. Three, tell me that you break your promises, that you don't honor your word.\"\n\n\"Look how about I buy you the car of your choice, I can even buy one just like it,\" he pleaded.\n\nI was unmoved, I gave him my best blank stare to let him know his pleas fell on deaf ears. Just to slip the dagger in a little more I said, \"You should know, that the wife of a husband that breaks his word is never interested in sex.\"\n\n\"Never?\"\n\n\"NEVER! She also will never walk around naked, never get tied up, never dress sexy or give special birthday sex. In fact, the wife of somebody who doesn't trust her husband never works out in just her panties and will only wear huge baggy sweats around the house.\"\n\n\"Wait, you work out in only your panties?\" David asked. \"Can I work out with you?\"\n\nI looked back at him and smiled, \"Do you keep your word?\"\n\nAt the same time Mark glared at him, \"Really? Right now? That's when you want to intercede? Kind of not helping.\"\n\nDavid shrugged his shoulders and smiled, \"Sorry man.\"\n\n\"Don't get mad at him.\"\n\nMark sighed, \"Fine.\"\n\n\"Fine what?\" I pressed.\n\n\"Fine, you get the car.\"\n\n\"Good, where do you keep the title?\"\n\n\"In my desk in the den.\"\n\n\"Good, lets go get it.\"\n\n\"What, now?\"\n\n\"Why not?\"\n\n\"Yeah man, why not?\" David said.\n\nMark scowled at him as I gave him my sweetest smile.\n\nI winked at David, \"Somebody's going to get a naked hug after this.\"\n\nDavid beamed.\n\n\"And a bloody nose,\" Mark added.\n\nDavid rolled his eyes, while Mark kept scowling.\n\n\"Let's go, chop chop, I don't have all day. I've got to get to the DMV to register my new car,\" I said pushing Mark by the shoulder to turn and go to the den. \n\nI followed happily with David behind us, I looked back to see him staring at my ass so I gave it an extra wiggle. I loved the freedom of being nude in front of his friends in our house. I was still dripping wet but the room was warm and my toes sunk into the thick burgundy carpet. Once he got there, he opened one of the numerous drawers on the giant dark mahogany desk and rifled through some papers. He pulled out the title and I quickly looked it over making sure it was to his 1967 500 GT Cobra Shelby Fastback. Grabbing a silver pen from the top of the desk he turned the title over to sign.\n\nMaking one last effort, \"Look babe, my dad is going to kill me if I give you my car.\"\n\n\"And I'm sure he'll give you a lecture about the dangers of gambling, but that's your problem not mine,\" I said tapping the title. \"Now sign the damn paper!\"\n\nWith a sigh, he signed the document and handed it to me. I held it up with a grin. \n\n\"We're so going to DMV today,\" I said. \"What do you think David?\"\n\n\"I'm still waiting for my naked hug.\"\n\nI gave him my biggest smile and moved into his arms, \"I'm going to get your clothes all wet.\"\n\n\"Worth it,\" he said as he held me tight. I half expected him to move his hands to my butt but he played it smart and just enjoyed the feel of my naked body pressed to his.\n\nAfter I hugged him, I ran into the bedroom and got dressed. I came back out to find them both standing there waiting for me. Mark glared at David sideways while David smiled at me. \n\n\"Do I get shotgun in your new car as we drive to DMV?\"\n\n\"Of course,\" I replied. \n\n\"FUCK NO!\" Mark yelled.\n\nHe looked at me, \"A man keeps his word and a man even gives up the second love of his life to the first, but no way in fucking hell is a man going to sit in the backseat of that love. Not if the first love knows what's good for her.\"\n\nI swallowed, happiness rushed through me as he called me the love of his life. I didn't want to push him and I was so excited to be his. I looked at David, \"Sorry.\"\n\n*****\n\nNote: Comments always appreciated."
    ],
    "authorname": "storm_usmc",
    "tags": [
        "tied",
        "gagged",
        "fbi",
        "handcuffed",
        "displayed",
        "naked",
        "swimming",
        "thong",
        "friend",
        "panty"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/dont-judge-me-ch-02"
}