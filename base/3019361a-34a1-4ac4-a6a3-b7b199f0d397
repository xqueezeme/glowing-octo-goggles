{
    "title": "Starlight Gleaming Ch. 14",
    "pages": [
        "Synopsis\n\n The story is told from the perspective of Senior Lieutenant Ranji Kandikan of the Imperial Air Force. \n\n The days move slowly while Ranji tries to balance home and his new command. His family \u2013 Captain Janetta Tlacotli, Second Sergeant Zinja, Sergeant Cholan \u2013 as well as Corporal Sowitwee's wife Nariya, all continue to heal in the Naval hospital. Janetta nears the time when she can finally leave the hospital and return to duty.\n\n With the destruction of their home, Ranji and the rest of the family have taken up temporary residence at Janetta's empty hangar. Corporal Ixma, the fourth member of Janetta's Flight Crew, has become fast friends with Calia, Ranji's Personal Servant. Anton Sonilawa, a family bodyguard sent along to protect Calia, helps with childcare for Ranji's newly adopted daughters, four-year-old Sisi and two-year-old Mina. \n\n His Second in Command, Doyya Lovyanchiti, has nearly died from her wounds, but Ranji, Third Sergeant Yalcamara, and Private Stimmi discovered the injured Doyya and took her to a clinic for emergency care. Yalcamara stayed awake at the clinic all through the night, keeping watch over her. \n\n Doyya was injured defending Melannee Siroptic, one of the women who acted in the role of Commander Orchid, known throughout the Empire as the Vengeful Hand of the Emperor. Melannee has since vanished, and Melannee's other alias, Sergeant Innati, is wanted by Minister Supay, head of Imperial Security, arguably the second most powerful man in the Empire. \n\n As part of the fall out, Melannee's ally and Ranji's new blood-brother Tomin Hayantotichti (formerly of Imperial Security) has a new identity as Ground Service Lieutenant Bilan Monaycote to protect him, his new wife, and his sons. Ranji sends his friend and former teacher Styen Topangiti along to help make sure they arrive safely at Tohingo with the freighter full of refugees. Commander Ajanta Barankoshto was instrumental in helping with the evacuation. However, the huge Condor transport that was supposed to ferry the refugees blows up shortly after take off. Ranji believes this to have been the work of Minister Supay. Supay has also been discovered to have authorized the selling of orphaned and homeless children as food to draconian agents.\n\n Ranji focuses on getting to know the people in his command, enforcing the Protection Orders that prevent forced sex from those of lower status or rank, and finding a new home for his family. All the while, his upcoming orders for ten weeks of training continue to loom ever closer. As if all that wasn't enough, Ranji intends to do everything in his power to stop the planned assassinations of Arjun Kandikan, Ranji's father, and himself by draconian agents.\n\n The enlisted grades in order of progressive seniority are Pvt for Private, FCpl for Field Corporal, Cpl for Corporal, Sgt for Sergeant, TSgt for Third Sergeant, SSgt for Second Sergeant, FSgt for First Sergeant, and SrSgt for Senior Sergeant, the highest level NCO. Enlisted grades are worn on the upper arms, while officer grades are on shoulder boards. Unit patches are on the upper left arm, above any enlisted grade.\n\n A heartfelt thanks to my reader, gyfurune, who helps catch my mistakes. Any errors that slip through are my own.\n\n* * * * *\n\n Private Stimmi pulled up by the open bay doors of Janetta's hangar. Getting out of the back, I moved around to the front passenger seat and opened the door. \n\n\"I'm pretty sure I can walk, sir,\" Doyya protested sleepily.\n\n\"Not a chance,\" I scooped her lean body up into my arms, mindful of her head coming through the vehicle door. \n\n\"Over here,\" Calia indicated, pointing to a new, single-sized bed. Ixma and the girls hovered around them. Even Anton looked on with concern.\n\nThe hangar was getting crowded with beds. There were five of them now.\n\nI laid Doyya down carefully. Ixma swooped in and helped make her comfortable. Sisi and Mina stood by and watched the activity with interest. Stimmi brought the clinic discharge paperwork and her pills. Calia took them from him.\n\n\"Where's Sowitwee?\" I asked, looking around.\n\nHe hustled up, wiping his brow. \"I was emptying the trash and recycle, sir.\"\n\n\"How's your knowledge of wound care?\"\n\n\"Basic only, before going into pharmacy. But I do know she needs to stay propped up until the Nu-skin patches are completely absorbed. She's not going to the Naval hospital?\"\n\nI shook my head. \"Too many questions as to what happened. It's the only way to protect the woman who saved you and your wife, and the Lieutenant herself. And I will remind you not to mention her name.\"\n\nHe nodded solemnly. \"To protect her. I understand, sir.\"\n\nAnton brought over some pillows and put them behind Doyya.\n\nI walked back to the vehicle. \"All right. Sowitwee, you're coming with me. Sergeant Chita tells me that tablet computers are on backorder, so we'll swing by the Commissary and I will spend the credits and buy you your own tablet the tech programs you need. Stimmi, are you going to need help getting Sergeant Yalcamara to her quarters?\"\n\n\"No, sir. Normally, she's a handful, but when she's like this, I can carry her just fine,\" he grinned. \n\n\"I heard that, Stimmi,\" came Yalcamara's sleepy voice from the open window. \"You couldn't handle me even on your best day. I only let you think you can to build your self esteem.\"\n\nHe grinned even wider, nodding at me.\n\nI grinned back. \"All right, Stimmi. Take off. See you at four bells.\"\n\n\"Yes, sir.\" \n\n\"Does Doyya have any other clothing?\" Calia asked. \"She's only wearing a hospital gown, it's rather flimsy. She'll need something more.\"\n\n\"Doyya, give me your address. Talk to Calia and Ixma and make a list. We'll swing by your quarters and pick up some things for you.\"\n\nShe shook her head. \"Almost everything is boxed up still, sir. When I got promoted, I had to leave my enlisted quarters. I barely had time to move before going to Capisco.\"\n\n\"I see. Still, make the list and get the information to me, either by giving it to Ixma or to Calia,\" I told her. \n\n\"I'll need a new gun, phone, and laptop, sir,\" Doyya reminded me.\n\nI sighed. \"All right. I'll talk to Sergeant Chita about getting the old equipment discharged as lost, and get you replacements.\"\n\nSowitwee held out my holstered pistol. \"What should I do with this, sir?\"\n\n\"Put it back in the glove box of my vehicle. Instruct the AI to open the glove box only for adults, Corporal. I'm driving Janetta's HueCac, and leaving my vehicle here. That way, if you need to take everyone, there's room.\"\n\nThen I caught the worried look in Sisi's eyes, standing partly behind Ixma. I went to her. Crouching down, I said, \"Sisi, come here, please. May I hug you?\"\n\nComing close, she nodded, then glanced up at Doyya. \n\nI hugged her close. \"What's got you worried, Sisi?\"\n\n\"She doesn't look very good. Is she gonna die?\"\n\n\"Oh, no,\" I assured her. \"Doyya is going to be right as rain before you know it. She'll probably be sore and achy for a while, but we expect her to make a full recovery.\" Giving Doyya a look, I added, \"That's an order, Lieutenant. A full recovery.\"\n\n\"Yes, sir,\" she replied with a tired grin. \"As fast as I possibly can.\"\n\n\"That's the spirit.\"\n\nCalia gave Doyya a bottle of water with electrolytes, and she took it gratefully.\n\nI brushed the loose hair from Sisi's face. \"You know, your kiss this morning made my day really special. Kisses and hugs help other people feel better. I hear it's said that hugs and kisses from children are magical, with special healing abilities. Maybe, if Doyya allows it, you can give her one, too. And it might help her get to feeling better even just that much faster.\"\n\nSisi looked at me thoughtfully, then at Doyya. \"My hugs are magic?\"\n\n\"The very best magic, Sisi,\" I assured her. \"Do you mind, Doyya?\"\n\n\"That would be nice,\" she smiled, and leaned over. \n\nSisi leaned up and gave her a hug with a quick kiss on the cheek. \"Get better! 'Tenant says so.\"\n\n\"Yes, ma'am,\" Doyya answered.\n\nPleased, Sisi bounced up and down on her toes. \"I'm a lady!\"\n\n\"Yes, you are,\" I agreed. \n\n\"Are Mina's hugs magic, too?\"\n\n\"Very much so,\" I told her.\n\nDoyya then gave me her address.\n\n\"Calia? Get me her sizes. I need to get back to work. If you need help, give me a call. For anything else, call the Commissary and have it delivered. They should know where we are by now.\"\n\n\"We'll take good care of her,\" Calia assured me with a smile. \n\n\"Yes, we will, won't we, Mina?\" Ixma added. Mina clutched her rabbit and hid behind her legs.\n\n\"Come on, Mina,\" Sisi said, pulling her by the hand to Doyya. \"She needs you to give her a hug and kiss, too.\"\n\nMina looked dubious, but accepted Sisi's direction.\n\nThat's my girl, I thought. By the grins Ixma and Calia gave me, they were thinking the same thing. \n\n* * * * *\n\nI parked my vehicle beside the hangar and then hopped into Janetta's two-door HueCac. When I flipped the power switch, I checked the batteries. Less than forty percent. When I got to work, I needed to hook it up to the charging station against the building. \n\nSowitwee hopped in beside me. We stopped at the Commissary, and quickly took care of the purchases for him. Then we headed to work.\n\nChita and the rest of the staff present made their inquiries about Doyya. I told them she was much better than yesterday when we found her. I also told them about Sergeant Yalcamara staying awake all night to keep watch. They didn't know what Doyya had been doing in Capisco, but they knew I had worked briefly with Commander Orchid, had received my command from her, and that Doyya's mission must be more secret Imperial Security business. I would have preferred they not talk about it, but I was afraid if I mentioned it, it would make Doyya's trip seem even more important. Yalcamara's actions, too, fitted in with that view.\n\nStimmi and I planned on doing the safety check rounds that evening. I didn't expect Yalcamara to be back on duty until the next day.\n\nSergeant Matiwatli showed me his progress on the inventories, and where he was going next. I signed off on his itinerary and praised his work. Having functional emergency shelters on this forward base could save lives if we were attacked.\n\nI also checked on Sergeant Ronsat, the fourth sergeant in my unit. I hadn't talked with him except in passing. Like nearly everyone else, I had taken him into the unit based solely on Doyya's recommendation. His file said he had an electronics and computer hardware background before coming to Supply and Logistics. His current job was to keep our computers maintained and running, talking to each other, keeping our firewall secure, and to make sure our data and image backups were up to date. He asked about my laptop. I informed him he could and should keep my desktop up to date, but that neither he nor anyone else was allowed to touch my laptop. I would handle any data transfers myself.\n\nRonsat seemed competent, but after our chat, I sent an email to Doyya, with a copy to Sergeant Chita, to make sure that he had enough duties to occupy his time, but not allowing him to be overwhelmed either.\n\nRealizing I was remiss in several things, I wrote a message to my father, knowing he would immediately pass along the information to my mother. I wrote about Bilan Monaycote, stating that he and his family would be arriving with the refugees. \n\nDear Father -\n\nBilan is my brother in arms, and I have pledged to protect his family and he to protect mine. I have sent Styen along to help make sure they arrive safely. Like the refugees, they are in need of a safe place to stay. I can think of no safer place nor one filled with as much hospitality and accord than the home I grew up in. Please welcome them for my sake. I will arrive in the next week or so, and he and I will discuss more permanent arrangements.\n\nI am grateful to you and Mother for helping those families left without protection. Some of the men were no doubt motivated by greed, but the overall corruption and greed were so bad here that some faced starvation if they did not participate. My Aide is Coporal Sowitwee. His wife was even kidnaped to secure his participation! Sowitwee and Nariya are devoted to each other. They remind me of your devotion and love for Mother.\n\nTwo of those caught in the maelstrom were four-year-old Sisi and two-year-old Mina. I will tell you all the details of how it came to be, but suffice it to say that I have adopted both girls as my own. The tale of events is not for the squeamish, but I assure you that I have very happy with the choice. Mina still grieves for her family, but is beginning to bond to her new mother, Ixma. Sisi is a delight, and takes seriously her role to help watch and care for Mina. \n\nTheir full names are Sisi Topkoransa Ba'lanchicotl Kandikan and Mina Nayanoshti Ba'lanchicotl Kandikan. I wanted them to keep their surnames, so that when they become adults and wish to learn more of their blood kin, they have a starting point. Second Sergeant Zinja is Sisi's adoptive mother. Corporal Ixma is Mina's new mother. Ba'lanchicotl is their House name, and I wanted them to have a clear, legal tie to their daughters. I have written to you before about both of them. \n\nI apologize for the quality of the photos of the girls \u2013 they are from their dependent's files. I have not had time to get their portraits done nor had time to take any photos myself. I will remedy that as soon as I am able. My greatest priority is finding a new home for all of us to live in. And if she asks, tell Mother they have not yet found the culprits who destroyed our previous home.\n\nCalia, Styen, and Anton all arrived safely. I have sent Styen along with Bilan and his family to help make sure they arrive safely at Tohingo. Calia and Anton have been of invaluable assistance, helping Ixma take care of Sisi and Mina while the others recover in the Naval hospital. \n\nI know my admission will please Mother immensely, so please tell her that she was right about having Calia here with me, and I was wrong to oppose Mother's advice. I cannot discuss too much else either over the phone or by message, but when we are together, I hope to explain everything and answer any and all questions you have \u2013 barring those that I must keep as an officer of the Imperial Air Service.\n\nMother will no doubt open your home to Bilan and his family, and then be frantic to hear more about \u2013 surprise, Mother! \u2013 her new granddaughters. Again, please assure Mother that I will get photos to you and bring everyone to visit after my upcoming training is completed, and as soon as I am able to arrange things.\n\nPlease know, Father, that I appreciate more and more the wisdom you have imparted, and I also know you have more to teach me. Styen taught me to be a Warrior, and I am indebted to him for that. But you taught me to be a man, to know what is right and what is wrong, and for that I am and will remain eternally grateful. \n\nYour loving son, Ranji.\n\nPart of me hoped that Bilan's family, especially his two small boys, would distract Mother long enough for me to deal with all the pressing needs demanding my attention here.\n\nSighing, I wondered how life got so complicated. But looking back, I didn't really see how I could have done things differently. I sent the encrypted message and got back to work.\n\n* * * * *\n\nTowards quitting time, Sergeant Chita informed me that more women from the 917th Logistics were asking for escorts to their quarters, and some were asking about getting protection while going to the Commissary, the Cafeteria, and the Laundromats.\n\nThese requests certainly had merit, but our security team had other duties. Still, providing a real response was integral to making the Protection Order a reality.\n\n\"What do you suggest, Chita?\" I asked. \n\nMy Senior NCO took a long breath. \"Sergeant Yalcamara's team is small, sir. Only eight troopers. There's no way we can continue to do this on an ad hoc basis, and we are pretty busy keeping up with the list of requests as they are now. As of yesterday, the Security Team were booked for half their shift just doing safety escorts. The requests today are double that of yesterday. With only two vehicles and eight bodies, we simply can not keep up. And while what they are doing is important, they are barely able to work on any other of their assigned tasks.\"\n\n\"All right. Let's get a bus. We'll check one out from Motor Pool. Have it delivered if you can, with a driver to deliver it, drive the route, and take it back afterward. Fill out the paperwork and I'll sign off on it. We'll use the bus to drop the women off at the enlisted quarters.\"\n\nShe pulled her keyboard closer and began typing away. \"What about those who have their own place, sir?\"\n\n\"Exactly how many people are asking for escort?\"\n\n\"It's up to thirty one, sir. Twenty two reside at the Women's Enlisted Barracks, but the other nine are in cottages within the various base housing areas. When the 917th gets their replacements, there will be almost four hundred people here, and more than half are expected to be women. Plus, some of the women working in the warehouses have also asked for safety escorts.\" She frowned. \"It does get intimidating, walking to and from there, late at night. No place to run to. Not many others about.\"\n\nI leaned against her desk, folding my arms, watching as screens moved under her skilled hands. \"Plot it out on the wall map. I want to see where all the locations are. A bus already sounds like a better option. Hmm. Thirty? Better make it two buses. And likely someone will ask for morning rides as well. Might as well query the swing and night shifts, too. \n\n\"The 1025th Communications also has a Protection Order,\" I told her. \"Call them. See if any of them also want rides. I suggest contacting Third Sergeant Barris, too. She works for Field Commander Barankoshto at the 67th Armored, Ground Service. I'm sure they also have women wanting rides, especially if they know they are available. Maybe we can work out getting some buses permanently assigned to this task, with regular routes and pick up times around the base, as well as permanently assigned drivers. If we coordinate, we can share resources and manpower, so our unit is not doing all the work. Maybe some sort of job rotation.\"\n\nChita rapidly typed, filling up both her monitors with dialog boxes and open files.\n\n\"For right now,\" I continued, \"we need a bus for tonight. Paperwork for the bus and the map. Delegate, too. If you run into a road block with your requests, don't argue with them, just pass them on to me. I'd like to get a fresh look at what information we have tomorrow, and hopefully get a representative from the Ground Service to attend.\"\n\nSergeant Chita paused, nodding thoughtfully as a smile slowly formed. \"I'll get right on it, sir. I'll put a couple of people on finding out locations and putting those on the map.\"\n\n\"Hmm. On second thought, get a second wall map, reserving it for transportation routes.\"\n\nShe immediately nodded. \n\n\"We want to keep one dedicated for Auditing and Security Oversight, helping us manage our own, separate tasks. I think the transportation map will quickly become very busy. And detail someone to do a digital version, with access by you, myself, Lovyanchiti, and Yalcamara.\"\n\n\"Yes, sir.\" Chita paused typing and wrote busily in her notebook.\n\n\"Do you need a third monitor, Chita?\"\n\n\"Already ordered, sir,\" she said, still busy writing.\n\nWhen she paused, she saw me watching her. I grinned, and she did, too. Then we both burst out laughing. \n\nThen I spotted two men wearing work coveralls and carrying paint cans, brushes, and a ladder coming through the office doors and heading our way.",
        "Getting up, I intercepted them. \"Hello. Can I help you?\"\n\nOne man held out his clipboard. \"Here to see a Second Sergeant Chita, Lieutenant.\"\n\n\"She's right there. And you are?\"\n\n\"Painters, sir, from the 311th Maintenance and Support Battalion. We're here to put up your unit insignia, sir.\"\n\n\"With your permission, I have this, sir.\" Chita stood and came forward.\n\n\"Very well, Sergeant. Carry on.\" \n\nShe scanned their work order, then turned around, giving instructions and pointing out where they were to work.\n\nI hadn't even thought to arrange to have that done. Having the unit insignia on the wall, bright and bold for everyone else to see would help build unit cohesion. Chita was doing a good job, picking up on the details I missed. Doyya had picked her, too, I recalled. Another good call by my Second.\n\nI retreated to my desk, and followed up on some personal phone calls. One was to SSgt Gerlotsl of the Quartermaster's Office. It turned out there were five larger homes available, with two of them quite close to the airfield. I made arrangements to meet with the second sergeant at the Commissary the next day at lunch time, my treat. He readily accepted.\n\nI then called Lieutenant Tonkchawanda at Building Safety about having a Housing Inspector come with me to the available houses. He assured me that Third Sergeant Neela from his office would contact me in the morning for scheduling. \n\nWanting to cover my lack of construction knowledge with more expertise, I made a call to First Sergeant Kitam of the Ground Service Mobile Engineers. He said he could only do things after hours for a consultation fee. Otherwise, I would need to clear it with his commanding officer. If I wanted a faster assessment per house, I could hire his picked work team. I was agreeable to having him work after hours and to his using the extra help. We worked out an acceptable rate per house. \n\nTruth be told, I didn't mind the extra expenses. I wanted us settled into a home before I had to leave for my ten weeks of training, and I was willing to spend the needed credits to get it done on time. The women could manage it if I weren't there, but they were my family. It was my job to take care of them. Having a place to live was integral to that care. The notion I might have to leave before finding us a new home galled me.\n\nWith my two new daughters, and the arrival of Calia, things on my to-do list had ballooned. Yet to balance that, Ixma and Calia had joined forces and they were both doing their part to help \u2013 visiting the hospital during the day, taking the women food and personal items, which I heartily approved of. Janetta, Zinja, Cholan, and Nariya had all enjoyed the pampering that Calia and Ixma had arranged.\n\nAll too soon, it was nearly quitting time for the day staff. Chita sent a map link to my laptop of the transportation locations, along with a suggested bus route. I also saw an email from Chita that went out to the 917th, announcing that a bus would be available for those requesting safety rides. With it, she outlined a process for those who wanted to make use of the service. Then I noticed that the email had also included Lieutenant Melia Jonje, CO of the 1025th Communications and TSgt Barris Tarakansotl of the Ground Service, with invites to attend a staff meeting tomorrow at nine bells to further discuss the matter.\n\nLess than an hour later, I had an email from Commander Barankoshto herself, assuring me of her full support for the bus plan. A Captain Billoksl and an aide would be there the next morning to attend our meeting. Lieutenant Jonje also sent her confirmation of attendance.\n\nSupport from the Commander meant a lot. Remembering how she sat on her tank, music blaring, flanked by deadly support vehicles as she helped Melannee escape, I pitied the fool who ever stood in the Commander's way. Then I noticed the tag line under her name. No longer Field Commander, but promoted to full commander, CO of the 1st Brigade for the 67th Armored and the division's Second in Command. \n\nI had to grin at the revelation. Her people seemed devoted to her, and she did have a way of getting things done. Good for her, I thought. Remembering her perched on that massive tank with its huge double-barrel main guns, and I pitied anyone who dared get in her way.\n\nAt five bells, a driver from Motor Pool entered the building, announcing that the bus had arrived.\n\nCaptain Xotochan, CO of the 917th and my boss, showed up by my desk just as I slipped on my garrison cap and collected my satchel.\n\n\"Something I can do for you, sir?\" I asked him.\n\nHe scanned my work station before answering. \"I've been seeing half a dozen emails today from your Sergeant Chita. Tell me about this bus thing.\"\n\nI quickly outlined what I had in mind, and the plan to coordinate with Ground Service on the resources, such as with drivers and buses. Those wanting the safe passage could apply to use the service, and we'd provide the transportation.\n\n\"We have that Protection Order in place for our people, sir. This helps them get places faster and safer. I don't want there to be any more of our people injured like Corporals Rilli and Meba. The buses will help us enforce that Protection Order, and I think it will improve morale, showing that we mean to stand by our Order and keep them safe.\"\n\n\"I want to be there at the meeting tomorrow. This is sort of a Motor Pool thing, but also fits in with Logistics.\"\n\n\"We'd be glad to have you there, Captain.\" I was surprised at his interest, but thought I'd keep an open mind about it.\n\n\"It will be useful, I think, to hear about tonight's experiences at the meeting tomorrow. Carry on, Lieutenant.\" Then he left.\n\nIt turned out that Chita herself was a rider. \n\nI unplugged the charging cable from Janetta's HueCac. Sowitwee rolled it up and put it in the storage locker abutting the building. Batteries were at one hundred percent. Once Sowitwee climbed in beside me, I flipped the power switch, and the electric engine quietly hummed as the dashboard lights blinked to life.\n\nStimmi pulled up behind the bus in Yalcamara's ChoCac. I was surprised to see Yalcamara herself riding in the passenger side. Then I shrugged. I'd given her the time off, but If she wanted to ride with Stimmi, that was her call. She was the head of the Security detail.\n\nWe coordinated the route with the bus driver, and all in all, because of some backtracking, it took us almost three hours to deliver everyone across the base. Chita had arranged for a second bus to do the pick ups in the morning, to the pleased responses from the riders.\n\nJust before quitting, I had received the list of clothing and items needed by Doyya from Ixma. \n\nPart way through the bus delivery, Sowitwee and I swung by the Women Officers Dormitory, and after some security checks to verify I was her commanding officer \u2013 and as long as we were accompanied \u2013 they allowed Sowitwee and me in to retrieve items for Doyya. It took us some time to find the items, under the stern gaze of the OD and her armed assistant. Men were normally not allowed in the barracks at all, and they took that regulation seriously. \n\nA few items on Doyya's list eluded our search, and I elected to pass on them and purchase replacements at the Commissary if needed. Seeing the whole of her possessions, if I'd had my ChoCac instead of the two-seat HueCac, I would have simply collected all her gear. As it was, I could only take two of her seven boxes and an armful of her uniforms from her closet.\n\nBecause Doyya's absence had partly inspired the purchase of the locator bracelets, I slipped the one I'd purchased for Doyya into one of her boxes of clothing on her bed. Once we were loaded up, I drove us to the Married Enlisted Dormitory, Sowitwee's old quarters, to find out the results of this morning's encounter.\n\nFrankly, I hadn't expected much of a response to the theft, though I'd been serious about reporting them to Imperial Security. What surprised me was their presenting an Air Security report documenting the theft of Sowitwee and Nariya's possessions. No credit voucher. Inexplicably, there had no mention of the break in during my encounter that very morning. They were very unhappy when I demanded a copy of the report. However, I insisted. Sowitwee's silent glare and my loosening the holster strap on my pistol probably helped, too.\n\nGlancing at the report, I saw that it was signed off by a Captain Tonca at the 602nd.\n\nI had yet to meet the man, but I was already pretty sure that we were not going to get along.\n\nOutside the building I handed the paperwork to Sowitwee, telling him to file it with Sergeant Yalcamara or Corporal Trank in the morning. Then I asked if he believed their story. \n\nThe young man shook his head. \"There are snakes loose in the henhouse, sir, and that's a fact.\"\n\n\"My thoughts exactly,\" I replied. \"If I can, I intend to get me some snake-skin boots.\"\n\n\"Now that I'd like to see, sir,\" he grinned.\n\nWith a quick radio check, we met back up with the bus along its route, falling in behind Stimmi and Yalcamara's vehicle. \n\nI called Ixma and explained that we were going to be a while, and to make sure everyone had dinner.\n\n\"Have you eaten, Lieutenant?\" Ixma inquired.\n\n\"No. We'll grab something when we pick everyone up before heading to the hospital.\"\n\n\"No, you're not,\" she informed me. \"We will have something hot and ready for you both when you get here. And you are on notice that both of us will want to see you eat your meal.\"\n\nI laughed. \"Yes, ma'am.\"\n\nI heard Sisi's bubbling laughter in the background. \"She's a ma'am! Just like me!\"\n\n\"Thank you, Lieutenant,\" Ixma said, pleased. \"Please come home as soon as you can.\"\n\nOther than the time involved, there were no incidents, and we had thirty one happy riders. After bidding good night to the driver, and seeing off Yalcamara and Stimmi, we headed to Hangar Thirty-Six.\n\nGroup Captain Tanosca, Janetta's commanding officer, was waiting for us by the hangar doors when we arrived. The captain looked irritated and Ixma appeared anxious.\n\nAs soon as I got out, he glared at me and pointed into the bay. \"That office. Now!\"\n\nOnce the door was closed, his hands went to his hips, growling. \"All right, Kandikan. Just because you are Tlacotli's lover is no excuse for setting up living quarters here. This is an aircraft hangar for the 233rd Interceptor Group, not a damn hotel! And I'm told the brevet officer, your Second, is recovering from gunshot wounds! Why isn't she in the Naval hospital? And she has refused to answer any of my questions, telling me I had to talk to you for any answers. Last time I checked, you were not in my unit. So I want to know, what the fuck are you doing camped in my hangar?\"\n\n\"Do you want the sanitized version, Captain, or do you want the truth?\"\n\n\"Don't fuck with me, Kandikan!\" Captain Tanosca snarled. \"I want the truth! You impressed me with your response about the compromised diagnostics computer and the attempt on Tlacotli's life. But try and play games with me, and I will lay in charges against you. Now answer the damn question!\"\n\n\"Very well,\" I replied. \n\nI told him about what happened to Janetta's quarters, and then to Sowitwee's possessions. As I talked, his anger drained away. \"I have made inquiries to see if this is a local problem or if this harassment is directed from outside this base, to be dealt with cautiously. Do I go on, sir?\"\n\nCalmer, he nodded. \n\n\"During the past week, at least six draconian agents using camouflage technology have been found and killed, and yes, that includes the two that hurt Captain Tlacotli, Sergeants Zinja and Cholan, and Corporal Ixma. These alien agents were responsible for the attempted massacre on the beach a few days ago. That was after they murdered Commander Orchid's Aide and took his place, using their cloaking tech to impersonate him. Yes, most people don't know they can do that. If they can impersonate anyone at will, that puts us at a terrible disadvantage!\n\n\"There's a lot more, Captain. The Condor that blew up yesterday morning? I have no doubt its destruction was at the order of Minister Supay of Imperial Security himself, partly to cover up knowledge that draconians had easily infiltrated Imperial Security. The woman who came with you to give the promotion to Captain Tlacotli is now on the run for her life. I see by the look on your face, you suspect her real identify. My Second was providing her protection detail in Capisco when assassins attacked them. Two of those assassins were Imperial Security. The third one, however, turned out to be draconian. Though injured in the line of duty, she and my Second are still standing. Shall I continue?\"\n\nHis gaze narrowed. \"Holy hells, Kandikan. Just what do you think you are doing?\"\n\n\"My job! Serving the Empire! Helping root out the corruption that poisoned this War base. And in the meantime, I'm trying my best to keep the people I care about alive. A lot of people have died here in the last month, and while the draconians have been responsible for some, a surprising amount of the casualties were from our own people.\" \n\nI took a deep breath. \"I'm already in the process of getting new quarters, and I hope we will be out of here by the time Captain Tlacotli is discharged from the Naval hospital. Now shall I go on?\"\n\n\"Blazes! There's more?\"\n\n\"Oh, yes! Plenty, if you are interested. I don't know how safe it is for you or anyone else to know, however. But I'm getting push back on enforcing the Unit Protection Orders. As an aside, I want you to know you have my gratitude and my personal admiration for your own order for the 233rd. I am now in command the 945th Auditing and Security Oversight. For the moment, security seems to be our main priority. I want to be clear that I will do whatever I can to enforce the Protection Order for my people, and for those other units that want them.\n\n\"When I first received my command and issued the Protection Order, I wanted to make sure I credited you as the man who started it all. Now, I'm not so sure that was a good idea. I do not want to endanger you without your consent. My own feeling is that it was \u2013 and still remains an honorable action by an honorable commanding officer, looking to protect his junior officer. Janetta respects and admires you, Captain. However, I won't mention you any further without your agreement.\" \n\nHe looked surprised, then nodded his acknowledgment. \"Go on.\"\n\n\"Commander Orchid publicly gave her blessing for the issuance of Unit Protection Orders. Unfortunately, her disappearance has cooled any further support. Be assured, I will do whatever I can to see that the idea of the Unit Protection Order not only survives but expands.\"\n\nCaptain Tanosca gave me an appraising look. \"You will probably get yourself killed, Lieutenant.\"\n\n\"I'm becoming acutely aware of that. They will have to get in line. And I fully intend to give a good accounting to any that want to try. While I am aware that I am making enemies, I am also gathering allies. I will find out who is who as I go along. The Empire needs loyal warriors to protect our people. High Guard is our front-line defense against Atlantis. The Unit Protection Orders help place women on a more equal footing, so they can do their share without having to be afraid of being hurt by their fellow warriors. I'm not some starry-eyed philosopher expounding foreign ideas. This change is both practical and right. Indeed, I firmly believe the safety and morale of this War base truly depends on these Unit Protection Orders. While all this internal shit is going on, Atlantis is not sleeping. When they come knocking \u2013 and it's only a matter of when \u2013 I want us to have a decent chance of bloodying their nose when they do.\"\n\nCaptain Tanosca studied me for long seconds. \"All right, Lieutenant. I hadn't actually given a full Unit Protection Order. My original orders only covered Captain Tlacotli herself. You can mention me or not as you will. But now that it's been pointed out, I will amend that deficiency regarding my own unit in the morning. In the face of your insane heroics, what else can I do?\"\n\n\"Thank you, sir.\" I ventured a smile at him. \"While I loathe the idea of seeing her in any danger, Captain Tlacotli would be my first choice to have by my side in a firefight. \n\nThey generally haven't said so, but these Orders mean a great deal to the women, sir, officer and enlisted both, and to a lot of the men, too. Like the men, most of the women in the Services just want an honest chance to serve the Empire. Believe me, I understand there will be resistance. But many are ripe for the change, and I daresay even eager for it.\"\n\n\"You are persuasive, Lieutenant.\" He let out his breath as the last of his tension slipped away. \"While you didn't have my permission, at least now you have my forgiveness for your trespassing. Keep me informed on what's going on here, Lieutenant. Soon, and I mean very soon, Lieutenant, there will be a fighter aircraft sitting in this bay, and there better not be beds or children here when that happens. Am I clear?\"\n\n\"I read you five by five, sir,\" I answered. On a radio scale, that meant his words were crystal clear and at the strongest power.\n\n\"Now that that's settled, what are those women cooking?\" He inhaled slowly, lifting his face and turning to face the door. \"The food smells intriguing, and I must confess, it's making my mouth water.\"\n\nSuddenly I grinned as I opened the door for him. \"I'm sure Calia and Corporal Ixma would be honored if you would stay and eat some of what they have prepared. After you, sir?\"\n\nAlmost as soon as we exited, Calia approached, presenting the captain with a plate of hot food. The cardamom with the rice and the curried potatoes garnered his approval, so Calia offered to share the recipes with his wife. While Sowitwee and I quickly ate, Calia kept up a constant chatter, asking about the Captain's family and his interests. He was a little guarded at first, but Calia soon had him laughing and enjoying himself. When he was ready to leave, the captain was given a carry-bag with containers of food to take and share with his wife. Assured there was plenty to spare, he was also given a six-pack of cold millet beer. With both of his hands full, Group Captain Pentil Tanosca left Hangar Thirty-Six a much happier man.\n\nI glanced at Calia, giving her a slow nod. She just grinned and winked at me before helping with the cleanup. I had defused the situation, but Calia had wrapped it up and put a bow on it.\n\nThe relief on Ixma's face as they worked and quietly chatted was obvious. \n\n\"Corporal Sowitwee?\" I said, after taking a drink of bottled water.\n\nClearing his mouth of food, he replied, \"Sir?\"\n\n\"Tomorrow, I want you to contact Sergeant Vanu. He's the aide for Captain Tanosca \u2013 who just left. Find out if the Captain has a refrigerator in his hangar and let me know.\"\n\n\"Grease for the skids, sir?\"\n\n\"Just so,\" I nodded. It wasn't a bribe, but rather a gift of thanks for the forgiveness and permission to stay a bit longer. He could have ordered us out. It was within his rights to do so. But he didn't. Like Ixma, the last thing I wanted was for Janetta's commanding officer to be angry at me and indirectly at her when she returned to duty.\n\nIt was already quite late, but I made sure I spent some time with Mina on my lap and asking Sisi about what she had done that day. \n\nThe older girl was a little shy, but she talked about how much she enjoyed listening to music on her tablet, and to the many stories Uncle Anton read them. Sisi picked out a story on her tablet and I read it to them both. To my delight, I got nice, solid hugs from them both before Ixma and Calia collected the girls. It was time for them to brush their teeth and go to bed.\n\nI loved the women in my life. Janetta, Zinja, Cholan, Ixma, and Calia, and treasured their love for me. But I found the new role of father addictive in its own way. I wanted more. What had been an impulsive decision of support for Zinja was now a tangled web of Zinja, Ixma, two small girls, and myself, and gods willing, would be so for decades to come. ",
        "Calia was right. It takes hope to have a children, and they give hope in return. Very soon, I would have to stop putting off Calia's request for a child of her own. I owed her that. After my return, I resolved.\n\nWhen the girls were done with the sink, I shaved, brushed my own teeth, and put on a fresh shirt and neckerchief. While I cleaned myself up, I explained to the two women that for the next night or two, I'd be checking out potential living quarters.\n\n\"Let us come with you,\" Calia suggested. \"You should have a woman's feedback, Ranji. We sometimes have different priorities, you know.\"\n\nI certainly couldn't argue with that. \"What about the girls?\"\n\n\"They can come with us,\" Calia replied. \"Corporal Sowitwee and Anton can stay here and make sure your Second has someone to give her a hand if she needs it.\"\n\n\"Are you coming back tonight?\" Ixma inquired.\n\n\"Probably not,\" I admitted. \n\nBoth women drew closer to me.\n\n\"Say hello to my Mama for me, sir,\" Ixma said, reaching out, running her hand along my arm.\n\n\"You and the girls aren't coming for a visit?\"\n\n\"No. We already went by this afternoon,\" Ixma explained. \"These late nights aren't good for the girls. They need regular meals and a regular schedule with plenty of sleep for growing bodies. The sooner their lives resume a regular routine, the better.\"\n\nCalia gave her an approving look. Ixma, pleased at her support, straightened up a bit more.\n\n\"All right, Little Mama,\" I grinned. \"I defer to your expertise.\"\n\nThey both moved in then, wrapping their arms around me, one under each arm. \"We will miss you,\" Calia said, breathing along my neck. \n\nIxma rubbed my chest, then let her hand descend, tracing the outline of my crotch. \"We will really miss you. A lot.\" She looked up at me. \"We both love you and we love making love to you, as often as you will let us. You know that, right?\"\n\n\"I surely do, Ixma.\" I laughed and kissed them both. For several minutes we stood there, enjoying the comfort that touching and holding each other provided.\n\nI was going to give Ixma my stunner for protection, but then remembered I'd given it to Styen when he left with the freighter full of refugees. I needed to get a replacement. Two, I amended: one for me and one to leave at home for their protection.\n\n* * * * *\n\nOn the way to the Naval hospital, Sowitwee dozed.\n\nInterestingly, I noticed that some of the on-duty marines standing guard at the hospital gate nodded to us. I returned their acknowledgment. \n\nOnce inside the hospital itself, I suggested we stop by the gift shop, and gave Sowitwee a twenty-credit note. I knew he hadn't been paid yet since all this chaos began, and that Finance had yet to free his account. \"You love your wife, right? So don't argue about the money. Just get something nice for her.\" \n\nHe looked at me, his face full of emotion. \"Thank you, sir.\"\n\nI browsed and bought chocolate samplers for Janetta, Zinja, and Cholan. \n\nWhen we were done shopping, I sent Sowitwee upstairs while I checked on the status of Rilli and Meba. Both were stable, and on learning their room number, I swung by for a visit.\n\nThey were in an open ward with dozens of other beds filled with people recovering from various mishaps and surgeries. \n\nI didn't know Meba right away, but once I saw her, I did recognize her. The black eye and bruises on her face and neck disturbed me.\n\nRilli was worse. Her face was in a brace like Cholan's, and one eye was completely covered. Her arm was in a cast supported by a sling, and her mid-section was also bandaged. She appeared to be asleep.\n\n\"Lieutenant,\" Meba acknowledged quietly, her voice hoarse. \"Four visitors in one day. I didn't know so many people cared.\"\n\nI smiled. \"Four is pretty good all right. I won't stay long, Corporal. I just wanted to check in and see how you are doing.\"\n\nTrying to stretch a bit, she winced. \"Bruises mostly, two cracked ribs. Still hurts to pee. But I'm fit enough I'm being discharged tomorrow for light duty only, no lifting. Rilli will be in here for a while, though. Three teeth knocked out, fractured jaw, fractured arm, and they had to remove her spleen. They're not sure about her eye yet.\" Meba laughed bitterly. \"Both of us were supposed to be in Capisco today, but after the sergeants were done, neither one of us needed the trip.\"\n\nMeaning that the beatings had caused spontaneous abortions. \"Any complications?\"\n\nShe shrugged. \"They are doing a check before I leave, but not as far as I know. Corporal Trank said that you had them both flogged. Is that right, sir?\"\n\n\"Twenty strokes each. They also were supposed to get demoted two grades and sixty days in the stockade, but I was overridden. But they did get the lashes. I witnessed it myself.\"\n\nMeba smiled faintly in satisfaction. \"Thank you, sir. No one's ever done that for me before. Made them pay like that, I mean. Your Corporal Trank said you were getting us buses, to keep us safe, to and from work. Is that for real?\"\n\n\"It is. We did the first run tonight. Thirty one passengers. We expect the number of riders to grow. There's interest and support from the Ground Service as well. If it helps enforce the Unit Protection Orders, I will do everything I can to make this happen.\"\n\nI had expected the news to cheer her up, but it didn't. \"Is there something wrong, Meba? If there's something out of line, I'd like to know. Maybe I can help.\"\n\nShe hesitated, then said, \"A Captain Tonca from Air Security came by this afternoon. He suggested that we had mis-identified our attackers.\"\n\n\"Not possible,\" I told her. \"There are two Air Security witnesses to your assault, and they identified both of them to me. They won't recant, I assure you. They work for me.\"\n\nMeba didn't look convinced. \n\n\"All right. Well, you have my wishes on a speedy recovery for you both, Corporal. Do you have anyone coming by to pick you up?\"\n\nShe shook her head.\n\nI wrote down my number on a piece of paper, and beside it, Sergeant Chita's number. \"Give us a call when you get discharged. Someone from our unit will come by to pick you up.\"\n\nShe looked surprised. \"Sir?\"\n\n\"Walking several rads with cracked ribs isn't a pleasant task. Trust me, I know how much it hurts.\" I paused to let the next words sink in. \"I am one of your officers. I take care of my people. You are mine, Corporal, so I will do my best to take care of you, too. Good night.\"\n\nShe just stared at me as she laid back on her pillow, my card clutched in her hand.\n\nI went back to Reception. Three thousand credits wasn't much of an expense with the funds I had. Meba would heal in time, but Rilli could actually end up mustered out due to her injuries. I remembered her fear of her father and uncle. She was no longer pregnant, but getting mustered out early and returning to a difficult home life was something I could help her avoid. I paid the credits for her to be fully healed using the nano-technology. \n\nThen, because of the visit by Air Security Captain Tonca, I hired two armed marines to keep watch on the Corporals. I made sure they had my contact information. The corporals were to only have contact with medical staff and from members of the 917th Logistics and Supply or from the 945th Auditing and Security Oversight.\n\nWhen the marines arrived, I escorted them to where the Corporals were assigned. \"Any other visitors have to be cleared with me first. No exceptions, even if they are an officer. And you make sure your relief knows this, too. Any questions, give me a call. Day or night. Understood?\" \n\n\"Aye, aye, sir.\"\n\nMeba stared at me. \n\n\"You are mine. I protect my own,\" I repeated to her.\n\nAfter I was done, I sent an email to Marine Lieutenant Terapan, letting him know about the situation, including Captain Tonca. The Naval hospital appeared to be his assignment, and I felt he should be aware of further possible interference that might come.\n\n* * * * *\n\nUpstairs, I entered the room assigned to Janetta and the others. The marines on guard checked me out. Sowitwee was curled up with his wife, Nariya, on her bed, whispering quietly to her. Zinja and Janetta were both asleep as well. Cholan was awake, however, and I immediately noticed the brace around her jaw was missing. \n\n\"Hey!\" I exclaimed in delight, running my fingers along her cheek. I tried to be quiet but I was also excited about this development. \"This is good news! Does this mean you can eat solid food now?\"\n\n\"Soft foods only right now, and only a little bit, until I get used to eating again,\" Cholan answered quietly, blushing at the touch. \"My jaw still hurts to talk, but it feels so good to have it off.\"\n\n\"Here, this one's for you.\" I handed her the wrapped box of chocolates. \"Let me set these next to Zinja and Janetta, and I'll be right back.\"\n\nShe made an excited noise as she opened up the box. She inhaled the fragrant, sweet scents, then looked at the lid for the list of what the confection contained. Selecting one, she popped it into her mouth, chewing slowly, groaning in appreciation. After several days of liquid diet \u2013 and hospital food at that \u2013 it had to taste heavenly.\n\nI sat down next to her. Chewing another sweet, she moved her computer aside and leaned against me, sighing happily.\n\nPutting my arm around her, I gave her a kiss. \"I'm happy you are better, Cholan. I really am.\"\n\nShe smiled and gave me a gentle kiss in return. \"I love you, Lieutenant.\"\n\n\"Ranji?\" came Janetta's groggy voice. \n\nCholan grinned, pushing me away. \"Go to her. She needs you.\"\n\nMoving to Janetta, I reached down, caressing her hair. \"Hello, my love. I expected you to be awake. What's going on?\"\n\nShe turned to face me, remaining on her stomach. \"Slipped and fell getting out of the fucking nutrient tank this afternoon. Pulled a damn groin muscle. Really hurts to walk. Took a pain reliever that didn't touch the pain, but it sure fucked me up. I hurt and can't really sit up without getting dizzy. Can't spread my legs 'cause it hurts even worse to move 'em. The session tomorrow is supposed to heal it, but until then, I'm not only miserable, but I want to feel you inside me, and I'm pissed I cant do anything about it.\" \n\n\"That's awful, Janetta!\"\n\n\"That's what I'm saying!\" she snapped. Then, \"Sorry, Ranji. Not your fault.\" She looked past me to Cholan. \"Give me a kiss, then give her some attention, Ranji. She'd like that. When you are done, crawl in beside me and hold me because I need to feel your arms around me.\"\n\n\"All right, my beautiful, brave warrior.\" Leaning in, I cupped her face and kissed her, long and gentle. And I smelt the familiar scent of oranges from her. Breathing deep, I kissed her again. \"You smell so good, Janetta.\"\n\n\"Huh. Yeah. Was a good day 'fore I hurt myself.\" She closed her eyes. \"Dizzy. Wanted more of last night ...\"\n\nCholan spoke up. \"She's been like that since the nurse gave her the pill. Fading in and out. I think they need to use a different pain med for her. She still hurts but makes it so she doesn't care or at least complain about it. Grab a condom while you're there, sir?\"\n\nStanding up, I raised my eyebrows at her. \n\n\"I don't know if I can,\" she admitted, flushing. \"But I'd like to try.\"\n\nI picked one from the box on Janetta's table. \"Marines?\"\n\n\"Back in an hour, sir?\" ventured the corporal.\n\nPulling out my wallet, I handed him three five-credit notes. \"Make it two, and lunch is on me.\"\n\n\"Yes, sir!\" he grinned. \n\nAs he left, I turned off three of the four banks of lights, then went to Janetta's closet. Removing my neckerchief and most of my clothes, I was soon down to my shirt and underwear. As I approached Cholan, I unclipped the holster from my belt, setting it on the roll-around table beside Janetta's bed.\n\nHearing a sharp feminine gasp, both of us turned. Sowitwee and Nariya, under the sheet, kissing as they faced each other, her thigh over his hip, slowly moving together.\n\nCholan grinned at them, then at me. She removed her hospital gown. Her lower ribs were still wrapped in tight bandages, acting like a tight corset for her large breasts. Laying down, she scooted back against the bed rail, patting the mattress in invitation.\n\nI handed her the condom and crawled in beside her. I moved until my face was level with hers. For several minutes, long and pleasant, we kissed. As arousal grew, our hands ventured and mouths roamed. Eventually I moved down. Her nipples were covered, so my fingers found her wet, lower lips, and Cholan drew in a deep breath.\n\n\"Oh, yes,\" she hissed, rubbing her mound against my hand. \"Oh, that feels so good! Mmm.\"\n\nWhile my tongue brushed and flicked along her neck, Cholan wiggled and squirmed, gasping in delight. Exploring her center, my fingers caressed her soft folds, then pressed into her growing heat, before moving back up to her hidden nubbin of joy. Rocking her hips with more urgency, she clutched my hand, holding me at her center.\n\n\"Oh, sweet Jade goddess, you feel so good. Oh, yeah!\"\n\nSometimes my fingers slipped past her outer lips, exploring her opening core. Cholan huffed and whimpered as she picked up the pace. Suddenly grabbing my hand, she ground her mons against it. Body quivering, she gushed liquid heat that spilled over my fingers and doused her thighs and the mattress. Then just as quickly, she pushed me away, clamping her legs closed while she gasped for air.\n\nGetting up, I flicked off the last light, triggering the pair of night lights along the wall. At a shelf, I retrieved a pair of large towels. Opening one up, I told her to lift up, then slid it under her. \n\n\"We aren't done yet, are we?\" she asked.\n\n\"Not hardly. Scoot down some more. That's about right.\" I moved to the end of the bed, and leaning over, pushed open her legs. \n\n\"Oh, no, sir. I don't\u2013\"\n\n\"Cholan!\"\n\n\"Sir?\" \n\n\"This isn't just for you. I like doing it. Now spread your legs for me.\" \n\nAmazement and love filled her face. \"Spreading for you, sir. Oh, my sweet Jade goddess, you're making my toes curl. Ah! Oh, I love you! I \u2013 oooh!\"\n\nI licked and kissed my way to her opening flower, moving closer, then around her dripping center, and closer again. Teasing her, building anticipation. When my tongue finally laved the edges of her soft petals, she whimpered as her legs jerked. Her clit was fatter, standing more prominent at the top of her swollen, darkened vulva.\n\nLapping up her flowing juices and probing deep with my oral digit, sometimes I lightly kissed her folds or just passed a hot breath over sensitive skin, causing Cholan to groan. Slowly she rolled her hips as I plundered her open cavity, her hands caressing my hair.\n\nThen I slipped in two fingers, turning until I caressed the soft spongy bit just past her pubic bone. She gasped and humped harder, yet slower, with more intent to each thrust. Then arching, she turned and pulled her pillow to her face and screamed, muffling her release as her swollen sex pulsed and gushed for a second time. Reaching up with my mouth, I flicked her erect nubbin at the top of her quivering lips several times, then sucked on it directly. Cholan froze, holding her breath for long seconds. Then she bucked hard once, froze for several seconds, then bucked hard a second time before her quivering, leaking tunnel began opening and closing around my fingers.\n\nBreathing heavily, she finally pushed me away before rolling to her side and curling into a ball, whimpering as tremors wracked her small, chubby frame. Moving up onto the bed, I slid behind her and drew her into my arms, wrapping my body around hers.\n\nClutching my arms tightly, she whispered, \"Can I be yours forever?\"\n\nKissing her head, I nuzzled her ear. \"You already are, Cholan.\"\n\n\"I want you inside me so bad, but I don't think I can. My ribs and my jaw ache just from what we did and \u2013\"\n\n\"It's okay. You are still healing. Besides, I loved making you come for me.\"\n\nShe turned around in my arms, then leaned up to kiss me. \"You made me come good. I want to make you feel good, too, Lieutenant.\"\n\nCaressing her face, I kissed her gently, yet thoroughly. \"Love is give and take. Sometimes we take more, sometimes we give more. It's all good, Cholan.\"\n\n\"I really want to please you,\" she sighed. \"Maybe I could use my hands on you?\"\n\n\"Or you could let me take care of him,\" Zinja offered from across the room. \"I promised the Lieutenant a nice blowjob, and if he's interested, I would like to give it to him.\"\n\nCholan looked at her in surprise. \"I thought you were asleep.\"\n\n\"I was,\" Zinja replied. \"But the smell of sex and all the grunting woke me up. So what do you say, Cholan? Let me have my turn?\"\n\nShe looked into my eyes thoughtfully. Then she grinned, patting my chest. \"She's your woman, too.\" Leaning up, she kissed me. \"Thank you for loving me, Lieutenant.\"\n\n\"My pleasure, too, Cholan.\" I gave her another slow kiss. \"Besides, I will get you eventually. Couches, Cholan.\"\n\nBiting her lower lips, she looked at me hungrily and moaned. \"That's so hot. I can't wait to come for you.\" \n\nTaking a slow breath and giving herself a shake, she slipped the hospital gown back on and pulled up her blanket, laying on her side. \"Go to Zinja. I'm going to watch. See if I can learn anything.\"\n\nI moved to Zinja's bed. \"Are you sure about this?\"\n\nShe scooted back, making room for me. \"Shoulder aches a bit, but my mouth is just fine. They did some of the work up today, but the nano-treatment isn't starting until tomorrow.\" Her brown eyes were full of emotion. \"Thank you for the healing, Lieutenant. I don't\u2013\"\n\n\"It's all good, Farm Girl. We're family now.\"\n\nGrinning, she patted the thin mattress. \"Right here, sir. Lay down beside me and I will make you feel good.\"\n\n\"Nope,\" I grinned. \"You saw what I did to Cholan. Now it's your turn.\"\n\n\"What? There's no need for you to do that.\"\n\n\"I know that. I want to. I enjoy licking pussy, Zinja.\" \n\nJanetta snorted, mumbling, \"Ranji, you are such a pervert.\"\n\n\"Don't you listen to her,\" I told Zinja. Moving to the end of the bed, I leaned over, running my hand over the thin blanket covering her long, lean legs. \"Come on, scoot down.\" \n\nShe smiled faintly. \"Come on, sir. You do so much for us. Just let me do something for you.\"\n\n\"Farm Girl, I enjoy taking care of you. I loved drinking up Cholan's juices, and now I want to taste yours. I only wish that I could have Janetta feel good, too, as I'm sure it would make her feel wonderful. Good enough to curl her toes even. So, what do you say? Scoot down, so I can give some you personal attention, drive you crazy until you come on my face? Hmm?\"\n\nShe looked at me and I gave her a grin and wiggled my eyebrows.\n\nZinja burst out laughing, then grabbed her shoulder. \n\nConcerned, I asked, \"Shoulder still hurt?\"\n\n\"Not as much, but it still aches when I move too much.\" \n\nShe started to move, but I leaned in, cupping my hands around her face. Zinja stared, frozen. Moving in slow, I homed in on her lips, running my teeth along her lower lip. Her face gentled, and then she whimpered as my tongue pushed past her lips, invading her mouth. Then she wrapped both arms around me, her tongue fencing with mine. I held her close, breathing her in. \n\nWhen at last we broke apart, we were both out of breath. \n\n\"What you do to me,\" she sighed. \"You make me wetter than any other man has ever done.\"\n\n\"I intend to make you gush like a river, Farm Girl.\"\n\nInhaling sharply, she bit her lower lip in anticipation.\n\nKeeping my eyes locked to hers, I got up and moved down to the end of the bed. Pulling off her blanket, I then reached for her legs, pulling her closer to me. Zinja's eyes widened. Leaning over, I pushed up her hospital gown, then slid my hands between her legs to open her up.\n\n\"Oh, gods,\" she groaned, accommodating me.\n\nKissing along her inner thighs, her body trembled. I moved closer and closer to her fur-covered treasure. Reaching out with my tongue, I ran the length of her delicate petals. Zinja whimpered, then gasped. Easing up and slowly down. Gently coaxing. And like a flower opening to the sun, her swelling lips darkened and moved apart, revealing the inner, dewy, pink tunnel leading to her core. Using my fingers, I pulled her nether lips open even wider and began a careful, thorough plundering. ",
        "Grunting and gasping, Zinja's hands moved down, running through my hair, gripping me tight when I circled the hard nubbin at the top of her mound. Moving her hips, she ground against my face, mumbling her pleasure. I couldn't quite make out her words. Maybe, \"Shano kye. Shano kye 'nam owa.\" Possibly something in her native Oexacan.\n\nFor long minutes I devoted myself to exploring her fragrant, slick womanhood. Small cries escaped and her breathing deepened. Licking up all she gave me, Zinja opened her legs still wider, losing herself in the sensations emanating from her dripping crevice.\n\nZooming in on her fat, erect clit, I flicked it with my tongue. She arched her back, groaning, pressing her mound to increase the contact. Her hands grabbed fistfuls of my hair as I began sucking and humming around her erect nubbin. With a grunt, she partially lifted up, suddenly gasping out. Then her floodgates opened, and I moved down, felt the pulsing of her fat labia about my face as I drank at her fountain. Bucking and shivering, she let me at her wet core for a few moments, then shoved me away. She rolled onto her side, her hands protecting her over-sensitive, throbbing center as if trying to contain the overwhelming vibrations wracking her body.\n\nCholan chuckled. \"That was so hot. I'm leaking again, just from watching what you did to her. You made her come good, Lieutenant. I could tell!\"\n\nGetting up, I wiped my face on my arm, and went to stand by Zinja's face. I pulled her into my embrace. As she came into my arms, meeting her open lips, I kissed her gently, lovingly.\n\nZinja snickered then. \"So that's what we taste like.\"\n\n\"We?\"\n\n\"Yeah. You did Cholan, then you did me, so both of us are all over your face.\" Her hand reached down, slipping her hand into my underwear. \"Mmm. So nice and hard.\"\n\n\"I told you before, Farm Girl. I have no trouble getting hard for you.\"\n\nShe gave me an emotional smile. \"By all the gods, what you do to me, Lieutenant! You almost make me wish I really was your farm girl, taking your seed poke.\"\n\nCaressing her face, I just kissed her again. \n\nShe squeezed my cock and gave me sultry look. \"I so want to feel you inside me, riding me hard and giving me your hot, salty cream. But I don't think my shoulder can take the bouncing. Come on. Lay beside me. Let me have my turn.\" \n\nI pushed down my underwear and moved onto the bed. Zinja shifted, then grinned as she looked at me, her mouth closing around my swollen shaft, drawing me deep. I gave her an appreciative groan. As she kissed and licked, I tensed, savoring the sweet, electric sensations she delivered. \n\nLike she had done when responding to my mouth on her pussy, I in turn moved my hips, lifting higher as the pleasure grew. Warm, wet heat encompassed my length, then eased off. Her talented tongue flicked under the fat crown while she sucked.\n\n\"Oh, Zinja,\" I murmured, closing my eyes. She wanted to do this for me, and I wanted to lose myself in her loving attention. Leisurely she moved from crown to base, licking and nibbling gently. Inhaling me at the top. My hands drifted down, caressing her thick hair. \"My sweet, sweet Farm Girl, that feels positively wonderful.\"\n\nThen I felt another set of hands on my chest. Opening my eyes, I saw Cholan standing next to the bed, her gown open. Taking my closest hand, her eyes locked on mine, Cholan lifted it around and under her gown. I squeezed her ample butt cheek, and smiled, closing her eyes. Then I saw Janetta getting up. I tensed as she limped over with an odd, painful gait, moving to the other side of the bed. I didn't relax until she pulled up a chair to sit on. Leaning close, Janetta took my free hand, holding it against her breast. \n\n\"Should you be sitting up?\" I asked, worried. \n\n\"Hurts like a solid bitch ... but I need to do this. Too horny to lay down. As much as they tried to keep quiet, you drove them both crazy with what you did. I'm glad, because they needed it. And those two rabbits over there, huffing away like a pair of bellows. I love you, Ranji Kandikan. If I could, I'd bend over and let you open me wide and hammer away at my insides, and I know I'd come hard for you. We are your women, Ranji, and we love you.\"\n\n\"You are number one,\" I assured her.\n\n\"And don't you forget it. Now show us, Ranji. Show us you appreciate what we have to offer. Come for Zinja.\"\n\nZinja sucked harder, her tongue bathing the head, flicking under the crown. Intense sensation flared!\n\n\"Yes, my queen,\" I gasped, feeling legs stretch as muscles tightened. \"Zinja! Hunh!\" My hand gripped her hair.\n\nCholan leaned over and kissed me while Zinja devoted herself to my cock. Her tongue was seemingly everywhere. I stopped my slow thrusting into her mouth, lifting my hips slowly off the bed, my breath slowing. \n\n\"Tell her when you're close, Ranji.\"\n\nHer soft tongue flicked rapidly, bringing me closer and closer.\n\nI felt the tightening in my balls, the pressure swiftly rising. Grunting out the words, \"Almost .. there ...\"\n\nJanetta leaned next to my ear, her hot breath searing me. Her tongue traced my ear lobe. \"Come, Ranji. For all of us.\"\n\nWith a yell, my shaft swelled and then began pulsing. Zinja lifted her mouth away, her hand frisking my length, and a long ribbon shot up my belly, splattering my chest. Then she inhaled me again while I bucked into her mouth, spurting out yet more semen. Moaning as her wet tongue made love to my entire length, swallowing every few seconds. While I throbbed and spurted, Janetta scooped up some of the pearlescent ejaculate from my chest, smearing it onto her breasts. Cholan did likewise, rubbing it onto her bandages, then followed it up by licking off the line down to my belly. Zinja put her hand at my belly button, shaking her head. Releasing my cock from her mouth, she told Cholan, \"That's mine.\"\n\nI just laid there, my cock twitching in Zinja's hand. She inhaled me for a final cleanup.\n\nCholan grinned. \"Thank you, Captain.\"\n\n\"I take care of my people,\" Janetta said quietly.\n\nThere was a muffled grunt, and Nariya cried out, her face buried in her pillow. Glancing at them briefly, we smiled at their own completion.\n\n\"Cholan's more than that,\" I told Janetta. \"She's your family, just like Zinja and Ixma. Like it or not, we are all a family, Janetta.\"\n\n\"You are such a shitload of complication, Ranji Kandikan.\" Janetta shook her head.\n\n\"It's true, though,\" I insisted. \"We are a family.\"\n\n\"Yes. Yes, we are,\" she admitted. \"I'm not sure how the kids fit into it, but even them. Are you done, Zinja?\"\n\nCholan leaned down and gave me a quick kiss on the lips, brushed back my hair, and returned to her bed. Zinja crawled up beside me, giving me a salty, cummy kiss. \"His pipes are clean, sir. And thank you, Lieutenant, for letting me do that for you. I must admit, I enjoyed that a lot more than I expected to.\"\n\n\"Any time, Zinja.\" \n\nZinja snickered. \"I bet, sir.\"\n\n\"Come on, Ranji. Help me up and back to bed. It's time we all went to sleep.\"\n\nI pulled up my underwear and scooped up Janetta, carrying her to her bed. She was hurting so bad she didn't even object.\n\nOne thing about all the flowers in the room. It quickly overwhelmed the smell of sex. I settled in behind Janetta. \n\nThe marines came back, and a night nurse checked in. I did a last check on my watch alarm, and with my arms around my proud warrior, I drifted off.\n\n* * * * *\n\nMorning arrived too soon. I was stiff and sore, and cramped against the guardrail again. I was cold, but at least with the underwear and shirt, I wasn't as chilled as I had been the previous morning. I did my best to crawl over Janetta without putting my weight on her. \n\nI guess the marine field corporal felt sorry for me. He reached over and gave me a hand over her.\n\n\"Thanks,\" I muttered. \n\nHe just nodded.\n\nAfter I pulled on my trousers, I buckled on my holster. \n\nThe corporal asked, \"Lieutenant, I see you and the Captain both carry Wampag Talons. The Talons aren't standard issue. Why aren't you carrying a Peacemaker or a Caiman?\"\n\n\"I have a Chon .44 in my satchel,\" I explained. \"The Talons work against draconians, Corporal. Penetrates their body shields. And draconians have made more than one attempt on my family. Sabotaged the captain's aircraft and then tried to kill her in person. Sergeant Cholan was injured by another one. All of them are dead, and we're still standing. It's been the Talons that have taken them down.\"\n\nThe corporal blinked. \"Draconians, sir? Then the Chon .44 I'm wearing ..?\"\n\n\"With their personal shields? At best, it's a love tap. If you can, at least one of you should switch out with a Talon. The slug throwers can deflect them, spoil their weapon aim, but that's it. That's why I made sure she has a Talon here to defend herself.\"\n\nThe other two marines listened intently, exchanging glances. \n\n\"Just how likely do you think it is that they will make another attack on the Captain, sir?\"\n\nI shrugged. \"I have no idea. I know of six that have died in the past week, and I can't imagine the camouflage and shield generators are all that common. But, I would rather have you marines around than take a chance on them getting hurt again. They are my family, and I will do whatever is necessary to protect them.\"\n\n\"Understood, sir. I will pass along the weapon recommendation to my officer.\"\n\nThe morning nurse came in and checked on the women. Nariya was scheduled for another treatment after breakfast. Zinja, who was awake, was given a pain reliever. \n\nJanetta, who was also somewhat awake, refused it. \"It just makes me loopy without touching the pain. I still hurt.\" The nurse said she would inquire with the doctor, then informed Janetta that she had another nano-treatment to attend. Bringing in a wheelchair, the nurse loaded her up. The field corporal went with them.\n\nCalia, Ixma, Anton, and the girls arrived shortly afterward, bearing food. The girls visited Nariya and Cholan before settling in with Zinja. Soon the room was filled with sounds eating. Again, breakfast was left for Janetta and enough for lunch as well. Anton collected the bag of dirty dishes and set down an empty one. \n\nI waited as long as I could for Janetta to return, but then I had to leave. \n\nCollecting Sowitwee, we headed out to the ChoCac and returned to the hangar. \n\nOnce there, I showered first, then dressed in a clean uniform while Sowitwee took his turn under the water. Ixma kept the girls occupied with a story while Calia washed dirty dishes. Anton collected dirty laundry. I shaved and got dressed for the day.\n\nI interrupted Calia's cleaning, turning her around. She wiped her hands on her apron, then smiled as she slipped her arms around me. I gave her a nice, solid kiss to which she sighed and responded with ardor.\n\n\"I've got to go. Thank you for all you've done, Calia. Helping here with my daughters. For everything.\"\n\n\"They are your family, my beloved. As I am. If you love them, then how could I not care for and love them as well?\"\n\n\"Gods above, Calia. I was truly blessed the day you came into my life.\"\n\nShe grinned impishly. \"Yes, that's true. And I am so happy that you realize that.\"\n\n\"You, Janetta, Ixma, Zinja, Cholan, and my daughters. Trust me,\" I assured her. \"I know how lucky I am.\"\n\nShe pushed me away. \"Go, say goodbye to Ixma and your girls. Let them know what you told me. They need to hear it, too.\"\n\nI bowed. \"Yes, ma'am.\"\n\nI went over and sat next to Ixma. She paused in her reading to look at me.\n\n\"Sorry to interrupt. I have to go to work, and need to say goodbye before I go.\" I slipped my arm around Ixma, giving her a squeeze. \n\nShe tilted up her head, so I gave her a kiss. \n\n\"Thank you, Little Mama, for being a part of my life. Please have a good day.\"\n\n\"Take care, sir. Safe flight and safe return. Come on, girls. Say goodbye to your Daddy.\"\n\nSisi and Mina got up and came over for a hug. \"Bye, 'Tenant,\" Sisi said. Mina gave me a peck on the cheek.\n\n\"What happened to 'Tenant Daddy?\" I asked Sisi.\n\n\"Zinja says you're 'Tenant. Mama Zinja is Ixma's mama.\"\n\n\"Ah. I see your logic is impossible to refute,\" I told her. \"I am outranked. 'Tenant it is. Oh, by the way, Ixma. I heard something last night and wondered if you would translate it for me.\"\n\n\"If I can,\" she replied. \"What was it?\"\n\n\"The phrase was, Shano kye 'nam owa.\"\n\nIxma turned bright red, looking away. \n\n\"So what does it mean?\" I asked her.\n\nBarely able to look me in the eye, she said, \"You must have worked up Mama really good to have her say something like that.\" \n\n\"And? What does it mean?\" I prodded.\n\nShe blushed even darker. \"Shano kye means 'breed me'. 'Nam is 'to grow' and owa means 'boy', so that's farm boy.\"\n\nI blinked. \"Really? Do tell.\"\n\nIxma cleared her throat as she blushed even darker. \"Now, where were we in the story, girls? Here it is. T'uul the Rabbit spoke to the hen, saying she was so pretty, praising her form and the sheen of her lustrous feathers ...\"\n\nWow, I thought. Zinja, my farm girl, called me her farm boy. I had to admit, that was pretty hot.\n\nI checked on Doyya, who slept the whole time. I made sure the safety was on, but that her replacement Talon was close at hand. I also confirmed that her spare clips were full and close by.\n\nCalia came up behind me. \"She was up, off and on, throughout the night, restless and achy. I worked her muscles and then she took a long, hot shower. Massage to keep the blood flowing to her injured tissues. She's recovering, but she will need more attention for her body to bounce back from such an injury. The Nu-Skin patches have healed the outside, but there is still damage inside that needs repair. Mentally, though, she's fine. Doyya read a couple of stories to the girls yesterday afternoon, doing voices and everything. She's a natural with children. I like her.\"\n\n\"So do I. Do you want Corporal Sowitwee here to help with things?\"\n\n\"No. We have things under control.\"\n\n\"I'll be back about dinner time so we can go take a look at potential homes. Make sure the girls get some dinner or at least a good snack before I pick all of you up.\"\n\nMaking shooing motions, she said, \"We will. Now go. You're going to be late.'\n\nCollecting Sowitwee, I hopped into Janetta's HueCac and headed to work.\n\n* * * * *\n\nWork went fast. The morning hours were spent in meetings about transportation: vehicle acquisition and maintenance, bus arrival times, possible routes to work sites were debated, drivers and shift coverage discussed, and the like. It would take a few more days to hash out the details, but the bulk of the work was done. Commander Barankoshto authorized a platoon of drivers and a half-dozen buses for use and authorization to request more if needed. Captain Xotochan arranged for a squad of workers to process the necessary paperwork \u2013 fuel requisitions, maintenance schedules, and some extra drivers to go with the two buses that the captain authorized for our use from the Air Service Motor Pool. \n\nThen he surprised me by transferring the staff of ten workers to me full time. \"I don't want or need the extra paperwork. It's your baby, Kandikan. You take care of it.\"\n\nLike that, seven privates, two field corporals, and one corporal became part of the 945th. I made sure Chita knew about the transfers. She said she'd get the list of names from Sergeant Mit'an.\n\nSergeant Chita got a call just before lunch time, and I sent Corporal Trank and Private Hodan to pick up Corporal Meba from the Naval hospital. Still battered and bruised, she looked pretty worn out when she arrived. I would have sent her home, but she wanted to hear about the bus program, and surprised me by wanting to become a driver.\n\n\"All right,\" I told her. \"If that's what you want, I'll put in a request for your transfer. I think they are still getting organized, but I'm sure there will be room for you. I'll talk to Captain Xotochan. In the meantime, until your ribs are healed enough for you to be cleared for regular duty, talk to Sergeant Chita about where you can best help. No lifting until you are cleared in writing by a physician, not a medico. I mean it. In the meantime, go hit the break room and relax, Corporal. Take half an hour.\"\n\n\"Thank you, sir.\" Meba gave a salute, then winced. \n\nI returned her salute. \"Dismissed.\"\n\nAfter she left, Chita looked at me. \"Keep an eye on her,\" I told her. \"And I want regular updates on Rilli.\"\n\n\"I heard that a certain officer paid for marines to guard them at the hospital.\" She looked at me expectantly.\n\n\"Captain Tonca from Air Security was trying to intimidate Corporal Meba, and I did not want either one of them to be further injured or to have a fatal accident.\"\n\nShe stared at me.\n\n\"What?\" I asked her.\n\nThen she smiled. \"Llam nuqan, Lieutenant. We work together. I think that should be our unit motto.\"\n\nI laughed, suddenly pleased. \"Very good, Sergeant. Make it so.\"\n\n* * * * *\n\nAt lunch, I met with Second Sergeant Gerlotsl. I fed him and he provided me with a list of available homes. For a processing fee, pass codes for the locks were given. I set up a schedule with him to visit the two nearest the airfield that very evening, and a tentative plan to visit the other three the next day. Like dogs yapping at my heels, I felt the need for a new home grow more urgent every day. Once the fees were paid, I received electronic profiles on the homes as well.\n\nI passed the profile information to both Third Sergeant Neela at Building Safety and First Sergeant Kitam of the Mobile Engineers.\n\nAfter making arrangements to meet them at the first house after the dinner hour, I worked with Matiwatli and his team on reviewing the safety inspections for our building. By quitting time, the repairs were ordered for the building and emergency supplies began being placed into the shelter. The wiring and the back-up generators still needed upgrading to code, but I was pleased with the progress. There were almost two hundred more emergency shelters to review. Matiwatli's team had a lot of work yet to do.\n\nThe last thing I did was check my finances. The influx of credits proved to be substantial. Over four hundred and fifty thousand added to my account, coming from a Seven Nations bank from something called Phoenix Fund \u2013 whatever a phoenix was \u2013 and which was now apparently a closed account. \n\nWas this from Melannee? It was a presumption if so, but I had no way of knowing for sure. In any case, it was an enormous amount of money. \n\nMaking a decision, I transferred fifty thousand credits to Janetta's account, and twenty-five thousand each to Zinja, Ixma, and Cholan, effective in ten days, which would coincide with payday. I smiled to myself, imagining their faces when they got their paystub. It took a bit, but I also set up trust funds for Sisi and Mina, giving them each ten thousand credits. Within half an hour, the notarized digital documents came back from the bank, with their mothers and myself as Trustees. Then I checked on Calia's account. She had just over seven hundred credits, so I transferred twenty-five thousand to her, effective immediately.\n\nThen, as I thought about it, I transferred two thousand credits to Lieutenant Terapan, the marine officer. He hadn't been able to find anything for me to follow up on, but nonetheless, his efforts had been valuable. His notifying me about the men in his custody certainly qualified. I sent him an email explaining that he deserved a partial reward and thanked him again for his efforts.\n\nCorporal Sowitwee came to mind next. I remembered he was still paying off Nariya's indenture. When she was injured, it had added almost fifteen years to her contract to cover the medical expenses from the assault that deprived her of her voice. \n\nI opened his personnel jacket, and found the contact information. I sent the inquiry and within an hour, I had the payoff amount. I set it up so that the payment would process only with a notarized completion of contract. One might think this was more meddling with my aide, but Sowitwee had said he wanted to a chance to help and to stay with me. Having that debt out there was leverage for someone unscrupulous. I actually couldn't afford not to deal with it. I could transfer him, but I believed his declarations were honest. He had looked at death that day and Commander Orchid, the Hand of the Emperor, had pulled him from the precipice. ",
        "Besides, letting someone else get Nariya's contract was unacceptable. Sowitwee clearly loved his wife, and if someone threatened her freedom by buying her debt, it would put him in a bad place. Two hours later, I received notification from the bank that the contract was registered as completed and closed. Nariya was a free woman. \n\nI had to admit, I was pleased with myself. I instructed the bank to send a certified copy of the contract to Sowitwee, sent a digital copy to his email account, and copy for his personnel file. Both of them deserved a decent break in their lives.\n\nAs the shift ended, I collected Sowitwee. Corporal Trank had spent several hours drilling him on gun safety and shooting with him at the firing range. \n\nAfter a quick stop at the Commissary to withdraw a wad of credits, we set off for the hangar. \n\nI barely greeted the women, and I did my best to scarf down the food as fast as I could. I think I surprised both Ixma and Calia by how fast I put it away. I'm sure the food was good, but I hardly tasted it. The brevity of my greeting probably edged into brusqueness, but I was in a hurry to look at the homes. Anton, Sowitwee, and Doyya stayed behind. I noted Doyya was awake, looking less pale, but I didn't have time to chat.\n\nWithin thirty minutes, I had the women and the girls loaded, and we were off. \n\nOnce in the ChoCac, with Calia beside me and Ixma behind me with the girls in their safety seats, I apologized for my behavior.\n\n\"It's all right, Ranji,\" Calia replied. \"You can make it up to us later.\"\n\n\"Oh, yeah,\" Ixma echoed. \"Some tender loving care later, with emphasis on the loving. And a lot of it.\"\n\n\"Sounds like a deep subject,\" Calia grinned.\n\n\"Really deep,\" Ixma assured her. \"But Ranji's good at probing all the nooks and crannies so that it feels thoroughly explored.\"\n\nCalia gave me a sultry gaze. \"I think I want some of that penetrating exploration myself. What do you say, Ranji?\"\n\nResponding at all was too dangerous, I thought. \n\nI checked on the girls from the rear-view mirror. Sisi had her headphones on, playing with her tablet. Mina had her eyes closed, clutching her stuffed rabbit and sucking her thumb. \n\nI turned my attention to finding the address for the first home on the HUD.\n\nWe spent about ninety minutes at each house. Sergeant Kitam had two squads of inspectors with him, checking insulation, plumbing, power read-outs, and the like. Sergeant Neela, too, had two assistants helping her as well. \n\nSisi and Mina ran about, eagerly checking out cabinets and closets, playing hide and seek and generally having a good time. Ixma looked about the spacious areas, impressed, but she stayed within earshot of the girls while Calia and I looked the place over. \n\nBattle Row and Fortress Lane. Neither place had a yard to speak of. Both houses were two-storied, with a single-vehicle garage. The house on Battle Row had six rooms and two bathrooms, and a small enclosed patio. The place on Fortress Lane had but four bedrooms, but it did sport an indoor hot tub with jacuzzi vents.\n\nI saw right away that the quality of the construction of both houses was much better than the cottage on West Seashell Lane. But neither one spoke to me. The patio and the hot tub were both nice additions, and I could imagine how well the hot tub would be received, but I wanted more room than either of these two places offered.\n\nAt the end of touring the second house, I asked both sergeants to send me their evaluations and paid them for their time. I asked Neela, \"How difficult is it to modify a residence? Say, if I wanted to turn a bedroom into a full bathing facility? Or to add more solar collectors?\"\n\nShe shrugged. \"It's actually pretty easy now, Lieutenant. There is some paperwork. Fees, of course, but they are affordable. And there's the inspections during construction to make sure it's up to code, and to update the floor plans with security.\"\n\nUsing my laptop, I sent a message to Gerlotsl, confirming my intention to see the other three available places, authorizing the payment, and then sending the addresses to Kitam and Neela. Both agreed to meet the next night. We said goodbye, locked up, and loaded into the ChoCac.\n\nSisi and Mina had had fun running madly about, giggling and shrieking with laughter. But once they were secure in their seats, they were out almost immediately.\n\n\"We're doing this again tomorrow?\" Calia asked, settling into her seat beside me. Ixma sat behind me, next to Mina.\n\n\"Yes,\" I replied. \"We really need to get out of the hangar and into a place of our own. As soon as possible.\"\n\n\"You're right, of course,\" Calia said. \"Still, you can't keep pushing yourself, Ranji. You're tired and you look it. You plan on dropping us off and going to visit your Janetta at the hospital?\"\n\n\"Yes, I do.\"\n\n\"No, Ranji,\" she informed me. \"We visited them again this afternoon, and all of us talked about it. Your Janetta, Zinja, Ixma, Cholan, and me. All of us agreed. Finding a place is important, but in taking care of all of us, you need to remember to take care of yourself, too. And that means you getting a good night's sleep.\"\n\n\"But I want to see Janetta\u2013\"\n\nIxma leaned forward and put her hand on my shoulder. \"Please listen, sir. The Captain knows why you aren't there right now, and she isn't expecting you tonight. You were there last night. Go see her tomorrow during the day for a short visit. But it's already late. With all due respect, you need some decent sleep.\"\n\nI glanced at Calia, then at Ixma in the rear-view mirror. \"Just when exactly did this revolution take place?\"\n\nMy voice was harsher than I'd meant, but I was suddenly angry.\n\n\"What?\" Ixma pulled back her hand like she'd been stung.\n\n\"You heard me. When did you decide that I'm not handling my part in things? Is there anything else you've decided that I need to do?\" I didn't know why, but I felt like they were trying to box me in.\n\n\"You are proving our point,\" Calia said quietly.\n\n\"What in the seven hells is that supposed to mean?\" I snapped.\n\n\"Nothing,\" Calia muttered, suddenly staring out the passenger window.\n\n\"Oh, now I know there's something! Out with it!\"\n\nCalia glared at me. \"With all due respect, you are being a real ass, my lord. And if you are going to be this way, I wish you'd wait until you are out of earshot of Ixma and your daughters. They do not deserve to hear such childish nonsense.\"\n\nMy retort died when I caught Sisi's wide-eyed look in the mirror. My yelling had awakened her. Then\u2013 \n\n\"Taking evasive action,\" the AI suddenly intoned. The wheel jerked in my hand and the vehicle braked, coming to a firm stop. \n\nI'd let myself get distracted and drifted, nearly hitting a light pole.\n\nI looked at them and then away, anger turning to shame, and then I was grateful that the AI had taken control and avoided an accident. \n\nAfter a short pause, Calia spoke. \"This is so unlike you. What's really bothering you, Ranji?\"\n\nShe was right, of course. \n\nStill, I didn't answer, taking calming breaths and unable to look at anyone.\n\n\"Look, no one's hurt,\" she said, putting her hand to my shoulder. \"You are exhausted, taking on so much. Real love is more than just giving. It's also about learning to receive, and it's communication. You are good at the giving, but not so good about taking care of yourself. Talk to us. Let us know what's going on in your head and your heart. Please, Ranji. Let us in.\"\n\nCalia spoke the truth and I knew it.\n\nI took a long breath, and like that, calm descended. \"You are absolutely right. Both of you. First, I want to say that I'm sorry. I love each of you and I wasn't showing it. But not here. Let's get the girls back and put to bed first.\"\n\nI backed up the vehicle and resumed driving. Within a few minutes we were back at the hangar. I pulled into the bay, and the two women retrieved the girls. I went straight to the refrigerator and pulled out a millet beer, popped off the cap and took a long swallow, draining half in one go. The cold alcohol going down my throat felt good.\n\nWhen I turned, I saw Calia and Ixma talking to Sisi quietly. The small girl looked at me, then hugged Ixma tightly.\n\nI finished the beer and tossed the empty into the recycle bin. \n\nThe truth was I was still angry about what had happened to our home and the destruction of the personal belongings of the people in my care. The injuries to Janetta, Cholan, and Zinja. Janetta's pistol from her father, stolen. The thefts of Sowitwee and Nariya's things, leaving them with nothing but what they had on their backs. Yalcamara and Stimmi being held and beaten in the hospital, and then Meba and Rilli. I wondered whether the two women had merely been unlucky? Or had they been picked to test my resolve in enforcing the Unit Protection Order? Nearly losing Doyya. Worrying about Melannee and how she fared. And my desire and need to find us a new home. I had taken their concern as meddling and a critique, when it wasn't intended that way at all. The look in Sisi's eyes. It was nearly too much. I took another long drink.\n\nWhat kept it all together for me was the love of these women. I was so lucky to have their trust and affection and I knew it. They were right. I needed down time. Because of youth, I had the ability to push myself for long hours. I could and did push myself for days at a time. But eventually everyone has a breaking point. I was nearly at mine.\n\nYet there was still so much to do! And with all the chaos, I'd let my exercise time fall by the wayside once again. That lack certainly contributed to my edginess. Sex was a good outlet, but I needed to expend myself in real physical effort.\n\nCalia leaned down by Ixma and Sisi, whispering and smiling at the girl.\n\nGoing up to them, I squatted down, looking at my oldest daughter. \"If I scared you, Sisi, I am truly sorry. We need a home to live in, and I'm trying my best to find us one. Please don't be afraid of me.\"\n\nShe looked at me for a long moment, glanced at Ixma who nodded to her, then she nodded cautiously. \"Okay, 'Tenant.\"\n\n\"Everyone has bad days, Sisi,\" Calia assured her. \"Ranji loves us, and he would never, ever hurt us. I have known him for many years, and even when we yell at each other, sometimes quite loudly, he has never hit me.\"\n\nI blinked. \"What's this about hitting?\"\n\n\"Tell him what you told me,\" Ixma urged Sisi.\n\n\"When Papa got mad, sometimes he'd hit Mama.\"\n\nI was floored. No anger, no recrimination. When Papa got mad, he hit Mama. Simple as that. Like grass was green and the sun rose every day. I'd yelled at Calia and Sisi had expected me to hit her.\n\n\"We don't hit the people we love, Sisi,\" I explained, crouching down to be at her eye level. \"You can defend yourself if someone hurts you. Calia, Ixma, Mina, and you \u2013 you are my family. You don't hit when you are mad, and you never, ever hit anyone in your family. That's one of the rules. Mina is your family and she's younger, so another rule is that because you are older, you help take of her, and you help keep her safe. Mina has to do what you tell her if it keeps her safe or if it's the right thing to do \u2013 not because you want her to do something for you. Just as it's a rule that all of us grown ups take care of you and Mina.\"\n\n\"'Cause you love us?\" Sisi asked.\n\nI smiled at her, nodding. \"That's exactly right, Sisi. Because we love you. You are my girl now. And at the earliest opportunity, you need to meet your grandparents. They will be so happy to meet such a smart and pretty little girl.\" \n\n\"I'm a ma'am?\"\n\nI laughed. \"Yes, ma'am, Sisi!\" I hugged her tight, and she hugged me right back. \n\n\"You give good hugs, 'Tenant.\"\n\nI think my heart melted. Calia gave me an emotional smile. \n\nThen I looked at her and Ixma. \"Besides Queschuan, I want them to learn Vedan and Oexecan. If we can find tutors, Sisi should also learn Tacanan, and Mina should learn Sharanahuan. That way, if they decide to go looking for kinfolk when they're adults, they can speak with their relatives. The only one they need to read is Queschuan. Any others should be encouraged but they are optional.\"\n\n\"Four languages?\" Ixma asked.\n\nI shrugged. \"I speak six already. Queschuan, Vedan, Pano, Atlantean, Yucatec-Mayan, and Nahuatl. I expect I will have to learn Hasseeyet and possibly Creekan for getting around in the Seven Nations. And because the mothers of my children are Oexecan, I intend to learn that language, too.\"\n\n\"You are a Warrior, trained to lead,\" Ixma said. \"I'm just a\u2013\"\n\n\"Warrior, too. Don't go there, Ixma. Think of all you have accomplished! You have faced enemies and you are still standing! Do not limit yourself. You will just make me angry. Your mother is a smart woman, and I know for a fact that you are, too. You may not be used to stretching your mind or had access to the education I have, but you are quite capable. And I hope, with everything else going on, you are still using your tablet computer to continue your learning.\" I paused for emphasis. \"That's part of what makes you so beautiful is that you are intelligent. I do see you, Ixma Ba'lanchicotl.\"\n\nWhatever she had planned to say was left unsaid. Ixma flushed from the praise, her lower lip trembling.\n\n\"Also,\" I added, \"Get the girls full genetic scans for their records, and full medical exams. You, too, Ixma. I'm presuming you've had that done, Calia, but if not, you get scanned and checked, too. A genomic baseline and regular phenomic records are important to keeping you healthy. Am I clear?\"\n\n\"We'll take care of it,\" they assured me.\n\nGrinning at the little girl, I asked, \"Don't you think your sister Ixma is pretty, Sisi? Pretty, just like you?\"\n\nSisi gave a sly smile, then nodded sagely. \"We're ladies. You said so.\"\n\n\"Yes, ma'am. You got that right.\" I stood up, caressing Sisi's hair. \"Ixma and Calia, I want to say again I'm sorry for losing my temper. Please forgive me. You are right, I am exhausted. I will take your advice and stay here tonight. Now, I'm going to do a bit of exercise to clear my mind.\"\n\nCalia smiled with amusement at Ixma's reaction. \"Going for a run, my lord?\"\n\n\"I thought about it, but I think I'll work on some katas instead.\"\n\nCalia's face brightened. \"It's been a long time since we've done that together! May I practice with you?\"\n\n\"Certainly,\" I answered, suddenly pleased. Returning to the portable wardrobe, I selected a clean tee-shirt and shorts. After taking care of the gear in my pockets and securing my weapon, I changed. Even with the hangar doors open, the night was warm. \n\nI saw Sowitwee chatting quietly with Doyya. Anton typed away on his tablet. Sisi and Ixma talked, and Mina lay on the bed beside them, mouth open as she gently snored, oblivious to the world, and absolutely precious.\n\nCalia removed her soft leather shoes, and she stood about two arms-length beside me. \n\nTaking a long, slow breath, I began stretching. Calia matched me, move for move. Suddenly pleased, I smiled as I extended my limbs, feeling tendons pull and muscles begin to work. Long practiced moves flowed automatically, and I began to clear my thoughts.\n\nI wondered if Calia had been practicing with Styen during my absence. While she willingly practiced katas beside me, she steadfastly refused to ever practice hand-to-hand combat with me. Partly it was the training as a Personal Servant. But Calia had once told me the thought of raising her hand against me even to practice the skill made her heart hurt.\n\nKatas are the attack and defense drills by which one practices martial arts. It helps you to focus and forces you to be mentally calm while your body moves. Practice enough and the moves become automatic. Helpful in an emergency, when you have little time to react. You see a threat and you respond. Dodge, defend, or counter attack. Each school of combat usually requires that you complete a kata at each stage of proficiency.\n\nCivilian schools of martial arts often focus on skill, art, and defense. Military emphasis is to quickly maim or kill an enemy and move on. \n\nThe main schools within the Empire were Bear (mudjakiwis), Jaguar (uturuncu), Hummingbird (qinchu), Eagle (angawa), and Snake (katari). Bear school had been influenced by the Seven Nations hand-to-hand combat practices.\n\nBear and Jaguar schools both emphasized power. Hummingbird focused on defense by avoidance and attacks through speed and agility. Snake and Eagle both had stylized strikes, but also included strong methods of defense. \n\nOf course, there were similarities to other styles used around the world. The Vedan Tiger style, for example, had many similarities to the Chimorran Jaguar school. The various styles tended to focus on one or two aspects \u2013 hand attacks, feet attacks, pins and locks, jumping, tumbling, even to using improvised weapons or in combination with sword or knife strikes. Some masters claimed feats that bordered on psychic abilities. Because of Styen's training, Calia and I were well-versed in both the Jaguar and Snake schools.\n\nI took a deep breath and forced my mind to clear. I began the first Jaguar kata. Watching her move with me brought back many good memories. In a way, that was as calming and good as the exercise itself. I let memory take over.\n\nLike two dancers, Calia and I stretched and moved, arms rising and then twisting, legs lifting and bodies turning. Together we moved, in sync. \n\nIxma brushed Sisi's hair, but after a few minutes, they whispered, and then Sisi approached, standing respectfully a short distance away, Ixma behind her.\n\nI paused. \"Yes, Sisi?\"\n\n\"Can I learn, 'Tenant?\"\n\n\"Of course,\" I grinned, bowing to her. \"You, too, Ixma. Shoes off and go stand by Calia. Pull out your shirt so it doesn't tug when you stretch.\"\n\nIxma hesitated, but Calia waved her over, and she took her place beside us.\n\nWe began with stretching again, more prolonged because Ixma and Sisi were new. Within moments, I envied my oldest daughter. Small children are often amazingly flexible, able to do positions and moves that would actually injure an untrained adult. \n\nOnce the stretches were done, Calia and I moved slowly through the first kata, repeating it over and over. There were corrections, of course, but Ixma and Sisi kept at it. Over the next hour and a half, we worked. \n\nAt the end of completing the first kata, all of us were sweating. I praised Ixma and Sisi for their efforts, and made sure everyone drank some of the electrolyte-enhanced water. Ixma and Sisi cleaned up at the shower first while Calia and I stepped through the first ten katas of both schools before I called enough. I was impressed that she'd kept pace the whole time.\n\nBoth of us breathing hard, Calia just looked at me and smiled, sweat trickling down her face. My muscles burned, and I could tell by how she moved that Calia had pushed herself as well. With a gesture full of meaning, she took my hand, kissed my palm, turned and held it to her cheek, her eyes full of love. Without a word, she released me and went to take her turn under the cooling water.\n\nIxma lay on the bed, Mina between her and Sisi. Mina was asleep, but I heard Ixma singing quietly to them. The Farming Song. Sisi tried to sing a few of the words, but they came out as mumbles as she faded to sleep.\n\nSince Doyya was still awake, I went to check on her. Sowitwee moved to leave, but I shook my head. \"Stay, Sowitwee. How is my kick-ass Second doing?\"\n\n\"Still sore, sir,\" she answered ruefully. Doyya was still pale, but she looked much better than when we'd first found her in the warehouse. \n\n\"The corporal was filling me on what's happening at work. Buses? Is that for real?\"\n\nI nodded.\n\nShe grinned at me, even laughing a bit. \"I can't wait to get back to duty, sir. This job just keeps getting better and better.\"\n\n\"If you feel up to it, come to work for half a day tomorrow. I'll bring you back at lunch time, before I go visit the Naval hospital.\"",
        "\"I'd like that, sir. I still feel pretty weak, but it would be good to move around and to see our people.\"\n\n\"I think they'd like to see you. Several have asked after you.\" Then I yawned. \"Sowitwee, you can come with me on the visit to the hospital tomorrow afternoon. Say hello to your wife.\"\n\nHe smiled happily. \"I'd like that, sir. Thank you.\"\n\n\"All right. I'm fading here. See you both in the morning.\"\n\nAfter a quick shower and a fresh tee-shirt and shorts, I climbed into bed. Ixma pulled my arms around her. I never even felt Calia get in behind me.\n\n* * * * *\n\nThe pressure building in my balls had awakened me.\n\nRound buttocks rubbed vigorously against my groin. My shorts were inexplicably open and with a backward push, my hard shaft entered Ixma's wet heat. Struggling to remain quiet, she held her breath for long stretches as she rocked her hips, then she gasped into her pillow. \n\nMoving my hands, I gripped her hips, moving more firmly and deeper into her slick tunnel. At the increased contact, Ixma arched her back, whimpering, giving me yet deeper access to her pleasure center. With each thrust, her wet nether lips swallowed my length. Ixma pressed backward to meet me, to envelope me within her warm, slick, loving heat. Sawing in and out, harder and harder.\n\nIxma grunted a couple of times, then she made a long, muted whine. I felt her clamping around my cock, her sensuous inner sheath rippling along my length. A few, firm strokes later, the coiling in my balls suddenly released. I made my own quiet sounds as I erupted into her hot, pulsing core, coating her walls. She stiffened, then shook, letting out another muted cry into her pillow, one hand reaching back to my hip, clutching at my hand on her hip, urging me deeper.\n\nAs the ejaculations from my cock faded, Ixma muttered, \"Oh, gods, Ranji. I love you so much.\"\n\nAlmost immediately, I was squeezed out. Ixma reached for a hand towel, put it between her legs, then settled, sighing. Then she pulled my arm around her waist, settling it onto her breast. I felt another hand reach around from behind and helped me back into my shorts. \n\n\"Please, don't be upset,\" Calia whispered, snuggling up behind me, slipping her own arm across my own chest. \"She needed you.\"\n\n\"Not upset,\" I mumbled.\n\nIn answer, I gave Ixma's hip a squeeze, and pulled her butt until it was snug once again against my groin, then slipped my palm back up to cup her small globe. Ixma made a pleased noise, then her breathing faded to the deeper, slower rhythm of sleep. I closed my eyes and once again drifted away. \n\n* * * * *\n\nThe next morning went quickly. Doyya was happily greeted by everyone at the unit. Sergeant Chita made sure that no one bothered her too much while Doyya caught up with reading and signing reports. \n\nMore kinks in the busing system were worked out, and by mid-morning, I went with Sergeant Yalcamara to inspect the emergency shelters for the 917th Logistics and Supply. Sergeant Matiwatli showed their progress. He also had initial reports on three more shelters to show. I was pleased with the work and I let him and his team know it. \n\nDoyya and I reviewed training schedules that Chita had worked out, including a suggested one for Doyya. She was surprised to see a three month block of time on her calendar marked Tik\u00fan War College, and that she was signed up to take six courses.\n\n\"Tik\u00fan, sir?\" \n\nI nodded. \"You need that training. And if you aren't up on book learning, I suggest you become familiar with it. The more education, the better, Doyya. All these classes will also help during the Review Board a year from now. I will do everything I can to help you to you pass your Review, and I believe you will do just fine. However, in three years, you will need to have the skills to pass the tests to become a full Lieutenant.\"\n\n\"I'm still getting used to having rank as an officer, and you're already talking about me moving up.\"\n\n\"You have a problem with that, Sublieutenant?\"\n\n\"No, sir. I'm grateful for your trust and belief in me.\"\n\n\"I've only known you for a short while, but you've impressed me, Doyya Lovyanchiti, and that's no exaggeration. I want you to be able to advance in rank, even if I'm not around to help foster your career. Besides, I won't give you anything. I intend to make you work for what you get.\"\n\n\"That I am sure of, sir,\" she grinned. \"Your corporal and I watched you for a bit last night. As an officer, will I be expected to know one of the martial arts? I've had some training in basic, but nothing in years.\"\n\n\"It's not required,\" I told her. \"However, knowing how to defend yourself is expected of an officer. It would be counted favorably at the officer's review next year. Talk to Sergeant Yalcamara. She knows some Eagle school I think. I don't think there's an Air Service equivalent here, but reach out to the Ground Service Training and Development for class times. Encourage Yalcamara to go with you. In fact, talk to Chita and make it known that I encourage and will sign off on anyone in the unit who wants that kind of training.\"\n\n\"Yes, sir. Thank you, sir.\"\n\nDespite her enthusiastic response, I could see she was tired. As it was near lunch time, I took Sergeant Chita to lunch with Doyya and Sowitwee, and picked up the order of food that Calia had called in. We left Chita eating her meal, and headed off to the hangar. \n\nOnce we arrived, Doyya retired to her bed. Anton ate his lunch at the table. With Sowitwee, I collected Calia, Ixma, and the girls, and we six headed to the Naval hospital.\n\nThe visit went too fast, of course. Janetta and the others were happy with the food delivery, as the hospital food was pretty bland and while cooked well, it was not exactly well cooked. Sometimes it was cooked too well.\n\nI sat next to Janetta on her bed, and she surprised me by helping herself to food from my plate. When I looked at her, she said, \"Better get used to it, Kandikan. What's yours is mine.\" \n\n\"And yours is mine?\"\n\n\"Not hardly. What's mine is mine, too.\" Then she grinned. \"But I'll make sure you get plenty of pussy so you won't care. You rock my world, and I intend to rock yours.\"\n\n\"You already do that, my Queen,\" I laughed. Offering her another bite, she took it, pleased with my adoration. \n\nI talked with them about the houses we'd seen, and let them know that we were going to see more that evening.\n\nJanetta nodded, giving me a thin smile. \"You look a little better today. Make sure you are taking care of yourself, Ranji. You are my ground support. When my thoughts aren't flying in the clouds, they are focused on you \u2013 when you will be here next, and how much I want to feel your arms holding me tight while I taste those sweet lips of yours.\"\n\nWell, after such a declaration, I just had to hold her tight and give her a long and thorough kiss. Setting aside my food, I did just exactly that. Janetta looked pleased with my efforts when we broke apart.\n\nI took our finished plates and put them into the return bag. When I went back to Janetta, I picked up her brush and did her hair. She sighed contentedly, closing her eyes while I worked. When I was done, she relaxed against my chest, drawing my arms around her. Across the room, Sowitwee talked in quiet tones with Nariya. Sisi giggled and Mina laughed with Ixma and Zinja. Calia whispered to Cholan. \n\n\"What do you think?\" I asked her, nuzzling her.\n\n\"About what?\"\n\nLeaning close, I rested my cheek next to hers. \"This is our family.\"\n\n\"Yeah.\"\n\n\"I love you, Janetta Tlacotli.\"\n\nShe narrowed her eyes, looking at me sideways. \"You'd better, Ranji Kandikan. I sure put up with a lot for you.\"\n\n\"And you like it.\"\n\n\"Your point?\"\n\nI chuckled. \"You are such a prickly pear sometimes.\" \n\n\"That's what my name means in Huestican.\" Then, she paused. \"Now I'm curious. What does Ranji mean?\"\n\n\"Strong defender.\"\n\nShe snorted. \"Of course it does. All right, Ranji. Calia can stay if you want her to.\"\n\nI noticed that Calia gave us a slight glance as her eyes lit up, and that she caught me looking, all the while still talking with Cholan. Ixma wasn't so subtle. She's heard it, too, and beamed from ear to ear, almost bouncing on her feet as she glanced back and forth from Calia to her captain.\n\n\"Are you sure? I mean, I'm happy with your decision, but you were pretty resistant to the notion at first.\"\n\n\"Ixma goes on about her almost non-stop. And, she's like you said she was,\" she admitted. \"Visiting with Ixma and your kids. Bringing us good food and treats. Besides, I'm learning about your past from her. We all are.\"\n\n\"Oh, my. I think I should be terrified.\"\n\nJanetta shifted in my arms so she could see me better. \"There is no should about it. Surrender and give in to the terror. Just like I'm terrified by how much you know about me and how much you mean to me. Before all the gods, I love you, Ranji Kandikan.\"\n\nI had to kiss her. The softness of her lips, her hot breath, and big black eyes full of intelligence and emotion demanded it. And she drew me in, demanding in return. Touching, tasting, enjoying the contact. So we spent long minutes lost in each other.\n\nIt was with great reluctance that we had to pack up and leave. For their part, Zinja and Cholan gave me heated kisses of their own, sighing and running their hands over me as I held them. I was surprised when Ixma insisted that she get one, too. Sisi and Mina got chaste kisses and long hugs, and at Ixma's prodding, Calia got her own time. Then we gathered up our things and headed out.\n\n\"Find us a home, Ranji,\" Janetta called out.\n\n\"Yes, my Queen,\" I promised.\n\n* * * * *\n\nI dropped Calia, Ixma, and my daughters at the hangar. Doyya was still asleep when we left. \n\nThe afternoon was more busy work; it was important but at the same time not so much. The duties of our unit were fleshing out, and after a short meeting with Captain Xotochan, my CO, and several other officers and a few sergeants, I was officially replaced by Lieutenant Branton, his new XO. Branton had arrived at High Guard War base that very day. Even though Captain Xotochan seemed happy to put more distance between us, he had apparently read some of my reports, and he supported my request to have our teams liaise with various trained inspectors from other technical units.\n\nAfter the staff left, the captain kept me back. Branton, as the new XO, also stayed behind.\n\n\"Lieutenant Kandikan, I hope there's no hard feelings about you being replaced.\"\n\n\"None, sir. If you recall, I had suggested it, Captain.\"\n\n\"Good. I am beginning to see you are a force to be reckoned with. I have heard a rumor that Commander Orchid's presence here was at your behest. And you did take care of that unpleasant matter at the beach the other morning, taking it further than I would have liked perhaps, but you did settle things. I'm told you even adopted two of the orphans. Is that true?\"\n\n\"Yes, sir.\" \n\nCaptain Xotochan looked at me like he wasn't sure what to make of me. \"And then there's this bus thing that you started. That's all I've heard the women in our unit talking about. Even some of the men. Almost everyone in the company seems happy. They greet each other, and they are all working harder. I've never seen anything like it. And I've been here nearly four years.\"\n\n\"I'm glad to hear it,\" I replied, pleased.\n\nSergeant Chita had relayed that same evaluation at my unit's staff meeting earlier that afternoon. Morale in our own unit wasn't just high, it was positively buoyant. People were tackling their new jobs with enthusiasm, and the new squad of workers had quickly integrated into the 945. Orchid herself was still generally feared, but among the women that I knew and came into contact with, there was also awe and admiration. The reports of Doyya's actions at the Dependent's Office raid and speculation about her secret mission had unexpected results. Doyya now had a reputation as being a tough, competent officer, perhaps even a little dangerous. It certainly gave her some credibility with our Air Security unit.\n\nCaptain Xotochan continued talking. \"It's been a lot more pleasant coming in to work recently, so I .. uh .. well, I wanted to say, good job, Lieutenant Kandikan.\"\n\n\"Thank you, sir.\"\n\n\"Things will probably be different when you get back. Some replacements to fill the empty billets are coming here in the next two weeks. I may or may not keep my position, depending on what the Air Service decides.\"\n\n\"Should I be concerned, Captain? You haven't been CO very long.\"\n\n\"Well, I'm only a captain, and our previous CO was a group captain. As I said, it depends on what the Air Service decides.\"\n\n\"Hopefully, they will take under consideration who put you in charge and leave it as it is.\"\n\nHis promotion and command of the 917th Logistics and Supply had been the decision of Commander Orchid of Imperial Security. Just as I'd been promoted and put in charge of the 945th Auditing and Security Oversight.\n\nCaptain Xotochan blinked, and then he openly smiled. \"That's true. I've never heard of any of Commander Orchid's actions ever being altered. Thank you, Lieutenant. That's brilliant!\"\n\nDismissed, I collected Corporal Sowitwee, grabbed some meals for Janetta and the others, and dropped him and the food off at the Naval hospital. Then I hurried over to the hangar to collect Calia, Ixma, and the girls for more house hunting. \n\nAnton was dozing when I arrived. When I inquired, I found out that the girls had worn him out. Calia and Ixma had also spent time with the girls, practicing the alphabet and counting. Doyya had taken a pain pill after I left and had slept through the afternoon. Ixma related that Calia had also massaged Doyya's shoulder and back again, helping her sleep better. \n\nWhile driving, I learned that the girls had watched the massage. Calia had asked them if they wanted one, too. Initially unsure, they had enjoyed getting their own backs rubbed. Ixma worked on Mina while Calia did Sisi, as Calia instructed them on the various muscle and bone groups, and nerve points.\n\nWe were late arriving at the house. I called ahead to Sergeant Neela, telling her to go ahead and let Kitam and his people start inside. While driving, talking, and trying to eat, a chunk of my sandwich decided to land on my shirt, leaving a splotch of sauce behind before the bit of meat and bread landed in my lap. Calia tried to clean it up, but I didn't think sucking on the spots was how one went about it. When she rubbed her nose against my crotch, hummed, and then giggled, I was sure of it.\n\n\"You are so bad,\" I told her, feeling myself twitch at the attention. \"Besides, you know it's not safe to unbuckle when the vehicle is moving.\"\n\nCalia sat up, plopped the meat into her mouth, grinning as she redid her safety belt. \"There! All better.\" \n\nI caught her winking at Ixma. Uh oh, I thought. Then we arrived, so I had no time to ponder further about their silent communication.\n\nIxma and the girls explored the house while Calia and I talked with sergeants Neela and Kitam. Six bedrooms, but it also had an indoor gym adjacent and behind the indoor two vehicle garage. Private washer and dryer against the back wall of the garage, so no more trips to the laundromat. Kitchen, dining room, living room, and two bedrooms and a full bath on first floor, with four bedrooms and two more full baths upstairs. There was a very small enclosed yard in the back. Hardly any room for the girls to play outside at all. Still, some places had no yard at all.\n\nI spoke to Kitam, asking him to assess the feasibility of changing the roof over the garage and gym to allow for a deck, accessible through the main hallway upstairs. After inspecting the supports, he agreed to do the work, with a outline of additional cost and materials. Many of the streets had a martial quality to their name. But this house was 1210 Cirrus Drive. Somehow that appealed to me.\n\nWe checked out the other two places, but I was less impressed with their layouts, and the third place actually gave me an unsettled feeling. When I looked at Calia, I saw profound sadness in her eyes. \n\nShe saw me and shook her head, almost pleading. \"Not this one, please. Too many screams.\"\n\nI knew Calia had empathic abilities. \"Can you see something?\"\n\nShe winced, then pleaded, \"I'd rather not. This place needs to be cleansed before it's fit to live in. Can we leave, please?\"\n\nIt was then I noticed Ixma and the girls on the upstairs landing, looking about. There was none of the exuberance from Sisi and Mina shown in the previous two houses. Mina suddenly pointed down the hall, but Sisi grabbed her, vehemently shaking her head as she told Mina, \"No!\"\n\nThat was enough for me. \"Wrap it up, Sergeant Neela. We're done here.\"\n\nThe sergeant looked surprised. \"You haven't been upstairs or even seen the Master Bedroom yet. It's right over here \u2013\"\n\nAs she opened the door, trying to draw us in for a look inside, Calia suddenly paled, gasped, then fled outside.\n\n\"Calia!\" I ran after her. She didn't stop until she was by the ChoCac, leaning against it, gulping down breaths of air. When I caught up to her, she turned and buried herself into my chest, trembling. \"So many screams!\"\n\nWrapping my arms around her, I kissed the top of her head and held on.\n\nSergeant Neela came outside, followed closely by Ixma and the girls. \n\n\"Whatever is the matter?\" the sergeant inquired, looking at Calia with concern.\n\nIxma was already helping the girls into their seats. Even the normally chatty Sisi was silent.\n\n\"We'll pass on this one,\" I told the sergeant.\n\nThe sergeant started to leave, but Calia suddenly called out, \"Wait!\" She looked intently at Ixma. \"You saw something, too.\"\n\nIxma looked at me, then nodded. \"I did see a shadow move. But there was nothing there to make the shadow.\"\n\nCalia gripped her shoulders. \"There's more, isn't there!\"\n\n\"I didn't see him,\" Ixma said, \"But Mina and Sisi both told me they saw a small boy upstairs. At the other end of the hallway. Mina wanted to follow and go play with him, but Sisi told her he was a bad boy and stopped her.\"\n\nThe sergeant looked perplexed. \"There's no one else in the house. I checked before you arrived.\"\n\nTurning to me, Calia explained, \"The father killed them in the name of Mictlantecuhtli, a god of death. In a vile rite, the children and mother are now tied to the site, unable to move on, bound and corrupted by the pain by which they lived and the manner of their death. When the bedroom door opened, I saw it all! The father was a horrible, terrible man. The house needs to be cleansed, exorcized by a priest before it becomes an anchor to real evil.\"\n\nSergeant Neela raised her eyebrows, but I shook my head. \"I may be a Warrior, but House Kandikan is Priest Caste, Sergeant, and my father says that Calia has the Second Sight. You say there is no one living there and I believe you. That said, if my girls say they saw a boy, I believe them, too. I don't know anything about this sort of business, but I've heard enough. Fill out a requisition to have a Chaplain clean the house of unclean spirits, and send the bill to me.\"\n\n\"Yes, sir,\" she replied. Pulling out her tablet, she made a notation. \"Well, that's it then. Do you want to let me know your decision in the morning?\"\n\n\"Once I get Sergeant Kitam's report, yes, I'll let you know.\" \n\nI paid Sergeant Neela in cash again, and after she locked the doors, we both drove back to the second house where Sergeant Kitam and his team were still working. Still somewhat subdued, Calia, Ixma, and the girls waited in the ChoCac.\n\nNeela talked with her assistants, and I paid Kitam for the evening's work as well. I also notified him that I did not want an assessment of the third house.\n\n\"But you paid me for all three, sir,\" he protested. \n\n\"Keep it as a bonus.\"\n\n\"Do you mind telling me why you don't want an assessment of the third.\""
    ],
    "authorname": "TJSkywind",
    "tags": [
        "early earth",
        "consensual",
        "native",
        "alt history",
        "military",
        "aliens",
        "poly"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-14"
}