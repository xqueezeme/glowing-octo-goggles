{
    "title": "Brad's Road Trip Ch. 08",
    "pages": [
        " Note: This is the eighth chapter in what will probably be a fairly long series. If you haven't read Chapters 1-7, this section won't make any sense. I mean, the sex scenes will mostly stand alone, but there's a pretty significant back-story. Anyway, thanks for reading! Feedback is appreciated! Special thanks to AnInsatiableReader for helping me clean it up. \n\nDay 7\n\nWednesday, June 17\n\nCharleston, SC to Sumter, SC\n\nWell... this might change things.\n\nThe bathroom mirror was covered with thick fog, thanks to my gargantuan 45-minute shower, starring water so hot it could peel the paint off a Porsche. That was just as well, because I had no desire to look at myself at the moment.\n\nHow the fuck could I have let this happen? \n\nMore importantly, how the hell was I going to tell Kelly? \n\nMore than that, how was I going to cope if she got disgusted and never wanted to talk to me again?\n\nOf all the uncomfortable things that had happened this evening, that was the least comforting thought of all.\n\nIt was well after 3 a.m., and I couldn't help but chuckle at the difference a day makes. Twenty-four hours ago, I'd just finished breaking bratty little Beth of her massive attitude problem and was sleeping peacefully 50 feet from the Atlantic Ocean.\n\nNow, about the only good thing I had was a belly full of pancakes and eggs from the local IHOP. The bad things? By my estimation, there were three.\n\n1. A seven-hour drive that needed to start no later than 6 a.m. \n\n2. The hangover had decided not to wait until after I woke up this time, so the only thing stronger than my desire to stab my temples with a pitchfork was my desire to vomit all over this Days Inn. The shower had helped some, but not nearly enough. \n\nHow the hell did this happen? And why did I let it keep going?\n\nThose were the questions in my head as I wandered out of the bathroom, in the general vicinity of the king-size bed parked in the middle of the room. I'd asked myself those very things so many times the past three hours that the questions might as well have filed citizenship papers in my cerebral cortex.\n\nI found a clean pair of boxers from my duffel bag and collapsed onto the bed. As my head hit the pillow, my left knee hit something else. I moved my hand down to find and remove the interfering object, but it was my cell phone. Which brought back...\n\n3. A ridiculously tough phone call I had to make.\n\nKelly.\n\nIt was after 3 a.m. here, but only a little after 1 a.m. her time. She'd probably be driving home right now, no doubt waiting for that familiar ringtone to go off. She'd crack a huge smile, pick up the phone and drop some kind of line that, despite my current state, would make both heads deliriously happy.\n\nThen, I'd tell her the truth and listen while she turned those curse words against me and hung up without so much as saying goodbye.\n\nMaybe I wouldn't call tonight, I thought. It wasn't appealing, the idea of leaving Kelly hanging when I'd promised I would call. But my head was pounding, my stomach was pulling a gymnastics routine that would make an 85-pound Chinese teenager proud, and my brain was wrapped in a sheet of cellophane. \n\nYes, I thought. The smart thing would be to wait until I could think clearly. Definitely. Easiest no-brainer in the history of mankind.\n\nSo of course, my fingers punched her speed dial, and my ears waited patiently for her voice.\n\n\"Great timing,\" she said. \"I just finished a little mini-fantasy about you bending me over the chair in my office and pounding me while the rest of the crew cleaned and closed up.\"\n\nSee? \n\n\"Hold that thought,\" I said. \"And all the details that go with that thought, too, because I definitely need to hear this in its entirety at some point.\"\n\n\"At some point,\" she agreed. \"But reality is better than fantasy, and I'm guessing you have some reality to tell me?\"\n\n\"I do, but...\" I started. It wasn't like me to mince words, and even though she'd only known me for a week, she knew that. \n\n\"Brad? Everything ok?\"\n\n\"Yeah, it's just...\" I trailed off again.\n\n\"What did you do?\"\n\nI've never been one to lie or even wait to tell the truth when it's going to be a sticky situation. So, I came out with it.\n\n**********************************\n\n 12 hours earlier... \n\nThe Shell station looked like it had been built before people actually needed to buy gas. \n\nThe store itself was a cross between a condemned barn and the type of trailer you see a lot of on the Weather Channel during tornado season. The cheap aluminum overhang was one nasty gust of wind from collapsing on anyone stupid enough to park under it, the pumps themselves were probably the last gas pumps in America without a credit card reader, and the sign with the prices was missing about half its numbers. The parking lot butted up against thick woods that were undoubtedly hiding bodies.\n\nSo why had I been parked at this God-forsaken gas station a few miles south of Santee, South Carolina, for the past 30 minutes, with my doors locked and the engine running?\n\nWell, Robin Williams put it best: God gave men a brain and a penis, but only enough blood to run one at a time.\n\nAnd with what Kelly's voice was doing to me on the other end of the phone, my penis currently had the floor. That would have been blatantly obvious to anyone who peered through my windows, and I hadn't even touched my dick since I'd left Charleston. Breathing took a concentrated effort, so driving was completely out of the question.\n\n\"Jesus, Brad,\" she panted, raising my body temperature by another degree or two. \"You've turned me into a bubbly pool of goo.\"\n\n\"You?\" I asked, my breathing every bit as heavy as hers. \"You obviously have no idea what you do to me, Kelly. None.\"\n\nShe giggled softly, clearly coming down off her orgasmic blissful high as slowly as possible. \"Seriously, baby. I'm gonna have to change my sheets.\"\n\n\"Mmmm,\" I hummed, audibly smacking my lips together. \"Tasty.\"\n\n\"God, I wish,\" she said. So did I.\n\nInstead of the normal game we usually played, where I teased and tortured Kelly until I told her to cum for me, I'd simply told her the story of what happened the night before. Before I began, I told her I was only going to stop when she came. I wanted her to play with herself continuously, and make herself cum as many times as possible. The story started when I got to the bar, and I didn't stop until Beth was passed out on the desk. \n\nMy unofficial scoreboard had her at six, and with each orgasm, my jeans and my cock were ratcheting up preparations for war. \n\n\"Brad?\" she asked, turning my four-letter name into a five-syllable word. The way she said it, it almost needed an 'R' rating.\n\n\"Yeah, baby?\"\n\n\"My clit is still throbbing.\"\n\nI won't lie -- I actually shuddered, and I groaned into the phone. If my cock hadn't been so constricted, I'm pretty sure I'd have cum right there in my pants.\n\n\"So I guess you liked that, huh?\" I asked. I know -- dumb question. \n\n\"Oh, fuck, yeah I did,\" she said. \"I can barely move right now.\"\n\n\"What was your favorite part?\" I asked.\n\n\"Oooh,\" she moaned. \"When you threw me on the bed, and forced your cock down my throat.\"\n\nJesus, I thought silently. Her saying that, and replacing Beth with herself in the story, was unbelievably hot.\n\n\"Or...\" she continued, \"maybe it was when you forced me to shout to the people on the beach before you'd let me cum.\"\n\nI was about to make a comment, but she kept going.\n\n\"Oh, no,\" she said. \"It was definitely right at the end, when you came all over my tits, and my face, and in my mouth.\"\n\n\"You know if I wasn't on the set of Deliverance right now, I'd be shooting cum all over my car, right?\"\n\nThat made her moan, too. \"I'm sorry, baby,\" she said, making sure I knew she was anything but. \"Am I making things uncomfortable for you?\"\n\n\"Incredibly.\"\n\n\"It serves you right,\" she said.\n\n\"For what?\"\n\n\"For telling me the hottest thing you've ever told me, and not actually being here in person to follow through.\"\n\nI couldn't argue with that.\n\n\"Oh,\" she said. \"You mentioned something about cops in your text this morning.\"\n\nI laughed. \"Yeah.\"\n\n\"You didn't get arrested, did you?\"\n\n\"No,\" I answered. \"Let's just say, Beth will never be accused of being a quiet girl.\"\n\n\"Disturbing the peace?\"\n\n\"Yep,\" I answered. \"Two different complaints. One from the hotel, and one from outside on the beach.\"\n\n\"Nice!\" she exclaimed. \"They give you a ticket?\"\n\n\"Surprisingly, no,\" I said. \"I think the guy was impressed about me making her get permission. He said he'd never heard anything like that before.\"\n\n\"Ooh, look,\" she said. \"Your creativity is good for something besides getting me off 30 times a day. It got you out of a ticket.\"\n\nI chuckled. She wasn't ready to change the subject yet.\n\n\"So, besides talking to the cops,\" she said, \"what was your favorite part?\"\n\n\"Geez,\" I said, ignoring the thing about the cops. \"I don't know. I guess, the overall feeling of just being so totally in control. Taking what I wanted. She'd been a huge bitch all night, and honestly, it just felt good to knock her down a couple pegs.\"\n\n\"I bet it did,\" she said. \"I'll have to remember to do something like that in the future, if you'll promise to do the exact same thing to me.\" She giggled again. \"But really, what was your favorite specific thing about it?\"\n\n\"Honestly?\" I asked.\n\n\"Of course, Brad,\" she said.\n\n\"Telling you all about it right now.\"\n\nShe was quiet for a few moments, but her heavy breathing into the phone kept my cock at attention. \"You really mean that?\"\n\n\"You know I do, babe,\" I said. \"I wouldn't lie about something like that.\"\n\n\"I wish you could see how big my smile is right now,\" she said quietly.\n\n\"I wish you knew how happy that makes me,\" I answered. I know, I know; uber-mushy cheesiness. But right in that moment, just knowing how happy she was, just about made me want to shout at the top of my lungs.\n\nAny temptation to do that was interrupted by a click. We both stayed quiet, willing whoever it was to hang up, but they didn't, and a second later, it clicked again.\n\n\"Shit,\" Kelly said. \"It's work calling me. Let me see what they want.\"\n\n\"OK,\" I replied. \"Go ahead and clean yourself up afterward. Grab a shower if you need to, or whatever.\"\n\n\"What?\" she asked. \"You don't like the idea of me all naked and sloppy, my pussy dripping for you?\"\n\nI groaned again. \"You're evil, Kelly. Seriously, it'll give me a few moments to calm down and get back on the road. The longer you stay naked, the later I get to Sumter.\"\n\nShe laughed. \"You're a little distracted, huh?\"\n\n\"More than a little.\"\n\nShe agreed to call me later and hung up. I got out of the car, and despite the state of the station, I went inside. I needed about 10 minutes to pick a soda, and it had nothing to do with being indecisive. When I finally bought my Dr. Pepper and Doritos, my brain had reclaimed at least some of its rightful blood, and I got back on the road.\n\nTim, J.T. and Billy had woken me up at 9:30, pounding on my door and reciting the entire room service part of the Tommy Boy movie. When I rolled out of bed to get the door, I realized Beth was gone. It wasn't until after I got back from our five-mile beach run that I saw her note, sitting atop the plastic-wrapped cups in the bathroom.\n\n\"Brad,\" she wrote, using the hotel stationary. \"I'm very sorry about last night. Please apologize to your friends for my behavior. I know you won't believe me, but I wasn't myself at the bar. I'm in a bad place right now, but that's no excuse.\"\n\n\"As for you and me,\" the note continued into a second paragraph, \"truly, that was the best sex I've ever had. I'm still buzzing from it six hours later. You gave me exactly what I needed. I know it sounds strange and weird, but I needed to feel forced into it, at least at first. Without knowing it, you helped me get my head screwed on straight again. You'll never know how much that meant to me. Until we meet again, Beth.\"\n\nI thought back to the conversation Christine and I had, after she'd ditched Beth, and I smiled. I understood it better than she knew. I also remembered what Sonya said to me before I dropped her off in Jackson on Sunday. Apparently, sex with me had a healing element to it. I couldn't help but chuckle.\n\nThere was no phone number or e-mail address on the note, and a quick survey of the hotel room revealed that she'd left nothing behind by accident. Without talking to Travis, I had no way to contact Beth. That was probably for the best, I thought.\n\nAfter I showered and checked out, I met J.T., Tim and Billy for breakfast at a local island spot. Travis had gone back to Christine's place shortly after we all left the Windjammer, and Julia and Sheila had gone to visit some of Julia's family in downtown Charleston.\n\nJ.T. and I finally got to talk business over our French toast and eggs. His family was in the aviation business, and flying had been my hobby since my early teens. I had designs on building a small private aviation company in the near future, so I thoroughly picked his brain.\n\nShortly thereafter, I left for Sumter, South Carolina, about two and a half hours northwest of Charleston. Around 1 p.m., Kelly called me back, and it wasn't long after that that I had to pull over or risk totaling my car.\n\nI had just crossed over Lake Marion on I-95 when the phone rang. That was a quick shower, I thought to myself, and braced myself to hear Kelly's sultry voice on the other end of the line.\n\n\"Hey, baby,\" I said without looking at the screen first.\n\n\"Aw, hell, nah,\" a thick, country accented voice said. \"Tell me the military didn't turn you gay, Bradley.\"\n\nI laughed into the phone. \"Hey, Adam,\" I said to my cousin. \"I just thought you were someone else.\"\n\n\"I fuckin' hope so,\" Adam said. \"Where you at, man?\"\n\n\"Bout an hour or so out,\" I answered. \"Coming up on Summerton in about 10 minutes.\"\n\n\"Excellent,\" he said. \"We got a couple stops to make first, but then we're getting' our drink on.\"\n\nMy mom was born and raised in central South Carolina, and three of her siblings still lived out here, with all their kids. I was coming to town to see the family, most notably Adam, my second cousin. He was a few years older than me, but we'd always been good friends growing up.\n\n\"Already?\"\n\n\"What you mean, already?\" he fired back. \"You ain't gettin' here 'till damn near 3. We won't get to the bar till 4:30 or 5. How late do you pussies usually start drinkin' in the Marines?\"\n\nI just rolled my eyes and chuckled. \"Whatever you say, man.\"\n\n\"We're already down to just 9 or 10 hours of drinkin,'\" he drawled. \"Just call me when you pull into town.\"\n\n\"All right, Adam. Talk to you in a bit.\"\n\n********************\n\nCold beer and good company usually meant no pain. Tonight... not so much.\n\nI was sitting at a table in a no-name pool hall in Sumter, South Carolina, watching a few hapless people struggle to put round balls into corner pockets. Instead of being my usual boisterous, flirtatious self, I was peeling labels off Sam Adams bottles. There were eight in the pile so far, and we had only been here for an hour and a half.\n\nOur first stop had been my hotel, but we only stayed there long enough for me to get checked in and throw my bags in my room. Next up was the graveyard, to visit my grandparents. My grandfather had been dead for 12 years, but my grandma had just died a few years earlier. This was the first time I'd been back since her passing.\n\nAdam waited by the car --- \"headstones creep me the fuck out\" --- while I went up to the dual gravesite. I hadn't expected this visit to be a bowl of cherries by any means, but I actually left feeling somewhat optimistic and at peace. I hoped my grandparents had better things to do in heaven than sit and watch their graves, but it helped to think they could at least hear my silent thoughts.\n\nThe optimism vanished at dinner, at some buffet place in downtown Sumter. I was happy to see most of my family, but I had some bad history with two of my aunts, Edna and Alice. They didn't even wait for the waitress to get our drink orders before they started laying into me. By the time I stormed off to the buffet table, they'd accused me of corrupting a few of their grandkids, ruining their family and --- oh, yeah --- indirectly killing my grandmother.\n\nOf course, none of that had actually happened. That sect of the family just had a problem with anyone who lived life their own way and stood up for themselves and the things they cared about, and that was pretty much me in a nutshell. Adam, his grandmother, Stella, and his mom, Sherry, repeatedly told me to simply ignore the other two, even right during dinner where they could hear, and that would have made a lot of sense. Instead, I said maybe two words during dinner, silently debating the merits of slashing two sets of tires in the parking lot versus spending the night in a backwater South Carolina jail.\n\nHalf a dozen beers and a couple hours had done nothing to lessen my seething anger. Even talking to Kelly hadn't improved my mood. I told her all about the late lunch with my family and the events that led up to it, as my personal anecdote for the day. In my mind, I figured it might show her that I'm willing to stick up for what I believe in, even if I squash a few feelings along the way. But after the call ended, I wondered if it just made me out to be a pig-headed jerk that likes to fuck up families.\n\nShe'd wanted to cheer me up the way only she could, but she had to go back to work for the second half of her split shift. So, I'd taken a rain check and trudged back into the bar.\n\n\"Still pissed off?\" Adam said as he rounded the corner with a fresh round. I just looked at him -- that was all he needed to know.\n\n\"Man, I done told you I'm sorry 'bout that,\" he drawled. He hadn't had as many beers as I had, but he was in the neighborhood. \"Mom said Aunt Edna had promised to be quiet about that shit.\"\n\n\"I shouldn't have even come up here,\" I said. \"You, your mom and your grandma could have come down to Charleston yesterday and hung out with me. All the good parts of Sumter; none of the bullshit.\"\n\n\"Just a bunch of old, married women, Bradley,\" he said, using my full first name like he always did. \"My mom and grandma, they done got divorced years ago. That's why they're easy to get along with --- ain't gotta put up with any of that marriage shit. Alice has been married to the same dude for 25 years. God help that poor mother fucker.\"\n\nI chuckled along with him. Adam was very famously anti-marriage, having given up the only serious relationship he'd ever had because she wanted to get married. It hadn't been such an unreasonable request after being together for five years, I thought, but it was a deal breaker for him. He blamed everything on marriage --- the sinking economy, troubles in the Middle East, the New York Yankees. If it was bad, you could bet Adam would find a way to tie it back into the bounds of holy matrimony.\n\n\"What about Aunt Edna?\" I asked. \"Her prick of a husband's been gone a while now.\"\n\n\"Yeah, well, you oughta know by now, Bradley,\" he said, extending his beer bottle to me for a toast. \"Sometimes... a woman is just a big 'ol bitch.\"\n\nI laughed out loud as we clicked bottles. Adam had a way of making me do that, and he always had. We'd grown up as next-door neighbors early in life. He and my sister were the same age, so they'd hung out together a lot, while his sister, Amber, was born three days after me, so we'd paired off as well. But really, all four of us were pretty tight throughout our childhoods. \n\nThat all changed when I was eight and my family moved away. Adam and I had stayed in contact throughout the years, but I hadn't seen Amber since we'd moved. I'd talked to her on the phone once or twice, but not since I was 12 or 13. I'd hoped to see her both times I'd come back, but things hadn't worked out. She was backpacking through Europe when my grandma passed away, and didn't find out about the funeral until it was too late to come home. This time around, she was serving an internship in Asia --- Thailand or Taiwan, I couldn't remember which.",
        "\"One of those places they eat Chinese food,\" her ever-enlightened brother had told me a few weeks ago when I called him to set this up. I remembered that conversation vividly, mostly because I'd just left a Thai restaurant when we talked.\n\nWe got through two more beers apiece, chatting about his life in South Carolina. At just 27, he owned a pretty successful local trucking company, but was starting to get bored. I told him about my plans back in Idaho, and filled him in on some of the details for the rest of my trip home. When 9 o'clock rolled around, I was feeling a lot better about my family, mainly because I was feeling no pain whatsoever. \n\n\"Hey, darlin',\" Adam said, and I looked up to see the waitress standing by the table. She wasn't the one who'd been bringing our drinks all night.\n\n\"Hey, baby,\" she replied. \"Can I bring you two more?\"\n\n\"One more,\" Adam answered, pointing at me. \"You're workin' the bar, right?\"\n\n\"Yeah, sugar,\" she answered, \"but I saw you sittin' over here and wanted to say hi.\" She leaned down and did just that, though it might have been easier to hear if her tongue hadn't been in his mouth when she said it.\n\n\"Well, then,\" he said when they finished. \"I'll take mine at the bar. Be good, cousin Bradley. I'll be back... whenever.\" He waved his hand as if to say, it might be five minutes, it might be two hours, you understand. And I did.\n\nIt only took five or 10 minutes for someone worth looking at to walk in. A whole group of someones, to be exact.\n\nThere were five girls altogether, three of whom looked pretty damn hot, especially for a pool hall on a Wednesday night. There was one tall, statuesque blonde, one curvy redhead, and then my favorite, a gorgeous, petite brunette who still filled out her yellow T-shirt and tight Levis quite admirably. She looked vaguely familiar to me, but I couldn't place the connection. I was looking at her when her eyes found mine, and she quickly looked away. That happened a few more times over the next several minutes. \n\nI waited patiently, and soon enough, she and her two hot friends began to draw a crowd. Most were swatted away immediately by the blonde, who was clearly the queen of the group. It wasn't as mean-spirited as what Beth had been doing last night, but it was just as firm. A lucky few were rewarded with a minute or two of conversation, but none were allowed to stick. That didn't stop every dude in the place from buying them drinks, though, and of course, they weren't going to turn them down.\n\nThe other two girls in the group would have been the hottest women in most bars, but on this particular night, their drop-dead gorgeous friends overshadowed them. One of them was a wallflower, a tall, lanky strawberry blonde who hadn't said two words since she'd come in. The other was a little more outgoing, a short, slightly chunky blonde with a cute face and a solid sense of humor. I'd overheard her cracking on the various guys who were hitting on her friends, and she'd caught me laughing once or twice.\n\nI thought about approaching one of those other two --- as I said, they were attractive in their own right, and I tended to go for the girls who don't stand out in the crowd anyway. But as I was trying to figure out how to go about it, an opportunity fell in my lap.\n\nOr more appropriately, it just about hit me in the crotch.\n\nThe redhead, brunette and funny blonde had started playing pool, and the blonde had a shot that required her to stand right in front of me. She didn't look behind her to make sure she had a clear shot, and her stick stopped about two inches short of my cock on her backstroke.\n\n\"That probably would have hurt a little,\" I said, and she turned quickly.\n\n\"Oh, wow,\" she said. \"I didn't even look. How close did I get?\"\n\n\"Close enough for me to be thankful you're not clumsy with a pool cue.\" She'd missed the shot, so she turned around to talk to me. \"The view made it worth it, though.\"\n\nShe blushed, but not as deeply as I thought she would. \"So quit complaining, then,\" she grinned. \"I'm Tracy, and I'm drinking Bud Light. And lemme guess... you're Chuck.\"\n\nI looked at the green Howl at the Moon T-shirt I had on. On the left side of my chest -- where the Nike logo would go if this was a polo shirt and I was a golf geek -- was Chuck's name. Not only was he my favorite pianist at the bar in San Antonio, he was so popular that they'd made and sold a T-shirt with his name on it. On the back were the words \"Chuck Rhymes With... So You Wanna?\" It was just one of the many catchphrases he used while performing.\n\n\"Sure,\" I replied, grinning. A different waitress walked by. \"Could you get my friend Tracy here a Sam Adams? On my tab?\" I ordered. The waitress nodded and walked away. Tracy looked at me curiously.\n\n\"So far, the only thing I don't like about you is your taste in beer,\" I told her. \"Saw a chance to fix that.\"\n\nTruthfully, I had no problem with Bud Light. I even drank it occasionally, but not when there was better beer available.\n\nI'd had a dozen beers by now, and was drunk enough to not give a damn about being subtle. She played another game of pool, and I did the classic pool teacher schtick, sliding up behind her and \"helping\" her grip the pool cue. She was eating it up, too, thrusting her ass back into my hips. Before long, she was rubbing her ass against something else, too. All she did was look back at me and grin. I locked eyes with the brunette a few more times, but with her friend clearly interested in me, I decided not to push my luck.\n\nA half hour later, Tracy had downed her share of beer, too, and was flirting just as openly with me as I was with her. Soon, though, the inevitable happened.\n\n\"Tracy, who's your friend?\"\n\nThe tall blonde sauntered over to our side of the pool table. She was the sun in this particular solar system, and one of her planets had fallen out of orbit. Tracy, to her credit, didn't back down.\n\n\"Lyla, this is Chuck,\" she said, wrapping her arm around my waist. \"He's been flirting with me, and I've been flirting back.\"\n\n\"Chuck, huh?\" Lyla said, giving me the once-over. The shapely brunette walked over and stood just behind Lyla. We caught each other's eye again and grinned subtly. \"You haven't been over there flirting with us tonight, Chuck. Why's that?\"\n\n\"With that flyswatter routine you were throwing out?\" I asked. \"I'm a confident guy. Cocky, even. A borderline asshole, if the situation calls for it. But masochistic? Nah.\"\n\nShe smiled, as did both of her friends. The brunette's familiarity was really coming on strong now, but my brain was too foggy to care.\n\n\"Besides,\" I said, throwing my arm around Tracy's shoulders. \"She kinda picked me. Or at least, her pool stick did.\"\n\nTracy told her friends the short story, and both of them were laughing by the time it was done.\n\n\"Lyla, leave her alone,\" the brunette said, placing a hand on my other arm. She was even sexier close up, and probably twice as drunk as I was. \"Tracy's a big girl. It'll be fine.\"\n\nThe tall blonde considered the three of us for another moment, then smiled and walked away.\n\n\"Overprotective sister,\" Tracy said, shrugging as she walked back to the pool table. I immediately recognized the resemblance. If I weren't fairly drunk, I probably would have realized it sooner.\n\n\"Lyla's not a bitch,\" the brunette said, her hand leaving my arm and dropping down to my ass. She copped a quick feel before we sat down at the table. \"She just wants everyone to think she is. We really just came out here to have a good time.\"\n\n\"Girl's night out, huh?\" I asked. We watched Tracy hustle the other friend, the quiet, skinny strawberry blonde girl, out of $20. \n\n\"No, not really,\" she said. Once seated, her hand moved to my knee. I put mine on top of hers. \"Any of us is free to leave with someone if we spot something we like.\" She licked her lips suggestively, but I kept the conversation on track.\n\n\"And Tracy isn't usually the one who spots something she likes, huh?\" I asked.\n\n\"Oh, she does,\" the girl answered. \"She just doesn't ever do anything about it.\"\n\n\"Well, I'm glad she did this time, even if she didn't mean to.\" I looked at the girl a little harder, trying like hell to place her, but I couldn't. Finally, I just gave up and decided to enjoy the view. \"What about you?\"\n\n\"Oh, I found something I like, too,\" she answered, pulling me a few feet away from the pool tables. It wasn't a dance club by any means, but they were playing music you could dance to. This particular song was Usher, and she and I started dancing.\n\n\"So, what's with you, hmm?\" I asked. \"We're making eyes at each other all night, but you don't come over for more than an hour?\"\n\n\"You're the man,\" she laughed. \"Do I look like I need to make the first move?\"\n\nShe had a point, but I had an excuse. \"I was flirting with your friend the whole time.\"\n\n\"Another reason I stayed away,\" she said. \"But you want the real reason?\"\n\nI nodded, and she leaned in close to my ear.\n\n\"Alcohol,\" she whispered. \"The more I drink, the wetter I get.\"\n\nThe forwardness of that comment shocked me, but not so much that I couldn't break into a huge grin. The song changed, but apparently the DJ was a big Usher fan, because it was two in a row. We spent a few more minutes grinding against each other before we were interrupted.\n\nI can't say I'd forgotten about Tracy, but with this stunning brunette in front of me, she wasn't exactly front and center on my mind, either. I felt a tap on my shoulder, and turned to see Tracy standing next to us.\n\n\"Tracy,\" her friend said, beating me to the punch. \"Sorry, I stole Chuck here for a minute.\"\n\nI was worried about her reaction. I figured at least some of the guys she was interested in at these types of places chose one of the other three girls instead, and I didn't want her to think that was happening again. Truthfully, I was just really drunk, and was flirting and enjoying the brunette's company while Tracy played pool. I had every intentions of trying to score with Tracy when the time came, but I doubted it looked that way.\n\nI didn't need to worry, which I realized when Tracy broke out a big grin. \"That looks fun!\" she said, and pulled both of us a little farther away from the pool tables and towards a small open area where there were a few other people dancing.\n\nThe music switched over to something by Nicky Minaj, and Tracy joined us. Usually the meat defines the sandwich, but this time, it was all about the bread. I was just happy to be stuck in the middle of these two very, very sexy women. Sometimes, the brunette pushed her fairly sizable chest up against my back while I thrusted my hips against Tracy's ass. Other times it was Tracy behind me while her friend and I ground our hips together. Neither girl was shy about my raging hard-on, and I could feel four very hard nipples pushing into my back.\n\nTracy even brushed up against her friend a few times, and while the other girl didn't return the favor, she didn't seem to mind. Finally, right before the song ended, Tracy made her friend the center of attention, rubbing against her back while she and I danced cheek-to-cheek.\n\nAs soon as the music stopped, the brunette just put it out there.\n\n\"It's time to go,\" she said. Shit, I thought. Tracy was certainly hot, but this girl was one of the sexiest women I'd seen on this road trip. She wasn't quite at Becky's level, but was tied for second with Belinda and Stacy. I was torn, but I had to make the right decision. The only decision.\n\nI broke away from her and put my arms around Tracy's waist.\n\n\"I'm sorry, but I've already got plans,\" I said, kissing the blonde behind the left ear. She shuddered briefly.\n\nThe brunette looked disappointed, and slightly shocked. She probably didn't get rejected all that often, and I could see why. Still, she smiled and nodded. \"She's definitely worth it,\" she said, and started to turn.\n\n\"So is she,\" Tracy said. \"I'm willing to share, maybe...\"\n\nThe girls locked eyes, and for a moment, I wasn't in the conversation. They broke into huge smiles, and both turned toward me. I didn't have to ask.\n\n\"My car is at my hotel, just a few blocks down from here,\" I said.\n\n\"I'll drive,\" Tracy said, which was good, because neither her friend or I were in any shape to do it. Truthfully, Tracy probably wasn't either, but it was a short trip.\n\nSuddenly, and thankfully, I remembered Adam.\n\n\"I need to go say bye to someone,\" I said. \"I'll meet you outside in a minute, I promise.\"\n\n\"We need to get our stuff too,\" Tracy said. Her friend had already walked back toward the pool tables to do just that. \"See you in a second.\"\n\nI spun toward the bar, but saw no sign of Adam. I muscled my way up to the bar, but didn't see the waitress he'd left with, either.\n\n\"You know where Adam Presley is?\" I asked when I caught the bartender's eye.\n\n\"Is that Monica's boyfriend?\"\n\n\"Monica's a waitress here?\" I put both hands in front of my chest, in the universal sign for \"with big tits?\" The bartender nodded. \"That's probably her then.\"\n\nHe leaned up close. \"They're in the back. Don't want to be disturbed.\"\n\nI grinned. \"When they get done, tell him his cousin Brad found something like that, too, and I'm on my way back to my hotel.\"\n\n\"Will do,\" the bartender said. I pushed my way back toward the pool tables. I threw a few twenties on the table to cover my tab, and started toward the door.\n\n\"Have fun,\" I heard the redhead say. She, Lyla and the other strawberry blonde were smiling at me, and I tossed them a little wave as I backed out the door.\n\nA car honked as soon as I got outside, and I stumbled my way to a blue Chevy Malibu. Tracy was driving, and her friend was in the back seat, so I hopped in the passenger seat.\n\nThe ride to the hotel was short. I ran my hands up and down Tracy's thighs while she drove, and we kissed a few times when she was stopped at lights. The brunette ran her hands all over my chest and arms, and I snaked an arm into the back seat to rub her legs, as well.\n\nI was staying at a Days Inn, and the rooms opened up into the parking lot. So about 20 seconds after Tracy parked the car, we were in my room. The brunette and I immediately shared our first kiss, a long, slow, deep, passionate tangle that made our tongues feel like they'd just run a marathon. \n\n\"You know,\" I said to her when we decided to breathe, \"I never got your name.\"\n\n\"Who cares?\" Tracy shouted, right before tackling me onto the bed. The brunette fell down on my other side, and I took turns going back and forth between them. First, I'd be on top of Tracy, feverishly making out with her and rubbing her pussy through her shorts while her friend watched, then I'd pull her friend on top of me and run my hands up and down her back and over her ass while Tracy played with herself.\n\nTracy started working on my shorts, tugging them to my ankles along with my boxer shorts. I was rubbing her friend's breasts through her shirt and playing a spirited game of tonsil hockey with her when I felt Tracy's mouth engulf my cock.\n\nI moaned into the brunette's mouth, and had to do my best not to cum right then and there. My exploits of the past few days had been plentiful, but still, I'd been revving up for the past hour and a half, and I'd never cum after Kelly's relentless teasing on the drive in. That I didn't spontaneously combust in Tracy's mouth was a minor miracle.\n\nI managed to hold off, though, and watched as Tracy's friend slowly undressed. I pinched Tracy's nipples through her shirt as she bobbed up and down, and when I looked back, the girl was mostly naked, lying on the king-sized bed in just her blue lace panties.\n\n\"Play with yourself,\" I said. \"I wanna watch.\"\n\nShe did as I asked, slipping two fingers under the waistband and onto her pussy. She started by just rubbing her clit, but then pushed her fingers south into her pubic hair. When she slipped one finger inside herself, her eyes rolled back in her head and she moaned.\n\nMeanwhile, Tracy was getting me closer and closer. I was sure I was going to come a few times before this was over, but I didn't want the first one to be in her mouth.\n\n\"Ok, ok,\" I said, gripping Tracy's hair and gently pulling her up and off my cock. \"That feels amazing, but you girls have been killing me for like an hour. I want to fuck. Now.\"\n\nI looked at Tracy, figuring since she'd found me first at the bar, she had first dibs. She surprised me.\n\n\"She can go first,\" she said. \"She's been out of the country for three months. Been a while since she had some good 'ol American dick.\"\n\nIn retrospect, that should have been when the warning bells erupted in my head. Between the alcohol, the twin beauties in front of me, and the blood flow problem Robin Williams so eloquently described, though, I thought nothing of it.\n\n\"That's ok with me,\" I said, and pulled the girl to the foot of the bed by her legs. She rolled onto her hands and knees, and Tracy pulled her panties over her ass, leaving them bunched around her thighs.\n\n\"My favorite,\" the girl said. \"Like she said, it's been a while. Want this first one to go quick.\"\n\nI was ready to give her a personal record. I stood up, and after Tracy licked up and down my shaft a few more times, I placed my hands on the brunette's ass and lined myself up to sink into her in one thrust. Right before my hips moved forward, though, someone began an artillery assault on the hotel room door.\n\n\"Brad!\" Adam shouted. \"Bradley Carver! Open this fucking door!\"\n\n\"Adam?!\" I exclaimed, but it took a few seconds to realize I wasn't the only one who'd said it. The brunette girl had rolled onto her back, and we locked eyes.\n\nThat's when I finally placed her face. I hadn't seen her in 15 years, hadn't heard her voice in 13. But damnit, I knew it was her.\n\n\"Under the covers,\" Tracy said, and her friend quickly did what she said. Tracy put her shirt and shorts back on and tossed me my boxers. Adam pounded on the door some more. \"Hold your damned horses, Presley,\" she shouted, watching me put my boxers on with amusement.\n\n\"Tracy?\" he asked, not shouting now. She pulled open the door.\n\n\"You know you're interrupting something, right?\" Tracy asked.\n\n\"Thank fucking God I am,\" he said, bursting into the room. He looked at the girl under the covers on the bed, me standing in front of the TV in just my boxers with a raging hard-on, and Tracy standing right in front of him, with a flushed face and nipples poking through her shirt.\n\n\"You didn't,\" he simply said, looking back and forth between me and the girl on the bed.\n\n\"No,\" she and I both replied in unison.\n\n\"Wait,\" Tracy said. \"I'm your ex-girlfriend, and she's your sister.\" She pointed a finger at me. \"How do you know Chuck?\"\n\n\"Who the fuck is Chuck?\" Adam asked, collapsing into a chair next to the window.\n\n\"His name isn't Chuck,\" the girl said from the bed. \"His name is Brad. He's my second cousin.\"\n\nTracy's eyes widened into giant saucers. \"Holy shit!\" she shouted. \"How the fuck did that happen?\"\n\n\"How the fuck did you not know it was her, dude?\" Adam yelled, launching the Days Inn stationery at me. It hit me square in the chest.\n\n\"Moved when I was eight, dude,\" I said. \"Hadn't seen so much as a picture since then. Hadn't talked to her besides e-mails since we were both 10.\"\n\n\"All night you looked familiar,\" Amber said. \"That's why I kept looking.\"\n\n\"You looked familiar to me, too,\" I said. \"That's not why I kept looking, though. I had other reasons.\"\n\nTracy at least laughed. \"And here I thought you were into me.\"\n\n\"I am,\" I said. \"God made more than one hot woman.\"\n\n\"She's your cousin, dude,\" Adam said. \"Quit sayin' she's hot.\"\n\n\"Dude, cousin or not, she's hot,\" I said. \"I'm gonna avoid the obvious South Carolina incest joke here, since you probably have three shotguns in your truck. But fuck, man. You ain't blind.\"\n\nHe nodded slightly.",
        "\"Don't you have her on like, Facebook, or something? She's got half a million pictures on there.\"\n\n\"Yeah, Adam,\" I said. \"THIS is a great time to lecture me about using Facebook.\"\n\nBoth girls laughed at that.\n\n\"You said she was in fucking Thailand, dude,\" I said, throwing the pad of paper back at him. \"Even if I'd realized she looked like a cousin I hadn't seen in 15 years, I would have ruled that out because she was in fucking Thailand!\"\n\n\"Taiwan,\" she said. \"He still doesn't know the difference.\"\n\n\"Yeah, I said that,\" he told me, ignoring her. \"She's been wanting to visit you for a few years, and she got a week off to come home from the internship.\"\n\n\"That's why you pushed me into coming home this week, instead of two weeks from now like I was planning,\" she said. \n\n\"Yep,\" he answered. \"Was trying to surprise the both of you.\"\n\n\"Look at their faces,\" Tracy chuckled, trying not to break out into a full-fledged laugh. \"I'd say they're fucking surprised!\"\n\n\"Where the fuck were you, dude?\" I asked. \"If you're gonna pull something like this, it's best if you stick around to make sure we see each other.\"\n\n\"And, ya know, to make sure we recognize each other, you fucking jerk!\" I'd tossed paper at him --- Amber grabbed an empty glass off the nightstand and threw it. Thankfully, she wasn't going to be firing 90 mile-an-hour fastballs for the Braves anytime soon. It was so soft a toss that Adam had time to sigh before he caught it.\n\n\"Was in the back talking to Monica,\" he said.\n\n\"Fucking Monica,\" I corrected. He threw me a glare. \"The bartender told me.\"\n\n\"That fuckin' goober,\" he answered. \"Anyway, I get done. Ted tells me you left with some pussy. I'm thinkin,' hot damn, little Bradley has some game. Then I walk back to find Amber, so we can meet you at IHOP after you're done, and Stephanie and Lyla tell me she left with some guy. I figured it out.\"\n\n\"Did you tell them he was my cousin?\" Amber asked. She sounded panicked.\n\n\"No, I didn't fuckin' tell 'em that,\" he said. \"That woulda taken time. As it is, looks like I got here just in time.\"\n\n\"You did,\" I said.\n\n\"Three more seconds, and...\" Amber trailed off.\n\n\"Good fucking Lord,\" Adam said.\n\nIt was quiet for maybe 10 seconds. Then Tracy started laughing. Hard. The three of us looked at her like she was a Martian.\n\n\"I'm sorry,\" she said, making it clear she wasn't. \"I guess I'm the only one who finds this funny.\"\n\n\"No, no,\" Amber said. \"I'm sure I would too.\"\n\n\"Yeah,\" I finished for her. \"If it was happening to someone else.\"\n\n\"C'mon, Amber,\" Adam said, standing up.\n\n\"No!\" she shouted. \"You go!\"\n\n\"Say what?\" he asked. \"You ain't gonna keep goin' with this?\"\n\n\"God, no,\" she said. \"But I'm naked in a hotel room, and you're my brother. You need to get out.\"\n\n\"He's family, too,\" Adam said, pointing at me.\n\n\"He's already seen it,\" she yelled. \"Besides, we need to talk about all this. He can turn his back. You're my BROTHER. Get out!\"\n\n\"All right, all right. We'll be at IHOP. See you there soon.\"\n\nHe started to leave, then turned around.\n\n\"Bradley, you are one lucky sonuvabitch.\"\n\n\"How's that?\" I asked.\n\n\"I caught you naked in a room with my ex-girlfriend and my sister,\" he said. \"And I have five shotguns in the truck, not three.\"\n\nTracy, Amber and I couldn't help but laugh. The laughter was short-lived, however, ending shortly after he closed the door.\n\n\"I believe the word is--\" I started.\n\n\"Awkward,\" Amber finished. Tracy just laughed.\n\n\"Completing each other's sentences,\" she noted. \"If y'all weren't cousins, I'd say to go for it.\"\n\n\"Hey, this is South\u2014\" I started, but instead of finishing that sentence for me, Amber threw a shoe at me this time.\n\n\"Fucker,\" she said, laughing. \"Thank God we didn't really do anything.\"\n\n\"We touched, and we kissed,\" I said. \"But yeah, nothing went anywhere.\"\n\nAmber pulled the covers back and stood up. Even now that I knew she was my cousin, her body was still fucking amazing. I should have turned around, like she'd told Adam I would, but I didn't.\n\n\"Chuck,\" Tracy said. \"Or Brad, I guess. You're staring.\"\n\nAmber looked over at me. I expected her to cover up, but she didn't.\n\n\"Thanks,\" she said. \"Knowing what you know, I'll take that as a compliment.\"\n\n\"So, why the shirt?\" Tracy asked. \"You told me to call you Chuck.\"\n\n\"No, I didn't,\" I grinned. \"You introduced yourself, told me what you were drinking, and then guessed my name was Chuck from my shirt. You were on such a roll, who was I to stop you?\"\n\nShe facepalmed herself. \"That's true.\"\n\n\"So I guess we should get dressed and talk, huh?\" Amber asked.\n\n\"Fuck, no,\" Tracy said. \"I'm horny as all fucking hell.\"\n\n\"Tracy, we're cousins,\" Amber said.\n\n\"You and him are,\" Tracy answered. \"He and I are not. And damnit, I'm not leaving till he fucks me.\"\n\nMy cock had retreated to half-mast as soon as Adam barged in, but it hadn't gone away completely. I was too charged up from the day, and watching Tracy strip off the rest of her clothes and spread her legs was getting me recharged.\n\n\"Sorry, Amber,\" I said as I walked to the foot of the bed and knelt between Tracy's legs. \"I did get this girl all worked up. Only fair that I do something about it.\"\n\n\"You got me worked up, too!\" she said, stomping her foot.\n\n\"I can't do anything about that anymore,\" I said. \"You can, though.\"\n\nWith that, I turned my attention to Tracy's delectable pussy. Amber's bush was well trimmed, but Tracy was completely bare, and I buried my face as far as I could. My tongue ravaged her clit, tickled her lips and inner thighs and plunged into her pussy like a thirsty snake in a desert mirage. Her juices tasted downright awesome, and after a few seconds, I forgot my cousin was even in the room.\n\nI was massaging her thighs as I devoured her, my hands tracing the contours of her quad muscles. I learned just how powerful they were a few moments later. Her first orgasm racked her body, and I thought her legs might detach my head from my neck, she was squeezing so hard.\n\n\"Tracy, relax,\" I heard Amber's voice say. Sometime after I'd dove between Tracy's legs, Amber had rejoined us on the bed, still gloriously naked. \"You're gonna kill him.\" There was a hint of a laugh in there, too.\n\n\"Sorry,\" Tracy gasped, dividing that simple word into three parts as she gulped down air. The pressure on my jaw subsided as she slowly relaxed.\n\n\"No worries,\" I said. \"Just try not to do it again next time.\"\n\n\"Next time?\" she asked wearily.\n\n\"Yeah,\" I said. \"Now.\"\n\nMy tongue went right back to her clit as she squealed. I plunged two fingers into her pussy and fucked her vigorously with them, but my main focus was her clit. I alternated lapping at it with my tongue and sucking it completely into my mouth. \n\nTracy cut my head some slack this time, but her fingers curled tightly in my hair. She came two more times that way, until she finally pushed me away.\n\n\"Good Jesus,\" Tracy said as I rolled to the side. \"You need to run a clinic.\"\n\n\"Not bad, huh?\" I asked, licking what I could of her juices off my lips. \n\n\"Fucking fantastic,\" she said. Then, with an apologetic glance at Amber, she added, \"Sorry.\"\n\n\"I can do it again,\" I offered, but she shook her head and pointed down at my lap.\n\n\"Nope,\" she said. \"Time for something else to go inside me now.\" She patted the bed, making it clear what she wanted.\n\nI looked over at Amber, who was idly rubbing herself and staring off into space. I knew I shouldn't stare, but I couldn't help myself; her body was fucking magnificent. When she realized I was looking, she stopped but didn't cover up.\n\n\"You ok with staying here for this?\" Tracy asked her friend. I lay on my back, and watched as Tracy climbed on top.\n\n\"I don't know,\" Amber said. \"This is better than porn.\"\n\n\"Yeah,\" I said, \"but I don't think we have any cousins who do porn.\"\n\nShe laughed, and flicked her eyes back and forth between my cock and Tracy's face. I waited a few seconds for Amber to say something, but she didn't. Finally, the sight of Tracy's pussy hovering just inches over my cock was too irresistible.\n\n\"It's not going to bother me if you watch,\" I said, gripping Tracy's hips with both hands. \"Cousin or not, you are a sexy woman, and you deserve to get off, too.\"\n\nWith that, Tracy sank down on my cock, taking me all the way to the root with one smooth, excruciatingly slow stroke. I know Tracy and I both groaned, and I'm pretty sure there was a third voice in there, too.\n\nThe first couple of strokes were slow, but once she was comfortable, Tracy picked up the pace considerably, using those muscular legs to rapidly slide up and down on my cock. Her ample tits were bouncing and swinging wildly, and I reached up with my mouth and latched onto the nearest nipple with my teeth. Her blonde hair hung over and clung to her face, but I could see her eyes fire up when I bit down.\n\n\"Fuck,\" she moaned, quickening her pace even more. I was teetering perilously on the edge of an explosion, but as always, I wasn't gonna let myself cum until she did. So I pulled her closer to me using my grip on her tits, and started talking dirty to her.\n\n\"C'mon, Tracy,\" I said softly into her ear, but not so softly that our audience couldn't hear. \"Use my fucking cock to fuck yourself. I want you to squirt your juices all over my dick, and then I'm gonna make you suck 'em off. You wanna taste your cum on my cock, baby?\"\n\nIt went on like that for just a few more seconds, until she finally collapsed her chest onto mine. She was still working her hips up and down, but she groaned loudly and locked in a vice grip on my shoulder. If anyone was still asleep on the other side of the wall, she'd just given them a wakeup call.\n\n\"God damnit!\" she shouted, as an aftershock orgasm rippled through her body. With her orgasms subsiding, though, my body was back to focusing on itself.\n\n\"Tracy,\" I moaned, \"I don't want to cum inside you.\"\n\nShe pushed herself off my chest and grinned at me teasingly. \n\n\"Then don't,\" she said. She started bouncing up and down again, almost challenging me to hold out. Somehow, I did for another minute or two, but then she started showing me that her thighs weren't the only well-developed muscles below her waist.\n\n\"Oh, fuck!\" I shouted, pushing her off of me quickly. She knew the game was over, too, and willingly moved her face down to my cock. Her body was splayed out to my left invitingly, as she licked my cock from the side. She got one or maybe two licks on my shaft before I exploded.\n\n\"Geezzz---\" I blubbered, tightening my fist in her hair. The first shot or two landed on her back and right shoulder, with the rest falling anywhere between her cheek and her jaw. Finally, she pointed my cock back at me, and the final dribbles landed on my stomach.\n\n\"No staying power whatsoever,\" Tracy teased, licking my cock some more, though thankfully staying away from the head.\n\n\"I've been fucking you in my head for the past two hours,\" I said. \"Did the best I could.\"\n\n\"Just me?\" she asked. I looked over at Amber, who was feverishly pushing two fingers inside her pussy as she watched us.\n\n\"Feel good?\" I asked her.\n\n\"Not good enough,\" she responded. \"Not nearly good enough.\" Still, she wasn't stopping.\n\nTracy pulled back, and I quickly rolled off the bed and headed to the bathroom. \n\n\"You wait one damned second, woman,\" I said to Tracy. Seconds later I returned with a towel. \"You have about 10 seconds to clean yourself up and get on all fours.\"\n\n\"Holy shit,\" Amber said, looking at my crotch as Tracy took the towel. \"You're still hard.\"\n\n\"Give yourselves a pat on the back,\" I said. \"That's how worked up y'all got me.\"\n\n\"Guess I owe you then,\" Tracy said, sticking her ass up in the air. \"Come over here and help me pay up.\"\n\nBesides the slickness, my cock looked like it hadn't just cum a few minutes earlier. Tracy's pussy was still dripping, and I couldn't resist leaning down for a little taste.\n\n\"Shit,\" she hissed. \"If you weren't so good with your dick, I'd make you do that again.\"\n\nI grinned to myself, and I saw Amber smiling as well. She was still working her pussy, though not as feverishly as before. I grabbed a handful of Tracy's pliable ass cheeks, and after massaging them for a few moments, I placed the tip of my dick at her opening. She waited patiently for a few seconds, then I felt her trying to push back on me. I pushed forward on her ass, keeping myself out of her. She whined pitifully.\n\n\"You thought you could tease me, huh?\" I asked her, continuing to rub her ass with my palms. \"We'll see who can't handle being teased.\"\n\nI rubbed the head of my cock up and down her slit a half-dozen times, occasionally even slipping the head just inside before pulling out completely. By the time I was done, she was panting.\n\n\"Brad, let her off the hook.\" That was Amber, and I looked a question at her. \"You're killing me over here. I can only imagine what it's doing to her.\"\n\nI responded by slamming my hips forward so forcefully that Tracy collapsed onto her stomach. She screamed so loud that I might have earned another visit from the police if there'd been any in the area. I worked with that position for a couple minutes, basically pummeling her into the hotel mattress with my hips. \n\n\"C'mon, Tracy,\" I goaded. \"I'm gonna fuck you harder than this; you can't just be folding up like that.\" I swatted her on the ass for good measure, which drew one of the loudest moans of the evening.\n\nI never stopped pounding her, but she managed to get back up on all fours. I laid a few more palms down on her ass and kept up the dirty talk, since she seemed to enjoy both. I reached underneath her to squeeze her tits, which were swinging back and forth as I pounded her, her nipples grazing the mattress as they went.\n\nTracy's moaning was pretty much non-stop at this point, but Amber wasn't being quiet either. At first I thought her fingers had finally started to hit the spot, but when I looked at her, I saw that one hand was on her left breast, and the other was on the bed. She was just moaning at what she was watching.\n\nI wasn't close to cumming again, but I sensed that Tracy was, so I gripped her hips hard and started fucking her frantically, using short, quick strokes designed to maximize the friction on her clit. Before long, she was screaming into the pillow. I'd lost count of how many orgasms she'd had, but this one matched any of the others in intensity.\n\nMy hips finally slowed once her body stopped convulsing, and eventually, she came up for air. \"Your cousin is talented,\" Tracy said, clearly talking to Amber. Tracy's face rested no more than two inches from Amber's left forearm on the bed.\n\n\"Certainly looks that way,\" Amber answered. I detected a slight hint of jealousy in her voice, and I couldn't blame her. Sure, we were cousins, and neither of us was going to cross that line now that we knew it was there. Still, she'd come to this hotel room expecting to get exactly what her friend was getting.\n\nAfter I'd given her a few moments to recharge, her friend started getting it again. This time, though, I decided to try something that had worked oh-so-well the night before. I licked my left thumb and gently pressed it against her ass. At the same time, I reached under and squeezed her clit with two fingers. Tracy squealed in delight.\n\n\"What's he doing?\" Amber asked, and Tracy filled in her in between moans. When she was done, Amber sighed. \"Completely unfair.\" She started rubbing her own clit again, but I could tell it wasn't working.\n\n\"Trying to give you the best show I can, dear,\" I said to Amber. \n\n\"I know, but this\u2014\" she motioned to her fingers on her clit -- \"just isn't working. It doesn't compare.\"\n\nTracy looked back at me over her shoulder when I started fucking her ass with my thumb. The wink she threw at me was almost imperceptible.\n\n\"Come here,\" Tracy said. Amber didn't realize who she was talking to, but I knew. \n\n\"I think she's talking to you,\" I said to my cousin.\n\n\"Mmhmm,\" Tracy moaned. \"C'mere.\"\n\n\"Me?\" Amber looked half perplexed and half shocked. Tracy just nodded and licked her lips, patting the spot on the bed right in front of her.\n\n\"But I'm not...\" Amber said, letting that hang in the air.\n\n\"Me either,\" Tracy answered. \"Now get over here.\" With that, she tugged Amber's legs over until she was lying right in front of her. Amber was still nervous, visibly trembling now.\n\n\"What are you -- OH!\" Amber shouted as her eyes rolled back in her head. I couldn't see much from my vantage point, but I saw Tracy's blonde hair splayed out where Amber's pussy should have been and Amber's fingers involuntarily curled through it.\n\n\"Jesus,\" I muttered as I felt my cock get even harder sawing in and out of Tracy's pussy. She had to be a little sore by now, but she was being a trooper.\n\n\"Tracy, what are you...\" Amber trailed off, choosing not to finish what certainly would have been a rhetorical question. \"We shouldn't --\"\n\n\"Probably not,\" Tracy said, pulling her head away just for a second. Her cheeks were slick. \"But we are. So shut up.\"\n\nTracy grabbed Amber's hips and pulled them up to her face, again burying her tongue deep in my cousin's twat. I got off my knees and squatted, giving myself a better view as well as more leverage to pound Tracy downward into Amber.\n\nAmber seemed to give in at that point, visibly relaxing her upper body into the pillow. Her eyes were clamped shut as Tracy's tongue worked its magic. I secretly hoped she was imagining it was my tongue instead. Maybe she'd picked up right where we'd been interrupted, and instead of Adam pounding on the door, I had pounded her instead. Yes, I know she was my cousin, but the thought of it got me even harder.\n\nAw, hell, I thought. I'm going to hell anyway. No harm in greasing the skids a little.\n\nJust as I finished that thought, Amber's eyes flickered open and locked right onto mine. A faint smile played on her lips, and I'm sure one did on mine as well. I couldn't help but wonder if we were on the same wavelength.\n\nTracy inserted a finger into Amber's pussy, matching the rhythm of my thumb in her ass. Amber's face began tightening up, though she kept her eyes open and on me.\n\n\"You gonna cum?\" I asked her. She nodded slightly. \"I can't hear you, Amber.\"\n\n\"Soon,\" she moaned. \"So soon.\"\n\nWithout breaking our eye contact, I spanked Tracy's ass a few more times and plowed into her with even harder strokes, trying to push her as far forward as possible. It was almost as if I actually was fucking Amber, just using Tracy as a conduit.\n\nTracy didn't seem to mind, moaning and squealing as much as she had been all night. Still, she kept up a concentrated effort on Amber's pussy, and she squealed when Amber's grip tightened in her hair.\n\n\"Cumming now?\" I asked.\n\nShe just moaned something that sounded like yes, but I didn't really need an answer.\n\n\"Cum for her, Amber,\" I gasped, nearly out breath myself. I couldn't bring myself to tell her to cum for me, though right at that moment, I wanted nothing more than for her to cum. \"Cum all over that talented little tongue.\"\n\nShe proceeded to do just that, holding Tracy's head down hard into her pussy as she screamed out. Her orgasm just made me fuck Tracy harder, and suddenly, I was hurtling over the edge.\n\n\"Fuck,\" I said, and quickly pulled out of Tracy's tight pussy. I managed to point my cock at her ass before I exploded.\n\n\"Fuck, Brad,\" Amber said. \"You're cumming all over her ass.\"\n\nI couldn't answer her. I just kept stroking my cock and spurting onto Tracy's ass and lower back. \n\n\"Feels like you came a fucking river,\" Tracy said. \n\n\"He did,\" Amber answered.\n\n\"Not done yet,\" I added. I was done cumming, but I'd left Tracy perilously close to one last orgasm. I quickly pushed two fingers into her pussy from behind and started stroking.",
        "\"Mmm,\" Tracy said. \"You didn't forget about me.\"\n\n\"Course not,\" I said. I caught Amber's eye and motioned with my eyes toward Tracy's pussy. Her eyes widened and she shook her head. I just crooked my finger at her, and watched as she wriggled out from under Tracy.\n\n\"She helped you out,\" I whispered in her ear. \"Be a good friend and help her out.\"\n\nAmber looked down at Tracy, her ass arched up in the air and her face buried in the pillow Amber had been lying on. \n\n\"I... I don't think I can,\" Amber stuttered. I smiled at her and spanked Tracy with my free hand.\n\n\"You don't have to use your mouth,\" I replied. \"Just rub her clit with your fingers. We'll get her off together.\"\n\nShe looked down again, and I guided her arm down to the bed. She did the rest, snaking her hand under her friend's waist. There was just enough room to reach Tracy's clit without Tracy needing to move.\n\nI could tell when she finally made contact, because Tracy shrieked. \"How the ---\" Tracy started, but turned around to get her answer. \"Fucking awesome.\"\n\nHer head went back to the bed, and Amber and I continued to work her pussy. I could feel her fingers on Tracy's clit each time I pulled my own fingers out, and a couple of times she slipped a finger inside and tangled it up with mine.\n\n\"Use your other hand,\" I said, pointing at Tracy's swinging tits. I couldn't reach them from where I was, but Amber had easy access. She twisted and pinched Tracy's left nipple, smiling the louder her friend's moans grew.\n\nTracy started fucking herself against our fingers. \"Use your palm,\" Tracy stammered. Amber didn't know what she meant.\n\n\"Put your palm out, right under her clit,\" I said, adding a third finger to her now-flooded pussy. Amber did as she asked, and before long Tracy was fucking herself back and forth, rubbing her clit into Amber's open hand and impaling herself on my fingers.\n\n\"Fuck, fuck, fuck,\" she shouted. \"Somebody spank me! Hard!\"\n\nI was about to do it, but Amber beat me to the punch, stinging Tracy's left asscheek with her other hand. I was surprised, but Amber was just grinning at me.\n\n\"Just getting into it,\" she reasoned.\n\nThe spank set Tracy off, and she started convulsing as she screamed into the pillow. Amber smiled gleefully as she kept the pressure on Tracy's clit.\n\nI was thrilled that Tracy had cum again, and figured if there was a record for the number of times a girl had cum in an hour at this particular Days Inn, the odds was pretty good that she'd just stolen the crown.\n\nHowever, the post-orgasmic bliss that washed over Tracy and swept Amber into the current stopped short of me. I was immediately disgusted with myself, and after placing a quick kiss on both of Tracy's bright red ass cheeks, I jumped off the bed and moved into the bathroom.\n\nI ran cold water over my face and avoided glimpsing myself in the mirror like the plague. I figured a quick brushing of the teeth wouldn't hurt either, so I did that, too. When I came back out a few minutes later, Tracy was gone, and a fully clothed Amber sat in the chair by the door.\n\n\"Where's Tracy?\" I asked as I started getting dressed.\n\n\"We'll meet her over at IHOP in a few minutes,\" Amber explained. \"She said she wanted to give you a big 'ol kiss on the lips as a thank you. I said I'd relay the message, but if you don't mind, I'll stop with the words.\"\n\n\"Perfectly good with that,\" I said, chuckling. I finally made eye contact with her, but had no idea what her eyes were saying.\n\n\"Pretty weird, huh?\" she said, winning the understatement of the year award, at least for my money. \"What happened before Adam showed up, that was one thing. We really had no way of knowing. But after...\"\n\n\"Look,\" I said, taking her hand from her lap. \"No point in regretting it or feeling bad about it. Maybe I should have ended the whole thing right when he left. Maybe you should have gotten up and gotten dressed. But neither of us wanted to, or we would have. So, maybe what should have happened was exactly what did happen. We're gonna have to go with that.\"\n\nShe looked at me hard for several moments, then started grinning. She squeezed me in a giant hug, and I gave as good as I got.\n\n\"I miss you so much,\" she said. \"Even under these circumstances, it was so, so good to see you.\"\n\n\"I agree, with all of that,\" I said. \"What do you say we go get caught up, huh?\"\n\nWe walked across the parking lot and into the IHOP. Adam and Tracy were seated in a back booth, along with Monica, Adam's 'friend' from the bar, and the redhead from the group of friends, who I assumed was the Stephanie he'd mentioned. \n\n\"So,\" Stephanie quipped. \"Cousins, huh?\"\n\n\"Uh, yeah,\" Amber stammered, shooting Adam a glare that could have brought down a B-52. \n\n\"Don't worry,\" Adam answered. \"I told her nothin' happened.\"\n\n\"Yeah,\" I stepped in, hoping my story would fit with what he'd told them. \"We figured it out pretty quickly once we got to the room. She went back out to the car while...\" I finished, motioning back and forth between myself and Tracy.\n\n\"While he gave me the fuck of a lifetime,\" Tracy finished. If I was a blusher, I'd have blushed. \n\n\"I thought so,\" Adam said. \"There were some pretty damn interestin' noises coming from that room when I showed up. I saw Amber in the car, talked to her a minute, then came over here.\"\n\n\"Too bad, huh?\" Stephanie asked, elbowing Amber in the ribs. \"I'd fuck him.\"\n\n\"Which makes him different from the rest of the dudes with a workin' pecker in the Eastern Time zone how, exactly?\" Adam asked. Stephanie had ordered toast, and quickly threw a piece of it at Adam's head.\n\nThe night went on from there. We'd joined them at IHOP around 12:30 a.m., and it was after 2 before I managed to escape. I loved both my cousins and wanted to catch up with both of them immensely. Plus, they had some cool friends, and Tracy was a very, very special woman. \n\nHowever, as confident as I sounded when talking to Amber after Tracy had left, and as much conviction as I'd carried in my voice, none of it was real. I felt very conflicted about what we'd done --- not so much what had happened before Adam showed up, but the fact that we'd both stayed in the room afterward.\n\nI excused myself on account of an early drive in the morning, promising both Adam and Amber that I'd keep up better with them. Tracy and I exchanged phone numbers, and I even promised Amber that I would open a Facebook account, and she'd be the first friend I added.\n\nWhich brings us back to the shower, the hangover, and the phone call.\n\n*****************\n\n\"So, I took a hot shower, two Advil, and had convinced myself to wait to call you until the morning. Then, my fingers just kinda did their own thing, and here we are.\"\n\nI waited. She'd asked a couple questions here and there, but she'd been completely quiet every since the story had made it back to the hotel room.\n\nI felt horrible. The physical problems were bad enough, but I really had grown very fond of Kelly over the past week. It's hard to explain, especially when talking about someone I'd never met and never even seen a picture of.\n\nShe just got me. \n\nAnd now, thanks to a strong dose of indiscretion on both Amber's and my part, I might never get her.\n\nShe strung me along for a few more moments of deafening, uncomfortable silence, so thick I couldn't have dented it with a chainsaw.\n\nAnd then, she hit me with a sound. A sound so familiar, a sound I'd grown so accustomed to over the past week, a sound that had repeatedly made me so indescribably, unreasonably happy ever since we met.\n\nShe laughed.\n\nShe laughed so hard, I was pretty sure she was crying. After a while, I had to laugh with her, just because it was so infectious. Even after I stopped, she kept going for a few more seconds.\n\n\"That's just\u2014\" she started, but the laughter took over again. When it finally subsided, she finished. \"That's just too funny.\"\n\n\"So I heard,\" I said. \"I'm just glad your answer wasn't to just close up the phone.\"\n\n\"Why would I do that?\"\n\n\"Kelly, you're from Idaho,\" I said. \"Incest is not a way of life like it is down here in the south.\"\n\nThat made her laugh some more. \"You're right,\" she said. \"And if you'd done anything that qualified as incest, we might have to talk.\"\n\nThat made me pause, and she kept going.\n\n\"First of all, I'm never going to just hang up on you and not talk to you again,\" she said. \"I might only be 20, but I'm a little more mature than that. Even if you do something that angers me, we'll talk about it. And secondly, how were you supposed to know? You haven't seen her since you were a kid. People change. Sure, there'd be a vague resemblance, but she had no idea you'd be in town and you thought she was in Asia. The thought would never have entered my mind, either.\"\n\n\"I get that,\" I said. \"Though, I will admit, it's nice to hear someone else say it. But after Adam left the room...\"\n\n\"After he left the room, you were still left with two naked people, very attracted to each other, who were seconds away from having sex when something interfered. Sure, that something was strong enough to stop you from continuing, but your brains flipped that switch. Your bodies could give a shit.\"\n\n\"Not sure it makes a difference.\"\n\n\"It definitely does,\" she said. \"If you'd known from the beginning she was your cousin, would you have allowed it to get to that point?\"\n\n\"Of course not,\" I said.\n\n\"Right,\" she went on. \"And your body never would have had to see her naked. Your dick never would have been inches from her pussy. Your fingers never would have been clawing into her ass.\"\n\nSuddenly, Kelly's voice had changed.\n\n\"Uhh, Kelly?\" I asked.\n\n\"You're so perceptive,\" she answered. \"I'm home now. Just in the driveway.\"\n\n\"And rubbing yourself.\"\n\n\"Through my pants, yes.\"\n\nSweet Jesus, I thought. \n\n\"Anyway,\" she continued. \"Before he came in there, you were two horny people about to have sex. Once you learned the truth, you became two horny people who couldn't have sex. But the desire to get off, and even the desire to get each other off... that isn't gonna go away that quickly.\"\n\n\"So you have no problems with it?\"\n\n\"Oh, I have a problem with it,\" she said. \"My problem is that I wasn't there to help get her off, while you kept fucking Tracy. Cuz like Tracy said, you and Amber are cousins. But me and Amber...\"\n\nShe laughed again as I heard her get out of the car and make her way into her house. It wasn't long before she was naked on the couch, fingering herself to two or three orgasms. Somehow, I came back to life too, and got off once more for her.\n\nThroughout it all, one overwhelming thought bounced around my beer-soaked brain:\n\nShe was fucking incredible."
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "amber",
        "tracy",
        "road",
        "trip"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-08"
}