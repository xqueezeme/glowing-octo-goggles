{
    "title": "My Only Talent Ch. 32",
    "pages": [
        "Remember the Alamo!\n\n*\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\n*****\n\nWhen the incredible water skiing Candy climbed onto the trapeze at Lara's apartment, none of us knew what was going to happen, especially Candy herself. But none of us would ever forget it, either. When I first met Lara, I was afraid she would get kinkier and kinkier and her needs would go well beyond what I was prepared to accommodate. When we trained Millie I knew that I wasn't as cruel as she really needed. With Lara and Suzanne helping, the three of us would just barely be able to do Millie right, and we had to concentrate on it, because our natural tendencies just weren't mean enough to get her off. \n\nLara had 'mellowed' in her need to be humiliated and abused since she had such a stable relationship with Suzanne and me, but there was still that core of the 'ice queen' that had toyed with and dominated so many other guys before I won our tennis match. Lara and Candy turned out to be a very complementary pairing; Candy needed it hard, painful, and relentless, and Lara had what it takes to give that to her. \n\nLara held the canes out, one in each hand, like an amazon warrior about to go into battle with two swords, and Candy keened with desire. She had a look on her face like a B movie heroin addict that needed to fix. Quite a contrast to the prim and proper pre-medical student that she was by day. Suzanne turned off the Bluetooth butt plug and slowly pulled it out of Candy, kissing each buttock casually as she did. Candy clearly wanted it to stay in. \n\n\"We are going to make you wait for these canes, slut! But first, we are going to 'double down' on you, so to speak.\" Suzanne climbed up the ropes, with Candy sighing and snorting as her motions made the ropes jump and jiggle. When she reached top, she snapped a friction grip descender on each rope and stepped onto them, one with each foot. She smacked Candy hard with an open hand, three times on each buttock. The hand prints raised up red immediately, standing out from the untanned perfect flesh that was under Candy's suit bottom when she tanned, and a definitely different hue from the perfectly tanned flesh on her thighs. Candy sighed after each slap, clearly enjoying herself. \n\nSuzanne cackled. \"Nice little ass, huh, Master?\"\n\nI grunted in agreement. \n\n\"Come on up here, Master.\" Thank Saskia my newly developing arms propelled me easily up on the rope to the other side of Suzanne. \"Do you want to fuck her ass or her pussy, Master?\"\n\nCandy took in a deep breath.\n\n\"I'll do the pussy first, but then I want the ass too.\"\n\nSuzanne smiled, then got a faraway look in her eyes. She climbed up and then paused with her big black dildo about half an inch from Candy's tight little ass. I positioned my not so big and much paler cock a similar distance from Candy's now very fragrant pussy. Suzanne and I shared a look, and suddenly her Suzie signal exploded into my forebrain, complete with the triple screen images that encapsulated her nascent desires. \n\nI now had a connection with Suzanne like I had never shared with anyone else, but I might not really want to know what that connection was now making plain: Suzanne wanted three real live cocks entering her, in lots of combinations, and she was not going to stop dreaming about it until she experienced it. She was actively envying what was about the happen to Candy, but she knew from experience that one live cock and one plastic one were not going to do it for her - she needed multiple instances of the real thing. Damn that woman!\n\nThere is an inscription on the main building at ESU that says 'Ye shall know the truth, and the truth shall make you free.' Now that I knew this particular truth about Suzanne, I wasn't sure if it was making me free or just miserable. My grandmother had a little saying of her own that came to mind: 'Truth is truth, whether you like it or not.' No shit, grandma. Maybe they should chisel that one in too. \n\nSuzanne gently touched the bulbous end of her strap on dildo to Candy's puckered little pink rosebud. I matched her motions and gently placed my cock so that it just touched both of Candy's dripping wet inner lips. Candy was torn - she couldn't move her hips toward both. My warm and well perfused Mr. Natural won out, and she snake-danced her pelvis toward my dick. I let her start the motion, and then I slipped forward all the way.\n\nShe was tight, but hot and very well lubricated. She smiled shyly as I moved into her, then let out a little scream as the fully strapped Suzanne rammed the dildo all the way into her ass. Then her shy smile turned into a wide grimace, and she purred like a big pink and tan cat. Suzanne began fucking her like a woman possessed. It was a very real example of projection, and with each thrust I could see Suzanne's internal visualization of two dicks pounding into her with the same effort she was giving Candy. It almost made me lose my erection. Or maybe I was afraid it would. Or maybe my 'inner Calvinist' wanted it to. \n\nI suddenly flashed back to a Sunday school lesson I was listening to while a coursing course of testosterone was driving my brain to crazed sexual thoughts every other minute. I specifically remember wanting to motorboat my then forty-five-year-old second cousin and Sunday School teacher, Mrs. Jones, who used to change my dirty diapers when I was a little kid. I wanted to see her teats so badly I couldn't think about anything else, until three minutes later when I instead wanted to put my hands under the skirt of the incredibly hot Elsie Yanez, the hottest little Cuban girl I have ever seen, before or since. \n\nThat Sunday school lesson was, appropriately enough, about original sin. Was all sexual desire sinful or just that outside of marriage? Was it sinful for Suzanne to want three dicks at the same time or was it just sinful to actually do it? Was it sinful for me to think about it? To not want to think about it? Was I being a hypocrite? I certainly had wanted three girls at once, and had had them. It was even better than I thought it would be. I certainly didn't just try it once and then not want it again. What would happen if Suzanne tried it? Those images wouldn't go away. Then I realized she wanted three dicks, not three guys. All those images were disembodied dicks, not guys with faces. What exactly did that mean? Was that original sin, venal, cardinal, ordinal? I forget the distinctions. \n\nMeanwhile, my dick was thinking for itself, and driving my spinal circuits to move my pelvis back and forth. Damn that felt good. Suzanne and I alternated and gradually drifted between in phase and out of phase motions into and out of our respectively assigned Candy orifices. Was this simple harmonic motion? No, there was nothing simple about this! I needed some distractions to delay my orgasm for a while. Let's see - the derivative of sine is cosine, the derivative of cosine is minus sine, tangent is secant squared, cotangent is cosecant squared, ... Hey it worked! I could now delay producing my own derivative for a while. John Henry the pile driving automaton reporting for duty, and happily fucking on. \n\nCandy came, squirting. Lara giggled. \"It's raining!\"\n\nSuzanne and I continued our ministrations, and Candy came two more times. Then Lara slipped the clips holding Candy down about a two feet or so, and used two other straps to hold her legs out so they were almost parallel to, and about three feet above, the floor of the living room. She used another strap to hold Candy's head immobile so she couldn't turn and look around behind her. Then she picked up the canes and stood just behind Candy.\n\nSuzanne and I sat down on the couch to watch. Although Suzanne had some facility to both give and receive such treatment, I was only comfortable on the giving side, and not particularly good at it. But our lovely Lara had a real talent for dishing it out, and Candy, as we would soon discover, was a genius at taking. Suzanne picked up the 'Master's Manual' from Judicial Caning and began to leaf through it, with me looking over her shoulder. \n\nIt read like one of those Singapore math books they had used at my middle school. Understated, vaguely British in its phrasing, but clear and easy to understand. Apparently the central theme was maximum painful stimulation with minimum tissue damage, ensuring some great (punishment, and/or) sexual excitement, and then allowing several days' time for things to heal. There was some discussion of individual differences in pain tolerance, and differential healing rates. I knew from my dog training experiences that dogs range from hard to soft in their pain response. Hard dogs, like Eldee and her issue, barely felt anything that did no tissue damage, and but soft dogs could be corrected with barely a touch.\n\nHappily, Candy was a soft little bitch, able to get highly stimulating pain from relatively non-damaging blows. So even moderate strikes from the canes sent her around the bend, sexually speaking. Lara had apparently read the section of the book on 'calibration' very carefully, and soon had Candy fully characterized. Spreading the blows out to minimize tissue damage in any one particular area, Lara tuned Candy up like a master mechanic and made her come completely via anticipation and pain. The larger of the rattan canes was applied to her ass, and she came. The smaller cane was applied to her inner thighs, and she came. It soon became so reflexively Pavlovian that all Lara had to do was wave the canes, and Candy almost came from the motion of the air. \n\nSoon Candy was simply vibrating in the trapeze straps, almost catatonic. Lara put the canes in their little case, and snapped it closed loudly and dramatically. Candy whimpered lowly. Lara put her mouth right next Candy's ear, and said \"You'll get more when I think you need it, slut,\" and then kissed her cheek gently. She motioned to Suzanne and I and we took Candy down gently and carried her into the bathroom. Lukewarm water and dilute soap with a soft sponge cleaned her up, bringing the red marks up clearly against her skin. The red welts were even more dramatic against the baby pink and untanned skin of her buttocks. \n\nLara went the kitchen and puttered about. We applied a little antibacterial ointment, and one or two bandages where required, plus a lot of kissing and whispered sweet nothings, and then put Candy in one of Lara's plush terrycloth robes. We walked Candy back to the living room and sat her on the couch. Lara fed her warm chicken soup, and the color returned to her face. Candy giggled. \"I didn't even know you were Jewish!\" We all laughed, and hugged and kissed, and Candy sobbed. Lara put Candy to bed in her bedroom, and she went soundly asleep in 30 seconds. Suzanne and I then turned our attentions to Lara and passed the night blissfully on the couch, checking on Candy occasionally, and sleeping a little, too. Good times.\n\n++++++++++++++++++++\n\nEveryone in the little rodeo arena was watching as Big Liz spoke in Veronica's ear. Veronica had been 'prepared'. Was Liz telling her what for?\n\n\"Hi, Veronica. You are all tied up like a pretty little orange and white present, aren't you? Everyone's thinks I am America's sweetheart of a big sister, and maybe sometimes I am. But while they think I am talking to you tenderly and offering you support in your soon to be several hours of need, what I really wanted to let you know that I am going to make you my little bitch before anyone else gets a chance at you. You are going to eat my pussy with slavish devotion, and do it just the way I like it, with everyone watching!\n\nFor her part, Veronica Tappert was very pleased with the progress of the evening so far. Boring was over, and excitement was on the rise. She was getting to act out several fantasies at once here. She knew her husband would probably enjoy watching it as much as she would enjoy experiencing it. In for a penny, in for a pound. \"Bring it on, big sister!\"\n\nBig Liz felt very good. This woman was truly into the scene, so Liz could let herself go. There were two things that her threesomes with Ralph and Little Marilyn did not supply: bitchy domination, and enough one on one possessive good lovin' and cuddlin' tenderness. She now saw a way to get some of both, starting with Ms. Faculty Wife being her little bitch tonight, and finishing with charming Robbie right out of his Suzanne and Lara habit. She used a step ladder and adjusted her position so that her pussy was now Veronica's whole world, holding onto the ropes to steady herself. I almost looked like she was riding Veronica like a wakeboard. The lights from the central tower came on full and the two women were shown in full contrast and relief. The crowd gasped. Soon Big Liz was gasping too. Ms. Faculty Wife could really eat pussy!\n\nVeronica had decided to do it up right: give it all the attention to detail she herself wanted when Rock ate her. She had taught him systematically and scientifically what she liked, and he was devoted and very good at getting her off. She undertook her own survey of what this big, tall, and hot college girl liked, and enthusiastically gathered her data. She got quick feedback. The girl's legs shook and her muscular thighs twitched, and her pussy gushed wet and tasty. Veronica liked it, a lot. \n\n\"There you go, lady! Right there.\"\n\nThe six designated males gathered around Veronica, the sights and smells inciting them to almost riot. Dorothy was surprised to find that watching from ten feet away and tied to this chair she was just as wet as in their bedsheets at home on their best nights. Professor Lillehammer bumped his chair over closer and nudged Dorothy's thighs with his. She liked that. \"Which one do you think will go first, Dorothy?\" She could not believe her husband was into this. We are sure not in Kansas anymore!\n\nWhen the tall girl finally climbed down the little step ladder, Dorothy realized that Veronica's face and shoulders were wet and shiny reflective in the almost blueish bright light from the towers. Then the wind blew the smell her way and she shivered as she understood exactly why. Then the smaller and very pretty girl moved the ladder a little, and stepped up one step higher than her friend had, and facing away from Veronica and toward the audience in the three chairs, sat down on Veronica's face reaching back to grab the ropes with her arms extended behind her. It looked like one of the stretches Saskia had taught Robbie to do after lifting. \n\nDorothy wasn't a mechanical engineering professor like her husband, but she could work out this spatial relationship. She gasped, then groaned. Her staid husband, Professor Lillehammer, giggled! She had never heard that before, ever. \"Dorothy, my dear, does that mean you want me to eat your little ass later tonight, or do you want to tongue Veronica's?\"\n\nWas this actually her husband speaking? She had put him off the very few times he had ever tried that on her, but a girl should try some new things sometimes, now shouldn't she? She bumped his thigh back. \"Prepare to pucker up, Professor.\" Now he gasped.\n\nIn the lights, the little beauty smiled and shook her ass like a stripper, pushing it back against Veronica's face. \"That's it little wifey! Get down on it.\" \n\nVeronica performed very well, and little Marilyn finally stepped away from her with a contented sigh. UDP Member #14, first to be chosen and egged on by his loudly vocal girlfriend, stepped up to the plate. All of the lights in the arena came up to full brightness, and the audience settled into their chairs or leaned on fence posts. The modern day sexual gladiator tournament was about to begin. The other contestants stood by in an interested circle around Veronica. \n\nVeronica Tappert suddenly realized she was about to enter a whole new chapter of her life, sexually at least. She had only been with a grand total of 4 men before she married Rock Tappert. Her first was a highly anticipated prom date that turned out to be anticlimactic in every sense of the word. Then a well-meaning but inept college boyfriend that took her two years to get away from, followed by her first husband. He was a wonderful man who made her very happy until succumbing quickly and unexpectedly to cancer at age 34. After a decent period of mourning she took up with a new suitor who turned out to be very seductive, very hot, and unbeknownst to her at the time, very married. Major fail.\n\nYoung Rock Tappert had been her next choice and her plan to pursue, and he turned out to be a real winner, especially for her. That he was comfortable with her fantasies and truly wanted her to feel fulfilled was amazing yet somehow humbling. Perhaps she should love him even more than she did. She had helped shepherd his career with a little sexual discipline and reward, and she did fulfill all of his needs and fantasies for him, albeit on her schedule, and he really did like to watch. Okay, Rock honey, watch this!\n\n#14 was not a very foreplay oriented kind of guy. Veronica's pussy was already dripping wet from her exposure to Big Liz and Little Marilyn, and he got down to business straight away. He was very hard and very persistent, and Veronica began to respond instantly. Perhaps it was knowing that so many people were watching, or the thought of 5 more guys waiting in line to take her, the lights, her frilly but still practically naked costume, the ropes that held her, or the smells of the animals, or the sounds and smells of the night air, but she was turned on like never before. \n\nShe felt her back arch like an alley cat and she gave herself up to a shuddering orgasm. \n\n\"Told 'ya he was dynamite, lady!\" said his overbearing girlfriend. \n\nVeronica chuckled. He is doing me, not you, little chicky bear, and I think he likes me better. At least I don't talk all the time. #14 then gripped her around the waist and powered in for even deeper penetration. Good boy! She grabbed him with her pussy muscles and kneaded his dick like bread dough. \n\n\"Oh yeah, baby, clamp down on it!\" he said. Veronica tried to make eye contact with his girlfriend, but couldn't spot her. She came again and he pulsed like he was about ready. He must have watched more porno than he had real sexual experience, because he decided he was going to come on Veronica's face, perhaps showing off for his girlfriend and the audience. But Veronica, despite her frantic excitement, basically liked things tidy. When he got close to her, she sucked his dick into her mouth and milked him dry, giving him no chance to spray about. \n\n\"Oh God!\" He cried out, just as Veronica made eye contact with his girlfriend. From the look on her face, Veronica could tell that this kind of finish was not something that little girlfriend was doing for him. Veronica felt triumphant. This kind of thing would never have happened at Virginia Tech, she thought. \n\nRock Tappert was apoplectic. His cock was so hard it hurt. He had never seen Veronica look so beautiful. One down and five to go - except maybe some of them would go more than once. He shivered. Damn. This would never have happened at Virginia Tech, would it? Welcome to Texas. \n\nVeronica saw #43 line up next, the huge Samoan guy will long wild hair and big muscles. Was this the guy she had seen doing all the wild Samoan chants on the Longhorn network? He was huge and powerful. Veronica shook some more. Now he was definitely a foreplay kind of guy! He caressed her tenderly, using his big hands to gently but very thoroughly feel her up, covering every square inch of her skin. He was good at it. She began to huff and puff, and just about the time she didn't want him to be gentle anymore, he wasn't! \n\nHis cock was now hard and pointing straight ahead though his chaps. If she hadn't been tied on to the little saddle, she would have reached for it with her hands. His hands were now pawing her breasts and then he began grabbing her ass and thighs. Please don't stop. Soon he moved behind her and there was no mistaking his intentions. He kneaded her ass checks and bumped his cock against her opening, driving her crazy. Then suddenly he took her, full on and all the way home.",
        "Professor Red 'Rock' Tappert jumped like it was happening to him. His chair was only about ten feet away, so he had a great view. \n\nVeronica groaned, an animal sound, and then her legs began pushing back against the Samoan's thrusts with a mind of their own. He had good timing. The giant Nigerian moved in front of her and began caressing her hair, obviously about to offer her his cock to suck, and Husky Varna joined him on the other side in front of her, with a similar plan.\n\nSuzanne was now groaning, and she stuck her hand down in the back of my pants and began touching my butt cheeks. I know why guys want to do that to women, but why do so many women want to do that to a guy when they are turned on? Lara put one hand on Suzanne's ass and stuck the other into my pants. I was already about as hard as I could get.\n\n\"Is that what you want, Suzanne?\" Lara whispered in her ear. \"Three dicks at the same time? Four?\"\n\nSuzanne shook and groaned, then responded with her softest but deepest sultry voice \"Yes, and I am not ashamed to say so!\"\n\nIt IS a fucking epidemic, isn't it!\n\nA breeze blew in from the northwest, cool and smelling of rain. A flicker of lightning danced from cloud to cloud across the sky to the north, and then a bright cloud to ground stroke hit somewhere well northwest of the arena. Despite the distraction of Suzanne's hand on my butt, I began to chant slowly and count like my grandfather had taught me long ago: \"Elephant one, elephant two, elephant three...\" I reached 20 before the thunder boomed loud and rolling. About five seconds per mile for the sound to travel at STP, so the lightning had been about 4 miles away. Another lightning stroke, a 17 count, and another boom of thunder. The storm was moving our way, and fast. The pick six penetration crew was moving fast, too. \n\nThe big Samoan was now enjoying Veronica's talented lips and tongue, while Chile Talemantes took over his doggie style pussy duties. Veronica ate Chili greedily. They soon found a rhythm. Then she looked up to see Husky's offer and she accepted it with a big smile. She was in complete rut. She was beautiful, erotic and captivating - alternating back and forth between sucking on the two cocks in front of her, while meeting the thrusts from behind enthusiastically. \n\nSuzanne groaned again. The only good aspect of that, from my point of view, was that I could see that Husky's cock was almost exactly the same size as mine. In fact, all of them that I saw, except Ralph's ridiculous statistical outlier of course, were just about average. Mine might have been even a little thicker than most. Thank goodness for small favors. Er, ahh, yeah. \n\nLittle pings and pongs of big rain drops began resounding from the metal stock tanks, fence posts and the light towers around the arena. Then it stopped for a moment. The wind blew in little puffs. \n\nRalph then stood in front of Veronica, with Liz and Marilyn pointing to his giant and very erect cock like catalog models on a cable shopping channel. She was so devoted to sucking on Husky Varna and her new Samoan friend that at first she did not notice. Suzanne did. \n\nThe three guys working on Veronica switched positions. Husky entered her pussy from behind, while the other two enjoyed her mouth. Husky pulled himself up with one of the ropes holding the saddle and used one hand to grab the orange and white bandanna in Veronica's hair, pulling her head up and back slightly, and getting a very advantageous angle of approach, penetration-wise. She began keening in time with his thrusts. So did Suzanne, damn it. \n\nAnother breeze and flicker of rain drops. More lightning, count to 12, and then very loud boom of thunder. If this were a high school football game, a rain delay would now ensue. But this was no high school anything. Husky picked up his pace. Rock Tappert groaned, and Veronica shook with a giant orgasm that almost looked like a seizure. A powerful booming Suzie signal emerged from her - excitement and contentment mingled, so loud it rivaled the thunder, but I guess I was the only one listening. If a tree falls in the forest...\n\nThen she noticed Ralph approaching. Her Suzie morphed and distorted, but got even louder. It spoke of fear, excitement, and apprehension but soon turned to lust: raw, pure and uninhibited. Husky continued to piston her pussy from behind, and Ralph moved his cock an inch from her lips. She took it hungrily, and began to alternate crazily between all three cocks in front of her, nostrils flaring and her breath shuddering. Suzanne was breathing like an asthmatic next to me. Veronica came again, bucking in the ropes and leather straps and making the saddle move like a swing. \n\nThen Husky climbed up even higher in the ropes, totally above Veronica. Ralph moved around into position behind her, and she seemed sad to see his cock leave her mouth. But then she tumbled to where it was going, and shook. Ralph moved in slow, finding his target and then slowly moving forward. Veronica pulled her mouth off the two remaining cocks and made a strange noise. I was reminded of that politician and erstwhile presidential candidate that made the same kind of strange high pitched noise on TV and was never perceived the same way again. Perhaps no one would think of Veronica the same way again, either. Especially Veronica. And her husband.\n\nRalph entered her slowly, inexorably. She tensed, frozen for a moment. He continued in. Then she tensed again and shook, then seemed to relax. Ralph moved in a little further. She pushed back against him. He finally was fully engaged. Suzanne's hand grabbed my ass and held it tight. That was going to leave a mark. Ralph pulled back out and started forward again. Veronica did not move. Five more long slow strokes and then Veronica slowly pushed back against him.\n\nBig Liz laughed. Rock Tappert screamed again. Suzanne gripped my ass even tighter. That hurts! In more ways than one.\n\nHusky Varna grabbed the two main ropes holding the saddle up and pulled down and towards the center of his chest, in exactly the motion that Saskia had me make on one of the rope and pulley weight machines in the gym to build up my chest. Mr. Husky \"Linebacker\" Varna was already built up - another 'after' picture to my 'before'. The net result of his effort was to reduce the tension in the ropes, and Husky then twisted the slack from one rope around one of his boots (including the chaps on his legs) and then the other. When he released the effort of his shoulders, the ropes tightened again and held his boots in a fixed position just behind and above Veronica. It must have been some kind of rodeo move.\n\nI had never seen his next move in any rodeo, though. He leaned forward, timed the bucking motion that Ralph's efforts expended on Veronica's pussy were lending to both Veronica and the saddle, and then gradually slipped his cock into Veronica's ass. He grabbed the white leather cylinder that held her neck up and began to fuck her ass in earnest. Ralph looked a little annoyed at the new view of Husky's bobbing white ass right in front of his face, and leaned back to avoid it. Veronica looked blissful, nostrils flaring and eyes wild. Her head bobbed like she was dancing.\n\nSuzanne snorted and said \"Ride 'em cowboy!\" much too loudly and enthusiastically for my comfort. \"Who is that again, Robbie? Is he in UDP?\" Damn her.\n\n\"His name is Russel Varna. He is a potential UDP pledge.\" \n\nShe gasped and pinched my ass cheek even harder. \"You mean the football Varna?\" I guess she read The Daily Texan, too. But I doubted that her interest was football. \"How do you know him?\"\n\n\"He's in my linguistics class study group. He seems like a nice guy.\" I tried to sound nonchalant.\n\n\"He sure does!\" An overtone joined her already frantic Suzie that had been building toward a crescendo ever since UDP member #14 first touched Veronica. For his part, #14 was now moving tentatively around trying to find a way to re-join the fun, but not having much luck. All the serving stations were currently occupied other customers. \n\nAnother set of little pings and pongs of the big raindrops hit, and this time did not stop but continued and grew. Another flash of cloud to cloud lightning showed that the thunderclouds were getting much closer and much taller. Chile Talemantes grunted and very obviously came in Veronica's mouth, and she just as obviously polished it off with relish. Then our Nigerian shot putter took Chile's place and put his shot, too, and Veronica took it all, hungrily. Another cloud to ground lightning stroke, closer and louder. Veronica then switched her oral attentions to her new Samoan friend and he promptly gave his tribute up for her too. \n\nRalph, his head turned to the right and away from us to avoid Husky Varna's butt, began bobbing his head and moving even faster, grunting loudly. Big Liz and Little Marilyn announced in unison \"Here it comes!\"\n\nHusky sped up his motions too and turned his head to the left so he could see most of the crowd, and then winked theatrically. Veronica gasped as Ralph and Husky then quite obviously applied simultaneous fluid overpressure to two of her most sensitive areas. \n\nSuzanne cooed \"Ohhhh Myyyyy!\" and then Veronica and Rock Tappert screamed at the same time. \n\nAnother lightning bolt and almost simultaneous boom of thunder sent everyone scurrying. The little raindrop pings and pongs had turned to booms and gongs and soon accelerated to a rushing torrent of noise. Then the rain came in earnest - wet, loud, and steamy - warmer than the air it was falling through. Soon it drowned out all other sound. Everyone ran for the covered pole barn at one side of the arena but still they were soaked through before they got under cover. \n\nThe pole barn was big, but open to the weather on two sides and full of hay bales, a tractor and implements, fencing supplies, and feed bags. The corrugated metal roof resounded with the sounds of the pounding rain, so loud it was hard to hear anything else. Everyone pushed in towards the middle to get away from the wind and rain, resulting in some very high density people packing. Fifty guys clad in only wet leather chaps and boots (everyone had lost their masks by now) were quite a sight that close up, not to mention a dozen young ladies in only wet white panties, plus Lara and Suzanne in their leather sex suits and the incredible water skiing Candy in just her leather gloves and knee pads.\n\nLara had taken Dorothy Lillehammer with her into the barn's single rustic bathroom to help clean Veronica Tappert up a bit after her adventure, and a line was starting to form in hopes of handling some urgent bathroom needs as soon as they were finished. Cisco's friend Buck, whose family owned the ranch, stood around sheepishly taking in the sights and then opened up the big fridge near the bathroom and offered everyone a cold Coor's Light. It was obvious there was plenty available even for 50 frat guys. Suddenly it was a very strange party atmosphere, and not just because of the Colorado Kool aide. \n\nThe movement to and from the beer fridge, into the bathroom line, and away from the cold wind and splashing rain at the perimeter of the roof set up a strange Brownian motion inside the structure. As various people passed by each other, some unusual meetings and conversations took place. Several were awkward and uncomfortable, especially for me. \n\nFirst of course, I found Husky and Suzanne both close to me and each other, and looking expectantly at me to do the introductions. Shit. I cleared my throat even though I didn't really need to. I wish they both had a lot more clothes on.\n\n\"Suzanne, this is Russel Varna. Russel, my friend Suzanne Pliskin.\"\n\n\"Call me Husky.\"\n\n\"I can see that.\" Damn it. He managed not to stare. Suzanne looked him over slowly and thoroughly, and then excused herself.\n\nHusky watched her walk away. \"Damn, Robby. You are doing much better even with the ladies than I heard. She is amazing. Few women could pull off that outfit.\" I hoped he didn't mean that literally. \"Hell of a party you guys threw here! Beats the shit out of any other frat party I ever heard of.\" \n\nI managed to look confident. \"And you were the one that was worried this was going to be an Alpha Gamma party? Oh Ye of little faith! UDP is different. Very different. Maybe you will have a chance to learn more.\" He gave me a little phony shoulder punch and walked off to try to chat up Candy and Member #14's girlfriend.\n\nSuzanne was making her way toward the bathroom line, perhaps to wait for Lara to emerge with Veronica. \n\nI saw Liz and Marilyn, separated from Ralph. This might be my best chance. Before I could raise the subject, Liz did. \n\n\"Hi Robbie. I haven't heard from Suzanne about our proposed \"swap fest' as she called it.\" She looked at Marilyn. \"We are on board if she wants to play with Ralphie a bit. Ralph certainly is ready for Suzanne. We are hoping she might improve his game.\"\n\nI tried to smile coolly, hoping my lips weren't trembling. \"I can't imagine anything more wonderful than getting to know each of you a lot better. \" \n\nThey both smiled a tight little smile. Marilyn took my arm. \"I hope you are very detail oriented, Robbie.\" Then they both sashayed away. I was detail oriented, and very scientific about it, and a much more effective detailer than they could ever guess. But they would learn. I was going to make sure of that.\n\nI continued to survey the strange scene. I was glad there was no party photographer, and most people could not hope to conceal a cell phone in what they were wearing. \n\nRock Tappert walked up to me. I was worried about what might transpire between us, but he was all smiles. \"Bravo, Roberts. You really pulled it off, so to speak!\" he laughed at his own bad joke, then, unfortunately, continued it. \n\n\"Come to think of it, pulling it off is about the only thing Veronica didn't do to those guys tonight.\" He smiled. \"That's the hottest we have ever had it, and we will remember it fondly and relive tonight for a long time. A world class pranking, even better than I could have imagined. Color me officially impressed. From now on, anything you need to help with your schooling, or anything else, just call on me.\" I was stunned. It takes all kinds to make a world.\n\nAcross the pole barn, Lara and Dorothy Lillehammer emerged from the bathroom with Veronica Tappert between them, all three with their heads held high. Veronica was back in her evening dress. Revealing as it was, it was much less so than her orange and white and rope and leather gang bang costume from earlier in the evening. Everyone in the pole barn looked at them as they walked toward me. Rock Tappert met them a few feet from the door, and gave Veronica a big hug and a showy kiss right on the lips. Not sure I could have done that. She beamed at him, and took him aside into a little corner blocked off by a big blade scraper thing that was disconnected from its tractor. They put their heads together and talked earnestly for some time. Everyone left them alone.\n\nThe rain got even louder, and the lightning was almost continuous. Then the noise took an almost impossible increase - hailstones began hitting the metal roof. They sounded as big as bowling balls and made my ears ring, but a glance through one of the open sides of the pole barn showed they were somewhere between the size of BB's and green peas. Not too unusual for spring in Central Texas. It was now as if all the humans were huddled together against the outside threat in a cave, or a boat on a dark sea, or a space ship filled with light going through the void of space. A little tribe, driven together by outside forces. Tribes had tribal rituals, right?\n\nThere was a cottage industry around the Greek crowd at ESU that supported party decorations, tee shirts, bandanas, beer can coozies (often held at parties in the hands of cozies), and other party favors. Some of them were quite creative, usually much more so than the fraternity or sorority could have managed without the artists/entrepreneurs that made and sold them. Someone had made up and put out a party favor for tonight, and people were picking them up from an orange and white wicker basket placed near the entrance to the pole barn. It was a rope key chain - thinner but otherwise the same kind of rough working rope that had held up the little saddle that Veronica Tappert had rested on during her adventure, with a frilly little brunt orange and white cloth at the top that looked a bit like the bandana that had held Veronica's hair up while she was on display, then small knot that could have been her head, and a white leather tube like the one that had been around Victoria's neck. A little double knot symbolized her breasts, then a larger knot that looked a lot like her shapely ass. There were little burnt orange paint dots to represent her eye shadow and painted toenails, and three strategically placed pink dots to represent her mouth, pussy, and anus. At the bottom were what looked like little white boots. A little tag on the key clip said \"UDP Fantasy Spring Thing. What's Your Thing?\" in burnt orange letters on a white background.\n\nThis was highly creative, but its manufacture also required intimate and advanced knowledge of Veronica's little adventure. A moment's thought led me to conclude that Mei Ling had been the culprit. She had been quite interested in our plans for Mrs. Tappert. She and Cisco seemed quite happy together, but I caught a little funky Suzie note from her on occasion. Maybe she was really into what this little party doll represented? Might have to talk to her about that. I guess even a martial arts expert might like to be dominated sexually sometimes. But you better make sure she likes it or she could break your legs afterwards. \n\nI looked up from my woolgathering to see an unlikely group in animated conversation: Professor Lillehammer and his wife Dorothy, with Rock Tappert and Veronica, now free of their restraints and dressed in their evening clothes from their fundraising arrest, plus Oiler, Ralph, Cisco, and Husky Varna in their chaps and boots, and Gretchen, Liz, Mei Ling, and Marilyn in their little white panties, nipples all perky from the cool night air. Suzanne and Lara rounded out the collection in their leather suits. \n\nI couldn't hear what they were talking about until I was almost inside their circle. It turned out amazingly to be quantum physics again - crystal nanostructures, quantum tunneling, optoelectronic devices, topotactic transformations, and the observer sometimes perhaps determining the outcome. The girls were actually off to the side with their own little conversation, which I still could not hear. \n\nI joined the group and listened for a minute or two, and then opined that linguistics played a part here. Cribbing from Roger Penrose and Dr. Augie, I said that if the brain was a quantum interference device, then perhaps linguistics was the symbology it used to try to manipulate the universe. Several jaws dropped. \n\nThen Rock Tappert raised his half full Coors Light can. \"A toast to our own Mr. Roberts! He's a lot smarter than he looks.\"\n\nRalph joined in. \"A LOT smarter than he LOOKS!\"\n\nHusky Varna raised his beer, too. \"Wouldn't he pretty much HAVE TO BE?\" Everyone laughed, except me.\n\nI felt simultaneously respected and dissed, but at least I was included. Thanks a lot, sons of bitches. But I guess they were my brother sons of bitches.\n\nI noticed that Suzanne and Veronica Tappert were talking earnestly and alternatively in each other's ears. I wasn't sure I wanted to overhear that conversation, now or later. But I expect the subject will come up again. Thanks a lot, bitches. \n\nThe rain played out and finally stopped, as the lightning flashes and thunder booms moved off to the southeast. Rodney Driver and his cousin and girlfriend picked up the Lillehammers and Tapperts to take them back to the hotel and their car. They were the first to leave. Then people began to trickle out to their cars and head back to the UDP house for the 'after party' or wherever they were going. I gathered up Suzanne, Lara, and Candy and we started the drive back towards campus.",
        "++++++++++++++++++++\n\nDwight soon discovered that Shaniqua's real name was Charlene Jackson Johnson. Small wonder she wanted another name for herself, not to mention another life. Her 15-year-old mother was a hopeless crack whore, turned out by her own half-brother and pimp, who ended up killing Charlene's biological father before Charlene was even born. That might have been his only good deed. An almost endless parade of foster homes followed, and they ranged from mildly neglectful to severely abusive. Young Charlene was very bright, and formed the iron clad conclusion that it she didn't look out for herself, no one else ever would. \n\nDwight's employer had a very extensive program to characterize childhood drama and bin sort the resulting adults into categories by most likely successful means of manipulation and usefulness to the agency, and Dwight saw a couple of possibilities for Charlene/Shaniqua. Her interactions with the state's child services, foster parents, and police had left her with a profound disrespect for authority, and the ease with which she extracted large sums of money from nouveau riche fools like Professor Jack left her with little respect for the so-called academic stars and rising business leaders she worked on every day. She did respect her savings account, and her plan to move far away with another new name and a whole new life. Dwight could use that.\n\nShaniqua's accounts were pretty easy to find, and the money trail led to a three-year-old daughter, adopted, that was apparently the only other person that really mattered to her. Dwight was a little suspicious of the adoption, but the papers were in order. A little judicial records search and mobile phone metadata grouping and snooping discovered that the attorney of record and the family court judge involved were also escort clients, and that explained a lot. But it was also a vulnerability that Shaniqua couldn't afford to leave uncovered. Dwight could use that too. \n\nBut the real ringer turned out to be some of those other phones in Shaniqua's mesh: several were watch listed as being in use by China's foreign intelligence service. He started an extended connection search, but Dwight already knew what was in Shaniqua's future. He was actually going to need Roger Sherman to do the doubling on this op. Hopefully Roger wouldn't' screw it up.\n\n+++++++++++++++++++\n\nRamesh liked to mess with the support callers, sometimes. Life in a Bangalore call center was sure better than begging on the streets or working in the cane fields like his grandfather had, but still he was not happy. He should have gone in with his now multi-millionaire cousin on that outlaw SIM card deal, but he didn't like the idea of traveling to Africa. His center mostly took calls from internet customers of cable conglomerates in the USA. Boring! Reset your modem, clear you cache, restart your browser, make sure the cable is plugged in, which lights are lit on the front of your cable modem? These people paid more per month for lousy cable and internet service than most of Ramesh's co-workers made at two jobs. They had money to burn, but they were so dumb! He just couldn't resist messing with them. \n\nOne of his favorites was a woman who called to say her husband had hit 'our black box' with a baseball, and she was not getting internet any more. Ramesh made her check the revision level of her browser and OS and detail her browsing habits before telling her she had to either wait five business days for a service call or take the modem to one of the cable company retail locations to swap it out for another one. That was fun! Another male caller was complaining about how slow the response time on his browser was getting, and Ramesh told him about malware, super cookies and memory leaks, and then made him confess to porn surfing on nasty and surely virus laden web sites before finally relenting and telling him how to download the free MacAfee that the cable company offered. \n\nBut today somebody was messing with Ramesh. The message had come in on the internal email, but certainly not from one of the other call center people. It featured a picture of Ramesh and his supervisor from the webcams on their workstations, and some details about how Ramesh had been manipulating the call statistics to make him look better, plus definitive documentation refuting his phony filing claiming to be lower caste than he was to get favorable treatment at work. It made his skin crawl.\n\nThe emailer wanted Ramesh to do things to the account of a certain caller from California. When she called in, Ramesh was to offer to remote into her computer and fix things for her, and in the process change a few settings and leave some things on her machine. There were instructions as to how to do this without leaving any threads to trace back to Ramesh, and they were pretty slick exploits, too. The writer assured Ramesh that the customer would call this evening (California time) and that the call would come to Ramesh. How did they know that? Then the email just vanished from his inbox without him doing anything, leaving a few executable files that looked innocuous on his desktop. Kuthra Sala!\n\nThen a pop up message (not a regular SMS!) on his cell phone with a photo of the block of flats where he lived: \"Thanks, Ramesh\". Damn it. He didn't have much choice, did he?\n\nThe call came through later that day, from Redwood City, California. A pushy and loud young woman was having trouble connecting with her cloud based financial management software, just like the email said she would. Ramesh used the remote support app, having the woman open another browser window and give him the 6-digit code to let him into her machine. He opened a script, supplied by the emailer, that opened another window, minimized itself, and began delivering its payload to her laptop. Ramesh took his time fixing the other simple problem that had been artificially created on her machine by a little java applet that could have come from any pop up ad. The mystery script finished before Ramesh did, then deleted itself without a trace. Shaniqua even told Ramesh \"thanks\" when he was finished. \n\n+++++++++++++++++++\n\nRock Tappert was glad someone else was driving back from the 'rodeo'. He chuckled internally. Everybody else is probably glad too, given my driving record. This Rodney guy seems like a real professional, and he has a vocabulary way above your average limo driver, too. His mind was racing. Robbie Roberts had really surprised and astounded tonight. Seeing Veronica get her world rocked always 'rocked' him - literally and figuratively. He felt alive with consciousness expanding, and very horny to boot.\n\nVeronica had had him on a sexual work stoppage for the last week until he finished his monthly patent papers - no action until they were final and sent to the attorney. She had learned that Rock often had many good ideas each month that he didn't even write down before he forgot them, and she put in place a procedure to make sure they benefited from those ideas if at all possible. He would write a technical brief on the prior art and possible claims and send it to his patent attorney who would turn it into applications to the patent office. Once that brief was sent off, the sex would start up again. The more he did, the more he got.\n\nHis patent guy, Homer, was a high functioning Asperger's Syndrome semi-autistic 'rain man' kind of guy, but he was a licensed attorney who really knew his materials science and he was a magician at turning potential claims into solid filings that the examiners issued patents for. Sometimes Rock would send him what he thought were two patents worth of ideas only to discover that they had turned into ten patent applications after Homer worked his magic. Homer was independently wealthy from a family inheritance even without his legal practice, but he was somehow driven to do patent law. He lived way up in the mountains of New Mexico and rarely saw anybody in person, but he was a friggin' genius at his specialty. \n\nRock had been suffering from 'writer's block' or 'inventor's block' or whatever you called it, for at least a week. Suddenly he realized tonight's little fuck fest had cleaned out his pipes! He saw several other ways to get around what he had been bumping up against, and let his mind run with the possibilities! Why didn't I see that before! He tried to make mental notes so he could write everything up when he got home. Shit, maybe I should make Robbie Roberts co-inventor on some of these!\n\nWhen they got home, Veronica was amazed that Rock went immediately to his home office and fired up the laptop. She thought he would pester her for a 'hall pass' for some action after tonight's show even though he hadn't finished the patent briefs for this month. She took a long shower in her own bathroom, washing her hair, and working on her nails, getting everything back together and then she tried to stay awake until Rock came to bed. Two hours later he came into their bedroom with a big sheaf of papers and a big Manilla envelope addressed to New Mexico. \n\nShe glanced over the pages - six briefs for six apps, and all for new kinds of solid state devices. \"Oh, Rock, this is wonderful!\"\n\nHe took the pages, put them in the envelope and sealed it, and then put it on the night stand. \n\nThen, with a huge smile on his face, he dropped his pants, revealing a raging hard on, and reached for the back on her head!\n\n\"Oh, Rock, this is wonderf...mumpf.\" She just loved it when he got this way. She would do anything for him, and he knew it.\n\n+++++++++++++++++++\n\nOne the way back from the ranch, my little car was brimming with sexual tension and you could almost see the estrogen molecules floating in the air. Candy, Nora, and Suzanne had all watched the proceedings in the rodeo arena with interest, and although Suzanne had the most visible and visceral reaction, I could tell it had a major effect on all three of them. I cracked the window a little to release some of the tension. We had about 25-minute drive back to campus.\n\nI saw Suzanne looking up into the rear view mirror to make eye contact with me, and then she held her tongue up on her upper lip in obvious provocation. She glanced around at Lara and Candy, and I saw a mischievous smile on her face. \n\nLara spoke up, trying to sound innocent. \"So, what do yawl want to talk about?\"\n\nThe other three erupted in a storm of giggles. Candy took one of the little party favors, and held it up in front of her face where everyone could see it. \"So,\" she began haltingly, \"let's talk about... dicks!\"\n\nAnother round of giggles, followed by snorting inhalations. \n\nLara smiled. \"Whatever made you think of that, dear?\" Belly laughs.\n\nSuzanne couldn't resist another upper lip touching grin and leer. \"I am TA'ing a statistics class next semester, and I was looking for fresh articles that the students would find interesting that would also be relevant to the material.\"\n\nLara looked lost, but Candy smiled. \"You mean that one about the latest statistical data on penis size?\"\n\n\"Exactly!\" Suzanne sounded pleased. \"Kings College London undertook the study from NHS data because so many British men were 'concerned' about their size compared to other men.\" All three for some reason looked at me. \"it turns out the average size is smaller than most people thought.\"\n\nI remembered another sophomoric discussion at the UDP house and an old Saturday Night Live skit where the actresses discussed an average penis size of nine to ten inches when erect, sending many teenage boys like me scurrying to the encyclopedia for some numbers and some hope. \n\nLara spoke up. \"I saw another article. Not about size, but about quality!\"\n\nThe two other girls turned to look at her, obviously surprised. \"Quality?\" they said in unison.\n\nShe continued. \"They surveyed women about what they liked and disliked about dicks. Years ago when many of the original studies were done, most women hadn't seen enough of them to really compare and contrast and learn what they preferred.\"\n\nSuzanne swiveled to look at her. \"What did they ask them?\"\n\n\"Well, they asked then to list the most important things to them and to do a ranking of relative importance. If turns out length was way down the list.\"\n\nCandy spoke up. \"You mean it's no big deal?\" Giggles again. \"What was number one?\"\n\n\"General cosmetic appearance was most important. Then the pubic hair, appearance of the skin. Girth was more important than length, and then the appearance of the scrotum. The opening at the front and the shape of the head was least important.\"\n\nSuzanne let out a conspiratorial sigh, then spoke in a whisper. \"When I was a teenager in North Africa, I had a very prim and proper French governess. She didn't know I had discovered her stash of erotic literature, all written in French. One of her books had a short story called \"The Man with the Perfect Penis.\" \n\nAnother round of giggles ensued. \n\n\"The story said his penis was not too long, and not too short. Not too thick, and not too thin. It was perfectly proportioned. The skin was fair, unblemished and clear. He was circumcised and very symmetrical. Any woman who saw it was immediately captivated by it. His balls were symmetrical and big and but did not hang down too far. His pubic hair was clean and curly.\"\n\nAll the other girls looked off up and to the left as she described this. I tried to look away, or at least at the road.\n\n\"So, Suzanne\" said Candy, \"What do you think is the perfect penis?\"\n\nSuzanne smiled. \"I need more data.\" Gales of laughter, except from me.\n\nI said nothing, but decided that I only have one penis and I really don't have any opinions about any others. Mine is the only one I am ever going to have, so I have to think it's wonderful. If they don't think so, then fuck 'em. If they do think so, then...really fuck 'em! That's my philosophy. \n\nWe all had classes and or exams the next morning. I dropped Candy at the Villas near the PIG house, then Lara at her place just south of MLK, then drove Suzanne to her apartment south of the river. I thought she was going to say something more about tonight's activities, but she was strangely silent. I walked her to the door and kissed her goodnight, unsure of what either one of us was thinking. \n\nAs I drove back toward campus, I tried to have an adult discussion with myself. Was she thinking about her own little gang bang? Would she enjoy it as much as Veronica Tappert obviously had? I was absolutely sure I wouldn't enjoy it as much as Rock Tappert had. But could I stand it? To let her get her fantasy for once? Should I? \n\nI was the one that used her own desire for some 'wild college days' to get in her pants. I offered to be her meat puppet with no commitments that she could dump at any time. If I was really thinking only of her excitement, I should put together a foursome with me, Ralph, and Husky Varna all working her over. Maybe Kevin, too. That would send her 'round the bend, wouldn't it?\n\nIt was funny, but doing her along with Ralph and Husky or even Kevin somehow didn't seem as awful as it had with G\u00fcnter. Why did G\u00fcnter freak me out so much? That was some kind of paradigm shift! Or as my father called it, that paradigm shit. Would I lose my nerve at the last minute and shoot an incapacitating Suzie blast at Husky or Ralph? \n\nI was certainly on a philosophical journey leaving traditional monogamy behind. But where hell was I going to end up?\n\n+++++++++++++++++++\n\nI wanted to go up to RLM to check something with my math TA, and I knew she would dutifully keep her office hours even on the day before Spring Break officially began. But it was raining cats and dogs outside. I refused to ride a shuttle bus just to get a few blocks north of the dorm, rain or not, but to minimize how wet my clothes would get, I made my way under cover from building to building to get there. Real ESU men didn't use umbrellas on campus, nor ask for directions. They might wear a windbreaker, and they know where they are going. This plan meant I would go through Welch Hall, aka the Chemistry Building. It had been under construction (and fundraising campaigning) for years, and in its new form would include monuments to Monsanto, Texaco, and anyone else who ponied up the cash and/or recruited enough ESU chemistry grads. The huge second floor hallway was finished and ran roughly South to North. I had never been through there before, and it was a zoo. \n\nI had heard that ten thousand students attended classes there every day. At this particular time literally several hundred, maybe even a thousand, milled about in this one hallway: going in and out of several big lecture halls, picking up graded exams, talking about the exam they just took, sitting in chairs eating lunch or studying, or just staying out of the rain like me. It looked like the DFW airport gate area on the day before Thanksgiving, or a scene from that weird sci-fi movie Kevin had showed me - \"Soylent Green\" where people just walked around all day because there was not enough room for all of them to have a bed or even a chair. All of the people were between 18 and 20, and most had backpacks on. They were short and tall, thin and fat, well dressed and not, in every variation you could imagine, from at least 20 different countries and speaking at least 20 different languages.\n\nI was reminded of Suzanne telling one of her 'economics inside jokes' about consultants. It seemed some consulting outfit had made millions as consultants often do - repackaging things their big client firms already knew and charging a lot for doing it. This particular firm like to use two axes to divide things up into four quadrants and develop and recommend four or more different strategies based on this, presumable charging four times as much. The comic strip Dilbert had wickedly spoofed this by setting up an X axis that ranged from 'ugly' to 'cute' and a Y axis that ranged from 'dumb' to 'smart', and then dividing all people in the workplace into four quadrants. The lower left was ugly and dumb, the upper right was cute and smart, lower right was dumb and cute, upper left was ugly and smart. Sic transit gloria mundi. \n\nI then thought about some of the women I knew. Jean Nancy, of pecuniary Suzie note, was very cute, but not too bright. Lower Right. Orinda McDaniel was top of the scale beautiful, but just above average in brains. Suzanne and Lara were surely very cute and very smart: Upper Upper Right. Nora was a genius with the looks of a goddess. Extreme Upper Right corner. I didn't really know anybody on the Lower Left. Well at least they didn't come to ESU. There were a few in middle school, though. Actually more than a few. Then it struck me: I was strictly in the middle somewhere. Brighter than average, but not way up there. Average looks, too. All my parts were there and in relative symmetry, but I was never going to be offered any modeling jobs. \n\nThat's why people looked at me funny when they saw me with Lara, or Suzanne, or Nora: I was out of my lane. I had first heard that expression from Theo Cadwallader and his old money frat brothers when someone of merely moderate financial means was trying too hard to get a bid to pledge PIG. Out of their lane. I couldn't help but try to place all these people traipsing by me in Welch Hall into their proper quadrant. Analytic people watching! \n\nWhen I reached RLM, my TA was in her little shared office. She was wicked smart, with above average looks, and she answered my multivariable calculus questions most efficiently. \n\n+++++++++++++++++++\n\nLara had taken her LSAT in February, and was planning to take it again in June if her scores weren't great. I heard that applications to law schools were way down, and I thought she could get in somewhere. But she didn't just want to get in somewhere. UT Austin, which considered itself a hot shit law school, was her extreme fallback backstop emergency school. Her dad could get her into SMU with a phone call, but that was way below her aspirations. Likewise, she wouldn't even consider Duke, Michigan, or UVA. She laughed at Georgetown, saying they were 'so forty years ago'. She wanted Yale, Harvard, or Stanford, with maybe Columbia or Chicago for a fallback. I hoped she wasn't riding towards a fall.",
        "But her scores came back fine and she was ecstatic. Suzanne began to rib her about being \"Legally Blonde\", but Lara gave it right back to her. \"Suzanne, please. I am much taller, have much better hair, and much bigger boobs! You may kiss them now to make up for your insult!\" Suzanne did, worshipfully. So did I, just for luck.\n\n++++++++++++++++++++\n\nI was to meet Nora at an early morning SXSW financial subconference presentation she wanted to see before we left for San Antonio. The freaking bad traffic during SouthBy would normally make that horrible plan, but since my car was parked at Lara's building, which was only about 12 blocks from the hotel where the presentation was taking place, it was actually pretty easy. Walking was by far the fastest way to get around downtown, despite the claims of the Pedi cab peddlers. \n\nI left the dorm early, carrying my small carry-on bag plus a hanging bag that together contained three days' worth of hopefully unrumpled clothes and stuff for the SA trip. I was hoping I would only need clothes for 1 day with the remainder of the trip spent behind closed doors in bed with Nora. The anticipation was palpable. Visions of the amazing Nora Upton in various stages of undress and arousal appeared in my mind like pop up ads on the web. I dropped my stuff off at my car, and then made my way to the conference venue. \n\nNora had left a pass and badge for me at the sign-in desk, and suddenly I felt underdressed, even in my slacks and blazer best. It was definitely a financial crowd, happily overdressed for Austin in the spring. Most of the guys had on ties that cost more than my entire wardrobe. The AC was cranked up to meat locker levels so they could wear their finest wool, politically incorrect as that was. I found the room for the seminar 'track' Nora was interested in, and slipped into the back door about five minutes before the scheduled start. \n\nNora's shining platinum hair made her easy to spot, not to mention the milling parade of guys trying to take the seat she was saving for me and simultaneously hitting on her. I slipped into the chair and enjoyed some withering looks from the obviously older, better looking and richer guys she had previously sent packing. I just had to rub it in with a brief kiss on her cheek. But Nora then rubbed it in so much better with a brief but magical kiss on the lips. Damn girl. Rub it in some more, please.\n\nThe presenter walked up to the podium and began fiddling with the laser pointer and laptop. He reminded me of uber-nerd Alexis T Quandry - thin and hyperactive, in a white on navy Brooks Brothers pinstripe but with long prematurely grey hair in a ponytail. Nora explained that this guy was a 'quaint quant' - a behind the scenes modeling and numbers guy rather than a 'bold' and 'potentially indictable' trader. But well paid - he was 28 and made $2M per year. Wow. I can see why Nora might prefer working on the street to being a professor. Knowing her, she would probably end up doing both. \n\nHe actually had pretty good bullshit, at least to my unsophisticated ear. He presented a new trading system based on a 'systole and diastole' market model - with 'dynamic sector inhibition coefficients' and a 'Pascal's triangle payoff matrix'. Jargon city, but it sounded cool. Thanks to my physiologist super trainer Saskia, I knew what systole and diastole were, at least in the cardiac function sense, and he apparently was saying that commodities and equites markets had similar repeating patterns of high and low pressure events that could be predicted and therefore exploited. The sector inhibition coefficients allowed adjusting the model to a particular investor's risk preferences and desired returns and time horizon, and the payoff matrix decided when it was time to cash in a particular position and plan another investment.\n\nI was ready to sign up, but then Nora whispered a few insider insights into my ear. \"Most of that is just cover story. It generates a massive paper trail on almost any position a trader could take, and a rational for getting in or out of any position on any given day.\" Her hot breath in my ear was rapidly depleting the blood supply to the brain between my ears, but I tried to follow her logic. \n\n\"Is that good?\" I asked, with my blood pressure rising, both systolic and diastolic. \n\nNora's wonderful warm breath once again fell on my happy right ear. \"It is if you have inside information that you want to trade on. You can get in and out and even if the SEC picks up an anomalous trading pattern, and you have a plausible, technical reason for the trade. You might say that his system's primary purpose is a 'reasonable doubt generator.' My cock was now straining against my pants, and my effective IQ had been reduced at least 50% due to blood supply diversion to my dick.\n\nShe went on. \"If you have a really big portfolio like the major hedgies do, you can even generate ongoing previous and seemingly non-random trades in any equity that will reinforce the idea that you are following the stock and have a rationale for trading other than the significant event you now have inside data on.\" She had by now noticed my penile predicament and was smiling and gently rubbing my right leg. \n\n\"It's so nice to know that you are looking forward to our trip, Robbie.\" Her tongue just barely touched my ear. I could not speak as this point. The presenter went on with his pitch, and Nora continued rubbing my leg. I bet I was having a lot more fun than he was. \n\nWhen he finally finished, I had to wait until Nora went up to talk to him and then count to 200 before my erection subsided enough to stand. I then had to push my way through the crowd around Nora to suggest to her that we head for SA before traffic on IH35 got too crowded. She tossed her hair and laughed. Ten guys gave me a dirty look. Tough beans, hombres. I'm outa here.\n\nThe drive was relatively uneventful, but the traffic was much thicker than normal. Nora, ever thorough, had arranged her own private tour guide for the Alamo. We were to arrive about thirty minutes after the 'normal' tour kicked off, and then meet our own little decadent docent at the entrance for the extended and footnoted tour that Nora desired. But the late arrival meant all of the decent parking spaces were long gone, and I began a circle search for the alternatives. San Antonio did not have the app that was being tested west of the ESU campus in Austin that made finding nearby parking places a breeze. \n\nAll of the parking meter spots were taken and the nearby surface lots were chock-a-block full. Nora got on her phone map app and found an obscure parking garage about three blocks away near the interstate, next to an old hotel that looked ready for immediate demolition. Pretty sketchy neighborhood, but it was daylight and we were in a hurry. Even at this less than prime lot, we had to descend several levels below ground and to the very back of the lowest sublevel to find a spot. Most of the lights were out, too, so daylight didn't much matter. \n\nI locked the car and waited for my eyes to adjust, having just come from the bright sunshine outside. I joined Nora, put my arm in the small of her back, and looked around for the nearest ramp of stairway. We finally figured the way out and went up to the street level and walked over to the Alamo. \n\nNora texted her chosen guide, who waved to us and we met her at the entrance. She had the admissions covered, and everyone seemed to know her. We began our own little battle re-enactment, walking through the battle sites interspersed with present day San Antonio, a bustling city competing continuously with Dallas for the second place population in Texas, with Houston at a solid number one. Having taken all the required Texas history courses in middle school and high school, along with multiple tours here before, I was pretty well caught up. But Nora was fascinated, and she fascinated me, so it was all good. \n\nWhile most other tourists listened to the machine based audio tour, we got the up close and personal story from our tour guide - a 65- year resident of San Antonio, retired history professor, and a veritable font of Alamo lore and trivia. Nora laughed when she learned that many of the 'Texana' objects in the collection here and at some Texas museums had been donated from the personal collection of a British pop star Alamo buff. She was also aghast to learn that Ozzy Osborne, another British rocker, had once been banned from Texas for life for pissing on the Alamo. The guide explained that he had actually urinated on a statue on the grounds of the Alamo, not the battle shrine itself, but she still recommended that Ozzy stay well away if he wanted to keep all his teeth. \n\nThe tour was very good, but by now both Nora and I were hiding our wanting glances and/or yawns to keep from insulting our guide. We finally made our goodbyes and went back toward the parking garage, enjoying the bright sunlight and cool but not cold temperatures of the Texas spring. We made our way downward, and walked toward my car, tucked in the back corner of the lowest level. Once again our eyes took some time to adjust to the dark. \n\nThere were three of them, emerging from behind a big dark van parked closer to the entrance than my car, trapping us. All about 5' 9\" and wearing frayed jeans and black shirts, and all with the same big tattoo on their necks. That is never a good sign. They spread out to flank us. The middle one had a long weapon somewhere between a big Bowie knife and small machete', and the other two had smaller but still wicked looking knives.\n\nI made a brief calculation and did not like our chances. \"OK, fellas, you can have our money, although we don't have much.\"\n\nThe one in the middle smiled. Very bad teeth, and a very vacant look in his eyes. \"We gonna cut you up anyway, bitch!\"\n\nTime suddenly slowed way down, my flight or fight reflex kicking in with fight being the only option. Thanks to the habits that Bigun and Mai Ling had drilled into me, I had my key fob in my hand with three keys plus a couple of strong and sharpened aluminum spikes emerging radially from between my fingers. I hoped Nora's Krav Maga training was not just talk. I thumbed the panic button on the key fob. Even though I knew what was going to happen, it still disoriented me.\n\nBigun's specially designed alarm system channeled the output of two big and fully charged car batteries into a high speed silicon carbide switcher, that very rapidly 'chopped' the electrical energy output alternatively between four big strobe lights and two of the loudest buzzingest sirens I had ever heard in my life. In the low ceiling parking garage, it was almost paralyzing. Bigun called it an 'area denial system' but I didn't need any additional incentive to want to leave. It did seem to disorient our three 'friends' even more than it did me, thankfully.\n\nI slashed out backhanded with the keys like Mai Ling had taught me and caught the guy on my left perfectly, slashing across both eyes and the bridge of his nose. Blood gushed out like I had thrown a water balloon filled with catchup right in his face, and he raised both hands to his head and fell to his knees, screaming. For some reason I thought of Elizabeth Ashcroft Knowles, and then resolutely front kicked him right in the face, as hard as I could, twice. I heard and felt a series of crunches, hopefully from his skull and not the bones in my foot. He was down and out.\n\nNora had actually reacted a little faster than I did, kicking the guy on our right in the kneecap while he was still trying to overcome the shock of the lights and sirens. He tried to put had his hands up to cover his ears or his eyes, but accomplished neither. Nora then kicked him right in the nuts and he dropped like a rock. I had heard that the idea of Krav Maga, especially for women, was to 'do some damage, then run like hell' but Nora instead turned to see if she could help me. \n\nThe guy in the middle was now reacting. He swung his 'Bowie-Machete' with two hands like a cutlass, from low to high. My time slowing lizard brain extrapolated the curve to end up right at Nora's neck! Something exploded white hot behind my eyes! Kill Kill! Die Die! He crumpled up in a heap, dropping his weapon long before it touched Nora, and fell like a puppet with its strings cut. I promptly passed out.\n\nI'm not sure how long I was out. The first thing I saw was a paramedic, then Nora, then a lot of cops. I was shaking from the adrenaline reaction, and I had that now disturbingly familiar 'Suzie blast hangover' - the worst I had ever felt it. One of the paramedics gave me some Gatorade, and it helped right away. I almost wished Elizabeth or Dwight were here to help me sort things out. I couldn't very well deny everything - I must have that one guy's blood all over my left hand and right foot, at the very least. \n\nHow fast did the cops get here, anyway? I knew Bigun's alarm system tried to call 911 when the panic button was pressed, but did we get a signal out from way down in this garage? Luckily, Nora recovered her wits a lot faster than I did, and her English Princess shtick totally captivated the SA cops. One detective was insisting that I go to the hospital, I think so he could offer Nora a ride and try to get her number. By the time they got to question me, I mostly described passing out, after trying to stop them from hurting Nora. By then they were able to put things together pretty well from the scene. All three of our little friends had some serious recent police records, despite their tender age. Their juvenile records were sealed, for their protection.\n\nThe alarm had been so loud and obnoxious that several security guards at neighboring businesses called 911 immediately. The paramedics called another ambo and they took all three of our tattooed friends to the hospital. One guy was going to need surgery for his shattered patella (credit to Nora) and the other guy was going to need some dental surgery and some eye work. The ring leader apparently had some sort of stroke in the heat of the action, but he was well known to the police gang unit and thought to sniff a lot of glue and huff a lot of paint, which often meant a lot of brain damage, don't you know? \n\nNora apparently broke a toe on the guy's knee - nothing to do but stay off of it and let it heal. Both male paramedics examined it at length, also making doubly sure the rest of her leg was undamaged. What professionalism. I had hit my face when I fell down and had a big red spot that was going to mature into a big nasty bruise on my cheek, but other than that we were okay. \n\nOnce the cops were done with us, I drove carefully to the Embassy Suites and used valet parking. Seemed like a good investment at this point. Nora suggested we order room service and stay in for the evening. That was my plan exactly, even without the food!\n\nWords could not fully describe my hopes and dreams for my first night with Nora. After I tipped the bellman, who could not keep his eyes off of her, she closed and locked the door, took my hands in hers and said, \"Robbie, we have to talk.\"\n\nOH NO! Not that! Not now!\n\n++++++++++++++++++++\n\nShaniqua was used to sending and receiving lots of text messages to and from burner cell phones. Heck, that was practically her business model. But she had just switched over to this phone last night, and hadn't given the number to anyone, had she? But that wasn't nearly as disturbing as the message. \n\nIt mentioned at least three things that nobody but Shaniqua was supposed to know, including her adopted daughter's birth date, birth name and birth mother - another hard luck foster child just like Shaniqua. Maybe even harder luck - she was dead. Shaniqua couldn't help the teenage mother anymore, but she could adopt the daughter and try to get her out of the cycle.\n\nAccording to the message, she was supposed to meet a new 'client' for dinner at Buck's in Woodside tomorrow night. He was going to pay double her normal hourly rate, and he would only talk, not touch. But he made it clear that she had damn sure better listen and heed his advice. Who the fuck was this \"Roger Sherman\" guy, anyway? There was a picture on the cell phone. He looked totally unremarkable, like some accountant or store clerk. She would go meet him, but he better watch his ass.\n\nRoger was definitely watching hers. Plus, her phone, email, her car's GPS, her apartment security cams and her babysitter's house. \n\n++++++++++++++++++++\n\nNora had asked for a moment to bathe and change clothes. With my luck, she had brought a nun's habit and was about to announce a major revision to her career plans. It took a lot longer than a moment, but I was pretty damn happy when she emerged from the hotel bathroom smelling wonderful and in a pale blue 'Teddy' night gown with a very proper little matching blue outer jacket. \n\nThen she made me go shower and change too. I suppose that was a good idea given our earlier exertions, but I had to worry about gangrene. What did the commercials say about seeing a doctor if you have an erection for more than four hours? I suddenly thought of Elizabeth Ashcroft Knowles again, and remembered that fighting while being at risk of death or injury, and surviving, makes one extremely horny. I had been so ever since we shut my car door and left the cops behind at the parking garage. \n\nI took a lot less time than she did, and I didn't have a blue Teddy with me or even any pajamas. When I opened the bathroom door, Nora took one look at me and smiled.\n\n\"Well, you certainly know how to make an entrance, don't you Mr. Roberts. I think you really are a shameless bounder! That looks like it might be painful.\"\n\nIt was getting that way. \n\n\"But before anything else can happen between us, I do have to know that you can satisfy me sexually!\"\n\nSay what?\n\n\"I have had some good preliminary reports from Lara and Suzanne, of course, but I need hard evidence, so to speak.\"\n\nI smiled. \"Ugh. Tarzan love Jane. Me fuck'em good!\"\n\nShe giggled. \"How romantic!\" \n\nShe stood up next to the bed, and motioned for me to sit on the top sheet. Then she slowly unbuttoned her prim little Teddy cover, just as tantalizingly as she had stripped in Dallas, but with a lot fewer audience members. She had the complete and total attention of my member, though. Even though she had so far exposed less flesh than what she usually wore to campus on a warm day, I heard my pulse pounding in my ears and felt light headed. Perhaps from sustained lack of blood to the brain.\n\nShe paused to make sure I was watching, and then ever so slowly took off the little blue jacket. Her nipples were clearly defined through the gauzy fabric of the Teddy, and her breasts seemed even more wonderful than they had in the strip club in Dallas. How was that even possible? Her eyes were as big as saucers. So were mine, I am sure.\n\nShe very slowly slipped the Teddy off of her left shoulder, and paused until I made eye contact with her. It took me a while to tear my eyes away from her shoulder. Her eyes were shining, far beyond the 'little sparkling lasers' effect I had seen from other smart girls, or even from her. I looked back towards her shoulder and noticed the vein in her neck was pulsing visibly. I'm sure mine was too.\n\nThen something extraordinary happened. Even more extraordinary, I should say. Time seemed to slow down again, and I heard a Suzie signal from her with clarity and coherence beyond anything I had even imagined before. It was specific and focused, and locked on to me. Nora was not suppressing her signal at all. If anything, she was projecting it right into my brain.\n\nI felt myself responding automatically. The signals bounced back and forth, alternating. Somehow I thought of the communications protocols we were learning about in my embedded systems class. Was this the Suzie signal equivalence of 'Request To Send/Cleared To Send'? Were we handshaking and ACK'ing each other? Had we opened up another layer of the 'systems model' between us? I don't know if it was analog or digital or quantum, or even spooky, or whether it had stop, start, and parity bits or not, but suddenly I was plugged into Nora like she was on my local area network, or least a VPN. Was this quantum entanglement?",
        "This all happened in seemingly a nanosecond. I felt her breathing, her heart rate, her excitement. I somehow knew just what she was feeling, because I was feeling it too. \n\nOne of the people in my embedded systems class was in Air Force ROTC. She called it \"the 825\" and said she planned to be a pilot after she graduated. She told us about \"IFF\" systems - Identification Friend or Foe. They started as radar signaling protocols in WW2 but now used several wireless modalities, so that hopefully in the fog of war friendlies didn't shoot friendlies. Like the transponders on commercial or private planes that could 'squawk' certain codes to indicate altitude or emergency status, these systems communicated status as a friendly or a target. \n\nWas this the kind of powerful connection that had caused Nora's parents warn her about relationships with 'talented males' like me? Was it something she couldn't resist? I sure couldn't resist it.\n\nI realized we had just been in a flight or fight situation together earlier, and wondered if maybe that triggered this reflex. I suppose the potential had always been there - we just woke it up. Then I realized this was not a yes/no reflex: it was tristate logic: Flee, Fight, ... or Fuck. A built-in biological \"FFF\" system. And I knew beyond a shadow of a doubt that the lovely and semi-virginal Miss Nora Upman and I were definitely going to fuck. Right now.\n\nDid this system evolve or was it designed? Above my pay grade, I suppose. But if it evolved over millions of years, how come I also didn't evolve that huge dick I should have? But evolved or designed, what was it for? Like everything else I suppose: the procreation and survival of the species. Maximizing the occurrence of my genes in the next generation, and hers. More correctly, our genes. Whatever. I knew one thing: Dr. Augie had no inkling of how right he was about some of this stuff!\n\nAnd until this very moment, I had no inkling of how right Nora was for me. But I had no time to contemplate that, either, because I was in the midst of an overwhelmingly powerful lizard brain imperative neural overlord command to top her and fuck her. This was the real 'prime directive'! Of course this was something I had wanted to do since I first met her, and at one sad time something I thought I would never actually get to do. But that was now completely beside the point. My connection to Nora was accelerating, and so was my heartbeat. I felt her excitement. Hormones and pheromones cascaded in and between our bodies. \n\nIn many of my daydreams about this first time with Nora, I had been tender and slow, teasing her until she begged me to take her. But I felt her pulsing need and complete desire just like I felt mine. I moved forward as fast as possible - on just the frontier of her not being ready. As soon she began to feel desire for the next step - I took it. She was swept away. This wasn't tender, or patient, or any of the sweet things I had fantasized about. This was a raw and primal sexual avalanche, stripped bare of all niceties, and it was wonderful beyond compare. \n\nWe melted together like quicksilver, we exchanged fluids like we were both made of DMSO. She was me and I was her and we were we. It didn't take her long to take my derivative, and I was damn pleased to become and integral part of her. It couldn't have taken more than ten deep, strong, completely penetrating thrusts, and suddenly I was making a delivery, with a sense of primal accomplishment and satisfaction that words would stain. She had a simultaneous and powerful orgasm, and her pelvic musculature gripped and milked me in a way that I would have thought anatomically impossible before. Our climax was simultaneous, as if our nervous systems were locked together. They were - just like our bodies. Somehow, I was disappointed that there was no egg in place to be fertilized. Now just how did I know that? But, I was absolutely sure I did. \n\nNora and I then ensnared each other in a tangle of arms and legs and then began to drift off to a very deep and contented sleep. \n\nSuddenly I was a little bitty baby boy, being bathed by my grandmother in one of those little blue plastic bathtubs that you use for babies that are too small to be safely handled in the regular tub, plus it will kill your back leaning over that far. My grandmother was singing happily, enjoying bathing her new grandson. I was enjoying it too. She was sweetly singing a song that I had never remembered before, but I heard it perfectly now: \n\n\"You made me love you... I didn't wanna do it, \n\nI didn't wanna do it.\n\nYou made me love you... \n\nand all the time you knew it,\n\nI guess you always knew it.\" \n\nI suddenly realized that I must have been much less than a year old at the time of that bath, and that I didn't really know what most of those words, or maybe what any words meant, until I was older than that. That was something to think about, linguistically speaking. I could hear my grandmother's lilting and flirty 'little girl voice' and inferred it was a song from when she herself was little. I could hear it perfectly, with her breathing and inflections, plus feel the soapy water on my skin, smell the new mown grass outside, and hear the muted snap of the starched curtains in the breeze through the open window of our old house. Total recall. \n\nI felt completely accepted, contented, cared for, and loved. Then little Miss Nora Upman somehow entered my dream and climbed into the little tub with me, snuggled her skinny little less than one-year-old body against mine, and shared the warm water, the song, and the love. \n\n++++++++++++++++++++\n\nNora and I awoke in a whole new world. And at exactly the same time. We had slept for more than nine hours. I felt more relaxed and content than ever before.\n\n\"Good morning, Tarzan. Jane wants breakfast. Downstairs. So we both have to get up and get dressed.\"\n\nI groaned, but my stomach growled in agreement with her plan. I began to look for my clothes.\n\n\"Then Jane wants Tarzan again, but his time slower and more patiently, and in several different ways, please. Not that it wasn't totally amazing last night. What the hell happened to us?\"\n\nI wasn't sure how much I should discuss with her, but then again, she was about the only one I could really talk to about this stuff, wasn't she? \n\n\"Well, it seems like we developed some sort of direct 'brain to brain' communications system.\"\n\nShe giggled. \"More like dick to pussy, or more exactly amygdala to amygdala, I'll wager. It was quite a jolt, wasn't it?\"\n\nI kissed her, and hugged her tight. \"It was fantastic, Nora. You are fantastic.\"\n\n\"You are a bounder, Mr. Roberts, but I am afraid I just can't resist you. \n\n\"You know that I love you, Nora?\"\n\n\"Yes, and you must know I love you. Even my mother already figured that out. I also have some serious plans for you. But let's consider the next two days in San Antonio a little vacation. I must say I will certainly always remember the Alamo! But for now we'll just have fun and not be too serious. But you do know how organized and goal-directed I can be, and I do have a bucket list, and limited available time.\"\n\nThe way she said it reminded me of the two bouncing tennis twins enthusiastically describing their planned future sexual encounters. Nora had only a little more experience than they did, and I'll bet my left nut she was more creative and thorough. I suspect her plans revolved around where we would both spend our summers. \n\nI had to make my final summer job pick next week, and I was leaning toward the Chunnel project because I could spend my off hours in decadent Britain rather than the much less libertine (at least officially) UAE. But that was all pre-Nora. I suspected I would soon divide and chronicle my epochs into pre and post Nora years. Was Nora going to move to Boston to do two years at HBS, or go for a PhD directly? If so, where?\n\nBut right now, breakfast. Hopefully I have done all my fighting for this trip, but there is still a lot of fucking to do. It's my duty.\n\n++++++++++++++++++++\n\nI drove North from Austin toward Prosperous trying to think about anything but the three girl 'pussy party' that was about to play out at Lara's place. Of course that meant I thought about it obsessively. Nora would pretty much be the 'guest of honor' and I am sure the resulting action would exceed even my most imaginative voyeuristic lesbian fantasies. It seemed such a waste for me not to be there, but I was not invited. I realized they would just now be hooking up with each other, and over the next three hours of my drive they would be doing all sorts of showy and delicious things to each other. I didn't even know how to tap into Lara's webcam. I hope no one else did. \n\nMy car was purring along, undamaged from our little adventure in the San Antonio parking garage, and fun to drive. Not as much fun as I could be having at Lara's, though. I got a text from my grandmother saying she was cooking supper and would be ready to serve soon after I arrived. That perked me up a little.\n\nIn my Engineering 101 class first semester, we had one lecture on each engineering 'sub-discipline': mechanical, electrical, civil, chemical, petroleum, aerospace, biomedical, etc. The chemical engineering lecture emphasized design of overall process flow and the various reaction vessels - matching exothermic and endothermic steps so they could feed each other's energy needs, arranging heat exchangers, pressure vessels, holding tanks, etc. to speed the rate limiting step of the overall process, usually the major determinant of cost, and minimize the capital cost of the plant, usually the second major determinant of cost. Mass balances and energy balances and waste not want not; design in space; design to cost; anticipate failure modes and maintenance turnarounds. I couldn't help but think of my grandmother's composting system.\n\nShe had a defined flow for everything, and wasted nothing. Leaves and grass cuttings and fallen limbs were picked up by a big PTO powered yard vac on her little orange tractor and then chopped and shredded and finely combined in the proper proportions. Kitchen vegetable wastes were processed with water in a dedicated VitaMix blender, and then poured on the compost pile, which was composed of several alternating three sided cinder block storage areas spaced so that she could turn the compost piles regularly with the front end loader on her little tractor. One end of 'compost row' housed the green grass and leaves raw materials stack, and then the brown woody wastes that were either roughly shredded for mulch or more finely shredded to go into the compost mix. Then there were three 'in process bins' for compost batches to be mixed and turned as they went through in various stages of decomposition, and a final one that held 'finished' compost - black gold, she called it. Fat and animal waste went into a storage bin and eventually wound up in a biodiesel plant south of Dallas.\n\nMoving to the acreage in Prosperous had allowed her to scale up her system to high volume production. Her newest setup was her best ever, with plenty of room and sunlight for growing tomatoes, asparagus, broccoli, several varieties of peppers, squash, blackberries, onions and several varieties of lettuce. She now produced so much that she traded for stuff she didn't grow, and sold the excess. She had traded for fresh chicken, eggs, and some homemade chorizo for my visit. There were also beef, venison and elk steaks and wild boar in the freezer from my grandfather's hunting leases. He didn't hunt anymore, but the old homestead where he grew up, about 100 miles northwest of here next to the Waggoner Ranch, was prime hunting grounds, and the lessees kept him supplied with some of their take to make sure he would renew their leases. He could have started his own very big lobbying firm just to influence the folks he leased to. Grandma was counting on me to consume mass quantities during my visit. I would try my best. \n\nEveryone was there when I arrived, and Eldee did not search my car for Nora nor seem disappointed to see me without her. My father and grandfather and I sat on the couch as grandma finished off final supper prep. My grandfather asked about school. I told him it was more difficult than first semester, but I was coping. Eldee came in from the kitchen, moving slower than usual, and surprisingly put her head on my foot. She had been sort of just tolerating me for the last few years after I accidentally stepped on her foot when I was in high school. My father and grandfather did a double take. \n\nSupper was amazing, and my grandmother beamed as a I polished off seconds of everything, especially fresh warm brownies with Blue Bell 'Homemade Vanilla' ice cream. The temporary cessation of Blue Bell production had almost qualified as an existential threat to my way of life. It was the best thing I knew of to fuel my little fractal antennas and their almost insatiable need for glucose in my blood stream. Blue Bell still had a reduced set of flavors available, but they were on the comeback.\n\nWhile my father and I cleaned up the kitchen, I told him about a few of my Suzie signal wins and losses, but I stayed away from Suzanne's gang bang images, the 'pussy party' that I was missing, or any of the images I was receiving, for that matter. I did tell him I spent that last three days with Nora, and he looked very pleased.\n\n\"So she's giving it up for you then?\"\n\nI laughed. \"That doesn't even begin to describe it, Dad. She is magical!\"\n\n\"And everything is still okay with Lara and Suzanne?\"\n\nHe could tell my expression changed subtly at the mention of Suzanne, but he didn't press me. I told him about the pecuniary Suzie from Jean Nancy and the curiosity Suzie signals I had heard from the two girls at the dorm, and about the offer from the two fit trainers from my conditioning class. He made me tell him all about Rene' and Rene' twice. Horny old goat. \n\nWhen we all decided to hit the sack, Eldee, who normally stayed within range of Grandma, and always slept in my grandparent's bedroom, insisted on coming up to my room. Even more amazingly, she insisted that I scratch her ears before she settled down at the foot of my bed. Will wonders never cease? I tried not to dream of my three girls back in Austin. Unsuccessfully."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "lesbian",
        "group sex",
        "fraternity",
        "college",
        "calculus",
        "voyeurism",
        "caning",
        "gang bang",
        "topotactic"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-32"
}