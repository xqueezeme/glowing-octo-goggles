{
    "title": "Catering Girl Ch. 06",
    "pages": [
        "What's this I hear that you've not read the earlier chapters yet? If you try and read this chapter without reading the earlier ones, you'll be lost. But don't worry, we can have the Coast Guard help you navigate back to the beginning, and you can start there.\n\nThere's an important character under the age of eighteen in this story. It's sort of hard to write a story about a young single mom and not have her munchkin in it. But don't worry, when we get to the adult playtime parts, the little one will be safely tucked in her own bed and sleeping while the grownups play. These are responsible adults after all.\n\nChapter Six\n\nJennifer\n\nIt took me a moment to figure out where I was when I awoke. I smelled the lavender and felt an arm draped over me, then snuggled back into her. Flashes of the previous night started to play through my head, my heart raced. I was thankful for not being alone.\n\nMinutes later a blurry eyed little girl came into the bedroom and snuggled up with me. She was snuggled up with her doll, I was snuggled up with her, and Whitney with me. For a brief moment, everything was right with the world. Then reality reared its head, and I remembered all that had happened the night before. I tried to process what I had experienced, but I was overwhelmed at the moment.\n\nI slipped out from between my girls, and after taking care of the morning necessities I padded down to the kitchen. Finding some pancake mix, I began to mix up a large batch. There was enough to feed a small army when Whit and Madi came downstairs, but shortly, all that was left was an empty platter.\n\n\"Mommy?\" A tired, timid voice broke my train of thought.\n\n\"Yes, pumpkin?\"\n\n\"What are we going to do now?\"\n\n\"I'm not sure honey, we'll figure something out.\" We always did, but the little bit in my checking account and my small emergency fund were not going to go that far.\n\n\"Are we going to have to go back to the shelter Mommy?\"\n\n\"I don't know pumpkin, we'll figure something out.\"\n\n\"Could we just stay here? And live with Miss Whitney?\"\n\nI heard Whit make another cup of coffee in her Keurig and sit down at the table across from me. She reached out and took my hand.\n\n\"Hey, look at me. You're not alone. I want to help you.\"\n\n\"Thanks, I know you do. I just don't want to be a burden to you.\"\n\n\"Jennifer! You're not a burden to me. You never will be.\"\n\n\"That's okay, as soon as we can get on our feet, Madison and I will figure something out.\"\n\n\"Jenn, I -- oh never mind.\" I watched her get up from the table with her coffee and stare out the window.\n\nI was thinking about talking to her more when I realized I needed to get Madison dressed. \"Come pumpkin, let's go get your new clothes out of the dryer and see what you can fit into.\" I took her hand and led her upstairs. We pulled the clothes out and laid them out on the guest bed. Some were too small and others clearly too big for her. But there were a couple of items she could wear right away. There were also a pair of pink sneakers that she could use. They were a tad large, but something she could grow into.\n\n\"Hey.\"\n\nI turned around, and Whit was standing in the doorway.\n\n\"I figured we need to get you to a store to do some shopping, and the clothes you had on yesterday smell of smoke. I pulled out some sweats that will fit you. If you want, that is.\"\n\n\"Pumpkin,\" I said turning to Madi, \"Why don't you go down and watch some TV and play with Skipper while I get ready.\" Madi skipped out of the room, and I followed Whit to her room.\n\nWhit had a few items out on the bed for me to try. I opted for some gray sweatpants, a tee shirt, and a hoodie. Slipping into a pair of her flip-flops, which were so not my thing, I sat on the bed staring at my feet. I was trying to figure out how I was going to get back on my feet when Whit joined me.\n\n\"Are you doing okay?\" The look of concern was evident on her face.\n\n\"I don't know. I'm just so overwhelmed right now. Thoughts about everything I have to replace are swirling around my head. Just to get some new clothing is going to blow out my meager savings. Let alone everything else. I can't even think of how I'm going to get a new apartment. Do you know how lucky I was to find that place? Cheap places in this city are rare.\"\n\nI began to pace back and forth in the kitchen as I continued my rant. \"How am I going to come up with a new deposit and last month's rent? I'm sure ain't going to get anything from my last place with that slumlord. Ugh, I'm probably going to have to move to Lynnwood or Kent and commute in. And the bus options to our office are limited. Then what do I do with Madison? Find daycare close to my place and pay for a couple more hours of care or make her ride the bus with me. Although if she rode with me in the car we could use the carpool lane...\"\n\n\"Jenn--\" I watched as Whit started to speak a couple times and then stop herself. \"I'd like to help you. Can I at least take you and Madison shopping? Help you buy some new clothes and stuff?\"\n\n\"You sure about this? I don't want to be a burden on you. You're not obligated to help me.\"\n\n\"Do you remember what you called me last night?\"\n\n\"What do you mean?\"\n\n\"What you told the Red Cross lady.\"\n\n\"That you're my girlfriend.\"\n\n\"Right, and what does that mean? To you?\"\n\n\"That you're my best friend, that I love you, and I don't want to lose you.\" I said and wondered where she was going with this.\n\n\"Right, but it's more. Being in a relationship is more than just having sex with someone. It's about doing life together, helping each other. I'd like to help you because I care about you. If you'll let me.\"\n\n\"I don't know.\"\n\n\"You don't?\" Whit's voice was barely audible.\n\n\"I don't know if I have a choice.\" This was the only path I could see to getting Madison and me back to where we were.\n\n\"You do, I'm not trying to force you or anything.\"\n\n\"I know, thanks.\" I sniffled and then felt arms wrap around me and pull me into her. I was trying hard not to, but I lost it. I just started to blubber. Whit held me and gave me reassurances while I let my emotions pour out.\n\nMustering the willpower from I don't know where, I sat back up on my own and began to wipe the tears with the sleeve of the sweatshirt I had on. As I finished up, I looked at the brunette sitting next to me on the bed. Our eyes locked, and she smiled at me. I closed my eyes and leaned my head in. My lips found hers, and for a moment I felt normal again.\n\n\"I missed that,\" I heard her whisper.\n\n\"Me too.\"\n\n\"We should probably get going; we have a lot to do today.\"\n\nA few minutes later we were walking back to my old place, with each of us holding one of Madison's hands.\n\n\"Hang on, before we get in the Jeep, I want to see if I can look around at all.\" I walked towards my apartment. I explained who I was. Once the police officer who was monitoring the scene had verified my name she let me cross the barricade tape into what was left of my place. Whitney found a dry patch of grass, and Madi snuggled into her lap while I went in.\n\nIt didn't take but a moment to figure out that not much had survived and was worth rescuing. I found my cell phone in the corner in a small pool of standing water. It was mostly intact, but I'm sure it was fried inside.\n\nEntering our bedroom, I was glad I was alone. On Madi's bed was what was left of her Anna doll. It wasn't a pretty sight. The plastic face was melted, and the synthetic clothing burned. Looking around our bedroom, there was nothing salvageable. A picture frame that once held a picture of my mom holding Madison right after she was born was scorched. All that was left was Madison's face. I guess you could say it was a summary of my life until now. Everything was gone except her.\n\nAnd Whitney. She was standing there next to me, holding out my purse. I looked out the window and the police officer was now sitting with Madi. My purse was rather battered, but looked in one piece. I found the twenty-eight dollars I had in there, charred, but still intact. My debit card was melted a bit and warped, no longer usable. My driver's license was also deformed, but you could still make out my face a bit and my name on it.\n\n\"You can get those bills replaced at the bank when you ask for a new debit card.\" Whit said to me. \"Until then, I got you. Anything else you want to look at here?\"\n\n\"No.\" I picked up the picture fragment and the Anna doll, along with my purse and busted cell phone, and started to head for the door. I held the door open for Whit, and then instinctively went to lock it.\n\nThen I realized the futility of my effort. Instead of following the others, I found myself sitting on the stoop holding Madison's doll. My fingers began to follow the melt lines on the face, tracing the blobs of plastic.\n\n\"Mommy?\"\n\nI looked up at my baby girl.\n\n\"You're crying Mommy. Are you going to be okay?\"\n\nLeave it my little one to pick up on her mom's emotions. \"Yeah, Mommy's just sad.\"\n\n\"I'm sad too.\" She sat next to me and took her doll from my hand. I could see tears streaming down her face. I couldn't begin to guess how she was processing what she'd been through, but we'd likely be talking about it for a long time. \"It's okay Anna, I'll get you fixed.\" As she hugged what was left of her doll, her mop of hair fell over her face, and I could hear her sob.\n\n\"Why Mommy? Why did this happen? Did I do something wrong? Is it my fault?\"\n\n\"No pumpkin. You didn't do anything wrong. None of us did. Sometimes bad things happen. And we just have to deal with it.\"\n\nAfter a few minutes, Madison wiped her tears and stood up. She took my hand and led me to the Jeep. Fortunately, Whit's Jeep had been parked far enough away that the only problems were some windows cracked from the explosion. But it started fine, and we were soon on our way.\n\nWe each grabbed a cart at Target, this was going to be a big trip. First thing was some basics. Whit put on a pouty face when I steered my cart into the Men's section and grabbed a couple of packs of boxer briefs.\n\n\"Sorry, babe, I like my comfort and no wedgies. Honestly, I don't know how you wear some of what you have.\"\n\n\"You seem to like it. I've noticed how you can't keep your hands off me when I wear something cute and sexy.\" She flipped her hair back and led Madison off to look at dresses. Heading over to Women's, I filled my cart with a bunch of basic clothing and what I thought were a couple of nice tops I could wear to work.\n\n\"Hoodies, jeans, tee shirts. What, no skirts? You look good in them. You've got great legs you know.\"\n\n\"Fine, I'll wear shorts in the summer.\"\n\nI got an eye roll for that. \"Can I at least get some dresses for Madison?\"\n\n\"I don't have a problem with dresses,\" I said, \"except on me.\"\n\nWe cruised around the store, picking up a number of items: a new purse, wallet, and other items I needed to get by. By the time we left, we had filled three carts. I didn't see how much it all cost, but Whit didn't bat an eye and covered the whole bill.\n\n\"Thanks.\" I murmured as we headed to her Jeep.\n\n\"Jenn, stop. Look at me.\" I made contact with her big browns. \"You're not alone. We're a team. That's part of what being in a relationship is all about. We help each other. Something I learned when I was on the crew team. When we are all pulling in the same direction and we are in sync, we can do a lot more than we can each do individually. Sometimes we are greater than the sum of our parts.\"\n\n\"I get it up here,\" I pointed to my head. Then, pointing down to my heart, \"but it's going to take a while to get it down here.\"\n\nWe got home and put much of what we got into the laundry. Both Madi and I changed into some of our new clothes, just because they fit better. And that way we could both rock out in our new Vans. Oh, yeah, Mamma made sure we had matching shoes. What surprised me was Whit got a pair as well. Except hers were the wrong color; she got purple instead of black.\n\nI was busy on Whit's computer requesting a new driver's license and contacting my bank to get a new debit card when the doorbell rang.\n\n\"Hi Sweet Pea, Hi Jennifer, hold the door open for us will ya?\" Ben had a large box in his hands and behind him were Ruben and Nathan carrying Whitney's old dollhouse. A Whitney Enterprises transit van was backed into Whit's driveway.\n\nWe had the transit vans and a number of trucks to pick up and deliver parts around the Puget Sound. It was a shared motor pool between the various entities. Sometimes a tug needed a part when they were out and about, and sometimes it was for a shipyard repair. Those guys often had to get a part to a broken-down fishing trawler or something, just to get them into the yard for more major repairs. And sometimes it was just a matter of picking up something from a supply store. I guess that was one of the advantages of owning the company, you could check one out when you needed to.\n\nEdith came over shortly thereafter, and when Ruben and Nathan left, Ben and Edith offered to watch and play with Madison while Whit and I went back out shopping. We headed over to the mall to work on replacing my phone and maybe get some more shopping in.\n\nIf any of you have experienced trying to get a phone replaced when your ID and debit card have melted, you'll understand why we left the store grumpy two hours later. But at least I had a new phone. The phone store was in the corner of the mall, and we headed over to the food court to get a snack. As we walked, Whitney grabbed my hand. As our fingers interlaced with each other's, I placed my head on her shoulder. No way was I going to let her go again.\n\nLike so many malls in tax season, this one was filled with pop up tax services booths. Not knocking you if you use one of these places, but Whitney had helped me with mine back in February. Maybe it was because I was tired from the craziness of the last 24 hours, but when one of the tax workers accosted me as we walked by, I decided to have a bit of fun.\n\n\"Hi Ladies, either of you need help with your taxes this year?\" asked a young guy in a cheap tie, with a big button on his shirt offering a quick refund. His eyes leered over both of us. He looked like he was fresh off a used car lot, right down to his plaid polyester sports coat.\n\n\"Nah, I had mine done by a CPA this year,\" I replied.\n\n\"Oh, you have to be careful with some of those CPAs out there. Some of them really want to fuck you over. How much did you have to pay?\"\n\n\"Pay? I don't know. I just let her fuck me over.\" I giggled at him. I could see by the look on his face he didn't get it. I gave Whit a peck on the cheek. \"Did I pay you enough for doing my taxes this year? Did you get a good enough fucking?\"\n\nWe both watched him turn red as it dawned on him what we were saying. We all laughed and wished him a good day and ended up at a smoothie bar.\n\nIt felt good to get off my feet a bit and enjoy the smoothie, but I was feeling rather self-conscious about all that Whitney had done for me today. I ran my fingers through my hair and stared off into space.\n\n\"Hey, are you holding up okay over there?\" Whit's voice brought me back into the moment.\n\n\"Just processing all that has happened since last night. I don't know what I would be doing right now if I didn't have you in my life. I'd probably be back in the shelter.\"\n\n\"But you're not in a shelter. We're together, right? A team?\"\n\n\"Yeah.\" My mind drifted away for a moment. \"Whitney, I'm glad you were with me last night. Not that you had to go through that with us. But it made one thing very clear to me. When we were huddled in the corner in the kitchen, I knew we were going to be okay. You know why?\"\n\nShe shook her head no.\n\n\"You were with me. You were looking out for me. While I was trying to comfort Madison, you were comforting me.\"\n\nI could feel the tears starting to well up. Maybe it was a bit more of the emotional release from the prior night, but it was also me processing what I felt about us. A hand reached across the table and wiped a tear from my cheek.\n\n\"You know I love you, Jennifer DeLuca. I thought I had lost you once before, and last night I kept praying that I wouldn't lose you or Madison again.\"\n\n\"I know. I was just as worried about something bad happening to you as I was about Madison. But you know what? While we were in the phone store, I wasn't at all thinking about how you were helping me. Instead, I was thinking about how you were investing in us, you and me.\"\n\n\"I like the sound of that. Just do me one favor?\"\n\n\"What's that?\"\n\n\"Don't go around calling us Whitifer or something like that, okay?\"\n\n\"You got yourself a deal.\"\n\nFinishing off our smoothies, we resumed walking the mall. Whit tried to get me to go into some of the more fashionable stores like Nordstrom, but the thought of trying on a bunch more clothing was mentally exhausting.\n\nWe walked around a bit more. Part of me was enjoying the simple act of holding her hand. However, when we stopped next, it was me pulling on her hand to get her to stop with me.\n\n\"Are you sure you want to go in there? Don't get me wrong, I would love to get you something, but is that you?\"\n\n\"No, not really. Maybe it's more like I'm not quite ready for something like that. But sometime, I'd like to have something nice. Something more than just a plain white bra.\" I turned and made eye contact with her. \"Something for my Whitney to enjoy. My biggest concern is that they don't have many options for smaller chested women like me.\"\n\n\"There are other options besides Victoria's Secret. I can take you to one if you like. When you're ready.\"\n\n\"That would be nice.\"\n\nWe both realized we were just done for the day and started to head towards the Jeep when Whit's phone rang.\n\n\"Hi Dad... yeah, we got Jenn a new phone. We're headed back now, why?... Oh... I see... Um, let me check.\" She put the phone on mute and looked at me. \"There are a couple of police detectives at the house and would like to talk to us. Are you up for that? Or shall we tell them to come back sometime later? They're also asking to talk to Madison. Dad wouldn't let them talk to her until you were consulted. He thought it best that you be there when they did.\"\n\n\"Tell your dad thanks. I'll have to think about that. We're going to have to talk to them more, aren't we?\"\n\n\"Mmm hum.\" Whit bobbed her head in agreement.\n\n\"Might as well get it over with then.\" The scowl on her face reminded me of the grumpy cat meme.\n\nWe got home and waiting for us were two detectives from Seattle Police Department's vice squad. We answered their questions for over an hour. It appeared to me that they were trying to figure out how my former neighbors were connected to one of the various drug empires. In the end, I'm not sure we were much help.\n\n\"Well Madi, did you have fun playing while Mommy and Whitney were gone?\"\n\nLittle Miss started dancing all around. \"Papa Ben and me played with dolls and we watched a movie and Nana Edith had tea with my new dollies until Skipper came in and got in the way and we had ants on a log for snack and--\"\n\n\"Did you say Papa Ben and Nana Edith?\" Whitney asked. She looked at me, and we were both a bit bemused. We looked across the room at her parents sitting on the couch.\n\nEdith came over to us. \"We talked about it while you were gone, the three of us. Papa and Nana are better names than Mr. and Mrs. Mitchell. Isn't that right Madison?\"\n\n\"Yes, I had fun with Papa and Nana. Can I play with them again Mommy?\"\n\n\"I'm sure there will be plenty of opportunities.\" I marveled at what I was seeing. Did this mean I had been accepted by her?\n\nBen joined us. \"Madison was a well-behaved young lady, you should be very proud of her.\"\n\n\"Thank you, and good job, pumpkin.\" I gave her hair a bit of a tussle.\n\n\"What's for dinner, Mommy? I'm hungry.\"\n\nI looked at Whitney. I hadn't even thought of anything since my mind had been on so many other things today.",
        "Whit mouthed back to me, \"Pizza?\"\n\n\"How about Edith and I take our favorite three girls out for dinner?\" It was quickly decided that was a good idea, and we all headed over to Ben's favorite restaurant at Fisherman's Terminal.\n\nIt was a casual place, where you could often see people from Seattle's various maritime trades grabbing a bite, as well as many locals. Soon we were all laughing and having a good time. It felt good not to be thinking of recent events for a bit.\n\nI watched Whit and Madi both dunk a French fry into a side of ranch at the same time when Edith spoke up. \"Have you gotten your email hooked up yet to your new phone?\"\n\n\"Not yet,\" I replied.\n\n\"Well, when you do, you'll see something special that the whole Whitney Enterprise family is doing for you. We have a history in this company, all of them, for helping our team members when someone is in need, like you are. A donation site has been set up and there's quite a bit in there already.\"\n\n\"What???\"\n\n\"There should be a link in your email so you can access it. It's tradition that dates back generations. These days we just use an online platform to simplify it. You'll find that a good number of the employees kick in five or ten dollars. A few kick in a bit more.\"\n\n\"I don't know what to say,\" I murmured.\n\n\"Well,\" Ben chimed in, \"you have a lot of unplanned expenses before you, so if you need any help thinking through things, there are a number of us willing to help you. Starting with this one here I think.\" He put his arm around his daughter. \"Ain't that right, Sweet Pea?\"\n\nWhit was looking down at her plate. I think I heard her mutter to herself, \"even if it's a decision I don't like.\" She looked up and forced a smile onto her face. \"Of course, I'm here for you.\" I could tell she was trying to be upbeat, but something was a bit off.\n\n\"Are you okay dear?\" Edith looked puzzled at her daughter.\n\n\"Yeah, yeah, I'm fine. Just thinking. What a crazy weekend.\"\n\n\"Is that all? I mean, all three of you went through a rather traumatic experience. Part of me is still amazed at how well all of you are holding up. But maybe you're just in the denial phase.\"\n\n\"Whitney, Jennifer,\" Ben spoke now. \"I know your benefit plan has a counseling package with it. I suggest you both take advantage of it. Jennifer, you should get Madison signed up as well. There's no shame in talking to a trained professional about what happened last night.\"\n\nWhit and I looked at each other and nodded our heads. \"That sounds like a good idea Ben.\"\n\nWhitney\n\nThe drive home was quiet. Madison was getting tired, and both Jennifer and I were lost in our thoughts. I would have loved to know what she was thinking, but I was a bit scared to pry. I had really tried to back off and not suggest things, lest she think I was trying to run her life. But it hurt every time she said something about getting a new apartment. I didn't know what I needed to do to be good enough for her.\n\nI glanced over and noticed that she was staring out her window. Reaching over, I placed my hand on hers and gave it a squeeze. \"Hey, what do you want to do tonight?\"\n\n\"Not much. Need to get Madi to bed soon, then I don't know. Maybe snuggle and a movie?\"\n\nWe watched an episode of Madison's favorite cooking show, then got her tucked into bed. I watched Skipper curl up at the foot of her bed as Jenn tucked her in.\n\nSoon we were snuggled up in our old spots on the couch, my arms wrapped around her. I'm not sure who fell asleep first but neither of us remember the movie ending. I'm not sure how the algorithm pulled up and started Thelma &amp;amp; Louise after Katharine Hepburn and Humphrey Bogart appeared in The African Queen. But that is what I recall seeing for a moment before Jenn turned it off. I do remember her snuggling up to me after we went to bed and her holding my hand to her breast as we both fell asleep.\n\nThe next morning, I greeted Jenn with a kiss in the kitchen and a cup of coffee. \"Morning babe.\" I might not have felt all that enthusiastic, but I was going to try to put on a happy face. Madi was already situated and working on a bowl of cereal for her breakfast.\n\n\"Hi, thanks for getting her going this morning. It felt good just to sleep in a bit. I feel so overwhelmed with everything right now.\"\n\nI looked at her, wanting to jump in and solve problems, but I knew that would just make her frustrated. I had to let her go at her own pace.\n\n\"How can I help you? Is there anything you want me to do?\"\n\n\"Thanks, I'm not sure right now. You've done so much for me already.\"\n\n\"Okay, just let me know. Say, have you taken a look at the donation site yet?\"\n\nJenn pulled out her phone, and I could see her fingers flying around on it.\n\n\"Oh my god!\" Jenn's jaw dropped as she stared at her phone.\n\n\"Is it good?\"\n\n\"Um, do you know how much is in there?\"\n\n\"No, I've not looked.\"\n\n\"There's almost eighteen thousand dollars in there. Most of the donations are five or ten bucks, a few at twenty. But there are three here at five thousand each. It says they're anonymous.\"\n\n\"Well, that's going to help, right?\" I thought I knew who those large ones were from. My mom and uncles often lead the charge to help out our team.\n\n\"Yeah, I can replace my car and still have some money to put down on a new place. Plus get some furnishings for it.\"\n\nAs she said that, it felt like a punch to my gut. Her own place. Not with me. I walked over and looked out the window to try to hide my face. It was all I could do to not break down right there. After a moment I turned, keeping my back to her, and left the kitchen. As I left, I said, \"I need to get my run in, I'm going to go change.\"\n\nI had hoped to slip out in silence, but as I came back downstairs in my running gear, I heard Jenn call out to me. \"Can I borrow your car keys? I just found a deal on an apartment, and I had better jump on it if I want to stand a chance.\"\n\n\"Um sure, they're on the table by the stairs. I'm going out, be back in a bit. Are you good? Need me to point anything out on the Jeep?\"\n\n\"Nah, I think I can figure it out. Madi, can you go upstairs and get dressed quickly for Mommy? See you when you get back.\"\n\nI headed out the door. I had zero motivation to run today but just needed to get out and collect my thoughts. Why did she have to insist on getting her own place again? Every time I thought about it, I couldn't stop thinking that I was doing something wrong, that I wasn't good enough for her or something. Why else would she be looking for a new place?\n\nI started to run and got about a half a mile in, when I realized the futility of what I was doing and started to head back, slowly, just walking. As I passed the park, I could hear kids playing, and the sound of their excitement hit me like a ton of bricks. There was a park bench on the edge that was free, and I sat on it.\n\nI watched the kids play and contemplated life. What would it mean if Jenn found her own place again? It was doubtful that she would be able to find another deal like her last place anywhere close to my house or work. She would likely end up in some distant suburb with a long commute. If that were the case, it would make our relationship difficult at best.\n\nI'm not sure how long I was there, but it was for quite a while. I watched as a mom and her kids, who arrived about the same time I did, headed out of the park and down the street. As much as I tried to clear my mind, my thoughts kept returning to me and Jenn. But never in a good way. Every scenario I thought of ended with me standing alone as she walked out of my life.\n\n\"Oh Whit, you're just overreacting.\" My inner optimist tried to assert herself and cheer me up.\n\n\"No, you're not,\" said my other voice. \"She's looking for a place because she doesn't want to live with you. You're not good enough for her. You weren't good enough for your mother, for Marci, for Heather, and not for her. Face it, Whitney, you're a failure.\"\n\n\"I'm NOT!\" I screamed to myself. I hunched forward and stared at my shoes. A lump formed in my throat, and I could feel my body shake. Emotions began to well up from deep down, and I placed my face in my hands and massaged my temples. My head hurt. \"I'm not--\" I muttered to myself.\n\n\"You're not what?\"\n\nThat voice, it wasn't mine. I lifted my head as someone sat next to me. I could feel a hand take mine.\n\n\"Are you okay Miss Whitney?\"\n\nI looked at the munchkin sitting next to me.\n\n\"Kinda, where's your mommy? How long have you been here?\"\n\n\"We just got here. Mommy is over there talking to Dijon's mommy.\" She pointed across the park, and I could see Jenn talking to her friend. \"I was getting on the swing and saw you crying. I thought you needed a friend.\"\n\nMy little friend gave me a hug. Exactly what was needed right now. I was about to say I wasn't crying, but then felt the wetness on my face and hands.\n\n\"Pumpkin, you'd better play with your friend a bit; she has to leave in five minutes.\" I got another hug from the munchkin, and she took off to play with her friend. \"Hi.\" Jenn stood there. An awkward tension hung in the air.\n\n\"Hi,\" I replied. My voice was as bland and monotone as I could make it.\n\n\"You okay?\"\n\n\"Yes... sorta... okay, not really... Is it that obvious?\"\n\n\"Your eyes are bloodshot.\n\n\"Oh.\" Words. I knew I should say more words but couldn't come up with any at the moment. Instead, we both sat there.\n\n\"So, are you going to tell me what's wrong?\" Finally, Jenn sat down next to me.\n\n\"You mean you don't know?\"\n\n\"Ah, I'm not a mind reader here.\"\n\nOur eyes made contact. I tried to read her expression, but with all my frustration, I couldn't figure her out at the moment. And then I froze. I didn't know how to say what was on my heart. I know that if I opened up, that would be it. We would be done.\n\n\"Tell me please, what's going on.\"\n\n\"It so hard Jenn. I can't--\"\n\n\"Why is it hard? You can tell me anything, I love you.\"\n\nSwallowing my fear, I decided to let it out. \"Do you know how hard it is to sit here and watch you go looking for other places to live?\"\n\n\"Why wouldn't I be looking? Do I have another option?\"\n\n'What the hell?' I thought to myself. 'Does she not see the obvious?' Collecting my thoughts and calming myself down a bit, I responded, \"I've got plenty of space. You're more than welcome to move in with me. If you're interested that is.\"\n\n\"Oh.\"\n\nI watched her for a minute; she looked at me, then out to Madi, then down to the ground. Finally, she lifted her head back up and looked my way.\n\n\"That's a big step Whitney. I think I need some time to think about that. I'm sorry, but for some reason, I didn't even consider moving in with you. I was just so focused on getting myself back to where I was, that the other options didn't even occur to me.\"\n\n\"So you're not mad at me?\"\n\n\"Mad at you? Good heavens no. I just wished you had said something earlier.\"\n\n\"I was trying not to be pushy.\" The smallness of my voice surprised me. \"I was hoping that you would see the opportunity and ask.\"\n\n\"Sorry, maybe I'm still in shock, but my mind was totally focused on getting back on my feet. Back to where I was before the fire.\"\n\nI felt her hand on mine, and our eyes connected.\n\n\"I hope you understand, I've spent five years now struggling to get on my own and not need the help of others. I was so close to getting there when things exploded. Then when I saw all the support from everyone at work, all I could see was my own place again.\"\n\nI just nodded my head.\n\n\"And so you know, I didn't get that apartment. It was already taken by the time I got there. Not sure I would have wanted it anyhow. I could smell the dampness and mildew from outside.\"\n\nThat was the first bit of good news I had heard all day. \"Okay,\" I said feebly.\n\nJenn wrapped an arm around me and then with her other hand took mine. We sat on the bench for a bit while Madison played with a couple of other kids she often saw at the park.\n\nI watched her push the merry-go-round and jump on. It was good to see her playing normally for a bit. Hopefully, at least for a little while, she could forget things. As I watched Madi, a pair of gentle lips found my cheek.\n\n\"What do you say we head home?\"\n\nA few minutes later, and after a change into some comfy sweats, I found Jenn in the living room reading a book to Madi. They were reading another one of my favorites brought over from my parent's house, Brown Bear, Brown Bear, What Do You See?\n\nI sat next to them on the couch and joined in on the book. Jenn set the book down when they finished.\n\n\"So, are you serious about having us move in with you?\" she asked.\n\n\"Yes.\"\n\n\"I'd like to.\"\n\n\"You two are always welcome to stay here. We can turn the guest room into a permanent room for Madison, and if you want your own space, we can convert the office downstairs back into a third bedroom. If you want, I'd even move downstairs so you can have a bedroom on the same floor as Madison.\"\n\n\"No, that won't be necessary?\"\n\n\"No?\" Now I was confused.\n\n\"Just to the last part. But yes, to the first part. I think Madison would like her own room, right baby girl?\"\n\n\"Can I have an Elsa room?\"\n\n\"Of course you can, if that is okay with your Mommy?\" I smiled at Jenn who nodded her head in agreement. I continued, \"It might take a while to make the change, but we can do it.\"\n\n\"Babe, thank you for the offer of a space for me. I might take you up on it, but just as a quiet space to get away for a few minutes. The moment it sunk in my thick skull that staying here was an option, there's only one place I wanted to lay my head down, and that is next to yours. Are you sure you want us to stick around? Are you ready for being up half the night when a little girl is sick? Are you willing to put up with a stubborn mule who wants to be independent but also with you?\"\n\n\"Are you willing to put up with a snotty rich girl who is used to getting her own way and can be rather bullheaded and likes to surprise her girl?\"\n\n\"How is this for an answer?\" She pulled my head down and kissed me for all I was worth. We probably would have kept going if not for a little girl giggling and talking to her doll.\n\n\"Don't look Nani. Mommy and Miss Whitney are kissing. We're not supposed to see it.\"\n\nNeither of us were up for going back out that day to do any more shopping, so we hung around the house for the rest of the day. Jenn helped me clear a few things out of the closet, mainly pairs of shoes I had only worn once, in order to make more space for her things.\n\nWe also sat around the kitchen table for a bit and talked about living together. At first I resisted, but eventually I caved in and let her pay me something for rent. A token amount to me, but it was meaningful to her. There were other things we discussed, boring ones really, but necessary if we were going to make a go of living together.\n\nI held out a glass of red wine to Jenn as she came downstairs from tucking in the munchkin. We snuggled up on the couch and attempted to find something to watch.\n\n\"I'm sorry I didn't realize you wanted me to move in and I was being a stubborn mule and not thinking about you in our decision where to live. I think I owe you an apology.\"\n\n\"You don't owe me anything. I'm just glad we got it figured out.\"\n\nShe giggled and took my wine glass from my hand, and with hers, set them both on the table. \"You don't get it do you. I owe you an apology.\" Giggling, she turned and sat on her knees, straddling my lap. Our faces were millimeters apart.\n\nHer fingers slipped into my hair as she held my face in her hands. Those slate-blue eyes darted back and forth across my face, scanning every inch as if to reacquaint herself with me. Closing my eyes, I could feel her breath get closer, and then the softness of her lips pressed against mine.\n\nOur tongues danced, timidly at first. Like young schoolgirls on a first date, full of excitement and anticipation of what was to come. My lower lip was delicately caressed by her lips as her hands held the back of my neck. I was putty in her hands.\n\nShe leaned back and pulled her shirt off. I could see the silhouette of her erect nipples through her bralette. Jenn stayed back a moment longer to allow me to do the same. A smile crossed her face when she realized I had been braless all evening. She quickly removed hers and resumed kissing me with even more passion than before.\n\nAs hands began to roam my body, a trail of kisses began to slither down, first my neck, then chest, and finally began to be lavished on my breasts.\n\n\"Oh god, babe, that feels so good. I've missed this,\" I half moaned.\n\n\"Is my Whitney still sexually frustrated?\n\nI put on my best pouty lip and nodded my head. \"It's been like six weeks.\" I might have been pressing the sad little girl routine a bit far, but it was having the desired results.\n\n\"Oh well, I'd better give you a big apology then.\"\n\n\"Yeah! A big one. And then it'll be my turn to apologize as well. I owe you an even bigger apology.\"\n\n\"I like the sounds of that!\" Jenn resumed pleasuring me.\n\nMoments later, a hand worked its way into my sweats. There was no resistance when two fingers slid inside me, and the palm of her hand worked its magic on the outside.\n\nThe sensation began to build and I could feel the dam about to give way. Our eyes locked on each other, and I clung with my hands around her neck, knowing the intensity that was about to be unleashed on me.\n\nThen it hit. I could feel it start in my toes and shoot across my body. Writhing and arching my back, control of my body was in Jenn's hand. Her fingers continued their assault on me as wave after wave of pleasure caused me to spasm.\n\nJenn let me collapse back onto the couch like a bowl of jelly. I lay there, spent, exhausted. The proud smile on her face screamed 'lookee at what I just did.'\n\nEventually I mustered the strength to pull her to me so I could enjoy my favorite post orgasm activity, a snuggle.\n\n\"You know it's my turn to say I'm sorry,\" I said as the last of the endorphins melted away.\n\n\"And how are you going to say you're sorry?\"\n\n\"Shall we go upstairs, and I'll show you?\"\n\nI followed the cutest tushy on the planet up the stairs and spent the next couple of hours making love to her in all sorts of ways. This was by far the best make up sex I've ever had. Even though I wasn't able to crack the secret Jenn code, she still went to sleep with a satisfied smile on her face. As we both drifted off to sleep, I thought to myself that one of these days I'm going to decrypt the Jenn cipher, or maybe better said I'll help her crack her own code.\n\n<p align=\"center\">_|/_</p>\n\n\n\nJenn pulled us into my parents' driveway in her new-to-her Subaru. She had taken most of the money she received to replace her car. It was a few years old but well maintained. As we parked, a little voice chirped from the back seat.\n\n\"Now no peeking at your birthday presents early Miss Whitney.\"\n\n\"Moi?\" I had been teasing her all week about snooping into her room, where I knew she and Jenn had stashed what they had gotten me. For the most part, my days of being birthday princess diva were done, but turning thirty, two days before Memorial Day, had me a bit giddy. And besides, I was waking up each morning with the cutest girl on the planet next to me.\n\nAs we got out of the car, we could smell whatever it was Dad had on the smoker. One of his passions is sharing the bounty of his smoker with others. The other is fishing. His happy place is out on the Miss Whitney, line in the water and a few crab pots out soaking. As we got to the back patio, we found his mashup of his two passions. On the smoker were four Dungeness crabs, a few Salmon steaks, plus some polish sausage, potatoes and corn on the cob.\n\n\"Hi Sweet Pea! Jennifer! How are my favorite girls doing? Wait, where is the third one?\" Madison had stopped on the way around the house to smell some flowers and came tearing around the house.",
        "\"Papa Ben!\" She practically jumped up into his arms to get a hug.\n\n\"There's my munchkin.\"\n\n\"Whatcha making?\"\n\nWhit and I watched as Ben showed her what he was up to. Soon a chair was pulled up next to the smoker so she could peer in. Until it was time to eat, Dad had a five-year-old shadow. Mom came out and joined us. For as awkward as Christmas had been, Jenn and Mom were now getting comfortable around each other and having conversations with her were, well, less uncomfortable.\n\nWhen it was time to eat, Madi loved the smoked crab and got into cracking the legs and getting the meat out. I think Mom was happy that we were eating outside, so any mess she made that couldn't be easily cleaned up could be hosed off the back of the patio.\n\n\"Jennifer, do you think I could take Madison out on the boat and go fishing with her sometime?\" I recognized the twinkle in his eye as he thought about having a new fishing buddy.\n\n\"Can I, Mommy?\"\n\n\"I think that can be arranged.\"\n\nI'm not sure who was giddier at the prospect of the two of them going out. Both were bouncing in their chairs. Ben explained to Madison what they might do out on the boat, and she gobbled it up. We listened to them plan, and I could tell Dad was all excited to be hanging with the munchkin.\n\nThey went on for a while until Mom was ready to move on and announced her feelings by beginning to clear the food from the table. Jenn and I quickly joined in. Since the two were still going, Jenn went over to Madi and whispered into her ear.\n\nI watched her jump up and run into the house. Madi returned a moment later with my birthday presents. I opened my parents' first. The ever practical people gave me a book on how to interact with my partner's children. I gave my mom a side eye.\n\n\"Really?\"\n\n\"Well you're kinda parenting, and you don't have much experience in that area,\" she replied.\n\nDad piped up, \"At least I kept her from getting you the book on marriage.\"\n\n\"Thanks, I think.\" I looked at Jenn, who smiled and nodded her head. That topic had not been mentioned since New Year's and I think we were a long way off on revisiting that topic.\n\nThere was an awkward moment before the munchkin broke the silence.\n\n\"Open the big one next. It's from me and Mommy.\"\n\n\"Oh, if it's from you then I know I will like it.\" I pulled the tissue paper from the gift bag and lifted out a running vest.\n\n\"I thought you might like to have that as you train.\" Jenn said.\n\nI did, it was just what I had been wanting. I was still diligently running every morning before work and then getting in a longer run in on the weekend. The vest was perfect. It had good reflectors on it, and instead of a couple of water bottles, there was a bladder in the back with a hose for me to sip from.\n\nIt was the last small box that I loved the most. The old saying is true, good things come in small packages. It was from my girl. I lifted the lid and inside was a small, plain silver locket. Carefully, I opened it and found pictures of Jenn and Madi inside. I looked at my girl and almost started to cry. Jenn sensed my need and gave me a hug. I put it on and could feel my heart warm at the thought of having a small bit of my two favorite girls next to me. It became one of my most cherished pieces of jewelry over the years, and I wore it frequently, including two days later when we were back at Mom and Dad's for their annual family Memorial Day barbeque. The whole Whitney clan shows up for this, not just my Mom's brothers. This is typically the one day a year where their cousins and families all get together.\n\nWe got there early to help set up. Dad already had the smoker going. Knowing him, it was probably started the day before. For Seattle, it was a perfect day, no clouds in the sky and warm enough for shorts, but not too hot.\n\nJenn set the large cucumber salad she made out on a table set out to contain all the treats people would bring. With Jenn's extra set of hands, and Madi as well, we got things ready earlier than normal, and we began to relax.\n\n\"Madison,\" my dad said, coming in from the back patio. \"Yesterday I was cleaning out part of the garage loft and found Whitney's old bicycle. Did you want to give it a try?\"\n\n\"Sure!\" She skipped behind him as they went out to the garage. Jenn and I followed them. I smiled as she took my hand and interlaced her fingers with mine. I could see her checking me out. In the corner was my old pink bike standing there, just waiting for a new rider. I chuckled at the color; it was from a time before I asserted my right to have things in the proper color of purple.\n\nDad was about to help her onto the bike when he remembered this child sized helmet sitting on top of some boxes.\n\n\"You don't want to make a hamlet mistake now do you Madison?\" His tone was the same one I remember from my youth that made my heart melt. The straps were adjusted to fit her precious little head.\n\nHe helped her climb on and began to show her how to balance and go down the driveway. I was watching them when I felt Jenn's fingers slip out of mine. She walked over to the corner where Dad had stacked some boxes and other items.\n\n\"That's probably all for the Goodwill,\" I explained.\n\n\"Well, if that's the case, I want this.\" She held up a skateboard I had gotten sometime in middle school and tried it a few times but never got the knack for it.\n\n\"Haven't ridden one of these since I got pregnant. I wonder if my mom still has mine?\"\n\nShe looked like the perfect skater chick: jean shorts, gray tee shirt, and her trademark black Vans. Looking at her I could feel myself getting a bit wet and a shiver raced everywhere under my blue sundress.\n\nI watched a skilled boarder slap her board down and accelerate down the driveway. Maybe it was girlfriend pride, but I couldn't tell that it had been six years since she had been on one. She weaved left and right, then carved a corner and jumped up over the curb, skating partway down a sidewalk before coming to a stop. I think the jump move she did is called an ollie, but I'm an accountant and not good with skating lingo.\n\nSomeone else was watching her as well. \"Way to go Mommy, that was cool.\"\n\n\"Rad, pumpkin. When you're boarding, you say rad.\"\n\nDad snickered.\n\n\"Okay, that was rad Mommy. Maybe once I learn to ride a two-wheeler, you can teach me how to ride one of those.\"\n\n\"Let's focus on you riding your bike first.\"\n\n\"Well, another couple minutes, munchkin, and then we'll have to stop. People will be coming over and filling up the driveway,\" Dad said, grabbing the back of the bike seat to help the munchkin along. Madison was close to getting the hang of it when the first car arrived. Another little bit, and she'd be there.\n\nFirst to arrive was my uncle Ruben and aunt Helen. As soon as Nathan and his sister Amber got out of their car, Madi started to follow them around and tried to be one of the \"big\" kids.\n\nSoon, others began to arrive. With a bunch of my second cousins now around, Madison had lots of kids her age to play with. Jenn and I found ourselves in a bit of an awkward position. All the other adults, those of my parents' generation, were a bit older than the two of us, whereas everyone of my generation was younger, in some cases by quite a bit.\n\nWe ended up hanging with the adults. There was just more in common to talk about with other adults. Many of my more distant relations were interested in learning about Jenn, and between the two of us, I think we told the story about how we met about a dozen times. To the point where I thought it was wearing on her. Her eyes kept coming back to me. I wasn't sure if it was 'get me out of here' or something else.\n\nWhen there was a lull in the conversation, she grabbed my hand and led me into the house. There were a few people in the kitchen and dining area that led out to the backyard. It was easy to follow her cute tushy up the stairs to my old bedroom.\n\nThe moment I cleared the doorway, Jenn slammed it shut and pushed me up against the wall. This was an aggressiveness I had never seen from her before. She pinned me against the wall and mashed her lips to mine. Her tongue forced her way into my mouth, and they did a waltz together. I wanted to wrap my arms around her, but she had them pinned against the wall.\n\n\"mmm\" I moaned.\n\nShe broke our kiss, and I felt a hand slip up under my sundress. It was then I realized that look on her face outside had been lust. She wanted to get out of there, but not for the reason I had thought.\n\n\"Do you know how sexy you look today in your dress and Keds? I was going to wait until we got home, but I couldn't take it any longer.\"\n\nJenn pulled the fabric of my soaked thong to the side, and I felt two fingers slide in. My eyes flared, and it was all I could do to keep myself standing as she turned me into a pile of goo.\n\nThis wasn't some tender lovemaking, but she was fingerbanging the ever loving bejesus out of me. And you know me, I started to get vocal, as the pleasure mounted.\n\nI felt her other hand press against my mouth.\n\n\"No moaning. You have to keep quiet.\" I could see the glee on her face as she tortured me.\n\nI squinted my eyes at her. Really? I tried to say to her telepathically. I wasn't sure I could do this.\n\nHer thumb had found that perfect spot, just above my clit. With her two fingers getting me good from the inside, I knew it wouldn't be long before--\n\n\"W-a-a-a-a!\"\n\nI shook my head, and my eyes went wide. I pushed Jenn away. That wasn't me or her screaming.\n\n\"Madi!\" I yelled. We both turned and grabbed the door handle. I flew down the stairs, adjusting myself back into shape as best I could. Jenn was right behind me.\n\nWe followed the sounds of a crying girl and found her on the sidewalk. The bike was half lying on the grass and my cousin Nathan was right there with a first aid kit. There was a big scrape down her leg, and he was cleaning the wound with some antiseptic wipes.\n\nJenn sat next to her and held her head and hand.\n\n\"It hurts Mommy.\"\n\n\"Yeah, it's going to sting for a bit, but it will be all better soon.\"\n\nIt didn't take long for Nathan to use his scout skills and patch her up. Jenn picked her up and carried her to the back patio while I put the bike away.\n\n\"She was doing it all on her own,\" Nathan explained to me. \"But she found a crack in the sidewalk and lost her balance.\"\n\n\"It happens. Thanks for being there to help her.\"\n\nMy cousin beamed with pride. I made my way to where Madi was snuggling with Jenn. Several moms were fawning over her, but Nana Edith made her day.\n\n\"Here, this will help you get better.\" She held out a red popsicle, which was eagerly accepted.\n\n\"Mother! You never did that for me when I got a scrape,\" I protested.\n\nMy mom shook her head and smiled at me. \"Whitney, Whitney, Whitney, when are you going to learn? It's called Nana privilege.\"\n\nMadi looked at me with red stains all around her lips and smiled, the popsicle being quickly devoured.\n\nDad came over and tousled her hair, and then went over to Mom and whispered something into her ear. She nodded, and then he began to clear his throat.\n\n\"Hey everyone, can I get your attention, please. The food is about ready but before we eat, Edith and I have a couple of announcements.\" I watched as he took her hand. \"First, as most of you know, we have a second house up on San Juan Island that we built to be our retirement home. We're now getting to the point in our lives where we are going to start transitioning out of our careers and into retirement. We want to enjoy life and slow down.\"\n\n\"And go fishing with me!\" Everyone laughed at Madi's interruption.\n\n\"Yes, and go fishing with you, muchkadoo. I plan on doing lots of fishing.\"\n\nThe munchkin did a little happy dance in Jenn's lap.\n\n\"It's going to take a couple years to make the transitions,\" It was now Mom talking, \"and then we will pass this place on to the next generation.\" She looked at me and gave me a small head nod. \"But that's not the only announcement. For the next one I need my brothers here.\" Silas and Ruben came over to where Mom was.\n\n\"Shall I say it or did one of you want to announce it?\" she said to her siblings.\n\nSilas stepped forward. \"As some of you might know, when we name a new tug, we ask the employees for suggestions. And we do so in a blind fashion, meaning we don't see who made the suggestion until we decide on it. My assistant was the only one until then who knew who made what suggestion. Tomorrow we are going to be announcing that our next tug will be named the Whitney Pride.\"\n\nSilas looked over at Mom and then at Ruben. Ruben stepped forward. \"Not only will we be naming the tug the Whitney Pride, but we will be christening it next month at the Whitney Enterprises company picnic which happens during the Seattle Pride festivities.\"\n\nIt warmed my heart when I heard some of my extended family give out a few cheers. I didn't expect what I heard next.\n\n\"But most importantly,\" it was now Mom speaking, \"someone here will be doing the honors. We, my brothers and I, were tickled pink when we found out that the suggestion came from Jennifer.\"\n\nI looked over at my girl, who was pleased, but also a bit embarrassed, to have everyone looking at her. People started to clap and cheer, which just made it worse. I could see the red start to form in her cheeks. I leaned down and gave her a hug and kiss. Which of course just egged my family on more.\n\n\"Okay, okay everyone,\" Mom continued. \"Jennifer, would you like to do the honors and bring the tug you named into our fleet?\"\n\n\"Well, I'm not sure it should be just me. Shouldn't we invite all the staff from all the companies who are LGBTQ+?\"\n\nMom looked at her brothers and then over at me. I couldn't be more proud of my girl right now. Her inclusivity felt so spot on.\n\n\"Jennifer, I think that is a marvelous idea. Silas? Ruben?\"\n\n\"Agreed.\"\n\n\"Yes.\" Ruben followed his brother. \"And sorry Whitney, we have a bit of accounting to do tomorrow as well. Do you know how hard we had to work to keep this from you? We wanted this to be a surprise for you too.\"\n\n\"That's okay, I get it.\" I was too happy to be annoyed.\n\nWith the announcements over, we broke for food. Dad had done up some brisket on the smoker, and there were hot dogs and hamburgers as well. Jenn, Madi, and I ended up eating our food with Silas and Kathleen, and a couple of my second cousins.\n\nJenn was telling Kathleen that the recipe for the cucumber salad was from Dallas' mom and an Olinski family recipe. She was explaining how it was best if it sat overnight. The vinegar, salt, dill and garlic in it pickled the cucumbers lightly. It was then that I noticed the munchkin was missing.\n\nI looked at her spot and all that was there was an uneaten half of a hot dog, smothered I might add in ranch dressing, and a popsicle stick with a big purple stain on it.\n\nLooking around, I figured out what was going on.\n\n\"Madison!\" I yelled and stood up. This, of course, got Jenn's attention. There was Little Miss, with blue and purple plastered all over her face. Half a blue popsicle sticking out of her mouth and dripping down onto her Minnie Mouse tee shirt. The red hair bow on the shirt was starting to look like a Pride flag with all the different color drips.\n\n\"Madison GRACE!\" Jenn leaped from her spot and escorted a messy little girl into the house to get cleaned up. We could hear Jenn muttering all the way into the house.\n\nI shook my head as I sat back down.\n\n\"Welcome to parenthood, Whitney,\" my aunt Kathleen giggled.\n\n\"Well, I'm still just the girlfriend. But I do my best to support Jenn.\"\n\n\"You can change that you know, all you have to do is propose.\" Silas grinned.\n\n\"Silas!\" Kathleen smacked him. \"That's not a polite thing to say.\"\n\n\"What?!? The whole ride over here you were wondering when Whitney is going to pop the question.\"\n\n\"But I'm polite enough not to actually ask it!\" said my peeved auntie.\n\n\"It's okay Kathleen, I expect it from you all. But just so you know, I don't think we are close to being ready for that. Someday, I hope. But not right now.\" I was lying of course. I wanted her with every fiber of my body to be my forever girl.\n\nA few minutes later, Jenn and Madi came out of the house. I noticed that Madi had a different shirt on. The one Jenn kept in the back of the Jeep in the emergency Madi clothing bag. There was a similar one in the back of her Subaru. One never knows when an accident might happen.\n\nJenn sat down next to me. \"I think we need to get going. Someone has lost her privilege to stay here and play. She had four more popsicles after I told her no more. And they didn't come from Nana or Papa. She got them on her own.\"\n\n\"Got it, I'll tell Mom.\" I looked at the others. \"Is my Jeep blocked in?\"\n\n\"I think I'm blocking you in, Whitney,\" said Silas. He leaned close to me. \"You're doing the right thing. You always have to support your partner in parenting decisions.\"\n\nJenn and Madi went to pick up the salad bowl, and I found Mom and told her what was going on. She was understanding and gave us all a hug goodbye.\n\nMadison was quiet in the car on the way home. Jenn and I looked at each other a couple of times.\n\nThe rest of the day was quiet as well. I came downstairs after tucking in Madi at her bedtime to find Jenn texting away. I saw her wipe her eyes, shake her head, and put the phone down.\n\n\"What's going on?\" I asked.\n\n\"I tried to text my mom. Still blocked. I wish she would talk to me. I'm okay if she never accepts who I am. However, if she continues to cut Madison out of her life, there's going to be problems.\"\n\nI wrapped my arms around her. \"It's going to be okay. Madi has Dallas and his parents who love her. I love her and my folks love her. She'll never be without love and support around her.\"\n\n\"I hope you're right. I also texted Dallas and his mom. They both said congratulations on naming the tug. Dallas said he was going to try to be there, but probably would be on duty that day.\"\n\nWe snuggled for a bit while Jenn recovered from her cry. \"So, um, about today...\" my voice trailed off to give her a moment to catch up to me.\n\n\"What about today? Did you think I was too harsh on Madison?\" There was confusion on her face.\n\n\"No, not that. That was fine. I would have done something similar. About taking me upstairs. Where did that come from? I'm not complaining in the least. I was more surprised than anything else. Not like you to take charge like that.\"\n\n\"Was that a problem?\"\n\n\"Hell no. I liked it actually.\"\n\n\"Just don't go expecting it often. I just want to keep you on your toes.\"\n\nAnd then I saw her give me that look. Like a lioness hunting her prey, she sprung and pounced me, pushing me onto my back on the couch. Like before, her lips danced with mine and her fingers tugged at my panties. This time I was able to slip them off and give her better access.\n\n\"Jennifer,\" I moaned.\n\nA hand clamped over my mouth again.\n\n\"No, no, no. You don't get to say anything tonight.\"\n\n\"Mrph,\" I whimpered as her fingers diddled me. My body writhed in pleasure, as Jenn was becoming quite the expert on my body and how to excite me. She edged me along, changing her motions and intensity when she sensed I was getting close.\n\nMy hips bucked as I tried to wiggle myself into a better position on her fingers. Each time I did though, she would giggle and change things again. It wasn't until I pulled her lips to mine that she relented and let me come.\n\nAnd it was a big one. My legs clamped around her hand, while my body shook. I was completely spent afterwards, but I had been a good girl and not said a thing.\n\nJenn leaned down and kissed my forehead, and then my lips. \"Did that feel as amazing as it looked?\"\n\nI couldn't respond other than to nod my head. I was wiped out. My lioness snuggled with me on the couch. Basking in the afterglow of sex, I drifted in and out of being awake. Fingers played with my hair and gently traced over my body. Bolts of lightning would hit, as one of them would graze my nipple.",
        "\"Come on dear, let me help you up and get you to bed.\" Jenn helped me from the couch and, taking my hand, led me upstairs.\n\n\"I need to return the favor,\" I pouted.\n\n\"Some other night, my love. I think you're more tired than you realize. At least more relaxed.\"\n\nAfter getting her sleep shirt on, Jenn went down the hall to check on Madi, who was sound asleep as usual. I was in bed when she got back and felt her spoon up to me. Warmth rushed across me as an arm draped over me and she continued the caress from on the couch. Tomorrow I would resume being the big spoon, but tonight I reveled in being the little spoon for once.\n\n<p align=\"center\">_|/_</p>\n\n\n\nJenn reached up and clicked the garage remote closed after turning off her Subaru. The remains of my racing bib from the Pride Five and Ten race was in my hands as I climbed out. My legs ached a bit, but it was a good ache. My time was close to what I wanted it to be, and I was feeling good about the marathon in November.\n\n\"I'll take a shower and change; then we should probably get going to the company picnic,\" I said to my girls as I continued to the top floor of our townhouse while they went into the living room.\n\nThe warm water felt good, washing the sweat and dust off me. As I entered our bedroom, I noticed Jenn had set out the special company tee shirt for today's picnic. The blue shirt had a rainbow silhouette of our new tug with Whitney Pride underneath, with the Whitney being in our traditional Green, but the Pride was rainbow. Most of the staff and families would be handed one when they parked at our offices and got on one of the shuttle vans we hire every year to transport people to the park.\n\nWe got to the office parking lot early enough that we caught the first shuttle for the day to Gas Works Park. It's just a short hop down the ship canal from our office to the park, which is on the shore of Lake Union. The weather was perfect, and we had a great view of the city skyline. The Space Needle sticks out above everything, and on such a great summer day, the lake was filled with boaters of all types.\n\nMoored to the sea wall was the Whitney Pride with pride pennants going from bow to mast to stern. It was, at least to me, a stately sight. My parents and uncles had all been on the shuttle with us, and we all stood admiring our newest addition to the fleet. While it wasn't our first hybrid tug--we had added a couple in the last few years--this one was by far the most special to me.\n\nI had been to many of these, which in the past had all been at our shipyard or tug docks. This was the first time we were making a big deal about it, but it wasn't the recognition from my family or that they were being so public about it that made today special. It was that my girl was with me, the one I privately hoped would be my life partner someday.\n\n\"What's that, Mommy?\" Madi was pointing to the temporary post with an outrigger erected on one side. From the outrigger hung a line that would soon hold the bottle of champagne.\n\nJenn pointed out how it would work. \"See, a bunch of people are going to pull on this line over here and that will raise the bottle. Then Miss Whitney and I are going to cut the line which will let the bottle swing below this platform and break against the Pride.\"\n\nMadi studied the setup and then noticed people flying kites. She pulled us over to explore them as we watched people fly all kinds of kites from what was known locally as Kite Hill. We saw colorful stunt kites, kites shaped like animals and many others. It was fun to see the world through her eyes for a moment.\n\nWhen she got bored, we went over to where the company had set up a big tent for the food. Surrounding it were bounce houses going up and a bunch of booths with different activities at them. Madi beelined for the face painting booth and soon had a rainbow heart painted on each cheek.\n\n\"Mommy, you and Miss Whitney should get hearts on your faces too, 'cos you love each other.\"\n\nJenn and I looked at each other. I couldn't argue with logic like that. Jenn went first, and as I was finishing up, it was time for us to go over to the Pride.\n\nMost of the company had assembled on the balcony platform with the rigging on the side, so it could use the full ten feet of clearance above the gangway below that led to the tug.\n\nThere were a few other people besides those from our company, some of our key suppliers, a couple customers, and a few I found out later were members of the local media.\n\nA couple of toots from the Pride's horn got everyone's attention, and then Silas welcomed everyone and gave a small speech. It was a boring corporate rah-rah speech, one of those whose details are so memorable, you can't remember a lick of them as soon as it's done. It was the next speech that was the important one to me.\n\n\"Normally I conclude a speech like this with the background of the new tug's name and what it means. But this time I thought we should ask the person who suggested the name to come forward and explain it. From Whitney Maritime, please welcome our Director of First Impressions, Jennifer DeLuca.\"\n\nThere were a few polite claps, and Jennifer took the podium. I held up Madi so she could get a good view.\n\n\"When I first saw the 'Name the Tug' contest, I was having a terrible day. Perhaps the worst of my life until that point. You see, that was the day after I got home from seeing my mom for the first time in over a year, and I brought someone special with me. I hadn't known my girlfriend for long, but she had helped me to realize who I was. I was proud to bring her with me, but well, let's just say coming out to my mom didn't go like I had hoped. It was a disaster.\"\n\nJenn paused and wiped a tear from her eye. It was all I could do to not lose it myself.\n\n\"But I was proud of who I was, who I am. And that's what first prompted me to suggest this tug be named the Whitney Pride.\"\n\n\"As time has gone on, I've realized that there's more to pride than that. We can take pride in a lot of things. I'm proud that I'm no longer a scared teenage mom. Or a single mom living in a homeless shelter. I'm proud that I completed my community college degree, and this fall will be continuing my education at the University of Washington.\"\n\n\"I'm proud that I have the freedom to be with the person I love. That our society, while not perfect and has a long way to improve, has become much more accepting of gay people like me. I can go to the supermarket or the park and hold hands with the woman I love and no one bats an eye. Who knows, maybe someday we will even get married.\"\n\nJenn looked at me and smiled. That was the first time in months either of us mentioned that. I didn't have to look behind me either, but I could tell my mom was smiling as well.\n\n\"Most importantly, I'm proud to work with all of you. Everyone I have come into contact with here at Whitney Maritime, and all the companies, have been the nicest group of people. You all have accepted me for who I am.\"\n\n\"We all should be proud that we work for a company that accepts you for who you are: gay or straight, male, female, trans, or there's not a box for you yet. Regardless of the color of your skin, what your religious beliefs are, or if English is not your native language.\"\n\n\"I know I'm proud to work here, and I'm proud that my girlfriend does as well. Whitney, will you join me up here?\"\n\nWith Madi still in my arms, I joined her.\n\n\"Now will the rest of the Whitney Enterprise LGBT community please help us prepare for the christening.\"\n\nWe walked over to the edge of the railing while the team pulled the rope to raise the bottle. Jenn helped me hold up Madi while Silas handed us a giant pair of scissors. The three of us held them and Jenn said, \"I name this tug the Whitney Pride.\"\n\nThen Madi Counted us down, \"three... two... one...\" and we cut the line. The bottle made a graceful arc and smashed against the hull.\n\nI think people began to applaud, but I didn't hear them. I was too focused on the pair of lips that had decided to find mine at that moment.\n\n\"Mommy, you're kissing Miss Whitney again!\"\n\nLater in the afternoon, we were standing looking at the Pride, Jenn holding my hand on her right and Madi on her left, when we heard someone coming up behind us.\n\n\"Jennifer? Whitney?\" The voice was from an older man, one I recognized a bit from over at the shipyards. Like many of our employees, he has been here a long time, maybe since before I was born. Next to him was a younger man. Both had a rainbow Whitney Pride tee shirt on.\n\n\"Yes,\" both of us answered at the same time.\n\n\"I don't know if you know my name, I'm Karl. I've worked at the shipyards for 34 years, this is my son Peter. Thank you for what you did today, and for what you said up there Jennifer. I'm ashamed to say this but when Peter told me he was gay a couple years ago, I didn't treat him well and said some things I regret. We didn't speak for nearly two years.\"\n\n\"Oh wow, \" Jenn said, and I felt her squeeze my hand.\n\n\"Yeah,\" said Peter glumly.\n\n\"But there was hardly a day I didn't think about him and wished I could take my words back. I just didn't know how. But when I saw the announcement about naming our new tug, the Whitney Pride, I knew this was my opportunity to begin to repair our relationship.\"\n\n\"When dad called at first, I didn't answer the phone. I didn't want to get a lecture or anything. But I listened to his voice mail and called him right back. We've spent the whole day just talking. It's not been easy, but it's been good.\"\n\nKarl put his hands on Peter's shoulder and gave him a fatherly side hug.\n\n\"I love you, son. Even when we weren't talking, I still loved you.\"\n\n\"That's...\" Jenn tried to come up with the words, but I saw her lips purse together and her eye twitch. I could only think that her thoughts were going to her mom right now.\n\n\"I'm glad you two could use this event to reconcile.\" I jumped in to help my girl. \"That makes today even more special. Every time I see the Pride, I'll think of you two.\"\n\nAs the two of them headed down a sidewalk, I checked in on Jenn. I could tell she was trying to keep it together, but wasn't going to last much longer. I gave her a hug, and Madi hugged her leg.\n\n\"It's going to be okay Mommy.\"\n\n\"We've both got you Jenn.\"\n\n\"I just wish she would take a voicemail or a text from me. Something.\"\n\nI wanted to say something to fix it. Make all her pain go away. But I couldn't. There was nothing I could do. We hung around for a bit. The munchkin burned off a bunch more energy in the bounce houses before we headed home. Jenn was quiet for most of the afternoon. I helped make sure Madison was taken care of while Jenn just processed her feelings. That night when we went to bed, she held my hand while I spooned her. Her chest heaved a few times before she fell asleep. I brushed her hair with my fingers and fell asleep myself.\n\n<p align=\"center\">_|/_</p>\n\n\n\nJennifer\n\n\"Hold my hand Madison while we cross the lock gate.\" Little fingers curled up in my hands as we jostled with the oncoming foot traffic going across the closed gate of the Ballard Locks. A few weeks had passed since the company picnic. We had come down to spend a quiet summer Sunday afternoon at the locks, roam the flower gardens there and listen to whatever live music was playing that day.\n\nThe three of us had crossed the locks and gone over to look at the fish ladder and the salmon viewing windows as the annual Sockeye run was nearing its end. We were crossing back to eventually head to our car when eagle eye Little Miss spotted something.\n\n\"Look Mommy, Miss Whitney, a tugboat. Is that one of yours Mommy?\"\n\n\"Well, is it blue and green?\"\n\nA hand shot up and hovered over her eyes to block the bright sun as she squinted to get a good look at the tug coming our way. Sure enough, it was one of ours. I figured it would be, since our dock is just a little down the ship canal.\n\n\"Can we stay and watch it go through the locks?\"\n\n\"Sure thing, sweetie.\" Life was good. I had a Madison in one hand and a Whitney in the other.\n\nWe watched the Whitney Voyager enter the locks and tie up in preparation for the lowering. I waved to the crew and got a wave back from a couple of them.\n\n\"Ahoy, Jennifer, nice to see you out and about. You too Whitney. Is that your little one?\" the captain shouted to us from the wheelhouse. Madison waved, and the captain gave a little toot of his horn. As the locks began to lower, I saw the captain pick up his radio in the wheelhouse and saw his expression go from happy to serious. Moments later, he came out and started to shout at his crew to get ready for a quick getaway.\n\n\"Jennifer,\" he yelled up to me. \"Get to dispatch if you can. They just activated Emergency Plan Hotel.\"\n\nWhitney and I looked at each other like 'Oh shit.' I scooped Madison up in my arms, and we beelined out of there.\n\n\"Which plan is Hotel again?\" Whit asked. We had a series of emergency plans covering different scenarios, each with a different letter. F or Foxtrot was one of our fueling ships with a major spill, C or Charlie was a container ship with a Mayday call. H or Hotel was similar but a cruise ship. Somewhere a cruise ship in the Puget Sound was in distress, and all available ships were being asked to assist.\n\nWhitney drove us the couple miles down the canal to our offices and we walked in the door. She took charge of Madison while I headed into dispatch.\n\n\"Jennifer, glad to see you.\" The head of dispatch barely looked up from her screens. On the wall was a large digital display showing all the traffic in the Sound. I could see the red dot where the cruise ship was, up near Ben and Edith's island house. Six of our tugs, including the Whitney Voyager, Whitney Pride, and the Whitney Endeavor, were in orange, indicating they were responding to the situation.\n\nI rolled the front desk phones over to a free workstation and sat down. My role in these was to be the communication node between Maritime and the outside world, and to back up the dispatchers. Mainly it was my job to run interference with our clients, to, as best as possible, gently let them know that we would be late to appointments with them.\n\nI began calling a couple of the container companies, to relay to their ships that the tugs scheduled to meet them in the next few hours were responding to the mayday. I began to listen in on the radio chatter as the various ships began to respond.\n\nBest I could tell, there was a major fire in the engine compartment of an older Panamax cruise ship headed for Alaska. It had just left port and fortunately all the passengers were already at their muster points, doing their mandatory, start of cruise, safety drills.\n\nI saw Whitney holding Madison and poking her head into the dispatch room. \"Jenn, call my mom. I just got a text from her. She and dad are on the Miss Whitney and heading over to assist if needed. I'm taking Madison home. Call me when you need a ride home, and we'll come and get you.\" They waved goodbye to me as I began to dial the phone.\n\n\"Hello?\"\n\n\"Hi Edith, it's Jennifer, I'm in dispatch. Whitney said you were heading to help?\"\n\n\"Yes, we were already in the water and then saw the smoke coming from the cruise ship. Ben is saying he is seeing them lower the lifeboats. Mark the Miss Whitney as responding in addition to our tugs.\"\n\n\"Copy that.\" I could see one of the dispatchers waving to me to get my attention. I saw him flash a few finger signs to me. \"Dispatch says our tugs are coordinating on channel nineteen, and to stay off of sixteen and leave that open as the emergency unfolds.\"\n\n\"Thanks Jennifer, I'll let Ben know.\" I heard the phone click off.\n\nAfter making contact with all our scheduled appointments for the rest of the day, I sat back in my chair to watch the drama unfold. We had a television in the corner of the room, and I tuned that to one of the local TV stations that had a helicopter up and broadcasting footage of the incident. In a number of shots, we could see our tugs assisting with the rescue. One was shooting its water cannon up into an open hatch on the cruise ship. Two others appeared to be connected to the cruise ship, to keep it upright and under control. The others were around, along with some other tugs and responding craft, helping to collect up the various lifeboats. I could see a number of people on one of our tugs, all with their bright orange life vests on.\n\nMy heart went out to these poor people, some of whom I'm sure had planned and saved a long time to go on a cruise just to have it ruined like this. I could see on the tv a Coast Guard helicopter lifting a basket from the deck. That was probably not a good sign. I wondered if Dallas was responding to this and figured he probably was. Something like this got everybody out and responding. I did something I hadn't done in years; I said a quick prayer for his safety.\n\nMy headset warbled, and I glanced at the caller ID. It was the TV news desk for the channel we were watching.\n\n\"Whitney Maritime,\" I responded. I was flipping to my notes in my emergency binder, where I had my pre-planned responses to the media. \"Yes sir, thank you for your inquiry. As you can see from your live feed, which we are monitoring here in our office by the way, Whitney Maritime has responded with all available vessels.\"\n\nThe reporter prattled on for a minute. \"Yes, Whitney Maritime is deeply concerned with the life and safety of all on the water, and as soon as the emergency unfolded, we activated our emergency plan. Many of us here in the office came in from our day off to assist.\" I looked up at the board and saw seven orange dots around the big red one on the board. I had an idea that popped into my head. The idea made me nervous, but I thought it was the right thing to do. \"Even our CEO and her husband are responding. They're in their personal boat and were in the area. We show them on our situation board, in addition to our tugs, as being on site and assisting as directed by the Coast Guard.\"\n\nThe reporter was a bit surprised at this. I responded to his follow up question, \"Yes, Whitney Maritime is a family business. We value all our employees and treat everyone as if they were part of our personal family. I know firsthand that this is important to the leadership of the company. I'm sure they're caring for everyone they encounter and treating them as if they were their own family member.\"\n\nFlipping the page on my notes, I gathered my thoughts as the next question came in. \"Yes, we will be assisting until released by the Coast Guard and the cruise ship is safely back at a dock for repairs. We have a long history with this cruise line, and they have been a great business partner with us over the years. We are saddened by this incident and are hopeful for a safe outcome for all involved.\"\n\nThe head of dispatch caught my eye, and I rolled my eyes at her as the reporter continued. \"Yes, thank you for your inquiries. Please feel free to reach out to us if you have further questions.\" I hung up the line.\n\nMoments later, another call came in from another station. I ran through the same questions and answers again with them. As I did so, I could see the local newspaper and the local NPR affiliate trying to contact me as well. I ended up spending the next hour on the phone with various news outlets. Slumping into my chair, I hung up at the end of the last call.\n\n\"Good job, Jennifer.\" I looked up and saw Silas and Ruben both in the back of the room. When did they slip in?\n\n\"Thanks guys. Next time, I'm just going to call a press conference and answer all these at once.\"\n\n\"You can try, but these reporters are just going to try to get a personal interview anyhow. They all want some type of scoop.\"",
        "As it was getting late, Ruben left and came back a minute later with a stack of pizzas and set them out on a table just outside the dispatch office. The sausage with mushrooms, olives, and feta cheese hit the spot. We listened in on the radio chatter as we were in a lull.\n\n\"Sounds like none of the passengers were hurt and are all safe. Most of the crew are fine. A number of engineers have been flown to Harborview Medical Center for treatment. A couple had some bad burns, although one is reported to be severely burned,\" one of the dispatchers said.\n\nEventually things got under control and the Coast Guard released all but two of our tugs, with those two charged with helping the stricken cruise ship back to port for repairs. The passengers were put on a couple of ferry boats and taken back to Seattle to try to rescue what they could of their vacations.\n\nRuben offered to drive me home, and since it was about time for Little Miss to go to bed, I accepted his offer so Whit could put her down. Besides, Madison likes it when Whitney tucks her in, she always caves in and reads an extra story at bedtime. She tried once to claim the \"what happens at Miss Whitney's\" line, but I cut her off on that one since it's our place now as well. Now Whitney just claims girlfriend privilege when she gets the extra book.\n\nAfter kicking my shoes off and checking in on a tucked in little girl, who wanted yet another story but was told no, I put my feet up on the sofa. Not the relaxing day I had in mind, but Whit put a glass of wine in my hands and the stress began to melt away. That is, until the doorbell rang.\n\n\"Stay there, I'll see who it is.\" Whitney was up before I could even sit up. She scurried down to the ground floor, and I could hear her talking to someone. \"Jennifer, you'd better come here.\"\n\nRubbing my temple with my fingers quickly to prepare myself, I headed to the stairs when I heard Whitney come up with two men. They were both in uniform, one in a Coast Guard duty uniform and the other I didn't recognize but was clearly military. One thought went through my mind; this can't be good.\n\n\"Ms. DeLuca?\" I figured him out quick, a big US Navy over his left breast pocket and a cross on his lapel gave him away.\n\n\"Yes?\" I nodded.\n\n\"I'm Chaplin Harrison, I need to inform you that your daughter's father was critically wounded in the cruise ship fire today. He was rescuing several crew members from the engine room and was badly burned. He is currently at Harborview in their level one trauma center, but it's going to be a tough 24 to 48 hours for him.\" The look on the Chaplin's face told me he was trying to give me hope, but I surmised there wasn't much to give. I collapsed back on the couch and buried my face in my hands. My mind raced through a thousand scenarios in a matter of seconds, all of them bad.\n\nWhit sat next to me and began to rub my back.\n\n\"Is he going to be alright? Is he going to make it?\"\n\n\"We don't know, it's hard to say at this point,\" he replied.\n\n\"If we went to the hospital, would my daughter or I be able to see him?\"\n\n\"I don't know at the moment. Last we knew he was in surgery. But if you want to have a chance to see him, you'd better go now. But it might not be pretty. He suffered third and fourth degree burns. He will probably be more bandages than anything.\"\n\nWhitney put her arms around me and held me. I wanted to cry, more out of anguish for what Madison might go through. My mind was racing to the worst possible outcome. But I stifled it for the moment and steeled myself.\n\n\"Let me go get Madison, and we will talk about it. Can I have a few?\"\n\n\"Sure.\" I went up the stairs and opened the door. I saw a head lift from her pillow and look at me.\n\n\"Is everything okay mommy? I heard men's voices.\"\n\n\"Madison, your daddy was in an accident trying to save people's lives on the cruise ship today.\" I spent the next few minutes trying to explain things in a way that was honest, but within the ability of a young mind to understand.\n\n\"Can I go see him? I can help him feel better. Just like you do when I get hurt.\"\n\nI still wasn't sure if that was the right thing to do. I didn't want to scar her. But not letting her possibly say goodbye could also scar her. There was no good solution to this.\n\n\"If that is what you want, we can try. You need to understand, they might not let you in. But we will go and see what we can do, okay?\" I helped her get dressed, and with Nani under her arms, we headed to the hospital.\n\nChaplin Harrison and Chief Petty Officer Murkowski met us in the ER lobby and led us to the Intensive Care Unit. A doctor greeted us and explained that they had stabilized him for now, but his lungs were severely damaged by the heat and smoke.\n\n\"Whit, you mind staying here with Madi?\"\n\n\"Sure. Come on, munchkin, let's go find some chairs.\"\n\nI went into the room and if they hadn't told me it was Dallas, I would not have recognized him. Much of his face was bandaged or had tubes sticking out of it. One of the few parts of his body that wasn't covered by bandages was his right hand.\n\nI reached out and stroked his unbandaged hand with my finger. I let it slip into his hand.\n\n\"Hi old friend. We're here for you.\"\n\nA tear began to leak from the corner of my eye. I stood there, not knowing what to do next, when I felt Dallas squeeze my finger. And then he let go.\n\nIt was at this point several alarms started to go off on some of the monitoring equipment connected to him. Doctors and nurses began pouring into the room. One of them escorted me out to a waiting room. \"His blood oxygen is dropping very low, even though we have him on pure oxygen, his body is not absorbing it.\"\n\nWhitney and Madison were waiting there for me. My phone dinged and there was a text from Dallas' parents, saying they would be there in about an hour and a half.\n\n\"Is Daddy going to be okay?\"\n\n\"I don't know, pumpkin. I don't know.\"\n\nI collapsed onto a chair and, with Madison in my arms, cried.\n\nTo be continued...\n\n<p align=\"center\">_|/_</p>\n\n\n\nAuthor's note: Thank you for sticking around to the end of this chapter. I hope you enjoyed it. If so, please consider providing some feedback. Votes, comments, or PMs are all welcome. I have one more chapter of this story in the works, so follow me to be notified when the last part is published. \n\nThis chapter is dedicated to all the service members of the United States Coast Guard. You don't get as much credit as you deserve. Semper Paratus.\n\nA special thanks goes to my friends, beta readers and editing crew, AwkwardMD, Bramblethorn, BrokenSpokes, and Rileyworks. They make me look like a competent storyteller, thank you.\n\nIf you are looking for something more to read, check out the authors I follow. Maybe you might find something there that you like.\n\nGrandma Olinski's Cucumber Salad (a Miss Madison favorite)\n\n1/2 cup neutral salad oil\n\n1/4 cup cider vinegar\n\n1 teaspoon sugar\n\n1 tablespoon fresh dill (or 2 teaspoon dried)\n\n1/2 teaspoon pickling salt\n\n2 cloves peeled garlic, smashed\n\nPepper to taste\n\nSlice 2 peeled English cucumbers thin (preferably on a mandolin)\n\nMix dressing ingredients then add sliced cucumber. Mix. Allow the salad to rest overnight in the refrigerator. Remove smashed garlic if desired before serving.\n\nFor a creamy version, substitute sour cream for the salad oil and reduce the vinegar to one tablespoon. Jenn loves to put leftover creamy cucumber salad on her sandwiches. Yummy."
    ],
    "authorname": "GinnyPPC",
    "tags": [
        "lesbian romance",
        "single mom",
        "romance",
        "coast guard",
        "rescue swimmer",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/catering-girl-ch-06"
}