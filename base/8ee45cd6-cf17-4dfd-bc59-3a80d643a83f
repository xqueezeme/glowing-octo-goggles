{
    "title": "Blow Job Tips for the Insecure",
    "pages": [
        "First of all, let me establish the most important aspect of giving a blow job -- confidence! A lot of women are self-conscious when it comes to giving head. While I can certainly understand being unsure of yourself, that's something you have to get over quickly in order to improve. Even if you're not the world's greatest, if he's getting a blowjob, he's pretty much already on Cloud 9. I'm not saying there's no wrong way to give head, because there is. I'm just saying that if his dick is in your mouth, for him, things are already off to a great start. \n\nIf you still feel unsure, tell your partner that you're nervous. Most guys will be not only understanding but turned on by what they'll see as your \"innocence.\" They will be more than happy to guide you to what they like. \n\nAlso important is something that many people overlook -- position. Both partners have to be comfortable, which admittedly can be difficult at times. Also, the right position can give your man the perfect view of your handiwork. Here are a few positions that work for us: \n\n1. He kneels on the bed or sits cross-legged, leaning back so I have plenty of access. I lay propped up on my side on the bed. This puts me in the perfect position in case he wants to finger me.\n\n2. He sits on a low couch or chair and I sit on the floor, leaning into his legs to support myself. \n\n3. He stands up and I kneel on a pillow. \n\n4. He lays down (with his head propped with a pillow) and I lay between his legs with my arms propped up. \n\nA few more somewhat silly things before you begin: Taking frequent breaks is not only a necessity for you (unless you enjoy lockjaw and chapped lips), it can also allow him to last longer and build up a more explosive orgasm. Don't feel bad if you need to stop -- just don't do it abruptly. Second, you may want to have what to me are a few sex \"essentials\" on hand: water/drink, lip balm, lube, and of course, a hair band to hold hair away from your face. \n\nI like to start off by gently holding his cock in my hand (hard or not) and slowing kissing and licking just the head. The point is to establish to him that you love his cock would love nothing more than to give him a blowjob. At this point, you can also stroke him very, very gently. The lightest touch can feel really good as he's anticipating things getting more intense. \n\nBefore he starts to get too hard, I also like to put his entire cock in my mouth. My boyfriend's cock is quite large so this is often the only way he'll feel the whole thing in my mouth! Even if you can \"deep throat\" your boyfriend, he may still enjoy the sensation of having his cock in your mouth when it's soft. \n\nAs he gets harder, I stroke him with a little more pressure and continue licking, but this time going all the way up and down the shaft. The wetter this is, the better, so don't be afraid to slobber. Sounds gross, but it's true. Once he's gotten pretty hard, I move on to literally sucking his cock. Rather than just moving your mouth up and down his shaft, actually sucking on it (very gently at first) feels more intense for him. Another important tip is to try not to let his penis out of your mouth completely. As you pull him back out of your mouth, leave the head of his penis in and continue stroking and sucking until you go back down. Again, don't be too self-conscious. Sucking, slurping noises are a definite possibility, and trust me, most guys eat it up. Along those lines, also don't be afraid to do anything else that comes naturally, such as making noises or touching yourself. It turns guys on to know that sucking on his cock turns you on. \n\nI mentioned earlier that my boyfriend's cock is big. I do deep throat him from time to time, but I have to adjust to it and I can't do much with his cock once it's in there! He generally likes it better when I have less in my mouth but can do more with it. I place my hand over the base of his shaft (the part my mouth isn't covering) and stroke him constantly whatever I'm doing to him with my mouth. So, just remember that you can still give good blowjobs even if you're not a sword swallower. \n\nAs I'm sucking him and stroking him, I continue to make things interesting with my tongue and hands. My tongue flicks the head of his penis as I suck it and swirls around his shaft as I suck up and down. With your hands, you can stroke his penis or do whatever he normally enjoys as far as balls and all that good stuff are concerned. \n\nHere are a few more techniques we both like: \n\n1. The \"melting ice cream\" method -- It's just how it sounds. I think I read it in a women's magazine and it really works! Just pretend like his cock is an ice cream cone and it's a hot summer day. It's melting fast and you've got to eat it all up. Then, just treat his cock exactly the way you would the ice cream. Another option here of course is to actually put whipped cream on his dick and then get every last drop off.\n\n2. The \"confused cock\" method -- I made up the name, do you like it? We discovered this by accident but it drives him crazy. While sucking on his cock in one direction, I will gently stroke his cock the other direction, then switch. So, for example, I'll suck back gently on his cock while stroking it downwards towards his stomach, then switch, moving my mouth down towards his stomach and pulling my hand up on his cock toward my mouth. \n\n3. \"Vacuum\" -- You got it - extreme sucking. My boyfriend likes to let me suck as hard as I can while he gently pulls back. Not every guy is this into having his cock pulled so don't do this with no warning. \n\nWhen your partner is ready to come, hopefully he will let you know (or you'll be able to tell by his body language and sounds.) Girls have different feelings about cum. Some love it, some hate it, and some are indifferent. In my experience, it is worth it to me to swallow. For most guys it is an extreme turn-on; the perfect way to end the blow job. It only lasts a few seconds, so if the taste is unpleasant, you can just tough it out and then discreetly drink some water. However, don't force yourself to do anything that makes you uncomfortable. If you still want to provide a mega turn-on for your partner but don't want to swallow, there's a slightly less conventional option. As your partner is coming, take him out of your mouth and stroke him quickly (maintaining the same speed of your blowjob) and let him cum over your chest and stomach. Some people find this odd but to others it's a big turn-on. If you do want to do it, you might want to discuss it with your partner first just so he's not confused when the time comes. \n\nOf course, this is what my partner and I enjoy and not everyone else will, but hopefully these ideas will help you break out of a blowjob rut or become more confident about giving head. Above all, get a partner who makes you feel confident and secure, and you'll feel brave enough to try anything that turns them on. "
    ],
    "authorname": "honey_bee13",
    "tags": [
        "blow job",
        "head",
        "blow job tips",
        "blow job techniques",
        "oral sex tips",
        "vacuum",
        "sex advice",
        "relationship advice"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/blow-job-tips-for-the-insecure"
}