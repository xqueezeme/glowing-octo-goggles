{
    "title": "Speech and Debate Pt. 09",
    "pages": [
        "I hope you enjoy this chapter. Sorry it took me longer than usual to post this chapter. I had originally planned this to be ONE long chapter, but it proved too bulky. So now you get TWO chapters at once! Hope you enjoy it. This also means that now there will be a total of at least 14 chapters when the series is completed. Maybe more!. \n\nDISCLAIMER: The following fictional story deals with sex among males. If you are offended by such material, are too young, or reside in an area where it is not allowed, depart. Though not observed in this story, care enough about yourself and humankind to practice safe sex.\n\nThe author retains all rights. No reproductions or links to other sites are allowed without the author's consent.\n\n*****\n\nSpectator Sports\n\nBy D. A. Mackey\n\nMy recently begun tenure as the Varsity Baseball Team Manager had begun to normalize. I found myself increasingly at ease amongst my athletically gifted fellow students, and was even able to tear my eyes from their assorted dicks and asses as they showered. It only took me three days of conscious training before I was able to pass the showers WITHOUT popping a boner. I was proud of that fact as an 18 year old gay man. I challenge any one of that age and sexual proclivities to do better. \n\nWednesday arrived and I faced my first real challenge: I had to miss a day of school for an away game.\n\nDon't judge me too harshly for this. Remember that I was a child raised by a teacher and with an above average IQ and intelligence. I had panic attacks over A minuses. The B+ in Spanish was abhorrent. My mother had framed and kept every single one of my \"Perfect Attendance\" certificates from Kindergarten through 11th Grade. I had cried so hard one morning in the 5th grade that my mother had taken me to school with a hazmat face mask on despite a 103 degree fever and the inability to keep anything heavier than water in my stomach. \n\nI was THAT devoted.\n\nSo missing a day of school for a SPORTS EVENT was like asking DaVinci to paint over the Mona Lisa and draw a smiley face. My heart was racing out of my chest.\n\nBut I had the permission slip in hand. My mother had literally paced the kitchen floor and wrung her hands for a good twenty minutes, muttering to herself about \"teenaged boys,\" and \"part of growing up,\" \"empty nest\" etc. She'd finally signed the thing and handed it back. I swear there were tears in her eyes when she did. Which only added to my guilt. Disappointing Mamma is the worst thing in the world. \n\nThus, I found myself in the Senior parking lot at my usual time, dressed as I usually would be for any school day, the first bell just moments from ringing. My legs physically ached to run towards my first class so I wouldn't be late. But the large white vans I'd spent the past 30 minutes packing with all the necessary gear and luggage beckoned. \n\n\"Damn, Nerd,\" Ian said behind me, his massive hand crushing my shoulder in his grip and making me wince. \"You'd think you'd never missed a day of school before.\"\n\n\"I haven't, you big ass mountain.\" I tried in vain to use my weak fingers to pry just one of his digits from my shoulder. \n\n\"Sorry.\" \n\nHe released me. I rubbed the sore spot. I was getting bigger and more muscular since Daniel had started working out with me, but Ian was still light years ahead of me. He may even have been a few light years ahead of Daniel.\n\n\"Sometimes I forget my strength.\"\n\n\"Sure you do,\" I chided. \"That's why I catch you flexing every muscle in your body before you head to the diamond?\"\n\nHis booming bass voice chuckled at me. He drew himself up and flexed his massive arms, barely held beneath his green Abercrombie&Fitch t-shirt. He struck a classic body building pose.\n\n\"Don't tell me you don't like looking, dude.\" He winked at me.\n\n\"Don't flatter yourself, Jock.\" I shot back and looked down at the clipboard in my hands. \n\nThankfully, he dropped the subject and piled into the lead van. I checked off his name and adjusted my suddenly very restrictive collar. A few deep breaths and I was able to control the swelling cock in my jeans as well.\n\nSo sue me. An eighteen year old gay boy turned on by massive muscles. Shock of all shocks. Stop the presses!\n\nThe first bell rang and the rest of the team piled inside the two vans. I was majorly nervous, but I followed suit and did my best to calm my nerves. I slid into the front row of the lead van, Ian's massive bulk in the row just behind me.\n\nDaniel plopped himself down beside me and squeezed in close, his thigh pressed into mine. \n\nIt took everything I had not to react. Outwardly. Inside, the thought of school was banished and I imagined my hands sliding between his slightly spread thighs and gliding up to his package. I wondered what the rest of the team would say if I suddenly decided to fuck it all and take Daniel's uncut cock in my mouth for the entirety of the three and a half hour drive to the away game. \n\nDangerous thoughts.\n\nErection inducing thoughts.\n\nI covered my lap with my clipboard and stared out the window as I got further and further away from the place I was legally obligated to be attending, and closer and closer to a hotel in Fayetteville. \n\nWhen the vans pulled into the Hotel some time later, I was a little taken aback at the level of accommodation to which the Baseball team was apparently accustomed.\n\nIt was a fancy, tall building with a fountain out front and a drive-up covered walk way replete with doorman and bellhops. My teammates took little notice as they grabbed their luggage and headed into the lobby. Coach B handed out the room keys for everyone. I did my best to insert myself into the trash talking and chit-chat that the guys were engaged in as we headed to our rooms, doing my best not to gawk open-mouthed at the elegance of the place.\n\nMy room was at the end of the long hallway on the fifth floor. The rest of the team took up the entire wing of that floor, with Coach B's room being the closest to the central elevator. Daniel's room was right across the hall from me, his door facing my own.\n\nMy room was spacious and could have easily housed four men comfortably on the massive king sized bed. I had never slept on a bed so large. Queen sized was as big as I'd ever gone. The television rivaled the massive one I'd seen in Daniel's house and was certainly far bigger than anything found in my house. The room was all done up in shades of gold and bronze and beige. It still looked like a hotel room in its layout, but just taken up a notch.\n\nI was half expecting a knock at my door and Daniel to come marching in. This was the first time we had been in a hotel together since our first nights in Boston, months ago now. \n\nBut the knock never came.\n\nTruth to tell, I was a little disappointed, but I understood. I had been the one to suggest a cooling down for a bit. I couldn't expect him to make advances as public as coming to my room alone. Not without direct instructions from me to do so. Not after the possible spy.\n\nI dressed in my baseball uniform and made sure I was calm and composed before I headed back to the lobby to meet the rest of the team.\n\nThe game passed in a blur and we won in extra innings. The guys seemed happy enough with that, though Coach B promised a pep talk of epic proportions when we returned home the next afternoon. Apparently, they should have won the game handily by the 5th inning. I still had a lot to learn about the sport. I'd missed that \"teaching opportunity\" as Coach B liked to call it. But I had caught the whole game on film as instructed. \n\nI wouldn't admit as much, but I was actually coming to enjoy the sport. A little. More so, I was enjoying being part of a team for the first time in my life. I'd been a loner for so long that I'd always just assumed that that was how I was built. Turns out, I could rather enjoy the company of others in the right situations.\n\nI was just folding my uniform and returning it to my suitcase when there was a knock at my door. \n\nMy first thought was to clothe myself. \n\nI stood stark naked in my room, my soft cock bumping against my pale thighs. I had picked out an outfit for the rest of the night, but had yet to change into it. I headed to the door to answer it.\n\nIt was only in the last seconds that my senses came back to me. What if it WASN'T Daniel who waited patiently in the hallway? What if it was the Coach? How would it look to answer the door with my flaccid cock flapping in the breeze. I opened the door and did my best to hide my nakedness behind it, sticking my head around to peer into the hallway.\n\n\"Why, hello there stranger,\" Daniel chimed from the hallway. \"Fancy some company?\"\n\nMy hand shot out and grabbed the front of his shirt and yanked him into the room, shutting the door behind me in the process. I pressed my naked back and ass into the cold wood of the door and locked it behind me.\n\n\"I might have to insist that you greet me like this every time from now on, babe,\" Daniel said as he took in my nakedness. \n\nHe looked...hungry.\n\n\"Don't get too used to it, jock boy,\" I said. \"You caught me off guard and in a moment of weakness.\"\n\n\"I make you weak, huh?\" He took a step towards me.\n\n\"Don't push it.\" I said and closed the distance between us. \n\nDaniel's arm reached for my exposed hip and pulled me towards him. My cock pressed into the front of his jeans and my breath caught a bit. My hands rested palms down on his pecs, feeling them rise and fall beneath his plain black t-shirt. Daniel's eyes looked down between us, at the non-existent space between our two bodies. His hands cupped my ass and squeezed gently.\n\n\"Mmmm. That's more like it.\" He kneaded my ass cheeks and I moaned lightly, breathily. \"I've missed you, you know.\"\n\nHis voice was sadder than I expected. My heart melted a bit and I eased into his embrace further.\n\n\"I know. I missed you too,\" I admitted in a low whisper. His fingers gripping my flesh made even that much volume a difficulty.\n\n\"The van ride was hell. You were so close and I couldn't touch you.\" \n\nHis hand traveled to the small of my back, his finger tips walking slowly up my spine. My flesh broke out in goose bumps and I struggled to keep my senses.\n\n\"I wanted to,...oh, god.\" \n\nHis hands were on my shoulder blades, elbows at my side, pressing my chest into his, his head coming to rest on my right shoulder, his fingers digging into my back with his usual strength, now peppered with loss and sadness and a deep sense of want.\n\nHis lips gently pressed into the sensitive skin of my neck, his stubble tickling me, my head falling to the side to give him easier access. I wound my fingers through his dark black hair and urged him on. Higher up my neck he traveled until I felt the sharp bite of his perfect teeth on my earlobe. My cock was already at full mast and pressed between us and I felt his own throb in his jeans, aching to meet mine.\n\nI pulled on his hair and opened up a space between us for a moment, only just long enough to kiss him fully on the mouth, to probe him with my tongue and feel our mutual passions explode on contact, as they always did now. Our tongues danced and fought for position, we stumbled about the room and finally landed with him on top of me, pressing my whole body to the mattress.\n\n\"Stop. Stop for a minute,\" Daniel groaned as my hands searched for the button of his jeans, pressed between us. \n\nHe levered himself up and stood between my legs. My cock pointed straight up, my balls tingling with the need to release.\n\n\"What's wrong?\" I asked, a little hurt. This was the first time Daniel had halted anything we had done. I felt the panic start to rise in my stomach.\n\n\"Nothing. God, nothing. Just look at you!\" \n\nI flushed a little at his compliment. I was getting used to be treated like I was something special, something more than how I saw myself, but I wasn't all the way there just yet.\n\n\"Then what?\"\n\n\"Trust me, I could easily stay in here with you for the rest of the night and do horrible, ungodly, nasty, wonderful things with you and to you.\"\n\n\"So why don't you?\" I teased him a bit and stroked my long hard cock slowly for his benefit. He groaned and rolled his eyes.\n\n\"I want to! But I came over here to invite you to hang out with the guys. Then you answered the door like...well like THAT...and I kinda lost my train of thought.\" \n\nHe seemed genuinely embarrassed at that fact. I thought it was incredibly sweet.\n\n\"You...you want me to hang out with the rest of the team?\" I asked tentatively.\n\n\"Only if you want to,\" Daniel began. \"They actually asked where you were, mentioned they hadn't seen you since the game.\"\n\n\"They asked about ME?\" My mind reeled.\n\n\"Of course. You're a team member now.\" \n\nI had never been included, at least not to my knowledge, in anyone's plans of \"hanging out.\" I had friends of my own, yes, but they were more acquaintances from extra curricular endeavors. I had never expected to be included in any of their personal socializing. I wasn't sure how to react to the new prospect. \n\nDaniel sensed my hesitation. My body must have betrayed me. My dick was rapidly deflating as the possible outcomes ran through my mind, even Daniel's sexual magnetism falling prey to this larger fearscape. \n\n\"I'm...I'm not sure that's a good idea,\" I whispered finally.\n\n\"It's up to you, babe.\" Daniel said as he sat on the end of the bed beside me. \"You don't have to go if you don't want to. But I don't want you to not come because you are afraid or something.\"\n\nAs usual, Daniel was astute in all things David. I stayed silent and mulled over his offer and his accurate grasp of why I didn't want to venture into uncharted waters.\n\n\"It's still weird for me, ya know?\" I said under my breath, half to myself and half for Daniel's benefit, hoping somewhere deep inside that he would ease my fears.\n\nDaniel flopped himself down beside me on the bed, both of our feet hanging off the end, our thighs and backs side by side. He turned his face to gaze at me and I instinctually turned to meet his gaze.\n\n\"I'll protect you, you know. You don't have to worry about anything. I'll be there the whole time. I promise.\"\n\nI closed my eyes and let his words wash over me for a bit. \"I'll protect you.\" I decided that if Daniel was willing to be my protector against his own teammates and friends, then the least I could do was man-up and present myself. \n\nI sighed a deep sigh and resigned myself to the fact that I was about to willingly spend some social time with a bevy of athletes. Again, I was in bizzaro land; but when in Rome, as the old saying goes.\n\n\"Alright,\" I said quietly.\n\n\"You'll come?\"\n\nI nodded. \n\nDaniel clapped his hands in boyish excitement. It was highly out of character for him, but I enjoyed watching a well-muscled hairy man like Daniel enter into a little giddy display of glee. I couldn't help but giggle along with him. He grabbed my hands and pulled me up from the bed.\n\n\"Come on then, get dressed,\" he said, his open palm slapping the bare skin of my ass with a loud smack.\n\n\"If you do that again, I can promise you we won't be leaving this room for hours yet,\" I teased as I rubbed the spot where he'd spanked me. It tingled and spread through my whole body in a slow wave; I began to doubt my decision to leave the room when my body obviously wanted to stay here and play with Daniel.\n\nDaniel tossed me a shirt he found in my suitcase and, my body's yearnings aside, we were soon both dressed, the room locked and left behind us and headed down the hall.\n\nThe rest of the team, or most of them, were gathered in Paul's room, four doors down from my own on the same side of the hallway. Coach B's room was only two doors further down, but no one seemed to pay any mind to his physical nearness. Daniel pushed open the door, held ajar by the flipped hotel lock blocking it from closing all the way and entered before me.\n\nIf you've never entered a room full of straight men as the only openly gay person, I recommend bringing something on which to lean.\n\nI was assaulted first and foremost by the absolute STENCH of body spray. There seemed to be an actual cloud of the stuff that hung around the ceiling, as if the boys had been smoking stogies before I entered and the smoke still ringed the room. I actually gagged it was so strong.\n\n\"Jesus Christ, boys!\" I said, waving my hand in front of my nose dramatically, \"Body spray is nice every now and then, but do you have to BATHE in the stuff?\"\n\nThat comment was met and returned with a masculine roar of \"DAVID!\" followed by laughter and back slapping and shit talking all at the same time. \n\nI tried to keep up with who was saying what to whom and about what, but it was a lost cause. I resigned myself to smiling at the good-natured crew and pushed more fully into the room. \n\nThe ice, it seemed, was well and truly broken. \n\nDaniel's reassuring hand on the small of my back was a source of strength, and unless I missed my guess, a small amount of pride: pride at my apparent ease with his friends and at his friend's ease with me.\n\nI shouldered my armor, my wit and smarts, and waded into the fray. Once more into the breech!\n\nThe ongoing card game I walked into, clouded in a never ending flume of body spray and pheromones, was pushing my arithmetic skills to their absolute limit.\n\nAs a self-proclaimed nerd, I enjoyed the near constant gratification of being the smartest person in any given room. I took pride in the fact, reveled in it a bit. If I couldn't be popular or well liked, at least I was intelligent and well spoken. All of that was reduced to a pile of ashes when I sat down on the edge of Paul's own king-sized bed and was dealt into the next round.\n\nPoker. \n\nOf course. \n\nWhy wouldn't they be playing poker, with its intricate rules and regulations and total reliance on chance and a skill set which I lacked? \n\nMy only solace was in the fact that the game was Strip Poker. Because of my still overwhelming feeling of awe and being out of my depth, I hadn't really noticed the rest of the team when I'd first entered.\n\nPaul sat in one of the two chairs around a small circular utilitarian table. At well over six feet of lanky lean muscle and bone, he was already entirely shirtless. His pink nipples stood out plainly on his narrow chest, erect and pointing out dramatically. He still wore his white socks and a pair of white boxers. As was his way, Paul sat hunched in on himself, his elbows on his knees as he surveyed his card. He always tried to minimize his height and draw himself down to the level of average men.\n\n\"Give me two,\" he said after a protracted silence, tossing his decided discards onto the corner of the bed where the dealer, a fellow Senior named Gordon dominated the space. Gordon handed him his two cards and Paul's face screwed up into a very obvious mask of displeasure. He folded immediately.\n\nI tried my best not to stare, but the task was damned near impossible. Everywhere I turned my gaze, naked man flesh stared back at me. The most difficult to ignore, as usual was Ian.\n\nA God among men, he may have been, but his complete nudity spoke volumes about his abilities at this particular game. \n\nHe stood off to my left, near the wall, looking down on all of his clothed teammates as he shuffled his current hand around. His abs pushed forward and rolled gently into his well defined adonis plate. His shaved cock was still limp, but every now and then he would reach down, distracted in thought and strategy, and plump his cock and balls with one hand. \n\nDaniel caught my eyes widening when I noticed it the first time. I blushed scarlet when he winked at me and nodded his head in Ian's direction with a sultry lick of his lips.\n\n\"Man, fuck this. I'm bored already,\" Ian bellowed as he tossed his five cards towards Gordon, throwing his massive back muscles into the wall and leaning against it casually. Well, as casually as one can when one is also completely naked and built to shame a marble statue, even at 18. ",
        "The other guys began to make sounds of approval, low grumblings that were too tentative to make a choice but showing their willingness to follow the group. These grunts and grumbles resounded for a bit as I stared wide-eyed at them all. I noticed that those who grumbled the loudest and looked around at their teammates with the most questioning eyes were also those who wore the least amount of clothing.\n\nSour grapes and sore losers, I thought. And why is no one actually doing anything to take control of the situation? Why aren't they changing tactics and activities if they are all apparently so bored. \n\nIt was like watching animals in a zoo: I could only hypothesize as to what they were thinking, if anything.\n\n\"Can I put something more interesting on the TV?\" came a lone true voice, rising up above the wordless grunts of his companions.\n\nIt was Daniel. I don't know why I expected it to be anyone else.\n\nThe grumbles and grunts got louder and Daniel reached for the remote and flipped on the television.\n\nApparently, that was the Jock vocalization for yes. I made a mental note of it.\n\nAll eyes turned towards the TV. Long lanky limbs and muscled torsos began to relax and find comfortable positions, the card game already fading to a distant memory. My own spine was rod straight and I sat with my eyes fixed firmly on the screen. As ruler of the remote, Alpha Male, Daniel moved to the end of the bed and sat beside me.\n\nHe was a good foot away from me, our hips nowhere close to touching on the massive mattress. But he spread his legs so wide that his left knee touched my own. I felt the shock of the contact rocket up my spine and loosen my posture without conscious effort. He kept his knees pressed into mine as I placed my palms on the bed behind me and leaned back against my straight arms. I ached to scoot closer to him, or even to just gaze at him. I contented myself with a quick reflection of his features in the TV screen whenever the light was just right.\n\n\"Dude, go up to the 200's,\" Gordon asked from his corner of the bed. His voice always took me aback. He was a transplant from Massachusetts so he lacked the accustomed Southern drawl. In addition to that uniqueness, he also had the distinct disadvantage of ALWAYS sounding stoned out of his gourd. Even when he delivered well thought out answers in class, correct answers even, he came off sounding like something from a bad Bill and Ted impression.\n\n\"You gonna pay for that?\" Daniel asked. \n\n\"Fuck yeah, I'll pay for it. Got the Platinum Amex for the night,\" Gordon answered.\n\nI chalked the exchange up to typical straight male banter and resigned myself to never really understanding it. Daniel glanced at the remote and pressed the necessary buttons...and it was all suddenly abundantly clear.\n\nA very blonde woman with very large breasts that looked to be painfully inflated to their maximum capacity was being fucked from behind by a rather out of shape man who leaked sweat from every pore, including but certainly not limited to those on his nearly bald head. The noises she was making indicated that she was enjoying the treatment, though how that is possible is beyond me. I'd never heard such sounds escape a human being before!\n\nSomeone get her an oxygen mask, this woman is OBVIOUSLY hyperventilating! Why is no one doing anything!? Help the poor thing!\n\n\"Oh, SHIT yeah! That's more like it,\" Gordon mumbled, only half intelligibly. \n\nI gazed around the room and saw the glassy-eyed stares of my classmates. Paul's mouth hung slightly ajar, making him appear more than a little slow. Ian still leaned against the wall, his eyes also vacant to me but his right hand now groped and tugged constantly on his expanding cock. The veins in his plate and around his shaft were becoming visible. \n\nEverywhere I turned, clouded blue eyes, vacant green eyes, hazy brown eyes, all stared towards the TV. It was as if I ceased to exist. I was used to being ignored, but not ever in such close quarters. Finally, I turned to look at Daniel...\n\nAnd found his soft brown and gold eyes staring right at me. He smiled his half smile at my confusion and placed one hand on my knees, squeezing gently. I wasn't quite sure what to make of it. Was he making sure I was okay? Telling me I'd passed some kind of milestone? Reassuring me? Scolding me? Seducing me?\n\n\"Mmmm, fuck,\" Ian groaned from behind me. \n\nI turned and saw that his head was pressed back to the wall he leaned on, his eyes closed. One hand was stroking his not too shabby cock, now slick with his own clear wetness, the other crossed over his chest as he played with the massive mounds of muscle piled there, flicking lightly at his nipple.\n\nDid he not realize that there were other people still in the room?! What was he doing!?\n\nDaniel squeezed my knee again and his hand traveled a few inches up my thigh.\n\n\"Well if he's doing it...\" Gordon chirped from beside me. In a flash he was on his feet and his hands were undoing his belt buckle, pushing his jeans and blue plaid boxers to the floor. I was suddenly staring directly at his pale and slightly freckled ass as he clenched his muscles. When he turned a bit to re-seat himself, I got a dead on view of his unkempt chestnut brown bush and floppy cock. He had a dark freckle that stood out on the pinkish paleness of his shaft like a beauty mark.\n\nMy cock started to swell for real. I didn't know wether to run from the room, hide my growing cock, or let Daniel's hand continue it's slow progression up my thigh towards my now aching prick.\n\n\"Are you sure you're cool with this,\" Daniel asked me, his hand giving my thigh one final squeeze before he removed it back to his lap.\n\n\"Huh?\" I asked, still stunned at the situation I'd found myself in. \"Yeah, yeah, I'm fine.\"\n\n\"Shit, dude. I didn't even think about that,\" Gordon started, his fingers now firmly around his semi-hard cock. Even as he spoke and made his concern for me known, his hormones were in full control of his cock and right hand. \n\n\"Do you want us to turn it off? If it bothers you or something...\"\n\nWhile the porn itself was laughable to me, the thought of the guys turning it off because they feared it might make ME uncomfortable was unfathomable. And something I had to put a stop to immediately. Whatever tenuous truce had been reached between this pride of athletes and a lone nerd was not strong enough to withstand my putting an end to their pleasure games.\n\n\"No!\" I said, a little more loudly than I'd intended. In my rising panic I looked around the room to gauge their response. Every eye was glued on me now, though a few still flicked back to the poor woman dying from lack of oxygen on the screen as her floatation devices were jiggled around to the point of imminent popping. Though I tried to stare into their eyes, the sheer range of exposed and hard cocks was staggering. Even those of the guys who still remained fully clothed were sporting obvious tents in the fronts of their trousers. \n\nMy hole twitched and my mouth watered as I struggled with my baser instincts.\n\n\"Don't worry about me, guys,\" I said quieter than I intended. \"Right now, you could watch just about anything and I couldn't care less. My porn is live action at the moment. I win no matter what you watch.\"\n\nBefore the words had left my mouth, I wished I'd had them back. Silence greeted me for a second that seemed to stretch on for months. It was poor Tall Paul who rescued me.\n\n\"Shit!\" he laughed, finally leaning back in his chair, his long torso making an S curve. His boxers tented visibly and I could see a small wet spot near the button fly. I knew from the showers that his pole matched his body, long and thin just like him. \"Oh fuck dude, that's hilarious!\"\n\nThe rest of the guys followed suit in short order. While I would never truly understand the hive mind communication of my straight friends, I took comfort when it seemed to work in my favor.\n\nJust like that, the mood in the room eased back to one of silent camaraderie as more and more zippers were opened and cocks found their places in their owner's hands. Daniel squeezed my thigh again quickly and I glanced at him. He favored me with a smile and then ruffled my hair. It should have been insulting, but at the time, I blushed and silently thanked him for his support and genuine joy at my acceptance.\n\nHis gaze traveled to my crotch and took in my arousal. When he looked back, that familiar hunger was in his eyes and I wondered how long he could hold it at bay, and how long I could before my own urges became too pressing to avoid any longer.\n\nIt had been months since I hadn't been the one to forcibly remove Daniel's clothing from his body when we were together. My fingers ached to do the job for him as he undid the button on his pants and pushed them to his thighs.\n\nHis uncut cock bounced free, plopping onto his stomach and leaving a small wet spot on his t-shirt. I had to sit on my hand to keep from grabbing it right there. Force of habit. \n\nI kept my hands firmly under my ass as I watched him slowly jerk himself. His eyes remained closed and he didn't seem to be paying attention to the movie. \n\nI wondered if he was thinking of my mouth sliding down his shaft, resting near his balls. Or remembering what it felt like when his glorious uncut cock was shoved deep inside me, clenched in my muscled hole and coating me with his seed. \n\nI hoped so.\n\nBehind me, beside me, in front of me, to my left and to my right, the wet warm sounds of a crew of guys jerking their cocks flooded in around me. My cock throbbed in my jeans, bounced and pressed against the fabric with each heartbeat, making me physically uncomfortable to match my social discomfort.\n\n\"Take yours out if you want, Nerd.\" Daniel said from my right shoulder. \n\nMy neck snapped around to stare at him with my eyes as wide as tea cups. \n\nI was simply planning on waiting this out until it came to a natural conclusion. That seemed safest, right? Whatever that natural conclusion was, I didn't know. Now Daniel's deep brown eyes stared at me, alight with wickedness at his suggestion and its possible implications.\n\n\"I don't have to...,\" I whispered, obviously uncomfortable. Daniel's eyes grew ever more mischievous. I wanted to pounce on him right there, but thought better of it.\n\n\"Go head,\" Ian said from the wall. When I looked, his eyes were locked on me, but his gentle strokes, the twisting and pulling on his shaft and nipples never slowed. \n\n\"Come on, it's fine,\" Paul offered from his chair. His long thin cock pointed up through the fly of his boxers now, his larger head clearly defined and growing to an almost angry shade of red.\n\nI turned back to Daniel and was met with only his eager eyes and a smile that only I truly knew the meaning of.\n\nI stood up and found that my legs where much stronger than I expected they might be in this uncommon situation. I fumbled with the button of my jeans for only a moment before it gave way and I pushed my jeans to my ankles with a quick movement. \n\nMy cock swung out in front of me, fully hard and bouncing before me. \n\nI had never been exposed in front of so many eyes before, not so openly. Even in the middle school showers, I had hidden myself in the corner shower and faced the wall as much as humanly possible. Now, my thick pole gleamed in the open air for all to see.\n\n\"Jesus Christ!\" Gordon grunted from beside me. \n\nMy initial response was to cover myself as best I could, but I resisted the urge and sat back on the bed, leaning back on my elbows, my cock pointing towards my face and leaking a clear drop of precum onto my shirt, my balls pooling between my opened thighs.\n\n\"No fucking way,\" Ian said, his voice growing nearer. \n\nHe came to stand between me and the TV screen his hands finally leaving his nipple and cock and coming to rest on his hips. His rigid cock pulsed before me.\n\nI'm a gay man. My cock jumped when I saw him, all muscle and sinew, his hairless dick just inches from me. \n\nMy hand came forward of its own accord. At first, I was scared I would find it wrapped around Ian's prick, but luckily I felt the familiar warmth as I grabbed my own member instead.\n\nThank you, God!\n\nI tugged slowly towards my chest, squeezing out a drop of precum as I did.\n\n\"I've never seen one so big before,\" Ian commented in a daze. He glanced at Daniel. \n\n\"Not unless it's in porn,\" Paul squeaked, his voice cracking a bit. His fingers were gripped tightly around his thin shaft and he worked himself up and down at a decent pace, his thick cock head rim stopping his hand on the upstroke, his low hanging balls bouncing on the downward. \n\n\"Jesus Christ,\" Gordon repeated, apparently too stunned to come up with something new to add to the conversation. \n\nI rubbed my thumb across my slit and worked my precum into my cock head, helping to lube it up a bit. I turned my head to stare towards Daniel and found that his eyes were locked on my cock and his mouth hung open, the pink tip of his tongue just peeking from between his white teeth. I watched the muscles in his shoulder and chest expand and contract as he jerked his own prick even faster than Paul. If he wasn't careful he was going to cum soon.\n\nBut watching \"My Daniel\" as he looked at my dick spurred me forward. I closed my eyes and thought about the feel of his mouth on my cock in the front seat of his Jeep. I pictured his full lips as they engulfed me, resting on my pubes, his eyes starring up my abs and chest, seeking proof of his abilities. I could just feel his tight ass hole as it opened around my shaft and squeezed me inside him, just make out his eyes fluttering closed as another inch of my thick shaft split him open and filled him. Whenever my imagination and memory failed me, I just had to open my eyes and there was the real deal, watching me, his eyes doing what his hands, mouth, and ass could not. \n\nI was on fire with the newness of it. In my brain I was fucking him, buried inside of him. I could FEEL it in my body. Though no one touched me, no one other than my own hand, I felt like everyone was watching me as I made love to Daniel, that everyone finally could see what I saw, feel for him what I felt, and maybe know the real me a little better in the process. The fact that all of this was in my head just made it all the more alluring. \n\nIan broke my fantasy.\n\n\"Dude, I don't mean this to sound gay or anything, not that there's anything wrong with that,\" he started, his big open eyes seeking absolution from my diminutive little body, \"but, dude...can I touch it?\"\n\nDaniel stopped jerking his dick. His hand was motionless about halfway down a thrust. He stared at Ian with a look of open fury painted on his features. While I was all about having two muscled men come to blows over little ole' me, (who wouldn't be?) now was not the time.\n\nI cleared my throat, hoping it would get Daniel's attention. Thankfully it did. Everyone was looking at me now. Again. It was my turn to be the animal in the zoo. If I said no, even if it was because I didn't want to upset Daniel, it could ruin the bonding moment I was just coming to enjoy. So I looked directly at Daniel, held his gaze in mine and softened my expression as much as I could. \n\nI nodded.\n\nIan's hands were rough, much rougher than Daniel's or my own, and there was an inherent strength to his grip that was both welcomed and novel. \n\n\"Fuck, I can barely get my fingers around it!\" he exclaimed, a bit too joyfully for my mind to characterize him as entirely straight from that point on.\n\nHe jerked me slowly, my body reacting on impulse, shuddering slightly when his grip twisted and he pressed his thick thumb into the sensitive skin under my cock head. I leaked another stream of precum and Ian immediately used it to further lube me up.\n\n\"Dude, girls would KILL to get at this,\" Ian said, his eyes still glued on my cock in his hand. \"It's harder than a fuckin' rock.\" \n\nHe slapped my cock into his open palm a few times, the wet slapping noises and jolt of pressure making me moan a bit. My eyes fluttered and Daniel's face hazed a bit in front of me. Ian's bulk was leaning over me, just a few inches from my lounging torso. I watched his arms flex as he worked me over and over, his eyes taking on a gleam of that hunger I loved so much when I saw it in Daniel. His abs were outlined clearly before me, and his shaved cock still arched in front of him, even bent over as he was.\n\nWhen his manipulations had pushed me to a new level of pleasure, I felt my arm coming forward and in an instant, my fingers were wrapped tightly around Ian's slick cock. \n\nHis whole body convulsed in front of me and his grip tightened on my cock till it was almost painful. His eyes closed and his mouth hung open, his breath caught in his massive chest.\n\nI must admit, it was gratifying that my mere touch could reduce someone so obviously strong and huge to such a state. I eased a bit and twisted my grip on his cock, using my favorite underhand motion. \n\n\"I...oh, fuck...that's intense...,\" Ian mumbled. \n\nTo his credit, he didn't stop his jerking on my tool. In fact, he picked up the speed. I matched his pace. The rest of the room stared in awe, though I only noticed them peripherally. My attention was split between the new cock I held in my hand and the beautiful boy who sat beside me.\n\nI looked to Daniel as I jerked Ian's dick and hoped I wouldn't find anger, hurt, or betrayal there. \n\nHis eyes seemed distant at first, as if he was still processing things in the back of his mind. But as I watched, as I jerked Ian closer and closer to release, as my own cock swelled to my full hardness and maximum length, the dancing light returned to their brown pools. \n\nWhen he licked his lips and winked at me, I knew I was in the clear.\n\nI wasn't sure how far I could or should push this new limit I'd just set with Daniel. Ian did nothing to help the situation. \n\nBefore long, as I worked him faster and faster in my grip, he rose from his bending position and drew up to his full height, pushing his hips and twitching prick towards my hand. In my haste to please him, I had pushed him to a limit where he was unable to maintain any ability to return the favor. I had to sit up straight to accommodate his new position. He may have given up trying to get me off, but I wasn't finished quite yet.\n\n\"Fuck me, dude...sign me up!\" Ian moaned again to a round of half hearted chuckles. The sounds of my teammates returning their grips to their own cocks got louder again, the porn on the TV forgotten in favor of the live and in color hand job just inches away. \n\nSurvival of the fittest, you poor blonde hyperventilation victim.\n\nSuddenly, I felt a hand on the small of my back, pressing ever so gently into me. The fingers dug in a bit and I understood. I didn't need to look to Daniel to know that it came from him. And I didn't need to ask him to catch his drift.\n\nI pulled on Ian's cock in my grasp. It was average length and looked smaller on his massive frame, but it was still a handy tool to maneuver the large man where I needed him to be. I pulled him closer and spread my legs apart so that he came to stand between them.\n\nI didn't ask his permission.\n\nI didn't think. \n\nI opened my mouth and dove down onto his cock in a single gulp. His cock entered my throat with ease, less of a task than with Daniel, and my tongue flew around his shaft and flicked at his slit.\n\nIf his fingers had seemed strong when they grabbed my mast, they were iron and steel when he grabbed at my blonde hair and shoved his cock as far as it would go down my throat with a bellow like a beast. \n\n\"Oh fuck!\" one of the guys moaned. I wasn't sure who it was. Hell, I wasn't even all that certain WHERE I was, considering all I could see was the smooth sun-kissed skin of Ian as his cock bounced in my throat, just as rigid inside me as the rest of his body appeared.",
        "\"That is hot as fuck. Dude, what's it feel like?\"\n\nSince my mouth was currently occupied with Jock Cock, I made the assumption that the voice was not speaking to me. For my part, it felt great to have his cock so far down my gullet, to feel his abs contract and expand against my nose, the warm heat of his smooth skin and the faint oder of suntan lotion still lingering on him.\n\n\"Dude, no girl has ever done it like that...ahhh...shit, yes.\"\n\nI decided to show Ian how truly unnecessary a girl was. Well, not entirely, but you catch my meaning.\n\nMy arms came forward to grab at his ass cheeks. I had never felt something so hard beneath my palms! Daniel had a gorgeous ass, but even his muscled-bubble butt had a little bounce to it. Grabbing on to Ian was like gabbing on to two perfectly smooth boulders. He clenched his muscles beneath my touch and I bobbed contentedly on his prick in response. I tasted the salty sweetness of his precum as he started to leak into my mouth. I let it linger on my tongue, waiting to swallow until I'd earned my reward in truth.\n\nI used my feeble grip on his ass to encourage him to thrust. I opened my throat and readied myself. I gazed up at him, over the mounds of his abs and the massive pecs. I could just make out his lust filled eyes over all his bulk. I nodded as best I could with his cock filling me.\n\nHe pulled his dick back a little from my mouth and then shoved it back in without warning. I was ready for it, but I gratified is masculine dominance with a whimper. All for his benefit, I assure you...\n\nAs I readied myself for his next assault, my hands found his chest muscles and I squeezed hard, my fingers raking small red lines in his flesh. He growled at me and shoved himself back in, my lips slamming into his pelvis. His growls grew, coming from deep in his chest, the other spectators forgotten for the time being. \n\nAt least to Ian. \n\nTo the spectators themselves, the scene proved too much of an attention grabber to ignore. As I looked over Ian's mountains of muscles, I could just see the outlines of the rest of the team as they rearranged themselves in a semi circle behind him, gaining a better view of my oral work on their buddy.\n\nI could still sense Daniel beside me. I could feel his fingers on the small of my back, urging me on. \n\nSomewhere, in the back of my mind, I was thankful that he gave his tacit permission with the gesture. Somewhere further back, I marveled at the fact that I NEEDED that permission.\n\nI moaned around Ian's cock and squeezed his chest in my grip. I began to match his thrusting with bobs of my own, pressing myself onto him for all I was worth. I dared not touch my own throbbing cock, though I was vaguely aware of the precum leaking to my pants pooled around my ankles. I imagined what it must be like to have Ian's rock hard cock, as average though it appeared, being pounded into my twitching hole, the full power of his muscles and bulk used to fuck me into complete and total submission. \n\nIt was an...effective...fantasy.\n\nI could feel Ian's release as it approached, and not just from the volume of his grunts and growls, though they were increasing. \n\n\"Shit, David...fuck you're gonna make me blow, dude,\" Ian almost whined, his hands leaving my hair and pressed into his temples, as if he was unsure what to do with them as he climbed towards explosion. He'd come this far, but he hadn't thought through the entire situation to it's intended and logical conclusion.\n\nI pulled off of his cock and removed one hand from my exploration of his massive chest to grab his saliva slicked shaft and hold his cock head to my outstretched tongue. I looked up at him. I didn't say a word, hoping that my eyes would be all that he would need.\n\nI found one erect nipple, standing like Everest on the mountain range that was his torso. I pinched it hard between my thumb and forefinger.\n\n\"Ahhh shit!\"\n\nIan's cock expanded in my grip. I felt the cum travel past my fingers on his shaft and aimed his slit directly into my open and eager mouth. The first shot hit true and coated my tongue with his seed. He wasn't a shooter, not to the level of Daniel or myself, and his next three spurts pooled on my tongue, their whiteness standing in stark contrast to my pink tongue and slightly swollen lips.\n\nI closed my mouth over him and swallowed him down. He was warm and tasted like metal and salt, sea and earth. Where Daniel was a sweet mixture of manliness and spring, Ian's seed was like Ian: hard and masculine in the extreme, full of energy and vitality. I drank him down eagerly and swallowed the load he had given me.\n\nI sucked his twitching cock and laughed to my self while I watched his tree-trunk thighs tremble when my tongue found his super-sensitive head. I licked and kissed his prick clean, always glancing up, making sure he saw my eyes. \n\nI wanted him to always remember WHO had made him weak in the knees, and never forget it had been a man. It wasn't until I had taken everything he had to give me that I remembered we were far from alone in the room.\n\nWhile Ian's taste faded from my mouth and my sex-clouded brain settled back into my skull, the silence of my classmates became daunting. Panic started to bubble up from my stomach and my fight or flight engine readied itself for immediate action.\n\n\"God damn,...\" Tall Paul breathed as he seemingly collapsed back down to his former \"S-curved\" position in the chair. His movement drew the attention from me, and not a moment too soon if you ask me.\n\nGrumbles and growls of approval and agreement began to take shape and the rest of the team became unglued from their standing semi-circle behind Ian's still-heaving body, shuffling back to their original spots without further discussion.\n\n\"That was incredible, little dude,\" Ian said from above me. \"I've never cum like that from head before.\"\n\nI shrugged as if to say, \"what can I tell ya? A dude just KNOWS how to please another dude better than a girl ever could.\"\n\n\"Seriously, guys,\" Ian said to the rest of the assembled men, half-heartedly pulling on his softening cock now and then, working my spit and what was left of his cum into the smooth skin of his shaft, \"we need more gay guys on the team.\"\n\n\"Hey now,\" I said, startling myself with my outburst. I hadn't meant to speak, yet it was my voice that echoed off the walls and drew all eyes back to me. I had just evaded them only a moment before, and here I was inviting their gaze yet again.\n\n\"I'm not gonna be some kind of fuck toy for you guys, okay?\" I stated firmly. \n\nAs the words formed, I began to realize my true position. I was in possession of something that they wanted. Well, maybe not wanted, but were intrigued by. I was the supply. They were the demand. The supply side can almost always dictate the terms of negotiation. I began to feel myself becoming bolder.\n\n\"That was fun, and I'm not saying a repeat is off the table. I'm gay, I'm not an idiot, after all. But don't expect this kind of thing to happen every day. Or every other day. I'm not a whore. If I decide it will happen again, that's fine. But I will not have a line forming outside my door tonight waiting for their turn with the new team sex object. Understand?\"\n\nI was impressed with myself. \n\nMy time with Daniel had given me more of a spine than I ever thought I'd possess. The sea of nodding faces and wide open eyes that reacted to my little spontaneous oration was mollifying. I enjoyed the little step up in social power that I had just claimed. I suddenly began to understand how the popular girls at school could get addicted to the feeling and become totally numb to the pain and suffering of other human beings in their wake. I would have to be careful not to get addicted to the rush.\n\nBut I decided a little more wouldn't hurt.\n\n\"Good Boys,\" I said. \n\nI half expected myself to pull out a doggie treat from my back pocket and give them some positive reinforcement for their good behavior.\n\nYeah. I would have to keep an eye on the megalomania. Later.\n\nWith that new business out of the way, the attention soon returned to the TV, where our poor blonde victim had apparently survived the ten minutes it had taken me to make that mountain of teenaged hormones shoot his load. I marveled at her resilience, if nothing else. She wasn't even sweating and she still gasped for air like it was her job. Which, I guess, it was.\n\nThe wet sounds soon took over again and breathing became heavier. \n\n\"Aren't you gonna...ya know?\" Gordon asked from his retaken corner of the bed to my left, his voice still slurred.\n\n\"Yeah. You can if you wanna.\" \n\nThat was Ian. In the moment, I found it a little sweet that he would spare even that much attention for my own sexual pleasure. I'd figured him for a \"dump and slump\" kinda of man. Surprises, surprises.\n\n\"Umm,...\" \n\nI didn't really know what to do? As I had become accustomed in times of crises, I sought out Daniel. \n\nHe looked at me with an unreadable expression. I had pushed so many boundaries in the past hour, crossed so many barriers that we had never discussed. Would this, too, be one? Was I going to do irreparable harm to my relationship with Daniel? Had I already done it?\n\nNearly imperceptibly, Daniel nodded. At first, I wasn't sure he had even made the gesture at all, but his eyebrows climbed a little as well in a sign of openness.\n\n\"Okay. I guess,\" I said to the assembled room.\n\nTentatively, I grabbed at my cock, now only semi-hard but still dominating the size of the room by a decent measure.\n\n\"Get comfortable,\" Ian said, pointing to the pillows and the bed behind me. \"I mean, only if you want to.\"\n\nI smiled at him and scooted towards the head of the bed, resting my back on the headboard a bit with my legs before me, opened slightly. \n\nI'll reserve comment on how many sets of eyes moved to my shaft as it slid under my palms and paid no attention to the blonde woman in medical distress on the screen. Suffice it to say, I got the better ratings as far as the pornographic options available at the time are concerned.\n\nTheir eyes may have been on me, but I saw only Daniel. He was so close to me, perched at the end of the bed, his torso angled around to so he too could watch me writhe in front of him. \n\nBut I couldn't touch him. \n\nI could just see the head of his uncut cock, the foreskin pulled up tight around it, the skin shining and slick with his precum. I stared into him, looked for that spark and flame that I loved so much. He stared back into me and the rest of the room became like steam.\n\nMy left hand traveled up my shaft slowly, letting my precum lube my long pole. Daniel's eyes followed the movement closely, hungrily. I thought of his full lips kissing the underside of my cock, the way he liked to flick my precum onto his tongue and taste me. I felt his throat open around my shaft, the heat of his tongue and the sheer strength of him unlike anything else I'd known. The nearly painful sensations of completeness when his stubble pushed into my pelvis. The way the short strands of his black hair would slide over my fingers, course beneath their touch but equally like silk. His deep brown eyes staring up at me through his dark lashes, urging me to give him what he truly wanted, pulsing with life, begging me to release myself to him.\n\nI'm not sure how long my imagination ruled my world, but I felt my orgasm rising inside me. It seemed to travel from the aching hole between my legs, where I longed to have Daniel. It moved like a hot knife upwards, pulling a piece of me with it, shattering my fantasy as it edged closer.\n\n\"Ahhh, yessss...\" I moaned. \n\nMy eyes closed and my head fell back to the headboard. It was literally too much for me to maintain eye contact with Daniel any longer, not when my body cried out for his with every nerve and was denied. Not when I was so close to him yet he seemed miles away.\n\nThe first shot splashed into my face and left a small white river on the lacquered headboard behind me. I barely noticed the shocked gasps that echoed. The second and third shots completely ruined my t-shirt. Again. I was running out of cum-free clothes ever since I'd met Daniel. I could hardly keep up with the increased volume of laundry.\n\nWhen I opened my eyes, Daniel was still looking at me. He smiled gently and nodded a bit again. I wonder if he knew what I'd been thinking of? \n\nI hope so.\n\n\"Fuck me, that's a lot,\" Gordon drawled. I noticed that his own boxers were marred with pools of sticky white boy juices.\n\n\"Ahhh,\" Tall Paul let out. \n\nIt sounded like a spasm of some kind. His tall lanky frame jerked in the chair a bit, his legs coming off the floor. He looked like a marionette that some cruel puppeteer was manipulating around from on high. His thin cock twitched with his spasm and he sprayed tall arcs of cum into the air, onto his chest, onto the floor. He didn't have a grip on his cock at all, just let it shoot off as it may without any direction or guidance. Several guys had to jump out of the way as he came to avoid being sprayed with his jizz. \n\nMy eyebrows shot up a little bit.\n\nOkay Tall Paul. Good for you. Thin dick, but impressive distance and volume. \n\nWhen Paul finally collapsed into a crumpled heap onto his chair, his spasming finally ebbing, he seemed unable to speak. \n\n\"Well, I don't know about you douchebags, but I'm going to bed,\" Ian said. \n\nWe were in Paul's room. Paul, being the gracious and presently mute host, nodded his agreement with Ian. Jeans rose from the floor and still throbbing boners were stuffed uncomfortably back into their assorted prisons. The blonde woman was now covered in thick streaks of cum from her chin to her hairline. The tonic, unfortunately for her, had done nothing to calm her breathing difficulties. Someone shut the TV off as the grunts and grumbles of the Jock Language ushered everyone out and back towards their own domiciles. \n\nI made sure to be the last to leave the room. I thanked Paul as I closed the door behind me. He didn't respond. He was still slouched in his chair, his pants at his ankles, his softening cock dribbling the last of his strength onto his lean thigh. I would be lying if I said my mouth didn't water a bit and I silently hoped that Paul found his way to the bed somehow and didn't spend the rest of the night in that position.\n\nThe other room doors closed to the sound of locks being drawn until only Daniel and I were left in the hallway, walking shoulder to shoulder towards the last two rooms. I fished the electronic card from my back pocket and turned to my door. \n\nI couldn't bring myself to see if Daniel was behind me or if he'd turned towards his own room across the hall. I wasn't sure what kind of damage I had just done. My heart raced as I unlocked and opened the door. I was still too frightened to turn around and close it, wondering if he was there.\n\nBefore I was halfway through, I felt his hands on the small of my back and he pushed me inside so that I almost tumbled. Before his hands left my back, they appeared on my shoulders and he spun me to face him and pull me to his fierce kiss, crashing us to the closing door.\n\nMy hands came to life again and I grabbed for him, felt his arms, shoulders, his back, wound my trembling fingers into his hair. His lips came to my neck and sucked hard.\n\n\"Oh, god, Daniel,\" I moaned, my leg climbing up to his hips, his free hand coming to support me on my ass. \n\n\"I...oh, fuck yes, I'm sorry...I didn't...\" I panted through the rising tide.\n\n\"Shut up.\" Daniel growled and pulled my mouth to his again, his tongue roughly sliding inside me, my breath pushed from me again.\n\nDaniel never broke the bond of our mouths, stuck like magnets as he picked me up from the floor by my waist and walked me to the bed. I was instantly reminded how much stronger he was than me, who was truly the bigger between us in spite of height. \n\nI bounced on the mattress when he tossed me like a rag doll. Before I hit, my arms were already outstretched, grabbing for him, needing him as close as possible. He crashed into me in a flash of olive skin and a deep growl like a panther. \n\nWe rolled for a moment, and I shifted myself on top of him, not pinning him, not daring to challenge his superiority right now. I knew he needed me to be his, to be completely his, to prove to him that what had just happened with his friends was as nothing compared to what we had. My entire body ached to prove it, so I straddled him gently and arched the small of my back, grinding my still-covered ass into his hardness.\n\n\"I just want you,\" I breathed as he met me thrust for thrust, his fingers digging into my hip bones, pulling me down to him. I reached behind me to grip his bulge through his jeans. He growled at me and I felt his dick pulse. A dampness came to life beneath my palm as I squeezed, milking him, showing him what I was worth.\n\n\"They have no idea what I can do. Not like you do.\" \n\nI unbuttoned his jeans with my hand and unzipped him. His cock did most of the work for me, pushing his underwear into a massive tent. My fingers worked under the elastic and I grabbed his shaft for the first time today. I sighed at the contact, finally getting what I'd been forced to experience only in my mind. Daniel mimicked my reaction when I pulled on his shaft, gathering his smooth foreskin over his head then popping it free.\n\n\"You want to see what I can do?\" \n\nDaniel nodded, his eyes pleading but never losing their dominance. If he wanted me to be submissive right now, if that is what he needed just as much as I needed to BE that, then that is what he would get.\n\nI spring from astride his hips and knelt between his legs, never stopping my movements on his raging cock.\n\n\"I missed your cock, Jock boy,\" I said, sticking my tongue out to lick his slit and taste him again. It was like sweet water to a man in the desert. \n\nI took his head in my mouth and felt his whole body tremble. His fingers came to my head and I readied myself for what I hoped would be a truly vigorous face fucking.\n\nSomeone should have taken a picture of the frozen tableau we struck when his moans and my wet slurping noises were joined by a loud knock on the door.\n\nDaniel's fingers were wrapped tightly in my blonde hair and a good third of his cock was shoved down my throat. Both of our eyes turned towards the door, stopping all motion and staying stock still. Maybe they would go away when no one answered.\n\nI felt Daniel's cock pulse another stream of precum onto my tongue. I couldn't help but moan a little bit.\n\nThe knock sounded again.\n\nI jumped from the bed, sighed at having to tear myself from Daniel's cock and hastily adjusted my sorely abused prick in my jeans, covering it as best I could with my cum stained t shirt. I made silent flailing motions at Daniel, meant to indicate that he should conceal himself as best he could. He moved off the bed in a flurry and pressed himself to the half wall that divided the bedroom from the bathroom. \n\nI straightened myself and went to the door.\n\nWhen I turned the handle and pulled it open, I felt like I was a character in some sitcom on TV.\n\n\"Hey,\" Ian said from the hallway, now clothed fully. \"I just wanted to say thanks for...you know.\"\n\nIt was almost comical to watch a man of his size blush and stare at his fidgeting feet. I couldn't help but grin a bit. My heart went out to him and I was struck by just how far I had come in so short a time. A few weeks ago, the thought of a Jock at my door, muscle bound and athletic as they are want to be, coming to say thank you for anything...well, it was highly improbable at the very least.\n\n\"Thanks, Ian. I appreciate that,\" I said in my best impression of humble. Inside, I was doing a jaunty little jig. \n\n\"You're a cool kid. I'm glad you're on the team.\"\n\nIt was my turn to blush this time. I mumbled my thanks again. I watched Ian's eyebrows draw down in confusion. He seemed a little stunned and I wondered what I'd said that might have cause the look. It was then that I noticed he wasn't staring that way at me. ",
        "He was looking past me, over my shoulder and into the room behind me.\n\n\"Daniel?\" he asked confused.\n\nEvery muscle in my body froze. I pictured Daniel taking the same position against the wall.\n\n\"Dude, I can see your shoulder. You're not that great at hiding, bud.\" \n\nI heard Daniel release his breath in a great rush and I turned to watch him emerge from his apparently awful hiding spot.\n\n\"Fuck,\" I groaned. \n\nI pictured everything crashing down around me in a fiery apocalypse. Ian was GOING to tell someone now that he'd caught Daniel in my room. And Daniel, bless his gorgeous jock-boy heart, had not bothered to put his clothes back on from our rudely interrupted suck fest of just moments before. When he slid from behind the wall and into the small hallway, his jeans pooled around his ankles and his very hard cock glistened with slick wetness from my industrious efforts of minutes ago.\n\n\"Get the fuck in here or close the damned door,\" Daniel admonished, hands on his hips, his cock bouncing in time to his words. \n\nAs if to put paid to any rumors that Daniel was present in my private room for some reason OTHER than sexual exploits, his cock chose that particular moment to leak a long stream of viscous clear goo from his slit. It stretched nearly to the carpet before it broke and fell the rest of the way.\n\nIan snorted a little laugh, looked to his left down the hallway and pushed past me to come inside. \n\n\"Dude, he's really really good right?\" Ian asked Daniel excitedly. \"Like, WAY better than a girl, right?\" \n\nWhile it was very flattering information for a young gay man to hear, I would have preferred it to have been offered TO me, instead of THROUGH me.\n\n\"Um, Hello?\" I said in my most sarcastic tone. \"Yeah, hi, nice to meet you. I'm David. Ya know, the boy whose room you've decided to invade like it's your own?\"\n\nI was surprised to find that Daniel wore a wide grin across his face. I hadn't thought how he would react to someone of his own social stature knowing about us, much less approving of it. Apparently, it made him smile. But my snarky outburst worked well enough to wipe the grins off both of their faces.\n\nDaniel's brown eyes went to the carpet and Ian's soon followed. \n\n\"Sorry,\" they mumbled in unison.\n\nRemember that thing about supply and demand and not getting too addicted to the power? \n\nWell, another little hit couldn't hurt, right?\n\n\"What's that? I didn't hear you?\" I asked. \n\nMy mamma would have been proud. Maybe not proud precisely, since I was using sex to essentially manipulate boys into doing my bidding. When put that way, she SURELY would have been proud. \n\n\"I'm sorry,\" they repeated in crisp clear tones.\n\nI nodded and they both relaxed visibly. I trembled a bit at the power rush again. \n\nIan's excitement reasserted control first. He turned to Daniel.\n\n\"Are you...like, gonna finish?\" he asked.\n\n\"You'll have to ask David.\"\n\nThey both looked to me. \n\nIt was completely unfair. Daniel should have known when he looked at me like that, those sad puppy dog eyes almost seeming to fill with tears, I would have done almost anything short of actual murder. \n\nI threw up my hands. Ian's eyes brightened like a child at Christmas.\n\n\"Mind if I...I mean,...if it's okay...umm,...\"\n\n\"You can watch, you big perv,\" I shot back, putting an end to his stuttering.\n\nYou'd have thought I just told him he'd won the lottery.\n\nIan took a seat in the chair, the same chair in the same place that I pictured Paul crumbled into a few doors down.\n\nWhen I looked at Daniel, something had changed in his gaze. Before Ian's arrival, I had sensed he needed to be powerful and dominant, needed me to show him that I was his. Now, behind those soft brown pools were glimmers of a scared boy, standing on the edge of a cliff and unsure whether he really wanted to jump to the icy lake below. \n\nMy tactics changed immediately. \n\nI approached him slowly, making sure I never let my eyes leave his. I took his hand in mine and I could swear I felt it tremble just a little bit when I did. I lead him towards the bed until his calves were pressed against the foot of it. His jeans made his maximum movement barely above a shuffle so I took my time. Still looking at him, I found the hem of his t-shirt and raised it over his head, dropping it to the floor beside me.\n\nI was happy to see the timidity vanish from him when he stared at me now. Ian was forgotten. I could see my face reflected in his eyes and I knew that I was all he saw now. I placed my palms on the warm planes of his hairy chest and pushed him gently to the bed as I sank to my knees on the floor.\n\nI angled Daniel's cock so that Ian had a perfect side-on view of his entire length before I opened my mouth and slowly pushed his whole shaft inside my throat. I breathed him in deeply, letting my tongue move in slow circles on him. His torso fell back to the mattress and I had to level myself up to keep him fully inside me.\n\nSlowly I withdrew, sucking on the rim of his cock and nibbling lightly on his smooth foreskin when I did. \n\n\"Shit,.\" He breathed just as I heard Ian mimic him exactly from off to my right.\n\nI sank back onto him and brushed my lips across his trimmed pubes. I felt his muscles tense, saw his abs crunch and become even more defined as I bobbed up and down on his manhood. I could have stayed down there for hours, completely unaware of Ian just feet from me. \n\nDaniel's gentle grip on the sides of my face pulled me from my prize. Before I knew it, I was laying flat against his broad muscled body, his arms wrapping tightly around my back, crushing me to him while he kissed me deeply.\n\nI heard Ian's chair slide across the carpet in a rush and just made out his tall bulk rise quickly to his feet.\n\n\"I...I...I...\" He stammered, looking around for something, anything on which to focus other than his buddy's tongue shoved into my mouth. \n\nDaniel broke our kiss, but not our embrace.\n\n\"Sit the fuck down and enjoy the show, jack ass,\" he snapped at his teammate.\n\nIan stood still for a bit, eyes locked on Daniel's. I was trapped in his arms, happily, but I watched as these two specimens of masculinity squared off without a sound. \n\n\"You walked in here, now you get what you get,\" Daniel finished.\n\nIan retook his seat and Daniel's gentle finger on the side of my face returned him to my gaze. He brushed a gentle kiss across my lips and stroked my cheek with his thumb. He smiled his crooked half smile at me and winked.\n\nOh, fuck me.\n\nThe Alpha was established and I, me, the gay nerd, got to claim him. \n\nChristmas, Valentine's, my birthday and the Fourth of July all wrapped into one.\n\nI leaned forward to kiss Daniel with everything I had. He nearly tore my shirt from my back in his haste to get it off. Our mouths never stopped their dance for longer than it took for him to remove an article of clothing. I had never felt so free as when he finally managed to get my pants and underwear around my knees. I wiggled out of them the best I could from that point on, but was more focused on the feeling of my unbending dick as it pressed into his equally hard member.\n\nDaniel's gentle downward pressure on my head signaled my time to finish my work had come. I eagerly flipped myself around so that I lay head towards his toes and threw my arm over his hairy thighs. \n\nSlowly at first I sucked his cock inside me, trying to memorize the taste of him yet again. Daniel gripped my dick and tugged lazily as I worked on him. He soon had me slick with my own precum and used his thumb to torture my sensitive underside.\n\nI tried to moan through my full mouth, but I refused to take his cock from inside me. Not again. I used every trick I could think of, every manipulation and twist I'd learned over the months. \n\n\"Yeah, nerd...Christ, David, I'm getting close.\"\n\nI heard Ian shift in his chair and the distinct sound of a zipper being lowered.\n\n\"Do it,\" Daniel continued. He raised his legs so that his knees were bent, feet flat against the mattress.\n\nHe couldn't mean...? Could he? In front of Ian.\n\n\"Rim me, baby.\" \n\nYou didn't need to ask me twice. \n\nFaster than I thought possible, I twisted around so that Daniel's legs were on either side of me as I knelt between them. My cock pointed straight at his exposed and twitching pink hole. I suppressed the urge to shove myself into him right then and placed my palms under his hamstrings, pushing his hips back off the bed.\n\nI licked gently at first, lightly flicking around his hole, kissing the soft skin around it, breathing hot breath on him.\n\n\"Mmm...more,\" Daniel moaned. \n\nWet sounds were starting to come from the chair.\n\nI pressed my tongue into his hole and swirled in quick motions. I'd heard some of the team discussing a technique called \"The Alphabet Game,\" where you are supposed to use your tongue to spell out the entire alphabet in capital letters and then in lower case letters when you eat out a girl. The thought was nauseating, but the theory seemed sound.\n\nI hadn't gotten to the Capital D before Daniel was panting like a mad man on the mattress. His hairy forearms grabbed on the the back of my head, pulling me deeper inside of him, reaching past his own cock to grab at me.\n\n\"Oh shit...yes...eat my ass,\" he groaned.\n\nE. \n\nF. \n\nG. \n\nH. \n\nI.\n\n\"Mmmm...\" That one came from Ian. Though I had no desire to even glance in his direction to confirm my suspicions, I was glad he was enjoying the show thus far.\n\nWhen I got to Capital S, Daniel could barely breathe.\n\nI had never heard him whimper like that before. It almost reminded me, unpleasantly, of the poor blonde woman from the porn in Paul's room. \n\n\"Oh god, please. Please stop! I can't...oh fuck me, I can't take it anymore.\"\n\nT.\n\nU.\n\nV.\n\nW.\n\n\"Please, baby. Finger me! I...\"\n\nX.\n\nY.\n\n\"IIIIIAAAHHHHH, FUCK!\" he screamed.\n\nZ.\n\nI'm a stickler for finishing what I start. \n\nDaniel's breath began to slow a little bit, but his thoroughly slick hole pulsed in and out in front of me, begging just as much as its' master.\n\nI pressed my index finger to his opening and felt it press against me. Daniel whined and writhed beneath, pushing his hips forward as best he could, seeking me out.\n\n\"Pleeeeassse...\" he drew out the word. His eyes proved too much for my weak resolve.\n\nI pushed inside him and watched his eyes roll back in his skull. His hole squeezed me tightly but gave me no issue. I could feel his heart beat..beat..beat..beat..beat...in time to the convulsions of his opening. I drew out slowly and pressed back in with two fingers now. I didn't even need to wet them, he was so lubed up from the Alphabet Game. I would have to remember that for the future.\n\nDaniel's cock spasmed and he shot a quick burst of precum to his hairy stomach.\n\n\"Holy shit,\" Ian whispered in apparent awe, the sounds of his jerking off clear as a bell now.\n\nI know I didn't need to, I could have found other ways to get him off, but something inside of me wanted to show Ian what being at the mercy of another man could feel like. I pushed into Daniel quickly, burying myself inside to my last knuckle and arching my fingers forwards inside of him.\n\nThe reaction was exactly what I expected. \n\nDaniel let out a roar like I had just started his engine. I pulled quickly out and back in with the same force. In and out I pistoned, each time, pressing that spot inside Daniel that I knew would make him burst like a pi\u00f1ata.\n\nDaniel's mouth hung open to his chest and he crunched forward as my two fingers fucked his hole hard and fast, just barely tickling his prostate when I was buried in, all in full view of his \"straight\" teammate. His eyes were wild and harried, his breath caught in his throat and only a deep growl came from inside him. He began to shine with a thin sheet of sweat. I picked up the pace.\n\n\"Ahh,...David,...agh...\" \n\nIt was weak, barely even a whisper. But I was surprised he even managed that much considering the sheer volume and speed at which his cock spewed into the air.\n\nRope after rope arched high between us. Most of the first blasts covered my bed spread a good foot above Daniel's head. Only around the third or fourth gush actually landed on his heaving chest and pleasure-twisted face. The white drops splashed agains his skin with gentle splats, clinging to his hair and beading there in small drops and graceful swoops.\n\nWhen he was done and his cock twitched in the air between us, still untouched, I pressed my fingers to his prostate one final time and watched in awe as another small squirt pooled near Daniel's belly button.\n\nBefore I could remove my fingers from him, Daniel sprung forward from his prostrate position and flipped onto his stomach in front of my kneeling form. My fingers were still slick and wet from being so recently inside him but when he opened his mouth to take in my cock, I wound them into his hair without thought.\n\nDaniel's tongue teased my slit and played with the rim of my cock head. He looked up at me through those dark lashes, the very same look I had imagined when I was jerking off in front of the team earlier. My fantasy now come to life once more.\n\nDaniel used one hand to jerk my shaft while he bobbed on the top half of my cock, moaning all the while. I felt myself getting close in only a moment. \n\n\"Daniel...fuck yes,...don't stop...i'm close,\" I said between breaths. Daniel increased his speed.\n\nHe sighed deeply when my first shot erupted into him. He sucked firmly and milked me as blast after blast hit the back of his throat and he swallowed them all gratefully. \n\nIan roared from his chair and I turned just in time to watch his cock spew blindingly white spunk onto his lower stomach. \n\nDaniel kissed and sucked my cock clean lovingly as I watched Ian ride the wave of his orgasm. I caught his eyes and jerked my head towards Ian, hoping he would follow my lead.\n\nI got off the bed and was pleased to hear Daniel do the same. Ian's head was still thrown back and his eyes were closed so I'm still not sure if he heard or saw the two of us kneel between his open thighs.\n\nI leaned forward first and licked at Ian's defined abs, taking in his white juices and savoring them. \n\nI felt Daniel's face press next to mine as we continued to lap at Ian's muscles, licking him clean, kissing our way down his shaved pubes to his still twitching cock.\n\n\"Oh fuck me,\" he groaned.\n\nMy lips met Daniel's around the base of Ian's dick. The tip of my tongue danced with his as we kissed and licked our way up Ian's shaft towards his head. My full lips reached his cock head first and sucked the tip of him gently. Ian shook mightily when I found my mark. I pulled back a bit and let Daniel take the top position.\n\nSoon, Ian was clean and breathing in sharp gasps. His hands were at his temples again, as if he was steadying himself against the spinning of the room.\n\nDaniel rose to his feet first. I followed shortly and we both looked down at the spent muscle-god slumped in the chair.\n\n\"So. Thoughts?\" Daniel asked nonchalantly. \n\nIan wasn't the only one to stare at him in wonder.\n\nThoughts? I was still amazed every day at the things Daniel could take in stride.\n\n\"Umm, that was ridiculous,\" Ian said in a gravely whisper.\n\n\"Glad you approve,\" Daniel started. \"Now, get dressed and get out.\"\n\nDespite his wobbly legs, Ian wasted little time in obeying Daniel's command. I added nothing to the orders. If Daniel didn't find it necessary to mention the need for discretion, I certainly wasn't about to second guess his assessment of the situation. He knew Ian much better than I.\n\nThe door closed quickly behind a still awestruck Ian. \n\nI looked through the peephole and watched as he stood in the hallway for a bit, looking left and right. The poor guy might never find his own room in his current state. I opened the door again.\n\n\"Two doors down on the left.\" \n\nI closed it again. \n\nWhen I watched through the peephole this time, it only took him about five or ten seconds to gather himself, process the directions, and amble off towards his room.\n\nI turned back to the room and found Daniel using his discarded t-shirt to wipe the cum from his chest and abs, seeming to be entirely unaffected by what we'd just done.\n\n\"Do you think he's gonna jack off thinking about that tonight?\" I wondered idly.\n\nDaniel shrugged.\n\n\"Dunno. Don't really care what he does. Are you ready for bed soon?\"\n\nThough I was a little shocked at his apparent level of ease, I nodded.\n\n\"You should be getting back to your room soon,\" I said with more than a little hint of sadness at the thought.\n\nDaniel pulled back the cum soaked top cover of my king sized bed and pooled it on the floor. He smiled at me, still standing at the end of the hallway.\n\n\"Why? What's the point now?\" he asked.\n\n\"What about the other...\"\n\n\"Ian knows now. There's no use in trying to pretend like it didn't happen. He knows, and it's possible everyone else will know soon enough. So why should I sleep alone tonight, when what I want is to sleep next to you? If it's coming out soon, I'm at least going to do what I want in the meantime.\"\n\nI watched him pull back the under cover and the sheet and slide beneath them and settle into my bed. He propped himself on one elbow and faced me, smiling that crazy beautiful smile. \n\nHe patted the mattress next to him, urging me to join him.\n\nI wanted to cry, and for more than one reason. \n\nDaniel was so sure, so strong, so confident. The situation had changed in the blink of an eye, our routine disrupted, plans shattered; and he had adapted nearly instantaneously. He had made his choice as to what was important to him. \n\nIt took me a while to fully understand that I was what was important to him. \n\nHe faced possible social outcast, loss of face, humiliation, degradation, any manner of cruel words and remarks. Physical violence wasn't entirely out of the question, even for one as well-built as him. \n\nBut there he lay. Calm, cool, serene, and beautiful beyond description. In my bed, beckoning me to lay beside him.\n\nI turned off the light and climbed under the covers. In such a large bed, it took us a moment to find one another, but when we did, the bed seemed almost comically large. My forehead pressed to his, our noses brushing. He threw one leg over my own and I wrapped my limbs around him. \n\nOur soft cocks pressed together and for once, this was enough. Just to hold him, feel his breath on my lips, the rise and fall of his chest pressed to mine, his strong fingers lightly dancing up and down my back.\n\nI kissed him in the darkness and hoped he could feel everything I wanted to say but couldn't. How much I needed him, how thankful I was that he was so sure where I was so scared. \n\n\"Don't think about it,\" Daniel whispered at my ear as he kissed me lightly.\n\n\"Think about what?\" \n\n\"The morning.\"\n\nI hadn't spoken. I had not said one word, and yet he knew the thoughts that lurked at the back of my mind. I didn't wonder how he'd done it, I just marveled at the fact that he could. After so long thinking no one would ever care to even hear my thoughts, Daniel had decided to start reading them. \n\n\"But,\" I whispered, my voice trembling, \"What if Ian...\"\n\n\"Don't think about it,\" Daniel cut me off. \"If it happens, it happens. You are here with me now. So just be with me. You and me. Just us. Please, baby?\"\n\nThe tears came hot and silent down my cheeks as I kissed him. \n\nTomorrow would come as it always did. \n\nWith his lips against mine, our hearts beating in tandem, I couldn't have possibly cared less if the sun never rose again."
    ],
    "authorname": "DAMackey",
    "tags": [
        "top",
        "jock",
        "voyeur",
        "nerd",
        "highschool",
        "baseball",
        "rimming",
        "blow job",
        "swallow",
        "cum"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-09"
}