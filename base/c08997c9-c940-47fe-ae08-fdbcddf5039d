{
    "title": "Just a Little Magic Ch. 11",
    "pages": [
        "JUST A LITTLE MAGIC Chapter 11\n\n1. BREANNA Atlanta, Georgia January 9, 2001 January 14, 2028\n\n2. ELODIE Brugges, Belgium February 8 February 13\n\n3. VICKY Singapore March 9 March 13\n\n4. SOPHIE Montreal, Quebec April 7 April 12\n\n5. IRENE Limassol, Cyprus May 7 May 11\n\n6. SANDRA Taipei (Taiwan) June 5 June 10\n\n7. ASHLEY Chicago, Illinois July 5 July 9\n\n8. MIRELLA Sao Paulo, Brazil August 4 August 8\n\n9. KAVIA Vadodara, Gujarat September 2 September 6\n\n10. ESTHER Johannesburg, S.A. October 2 October 6\n\n11. TAMARA Tampa, Florida November 1 November 5\n\n12. RI Osaka, Japan November 30 December 1\n\n13. JANINE Toronto, Ontario December 30 December 31\n\n*****\n\n#10 Esther Johannesburg, South Africa\n\nLillian got Esther and her friend to attend our magic show. I'd resumed my 'fake usher' persona, and got close enough to see her - and read her mind.\n\nEsther wasn't unattractive, but I realized immediately that we couldn't invite her up on stage. Nor could we call on her friend. It wasn't just that they were too shy; they were too intimidated.\n\nEsther and her girlfriend were black, while a significant portion of the audience were white. I didn't know much about South Africa, except for the broad strokes of their history. None of that mattered, really - all I knew was that Esther didn't want to be put in the spotlight.\n\nIt wasn't entirely a question of race; Esther was a poor girl from a poor working-class neighbourhood. She didn't feel well-dressed enough to be mixing with these 'rich folk'.\n\n- \"Serendipity it is.\" said Lillian.\n\nEsther was a waitress in a greasy spoon restaurant. She was absolutely astonished when Janine and I walked in just after the lunchtime rush.\n\n- \"Peter Grey? And Miss Janine?\"\n\n- \"You were at the show last night.\" I said.\n\n- \"I - how did you know?\"\n\n- \"Well, you know our names, for one. And I can read minds, you know. But the real answer is that I saw you, before the show even started.\"\n\n- \"You saw me?\"\n\n- \"I have a good memory for pretty faces.\"\n\nBlack girls can blush. Esther did, anyway.\n\n- \"Don't tease the poor girl.\" said Janine.\n\n- \"I'm not. She's very pretty. Don't you think so?\"\n\nJanine looked at Esther. \"Fine. Yes, she's pretty. Can we talk about the next show now?\"\n\nOf all the gin joints in all the towns in all the world, I'd walked into hers. Esther was amazed - and astonished to learn that I found her attractive.\n\nShe was shy, and intimidated all over again. But I managed to make her smile - wow. Esther had a natural, beautiful smile. Maybe I was reacting to all the time I'd had to spend with Kavia, but I was quite attracted to Esther's simple honesty. She was genuine.\n\nI got her to smile again. Then I asked her if she'd be willing to let me take her to dinner.\n\nHer smile vanished.\n\n- \"Oh, for Goodness' sake.\" said Janine. \"Please say yes, Esther - otherwise, he'll just keep trying to find reasons why you should have dinner with him.\"\n\n- \"Please, Esther.\" I said.\n\nKeep in mind that Lillian had used magic on her. Esther wanted to say no. I was a stranger from abroad, probably too rich for her, and belonged to a world that was just too far removed from what she knew. On top of that ... she'd never dated a white guy. It was obviously even more of a factor than it had been for Breanna in Atlanta.\n\nMost of all, though, Esther was a 'good' girl, and good girls don't accept invitations from strange men. What would her mother say?\n\nOn the other hand, she was primed to like me, she had enjoyed our show last night, and she was sensitive to the amazing coincidence of me being in her restaurant. And there was the tipping point: who doesn't like being told that they're pretty?\n\n- \"Umm ...\"\n\nI just smiled at her.\n\n\"I would have to ... make some arrangements.\"\n\n- \"I understand.\"\n\nEsther didn't know that I well aware of her home situation. She lived with her young daughter and her partially disabled mother. She herself was the sole breadwinner. Esther hadn't been on a date in almost three years. It was that loneliness that finally helped her to make up her mind.\n\n- \"Alright.\" she said. \"I mean ... you seem like a nice man.\"\n\nI offered to come by her home in a cab, to collect her.\n\n\"You don't have to do that.\" she said. \"It's probably better if I ... meet you.\" Esther wasn't embarrassed by where she lived, but she thought that I might be.\n\nI gave her a choice of locations: a place of her choosing, an upscale restaurant, or the hotel we were staying at. I was only mildly surprised when she chose option 3. Esther didn't want to take me somewhere I would feel uncomfortable. Nor did she want to go to a place where she would feel out of place.\n\nThe hotel seemed like a neutral zone, where we might pass unnoticed.\n\nEsther immediately dealt with the elephant in the room.\n\n- \"I don't entirely understand, Mr. Grey, why you would want to have dinner with me. I'm not ... that is - I don't think that I'm quite what you're looking for.\" She thought that I was looking for a groupie to fuck. Semi-anonymous sex.\n\n- \"Esther, I've spent the past few weeks with people who are snobs. Opinionated people, materialistic people ... you're like a breath of fresh air, compared to them. I love your smile, and I enjoy your company.\"\n\n- \"But I'm not -\"\n\nShe'd been about to say 'that type of girl.'\n\n- \"I know. I'm not expecting anything except pleasant company for dinner. Now please don't misunderstand what I'm about to do -\" I slid some money across the table. She looked more perplexed than offended.\n\n\"This is cab fare.\" I explained. \"If at any moment I say or do something that makes you feel uncomfortable, you can immediately take a taxi home.\"\n\n- \"That's ... not necessary.\"\n\n- \"You're my guest. I want to make sure that you get home safely - at a time of your choosing. Alright?\"\n\n- \"I still don't understand.\" she said. \"There must be plenty of people you could talk to.\"\n\n- \"Not like you.\" I said. \"I felt a connection between us, Esther. I suspect that you felt it, too - or we wouldn't be having this conversation at all.\"\n\nEsther was only 25 years old, but she'd led a hard life, and looked older than her age. She'd also suffered her share of disappointments, and was leery of another.\n\n- \"I don't know.\" she said. \"That's not enough ...\"\n\n- \"To build a relationship on? I don't know, either. But I do know that it's too much to ignore. It seems to me that it would be a serious mistake to let you walk away without at least trying to get to know you.\"\n\nEsther was feeling the magic, too. I was still far beyond anything she might have expected to come into her life, but she was teetering on the edge.\n\n- \"I suppose ...\" she said. \"It won't kill me to have dinner with you.\"\n\n- \"That's the spirit. I'll have you know - so far, no one has ever expired while talking to me. A few were taken sick, and one had to go to the hospital, but ...\"\n\nEsther smiled again, and relaxed a little bit.\n\nWe had just about nothing in common.\n\nHard-working single mother, meet video-game playing, pampered nerd. Young lady who'd had precious little romance in her life, let me introduce you to Casanova Houdini, jet-setting international playboy magician.\n\nBut I asked about her family. Little by little, I got Esther to tell me about her 5 year old daughter, Sunny (who sounded like a real handful). She also told me about her mother, and her father, who'd been killed in an industrial accident.\n\nEsther wanted to hear the story of how I'd become a magician, and about all of the places I'd been.\n\nIt wasn't a seduction - not even remotely. I wasn't just a white man from the other side of the world - we lived on completely opposite sides of the street.\n\nAll I was trying to accomplish tonight was to establish that there was a connection between us, however unbelievable it might seem.\n\nAnd that I accomplished.\n\nAfter dinner, she accepted dessert and a coffee. I asked her about Jo'Burg, and about the restaurant she worked in - anything I could think of.\n\nAfter our second coffees, Esther began to wonder if I was going to invite her to my room. She would've politely declined, but she was still curious to know if I was interested in her in that way.\n\nI didn't. Instead, I walked her to the front of the hotel, and called a taxi for her.\n\n- \"Was I right, Esther?\" I asked. \"Did you feel it, too?\"\n\nShe flushed. \"Thank you for the dinner - and the evening, Peter. I ... I enjoyed it.\"\n\n- \"Does that mean that you might have dinner with me again? We're doing a show in Durban, and another in Pretoria ... but I'll be back here next Wednesday.\"\n\nEsther was still confused. Our whole 'connection' still struck her as somewhat bizarre. She'd had a nice night out, though, and I'd made her feel special.\n\n- \"That would be lovely.\"\n\nOur second date was much like our first - me asking her questions. She was absolutely floored that I'd picked up little gifts for her daughter and her mother (a collection of illustrated Doctor Doolittle books for Sunny, and heating pads for Gramma's arthritis).\n\nWe had another nice evening together, but Esther wasn't about to come up to my room after dinner. She wanted to ... but she simply couldn't face the prospect of returning home in the early hours of the morning, to face her mother and her daughter.\n\nOnce again, I called a taxi for her.\n\nEsther surprised me by standing very close to me.\n\n- \"You're a lovely man, Peter Grey. I would ... very much like to spend more time with you. Tonight, as a matter of fact. I ... I haven't felt this way for so long. But ... I can't.\"\n\n- \"I understand.\"\n\n- \"Do you? I truly hope that I don't regret this decision. I think that I'm already regretting it.\"\n\n- \"No regrets, Esther. I'll be back. I don't know when, exactly. Soon, though. I'm coming back. Just to see you.\"\n\nEsther was crying. Then she leaned forward, and pressed her lips to mine. I was surprised by the intensity of her kiss.\n\n***\n\nI was seriously messed up.\n\nIs it okay to lie to someone in order to save their life? Is it okay to lie to the person you love, if you're doing it to save other people's lives?\n\nI didn't know anything about ethics - I studied Business in college (yeah, we had to take a business ethics course ... but c'mon, really?).\n\nDid I have to fuck Kavia quite so many times, when I didn't even like her? How was I going to maintain a relationship with Esther, after she'd borne my child? Johannesburg isn't exactly around the corner from Toronto.\n\nHow was Sophie going to deal with our child having 12 brothers and sisters, all born in the same year? I got another serious headache, trying to think this through.\n\nSophie. I thought about her constantly, and sent her a weekly email that contained about 10% of what I was doing - and thinking.\n\nThen I composed another email, for Ri, and one for Tamara. Then I wrote a letter by hand, to mail to Esther, because she didn't have access to a computer.\n\nI felt like a lying sack of shit until we landed in Rio de Janeiro.\n\nThen I felt like an exhausted lying sack of shit.\n\n***\n\n#8 Mirella Sao Paulo, Brazil\n\nMirella (pronounced Mee-Rey-yah) was a celebrity in her own right. She was a model, an actress (a small part in a Brazilian soap opera), and a fixture in the celebrity gossip news. She'd been linked to an American movie star, an Italian race car driver, and a Mexican soap opera star (only the last of these was true).\n\nShe attended our first show in Sao Paulo, and Janine chose her as our final volunteer. Mirella was more than we'd expected: the woman was flamboyant. She had style, and grace. Her lustrous black hair fell halfway down her back, and she swung her hips as if every oscillation was scoring a goal for Brazil in the World Cup.\n\nI was taken aback by her face; Mirella was blessed with a sultry, eye-catching, exotic beauty, with creamy light caramel skin. She was small breasted, but her ass could've been declared a national monument.\n\n- \"Welcome.\" said Janine, confronted by a woman who was just as hot as she was.\n\n- \"Welcome to Brazil.\" said Mirella, completely comfortable on stage. The audience's reaction suggested that she knew exactly how to play to the crowd.\n\nWe ended up in the sound-proof booth (which the promoters had agreed to build for us). I glanced at her more than once.\n\n- \"You're really very lovely.\" I said.\n\nShe turned her head towards me. \"You thought I would be ugly?\"\n\n- \"Hardly. But it's safe to say that you've far surpassed my expectations.\"\n\n- \"Ah? You know who I am, then? And I know who you are - isn't this where you like to kiss the girls?\"\n\nShe'd obviously watched at least one of our appearances on Penn and Teller.\n\n- \"You know who I am, Mirella? That's ... interesting.\"\n\n- \"My manager suggested that I ... look into you. I am surprised, though. I don't understand ... you aren't the most handsome man. Not very impressive - and yet ...\"\n\n- \"Thank you.\" I said.\n\nShe laughed. \"I am sorry. I insult you, and you thank me. There is something about you. I can't tell what it is ...\" I loved Mirella's accent; when she said 'it', she pronounced it 'eet'.\n\nAt that inopportune moment, Janine called us out of the booth.\n\nThe rest of the routine went flawlessly. Mirella shot me another smoldering glance. I wasn't quite sure what it meant. That was alright, though, because Lillian had arranged another serendipitous encounter.\n\nThe following day, Janine and I strolled into a fashionable restaurant. Seated at a prominent table (where everyone could see them) were Mirella and her agent, Mauricio.\n\nMauricio was tanned, well-dressed, and wore far too much jewelry. But he caught sight of Janine immediately, and spoke to Mirella, who turned her head.\n\nJanine was speaking to the Maitre 'D in Portuguese, plainly unhappy with the location of our table for two; that unfortunate fellow was trying to explain that given the late date of our reservation, there was nothing he could do.\n\nMauricio came to our rescue (or Janine's, at least), insisting that we share their table. Janine graciously accepted. The agent took her by the arm and led the way.\n\n- \"Hello again.\" said Mirella.\n\n- \"Thank you for sharing your table.\"\n\n- \"It is a pleasure.\" she said. \"Especially since I won't have to listen to Mauricio talk my ear off. But I am glad to see you again.\"\n\nHer agent pretended not to have heard that. He was busy offering to order for Janine, while haranguing the waiter for a bottle of wine.\n\n- \"I'm glad, too.\" I said. \"In fact, I've been thinking of you since last night.\"\n\nShe raised an eyebrow. \"Flattery?\"\n\n- \"Truth.\" I said. \"I think you can tell the difference.\"\n\nJanine wasn't thrilled with our lunch. For one thing, she wasn't used to sharing a table with a woman who was just as good-looking as she was - if not better. For another, she had to listen to a non-stop stream of talk from Mauricio, who was trying hard to impress her with a who's who of people he knew.\n\nMirella, by default, had me to talk to, and focus on. She was still curious about what made me tick, but she was intrigued. She also had her own repertoire of little tricks to keep me on my toes; where Janine favoured the quarter-smile, Mirella had perfected the raised eyebrow and the slight tilt of the head.\n\nThe shortest distance between two points ...\n\n- \"Would you have dinner with me tonight, Mirella?\" I asked.\n\nThere it was: the slight tilt of the head, that could reduce grown men to tears.\n\n- \"You are very sure of yourself.\"\n\n- \"I apologize if I've offended you. But put yourself in my place: if you were me, how would you go about approaching you?\"\n\nShe actually thought about it for a moment. Then she laughed, loud enough to distract Mauricio from his monologue.\n\n- \"I like you, Mister Grey. Yes - I will have dinner with you. May I choose the place?\"\n\n- \"That's a wonderful idea.\"\n\nMauricio was suddenly inspired to suggest that Janine should have dinner with him, to discuss 'opportunities' that could be beneficial for both of them.\n\nMirella leaned closer, and whispered in my ear.\n\n- \"He will try to get into her panties. That doesn't bother you?\"\n\nI whispered back. \"Janine is in charge of her own panties. She can decide for herself.\"\n\n- \"Ah? I thought that you two ...?\"\n\n- \"That video you saw was two years ago. We're really just ... friends.\"\n\n- \"And now you would like to be ... friends - with me?\"\n\n- \"Oh, no.\" I said. \"I'm hoping that we'll be much more than that.\"\n\nThe eyebrow and the head tilt, simultaneously: I was honoured. Mirella leaned back to take a good long look at me.\n\nShe didn't cancel our dinner date, though.\n\nJanine told Mauricio that she had to look after her mother. She managed to convey the impression that Lillian was in her late 70s, and suffered from incontinence.\n\n***\n\n- \"You owe me for that one.\" said Janine, one our way back to the hotel.\n\n- \"You don't have to spend the night with him. And you still owe me for Kavia.\" I said.\n\n***\n\nWe met in a very down-to-earth, off-the-beaten path neighbourhood eatery. Everybody there seemed to know who she was - and not a soul bothered her.\n\n- \"I grew up around the corner from here.\" she explained.\n\nMirella was a revelation. She was beautiful, and flamboyant. Her website (90% glamour photos, 10% in lingerie) was one of the most popular in Brazil. There were a dozen more websites devoted to gossip about her career, and speculation about her love life.\n\nBut she was a very intelligent woman. She spoke four languages (Portuguese, Spanish, English and French). Her lower middle-class parents had paid for dancing lessons. Mirella also had better business sense than her agent. She knew that posing nude would be a mistake; it was also something that, once done, couldn't be undone.\n\nRumours and speculation about her romantic affairs were one thing; actual proof was another. She didn't want to come across as a tramp. No 'secret sex tape' for her.\n\n- \"That is why you and I will be discreet - at first.\" she said. \"I will decide if and when we reveal our ... connection. Is that acceptable?\"\n\n- \"You're suggesting that there will be a 'you and I'.\"\n\n- \"I have been trying to answer your question all afternoon. If I were you, how would I go about approaching me?\" She smiled. \"It was very clever, to make me think of you all day.\"\n\n- \"That's only fair.\" I said. \"I have been thinking of you all day. But now I'm very curious - were you able to answer it?\"\n\n- \"Oh, I tried to come up with better 'approaches', as you call them. But in the end, I think that direct and straightforward has a certain charm.\"\n\nThe meal was fine; I was distracted by the company, and the topic of our conversation. Mirella sent me back to my hotel, promising to join me later.\n\n- \"You'll have half an hour.\" she said.\n\n- \"Half an hour of anticipation.\"\n\n- \"For both of us.\"\n\nI showered, and ordered a bottle of wine. The wine arrived first. But it was only a few minutes later that there was a knock on my door.\n\nWhen I opened the door, I didn't recognize the young woman who stood there.\n\n- \"Are you alone?\" she said, in heavily-accented English.\n\n- \"Who are you?\"\n\n- \"She's here. I am just making sure that that you are alone. Are you?\"\n\nI opened the door completely. The young woman brushed by me, and completed a quick circuit of my hotel room. She opened the closet. She even went into the bathroom, and pulled the shower curtain back. Then she simply walked out.\n\nLess than a minute later, Mirella herself appeared in my open doorway. She entered the room, and closed the door behind her.\n\n- \"I'm sorry.\" she said. \"I know that it can spoil the mood, but ...\"",
        "- \"Who was that?\" I asked.\n\n- \"My cousin, Carla. She drives for me.\"\n\nMirella sat down on the edge of the only chair in the room. \"I apologize. But ... one time, I arranged to meet someone. It was an ambush. He had a photographer there, to take pictures of us. The man was hiding in the shower. If I hadn't had to pee ...\"\n\n- \"I had no idea.\" I said. \"I'm so sorry.\"\n\n- \"It isn't your fault. It's mine - and now I have spoiled the mood.\"\n\nI sat down on the edge of the bed, facing her. \"Mirella, we don't have to ... do anything. Yes, I'm very attracted to you. But if you would prefer to talk, or ... whatever else ... I'm just happy that you're here.\"\n\nThe eyebrow went up. \"Direct, but patient?\" she said.\n\nA moment later, she stood up. \"I know! You can dance with me.\"\n\n- \"I'm a terrible dancer.\"\n\n- \"Nonsense. Everybody can dance.\" Mirella turned on the radio, and quickly found a station that she liked. Samba music. She held out her hands to me.\n\nIt took only a few moments for her to discover that I hadn't been exaggerating. She persisted a little longer, trying to get me to move in rhythm with her.\n\nShe stopped moving, and stood facing me.\n\n- \"You were right. I don't understand, Peter. You're nothing like the type of man I'm usually attracted to. So why am I interested in you? It makes no sense.\"\n\n- \"I can't explain it either.\" I said.\n\nShe stepped a few inches closer, and kissed me. It was an exploratory kiss, a short journey of discovery. Then she kissed me harder, a little more fiercely.\n\nWhen Mirella drew back, she had to take a deep breath.\n\n- \"I have to know.\" she said.\n\nHer hands flew to my clothing - and then to hers. She was frantically trying to undress us both at the same time. I tried to help, but we started to get in each other's way. I kissed her again, and then held on for dear life.\n\nMirella managed to get us both half-naked before our lower natures triumphed, and I was fully sheathed inside her, in the missionary position. She was lunging up at me while I tried to pound her into the bed.\n\nMy pants were still around my knees, her bra was still tangled around one arm ... and then I thrust deep inside her.\n\n- \"Aah!\" She suddenly snapped forward, the upper half of her body lunging upwards, as she wrapped both arms around my neck. She stared, wildly, into my eyes for a single second - then she slammed her mouth to mine, in a crazy, passionate kiss.\n\nShe came then, mouth open, shuddering against me. A moment later, I lost control completely, and surrendered to my own orgasm.\n\n***\n\nMirella had the most amazing tan lines. She'd obviously worn some delicious bikinis, because there was only a few square inches of area around her beautiful nipples that didn't match the tone of the rest of her flawless skin.\n\nThe tan line around her mound was only slightly more modest; it certainly drew the eye, and somehow reminded me of the sign I'd seen outside a South Carolina eatery: 'Eat Here'.\n\nBut Mirella's ass was a wonder. I wished I'd had a roll of dimes, so that I could bounce the coins off the taut globes of her tanned cheeks.\n\nWe disrobed completely, had a shower, and returned to the bed for a prolonged session of 69. Then we fucked again, with Mirella on top.\n\nShe eventually lay down beside me, her head propped up on one arm. It was hard to read the expression on her face, but I could clearly hear her thoughts. I'd rocked her world, but she'd done the same to me - and she knew it.\n\nShe was puzzled, and yet delighted. Proud, and pleased. Curious, and ... hopeful.\n\n- \"Is Carla still waiting for you?\"\n\n- \"I could send her home.\"\n\n- \"She deserves a rest.\"\n\nMirella rolled over, and reached for her phone on the nightstand. While she sent a quick text, I admired the line of her back and the flare of her hips.\n\nWhen she rolled back towards me, Mirella came closer, and rested her head on my shoulder. I gently wrapped my arms around her.\n\nMirella was the most passionate partner I'd ever had. Janine was just as beautiful, but more clinical. Mirella was more uninhibited - less calculating. In fact, I would've described that night as the greatest sex of my life, except for one thing.\n\nIt wasn't love.\n\nAnd by now, I knew the difference.\n\n***\n\nMirella stayed the night. She made love to me in the morning. That shook me up a bit. I'd been consoling myself that sex with Mirella was just that - just sex. But it felt quite different that morning.\n\nThen we had breakfast together. Cousin Carla returned, with a selection of outfits, which Mirella hung up in my closet, as if she was moving in with me.\n\nIn a way, she was. She still couldn't understand the attraction she felt for me, and seemed determined to stay by my side until she had it figured out.\n\nShe took me shopping (shoes, for her), and then treated me to lunch. I was enjoying every moment that I spent with her.\n\nThis wasn't part of the plan.\n\nI was supposed to seduce 11 women (assisted by magic), and get them to fall in love with me, so that in 'the year of decision' they'd want to have a child by me.\n\nBut was I supposed to fall in love with them? And how could I fall for one of them, when I was already in love with Sophie? It didn't make sense. The more I thought about it, the more my head started to hurt.\n\n- \"Are you okay?\" asked Mirella, a look of concern on her face.\n\n- \"Yes. Just ... thinking too much.\"\n\n- \"Ah.\" She understood immediately - it was precisely what she was dealing with. \"I still don't know what has happened to me - to us ... but I am willing to enjoy it, for today.\"\n\nShe took me back to my hotel, to make sure that what had happened between us last night wasn't just a fluke. It wasn't. That was my conclusion, anyway, when Mirella's eyes rolled back in her head as I ate her to orgasm.\n\nMirella came to our show again that night. I found it interesting that she brought Cousin Carla, instead of her agent Mauricio. Janine happily agreed to call on Carla as one of our volunteers.\n\nThe show was bit of a blur for me. Thank goodness that I had the routine down pat. I could read minds; I just couldn't think straight.\n\nMirella sprang for a late dinner, and then brought me back to her apartment.\n\n- \"I want to see if this place can be magical for us as well.\" she said.\n\nI managed not to panic. Breathe, I reminded myself - just breathe. To make matters worse, Mirella didn't want to show her bedroom right away. She produced a bottle of wine, and two glasses, and sat down in her living room.\n\n- \"Tell me about yourself, Peter.\" she said. \"Tell me about your home, your family. Your school. Your first girlfriend ... \"\n\nMirella was still struggling to understand how she could be head over heels in love with a relatively unattractive klutz who couldn't dance. I was pleased by the 'head over heels' part - but her determination to unravel the 'mystery' was more than little daunting.\n\nThe truth - such as it was - was exotic enough for Mirella. She had sensed that I was some kind of nerd. To have her suspicions confirmed made her feel that she was closer to uncovering the truth.\n\n- \"But ... how did you learn magic? And how did you become such an accomplished lover?\"\n\nThe answer to those questions, though, cut a little too close to the bone.\n\n- \"If I answer one of those questions, Mirella, will you answer one of mine?\"\n\n- \"Hmm ... I suppose that's fair.\"\n\n- \"Which question of yours do want me to answer? Magic? Or sex?\"\n\nMirella figured that she could ask me about magic later. For now, she was still wondering how I could possibly be consistently ringing her bells, when I met so few of her pre-requisites. If she'd seen my profile on a dating website, she would never have picked me.\n\nSo I told her about Janine, and my sexual awakening. It was a good enough story to capture and keep her attention. It also contributed, just a little, to her growing arousal.\n\n- \"My turn.\" I said. \"Tell me where you see yourself in three years. Or five. Your choice.\"\n\nThat wasn't what she'd been expecting, but she had been thinking about her future. The career of a model includes a 'best before' date. Mirella had been considering her options once the demand for her photos began to decline.\n\nNot very sexy, you might think. Think again. Mirella was touched that I was worried about her future. It might have delayed my first visit to her bedroom by a quarter of an hour - but it made that eventual visit all the more intense, and more passionate.\n\nShe spent virtually every hour of the next three days with me. Had I never met Sophie, I would have been head over heels in love with Mirella. As it was, I didn't know where my head was.\n\nMirella took me to the airport. I got a kiss on the cheek from Cousin Carla (which was more than Mauricio got from Janine).\n\nMirella was much more direct.\n\n- \"I have to see you again.\" she said.\n\n- \"So do I.\"\n\n***\n\nWe were waiting for our flight in the airport terminal when I turned to Lillian.\n\n- \"There's something I don't understand.\" I said.\n\n- \"What's that?\" she said, much like the patient professor with their slowest student.\n\n- \"You've cast a spell on ... the women in question. Why do I need to seduce them, as well? And all of this ... serendipity. Is it really necessary?\"\n\n- \"We discussed this before, Peter. A spell can't make someone do something against their will. It can pre-dispose them to like you, but if you're mean or cruel, the spell won't work. That's why we need the combination: magic, serendipity, and your best efforts.\"\n\n- \"Oh. I guess ... I guess I knew that.\"\n\n- \"Which makes me wonder why you're asking now ... is everything alright? Are you having trouble?\"\n\n- \"No. I mean - I'm okay. I'm just trying to ... you know - figure things out.\"\n\nLillian placed her hand on my arm. \"Don't worry, Peter. You're doing a great job. Everything is going to turn out alright.\"\n\nWas it? Then why wasn't I happier about it?\n\n***\n\n#11 Tamara Tampa, Florida #1 Breanna Atlanta, Georgia\n\nWe flew into Miami, and did one show. Then it was back to the Tampa area.\n\nShe'd been hoping that I would come back. She was also unsure of what to do if I did come back. Tamara was a bundle of nerves when I picked her up for our dinner date.\n\nShe thought that I was a decent guy. She was also hopelessly attracted to me (magic, remember?). But she was intelligent enough to wonder what a globe-trotting magician would find interesting about her.\n\nHer husband had shattered her confidence. She found it hard to believe that I could possibly find her interesting - or attractive. I had to change her mind. The only way I could think of to do that was to treat her like a princess. Unfortunately, Tamara didn't believe that she was worthy of that kind of devotion.\n\nShe also didn't want to be one of a sailor's 'girls in every port'. She was more interested in me than ever - but she wasn't ready. She turned me down when I asked for a date the following evening, with a made-up excuse.\n\nI took her home after dinner. She kissed me on the cheek, and went inside - alone.\n\n- \"What are you going to do?' Lillian asked me.\n\n- \"I don't know. I've been fairly patient with her. Safe. Predictable. Maybe it's time I did something stupid.\"\n\n- \"Sounds like that could be right up your alley.\" said Janine.\n\nWe did a show in Atlanta, and Breanna agreed to meet me at our hotel for a late dinner.\n\nI complimented her, flattered her, and then caught up on what had been going in on Atlanta - specifically, in the city's animal control office - for the past couple of months.\n\nShe hadn't come just to talk, though. Breanna wanted proof that my tongue was as good as she remembered. Then she wanted to show off her twerking skills in the reverse cowgirl position.\n\nBreanna ended up staying the night, and called in sick the next morning. We fucked, showered, and shared a late breakfast. Then it was back to my room - which we didn't leave until well past dinner time.\n\n- \"You know, I'd like to meet your friends in Atlanta sometime.\" she said.\n\n- \"That could be arranged.\" I replied - wondering how the hell I was going to produce friends out of thin air. \"Can I introduce you as my girlfriend?\"\n\nBreanna was pleased with that answer. She wasn't quite sure what I was, to her: fucktoy, oddity, fuck buddy ... but she quite liked the idea that I was into her enough to consider telling other people.\n\nI sent her home by taxi that night, claiming that I needed at least a little sleep. Breanna also liked the idea that she'd worn me out.\n\nIn fact, I'd had Lillian rent me a car.\n\nIt takes 6 1/2 hours to drive from Atlanta to Tampa. But I've got news for you: you can shave almost an hour off that time if you leave at 2:00 A.M..\n\nI knocked on Tamara's door at 7:45. She was sitting in the kitchen, in her bathrobe. When she opened the door, she was shocked.\n\n- \"Peter? Wh - what are you doing here?\"\n\n- \"I brought you a coffee.\"\n\n- \"You - I thought you were going to Atlanta.\"\n\n- \"I did. We did a show - not my best. And I spent the whole time thinking about you - until I finally came to a realization. And I had to tell you.\"\n\nTamara was only human. She wanted to hear what I had to say.\n\n- \"You should probably come in.\"\n\n- \"Before the neighbours start to wonder why strange men are showing up at your doorway at all hours of the day?\"\n\n- \"Yes.\" she said, with the beginning of a smile. She led me into her little kitchen. \"How on earth did you get here?\"\n\n- \"I drove.\"\n\n- \"From Atlanta? My God - when did you leave?\"\n\n- \"I forget. After midnight.\"\n\n- \"Here. Sit down. There's bread you can toast. Cereal. I need - just a minute, while I get changed.\"\n\nTamara needed a moment to collect her thoughts. I sat quietly, sipping my coffee. She came back in a T-shirt and jeans. Her hair was a mess - and so were her thoughts.\n\nShe was off-balance, completely unprepared to find me on her doorstep. But she was also astonished that I'd driven through the night to come back and see her. Astonished ... and more than a little turned on. She'd put on a bra, under her T-shirt, but her nipples were poking up proudly.\n\n- \"Peter ... I don't understand: why did you come back?\" She didn't sit down opposite me; instead, she stood at the end of her kitchen table.\n\n- \"For you, Tamara. I was sitting in my hotel room, thinking of you. I know what you're afraid of. You think that you don't deserve to be loved, because your husband left you. You know that I'm attracted to you, but you suspect my motives. You don't want to be just another notch on my belt.\"\n\n\"I understand. But you have to realize - I don't have swarms of groupies in every city I visit. I won't lie to you - there have been a few. But celebrity chasers and magic nerds? That's not what I want. I could tell right away that you were different - that's why I went out on a limb and asked you out.\"\n\n\"Tamara - you're the closest thing to normal I've met in a long time. You're bright, and beautiful, kind and caring ... won't you give me a chance to get to know you?\"\n\nShe didn't answer right away. I stood up, so that we were only a few feet apart.\n\n\"I'm sorry if ... if I'm embarrassing you.\" I said. \"I didn't know what else to do.\"\n\nTamara had images of John Cusack running through her head. She knew that it was me, though, and her emotions were running wild.\n\nShe moaned, and then leaned forward. Her arms went around my waist, and she leaned her head on my shoulder.\n\nI just held her.\n\nTamara began to cry, softly. I could feel her body shake. She turned her head, smearing a tear across my face, and kissed me on the cheek.\n\nI turned my head slightly, so that my lips brushed hers. She shivered, but she kissed me. I held her closer.\n\nShe broke the kiss, and turned her head away. She couldn't help sniffling.\n\n- \"If you want me to go, I will.\" I said. \"I don't ever want to make you unhappy.\"\n\nHer arm went around my neck. \"No. No - I don't want you to go.\"\n\nWe stood in her kitchen for several minutes, holding each other. Then I tilted her head back, and kissed her. Tamara responded hungrily, passionately.\n\nI picked her up, and she immediately wrapped her legs around my waist. I carried her up the narrow stairs, to her bedroom.\n\nTamara helped me as I undressed her, and then divested myself of my own clothing. She had small, flat breasts, and a neatly trimmed bush - which she'd done for me ... just in case.\n\nI did my best to ensure that she wouldn't be disappointed. Tamara hadn't had her pussy licked in ... ages. She kept her eyes tightly closed as I kissed and sucked, and she groaned loudly as I slid a finger into her.\n\nIt was emotional and physical therapy, and I didn't hesitate to provide exactly what Tamara needed. She burst into tears after her second orgasm. I held her close.\n\n- \"Don't push me away. I need you, Tamara.\" I said.\n\nShe was completely passive, when it came to lovemaking. But it was emotionally intense for her, and I respected her boundaries just as much as I tried to meet her needs.\n\nI stayed until dinner.\n\n- \"I don't want you driving at night again.\" she said.\n\nI stayed the night.\n\n***\n\n#7 Ashley Chicago, Illinois\n\nI called Lillian. She understood immediately. She cancelled our shows in Myrtle Beach and Atlantic City.\n\nI stayed with Tamara for several days, and gave her proof of my devotion. There were more tears, and quite a bit more lovemaking.\n\nFinally, though, I had to say goodbye. I took a flight to Chicago.\n\nAshley was perfectly ready to drop everything so that she could 'hang out' with me. Mouth, pussy, big tits ... she put them all at my disposal.\n\n- \"Lindsay would fuck you, too - if you want her.\" she said.\n\n- \"I've told you before, Ashley (I resisted the temptation to call her 'Ash') - I'm only interested in you.\"\n\n- \"You have other girls, though - right?\"\n\nI didn't have an immediate answer for that. I just looked ... surprised.\n\n\"Of course you do.\" she said. \"Guy like you. You need more than one girl to keep you happy. You must have ...\"\n\n- \"Ashley ...\"\n\n- \"You've done threesomes, right? Foursomes? I mean, three girls - I know you could. You have, right?\"\n\nWithout naming names, I let Ashley let know that I'd enjoyed more than one woman at once, and that I'd shared them with my best friend. She loved the story, and showed her appreciation by deepthroating me.\n\n***\n\n#4 Sophie Montreal, Quebec\n\nI allowed myself three days at home to catch up with Sammy, and visit Mom and Bill. Then I was off to Montreal.\n\nSophie opened the door to her apartment with a big smile on her face, showing off all of my favourite dimples.\n\n- \"Hey Robin!\" she said, as she jumped forward to embrace me.\n\n- \"Hello, gorgeous.\"\n\nShe pulled back after our first kiss, looking at me with a slight frown.\n\n- \"Where's the rest of you?\" she said. Sophie stepped back to get a better look. \"Have you lost weight?\"\n\n- \"I dunno. Maybe a little.\"\n\n- \"I thought you would put it on, eating junk food and all those restaurant meals. Peter ... you look tired.\"\n\n- \"I could say the same.\" She had dark circles under her eyes, and the bright light in her eyes was just a little dimmer than usual. \"Are you feeling alright?\"\n\n- \"Just tired, I guess. But you just got here - I don't want to dump all of my problems on you.\"\n\n- \"That exactly what I want you to do. I want to hear all of it.\"\n\n- \"Peter ...\"\n\n- \"C'mon, Soph - I'm going to be worrying about it until you do tell me. And if you don't, I'll just be imagining worse things.\"\n\nShe gave in. \"Okay. It's not the end of the world. I am tired. There's been a lot of pressure at work, and one of the other technicians has been off sick.\"\n\n- \"What about taking some time off?\"\n\n- \"I don't have many holidays left. I used some of them to go see you in Vegas ... and I want to save a couple in case ... in case I want to do something like that again.\"",
        "- \"You're an angel. But that's not everything, is it?\"\n\nShe shook her head. \"No. My Dad has been ... difficult. It's Mom's fault. She was telling him that she'd met you, and Dad got angry because he hasn't, and because Mom is claiming that she's closer to me. They're ... re-visiting old battlefields.\"\n\n- \"And you're caught in the crossfire?\"\n\n- \"Sometimes.\"\n\nI reached out to caress her cheek, and to brush back her hair. Her forehead was warm to the touch. Too warm.\n\n- \"Do you have a thermometer?\"\n\n- \"Why?\"\n\n- \"Because I want to take your temperature.\"\n\n- \"Pete - I'm fine.\"\n\n- \"Prove it. Let me take your temperature.\"\n\nShe finally gave in, and submitted to my examination.\n\n\"You, young lady, are running a fever. Bed - now.\"\n\n- \"I feel fine.\"\n\n- \"You do not.\" I said. \"Bed.\"\n\nSophie didn't really have the energy to fight me. She felt like crap, and was actually a little relieved to be able to give in and let me take care of her.\n\nHer fridge was full; she'd been preparing to cook several meals for us. There were a few ingredients missing, though. I made sure she was resting, and then slipped out. I visited the drug store, and then a grocery store. I got 3 varieties of chicken soup, chicken stock, then a whole chicken and some vegetables.\n\nMy cooking skills are right up there with my dancing ability, but I called Mom and had her walk me through a basic chicken soup recipe.\n\nSophie slept through most of the night. She was exhausted. Unfortunately, her temperature was a little higher. I called on Dr. Google for help. She didn't have a stiff neck, or shortness of breath, or any other worrisome symptoms.\n\n- \"Rest.\" I said. \"Rest and fluids. Including Dr. Grey's famous chicken soup.\"\n\n- \"Famous?\" Sick as she was, Sophie grinned at me.\n\n- \"Okay, first. But you have to try it.\"\n\nShe did. \"You made this?\"\n\n- \"I had some help.\"\n\n- \"It tastes wonderful. Thank you.\"\n\n- \"Anything for my girl. I love you.\"\n\nOops. That just popped out.\n\nSophie grinned again. \"I know you do.\"\n\nShe sweated through her sheets that evening. I made her get up and have more soup while I changed her bed. She seemed to sleep a little easier after that.\n\nShe was much better the following morning, but still weak. As it was a Monday, I called in sick for her. The receptionist (or whoever answered the phone) wished Sophie well, and told me not to worry about it.\n\nSophie's phone rang an hour later. I'd used her phone to find her workplace number, so I recognized the digits when they showed up. I decided to answer it.\n\n- \"Sophie?\" said a male voice.\n\n- \"She's ill.\" I said. \"May I take a message?\"\n\n- \"I want to speak to Sophie. Put her on the phone.\"\n\nI didn't like this guy's tone. \"She's asleep. Recovering from a fever. She won't be coming in to work today. Who are you, anyway?\"\n\n- \"This is her supervisor. You tell Sophie that a hangover is no excuse for a day off. I want her here ASAP.\"\n\nI hung up.\n\nWas this one of the reasons that Sophie was so tired?\n\n- \"Was that my phone?\"\n\n- \"I took care of it, Sweet.\"\n\n- \"Who was it?\"\n\n- \"Your supervisor.\" I said. Then I did a bad thing: I read my girlfriend's mind.\n\nDisgust. Revulsion. She didn't want to talk about him.\n\n\"Is he hard to get along with?\" I asked her, further priming the pump.\n\nDomineering. Crude. Sexual harassment. Abuse of authority.\n\nI made Sophie comfortable, got her to drink a bit, and encouraged her to rest. Then I looked up her workplace, and did an internet search of Dr. Robert Dallaire.\n\nBy noon, I was the lab where Sophie worked. I asked the receptionist, Suzanne, and the security guard about Dr. Dallaire, and read their minds. Confirmation.\n\nI was incandescent with rage by that point, but I managed to control my emotions. Suzanne was willing to follow my instructions; she went off to tell the supervisor that 'Sophie's boyfriend' was waiting to see him.\n\nHe kept me waiting for almost an hour; these 10-cent dictators are all so predictable. He was looking forward to a confrontation, secure in his position, his multiple degrees and his high salary.\n\nDallaire was tall, dark and handsome. He smiled smugly as he saw me, and came to a snap judgment. I was so much beneath him.\n\n- \"Dr. Dallaire.\" I said. \"I'm Peter Grey.\"\n\n- \"The card trick guy?\" he said, with a sneer.\n\nI didn't bother with a clever comeback; I simply unleashed Janine's bladder control spell. Dallaire pissed his pants.\n\nHis eyes went wide with horror as he wet himself. The supervisor ducked sideways and quickly entered his office, so that no one could witness his embarrassment.\n\nI followed him, and shut the door behind me. I snapped a photo of him, so that he wouldn't be able to complain that I'd assaulted him.\n\n- \"I'm not just the card trick guy.\" I said. \"I'm your fucking nemesis. I really can read minds.\"\n\nDallaire just goggled at me.\n\n\"You're thinking of calling the security guard, but you're afraid that he'll see that you've pissed your pants. Besides, Francois is having a smoke outside.\"\n\n\"Now you're thinking that you'll charge me with trespassing. But Suzanne knows that I politely asked to see you, and your security cameras will only show you darting into your office, and then me calmly following you.\"\n\nHis mouth was moving, but no words were coming out.\n\n\"Let me spell it out for you, Doc. You touch Sophie - anywhere - and I will ruin you. I mean it: you'd better not make physical contact of any kind with her - or with any of the female technicians, or Suzanne - or I will end your career.\"\n\n\"The first thing I'll do is to visit your lovely wife, Julie, and your daughter, to tell them about what you get up to at work. Julie will immediately remember that case in Quebec City - what was her name ... Chantal?\"\n\nDr. Dallaire pissed himself a little more - and I hadn't cast another spell.\n\n\"If you say or do anything inappropriate to Sophie - or to any of your female employees - I will fucking end you.\"\n\nAt this point, Dallaire had suddenly begun to believe in magic. I was reading his mind (despite the tremendous concentration and energy required) so that I could spit out secrets and bits of inside knowledge as fast as he thought of them.\n\n\"And if you annoy my girlfriend in the slightest degree, Bob, I'll tell your wife about Yvette ...\" (whoever the fuck that was) And then I stopped reading the Doctor's mind, because some kinks and degenerate hobbies should never be discussed. Or even thought about. I wanted to go home and wash out my mind.\n\nHe was breathing heavily, leaning on his desk, bathed in sweat (and urine).\n\n\"I won't have to come back, will I?\" I asked.\n\n***\n\nSophie took Tuesday off as well, on the recommendation of her supervisor. She was feeling better - enough to sit on her couch and watch a movie with me. It was difficult to concentrate, though, because her phone kept buzzing and ringing, as the calls and texts flowed in.\n\n- \"Okay, Mr. Innocent.\" she said. \"What did you do?\"\n\n- \"Me?\"\n\nSophie gave me the look.\n\n\"I might have had a short conversation with your supervisor.\"\n\n- \"What? Why would you do that?\"\n\nI gave Sophie the edited version of Monday's events, beginning with her supervisor's phone call.\n\n- \"You did that for me?\" she said.\n\n- \"I did that for us.\"\n\nShe leaned her head against my shoulder. \"My hero.\"\n\nI showed considerably more courage later that week, when I agreed to meet Sophie's father and his girlfriend.\n\nThey say that the apple doesn't fall far from the tree. In Sophie's case, I could only hope that she'd fallen from the tree, bounced down the hill, and rolled into the river - to be swiftly carried many (many) miles from her point of origin.\n\nHer Dad was ... a complete dick.\n\nDespite that, we had several wonderful days together after she got better. Actually, I would have to say that my chicken soup brought us closer together, too.\n\nI didn't want to leave her, but I was dealing with my own version of the Prime Directive.\n\n***\n\n#2 Elodie Brugges, Belgium.\n\nSammy came with us on the European tour. I didn't want to leave him behind again, and there were only two women left on the list, so Lillian (or Janine) would only have to run interference twice.\n\nWe did shows in Dublin, Liverpool and Manchester, then a few more in London. I wasn't sure why we used two weeks before hitting the continent - maybe it was to make some money - I wasn't exactly sure how much we cleared from each appearance.\n\nAmsterdam. Brussels. Brugges.\n\nElodie's girlfriend 'won' tickets to our show. She was a bit shy (I was doing my usher bit so that I could examine her at close range.\n\nElodie was ... presentable. Big hair, concealing much of her face, maybe 5'7\" ... she was the type of girl you wouldn't give a second look. She was a professional student, working part-time in a retirement residence. I got the impression that she was kind, and patient.\n\nI gave Janine a qualified thumbs up, so that Elodie was called up as our second volunteer. She did fine. I didn't get much more than the basics from reading her mind. But I did give her the magically charged handshake.\n\nI did a creditable acting job, feigning surprise - my face must have looked much like Elodie's.\n\nWe were pretty sure that she wouldn't hang around after the show. She didn't. That was fine, because Lillian had done her research. Janine and I were well prepared, sitting in the cafe where Elodie and her roommate had their morning coffee.\n\nElodie and her girlfriend came into the cafe, hand in hand. They hadn't caught sight of us. Then Elodie turned to her friend / roommate ... and kissed her on the lips.\n\nYeah ... it was a real kiss. I love you, with tongue.\n\nI turned to Janine, who was staring at the two Belgian girls.\n\n'Houston - we have a problem', I thought.\n\n*****\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "magic",
        "magician",
        "nerd",
        "seduction",
        "travel"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-a-little-magic-ch-11"
}