{
    "title": "It's Magic, You Know",
    "pages": [
        "August 2008. Las Vegas, Nevada\n\n\"Did everyone have a fun?\" he asked with a big smile.\n\nWithout exception, every child hollered, \"Yes!\"\n\nHe bowed, thanked them for being such a good audience, then walked away.\n\nThe woman who'd hired him took him aside as he was leaving and said, \"I was hoping the kids would enjoy the show, but I had no idea you were so good!\"\n\n\"That's very kind,\" he said modestly.\n\n\"No. I'm serious. That was...amazing! I've always loved magic but never really seen a show up close. Even the basic stuff you did was great, but a couple of those tricks just blew me away.\"\n\n\"Again, I appreciate the kind words,\" he told her.\n\n\"Listen. I have a good friend who's daughter is very ill. I know you make money doing this, and it's worth every penny, by the way, but if you would even consider doing something to cheer her up, I'm sure...\"\n\n\"I'll do it,\" he said before she could even finish her thought. \"Just give me her mom's phone number, and I'll contact her. If she's interested I'll do it free of charge.\"\n\n\"You are so wonderful!\" the older woman said as she grabbed him and hugged him.\n\nThe hug lasted far too long making him very uncomfortable, but she'd just tipped him fifty dollars which was the amount he charged for a one-hour show, so he wasn't about to complain.\n\nJakob Bennett was just 18 but had been doing magic since he was ten. He was also a very good looking kid, and this very plain, somewhat overweight, single mom was very much enjoying any excuse to hug\u2014if only briefly\u2014such a handsome young man. \n\nIn terms of looks, it was unusual to see anyone who was as blond as he was, but Jakob was as blond as blond could be almost to the point of his hair looking white. Together his unbelievably blue eyes, he looked almost...pretty. That was due to his having what women often called 'girly eyes' that would have been strikingly beautiful on a female but which made a man like him 'mysteriously sexy'. \n\nThat, coupled with a great smile, a very symmetrical face, and a pleasant disposition, and already being an even six feet tall, made Jakob Bennett a highly sought after commodity. It had been that way for as long as he could remember, and he no longer gave any thought to the looks he'd been blessed with and done nothing to earn. It was just one more fact of life for him, so whether or not this suburban housewife who'd just smothered him for nearly ten seconds of his life hugged him solely based on his external appearance, it wasn't at all surprising.\n\nBecause of those 'hard-won' looks, he regularly spent a lot of time with girls. But no matter how hard they pursued him, magic was his passion and first love. \n\nJakob spent many hours each week perfecting the basics while continuing to add new tricks to his repertoire. Unfortunately, getting access to almost anything beyond the basics cost money, so he'd worked part time and saved what he earned to allow him to continue to expand his craft while perfecting the parts of it he already knew.\n\nHis father was a huge Bob Dylan fan, and had named his son Jakob, with a 'k', after Dylan's son. That Jakob was the lead singer for a once-popular group called The Wallflowers, and in his younger years, Jakob Dylan had those same kind of amazing eyes only with very dark hair rather the striking blond color with which the younger Jakob had been blessed. \n\nJakob Bennett had also received another gift from his mother and father\u2014the gift of giving. \n\nHis parents both worked making them a solidly middle-class family. They weren't rolling in money, but one of the things they had always done was give of their time, money, and other resources to those in need. So from a very early age, that quality had been inculcated in their only child for whom giving and giving back was now second nature.\n\nOn his way home, he called the number this matronly-looking woman had given him and waited for someone to pick up.\n\n\"Hello?\" he heard.\n\n\"Yes, hello. My name is Jakob Bennett.\"\n\n\"The magician,\" the female voice said cheerfully.\n\nJakob smiled and told her that was him by saying, \"Yes, this is he,\" which sounded bookish but was grammatically correct.\n\n\"I just got a call from my friend where you performed for her son's birthday party. I literally just hung up with her. She said you were fabulous.\"\n\n\"Oh, no. I'm hardly anything close to fabulous, but I did have a lot of fun doing the show. The children were all very well behaved, and that always helps,\" he told her.\n\n\"I know my friend asked you do a show for my daughter, Jenni, and she said you wouldn't charge me, but I couldn't let you do it for nothing. I hope you understand.\"\n\n\"I wouldn't be doing it for nothing,\" he told her.\n\n\"Oh. Um, well, the thing is, I'm not really in a position to pay you right now.\"\n\n\"That's okay. I wouldn't take money anyway.\"\n\n\"Then I'm confused,\" she told him.\n\nJakob smiled but didn't laugh before he explained.\n\n\"I get tremendous satisfaction in just making someone smile. So while I wouldn't be getting any money, I would definitely be getting something; something a lot more valuable, I might add.\"\n\n\"That's unbelievably kind of you, but...Jakob? My daughter is very ill. I know it would make her feel better, but please understand. If you haven't seen a child suffering from the worst aspects of leukemia and how they look, it may be a bit...unsettling.\"\n\n\"May I ask how old she is?\"\n\n\"Jenni's four,\" the woman said quietly.\n\n\"Just tell me when and I'll be there,\" he replied without hesitation. He didn't tell her mother, but his first thought was that if this little girl could live with cancer and its side effects, he could stand to see them.\n\nIt was the summer after his senior year so other than a handful of previously-booked events, Jakob's schedule was free and clear. He was starting a full-time job in a week, but for now, time was something he had plenty of, and he was more than happy to try and bring some much-needed cheer to this little girl's life.\n\n\"Mornings are best. That's when she's the strongest,\" the girl's mother told him.\n\n\"Is tomorrow morning okay then?\" he asked.\n\n\"Yes. That...that would be perfect,\" she told him, her voice soft and quiet.\n\n\"Great. Just tell me the exact time\u2014and your address, of course\u2014and I'll be there.\"\n\nShe didn't want him to know she was trying not to cry so she took a long, slow breath then, as she slowly exhaled, and as pleasantly as she could, said, \"Thank you. Very much.\"\n\nShe then suggested 8am before taking another deep breath then said she'd text him her address.\n\n\"My pleasure,\" he told her. \"I'll see you both at eight.\"\n\nThe woman hung up then started to cry. Again. There'd been precious good news in her life lately, and even something as simple as this touched her deeply.\n\nHollie Corbett had just turned 30, and had recently found herself single again after her husband walked away four months ago. He'd always been self-centered, but when Jenni was diagnosed and he realized how much the medical bills would be, and that he'd be unable to do anything he enjoyed that cost money, that was the proverbial straw that had broken the camel's back. Or perhaps in has case, the ass's back.\n\nToo stunned and too hurt to try and convince him to stay, she already realized that letting him go had been the best thing she could have done. She'd tried updating him on his daughter's condition once, and he made it clear he had no interest in what he called his past life. His reply confirmed what she thought, and now she was wishing she'd asked him to leave two years ago. In fact, were it not for Jenni, she found herself wishing she'd never even met him let alone agreed to marry him.\n\nSo now she was on her own trying to cope with this vicious childhood illness her daughter was suffering with as well as the aftermath of a failed marriage, and medical bills so deep she couldn't see beyond the moment. \n\nIn a way, his leaving was the only positive thing that had come out of this as Hollie had always been a kind of pollyannish, pie-in-the sky sort of person where everything was always bright and sunny and adorned with candy canes. Now she understood the harsh reality of life where bad things, sometimes very bad things, happened to good people for no apparent reason. Even innocent little children like Jenni.\n\nActually, there was one other positive thing. Her soon-to-be ex-husband made very good money, and a judge had ordered him to pay not only child support but alimony, as well, with half of the medical bills considered as their joint responsibilities. That allowed Hollie to stay at home with her daughter for now, but just her half of those bills would almost certainly force her into bankruptcy at some point.\n\nSo after yet one more bout in what seemed like an endless series of crying episodes, she got up, washed her face, dried her eyes then went back to trying to carry on with her life one day at a time.\n\nEarly the next morning, Hollie went to check on her precious little girl. The sweet, very bald little girl who had no idea why this was happening to her barely looked when he mother walked in.\n\n\"Hey, honey! How are you feeling?\" she asked.\n\n\"The same,\" her daughter told her, her voice hollow and her eyes sad and listless.\n\n\"Do you think you can maybe eat something yet?\" her mom asked.\n\nJenni shook her head side to side just the slightest amount.\n\n\"Okay. Maybe something to drink?\"\n\n\"Orange juice?\" she asked very quietly.\n\nEven that was a luxury item, but it was something Jenni could keep down, so Hollie tried to make sure to have some on hand at all times.\n\n\"Sure. I'll be right back, okay?\"\n\nThe sick little girl didn't even nod. She just clung to her favorite stuffed animal and...endured...as a Disney movie she wasn't watching droned on in the background.\n\nUnless she was taking Jenni to the doctor, Hollie rarely wore makeup or anything nice. But since she had a visitor coming, she took the time to do both after showering and blow drying her hair. \n\nBecause of these new realities in her life, she gave no thought to her own good looks, something she'd always been very aware of and in which she'd taken an immense amount of pride. Hollie had never gone anywhere without makeup, and she always wore the nicest things she had. Now, nothing mattered but her daughter and getting her well. \n\nShe knew the odds were on Jenni's side, but she was also very aware that a certain percentage of children with this form of leukemia never recovered. She did her best to push that thought to the back of her mind, but in her weaker moments, it was always there scaring her to the point of feeling physically ill. In her better moments, Hollie kept those fears in check and stayed busy every free moment to keep her from having to think about it.\n\nFor now she had company coming so she did her best to look presentable which meant she looked far beyond just presentable. Hollie was a very attractive woman with thick, shiny, dark hair that fell to the middle of her back. She was 5'7\" and a perfect size 4 with very nice, full-B boobs and a tight, round butt and long, slender legs. She had an equally beautiful smile and gorgeous blue eyes to boot.\n\nThat meant that she always looked nice even in a tee shirt with her hair pulled back in a ponytail. She looked beautiful even then, but this morning she looked amazing. Sadly, looking her best no longer gave her any real pleasure, and she was only making the effort out of habit, and didn't bother even taking a final look in the mirror when she finished getting ready.\n\nJakob sent her a text at 7:45 confirming he was on the way and would be there right on time. Once she new he was coming, she went into her daughter's room to let her know they had a visitor coming.\n\n\"Who is it?\" her daughter asked, the slightest change in her voice cheering her mother up.\n\nBefore she could answer, Jenni said, \"Mommy? You look very pretty.\"\n\nShe sat down next to her, smiled, then thanked her before explaining who this guest was.\n\n\"A mujishun?\" her daughter asked in a voice she hadn't heard in quite some time.\n\nShe managed not to laugh at Jenni's attempt to pronounce the word then said, \"Yes. He's coming here especially for you.\"\n\n\"He is?\" she asked as she struggled to sit up in bed.\n\n\"Yes, he is. And he's going to be here very soon.\"\n\n\"Can I go sit on the couch?\" she asked, surprising her mother.\n\n\"Um, sure. Let me help you, okay?\"\n\nHollie picked her up while Jenni clung to Garfield, her current favorite 'pet' and carried her to the living room and propped her up with pillows on both sides as she sat in the middle of the sofa. \n\n\"Are you cold?\" her mom asked sweetly.\n\n\"No. I'm okay,\" she said. \"Will the mujishun be here soon?\"\n\n\"Yes, he will,\" she said. \"Do you know what magicians do?\"\n\n\"Yes. They do magic tricks,\" Jenni told her.\n\n\"Well, yes they do,\" her mom said not sure what else to ask or even say after that.\n\nShe was saved by the bell a couple of minutes later and sprang off the couch so fast it startled Jenni.\n\n\"Sorry, honey. Mommy's a little nervous for some reason.\"\n\n\"Maybe the mujishun can make it go away,\" her daughter suggested quietly.\n\nShe smiled as she walked to the door and said, \"Yes. Maybe so.\"\n\nHer friend had let her know Jakob was a 'cutie pie' but she was more than surprised when she opened the door and saw him. Her first thought was that he reminded her of a very handsome extra on a surfing movie from a Frankie Avalon film. He was a slightly thinner version of the 'hunky guy' standing by a surfboard who never said a word. His purpose was to smile and look good, and this young 'mujishun' looked very good.\n\n\"Hi. You must be Jakob. I'm Hollie,\" she said with a smile as she stepped aside.\n\n\"It's a pleasure to meet you,\" he said with a smile of his own.\n\nAs she was closing the door she saw him reaching for her face and was surprised when she didn't pull away. \n\n\"Hold still, okay?\" he said very seriously.\n\nHis hand stopped somewhere around her ear then reappeared in front of her holding a gold coin.\n\n\"I thought I saw this back there,\" he told her.\n\nFor the first time in quite a while, Hollie laughed.\n\n\"It's cheesy, but it usually gets a laugh,\" he told her before pocketing the coin.\n\n\"My daughter will love it,\" she said, now very glad she'd agreed to let him come. \"Let me introduce you, okay?\"\n\nHe followed her into the living room and did his best not to stare at this young mother was the antithesis of the one who'd hugged him much too long. \n\nThe moment he saw the sick little girl, he smiled though it was breaking his heart knowing she was so ill. But he was immediately rewarded with a smile when she saw him, and that perked him right back up.\n\n\"Honey? This is the magician. His name is Jakob. Can you say 'hello'?\"\n\n\"Hello,\" she said very quietly.\n\n\"Well, hello,\" Jakob said. \"Hey. I think something's in your ear!\"\n\n\"It is?\" Jenni said as he reached for it just as he had moments ago.\n\nWhen he pulled out the same gold coin, Jenni smiled which made her mother smile.\n\n\"Is this yours?\" he asked her.\n\n\"No. Where was it?\" \n\n\"Right there. In your ear,\" he told her as he reached for it again.\n\nThis time he began pulling silk handkerchiefs out of it for a full five seconds causing the little girl to laugh.\n\n\"It's no wonder you don't feel good. You had all that stuff stuck in your head!\" he said very seriously.\n\n\"You're funny!\" Jenni told him.\n\n\"Well, I am going to make you laugh a whole lot, okay?\" he told her. \"I just need to go get a few things from my car. Can you sit right there until I get back?\"\n\nJenni nodded and was still smiling, and her mom was on the verge of crying again. But this time, she managed to hold it in as Jakob ran out to get the props he needed.\n\nFor the next forty-five minutes or so, he dazzled and amazed them both. Because Jenni was so young he made sure to do simple things that would make her laugh, but he did throw in a couple of more advanced tricks for the benefit of her mom who said each time, \"Okay. How did you do that?\"\n\nOnce, Jenni told her very authoritatively, \"Because he's a mujishun!\"\n\nAfter his final trick, Hollie applauded and Jenni joined in.\n\n\"Do some more!\" she said.\n\n\"That's all I can do today,\" he told her. \n\n\"Can you do more tomorrow?\" she asked.\n\nHer mother knew that was coming, and now she had to tell her he couldn't come back again when Jakob said, \"That depends on what your mom says.\"\n\nHollie gave him a puzzled look, and Jakob quietly said, \"How about you and I talk privately?\"\n\nShe followed him into the kitchen where he said, \"I'm no expert, but I've heard that laughter can be very beneficial. I can't spend this much time here every day, but I can swing by for five or ten minutes to give her something to look forward to. If you think it would help.\"\n\nHollie was fighting another round of tears as she listened to this young man she'd barely just met make such an incredible offer.\n\n\"You...you would be willing to do that?\"\n\n\"Yes. Absolutely. I do start working full-time next week, but I'm sure we can work something out.\"\n\nHollie knew she was losing the battle and turned away. \n\nJakob knew why and didn't say anything at first. When he saw her body shake he quietly said, \"I'll text you and we can discuss the time, okay?\"\n\nHe saw her nod and with that he went back to the living room where he did one more trick for Jenni before packing up. He came back in to say goodbye and he got his 'thanks' when the little girl held out her arms to hug him.\n\n\"I love hugs!\" he told her as he not only hugged her but picked her up and held her.\n\n\"So did you have fun?\" he asked.\n\n\"Uh-huh. I wanna be a mujishun when I grow up,\" she told him.\n\nNormally, Hollie would have had to look away at any mention of her daughter growing up, but this time she was smiling and felt unbelievably grateful.\n\n\"Well, I hope to be a famous magician myself one day. And famous magicians need beautiful assistants. So maybe you could start out by being my big helper.\"\n\n\"Okay!\" she said before putting her little arms around his neck again.\n\n\"All right. I'll be back tomorrow but I can't stay as long. Will that be okay?\" he asked her after pulling away far enough to see her face.\n\nJenni nodded then Jakob set her back down on the couch.\n\n\"Can Mommy walk Jakob outside, honey?\" Hollie asked.\n\n\"Yes. I'll stay right here,\" her daughter said as though she might actually have the strength to get up and walk away.\n\n\"Okay, and I'll be right back,\" her mother promised.\n\nHollie stopped on the front porch and looked at Jakob then said, \"I can't possibly thank you enough for today.\"\n\nHe smiled then said, \"I got more than enough thanks from her smiles and those hugs.\"\n\n\"Okay, I'm gonna cry again if you don't leave,\" she told him, a real smile on her face.\n\n\"She's such a sweet girl,\" Jakob told her hoping it wouldn't make her cry.\n\n\"Yes. Yes, she is. And she's too young to really know what's going on with her. It's just so...sad.\"\n\n\"I won't pretend to understand what she...or you...might be going through. But I can try and make her smile, and if what they say about that strengthening the immune system is true, then...\"\n\n\"Thank you,\" Hollie told him as she blinked back tears. \n\nShe held out her arms to hug him, and this time, Jakob was happy to hug her back. The fact that Hollie was very attractive was nice, but he'd have hugged her no matter what she looked like because she was such a kind, caring person struggling with something no parent should ever have to deal with.\n\n\"I can't believe you're just out of high school,\" Hollie told him once she let him go.\n\nHe assumed her friend had told her that, too, and assured her it was true.\n\n\"So are you really planning on making magic your...career?\" she asked hoping she'd chosen the correct word.\n\n\"I am,\" he told her. \"I know it's a very tough row to hoe, and there are thousands of wannabe magicians out there\u2014especially here in Las Vegas, but yes, that's my dream.\"",
        "\"I'm in no position to judge how good you are relative to anyone else, but you amazed me. For whatever that's worth.\"\n\nShe smiled then said, \"And you made my daughter smile and laugh, and right now, that's worth everything.\"\n\nHe saw the tears welling up in her eyes again and wanted to change the subject.\n\n\"So...I'll see you again tomorrow then?\"\n\n\"Oh. Yes. Definitely.\"\n\n\"Eight o'clock again?\"\n\n\"Sure. Eight is perfect.\"\n\nHe wished her a good day then turned and headed to his car.\n\nHollie knew she was on emotional overload, but as he walked away she thought to herself, \"Why can't I find someone like that only say...ten years older?\"\n\nLas Vegas, Nevada, ten years later\n\nHollie heard her phone and thought twice about answering it. She'd recently gotten a nasty reminder from her boss about phone calls at work, but when she saw it was Jenni, she stepped into the ladies room and answered.\n\n\"What is it, honey? Are you okay?\"\n\n\"I'm fine, Mom. I'm at home. Watching TV.\"\n\n\"You know I can't take personal calls at work. We need this job.\"\n\n\"I know and I'm sorry, but I'm watching David Copperfield's new act.\"\n\n\"I know you love magic, but couldn't this wait until I get home?\" her mom asked, nearly pleading with her 14-year old daughter.\n\n\"It could, except there's something I want you to see. Turn on video chat, okay?\"\n\n\"Right now?\" her mom said as she checked over her shoulder every other second.\n\n\"Yes. Right now. Just for a minute. Please?\"\n\n\"Okay, just please make this quick!\"\n\nHollie saw her beautiful daughter's face for a quick moment and she smiled and said, \"Okay. Now watch.\"\n\nThe phone turned around and focused on the television.\n\n\"I don't see what's so...\"\n\nHollie stopped talking when she saw him.\n\n\"Oh, my...goodness. That...that looks just like...\"\n\n\"It's him! Mom. It's Jakob! He's opening for David Copperfield. Can you believe that?\"\n\nJakob Bennett had stopped by her house every single day for seven months when Jenni was ill. To this day she was convinced her daughter was alive in large part to his daily visits. He never missed a day, and Jenni looked forward to seeing him more than anything else in her painful life. \n\nOnce she recovered, Jakob came by a time or two the following year just to check up on his favorite fan, but neither of them had seen him since. \n\n\"That's...incredible,\" her mother said. \"Can you record that?\"\n\n\"I already am, Mom. I'll let you go, I just wanted you to see this for yourself. It's just so awesome!\"\n\n\"Yes. Yes, it is, honey.\"\n\n\"Okay, go back to work. Make money. Buy food!\"\n\nHer daughter been in remission for five years before being declared cancer free. She'd also grown up to become her mother's best friend, and as risky as it was to take her call, Hollie was very glad she'd done so. \n\nShe only caught a short glimpse of Jakob, but he was still as handsome as she'd remembered and because he'd matured, possibly even more so. Just seeing him stirred up so many fond memories and a ton of gratitude. He'd never taken a dime from her and wouldn't have had she tried to pay him. So seeing him on his way to making his dream come true was incredibly satisfying to her, and now she desperately wanted to see him to thank him again and offer her congratulations.\n\nHollie rode public transportation as often as possible, and on her way home from work she found out where Copperfield was performing so she could check on ticket prices. They were almost certainly outside her comfort zone in terms of price, but she had to see for herself.\n\nHe was at Cirque du Soleil so no surprise there. What did surprise her was the $65 price for a six o'clock show. It was a very reasonable price for such a quality act, but it was incredibly steep for Hollie.\n\nHowever, Jenni had been asking to see his show for years, and this seemed like the perfect time so she bought two tickets for the following evening and smiled when the credit card charge went through.\n\n\"Yes!\" she said even though she had to be very, very close to maxing out her last card.\n\nJust the reaction from her daughter made the cost of the tickets worth it. Jenni hugged her mom then danced around in a circle, her arms up in the air, saying, \"Gonna go see Coppuh-field, oh yeah, oh yeah!\"\n\nShe smiled at her mom then did another round using Jakob's name, and Hollie gave in and laughed then even joined her daughter for a third round where they went around the living room doing a two-person version of Soul Train. Woot-woot!\n\n\"Do I look okay?\" Jenni asked before they got ready to leave for the 6pm show.\n\n\"You look wonderful, honey,\" her mom told her. \n\nShe knew her daughter would be pretty, she just had no idea she'd be this beautiful so early on. Hollie had never had the money to buy her daughter nice things, but every now and then they found something pretty at a second-hand store or a yard sale, and Jenni was wearing a very cute top they'd picked up a couple of weeks ago for less than five dollars. She'd only recently been allowed to wear makeup, and she was always very responsible with it, and this night was no exception. Because it was so expensive, makeup was a luxury neither of them indulged in very often, but tonight both of them went all out.\n\n\"Thanks, Mom. And you look...amazing!\"\n\nHollie thanked her daughter and trusted she was right. Having just turned 40, she didn't feel very beautiful, and that made her appreciate her daughter's kind words even more. \n\n\"Okay? You ready?\" Hollie asked.\n\n\"Oh, I am SO ready!\" Jenni told her.\n\nAs they drove along they chatted away about what little Jenni remember of the handsome, young boy who'd stopped by every day for months just to make her smile while her mom thought back on how mature he was even then. She knew it had to be nothing more than feelings of gratitude for his unending willingness to give of his time and talent, yet when she was honest she had to admit she'd had feelings of some kind for him. Over time, those feelings became very real to her, although she never once considered even hinting around about it with Jakob. It was too embarrassing to ever admit to anyone, let alone her daughter, but Hollie had fantasized about 'being with him' more than a few times.\n\nThose romantic daydreams that happened mostly before she fell asleep, rarely went beyond them revealing their secretly-held feelings for each other followed by a long, romantic, passionate kiss, but she'd used that fantasy numerous times to help fill the void in her life. In all those years, she'd never remarried and only had one semi-serious relationship. \n\nJakob would be 28 years old now, and the odds were he was either married, engaged, or in a serious relationship with some younger, beautiful woman. Hollie had no expectations of any kind, but she was nevertheless very excited to see this unbelievably kind, generous, and very attractive young man again.\n\nJenni still loved magic, but her interest in becoming a 'mujishun' herself had waned over the years, and Hollie had never tried to persuade her one way or the other. Her daughter loved school and was a straight-A student, and as long as she got the best possible education, her mother would be proud of her regardless of whatever she eventually chose for a profession.\n\nThere were a lot of people there by the time they arrived, but because they had assigned seats they'd already paid for, there was no real issue. And as it turned out, they were reasonably close to the middle and not too far back.\n\n\"These are perfect, Mom!\" Jenni told her when she realized where they were sitting.\n\n\"I almost paid $25 extra for better seats, but we'd only be a few rows closer and we might have been way out on the side,\" her mom replied.\n\n\"I'm glad you didn't,\" Jenni told her as they settled in. \"He might even be able to see us here!\"\n\n\"Oh, I doubt that, honey. The lights are in his eyes, and he's not going to be able to look around all that much. Besides, he probably wouldn't even recognize us.\"\n\n\"Well, I know I've changed a lot, but you're just as pretty now as you were then, so if he sees you, he'll remember you.\"\n\nHollie looked at her daughter and said, \"You are the sweetest daughter any mother could ever have.\"\n\nShe reached over to hug her then said, \"And beautiful, too.\"\n\nJust then an usher walked up to them and said, \"Ladies? I've been asked to move you.\"\n\nPetrified, Hollie reached for her ticket stubs to prove they were in the right seats when the man said, \"No, ma'am. I'm taking you to our VIP seating.\"\n\n\"Wait? What?\" Hollie asked.\n\n\"If you'll please follow me? We don't have much time before the show starts.\"\n\nThe man took them up to the front and showed them into a small, private area walled off from the rest of the seats.\n\n\"Please. Have a seat,\" he said.\n\n\"Mom? What's going on?\" Jenni asked.\n\n\"I have no idea, honey.\"\n\nWhen they sat down and looked up, they were so close to the stage it was almost scary.\n\n\"This is...insane!\" Hollie said as she looked around. \n\nThey were now sitting in large, plush, leather chairs that reclined, and before she could figure out how to lean back, the same usher returned with a complimentary glass of champagne for her and orange juice in a champagne flute for Jenni.\n\n\"Compliments of Mr. Bennett,\" he said.\n\nBefore Hollie could ask what he meant, the man handed them their drinks then spun around and walked away.\n\n\"Mom? Did he just say...\"\n\n\"Good evening, ladies and gentlemen!\" they heard the emcee say. \"And welcome to this evening's performance by the world's greatest magician, Mr. David Copperfield!\"\n\nThe entire room burst into applause as the man himself came out, waved to the audience, bowed, then left the stage after a brief personal introduction of his protege.\n\nHe said, \"Ladies and gentlemen, I've been watching this young man for a couple of years. I knew he was good, but I can now assure you he is an absolutely amazing, first-class magician. He's been with us for a couple of weeks now, and I promise you you will be as impressed with him as I am. So without further adieu, it is my privilege to introduce to you The Amazing Jakob Bennet!\"\n\nThe applause was loud but not thunderous as it had been for the star of the show, but Hollie and Jenni were so mesmerized by what the usher had said and having just seen David Copperfield himself just several feet in front of them they didn't even applaud. Both of them sat there wide-eyed, staring and waiting and barely even breathing.\n\nThe entire room got dark, and then a spotlight illuminated a large, blue curtain in front of them. The suspense built for a few seconds before the curtain opened and the handsome young man they both had known so well ran out, bowed, and immediately went into his routine; a routine involving a stunningly-beautiful assistant in a glittering sequined costume, dark stockings, and five-inch spiked heels.\n\n\"She's gorgeous,\" Jenni said to her mom.\n\nHollie heard her daughter speak, but didn't understand a word. Her eyes were fixated on 'The Amazing Jacob' who was now so handsome it took her breath away. \n\nAs the act progressed, Hollie was able to largely forget about his handsome face and focus on his stunts and tricks and sleight of hand. Each time he performed a trick she thought it couldn't get any better until the next one.\n\n\"Oh, my...\" she heard herself saying out loud time and time again.\n\nShe and her daughter were so focused on the routine it took them a few seconds to realize he was talking to them.\n\n\"Ladies and gentlemen. There are two people in the audience tonight who, I'm sure, had no idea I knew they were here.\"\n\nHe smiled at them then continued.\n\n\"These two beautiful ladies hold a very special place in my heart for reasons I won't go into. However, I would like them to stand up and take a bow.\"\n\n\"What? What did he say?\" Hollie said, her body shaking as her brain deciphered Jakob's words.\n\n\"Stand up, Mom! That's what he said.\"\n\nJenni was on her feet and pulling her mom to hers. They both looked up at Jakob who indicated they needed to turn around.\n\nHollie slowly did so and only then noticed the unbelievably bright spotlight shining in their faces.\n\n\"Smile. And wave!\" Jenni said.\n\nHollie did both but only thanks to some kind of almost-involuntarily control that seemed to take over, as the audience applauded even though they didn't know either of them.\n\nAs they sat back down, Jakob said, \"Wait a minute. I need a new assistant for this next trick.\"\n\nHe walked down off stage, stood in front of Hollie and Jenni, then said, \"Hello. Long time no see.\"\n\nThere was laughter from the crowd as he held a hand out to Jenni who was wide-eyed.\n\n\"Come on. You always wanted to be a...what was it? A...mujishun?\"\n\nJenni's heart was pounding out of her chest as she held Jakob's hand who then helped her up on stage.\n\nHe turned his mic off for a second then asked if he could explain how they knew one another.\n\n\"Okay,\" Jenni managed to say before he turned it back on.\n\n\"Ladies and gentlemen. I present to you The Amazing Jenni Corbett!\"\n\nThe audience exploded in applause, led by her mother, who grabbed her phone and starting videoing her daughter.\n\n\"I first met this beautiful girl when she was very sick. I did a magic show for someone who told me about her friend's four-year old daughter who had leukemia. When this young lady's mother called me I was thrilled to be able to do my magic act for her. And to my very pleasant surprise, her mom was willing to let me come back.\"\n\nHe paused for the laughter then told the crowd he went back every day for quite some time, and hoped that he may have somehow played some small part in her recovery.\n\n\"I heard you're in full remission,\" Jakob said.\n\n\"Yes,\" was all Jenni could say. \n\nMore laughter followed before Jakob said, \"And what did you always tell me you wanted to be when you grew up?\"\n\n\"Oh. A...magician.\"\n\n\"Okay. You couldn't quite say the word back then, but yes. A magician. And I distinctly remember you saying you wouldn't mind being the pretty girl on stage helping a magician. Do you remember that?\"\n\n\"Kind of,\" she said drawing more laughter.\n\n\"Well. Here you are on stage and definitely very pretty. So...are you ready?\"\n\n\"I guess?\" she squeaked.\n\n\"Okay. Then it's time. Jenni. I need you to come over here with me, please.\"\n\nHe took her hand then showed her a huge box. He opened the door, stepped inside, stretched his arm all around to show the audience nothing else was in there.\n\n\"Now, all you need to do is step inside.\"\n\nShe looked in and looked around, too, then stepped in.\n\nJakob turned around then said, \"She was such a sweet kid who's been through so much. And for what?\" \n\nJust as he said that he shut the door so fast it caught people by surprise. He waved a wand over the box then opened the door, and as the crowd expected, she was gone.\n\nThe 'oohs' and 'ahhs' were minimal until a spotlight shone on the booth where she'd been sitting. When Jenni stepped out and waved just a few seconds later the crowd went wild.\n\n\"The Amazing Jenni Corbett, ladies and gentlemen!\"\n\nJenni scared the life out of her mother when she suddenly appeared behind her, and when she sat back down she asked, \"How did you do that?\"\n\nToo excited to talk, it took her daughter a couple of tries to explain.\n\n\"Okay. So as soon as he shut the door, the back opened up and the girl\u2014his beautiful assistant\u2014was right there. She told me to step aside so I did. The floor opened up and she told me to go ahead and go in then follow the arrows and I'd end up here. There was a huge, soft cushion thing right below me so I sat down, rolled over, and followed the arrows that led to a trap door right behind us.\"\n\n\"Oh, my gosh! That's all there was to it?\" her mom said.\n\nWhen Jenni didn't answer, her mom was confused. Until she looked up and saw Jakob standing there again with his hand out calling her name.\n\n\"No. Oh, no! Not me!\" she said even as Jakob grabbed her hand and pulled her to her feet.\n\nHe turned his mic off again, and as they walked back up on stage, he said, \"Wow. You're even more beautiful than I remembered.\"\n\nThe mic came back on just as she said, \"Yeah, right!\"\n\nHollie heard herself then heard the laughter and didn't know what to do.\n\n\"And this, ladies and gentlemen, is my former assistant's beautiful mother, Ms. Hollie Corbett!\"\n\nThere was more loud applause before Jakob said, \"She's not only beautiful, she's the most devoted and dedicated mom I've ever met. Well, with the possible exception of my own mother, of course.\"\n\nHe paused, smiled then waved to the audiences and said, \"Hi, Mom!\" drawing another round of laughter.\n\nWhile looking at Hollie he then said to the audience, \"And she also happens to be the very first woman on whom I ever had a crush!\"\n\nThere was more loud laughter and applause, and Hollie simultaneously wanted to melt into the floor and hug him.\n\nThe trick Jakob performed with her help was no less amazing to the audience, and when it was over, even she couldn't explain how it worked.\n\n\"I...I don't know,\" she told Jenni after taking her seat when her daughter asked how her trick was done. \"I was in this tank and then I wasn't and then I was.\"\n\n\"This is SO cool!\" her daughter said as they sat back to watch the rest of his act before David Copperfield himself wowed them for another hour.\n\nWhen Jakob finished his last part of the act, he bowed and thanked the audience for being so great. His beautiful assistant held up a black cloak in front of him then pulled it away with Jakob nowhere to be found.\n\n\"What? No way!\" Jenni said. \"How did he do that?\"\n\n\"I have NO idea!\" her mom said over the applause.\n\n\"It's not all that hard,\" they heard a male voice say from between their heads.\n\nBoth of them shrieked, but no one heard.\n\n\"Mind if I join you?\" Jakob said.\n\n\"Oh! I'm so going to kill you!\" Hollie said after her heart stopped racing.\n\n\"Sorry. I didn't meant to scare you,\" he told them both. \n\nThere were six seats in the booth, so Hollie moved over and let Jakob in between them.\n\n\"Are you enjoying yourselves so far?\" he asked.\n\n\"Are you kidding? This is the most fun we've had in...\"\n\n\"Since I was sick and you came to our house,\" Jenni told him, finishing her mom's sentence.\n\n\"Good. But as they say, you ain't seen nothin' yet,\" Jakob replied just as the place erupted\u2014literally\u2014as a 'volcano' on stage blew its top. Out of the 'ashes' David Copperfield appeared and bowed before waving to the crowd.\n\n\"I've seen his act a hundred times, and I still find myself in awe every single time,\" Jakob told them as the main attraction welcomed everyone.\n\nBy the time the performance ended, the ladies had been wowed, too. Jakob's act was very good, but it paled in scope to the one they'd just seen.\n\n\"Come on. I'll introduce you,\" Jakob said after his mentor left the stage.\n\n\"Seriously?\" Hollie said, not sure she heard correctly.\n\n\"Yes. Seriously. Come on,\" he said.\n\nJakob stood up, offered each of them a hand, then offered an arm to each after turning around.\n\n\"How did you know we were here?\" Hollie asked as Jakob led them to the side of the auditorium then back though a door that looked like no one ever used.\n\n\"Hey, I'm a 'mujishun', remember?\" he said with a laugh.\n\n\"I can't believe you still remember that,\" Jenni said. \n\nJakob laughed and told her, \"The Amazing Jakob sees all, hears all, and knows all.\"\n\nBoth she and her mother laughed as they walked into the main area.\n\n\"Wow. This is...incredible!\" Hollie said as she looked around.\n\n\"Wait until you see David's dressing room,\" he told her.\n\n\"And you're on a first-name basis with the world's greatest magician. I'm impressed,\" Hollie told him.\n\n\"He's one of the nicest, most approachable people you could ever meet. If you can approach him. Being that famous makes going anywhere a real challenge, and there are a lot of kooks out there so security is a real concern. But if you're someone he knows isn't a threat, he's as kind as the day is long.\"",
        "Meeting 'the man' himself was a true highlight of their lives. Hollie was duly impressed while Jenni was in awe.\n\n\"You two are quite the able assistants,\" Copperfield told them after getting acquainted for a minute or so. \n\nNeither of them spoke so he said, \"Jakob told me you were here and how much you both mean to him.\"\n\nHe looked right at Jenni then said, \"I am very happy to know you're doing so well.\"\n\nJenni's smile was so big her mom thought her face might break.\n\n\"Thank you,\" Jenni managed to say.\n\nThey, rather\u2014he\u2014talked for another minute or so then let them know he had to get ready for another show while telling them he was genuinely glad to meet them.\n\n\"Could we...maybe get an autograph?\" Jenni finally managed to ask.\n\n\"It'd be my pleasure,\" the star told them. \n\nNeither of them had anything for him to write on so he asked if they'd like a signed photograph. \n\n\"Sorry. I don't really have anything else to offer you,\" he said modestly. \"Will that be okay?\"\n\nJakob was enjoying watching his star-struck 'girls' interact with their first famous person ever, and once they finished they both still had smiles glued to their faces.\n\nHe walked them out, and on the way he said, \"I'm opening for David so I can't talk, either, but I would love to see you both again. Could we maybe get together sometime soon?\"\n\nBefore Hollie could say a word her daughter blurted out, \"Yes! Anytime!\"\n\nJakob laughed politely then looked at Hollie.\n\n\"I think it would work better if I coordinated a time with your mom.\"\n\n\"We'd like that very much, Jakob,\" she told him.\n\n\"Do you have your phone?\" he asked her.\n\n\"Oh. Sure,\" Hollie replied as she opened her purse.\n\n\"Are you sure?\" Jakob asked as he dangled it in front of her.\n\nBoth of the ladies' eyes opened wide in disbelief as he handed it to Hollie.\n\n\"I'm not even going to ask how you did that,\" she told him just before he reached out to near Jenni's ear.\n\n\"And you might need this,\" he said as he handed her one of her earrings.\n\n\"How...what...how did you do that?\" she asked.\n\nJakob only laughed as he handed it to her.\n\nAs she put it back in her ear lobe, Jakob asked Hollie if he could give her his private number.\n\n\"Yes. Of course,\" she said as she opened her 'contacts' page.\n\n\"Oh, good. Because it's already in there,\" he told her.\n\nShe scrolled down to 'J' and big as life, there it was.\n\n\"Okay. That's just...scary!\" she said as Jenni looked over her shoulder to see for herself.\n\n\"You really should use a password that isn't your daughter's birthday,\" Jakob told her with a smile.\n\nAll she could do was shake her head and laugh.\n\n\"I really do need to run, but it's been great seeing you both again.\"\n\nHe smiled at them then said, \"You know, I've thought about you\u2014both of you\u2014many, many times over the years, and I owe you an apology for not staying in contact.\"\n\n\"Don't be ridiculous,\" Hollie said. \"You've been busy building a life for yourself, and I have to say, you've done an amazing job of it.\"\n\n\"Thank you, Hollie. That's very kind of you. I really do need to go, but I promise I'll call soon. You both take care, okay?\"\n\nHe reached out for Hollie's hands, took them, then kissed her on the cheek before doing the same to Jenni.\n\n\"That's her first kiss,\" her mom said. \"Ever.\"\n\nWere he not someone with whom they had a special connection, Jenni would have died of embarrassment because he was so incredibly handsome. But because she did know him, and because she was also once again star struck, she didn't even hear her mom.\n\n\"You take care now!\" Jakob said with a wave of his hand as he turned to leave.\n\nHollie turned to her daughter and said, \"Just...wow!\"\n\n\"I know, right?\" Jenni said. \"No one is going to believe me!\"\n\n\"Oh, yes they will,\" her mom said as she held up her phone. \"I've got it all right here in the palm of my hand!\"\n\nJenni hugged her mom and said, \"Mom? This was only the best time...ever!\"\n\nHollie had thoroughly enjoyed herself, too, but knowing how much her daughter loved the show made it all worth it. And she hadn't thought about money or bills once all night until just then, one more thing that made the last couple of hours very memorable.\n\nHollie was reasonably sure Jakob was being polite when he promised to call, so she really wasn't expecting to hear from him. And after four days, she'd forgotten all about. Until her phone rang that evening.\n\n\"Hello?\" she said, knowing only it was from someone named 'Unknown Caller'.\n\n\"Hollie? Hi. It's Jakob.\"\n\nSeveral seconds passed in complete silence before he said, \"Bennet. The magician guy?\"\n\n\"Yes. Jakob. Of course. How are you?\"\n\n\"I'm great, actually. And I do apologize for taking so long to call. I'd try and blame it on work, but that's just pathetically lame, so all I can do is take the hit for it.\"\n\n\"Oh, no. It's fine. Really,\" she told him. \"I'm just glad you did.\"\n\n\"Well, that makes me very happy to hear you say that. I had such a nice time with you and Jenni I was hoping you might not be thinking something like, 'What's wrong with that guy? Just because we had an okay time doesn't mean I want him bothering me'.\"\n\nNow Hollie laughed.\n\n\"Why would I ever think anything like that, Jakob? After all you've done for us, it's a pleasure to talk to you anytime.\"\n\nShe could tell he was smiling when he replied to her.\n\n\"That's a relief,\" he said. \"I know I mentioned getting together with you in the near future, so...\"\n\n\"Oh, that's okay,\" Hollie told him before she even knew what he was about to say. \n\nShe assumed he was about to tell her he was too busy, and she wanted to make sure he knew she wasn't offended.\n\nShe heard him laugh then say, \"I didn't quite finish what I was trying to say.\"\n\n\"Sorry! I...I just thought you were letting me know you were really busy or maybe, you know, not really all that interested.\"\n\n\"Hollie? May I please ask you something before you make any more assumptions?\" he said, clearly being playful.\n\n\"Um...yes. Sorry. I'll be quiet. I promise.\"\n\nJakob chuckled then tried again.\n\n\"I was hoping you might let me take you to dinner this weekend. It would have to be Sunday because we have shows on Friday and Saturday, but if you're free, I'd love to see you again.\"\n\n\"Oh. Um, well, that...that sounds fine. It's just that Jenni isn't here right now, but I'm sure she'd love to do that.\"\n\nShe heard Jakob laugh again, and wondered what was so funny.\n\n\"I was kind of hoping it could just be the two of us,\" he said.\n\n\"I...I don't understand,\" Hollie told him.\n\n\"When I told you I thought about you often, that was true. My memories of Jenni are of a very sick little girl, who for a few months, didn't have any hair. But I wasn't kidding when I said you really were my first-ever crush, Hollie.\"\n\nShe sat there trying to make sense of what he'd just said, and again, after several seconds of silence, Jakob spoke.\n\n\"Did I just...gross you out or something?\" he asked as though he was very concerned he'd possibly offended her.\n\n\"What?\" she asked, still not sure she'd heard him correctly.\n\n\"I know I was just 18, but you were so beautiful,\" he told her. \"And I have to tell you, Hollie, you're just as beautiful now as you were the day I met you.\"\n\n\"Wait. So...so are you...are you asking me...is this...a date?\" Hollie asked, her voice getting higher with each word.\n\n\"Well, yes. At least I'm pretty sure that's what it's called.\"\n\n\"Wait,\" she said again as she sat up straight and tried to clear her head.\n\n\"You're quite possibly the most handsome young man I've ever met, you're famous now, and...you're asking me out? On a...date?\"\n\nJakob tried not to laugh but couldn't help himself.\n\n\"I'm hardly famous. I'm sure I'm slightly more well-known than I was before David gave me this amazing break, but I don't think anyone outside of some of those who've seen my opening act would even know my name. But that aside, yes, I am asking you out. On a date.\"\n\n\"I...I don't understand,\" Hollie said, her head still reeling.\n\n\"Okay, well, let me see if this helps. When I was 18, I didn't have enough money to pay for a date, let alone my own car to drive to take you on one, and I always felt like you'd just laugh at me if I ever asked you because, well, I was...18. But I'm not 18 anymore, I have a reasonably nice car, and I can definitely afford to buy you dinner. And after seeing you again, I realized I'm still as attracted to you as I was ten years ago, and not just to your very lovely...exterior.\"\n\nHollie didn't speak again, so once more, Jakob did.\n\n\"Does that help?\" he asked.\n\n\"I'm not sure,\" Hollie said, her voice now rather quiet. \n\n\"No?\"\n\n\"Well...I...I don't know. I mean, ten years ago, I was still older than you are now, Jakob. And well, ten more years have passed. I'm sure you noticed that when we talked.\"\n\nThis time he didn't laugh.\n\n\"No, that's not something I noticed. But what I did notice was that your smile still kills me. I also noticed that you're still the same kind, amazing, beautiful woman I had a crush on back then, and I also realized that if I didn't ask you out, I would never forgive myself.\"\n\nThere was another lengthy period of silence before Hollie spoke.\n\n\"Jakob. I...I'm flattered. I truly am. I'm just not sure I understand. I mean, you're still...gorgeous and I'm...\"\n\nA couple more seconds went by before Hollie said, \"And I'm...40. I'm 40 years old, Jakob. I think you're somehow seeing me the way I was when I was much younger.\"\n\n\"No. That's not true,\" he told her. \"I saw you quite well, Hollie. Remember the big, bright spotlight?\"\n\nHe laughed politely then continued by saying, \"And I saw an even more beautiful woman than the one I had such a thing for ten years ago.\"\n\nWhen she didn't reply, Jakob felt like this was possibly a mistake.\n\n\"I uh, I'm sorry if I made you uncomfortable. I should have realized you're always going to see me as the young boy who came to your house to do magic tricks, and now that I've made a complete fool out of myself, I think I'll just...\"\n\n\"Jakob? Can you...can you give me some time to think about this? Please?\" she asked very sweetly.\n\n\"Sure. Of course,\" he said immediately. \"Take whatever time you need.\"\n\n\"I need to talk to Jenni. She...idolizes you. And I...\"\n\n\"I understand. I really do. That's something else I should have thought about, too. It would seem my social skills need a lot of work.\"\n\n\"No. It isn't that, at all,\" Hollie assure him. \"It's just that, well, this was so...unexpected.\"\n\n\"You're right. About everything,\" Jakob told her. \"I just couldn't think of a better way to tell you how I feel, and it would appear I've pretty much blown that, too. Right out of my...my um...rear end.\"\n\nHollie laughed a nervous laugh then assured him he'd done no such thing.\n\n\"I just need some time to think about this.\"\n\nWhen he didn't reply, Hollie said, \"I'm not saying 'no', Jakob. I'm just saying I need to talk to my daughter and think this over. Is that okay?\"\n\n\"Yes. Of course,\" he said again. \"You can call me\u2014or text me\u2014at this number. Anytime. Whenever you've made up your mind, please let me know. Either way.\"\n\n\"I will,\" she said, her voice sounding like she was on the verge of crying. She wasn't, but that's how it must have sounded to him.\n\n\"It was very nice talking to you, Hollie,\" Jakob told her.\n\n\"Yes. You, too. And I really am glad you called.\"\n\n\"So...I'll uh, I'll look forward to hearing from you.\"\n\n\"Okay. I'll let you know. Soon. Okay?\"\n\n\"Goodbye, Hollie,\" he said politely.\n\n\"Bye,\" she said just above a whisper as the phone went dead.\n\nHollie sat there for nearly an hour staring into space trying to understand why this phone call was causing so much inner turmoil. It really made no sense to her at all. It should have been little more than a pleasant chat that ended in something like, 'that is so sweet' followed by a laugh indicating it was a silly thought, then ended.\n\nBut she hadn't said or thought anything like that. So what was she thinking? What was she feeling? After an hour, she still didn't know, and had Jenni not said something to her, she might have gone on wrestling with her conflicting thoughts.\n\n\"Mom? Were you talking to someone an hour or so ago?\"\n\nShe'd been upstairs listening to music, but thought she heard her mother talking.\n\n\"Um...yes. Jakob called.\"\n\nJenni's eyes got wide and she moved over to her mom and said, \"What did he say?\"\n\n\"It was all so...confusing,\" her mother replied without looking at her. She just seemed to be staring into space.\n\n\"Earth to Mom!\" Jenni said as she bent down and put her face right in front of her mom's.\n\n\"Oh, stop!\" her mom said, finally smiling.\n\n\"So...what did he say? Tell me!\" Jenni asked again. \"What was so confusing?\"\n\n\"He um...he apologized for not calling sooner.\"\n\n\"Oh, wow. That is confusing,\" her daughter teased.\n\nHollie looked up at her then said, \"And...he asked me out.\"\n\n\"Whoa! He...what? He asked you out? Like...on a date?\" her daughter said, the surprise and disbelief heavy in her voice.\n\n\"Yes. On a date,\" she replied, her voice nearly hollow.\n\n\"You said 'yes', right? Please tell me you said 'yes'.\"\n\nHer mom looked back up at Jenni then asked, \"Why would you say that?\"\n\n\"Duh! He's like the nicest person we've ever met. He's freaking gorgeous. And he's...famous!\"\n\n\"He's not...famous,\" Hollie said, unconsciously echoing Jakob's comment to her.\n\n\"He's not David Copperfield, but he's on stage with him. That's more famous than anyone else either one of us knows, right?\"\n\n\"Right,\" Hollie replied very quietly.\n\n\"Mom. Why are you even thinking about this? He's a great guy! And did I mention he's freaking gorgeous?\"\n\n\"Jenni. Honey. You need to think about this. He's...28. As in 28 years old. Or...young.\"\n\n\"So? He's a grown man, Mom. I mean, if I was like...18...and he asked me out, I would so say 'yes'!\"\n\n\"And I would so be upset,\" her mother replied firmly but politely.\n\n\"Well, okay. That would still be a little too old for me, but...it is Jakob Bennett.\"\n\n\"Yes. Yes, it is.\"\n\n\"But it's not the same thing with you being older,\" her daughter insisted.\n\n\"Why not?\" her mom asked as she looked up at her daughter again.\n\nJenni sat down next to her then said, \"Because while 18 is too young to go out with someone who's 28, 28 isn't too young too have a relationship with someone who's...older.\"\n\nHer mom finally smiled before saying, \"Oh, my. You are so grown up, honey.\"\n\n\"So you'd let me go out with him? If I was 18?\" she teased.\n\n\"Not a chance,\" her mom told her. \n\nJenni smiled then took her mom's hand and said, \"You're the best mom in the whole world. You've sacrificed so much for me, and you almost never do anything for yourself. Jakob obviously likes you, so why don't you go out with him? Just once. See how things go. If they bomb, no big deal. But what if they don't? What if you really like him, too?\"\n\nHollie sighed then said, \"I love you so much.\"\n\n\"Enough to take my advice this one time?\"\n\nJenni's smile, along with her words, melted her heart.\n\n\"Tell you what. I'll think about it.\"\n\n\"Seriously, right? You'll seriously think about it?\"\n\n\"Yes. I'll do that,\" her mom said.\n\n\"Promise?\" \n\n\"I promise.\"\n\nJenni hugged her mom then said, \"Don't think too long, okay?\"\n\nHollie smiled but didn't reply as her daughter pulled away; her daughter who was growing up so fast and who was already so smart and intuitive. Was it possible she was right? Would it be so bad to say 'yes' to one date and see how things went? If she did, it wasn't like she leading Jakob on, not that she even could, but it didn't come with any strings attached, and he had been such a blessing where Jenni was concerned. Even so, she didn't 'owe' him anything. Then again, he wasn't trying to call in a favor. He'd simply let her know he thought she was...a beautiful woman he'd like to get to know better.\n\nAnd that realization is what scared her the most.\n\nHollie was up early the next morning getting ready for work while Jenni was getting ready for school.\n\n\"Morning, honey,\" Hollie said when Jenni sat down to eat.\n\n\"Hey, Mom,\" she said as she poured herself a small amount of cereal and a splash of milk.\n\n\"Did you sleep okay?\"\n\n\"Uh-huh. How about you?\" Jenni asked as she chewed.\n\n\"I had a pretty rough night.\"\n\n\"Because of your upcoming date?\"\n\n\"Jenni. You know I haven't decided yet.\"\n\n\"Okay. But is it really that difficult?\" her daughter asked.\n\n\"I don't know. Maybe. I guess it just doesn't make sense.\"\n\n\"Why? Why doesn't it make sense, Mom?\"\n\n\"I thought I covered all that last night,\" her mom said.\n\n\"You did? I don't remember you really covering anything. You mentioned the age difference, and I told you why that wasn't a big deal. Did you already forget?\"\n\nJenni quickly took a fourth bite and was done eating. She got up, rinsed out her bowl, and dropped it in the dishwasher.\n\n\"You don't think it's...strange?\" her mom asked.\n\nJenni walked over to her mother, who was having coffee for breakfast, and said, \"I don't think it's strange at all.\"\n\nShe took her mom's coffee cup away, set it on the counter next to her, then said, \"Mom. You're beautiful. And not...for someone your age, okay? You're very pretty, and you're an awesome person. And you deserve to be happy. I'm old enough now that you should stop worrying so much about me and pay more attention to yourself and your own happiness.\"\n\n\"I'm...happy,\" her mom said somewhat defensively.\n\n\"Not really,\" Jenni told her as politely as she could. \"Look. I know how much you love me. I've never once doubted that. But you have a life, too, Mom. You can't keep living your life for me. You need to live your life for yourself from now on.\"\n\n\"That sounds a little selfish, don't you think?\" Hollie said.\n\n\"Mom. You're the last person who'd ever be selfish. You know that, and I know that. You also know that's not what I meant. All I'm saying is you can take time to be happy and still be my mom. You know that, right?\"\n\nHollie stood there for a moment looking at her daughter then said, \"Jakob told me he thought I'd always see him as the 18-year old boy who came by every day to cheer you up.\"\n\nJenni smiled then asked, \"Do you? Is that how you still see him? And if so, is that fair?\"\n\nHer mom nearly smiled as she said, \"You're making this very hard for me, you know.\"\n\n\"Why? Because I won't get on board and tell you he's totally wrong for you or that it would be a huge mistake to go out with him? If so, then yes, I'm making this hard for you,\" Jenni said before smiling happily. \"Intentionally.\"\n\n\"So you think I should say 'yes'?\" her mom asked.\n\n\"Uh-huh. I do. I think you should text him right now before you lose your nerve.\"\n\nJenni saw her mom's phone about three feet away and walked over to get it. She turned around and handed it to her mom then said, \"Go ahead. It won't hurt. I promise.\"\n\n\"You're sure?\" her mom asked more for her benefit than for Jenni's.\n\n\"Yep. One-hundred percent.\"\n\n\"Okay. Then I...guess I will,\" Hollie said.\n\n\"Now, Mom,\" her daughter said as she pointed to the phone. \"I'm not leaving until you do.\"\n\n\"I'm still not sure this isn't a big mistake,\" her mom said as she turned her phone on.\n\n\"I really am staying right here until I see you hit 'send',\" Jenni told her as she tried not to smile.\n\n\"Okay. All right. I'll text him!\"\n\nJenni tried to watch as her mom typed, so Hollie pulled the phone away and turned her back. She was smiling now and didn't want her daughter to know.\n\nShe quickly typed out her text then hit the send button.\n\n\"Okay. All done!\"\n\n\"Mother?\" Jenni said waiting for confirmation.\n\n\"I'm not showing you what I wrote!\" Hollie said as she tried to hide the phone.\n\n\"All I want to see is his name. Then I'll go brush my teeth and get ready to leave.\"\n\nHollie covered up the text while leaving Jakob's name visible.",
        "There was a 'bloop' sound indicating a received text just as she held it up. Jenni saw both his name and his reply.\n\n\"Hollie, I was thrilled to get your reply, and even more so that you said 'yes'. I can't wait to see you again! I'll text you the details soon. Jakob.\"\n\nHollie realized what was going on but only after she knew her daughter had read the message.\n\n\"Well, well. Someone is thrilled because of something my mother wrote to him!\" Jenni teased. \"Who'd have thunk?\"\n\n\"I cannot believe you read my text!\" Hollie said as she turned it around to read for herself.\n\n\"I didn't,\" Jenni told her. \"I read Jakob's.\"\n\nHer mom was smiling like she hadn't seen in so long it made Jenni smile, too.\n\n\"He did say that, didn't he?\" Hollie said as she read the text for herself.\n\n\"Yes, he did! See? I told you so, right?\" \n\n\"I...this...this is...crazy! I can't believe I'm going out with Jakob.\"\n\nShe looked at her daughter, shook her head, then said, \"Our Jakob.\"\n\nWhen her mom looked at her, Jenni saw the smile and squealed.\n\n\"Well you are, and I am SO happy for you, Mom!\" she said as she hugged her mother.\n\nHer mom not only hugged her back, she surprised her when she said, \"Oh, my gosh. I have a date! I need something to wear. Something nice. But I don't have anything n...\"\n\n\"Mom! Settle down. We'll find something, okay? You and me. We'll go look together. After you get you home tonight. All right?\"\n\nHer mom was on the verge of tearing up as she reached to hug her daughter again.\n\n\"I don't know what I'd do without you,\" she told Jenni.\n\nJenni pulled away and looked at her mom then said with a straight face, \"Yeah, I'm kind of cool like that, huh?\"\n\nHer mom laughed a genuine laugh which made Jenni laugh before they hugged one more time.\n\n\"Hey. You're gonna be late. Go. Get ready,\" Hollie said as she playfully pushed her daughter away.\n\nAs Jenni walked away, she was still smiling and started singing, \"Mom has a boyfriend, mom has a boyfriend!\"\n\n\"Do not!\" her mom called out just as playfully even as she wondered if maybe she did before reminding herself this was one date and one date only.\n\n\"It's probably more of a 'pity' date than anything else,\" Hollie said to herself before pouring the rest of her coffee down the sink then going to brush her teeth, as well.\n\nHollie kept her phone on vibrate at work, and when it buzzed around noon, it startled her to the point she nearly dropped someone's order. After setting the plate down, she took a quick peek and saw it was from Jakob, so she pulled it out of her apron pocket and read it as fast as she could.\n\n\"Hollie: I've been on top of the world all morning. So...would dinner at The Top of the World be okay with you?\"\n\nThe restaurant was located on the 106th floor of The Stratosphere Tower and afforded an amazing view of the city. It was also very expensive, so Hollie had never been there.\n\nJust the thought of spending that much money on one meal ran counter to everything in her life. Taking Jenni there for dinner would cost more than they'd spend for groceries over a two-week period of time. And yet she did her best to put those fears aside and try and consider her own happiness for a change. It wasn't easy, but Hollie had to start somewhere, so she accepted his proposal.\n\n\"Proposal. Now that's funny!\" she told herself as she quickly replied.\n\n\"Yes. That sounds...wonderful!\" was all she wrote before hitting 'send'.\n\nHis reply came back seconds later.\n\n\"Great! I'll pick you up at seven, okay? And I really can't wait to see you!\"\n\nHollie had no idea she was smiling until another waitress said, \"You got a boyfriend or something?\"\n\nHollie nearly dropped her phone as she slid it back into her apron pocket.\n\n\"Me? No. Just something...funny. That's all.\"\n\n\"Uh-huh. Okay. We can go with that,\" the younger woman said, not buying her explanation at all.\n\nThe smile was glued to her face the rest of the shift, even when she didn't get a tip from two men who'd ordered meals, drinks, and dessert.\n\nAs she got ready to leave, her fellow waitress said, \"I'm happy for you. You know, for your non-boyfriend boyfriend.\"\n\nHollie started to deny it again when her friend said, \"You are so pretty. I'm only 25, and I'd give anything to look as beautiful as you. So all I can say is I hope you enjoy whatever you're doing with this non-guy of yours.\"\n\nHer comment surprised Hollie to the point of making her want to come clean.\n\n\"I do kind of have a date,\" she admitted.\n\n\"I knew it! And if you're going out with him, he has to hot. He is hot, isn't he?\" the younger woman asked.\n\nHollie smiled then said, \"He's...pretty hot.\"\n\n\"Now I don't know whether to hug you or hate you!\" the girl said before giving her friend a hug. \"Just have fun, okay?\"\n\n\"I will. And thank you,\" Hollie told her.\n\nAs she rode the bus home, she couldn't help but pull her phone out again and reread his short texts. And that's when it hit her she didn't know what day. Or rather...night.\n\nThe thought that it could be tonight, as in just four hours from now sent a chill through her. Panicked, she typed out a reply:\n\n\"Jakob. When you said 'seven o'clock', you didn't mean tonight, did you?\"\n\n\"Yes. Is that a problem?\" he replied within seconds.\n\n\"Yes. Well. I...I don't have another nice dress to wear. And I need to do my hair and makeup. I don't see how I can do that and be ready by then.\"\n\nShe hit send, her hand almost shaking.\n\n\"No worries. When will you be home?\"\n\n\"Ten minutes or so. Why?\" she wrote.\n\n\"Perfect! Just be ready to go as soon as you get there, okay?\"\n\n\"Wait. What do you mean 'be ready to go'?\" she typed.\n\nShe had no idea Jakob was smiling as he replied.\n\n\"A car will be by to pick you up in fifteen minutes. From there, don't worry about a thing, okay? PS. You can trust me.\"\n\nHe added some smiley emojis then sent it.\n\n\"Oh, my...goodness,\" Hollie said to herself as her brain went into hyperdrive worrying about everything from Jenni to what she'd gotten herself into.\n\nShe texted her daughter immediately, and when she read it, Jenni replied just as quickly.\n\n\"Mom. Go! I'm fine. I can make my own dinner and watch a movie at home. I also have homework to do so just go and have a great time, okay?\"\n\nHollie couldn't think of anything to say other than, \"Thank you, honey! I love you so much!\"\n\n\"LuvU2!\" the came instant reply.\n\nStill worried and now a little excited, Hollie got off the bus at her stop then walked to her front porch and went inside.\n\nShe barely had time to pee and wash her hands before there was a knock on the door.\n\n\"I'll get it!\" Jenni hollered, who was even more excited for her mother than her mom was for herself.\n\n\"Hello?\" she said when she opened the door.\n\nThere was a man dressed in black, and she saw a long, white limo pulled up along the curb in front of the house.\n\n\"Ms. Corbett?\" he asked.\n\n\"Yes, but I'm pretty sure you're looking for my mom,\" Jenni said as Hollie came out asking what was going on.\n\n\"Good day, Ma'am,\" the chauffeur said.\n\n\"He's here for you, Mom,\" Jenni explained as her mom stood there dumbfounded.\n\n\"I am,\" the man said.\n\nWhen Hollie neither moved nor spoke, Jenni said, \"Go on. Have a nice time, Mom! You totally deserve this!\"\n\n\"Well, okay,\" she said, a nervous look on her face as she grabbed her purse.\n\n\"And don't worry about when you get home, okay? I'll be fine. Just have fun!\" her daughter said before giving her a hug and almost pushing her out of the door.\n\n\"Bye, honey! I'll call you, okay?\" her mom said halfway to the car.\n\nJenni waved but didn't reply as she watched the driver open the rear door for her mom.\n\nWhen she got inside, Hollie saw the limo was empty except for a large bouquet of red roses.\n\n\"Those are for you, ma'am,\" the driver said before closing the door. \"As is the complimentary bottle of champagne.\"\n\n\"Wait. All of that is for me?\" she asked, not sure she'd heard correctly.\n\n\"Yes, ma'am. But you'll have to hurry if you plan to drink the entire bottle before our first stop,\" the driver said with a smile.\n\nHollie got in and first looked at and then smelled the flowers. The scent was amazing, so she took several deep breaths through her nose before opening the note attached to them.\n\n\"Hollie. I still can't believe you said 'yes'. I hope you enjoy the whirlwind pampering, and I do apologize for the rush. But you should still be ready by seven. I can only imagine how beautiful you'll look, and I can't wait to see you. Jakob.\"\n\nShe had no interest in the alcohol so she took several more whiffs of the beautiful bouquet before taking a look around. She'd never been in a limo, and it was hard not to be impressed. Everything was leather and chrome and 'fancy, shmancy'.\n\nIn order to satisfy her curiosity, Hollie had to play with all of the buttons she could find. Everything was fun and exciting until one button caused the glass to come down separating her from the driver. \n\nHollie panicked and apologized as she hit the button several times in a row sending up and down each time.\n\n\"No need, ma'am,\" the driver said. \"Did you need something?\"\n\n\"No. I think I've had enough surprises for one day,\" she said without explanation.\n\nAs she finally rolled the window back up, she heard the driver say rather cheerfully, \"We'll have to see about that. The night is still young.\"\n\nMinutes later, he stopped the car then came around to help her out.\n\n\"Where are we and what are we doing?\" Hollie asked once she was standing on the sidewalk.\n\n\"We're at the Wynn Hotel, ma'am, and you are going to The Spa at the Wynn while I wait,\" he told her. \n\nHe walked her to the entrance where an attractive woman about her age met her.\n\n\"Ms. Corbett? Hello. I'm Maria. If you'll follow me, please?\"\n\nHollie found herself inside a very high-end spa where Maria offered her a luxurious robe as she showed her where she could change.\n\n\"You can shower in there,\" Maria explained. \"When you're finished, come back out and you can choose from several outfits Mr. Bennett had sent over. Once you've made your selection, we'll take care of your hair, nails, and makeup.\"\n\nHollie had so many questions she had no idea where to even start. So instead, she followed the instructions and got undressed then took a hot, relaxing shower in the most amazing place she'd ever seen. After drying off and wrapping her hair in a towel, she walked back out and found Maria waiting for her.\n\n\"Perfect! If you'll please follow me again, we'll go find something as beautiful as you are for you to wear,\" Maria told her.\n\n\"This is...this all so...crazy!\" Hollie said as they walked over to a small area with three full-length mirrors and a changing room.\n\n\"All of the outfits are in there. Feel free to try as many on as you like. If nothing works, just let me know, and I can have several more here in a matter of minutes.\"\n\nAs Hollie looked at each of the beautiful dresses in front of her, she felt lightheaded. When her phone suddenly rang, it made her jump and almost shriek.\n\n\"Hello?\" she said.\n\n\"Hey. Are you having fun?\" she heard Jakob ask.\n\n\"This is...impossible! And wonderful,\" she told him.\n\n\"I just wanted to make sure everything was going okay.\"\n\n\"Well, now that you're on the phone, could I show you the dresses I'm trying to chose from?\"\n\nShe heard him laugh then say, \"I picked them all out, so I pretty much know what you're looking at.\"\n\n\"Do you have a favorite?\" she asked as she looked through them.\n\n\"I do, but I want you to wear the one you like the most, okay?\"\n\n\"Jakob, that is so sweet. And...not surprising,\" Hollie told him.\n\n\"I'm not into control,\" he told her in a pleasant tone of voice.\n\nShe'd already looked at each of them and knew what she wanted to wear.\n\n\"Okay. I think I've decided.\"\n\n\"Whichever one it is, you'll make it look amazing,\" Jakob told her.\n\n\"I think it's the other way around, but thank you,\" Hollie said.\n\n\"No. It's definitely you improving the dress and not vice versa.\"\n\nThere was a pause before Hollie said, \"Jakob? Thank you for this.\"\n\n\"You're very welcome. I know you're not a 'showy' person, and I was concerned this might be way over the top, but as they say, you only get one chance to make a good impression, and if didn't at least try, I'd never forgive myself.\"\n\n\"You made a very big impression on me,\" she told him. \"Ten years ago.\"\n\n\"Wow. Now I'm the one who needs to say 'thank you'.\"\n\n\"No. Jenni and I can never thank you enough, Jakob,\" she gently corrected him.\n\n\"You can start by getting dressed,\" he told her with a chuckle.\n\n\"Okay. I'll do that,\" she said very sweetly.\n\n\"Bye, Hollie.\"\n\n\"Bye.\"\n\nThe dresses were black, blue, white, red, and gray. All of them were gorgeous, but the final choice was easy. The black dress was stunning, and if she was going to go through with this, she wanted to pull out all of the stops. It was barebacked and sleeveless as well as long and flowing with a slit all the way up the right side.\n\nWhen she walked out wearing it, Maria smiled.\n\n\"I believe Mr. Bennett will be very pleased,\" she told her as she led Hollie to a table with jewelry and accessories of all kinds and colors.\n\n\"Have you worked for Jakob long?\" Hollie asked.\n\n\"Jakob? Oh, no. I don't work for Mr. Bennett. I work for Mr. Copperfield,\" she told her.\n\n\"Oh. I...I just assumed Jakob was doing all of this.\"\n\n\"He is. Well, insofar as this is his idea. But Mr. Copperfield owns the limo and employees everyone who's helped you this evening,\" she politely explained. \n\nMaria smiled then told Hollie, \"His personal assistant called me and let me know that you are to be taken care of like a member of the family. That tells me you must be very special to Mr. Bennett, because he's like family to Mr. Copperfield.\"\n\n\"Oh. Okay,\" Hollie said, even though she was even more confused now than she'd been all afternoon.\n\nThe dress was a size 6 and fit perfectly. As beautiful as it was, it was the jewelry that Hollie found the most interesting. There were over a dozen gorgeous necklaces to choose from, but one stood out immediately to her. It was a nine-strand pearl choker with a gold-plated, diamond, drop-down pendant. Each came with matching earrings so she needed less than two minutes to complete her wardrobe.\n\nMaria helped her with the necklace as Hollie put the earrings in then led her to a large, leather chair where she laid her back and began working on her still-damp hair while another woman started on her nails as a third did her makeup.\n\n\"I...I feel like some kind of movie star,\" she said as the three women attended to her.\n\n\"I believe that's the goal,\" Maria told her with a smile as she began blow drying her hair to the point where she could put in some very large rollers.\n\nAn hour later, her hair and nails were done, and Maria took out the rollers then finished styling her hair.\n\n\"You ready for the final reveal?\" Maria asked after leading her back to the mirrors with Hollie's eyes closed.\n\nWhen she opened them and looked in the full-length mirror, or rather\u2014mirrors\u2014she gasped. Hollie was so stunned she covered her mouth with her hands.\n\n\"Oh, my...goodness,\" she said very quietly when she saw herself.\n\n\"May I take that as a compliment?\" Maria asked with a bright smile.\n\n\"I...I can't believe that's me,\" Hollie said as she turned to the left then to the right.\n\n\"You look stunning,\" Maria told her truthfully.\n\n\"Would you...would you mind taking a picture for my daughter?\" Hollie nervously asked.\n\n\"Of course! I'd be happy to.\"\n\nMaria took several from various angles then returned Hollie's phone.\n\nWithin a minute of sending them, Jenni replied, having no idea what her mom had said to Maria just moments ago.\n\n\"Mom! You're a movie star! No kidding. You are like...totally gorgeous!\"\n\nHollie was still struggling to keep everything in perspective, but this was so over-the-top it wasn't easy. She'd never done anything even close to this in her entire life, and it was overwhelming to say the least. In fact, the process had consumed her to the point of her having forgotten why she looked the way she did which was that she had a date. A date with a much-younger, very handsome man who was evidently trying to sweep her off her feet.\n\nJudging by how lightheaded she felt, she had to admit that in some sense, at least, he was doing a pretty good job of it.\n\nHer driver returned, and when he saw her said, \"I've seen a handful of woman 'transformed' like this, but none quite so perfectly as you.\"\n\nHollie thanked him then wondered how many other women there'd been, so she asked.\n\n\"None for Mr. Bennett,\" he told her. \"All of them have been friends of Mr. Copperfield or someone a close, personal friend of his wanted to impress.\"\n\nHe smiled politely again then told her, \"And if I may say, you are indeed very impressive, Ms. Corbett.\"\n\nHe bowed slightly, and Hollie was so relieved to learn she wasn't just 'one of many' that she laughed a nervous laugh, mostly to let go of some of the pent-up tension.\n\n\"Shall we?\" he asked as he offered her his arm.\n\n\"Oh. Yes. Thank you,\" she said as she took it.\n\nOnly then did she realize how high 4-inch heels were. She'd never worn anything higher than three, and only done that a handful of times. As they walked, Hollie felt like she was towering above the world, even though she now still only 5'11\", a good inch shorter than her date.\n\nWhen they reached the Stratosphere, her driver escorted her to the entrance. She thanked him sincerely, and after telling her it was his pleasure, he disappeared leaving Hollie to wonder what she should do. But as she turned around, there was a very dashing young man about six feet tall with the blondest hair she'd ever seen wearing a tuxedo who smiled at her.\n\n\"I do believe in heaven,\" Jakob said when he knew she recognized him. \"You are even more spectacular than I'd imagined, and I was hoping you'd wear black.\"\n\n\"Thank you, and you look...amazing,\" she told him as she admired the tux and the man who was in it.\n\nLike the driver, Jakob offered her an arm then said, \"Shall we?\"\n\nAs they reached the elevators, someone seemed to be expecting them.\n\n\"You ready for the ride of your life?\" Jakob asked.\n\n\"I...think so,\" Hollie said.\n\nThe man followed them in and closed the door. Jakob nodded to him, and the man pressed the button for the Stratosphere then waited.\n\n\"Watch the numbers,\" Jakob said as they began ascending.\n\nShe had no idea how fast they were they were traveling, but the numbers changed so quickly she couldn't read them, and within seconds it began slowly down before coming to a stop.\n\nThe man opened the door and let them out before disappearing and heading back down.\n\n\"Oh, my goodness!\" Hollie said when she saw the city from that height for the first time.\"\n\nShe grabbed Jakob's arm so hard she nearly cut off the blood supply.\n\n\"Are you afraid of heights?\" he asked as they walked closer to the railing.\n\n\"I...I don't know,\" she said even as she stopped them. \"I've never been up this high before.\"\n\n\"Come on. Let's go inside,\" he suggested, knowing she was at least feeling uncomfortable.\n\n\"Yes. That sounds like a good idea,\" Hollie said as she took one more cautious peek at the city below.\n\nAmong the other advantages Jakob enjoyed that evening, courtesy of his boss, was reserved seating. The personal, non-stop elevator ride, the limo, Hollie's makeover, and the champagne were all courtesy of the famous magician. Jakob paid for the roses, and would be paying for dinner, but Hollie had no idea as to any of that.\n\n\"Right this way, please,\" the hostess said as soon as they walked in.\n\n\"Jakob, this is so amazing,\" Hollie said as she looked around.\n\n\"No, you are amazing,\" he told her as he helped her get seated.\n\n\"Is champagne okay?\" he asked as she sat down.\n\n\"No, you don't have to do that,\" Hollie told him. \"I'm fine with a glass of water. Really.\"",
        "Jakob smiled then told the hostess, \"Two glasses, please.\"\n\nWhen their server returned with their drinks, she handed them both menus and said she'd be right back. Hollie started looking and only saw numbers.\n\n\"Jakob, this is insanely expensive. Look. A salad is $15. And that's just the salad!\"\n\nHe smiled but didn't laugh as she said, \"And look here. The shellfish appetizer is $59! And this entree is $119!\"\n\n\"Just order what you'd like, okay?\" he told her.\n\n\"Are you sure? I mean, this is...sinful!\"\n\nHe finally laughed, but only politely.\n\nHe reached over and gently took her hand then said, \"You deserve to be treated like this. So please, have whatever you like.\"\n\nShe looked over at him, and the look on his face as well as his tone of voice told her meant it, but even so, this was very difficult for her.\n\nJakob let go of her hand then said, \"I wanted to tell you again how beautiful you look and how much this means to me.\"\n\nShe lowered the menu then thanked and asked, \"Why? I'm the one being treated like...royalty. How is this so important to you?\"\n\nIt was a genuine, sincere question and Jakob knew she really didn't understand.\n\n\"Hollie, I've been very...blessed?\" he began, saying 'blessed' as though he wasn't sure it was the right word.\n\n\"Or maybe just...lucky. Anyway, what I'm trying to say is I've had the privilege of spending time with a fair amount of beautiful women over the years, and...\"\n\n\"Of course,\" Hollie said with a bit of a smile. \"How could you not?\"\n\n\"But I've never wanted to spend time with any one of them as much as I want to spend time with you,\" Jakob said as he picked up his glass.\n\n\"I...I really don't understand, Jakob,\" Hollie told him.\n\n\"I hope to help you understand, but for now, would you join me in a toast?\"\n\n\"Yes. Of course,\" she told him as she reached for her glass.\n\n\"To the power of laughter and to Jenni's complete recovery,\" Jakob offered.\n\nHis toast so surprised her she forgot what she was doing.\n\nShe blinked twice then said, \"Sorry. That...that was so wonderful of you to say.\"\n\nShe raised her glass then repeated his words before the flutes touched and each of them took a sip.\n\n\"I've only had champagne twice before,\" Hollie told him. \"At my wedding and on our first anniversary.\"\n\nShe immediately apologized for bringing up her ex-husband, and Jakob told her he wanted to know as much about her as possible so any and all topics were fine.\n\nThe server came back, and Hollie still hadn't really even looked.\n\n\"Would you order for me?\" she asked very sweetly as she handed the menu back to the younger woman.\n\nJakob ordered for both of them, and as their server walked away, Hollie said, \"I'm going to try not to think about how much each bite I take is costing.\"\n\nJakob smiled at her then said, \"Let me worry about the cost, okay?\"\n\n\"I'll...I'll try,\" Hollie told him before smiling then asking Jakob to tell her everything that had happened in the last ten years.\n\nThis time he laughed.\n\n\"I might need...ten years...to do that,\" he told her.\n\n\"Well, not...everything,\" she told him as she finally got over the prices and took her first real look at the gorgeous younger man sitting next to her.\n\nJakob didn't like talking about himself so he condensed ten years into two minutes by skimming over all the hard work he'd done (while working full-time) preparing himself for any break that might come his way.\n\n\"So three months ago, a friend of David's was at my act and came up after the show and talked to me. I never really believed it would lead to an interview let alone opening for David, but a week later I got a phone call from his personal assistant and two days later I met him for the first time.\"\n\n\"Go on,\" Hollie said. \"This is so fascinating!\"\n\n\"Really? I just don't see it,\" Jakob said. \"But what would interest me is hearing about you. After all, that's why I asked you out.\"\n\nHollie smiled and said, \"Which I still don't really understand, but...\"\n\nShe spent a good ten minutes explaining Jenni's slow-but-steady recovery, thanking Jakob several times, then how she went into remission and passed the five-year mark to be considered cancer free.\n\n\"She still has annual checkups, but I feel really hopeful the cancer is gone forever.\"\n\n\"That is such an amazing story,\" Jakob told her sincerely. \"And you are an amazing mom.\"\n\nHe saw Hollie blinking then turn away.\n\n\"You're going to make me cry,\" she said as she reached for the linen napkin on her lap.\n\n\"I'm sorry. That's the last thing I wanted to happen,\" Jakob said as he moved his chair closer and reached for a paper napkin.\n\n\"Here. Let me,\" he said as he reached a hand her way.\n\nHollie turned toward him, and in spite of her watery eyes, both of them looked at the other for several seconds. Only when a tear fell did Jakob realize what was going on. He gently soaked up the water then just as carefully dabbed each eye.\n\n\"There. Perfect,\" he said. \"Just like you.\"\n\nHollie looked away then said, \"You and I both know that isn't true, Jakob. It's very kind of you to say, but it...\"\n\nHe gently put his hand on her forearm and waited for her to look back at him.\n\n\"Yes. Yes, it is true,\" he told her. \"To me, you are perfect, Hollie.\"\n\nThose same feelings of confusion swept over her again just as their appetizers arrived.\n\n\"Enjoy!\" they heard their server say.\n\nHollie looked down at Jakob's hand who slowly moved it away she could begin eating. She tried again to get him to talk about his work and his personal life, but he turned the conversation back to Jenni.\n\n\"So how is she doing in school? I know she's very young, but is there maybe a boy she likes yet? Is she interested in sports or cheerleading or going to college?\"\n\nHollie loved talking about her daughter, and she answered each one of Jakob's question in as much detail as he could with her answers spurring more questions.\n\nBy the time they'd finished eating, Jakob had talked less than a tenth of the time, and Hollie still felt like she barely knew anything about him.\n\nWhen she mentioned that, Jakob smiled again then said, \"I'm a very simple man, Hollie. I have two loving parents, I get paid to do the thing I love the most, and I'm out with the only woman I've ever had feelings for.\"\n\nAgain, his reply caught her completely off guard. He saw her quickly look away again, so he reached over like he'd done before and touched her arm.\n\n\"Did I say something wrong?\"\n\n\"No. It's just...well...you barely even know me, Jakob. I truly am flattered. I am. But...\"\n\n\"But?\" he asked, his eyebrows raised and a smile on his lips.\n\n\"But...well, this can't be...you and me, going out. This can't be...serious,\" she said as she turned back to look at him.\n\n\"It can't?\" he asked, the smile still there but the eyebrows no longer raised. \"Why can't it?\"\n\n\"Jakob. Please,\" she said, not sure what else to say.\n\nHe moved his hand down to hers then gently took it.\n\n\"Hollie? The only thing missing from my life is someone to share it with. And as I said, it's not like I've had difficulty meeting woman.\"\n\nShe went to speak, but Jakob squeezed her hand and continued.\n\n\"When I saw your name on the list of people coming to my show that night, my heart leapt. I'm not exaggerating, Hollie. Then when I saw you and Jenni walk in, I actually choked up.\"\n\nTrying to be funny, Hollie said, \"I'd cry, too, if I saw myself walk in.\"\n\nShe smiled hoping Jakob would laugh. He not only didn't, he tilted his head to indicate his displeasure and disagreement.\n\n\"Hardly. All I could think was how you were even more beautiful than I'd remembered. And when you were on stage with me, all I wanted to do was...kiss you.\"\n\n\"Jakob. Please!\" she said, the nervousness she was feeling coming through loud and clear.\n\n\"No. It's true. I did want to kiss you, and...I still do,\" he told her as he held her hand a little tighter.\n\nShe looked down then said, \"I...I'm not sure that's such a good idea.\"\n\nJakob leaned over a bit to try and catch her eye then asked, \"Is there maybe someone else in your life?\"\n\n\"In my life? Please!\" she said yet again.\n\n\"Was that a 'no'?\"\n\n\"Yes, that's a 'no'. There's never been anyone since my divorce,\" she told him without looking at him.\n\n\"Is it me then?\" he asked so gently it forced her to look at him.\n\n\"You? No. Heavens no.\"\n\n\"Then what is it, Hollie? Do you just not find me attractive or interesting or...\"\n\nShe not only looked at him, Hollie turned to face him then said, \"That's ridiculous. You're...gorgeous and you're very interesting.\"\n\nShe smiled then said, \"Well, from what little I was able to pry out of you.\"\n\nWhen she smiled, Jakob did, too.\n\n\"You see. You really are beautiful. Whenever you smile at me, it...kills me,\" he told her.\n\n\"That's...that's just...hyperbole,\" Hollie said, amazed that she remembered the word she was looking for.\n\n\"No. No it isn't,\" he told her as she moved to the edge of his chair.\n\n\"It isn't?\" she asked as Jakob's handsome face was less than a foot away from hers.\n\n\"No. It isn't hyperbole. It's the truth,\" he told her. \"You are by far the most beautiful woman I've ever known, Hollie.\"\n\nThe truth was, he'd dated many women as attractive as her and a few even more so. But none of them had ever made him feel the way she made him feel. And that, plus her own outward, physical beauty, did indeed make her that beautiful to him.\n\n\"Then what does...this...mean?\" she asked, clearly referring to their date and everything surrounding it.\n\n\"It means I like you, Holly. Very much. It means I want to spend time with you. It means I can't stop thinking about you, and yes, it means...I want to kiss you.\"\n\nShe carefully listened to each word and watched his eyes as he spoke. By the time he finished, she knew he was sincere, but she still couldn't understand why. But she also remembered her 'wise' daughter's counsel and tried thinking of her own needs; needs she hadn't had met in well over a decade. Her body ached to be loved, and her soul ached ever more to wanted.\n\n\"I'm afraid,\" Hollie replied very quietly.\n\n\"Of what?\" Jakob asked as he reached up and touched her face very softly.\n\n\"I don't know,\" she said just as quietly. \"Getting hurt, maybe?\"\n\nThere wasn't much room left, but Jakob managed to move a tiny bit closer before answering her.\n\n\"Hollie? I've never put myself in a position where I could get hurt before. I've always kept things casual. And that's because anyone I ever dated was just...a date. I never once saw any of them as well...a potential...mate.\"\n\nShe went to speak but Jakob asked her to let him finish.\n\n\"They were just...place fillers. They didn't mean anything to me in terms of my future. But that's not true where you're concerned. So this is all new to me, too, and I'm risking being rejected and having my heart...broken,\" he said, his voice trailing off at the end.\n\nWhen she knew he was finished talking she looked into his eyes then said, \"I had my heart broken once, and it was awful. Absolutely awful.\"\n\nHollie now squeezed his hand then said, \"I would never, ever do that to you, Jakob. Ever.\"\n\n\"And I would never do that to you,\" he whispered as he moved even closer to kiss her.\n\nHollie's heart was pounding as she closed her eyes. She'd been kissed several times since her husband left, but she'd never experienced anything like this before in her life.\n\nYes, a part of it was the sheer amount of time since anyone she found attractive had kissed her, but it was also more than that. In fact, that was really only a very small part of it. What it was involved being with someone who genuinely cared about her and her daughter; someone who'd gone to extraordinary lengths to show her how much he cared then told her in unmistakable terms that he did.\n\nSo as his lips pressed against hers, her brain flooded her entire body with an endorphin cocktail that made her wonder if this was what it felt like to shoot heroin into one's veins.\n\nThe kiss only lasted a couple of seconds, but it made a lasting impression on her. What she didn't know was that it made an ever deeper impression on the handsome, younger man who'd just kissed her.\n\n\"And...now what?\" Hollie asked very softly.\n\n\"I'm not sure,\" Jakob told her. \"What does a person do when their life finally begins?\"\n\nHollie smiled because she couldn't do anything else. She was so happy it was impossible not to smile.\n\n\"Considering how it feels like mine just started over, too, I'm afraid I don't know, either.\"\n\n\"Can we figure it out together?\" Jakob asked, never taking his eyes off of hers.\n\n\"I...I'd like that,\" Hollie told him, hoping he would kiss her again.\n\n\"Together. That sounds nice, doesn't it?\" Jakob said before softly kissing her one more time.\n\nNot sure why, she ignored what he said, and found herself saying, \"I...I don't always look like this, you know.\"\n\nJakob smiled a happy smile then said, \"Well, I can't afford to do this all the time, either.\"\n\nHollie laughed along with Jakob who said, \"Besides, this is fantasy. Our real lives are messy and often not at all pretty. Like me when I wake up and my hair's a disaster, I need to shave, and my...breath stinks.\"\n\nHollie laughed but said, \"I find it hard to imagine you ever not looking wonderful. I'm the one who looks, well...her age.\"\n\n\"Uh-uh. Don't even go there,\" Jakob playfully warned her. \"I'm willing to bet everything I have that you look amazing no matter what time it is or where you are.\"\n\n\"You haven't seen me at 5am,\" she told him.\n\n\"No, but I'd...like to,\" he told her with a smile.\n\nThere was a long pause before Hollie spoke.\n\n\"Do you really mean that?\" she asked, the very thought of that happening sending another flood of something very pleasant through her.\n\n\"Yes. But I'm in no hurry. The last thing I want is to even give you the impression that's all that matters to me.\"\n\n\"I'm not thinking that at all,\" Hollie replied. \"I'm just trying to understand why it matters to you at all.\"\n\n\"You're a hard sell, aren't you?\" he teased as he held her hand. \"That's okay. I'm up to the challenge.\"\n\n\"You may be biting off more than you can chew,\" she both warned and teased.\n\n\"Can I be the judge of that?\" Jakob asked.\n\n\"Yes,\" she said so quietly he barely heard her as she leaned over and kissed him.\n\n\"Does that mean...\" he asked once she moved away.\n\n\"I...I don't have a curfew,\" she said, barely able to believe she said those words.\n\n\"Hollie. I really don't want to mess this up. If it's too early...\"\n\n\"No. I trust you, Jakob. So if it's what you want, then...\"\n\n\"Yes, but only if it's what you want.\"\n\nShe nodded then said, \"Yes. It's what I want. Definitely.\"\n\nHe reached for his phone and asked, \"Do you mind?\"\n\n\"No,\" Hollie said.\n\nShe could only overhear parts of his side of the conversation, but it sounded like he was talking to David Copperfield's personal assistant.\n\n\"You're sure it's available?\" she heard him say. \n\n\"Okay. Thank you. Yes. I'd like to use it.\"\n\nHe signaled for the check then paid their bill.\n\n\"You ready?\" he asked Hollie who offered him her hand.\n\nJakob held onto it as they headed to the elevator. Their private guide was no longer there, but Jakob told the person who was, \"The presidential suite, please.\"\n\nHollie grabbed his arm tight then said, \"No! Jakob, that's ridiculous! We can go somewhere...reasonable.\"\n\nJakob turned toward her, smiled, then said, \"It's on call for people like Mr. Copperfield. No one else is using it tonight, so it's ours. And before you ask, I'm not paying for it.\"\n\nHe saw a look of relief wash over her face then asked, \"Is that okay?\"\n\nHollie smiled then said, \"You really know how to impress a girl.\"\n\n\"Some girls are worth impressing,\" Jakob told her before he softly kissed her again.\n\nThe presidential suite was 980 square feet, and as large as a small apartment only with very high-end...everything.\n\n\"I don't even know what to say,\" Hollie said as she looked around then out the window at another spectacular view.\n\n\"As you long as you want to be here with me, I don't need anything else.\"\n\nHollie sat her borrowed clutch down then put her arms around Jakob.\n\n\"I very much want to be here with you,\" she told him. \n\n\"Hollie, I really am worried about moving too fast,\" he told her again.\n\n\"Then...move slowly,\" she replied with a warm smile as she slowly slid his jacket off then untied his bow tie.\n\n\"Okay. I can do that,\" he replied as he slowly unzipped her dress.\n\nWhen it fell to the floor, Jakob said, \"Oh, my God.\"\n\n\"Is it that bad?\" Hollie asked wishing it was back on.\n\n\"Bad? Are you kidding? I've never seen anything so amazing before in my entire life,\" he said as he moved closer and held her.\n\nHer confidence was growing, but when she finished undressing Jakob and saw his hard, young body, she felt much less so. In fact all she felt was...old.\n\n\"We don't have to do anything,\" he assured her when she told him how she felt.\n\n\"No. I...I want to. I just can't convince myself someone as perfect as you would want to be with someone like me.\"\n\n\"And yet I do,\" he whispered as he touched her pretty face. \"More than anything.\"\n\nWhen he kissed her again, Hollie willed herself to again try and think of her own needs; needs that were screaming at her so loudly they wouldn't relent. When she felt him growing against her bare skin, she moaned softly, surrendered, and gave herself to him completely.\n\nHollie had only ever made love with two other men besides her husband, but she'd never experienced anything close to that before. Ever.\n\n\"Was that okay?\" he asked as she lay in his arms.\n\n\"No. It wasn't okay,\" she said very quietly. \"It was...utterly fantastic and amazing and wonderful and...\"\n\nShe looked up at him then said, \"I came three times. I've never cum more than once before\u2014ever. So...no, it wasn't just...okay. Okay?\"\n\nJakob smiled happily then asked, \"Would you like to try for three more?\"\n\n\"I think I could risk my body shaking apart again,\" she said playfully.\n\n\"Then come here,\" he said as he rolled on top of her and entered her almost immediately.\n\nIt was around midnight when Hollie said, \"I don't have a curfew, but I really shouldn't stay out all night.\"\n\n\"I understand. Completely. I'll call for the limo to be here in what? Half an hour?\"\n\n\"Is that okay?\" she asked, hoping it really was.\n\n\"Of course,\" Jakob said. \"I'm in this for the long haul so as long as I know I can see you again, it's just fine.\"\n\nHolly climbed on top of him, smiled, then said, \"If you still want to see me after...seeing me...all of me...then I'd love to see you, too.\"\n\n\"Oh, I definitely want to see you again. As often as possible, in fact.\"\n\nShe was essentially sitting on his chest and looking down at him when he noticed her eyes tearing up again.\n\n\"Is that too much?\" he asked.\n\nHollie shook her head.\n\n\"No. I...I just can't believe this is happening. Not to me. This kind of thing just...doesn't happen...to me.\"\n\n\"Well, it is,\" Jakob told her. \"And it'll keep happening as long as you'll let me.\"\n\n\"I'll always let you,\" she told him as a tear rolled down her cheek as she leaned down and kissed him.\n\nWhen Jakob kissed her goodnight on her front porch, Hollie walked inside feeling another wave of emotions wash over her. There was happiness, excitement, and because she was so late, a small amount of embarrassment which got worse when she saw her daughter asleep in the recliner, obviously waiting up for her mom.\n\nThere was no way to get past her without Jenni noticing, and when she tried, her daughter said, \"Did you have a nice time?\" causing Hollie to nearly jump.\n\n\"Why are you still up?\" her mom asked, avoiding the question.\n\n\"Because that's what best friends do,\" her daughter replied as she sat up then stood.\n\nWhen she saw her mom about to cry she asked, \"What's wrong? Was it bad?\"",
        "\"No,\" her mom said as she shook her head.\n\n\"Then what? Mom. Please talk to me.\"\n\nShe wiped one eye then smiled and said, \"It's just that I have the most amazing daughter in the whole world.\"\n\n\"Yes. Yes, you do,\" Jenni teased. \"And?\"\n\n\"And...\" her mom began.\n\nShe smiled a happy smile then said, \"And...I...I think I have a boyfriend.\"\n\nJenni's eyes opened wide as she drew a quick, deep breath.\n\n\"Seriously? Mom! I want details. All of them. Right now!\" her daughter said.\n\n\"Okay, but...\"\n\n\"But?\" Jenni asked.\n\n\"I can't share...all of them...with you.\"\n\nThe look on her mom's face said it all.\n\n\"No. No way. You...you didn't.\"\n\nWhen her mom didn't answer, Jenni's eyes opened wide.\n\n\"You...did, didn't you?\"\n\nHer mom didn't answer, but she didn't need to.\n\nJenni grabbed her and hugged and said, \"Now I'm about to cry!\"\n\n\"Why?\" her mom asked.\n\n\"Duh! Because I'm so happy for you. That's why!\"\n\nAfter a very long, very emotional hug, Hollie shared everything she could with her daughter who seemed to hang on every word.\n\n\"And you're seeing him again, right?\" Jenni asked.\n\n\"Yes. Yes, I am,\" her mom told her.\n\n\"Mom? I am so unbelievably happy for you.\"\n\n\"Thank you, honey. And having you in my life makes me unbelievably happy.\"\n\nJenni teared up immediately which caused her mom to tear up, and as they held each other again both of them cried as they thought back on their lives together. Not a word was said because none needed to be. Both of them were just unbelievably grateful for the other and all they meant to each other.\n\n\"Oh. Did you show your friends at school the video I made?\" her mom remembered to ask, having forgotten all about it.\n\nJenni smiled then said, \"Let's just say I am now the most popular girl in all of my classes.\"\n\n\"Would that include being even more popular with one Josh Davis?\" her mom teased.\n\n\"Maybe,\" Jenni said coyly, \"but tonight is your night, okay?\"\n\n\"All right, but tomorrow you tell me everything, okay?\" Her mom smiled then said, \"And there better not be any details you can't talk about.\"\n\nJenni laughed then hugged her mom again.\n\n\"No. Nothing like that, Mom. I promise.\"\n\nThey told one another goodnight then Hollie went to lay down but found it impossible to sleep. A half hour later she heard her phone buzz and reached for it then smiled.\n\n\"I've never been happier before in all my life. Love, Jakob,\" she read.\n\nShe smiled then happily kicked her feet on the mattress as fast as she could before saying out loud, \"I am SO happy!\"\n\nAnd that's exactly what she texted back. She, too, signed it, \"Love, Hollie.\"\n\n\"Love Hollie,\" he wrote, leaving out the comma. \"Hmmm. I have to say, 'I'd very much like to love Hollie. Very much. \"\n\nHollie kicked the mattress again and squealed with joy, hoping Jenni didn't hear while knowing she had to have heard her. But she didn't care at all as she read what he wrote again.\n\n\"How can this be happening to me?\" she asked herself after reading his words a third time. \"This kind of thing never happens to me.\"\n\nShe thought about that until she couldn't think anymore then, just before she fell asleep, thought, \"And yet is.\"\n\nHollie was exhausted when her alarm went off. It seemed like two seconds since she'd fallen asleep, but it had been almost four hours, half of what she normally got. She was exhausted but so happy she didn't care that she had to work the entire day.\n\nShe let the hot water work its magic...a word that made her smile...then went to the kitchen to have a cup or two of coffee.\n\n\"Hey, Mom!\" Jenni said when her mom walked in.\n\n\"Why are you up already?\" her mom asked.\n\n\"Because I'm so happy for my best friend, I was wide awake and wanted to spend some time with her before I go to school.\"\n\n\"And it just keeps getting better,\" Hollie said with a smile.\n\nJenni noticed and said, \"I haven't seen you smile like that in...\"\n\nShe tilted her head then said, \"I've never seen you smile like that.\"\n\n\"I can't help it. I guess I really am happy,\" her mom said. \n\n\"And that makes me happy,\" Jenni told her. \"Oh. When are you going to invite Jakob over for dinner?\"\n\n\"Is that okay?\" her mom asked.\n\n\"You really must be tired,\" Jenni replied.\n\nHer mom laughed then said, \"Soon. I promise.\"\n\nIn fact, they agreed to do just that the following evening after Hollie let him know how exhausted she was.\n\n\"Are you complaining?\" Jakob teased during their one and only phone call.\n\n\"No. Not at all,\" she told him. \"It was worth every minute.\"\n\n\"Same here,\" he told her. \"Can I bring anything tomorrow? You know, when you make me dinner for me for the first time?\"\n\nHollie wanted to squeal again, but only said, \"First time, huh?\"\n\n\"I'm kind of hoping that'll become a regular thing.\"\n\n\"I see. Well, I don't think I'd mind that.\"\n\nBefore Jakob could reply she added, \"Too much.\"\n\n\"Hey! Not nice,\" he said just as playfully.\n\n\"I can't wait to see you, and thank you for understanding,\" she told him sincerely.\n\n\"Hollie? I've waited ten years for this. I think I can wait one more day. Well, maybe.\"\n\nHollie laughed then told him goodbye. She looked around, and when no one was looking, she did a happy dance right there on the restaurant floor. No one else saw her, but she didn't care if they had. She was in love and nothing else mattered. \n\nShe wouldn't admit that to herself yet, but she was, and that's why she was beside herself with happiness.\n\nAfter a full night's sleep, Hollie was beyond excited to have Jakob for dinner. She laughed at the thought of actually 'having' him for dinner then thought she might get lucky and be able to 'have' him for dessert.\n\nJenni was every bit as excited as her mom to have their favorite 'mujishun' back in their home, and she and Hollie both wore the nicest informal things they had along with a little bit of makeup. \n\nHollie realized the fantasy look she'd enjoyed came from makeup professionals, but she was much less harsh on herself when she took a final look in the mirror after getting ready. For the first time in many years, she allowed herself to think she might even be a reasonably attractive woman when the truth was she still looked amazing.\n\nJenni jumped up and ran to the door when Jakob arrived, and after a warm hug and a very happy 'hello, again', the magician reached behind her and produced a bouquet of flowers.\n\n\"For my favorite girl in the whole world,\" he said as Hollie watched and waited, wondering how they would say 'hello'.\n\nJenni stepped aside, unable to stop smiling, and when she sensed the discomfort said, \"You can kiss my mom, you know.\"\n\nHollie's eyes darted toward her daughter then back at Jakob who was smiling.\n\n\"Whew!\" he said as he did just that causing them all to laugh.\n\nEven more amazing was when he produced another bouquet as the kiss ended.\n\n\"For my favorite...woman...in the whole world.\"\n\nOnce they sat down for dinner, none of them cared what they were eating. All that mattered was the three of them together, talking, and having a wonderful time. They began with a walk down memory lane as Jakob recounted the phone call that led to him becoming Jenni's 'mujishun' while her mother once again talked about how he'd come back day after day for months, never asking for anything.\n\n\"Thank you,\" Jenni said sincerely. \"I only have snippets of memories, but I know you made me laugh and smile, and the doctors said that could be the reason I'm alive today.\"\n\nJakob smiled at her then said, \"I'd do it all again, no questions asked.\"\n\nWhen they got to Jenni, school, and boyfriends, she answered all of Jakob's questions to include 'no' to the one about a boyfriend.\n\n\"But I was kind of wondering,\" she began as she looked at her mom then back at Jakob. \"Are you...my mom's boyfriend?\"\n\n\"Jenni. Honey,\" her mom said before Jakob could respond.\n\nHe smiled at Hollie then said, without taking his eyes off of her, \"You know what? Nothing would make me happier.\"\n\nHollie felt flushed and looked down for a second before saying, \"I'd like that very much.\"\n\nJenni was very happy for her mother and said, \"I'd like that, too.\"\n\n\"Then I'd say it's settled, right\u2014girlfriend?\" he said to Hollie.\n\n\"I won't disagree with that...boyfriend,\" she said feeling both silly and happy at the same time.\n\n\"This is so amazing!\" Jenni said. \"Who would have ever thought that the two of you would be, you know, dating?\"\n\nJakob smiled again then said, \"Well, I uh, I definitely dreamed about it.\"\n\n\"My mom's beautiful, huh?\" Jenni said to him while looking at her mom.\n\n\"Yes, she is. She's the most beautiful woman I've ever known.\"\n\n\"Oh, please!\" Hollie said, even as she loved hearing those words.\n\n\"Although this one's going to give you some competition in a few years,\" he said to Jenni with a wink.\n\n\"Now she is beautiful,\" her mom readily agreed.\n\nThere was a lull in the conversation when Jenni asked, \"So what's next for the two of you?\"\n\nJakob reached over and took Hollie's hand then said, \"That's up to your beautiful mother, but if I have my way, I'm never gonna let her get away from me again.\"\n\nHollie was so happy she wasn't sure how she could possibly feel this wonderful after so many years of heartache and loneliness, but she was indeed that happy, and answered Jakob's question accordingly in a very sweet tone of voice.\n\n\"I can promise you I'll never try and get away.\"\n\nJakob smiled, squeezed Hollie's hand, then said to Jenni, \"She promised. You heard that, right?\"\n\n\"Uh-huh. I sure did,\" Jenni told him, the smile on her face almost as big as the one on her mom's.\n\nHe continued looking at Jenni then asked, \"Is that okay with you? If your mom...never gets away from me again? Or me from her?\"\n\nHer smile lessened slightly as she said very sincerely, \"I have never really seen my mom happy before. She always puts on a good front for me, but I know how hard her life has been. She means everything to me, and it's obvious she really likes you, Jakob.\"\n\nJenni paused then said, \"She really, REALLY likes you.\"\n\nHer mom only smiled as her daughter continued speaking.\n\n\"I haven't seen her stop smiling since you asked her out. Knowing she's happy makes me happy, so if the two of you stay together...forever...I'd be very happy, too.\"\n\nJakob and Hollie did stay together. From that day forward, they were together for some amount of time nearly every day for the rest of their lives. \n\nAs Jakob continued to establish his reputation, Hollie stood by his side supporting him in every way possible. As his reputation grew so did the amount of money he made, and within six months, he asked Hollie to marry him during a show one evening when he 'disappeared' then reappeared in the same VIP seating area where she and her daughter had sat the first time they saw him.\n\nJenni was in on it, and she produced the ring Jakob slid on her mom's finger as the spotlight focused on the three of them. When she said 'yes' the entire audience exploded in applause followed by a brief appearance from David Copperfield who came out to congratulate them. \n\nDuring the following month, Hollie and her daughter moved in with their favorite 'mujishun' and put her old house up for sale. With the money they made from selling it, they were able to finally pay off all of the medical bills she'd continued paying on a few dollars a month over the past decade.\n\nWhen they married that summer, David Copperfield rented out the entire Stratosphere Restaurant where the happy couple was married and where they held their reception. Jenni spent the night with a girlfriend from school in a very nice suite in the hotel with Mr. and Mrs. Jakob Bennett returning to the Presidential Suite to consummate their wedding vows.\n\nA year later, Jakob learned he was being given his own show, and couldn't wait to get home and tell his beautiful wife. What he didn't know was that she also had news she couldn't wait to tell him.\n\n\"You go first, sweetheart,\" she told him as her handsome husband bubble with excitement.\n\nWhen he explained this amazing new opportunity, Hollie hugged him and told him how proud she was of him.\n\n\"Now you,\" her husband said.\n\n\"Well. I just found out that...you're going to be a father.\"\n\nJakob's eyes opened wide as he jaw dropped.\n\n\"Honey? Are you upset?\" Hollie asked, feeling afraid for the first time since she'd met him.\n\n\"Afraid? Afraid? Hollie, are you kidding? No, I'm not afraid. I'm...happy! I'm so happy I'm about to scream!\"\n\n\"Then scream!\" she said as both of them screamed at the top of their voices.\n\nJenni came running downstairs wondering what was wrong, and saw her parents laying on top of one another on the couch laughing and kissing.\n\n\"Oh, you guys are doing...that, huh?\" the 15-year old said with a smile.\n\n\"No, but we're this happy because we um...did that,\" her mother said, unable to stop smiling.\n\n\"What?\" Jenni replied before it hit her.\n\n\"Wait. Are you saying...am I...am I finally going to be a big sister?\" she asked hopefully.\n\n\"Yes, you are,\" her mother told her.\n\n\"Seriously?\" she asked as she ran over to them.\n\nThey pulled her down with them as the three of them screamed and squealed and celebrated the greatest gift of all\u2014a new life.\n\nThen again, even as Hollie was rolling around on the floor, laughing and having the best time of her life, she realized her life began anew the moment Jakob Bennett took her hand and invited her up on stage. And while she never took her newfound happiness for granted, she clearly recalled the years after Jenni's father walked out on them, and the haunting belief she would never be happy again.\n\nSo as she held her husband and daughter in her arms, all squished up on the couch, Hollie Bennett soaked up every ounce of happiness that came her way, forever thankful for the phone call from a friend in which she learned about a handsome young 'mujishun' who would change her life forever."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/its-magic-you-know"
}