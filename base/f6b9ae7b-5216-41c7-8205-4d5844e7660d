{
    "title": "New Girl in Town Pt. 11",
    "pages": [
        "Volleyball, Football and Sex, oh my!\n\nAlso a time jump to move the story along a bit otherwise I'd be writing this forever.\n\nWarning! There's quite a bit of american football in this chapter so be prepared.\n\nHuge thanks to  Devir Ginator  for letting me bounce ideas off him. Super helpful with story direction and telling me that I don't suck as bad as I think I do most of the time.\n\nAs always, thank you so much for your patience, reading, commenting and voting. \n\n****\n\n\"How did we not know about this sport earlier?\" Jamie asks as he leers at all the girls in their tight volleyball outfits.\n\n\"Because it's lame but damn is it nice to watch.\" Patrick answers as the pair lean against the gym wall. \"Just look at Jessica's ass in those short! Goddamn, that's like a work of art.\"\n\n\"Yeah, it's too bad that Jake is the one that's going to be tapping it. What a fucking waste.\" Jamie sighs.\n\n\"That fucking virgin ain't gonna be tapping anything as fine as that ass.\" Patrick sneers then glances up at the bleachers. \"I mean look at that fucker playing nice with Jessica's family. Even that little bitch sister of Jessica's. She was such a pain when I was there.\"\n\n\"Dude, she looks like seven or something.\" Jamie comments.\n\n\"Being a bitch doesn't have an age limit. I mean look at how much she's laughing up with Jake and those misfits jerks.\" Patrick states then turns his attention back to the court.\n\n\"Is C.C. one of them now too?\" Jamie inquires noticing the cute cheerleader seated with Jake's group. \"Damn, their group of weirdo's is growing this year.\"\n\n\"Who gives a fuck?\" Patrick asks. \"They're all a bunch of losers anyway. Staci, Ray and C.C. fit right in with them.\"\n\n\"I thought that Marybeth girl was pretty cool.\" Jamie comments.\n\n\"She's got a set of cute little tits on her but if she's dating that long haired freak then she's got no taste.\" Patrick comments.\n\n\"You can say that again.\" Jamie agrees. \"Oh well, plenty of other tasty fish in the sea. I'm looking forward to going fishing here once this game is over.\"\n\n\"I think I may dip my pole in the water as well.\" Patrick chuckles. \"There are some very tasty looking fish just begging to be landed out there. It may even make Jessica a little jealous if I start showing someone else some interest.\"\n\n****\n\n\"Dreamboat at twelve o'clock.\" Tonya says just loud enough for her teammates to hear.\n\nThey all look and Jessica snorts. \"More like douche bags at twelve o'clock.\"\n\nTabitha and Tonya both gasp while Kenyetta and Caitlyn giggle.\n\n\"Sorry guys,\" Jessica apologizes. \"I know that Patrick is Mr. Popular and all that but I do not like him and I especially don't like Jamie.\"\n\n\"Oh yeah, that whole thing where he took that cheap shot at Jake in the scrimmage game. That was terrible.\" Tabitha states.\n\n\"Then somehow the whole school got that video of Jake getting slammed to ground. I am glad to see that he's out of the sling now. He's doing better, isn't he?\" Tonya asks.\n\nJessica nods and begins to answer but the referee blows the whistle to start the next game.\n\nThe Raiders are lining up to serve when Jessica speaks.\n\n\"Guys, I'm sorry for what I'm about to do.\" She says.\n\nCaitlyn begins to ask her what she's talking about but the Raiders serve the ball into play. Tonya plays it from the backcourt, hitting it towards Caitlyn.\n\n\"Set!\" Caitlyn shouts as she bumps the ball up towards the net.\n\nJessica leaps up then smashes a hard spike hurtling towards the wall where Patrick and Jamie are currently reclining on. \n\n\"Whoa!\" Patrick shouts dodging left.\n\n\"Fuck!\" Jamie shouts as he dodges to the right just as the ball smashes into the wall between where they were just standing.\n\n\"My bad!\" Jessica says then shrugs.\n\n\"Whooo, now there's that Wildcat!\" Antoine shouts from his seat and laughter erupts from the stands.\n\nJamie glares at Jessica who returns his glare until she's pulled into the huddle.\n\n\"Damn girl, I know now not to ever mess with your boyfriend.\" Kenyetta laughs.\n\n\"Sorry I gave up a point guys but they both had that coming.\" Jessica shares.\n\n\"No argument from me.\" Caitlyn giggles. \"I'm going to laugh myself silly when I think about how Patrick and Jamie's faces looked when they saw that ball flying at them later on but for now, let's get that point back huh?\"\n\n\"You keep setting us up so perfectly and we'll do just that, Caitlyn.\" Jessica assures her.\n\n****\n\n\"I assume that you know what that was all about, Jake?\" Dr. Golden asks him, as the rest of the group is too busy laughing to answer.\n\n\"I think it was a bit of payback, ma'am.\" Jake answers. \"I'm just glad she didn't hit either of them. I don't want Jess getting in trouble over me.\"\n\n\"Patrick I recognize but who's the other boy?\" Mr. Golden asks.\n\n\"That would be Jamie.\" Jake answers.\n\n\"He's the jerk that hurt Jake in the scrimmage game.\" Shelly chimes in.\n\n\"Ah, that explains the payback bit then.\" Dr. Golden states.\n\nThe ball is served back into play so nearly everyone's attention is turned back to the game except for Roxie who nudges Jake.\n\n\"You're not mad at Jessica, are you?\" She asks.\n\n\"Mad? No.\" Jake answers.\n\n\"Then what is it?\" she asks.\n\n\"You know how those two get about even the tiniest provocation. Jessica just delivered one hell of a message for everyone to see. You don't think that they're going to want to get even for that?\" Jake asks.\n\n\"Shit, you're right about that.\" Roxie agrees. \"What do you think they'll do?\"\n\n\"I don't have a clue.\" Jake answers. \"That's what worries me.\"\n\n\"We'll keep an eye on her, Jake.\" Roxie assures him. \"We won't let anything happen to our Jessica.\"\n\n****\n\n\"If she thinks I won't punch her just because she's a girl, that bitch is dead wrong!\" Jamie hisses to Patrick.\n\n\"Are you looking to get expelled?\" Patrick asks. \"You whined about that little suspension when you spiked Jake and that was only a week. You lay a finger on her and you'll be gone. No, we've got to smart about this.\"\n\n\"Do you have a plan then?\" Jamie asks.\n\n\"I'm thinking emotional damage hurts a lot longer than physical damage does. I say we hit her there.\" Patrick states showing his shark like smile.\n\n\"How do you plan on  emotionally damaging  her, take away her teddy bear?\" Jamie asks.\n\n\"Did I ask for your fucking sarcasm?\" Patrick snaps with a frown. \"No, we get Jake to cheat on her. I hear that a betrayal like that has lasting effects for a long time if you actual care for the asshole.\"\n\n\"That virgin won't even fucking call Somer after she shook those tits of hers in his face. How in the hell are you going to get him to cheat on that?\" Jamie asks pointing towards the court where, after tying the game, Jessica is bent over in the huddle.\n\n\"I've got the beginnings of an idea but I need to talk to Somer about it.\" Patrick tells him. \"Remind me to call her when we leave here.\"\n\n\"Yeah, I'll remind you but I'd much rather just throw a garbage can through Jake's windshield and be done with it.\" Jamie states.\n\n\"Think for a minute. That only gets back at Jake and you'll get caught.\" Patrick tells him. \"The school got camera's installed in the parking lot last week. Why do you think we haven't let the air out of Jake's tires again?\"\n\n\"Because we moved up to trying something more permanent and damaging to that fucker.\" Jamie answers. \"I mean, I hit him as hard as I could, slammed him into the ground then landed on him for good measure and he still got his ass up.\"\n\n\"Yeah, well neither of them will be getting up once this plan falls into place.\" Patrick chuckles as he watches Jessica spike the ball onto the Raiders side for a point. \"I'll leave her heartbroken and in need of a lot of consoling. You know I do my best consoling work in my bed and I can't wait to see that tight little ass of hers bouncing on my dick.\"\n\n****\n\nA late rally by the Raiders cuts the score to 24-23 when Coach Morrison calls a timeout.\n\n\"Anyone winded?\" Coach asks and gets several nods from the girls on the team. \"Anyone want to come out?\"\n\nEveryone shakes their heads in the negative on the second question. \"That's what I like to hear.\" She nods. \"Now, they've got the serve and our front line players have all rotated to the back line so we're going to have to work for this point. I know you all can do this so get out there and get after it!\"\n\nThe timeout ends and Jessica moves to her spot on the back line to await the serve. The Raider player tosses the ball into the air and sends a hard overhead serve towards Jessica. She knocks the ball towards the front line.\n\n\"Set!\" Tabitha yells as she bumps the ball up.\n\nCaitlyn leaps up and spikes the ball but it's blocked by two Raider players. Tonya makes a diving save that launches the ball backwards. Kenyetta hits the ball towards Jessica who smacks it over the net. The Raiders set up their spike that goes over the outstretched fingertips of Caitlyn and Tonya. The ball is headed out of bounds but Jessica dives for it in case Caitlyn or Tonya got a piece of it.\n\n\"No touch!\" Caitlyn shouts out to a sliding Jessica.\n\nJessica spreads her arms back at the last minute, doing a sort of breaststroke on the gym floor as she watches the ball hit the floor just in front of her.\n\n\"Out,\" The referee calls out then looks to the line judge.\n\n\"No touch.\" The line judge confirms. \"Point and match for Carter.\"\n\nThe Wildcat teams come together in a group hug in the middle of the court then go and shake hands with the Raiders on a match well played.\n\nCoach Morrison gathers her team together. \"You all played a great match against a tough team tonight. I am so proud of you all! Celebrate this win but remember that this is just the start of our season. We play Reynolds again tomorrow on their home court so be sure to rest up and be ready for tomorrow's game. Now hit the showers and I'll see you all tomorrow. Jessica, hang back a moment.\"\n\n\"Damn,\" Jessica thinks as she watches the other girls walk a few steps away then stop to wait on her.\n\n\"Do you want to share what that first shot of this set was about?\" Mrs. Morrison asks Jessica.\n\n\"I'm sorry, Coach Morrison.\" Jessica apologizes. \"I just saw those two standing there and I let my emotions get away from me.\"\n\n\"I can't say that I was too thrilled about their presence either. I had them both in a class last year and needless to say, the impression they left with me was not the best one but I can't have you trying to behead them on the court.\" Mrs. Morrison tells her.\n\n\"Yes, coach,\" Jessica answers her. \"It won't happen again.\"\n\n\"I appreciate that, Jessica. Now hit the showers and drag your teammates along since they obviously are waiting for you.\"\n\n\"What was that all about?\" Tabitha asks as Jessica joins the group.\n\n\"Me trying to flatten either Jamie or Patrick's face with that spike.\" Jessica answers. \"I promised not to try again.\"\n\n\"That's a shame. That was the funniest thing I've seen in awhile.\" Caitlyn comments.\n\n\"You're coming to Smitty's with us for celebratory ice cream right, Jessica?\" Tonya asks as they head for the showers.\n\n\"Maybe tomorrow night I can.\" Jessica answers. \"My family has a tradition of going out to eat after the first game of the season.\" Jessica answers.\n\n\"I know that you're aware that they serve food at Smitty's, Jess.\" Caitlyn giggles.\n\n\"Duh, I'm just saying that I'll be sitting with my family...\" Jessica begins to explain.\n\n\"And Jake,\" Tabitha chimes in.\n\n\"Yes, Jake too. He gives the best hand massages and I can really use one after this match.\" Jessica answers.\n\n\"Are those designated  girlfriend only  or can anyone get in on these massages?\" Tonya asks.\n\n\"I'm pretty sure that I'm entitled to one. He is my cousin after all.\" Caitlyn teases.\n\n\"He's your cousin, Caitlyn. He can't go rubbing on you. That's like incest or something.\" Tabitha points out.\n\n\"He's my fourth cousin, Tab. He and I can get married if we wanted.\" Caitlyn argues.\n\n\"Caitlyn, you can't marry my boyfriend!\" Jessica exclaims with a laugh.\n\n\"Well clearly not now that he's got you.\" Caitlyn says. \"It's just my luck that Jake hooks up with the one girl in school who's smart enough not to play games with him.\"\n\n****\n\n\"Rub please?\" Jessica asks as she reaches her hand across the table to Jake once they have all finished eating. Jake smiles, takes her hand and beings to massage her palm.\n\nJake's parents had headed home after congratulating Jessica on her game and the misfits, along with C.C. who was chatting away with Roxie, all headed home as well after passing along their own congratulations.\n\n\"Really, Jessica?\" Dr. Golden asks.\n\n\"It really helps, mom.\" Jessica tells her.\n\n\"Me next, Jake!\" Tabitha shouts from the table she's sharing with her sister Tonya, Caitlyn, Kenyetta and Wendy Deal, the other starting back line player.\n\n\"I'm next, sis!\" Tonya shouts.\n\n\"I'm not getting left out of this deal either, Jessica!\" Wendy shouts.\n\n\"No, I'm next. Blood is thicker than boo... blondes.\" Caitlyn corrects when she realizes she was about to shout boobs with Jessica's parents sitting right there.\n\n\"I'll thank you all to not distract my boyfriend while he takes care of me. Blonde or not!\" Jessica calls back and their table erupts in a bout of giggles. \n\n\"Looks like you have a future in massage therapy if my daughter will ever allow you other clients, Jake.\" Dr. Golden jokes.\n\n\"I'm allowing him to hone his skills on me first.\" Jessica answers.\n\n\"And I'm sure the world will appreciate your sacrifice.\" Mr. Golden chuckles.\n\n\"I 'precate you, Jake.\" Sarah shares.\n\n\"You are much too adorable for your own good, Sar-bear.\" Jessica giggles. \"Are we about ready to head home? I've got some homework to finish up.\"\n\n\"I guess that depends on if your massage time is up.\" Dr. Golden states.\n\n\"We're taking a break so Jake can drive me home; we'll finish up the hand massage then say goodnight and I'll come in and finish my homework.\" Jessica lays the plan out for her parents.\n\n\"She meant to ask if it was okay with guys.\" Jake chimes in.\n\n\"I suppose that's fine with us.\" Mr. Golden answers.\n\n\"As long as the  massage  doesn't take longer than fifteen minutes.\" Dr. Golden adds.\n\n\"Thirty.\" Jessica counters.\n\nDr. Golden sighs. \"How much homework do you have left to do?\"\n\n\"I got most of it done during the team dinner.\" Jessica tells her. \"I've just got a bit of English left.\"\n\nDr. Golden thinks it over for a few moments before nodding her head. \"Fine but it had better be thirty minutes on the dot.\"\n\n\"Just flash the porch light and I'll hurry right in.\" Jessica assures her.\n\n\"I'll trust Jake to send you right in.\" Dr. Golden says. \"Him I can trust to stay in our good graces, you on the other hand... you I'm not so sure of.\"\n\n\"Mom, you know that I'm your perfect angel.\" Jessica tells her.\n\n\"I'm going to need you put that in writing, sweetie.\" Dr. Golden laughs. \"That way, I can get it framed and point to it every time my  perfect angel  forgets her wings.\"\n\nWhen they arrive back at Jessica's, The Golden's herd Sarah inside but only after she receives a goodbye hug from Jake. Jessica takes him by the hand and pulls him to a bench on the porch. Jake takes her hands in his and goes back to rubbing them as he was at Smitty's.\n\n\"How does this feel?\" He asks.\n\n\"Fantastic.\" Jessica answers as she turns so she's facing him on the bench and Jake does the same.\n\n\"Can you massage me a little higher, Jake?\" She asks.\n\n\"Here?\" Jake asks as he slides his hands up to her forearms and begins to rub them lightly.\n\n\"Mmm hmm,\" Jessica purrs as goose bumps pop up on her arms. \"Do you do shoulders?\" she moans.\n\n\"Do you grant kisses afterwards?\" Jake asks with a smile.\n\n\"Definitely.\" She answers with giggle.\n\nJessica turns her back to Jake and scoochs her butt back until it presses against Jake's lap. His hands rest on her shoulders for a moment without moving.\n\n\"Problem, Jake?\" She teases.\n\n\"Huh?\" Jake manages to respond.\n\n\"Rub.\" Jessica giggles.\n\n\"Right. Rub. Got it.\" Jake says and begins to manipulate her shoulder muscles with his fingers and thumbs.\n\nJessica does her best to curb her appreciative groans as her muscles react to Jake's touch so her parents don't hear her and come running.\n\nThe massage goes on for several minutes until Jake moves his fingers lightly up her neck and leans close to her ear.\n\n\"How are you feeling now, Jess?\" He breathes into her ear.\n\nJessica feels an involuntary shiver run the length of her spine. In answer to his question, she spins around, pushes him back, then straddles Jake's lap.\n\n\"This is what I've been waiting for since we won that last point.\" She whispers then presses her lips to his.\n\nJessica starts by nipping playfully at Jake's lips before she slides her tongue between them. Jake places his hands on Jessica's hips but she reaches down and moves them to her butt. Jake pulls his lips from Jessica's and stares for a moment.\n\n\"Jess?\" he asks breathlessly.\n\nJessica leans down to his ear and gives the lobe a nibble before answering him with her own question. \"Rub?\"\n\nJake starts to chuckle but her hot breath on his neck turns it into a moan. She begins to kiss his neck, moving to his jaw line before finally capturing his mouth with hers. The pair kiss passionately as Jake's hands squeeze and knead Jessica's tight butt for several long minutes until Jessica pushes him back.\n\nThey sit staring into each other's eyes, their heavy breathing mixing until Jake asks.\n\n\"Are you okay, Jess?\"\n\n\"I feel incredible, Jake.\" She answers with a huge grin on her face.\n\n\"Then why are we stopping?\" He asks.\n\nShe giggles and nods towards her front door. Jake looks and sees the light flash off then back on.\n\n\"Has it really been thirty minutes already?\" He asks.\n\n\"'Fraid so.\" Jessica answers. \"You should button back up, Jake.\"\n\n\"Button up?\" Jake asks.\n\nJessica tips her head down towards Jake's chest. He looks down to see his shirt is half undone.\n\n\"When did that happen?\" he asks.\n\n\"That? Oh that happened as soon as I got my fingers to cooperate with me.\" She answers as the porch light flashes again.\n\n\"Guess you'd better get inside.\" Jake tells Jessica.\n\n\"Uh huh,\" Jessica answers still beaming as she gets to her feet then pulls Jake to his. \"I really don't want to but if I want to keep my wings, I suppose I should.\"\n\nJake grins and walks her to the door, which Jessica opens and sticks her head inside.\n\n\"One more sec, mom.\" She says then gives Jake a quick kiss. \"See you in the morning, baby.\"\n\n\"Sweet dreams, angel.\" Jake tells her.\n\n\"Only the sweetest after tonight,\" Jessica answers before stepping back inside.\n\n****\n\nAfter finishing her homework, Jessica heads to her room while dialing Staci's number on her cell.\n\n\"Hey Jess the mess that was one awesome match you played tonight.\" Staci answers. \"I was very impressed.\"\n\n\"I did okay.\" Jessica answers modestly. \"I have a great team with me and thanks to them we pulled out a tough win.\"\n\n\"And don't forget your cheering section, Jessica.\" Staci giggles.\n\n\"Never!\" Jessica exclaims. \"You guys all being there meant so much to me. I was surprised that so many others popped in to watch us.\"\n\n\"Even the douche bag duo showed up to gawk at all the tight uniforms.\" Staci says. \"I nearly peed myself laughing when you smashed that spike at their heads. Did you get into trouble for that?\"\n\n\"I had to promise not to do it again.\" Jessica answers. \"I don't even want to think about those two right now, I was having too good a night to spare them a thought.\"\n\n\"Too good a night with a certain brown haired, green eyed cutie you mean?\" Staci teases. \"You looked like you couldn't wait to drag him out of the gym and get your  hand massage  underway. Does he just do hands, Jessica?\"\n\n\"He graduated to forearms, shoulders and maybe my butt tonight.\" Jessica giggles.",
        "\"Maybe your butt?\" Staci asks.\n\n\"Okay, definitely my butt after I put his hands on it. He massaged it nicely.\" Jessica admits.\n\n\"And no problems with that? Sean problems, I mean.\" Staci asks.\n\n\"The only problem was when mom started flipping the porch light off and on letting us know that time was up.\" Jessica tells her. \"It was probably a good thing she did it when she did though.\"\n\n\"Why's that?\" Staci asks.\n\n\"I had Jake half undressed by then and if we kissed any longer I might have gotten him a lot more undressed out on my parents porch.\" Jessica shares.\n\n\"Half undressed?\" Staci asks. \"You know that, as your best friend, I'm going to need all the details. Like right now.\"\n\nJessica explains, in detail, her make out session with Jake up until the porch light flashed for the first time.\n\n\"Wow Jess, that sounds like it was one hot make out session.\" Staci tells her. \"And you really didn't have any problems? No freezing up, nothing?\"\n\n\"Nope.\" Jessica answers. \"I don't know if it was the left over adrenaline from the volleyball match or Jake's massage before we started or if my brain was occupied with me trying to get his shirt as unbuttoned as possible. All I know is, Sean never entered my head and I wanted Jake's clothes off.\" \n\n\"Damn Jess, I may need to call Ray over to take care of my needs after I hang up with you.\" Staci admits.\n\n\"He's still taking good care of you, right?\" Jessica asks.\n\n\"Absolutely!\" Staci answers enthusiastically. \"God, I told you about him going down on me, didn't I?\"\n\n\"I still can't believe he did that so willingly. Back at my old school, the girls all complained about how they'd go down on guys but they never seemed eager to return the favor.\" Jessica shares.\n\n\"Oh Ray was an eager little beaver about that.\" Staci answers with a laugh. \"I'm not sure what Jake told him but damn, I still owe him so much.\"\n\n\"So you think Jake will want to... ya know... on me?\" Jessica asks.\n\n\"Jake wants to make you happy, Jess. If that will make you happy and believe me it will, then he'll gladly do it. Hell, he'll probably do it anyway just to experience it.\" Staci answers.\n\n\"What if he wants to me return the favor? I'm not sure I'm ready to try that again.\" Jessica states.\n\n\"Argh, I hate the asshole you dated! He's such a shithead for ruining things for you!\" Staci swears. \"Jess, Jake wouldn't push you into doing something you aren't comfortable with. Talk to him about it before you go much further. That'd be a bad thing to spring on a guy while the two of you are going at it.\"\n\n\"While I think we're pretty far being at that point, I'll talk to Jake about it before we get there.\" Jessica assures Staci.\n\n\"You can do it at my house if you want.\" Staci suggests. \"Talking I mean, not going down on each other unless you really want to that is.\" Staci teases.\n\n\"Yes to coming over but I think we'll hold off on the oral sex until we're a little further along in our relationship.\" Jessica answers. \"Now, if you and Ray want to sneak off while Jake and I talk... well who am I to stop you?\"\n\n****\n\nWeeks pass as September turns to October. Jessica's volleyball team has yet to lose a match though some tough competition had them on the brink a few times. Each win is followed by a hot make out session on Jessica's front porch. The football team didn't have as hard of a time beating the two teams they played by thirty-seven points combined. Jake's arm and ribs were given the go ahead to rejoin the team for full practices but being designated the third string quarterback, he has yet to play a minute of game time. The lunch bunch/misfits even added another new member when C.C. started hanging out with them during lunch. The excitement of the upcoming homecoming was evident, as the day grew closer until the Monday before when the members of the Homecoming Court would be announced.\n\n Monday October 16th \n\nJake and Jessica enter Ms. Simpson class holding hands as has become the norm but before they can take their seats, Ms. Simpson waves them to her desk.\n\n\"I've already coerced Jake into coming out for Drama Club but what about you, Jessica?\" She asks. \"I had heard that you might be interested in seeing what it's all about.\"\n\n\"She must need a new costumer, Jess. Watch out.\" Jake teases.\n\n\"Just for that little comment I'm going to be putting you on the sound and light board too, Jake.\" Ms. Simpson says while shaking her finger at him.\n\n\"I'll definitely be coming out and costuming sounds really interesting.\" Jessica answers. \"Also, you'll need my help to keep this guy in line.\"\n\n\"God bless your sweet soul.\" Ms. Simpson laughs.\n\n\"Hey, I think I resent that remark.\" Jake states.\n\n\"Resemble, Jake. You resemble that remark.\" Ms. Simpson playfully corrects him.\n\nJake turns to look at Jessica. \"She needs no help from you whatsoever.\"\n\n\"Oh, I know that. I'm joining Drama Club to learn from her.\" Jessica jokes.\n\nJake then turns back to Ms. Simpson. \"And she doesn't need any help from you either.\"\n\n\"I knew that from that second day of school when she came in fully loaded and ready for you.\" Ms. Simpson answers with a laugh. \"Once we get homecoming over, we'll have our first meeting. Probably one day next week and I know that both of you still have practice and Jess has games but I hope to see you both there.\"\n\n\"We'll find a way to make it work.\" Jake answers.\n\n\"You can count on us, Ms. Simpson.\" Jessica answers as the bell rings.\n\nAs Jake and Jessica head to their seats, the morning announcements begin.\n\n\"Good morning, students. As everyone knows it's homecoming week and the ballots we had you all submit last week have been tabulated. Without further adieu, here is your Wildcat homecoming court. Antoine Adams, Staci Daniels, Somer Douglas, Trevor Dowd, Jake Gibson, Patrick Greene, Ray Halston, Marisha Johnson, Michelle Pritchett, Jonathan Rierson, Kecia Roundtree, Kendrick Shores, Latonya Taylor and Kristen Woodruff. All members are to meet in the auditorium immediately after school today in the auditorium. A big congratulations to all the members and don't forget to come out to our homecoming game this Friday to cheer on our football team and these great students.\"\n\nWith a click and a hiss the intercom goes silent and Jessica turns towards Jake.\n\n\"Congratulations Jake,\" Ms. Simpson tells him as Jessica raises her hand. \"Yes, Jessica?\"\n\n\"Permission to hug my boyfriend, please?\" Jessica asks.\n\n\"Briefly you two. I do have a class to run today.\" Ms. Simpson sighs but with a smile.\n\nJessica hops to her feet and wraps her arms around Jake's shoulders as he hugs her waist.\n\n\"Congratulations, baby! I'm so proud of you!\" She tells him with a huge grin on her face.\n\n\"Thanks Jess.\" Jake answers then takes his seat stunned that his name was announced.\n\n\"I think that we'd all like to pass along our congratulations to Jake.\" Ms. Simpson states then leads a small round of applause causing Jake to blush slightly.\n\n\"So cute,\" Jessica teases him quietly.\n\n\"Okay, now that we've inflated Mr. Gibson's ego, let's get on with today's lesson.\" Ms. Simpson states and garners a laugh from the class.\n\n\"Don't worry Ms. Simpson,\" Jessica calls out, \"I'll keep him humble. Well as humble as I can manage.\"\n\n****\n\n\"Something's not right about the homecoming court.\" Staci says as she takes a bite from the sandwich she swapped with Jake.\n\n\"They let Jake on it. Of course it's not right.\" Roxie jokes.\n\n\"Roxie, be nice to Jake.\" C.C. says. \"I hear that they counted all the ballots that said  Not Jake  as votes for Jake.\"\n\n\"One minute and thirty two seconds before the first shot at me was fired. I think that's a new record.\" Jake says with an exaggerated sigh. \"I expected it from Bobby and maybe Roxie but not you, C.C. I thought we had something special.\"\n\n\"We did until Jessica started helping me in English too.\" C.C. giggles.\n\n\"Figures.\" Jake shakes his head. \n\n\"Bobby's too preoccupied to mess with you.\" Jessica giggles nodding towards where Bobby and Marybeth went a few minutes ago.\n\nBobby and Marybeth are kissing sweetly in the shade of the announcing booth of the stadium.\n\n\"They've been getting closer and closer these past few weeks.\" Ray notes. \"He's going to need to have the talk with you pretty soon, Jake.\"\n\n\"I need to know more about this talk.\" Jessica states.\n\n\"Same here.\" Shelly echoes.\n\n\"Is it the birds and bees talk?\" C.C. asks. \"I'm the new girl so someone catch me up, please.\"\n\n\"Let's just say that Jake gave me a few pointers about a certain topic and they paid off in a big way.\" Ray tells C.C.\n\n\"A big way is right and if you two need to know more, you can ask Jake later.\" Staci says then turns to Jessica. \"And you, Jess the mess, are already experiencing Jake putting his knowledge into practice. That is, if our late night phone calls are to be believed.\"\n\nJessica blushes slightly. \"Oh, they can be believed all right.\"\n\n\"Ooo, go Jessica!\" Jody shouts.\n\n\"Go Jake.\" C.C. adds.\n\n\"I was being serious about the homecoming thing you guys.\" Staci tells them. \"Jessica should have made it onto the court.\"\n\n\"That's sweet of you to say Staci but, to borrow C.C.'s line from a couple of minutes ago, I'm still the new girl here. Not a lot of people even know me.\" Jessica tells her.\n\n\"Sad as it is to say but when Patrick set his sights on you that grabbed a lot of people's attention.\" Staci points out.\n\n\"Agreed.\" C.C. adds. \"As soon as word got around, everyone wanted to know who this Jessica girl was.\"\n\n\"Face it, Jess between the nine of us, everyone at this school has at the very least heard of you by now.\" Staci argues. \n\n\"And more importantly, you're well liked too, Jess. I hear it all the time about how you're such a sweetheart.\" Shelly adds. \"With the exception of the dickbag squad that is.\"\n\n\"See, Shelly agrees with me that something is off with the ballots.\"\n\n\"I think Ms. Simpson is in charge of the homecoming committee.\" Jake states. \"We can ask her about the balloting and all that this afternoon after the meeting.\"\n\n\"Guys, you don't really have to do that. I appreciate it but I'm honestly so thrilled that the three of you are on it.\" Jessica tells them. \"It's a big deal for you guys.\"\n\n\"It's also a big deal that you aren't on it.\" Staci tells her. \"I plan on finding out why you aren't.\"\n\n****\n\n\"It's about freaking time!\" Patrick calls out as Jake enters the auditorium. Jake ignores him and continues walking down the center aisle.\n\n\"Maybe try kissing your girlfriend instead of shaking her hand. It takes less time.\" Patrick adds.\n\n\"You've obviously never seen them kiss, Patrick. It takes them a nice long time.\" Staci calls out.\n\n\"Okay gang, that's enough.\" Ms. Simpson says as Jake hops onto the stage. \"Thanks for going back to my room and grabbing my folder, Jake.\"\n\n\"Anything for you, Ms. Simpson. You know that.\" Jake answers then turns to hop off the stage but she stops him.\n\n\"You might as well just hang here a second, Jake.\" She tells him. \"If I can get everyone else to join us onstage for a few minutes, then I can get you out of here.\"\n\nThe rest of the homecoming court join them onstage and Ms. Simpson gives them a quick once over then looks at the folder Jake brought her.\n\n\"Okay, I'm going to pair you up now and these will be who you're going to escort at halftime.\" She tells them. \"I need all the guys to move to the right side of the stage. Ladies, you're on the left.\"\n\n\"Your other right, Patrick.\" Jake chuckles when Patrick heads the wrong way.\n\n\"Fuck you, Jake.\" Patrick snaps quietly as they move towards the right.\n\n\"Okay, when I read off your name I want you to step to the center of the stage.\" Ms. Simpson instructs them.\n\nShe takes a few moments to look at each row of kids before making her decision.\n\n\"Patrick and Somer,\" she calls out.\n\n\"I was kind of hoping to get Jake, Ms. Simpson.\" Somer says before moving.\n\n\"Keep hoping, bitch.\" Staci whispers just as Somer heads towards center stage. Somer tosses a glare over her shoulder but says nothing.\n\n\"I'm sorry Somer, but you and Patrick are a better fit.\" Ms. Simpson tells her as she looks them over. \"Good. Okay, now you two can go take a seat.\"\n\nAs Patrick and Somer head down the stairs, Ms. Simpson continues pairing up escorts. Antoine and Kecia, Trevor and Michelle, Kendrick and LaTonya, Jonathan and Kristen, Ray and Staci, which has most of the group laughing.\n\n\"What am I missing?\" Ms. Simpson asks.\n\n\"Staci and Ray are dating so them escorting each other is kind of funny.\" Jake explains as he walks towards the center of the stage. Marisha Johnson does the same, taking his arm when she reaches him.\n\n\"Guess that leaves you and me, Jake.\" Marisha says as she gives him a smile.\n\n\"Only for a few minutes sadly,\" Jake states. \"You'll leave me standing there alone on the field when your gorgeous self wins the crown.\"\n\n\"Jake,\" Marisha manages to blush slightly even with her chocolate colored skin. \"I never knew you were such a flirt.\"\n\n\"Guess I just needed to get a girlfriend that could give me confidence to flirt with girls as gorgeous as her.\" Jake answers.\n\n\"That she is and Jessica is also one lucky girl,\" Marisha comments as they take a seat in the audience.\n\n\"Oh I'm the lucky one, Marisha. Believe me and it seems that I'm getting luckier as time goes by. Gorgeous girl like you on my arm at homecoming? If I'm living in a dream, no one pinch me until at least Saturday.\" Jake tells her.\n\n\"Now that that's done we'll meet back here on Wednesday right after school to get pictures for the yearbook. Please dress nicely people and that means no Iron Maiden shirt from you, Jake.\" Ms. Simpson says getting a laugh from the group.\n\n\"My Trooper shirt would look great though.\" Jake argues.\n\n\"Don't try my patience, Jake.\" Ms. Simpson warns playfully then shakes her head. \"What am I thinking telling you? I'll tell Jessica and that will be that.\"\n\n\"Yeah, I'm not arguing with Jess.\" Jake laughs.\n\n\"Good. Then we'll meet again on Thursday for a walkthrough on the field and again on Friday for any last minute adjustments. Both of these will be right after school so you football players and cheerleaders won't miss much practice time. Now, unless there are any questions, you're all free to go and I'll see you all Wednesday.\" Ms. Simpson finishes up.\n\nAs the others leave, Jake and Staci hang back.\n\n\"I can stay too if you want.\" Ray had suggested but Jake shook his head.\n\n\"Staci and I can handle this. You catch up with Tank and tell him I'll be along as soon as I can.\" Jake told him. \"He can pass that along to Coach Pennington.\"\n\nRay had nodded then left the pair, closing the auditorium door in his wake.\n\n\"Ms. Simpson,\" Jake says as he and Staci approach the stage. \"Staci and I have a question for you.\"\n\n\"Okay,\" Ms. Simpson answers. \"What can help you two with?\"\n\n\"How exactly are the ballots counted?\" Staci asks.\n\n\"May I ask why you want to know, Staci?\" Ms. Simpson counters.\n\n\"I just find it odd that Jessica somehow didn't make the cut.\" Staci answers.\n\nMs. Simpson looks at Jake. \"I assume she means your Jessica, Jake.\" She states.\n\n\"Yes, ma'am but this didn't come from Jess.\" Jake states.\n\n\"Oh no Ms. Simpson, this is all on me.\" Staci tells her. \"It's just that I know a lot of people that told me that they voted for Jessica and I find it hard to believe she didn't beat out, say Michelle for example, in votes. It just got me wondering how the ballots were counted and who exactly counts them.\"\n\n\"The ballots were collected at the end of homeroom and taken to the office. Then some office volunteers counted them up and let the Homecoming committee know the results for who made the cut.\" Ms. Simpson explains.\n\n\"I suppose that asking for a recount would be a bit too much huh?\" Staci asks.\n\n\"I'm afraid so, Staci.\" Ms. Simpson answers. \"I can look into who counted them but I don't think it'll change anything at this point.\"\n\nStaci nods. \"I understand, ma'am and thank you for listening to me. Jake and Jess were right about you; you are a sweetheart.\"\n\n\"Thank you for saying so, Staci.\" She says then gives Jake a sly grin. \"I'm not giving you a better grade for that, Jake.\"\n\n\"Are there grades above A that I don't know about?\" Jake teases. \"I know that Jess and I both are killing it in your class.\"\n\n\"Jessica, Yes. You, Jake, you kill my patience.\" Ms. Simpson jokes and gets a giggle out of Staci. \"Now get to your practices before your coaches come yelling at me.\"\n\nAs she watches the pair leave, Ms. Simpson wonders to herself just who were the office volunteers that counted the votes. \"Maybe that's something that I should look into.\"\n\n****\n\n Wednesday \n\n\"Are you gonna be all dressed up?\" Sarah asks Jake as he, Sarah and Jessica are sitting in Sarah's room.\n\n\"Sarah, you've gotta sit still for at least twenty seconds so Jake can sketch you. You want to see your picture up at the fair next week, don't you?\" Jessica asks her fidgeting little twin.\n\n\"Will there be rides there, Jake?\" Sarah asks effectively ignoring Jessica question. Sarah's question is one that she's asked about a half dozen times since she learned the fair was coming to town.\n\n\"Rides, games, fair food; you'll have a great time.\" Jake answers. \"And to answer your earlier question no Sarah, I'll still be in my football gear.\"\n\n\"What's fair food?\" Sarah asks.\n\n\"Candied apples, elephant ears, turkey legs and fried just about any and everything.\" He answers.\n\n\"You'd eat an elephant's ear? That's so mean!\" Sarah exclaims.\n\n\"And those poor legless turkeys,\" Jessica giggles.\n\n\"Not helping, Jess.\" Jake says even as he chuckles. \"Sarah, it's not an ear from a real elephant. It's a piece of fried dough with powdered sugar on it. It's shaped kind of like an elephant's ear. That's why they call it that.\"\n\n\"Sounds yummy,\" Sarah admits. \"Don't eat anything off an elephant, Jake. I like elephants.\"\n\n\"No trunk burgers then?\" Jake jokes.\n\n\"Ewwwww,\" Sarah squeals.\n\n\"How about elephant flank steak? That'd probably be as big as my car.\" Jake continues.\n\n\"No eating elephants.\" Sarah states emphatically.\n\n\"All right, no elephant eating. You win, Sar-bear.\" Jake chuckles.\n\n\"Good.\" Sarah states. \"Are you going to play in your game? I like watching when you play otherwise, it's boring.\"\n\n\"Thank you for saying so, Sarah but I doubt I'll be playing in the game.\" Jake answers.\n\n\"But he is on the homecoming court so we get to cheer for him on that.\" Jessica jumps in. \"My friend Staci and her boyfriend Ray are on the court too so we'll be cheering for them.\"\n\n\"Why aren't you on the home court?\" Sarah asks.\n\n\"It's called homecoming and we're looking into that.\" Jake answers.\n\nJessica shakes her head. \"I still can't believe that you guys went to Ms. Simpson with that. I'm still the new girl at school, Jake. Of course I didn't get on the homecoming court.\"\n\n\"Everyone at school loves you.\" Jake tells her. \"Well maybe not, Jamie. You did try to knock his block off with that volleyball shot a few weeks back.\"\n\n\"I'm still mad that I missed.\" Jessica admits. \"How's the drawing coming?\"\n\n\"Just... about... done.\" Jake answers as he puts the finishing touch on his sketch of Sarah.\n\nHe spins his drawing board around so Jessica can see.\n\n\"Oh wow, I love it!\" Jessica exclaims. \"Mom, come in here!\"\n\nA few moments later Dr. Golden appears in the doorway.\n\n\"You bellowed, dear?\" She asks.\n\n\"We're out in the country now, Mom so I hollered.\" Jessica giggles. \"Take a look at Jake's drawing.\"\n\n\"I'm warning you now, Jake; it better not be of Jess as a French girl.\" She jokes.\n\n\"Mom, it's of Sarah for goodness sake!\" Jessica blushes at the implication.\n\n\"I was just kidding, Jessica.\" Dr. Golden assures her as Jake hands her his drawing board. She looks at the sketch of a laughing Sarah and smiles. \"Wow Jake, I think this one is even better than the first one you did. This really captures our little Sarah beautifully. Mr. Pennington can still get this entered into fair?\"",
        "Jake nods. \"As long as I got them to him by Friday, he could get them in.\"\n\n\"This is really amazing, Jake. I can't wait to see this one hanging with the one of Jessica.\" Dr. Golden says.\n\n\"Mr. Pennington let slip that Jake's going to have three pieces there but I can't tell you about the other one because even I don't know what it is.\" Jessica tells her.\n\n\"I guess it's a good thing we all like surprises, Jake.\" Dr. Golden states.\n\n\"I love surprises!\" Sarah announces. \"Especially good ones, like elephant ears.\"\n\n****\n\n Thursday \n\n\"Jake!\" Coach Pennington calls out as Jake exits the locker room.\n\n\"Yeah, Coach?\" Jake answers as he trots over.\n\n\"The late guy to practice has to help me so grab one of these handles.\" Coach Pennington tells him.\n\n\"The homecoming rehearsal thing took longer than expected, Coach.\" Jake explains then looks at the cooler full of water. \"Aren't these usually down on the field before practice, Coach?\"\n\n\"This one isn't for drinking, Jake.\" Coach Pennington answers.\n\nJake and Coach Pennington heft the cooler and begin walking towards the field.\n\n\"So this is some sort of punishment then?\" Jake jokingly asks.\n\n\"Just be glad that this is a walkthrough practice for tomorrow's game and you aren't padded up.\" Coach Pennington tells him.\n\n\"We should always be thankful for the small things or so my grandmother tells me.\" Jake comments.\n\n\"Hey hold up, Jake!\" Ray shouts as he exits the locker room.\n\n\"Running late too huh, Ray?\" Coach Pennington asks as Ray jogs up to them.\n\n\"I got hung up at that rehearsal thing too.\" Ray answers as he takes the handle of the cooler from Coach Pennington.\n\n\"Hung up with Staci is more likely.\" Jake teases.\n\n\"Oh like you wouldn't be even later if Jessica were out there with us like she should have been.\" Ray responds.\n\n\"How you two jokers managed to get girlfriends this year is beyond me.\" Coach Pennington jokes.\n\n\"I'm very lovable, Coach.\" Jake states. \"I got tested.\"\n\n\"I keep telling you that you took a test to see if you were insane and that scoring high on it was a bad thing.\" Ray jokes.\n\n\"I was told to always try my best.\" Jake answers.\n\n\"I prayed for football players this season and I end up with you two jokers. Talk about punishment.\" Coach Pennington chuckles as he shakes his head.\n\nThey reach the field and Coach takes back the handle Ray had so he can go join first team. He and Jake carry the cooler over to where the defense waits.\n\n\"It's nice to see you making Jake do some manual labor, Coach but the water buckets are already here.\" Antoine points out.\n\nCoach Pennington chuckles but instead of answering him, he grabs his duffle bag and proceeds to dump the footballs inside it into the cooler of water.\n\n\"Anyone see the weather forecast for tomorrow night?\" He asks the group.\n\n\"They're calling for rain.\" One of the defensive linemen calls out.\n\n\"Correct.\" Coach Pennington nods. \"That means a wet football and we are going to be ready for that. It's unlikely we'll be seeing any passing from East tomorrow but I want us to be ready just in case. Dime package, three deep coverage and let's throw a nice inside blitz at Jake. I hear that he loves those.\"\n\n\"I thought we were friends, Coach!\" Jake calls out and gets a laugh from everyone except Jamie.\n\n\"That's what you get for thinking, Jake.\" Coach Pennington states as he walks over to the offense huddle.\n\nThe defense lines up and Jake plucks a football from the water.\n\n\"Damn, cold water too, Coach?\" Jake asks. \"Now, I know this is some kind of punishment for sure.\"\n\n\"We'll be lucky if it's in the fifties at game time, Jake.\" He points out. \"Add the rain to that and...\"\n\n\"And we get a soggy homecoming.\" Jake answers. \"That's going to be great. What's the play, Coach?\"\n\n\"As long as it's a pass, I'll leave it up to you, Jake.\" He states. \"Show us what you've got.\"\n\nJake nods and turns back to the running back and receivers.\n\n\"Okay, shotgun formation. Corner routes for my wide outs and curls for the rest. Cut them at ten yards. We'll go on one.\" Jake tells them.\n\nThey nod and jog off to their assigned locations as Jake takes his.\n\n\"Set... hut,\" Jake shouts then drops back five steps.\n\nIn front of him, he spies Antoine dropping back into coverage while Jamie makes a beeline straight for the blitz. Knowing he has a moment, Jake looks to his left for a free receiver and spots that Monte has a step on his coverage man. He attempts to heave the ball in Monte's direction but the wet ball slips out before he's ready and it flies out the backfield like a pop fly in baseball.\n\n\"Shit,\" Jake states as Antoine snags it from the air. He heads down field until Jake catches and taps his shoulder.\n\n\"Nice pass, dickhead.\" Jamie remarks as they head back towards Coach Pennington.\n\n\"That's what I like about you, Jamie. You're always so quick with the compliments.\" Jake jokingly says.\n\n\"Fuck you, Jake.\" Jamie snarls.\n\n\"Good hands, Tank.\" Coach Pennington says as they reach him.\n\n\"I got lucky, Coach.\" Antoine states as he tosses him the ball. \"Jake's passes are usually uglier than that.\"\n\n\"I'll have you know that my passes were voted prettiest \"Comedians. I'm coaching a team of comedians.\" Coach Pennington chuckles as deposits that ball back into the cooler and pulls another out.\n\n\"Let's run it again, funny guys.\" He tells them.\n\nCoach Pennington has Jake run several passes against the defense, the wet footballs becoming easier to handle for both sides as time goes on.\n\n\"So that's what the cooler was for.\" Ray says as he spots Coach Pennington pull a drenched football from it. Ray and all of first team's receivers have walked over to watch the defense after the offense practice was dismissed.\n\nCoach Pennington watches as Jake drops back and launches a decent spiral that sends a spray of water flinging off in it's wake. It hits Monte in stride and after a small bobble he manages to haul it in for a modest gain.\n\n\"Nice play offense!\" Coach Pennington states then turns to Ray and the other just arrived receivers. \"You guys done already?\"\n\n\"Coach Yates said he had a meeting to get to so he cut us all loose a little early.\" Ray explains.\n\n\"He could have given us the night off for all the passes we threw.\" Mitch Channing, wide receiver of first team grumbles.\n\n\"I don't see us really throwing many passes guys because of the weather but feel free to jump in here and catch some of Jake's passes, if you want.\" Coach Pennington tells them.\n\n\"I'm game, Coach.\" Ray comments then jogs over to the huddle. \"Someone said there were ugly passes being thrown over here. I came to see them firsthand.\"\n\n\"Is that what I sound like when I'm trying and failing to be funny?\" Jake quips. \"No wonder everyone thinks that I don't have a funny bone.\"\n\n\"I missed you too, sweetie.\" Ray laughs. \"Now are you going to throw some soaking wet footballs my way, or what?\"\n\n\"They're cold too and the first one's coming your way, funny guy.\" Jake tells him. \n\nAs practice continues the rest of the first team receivers sub in with the third stringers and by the time Coach Pennington calls it to an end, each have gotten used to catching the wet footballs.\n\n\"That was great practice tonight guys, I liked what I saw from each and every one of you.\" Coach Pennington tells them. \"Now I want you all to go home, get some rest and come to school tomorrow knowing that you're ready for anything that East may throw at you.\"\n\n****\n\n Friday \n\nThe Golden Family and Gibson family are all seated together in the packed stadium under four umbrellas to shield them from the hard rain that's falling. Shelly, Jody and Roxie are huddled together under their own umbrellas seated next to Jessica and Sarah.\n\n\"The news says this isn't likely to let up anytime soon.\" Mr. Gibson tells the group as he slips his cell phone back into his pocket.\n\n\"If you guys want to leave, we'd understand.\" Mrs. Gibson tells Dr. Golden.\n\n\"We might once we see all the winners at homecoming.\" Dr. Golden answers. \"We bundled up good but I'm worried about Sarah catching a cold.\"\n\n\"I'm fine, mom.\" Sarah calls out.\n\nJessica looks over at the game clock. It reads six minutes and twenty seconds to halftime. The score is knotted at seven, as it's been a defensive struggle since neither team seems willing to pass in the downpour. East is driving towards the goal line on the shoulders of their huge running back.\n\n\"I'll take Sarah to get some hot chocolate when we get the ball back.\" Jessica tells her parents.\n\n\"Tell Bobby hi when you go.\" Jody giggles.\n\n\"I was wondering where he took off to.\" Jessica states.\n\n\"Over at Marybeth's concession booth, just staring at her like a lovesick puppy.\" Roxie tells her.\n\n\"Aw, that's cute.\" Jessica comments.\n\n\"You might be seeing him pretty soon, Jess.\" Mr. Golden states as he watches the East running back break Jamie's attempted tackle. A couple of moments later and he's high stepping his way into the end zone for a score.\n\nMr. Gibson blows out an exasperated breath instead of cursing in front of Sarah and his wife pats his shoulder appreciatively.\n\n\"I guess we're getting that hot chocolate now, Sar-bear. Ready?\" Jessica asks.\n\n\"Yep,\" Sarah answers as she hops to her feet.\n\n\"Can I get anyone else anything while I'm there?\" Jessica asks.\n\n\"Just some more points if you can rustle some of those up for us, Jessica.\" Mr. Gibson states.\n\n\"I'll see what I can get them to whip up.\" Jessica answers as she takes Sarah's hand in one hand and the umbrella in the other. \"We'll be back shortly.\"\n\n\"Give Bobby some grief from me, Jess!\" Roxie calls out as Jessica and Sarah ascend the stadium steps.\n\nWhile Jessica's gone, the Wildcat's return the kickoff to their thirty-five yard line. The first play goes for no yardage as the running back slipped in the mud after taking the handoff.\n\n\"Clean your cleats!\" Mr. Gibson shouts.\n\n\"I'm not sure how much that would even help on a night like this.\" Mr. Golden comments. \"I feel for whoever has to get this field back in shape after this.\"\n\nDown on the field, Patrick takes the snap and as he turns to hand the ball off to Kendall, he goes down. When he doesn't get back up, the whole Wildcat side of the stadium goes silent. Coach Yates and the trainers jog out onto the field then kneel at Patrick's side.\n\n\"Damn, this doesn't look good.\" Mr. Gibson says as the trainers are looking over Patrick's ankle. Soon they've helped to his feet and over to the bench where they pull off his show to inspect his injured ankle.\n\n****\n\n\"I got extra marshmallows!\" Sarah announces as she and Jessica return to the group.\n\n\"Marybeth loaded her up and I told her that you were going to leave Sarah with her because of it.\" Jessica tells them.\n\n\"That's not a bad idea.\" Dr. Golden says.\n\n\"It got all quiet while we were in line.\" Jessica says. \"What'd I miss?\"\n\nShelly points down towards the bench and Jessica sees the trainers working on Patrick.\n\n\"He just took a step back and dropped.\" Jody states.\n\n\"What a shame.\" Roxie says and her sarcasm is duly noted.\n\nAfter the injury timeout Coach Yates sends out the junior who is the Wildcats second string quarterback onto the field.\n\n\"He's not going to send Jake in?\" Jessica wonders aloud.\n\n\"Jake missed a lot of time because of his injuries.\" Mr. Gibson tells her.\n\nPlay resumes and when the ball is snapped, the junior bobbles the snap, fumbles it, then instead of just falling on it he tries to pick it up. One of East's linebackers plows into him as another manages to scoop up the wet ball and trot into the end zone. The Wildcat fans sat in the stand stunned. Their star quarterback is on his way to the locker room his return questionable, East is their biggest rival and they just went up by two touchdowns in a torrential downpour. \n\nThe Wildcats receive the kickoff and return it to the nineteen-yard line.\n\nJessica had turned to tell Roxie something when Shelly nudges her.\n\n\"They're sending Jake in, Jess.\" Shelly points to the field.\n\nJessica's head jerks towards the field and she watches number seventeen jog out to the huddle.\n\n\"Please, please, please don't get hurt, Jake.\" She pleads silently.\n\n****\n\nCoach Yates grabs Jake by his shoulder pads and pulls him close.\n\n\"Just hand it off and get us to halftime. Halfback off right tackle and if there's a fumble, fall on the goddamn ball!\" He orders Jake before pushing him towards the field.\n\n\"Finally!\" Ray states as Jake joins the huddle.\n\n\"It's about fucking time they put you in, Jake.\" Kendall welcomes him.\n\n\"Thanks guys.\" Jake says. \"You guys are all muddy. Let's try to keep me somewhat clean, huh. I got this homecoming thing coming up.\"\n\n\"Jake needs to look pretty for his pictures.\" Kendall laughs.\n\n\"That'd be a nice change of pace from how he usually looks.\" Ray adds.\n\n\"All right you jokers, we're running Kendall here off right tackle. Let's open up a hole for him. We've got some catching up to do.\" Jake states. \"On two, on two.\"\n\nJake dries his hands on the towel hanging at his waist then gets behind the center. \"Set... hut... hut.\"\n\nHe takes the snap, turns right and buries the ball in Kendall's gut. Kendall shoots through a small gap in the line for a gain of five yards before he's tackled.\n\nJake looks to the sidelines expecting Coach Yates to call a timeout but it doesn't happen. The speedy sophomore, Monte jogs to the huddle.\n\n\"Coach says we're to eat the clock. Halfback dive to the left.\" He tells the offense.\n\n\"You heard the man.\" Jake says looking up at the clock and watching it tick down. \"You all right, Kendall?\"\n\n\"Getting winded, Jake.\" Kendall answers. \"We haven't done anything but running plays this whole game.\"\n\n\"Yates isn't going to call for a pass in these conditions.\" Ray sighs. \"Even though Coach Pennington had us practice exactly for these conditions.\"\n\n\"Let's just make it to halftime only down by two touchdowns.\" Jake tells them as the play clock ticks down to ten. \"Let's run this on one.\"\n\nThe Wildcats line up and Jake again takes his position. The play clock clicks down to three before Jake calls out his cadence. He takes the snap and again hands off to Kendall who is immediately hit at the line by a blitzing linebacker. The ball is jarred loose and hits the soggy ground. Jake spots it and dives for it before being buried under a crush of East players and his own.\n\n****\n\n\"Is he getting up?\" Jessica asks as she once again has covered her eyes with her hands.\n\n\"I don't know. I can't see either.\" Sarah states as she had copied her big sister by covering her eyes when Jake dove for the ball.\n\n\"He's up!\" Mr. Golden announces to them.\n\n\"And more importantly, he has the ball.\" Mr. Gibson says garnering a smack on his shoulder for his wife. \"I mean to say that Jake's tough. He'll be fine.\"\n\nThe group watches as the Wildcats run another play that gains enough for a first down but still no time out is called.\n\n\"They're playing for halftime.\" Mr. Gibson tells the group.\n\n\"Interesting strategy.\" Mr. Golden says.\n\n\"That's Yates. He's afraid that he's watching his record of perfect seasons go down the drain.\" Mr. Gibson shares.\n\n\"Is that why Jake's not throwing the ball, Mr. Gibson?\" Jessica asks.\n\n\"That and this rain, Jessica.\" He answers her.\n\n\"But Mr. Pennington had them practice for this. Jake told me all about it after yesterday's practice. I spent an hour warming his hands back up.\" Jessica shares. \n\n\"Do I want to hear how you managed to do that, dear?\" Dr. Golden asks.\n\n\"Lovingly?\" Jessica suggests with a grin.\n\n\"I'll just bet.\" Dr. Golden says shaking her head.\n\n\"My point is, why not at least give it a try?\"\n\n\"Yates plays by a very specific book and that book says that in any kind of rain, you run the ball.\" Mr. Gibson says. \"That doesn't mean that he's right but that's Yates. You won't see anyone throwing a pass tonight if he has anything to say about it. He's stubborn like that.\" \n\n****\n\nJake watches the last couple of seconds before halftime tick away while in the huddle. The offense heads to the sideline and a waiting Coach Yates.\n\n\"That could have gone better but at least you didn't lose the football.\" He comments. \"Everyone head to the locker room except for you damn homecoming kids. Hustle your ass up there once this shit is done. We are losing this game, you know?\"\n\nRay, Antoine and Jake head over to where Ms. Simpson and the rest of the homecoming court is waiting under umbrellas including Patrick who has changed into a suit.\n\n\"Nice suit there, Patrick.\" Antoine states. \"How's that ankle feeling?\"\n\n\"I can't put weight on it. Looks like I'm out the rest of the game.\" Patrick answers.\n\nRay starts to say something but Ms. Simpson speaks up.\n\n\"Okay, due to the field being a huge mess, we're doing this here on the track.\" She explains. \"Ladies, grab your escorts and be careful of the mud on them.\"\n\nMarisha walks over to Jake and hands him the umbrella to hold for them.\n\n\"How is it that you've gotten even more gorgeous than when I last saw you, Marisha?\" Jake asks her as he takes in her elegant purple dress.\n\n\"Careful Jake or I'm telling your girlfriend that you're an insatiable flirt.\" She responds with a smile.\n\n\"Didn't you already do that though?\" Jake asks as the pair wait for Ms. Simpson to announce their names.\n\n\"I did.\" Marisha laughs. \"We've had a couple of nice little chats so far. She's such a sweetheart and gorgeous in her own right.\"\n\n\"Go ahead and ask me the question that everyone asks.\" Jake sighs exaggeratedly.\n\nShe giggles. \"Is it, how'd a guy like you get a girl like Jessica?\"\n\n\"That's the one.\" Jake chuckles.\n\n\"Well?\" Marisha asks but Ms. Simpson calls out their names.\n\n\"Marisha Johnson and her escort, Jake Gibson.\" Ms. Simpson says into the microphone.\n\nJake and Marisha walk arm in arm towards the already assembled homecoming contestants.\n\n\"You owe me an answer, mister.\" Marisha whispers.\n\n\"It turns out that if you let the rabbit keep his foot, you get even better luck.\" Jake whispers.\n\nShe laughs loud enough for Ms. Simpson to glance over at them. Ms. Simpson gives Jake a glare but then shakes her head when he winks at her.\n\n\"Let's give a nice round of applause for your Wildcat homecoming court.\" Ms. Simpson says to the crowd.\n\nAfter a couple of moments of applause, she waves at the crowd to quiet down. \"Let's announce the winners so these kids can get out of this rain. First, your vote for the male student that most embodies school spirit that we crown as Mr. Wildcat is... Antoine Adams!\"\n\nThe crowd cheers loudly as Antoine waves to them before stepping over to where Ms. Simpson instructs him.\n\n\"And your vote for the female student that most embodies school spirit that we crows as Miss Wildcat... Marisha Johnson!\" she announces.\n\n\"I told you that you'd leave me standing alone, gorgeous girl. Congratulations.\" Jake whispers as Marisha waves to the crowd. He hands her the umbrella and claps as she joins Antoine.\n\n\"Let's hear it again for our Mr. and Miss Wildcat.\" Ms. Simpson calls out to the crowd who cheer loudly. Once it dies down, she continues. \"Now without further adieu your vote for your homecoming king... Patrick Greene!\"\n\nThe crowd cheers as Patrick limps his way to the winner's area. Jake looks over at Ray and Staci and she mouths, bullshit, while shaking her head. Jake mouths back \"wrong foot,\" and Ray starts laughing.\n\n\"And last but most certainly not least, your Wildcat homecoming queen... Somer Douglas!\" Ms. Simpson announces.\n\nThere's applause as Somer struts over to join Patrick but it's quieter than all the others were as is most of the student body in attendance are confused.\n\n\"Congratulations to our homecoming king and queen and our Mr. and Miss Wildcat. All hail the reigning king and queen and also get out of this rain!\" She announces to the crowd who applaud and laugh at her quip.",
        "****\n\nJake, Ray and Antoine reach the locker room just as the team is coming back out for the second half. After Coach Yates yells at them for wasting time, they head to the sideline.\n\nCoach Pennington waves Jake over as the kick return team for the Wildcat's takes the field.\n\n\"What are you doing out there, Jake?\" He asks.\n\n\"Handing the ball off?\" Jake answers questioningly.\n\n\"You know that's not your game, right?\" Coach Pennington responds.\n\n\"Well yeah but that's all that Yates is sending in.\" He tells him.\n\n\"Do you know how we won the scrimmage Jake?\" \n\n\"No. I was unconscious at the time, Coach.\" Jake laughs.\n\n\"Smartass,\" Coach Pennington chuckles. \"We won because you took over the offense. You need to do that tonight.\"\n\n\"The second I audible out of one of Yates plays, he'll yank me out of the game.\" Jake points out.\n\n\"There's not another back up, Jake.\" Coach Pennington points out. \"Unless Yates puts Elliot in and you know that's not likely to happen.\"\n\nJake glances over at Elliot who is the team's punter and probably weighs a hundred and twenty pounds with the rain currently soaking his uniform.\n\n\"Offense!\" Yates shouts.\n\n\"What's it gonna be, Jake?\" Coach Pennington asks.\n\nJake thinks for a second then jerks his thumb over his left shoulder towards the second string quarterback. \"Better have someone hide his helmet.\"\n\nCoach Pennington chuckles and shoves Jake towards the field.\n\nJake jogs to the huddle and announces, \"I'm about to do something really dumb. Anyone want to join me?\"\n\n\"How dumb are we talking, Jake?\" Ray asks.\n\n\"I'm going to throw one my ugly passes.\" Jake tells them.\n\n\"Yates called for a running play. He will yank you if you throw a pass in this mess.\" Scott Kennedy states. \"Go ahead and get kicked off the team, moron.\"\n\n\"I'm taking that as a maybe from Scott.\" Jake chuckles, he was expecting nothing less from one of Patrick's inner circle of friends.\n\n\"Screw it,\" Kendall states. \"We're down by two touchdowns and you all know what Jake here can do. I'm in.\"\n\n\"We practiced for this, guys.\" Ray announces. \"Let's do this.\"\n\n\"All right, we're going to line up for the halfback dive then I'll audible out.\" Jake tells them. \"Shotgun formation out of the audible. Mitch, you and Ray run corner routes. Scott?\"\n\n\"Leave me out of this crap, Jake.\" Scott tells him.\n\n\"Scott, you do you.\" Jake says. \"Kendall you hang in and block any rushers. On one.\"\n\nThe huddle breaks and the team lines up. Jake gets in behind the center then after he looks over the defense he calls out, \"Shift,\" and jogs back a few steps.\n\n\"What the hell is he doing?\" Coach Yates shouts as he watches the team shift.\n\n\"Playing his game.\" Pennington tells him.\n\n\"Not today he's not.\" Yates states and starts towards the referee to call a time out.\n\nPennington grabs his shoulder to stop him. \"Give Jake a shot. He might surprise you.\"\n\n\"The only surprise will be seeing how fast I can clean out his goddamn locker!\" Yates shouts then shakes his head. \"I'll probably need that timeout to clean this mess up.\"\n\nOn the field, Jake takes advantage of East's confusion over the shift to bark out a quick count. The ball is snapped and he drops back a couple of steps as his eyes scan downfield.\n\nMitch slips and goes down in the mud when he tries to make his cut. Ray manages to stay upright when he cuts so Jake lobs the pass in his direction. The ball is a little overthrown but Ray manages to tip it back to himself then tiptoe the sideline before being pushed out of bounds after a twelve-yard gain.\n\n\"Ready to let him play his game?\" Coach Pennington asks Coach Yates.\n\nYates grumbles under his breath for a moment then yells for Elliot to get his helmet.\n\n\"Coach?\" Elliot asks.\n\n\"You're going in as quarterback.\" Yates tells him. \"Get your ass on the field and send me Jake, now!\"\n\n****\n\nAs the Wildcats head to the huddle Jake sees Elliot heading his way.\n\n\"Well it was fun while it lasted, guys.\" He calls out as he jogs to the sideline. When he gets there, Yates grabs him by the facemask.\n\n\"Just what in the hell did you think you were doing out there?\" He shouts.\n\n\"I was trying to get us back in the game.\" Jake answers.\n\n\"That is my job. Yours is to run the fucking plays I send in not pull some rebel cowboy bullshit.\" Yates snaps. \"Now go sit your ass on the bench before I send you to clean out your goddamn locker!\"\n\nJake walks over to the bench then angrily jerks off his helmet.\n\n\"Don't throw it.\" Coach Pennington warns as he walks over to the bench.\n\n\"I tried telling you that before I went out there.\" Jake states.\n\n\"I meant your helmet.\" Coach Pennington clarifies. \"I've got a feeling that you're going to need it soon.\"\n\nJake doesn't answer him he just looks to the field to watch the next play.\n\nElliot calls out a timid cadence then turns the wrong direction once the play begins. He stands there looking confused for a second before East's defenders swarm him.\n\n\"Why didn't he put the second string kid back in?\" Jake asks Pennington as the refs begin pulling bodies off Elliot.\n\n\"Concussion.\" Pennington answers. \"He failed the protocols so he's on the way to hospital to get checked out.\"\n\n\"Yeah, those aren't fun.\" Jake comments.\n\nOn the next play, things go from bad to worse for the Wildcats. Elliot turns the right way this time but instead of placing the handoff in Kendall's stomach, he aims higher hitting his shoulder pad. The ball bounces off it and into the waiting hands of one of East's defenders who lowers his shoulders, knocks the much tinier Elliot out of his way on his way to the end zone. As Yates is going ballistic on the sidelines, Jake leans back onto the bench knowing that this is going to be a long night.\n\n****\n\n\"I guess he'll have to put Jake back in now right, Mr. Gibson?\" Jessica asks as East's kicker boots the ball through the uprights for the extra point.\n\n\"I wouldn't bet on it, Jessica.\" He answers her. \"See, Yates is the kind of coach that it's his way or the highway. That's why he pulled Jake in the first place. Jake doesn't play that way.\"\n\n\"But Coach Yates way isn't working.\" Jessica states as she looks at the scoreboard showing East up by three touchdowns with just a quarter and a half to go. \"He's got to see that.\"\n\n\"Even if he does, he's too stuck in his ways to change.\" Mr. Gibson answers. \"Jake's not going back in this game.\"\n\nJessica looks over at Sarah, Shelly, Jody and Roxie and smiles at them.\n\n\"Jess, why are you smiling?\" Roxie asks.\n\nAs if in answer, Jessica begins a chant. \"Jake. Jake. Jake.\"\n\nSoon Sarah and the other girls pick it up as well. The parents give them a look then with shrugs all around also begin to chant. Down on the track, Staci hears her friends chanting Jake's name and soon the whole section around the Misfits and family are chanting.\n\n\"Jake! Jake! Jake!\" Staci begins to shout and pump her arms.\n\n\"What in the hell are you doing, Staci?\" Somer demands to know.\n\n\"Pumping up the crowd.\" C.C. answers with a giggle before she joins her teammate in the chant. Somer begins to argue but other girls on the cheer team join in as others in the stadium pick up the chant.\n\nJake begins to hear the chant over the rain and glances back over the fence separating the field from the track.\n\n\"What's going on?\" Ray asks as he walks over to Jake.\n\n\"I don't have any idea.\" Jake answers.\n\nStaci turns towards the field and points one of her pom-poms at Jake.\n\n\"Oh shit, they're trying to get you back in the game!\" Ray comments.\n\n\"Yates give in to peer pressure? That's not happening.\" Jake points out.\n\n\"Dude, listen to them!\" Ray laughs. \"There's no ignoring that!\"\n\nJake turns to look back at the field, a little embarrassed as the chant grows in volume. The Wildcats return the kickoff to their own twenty-five and Yates yells for the offense. As they huddle around him, he looks to the bench and shouts at Jake. \"Jake, get your ass over here.\"\n\n****\n\nWhen Jake jogs out onto the field the crowd erupts into thunderous cheers.\n\n\"How'd a third stringer like you get enough money to pay off all those people to chant your name?\" Kendall laughs as Jake joins the huddle.\n\n\"Couldn't it just be my sparkling personality?\" Jake asks.\n\nKendall and Ray look at each other then shake their heads. \"Nah!\" They answer in unison.\n\n\"Pennington was right; we are a bunch of jokers.\" Jake says before getting to the play. \"Let's see if we can surprise these guys again. Shotgun formation, streak routes for all the receivers, on one. Everyone on board with that?\"\n\n\"I ain't running anything you call.\" Scott comments.\n\n\"Then get the hell off our field and send in Monte. At least he'll try to help us win and not just be one of Patrick's little lapdogs.\" Jake tells him.\n\n\"Fuck you, Jake!\" Scott shouts.\n\n\"Get off the fucking field, now!\" Jake shouts back.\n\nScott attempts to stare Jake down but without any backup, he turns and jogs towards the sidelines.\n\n\"And Antoine calls Jessica a wildcat.\" Ray chuckles. \"Has she been giving you lessons, Jake?\"\n\n\"Oh he's learning from her, all right.\" Kendall laughs. \"Look at how much he's blushing.\"\n\n\"Are we playing the game or messing with me?\" Jake asks.\n\n\"Both.\" Ray and Kendall answer in unison as the rest of the offense laughs.\n\nMonte joins the huddle. \"I miss the joke?\" He asks.\n\n\"'Fraid so Monte but they'll catch you up. Ready to get a little muddy and maybe get us back into this game?\"\n\n\"Ready as I'll ever be.\" Monte laughs.\n\nJake tells him the play and they break the huddle. They line up in the shotgun formation and Jake shouts out his cadence. The ball is snapped and East sends the linebackers on a blitz. One of them is slowed by Carter's line but the other breaks through with a clear shot to Jake. Kendall cuts in front of Jake and manages to shove the linebacker wide. Jake steps up into the pocket and heaves the ball downfield just as the second linebacker plows into him. Monte is running a streak route and the ball hits him in stride. He tucks it and races into the end zone for the score.\n\n****\n\n\"Not again.\" Jessica whispers as Jake is slammed into by East's linebacker. \"Please don't let me be the one that got him hurt again.\"\n\nRoxie slides an arm across Jessica's shoulders and Shelly pats her knee.\n\n\"He'll be okay, Jess.\" Shelly assures her.\n\n\"He's tough, Jess. Look at how much abuse we give him and he always comes right back.\" Roxie says and Jessica manages a small laugh.\n\n\"Thank you, Roxie. I needed that.\" Jessica lays her head on her friends shoulder.\n\nDown on the field, Kendall helps a muddied Jake to his feet. Jake turns to the stands and gives a wave towards the section where he knows that Jessica and the others are sitting.\n\n\"See, Jess. He's fine. I mean he's as fine as Jake can get I guess.\" Roxie giggles.\n\n\"I don't know, Roxie he can be pretty fine at times.\" Jessica says with a smile.\n\n\"Ooo do tell, Jessica.\" Jody chimes in.\n\n\"I tell you guys most of it during our text chats.\" Jessica states.\n\n\"Most but not all. I can tell by the way you're getting all flushed that we haven't heard everything.\" Jody giggles.\n\n\"I'm going back to watching the game now.\" Jessica tells them.\n\n\"You should.\" Roxie giggles. \"Though I'm not sure you'll be able to see any of it. You've got to be blinding yourself with as red as your cheeks are getting.\"\n\n****\n\nEast goes three and out on their next possession forcing them to punt. Kicking a rain soaked football is kind of like kicking a medicine ball. East's punter manages a fifteen-yard kick that gives the Wildcats the ball just shy of the fifty-yard line.\n\n\"They're going to be expecting us to pass so let's switch it up and see if we can catch them napping.\" Jake says in the huddle. \"Shotgun formation, inside handoff on two.\"\n\nThe play works and Kendall breaks off a run of thirty-yards before he's tackled.\n\n\"Nice call, Jake.\" Kendall states as he returns to the huddle.\n\n\"You did all the hard work, Kendall.\" Jake answers then looks at Ray. \"Ray, how's your coverage guy doing?\"\n\n\"You're going to throw another ugly pass that I have to make look good huh, Jake?\" Ray quips.\n\n\"I was thinking about it.\" Jake laughs.\n\n\"You put it up...\" Ray begins.\n\n\"And you'll run under it.\" Jake finishes. \"Let's do this then. Single back formation, Ray in motion on me then post route. Mitch, you and Monte give me streak routes to clear Ray a path but look for me to hit you if Ray's covered. On two.\"\n\nThe team lines up with Jake under center.\n\n\"Ready... Set...\" Jake begins then stamps his right foot sending Ray in motion.\n\n\"Hut.\"\n\nRay passes behind Jake.\n\n\"Hike!\"\n\nJake takes a five-step drop then lobs a pass towards the far pylon. Ray makes a diving catch in the end zone for the score.\n\n\"Are you seeing this shit?\" Jaime asks Scott as the two watch the offense coming off the field.\n\n\"It's hard to fucking miss.\" Scott answers. \"The damn crowd was chanting his name and now Jake has brought us to within a touchdown of tying this game like he's been leading this team all season. Patrick's going to lose his damn job over wanting to look good for fucking homecoming.\"\n\n\"This is a fluke and there's no way Yates will drop Patrick to second string.\" Jamie states. \"I don't give a fuck what Jake does out there tonight.\"\n\n\"You and Patrick both had better hope that's case.\" Scott says as they watch the team all rally around Jake and Ray to slap their helmets in congratulations. \"First he lost that tall hottie to Jake, I ain't never heard a crowd chanting Patrick's name and if he's not careful he's going to lose a lot more to that to him this year.\"\n\n****\n\nWith the game now close, East comes out after the kick off with a purpose. They move the ball down the field, eating up clock by running the ball until their drive stalls out at the Wildcats forty-yard line and they call a time out.\n\nThe defense huddles around Coach Pennington and listen as he lays out the play. \"They've got eight-yards for a first down. We hold them here and we give our offense a chance to win this thing. I want a four three formation. Inside blitz by you Jamie. Plug any hole you come across. Tank, you're gonna spy the quarterback just in case they try and throw.\"\n\n\"They haven't thrown the ball all game, Coach.\" Antoine points out.\n\n\"Now's a perfect time,\" Jake states as he's standing nearby the huddle. \"They don't think we'll be looking for it and they've gained confidence after watching us be able to throw it.\"\n\n\"Exactly,\" Coach Pennington states. \"They run a play action here, we bite on it and they'll go for six so we play this smart. We're doing man to man coverage and I don't have to tell you guys to not let your man get behind you.\"\n\n\"Des, if they throw it, he'll look to your guy first.\" Jake points out. \"He's the most consistent receiver they've got.\"\n\n\"Got it, Jake.\" Des nods.\n\nAs the defense heads back to the field, Coach Pennington steps over to Jake.\n\n\"Well someone's been reading the scouting reports.\" He chuckles.\n\n\"My dad reads off the stats to each high school game that's played in our division.\" Jake tells him. \"Some of it sticks.\"\n\nOn the field, East snaps the ball and sure enough they run a play action pass. Their quarterback drops back and slips when he tries to plant his foot. That slip causes the ball to float out of the backfield. Des, sees it coming well short and breaks towards the ball. The ball falls into his outstretched hands, he bobbles it, nearly loses it but then manages to secure it.\n\n\"PICK!\" Coach Pennington shouts alerting the defense to start blocking.\n\nDes's cleats are churning up turf as he takes off down the field while the crowd goes crazy. The only person between him and the goal line is East's quarterback who gives a halfhearted effort to chase down the faster cornerback to no avail. Des reaches the end zone tying the game with just less than three minutes left to play.\n\n****\n\n\"They've got a chance to win this if the defense can hold them here.\" Mr. Golden says.\n\nJake's dad chuckles at the new enthusiasm from Jessica's dad and he hates to put a damper on it but he explains anyway. \"East will play conservative and go for overtime. It gives them the best chance to win or at least walk away with a tie. If they mess up here and give the ball back to Jake and our offense, it's over because they can't stop our passing game.\"\n\nTrue to Mr. Gibson's prediction, East comes out running the ball and running down the clock. Coach Yates is using his timeouts to try to give his offense some time of the clock if East doesn't score.\n\n\"We need a stop here, D!\" Coach Pennington shouts as East, having moved the ball all the way to the Wildcat's thirty-yard line. He calls for a jailbreak blitz and it catches East unprepared. Jamie slams into the running back jarring the ball loose and Tank is there to fall on it giving the Wildcat's the ball with just under two minutes to go.\n\n\"Here we are again, Jake.\" Ray says as the offense huddles up.\n\n\"No timeouts left this time though.\" Jake responds. \"We've got to run the hurry up offense so look to me for the routes when we reach the line.\"\n\n\"Any runs?\" Kendall asks.\n\n\"Not until we get inside their twenty. I need you to stay in and keep them off my ass. I'll shout go if I need to dump it to you.\" Jake explains. \n\nKendall nods. \"Let's go get this, Jake. Just like the scrimmage.\"\n\n\"No concussion or messed up shoulder this time though, guys. I promised Jessica that I wouldn't let that happen again.\" Ray jokes.\n\n\"Yeah, I'd like to remember this win.\" Jake states then lays out the play for them.\n\nThey break the huddle and hurry to the line. Jake takes the snap and steps up into the pocket as his eyes scan downfield. Mitch makes a hard cut and Jake fires the ball his way. He makes the catch ten yards down the field and runs for another five before he gets tackled inbounds.\n\n\"On the ball!\" Jake shouts as the team runs to the line of scrimmage. As they're lining up, Jake holds up four fingers towards the receivers telling them to run corner routes. The ball is snapped and East is sending its own jailbreak blitz. Kendall manages to chip one of the rushers into another freeing Jake up to roll to his right. As Jake rolls out, Ray spots the blitz and runs back to the ball as he had been taught. Jake fires the ball just as he is tackled from behind. Ray snags the pass and turns up field. He stiff-arms his defender then dives out of bounds after a fifteen-yard gain.\n\nWith time running out, Jake hits Ray at East's ten-yard line. Ray breaks a tackle and heads for the end zone. He's hit at the three-yard line then slides on the wet grass into the end zone. As the stadium erupts in deafening cheers, Jake shouts to the offense. \"On the ball!\"\n\nRay saw one referee mark him short of the end zone and started frantically waving at Jake. Yates is arguing with the side judge that it's a touchdown while Jake is lining up the offense.\n\n\"Spin!\" Jake shouts towards Ray who nods in understanding.\n\nThe referee places the ball and winds his arm to run the clock. It begins to tick down from five. Jake lines up under center and East stacks the line expecting a quarterback sneak since they're so close. Jake calls out a quick cadence and instead of running; he turns and slings a quick pass to Ray. Ray had simply taken two steps into the end zone and spun back towards Jake, blocking out his defender from the pass.\n\nThe crowd that had been loudly protesting the previous call, explodes into cheers when the referee raises his arms indicating the touchdown. As the offense crowds around Ray to congratulate him, Jake looks up at the clock and sees that there's only four seconds left.\n\n\"Nice throw.\" Ray comments as they're jogging off the field.\n\n\"Better catch.\" Jake responds.\n\n\"Obviously.\" Ray laughs.\n\n\"Asshole,\" Jake quips as they reach the sideline.",
        "\"Way to keep your head in the game out there, Ray.\" Coach Yates compliments.\n\n\"I'm just glad that Jake was out there with us. He knew exactly what to do when I started waving at him.\" Ray comments.\n\n\"Yeah, nice play out there, Jake.\" Coach Yates grumbles before walking away.\n\n\"Nice game out there, Jake.\" Coach Pennington says as they watch the kickoff.\n\n\"Thanks for the advice, Coach.\" Jake says. \"It was fun. Probably the last game I'll ever get to play in but it was fun.\"\n\n\"You never know, Jake.\" Coach Pennington tells him. \"Just like the scrimmage game, you made a big impression on a lot of folks. Even Yates may not be able to keep you out of games now.\"\n\n\"He wouldn't even talk to me after he put me back in the game, Coach.\" Jake says. \"He'd just scowl at me.\"\n\n\"I think its killing him that he has you on third string when you should be starting.\" Coach Pennington shares.\n\n\"That'll never happen, Coach.\" Jake points out.\n\n\"Yeah and that's a damn shame because you've shown a lot of heart this year coming back from that injury.\" He tells him. \"And not only comeback but you come out and play a game like you did tonight. Ray may have scored the winning touchdown, Jake but you that made that possible in the first place. Don't forget that.\"\n\n\"I won't, Coach.\" Jake assures him. \"And thanks for the pep talk. I appreciate it.\"\n\n****\n\nAfter showers and being congratulated from their friends and families, Ray, Staci, Jake and Jessica begin making their way to the parking lot. As they pass the gymnasium, Marisha walks over.\n\n\"You guys aren't coming to the dance?\" She asks.\n\n\"Sorry gorgeous but we're headed to Staci's to relax and unwind. Maybe another shower or three because I still feel like I've got mud on me.\" Jake answers.\n\n\"Aw, and here I was hoping for a dance with my handsome escort and the hero of the big game.\" Marisha tells them.\n\n\"Now who's a flirt, gorgeous?\" Jake teases.\n\n\"Still you!\" Marisha laughs.\n\n\"She's got you there, baby.\" Jessica says. \"I'll make sure that you get a dance with him at prom though, Marisha.\"\n\n\"Just be warned that you'll be putting the life of your toes at risk.\" Jake tells her.\n\n\"We'll make it a slow one so all you have to do is shuffle a bit.\" Marisha giggles. \"That should keep my toes safe as long as Jessica's okay with that.\"\n\n\"I can't refuse a request from Miss Wildcat, now can I?\" Jessica asks. \"Congratulations on that. I was cheering so loud for you. We all were.\"\n\n\"That's because all of you guys are so sweet.\" Marisha says then gives Jessica a hug. \"It's such a shame that you didn't make the court at least Jessica. I would have sworn that you'd make it.\"\n\n\"It's being looked into.\" Staci tells her.\n\nMarisha raises her eyebrows. \"Really? Well good because I know that there's no way that Somer won queen. Something about that doesn't smell right to me and several others.\"\n\n\"I thought the same thing.\" Staci shares.\n\n\"Ms. Simpson is looking into it and until she tells us one way or another all we can do is wait.\" Jake says.\n\n\"I guess that Jake's right. Not much we can do until we hear something more.\" Marisha agrees. \"I'll let you get your guys out of here now if you promise to take good care of them.\"\n\n\"I think we can certainly manage that, Marisha.\" Staci answers as she hugs Ray close.\n\n\"You get back inside and break some more hearts.\" Jake says as she gives him a hug. \"Just make sure your boyfriend knows that we're dancing at prom.\"\n\n\"I'll make sure of it, Jake.\" She giggles before heading back inside.\n\n\"She's sweet.\" Jessica states as the couples begin walking again. \"I'm glad you got to escort her. It gave us a chance to talk and get to know each other.\"\n\n\"There she goes again, making new friends.\" Ray laughs.\n\n\"That's our Jess.\" Staci laughs. \"Everyone loves her and speaking of  loving , we should getting this little party on the road.\"\n\n\"I can't believe that your mom's cool with us all spending the night.\" Ray comments.\n\n\"Well she only really knows that Jess is spending the night but she's out with her latest fling. She told me after the game not to expect her home tonight.\" Staci explains. \"It'll be fine.\"\n\nAs the group reaches the parking lot, a man approaches them.\n\n\"Excuse me but are you're Ray Halston, right?\" the man asks.\n\n\"Uh, yes?\" Ray answers confused.\n\n\"My name's Lou Routh and I'm a recruiter for Clemson. You played a great game tonight.\" He says handing Ray a card.\n\n\"Thank... thank you, sir.\" Ray stammers.\n\n\"I was out here to see your quarterback, Patrick Greene but thankfully I stayed after he went down and got to see you play.\" Lou says then turns to Jake. \"If you're his backup and play like that, I hate I missed seeing him. That kid's arm must be platinum because yours is gold. Here, take one of my cards too. We don't usually scout backups but you looked mighty impressive out there.\"\n\n\"Thank you, sir.\" Jake nods as he accepts the card.\n\nLou turns back to Ray. \"Well I won't hold up you kids any longer. I just wanted to introduce myself, let you know that I'll be coming out to a few more games and will be keeping a close eye on you. You all have a great night.\"\n\nAs he leaves Ray turns to Staci and hugs her tight. \"Oh my God, Clemson! That's big time, Staci!\"\n\n\"I know, baby!\" Staci says excitedly. \"I'm so happy for you!\"\n\n\"We are too but don't you dare hug me, Ray.\" Jake jokes.\n\n\"Can I hug Jess instead?\" Ray asks.\n\n\"You may.\" Jessica answers then proceeds to hug him.\n\n\"I knew I should have handed the ball off to Kendall on that last play.\" Jake sighs. \"He wouldn't be manhandling my girlfriend right now.\"\n\n\"I'm only hugging Jess. My girlfriend kissed you, pal.\" Ray laughs as he lets go of Jessica.\n\n\"That she did.\" Jake grins. \"You're still welcome for that by the way.\"\n\n\"Come on you two, let's get you both back to my house and start celebrating the big win.\" Staci states. \"Jess and I have big plans for the school's heroes.\"\n\n****\n\n\"Just what in the hell were you thinking?\" George Buchanan Greene, aka Buck Greene shouts at his son, Patrick as he arrives home from the homecoming dance with Somer.\n\n\"What are you talking about?\" Patrick asks.\n\n\"Should I go?\" Somer asks.\n\n\"Just go inside. I'll be there in a second.\" Patrick tells her.\n\nShe gives him a look but then heads inside leaving Patrick and his dad in their garage.\n\n\"You were saying?\" Patrick asks once Somer's inside.\n\n\"You took yourself out of the game tonight!\" Buck yells.\n\n\"I hurt my ankle!\" Patrick yells back.\n\n\"Which ankle, Patrick?\" Buck asks. \"Is it the left one or the right one because you've limped on both? Now you aren't limping at all.\"\n\nPatrick sighs at being caught. \"It was a meaningless game anyway and we won it. What does it matter?\"\n\n\"It matters because there were college recruiters in the stands watching.\" Buck tells him. \"It matters because your backup showed you up by passing the ball in the pouring rain. Did you hear them chanting his goddamn name to get him back in the game? I haven't heard any chants of Patrick from the crowd before. How is that kid on the third string?\"\n\n\"That was Jake Gibson.\" Patrick says. \"You know the one that Jamie laid out in the scrimmage game.\"\n\n\"The Gibson kid? I should have known.\" Buck says. \"The kid you've bullied all your life goes out and plays like that so you can get cleaned up for a dance. He's also the kid that poached that girl you were chasing earlier this year, isn't he? That Somer girl isn't a bad looking consolation prize but this Gibson kid is cleaning your clock this year.\" \n\n\"I've got plans for him.\" Patrick assures his dad.\n\n\"Well this plan of yours had better be something nice and showy because that kid is kicking your ass.\" Buck points out.\n\n\"Oh, it will be and in front of all of his friends, too.\" Patrick says. \"Now, if you'll excuse me, I need to go work on this plan of mine with that hot piece of ass that's waiting for me inside.\"\n\n****\n\n\"Are you sure this is going to all right, Jess?\" Jake asks as they follow Ray's car towards Staci's house. \"I mean if your folks find out...\"\n\n\"Mom knows.\" Jessica interrupts him.\n\n\"What?\" Jake asks.\n\n\"She knows that I'm spending the night at Staci's and I told her that you and Ray were coming over.\" Jessica explains.\n\n\"But not to spend the night though, right?\" He asks.\n\n\"I may have left out that little detail but we need some alone time, Jake.\" She states. \"Our little make out sessions on the porch are great, don't get me wrong but I think that we need a night of privacy to take the next step.\"\n\n\"Next step?\" He asks nervously.\n\n\"We've barely made it to second base, Jake and even then that's only been some over the clothes action at most.\" Jessica says. \"I plan on at least getting you out of that shirt and who knows where that'll lead us. I may even give the homecoming game hero a massage.\"\n\n\"Massage, huh?\" Jake asks.\n\n\"I do you owe you a few by now.\" She states. \"What do you think about that?\"\n\n\"I think Ray needs to drive faster.\" Jake chuckles.\n\n\"Agreed.\" Jessica giggles.\n\nThe couples pull into Staci's driveway a few minutes later and head inside the two-story house.\n\n\"Welcome,\" Staci states as she shrugs off her jacket. \"I've got beer, wine and some of the hard stuff if anyone wants to partake.\"\n\n\"Beer, please.\" Ray answers.\n\n\"Wine for me.\" Jessica says.\n\n\"Just a water for me, Staci.\" Jake answers.\n\n\"Water? Come on, Jake. There are no parents around tonight, it's just us.\" Staci says.\n\n\"One of us should stay sober enough to drive in case we have to go back out, right?\" Jake asks.\n\n\"Water it is then.\" Staci states as she heads towards the kitchen with Ray in tow.\n\nJake and Jessica head towards the living room and take a seat on the large sofa that dominates the spacious room.\n\nSoon Staci and Ray join them, handing Jessica a glass of wine that matches Staci's and Ray hands Jake a bottled water.\n\n\"We can watch some television or a movie if anyone wants to do that.\" Staci tells them. \"Or we can play cards.\"\n\n\"Or we could chat a little while.\" Jessica suggests after a sip of wine. \"This is good, Staci.\"\n\n\"I like it but mom thinks it's too sweet.\" Staci shares. \"That's why we can drink it without her noticing though I doubt she'd care much as long as we're staying in.\"\n\n\"Your mom is cool.\" Jessica comments. \n\n\"She can be at times.\" Staci agrees then smiles. \"Are we going to talk all night or are we going to take care of our brave football players, Jess?\"\n\n\"I guess they did earn a little bit of our tender love and care didn't they?\" Jessica asks.\n\n\"If we must,\" Staci sighs. \"Turn around this way, Ray.\"\n\nRay turns with her back to Staci and she begins to rub on his shoulders.\n\n\"You too, Jake.\" Jessica says.\n\nJake turns as well and soon Jessica is rubbing his shoulders.\n\nIt doesn't take long for Staci to abandon the massage and begin to make out with Ray.\n\nJessica continues to rub Jake's shoulders and upper back for several long minutes while watching Staci and Ray's hot make out session. When Ray's hand lifts Staci's cheerleading skirt, Jessica lets out a little cough to remind them that they have an audience. Jake is a little disappointed when Ray drops the skirt back in place as he was enjoying the view of Staci's cute little ass in her spanks.\n\n\"Oops,\" Staci says as she pulls away from Ray. She hops to her feet and reaches out for Jessica's hand. \"We need to have a little chat. We'll be right back.\"\n\nWith that, she pulls Jessica towards the kitchen leaving the guys alone.\n\n\"Any idea what that's about?\" Jake asks Ray.\n\n\"Uh... yeah.\" Ray answers hesitantly.\n\n\"What's going on, Ray?\"\n\n\"Well... see Staci and I... god this is so weird to be talking about.\" Ray says then takes a chug of his beer. \"Tonight Staci and I... well... we're going to do it. For like the first time.\"\n\n\"Really?\" Jake asks. \"I thought you guys had already done it by now.\"\n\n\"We've come close a couple of times but either I'd have to hurry out so I didn't miss my curfew or her mom would come home earlier than expected.\" Ray explains. \"Tonight's the first time that we've had her house to ourselves in a while.\"\n\n\"Ah, I think I see now.\" Jake says. \"We had this homecoming thing planned but now that Staci's mom isn't here, you need Jess and I to get out of here so you can be alone. That's not a problem, Ray. Jess and I understand we'll get out of here and give you guys some privacy.\"\n\n\"That's not it.\" Ray says. \"Staci and I talked about it and we think that you guys should stay.\"\n\n****\n\n\"Stay?\" Jessica asks Staci. \"Why would you want us to stay?\"\n\nStaci had just finished having the same conversation as Ray was having with Jake.\n\n\"Because I know how frustrated you've been getting at not having any real alone time with Jake and now you can have some here tonight.\" Staci tells her.\n\n\"I do want some alone time with Jake but I... we don't want to get in you guys way.\" Jessica tells her.\n\n\"It's not like we're planning to have you guys in the room with us, Jessica.\" Staci teases. \"Ray and I will be in my room and you and Jake will be in the spare bedroom.\"\n\n\"I'm not sure that Jake and I are at that point yet.\" Jessica states.\n\n\"Just because you'll be in a bed doesn't mean you have to do it.\" Staci tells her. \"You'll just be comfortable while you make out and whatever.\"\n\n\"I suppose that it would be more comfortable than our wooden bench and the privacy sounds really nice.\" Jessica admits. \"All right, Staci. As long as you're sure that we won't bother you and Ray, we'll stay.\"\n\n\"I plan to be too busy to even notice.\" Staci giggles and grabs Jessica's hand. \"Come on, we need to let the guys know that we've decided.\"\n\nThe girls return from the kitchen and overhear Jake ask Ray.\n\n\"You're sure that Jess and I being here won't be a problem?\"\n\n\"They're sure.\" Jessica answers. \"At least Staci is. Ray on the other hand.\"\n\n\"Ray... I mean, I'm fine with it.\" Ray answers. \"Staci and I talked about this a lot and it won't be a problem.\"\n\n\"You heard the man, Jake.\" Jessica says. She picks up her glass of wine and reaches for Jake's hand. \"Show us to our bedroom, Staci.\"\n\nRay chuckles. \"I think Jake may need a minute. He looked like he about had a stroke when Jess said that.\"\n\n\"You need a minute, sweetie?\" Jessica giggles.\n\n\"No... no, I'm good.\" Jake stammers.\n\nStaci glances down and sees the outline of Jake's now hard cock through his jeans.\n\n\"Mmm, you look better than good to me, Jake.\" Staci smiles.\n\nJessica follows Staci's gaze and smiles herself. \"Mine, Staci.\"\n\n\"That's all yours, Jess. I was just taking a moment to admire. I know he looked at my butt earlier and turn about is fair play.\" Staci giggles. \"You are so cute when you blush, Jake!\"\n\n\"I think you're blushing more now, than when we pick on you.\" Jessica notices then turns her jean clad butt towards him. \"Do you like Staci's butt better than mine, Jake?\"\n\n\"We both do a lot of leg and butt workouts for our sports, Jake.\" Staci says as she turns her butt towards Jake. She lifts her cheerleading skirt and wiggles her butt.\n\n\"Two can play that game, Staci.\" Jessica says and shakes her butt just like Staci.\n\nA strangled noise escapes Jake's throat and Ray laughs.\n\n\"Keep this up and you'll never get him upstairs, Jess.\" Ray tells her. \"And to diplomatic about it, you both have fantastic asses.\"\n\n\"What... what he said.\" Jake stammers. \"Can we please get upstairs now?\"\n\nJessica takes his hand and pulls him to his feet. \"Yes baby, we're going upstairs now. Lead the way, Staci.\"\n\nThe four head upstairs until Staci stops at the first door.\n\n\"This is your room.\" She says opening the door. \"I had mom add clean sheets and I added the candles. I thought it'd be a nice romantic touch. Jake, the lighter's right over there for when you're ready for it. My room's just over there if you need anything, just shout.\"\n\n\"I think all the shouting will be coming from your room, Staci.\" Jessica giggles.\n\n\"Jessica!\" Staci exclaims then giggles herself. \"Probably.\"\n\n\"Any last minute tips, Jake?\" Ray asks.\n\n\"Sweep the leg.\" Jake deadpans.\n\n\"What?\" Ray asks confused.\n\n\"You have a problem with that, Mr. Lawrence?\" Jake asks.\n\n\"No sensei.\" Ray laughs completing the scene from Karate Kid.\n\n\"What are you two goofballs going on about?\" Staci asks.\n\n\"Remember a couple of weekends ago when the gang got together at my place and we watched a bunch of eighties movies?\" Jessica asks and Staci nods. \"That was from a scene from that karate movie.\"\n\n\"The wax on, wax off one?\" Staci asks. \"I preferred the one where the town had banned dancing. That was a good one.\"\n\n\"Footloose.\" Jake tells her. \"Ms. Simpson told me that we might be doing that one for drama club this year.\"\n\n\"Really?\" Jessica asks.\n\n\"She's got to run by the principal and the PTA first but it's on her short list.\" Jake explains.\n\n\"I can't wait to see you sing, Jake.\" Ray laughs.\n\n\"And here I was about to impart some wisdom to you. Not anymore, pal.\" Jake states.\n\n\"Dude, I was kidding.\" Ray says. \"You've got to tell me.\"\n\n\"So was I, Ray. You already know everything that you need to make this night great for Staci. Just listen to her and everything will be amazing I'm sure.\"\n\nStaci leans up and gives Jake a quick kiss on his lips. \"I still owe you, Jake.\"\n\nJessica grabs Jake by the hand and yanks him into the room. \"Nope, we're even after this.\" Jake comments.\n\n\"Very even.\" Jessica calls out. \"That is, if you shut that door right now.\"\n\n\"You got it, Jess.\" Staci giggles. \"Have fun you two, I know we are definitely going to.\"\n\n****\n\nInside her bedroom, Staci pushes Ray onto her bed then slides up his body to give him a passionate kiss. They make out for several long minutes until Staci sits up, straddling his lap. She shrugs off her cheer top revealing a sexy red bra.\n\n\"Wow,\" Ray exclaims. \"That looks so sexy on you.\"\n\n\"You like it?\" Staci asks shaking her C-cups at him. \"Jessica and I went shopping a few days ago just for tonight.\"\n\n\"You and Jessica?\" He asks.\n\n\"Uh huh,\" Staci answers as she pulls his hands up to her breasts. \"We both felt the need to look sexy for our men tonight. Jess thought you'd love the red on me.\"\n\n\"Jess is one smart lady.\" Ray acknowledges as he pulls Staci back down to his lips. They kiss for another minute before Staci pulls away again. She pulls Ray up and tugs his t-shirt up and off.\n\n\"Ouch. Poor baby,\" Staci comments noticing a bruise on Ray's chest. \"Where'd this come from?\"\n\n\"Probably from when I dove into the end zone on that one play. It's not that bad.\" Ray tries to say but the last words draws out into a groan as Staci kisses her way down his chest.\n\nShe lightly kisses around the bruise causing Ray to suck in a deep breath.\n\n\"Like that baby?\" She teases him.\n\n\"Uh huh,\" He gasps as she licks then sucks his nipple into her hot mouth.\n\nShe pushes him onto his back and continues to kiss her way down his body. With deft hands, she unbuckles his belt and unsnaps his jeans.\n\n\"Help me?\" she asks as she tugs at his waistband.\n\nRay lifts his butt from the bed and pushes his jeans as Staci's pulls them down his legs.\n\n\"There's my friend,\" Staci giggles as she gazes at his tented boxers. \"He wants to come out and say hello, doesn't he?\"\n\n\"Very much,\" Ray groans as she runs her nails down his cloth covered erection.\n\nShe leans down and nips at it with her teeth drawing another moan from Ray. She then pulls his boxers down and off leaving him naked before her.\n\n\"Yummy,\" She purrs as grasps his dick and giving it a few feather strokes.\n\nStaci,\" Ray groans loud when she lowers her head and takes him into her mouth. Her tongue teases all around the crown of his manhood before giving it a gentle suck. She takes more of him into his mouth then dragging her tongue slowly back up his throbbing shaft before she pulls off it with a wet pop.",
        "\"Like that, baby?\" She giggles.\n\n\"Jesus, I almost came.\" He gasps.\n\n\"Only almost, huh. I guess I should do it again then.\" Staci answers then lowers her hot, wet mouth to his cock again.\n\nHe catches her shoulders just inches before she snags her prize.\n\n\"Staci, I thought we were gonna do it tonight?\" He asks confused.\n\n\"We are.\" Staci answers. \"I figure that if I get this first one out of the way, we can go for a lot longer when you're in me. Deep in my tight little pussy, fucking me with this nice hard cock of yours.\"\n\n\"Fuck,\" Ray sighs. Staci has been adding dirty talk to repertoire and it drives him crazy. \n\n\"Think about that, Ray.\" Staci says then extends her tongue to his drooling cock head. \"You deep inside my hot, wet and tight little pussy. Fucking me, making me scream your name so loud that Jessica and Jake hear us. God, think about having an audience hearing you make me come on you hard cock. I'm so fucking wet just thinking about it.\"\n\nRay can't even speak with all the visions dancing around his head. Staci uses his distraction to take him back into her mouth. She clamps her lips on his shaft and pumps it with her hand.\n\n\"I'm gonna... gonna cum!\" Ray shouts. \"Oh fuck, I'm gonna cum!\"\n\nStaci feels his cock expand and she moves her mouth off a little too late. Gamely she swallows down the little that she caught in her mouth as her hand pumps out five more shots that explode out of him. When the last of his sperm dribbles out the head, she licks it off and swallows the salty, bitter taste of him.\n\n\"I think we need to clean up a bit. I put a towel in the guest room but forgot to leave us one.\" She laughs as she looks at her covered hand and Ray's covered abs. She gets to her feet but before she can head to grab a washcloth, Ray grabs her hand and pulls her to him. He kisses her passionately, tasting himself on her lips and tongue but he doesn't care.\n\n\"That... that was amazing.\" He gasps when their mouths break apart.\n\n\"And then some.\" Staci giggles. \"Be right back.\"\n\n\"Hurry.\" He tells her. \"I have a favor I have to return immediately.\"\n\n****\n\nJake had lit a few of the candles and gotten back onto the bed with Jessica when they heard Ray groan out Staci's name.\n\n\"Someone's having fun.\" Jessica giggles.\n\n\"Sounds like.\" Jake answers as he pulls her close.\n\nThey kiss for a few minutes before Jessica pushes him back.\n\n\"Jess, you okay?\" Jake asks.\n\n\"Yeah, I'm good.\" Jessica answers quickly then shakes her head. \"No, I'm not.\"\n\n\"What is it, baby?\" Jake asks.\n\n\"We need to have a conversation. Actually we've needed to have this conversation for a couple of weeks now but I keep making excuses not to.\" Jessica admits. \"Tonight, it seems that I've run out of both time and excuses.\"\n\nJake goes to sit up but Jessica pulls him back down so they're laying face to face.\n\n\"Can we stay like this? Please?\" Jessica asks running her hand down his cheek.\n\nJake nods and she gives him a quick peck on his lips.\n\n\"Okay, so you know how I told you that my first time was bad, right?\" Jessica asks.\n\n\"I recall wanting to strangle the asshole that did that to you.\" Jake shares.\n\n\"You're sweet.\" Jessica states with a smile. \"Jake, when we talked about what happened between Sean and me; I just told you that the sex part was awful and skimped on the details.\"\n\n\"I remember thinking that was probably a good idea at the time.\" Jake answers.\n\n\"Yeah, I didn't want you driving straight to Charlotte and punching him out.\" Jessica tells him.\n\n\"And now?\" Jake asks.\n\n\"Now... now I have to tell you that one of the awful parts was... oral. He didn't force me exactly but let me just say that it was awful and I'm not sure I'm ready to try it again right now or maybe ever.\" She says.\n\n\"Jess, that's okay if you're not ready for that just yet.\" Jake assures her. \"Do you think that it'd be okay if I did it though?\"\n\n\"Oral?\" Jessica asks. \"Wouldn't you have to have some ribs removed or something?\"\n\n\"What?\" Jake asks then gets what she's saying. \"No, I meant me on you, not me on me.\"\n\n\"Wait, you want to do that to me?\" Jessica asks.\n\n\"Well, yeah.\" Jake answers.\n\nHe starts to expound on that but Jessica leans close and kisses him hard. While her tongue dances with his, her fingers work at unbuttoning his shirt. Despite the passion she's pouring into the kiss, Jessica diligently works the buttons on Jake's shirt then tugs it free of his jeans.\n\n\"This needs to go.\" She tells him breathlessly.\n\nJake sits up and tosses the shirt to the floor. Jessica pushes his shoulder until he's lying on his back with her leaning over him.\n\n\"I've told you how much I like you like this haven't I?\" She asks as she runs her fingers lightly over his chest.\n\n\"You may have mentioned it.\" Jake answers haltingly as her fingers slide down to his abs. \"Once or twice.\"\n\n\"Once or twice, huh?\" she asks as her fingers play with the brown hairs of his nature trail between his belly button and the snap on his jeans. She leans in and kisses his lips before moving around to his ear. Her tongue teases a spot just behind Jake's jaw that always causes him to moan.\n\n\"Jess.\" Jake moans as she kisses the spot.\n\n\"I love it when you moan my name, Jake.\" She whispers in his ear. Jessica kisses her way down his neck, discovering new spots that she explores when she comes across them. As kisses and licks her way down, Jake squirms, sighs and moans in the wake of her tongue and lips.\n\n\"Having fun?\" Jake asks hoping to get his overloaded nerve endings a moments reprieve.\n\n\"Uh huh,\" Jessica answers just before she closes her hot mouth over one of his nipples.\n\n\"Fuck...\" Jake groans, feeling her tongue flicking his nub.\n\n\"Should I do the other one?\" she teases him then drags her tongue across his chest to his other nipple. \"I think I should.\"\n\nShe sucks it into her mouth then, as with the first one, she flicks it with her tongue drawing a long groan from deep in Jake's throat. When her fingers unsnap his jeans, Jake sits bolt upright on the bed causing Jessica to move back and giggle.\n\n\"Problem, Jake?\" Jessica giggles.\n\n\"I thought... it's just that... I didn't think we were doing... um that.\" He stammers.\n\n\"Getting you naked? Yeah, we're doing that.\" Jessica answers and tries to push him back down.\n\n\"No, I mean the whole oral thing.\" He says.\n\n\"Oh, I wasn't.\" Jessica answers. \"I just want to... okay, this will probably sound weird, but I'm just going to say it. I want to explore you, Jake.\" \n\n\"Explore me?\" Jake asks.\n\nJessica sighs and sits back. \"When I was with Sean, everything was always rushed and usually done with the lights off. I never got the chance to just play around and... well learn about a guy's body. I want to get to know yours. The spots where you're ticklish, the spots that make you so hot for me that you have to grip the sheets in your fists to stop yourself from throwing me down and having your way with me while I scream your name.\"\n\n\"God, Jess you're killing me.\" Jake sighs.\n\n\"Never, baby.\" Jessica smiles then closes her hand over his throbbing manhood still trapped in his jeans. \"I really need to get to know this guy and what he likes.\"\n\n\"He likes you.\" Jake groans as he lies back on the bed.\n\nJessica gives him a stroke and giggles. \"He only  likes  me?\" \n\n\"Love... definitely loves you.\" Jake manages to gasp out.\n\n\"Mmm, that's better.\" Jessica says then unsnaps his jeans.\n\nSlowly, she lowers his zipper and each click of the teeth sends a shiver down his spine.\n\n****\n\nStaci bounces back into her room with a couple of bottles of water from her fridge. She hands one to Ray who is still lying naked on her bed.\n\n\"I think I'm a little over dressed.\" She quips.\n\n\"I think you look very sexy.\" Ray comments.\n\n\"Sexy, you say?\" Staci asks teasingly.\n\n\"Jake certainly thinks so.\" Ray chuckles.\n\n\"I just had to tease him.\" Staci says. \"I didn't make you jealous did I?\"\n\n\"I would say a little but then it's not like I haven't checked out Jessica.\" Ray admits.\n\n\"God, her butt looks amazing in her volleyball outfit.\" Staci says. \"If they let us wear those at football games, no one would notice there was a game going on.\"\n\n\"No argument from me on that.\" Ray answers.\n\n\"And if they let us just wear this,\" Staci says as she reaches down for the waistband of her spanks and slowly pulls them down revealing the matching red thong to her new bra.\n\n\"Oh my god,\" Ray whispers as if only saying it to himself.\n\n\"I'm glad you like these, baby.\" Staci says as she pirouettes to give him the full view.\n\n\"I do, now get that beautiful ass of yours over here.\" He growls at her.\n\n\"I'm not sure that I should. You look like you might eat me if I do.\" She giggles.\n\n\"Oh, I am going to eat you all right.\" Ray tells her with a grin.\n\n\"Goody!\" Staci shouts before hoping into the bed and Ray's arms.\n\nAs the pair kiss, Ray unclasps her bra and Staci tosses it to the floor. He kisses his way down her neck, pausing for only a moment to caress and suck her breasts before tracing his tongue around her belly button.\n\n\"That tickles.\" She tells him as she kicks her legs.\n\n\"I'll torture you with that information later but right now, I need to get these amazingly sexy undies off you.\" He promises.\n\nHe slides the silky red panties down her tan legs before dropping them on their pile of clothing.\n\nStaci watches his eyes roam over her naked body for several moments.\n\n\"I believe that someone said something about returning a favor.\" She prompts him as she spreads her legs then the lips of her pussy with her fingers.\n\nRay makes a half choking sound in his throat as he watches her finger slip inside then back out, her wetness glistening in the candlelight. Staci starts to bring that finger to her mouth but Ray grabs her wrist and sucks it into his own mouth.\n\n\"Mine,\" he says after popping her clean digit from his mouth.\n\n\"Then come get it, baby.\" Staci urges him.\n\nRay lowers his mouth to her waiting need and using all the tricks he's learned over the past few weeks, he has Staci on the verge of a huge orgasm.\n\n\"Please... please... please,\" She begs tossing her head back and forth on her pillow.\n\nRay quickly gets to his knees and places the head of his cock at her entrance. As he wets the head with her lubrication, Staci's eyes pop open.\n\n\"Hurry,\" She begs him.\n\nHe smiles down at her. \"I love you, Staci.\" He says then slides inside her.\n\n\"I love you!\" Staci begins to say but that turns into a shout of ecstasy as her orgasm hits her like a tsunami. It's the biggest one that Staci's ever experienced in her young life. Her hips slam upwards, driving Ray as deep inside as he can get. Her hands clench and unclench the sheets at each crest of her orgasm.\n\nRay can only watch in amazement and hold on as Staci rides out the pleasure overload she's feeling.\n\n****\n\n\"Nice,\" Jessica states as she helps Jake extricate himself from his jeans.\n\n\"Nice?\" Jake asks.\n\n\"I like the boxer briefs.\" She tells him with a grin. \"Black looks good on you.\"\n\n\"Glad you like them.\" Jake answers.\n\nJessica runs her fingertips over the outline of his erection causing Jake to moan in pleasure.\n\n\"Mmm, he does love me it seems.\" Jessica giggles.\n\nShe takes her time touching his cloth covered cock, learning what makes him twitch, what makes him stiffen up and what makes him moan out her name.\n\n\"Jess,\" he moans out as she teases the head of his cock with her fingertips.\n\n\"I gotta see it.\" She says suddenly. She grasps the waistband of his boxer briefs and tugs them down.\n\n\"Are you sure?\" Jake starts to ask but Jessica has already pulled them off and tossed them to the floor.\n\nShe just stares at him lying there naked for several moments before tentatively reaching out and grasping the base of his cock.\n\n\"Okay... wow.\" Jessica whispers as she looks him over.\n\n\"Um, everything... everything all right, Jess?\" Jake asks.\n\n\"Hmm,\" She asks then gives glides her hand up his throbbing cock. \"Oh sorry, I was just looking. You're... um... bigger then Sean.\"\n\n\"Is that a good thing or a bad thing?\" He asks.\n\n\"I'm not really sure.\" She answers but that doesn't stop her hand from stroking him. She seems mesmerized watching her hand slowly sliding up and down his manhood. Varying the speed and her grip she listens as Jake's breathing grow labored in response to her touch.\n\nWhen her thumb gently rubs the underside of his crown, Jake groans loud and his hands tightly grip the sheets.\n\n\"So that's your throw me down and make me scream your name spot huh?\" Jessica smiles then lightly runs her thumb around the area again.\n\n\"Oh god,\" Jake cries out.\n\n\"Are you okay, Jake?\" Jessica giggles.\n\n\"I'm... fi... fine.\" He stammers as he tries to get his breathing under control. \"That... that spot's really sensitive.\"\n\n\"Oh I noticed that, believe me and I'm noting it in my mind for future exploration.\" She tells him. \"Do you need me to go ahead and finish you off? My little man here is all hard and angry looking.\" She waves Jake's cock around a little while referencing it.\n\n\"He's angry because you're still fully clothed.\" Jake shares.\n\n\"Yeah, I do seem to have all my clothes on while you are gloriously naked.\" Jessica smiles and reaches for the buttons on her blouse. \"I guess I should show you a little skin.\"\n\n\"I'd really love that.\" Jake sits up and grabs her hands. \"You got to undress me. Now it's my turn.\"\n\nJessica expects her shirt to be yanked open, sending buttons flying but Jake leans in and begins kissing her.\n\n\"Mmm,\" She moans in her throat as his hands begin to work the buttons.\n\nOnce all the buttons are undone, Jake slides his hands up grazing Jessica's bra covered breasts causing her to gasp.\n\n\"You okay?\" He asks.\n\n\"Uh huh,\" She answers before kissing him again.\n\nHe moves his hands to her shoulders, pushing her blouse off and allowing it to catch at her elbows. She lowers her arms before tossing the garment to the floor where it joins Jake's clothes.\n\nHe continues to kiss her as his hands run across her bare back giving her goosebumps at his soft touch. His fingers graze an area at her lower back causing a shiver to run up her spine.\n\n\"Pants,\" She gasps pulling her mouth from his.\n\n\"Off?\" Jake asks.\n\n\"Mmm hmm,\" she purrs then pulls his mouth back to hers, attacking his tongue with her own.\n\nJake deftly unsnaps her jeans then pulls her to her feet so he can slide then off. He kisses his way down her neck, manipulating her spots in much the same way she manipulated his not too long ago. When he sucks in on a spot where her collarbone meets her neck, Jessica's knees nearly buckle.\n\n\"Oh Jake,\" She cries out holding his head to that spot for another moment. Once allowed to move again, he kisses between her bra covered breasts before going to his knees in front of her.\n\nHe looks up at her and smiles. \"Are you sure about this?\"\n\nJessica nods at him and sits back on the bed so he can take them all the way off. Jake gives the jeans a tug and they slide off Jess's long legs easily leaving her sitting before him in her new bra and panties.\n\n\"God, you're so beautiful. Black lingerie looks really good on you.\" Jake says while staring at her.\n\nJake gets on his knees again and begins kissing her knees.\n\nJessica tightly closed legs begin to ease their way open under Jake's tender caresses and soon he's kissing his way down her inner thighs. Just when his mouth reaches the corner of her panties they hear Staci cry out in ecstasy from the other room.\n\n****\n\nRay stays as still as possible while Staci rides out her orgasm. She's staring into his eyes as her hips twitch and the walls of her pussy grip his cock.\n\n\"Oh my god, Ray.\" Staci moans. \"That was intense.\"\n\nRay nods then begins to move his hips, fucking into her.\n\n\"Oh... oh god... oh!\" Staci moans.\n\nRay can only grunt as he continues to slide in and out of her wetness.\n\n\"Gonna cum... gonna cum again... oh god!\" Staci shouts feeling another orgasm rapidly approaching.\n\n\"Oh fuck, Staci!\" Ray shouts feeling his own impending release rushing ahead like a runaway train.\n\n\"Cum, baby... cum with me.\" Staci tells him as her hand reaches down to play with her clit.\n\nRay speeds up his thrusts until he's slamming Staci into the bed.\n\n\"Yes... yes, fuck me baby... fuck me!\" Staci orders him.\n\n\"Oh.. oh fuck!\" Ray shouts as his seed bursts forth.\n\nStaci feels his hot cum drenching her insides and that sends her over the edge, a garbled sound of pleasure screaming out of her throat.\n\nRay pumps his hips a few more times trying to get all of his cum inside of his lover. Each twitch of his cock sends a ripple across the walls of Staci's pussy and she has a mini tremor just before Ray collapses on her. He catches himself on his elbows so Staci isn't taking his full weight.\n\n\"Wow,\" Staci says trying to catch her breath. \"That was... that was amazing, Ray.\"\n\n\"You... you were amazing.\" Ray tells her. \"You looked so beautiful when you came for me.\"\n\n\"The first, second, third or fourth time?\" Staci giggles.\n\n\"All of them?\" Ray asks back and they laugh together until Ray softens enough to slip out of her.\n\n\"I miss him already.\" Staci sighs.\n\n\"Give him a few minutes and he can probably go again.\" Ray states.\n\nStaci pushes him over so that he's lying on his back and she cuddles to his side. He drapes his arm over her shoulders and pulls her close.\n\n\"Jake and Jessica probably think you killed me. I'm surprised that haven't busted in here to see what was going on.\" Staci giggles then from across the hallway they hear Jessica cry out with a pleasurable scream of her own. \"Of course they could also be too preoccupied to care.\"\n\n****\n\nThe momentary distraction gives Jake and Jessica pause.\n\n\"Jake, can we... can we hold off on that for now?\" She asks pulling him off his knees.\n\n\"Uh... sure, Jess.\" Jake answers. \"Are you okay?\"\n\n\"All of this is getting to be a bit overwhelming.\" She answers.\n\n\"Okay. Do you want to lie down for a few minutes?\" Jake asks.\n\nJessica nods as she scoochs further onto the bed so she can lie back. Jake gets off his knees and starts looking around the floor.\n\n\"What are you looking for?\" She asks.\n\n\"My underwear.\" Jake answers.\n\n\"You don't need those.\" Jessica tells him. \"I just met my new friend, he can't leave yet.\"\n\n\"I just wanted you to be comfortable, Jess.\" He tells her.\n\n\"It's just my nerves, Jake. I am comfortable with you. You make me feel safe.\" She states.\n\nJake nods and lies down on the bed facing her. She cuddles into his arms while he strokes her back. \n\n\"I'm glad I can do that for you, Jess.\" He says while stroking her hair.\n\nA moment later Jessica smiles then starts to kiss him. The passion of the kiss grows until Jessica reaches between them and wraps her hand around Jake's cock.\n\n\"Jess,\" He moans in surprise as Jessica begins to stroke him.\n\nThey continue to kiss until she picks up her hand speed and Jake has to pull his mouth from hers.\n\n\"Oh god,\" He groans while gasping for breath.\n\n\"Are you gonna cum for me, Jake?\" Jessica asks with a wicked smile.\n\n\"Uh huh,\" He gasps tossing his head back while breathing hard.\n\nWithout losing her tempo, she pushes Jake so he's on his back with her leaning over him.\n\n\"Are you close, baby?\" she whispers. \"Are you close to cumming for me?\"\n\n\"Getting close,\" He manages to croak out.\n\n\"Just close? I think I can help out with that.\" She points out.\n\n\"You already are.\" Jake gasps.\n\nJessica giggles then removes her hand from pulsating erection.\n\nJake opens his mouth to complain but no sound escapes his lips when Jessica reaches behind her back and unclasps her bra. She slumps her shoulders allowing gravity to slide the straps down her arms slowly.\n\nJake's cock twitches and oozes a glob of precum out of the tip just watching Jessica's teasing. Fascination spurs Jessica into action as she reaches down and smears the fluid over the head of Jake's cock with her thumb. Her bra slips down, revealing her pert, b-cup breasts and erect pink nipples.",
        "\"Wow,\" Jake groans as he looks at her bare breasts.\n\n\"Yeah, wow.\" Jessica says while continuing to rub Jake's precum around. She slides her thumb down to the spot under Jake's crown that she found earlier and rubs his wetness there.\n\n\"Jess!\" Jake shouts just as he spurts cum into the air between them.\n\nJessica lowers her hand and strokes his shaft causing more shots of cum to erupt from Jake. The spurts slacken to a dribble after four voluminous shots covers his stomach along with Jessica's hand.\n\n\"Wow that seemed like it was a lot.\" Jessica comments while slowly stroking him.\n\n\"It... it was.\" Jake manages to answer after catching his breath. He looks down and sees his stomach covered in his pleasure. \"It was really a lot.\"\n\n\"Neat.\" She remarks then spreads her sticky fingers. \"Well maybe neat isn't exactly the right word.\"\n\n\"Probably not,\" Jake laughs.\n\n\"I'm going to go grab us a washcloth right quick.\" She says but as she reaches for Jake's shirt to slip on she sees a towel on the night table. \"Oops, never mind that. It seems Staci thought of everything.\"\n\nShe takes the towel and cleans Jake's cum off them both then tosses the towel to the floor.\n\n\"So, is it my turn to explore you?\" Jake asks as she lays back into his arms.\n\n\"I guess so but so help me, Jake if you find a ticklish spot and abuse it I will get even.\" She warns him.\n\n\"I'm a little to vulnerable to knees and elbows at the moment so your tickle spots are safe from me.\" He promises her then begins to kiss her.\n\nAfter several minutes of deep kissing, he moves down to her neck. He spends a lot of time licking and sucking on the spots he's previously found that he knows gets her going. When he hears her breath quicken, Jake kisses his way down to her breasts.\n\n\"Absolutely beautiful,\" he murmurs as he tongues around her stiff nipple.\n\n\"You don't think that they're too small, do you?\" She asks.\n\n\"I think they're perfect.\" He assures her.\n\nIf she wants to say anything else, it dies in her throat and changes into a moan as Jake sucks one of her nipples into his mouth while he cups her other breast with his hand.\n\n\"Oh god, Jake,\" Jessica purrs when he kisses his way to her other breast.\n\nHe slides his hand slowly down her taut stomach then stops just below her belly button, his fingertips brushing the top of her thong. Unsure if he should go any further, Jake kisses his way back up Jessica's neck then captures her mouth with his. She grabs his wrist and pulls his hand down to her need. Jake's fingers slide over the silky material feeling the heat emanating from her.\n\n\"Oh god!\" Jessica exclaims when Jake begins to stroke her through her panties.\n\nHer legs involuntarily fall open and her breathing comes in shallow gasps.\n\n\"Tell me what you need me to do, Jess.\" Jake whispers in her ear.\n\n\"Rub?\" She giggles which turns into a moan when Jake does just that. The kisses and caresses continue until Jessica is rolling her hips in time with Jake's finger seeking her own release. She pulls his hand from atop her panties to under them and shouts his name when he slides a finger inside her welcoming pussy.\n\nJake begins kissing his way down her body while pumping his finger in and out of her wet slit.\n\n\"Lower,\" She begs him and when he complies, she gasps and humps his finger harder.\n\nHe kisses his way down to her belly button and the pleasant yet spicy smell of her arousal hits his nostrils. His mouth waters at the chance to taste her on his tongue.\n\n\"Jake... Jake... Oh my god, I'm so close!\" She cries out.\n\nJake moves his face between her legs, moves her panties to the side and licks her opening from bottom to top.\n\n\"I'm cumming!\" she shouts as she buries her hands in Jake's hair and pulling his face into her crotch. He slips his tongue over his finger and into her setting her off again. A shout of satisfaction escapes her lips piquing the curiosity of the couple just a hallway away.\n\n****\n\n\"I'm going to go check on them.\" Staci announces. \n\nAs she attempts to hop from the bed, Ray grabs her around her waist and pulls her back onto the bed.\n\n\"Staci, they promised to give us space tonight.\" Ray points out.\n\n\"They promised. I didn't.\" Staci counters with a grin.\n\n\"I think it was implied.\" He counters.\n\nFrom next door, they hear Jessica shout out  oh god  and it steels Staci's resolve.\n\n\"You can stay if you want but I've got to check in on them and see what's going on.\" She says pulling away from Ray and heading for her door.\n\n\"Staci... Staci, wait!\" Ray calls out as he jumps to his feet.\n\nHe follows her wonderfully bare butt out the door and watches as she tiptoes to the closed door of the spare bedroom. She turns to him and presses her index finger to her lips telling him to be quiet. He nods his head then leans his mouth close to her ear.\n\n\"You aren't going to try to peek in on them, are you?\" He asks.\n\nShe shakes her head. \"I just want to listen. See if I can tell if they're doing it or not.\" She answers quietly.\n\n\"How can you tell that from the sounds?\" He asks.\n\n\"Shh,\" she says putting her ear to the door.\n\nRay shakes his head but then puts his ear to the door as well.\n\nFrom their snooping position, they hear Jessica shout about being  so close .\n\nStaci looks back at Ray with a shocked expression but before she can put her ear back to the door Jessica loudly announces that she's cumming.\n\n\"Oh fuck,\" Staci whispers. \"I think they're really doing it!\"\n\n\"Oh god,\" Ray sighs getting turned on by the thought of Jessica getting fucked just a few feet away.\n\nStaci bends forward to try to hear more when she feels Ray's erection poking her butt. She looks back at him with a sly smile on her face.\n\n\"This turning you on?\" She teases.\n\n\"Fuck yes,\" he groans.\n\n\"Me too,\" Staci answers then bends over even further. \"Fuck me, Ray.\"\n\n\"Here?\" He asks looking at how exposed they are out in the hallway.\n\nTo answer him, she reaches between her legs and pulls his member to her wet slit. After rubbing it against her a couple of times, she moves back until his head slips into her.\n\n\"Fuck yes,\" She sighs when he begins slowly moving his hips.\n\n\"Shh,\" he manages to whisper to her when he's not mesmerized by the sight of her cute ass jiggling with each of thrusts.\n\nStaci steadies herself against the doorframe and manages to lean her head to the door so she can still hear what's going on in there. While Ray screws her like that for several minutes, she hears Jessica climax at least two more times.\n\nThe noises inside the room quiet down so Staci stands up, expelling Ray's cock from her.\n\n\"We've got to get back to my room!\" She whispers hurriedly.\n\n\"But what about...\" Ray asks nodding down towards his angry looking erection.\n\n\"Definitely bring him with you.\" Staci giggles as she scurries past him. \"I'm not done with him by a long shot.\"\n\n****\n\n\"Hello gorgeous,\" Jake says as he slides up beside Jessica and pulls her into his arms.\n\nShe rolls into his arms and lays her head on his chest. He can feel her still breathing hard and the light sheen of sweat that is covering her body as he rubs his hand down her back.\n\n\"What... what did you do to me?\" Jessica asks as she gets her breathing under control.\n\n\"Just some things that I picked up from the internet.\" He answers. \"I take it you liked them?\"\n\n\"I didn't know that it could be like that.\" She whispers then kisses his chest.\n\n\"Me either,\" he answers kissing the top of her head. \"First for me, too.\"\n\n\"Which part?\" She asks looking up at him.\n\n\"Would you believe all of it?\" he asks.\n\n\"Not even a little bit.\" She giggles. \"You were way too good at all of it for you not to have done at least some of that before.\"\n\n\"Too good, huh?\" he smiles.\n\n\"I'm still tingling all over from what you did to me so yes, too good.\" She kisses him lightly. \"My mouth's a little dry. Someone had my mouth hanging open for too long.\"\n\n\"That means that you're sending me for water, right?\" Jake asks.\n\n\"I'd share yours but it looks like you left it downstairs.\" She answers as she sits up and looks around for it.\n\n\"I was distracted.\" He answers.\n\nHe gets up from the bed and looks around the floor to locate his boxer briefs and jeans.\n\n\"What do you think you're doing?\" Jessica asks.\n\n\"Uh, putting my pants on.\" Jake answers. \"I can't walk around Staci's house in the buff.\"\n\n\"Sure you can.\" Jessica grins. \"They're probably still too busy with each other to come out of her room until tomorrow morning.\"\n\n\"Still,\" Jake counters as he tugs on his underwear.\n\n\"Fine, but the jeans stay here.\" She tells him. \"As much as I liked taking them off you, I want you to stay as naked as I am.\"\n\n\"All right but if Staci gets a show then that's on you.\" He tells her.\n\n\"She'd enjoy it, that's for sure.\" Jessica quips. \"Hurry back.\"\n\nHe nods and opens the door. After checking to make sure that the hallway is empty, Jake heads for the stairs. He grabs his water that was left forgotten on the living room table then heads to the kitchen to get one for Jessica. As he opens the refrigerator door, he hears the sound of the door behind him open. That door leads in from the garage and the one that Ms. Daniels always uses.\n\n\"Jake!\" Ms. Daniels shouts when she sees him standing half-naked in her kitchen.\n\n\"Ms. Daniels, I can explain.\" Jake says stepping back and putting the kitchen island between her and his nakedness.\n\n\"Who's yelling?\" Staci asks as she steps into the kitchen.\n\nStaci has put on a t-shirt and her panties but nothing else. Ms. Daniels takes in her and Jake's dress and the well fucked look that radiates from her daughter and asks. \"Oh my god, what have you two done?\"\n\n****\n\nThat was a lot, I know and I'm picking up on 12 as soon as I get a bit of time to work on it. Not sure of a time frame for it but probably back on my usual 3 week schedule to things how I want them unless I get a huge chunk of writing time then, who knows.\n\nAgain, thanks for reading, commenting and voting. All of it appreciated! Oh and just a reminder, if you send me DM but leave it as Anonymous I can't answer your questions."
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "blowjob",
        "bullies",
        "first time",
        "football",
        "jake",
        "foreplay",
        "high school",
        "jessica",
        "volleyball",
        "oral"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/new-girl-in-town-pt-11"
}