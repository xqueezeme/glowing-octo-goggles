{
    "title": "There and Back Again Ch. 109-110",
    "pages": [
        "Chapter One Hundred Nine: Insurance\n\n The next morning, I found a very subdued Aedan sitting by the fire, dark bags under his eyes testifying that he hadn't slept well. No one else was around, though it wasn't that early by our normal standards, and I wondered if the sour expression on his face had scared everyone off. I sat down beside my brother and took his hand, resting my head on his shoulder as I picked at cold jerky I had fished out of my pack. We didn't speak; I handed Aedan and Alistair some of the jerky, and we ate together in silence as we waited for the new Grey Wardens to wake.\n\n About an hour later, the three men emerged from their tents one at a time, I assumed mostly drawn by hunger; Aedan had made an enormous pot of porridge, anticipating the need, and handed each of the men a bowl without a word. Once the three of them had finished of seconds and then thirds, he finally stood, glaring at them balefully.\n\n \"So would anyone like to explain what in the void that was all about? This was your idea, I'm sure of it.\" He glared at Zevran.\n\n Sten and Oghren remained impassive, turning their gazes to assassin, who winced. \"Amore mio...\"\n\n \"Just explain it? Please? What were you thinking?\"\n\n Zevran sighed. \"I overheard you, yesterday. The three of you with Duncan in the command tent.\"\n\n \"You were eavesdropping?\"\n\n \"Not originally, no. I wanted to ask you something, and it was only when I got inside that I heard you talking about sensitive topics. And my natural curiosity kicked in when I realised you were discussing Grey Warden secrets.\"\n\n Aedan shuffled his feet, pouty expression still sullen, but suddenly I thought I knew exactly what had happened.\n\n \"You didn't tell me, amore mio, that the Grey Warden who kills the Archdemon will die.\" The assassin's expression was recriminating. \n\n \"Zev-\"\n\n Zevran cut him off. \"I know Duncan intends to be the one, but we all know that nothing is preordained. He could perish before getting near the beast. If you thought I would allow you, any of you, to take the risk of being the one, when I could prevent it, you are much mistaken.\"\n\n Aedan put his hands over his face, shuddering slightly. Zevran stood and wrapped one arm around Aedan's shoulders, whispering something I couldn't hear into his ear; Aedan drooped even further. Obviously uncomfortable with the emotional display, Oghren turned to me and picked up where Zevran had left off.\n\n \"The elf told me and big guy that he was gonna volunteer, and I wasn't about to let the swishy nug-licker show me up.\"\n\n I snorted a laugh, and Zevran grinned at him. \"Whatever you need to tell yourself, my dwarven friend. I can pretend you didn't agree to it after finding out Sierra could be forced to make the killing blow.\"\n\n The dwarf flushed, and I gaped. \"Oghren?\"\n\n \"Whatever. Ancestors' hairy asses, I know I owe you \u2013 all of you. I might be a no-good, drunken, exiled, useless dwarf, but I pay my debts. Don't make it out to be more than it is.\"\n\n I blushed, knowing it was the closest the berserker was ever likely to come to admitting that he cared about any of us, and I was pleased to be included in that group. I squeezed his shoulder, and he smirked at me before waggling his eyebrows and asking if the rumours he'd heard about other Grey Warden 'appetites' were true, and if I'd care to demonstrate. Alistair wrapped an arm around me possessively, I slapped the back of Oghren's head, and Zevran chuckled lewdly.\n\n Aedan finally looked up, expression bleak.\n\n \"I didn't want this for you.\" He looked from Zevran to Oghren and Sten. \"Any of you. Do you know you could have died?\"\n\n \"We could have died, amore mio, any time in the last year. Killed by darkspawn, bandits, or trying to save an idiot from himself, what does it matter? We could have become tainted, ended up as ghouls. It doesn't matter, now, yes? We all survived.\"\n\n Sten, looking longingly at the now-empty pot of porridge, sighed. \"Parshaara! Enough. It is done. There will be three more Grey Wardens between the Archdemon and the destruction of Thedas. Is that not enough reason? Why must this endless discussion be necessary?\"\n\n \"Sten...I understand why Zevran Joined, honestly, and Oghren was always going to end up as a Grey Warden, but...\" I trailed off, confused.\n\n Sten scoffed, refusing to answer, giving me the stoic Qunari silent treatment he always resorted to. Instead, Zevran answered. \"What he meant is there will be three more Grey Wardens between the Archdemon and the only two people in Ferelden he respects, mia sorella. That was all I had to say.\"\n\n Sten growled. \"I was sent by the Arishok to answer a question. I will have more to tell him now. And there are no Grey Wardens in Seheron. What if the darkspawn tunnel that far? I will protect my people. That is enough.\"\n\n Alistair chuckled in my ear, quietly enough that only I would be able to hear him. \"Leliana was right. He is a softie.\"\n\n I snickered quietly, earning myself a disapproving glare from the softie in question.\n\n \"Enough talk!\" Oghren stood up and belched loudly. \"Now, by the soggy tits of my Ancestors, where's the rest of my breakfast?\"\n\n *****\n\n In the afternoon, scouts returned from the Wilds, indicating that they had seen the forces heading west toward Redcliffe, but Teagan had reported himself in position, so we weren't too worried. The same scouts reported horde movements heading for a particular battalion, and the rest of the messengers hurried off to get the other groups moving. The mages and bola launchers headed out, and our camp began to pack up, hopefully for the last time.\n\n It wasn't until Riordan returned with Dougal and Conrad that we had a definitive report of the Archdemon leading the horde. Apparently it had sensed them, as they scouted in the Wilds, and had done a flashy fly-over, choosing not to attack them, presumably for the same reason it had left Duncan alone in the Deep Roads. Riordan hadn't been as badly affected as Duncan, but he'd apparently been a bit dazed after, and had taken a while to shake it off. The other two were fine, so clearly it was something about being so close to their Calling rather than just being a Warden in general.\n\n I found it strange that Duncan was so much more advanced with the taint than Riordan; Duncan had postulated that his exposure to the Architect and whatever magic he'd used to accelerate the taint in Fiona and the other Wardens that had encountered him hadn't been entirely ameliorated by the dagger he'd stolen from the corrupt First Enchanter. No one could suggest any other explanation, so we sort of accepted it, if reluctantly.\n\n We marched out and made camp several hours north of where we had been, the Wardens sharing space with Cailan, Sereda, Lanaya, Greagoir, Irving, several of the human and dwarven nobles, and their retinues. The three groups of Wardens would head south as soon as the location of the generals and the Archdemon were available, and I would stay with Cailan, overlooking the battle from a small cliff. The mages and bola launchers had joined the battalion down below us, ready to down the Archdemon as soon as it was in range.\n\n We had an awkward 'last supper', no one wishing to appear too grim, but everyone knowing that any one of us could be missing from our next group meal. Conversation was stilted, and finally after enough uncomfortable silence, I asked a question I'd been dying to ask since we'd left Haven, but hadn't had the guts. It seemed a good enough distraction to justify the discomfort asking might have brought.\n\n \"Those of us who were at the Temple of Sacred Ashes...what did you all see, after we passed the Guardian?\"\n\n Those who hadn't been present watched the rest with interest; the stories had been told enough times that they knew what I was asking, even if they hadn't been there. Everyone else shifted uncomfortably.\n\n \"I'll start. I saw my father. Our father,\" I amended, glancing at Aedan. \"He told me that I was his daughter, and asked Aedan and I to take care of each other.\"\n\n \"He told me to stop living with the guilt of leaving them behind,\" Aedan added. \"That he loved us, and was proud of us.\" I hugged Aedan, and he rested his cheek against my head briefly.\n\n No one spoke for a moment, and then Morrigan broke the silence. \"I saw my mother...Flemeth. She was not dead, obviously, just speaking with me through the fade. She taunted me, saying she would be watching me. That was when I knew that if I wished to survive as myself, I would have to ask for help to kill her.\" I reached out and squeezed her hand, surprised but pleased to see Solona do the same with her other hand.\n\n \"You know we'll protect you, Morrigan, if you let us.\" Solona looked earnestly at the witch.\n\n Morrigan flushed and huffed, slightly offended.\n\n \"No one is saying you aren't capable, Morrigan,\" I interrupted before she could make some typical abrasive comment, \"just that we are here for you if you need anything. We are your friends, if you will have us.\"\n\n She relaxed, and eventually even returned the squeeze I gave her fingers, before excusing herself from the group and slipping off, out of the camp.\n\n Zevran went next. \"I saw...a former lover. She forgave me.\" He didn't mention specifics, but I knew it had to be Rinna. Aedan reached out and clasped his hand, and Zevran smiled at him appreciatively. \"She told me I could be a better man in future than I was when I was with her. I didn't know what she meant, at first, but I think I'm finally learning.\"\n\n Leliana sighed. \"I saw a former companion from when I was a bard \u2013 another one Marjolaine betrayed. He died before I escaped. He also forgave me for getting him involved, and for not being able to save him. He told me...to live my life, not to let others dictate my future.\"\n\n From the prequel to the game, I vaguely remembered a dwarf and an elven mage who had been captured with Leliana. I couldn't recall which had not survived, but I supposed it didn't matter. Leliana's vague smile indicated the forgiveness had lightened the weight on her shoulders, and I was glad for her.\n\n Sten grunted and stood. \"I do not wish to discuss it.\" He turned and headed towards his tent, and we all let him go. I felt a pang of guilt, hoping I hadn't unintentionally hurt him. I had assumed he might see one of the other Qunari who'd accompanied him from Seheron, but given his response, I doubted it.\n\n Watching him go, Alistair spoke without looking at any of us. \"I saw Maric.\" It was almost a whisper. \"He...he told me he was proud of me. He told me that, in the rebellion, he didn't know what to do, at first; that he didn't know how to lead. He followed his mother, and then Loghain... anyone who would take the responsibility from him. But when he had no choice, he learned he could lead if he had to, that eventually he even enjoyed parts of it. He told me to trust myself, and to stand up and take responsibility, unless I wanted to live a life of regrets because I allowed someone else to make my decisions for me.\" He looked over at me with a sudden, mischievous grin. \"He told me he liked you, too.\" I blushed and hid my face in his shoulder while everyone laughed.\n\n That night, the Wardens had one last meeting, all sixteen of the Wardens and I crowded into one large tent. Loghain objected to me being there, but Duncan ignored him and kept talking. \n\n He divided the sixteen of them, plus Morrigan and Leliana, into three groups.\n\n \"Riordan, Conrad, Dougal, Loghain, Morrigan, and I will be the first group. Our primary goal will be the Archdemon. Group two, led by Aedan, and group three, led by Alistair, will initially seek out the generals we expect to accompany the horde. Do not engage the main body of the horde. Defend yourselves as necessary, but as much as possible, go around, not through. Find the generals, defeat them, and then rally to wherever the Archdemon lands when it is grounded. Understood?\" Duncan's expression was grim and sorrowful; I knew we were all wondering which of our friends we would be mourning in the next few days.\n\n Everyone nodded, and Duncan assigned Jowan, Faren, Zevran, Sten, and Bel to accompany Aedan, and Anders, Solona, Oghren, Mornwulf, and Leliana to Alistair. Prince was to stay with me.\n\n \"Now, one last item. We all know that only a Grey Warden can kill the Archdemon. The battalions have all been instructed to back off and provide ranged support only once it is on the ground; their purpose will be to protect us from the darkspawn it calls to defend itself when injured. The same goes for Leliana and Morrigan. For the Archdemon, there is a kill priority that I expect will be followed.\n\n \"As the most senior Warden, I will be the first to attempt to make the killing blow. If I am slain before I am successful, the next will be Riordan, followed by Dougal and then Conrad. Loghain has requested that he will be next.\n\n \"After that, the rest of you share equal priority. Alistair and Aedan are the next most senior, but not by much, and several of the rest of you have requested to be placed above them in the sequence. I am of the hope that none of you will be placed in that position, but if it happens, whoever is best placed to end it must do so.\n\n \"The last in the order is Sierra. While not technically a Grey Warden, there is reason to believe she may be able to kill the Archdemon. I cannot emphasize enough,\" he looked at me grimly, \"that this is only to happen if every single Grey Warden on the field has been confirmed as dead. We cannot take the chance that we are wrong, and the Archdemon reappearing after its death. Is that clear?\"\n\n Everyone else murmured agreement, but Duncan did not take his eyes off me until I nodded. \n\n \"Everyone, get some rest. The King has placed several servants at our disposal \u2013 if your armour or weapons require maintenance or repair, give them to the servants to deal with. Get some sleep; we march at dawn.\"\n\n We scattered to our tents after that; Alistair and I shared a snack of bread and cheese, eating silently, an unspoken agreement not to discuss the very terrifying nature of what would happen the following day. After we ate, we made love, desperately, clinging to each other, bruising each other in our need to be close. Several times in the night, one of us woke the other to begin again; it wasn't what Duncan had in mind when he said rest, I was sure, but the connection felt far more critical to our survival than sleep.\n\n As we lay, panting and recovering our strength, I cuddled up against Alistair's muscular chest, my hand resting over his heart, one leg thrown across his.\n\n \"So...you talked to your father about me?\"\n\n He huffed out a laugh. \"Not my idea, believe me. He knew.\"\n\n \"Knew we would end up together?\"\n\n \"No, no, nothing like that. Though that would have been good to know.\" He chuckled, and I kissed his shoulder. \"No, he knew how I felt. Called you a 'spitfire' and told me I should pursue you.\"\n\n \"You didn't exactly take his advice, at least, not right away.\" I giggled. \"Unless insinuating I was a prostitute is your idea of romance.\"\n\n He tickled me, digging his fingers into my side while I squealed. \"No, I didn't. I told him to go soak his head. The last thing I needed was advice on my love life from a dead guy, or so I thought.\"\n\n I chuckled and pushed myself up onto an elbow, looking down at my husband's handsome face in the dim firelight shining through the wall of the tent. \"Did it help? Seeing him?\"\n\n \"Maybe.\" He reconsidered. \"Probably. You hear so many stories about Maric the Saviour...I think I had a little of the same insecurity as Cailan. I'd never be able to live up to his legacy. Hearing about him falling off a horse, or following Loghain like a puppy...being manipulated into killing the first woman he loved? He was human, just like the rest of us, but he still learned how to lead. It made me at least wonder if I could learn, too.\"\n\n \"And you did. I don't think you see it, but you could have led instead of Aedan, if you'd wanted. Come to think of it, I don't think I've ever told you how proud I am of you.\"\n\n I could feel the heat of his blush against my lips as I kissed his cheek softly. He turned his head, capturing my mouth in a kiss, and then rolled me over and made love to me again, slowly, softly, reverently, until I was absolutely limp in his arms.\n\n The morning came too soon; we geared up, sharing a last kiss and a frantic embrace, made less comforting by armour. \n\n \"Come back to me, or I swear, I'll find you in the afterlife and kill you myself.\"\n\n \"Stay safe, and do try to keep Cailan from doing anything stupid, would you?\"\n\n \"I love you, Alistair. I won't say goodbye \u2013 we will be together to celebrate when this is over.\"\n\n \"I love you, Sierra. My wife. I will see you soon.\"\n\n We smiled tearfully, and stepped out into the pre-dawn light. The rest of the Wardens were assembled there, exchanging hugs and maudlin goodbyes amongst themselves.\n\n Duncan kissed my forehead softly. \"Be well, Sierra. Keep them safe, after I'm gone?\"\n\n I sobbed and clung to him, certain as I could be that it was the last time I would see the only father I or my husband had ever known. He carefully extracted himself from me, his own eyes suspiciously bright, and handed me off to Leliana while he said his goodbyes to Aedan and Alistair. She and I hugged until I managed to stop sniffling and wipe my eyes; she kissed both my cheeks and promised she'd see me after the battle.\n\n Morrigan approached me as I pulled myself together. \"After the battle...\" she began.\n\n \"You'll be gone. I know. I am grateful you are staying as long as you have. Are you sure you won't remain with us? There aren't many places in Thedas where you will be as safe as with the Wardens. You could live with us at Soldier's Peak.\"\n\n \"'Tis a kind offer. My destiny calls me elsewhere, however. I would wish...if I could, I would stay. I did not expect such feelings.\"\n\n \"I will see you again. I know where you'll be in a few years, after all.\"\n\n \"I will miss you, my friend.\" She actually hugged me, voluntarily; it was brief, and I almost missed it in my shock, but I squeezed her gently and then let her go. She shifted to bird form and perched in the nearest tree to await her group moving out.\n\n Zevran kissed my cheek and promised to keep Aedan safe; I hugged him tightly, and demanded he keep himself safe as well. I refused to say goodbye, and he forced a cheeky grin as he walked away from me. \n\n Oghren slapped my armoured ass with his gauntlet as he sauntered past, making me screech. \"Have the kegs aired out for us when we get back, toots!\"\n\n I laughed.\n\n Sten approached me stiffly, bowing formally. \"It has been an honour, Kadan.\"\n\n \"Sten...thank you.\" I wrapped my arms around his enormous torso; he patted my shoulder tolerantly. \"And I'm sorry about last night.\"\n\n He looked down at me, his expression possibly...amused? \"It is not your fault I do not wish to engage in useless discussion of feelings.\" He tilted his head slightly. \"I do not have feelings to discuss.\"\n\n I laughed. \"Of course you don't.\" I released him from the awkward hug. \"I know you Joined to have more information to bring to the Arishok, but thank you for what you are doing. For us.\"\n\n \"I will do my best to keep them safe. For you.\" He looked uncomfortable at the concept. \"If I should fall...\"\n\n \"I will send Asala to the Arishok, and tell him what you accomplished here. He will know that you fulfilled your mission.\"\n\n \"Thank you. Live well...Sierra.\"\n\n It was the first time he'd used my name, to my memory. I flushed and returned his bow as he walked away. I'm just glad he didn't talk about whether he'd seek me out on the battlefield if the Qunari ever invaded...\n\n I shared hugs with Jowan, Faren, Bel, Anders, Solona, and even Wulf, wishing them luck; the Orlesian Grey Wardens each solemnly clasped my forearm. And that left me with my brother.",
        "\"You'd better come back, Aedan. I am sure as hell not explaining all of this to Fergus by myself.\"\n\n He chuckled and ruffled my hair; I squawked and slapped his hands away. \n\n \"I love you, little sister.\"\n\n\n\"I love you too, big brother. Don't do anything stupid \u2013 no being a hero, okay?\"\n\n \"Who me? I can't be a hero. I'm a rogue, remember? More rascal than hero.\" I gave him a dirty look, and he pulled me in for one last hug. \"I promise.\"\n\n I didn't want to watch as the people who meant everything to me walked away, but I lost my resolve, turning and waving until they were out of sight. I slumped to the ground, and Prince buried his face in my lap with a whine. \n\n \"I know, boy. I don't like it either.\" I cuddled the mabari until someone called me to attend Cailan.\n\n My morning proved to be very boring. We were well north of any of the darkspawn, who were approaching our position in the southern bannorn from the Wilds. The horde had not yet arrived, and I could see the battalion below the cliff I stood upon, the men taking turns resting on the ground, fully armed, and people moving up and down the lines offering water skins and rations of some sort. Mage-ravens flew in, none providing any news.\n\n And then, with a prickling feeling in the back of my head, dread filled me as, for the first time, I felt the massive size of the horde approaching. The battalion stood at the ready; the mages and archers loosing arrows and fireballs with abandon when the first of the horde appeared, and then the first wave of darkspawn rolled over the front lines like fog.\n\n I couldn't watch. I couldn't stand to see men and women, some of whom I had met or even trained with, dying under that black cloud. I'd like to go back to boredom now, please.\n\nI looked over at Cailan, who appeared to be having as much trouble as I was; he was standing with his eyes squeezed shut, his hand gripping the pommel of his sword so hard his knuckles were white. His jaw was clenched, his face pale, and I vaguely wondered if he might actually pass out. I slid over to him while the rest of the people on the cliff with us gawked at the horde and carefully peeled his hand off the sword, sliding my gauntleted fingers into his. \n\nHe shot me a shaky smile, and I squeezed gently, careful not to crush his bare hand. We stood there for several, very long minutes, wincing at the sounds of battle that filtered up to where we stood. I wondered where my husband, my brother, and my honourary father were and how they fared; if they were among the battalion below, I couldn't tell. \n\nI was drawn out of my fearful daze by a brilliant green flash of light off to my distant left; there was a sudden battle cry, and a second battalion entered the fray, slamming into the back of the horde. \n\nI followed Cailan over to a large table that had been improvised from planks balanced over a couple of logs; it was covered in a large, detailed map of the area surrounding us. Cailan picked up a small figurine and moved it near to a second one, sandwiching a black lump of rock between the two. So far, so good. We shared grim smiles and then turned back to the messengers arriving, breathless with the news we'd already figured out for ourselves \u2013 the battle had begun.\n\nChapter One Hundred Ten: Engagement\n\nIt was a miserable afternoon, overall, I had to admit. I hated not having anything resembling control, I hated feeling useless. I wanted to at least be down there swinging my daggers and using my darkspawn invisibility to help the armies. Cailan clearly felt the same, and the two of us silently commiserated every time our gazes met. \n\nMessengers kept arriving every few minutes, delivering messages before running off with orders. A second wave of darkspawn joined the first, but two more of our battalions had entered the fray as well, and the army was holding its own. The Grey Wardens \u2013 we didn't know which group \u2013 had killed a general and a massive collection of ogres. There was no news on casualties among the Wardens. The Archdemon had finally been seen, but flying high over the battle, not close enough even for the combined range of the mages. It was a frightening sight, its hide a malevolent burgundy-purple, purple flames jetting from its mouth as it roared overhead, and then disappeared into the clouds.\n\nThe golems had entered the fight, and had decimated a large group of darkspawn moving to flank one of the battalions.\n\nThe losses were light as these things go, apparently, but it was still staggering to me. Hundreds of soldiers had perished, and hundreds more would before this was over. It was all I could do not to cower down into a ball and cover my ears, crying and rocking in grief.\n\nThe fight carried on into the evening; torches had been lit around the battalions as best as they could, and while our visibility from the cliff was limited, apparently they could see fine down below. The battalions had spread out and lost some of their cohesion, small knots of humans, dwarves, and elves fighting back-to-back against the horde, but they continued to hold their own.\n\nOff to my right, a blaze of green light lit the sky, and an unexpected battalion of soldiers smashed into the side of the horde, taking everyone by surprise and giving those who had been fighting for hours a much-needed break. The nobles on the cliff all started talking at once, no one sure where the battalion had come from.\n\nAnd then a large, nondescript brown bird landed in the middle of the clearing near the map table, and when the brief flare of magic cleared, one of the Dalish mages Morrigan had taught to shape-change was standing there, wearing minimal clothing \u2013 apparently it was difficult to shapeshift while wearing a lot. I recognised the mage as one of those who'd been sent with Teagan to protect Redcliffe.\n\n\"What are you doing here?\" Cailan practically shouted. \n\nThe mage, a strikingly severe looking elf with black hair, turned to him with an arrogant smirk. \"If his Majesty does not wish a report, I can certainly leave. I have no doubt my skills can be better used elsewhere.\"\n\nCailan winced and modulated his tone. \"That's not what I meant. You're from Bann Teagan's battalion, yes? Why are you all here? You're supposed to be protecting Redcliffe.\"\n\n\"The darkspawn never came. We waited, and I scouted very thoroughly. There are no darkspawn anywhere near Redcliffe, your Majesty. Bann Teagan thought we could be more use here than protecting the village from a non-existent threat.\"\n\nCailan and I exchanged worried glances, and the mage became defensive. \"Believe me-\"\n\nI cut her off. \"We are not doubting your skills, trust me. What we're feeling isn't disbelief, but worry \u2013 we know a large group of darkspawn headed west. If they didn't go to Redcliffe, where did they go?\"\n\n\"I couldn't say.\" The mage sniffed. \"May I rejoin my battalion?\"\n\nCailan nodded, his mind clearly already having moved on from the arrogant mage. \"Send out as many scouts as we can spare. Find those darkspawn.\"\n\n\"Do you think they're heading for Denerim?\" I wondered aloud.\n\n\"Let them,\" one of the nobles I didn't recognise laughed. \"We evacuated the city days ago. They can do some damage to buildings, but they'll find nothing else for them there.\"\n\nCailan, however, was staring at the map as if he could divine the answers using his glare alone. He ignored our speculation, running his fingers over the edges of the parchment thoughtfully. The nobles talked amongst themselves, seemingly hopeful that the darkspawn had simply gotten lost and could be mopped up once the battle was over. I wasn't convinced, and from his expression, neither was Cailan. He began tracing the route the darkspawn had taken heading west, muttering to himself under his breath.\n\nAnd then I turned to him in horror, just as his fingers returned to our current location, the cliff overlooking the main part of the battle. The tingling in the back of my mind that indicated the proximity to the horde had changed, not only in size, but direction. Whereas earlier, the entirety of the horde I could sense was to the south, a large group had just appeared on my Grey Warden radar \u2013 to the north. There were never supposed to be darkspawn north of the scouting lines!\n\nCailan had come to the same conclusion, and I saw his skin go ashen as he realised the only way for a group that large to disappear was to separate into small bands, circle around, and come at us from a different direction \u2013 a direction we had absolutely no protection from. \n\nOur doom approached us from the north.\n\nThe cliff I stood on, amidst few friendly faces and a gaggle of noble fools, was both a benefit and a curse. One the one hand, we could not be attacked from the rear by a second set of darkspawn. However, that came with the drawback of not having anywhere to retreat to. If we were overwhelmed by the darkspawn we had clearly underestimated, we had nowhere to run.\n\n\"Cailan, they're coming,\" I whispered, hoping no one would notice. Hoping he'd believe me, even not knowing I was a Grey Warden. Had Duncan told him I had special skills with regards to the darkspawn?\n\n\"How long?\" He seemed to be taking me seriously, at least.\n\nI considered. They were about as far away as the horde to the south had been when they first engaged. How long would it take darkspawn to cover that distance? \"A few minutes. Maybe half an hour if they're being cautious and scouting ahead.\"\n\nCailan, while pulling on his gauntlets and helm, appeared to be assessing the crowd around us to determine who would be useful in a fight. He cleared his throat loudly, calling attention to himself, and the whispering stopped; the majority had no idea what danger approached us, and had been gossiping while I had been struggling to contain my panic.\n\nCailan hastily called Sereda, Eamon, Lanaya, Irving, Greagoir, a small handful of nobles, most of whom I didn't know, and every messenger, mage, and scout we had into a nearby tent, dragging me with him by the arm. Prince followed me, and I gripped one of the spikes on his ridiculous armour lightly, thankful for the metal-lined leather that prevented me from slicing my hand on the sharpened point. He instructed one of those remaining outside to make sure every torch we could find or make was lit, leaving a confused nobleman to carry through with his orders.\n\n\"The missing darkspawn who we believed would attack Redcliffe are coming here.\" The news was ominous enough to earn a complete hush in the small group that surrounded us.\n\n\"How can you be sure?\" I didn't recognise the dwarf, someone Sereda had brought with her to the meeting.\n\nCailan met my eyes, and I shook my head slightly. \"You'll have to trust me,\" he replied, turning away from me. \"I need you messengers to go now \u2013 run, as fast as you can. Those who can fly, do. The nearest battalion that might be able to render aid is southeast, past the hill.\" Two mages and a handful of men in light leathers exited the tent at a run, faces pale and sweaty with fear. Cailan waited for them to be gone, and turned back to the rest. \"What forces can we muster until aid arrives? We must hold out until they get here.\"\n\nThey had a brief discussion \u2013 each noble had a handful of men-at-arms, we had a couple of circle mages, a dozen or so templars, a few Dalish archers, and the leaders themselves. I briefly thanked the Maker the nobles were dwarven and Fereldan, not Orlesian \u2013 at least most of them knew how to fight, and the Dalish Keepers were all mages, some offensive and some better at healing. All told, we had perhaps a hundred fifty combatants. And I couldn't tell the size of the approaching horde, but from the reports of the group we expected to head to Redcliffe, we were outnumbered. Badly.\n\nI barely listened to the conversation as Cailan quickly instructed everyone to have their men geared up and pulled into ranks north of the camp. I was trying to assess the size of the horde, and how fast they were moving, and didn't even notice that the tent had emptied out until Cailan touched my shoulder.\n\n\"You alright?\"\n\nI jumped, startled, and then nodded with a shaky laugh. \"Fantastic. What could possibly go wrong?\"\n\nHe smirked, then slumped. \"I need you to stay up here, Sierra.\"\n\nI looked at him, frowning. \"What-?\"\n\nHe interrupted me. \"Alistair will kill me if anything happens to you.\"\n\n\"And Ferelden will be thrust back into a civil war if anything happens to you! We're going to need every capable fighter we have if we want to survive this, Cailan. I'll not sit up here and wait for the horde to break through if I can improve our odds any. Besides, the darkspawn can't see me. I'm in less danger than anyone else on this god-forsaken hill.\"\n\n\"Why is that, again?\"\n\nI rolled my eyes. \"Later. Could we focus on the approaching horde?\"\n\nHe laughed. \"Maker, it's refreshing talking to someone who doesn't treat me differently than everyone else.\"\n\n\"Cailan!\" I was exasperated. \"Now isn't the time! We need to get out there and get ready. And I need to be at the front lines. I can hopefully give us some warning, and a slight advantage if there are any emissaries. Can you put the templars with me? They might not be strong enough for my abilities individually, but I have an idea.\"\n\nCailan nodded, and we left the tent. I weaved my way through frantic men and women throwing on armour and trying to limber up before the battle, Cailan on my heels, until we reached the area where the few soldiers we had were assembling. The King began shouting orders for mages, archers, and melee fighters, while I knelt in front of the mabari following me.\n\n\"Prince, go to Aedan.\" He whined, and I rubbed his ear gently. \"I know, but where I'm going, you can't help. I'll be fine \u2013 I'm in more danger with you than without.\" I kissed his nose. \"Give him that kiss for me, okay?\"\n\nHe barked and nipped playfully at my fingers, then with a last lick, he brushed against me and took off at a run, nose to the ground looking for Aedan's scent. I turned with a mournful sigh and approached Greagoir.\n\n\"Knight Commander?\"\n\n\"What?\" His irritated voice moderated when he saw me, helmet in hand. Now he has to be polite to me, I suppose. \"Yes, my Lady?\"\n\nI'd already given him crap for calling me 'highness', so I figured I'd have to live with being a lady for a while, anyway. \"I was hoping you and your men would stay with me. There are likely to be at least a handful of emissaries with this group, and with your help, we may be able to neutralise them before they get into the fight.\"\n\n\"Most of my men don't have your sort of range, my lady. Half of them can only smite someone within their sword's reach.\"\n\n\"I know. But have you been working with them, practicing sharing and holding mana, like I taught you?\" He nodded. \"I propose that I steal the mana of the emissaries, and then hand it off. I can only keep two, or maybe three, silenced completely at a time if I'm on my own, but if I have someone to take the burden from me as I grab them, I can keep going.\"\n\n\"Can't you just explode them, like you claimed you did at Ostagar?\"\n\n\"I've never learned to control that. Not enough opportunities for practice! I'd rather we had a plan. Even if you leave a couple of men. Please? I won't be able to manage alone.\"\n\n\"And who will be watching the mages?\" He had the audacity to glare in the direction of Lanaya and the other Dalish Keepers, and I groaned and face-palmed.\n\n\"I think we can trust them not to turn on us in the middle of a life-threatening battle, don't you? And if one of them becomes an abomination, we'll just back off and let it kill as many darkspawn as it can before they take it down.\"\n\nHe grimaced at me, but couldn't really debate my point. Finally, he nodded and assigned me three of the strongest templars in the bunch. I had them gather around as Greagoir stalked towards Irving with a completely irritated expression.\n\n\"Alright, fellas, here's how it's going to work. You all know how to hold mana?\" They nodded, their helmets interfering with me becoming familiar with them. Creepy. \"Any of you manage to form a shield yet?\" They shook their heads. \"Alright. I'll pull the mana when they get close enough. Then one at a time, I'll hand off as much as you can hold. Once the emissaries are disabled, I'll take it back and use it for shields until we're all empty again. Alright? And no running off, no engaging in the fight unless we're directly threatened. I know you are told how much damage an unrestrained mage can do \u2013 these emissaries are the strongest mages you've ever encountered, and there isn't even the smallest chance they mean well. Our job will be the most important of this battle. Understood?\"\n\nThey all agreed, and I brought them with me to stand a few ranks back from the front line. I passed Cailan, and nodded gravely when I caught his eye. I briefly felt for the darkspawn, realising they were almost upon us. I held out two fingers towards Cailan, and he acknowledged it with a sigh.\n\nHe shouted some orders, and the soldiers drew their weapons. The archers stood at the ready, arrows nocked but bows not drawn \u2013 no point in wasting their strength when they couldn't yet see what they were shooting.\n\nThe one thing that may have helped us was the thick forest at the base of the hill; the darkspawn wouldn't be able to swarm us as a unit, because they'd have to weave through the trees. It was probably also what bought us the time to get ready. We were also up the hill, but it wasn't steep enough to be much of an advantage.\n\nDrawing my daggers, surrounded by three hulking men in templar armour, each with a hand on one of my shoulders, I slapped my helmet down on my head and concentrated on sensing magic in front of us, and ignoring the aura behind me from our own group of mages.\n\nThe first rank of darkspawn appeared through the trees, mostly genlocks, and the archers began firing. A giant fireball slammed into the centre of the line, and lit a swath of trees on fire. I looked over to see Irving standing in a circle with some of the other mages, chanting and holding his staff upright. Smaller bolts of elemental energy streaked past as well, and another clump of genlocks fell to the ground, seizing, as they were struck by lightning.\n\nAnd then I could feel the first greasy aura of darkspawn magic, and I reached out and grabbed it, interrupting whatever the emissary had been about to do. I was jostled as the army around me engaged the darkspawn, but quickly regained my equilibrium, transferring the mana I held to the first templar.\n\nIt was mind-numbing work, ignoring the clashing of steel and the screams around me, pushing out my senses, finding magic, and taking it; it was immediately clear to me that, while the three templars with me were the strongest of those with us on the hill, they were nowhere near as resistant to magic as I. Each one could hold barely more than one emissary's mana, and if I tried to give them more than they could take, they became lightheaded and woozy \u2013 one even developed a nosebleed, a thin trickle of blood running out under his helmet. So I disabled one emissary after another, and by the time I had half-a-dozen under control, our abilities were tapped.\n\nInstructing the three to stay put, I changed tactics, racing out past the soldiers holding the darkspawn back, avoiding burning trees and slipping through gaps between darkspawn, looking for the emissaries I'd already disabled. Fireballs had started being thrown at our overwhelmed troops \u2013 I didn't have much time.\n\nIt was dark, the only light coming from the fires, though I found I could navigate somewhat by following the taint. I found the first emissary, slitting his throat and releasing some of the pressure in my head, so I turned and grabbed the mana of the one who'd just cast the fireball. The pattern continued, and I worked my way through the woods, stabbing hurlocks and genlocks who presented convenient targets as I went. ",
        "I wended my way back towards our forces when I couldn't find any more emissaries to kill. My daggers were dripping with darkspawn blood, and I was sure I had splashes across my armour, but I was unharmed. I left the woods and paused, awestruck, as I watched the battle unfold.\n\nThe soldiers, illuminated by harsh torchlight, fought like their lives depended on it \u2013 which they did, if we were being honest \u2013 and they each cut down multiple darkspawn for every man we lost. The nobles, identifiable in their flashier, though still functional armour, were a sight to behold, cleaving and slashing at darkspawn.\n\n\nEven knowing Aedan, despite playing the game as often as I had, I had entirely underestimated the military prowess of the Fereldan and dwarven nobility as a whole. They may be foolish nobles, but that's not all they are. I watched Cailan decapitate a hurlock alpha with his massive great sword, while some nobleman at his back slid his longsword into a vulnerable point in a genlock's armour and kicked the corpse away to keep fighting. They were all impressive, the dwarves favouring axes, 0the humans mainly carrying swords, and they fought almost as well as the Grey Wardens I was used to fighting beside. But it still wasn't going to be enough \u2013 despite their obvious skill, the greater numbers of the darkspawn were wearing them down.\n\nThat battalion better get here soon.\n\nI spotted Irving and the other mages, conserving mana and concentrating on healing, no longer able to avoid friendly fire if they threw more offensive spells. A group of templars defended them from darkspawn that managed to break through to where they were standing.\n\nI briefly looked for my three-templar group, unsurprised not to find them where I'd left them. I sighed and dove back into the fray, taking out a couple of genlocks and a shriek as I made my way towards Cailan.\n\nThe two of us fought side-by-side, protecting each other, as an endless stream of darkspawn came pouring out of the woods. Not being able to see me protecting Cailan's back, the 'spawn must have assumed he was a terrible fighter, leaving his back so exposed; it made it easy for me to find gaps in their armour or slit throats when they got cocky. The worst part was periodically getting coated in the spray off Cailan's blade; I hoped I wouldn't have to dispose of my new armour, if I survived, because I was pretty sure that there wasn't enough money in Thedas to convince Paider to make me another set.\n\nMy arms were getting tired, the fight dragging on longer than any battle I'd been in before, when suddenly I froze, almost getting Cailan killed as I stared off into the woods, unseeing. He spun, decapitated the hurlock I'd completely missed, and dragged me back a few steps into relative safety.\n\n\"Sierra?\"\n\nI shook myself and focused on him. \"Emissary. Or something. There's magic, like I've never felt before. I...\" I trailed off, thinking desperately. Nothing I'd encountered before had an aura this large, that...malignant. I shuddered. It's so much larger...do ogres have emissaries? Is that a thing?\n\nSomething about that thought triggered a half-formed idea in my mind. Ogres...emissaries...when had I seen ogres and emissaries? And then it occurred to me.\n\n\"Son of a bitch! It's the general.\"\n\n\"What?\"\n\n\"One of the Archdemon's generals, the ones who help keep the horde organised...one of them is a mage. A really, really, nasty mage. And he's almost here.\"\n\nCailan blanched. \"Can you...do your templar thing?\"\n\n\"I don't know. He's much more powerful than the others. And I can't transfer mana in the middle of taking it even if I had someone to share it with.\"\n\nCailan looked confused, and I shook my head in frustration. \"Never mind. I'll see what I can do.\"\n\nI stepped towards the woods, needing to be slightly closer to the source of all of that magic. Cailan ended up back-to-back with one of the dwarves, being swarmed as soon as I stepped away, but the darkspawn just went around me, as usual.\n\nAnd then I saw the general step into our clearing. He was a hurlock, that much was clear, but he was a good foot taller than the largest alpha I'd ever seen, and he wore a set of impressive, matching armour \u2013 a far cry from the scavenged garbage most of the darkspawn wore. He was carrying an enormous axe, instead of a staff, but he gestured with it and a bolt of lightning shot out towards our forces. I used the last of the mana I held to shield Cailan; the lightning arced around him and struck the dwarf beside him, who fell to the ground, twitching but alive. I turned back to see a huge wave of darkspawn move forward, seemingly at the general's command. There were several emissaries scattered between the other darkspawn, and one at a time, they began casting.\n\nI needed to interrupt the general, but I couldn't leave so many other emissaries to attack Cailan's position either. I'd never seen so many emissaries together; regardless of the size of the feint, there were far more than we should have expected. I snuck through the oncoming darkspawn, stealing mana and slitting the throat of the first emissary I encountered. It screamed and fell, and I ducked just in time to miss being decapitated by a nearby alpha. The alpha's axe became buried in the skull of a genlock, to my amusement; I dodged away as three more darkspawn attacked the spot I'd just been standing in, and I paused, gaping.\n\nI finally understood: this was a darkspawn hunting party \u2013 and they were hunting me.\n\nI changed my tactics, stealing the mana of an emissary farther away, and stabbing a nearby one with my daggers before dropping to the ground and rolling away from the resulting attacks. More darkspawn died accidentally as they all tried to find me, but while I enjoyed their bad luck, I knew it wouldn't last. I wasn't going to be able to keep it up forever. I was fast, but my main advantage had always been surprise, and I'd lost it.\n\nInstead, I crept to one side and grabbed the mana of the first emissary I saw, too far away for any of the darkspawn to guess my location and attack me. I could feel the pressure in my head \u2013 I was holding the entire mana pools of two emissaries, and I was close to my limit. I ignored it, closing my eyes and reaching out again for the third. \n\nI felt like my head would explode; it was too much. But as I opened my eyes and glanced around, I saw two more emissaries start casting. Cailan's shield had long worn off, and even if I replaced it, it wasn't going to be enough to save him from two mages and a general trying to kill him. He was fighting desperately now, so many of those surrounding him having died to protect him. \n\nI took a deep breath and reached out once more."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-109-110"
}