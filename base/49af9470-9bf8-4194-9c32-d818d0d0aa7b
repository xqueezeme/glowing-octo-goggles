{
    "title": "Surefoot 09: Rising Star",
    "pages": [
        "USS Surefoot, Deck 4, Sickbay Recovery Room, Stardate 36448.68:\n\nCaptain Hrelle lay face down on the biobed, resting his muzzle on his crossed arms, a teal-coloured cloth draped over his rear end; a small opening in the cloth allowed a thick, furless, half-metre-long appendage to rise up and sway like a Rigelian cobra. His fingers, encased in dermal sheaths, drummed impatiently against the sides of the biobed as he looked up at his newlywed wife and asked, \"Well? What do you think?\"\n\nCounselor Kami Shall - she retained her clan name to avoid confusion with the other two Hrelles onboard - regarded the newly-grown tail sprouting from the base of his spine. \"Well, it's bigger than your penis.\"\n\n\"Mother's Cubs, that's not saying much.\"\n\n\"And I'm assuming it's not done growing, is it?\"\n\n\"No, it's not, so forget about calling me Stubby. Dr Ling intends to double it in size and accelerate fur growth.\" He held up his fingers to touch his face. \"The scars have been removed, and the claws are all but restored. Soon I'll look like how I did before...\" He stopped himself, staring at nothing on the wall opposite him.\n\nShe frowned. \"What's wrong?\"\n\nThen he smiled. \"Nothing. Touch it again.\"\n\n\"No.\"\n\n\"Go on. You know you want to.\"\n\nKami rolled her eyes, but still drew closer and reached out for it, grunting as he playfully if clumsily tried to swish it out of her reach. She gently grasped it, making him gasp, and making her ask, \"It doesn't hurt, does it?\"\n\nHe made a curious sound. \"No. It feels strange, though. Ling says it'll take a while for me to relearn motor control, so it'll act like it's got a mind of its own at first.\"\n\n\"That sounds familiar.\" She bent down in front of him and nuzzled his cheek. \"Mmm, sex with you now is going to feel like it's with someone else.\"\n\n\"I... I don't know how to react to that.\"\n\nShe chuckled. \"Just take advantage of my awakened nethers when you're back on your feet, you sexy bastard-\"\n\n\"I appear to have arrived at a crucial juncture in your conversation,\" Commander T'Varik declared, as she entered the room. \"Should I leave?\"\n\n\"No need, Commander,\" Hrelle replied. \"Do you want to look at my ass?\"\n\n\"I beg your pardon, Sir?\"\n\n\"My ass. Do you want to see it?\"\n\n\"Don't feel privileged,\" Kami warned her, straightening up again. \"He's been inviting everyone who visits him to look at it. Apparently it's good luck.\"\n\n\"Vulcans do not believe in superstition.\"\n\n\"Go on,\" Hrelle urged, chuckling. \"How many times have you heard me tell others to kiss it?\"\n\n\"At last count, Sir, 117, though that includes multiple invitations to myself-\"\n\n\"So aren't you the least bit curious as to what it looks like, in all its furry glory?\"\n\n\"Strangely enough, no, Sir.\"\n\n\"Look at my ass, T'Varik,\" he intoned ominously. \"*Look at it*. I could make it an order.\"\n\n\"I believe I could successfully challenge the legitimacy of such an order in a Starfleet Board of Enquiry. However, for the sake of expediency...\" She lifted up the sheet on her side of the biobed and peered beneath.\n\n\"Well?\" he asked hopefully.\n\nT'Varik dropped the sheet again. \"It is everything I expected. And less. Forgive my return to official business, but Cadet Rrori has a request to make regarding a special assignment for extra credit.\"\n\n\"Special Assignment? Isn't that your purview?\"\n\n\"Normally, yes, Sir. However, the preliminary details provided will necessitate Command approval. He is awaiting outside; may I summon him in?\"\n\nHe shrugged. \"Go ahead.\"\n\nSeconds later, the young, handsome, snow-furred Caitian cadet strode in, standing at attention. \"Sir, Cadet Rrori reporting as ordered.\"\n\n\"That's not quite the proper greeting, Cadet,\" Hrelle teased.\n\nThe young man bristled, steeling himself for the unavoidable. \"Sir... Cadet Meow Rrori reporting as ordered.\"\n\n\"At ease, Cadet. Do you want to look at my ass?\"\n\n\"Oh, yes, please, Sir. I could do with the luck.\" He never saw the females exchange glances as he looked underneath. \"Well, Sir, I must say that *is* an impressive set of haunches! You have the posterior of a warrior of Olden Times! And I'm most delighted to see the tail and claws are returning, Sir, and the scars removed - not that you weren't handsome beforehand, of course-\"\n\nKami made an attention-seeking sound. \"Great Mother, you'd better get to the point of this, cub, before we all drown in your shit.\"\n\n\"Of course, Counselor - your wisdom is exceeded only by your-\"\n\nShe hissed at him.\n\n\"Ahem... Captain, Sir, we are currently passing the Sigma Lambda System. I wish to request permission to take the shuttlecraft Sureswift into the system for a short visit, and meet up with the Surefoot on the other side.\"\n\n\"Sigma Lambda? Apart from some Class-M planet, I think, there's nothing of note there.\"\n\n\"According to our long-range sensors, Sir, there is also a DY-Class vessel, probably one of the old DY-500 or DY-900s.\"\n\nHrelle grunted. \"A DY, huh?\"\n\n\"Apparently so, Sir. Possibly still intact, too.\"\n\n\"Someone care to enlighten the ignorant among us?\" Kami asked impatiently.\n\nTo Rrori, Hrelle nodded. \"Go on, cub, impress my wife with something other than your gold tail rings.\"\n\nThe cub eagerly complied. \"Counselor, the DY-Class was one of the most successful series of pre-Federation starships made by Terrans, proving vital to the First Era of Exploration in the latter half of the Twenty-First Century, after the Third World War and the human discovery of warp drive.\n\nThis particular vessel was first detected in the Sigma Lambda system ten years ago by the previous patrol vessel in our sector, the USS Trieste. It was only picked up on long-range sensors, and the Trieste's Captain judged it to be some forgotten robot probe or abandoned freighter.\"\n\nHrelle looked up at Rrori. \"And this interests you?\"\n\n\"Absolutely, Sir! The chance to study one, even the wreckage of one, is too big an opportunity for us to let slip by.\"\n\n\"Us, Cadet?\" T'Varik asked him.\n\n\"Yes, Commander, I am not doing this for me, but rather the Engineering Specialists from our three squads: Cadets Ostrow, Soolamea and Yeager. The shuttle's high-warp capability means this can be completed overnight, with a minimum disruption to our current academic and work rotas. My schedule is quite busy, but I am very willing to take time out to pilot them there and back, in the interests of scientific progress.\" He smiled. \"Well, Sir? Ma'am? Any questions?\"\n\n\"I have one.\" Hrelle turned to look at the females. \"Just how stupid does this cub think we are?\"\n\nKami smirked; T'Varik answered. \"Apparently stupid enough that we would not suspect that this opportunity is also one for him to engage in unsupervised sex onboard the Sureswift.\"\n\nRrori's jaw dropped. \"Commander! I am frankly shocked that you might ascribe such base motives to my quest for knowledge-\"\n\n\"Cub,\" Hrelle butted in. \"My nose is at the level of your crotch; you're in heat. T'Varik might not be able to tell, but the rest of us do.\"\n\n\"I was unaware that male Caitians went into Season,\" T'Varik admitted.\n\n\"Not to as great a degree as females,\" Kami confirmed, glowering at the cadet. \"And you don't need the nose or the knowledge to have seen you sniffing around Soolamea's parts lately, Cadet, trying to buy or trade time in the holodeck whenever yours and her off-duty time matches, being reprimanded for Public Displays of Affection, and generally making a horny annoyance of yourselves.\" She folded her arms across her chest. \"Normally it wouldn't matter to me. What *does* matter to me - to all of us here - is the thought that you would think to use Jonas for your own selfish ends, especially given his recent history.\"\n\nNow Rrori looked genuinely hurt, and all attempts at unctuousness dropped. \"Jonas is my friend, Counselor, and I wouldn't do anything to hurt him. In fact, I'm trying to help him. He's interested in Nancy Yeager.\"\n\n\"He is?\" Hrelle asked, looking to Kami. \"I thought he was interested in Rina Chaudri?\"\n\n\"Rina told him she liked him,\" she responded, \"As a friend.\"\n\nHrelle winced at that. \"Well, at least he's not giving up. Good for him.\"\n\n\"Yes,\" Rrori agreed enthusiastically. \"But Nancy's different from the lovely Rina. Nancy's rather... formidable.\" He looked to T'Varik. \"Even I would find approaching her for a date somewhat daunting, and I am exceedingly attractive and lovable.\"\n\nThe Vulcan eyed him dryly. \"I will take your word for that, Cadet.\"\n\nUndeterred, he returned to focus on Kami. \"So, I thought it would be good for him to get some time alone with Yeager, so they could get to know each other better, and he can demonstrate his considerable engineering knowledge; I am also aware that he has an interest in ancient Terran space technology, as his ancestors came from Earth. In fact, I would like him officially registered as the Mission Commander, to give him the chance to step up and flex his authoritative muscles. Assuming he has any.\" He paused and concluded, \"I think he deserves the chance.\"\n\nKami regarded him for a moment, before finally announcing, \"I believe you. Not that I don't think sex with Soolamea isn't far from your mind as well.\"\n\nRrori started to react as if he was about to protest, before relenting, \"Counselor, I can assure you that sex in general is *never* far from my mind at any time.\"\n\n\"Now that I believe,\" Hrelle muttered, looking at Kami again. \"Well? Do you think Jonas will be okay?\"\n\nShe furrowed her brow. \"I don't think it'll put him at emotional risk. He's been making good progress, opening up more to me and to you, and though I can't see Yeager being interested in him even as a friend, it'll hopefully help build his overall confidence. I like that he's not giving up.\" She glared at Rrori. \"So long as no idiot cub tries to pressure him into going too far, too fast, when he's not ready.\"\n\n\"Of course not, Counselor.\"\n\n\"That's all you have to say?\" Hrelle asked.\n\n\"What more is there? They're all healthy and have birth control implants.\"\n\n\"And a good thing, too,\" Rrori added, smiling. \"Or we'd need to get a cr\u00e8che installed onboard with all the ongoing action.\"\n\nHe chuckled. Then stopped when the others didn't join in.\n\nHrelle looked to T'Varik. \"I guess I have no problem with this. But I'll leave the final decision to you.\"\n\nThe Vulcan folded her hands behind her back as she looked to Rrori. \"I will approve this, Mr Rrori. Be advised, however, that the passing grade will be 90% instead of the usual 80.\"\n\n\"What?\" Rrori looked crestfallen. \"I must protest, Commander!\"\n\nShe remained unmoved. \"Feel free to do so, Cadet - and I will raise the proverbial bar to 95%.\"\n\nRrori bit back any further complaints.\n\nHrelle chuckled. \"Sadist.\"\n\nT'Varik raised an eyebrow. \"Vulcans are not sadistic, Captain. I merely wish to ensure that the cadets remain focused on the primary reason for this Away Mission - particularly as Chief Grev will need to adjust his work schedules to account for the cadets' absence, and other cadets with secondary Engineering qualifications will need to be temporarily reassigned to cover for them. Mr Rrori, I suggest you and your team be ready to leave within 58 minutes.\"\n\n\"Thank you, Commander! Thank you, Captain, Counselor!\" Rrori nodded to the others and quickly departed.\n\n\"90%, Commander?\" Hrelle chuckled. \"You're nasty.\"\n\n\"I respectfully disagree, Captain. I simply will not tolerate shenanigans.\"\n\n\"Shenanigans?\" Kami echoed, bemused.\n\nThe Vulcan nodded. \"A Nineteenth-Century Terran word, its origins in either the Spanish charranada, meaning 'trick or deceit', or possibly the Irish sionnach, meaning 'fox'.\" At their expressions she elaborated, \"It is a genuine word. Humans can be most verbally creative.\"\n\nHrelle laughed softly. \"Tell me about it. There were times when my first wife ran out of profanity to use against me, and had to make up a few more words.\"\n\n\"I don't suppose she left a list of them for me?\" Kami asked.\n\n*\n\nDeck 1, Mess Hall:\n\nJonas Ostrow had just about perfected the art of pretending to read his PADD, while looking over it at Chief Helmsman Lt. Irina Velkovsky at a nearby table, clad in a low-cut white off-duty blouse, casually reading and drinking coffee, her honey-blonde hair ponytailed back away from her lean Nordic face.\n\nThus he was startled when Rrori plopped himself down beside him, announcing loudly, \"Forget it, Jonas, if she were any more out of your range she'd be in Andromeda with the Kelvins.\"\n\nJonas felt himself redden, and he glanced around before whispering, \"Will you keep it down? I don't want her to know I was looking.\"\n\n\"What, you think she couldn't tell?\"\n\n\"Of course not! I was being careful!\"\n\nFrom her table, Velkovsky never even looked up as she interjected loudly and clearly, \"Not that careful, Mr Ostrow.\"\n\nJonas mentally called for an emergency beam-out, one that sadly never came.\n\nRrori chuckled. \"My friend, take this advice: women know when there's attention on them.\" He looked over at Velkovsky, raising his voice to add, \"Especially the attractive ones.\"\n\nJonas watched in disbelief as the Chief Helmsman reacted to that with a smile instead of a protest, and he turned back to his friend. \"How do you get away with it?\"\n\nThe Caitian seemed to consider the answer for a heartbeat. \"Self-confidence, for the most part. And it always helps having enhanced senses that can discern if a female is in the mood for a little flirting. Lt. Velkovsky, for instance, was moments away from coming over here and telling you off in front of everyone for staring at her.\"\n\n\"He's right,\" she added, still not looking up at them.\n\nRrori glanced up. \"This one, however...\" He rose to his feet and pointed at two female cadets, the Andorian Atiaro Thykrill and the Trill Bezra Pruhl, as they walked by, trays in hand. \"Hey, you two: you'd better quit that, right now!\"\n\nThey stopped in place, Thykrill scowling but Pruhl asking, \"Quit what?\"\n\nRrori grinned. \"Quit being so damned distracting.\" He narrowed his gaze, purring and smiling. \"You make my tail wag.\"\n\nThykrill shot him the dirtiest look imaginable and continued on; Pruhl followed... but with a lingering sly grin on her spotted face.\n\nRrori sat down again, chuckling. \"She smells good; I'd love to find out how far down her spots go. But never mind that, we have to get moving.\"\n\n\"Moving?\" Jonas' face brightened. \"You mean we got permission?\"\n\n\"Yes, but we need to prep the shuttle and leave within the hour.\"\n\n\"Excellent!\" Ever since Rrori had approached him with the idea of secretly studying the DY-ship, he had felt an excitement he hadn't since he was a boy, watching his mother's company bringing in a new vessel for salvaging, wondering what they were going to find onboard.\n\nIt would also be a welcome distraction from his recent mental health problems. He was feeling much better now, was even pleased with how well his mother had responded, and his grades had returned to their expected high levels.\n\nBut there was still a nagging worry, like an itch he couldn't scratch: that people on the Surefoot looked at him differently now, as the Guy Who Tried To Kill Himself. No one said anything to his face, of course, but he couldn't help but think that people would always hold that over him, as much as he wanted to put it behind him and live his life.\n\nHe rose to his feet. \"I've already got my tricorder loaded up with all the relevant data.\"\n\nRrori followed, putting an arm around the younger man's shoulder as he led him out. \"Oh, and I forgot to mention: I've invited two other interested parties to join us...\"\n\n*\n\nDeck 4, Shuttlebay, 55 Minutes Later:\n\n\"I'm going to kill you,\" Jonas muttered for the twentieth time.\n\nBeside him, Rrori ignored him for the twentieth time as he waved to the two female cadets approaching, carrying overnight bags. \"There you are! I was about to have you clamped in irons and dragged down here!\"\n\nZaacool Soolamea strode up to him, a big mischievous grin on her lime-green face. \"Irons, huh? Save those for tonight, my furry fella.\" She drew up and pressed her body against his, stealing a kiss despite the rules against Public Displays of Affection while in uniform. She was a Jelna, from Rigel V: a humanoid with yellow-green skin, thin, swept-back straw-coloured hair, flat noses and natural carvings reaching from the forehead down across the purple eyes and stopping at the lips. She glanced at Jonas. \"Hey, kid, you okay? You look like you're gonna throw up.\"\n\nJonas swallowed. \"No, I'm fine, thank you for asking.\" He looked to her companion, feeling himself flush. \"Hi, Nancy.\"\n\n\"Hi.\" Nancy Yeager was bronze-skinned, freckled, with a mop of shiny sable hair and a short nose, and somehow had the ability to make Jonas' heart rate double just standing there. She immediately looked to Rrori. \"We should get moving, to maximise our observation time of the vessel.\"\n\n\"Don't tell me; Jonas is the Mission Commander.\"\n\nThe look of surprise on Jonas' face was matched only by the disbelief on the women.\n\nBut Jonas quickly recovered. \"Yes. Yes, let's get going.\"\n\n*\n\nDeck 4, Sickbay:\n\n\"Measure it.\"\n\nSasha's face screwed up in disgust. \"No!\"\n\n\"Go on,\" her father urged, chuckling. \"I want to see how long it is, now I can make it fully erect.\"\n\nSasha Hrelle leaned back against a medical unit, crossing her arms in defiance. \"You're going to go through every single penile innuendo possible, aren't you?\"\n\n\"Only if it embarrasses you, Runt of the Litter. So, what can I do for you?\"\n\n\"Where's Jonas and Rrori gone? They've been marked down as being on 'Special Assignment'. Is there a problem?\"\n\n\"No problem; they're visiting some ancient Terran starship in the nearby system.\" He rose up from the biobed.\n\n\"Why would they want to-\" She turned away as her naked stepfather stood in front of her and reached for his off-duty clothes. \"Oy, warn me next time you're gonna get your furry putz out! Show some decorum!\"\n\n\"Says the little Puritan I caught skinny dipping with Giles on Malbruk II. Is there anything else you want?\"\n\n\"So... Rrori and Jonas went off on their own?\"\n\n\"No, they took Yeager and Soolamea with them.\"\n\nSasha glanced over her shoulder, looking away again when she saw he wasn't dressed yet. \"You mean you let Rrori take Jonas off with two girls? Don't you know what could happen?\"\n\n\"Sure - Jonas could go Bumpers with Yeager. Or Soolamea. Or even both.\"\n\n\"Dad, I'm serious.\"\n\n\"So am I. I mean, it's not likely, at least not as likely as that horncat Rrori getting some, but at least he'll have a shot at it.\"\n\n\"But he's not ready for that!\"\n\n\"How do you know? Not that long ago, I might have questioned if you were ready for sex. But you obviously were, and I've since given you all the respect you deserve.\"\n\nShe frowned. \"Respect? You tease Giles and me constantly!\"\n\nHe cackled evilly. \"Yeah. And I'm gonna go on teasing you until I'm a grey-furred old bastard in a hoverchair teaching your cubs rude words in Caitian.\"\n\n\"But what am I supposed to tell Neraxis when she finds out about this? She'll have kittens.\"\n\nHrelle finished dressing, stopping to adjust the slit in the rear of his trousers for his new tail, and approached his stepdaughter, touching her shoulder and gently but firmly turning her around, his voice equally gentle but firm. \"You tell her that Jonas is an adult, capable of making his own decisions. Maybe tell yourself that, too. You're his friends, not his keepers.\"\n\nSasha looked up at him, looking a little anxious now. \"But... with the problems he's had, what if- what if something goes wrong, his heart is broken or something embarrassing happens or-\"\n\nHe nodded at her concern. \"Then he'll be tested, as we are all tested with what the Universe throws at us. But this time, he'll be bolstered by the support he's received, from the Counselor and his friends. He's not as vulnerable as he used to be.\" He smiled. \"All of us should just give him some respect.\"",
        "*\n\nShuttlecraft Sureswift, Sigma Lambda System:\n\n\"You're an idiot,\" Nancy told Jonas.\n\nJonas sat there at the table, not quite sure how to respond. His mouth opened, then closed, and then he looked to Rrori, who suggested, \"A little harsh there, Nancy?\"\n\nShe dropped the PADD Jonas had proffered. \"So Soo has to run the scans on the environmental and life support systems, I get the weapons, shuttle and engineering support, and you give yourself the warp and impulse drives? How very convenient.\"\n\n\"I don't mind doing the environment and life support-\" Soolamea began.\n\nHer friend cut her off, pointing at Jonas. \"Where do you get off giving yourself the best part of the ship to detail for the report?\"\n\nHe tensed. His attempts to get friendly with Yeager had been about as successful as his attempt to learn unarmed combat from Neraxis and Eydiir. She had rebuffed his attempts at small talk as they entered the system, he ended up spattering satay sauce on her uniform when they had dinner, and the music she seemed to prefer sounded to Jonas like cats undergoing surgery without anaesthetic.\n\nAnd now she was questioning just about every decision he had made regarding the allocation of study of the DY vessel. \"I- I didn't plan it that way, Nancy, I promise. I had my reasons-\"\n\n\"My family's been in Starfleet for twelve generations! Three of them working in the Starfleet Starship Museum over Titan! I've played in the original Engineering Room of the USS Lexington! And you, some Frontier Brat, think you're better qualified to scan this DY's drives than me?\"\n\n\"We don't even know how much of the ship is still intact,\" Rrori pointed out. \"It could be that the things you'll be detailing will be the most comprehensive and interesting. As for the reasons for his choices, why don't you shut up for a moment and give him a chance to get a word in?\"\n\nYeager glared at the Caitian - but stopped talking.\n\nJonas swallowed. \"I chose Soo to focus on the environmental and life support systems because she lived with her parents on the hospital ship Galeka, and wrote an excellent paper last term on the problems with recycler systems on early explorer ships.\"\n\nThe Rigelian girl's skin turned a lighter shade of green. \"You read that?\"\n\nHe nodded. \"Yes, it was very good. And I didn't give you the propulsion systems, Nancy, because though I know you practically grew up in the Museum at Titan, most of the vessels and surviving units and drives there were post-Twenty-First Century. I've actually helped salvage three DY-Class ships converted into robot freighters and since decommissioned. Since the passing grade for this is going to be higher than usual, I thought we should all play to our strengths. It wasn't meant as a slight against you. But if you want the drives, you can have them.\"\n\nShe glared at him. sneered. \"Is that your plan? You be generous and give me what I want, and later I'd be so grateful I'd let you get into my pants?\"\n\n\"What?\" He blinked. \"What are you talking about?\"\n\n\"It's why Furball really arranged all this, so he and Soo could take advantage of the private sleeping compartment - and so you could get laid.\"\n\nJonas went beetroot, looking to Rrori. \"That's not true - is it?\"\n\n\"Of course not, my friend.\" But there was something in his eyes that told Jonas different.\n\n\"Sure it is,\" Nancy assured him. \"I suppose that's the only way you'll get some.\"\n\n\"Nancy!\" Soolamea scolded.\n\n\"That's uncalled for,\" Rrori growled, his gaze narrowing at her.\n\nJonas felt his temperature double, and he fought the urge to get up and walk away, as he employed the calming techniques Kami had taught him. \"If you want to take on the propulsion systems, Nancy, by all means, do so. Do it all, if you want. There are no strings attached.\" He dropped his own PADD noisily on the table. \"I don't want anything from you. In fact I wish I'd never come out here.\"\n\nThe group went quiet. And then Rrori cleared his throat. \"Listen, there is no reason why we cannot get this done fairly quickly, and then take advantage of the replicator and the entertainment centre - and especially the solitude - to relax for a few hours.\" He looked at Soolamea and purred, though it did little to ease the tension among them.\n\nAn alert signal from the cockpit drew their attention, both of them rising to move forward. The view from the cockpit window was dominated by the small white star of Sigma Lambda, and a handful of barely-visible planets.\n\nRrori took the pilot's seat. \"The ship appears to be in orbit around the second planet: M-Class, basic vegetation and animal life according to a planetary survey made 50 years ago. I'm taking us there.\"\n\nSoolamea nodded. \"No one's bothered to colonise it?\"\n\n\"I suppose there are better places on more travelled paths.\" Jonas made a contemplative sound. \"Let's see if we can get an ID on the ship this close. The fuselage appears intact... possessing the larger additional fuel and supply rings typical of the later models, 800- or 900-Series... Nancy, could you run the check of the Ship Registry Database to identify it?\"\n\n\"What, don't you want to claim that as well?\"\n\n\"Please, just do it. It's definitely a DY-900 Class-\"\n\n\"I can see that for myself!\"\n\n\"Meanwhile,\" Rrori noted, \"I'll prepare the equipment to get the stick removed from Nancy's ass.\"\n\n\"Why don't you- wait...!\"\n\n\"Wait? Wait for what?\"\n\nBut she stayed fixed on her screen. \"No. NO.\"\n\n\"What is it?\" Jonas asked, concerned.\n\nShe didn't answer, until the rest of them were looking in her direction. She had gone pale as she looked back. \"There's only one DY-900 unaccounted for: the SS Rising Star.\"\n\nRrori and Soo exchanged bemused glances, but Jonas recognised the name, albeit vaguely. \"That was the... Russian ship, wasn't it?\"\n\n\"Toralski,\" Yeager practically spat. \"Formerly Eastern Russia.\"\n\n\"I'm... not familiar with it,\" Soolamea admitted, Rrori nodding in solidarity.\n\nJonas was about to access the historical database for further details - but Nancy answered, without consulting any computer. \"The SS Rising Star was a vessel registered to the Republic of Toralsk, the final surviving member of the Eastern Coalition, which started the Third World War in the 2050s. It was owned by an industrialist named Maxim Yurievich Golov-\"\n\n\"What did he own, the Rising Star or the Republic?\"\n\n\"Both. Golov had made his fortune in munitions, fusion power and media outlets. What no one knew at the time was that he was also the founder and financier of a xenophobic terrorist operation, opposed to the non-Terrans who had begun visiting Earth in the wake of Vulcan's First Contact in 2063.\"\n\n\"Why would anyone object to us?\" Rrori asked.\n\n\"For a lot of humans, it was pure primitive fear of the unknown, the Alien; generations of pop culture marking extraterrestrials as threats hadn't helped. In Golov's case, however, it was later theorised by historians that he had financial reasons: he refused to adapt to the post-War reformations, was losing money in munitions as Terran nations began uniting, and non-Terran technology proved more popular than what his other companies were offering.\n\nHe used his money and influence to engineer attacks throughout the world, blaming them through his media outlets on 'Aliens'. The most horrendous of these was a retrovirus he unleashed in places throughout Europe, Asia and Africa, at the start of 2100. Before a cure was found, over a hundred thousand people had died.\n\nBut even his power and influence couldn't protect him for long, and when he was found out, and the security forces of the European Hegemony were moving against him at his stronghold, he escaped justice in the Rising Star, along with a group of his devoted followers, on January 5, 2107. The United Earth Space Probe Agency tried to keep track of the vessel, but lost it after it passed through the Oort Cloud. It was believed destroyed.\"\n\nThe others stared at her in silence, before Jonas noted, \"That was impressive. I knew you were brilliant at Terran history, but-\"\n\nHer face tightened. \"Save it, Ostrow. Let's get back to studying this thing.\"\n\nJonas glanced at Rrori and Soolamea before returning to the scans. The ship was exactly like the schematics - and the model he made as a boy: a large central cylinder with various surrounding rings and spheres both fore and aft, a primitive deflector dish, large dorsal and ventral radiator fins, and a set of Dyson-Yoyodine fusion engines flanked by two squat warp nacelles. And in case there was any doubt about its identity, the markings SS RISING STAR DY-900-126 were emblazoned along the hull in Old English.\n\nMore bloated and functional-looking than the later Starfleet designs, but it had a vintage charm all its own. He could temporarily forget the tension in the air to marvel at it. \"It looks quite intact, considering what it's gone through.\" He frowned. \"And... functional? The drives are shut down, but the manoeuvring thrusters are still operating to maintain an orbit, and the thoron generator is still on-line, though I'm picking up a leak in its coil. Soo, what are you reading?\"\n\nSoolamea's fingers danced over the panel before her. \"Environmental systems are fully functional; I'm getting... life readings. Active.\"\n\nThe others looked to her, Yeager responding first with, \"What the hell are you saying?\"\n\n\"I'm saying the ship is inhabited. About a dozen or more lifesigns, and many more in stasis. I can't be more precise with the thoron interference.\"\n\n\"Nancy, was the Rising Star a sleeper ship?\" Jonas asked, quickly amending, \"Stupid question, it had to have been, the warp drive it possessed meant a journey even to the nearest system would have taken-\"\n\n\"They can't be alive!\" Yeager snapped. \"Not after two hundred and fifty years of cryostasis!\"  \n\n\"It's unlikely,\" Soolamea admitted. \"But not impossible. My parents studied long-term stasis with the Botany Bay, and that had even older systems-\"\n\n\"It's just scavengers over there! Low-rent scavengers who found the wreck and are trying to get it working!\"\n\n\"Where's their own ship, then?\" Jonas pointed out. \"They had to have come out here in something.\"\n\n\"Wait,\" Rrori noted, \"I'm picking up a small spacecraft on the surface, with two humanoid lifeforms.\"\n\n\"Yes,\" Jonas agreed. \"These ships were equipped with shuttlepods, to make planetfall and conduct surveys to choose a suitable landing spot for the main ship-\"\n\n\"You really expect us to believe that Golov and his band of followers would have survived over 250 years to get here?\" Yeager demanded. \"Have you gone crazy again?\"\n\nNow he turned to face her. \"What do you mean, 'again'?\"\n\nBefore she could respond, a Red Alert flashed on the main display. Rrori checked it out. \"Shields have snapped on! They've detected us, locking weapons!\"\n\n\"Rrori, take evasive action!\" Jonas ordered. \"Get us out of here!\"\n\n\"What for? They only have laser cannons. Those things couldn't even penetrate our hull's refractory coating, let alone our shields.\"\n\n\"That doesn't matter, we're leaving, we don't want to antagonise them further. Soo, raise the Surefoot, inform them of this-\"\n\n\"Jonas, calm down,\" Rrori told him, taking no action. \"You're getting worked up-\"\n\nSuddenly a flash from the window drew their attention, as a small, silent explosion blossomed on the fore end of the ship, sending it into a gentle, but uncontrolled spin.\n\n\"What was that?\" Soolamea asked.\n\n\"A power coupling overloaded. There's damage, minor hull breaches. There are people trapped inside.\" Jonas looked to Rrori. \"Do you think the others can get them out in time?\"\n\n\"I'm picking up a transmission,\" Soolamea reported, before Rrori could respond. \"Real-space radio band, aimed at the planet below. I'm piping it in now...\"\n\nA young woman's pained, plaintive voice filled the cockpit. \"Shuttlepod, this is Rising Star! Alien vessel has attacked us!\"\n\n\"We never attacked them!\" Rrori exclaimed.\n\n\"Shh,\" Jonas hushed him, listening further to the communications.\n\n\"Our weapons systems are disabled! Requesting shuttle support! Repeat: requesting shuttle support! Shuttlepod, please respond!\"\n\nSeconds later, a young man's voice replied. \"Rising Star, this is Shuttlepod: we are readying for launch, Colonel, but ETA will be four hours.\"\n\nThe girl's voice returned, the resignation in her words heartbreaking. \"Stand down. Stay on the surface. Protect yourselves. We'll hold the Aliens off as long as we can. Long Live Humanity. Rising Star out.\"\n\nJonas sat there, looking across at the energy coruscating like blood from an arterial wound from the damaged part of the ancient ship. He felt the sweat beading down his back despite the cooling properties of his uniform. \"Can we get a transporter lock on those people trapped in the fore section?\"\n\nRrori glanced at him for a moment, before checking his readings. \"Not a safe one; the thoron interference is too great.\"\n\n\"But we should be able to beam someone over there from here with less trouble?\" He said it like a question, though he already knew the answer.\n\nThe Caitian looked at him. \"Jonas, you're not thinking of going over there, are you? It's too dangerous.\" He leaned in closer. \"Listen, you're getting in over your head. Let me take over, I can manage this.\"\n\nHe barely listened, but continued to stare out there. Lives were at stake. Not their own lives, but others, and hardly the cr\u00e8me de la cr\u00e8me of humanity, if Nancy was correct. But lives nonetheless.\n\nWhat would Captain Hrelle do?\n\nHe didn't know for certain. But Jonas knew what he had to do. He reached out and opened a channel. \"Rising Star, this is Starfleet shuttlecraft Sureswift. We are a non-hostile vessel, we are not here to attack you. We wish to offer assistance. Please respond.\"\n\n\"What the hell is wrong with you?\" Yeager demanded. \"Rrori, take over, he's losing his grip.\"\n\nJonas ignored them. \"Rising Star, this is the Starfleet shuttlecraft Sureswift. We wish to offer assistance. Please respond.\"\n\nThen he received a response. \"Who is this? Identify yourself!\"\n\n\"This is... Mission Commander Jonas Ostrow.\"\n\n\"Are you from Earth? Are you human?\"\n\nHe paused; a full explanation of his family history from when they left Earth a century before and eventually found themselves at the Outer Rim of the Federation would naturally take too long. \"Yes, to both questions.\"\n\n\"Prove it!\"\n\nHe frowned in thought, desperately choosing some references identifiable to people from two hundred and fifty years ago. \"My family originated in Warsaw, Poland, though my last address was in San Francisco-\"\n\n\"My God, humans! We thought we might be the last! This is amazing!\" The shock and relief in her voice was almost palpable, before she snapped back into a sense of professionalism. \"Yes, you have permission to dock at Airlock 1, Aft Ventral side-\"\n\n\"There's no need for that. We have a...\" He sought an appropriate alternate name for the transporter, selecting one that was a dreadful oversimplification of the process, but which would do for now. \"A matter-energy teleporter that can carry us from our ship to yours. We will appear in your presence in one minute, unarmed, with a medical and engineering kit. Will that be acceptable?\"\n\nThere was a pause, and then, \"Yes. But no tricks. Rising Star out.\"\n\nJonas breathed in, rising onto legs that weren't as stable as he would have preferred. \"Rrori, you're in command until we return; take no action against them, even if you think my life is at risk.\"\n\nRrori stood up as well. \"Jonas, you can't go over there unarmed; there are regulations against it! They're hostile, they outnumber you, and you're not combat-trained-\"\n\n\"Which means the most likely outcome will be that if I go over there armed they end up with my phaser.\" To Soolamea he directed, \"You should be able to beam us over there, and once we get the thoron interference dropped, you can beam us back. Nancy, grab the medical kit.\"\n\n\"No.\"\n\nHe looked at Yeager. \"Pardon?\"\n\nShe crossed her arms. \"You heard me. I'm not going over there.\"\n\nHe stared, confused. \"Nancy, they need our help. They wouldn't have injuries if it wasn't for us being here. We have a duty to assist them.\"\n\n\"I don't have a duty. They're terrorist scum.\"\n\nEveryone seemed to hold their breath at the stand-off, and Jonas had to struggle to control himself in the face of such abject confrontation. \"Nancy, I understand you're scared, I'm scared, too, but-\"\n\n\"I'm not scared. They just don't deserve our help. Suicide might be *your* hobby, but you're not getting me killed the way you almost did Kit.\"\n\nJonas froze, his whole body tightening at the blatantly insulting remarks. \"Nancy... I'm making this a direct order.\"\n\nShe sneered. \"Stick your direct order up your ass.\"\n\nJonas felt himself turn shades of red he never thought possible in nature, worsening as he glanced at Rrori and Soolamea. \"Fine. I'll go alone.\"\n\n\"No,\" Soolamea protested. \"You need someone with you. Regulations-\"\n\nHe shot a withering glance at an unrepentant Yeager. \"I was planning on having someone with me. But I can't take a non-Terran along, given how they feel. It's my decision, my risk, my responsibility. Will you operate the transporter please, Soo?\"\n\n\"Of course.\"\n\nHe moved alone to the equipment locker and retrieved an engineering and medical kit, slinging them under each arm, his hands gripping the shoulder straps tightly. \"I'll keep a channel open. Who knows? Maybe they'll be so grateful they'll let us take a tour of the ship afterwards? Think of the quality of the report we could hand in to T'Varik.\"\n\nHis bravado sounded hollow, even to him. It made Rrori's plea, \"Be careful, my friend,\" all the more plaintive.\n\nJonas moved to the single-unit transporter alcove in the rear of the shuttle, wondering where all this fortitude had come from, and why he never accessed it before now.\n\n*\n\nHe noticed the slight difference in gravity right away, the plating system they used in these ships being crude in comparison with more modern vessels. The interior was darker, more modular in design, though the symmetry was broken by debris hanging here and there overhead like Spanish moss. A half-dozen figures in oatmeal-coloured jumpsuits had been working, but now turned and stared in astonishment as he materialised in the centre of the room.\n\nThen they all drew stubby black pistols and pointed them at him.\n\n\"Wait,\" he called out, holding his hands out but otherwise making no sudden moves. \"Don't shoot! My name's Jonas Ostrow! I'm expected!\"\n\n\"No one fire,\" said a familiar female voice. He glanced to his left, taking in a gaunt, pale girl about his age, with bright hazel eyes, a prominent nose, dark lips and a burr of honey-blonde hair. Her jumpsuit was like the others, but with additional insignia and epaulettes. She drew closer, her look severe and suspicious. \"You're human?\"\n\n\"Very.\"\n\n\"Some Aliens are known to look human,\" one of the young men accused. \"Maybe we should run a DNA test on him first?\"\n\nJonas looked around him. They were all about his age, or younger; in fact, some looked no more than fourteen, wearing modified adult jumpsuits. \"If you want. Maybe those trapped and injured people might even survive long enough for you to confirm the results?\"\n\nShe frowned, looking over his mustard and black uniform. \"What branch of the military are you affiliated with?\"\n\n\"I'm an Engineering Cadet with-\"\n\n\"A cadet? You're only a cadet?\"\n\n\"Yes, and I'd appreciate it if you didn't make me feel like a child, I get enough of that already. I'm with Starfleet.\"\n\n\"I am not familiar with that.\"\n\n\"I'm not surprised, it was founded after you left Earth. It's the exploration and defence arm of the United Federation of Planets.\"\n\nHer face tightened. \"You said you were from Earth!\"\n\n\"Earth is a founding member of the Federation; it's been around for nearly two hundred years. Look- Uh, what was your name? I didn't catch it.\"",
        "She straightened up. \"Colonel Dominika Semyonovna Bunina, Mission Commander.\"\n\n\"Mission Commander? Me too. Small galaxy, huh? Well, Colonel, I'm more than happy to help you catch up with current events, but maybe we can do it while I help rescue your people? At least it'll be more efficient?\"\n\nShe regarded him for a moment, before nodding and leading him to a large round hatch. \"They are trapped inside Battery Room 3. The fire control system has ceased, and we are detecting hairline fractures in the portholes.\" She paused and watched Jonas kneel by the door, setting aside his medical kit to open the engineering kit, retrieving a tricorder, passing it over the locking mechanism. \"We believe the power couplings overloaded in the explosion-\"\n\n\"They did,\" he confirmed, checking the readings. \"But they also fused one of the clamps. I'll have to cut it.\"\n\nShe drew closer, staring in wonder over his shoulder at the tricorder screen. \"Amazing. Your technology, that teleporter of yours. What else can you do?\"\n\nHe set down the tricorder and prepared the phaser cutter. \"Well, we have ships that can reach Warp 9.75, replicators that convert energy into useful things, holodecks that recreate interactive environments-\"\n\n\"Weapons?\"\n\nHe paused, raising the cutter to the clamp. \"Yes, those too, though we try to use those only as a last resort.\"\n\n\"And you managed all that despite being invaded by Aliens? How did you defeat them?\"\n\nJonas swallowed, pretending to be busy cutting into the clamp, not knowing how to broach the truth to her.\n\n*\n\nOn the Sureswift, Yeager leaned back in her chair, looking smug as they continued to listen to the transmission from Jonas' combadge. \"He's gonna get himself killed.\"\n\nRrori shot him an angry look. \"You could have helped, instead of taking the coward's way out.\"\n\nShe scowled. \"It's not cowardly to not want to beam into certain death. And I did try to help. I tried to warn him, warn all of you, of the danger.\"\n\nSoolamea frowned. \"They don't sound dangerous.\"\n\n\"Look them up yourself! Assassinations, bombings, mass destruction, mass murder!\" Yeager looked at each of them in turn, angry and anxious. \"Those terrorists were taught from birth to hate non-humans, and those humans who collaborated with them! They'd kill you two just as soon as look at you.\"\n\nSoolamea looked to Rrori. \"What are we going to do?\"\n\nThe Caitian frowned too. \"Jonas... Jonas isn't equipped to handle something like this. But we can't bring him back until the thoron interference is cleared.\"\n\nShe pursed her lips. \"What if- what if I beamed over to an unoccupied area near the thoron generator, disable it and beam back before I'm spotted?\"\n\n\"It's risky. We couldn't get you too near the generator because of the selfsame interference. Perhaps I should go?\"\n\n\"Are you being chivalrous?\"\n\n\"Well, with my strength and reflexes, if I get found out-\"\n\n\"-You'll get killed, and then we'll be left stranded in a shuttle without a pilot.\" She looked to Yeager. \"Unless you want to volunteer for this?\"\n\n\"Forget it.\"\n\n\"Yes,\" Rrori growled. \"We can count you out of just about everything, can't we?\"\n\n\"Don't try taking the moral high ground with me, Pussycat. At least I'm honest and upfront with all of you. You used your friend, and me, to get a chance at going Bumpers with Soo out here.\"\n\nHe bristled. \"That's not true-\"\n\n\"Of course it is. If I'd been a Horta you'd have still convinced yourself that Jonas and I would have made a cute couple, so long as it gave you an excuse to get out here for a taste of Rigelian quim.\"\n\n\"Classy,\" Soo muttered.\n\nRrori glared at Yeager, before looking to Soolamea. \"Get an engineering kit, I'll find you a suitable place to beam into...\"\n\n*\n\nThe heat from the phaser cutter was starting to get to Jonas, this close to the orange-red beam, but Jonas didn't feel like showing any weakness in front of the young Colonel. \"So, you're the Mission Commander, huh? And what is your mission?\"\n\n\"What's yours?\"\n\n\"Ooh, you want to play hardball, huh?\" he joked.\n\n\"I do not play games, Mister Ostrow.\"\n\nHe smiled to himself. \"You remind me of my friend Eydiir. Well, Colonel, our mission was to come here and study what we thought was an abandoned wreck. We had no idea that it was the Rising Star, or that it still contained viable capsules. Your turn.\"\n\nShe squatted beside him, watching his work. \"My team and I were awakened by the ship, to complete the planetary survey and confirm its suitability for the location of New Earth.\"\n\n\"New Earth, huh? I should warn you that there have been more than a few worlds out there who have beat you to that. New Earth, Earth II, Terra Nova, Nouvelle Terre, Nova Tero... and also, you and the others I've seen here seem rather young to shoulder such responsibility.\"\n\n\"We were trained on Earth for years for this responsibility! We are more than capable of facing whatever challenges awaiting us!\"\n\n\"Hey, I don't doubt it. But I would expect a ship like this would also include a senior flight crew. Where are they? On the planet's surface?\"\n\n\"They...\" The girl's voice became subdued. \"The flight crew were meant to awaken first. But there was a malfunction. They...\"\n\nJonas felt his expression sober, having heard horror stories of cryostatic chamber failure. \"Sorry to hear that.\" He set down the cutter. \"There. Now we just need an independent power source to open the door.\"\n\n\"Marco!\" she barked. \"Get a power unit from Engineering!\"\n\nJonas half-listened, studying the equipment in his kit. \"I might be able to jury-rig something.\" He retrieved a capacitance plate and cutter battery. \"So, how long have you been awake?\"\n\nShe continued to watch him, seemingly distracted by his work to let her talk more freely. \"Over a year now. At first there was just the three of us, and then we arranged for another nine to join us, a large enough number to take the place of the flight crew without depleting our supplies too quickly or overtaxing our recyclers. We studied the necessary systems: power generation, shuttle operations, cryostasis maintenance. The warp core is depleted of fuel, but most everything else seems to function.\"\n\n\"Twelve of you, huh? How many remain in stasis?\"\n\n\"Fifty. Including Mr Golov, of course.\"\n\n\"Of course.\" He frowned; that was the first confirmation that Maxim Golov was onboard and alive. It was probably a good thing that Nancy hadn't come along with him or she might have gone looking to literally pull his plug. \"Why haven't you revived Mr Golov? Wouldn't he be-\"\n\n\"You talk too much,\" she snapped.\n\n\"Sorry.\" He pressed the jury-rigged tool against the door's power connectors. \"Open it.\"\n\nShe frowned dubiously, until she complied, and then made a sound as the door opened. \"You did it, Mister Ostrow.\"\n\n\"I have my moments. And call me Jonas.\" He rose and carried the medical kit inside. Much of the battery room interior was charred, with a tinge of acrid smoke still in the air despite the recyclers - and the fractures in the small portholes.\n\nHe suppressed the urge to seek and make repairs to focus on the three injured crewmen here. His stomach churned at the sight and smell of the charred flesh, taking him back to That Day on the Vulcan freighter, and the attempt he made on his own life, an attempt that nearly took his best friend Kit.\n\nHe used Kami's techniques to distance himself from the memories as he ran the tricorder over the first injured person. \"Third-degree burns, fractured femur, minor fractures to ribs.\" He grabbed a hypospray and inserted an appropriate ampule. \"40cc of ambizine to stabilise, then a cycle with the osteo- and dermal regenerator. Have you got medical facilities?\"\n\n\"Yes, though I think our Autodoc is like a box of stone knives and bearskins compared with the tools in your kit.\"\n\nHe moved onto the next person. \"I'm sure it'll do, and I'll show your people how to use these instruments.\"\n\n\"You are a good medic, Jonas.\"\n\nHe shrugged. \"Engineering is my Primary study, Medical is my Secondary - but I only chose it because I thought I'd spend most of my time fine-tuning the tricorders and autosutures. I do better with equipment than people.\" He treated the third, allowing the others to carry them out, before facing her again. \"Colonel- I don't suppose we can be on a first-name basis at this point? Mission Commander to Mission Commander? Dominika, isn't it?\"\n\n\"Nika. Nika is a - what you call - nickname, to be used by friends. Or lovers.\"\n\nHe smiled. \"I'm hoping we can be at least one of those... Nika.\"\n\nShe smiled.\n\nThen something caught his eye at the porthole. He drew closer. \"Nika... do you know we're moving?\"\n\n\"What?\" She followed him, seeing the image of the planet starting to fill up more and more of the view. \"That's not possible, the main drives are cold and the manoeuvring thrusters are off-line.\"\n\nJonas tapped his combadge. \"Rrori, what's happening with us?\"\n\n\"The explosion kicked you out of your orbit and sent you moving towards the planet. If you fire up your thrusters now, you should get back in with no problem-\"\n\n\"Colonel!\"\n\nBefore Jonas could continue, one of Nika's people showed up at the opened hatchway - pressing the muzzle of a pistol into Soolamea's face. \"I found this Alien in Engineering, sabotaging our generator!\"\n\nNika reached out and snatched the combadge off of Jonas' uniform, and then his tricorder. \"It's a trick! Get him out of here! Get them both out!\"\n\nJonas' heart stopped. \"No, wait! Let me explain-\"\n\nSomeone behind him struck the back of his head with the butt of a pistol.\n\n*\n\nOn the Sureswift, Rrori's heart pounded in his furry chest. \"Jonas! Soo! Mother's Cubs...\" He looked to Yeager. \"Can you get a lock on them?\"\n\nShe glanced over the readings, frowning. \"No, there's still thoron interference. Looks like she didn't have time.\" She grunted. \"I warned him about going over there. Idiot-\"\n\n\"Do yourself a favour, Nancy, and shut up for a while.\" He opened a hailing frequency. \"Sureswift to Surefoot: Emergency!\"\n\n*\n\nJonas and Soolamea sat on the floor of the main section, their backs to a wall, watching as Nika and her people talked amongst themselves or studied the confiscated Starfleet equipment.\n\n\"Are you okay?\" Jonas muttered, keeping his voice and movements as slight as possible so as not to antagonise their captors any more - or antagonise the headache growing following getting hit in the back of the skull.\n\n\"Yeah,\" she replied, equally quietly. \"You?\"\n\n\"Never mind me. What the hell are you doing over here?\"\n\n\"We were getting worried about you. Rrori and I thought it would be a good idea for me to come over and try to disable the thoron generator, in case we needed to get you out quickly.\"\n\n\"Nice to know my status as Mission Commander is being respected.\" He grunted. \"But then, it was just a joke anyway, wasn't it? How did Nancy put it? Something to make me feel like a man?\"\n\nSoolamea swallowed. \"I'm sorry you had to hear that. Nancy shouldn't have said anything. Rrori didn't mean-\"\n\n\"I was building trust with their leader before you showed up, trying to convince her that all you filthy Aliens weren't enslaving humans or laying eggs in us.\"\n\n\"We were worried! Nancy was telling us more horror stories about these terrorists-\"\n\n\"I'm sick of hearing about Nancy. You and Rrori seem more interested in what she had to say than me. I shouldn't be surprised.\" His headache was definitely blossoming. He knew he might just be naive about them - and attracted to Nika - but his instincts, such as they were, told him a different story. \"These kids... they may spout Golov's manifesto, but they're really here to help start a New Earth. A new beginning here.\n\nBut it's going to end before it begins if we burn up in the atmosphere. The flight crew is dead, these kids have been studying the manuals, but that doesn't make them qualified to handle an emergency of this magnitude.\" Louder now, he called out, \"Nika, we have to talk.\"\n\nShe ignored him, though she obviously heard him.\n\n\"Colonel,\" he continued. \"There's no time for this. Your ship is in danger of burning up. You, and everyone in stasis here, including Golov.\"\n\nNow she reacted, along with others, as she turned and approached, one hand resting on the top of her holstered pistol. \"There is nothing to talk about with you. It was a trick. You distracted me, while your Alien mistress here tried to sabotage our weapons generator.\"\n\n\"That's not what happened. And she's my crewmate, a friend, not my... mistress. Her name is Soolamea. Her people are from Rigel V; they were visiting Earth when you were still there, and their genetic therapies helped repair a lot of the damage caused by radiation from the War. And they're members of the Federation.\"\n\nNika grunted. \"More of that Federation nonsense.\"\n\n\"It's not nonsense, Nika. The Federation is stretched out over thousands of light years, comprised of hundreds of worlds, keeping the peace and expanding the frontiers of knowledge. And we did it in partnership with races like Soo's-\"\n\n\"More lies!\" She looked at Soo. \"How do you enthral humans? ESP? Cybernetics? Mind parasites?\"\n\nSoolamea smirked. \"I find a good pair of boobs usually does the trick.\"\n\nThe Russian gritted her teeth. \"You think this is some joke?\"\n\n\"No,\" Jonas interrupted. \"We think this is some crisis. I promise you, Nika, I didn't know she'd come over. And she wasn't trying to sabotage your generator, just fix a thoron leak.\"\n\n\"Leak? We detected no leak, at least none exceeding our safety standards.\"\n\n\"For you it's within safety standards, because thoron radiation doesn't affect any of your systems. But it does ours: our sensors, our transporter. With that leak continuing, I couldn't beam back. If you were on another unknown vessel, wouldn't your people be taking steps to ensure your safety against potential hostile forces?\"\n\nShe paused, as if looking for an avenue of further argument.\n\nHe didn't give her a chance. \"We have more important matters. Your orbit is decaying, I don't know how long you've got, but we've got to do something about it.\" He rose, making her back off and tighten her hold on her holster, while her people drew their weapons. Jonas ignored them, focusing on her. \"Tell me the truth now, Mission Commander to Mission Commander: are your people capable of righting yourselves in time? Or could you use our help?\"\n\n\"Why should I trust you now?\"\n\n\"Because I give you my word I'll stay with you until you and everyone else is safe.\" He shrugged. \"Also, if we don't do something, we'll burn up with you as well. And I gave up on suicide a while back.\"\n\nNika's expression softened a little. \"Fine. You will help, under our supervision.\"\n\nOne of the men drew closer. \"Colonel, you can't trust them! I vote we push the Alien and the Collaborator into an airlock and make them kiss space!\"\n\nNika never took her eyes off Jonas. \"I'll take that under advisement, Marco - when we become a democracy. For now, we go to the bridge to determine how much time we have.\"\n\n*\n\nUSS Surefoot, Deck 1, Captain's/Counselor's Quarters:\n\nHrelle tried rolling onto his back, wincing at the response from his tail - he had to get used to sleeping on his side or belly again, he guessed - and turned his back on his wife, staring at the far wall.\n\nKami sat up over her, draping her short mane over his head and shoulders, hands on his furred, muscular arms. \"Hey, don't be like that. You just got out of surgery, you can't expect to be your old horncat self right away.\"\n\n\"Yeah, sure,\" he agreed, unconvincingly.\n\nShe reached over and smacked him on the snout. \"Maybe something other than your penis is bothering you?\"\n\nHe sighed. \"Should I have done this? Should I have got myself fixed up? I told myself months ago I wouldn't, that I wanted others to be reminded of what I went through, that the Universe, while mostly a good place, was still capable of hurting people. Now, hearing that aloud, that sounds pretentious.\"\n\n\"And not the full story, either.\"\n\nHe looked up at her. \"What do you mean?\"\n\nShe shrugged. \"Well, you also wanted people to feel uncomfortable... and guilty, for not knowing you were enslaved, and rescuing you.\"\n\n\"That's stupid. It wasn't anyone's fault.\"\n\n\"I never said it was a *rational* motivation.\"\n\nHe looked down again. \"Yes, well, now all that's changed. Why?\"\n\n\"Because you changed, like the rest of us do, all the time. You're not the same man as the scarred survivor I first met at Starbase 74, nearly two years ago. Or for that matter the loving husband to Hannah before that, or the aggressive captain of the Furyk before that, or the eager, insecure young cadet at Starfleet Academy. That you've changed now doesn't invalidate the decisions you've previously made.\"\n\n\"But, you... You like the way I look now, right?\"\n\nShe made an amused sound against his skin. And reached down past his belly. \"Maybe this is all just a big deception on your part, and you're just looking for a little extra attention from me?\"\n\n\"No, no...\" Then he started purring. \"On the other hand, if you want to do that-\"\n\nThe Red Alert klaxon filled the room, and he almost shoved Kami off the bed in his haste to jump to his feet and slip into some shorts, before grabbing his shirt and trousers and forgoing his boots as he bolted out of their quarters and down the corridor, feeling the ship accelerate from a standard warp speed to something much higher.\n\nHe almost bumped into T'Varik as they reached the bridge at the same time, the Vulcan ignoring his state of undress as he strode up to the Captain's chair. Sasha rose from it, momentarily startled by seeing him in just his boxers, before reporting, \"Sir, we received a distress signal from the Sureswift! There are people on that old wreck, and they've taken Jonas and Soolamea hostage!\"\n\nT'Varik was immediately at the Ops station, examining and collating data, as Hrelle dressed in front of everyone. \"Hostage? How-\" He shook his head. \"Never mind. What's our ETA to their position?\"\n\nSasha glanced at the helm. \"At current velocity, 6.6 hours.\" She swallowed. \"Sir, I know I took it on myself to go to Red Alert and order the course change before summoning you-\"\n\n\"Yes, you did, Cadet,\" he agreed, slipping his shirt over his head. \"And you did exactly the right thing, so let's leave it at that. Go to Red Alert Silent, get the Counselor and Lt. Abed up here, if they're not on their way already, and resume command.\"\n\n\"Resume, Sir?\"\n\n\"Yes - the grown-ups are gonna be in the briefing room doing grown-up stuff; raise the Sureswift again and have them stand by, we'll need more data from them.\" He smiled reassuringly at her anxious expression. \"They'll be fine, Sash. Unless, of course, this is all some drunken prank on their part. In which case, be afraid. Be very afraid...\"\n\n*\n\n\"Oh, shit.\"\n\nJonas never turned to look at Soolamea; there had been enough swearing from her, and the others, and himself, since arriving on the engineering deck. And with good reason: the readings on the bridge gave them about forty minutes before burn up, and down here, the warp core was as dead as it could be, and the impulse drives needed more work than could be done in the time they had left. The Sureswift had a tractor beam, but the Rising Star was far too massive in comparison to make an appreciable difference.\n\nThe only hope was to get some power rerouted to the manoeuvring thrusters; they wouldn't be enough at this point to get the ship back into a safe orbit, but they would assist in an emergency landing.\n\nNow he was starting to feel a shuddering, the tell-tale signs of the ship beginning to touch upon the outer envelope of the planet's atmosphere.\n\n\"Well?\"\n\nHe looked up. Nika stood there, doing her best to suppress her anxiety for the sake of her crew and maintain a commanding persona as he told her, \"You're going to have to land this ship.\"",
        "Now he saw the worry in her eyes. \"Land? We can't-\"\n\nHe rose to his feet again. \"Colonel, there's no choice. I take it you don't want to abandon the Rising Star and everyone in stasis?\"\n\nHer expression tightened. \"You take it correctly.\"\n\nHe nodded. \"The ship's emergency landing systems, the extendible re-entry wings and balloons, are still operating, and I think we can get enough power to the manoeuvring thrusters to assist in the landing. Tell your pilots to start preparations.\"\n\nNika paused.\n\n\"What is it?\"\n\n\"Our most experienced pilot is in the shuttle on the planet. Those onboard have some skills, but...but I am sure they will do their best.\"\n\n\"I see.\" He held out his hand. \"Give us our combadges back.\"\n\nNika stared at him, before reaching into the pocket of her jumpsuit and almost angrily slapping them into his palm. \"There. Leave. We don't need you. Yeban'ko maloletnee.\"\n\nHer last words didn't quite translate, but he got the idea. Jonas never took his eyes off her as he handed Soolamea her badge and pinned his own back onto his uniform, tapping it. \"Ostrow to Sureswift, come in, please.\"\n\nRrori's grateful voice filled the air. \"Jonas! Mother's Cubs, you and Soo have to shut down the thoron interference and get back, now!\"\n\n\"Prepare to beam Soo back. I'm staying, however.\" He secretly enjoyed Nika's reaction to that announcement. \"And you're having yourself beamed over here as well.\"\n\n\"Uh... excuse me?\"\n\n\"No time to go into detail now, but we have to get this crate landed safely, and we'll need a talented, brilliant and dauntless pilot - and you're it.\"\n\n\"Jonas, you can't be serious! Landing that old wreck? Do you want to kill yourself?\" Rrori paused, and then added, \"Seven Hells, Jonas, I'm sorry, I didn't mean to say that-\"\n\n\"Forget it. And this isn't suicide - I know what that looks like - it's simply an incredible risk.\" He looked at Nika. \"And I gave my word. By the way, it's a direct order. Unless you want to join Nancy in mutinying?\"\n\nThere was a moment of silence on the channel, before Rrori concluded with, \"Aye, Aye, Sir. You'll still have to shut down that thoron leak if you want Soo beamed back here.\"\n\n\"Acknowledged. Stand by.\" He looked at Nika again. \"Shut down your thoron generator; you were only using it for your weapons systems, and they couldn't do any damage to us, anyway.\"\n\nThe Russian girl stared back, looking a little embarrassed at her earlier judgement of him, before barking the order to one of her crew.\n\nJonas looked to a concerned Soolamea. \"You'll be in charge of the shuttle. Stay put and stay in touch with the Surefoot, update them. You'll be fine.\"\n\nThe Rigelian girl looked at him - and then quickly embraced him tightly. \"Don't you die, you hear?\"\n\nJonas was taken aback by the reaction, but managed a quick hug back, before drawing away, feeling himself flush as he replied, a little too glibly, \"Don't worry, dying's the last thing I'll ever do.\"\n\nRrori's voice returned. \"The thoron interference has stopped; energising now.\"\n\nSoolamea was enveloped by a column of transporter energy, vanishing and leaving a circle of startled faces at the process, something Jonas realised he took for granted before now.\n\n\"Why are you staying?\" Nika asked, bemused.\n\nHe turned to her. \"Because I promised I'd stay until you were all safe. I'm in Starfleet; we keep our promises.\"\n\n\"And your friend will be able to pilot us down safely?\"\n\n\"He's a talented and experienced Flight Officer; he'll be the first to confirm that. But I should warn you... he's not human.\"\n\nShe tensed. \"Not human? You mean, like your friend?\"\n\nHe smiled. \"He's... different.\"\n\nAs if on cue, another transporter column appeared, producing the tall, tailed figured of the Caitian, his white-furred hands already raised in a peaceful gesture as the startled, anxious members of Nika's crew reacted, some raising their weapons in his direction. His tipped ears twitched nervously as he looked around. \"Hello, everyone. Please try not to kill me, at least not before I save all of our lives.\"\n\nJonas looked to the astonished Nika. \"His people are called Caitians, the same race as our Captain and Counselor. They're felinoids, as you can probably tell.\"\n\nShe stared at the new arrival. \"Is he- is he dangerous?\"\n\nRrori smiled. \"I might break your heart, Colonel, but otherwise, no.\"\n\n\"Colonel,\" Jonas spoke again. \"The sooner he gets familiar with your bridge controls and talks with your people-\"\n\n\"Of course. Jean-Claude! Take it to the bridge! Cooperate fully with it!\" As they departed, she looked back at Jonas. \"We need to secure the ship for the emergency landing. Will you- Will you assist us, Jonas? Please?\"\n\nHe smiled. \"Lead the way.\"\n\n*\n\nT'Varik looked up from her PADD. \"We have just received an update: The Rising Star was damaged when it attacked the Sureswift, and its orbit is decaying. Cadet Soolamea has been returned to the shuttle, but Cadet Ostrow has remained, and ordered Cadet Rrori to beam aboard to assist in landing the larger vessel onto the surface of Sigma Lambda II.\"\n\nAcross from her, Security Chief Prakesh Abed blanched. \"Why the hell wouldn't Jonas have taken the chance to escape?\"\n\n\"Evidently Mr Ostrow is assuming responsibility for their current plight, and believes he can assist them.\"\n\n\"That's crazy!\" At the reaction of Kami, sitting beside him listening to the audio logs on a receiver, Abed added, \"Sorry, Counselor. But he's on a ship full of murderous xenophobic fanatics!\"\n\n\"According to Cadet Soolamea,\" T'Varik pointed out, \"Jonas believes most if not all the adult crew died in transit, and that with the exception of Maxim Golov, the rest are young people brought to colonise the world, espousing the xenophobic attitudes as rote rather than genuine belief.\"\n\nAt the head of the table, Hrelle looked to his wife and Counselor. \"What's your assessment of Jonas based on the audio logs?\"\n\nKami removed the receiver from her pointed ear. \"I'm not detecting any signs of duress. In fact, very little stress at all, considering; Jonas is actually managing very well, keeping the situation calm, asking open, probing questions, using first names to engage with this Colonel Bunina, while ensuring he had an open link to provide us with intelligence. I'm genuinely impressed with him, given he's has no formal command or psychological training.\"\n\n\"He has no experience assessing a situation like this,\" Abed pointed out. \"We need to exercise caution, and assume the worst.\"\n\n\"I tend to agree with Mr Abed,\" T'Varik added, calling up an image on the main screen of a tall, broad-shouldered human with an iron-grey hair and matching beard, bright blue eyes and an avuncular smile. Surrounded by smiling children, he looked to Hrelle more like some grandfather than a terrorist mastermind. \"Mr Golov maintained a carefully-constructed public persona while he still resided on Earth, but subsequent investigations following his disappearance indicated expected psychological issues involving paranoia and megalomania.\n\nVulcan's initially guarded relationship with Earth was largely shaped by the actions of the terror squads sent by Mr Golov's organisation from Toralsk, who in his time had been responsible for the deaths of fourteen Vulcans, thirty-six Rigelians, and forty-four Denobulans... but these numbers are significantly dwarfed by the estimated one hundred and nineteen thousand humans murdered in a series of biological and nuclear acts of mass destruction, designed to appear as accidents or attacks caused by 'Aliens', in order to trigger a shift in Terran policy against interaction with other worlds.\"\n\nThe table went silent. Hrelle frowned; despite his experience, he found it difficult to understand the mentality of someone willing to murder so many people in some twisted intention of saving them. \"Mr Abed, ready a full security team, including cadets with both Primary and Secondary Security training. Commander, contact the Federation Judiciary Council, if possible reach Craig Whitham, an attach\u00e9 there.\"\n\n\"For what purpose?\"\n\n\"To find out what the Federation's legal stance is regarding a known criminal like Golov.\" Then he looked to Kami. \"Young people raised to believe everything this man says... if someone like Jonas tries to shake them out of those beliefs, even unintentionally, how might they react?\"\n\nShe frowned. \"It depends on the person, and the circumstances. But even those who recognise Golov's true nature might refuse to accept it. Because the truth, that the weight of the actions they might have taken, can be too emotionally devastating to face.\"\n\n*\n\nThey moved along the length of the ship, sealing hatches and doors, securing loose furniture, crates and equipment, and double-checking the emergency life support and lighting units in each section. Nika noted how Jonas located these last without any instruction. \"You are very gifted.\"\n\n\"Me? No, not really. I've had experience decommissioning a lot of these antiques.\"\n\n\"Antiques,\" she grunted. \"When I was a child, I stood in the fields surrounding Mr Golov's private spaceport. I was surrounded by bluebells and daffodils and heather of the deepest purple, and I looked up at this ship, perched on the launchpad supported by gantries and gravity struts... and I thought it was the most advanced, most amazing machine on Earth.\"\n\n\"It was,\" Jonas agreed sympathetically. \"It's all relative. Someday, someone will be decommissioning my starship, with its Warp 9 drive and holodeck and phaser banks, and think it's the most quaint thing ever.\" He helped her with a stubborn latch. \"How did you get involved with Golov?\"\n\nNika's face darkened. \"My family lived in St Petersburg. I dreamt of being a cosmonaut, of working on Luna and maybe even making it to the new Martian Colony. Then the Aliens released a virus. My mother, father, grandparents, my brother Leonid... all died. I was sent to an orphanage. It was there that Maxim Golov visited us, and heard my story. He adopted me, brought me to Toralsk, to his facility in Budyostal. He said he was sorry that he couldn't bring my family back, but he promised me he would help me fulfil my dream... only I would end up going much further than anyone else. And he was right. He was...\" Her face tightened. \"How can Earth have forgiven the Aliens for what they've done? I don't understand.\"\n\nHe wanted to tell her the truth, wanted to open up and reveal to her that everything Golov fed her had been a lie, that he himself had been the one to engineer those terrible atrocities that claimed her family and so many other families. That with the exception of the horrible Xindi attack nearly fifty years after the Rising Star left, and the odd probe or machine entity, Earth had never faced any attack. But it seemed inappropriate at this juncture.\n\nInstead he looked at her. \"It's one of two things: either aliens did commit those crimes years ago, but humans have learned to look past this and forgive them. Or... what you were taught wasn't necessarily the whole truth.\"\n\nShe looked challengingly at him, but thankfully dropped the subject to say, \"Come, we have more to do.\"\n\nThey descended to a lower deck, where stacks of black cryostatic capsules flanked the narrow, claustrophobic corridor. Jonas glanced at the datascreens on each, noting the few that had malfunctioned, glad to see so many still working, especially given how young the occupants were according to the data.\n\nShe stopped at a door, peering through a window slit to the interior. Jonas joined her, seeing a single capsule inside in the centre of the room, reminding him of a Pharaoh's sarcophagus. \"Is that-\"\n\n\"Yes.\" She continued to stare inside. \"Jonas... I want to trust you.\"\n\n\"I want you to trust me. What can I say or do?\"\n\n\"You and your friend have made mention of you... attempting suicide. Was this just banter? Or did something actually happen?\"\n\nHis smiled dropped. He didn't want to admit to it. He'd had enough of people asking about it, talking about it, judging him on it, making cheap jokes about it. He wanted to put it behind him. He wanted to be seen as strong and confident and self-controlled in this woman's eyes.\n\nAnd yet, at the same time, he wanted to be honest. He wanted to be open. Especially in light of their risk of imminent death when this wreck started its descent in earnest. And yes, he did promise to be honest with her as well. \"Yes. Ten weeks ago, I tried to kill myself. A friend rescued me, almost dying himself in the process. He was an Alien, by the way.\"\n\nShe regarded him. \"Why did you do it?\"\n\nIt was asked with curiosity, not condemnation, making his response easier. \"I felt worthless. I felt overwhelmed. I felt like I was nothing, that all my friends and loved ones shouldn't waste their time with me. I felt without hope, without escape. I felt like my whole body was a dull relentless ache, and that anything was better than feeling this way - even death.\n\nLuckily for me, my friends didn't give up on me. I opened up in Counseling sessions, spoke to others who had experienced the same things. I'm not feeling that way any more. I'm fighting. I'm staying alive.\"\n\nShe nodded. \"I too have felt such feelings. The weight of responsibility on my shoulders have often felt too much. I am glad we have both found the strength to continue. I am sure your girlfriend is glad, too.\"\n\n\"Girlfriend? Me?\" He frowned in confusion, and then laughed, a little embarrassed. \"I don't have a girlfriend! I've never even kissed one!\"\n\nNika stared enigmatically into his eyes - then turned to a wall monitor to switch it on. \"Bridge, what's our status?\"\n\nA young man's voice replied, \"All systems operational, we are aiming for the best landing site per our previous surveys, and we will begin our final descent in thirty minutes, according to the Werewolf.\"\n\nJonas smiled and asked aloud, \"Is that right, Werewolf?\"\n\nRrori's lilting growl took over. \"Yes. The controls are primitive - I strongly suspect if I looked underneath the panels I will find prehistoric animals operating the mechanisms - but it is nothing I cannot handle. I do not know what a Werewolf is, but I do not think I like it.\"\n\nBefore Jonas could respond, Nika leaned in and announced, \"We will join you before descent starts. Bunina out.\" She switched off the intercom and took his hand, squeezing. \"Come, hurry.\"\n\nWordlessly he let her lead him away, down a corridor, up a ladder and then along the main deck towards an aft section filled with tiny compartments he recognised as living quarters, much like the sleeping berth on the Sureswift. She took him into one, a cramped, cluttered interior with little furnishings.\n\nAnd pulled him into a kiss. The breath caught in his lungs as her mouth ground onto his, her tongue slipping into his mouth and exploring. He froze, caught completely off guard, even as he was aware of her desperately trying to kick off her boots while still maintaining contact with his mouth. Finally she pulled back long enough to utter, gasping, \"Hurry- Not much time-\"\n\nJonas felt his heart pound until it threatened to burst from his chest. He wanted to make sure she was certain about doing this, if was wasn't simply acting on impulse or something, to be the gentleman and inform her that he had birth control implants, and a hundred other stupid, pointless things.\n\nInstead he pulled back and followed her movements to undress, looking over her pale, lithe body, his desire driving him as they practically collapsed naked onto her bed.\n\n*\n\nThe ship was beginning to shake violently by the time Jonas and Nika staggered onto the bridge and collapsed into the unoccupied seats behind Rrori and the two crewmembers assisting him. The Caitian had to raise his voice over the sounds of the thrusters and the turbulence pounding against the rapidly-descending starship. \"You two cut it fine, where were you?\"\n\nJonas felt his face burn as he secured himself into his seat harness. \"We had to double check the rest of the crew in the living section.\"\n\n\"What's our status, Noel?\" Nika barked, breathing hard. \"Why are we shaking so much?\"\n\n\"We're waiting until the optimal time to deploy the re-entry balloons; too soon and they risk collapsing before we really need them.\"\n\n\"Don't worry, Colonel,\" Rrori assured her, both hands gripping the manual steering column in front of him. \"I can't tell you how many times I've done this very thing!\"\n\nNika spared a look at Jonas, before saying, \"If you save us, Mr Rrori, I will owe you everything.\"\n\n\"Well, Colonel, among my people, we prize human females. They make excellent pets.\"\n\n\"He's joking,\" Jonas assured her, his fear at being on the bridge of a working DY ship entering a planetary atmosphere eclipsing the sheer pleasure of the sex he had just shared with Nika. He stared at her. She stared back.\n\nTheir hands met across the aisle.\n\nThen Jonas' attention briefly returned to Rrori, who had twisted in his seat to glance behind him, his black-tipped muzzle twitching as he sniffed something in the air. Then he shot Jonas a sly grin.\n\n*\n\nSoolamea watched the tactical display, seeing the image of the Rising Star circle around the planet and disappear from view, and opened a channel. \"Sureswift to Surefoot: the Rising Star has begun its descent. They should make planetfall in 62 minutes. No problems reported, with them or with us.\"\n\n\"Acknowledged, Sureswift. Our ETA is 68 minutes. Surefoot out.\"\n\nSitting opposite her in the cockpit, Nancy Yeager sipped at a hot mug of Raktajino, not having said a word since Soo had returned and Rrori had departed.\n\nSoo looked at her. \"Wonder what it's like, descending without inertial dampeners or shields. Must be rough on the kidneys.\"\n\nYeager remained silent.\n\n\"It was some journey they'd made in that thing,\" she continued, trying to break through the other girl's defences. \"It's really quite robust if you think about it, but it makes perfect sense. The ship was made in an era where, if you broke down even only a light-year from help, help would never get to you in time. So their equipment may be slow compared to ours, but it's a hell of a lot more durable. Same with the crew. But then, you're the historical expert, aren't you? Maybe when this is over you can talk to them? You must have questions.\"\n\nYeager stared into her mug. \"Yes. I have questions. Questions like, 'How can you sleep at night knowing you were responsible for the deaths of over a hundred thousand innocent people? People killed for your political ends? How do you justify killing humans in a self-declared war to protect humanity?\"\n\n\"Nancy-\"\n\n\"Don't 'Nancy' me. The moment we confirmed that it was a ship full of terrorists, we should have phasered them out of existence.\"\n\n\"They're just a bunch of kids!\"\n\n\"So were the Hitler Youth. So were Green's Young Purifiers. So were the Vega Obscura. Fanatical little offspring, child soldiers prepared to kill innocents just as readily as adults, if not more so-\"\n\n\"Nancy, stop this! Please!\"\n\nYeager continued to stare into her mug, her voice dropping to a murmur. \"I'm sorry. But these people...\" She set aside her Klingon coffee and stared out into the void through the cockpit screen. \"I told you my family was big on history. Other families took their children to Pacifica, Risa or Disneyworld Luna. Mine took me to the Giza Pyramids, Zefram Cochrane's Launch Site, the Xindi Memorial and the wreck of the Valley Forge.\n\nI loved it, though. I learned that humanity lived as savages for thousands of years... until we began to grow up, on April 5, 2063. When the Vulcans arrived, and showed us that we were not alone... and that we could do better than we'd done. We'd begun to put aside our old hatreds, our greed, our fear, and began to work together, with each other, and with other worlds. Everything we enjoy now - peace, prosperity, unity, the Federation - is because of those people.\"",
        "Yeager nodded to the planet. \"But the crew on that ship out there aren't among them. They're traitors to humanity. They deserve to die. They willingly embrace hate.\"\n\nThe shuttle grew silent.\n\nThen Soolamea pointed out, \"And what are you doing?\"\n\nYeager never responded.\n\n*\n\nThe first thing Jonas realised when they had finally stopped was that he had wet himself a little, but ignored it under the circumstances, content to be grateful for the absorbent properties of Starfleet uniforms. His limbs, his whole body shook as he fidgeted with his harness, looking to Nika, who looked equally shaken but forcing her body to move. He had to swallow several times to make his voice work. \"I'm- I'm assuming we're not dead-\"\n\nIn the front row, Rrori was slowly rising and helping his assistants. \"I hope not. I expect the Afterlife to have more furred females in constant Season.\"\n\nJonas rose up, looked at Nika, and shamelessly embraced her, not caring who was watching. She hugged him back - but then pulled away, a mask of professionalism in place once more. \"Marco, run the post-flight safety checks, secure any potential fuel leaks. Noel, what's our status?\"\n\nThe boy coughed and helped himself up. \"Colonel, we- we landed near the coordinates of Survey Site 4, on the edge of the Northern Continent. The fuselage appears intact... though we are no longer spaceworthy. We have also alerted Hasim in the Shuttlepod, and he is on his way, ETA 3 hours.\"\n\n\"Good. Jonas and I will check the rest of the crew and the capsules - the capsules will start automatically reviving the occupants following the crash landing - and meet you outside.\" She took Jonas by the hand and led him out, stopping once out of view to kiss and hold him again, Jonas returning the fervour, before they reluctantly parted.\n\nThe others in her crew had survived unharmed, and the capsules were intact, including apparently Golov's, though there were no indications that it was reviving the same as the others. Now Nika looked pale. \"There is something wrong with his capsule. We tried to revive him long before, but there are multiple security features in place, and we were afraid of making a mistake and... and he ended up like the others.\"\n\nHe nodded. \"I can have a look at it, see what's wrong.\"\n\n\"Thank you, perhaps later. But now we must go outside, see the others.\"\n\n*\n\nThis part of the planet was temperate to cool, with wide fields thickly carpeted in tall wildgrass, reminding Jonas of the Canadian plains where he had taken an initial Starfleet survival course. Now, however, he could see the plain here had been cut in half by a kilometres-long trench dug by the Rising Star as it landed. The gravity was slightly lighter than Earth-normal, the air drier and thinner, and groups of gaunt, green-winged birds circled and swooped in the aquamarine sky, alerting the rest of the planet to the new arrivals.\n\nJonas stood by Rrori and watched the shock, the wonderment of Nika and her crew as they marvelled at standing on another planet for the first time, something he realised he took for granted. He wanted to join them, but accepted that this was also a significant moment for the group, and remained content to watch them hug, laugh and talk excitedly.\n\nRrori folded his arms across his chest. \"Hmph. No thanks for the ones who helped them land?\"\n\n\"Everyone made it safely.\" Jonas pointed out. \"That's thanks enough.\"\n\n\"For you, perhaps - but then you did get some personal gratitude from the Pretty Colonel, didn't you?\"\n\nJonas glared at him, but then a set of bright lights caught his eye, and he turned to see a series of transporter energy columns appearing in places surrounding the Rising Star crew. Jonas recognise the figures as they fully coalesced: Lt. Abed, Neraxis, Thykrill and the rest of the Primary and Secondary Security specialists.\n\nBut he focused on one familiar figure: Captain Hrelle, this time in uniform and sporting a tail again - and a phaser in his hand. \"Everyone! Drop your weapons, hands in the air!\"\n\nThe young people were startled - for a moment, before tightening their circle, moving the unarmed members towards the centre, while those with pistols, including Nika, moved to the outer edges, Nika declaring, \"Aliens! It's a trap! They've trapped us!\"\n\nThey were raising their weapons.\n\n\"NO!\" Jonas strode forward, ignoring the weapons pointed at him as he approached Hrelle. \"Sir, lower your phaser!\"\n\nHrelle tensed, aware of the young man getting in the line of fire. \"Jonas, get out of the way!\"\n\n\"No, Sir! Please-\"\n\n\"Where's Maxim Golov?\"\n\n\"Is that it?\" a disbelieving voice asked behind him. He turned to see the angry, anguished face of Nika. \"Everything you've said, everything you've done, it's just to get Golov? It's all been a lie?\"\n\n\"No!\" He turned back to Hrelle. \"Captain, order everyone to lower their weapons! Trust me! Please! I know what I'm doing!\"\n\nHrelle regarded him for a moment - and then lowered his phaser arm. \"Lt. Abed, all of you: do as he says. No one take any aggressive action - unless fired upon first.\" His gaze narrowed on Jonas. \"Okay, Mr Ostrow, it's your show.\"\n\n\"Thank you, Sir.\" He turned back to Nika and the others. \"My shipmates are not your enemy. Their weapons are set on stun! They mean none of you any harm!\"\n\n\"They followed us here!\" Someone else accused. \"To finish what they started on Earth!\"\n\n\"They didn't start anything!\" Jonas insisted. \"No so-called Aliens did! All of the attacks, the bombings, the outbreaks, they were orchestrated by Golov!\"\n\n\"You lie!\"\n\n\"No! It's true! He did it, to turn Earthpeople against the rest of the Galaxy!\"\n\n\"Why?\" Nika asked. Not a denial, a question.\n\nJonas saw grasped the concession. \"He was losing money over the years. Peace was killing the arms business, and more advanced extraterrestrial technology was being adopted on Earth. He refused to adopt the new ideals everyone else was embracing; he wanted to cling to the old ways. So he hired mercenaries and terrorists to commit acts of death and destruction, and used his media outlets to foment hate and fear.\"\n\n\"No!\" someone else called out. \"Earth was conquered-\"\n\n\"No,\" Jonas countered calmly. \"Earth was saved. Because we put aside our old ways of thinking, we've eliminated war, poverty, disease, crime. No one goes without food, clothing, shelter, education, medicine. We have more energy than we can ever use, and machines that can convert that energy into just about anything we need. And we did it not in spite of other races, but because of them.\" He indicated his shipmates. \"These are not monsters. They're not creatures. They're not threats. They're people.\"\n\n\"No!\"\n\n\"Yes. They may look and sound different to humans, but they're still people.\" He drew closer to Hrelle. \"This is my Captain. He's Caitian, like my friend Rrori - who saved all our lives, I'll remind you - and yes, they have tails and claws and fur, but they also like fried foods and sunbathing and jokes and dancing and families.\" He paused and breathed in. \"Captain Hrelle married a human woman, helped raise a human daughter... and he's been the closest thing to a father that many of us have ever known. Myself included.\"\n\nJonas shifted closer to Neraxis. \"This is my friend Neraxis, a Bolian. She's blue, bald, and has caustic blood, but she's also big sister to eight siblings, eats the food off my plate without asking, farts and blames me for it, and embarrasses with me with dirty jokes.\"\n\nHe moved to the others. \"And this is my friend Thykrill. She's Andorian, and she looks fierce, but she writes poetry in her spare time, and her father is the most amazing, respected philosopher on her planet. And that's Gleqom Orogg, he's Saurian, he plays the guitar and when he drinks carbonated juice too quickly his hiccups sound like a puppy on helium. And this is Eydiir, a Capellan, a good friend of mine, and a member of a warrior race, but she's chosen to become a medic, and fight to save lives. And that's Lt. Abed - human, like me.\n\nAnd there's so many more. We all work together. As members of Starfleet. As members of the Federation. You can join us-\"\n\n\"No!\" One of Nika's people, a young man Jonas remembered being called Marco, stepping forward, pointing his pistol at Jonas' head. \"We- We have to protect humanity-\"\n\n\"This isn't what humanity is, Marco,\" Jonas told him, drawing calmly, carefully closer. \"Fearing the unknown. Fearing the different. Embracing hate. Prepared to kill. That's not us. Not any more.\" He held out his open hand. \"And it doesn't have to be you, either. Any of you.\n\nPut down your guns.\"\n\nMarco wavered, looked to Nika, as did Jonas.\n\nNika holstered her gun.\n\nMarco did the same. And the others followed.\n\nAnd Jonas had to fight to keep from fainting with relief.\n\n\"What about Mr Golov?\" someone had asked.\n\nJonas looked to his Captain for input, but the Caitian raised a finger to his muzzle.\n\nThen his attention returned to Nika, who looked around her people and said, \"There is a problem with Mr Golov's capsule. We'll revive the others first, and discuss what to do with him. Jonas, will your crew provide us with information devices to help prove what you say?\"\n\nJonas almost said yes - then realised he had no authority to do that, and looked back at Hrelle, who smiled and nodded.\n\n*\n\nMore people were coming back to life as the sun began to set; Captain Hrelle had ordered rations and temporary shelters and beds beamed down, after beaming up those injured in the initial explosion in the battery room. Those awakening panicked at first on seeing the non-human Starfleet crew, but Jonas, Nika and others did their best to reassure them, and embraced the protocols that had been drummed into them before the launch.\n\nAs night appeared, lights were set up outside, as Jonas went inside the ship and worked to diagnose the problem with Golov's capsule, Nika returning every so often, ostensibly to keep an eye on him. \"Well?\"\n\nHe was on his back, under a panel, his Engineering tricorder returned to him. \"There are a lot of failsafes and safety features in his capsule compared to the others. I think some of them have, ironically enough, failed, and need to be bypassed.\"\n\nShe paused before responding. \"Is it true? What you said out there? That he was responsible? Not the Aliens?\"\n\nHe paused and drew himself out to look up at her; the girl looked as exhausted as he felt. \"Yes. I'm... I'm sorry, Nika.\"\n\n\"For what? Not telling me, in case it spoiled your chance for a fuck?\"\n\nHis face tightened. \"No. For you being deceived by him. It was hard enough trying to get you to trust me without giving you the full truth. And if you recall, you're the one who dragged me into your quarters. Without even buying me dinner first.\"\n\nHer expression softened. \"You are right. I am sorry, Jonas. I am worried.\"\n\n\"Worried? About what?\"\n\nShe nodded towards the capsule. \"That when he is awakened... my people will look to him, accept what he says he is, over what you and your Starfleet say he is. That he will be a lifeline to our past in the midst of an uncertain future. I believe you - you have proven yourself - and some of my crew believe you. But the others? Their last memories will be of Golov the Saviour of Humanity. They may embrace his leadership. If they do... I will not stay here.\"\n\n\"What will you do?\"\n\nShe smiled mischievously - and then straddled his crotch, leaning forward over his face. \"I will join your Starfleet, become an officer in record time, and then be your superior. I will keep you confined to our quarters, naked, and at the ready to service me when I please-\"\n\nHrelle filled up the doorway. \"We should sign you up, Colonel.\"\n\nNika immediately leapt off of Jonas and rose to her feet, Jonas struggling more as he stammered, \"C-Captain! We were just discussing matters-\"\n\n\"Yes, I often discuss matters like that with my wife. Just not usually in public, Mr Ostrow.\" He looked at the capsule. \"Golov is in there?\"\n\n\"Yes, Sir.\"\n\nHrelle nodded. \"Colonel, did I hear correctly, that you are less than pleased with the prospect of his being awakened?\"\n\nNika looked uneasy at even addressing the Caitian, and probably still embarrassed at being caught on top of Jonas, but she recovered remarkably. \"You are right, Captain.\"\n\n\"Well, I've asked the Federation Judiciary Council to see if we should take Golov into custody and try him for his past crimes. When I receive an answer, I would like you there - I would also like to invite you and your people for a tour of our ship.\"\n\nNika considered his words, and nodded again. \"Yes, I will be there. Thank you.\"\n\nNow Hrelle looked to Jonas. \"We're retrieving the Sureswift, and Cadets Soolamea and Yeager. Mr Ostrow, you and Mr Rrori are to report to Sickbay for a mandatory checkup. Then get some food and rest.\"\n\nBut Jonas shook his head. \"I'm fine, Sir, I want to keep helping out here.\"\n\nHrelle's eyes and voice was warm - but firm. \"It wasn't a suggestion, Jonas. Don't worry, tomorrow you'll be back down to continue your discussions with the Colonel.\"\n\nJonas almost argued back - until Nika drew up to him and kissed him on the cheek, almost as a defiant gesture to his commanding officer. \"Go, my hero. I will see you tomorrow.\"\n\nHe nodded, gathered his equipment and started for the beam-out point, though not without Hrelle quipping, \"We'll talk later, My Hero.\"\n\n*\n\nUSS Surefoot, Deck 4, Sickbay:\n\nThe relief from defusing the situation on the surface had passed, and now Jonas was exhausted, and impatient, and hungry, and wanted to be anywhere else, doing anything else, than be there getting examined by one of Dr Ling's nurses, before they moved onto the more serious cases in the adjoining sections.\n\nBut then Alpha Squad, minus Eydiir, who was still performing security and medical duties on the planet, and Commander T'Varik entered, Neraxis striding up to him and slapping him on the back. \"There's our little Scrappy! See, this is what happens when you go off with no chaperone!\"\n\nSasha was grinning. \"Good to see you back in one piece, Jonas, we were worried sick about you.\"\n\nKitirik's reptilian throat folds were flushed with a bright red. \"Indeed, Good Friend Jonas, if your experiences have unsettled you, we can talk about it-\"\n\n\"Yes,\" he responded, feeling his whole body tense. \"Thanks.\"\n\n\"Our boy, unsettled?\" Rrori spoke up, drawing near. \"As a matter of fact, our young hero here was at the receiving end of some intimate feminine company from the captain of the Rising Star. And remarkably, without my assistance, either.\"\n\nJonas shot the Caitian a furious look, as their friends made exclamation sounds, or merely looked confused without further details on hand, which Jonas most certainly was not in the mood to supply them with at that time.\n\nBut they'd learn. Just like everyone onboard this ship would learn everything about him, every little detail no matter how intimate, with nothing to keep to himself, for himself, not even for a few minutes. Because he was the favourite subject of conversation onboard the Surefoot, and no doubt he would be in front of Kami, having to explain and decipher and analyse it all once again.\n\nAnd suddenly, he hated her. He hated them all.\n\n\"If I might interrupt,\" T'Varik said without apology. \"Regulations require that the occupants of the Sureswift must provide a mission report within the next 24 hours, compiled without consultation with each other. You will also need to attend a session with Counselor Shall.\"\n\n\"Well, there's a surprise,\" Jonas muttered, staring at the carpet. \"Can't even get through a full day without seeing that bitch.\"\n\nThe Vulcan, and the others, turned to look at him curiously, the First Officer asking formally, \"Is there a problem, Mr Ostrow?\"\n\n\"Commander, request permission to return to the planet.\"\n\n\"Your purpose being?\"\n\n\"To ensure the Rising Star crew is being taken care of.\"\n\n\"I am certain we have personnel who can manage in your absence, Cadet.\"\n\n\"Don't worry, my young friend,\" Rrori assured him, drawing closer and chuckling. \"We'll make sure you get some quality time with Nika before we leave.\"\n\n\"Nika?\" Neraxis teased. \"So that's the name of the hussy who's stolen my little brother's virtue?\" She tried to put an arm around him.\n\nHe smacked it away, glaring. \"I'm not your little brother.\" He then looked at Rrori. \"I'm not your sad friend who needs help to get laid.\" He stopped at T'Varik, his voice raised to a shout. \"And I'm not a mental patient who needs to see the fucking Counselor!\"\n\nThe Vulcan visibly drew up her steely reserve. \"The Counseling session is mandatory for all personnel who have participated in an Away Mission where Red Alert conditions have been met, Mr Ostrow, and is not indicative of your current mental state. Which seems uncharacteristically volatile now.\"\n\nJonas bit back his instinctive reply, refused to acknowledge the shocked, hurt look on the faces of Neraxis and his other friends. He swallowed and finally replied, \"Please... excuse me, Commander. I have been awake for nearly a day, I'm tired, I'm hungry, I made a crash landing in an ancient starship, I've had guns pointed at me - and I have a report to compile that'll go into all of that in more detail. May I please make use of one of the Guest Quarters tonight, and be left alone... and undisturbed?\"\n\nT'Varik narrowed her eyes. \"I will permit it. But I cannot guarantee that either the Captain or the Counselor - or both - will not stop by for at least a short visit.\"\n\n\"Yes, Ma'am. May I go now?\"\n\nShe nodded.\n\n\"Jonas-\" Sasha began.\n\nHe departed, not able to look at any of them.\n\nUnable to tell them now just how close he was to resigning and leaving all of this, all of them, behind.\n\n*\n\nIn fact, it had been nearly six hours of Jonas having a room, a sonic shower, a clothes recycler and food replicator and his own thoughts to himself before the door chimed. He was showered, fed, in fresh clothes, and halfway through completing his report when he rose from the desk and called out, \"Enter.\"\n\nThe door slid open, and Hrelle entered, smiling, hands folded behind him, as if supporting his swishing new tail. \"Hello again, Jonas. Am I disturbing you? I'll go if you like-\"\n\n\"N-No! I mean, no, Sir. Please, come in.\" He swallowed, self-consciously putting away the food tray and kicking aside his boots and socks. \"Sorry about the mess, Sir.\"\n\n\"I'm not here for an inspection. Just a short, friendly, informal talk.\" He indicated the bed. \"How are you?\"\n\nJonas found himself fidgeting as he sat on the edge of the bed. \"I'm, ah, feeling better than when I came onboard, Sir.\" He wrung his hands, stopping as his knuckles cracked. \"Guess you heard about what happened in Sickbay.\"\n\n\"I'm here because a member of my crew was in a dangerous situation, one he should never have been put in. But yes, I heard something about you referring to my wife in less than complimentary terms.\"\n\nJonas was certain his face developed new shades of redness. \"I'm sorry, Sir, I swear-\"\n\n\"I know you do,\" he joked. \"So, she's a bitch, huh?\"\n\nHe rose to his feet again, almost panicking. \"Please, Sir! I didn't mean it-\"\n\n\"Sit down again.\" Hrelle grabbed a chair, swung it around and sat on it backwards, resting his crossed arms on its back as he sat close, facing him. \"Don't worry, I won't be challenging you to a duel to defend Kami's honour. For one thing, she's far tougher than either of us and could kick both our asses, furry and otherwise, without breaking a sweat.\" He looked concerned. \"What do you think that brought that out of you?\"\n\nHe stared at the man's boots. \"Sir... I'm so incredibly grateful to the Counselor for all the help she's given me, pulling me back from the edge and helping me to cope. I can never repay her for that.\"\n\nHrelle tilted his head. \"But?\"\n\nJonas looked up again wearily. \"But... I'm tired of talking about myself. I'm tired of opening up. Twice-weekly and weekly sessions, Survivor sessions, group sessions. I'm tired of talking about how I feel, how others make me feel, how others feel about me. You took the monitor out of my arm, but I still feel like I'm under constant scrutiny, even by myself. I feel like... like-\"",
        "\"Like you have nothing left to say?\" Hrelle suggested gently. \"Like you spend more time talking about your life than actually living it? Like you're not allowed to keep any secrets to yourself, even ones that don't mean anything?\"\n\nJonas looked up at him with heartfelt recognition. \"Yes. Yes, Sir!\"\n\nHrelle reached up and patted the young man on the shoulder. \"I've been there. And believe me, in my day I've called Kami worse than what you did.\" He leaned in closer. \"Especially when she puts on that smug expression when she sees you're hiding something, and won't let it go, like a dog with a bone.\" As Jonas smiled at that, he promised, \"I'll have a word with her, to give you a breather. Who knows, she might even listen to me.\"\n\nJonas swallowed with relief. \"Thank you, Sir. And thank you for earlier.\"\n\n\"Oh? What did I do?\"\n\n\"On the planet, when I asked you to trust me, Sir. You had no reason to, but you did.\"\n\nHrelle smiled. \"Well, thank you for saying I'm like a father figure to you. Did you mean it?\"\n\nJonas smiled back. \"Yes, Sir. I, ah, never really knew my own; he left us when I was six, I can barely remember him. I, ah, hope you didn't mind me saying it.\"\n\n\"Are you kidding? Seven Hells, no!\" Hrelle chuckled. \"Before Sasha's mother was killed, we were gonna have more children, but... well, the Universe Had Other Plans. And with Sasha all grown up and not needing her old man anymore, the notion of still being like a father to someone is quite pleasing.\" He paused as he became aware of his tail wagging happily behind him. \"As you can tell; I have to get used to controlling the damn thing again, I feel like a cub.\" \n\nThe door chimed before they could discuss it further, and the door slid open unbidden to reveal Kami, striding in. \"Jonas, we need to-\" She stopped as she saw Hrelle. \"What are *you* doing here?\"\n\n\"And hello to you, Sweetheart.\"\n\nShe indicated the door. \"Get out, Jonas and I need to talk-\"\n\n\"It can wait until tomorrow, I'm sure.\"\n\n\"Yes,\" Jonas agreed, suddenly growing tense again. \"Please, Counselor, I just need some sleep-\"\n\n\"Don't 'please, Counselor' me, young man.\" She stepped forward. \"What's this I hear about you losing your temper in Sickbay?\"\n\n\"Counselor-\"\n\n\"Is that how you treat your friends?\"\n\n\"Kami,\" Hrelle started.\n\nJonas' face reddened. \"I don't want to talk about this now!\"\n\n\"I'll decide that.\"\n\n\"NO!\" Jonas snapped, rising to his feet, hands balled into fists and temper suddenly flaring as he stared her down. \"I'LL decide that, not you! You're not my mother! I'm fed up with this! With all of you! I'm ready to resign and get off this fucking ship!\"\n\nHrelle rose held up a conciliatory hand. \"It's okay, Jonas, we're leaving.\"\n\n\"Jonas-\" Kami started, her anger now eclipsed with shock at the boy's outburst. \"I'm sorry- wait- please-\"\n\nHrelle growled at her in response, taking her by the elbow and guiding her out the door.\n\nJonas collapsed onto the bed, feeling himself begin to hyperventilate, as he focused on controlling himself - ironically using the techniques taught him by the same person who just put him in this state.\n\n*\n\nKami pulled out of his touch as soon as they were in the corridor, not even looking to see if Hrelle was following her, saying nothing until they returned to their quarters, and she faced him, fury in her expression. \"What do you think you're doing, interfering in my work-\"\n\n\"It wasn't the time. You were pushing him away.\"\n\nHer hackles were rising, and she was baring her teeth now. \"Who do you think you are, telling me that?\"\n\nHe remained calm, knowing it was the only way to get through to her. \"I'm your husband, and your former patient. And your Commanding Officer.\"\n\n\"Are you trying to pull rank on me now, you prick?\"\n\nHe nodded. \"Yes, if I have to. But I shouldn't. You're experienced enough to know the dangers of forcing someone to accept help before they're ready for it. You should also be able to recognise when you're too emotionally involved.\"\n\n\"I'm not!\"\n\n\"No? Where were you when Jonas was the victim of a psychic assault, and he ended up trying to kill himself?\"\n\nShe reacted as if he'd struck her, her claws extending and her teeth bared. \"You bastard.\"\n\n\"Don't be an ass: you know I don't think that. But a part of you does.\" He pointed to their door. \"That wasn't a Counselor in there, objective and in control of the situation. That was a mother, a worried mother, wanting to scold her cub.\"\n\nShe looked ready to argue the point - but that evaporated quickly. She sat on the edge of their bed, pressing her thumbs into her temples, her honey-brown mane obscuring her face. \"You're... right.\" She made sharp, staccato bursts of breath as she fought to maintain control. \"And I know it wasn't really my fault. Doesn't stop me from blaming myself.\"\n\n\"So I noticed.\" He knelt before her, reaching down and removing her boots, casting them aside before massaging her feet.\n\nShe wiped her face. \"I've been speaking with his mother.\"\n\n\"You have? What's she like?\"\n\nShe smirked. \"Formidable. And she didn't want Jonas to know she contacted me, so you'd better not say anything about it to him-\"\n\n\"Great Mother Forfend. And what did you two talk about?\"\n\n\"Everything: what happened to him, how he was feeling now, what he was doing, how he was coping. Then there were the unasked questions: where was I when he was attempting suicide? Why didn't I stop it before it got that bad for him?\" She was wiping her face with her fingers. \"There she was, all but accusing me of neglecting her cub, allowing him to get into such a state...\n\nThe thing was, as much as I could have argued back, explaining to her that it wasn't as simple as all that... I couldn't. I would have felt the same as she did if it had been my cub under someone else's care. Only I wouldn't have been as polite as she was, believe me.\"\n\n\"I believe you.\" He worked the muscles in her toes and soles. \"You *did* maintain Counselor-Patient Confidentiality, didn't you?\"\n\n\"Of course,\" she assured him, before adding, \"Mostly.\"\n\n\"Kami!\"\n\n\"Nothing *really* confidential, Esek, only things I saw in public: what he did with his friends, who he was trying to date-\" She looked at him again. \"Rrori said Jonas had sex with that Russian girl. Is it true?\"\n\nHe stopped and looked back up at his wife. \"Nothing was explicitly said. But... I could smell their scents on each other, and I saw them rather close together on the planet surface. She was on top of him. Dressed, of course.\"\n\nShe beamed now. \"Tell me more about her! She sounds intelligent, strong, capable. What does she smell like?\"\n\nHe worked the muscles in the balls of her feet. \"Is this you not being his mother?\"\n\n\"Come on, what did you two talk about- Ohhh!\" She gasped with pleasure as his fingers worked the tension out of her feet.\n\n\"Give your mouth a rest. And give yourself some professional distance again, or you'll smother him. He's had some very intensive Counseling and supervision, with you and the rest of us gaining an intimate level of knowledge about him and his feelings. He's tired, he's vulnerable, and he needs breathing space; take it from someone who knows.\"\n\n\"Oh? Is that how you feel about *me*?\"\n\nHe stopped massaging the foot in his hands, rose to his feet, looked at her for a moment, and then reached down and flipped her over onto her belly, before climbing onto the bed to join her. \"No, this is how I feel about you...\"\n\n*\n\nJonas snapped awake at the sound of the unfamiliar beeping, and for a moment couldn't remember where he was; it was pitch black, and this bed was too large to be his own. Then it came back to him, saw the flashing red light from the guest quarters' desk monitor, and nearly tangled himself in his sheets to rise and plop down into the desk chair. \"Answer.\"\n\nA view of Sigma Lambda II from orbit, which he guessed was a view from the bridge screens, filled the monitor screen, as a familiar, formal voice responded, \"Mr Ostrow, there's a call from Colonel Bunina.\"\n\nHe blinked; it took a heartbeat or two for him to recognise the woman. \"Sasha? Listen, I'm sorry about last night-\"\n\n\"Do you want me to connect you to Colonel Bunina, Mr Ostrow?\"\n\nHe swallowed, hearing the hostility now. For a second, he didn't blame her, after the way he acted the night before. But then that guilt evaporated like water in a plasma cooker. Didn't they grasp why he would have felt that way? And their own part in making him feel that way?\n\nSharper now, his anger at their lack of understanding returning, he replied, \"Yes. Put her through.\"\n\n\"Connecting you to Colonel Bunina now, Mr Ostrow.\"\n\nThe image of the planet was instantly replaced with the smiling face of Nika, who suddenly looked startled. \"Boshe Moi, that's scary.\"\n\nJonas frowned. \"Nika? What's wrong?\"\n\n\"You! Sitting there in the dark with a face like a ghoul!\"\n\n\"Oh. Computer: Lights.\" He squinted for a moment as the room lit up. \"Sorry, just woke up.\"\n\nShe smiled. \"So I see.\"\n\nHe glanced down, realising he was sitting there naked. He was certain the camera on the monitor couldn't let her see everything, but- \"Sorry, I'll put something on-\"\n\n\"No, don't bother.\" She grinned now. \"It's not anything I haven't seen already, now is it?\"\n\nHe grinned back. \"Guess not. Wait, I need to check the duty roster.\" He called up a smaller, secondary screen on the monitor and checked his work schedule. There, as Captain Hrelle promised, he was down for Engineering Assistance planetside, in an hour! \"Yes! I'll be there in 60 minutes. Less if I skip breakfast.\" After a moment he added, \"I'll skip breakfast. See you soon.\"\n\nAs the screen returned to the duty roster and his outstanding work, he remembered his report, which he managed to complete and have ready for submission last night.\n\nHe reopened it, re-read it. It was... self-damning. Practically a career suicide note. He had carefully examined his actions, compared them with Starfleet regulations concerning Away Team missions, hostile encounters, communications protocols... even sexual relations with other personnel.\n\nAnd it was all technically true. It would surely get him kicked out of Starfleet - if he sent it, as is.\n\nDid he want to?\n\n*\n\nHe had every intention of heading straight to the transporter room. But along the way, his stomach had other ideas, and he stopped off at the mess hall for a quick couple of slices of toast, if nothing else.\n\n\"Morning.\"\n\nHe turned to see Kami standing in the line behind him. \"Counselor!\" He glanced around at the people around him, feeling embarrassed at his outburst the night before. \"I, ah, was going to see you-\"\n\nShe nodded to the replicator in front of him. \"You're up. Order me a melon dish and orange juice, and I'll get us a table and seats.\"\n\n\"Oh. Of course.\" He had hoped to grab the toast and be on his way, but he felt like he'd been rude enough to her, despite the provocation.\n\nHe found her at a small table away from everyone else in the corner of the mess hall, resting her elbow on the table and her chin on her hand as he approached, smiling at the tray he set down before her. \"What's this on it?\"\n\n\"Oh, uh, that's lime-chili syrup. Adds a tang to it. Thought you might like it.\"\n\nShe tried some, making pleasing sounds. \"I see what you mean. Nice choice.\"\n\nHe blushed a little. \"It's my, ah, mother's favourite breakfast.\"\n\n\"You mean your other mother?\" She smiled self-deprecatingly. \"I'm sorry about last night, Jonas. Even Counselors can let their emotions get the better of them. Hope you'll forgive me.\"\n\nHe relaxed. \"Only if you do the same for me. It was a long day.\"\n\n\"It's been a long couple of months for you.\" She leaned in over the table and whispered, \"You're scheduled to have a post-mission Counseling session.\"\n\nHe tensed again. \"Yes. Yes, of course.\"\n\nShe looked up at him again and smiled. \"We've just had it. And effective immediately I've signed you off of any additional sessions, beyond the usual ones every cadet has.\"\n\n\"You have? Why?\"\n\nShe shrugged. \"I'm probably just bored with you.\" Then she winked. \"But... if there is anything you want to talk about... well, I'm here.\" She left it at that and tucked into her breakfast.\n\nSo did he, quickly munching down his toast. Despite all of his earlier protests about not wanting to talk about himself anymore, now... now he wanted to. He wanted to tell her about his dissatisfaction, about his thoughts of leaving Starfleet and moving on.\n\nInstead he ate in silence. As did she.\n\nWhen he was done, he rose. \"Thank you, Counselor. I'd- I'd better get going.\"\n\n\"Wait.\" She offered him her orange juice. \"Rinse your mouth out.\"\n\nHe frowned, looking at it. \"Why?\"\n\n\"There's crumbs in your teeth. No girl wants to kiss a man and taste his breakfast.\"\n\n\"Oh. Thanks.\" He quickly picked it up and swished a mouthful around in his mouth, swallowing before asking her, \"You really think she'll want to kiss me?\"\n\n*\n\nAs it turned out, she did. And more.\n\nIt was still before dawn local time when he beamed into their encampment, but the crew had lights set up around their ship, and old-fashioned tents so they could spend their first evening on their new world outdoors.\n\nNika had been waiting for him, and the way she almost immediately kissed him on his arrival told him how she felt, as did the way she took his hand and guided him to her own tent, stopping only to undress outside.\n\nLater, they lay in the dark, listening to their own breathing and the soft rustle of the tent fabric to the early morning breeze. Once he'd caught his breath again, Jonas confessed quietly, \"Nika, there's something I should have told you before.\"\n\n\"Oh? What?\"\n\n\"I'm safe. I mean, I have birth control implants. And I'm, uh, clean.\"\n\n\"Such a scoundrel, waiting until after he ravishes a poor defenceless woman to say that.\" Then she half-leaned over him, her breast resting on his chest. \"Jonas... I will condemn myself for all time if I do not ask this now: will you stay?\"\n\nHe blinked. \"What?\"\n\n\"I know, we only met yesterday, it is insane. But life has been insane. You are brilliant, better with our machinery than any of us, and what's more, you can improvise, work with what you have. You have knowledge and experience of the rest of the Galaxy, that would allow you to mediate between them and us. You are young, fit, handsome, unmarried, you kept your word about staying with us until we landed, so my people trust you. You could have a life here. A good one. With us. With me.\"\n\nHe stared up at her, bowled over by the offer. Give up Starfleet, the life he had been planning for, for as long as he could remember? For someone he only met yesterday? She was right, it was insane! He should have been dismissing it immediately.\n\nHe should have been.\n\nNika's fingers moved up to stroke his temples. \"Imagine this: being one of the founders of an actual world! Helping to shape it, guide it! Here, you will not be a child. You will be respected. You will be loved. You will be a man. My man - if you like.\"\n\n\"Nika-\"\n\n\"Shhh. Don't answer now. Your ship does not leave for several days yet, I am told.\" She bent down and kissed him softly. \"I am not so naive that I think I am in love with you - yet. Nor you with me. But that would change, I know. It would be hard work, at first. But it will be worthwhile. You think about it.\"\n\nThen she reached down, touched him, awakened him. He felt her smile. \"In the meantime, I will continue to tempt you with what I have to offer you here. I hope you don't mind.\"\n\nHe didn't.\n\nLater, he received a reminder that his report was due. He used a PADD to access his account onboard the ship and submit his report, not changing a thing.\n\n*\n\n\"USS Surefoot, Captain's Log, Stardate 35499.67: We remain in orbit around Sigma Lambda II, with medical and engineering teams assisting the crew of the Rising Star in reviving the rest of their people - with the exception of Maxim Golov, as his disposition is currently being assessed by an old friend in the Federation Judiciary Council. Given Golov's terrible crimes, I expect I know what the answer will be...\"\n\n\"No.\"\n\nHrelle did not expect that.\n\nHe had been sitting with T'Varik, Kami and Nika in the briefing room before looking back at the main screen. \"'No', Craig? A mass murderer who fled Earth with a shipful of children won't be charged with any crimes? Are you trying to be funny?\"\n\nFederation Legal Attach\u00e9 Craig Whitham was an affable-looking man, and with his Van Dyke beard and portly figure resembled a Musketeer gone to seed. \"Tried it once, Esek. The results weren't pretty.\"\n\n\"Why in the Seven Hells wouldn't we try him?\"\n\n\"Well, for one thing, these alleged acts took place fifty years before the Federation even existed, before the bodies of law that govern us today were agreed upon.\"\n\n\"What? Murder is murder, the definition can't be that different between then and now!\"\n\n\"It isn't. But the legal machinery definitely is. Taking Golov in for trial now would be attempting to apply a system of contemporary law retroactively, a terrifying and unworkable precedent. It'd be like putting Brutus in a court in Rome today and trying him for assassinating Caesar.\"\n\n\"Oh come on, Craig! Are you telling me that all someone has to do to get away with murder is to outlast all their contemporary legal systems and accusers?\"\n\n\"Essentially, yes. Earth at the time was a much different place than it is today. Therefore, the argument can be made that Golov's alleged crimes were committed outside the jurisdiction of our present government.\n\nAnd even if we did go ahead, try to imagine how you could possibly have a fair and impartial trial when you have hundreds of years of utterly one-sided reporting of history, little to no primary evidence of precisely who did what, what evidence you do have is either hearsay or else has no chain of custody, and zero possibility of an uncontaminated jury? That's what they used to call a kangaroo court.\"\n\n\"Kangaroo?\"\n\n\"A Terran marsupial, famous on Earth for its hopping ability.\"\n\n\"And they had courts for them? Why, what did they do?\"\n\n\"No, the phrase refers to when itinerant judges used to hop from town to town, guided less by concern for justice than by the desire to get paid for completing as many trials as they could. Put the plate of chicken drumsticks down from time to time and pick up a book, Esek, you'll learn something and get rid of that belly quicker.\"\n\nHrelle grunted, pulling in his stomach. \"What if one of his people pressed charges?\"\n\n\"They're not Federation citizens, and this area where they've landed may be in Federation territory, but it's not yet recognised as a Federation community. They'll have to handle it themselves, for now.\"\n\nHrelle nodded. \"Thanks, Craig.\" As the screen went dark, he leaned back, wincing for the fiftieth time now that he had a tail again to get in the way. \"Well, that's it, Colonel. I wish I could have given you a better answer.\"\n\nThe young girl stared at the polished black tabletop. \"Captain... what happens now? I was hoping that your Federation might have taken him off of our hands once he was revived.\"\n\nHrelle looked to T'Varik, prompting the Vulcan to reply, \"Unless and until you petition for Federation membership, you are an autonomous body, governed by whatever rules you agree upon amongst yourselves. We have also filed an application on your behalf, to ensure the planet will remain under your control.\"\n\nShe frowned in disbelief. \"You will allow us to have a whole planet? Even though it is in your territory? We will not be forced to join your Federation?\"\n\n\"No, Colonel. Once you are firmly established on Sigma Lambda II, you may even petition the Federation to withdraw from the system and cut off any trade or communication.\"\n\n\"We hope you don't, however,\" Hrelle added.\n\n\"I hope so, too, Captain,\" the girl admitted. \"We will soon be finished reviving everyone. We will tell them what you have told us about Golov. We will show them the evidence you have provided. Then, when we revive him, we can decide what to do with him. I would have him face a trial. But I know others choose to ignore the evidence presented to them, and would just appoint him our leader.\" She looked grey. \"I fear... I fear that those voices will be the dominant ones in our group. Captain... if this comes to pass... will I be allowed passage on your ship to somewhere else? Anywhere, I won't care.\"",
        "\"Of course, Colonel. But... are you sure about this? You would leave your people behind?\"\n\nThe girl nodded, her expression haunted. \"I do not do so lightly. But I will not serve that man, even if others might.\"\n\n\"Your people may surprise you with their perspicacity,\" T'Varik pointed out.\n\n\"They may.\" But she sounded doubtful.\n\n*\n\nUSS Surefoot, Deck 1, Mess Hall:\n\nSasha picked at her lunch. \"Don't know what's up with Scrappy these days. You should have heard him on the intercom, all nasty. Definitely has a stick up his ass - not a literal one, of course,\" she added, before Kitirik, sitting beside her munching on a bowl of honeyed crickets, could enquire further. \"But snapping at us after we were all concerned for him-\"\n\nSitting opposite, Neraxis was determined not to let her loss of appetite keep her from finishing her Bolian casserole. \"It'll be the sex. He's had too much of it. Zinc depletion, makes men irritable.\"\n\nSasha looked up at her friend. \"No, that can't be it. Let's be honest, we've all heard him deplete his zinc regularly since we've started living together.\"\n\nBeside Neraxis, Rrori was catching up on correspondence on his PADD while indulging in a shuris meat pie. \"Well, I for one am shocked by his ungrateful attitude. There I was, going out of my way to set him up with a girl-\"\n\n\"Did he request help, Friend Rrori?\" Kit suddenly asked.\n\nThe Caitian looked up. \"Request? Well, no, not in so many words. But he certainly needed it. He was obviously attracted to Nancy. But the poor boy just can't handle women.\"\n\n\"But according to you, he managed to achieve coitus, and without your assistance.\"\n\n\"What's she like, anyway?\" Neraxis asked Rrori. \"My Baby Brother's Bumper?\"\n\n\"Rather scrawny. But quite formidable, forthright. Tough little thing, really.\"\n\nSasha smirked. \"I'm surprised he survived intact.\"\n\nKit looked at her. \"Why do you do that?\"\n\n\"Do what?\"\n\n\"Ridicule Good Friend Jonas? Instead of congratulating him for his meeting a woman?\"\n\n\"Ridicule?\" She looked to the others, who appeared equally bemused. \"We're not doing that.\"\n\n\"Your words suggest otherwise. I suppose it is part of the social structure we have.\"\n\n\"The what? We have no social structure.\"\n\nThe Qarari Science Specialist looked to each of them in turn. \"Your ignorance is misplaced; of course we have a structure. I have studied various social structures among humanoid adolescents. Among Klingons, status is gauged by Houses and combat skills; among Cardassians, it is cunning and political connections; and among Orions, it is pure wealth. And although we are a multi-species affiliation, our status is measured mainly through sexual experience and confidence.\n\nWithin our Squad, Friend Sasha remains at the paramount with her relationship with Friend Giles. Friend Rrori is a secondary rival, with his sexual history and libertine braggadocio, and though Friend Eydiir is not usually overtly sexual, her aggression and dry wit compensates to place her in a tertiary position, alongside Friend Neraxis, with her raucous attitude, although her own sexual history has been quite limited while onboard, except of course for frequently depleting her own zinc levels.\"\n\n\"Holy Hraxor,\" the Bolian declared, her blue skin darkening with embarrassment as she looked at Sasha. \"Do you believe this guy?\"\n\nBut Sasha ignored her. \"Kit, we're all friends, on equal terms.\"\n\n\"Please forgive me for contradicting you, Friend Sasha, but this is not the case. I know that for me, I am low in the group's status because I lack experience with worlds beyond my own, and of course because I am asexual.\"\n\nSasha frowned. \"Look, Kit, I'm sorry that you can't appreciate what it's like to have love someone else-\"\n\n\"And once again, you demonstrate your own ignorance. Love and sex are not intrinsically connected; the Qarari love, love as strongly and as passionately as any other race. And I *can* have sex. But it would simply be for reproduction, and is a process that brings no more pleasure to me than my liver filtering impurities from my blood. \n\nBut you assume that my lacking sexual desire is something to be pitied - while all of you sexually-driven beings, who devote so much of your art and music and writing, who wallow in so guilt and shame, frustration and anxiety, for what amounts to a few moments of physical pleasure, believe you are superior.\n\nBut this is not about me. Because even an asexual being as myself seems to be considered higher in regard than Good Friend Jonas. He is the same age as the rest of us: a legal adult, intelligent and mature. But even before he had issues with anxiety and depression, he was often not treated as being on the same level as everyone else. Because he was raised on what you consider the frontier of your territory, as opposed to the more cosmopolitan worlds, and because he is self-conscious and uncomfortable about nudity and sexual matters.\"\n\nHe looked to the rest of them. \"You refer to him with nicknames like Scrappy, Kid and Baby Brother, nicknames with overtones of infantilism, inferiority. You provide unsolicited advice and assistance to him, without actually confirming if it is either required or desired. You will often speak about him as if he was mentally incapacitated.\"\n\n\"Kit,\" Sasha whispered, appalled by his response. \"He tried to kill himself.\"\n\n\"As did I, Friend Sasha. As did Friend Eydiir. As did your father, the Most Respected Captain. Do you speak about us often in this manner when we are not around?\"\n\nSasha paled. \"No. But... But you're all different-\"\n\nHe rose, taking his unfinished bowl with him, standing proudly. \"No. We have all faced our inner demons, and survived. We all have a history of victory worthy of any Klingon Dahar Master. We are all strong. Stronger than you can imagine. And we are all deserving of equal respect. Please excuse me. I do not wish to be in your company at this time, and I do not like that feeling.\"\n\nHe left them at that.\n\n*\n\nSigma Lambda II:\n\nJonas grimaced with mild pain as he crawled back out of the tight confines of the maintenance hatch and into the corridor, distracted by the amount of sweat he was accumulating inside his uniform, despite its absorbent and cooling properties. He nodded to the Engineering and Medical personnel, a mix of Surefoot and Rising Star crew. \"Okay, that should be it.\"\n\nHe got out of their way and struggled back to his feet as they began the reanimation sequence on the latest cryostatic passenger, the twelfth they had worked on since sending Nika up to the Surefoot to talk with Captain Hrelle and to tour the ship. Most of the capsules worked normally, and the people were awake, but there were a few which proved troublesome; after centuries, there were malfunctions, burnouts, necessitating careful analysis and repair so as not to risk systems failure and death - and the work, and the stress he had felt, was beginning to take its toll. There was only Golov's capsule to be repaired and opened, and he was told that Chief Grev was working on that now.\n\n\"Jonas?\"\n\nHe turned, nodding at Eydiir, one of the Medical team members assisting. \"Hi.\"\n\nShe nodded at him. \"Turn around.\"\n\n\"Excuse me?\"\n\n\"The pain in your lower back is obvious. Turn around.\"\n\nHe started to protest, but felt too weary. He obeyed, facing the wall as he felt her hands on his lower back, kneading his muscles. He groaned. \"Mmm, that feels good.\"\n\nEydiir grunted with amusement. \"Hopefully we won't end up with the same reaction as we did the last time I put my hands on you.\"\n\nGiles thought he would blush at that memory - that first week, when the Capellan had given him a post-exercise massage in their quarters while he was standing there in just his shorts, and he ended up with a very visible reaction that embarrassed him to the point of trying to resign - but instead he just shrugged. \"I'll do my best not to frighten you again.\"\n\nShe smiled. \"I appreciate that.\"\n\nHe straightened up again, rolling his shoulders. \"That's good, thanks.\"\n\nShe nodded. \"Now go outside and get some cool air. We'll be a while here, and then maybe we'll get some lunch.\"\n\n\"Okay.\"\n\nHe started to depart, but Eydiir reached out and took his hand, squeezing it until he faced her again, as she drew closer and lowered her voice. \"In the coming hours and days, when people start to learn about your accomplishments here, they will tell you how surprised they were at how well you did.\n\nYou will not hear that from me, however.\n\nWhen I look back at that first week, my defining moment of you was not your embarrassing incident, but the time beforehand, the silent resolve you put into keeping up with me in the callisthenics despite the difficulty you had, when seemingly-tougher individuals like Giles and Neraxis stumbled and groused and moaned like infants with Gripe Belly.\n\nYou have continued to impress me since: when you joined us in the fight against the Nausicaans; when you faced your inner demons in our Sessions and conquered them; and here, when you beamed over unarmed onto a hostile ship, and risked your life to keep your word and see to their safety, when others defied and belittled you.\n\nSo I will never say that what you do surprises me, because I've already taken the measure of your fortitude and strength of character. But I *will* say that I am proud to serve with you, and look forward to doing so throughout our careers in Starfleet... if the Fates allow.\"\n\nJonas couldn't have been more stunned if a phaser beam struck him. He squeezed her hand back and replied, simply, \"Thank you, Eydiir. Thank you.\"\n\nShe released him. \"Now go, before I regret myself and hug you, or something else stupid.\"\n\n*\n\nEydiir was correct, it was cooler out here. And quiet, except for the soft rustle of wildgrass in the surrounding fields. In the distance, some of Nika's people - he'd have to learn their names if he was going to stay here - were setting up what looked like a communications tower or weather sensor array.\n\nHe found a large rock, took off his shirt and sat down, mopping his back with the material.\n\n\"Mr Ostrow?\"\n\nHe bolted to his feet. \"Commander! I didn't know you were on the planet!\" Self-consciously he pressed his shirt against his chest. \"Sorry, Ma'am, I was just-\"\n\nT'Varik stepped towards him. \"Such a reaction is unnecessary, Cadet. I have seen men's bare chests before. They neither inflame nor intimidate me.\"\n\nHe slipped back into it. \"I know, but I'm technically out of uniform.\"\n\n\"That is true. However, given the work you've been doing, I think we can overlook it this time. I apologise for not taking the opportunity to speak with you sooner, Jonas. Or at least making myself available to speak with you.\"\n\n\"That's okay, Commander. I, ah, I don't think I was much in the mood to talk last night anyway.\"\n\n\"No,\" she agreed dryly. \"Unless one counts profanity.\"\n\n\"Uh, yes. Sorry about that.\"\n\n\"My reaction was merely concern, as it was uncharacteristic of you.\" She strode up to him, pausing to look out at the fields and the distant mountain range. \"We have been making more detailed planetary surveys since our arrival, as an exercise for our Science cadets, and will provide the results to the Rising Star crew. It is generally favourable for human habitation, however the orbit ensures the colonists must be prepared for extremes in seasonal changes.\"\n\nHe smiled. \"They're tough. They'll manage.\"\n\n\"Especially if you stay and assist them?\"\n\nHe looked up at her. \"Who told you?\"\n\n\"No one has been explicit - until now. But I have been working with cadets for 25.682 years. I recognise the signs when one of them is leaving Starfleet. Or at least is considering leaving.\"\n\n\"And you're here to talk me out of it?\"\n\n\"No.\"\n\nHe looked up at her again. \"No?\"\n\n\"I am your Academy Liaison. My job is to advise you on all academic matters. If you believe Starfleet is no longer the path you want to take, I must respect that.\"\n\nHer response startled him, though he knew it shouldn't; it was quite logical, therefore appropriate. \"Really?\"\n\n\"Yes. Your friends and crewmates will miss you, of course. As will I.\"\n\n\"You will?\"\n\n\"Of course. Why wouldn't I?\"\n\n\"Well... it's an emotion, isn't it?\"\n\nShe almost sighed. \"Clearly humans continue to misunderstand Vulcans. My people are not bereft of emotions. We experience them. We simply do not exhibit them, or allow them to take precedence in our behaviour over logic.\n\nFor instance, others will strive to appeal to your emotional connections to stay, whereas I would question the logic of squandering your considerable investment of time and effort towards your Starfleet career because of a chance encounter with a young woman who has offered you sex.\"\n\nHe paled. \"How did you know?\"\n\n\"Cadet Rrori has been most informative about it.\"\n\n\"He's a son of a bitch who should mind his own business.\"\n\n\"I will not argue that.\"\n\n\"But I'm not doing this because of the sex!\" Then he swallowed and clarified, \"I mean, it's not the only reason.\"\n\nShe offered a raised eyebrow. \"Your honesty is appreciated. Perhaps you could explain your other reasons - assuming there are any?\"\n\n\"I have skills, talents, that they can use here-\"\n\n\"The USS Santaquin is en route, providing a team of technical and scientific experts as well as advanced equipment to assist the Rising Star colonists. As talented as you are, it is logical that your friends are given the best possible assistance in order to maximise their survival. Are there any other reasons?\"\n\n\"Yes! Think of the challenge! They're starting a new world here! How often does anyone get a chance at becoming part of something like that?\"\n\n\"According to Federation records, there are currently 458 separate colonisation projects in various stages of development throughout the Alpha and Beta Quadrants. Proportionately speaking, there are fewer placements within Starfleet Academy. Are there any other reasons?\"\n\nJonas regarded her, ignoring his heated face. \"Yes. Everyone on the Surefoot sees me in a certain way. Maybe I'm the shy virgin. Maybe I'm the little brother. Maybe I'm the lunatic who'd nearly gotten a friend killed while trying to kill himself. Here, I can start fresh. Be seen as a man. Worthy of respect.\"\n\n\"I see.\" She took a moment to observe a flock of birds overhead. \"And how would moving here solve that problem?\"\n\n\"Sorry?\"\n\n\"Historically, negative perceptions of either individuals or groups are never corrected by not challenging them; indeed, they are typically reinforced when there is no contest. Earth would have become a much different place if non-Terrans had responded to the fear and hatred they faced from Golov's efforts by departing, instead of remaining and overcoming the ignorance.\"\n\nShe faced him again. \"As an engineer, you can appreciate that a problem is never repaired by just leaving it and moving on. And Chief Grev has complimented your work ethic, saying that when a malfunctioning item is placed before you, you do not stop until you have repaired it - of course, being a Tellarite his compliment was in the form of a complaint. But I see no reason why this problem should not be met with the same tenacity you apply to other problems you face. If you have a problem with how others are treating you, then tell them.\n\nI have no doubt that you can make a significant contribution to the efforts to establish a colony here; any group would be fortunate enough to have you. But you must ultimately consider what you want to do with your life. Because it is yours, and no one else's. Not mine. Not Captain Hrelle's. Not Colonel Bunina's. Not Alpha Squad's. Not your mother's. Yours.\"\n\nJonas looked away, to see birds fighting with each other.\n\n\"The Mission Debriefing is at 2000 Hours; there is an arrival party here afterwards, and the crew of the Surefoot have been invited. Do not be late... and do not arrive bare-chested.\"\n\n\"Yes, Commander.\" He started to look away, but then looked back at her. \"Commander? You said you weren't here to talk me out of resigning... but you've just spent the last ten minutes doing that very thing.\"\n\nThe Vulcan stared hard at him. \"I most certainly did *not* do that, Cadet.\" She paused and added, \"It was 5.23 minutes. Please endeavour for precision in the future.\"\n\nShe departed, as her reminder of the debriefing claimed his attention. Once she read his report, any question of his quitting will be out of his hands.\n\n*\n\nIt was sometime in the afternoon when Chief Grev had finally bypassed the malfunctioning safety features on Golov's capsule, and they had started the reanimation sequence. Jonas, Hrelle, and a few of those people who clearly supported Golov's revival were in the chamber, Nika standing beside him, squeezing his hand so tightly that he almost winced.\n\nHe wasn't afraid. As he stood there, imagining the worst case scenarios, he realised... they weren't that bad. If she stayed, he could quit and stay with her. If she left, they could leave together, go back to Earth, he could show her the Galaxy, start their own business, go back to his mother's and help there. The Universe was wide with possibilities. He squeezed her hand reassuringly.\n\nThen the ancient machinery finished running through its paces, and the technicians drew closer as the capsule shell slid open, revealing...\n\nNothing.\n\nThe assembled stared in shock, an Asian girl named Lijuan stepping forward and peering at the empty bed. \"What's- What's going on?\"\n\nJonas stepped forward, kneeling beside the capsule and examining the status board. \"According to this... Maxim Golov is lying there, alive and well.\"\n\nThe girl even touched the padded surface, as if the man might somehow be there, but invisible. \"I don't understand- where did he go?\"\n\n\"He was never here,\" Hrelle concluded, glancing around. \"He never left with you.\"\n\n\"I don't understand.\"\n\n\"It was a diversion.\" He looked around sympathetically. \"All of it, all of you, all part of a massive diversion. He had no intention of leaving Earth and starting over on another planet; it was a risky enough venture already. With all the attention focused on you and the ship escaping, he could sneak away, adopt a new identity, and spend the rest of his life and some sequestered wealth in some villa in Switzerland or the Pacific Archipelago.\" He grunted. \"He seemed a little too old and rich to want to start roughing it on another planet.\"\n\n\"He- He said he would be with us,\" another of the group murmured, sounding adrift. \"He said he would guide us, help form a new civilisation-\"\n\n\"He said a lot of things,\" Nika cursed bitterly. \"He lied. He lied to us. He lied to the world. He used us. Shot us into space not giving a damn if we lived or died. He lived and died in comfort and freedom two centuries ago and can't even answer for his crimes now!\" She glared at Lijuan. \"That was your hero, your Saviour! What do you think of him now, eh? Fools!\"\n\n\"Nika,\" Hrelle started gently. \"They've only just awakened here, they've had a lot to process before they can move on.\" He looked to Lijuan and those who were supporting her, who now looked shocked and tearful. \"But you will. You wanted to make a future on another world. You can still do it here, working together. More of us are coming tomorrow, to offer technical aid, supplies... and help for you to cope with what you've gone through.\"\n\nThe girl stared back in disbelief. \"You would do that for us? Why?\"\n\n\"Because we can,\" Hrelle replied simply. \"All we ask is that you let us help you.\"\n\n*\n\nIn the following hours, as Jonas assisted with helping move and repair more equipment required for establishing permanent structures outside of the ship, watching Nika as she directed the others, occasionally the pair of them catching each other's attention every so often and smiling, he considered Captain Hrelle's words, how often Starfleet had helped people like the Rising Star crew, all the good that's been accomplished - and how much has been with his help.",
        "And the future seemed... less clear than it did before.\n\n*\n\nUSS Surefoot, Deck 1, Corridor, 1955 Hours:\n\nJonas resisted the urge to rush to the nearest toilet for the fifth time; he couldn't possibly have anything left in him to add to the recyclers. They were going to expel him. He should have just resigned, before it came to this. He should have-\n\n\"Jonas? What are you doing out here?\"\n\nHe turned, as all of Alpha Squad, minus Rrori, whom Jonas presumed was already waiting in the Briefing Room, approached as one. \"Me? Just getting some air. What are you doing here?\"\n\nSasha smiled. \"The squads are required to attend. It's going to be educational.\"\n\nJonas nodded, paling. \"Sure, you don't get to see a cadet roasted before your very eyes, do you?\"\n\n\"Do not be so pessimistic,\" Eydiir advised. \"You have your friends behind you.\"\n\n\"Yes,\" Sasha agreed, looking apologetic. \"Friends who... who are deeply sorry for treating you badly all this time.\"\n\n\"Yeah,\" Neraxis groused, while still smiling. \"I mean, I never do anything wrong, so I'm really just apologising on behalf of all these other tools here.\"\n\nHe grunted. \"Of course. And I'm sorry. And... if I don't get the chance to say it later, well, it's been an honour serving with all of you.\"\n\nSasha frowned. \"Jonas, is there something we should know?\"\n\n\"You'll find out.\" He stepped inside before they could enquire further.\n\n*\n\nThe room had been rearranged to accommodate the occupants and the purpose of the meeting: Captain Hrelle sat behind the desk, between Commander T'Varik and Counselor Kami. The four members of the Away Team stood at attention in front of a row of chairs facing them, and the assembled cadets sat in the rear.\n\n\"We'll keep this relatively short,\" Hrelle assured them, as the four cadets sat down. \"If anyone wishes to make any formal appeal against the decisions raised in this debriefing, you will have 72 hours following the end of this meeting to do so.\" He nodded to his First Officer.\n\nT'Varik held a PADD in her hand, without reading from it. \"We have taken into account a number of factors in our assessment of your performance during this incident, not least of which was the unexpected direction in which your original assignment took, as well as your lack of experience and qualification in a number of fields that might have otherwise facilitated a successful conclusion. However, we need to address matters which have arisen in our analysis of your performance, both individually and as a group. Cadet Zaacool Soolamea.\"\n\nThe Rigelian girl stood, as T'Varik continued. \"Cadet Soolamea, you are to be commended for volunteering to beam onboard the Rising Star, given the potential threat you may have faced, and for your engineering assistance. Your crewmates have nothing but praise for your ability and willingness to follow orders.\"\n\nShe offered a shy smile. \"Thank you, Commander.\"\n\n\"There is one matter I will address: in your submitted report, you stated that you privately disagreed with the decision to secretly send you over to the Rising Star, correctly pointing out that it was disobeying your Mission Commander's orders, and pointing out the danger that you might have faced if you were caught - as was indeed the case.\"\n\n\"Yes, Commander.\"\n\n\"But you did not make your concerns known at the time, did you?\"\n\n\"No, Commander. Rrori and Nancy were, well, they seemed quite sure of their being right.\"\n\nThe Vulcan set down her PADD. \"Cadet... in future do not be intimidated by the apparent expertise or personality of others. Being loud and arrogant does not automatically make one right - as you will learn. Take your seat again.\"\n\nShe nodded. \"Yes, Commander.\"\n\nT'Varik looked to Rrori, who rose to his feet now. \"Cadet Meow Rrori, you performed exceptionally well in piloting the Rising Star safely to the surface of Sigma Lambda II. It was a remarkable feat-\"\n\nThe Caitian beamed. \"Thank you, Commander. I must admit I impressed myself with-\"\n\n\"I'm not done speaking, Cadet. As I was saying, it was a remarkable feat... and it was also entirely avoidable.\"\n\nHe blinked. \"Excuse me, Ma'am?\"\n\nNow Hrelle spoke up. \"At 1948 Hours, when the Rising Star detected your presence and locked weapons on you, Cadet Ostrow ordered you to withdraw the ship from the area immediately. Instead of obeying those orders, you sat there and argued with him.\"\n\n\"Sir, the Rising Star's weapons couldn't do us any harm-\"\n\n\"That is beside the point, Cadet,\" T'Varik informed him. \"You were given a direct order, which you refused to follow. As it happened, your continued presence in the area antagonised the Rising Star crew, to the point where they overloaded a weapons station, three members of their crew were critically injured, and the ship itself was sent on a course towards the planet which endangered everyone onboard - none of which would have occurred if you had performed your duty. They may not have done you any harm, but because of you, they did themselves harm.\"\n\n\"At 1952 Hours,\" Hrelle continued sharply, \"When Cadet Ostrow decided to beam onboard, you argued with him *again*, in fact publicly questioned his authority and competence and offered to take over yourself. Comamnder T'Varik, does Cadet Rrori have any qualifications that would make him better suited for command than Cadet Ostrow?\"\n\n\"No, Sir, he most certainly does not.\"\n\nRrori's eyes were widening, and his tail was perfectly still as he looked to them in confusion. \"Captain, Commander, no offence was intended by my offer, I can assure you-\"\n\n\"At 1958 Hours,\" T'Varik proceeded. \"Mr Ostrow gave you a direct order to take no action against the Rising Star, even if his life was threatened. You then proceeded to secretly beam over Cadet Soolamea to disable the thoron generator without his knowledge - an act that was understandably perceived by those onboard as being hostile when she was discovered, and which put the lives of your crewmates at risk.\"\n\n\"What part of his orders did you not understand?\" Hrelle growled. \"What part of *any* of his orders?\"\n\nRrori was growing quickly dismayed by the questions, and the hostility he faced. \"Sir, I was... I was genuinely concerned at the potential threat-\"\n\n\"What threat, Mr Rrori?\" Kami spoke up now. \"We listened to the same audio logs as yourself, and I have provided a psychological assessment of the incident.\" She offered a glance at Jonas as she continued. \"Mr Ostrow was managing quite well, especially given his lack of experience. He was establishing a rapport with a hostile force, gathering intelligence and assisting in saving the lives of their wounded; he has impressed all of us. And he gave absolutely no indication to you that he was in any danger, offered no codes or verbal clues as to any threat. You made no attempt to contact him to confirm his status. And you made no attempt to contact us for advice. Did you?\"\n\nHe tensed, before finally offering, \"No, Counselor.\"\n\n\"If you had so little faith in your friend's abilities, why did you ask us to make him Mission Commander in the first place?\"\n\n\"That was different! It was supposed to be just a simple survey mission! A bit of fun, where we could relax and enjoy ourselves! When it blew it up into this emergency, I thought we needed someone compet-\" He stopped himself, acutely aware of the murmurs in the crowd of cadets behind him, and of Jonas sitting close, facing ahead, stiffening.\n\nHrelle leaned forward, the anger in his eyes clear and his voice rising. \"Was the word you didn't have the balls to finish just now meant to be... 'competent'? Because let's review the facts again: Cadet Ostrow's decision to withdraw was the correct one. His decision to go over unarmed and alone was the correct one. His decision for you not to take any action against the Rising Star was the correct one.\n\n*Your* decisions, on the other hand, almost led to the destruction of that ship and everyone onboard. Now, we may only be three senior officers with a combined 72 years' experience, while you're a third year Cadet with a shiny coat, so perhaps you could enlighten us all: between you and Mr Ostrow... who was the competent one?\"\n\nRrori swallowed, visibly shaking, his eyes downcast and his voice breaking as he replied, \"C-Cadet Ostrow, Sir.\" He swallowed again and added, more clearly, \"Sir, I wish to publicly apologise for my behaviour and attitude to my Mission Commander. And my friend.\"\n\n\"Duly noted,\" T'Varik replied. \"Cadet Rrori, normally your repeated acts of insubordination would result in expulsion. However, your past record, and your work in saving the Rising Star has been taken into account. As a result, your academic credits for the past month will be revoked, and a note will be placed on your record for the duration of your time in the Academy.\"\n\n\"You strut about my ship boasting of your many redeeming qualities,\" Hrelle concluded, still sounding sharp. \"Perhaps you could use this time to develop some humility? It will serve you better than your charm and innuendos. Sit down.\"\n\n\"Yes, Sir.\"\n\nThere was a pause, before T'Varik continued with, \"Cadet Nancy Yeager, stand up.\" As the girl complied, staring in their direction, the Vulcan continued. \"Cadet, I endeavour to seek the positive aspects of a crewmate's performance during a particular mission or exercise. I have yet to accomplish this in your case. You defied direct orders, you insulted your Mission Commander, made cutting remarks about his mental health. Your performance, your words and your actions, are frankly appalling.\"\n\nYeager stiffened. \"Well, if *you* say so, Commander, I guess I'll have to accept that. You're supposed to be smart, after all.\"\n\nHrelle looked up at her in sheer disbelief, his hackles and voice raised. \"EXCUSE ME, CADET?\"\n\nNow Kami intervened, her tone sympathetic but firm. \"Nancy... for your own sake, you need to curb that attitude. Right now.\"\n\nT'Varik resumed talking. \"We will not detail what you said to Mr Ostrow, but we would be interested in knowing if you would speak to Captain Hrelle or myself in the same way?\"\n\n\"Of course not, Commander.\"\n\n\"Oh?\" Hrelle spoke up again. \"And what have we done to earn your inestimable respect that Mr Ostrow didn't?\"\n\n\"You said it yourself, Sir: you earned your authority. You have the training and the experience. Cadet Ostrow had neither of these.\"\n\n\"We were all novices once, Yeager. Expertise comes with experience. And just in case it wasn't obvious before, to you and to the rest of you: you don't get to pick and choose who your commanders are. Some shavetail straight out of the Academy deserves the same respect as a 30-year veteran.\"\n\n\"Excuse me, Sir,\" Jonas spoke up suddenly, rising to his feet. \"May I please address Cadet Yeager directly on this matter?\"\n\nThe Captain looked to Kami and T'Varik, before relenting. \"Proceed.\"\n\nJonas turned to face her, while she continued to face forward. \"Nancy...\"\n\nWhen she refused to move, Hrelle growled, \"Look at that man when he's speaking with you! Show him some damn respect, for once!\"\n\nShe obeyed, reluctantly, as Jonas continued. \"You're absolutely right. I should never have been put in a position of command. I had no formal training, no formal experience, and I know it was done to boost my confidence, or as a joke, or some other idiotic reason.\n\nBut the fact remains, I was in command, and I took responsibility for what happened. And if you'd just accepted that, you could have helped me tremendously: your engineering expertise, and especially your historical knowledge, would have been invaluable in convincing the Rising Star crew that we meant them no harm. And failing that, I could have at least used some insight towards finding an alternative solution to what I was doing, if there was any. I could have used anything but your insults and your attitude.\" He sat down again.\n\n\"Well said, Cadet,\" T'Varik noted, \"Cadet Yeager, you are aware that your treatment of your Mission Commander was completely unacceptable. I was certain I had made myself quite clear when I addressed all of you on the subject of respecting each other. I was prepared to order your summary expulsion from Starfleet Academy.\n\nHowever, I have been made aware of mitigating circumstances. Why did you really refuse to assist the Rising Star?\"\n\nYeager pursed her lips. \"Because it was a terrorist ship, crewed with members of an organisation responsible for the deaths of thousands of human beings, and well as Vulcans, Rigelians, Centaurians and Denoublians. They chose to operate outside the laws of civilised society. Therefore, they did not deserve treatment under those same laws.\"\n\n\"These terrorist acts you speak of were committed more than two centuries ago.\"\n\n\"I consider that immaterial, Commander. To help them now would be to insult the memories of their victims.\"\n\n\"Their memories?\" Kami spoke up. \"Or your memories of Brian?\"\n\nYeager bristled. \"I don't know who you mean-\"\n\n\"Liar. For the purposes of this meeting I'll elaborate: I mean Brian Yeager, your older brother, First Mate with the Merchant Fleet freighter SS Victoria. On Stardate 29157.45, they had been delivering goods to the planet Rutia IV, where a terrorist group was operating. He and several other crewmembers had been killed by a bomb planted by the group in a restaurant frequented by offworlders, as part of their plan to drive away extraplanetary business and harm the local government's economy.\" She looked up again. \"You were twelve when he was killed.\"\n\n\"Murdered,\" Yeager corrected, her expression darkening. \"He was murdered. And you have no right to reveal that information here-\"\n\n\"The information is on public record, Cadet,\" T'Varik reminded her.\n\n\"And given this, your attitude towards terrorists is perfectly understandable,\" Kami added, not unsympathetically. \"And something that should have been addressed more fully before now.\"\n\n\"As for the occupants of the Rising Star,\" Hrelle continued. \"They consist of young people your own age, orphans of Maxim Golov's own terrorist actions, taken in by his deception. They are as much victims as those who died.\"\n\nYeager's whole body went taut. \"I... I was not aware of that at the time, Captain.\"\n\n\"Does it matter, Cadet?\" Hrelle rose to his feet and walked around the table to stand before her. \"Whatever twisted motivations made people like Golov, Bin Laden, Colonel Green and others renounce civilised beliefs like law and justice and mercy, doesn't mean we have to do the same. We're meant to be better.\n\nThink about what you did. You refused to provide aid to someone because of their political beliefs. Do you know how serious that is? How dangerous? Starfleet possesses an unbelievable amount of freedom and influence in the Alpha Quadrant, more than the Klingons, the Romulans, the Cardassians or Tholians or anyone else. Not because of our numbers, or our weapons, or our wealth, but because we consistently uphold the principles we espouse.\n\nAnd among those principles is the equanimity we maintain, when we explore, we defend, we mediate, we cooperate... and when we offer aid to those in need, regardless of species, religion... and politics. We do not make moral judgements on who deserves or does not deserve that aid. We are not judges, juries and executioners.\n\nThe moment you sat there in that shuttle and smugly declared that those people, whom you could have helped save, should just die... you became Golov. You became bin Laden. You became Green. You became every terrorist who saw other people's lives as having less value than your beliefs. You became no better.\"\n\nAs he returned to his seat, T'Varik continued. \"Your academic credits for the past three months are revoked, and there will be a written warning on your record for the duration of your time as a cadet. You will also attend additional sessions with the Counselor. And at some point in the near future, you will also publicly apologise to Mr Ostrow - and you will make that apology very convincing. Sit.\"\n\nNow T'Varik turned to Jonas, who rose again. \"Mr Ostrow, I am usually the one required to quote Starfleet Regulations when instructing cadets on where they have gone wrong. Your report, however, has more than done the work for me. During the incident with the Rising Star, you violated Away Team Regulations 150.1, 155, 161, 166.2 and 168, among others. You have also detailed numerous violations from the Starfleet Handbook on Personal Relationships, namely involving the sexual activity you had with Colonel Dominika Bunina - so many violations, in fact, that I almost suspect you are boasting.\"\n\nThere were titters from the cadets behind Jonas, as he reddened, still unable to believe he had been brave or crazy enough to include it in his report, and finally replied, \"No, Commander, I wasn't boasting.\"\n\n\"Going to a strange vessel alone, unarmed, ordering others to accompany you? And having sex with a girl during a crisis?\" Kami added, clearly amused, \"I know you cadets admire the likes of James Kirk, but you have to know that half the stories they tell of him are just made up.\"\n\n\"Yes, Counselor. But I want it on record that I take full responsibility for my actions, and am prepared to accept the consequences.\" This was it, he told himself...\n\n\"That is very laudable,\" Hrelle noted, looking up. \"Almost too laudable. One might almost be tempted to think you were trying to get yourself expelled from Starfleet for some strange reason. On the other hand, we cannot ignore this, can we, Commander?\" \n\n\"No, Sir, we cannot.\" T'Varik looked at Jonas again. \"This report has detailed many deficiencies that we cannot overlook, Cadet Ostrow. You therefore leave us with no choice... but to train you.\"\n\nJonas blinked. \"Ma'am?\"\n\nHrelle smiled. \"You detailed a number of Regulations, but you neglected to mention one more, Starfleet Directive 001, perhaps the most important one: 'Members of Starfleet will take any and all reasonable measures to preserve life, in whatever form it might take'. That's one you upheld admirably. And we are very proud of you for that.\"\n\n\"We've listened to your audio logs,\" Kami offered, smiling. \"And we've heard you speak this evening. You have the instincts of a natural leader. You just need the training to bring that out.\"\n\n\"We have no intention of you changing your Primary Study,\" T'Varik assured him. \"But your Secondary. Your Medical scores have been adequate, but they affect your superlative Engineering scores. You will perform much more significantly when you switch your Secondary Study to Command, effective immediately.\"\n\nHis mouth opened, but then closed again when no words emerged.\n\n\"We know it's late in your education,\" Hrelle admitted, looking amused by his reaction, \"But we're certain you'll catch up. Squad Leader Hrelle, Mr Ostrow is your new second-in-command; sorry, Neraxis.\"\n\nBehind Jonas, the Bolian grinned. \"That's okay, Sir, I found the classes boring anyway.\"\n\n\"Good. Mr Ostrow, starting from tomorrow you'll be taking Command courses instead of Medical, and you will attend the required briefings with the Squad Leaders, all of whom I'm sure will be more than happy to offer support - or, in the case of Mr Falok, who will find it immensely logical to do so.\"\n\nBeside Sasha, Giles Arrington grinned, while the Vulcan Falok merely nodded, accepting the amusement graciously without joining in.\n\n\"Now,\" Hrelle concluded, \"Before my wife reminds me not to overeat at the party below: Dismissed.\"\n\n*\n\nAlpha Squad had returned to their quarters to change for the planetside party, but Jonas had contrived an engagement elsewhere, eventually going to his quarters when he was sure they had already left and beamed down. He changed into his civilian clothes as he looked around the messy place, knowing who owned which discarded sock or underwear, staring at the place where he usually sat when they played cards or watched Fat Cat and Lil' Kitten, remembered the times when they were drunk or full of snacks, making each other laugh until they were ready to pee themselves, or him falling asleep against Neraxis, her higher Bolian temperature a somnolent comfort.",
        "He had held back from the others this final time to give himself an opportunity. An opportunity to pack his bags, hand in his resignation and make the break as quick and clean as possible. He could still do it, despite the incredible promise offered him tonight of training him in Command, a possibility he never imagined for himself. Until now.\n\n*\n\nIt was brighter on the surface than he expected; floodlights were set up around the wide clearing, music played in the background, and the colonists and Surefoot crew mingled with varying degrees of confidence, something Jonas was grateful to see.\n\n\"Ah, there you are.\"\n\nHe turned, his nose already enticed by the smell of cooking foods, to see a long row of grills, covered in burgers, hot dogs, chicken, sausages, Caitian shuris kebabs, ribs, vegetable skewers and other things he couldn't recognise. And behind it, expertly monitoring it all, was Captain Hrelle, dressed in baggy shorts and a T-shirt that sported the instructions IF FOUND RETURN TO KAMI. The Caitian wielded tongs and continued to work as he said, \"Grab a plate or a napkin and a bun and get something. You must be starving.\"\n\n\"Uh, yes, Sir.\" As he complied, and others moved up with plates, being served by his commanding officer, Jonas asked, \"Um, how did they get you to do this, Sir?\"\n\n\"I volunteered. It's relaxing work, I can sneak bites without the wife catching me, and the food is too tempting for the Rising Star crew to let their fear of my alien nature keep them away from me.\"\n\nJonas smiled; Captain Hrelle was always more teddy bear than alien to him, but then he wasn't one of the people here. As he held out a hot dog bun on a napkin, he said, \"Thank you for the opportunity to try my hand at Command, Sir.\"\n\n\"You are very welcome.\"\n\n\"To be honest though, Sir, it feels like a bit of a bribe.\"\n\nHrelle shrugged. \"Of course it's a bribe, a shameless one! That doesn't mean you haven't earned it. I have to admire the balls of someone who will admit to losing their virginity in an official report. The only other person I know to have done it is... me.\"\n\n\"You, Sir?\"\n\nThe Captain selected a hot dog and dropped it into the bun with the tongs. \"I was not much older than you, an ensign on the USS Charleston, just six weeks out of the Academy. I had been the victim of a crime while on shore leave on Marcus II. It was a classic scam: a beautiful woman buys you a drink that she's drugged, takes you to a motel room, and when you wake up, you've been robbed of everything, and I do mean everything.\n\nIn my case, it was with a rather attractive Deltan female named Sundal. Well, she said that her name, it could have been anything. And she said that she was Deltan, but having since caught the scent of Deltans I know she was just a bald human. But she must have misjudged the level of sedative required to knock me out, because we were together for quite some time before I finally fell asleep, waking up later robbed of my credits, my communicator, and my clothes. I ended up naked and at the local law enforcement office, waiting for my supervisor from the Charleston to come collect me.\"\n\nJonas had been tucking into his hot dog, but now stopped, swallowed and said, \"God, no.\" \n\n\"God, yes. And when we returned to the ship she told me to complete an incident report, and 'leave nothing out'. And in my naivete... I didn't.\n\nAnd so I ended up standing in front of my Captain, First Officer, and Chief of Security in the debriefing, each of them taking turns to read aloud parts of my very graphic account of Sundal's body, her expertise with oral sex, the positions we engaged in, and the moments just before the sedative finally kicked in, which involved sticky dessert toppings in my fur.\" He frowned with the memory. \"Somehow the entire ship got wind of most of the details before I even left the debriefing.\"\n\nJonas' jaw had dropped. \"That- That didn't really happen, did it, Sir?\"\n\n\"It did. On the plus side, however, I got a half-dozen requests for dates from some of the other ensigns onboard - and one rather fetching Lieutenant.\" He smiled, stopping to turn over some chicken breasts.\n\nA hand slapped Jonas' back and led him away from the Captain and the food table. \"There he is! Good work, Scrappy! I know we'd make something out of you eventually!\"\n\nHe smiled politely at Neraxis - and at Sasha, who had accompanied the Bolian girl, adding, \"Whatever he is, I think he made himself. And I thought we agreed to drop the nicknames.\"\n\n\"What? He won't mind.\" She nudged Jonas. \"You don't mind, do you, Scrappy?\"\n\n\"Of course not... Blue Balls.\"\n\nNeraxis looked at Sasha, then guffawed - stopping as Yeager strode up to them, ignoring the girls. \"I've been ordered to publicly apologise to you, Ostrow. Consider this it. Can I go now?\"\n\nSasha leaned forward. \"Didn't you learn a damn thing tonight, Nancy? About stowing the attitude?\"\n\n\"Stay out of this, Hrelle.\" \n\n\"Excuse me? Do you know what happens if a Squad Leader puts you on report now-\"\n\nBut then she stopped as Jonas held up a hand, never taking his eyes off Yeager, who asked, \"Well? Is that it? Can I go now?\"\n\nHe regarded her, before asking, \"What was he like?\"\n\n\"What? Who?\"\n\n\"Your brother, Brian. What was he like?\"\n\nShe glowered. \"What the hell do you want to know that for?\"\n\nHis expression remained open, sympathetic. \"I grew up an only child; I always wanted an older brother. Someone to share a room with, play tricks on our Mom, get his hand-me-downs, go off on adventures.\" He smiled now. \"What was the favourite thing you used to do together? Come on, just one thing. Make me envious of what you had.\"\n\nYeager stared at him, looking unsure if she would hit him, walk away, or both, before finally relenting, her voice and face softening, \"Snow forts. Snow forts on the Titan polar caps. We'd bring extra oxygen tanks so we could stay longer outside, and pretend we were making raids on the Klingons at Rura Penthe, or fighting the snowbeasts on Rigel X.\"\n\nHer gaze momentarily locked onto something that wasn't physically present. \"Once... Once Brian made an explosive charge out of some discarded thalmerite at the Museum, and we set off an avalanche on the slopes that was detected in orbit. We were in so much trouble.\" She smiled a little at that. \n\nJonas nodded, grinning now. \"That must have been awesome! And he must have been an amazing brother! You are so lucky!\"\n\nGrudgingly, she responded with, \"Yeah. Yeah, I know. Thanks.\"\n\n\"Listen... you don't mind if we talk about him again sometime? Like I said, I've always been envious of anyone with a big brother. I've always felt like I've missed out on something special.\"\n\n\"Yeah. Well, we'll see.\" Yeager looked more than a little confused as she moved away from the trio.\n\nNeraxis looked to Jonas. \"What was that?\"\n\n\"That,\" said Kami, stepping up behind them, smiling as she put a hand on Jonas' shoulder, looking impressed. \"Was a simply masterful bit of psychological de-escalation: making an emotional connection with a potential opponent, distracting them from their anger with positive memories while offering your own vulnerability to them as a sign of trust, and possibly bridging a new relationship between the two parties. How did you get so psychologically savvy?\"\n\n\"I've spent enough time in your office, on the receiving end,\" he quipped, noting she wore identical clothes to the Captain's, only more form-fitting, and with the words I'M KAMI over her chest; only then did he understand the reasons behind what was written on Hrelle's T-shirt.\n\n\"Jonas?\"\n\nHe turned at the unfamiliar voice to see the Andorian Thykrill striding up, keeping an eye in the direction of the departing Yeager. \"Was she bothering you?\"\n\n\"What? You mean Nancy? No, Atiaro, she wasn't. Why?\"\n\nThe girl continued to glance at Yeager, as if not quite believing Jonas. \"You let me know if she causes you any trouble, and I'll deal with her.\"\n\n\"Um... yeah, sure. Thanks.\" He wasn't sure what else he could say.\n\n\"Enjoy yourself.\" She offered Neraxis a dirty look as she departed as well.\n\n\"What the hell was *that* all about?\" Sasha asked.\n\n\"She's sucking up to Jonas,\" Neraxis groused. \"Now that he's Alpha's second in command.\"\n\n\"No,\" Eydiir corrected, having helped herself to a hamburger. \"It is because Jonas publicly praised her father when we first arrived. That is a very great honour among Andorians, especially given her initial comments about him weeks ago. I believe he won her over.\"\n\nJust then the rest of Alpha Squad drew up, Kitirik immediately and shamelessly hugging Jonas. \"Good Friend Jonas, I am so pleased with you! We all are!\"\n\n\"Indeed,\" Eydiir added, offering a rare smile. \"And I will sleep better knowing we have a second in command who does not consider farting the Federation Anthem to be an acceptable skill.\"\n\n\"Bite my ass,\" Neraxis snarled.\n\n\"Thank you, no, I have seen your ass - and heard it. This burger is far more appetising.\"\n\n\"Jonas...\" Rrori stood uncharacteristically in the rear of the group, his tail drooping and his head bowed. \"I am truly sorry for doubting your abilities on this mission. You were superb. I could not have done better myself.\"\n\n\"That's very true,\" Jonas admitted, stifling a smile at his reaction. \"Forget it, it's done. So long as you don't try matchmaking again. Whatever made you think I'd be interested in Nancy?\"\n\nThe Caitian male furred brow creased. \"Your reaction when you saw her... you were attracted to her-\"\n\n\"So what? I'm attracted to a lot of women! I'm attracted to the Counselor, that doesn't mean I'm gonna ask her out!\" He stopped and glanced at Kami, who was still standing behind him, but now eating a hot dog. \"No offence.\"\n\n\"None taken.\" She grinned, teasing him with, \"Are you really attracted to me?\"\n\nHe rolled his eyes. \"Don't pretend you didn't know.\"\n\n\"We have a problem,\" Kit announced suddenly, drawing everyone's attention as he elaborated. \"We have no drinks. Forgive my bad language but I find this very unacceptable.\"\n\n\"Hell, yeah!\" Neraxis agreed. \"This is my round. Jonas?\"\n\nHe was looking around the crowd, but glanced back at her and replied distractedly, \"Oh, uh, nothing for me just now, thanks.\"\n\n\"Fine, what about the rest of you?\"\n\nJonas tuned out of the conversation, checking out the crowd, not seeing Nika-\n\nAnd then starting as Kami leaned in close. \"She's over that hill. They found out we had a database of movies released after they left Earth. I think they argued more about what to watch first than about what to do with Golov.\"\n\nHe nodded. She was waiting for him. Now he looked at Kami. \"Can I get your advice on something, Counselor?\"\n\nShe smiled, finishing her hot dog and guiding him away from the others. \"What is it?\"\n\nHe breathed in. \"How... How can I let a girl down about something without hurting her?\"\n\nKami regarded him with a mix of emotions. \"You probably can't. Those feelings that take us to such dizzying peaks can plummet us to awful depths. Don't look for magic words that will make her feel good about you not staying with her. There aren't any. And... I suspect a part of her is expecting it already, and she's already prepared herself.\"\n\n\"Really?\"\n\nShe nodded. \"I have no doubt that if you went to her and told her you were quitting Starfleet to stay here, she would be over the moon with joy - if this planet had a moon - but somewhere in the back of her mind, she would have doubts if a decision made so relatively quickly is the right one. She'll cry when you're not around - and you'll do the same - but it's easier when you're honest, gentle, understanding. That won't be a problem for you.\"\n\nHe nodded, smiling. \"Thank you for that, Counselor. I'd best go see her.\"\n\nHe started to move away, but she put a hand on his shoulder, drew him back, whispering, \"Oh, and if you get tired of all these young cubs and are looking for an older woman, you know where to find me.\" She winked mischievously at him.\n\nHe felt himself redden at her joke, and her touch, but quickly responded with, \"My current girlfriend is 268 years old. You're pretty much a cub, too.\"\n\nAs he grinned and started away, she called after him, \"Ooh, I definitely like the way you think!\"\n\n*\n\nHe saw the huge screen before he reached the top of the hill: it was set at the bottom of the slope, with speakers on either side, and people were sitting or reclining on blankets on the slope itself, looking up at a scene of a man in a battered leather jacket and fedora and carrying a bullwhip, leaping from hovercar to hovercar fighting robots as they raced across a brick-red desert, while exciting music played in the background.\n\n\"Jonas!\"\n\nHe saw Nika on a blanket nearby, plates of food and bottles of drink nearby, and beckoned him closer. \"Have you seen this one?\"\n\nHe sat down beside her. \"I don't recognise it. What is it?\"\n\n\"Indiana Jones and the Pyramids of Mars. According to the database from your ship, it was released in 2115 after we left, and is the first movie filmed entirely on the Red Planet. We all thought that we'd never see another one of these, that Earth will have been conquered or destroyed. They have a new actor playing Indiana, and he's good, but he's no Bruce Baxter. Do you watch movies?\"\n\n\"Once or twice. As an art form it's ebbed and waned over the centuries.\"\n\n\"I loved them, especially adventures and thrillers. In them, there was always a couple who would meet during a crisis, work together, save each other's lives, and at the end when the crisis was over, they would fall in love and live happily ever after. I always thought it was so romantic.\" She looked wistful. \"But I was a child then. Later I realised that we never see what happens to the couple afterwards, when the crisis has long since passed. Maybe they realised that the crisis was the only thing holding them together, and that was not enough for them.\"\n\nHe reached out and took her hand. \"Nika, I'm sorry, but I can't stay with you. As much as I'm tempted, by it, and by you... it's not the life I dreamed of for myself.\"\n\nShe pulled out of his touch.\n\nBut then almost immediately returned it, squeezing desperately. \"I know. And I'm glad.\"\n\n\"You are?\"\n\n\"After you left, after I made the offer, I feared you'd accept it.\"\n\nHe was confused now. \"Why?\"\n\nShe looked up at Indiana punching a robot in the face. \"Because, if you did accept it for the wrong reasons, and changed your mind later when it was too late, you would grow to resent me, hate me.\" She looked at him. \"When you think of me, I want it to be good thoughts.\" A sly smiled appeared. \"Maybe some dirty thoughts, too.\"\n\n\"That's pretty much guaranteed.\"\n\nShe sighed. \"So, for now we'll forget that you'll be leaving. I have never been on a date, Jonas Ostrow. This is our date: we will watch movies, eat and drink, make out on the blanket, and later we will spend the night together, making love until we are thoroughly exhausted, and not remind ourselves that your ship leaves tomorrow.\"\n\nHe smiled. \"I have never been on a date either, Dominika Bunina. Let's make it one to remember.\"\n\nAnd they did.\n\n*\n\nDeck 1, Mess Hall, Stardate 36521.31:\n\n\"Hi, Jonas.\"\n\nHe looked up from his PADD, only catching sight of the untouched sandwich on his plate, only then remembering that he had ordered it in the first place. The work he had taken on since accepting second in command of Alpha Squad had been distracting, but at least it helped keep him from snacking too much. \"Hi, Soo.\"\n\nShe stood on the other side of his table, carrying a tray. \"Is this seat taken?\"\n\nHe smiled, offering a welcoming hand, and watching as she sat down opposite. \"How are the upgrades on the ventral sensors going?\"\n\n\"Taking longer than expected. I think Chief Grev is inventing insults to throw at T'Varik for keeping you busy with Command training.\" She grinned as she picked up her fork, twirling it into her spaghetti. \"How is it?\"\n\nHe pursed his lips. \"A lot of paperwork. No paper, of course, but a lot of work. And the thing is, you can't even just automate it, because they put in safeguards to ensure you've read and understood it all. And the regulations are so intricate. Did you know that there are additional Health and Safety regulations for the care and maintenance of toilets in accommodations that serve Bolians? Because of their corrosive biochemistry?\"\n\nShe held up her fork, now spooled with pasta sauce-painted spaghetti. \"No, and for the sake of my appetite, don't go into any more detail.\" She pointed the fork at his plate. \"You should eat, Mission Commander.\"\n\nHe smiled, reluctantly putting down his PADD and lifting up one half of his sandwich. For a few moments they ate in silence, before he said, \"I heard you and Rrori broke up.\"\n\n\"Rrori is devoting his free time to catching up with the credits he lost. He felt it was best if I wasn't kept pining for his attentions at this time.\"\n\n\"And how do you feel?\"\n\nShe shrugged. \"I think it's for the best. He has a lot of charm, but I have a feeling I would always be fighting for some time in front of the mirror.\" She smiled now. \"Have you heard from Nika lately?\"\n\nHe took a bite of his sandwich to avoid answering right away. It had been two weeks since the Surefoot had left Sigma Lambda II, and he'd messaged her and she messaged back... and somehow they had come to a mutual agreement that, however special and rewarding their short time had been together, it wasn't something that was strong enough to be kept alive via subspace messages. \"We decided it was best not to keep up any expectations, especially with all the work each of us has ahead of us.\"\n\n\"Oh. I'm sorry to hear that.\"\n\nNow it was his turn to shrug. \"I'm not. If we were still together, I'd feel guilty about asking you out.\"\n\nThe Rigelian blinked. \"Pardon?\"\n\n\"This Saturday is First Contact Day, there's gonna be a party, and in the spirit of interspecies cooperation spawned by that historic event, I thought I'd ask if you'd accompany me. I dance like a drunken Rectyne Monopod, but I'll try not to step on your toes.\" He smiled. \"Well? What do you say?\"\n\n\"Would it crush you if I said No?\"\n\nHis smile wavered. \"A little. But I'd get over it.\"\n\n\"Then it's a good thing I'm saying Yes.\"\n\nHis smile blossomed.\n\n-\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... \n\nTHE FAST AND THE FURRIEST"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "science fiction",
        "starfleet",
        "caitian",
        "federation",
        "starship",
        "alien11111"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-rising-star-ch-04"
}