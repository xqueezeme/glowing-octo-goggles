{
    "title": "Alpha Killer Ch. 76 - Conclusion",
    "pages": [
        "Talia's POV \n\nWerewolf Council HQ \n\n\"Talia, I order you to open this door!\" \n\n\"Sorry, Dad. It's too late now.\" My conscience would not allow for him to fight, not now. Our plan was fatally flawed in a way familiar to the French and their Maginot Line. We had put everything into defending against a ground attack, and instead they had gone around them. Fighting hand to hand in a building like this was a losing strategy, and the screams from above me bore that out. We simply could not regroup in time to do anything, and my Enforcers were dying. \n\n\"We've locked down the upper level, Talia. We show a dozen or so vampires entering from the rooftops. We've made a dent but not enough.\" \n\n\"Have those who can fall back to our position and lock the rooms behind them, so we have time to prepare,\" I sent back. The Pack House was fortified inside and out for just such a reason. Doors locked and steel barricades slid into place, cutting each floor into quarters and isolating the stairwells. It wouldn't stop them but each barricade to breach would slow them down. The vampires arrived in the room first, followed by the Enforcers they were embedded with. \n\n\"They will take a few minutes to break through,\" he told me. \n\n\"Stay behind me,\" I told the remaining men and women. \"You are to protect the safe room and the backs of the Masters.\" \n\n\"We wish to fight,\" one of the vampire females hissed. \n\n\"You have your orders,\" Nikolai said softly. \n\nOf course, at the worst possible time before battle, my phone rang. I pulled it out in annoyance, only to smile when I saw the video call was from my mate. He had blood on his face and behind him looked like a slaughterhouse. \"Are you all right?\"  \n\n\"We're fine, love. The rebels failed, we lost Mistress Edith and the third floor of Vampire Headquarters will need a complete remodel, but they are all dead.\" \n\n\"I have to go, our attackers are almost here.\" \n\n\"Put it where I can watch and leave the line open, love.\" I thought about it, he deserved to know what happened so he could congratulate or avenge me. I set it on a table next to the door, pointed forward. \"What is your status?\" \n\n\"We will win,\" Nikolai said. \"Randall, Lukaku, you have proven your worth again.\" \n\n\"Talia, I have heard back from Sulphur River, they have repulsed the attack as well.\" I could tell there was something he was holding back, but there wasn't time. The last door to the basement was blown open. \n\nI shifted to my hybrid form, guarding the entrance to the safe room. It was a safe haven for the people in it; the lock could not be opened from either side for ten minutes, and the thick steel would take hours to breach. \n\n\"We make our stand here,\" Nikolai said as his talons extended. He moved to the center as I took his right. Leonardo moved to his left and we all took a ready position. A few seconds later, the vampires at the lead of the attack entered the room. There were sixteen of them, and they looked more like soldiers than vampires. Dressed head to toe in black body armor, they would have some protection against both bullets and teeth. Instead of attacking us, they quietly lined up against the wall by the door. I could sense their power; these were not the men in charge, they were troops. \"You will all die today,\" Nikolai said. \n\n\"I don't think so,\" a man said as he entered the room. He was tall and handsome, his black hair perfectly framing his classic features. His suit was expensive and immaculate, and two other men followed behind him. These men were dangerous, my senses told me. \"Today we settle this dispute with your blood.\" \n\n\"Master Vincent,\" Nikolai said. \"You are a long way from Boston, and far too young to think you are a match for me. Nice of you to bring Master Esteban and Master Hermann with you, that will save me a trip to wipe them out.\" The two Masters stood just behind them, suddenly not quite as confident. The troops were keeping a close eye on each other, muscles tensed and ready for the fight. This place was a powderkeg and we were all carrying torches. \n\n\"I go where I am needed,\" he said. \"It is not like the Council respects those who are not senior enough to sit on it. We will not sit back and watch you destroy our kind with your foolish plans.\" \n\nNikolai shook his head. \"Which part was it you objected to? Making peace with the Packs, or Talia?\" \n\nHis look as he turned to me was a mix of disgust and fear. \"You were a mistake, one that Nikolai and the Council failed to rectify for four years. You and all like you must be killed.\" \n\nI couldn't answer with my jaw shifted, but Leonardo could. \"Why? She has proven herself to both Councils.\" \n\n\"Because that bitch offends me by her very existence. The Masters who discovered this could be done ages ago killed them once they saw the monsters they had created.\" \n\nNikolai shook his head while I watched the others standing back. \"The Council has spoken on this. The creation of hybrids will only happen with our permission.\" He stared at him, death a promise in his eyes. \"The hybrids are a key to our future, because they bridge the divide between our species. Not only can they be mates, as Erica and Eduardo have proven, they can reproduce.\" \n\n\"How can that be? Vampires are sterile.\" \n\n\"Maybe the Gods are smarter than we are. Maybe if we would put aside our prejudices and hatred, we would embrace the chance the Moon Goddess is giving us.\" The men looked confused. \"I am the world's oldest vampire. Every person I knew before I was changed has been dead for thousands of years, and those who I care for are gone unless I cursed them to be like me. Unable to age, unable to reproduce, unable to find the person destined for me until now. Eduardo proved that there are mates to be found among the werewolves. She took the change, so she lived past his bite, but the mating bite she gave him changed him as well. He is no longer a vampire like us, he is alive in a way we aren't.\" \n\n\"Wait, he's a hybrid?\" \n\n\"We don't know all he is yet, but we have proven he has viable sperm. He will be able to have a family, children, a legacy. Do you have any idea how much I would give for that? Who among you does not regret the part of the change that took that away from them forever?\" I could see them thinking. \"Only a fool would reject that.\" \n\n\"Then a fool I must be, because I'd rather die than live with these... these monsters you have created.\" \n\n\"We are the monsters, Vincent.\" He stared at him, then the other two Masters, then the men behind them. \"The Masters came here as part of a larger plan to take over the Council, a plan that has failed miserably. The attack on the Sulphur River Pack has been repulsed and Master Snow has been captured. The attack on the Vampire Council has also failed, all but a few of them are dead and those that fled the area will be tracked down and killed before sunrise. You lost the element of surprise, and now you face two of the strongest Vampires in existence and a Hybrid who is the match of a young Master. If any of you kneel before me and pledge your loyalty to the Council, you will not be destroyed with the others.\" \n\n\"He LIES,\" Master Hermann said. \n\nHe motioned to one of the men, who brought my phone forward so he could hold it out. \"Chief Enforcer Randall Meechum, another hybrid, is with us right now. Randall, what's the status?\" \n\n\"The bodies have been bagged and we're into cleanup,\" he said. \"We've managed the humans, but the pool table and bar area are pretty much toast now. Hey, let me get someone for you.\" \n\nThe next voice was Master Jarrod's. \"Ah, I see you have people over as well. Our guests could not stay long. As you can see, they couldn't hold things together.\" I later found out they had stacked the heads of the vampires and had shown that to Master Vincent and the others. \n\n\"Well, we shouldn't keep our guests waiting, it's rude to talk on the phone and not include them. I'll call you in a few minutes, this won't take long,\" Nikolai said. He handed the phone back. \"You've lost, Vincent.\" \n\nIt was the men behind him coming to give themselves up that triggered the battle. An enraged Hermann decapitated one, and we were on the enemy like a duck on a June bug. \n\nVincent barely got his hands up to stop Nikolai's attack, and I lost view of their battle as I rushed towards Master Hermann. He slashed towards my neck, a move I expected and blocked with my left forearm. He didn't expect the speed of my reaction to match his, and wasn't ready for my right hand as I dropped down. My hybrid claws slashed across his stomach, slicing four long furrows across his suit and into his stomach muscles. \n\nHis eyes flashed in anger as I jumped back, avoiding his left hand. I moved to my right, knowing my Enforcers and allied Vampires would have my flank. I focused on Hermann as the room exploded in an orgy of blood and body parts. \n\nHe attacked with the confidence of a man who considered himself superior to me, thinking my size and sex would be a huge disadvantage. I smiled as I avoided the best he had, and he was becoming frustrated. Unlike him, I had been fighting vampires and werewolves for years, and Marceline was more of a challenge than he was. With every attack, I used my lightning-fast counters to draw blood. I had a few deep cuts, while he was bleeding in dozens of places. \n\nThe room was suddenly quiet, but I couldn't take my eyes off him. I could see Nikolai and Leonardo standing behind him as the remaining defenders circled us. I could sense Hermann's fear as he realized he was the only one left. I shifted back to my normal form so I could talk. \"You underestimated me, just like the others, and that is why you will die.\" \n\n\"It wasn't personal, Talia. I did what I had to do.\" \n\n\"So will I.\" He lunged for me and I stepped under his attack, using my left arm to swing around his chest as I launched myself onto his back. My legs wrapped around his hips while my right hand stabbed into his neck from behind. A claw punched through the base of his head and into his brain stem. He lost control of his body and started to fall before I could pull my hand away. He was dead, but I made sure. Slicing across his neck, I severed his head and kicked it aside. \n\nStanding up, I heard a slow clap building as Master Nikolai and the others saluted me. I looked around; the attackers were all dead along with a half-dozen of our side. Five vampires were on their knees, hands over their head, having given up when the fight started. In the corner, two Enforcers and one vampire were sitting, their wounds being tended by the others. \"It's over?\" \n\n\"It is,\" Nikolai said. \n\n\"Good, now someone get a shirt on my Mate before I lose my shit here,\" I heard from my phone. \n\n\"They know I'm yours,\" I said as I walked to a cabinet by the door. Shifting and losing clothes was common, so many rooms had a cabinet with spares. I pulled a long T-shirt over my body then walked to the phone. \"I'm fine, really.\" \n\n\"You're bleeding.\" \n\n\"It's nothing.\" \n\nThe door to the safe room had been opened, and Brent rushed out and embraced me. \"You should have let me fight,\" he said. \n\n\"My job is to protect you, even from yourself,\" I said. \n\n\"Baby, I'll call you back when things calm down, we've got some cleanup here too.\" I closed the conference and checked on my Enforcers. When the last had been sent to Medical with the doctors, Brent ordered me to follow. \"Why? I'm going to be fine, it's just some slashes.\" \n\n\"Humor me,\" he said. \"And if you can't do that, it's an order. We've got plenty of people who can take care of this mess.\" \n\nI reluctantly walked to the Clinic, my Vampire healing closing the wounds as I waited my turn. Patty came to sit with me and we started to talk about my wedding plans. \"Have you picked a date?\" \n\n\"Mom, he's not even asked me to marry him yet!\" \n\nShe waved her hand. \"He mated you and he got you a ring, I bet you're wearing it within a day of him returning to you.\" She was probably right; Randall was one of those 'know what you want and get it' types. \"Just don't wait too long.\" \n\n\"You know there are plenty of other sons and daughters who are newly mated, you don't have to pressure me to give you grandchildren.\" \n\nShe just smiled as the Doctor approached. \"Please sit and remove your shirt, Chief Enforcer,\" she said. I walked into the exam room as Patty said something in her ear. She smiled and came in, closing the door behind her. She cleaned the blood off, amazed that the deep cuts had already scabbed over. Testing my range of motion, she found the muscle was already healing as much as a werewolf would in two days. \"Well, at this rate you'll be fine by morning.\" I could have told her that, vampire healing rocked. \"Now give me a sample, the bathroom is through there,\" she said. \n\n\"Why?\" \n\n\"This is as close to a physical as I've been able to give you since you arrived, and I am responsible for your medical care.\" \n\nI took the cup and went to the bathroom, filling it before bringing it back out and washing up. She pulled out a test from a drawer and my eyes bugged out. \"Is that a...\" \n\n\"Pregnancy test. You're newly mated, so you're sexually active?\" \n\n\"And adventurous,\" I said. \n\n\"With only two female hybrids, I intend to monitor you closely to see if your body works differently than a normal werewolf female when it comes to heats and reproduction. Have you felt any symptoms of a heat coming on? Restlessness, night sweats, excessive sexual arousal?\" \n\nI blushed. \"No physical symptoms, and if you saw my mate you'd understand it's anything but excessive.\" \n\n\"Well, if you don't want to start a family, you should think of using birth control. You are young and healthy, so you have a good chance if...\" Her timer beeped, and we both looked down at the test. \n\nA faint plus sign showed in the panel. I was pregnant. \n\nCh. 77 \n\nTania's POV \n\nTomah Pack Safe Room \n\n\"It's over?\" I leaned back into Bobby's chest as we sat at the laptop in the security section of our safe room. The entire Pack had been in here all night due to the threats of Vampire attacks. Bobby and I had been sitting in the room all night with the warriors. Two were constantly monitoring the cameras and motion sensors, and we were trying to keep up with what was happening elsewhere. \n\nI had felt helpless, and I hated that feeling. \n\n\"We think so,\" Chairman Brent said. \"The rebel vampire attacks on the two Councils and the Sulphur River Pack failed, and we have no reports of other attacks. Chairman Nikolai is laying down the law to the remaining Covens right now.\" He was making it very clear that any Vampire who violated the peace he had made would be eliminated, them and their Coven. \"We're still cleaning up from the attack here. What I'd like to do is get all of the Packs together at 0600 Eastern time on a videoconference. We've got a lot to catch up on.\" \n\n\"We can handle making the calls for you, I'm sure you have lots of other stuff to do,\" Bobby said. It was just over an hour away. \"Is it safe to leave the room yet?\" \n\n\"I wouldn't do that until sunrise, just to be sure,\" he said. \"I have to go. Love you guys, talk to you soon.\" \n\n\"Love you Dad,\" Bobby said, then the video call ended. We went to work immediately, sending out a blast email to all the Alphas and Betas in North America, then following up with phone calls. It would have been easier if we had Council members for each region, but those elections were yet to happen. We finished in time to freshen up and grab a snack, then we put the conference on the laptop screen in front of us. The conference was being sent to monitors in the main area, so the whole Pack could watch, but only the two of us would be able to talk. \n\n\"Good morning Alphas,\" Brent started. \"This isn't how I imagined my first day as Chairman would play out, but things have happened quickly. With me here in Council Headquarters are Vampire Council Chair Nikolai, Vampire Master Leonardo, and Werewolf Council Chief Enforcer Talia Meechum. Yesterday, the two Masters arrived at our Council Headquarters at the invitation of the former Chair, Talia.\" \n\n\"I wanted to show the Vampire leadership that we were taking strong actions to root out the corruption and illegal experimentation on captured vampires,\" Talia said. \"This was key to securing the peace, a peace that our new Chairman sealed in blood a few hours ago. It was not a peace that all Covens agreed with, and some of them rebelled against their own Council. We were attacked last night by three of them.\" \n\nThere was outrage among the Alphas, attacking our Council was a declaration of war. Brent held his hand up and waited for quiet. \"The attacks were not against us directly. They were aimed at toppling the Vampire Council members here today so the peace talks would collapse. That did not happen, because our vampire allies fought side by side with our Enforcers to hold them off. The attack was not without casualties; many fell in our defense.\" \n\nChairman Nikolai leaned forward. \"The Covens that did this are gone, destroyed. The Vampire Council wants peace, and our Covens are in agreement now. We will not be the ones to dishonor the sacrifices made to bring this about.\" \n\nOne of the West Coast Alphas interrupted. \"Mr. Charmain, wasn't part of the issue the Hybrids that the Vampires created? What is happening with them?\" I felt my wolf coming forward, now they were talking about my sister. \n\n\"The hybrids are a new thing, and both Councils are unsure as to what it all means for our kinds,\" Brent said. \n\n\"We have only one who was created without extenuating circumstances, and that was Talia here four years ago,\" Nikolai said. \"The most sacred thing among Werewolves is the mating bond; Randall was Talia's mate, and her bite is fatal to Werewolves, so Randall was changed to be like her. The real shock was with Erica. When she found her mate in a Vampire, it shook our worldview.\" He paused to gather himself. \"Vampires might find love, they may change their love so they don't grow old, but we don't have mates. Yet, Eduardo found his with a werewolf, our historical enemies. She had to be changed to mate with him, and to our shock, he changed when he mated with her. The two things that are part of the Vampire 'curse' were the inability to be in the sun and the loss of our ability to procreate. The dead cannot sire the living, that is what we have always known.\" \n\n\"Wait,\" an East Coast Alpha said. \"You mean this mating cured those two things?\" \n\n\"Yes. Eduardo is no longer like me or the other Vampires, he is something more. He hasn't lost his Vampire characteristics, but he is now a Daywalker with viable sperm. He is the evolution of our kind, just as Erica is the evolution of yours. The Vampire Council and the Covens are aware of the implications for both our kinds. We know that we may find mates among your kind, and you may find your matches among ours. Mated pairs have always been the way to build bridges. There isn't a Vampire out there who isn't filled with hope that they may find what Eduardo has found.\" \n\n\"Imagine, a whole population of adults who might find their mates in Werewolves,\" Brent continued. \"We have to help them find each other.\" \n\n\"Are you going to allow for werewolves to become hybrids if they volunteer,\" Alpha John of Thief River Falls asked. \"We have seen how strong Talia became, there is not an Alpha among us who does not want that power.\" \n\n\"I wish it was that easy,\" Nikolai said. \"Only a Vampire Master can do the change, and if you talk to any of the hybrids, they will tell you the change is incredibly painful. The Vampire Council has forbidden making any future hybrids until we know more.\" \n\nThis didn't calm the Alphas, who respected power about all else. Having a young female become the Alpha Killer was intolerable to them. \"CHAIRMAN NIKOLAI, a moment please,\" Kimberly said from the Sulphur River Pack House, Erica sitting next to her. \"There is one more Hybrid you are not aware of.\" ",
        "Everyone got quiet. \"Who?\" \n\n\"My mate, Dusty Meechum,\" she said to gasps. \"In last night's attack, my mate stood alone against the Vampires that attacked. The leader, Master Snow, bit him in an attempt to give up the location of our father and the other hybrids. Erica arrived before he died, she and the New Orleans Coven taking out the Master and his people.\" \n\n\"If you killed him, how is Dusty being changed,\" Nikolai asked. \n\n\"We didn't kill him, but he doesn't have arms and his teeth are gone,\" Erica said. \"The only way to save Dusty from the venom was to change him. I used him to start the change in Dusty.\" The precise method wasn't common knowledge, and she wasn't going to let on what happened. \"When he survives the change, I'll need a Master to change Kimberly so his mating bites won't kill her.\" \n\n\"Any other casualties, Alpha Kimberly?\" \n\n\"Everyone else withdrew to the safe room and with the New Orleans Coven's help, no one else died.\" She paused as she looked offscreen. \"I owe my mate's life to Erica and Eduardo and Anastasia. They are true friends to the Sulphur River Pack.\" \n\n\"Excellent.\" He waited to see if there were any other questions, then continued. \"For an update on the attack on Vampire Council headquarters, Chief Enforcer Randall Meechum is on the call. Randall?\" \n\n\"Thank you, Chairman Nikolai. The Vampire Council Headquarters were attacked last night by three Covens. I arrived in the middle of the attack, when the third sublevel had been taken over and they were cutting through the stairwell door. I was able to slip in behind, and the diversion allowed the remaining Vampires to counterattack. The attackers have been wiped out, even those who fled have been killed now.\" \n\n\"Casualties must have been high,\" Chairman Brent said. \n\n\"We lost a lot of good men in this war,\" he said. \"Master Edith was killed in the fight, but Masters Jarrod and Lukaku survived. The fighting was intense.\" \n\n\"We will not allow their sacrifices to be in vain,\" Chairman Nikolai said. \"Now that the crisis is over, I will be returning to New York to oversee the recovery while your Chief Enforcer can return here.\" \n\n\"Elections will take place later today for the positions on the Werewolf Council,\" Brent said. \"Regions are to report the results to me by 2000 Eastern time. Installation will happen in two days at moonrise. I'd continue this until all questions have been answered, but I've been up for almost forty hours now and we need to rest.\" \n\n\"We have all had a long night,\" another Alpha said. \"Our problems will still be there when we awake. Thank you, Mr. Chairman, for the update and thank you, Chairman Nikolai, for having the courage to achieve this peace.\" \n\nWith that, the conference ended. I closed the window on my laptop and turned to look at Bobby. \"Your brother...\" \n\n\"He's strong, he'll make it through the change,\" Bobby said. \"We should talk to your sister, though.\" \n\n\"You're right.\" She picked up her phone and called Talia. \"Sis, should I be worried about Dusty?\" \n\n\"I'm not going to lie. He's going to go through hell in this change but there's nothing you can do to help him. Erica is there, his Pack as well. I've already talked to Randall and Jarrod, we're going to head down there in two days to help. When you first wake up from the change, it can go bad quickly. We can make sure he is all right.\" \n\n\"And Jarrod can change Kimberly.\" \n\n\"Yes. We'll stay until she is stable as well. Dad is going to stay here, and Mom is going home to help. Just be warned, if you go down there, you'll be swept up in wedding planning.\" \n\n\"I'm not even engaged yet!\" \n\nTalia laughed. \"Me either, but he's not going to be here until tonight. At least I know I'll like the ring when he finally gets down on his knee.\" \n\n\"All right, we have to go. The Pack awaits.\" I closed the call and got off Bobby's lap. We had a Pack to release from the safe rooms and get back to normal. \n\nKimberly's POV \n\nSulphur River Pack House \n\nI released everyone back to normal duties, and many went straight to bed. I asked the kitchen staff to prepare a light breakfast for those who would be staying up, but to focus on a big dinner tonight. We wouldn't celebrate the victory, at least not until it was over. \n\nI called Master Nikolai to ask him what I should do with Master Snow. Without blood, he could not heal and regenerate his lost limbs. \"Stake him out for the sunrise,\" the Council chair said. \"I've got enough to deal with back in New York, and they were all warned.\" I called two warriors, who carried him outside, him promising death and retribution the whole way. \n\n\"Put him on the pile with the rest of the garbage to be burned,\" I said. After I made sure the Pack was taken care of, I went outside where the younger Baldwin boys, Matt and Lucas, had collected my Beta's remains had been collected in a box. Bull had fought valiantly, the dead vampires showed that, and they had torn him to pieces. \"Prepare him for the pyre,\" I said as I touched his hair \"He died bravely and with honor.\" \n\nHe'd been a constant in our lives, ever since I found my mate and came to this Pack. He was a good man and I will miss him. I went back inside and made the call to the Copper Mountain Pack. Terry Baldwin was going to be on the next flight down so he could be at the funeral. \n\n\"Alpha, I need you in Medical immediately,\" the Pack Doctor sent. My heart dropped, the only person there was my mate. I ran down there, and beyond the open door I could see Dusty seizing up. The Doctor was struggling to keep him from hurting himself as his body fought the restraints. \"His fever is too high,\" she said. \"It's going to damage his brain. Get an ice bath ready immediately,\" she said. \n\nThe attached bathroom had a shower, but one of the nearby guest rooms had a tub. I called the kitchen, telling them to bring ice, while I filled it with cold water. Eduardo and Erica carried his unconscious body in just before they arrived with bags of ice. He was out of it, but the seizure had stopped. \"Pour it in and go get more,\" I told the Omegas as they dumped the ice over his body. He was burning up. \"Is this normal?\" \n\n\"A fever, yes, but not like this.\" \n\nThe Doctor looked at Erica. \"Call your Master, I need to know what else to expect.\" She got him on the phone and put it on speaker; Doc gave the history of the symptoms so far. \n\n\"That doesn't sound right,\" he said. \"None of the others had that high a fever.\" \n\n\"Is it possible we didn't use enough blood?\" I was wondering if I had killed Snow too early. \n\n\"I don't know. Marceline and I will head your way immediately, I just have to arrange transport. I will call you with an arrival time, it will be during the day so we'll be traveling by coffin.\" \n\n\"We'll be ready.\" I stayed with my mate, using a washcloth to cool his face and head. His temperature turned, finally below 106 degF again, and she let go a sigh of relief. \"He's good?\" \n\n\"He's a long way from good, but at least he isn't getting worse. Keep the ice coming.\" \n\nThe morning stretched into afternoon; his fever would abate, then come back with a vengeance. Eduardo and Erica had to restrain him when he started to seize again, while I kept his head above water. His screams of agony echoed through the building. \n\nThe third time his temperature spiked, it didn't come back down. His seizures stopped, I felt him shudder and relax, then he slumped down. I felt his bond tear from me, the pain was unbearable. \"GET HIM OUT AND ON THE FLOOR,\" she yelled. They did. \"Start CPR, I'll be back with the crash cart.\" \n\nI watched as Erica started chest compressions. All I could do was hold my hands to his cheeks and beg him to come back. I prayed, begging Luna to send him back. \"Where is Jarrod?\" \n\n\"On the helicopter, we're twenty minutes out,\" the escort said. \n\n\"We don't have twenty minutes.\" \n\nThey alternated doing CPR as Doc furiously tried to restart his heart. Shocking, adrenalin, nothing worked. \"Stop CPR,\" she said. \"I'm sorry, it's over.\" \n\nI collapsed into the corner, unable to function without my mate. I could hear the helicopter landing, but my loss made it mean nothing. \n\nCh. 78 \n\nEduardo's POV \n\nOutside the Sulphur River Pack House \n\nI had been in contact with Jarrod before they landed at the airport. There was no time to waste, the Pack had felt the Alpha bond break and were in grief. Randall had traveled with the Jarrod and Marceline and supervised the coffins as they were transferred to the helicopter. \n\nStanding in the clearing past the training facility, I watched as the aircraft hovered then landed in the circle that had been hastily painted on the lawn. I had a dozen men with me and two trucks, to unload the coffins and their precious cargo. Randall didn't even say hi as he took off running for the house, a small cooler in his hand. \n\nAs soon as they touched down, two teams of six ran bent over to the doors. Pulling out the coffins, they carried them back to the pick-up trucks and loaded them up. By the time the helicopter was taking off again, we were already moving to the house. \n\nWe unloaded and carried them inside and down the stairs to the basement and into the clinic area. There weren't windows in this area near the safe room, so we were able to let them out of the transport coffins. \"He's this way,\" I said. \n\nWe joined the small crowd in the exam room where Dusty's body lay on the table, devoid of life. Kimberly was sitting in the corner, daughters Opal and Sandy wrapped around her as she sobbed uncontrollably. Randall was working with Doc, hanging a bag of blood from the IV stand. A moment later, the needle was in Dusty's arm. Randall gently squeezed the blood through the tube and the large-bore needle, forcing his blood into the body. \n\n\"How long until we know,\" I asked him quietly. \n\n\"I don't know,\" Jarrod said. \"It's not like there is an instruction manual for this.\" \n\nThe Doc cleared the room so we could talk to Kimberly alone. \"I wish you had gotten here earlier,\" she said as she wiped the tears from her face. She saw the bag hooked up and Randall squeezing it. \"What are you doing?\" \n\n\"The fact that his heart has stopped may not mean he is completely gone,\" Jarrod said. \"He was bitten first, then given the blood. The venom and the blood are fighting each other, one to kill him, one to change him. My hope is that my blood can tip the balance.\" \n\nShe had the girls get up and she moved over to Jarrod as the girls went to Uncle Randall. \"It can't make him any more dead, I guess.\" \n\nHe nodded. \"The other reason is the blood you used was from a younger vampire. Snow was a titular Master because he was head of his Coven, but he's half my age. With age comes power. We know that using blood from too young a vampire will not work, but we don't have enough information to say exactly where the break point is.\" \n\nNo one said anything as we waited; Randall joined his sister-in-law's hug as the blood bag emptied and the needle was removed. None of us knew if it would work, and there was nothing to do but wait. \n\nTen minutes turned to twenty, then thirty. \n\nThere was a gasp as Dusty suddenly took a breath, his body jerking as it suddenly restarted. Doc saw the heart monitor come back to life as Kimberly grabbed his hand. \"Pulse is forty, blood pressure 70 over 40 and rising,\" she said. \"He's back.\" \n\n\"Will he be all right?\" \n\n\"I have no idea,\" Doc said. \"Between the fever and the long time with no oxygen, if it wasn't for the vampire blood he would be brain dead long ago.\" \n\nKimberly leaned over, kissing him on the lips as her hand squeezed his. \"Come back to me, baby.\" \n\nHis girls climbed up on the bed, begging him to open his eyes, and then he did. \"DADDY,\" Sandy squealed when she saw him. \n\n\"My girls,\" he whispered. He winced in pain, closing his eyes again. \"What happened?\" \n\n\"You've been dead for almost an hour,\" Kimberly said as she hugged him tight. \"Don't do that to me again!\" \n\nHis lucidity was short lived as his body heated up and the pain returned. His unconsciousness relieved his pain. \"He's going to be out of it for three days,\" Jarrod said. \n\nShe looked at her mate, her face showed a wide range of feelings. \"The mate bond is still gone. I felt it break when he died, I can't feel it anymore. The Pack bond isn't there either. He's back, but he's not back with me.\" \n\n\"I don't know what to say, Kimberly. When he finishes the change, we can see what we need to do.\" \n\n\"Do you still feel the mating pull towards him,\" Randall asked. \n\n\"Yes, he's my mate, my wolf knows it but she's not getting anything back. She won't calm down, she can see him but still behaves like she lost him. It's like he lost his wolf.\" \n\n\"He might have, but remember what happened to Tania,\" Randall said. \"Her wolf was gone, but a part lived in her mate and she got her back after they mated. Perhaps you just have to mate with him again to restore everything. He did die before he came back.\" It was all too much to think of. \n\nJarrod looked at the exhausted family members. \"Why don't you and the girls get some sleep, I'll watch over him with my Coven.\" \n\nShe was exhausted, but she shook her head. \"No, I have to be here, in case...\" \n\n\"You need to take care of yourself and your family, Kimberly. If anything changes, Erica will come get you. He will be well cared for while you sleep.\" \n\nShe was Alpha, he wasn't Pack, but he was right. She thought about it for a moment. \"The girls and I will get some food, then we're going to stay in the guest room across the hall,\" she said. \n\n\"Erica will help you,\" he said. She picked up Sandy and took Opal's hand, leading them out. Jarrod and I settled in, watching as Dusty's change continued. We monitored the symptoms as they returned to what we expected from our changes; his fever, the pain and the moving in and out of consciousness. \n\nThe rest of the family started arriving that afternoon. I had never had a family like this; my father had left while I was a baby. My Mom was a drunk, more interested in her fuck buddies and her booze to care about me. Computers had been my savior; I was gifted with them and I fell in with some other kids in school. I spent all my free time learning and hacking and used my knowledge to make my own money. It was only after I had been caught trying to burglarize Jarrod's mansion, and saw how his Coven worked, that I found out what a family was. \n\nEveryone had dropped everything when the news of Dusty's death was received. The fact that he was revived an hour later didn't change anything, they were already on the way. Dallas, Vivian and Austin plus his sister Denise shared a flight with Matt and Lucas Baldwin from Denver. Jacque took a flight to Madison so he could take his new spot as the Beta of the Tomah Pack, allowing Bobby and Tania to return. Brent had to stay at the Council until the new Council members were sworn in, but Patty and Talia flew down from Pittsburgh. Kimberly's parents and her younger sister flew in from their Pack in Kalispell, Montana. \n\nThe Alpha and her daughters woke just before five, and immediately went to check on Dusty. He was still doing well, considering how traumatic the process was. Jarrod sent them upstairs after a short visit when Opal's stomach started to growl. They were shocked to see everyone waiting for them around the dinner table. \n\nRandall's POV \n\nThe mood at dinner was somber; at moonrise we would send Beta Bull to the heavens. It was good to see everyone, but the circumstances sucked. Kimberly put on a brave face. She was Alpha and couldn't break down no matter how much she wanted to. \n\nThe entire Pack gathered in the ceremonial area after sundown. The pyre had been built, and his body had been wrapped and placed upon it. His sons had taken care to find even the smallest of his remains. His face was covered with the white cloth. Kimberly and her children led the procession, each person laying a flower, a photo or a trinket on the pyre before saying a prayer and moving on. His sons were last, each taking a moment to say their goodbyes. Rita, the eldest Pack member, blessed him and asked the Moon Goddess to accept his spirit. \n\nThe three boys put flaming torches into the dry kindling at the base of the pyre and then stepped back. The pyre caught quickly, the flames soon reaching twenty feet into the sky. I looked up, seeing a shooting star move under the moon. It was a good omen. \n\nThe boys would remain until the fire was gone so they could gather the ashes. I walked away, hand in hand with Talia as she talked with her sister and Erica. \"Are you guys tired or do you want to go for a run?\" \n\n\"I could really use a run,\" Erica said as she looked at Eduardo. \n\nPhillip had fallen asleep on Tania's shoulder, and with a glance Patricia took her new grandson from her. \"Oh my Goddess yes,\" Tania said. \"My wolf is dying to get out after everything that has happened.\" \n\n\"It won't be too much? You haven't slept much,\" Bobby said. \n\n\"I wouldn't be able to sleep now anyway,\" Talia said. \"Come on.\" We moved into the woods, taking off our clothes and placing them in some boxes placed there for that purpose. I shifted into my wolf, Talia next to me, and we nuzzled each other before moving out. Tania's wolf looked much healthier than the last time I saw her, and Bobby was as attentive as always. Eduardo didn't have a wolf, but he had vampire speed and would easily keep up. I set a fast pace as we ran to the west, making a wide turn as we closed on our destination. \n\nEduardo zipped forward, opening the gate for us at the end of the heavily wooded draw with rocky cliffs on each side. We reached the pool, the waterfall glowing in the shine of the three-quarter moon, and leaped off the rock into the spring-fed cool water. \n\nI shifted and turned to Talia, who surfaced by me. \"This place is amazing,\" she said. \"Why didn't you show me this before?\" \n\n\"Bobby and Talia needed it more than us,\" I said. I looked over, they had swum over to a rock and she was kissing him, their heads just visible in the shadows. Erica and Eduardo had moved under the waterfall, playfully splashing each other. \n\n\"It's beautiful.\" \n\n\"You're beautiful.\" \n\nWe swam for a while before Bobby decided we should all jump together from the top of the falls. \"Really,\" Erica asked. \n\n\"It will be fun,\" he said. We pulled ourselves out of the water and we followed Bobby and Tania to the top. The boxes were where I had a friend stash them, and I handed them out while the girls were looking over the edge at the dark pool below. They were giggling and pointing until they realized something was going on. \n\nTurning, they found the three of us kneeling, each with a ring in our fingers. \"I love you, my mate. Will you marry me,\" we said in unison. \n\n\"YES!\" The three girls squealed as we put the rings on their fingers that we had picked out after their return from the island. I put her tungsten ring with the cobalt blue inlay on her finger and whispered the spell. It would only come off if she intentionally removed it, and it would disappear in wolf form. \n\nWe sat together, and eventually Talia turned to me. \"I know I wanted romance, and this was romantic and unexpected, but why now?\" \n\nThe other girls were listening. \"We all want to marry our mates, but getting our families together is becoming increasingly difficult as we take over Packs and the Council. We thought that if we went into town tomorrow and got our licenses, we could do the ceremony after Dusty wakes up and Dad is able to come here.\" \n\n\"Three weddings, one big party,\" Bobby said. \n\n\"And we don't want to wait around forever, we want you to be legally ours, not just with the mating bond,\" Eduardo said. \n\n\"What about our Pack,\" Tania said. \"They should be involved.\" \n",
        "\"We can have a reception there when we get back home,\" Bobby said. \"It would be good to invite our allies once we are settled.\" Marriage was not as big in the werewolf world, but it was important for legal reasons and dealing with humans. \n\n\"We haven't mentioned the best part,\" Bobby said. The girls looked at him. \"Mom will only have two days to drive you nuts with her planning.\" \n\n\"You've got a deal,\" Talia said with a laugh. \"Come on, let's take the plunge.\" We stood together on the ledge and jumped, holding hands the whole way down. \n\nCh. 79 \n\nTalia's POV \n\nSulphur River Pack Lands \n\n\"We should go back,\" Randall said as I clung to him in the neck-deep water. \"In the morning we can go into town and register for our marriage licenses.\" \n\n\"I'm ready. Tania is itching to spend more time with her boy, I can tell. Mom doesn't mind, she loves having time with them, but she's been away too long.\" I got Bobby's attention and gestured towards home, he nodded. \"We're heading back in,\" I said loud enough for them to hear over the waterfall. \n\nEduardo looked at his mate, then shook his head. \"We're going hunting, we need some blood. We don't need the sleep anyway.\" Vampires didn't have to sleep at all, and as hybrids we were finding we could get by with an hour or two a day. It was fine with me. \n\nI wasn't planning to let Randall sleep much. \n\n\"Coming,\" Bobby said as he carried Tania to the rock. Lifting her up, she shifted back into her wolf and waited for him to do the same. Randall and I got out, shaking off the water before shifting. We followed the pair back to our clothes, then went back inside. \n\nIt was late, and many had gone to sleep already. We showered quickly then got into bed. \"You tired?\" \n\n\"Relieved,\" he said. \"I don't like being apart from you when people are in danger. I couldn't stop worrying until I finally heard from you, then we hear about Dusty and it all starts again.\" \n\n\"It's going to be better now,\" I said as I tucked into his side. \"I love you,\" I said. \n\n\"I love you, and I'm going to love you right proper tonight,\" he said with a smirk. He pulled me close, kissing me passionately before moving down to my breasts. I never thought of them as anything special, I was too athletic to have cleavage. He didn't care, his big hands took hold of them and I moaned in pleasure as his tongue hit my swollen nipple. He kept his hands busy with them as his mouth moved lower, kissing the ridges of my stomach before settling between my legs. \n\n\"Oh Luna that's good,\" I said as he took a long lick, his wide tongue pushing my lips aside. I was waiting for him to reach my clit when he froze. I looked down, my fingers in his hair, and tried to pull him to where I wanted him to go. He stared at my needy pussy with his mouth open in shock before his eyes met mine. \"What?\" \n\n\"You don't know?\" \n\nOh shit. I should have known, but I wasn't planning to tell anyone until his father arrived. \"I was trying to figure out how to tell you,\" I said. \"It's still really early, the Doctor figured it out when I was being checked after the attack.\" \n\n\"You're pregnant, love.\" I nodded, and he moved up and rolled onto his back, pulling me on top of him. \"We're going to be parents.\" \n\n\"Yes.\" I was happy and scared and worried, and I couldn't tell for sure what he felt about it. \"Are you happy? We never talked about this, I'm still young, we're not even married, we haven't started our new job, we haven't even LIVED together and what will everyone think and...\" He pulled me into a kiss, stopping my monologue of reasons why this wasn't the best news for us. When he let me up for air, he was smiling. \"You're happy?\" \n\n\"I'm thrilled, Talia. I'm shocked, but this is great news. I can't wait to tell everyone.\" \n\nI relaxed into his arms, relieved he wasn't mad. We'd never discussed birth control or when we wanted kids, we just mated and enjoyed each other. I thought I was all right because I didn't go into heat, but who knew what the normal was for a hybrid? \"Maybe we should wait to say something, at least until I'm a little farther along?\" \n\nHe rolled me onto the bed, propping himself up on his elbow. \"What's the matter? Did the doctor say something?\" \n\n\"No, it's just very early. I'd feel better if we waited until the end of the first trimester, just to make sure we're past the dangerous part.\" Werewolf pregnancies were rare and early miscarriages were common. No one knew why, but it did keep the population from growing out of control with our longer lifespans. \n\n\"Why didn't you tell me?\" \n\n\"I didn't know how you would react, and with everything else going on I thought I would wait.\" \n\nHe kissed me again, then moved down and kissed just below my belly button. \"Hey little one, it's Daddy. I can't wait to see you when you're ready.\" \n\nI started to cry as I watched him; he was going to be a great Dad, and I was so happy. \n\nI had to convince him that making love was not going to harm the baby, and he finally gave me what I needed before we fell asleep. \n\nI woke to a kiss, Randall was sitting on the edge of the bed and was dressed. \"Come on, love,\" he said. \"The other girls want to make an entrance with you to the breakfast table. There's betting going on over whose ring gets noticed first.\" \n\n\"Really? You woke me up for that?\" \n\n\"When it's worth twenty bucks, yeah. Come on, breakfast will be ready in twenty minutes, then we need to go to the courthouse.\" I rolled out of bed, showered and changed quickly and was ready to go. I looked down at my ring, I loved the design I'd picked out and the other girls had made great choices too. \n\nWe walked out of his room when Bobby knocked and said they were ready to go. Tania was jumping with excitement as I hugged her, and Erica was raring to go. \"Remember, no overt acts or you're disqualified,\" Eduardo said. \n\nWe walked down to the dining hall on the main floor of the Pack House. Breakfasts were buffet style and served for two hours to accommodate different schedules. We got in line, and the smells of the food really hit me. The eggs did something to my stomach, I didn't like it and then my stomach started to flip. I ran out the doors again, pushing open the ladies room door and barely made it to the stall before I threw up. \n\nI flushed the toilet as I sat back, trying to get my stomach to settle again. The door opened and I smelled Patricia coming in. \"You all right dear? Morning sickness already?\" \n\n\"Yes,\" I said. I stood up and went to the sink, running some water and cupping my hands to wash my face. She found a paper cup and some mouthwash and handed it to me, I swished out my mouth and grabbed the sink as I spit it back out. \n\n\"OH MY LUNA WHAT A RING,\" she yelled as she grabbed my hand. \"When did he propose?\" \n\n\"Last night,\" I told her. \"Come on, let's go back out before too many questions are asked.\" \n\n\"He's going to know something is wrong over the bond, Talia. You need to tell him.\" \n\n\"I did, also last night,\" I said. We walked back out, and a few people were gathered around. People had heard what Mom said, and then there were more squeals of happiness as Tania and Erica's rings were spotted. All the females were gathered around the three of us, while the men accepted handshakes and congratulations. \n\n\"What did you boys do last night,\" Mom said as she bounced with excitement. \n\n\"We all got engaged, we're heading to get our marriage licenses after breakfast,\" Randall said as he pulled me into his arms. \"We are going to take advantage of everyone being here to pull off a triple wedding.\" \n\nThat shut her up. \n\nFor about ten seconds. \n\n\"WELL GO EAT we have SO much to do have you picked out dresses and FLOWERS how will we and EAT ALREADY! We have so much to do!\" \n\n\"Mom, it's all right,\" I said. \"We have lots of time to get everything planned. We have to wait until Dad is here and Dusty's change is over before we do this, so we have until moonrise tomorrow.\" \n\nHer mouth dropped open, and she just looked at the six of us in shock. \"Tomorrow night.\" We just nodded as we waited for her to come back to us. \"You expect me to put together THREE weddings in two days?\" \n\n\"Yep,\" Bobby said. \"That'll keep you from worrying about Dusty.\" \n\n\"There's nothing we can do to help Dusty; we know what the change involves,\" I said. \"Plan the reception dinner and dancing, we'll take care of the ceremony.\" \n\nWe finally got our food and sat down with Mom, Kimberly, Vivian and Denise. Splitting out the responsibilities among them, we finished just as my pancakes were done. I looked over at Kimberly. \"Is Jarrod still with Dusty?\" \n\n\"He is,\" she said. \"He's in and out of lucidity, the fever is still going and he's in a lot of pain. He should come out of it tomorrow afternoon.\" \n\nI got up and gave her a hug. \"He's strong, it isn't fun, but he will be all right. So will you when you take the change.\" \n\n\"I'm scared, Talia,\" she whispered. \"I don't know if I can do it.\" \n\n\"We'll be with you.\" Randall and I went with her to see her mate while Bobby arranged transport. It was a long day; we got our licenses, then drove to Dallas to shop for dresses and get the men their suits. We weren't going to look the same, and we weren't stuck on frilly white. Only werewolves and vampires were going to be present at this ceremony, and you couldn't wear something that couldn't be pulled off easily when it was time to shift for the hunt. Satisfied with our selections and with express alterations, we were able to head home after dinner. \n\nThe next afternoon, Randall carried his oldest brother out to the horse corral. We warned everyone else away for safety including Kimberly, who watched from the upper floor of the Pack House. Only the hybrids and vampires were allowed to be around as Dusty came out of his change. \n\nThe fever was gone, and when his eyes opened the pupils were black as night, the whites of his eyes tinged with the red of bloodlust. Fangs descended as he searched for the scent of the fresh blood. We had cut the side of a sheep tied to the fence, and in a flash Dusty was on it. His fangs bit into the animals neck and he pulled deeply at the warm blood. \"You made it, Dusty. You're like me now,\" he said. \"Just relax and fill yourself with the blood, it will calm you down.\" \n\nIt took a few minutes for him to drain the animal and for his vampire nature to be satisfied. Jarrod and I ran him through some exercises to get him familiar with his new capabilities. \"Why can't I feel my wolf,\" he asked. \n\nI told him our theories about how his being bitten first, and his human body dying, might have affected things. \"Your wolf might come back on his own, or you might be like Tania and Kimberly could bite you and get him back. We'll have to see what happens.\" \n\nHe nodded, looking around with his new senses. \"I'm alive,\" he said. \"That's better than I had expected.\" He looked over at Jarrod. \"I'm starving, do you think I'm safe?\" \n\nJarrod explained the early signs of bloodlust and how to maintain control. \"For the next week, a vampire or hybrid is going to be with you at all times to help you adjust and make sure everyone is safe.\" \n\n\"I understand.\" We walked him back towards the house, and Kimberly and his children ran out to meet him. \n\nThat night, the back of the Pack House had been transformed with lights and flowers into a magical setting for a triple wedding. \"You ready to go,\" Jarrod asked me. \n\nI nodded. We had drawn straws, and I was going out first with Jarrod giving me away. I stepped out of the house, walking along the path to the stage where our mates were waiting. I was wearing a sheer silver halter dress that clung to my chest, then molded around my stomach and hips before ending at mid-thigh. The halter left my toned back and shoulders exposed, and a slit in the side would give him a flash of leg as I walked. Erica was next, she had picked a light blue mermaid-style off-the-shoulder dress that hugged her figure. Alpha Clark had come down from La Crosse to give her away. Finally, Tania came out in black dress with crystals sewn into the bodice and along the side. She was looking healthy now, and radiated happiness as Brent walked her down the aisle. \n\nOur men were waiting, dressed in suits with ties that matched our dresses. Elder Mildred Childress was performing the marriage, made legal by a mail-order ordination she'd gotten decades earlier. I hugged Jarrod, then he put my hand in Randall's as we faced each other. \n\nThe ceremony flew by, the vows were repeated, and the rings exchanged. I barely noticed the crowd as we kissed after being pronounced husband and wife. \n\nThe party went well into the night, and I was shocked at the number of guests that had shown up. The Texas packs were well represented, but they weren't alone. The Wisconsin Packs, especially Tomah and La Crosse, had many of their members show up. The new Werewolf Council and the remaining Vampire Council members were all here, combining the wedding with their first joint meeting. It was wild. \n\nI was sitting at our table while Randall went to get me some water when Tania sat down in my lap. \"How are you doing,\" I asked. \n\nShe was crying as she looked out over the party. \"I never dreamed I'd be this happy,\" she said as I hugged her. \"I would have died if you hadn't found me. Thank you for not giving up on me. You saved my life.\" \n\n\"You saved me too, sis. I was full of anger and had nothing else to live for. You gave me a reason to go on. Now look at how our lives turned out.\" \n\nShe wiped her face and leaned into me. \"I love you, Talia. The only way life could be better would be if you were pregnant too.\" \n\nI looked at her, she looked at me, and then we hugged each other again as we celebrated. \n\nThe End"
    ],
    "authorname": "partwolf",
    "tags": [
        "mates",
        "pack",
        "vampire",
        "war",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/alpha-killer-ch-76-conclusion"
}