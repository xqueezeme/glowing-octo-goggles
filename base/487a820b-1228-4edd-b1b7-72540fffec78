{
    "title": "To Love, Honour and Oh Pay Ch. 03",
    "pages": [
        "The rest of the week passed in a daze for Lizzie. She tried her very best to concentrate on work but kept finding herself gazing dreamily out of her office window. She kept remembering back to their evening; how they had danced together so closely, the way he'd kissed her tenderly on the cheek outside her front door, leaving her wanting so much more. As it happened, William was called away urgently with work for a couple of nights so it wasn't until Saturday morning, when they were due to travel to his uncle's, that she next saw him.\n\nLizzie had taken the opportunity, whilst he was away, to call in on her parents and break the news of their relationship. Obviously, they were at first surprised to discover that their daughter had been secretly dating such an eligible local bachelor for almost a year, but that surprised very quickly turned to delight.\n\n'Just as long as you love each other and he treats you right,' her father had said emotionally, which made Lizzie feel utterly wretched. She hated being creative with the truth at the best of times, but particularly where her parents were concerned. In the end, she told herself that the end justified the means. After all, in two years' time, they would own their currently rented home outright and she could comfortably support them for the rest of their lives.\n\nThe one thing that had been gnawing at her conscience was the conversation she had yet to have with Fiona; her best friend, who knew her better than anybody in the world. Lizzie was confident that Fiona would see straight through her in an instant which was probably why the conversation had been delayed. In the end, she called Fiona just moments before William was expected, knowing that his arrival could act as an excuse to cut their conversation short.\n\n'You've done what?' exclaimed Fiona, utterly astounded as her normally sensible friend admitted her part in an act of utter madness. 'How long's this been going on for?'\n\n'Just under a year,' stuttered Lizzie, watching their perfectly formed lie start to disintegrate before her very eyes.\n\n'Bullshit!' replied Fiona. 'You're not that good a liar.'\n\n'It's true,' breathed Lizzie. 'And he's asked me to move in with him.'\n\n'What did you say?' she asked, awestruck.\n\n'Yes, of course,' breathed Lizzie. 'After all, it is Yes-Tember,' she joked.\n\n'You're kidding me right? Have you totally lost your mind?'\n\n'A rich, good-looking guy asks me to live with him and I say yes,' argued Lizzie, suddenly finding some strength to stand up for herself. 'Why is that so hard to understand.'\n\nFor a moment, silence reigned. But the reprieve was short-lived.\n\n'Right, I'm coming over.'\n\n'There's really no need,' squeaked Lizzie. There was no way she was ready for William and Fiona to meet. At least, not whilst she was also present.\n\n'I'll be round in half an hour,' confirmed Fiona, hanging up before Lizzie had chance to stop her. She stood frozen to the spot, gazing at her phone when there was a knock at the door. Running to answer it, she found herself temporarily speechless at the sight of William on her doorstep. He looked divine, dressed-down in a pair of faded blue Levi's and a fleece. When he leaned in to kiss her on the cheek, he smelt amazing.\n\n'Hey, are you okay?' he murmured, walking confidently into the room and guiding Lizzie towards a chair in the kitchen. 'What's up?' he asked as he shrugged off his top to reveal a tightly fitting T-shirt which displayed a lithe body and attractively muscled arms.\n\n'Fiona,' sighed Lizzie, slumping on the table. 'I've just told her about us. I'm sure she doesn't believe me and she's on her way over. Now!' she added in a raised voice, as William's features failed to respond with the appropriate level of animation, given the gravity of the situation.\n\n'Would you like me to come back later?' he asked. 'We can head over to my uncle's after lunch instead, if that makes things easier?'\n\n'No...yes...oh, I don't know,' mumbled Lizzie. 'It's probably best you do meet each other, but we need to get our story straight or she'll see right through us.'\n\n'Okay, just relax,' he said soothingly. Standing behind her, William pulled her shoulders upright and then started to handle her hair. It was very soothing, calming and inherently sexy. In no time at all, Lizzie realised she had exhaled a loud moan which she quickly tried to disguise as a deep breath.\n\nIgnoring her, William continued to play and gently tug her hair and it wasn't long before Lizzie was moaning once more.\n\n'Sorry,' she murmured, unable to prevent herself from feeling seriously turned on.\n\n'Why are you sorry?' he said quietly. 'I asked you to relax and you are.'\n\nLizzie wasn't entirely sure if that was true. Her body felt primed, rather than relaxed, but he didn't need to know that. After some more breathy moans, William expertly turned her hair in his hand, grabbed a hairgrip from the table and pinned it up on her head.\n\n'The only thing that will give us away is your reaction,' said William quietly, running his fingers down her recently exposed neck. Predictably, Lizzie gasped loudly as goosebumps shot down her body and she flinched away from his touch.\n\n'You see,' he explained as he dropped his hands to her shoulders and commenced a gentle massage.\n\n'What?' groaned Lizzie, as she experienced a myriad of delicious sensations.\n\n'What you say will be of little consequence, but the way we react to each other is everything,' explained William. 'My family and friends expect me to be somewhat reserved and aloof, so I wasn't overly concerned when you said we'd be able to wing it the other night. But you're so delightfully open in your expressions and emotions that your nearest and dearest will know straight away if we aren't authentic.'\n\n'Oh God, I'm sorry,' sighed Lizzie, heat rushing to her chest as William's magical fingers kneaded a knotted muscle.\n\n'Don't apologise,' he replied. 'I like how you are. We just need to handle the problem.'\n\n'How on earth can we do that?' gasped Lizzie, as his fingers migrated down to her shoulder blades, pushing her rapidly towards a state of euphoria.\n\n'How long do we have before Fiona arrives?' asked William.\n\n'I dunno,' groaned Lizzie. 'Twenty minutes maybe.'\n\n'Mmmm. Not very long then.' Ceasing his massage, he grabbed Lizzie hand, pulled her to her feet and led her into the adjoining room. 'Follow me.' Lethargically, she obeyed. William paused momentarily to kick off his shoes, before laying down on the sofa and pulling Lizzie down to sit next to him.\n\n'Okay, touch me,' he instructed.\n\n'I beg your pardon?' she breathed.\n\n'You heard me, Miss Prim and Proper,' teased William. 'We need to become more familiar with each other. And quickly. This is the best way. So, touch me.'\n\n'Where?' whispered Lizzie, her tingling brain making logical thought nigh on impossible. \n\n'Wherever,' sighed William, allowing his head to sink into the cushion and closing his eyes. 'Just make me feel nice.' Unable to move, Lizzie found herself staring down at him disbelievingly, her mouth slightly open in shock.\n\n'Eighteen minutes,' he murmured. With a smile, he tapped his heavy watch with his index finger, whilst his eyes remained close.\n\nForced into action, Lizzie tentatively lifted the hand which lay alongside his body and held it in hers. Very gently, she began to caress his palm with her fingers, eliciting a sigh from a thoroughly relaxed William. As Lizzie admired his long fingers, she revelled in the feel of his skin, which was soft, smooth and warm. Growing in confidence, she allowed her fingers to travel up his hairy forearm and work their way over his upper arm, which undulated with muscles beneath his shirt. Her fingers grazed across his strong shoulder, before returning back down his arm once more. Upon reaching his hand, she lifted it to her mouth and kissed softly. William had clearly not been expecting this and Lizzie felt a bolt of immense satisfaction at being somewhat unpredictable.\n\n'Mmmm,' he groaned deeply, as her moist lips travelled across his sensitive palm. Opening one eye, he sent her the briefest of encouraging smiles before closing his eye once more.\n\n'How am I doing?' smiled Lizzie.\n\n'You're doing very well,' confirmed William. 'Fifteen minutes, keep going,' he added.\n\nEmboldened, and starting to seriously enjoy herself, Lizzie took him at his word. She allowed her hands to explore his broad chest which she could feel underneath his clothing. Pausing over his heart, Lizzie focussed on the slow, steady thump which helped to ground her. Her hands travelled down to his hard abdomen which sent a frisson of excitement through her aching form. She sensed that he had the most amazing body and found herself eager to explore further. \n\nAs her hands travelled across the thick, leather belt of his trousers to his protruding hips, she noticed William's breath had started to shorten and speed up, suggesting that he wasn't quite as laid back as he liked to make out. However, he was clearly enjoying himself, the extent to which became quite clear when Lizzie observed his erection straining against his trousers. With a secret smile, her hands continued down his thickly muscled thighs to his large feet, which she tenderly stroked, to more heavy breathing.\n\nReturning back up his leg, Lizzie found the path of her hands pausing at his upper thigh, gazing at the swelling beneath his trousers. As though providing unspoken consent, William gently ran his hand along her thigh, his eyes remaining closed. Needing no more encouragement, chewing on her lower lip with concentrated effort, Lizzie lightly trailed the backs of her fingers along his impressive, swollen length, before continuing up his torso. William's response suggested he wasn't unmoved when his stomach muscles tightened. Simultaneously, from deep within his throat he emitted a whimpering growl; the kind a girl could get addicted to hearing. Inhaling swiftly, Lizzie herself let out a deep sigh of satisfaction; a primal reaction which she couldn't prevent.\n\nGrinning widely, her fingers began to tenderly stroke his face; his tanned forehead, slightly stubbled cheeks and chin and sensitive ears. Occasionally running her hands through his hair, she repaid him for the lovely sensations he'd given her earlier. Finally, she smoothed her thumb across his lower lip to more sighs before retracting her hands away from his body.\n\n'How did I do?' she asked breathily, surprised to observe her hands trembling when she replaced them in her lap.\n\n'Astonishingly well,' sighed William after a moment, slowly returning his gaze to her. 'Now come here and join me.' Wide-eyed, Lizzie allowed William to pull her down to the sofa until she lay horizontally beside him. Smiling, his hand moved around to cradle her neck, where he stroked tenderly.\n\n'You like that, don't you?' he murmured. He needn't have asked, given the reaction his touch was clearly having on Lizzie's quivering body. 'It's turning you on,' he stated simply.\n\n'No,' she denied.\n\n'You're sure?' he grinned, continuing with his teasing touch. 'Your neck is turning red and your breathing has changed.'\n\n'I'm sure,' she confirmed. Damn him for pointing out the red flush on her neck which always seemed to accompany sexual excitement.\n\n'How about now,' he smiled, dropping his mouth to her neck and kissing gently. By this stage, Lizzie was unable to prevent a long, low groan as arousal flooded to her core and her aching nipples tightened almost painfully between their bodies.\n\n'Oh God,' she breathed, her entire frame jerking.\n\n'But you're still not turned on, right?' he teased, kissing lingeringly down her throat.\n\n'No,' she growled. As she moved her legs to reposition herself, she could feel how wet her panties had become. Aware of her swollen pussy lips and throbbing clit, her predicament felt delicious.\n\n'I know you like games,' he murmured matter-of-factly, his hands moving round to tenderly rub her back. 'But do you like punishments too?'\n\nAt his words, a dull thud reverberated deep in Lizzie's abdomen as she stared back in astonishment, her breathing now fast and shallow. Without displaying any emotion, William returned her gaze, his black eyes sparkling with resolve. He clearly hadn't been joking. Lizzie licked her lips and struggled to make her dry throat swallow. Suddenly, there was a knock at the door which broke Lizzie's trance. Slowly, she retracted herself from his body, stood up and tried to smooth down her clothes. \n\n'Does it look like we've been up to something?' she stuttered shyly, trying to rearrange her hair.\n\n'No,' he smiled sexily. 'Because we haven't, have we?'\n\n'Not sure,' murmured Lizzie, shaking her head. She walked towards the door, glancing back at William before opening it to see him standing up and adjusting his clothes in order to try and hide his obvious arousal. He glanced up at her and shot her a quick wink.\n\n'Ready when you are,' he murmured.\n\n'Oh God!' shrieked Fiona, the moment she was released into the room. From their heated faces, crumpled clothing and the way their bodies still seemed to be silently conversing with each other, it didn't take much imagination to realise that she'd just disturbed something fairly significant. 'Shall I come back later?'\n\n'Of course not,' murmured a dishevelled Lizzie, ushering her forwards.\n\n'Hi Fiona,' said William smoothly, holding out his hand. 'I'm delighted to meet you at last.'\n\n'And I, you,' purred Fiona, clearly immediately overwhelmed by William's charm and good looks.\n\n'Cup of tea,' croaked Lizzie, deciding it would be a miracle if she got through this in once piece, given the heart palpitations she was currently experiencing.\n\nOver a calming cup of tea, Lizzie's heartrate slowly descended to sub-critical levels. Indeed, she found herself unable to stop smiling as she watched her best friend and her...whatever William was...get along like a proverbial house on fire. Lizzie found she couldn't prevent herself from keep glancing across at William, their previous conversation running around her head. On occasion, she caught him gazing at her, predictably causing her to blush.\n\n'Well, if you'll excuse me ladies, I've got some errands to run,' announced William when they'd finished their beverages. 'Don't get up,' he added to Lizzie, placing his hand on hers to prevent her from rising. As she sat back down, he lifted her hand to his mouth and kissed it tenderly, maintaining eye contact. \n\n'Will you be okay to leave for my uncle's in an hour, or would you like a little longer?'\n\n'An hour will be fine.'\n\n'Then I'll see you later,' he murmured, somewhat suggestively. 'It was a pleasure to meet you, Fiona,' he grinned, before sending Lizzie a final wink and sauntering out of the door.\n\n'You too,' replied Fiona to his departing back. 'Holy fuck!' she breathed, once they'd heard the front door close.\n\n'What?' grinned Lizzie.\n\n'Fuck off!' squeaked Fiona, giving her a friendly shove. 'What? What do you think? He is absolutely divine! You lucky, lucky cow...being able to shag that. Why didn't you mention him before now?'\n\n'We were just taking thing slowly. He's in the public eye and we just wanted to be sure...'\n\n'That makes sense, I guess,' agreed Fiona. 'After all, there are enough rumours about him, without trying to create any more.'\n\n'What rumours?' asked Lizzie, genuinely interested.\n\n'That he doesn't speak to Lord Mortimer.'\n\n'I know that's not true,' protested Lizzie. 'We had dinner with him this week and we're staying at Cranworth House tonight.'\n\nFiona raised an eyebrow at the admission of her best friend rubbing shoulders with the local toffs, but kept her opinions to herself. 'Another rumour is that he's gay,' she continued. 'Which clearly isn't true.'\n\n'No?' smiled Lizzie.\n\n'No,' chuckled Fiona. 'He barely took his eyes off you.'\n\n'Really?' \n\n'Yeah, really you daft cow,' smiled Fiona, amused by her friend's surprise. 'What I wouldn't give to have a man look at me that way...but then of course, your gaze scarcely left him either.'\n\n'I know that's not true,' she argued.\n\n'I know it is!' laughed Fiona. 'You were all gooey and quiet in front of him; most unlike you. In fact, I'm not sure I've ever seen you react like that before. It must be love.'\n\n'Anything else?' asked Lizzie, trying to hide her obvious discomfort. A voice in the back of her head reminded her that, even though their relationship was starting to feel increasingly real, it wasn't. She was under contract and William was clearly just a very good actor.\n\n'Yeah. That unless he marries within the next year, he loses the estate.'\n\n'Well, that is true,' Lizzie confirmed.\n\n'What? Seriously?' asked a dumfounded Fiona. 'You mean? You're going to...you're going to get married?' Lizzie nodded shyly. Fiona leapt up from her seat and embraced her best friend warmly.\n\n'Oh my God. I'm not sure I've ever been so happy,' gabbled Fiona, tears leaking from the corners of her eyes. Having held each other tightly for a long moment, they resumed their seats.\n\n'It's not been officially announced yet though,' mumbled Lizzie. 'So keep it to yourself.'\n\n'Of course. So, how did you meet?' asked Fiona, innately curious.\n\n'He came into the office one day,' explained Lizzie, now on more solid ground. 'As a client.'\n\n'And what's he...you know...like?'\n\n'Sexy,' said Lizzie truthfully, knowing that wasn't what Fiona was asking, but trying to buy some time. 'Very sexy.'\n\n'And what's he like in bed. My God, the sex must be fantastic,' she said dreamily. 'You two spark off each other something criminal.'\n\n'No comment.'\n\n'Spoilsport!' complained her best friend. 'God, I'm so jealous.'\n\n~~~~~~~~~~~~~~~~~\n\n'How are you feeling?' asked William kindly, as they sped along the rural lanes abutting the Cranworth estate.\n\n'Surprisingly good,' admitted Lizzie. 'Much happier for talking to Fiona, definitely.'\n\n'I really like her,' enthused William. 'She's a great character.'\n\n'That's certainly one way to describe her,' chuckled Lizzie. 'Another good word is \"liability\". Speaking of which, I really hope I don't mess up this weekend. I'm suddenly feeling unusually nervous.'\n\n'You'll be fine,' soothed William. 'But just for the record, I think this weekend is a hideous idea.'\n\n'Why agree to come then?'\n\n'Because you'd already arranged it,' replied William wryly. 'I'm not a great one for venturing out, when I don't have public engagements.'\n\n'I'm sorry,' said Lizzie, feeling genuinely remorseful. 'I thought I was helping.'\n\n'It's fine,' replied William with a dismissive shake of his head.\n\n'I'll try not to give away our big secret and really mess things up. I hope your uncle doesn't work out we aren't actually a couple.'\n\n'He won't. He'll be too busy trying to highlight my failings, to worry about the depth of our relationship.' Lizzie glanced across at him\n\n'What happened between you two?' she queried, taking a swift glance across at his profile and noting his scrunched up brow. 'Why the hostility?'\n\n'Resentment, I guess,' sighed William unhappily. 'Do we have to talk about this?'\n\n'No,' said Lizzie gently. 'Although it is something that a man would share with his future wife.'\n\n'Fine,' sighed William, his knuckles whitening further around the steering wheel. 'My father died, nearly twenty years ago.'\n\n'I know, I'm so sorry,' sighed Lizzie, a strange combination of warmth and long-forgotten grief momentarily rushing through her.\n\n'At the time, I wasn't even twenty years old and was considered too young to pick up the enormous responsibility of running the estate. Uncle Edward was enjoying a much-decorated career in the British Army. On his deathbed, my father signed inheritance of the estate across to his brother, on the agreement that I would be his sole heir.'\n\n'But you wanted to take control of the estate on the death of your father, even though you were only a teenager?'",
        "'Yeah,' nodded William sadly. 'So, of course, alongside the enormous feeling of grief I experienced upon losing my father, I also felt a great resentment towards the man who'd been given my birth right. In turn, my Uncle resented me because his promise to my father forced him to leave the army; the only place he'd ever felt he belonged. As a result, our relationship has been somewhat strained ever since...actually, that's a bit of an understatement... it's been a nightmare.'\n\n'I'm sure your father made his decision for the very best reasons,' said Lizzie boldly, feeling she ought to stand up for the man.\n\n'With all due respect Elizabeth,' snapped William, much more aggressively than he'd intended. 'You're in no position to comment.' Silenced by his sharp retort, Lizzie sat quietly, sensible enough to know that anything she tried to respond with would be the wrong thing to say. Some minutes passed until, at last, William eased his foot from the accelerator and smoothly drove the car between a set of enormous pillars and down a long driveway. Having driven through parkland for a short while, the driveway took a sharp right hand turn across an ornate bridge which crossed a gently flowing river, dotted with various wildfowl.\n\n'If you still think you can put up with me and my grumpy ways for two years,' William murmured somewhat sheepishly. 'Then welcome to Cranworth House; the place that will soon become your new home.'\n\n'Oh my goodness!' gasped Lizzie, as an enormous country estate house came into sight. It was built of the softest honey-coloured stone and seemed to nestle perfectly within its pastoral surroundings. Inexplicably, Lizzie's first thought was concerned with how long it must take to clean the huge windows. She quickly counted nine enormous windows across the ground floor front of the house. But then, of course, that was only the front-facing wall, plus the house was three stories high. In the centre of the house stood a number of columns, between one set was the front door. The columns also extended up to the second and third floors, allowing two huge balconies to exist which overflowed with foliage. Lizzie noticed a gardener pruning some Wisteria from the exterior of the building, so concluded that, as well as a fleet of gardeners, they would probably just employ a full-time window cleaner too.\n\n'You like it?' asked William quietly, as he pulled up in front of the house and killed the engine. Lizzie looked at him, confused by his tone. She got the impression that her answer really mattered to him.\n\n'It's incredible,' she breathed. 'Although I hadn't even registered we'd be living here.'\n\n'When I inherit,' explained William. 'We will move into Cranworth House and Uncle Edward will transfer into a smaller house on the estate. I will return to my true home.'\n\n'Of course,' murmured Lizzie. She was aware of all the detail but, at the time, she had been skim reading on behalf of her client, rather than appreciating the documents were actually describing the next two years of her life.\n\n'Shall we?' he sighed, sounding as though he was about to be led to the gallows. Lizzie flashed him a winning smile and nodded supportively.\n\n~~~~~~~~~~~~~~~~~~~\n\n'You can't blame me for asking,' bellowed Uncle Edward, swilling the last in a long line of pre-dinner aperitifs beneath his oversized nose. 'The timing of your marriage is enormously fortunate.' Lizzie sighed inwardly, as she saw anger rising in William's face and he prepared to respond. \n\nTheir first hour at Cranworth House had been pleasant enough. Uncle Edward had welcomed them jovially and showed them to their room. William had then offered to provide Lizzie with a guided tour of his childhood home. The building itself was incredible but the highlight for Lizzie had been admiring the range of artwork which would make even the British Museum blush. The wall-hung canvases ranged from precise, intricate Venetian scenes by Canaletto, through to thick, swirling oil seascapes by Turner. The utter despair of the situation the small sailboats found themselves in, stranded in the heart of a destructive, black storm, momentarily took Lizzie's breath away. Her tour finished in the portrait hall where Lizzie suddenly realised she had never before seen a portrait of somebody she knew before; and suddenly, three portraits she recognised hung before her.\n\nLizzie's daydreams returned to the here and now, as William prepared to snap back at his Uncle.\n\n'In happier circumstances, I wouldn't need to worry about the timing of my marriage, fortunate or otherwise.'\n\n'Please, Gentlemen!' cut in Lizzie, before Uncle Edward had an opportunity to retaliate. 'Can't we just celebrate our happy news, regardless of the timing?'\n\n'All I'm saying,' slurred Edward, waving his glass in front of him as though conducting an orchestra. 'Is that missing the deadline and allowing the estate to be transferred to charitable bodies, wouldn't be the end of the world.'\n\n'It would be the end of the world for me,' said William in a reasoned voice of ice-cold calm.\n\n'They might even do a better job of it, with multiple resources at their disposal.' Lizzie momentarily closed her eyes and sighed, knowing how much that comment would have hurt William.\n\n'Fortunately, we'll never know,' growled William. 'Because once we are married, I will take over responsibility of the estate and cherish and protect it for the next generation.'\n\n'I hope so,' breathed Edward. 'But like your father, I have my doubts...'\n\n'Don't say that!' exclaimed Lizzie, her hands bunching in fists. 'William's father never thought that of his son!' Uncle Edward turned his steely eye directly on Lizzie, showing some of the toughness he had once been known for on the battlefield.\n\nDo you know who I am?' he hissed at her. 'Show due respect.'\n\n'I certainly do know who you are, Lord Mortimer,' she replied, sounding clear and confident, despite quivering inside. 'And I apologise if you think I don't respect you. I do. But having served in the army for twenty-five years, I also thought you'd appreciate straight talking. I know William finds a lot of bowing and scraping unnecessarily tedious.'\n\n'You do?' quizzed Edward, shooting a glance at his nephew.\n\n'I do,' he confirmed quietly, his expression unreadable.\n\n'Hmph,' grunted the older man. 'Regardless, you still can't know the mind of my brother, young lady.'\n\n'I have a fairly shrewd idea,' said Lizzie quietly, dropping her eyes to her lap.\n\n'How?' he demanded.\n\n'You knew my father?' said a shocked William. Lizzie turned to face him directly.\n\n'I don't flatter myself that I knew him, no,' admitted Lizzie. 'But I met him a good number of times. He was my mentor at school.'\n\n'You never said,' he said quietly. Looking directly at him, Lizzie was saddened to notice his astonishingly unhappy expression and thought she saw a flicker of the boy, still mourning the early, unexpected loss of his beloved father. Without a moment's thought, she naturally slid her hand over his and held it tenderly. Looking surprised, but not upset, William squeezed her fingers in silent thanks for her support.\n\n'You never asked,' she smiled gently. 'He did an enormous amount to support the local school I attended. And I'm not just talking about money but a lot of his precious time too. When he turned up, he was treated like a rock star and often gave us talks on various subjects, staying to chat to us individually afterwards. Quite simply, he was my inspiration in my formative years and the main reason that a girl from a farming background found the courage and self-belief to pursue a legal career.' As both men were staring at her in disbelief, she continued.\n\n'One day, I was doubting my chances to get into University. \"Elizabeth,\" he said to me, in his wonderfully deep voice. \"Perseverance, ability and belief. You have them all, so use them to your advantage\",' Lizzie explained. 'But he'd also advised me that, being so young, I should keep my options open. He'd explained how his lifestyle had been forced upon him, through the early death of his own father. I remember him mentioning how he would hate such a similar fate to befall his own son. That would have been you...'\n\nWilliam nodded, still unable to speak, unshed tears lining his eyelids.\n\n'You are truly your father's son,' murmured Lizzie quietly to William, interlacing her fingers with his. 'No doubt about it. The first time we met, when you asked for my credentials, you informed me that my gender had nothing to do with my ability. And I knew. They were almost exactly the same words that your father had told me twenty years previously.' Squeezing William's hand, she turned her steely gaze directly upon Edward. 'I can therefore say with absolute certainty that your brother had no doubts about his son's ability to take on the role. His only concern was taking away the freedom he desperately wanted him to experience during his adolescence and young adult life...the freedom he had missed out on himself. And if I may say so, Lord Mortimer, it is very cruel of you to suggest otherwise. Excuse me,' she added. 'I'm going to dress for dinner.'\n\nAs she watched Edward's face fall with guilt, Lizzie released William's hand, rose from her chair and left the room. She had never specifically got dressed for dinner before in her life, much less used it as a reason to make her exit. But she'd watched enough of Downton Abbey to know it could be used as a bona fide excuse to leave a room in a stately home, so she stuck to her guns.\n\n~~~~~~~~~~~~~~~~~~~\n\nConcerned that she'd ruined her fledgling relationship with William before it had even got off the ground, Lizzie purposefully kept busy until the sound of the dinner gong beckoned her back downstairs. Having got changed, fiddled about with her hair and reapplied her makeup, with some trepidation she crept back down the wide, sweeping staircase.\n\n'They're in the dining room, Ma'am,' explained a kindly staff member, who had witnessed her uncertain descent. 'Shall I take you through?'\n\n'Thank you,' murmured Lizzie, following close on the woman's heels. She purposefully placed the hard, steely exterior mask on her face which she had required in courtrooms from time to time, that belied her churning stomach and nerves within. She was led into a sumptuous room, in the centre of which sat a huge walnut dining table fully laid with crystal glasses, fine porcelain and silver candelabras. The delicate flames of the lit candles flickered across the faces of the two men who sat, heads close together, engaged in what was clearly a very purposeful, involved conversation.\n\n'Elizabeth,' smiled William, rising from his chair the moment he realised she had entered the room. Striding towards her, he enveloped Lizzie in a huge, warm bear hug.\n\n'You okay?' he murmured in her ear.\n\n'Yeah,' she whispered back, feeling the stress leave her the moment his body touched hers. 'You?' Breaking apart, William simply grinned and winked at her.\n\n'Come and sit down with us,' he said. As he led her towards the table, Edward automatically stood and approached.\n\n'My dear, please can you forgive my earlier behaviour?' he asked immediately, fortunately negating the need for Elizabeth to find a conversation starter. 'You were correct to call me out. I've apologised to William. Please may we start again and I'll lay of the liquor?'\n\n'Of course,' smiled Lizzie kindly. The look on William's face suggested he was willing to build some bridges, so it certainly wasn't her place to hold a grudge. Once she had taken her seat, the two men dropped down beside her and continued their engaged conversation, as a member of staff poured out the required drinks. Lizzie sat quietly, happy to soak up her surroundings and witness the two men engaging in a fruitful discussion about their future plans for the estate as well as the progress William had made on his recent business trip.\n\n'I'm so sorry, Lizzie,' said William at last. 'We really don't mean to neglect you and talk shop all night. It's just this is the first opportunity we've had to discuss our plans for the estate.' Lizzie simply smiled, refusing to comment that it was only their joint pig-headedness that had prevented a conversation of this kind taking place before now.\n\n'I have to say, I feel I know you better today that at any time previously,' sighed Edward, shaking his head. 'And at least now, I understand the reason you kept clearing off at weekends, huh? Tell us Lizzie, where did you meet up during those secret trysts?' he teased.\n\n'Lord Mortimer,' began Lizzie, briefly catching a panicked glance from William.\n\n'Teddy, to my friends,' he interrupted, smiling.\n\n'Teddy,' repeated Lizzie respectfully. 'You must allow us to have at least some secrets?' Casting another look towards William, she saw him visibly relax once more, as she successfully weathered the storm of his Uncle's questioning. The older man gave a bark of laughter which ricocheted off the port decanters.\n\n'Very well, very well,' he murmured, admitting defeat. 'Now, ought we to open another bottle of claret?'\n\n~~~~~~~~~~~~~~~~~~\n\nLizzie had been somewhat concerned about how they'd handle the whole process of sleeping together although as it turned out, her worries were unwarranted. Following a nightcap after dinner, William suggested Lizzie go up to bed. He left a respectable quarter of an hour gap, before knocking on the bedroom door. During that time, Lizzie had brushed her teeth, got changed into her pyjamas and slipped into bed, butterflies flapping about in her abdomen, as she lay there waiting nervously.\n\n'Come in,' she said, smiling at his good manners. Lizzie felt a warm rush to her core, as William let himself in and carefully closed the door behind him. With just a dimly lit lamp at her bedside, Lizzie struggled to see him clearly through the darkness.\n\n'Sorry, I didn't want to assume,' he grinned, heading towards the en suite bathroom and closing the door behind himself. A matter of minutes later, he had returned, dressed in a T-shirt and shorts, and slid into the other side of the huge King-sized bed. Settling himself down, he turned to look at Lizzie, his head on the pillow.\n\n'Thank you for your support today,' said William seriously. 'It meant a great deal to me and you were amazing.'\n\n'You're welcome,' she said honestly, trying to control the shaking in her voice, as they lay beside each other in bed. 'I would have mentioned I'd known your father before today, but it never seemed to be the right time. Sorry.' Wasn't that the truth, she acknowledged to herself. So far, the time they had spent together had either involved him angering her or turning her on.\n\n'I actually find it seriously comforting that you knew him,' admitted William quietly. Unsure of how to respond, Lizzie simply lay there quietly smiling, trying to ignore the quickening beat of her heart. In the end, she had to say something, just to break the deafening silence.\n\n'So where did you go?' quizzed Lizzie, smiling kindly. 'What were you doing when you disappeared for days at a time?'\n\n'Temporarily escaping my life,' sighed William, momentarily closing his eyes.\n\n'Why would you want to do that?'\n\n'It's a very screwed up situation,' sighed William, rubbing the heel of his hand across his face. 'Are you sure you want to know?' Lizzie gave him the kind of look which queried his sanity. Of course she wanted to know!\n\n'Very well,' sighed William, shuffling further under the bedcovers. 'It goes back to my twenties. I was forever getting hit on by women. That's a guy's dream scenario, right? But I knew they weren't interested in me. Their interest revolved around my title, my family, money, the life I could offer them...' he said sadly. As he spoke, his body language and general demeanour made it clear to Lizzie that he had no intention of coming onto her and gradually, she found herself relaxing in his company.\n\n'I'm sure that's not true,' countered Lizzie. 'Don't be so harsh on yourself.'\n\n'It's all well and good, having some money behind you, but sometimes I envy the man who has nothing but love,' he admitted quietly. 'At least he knows what he has is real.' Lizzie wasn't entirely convinced that \"some money\" was an adequate description of twelve million pounds in the bank and a huge country estate, but she let it slide.\n\n'That's the downside of being wealthy,' William continued honestly. 'You never truly know people's ulterior motives.'\n\n'Unless you approach them with a contract?' murmured Lizzie slyly.\n\n'Yeah, well, I guess that's one way around it,' he admitted. 'Eventually I became infatuated with this one girl. We dated for a short time, but she ended up cheating on me.'\n\n'I'm sorry. I do know how that feels,' sighed Lizzie, thinking back to the pain Anthony's behaviour had caused her. 'It's shit.'\n\n'I broke it off, obviously, at which point, the female attention started to descend once more. I was hurting...badly. The pain was more than I'd ever imagined it could be and I couldn't possibly contemplate trusting another woman again. I just wanted it all to go away so...I might have told a few of the women who approached me that I wasn't interested because I'd realised I was gay,' said William uncomfortably.\n\n'So you're the source of that rumour?' exclaimed Lizzie. 'No wonder if stuck around for so long. Well that makes a lot of sense now.'\n\n'Obviously, once I'd made an omission like that, I couldn't very well date any local women. So, when I needed...'\n\n'Sex?' suggested Lizzie helpfully.\n\n'I was going to say human contact,' frowned William. 'But you're probably right. When I needed sex, I was forced to look further afield. I'd go away for weekends where nobody knew me.'\n\n'Prostitutes?' whispered Lizzie, subconsciously drawing the duvet around herself.\n\n'No,' he said, shaking his head. 'I've never paid for sex.'\n\n'So who?'\n\n'Initially, just meaningless one-night stands,' he admitted. Lizzie could see how uncomfortable this conversation was for him and felt incredibly grateful that he chose to share his secret with her. She had a feeling nobody else in the world knew the information she was now privy to.\n\n'And then?'\n\n'And then, more recently, an ex...the only woman I'd really loved, if I'm honest...we started to meet up.'\n\n'For sex?' confirmed Lizzie, surprised to feel a chill settling over her skin as she started to suspect that William's heart belonged elsewhere. \n\n'Yes, of course for sex,' replied William sharply, although Lizzie knew his anger was directed towards himself rather than her.\n\n'Not the one who cheated on you?' she breathed in disbelief. William nodded his head sadly. 'I've always considered dalliances with ex's to be a very bad idea.'\n\n'You're probably right,' he agreed sadly. 'Although your ex looked pretty interested the other night.'\n\n'Well, he's an excellent case in point...not to be trusted as far as I can throw him. So, why not just marry her?' asked Lizzie looking confused. 'If she was the love of your life.'\n\n'Well, by then, she was already married.'\n\n'Ah...'\n\n'Yeah,' sighed William sadly. 'So I became just a bit of extra-curricular fun.'\n\n'I assume her husband doesn't know?' \n\n'You assume correctly.'\n\n'And that's where you went, every time you disappeared and left your uncle wondering about your whereabouts?' confirmed Lizzie. William nodded, before briefly closing his eyes. \n\n'She's not always able to get away.'\n\n'You mean you sneak out?' asked Lizzie.\n\n'Yeah, I guess,' nodded William. 'It's pathetic, I know, but I just book a couple of nights in a nearby hotel, take my laptop and work. If she can join me, she does.'\n\n'At which point, you stop working,' thought Lizzie, but just managed to bite her tongue in time. For a moment there was a pause in conversation, the two of them both lost in their own thoughts. Lizzie's were centred on trying to erase the erotic image in her imagination of William making love; her heart had already had quite enough of a workout already today. ",
        "'Would you tell me her name?' asked Lizzie, eventually breaking the silence.\n\n'Georgia Fitzpatrick-Wright,' said William in a monotone voice. Lizzie gazed at him, a thoughtful expression on her face.\n\n'Fitzpatrick-Wright?' she repeated slowly. 'Not from the famous acting dynasty? Stunning beauty, nominated for an Oscar last year?' Running his tongue along his teeth, William slowly nodded to confirm.\n\n'Fuck!' exclaimed Lizzie. 'You don't do things by halves, do you? And you dumped her?'\n\n'She cheated on me. And we certainly aren't compatible...not long term.'\n\n'You must be the most difficult man to please that I've ever met,' said Lizzie in awe. 'And, believe me, I've met some difficult men.' Georgia was regularly towards the top of those ridiculous sexiest women in the world lists, and many a man's wet dream.\n\n'I'm not that difficult,' argued William. 'I just know what I need. Besides, you're doing a pretty decent job, aren't you?'\n\n'Yeah,' she said sarcastically. 'Under contract.' For a long moment, they simply gazed at each other. Unable to read the expression behind his dark eyes, Lizzie eventually broke the connection by twisting around to turn off her bedside light.\n\n'Well, thank you for...explaining things,' she continued quietly. 'I'd better...you know... get to sleep.'\n\n'Good night, Lizzie,' sighed William. 'Thank you so much for being here. And for doing this.'\n\n'Night,' murmured Lizzie, turning her back on him, closing her eyes and praying that sleep would soon take her. It didn't. Instead, she lay there for a long time, staring up at the ceiling through the darkened room, listening to the comforting sounds of the great old house creaking and groaning, as the wind clattered outside. \n\nAn hour passed and Lizzie had become bored with pointlessly tossing and turning, whilst listening to William's slow, regular breaths. She was tired and desperately needed to sleep but her brain seemed incapable of stopping it's feverish processing. Each snippet of information she'd gathered about William since she'd first met him, before that even, was being carefully considered and catalogued in her head. She found herself replaying every conversation they'd shared, every nuance. His admissions that he didn't trust easily, how he'd only loved once. And it made sleep nigh on impossible. With each sigh and restless repositioning of her body, she slowly but surely started to piece the facts together into a logical order, as though she was patiently and methodically completing a thousand-piece jigsaw puzzle, but without any idea of what the final picture should look like.\n\nShe might only be part way through completing the puzzle, but one thing was becoming crystal clear; she had placed herself into a ludicrous position. She had basically signed herself up to be the fictitious partner of a highly eligible bachelor whose heart had clearly been given to his childhood sweetheart, who now doubled as a beautiful, talented, successful British actress. But it was far worse than that because Lizzie knew that she was in serious danger of falling for William herself. Despite him making it abundantly clear up front that his interest in her related only to the financial benefits that their marriage would deliver, her own soft heart had fallen for the attention he'd been purposefully bestowing upon her. And it had been very purposefully done; she could see that now.\n\nFeelings of foolishness and anger bubbled just below the surface, as Lizzie realised that he had only ever come onto her for specific reasons. Like a game of chess, William had been carefully and deliberately prepping each and every one of his moves well in advance, and always with the intended audience in mind. At the dinner dance, he had been extremely tactile, particularly on the dance floor where many of his acquaintances could observe him, yet in the car on the way home, he had kept his distance. Similarly, at her house earlier in the day, William had primed her ready to receive Fiona, so she had been overflowing with sexual energy, yet had shown zero interest in her since. Indeed, they were sharing a bed right now and he had quickly managed to drift off to sleep, whilst she restlessly wiggled about, trying desperately hard not to touch his achingly delectable body, positioned just out of her reach. \n\nWilliam couldn't have made his position much clearer; he wasn't interested. Lizzie found herself feeling weak, angry and foolish for being so gullible and falling for his well-orchestrated moves. Clearly he had an explicit end game in sight and his actions so far had all been for show. Well two could play at that game. Vowing to herself that from now on, she would give as good as she got and not fall for any more well-rehearsed lines, Lizzie finally fell into a deep and dreamless sleep.\n\n~~~~~~~~~~~~~~~~~~~\n\nHaving slept surprisingly well, Lizzie woke gradually the following morning, stretching luxuriously against the thousand-thread count sheets. Slowly turning her head to face William's side of the bed, she quickly ascertained she was alone. With her decision from the previous night at the forefront of her mind, Lizzie felt a fighting spirit rise within her. She had been close to betraying her true feelings for William and that must not be allowed to happen again. It would only end in embarrassment (hers) and past experience had taught her that here was a very fine line between victim and victor. As she pushed away the bedcovers and strode purposefully into the bathroom for a long, hot bath, she began to prepare her game face. Because ultimately, for the sake of her own heart, that is what this must become. A game.\n\nHalf an hour later, pleased that today was a good-hair day, Lizzie floated downstairs and headed for the dining room, from which a low rumble of conversation could be heard. As she pushed open the door, she drank in her first sight of William that day and felt a tingle in her tummy; she couldn't help it. The man was gorgeous. He was standing with his back to the room, pouring cereal into a bowl. Shooting a broad grin towards a winking Teddy, Lizzie silently padded up to William and embraced him from behind in a bear hug, sliding her warm hands confidently around his taut stomach.\n\n'Good Morning my love,' she purred in his ear, amused to note William inhale sharply and almost drop the box of cereal in shock. His recovery, however, was impressively swift. Well aware his uncle was sitting nearby, he turned and tenderly cradled Lizzie's face in his hands.\n\n'It is now,' he murmured, before teasingly brushing his soft lips across hers. Lizzie glared at him questioningly, only to be met by a swift wink, before William released her and sat back down at the breakfast table.\n\n'If you don't mind, Lizzie dear,' said Teddy, interrupting Lizzie's temporary confusion. 'William and I would like to spend a couple of hours after breakfast, reviewing the accounts.'\n\n'Of course I don't mind,' said Lizzie, taking care to try and speak in her normal tone as she took her place at the table. 'Do you mind if I wander around your grounds? They look delightful.'\n\n'Help yourself,' said Teddy with a wave of his hand as he rose from the table. 'I recommend the Eggs Benedict, by the way,' he added to Lizzie as he walked towards the door. 'One of my cook's specialities.' With a smile, Lizzie watched the older man leave the room, before spinning around to face William.\n\n'What was that?' she demanded.\n\n'I could ask you the same question. My love,' he added for effect, smiling broadly.\n\n'You just broke our contract,' she whispered, having previously cast a glance around the room, to ensure they wouldn't be overheard. 'There is nothing in there about being permitted to kiss on the lips.'\n\n'Was there not?' he asked breezily. 'Sorry, I forgot.'\n\n'I'm not like your bit-part actress,' she added slyly. 'I won't be pushed around.'\n\n'You don't say,' smirked William, standing back up. 'Excuse me, I'll just go and chivvy the kitchen along. I expect its extreme hunger that's making you this tetchy.'\n\n'Tetchy?' exclaimed Lizzie, rising to her feet and pushing William against the wall, her finger stabbing at his chest. Somehow, he knew exactly which buttons to press, in order to rile and frustrate her. 'Now, you listen to me. You need me a damn sight more than I need you.' As she spoke the words, she suddenly realised how very close she was to his warm body, his eyes boring directly into hers. Both equally stubborn, neither willing to give an inch.\n\n'Is that right?' he growled, his warm breath bouncing across her lips as he placed his hand on her side, caressing gently. 'You sure about that?'\n\n'That's right,' she hissed. 'I can walk away, if you continue to invalidate our contract. Or I could sue you.'\n\n'But you wouldn't dare,' he growled, his fingers walking deliciously up her rib cage. 'Because you don't want to leave me, do you Lizzie?'\n\n'You think you're irresistible, but you're not,' she snapped, wishing she meant it.\n\n'I'm well aware that I'm not irresistible,' said William honestly. 'You're doing a depressingly good job of resisting me for a start.'\n\nBreathing heavily, Lizzie stared deep into William's eyes, trying to read his emotions, decipher the meaning of his words. Suddenly, as though taken over by a malevolent force, her hands slowly rose up to either side of his head. As her fingers slipped slowly through William's silky hair, she was startled to hear him moan faintly. The sound caused a rush of heat to her core, as his reactions silently urged her to continue. Trapping his hair between her fingers and pulling gently against his scalp, he exhaled indulgently as his pleasure deepened. With his eyes fluttering shut, Lizzie leant into his body as she pulled his head towards her, tenderly brushing her lips across his mouth. \n\nMomentarily stunned, a dazed William simply stood there, responding only with his mouth, returning the pressure Lizzie exerted on him. As their sighs of contentment ramped up, so did their kiss and Lizzie dared to open her mouth to him and allowed her tongue to slide across his upper lip. As though her action had flicked a switch inside his head, William's hands suddenly moved. With one hand migrating to her ass and the other on the back of her head, he pulled her against his hard, muscled body, reciprocating with his tongue, allowing their passion to ignite amidst the groans and sighs that began to fill the air. Suddenly, as quickly as their craving had started, William pulled away, just before a face appeared around the doorframe.\n\n'Sorry,' smiled Teddy, already backing out of the room as he noted their flushed faces and heaving chests. 'I'll give you a little longer. I'll be in my study.' Cheeks red with embarrassment, a trembling Lizzie continued to gaze at William in wonder.\n\n'You have just obliterated our contractual terms, Elizabeth,' he murmured into her ear. 'Be aware that your punishment is edging ever closer.' Lizzie couldn't work out from his voice whether he was angry or aroused, but the swelling she could feel against her pelvis suggested the latter.\n\n'I'll alter the contract on Monday,' breathed Lizzie, her shaking body wanting so much more than the bliss-filled taster she'd just received.\n\n'See that you do, Ms Silverton,' he growled, before walking out of the room to join his uncle.\n\n~~~~~~~~~~~~~~~\n\nLizzie had spent several hours wandering around the stately home's enormous grounds. As well as acres of pasture, farmland and woodland, she had also found gardeners trimming box hedges in the formal gardens and tending the huge kitchen garden, abundantly overflowing with succulent runner beans, ripe tomatoes and brassicas of every variety. The location was a paradise and Lizzie could hardly believe she would be lucky enough to live here soon, albeit temporarily.\n\nThe heavy foliage and hum of a distant lawnmower allowed William to creep right up to Lizzie without her becoming aware of his presence. When his soft hands slipped around her eyes from behind, she gasped. Reflex action caused her to try and leap away from his grasp, but he prevented this by maintaining a tight hold on her.\n\n'Causing trouble?' he murmured beside her ear, the feel of his warm breath causing an involuntary shudder to pass through her entire body.\n\n'Never,' she sighed.\n\n'Bullshit,' he groaned, dropping his lips to her tender, sensitive neck. 'You cause trouble wherever you go.' Lizzie groaned, momentarily leaning back against him in complete submission.\n\n'What do you think you're doing?' she asked, as her body naturally reacted to his touch and blood began to pump to her core.\n\n'My uncle's watching us from the upstairs window. I'm trying to make us look authentic.'\n\nLizzie spun around, her eyes scouring the windows of the great house for evidence that they were being watched. She found none. Her eyes returned to William, trying to search for clues as to whether he was lying or not. Deciding he was playing games, she thought she might as well play some of her own.\n\n'So he is,' she breathed.\n\nLeaning in, she ran her fingers through the hair on the back of his head, dropping her lips to his neck where she breathed against his sensitive skin.\n\n'Is he still there?' she growled, delighted at the sound of his increasingly noisy breathing and rapidly expanding chest.\n\n'Probably,' he groaned, as she lightly nipped from the base of his neck up to his ear lobe.\n\n'We'd better put on a good show, then?' she whispered, wrapping her lips around his ear lobe and pulling it gently between her teeth, to be flicked with her tongue. The groan which erupted from the base of William's throat sent a shiver straight down her spine. The more time she spent with this man, the more desperately she needed to fuck him.\n\n'You seem determined to push the boundaries of our contract at every possible turn,' he croaked, his hands automatically moving to Lizzie's hips, where he stroked her gently. 'Lucky you haven't wasted any time altering the documentation yet.'\n\n'I've never been great at following rules,' she admitted, before kissing across his stubbled cheek to the edge of his mouth.\n\n'Funny, me neither,' he admitted, turning his head and dropping his lips directly onto her unsuspecting ones. Tightening her grasp on the back of his head, Lizzie groaned and pulled him further into her, opening her mouth to accept his tongue as she did so. Growing increasingly aroused, the two of them sank into the deepest kiss, barely caring who might observe them. Lizzie wanted the moment to last forever, aware of her panties becoming increasingly damp whilst her nipples physically ached for his touch.\n\nEventually, the two of them pulled apart, Lizzie's face tender from the sustained abrasive action of William's stubbled face, whilst he'd kissed her into oblivion. Panting noisily, they simply stood gazing at each other, William's rock-hard erection nestled between their trembling bodies.\n\n'You have gold flecks in your beautiful green eyes,' he observed quietly. 'I've never noticed that before.' Lizzie stared at him questioningly until movement at an upstairs window distracted her. Turning her head, she was surprised to clock Teddy gazing down at them, causing her to back out of William's embrace. Once again, she was left wondering whether what they had just shared was real, or an elaborately staged piece of theatre.\n\n~~~~~~~~~~~~~~~~~~~\n\n'I'd like a word with both of you, before you leave,' stated Teddy, as William returned from loading their luggage into his car.\n\n'Sure,' agreed William, his eyebrows raised questioningly.\n\n'Individually,' explained Teddy. 'You first please, my dear,' he said, holding his study door open for Lizzie. With a swift glance towards William, she followed the older man, closing the door behind her. Sinking down into the deep leather chair on the far side of his desk, he waved his hand for Lizzie to sit down also. She complied, holding her hands in her lap and looking towards him expectantly.\n\n'You have arrived on the scene at a very opportune time,' he observed.\n\n'I have,' agreed Lizzie. 'As you previously implied.' Teddy observed her for a long moment, before clearing his throat and continuing.\n\n'We may not have been close over the years, but I can say with absolute certainty that I've never seen William as happy as he is with you. I'm not convinced he's ever truly loved before; he's certainly never been loved back.'\n\n'Really?'\n\n'Mmm. He acts tough, invulnerable...incapable of being hurt, but he isn't. Please don't break his heart,' he murmured, his voice shaking slightly.\n\nLizzie took a deep breath and momentarily closed her eyes, feeling incredibly moved at the obvious affection this man still held for his nephew, despite their history.\n\n'I give you my word that I won't.' Not least because I don't have his heart, thought Lizzie to herself.\n\n'Very well,' accepted Teddy, with a further wave of his hand. 'Send him in, will you please?'\n\nLeaping up from the chair, Lizzie scuttled towards the door, passing William on the threshold. His stare penetrated deep down into her very soul.\n\n'You okay?' he asked, his fingers gently trailing against hers as they passed. Unable to speak, with a brief smile, Lizzie nodded bravely. Hearing the door closed behind her, she kept walking until she reached the sanctuary of the yellow drawing room.\n\n'I hope you didn't embarrass her,' admonished William, as the door closed behind him and he found himself face to face with his uncle.\n\n'How would I possibly do that?' asked the old man.\n\n'God only knows. By asking her if she loves me, or something,' exclaimed William, striding around the room.\n\n'No need.'\n\n'I'm sorry?' he breathed.\n\n'There's no need to ask her,' Teddy explained. 'It's blatantly obvious she loves you.'\n\nHis pronouncement was met with a long silence as William gazed in astonishment. Taking advantage of the unexpected lull in conversation, Teddy continued.\n\n'When you've seen as much of life as I have...both good and bad...love isn't a difficult thing to recognise. The look on her face, when you walk into the room is almost identical to yours, the first time I took you up in a light aircraft as a kid. Do you remember that day? Wonder, excitement, astonishment... I only hope you can prove yourself deserving of her,' he concluded.\n\n'I hope so too,' croaked William, unsure of what else to say.\n\n'I've only got one piece of advice for you, boy,' concluded Teddy.\n\n'Which is?' queried William, barely wanting to know the answer.\n\n'Don't screw it up.'\n\n'I will certainly try my best not to,' he confirmed.\n\n-----------------------\n\nThank you for taking the time to vote or comment.\n\n----------------------"
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "heir",
        "england",
        "attraction",
        "stranger",
        "anticipation",
        "tease",
        "friendship",
        "proposal",
        "legal"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/to-love-honour-and-oh-pay-ch-03-1"
}