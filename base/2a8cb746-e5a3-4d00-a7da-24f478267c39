{
    "title": "Love Story, Lubbock Style",
    "pages": [
        "\"Why not? My dad has a camcorder.\"\n\n\"Will he let you use it?\"\n\n\"Um...well, he never uses it.\"\n\n\"That's not what he asked, dumbass!\"\n\n\"Hey, knock it off!\" a loud voice said, interrupting the other two people.\n\nThe arguing stopped, and the other two boys waited for their unofficial leader to speak. Like all three of them, Ryan Young was 12 years old. And like the main character on the teen TV show, Dawson's Creek, Dawson Leery, Ryan had big dreams of being a Hollywood director one day. He and his two best friends, Adam Smith and Carlos Lopez, had already made one over the summer break, a cheesy horror movie, and now they had nearly three weeks to shoot, edit, and produce another a second 'film'.\n\nRyan paused for effect then said, \"Arguing doesn't accomplish anything. We need to focus.\"\n\nNo one else said anything as they waited for the wanna-be director to tell them what to do.\n\n\"Carlos. Ask your dad if you can use the camcorder.\"\n\n\"I could just take it,\" the young Latino-American boy said.\n\n\"No. That's not the way we do things. Get his permission.\"\n\n\"Okay. Fine. I'll ask. Jeez.\"\n\n\"Adam. You've got money. We need some costumes and props. Can you hit your mom up to make them and maybe help us buy a few things?\"\n\n\"I got money of my own,\" the son of one of the wealthiest families in town said.\n\n\"Yeah, but same deal. If we get your parents to buy in, we have less problems along the way, right?\"\n\nAdam did have money. He just didn't have brains. Or at least not any that he cared to use very often.\n\n\"All right. Fine. I'll get her to do it.\"\n\n\"No, you ask her. Nicely.\"\n\n\"Fine! Jeez already,\" Adam snorted back.\n\n\"So what are you gonna do?\" Carlos asked their fearless leader.\n\nHe smiled then announced his plan.\n\n\"I...am going to get the most beautiful girl in Mackenzie Middle School to be our leading lady!\"\n\nThe other boys looked at each other then started laughing.\n\n\"Yeah, right! Like Hannah Summers is gonna be in a movie with us!\" Adam declared with certainty.\n\n\"She will,\" Ryan said. \n\n\"Yeah? How are you gonna do that? She's 14, in 9th grade, and smokin' hot!\" Carlos wanted to know.\n\n\"Just leave that to me. I got this,\" Ryan told him.\n\nThe truth was that he was one of the cutest boys in the 7th grade, but even so, Hannah Summers saw him as a little kid\u2014if she even noticed him at all. Besides, she had a boyfriend already, and he was a sophomore in high school. And he was big. Really big. Even so, the boys knew that if anyone could pull this off, Ryan could. \n\nHannah was beautiful, but she was also really nice. And everyone who knew her was aware that she'd lost her dad almost three years ago in some kind of accident and still felt sorry for her because she was as nice as she was pretty.\n\n\"Okay. Good luck with that,\" Adam said with a shake of his head.\n\n\"You get the money, and I'll deliver Hannah, okay?\" Ryan told him.\n\nSatisfied with the beginning of their plan, Ryan asked if there were any questions. No one had any, so he told them to meet back at the abandoned warehouse the next afternoon with the camcorder and a buy-in from Adam's mom.\n\nIt was mid-December, and school had just let out. But the Three Amigos, as they liked to call themselves, stayed after and hung out on the bleachers by the baseball field to go over the logistics of their next movie. Ryan hadn't thought of a title yet, but it was definitely going to be romantic, and if he could get even a modest amount of funding, it would be as good as The Notebook and a movie Lubbock would talking about for decades.\n\nThe truth was that only a handful of people would likely ever even see their production, and they would be the only ones talking about it at all, let alone for years to come. None of them realized yet how they'd look back on it, but there would be plenty of head shaking, laughing, and questions like, \"What were we thinking?\"\n\nWhen Ryan got home, he perked up immediately when he saw his Uncle James. Only Ryan's father, Pete, who was James's older brother, still called him Jimmy, and he was the only one James didn't correct for using his boyhood name.\n\n\"Uncle James! Whuddup?\" Ryan said as he saw his uncle working on his dad's computer.\n\n\"New website for your dad. What do you think?\"\n\nJames turned the iMac computer screen around and showed off his design.\n\n\"Awesome! That's Dad's?\" the amazed boy asked.\n\n\"He has to approve it, but if he likes it, yeah.\"\n\n\"That totally rocks!\" his nephew said as he continued to admire the layout and the colors.\n\nPete Young was 45 and ran a landscaping business, and the website needed a complete overhaul. James felt certain that this was exactly what his big brother wanted, and felt equally confident it would attract new customers. \n\nPete was actually his half brother, and that was a big part of the reason for their 17-year difference in age. Their father had remarried later in life and James had come along as a consequence of his mother's insistence on having a child of her own. \n\nThe brothers had never been close until their father passed away a couple of years ago, but since the funeral, they'd bonded in a way neither of them ever thought possible. And the best part of it all was how Ryan had made a new best friend in the form of his Uncle James who knew everything about computers and designing websites.\n\n\"Dad!\" Ryan said when his father walked in. \"Check it out!\"\n\n\"Nice!\" his father said after a very quick look told him he agree it was good. A closer inspection told him it was fantastic.\n\n\"You're a genius, Jimmy!\" the older sibling said.\n\n\"You're happy with it?\"\n\n\"Thrilled even. It's perfect. What do I owe you?\"\n\nHis younger brother laughed then said very seriously, \"A favor.\"\n\nHis brother raised an eyebrow but didn't respond.\n\n\"I'll let you know what and when,\" James told him.\n\n\"Hmmm. I know it won't be setting you up with some hot chick. Lord knows you've got more of them than you can handle,\" Pete said with a chuckle.\n\nRyan laughed because he knew that was true, and he was also now just old enough to realize he might be as good looking as his uncle one day. And were that the case, he couldn't help but think that maybe even Hannah Summers was a possibility. It was a long shot to be sure, but like his Uncle James said, \"You gotta dream big.\"\n\nJames laughed then said, \"Okay. I'll lock this in and we'll make it active if you're sure it's what you want.\"\n\nPete took one more careful look at everything then told his brother to 'do it'.\n\nJames showed Pete how to find out how many hits he was getting once it was up and running, then said something precautionary.\n\n\"If you want to change something, please don't try and go in and do it yourself, okay?\"\n\nJames knew computers. Pete knew landscaping. And he knew enough to know not to get involved with things he didn't understand, and computers were one of them, so he promised he wouldn't.\n\n\"So? What's up with my favorite nephew?\" James asked once he was finished working.\n\n\"We're making another movie!\"\n\n\"Oh. I see. Is it gonna be like the last one?\"\n\nJames didn't have the heart to tell his buddy his first attempt was bad. Really bad. He and his friends had put the whole thing together on their own, and that was what mattered, so James told them it was great. It was quite possibly the cheesiest horror movie ever made, and the only question was which was worse\u2014the acting or the props and all the fake blood.\n\n\"This one's gonna be even better, Uncle James! And it's gonna be so romantic, any girl who sees it is gonna cry!\"\n\nJames managed not to laugh when he imagined the girls crying due to how awful it was, but he knew Ryan had a passion for this, and if there was any way he could be of assistance, he'd do it.\n\n\"Hey. Tell you what. If you want some help with this one, just let me know, okay?\"\n\n\"Really?\"\n\n\"Yeah. One of the nice things about being self-employed is being able to set your own hours. So if I can help out, give me a holler, okay?\"\n\n\"Cool!\" Ryan said as they high fived.\n\n\"So...are you seein' anyone these days?\" his uncle asked, also very seriously, even though Ryan was still a little too young for that.\n\nRyan smiled in a way that said he liked a girl, so his uncle pressed for information.\n\n\"Who is she? Is she hot? Does she like you, too?\"\n\n\"She's way hot!\"\n\n\"And?\"\n\n\"I...I don't know. I haven't exactly told her I like her.\"\n\n\"And why not?\" his confident uncle asked.\n\n\"Because. It's...she's...it's just complicated, okay?\" the very mature 12-year old replied.\n\n\"Is she...older?\" James asked with a little smile.\n\n\"Maybe. A little. But she might already have a boyfriend. I've seen them together a few times, so...\"\n\n\"Ah, okay. Yeah, that does complicate things. But you can work around that, you know.\"\n\n\"How?\" Ryan asked, now very interested.\n\n\"You're a movie director, right? And he's what? Maybe a football player or some other kind of loser claim to fame?\"\n\nRyan laughed so it hard it made James laugh.\n\n\"He's like really big,\" his nephew explained.\n\n\"Yeah, but you're a director. And chicks dig that.\"\n\nRyan's cheeks glowed a little bit when his uncle leaned closer then said as though it was a big secret, \"And you're a Young, and when it comes to women, we got it goin' on, you know what I'm sayin'?\"\n\nThe pre-teen only smiled and nodded, not sure how to respond. Saying, \"Yeah, I know,\" sounded cocky, and he'd been raised to never be arrogant. But denying it was untrue and lying was the only thing he'd ever been spanked for. It had only happened once, and ever since, Ryan did his best to always tell the truth no matter the consequences.\n\nSo James answered for him.\n\n\"You're a good-lookin' dude, Ryan. And you're modest.\"\n\nHe paused then said, \"And chicks dig that, too.\"\n\n\"Thanks, Uncle James,\" the boy said more for the 'advice' than the compliment. \"Are you staying for dinner?\"\n\n\"Nah. I can't. Got a big date tonight.\"\n\n\"Oh, okay. Is this one serious?\"\n\nNow James laughed.\n\n\"Nope. None of them are ever serious.\"\n\nHe looked right at his young nephew then told him, \"And don't you get too serious with any girl too soon, either, okay?\"\n\nRyan promised he wouldn't even though he had no idea what that actually meant since he'd never even held hands with a girl yet. \n\nJames gave his best little buddy a bro hug, got another high five, then let his brother know he was 'outta here'.\n\n\"Thanks, Jimmy. Seriously. And I really am happy to pay you.\"\n\n\"No way, Pete. We're family.\"\n\n\"Yeah. We sure are,\" he told his little brother as they shook hands which ended in another bro hug, something that would never have happened when their father was still alive.\n\nJust as he was leaving, Ryan ran out and called his name.\n\n\"What's up, bud?\" James asked.\n\n\"I was wondering if you'd do me a favor, Uncle James.\"\n\n\"A favor, huh? Should I ask what it is before I say 'yes'?\"\n\n\"Probably.\"\n\n\"Okay. So...are you gonna tell me or do I really have to ask?\"\n\n\"Well, I need a leading lady for my movie. And the girl I have in mind is really pretty.\"\n\n\"Ah, okay. So you're thinking if I ask her, she might be more willing to agree, right?\"\n\n\"Kind of,\" Ryan replied almost sheepishly.\n\n\"I take it this pretty girl is older?\"\n\n\"Uh-huh.\"\n\n\"Let me see. I'm seeing a boyfriend. Maybe a really big boyfriend. Who's in high school.\"\n\n\"Uncle James!\" Ryan said, as he started laughing.\n\nJames stood there and looked at his nephew who was now looking up at him.\n\n\"What's in it for me?\" James asked, as though he needed some incentive.\n\n\"Ummm. Oh! I could make you the assistant director,\" Ryan offered.\n\n\"Assistant director, huh? You know what? I think I'm gonna need something more.\"\n\n\"Hey! I know. You could be the executive producer!\"\n\n\"Hmmm. Yeah. That's better. I kinda like the sound of that. James Young. Executive producer.\"\n\n\"So will you?\"\n\nJames put his arm around Ryan's shoulder then asked him when he wanted to do this.\n\n\"Is tomorrow okay?\"\n\n\"Tomorrow. Wow. Let me see.\"\n\nJames stood there with his hand on his chin as though he really needed to think this through.\n\n\"Yeah. I think I can squeeze you in. Have your people call me people, okay?\"\n\nRyan's face lit up, and James got an extra hug.\n\n\"You're the best, Uncle James!\" the 12-year old told him as he squeezed his uncle's waist as hard as he could.\n\n\"Just call me when you're ready. And maybe give me an hour's advance notice, okay?\"\n\n\"I will. I promise!\"\n\nIt was 8am when James's phone rang.\n\n\"Dude. Are you kidding me?\" he said through one barely-open eye when he saw it was Ryan.\n\n\"Sorry, Uncle James. I'm kind of excited about asking Hannah to, you know...\"\n\n\"Okay, but there's no way we're showing up to anyone's house this early.\"\n\n\"Oh. When wouldn't be too early?\"\n\n\"Um, let me think for a minute.\"\n\nJames stretched then sat up knowing he wasn't going to fall back asleep.\n\n\"Let's try 1 o'clock.\"\n\n\"Okay. I'll ride my bike to your house and be there by one.\"\n\n\"Oh. I'm not doing this unless her parents are home.\"\n\n\"What?\"\n\n\"What do you mean...what? Her mom and dad either okay this, or I'm not asking her or going with you or however you expect this to work.\"\n\nThere was a lengthy pause before Ryan said, \"Her dad died.\"\n\n\"Oh, wow. Sorry, little bro. That's awful. So that means her mom needs to be there.\"\n\nWhen Ryan didn't answer, James asked if he was still on the phone.\n\n\"Yeah. I'm here.\"\n\n\"So I'll see you at one then.\"\n\n\"Right. One o'clock.\"\n\nWhen Ryan arrived at his uncle's place, James was ready to go, so they headed straight to Hannah's.\n\n\"What's their last name?\" James asked as they drove along.\n\n\"Summers.\"\n\n\"Summers. Okay. Got it.\"\n\n\"Do you know her mom?\" James asked.\n\n\"Not really,\" the boy said with a shy smile that told James there was more to the story.\n\n\"So...no?\"\n\nWhen he looked over at him, he could tell Ryan was blushing.\n\n\"What's that all about?\"\n\n\"Nothin'.\"\n\n\"Come on. Spill it!\"\n\nRyan fidgeted a little then said, \"Her mom's...really beautiful. Like Hannah.\"\n\n\"Ah, okay. So did someone have a crush on someone's mom before he had a crush on her daughter?\"\n\n\"No!\" Ryan said so fast it made James laugh.\n\n\"It's okay. I had my share of crushes on older women growing up. Even had one on one of my teachers once.\"\n\nThis time, the goofy look on Ryan's face told him he had the same kind of crush.\n\n\"Wait. On Mrs. Summers or a teacher?\"\n\n\"Both?\" Ryan sort of admitted.\n\nThe look his uncle gave him made him feel weird until James held out a hand and said, \"That's my boy!\"\n\nRyan slapped it and that ended the discussion about crushes and older women.\n\nJames knew he should have called first, but it was too late for that as he stood next to Ryan and watched him knock on the door.\n\nThere were some sounds of movement then silence before the door opened.\n\n\"May I help you?\" a woman asked as she peeked through the narrow opening. \n\n\"Ryan?\" James said to his nephew who was suddenly unable to speak.\n\n\"Um, hi. Yes. I...I was wondering if Hannah was home.\"\n\n\"Yes. She's here. May I ask who's calling?\"\n\n\"Wait. Calling?\"\n\nJames tried not to laugh before explaining the other meaning of the word.\n\n\"Oh, okay,\" the embarrassed young man said.\n\nThe woman opened the door a little more, and that's when James got his first real look at her. Ryan hadn't been exaggerating. She was a very attractive woman who reminded him of an actress. He almost had the name before a voice distracted him.\n\n\"My name is Ryan Young, and I'm making a movie. Well, actually\u2014another movie.\"\n\n\"I...see,\" the woman said with a warm smile. \n\nShe then turned to James and asked, \"And you are?\"\n\n\"Sorry. I'm James. Young. I'm Ryan's uncle.\"\n\n\"Ah. Are you by any chance the director of this movie?\" she asked, the smile on her very pretty face even bigger.\n\n\"No. That would be my nephew. He was a little intim...\"\n\n\"Mom? Who is it?\" the three of them heard as a younger girl walked up next to her.\n\n\"Hi, Hannah!\" Ryan said immediately.\n\n\"Do I know you?\" she asked in a very nice way.\n\n\"Maybe. We um, we go to school together. My name's Ryan.\"\n\nWhen Hannah kind of shook her head, Ryan gave her his last name.\n\n\"I'm really sorry, Ryan. I don't think I know you.\"\n\n\"Oh. Well, that's okay. We have time for that.\"\n\nHannah looked at Ryan then at her mom, and it was obvious they were both trying not to laugh.\n\n\"I see. And when would that be?\" Hannah asked, again in a very kind way.\n\n\"When we make our movie,\" Ryan told her.\n\n\"Oh. Now I understand,\" she replied as though that cleared everything up.\n\n\"What my nephew is trying to say is that he'd like to ask you to, well, star in his movie,\" James explained.\n\nHannah noticed him immediately and had been trying not to stare. He was obviously a lot older, but he was so good looking it had been a real challenge. She now had permission to look and did so.\n\n\"Star in his movie, huh?\" she asked, a beautiful smile now on her pretty face.\n\n\"That's the plan,\" James told her in a way that said this was Ryan's dream and nothing more.\n\n\"Will you be involved?\" Hannah asked him.\n\n\"He's the executive producer,\" Ryan answered for his uncle.\n\n\"Wow. That's...impressive,\" Hannah replied to Ryan while never taking her eyes off of James.\n\n\"It's gonna be amazing!\" Ryan said as he started rattling off his 'vision' for this 'epic production' that the town of Lubbock would be talking about for years to come.\n\n\"So this could lead to the big time then,\" Hannah said as seriously as she could.\n\n\"I guess so,\" Ryan replied, not sure how to respond.\n\n\"Well, I suppose I could at least talk to you...both...some more,\" Hannah said, again looking at James.\n\n\"I have a few questions of my own,\" the beautiful mom said. \"Would you gentlemen care to come in?\"\n\n\"Um, sure. Thank you,\" James said for them both before reminding her he hadn't gotten her name.\n\n\"Oh, gosh. I'm so sorry. I'm Ali. Ali Summers.\"\n\n\"That's it!\" James said out loud causing Ali and Hannah to give him a funny look.\n\n\"My apologies. I was trying to come up with the name of the um, well, the movie actress you remind me of?\"\n\n\"Me?\" Ali said with a laugh.\n\n\"Yes, ma'am. And coincidentally, her name is Ali, too. Ali Larter.\"\n\n\"Oh! From the Final Destination series!\" Hannah said as the 'men' stepped inside. \"Mom, she's really pretty, and you do look like her.\"\n\n\"Oh, my. Well, in that case, thank you,\" she told James. She had no idea who this other Ali was, but she accepted the compliment as given.\n\nShe offered them a choice of coffee, tea, or soda, then began trying to get some information.\n\n\"So who's funding this venture?\" was her first question.\n\nRyan looked to his uncle for help who explained.\n\n\"How are you paying for it?\"\n\n\"Oh. Well, I have a friend named Adam. His mom is gonna help us out with costumes and props, and stuff.\"\n\n\"And may I ask what kind of movie this will be?\"\n\nAli's smile was disarming and beautiful. He hair was just shy of shoulder length and darker than Ali Larter's. As James continued looking at her, she also reminded him of another Ali who's name was spelled differently. Allie McGraw had been one of James's crushes when he was Ryan's age after watching Love Story with a babysitter. \n\nHe was angry about having been made to have one when he was 12, but she'd turned out to be 17 and as pretty as any girl he'd ever seen. So when she asked him if he liked old, classic movies, he said, \"Yes,\" before adding, \"If you do.\"\n\nShe did, and Love Story was one of her favorites, and James not only watched it with her, he'd have done anything she'd have asked him to.\n\nRyan's cheeks got a little warm again when he saw Hannah looking at him as she waited for his answer.\n\n\"It's...it's a...a romance movie.\"\n\n\"I see. So...who would be the leading man?\" Hannah asked as she coyly looked at James.",
        "\"What? Oh. No. Not me,\" he said once he recognized the look. Her mother saw it, too, and understood why.\n\n\"He's a little too old for you, honey,\" Ali told her daughter who nearly died of embarrassment.\n\n\"Mom!\" she protested immediately.\n\nAli let it go then asked Ryan who it would be.\n\n\"Oh. Well, all of us, me, Adam, and Carlos, are also actors.\"\n\n\"Uh-huh. And would you by chance be the leading lady's love interest?\" Ali asked, trying not to tease too much.\n\n\"Mom! Please!\" Hannah nearly begged.\n\nRyan looked at his uncle then rather sheepishly said, \"Yes,\" more as a question than an answer.\n\n\"What grade are you in, Ryan?\" Hannah asked.\n\n\"Seventh.\"\n\n\"You know I'm in ninth, right?\" she said as nicely as possible.\n\n\"Uh-huh,\" came the very weak reply.\n\n\"Can you stand up?\" she asked just as nicely.\n\nWhen he did, Hannah got up, too, then moved next to him.\n\n\"I'm almost a foot taller than you.\"\n\nIt wasn't actually that much. It was maybe six inches, but the point was well taken.\n\n\"I can use a step stool and no one will see it,\" the proud 'director' informed her.\n\n\"If I say 'yes', I have one condition.\"\n\n\"Okay!\" Ryan agreed before even hearing it.\n\n\"No kissing. At least not on the lips.\"\n\n\"Oh.\"\n\nThis reply was much less enthusiastic, but Ryan was old enough to be realistic.\n\n\"Okay. I can live with that,\" he said like a young adult.\n\n\"And how many hours a day will this take?\"\n\n\"Not too many,\" Ryan vaguely promised.\n\n\"Will you be supervising them, James?\" Ali asked.\n\nHe knew he was committed now, so he told her he would.\n\n\"It might be a lot of fun, Han. And you might even be able to use this for credit in your drama class.\"\n\n\"Well, seeing as how my boyfriend and I just broke up, I suppose I could help you out,\" Hannah said, still looking at James.\n\n\"Really? You're gonna do it?\" Ryan blurted out.\n\n\"Yeah. It really might be fun. So...yes. I'll do it.\"\n\n\"That is SO awesome!\" \n\nJames and Ryan stayed a few more minutes as they finished their drinks and talked.\n\nAli wasn't only beautiful, she was intelligent and considerate, as well. She seemed genuinely impressed when what James did for a living came up as she had no idea how to go about creating a website. He explained that there were basic templates one could buy and modify for a reasonable amount of money before letting her know that they were pretty bare bones.\n\n\"So if I wanted to you, you know, create one for my beauty salon, how much would that run me?\" she asked very seriously.\n\nJames smiled then said, \"This may sound corny, but I have to say I'm not surprised to hear that you have a beauty salon.\"\n\nJames was so much younger than her that she never dreamed he was flirting until Hannah told her, \"He just said you're beautiful, Mom.\"\n\nAli pulled her head back a bit then smiled herself before thanking him.\n\n\"You're really pretty, too,\" Ryan told Hannah as his cheeks glowed again.\n\n\"Ahh! Thank you, Ryan! That's very sweet of you.\"\n\nShe glanced at James then said to the younger Young, \"You're well on the way to being as handsome as your uncle.\"\n\nThat caused James to do the pull back thing, and that made Ali laugh.\n\n\"I think someone has a crush on an older man,\" Ali said, causing her daughter to want to slink under the table.\n\n\"Oh, my God!\" Hannah said as she threw her arms up.\n\n\"My daughter is kind of boy crazy these days,\" Ali said to James as though only he could hear her.\n\nHannah was so embarrassed she got up and left the room, on the verge of crying.\n\n\"Oh, boy. That didn't go over well,\" Ali said with a 'what else can I say' look on her face along with another beautiful smile.\n\n\"I know a boy...er, a young man who's kind of getting interested in girls, too.\"\n\nRyan didn't run away or protest, he just sat there and...glowed.\n\n\"Well, Hannah's right, Ryan. You are going to be a very handsome man one day.\"\n\n\"Thank you,\" he said, a happy little smile on his face.\n\n\"I'm really sorry to have bothered you, Mrs. Summers, but...\"\n\n\"James? Please don't call me that. Please?\"\n\n\"Okay. My apologies.\n\n\"I love having my late husband's last name, I just don't love being called 'Mrs.' and especially not by someone your age. It makes me feel, well, as old as I am.\"\n\n\"You look amazing for someone's who's 30,\" James said so seriously it took Ali a second to get it.\n\nShe laughed then said to Ryan, \"Your uncle is a charmer.\"\n\n\"Huh?\" the boy replied. \"Like a snake charmer?\"\n\nHis former crush laughed again then explained what it meant.\n\n\"Are you by any chance serious with anyone, James?\" she asked just as a matter of course.\n\n\"My Uncle James is never getting serious with anyone, right?\" Ryan both said and asked.\n\nAli's raised eyebrow made James a little uncomfortable as he tried to set the record straight.\n\n\"What I was trying to tell you, buddy, was not to get too serious with any girl too soon. At your age.\"\n\nHe then looked at Ali and smiled before saying something he couldn't believe he was saying, \"But in my case, were I to meet that special someone, I could definitely see myself settling down.\"\n\nAli smiled then stopped before exhaling and saying, \"Marriage, with the right person, can be pretty wonderful.\"\n\nJames knew better than to ask if her husband had been the right kind of person now that he knew she'd lost him, but he didn't think it would be too inappropriate to ask a related question.\n\n\"How about you, Mrs...Ali? Are you seeing anyone?\"\n\nThe older woman raised both eyebrows before laughing politely.\n\n\"Me? No. I date a little here and there, but no, I'm definitely not seeing anyone.\"\n\nEvidently, Hannah hadn't gone very far, because they all heard her call out, \"It's time that you should, though, Mom!\"\n\nAgain, James didn't think it was in good taste to comment, so he stayed quiet.\n\n\"Hannah worries about me,\" she said.\n\n\"Well, someone has to worry about you,\" Hannah called back.\n\nAli smiled as she looked at James and said, \"Voices really carry in this house.\"\n\nShe then responded to her daughter by saying, \"I'm fine, honey.\" \n\nHannah reappeared then looked at James again and smiled.\n\n\"She talks big, but I know she's lonely. She never listens to me, but I'm gonna keep trying to get her to start really dating one of these days.\"\n\nHannah paused when her mother turned around to give her the eye, then said, \"No matter how mad she gets at me.\"\n\n\"I'm not upset, Hannah. I just...haven't met anyone yet. Okay?\"\n\nExpecting to get a tongue lashing later on, Hannah said what she was thinking anyway.\n\n\"You just met James.\"\n\n\"Excuse me?\" her mom said, a look of horror on her face before turning around and apologizing to her guest.\n\n\"No need to apologize,\" James told her. \"It was actually very flattering.\"\n\n\"Ha! Yeah, right. A handsome, young guy like you and an old...\"\n\nAli stopped talking in order to think before finishing her sentence.\n\n\"An older...woman like me.\"\n\n\"Mom, you are not old!\" Hannah called out as she walked over to her mom and hugged her from behind. \"You're hot!\"\n\n\"You are too sweet,\" Ali said as she held her daughter's arms. \"Wrong but sweet.\"\n\n\"No, Hannah's right,\" James said very directly, causing Hannah to smile at him while her mom pulled back again then laughed.\n\n\"Well, I have to say you made my day,\" to James before quickly looking at Ryan, who was loving this interaction and saying, \"And you, too, Mr. Director.\"\n\n\"Thank you. And Hannah?\" Ryan said.\n\n\"Yes?\"\n\n\"We...the cast...is having a meeting today. Would you like to join us?\"\n\n\"I dunno. Will your uncle be there?\" she asked, a dreamy look in her eyes.\n\n\"I don't recall the director mentioning any meeting,\" James said as he looked at his nephew.\n\nRyan explained why they were getting together and where, and James said he thought he could do that.\n\n\"Then I'll be there!\" Hannah happily announced before her mom turned around and gave her that look.\n\n\"What?\"\n\n\"Just making sure you remember that Mr. Young is a lot older than you.\"\n\n\"Mom!\" an exasperated daughter said again.\n\n\"Unless you'd like me to go, too, please let me know you understand,\" Ali told her politely but in no uncertain terms.\n\n\"You can come, Mrs. Summers,\" Ryan said, not understanding how Hannah felt or why.\n\n\"Oh, my g...\" Hannah nearly hollered before remembering how immature she was sounding.\n\n\"Of course, Mom,\" she said after a moment to collect her composure.\n\nNot wanting to get involved, James said nothing other than suggesting it might be time for them to leave.\n\n\"Mr. Young?\" Hannah said very quickly.\n\n\"Please call me James, okay?\"\n\nHannah's eyes came alive as she said, \"Okay...James. I...I was wondering if it might be possible to, you know, I don't drive yet, and...\"\n\n\"We'll come get you!\" Ryan volunteered without asking.\n\n\"I can give my daughter a ride,\" Ali said, ending the debate before it got started. \"And pick her up.\"\n\nHannah's look turned crestfallen but she remembered not to pout.\n\n\"Okay. Thank you, Mom,\" she said very sweetly while staring at James.\n\n\"What time is your get together?\" Ali asked.\n\n\"Oh,\" a surprised Ryan answered. \"Hold on a sec.\"\n\nHe texted the other amigos and told them 3 o'clock. Both agreed, and Ryan passed on the time.\n\n\"Okay. Thank you. Hannah will be there at 3 o'clock sharp.\"\n\nSomehow, Ryan got Hannah to go outside with him and leave her mom and James behind in the house.\n\nJames thanked her for her time and patience, and Ali only laughed a little as she said, \"I think is so wonderful. It almost reminds me of the innocence of my childhood growing up around here. I wish more kids were involved doing this kind of thing rather than what so many kids get into nowadays.\"\n\n\"Ryan's a good kid,\" James told her. \"I'm very proud of him.\"\n\n\"You have every right to be, James. And I think it's also wonderful that you're taking the time to mentor him and his friends.\"\n\n\"I don't know about that, Ali. I just want to be there for my nephew, but I do know the other two boys, and they're good kids, as well.\"\n\n\"I have no doubt,\" she said with a smile that hit James so hard it surprised him.\n\nShe noticed his reaction and asked if everything was all right. \n\n\"Sorry. Yes. Everything's fine,\" he said as he recovered and smiled.\n\n\"I must say it was a pleasure meeting you, James.\"\n\n\"You too, Ali. And thank you again.\"\n\n\"No. Thank you. I'm not...worried...about my daughter. But she's gone totally bonkers lately over boys, and I do want to make sure she doesn't, you know, make some...big mistake.\"\n\n\"I understand. It's not the same thing, but even Ryan's started taking an interest in girls. But I'm sure you noticed that just by the way he looks at Hannah.\"\n\n\"Oh, I noticed,\" she replied with another little laugh. \"I think it's very sweet.\"\n\nThere was a fairly long pause where James didn't say anything, so Ali asked him again if everything was okay.\n\nHe found himself on the verge of telling her she was beautiful, but that wasn't all. For the briefest of moments, he wanted to ask her out more than he'd ever wanted to ask any woman before. The sheer insanity of the second thought caused him to dismiss it then and there, but it took another second or two to talk himself out of the first.\n\n\"Yes. I'm fine,\" he finally said.\n\n\"Okay, then. I probably won't see you when I drop Hannah off, but this was very enjoyable.\"\n\n\"I agree,\" James said as the desire to say something close to his first idea came overpowered his judgment. \"Say. Maybe we could do this again sometime.\"\n\nAli's slight hesitation seemed to signal she found that less than interesting, but she smiled then said, \"Oh. Well, sure. That would be very nice.\"\n\n\"All right. Well, I uh, I guess I'll see you when I see you then.\"\n\nRarely at a loss for words, James felt downright foolish for saying that, but Ali either didn't notice or didn't care.\n\n\"Yes. I hope so,\" she said before thanking him again for being there for Ryan as well as for giving her daughter something constructive to do over the holiday break.\n\nAli stayed on the porch as James headed to his vehicle where Hannah had turned to look at him while Ryan stood next to her looking at Hannah.\n\n\"Bye, James!\" she said a little too sweetly as he got to the car.\n\n\"Miss Hannah,\" he replied with a smile and a nod of his head.\n\n\"See you soon!\"\n\n\"Yep. Three o'clock,\" he told her.\n\nAs they drove home, Ryan was on fire.\n\n\"That was the best time ever!\" he said the moment they were on the road.\n\n\"Yeah?\"\n\n\"Oh, yeah! Was I right or was I right?\" \n\n\"About?\"\n\n\"Hannah. Who else?\"\n\n\"Oh. Sorry. Yeah, she's a very pretty girl.\"\n\n\"Uncle James? Do older women ever date younger men?\" his nephew asked with genuine concern.\n\nJames chuckled but not in a mean way.\n\n\"Yeah. Sometimes. But you know Hannah's a lot older than you, right?\"\n\n\"It's just two years,\" Ryan countered.\n\n\"True, but the difference between 14 and 12 is pretty big.\"\n\n\"Yeah, I guess. But a guy can always dream, right?\"\n\nJames reached over and mussed the boy's hair and told him they could and reminded him to dream big.\n\nRyan smiled then asked if he was right about Hannah's mom, too.\n\n\"You know what? You were two for two day, good buddy.\"\n\n\"See? I told you!\" the boy said, a look of happy satisfaction on his face.\n\n\"Yes you did, didn't you?\" James replied before mussing Ryan's hair one more time.\n\nThey just had time to grab a sandwich before leaving for the warehouse. It had warmed up nicely for December, but by three o'clock it would start getting chilly again. The average high that time of year was 55 or so, and as they drove by a bank the sign said it was 48 degrees with an expected overnight low of 38.\n\nAdam and Carlos were there waiting when Ryan walked up, but when the boys saw James they barely said hello to their friend. \n\n\"James! Why are you here?\" Carlos asked, a big grin on his face.\n\n\"I'm not really sure. But this is Ryan's baby, so I'll just hang out until...\"\n\nAll three boys stopped looking at him, and when James turned around to find out why, he laughed. Hannah was walking their way, and that explained everything.\n\n\"You really got her to do this, didn't you?\" Adam asked without taking his eyes off of the 14-year old 'goddess'.\n\n\"She is SO fine!\" Carlos said as he continued staring.\n\nA honk of the horn caused James to realize he was staring, too. Just not at Hannah. He was having fun watching the boys go gaga over an older girl. When he looked toward the noise, he saw Ali waving at him. Or maybe it was more beckoning than waving.\n\nAs he headed her way, Hannah smiled so big it looked painful then said, \"Hi, James!\"\n\nHe barely heard her but he did kind of smile back and mumbled, \"Hey,\" as he walked by, his eyes now focused on the other pretty girl.\n\n\"Ali. Hi,\" he said as he walked up the driver's window.\n\n\"Hi.\"\n\n\"Long time no see,\" James said, a huge smile now on his face.\n\n\"Oh, right,\" Ali replied as she grabbed a jacket.\n\n\"Are you staying?\" James asked hopefully.\n\n\"No. I was just hoping you'd have better luck getting Hannah to wear it. It's getting chilly, and yet she insisted on leaving it in the car.\"\n\nShe took a longer look at James, smiled, then said, \"She tried leaving the house with bare arms, but I put a stop to that.\"\n\nShe paused, smiled again, then said, \"I think the reason why is pretty obvious.\"\n\nJames understood but was too modest to say anything other than, \"I'll see if I can talk her into wearing it,\" as he reached for the coat.\n\nAli thanked him, and James thought she was going to leave, but she sat there for a moment then looked at him again.\n\n\"It's funny, isn't it? Hannah has a crush on you, and I'm pretty sure your nephew has one on her.\"\n\nJames laughed and told her it was true.\n\n\"Oh, to be young and pretty again,\" she said with a little laugh.\n\nJames was still smiling, but his tone was serious when he replied.\n\n\"Um...in my humble opinion, Ali, you're both young and very pretty.\"\n\nAli cocked her head to one side a little then smiled.\n\n\"And you are very sweet, James.\"\n\n\"I was just being honest.\"\n\nShe looked at him for a couple of seconds then said she should probably get going.\n\n\"Okay. And if it helps, I can give Hannah a ride home.\"\n\n\"I couldn't ask you to do that, but thank you.\"\n\n\"You're not asking, and I'd be more than happy to.\"\n\n\"That would save me a lot of time. Are you sure you don't mind?\"\n\n\"I'm sure,\" James told her.\n\n\"Well, in that case, I accept. Thank you, James.\"\n\n\"Anytime,\" he replied with a warm smile.\n\nShe smiled back but didn't say anything before driving off.\n\nJust seconds later, Hannah was wearing the jacket which she claimed she meant to bring with her. When James walked up with it and held it out, she turned so he could put it on her, and the way she smiled at him reminded him of what her mother had just told him.\n\n\"Okay, people. Let's get back to work!\" Ryan called out. \n\nThe way he seemed to glare at his uncle made James wonder what might be going on, but he soon forgot about it as the 'director' began explaining the plot of the movie before asking Adam about costumes, props, and money.\n\nRyan had already written the script for the movie and sent it to everyone's phone after he got Hannah's number. This time, the dreamy look on his face told James what was going on as he recalled what he said to Ali about a second crush. He laughed a little when he wondered what she'd say if he told her there was a third crush going on but quickly dismissed that thought, too.\n\n\"So we'll meet back here at 1 o'clock tomorrow, okay?\" Ryan said about an hour later.\n\nAdam and Carlos hopped on their bikes and headed off together, leaving three people standing there.\n\n\"I should call my mom to come get me,\" Hannah said to James, that huge smile back again in full bloom.\n\n\"No need. I'm...\"\n\nHe looked at Ryan then said, \"We're taking you home.\"\n\nRyan's expression perked up as did Hannah's but for different reasons.\n\n\"Oh, that's very kind of you,\" Hannah said almost demurely.\n\n\"We're happy to take you home, Hannah,\" Ryan told her, causing the older girl to look his way and smile.\n\nRyan's return smile confirmed what James already knew. His nephew had it bad for this 'older woman'. And when they got to the car, Ryan opened the back door for Hannah who had clearly hoped to ride up front with James. \n\n\"Hop in,\" James told her as he walked around to his side.\n\n\"Oh. Sure,\" she said as she got in before Ryan closed her door.\n\nOn the ride back to her house, Ryan would ask Hannah a question which she would quickly answer in as few words as possible before immediately asking James something. The third such cycle resulted in something James knew was coming as Hannah asked him if he was seeing anyone even though that had already been discussed.\n\n\"No. I'm not seeing anyone,\" he told her with a friendly smile as he looked at her in the mirror.\n\n\"Oh. Neither am I,\" Hannah told him.\n\nJames couldn't see Ryan, but he was pretty sure his nephew was feeling left out and possibly even hurt.\n\n\"I do kind of like someone, though,\" James added.\n\nThat comment caused Hannah's smile to disappear, and although he didn't see it, Ryan's face lit up a little.\n\n\"Oh,\" Hannah said very quietly.\n\n\"I'm not seeing anyone, either, Hannah,\" Ryan let her know.\n\nShe glanced over at him and kind of rolled her eyes sending Ryan's mood crashing in a big way.\n\nThere was utter silence the rest of the way back to the Summers' house, and when James pulled in, Ryan didn't even bother getting out to open Hannah's door.\n\nJames told her goodbye, and Hannah said it back, but it was said perfunctorily and without emotion.\n\n\"You okay?\" James asked his nephew as they backed out.\n\n\"Yeah. I'm fine.\"\n\n\"You really like her, don't you?\" James said.\n\n\"It doesn't matter,\" came the terse reply.\n\n\"Something bothering you?\"",
        "\"No.\"\n\nJames adjusted the mirror so he could see his nephew then said, \"You know I don't have any interest whatsoever in Hannah, right?\"\n\n\"Could have fooled me,\" the dejected pre-teen said as he stared out the window.\n\n\"Ryan? She's 14. I'm 28. I know you see her as an older girl, but to me, she's just a girl. A very, very young girl that I can only see as a girl.\"\n\nHe waited until Ryan's eyes looked his way then said, \"Okay?\"\n\n\"Okay,\" the boy replied. The irritation in his voice was gone, but James knew he was still hurting.\n\n\"Two years is a big deal at your age, buddy.\"\n\n\"I know. I never really believed I had a chance, but I kept thinking...maybe, just maybe.\"\n\nJames laughed but in a very supportive way.\n\nRyan finally almost smiled then said, \"Older girls are just so...hot!\"\n\nThis time his uncle laughed a genuine laugh then told him he agreed.\n\n\"Have you ever like an older girl, Uncle James? Not when you were my age, but like now?\"\n\nThe irony of the question hit him hard as he answered his nephew's question.\n\n\"Uh-huh. Yes.\"\n\n\"Yeah? Did she like you back?\"\n\n\"I don't know. I haven't told her yet,\" his uncle replied.\n\n\"Huh?\" a confused Ryan asked.\n\n\"It's no big deal.\"\n\nWanting to change the subject, James asked Ryan how he thought the first day went without mentioning Hannah.\n\n\"Oh. Okay, I guess. At least Adam's mom is willing to provide financial backing.\"\n\nJames stifled a laugh at the grown-up speak and agreed that that was very helpful. And very nice.\n\n\"Yeah. They're totally loaded,\" Ryan said, causing his uncle to have to suppress another chuckle at the thought of them all being drunk.\n\n\"Well, owning three car dealerships in a town like Lubbock can do that,\" James said, finally laughing a little bit.\n\n\"One of these days I'm gonna have more money than they do,\" Ryan announced.\n\n\"Oh?\"\n\n\"Uh-huh. When I become a famous director for real.\"\n\n\"You know what, big guy? You might just do that,\" his uncle told him providing enough reassurance to let the 12-year old forgot about his recent crush and his recently...crushed...heart.\n\n\"Uncle James? Can you stay for dinner?\" Ryan asked when they pulled into his driveway.\n\n\"Not tonight, Ryan. I have another website to get started on, and I need several hours tonight to get a jump on it.\"\n\n\"Okay. Well, thanks for taking me there and hanging out with us.\"\n\n\"Sure thing, bro,\" James said.\n\n\"Oh. And thanks for asking Hannah. Even if she likes you better than me.\"\n\nRyan didn't look sad anymore. He'd already realized Hannah Summers was out of his league, and that she was never going to like him back.\n\n\"You know there'll be other girls, right?\" his uncle replied supportively.\n\n\"I guess.\"\n\n\"Oh, trust me. There will be. You're a Young, dude. And chicks dig Young guys.\"\n\n\"Just not young '-er', guys,\" Ryan quipped playfully.\n\nAgain, the adult reply made his uncle laugh as they said their goodbyes.\n\n\"Tell your mom I said 'hey', okay?\"\n\n\"I will! Bye, Uncle James!\" the boy said as he hopped out and ran inside.\n\nJames was deep into working up the design for a new dentist in town with his only short break coming for a quick bite to eat. James was getting a free checkup and any work needing done as a result in payment for the new site. The dentist was new in town and an attractive woman about his age who was just setting up her practice, and she'd made it pretty clear she would be open to...other forms of compensation.\n\nUntil meeting Ali Summers, James had every intention of taking her up on her offer once the website was up and running. This dentist also happened to be the first woman he'd ever looked at thought that maybe she was the kind of person he could settle down with. The thoughts were short lived, but he'd had them, and as he sat and thought it about, he couldn't help but wonder if that would ever happen with any woman.\n\nBut after meeting Ali, James found himself wondering if he was just being an adult version of his nephew or if there really could possibly be something there. And that thought made him realize that it, too, was something very new and foreign to him, as he'd never once wondered that kind of thing before. \n\nWith the dentist, it was a generic kind of question, but with Ali it was definitely more specific and a very real question he couldn't shake the rest of the night. So even at 3am, when he finally had to lay down and get some sleep, he was still thinking about the beautiful, older woman with the teenaged daughter who had a crush on him. \n\nHis last thought before falling into a deep sleep was, \"Or maybe had had a crush on me.\"\n\nJames was out cold until his alarm woke him up at 10am, another thing he loved about being self employed. Not the alarm, of course, but being able to work when he wanted to, and he was definitely at his peak productivity from around 10pm until 2am or so. He'd been a night owl as long as he could remember, and there were few things he disliked more than having to get up before ten o'clock. Eight was 'brutal', and anything earlier than that was...torture.\n\nAfter a trip to the bathroom where he brushed his teeth to kill the morning breath, he went to the kitchen to turn on the coffee pot. He grabbed his phone out of habit then sat down to see who'd called or texted. He kept his alarm low and had all notification sounds turned off, so it was always a surprise when he woke up.\n\nHe saw the number '8' in the text box and opened it up. Three were from clients, two were from his brother, two more were offers to buy his house at a fair price, and one was from Ali. The moment he saw it, James was wide awake and sitting up straight in the kitchen chair as he read it.\n\n\"Hi, James. Sorry to bother you, but Hannah was pretty upset when she came home. Not angry. Just...sad. I finally got her to admit the obvious, and yes, she does have a huge crush on you. It took me a few minutes to get her to open up, but we talked for nearly an hour, and I think everything is mostly okay. I say 'mostly' because she said she doesn't want to be in the movie anymore.\"\n\nJames had been excited about the text, but now he knew what this would mean to Ryan, and he felt terrible for his nephew and budding director.\n\n\"I feel terrible about this, because I know how much it means to Ryan. It's obvious how close you are with him, because not many men would have done what you did in order to get a girl his nephew likes to 'star' in it.\"\n\nThere were a couple of smiley emojis and then the remainder of the text.\n\n\"I had to get Hannah to give me your number, so she knows I'm texting you, and that put her back in a funk. She'll get over it, but I felt I had to let you know. I am truly sorry, but she's 14 and well, I'm sure you know how teenagers can be. I stressed how she made a promise, but she just will not come back. I wish I was texting you with better news, but I wanted you to know this so you could at least let Ryan down easily, and maybe find a replacement, if that's even possible now. Again, I apologize, and if there's anything I can do to help out, please don't hesitate to ask, okay?\"\n\nIt ended with a few sad emojis, and James sat there and reread it again as his coffee pot gurgled.\n\nAs he sipped a first cup, James thought about what, if anything, he might say in reply. It certainly wasn't Ali's fault. It wasn't really even Hannah's. Her mom was right. She was a teenager, and teens weren't exactly known for their dependability. In fact, James felt a little twinge of guilt knowing why Hannah didn't want to come back. He was the reason, why, and while it wasn't his fault, either, he still felt responsible. And now his favorite nephew, who was his only nephew, would be in a jam. More importantly the Lubbock version of Love Story might never get told!\n\nHe finished the cup, poured a second, then sat back down and started texting Ali back.\n\n\"Ali. Hi. No worries. We'll figure out how to make this work. And please tell Hannah no one blames her, okay? I understand about being a teenager, and yes, I understand she may have had some kind of puppy-love feelings for me. For what it's worth, Ryan was a little bummed on the ride home when he realized Hannah doesn't feel the same way about him as he does about her. But as you said about Hannah, Ryan will also get over this. In fact, he may already be okay with it. As far as finding a replacement, I don't know if Ryan has anyone else in mind, but I'll see what we can do.\"\n\nHe almost hit 'send' after thanking her for letting him know but didn't. Instead, he sat there for a few seconds debating then decided 'what the heck'.\n\n\"Of course, if you were available to, you know, star in the Lubbock version of Love Story, that would solve a lot of problems!\"\n\nHe made sure to add some silly emojis to avoid sounding like he was serious or some kind of an idiot, then thanked her and hit 'send'.\n\n\"Mom? What's so funny?\" Hannah asked when she heard her mom laughing.\n\n\"Oh. Nothing, honey. Just a silly text from someone.\"\n\nHannah cautiously asked her mom if she'd texted the news about her to James yet.\n\n\"I did,\" she replied.\n\n\"And?\"\n\n\"Well, that was the text I was just reading.\"\n\n\"Oh. He must have said something about me and how stupid I was to...like him.\"\n\nAli set her phone down and turned to look at her daughter.\n\n\"Hannah? You are not 'stupid'. You're 14, and 14-year olds get...crushes.\"\n\n\"Not on grown men,\" her daughter replied with a hint of embarrassment.\n\n\"Oh, I wouldn't say that. I had the worst kind of crush on one of my teachers when I was a freshman, too.\"\n\nHannah wanted details, so her mom shared the story as a way of letting her know this was normal. And that these crushes always passed.\n\nHannah felt better and told her mom 'thanks' but also mentioned she was hoping to never have to see James again.\n\n\"I'd die!\" she added at the end.\n\n\"No, you wouldn't die. He understands. And remember, he's just like you and me. I'm sure he's had crushes on older women, too.\"\n\n\"You mean...like you?\" Hannah replied, teasing her mother.\n\nCaught completely off guard, Ali stammered for a moment as she tried to answer.\n\n\"What? That...that's...ridiculous! He doesn't feel that way about me, Hannah. I meant there was probably a teacher or some other older woman in his past from when he was your age. That's all.\"\n\nHannah surprised her mom even more when she came over, leaned down, and hugged her in the chair she was sitting in.\n\n\"Mom? I really wish you'd find someone.\"\n\nHer mother's expression and demeanor changed immediately as she said, \"Ohh! That is so nice of you to say, honey!\"\n\nHannah stood up then said, \"It isn't just me being nice, Mom. I really want you to be happy.\"\n\n\"I am, honey. I'm very happy,\" Ali said, unwilling to admit to her daughter that she was often lonely to the point of sadness. \n\nBut finding someone wasn't easy. No, finding someone was easy. Finding the right someone was what was hard. She'd recently tried to do that, she just hadn't tried very hard. But she had at least made an effort. But so far, at least, it had been an exercise in futility.\n\n\"Liar,\" Hannah said, smiling for the first time.\n\n\"What? I am not lying!\" her mother replied too loudly.\n\n\"Okay, Mom. Whatever you say!\" Hannah told her as she grabbed an apple then walked out of the kitchen. \"But I bet James would go out with you if you asked him!\"\n\nStunned, Ali whipped back around and nearly hollered, \"Hah! Yeah, right!\" which drew a long laugh from her beautiful daughter and which caused her to sit there and think about that for several moments before shaking her head.\n\n\"Yeah, right,\" she told herself again as she decided to get up and do a load of laundry.\n\nThe clothes were drying when Ali noticed another text from James. She'd forgotten about her talk with Hannah, and yet she found herself smiling and almost excited when she opened it.\n\n\"Sorry to bother you again, Ali. But I really need to talk to you. Is there any chance I could drop by sometime today?\"\n\nWithout so much as a thought to what Hannah said about not wanting to see James again, Ali texted him right back and told him that was fine.\n\n\"Would it be okay if I headed over right now?\" James replied.\n\nShe almost told him 'sure', but she hadn't done her hair or makeup, and while that wasn't necessary, she didn't want him seeing her like that.\n\n\"If you could give me a half hour or so, that would be wonderful,\" she wrote.\n\n\"Sure. See you then. And thanks!\"\n\nAli headed straight upstairs and immediately changed clothes. With the lounge pants gone she began brushing out her hair before using a curling iron to put a little wave it. Satisfied, she sat back down and put on a little foundation, some eyeliner, and a bit of mascara. She looked at the tube of lipstick, and for a moment, she thought about painting her lips, too. \n\n\"Get a grip,\" she told herself before taking a quick look in the mirror.\n\nFor a woman of 43, Ali Summers looked amazing. For a woman of any age, she looked very good in spite of her tendency to be her own worst critic.\n\n\"Mom. Where are you going?\" Hannah asked when she saw her mom wearing a pair of jeans and a nice sweater\u2014and makeup.\n\n\"Oh. Nowhere, honey. But I did want to let you know that James will be coming over.\"\n\n\"What? Mom! You promised!\" her daughter said, the hurt in her voice coming through loud and clear.\n\n\"I...I didn't promise, Hannah. I only...\"\n\n\"How could you?\" Hannah wailed before running upstairs and slamming her bedroom door.\n\nAli'd lost track of time, so when the doorbell rang, it startled her. She glanced at the clock as she headed toward the door, and it was 37 minutes later, and that meant James was there.\n\nShe stopped at the door, took a deep breath, then smiled and opened it.\n\n\"James! Hi. Please come in.\"\n\n\"Thank you,\" he said as he came inside.\n\nAs Ali shut the door, he took a look at her and said, \"Wow. You look...amazing.\"\n\nAli laughed and said, \"Yeah, right.\"\n\nShe saw James staring at her and smiling, and it made her tingle from the inside out.\n\n\"Um, yes. Yes, you do,\" he told her as he gave her an exaggerated once-over.\n\n\"Well, you seem to have quite a knack for making me feel good. Thank you.\"\n\nShe led him back to the kitchen and offered him coffee or tea, and he told her he'd have whatever she was having, so she put on some water to boil and got out two cups and two Earl Gray teabags.\n\n\"So what's going on?\" she asked as she was setting the cups and saucers down. James had no idea she'd chosen them from her china set, something she rarely ever did.\n\n\"Well, as it turns out, without Hannah, we don't really have a cast. And that means no movie. So as you can imagine, Ryan and his buddies are seriously bummed.\"\n\n\"Oh, my. Not having a leading lady would make producing a romance movie very difficult,\" Ali said as she sat down.\n\n\"I didn't have the heart to tell Ryan he should have lined up another girl\u2014just in case. In fact, I never gave any of it much thought because it seemed like no big deal to me.\"\n\nHe paused then added, \"At least that's how it felt at first.\"\n\nAli smiled understandingly then said, \"But now that you've seen how much it means to Ryan, you feel responsible to help him find a solution.\"\n\n\"I see you're also insightful,\" James told her with a smile that caused another 'tingle'.\n\n\"Also?\" she asked as the tea kettle whistled. The gas stove made quick work of the water, and seconds later, the tea was steeping.\n\n\"Yes. You're obviously beautiful, and it's clear you're very intelligent. And now I know you're also insightful.\"\n\nAli laughed an almost nervous laugh as she said, \"Oh. Okay. If you say so.\"\n\n\"You don't think you're insightful?\" James asked as he raised the bag up to release more flavor.\n\n\"It wasn't that word I was objecting to,\" Ali told him before asking if he'd like milk or sugar.\n\n\"Just sugar, please. And what word was so funny?\"\n\nShe rolled her eyes as she took the lid off of the sugar bowl.\n\n\"What? Beautiful?\" James asked. \"Because that's not even in dispute.\"\n\nAli laughed again and thanked him before repeating what she'd just said.\n\n\"Okay. If you say so.\"\n\nJames noticed the way she stopped looking at him when she finished the sentence, and his instincts told him she might just possibly be interested in him.\n\n\"I do say so,\" he quietly told her before setting the bag on the saucer.\n\n\"So...how can I help?\" Ali asked as she added some sugar to her tea, as well.\n\nBefore James could speak, she told him with a smile, \"Just don't ask me to ask Hannah to come back, okay?\"\n\n\"No. Of course not.\"\n\nJames took a sip, told her it was delicious, then said, \"I was wondering if maybe...if you'd consider possibly taking Hannah's place.\"\n\nAli was taking a sip herself, and nearly spewed the tea.\n\n\"You can't be serious!\" she said. It wasn't mean. It was just so 'out there' it made no sense to her. \n\n\"I'm old enough to be Ryan's grandmother, so you can't possible think I'd...\"\n\nJames's sudden laugh stopped her in mid-sentence.\n\n\"Grandmother. That's very funny,\" he told her.\n\n\"Why? Why is that so funny?\"\n\n\"Um...because Ryan is just two years younger than Hannah, remember?\"\n\nAli looked away again and used a tiny spoon to stir the tea even though it wasn't necessary.\n\n\"And I've never heard of any grandmother being in her 30s.\"\n\nAli's eyes opened wider than the saucer in front of her.\n\n\"Thirties! Listen to you!\" she said with a shake of head and a little smile forming at the corners of her mouth.\n\n\"I'll uh, I'll play the leading man if you'll take the part.\"\n\nAli was so stunned by his comment that she sat there frozen for a second or two.\n\n\"I know you work, but Ryan is willing to well, work around that, if you'll, you know, help us out.\"\n\nThe answer should have been a very simple, easy, \"Thank you for asking, but that's not possible.\"\n\nInstead, Ali's mind was a jumble of thoughts and feelings as she suddenly imagined doing this. It wasn't the 'doing' part that was causing so much mental turmoil. She owned the beauty shop and could also work as little or as much as she wanted. It was more the thought of James kissing her at least once during the production. And that thought entailed him taking her in his arms and telling her he loved her and couldn't live without her, or words to that effect.\n\nIt wasn't cold in the house, but Ali had goosebumps all over her arms. For the first time, she thought about her daughter and what she might say were she to tell her that she was going to take her place. And more importantly that James was going to take Ryan's place.\n\n\"I...I don't know, James. I...I'm not sure how Hannah would feel about that.\"\n\n\"Oh. Sure. I hate to admit it, but that never even crossed my mind,\" he told her apologetically.\n\nNow he was the one looking into his teacup. Neither of them said anything for several seconds before he looked up and smiled at her.\n\n\"I think I might have gotten...what's that phrase? Irrationally exuberant?\"\n\n\"You're not old enough to remember Alan Greenspan!\" Ali playfully teased.\n\n\"Alan who?\" James replied, playing along. He had indeed heard of the man, and he was also familiar with his use of that term from back in 1996.\n\nNow Ali laughed, and once James knew she wasn't upset, he finished his thought.\n\n\"My uh, irrational exuberance was over the possibility of you...and me...together in this play.\"\n\nAli's facial expression changed, and James took as a sign that her feelings about that possibility were very different than his.\n\n\"You don't exactly see it that way, do you?\" he said a lot more quietly with no small amount of disappointment in his voice.\n\nAli was now reading is expression as well as analyzing his words. The conclusion was more than a little surprising when it hit her.\n\n\"James? Are you...are you trying to tell me something?\" she asked, her head tilted slightly and her eyebrows raised high.",
        "\"I'm not handling this very well, am I?\" James said, as he smiled a kind of half-smile her way.\n\n\"I don't know. You'll have to tell me what you mean by 'this'.\"\n\nJames rubbed his forehead then decided to say what he promised himself he wouldn't say.\n\n\"I don't think Ryan and Hannah were the only ones crushing on someone.\"\n\nAli's heart skipped a beat and her mouth went dry.\n\n\"You...you can't be serious,\" she said, unable to look at him.\n\n\"Are you saying you're hoping I'm not serious?\" James countered.\n\n\"Well, no. Of course not. It's just that, well, I'm...well, I'm so much older than you, so I...I don't really understand what you are saying.\"\n\nJames waited for her to look at him. When she did, he smiled a very different kind of smile; one that was warm and maybe even inviting.\n\n\"I've been trying to tell myself it can't be true, but it is, Ali.\"\n\n\"It is?\" she asked, her mouth even drier than before in spite of another sip of tea.\n\nJames looked down into the teacup again then looked at Ali.\n\n\"I haven't been able to stop thinking about you since we met. And yes, I know I'm a little younger than you are, and yes, I'd really like to help Ryan out, but the truth is...\"\n\nHe looked right at Ali then said, \"I really like you, Ali.\"\n\nA feeling of rejection washed over him when she didn't say anything, and he immediately found himself regretting having said anything.\n\nNow Ali was looking into her cup as she said, \"It's funny. Hannah was telling me that I...\"\n\nShe stopped talking then laughed nervously before finally looking at James again.\n\n\"Please don't laugh, but Hannah said she was sure you'd go out with me were I to ask you.\"\n\nShe started saying how he didn't need to worry, because that was never going to happen when James cut her off by saying, \"I would. In a heartbeat.\"\n\n\"What?\" a very surprised Ali asked with a little shake of her head.\n\n\"If you were to ask me out, I'd definitely say 'yes'. Without hesitation.\"\n\nShe was looking at him so intently it made James ask her what was wrong.\n\n\"You're...you're serious, aren't you?\" Ali replied so quietly he barely heard her.\n\n\"I am. I'm very serious.\"\n\n\"My mind is telling me you are. I just can't understand why.\"\n\nJames smiled then pretended to be very serious.\n\n\"Yeah. What guy in his right mind would want to go out with a smart, insightful, beautiful woman?\"\n\nFrom what seemed like a million miles away, Ali heard Hannah's voice.\n\n\"Ask him, Mom!\"\n\nWhen her emotion-addled brain registered who was talking and what she said, Ali was so startled she bumped the table hard enough that it rattled both teacups.\n\n\"Hannah Summers! What are you doing?\" her mother asked, barely able to believe this was happening.\n\n\"I'm sorry, Mom. I...I couldn't help myself. I knew James was here, and I, well, I wanted to, you know see him again, and...\"\n\nAli understood now. Hannah was embarrassed but also still wanting to see the very handsome older man again.\n\n\"How much of that did you hear?\" Ali asked as she told her daughter to come see her.\n\nHannah slowly walked their way, her head down the entire time.\n\n\"Almost all of it?\" she said as though she were asking a question.\n\n\"Hi, Hannah,\" James said very warmly and with a genuine smile.\n\n\"Hi,\" Hannah replied before saying, \"I'm really sorry, James.\"\n\n\"Don't be.\"\n\nRealizing he wasn't the one she'd betrayed, he looked at Ali then said to Hannah, \"At least not on my account.\"\n\n\"Sorry, Mom,\" the young teen said. \"I just really want you guys to get together.\"\n\n\"Sit down, honey,\" her mom said.\n\nAli took her daughter's hand then told her, \"First of all, I'm very disappointed that you would spy on me.\"\n\n\"I am sorry, Mom.\"\n\n\"I forgive you. And just as importantly, who I see...or don't see...is my business and mine alone. Okay?\"\n\n\"I know,\" her chastened-daughter replied. \"But like I said, I just want you to be happy.\"\n\n\"I know you do, sweetie, and I love you for that. It's been very hard since Dad passed away. But I have to be the one to find that special someone...else,\" her mother said as gently as she could.\n\n\"I uh, I should probably be going,\" James said when he found a convenient place to speak after feeling like a third wheel.\n\n\"No. Please don't go!\" Hannah said immediately, nearly pleading with him to stay.\n\nHe looked at Ali and couldn't tell what she was thinking.\n\n\"My mom still hasn't told you if she'll take my place yet,\" Hannah reminded them both.\n\n\"You really did hear everything, didn't you?\" her mother said, sort of teasing and sort of giving her some more grief.\n\n\"I think it would be better if I left instead,\" Hannah replied without answering her mom's question. \"That way you guys could talk. About, you know...stuff.\"\n\nHannah stood up then looked at James and apologized again. After he told her it really was okay, she said something to him that made him and her mom smile.\n\n\"At least now I know why you didn't like me back.\"\n\nThe chuckle didn't last long, and when it ended, Hannah said, \"For whatever it's worth, I'm really happy that you like my mom, even if you don't like me.\"\n\nJames then stood up and held out a hand. Hannah looked at him then at her mom her smiled and nodded. When James took her hands in his he said, \"I do like you, Hannah. Just not like that, okay?\"\n\nHannah managed a little smile then forced herself to look at him as she said, \"Okay. And I think I knew it was impossible. But it's not impossible for you and my mom, right?\"\n\nJames looked at Ali again who only smiled.\n\n\"Maybe your mom and I can discuss that.\"\n\n\"Once you're upstairs and in your room,\" her mom added.\n\n\"I'll close my door and put my earbuds in. I promise,\" Hannah told her as her mom extended her arms, too.\n\n\"I don't love your eavesdropping, but I do love you, Hannah.\"\n\n\"I love you, too, Mom,\" she said before smiling at James and leaving the kitchen.\n\n\"So,\" James said when they heard Hannah close her bedroom door.\n\n\"Yes. So,\" Ali replied, her head now much more clear even as her heart and tummy were doing some crazy things.\n\n\"I really will go out with you if you ask me,\" James told her with another smile.\n\nThe teacup became even more interesting as Ali stared into it again.\n\n\"I...I've never asked a man out before. Okay, I did ask someone to go with me to a Tolo dance in high school, but that's it.\"\n\nJames moved over to where Hannah had been sitting then looked into Ali's eyes and said, \"I really do like you, Ali. A lot. So maybe I can make this easier for you.\"\n\n\"Ali? Would you like to go out with me sometime?\"\n\nAs she tilted her head as though she was weighing her answer, James also asked, \"And will you play the lead in Love Story, Lubbock style, with me?\"\n\n\"Well, I it would be pretty terrible to make Ryan or his friends to have to give up on their dreams.\"\n\n\"Right. We don't want that, do we?\" James said as he reached over to take her hand.\n\nStill not sure that was actually happening to her, Ali cautiously gave her hand to him then said, \"No. Definitely not.\"\n\n\"That was the easy part. Now...will you go out with me?\" he asked again.\n\n\"You're really sure about this?\" Ali asked, desperately needing to be sure that he was sure.\n\n\"Very.\"\n\n\"Even if I'm not...still in my 30s?\"\n\nIt took James a few seconds to recall the 'grandmother' comment, but when he did, he laughed.\n\n\"Yes. Even if.\"\n\nAli's heart was already beating fast, but when James began leaning her way, it nearly exploded as her entire body trembled in anticipation. She not only let him kiss her, she kissed him back and put her hand on his face before it ended.\n\n\"Wow. You really are serious, aren't you?\" she whispered when their lips parted.\n\n\"I am. And you really are beautiful, Ali.\"\n\n\"If...if you say so,\" she told him one more time with a sweet smile.\n\n\"I do say so,\" James said, before softly kissing her one more time.\n\n\"So this is what it's like to lose your mind,\" Ali said just as quietly as before. But this time she smiled, and so did James before he addressed her rhetorical question.\n\n\"I don't know. I'm thinking I finally came to my senses.\"\n\nAli laughed then asked a real question as her heart began slowing down a little.\n\n\"So when is rehearsal?\"\n\n\"Let me call the director, okay?\"\n\n\"Okay,\" Ali told him as she stared at his handsome face wondering how and why he could possibly really be interested in her. \n\nAnd yet, deep down, she knew that he was. And she also knew that she was now feeling happier and more excited than she'd been since her late husband was alive, and that realization scared her as much as it thrilled her.\n\n\"Ryan can have the 'crew' there in about an hour.\"\n\n\"Then I guess I'll meet you there,\" Ali said.\n\n\"What? No. You need to memorize your lines on the way.\"\n\n\"I can't. I don't have the script.\"\n\nJames pulled out his phone, tapped it a few times then said, \"Now you do. And you can work on them while I drive us there.\"\n\nAli was doing her best not to smile as she said, \"You're a very interesting man, James Young.\"\n\n\"True. And I'm also very...talented,\" he informed her with faux smugness.\n\nAli's mind wasn't the kind to 'go there', but all it could see was how 'talented' James really was as they...\n\nHer short daydream was cut off when he added, \"And modest, too.\"\n\nUnable not to laugh, Ali did just that then told him she needed to get her coat and let Hannah know where she was going. A couple of minutes later, Hannah came down the steps with her mom, and when James saw her, he gave Ali a quizzical look.\n\n\"I think my daughter approves of my having taken her place,\" she said with a devious little smile her Hannah couldn't see.\n\n\"Ah, okay. Alles klar!\" he replied, using the only German phrase he knew in his best German accent which was pretty bad.\n\n\"Don't quit your day job,\" Ali teased as she grabbed her purse and told him she...they...were ready.\n\nFive minutes into the drive, no one had said a word.\n\n\"Why aren't you guys talking?\" Hannah asked, the silence driving her crazy.\n\nBoth James and her mom went 'shhh!' at the same time, causing them both to laugh.\n\nJames saw the look on Hannah's face and told her that her mom was learning her lines.\n\nThe teen girl smiled then said, \"Whew. I thought you guys were already fighting.\"\n\nUnable to concentrate, Ali laughed. When she did, so did Hannah, and James joined in with them.\n\n\"You know what I just figured out?\" Hannah asked.\n\n\"What's that?\" her mom asked back.\n\n\"This is a whole lot better.\"\n\n\"This?\" Ali asked.\n\n\"Yeah. You and James rather than me thinking that, you know...\"\n\n\"Oh. Okay,\" her mom said with a little laugh.\n\n\"You're really okay with this?\" James asked.\n\n\"Yes. I'm totally okay with it,\" Hannah told him. And the truth was, she was very okay with the new arrangement and even happy about it. \n\nThere was another lengthy period of quiet until James looked over and noticed how intently Ali was reading again.\n\n\"So what do you think?\" he asked.\n\n\"This is good. I mean...really good.\"\n\nWhen she looked over at him, he saw that her eyes were wet.\n\n\"Yes, it's that good,\" Ali told him. \"It's so...romantic!\"\n\n\"I know,\" James replied with another warm smile.\n\n\"Wait. Didn't Ryan put this together all by himself?\"\n\n\"Almost,\" James told her, a little smile offering her a hint of something more that was as of yet unspoken.\n\n\"Almost?\"\n\n\"The overall idea is his. But I may have provided some guidance where the romance is concerned.\"\n\nJames was also aware that Hannah was still extremely quiet. As he tried to find out why, Ali told him someone else was reading the script, too.\n\n\"What do you think, honey?\" her mom asked.\n\n\"It really is a love story,\" the young girl replied. \n\n\"And these are your lines, huh?\" Ali asked James as she warmly smiled at him.\n\n\"The romance-related stuff is mine. For better or worse,\" he told her, the same kind of smile on his face.\n\n\"Interesting,\" Ali said, not offering anything more as to what she meant.\n\n\"I see three bicycles,\" James said, as he pointed up ahead.\n\nHannah's return to the 'movie set' prompted smiles, looks, and a couple of shy, \"Hi, Hannah,\" comments from Adam and Carlos.\n\n\"Hi,\" she said back in her old, friendly tone of voice as her mom and James walked up.\n\nWhen Adam saw her he stopped smiling and stared. Carlos was so surprised his native Spanish took over.\n\n\"Chinga!\" he said quietly.\n\n\"I told you she was beautiful,\" Ryan quietly said. He knew the meaning of the word and understood why his friend had used it.\n\n\"Boys? This beautiful lady is Hannah's mother, Ali Summers. Ali? These fine young men are Adam and Carlos.\"\n\nAli told them both it was a pleasure to meet them as the pre-teens stared, barely able to say, \"You, too,\" back to her.\n\n\"So are we ready to get started?\" James asked his nephew.\n\nThere were two camcorders on tripods, but the costumes weren't ready. And with the change in the lead, Adam's mom said it would be at least another week. But they needed that time to rehearse, so for now, it was no big deal.\n\n\"Okay. So in Act 1, Scene 1, our future lovers meet for the first time on the hospital,\" Ryan explained as he walked around showing his actors where they would stand for the opening scene.\n\nBefore anyone realized it, two hours had passed, and Ali found herself thoroughly enjoying the experience. She'd assumed it would be more like an elementary school play with stilted language and a lot of silliness. But it was actually a very thoughtful story in which a younger man who was suffering from a serious form of cancer made an indelible impression on a beautiful, older nurse who eventually falls in love with him. \n\nAnd, just like in the original movie only with the male-female roles reversed, the handsome, brave, younger man dies as the woman he loves tells him how much he means to her. They didn't get anywhere near that far during this first rehearsal, but there were only three acts to the movie, and each act had less than five scenes, so it wouldn't take long to get there.\n\nAfter agreeing on the time of their next get together, Ali told Ryan how impressed she was with his work. The boy beamed with pride but was too humble to say anything more than, \"Thank you.\"\n\nEven Hannah was looking at him in a different light, and were he say, a couple of inches taller, she was thinking she might just be able to see herself with a younger guy someday. After all, her mom was kind of with one now, and even at this very early stage, she seemed over the moon with him.\n\nWhat she didn't know was that by the end of the day, her mom was imagining telling her three best friends about her new...boyfriend...with the worst part coming when she told them his age. \n\n\"Oh, so he really is a boy!\" Ali imagined them saying and laughing as the realization of what she was doing hit her.\n\nOf those three friends, one of them had been close to her for nearly 20 years, and she was the closest thing to a sister she'd ever had. After an hour of fretting, Ali felt like she had to talk to another adult or else she might explode.\n\n\"Helene? Hi. Do you have a moment to talk?\" Ali asked after her best friend picked up.\n\n\"Of course. What's going on?\"\n\n\"Well, a lot. I think.\"\n\n\"Ali? Are you okay?\"\n\n\"That's the big question. And to tell you the truth, I'm not sure.\"\n\n\"It's only 8 o'clock. I can be there in 10 minutes if this is serious.\"\n\n\"I...I hate to bother you like that,\" Ali began saying.\n\n\"Stop. I'll be right there, okay?\"\n\nFifteen minutes later Helene Jarvis was sitting in the living room with her best friend and asking her what was going on.\n\nAli drew a long breath then exhaled loudly.\n\n\"There's a boy who's making a...a movie. And he wanted Hannah to be the leading lady.\"\n\n\"Uh-huh,\" Helene said as a way of letting her friend know she was listening and waiting for the important part.\n\n\"Well, that didn't work out so well. And the reason it didn't is because this boy's uncle came over to provide moral support for his nephew when he asked Hannah to um, star in the movie.\"\n\n\"Okay.\"\n\nAli explained the rest of the story as it had unfolded to include her daughter's comment about asking this man out.\n\n\"This boy's uncle. Who's...younger than you,\" Helene said, filling in the blanks.\n\n\"Um...yes.\"\n\n\"Okay. And?\"\n\nAli then walked her through James's second visit to the house and what ensued.\n\n\"O...M...G!\" Helene said when she realized Ali was on the verge of telling her that James kissed her.\n\n\"Exactly!\" Ali replied.\n\n\"Wait. You think that was...a bad thing?\"\n\n\"Wait. You don't?\" Ali asked, now feeling very confused.\n\n\"Earth to Ali!\" Helene said as she waved her hand in front of her friend's eyes. \"He's a successful website designer. He's caring and conscientious. And he's...what did you say? Gorgeous?\"\n\n\"I...I kind of did say that, didn't I?\" Ali admitted.\n\n\"And he told you he likes you. No. He really likes you! And he kissed you.\"\n\n\"Yes! Exactly!\" Ali said triumphantly, now that her friend finally understood.\n\n\"Yeah, I'm not seeing the problem here. At all.\"\n\n\"What? Helene! How can you not see it?\"\n\n\"Well, gee. Let me see. I've been married to the same man for 18 years. We have two wonderful kids, a nice house, and we maybe do it twice a month. We're both crazy busy, and while we still really love each other, there's just no time for romance. And let's be honest. After that long with someone, it's not like you're gonna be surprised in bed, right?\"\n\n\"Helene!\" Ali said as though that was somehow 'lewd' even though she laughed when she said it.\n\n\"It's true! It's...it's nice. It's...comfortable. But what you've got is...HOT! And these days I'd give anything for hot. Shoot, I'd gladly settle for really warm!\"\n\n\"We're the same age, Helene. James is...\"\n\nShe couldn't finish the sentence because she didn't know.\n\n\"I don't know for sure, but I get the impression he isn't even 30 yet.\"\n\n\"If you don't stop talking, I'm gonna orgasm right here on your couch!\" Helene told her friend so seriously it made Ali laugh.\n\nFeeling a whole lot better, Ali admitted something.\n\n\"He really is hot.\"\n\n\"Hot or...smokin' hot?\"\n\nHelene was leaning toward Ali for details, and that made her friend laugh again.\n\n\"Let's put it this way. When he kissed me, I felt like my...\"\n\nShe looked around to make sure Hannah wasn't listening in again, then whispered loudly, \"My va-jay-jay was on fire!\"\n\n\"I knew it! You...you little bitch, you!\" Helene quipped. \"You know I hate you, right?\"\n\nAli laughed then reached over to hug her best friend.\n\n\"I hate you, too!\"\n\nAs Helene pulled away she told her BFF, \"Ali? You owe it to yourself to at least give this a go. Hannah obviously likes him, too, so I can't see any reason not to at least try.\"\n\n\"Yeah?\"\n\n\"Oh, hell yeah!\" Helene said so emphatically it made them both laugh.\n\n\"Okay. I'll do it,\" Ali announced.\n\n\"And by 'do it' do you mean you'll be...\"\n\nBeing Helene could say 'doing it', Ali stopped her.\n\n\"Okay, okay. I get it.\"\n\nUnwilling to let it go, Helene pushed one more time.\n\n\"So...will you? Be getting it?\"\n\nAli looked around again then said, \"Do you know how long it's been since I 'got it'?\"\n\n\"Yes. I'm so sorry. Unfortunately, I do.\"\n\nThe twinkle in Ali's eyes answered the question.\n\n\"But you want to 'get it', huh?\" Helene teased.\n\n\"I could think of worse things,\" came the rather coy reply.\n\n\"Well, I say\u2014do it! And do it often. And even more importantly, you need to tell your best friend EVERY detail, okay?\"\n\nAli gave her a little look then said, \"Yeah, that's not gonna happen.\"\n\nShe tried not to laugh then told Helene, \"But with any luck, IT will happen. And please God, let it be soon.\"\n\n\"I am SO happy for you, honey!\" Helene said as they hugged a second time before moving on to work, the kids, and other topics of a less pressing nature.\n\nBy the time Helene left, Ali was 'all in'. This could be the biggest mistake of her life, but after taking with her best friend, she no longer cared and couldn't wait to see James Young again.",
        "On their way to rehearsal, Ali asked James if he had plans for Christmas.\n\n\"Yes and no. My family has a big meal then opens presents on Christmas Eve, so I'll be with my brother Pete\u2014Ryan's dad\u2014and his wife, Becky most of the day and night. Other than that, no.\"\n\n\"Would you possibly care to join us for Christmas dinner?\"\n\n\"I'd love to, but don't you have other family in town?\"\n\n\"No. All of my family is still in Oregon. I moved out here with my husband, and Lubbock has been home ever since. Hannah was born here, and it's the only place she's ever lived. We've gone back to the Portland area several times, but no, we'll be on our own unless you come over.\"\n\nAli had a standing invitation to Helene's home, but after her husband passed away it was too painful to see her, her husband, and her children together as a family. They had two boys, and neither of them got along well with Hannah, so she politely refused each time her friend asked.\n\n\"Then I'll be there,\" James told her.\n\n\"You're welcome to come earlier, but I don't want you to feel like you need bring a gift. Or anything, for that matter.\"\n\n\"As much as I'd enjoy that, I don't want to intrude on something so personal.\"\n\nHannah hadn't said anything until that very moment.\n\n\"James? You won't be intruding. I promise.\"\n\nHe smiled as he said, \"I believe you, Hannah. I'm just not sure that's such a good idea.\"\n\nHe was the disappointment in her face then said, \"But next year for sure.\"\n\nHannah not only smiled, she laughed. And when James looked over at Ali, she smiled, too.\n\n\"I'm going to hold you to that, James,\" she said with a little laugh.\n\nIn his best Groucho Marx voice and along with with a Groucho hand gesture, James said, \"Well, as long as you hold me!\"\n\nIt wasn't very funny, but Ali was so happy she laughed then grabbed his hand.\n\n\"What? Was that too much?\" James asked as he looked down at her hand.\n\n\"It was...sweet,\" Ali told him.\n\n\"I don't get it,\" Hannah said, causing her mom and James to chuckle.\n\nThe finished rehearsing the entire first act then agreed to meet there again the following day at the same time. Ryan had an idea of how to turn a small area in one corner of the building into a hospital room and shared his idea with everyone else.\n\n\"I have a friend who sells medical devices,\" Ali said. \"I know she has hospital supplies. Let me check and see if we could maybe get a bed and some other stuff for the final day. No promises, but I'll ask.\"\n\nJames was amazed by the way Ryan saw things. He was able to envision a scene the way James was able to imagine a fully designed website before he did anything. It was extremely unlikely that Ryan would ever direct a real movie, but for a 12-year old boy, he was very impressive. Even Hannah told him she thought he was a kind of 'young genius', and that sent Ryan into some kind of Seventh Heaven as he launched into an explanation of how the rest of their time would be spent.\n\nThey rehearsed each day through the 23rd then agreed to take the next two days off. They would begin rehearsing the final act on the 26 and 27th then follow up with the third act. They would take New Year's Day off then come back and have a dress rehearsal on the 2nd. Depending on how that went, they would shoot the movie on the 3rd or 4th leaving them three more days until the boys had to be back in school.\n\nWhen they pulled into to Ali's driveway, Hannah thanked James then got out.\n\nOnce they were alone, Ali asked James a question.\n\n\"I was kind of wondering why you haven't kissed me since...\"\n\nBefore she could finish, James answered her.\n\n\"I've wanted to. I just didn't know if it was okay to kiss you in front of Hannah. But I've definitely wanted to.\"\n\n\"It's okay, James. She likes you, too.\"\n\n\"Can I at least try and make up for it?\" he asked as he leaned closer.\n\n\"Please do,\" she said very quietly just before their lips pressed together. \n\nThey'd kissed, but they'd never 'made out'. And this first kiss quickly turned into something close to making out as tongues soon touched then swirled as soft little moan's from somewhere deep inside a 43-year old woman who was starving for love.\n\nWhen they realized they had to stop, James smiled and asked if that made up for things.\n\n\"It was a very nice start,\" Ali told him as she tried not to laugh.\n\n\"I see,\" James replied as his eyebrows lifted up a little.\n\n\"Maybe we can find some time to be alone sometime,\" Ali then said, a look in her eyes that told James she had more than kissing on her mind.\n\n\"I'd love that, Ali.\"\n\n\"Me, too,\" she said as she leaned over and kissed him before saying she should probably get inside.\n\nBefore James got out to open her door he said, \"Would you maybe like to have dinner with me tomorrow? At my place?\"\n\nAli's body tingled then felt like it was on fire.\n\n\"Do you mean with Hannah, too?\" she asked not wanting to be too obvious.\n\n\"That would be fine, but it might be nice if you and I could, you know, be alone for a little while.\"\n\nAli's smile said it all.\n\n\"Yes, it would be nice,\" she replied. \"And Hannah's old enough to be alone for several hours now, or she could even spend the night at a friend's house.\"\n\n\"Spend the night. I like the way that sounds,\" James said as he gently touched her face.\n\n\"It does have a nice ring to it, huh?\"\n\nHe kissed her again then got out an opened her door. Ali put her arms around him, kissed him for several seconds, then asked what time she should be ready.\n\n\"How about six?\"\n\n\"Six is perfect,\" she told him before they kissed one more time.\n\nThe next day's rehearsal called for the leading man and leading lady to kiss for the first time. It was supposed to be a brief peck, but passion got the best of them, and it turned it something more.\n\n\"Sorry,\" James said to his nephew while still looking into Ali's eyes.\n\n\"Are you kidding? That was perfect! That's exactly what this scene needed!\" Ryan said with a ton of enthusiasm.\n\nHe was close to Hannah who said, \"Your uncle and my mom make a very cute couple.\"\n\nHe looked up at the taller, older, beautiful 14-year old girl and told her he agreed. Hannah didn't say anything, but as she looked at him, she couldn't help but wonder if maybe one day there might be something between them, too. But when she thought about having to bend down to kiss him, the thought lost its appeal very quickly.\n\nHannah's best friend was very excited to have her staying over that evening, and when Hannah explained why she was there, her friend wanted to know everything about the handsome, younger man her mom was dating. James, and then other boys, became the focus of their discussion which lasted until sometime around 2am.\n\nWhat Hannah didn't know was that by that time her mother and this handsome, younger man had made love twice and was now fast asleep in his arms. After their first time, Ali told James about her frantic call to Helene and how that conversation had gone.\n\n\"I totally love her!\" James said as seriously as he could when Ali mentioned Helene's encouragement for her friend to 'get it'.\n\n\"Yeah. She's has some very good advice,\" Ali agreed as she pulled him closer again.\n\nShe later told him that it had been 38 months since the last time she'd made love.\n\n\"That's both sad and amazing,\" James replied. \"The sad part is obvious. The amazing part is that you are so beautiful, it's hard to imagine you not, you know, finding someone.\"\n\nAli went on to try and explain how she felt about finding 'someone' and the 'right someone'.\n\nShe rolled over on top of him, smiled, kissed him, then said, \"And it was definitely worth the wait.\"\n\nJames had some things he wanted to tell her, too, but she'd needed him again so badly that his thoughts could wait. But when she was snuggled up agains him he told her.\n\n\"I have never once wanted a woman to stay with me. And the thought of settling down or even the dreaded 'R' word, scared the dickens out of me.\"\n\nAli laughed then asked him if anything had changed.\n\nThis time, he really was serious when he spoke.\n\n\"Everything has changed, Ali. Everything.\"\n\n\"Yeah?\" \n\n\"Uh-huh.\"\n\n\"So being in a...relationship...isn't scary anymore?\" she asked, her eyes hopeful with anticipation.\n\n\"Not if it's with you,\" he told her as he brushed her hair back then kissed her softly.\n\nShe smiled but didn't say anything, so James asked, \"How about you? Are you over your fear of being with someone so much younger?\"\n\nAli smiled again then said, \"Considering how I still don't know exactly how much younger we're talking about...yes.\"\n\n\"So were I to tell I was, oh...let's say...28. You wouldn't freak out?\"\n\n\"Oh...my...goodness,\" Ali said when she finally heard the number.\n\n\"You okay?\" James asked.\n\n\"Had I not gotten such strong support from Helene, I think I might have just had a heart attack,\" she replied with a sweet smile as she ran her long nails through his thick, dark hair.\n\n\"So...you're okay?\"\n\n\"Of course. You're young and gorgeous and...\"\n\nShe ran her hand up and down his torso then added, \"And so hard.\"\n\nAli looked at him then asked, \"The bigger question is, 'Are you okay'?\"\n\n\"Are you serious?\"\n\n\"Yes. Very.\"\n\n\"So the way I look at you and the way I hold you isn't enough?\" he quietly asked as he stroked her cheek with the back of his fingers.\n\n\"I'm 43, James. Not 33. Forty-three.\"\n\n\"Is that supposed to change how I feel about you?\" he asked.\n\nThe look in his eyes told Ali he was possibly hurt that she'd even needed to ask, and now she felt terrible.\n\n\"I hate feeling insecure, but 15 years is well, a lot of years.\"\n\nJames put his hand on her face, smiled at her then said, \"Ali? Honey? I don't care at all about that. The only thing that matters is the way I feel when I'm around you. No one, and I mean no one, has ever made me feel like this before. EVER.\"\n\nHe kissed her forehead then gently said, \"Okay?\"\n\n\"Yes. Okay. That's all I needed to hear...sweetheart.\"\n\nWith that she was able to fall asleep happy and contented, free of the constant nagging in the back of her mind that James might be too good to be true. He was that good in every way, but more importantly, she knew that he was being truthful. She still couldn't understand how or why luck or fate had smiled on her like this, but it had, and that was something she could no longer deny.\n\nThe change in their relationship after that was dramatic. They no longer made any attempt to hide their feelings. The two of them held hands almost constantly and while they kept the public displays of affection to a minimum, they never hesitated to kiss one another for any reason.\n\nHannah noticed it the first time she saw them together after her sleepover, and she mentioned it to her mom.\n\n\"Are you still okay with this?\" \n\n\"Mom, I am SO okay with it. Okay?\"\n\nThe double 'okay' made her mom laugh then reach out and hug her daughter.\n\n\"Are you guys in love?\" Hannah asked when he mom let go.\n\n\"I don't know, honey. It's very early, but I can very easily see that happening.\"\n\nAli waited for a moment than again asked, \"Is that okay?\"\n\nThe very grownup response surprised Ali.\n\n\"Mom? Anything that makes you smile and laugh like you did today is very okay with me.\"\n\nThen for effect, Hannah again added, \"Okay?\"\n\n\"Yes. Okay!\" he mom replied before hugging her daughter one more time.\n\n\"So are we buying presents for James?\"\n\n\"You don't need to do that, Han.\"\n\n\"I want to.\"\n\n\"That's fine, just don't expect him to buy you...us...anything.\"\n\nNow it was her mom who said it.\n\n\"Okay?\"\n\nHannah laughed then hugged her mom again and told her she loved her.\n\n\"I love you, too, Hannah banana.\"\n\nEven the name her daughter now hated didn't bother her at all. She was just so happy to see her mom smiling like her old self again.\n\nAfter a fantastic Christmas Eve day and night with Ryan's family, Pete asked when his little brother was going to bring his new girlfriend around.\n\n\"Yes, James. When am I going to meet this mysterious older woman of yours?\" Becky playfully asked. \"Ryan says she's beautiful, and I want to see just how beautiful she is!\"\n\nRyan had talked about Mrs. Summers...and Hannah...a lot, and it seemed like his mom and dad should know them both by now.\n\n\"Soon. I promise,\" James...promised.\n\n\"Is this getting serious?\" Pete asked as everyone sipped some eggnog after opening presents.\n\nJames saw the way Ryan was looking at him and asked what was going on.\n\n\"You said not to get too serious with any girl too fast, Uncle James.\"\n\nHis uncle reached over and mussed up his hair again then said, \"No. I told you not to do that.\" \n\nRyan laughed then said, \"So...are you?\"\n\n\"Yeah. I think I just might be,\" James told all of them.\n\n\"Well, as I live and breathe!\" Becky said, a look of quasi-disbelief on her face. \"James Young is falling in love!\"\n\n\"Hey! He didn't use the 'L' word,\" Pete said, thinking he was defending his younger brother.\n\n\"I haven't used it myself,\" James told them, \"but I gotta tell you, I think I just might be.\"\n\n\"Then bring her over here ASAP!\" Becky told him in no uncertain terms.\n\n\"Wait. You just met her, Jimmy,\" Pete said.\n\n\"No one knows that more than I do, Pete. But if this isn't love, then I can't wait to find out how much better the real thing is.\"\n\nHis big brother stared at his younger sibling for several seconds then, with a little shake of the head said, \"I'll be damned.\"\n\nRyan jumped up and ran to get the 'swear jar' his mother had set out after Pete promised to clean up his language.\n\n\"You owe a dollar, Dad!\" his son announced.\n\nPete laughed, fished a dollar out of his wallet, and dropped it in the jar.\n\n\"That was worth every penny,\" he said, causing everyone to laugh.\n\nJames arrived at Ali's the next morning at 9am, something he wouldn't do for just anyone. Then again, Hannah was no longer little and waking up at 4am wanting to open presents. She was still asleep when James pulled in, and that gave him and Ali some time to engage in a little of making out, one of their new favorite pastimes. \n\nHannah was very happy to see him there when she finally came downstairs.\n\n\"Merry Christmas,\" James told her when she walked in.\n\n\"Merry Christmas,\" she said back with a smile. \"To both of you.\"\n\nThey talked for a few minutes before Hannah mentioned presents.\n\n\"Oh, right. Let me go get mine,\" James said, surprising Ali as he jumped up.\n\n\"You didn't have to do that, James,\" she told him.\n\n\"I know,\" he replied with a wink. \"I'll be right back.\"\n\nOnce he was back inside, Hannah handed him a box that was very neatly wrapped with a large bow on it.\n\n\"Mom and I, well, mostly Mom, bought this for you,\" she told him.\n\n\"It feels heavy,\" James said as he shook it.\n\n\"Open it!\" Hannah told him as she sat down and waited.\n\n\"Are you kidding?\" James said when he saw the genuine leather jacket. \"This is...insane!\"\n\n\"Do you like it?\" Ali asked hopefully.\n\nJames stood up, pulled it on, and said, \"I love it. Thank you!\"\n\nHe leaned down and kissed her, and while he didn't see it, Hannah was smiling from ear to ear.\n\n\"So...your turn,\" he said as he handed one to Ali and another to Hannah along with a card for both of them.\n\n\"You first, Mom!\"\n\nAli carefully opened the card, and as she read it, her eyes filled with tears.\n\n\"Thank you, James,\" she said after reading the words about how her presence in his life was the greatest present a man could ever receive.\n\n\"You missed something,\" he told her as he pointed to the bottom of the card where there was a smaller card stapled to the big one.\n\n\"The bearer of this card is entitled to one new, free website at the time of her choosing.\"\n\n\"Oh, my gosh! James! This is...amazing!\" Ali said before kissing him and thanking him.\n\nShe still hadn't opened her present, and Ali instead Hannah open hers.\n\nInside there was a beautiful cashmere scarf and matching gloves in an off-white color.\n\n\"James. These are...gorgeous!\" Hannah said as she threw the scarf around her neck and pulled on the gloves and struck a Greta Garbo pose that made everyone laugh.\n\n\"Can I hug you?\" she asked.\n\n\"You don't have to ask, Hannah,\" he told her as she came over and hugged him. \n\n\"I love them. Thank you, James.\"\n\n\"Okay, Mom,\" Hannah said, the scarf and gloves still in place.\n\n\"I'm not very original when it comes to gifts,\" James said by way of apology as Ali unwrapped hers.\n\nIt was the cashmere sweater that was part of a set, and he decided to divide them up to avoid having to think too much.\n\n\"It's beautiful!\" Ali told him as she held it up in front of her.\n\n\"Just not very...\"\n\nAli interrupted him with another kiss, and Hannah said, \"We share clothes all the time now, so we can both use all of these things.\"\n\n\"Yeah?\"\n\n\"Yes. We love them,\" Ali told him, and it was all she could do not to say, \"And I love you, James Young.\"\n\nBut she did say, \"And we love you, too.\"\n\n\"Well, I also love you guys,\" he replied before pulling Hannah over to his other side and putting his arms around them both.\n\nAli leaned her head on his shoulder and said, \"This is so nice.\"\n\n\"I second that,\" Hannah said as she did the same thing.\n\n\"And I third that,\" James told them, drawing a little laugh. \"I must be the luckiest guy in Lubbock. I have a beautiful girl on either side of me, and I'm happier than I've even been in my life.\"\n\nAli had tears in her eyes again as she looked up at James and told him she was, too, her former life with another man she loved aside. \n\n\"Me, three!\" Hannah added, lightening the mood and making her mom laugh even as she tried to dry her eyes.\n\n\"Merry Christmas, honey,\" James told Ali once she dabbed away most of the wetness.\n\n\"Merry Christmas, sweetheart,\" she said back before kissing him softly.\n\nHannah waited then pointed to her cheek.\n\nJames and her mom laughed as he leaned over and kissed it.\n\n\"And?\" she asked, causing her mom to open her eyes wide.\n\n\"I love you, too, Hannah,\" James replied before Hannah said it back and all them hugged and laughed.\n\nJames spent the rest of the day with them helping the girls he loved make dinner then ate it with them, and later that evening they all watched It's a Wonderful Life.\n\nOnce again, Ali Summers was teary eyed, and when James looked at her she said, \"It really is a wonderful life.\"\n\n\"With you and Hannah it, yes it is,\" he agreed as he softly kissed again.\n\n****\n\nThe movie was shot on the 3rd and 4th of January as James and Ali ferried the crew around town. Ryan made smart use of a local park bench, a small stream, and some other quaint places to shoot each scene, and Ali's friend came through in a big way. The final scene looked like a very realistic hospital room where, after the leading man's cancer came back, the beautiful, older nurse who'd fallen in love with him was by his side and holding his hand when he took his final breath. Ali's tears weren't just convincing. They were real as she not only recalled her first, devastating loss, but imagined another with this amazing, younger man she now loved.\n\nThe experience was emotionally draining for her, and once Ryan called, \"Cut!\" for the final time, she knew she had to tell James how she felt.\n\n\"I...I couldn't bear to lose you,\" she said as tears continued to fall.\n\n\"I'm not going anywhere,\" he said as he reached up and dried her eyes.\n\n\"You better not. Not after making me fall in love with you.\"\n\n\"I've been in love with you since the moment I first saw you,\" James told her.\n\nAli now had tears streaming down her face, and again, was completely unaware that her daughter, and the rest of the 'crew' were watching.\n\n\"Kiss her!\" Adam called out. \n\nWithout prompting, Ryan, Carlos, and Hannah joined in and started a chant.\n\n\"We can't tell our fans no, can we?\" James asked the older woman he loved.\n\n\"No. They're very loyal, and that just wouldn't be right.\"",
        "James pulled her into the bed with him and kissed the beautiful 'nurse' as the Three Amigos and the prettiest girl in Lubbock cheered and clapped.\n\n*****\n\nAt 15, Hannah was a beautiful young woman who, as the Maid of Honor just before Christmas later that year, looked almost as pretty as her mother. But it was Ali Summers who stole the show. She was a beautiful bride indeed. \n\nRyan had shot up nearly four inches since the big movie, and when he asked his new...cousin-in-law? to dance, she happily accepted. It was a slow dance, and just before it ended, Hannah said, \"I'm really sorry I gave up and quit, Ryan.\"\n\nRyan smiled at her and when he did, Hannah felt weak in the knees.\n\n\"It's okay. If you hadn't, my uncle and your mom might not have ever fallen in love.\"\n\n\"No, you're right,\" Hannah agreed. \"But I did quit, and that's a shame because we never had the chance to, you know...\"\n\n\"Kiss?\" Ryan asked, looking very grownup and handsome in a suit.\n\n\"Yes,\" Hannah replied with a smile. \"But we could make up for that.\"\n\nMr. and Mrs. James Young were standing next to one another and watching. Both of them were smiling, and when Ryan leaned in and kissed Hannah, Ali took her husband's hand and squeezed it.\n\n\"Love is the air, honey,\" she told him.\n\nHe looked at the most beautiful woman he'd ever seen and told her, \"Yes it is,\" before kissing her, too.\n\nRyan's movie never made it outside of Texas, but it bounced around YouTube for months and had nearly a half million views. Somewhere along the line, someone showed it to a retired director who was living in Dallas. He was impressed enough to find out who the director was, and when he got him on the phone, spent a good twenty minutes discussing the film and offering advice then another ten minutes or so answering the young boy's questions.\n\nHe also suggested a film director college in Los Angeles Ryan had never heard of. But over the next five years, going there became his passion as he continued making small, low-budget movies in Lubbock. \n\nHannah graduated from high school and went of the the University of Texas where she majored in elementary education then came back to Lubbock and taught second grade.\n\nTwo years later, Ryan's Uncle James and Aunt Ali, along their five-year old daughter, Olivia June, flew to LA for Ryan's graduation. Now all grown up and every bit as handsome as his Uncle James, Ryan thanked them both, as well as his parents, for all of their support as they tried to decide where to eat to celebrate this huge achievement.\n\n\"I owe all of this to my parents and you guys. After all, it was Love Story, Lubbock Style, that got the attention of someone who pointed me in the right direction,\" the actual budding director told them.\n\nJames and Ali Young both laughed and told them it held a special place in their hearts, too.\n\nRyan bent down then scooped Olivia up. She put her arms around his neck and hugged him as he said, \"Right. If not for that, this beautiful little girl wouldn't be here, huh?\"\n\nToo...little...to understand, Olivia informed her 'Uncle Ryan' she was NOT little.\n\nAfter a round of laughter, Ryan got very quiet and set Olivia down.\n\n\"Hannah. I...I had no idea you'd be here,\" he said when he saw the pretty girl he'd crushed on for years walk up to him, all grown up and even more beautiful than he'd remembered.\n\n\"I wanted it to a surprise, but I wouldn't have missed it for the world,\" she told him.\n\n\"Are you going to be here for any length of time?\" he asked.\n\n\"Well, teachers can find work anywhere, so...I'll be here as long as you like,\" she told him with that beautiful smile he still loved.\n\n\"Then maybe we can talk after dinner tonight,\" Ryan suggested as he took her hand in his.\n\n\"I'd like that,\" Hannah replied, the amazing smile on her face indicating she would.\n\nHer mother and 'dad' were listening, and Ali squeezed her husband's hand before saying, \"This is a little like Love Story, Lubbock Style, is it?\"\n\nHer handsome, younger husband laughed, and said, \"Yes. We'd only need to change the location. Do that, and I see a sequel in the mix called, Love Story, Los Angeles Style.\"\n\nAli squeezed his hand again, smiled at him, then said, \"You may just be right!\"\n\nRyan put his arms around and told her he loved her and that she meant everything to him. Ali did the same until a tiny voice got their attention.\n\n\"Don't you love me, too?\" Olivia asked, her lower lip out and on the verge of crying.\n\nHer daddy picked her up then said, \"We love you MORE than everything in the whole world!\"\n\nOlivia smiled happily and said, \"Yay! Cuz I love you and mommy just the same!\""
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/love-story-lubbock-style"
}