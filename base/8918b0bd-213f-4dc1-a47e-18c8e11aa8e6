{
    "title": "My Only Talent Ch. 10",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\nAll Hallows' Eve\n\nMonday morning dawned, and there were no prizes for guessing that I was hungry, horny, and covered up with school work. I was craving protein at early breakfast, but I remembered to tank up on carbs and water, too, since I was trying to go for 14 miles on MWF days this week and thus skipping lunch. In Rhetoric and Composition, Ms. Wyrickie was smelling tobacco free again, and Sarah was back, saying she had the three day flu but was feeling better. In engineering, Professor Lillehammer was playing catch-up since his absence, and loaded us up with 4 big reading assignments on engineering and the law, all naturally to be covered on the exam this coming Friday. I got to the track and kicked off a pace that I thought would get 7 miles in before Suzanne showed up to do seven more with me. It was several ticks faster than our normal pace, but it was my only choice to get to a regular 15 mile routine given the schedule that I had this semester. I was soon feeling it and breathing hard, but by the time Suzanne showed up I was huffing but had reached a steady state and was not in any real trouble, yet.\n\nShe did notice my faster pace, and said \"Do you want finish at this new pace?\" I nodded and continued to move at the new pace, and she joined me. Of course the new pace was no challenge for her at all. She took up the conversation, which was just what I needed to take my attention off of my legs and lungs, and let me move air wholesale instead of talk. \"Lara and I have the costumes all ready to go, and I am looking forward to seeing some real bitch envy!\" She laughed way down in her throat, kind of evil like. \"There is no chance that any other woman will be wearing the same costume, but there is a chance that no one will notice anybody else's costume except maybe Lara's!\" Even in my semi-distressed state, I could not mistake her Suzie crowing in anticipation of singing 'nanny-nanny-boo-boo' to taunt all the other women at the parties.\n\nShe continued, really just warming up. \"Lara went a little overboard on the new collars and chains and some matching stuff for you. I asked her about it but she said her daddy was so happy about her new attitude and her grades that she could probably buy Neiman's out and he wouldn't care! Some of this stuff was custom, and then when she told the snooty jewelry designer that it had to be ready for Wednesday night, the woman giggled and tried to get Lara to tell her all about us! Lara said she just smiled, and then used your line about 'they are wonderful ladies and gentlemen and I am lucky to have met them.' Then the designer lost her haughtiness and said 'now that's hot, honey!' and gave her a high five. She is going out Wednesday morning to pick the stuff up. I am having Nora cover for me in my class so I can go too. I think that will be fun. I might be a few minutes late for running on Wednesday. Can you give me an idea of our schedule for Wednesday night, so we can plan a little bit?\"\n\nI was able to talk, but not very loudly. \"Start at the Phi Iota Gamma frat party for about an hour, then the Zeta Zeta Zeta frat bash for another hour, then a visit to the Phi Phi sorority house to see Mei Ling and introduce you two to my prospective sub trainee, and finally settling in at the UDP house to win the costume contest and ring in midnight with them. Mei Ling and Cisco and some other folks will probably be at both the Phi Phi party and the UDP party.\"\n\n\"That sounds wonderful!\" She sounded like a kid on Christmas morning. \"I need to call a few friends to get some details on those other parties.\"\n\nI huffed like crazy through the last lap, and was genuinely worried about finishing the sprint. Just as we started, Suzanne spanked my ass with one sharp swat and said \"Nice guys finish sprints, and you do remember what I like to do to nice guys!\" She took off and I did my best to keep up with her. I just managed to survive. I could not even begin to talk on the first cool down lap. Suzanne realized my state, and said \"Let's walk three cool down laps.\" My response was just a gasp. I was feeling a little better as we walked through the second lap. Then Suzanne smiled, and said \"Do want to stop somewhere for lunch so I can blow you under the table?\"\n\nI almost stumbled, but I was not ready for any extended conversation. As always, Suzanne filled in any gaps. \"Yes, Lara told me about that. She said it made her so hot she almost passed out, and her dad's new girlfriend had to help her out by providing a diversion. But we also figured something else out, my Animal.\" Her tone bespoke attitude and challenge, her Suzie sparking. Suddenly Suzanne had a crafty little Suzie just like Lara did, or maybe even craftier. WTF! \"Lara told me that a certain dominant male got really excited too, perhaps very excited by apprehension at the prospect of public exposure, eh? She said your leg was shaking under the table, and you came really fast, not at all your normal pattern, and you came so hard and so much that she almost couldn't swallow it all, and that girl loves to swallow you as much as I do! She said you even tasted different! Do you want to talk about that?\"\n\nI did not, but that probably wasn't really an option. \"Well I asked her to get under the table because my research said it was a relatively 'normal' way to get Lara all fired up.\" I went on to tell her about accommodation, and how happy I was that Lara could have really big orgasms and really get a release without always being whipped or getting kinkier and kinkier.\n\n\"I got all 'A's in my Psych classes, Animal. In fact, I never got a 'B' until graduate school. But now that you mention it, I see the problem, and I have been researching things a bit, too. But would I be too bold to say that Lara felching your fresh come out of my very recently fucked little ass still qualifies as 'kinky'? And I have been amazed at how much getting spanked and/or whipped gets me in a real frenzy and makes my orgasms almost apocalyptic! You should try it sometime!\" \n\nI laughed. \"Well I guess there is kinky and then there is kinky. What made me nervous as the idea of having to hit her more and more and getting to the point where she would be really hurt or scarred, and that really freaks me out! And I just don't think I'm wired for being submissive.\"\n\nShe looked at me funny. \"I think you should try it once, to see if you like it!\"\n\nI thought I heard Mrs. Douglass laughing again. I told her about what I thought about Lara (but not about what Asa told me) and her need to see me as a constant in her life, and my belief that if I appeared submissive to her or around her or even hinted that I would allow her to be with another man, it could knock the underpinnings out from under her current happy state. Suzann looked thoughtful. \"I buy that. She has told me that you are her rock, and that your insistence that she belongs to you and you alone makes her incredibly happy. She said would rather watch you do 100 other women than have you tell her she could be with another man!\"\n\nSuzanne looked thoughtful. \"So that's why a threesome with another guy is not on the menu for Lara's kinky agenda, either, huh?\"\n\nI nodded. \"Plus I don't think I could handle it, despite my supposed enlightenment.\" \n\nShe looked really thoughtful, and her crafty Suzy sparked again. \"Could you handle it with me?\"\n\nOh shit. I really did not want to have to consider that. \"I have to be honest, beautiful, not right now.\"\n\nShe laughed, a little too much. \"It's not a big issue, right now. But take warning, I may bring it up again in the future. But I am very happy to enjoy what we have and be with just you and Lara right now.\" \n\nI relaxed, but then she got me again. \"What about being submissive to me, to see if it got you off? Just one on one, so it would have no effect on Lara?\"\n\nI just looked at her, and then she smiled and did not press the issue. I guess I dodged the bullet this time, Mrs. Douglass. \n\nAt least all this disturbing talk had taken my mind off the oxygen debt and lactic acid from my run. I took a two minute shower, and dashed to my afternoon classes, where I was treated to two pop quizzes (actually practice tests for the exams on Friday) while my classmates were treated to some major growling from my empty stomach. After class, I took my study materials and practically sprinted to the dining hall, and was literally waiting at the door when the serving lines opened up. I worked on school assignments and review doggedly until 2AM, and then hit the sack. \n\nTuesday morning I was still feeling a little sore from the longer run Monday, and the Tuesday classes were further reviews for the exams on Thursday. In between classes I did my 'teaching to an empty classroom' routine and it helped me focus my work. I also took the practice exams I got from Oiler and found a few more things to bone up on. I managed to fit in all my meals to fill my suddenly hollow leg and spent the rest of the day studying. \n\nWednesday morning I felt better, like I was adjusting to the longer run. I had a big breakfast, and I thought I was ready for the exams. Suzanne was a little late getting back from her jewelry shopping trip with Lara, but she was smiling like a catbird when she arrived. I had a little more in the tank when we finished, and she spent most of the time filling me in about what was planned at some of the parties, although she said UDP always surprised everyone. I told her she would like the band at UDP. She gave me a little kiss, and said \"See you at Lara's at 7:00 PM for your final costuming, Animal. And don't worry you get to be the dominant male and hold both our leashes tonight, all night. As with Millicent this weekend, too. But some weekend when Lara goes out of town, I might lure you into my spider web and bite you, big boy. So think about that! Dream about that!\" She laughed and kissed me again. I had to be careful with this woman. She was wicked smart and suddenly growing very crafty.\n\nAfter a shower and my afternoon classes I had a very early supper and a short nap, and then got to Lara's a few minutes before 7:00. Both girls came out in pajamas, led me back into Lara's bedroom, and proceeded to fit me out, and slapped away my attempts to fondle them. When they pulled out my costume, I was taken aback by its brevity. \"What the hell, Lara, there are big holes in the pants!\"\n\n\"All the better to let your cute little butt cheeks show, my dear!\" she said in a fake deep voice.\n\n\"What about the hole in the front?\"\n\nSuzanne piped up. \"That's going to be filled by some custom jewelry, Animal. How many guys can say their girlfriends had custom jewelry made for their cock?\"\n\n\"But there's no shirt at all!\"\n\n\"There is a shoulder piece attached to the hood, and it is going to look awesome on you!\" Lara continued adjusting the little pants. It felt like the vast majority of my butt was out in the air. I looked in the mirror, and it was, but it did not even look like my butt. \n\nSuzanne leaned down and kissed one my butt cheeks. \"Looks like all that running may have qualified you for some ass worship, too, my Animal! Your muscular ass is now smoking hot, thanks to your good looking and highly effective running coach, your abs look even better than they did at the first of the semester, and I think you can thank the two of us for all that vigorous fucking that is developing your lower back so nicely. Lara kissed the other cheek. Maybe this outfit would be okay.\n\nThen Lara opened up a Neiman's box and pulled out something that looked like a silver armadillo, with interlocking articulated sections, like overlapping armored scales on a fish. It was slightly bigger and longer than my fully erect cock, but had extra thick material on the outside that made it bigger and look almost sinister. The mushroom shaped head was a slightly different color, and there were diamond studs on it. Suzanne laughed. \"We are going to start a trend with this thing. It combines two things women find very hard to resist, fine jewelry and a nice cock!\"\n\nShe snapped the fasteners at the base of the codpiece into mating fasteners on the little black leather briefs, and then added gold testicle covers which hung down out of the black leather! They moved back a few inches and admired their work. Lara took out the black leather hood and put it on my head. It was like a Batman mask that just covered the top half of my head, and someone who already knew me well could probably tell it was me, but most folks would not be able to indentify me later. It also had some diamonds on it, and some added material on the top of my head that made me look taller and more menacing, I suppose. The hood flowed seamlessly to some black leather things that looked sort of like quarterback shoulder pads. They made my shoulders look big and more powerful by making them look wider and taller. Lara pulled out another Neiman's box, and began snapping some gold chairs from the top of the leather briefs to the bottom of the shoulder piece, forming a sparse metal curtain that somehow seemed to emphasize my abs. \n\nSuzanne whistled. \"You are right, Lara, that does make his abs stand out better. Those fashion electives you took last year won't be a waste after all, besides the 'A's helping your GPA\". \n\nThen they had me put on some high heeled black boots that matched the rest of the costume. As I stepped back, the overhead light fell on me differently and I noticed that the head of my 'cock piece' or whatever you call the thing was not just a different color, it was semitransparent. Lara said \"One more test\" and took a remote control out of the box and pressed a key, and a strobe light flashed from the end of my dick. There were some other features of the costume that they did not share with me until later. \n\nFinally they pronounced me ready, and Suzanne took pictures with Lara's camera. \"For her design portfolio!\" she exclaimed. Then they banished me to living room while they helped each other don their costumes. \n\nI was using Lara's laptop to surf for more dirt on the AG scandal. The DA was now charging only the guy who used the welding torch with the destruction of evidence, but apparently he did it at the behest of Little Jimmy Craig's daddy, who was trying to save his political career. The DA did take possession of the backups from the webhost, and her office was officially silent, but 'a source close to the case' told a reporter that the videos were shocking and went back for years. The source also said that 'other charges may be filed.' One video reportedly showed a seventeen year old pledge with several other men's semen on his chest, and that may qualify as child pornography. Since no one knew exactly which video that was, all the TV and legit websites had dropped them, but most were already out on the web via screen capture, but apparently they had not been widely circulated in the crystal clear HD format I had seen. The webmaster could not really say where he was and when over the weekend. Several witnesses saw him at a popular river float launch point early Saturday morning, but the next documented location for him was when the Mexican Federales turned him over to the border patrol at the crossing near Nuevo Laredo Monday afternoon. There was reported to be some cell phone video of him cheering wildly for a donkey show at Boy's Town Sunday. The GPS track on his phone stopped at the river on Saturday morning, and he could not explain where he was or how all those files had been uploaded to the web host from his computer and under his password. The ABC news IT consultant said the fraternities' IT security was 'execrable', which seemed to describe the current AG public image pretty well, too. \n\nThe two girls emerged from Lara's bedroom and I was paralyzed for a few moments when I first saw them, and then a few seconds later I learned how tightly fitted my 'cock bracelet' was. Lara came through first, resplendent in a white leather outfit and boots, and then Suzanne strutted out in a similar red leather get up. I can only describe them as 'sex suits'!\n\nThey were skin tight, and had buttock cutouts like mine, and the breast supports were highly 'ventilated' to show all aspects of their breasts except the nipples, which were obviously encased in littlie zipper covers that could be removed to expose them completely. There were two similar zipper covers over their crotches, and their placement left no doubt as to what was underneath each. Little chains emerged from all those covers, and were attached to diamond studded gold collars around their necks. The also had color coordinated knee pads and gloves that only covered the heels of their hands but exposed the fingers. Both girls had their hair up in 'Big Texas' style and they both looked tall and hot as hell. Matching leather boots with spike heels completed the outfits, and suddenly submission to either or both of these two seemed like a pretty attractive option. Both had on bright red lipstick, perfectly applied makeup, and an expression that said 'drop and kiss my boots, worm'. Lara carried a white version of her multi-stranded whip, and Suzanne was fondling a red leather riding crop. They were incredible. Lara said \"I almost forgot!\" and from the closet pulled a big black cape and clipped it to my shoulder piece. I felt like a super hero... with a major hard on.\n\nEach girl took out a black leather leash, clipped it to their diamond studded gold collar, and handed the other end to me. Now I felt like a 15 year old student driver that had just been handed the keys to a matched pair of red and white Bugutti Veyrons. I was speechless. They were not. Both shot out a hip and struck a pose. \"Is Master pleased with our efforts?\" Master could only make clicking noises. The girls gave each other high fives, and Lara opened the door to the hallway. They pulled me towards the elevator like two eager show dogs anxious to get into the ring. Clearly I was the handler and they were the champions. But I wouldn't miss this night for anything. \n\nA black stretch limo waited in the garage, and the driver opened the doors for us. He was in his fifties with a weightlifter's build and he looked and sounded like a cross between George Carlin and Ice-T. He stared incredulously at the girls, and he really only noticed me because they insisted that I sit between them. He introduced himself as Rodney Driver, and said 'Yes, that is my real name!\", then chuckled and said \"This is one of those rare nights when I am really pleased with my choice of career!\" and got into the driver's seat, whistling. He looked at his clipboard, saying \"First stop, Phi Iota Gamma house! Glad to see you are getting that over with early!\" \n\nLara leaned up towards the front seat and began talking to him. It turned out he had seen it all in driving for not only her dad for all the football games and the music and film festival bigwigs that come to town every year, but also almost every fraternity and sorority related event over the years, and he had formed some clear opinions about the relative worthiness of the various houses, and the Greek crowd in general. The Phi Iota Gammas ('PIGs') were third from the bottom, with Alpha Gamma ('AGs'), on the bottom and Kappa Kappa Alpha ('KKA' AKA 'KKK' for their penchant for flying the Confederate flag) in between. Laura asked if he had been following the problems the AGs were having, and he laughed. \"That has me watching the six o'clock news every night these days!\" he added that he didn't know much about Zeta Zeta Zeta ('ZZZ'), but that the Phi Phi Omega sorority ('Phi Phi's' AKA 'Bi Phi's), Beta Omicron Theta sorority, ('BOT' AKA 'Booties\") and Upsilon Delta Phi fraternity ('UDP') were the \"only real class acts of the bunch\". \"Therefore\", he opined, \"you guys have filled out your dance card just about right.\"",
        "As we approached the PIG house Suzanne gave us a mini briefing on the party. As Kevin had advised me earlier, their main goal was to get as many independent girls in for the members to hit on as possible. They also billed it as 'carnival' and usually booked carnie style acts like knocking over bowling pins with softballs; guess your weight, and fortune tellers. They were also co-hosting this party with one of the big sororities, so I would likely be meeting a whole new crop of girls I had not encountered before, and I felt a scientific duty to listen carefully for Suzie signals. From the inside of the limo, we could see hand carved jack-o-lanterns, skeletons, and spider webs all over the front porch and windows. \n\nWhen we pulled up, Rodney told us all to sit tight while he 'set the stage' for us. He paused for another moment, and then slowly got out and walked around the passenger side rear door. The limo had already attracted a lot of attention, and Rodney seemed to know how to play to the crowd. He opened the door and said \"You gotta make 'em wait for it a little and then they like it better!\" He said I should get out first, and let people \"get a load of that sex suit for a while\" and then have the girls emerge after \"the tension has built up a little bit.\" I got out and stood up, the boots and mask making me feel about seven feet tall, and enjoying the unfamiliar feel of a cape swishing as I moved. Rodney and I stood on either said of the door, and he glanced over at the porch, noting that quite a few people were gathered to see who was about to emerge from the limo. \n\n\"I guess there is a lot more to a limo than just transportation, eh?\"\n\nHe laughed. \"It is a tribal ritual, just like who had the best horses and carriage and the most footmen used to signify who had the most land!\"\n\n\"Just like the football games substitute for raiding other villages?\" I explained my mother's theory about modern tribal rituals. \n\nHe laughed. \"Is your mother a professor of cultural anthropology?\"\n\n\"She actually teaches financial accounting, but I guess cultural anthropology is like her hobby.\"\n\nHe chuckled. \"Good choice. If I had taken my PhD in accounting instead of anthropology, I wouldn't be driving a limo!\"\n\nSuzanne stepped out of the limo. The group on the porch went completely silent. Rodney beamed. I guess there was a certain status component of who you drove, too, and she had to be at least as hot as anyone who had ever stepped out of his limo. He whispered to me \"Are you the luckiest white boy in town or what?\"\n\nI smiled. \"They are both wonderful young ladies and I am privileged to have met them!\" \n\nHe chortled. \"That good huh?\" I smiled my best shit eating grin. I was getting a lot of practice at that.\n\n\"She runs 100 miles per week\" I said. Rodney's eyes got a faraway look. Then his pupils bounced as Lara emerged.\n\n\"Does she run 100 miles per week, too?\"\n\n\"No, but she was UIL state champ in tennis two years ago.\" He chuckled, and then said \"Ohhhh, man, those legs!\"\n\nThe crowd switched from silence to 'oohs and ahs' and then they went completely bonkers when both girls handed me their leashes and got down on their hands and knees. Now I knew what those knee pads and gloves were for. They formed up on the left and right just in front of me, and moved forward toward the stairs, with their breasts hanging down and jiggling their perfect asses back and forth like shameless show dogs.\n\nRodney exclaimed \"Shit, man, that's the hottest entrance I have ever seen from any limo!\" he pulled out his phone and took a brief video. \"I also need to call someone and get some help with security before the next stop!\"\n\nI just wanted to make sure not to fall down and spoil the mood. The boots were a little taller than I was used to, so I stepped carefully. Then I was shaken when I was hit by a wave, a massive wave, a series of massive waves, of Suzie signals. It was like what I felt at the ZZZ party when Suzanne first entered, but multiplied tenfold and then tenfold again. \n\nMy Suzie signal tuner was definitely getting better, because a few weeks ago this incredible outburst would have bewildered me and shut down my receiver. But I could handle it now. I realized I had always associated multiple dimensions to Suzie signals: strength, tone, and wavelength being the big three. At first I could only detect the strongest ones, like the original 'fuck me' signal from Suzie Packard in my old neighborhood. Then I realized there were strong ones that said 'do me tonight' and medium ones that said 'chase me, and you will catch me'. Then I realized there were tones and overtones, too. Clear and totally pure signals like Peggy sent were rare, most signals had what I would call a 'normal' tone, with a normal amount of noise and distortion. Then there were the fuzzy and raucous signals, sometimes when a girl was getting into new and exciting sexual territory, and the awful 'nails on a blackboard' tone that turned my stomach and signaled Melanie's psycho meltdown. The short wavelength signals were the normal 'girl signaling for boy' stuff, then there was the ultra long wavelength 'male desire signal' that I had first detected when so many males saw Suzanne in that Roman negligee outfit. In between were the interesting 'girl signaling for girl' and the disturbing 'male signaling for male' signals, and the middle wavelength 'carrier' that carried the modulation that revealed specific things a person wanted. \n\nI had perceived all these individually, and catalogued them like memorizing a list, but now that I was hit with so many at once I began to see them in context and understand how they related to each other. It was almost like memorizing all the element's names, atomic numbers, and atomic weights, and then suddenly encountering the periodic table for the first time. It all made a lot more sense now. I saw there were some obvious relationships, and some obvious 'gaps' where there should be signals that I had not yet perceived. I began wondering how to tune my receiver to the right spots to explore these new ideas and find the new signals. \n\nI had managed to walk behind the girls without stumbling as these revelations hit me, and we ascended the stairs into the huge entrance hall of the PIG house. Theo's family, the Philadelphia Cadwalladers, had paid for a rebuild of the old house, and it looked pretty impressive -- sort of like an even bigger 'Tara' from 'Gone with the Wind'. The folks who had stayed inside suddenly saw the girls for the first time, and a whole new set of signals popped up on my radar. There were girls signaling for me, for Suzanne, for Lara, and for all three of us. There were dozens of males signaling for the girls, some wanted to take their leashes away from me, and others wanting to kneel and let the girls take them over. There were even two males who wanted to dress up and become the third dog on my sled team. Sorry guys, that's not in my wheelhouse. There were several women who were shivering at the idea of playing with these two, whatever the role they would take.\n\nTheo appeared on the balcony above the foyer, and froze in contemplation of Suzanne and Lara's outfits. Then he beamed as both girls rose up and said 'Hail to the Prez!\" raising his status several notches. We made our way to the great hall of the house where they had their little carnival stuff set up. The other women were sending those envy signals, moderated perhaps by the fact that the girls were down on all fours. I had them stand up and give me a kiss, and I could hear the envy signals expand. I saw Candy near the punchbowl, and she was signaling for me, for Lara, and for Suzanne. She was dressed as Hermione from Harry Potter, but her amazing tan, complete with the enticing pink bikini strap lines, seemed out of place on a pale English character. I concentrated, and discovered that both my girls were sending a bit for her, too. Dare I hope? \n\nWe got lots of looks and few other propositions, and a lot of people wanted to take pictures with us. Suzanne would only allow pictures for those who would lean down and kiss our boots, which most did. When a guy did it, Lara or Suzanne would give him a not so gentle slap with their instruments of discipline. When a woman knelt, I insisted on taking that job. Noblesse Oblige! Plus it got me hard.\n\nLara pointed to an imaginary watch on her wrist, and we headed back out the front door. Rodney was parked right where he left us, and standing and talking with a city cop and huge guy dressed in all black. Both girls dropped back to their hands and knees, just as Rodney pointed them out to his companions. All conversation stopped. Rodney opened the limo door, and the girls crawled in, with me in the middle. Before he closed the door, I could hear him laughing and saying, \"I told you so, now pay up!\"\n\nThe huge guy got into the passenger's side front seat and introduced himself as Rodney's cousin, Little Hollywood. I asked him if Big Hollywood would even fit in the limo. He laughed and said they called his cousin 'Big' because he made it to the NFL, and Little Hollywood got a knee injury before pre-season started and never caught on with another team. We made it over to ZZZ quickly, and the girls recreated their incredible entrance. The photographer was actually the first to spot the girls approaching, and I hope he had lots of memory cards because he was popping pictures constantly. Kevin appeared on the porch, along with his pledge trainer and frat president, and their eyes just tracked the girls as they mounted the steps. Mouth breathing was the predominant respiratory mode among the male audience, and I could track the female viewers by the amazing Suzie envy signals that popped up like loud locusts after dark. \n\nKevin played along with the theme and knelt before Lara and Suzanne, and endured some swats with their whip and crops. Surprisingly, Lou knelt beside him and Lara handed me her whip, and I gave her a few whacks, and it got me amazingly hard amazingly fast. We spent some time on the dance floor, and occasionally a guy would dance over to us, kiss the girl's boots, and get a few hits, making remarks like \"that's much more fun than a pledge paddle!\" Jersey, the girl from the first mixer that sent such Suzie for Lou was now sending for Lara and Suzanne, too, and she literally froze when she first saw us. Her eyes got really big and I pointed her out to Lara. Jersey was dressed like Katie Perry, and Lara smiled at her and motioned her over to us. When she got close, Lara used her whip to push her down to her knees, and then down to kiss Lara's boots. When she prostrated herself fully, I noticed an incredible ass, barely restrained by a little red thong, poking out from beneath her super short skirt. Suzanne handed me her crop, and I gave Jersey two snappy ones to each buttock, and they bloomed a beautiful crimson red, and altered my circulation rapidly. \"Thank you, Master!\" she said loudly. \"May I have some more?\" She was a little dickens. Suzanne had her stand up and kissed her on the neck. Jersey's Suzie signal flamed like a signal flare, and the modulation was images of pure and ecstatic submission to Suzanne. Jersey certainly had good taste. \n\nI leaned over to Suzanne and said \"Looks like you could have an eager pupil, there!\" and she laughed. Another few minutes and Lara was pointing to her non-existent wristwatch again. There was almost a recessional as we made our way back to the limo. Rodney did his thing and soon we were on our way to the Phi Phi Omega house. Both girls were giggling and talking about Millicent, and said they thought she would remember this night as the beginning of her weekend. I reminded them that we could not command Millicent tonight, and they said it would be voluntary, but would make her training much more effective. I was now curious, but the girls were having fun and I would let them play it out unsupervised. The Phi Phi house was very old and traditionally decorated, with a few Halloween touches but not much. The Phi Phi's had a reputation for setting up an elaborate 'haunted house' for their Halloween party that often involved sexual imagery and not just Halloween gore. \n\nThere were even more people outside the Phi Phi house than the other two, and Rodney and Little Hollywood played it to the hilt. By the time I emerged from the limo I got complete silence and anticipation, and when the girls made their entrance, there was a collective sigh from the crowd. Mei Ling was on the upstairs balcony, and she waved and said \"I know the theme I want for my next birthday party!\" and both girls stared at her, Suzies sparking, and I thought be careful what you wish for Mei Ling, because all three of us would happily take you to the woodshed, literally and figuratively. I spotted Cisco nearby and his eyes were big and he was staring at Mei Ling in surprise. I concentrated on Mei Ling, and her Suzie was full of happy images of Cisco's tender attentions to her, but in every fifth image or so she was getting spanked and dominated. I would have to give my friend a little advice favoring an adventure for him, and some much needed fantasy fulfillment for Mei Ling. \n\nMei Ling suggested that we set up at the end of the hunted house queue to swat people as they emerged from the rest of the exhibits. We agreed and there was then a rush to enter the line. The first two guys came out a few minutes later, and Lara cracked her short whip in the air and they stopped and looked at her. One kneeled without being told, the other soon followed. Lara was having fun. At least half the girls wanted more than a few swats from me, and I could not refuse a lady. In just a few minutes, Lara and Suzanne said I should work the line by myself and they would be right back. They waded into the crowd around the punchbowl, and then I saw them with Mei Ling, heading up the stairs. I continued to work the girls that came out of the haunted house line, letting the guys pass. I got some great Suzie signals from some of the girls, and some really fuzzy signals from girls that weren't specifically sending for me, but liked the idea of being dominated. I found it interesting that for some of them, the need to submit was clearly stronger than their 'normal' attraction for a specific male. Several girls gave me phone numbers on paper notes, but my outfit had no pockets! I put them in my boot. \n\nI spotted Millicent descending the stairs dressed as FireStar, the mutant microwave Avenger. The skintight yellow and red outfit with a red wig was heating me up just fine. I pointed her out to both girls, and their Suzie signals told me they had noticed the outfit too. She was not in line, but looked at us with Suzie signals spitting. She had no idea what the girls had in store for her, and I had just an outline. Both Lara and Suzanne had worked together, given their recent memories of the their 'first sub experiences' as they put it, and they generated a plan not unlike Project Spank Lara, designed to get Millie hot in stages over the weekend, and then get her off like never before, and coincidentally line up with some of their own desires, and mine. I motioned to Mille and she walked over to us. I introduced both girls formally, and Millie nervously curtsied. I thought that was a good sign. Then both bent near Millicent as if they were whispering in each ear. Something looked odd, and all three of their Suzie signals were looping and peaking. Upon closer inspection, I noticed that both Lara and Suzanne were gently circling one of Millicent's nipples with a middle finger as they spoke to her, just like they sometimes did to me. Then Millicent shook her head yes, and her Suzie signal redoubled. Millicent walked slowly away as if in a trance, and headed up the stairs.\n\nLara smiled at me. \"Millicent is going to change clothes and join us for the contest at UDP.\"\n\n\"I liked her costume\" I said. Suzanne laughed. \"So did I, but she is highly overdressed for the contest. You'll see!\"\n\nAfter a few photos with Mei Ling, Dana Duke, and a few other folks, we headed for the front door where Millicent was waiting wrapped up in a khaki raincoat and black boots, or at least that was all I could see of her outfit. She went with us to the limo, and Rodney and Hollywood smiled at her as they opened the doors for us and I introduced her to them. Rodney grinned and said \"I can tell you have absolutely nothing on under that raincoat, Miss. I think the evening is going to get even more interesting soon.\" Millicent blushed bright red, and both Lara and Suzanne giggled. Rodney and Hollywood jumped in the front seat, and we headed out for the UDP party. On the way over, Lara opened a paper bag and gave Millicent a pair of knee pads and heel gloves, and Millicent's face got even redder, if that was even possible. What was going on? \n\nWhen we pulled up at UDP, there were quite a few people standing outside, and a lot of them had video cameras or smart phones out. Hollywood got out and opened the door, and I got out first. Hollywood and Rodney stood between me and the entrance to the house, looking back toward the limo, and I was facing them, looking toward the crowd. I heard motion behind me and saw Lara and Suzanne get out and stand on either said of the limo door, and remain standing. The crowd milled around and jockeyed for position to see and video the girl's outfits. I was looking at the crowd when I heard a collective rush of breath and then a lot of chatter. I turned and saw Millicent emerge from the limo. The first thing I noticed was the black thigh boots, and then her long legs above the boot, and then that she was naked except for those boots, the knee pads, and the gloves. She stood and I saw that she was wearing an electric blue blindfold hood like Lara's, with her brown hair in tightly woven pigtails streaming out behind the hood. Her thick patch brown pubic hair was trimmed and stood out against her pale white skin. She was an arresting sight. But even someone who knew her well would probably not be able to recognize her in that hood. \n\nI was taking in Millicent's fine little body as I had never seen it before. She was no Suzanne, but she was in great shape, like I would expect a competitive diver to look. Her breasts were bigger than they had seemed in her relatively modest clothes. Her nipples were hard as pebbles and covered with goose bumps, as were her legs. I suddenly got hard as hell, and I hadn't even touched her yet. It was going to be an interesting night. The girls handed me their leashes, and then Millicent dropped to all fours and began crawling toward the entrance. The girls began herding Millicent toward the door, giving her light lashes and pops with the whip and the crop. They fell in behind her, and I, holding their leashes, walked behind them. I then noticed that both Lara and Suzanne had unzipped and removed the little 'nipple covers' on their outfits. Rodney and Hollywood's faces were frozen in surprise, and after we got about ten feet from the limo, Rodney said \"She-yitt, man!\" and hastily started up a video with his phone. Hollywood just chuckled. As we mounted the steps, I realized that I fervently wanted to mount all three girls. Then, I realized I would most likely be able to do it soon enough. Life was good. \n\nWe made our way up the steps into the house through lots of wide eyed stares and a myriad of Suzie signals. I detected everything all across the spectrum, and I could read them all. Like an experienced quarterback, the game was starting to slow down for me, and I could 'read the coverage' almost automatically. I heard signals in one of the 'gaps' I had identified early, and I realized they were some sort of 'compressed' version of the detailed images on the middle wavelength carrier. Those usually portrayed things the sender wanted to do. What did these compressed images represent? I opened up and took in the meaning of all the signals. Each time Suzanne or Lara popped Millicent, a whole group of audience members wanted to be one end or the other of the whip or the crop. A surprising number of woman envied Millicent being the center of attention more than they had 'herd envy' for Suzanne or Lara. An equally surprising number of men wanted to take Millicent's place and let those two dominating visions in red and white work on them. Another large group of women wanted to take over for Lara or Suzanne, and a lot of men wanted to substitute for me. ",
        "We had arrived just in time for the costume contest: there were three judges at a table 'American Idol\" style, on a small stage in the UDP party hall, and some spotlights were set up in front of the instruments and amps that the band would soon perform with. Oiler was acting as master of ceremonies, and with his height and wild hair, he was an imposing presence indeed. One of the judges gave us a little cloth square like the runners wore in marathons with an '8' on it, and then called for contestant number one to approach the stage. We moved off to the side and the spotlights focused on entry #1, a group of guys made up as the 'Three Stooges', old school, and trying to do some of their shtick. There were some laughs, some applause, and the judges all gave them fives. \n\nThe next contestants were a group of Harry Potter players, cute, but nothing special. They got two fours and a five. Then Batman and Robin got an eight, seven, and eight, probably because Robin was sported long blue black hair, a busty hourglass figure and almost translucent tights with no panty lines. It might have been Esmeralda Estigoy, but the mask made it impossible to tell for sure. Then the obligatory Bevo longhorn mascot costume got the equally obligatory fives across the board. Three girls dressed as cheerleaders got all sevens, but I thought they were all very hot eights and nines. Since it was an election year, the next two contestants were the president and first lady, followed by Mitt and Ann Romney. The scores were close. Then someone rolled a plastic slip and slide across the stage, and five guys pulled simulated plastic cocks from their pants and sprayed mayonnaise on the slip and slide. Then three guys in flesh colored thong underwear began singing the AG song of devotion and jumped along the slide, getting covered in white goop all the way across the stage. The crowd roared, and they got two nines and an eight from the judges.\n\nFinally, Oiler introduced the final contestants, and Suzanne strutted boldly to center stage, complete with following spotlight, slapping her riding crop against her boots. There was a collective sigh, and a widespread sparking of Suzie signals. The Lara strode out and stood next to her, and a whole additional layer of Suzies rolled through the room. Suzanne spoke, in an amazingly commanding voice that carried throughout the hall, even unamplified. \"Ladies and Gentleman, you will now be privileged to witness the initial submission training ritual of a novice servant to The Master!\" She motioned to me and I tried my best to strut, or at least not stumble, in the high heel boots, onto the stage. I must admit I did a good job of rolling the cape around dramatically, such that when I stopped in between the two women in red and white, the cape moved and swirled for several seconds. The two girls attached their leashes to their collars and handed them to me, and I clearly experienced the male envy signals throughout the room. Those signals grew geometrically as both girls turned away from the audience and bent at the waist, offering their almost completely exposed butts to me. Suzanne handed me her crop, and I gave her five smarting ones on each side, and the audience made all sorts of noises as her butt turned a perfect hot red. \"Thank You, Master!\" she spoke loudly. I gently touched her ass, and no one could miss how wonderful I thought it was. Lara handed me her whip and I gave her five swift ones per side, her lighter skin reddened even more impressively, and I caressed her similarly. \"Thank You, Master!\" she cried. The Suzie signals from the audience were like an angry beehive, surging and buzzing. \n\nBoth girls cried out in unison \"Trainee, show yourself!\" Millicent crawled over, her gloves and knee pads gone, looking amazing in only the little hood and boots. She stopped in front of each girl, receiving five licks with each instrument of discipline, and sobbing \"Thank You, Mistress!\" after each stroke. I was disappointed that her butt was not facing me instead of the audience, and I did not get to see it. But all indications were that the audience liked it a lot. I noticed Rodney and Hollywood offstage, laughing and talking to each other. Millicent turned around, faced the audience, and presented her pretty and tight little as to me. It was red and absolutely gorgeous. I gave her five per side also, pausing dramatically between each. Then Suzanne took up the narration again. \"Trainee, kneel and perform the ritual!\" All eyes were on Millicent as she knelt before me and took the large silver metal penis shield into her mouth. The audience gasped as she slowly took it almost all the way down. Lara hit the remote control, and the strobe light at the tip of the bejeweled cock cover flashed. The hot white light traveled through Millicent's throat and mouth and lit up the stage in an eerie pink and red x-ray like glow as the light passed through her blood and cartilage. The crowd involuntarily cried \"Ohhhhh!\" and then the blinking stopped, and Millicent released the metal cock piece, turned her face toward the audience, still on her knees, and smiled widely. The lights went down, and the crowd cheered. The judges gave us two ten's and a nine.\n\nThe band came on, introduced themselves, and the lead singer said something about a 'hard act to follow' and then began to play. They were amazing, sort of a fusion of elaborate 70's lotus eater rock merged with techno and rappy rhyming lyrics, and soon the crowd was very into the music, and began to dance. Quite a few folks from the Phi Phi house had moved over to the UDP party to finish the night there. Marilyn, our intrepid little stripper from the AG pool party mission was there along with Suzanne's friend Big Liz. I realized they were still sending for each other but in the 'tentative' way that Dana Duke did for me. Ralph walked up to say hello, and I found that they were both sending pretty strongly for him. I remembered my dad's advice to get my buddies laid, too. \n\nI whispered in Ralph's ear that he should ask them to dance. '\"Which one?\" he said.\n\n\"Both of them!\" I said. \"Together!\"\n\nHe looked at me funny. \"Ralph, Have I ever lied to you?\"\n\n\"No. You have always been a friend and a truthful one.\"\n\n\"Well trust me on this. You can take both of those girls to bed at the same time! They like you and they like each other, and Suzanne vouches for both of them so you can be sure they are both trustworthy and honest.\"\n\n\"What about my 'little problem'?\" he said. I thought about all the trouble Ralph had in gym class in junior high, he was teased so incessantly by the other boys that the coach finally gave him a pass on showering after the exercise classes. He was very embarrassed but just seemed to compartmentalize it. I never talked to him about it after he moved away for high school and I wondered how it had affected him long term, but I knew it was not as important an issue as he was worried about. \n\n\"With proper exercise and foreplay and excitement, women can be satisfied with a wide range of sizes. Just be yourself, do your best to please them, and be honest with them about what you want. Everything will work out fine!\" \n\nHe gulped, and then went over and talked to the girls. Big Liz was about an inch taller than Ralph, and both of them towered over petite little Marilyn. Both girls looked shocked, and then looked at each other, and whispered in each other's ears for a moment. The music was so loud that they had to do that to be heard. Then they both leaned over and spoke in Ralph's ear for a moment. Then Ralph and Marilyn moved to the dance floor and Big Liz walked over to Suzanne and me. She whispered to Suzanne a moment, and then Suzanne just motioned her toward me. She leaned over to my ear. She smelled great, and she was now sending for both Ralph and Marilyn like crazy, but there was some kind of almost melancholy overtone on her Suzie signal for Ralph.\n\n\"Suzanne says I can trust you just like I trust her?\"\n\n\"I hope so, Liz. Suzanne trusts you to take care of her, and I will do my best for you.\"\n\n\"I really like your friend, but I have a problem and I don't want to disappoint him and hurt his feelings!\"\n\n\"Was he wrong about you and Marilyn?\"\n\n\"NO! He is right on target with that, and it turns me on that he is so perceptive, and it will actually make it easier and better for us to experiment with each other if he is with us too. But I have a medical problem that will probably keep things from working out.\"\n\nI just waited. I knew she would fill in the blanks. I hoped she did not have some STD or other awful disease problem.\n\n\"My doctor tells me that I have an 'unusual pelvis and anatomical attachments' that will affect my relations with men. I have only been with a couple of guys but they were very disappointed and so was I\" She sobbed. What was going on here? She started again \"To put it bluntly, I have a big space to fill, so to speak. It means that I will have it very easy in child birth, but I need a guy to have a way above average penis to be satisfied! So I don't want to hurt his feelings or be hurt myself!\" She sounded desperate.\n\nI had to work very hard not to laugh, which would have at best pissed her off and at worst really hurt her. I hugged her gently. \"That's the kind of honesty that every relationship needs, and I want you to be just that open with Ralph, and with Marilyn. Trust me, beautiful; Ralph is a very good choice for you!\"\n\nShe looked at me funny. Then she smiled, but guardedly. \"Are you sure? I know you mean well, but....\" \n\nI could not avoid laughing, but I hugged her tighter. \"I'm sure Marilyn can adapt, but you need to make sure she is very comfortable and relaxed, if you know what I mean!\"\n\nLiz looked puzzled for a moment, and then I could see the light come on. She looked at me funny and then smiled what I can only describe as the female equivalent of my shit eating grin. \"Oh, I will make sure she is ready! I know I am!\" She hugged me again and walked out onto the dance floor and joined Ralph and Marilyn. \n\nSuzanne came back over and said \"Did she tell you about her little problem?\" She caught herself. \"I guess I should say her big problem!\" I told her about Ralph and why he was teased so mercilessly, because the other boys were so jealous. She looked incredulous. \"Are you sure? Liz told me that her doctor said that only one guy in a hundred could...\" \n\nI laughed again and hugged her. \"Trust me babe. He is the exact reciprocal of Liz's problem. Ralph is a real Brainiac, and I am sure he is on the fast track to his goal of becoming a world class astrophysicist, even if the scholarship at Cal Tech fell through. But if that doesn't work out, he could be the biggest porn star in the business, literally. My only worry is that he doesn't hurt Marilyn! His nick names are the 'nerd with the big bird', and 'the telescope'.\n\nSuzanne looked at me funny, then looked over at the three of them dancing, and then hugged me and laughed. \"I wonder if she would let me watch.\" She giggled again. I did not.\n\nLara, Suzanne, and I danced a lot and we really were blown away by the band. There were all real 'mechanics' on their instruments, and the original songs were melodic, clever, and fun. They even changed costumes for most of them, and the staging and light show were first rate. I also listened carefully to all the available Suzie signals bounding around the room. Liz was right next to us, and I focused on her, curious about her story. I looked for the wavelength 'gap' I had identified earlier and discovered Liz's little area of 'compressed pictures'. When I concentrated on them, I found they were a chronicle of her several heartbreaking encounters with 'normal' guys who could not fill her void, so to speak. All of the images seemed to be tied to strong emotions that I could feel when I concentrated on the image, and even some voices I could hear along with the emotions. I realize that it was like the flight data recorder box in an airplane. It recorded the significant sexual events in a woman's life. Was this was also the 'risk assessment tool' I had been looking for? If a woman had dozens of lovers or lots of gang bangs, it should show up here. I reached out and tried to listen to several of the other women around me. \n\nMarilyn's was almost blank, except for some very memorable masturbation, and even the strip poker at AG was there, perhaps because it was very emotionally charged experience for her. She was a virgin, and she was holding out for her first time to be the fulfillment of her recurring fantasy threesome, and it looked like Liz and Ralph could make that happen for her, maybe in an even bigger way than she anticipated. I wished them the best, but I really didn't want to watch, especially if Suzanne did. \n\nThe band was shooting a video, and they asked us to help them out by appearing in it. They did the song once so we could get the tune, and Lara and Suzanne had a little conference with the cameramen and the lead singer. They went through some staging and then they did the song again. Suzanne and Lara swatted the lead singer a few times in time to the beat, and then at the end of the song they both kneeled down in front of me, and the final shot was the geometrically distorted refection of the lead singer off of the shiny metal cock cover of my costume, complete with the entire audience screaming madly. I am not sure exactly what they wanted to convey, but the girls enjoyed it and the video guy was ecstatic with what he got and promised to send us all a copy. \n\nThe party was winding down. Millicent came out in a conventional outfit, and we agreed that on Friday I would meet her at the Phi Phi house about 20 minutes before sundown, and walk her over to 'our dungeon' which we were keeping mysterious for a while. The girls gave her a little hug, and I gave her a tender kiss and a very hard nipple pinch. Her Suzie said she definitely liked it a lot. Liz and Marilyn and Ralph gave us all a hug, and then walked off together. That was going to be an interesting relationship. Esmeralda and 'Jocko', her older professor of education fianc\u00e9, came up to say hello, and I asked them if they were the Batman and Robin entry and they laughed, and said how did I know, nobody else spotted them. I smiled and said to Jocko \"Do you promise not to get mad?\" He agreed. \"I recognized her ass. It's a classic!\" They both laughed, and I knew they might enjoy reliving things this evening. \n\nWe gathered up Rodney and Hollywood, and they invited us to another, very late night Halloween party, and both girls said they needed to get home for class tomorrow. He then said there is another Halloween party, this coming Saturday night, at the home of one of the bigwigs he drove for, and that we should all three come and we could win another costume contest and meet some very interesting people. Both girls asked if we could let him know on Friday, and he said okay. \n\nRodney took a quick left turn away from Lara's place, and before we could say anything, he said \"I know, but I think someone is following us!\" He took two more lefts and then three quick rights and the now thoroughly busted tail car sped up and went by us. It was black Suburban with big black wall tires; heavily tinted windows and one of those all black vanity plates with white letters 'JCK5H-03'. That combination of letters and numbers seemed familiar, but I couldn't recall why. Hollywood snapped a couple of very obvious flash pictures with his phone, hopefully discouraging further following. \"I'm going to ask one of the guys I drive for sometimes to check that plate for me.\" Rodney said. \n\nWe all thanked Rodney and Hollywood, and then made our way up to Lara's apartment. We all began shedding clothes as soon as the door closed behind us, and both girls said \"Let's hit the showers!\" I did not notice all the little notes with phone numbers on them that fell out of one of my boots or the shiny things that were hidden underneath my mask. \n\nLara sighed and kissed us both, and began to soap everyone up. \"I am craving a strong fucking from a hot guy with cute buns while a great looking dark haired woman licks my clit! Do you guys know where a girl could get that kind of treatment, considering that she would be willing to do anything in return?\" We did. Suzanne insisted on teasing her while we dried off, and began gently kissing Lara from the front while I played with her ass. Soon Suzanne was sucking Lara's nipples and Lara was shivering, and I was kneading her hot ass like two warm loaves of bread. We went back into the bedroom, and Lara grabbed the trapeze hanging from the ceiling and leaned on it, bending over the bar at about waist level with her arms bent slightly back and gripping the support ropes. I stepped up behind her and grabbed the ropes with my hands just above hers. It gave me lots of leverage and a perfect view. Suzanne reached over and gently spread Lara's ass cheeks, and kissed them. I positioned my cock just behind Lara's golden curls, and slowly entered her pussy. Lara gasped, and her Suzie purred. \n\nSuzanne leaned down just and inch or so from our joining. \"Oh baby that looks really nice pushing into you! You are one wet little slut, aren't you? Then she slapped my ass fairly strongly and I surged into Lara and she gasped again. \"That looks pretty tasty to me!\" and then she dropped down onto her knees and between our legs, and sucked one of Lara' s outer lips into her mouth noisily. \"Mmmmm\" she hummed with her mouth full. I could sense Lara's Suzie sending stronger and stronger. I tuned into it and adjusted my stroke depth and frequency to pump her Suzie along. I could feel myself getting harder. I moved my hands to the bar of the trapeze and began pounding into Lara as roughly as I could. \n\n\"You may come, Lara!\" I shouted and she did, with little delay or fanfare, and squirted a little. \n\nSuzanne made an exaggerated slurping sound, then broke her mouth free and said, \"More!\"\n\nI was happily in the zone now. I pulled the bar a little closer to me and stood up on my tiptoes, taking a little steeper angle into Lara's pussy. I felt Suzanne's tongue flashing all over both of us, and then she locked onto Lara's clit and I could hear Suzanne's slurping superimposed on Lara's peaking Suzie signal. I locked into the rhythm and Lara came again, clamping down wonderfully on my cock. I slowed down and then started stroking her again. Suzanne stood up and grabbed Lara's nipples, twisting and pinching them roughly. Lara came once again in a violent shaking motion that propagated up the ropes holding the trapeze. That motion set off something in me. I pulled out of Lara's pussy, and immediately slipped into her hot little ass. Lara screamed, one scream for each of the first three strokes, and then sounded like she was gargling. I was not really listening to her Suzie, I was just watching my cock slip between those fine buns, and it made me crazy. \n\nSuzanne resumed her narration. \"Somebody is getting fucked in the ass! Look at that cock disappearing into that tight little end. Is it becoming a wide receiver?\" Then she leaned down again under us again, and dove into Lara's now fully accessible pussy. Her kissing and licking was so vigorous that I could feel it through the little wall of muscle between Lara's ass and her pussy. Suzanne made only sucking and licking noises and then I felt Lara's snatch clamping down again. It made me even crazier. I let one hand go from the bar and grabbed Lara's head, pulling her hair back strongly and tilting her head up toward the ceiling roughly. \n\nLara drew in a noisy breath, and began repeating \"Fuck my ass, fuck my ass, fuck my ass!\" like a mediation mantra. I could think of nothing else. I was slamming into Lara's ass just as hard as I possibly could. Lara came again and made a noise like I had never heard her make before, almost like the grunt some tennis players make when they serve. It was accompanied by another squirt of liquid from her pussy and dripped past Suzanne's ministrations and hit my legs like hot oil. In three more strokes she grunted again and that triggered my orgasm. It was so intense that I almost blacked out. I let go of Lara's hair and grabbed the support rope again, leaning back a little and letting my cock pop out of Lara's ass. I picked her up from the trapeze bar, turned her upside down, and threw her legs over my shoulders. She turned her upside down mouth onto my cock, and sucked it savagely, virtually ensuring that I would stay hard. I was glad I came in her ass, because that allowed me to happily plunge my tongue back into her sloppy pussy, loving every hot and wet millimeter of it. She had that incredible taste that she gets after a hard orgasm, and it was nectar for me. I rolled my tongue up and did my best to fuck her pussy with it. ",
        "Suzanne had taken up a position opposite me; pulling Lara's ass cheeks apart widely and watching me devour her pussy while Suzanne examined her red and sticky wet ass close up. She was in a narrative mood. \"My my my, that is one red and thoroughly fucked little asshole!\" I could hear Lara draw in a strong breath through her nose. \"But it looks tasty, too!\" Suzanne clamped her mouth to Lara's little rosebud and sucked it hard, and then plunged her tongue into it. Lara came almost immediately, while she sucked on my cock so hard it almost hurt. Suzanne and I were having a real feast, and Lara was coming about every minute or so. Finally I said \"Ohhhh, you've almost got me Lara!\" She redoubled her efforts and Suzanne knelt down behind me. \n\nSuzanne said \"Are you ready for Robbie to shoot?\"\n\nLara said \"Umm hum!\" with her mouth full. \n\nSuzanne laughed and said \"Get ready, Hon!\" and stuck her tongue so far up my ass that she almost touched my prostrate. I shot off like she had lit the fuse at the bottom of a Roman candle, and Lara sucked it out of me just as fast as I could pump it out. Suzanne giggled, but kept her tongue working in my ass until my prostrate stopped twitching. Then I moved Lara over to the bed and gently laid her out on it. Suzanne laughed and said \"I think Master likes to have his ass worshipped!\" We lay on either side of Lara, gently kissing her face and her nipples alternatively. Lara reached back with her long arms and grabbed the headboard, stretching out and pushing her breasts up and out, like a happy kitten. We were all three purring pretty nicely. \n\nAll of this kissy face stuff went on for a long time, and then Lara giggled, and in a little girl voice said \"Robbie, I want to watch you make Suzanne come!\"\n\nI could not refuse a lady. Lara sat up against the headboard, and hugged one of the pillows, watching expectantly. Suzanne lay back just as kittenishly as Lara had, and looked at me expectantly. I had just come twice in the very recent past, so my Suzie receiver and my tongue were going to have to move things forward for a while until my cock was ready again. I pushed Suzanne over to the edge of the bed furthest away from Lara, rolled her onto her back, and began to kiss her gently. I knew I had to give myself some recovery time, so I pretended it was our first data and I was afraid that she was going to slap my hand away and get out of the car. I listened as closely to her Suzie as I could, and discovered that she really loved getting kissed like that, and she especially liked it with Lara watching. I limbered up my ping sender, and tried to convey to Suzanne how hot she was and how much I cared for her. Her Suzie responded but weakly. I slowly began to kiss her neck and shoulders, and her Suzie liked that a lot. Soon I teased all around her breasts without touching the nipples, and her Suzie perked up. I sent the feeling I had when we first met at the running track, about how incredibly beautiful she was and how overjoyed I was to discover that she was sending for me. \n\nI was really plugged in to her Suzie now, and I explored her 'flight data recorder' for the first time, and discovered her unhappy first few tries with some guys I did not recognize, and only one who she even let try to go all the way, and her disappointment. And then I came across the record of Mike, her first love. He was patient, kind, yet strong with her, learning what she liked and finally gave her a first non-masturbatory orgasm, which was forever etched in her brain. Then right next to that was a terrible well of sadness, and a dark period after his injury when she thought all of that was gone forever, followed by that first night with me, and then several nights with me, and then recent nights with Lara and me. I discovered I could 'touch' those memories with a ping, and make them 'refresh' a little. I mentally touched that first night when we were together, when I kind of lost it and just took her roughly doggy style on her couch. It resonated and sparked, and I pinged her again, trying to send to her how incredible she felt to me and how excited I was by her strength and heat. It was like feedback from a microphone to a speaker squealing, and suddenly I was hard and just as hot to fuck her as she was hot to be fucked. I grabbed her hips and spread them, pushing into her steadily as I reveled in how hard I got as I did. I hit bottom and tried to push even further, pushing her toward the foot of the bed with my hip thrust. She groaned. I was in the zone and on autopilot, fucking away happily. \n\nTrying to multitask a little, I tuned in to Lara's recorder, as she watched me with Suzanne, and at first found several very disappointing interludes where she tried to dominate a guy, hoping he would jump up and take control of her, and he just gave up and submitted to her. Then I found the amazing record of her tennis match with me. The last three deciding points of the match were recorded as important sexual experiences for her, as she was anticipating finally getting taken and really fucked, and then the final match point gave her certainty that a male was finally going to take control of her. I tried to send her how amazing she looked that first time when we were together when she stripped for me and kneeled in front of me. Lara groaned.\n\nI was suddenly further in the zone, hard but almost insensate. I fucked Suzanne as hard and as deep and as fast as I could, spanking her butt hard with each thrust. \"Fuck Yes!\" she yelled. I grunted like a goat, threw my head back, and thought about nothing but penetrating her. It was strangely peaceful and comforting. Time seemed to slow down. I felt Suzanne's her incredible muscular legs and ass, her Suzie signal, and her heartbeat. My lizard brain took over, and I thought about nothing but getting my seed as far into her as possible. Suddenly she was coming and her pussy grabbed me so hard that I came as a reflex. I felt Lara's hand on my ass, and she just tenderly held it there as I telegraphed my last few spurts into Suzanne. I looked at Lara and she smiled sweetly at me. Suzanne was sobbing. Lara kept her hand on my butt and leaned down to kiss Suzanne. \"That was beautiful!\" she said, and we all kind of collapsed together in a jumble, breathing hard, snuggling, and kissing. Lara rose and got us each a bottle of water from her fridge, and we alternated between drinking it and holding it against our foreheads to cool off. \n\nI had no idea what time it was and I did not care. I was completely spent, but as happy as I had ever been. I felt complete with these two: trusting, warm, and completely accepted. I had never felt better. We stayed that way for some time, and then Lara was again the first to move. \"Movie time!\" she said. \"I'll pop some popcorn. Suzanne, will you get the movie ready?\"\n\nSuzanne giggled, and pulled on a white tee shirt, then padded in to living room to the couch and the big LCD screen. I heard Lara banging around in the kitchen and then smelled something hot and heard the popcorn begin to pop. I sat next to Suzanne on the couch and noticed she had the hood from my costume in her hand, along with one of the boots. I was curious as I watched her reach into the hood and grab a shiny metal thing and pull out a little SD card. She popped that into the computer next to the LCD screen and picked up remote control, obviously waiting for Lara to arrive with the popcorn before she started the video. Then she leaned back and held the boot. I was still not figuring things out, but we were thirsty, hungry, and I realized I was craving some salt too. Popcorn and water would be the perfect thing. \n\nThe Suzanne said \"Well, well, what do we have here?\" and took out all the little notes that had been inside my boot. \n\nOh Shit! I forget about those. \"Those were notes people handed me at the parties. I didn't have a pocket, so I put them in my boot, and then I forgot all about them.\"\n\nSuzanne laughed, as Lara set a huge bowl of popcorn, a bowl or red grapes, and three more waters on the coffee table. My mouth was watering.\n\nSuzanne began to read the messages. 'Whip me baby Carol 512-555-6969. Lara guffawed. 'Oui, I will be your slave, Francesca 713-555-1234' There was another loud snort from both girls. 'Any way you want it Krystal 210-555-5432'\n\nLara spoke up. \"We may have created a monster, here, Suzanne!\"\n\n\"I knew he was an animal!\" She began to read again. 'Blindfold me and do anything you want, Sherry 512-555-6789', 'you can light up my mouth anytime, Lisa 214-555-1212'\n\nLara said \"Aren't any of those for us?\"\n\nSuzanne said \"Not so far. Oh, animal, here's your chance for some variety! 'I'll go down on you on the down low, Charles 512-555-5721'\"\n\nLara made Suzanne hand it to her to verify the content. She screamed as she read it. \n\nSuzanne smiled \"Here's one for all of us. 'I'll take all three of you on, anything, all night, anytime. Hillary 737-555-9929' Wow! That girl sounds serious! Let's see if we can spot these people when they give you the notes!\"\n\nWith that she mashed the start button on the remote, and I realized that the 'added height' in my hood concealed an HD video camera and two stereo microphones and a battery pack. I couldn't tell if it was motion activated or they used a remote, or both, but except for a few times when it was too dark, the pictures were crystal clear. The first sequence was some wonderful video of the two girls walking out of the apartment toward the elevator when we first left Lara's place, and it was wonderful stuff. I had to download that for me memory chest. Then there was a little of them getting into the limo in the parking garage of Lara's building, and I spotted a black Suburban in the background, but could not make out the license plate. The next sequence showed me following behind the girls holding their leashes as we made our entrance to the PIG party. I realized it was probably the best 'brag tape' I was ever going to have. As I turned my head back toward the limo just before we entered the party, I saw the black Suburban again, and noted a partial plate 'JCK5???\". It must be same vehicle that followed us, or one almost identical to it. Back inside at the party, the expressions on people's faces as we passed by them in our costumes were priceless. We saw Theo on the steps, and then Candy as Hermione. Lara piped up. \"Who is that dressed as Hermione?\"\n\nI cleared my throat. \"Suzanne, do you remember her?\"\n\n\"She's that PIG guy's date that you kissed on the tow boat while I was waterskiing, isn't it, Animal?\" I almost spit out my popcorn. \n\n\"Well, she sort of kissed me, but.....\"\n\nLara piped up. \"What is her deal? I think she's hot!\"\n\nSuzanne laughed, and looked at me. I decided that truth was the only way to go. \"She has been dating Jackson Pollack Jackson III of the PIGs since school started. But as she puts it, 'he has never completed a pass' and she thinks she may be a beard. Theo has actually hit on her more than Jackson has. She dated one guy all through high school and even told me she is a 'very low risk chick'. She made it very clear she wants me to be the one to actually 'score' and I am a fool for not realizing how hot she is. She told me she thinks that Suzanne is hot too and she would do us both any time. And judging from the looks she was giving you tonight, Lara, she wouldn't kick you out of bed either!\"\n\nLara laughed. \"Likewise, I am sure!\"\n\nSuzanne said \"Didn't this all happen about the same time we were talking about risk and return, Animal?\"\n\n\"Yes, but I did not know she was so 'low risk' then. In fact, since she was so hot and so forward, I was afraid she was very high risk!\"\n\nSuzanne laughed. \"Well let's keep that idea open for a while, Animal. Maybe we can do some horse trading?\"\n\nWhat was she getting at? The tape kept going, and we got some amazing shots of people being swatted by the girls or me. Some of them seemed to enjoy it tremendously When Lou Baby and Jersey looked so eager, Lara piped up and said \"Who are they?\" Suzanne explained that Lou was my roommate's girlfriend and the tension between them. I told Lara the story of little scene on the way to the lake party, and she laughed and said she would have loved to see that. \n\nI laughed. \"You could have smelled it, too, Lara. It was amazing! \n\nSuzanne looked at me and we both realized we should not talk about Lou and the proposed threesome with Kevin in front of Lara. We both let the subject drop. The video moved on to Mei Ling talking about her next birthday party, and I said \"She better be careful what she asks for, eh?\"\n\nSuzanne said \"Yeah, but she could probably kick all three of our asses!\" She went on to tell Lara about Mei Ling's martial arts mastery. Lara said \"We can give her a party here any time! If she wants me to submit she doesn't even have to hit me, but she can if she wants to!\"\n\nI said \"At least if Mei Ling submits we would know for sure that she really wants to!\" Both girls sighed. \n\nThen the video showed Millicent, dressed as FireStar, in her skin tight red and yellow getup with the garish red wig. She did look hot. Suzanne spoke first. \"We are going to give her the time of her life, beginning Friday night, but we have to compress our plan a bit, because I want all of us to go to the big party Saturday night, and I want to take Millicent as our sex toy! \n\nLara actually rubbed her hands together. \"OK. I'm in. How do we combine two nights of debauchery into one?\"\n\nSuzanne laughed. \"Well, Rodney says the 'VIP' party doesn't start until 11:59 PM Saturday night, so we have Friday evening after Robbie picks her up and all day Saturday to train our new service bitch Millie!\" \n\nI knew I needed to get home and start doing my final preparation for three exams on Friday. But I guess I had to help them with a plan, too. It was my duty. Noblesse Oblige! But I also wanted to hear from Rodney about that Suburban. "
    ],
    "authorname": "conanthe",
    "tags": [
        "anal",
        "fraternity",
        "bdsm",
        "sorority",
        "threesomes",
        "debutant",
        "mff",
        "phd",
        "circus flyer",
        "dominant"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-10"
}