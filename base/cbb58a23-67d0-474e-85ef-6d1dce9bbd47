{
    "title": "Past, Present and Future Ch. 07",
    "pages": [
        "<center>A short tale of sugar relationships and developing friendships. <br>It's a stand-alone tale, but builds on earlier chapters in the series. <br> Please enjoy. </center>\n\n<center>+</center>\n\nShe turned out the light and I heard her sliding between her sheets on the other side of the room. I was already in my bed, a textbook I'd been reading still on my tummy. Outside our door, I could hear people walking down the residence hallway, refugees from an evening job or late class, maybe en route to the showers or picking up laundry from one of the machines. It was a routine sound, something I was used to.\n\nI closed the book, laid it on the side table next to my phone, then reached up, shifted my pillow under my head, relaxed my shoulders. I lay there in the darkness, letting a day's fatigue ooze out of my pores into the night. The susurration of shuffling humanity outside the door had faded and I could only hear Marcy's soft breathing across the room.\n\n\"I'm jealous.\"\n\nHer voice was so low as to be barely audible.\n\n\"I'm sorry?\"\n\n\"I'm jealous, Stephanie.\"\n\n\"Of me?\"\n\n\"Yes.\"\n\nI rolled over towards her; could see her outline in the dim light through the blinds.\n\n\"Of what? Oh, you mean the sugar baby thing?\"\n\nMarcy had been my roommate for a year and a half. She was my best friend and as close to a sister as I would ever have. She knew about my arrangement with Tony, had held my hand since it had began.\n\n\"Yes. No. I mean, the money must be nice, but no. Tony's so nice, Stephanie. I wish...\"\n\nOK, this was the first time she'd said anything like that, but it wasn't entirely a surprise. Marcy was as female as a woman could be and Tony was as pleasantly, delightfully masculine as any man born. That yin was called to yang, that she was attracted to him, envious of my being with him, that could hardly be a surprise.\n\n+\n\nI think every woman I knew had noticed Tony diRossi at one time or another. Fifty years old, with blond hair and beard now turned almost totally white, Tony was a mature student and one of the most distinctive individuals on campus - totally handsome, fit, perfectly groomed and always suitably dressed for a checkout aisle magazine rack. He and I had by chance been assigned as biology lab partners and one thing had led to another. \n\nTony had been polite enough and generous with his time in helping me with lab reports. As a second-year music major with no scientific background, I'd found his help a godsend. But he'd been very private, had revealed virtually nothing of his personal life. He made very little small talk and even less effort to fit in with the other students. He didn't wear a wedding ring &mdash; not that that meant all that much, I suppose &mdash; and I'd never seen him in a local shop or bar or with a woman of any age. As soon as classes were over, he'd be driving out of the Springett parking lot on Western Road, the invisible man as far as the University was concerned. \n\nIntrigued by his panache and driven by a seriously inflated ego, I got cutsie one Friday afternoon and made a pretty juvenile play for him to invite me out. \n\nI'd been trying to nudge him into the usual coffee-then-movie-then-dinner process every boy my own age would understand. Tony had understood it all right, but simply turned his back on it, refused to play games. He'd called me on my behaviour, making it clear that he had no time for juvenile femmes fatale.\n\n\"How about we do something less predictable, Stephanie?\" he said, \"something less adolescent? I'll tell you what - you've got 15 minutes to get to your room, pack a bag and be back here. I'll have you back at your residence in time for dinner on Sunday.\"\n\nHe frowned, just a little.\n\n\"No, on second thought, don't bother packing a bag. Just bring your flute and put whatever it is you think you simply cannot live without in your purse.\"\n\nThe words were polite enough, but the implications obvious as a thrown brick.\n\nI'd been livid at his casual expectation that I'd be happy to spend the weekend in bed with him, a man twice my age. All the same, given my previous antics, I was all too aware that I was about to be written off as a vapid, self-centred brat. Pride stepped into the ring, touched gloves with self-image...\n\nI'd been puffing a bit when I stumbled back through the doors into the University Community Centre, where Tony was minding my laptop and books. He'd been a gentleman during the ride out into the country and I'd calmed down a fair bit. \n\nOur destination, his farm, turned out to be pretty impressive, the farmhouse scrupulously clean and tastefully remodeled, with high ceilings and an entire wall of west-facing picture windows overlooking a panorama of endless fields and woodlots. \n\nMy irritation had soared again when, after instructing me to peel off my clothes and serenade him with my flute, he'd then paid absolutely no attention to me, the centerfold blonde dressed only in confused indignation. Tony barely glanced at me for the next twenty minutes, concentrating instead on making dinner for us.\n\nThe experience taught me something about Tony diRossi - his preternatural ability to concentrate entirely on the task at hand. Right then, the task was dinner, but once the meal was cooking, his focus switched to me. My lingering full-body blush went nova as he slowly circled me on my stool, his piercing eyes lingering over every part of my body, grading, cataloging.\n\nThe dinner had been very, very good and, while Tony obviously enjoyed good food, his attention was now on me. After dinner, finally fulfilling my expectations, he'd taken me to bed.\n\nOld enough to be my father, he'd had proved to be the most wonderful lover I'd ever had &mdash; considerate, imaginative, devoted, strong or gentle as needed. He'd sent me roaring up into a series of almost unending orgasms, over and over and...\n\nTo express his appreciation, he'd also given me &mdash; tried to give me &mdash; a outrageously expensive silver necklace. Amazed at how pretty it made me look, I'd fallen in love with the thing on the spot, but had flatly refused it, saying that I wouldn't be bought. After a short but heated argument, we'd compromised and I'd agreed to wear it at the farm - if I returned.\n\nI had of course returned and, one thing leading to another, Tony had eventually, almost hesitantly, offered to support me in school if I agreed to become his... \n\nHis what? He hated the 'sugar-daddy/sugar-baby' labels, but that's pretty much what we were. He paid my tuition and residence fees and gave me a generous allowance. In return, I spent the weekends in the buff at his farm. If you didn't consider our respective ages or the distinct absence of female attire, we were a pretty normal couple. We make love, studied, went for walks, made love, swam in his pool, played games, made love. He taught me to cook - well, tried to. He enjoyed music; when it amused him, I played my flute for him. \n\nI thought it was a pretty good relationship. Time spent with him made me happier by the day. Even Marcy had noticed the difference.\n\nOur relationship had developed with time, both of us changing, both of us learning. Things were less transactional now, more affectionate. Tony was no longer so stiff, so adamant and, shedding a ton of rigid societal canons, I myself had grown far more confident, both in my judgement and in the power of my femininity. \n\nTony was good company, amusing, considerate, generous and a marvelously talented lover. It had been a truly good time for me -- and, I hoped, for him.\n\nBut nothing ever stays the same. In meltdown one weekend following a vicious family quarrel and suffering some serious residence claustrophobia, Marcy had called me, begged to be allowed to join me in the only off-campus refuge she could think of. Tony and I had talked and we'd said yes, but one on condition. Marcy was my best friend, but I wasn't about to be the only naked woman there; I'd insisted she'd have to adhere to the local dress code. She had been desperate enough to agree.\n\nAn art student, she'd brought her paints and brushes and had spent the next two days in the buff, painting some very good watercolours of the lovely pastoral scenery beyond Tony's back deck.\n\nHe'd not ignored her, of course. While he'd kept his promise not to touch her, nothing could keep his slate-grey eyes from openly examining and admiring her unclad beauty. In truth, Marcy had a lot to admire. Petite, but with a very nice figure, long dark hair and big, big eyes, Marcy was also a cheerleader; her form was as sleek and athletic as her smile was enticing.\n\nAnd, while Tony hadn't touched her, that deal hadn't applied to me. Marcy hadn't missed his soft caresses when her back was mostly turned, nor the dreamy kisses I'd described to her earlier. She wouldn't have been human had she not been affected herself. \n\nIt being by coincidence his birthday, I'd presented him with a framed photo, one he'd taken of me part-way through a lovemaking session some weeks before.\n\nOh, yeah, and a hall pass. I gave him one of those, too.\n\nI figured nothing could make my affection clearer, my desire to please him plainer. I'd overcome my natural female jealousy to make the offer, knowing it would be up to me to keep my end of the bargain. All I asked was that he be honest about it, not hide it from me.\n\nGiven that Marcy was sitting a few paces in front of us, her bare form silky and golden in the summer sun, it was pretty obvious that the hall pass might include her, but I wasn't giving her to Tony; I was merely promising him not to make his life miserable if that's what happened. \n\nAs beautiful, as desirable as the girl was, I knew that that any man on the planet would give his right arm to get her into his bed. Tony had spent a lot of time looking at her; it was obvious that he was more than just mildly interested. \n\nBut, instead of taking me up on my offer, he'd won my heart all over again by sending Marcy home earlier than planned, taking me to bed and, over the course of the next hour, almost driving the bed legs through the floor.\n\n+\n\nSo, it was out in the open now. Tony's interest in Marcy had been obvious; now the attraction seemed to be going both ways. And, maybe, just maybe, there was something more.\n\nI'd seen Marcy kiss other girls at residence parties. The Zoo was almost infamous for that sort of thing and just every girl living there had participated at one point or another, myself included. But Marcy, I had thought, walked firmly on one side of the street. She'd had boyfriends, but, so far as I knew, never a girlfriend. Not in that sense.\n\nNow, I wasn't entirely sure. Well, at least from my end.\n\nI had no reason to think she had any feelings for me and that could be a big problem if I said or did the wrong thing.\n\nI lay in the darkness, wondering what to say. I hadn't told her about my offer to Tony. \n\nShe spoke again. \n\n\"I'm sorry, Steph\" she said softly. \"I don't want to...\"\n\n\"Sssh,\" I replied. \"It's OK. I'm not upset, Marce. I'm sure there's somebody out there for you. You're sweet and so pretty. Boys'd line up around the block for a chance.\"\n\nIt wasn't much, but it was all I could think of.\n\nShe whispered one flat, dismissive word before rolling over, pulling the covers over her, shutting down the conversation: \"Boys!\"\n\nAfter that, it was dead still in the room. It took me a while to go to sleep.\n\n+\n\nI suppose I should point out that I'd certainly not told Marcy about my last night at Tony's. We were open on a lot of things, but not that.\n\nUnable to sleep, I'd left a sleeping Tony, padded out into a warm autumn night on the deck and sat looking at the lights of farms spread out as far as I could see. I'd noticed the chair Marcy had been sitting in as she painted, the one Tony had been watching her in, walking around her, openly admiring her bum and boobs and legs. \n\nSitting there in the evening stillness, I found myself &mdash; a girl who'd never shown the slightest shred of interest in other girls &mdash; inexplicably aroused by that memory, by the image of Marcy stretching to relieve a stiff back, perfect breasts and long nipples pushing up to the sky.\n\nSurprised at myself, I'd hesitated, weighing the surge of emotions within me, ran a finger over my inner thigh, over the curve of one breast. I'd felt myself react to the touch, my nipples becoming stiffer, my labia swelling just a little.\n\nI remembered how she'd looked as she moved around the farm - tiny waist and firm bottom, delectable breasts. Varsity-level cheerleaders are trained gymnasts; her flexibility and graceful movements added to her appeal.\n\nI remembered how a quick, friendly hug in the barn her first day here had turned into something very unexpected, how her tight bum had felt under my hands, how her breasts had felt against mine.\n\nI felt my ladybits grow heavy, heavier still as I traced my nipples with both hands, rolled them between thumbs and fingers. I began to take deeper breaths, remembering her long dark hair blown over her face by the breeze.\n\nI squeezed my breasts softly, fingers traced the soft length of my thighs. My arousal was solid now, weighty, urgent. A tentative hand found its way to my sex, a finger slid between lips grown suddenly slick with my dew, followed their length, back and forth. My finger dipped deeper, circled my expectant clit, moved on over slippery inner lips. Again. And again, slightly harder.\n\nMy breath was coming in quiet gasps. Tony was still asleep inside and I didn't want to wake him. How could I explain? I was pretty sure he wouldn't be upset about my fantasy, almost certain he'd be delighted by being able to watch Marcy and I making love. \n\nThat said, I knew I'd die if he caught me, asked me to explain, made me acknowledge what I now realized was a real desire for Marcy.\n\nHow far I'd come, how much I'd changed. \n\nMy finger found its way in, stretched my entrance and I moaned softly. As it worked its way further inside me, my thumb rolled over my bud.\n\nMy nipples were hard as pebbles. I could hear my pulse in my ears, felt the orgasm build, begin to bloom. I slowed down, lightened my touches, drawing it out.\n\nClosing my eyes, I tried to imagine it was Marcy's hands on my boobs, Marcy's fingers in my pussy. I tried to imagine what it would feel like if my hands were doing the same to her. I was amazed at how good that dream felt. Then my mind shifted to the thought of Tony watching the two of us and it hit me, a searing tornado of joy, whirling back and forth inside my body. I managed to keep my cries inside, mostly. \n\nI lay there a long time, the glow gradually fading, until I was able to remove my fingers, catch my breath. \n\n.\n\nNow, listening to Marcy's soft breathing in the next bed, I was pretty sure I had reached another turning point.\n\n+\n\nHe was driving the little Jaguar convertible when he arrived Friday night. It was just a little cool for driving with the top down; I knew he would soon park it in his barn for the winter and switch to the old Land Rover until the salt, snow and slush passed. In the meantime, it was his pet and he was taking advantage of the unseasonably delayed snowfall.\n\nTony had only recently begun picking me up at the Zoo. The two of us being an item was no longer much of a secret; the presence of his diamond ring on my left hand served &mdash; as had been his intention &mdash; as a shield against catty whispers and spiteful rumours. A pretty young woman engaged to a rich older man was common enough and I was hardly embarrassed by him helping me into his car at the residence. Nor by the welcoming kiss that went with his hand.\n\nI took a certain amount of pleasure at actually seeing jealous glances from some of the bitchy ones, the dour prisses who would have been the first to whisper, mock and point fingers.\n\nOnce at the farm, he courteously helped me out of the low-sitting car and helped me carry my music inside.\n\nI peeled in the hallway, leaving the clothes I'd been wearing in the closet reserved now for those, my purse and any lingering modesty I might still have. I stepped into the bathroom to check my hair and makeup. When I entered the kitchen, Tony was at work already, a knife flashing through a small mountain of vegetables. The room was warm, comfortable even in my skin. Tony was a considerate man.\n\nSensing his concentration, I didn't ask him what he was making, merely moved to my accustomed station, a tall stool just a few steps in front of him. I settled myself, took a sip from the glass of wine he'd thoughtfully left on a second stool and assembled my flute.\n\nReinecke's Sonata Undine has a sad ending, but the flute at its opening is lovely, flowing and gentle. It works well enough without the usual piano and I began confidently. I was pleased to see Tony nod gently in time to it, but his attention, as it usually was when he was cooking, was almost entirely on the food.\n\nThe meal on the stove apparently progressing well, he smiled at me, moved to my side of the island and plopped himself into a comfortable chair while I continued the sonata. His head moved more firmly with the music now, but his eyes were locked on my form. From time to time, he took a small sip from his glass.\n\nThe first time we'd been like this, I'd been one huge scarlet blush, head to toe. I'd learned since then, had found that my beauty being so thoroughly treasured was something to enjoy, to treasure in its turn.. \n\nI kept playing, leaning into the music, smiled at him with my eyes.\n\nFinishing, I took a deep sip of wine, looked at him. My heart did a slow flip at the smile on his face. 50 years old or not, I thought he was the sexiest man on the planet.\n\n\"Done?\" he asked.\n\n\"If dinner is.\"\n\nHe rose, held out his hand. Courteous as ever, he seated me at my place at the table, brought plates of pasta and salad and sat next to me.\n\nI took an inquiring bite, turned smiling to him. \n\n\"This is delicious! What is it?\"\n\n\"Spaghetti Frutti de Mare,&hairsp; Sterphanie, 'Fruit of the Sea' - seafood and such.\"\n\n\"Mama's recipe?\"\n\nMama had taught her boy well.\n\n\"Of course.\"\n\nTony could have earned good money as a high-end chef and, yes, I had seconds.\n\nThe sun was going down earlier as autumn advanced and it was in any case too cool for Bare Me to sit out on the deck at this time of day. The broad sweep of windows offered a magnificent view of the countryside however and I was able to watch the beginning sunset from where I was eating.\n\nDinner finished, dishes took but a few minutes. My eyes kept flicking to outside, watching the colours form, change, shift.\n\n\"It's a pity it's too cool to watch from outside,\" I mused. \"It's been my favourite time of day.\"\n\n\"Too cold now,\" he agreed. \"Especially with the sun down. But let's see what we can do, Stephanie.\"\n\nHe looked around, brightened, took me by the hand and led me over to the kitchen island. Hanging from the ceiling overhead was a heavy oval iron rack with an array of well-polished copper pans and pots hanging from its hooks. A small extension projected a few feet from the circle; a long copper pan hung from it.\n\nHe removed the pan and reached up as if assessing the rack's height. His eyes flipped back and forth between that and myself. Leaving the pan on the island, he smiled.\n\n\"Give it a try,\" he said. \"See if you can reach.\"\n\nThe rack was just high enough to keep the pots at hand without they or the hooks being a menace to one's scalp. And I'm a tall girl; my hands could easily grasp the round iron hooks projecting down from it. \n\nI wrapped both hands around one, turned my head towards him with a smile. \n\nHe reached up, shifted one of my hands to the next hook over, leaving me facing the still-blooming sunset outside the sweep of windows. I found I could stand comfortably, without stretching or having to stand on tiptoes. I tilted my head, the obvious question unspoken.",
        "OK, now what, Tony?\n\nHe came up behind me, kissed my shoulder softly. \n\n\"Enjoy the view, Stephanie. I intend to.\"\n\nI could hear his special soft chuckle as he said that, felt it in my tummy and breasts.\n\nMy smile grew as he began to walk around me, glass in his hand. He circled me slowly, his eyes running over me from head to foot. It wasn't a casual glance, not something a boy on campus might do, not even to admire his date's prom dress. That wasn't for Tony. He took his time, studying my body, my face and my hair with the quiet pleasure of an art curator carefully, delightedly examining every brush-stroke of a long-lost Rembrandt. From time to time, he took a small sip from his glass. \n\nI tried to relax. Tony being able to look at me, enjoy the view, was central to our relationship and he could make this last a long time. \n\nOutside, the gold and crimson sky dimmed, faded, passed almost suddenly to a full, inky black. Beyond were the isolated lights of scattered farmhouses. A few passing sets of headlights traced out unlit country roads. \n\nI realized now that the broad expanse of glass in front of me had turned into a remarkably good mirror. \n\nLooking at my reflection, I knew that I had it all - the long blonde hair, the firm, high breasts, soft brown areolae surrounding prominent nipples, a narrow waist and endless, slim legs running up to a world-class bum. I'd had friends who'd said I could put myself through school working in the Dundas Street peeler bars. I'd thought about it one time when money had been tight, found economies, worked longer hours at the Spoke and, like just about everyone else, moved on. I still wondered from time to time what it would've been like, especially given the inevitability of student customers recognizing me on campus. \n\nIt would have been hard, I think, displaying myself like that back then. Now, with Tony, having discovered far more confidence than I'd had before, far more awareness of my strengths and my potential - well, it might be easier now. I was, after all, constantly on display for male pleasure. But this was only for just one boy and that one was Tony. That made all the difference in the world.\n\nI began to drift away in a happy daydream, just a bit, jumped a little when Tony touched me for the first time, a finger trailing down from my hand to my elbow.\n\n\"So lovely,\" he whispered. \"Such perfect skin.\"\n\nHis hand touched me again, stayed on me, traced its way down my arm, down my waist. A strong hand clasped one bum cheek, squeezed. I could see his image in the window as he sank lower behind me. I wiggled a little as the tip of his tongue traced its way up my bum crack. He slid over to kiss one dimple on my lower back, then the other.\n\nHis hands, those strong, sensitive, knowing hands, slid softly over my bum to my legs, then down to my ankles, fingers trailing smouldering tingles in their wake. In the window, I could see my nipples swell, smiled at the feeling.\n\nBending, his lips kissed the back of each of my knees. Rising, he nipped one cheek gently with his teeth. I felt my tummy harden, my legs quiver. \n\nOn his knees, he slid around to my front and looked up at me. Those grey eyes, which once I'd felt to be so formidable, were soft now, gentle, eyes to warm my heart.\n\nPalms together, his hands slid between my ankles, softly pushed them apart, better exposing my bare sex to his gaze. As my feet spread further, I felt my grip on the hooks above me tighten a bit, but I was still perfectly comfortable.\n\nI could feel his warm breath on the soft skin of my inner thighs, on my sex. In response, I could feel my ladylips swell slightly and heard him chuckle again.\n\n\"So very pretty,\" he murmured, then leaned in, kissed me there, softly, lovingly. He leaned back, his eyes sparkling, a smile on his face. \n\n\"So pretty,\" he repeated, then leaned in again, this time to give a soft, broad lick with his tongue, the full length of my sex.\n\nI gasped softly, delightedly, hopefully. I'd often told Tony that his tongue deserved a PhD in Pleasing Stephanie. He licked me again, feathers and dandelion fluff and the sound of a single snowflake.\n\n\"Tony,\" I moaned.\n\n\"Hush, woman,\" he whispered, bending in and licking me again.\n\nHe backed again to smile up at me, leaned in again for a longer, slower lick, his hands around me, clasping my bum.\n\nI realized that I could see us reflected in a large mirror mounted on the wall behind me -- a two-bank shot from window to mirror, so to speak. I could see his fingers sinking into my bottom as he pulled his head into my sex, his tongue swirling and dancing. I could see my labia, his chin and white beard between my spread legs. \n\nI moaned, totally ready for him, ready, willing and...\n\nI moaned again, louder, as he stopped, stood up. One hand drifted through my hair, twirled it around and between his fingers, used it to pull me in for a strong, strong kiss, his tongue teasing and playing with mine. His other hand found one breast, then the other, squeezing, playing.\n\nI could taste myself on his lips and moaned again, louder, deep in my chest, as he released me, stepped away. Picking up his wine glass, he took a sip, held it to my lips. Almost panting, I took a deep gulp, swallowed.\n\n\"Thank you,\" I whispered, \"but...\"\n\n\"Hush, Stephanie. This pleases me for now.\"\n\nHe held the glass to my lips again. I sipped gratefully, leaned quickly forward as he pulled the glass away too soon. I moved too slowly and wine dribbled over my chin.\n\nTony laughed gently, tilted the glass towards me, sending more wine over my chin and throat, a sheet of it trickling down over my collarbones and breasts.\n\n\"Tony!\"\n\nHis laughter was more open now, more carefree than I'd ever heard it. Setting down the glass on the island, he leaned in and began to lick the wine off my body with broad, quick tongue strokes. While he did a good job everywhere, I wasn't particularly surprised that much of his 'cleanup' seemed to be directed to my breasts.\n\n\"Tony,\" I whispered. \"Your shirt.\"\n\nHe pulled back for a moment, looked down. There was indeed a drop of wine on his otherwise-impeccable garment. \n\n\"Don't go 'way,\" he commanded as he stepped back and turned on the kitchen kettle. Boiling water would take out the wine, when and if. His fingers rose to his shirt buttons and began unfastening them. He began circling me again as he undressed. The shirt was tossed onto the island, his trousers onto a convenient chair, leaving him as bare as I'd been for hours.\n\nHis cock &mdash; his wonderful, gifted, joy-making manhood &mdash; was hard now, as swollen as my waiting labia. I smiled at the sight of it, smiled again in anticipation of the happiness I knew it would soon give me.\n\nIt swung heavily as he turned. I bit my lip in small frustration as he again began to circle me, kissing my skin, dragging fingertips over legs, bottom, boobs, throat, face. \n\n\"Tony...\"\n\n\"Be patient, Stephanie. I am enjoying this.\"\n\nHe stopped suddenly, stepped away, facing me with hands on his hips.\n\n\"Are you&hairsp; not enjoying yourself, Stephanie?\"\n\nI could feel happy moisture on my inner thigh, knew he had tasted it, had toyed with my stiff nipples. A tease was Tony, but a very pleasant one.\n\nHe laughed, stepped into me again, seized my head in his hands. I could feel his hardness against me as his mouth ground onto mine, demanding now, urgent. I shifted my tummy from side to side, rolling his manhood between us. His kiss changed for an instant and I knew how much he'd liked that.\n\nHis hands came around my waist, pulling me in hard, then harder still, kitten tenderness over grizzly bear strength. \n\nHis lips came to my ear and he nipped my earlobe gently with his teeth. \n\n\"Let go now.\"\n\nI dropped my arms; he caught me up in his own, carried me into the bedroom. Moments later, no need for subtlety now, he dropped me on my back and eased his organ into me in one long, smooth push. My breath caught as his engorged rim stretched me, his length filled me, slid along my walls. He paused, kissed me, began to drive into me, hard now.\n\nI reached down between us, found where my lower lips were being dragged and stretched by his plunging shaft. Palm-down on my mound, I made a Vulcan V, stretched out further, felt him glide between my fingers, veins and velvet skin over Italian oak. I squeezed my fingers together, heard him grunt in pleasure. \n\nI shifted my thumb, found my pearl, began to roll it whenever he lifted. I was close, very close. Every time Tony dropped onto me, every breath I took, every shift of the wind outside almost -- everything was fanning my hunger, pulling me nearer and nearer to my climax.\n\nTony stiffened, gave a small gasp as I squeezed his cock with my most female muscles. He groaned and sagged, then, pulsing, emptied his pleasure into me. I gave one last push with my thumb and exploded myself, great bursts of light, turning and shaking and burning, crying my joy in the night, wordless and shrill.\n\n.\n\nAfter a few minutes, Tony eased himself out of me, lay beside me in the candlelight. Orgasmic ripples faded slowly through me as he shifted himself, snuggled in closer. One hand swept gently over my breathless body, clutched briefly on my bum, moved up to come to rest on my breast. \n\n\"You are amazing, Stephanie.\" His hand squeezed my boob softly. \n\n\"I'm amazed at you, Mr. diRossi, so good to me, so kind - such an amazing lover.\" \n\nHe squeezed again. \"I wish I'd spoken up earlier, Stephanie, maybe the first time we met in the lab. So lovely, so warm -- why did I take so long?\" \n\n\"It worked out, Tony. You make me very happy now. I love you.\" \n\nHe started to speak, cursed softly when my phone rang. I recognized the ring.\n\n\"It's Marcy,\" I whispered.\n\n\"At this hour?\"\n\nI got out of bed, found my phone. There was nobody there. I called back, but she didn't answer.\n\nI shrugged, went back to my man.\n\n+\n\nI was drifting, miles down, floating in the hedonistic bliss of an extended foot rub. I smiled into the darkness as strong hands rolled and pulled my toes, slid up my soles, caressed my ankles, soft, strong and loving.\n\n\"Mmm. You're good to a girl, sir.\"\n\nHe laughed a little. The candles had burned out and the only light came from a nightlight in the bathroom down the hall. I could see his silhouette against the open door -- strong, broad shoulders. dangling manhood between his thighs.\n\n\"Have I mentioned that I love you, Stephanie?\"\n\nMy heart stopped. I swear it did. Tony had never spoken of love before. I'd been dreaming of it, dreaming of him saying that he loved me, but this was the first time.\n\nI shook my head, tried to prove to myself that I was awake. I wriggled, pulled loose, rose to my knees. \"Tony? You're not playing...\"\n\nI felt his arms come around me, pulling me into his shoulder. I found myself weeping - happy, delighted tears, tears I'd been saving up for a special occasion.\n\nI felt him reach out in the darkness, then a tissue was pressed against my face.\n\n\"Never, Stephanie. I wouldn't joke about that. I love you, dear woman.\"\n\nThe tears started again. I sniffled, tried to smile more, pulled back to blow my nose.\n\n\"I love you, too, Tony. I've so wanted...\" My throat choked up; instead of trying to talk, I pulled him in for a kiss, an almost frantic, wonderful, ecstatic kiss. The tears wouldn't stop, but I think he knew they were blessing, not grieving. His hand swept my head, trailed through my hair, down my back, and again, comforting, loving.\n\nHe was a patient man and waited patiently for my happy sobs to pass. \n\nHis hand turned my face up and towards him. I could see the one side of his face, tried to turn away.\n\n\"I must be a mess,\" I whispered.\n\nHis hand appeared with another tissue, gently wiped my eyes and cheeks. He held it to my nose.\n\n\"Blow.\"\n\nI did, giggled. I collected the sodden tissues from where they lay around us on the bed, pulled them into a ball.\n\n\"I'll be right back.\"\n\nIn the bathroom, I wiped the last of my tears away with a wet cloth and slid into that emergency makeup repair process every woman knows. I was about to leave but stopped, opened the cabinet again. I quickly found the small perfume bottle. \n\nNot too much. Not now. Just a reminder, a hint, tiny drops on wrists, neck, behind my ears, between the girls and a last one on one inner thigh.\n\nA quick touch with the hairbrush and the girl in the mirror looked 100% better than the teary wreck three minutes before.\n\nShoulders back, Steph. Big smile -- happy smile, delighted, loving smile. Initiating graceful in three, in two...\n\n+\n\nTony's head was on the pillow now, resting on hands tucked behind it. I could see his eyes on my form as I re-entered the bedroom.\n\nI crawled the length of the bed on hands and knees, lay down beside him. He wrapped an arm around me; I rested my head on his shoulder, curled my body against his, warm in the dim light.\n\nI didn't say anything at first, merely ran my fingertips up and down his chest.\n\nI sensed him sniff lightly, smiled to myself.\n\nHe pulled away, smiling now. He rested on one elbow, examined me, sniffed again, less softly this time. His eyes moved over me in the dim light.\n\n\"She cleans up pretty good.\"\n\nI smiled at his gentle tease, leaned up and kissed his cheek.\n\nHis smile faded; his face became more solemn. \n\n\"I did mean it, Stephanie. I'm sorry it took me so long. I've been... afraid.\" The word sounded so strange on his lips.\n\nOne hand slid along my side, squeezed my waist.\n\nI smiled, kissed his lips gently, rolled back.\n\n\"I love you, Tony. More than I thought possible. And you said it at the perfect time.\"\n\n\"Perfect...?\"\n\n\"Now. You said it now, which makes now the perfect time.\"\n\nI could see him rolling that around in his head.\n\nMy turn. Time to seal this moment in my memory &mdash; and hopefully his &mdash; forever.\n\nI rose to my knees, He tried to follow, but, hand in the middle of his chest, I pushed him back, gently but firmly. He chuckled, dropped onto his back in the middle of the bed, arms and legs outstretched. Smiling softly, I slithered over him, softly drawing my boobs and tummy over his legs, his groin, up his chest, coming to rest kneeling over his midsection, a knee on either side of his hips. I could feel his soft penis against my inner thigh.\n\nI tried my brightest smile, leaned down so our faces were almost touching.\n\n\"Tony,\" I said softly, \"I've waited so long for you to say that. You've made me very happy, dear man.\"\n\nHis lips were soft now, no urgency, no agenda. His tongue met mine in a slow, languid dance while his hands lovingly clasped my bum, pulled me in towards him.\n\nThree days and a century later, I pulled back, my heart pounding. His tender smile, framed between white beard and moustache, gleamed in the dim light from the hallway.\n\n\"I want to make you happy, Stephanie.\"\n\nHis hands rose from my bottom, took me by the waist, hugged.\n\nI bent down, kissed him quickly, began to slide down his body again, my tongue trailing on his skin. I kissed his nipples in passing, circled his navel, moved further down. Tony's hands dragged lightly over my back as I moved.\n\nHe was still soft when I reached his groin, flaccid sex lying on one thigh, scrotum and balls hanging between his legs.\n\n\"Oopsie,\" I giggled. \"Somebody's gone to sleep.\"\n\nHe laughed softly, lay still, waiting.\n\nI lifted his heavy sac with one hand, licked around and behind it. I sensed his tummy muscles tighten slightly as I gently kissed his soft manhood.\n\n\"Wake uppp, little man!\" I stage-whispered. Tony's chuckle was cut off as I sucked it between my lips and began to swirl my tongue around it. I was surprised how quickly it filled my mouth as it stiffened. A minute later, I was licking its length, exploring its slit with my tongue, gently rolling the boys in my fingers. \n\nI remembered to show my man how pleased I was at being able to please him like this. I kept my eyes fixed on his as I pumped his softest skin over his rigid core, thumbing his crown every time my hand reached the top, took him deeper into my mouth. I gave him a happy smile whenever I lifted myself off him. His eyes were half-closed and I gave his head a gentle nip with my teeth.\n\n\"Hey! I had to wake one of you up already, Tony. Don't you dare go to sleep!\"\n\nLaughing, he swept his hands over my head, fingers flowing through my hair.\n\n\"Not a chance, Stephanie. Not a chance.\"\n\n\"I want to hear it again,\" I whispered.. I began to pump his cock harder now. \"Say it again, Tony.\"\n\n\"I love you.\"\n\nMy heart soared and my soul caught fire. There was no need for foreplay now, not for me.\n\nKeeping my hand around his length, I rose, aimed him, lowered myself onto him. My head fell back, my hair streaming behind me as I felt his girth stretching me, filling me to my core as I sank lower onto him.\n\nHis arms came up again, but I caught his wrists, pushed them down gently.\n\n\"My turn, Mr. diRossi. You can relax for a change, you delightful man. This one's on me.\"\n\nHe smiled, adjusted a pillow and lay back with his hands tucked behind his head, watching. I could see his nostrils flare each time I rolled my hips over him.\n\nIt was tender sex, soft and gentle, as lovingly affirming as it was physically enjoyable. \n\nSlowly, I thought. Make this last. Make him remember this night.\n\nHe was breathing deeper now, his eyes fixed on mine. His hands moved gently over my thighs and waist, swept up to cup and caress my breasts, then started over. It felt too good to push him away again. I rolled my hips, slowly, slowly, feeling his length move inside my depths, felt his crown stretching my inner walls as I moved. From time to time, I leaned down, felt my nipples tingle at the hair on his chest, kissed him, kisses miles deep and soft as down.\n\nI could feel the arousal grow within me. I knew I would reach an overwhelming climax in time, but this was the moment for simple sensations, expanding slowly, building patiently, the patience Tony had taught me.\n\nTony caught my nipples between thumbs and fingers, pulled gently as his hands squeezed my boobs. I giggled happily, squeezed his organ inside, heard him chuckle.\n\n\"I love you,\" I murmured, then gasped slightly as he softly pinched my nipples.\n\nI kept rolling my hips on his, happily giving, thankfully accepting.\n\nTony's breathing suddenly stopped; he lay motionless beneath me.\n\nI followed his eyes, saw Marcy's form silhouetted in the doorway. I froze myself, shocked, embarrassed.\n\n\"I called,\" she whispered, \"but you didn't answer. I had to come.\"\n\nI looked down to Tony, back over my shoulder to the figure in the door. I couldn't see her face, but it was clear that she'd undressed. The faint light highlighted narrow waist, perfect hips, labia visible between strong thighs.\n\n\"Please.\" Her tone spoke of uncertainty, worry, maybe even fear. \n\nFear? Of rejection? Was she so foolish as to think that all she had to offer was her nudity?\n\nTony remained silent, unmoving. \n\n\"The door was unlocked,\" she said. \"I'm sorry.\"\n\n\"Please,\" she repeated softly.\n\nThere was a long silence. I could feel Tony's hardness twitch once within me.\n\nHis head turned from Marcy, shift down to look up me. Even in the dim light, I could see his grey eyes, sense his unaccustomed uncertainty.\n\nI overcame my initial shock. Had Marcy been dressed, it might have &mdash; would have &mdash; have been different. Naked and beautiful as she was, I somehow found I was not going to die of embarrassment, was not going to scream, either in frustration or in embarrassment. Maybe her nakedness was an offering, a proffered vulnerability...\n\nWhatever pleased Tony. &hairsp; Marcy in the door was pushing my boundaries very hard, but I could hardly forget my hall pass, if this was what would please him.",
        "I looked at him, tried to read his expression, failed. I squeezed him inside, heard him sigh, felt his hand caress my cheek. His moved his hips, took a long, gentle stroke inside me, then another. I realized that, from where she stood in the doorway, there was no way Marcy could not have seen his substantial length sliding in and out of me.\n\nI'd frequently reflected &mdash; had mentioned to Marcy, as it happens &mdash; that while Tony had often made me embarrassed by some of his expectations, not once had he ever humiliated me, demanded something which would leave me ashamed to look at myself in the mirror. Nudity solely for his visual pleasure had been hard for me to accept at first, something which went against a lifetime of societal dogma. He'd expected me to go for walks on his farm, my clothes in the farmhouse a mile away, a light-year from my prudery. \n\nI'd learned. I'd grown. \n\nOne of the things I'd learned was to trust Tony.\n\nWhatever pleased Tony, until he or I decided it was time for me to go home. &hairsp; \n\nIt was his choice. \n\nI shrugged mentally, began rolling my hips over him again, felt a shimmying restart inside me.\n\nIgnoring Marcy now, his entire attention on me, his hands clutching my bum, Tony began taking a series of long, slow, deep strokes, pulling me hard against him.\n\n\"I love you,\" he whispered, so low that I couldn't decide whether or not the girl in the door could hear.\n\nIn for a dime, in for a dollar.&hairsp; I sped up, my hips rolling over his groin faster now, harder, timing my movements to those of his rising hips.\n\nI gave a little surprised gulp when I saw Marcy had moved out of the doorway, was circling the bed an arms-length away, silent, her eyes very wide. Tony's strong hands softly caught my nipples, squeezed; Marcy jumped a little at my happy gasp.\n\nI could see Tony's eyes move to her now, back and forth between us.\n\nThe girl stopped, standing beside the bed, hands at her side. \n\nTony spoke, his voice very gentle. \"What do you want, Marcy? Why did you come out here tonight?\"\n\nEven in the dim light, I could see the girl blush as she stammered. \"I... I mean...\"\n\nHe shot a quick glance at me, pulled me down hard against his stomach, paused his strokes. I found myself hovering, not quite on the brink of an orgasm. His hand reached up, turned on a sidelight, just enough to see something other than her outline.\n\nRemaining inside me, his eyes examined the girl now, taking in her taut nipples, her glistening sex.\n\n\"You wish to join us, Marcy? Is that it?\" His voice had become even softer.\n\nShe bit her lower lip, nodded once. Her eyes flitted back and forth between Tony and me.\n\nI hissed with pleasure as his length slid out a fraction, then slowly back. His voice was soft. \n\n\"Stephanie...?\"\n\nI looked from my best friend ever, back to my lover, my sugar daddy, my love, my heart. I leaned down to him, kissed him fiercely, squeezed him inside as hard as I could. His breath was hot and I could feel stubble on his cheek above his beard.\n\nHe chuckled, deep in his chest, squeezed my breasts. I sat up again, looked at him, remembering my promise. I turned to Marcy, saw the uncertainty in her eyes. I remembered my promise to him, took a deep breath.\n\n\"Yes,\" I whispered, wonderng at my courage, at the daring of my response.\n\nHe caressed my cheek with one hand, turned to the small figure beside us.\n\n\"You wish to please me, Marcy?\" he said. His voice was still soft, but there was a tone of authority in it now. \"To do what pleases me until one of us decides it's time for you to go home?\"\n\nI'd long since told Marcy the terms of my understanding with Tony. Hearing them now aimed at my friend, they seemed different, imperative. \n\nMarcy head nodded again, just once, then she froze, looked at me, whispered.\n\n\"'One of us'?\"\n\nHe smiled at her. \n\n\"One of us, Marcy. There are three of us here now.\"\n\nMy heart darned near melted at that. I leaned down, enfolded him with my arms, my chest pounding, my kiss grateful, loving, blissfully happy. When I broke for breath, he pushed me upright again, spoke to her.\n\n\"Then come here, Marcy. Kneel beside us on the bed, please. No, closer. Over here.\" One hand slipped from my bottom, patted the sheet immediately beside my knee.\n\nWide-eyed, she shifted herself onto the bed, her breasts rising and falling as she breathed. I could see how hard, how needy those long nipples were now. I could smell her arousal.\n\nTony looked at me again, made no effort to touch her. Again he asked, his voice very low. \"Stephanie?\"\n\nNot looking at him, keeping my eyes on Marcy, I responded softly. \"I've already answered you, Tony.\"\n\nI looked down at him for a moment, saw his sweet, gentle smile in response. He turned to the girl beside me.\n\n\"You have such beautiful breasts, Marcy.\" Her wide eyes flipped to me, back to Tony. She knew &mdash; all three of us knew &mdash; how pleased Tony had been to admire them before, how thoroughly he'd enjoyed looking at her sunclad beauty.\n\n\"But I am, as you can see, somewhat busy right now, Marcy. So, show them to me. Please.\"\n\nHer jaw dropped open, closed again. This was clearly not what she had expected.\n\nNor me, to be honest.\n\n\"Show me, Marcy.\" He paused, then smiled. \"Hold them up for me so I can properly admire them.\"\n\nBlushing, the girl did so. He began moving inside me again and smiled both at the pleasure that gave and at the sight she presented.\n\n\"Show me what you would like me to do to them.\" Then, \"Show us what you would like Stephanie to do to them.\"\n\nThat&hairsp; was a shock. Had the man read me that well?\n\nWithout waiting for a reply, he turned away from her, began lifting me with those massive arms, letting me fall back along his hardness.\n\nI was close now, very close. I began to roll my hips over and back, glorying in his shaft sliding through my slippery depths.\n\nI slowed down, tried to hold off, delay, simply enjoy the sensation. As if in agreement, Tony lay back, dropped his head to the pillow and began to look back and forth between us. His hands slid up my waist, caught my swaying boobs, began lifting and squeezing them as I moved over him.\n\nI turned my gaze to Marcy. Blushing scarlet now, her eyes were fixed on Tony as her hands swept over her exquisite bosom. As I watched, she caught her nipples between thumbs and fingers, rolled, stretched, squeezed. A dreamy expression came over her and she began to breathe faster. The sight of her was fuel to my own fire.\n\nI raised my hands to my own bosom, began to mirror Marcy's movements while at the same time rolling my hips more firmly. Tony released me, tucked his hands behind his head and lay simply watching, eyes shifting back and forth between us, watching slim hands move over eager breasts. \n\nI shivered at the sight of Marcy's fingers on her nipples. For a moment, it felt as if they were the ones playing with my own.\n\nI looked down at Tony, his eyes now on me.\n\n\"Kiss her, Stephanie.\" The words were gentle, but it was not a request.\n\nMarcy's hands on her breasts froze. Wide eyes stared at mine, wondering.\n\nThis was new. I should have expected it, certainly welcomed it in a way, but it was still a shock. I turned as red as Marcy. \n\n\"Kiss her.\" His whisper was soft, but commanding.\n\nWhatever pleases him, unless and until... \n\nI leaned towards Marcy, my hands covering my own breasts. \n\nI could see her hesitation, then she too leaned forward. She paused a fingerbreadth away from me. Her breath smelled sweet; her dark eyes seemed enormous.\n\nI moved in, felt the softness of her lower lip, took it between both of mine, pulled back a fraction. Her lips parted now, her tongue traced between them and she leaned in to meet mine.\n\nSoftness and firmness and love and worry and hope and desire, we paused, just touching.\n\n\"Don't stop,\" he said. I realized my hips were no longer moving and began again. \n\n\"Kiss her,\" he repeated.\n\nI wasn't sure if he was speaking to me, to Marcy or to both of us. I thought Marcy must be facing the same struggle, leaned in more.\n\nMarcy's head moved against me, firmer, harder. I touched her teeth with my tongue, felt them part, felt her own tongue meet mine, welcoming now.\n\nAnd there was no longer any uncertainty. It felt right now, as it should be and I leaned in more, felt her hands covering her boobs press against my arm. I brushed her hands aside, felt for her breasts with my own hands. No doubt now, not for me. And not for Marcy, I suddenly knew, for her own hands swept up my middle to find my girls.\n\nHer hands felt different than a man's, softer, more attuned to the way I felt. And that was odd, for Tony was a master of boob satisfaction. My fingers flowed over Marcy's twins, knowing for the first time the pleasure of feeling vice being felt. I'd touched my own breasts many times of course, but this was entirely different. Weighty, soft, enticing -- I could suddenly see why boys found mine so fascinating.\n\nI was feeling easy with all this, I realized. Strange, certainly. Excited, yes. But comfortable, deep down inside. I wasn't sure where it was going, but Tony was certainly enjoying himself and that in itself gave me yet another layer of pleasure. \n\nTony's hands came out from behind his head. Marcy's eyes were closed and she jumped slightly as Tony's hand slid between her thighs, his fingertip softly stroking the girl's liquid sex. I gasped a little as his other hand slid between us, found my bud above my pussy, still stretched with his cock. Between that and Marcy's hands on my boobs, I had never felt so wanton, so completely passionate.\n\nMarcy gave a deep groan of pleasure, echoed an instant later by my own when her fingers tightened on my girls. Then Tony's hand stroked me deep inside and I was off into a storm of ecstasy, flying, swirling, rising into a sky filled with pleasure and love and shivering, sobbing happiness.\n\nNeither Tony nor Marcy stopped their stimulation and I felt my orgasm grow, soar, bursting now with my ecstatic screams. At that, the other two paused. I fell to one side, off Tony, leaving his rigid length glistening in the soft light.\n\nTony gathered me in to his side with one arm, my head on his shoulder. His other hand continued to gently explore Marcy's pussy, delving deeper now, fingers glistening with her dew.\n\nDreamily, my orgasm slowly fading, I watched the two of them beside me. Marcy was still kneeling, her hands back now on her own breasts, thumbs stroking pink nipples. Her eyes were closed and I could see her stomach shiver, her thighs tense. She was very close, her head back, her mouth uttering a steady stream of cries: \"Oh! Oh! Oh!\"\n\nTony's cock was still upright, hard, unsatisfied. I reached out towards it, was surprised at his murmured, \"No.\"\n\nI turned my head, looked up at him, saw him nod at Marcy.\n\nHer turn.\n\nHe looked at me briefly, as if looking for confirmation. I merely settled back against his shoulder, watched as Marcy began to writhe on his hand now, panting, biting her lower lip, gasping wordless, blissful tones, her voice growing louder and louder as the man skillfully, lovingly pushed her up and up. Her face and body were covered in a thin sheen of perspiration.\n\nHe pulled his hand away from under her and she moaned in puzzlement and disappointment. Her head rose, her eyes found his.\n\nHe glanced at his pole, swaying just a little between us.\n\nI saw the understanding in her eyes. A bright smile on her face, the girl lowered herself over his length, squealing as his organ stretched her womanhood, filled her to her very limits. She paused for a second, eyes closed, panting, then started again, strong, athletic legs moving her up and down, over and along his cock, boobs swaying as she moved.\n\nI felt Tony's arm under my head shift, felt him catch my nipple, idly toy with it. He turned to me, moved his head closer. Stretching up, I kissed him gently, a kiss of satisfaction, of love, of contentment. I let my head fall back to his shoulder, smiled up at him again. \n\nNow that it was happening, this was proving to be easier than I'd thought. I'd been worried I wouldn't be able to deal with the jealousy, that I'd be upset if Tony actually followed through with his hall pass. Now, watching the diminutive naked figure bouncing on his tool, listening to her joyous cries, running my fingers through his whiskers, my concerns seemed to have been so inconsequential. \n\nI watched Marcy's face she swayed and moved on my lover. Locked in a primal passion, her eyes were closed, one hand pulling at her nipples, the other between her legs, fingers working her pearl.\n\nA year ago, I would have clawed her eyes out, screamed, thrown things. Now, I felt serene, maybe even happy.\n\nI ran my hand through Tony's chest hair, along Marcy's sleek thigh, up, found one of her boobs, squeezed softly. She took a brief look at me, smiled, closed her eyes and returned to focus on her own pleasure.\n\nTony's hips began to buck under the girl, thrusting up to meet her body each time she allowed herself to fall back down onto him. His free arm ran from boob to belly to face, restarted. Gasping, Marcy slowed and gave a deep groan. I pinched her nipple softly, saw her sag, quiver, slump down towards him. Under her, Tony went totally rigid, his mouth open, gasping for breath as he filled her.\n\nA moment later, the girl sagged completely, fell across him, then shifted to lie beside him, across from me.\n\nI could hear a wind now, gusting, wild. Inside, it was warm. \n\nPeaceful.\n\nHappy.\n\nI went to sleep on that thought.\n\n+\n\nTony and Marcy were still sleeping when I awoke. I sat on the edge of the bed, watching them, generally happy but a bit uncertain in the daylight.\n\nNow that it had happened, how did&hairsp; did I feel? I'd been torn when I made the offer, had had convince myself to tough it out. Last night had been mainly excitement and insistent carnality. Now...? \n\nTony's face looked so innocent when he was sleeping, like a small boy's. Marcy had a sweet, soft smile on her face. I was pleased about that much at least; she was my best friend and she'd had so many rough times of late. But I still wondered if I could stay with my resolution, my promise never to complain to Tony about it, never be cold to him because he'd done something I'd steered him towards.\n\nMarcy shifted in her sleep, rolled towards Tony, threw her arm over his chest, snuggled in. \n\nI looked at them, smiled a bit, realized that it would be OK. I loved Tony more than I'd ever thought possible and he'd taken nothing I hadn't offered. I traced my fingers along his beard, felt my heart become easier.\n\nThis would be fine. Love shared doesn't have to be love divided; treated properly, it can grow and grow. I had enough love for both Tony and Marcy.\n\nI left the bedroom, said good morning to Pi, the farm's actual owner. She flowed around my ankles in profession of infinite love and eternal friendship, instantly abandoned me when I opened a can of food for her. I made a pot of tea and sat on the sofa, looking out the wide expanse of west-facing windows. Outside, most of the trees were bare and the fields were mainly brown, but the sun was fully up. It promised to be a fine autumn day.\n\nI heard a door close softly down the hall and, a minute later, the toilet flush. I didn't turn from the window. \n\n\"Hi.\" Marcy's voice from behind me was soft, tentative, almost hesitant.\n\n\"Hi back. There's tea on the counter.\"\n\nShe didn't move. I smiled to myself. Yup, major dynamics reset since yesterday.\n\n\"Stephanie?\" Her voice was very soft.\n\nI turned and looked at her. Sure enough, her arms were crossed high on her chest, her hands on her shoulders. She was biting her lip, a guaranteed sign of nervousness for her.\n\nI wondered at my earlier fretting. Marcy was obviously having just about the same concerns.\n\nI tried a good smile. \"Don't be silly, Marcy. Everything's fine. Get yourself a tea and come sit down. It's a nice morning.\"\n\nShe stared at me for a moment, turned and came back with a tea. She sat, I noticed, at the very far end of the sofa.\n\nShe sipped her tea, big eyes staring at me over the rim of the cup.\n\n\"You're not mad, Stephanie?\" Her voice was very soft.\n\n\"You were there, Marce. Did you see me objecting?\"\n\n\"No, I guess not. But Tony...\"\n\nTony could discuss Tony; I changed lanes.\n\n\"What was going on, anyway? You called me last night.\"\n\nShe looked sheepish. \"The music down the hall was driving me nuts. It wasn't loud, but it just went on and on and I had to get out of there. I called you but you didn't answer and I figured Tony wouldn't mind my crashing in the spare room.\" \n\nPushing it, &hairsp; I thought, but OK.  \n\n\"I called you back, you know.\" \n\nThis time she blushed. \"I... I guess I forgot my phone. I'm sorry.\"\n\n\"Don't be. Invitation or not, I think you made Tony's night.\"\n\n\"Oh.\" She grinned uncertainly. \"I guess. But you're OK, Steph? You're not mad?\"\n\nI thought for a moment, took a deep breath. \n\n\"No. I mean I'm fine.\"\n\nI turned in the sofa, sat looking at her.\n\n\"Anyway, I'd already given Tony a hall pass, Marce.\"\n\n\"Saywhatnow?\" \n\n\"On his birthday, the first time you were out here. I didn't point you out, but I told him that I wouldn't go all jealous-weird on him if something ever happened.\" I thought how that sounded, added, \"With any woman. Then or later. All I needed was for him not to try to keep it secret.\"\n\nI smiled wryly. A second later, she joined me. There weren't many secrets to keep, not after last night.\n\nI could see her relax a little and was happy for it. \n\nShe took a sip of her tea, greeted Pi when the cat joined us, curling up on the middle of the sofa.\n\n\"So...\" She looked less tense, but I knew what she meant.\n\n\"I dunno, Marcy. This whole thing is so... different.\"\n\nSaying nothing, she raised the cup again, held it so I could only see those big eyes.\n\n\"Anyway,\" I said, \"this morning, let's be something he's happy to see when he wakes up.\" \n\nShe lowered the cup; her grin broadened. \"I think he's going to sleep in a while yet, Steph.\"\n\n\"I do think we wore him out, Marce.\" I giggled slightly, put my own cup down. \"But I'm for a shower before he wakes up. I'll be back in ten.\"\n\nShe closed her eyes and took a deep breath, as if summoning her own courage.\n\n\"Is there room for one more?\"\n\nMy jaw dropped, just a little. Yes, last night... but that was then, with Tony. This was now. Daylight. No Tony. \n\nJust us.\n\nWe looked at each other, mutual blushes turning into serious giggles, with each of us trying madly to keep from breaking into serious laughter.\n\nI failed, laughed so hard that I began to choke. Marcy wound up thumping my back, which did the trick. We looked at each other goofily, fell into each other's arms. Now, here, in broad daylight, I found that nudity wouldn't stand between us. She was still Marcy, still my best friend.\n\nIf...\n\n\"Yeah,\" I replied finally. \"There's room for one more.\"\n\nWe need to do this,&hairsp; I thought, as we walked hand in hand down the hall, softly so as to not disturb the still-sleeping Tony. My mind was jumping back and forth. \n\nWe'd been roommates at the University for a year and a half and, yes, I'd been fantasizing about Marcy for a while. And last night had been anything but a fantasy.\n\nAll that said, Marcy and I knew how to exist as roomies and as friends, but if this wasn't to turn into a major train wreck, we were going to have to learn to exist as naked&hairsp; friends, to become comfortable as shared, and, more importantly, sharing&hairsp; lovers, even when Tony wasn't around \u2014 and all that was an entirely different bucket of inexperience.\n\nI was pretty sure the same sort of things were running through her mind. How to make all this less weird, less worrisome?",
        "I turned on the shower, took off Tony's heavy necklace, laid it by the sink. I saw Marcy eying it. Her hand moved half an inch towards it.\n\n\"May I?\" she asked, tentatively.\n\nIf I could share Tony, I thought, I could share the necklace too, if only for a moment. I picked it up, stepped behind her, fastened it behind her neck as she looked at herself in the mirror.\n\nHer hand came up, touched the complex links, ran a fingertip over them. The awed look on her face was amazing; looking at her expression, I realized how I felt about the necklace myself.\n\nI kissed the top of her head gently. She leaned back against me. Bare-on-bare again, but I could see that this was just friendly. I put my arms around her, clasped them over her stomach, gave a small hug.\n\n\"Wow!\" she breathed softly. Her eyes in the mirror were misty as she looked at our reflection, smiled sadly.\n\n\"It's so pretty, Steph.\"\n\n\"I know.\" I wasn't going to get all possessive with Marcy. Not over this.\n\nI stepped away and retrieved my necklace before getting into the shower. Marcy followed.\n\nThat she was as petite as she was pretty made it less awkward at first; we weren't squished against one another. Once we'd turned about under the water, after we'd soaped up a couple of washcloths, we suddenly paused.\n\nI thought there had been a pretty clear, if unstated, expectation that we'd be washing one another. Why else would we both be in the shower at the same time? But our hands stopped just short of touching. \n\nMarcy's dark eyes turned up to mine. I could see her lick her bottom lip. Both of us took a deep breath at the same time. Seeing it, we giggled together; wordlessly, our hands moved forward, began stroking suds over the other's body. \n\nWas it sexual? It certainly had Sex with a capital 'S' written all over it -- two good-looking young women rubbing soap suds over each other's naked bodies. How not? But, right then, it was more friendly than sexual - social grooming, bonobo-style, hold the fleas, side order of soap. I tried very hard to keep it so in my mind.\n\nThe washcloths helped. I paused, looked down at her, felt enormously tempted to drop the cloth and begin spreading the soap over her soft skin with my bare hands. But that would have bent the needle, nailed it firmly at 'sexual'; I wasn't entirely sure I was ready for that last big step. Oh yes, oh very yes, I was happy with having been in bed with Marcy last night, with having shared her as a sex partner. I shivered inside at how gut-wrenchingly amazing her kisses and boobs had felt. But that wasn't where I'd hoped this was to go today. I kept the cloth, even when Marcy started to focus on soaping my chest. \n\nI really did.\n\nAt first.\n\nWell, at least until Marcy, an impish expression on her face, moved her hand away from my body and deliberately let her washcloth fall around our feet, began running soapy hands over my tummy, my hips, up to my breasts. \n\nMarcy kept her eyes turned from mine, said nothing, just kept industriously washing my girls, slippery bare boobflesh flowing under sudsy bare palms and fingers.\n\nScrew principles. \n\nMy chest and tummy tight, nipples hard as pebbles, I dropped my own cloth, pumped more soap into my palms and began moving my hands over the small cutie crowded against me. Her skin felt like satin - soft, smooth, enticing. She smiled slightly, wiggled at bit at the feel of my fingers, pinched my nips softly, shifted her hands to the small of my back and pulled me to her for a deep, lingering kiss.\n\nThe touch of her tongue on mine set off a rising, demanding clamour of excitement within me. Leaning down, my hands swept over her shoulders, down her back, clasped her bum, squeezed her to me.\n\nHer tongue floated over my lips, around my mouth, down to my jaw, my throat. I leaned back against the tiles, still cool despite the hot water and steam, tried to maintain my grasp on her shorter frame.\n\nMarcy pushed me back and, hand under one thigh, lifted my leg up. I squirmed happily as fingers from her other hand traced the length of my sex before dropping my leg.\n\n\"Marcy...\"\n\nShe looked back up at me, closed her eyes as water fell onto her face like a heavy rain. I bent down again, kissed her, felt the water cascade around my head and neck, felt soft lips draw mine in, nibbled, sucked gently.\n\nI felt her breasts shift against mine. Marcy giggled, louder now, pushed me back, stood tall and, cupping her breasts, held them up against mine, nipple to nipple in the rain. Her hands moved, tracing her own stiff buds around mine and I joined her in laughter. \n\nI leaned down again, my hand on her stomach, her abdomen. Marcy's face went surprisingly serious as my enquiring finger slipped between her legs. She dropped her boobs, lowered her mouth to my own bosom, sucked in a nipple and nipped it gently with her teeth. Water running over her face made her cough slightly. I groaned softly as she pulled away, pulling and stretching my nipple between her lips. I felt a fire burst out inside me, expand and grow - surging hot, demanding.\n\nShe groaned in return as my finger found her bud, circled, slid past to explore her cleft. She shivered as I delved deeper, finger twisting inside her opening, thumb on her clit.\n\n\"Stephanie!\" she gasped.\n\nI found myself panting as her talented tongue swept from one nipple to the other, heard a ragged moan deep in my chest as her hand clasped my mound, squeezing, dragging it and my labia below back and forth, a finger barely resting on my own pearl.\n\nHer head came up, streaming with water, and I covered it with my own, seeking a deeper kiss, a closer bond. Our tongues swept over each other like mating snakes.\n\nMarcy growled as my finger moved deeper, found her G-spot, pressing gently, pulling softly. Her belly began to shake against my wrist. Shuddering, her orgasm began. I could see her face change as the delight hit her; I yelped as her thumb pressed on my clit, drawing it up and down under its hood. My own orgasm hit me like an ocean of joy, shifting me, rolling me, sweeping over and over and over, wave after wave.\n\nThe two of us clung together, panting now. I fumbled for the water, turned it off. Her hands stroked my breasts and another orgasm hit me, softer but fuller. I sagged, might have fallen had the small girl not used her cheerleader-honed muscles to hold me up against the shower wall.\n\nIt faded, slowly. I opened my eyes to see her grinning up at me, wet hair plastered across her face and ears. \n\n\"Um, wow!\" she whispered, barely audible above the sounds of scattered waterdrops falling around our ankles.\n\n\"Wow yourself,\" I smiled, bending for a soft kiss. \"I never thought...\"\n\nShe giggled. \"Me neither, Steph. But, you know? I'm not complaining.\"\n\n\"No.\"\n\n\"No.\"\n\nWe dried each other off. One thing Tony insisted on having were great, big, fluffy towels.\n\n\"Do you have a hair drier?\"\n\n\"Yes.\"\n\nWe dried our hair, took a hairbrush into the kitchen. I put the kettle on while Marcy sat on a bench and went to work. A few minutes later, I put the teapot down on the table in front of us, purchased the brush from her with a small kiss and took over.\n\nBeing the only girl in my family, I'd never brushed another woman's hair before. It was fun, I thought. Also, I found in an odd way that I liked the sense of control it gave me. No, not power, certainly nothing dominating or pushy, but I was in charge, in this case, in charge of providing more pleasure to my friend.\n\nA full 100 strokes later, like my grandmother always stressed, her dark, bum-length tresses were shining, glistening in morning sunshine streaming through the wall of windows. I put the brush down, wondering where Tony was. I glanced at a clock -- no, not all that late. I would wait before investigating.\n\n\"My turn,\" Marcy said, taking the brush and nudging me to sit down. \n\nHer spare hand lifting from underneath, the brush moved slowly through my hair, over my neck, my shoulder, down my back. Then again, carefully, smoothly. I sighed with contentment, tried to sit up straight. When you think about it, there are few things in life as sensual as having one's hair brushed - there's a reason women love going to salons. I was however finding this even more enjoyable than when a skilled, professional stylist did it; a beautiful and bare Marcy raised it to an entirely different level.\n\nThe brush made a soft thump on the table as it was laid down. I smiled and leaned back into the arms coming around me, pulling me back into a soft hug.\n\nI started, for the arms were not Marcy's now. I felt Tony's beard brush my neck, felt his lips nuzzle my ear. His voice was soft, loving.\n\n\"Good morning, Stephanie.\"\n\nI turned my head up and back, pursed my lips and was not disappointed. Tony is one of the better kissers in the world and he put his all into this one.\n\n\"Good morning, sleepyhead! Did you get some rest?''\n\nDressed in his usual early-morning white cotton pants, he grinned, chuckled, stepped over to Marcy and lifted her, squealing happily, up into a gentle bearhug. Holding her off the ground, he kissed her face a dozen times before letting her down.\n\n\"I slept very well, thank you.\" He grinned again. \"I cannot for the life of me think why I might have been so sleepy.\"\n\nOur laughter was, I thought, a pretty good reply. \n\n+\n\nAfter breakfast, the normal routine would have been for Tony and me to spend Saturday morning doing homework. Today, I waited to see what he had in mind.\n\nHe looked outside, stretched. \"Have either of you checked the weather forecast?\"\n\nMy phone was close to hand. \"Sunny, clouding in the late afternoon, high... Oh, wow! High of 22 degrees!\"\n\n\"Unseasonably warm,\" he smiled. \"We'll see what it actually looks like later. Meanwhile, Stephanie, I have some homework to do and I think you do, too. Marcy, did you bring anything?\"\n\nHer head hung down for just a moment. \n\n\"No. But I left some of my paints here last time and I could work on that landscape you liked.\"\n\nTony smiled. He liked the view and the artist had talent.\n\n\"Or I could practise some cheerleader routines. Wanna help?\"\n\nI looked at Tony. Despite his white hair, he worked out regularly, had broad shoulders and immensely strong arms. Maybe he wasn't as young as Marcy's fellow cheerleaders, but he'd be strong enough for just about anything. Then I thought of the scars on his legs, of the sturdy cane by the front door, something he needed some cold days. \n\n\"Um, might not a good idea, sweetheart,\" he grinned. \"I'm not quite as... limber as I once was.\"\n\n\"I suppose,\" she smiled. She leaned up, kissed his cheek. \"But you do make up for it in many ways, sir.\"\n\n\"Do you have something you can do while Stephanie and I are studying?\"\n\n\"I'll paint, maybe. And I think my laptop is in my car. I'll be OK. I'll try to be quiet.\"\n\n\"Fine.\"\n\n+\n\nTony closed the lid of his laptop a couple of hours later. \n\n\"Enough,\" he said. \"I think I'm done with schoolwork for a bit.\" \n\nI wasn't about to argue. The reading assignment I'd been slogging through was dry as a mouthful of soda crackers. I closed the book, looked around and found Marcy curled up in an armchair with Pi in her lap. Her eyes were closed and I could see a pair of earbuds in her ears; her hands slid gently over the cat's fur as she swayed gently to some unknown tune from the laptop on the floor by her feet.\n\nI looked at Tony. He looked at the dreaming pixie, smiled, ran his fingers through my hair and pulled me in for a gentle hug.\n\n\"How's Stephanie?\"\n\n\"Good,\" I replied. \"Good. But what time is it?\"\n\nTony looked over my shoulder at a clock on the wall. \"Almost noon.\"\n\nHe turned, looked outside. The day was bright and sunny, with a few fluffy clouds drifting slowly by. \n\n\"A nice day,\" he said thoughtfully. \"It's still warm. Hmm. Would you two be interested in a picnic?\"\n\n\"This late in the year? Dressed like this?\" I ran my hand in a gesture over my naked body. \n\n\"Well, looking at the thermometer, it's warmer outside than in here and there's no wind that I can see. You should be perfectly warm. We won't be too far from here if it turns chilly.\"\n\nI looked outside. Why not? One last chance... \n\n\"I'll convince Marcy while you make lunch,\" I suggested.\n\n\"I was going to suggest that,\" he grinned, \"but wait a second.\"\n\nAll he wanted &mdash; typical Tony &mdash; was to walk around me, examine me, enjoy the sight. A hand swept a buttock, trailed over my hip and waist, came up to cup a breast as he leaned in for a loving kiss. \n\n\"There,\" he whispered. \"Thank you. I love you.\"\n\nI smiled back, leaned up for another kiss, a stronger, longer one. The hand on my boob squeezed softly and I rubbed my tummy against his groin. That Marcy was in the room, would see us two steps in front of her if she opened her eyes, no longer seemed to matter to me.\n\n\"And you, too, Tony. With all my heart.\"\n\n.\n\nMarcy opened her eyes, smiled at me when I knelt beside her, touched her arm. She took the earbuds out. \"Hi. Homework all finished?\"\n\n\"All we're going to do for now. Tony's packing a picnic lunch.\"\n\nHer eyes moved to examine the weather outside.\n\n\"Now?\" She looked at my bareness, then hers. \"We'll freeze!\"\n\nI pointed at the thermometer. \n\n\"It's really sunny and even warmer than it was supposed to be, Marce.\" \n\nI could see sudden reluctance in her eyes, something that had nothing to do with the season. Marcy had become accustomed to being nude at Tony's farm, used to his grey eyes constantly on her, examining, admiring. But even after last night, it was clear that the thought of being very far from her clothes still made her nervous.\n\nWell, it had been that way for me too at first. I tried to reassure her. \n\n\"We'll be nearby, on the farm.\"\n\nShe picked up Pi, pulled the cat into her, hugged her softly. I could see the gears going round in Marcy's head as Pi began to purr.\n\n\"It's just us here, Marce. The crops have all been harvested and there's no reason for anyone else to be around.\" I tried a reassuring smile.\n\nI was surprised when her hand stretched out to my throat, a finger lifting and running along under Tony's silver necklace. \n\n\"It's really pretty, Stephanie.\"\n\nHer eyes turned to mine.\n\n\"Thank you for all this.\" She waved her free hand around the room.\n\n\"You should thank Tony, dear.\"\n\n\"Did I hear somebody take my name in vain?\" his voice said from directly behind me.\n\nPi and I had a small competition to see who could best rub against his legs. He laughed, petted both of us, then stretched out a hand and helped me to my feet before turning to the small figure in the chair.\n\n\"Lunch is ready.\" He hefted a sizeable picnic basket. \"Bring your appetite.\"\n\nMarcy smiled cautiously. I could see the scene replaying in her mind, her agreement just hours before: Whatever pleases him...  \n\nI again smiled at her in encouragement, saw her mental shrug, saw her shoulders relax a bit. Marcy wasn't ready for that symbolic, dismissive taxi ride home just yet. She put on a brave smile and rose to her feet.\n\n\"Stephanie says a picnic?\"\n\n\"Yup. I know a good spot nearby; it should be nice and warm.\"\n\n\"No bugs?\" \n\n\"Not this late.\" \n\nHe looked at the two of us, added. \"You'll probably need shoes, though.\" \n\n+\n\nWhile it was certainly warm enough, the countryside looked much different than it had this summer, the fields barren now, the sugar beets which had filled them until a week ago gone to candy heaven. There were still patches of colour, stands of maple unwilling to surrender just yet, but most trees were bare and the countryside looked far more open than I was used to. I noticed the odd nervous glance from Marcy. I understood it; we were fairly exposed, more so than ever before.\n\n\"Trust him, hon,\" I whispered, as much to myself as to Marcy. Out of the corner of my eye, I saw her nod.\n\nMarcy and I walked side by side, the basket swinging between us, heavy with lunch. I could feel Tony's eyes on me, tingled with how good that felt. I ran a finger over the necklace, felt the weighty symbol of his generosity shift on my skin as I walked.\n\n\"Tony,\" Marcy called over her shoulder, \"Why are the girls doing all the heavy lifting while the big, strong boy only has to carry the blanket?\" I giggled loudly and her head turned to mine. I'd asked the same question my first time here and knew what was coming. I wondered how she would handle it.\n\n\"That,&hairsp; pretty lady, is so that I get to admire those two spectacular derri\u00e8res in front of me.\"\n\nMarcy almost missed a step. I thought her blush just about matched the one I'd had the first time he'd answered that question.\n\nTony's laughter joined mine and, a few seconds later, Marcy saw the point, joined in. Women are pretty, men like to look and our agreement played to both of those. \n\nTony, wearing sandals, a pair of casual slacks and a well-pressed linen shirt, looked like a model for a high-end clothing line. Marcy and I were together wearing one necklace and one ring more, one shirt and one pair of slacks less. I smiled at the warm sun on my shoulders, breasts and tummy, looked back at Tony and extended the smile for him, felt my heart quiver at his return grin. \n\nI stretched out my step, felt the flow of air on my sex, wondered at my initial shyness when first here. I looked at Marcy beside me, found myself admiring the sway of her breasts as she walked. At first it was just an appreciation of how pretty they were, firm, shapely, with delicious nipples. Then I remembered how those perky orbs had felt in my hands and smiled for a very different reason.\n\nI hadn't anticipated this, not at all, but I wasn't going to object. Not now.\n\n\"Around the woodlot, please.\" Tony's voice brought me out of my reverie. \"Take the left fork.\"\n\nI'd thought we were going back to Tony's special place, a clearing near the middle of the woodlot. Instead, we followed the remains of a collapsing, half-rotted split-rail fence, one perhaps dating back to pioneer days, woodlot on our right and fields on our left. \n\n\"Oh!\" Marcy's small cry of pleasure beat mine by a second as we came around a corner and saw what awaited our picnic.\n\nA new-mown hay field sloped gently down, leaving us atop a slight rise, a small pond or dugout at the bottom. The noon sun was high and warm, its balmy rays reflected off the water, warming the spot still more. Tony spread the blanket on a patch of grass by a major sugar maple tree, one still bright with leaves. On the other side of the pond, fields stretched away into forever. A few cows grazed quietly and, in the far, far distance, I could see a tiny green tractor pulling some sort of machinery as it circled a field.\n\nTony smiled. \"Warm enough for your two?\"\n\nI nodded. With the sun beaming down, it was very comfortable. I sat down on the blanket, pulled off my shoes and wiggled my toes at the sky with a sigh of contentment.\n\nMarcy joined me, shifted to let Tony sit down between us.\n\nHis hand came up my back, lay across my bare shoulder. I could sense his other arm was clasping Marcy. He hugged us to him, gently.\n\n\"Thank you for coming, ladies. It's a nice day, made better by your presence.\"\n\nTony's gratitude was seemed genuine as the pleasure I figured he was getting from his hand, now stroking my behind. I leaned my head on his shoulder, saw Marcy do the same. We sat that way for some minutes, admiring the peaceful scene.\n\nTony squeezed us both, dropped his arms. \n\n\"Time for lunch.\" \n\nLeaning forward, he opened the basket, set aside a couple of containers before pulling out a bottle of wine and a white serviette. Draping the latter over his left arm, he turned headwaiter solemn and bowed almost formally.\n\n\"If you would care, gentle ladies, to examine the menu, I would be pleased to arrange the beverages.\"",
        "Marcy giggled, started laying out the food Tony had packed - a good selection of fruit, cheese, a heavy loaf of artisanal bread and Italian pastries. There was a soft pop!&hairsp; as Tony eased the cork out of the bottle.\n\nI discovered Tony had actually had us carrying cutlery, real plates and wine glasses all this way. OK, heavy, but the view in front of us made it worthwhile, truly romantic. I forgave him.\n\nMouth full of yummy, I pointed at some farm buildings maybe two or three hundred yards off, swallowed. \n\n\"Whose house is that, Tony?\"\n\nHe looked where I was pointing. \"That's old Max Gilbert's place. Good neighbour.\"\n\nI saw Marcy start. I made a guess, spoke.\n\n\"Might he be looking, Tony?\"\n\nThe instant blush on Marcy's face told me I had been right. Having an al fresco&hairsp; meal on a wide-open hillside with her clothes half an hour away and somebody maybe watching was waaay&hairsp; outside her comfort zone. I smiled inside as she too casually covered her breasts with an arm. \n\nHer blush deepened as Tony chuckled. He'd obviously noticed her nervousness.\n\n\"I wouldn't worry too much about old Max, Marcy. He's very old and half-blind anyway. Clara died maybe 10 years ago and the only way he can still live there alone is because his daughter-in-law comes by every other day to clean and make him eat something aside from hot dogs and canned beans.\"\n\nI could sense Marcy relaxing, just slightly.\n\n\"Are you sure?\" she whispered.\n\n\"I was at his 87th birthday party two months ago, so, yes, I'm pretty sure he's old. And he's legally blind, glasses like Coke bottles and he lost his licence years ago. And I don't see Monica's car in his driveway, so it's a pretty good bet that he's alone right now.\"\n\nShe thought for a second. I could see the blush fade.\n\n\"87 years old and all by himself. That's so sad. What does he do with himself?\"\n\n\"Plays music -- the guy has a whole room full of old LPs. He was a very successful horse breeder years ago and spends a lot of time poring through his stock records with a magnifying glass about the size of a dinner plate. Monica and Bud keep trying to convince him to move into town. He's got the money, but he's as stubborn as a mule, likes the quiet.\"\n\nIt was indeed quiet, too. Lampton County generally is, outside the towns. Aside from the cattle and the far-distant tractor, it felt like we were the only creatures on the planet.\n\nTony wiped his mouth with his napkin, knelt in front of us. He produced one of the two reserved containers, took off the lid. The strawberries inside looked fresh; I thought I could smell them. Where the man had found such good fruit at this time of the year was a mystery.\n\nNext was a squat, wide-mouthed thermos bottle. A delicious smell drifted under my nose.\n\n\"Tony, is that...?\"\n\nSmiling broadly, holding two strawberries by their leaves, he dipped first one, then a second into the thermos, pulling them out covered in melted chocolate.\n\n\"Tony!\" Marcy squealed happily. The girl loved strawberries almost as much as she liked chocolate. Put together, Tony had hit a bases-loaded home run.\n\nSmiling, he held a berry in front of each of us. I leaned in, bit gently and felt the taste explode inside my mouth, contentment sweeping through me. The boy might have his faults on occasion, but he certainly knew how to feed a girl.\n\n\"Mmm, thank you, sir. This is such a delightful surprise.\"\n\n\"My pleasure, ma'am\" Another berry was held to my mouth.\n\nYeah, OK, I'm weak. \n\nI ate it.\n\nAnd a third.\n\n\"Tony!\" I protested as a fourth appeared in front of me. \"This isn't fair. Don't you want any?\"\n\nMarcy nodded in agreement. Smiling, she took a strawberry herself, dipped it into the warmth of the thermos bottle, emerged with chocolate dripping from the scarlet fruit. Tony jerked his leg to one side as a drop fell, barely missing his trouser leg.\n\n\"Um, Marcy ...\" he started.\n\n\"He's right, Marce. Those are really nice clothes and we shouldn't risk staining them.\"\n\nShe shot me a quick look and caught my eye. She set the thermos down carefully, well out of the way, and jumped as soon as I did. The two of us knocked him off his knees and onto his back. Tony was laughing in an instant. That redoubled when I went for his short ribs.\n\nTony was massively strong, all man and I loved every inch of him. I had, on the other hand, discovered his Achilles heel. Mama diRossi's little boy was insanely ticklish and in seconds the two of us had him gasping and laughing his head off, begging for mercy.\n\nOK, we were supposed to do what 'pleased' Tony, but tell me what normal man wouldn't be seriously pleased at being undressed by a squirmy pair of gorgeous, naked young women? Once we had him bare as an egg and his clothes out of the way, I pointed at the thermos.. \n\nAs if nothing had happened, Marcy dipped a strawberry into the bottle and held it up to Tony's mouth.\n\nI could hear the crunch as his teeth bit into the fruit, watched happily as he chewed, swallowed, his tongue licking his lips. \n\nChocolate and berries on the blanket between us, we took turns feeding each other. The day remained warm as the sun gradually shifted.\n\nI dipped one of the last berries. A drop of chocolate fell as I held it out to Marcy, landing....\n\nYes, of course it did. \n\nMeme City, sure, but Tony and I howled with laughter as we watched chocolate oozing its way over the flawless skin of a perfectly-shaped boob, solidifying around a pink nipple. \n\nI grinned at Tony. \n\n\"I'd flip you for the privilege, sir, but I seem to have left my change purse behind.\"\n\nHe chuckled, held his hands up in mock surrender.\n\n\"I think I left my wallet at home, officer. But I think there's a way to settle this fairly.\" \n\nA long finger probed the bottle, emerged with chocolate on its tip. He held it up for our inspection. We both giggled as his finger stretched out, left a large brown fingerprint on Marcy's other nipple.\n\nMarcy laughed, squirmed and half pulled away as he swirled it around her bud, but her heart wasn't really into escape.\n\nI needed a moment to wrap my hair up in a loose knot to keep it out of the sticky mess and Tony beat me to it. Lips already fixed on Marcy's chocolatey nip, he shifted a little to give me better access once I leaned in. \n\nMarcy's head was back, eyes closed, an arm holding Tony's head to her breast. \n\nUnder its chocolate coating, her nipple was taut, firm; my tongue swirled around it, my lips sucked on it, my teeth nibbled it gently. A second arm came behind my neck, pulled me in.\n\nTony's hand moved over Marcy's petite form, soft skin flowing under strong, tender fingers, I could hear her breathing speed up, could smell her arousal over the chocolate.\n\nHer lithe tummy shimmied, quivered as Tony's hand moved over her stomach, caressed her thighs, drifted between her legs. \n\nI caught her nipple between my lips; it stretched out as I slowly pulled my head back. Marcy groaned happily as her swollen bud popped out from between my lips. I covered her entire boob with my hand, squeezed gently. Her eyes were closed as she drifted in a world of happy sensations. \n\nI continued to gently tease her boob, moved my lips to hers; my tongue danced inside her mouth. Still worshiping her other boob with his mouth, Tony's hand continuing its slow, lingering caresses between her thighs. The girl gasped; she began to shake, head to foot. \n\nHer mouth pulled away from mine with a long shriek of joy. \n\nI leaned forward, pulled her head onto my shoulder. I watched her breasts rise and fall as she struggled to find her breath.\n\n\"How was that, now?\" I whispered. Silent, still shaking, her chest heaving, her arm came around me, pulled me into a strong, happy hug.\n\nAfter a long minute, her eyes opened and she turned to kiss me. Soft, happy, gentle, it gradually turned hotter, more focused. She took a deep breath, came back to earth. I could see her eye Tony briefly.\n\n\"I think he wants a show,\" Marcy whispered to in my ear, giggling.\n\nI turned my eyes for a moment, saw him watching us, cupping his heavy scrotum with one hand while his other hand lightly stroked his looming erection. As his hand reached the tip, his thumb circled his engorged mushroom before dropping back to his abdomen to start over.\n\nI giggled back. \"Any ideas?\" I whispered.\n\n\"Improv time?\" \n\nHer hands swept over me -- face, shoulders, back, boobs, tummy, bum. Her mouth ground into mine one moment, then, breaking away, her tongue danced over my face, tongue-tip flicking my ears, my jaw, my eyes, then she again ground lips into lips.\n\nI tried my best to reciprocate, felt my already-high arousal soar at each touch of her fingers, each lick, each squeeze.\n\nMarcy broke away, put both hands on my shoulders, held me off. We turned together to see a wide-eyed Tony, mouth partly open, his hand now motionless on his sex.\n\nMarcy gave me a hard shove on my chest. I started to fall back to the blanket, felt her hand catch my arm and pull me down on top of her.\n\nThe girl was both strong and agile. I'd expected to land facing her, with more kisses on the menu. Instead, we landed in soixante neuf&hairsp; and, for the first time, I was inches away from another woman's flower. I hesitated, wondering. I was awed by its beauty -- complex pink furls and folds, glistening in the afternoon sun. Her strange-familiar marine odor filled my nostrils. I found it deeply stirring, exciting and bent towards her with the tip of my tongue.\n\nI jumped a little at the touch of a slim finger on my own pussy. Gentle, but tentative, uncertain, it traced its way along labia slick with my own dew, swollen with my own arousal. \n\nI bent in, broadened my tongue strokes, let my tongue tip probe deeper between her lips, found her hooded pearl, flicked it with my tongue, again and again. She tasted tart, wholesome, infinitely delightful.\n\nThe girl's thighs stiffened under my arms. Her cry was echoed with one of my own as she inserted first one, then a second, finger into me, turning, exploring, while at the same time her tongue circled my clit, around and around.\n\nI was close. I knew that. I tried to see what Tony was doing, but my world was filled with firm thighs, with Marcy's mouth and hands, with her sweet, exhilarating sex under my mouth.\n\nThe girl's body began to shake, shiver. Her cries had been replaced with deep moans as her head ground into my pussy. I gasped for air, mewed like a kitten. And again.\n\nMarcy paused, shifted a little. I stopped too, wondering, then felt strong hands on my hips and a wonderful, blunt, soft-hard probing of my cleft.\n\nWith one low growl, Tony slid his full length into me, waited a second and began to move swiftly in and out of my delighted slipperiness. I bent again to the sweet thing under my mouth, licking, munching, sucking. My face was smeared with Marcy; my head filled with her nectar.\n\nI cried out in sharp delight when I felt a tongue working along my stretched inner lips, teasing and playing both them and the hardness sliding in and out between them. Never before, never in any way, had I been so stimulated. I tried to reciprocate, dove further into Marcy's sex, swirled and kissed and lapped, squeezing Tony's sliding shaft with my inner strength. Then Marcy moved an arm, found my nipple.\n\n.\n\nTen thousand tropical birds taking flight, a freight-train's roar of amazement and ecstasy, a crescendo of colours, triumphal brass, cheering crowds and I soared further and further as Marcy shuddered, cried out below me, Tony's continuing thrusts sending me deeper and higher, endless and echoing...\n\n+\n\nThe sun had shifted when I awoke. Tony's rolled-up clothes had been placed under my head as a pillow. Tony and Marcy were sitting together, arms around each other's waist and her head on his shoulder.\n\nI lay watching them, my lover and my best friend, new lovers and still best friends. Sensing I was awake, they turned towards me. I found my heart swelling with the look of love and happiness in their eyes.\n\nI had nothing to fear; there could only be warmth and trust and love ahead.\n\nTony bent over me, lips ready with a loving kiss.\n\nI rose to meet him, confident now. Love shared would still be love, love expanded, love shared.\n\nTomorrow would be even better.\n\n<center>+</center>\n\n<center> Thanks for reading.<br>If you enjoyed this story, please remember to vote or comment.</center>\n\n<center>+ + + + +</center>\n\nFor those who have enjoyed Stephanie's adventures to date, an apology for the fact that there is not to be a Chapter 8. As has been so wisely said, to every thing there is a season, and a time to every purpose under heaven. It is, sadly, time for this yarn to come to an end.\n\nIf there was to have been a Chapter 8, it would probably have ended &mdash; might even have begun &mdash; something like this:\n\nI smiled at the gentle, ethereal sound of an Aeolian harp drifting in the warm spring breeze. Motes of sunlight danced across the leafy cathedral ceiling above us, darting and shimmering like wings of the butterflies over a carpet of forest flowers. From somewhere a dove cooed softly. \n\n\"Are you ready, Steph?\" Marcy asked softly, sliding her arm into mine. Her smile was an amazing mix of simple shared happiness and pragmatic, got-your-six emotional support. \n\nI took a deep breath, held out my left hand to reassure myself of Tony's ring on my finger. I ran my thumb over the diamond, adjusted his necklace slightly about my neck and nodded, utterly at peace. \n\n\"I'm ready,\" I responded. \"Oh, yes.\" \n\nMarcy took my hand, started to step off, but I stood still, clutching her own, turning her back towards me. \n\n\"Have I said thank you, Marcy?\" \n\nHer smile grew even more brilliant and she pulled me in for a tender hug, bare breast to bare breast, bare arms around bare waists. \n\nThe hug grew stronger for a moment. \"I should be thanking you, Stephanie!\" \n\nHer hands slipped off my waist and one of them gave my bum a soft slap. \"But it's time, girl. Mustn't be late.\" \n\nI leaned down and, careful of our makeup, kissed her carefully. Her return kiss started soft, grew warmer, set my heart pounding with love, support - and promise. Breathing heavily, she pulled away, those mischievous dark eyes sweeping over me in a final inspection. \n\n\"Oops! We missed something!\" she giggled.  \n\nI raised an eyebrow. \n\nGrinning, the girl bent to one of my breasts and gently seized my nipple between her white teeth. She flicked it rapidly with the tip of her tongue, softly fondled and caressed both my boobs with her hands. \n\nHer mouth and hands jumped back and forth from one breast to the other, teasing and playing, filling me with fire and expectation. I caught my breath at the joy of it.\n\nLaughing, Marcy backed away, the sparkle in her eyes matching that of the diamond on her own finger. I could feel ripples all the way to my toes as she cupped my breasts, lifted them for my inspection, ran her thumbs softly over marble-hard nipples. \n\n\"There now!\" she laughed happily. \"There's the Stephanie he dreams of at night!\" \n\nWith that, she took my hand and, in best maid of honour fashion, escorted me down the peaceful, tree-shaded country lane to where Tony stood waiting, Pi curling around his ankles and another ring in the vest pocket of his morning suit.\n\n<center>+</center>\n\n<center>Thanks again to one and all for the support and encouragement over the past year! <br>It really helped. \n\nOh, and special thanks to H for those kind thoughts. In the end, they made this so much better. You, too.</center>"
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "sugar daddy",
        "nudity",
        "cmnf",
        "threesome",
        "outdoor nudity",
        "outdoor threesome",
        "picnic sex",
        "lesbian",
        "cunnilingus",
        "shower"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/past-present-and-future-ch-07"
}