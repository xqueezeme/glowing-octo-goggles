{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 12",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\n\"Did you bring it?\"\n\nNatalie smiled. \"Yes, I did. It's in the car. I'll get it for you after we're done shopping.\" Gwen had waited patiently for her sister-in-law to hand the contract over, almost fifteen minutes after they had met in the mall's center court, but had begun to worry it had been forgotten. She had asked for Adam to courier it over, not wanting to take a chance on being spotted by her father if she stopped by the firm to pick it up, but Natalie had volunteered to deliver it in person. \"C'mon, we both need dresses for the dinner next week,\" she said, leading Gwen away from the central seating area. \n\n\"I'm sure I've already got something,\" she answered, following the blonde nonetheless. Something safe and proper, she thought sourly, not that the idea appealed to her. Gwen's parents were going to be there, and her mother would be quick to judge should her daughter's attire be anything less than respectable. The Currans had appearances to keep up, and if her daughter-in-law or grandchildren were likely to be found lacking, Gwen would not be. \n\n\"There are little black dresses that don't look slutty,\" Natalie said mischievously. \n\n\"To you maybe, but to my mother, they all show too much skin. Even the ones I already have.\" Gwen replied with a shake of her head. \n\n\"A circus tent shows too much skin for her,\" the blonde said with a laugh. \"She'll just have to deal with it. So, you're going to do it?\" There was a look of confusion on her sister-in-law's face. \"The modeling? The contract?\" she prodded.\n\n\"I'm not sure, maybe,\" Gwen fibbed. Her mind was made up, she reluctantly admitted, Tim's enthusiastic go-ahead had made the decision easier, but there was still time to say no, the contract wasn't signed and delivered yet...\"do you think I should?\"\n\nNatalie smiled. \"Remember what Liz and I posed for? This sounds tame by comparison. It IS tame, by comparison, right? Nothing you're not telling me? Nothing kinkier?\"\n\nGwen looked around nervously, checking to see how close the other shoppers were. \"No!\" she exclaimed, adding in a softer tone, \"at least, it didn't sound like that. Mrs. Danning said it would be artistic.\" \n\n\"Then yeah, do it. Sounds like fun while making a rich and powerful friend.\" \n\n\"I seriously doubt she thinks of me as a friend,\" Gwen replied truthfully.\n\n\"Here,\" her sister-in-law said, pulling her into a women's clothing store. She selected several dresses and a couple of pairs of heels, presenting them to the clerk at dressing room desk. \"Be right back,\" Natalie said with a mischievous grin, disappearing down the corridor. She returned a few moments later, now dressed in one of the pair of heels and a red dress that, while it seemed a respectable length, at least for Natalie, featured a V-neck that put a significant amount of the cleft between her breasts on display. The way they bounced as she returned told Gwen her sister-in-law had taken off her bra to try this on, and her mounds threatened to spill out the cut between them.\n\n\"It's, uhh, pretty low cut,\" Gwen told her. \"You're going to have to be careful not to fall out of it, even with a good bra. Might be embarrassing, and even if you don't, my mother will definitely not approve.\"\n\n\"Nuts to your mother,\" Natalie said with a smile. \"Your brother is the only Curran I'm trying to impress. Well, him and you. Whattya say? Would you like to see them get loose?\" She shook her torso suggestively, her breasts threatening to do just that.\n\n\"Stop that,\" Gwen said, looking around. \"What if someone sees?\"\n\n\"What if?\" Natalie took a step back into the corridor, out of sight from the rest of the shop, and shook again. On cue, first one breast, then the other, escaped their restraint, the dress sliding under and around the swaying mounds to push them out even further. \n\n\"You're crazy,\" Gwen said with a laugh, and the blonde retreated to the dressing room. She returned a moment later, this time in the other set of heels and a black dress that while shorter than the first, was not as low cut and managed to do a better job of containing her breasts, although there was still a decent amount of cleavage on display. \"I like that one better,\" Gwen told her. \"I like your hair color against the black.\"\n\n\"More boring,\" Natalie sighed, \"but I think you're right. I'll just have to find other ways of getting Adam's attention. Speaking of which, come with me please.\" \n\nGwen's expression turned to quizzical as she followed the woman to her dressing cubicle, ducking inside after Natalie. Her sister-in-law casually pulled the dress over her head, confirming her missing bra and panties, then turned her back to her sister-in-law. \"Can you take a picture of my heels?\"\n\n\"What for?\"\n\n\"I want to see what they look like. Please? Be sure to get my whole body in the shot.\"\n\n\"Your whole body?\"\n\n\"Yeah, I like to think heels make my legs and butt look less flabby, even if it's not true.\" \n\n\"You're not flabby...\"\n\n\"And I don't have a tight little booty like yours, either.\"\n\nGwen sighed. \"Alright, where's your phone?\"\n\n\"Use yours.\" \n\n\"Really?\"\n\n\"Really.\"\n\nShe reached into her purse and aimed. Natalie had affected a bit of a pose, one hand on a jutting hip while she looked over her shoulder, her hair partially obscuring her \"come and get it\" look. \"Take a few to make sure you got a good one.\" \n\n\"Let me see,\" Natalie asked after Gwen had announced her success.\n\n\"Ooh, that's a good one.\" The blonde brought up the keyboard and started typing. \n\nWhat are you doing?\"\n\n\"Sending it to Adam to see what he thinks.\"\n\n\"But it's my phone!\" \n\nNatalie laughed. \"Are you concerned text and data charges may apply?\" \n\n\"No, but it's my phone,\" her sister-in-law repeated. \"Your...\" she lowered her voice, \"naked pictures, on my phone.\" \n\n\"He knows you've seen me this way.\" Message sent, she returned the device. \"Okay, your turn. Strip down and get in the other pair of heels. I'll get a shot or two of you.\" \n\n\"Me?\"\n\n\"You. Tim deserves something nice, don't you think?\" \n\nGwen hesitated. \"Are you sure about this?\"\n\n\"Yup. Out of your clothes and into the shoes lady, or else I keep asking louder and louder until everyone in the mall can hear me.\"\n\nGwen shook her head and began unbuttoning her blouse. \"I'm not sure about this...\" She stopped after reaching her underwear. \n\n\"Everything,\" Natalie insisted. Gwen rolled her eyes and finished undressing, stepping into the shoes. \"These are too big,\" she insisted.\n\n\"You're not going dancing in 'em, just stand there and turn your ass to me.\" \n\n\"Don't you need my phone?\"\n\n\"I've got mine...pose pretty, you supermodel you.\" Gwen imitated Natalie's head turn, looking back over her shoulder, bowing her head to at least hide some of her features as her hair was tied back in a ponytail. \"...and, got it. God, I wish I had an ass and calves like yours.\" She stood there while her sister-in-law quickly flipped through the results, finally settling on one and beginning to type. \n\n\"You're only sending that to Tim, right? And then you'll erase them all?\"\n\n\"Why? Want me to send one to Liz? Or Adam?\" \n\n\"No! Please don't!\" Liz would be bad, her brother, worse. \n\n\"Relax, just Tim, and then erased.\" She hit send and turned the phone around so Gwen could see the results. The Lady was horrified, the Slut pleased. She was forced to admit, they weren't that bad...you could barely tell who it was.\n\n***\n\nTim's truck was the second to arrive back at the shop that evening. Gwen was at her desk, nervously awaiting his return, both excited and fearful as to what his reaction might be. The excitement of what she had done in the dressing room had made her feel the need for her vibrator upon her return home \"to take the edge off\", but she still had not gotten a response from Tim. Had he even seen it yet? What if he was upset it had come from Natalie? What if somebody else had seen them because he didn't know what she was sending? What if somebody did see them, the Slut purred? Besides, it came from somebody else's phone\u2014they probably wouldn't even know it's you. Surprisingly, this possibility caused a tinge of disappointment.\n\n\"Good day?\" she asked after descending the stairs and chastely kissing his cheek.\n\n\"Good day,\" he said with a disarming smile before bending in to whisper in her ear. \"I got distracted this afternoon. Lucky I didn't hurt myself.\"\n\n\"Sorry,\" she said with a hint of a smile. \"It was Natalie's idea.\"\n\nHis own smile remained. \"It was Natalie's phone, too.\" And then he was off, supervising the unloading and reprovisioning of the trucks. \n\nShe was at her desk, sorting the collected invoices and requisition forms, when Tim trudged up the stairs after seeing the last employee off, each step sounding like an effort. \n\n\"You must be tired,\" Gwen said, glancing up from the stack of papers at the head bobbing up above the landing. \n\n\"Long week,\" he admitted. \"Nice pick me up this afternoon, though. Better than coffee.\" \n\n\"So it was alright she sent it?\" \n\nHe chuckled. \"Better than alright. But it was a surprise, coming from Natalie. I spent all afternoon wondering what you two had been up to.\" He gently pulled her to her feet and to the side of the desk. \"I was also thinking about getting to see the real thing too, after I get cleaned up...\" he began, leaning in to kiss her. \n\nGwen smelled sweat, must and PVC cement, the smell of her husband. She stepped back and reached for the buttons on her shirt for the third time that day. \"Would you like to see now?\"\n\nTim held his hands up. \"Maybe just look and not touch for now. I'm kinda dirty, see?\"\n\n\"That's alright,\" she said, continuing to undress. \"We can both clean up after.\" She kicked off her shoes then shimmied out of her jeans and underwear, standing naked before her husband. \"Is this what you wanted to see?\" \n\n\"Yeah, that, and,\" he reached for her, firmly yet gently positioning her against the side of her desk, facing away from him, \"this.\" Tim caressed her smooth flank, running his rough palm over her left cheek, admiring. Unbidden, Gwen bent forward, resting her hands on the worn wood, presenting her rear end to him. He took his time, looking her over, appreciating what was being offered to him, stroking here, caressing there while she looked ahead and allowed his close inspection. He slowly sank to his knees with a contented groan to plant a light kiss on one cheek, then the other. His tongue worked lower, looking to find her most intimate spot, and Gwen thrust herself out further to help him. His tongue touched her lips, tasting her wetness and adding to it. Out of the corner of her eye she saw him slowly get to his feet and heard the sound of his belt buckle being undone, the soft swish of fabric as his pants dropped about his ankles. He shuffled forward, his erection bumping against her opening, once, twice, as if testing for the right entry, and then split her open. Gwen wiggled her hips in welcome and thrust back. Greasy fingers grasped her by the hips and pulled, leaving dirty stripes on her lightly tanned skin. Tim took her gently yet it was clear to both her was in control, the woman impaled on him happily allowing him to take until he emptied himself inside her. After a shower and dinner, they satisfied each other again before sleep. \n\n***\n\nEven in the shade of the tree-lined trail the air was heavy and humid, the weight of it seeming to muffle the noise of the forest and the hooves thudding up the dirt path. Both riders had lapsed into comfortable silence after their hellos when Cricket had arrived earlier that morning, lost in their thoughts they had saddled their mounts and then as their horses plodded up the first rise. \n\n\"I had a drink with a guy last night,\" Cricket softly volunteered, glancing over at her friend.\n\nThe news shook Gwen out of her reverie. \"You had a date? Really? Good for you! Why didn't you tell me?\"\n\n\"Well, I'm not sure it was an official date...there's this guy in Mortgages, he asked me if I wanted to go out for a drink after work yesterday afternoon.\"\n\n\"Is he nice? Did you have a good time?\"\n\nCricket grimaced, looked down at Marvin's neck, and shook her head. \"He's got a reputation as a ladies' man...the rumor is he's been with a lot of the women in the office, even some of the married ones. I was going to say no because I was pretty sure he just wanted a one-night stand, but then I got this crazy idea that I did too, and I could get it out of the way.\"\n\n\"Get what out of the way?\"\n\nHer friend looked down at the path beneath her. \"You know...my first post-marital sex. With a guy, I mean,\" she quickly added. \n\nGwen smiled in understanding. \"So, how was it?\" \n\nThe young woman shook her head. \"It didn't get that far\u2014I got cold feet. He was pretty full of himself, and the more he talked the more I got the impression he thought I owed him for the drink, so I don't think he was too happy when I didn't go home with him. I couldn't go through with it\u2014definitely not with him, maybe not with anyone. It was a dumb idea.\" \n\n\"Oh. Well, I don't think it was dumb, but it sounds like you made the right choice, then. That's not something you have to rush into. There are plenty of other men...\"\n\n\"I guess,\" Cricket sighed. \"I think I may be ready, but not that way. I want it to be the right guy, somebody safe. I don't want a relationship necessarily, at least not yet, but I do at least want to maybe be held after, maybe even be asked to stay the night. I always like it when you and I do that...after. I just didn't get the feeling he was the type for that.\" \n\n\"It's nice when you have someone...after,\" Gwen agreed. \"I always feel bad about going back to Tim after you and I...I get someone to hold and to hold me and I feel bad that you don't.\"\n\nIt was the young woman's turn to laugh. \"What I do get is still more frequent and far more enjoyable than when I was married.\"\n\nThey rode late into the afternoon, returning in time for a quick swim before dinner. Tim finished up his work in the shop to join them in the pool, the trio slowly but surely becoming accustomed to their shared nakedness. There was an unspoken requirement for at least shorts and t-shirts during dinner, but Tim couldn't help but notice neither woman had felt the need for a bra. He also couldn't help but wonder if they had omitted panties as well... \n\nThey sat on the deck after, enjoying the warm evening as the sun sank low in the sky, the mugginess remaining as the shadows grew long. The chirp of the business phone interrupted their quiet conversation, and Tim put a hand on Gwen's shoulder while rising from his chair. \"I got it.\" \n\nHe disappeared into the house and was gone for some time, finally returning in a Nelson Plumbing t-shirt and work pants. He dropped his boots on the wooden deck with a thud and sat to put them on. \"Gotta go,\" he grumbled. \"Backed up toilet in a one-bathroom house.\"\n\n\"Think you'll be long?\"\n\nHe smiled. \"Don't wait up.\" \n\nGwen returned his smile. \"Don't be out all night. Paperwork,\" she reminded him needlessly. He rolled his eyes and grunted, then rose, kissed her, and ambled across the yard to his truck. The women watched him go, slowly emptying the shared bottle of wine while the multicolored sunset beyond the trees gave way to darkness. The night was quiet, still enough to hear the horses occasionally shaking off a biting insect in the paddock. They sat there until bedtime in an easy silence, enjoying the cooling air and each other's presence. \"Waiting up for Tim?\" Cricket finally asked, her soft, almost childlike voice loud in the stillness as she rose and collected her empty glass. \n\n\"He told me not to. Going to bed?\"\n\n\"After I tuck in the horses.\" \n\nGwen rose, collecting the bottle and her own glass. \"Let me help.\" \n\nThe chores went quickly with two sets of hands, and Cricket said her goodnight back in the kitchen, hugging her friend. Gwen looked at her contemplatively. \"Just me in my bed,\" she offered. \"Want to share?\"\n\n\"Just you for now,\" Cricket said with a shy smile. \"Are you sure you don't mind? I'll go back to my own when Tim comes home.\"\n\n\"Let's see what happens.\" They slipped under a thin blanket and crisp cotton sheet, their naked embrace remaining innocent for some time, just enjoying the soft warmth each held. Slowly, the feelings of well-being turned into arousal. Lips met and hands began to caress, their kisses becoming more passionate, their touch moving to more intimate areas. \n\nThe soft drone of the central air conditioning did not hide the sound of a truck engine pulling into the driveway from ears long accustomed to listening for it. Cricket was not as sure, breaking their kiss and looking at Gwen questioningly. \"Is that Tim?\" \n\n\"I think so, yes.\" \n\nThe young woman hurriedly flipped back the cover. \"Well, I'll see you in the morning, then\u2014\"\n\nGwen gently stopped her. \"Don't. Stay here. There's room.\"\n\nCricket looked back at her friend, wondering if this was some sort of joke\u2014or test. \"R-really? Are you sure? What about Tim?\"\n\n\"I'm sure,\" Gwen said with a gentle smile. \"Unless you'd rather not...\"\n\nCricket glanced nervously at the open bedroom door, expecting him to walk through it any second now. \"Are you sure?\" She repeated with more urgency.\n\n\"I am if you are.\" The young woman decided quickly, flopping back and pulling the blanket up to her neck, wide eyes peeking over the top and staring at the doorway. Gwen sat against the headboard with knees drawn up against her chest, the sheet covering them, listening for the sound of her husband's boots on the deck. She heard them, then the sound of the kitchen door opening and softly closing, followed by two soft thuds of boots being dropped on the mud mat. There were stocking-padded footsteps and the light from the kitchen was partially blocked by the body coming down the hallway. \n\n\"Everything go okay?\" Gwen asked softly.\n\n\"Yeah,\" he replied, pulling his shirt over his head as he entered the darkened room. \"I can never get over how much fun a three-year old can have flushing stuff down a toilet. I'm ready for bed,\" he told her, putting his phone on the dresser behind him before turning back. \"Just want to shower f\u2014\" It was dark, but there was enough light to see his wife sitting in the middle of the bed and the outline of a body under the covers beside her, two faces, one outwardly calm and the other wide-eyed, looking back at him. \"Oh, uh, sorry, uh, Cricket, didn't realize you were in here. I'll, uhh, go shower in the other bathroom.\"\n\n\"Don't be silly,\" Gwen said with a gentle laugh. \"Go take your shower, then come to bed. There's plenty of room next to me.\" \n\nHe looked at his wife doubtfully. \"You sure?\"\n\n\"Yes,\" she answered with more confidence than she felt. \"Go take your shower.\" \n\nTim hesitated, torn between the door to the left and the one to the right before choosing the master bath, averting his eyes from the bed and its occupants. He hurried through his shower, distractedly washing up while his mind raced. What was Gwen up to? A threesome? No way in Hell! Maybe she's just making so Cricket doesn't have to stand outside the room when we screw. That thought was enough to make the blood surge to his cock. Easy, he reminded himself. It could be she's just letting her sleep with us, as in, just sleep. ",
        "Tim dried off with no clearer idea of what he should or shouldn't do. He'd get in bed, but after that, what? Whatever it was, it had to be Gwen's idea\u2014he'd follow her lead only if he had no doubts as to what she wanted. If it was just sleep, then it was just sleep, but he wasn't going to try and make this something it might not be. \n\nEven what to wear was an issue. Did they have anything on under the covers? He had no clue, and didn't want to seem like he was being cocky\u2014bad choice of words, he decided\u2014if he was the only one naked, particularly with his length already getting up and have a look around. In the end he settled on his boxers; not much else in the bathroom suitable for sleeping in, anyways. \n\n\"You're sure this is okay?\" Cricket repeated in a nervous whisper once the water started running. \n\n\"It's fine. I know this seems unusual and it's alright if you go back to your own bed, but I just thought you might want a warm body to sleep next to tonight. I'm not a man, but hopefully I'll do?\"\n\n\"You'll do fine,\" the young woman giggled, then turned serious. \"Is that all we're going to do?\"\n\nWould it be bother you if it wasn't?\"\n\n\"I guess not...no, it wouldn't.\"\n\n\"Then let's just see what happens.\"\n\nCricket lay at attention under the thin sheet and blanket, listening for the sound of the shower door. Gwen was listening too, forcing a casual attitude but a bundle of nerves inside, openly encouraging the Lady to steer her in another direction. She had given this plenty of thought, had even when she has pleasured herself, but questioned her choices now that it was so close to coming to be. It wasn't that different than Cricket watching them, Gwen assured herself, and Tim really seems to want this...still, it was both decadent and dangerous and she was reluctant to admit that was what made it so appealing to think about in the first place. She wondered if she would feel the same way after.\n\nTim appeared in the doorway, the bathroom light he had forgotten to turn off making everyone a bit more visible. Gwen flipped back the blanket covering the open side of the bed and Tim hurried to the invitation while Cricket gawked at the bouncing tent in the front of his shorts. He could see and feel his wife's nude body as he slid under and waited, unsure what to do next. \"Welcome home,\" she said, rolling to her side and kissing him. \"Are you tired?\" \n\nTired? No, definitely not tired. \"Uhh, not really, why?\" \n\n\"Well...Cricket and I were just starting to...you know, when you came home. Would you mind if we finished? I promise to take care of you after. If you want, she and I could go to her room instead...\"\n\n\"No, no, you're fine,\" he hurriedly assured her. \"It's your bed, too. Unless you wanted privacy. I could go watch TV or something.\"\n\nShe rolled to her other side and faced her friend. \"Is it alright if Tim stays?\" \n\n\"Uhh, yeah, it's his bed, too.\" \n\n\"Good.\" Gwen pushed the cover down to her feet then kicked it the rest of the way off, revealing two naked bodies and Tim's full boxers. \"It's a warm night. I don't think we'll need these.\" \n\nCricket fought the urge to grab the blanket and hide under it, reminding herself that Tim had seen her naked before. Gwen's soft kiss and hand on her hip had a distracting effect, and she returned the attention. \n\nTim rolled to his side, openly gawking as the two women embraced, kissed and caressed. The bedroom talk he had shared with Gwen paled in comparison to watching the real thing but he had no intention of laying a finger\u2014or anything else\u2014on either one of them without express written permission. But what about himself? His cock ached, his precum already spreading a dark wet spot on the front of his grey shorts. In his fantasies he had proudly stroked it for them, showing off what he had between his legs. He tentatively slipped his fingers under the waistband, gently tickling the tip of the slick head, alert for any sort of reaction from them. \n\nThe two women didn't seem to notice their audience's actions, intent on each other, and he happily watched them kiss and caress for some time before Gwen began to lick and nuzzle her way down the young woman's neck while a hand turned gentle circles ever closer to the vee of her legs. Cricket opened herself wider, inviting further exploration while she tweaked and stroked Gwen's erect nipples. Tim pushed his hand down further so his own fingers could now run up and down his painfully erect shaft. He was careful; a premature ejaculation would be embarrassing beyond belief, and he had no intention of coming early and not getting the ultimate pleasure out of the erotic scene unfolding just inches from him. \n\nGwen kissed all about the pert breast being offered to her, gently cupping it as she took the erect nipple between her lips and flicked it with her tongue. Cricket sighed appreciatively, daring a glance at Tim over the older woman's bent head as he watched his wife gently suck her tit. She could see his bent arm as well, doing something at his waist that Gwen's body hid. \"Ahh,\" she gasped as a finger slid over her clit and into her furrow, pausing briefly before pushing inside of her. Cricket bucked reflexively against the welcome invader. Her own hand went to Gwen's sex, and the two women ground against the fingers and palms pleasuring them while their lips again found each other. Cricket's climax was first, her kisses frantic while her hips thrust with force against the pressure on her clit and the finger in her pussy. Gwen was able to hold out a while longer before repeating the scene for the man on the bed with them. \n\nGwen rolled to face him after giving Cricket a final kiss. \"Is everything still okay?\" she asked, the arousal and anticipation that had driven her actions temporarily sated, worry over the boundary she had just crossed growing. \n\nTim grinned back, eyes wide, his expression one of amazement and lust. \"Everything's great!\" \n\n\"Did you finish?\" she asked, her hand running over his cloth-covered cock, feeling the soaked fabric at its tip. \n\n\"Uhh, no, you said, uhh, you'd take care of me after, so I thought I should wait...\"\n\nShe smiled. \"I'm glad you did. Lay back.\"\n\nTim did as she asked, wondering if removing his shorts and exposing himself to their guest might be considered too much. Gwen gracefully climbed over him and stood next to the bed while Cricket looked on.\n\n\"I can go back to my own room if you want some privacy,\" she offered again, unsure what the etiquette might be in these situations, chiding herself for thinking there might be proper etiquette in a situation like this. \n\n\"No, I want you to stay, and I'm pretty sure Tim wants you to stay, too.\" She switched on the bedside lamp, their eyes all taking a moment to adjust to the brightness. Cricket was still blinking when Gwen reached for her husband's underwear and suggestively tugged at them. Tim got the hint, raising his ass off the bed to help, his rock-hard erection catching on the waistband and levering down before breaking free and recoiling with a slap against his stomach. Gwen slid them the rest of the way down and off his legs while the young woman still on the bed watched in amazement. \n\n\"Cricket wanted to see your erection,\" Gwen announced matter-of-factly. The young woman blushed furiously.\n\n\"Oh,\" Tim chuckled nervously. \"I woulda thought she had seen it by now.\"\n\nGwen looked at her friend. \"What do you think?\"\n\n\"No, this is the first time,\" Cricket replied before realizing that was not the intent of Gwen's question. The young woman swallowed hard, staring unabashedly. \"Oh, you mean, his, uhh, penis. It's umm, nice,\" she replied truthfully, wondering what the proper words were to compliment a man on his sexual organ. \"You're very lucky,\" she said, managing to look away long enough to make eye contact with Gwen. \n\n\"I'm lucky because of the man it's attached to.\"\n\n\"It's, umm, a lot bigger than Daniel's.\"\n\nTim was surprised to find himself embarrassed by being the center of attention, and the size comparison only seemed to make it worse. \"I don't think it's really that big, but I don't go around comparing it,\" he said with another nervous laugh. \n\n\"Cricket's never seen a man ejaculate,\" Gwen said, kneeling between his legs. \"Would it be alright if I show her? I mean, if you show her?\" \n\nHe looked doubtfully at his naked wife, then at the naked young woman now kneeling next to him. \"Really? You've never seen a guy do that?\"\n\nCricket blushed furiously and avoided eye contact. \"The other guys were, uhh, where I couldn't see them when they did...\"\n\n\"Oh. Huh.\" Gwen's hand had already gently grasped him, lightly stroking with a delicate touch. Embarrassed as he was, the primal part of him was only too happy to show this fertile young female the amount of seed he could produce, a thought his common sense quickly squashed by pointing out he and his chosen partner's baby-making days were past, and this was not an invitation to resume them with someone else. He could still give her a hell of a show, though...\n\n\"Tim likes it when I start out nice and easy,\" Gwen said softly, concentrating on the length her fingers were wrapped around, \"and he really like the head of his penis played with\u2014it's very sensitive.\" Her free hand found his balls and stroked, making him groan. \"He likes his testicles fondled, too. But gently\u2014too rough and it can hurt.\"\n\nThe young woman stared in fascination at the hand traveling up and down the slick length. So big, she thought again, so different from when it's soft, momentarily distracted by the balls in his loose sack shifting about as Gwen's fingers alternated between stroking and gently palming them. The mushroom head was turning an angry scarlet as his hips began to thrust against the pressure his wife's fingers were creating. \n\n\"When his hips start moving like that, it usually means he's getting closer,\" Gwen observed. \"So then I start tightening my grip a little more to give him more friction.\" \n\n\"That obvious, huh?\" Tim said with a laugh. \"Yeah, I'm getting closer alright,\" Tim agreed. \"I was pretty close when you two, uhh...\"\n\nGwen smiled, her hand moving with more urgency, Tim's hips thrusting harder against it. \"Watch closely,\" she needlessly reminded the young spectator. Cricket's eyes were glued to the scene. \n\nTim grunted loudly and slammed into Gwen's closed fist with a final thrust, much of his cock exposed above her fingers. The first white rope erupted from his red tip, arching high into the air and falling onto his upper chest with an audible plop. \"Oh my God,\" was all Cricket could manage as he pumped out spurt after spurt, each one a little weaker until they bubbled out to slide down over Gwen's fingers. \n\nShe gave it a final playful shake after Tim announced the end of his orgasm with an explosive exhale. \"Well, what'd you think?\" she asked the young woman staring open-mouthed at the scene. Cricket's expression answered most of that. \n\n\"Oh my God,\" she repeated. \"I had no idea! Is it always that, uh, powerful? And that much?\" \n\n\"Depends on the circumstances,\" Tim volunteered. \"Depends when it happened last, and, umm, motivation...I had a lot of motivation tonight.\"\n\n\"Could you get me a warm washcloth from the bathroom?\" she asked her shocked young friend. Cricket nodded dumbly and climbed from the bed, returning a moment later. \"I like to clean him up after,\" she said, taking the washcloth and gently wiping down her husband's chest, stomach and still-hard member. A quick kiss of his mushroom head signaled she was done. \"Better?\"\n\n\"Oh yeah,\" he said with a contented chuckle. He seemed to be in no hurry to cover up, and their young spectator continued to glance nervously back and forth between his slowly-softening cock and Gwen. \n\nCricket again wondered what to do next, now that\u2014this\u2014appeared to be over. \"Well, I guess I should go to bed,\" she volunteered, looking at her friend for confirmation. \n\n\"I thought you liked being with somebody after,\" Gwen said with a gentle smile. \"Stay here with us tonight.\" She patted her husband's thigh affectionately. \"I'd like to be in the middle, if that's alright with you two.\" \n\nTim and Cricket found the arrangement very satisfactory, the soft femininity on Gwen's right and solid masculinity on her left creating an exciting contrast. It took them some time to drift off to sleep, each wrapped in their own thoughts as to what had just happened and what it would mean in the light of day. \n\nCricket was awakened in the middle of the night by something her sleep-fogged brain could not easily identify. She opened her eyes and was startled to find Gwen's face just inches away, a look of nervous pleasure in her eyes while she bit her lower lip. It was the gentle rocking of the bed that had awakened her, Cricket realized, that and the labored breathing both Gwen and Tim were trying to stifle as they lay on their side facing her, he buried deep between his wife's legs, she eagerly accepting him. His hand firmly grasped her exposed breast.\n\nGwen saw the young woman's eyes open and smiled in silent apology. Cricket smiled back, not at all minding the interruption to her sleep and impulsively bent forward to kiss the woman lying next to her. Gwen returned the kiss and it lingered, the joined couple's gentle rhythmic motion making her friend's lips press hard against her own then withdraw. Her free hand gently grasped the young woman's buttock and pulled her closer. Cricket's erect nipple mashed into the back of Tim's hand, grating sensuously against his rough skin. He drew it back as if burned, and she felt the soft mass of her friend's breast against her own replace it. \n\nGwen's leg came up, her knee pushing against her friend's closed thighs. Cricket opened up and the knee continued forward to firmly press against her clit, rocking in rhythm to Tim's thrusts. The feel of being wrapped up by a warm soft body while something solid filled the space between her legs was electric, and only something in her, actually filling her, could make this any better. She ground against her friend's knee and panted softly in time to its movements. \n\nGwen reached for the young woman's hand and gently guided it to her crotch, rubbing it meaningfully against her mons and clit for a moment before letting go. Cricket got the hint and began to press and stroke, very aware Tim's cock was sliding in and out so close to her fingertips, jerking back a bit when she thought she might have brushed against his pistoning length. \n\nHe was the first to his orgasm, his urgent thrusting making it difficult for Cricket to do anything more than hold the heel of her palm in place on Gwen's mound while her friend's knee drove into the young woman's sex with added force. The pace slowed a bit again after he had finished, Gwen continuing to gently rock back and forth against the cock inside her and the body in front of her. Cricket's finger again stroked her friend's clit and soaked furrow. One particularly violent twitch of the older woman's hips made the softening member inside slip from her; the next made her friend's probing finger slide into the freshly vacated opening. Cricket knew what had just been there and what it had left; reason said her fingers should not be playing in the results of her friends' coupling, but passion made her firmly cup her friend's mound and slide a second digit in. A knee, fingers, and lips brought the two women to climax shortly thereafter."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "lesbian",
        "wife",
        "friend",
        "selfies",
        "dressing room",
        "handjob"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-12"
}