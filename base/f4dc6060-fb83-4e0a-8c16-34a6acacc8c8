{
    "title": "Tomorrow is Another Day Ch. 03",
    "pages": [
        "I came home one day a few years back and my wife told me I had gotten a call from some guy who claimed to have flown with me in Vietnam. When she told me his name I recognized it instantly. He had been one of my crew chiefs on a UH-1H during the second half of my first tour.\n\nHe was a bright and cheeky guy with a haircut and handlebar mustache that wasn't close to regulation. He was often insubordinate but also very amusing at times. I think he used to smoke a joint now and again sitting in the door gunner's well on long uneventful flights. He once jumped out of the helicopter in a hot landing zone---after I had specifically told him and the enlisted crew member (door gunner) on the other side not to do so. We were picking up one each ambulatory American officer. We were picking up a wounded American lieutenant who was part of an advisor team. His wounds weren't life threatening but he needed medical attention. \n\nAnother time he jumped out and ran up to open the pilot's door---normal procedure in a secure area so that if the damn thing caught fire, the pilot had a chance of getting out. The only problem was we were in a hot LZ, picking up wounded and body bags and had no intention of sticking around. He just hadn't been paying attention.\n\nBack to the original story: I ended up leaving my crew chief in the LZ in my haste to get the hell back in the air. The young NCO on the ground came up on the radio to inform me of my error with a chuckle. He also said that the enemy contact had broken off and they'd keep my young Specialist Five safe until I came back for him.\n\nI took the American LT to the closest medical facility and then returned for my crew chief. I don't think he was very happy with me even though he knew he had screwed up---once again not paying attention. I've always believe he tried to toss a CS or tear gas grenade in my hooch one night to get back at me. I also had the suspicion that he had stolen a privately owned weapon I'd carelessly left behind the seat. He ended up failing a drug test for pot and getting sent to an in-country detox center down south.\n\nIf there was any young soldier I ever met that I was sure would not make it past age twenty-one without being incarcerated---or killed---it would have been him. He was always mouthing off to someone in the enlisted club and getting decked. \n\nHe called that day to reconnect but more importantly, he called to let me know that his life had not been the disaster that I had thought it would be. At some level he also called to thank me for being rough on him at times. Remembering back, when he wasn't smoking weed and was paying attention, he was a damn good crew chief. I don't remember disliking him---just being frustrated with him.\n\nI called him back as soon as I got home that day. He'd gotten a college education and risen to a high level in a very respected federal agency and even gotten a commercial pilot's license. He had a wife and several children and was by all accounts a pillar of the community. We chatted a few times over the phone, said the things we needed to say and then went back to our lives.\n\nI've elaborated about my erratic young crew chief as the prologue to another factual story about the exploits of an insanely young UH-1H Army Huey crew during a period very close to the end of our involvement in the Republic of Vietnam (RVN). The story which follows occurred some time in late 1972, in Quang Ngai province in southern I Corps.\n\nSomewhere in a box in my basement, or perhaps lost over thirty-five years of moving, is or was a very nice thank you letter from the commander of a U.S. Navy destroyer. No medals were ever awarded. The unit operations officers handed me the letter and apologized for the fact that in the rush to close out the unit, no one had gotten around to writing up and submitting any citations, even though I had written up my crew.\n\nWhile I certainly did one damn fine job of flying that morning---or at least my pilot told me so---it was the insane, above and beyond the call of duty heroism with no thought for his own personal safety of a young Specialist Five crew chief that I can recall as clearly as if it was yesterday.\n\nThe U.S. Navy had a role in the Vietnam conflict that is less known than their \"blue water\" support of the war effort with aircraft carriers and naval gunfire. They also had a \"brown water\" mission patrolling and securing the inland and coastal waterways. They also had---along with the US Coast Guard-- an advisory effort aimed at training the fledgling Vietnamese navy to secure their own coastal regions and estuaries.\n\nOne day in 1972, a U.S. Navy destroyer commander launched a small, motorized launch under the command of a young ensign with five or six Navy enlisted men on board to the Coastal Group 16 position just south of the mouth of the Tra Khuc. I can't recall the name of the Navy vessel nor why in the heck these kids were going ashore other than to ultimately be able to say they'd set foot on Vietnamese soil.\n\nIn rough seas---four to six foot swells, rough seas for a small launch---the young ensign essentially lost his first command, or at least his first \"ship.\" They got sideways in the surf and flooded up to the gunwales. The launch evidently was constructed such that it couldn't really sink. Essentially submerged, it was no longer able to proceed and the young navy personnel on board were repeatedly under water as the waves washed over them.\n\nMy pilot was a young first tour first lieutenant; he was short and stocky but also as I recall an accomplished marital artist, one tough mother and an above average pilot. I recall that we roomed together for a while; he began each morning the same way. I would hear the distinctive flick of his Zippo as he reignited the previous night's cheap cigar, probably a White Owl. Then he'd down the remains of the flat Coke beside his bunk and then he would fart. I'd eyeball him; he'd grin.\n\nOne morning as we were headed into the Quang Ngai advisors pad, the NCO in charge of the radio on the ground made me aware of what was going on with the Navy launch and asked if we could assist. Somehow we got the radio frequency for the Navy vessel, probably in the clear.\n\nLet me remind everyone that Army helicopters of the day---at least Hueys---were single engine; Navy and Marine Corps helicopters were almost exclusively two engine because they had to fly over open water. I made a number of trips out over open water to land on the hospital ships Hope and Repose, once landed on an aircraft carrier and recall landing more than once on a Navy frigate while supporting a Navy gunfire mission. I always felt a little queasy out of sight of land. The only time I damn near got sea sick was sitting in an Army UH-1H, shut down, on the deck of a ship. It hit us all at the same instant. As soon as we got out and stood on the deck, we were fine.\n\nSo here we are, flying out over the ocean, trying to find a very small boat in a very big and rough ocean. I recall that the destroyer had intermittent radio contact with the launch but for whatever reason, we did not. The destroyer was steaming toward shore to recover their imperiled sailors but with the rough seas, the underwater hazards and the shallow coastal region, they were close to the point of having to stop. \n\nThey were preparing to launch a second small boat but the rough seas were impeding that effort. The destroyer had an accurate fix on the location of their launch and could certainly see us on radar. It took some time to find them in the swells. We climbed up a few hundred feet and finally my crew chief or gunner yelled out on the intercom that he had them in sight.\n\nAs we hovered over to their location we saw a boat full of pretty scared young sailors and one very concerned young ensign contemplating the end of his naval career. My fear at the time was that our rotor wash might cause them more problems. We could not simply hover over the boat and pull them all in at once due to the waves, so we had to make several passes. We did not have a winch. \n\nSo, essentially, I would hover in with my skids three feet or less over the launch, my crazy crew chief would hang by his knees off the skids, tied to the helicopter by a nylon strap and harness known as a \"money strap\" and each guy in the boat would stand up, grab his hands and pull themselves in. More than one slipped and fell back. None of these guys were Marines or special ops types so I doubt that they were the most athletic in the world. At least one was pretty muscular and essentially hauled himself on board without too much assistance.\n\nThe pilot and the gunner would watch the swells and alert me when another wave was coming and I'd have to raise to a higher hover or even circle around to make another extraction. On more than one occasion I didn't move fast enough---because my crew chief was in the process of trying to pull another guy on board---so that a wave actually washed over us, rendering the aircraft almost uncontrollable. Later that morning we landed in a fresh water river and attempted to flush out the salt water residue but I've got to believe that particular UH-1H airframe never fully recovered from its saltwater bath.\n\nWhen you talk on the radio to a commander, you aren't really talking to the commander, you're talking to his radio operator. So, if the call sign is, \"Marauder Six\", it's the commander's radio and radio operator. If the commander himself wants to talk on the radio---and let everyone know that he is doing so---he'll come up and announce himself as the actual or, \"Marauder Six Actual.\" So at some point that morning, as we're flying out over the ocean in our one engine aircraft, still wondering if getting involved in this whole mess made good sense, talking to some young and overly excited enlisted radio operator on the destroyer, an older, calmer, deeper voice came on the line.\n\nOne more note on military radio protocol. Ever thirty days a little book came out which you signed for and wore on a string around your neck. It was called the Signal Operating Instructions (SOI). It's called something different today, ECOI as I recall, for Electronic Communications Operating Instructions but with modern, secure, frequency hopping technology it is far less important. In any event, each month you got a new call sign that was suppose to fool the enemy. The call signs were made up of two randomly generated words, so one month you could be \"Blue Spoon\" and the next month \"Flaccid Member.\" Most of us avoided these weird names like the plague and used our own unit call signs. \n\nI've made up the call signs for this story; I don't remember the one for the destroyer and don't wish to reveal my own for this forum. I'll begin just before we found the imperiled swabbies with our first exchange with the destroyer captain, at the point when he grabbed the microphone from his radioman and decides to communicate personally with me. I don't remember the dialogue in detail; I've done my best to reconstruct it from the events.\n\n\"Smooth Rider 22, this is Blue Water Six actual.\"\n\n\"This is double deuce, go ahead actual.\"\n\n\"They should be in sight...we've got you on radar but we keep losing them.\"\n\n\"No joy; we're going to climb up a little and see if we can find them.\"\n\n\"Double Deuce, we are---or were---steaming toward their last location but we're still a good five miles out. We're stopped and attempting to launch a recovery vessel...ah, stand by.\"\n\n\"Standing by.\"\n\n\"Deuce, we're not going to be able to launch another boat...seas are too rough. And...wait one.\"\n\n\"Roger.\"\n\n\"Nor does it appear that we're going to be able to get any closer; we're going to have to circle out here. Do you have my people in sight?\"\n\n\"Negative...do they have smoke on board?\"\n\n\"Sir! Nine o'clock maybe a hundred meters!\"\n\n\"I don't see 'em, Dave.'\n\n\"They're there! They just went back down in one of the swells. Come left ninety degrees---there! There! Do you see 'em, sir?\"\n\n\"Ah...yeah! I got 'em! Break-break---Blue Water Six, we have your personnel in sight...they all appear okay...very wet...filled to the brim. Standby.\" \n\n\"Damn, Jeff, this is going to be a mother! We don't have a winch.\"\n\n\"Sir, I've got my monkey strap on. Hover in close...I can pull 'em in.\"\n\n\"Okay...let me think about this. Damn! The wind is all wrong. We're going to be hovering in a cross wind at ninety degrees. All the weight on one side...the upwind side so maybe that's not such a bad thing...Neil (the gunner on the other side of the helicopter) needs to move to the other side to help pull 'em in and get 'em strapped down...\"\n\n\"Jeff! You're thinking out loud again.\"\n\n\"I know, Rick...that way if I'm really thinking dumb shit, one of you might decide to tell me. Okay! Here's the plan. Neil! Move over to the other side of the aircraft---snap your strap into the floor. Dave?\"\n\n\"I don't think he can hear you, sir. His mic cord came undone. He's hanging off the skid...upside down...by his knees.\"\n\n\"Well...fuck...Rick! I need you to keep your eyes on the waves---and the instruments. Neil! If you can't get Dave hooked up, signal to him---one at a time! If they all try to climb on at once we're going to be way off balance and probably end up losing one or more of them.\"\n\n\"Double deuce, this is Blue Water Six.\"\n\n\"Stand by, Six! We're trying to conjure up a plan to get your sailors on board.\"\n\n\"Roger.\"\n\n\"Neil! Signal them---one at a time!\"\n\n\"I'll do my best, sir!\"\n\n\"Here we go.\"\n\n\"Closer, sir...drop it down a little more...Dave can't reach 'em! Oh, shit! One of 'em fell down---he's in the water...okay, they got him...he's holding on to the side...lower now...\"\n\n\"Next wave in...maybe ten seconds, Jeff.\"\n\n\"Okay...first one's on...damn another's trying to get on...holding on to the skid!\"\n\n\"Climb up, Jeff! We're going to get wet!\"\n\n\"I got him, sir! Two in---five to go.\"\n\n\"Okay, coming back around...here we go.\"\n\n\"That's good...damn! Your skids are in the water...okay...got another one.\"\n\n\"Wave coming!\"\n\n\"Don't move, sir! This other guy just grabbed the skid...won't let go.\"\n\n\"Got to move!\"\n\n\"Can't...fuck!\"\n\nSeawater flooded across the deck, filling up the chin bubbles at the pilots' feet. The helicopter wobbled precariously.\n\n\"Have you got him?\"\n\n\"Yeah...got him. That's four...three to go.\"\n\n\"Okay, I'm going to hover off a few meters and get my shit together.\"\n\n\"It looks like the officer plans to be the last one off.\"\n\n\"He's going to be the hardest one to get, Jeff, with no one to help push him up. There's one really big guy...looks like Popeye...body builder type.\"\n\n\"Okay...hold on...let me think. Break. Blue Water Six, Double Deuce.\"\n\n\"Go ahead, Deuce.\"\n\n\"Do you still have voice contact with your people?\"\n\n\"Roger...intermittent.\"\n\n\"Good, look the last guy we take off is going to be a real bear---no one below him to help push him up. There's one really big, tall, built guy---he seems to be doing most of the heavy lifting...he's even grinning.\"\n\n\"That would be the chief.\"\n\n\"It would seem that your commander wants all of his crew off before he goes. Military protocol aside, he's a foot shorter than the Chief---I need him off next, then the last sailor who's taller than the ensign but skinny...then the chief.\"\n\n\"Wait one.\" Thirty seconds passed.\n\n\"They understand the order.\"\n\n\"Roger that.\"\n\nOkay, let's go back in.\"\n\n\"A little lower...to the right two feet...down... now...got him...got their LT...wave coming!\" Sea water again flooded the deck of the helicopter.\n\n\"Okay...two more...here we go.\"\n\n\"Hold on, sir...this is a tall one...tall...shit! He slipped. No wait! Dave's still got him! Damn that big mother in the boat pretty much just threw him in the door! Wave coming!\"\n\n\"Okay, one to go. Coming around again. This one's going to be a bitch. Coming down now...we...\"\n\n\"He's on, sir! He pretty much just grabbed on to the skid and hoisted himself in...can't say we did much to help.\"\n\n\"Okay, get Dave back in. Check seat belts...now let's see what blue Water Six wants us to do with 'em.\"\n\n\"Blue Water Six, we have your folks on board---where do you want us to take 'em?\"\n\n\"We are probably not going to be able to launch another boat to recover them with the tide shift---can you bring 'em out to my location?\"\n\n\"How far out are you?\"\n\n\"Six nautical miles...we can vector you.\"\n\n\"What do you think, Rick?\"\n\n\"Power's good...fuel's okay...as long as the engine doesn't quit...\"\n\n\"Yeah, right. What the fuck, let's do it.\"\n\nA nervous few minutes passed.\n\n\"Rick---guys! Does anyone see anything that looks remotely like some kind of US Navy sea-going vessel?\"\n\n\"Not yet, sir.\"\n\n\"Can anyone still see land?\"\n\n\"Not from where I sit.\"\n\n\"Yeah, me neither.\"\n\n\"Wait! There they are, five hundred meters at your one o'clock. Based on the naval recognition class I took back at Fort Sill...that is one each destroyer.\"\n\n\"Do you see a landing pad?\"\n\n\"Not yet.\"\n\n\"There's got to be one! He wouldn't have had us come all the way out here...I'm going to circle around again.\"\n\n\"You know, Jeff, I bet if you circle round one more time...one might appear...a landing pad, I mean.\"\n\n\"Right! Blue Water Six, you do not appear to have a landing pad.\"\n\n\"There's clear area on the foredeck...can't you let 'em down there with your winch?\"\n\n\"Blue Water Six...unlike your birds, we don't have one of those. Give me a couple of minutes to sort this out.\"\n\n\"Sir, that foredeck area he's talking about is bristling with wires and shit.\"\n\n\"How close can we get?\"\n\n\"Maybe fifteen feet?\"\n\n\"Not close enough. If they jump out they're going to break some legs.\"\n\n\"Rick, what about the gun turret?\"\n\n\"Not enough room to land on it.\"\n\n\"I wasn't thinking landing...just plant a skid on the edge, hold it level...they can climb out onto the turret.\"\n\n\"That boat's pitching quite a bit.\"\n\n\"Neil, Dave! I'm going to hover in close, look for wires and shit.\"\n\n\"Damn, we're getting buffeted by that cross wind.\"\n\n\"Yeah, need him to turn it into the wind...\"\n\n\"Sir, if you come in parallel to the bow, plant the left skid...you've probably got ten or twenty feet of rotor clearance to the front, no obstacles to the rear as long as you don't swing your tail to the left.\"\n\n\"Which is it, Dave---ten or twenty feet?\"\n\n\"Fifteen?\"\n\n\"You agree with that, Rick?\"\n\nSure.\"\n\n\"Okay. Blue Water Six, can you turn into the wind for me?\"\n\n\"Wilco.\"\n\n\"Are you going to be more stable with some forward speed?\"\n\n\"Definitely---and even more so if we can steam out to sea a mile or so. The waves you see are more the result of a strong outgoing tide than severe weather.\"\n\n\"How long will that take?\"\n\n\"Five or ten minutes.\"\n\n\"Okay, crank her up then. After you're underway, we're going to come back in, plant a skid on that gun turret and hopefully they can just step off.\"\n\n\"Jeff, I've never landed on a boat before. Are you sure you want him moving?\"\n\n\"I've never landed on a ship before that wasn't moving. Usually they head it into the wind and then give you a quartering approach to a stern pad so that the super structure doesn't blank out the breeze and cause a drastic power loss on short final. We'll be to the right of most of their superstructure so the wind across the bow should help...he's a Navy guy, for Christ's sake, if he quarters into the wind a tad---which I shouldn't have to tell him--- I'll essentially have a strong headwind. We'll be flying forward---even though we'll be stationary relative to the deck---at the ship's speed plus wind speed. It ought to work.\"\n\n\"You're thinking out loud again.\"\n\n\"Same rules apply as every other time I think out loud.\"\n\n\"Sounds like a plan to me.\"\n\nTen minutes passed.\n\n\"Okay, here goes nothing. Guys! Keep 'em in their seats until I get the skid planted and then try to get them off in an orderly fashion.\"",
        "\"Blue Water Six, that gun turret isn't that big. It would help if you had some people standing by to grab 'em as they come off and get 'em clear.\"\n\n\"Wilco.\"\n\n\"Okay, we're coming in...\"\n\n\"Okay, sir...move forward about eight feet...that's good! Now down, six feet...four feet...three feet...two feet...deck's coming up!\"\n\n\"Damn! I guess the deck found us. Keep 'em seated...I'm not stable yet. Okay...that's about as stable as it's going to get...get 'em off!\"\n\n\"They're off, sir!\"\n\n\"So I noticed when the center of gravity so abruptly shifted! So much for an orderly dismount! They all look okay?\"\n\n\"Yes, sir, seven thumbs up and someone tossed a canvas bag on!\"\n\n\"Well, I doubt that it's a satchel charge---open it up!\"\n\n\"Cinnamon buns, sir...hot, sticky, right out of the oven cinnamon buns, sir!\"\n\n\"Well, I'll be damn! Let's get the fuck out of here and back over dry land!\"\n\n\"Roger that, sir.\"\n\n\"Blue Water Six, Smooth Rider Double Deuce, sorry we can't stay for lunch but the breakfast snack is much appreciated.\"\n\n\"The least we could do, Double Deuce. That was quite a piece of flying. Thanks for bringing my boys home.\"\n\n\"Any time, Six, have a great day. Smooth Rider 22 out.\"\n\n\"Sir, we need to wash this salt water out of here. There's a place in the river a few hundred yards from the advisor pad...kind of a sand bar.\"\n\n\"If we must---hey! Before you stuff your faces, there is one each aircraft commander up here who would like his sticky bun.\"\n\n\"That was some amazing flying, Jeff...fucking out of sight.\"\n\n\"Thank you, trusty pilot---that must be why I make the big bucks.\"\n\n\"I wonder what the Colonel has planned for the rest of our day?\"\n\n\"It sure as hell won't be as much fun as the way it started.\"\n\n\"Tomorrow is always another day.\"\n\n\"Don't remind me.\"\n\nEdited by Techsan "
    ],
    "authorname": "Dinsmore",
    "tags": [
        "airforce",
        "military",
        "fighter plane",
        "war"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/tomorrow-is-another-day-ch-03"
}