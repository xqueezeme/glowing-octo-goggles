{
    "title": "Unconventional",
    "pages": [
        "Short note to readers; There is no sexual activity between blood relatives. Just a disclaimer, if that's your thing don't waste time on this one. This is more of a family romance. Though I prefer to avoid this category for personal reasons, it's placed in taboo as it involves sex with a sister-in-law. There's lots of sex, but there's story too. It's an entry in the Valentine's Day competition so please vote. It's long. Please enjoy.\n\nAuthor reserves all the usual rights and acknowledges that the statement is probably redundant in this digital age.\n\n*\n\nTHE FIRST TIIME\n\nShe took the initiative quite eagerly. More eagerly than I'd ever imagined she would have.\n\n\"Why the fuck not?\" She swears a bit, \"Never waste a hard cock. You don't know when you'll see your next one.\"\n\nI wasn't sure I liked the way her pretty mouth formed such filthy words so easily. She talks a big game, but I know she's a little softy and nowhere near the minx her mouth suggests.\n\n\"You know why not. It's wrong.\"\n\n\"No, 'wrong' is doing a midget while a monkey watches. There's nothing wrong about making the most of a beautiful man that loves the fuck out of you and has a hard cock.\"\n\n\"Listen,\" I implore, holding her face still and making her look in my eyes, \"You can't just unfuck someone if you regret it later.\"\n\n\"You think I don't know that after Troy?\" Then she's crying again and all I can do is hold her and rub her back as she sits on my lap and sobs into my shoulder while my unfortunate erection presses into her tiny thighs. She'd been enjoying a post break-up consolation hug and the weight of her and the fact I hadn't got my rocks off in over a week conspired to harden my uncontrollable cock. It's always had a mind of its own.\n\nBut this thing she suggested with just a wiggle of her hips and the raising of an eyebrow... This thing is a bridge too far. Her sister is asleep just down the hall.\n\n\"Don't reject me now, Uncle Timmy.\" She sobs into my neck.\n\n\"Not rejection, honey. Just trying to be sensible. Behind that door is lots of trouble.\"\n\n\"I know. I know. I just need... I was going to fuck him eventually, just when... just when...\" She holds me tighter unsure of words.\n\n\"Shh...\" I tell her and kiss her forehead.\n\nShe's quiet for a while and her breathing settles. Perhaps she is asleep. My dick is softening in any case which is the cause of the present predicament.\n\n\"I won't tell her, Uncle Timmy.\" She puppy eye's me, \"And it would be a good story to remember. Not a dumb first time like it would have been with him.\" She pleads.\n\n\"It won't matter, we will know. And the way we behave would change. She's not stupid and we both love her. You'd never forgive yourself if you hurt her.\" Reason seems to win the day.\n\n\"I know. I know.\" And drying her eyes she untangles herself off me and wanders off down the hall where I hear the shower run.\n\nThat's Jackie. My thirty-three-year-old wife's younger sister. MUCH younger sister. She's a change of life baby I suppose you'd call her. And, at eighteen she is going through her first big heartbreak. Troy, the subject of her fascinations, a twenty-year-old mechanic at their Dad's garage dumped her the day before Valentine's day. What a cunt.\n\nHer parents are away this weekend, so she was staying with us as usual. She came home this evening a mess of tears and boozy breath. He'd had the decency to drop her home after delivering a relationship ultimatum, \"Put out or get out.\" He'd taken care to fill her to almost overflowing with cheap vodka lolly drinks but missed the magic mark halfway between one too many and one too few. She'd gathered her dignity and told him to go fuck himself, just like Patricia, my wife would have.\n\nI'll talk to Trish tomorrow. She'll make some sense of it. Taking a final beer from the fridge I walk out to the deck to scratch my balls and try and gather my scattered wits. \"Faark.\" I tell the cool night air.\n\n\"Indeed.\" Comes a voice that almost launches me over the railing. Trish laughs at me and wraps me in her arms.\n\n\"You're a good man Tim.\" She kisses my stubbly chin. \"You navigated that well. I'm a lucky girl.\"\n\n\"She frightened fuck out of me. I thought...\"\n\n\"I know, I was watching and listening. Not because I don't trust you hon, but cause well... I was worried when I heard her come home all upset.\"\n\n\"Sure, sure, creeper.\"\n\n\"You're the one who got a boner.\" She laughs at me.\n\n\"Mmmph... It's been a long week with you away.\"\n\n\"Let's go sort that out hey?\"\n\nLying awake next to my freshly shagged wife feeling wonderfully drained, physically, mentally and testicularly, my thoughts return to Jackie. Truthfully, my heart was a bit broken for the little girl I'd known since she was five or six.\n\n\"You're worried about her aren't you, hon?\" Trish asks.\n\n\"Ah, I don't know... I'd like to grab that scumbag by the throat and offer him an education.\"\n\n\"She'll be fine. It won't be the last time a boy will disappoint her with his true colours.\"\n\n\"And then...\"\n\n\"I know hon. But you did that gently too. Trust me, she'll be fine. She knows you love her. You always have. It was probably just the grog talking, you know what I'm like when I have a few.\"\n\n\"I've just never seen her as anything other than little Jackie who loves her Uncle Timmy.\"\n\n\"Well you have now. She's not all pigtails and fairy kisses anymore and you're going to have to get used to it. I've been watching her for a while around you.\"\n\n\"What do you mean?\"\n\n\"Let's just say, she's just trying out all her grown-up moves on you cause you're safe.\"\n\n\"How? What?\"\n\n\"I know, I know you haven't responded, but; have you noticed how she is always touching you, how she wears skimpy things around you, how she is always trying to get your attention?\"\n\n\"Not really. She's been a lot more affectionate than usual, cuddles and kisses and that.\"\n\n\"Well hon, she's had a little girl crush on you since forever and now it's confused with much bigger girl feelings.\"\n\n\"Great.\" I groan.\n\n\"Don't worry about it I'll talk to her in the morning. Now shut up and cuddle me, I'm tired and need your attention too.\"\n\n.....................\n\nTrish and I have eaten breakfast and had our customary two cups of brewed coffees. We both have the day off, so we lounge around and watch some telly. It's half past ten when I go to the loo and on the way past Jackie's door I knock and say, \"Hey sleepy head, you awake yet?\"\n\n\"Go away...\" She sounds sad.\n\n\"You alright darlin?\"\n\n\"Just go away. GO AWAY!\" I can take a hint, so I 'go away'.\n\nWhen I tell Trish she frowns and says, \"I'll go have a yarn. She's probably embarrassed.\"\n\nTwo hours later they both emerge from the bedroom. Trish to come and hug me. \"She'll be okay. You and I need to talk a bit more later.\" Jackie only emerged to go and shower.\n\nA bit later turned out to be around two o'clock when I was least expecting it. Smells of freshly mown grass and my old two stroke victa hung in the air while I enjoyed a six pack of Cascade beside the pool in my jocks. We have a tall privacy fence and I was hot and sweaty. Ordinarily I'd have taken my jocks off too and sat here naked after a swim, but I thought with Jackie around...\n\n\"Guess who?\" A voice whispers and fingers cover my eyes from behind.\n\n\"Umm, Kat Denning in a bikini?\"\n\n\"You wish idiot.\" Trish laughs. \"I brought more beer.\"\n\n\"Shit I've already had four. We're going out later, I'll be drunk.\"\n\n\"I've cancelled.\"\n\n\"What?\" It had been almost impossible to get reservations.\n\n\"Jackie needs us.\"\n\n\"Oh. Right then.\" My disappointment is hard to hide. Valentine's day is also our wedding anniversary, so we try to mark the occasion each year with a simple celebration of sorts.\n\nTrish sits beside me and opens a beer herself. \"I've ordered Chinese take away for seven. It's her favourite. Well make a fun Valentine's night of things here and cheer her up a bit okay? If you're good, you never know.\"\n\n\"Hubba hubba. Two nights in row.\"\n\n\"Idiot.\"\n\nWhen I look across at her she is chewing her lip. This is bad. Very bad. This is the thing she does when she is working out how to get me to do something, I am not really interested in doing. She did this same thing when she wanted to go on that bloody cruise last year. I hate cruises. You can't even fish from the boat. If I'm on a boat I want fishing, damn it. So, I brace stoically. Well, I drink my beer and hope for the best.\n\nJackie calls from the door, \"Hey guys, you right for beers?\"\n\n\"All good darlin,\" I call, \"Help yourself if you like.\"\n\nAnd she does. She strolls around in front of where Trish and I stretch on sun lounges and bends from the waist in front of me to fetch a beer from the ice bucket. Ordinarily I'd ask her to grab me one too but suddenly I can't speak. I look at Trish and she is smiling at my predicament with a bit of a self-satisfied, 'I told you so' look on her face.\n\nJackie is wearing, well almost wearing, a tiny thong bikini like one that I bought it for Trish when we went on our honeymoon. It's one of those 'Wicked Weasel' ones that are called wicked for reasons. As Jackie had bent over, I was treated to the sight of eighteen-year-old buttocks divided by a thin white strap of material that drew a line between her cheeks, over the darker star of her bum and between the puffy lips of her barely contained pussy.\n\nTurning to face us Jackie says, \"Thanks Uncle Timmy, you're the best. Hey, mind if I drink it in the pool?\"\n\n\"Knock yourself out hon,\" Trish says.\n\n\"Um... should you tell her?\" I ask Trish as Jackie walks away. That suit turns transparent when it's wet.\n\n\"I kinda think that's the whole point idiot. Do you think she bent over like that by accident? She wants you to see her all grown up now.\"\n\n\"Fuck...\" Shaking my head I adjust my shorts and finish my beer in one swallow, \"Where did she even get that?\"\n\n\"I gave it to her.\"\n\n\"What? Why?\"\n\n\"We had a long talk this morning.\"\n\n\"Yeah almost two hours. What's...? Oh god... What are you plotting?\"\n\n\"Hmm... Listen, hear me out. What I've got to say is... um... unconventional, but I think...\" Then she bites her lip again, \"Tell me about your first time.\"\n\n\"What? Fuck no.\"\n\n\"Why not?\"\n\n\"Because it was fucking embarrassing, that's why.\"\n\n\"Tim, you're being loud, hon. Shh. That's the point, tell me about it. I want to know.\"\n\n\"You're fucking serious, aren't you? Fuck.\"\n\nResignation is knowing in your relationship that you are the male and as such the schemes and scripts are not under your command. You are simply a willing actor in your wife's screenplay. Even when you think you are making choices and acting autonomously, chances are your path was set for you.\n\n\"Amy Johnson.\"\n\n\"Hmm... That was who, now how.\"\n\n\"In my bedroom when I was supposed to be helping her with homework. She made me kiss her then took off her pants and sat on my dick. Her pubes scratched my knob so bad I had marks like carpet burn. I cum in about six seconds. She laughed at me and told her friends later. Fucking happy Trish?\"\n\nOpening another beer, I realise I'm angry, \"Sorry. I told you it was fucking embarrassing. I can't believe I told you.\"\n\nShe's quiet for a moment then says, \"Paul Davis. Graduation night. He came in his pants trying to get them off, then made me suck him till he got hard again. I thought if I didn't, he'd tell his friends that I was frigid. He fucked my mouth too hard and I puked. When I finished cleaning myself up, I was crying and he bent me over the sink and stuck it in me anyway. Two thrusts later he came just as the pain was settling. Not something I'm going to write a movie about either.\"\n\n\"Fuck.\" That's probably the limit of my vocabulary at the moment.\n\n\"She loves you.\"\n\n\"What?\" Part of my slow male mind is catching on and I turn incredulous, to face her, \"Are you seriously...? Don't even...\"\n\nTrish shrugs. \"As I said; it's unconventional. But it's not illegal, she's not related to you by blood, not even immoral-\"\n\n\"She's your sister. She's my little Jackie.\" I cut her off.\n\n\"She's not little anything anymore Tim. As you can quite clearly see if you look over there while I get changed and get some more beers.\"\n\nI can't. I can't look at Jackie like that. I won't. She giggles from the pool and there is a sudden splash. The pool mattress has dumped her, and she is struggling to climb back on. Her left leg is on the mattress and her right leg in the pool and I can see straight through the now transparent white material to the open lips of her young vagina. The shaved lips. Of my wife's sister's vagina. My little sister in law's vagina. Her virgin vagina.\n\n\"Fuck...\"\n\nI watch as she mounts the mattress finally, drinking in her nubile youth until finally as she settles, she yells out, \"Uncle Timmy. I lost my beer. Can I have another one 'puweeeze' Uncle Timmy.\" She's called me Uncle since she was tiny. It was the easiest way to explain 'brother-in-law' to her. She already had another uncle.\n\nMy erection tells me that walking is silly. I am wearing only black cotton briefs. They are ridiculously tented and my game is up.\n\n\"In a second darlin.\" Picking up my shirt, I grab a beer and hold my shirt in front of me then make my way to the edge of the pool to hand it to her. Her twinkling eyes show me that she knows exactly what she is doing as she adjusts the tiny triangle of transparent material over her nipple while she reaches for the beer.\n\n\"Best uncle ever.\"\n\nI smile at her, sit her beer on the poolside and tip her off her mattress. Teasing little bitch. I realise I'm being played by two, not just one, very smart women.\n\n\"I think you're old enough to drop the 'uncle' bit now. Just Tim hey?\" I tell her when she resurfaces. Handing her the can of beer I sigh, recognising the fact of that. It's almost sad to let go of the 'little girl' and acknowledge the young woman who smiles up at me and says a little hoarsely, \"Thanks.... Tim.\"\n\nShaking my head, I wander inside to ask my one and only EXACTLY what she's plotting.\n\n\"You Studly, have a valentine's dinner date with two gorgeous, if I may say so myself, women this evening. You are going to be your usual charming and affectionate self.\" She frowns pointedly at me and insists, \"To both of us...\"\n\nI'm not sure what sort of expression I'm making but I am sure it hints at confused panic and lots of questions.\n\n\"After dinner, you are going to escort said ladies to the hot tub and entertain us with your wit and charm. We'll see how we feel and follow things from there.\"\n\nMy jaw is somewhere near my upper chest as my head struggles with the dissonance her plans suggest to it. My other smaller head simply swells with blood and nods in anticipation.\n\n\"And by 'follow things from there' I mean; I would really like you to consider introducing my little sister gently to the world of sex. I'm sure it won't be a chore and I'm absolutely positive it will not harm our relationship. We both love her and care for her and she very much wants it.\"\n\n\"Ah...\" There are words forming in my head, but they don't convert to spoken noises.\n\n\"Relax Tim. Take a deep breath. Look at me.\" She holds my jaw gently. \"I love you. It will be okay. Let yourself enjoy it. In fact, I think it will be beautiful. I'm really excited for her and kind of jealous that I didn't have someone kind and loving like you to... you know.\"\n\nSipping my beer seems to be a good idea, so I do that. I recognise the fact that this ship has sailed. Its course has been set and I am not the captain.\n\n\"Doesn't sound like I have much choice in the matter.\" I sort of grumble.\n\n\"Oh hon.\" She looks at her nervously fidgeting hands. \"I really hadn't thought... Well I thought that you know, most men would... Look, I'm sorry. If it's something you really don't want to... or just can't get your head...\"\n\nSatisfied she knows I at least need to consent, I put her out of her misery, \"All aboard! Operation Cherry is underway.\" I make a toot toot gesture with my right arm. I think I'm being funny.\n\nWhat I am being however, is 'assaulted'; as first my wife wraps her arms around me and then a wet small thing launches from somewhere behind me where she has clearly been listening and jumps up piggyback style to hug me and kiss me on the cheek.\n\n\"Thank you, Uncle Timmy. I love you so much.\" She showers my stubbly cheek with little kisses.\n\nWhen I am finally released, I'm smiling. Confused still, but smiling and things are starting to gel in my frazzled mind. I think I'll take it back outside and throw another couple of beers at the poor thing and see if it can work through this sudden, (well I should have seen it coming), turn of events.\n\nBy the second beer, it's all kind of making sense. Except for the performance anxiety I'm now feeling. I'm quite used to disappointing one woman at a time and at thirty-five, I'm not back to back boners anymore. When Trish is interested in round two, it usually takes about ten minutes and a bit of oral to get the old man at attention. The fact that I'm thinking about logistics surprises me as it suggests that I'm comfortable with the idea.\n\n\"What's on your mind lover? You ok?\"\n\nI hadn't heard her approach. \"Yeah. Actually, it's starting to make sense. I'm just worried about a couple of things.\"\n\n\"Good. You're a good man. The fact you're worried means you love us, and you care about us. I wouldn't have suggested it if you weren't that kind of man. Now spill.\" She pats my thigh as she sits on the sun lounge beside me.\n\n\"I'm thirty-five Trish. Not some teenage...\"\n\n\"Ah... I hadn't thought about that. You can usually manage a second time with a little inspiration. I'm sure between the two of us, we can keep you going.\"\n\n\"I spose. And well, mostly I'm worried about how it will change my relationships with each of you.\"\n\n\"How so.\"\n\n\"Well, we've been monogamous. Well, I know I have and hope you have... and will there be jealousy? Will it mean you're free to find someone else to bonk? It just opens those doors; you know what I mean?\"\n\n\"Ok well. First, I have been completely faithful since we first started dating. I admit random attractions, I'm only human, but I have recognised them and put limits in place. Not once have I acted on them. Second, No. I do not want this to open our relationship up to include other people. Third, No. I don't feel an ounce of jealousy, just a lot of happiness for Jackie.\"\n\n\"Oookay...\" I suck a deep breath in as I process her words. \"Also, my relationship with Jackie. Sex changes things you know. It changes feelings. It's a whole new level of intimacy and crossing that bridge kind of chemically changes emotions sometimes...\" I really suck at explaining what I mean at this moment, but Trish is nodding.\n\n\"I've considered that. Look, we both already love her. She already loves and trusts you. Whatever happens, she's part of our life forever. I agree that changing your relationship with her to a sexual one will change that love significantly but I don't know exactly how and I'm sure the three of us will maturely cope with whatever occurs.\"\n\n\"I hope so. I'd be really heartbroken if she regretted it and I lost... ah...\"\n\n\"Haha. I think you're more likely to have to cope with her wanting to continue a sexual relationship.\"\n\n\"God. I hadn't thought of that.\"\n\n\"It's okay. We'd work that out too. You know I love you. Now stop worrying. Try and relax. We're off to the shops for a few things. Be back around four. Need anything?\"\n\n\"Ha. Maybe some vitamins by the sound of things.\"\n\nI'm rewarded with a big sloppy passionate kiss.\n\n\"Rest up studly.\" She winks at me then wanders off back into the house.\n\nAs I listen to a light plane moan through the clear blue sky, I let thoughts just flow through my head without chasing them too far. Sometimes the problem for me is that I catch random thoughts and worry them into an issue when they shouldn't have been one. I've learned to 'play catch poorly' over time. By that, I mean when a thought is thrown at me, instead of reaching out to catch it as is instinctual, I dodge and say, \"missed me bitch.\" I'm not sure how mentally healthy this practice is but it helps avoid unnecessary worry.",
        "Accidently, I seem to have caught a bit of a stupid thought. I was just thinking about nuding up for a quick dip in the pool while the girls are out when personal grooming hit me straight in the mental mitt. Should I trim? Shave? Well clearly, I need to shave my face. Trish hates pash rash. But downstairs? What's etiquette for pube presentation these days? Usually, I run a number 4 clipper through the forest to trim the timber but...\n\nEventually I realise I'm making this into a bigger problem than it really needs to be, so deciding I'll just go with my usual coiffure I head upstairs for a shower. For some reason I'm really nervous, like I'm going on a first date or something. In a strange way I guess it is. But it'll be the first, first date that I've been on where sex is on the table before the date.\n\nWhat if Jackie gets cold feet? I make a personal note to have a conversation with both women as soon as they get home and put down some ground rules about consent and desire. Any one of us needs to be able to stop everything if it starts feeling wrong.\n\nAs I'm having this wonderfully appropriate and responsible thought it occurs to me that I'm actually getting excited. Both the butterflies building in my stomach and the lump tenting my undies. Jackie really does have quite a nice little body. She strikes me as similar to what Trish looked like when we first met. Suddenly, I'm replaying the pool mattress moment and decide I need that shower to try and cool down.\n\nWhy is it that the parts that like getting washed the most are the ones that get the least dirty? While soaping my semi-hard dick, I wonder if I should have a pre-date wank as dictated by youthful dating rules. Deciding against it, I stop thinking about Jackie's little bikini flash game and fuck; I realise suddenly that I'm objectifying her. Well, fantasizing. Well fuck, I can't find any nice way to say I'm relishing the idea of having sex with my wife's beautiful little sister. I really need to get a grip. No! Not that grip, I tell myself and unhand my soapy boner.\n\nTowelling off, I get something of a romantic thought parallel to the sexual. This is a big thing. A big thing for both women and a big thing for me. I've never taken anyone's virginity. Well, no-one has ever had one to offer it to me. Trish and I had both... with other people and... do I mark the occasion? Fuck. I wish I'd had something like this I could remember fondly. I want to mark the occasion. I want Jackie to remember it as... What? I ask myself. As what?\n\nThat's how I end up shopping. Fuck it I have two hours to kill before they get home and there is a mall up the road, just a walk from home. The mall has a florist and a bottle shop. So, I take advantage of them. Then a jewellery store catches my eye.\n\nThe jeweller watches me strangely. I think she thinks I'm a thief or a creepy browser. Dressed in my old rugby jersey that I threw on and some daggy shorts and thongs I look a bit like a dero as I inspect things I should not even think of buying. Fucking credit cards and their ability to convince me that this is actually a good idea.\n\nI want something for Trish to communicate my love for her. The depth of it seems to be reflected in the price tags. I'm not a rich man. I'm competent with money and we are paying off our home, have nice cars and don't fret over bills but holy shit, some of these trinkets are frighteningly expensive.\n\nShe loves pink. There are earings; pearl above and pink sapphire dangling a little lower. Three hundred and ninety-nine dollars' worth. Should I? We're usually fairly reserved with gift giving but this night feels precipitous and pregnant with possibilities. Nodding to myself, I start thinking of Jackie.\n\nI want something to show her how much I treasure the gift she is offering me. Not the silly hymen. She probably doesn't even have much of a hymen left, I tell myself; all of that horse riding. A horsey looking charm stares at me but it looks like 'little Jackie'. Some kind of kid bracelet thing and this is her womanhood. God I'm feeling a little emotional just thinking about it all.\n\nThe jeweller approaches...\n\n\"Can I assist?\"\n\n\"Oh god, I have no idea.\"\n\n\"So Sir, tell me who is it for?\"\n\nSee, that's just the thing. I can't really outline the details of that. \"I want a memoire for my sister in law to remember giving me her virginity.\"\n\nSo, I go with, \"Someone special to me who is taking a huge step into the future and I want her to remember I love her.\"\n\n\"Jesus.\" Chuffs the jeweller, \"So specific and emotional. Most men are like, 'ah I dunno, maybe something cheap for the missus'.\" Chuckling to herself she asks, \"Budget?\"\n\nI shrug and say, \"sub five hundred. Thereabouts anyway.\"\n\n\"Romantic or family?\"\n\nFuck. Got me there. \"Romantic please.\"\n\n\"Hmmm. You browse, I'll think and look.\" She's pretty I notice. I guess that helps with sales. Well, not pretty so much as very well groomed. Not as pretty as... Why am I even... God, I'm thinking about Jackie's little bikini and comparing her lithe teenage body to this poor lovely lady while I'm shopping. Then I'm thinking about Trish's lush body. Fuck I can't think with a hardon.\n\nThen suddenly I spy an infinity ring.\n\nIt's white gold. White gold with small blue sapphires the same colour as Jackie's eyes set around the perimeter of the infinity symbol. It's delicate looking, not chunky or gaudy but classy. Like a schoolboy, I raise my hand for the jeweller's attention. Suddenly, in my mind I know it is the perfect gift and symbolises what I want her to understand.\n\n\"Oh. Lovely choice Sir. Expensive...\" She shoots me a sideways look, \"But lovely. The lady must be very special.\"\n\n\"Ah. How um... Special?\"\n\n\"On special too, for six hundred and forty-nine dollars.\" She nods hand on hip, \"Would you like to continue browsing?\"\n\nShe says it as something of a challenge.\n\n\"No. That one is perfect.\" I will only buy one person this one thing, this one time. \"It's perfect. And the earrings over here please.\"\n\n\"Certainly sir, I must say, you are quite the decisive shopper. Most men are like, 'oh god the price, oh wow which one.' Please come again.\"\n\n\"Not for a few months I think.\" I tell her as I pass the plastic fantastic and think about the overtime I'm signing up for.\n\n\"Would you like these gift-wrapped?\"\n\n\"Sure. Separately please.\"\n\n\"Tell the lucky lady that she can bring the ring in for resizing on the house.\" She says handing me the two small pink, wrapped parcels.\n\nAn hour or so later I pull into the driveway to find Trish's car back. I'm nervous. Excited. I feel like I'm falling in love again. With both of them. Sucking a deep breath in like I'm turning up for prom with a bouquet, not knowing exactly whether I'm being pranked or not, I wander up the concrete path I poured ten years ago.\n\nI actually knock on my own door. Wanker...\n\nTrish and Jackie both answer.\n\n\"Hi?\" Jackie looks at me like I'm insane.\n\n\"What are you doing?\" Trish looks at me like I'm a homeless person begging.\n\nI hand Trish the bottle of champagne. I hand Jackie the bunch of roses.\n\n\"You're going to have to share ladies.\" I say from somewhere. \"Work it out between yourselves.\"\n\n\"Fuck yes!\" It's laden with inuendo when Jackie replies, \"We'll share, Uncle Timmy.\" She wraps me in a hug.\n\n\"You sappy wanker.\" Smiles Trish. \"Come inside idiot.\"\n\nJust inside the door I stop them.\n\n\"Wait. Please wait. I have things I want to say.\"\n\nThey both eye me suspiciously as they wait for me to gather words together. I told you I'm not good with words.\n\n\"At least close the door hon, you're letting the air-con out.\"\n\nSo, I do, then reach into my left pocket.\n\n\"Look first. Trish. I love you. You are a wonderful, thoughtful and generous wife. I'd be lost without you. Here, I love you. Happy Valentine's day. I love you.\"\n\n\"You already said that, idiot.\" She laughs as she accepts the little box shaped parcel and unwraps it.\n\n\"Oh, my fucking god.\" Jackie blurts. \"Holy fuck, you lucky bitch. Are they pearls?\"\n\n\"Pearls and sapphires. Created sapphires. Pink.\" Captain fucking obvious I am.\n\nTrish wipes a tear away. Shit, I did well.\n\n\"Come here.\" She says then tangles tongues with me.\n\n\"God that's fucking hot.\" Jackie says and it occurs to me that I have a second gift.\n\nWhen our lips unlock and Trish steps back, I turn to Jackie.\n\n\"Now.\" I suck in a breath, speech prepared and feeling kind of muddled. \"Listen. Both of you.\"\n\nI hand Jackie a little wrapped box as well and her eyes glaze. Trish bites her bottom lip and shines bright brown eyes on mine. I can feel her trepidation and pride. I've done something good in her books by remembering a second gift, I think.\n\n\"Jackie open it.\" I prompt and wait.\n\nAs she opens the box and eventually sees the little ring, I blurt out my weird soliloquy.\n\n\"Look. This means I love you. I love you forever no matter what. Now tonight, I know you have talked with Trish and have plans, things, you know. But I want you to know that no matter what, I will always love you. You will always be my little Jackie.\"\n\nI pause to suck in another big breath cause I'm fucking nervous and not really good with feelings and words, then stumble along, \"So tonight... At any time, for any reason, both of you, have to promise me that you will say 'stop', if anything is too much, too far, not right or you change your mind. This little sign says I will always love you no matter what.\"\n\nThey both watch me, staring for far too long.\n\n\"Understand?\" I prod at Jackie. \"This is important darlin.\"\n\nThen they are both fucking crying. I hate when chicks cry. I don't know what it means.\n\nTrish is the first to kiss me and say with weird raccoon mascara eyes, \"You idiot. We just spent fifty each on makeup.\"\n\nThen Jackie looks up at me with little blue eyes and says, \"I will. I promise. I've been worried about whether it would... and how I'd... Look, just... You're perfect. This is perfect. This is a forever thing. Infinity love. I love you Tim.\" Then she tries to kiss me. On the cheek.\n\nBut I take the tip of her chin with two fingers and lift her lips to mine. No tongue but a soft wet far longer than usual kiss between us that hints at how things are changing. Small hands press at my chest and her blushed face breathes deeply. I follow her frowning eyes to Trish's and realise she's asking permission.\n\nTrish is smiling and holding one hand on her heart. She nods.\n\nJackie's arms encircle my neck and she pulls me down for another kiss. This one smouldering, with tongue and nips and groaned desire. Desire, that I find builds in me reflecting hers. Her mouth is warm and tastes of coffee. Her tongue is sweet and wrestles along my lips to find my own which I realise is running completely on autopilot, tracing her teeth and teasing her tongue.\n\nJust as suddenly as it started, it is over. She pushes me away and pants, watching me with wild eyes, one hand hugging her waist and the other cupping her sex.\n\n\"Fuck.\" She's still staring at me a bit like she's going to eat me. But she is talking to Trish. \"You said he kisses good. You didn't say THAT good. I think I wet myself.\"\n\nThen taking my jaw in her hands she puts a much tamer but still passionate kiss on my lips. \"Thank you for the ring. I 'forever love' you. No matter what happens tonight. Even if YOU change YOUR mind. Happy Valentine's day.\" The hug that follows is soft and sincere. She melts against me, her head on my chest, her body fits to mine and a warmth speaks between us. I'm aware of my erection pressed between us. Her gentle gesture of tucking herself harder against it says she is too. It doesn't feel weird.\n\nTrish is smiling at me. \"I love you. Thank you.\" She mouths silently. Just then Trish's phone dings. She taps the screen a few times then says, \"Holy shit. Jacqueline Jane Spence, get your skinny arse over here and look at this.\"\n\nThey both spend a few minutes looking at the screen and whispering then they turn to me with fierce eyes and stalk toward me. Trish catches me first to squeeze the breath from me and Jackie wraps her arms around the two of us.\n\n\"What? What's going on?\"\n\n\"Idiot technophobe,\" Trish tells me. \"The banking app on my phone just put the price tags back on your gifts.\"\n\n\"Oh shit. Look I've got overtime coming-\"\n\n\"Idiot, I'm happy not nagging.\"\n\n\"Okay then I guess. You weren't really supposed to know. I just wanted things that said how I feel because I'm shit at it.\"\n\nJackie is standing away from us as we talk, just looking at her ring on her finger and glancing at me now and then. Trish whispers into my neck, \"You did perfectly idiot. Perfectly\"\n\nStraightening up and stepping back from me Trish puts on her business face. \"Right, well enough sappy shit for now. Tea will be here in an hour and Jackie and I have to get ready. We have a hot date with a sweet man.\" Then with conspiratorial conference and lady giggles they hustle off upstairs.\n\nStanding in front of the wardrobe looking at my clothes while the girls do girl things up the hall in Jackie's room, I ponder what the dress code is for an occasion like this. Formal? Surely more than boardshorts and a t-shirt? Jeans? What would I want a date to wear if I was an eighteen-year-old girl thinking about making a woman of myself?\n\nThree years ago, Trish's older sister Marion was married. She married a fairly well-off man a few years older than her. It was her second marriage. I bought a suit that I have not worn since. It was cheaper to buy the suit than rent one. That sort of quality. Still... I should look like I made an effort. Pulling it from the hangers I lay it on the bed.\n\nUnderwear? I'm quite possibly getting ahead of myself, but how does one present one's package?\n\nI choose a simple pair of plain black bikini cut briefs. Nothing silly, no slogans or anything.\n\nThen I dress. Remembering everything that Mum tried to coach into me over the years of nervous pre-date preparation. \"No tie Timothy. You want to look well-dressed but not stuck up. A simple shirt, not bright. It's your job to be well dressed but drab beside your date.\"\n\nFinding a pale pink shirt that I've never worn because I hate pink on men, I dress in the charcoal suit and button one button as Mum instructed years ago. Trish will be happy to see me finally wearing the bloody shirt.\n\n\"No, you reek. Go have another shower. Put on a tiny drop of nice aftershave. You don't want to overpower the poor girl's expensive choice in perfume. Just a dollop so when you are dancing it heats up a little and you smell like something other than B.O.\"\n\nThanks Mum. I dab a single drop of Trish's favourite cologne behind my jaw.\n\n\"Too flashy. She's the star tonight. You're the necessary accessory. Give yourself a fault. Something wrong that people can see.\"\n\nThanks Mum. I roll my suit sleeves up twice.\n\n\"Something for her to fix for you. Make it look like you were nervous.\"\n\nShit, that stumps me. Err... Okay, I'll button my shirt wrongly. So I odds and evens my buttons.\n\nI examine myself in front of our full-length mirror. I wouldn't fuck me. Not if I was an eighteen-year-old chick. Sometimes I'm surprised Trish still wants me. I look tidy but not movie star. I just don't get what she sees in me sometimes. Now, I'm trying to impress her little sister who clearly has equally young, much better looking, less dad bodied dudes to compare me to. Fuck.\n\n\"These are pre-date jitters. She wouldn't be going out with you if she didn't already find you attractive.\" Thanks again Mum.\n\n\"Now grooming. Clean shaven so she can kiss you. And your hair. For god's sake mess it up a little.\"\n\nAnd then I hear the doorbell. It can't be seven. I only came up to dress at six. But at the door I find a smiling Asian man and a lot of food. A lot. I'll have to get that banking app that so it can tell me how much money Trish spends. I tip him.\n\n\"Nah mate.\" He says with a broad Australian drawl, \"No need for a tip. My boss pays me properly.\"\n\n\"Shit bloke, just take it hey? Buy your lady something nice for valentine's day.\"\n\n\"Cheers mate.\" He says to me, \"You look fuckin primo man, in for a sweet night?\"\n\n\"Hot date.\" I tell him.\n\n\"Don't blow it. Chick must be fucking sweet as cuz.\"\n\n\"They are.\" It slips out. \"I mean she is.\"\n\n\"Fucken A playa!\"\n\nI high five him even though the concept of an Australian Asian, appropriating American negrish is thoroughly wrong on a whole bunch of levels.\n\nPlacing the Chinese food on the breakfast bar I rub my forehead. This is it.\n\n\"Teach me the meaning of precipice.\n\nShackle me to the edge of abyss.\n\nI want to flirt with oblivion,\n\nLet my soul and eternity kiss.\"\n\nI made that up.\n\nIt fits.\n\nI should probably write that down or I'll forget it. So I do. I put it with class and dignity deserving, onto the back of the electricity bill which is gracing the kitchen table where I place the food. I use the delicate feather lite touches of a felt tip pen to write my missive, bringing my expansive ejaculation of the soul, onto the reality of my world.\n\nScrawled thus, I welcome the evening. 'Hello whatever.' Sometimes, when I don't know what to do, Ok, most times I don't know what to do, I have an alcoholic beverage. Over time they have made a lot of suggestions about how best to do things. They have given me a lot of ideas.\n\nA lot of them have been really shit.\n\nThis whiskey. This splash of water. This odd number of ice cubes. They have a good one.\n\nIt involves trying to breathe and going to the back deck to watch the sun near the horizon. While I'm there I desperately try to gather what thoughts I can and corral them into pens where they can, \"Calm the fuck down Susan\" while I try not to imagine my wife's smooth white thighs and the kinky look she gave me earlier. While I try hard not to remember the kiss that Jackie and I shared. I'm really nervous about the whole end-game of this weird out of control shenanigans.\n\nI have another whiskey. The first one kind of just fell into my stomach on its own. The second one is much smarter. It swirls before each sip. It tells me to slow down. It tells me to breath. It tells me just to let go and let happen. It tells me that I'm not the horse, not the rider, not even holding the reigns. I'm just a person at the party and need to play my part. Whatever that may be.\n\nReds and purples. Pinks and galah like greys. These are the colours of the day as it folds around me. I'm speculating on the possibilities of this evening and whether I'm even deserving of them. How some clown like me ended up in this little nexus of the universe unfolding. When I hear a throat... Wait, two throats being cleared.\n\n\"Ahem...\"\n\nI turn and my whole world is suddenly death-starred into cosmic ash clouds.\n\n\"I'm not paying this electricity bill, but I'm fucking keeping this poem.\" Jackie says.\n\nMy tongue which I have used for thirty-five or so years to do a myriad of things from eating, to simple speech, to bringing my wifey to orgasm simply now defies me. If it had fists it probably would be punching me but try as I might I can simply not bring words from my lips.\n\nBoth ladies; (I may have used the word, 'girls' but there is no mistaking these two fantastic creatures that stand before me like something from a fantasy as anything other than full grown ladies), are wearing lingerie. Only lingerie.\n\nTrish has chosen purple. Purple and black. My eyes are slow to take in the details. They keep getting snagged on body parts. Body parts carefully and artfully exaggerated by the exquisite clothing.\n\nTrish's tits are barely contained by delicate floral lace through which her dark nipples peek at me. I look to Jackie's and hers are cupped from underneath in a half cup of red satin that lifts her pert smaller breasts and points the naked nipples at me. Looking to their faces their smirks confirm their approval of his speechless, shocked appraisal.",
        "Following Jackie's slim young body south I find a heart shaped window in the front of her tiny briefs. Her hairless mound is displayed teasingly and the base of the heart just hints at the folds of her sex.\n\nWhen I can draw my eyes from the promise of that little window upon heaven, I find the briefs have been put on over suspender stockings. A contrasting black lace belt sits upon her waist and holds up a sheer pair of black stockings that I follow down lovely lithe legs to a pair of red heels.\n\nThe tapping of Trish's heels pulls my eyes to her feet and I follow fishnets up over her long legs. You've got to love horsey girls. All that horse riding makes for fantastic legs. Her fishnets have a patterned lace to them which draws my eyes inwards as I approach her upper thighs and see her knickers are crotchless.\n\nI still haven't spoken; I don't think I can. They smile in unison when I find their eyes again. This time they strike a kind of Charlie's angel pose. I bet they practiced this. To my right Trish puts her weight on her right leg, her left hand on her hip and points her left toes out opening her thighs while Jackie mirrors this on the left. As Trish's thighs part I see a hint of sheen on her now hairless pussy.\n\nWhile Jackie wears a half cup and panties, Trish who is always conscious of her slight tummy has favoured a fitted purple bodice that laces at the sides. It is embroidered satin with the previously ogled lace cups.\n\n\"Fuck...\" I shake my head and try really hard to make eye contact with the ladies. \"Holy fucking shitballs.\" My hand is shaking and the ice is clinking, so for safety reasons I place it down on the outdoor setting.\n\n\"I think that's the response we were going for.\" Trish nods at Jackie.\n\n\"It's good enough for me.\" Jackie smirks.\n\n\"Happy Valentine's day Darlin.\" Trish tells me, \"Do you like your presents?\"\n\n\"God fuck.\" Is the nearest I get to human communication. \"Uhuh.\" Nodding furiously.\n\nJackie click clacks over to me and pulls me down for a toe-curling kiss then releases me saying in a low breathy voice, \"If you're a good boy you can unwrap them later.\" She gives me a very grown up wink and as she walks away, I notice her little heart windowed knickers are actually a thong. A red ribbon separates her impossibly toned butt checks and ties in a small bow with the top ribbons that come from the sides.\n\n\"Ahem...\" I look up to see a frowny Trish, \"Does the old chick get a second look?\"\n\n\"Grrr...\" I actually growl as I grab her. \"She gets the full inspection.\"\n\nMy hands roam her beautiful body and confirm all my visual theories. Her bum is glorious, her tits full and lovely, her crotchless knickers very crotchless and her pussy, sensationally hot and wet.\n\n\"Oh god stop it Tim.\" She pushes me back, \"I'll be done before I start. You like?\"\n\nShe twirls for me.\n\n\"Fucking sensational love. Fucking...\" I make a mind blown gesture with my hands.\n\n\"I was worried that my competition might... I'm not eighteen...\" She looks down.\n\nTaking her hand, I pull it to where my erection strains at my suit pants. I raise an eyebrow at her in question.\n\nShe smiles and hugs me. Then looks at me a little like I'm retarded.\n\n\"Jesus Tim. How old are you?\" Roughly, she untucks my shirt and does the buttons up correctly. \"Someone a little nervous, lover?\"\n\n\"Feel a little old too, darlin. Not the gym fit fella I used to be.\" I say as I tuck my shirt back in.\n\n\"You still ring my bells hon.\" It's her turn to pull my hand to her crotch for confirmation. So, I oblige and luxuriate in the wetness of her for a moment.\n\nThen raising my fingers to my nose, I say, \"Ah, the eighty-six vintage. A lovely year.\"\n\nShe laughs at me and says, \"Come on inside. Maybe you'll get to try the two-thousand and one.\"\n\nStupidly I had picked up my drink and taken a sip of whiskey. It came out of my nose. That burns. My reaction seems to have amused her and taking my hand she leads me into the kitchen.\n\n\"Oh. That reminds me. I stole a little something from Dad. After the waxing, we dropped past to check the pets while they're away. There's a little blue pill on the kitchen bench next to the coffee machine. I don't know what it will do, but it might give you an edge.\"\n\nOkay, that just happened.\n\nJackie is putting take-away containers on the table and setting out utensils and plates.\n\n\"Jayjay,\" Trish calls to her.\n\n\"Yup.\"\n\n\"I think it's lovely that Tim dressed nicely for us, don't you?\"\n\n\"Kinda cute. Like he's going to prom or something.\" She smiles at me.\n\n\"Well given our choice of clothing I think he's WAY overdressed, come and help me a moment will you siss?\"\n\nShe's not so confident in her heels as Trish but she crosses the tiled kitchen quickly.\n\n\"I'll take care of the top half; you do the bottom.\" Trish tells her tugging at my suit.\n\n\"Ooh.\" Jackie says reaching straight for my belt. \"Goody.\"\n\nTrish has my jacket off quickly and hung over a chair. I'm quite distracted as she kisses me deeply and unbuttons my shirt. Distracted by little fingers gently tugging my zip down over my engorged dick. Little fingers pulling my pants by my belt, over the cheeks of my backside. Her hot breath on my thigh as she squats intent on her task in front of me then slowly slides my pants all the way down to my ankles.\n\nAs Trish's tongue tangles hotly with mine and her hands push under my now open shirt to smooth shapes in my hairy chest, another mouth follows my pants down my leg, kissing in little steps to my knee. Where she laughs.\n\n\"Should have taken your damn shoes off first.\" She says then busily unlaces my doc martin dress shoes, lifting first one then the other to remove my socks and then ultimately my pants.\n\n\"You're just gunna have to get a bit more practice undressing him then. Aren't you, hon?\" Trish tells her while watching my reaction. Which probably confuses her. Instead of whatever she expected she sees my eyes widen and I suck a deep breath past surprised lips.\n\n\"Tastes as good as it looks.\" We both look down to see Jackie has pulled the top of my jocks down, released my throbbing member and is tentatively licking the tip of my penis.\n\n\"Anyway, dinners served.\" She says standing up. \"And I've got something of an appetite.\"\n\nThen looking at Trish and my face she says, \"You should probably put dessert away Siss.\"\n\n\"Woah...\" Trish says watching me try and stuff my stupidly hard dick back in my jocks. \"Come on, you heard the lady.\"\n\nOnce we've seated ourselves, a weird normality seems to return. Despite the fact that my wife and her sister sit across from me in stunning lingerie and that I'm now half naked too, we talk about things like my current project, Trish's promotion and Jackie's options when school finishes.\n\n\"I like what you do Uncle Timmy. Sorry Tim.\" She corrects herself and blushes a little. \"I'm doing well in my math and tech classes. My English is pretty shit but I should get good enough grades to get into a civil construction course at T.A.F.E.. I sure as shit couldn't do what you do Trish. I'd hate being away from home so much. I'm sure you get good money, but you know.\"\n\n\"It does get hard.\" Trish says and winks at me. \"I miss Tim, but it pays the bills and we make up for it when I get home.\"\n\n\"A smarter architect kind of bloke, would probably make soundproof walls.\" Jackie tells me, \"Then I wouldn't know she isn't joking.\"\n\n\"Bubbly?\" Trish asks.\n\n\"Sure. Hang on. Need the loo.\"\n\nAs I watch the stream of piss splash loudly in the toilet, I shake my head in disbelief at how totally normal it feels to be in this present moment. Normal with a big dash of excited and horny. When I return with the champagne and three glasses the girls are talking about breasts. Strangely, I happen to really like breasts, so I notice the change in topic quickly.\n\nPouring wine, they each thank me but are undeterred from their train of conversation.\n\n\"About twenty years old.\" Trish says.\n\n\"That fucking long.\" Jackie shakes her head, \"I'm stuck with mosquito stings till twenty?\"\n\n\"Mossie bites??? idiot. Yours are lovely. They suit you. Any bigger would look silly on your skinny butt.\"\n\n\"I want ones like yours. What do you think Tim? Would her tits look good on me?\"\n\nI pause with my chopsticks in my mouth. How exactly does one answer a question like that? It is clearly in the 'does my butt look big in these?' realm of disaster management for males.\n\n\"Trish's looked like yours when she was your age. She hated them too.\" I offer hoping to dodge the loaded discussion.\n\n\"But did you like them? Do you like mine?\" She sort of pokes out her chest and looks down at them then back at me for approval.\n\n\"Haha, Trish did I like yours when you were her age?\" Side stepping like a game of frogger.\n\n\"Too right. He was like an octopus. Like he had eight hands.\"\n\n\"So, Tim. You didn't say. Do you like mine?\" She's looking pointedly at me.\n\nI don't know very much about women, but I have learned a few things over the years.\n\nThe first is how to hold a woman's handbag in a nightclub when she leaves you with it... You air-guitar that shit. None of that 'camp it up for your mates', or holding it like a time bomb. Air-guitar it. People look at you like, \"Poor girl, I bet she doesn't even know he has that.\"\n\nThe second is that when a woman asks a body image question you have only one option. Immediately ravage her then go to the pub. Hopefully it confuses her and demonstrates how irresistible you find her and when you get back from said pub, you won't be in trouble. If it doesn't work, you still got to ravage her, have a quiet drink and it was worth getting in the shit.\n\nIn answer I place my chopsticks on the table, wipe my mouth with a serviette, stand and holding Jackie's eyes hungrily in mine, stalk around to stand beside her. Pushing her chair to face me I drop to my knees and immediately start feasting upon her perky teenage breasts. Out of the corner of my eye I see her head thrown back in pleasure and Trish's wide brown eyes watching in rapture as she squeezes her own lush breasts.\n\nJackie's small nipples, I discovered, were extremely sensitive. While Trish likes hers nipped and squeezed Jackie responded to firm licking and sucking with the same enthusiasm that Trish did when we played with nipple clamps. The whole time my hands squeeze and grope at the round orbs of dressage toned glutes and my mouth sucks and licks and nibbles at each of Jackie's teats.\n\n\"Fuck!\" She squeals and grips my head tight to her chest with both arms around my neck. Giving her a moment's grace to compose, I take a mouthful of her champagne and holding it in my mouth, recommence my ministrations knowing this time that tiny bubbles are popping all around her delicate pointy nips. \"Ohmyfuckinggodfuckstop. Stop. Stop. Don't move.\" Her butt shivers in contractions and I think she may have actually cum. \"Stay still. Don't move. Fuck.\"\n\nEventually, with a sigh, she releases me and grants me one of her hungry looks. \"How did you do that?\" She asks me. \"Can he do that to you?\" She asks her sister.\n\n\"Sometimes.\" She smiles.\n\n\"Fuck me.\" She pants and composing herself she drains her champagne. \"Fuck.\"\n\nShaking her head, she resumes eating, looking deep in thought and very flushed. I refill glasses and return to my meal. I focus intently on it, not brave enough to look up to the ladies who eat with me. I don't know where tonight is heading but I feel like I'm on the right course. For me at least.\n\nSilence embraces the room in a bear hug. The type of bear hug a grizzly bear gives. All danger and teeth and horror. We pick at food. I feel like I've crossed a bridge too far for somebody. Trish perhaps? Is the jealousy she swore off hitting her? Jackie? Did I overstep?\n\nI dip a spring roll in yummy red sauce and bring it to my lips.\n\n\"Hoy, idiot?\" Trish says with loaded breath.\n\n\"Ah, yep?\" I wait.\n\n\"Fair is fair.\" She says.\n\n\"What?\"\n\n\"Well, you got her off idiot... I want some.\"\n\nDamn... I probably should have looked for vitamins while they were shopping instead of buying wildly expansive gestures of affection.\n\nThere is one gesture of affection that is guaranteed to get Trish off in record time; oral sex. For some stupid reason it ticks a couple of grotty taboo boxes for her and the very fact of me doing it seems to kick her into overdrive. So dutifully, with a grin, I duck and dive.\n\nBeneath the table I lick my way from her toes to her knee's. She has a thing with her toes that drives her fucking bugshit horny, but it's nothing like the thing with her knees. As I lick and tickle them with my tongue, I can smell her starting to flood her bits. Musky 'Trish' smells fill my senses and I nibble and kiss my way to their source.\n\nParting her knees gently with my hands I lean in and drink from the smell of her. This is my home. \"\u00d3r\u00f3, s\u00e9 do bheatha bhaile,\" I sing upon her lips, parting her crotchless panties and licking her from arsehole to breakfast. I tease for a little then I go straight for gold. She doesn't really like this as a preliminary in our love making. It's usually reserved as a standalone treat. She won't kiss me after. Something about the taste of her and the naughtiness of it. So, I feast.\n\nAnd only moments later, even with her disdain for the act she rewards me with a hand to the back of the head and clenching thighs.\n\n\"Go wash your face.\" She tells me when I emerge from under the table. \"There's... something on your chin and I want a kiss.\"\n\nDutifully I wander to the kitchen and splash water on my face. Clean freak? OCD? I don't care, just one of her things. As I return to the table with a beer, and a bottle of pinot noir, (the bubbly is long gone), I hear Jackie asking.\n\n\"No way. He fucking does that? Troy said it smells gross. You like it?\"\n\n\"More than like it, little Siss. Love it. Mmm... It's so naughty and ooh.\"\n\nPlates are empty. Plastic containers are empty. Two girls are looking at me like I'm next on the menu and frankly, I love the fucking idea.\n\n\"So Tishy,\" it's Jackie's pet name for her, \"spa?\"\n\nI hear dual growls and stand in anticipation, then an objection.\n\n\"No uncle Timmy.\" In her best little girl voice. \"You have to unwrap your presents, puweeze...\"\n\nShe stands with my wife and they both make the universal gesture for undress me, by holding up their arms. I don't know how the politics of undressing your wife's little sister and your wife, dictates procedure so I start on instinct and haul my wifey to me buy the waist.\n\nKissing her deeply I search the sides of her bodice for knots and discovering instead a zip at the back, I release her gorgeous breasts. They reward me by dropping heavy into my hands and I slather them in thanks. Knotted nipples welcome my toothy thanks and her grunts and thrusting hips tell me I'm doing ok.\n\nWith eyes full of lust, I breathe and nod at her then turn towards my younger sister in law. Her breasts are already available, just held aloft for my attention, but true to purpose I search for a clasp and she laughs at me. Taking my hand, she pulls it slowly over them and between to a front clasp.\n\nI think it is respect for the value of the garments and thanks in equal parts for the eroticism of the lingerie that causes me to carefully place both garments on the table in a hastily folded heap. Trish surprises me by grabbing my pastel pink shirt and almost tearing it as she throws it on the table.\n\n\"I hate that shirt. I only bought it because Amanda said her husband wears pink.\"\n\nI reach for her knickers but find they are on under her suspenders.\n\n\"Crotchless. Leave them on if you want, but these things are itchy.\" She wriggles for emphasis, so I oblige her, unsnapping the suspenders, unhooking them at the back and tossing them to the table to slowly draw each stocking down her leg. I kiss all the important places on my way to her toes where she simply kicks out of her heels and pushes my head back up to the other side.\n\nAs I rise, I watch Jackie rubbing slow circles in the front of her quite positively stained with damp, red heart-windowed briefs. Frustrated at waiting while I undress Trish, she dips a finger through the window into her pussy and rubs beneath the material. The overwhelming sensory feast of two lots of skin beneath my hands, two lots of smells, of two very aroused women combined with the moans and groans and oh my god, I feel like I'm seventeen and going to pop in my pants.\n\nI'm wearing only a very stretched pair of black cotton bikini undies from which my overfilled dick pokes out the top. As Jackie's pants join the other garments on the table and she gasps when I lick fully along her slit, they both laugh and pull away.\n\n\"Someone enjoyed his presents.\" Trish said.\n\n\"Do you really like that? Or do you just do it because Patricia likes it?\" Jackie asks stone faced.\n\n\"I love it why?\"\n\n\"Well Troy... He...\" Then she frowns and stops for a bit. \"He must have been a jerk I'm thinking. I don't...\"\n\n\"Oh.\" There is a thoughtful moment flash across Trish's face. \"Listen Siss. I've spent a long time training Tim. He didn't really know what he was doing to start with. He wanted to, but he was pretty clueless. That's the thing with boys. They're just, well boys. Inexperienced too. You'll find yourself a nice one and train him up.\"\n\n\"What does it taste like Tim? Is it gross? Do you only do it because she makes you?\" Her face is stern.\n\n\"Fuck no darlin. I love it. It tastes like arousal. And that makes me feel awesome. Makes me feel like I've turned her on.\"\n\n\"Seriously though Uncle... ugh Tim. Does it taste like fish? That's what Troy said.\"\n\n\"Hahaha. He's a dick. If you ever eat a fish that tastes like vagina, find out where it was caught, cause I'm going fishing there. If you eat a vagina that tastes like fish, take the poor girl to a doctor. Seriously, it tastes like umm...\"\n\nI'm probably thinking too hard because I don't notice when Jackie rips off her own stockings and my undies.\n\n\"Tub?\" asks Trish as Jackie and I realise there is someone else in the room.\n\nSuddenly a seriousness hits me.\n\n\"Okay. Just okay. Wait.\" I'm scratching my head trying to grab the thought. \"Look.\"\n\nI take Jackie's hand by the little infinity ring and my wife's wherever I catch it.\n\n\"Look. Promise okay. Promise right now that we will be okay. I'm horny as fuck and don't know how much longer I can think with my proper brain.\" It's poetic stuff you know. \"Just look. NO means no. STOP means stop. I'll listen but sometimes when-\"\n\n\"Idiot.\" Says Trish. \"Last one in is a rotten egg.\"\n\nI watch as they run naked for the tub.\n\nI built it you know.\n\nIt's round with oak sides. The plumbing I borrowed from a broken spa a friend was going to throw out. There is a bench seat all the way around and it could probably hold five people but the most we've ever had in there is four with knees and elbows knocking. My swollen dick shows me the way to it. I think we've all had enough to drink for now, so I leave the wine and glasses at the table. This is back out if you want to time.\n\nOr so I think.\n\nThe first thing that happens as I get almost into the tub next to two beautiful women is Trish grabbing me by the shoulder and saying, \"No you don't just sit there.\"\n\nSo, I park my butt on the edge of the tub and frankly it's a little uncomfortable. I make an 'I don't know' gesture to Jackie who is watching as Trish kisses me then works her way down my torso to oh god holy jesus, suck my cock into her mouth.\n\nJackie's eyes go wide like saucers and mine roll up in my head. This thing my wife does with her mouth is an absolute gift. She could win medals for it. Jackie watches my reactions carefully, studying my hands gripping the hard oak timber and looking quite positively doubtful.\n\nIn just minutes I grab Trish by the forehead and push her back away from me.\n\n\"Fuck... just. Fuck. Not yet.\" It takes a lot of time to balance the ph and chlorinate you know.",
        "\"Hmmph. I wanted desert.\" She pretends to be grumpy at me.\n\n\"What's wrong darlin? Too far?\" I ask Jackie. She has an almost sad and afraid kind of look that Trish also picks up.\n\n\"Siss, you okay? Too much? I just... God I love sucking his dick and I'm sorry I just...\"\n\n\"No. Just...\" She looks side to side. \"I didn't know it could be like that.\"\n\n\"Like what?\" I ask.\n\n\"Like nice. Like you liked it.\" She tells Trish.\n\n\"What?\" We chorus.\n\n\"Do you guys want drinks, 'cause I need a minute. I'm good, just need to think.\"\n\n\"Oh honey. Take all the time you want. And no, I think we're good for drinks. Sound of things we need a clear head. You come back and talk okay. Or not. Either way kiddo.\" Trish tells her.\n\nSome uncomfortable minutes later she hadn't returned, and I stood to go find her. This was my little Jackie. Perhaps she was feeling overwhelmed. I was mortified that maybe we'd over sexualised this whole occasion and brought her far beyond her comfort zone.\n\nTrish put her hand on my chest.\n\n\"You stay. I'll get you a beer. This may take a while.\" With that I watched as my beautiful naked wife walked back into the house dripping.\n\nTrish returned a few minutes later and passed me a phone and a fresh beer. \"Play that.\" She said in angry tones as she handed me a beer.\n\nThe video turned out to be one of those gaggy porn blow job videos where some overzealous wanker stuffs his dick into some bimbo's neck, and she exaggerates gagging. Not my cup of tea. I made a face at it and closed the clip. Then with nothing else but a flagging dick and a worried heart I opened the beer and tried to find out if it had any ideas.\n\nIt didn't. I was still wringing its neck for advice when both girls returned; both still quite naked but now with smiles.\n\nThey got back in the tub and hugged conspiratorially. Both watching me like there was something afoot.\n\n\"What? Fucking what?\"\n\nThey smiled and Trish said, \"Sit up on the edge.\"\n\n\"Huh? No, it's cold.\"\n\n\"I'll warm you up, I promise.\" She grinned.\n\nSuspiciously I climbed out of the warm water into the cool night air and like a leopard eyeing off its prey she crossed the tub toward me. Taking my now limp dick in her warm fingers she held it up towards my belly and licked it, balls to tip. I was quickly getting the notion that this was not a bad moment.\n\n\"Come over here.\" She said back over her shoulder to Jackie. \"You can help.\"\n\nFuck! Limp to rock in moments.\n\nTrish expertly pressed every single one of the buttons she had memorised over the last fifteen years to have me gasping and begging for relent.\n\n\"Stop. Any... Fuck. Close. Fuck. Shit.\"\n\nSo she did.\n\n\"See.\" She said to Jackie. \"Fun. And power. You can have them eating out of your hand. Try.\"\n\n\"Does he?\" She makes a hair grabbing gesture.\n\n\"Hell no. Not if he ever wants another one.\"\n\n\"Unc- Tim... I want to suck your dick, but Troy was really rough. Promise me you won't touch my head okay?\"\n\n\"Ok darlin. Listen you don't have to. It's okay.\"\n\n\"No, I want to. Trish says you like it and she says she kinda gets off on when you shoot. Just...\"\n\nThen I'm angry.\n\n\"What did that cunt do? Do I need to fucking educate that arsehole? Are you okay Jackie, cause... Fuck!\"\n\n\"Shh!!!\" Trish hushes me, \"Big fence but close neighbours okay. The video. He told her that's how it worked.\"\n\n\"Fucking jerk... Oh...\" I need time. \"I need to... I have to...\" There is a red cloud rising round me and I'm sure I'm going to spoil this perfect night, but I can't control it.\n\n\"Uncle Tim!\" A light slap stings my face red hot. \"Stop. I need you now.\" I slide down into the water, then a small naked Jackie is sitting in my naked lap sobbing into my shoulder. Instantly every ounce of anger has turned to protective cuddle.\n\n\"Shh.\" I tell her. \"Shh. We should take this inside. Get our clothes on and think about bed or maybe a movie. I'm sorry. I just love you and that makes me cranky as fuck.\"\n\n\"It's ok. Well it's not. But you know. Boys and porn...\"\n\n\"Boys and porn...\" I echo. Shaking my head I start, \"Look, porn is-\"\n\n\"I know. I'm not stupid but I wanted him to like me.\"\n\nI'd like to say something smart and empathic. If not to help, then just to make them both stop smiling lovely soft eyes at me while I climb down from this cloud of anger. About then I'm reminded of last night as Jackie, more aware than I, wiggles gently on my lap against my growing erection.\n\n\"Sorry.\" She says sincerely. \"Sorry I almost spoiled tonight.\"\n\n\"Forever darlin.\" I tell her and kiss her little bow lips. \"Forever. I will forever get angry if someone mistreats you.\"\n\nWe're all silent a while and I'm grateful for the dregs of my beer to sip at while we navigate a moment.\n\n\"Can I touch it please? Just touch.\" For emphasis she wriggles her little butt on my erection. Trish smiles from across the tub and nods solemnly and makes a 'please' praying gesture with her hands.\n\n\"I'd like that.\" I kiss her forehead.\n\nNuzzling herself into my neck she reaches between us to clasp me firmly around the base of my dick. I throb gently in her warm hand and she slides up the length of me to find the tip and run lazy circles around my knob with her thumb. It almost tickles, her touch is so light.\n\n\"Would you sit up on the edge for me Tim?\" Puppy dog eyes get me every time. \"I want to suck you off.\"\n\nGroaning with lust I comply. Trish scoots closer to watch as Jackie kneels on the bench and lowers her lips to my dick. She puts just the tip in her mouth and closes her lips gently around me. Her tongue dances on the underside of me as she sucks and bobs slowly.\n\n\"Are you swirling like I did on your thumb?\" Trish asks and it's almost comical when Jackie nods and bobs on my dick in answer.\n\n\"Hold the base firmly and jerk it a bit.\"\n\n\"Oh god.\" Slips from my mouth as Jackie takes me a little deeper then withdraws to suck only the tip again. The edge of the orgasm I was riding earlier returns quickly, if not from the fact that Jackie is doing an excellent job then from the view I have. My wife is smoothing Jackie's hair out of her face as her little sister looks up at me while my dick disappears into her pouting, sucking, bow tie lips.\n\n\"Fuck, Jackie darlin. I'm real close.\"\n\nShe stops bobbing and slows her tongue to slide firmly beneath my glans and she sucks and sucks and her eyes plead with mine. Instinctively one of my hands reaches for her jaw. She flinches but allows me to caress her cheek. As I teeter on the brink of release, I make a mental note to flog that stupid Troy cunt.\n\nMy hips announce my orgasm, bucking slightly and surprising Jackie as an inch or two of extra cock enters her mouth. Pulling back up my shaft again there is fear in her eyes first then surprise as my balls clench up and I tip into spurting.\n\nTrish is smiling at Jackie, \"That's it. That's it.\" She has one arm around the back of me and the other on Jackie's shoulder as her little sister takes my load in her mouth. The moment is surreal but pales in comparison to the one which follows.\n\nAs my body finishes convulsing, Jackie pops me from her mouth and with a cheeky grin she opens her mouth to show Trish and I the mess of semen on her tongue. Then looking directly into my eyes, she closes her pretty little lips and swallows.\n\nMy butt is sore from the edge of the tub and my knees totally untrustworthy, so I slide down into the water and lie my head back to look at the stars and try to recover.\n\n\"Fuck. Jackie darlin that was sensational.\" Ordinarily I'd be quickly limp but the little tablet I washed down earlier must be doing something. My erection softens but I'm still half hard when Jackie kisses my lips. The taste of me lingers on her tongue. Then she pushes away to sit opposite me looking deep in thought.\n\nTrish takes advantage of the opportunity to sit on my lap facing Jackie. She leans back against my chest and raises her chin back for her own kiss. She whispers, \"That was hot. I was worried how I'd feel seeing you with her. Look.\" She pulls my hand from the side of the tub down between her legs where I find a hot swollen hole that is drenched inside.\n\nJackie sits quietly watching us smiling. I work my wife's clit in firm tiny movements. The spa water robs lubrication, so I press a finger into her and leave it there, sort of clenching my hand against her mound. She makes small hip movements in time with my gripping and beneath her I start to harden again.\n\n\"I liked it.\" Jackie says, \"I was worried when you touched my face, but I shouldn't have been. It's like 'you' right? You'd never hurt me.\"\n\nI nod and smile and beneath the bubbles Trish puts a hand over mine and presses my finger deeper into her, holding me more firmly against her clit as she grinds it against me.\n\n\"Are you two fucking?\" Jackie asks, sitting forward.\n\nTrish and I both shake our heads.\n\n\"Then what? I bet you SO are.\"\n\nA naughty thought prompts me to say, \"come over here and I'll show you what we're doing.\"\n\n\"Other side,\" I direct her to my left and put an arm around her shoulders snuggling her in against my side. My left hand explores her long neck and dips below to cup and squeeze at her breasts. Her quiet moans join Trish's slightly more urgent ones as I slide lower still over her belly button. Getting the idea, she pushes back into me and lifts her left leg up onto the bench and stretches her right leg out across the tub.\n\nShe too puts her hands on mine and guides me to her hot centre. Like Trish, inside she is sopping wet. Who says men can't multitask? Trish's moans are getting louder and she's bucking against my hand harder now, while Jackie is using my fingers to show me what she likes.\n\nJackie runs my index finger the length of her slit, opening herself at the bottom and sliding it through her slimy centre, dragging moisture up to rub it around her clit. She repeats this process over and over for a few minutes then pushes my finger inside her and puts her palm over my hand. I try to move it as far inside her as I can but from this angle it's difficult to get more that the first two joints of my finger inside her.\n\nHer face betrays her frustration and as Trish goes rigid and clamps her thighs around my hand, Jackie moves out from under my arm and turns around to face me, scooting her butt closer on the bench to my fingers. Trish shudders on me some more then limply lies back on me enjoying her aftershocks but not releasing my hand.\n\nFrom this new angle, I'm able to work a thumb inside Jackie's tight little hole and fuck her with it. This causes my index finger to grind on her clit and she thrusts her hips up off the seat in time with my probing thumb. Trish finally flops her legs limp and I remove my fingers from her sex to hold her around the waist against me.\n\nIt occurs to me that my thumb is inside Jackie quite deeply without meeting resistance. Deliberately searching now, I find only the slightest ridge of what's left of her hymen. Trish is watching her ride my thumb intently. Jackie's head is thrown back and she is repeating, \"Fuck, fuck, fuck.\" With each thrust of her hips against me she swears again, until she too clamps her thighs around my hand and arm and bucks spastically against me.\n\nShe squeals loudly then says, \"ooh, ooh, ooh.\" Each utterance in time with the contractions of her tight little pussy on my thumb.\n\n\"God, old Peters next door will have the cops here shortly with all this noise.\" Trish giggles on my lap.\n\n\"Oh god, get. Get it out of me. Too sensitive.\" Jackie says, \"Get it out!\"\n\n\"Your legs darlin.\"\n\n\"Oh.\" She unclamps from upon my arm then as I slowly withdraw my thumb she cries, \"hooooo\" and bucks again forcing it back inside and coming again.\n\n\"Oh god Tim. Fucking insane. Don't move.\" Like I could anyway with her legs again clamped on my arm and her sated sister relaxing on my lap. \"Oh god.\"\n\nStaring wildly at me she deliberately reaches down between her clamped thighs, takes my wrist firmly and pulls me out and away from her while she still scrunches in the throes of her orgasm. She moves to sit on the bench properly now with her hands beneath the water holding herself mumbling and trying to catch her breath.\n\nTrish is stirring on me, her fingers moving down between her thighs to trace lines along my now fully hard again dick. We sit in silence. I suppose each of us gathering thoughts.\n\n\"Tim hon?\" Trish breaks the silence eventually, \"Go grab us some towels? I'm starting to prune up.\"\n\nMe and my ridiculous looking boner climb out of the tub and I fetch towels from the hamper nearby. I dry myself and wrap the towel around my waist. Not for privacy but because, out of the water, the slight breeze is chilly. The ladies are talking quietly between themselves and when they see me, they both smile and stop talking. This can't be any good.\n\nI hand them each a towel and help them down onto the decking. They are whispering and all I make out, \"You.\" \"No, you.\"\n\n\"Unc- I mean Tim.\" She smiles at me as she wraps the towel around her delicious young body. \"I very much want... No, I almost need...\" she shakes her head then blurts, \"you to take me into the bedroom and fuck me. If you can. If you... I don't know. But I really want you.\" She watches me like I am supposed to say something. I look to Trish who is smiling. She extends a hand to me.\n\n\"I want it too hon. But it's completely up to you.\"\n\nMy towel pokes out rudely saluting the concept, it just takes my mind a little longer to understand this is really happening. All I can do is slowly nod. I think the blood that is needed in the communication part of my brain is all drained to my throbbing dick. I take Trish's hand and Jackie puts my arm over her shoulder and snuggles into my side.\n\n\"I love you Uncle Timmy.\"\n\n\"I love you too darlin.\"\n\n\"I have a thing to ask.\"\n\nThe girls release me to slide open the door to the house. Jackie stops me as I step inside and says, \"I want Tishy with me.\"\n\nI nod.\n\n\"I'm just really nervous is all.\"\n\n\"You're also very beautiful. I've never been able to say no to you, what makes you think I'd start now?\"\n\n\"I want her to record us.\" She drops her eyes away in shame or something like it.\n\n\"What?\"\n\n\"Like, on my phone. I want to remember this. It's all so perfect. I promise it won't end up on the net or anything like that. Just, I want one day to be able to look at it and remember tonight. It just all feels too good to be true.\"\n\n\"You sure? I'm no porn star.\" I rub my bit of a belly for emphasis.\n\n\"It's not about that. Just. It's okay if you don't want to. But...\"\n\n\"Well I'll be Ron bloody Jeremy and you can be the barely legal teen.\" Trish and I laugh. We actually watched something like that together the other night.\n\n\"Come on then. Don't keep a girl waiting, it's rude don't you know?\" Jackie takes my hand and drags me down the hallway towards the master bedroom. Looking back over my shoulder I see Trish smiling at the screen of Jackie's phone as she records an impatient young woman dragging away her prize.\n\nJust inside the door Jackie stops and sucks in her bottom lip nervously waiting to see what happens next.\n\n\"Slow and steady.\" My brain tells my boner. So, sitting on the bed I reach for Jackie and pull her to sit on my lap. My hand takes her neck and pulls her to me for a gentle lovers' kiss. Her tiny tongue flicks at mine and when her breathing is starting to get a little ragged, I move to kiss along her jaw line to her ears. Then down her pretty young neck to her collarbone.\n\nJust below which is the knot of her towel. The last real barrier between her and womanhood is slipped off to fall around my knees and her lovely lithe body is revealed to my wandering hands. I lift her to straddle and face me and resume my lippy exploration of her offered body. The slight rounds of her young breasts are peppered with goose bumps which I attempt to kiss away.\n\nHer pointy hard nipples beg for attention and as I suck them, I feel her start pushing down along my dick that's trapped beneath the towels. Dry humping me, her mouth hangs open in a wordless expression of desire. At that moment I'm glad that Trish is videoing. I simply must see that rapturous face again.\n\nLooking over, I see Trish has lost her towel and openly masturbates as she films us. I stand and take Jackie up with me, her legs wrapped around my butt and her arms around my neck. With a very ungentle shove I throw her to the bed. She giggles as I pounce and blow a raspberry on her stomach.\n\n\"You fucking clown. Stop it. Stop it.\" She giggles while I tickle. The mood had become so intense I just had to break it. Grabbing her knees, I pull her closer to me. In the horseplay, my own towel had fallen forgotten to the bed and as she glanced down to see where I was pulling her, she gasped.\n\n\"Slow. Tim. Slow. It's big.\"\n\n\"You're getting ahead of yourself young lady. I've a good mind to teach you a lesson.\" I kiss one knee then the other. Then I push them lewdly apart, spreading her open to me. Her eyes and mouth make wide circles as I commence kissing and licking up the sensitive skin of the inside of her thighs until I reach the crease before her mound.\n\nNuzzling my nose in the soft skin just above her vagina I sniff deeply, drinking in her sweet aroused aroma. My heavy breath warms her slick wet lips and I watch her eyes as I draw slowly back down to the other knee.\n\n\"Oh fucking fuck.\" She squirms and bucks her pelvis up as I tease my way back to my prize. This time I mimic the movements of her fingers in the tub and poke the tip of my tongue into the very base of her slit and slide it slowly up to circle her clit. As I find the little nub both her hands tangle in my hair and force me hard against her.\n\n\"Not yet naughty girl. I want to eat you up.\" And so, I do, repeating the long slow lick and the circle around her clit until she's making up swear words and bucking hard against my face. Only then do I take a finger and wet it in the folds of her while I suck her little button. It presses against her heat and slowly spreads her tight walls on its way inside her body.\n\nAgain, I confirm the presence only of a little ring of torn hymen. Most likely courtesy of horse riding and tampon use. It's a little constricting but under my finger it stretches. I curl my finger up against the top wall of her while I worship her clit and pull the little band of skin against her pubic bone.\n\n\"Motherfucker! Holy fuck.\" She growls at the ceiling. \"What the fuck even is that? God damnit Uncle Timmy. Fuck. Good. So good.\"\n\nWhen I look up towards her face, she's stuffed a pillow in her mouth.\n\nSmiling I wet another finger in the mess of her crotch and press it in along with the first. Her muscles fight it but eventually relax around it and soon it joins the first in stroking along the top of her hot wet vagina.\n\nThrough the pillow I can hear muffled groans of \"Yes. Yes. Fuck.\" It's time, so I suck hard on her clit and unleash a torrent of mumbled speech upon it. My tongue flicks her as I tell her how I'm going to ram my cock in her tight little cunt and split her the fuck open like a ripe watermelon and other atrocious imagined bullshit that she'll never hear from my mouth but her clit feels every syllable spelled out upon it.\n\nThen wham; her legs snap shut like a crocodile taking prey. I'm trapped against her lovely sex as her vagina tries to break my fingers in its vice like contractions. Over and over she bucks against me and a continuous howl of lust is sung into the pillow. Starting to see specks before my eyes, I struggle out from between her legs and leaving my fingers inside her clenching cavern I put the palm of my other hand firmly on her mound and watch her young body convulse in pleasure.\n\nI can't think of a time I've ever been prouder of myself.\n\n\"Cunt.\" She says throwing the pillow at me. \"What the fuck even was that?\"",
        "\"I can't even fucking deal.\"\n\n\"Never...\"\n\n\"Oh my fucking god.\"\n\nI watch her pretty face heaving for breath and her blue eyes rolling upwards as she tries to settle. My hands are perfectly still inside and upon her and I can feel every little aftershock. When they are completely done and she sits up to tell me, \"Get up here and kiss me,\" I remove my fingers and wipe my face and hands on my towel.\n\nHer kiss is thanks and love and wonder. She speaks through it, broken parts of whatever she's trying to communicate to me. My neck is a little sore, so as we kiss, I roll to my back and bring her over on top of me. The heat of her sex lands perfectly on my hardon and as we kiss, I feel her wetness slide upon me.\n\nSomewhere, mid ejaculated snippets of love speech, she freezes and looks me hard in the eyes. Drawing back she presses hard down on my boner and deliberately now starts grinding her clit up and down my solid shaft. I had forgotten Trish was even in the room until I look down at the junction of us to watch her slide on me and see her standing close behind Jackie with the camera right up close to my balls.\n\nHer eyes find mine for a moment and she mouths, \"So fucking hot!\"\n\nJackie freezes. I lift my eyes to hers and she is searching mine. \"I love you Uncle Timmy. I know you said just Tim but that's what you will always be. My forever love, Uncle Timmy.\"\n\nI realise also that the hole of her is paused directly over the head of my dick. With a tilt of her hips it presses hard against her and infinitely slowly penetrates her. The wonder in her eyes at that moment will forever be etched in my mind. Then with ever so tiny movements she rocks millimetre by millimetre deeper onto me.\n\nWhen the whole of my knob is inside her I fear I'm going to shoot off from the sheer heat and pleasure. Her tight walls clench behind the flare of my glans and she reaches down to touch at where we join.\n\n\"You're actually inside of me.\"\n\nShe pushes another small way down.\n\n\"Slowly.\" I tell her. She nods and presses down again.\n\n\"Ooh shit. That actually stings a little.\" I think I can feel the tiny band of skin against the glans of my penis, but I am probably just imagining it. Her muscles clench and release as she lets her weight press her harder against the ring.\n\nShe's giving up I think, watching her facial expressions and feeling her withdraw. Then slam. She sits on my pelvis. Holding one of her hands on her abdomen, she watches my face below her with her mouth open to speak but all that comes out after a long moment is tears.\n\n\"Oh, bloody hell. Jackie darlin, are you okay love?\"\n\nTo answer this, she simply lowers her body down upon my chest and I wrap her in a hug.\n\nTrish is still filming but comes closer to rub Jackie's back. \"Shh hon. Shh.\"\n\nA minute or more later Jackie takes a deep breath and speaks calmly and clearly from her cocoon on my chest. \"I'm sorry for crying. It's just so beautiful. You're in me and filling me up and around me with your arms and holding me and I'm holding you inside my body so closely I don't think you could ever get closer to a person you love and it's so intimate that it all overwhelms me. Is it always like this?\"\n\n\"No hon,\" says Jackie \"what you are feeling is making love. It's like this with someone you really love, sometimes anyway. Sometimes it's just plain fucking, sometimes it's kinky, sometimes it grotty, it is only ever what you make it.\"\n\n\"Well. I fucking love this right now. I fucking love you Uncle Timmy. And you Tishy. And I fucking love fucking. Or making love or whatever this super-personal, awkward, messy thing is.\"\n\nWith that she pushed herself up, drawing me out of her then slam! Dropping herself back down on me. She was so tight that each time she did this I felt like I would shoot off. But her moans and her enthusiasm and the way she watched my face with delight because her actions could make me moan and make me make faces; I couldn't stop this for her. Didn't want to.\n\n\"Jayjay hon.\"\n\n\"Wha? Oh Tish. So good.\" She says dropping down heavily upon me again.\n\n\"Hey little Siss, you know how you warm up a horse before events?\"\n\n\"Ah, yeah?\" She stops riding me for a moment to have this bizarre conversation with her sister. I'm grateful for the opportunity to try and settle and last more than another three thrusts.\n\n\"Well it's a bit like that with boys. If you go straight to a gallop, they'll cum in no time. Sometimes before you're even close. When I want a really good one, I start off like I'm sitting a real lazy walk then as I get closer, I kick it up to canter. That way he's usually there when I am ready.\"\n\n\"Oh. So...\" Then she does that same thing Trish does and now I understand where she learned it. She sits down fully on me and rolls her hips slowly back and forward moving me in small grinding movements inside her. As I watch her, I realise it's the same motion as riding a horse in a walk.\n\n\"Oh god Tish, thanks. It presses ooh! Moves... Oh damn oh, and my clit.\"\n\n\"Yup.\" Says Trish and goes back to filming.\n\nDespite feeling a bit like an accessory for a moment, I'm grateful for Trish's interference. The slow rolling motion as I churn inside this lovely little woman is less stimulating and I may even make it another thirty seconds.\n\nShe leans down to lock lips with me. \"I love you Tim. You're a beautiful man. Thank you for this.\"\n\n\"I love you too darlin, and the pleasure, believe me is all mine.\"\n\n\"Really? Am I doing okay?\"\n\n\"Bloody fantastic. It's not a competition. I feel really privileged to be able to share this with you. You're beautiful and sexy and you feel so good down there. I'm not going to last a lot longer.\"\n\n\"Good. Me either.\" She growls and rises from my face to 'kick it to a canter', I believe was the terminology. In any case she rose up off me just enough to hold my shoulders tightly and ride me with a faster bouncing rhythm.\n\n\"Tim. God. Fuck. Owah. Yes. I'm.\" Then she let out that shriek she did earlier and I was locked in a tight velvet fist of spastic gripping that sent me over the edge.\n\n\"Oh god I can feel you. I can feel it. Ohohoooh.\" Then she went totally rigid and collapsed on my chest. Her hair was in my mouth and eyes so I couldn't see but I could feel when the massive contraction finished and the aftershocks began. We lay like that in each other's arms for long minutes. Trish put the phone down and came to lie down with us, rubbing Jackie's back and my legs.\n\nEventually I had softened enough that one of the smaller contractions spat me and a squelchy mess out.\n\n\"Eww gross.\" Giggled Jackie, \"it's so messy. I love it. So grotty.\"\n\nThen she rolled off me. Spreading her arms out beside her like a snow angel, she closed her eyes and sighed. \"I am so fucked out right now. Seriously, I think my poor little kitty is never going to close up properly again. Hold my hand please Uncle Tim. I ooh... so damn good...\" She closed her eyes as her fingers wove between mine.\n\nTrish and I lay watching her bask in the moment. A few minutes later her hand relaxes and loosens its grip on my fingers, and I think her snoozing still with that big grin.\n\n\"She's sleeping.\" I tell my beautiful wife who snuggles beside me.\n\n\"That really was beautiful, hon.\"\n\n\"Mmm.\" I reply. It was pretty fucking awesome from my end of it all too. \"Do you think it will affect... ah...?\"\n\n\"Yes. Only in a good way though. She's very lucky. A lot of the problems I had growing up were lack of sexual confidence because I didn't have a safe way to explore it. Boyfriends were demanding and I didn't know what I wanted or didn't want. I let them put a lot of pressure on me. Hopefully she'll be a little more assertive.\"\n\nTrish reaches over and takes the towel then wipes off my dick and balls.\n\n\"Ha, you right there? I can clean myself you know.\"\n\n\"Listen I love my sister very much, but I'm about to see if I can get you hard again and don't want to taste her mess.\"\n\n\"I'll go and wash up darlin. Be right back.\"\n\nIn the bathroom I take a piss and wash my dick and balls in the sink. We really did make a bit of a mess. When I return Trish has given herself a head start and is sliding two fingers in and out of herself as she watches me walk to the bed. This vision alone, my masturbating wife next to her naked freshly fucked sister is enough to have my abused penis nod with the first surges of erection.\n\n\"Bring that lovely thing here, hon.\" So, I kneel above her breasts and brace against the wall as she slurps greedily on my dick. That little tablet must do something because I'm hard again in record time.\n\n\"In me Tim. That was all so hot. I'm right on the edge.\" She rolls to lie on her stomach and lifts her butt high in the air with her knees spread wide.\n\nTaking her cue, I steady myself behind her by holding her gorgeous round bum with one hand. My other hand holds my dick pointed towards where she spreads herself lewdly waiting for me. Sliding straight in up to my balls, I pause and relish the sensations of Trish's lovely pussy. I shouldn't compare the two sisters, but Trish is so much more luxuriant and accepts me easily. It's just highlighted by my recent journey into Jackie's tightness.\n\n\"This is my home.\" I think. The novelty of Jackie's depths was lovely, but this is where I belong. Starting slowly at first, I simply enjoy the warm wet welcome and slide deeply in and out despite Trish's urging thrusts back at me. Reaching around I fondle one heavy breast and pinch its crowning nipple.\n\n\"Just, fuck, me, Tim. Hard. Now. Please.\" Trish grunts at me in time with my deep thrusts. So both hands on her hips now, I pull her onto me in hard slapping thrusts that shake the bed with our enthusiasm. Each time I bottom out I feel her fingers working furiously on her clit against my balls and the tip of my dick against the back of her cervix.\n\n\"Aw. Oh. Oh. Argh. Oh.\" She's not usually very loud during sex. She must be more worked up than I thought. In no time she reaches back with the hand that's been on her clit and wet fingers pull and push at my thigh, urging me to pump faster.\n\n\"Almost. Mm. mm. mm. oh. Damn. It. So. Close.\" There's a thing that she sometimes likes, so I lick my thumb and bring it to the dark pucker of her bum. Running circles around the little ridges of that hole rewards me with, \"Yes. Yes. That. Oh. Don't. Stop. More.\"\n\nPressing my thumb more insistently against her bum the little ring parts and I push my thumb in deeply enough to feel my dick slide against it with each thrust. Instantly I feel her clamp rhythmically at my dick and that same hand holds me still against her. Held deeply inside her I wait for her to ride out her orgasm.\n\nWhen she falls forward to the bed, my dick springs up out of her and a series of small air bubbles queef out of her. She always finds that hilarious and giggles as she rolls over to look at me.\n\n\"Ew... what is that?\" alerts us to our audience.\n\n\"Ha, fanny farts.\" Trish explains, and both girls giggle as another series of queefs escape.\n\n\"It happens sometimes when we get a little vigorous.\"\n\n\"That was fun to watch. Is that what you meant about the difference between making love and fucking?\"\n\n\"Sort of. You'll work it all out as you try new things. Don't be in too much of a hurry hon. Just enjoy it all.\"\n\nMeanwhile my dick was still standing at attention as I lay beside the two women.\n\n\"I want a go at that. I want it doggy style.\" Jackie says looking straight at Trish. \"Can I?\"\n\n\"Sure, if he wants. I'm a bit sensitive now anyway. Hold on hon, I'll clean him up for you.\"\n\nMy penis and I were both delighted with this idea as I rose to kneel, and Trish towelled me off.\n\n\"You want me to go wash up?\" I asked Jackie.\n\n\"Hey?\" she squinted at me, then shook her head when she worked out what I meant, \"No just get over here and fuck me like you did to her.\"\n\nTo emphasise her request she rolled over, face down bum up and wagged that toned little butt at me. The sight before me was spectacular. Spread knees, gaping pussy and an arse to die for. My fingers find her already very wet and smearing her along my shaft, I line up with the little dark hole between her small lips. In this position it's actually a little easier to feed myself into her than it was just a little while ago.\n\nHer no longer virgin pussy is still outrageously tight, but I'm soon balls deep and pressed up hard against her cervix. She more slightly built that Trish, I guess I'll have to limit penetration a little so as not to hurt her.\n\n\"Oh fuck, that hits a different spot again. I liked before but this is definitely deeper.\" She starts doing some rolling thing with her butt that pulls me in and out and inch or two. \"I always wanted to try this out in the bedroom.\"\n\nWith that she speeds this motion up until her butt is bouncing in rapid jerky bouncing movements. The feeling is sensational as her tight vagina almost vibrates on my dick.\n\n\"Oh goddamn Jackie. That's amazing.\" I instantly regret speaking because she stops doing it and just holds me in deep.\n\n\"Haha, it's called twerking. Feels pretty damn good from this end too just, it's like really hard to keep up.\"\n\nWith that I start a slow thrusting, testing out her depth. After bumping her cervix a few times, she angles her butt differently and my stroke ends just behind the harder tissue. As I realise this she speaks up, \"Now harder Uncle Timmy. Like you did her.\"\n\nThat sort of enthusiasm is contagious, so I oblige, and I am soon drawing out expletives with every hard slap of my thighs against her cheeks.\n\n\"Fuck, me, fuck, me, oh, yes, oogod, fuck,\"\n\nIt's hard to believe that this little eighteen-year-old body can take the pounding I'm giving it. My hands pull her back as she throws her hips back and the root of my cock pounds on the opening of her pussy. My balls slap hard on her and I'm sweating with the exertion.\n\n\"Oh fuck yes, nearly, so, close, so, so, oh, so,\"\n\nWondering if it runs in the family, I lick my thumb and test her little pucker with the slightest circling touch.\n\n\"Oh fucking god yes. Yes. Yes.\"\n\nThen her whole body shakes and her pussy clamps down again on me. I'm not far off myself so I continue thrusting through her orgasm. The strong spasms add to the sensation of her silky tight walls sliding over my engorged knob and although usually very quiet in the bedroom, the explosive orgasm that rips though my body flooding her insides for the second time this evening tears a primal cry from my throat.\n\nWhen I've emptied everything I can find inside her exquisite little pocket, I release her hips and collapse forward on top of her with my dick still pulsing inside her young body.\n\nAs my breathing settles, I realise that the tight grip her vagina has on me has kept me almost hard so I test my hardness with some small thrusts. It's not rock solid but still hard enough to move within her so I pull out and roll her over to re-enter in the good old missionary position.\n\nGently, sliding in and out while she rides out aftershocks and gazes up at me with her mouth open and her blue eyes holding mine, I just revel in the union of us. She pulls me down to kiss me and her legs wrap around me holding me still.\n\n\"Stop a moment please.\" She speaks against my lips. \"Just a little while.\"\n\nI'm pulling outwards, but she holds me tighter with her legs. \"No stay inside me. Just fucking still.\"\n\nCaressing my face, she smiles and tells me, \"This is nice.\"\n\nHer gorgeous little breasts rise and fall with her breathing and supported on my elbows above her I watch her blissed face as she settles.\n\n\"Okay. Okay.\" She smiles, \"Now that was definitely fucking.\"\n\nBeside us Trish laughs reminding us of her presence outside the little cocoon of us.\n\n\"I liked it. A lot.\"\n\n\"I kinda enjoyed it a bit too you know.\"\n\n\"You can move again. Just nice and slow now okay Uncle Timmy.\"\n\nSo, slow I go. Not so much thrusting as just letting our pubic bones stay pressed together and rocking in and out of her in short but deep strokes. My mouth finds her nipples and plays autonomously to the rest of me, following its own need for contact with the tiny nubs atop her small but perfect breasts.\n\nUnhooking her legs from behind my back she spreads them out really wide. One touches the wall near the bed and the other rests on Trish's own leg. She looks a bit like an upside down 'w' from my vantage, but it means I reach deeply inside her. Adjusting my angle a bit, moving lower, my penis now enters and runs along the top wall of her. The stimulation is different for me and clearly working for her as her potty mouth kicks in again.\n\n\"Fuck me. That's fucking lovely Tim. Just there, yes.\"\n\nKeeping my weight pressed on her mound and clit I rock in and out and soon a smaller orgasm rolls through her. It shakes her gently in a series of small breathy gasps and snappy clenching pulsess. She smiles deeply at me while I still myself inside her and she gazes lovingly up at me.\n\nFirst, I see a flash sideways of her eyes then they're back on mine. Then they blink. Then her bottom lip quivers. Her breath catches in her chest and her eyes overflow.\n\n\"Get off me. Get the fuck off me. Please Tim.\" She wipes her eyes and won't look back at me, turning her head to the wall while I pull slowly out of her and sit up on the bed. \"This was fucking stupid.\" She sobs into her hands and bats at Trish when she tries to comfort her.\n\nThrough sobs and deep breaths, she manages, \"This morning I was a little girl. A little girl with a massive crush on her Uncle Timmy. I loved him and he loved me. Tonight, he made me a woman and I understand now why they call it making love. Cause now don't just love him anymore, I'm fucking 'IN-love' with him. And he's yours. This was fucking stupid. I should have known. I love you both still, always will, youd're family, but now... Now it's different. I had a lovely night. Please don't feel like you've done anything wrong. I just have to work out my feelings and I don't know how this is all going to work now. I feel like I've taken something beautiful and innocent and changed it and now I might lose it because I want more. I'm so sorry.\"\n\nThen clutching a towel to her naked body, she stands and walks to the door avoiding our worried eyes. \"I'm okay.\" She says to the empty hallway, not looking back at us, \"I need a shower. Please give me a little while before you can't resist the fucking urge to come and talk to me, okay Tishy?\"\n\nA shower seems like a great idea. After Trish and I watch not so little Jackie walk out I turn to her and ask, \"What now? This is exactly what I feared.\"\n\n\"I don't know.\"\n\n\"Can I have that in writing? You always know. That's your job.\"\n\n\"Not this time, hon. But a shower sounds like a good idea.\"\n\nWe don't talk about it in the shower, the gravity of Jackie's emotions weighs heavy on us. We simply soap each other and wash hair and do our normal post-coital, intimate, before bed, shower routine. It's like a rule for Trish that we go to sleep clean.\n\nIt's only early still. Around nine o'clock or so. I won't be tired until closer to eleven. Trish is watching television and down the hall I see light from under Jackie's door. She's not the only one who needs to get her head around tonight. There is a sick feeling in the pit of my stomach where the worry that I've hurt her has settled. I'm still a little buzzed from the earlier drinks so I take a bottled water and head out to the deck where I do my best thinking.\n\nIt's dark tonight. Some clouds have fittingly come over. There's a cool breeze that flaps at my bedtime boxer shorts and I drag a sun-lounge over to lay and watch the clouds roll past the glow of the moon. I beg the glowing orb for answers; staring at it like a contest. \"Give up the wisdom you round bastard!\" I scream in my head.\n\n\"Fuck.\" I shake my head and tell the moon out loud. \"Fuck.\"",
        "\"Hahaha.\" A laugh from the dark corner near the hot tub startles me, \"We sure did.\" I hadn't seen her but as she stands, I can make her out. She curls up in my lap and steals my water.\n\n\"I'm not sure how, but everything is going to work out just fine, Jackie darlin.\" I tell her, pulling her to my chest.\n\n\"Shh.\" She tells me. \"Just hold onto me.\"\n\nSo, I do.\n\nIn the morning, there is a note on the table. \"Mum and Dad are home today. I've gone home. Thank you both for a very special Valentine's Day. Please don't worry about me. Everything is going to work out just fine.\"\n\n.................................................................\n\nBODIES IN MOTION\n\nI kiss Trish. It's a public kiss. A goodbye kiss. A kiss that is on the lips, with a tiny touch of tongue and a greedy hug. Not a sloppy 'let's tear our gear off' kiss. But definitely one that needs to last me four days. She's off to Brisbane for a conference. It's basically an essential networking event in her line of work. We break off before we get too carried away. Her flight leaves in twenty minutes.\n\n\"Now, eat properly.\" She tells me holding my face. \"No take-away. Promise?\"\n\n\"Nope...\" I shake my head. \"I won't. No running off with pharmaceutical reps. Fucking your way to the top is so 1999.\"\n\n\"Haha, it'll be nice to give her a rest for a week. Since Valentine's Day you've been like the energiser bunny. No complaints, but you know.\"\n\n\"Love ya.\"\n\n\"You too, now bugger off.\" She tells me. \"Otherwise I'll never leave. Go on...\" She 'shoos' me.\n\n\"See ya darlin.\"\n\n\"Bye.\"\n\nValentine's day was a bit more than three weeks ago, and I still smile every time I think about it. Then my heart falls. I haven't heard from Jackie since. I've called the house and spoken with Trish's parents They say she is busy with exams and hardly comes out of her room. While it worries me, that's pretty normal behaviour for her. Trish has spoken with her and tells me not to worry, but I miss my random phone calls for nothing that she used to make. I think with Trish away I might make an excuse to go and visit and see if can talk with her.\n\nI'm thinking about what I'd talk about and how I'd have that imagined conversation as I walk across the parking lot to my car.\n\nIn the car my phone has two missed calls and a message. \"Ring me when you get this please Uncle Timmy.\"\n\n\"Hello?\"\n\n\"Tim. Hold on a minute.\" The schoolyard noises fade as I wait.\n\n\"Hi.\" It's a bit breathy.\n\n\"Hi darlin. I've been so worried.\"\n\n\"Fuckwit. What for? I told you I was okay.\"\n\n\"Haven't spoken to you.\"\n\n\"Well, get your silly arse over here and pick me up. I want takeaway and my Timmy.\"\n\n\"Really? Your mum will have dinner, you know how she gets if...\"\n\n\"Oh shit, right... Trish didn't tell you. She rung them. It's all good. Just come and get me already. I'll be out the front.\"\n\n\"Mmkay then.\" I'm confused but happy that I'll get to see her.\n\nThe drive to her high school is tedious through the afternoon traffic. Made worse by my excitement, and the thousands of questions running through my mind. Does she need a lift home? Does she want to talk? Is there a problem? Is she okay? Is she angry with me? Does she feel like I took advantage of her?\n\nPulling into the drop off/pick up lane I see her pretty face light up the moment she sees the car. She's standing with a tall boy with moppy looking brown hair. He's skinny and a victim of teenage acne but has kind eyes, I decide. As I pull up, she points my way then grabs his shirt to pull his face down for a peck on the cheek. Blushing, she waves at him then walks quickly to my car.\n\n\"Uncle Timmy!\" she opens the door and launches across the front seat to put her arms around my neck and bury her head into my neck. \"Missed you.\" She tells my neck.\n\nReleasing me she tosses a school bag and a suitcase in the back seat. \"Take me home Tim.\" She says in a low serious tone.\n\n\"Don't you usually get the bus?\" I ask.\n\n\"Usually.\" She smirks.\n\n\"Who's the boy?\"\n\n\"Mark. He's lovely. Bit of a nerd but oh... Just lovely.\"\n\n\"Boyfriend?\"\n\n\"Sort of maybe, he's so shy still.\"\n\n\"So what gives?\"\n\n\"Haha. Where are you going?\" She asks as I turn to take the exit towards her parent's suburb.\n\nMy phone rings at that moment, so I pull over to answer it. The car clearly has Bluetooth and all that, but I can't be fucked working out how all that works.\n\n\"Tim?\"\n\n\"Gidday Don.\" It's Trish and Jackie's father.\n\n\"How's the project going?\"\n\n\"Yeah not too bad.\" I can't think what project he's speaking of. I have nothing interesting on the table.\n\n\"Trish told us it's a big one. We're proud of you mate. Now, just a few things. That hmmph... Well that the old boiler insists on me telling you. While Jackie's there can you make sure she's not drinking please. Her mother found a couple of bottles of something in the bin the other day and wasn't happy. She's eighteen but she's still at school you know. Anyway, I'm glad she can come help with stuff while Trish is away. Just keep an eye on her okay and you... You work too hard. Use that kid while she's there to take a load off, alright.\"\n\nI hadn't told him he was on speaker. My face presses buttons on the touch screen so I always use speaker.\n\n\"Hi Daddy,\" smiles Jackie.\n\n\"Hi princess, didn't know you were listening. You behave for Tim okay.\"\n\n\"Yes Daddy. I'll help him get a load off.\"\n\n\"That's my girl. Love you now and see you Saturday.\"\n\n\"Bye Don,\" I try not to laugh.\n\n\"Bye Daddy.\"\n\n\"Alright, go on then.\" He huffs and hangs up.\n\n\"I've been set up haven't I.\" I smile.\n\n\"Indeed, you have. Now turn around, take me home. You heard my father; I have to help you get a load away. Or off, or something.\" There's a growl in her voice I absolutely love.\n\n\"Can you carry this one in puweeze?\" She puppy eyes me and I drag her suitcase from the back seat. I watch as she sways away in front of me. Her uniform skirt is plaid and far too short. Her white blouse is far too tight. Her pigtails are far to grabbable. I'm a bad, bad, brother in law.\n\n\"So, Uncle Timmy.\" She says dropping her school bag on the lounge room floor.\n\n\"I love you very much.\" She says unbuttoning her blouse and throwing it onto the floor with her bag.\n\n\"The day after Valentine's day...\" She says unzipping her skirt and adding it to the growing pile.\n\n\"Tishy and I had a loooong phone call.\" She removes her shoes.\n\n\"And.\" I ask.\n\n\"Well...\" She struggles for a moment, unhooking her arms from her bra and turning it back to front to unclip it and chucks it on the growing pile of things. She holds out her right hand to me and fiddles with the infinity ring. \"Forever. Just like you said.\"\n\nFor my benefit, I'm sure, she bends and removes her underpants, \"And whenever she's out of town, on special occasions and now and then so long as I don't wear you out for her, we can continue our sexual relationship. Only if I don't rub it in her face.\"\n\nOkay? The gods are fickle creatures and seem to have smiled strangely upon me for some unremembered karmic reason.\n\n\"Hahaha, you're cute when you're fucking speechless. Now, I've always wanted to fuck in the pool.\" She smiles back over her shoulder at me as I hurriedly discard clothing.\n\nI hate water sex. Any lubrication that an even highly aroused woman can supply is washed away on every outstroke.\n\n\"Well...\" Says Jackie, \"Not doing that again. Was good, but how can sex in water be so dry?\"\n\n\"I could have warned you, but I was a little keen, you know.\"\n\n\"Arsehole.\" She punches me playfully on the shoulder while I'm still nuts deep in her.\n\n\"Right. Get off me. I need a beer. You want one?\" She kisses me deeply before I can reply.\n\n\"You better get that up again before I come back out here. That was the worst orgasm i'm gonna have this whole weekend.\" She laughs at herself and rewards me with the view of her naked bum climbing awkwardly up the side and out of the pool. Sperm leaks from her as her legs stretch up to the side and the image goes right to the wank bank.\n\nLater, I'm sitting by the pool on a sun-lounge, sipping a beer while Jackie lazily rides me when my phone rings.\n\nThe phone displays 'Patricia Spence', her maiden name, which she uses on social media.\n\nAbove me, Jackie asks, \"Who is it?\"\n\n\"Trish.\"\n\n\"Answer it.\" She growls.\n\n\"Hey darlin,\" I tell the phone.\n\n\"Hi Tim. Is Jackie looking after you?\"\n\n\"You have no, oh god, idea.\" Jackie says.\n\n\"Oh, I see. Well, I love you both. Have fun and change the sheets before I get home okay?\"\n\n\"Sure darlin,\" I tell her while her sister 'kicks it up to a canter'. \"How's the conference?\"\n\n\"Are you sure you should be talking right now?\" she laughs, \"It's boring as fuck. I wish I was at home to watch you two. You make me happy. But I'm all alone in this stupid room and horny thinking about the fun you're having.\"\n\n\"Oh fuck, Tim, give me the phone.\" Jackie demands and taking it, she plays with buttons and hands it back. \"You're on facetime Siss, hang up and watch.\"\n\nWatching the little screen, I see Trish's face smile at me and she says, \"I don't want to look at your ugly mug, show me the action. A girl has needs too, hon.\"\n\nSo I turn the phone to face where Jackie sits astride me and our genitals connect and hear Trish on the other end say, \"you idiot, switch it to back camera so you can still see me and I can watch.\"\n\nJackie takes the phone and stops for a moment, sitting heavily upon my hard dick. \"Siss, I was almost there. Either shut up and watch or I'll hang up. This is MY Timmy time.\"\n\nHolding the phone again, Jackie picks up where she left off but a little slower, trying to build herself back up. Clearly from the phone screen Trish is watching where Jackie's pussy engulfs me and she writhes against me, but I get to see her pretty face and watch as she squeezes her breasts and props her phone up somewhere.\n\nAs Jackie rides me, I watch Trish remove her t-shirt and her arms descend out of view to obviously pleasure herself as she watches her sister furiously mate with her husband.\n\n\"Oh hon, that's so damn hot.\"\n\n\"God I've missed his cock, Siss.\" Jackie tells her. \"He's so fucking deep inside me and I'm gonna cum so fucking hard on his junk.\"\n\n\"Do it. Ride him hon. He likes his nipples squeezed sometimes. Give him a pinch and see if he can put a bit more effort in.\" Her voice is lusty. Clearly, she's masturbating and the idea of that almost tips me into orgasm. When Jackie smiles down at me and moves her hand from my shoulder to my nipple and gently squeezes, I erupt.\n\nTrish drained me last night, and I came just half an hour or so ago, so I have no idea where all this cum came from. Suddenly, I'm spurting and bucking and grunting and it tips Jackie into orgasm as well. Her clenching walls milk me, and she howls with pleasure.\n\nI've dropped the phone.\n\n\"Sorry darlin.\"\n\n\"Don't. Ever. Be. Sorry. For. Something. So. Ohaaahaaa... Fuck. So. Fuck. So beautiful. God, I love you guys.\"\n\n\"We love you right back Tishy.\" Jackie says, now go try out those new toys we bought you.\n\n\"Love you.\" Trish tells the phone.\n\n\"Love you too.\" Jackie and I chorus. Then she's gone.\n\n\"Toys?\" I ask Jackie and smiling she nods.\n\n\"We may have gone shopping as well.\"\n\nTea is take-away as promised. The delivery is late but neither of us care. We feed each other chicken wings as we fuck lazily in front of the television. I had forgotten how insatiable teenagers could be and wish I had another of those blue pills. When I finished that time, it was the last for the night. I 'am' thirty-five.\n\nThat night around four a.m. I woke with a cramping gut ache, to find the bed empty. Deciding to use the main bathroom instead of the ensuite, for reasons of the threatened noises and smells my god-awful pain promised, I hastened down the darkened hall to find light coming from under the locked door. The sounds of retching and sniffles indicated that I had located Jackie and she was feeling a little worse perhaps than me.\n\nThere's one of those little steam suction fan things in the ensuite and boy did it get a workout. I was simply thankful for the fact that whatever bug I caught chose the back exit unlike poor Jackie. A full half hour later I emerged, wrung out from the inside and horrified at the smell and mess. I wasted a full can of air freshener but that just made the room smell like lavender poop.\n\nPurged for now, I decide to check on Jackie. I found her stumbling bedraggled back down the hall.\n\n\"Darlin, you too?\" I ask her.\n\n\"Fucking wings, I think. There's been a bug going around school though. Oh god...\" Then she runs back to the bathroom. I find her dry retching over the toilet and hold her hair and rub her back.\n\n\"Tim.\" She says between her peristaltic heaves, \"This is fucking gross, just...\"\n\n\"Nothing I haven't seen before darlin, Shh.\" When she collapses back to prop against the wall, I offer her a warm, wet face washer.\n\n\"Thanks. You're the best, Timmy. I'm so gross right now. You'll never want to fuck me again.\"\n\n\"Hahaha, is that all you ever think about?\"\n\n\"Pretty much. This weekend's fucked now. It was supposed to be like, finish school Friday afternoon and fuck till Tuesday morning. I was supposed to be going back to school bow legged and leaking jizz from my ears. Fuck my life.\"\n\n\"Shh darlin, probably just the wings. You'll come good I promise. Till then a little t.l.c. and rest.\" I sit beside her and pat her knee. \"You right for a moment? You should probably grab a shower. You'll feel a bit better.\"\n\n\"Can you get me a glass of water pervert? I know you just want to see me naked.\"\n\n\"That's my Jackie.\" I kiss her forehead and leave to find water. I am side-tracked by a sudden need to resume my position upon the throne and when I finally return, I hear the shower running.\n\nSuffice to say, it's a bloody long night. Sleep is stolen in between bodily expulsions and morning finds me waking next to a tussled mess of human who vaguely resembles a sister in law I know, but turned inside out. I, on the other hand, feel alright. There might be something in those colonics that people talk about. Apparently, my violent purging has emptied me of whatever ailed me and as I watch the sun rise on the deck, listening to poor little Jackie vomit again, I feel much better.\n\nFucking tired, but pretty good.\n\nI have always felt special cuddling this small human. Well, not so small anymore, but she always makes me feel like he-man or something. So, I climb back into bed to cradle the shivering little mess that sleeps fitfully on my bed. She snuggles back in against me and I hear her breathing slow and deepen as she spoons against me.\n\nShe smells like toothpaste and shampoo courtesy of another recent shower after yet another trip to the toilet. There cannot be anything left for her small body to wring out of her. I'm so tired that I fall heavily into dreamless sleep nestled behind her.\n\nI wake and harsh bright light is spilling through the blinds forcing me to squint. Rubbing sleep out of my eyes I become aware of moaning. Jackie is rubbing back against my morning wood and moaning in her sleep. Perhaps she's feeling a little better I hope and reach to cup her breast and pull her closer.\n\n\"Bloourk.\" She coughs and explodes from the bed to reach for the bucket I put next to us last night.\n\nI hold her hair and try to keep her warmly held while she throws up the single glass of water she has drunk.\n\n\"Aw darlin.\" I kiss her head and hold her while she retches. There's a towel beside the bed and she uses it to wipe her mouth when she's done expelling pretty much nothing.\n\n\"I'm so sorry.\" She sobs. Sniffling and wiping her eyes. \"I'm a fucking mess Uncle Timmy.\"\n\n\"Shh. Come back here. Just shh.\"\n\nAnd she does, snuggling back in against me just like we were.\n\n\"I'm so sorry, I was really enjoying that and you're still hard...\" She's crying.\n\n\"Later darlin, shh. Get some sleep.\"\n\n\"I love you Tim.\"\n\n\"I know. Shh. I love you too.\"\n\nWhen her breathing tells me, she is back to sleep, I rise and find the coffee machine. I am a massive fan of it this morning.\n\nShe must have finally come out the other end of her tunnel because she doesn't rise till a little after eleven. I'm sitting at the breakfast table reading work emails on my laptop when her bushy, wrung out head appears in the kitchen.\n\n\"Fuck.\" She's looking all around her and straight past me. \"Where's all my shit Uncle Timmy?\"\n\n\"What are you looking for darlin?\"\n\n\"Mmph, handbag.\"\n\n\"Didn't see one. You had a school bag and a suitcase. School bag is hanging near the door, suitcase in your room.\"\n\n\"Oh yeah.\" She wipes her eyes.\n\n\"How are you feeling? Any better darlin?\"\n\n\"Jury is out.\"\n\nShe stumbles over and slumps against me with her arms around my neck, \"I love you, you lovely man. Thanks for looking after me when I was a fucking disgusting mess.\"\n\n\"I thought I was a pervy who just wanted to see you naked.\"\n\n\"Shut up. Where's my bag?\"\n\nI point toward the door and she fumbles around, snapping some little thing into her hand and throwing it into her mouth. \"Ahh,\" I think, \"Pill.\"\n\n\"You want some eggs?\" I ask hopefully.\n\n\"Gonna take it easy on my guts for a bit Timmy. Can I have a coffee do you think?\"\n\n\"Maybe a glass of water, give it twenty then try?\"\n\n\"Smart.\"\n\nShe's sitting staring wearily at me across the breakfast bar. Ordinarily that could be creepy, but she just looks wrung out.\n\n\"Did I tell you I love you?\"\n\n\"Yes darlin, just once or twice though. You can tell me again anytime you want. I kind of like it.\"\n\n\"Do you think there is another man like you? One that I can keep.\" She sounds so tired.\n\n\"I hope you find a better one. I'm just a creepy old dude that likes watching you in the shower.\"\n\n\"Wanker.\"\n\nMy mobile phone chooses that moment to ring. Jackie is closest and looks at the screen before answering. \"Trish.\" She tells me then walks with it to her ear over to the fridge to gaze into it and waste electricity.\n\n\"Like shit Siss. Bad wings.\"\n\n\"Spent the whole night spewing.\"\n\n\"Held my hair and rubbed my back like a wierdo.\"\n\n\"You too?\"\n\n\"I wouldn't. Gross.\"\n\n\"Mmm... Okay I guess. Just had some water and think-\" She tosses the phone on the table and bolts down the hall.\n\n\"Hi darlin.\" I tell the phone as I pick it up.\n\n\"Ahm, remember me saying, 'no takeaway' at some point.\"\n\n\"Hmmph. You're not my real mum. Don't tell me how to live my life.\"\n\n\"hahaha. Idiot. She ok?\"\n\n\"Bit of a mess. Mostly pissed off...\"\n\n\"About wha- oh yeah. I remember being her age. Thought I'd invented sex. God. This is a bit weird to talk about. Ha.\"\n\n\"Uhuh...\"\n\n\"So... Um, I love your guts out you beautiful man. Look after my poor little Siss. Are you okay?\"\n\n\"Let's just say the ensuite could use a new coat of paint.\"\n\n\"That bad?\"\n\n\"Explosive.\"\n\n\"Shit.\"\n\n\"Haha, pretty much.\"\n\n\"Eww.\"\n\n\"Well you kids get that out of your system before I come home.\" I can hear her take a deep breath and pause then continue a moment later, \"I wish I was home. I miss you so much. And I know I said I wouldn't be jealous but... Well I'm jealous I'm not there. I just miss you.\"\n\n\"No one is having any fun here darlin. I miss you too.\"\n\n\"Not that way jealous idiot. I want you to have fun. Just, Oh.\"\n\n\"What?\"\n\n\"Hey check the medicine cabinet. Remember the last flare up, I had nausea?\" My wifey has PCOS. \"Well there's maxilon and Imodium somewhere, I think. Give her the maxilon and you take the Imodium before I have to re-chrome the fittings in the ensuite.\"\n\n\"Will do. Love you.\"\n\n\"Love you too.\"\n\nBy lunch time, I was looking at a beer. Jackie was sound asleep and had been since I gave her some maxilon. The beer thought I should drink it. My bum thought it had been recently horribly violated and wondered if I should ever put anything in my mouth ever again.\n\nI was still looking at the beers where they slept peacefully in the ice box when Jackie found me at around two pm. She smelled like soap and shampoo and toothpaste.",
        "\"Oh darlin. You ok?\"\n\nShe snuggled straight into my lap.\n\n\"Oh, I'm fucked Timmy. And not how I wanted.\"\n\n\"Makes two of us.\"\n\n\"Ate some toast.\"\n\n\"Mmm.\"\n\n\"Half an hour ago now. Drank some water too.\"\n\n\"hahaha.\"\n\n\"I'm sorry.\"\n\n\"The fuck for?\"\n\nShe's crying so I snuggle her till she pushes off me to speak. \"This was my time. I ruined it.\"\n\n\"Actually, I think I ordered the wings.\"\n\n\"But... We've wasted time. I won't get it back. This is MY Timmy time.\" She is sounding angry now.\n\nI open a beer. They usually know what to say. She buries her head in my neck and contents herself with sniffling on my ear. We snuggle on the sun-lounge for a while. She seems content to simply snooze against me. I'm mostly content to have another two beers and enjoy the warm weight of her and see her not vomiting for a little while.\n\n\"Get off me fuckwit.\" She tells me, sitting up.\n\n\"Haha. You're kind of the one on me.\"\n\n\"I need the loo.\"\n\n\"Ok darlin?\" I ask a short time later, when she returns.\n\nShe answers by straddling me and locking her pretty lips on mine.\n\n\"Hungry now.\" She tells me. \"But I'm going to have a swim. It's hot out here.\"\n\nThe beer I'm holding stays fixed to my lips where I held it to take a sip before Jackie stood up and started discarding clothing on her way to the pool. It's still there, when she stops naked at the stairs and holds the rail to dip her toes in, testing the temperature.\n\n\"It's a bit cool, but not too bad.\" She turns to tell me. \"Come on in, old man.\"\n\nOrdinarily I'd take the use of \"old man\" as an invitation for a play fight but right now I'm staring at her nipples which tell me the water is much colder than she let on. She follows my gaze and looks down at her breasts then back at me, laughing.\n\n\"You must be feeling better, you've gone all pervy again.\"\n\n\"Cheeky cow.\" I put my beer down and decide to join her. She dives in as I wander over to stop at the edge and undress. I remove my shirt and toss it back toward her clothes. If Trish was here, she'd be busy folding them and trying to put them in a neat pile. Pushing my shorts and undies down I see that Jackie is looking up at me from the water's edge where she rests her chin on her arms on the tiles.\n\n\"You must be feeling better too, you seem to be all pervy as well.\"\n\n\"Can't blame a girl. I love looking at your junk. Sit down for a moment let me get a better look.\"\n\nThe tiles are hot, so I splash some water on them before sitting. She slides wet between my legs and hooks my thighs under her arms to hold her up.\n\n\"How big is it Tim?\" She asks lifting my slowly inflating member.\n\n\"Dunno, never measured it. Less than twenty, maybe eighteen centimetres from looking at it. Why?\"\n\n\"Only seen two others. They were smaller.\"\n\n\"Well, it's not porn star material. I'll have to keep working in architecture.\"\n\n\"Well, I love it.\" She says and licks from my scrotum to my tip then plants a little kiss on my knob. \"Fills me right up.\"\n\n\"Keeps me pretty happy too.\" I laugh.\n\n\"You getting in?\" She pushes away from the side to float on her back. I'll never get tired of looking at her plump little mound with its neat slit and hints of lip.\n\nThe water is fucking cold. Initially. Once my skin adapts it's bloody lovely. My erection flags as I enjoy the cool water and the lovely afternoon and the whole swim involves me in a lovely summer moment. Jackie seems content with her pool mattress, where she half lies on it, half floats. Mostly I'm just glad my arse is not threatening to explode and spoil the water. I think she's feeling pretty good about not vomiting too.\n\n\"Tim?\"\n\n\"Darlin?\"\n\n\"Will you do that thing with your tongue? I want you to um, go down on me.\"\n\n\"Aw god. If I fucking have to.\" I tell her sarcastically and grab her close for a kiss.\n\nLifting under her ribs, she floats up out of the water to lie on the pool mattress and wrap her legs around my shoulders. Teasing seems silly, she is set on this course, so I suck ungracefully on her inner flaps, licking along the hole of her and dipping as far within as I can.\n\n\"I fucking love this. You're so fucking good at it.\" She growls looking into the clear blue sky.\n\nShe makes it easy. Her body is really responsive and she's very vocal so it's not hard to follow her tells. And she tastes divine. Not that I'm comparing her to anyone. Fuck Trish is heavenly flavoured as well, just a little different. While I think these things, she scruffs a hand in my hair to hold me steady on her clit where I suck and circle now.\n\nGlad that my feet are touching and we're in the shallow end, I still almost drown as some moments later she clamps her thighs to my face and holds me unbreathing to her hot core.\n\n\"Owww... Fuck that hurts... oww. My guts! Get off me.\" She pushes at my head but finds it stuck between her thighs. \"Oh shit. Sorry. Fuck.\"\n\nShe grimaces with each wave of little shocks.\n\n\"Oh my god, my guts are so sore from throwing up. That's the most painful orgasm I've ever had.\"\n\n\"It's not funny!\" she tells me sternly and kicks her feet to splash water in my face.\n\n\"Game on, grumpy.\" I tell her, flipping her off the pool mattress and launching a barrage of splashing at her when she surfaces. As they often do, this pool fight ends in a long lusty kiss and big smiles.\n\n\"Let go of me. I'm going to go cook.\" She playfully pushes me away.\n\n\"Cook?\" I remember her last attempts at cupcakes one time she visited. The kitchen resembled a floury warzone and the cupcakes, the charred remains of a violent battle.\n\n\"I've been researching.\" She says dripping her pretty little frame up the stairs and out on the tiles where she bends to retrieve a towel. She calls it 'research'. Technically, it's borderline OCD. The doctors diagnosed her as somewhere under a number of spectrums associated with autism, Asperger's and such, but so high functioning that it was impossible to really pinpoint and probably unnecessary. As I float on the recent porn stage pool mattress, I remember when that was.\n\nShe was thirteen at the time and a precocious little thing. Wildly intelligent and very witty, she had an answer to every question and a question for every answer. She also had a shop-lifting habit. One afternoon the police brought her to our home instead of taking her home as they did on the previous two occasions she'd been caught.\n\n\"I can't stop. I don't know why.\" We heard between what we thought were crocodile tears. \"I didn't even need or want those things. I just saw them and took them. I even knew it was wrong and stupid. I'm so afraid. I can't trust myself. I can't stop myself.\"\n\nAll the time her right hand was making a kind of finger star grabbing gesture which we later learned was one of her ticks. Trish called her Mum and Dad and we had the first of many teenage family conferences. The resultant conversation was brutally honest and obviated the need for some medical assistance.\n\nThe first doctor prescribed ADHD medications and for a short time they assisted but Jackie hated them. \"They turn me off. Nada. Zero brain function. Zero fucking motivation. Zero fucking Jackie.\" She told Trish. \"I fucking hate them.\"\n\nThe swearing too, is part of it. Trish took her to see our doctor who is a little younger and more open minded than her parent's GP and a number of pretty expensive tests were arranged. The results confirmed that Jackie ticked boxes on the spectrum associated with a number of disorders, but not any one exclusively. A very expensive psychiatrist decided to educate and to treat symptoms would work more effectively than medication.\n\nAt the mere mention of 'educate' Jackie's research mode kicked in. Now that she had an idea of where to start, she was lost on the internet for months researching all of the mentioned disorders and trying to analyse and gain insight into her own manifestations of the identified culprits. She had to repeat year eight at high school.\n\n\"Horses and computers.\" She prescribed herself quite loudly over dinner one evening at her parent's house. \"Horses calm me the fuck down. Have you ever noticed how after I've been out riding, or even just down at the farm, I don't swear? I have... And computers, they let me zone out. When I'm finding everything too fucking intense, I can bug my head out in them.\"\n\n\"Sex.\" She tells me handing me a beer where I lay naked against the side of the pool.\n\n\"Yes please, with a side of fellatio. Thanks.\"\n\n\"No. Sex. It's another thing that's healthy for me. I am so calm and steady after a good orgasm, have you noticed?\"\n\n\"Ah no. I'm usually kind of in the moment.\"\n\n\"Well it is. Hey, do you know where Tishy keeps the garlic?\"\n\n\"Vegie crisper. She likes the fresh stuff.\"\n\n\"Oh.\" She looks deep in thought.\n\n\"What's wrong darlin?\"\n\n\"Well, the recipe I learned used pre-crushed stuff from a bottle. I'm not sure how to proceed. Can you help Tim?\"\n\nI look at my beer with mock objection, look at the sky then at Jackie, \"Dunno darlin, I'm kinda relaxing.\"\n\n\"Puweeze Uncle Timmy, I'll suck your penis.\" She hams it up.\n\n\"You've added a few tricks to your 'wrap Tim around your little finger' game of late.\"\n\n\"Girls gotta use what she's got.\"\n\nSo naked, I follow dripping to the doorway and gesture for the towel she still wears.\n\n\"Oh, sorry. Here.\" She hands it to me, unwrapping herself in the process. \"I need a tablespoon of crushed garlic.\"\n\nDrying myself I tell her, \"Well the fresh garlic is stronger, so maybe just a clove or two. I'll show you how to do it.\"\n\n\"Thanks. I get stuck on things still. You know.\"\n\nI shrug. It's all part of the Jackie show. Pulling my shorts on, I tell her, \"All good, darlin. What are we making anyhow?\"\n\n\"Some kinda 'sketti'.\" She smiles at me, \"Fettuccini carbonara. It's fucking intense. Temperatures and times and holy fuck.\" She makes a mind blown gesture. \"Gotta even wash the pasta with cool water to stop it cooking to make it perfect.\"\n\n\"You know you're always perfect and food is just food.\" I tell her.\n\nI show her how to shell and crush the garlic before finely chopping it and after I finish the first clove, she takes the knife from me and gestures me out of the kitchen.\n\n\"Fuck off.\" She tells me sternly, \"Go have a shower.\"\n\n\"You right?\"\n\n\"I'm trying to cook for you, arsehole.\" She glares at me really hard. \"I'm fucking... fucking... Just...\"\n\nI try to hold her. \"Get.\" She shoves me. \"It has to be...\" Then more calmly after a breath, \"I want to do this for you.\"\n\n\"Shh.\"\n\n\"Fuck off.\" She pushes me with the spatula, \"Go have a fucking shower and bring me back...\"\n\nI watch her for a moment then she calms, \"I love you. Bring me back a drink of some sort. This is big for me arsehole.\"\n\n\"Okay darlin. Just. Um... Just know that I love you no matter what. Infinity love. Forever love.\" I touch her jaw and pull her eyes to mine.\n\n\"I know that wanker.\" She shakes her head and makes a chatter gesture with her hand, \"Just... Head talk... Fuck off. I'm good and I love you right back. Now fuck off for a bit.\"\n\nAs I'm undressing, my mobile phone rings from the pocket of my discarded clothes that I'd placed in the laundry hamper.\n\n\"Hi?\" I say and see the displayed picture of Trish and I at her Dad's sixtieth birthday party that I use as a heads up. \"Hey darlin.\"\n\n\"Hey you.\" She sounds a little weird.\n\n\"Hey love. How's the meet and greet?\"\n\n\"Hon, it's all good. I'm just...\" Then I hear tears. Well, sobs.\n\n\"Hey... Breathe. Talk darlin. You okay?\"\n\nI wait a while and listen to strangled sobs and deep breaths.\n\n\"Darlin?\" I seek.\n\n\"Here. Just... A bit fucked up.\"\n\n\"Talk.\" I tell her.\n\n\"Just.\" Then more sobbing and throat clearing.\n\nI wait. I don't know what else to do. Then when waiting is too much I ask, \"Has something happened?\"\n\n\"Yes. No. Maybe. I don't know. I can't see. I want to watch. I want to know.\" She blurts and cries.\n\n\"Shh darlin. What do you mean?\"\n\n\"I can't see. I can't SEE!\" She yells the last part. \"I want to see. I'm sitting here all alone after a fucking stupid boring day and all I can imagine is you two fucking and sucking and sticking things here and there and I CAN'T FUCKING SEE!!!\"\n\nThere is silence. A silence full of sucked in breath and sniffs. A silence full of my dread. I went along with all of this and have taken advantage of all of the benefits and suddenly I'm plunged into the possibilities of my wifey's struggle with the fallout. \"You're a shit bloke.\" I shake my head and tell myself while her sister cooks naked in the kitchen for me.\n\n\"Talk... Talk to me Trish. I can't...\" I sound helpless even to myself.\n\n\"Shut-up. Shut-up... I know it's dumb. Just...\" I can hear her suck in breath after breath and imagine the physical energy she's investing in trying to form speech and communicate.\n\n\"I'm so far away.\" She tells me quietly. \"So far. And I don't know. I don't know if you are falling in love with her more than me or... I can't see...\"\n\n\"Darlin, shh.\" Oh fuck me sideways, this has all gone to shit.\n\n\"I'm so embarrassed for ringing.\" She blurts. \"Just hang up. I'll be alright.\"\n\n\"No.\"\n\nThen there is a silence that hangs in my existence like a rotten egg fart that no-one owns up to on a crowded bus. We wait each other out. Well, I just hold on and hope.\n\n\"Tim?\"\n\n\"Here.\"\n\n\"Look. I'm worried I've started a thing I can't undo.\"\n\n\"Really. I told you both that you had to promise you had to say stop and it would stop. I love you. You're my wife. I love Jackie. She agreed too.\"\n\n\"Hmmm...\" Then there is another long silence. \"Look.\" She continues then shuts the enigmatic fuck up.\n\n\"Yup?\" I question the phone against my ear and become aware of my surroundings again. I see Jackie watching me from the kitchen, obviously aware of some urgent conversation. Obviously aware it's Trish. Obviously aware enough of the whole vibe that her little lips are quivering while she holds the tongs.\n\n\"Put us on fucking speaker, or I'm going the fuck home right fucking now.\" She says pointing tongs almost combatively.\n\nI look at the phone.\n\n\"Give me the fucking thing wanker.\" Jackie says storming into the lounge.\n\n\"Siss? Tishy? What the fuck is going on? Timmy looks fucking broken and I'm going to fall apart soon too.\"\n\n\"I want to watch. I'm so far out of the loop. I'm falling apart over here. I worry you're going to steal him and he's going to leave me. It's so fucking stupid. I know you both love me but it's too much when I'm away. I can't see. I can't fucking cope. I sat through hours of presentations and shook all sorts of hands and all I could think about was whether you guys were fucking in the pool.\"\n\nThere's a long silence then Jackie says, \"Oral.\"\n\nThe silence continues then Jackie interrupts it again, \"It was the worst orgasm I ever had. My stomach was SO sore from throwing up all night that every little thing hurt when I came.\"\n\nThere's another long silence then Trish speaks, \"So? Um... How is your tummy now hon?\"\n\n\"Siss. We can call this off. I can just go home. I love him. But well, I love you too. I can just leave.\"\n\nAnother long silence stretches uncomfortably. I can almost feel Trish trying to settle and straighten her thoughts. Eventually she vomits as much truth as she can.\n\n\"I'm actually not so much worried about you two as I am about me. I'm developing a fixation with wanting to watch you have sex. It's a borderline voyeuristic fetish. The compulsion is almost physical. I'm obsessed with it. The first time I was right there, and it was so beautiful. I felt like I'd been invited into a really private moment and it made me feel... ah honoured. Really honoured. Then the other night when I saw you guys on facetime... Just, now I want to watch all the time. I feel like I'm going mad.\"\n\nJackie and I are just watching each other's faces while we listen to Trish blurt out this strange confession. It feels like it's my turn to say something, like she's waiting for some kind of judgement on her admissions.\n\n\"Well darlin, to use some of your favourite phrases, 'a', It's 'unconventional' but 'b', we'll work this out maturely. I'm sure we can use the phones somehow. I'll leave that up to Jackie so long as she doesn't mind an audience.\"\n\nJackie is shaking her head, \"No. Not a bit. That's kinda hot actually. I'll make sure to get a photo or a bit of video to you, whenever I remember. Is that okay?\"\n\n\"You guys don't have to. Not all the time. God, I feel like an idiot now.\" We can hear her take a deep breath, \"Ha. I thought you were the one that was going to struggle with this Tim. And here I am turning into a big pervy idiot. I've got to go. Thanks for... Thanks for just. You know. I love you both.\"\n\n\"Love you too.\" We both say in unison.\n\n\"I better check dinner.\" Jackie tells me and I use my phone camera to record her pert little butt saunter back into the kitchen.\n\nIt takes me a little while, but I manage to write a text and attach the video.\n\n[Almost dinner time]\n\n[Ha. God I was at tea. Whole table full of colleagues saw me boggle like an idiot when I got that.]\n\n[see I can use tech too]\n\n[love you.]\n\n[you too.]\n\nJackie returns with cutlery and sets the dining table for two.\n\n\"What're you doing?\" She asks with one hand on her hip. I hand her the phone and watch her smile as she reads the exchange. She hands it back and says, \"Dinners ready. It's only small servings so its gentle on our tummies after last night. I hope it's alright.\"\n\nStill comfortably and completely naked, she leans down to kiss me quickly before returning to the kitchen. The dishes she places on the table moments later are enough to distract me from her nudity. They look like something you would be served in a restaurant. The egg-based sauce is perfectly textured and binds the small bacon chips and garlic and parsley to the thick strips of pasta. A single strip of crispy bacon and a sprig of parsley crown the dish along with a sprinkling of parmesan. It smells sensational.\n\n\"Well. Say something.\" She frowns at me, taking her place opposite and raising a forkful of the pasta to my mouth, the flavour and texture of the first bite silence me anew.\n\nSwallowing I find her smiling eyes on mine and I tell her, \"Fantastic darlin. Pasta is perfect, sauce is mmm...\"\n\n\"So I did alright?\"\n\n\"Tastes almost as good as you.\"\n\n\"Ooh, that's naughty.\" She blushes but glows with pride as well.\n\nEating slowly to deliberately savour the meal we chat idly.\n\n\"So tell me about this Mark bloke.\" I prod.\n\n\"Oh. Well not much to tell. I like him. He's a bit younger than me, a complete geek and really shy. He's funny though and smart and kinda sweet. I wish he'd find the guts to fucking ask me out.\"\n\n\"Boys can struggle with taking that step. I know I always did. Fear of rejection and all that.\"\n\n\"So how did you get passed it?\"\n\n\"In fifty years, who's gonna give a shit?\"\n\n\"What? Me, I'm asking so I can maybe fucking help him arsehole!\"\n\n\"Ha, No... I'd find myself psyching out, worrying about whether she'd laugh at me or her friends would tease. School was brutal back then. I'd ask myself, \"In fifty years who's gonna give a shit?\" Then just go for it. Sometimes it worked, sometimes it didn't.\"\n\n\"Hmm. I get it.\" She pushes the last of her meal around the plate then takes a deep breath and blurts, \"So, in fifty years, no-one's going to give a shit, but I really want to try buttsex.\"\n\nCoughing on the mouthful of food I'd tried to swallow, I clear my throat and am about to say, \"Okay?\" but she continues.\n\n\"Since valentine's day I've been researching sex. There's a lot of information out there but no real quality control on it. Porn is useless. It's so fake. I like watching it but it's useless as an education tool. Blatantly produced to appeal to visually stimulated people and seems so fetish oriented. The Karma Sutra was interesting, but it looked like a whole bunch of hard work to just get your rocks off. Kind of like yoga with fucking.\"",
        "She takes another mouthful of food and I can see her considering her thoughts as she chews it then swallows.\n\n\"Ah. Damnit, I was going to serve wine with this. Where was I? Oh yeah. So, I found some books like 'The joy of sex.\" They were helpful but very trite. A couple of research papers on this and that, an anthropology thesis on contemporary sexuality, I even read a bondage book. And anyway, I was looking through it all to see if there were things I wanted to try. There is some fucking weird shit out there.\"\n\nShe shakes her head like she is trying to rid herself of the mental pictures.\n\n\"I even read about people who piss on each other and shit on each other. So many of the fetish things reflect deeper psych problems, I think. It was easier to filter the things that appealed to me than list the things I thought weird and disturbing so yeah, anal and maybe a little light restraint stuff. No whips and things but being tied up sounds like it could be a little bit of fun with someone you trust. And anal, well, when you did that thing with your thumb, I really wanted you to put it inside me. Just got me thinking.\"\n\n\"What?\" she asks gathering the empty plates and watching my face react to her suggestions. \"But like, not fucking tonight okay. My guts is better but that end is not real reliable yet. Maybe tomorrow if it doesn't ick you out.\"\n\nShe turns and walks to the kitchen and I watch her cute little bum flex with each step and can't help but agree resoundingly that anal sounds like a good idea. The man downstairs salutes the thought and when my brain starts working again a few minutes later, I wander in to help her stack the dishwasher.\n\n\"Hey Timmy?\"\n\n\"Hmm darlin.\"\n\n\"I'm really tired after last night. What do you think about a shower and some snuggles on the couch like old times?\"\n\n\"Sounds perfect darlin. I'm a bit wrecked myself.\"\n\nThe shower is playful and relaxed. There is casual cheeky groping but not urgent sexual groping, just two people who like each other sharing a shower. I wash her hair for her and massage her scalp. Trish loves it and Jackie groans with the experience.\n\n\"God, you have to promise, if something ever happens and we can't have sex anymore, you still have to wash my hair.\"\n\n\"Promise Jackie.\" I kiss her ear.\n\nAfter we dry ourselves off and dress for bed, me in boxers and her in a long t-shirt and knickers she takes my hand and leads me to the couch. I sit in my usual spot and she stretches out beside me with her head in my lap and her hand on my thigh.\n\nShe selects a David Attenborough series on Netflix, and we watch, thoroughly involved as he talks us through the Amazon. In no time Jackie lies fast asleep and I watch her face remembering all the times over the years that she's ended up in this exact position. I feel so privileged to have been a part of her life.\n\nA yawn escapes me as the episode closes so I turn off the television and sit for a while. Moonlight streams in through the glass doors onto the deck and lights Jackie's face. On a whim, I take a picture and send it to Trish.\n\n[Goodnight darlin, miss you.]\n\nThere's no reply, so I extricate myself from the sleeping woman and lift her up to carry her to bed.\n\nSleep claims me quickly. My eyes first suggest it by winking then my body insists on tumbling into a deep peaceful, dreamless sleep. When I wake, I'm startled to hear my wife's voice beside me. \"Morning sleepyhead. I was wondering when you'd wake up.\"\n\nLooking away from the laptop screen to my waist where Jackie smiles back with her lips sliding up and down my morning stiffy. Her tongue dances and swirls and I wonder how long she's been doing this because I feel so close to filling her face.\n\n\"I hope you don't mind. I gave her your password so she could do this for me. I have to be down for breakfast shortly and just wanted... You know.\" Trish says from the laptop beside me. Her face is flushed, and her eyes glued to where Jackie sucks me in and out of her mouth. \"Oh god Tim, I'm cumming. That's so fucking hot. I can't help it. Oh shit, shit, shit.\"\n\n\"Jackie darlin, I'm close too.\" I hiss a warning and watch transfixed as Jackie backs up to my tip to suck and lick my swollen sensitive head. The first spurt erupts inside her mouth then she pulls me out and aims me at her face. The next spurt paints her forehead and dribbles down her cheek. The next less forceful spurts she rubs into her cheeks and chin then takes me back into her mouth to suck whatever she can from my deflating dick.\n\n\"Oh my god.\" Trish says, \"That's so dirty. It's everywhere. God.\"\n\n\"You like Siss?\" Jackie asks bringing her face closer to the laptop and wiping a big dollop of cum into her mouth. \"Breakfast time.\" She laughs. \"Seeya Tishy.\"\n\n\"Thank you so much Jayjay. Love you guys. Talk to you tonight.\"\n\n\"Bye darlin,\" I manage. \"Holy heck, that was a great way to wake up.\" I tell Jackie.\n\n\"Shower and then breakfast. Someone made a mess of me. Come on.\" She tugs at my hand and I follow her into the ensuite, where we share a hasty shower.\n\n\"I've been up for ages. I feel so damn good today after yesterday. And SO fucking hungry. I've made breakfast for us. Hurry up now. It'll go cold.\"\n\nI'm still waking up I think as I soap myself and wash my hair.\n\n\"I researched omelettes. I hope you like them.\" She smiles nakedly from outside the glass screen where she towels off. Mesmerised, I watch her jiggle and wiggle into a small pair of denim cut-offs and a waist length t-shirt that leaves her belly displayed. Her perky breasts point bra-less in the soft cotton top and I wonder how I'm hard again so soon. Then she almost skips out of the room leaving me to wonder at my luck.\n\nPulling on my usual weekend wear, khaki cargo's and a singlet I hear her call, \"Hurry up Uncle Timmy, puweeze...\"\n\nNow, I'm actually pretty good at omelettes. They are on my 'things I can cook' list. What I find waiting on my plate near a frowning already eating Jackie are works of art. Carefully folded, they are garnished with fetta, kalamata olives, diced capsicum and lightly fried cherry tomatoes. My first mouthful tells me that I have lost the omelette game. Hints of cayenne and allspice float like sixths and sevenths in a major chord of fluffy light egg, finely diced onion, a hint of garlic and mozzarella cheese.\n\nIf I had to find a single thing wrong with this culinary masterpiece it would simply be that I spent too long in the shower and it's a little cool.\n\n\"Alright?\" Jackie asks with her mouth full.\n\nIt seems to be a gesture I've made quite frequently over this last month. I raise my hands to my head and make the sign for 'mind blown'.\n\n\"Not all that was blown this morning either.\" She giggles.\n\nYou know what would be perfect to wash this down would be the cup of fresh brewed coffee she fetches while I shovel food into my face. I hadn't realised how hungry I was until I started eating.\n\n\"Thanks, darlin. This is perfect.\"\n\n\"I just wanted to thank you for yesterday. Looking after me while I was sick. Being patient and... you.\" I love the adoration in her eyes and vow to deserve it.\n\n\"Hey, I have a few errands to run today. Did you have plans?\"\n\nShe pouts, \"Nothing outside of the bedroom.\"\n\n\"Oh. Well, they won't take all day. I have to drop in on a worksite. They are having some second thoughts about the plans and I need to pick up a few things from the shops. We're almost out of loo paper and could use some more beer. Would you like to come along? I'd love to show you this project. I think you'll get a kick out of too.\"\n\n\"I won't be in the way?\"\n\n\"Heck no. And we'll be home in plenty of time for an afternoon swim and whatever else you might like to do.\"\n\n\"Sure. I've got a few ideas for later...\" she winks at me. \"Oh, and I want to pick up a few things from the shops too.\"\n\n\"This is outstanding.\" I point my fork at the remains of the omelette, \"What happened to 'deconstructed cupcake' Jackie?\"\n\n\"That was...\" She blushes furiously, \"Not fair. I was only fourteen. I was still getting on top of things. I um... research things now and its easier-\"\n\n\"Hey, I'm just messing with you darlin. Seriously, last night's dinner and breakfast could be restaurant dishes. Have you ever thought of an apprenticeship?\"\n\n\"I don't know. I don't really like cooking. I just wanted to be good at it for you.\" She seems a little embarrassed.\n\n\"Well you did. You were perfect. I'll be worried if I have to cook for you now. I can't match this.\"\n\n\"Shutup. You're embarrassing me. I need to go change if I'm coming with you.\" She gathers plates and implements and takes them to the kitchen.\n\n\"Hey, it's really informal stuff. You'll like these people, they're easy going. Here...\" I take the dishes from her, \"Go get changed but nothing you couldn't stand getting dirty. I'll finish up here. Least I can do after the start to the day I've had.\"\n\n\"Wanker.\" She kisses my cheek. \"Back in a tick.\"\n\nA short time later she's sitting in the passenger side of my work ute tapping at her phone to pass the time. We meander up the winding coastal roads to the tablelands on the range.\n\n\"How far is it Timmy?\" She looks up at me.\n\n\"Are we there yet? Are we there yet?\" I tease.\n\n\"Ha. Seriously though, how far. I really have to pee.\"\n\n\"Oh. Not long probably half hour.\"\n\n\"Can't wait. Find me a private spot. A shady tree?\" She squirms a little.\n\n\"No worries.\" Soon enough I find a little sidetrack that leads off the highway and a short distance down I pull over. She springs out of the car and tugs at her jeans, pulling them all the way off along with her underpants. I kind of like naked women, so I watch her as she dances from foot to foot and looks around for a shady tree to hid behind. Looking back at me she just says, \"Aw fuck it.\" Puts her pants on the passenger seat and squats down next to the car using the seat for stability.\n\n\"Haw...\" She sighs in relief as her stream starts. I know I should probably look away but it's fascinating. Trish has never peed in front of me. I watch as she holds her lips apart and balances and sprays onto the dry roadside. I'm not a fetishy sort of bloke so I'm a little embarrassed at staring. Looking up I find a curious look on Jackie's face as she watches me.\n\nThe moment passes and she hurriedly snatches her jeans to redress.\n\n\"Hey,\" I open the glove box. You never know when you're going to get caught short with work, so I hand her the toilet paper roll I keep in there.\n\n\"Life-saver. Beats fucking drip drying.\" She smiles at me and minutes later we are almost at our destination.\n\n\"Tim?\"\n\n\"Not long now. Almost there.\" I pre-empt.\n\n\"Not that. Just.\" She thinks, \"Just, what were you thinking when you watched me pee. I saw you staring.\"\n\n\"Oh. Um. Honestly, I didn't realise I was then I guess I was fascinated. I haven't seen that before. Why, did I embarrass you. I'm sorry for staring.\"\n\n\"No, I um.\" She squirms a bit in her seat and bites her lip. \"It's weird but it kind of turned me on.\"\n\n\"Oh.\" I don't know what to make of this and thankfully the gates to the stud distract me from the line of questioning. \"This is it.\"\n\n\"No fucking way. A horse stud? You could have said. Holy shit. I LOVE it. Look at this fucking place. It must be worth a bajillion dollars.\"\n\nI'm remembering the first time I came here. I understand how overwhelming the aura of money is. The property alone must be worth in the tens of millions just because of its size and location. Two hundred and fifty acres of old dairy country, it now operates as a spelling farm and equestrian centre, offering everything from trail rides to competitive disciplines and training. Selfishly, I knew this would tick her boxes and had deliberately omitted the information wanting to revel in her enjoyment of it.\n\n\"Look at the arena. Holy fuck.\"\n\n\"Jesus. There's a track. Can't wait to see the stables.\"\n\n\"That's what we're here for. They're putting in a new tack room. It's a small addition but they're fussy clients and don't mind paying for what they want.\"\n\n\"This is so cool. You're the best, Uncle Timmy.\" She undoes her seat belt and leans across the cab to kiss me on the cheek. \"I so fucking love you right now.\"\n\n\"Um, listen. No uncle stuff here okay. You're going to kiss me or something and freak them out. Just Tim okay?\"\n\n\"Oh. I hadn't thought. You want me to just be your sister in law and not... God I need to not touch you. Um.\"\n\n\"How about you be my personal assistant? That way if you let slip, they'll just think I'm a dirty old man.\"\n\n\"Fuck it Tim. I'll just control myself for a few minutes. I do it all the time anyway. Double check my impulses, so it won't be too hard. Just introduce me as your wife's little sister and any affection will be understood. I got this okay?\"\n\n\"Okay darlin.\"\n\nWe are met at the stables by Francisco and his wife Helena. Jackie finds it hard to get through the introductions. Not because of any awkwardness but simply because she is in awe of the facility. The stables cost almost two million dollars to build.\n\n\"So you're baby-sitting for the weekend?\" Helena asks.\n\n\"No, she's eighteen. Jackie is helping around the house this weekend while my wife is away. It lets me focus on some projects I'm behind on. She loves horses, so I presumed it wouldn't bother you too much...\"\n\n\"No. Not at all. Do you ride dear?\" Helena asks as we search out the tack room area.\n\n\"Oh yeah. I have a horse. I've ridden since I was seven or so. Nothing like this though, just for pleasure. Oh my god, look at him, isn't he beautiful.\" She darts away to one of the stalls. We follow over.\n\n\"Pinot Noir.\" Helena says. \"Our most valuable stallion. He is the money maker. We cater to many disciplines, but the quarter horse stud floats the business most years. He is lovely natured; you can touch if you like.\"\n\n\"So Tim,\" Frank says, \"We're at a standstill with the tack room. The initial design seemed quite generous space wise but now that we are fitting it out, we're struggling for space. I'm looking at extending it, but retro-building into the space we have is going to limit through fare for equipment and cleaning vehicles. Just not sure how to overcome this one.\"\n\nWhile Helena and Jackie pat and coo over the midnight black beast, Francisco and I stare into the room and scratch our heads figuratively. It's a tall space, floor to ceiling would be around twelve metres given its central location in the massive structure. It's roughly six metres deep and eight metres wide, quite generous in dimension but as they are shelving and installing racking the space is becoming quite cluttered.\n\n\"What about a mezzanine?\" I ponder out loud.\n\n\"That could work. It would give us half the floor space again but we'd need stairs and lose some of the bottom floor.\"\n\n\"Hmmm.\" I take some measurements with my Leica DISTO and jot down the numbers the laser tells me. We are in the process of measuring when the ladies return deep in conversation about breeding programs and the sale of frozen semen.\n\n\"Huge fucking tack room.\" Jackie slips out. \"Oh shit. Sorry. I...\"\n\n\"Haha, a lady after my own heart.\" Helena says, \"Huge indeed but not fucking big enough sadly.\"\n\n\"You know,\" Jackie says excitedly, \"if I ever won lotto, I'd build my tack room like one of those walk-in robes. I'd have one of those shoe-elevators for all my saddles and my reigns and things would hang on a revolving rack. I'd have-\"\n\nFrancisco cuts her off, \"What is this shoe elevator? How is this thing done?\"\n\n\"What?\" Jackie says, \"Oh... look you have baskets to put your shoes in and they swing from elevator racking, when you press a button they roll up and another button down. In here you could make it all the way up to the roof. Just use saddle racks and put them on chains that go up over a huge pulley thing at the top. God that would be so cool.\"\n\n\"What?\" She's blushing because we are all looking at her silently.\n\n\"Do you think you could sketch this idea?\" I ask her.\n\n\"Um yeah. I could try.\"\n\n\"Please Jacqueline,\" Francisco says handing her a carpenter's pencil. \"Here. Just on the wall. The painters will just go over it.\"\n\nWe watch as she makes marks on the gyprock and gradually her concept is recognisable as a simple bucket elevator but with an obvious cradle system instead of buckets.\n\n\"Kind of like a vertical ferris wheel, I don't know how you do the pulley bit at the top or where a motor would go but-\"\n\n\"That's what I pay engineers for.\" Shaking my head, I tell her, \"You know you just solved a problem that would have taken me a week and even then, I damn... Amazing.\"\n\n\"If you and I can build this thing.\" Francisco's eyes are lit, \"We will sell them. I will provide capital. I know Princes who would pay whatever you ask for this idea. And you Jackie, you will talk to Uncle Frank. Talk many times. Tell him all of these lotto ideas. What else would you have if I can buy it?\"\n\nShe's a little embarrassed by the attention and quite disturbed by the arm Francisco has around her shoulder. That's another one of her things. She doesn't like people touching her.\n\n\"Um... Definitely a fucking huge vacuum cleaner.\"\n\n\"What is this thing?\"\n\n\"You know, like a paddock vac, but built in. You would have a big poop pile out the back near the motor and tubes in all the stables that you just turn on and suck up the poop with.\"\n\n\"Hmm. I can see this thing. Alright.\"\n\n\"Oh fuck.\" Helena laughs, \"Jacqueline dear, you don't know what you've started dear. How about you and I go up to the house and make some drinks for these silly men. We need to talk about some things at the very least. I have some ideas of my own. I see things other people miss.\"\n\nAn hour later Frank and I walk back to the house. Unwittingly, Jackie solved my problem and made me quite a lot of money as well. The design work is going to run into the tens of thousands. I'm also, if our elevator system is successful, going to be getting consultant work and travel to the emirates where Francisco will sell copies.\n\nWe find Helena and Jackie arguing near a small white hatchback.\n\n\"You will so, and you will say 'thank you Aunt Helena, this is a good thing'.\"\n\n\"I will not. You can't just give people things like that. I'd feel like I owed you or something.\"\n\n\"Nonsense. It is old and not used and how are you going to get here otherwise?\"\n\n\"Bus. Maybe Tim can drive me.\"\n\n\"No. I insist. Here.\" Helena takes Jackie's hand turns it over and puts keys in it. \"You will do this, or I will make Frank use a different architect.\"\n\n\"Oh, you wouldn't. Fuck.\" Says Jackie.\n\n\"I fucking would, you just try me Jacqueline.\"\n\n\"That's not fair.\"\n\n\"A woman gets what she wants. Playing fair is for little girls.\" Smiles Helena. Jackie doesn't touch people as a rule. I've seen her have massive melt downs over random bumps from strangers, but right now she wraps Helena in a big hug.\n\n\"Every Tuesday, I have an early finish. We skip a period. I'll be up here by about three-thirty, but I have to be home for tea, so... Oh and some weekends unless I'm...\" She looks at me blushing, \"Timmy time, you know.\"\n\n\"Times are not important. I just want your ideas and your company dear. We'll work out the details later. Francisco darling,\" She notices us. \"Meet your newest employee.\"\n\nJackie's eyes beam at me and it's her turn to make a 'mind-blown' gesture.\n\nShe's a nervous driver but quite safe. She steadily navigates the winding mountain road back down to the plaza where we agreed to meet and do our shopping. Finding a park nearby her was a stroke of luck. She carefully locks the little Volvo v40, then explodes across the carpark at me.\n\n\"What the fuck just happened, Uncle Timmy?\" She holds me really tightly around the waist and breathes in and out trying to settle herself.\n\n\"You seem to have made some new friends with your brilliant mind darlin.\" I rub her back, \"That's all, I think. Are you okay?\"",
        "\"She gave me a fucking car!\" Jackie yells into my chest. \"A fucking car to use.\"\n\n\"Shh... They live very differently to the rest of us darlin. To her that is just an object to be used. In your case to get you and your ideas up there once a week. You made me a lot of money, you made them very happy, just enjoy it. You earned it.\"\n\n\"Fucking surreal.\"\n\n\"Well, welcome back to reality; I need to buy bog paper.\"\n\n\"She said I can keep it after working for them for a year. It's like a twenty-thousand-dollar car!\"\n\n\"Fifty or so new... I'd say thirty five, maybe forty-\"\n\n\"Fuck off.\" She shakes her head and gripping my hand tightly, follows me into the madness of the plaza.\n\nWe shop. We separate for a short time; she needs some things from the pharmacy. I wander blindly for a little while just looking in windows and watching people. We've agreed to meet back at the KFC store for an afternoon snack around two.\n\nAs I wander my eye is drawn to an electronics store. Confirmed technophobes like myself would usually wander straight past but this afternoon a CCTV system catches my eye. A small piece of plastic in my pocket tells me I might just make my wifey very happy.\n\n\"I need a nap, Tim.\" Jackie tells me when we get back home. \"Too much going on.\"\n\n\"Come for a dip first. It'll cool you down and you'll sleep better.\"\n\n\"You pervy. You just want to look at my butt.\"\n\n\"Yeah, but you'll still sleep better.\"\n\n\"Hmm.\" She kisses me. \"You go. I'm just going to slip through the shower and go lie down. I'm okay, just...\" She makes that chatter gesture with her hand. \"Noisy head. I love you.\"\n\n\"You too darlin.\"\n\nI unpack groceries and put beer in the fridge. Jackie has bought a bottle of white, so I place that in the fridge. Avoiding her pharmacy bag for privacy reasons, I pack the rest of our stuff away. I'm not sure what she thinks she's doing for tea as I examine the eclectic mix of ingredients. Then I find my own eclectic purchase.\n\nEight small wireless cameras. A recording unit and instructions on how to install apps on computers and phones. It all looks too much for me, so I content myself with placing the cameras. I'm good with hardware. I install one discreetly behind the hot tub, pointing toward the pool. Another I sneak into the master bedroom without waking Jackie and place it high on the wall facing the bed. With a general nod to security instead of my intended voyeuristic purposes I install one at front and rear door, the kitchen, lounge and finally one in the main bathroom. That leaves one for later but never mind. The recording unit plugs into our home ethernet and sits beside the server in our office.\n\nTaking two beers out to the pool, I take my own advice and cool off. This thing with the elevator involves my mind quite thoroughly until both beers are empty and I'm thinking about a bit of a nap myself. The couch beckons, so I towel off and wrap myself in it. Television shows me a fishing show. I love fishing, so I don't understand how I fall asleep halfway through. But I do.\n\n\"Oh, you're bad.\" I hear.\n\nWiping my eyes and my mouth where I've been drooling, I look at Jackie. She's sitting opposite me in a recliner, holding an operating manual and playing with her phone. \"Oh god, she's gonna love this.\"\n\nShe hasn't seen my eyes open yet and I watch as she taps on her phone.\n\n\"Ugghh!!! Fucking old people.\" She says then taps some more and lifts it to her ear.\n\n\"You there?\"\n\n\"Just download the fucking app.\"\n\n\"From the link.\"\n\n\"Yup. Then... No. Go into your apps and drag it to your wall. Duh.\"\n\n\"Yeah see Grandma, that wasn't so hard was it?\"\n\n\"Yup. Now the numbers go with the cameras. Pull up number five.\"\n\n\"Got it?\"\n\nThen she pokes her tongue toward the lounge camera and flips it the bird.\n\n\"Cool huh?\"\n\n\"Yeah, completely his idea. I only just found it when I got up. He loves the fuck out of your weird pervert arse.\"\n\n\"Well enjoy what happens next, you sick bitch.\"\n\nShe taps her screen then looks over to see me looking back.\n\n\"Get your fucking clothes off! Puweeze Uncle Timmy.\" Hers seem to fly from her like feathers from a car-struck bird. Then turning her back to me she struts purposefully to the kitchen. I rise and simple unwrap the towel ii fell asleep in. When she returns, she is holding her little paper pharmacy bag.\n\nNaked, she pushes me back on the couch and sits facing the camera away from me with her little butt on my chest. The bag tears beneath her fingers and she shows the camera first, then me, a box of condoms. Next, she waves a small bottle of lube at Trish and me. She places both items at my feet then backs up my body to land her vagina on my mouth.\n\nThe taste and smell of her almost distracts me from the feeling of her warm willing mouth around my dick. Satisfied I'm hard enough, she scoots down off my face and picks up her prizes. First, she tears a condom from its wrapper and pushes it down my dick. Then she squirts a generous helping of lube onto me. Lastly, I watch mesmerised as she squirts lube on her fingers and shows it to the camera.\n\nKneeling between my legs with her face on my chest and her butt pointed skyward toward the camera she massages the lube into her butt. I watch as a finger pushes inside her then a second follows it. Working them in and out of her tiny back door she mutters and groans, telling me, \"Oh so fucking wrong. So nasty.\"\n\nThen blowing a kiss to the camera she pulls further up my body and with no ado, introduces the tip of my well lubed pole to the pucker of her anus. I'm surprised at how easily I slip inside her. First just the tip of me and then I feel an inner muscle clench and spasm, then it too allows me to penetrate completely inside of her.\n\n\"Oh fucking fuck.\" She says sitting hard down upon me. \"That's so fucking weird feeling. Like taking a massive poop and a bit of tummy ache but stretched and I can feel it like when you're in my kitty. Don't fucking move.\"\n\nSlowly she starts circling grinding motions against me that slide me in tiny increments through her elastic band sphincter.\n\n\"Aw Fuck. That actually feels...\" She grabs my face and lifts me, \"Fucking kiss me... So dirty.\"\n\nShe looks up to the camera and groans. \"I can't believe she fucking gets off on watching this. Oh god. I'm rolling over now. Stay in me. I want you to fuck me hard for her.\"\n\nSomehow, I stay inside her as she rolls and turns and slides to the floor doggy style.\n\n\"Fuck Tim. Start fucking me. It's okay, I won't break. Do it. Puweeze Uncle Timmy?\"\n\n\"Oh god, Tim...\" She moans as I slide through her clenching muscles. \"Oh damn. That's wrong. So wrong. I love it. Harder!\"\n\nI comply, thrusting full length in and out, savouring the milking squeeze of her tight rectum. In and out I pump until I lose myself in my own sensations. A building pleasure tightens my balls and my dick is exquisitely solid. The skin of my knob pulled tight by the extreme tightness and wrongness and then it's all too much.\n\n\"Fuck...\" I moan into her shoulder as I gasp for breath and shoot inside her. The heat. The bad. She's my little Jackie. The fuck... I feel hands moving, fingers brushing my balls where I spasm, still inside her, then she arches her own back.\n\n\"Fucking fuck, Uncle Timmy. Oh god. God. God. God. God.\" Her arse clenches me in time with the throes of her orgasm. She grips the base of my dick so tight with her arse, then slowly slides tentatively forward till I pop from her. She turns her bum to face the camera and tests her sphincter with her fingers, feeling it gaping and stretched. \"Oh fuck.\"\n\nSlumping back into the couch, I thoroughly agree, \"Oh fuck.\"\n\n\"Don't you dare.\" She growls and grasps me firmly, pulling the condom from my dick and casting it aside. Her lips find my flagging pole and her tongue speaks need upon the tip of it until miraculously I'm not abating and in fact hardening for her.\n\nClimbing up she kisses me. \"I love you Tim. I researched it a bit. Thank you for that mucky thing. I just wanted to know. You know?\"\n\nI nod and she spears me into her vagina. This time she rides me lazily. Shining blue eyes down on mine and holding my jaw gently she plumbs her depths with me, simply enjoying the fact of us. Three weeks ago, I took her. Now she is taking me. She lies down on my chest pressing her breasts hard against me and wrapping her arms around my neck to kiss me then moves back down to fully press herself around me.\n\nThe smell, the heat and the sweat of us; fill the cocoon we share and the cameras are forgotten. Two or three or more times she tenses, and I know she's cum a little, then my own needs surface again. Surging against her I pull her butt cheeks down hard on me driving my dick as deeply as I can then throw my head back to, \"Gahhh... Fuck.\"\n\nWhen my eyes open, I can see her smiling down on me. It takes some time before I'm aware of the phone ringing.\n\n\"Fuck the bitch. She can watch us in the pool.\" Jackie schlurps off me audibly, then takes my hand to lead me willingly out back to the pool. \"I really need to cool off.\"\n\nThere are seven cameras operational and by Tuesday morning Trish has seen us fuck one way or another on all of them except the one by the front door. There are some things that the neighbours don't need to see.\n\nJackie drives herself to school on Tuesday. Monday was a pupil free day. She couldn't decide after our long weekend if she was sad to leave or happy for the time together, but she was positive that she was going to visit through the week.\n\n\"Tim?\" she asked me, getting into the hatchback.\n\n\"Yeah?\"\n\n\"I'm worried for Tishy. Make sure she's ok, okay?\"\n\n\"Always, darlin. You good?\"\n\n\"Better than good. Driving to school, 'woohoo', bow-legged, leaking jizz from my ears. Just like I wanted and more. But really worried my big sister is going to fall apart somehow. See you Thursday.\"\n\nI hug her and she kisses me like little sisters-in-law shouldn't.\n\n\"Fucking love you.\"\n\n\"You too, darlin.\"\n\n...........................\n\nTrish sizes me up. \"Hmmph.\" Is all I get as I pick up her bags and drag them to the ute.\n\n\"You could try and look like you missed me.\" She tells me then ignores me to play with her phone as we walk toward the car.\n\nSuits me, I have no idea how to tread these waters or what to say. She's watched me sleep with her... Oh god. I can't even think on it.\n\n\"Timothy?\"\n\nGod; not 'Tim'. \"Yeah?\"\n\n\"Take me home.\"\n\n\"Uhuh.\"\n\n\"I love you.\"\n\n\"Uhuh\"\n\n\"Just... Shh... Okay?\"\n\n\"Uhuh.\"\n\nShe struts from the silent car ride into our house. I drag her luggage up the drive and at the door I rub my hand through my hair. Perhaps I should not have enjoyed this all so thoroughly. Maybe I should have appeared more reluctant?\n\nThe door clacks closed. Louder than it should have. Not a slam, but fuck...\n\nShe turns and looks at me. \"You. Shower. Now.\"\n\nI showered less than three hours ago, after Jackie and I finished making love before... Damn.\n\nI walk down the hall like a zombie. My feet feel like they are walking on the breaking bones of our relationship. Crunching under my feet, memories of the last... God damn. I hurt... I can see something deep and wrong in her face when I questioningly look back.\n\nThe water is deliberately hot. It stings and I try to scrub Jackie off me. It hurts. Not cause it's hot or harsh but because I love the girl. The woman. I don't want to wash the-\"\n\n\"Room for me?\" My wifey's lilting sweet voice inquires.\n\nI can't answer directly and just open the door. \"I thought you were angry.\"\n\n\"You're an idiot. I just need to scrub that skinny bitch off you.\" She growls and takes my sponge.\n\nFor some reason she thinks the part of me that needs most attention is my dick. If she only knew that it was my soul that needed scrubbing. I was so deeply, madly, in love with both of them that no amount of soap would ever scrub that off me.\n\nWhen I'm \"clean\", however she judges that, she kneels and sucks my dick right back into her as if she is claiming it all over again.\n\nThen she pulls it out and inspects it.\n\n\"Ha hhmph... Just like I left it.\" She sucks it back in again and fellates me like it's an Olympic competition. In no time I push at her forehead.\n\n\"Darl, Darl. I'm...\"\n\n\"Oh.\" She finds my eyes for the first time since the airport. \"Sorry.\" Then she's crying.\n\nI hold her. Don't know what else to do. She softens against me.\n\n\"Bedroom.\" She tells me and steps out of the shower busily to harshly towel herself and disappear.\n\nTrish lies naked on our bed watching me. Well staring straight into my eyes. This can't be good. Her own eyes are puffy and red, and she still has wet trails on her cheeks, but she seems to have finished crying.\n\n\"Come here idiot.\" She says softly. \"Come here.\"\n\nSo I lay beside her on my side and watch for some sign of what I should be doing.\n\n\"It feels like the first time we made love. Do you remember?\"\n\nNot really, but I nod.\n\n\"Your bedroom, really quietly because your parents were home. I was so nervous about whether you'd like my body and whether I was any good at it.\"\n\nI smile, I do remember now. I felt much the same way. We hadn't seen each other for years then at some random party I caught her eyes across the room and that was it. I snuck her into my house and spent the night trying to be as quiet as possible. The breakfast Mum had prepared the next morning told us both that we had failed.\n\nShe rolls over on top of me and straddles me. Her hair smells like shampoo and it's cold against my chest. I cradle her head to me and rub her back.\n\n\"Do you still love me?\" She asks.\n\n\"Of course darlin, why? What's...\"\n\n\"Just being stupid. Feeling stupid. So many feelings. Everything's different but nothing has changed.\"\n\n\"Oh...\"\n\nShe rises to look in my eyes and watches me intently as she slides herself down on me.\n\n\"Aw...\" I groan as her silky walls slip me inside. \"I've missed you.\"\n\n\"Shh... Don't speak. Just be here with me now.\" She insists and starts moving me slowly inside her. The familiarity and intimacy envelopes me. My hands smooth down over her bum and pull her onto me as I thrust up exaggerating her slow controlled motions. She lies on my chest still, content to hold me but raises her hips a little to grant me more room for motion.\n\nHer fingers clench in my chest hair and slowly she pushes up away from me to smile at me and establish her own familiar rhythm.\n\n\"Now I'm home.\" She tells me simply and I believe we are. Her eyes close and she relishes the intimate connection and the building sexual stimulation. I can feel from her tiny twitches and her expressions, physical indicators that I've learned over the years that she is on her way toward her orgasm and I start to relax from my apprehension and enjoy the moment too.\n\nShe sighs above me; I had no idea she was even almost there. But there it is, fluttering muscles and gasping kisses and spoken truths.\n\n\"Oh god. I was losing you. It was my idea, but I was... so far away... I love you. Hold still. Oh god. I love her too. We're good. I'm good. Just needed to claim you. So hot. I fucking love the cameras. Oh fuck... Oh fuck... Oh fuck you're a good man. More than I deserve. I'm so sorry for stretching us like this. I know you were happy before. Just. Oh. Oh. Fuck. Right there. God. I'm an idiot. I love you.\"\n\nMy own orgasm subsides beneath the profound weight of her own release. I tingle on the shelf of this cliff, and breathe. Her mouth is all over mine, kissing and sucking and she thrusts and brings herself off again.\n\nWhen she finally stills above me, still kissing and holding me and still gripping less strongly now, she speaks.\n\n\"Owoh. Tim. Honey I love you SOOOO much. Just everything has changed and I'm struggling to adapt.\" She slaps my chest for emphasis, \"Not us. Not us. We're still... God... Just fuck... ME!!!\" and then she's crying.\n\nHave I said how much I don't like crying?\n\n\"First it was watching you and Jayjay, then it was pictures, then it was cameras. Oh god. Thank you so, SO fucking much for the cameras. Then every female hand I was shaking, I was imagining watching you fuck her. God. I'm such a fuck up. Such a fucking... Fucking god. Such an IDIOT!\"\n\nShe's still clenching me with little aftershocks and moves up to suck my bottom lip between hers.\n\n\"I'm sorry for being dramatic,\" She finally tells me quietly, \"I'm the psychologist. I'm supposed to have some sort of insight into how this all works. But here I am, struggling with a voyeurism fetish and wondering what impact it will inevitably have on our relationship. So many new emotions to deal with, making it hard to get any insight into what has happened inside my head. Do you know what I mean?\"\n\n\"I think you think too much.\" I smirk, \"You always have.\"\n\n\"But look,\" I tell her, \"I don't know much about how people work but I know about physics.\"\n\n\"What's physics got to do with anything?\" All this chatter has done nothing for my dick. It softens and plops out of her. She laughs, taking a wet wipe from beside the bed and cleans herself.\n\n\"Look, when you set a body in motion, all you offer it is momentum. It will follow the path you put it on until it experiences an outside force. That force will affect the direction and balance of the body until it re-establishes its equilibrium. I believe we are all creatures of the universe and subject to the same laws of physics, just that with our flesh we gained hearts for gyroscopes and minds for compasses.\"\n\nShe is watching me with interest instead of the mockery or sarcasm I mostly expected.\n\n\"Our hearts soak up the knocks and bumps of our lives and our minds keeps us on track. When you're with someone, you connect your hearts. When one person takes a knock, you draw on two hearts and steady yourselves again.\"\n\n\"Now, when you add a third to the mix, it's bound to upset the whole equation and rock the boat, change courses and possibly even crash things. We were lucky. Lucky that our hearts and minds were all connected to a degree to start with. At the moment... we are wobbling. Not broken. Just wobbling. But we are all on the same course and now we can each draw on two like hearts to keep us steady. Things will settle and we will be fine.\"\n\n\"Promise?\"\n\n\"Someone I know once said, \"It's a little unconventional but we'll work it out maturely.\"\"\n\n\"Butthead.\"\n\n\"But NO! No randoms. No more variables. Please. I don't want you bringing home random lady shrinks so you can exercise your Freudian kinks.\"\n\n\"Ok.\" She smiles up at me from the crook of my arm. \"I need to put some limits and borders between fantasy and reality. I'm happy where we are. I feel very lucky and very loved.\"\n\nWe lay quietly for a while then she says, \"Gross, you're all sweaty you pig. Wrangle me a beer and meet me in the pool.\"\n\n\"Ok. But you owe me an orgasm. I was so close and then you went full shrink on me.\"\n\n\"Oh. Oh, I'm... I didn't realise...\" She looks genuinely embarrassed as she looks back naked from the doorway, \"We can...\" She glances at the bed.\n\n\"Later darlin, unless you're going somewhere.\"\n\nHer smile tells me she'll make good.\n\nThe sun is bleeding through the clouds and the sea-breeze chills my arms and back. Trish is making good on her promise. As I sit on the pool steps, her head bobs up and down in my lap and I grip the rails with whitened knuckles. My balls boil and suck tight against me and I wait for the rubber band to snap.\n\nNo warning is required. She insists on swallowing. She hates if I make a mess. Grasping her head to hold her still, I feel the first burst of semen pump through me and she moans around me. As the second spurt launches a number of things happen at once.\n\nThe screen door from the house startles us as it slides open. Trish and I turn to see Jackie with her hand over her mouth giggling at having caught us out and the last three ropes of my orgasm pump onto Trish's neck and breasts."
    ],
    "authorname": "Rollinbones",
    "tags": [
        "anal",
        "bride",
        "first time",
        "sister in law",
        "voyeurism"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/unconventional-6"
}