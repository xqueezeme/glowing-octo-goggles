{
    "title": "Prussian Blue",
    "pages": [
        "The events in this story follow immediately after another story, Armistice Day. However, you don't need to read Armistice Day to enjoy this one. It is a 'slow burn' as they say around here, where people take time before jumping into bed with one another. Consequently, usual caveats apply, Prussian Blue is no quickie. But read on if you dare, and if you do, I hope you enjoy this tale!\n\n\u00a9 2021 Thefireflies, for Literotica\n\n~0~\n\nOutside the carriage window is the land of my dreams; rolling hills and cattle and gum trees, giving way to houses on stumps with long verandas and roofs of iron baking and rusting in the sub-tropics. In the living nightmares of the past few years this is the place I've longed for, wondering if I'd ever return, my valley safe from the horrors of war, my home.\n\nThe locomotive huffs and puffs, slowing, out the window a couple of kites swirl and hover in the indifferent blue sky as they hunt beside the tracks. A house here and there is in disrepair, yards overgrown like their owner up and walked away.\n\nWhen the train stops, the act of grabbing my canvas kit-bag from under my seat and standing provokes an involuntary groan. Following my three fellow passengers, I'm stepping into the bright afternoon light and wall of humidity.\n\nOn the platform the station master's instructing a young porter who's manoeuvring an empty cart into position beside the train, and he looks up, our eyes connecting, his hand shooting to his mouth, beads of sweat running down his red face.\n\n\"G'day, Mr Forsyth,\" I say.\n\n\"Oh, my, Alfred Graham,\" he says, his accent thickly Scottish, eyes wide. \"Oh, my, laddie, you're back. Your mother and father will be more than pleased.\"\n\nSwallowing, I say, \"I, um, I heard about Walter. I'm sorry.\"\n\n\"Aye,\" Mr Forsyth says, his eyes downcast.\n\n\"By all accounts his bravery saved many of his mates.\"\n\n\"Aye, they gave him a Distinguished Conduct Medal.\"\n\nPosthumously, of course. What do you say to a father who's lost his son to the war? \"He was a mate of mine.\"\n\n\"Aye, I know.\" Mr Forsyth looks away, ignoring the young porter who's now looking to his boss for instruction.\n\nWalter Forsyth, my fellow opening bowler for the district cricket team, was in a different battalion, but we were in the same battle at a place called Messines, where I'd heard the story from other men, of how Walter silenced a machinegun threatening his platoon, allowing his comrades to storm the enemy trench, where he was fatally shot soon after.\n\nHis father's clearly struggling to hide his grief and when I place my hand gently on his shoulder he says, \"I s'pose we won so his death wasn't in vain.\"\n\nI find myself nodding, knowing neither of us believes the sentiment, because the cost in lives has outweighed the victories. \"We'll get the lads together and put up a grand memorial for the boys who didn't make it.\"\n\n\"There's more than a few who aren't coming home.\" His voice is almost a whisper. He turns to his porter, quietly telling the young lad to move the luggage cart up the platform.\n\nWalking through swirling steam coming from the black locomotive, I think how it was four years previously, late in nineteen-fourteen, when I last stood on this very spot. Walter Forsyth wasn't with us then, but his father had spoken to us, having a laugh as was his way while he went about his business running the station.\n\nWith a heavy heart I wonder how many other faces are missing. Leaving the station, the Commercial Hotel looms in front of me, like a beacon. In the past I was a boy and prevented from drinking alcohol in a public house by law, and only ever set foot inside the building with my father.\n\nI was barely old enough to go to war and now I'm old enough to drink and I'm tempted, wondering if I were to walk through the door, would my mates be there drinking and laughing as if the past four years were a bad dream?\n\nWould my three cobbers who I'd joined up with be there; Will Eichstaedt and the O'Riordan twins, Mick and Francis? And would old Arthur Coleman be taking the piss out of young Walter Forsyth before getting drunk and telling us we were like sons to him?\n\nNope, there's only three old cow cockies I don't recognise sitting at tables on the veranda with glasses filled with liquid amber. Shit, I could do with a beer, wanting so badly to share a drink with my mates who will never grow old. Jesus...\n\n\"Christ almighty,\" someone booms from the darkness of the pub's doorway and I reckon I've jumped near three feet in the air. \"Who let this stick with a prick back to town?\"\n\nThe voice must be in my head, a ghost, but sure enough the he steps from the pub into the sunlight, my heart leaping, almost bursting. \"Bloody Mick O'Riordan, I was just thinking about you, you bastard, I thought you were dead, this must be a dream!\"\n\n\"Yer wost bloody nightmare come true more like it,\" Mick says, limping down the steps in a jiffy and I've stuck out my hand, but the nugget brushes it aside and scoops me up in a hug, squeezing the living daylights out of me before dropping me back on my feet. \"How ya goin', cobber, orright?\"\n\nBehind his scruffy thick black beard he's grinning from ear to ear, at least he would if he wasn't missing his right ear, the rest of his face covered in scar tissue, including covering his missing right eye, and I might have once gagged at the sight of him but I've seen much worse.\n\n\"Matey, I'm orright, how about ya-self.\"\n\n\"Fuckin' brilliant now you're comin' in for a drink and I ain't takin' no for an answer.\" He's snatched my kit-bag and turned, limping up the stairs. I follow and a few blokes I don't recognise nod. Mick sits at the bar, dropping my bag on the empty stool to his right and he's holding two fingers to the publican, ordering drinks. There's another man to his left, a little bald fella, and I take my kit-bag, dropping it to the floor so I can sit. \"They're out of the good whisky because of the fuckin' war, so you'll have to make do with the shit Danny here distils.\"\n\nThe publican frowns, telling Mick, \"I've told you watch your language, son, and if you don't pull your head in quick smart you'll be out on your arse quicker than lightning.\"\n\n\"All I'm sayin' is yer whisky ain't as good as the finest drop from Ireland and Scotland.\" He turns to me, whispering, \"Not even close to their worst drop either, but it's all he has for now. Not even close to the sly grog me and Francis used to make down the back paddock.\"\n\nWhen Mick mentions his twin I reckon he flinches and I see it in his eyes and he sees it in mine. Francis and Mick, inseparable from the moment of conception, separated forever by a German artillery shell.\n\nDanny the barman nods at me, handing over the glass of clear liquid. \"I'll warn ya, Alfred, you and Michael best go easy because he's on his last warning and your old man won't be impressed if I have to give him a call.\"\n\n\"Jesus,\" Mick's saying, \"Alfie here survived more battles than you've seen women's privates and yer already threatening to call his dad to take him away! S'pose his old man were to hear about yer little backyard still?\"\n\n\"I'm warning you, O'Riordan, you'll be out on your ear if you don't shut it.\"\n\nMick mumbles something as the publican glares and moves away to the bald man down the bar from us. We get stuck into the grog, the liquid burning my throat and irritating my airways, sending me into a coughing fit.\n\n\"Told ya it's pretty fuckin' bad,\" Mick says, dryly.\n\nBetween coughs, I tell him, \"Think I'll stick to beer.\"\n\n\"Normally I'd say wise choice, but this shit's all that keeps me asleep at night, and then not always.\"\n\n\"Jesus...\"\n\n\"Nah, he don't visit me and I don't visit him either, much to Father Maloney's disappointment. Reckons I'm goin' ta hell, but I told him I've been there and the devil didn't want me but the bastard took me blessed brother instead...fuck I need another drink.\"\n\n\"Mate, everything alright?\"\n\n\"Everything's as peachy as it can be, cobber, so don't you worry about me...hey, Danny, another of your rotgut and a beer for Alfie and I'll keep yer little secret, ay.\"\n\n\"You and I'll have words, Michael,\" Danny says with a frown, but he hands over the drinks, the beer cold from a keg evidently kept on ice.\n\nWe clink glasses, Mick saying, \"This one's for Francis,\" and we drain our drinks, my beer refreshing, sliding down quick.\n\nOur next drink is for Will, then another for Walter and another for Arthur. We could go on like this into the evening, naming blokes we knew from our valley here or other's we served with. But my stamina flags and something's bugging me. Looking down at the timber bar, I tell Mick, \"I was with Will...\"\n\n\"Yer what, mate?\"\n\n\"We'd done a trench raid and a Jerry tried to stick Will with his bayonet, but the blade caught up in Will's respirator. When we got back to our lines he showed us the damage. I guess he never found time to get a new one before they dropped gas on us.\"\n\n\"Shit...\"\n\n\"Will made sure other blokes put their nose bags on...I kept telling him to put his on...he, ah, told me to find Mary and tell her he loves her...and, um, to make sure she and Jack are...\"\n\nBitting my bottom lip, I can't go on, and Mick whispers, \"Christ, he knew his time was up didn't he? And what about you?\"\n\n\"Sucked down my fair share the stuff before I got me mask on. Chlorine, fucked me lungs up, can't run or do other physical shit without it burning and making me cough like a bastard. Cold nights set me off too, like when drinking the shit you call whiskey here. Been in a hospital for the past year in England and just spent a month down in Melbourne.\"\n\n\"Fuck...I didn't know.\"\n\n\"I ain't told anyone. Anyway, I need to see Mary and tell her.\"\n\nMick's silent with his head bowed, then says, \"Mary's shot through. Dunno where, Brisbane probably. Took little Jack with her of course. Word is she stayed here with Will's parents but began using her maiden name pretty much the entire time. When word came through of Will's death she up and left.\"\n\n\"Are you serious, she dropped her married name then left?\"\n\n\"Yep. Bloody big changes back here, cobber. You probably heard many families with German names changed to something English sounding like them Pommy Windsor royals did. The Beckers are Bakers and the M\u00fcllers from up the valley are now the Millers, the Schmidts are Smiths. The Webers are still Webers, but you know how it is around these parts, half the bloody district have German names. Whole towns have changed names too, like you may have heard bloody Englesburg was renamed Kalbar, which is some Aboriginal word I think. But everyone's trying to be more British than the British, waving their Union Jacks, bloody dickheads. If they think they have it tough they should try being Irish Catholic from since time began and we O-bloody-Riordans never felt the need to change our bloody name. But the politicians stirred people to hate anything German and some take this as permission to be arseholes to their neighbours. Would you believe old Ernie Brown got done by yer Dad for trying to set fire to Eichstaedt's saddlery after two of his boys were killed over there somewhere?\"\n\n\"Really? Even though Will fought and died and the Eichstaedts have lived here for about thirty years and everyone respects them?\"\n\n\"Lots of people doing stupid things but the stubborn Eichstaedts won't change their name.\"\n\n\"Ludwig shouldn't have to change his name, he's not the enemy. Will fought and died for all these bastards back here.\"\n\nMick grunts in agreement and tells me, \"Ava's a nursing sister somewhere too. Joined up as soon as she could, following her big brother to war.\"\n\n\"Ava...\" My heart skips a beat at the thought of Will's next younger sister, heat rising to my face. \"Do you know where she is?\"\n\nMick's laugh is hearty. \"I knew the mention of Ava would stir you up. Two words for ya, cobber, Ethel bloody Wilson.\"\n\n\"I never should've asked Ethel to dance after Ava refused me.\"\n\n\"We all danced with Ethel, my friend,\" he says with a wink. \"Ethel especially liked horizontal dancing and she reckoned I was better and bigger in that department than you, Flash.\"\n\n\"Bullshit.\"\n\n\"It's true, but she's left town too, married some poor bloke back from the war who took up one of them soldier-settlement deals out west in brigalow country. But yeah, back to Ava, she's doing her bit, and Will's gone like many of the boys from 'round here, but old Ernie thought he'd take his grief out on their family.\"\n\n\"And Mary, you say she went to Brisbane?\"\n\n\"She did, but dunno where exactly.\"\n\n\"I just came from there, I could've looked her up.\"\n\n\"Like I said, mate, Brisbane's my best guess.\" His smile is cheeky now. \"Reckon yer goin' ta man up for her?\"\n\n\"Don't be fuckin' stupid, no one could fill Will's shoes.\"\n\n\"Yeah, but you thought of it, right? Blokes all over coming back to shack up with their dead mate's missus. Don't be ashamed, bloody no better lookin' woman on Earth than Mary bloody Hamilton. I know I'd track her down if it weren't for this ugly scarred fuckin' head of mine and I reckon all the blokes in Brisbane will be climbing over Mary given half a chance.\"\n\nHe's grinning, because Mary had a quality about her, something I can't explain but something all men inherently know when they see such a woman. Shamefully I'd thought more than a few times how I'd come back to visit Mary and offer my help in any way she needed, wondering if perhaps she might like me to stick with her.\n\nFor the thousandth time I quash this thought as quick as it comes, burning with shame, and I'm not going to admit my folly to anyone, even my cobber Mick here. \"I'm not after Will's wife, mate. I only want to pass on his message and see if she's managing. Must be difficult raising young Jack on her own.\"\n\nMick looks me in the eye. \"If you don't some other bloke will. Reckon Will would rather it be his closest mate. Might be nice to coax her back to the valley so Will's folks can see Jack again too. The boy needs to know what kind of a man his father was.\"\n\n\"Yeah, we'll see.\"\n\nMick orders another round of drinks and we don't speak of Mary again. A few blokes say G'day, several buying us more drinks, and before long I'm slurring and Mick's on the verge of picking a fight with Danny, who's telling me to take Mick home.\n\nWe're stumbling into the twilight, the aura of the setting sun still glowing over the distant ranges, birds settling to roost in trees and night animals emerging to hunt. A small bat flashes between us and a large black cat saunters down the road, turning to glare at us, and Mick makes the sign of a cross.\n\n\"Thought you didn't believe in religious shit anymore?\"\n\n\"Old habits,\" he says. \"Like walking this road in the dark, pissed as a fart...won't be the first time I spend the night in the lock up.\"\n\n\"Dad's not goin' to arrest you, dickhead.\"\n\n\"The new cunts-table in town's gonna put me away before yer dad can stop him, probably you too.\"\n\nA dog barks and a man's deep voice calms it, shadows watching us from a house veranda, cigarette flaring in the darkness. Up ahead I can see the police station and court house, both buildings on stumps with wide verandas and iron roofs like most buildings in the district.\n\n\"Almost like my second home,\" Mick mumbles, barely slurring despite the amount of alcohol he's put away.\n\nAnd there's my real home, the house up the road from the station, where I'd grown up from the time Dad became the local police sergeant, back when I was a wee lad.\n\n\"Is it you Michael O'Riordan?\" There's a man standing in the light of the police station door and he starts down the steps. \"Bringing yourself to the cells this time, saving me the trouble?\"\n\n\"Is that you Constable...what's yer name again, Carroll...or is Carroll yer first name, I can't recall.\"\n\n\"Hey,\" I whisper, nudging Mick's arm, \"You'll get us arrested.\"\n\n\"You boys can either do this the hard way or the easy way, your choice,\" the Constable says as he saunters towards us. Even in the dark I can tell he's a solid bloke, rolling up his sleeves. He must've seen my Army issue kit-bag because he says, \"I dunno who you are, Digger, but you should consider the company you keep.\"\n\nFor all his faults, Mick's me cobber and I feel something rising within me. \"You worry about your business and I'll worry about whose company I keep.\"\n\n\"Oh, you are a dumb shit,\" he says, stepping forward and I'm gut-punched, doubled-over winded, struggling for breath, coughing uncontrollably, gasping...\n\nI'm aware of the struggle going on next to me, Mick and the Constable grappling, but I can't breathe for the life of me to stop them.\n\nHurried footsteps on gravel approach and someone's yelling, \"What's going on here, bloody stop and let him go...Mick O'Riordan, let Constable Carroll go right this moment, you're in deep enough trouble as it is.\"\n\nMemories come flooding, a whole heap of them, the voice instantly familiar to me as my own, and I gasp and groan, \"Dad...\"\n\nTime stops, except I'm on my hands and knees in the gravel, struggling for breath, my lungs on fire, mouth tasting of vomit.\n\n\"Alfred...is it really you?\" His hands are on me, his voice cracking as he says my name over and over. For a man I've never known to show emotion, his voice is urgent, saying, \"Help me, bloody help me get Alfie up, my boy, he's home!\"\n\nHands lift me to my feet, Dad supporting me, walking me up the path, up the steps, calling for help, a blur of light and noise, people, Mum's voice quivering, \"Alfie! My dearest, Alfie!\"\n\n\"G'day, Mum,\" I croak, aware enough to grin, seeing her with hand on chest, coming forward and grabbing me, holding me with Dad, and she's sobbing. The room's full of excited voices and I hear my name spoken over and over, my sisters Priscilla and Ivy, plus my little brother Reggie, all there. Everyone's dressed up like they've come from church or somewhere fancy, shock written on their faces. With another grin, I say, \"Yer all look like ya seen a ghost.\"\n\nPriscilla steps forward, but not to me, going to the big Constable, making a fuss because his nose is bleeding and has a nasty bruise spreading across his cheek, and I'm vaguely aware he's told her it's nothing to worry about.\n\nMy littlest sis, Ivy, who must be fifteen now, stays back, standing beside our piano, hesitant, and Mum tells her to get a damp cloth while Dad instructs Reggie to take my bag and hang two extra mosquito nets in the enclosed section at the end of the veranda. My little brother is a year younger than Ivy, only ten I think when I left for the war and fourteen now, but he's grown into a tall lad, like all of us Grahams. He's hesitated or hasn't heard right, jumping when Dad booms, \"Now, Reggie!\"\n\nAmidst the hubbub I notice four faces at the door to the dining room; Will's parents Ludwig and Frieda, and their youngest daughters, Martha and Gisela. Like my own family, they're all smartly attired, Ludwig in a fine suit and the three women in matching dark blue dresses.\n\nTheir presence startles me, where they are silent, observing our family reunion with a look of confusion or shock, and I catch Martha and Gisela's stare, both pairs of eyes meeting mine; eyes wide and sky blue, identical to their brother's.\n\n~0~\n\nWill's eyes meet mine, blue and intense even in the dim lamp light of the dugout, his face grim, but he manages a half-smile, pulling on my belt straps, checking my kit, reaching up and tugging my helmet strap, making sure it's tight. \"You ready for this?\"\n\n\"Ready as I'll ever be,\" I say, nodding, hefting my Lewis machine gun, the heavy bastard it is, sickness rising in my belly and heart.\n\nHe looks around, our mates checking one another's kit to make sure no one forgets their respirator, or closing ammunition pouches and tightening loose helmets. One bloke ties his boots, then unties them, tying them again, then triple checks. There's nervous chatter and the Lieutenant strides by, his face as young and grim as ours, yelling for the riflemen to fix bayonets. His voice is hoarse and seemingly confident but his eyes are as fearful as ours too.",
        "Will picks up his Lee Enfield, attaches the long cold hard steel blade below the muzzle, then pats me on the shoulder. \"Keep your head down, Flash, and we'll put some runs on the board.\"\n\nExactly like on the cricket pitch, Will instructing me, the shittiest tail-end batsman ever to swing the willow, to keep my head down and defend my wicket so we can put a few more runs on the board. \"Fuckin' oath we will.\"\n\nHe smiles. \"Good lad.\"\n\nFrancis and Mick O'Riordan appear out of the dark, the twins looking more identical than ever, I can't tell who's who despite knowing them all my life, stocky men with grins and rifles slung on shoulders. I nod to them, smiling nervously rather than with joy, and there's the brass hat, yelling more orders, and we're stepping up to the firing step where ladders await in the pre-dawn darkness, artillery rounds whistling overhead, exploding with deafening cracks, seemingly not too far in front, dirt and shrapnel flinging into the air, a walking barrage, and Will and I make eye contact again.\n\n\"Long way from our green valley,\" I say.\n\n\"We'll get back there, cobber, then we'll throw a huge party where everyone's invited.\"\n\n\"Even Ava?\"\n\n\"Mate, forget Ava, she's not interested.\"\n\nMick laughs and says, \"If only you hadn't asked Ethel Wilson to dance...\"\n\n\"...then you might've had a chance with Ava when ya get back,\" Francis adds.\n\n\"What about Martha,\" Mick says, cheekily, \"She's the dead spit of Ava, probably even better looking?\"\n\n\"Or Gisela,\" Francis says, winking, \"She's the dead spit of Will.\"\n\n\"A bloody force of nature, she is, no man will ever tame little Gisa,\" Mick grins.\n\n\"Pipe down, you bastards,\" Will says, \"Gisela might not be marriage material for weaklings like you blokes but she's the best little brother I never had.\"\n\n\"Alfie here should take note of how she bowls a cricket ball,\" Francis laughs. \"She could teach him a thing or two.\"\n\n\"She should also give 'im pointers on how ta bat,\" Mick says, still grinning. \"Remember how pleased she was to clean bowl ya, cobber?\"\n\nWill gives me a smile. \"I reckon Gisa watches the Flash keenly, she's the one taking notes.\"\n\nThe conversation's absurd, confusing me, and a series of the most mighty thumping explosions I've ever felt or heard blasts our world, the ground rising and falling, men losing balance, and I'm near shitting meself, and someone's in hysterics, reckoning the Huns are blowing mines under our trenches, but an officer's calmer voice is saying it's our mines blowing deep under the German trench system along the ridge to our front, and a whistle's blowing and there's shouting, orders, organised chaos, and we climb the ladders, going over the top, my heart thumping, head down but eyes forward scanning across no man's land, seeing nothing but explosions, deafening, too close for comfort, dirt and steel flying in the air, shattering barbed wire and men, and there's a long line of men either side of me disappearing into the dark, an officer yelling orders to spread out, and I can see Francis and Mick, rifles in hand, bayonets fixed, steaming forward but moving further and further to my left.\n\nThe twins turn as if knowing I'm watching, both waving across the battlefield in the same manner they might if they'd seen me walking on opposite sides of a street, and they vanish in a flash of flame, and I feel hot steel rip my flesh of my arm and side, Will's on my right yelling to keep moving forward up the burning ridge, but we're in a house now, not a battlefield, and I look ahead to see Martha and Gisela standing in a doorway, their identical blue dresses much darker than their striking blue eyes, staring at me, but the house is vibrating with the sound of a hundred Vickers machine guns, maybe it's The Pig, the snoring German we later crept up on in the trenches, and it's bizarre and absurd and the world is coming down around me...\n\n~0~\n\nThe house is still standing, but the snorting noise is horrendous. My heart beats like a locomotive, as does the pounding in my head, and my face is itchy and puffy. When I sit in my stretcher something brushes over me and I take a moment to get my bearings, where I discover it's the mosquito net which has trapped more mossies than it's kept out, the little bastards buzzing annoyingly. But not as annoying as the horrendous snorting coming from Mick who's a few feet away, snoring like The Pig.\n\nLaying back down, I close my eyes again, my heart settling, listening to the birds chirping away in the yard, starting their day in the pre-dawn like soldiers do before going over the top, and there's some critter scratching away under the floorboards, then movement in the house, heavy boots.\n\nSomeone walks onto the veranda and stands at the end of my stretcher. It's Dad, like he used to do back when I was a boy, sometimes saying good morning before heading to work. He whispers, \"Morning, Son, I thought Mick should stay out here rather than in the lock up, but I think you best get him off to his parent's dairy before Matthew arrives for work.\"\n\n\"Matthew?\"\n\n\"Constable Carroll. He's, a good man and decided not to press charges against Mick despite being well within his rights.\"\n\n\"Your Constable struck me first...\"\n\n\"It doesn't matter who struck first, Constable Carroll's a police officer. You should also know he served like you and Mick, and he doesn't drink to drown his demons. You may also like to know he's your soon-to-be brother-in-law.\"\n\nI recall Priscilla running to his side the previous evening, two and two beginning to make four. \"Great...\"\n\n\"You'll get used to it because he's a good bloke.\" Dad stands for a moment longer, turns to leave but stops. \"It's great to have you back, Alfie. Truly, your mother and I have prayed for this day for a long, long time. I look forward to catching up properly tonight.\"\n\n\"Yeah, thanks, Dad.\"\n\nHe walks off to the police station down the road, the twilight starting to blot the stars from the sky. My head pounds and Mick still snores, so no more rest for the wicked, yet I try. At this time of year, early December, the day quickly heats when the sun pokes its first ray over the horizon, so I'm out of bed, sitting, scratching at mosquito bites.\n\nMick stirs and I nudge him with my foot, him telling me to, \"Fuck off.\"\n\n\"Gotta get up, cobber. Dad's been good to ya but wants you to piss off home before the police arrive.\"\n\n\"This is the police cottage, they're always here.\"\n\n\"Exactly. And apparently the bastard constable's marrying me sister.\"\n\n\"Oh, yeah, I forgot, but like I told ya yesterdee, big changes around here.\"\n\n\"What, you knew the bastard was marrying me sister?\"\n\nMick laughs and eventually he leaves. I head through the house and down the breezeway into the detached kitchen at the rear to find Mum stoking the fire in the iron range. She turns and smiles, rubbing her hands down the front of her apron. \"Morning, you. Your face looks worse for wear.\"\n\n\"Bloody Reggie didn't do too good hangin' the mossie net last night, might as well have slept without it.\"\n\n\"No swearing in my house, please, this isn't an army barracks.\" But she's smiling all the same.\n\nReggie comes in like he's heard me talking about him, a younger version of me with brown hair unkempt like a birds nest. Without any preamble, he asks, \"Did you kill any Germans?\"\n\n\"Nah,\" I lie. \"I relaxed behind the lines serving a General tea and biscuits the entire time.\"\n\nReggie gives me a strange look, not quite sure if I'm being sarcastic or not. I sit at the timber trestle table and pick up Dad's newspaper, ignoring my little brother for now. A full nine years younger than me, we've not been terribly close, though he used to follow me around like a puppy when he was much younger. He sits opposite and asks, \"What'd'ya really do over there?\"\n\n\"Don't bother your brother,\" Mum tells Reggie, \"He's hardly arrived home more than a few hours ago.\"\n\nI'm not sure how much I want to tell anyone, so stay silent. More movement and Ivy walks in with a cane basket, her hair auburn and curly like Mum's used to be, smiling prettily at me, but stays silent. Like Reggie, she and I aren't too close, however I helped Mum and my sister Priscilla with both our younger siblings when I was a younger lad. I decide to break the silence, telling her, \"Look at you, Ivy, all grown up. I reckon you've grown a foot or two since I left.\"\n\n\"She's too tall for a woman,\" Reggie says and I kick his foot under the table.\n\n\"Don't listen to him,\" I say, \"You look perfect.\"\n\nIvy smiles and blushes. \"Thank you, Alfie.\"\n\nMum turns and smiles at me too, then takes the basket from Ivy. \"Not so many today?\"\n\n\"I don't think Mrs Black is laying as often as she used to. Getting a bit old, same with Bess.\"\n\nReggie looks over his shoulder and says, \"Looks like we'll be having roast chicken soon.\"\n\n\"Don't even think about it,\" Ivy scolds him, more confident around her little brother than with me.\n\nMum laughs and picks several eggs out, cracking them into the hole cut into well buttered bread in a frypan. \"Frog in a hole, Alfie, I hope it's alright.\"\n\n\"Thanks, Mum, you know me, I'm not fussy.\"\n\n\"Nope, none of you boys are, and now Reggie's eating like a grown man so there mightn't be enough eggs to go around today.\"\n\nIvy, who's setting the table now, adds, \"He eats as much as a man but still doesn't even do half the work expected of a boy.\"\n\nI kick Reggie under the table again. \"You'll have to smarten up, mate, I was out of home and working when I was your age.\"\n\n\"After last night's effort with Mick O'Riordan you're the one having to smarten up. What happened, can't punch on any more like you used to?\"\n\nI glare at him, somewhat shocked at his cheek, but on cue Priscilla walks in and surprisingly Constable Matthew Carroll follows in his crisp uniform and bruised face where Mick's fist landed. Two years younger than me, Priscilla and I were close back when we were expected to help out around the house without question, helping raise Ivy and Reggie. I lament we'd drifted apart once I began working on dairies and timber mills and other odd jobs around the district, but we'd exchanged several letters during the war, yet her engagement to the new Constable is a surprise.\n\n\"Alfred,\" she says, but not in a friendly greeting. \"I think you owe Matthew an apology.\"\n\n\"Excuse me?\" I'm not sure if I've heard correctly and even Mum clears her throat like she might cough, turning to face us.\n\n\"Don't worry about it, Prissie,\" Matthew says, then he holds his hand out to me. \"No hard feelings, eh, Dig.\"\n\nI stand and take his hand, both of us shaking with a crushing grip. \"No hard feelings, eh. Looks like ya goin' ta be me brother-in-law, so I suppose we're even.\"\n\nPriscilla gives me a look and both Ivy and Reggie almost contain their giggles. Almost, but not quite, also earning the withering look from their sister.\n\nAfter breakfast, Mum says, \"You should go clean up, Alfie. You look like you've been in the wars.\" I'm not sure if she's intended the irony of her comment.\n\nOut back of the house is a hand pump for drawing water from the bore into a trough made from an old hollowed-out ironbark log, and I place a bucket under the spout and begin pumping, water pouring out. A magpie chortles in the bloodwood tree by the timber shed, bees buzzing about the tree's creamy blossoms, and there's the sound of a horse whinnying and fast approaching hoof beats, movement out of the corner of my eye at the gate about fifteen yards away.\n\nGisela, Will's youngest sister, sits on a fine grey mare and wearing a grubby short light-green dress, her hair in a single loose plait, light browns glowing golden where it catches the morning sun around the edges, like a halo of fire. \"Morning Miss Eichstaedt, you're looking well.\"\n\nHer eyes are intense and blue, more so in the sunlight than they were last night when I'd interrupted the Eichstaedt's dinner visit to my family. \"Don't Miss Eichstaedt me, Alfie Graham, it's not like we're acquaintances or meeting for the first time.\"\n\nShe gets a smile from me even if she hadn't intended to. \"Alright, Miss Gisela, do you want to come down from your high horse so we don't need to shout or are you going to sit up there all day?\"\n\nI think she's glaring at me before deftly swinging her legs over the side and dropping to the ground, patting the horse who appears to nod before lowering its head to feed on the grass. She leaves it free, not even slipping the reins over the fence-post, entering the yard, approaching me, looking up and speaking softly now. \"What was it like in the war?\"\n\nI'm taken aback at her forwardness, but answer truthfully. \"Terrible.\"\n\n\"What was Will like?\"\n\nMy heart skips and for a moment I'm biting my bottom lip, looking her in the eye. \"Will was a natural leader and the bravest man I've ever met.\"\n\n\"You're just saying that, aren't you?\" An accusation of sorts, maybe she's testing me, however I'm not sure why.\n\nI'm shaking my head. \"No, I'm not just saying it. I mean it from the bottom of my heart. Your brother was truly a fine soldier.\"\n\n\"He wrote to me about you. Said you were a warrior and never saw another man throw a hand grenade with such accuracy and distance, like you used to with cricket balls into the stumps from the outfield.\"\n\n\"He shouldn't have written to you about such things.\"\n\n\"I'm not a little girl anymore, I can handle war things. Like the fact he said it was wonderful to have his best friend with him over there to keep him sane when times weren't so easy.\"\n\nI feel the tears prickling in my eye and look down, nodding. \"I was glad to serve with him. We made a pact to try and stay together and we did.\"\n\n\"Were you with him when he died?\"\n\nShe asks it like a bolt from the blue, but come to think of it I should've known where her line of questioning was going. My heart thumps again and I'm not sure how to answer.\n\n\"Were you...\" Gisela persists, but half-heartedly. She lifts her hand to her finely freckled face and wipes a tear forming in her eyes. \"The Army's letter to our family said he died of wounds somewhere in Belgium...this is all they told us...Mama and Papa didn't think it appropriate to ask you about it last night given the state you were in.\"\n\nShe's biting her bottom lip, trying to be strong, Will's tough little sister who climbs trees higher and rides horses faster and bowls cricket balls straighter than most boys in the district, the tomboy we all tolerated because Will would joke she was the best little brother he never had.\n\n\"I was with him,\" I say, nodding.\n\n\"Tell me,\" she whispers, her eyes red now and nose sniffling. \"Tell me how he died, please.\"\n\n\"I'm not sure if I...\"\n\n\"Tell me, please, Alfie,\" she pleads, stepping forward, grabbing my hands.\n\nTaken by surprise I step back. \"Shouldn't I speak with your parents?\"\n\n\"I'm not a little girl anymore, you don't have to protect me...\"\n\n\"Is there a problem here?\" The man's voice is behind us and I turn to see Matthew Carroll coming from the kitchen, Priscilla close behind.\n\n\"Nope,\" I say, noting confusion on my sister's face, clearly over thinking the situation.\n\nGisela lets my hands go and tells old mate to, \"Mind your own business, Constable.\"\n\n\"You're on our property, Gisela,\" Priscilla is saying.\n\nMatthew places his hand on her shoulder. \"Just checking to make sure, we didn't know who'd galloped up on a horse.\"\n\nWith a blank face, I ask my future brother-in-law, \"Don't you have a job to go to right now?\"\n\nPriscilla's glaring. \"Alfred, what's got into you?\"\n\n\"I dunno, walking home last night mindin' me business and someone punched me in the stomach in the dark.\"\n\n\"You were being a...\"\n\nBut again Matthew settles my sister and she doesn't continue. He looks to me and says, \"Look, Alfie...you don't mind me calling you Alfie, do you?\" I nod and he approaches, holding out his hand to me, which I take for the second time today. \"We started off on the wrong foot, mate. Michael O'Riordan's a drunk trouble maker and I had no idea who his companion was...\"\n\n\"Mick O'Riordan's me mate,\" I say, taking my hand from his. \"Not sure if you know it, but he and his twin brother Francis were at Messines. Bloody Jerry shell landed on right on Francis and I shit you not there wasn't even a drop of blood to bury afterwards, they couldn't even find his bloody meat ticket to identify him, like he vanished. Mick wasn't far from his side and copped a ton of shrapnel, like you may have even noticed, and I know all of this because I was bloody well there and copped some of the blast, and same with Gisela's brother Will. It was no walk in the park, mate, I can tell you that for free.\"\n\nMatthew holds his hands up. \"Before you go on, I was at Gallipoli with the Fifth Light Horse, so I know what it's like. I'm not here to fight you or your mate, I'm here to keep the peace and uphold the law, like your Dad does.\"\n\n\"Matthew was Arthur Coleman's mate,\" Priscilla adds, \"He was with him when he died, if it means anything to you.\"\n\nTaken aback, the surprise I feel must be written on my face, because Matthew gives me a nod. \"Arty and I were cobbers and he talked about this valley of yours all the bloody time. Never shut up about the place, truth be told, and we used to razz him about it. Didn't believe him when he said his cricket team beat a proper Brisbane team, but now I know it's all true. He mentioned you more than a few times, said keeping wicket when you were bowling kept him on his toes and he was glad he never faced you as a batsman in a real game. He reckoned facing you would be about as tough as cricket gets and said they called you Flash, but he'd always smile when he said it. He mentioned the O'Riordans were fine openers and Gisela here's brother Will was a wise and gutsy vice-captain for a young fella, and he mentioned a whole bunch of other blokes, and he spoke about you all so fondly and so often I felt I knew you all before I even came here. All of you mattered so much to him and I took it as my duty to see his wife, you know, tell her how he...you know, how he...died. She's devastated of course, you should go see her sometime, I think she'd like to see another of the boys from around here has returned because she cared about all the boys who followed Arty's lead.\"\n\nTaking a deep breath hurts my lungs but I suppress the building cough and sit on the side of the log trough, feeling the trickle of sweat at my temples. I'd barely thought of Enid Coleman, or her two young children, but again my mind naturally turns to finding Mary and Jack as my priority.\n\nAnd I'm conscious of Gisela, who I look to now, seeing pain written on her face. With a nod I tell her, \"I'll pop around this afternoon and have a chat with your parents and you. Martha too if she's about.\"\n\nGisela nods, wiping another tear from her eye.\n\n~0~\n\nThe sign on the fa\u00e7ade of the brick building reads Ludwig Eichstaedt &amp; Son - Saddlery and Tack. I must have stood in the street for a considerable time because the door opens and old Ludwig himself approaches, running his hand through his hair which is looking greyer than ever, moustache too, gaunt face heavily lined, the smell of leather following him through the door.\n\nHe wears a stained apron and his hands are similarly stained after a lifetime of working leather, descending from generations of families who'd supplied the Prussian cavalry with both son's and saddles, becoming a young cavalryman himself for many years before emigrating to Australia with his young bride, Frieda.\n\nNow he stands at my side in the heat of the afternoon, his accent thick after all these years. \"I cannot bear to change it.\"",
        "I'm not sure if he means his family's name or the fact he no longer has a son to inherit his business, but he probably means both. Like his father, Will grew up working leather from a young age and was fourteen when Ludwig decided to add the '&amp; son' to his business' name, some nine years ago. I recall how proud Will was when he told us.\n\n\"Don't change it.\" It's all I can think to say.\n\n\"You should come in.\"\n\nLudwig closes the door behind me, flipping the open sign to closed. The shop front is immaculate, with fine looking saddles and stirrups and halters and bridles, saddlebags and other leather goods adorning hooks and tables, the leathery smell thick in my nose.\n\nPast the counter, through a door, is the rear workshop. Surprisingly Gisela is here with a leather apron over her dress, sweeping the floor, hair still in a plait but even messier than this morning, her face having a reddish sheen with beads of sweat on her brow. She stops and looks to me when I enter the room behind her father, and he tells her, \"Please go home and tell your Mother Alfred will be visiting for supper.\"\n\n\"Yes, Papa,\" she replies, glancing at me again before placing the broom against the wall.\n\n\"And clean yourself up before we arrive, you can't entertain guests looking like a dienstm\u00e4dchen.\"\n\n\"Yes, Papa.\" This time Gisela frowns then turns and leaves through the back door, and Ludwig shakes his head, grumbling something I don't catch. He closes up, locking his shop and I follow him down the street, walking in silence, and soon we reach the Eichstaedt's house on the edge of town.\n\nThis house is familiar to me, yet it feels like my memories of the place were formed in another life. I note the fine horses grazing under the gum-trees in the paddock behind, including the grey on which Gisela rode to me this morning. And there's Chief, Will's fine chestnut gelding, biting a fence rail.\n\n\"Chief's cribbing,\" I say. \"I don't recall him doing so before.\"\n\nLudwig tuts. \"He started when Wilhelm left. We've tried all the tricks to stop him and we exercise him regularly, but he doesn't let up...\"\n\nWe humans aren't the only ones who miss Will, poor creature.\n\nUp the steps, across the veranda and through the door, Gisela's there already, without her apron but still in her grubby green dress.\n\nLudwig frowns but doesn't chastise her, gesturing to his rocking chair, offering it to me. \"Sit, please.\"\n\n\"I can stand if you'd like to sit.\"\n\n\"You are my guest and...like a son to me. Please take it.\"\n\nThose words hit the old heart strings. I've mucked about with Will since we were children, from the moment our fathers first met, the men drawn to one another, Ludwig an ex-calvary man back in Europe, and my own father ex-Light Horse, having served in the Boar War. They talked horses while Will and I raced cane hoops with sticks on the road, or played cricket and football, sometimes quoits and croquet, or rode horses down the paddock.\n\nOur fathers sometimes watched our games and I recall them laughing, jovial times for two men who my memory mostly presents as somewhat gruff characters, where most interactions were of a serious nature, either to teach us something or punish us when we were in trouble. Where I'd always thought of Ludwig as a serious man now I can see he has a soft side and there could be no doubt where Will inherited his strong but caring nature from.\n\nI stand in front of the seat without sitting, conscious of Gisela standing by the padded chair opposite, not sitting either. I meet her intense gaze, then look to Ludwig who stands next to her rather than taking the seat, and he says to her, \"You could have put on a fresh dress, Gisa.\"\n\n\"Sorry, Papa, my other dresses are dirty.\"\n\nLudwig grunts and then he looks to me. \"Please, Alfred, sit while we wait for Frieda and Martha.\"\n\nAs if on cue, Martha arrives, thin and prim and proper in her grey dress, light brown hair spilling attractively from her head, our eyes meeting, her smile somewhat shy I suppose, and her voice is quiet when she greets me. \"Good afternoon, Alfred.\"\n\nShe sounds very formal and when I say, \"Afternoon, Miss Martha,\" I'm reminded how I'd greeted Gisela this very morning before she'd reprimanded me because we were not mere acquaintances, knowing one another since we were much younger. The thought makes me smile and perhaps Martha misinterprets my smile because she smiles shyly again before taking the seat next to her father and sister, sitting straight-backed and resting her hands together in her lap.\n\nThere is a contrast between Martha and Gisela, where Martha is a little taller and she's slim and to be honest, to me she looks fragile, at least when compared to her younger sister, exhibiting the proper lady like manners expected of women, reminding me very much of her older sisters Anna and Ava.\n\nGisela, on the other hand, is undeniably robust. Although she's not a big girl by any stretch, she's curvier, inheriting more physical traits from her sturdy mother than tall and thin father. Yet some have said she has a masculinity about her, because she likes sport and can give many blokes a run for their money at various pursuits. Indeed, we all used to joke how Gisela was Will born as a girl, and he'd laugh and tell us she was like a little brother to him.\n\n\"The best little brother I never had...\"\n\nI must've been staring at both girls and see Martha flush and Gisela's shifting uncomfortably on the spot. Frieda, the matriarch of the family, enters the room, smiling bravely but there's a sadness about her, hair silver and lines etched on her face, new additions from when I saw her last. I'm halfway through standing when she enters but she waves at me to sit again. Looking me with the blue eyes her children inherited, she tells me, \"Welcome home and welcome back to our home, Alfred.\"\n\nFrieda's English is excellent with only a hint of an accent, having lived in Australia for more than half her life. I sit again, my heart racing a little with all their eyes on me, like this is an interrogation. \"Thank you, and sorry about last night, I didn't inform Mum and Dad I was coming home and didn't bother to think they might have guests over. Please accept my apology.\"\n\n\"No need to apologise,\" Ludwig smiles. \"Your mother and father are good people. Great people, even.\"\n\n\"Generous people,\" Frieda adds, sitting in the last empty seat.\n\n\"Yes, generous to the extreme. They have invited us over for dinner at least once a month. Your father has worked tirelessly to ensure German families are safe. Some people have come to see us German settlers as the enemy despite our long standing in the community.\"\n\n\"Mick...Michael O'Riordan, told me about people turning against their friends and neighbours.\"\n\nMartha tut tuts and says, \"Michael's a drunken lout,\" and Gisela frowns, giving Martha's shoulder a little tap.\n\nFrieda frowns too and Ludwig turns to his seated daughter. \"Michael has seen things only one person in this room can attest to, my dear Martha. And he was one of Wilhelm's closest friends too and as far as I know the O'Riordans have never said a bad thing about any German families, even when I know some of the families say terrible things about Irish ones like the O'Riordans.\"\n\nChastised, Martha mutters, \"Sorry, Papa,\" casting her face to the floor.\n\nMy goodness she's pretty, beautiful more like it, graceful too, and I calculate her to be nineteen now. Having once hoped I might court and marry her older sister, Ava, my mind now wanders to Martha, and she looks up, catches my eye, blushing, and she looks away.\n\nGisela catches my eye too and speaks. \"You're here to tell us about Will.\"\n\n\"Gisa,\" Frieda scolds her youngest softly, \"Don't be so forward.\"\n\nMy heart's beating again because she's right and I know I have to tell them and it's going to be difficult to say the least. \"Gisela spoke to me this morning. She said the Army wrote you a letter informing you...about...\"\n\nFrieda bites her bottom lip and nods, then speaks with fortitude. \"The letter told us Wilhelm died of wounds, without any details. I honestly don't know if I want details, but I'd at least like to know...\"\n\nWhen Frieda hesitates, Gisela looks to her mother, waiting for her to continue, then turns to me. \"You said you were with him?\"\n\nHer father frowns but when I nod the four of them face me again, their eyes interrogating my soul.\n\n\"I was there,\" I say with a nod. \"Will and I made a pact to try and stick together as much as we could. Francis and Mick were part of our pact too...so me and Will...um, in October last year we were near a village in Belgium called Passchendaele. Our battalion was in a defensive position, but Army brass recognised Will's leadership qualities, making him our Sergeant and...so...I guess I'm not sure how much you need to know.\"\n\n\"Tell us whatever you think is right,\" Ludwig says, his voice soft.\n\nThe Eichstaedt's look at me expectantly and for a moment I gather my thoughts, looking around the room, noticing a photo of Will on the centre shelf of a bookcase with yellow flowers sprouting from vases placed either side. I was with him when the photograph was taken, before we sailed for Europe, where he's in his fresh army uniform, looking proud, young and noble, like he will be for the rest of time. I recall Francis, Mick and I trying to make him laugh but he managed a straight face, and now he's staring into the room, right at me, urging me to go on.\n\nTaking a deep breath, I feel the air tickle my airways and lungs, but suppress my rising cough, the daily reminder of the most terrible morning.\n\n\"Because Will spoke German our section was often given the task of body snatchers...sorry, trench raiders. We'd cross no-mans-land in the night and try capture Jerrys, I mean German, enemy...sorry...\" Looking away, I feel my face flush.\n\n\"Please,\" Ludwig says, \"We understand.\"\n\n\"Yes, right, um, we did a raid and...we all made it back. Will...his respirator...it was damaged in a...well, it was damaged during the raid and he showed us afterwards. He said he'd make sure he'd get a new one...\"\n\nI see Ludwig swallow, his Adam's apple conspicuously bobbing up and down, his eyes meeting mine like he knows what's coming next, silently urging me to go on despite the pain.\n\n\"Will had responsibilities such as interrogating prisoners and reporting to the brass, and he must've left us for an hour or so, and I assumed he'd visit the battalion quartermaster...um...he returned...I'm sorry, but the, um, Germans dropped an artillery barrage near us...it was gas, chlorine, um, it gives off a yellowy green cloud...I assumed...I assumed Will got himself a functioning respirator when he was away with the officers, I really did...I really wish he did...\"\n\nI can't stop the tears forming and I look away, not wanting them to see, knowing my pain is their pain, my heart heavy, but I need to be strong because Frieda is sobbing softly, and Ludwig goes to her, putting his hand on her shoulder, and Gisela whispers, her hand to her mouth, \"Oh, no, he was gassed.\"\n\nMartha sobs, \"Oh, Lord...\" and when I look up she and Gisela are weeping too.\n\nWiping my eyes and sniffling, I tell them, \"He was brave till the end. We could see it coming and he knew, but he called out a warning to the boys to get their masks on and helped...he helped calm one of the lads who was fumbling with his mask...made sure the fella put it on properly....I...um, called to Will to get his mask on too...he hadn't had a chance to replace the bloody thing...\"\n\nLudwig nods and even he has a tear in his eye as he consoles his wife. \"War is a terrible thing.\"\n\nGisela's openly crying with her hand on heart and voice almost frantic. \"What does the gas do?\"\n\nShe's biting her lip now when our eyes meet and I shake my head, unwilling to tell her.\n\nGisela steps forward, pleading, \"Alfred, please tell us!\"\n\n\"It chokes a man,\" Ludwig answers for me, \"Suffocation.\"\n\n\"No...\" Gisela buries her face in her hands.\n\nMartha's face contorts with sadness. \"And your mask worked?\"\n\n\"Yes, it worked, but I didn't get it on quick enough. My lungs are burnt, terribly burnt like someone lit a fire inside my chest. I've spent the last year in a convalescent hospital. It's not as bad as it was before but it's not good. I haven't told my parents...\"\n\n\"Dear, Alfred,\" Frieda says through tears with the voice and look of a concerned mother, \"You should, you need to tell them.\"\n\n\"You should,\" Ludwig says. \"And I thank you for telling us how Wilhelm died. It has not been easy on any of us and I can see how hard it is for you to be here.\"\n\n\"Yes, thank you,\" Frieda adds. \"You must stay for supper. We haven't anything special tonight but I think the girls and I can put something together.\"\n\n\"Thank you,\" I tell them, \"I don't want to impose, especially after this news.\"\n\n\"Don't be silly, you are no imposition, Alfred. You were one of Wilhelm's closest friends from the time you were little boys and your family are great friends of ours.\"\n\nWiping a tear, I nod, feeling I can't refuse. \"I'd be honoured then.\"\n\nLudwig invites me to join him on the veranda while the women leave to make supper, offering me one of his pipes, but I decline, unable to smoke tobacco without being sent into a diabolical coughing fit.\n\n\"Do you know,\" he says, \"If Frieda and I stayed in Prussia, Will would more than likely have become a cavalryman like I was, and potentially even fought against boys from this valley.\"\n\nIt's a strange thought and I tell him, \"I've often wondered how each enemy I faced may have been a good friend if circumstances were greatly different.\"\n\nLudwig nods and puffs on his pipe, and soon Martha arrives on the veranda telling us supper is ready. In the darkness when I catch her eye I'm not sure if she blushes or if it's the tears she's shed making her face darker.\n\nSupper is simple and light, consisting of bread and bacon with cheese and pickles and fruit, however no one appears to eat much. Around the table Martha and Gisela are quiet while Ludwig and Frieda tell me about goings on in the district.\n\nAfterwards Ludwig asks, \"Would you like a brandy?\"\n\n\"No thank you, I better go. Thank you all for your hospitality.\"\n\n\"Thank you, Alfred,\" Frieda says, \"I know it wasn't easy for you to tell us, but you've given us some closure.\"\n\n\"Yes,\" Martha says, her face still a little flushed. \"I'm happy to know Wilhelm was with a friend when he was killed.\"\n\nGisela looks to her sister with mouth open like she might say something, but she then looks down and says, \"Excuse me,\" stands and leaves the room, evidently in a huff.\n\nWith a confused look on her face Martha says, \"I'm sorry, excuse me,\" and she stands and follows her sister.\n\n\"Poor Gisa,\" Ludwig whispers as he shows me out the door. \"In some respects she has taken Wilhelm's death the hardest. Despite the five years difference between them she greatly looked up to him.\"\n\n\"I remember, she used to follow him about like a puppy.\"\n\n\"From the time she was tiny she played like a boy, kicking a ball about the yard and climbing trees, and you know how Wilhelm indulged her because he never had a brother, playing rough games, much to Frieda and my distress.\"\n\n\"I think it's her nature, she's...quite a lot like Will.\"\n\n\"Ja,\" Ludwig says in his native tongue and stops at the end of the veranda, crickets chirping in the darkness. \"I worry about her, however, perhaps I need not. I trained Wilhelm so he would eventually take over the family business. Gisa preferred to work leather too, rather than dress making from her mother as her sisters did before her, and I confess her quality is higher than Wilhelm's ever was and her style, well, she's so much more creative. Where Wilhelm made saddles like I taught him, Gisa makes works of art, but I don't think she will do well in business once I'm too old to run the shop.\"\n\n\"I think she's more tenacious than you give her credit for, Mr Eichstaedt.\"\n\n\"I know, she's...brilliant. But she's a woman even if most of the time she doesn't act like one.\"\n\nThis makes me smile, remembering all the times Will brought Gisela along to watch us play cricket or hunting trips or mucking about down the creek, because she asked him to. We adopted her like our mascot and were protective of her without her realising, and she thrived, learning to bat and bowl, shoot and swim.\n\n\"She's fine, give her a chance.\"\n\n\"I know,\" he says with a sigh, packing his pipe, tamping down the tobacco. \"Except we fear she will not make a wife. No man has shown interest in her, not like they do with her older sisters.\"\n\nDespite the darkness I know he's looking at me now and I think of Ava and Martha, wondering how many men show interest in them, wanting to ask but not wanting to know the answer. \"Gisela's eighteen now, right? Plenty of time. Martha's nineteen and she doesn't have any suitors...does she?\"\n\nI think Ludwig smiles because in the weak moonlight I barely perceive his bushy moustache rising. There's humour in his voice when he says, \"There may be someone Martha has her eye on and perhaps he will call in on her sometime soon.\"\n\nNot too subtle at all, at least I think I catch his meaning, my heart skipping several beats at the thought of courting Martha. \"He should make a move then.\"\n\n\"He should, he most definitely should.\"\n\nMy mind wanders, thinking about a future with Martha who is perhaps the most beautiful of all the Eichstaedt women, she and I having children and a house here in town, and now the thoughts come, the dark thoughts, doubts of how I will make a living for my family with my damaged lungs when all I know is physical activity, which I can't do so well anymore.\n\nThen I remember Mary. How could I have forgotten?\n\nI wait for Ludwig to finish lighting his pipe, his face glowing in the match-light. \"There's something I need to ask.\"\n\nSmoke rises from the match when he shakes it out, and he places it on the veranda rail, more smoke coming from his mouth and nostrils. \"Ja, ask away.\"\n\n\"I know Mary left town...I need to find her and tell her...about Will\"\n\nLudwig takes a long puff on his pipe, savouring the smoke before releasing it into the night. \"We haven't heard from Mary in some time. After the Army's letter arrived, she said she was travelling to visit her Aunt in Brisbane and it was the last time we saw her or Jack.\"\n\n\"You must be devastated.\"\n\n\"Frieda treated Mary like a daughter and the girls treated her like a sister. They especially loved playing with Jack. I must say Gisela took on this role more than her sister...because Jack was Will's I suppose, and more than once she has suggested going to Brisbane herself to find Mary and Jack. I've forbidden her, of course, she can't go off by herself scouring the city...\"\n\n\"I made a promise...\"\n\n\"To Wilhelm.\" He knows. \"I went to Brisbane to look for her, all in vain.\"\n\n\"Dad has colleagues in the police there. I can ask them to help track her down.\"\n\nLudwig nods. \"I am sure you will have more luck than I did.\"\n\nAfter a moment's silence, I say, \"I best go and tell my parents about my lungs.\"\n\n~0~\n\nWill visits me as he does most nights, the war crushing us when he tells me to, \"Tell Mary I love her when you get back, won't you, and make sure she and Jack are provided for.\"\n\nRight before he utters his last words, gripping my arm and begging me to put him out of his misery.\n\nI'm drenched and coughing, the gas choking, but there's mosquitos buzzing in my ear and an owl is hooting. I can't get back to sleep, lying here thinking of Will and Mary and considering my next moves.\n\nIn the early twilight before dawn as the birds begin to chirp my father comes for a quick chat before heading to work for the day and I ask, \"Do you know how I can track down Will's wife Mary? Everyone thinks she went to Brisbane.\"",
        "After a moment's thought, he says, \"Have a chinwag with Matthew. He's a Brisbane lad and was a policeman there before the war. He'll know someone you can maybe see. Someone needs to talk sense into Mary and it may as well be her husband's best mate.\"\n\nTo be honest I'm not sure if I have any sense to talk into Mary, even if I do find her, even if she wants to listen. I've learnt enough about human nature to know what we might think is right for someone isn't what's actually right for them, or at least what they think is right for them, and maybe Mary doesn't want to hear other people's opinions anyhow.\n\nSure, I'm angry she's abandoned Will's family, but maybe she has reasons? After all, she and Will were only together for a year before he left for the war, being only eighteen when they married. Then again, abandoning her husband's family who'd taken her in, taking their grandson away too without further contact, is dog act in anyone's book, no matter how young and na\u00efve.\n\nWith these thoughts swirling around my head, the birds are twittering and singing, the sky lightening, and I'd be kidding myself if I think I might get back to sleep, so I go to the kitchen where I find Mum cleaning up after fixing breakfast for Dad, starting the day in the manner she always has. She smiles and tells me, \"You're up early, you going somewhere?\"\n\n\"Can't sleep.\"\n\nMum returns her attention to the tub, scrubbing our old cast iron frypan. \"Your father said you might have a few troubles. He and I also struggled to sleep last night after what you told us about your lungs. We had no idea you inhaled gas. You should've written to us about it.\"\n\n\"Didn't want to worry you or Dad and it probably wouldn't have passed the censor anyhow.\"\n\n\"We were plenty worried, I didn't want you to go to war in the first place.\"\n\n\"I know, I don't need the lecture.\"\n\n\"So many boys lost...and Poor Ludwig and Frieda, how did they take it when you told them about Will?\"\n\nI take the frypan from her, placing it on the hot range top to dry. \"Sad, but they're a tenacious family.\"\n\n\"It's true but they haven't had it easy.\"\n\n\"Gisela is taking it harder than most.\"\n\n\"Yes, I heard she accosted you in our yard yesterday morning.\"\n\n\"She's the one who told me her family didn't know how Will died. That's why I went over there last night.\"\n\nMum sighs. \"Poor Gisela, she's lost. A free spirit if there ever was one but doesn't know what's good for her. Practically worshiped her brother who indulged her like she was his little brother. And Ludwig has indulged her too, treating her like a son most of the time.\"\n\nShaking my head, I say, \"I don't think she's lost, and in fact, I think the complete opposite. She wants to make saddles rather than dresses, and her father even tells me she's better at working leather than Will was. I think he should train her to run the business but I reckon he's too traditional to pass it on to his daughter.\"\n\n\"Maybe she's capable but would the business do well?\"\n\nWith a shrug I say, \"Her work is exceptional so I don't see why not.\"\n\n\"Maybe.\" Mum sighs again, handing me a plate which I begin to dry with a tea-towel. \"Privately Ludwig and Frieda despair for her future, worrying she'll end up a spinster. But you didn't hear this from me, Alfie. Anyway, it's a shame because she's such a natural with children. You should've seen her with baby Jack when Mary was still around. Lord knows Gisela adores the boy.\"\n\nAgain my heart is heavy at the mention of Will's wife and son, and now I'm sighing, thinking aloud, \"How could she up an' leave?\"\n\nMum shakes her head. \"Mary's a silly thing, but I s'pose it wasn't easy on her either. Her husband at war and living with her German in-laws while some people thought the war was something to be fought against their neighbours here in town. You wouldn't believe the nastiness hurled at German families, including the Eichstaedts. Didn't matter all our sons were born and bred here in this valley or region, no matter what their backgrounds, fighting alongside their mates for Australia and Great Britain.\"\n\n\"I know, I've heard the stories.\"\n\n\"You'd think with so many young lads away your father would have less work, but quite the opposite he's been extra busy. It's why he took on Matthew when he arrived in town looking for work.\"\n\nI think about the new Constable for a moment before asking, \"Is he a good man?\"\n\n\"Yes,\" she says without hesitation. \"Your father speaks highly of him.\"\n\n\"As does Priscilla.\"\n\n\"And you know she's a good judge of character.\"\n\nAnd so she is, because soon Matthew and Priscilla arrive for breakfast, along with Reggie and Ivy. Reggie sits at the table and asks, \"What was it like going on a trench raid?\"\n\nPart of me wishes Reggie wasn't present when I told my family about the gas attack after I'd arrived home from the Eichstaedt's. However my family were together in the dining room, so I thought it best to get it over and done with.\n\n\"Don't bother your brother,\" Priscilla tells him, aiming to clip him over the ear, which he dodges.\n\nMatthew laughs as he sits opposite. \"Get used to it, he was asking me many similar questions when I was first invited into your house.\"\n\nHe's a tough looking man, not as tall as me but he has the build of a hard man, a boxer perhaps, similar to Will come to think of it. His face is still bruised and I give him a smile to put him at ease. \"Dad says you're from Brisbane.\"\n\n\"Yep, grew up at Ascot, backing onto Eagle Farm Racecourse.\" He smirks with a twinkle in his brown eyes. \"Fancied meself as becoming a jockey when I was a kid, but grew too big!\"\n\n\"You were a policeman there before you joined up?\"\n\n\"I certainly was, I joined to ride with the mounted police and thought I might get to see the state, but ended up posted in the dead-centre of town only a few miles from Mum and Dad's. Glad I've gotten away though,\" he says, putting his arm around Priscilla who's taken the seat at his side, \"Moving to the country was the best thing I've done.\"\n\nPriscilla smiles and looks at her fianc\u00e9 and I know she's happy, making me smile too. Her green eyes catch mine and I know she knows I know how happy she is, making us smile even more.\n\nLooking back to Matthew, I ask, \"I need to track someone down, do you reckon it's possible?\"\n\n\"Depends,\" he says. \"Old Army mate?\"\n\n\"No. Mary Eichstaedt, or Mary Hamilton as she's reverted to.\"\n\nPriscilla frowns when she hears Mary's name and Reggie utters, \"The cow,\" earning a genuine clip over the ear from Mum who's been silently listening.\n\nMatthew nods. \"Wilhelm's wife? I get it, I know the story. I told you I came here to see Arthur Coleman's missus, right?\"\n\n\"I know,\" I say, \"Did you make a promise to Arty?\"\n\n\"I did,\" Matthew says, steel and sadness in his eyes, \"I made Arty a promise.\"\n\n\"I promised Will,\" I nod, saying no more.\n\nMatthew nods too. \"I'll tell you what, I'll write a letter of introduction for you to my old sergeant who's now based at Roma Street. If there's a fella who can track anyone down, it's him.\"\n\n\"Thanks, I appreciate it.\"\n\n\"What are you going to do, Alfie,\" Priscilla asks, \"Waltz in and announce to Mary you're there to tell her how Will died? You're aware she may not want to see you or hear about Will's death?\"\n\nShaking my head, I tell her, \"Will asked me to see her and make sure she...to tell her...\"\n\nMum walks over and places her hand on my shoulder. \"It's fine, Alfie, you do what you need to do. I'm sure Mary will appreciate the gesture.\"\n\nIvy walks over with breakfast plates of toast and boiled eggs, and she asks, \"Do you know anyone in Brisbane? Where will you stay?\"\n\n\"Thanks,\" I tell her when she palaces the plate in front of me. \"Dunno where I'll stay, little Sis. I'll find somewhere.\"\n\n\"I'll write a letter to me folks,\" Matthew says. \"They're good people and told me if any of my cobbers needs a place to stay in Brisbane, they have a spare bed. It's my old bed, actually.\"\n\n\"I couldn't possibly...\"\n\n\"I'll give you their address and you decide if you want to write to them too, no worries.\"\n\n\"You're a good man,\" Priscilla tells Matthew and they smile, and I'm finding myself smiling too.\n\n~0~\n\n\"I'm going to the Big Smoke to track down Mary, wanna come with me?\"\n\nMick puts his empty glass on the bar and shakes his head. \"She'll fuckin' run a mile when she sees us.\"\n\n\"Why would she run?\"\n\n\"Dunno, we're Will's mates. I'd run if I saw us comin' from a mile away.\"\n\n\"Suit yourself but I'm goin' next week.\"\n\n\"Right before Christmas. Be bloody busy in town.\"\n\n\"So?\"\n\n\"Mary will be with family I expect.\"\n\n\"She should consider Will's family too. After all, she did marry him.\"\n\n\"Yeah, well, if you're goin' you should see Ludwig and Frieda first. They might want you to pass on a message or somethin'. Maybe you can coax Mary back here.\"\n\n\"Doubt it.\"\n\n\"Maybe she'll take pity on ya instead and invite you in for some Christmas cheer. You can give her yer famous Christmas pud.\"\n\n\"Piss off.\"\n\n\"You want her,\" Mick laughs. \"Everyone wants a piece of Mary, you'd be bloody strange not to. Who'd have thought such an angel would be such a bitch.\"\n\n\"Don't call her that word, mate. Will would ask you to step outside if he were here, he'd expect his mates to respect her no matter what.\"\n\n\"He ain't here, is he, and maybe he didn't know what bitch she was.\"\n\n\"Doesn't matter because Will loved her and if the fucking war never happened he'd still be here helping his old man in their shop and Mary would be at their home raising young Jack and probably another kid or two. She and Jack were foremost on his mind when the gas rolled in and he asked me to tell her he loved her and I made a promise to him and also to meself I'd tell her even if it's the last thing I do.\"\n\n\"She'll be dead grateful, I'm sure, and tell ya, oh, Alfie, it's so wonderful you dropped by to inform me...\"\n\n\"Go to hell, mate.\" For the first time since we were boys playing rough games like Rugby I want to punch Mick's face in.\n\n\"Told ya I went there to hell and they didn't want me. Bastards took me brother and left me here with the scars and memories. So settle yer fuckin' horses, cobber. Another drink?\"\n\nAfter a deep breath then another, I nod. \"Why not.\"\n\nMick winks. \"Good lad. And later I reckon we find your future brother-in-law and use him as a punching bag.\"\n\n\"Nah, mate, he's a good bloke.\"\n\n\"Oh, fuck off, he's got to you like he got to yer sister.\"\n\n\"Priscilla's happy. Like, she's glowing, never seen anything like it. I'm happy for them.\"\n\n\"Bloody hell, what's this world coming to. All this talk about love and happiness...fuck it, hey, Danny, over here, mate! Another beer for Flash and whatever that other shit is you call whisky for me.\"\n\nDanny the barman frowns but fills our glasses. We go through this ritual a couple of times a week, where later Mick tries to pick fights and Danny kicks us out, so I take him home to his parent's dairy a mile out of town, avoiding the police station before heading back to collapse on my cot under the mosquito net.\n\n~0~\n\nA minute or so after knocking on the timber door to the Eichstaedt's house I hear footsteps on floorboards, a shadow briefly covers the dim light through the door's little frosted glass panels, then it opens. Martha stands with her hair unpinned, long and brown and spilling over her shoulders down her white blouse, a bright yellow skirt below, and she's seemingly lost for words, staring at me, her face flushing.\n\n\"Good afternoon, Martha.\"\n\n\"Hello, Alfred.\" She smiles, seemingly uncertain, then tells me, \"Papa's still at work if you're looking for him, and Mama's out back.\"\n\n\"I thought your Father might be home by now?\"\n\nI'm looking into her eyes, causing her to flush a deeper shade of red, but she steps aside and says, \"You can wait here if you like?\"\n\n\"Splendid,\" I say in the manner of one of the English doctors at the convalescent hospital when he spoke to all the nurses, and Martha giggles.\n\nAfter a long moment, she asks, \"Would you like to see my dress?\"\n\n\"I can see your dress, Miss Martha, and it's very beautiful.\"\n\nShe looks away and suddenly I feel self-conscious, for I've never been particularly good at this flirtation game, but I'm enjoying it immensely. Finding her voice again, she says, \"I'm...making a dress for Elizabeth Lewis. For her wedding.\"\n\n\"I don't think I know Elizabeth, is she a relation of Donald Lewis?\"\n\n\"They're cousins, I think. She's marrying a boy from up north, an Italian cane grower but he's moved down here after he left the army and bought a property in the district to run some cattle. Handsome fellow too, but he's a bit rude for my liking...gosh, I'm rambling aren't I?\" She looks down and begins fidgeting.\n\nWith a laugh, I say, \"Not at all.\"\n\nMartha leads me through to a back room ringed with open casement windows of frosted glass, illuminating a beautiful white dress spread across a timber table, pins sticking it over a pattern on brown. She stands beside her Singer sewing machine in silence, beaming.\n\n\"It's beautiful,\" I whisper, knowing nothing about dress making. \"You have a fine little business here, Martha.\"\n\nHer face turns red and she smiles. \"I'm considering taking some of my dresses to Brisbane to see if I can work in a department store as a draper or seamstress.\"\n\n\"I reckon you could open your own dress making shop.\"\n\nShe's still blushing. \"I wouldn't know where to start.\"\n\n\"Speak to your father, he'd know. And your sister too, she's helped him for long enough.\"\n\n\"Gisela? She makes beautiful leatherwork but what would she know about running a dress making business?\"\n\n\"I'd wager she's picked up a few things or two about business from yer Dad, she's remarkably resourceful.\"\n\n\"If I went to Brisbane I'd not even know where to start. I've only visited the city twice and I was a little girl then.\"\n\n\"I'm going there soon. Actually, that's what I'm here to see your Mother and Father about.\"\n\n\"Oh? Why would you want to speak with them about Brisbane?\"\n\nFor a moment I hesitate, then spill the beans. \"I'm going to find Mary.\"\n\nMartha's eyes widen and she gasps, \"Mary! She left us with hardly a goodbye, I hate her! Why do you want to see her?\"\n\nThere's movement behind me, someone stepping into the room, a voice, Gisela, saying, \"Because someone has to talk sense into the wench! If you're going to track Mary down, I'm coming with you.\"\n\nShe steps to the side of the room and I turn, telling her, \"No you're not.\"\n\nMartha's frowning and she asks her sister, \"How long were you listening to us?\"\n\n\"Long enough to know Alfred's going to go looking for Mary, and if he won't take me, I'll go on my own.\"\n\nShaking my head, I ask, \"How are you going to do that, Gisela?\"\n\n\"Same as you, get on a train to Brisbane.\"\n\nHer declaration makes me smile. \"Then what? Are you going to knock on every door in town?\"\n\n\"And where would you stay?\" Martha adds. \"You don't even know Brisbane.\"\n\n\"I'll work it out,\" Gisela says. \"Haven't you heard, I'm remarkably resourceful.\"\n\nShe heard more of our conversation than we realised, but it's time to call her bluff. \"How's a pretty young lady like yourself going to travel to the big smoke on your own to track down a needle in a haystack, having no where to stay and no clue where to start looking?\"\n\n\"The city's dangerous...\" Martha whispers, placing her hand on Gisela's. \"There's bad men there.\"\n\n\"There's bad men everywhere,\" Gisela says, her voice defiant. \"I'll dress as a boy and cut my hair off, no one will bother me then. People say I act like a boy anyway.\"\n\n\"Good plan,\" I say with a smirk, then gesture vaguely at her chest. \"One problem, actually two problems because you don't look like a boy, how are you going to hide these?\"\n\nDespite Gisela's apparent robust and tomboyish demeanour, her figure is undeniably a woman's, the swelling of her curvaceous bust under her grubby green dress is most noticeable, more so than any of her sisters. Not gigantic pendulous bosoms like Carmel McCotter's, the woman I billeted with in Melbourne for the previous month, or Carmel's daughter Susannah's fine round breasts, but even if Gisela wore a suit and tie and cut her hair fine, she'd not hide her chest enough to pass as a man.\n\nMartha giggles and it's Gisela's turn to blush, holding her hands to her breast as if she's exposed and trying to hide her nakedness, and Martha giggles some more.\n\nShaking my head, I'm starting to feel sorry for Gisela, wishing I'd not spoken thus, thinking of all the teasing she's received and people talking about her behind her back because of her boyish nature, and now I've pointed out her womanly figure in a disparaging manner, and my Mother's words pop into my head, \"She's such a natural with children. You should've seen her with baby Jack when Mary was still around...Lord knows Gisela adores the boy.\"\n\nThe house is filled with other noises now, Frieda and Ludwig, and Gisela runs from the room, leaving Martha and I awkward, and she's blushing again in the waning light.\n\n~0~\n\nA summer storm rolls in off the ranges bringing a deluge turning the streets to mud, my boot sliding into water flowing like rivers in the gutters, the flash of light and almost instantaneous ear-splitting crack and rumble fills my ears.\n\nI near dive through the door, a little bell ringing somewhere, my heart and nerves on frenzied edge. Breathing hard I'm looking for cover, anywhere, like a madman, and when I look up there's Will behind the counter asking me, \"Alfie? Are you alright, do you need help?\"\n\nIt's not Will, it can't be, no, it's his sister Gisela, her eyes the same as his, but it's definitely Gisela and she looks worried, perhaps even startled, but she approaches, taking my hand. \"It's only a storm, don't be frightened.\"\n\nDeep breaths, the overwhelming smell of leather, the air burning my lungs, I'm retching and coughing, trying to keep the contents of my stomach down, falling to my knees.\n\n\"Alfie, what's happening with you?\" Gisela is saying, her hand between my shoulder blades.\n\nWith a cough and a sputter, I tell her, \"I'm so sorry. The thunder...it...it's...\"\n\n\"Don't be frightened.\"\n\n\"I'm not...\"\n\n\"I won't tell anyone,\" she whispers. \"Come out back and I'll get you some tea.\"\n\nI follow her through to the workshop, noting she's wearing the same grubby green dress I've seen her in most days, wearing her leather apron over the top. A blue ribbon holds her long hair in a loose bun with messy strands scattering at all angles, this way and that. She goes to the stove in the corner on which she places a kettle and feeds some kindling through the little door, into the coals, then turns to me and we're silent for a moment, staring at one another.\n\nI've never thought of Gisela as anything other than Will's little tomboyish sister, but here in her Father's workshop, surrounded by the tools and materials of their trade, I think she's grown into a beautiful young woman like her older sisters, except she's rough around the edges, unrefined perhaps. But beautiful all the same and after an eternity of eye contact, there's another flash and crack, making me flinch, ducking, the thunder's echo rumbling long and loud down the valley, shaking the building.\n\n\"I used to love summer thunderstorms,\" I say, \"But I think the war has made me adverse to loud bangs.\"\n\n\"I still do love them,\" she says with a smile. \"When they come through at night I sometimes go onto the veranda to watch the lightning. Mama hates it when I do, telling me to come inside because I might get hit. Martha too, she's a scaredy cat. Please, take a seat.\"\n\nTaking a stool between workbenches, I note her little frown when she mentions Martha. The closest workbench is covered in several saddlebags neatly lined up, and soon the kettle whistles and she pours two cups of tea, handing one to me. \"Thanks. What if someone comes into the shop while you're back here?\"",
        "\"I'll hear the bell above the door,\" she says, taking a stool opposite me and holding her cup in two hands despite the stuffy atmosphere of the room.\n\n\"Of course.\"\n\n\"I assume you're here to see Papa to further discuss your little trip to Brisbane?\" She grins, adding, \"Or perhaps you're here to buy a saddle for the horse you galloped into the shop on.\"\n\n\"I'm here to see you.\"\n\nAlready red face from the summer's day, Gisela's face turns an extra shade of crimson, the cup of tea stopping before it makes it to her mouth. \"Really?\"\n\n\"Yeah, I felt the need for a cup of tea and good company.\"\n\nAnother crack of thunder causes me to spill a little hot tea in my lap, the rumble lasting longer than the previous one, rattling the windows. Gisela looks to where I'm trying to stop the hot liquid seeping through my trousers, telling me, \"That's the Lord punishing you for lying to me.\"\n\n\"What makes you think it's a lie?\"\n\n\"Everyone knows you wanted Ava. She might have felt the same way about you but you didn't wait when she asked you to slow down and blew any chance by going off with the hussy Ethel Williams. Now you're looking at Martha with the same eyes you used to make at Ava, and she looks back at you the same. I'm not blind or stupid.\"\n\n\"I never, ever thought you were stupid, Gisela.\"\n\nGisela snorts but says nothing.\n\nI sip tea and after a moment, I ask, \"Tell me something, why do you think I'm not here to see you?\"\n\nShe shrugs. \"People don't come to talk with me, they come to buy my saddles.\"\n\n\"But you're my friend...\"\n\nThunder interrupts, both of us flinching. \"I think the Lord God is trying to stop you teasing me.\"\n\n\"Tease you?\"\n\n\"You've always teased me, but I'm not a child anymore, so please don't tease me. I'm a woman, you even said so yourself last night, even if I'm a disappointment to my family.\"\n\n\"Wait, what? Don't be bloody ridiculous, you're not a disappointment in any shape or form to anyone, especially not your family!\"\n\n\"I'm nothing like my sisters and my parents worry I'm going to be a spinster and their burden, despite Papa letting me help out in the shop. Son's run businesses with their fathers, not daughters.\"\n\nPicking up one of the saddlebags on the bench and fingering the neat stitching, I ask, \"Is this your handy work?\"\n\n\"I made them, yes.\"\n\n\"The quality is second to none and I know your Dad thinks so too.\"\n\n\"But I'm a girl.\"\n\n\"A talented one. And resourceful.\" Holding up the tea cup, I add, \"And kind.\"\n\nShe purses her lips and frowns a little. \"What do you want to see me about, Alfie?\"\n\n\"To apologise to you about last night.\"\n\nShe looks to the floor. \"You embarrassed me.\"\n\n\"Embarrassing you wasn't my intention.\" With a deep breath, I sigh. \"I'm sorry I made you feel that way.\"\n\nShifting on her stool, she looks back into my eyes, then nods. \"Maybe I'm used no one taking me seriously...but I guess you were right, I couldn't disguise myself as a boy and expect to get to Brisbane and find Mary.\"\n\nHolding her gaze, I say, \"I know you were very fond of Jack.\"\n\nShe shifts on her stool, like she's flinched at her nephew's name. \"I spent all my spare time playing with Jack while Mary did whatever it was Mary did.\"\n\n\"By your parent's account from our conversation last night, Mary was pulling her weight right up until she left.\"\n\n\"Mama and Papa are overly generous about Mary. Anyway, what are you going to do if you find her? Ask her to come and visit us?\"\n\n\"When I find her,\" I say. \"I'm going to tell her Will wanted her to know he loved her and Jack, and I'm going to...\"\n\nWith a sigh, I feel this is silly and stop talking, but Gisela prompts me, asking, \"Going to what?\"\n\n\"Ask if she needs anything, if she needs help. Like with Jack and anything else.\"\n\n\"What, like, you're going to be friendly? Not tell her off for leaving us, her husband's family?\"\n\n\"Nope, and you're not telling her off either.\"\n\n\"How can I, you and Papa have made it abundantly clear I can't go with you and see Jack.\"\n\n\"I know it's what you want most, to see Jack. I've thought about it and maybe I'm a bit soft in the head, but I'm buying my ticket tomorrow and leaving on Monday and could get a second ticket.\"\n\nGisela's eyes widen as she gets my meaning straight up. \"Yes...why?\"\n\n\"Because...of Will.\" I smile now. \"And because I'm not too bright. But you have to be on your best behaviour.\"\n\n\"I'm not a child anymore, I've told you this.\"\n\nI smile some more. \"We want to be friendly with Mary if there's any chance of seeing Jack.\"\n\nShe huffs. \"I know, I know, you're right.\"\n\n\"And dress nicely, please, like a lady. Can't have you wandering around the city looking like a street urchin.\"\n\nShe's frowning and about to say something in reply when the back door flings open and Ludwig enters the room, water draining from his hat and oilskin coat onto the floor. Gisela and I look to him and he seemingly only notices us once he's hung his coat and hat on a hook by the door. Thunder cracks again some distance further to the east now, and the rumble dies down as Ludwig approaches. \"Alfred, what a pleasant surprise. I hope I wasn't interrupting anything?\"\n\n\"Oh, no, Papa,\" Gisela speaks before I can, a little hasty if I think about it, as if we were caught doing something we shouldn't. \"Alfie didn't come to see me, he came to see you.\"\n\nShe stands to leave, but I say, \"Wait, I'll send you a message.\"\n\nAgain she opens her mouth as if to speak, but must think better of it, looking to me then her father who's placing the kettle back on the stove top, shrugging her shoulders, then she nods. Ludwig turns and leans back against the bench, folding his arms and says, \"How may I help you, Alfred?\"\n\nI look to Gisela for help, and she smiles this time, shrugs again and leaves through to the front of the shop.\n\n~0~\n\nWearing my good suit and hat I'd bought in Melbourne on what turned out to be the day the Armistice in Europe was signed, I'm approaching the Eichstaedt's gate in early dawn's darkness, wonderer why Gisela's not waiting there like we'd agreed.\n\n\"Alfred, behind you.\"\n\n\"Shit,\" I whisper, spinning around, dropping my old Army kit-bag and clutching my chest for a second. \"Scared the daylights out of me!\"\n\nShe's standing on the road behind me, her outline indicating she's wearing a dress, its hem falling close to the ground. Her hair is pinned up and in one hand I believe she carries a wide floppy hat, and in the other she's holding a satchel, though it's too dark to tell. She's maybe a yard away and I can see she's grinning, teeth showing barely in the dimness, but it's Gisela. She whispers, \"Didn't they teach you how to avoid an ambush in the Army?\"\n\n\"I coulda turned and snapped you in two.\"\n\nShe laughs. \"Didn't you think this bush here was a bit funny looking? You walked right past me!\"\n\n\"You're a bit funny looking,\" I say, holding my hand out to take her satchel.\n\n\"Hmmff,\" she snorts. \"I'll carry my own bag after your comment.\"\n\n\"I didn't mean it, I'm sorry...\"\n\nBut she's grinning, I can hear it in her voice. \"Made you think I was upset, didn't I.\"\n\n\"I didn't care either way.\"\n\n\"Bullshit.\"\n\n\"So lady like.\"\n\n\"I'm not much of a lady,\" she whispers. \"According to what everyone says.\"\n\n\"I don't care what everyone says either, because you look like a lady in your dress.\" Even in the past few moments the sky lightens further and I can see now it's the same dark blue dress she was wearing the evening I arrived home, interrupting my family's dinner with the Eichstaedt family. A dress similar to what her sister and mother wore. \"Very pretty.\"\n\n\"Flattery will get you nowhere, Alfie.\" But she's grinning. \"Your suit looks pretty fancy, some might say it suits you.\"\n\nShaking my head, but smiling, I say, \"Come on, we have a train to catch. Pass me your bag, I don't mind carrying it for you.\"\n\n\"I've told you, I can carry it myself.\"\n\n\"Suit yourself then, let's go.\"\n\nThe town is beginning to wake, people starting their day, a dray pulled by a team of Clydesdales loaded with fresh milk containers from the district's dairies passing us, heading to the creamery. By the time we arrive at the station the sky has brightened further and we can make out the faces of several people waiting to board. Gisela turns to me and whispers, \"Don't look but it's Emil and Saskia Butcher.\"\n\n\"I thought their name is Wurstmann?\"\n\n\"They changed it about two years ago. Because, you know....\"\n\n\"Because their name was the worst?\"\n\nGisela bites her lips but she's shuddering, trying desperately not to laugh. \"You're terrible, Alfie. Some might say you're the worst man.\"\n\n\"I've been called worse. Hmm, or is it wurst?\"\n\n\"You're definitely a sausage,\" she says, giving me the slightest shove and I laugh.\n\n\"They've seen us and are coming over.\"\n\n\"Oh, bugger,\" she whispers, seemingly moving closer to me as if I can hide her.\n\n\"Quick, run,\" I say, grinning. Gisela purses her lips and I'm trying hard not to laugh, but she sees my smirk and peeks over her shoulder, seeing the couple are still standing at least thirty feet away and are currently speaking with the Station Master, Mr Forsyth, who's punching their tickets. Gisela gives me another shove with a tad more force this time and I laugh and ask, \"Why are you hiding from them, have they got dirt on you?\"\n\n\"They're from church,\" she whispers. \"Saskia's nosy and Emil's, well, some might say he's handsy and doesn't understand personal space, especially around women. He once grabbed Mrs Rasmussen's bottom and she slapped him.\"\n\n\"Because he really is the worst man?\"\n\n\"He is,\" Gislea replies, but she's shaking her head and frowning, or grinning, maybe both. \"And this is going to be a long trip, isn't it, Alfie?\"\n\nI smirk and wink and tell her, \"They're boarding the other carriage so I think you're in the clear.\"\n\nGisela peeks and sees I've told the truth this time, one or two other passengers looking in our direction but not taking too much notice. Mr Forsyth moves through them while the train waits, steam billowing, the few passengers climbing on board, and Mr Forsyth greets us, punching our tickets too.\n\n\"Miss Eichstaedt?\" he says, somewhat surprised, asking questions of me with his eyes.\n\n\"Good morning, Mr Forsyth,\" Gisela greets him, impeccably, very much like a lady. \"Lovely morning for a train ride to town, isn't it?\"\n\n\"Aye, lassie, it's a fine morning indeed.\"\n\n\"We have business in Brisbane,\" I tell him, feeling I need to offer a hint of information why Gisela and I are travelling together.\n\n\"We're going to find Mary,\" Gisela tells him, and I place my hand on her arm, shaking my head in warning.\n\n\"Aye, I understand,\" Mr Forsyth replies, knowing, nodding at Gisela. \"Good luck.\"\n\nEntering the carriage behind her, I whisper, \"Don't tell people we're tracking down Mary.\"\n\nShe stops and looks back. \"Why not? Or why even tell them anything then?\"\n\nI shrug. \"Dunno, but we don't know how Mary will respond when we arrive. And we're not sure who around the district befriended her and may get word to her. Like Mr and Mrs Wurstmann or Butcher, whatever in the other carriage.\"\n\n\"Maybe you're right,\" Gisela sighs. \"But Mr Forsyth won't say anything. He's friendly with Papa.\"\n\nI shrug because I doubt anyone actually cares. \"I guess it's an old habit from the war, keeping secrets about destinations or mission objectives, being told or telling others only what they need to know.\"\n\nShe grins and salutes. \"Gotcha, Sergeant.\"\n\n\"Corporal, actually.\"\n\n\"I've given you a promotion,\" she says again, taking an empty seat by the open window, pressing her dress in her lap.\n\nWith a smile I shake my head and sit beside her, placing my Army kit-bag between my feet, glad there's few passengers in our carriage. Mr Forsyth blows his whistle, the type of whistle our officers would blow before going over the top, thus my stomach is in knots. I see him through the window, lowering his flag and the locomotive huffs and puffs and there's the screeching of steel on steel as the driving wheels spin then bite the rails, the carriages lurching forward with a series of clangs as the couplings take up the slack, and we slowly begin to move forward.\n\n\"This is exciting!\" Gisela is all grins and smiles. \"Don't you think so?\"\n\n\"I think I've seen enough trains to last a life time or two.\"\n\n\"Oh, don't be such a bore,\" she says, giving my arm a little nudge. \"I haven't travelled on a train for years!\"\n\nGisela turns to look out the window and her enthusiasm makes me smile, and moments later she looks to me again and she smiles because she's caught me smiling. The sun's over the horizon now and we can see the town giving way to the country side of lush green paddocks, some flooded with puddles the size of lakes from the recent storms, ducks and other birds wading and swimming there, cattle and eucalypts and a few windmills, forested hills on all sides.\n\nHere and there are homesteads where every now and then Gisela points out a farm and whispers a last name; the Lee's and Hahn's, then I whisper the Anderson's, Schultz's, and the Underwood's, properties I've worked on as a ringer from time-to-time through my teens.\n\nA handsome and sprawling red iron roofed homestead belongs to the von Walds, who, she informs me, have changed their name to Wild during the war. I don't need to ask how she knows all these families because they're either customers, where she's spent a good deal of her eighteen years travelling with her brother and father to make deliveries of stock, or as part of the local German Lutheran community.\n\nMost farms are still occupied but some are in disrepair, and she whispers a painful, \"Aawww...\"\n\n\"Pardon?\"\n\nShe points to the homestead directly out the window, not far from the railway tracks, a windmill missing several blades by the stockman's quarters and a jungle of three foot high grass blankets the house yard. \"That's the Hauser's property. Poor G\u00fcnter and Herbert didn't come home and their Papa died, some say of a broken heart. Mrs Hauser and her daughters Katharina and Berta left...the family were friends of ours.\"\n\n\"I'm sorry, I vaguely knew G\u00fcnter and Herbert because I saw them ride a few times when Dad and I used to compete in local campdrafts. Weren't they were a bit young to fight?\"\n\nGisela's silent for a moment and when she speaks her voice cracks. \"G\u00fcnter was a few years younger than you and Herbert was a year older than me...they were idiots, Herb lied about his age and they both forged their Papa's signature...we used to visit their property...Herbert used to...\"\n\n\"Gisela,\" I whisper, placing my hand on her arm. \"You don't have to...\"\n\nShe turns to me, shaking her head. \"Herb and I were mates from when we were little, we used to muck about where he taught me a few tricks with my horse and they made a flat area of dirt where we'd put up a net and play tennis every time we visited. Our parents once thought he and I would get married one day. Even if they were joking, for a while when I was younger I thought it probable.\"\n\n\"Oh, Gisa,\" I whisper again, noting I've used the shortened version of her name which her family use.\n\n\"We hadn't spoken in a while when he joined up, but he wrote me a letter once. Said he was in Egypt and saw the Pyramids but couldn't mention where he was headed next. I wrote a reply but...I didn't hear from him again.\"\n\nWe sit in silence, the carriage rocking, Gisela now looking at the back of the seat in front. I glance out the window again, seeing the old homestead with a milking shed behind, once a family home and business in one, paddocks destocked and overgrown, all torn apart by the damn war.\n\nSwitching my gaze from the decaying dairy to Gisela, I see she is biting her bottom lip, and she looks to me and I smile as warmly as I can. \"I'm so sorry.\"\n\nShe swallows and looks away again, glancing back out the window. \"I don't think there's a single family untouched by the war in some way or other.\"\n\n\"No, there isn't.\"\n\nAfter a while she asks, \"Are you surprised I thought I might want to marry someone?\"\n\n\"No,\" I answer, then think for a moment. \"I'm surprised by your question, why do you ask?\"\n\nShe shakes her head. \"I don't know. All other girls I know often talk about finding a husband and having babies, as if it's all life has to offer. I like kids, I love little Jack, but I suppose I need a husband first if I'm to have my own. I don't see it happening...I guess I have my niece and nephew, Anna's children, but they've moved up west of Toowoomba and we only see them once a year if we're lucky...I don't know about Ava, but I think she'll meet a soldier or doctor, and I guess you and Martha will marry one day too.\"\n\n\"Hold your horses, girl,\" I say, laughing. \"Where do you get this idea Martha and I are getting married?\"\n\n\"Come on, Alfred, don't take me for a fool. You visited our house several times since you arrived home.\"\n\n\"Yet it's you who's with me on a trip to Brisbane.\"\n\nShe looks at me and frowns. \"What's that supposed to mean?\"\n\n\"Nothing,\" I answer shaking my head.\n\n\"Come on, tell me.\"\n\n\"I'm not after a wife, not right now. Finding Mary and Jack is all I've thought about since...Will died. And I've asked you along because I know you're champing at the bit to see them. I could've asked Martha instead, because she was hinting at traveling to Brisbane to become a dress maker, but escorting Martha to Brisbane to find a job isn't my priority. But I know you wanted to find Mary and I hear all these wonderful stories about your interactions with Jack and something compelled me to ask you to come.\"\n\nShe's pondering what I've told her, then sighs. \"Do you think we'll find Mary?\"\n\n\"I hope so.\"\n\nGisela looks out the window again and I close my eyes.\n\nThe branch line joins the main line at Ipswich where we change trains, heading east towards Brisbane. Bushland, paddocks and small towns give way to the suburbs of weatherboard houses, most on tall stumps, some with enclosed verandas, many with large yards displaying beautiful gardens of blossoming Bougainvillea, jacaranda, frangipani, mango trees, citrus, and many have vegetable patches too. The train crosses the wide river, roaring over the iron bridge, then we change at Roma Street Station, catching a train to Ascot.\n\nIt's late afternoon now as we step from the station among a small crowd of fellow passengers heading home from where ever they worked or whatever they did. Two black motorcars pass us, turning into the open field I presume is the race course, because several horses are working the paddock there.\n\nGisela looks to me, beads of sweat on her brow. \"I've only heard of automobiles but now I've seen two!\"\n\n\"I believe those are Model T Fords.\"\n\n\"How do you know?\"\n\n\"Spent last month in Melbourne where there's quite a few of these things now.\"\n\n\"I don't think they'll catch on, I'd take those horses on the race track over there instead of the automobiles any day.\"\n\n\"Maybe the rich will buy them because they're too lazy to ride and they're the only people who can afford them?\"\n\nShe laughs then says, \"Now where?\"\n\nI hand her the paper map Matthew has drawn me. \"Can you read a map?\"\n\n\"Of course, can't you?\"\n\n\"Yep, but I want to see if you can find your way about, in case we get separated.\"\n\n\"I'll be fine, Alfie,\" she says, grinning. \"It's you we should be worried about.\"\n\n\"Show me the way then, smarty.\"\n\nGisela laughs but in no time she's oriented the map, determined the direction to Matthew's parent's house, and without a word she starts walking away. I laugh and follow and soon we're standing outside a standard Queenslander weatherboard house on stumps, and she declares, \"This is it.\"\n\nWe trudge up the path and steps and pull the rope by the door, a little bell inside the house chiming. Soon a man opens up, looking like an older version of Matthew with dark eyes but grey hair, and he smiles. \"You must be Alfred Graham.\"",
        "I nod, taking his outstretched hand. \"That's me. And you're Edward Carroll, right?\"\n\n\"Correct,\" he says with a smile. \"Call me Ned, like the bushranger. And who's this, Matthew didn't tell me we'd be graced with the company of a beautiful young woman?\"\n\n\"This is Gisela.\"\n\nGisela blushes and curtseys. \"Pleased to meet you, sir.\"\n\n\"It's a pleasure to make your acquaintance, Gisela, and no need to call me sir, just Ned.\"\n\nGisela smiles and says, \"Thank you, just Ned.\"\n\nFor a moment I wonder if she's committed an indiscretion, and the look on her face suggests she's worried too, but Ned laughs and says to me, \"A woman of humour, I like it, you're a lucky fella, Alfie.\"\n\n\"Oh, we're not married...\" When I say this Gisela blushes even more.\n\nNed raises his eyebrows and shrugs. \"I won't hold it against you two, sometimes I wonder if it's best to stay that way. Anyhow, come in, you've had a long day.\"\n\nWe follow him through the house to the rear kitchen where a stout woman with grey hair in a bob and wearing an apron is sweating over the oven, and Ned declares, \"Our guest have arrived, love. Matthew's soon-to-be brother-in-law Alfie and Gisela.\"\n\nHer face is very red when she turns to greet us. \"Oh, my, good afternoon and welcome. I'm Myrtle. Sorry about the state of the house.\"\n\n\"Lovely to meet you, Myrtle,\" I say.\n\nGisela's next to me and says, \"Thank you for taking us in, Mrs Carroll.\"\n\n\"Matthew didn't say there's two of you, but either way, you can have his old bed.\"\n\nI feel my face prickle and I see Gisela turning red. \"Oh, we're not together...\"\n\n\"They're not married, love,\" Ned says with a wink to his wife.\n\n\"Is that so?\" Myrtle says, eying us for a moment. \"I think one of you may have to sleep on the floor then. I'm sorry, but we only have one spare bed at the moment! Our second son, Luke, arrived back from Europe not long ago and he's taken over his and our third son's bedroom.\"\n\nTurning to Gisela, I tell her, \"Don't worry, I've slept in worse places than on floor boards. You take the bed.\"\n\n\"Such a fine gentleman,\" Ned says, grinning, and he winks at Gisela. \"You've picked a fine companion for this journey to town, of which I have no idea of the nature of the business you're involved in except Matthew mentioned something about tracking down a mate's wife and child, right?\"\n\nI give him a smile, expecting Matthew to have informed his parents of why I required accommodation. \"We're looking for Gisela's sister-in-law and nephew.\"\n\n\"Mary,\" Gisela says, practically spitting her name, \"Ran away from our house after we found out my brother was killed in action.\"\n\n\"Oh, dearie,\" Myrtle says with sympathetic eyes, \"I'm sorry for your loss, sweetheart.\"\n\nI look from Gisela to Myrtle, then to Ned. \"Gisela's brother was me best mate and we served together. I made a promise to see his wife.\"\n\n\"War is a terrible thing,\" Ned says, nodding. \"All of our sons fought but luckily they all survived, but we know many families touched by the blasted thing, and, well, even those who've made it back aren't in great shape.\"\n\n\"It's horrible to think of what men do to one another,\" Myrtle says. \"Such a waste, but I suppose in some way it was necessary.\"\n\nA man limps into the room, a younger version of Ned, quite similar to Matthew. \"You two talking about the war again?\"\n\nMyrtle frowns. \"Luke, we have guests, Alfred and Gisela. It's Alfred's sister Priscilla who Matthew is to marry next year.\"\n\nLuke stops and looks at us, then asks me, \"You served?\"\n\n\"Yep, and I hear you recently returned.\"\n\n\"What unit?\"\n\n\"Forty-Second Battalion.\"\n\n\"I was with the Ninth Infantry. Wanted to join the light horse like Matt did but I missed out by a few months. Took a bloody German bullet to the leg at a place called Pozi\u00e8res in the Somme Valley. What about you, you made it through unscathed?\"\n\n\"Sucked down a lung full of chlorine gas in Belgium.\"\n\n\"Terrible,\" Luke says with a knowing nod. \"The Germans love their gas, bloody horrible bastards.\"\n\nI shift awkwardly, glancing at Gisela next to me who's biting her lip. She stays silent and I say, \"We gassed them too, so we're equally as bad.\"\n\nLuke snorts. \"Bloody shoulda gassed the whole lot of them.\"\n\n\"Luke,\" Ned warns his son, frowning. \"I know it's tough but we have visitors, mate.\"\n\n\"Alfred here understands, I'm sure,\" Luke says, pulling a pipe from his top pocket.\n\n\"Are you going to join us for supper?\" Myrtle asks her son.\n\n\"Sorry, Mum, but I'm headed to the pub.\" Luke turns to me again. \"If you wanna come and drink with other diggers, you're welcome to join us.\"\n\n\"Maybe another time, mate,\" I say, shaking my head. \"Absolutely knackered after our journey here.\"\n\n\"Suit yourself, cobber.\"\n\nHe leaves and is out the front door when Ned says, \"I do apologise for Luke. He lost a few mates.\"\n\n\"We all lost mates,\" I say.\n\n\"Takes himself to the pub most evenings and doesn't come home till almost midnight.\"\n\nMyrtle sighs, having stayed out of the conversation. \"I wish they'd introduce six o'clock closing times for pubs up here like they did in the southern states. It'd stop boys like Luke drowning their nightmares each night.\"\n\nWith a nod I'm thinking of my cobber Mick, and then I think of Luke's brother Matthew, who also fought but by all accounts is a teetotaller. \"Maybe get Matthew up here to have a talk with Luke.\"\n\nMyrtle's face is red, either from cooking or embarrassment, or both. She nods, sucking in a deep breath but stays silent and Ned gestures towards the kitchen table. \"Have a seat and we'll have food on your plates in a jiffy.\"\n\nI move to pull a chair out for Gisela and when she sits I whisper, \"Everything alright?\"\n\n\"I'm fine,\" she whispers back, \"Thank you.\"\n\nSupper is a lamb stew with potato, carrots and peas, wonderfully hearty food after our long day's travel. Through the course of the evening Myrtle addresses Gisela, saying, \"Gisela's such a pretty name, is it French?\"\n\nGisela flicks me a look before she answers. \"My name's German, Mrs Carroll.\"\n\n\"Oh, I'm so sorry, I didn't realise, and I don't think Luke would have said what he did about the Germans earlier if he knew.\"\n\nIf Gisela's embarrassed or annoyed she checks her emotions, speaking plainly. \"I'm not embarrassed at all by my heritage, Mrs Carroll. My parents immigrated here thirty years ago and we're highly respected in our district. My sisters and I all consider ourselves Queensland Australians, as did my brother who fought and died like so many others.\"\n\n\"Quite right,\" Ned says. \"And we're so sorry to hear of your loss. Before the stupid war German folk were considered the best kind of immigrants to these shores after the British of course, even more so than my own Irish parents, rest their souls.\"\n\n\"We don't mind where your family's from, Gisela, you're most welcome here.\"\n\nGisela gives me another look, bemusement or something else written on her face. Afterwards Ned shows us Matthew's old room which is an enclosed veranda with open casement windows to let the non-existent breeze flow through the house.\n\n\"Are you going to be comfortable on the floor?\" Gisela asks.\n\n\"I'll be fine, don't you worry about me. Get ya self a good night's sleep.\"\n\nShe gives me a coy smile, pulling a light night gown from her leather satchel. \"Do you mind giving me some privacy for a few moments?\"\n\n\"Oh, of course not!\"\n\nSoon she's under her sheet in Matthew's childhood bed, and I'm on the floor with a blanket underneath for padding and a sheet over the top for modesty. The room is stifling and I could do away with the sheet, but lie there thinking about tomorrow, meeting up with Matthew's old police Sergeant from before the war.\n\nGisela tosses and turns a couple of times, possibly because there's possums growling at each other outside the windows, and eventually she whispers, \"Alfie, are you awake?\"\n\n\"Sure am,\" I answer, staring at the ceiling, dimly illuminated by the pale moon outside.\n\n\"Can I ask you something?\"\n\n\"You can ask me anything.\"\n\n\"Was Wilhelm a good man in the war?\"\n\n\"Of course, he was the best of us, why would you ask such a thing?\"\n\nShe doesn't respond immediately, then avoids my question, asking another of her own. \"Did you hate the Germans when you were over there?\"\n\n\"Not at all, Gisa. Is this because of what Luke said earlier?\"\n\n\"You don't hate them now, even after they gassed you and killed your mates?\"\n\n\"I hate their leaders.\" After a moment's thought, I add, \"And ours. My Dad said war is mostly about old men arguing over real estate and getting young men to do the fighting for them.\"\n\nGisela moves and I can see her silhouette lying on the edge of the bed, looking down at me, hair cascading over the side. \"Papa told me he's aware if he and Mama didn't immigrate to Queensland last century Will would most likely have joined the Prussian Cavalry like Papa did, and his Papa and Papa's Papa, and he'd have fought for the Germans.\"\n\nWith a sigh I recall my similar conversation with Ludwig. I can barely make out Gisela's face in the dark, but look to where her eyes would be anyhow. \"Will was an excellent soldier and maybe it was in his blood, like it will be in your blood too, of course. He was promoted to Corporal during our training and Sergeant at a place called Messines...\"\n\n\"The battle where Mick O'Riordan was wounded, wasn't it?\"\n\n\"Yes,\" I whisper. \"And his brother, Francis...you know.\"\n\n\"Yes, it's awful...you were with them?\"\n\n\"Yes, and so was Will.\"\n\nShe's silent again, rolling onto her back and no longer peering over the edge of the bed. Possum growls intrude through the window again, then they scuffle in the tree outside, screeching, before one must have chased the other off. After a while, Gisela whispers, \"Did you meet German soldiers?\"\n\n\"I did.\"\n\n\"In battle?\"\n\nI shift and toss the top sheet off, sticky hot. \"We were picked to raid their trenches because Will spoke German and also because he was good at soldiering.\"\n\n\"You raided their trenches? How do you do that, walk across from your trench to theirs?\"\n\n\"Yep, pretty much.\"\n\n\"And they didn't hear you coming?\"\n\n\"We practiced moving silent so when we crossed no man's land we were like ghosts. We became very good at it, dropping into their trenches, where sometimes Will would pretend to be a German officer, other times we'd...nab 'em.\"\n\nShe shifts, her hand on the edge of the bed, close enough I could reach out and touch her. But of course I'm not going to. She whispers, \"You nabbed them? What were they like?\"\n\nI'm grimacing in the dark, the face of a German around my age pictured in my mind, true fear in his eyes because he knows in this contest of kill or be killed, I've got him. \"Like any young lad from here, men my age. More than a few times I realised they might be my friend if we met under different circumstances.\"\n\n\"But you...\"\n\nShe doesn't complete her sentence but I know what she means. \"We were at war with each other, there was no choice but to fight and...ah, use lethal force.\"\n\nAgain Gisela remains silent for some time, before she says, \"You fought for your lives while back here people were being plain petty. Did you know my Father was ordered by the magistrate to report to your Father every day in the first few years of the war? Many Germans who'd immigrated here were ordered to, even if they were old. Some were even sent to camps!\"\n\n\"I didn't know this, no.\"\n\n\"Your father is a good friend to Papa and he made sure to drop by the saddlery most mornings so Papa didn't have to embarrass himself by walking to the police station and sign in. But it didn't stop people insulting us and when news came of families losing their sons and husbands, and well, people hurled more than insults.\"\n\n\"Mick told me Ernie Brown tried to burn your father's business down.\"\n\n\"Yes, he did. Other's spat on us and someone threw a brick through the front window of our house late one night. This was when Mary was staying with us and the brick landed next to her bed, near Jack's cradle.\"\n\n\"Shit...\"\n\n\"And when Elizabeth Lewis first spoke to Martha last month about making her wedding dress, Elizabeth's fianc\u00e9 was hesitant because our family is German, but Martha told him we were Polish, not Germans. He was in the Army too and told Martha how much he hated Germans, right there in our house.\"\n\n\"Martha said he was Italian?\"\n\n\"His parents are, I think. Lots of Italian immigrants grow sugar up and down the coast apparently.\"\n\n\"He should be careful, because if there's another war in Europe it might be the Italians we fight next time and he wouldn't want his family treated like yours were.\"\n\n\"Do you think there will be another war?\"\n\n\"I hope not, and over in Britain everyone's saying ours was the war to end all wars. But you know what I said before about old men fighting over real estate, they're like the possums scrapping earlier, they'll forget the price paid soon enough and have another go, it's in our nature.\"\n\n\"I pray it was the war to end all wars. I can't bear to think of Jack having to fight when he grows up.\"\n\n\"Yeah,\" I whisper, thinking of reaching out to touch her hand, holding back. \"Don't think of these things. You should try and sleep.\"\n\nAfter a moment, she whispers, \"I hope we find Mary and Jack tomorrow.\"\n\n\"We'll do our best because I don't plan to leave Brisbane until we've found them.\"\n\n~0~\n\nWe call the Jerry The Pig, his snoring loud enough to hear from near our lines as we filter into no man's land. The ground is boot-sucking muddy with shell craters for cover. Archie leads the way, blending in with the ground and searching for a path through barbed wire, mines and unexploded ordnance. Back home many would have called him many derogatory names on account of him being Aboriginal, but he has become like a brother, equal to any man, and is a close cobber.\n\nHe signals to wait and Will creeps forward, where they confer with hand signals. There's a knot of tension in my chest as tight as my hand is around the grip of my Lewis machine gun, my eyes scanning the lip of the trench line ahead. Will carefully slings his rifle over his shoulder and pulls his trench club from his belt, the weapon looking like something I've seen in picture books about knights and men-at-arms from the middle ages, and he signals us forward, then drops in on the enemy, saying something like, \"Wer ist denn dieser Mann der bei der pflicht schl\u00e4ft?\", mimicking a German officer. \"Und ihr spielt Karten?\"\n\nConfused and surprised voices reply but it's too late, our boys are among them, hands covering mouths before the enemy soldiers have a chance to grab their weapons, cards scattered on a wooden table in the cramped sandbagged dugout, a dim kerosene lantern lighting the space.\n\nThe sleeping man, who I guess is The Pig, is awake now, watching us from his bench as some of the lads tie his four comrade's wrists behind their backs and stuff rag gags in their mouths. He reaches into his belt, producing a Mauser pistol, but Will's watching like a hawk and without hesitation he swings his club into the man's temple with a cracking thud, dropping him instantly, a gooey eye spilling from its bloody socket.\n\nI've seen death and I've seen Will shoot a man, but this is different, and I can't tear my eyes from the dead man with his skull caved in. Will taps me on the shoulder and points to the end of the trench and I move, taking up position while Will's urging the others, \"Come on, boys, get a move on.\"\n\nArchie takes up position behind me and when I check around the corner of the trench, the wall erupts with dirt, splattering it all over my face. Bullets are landing all around me, more dirt flying, the rifle shots close, yelling and screaming, my weapon at my shoulder, the enemy soldier lunging with his bayonet and rifle, Archie parrying, pushing the man off, the same man pushing past and thrusting his weapon at Will, and I scream his name, Will seeing the man and dodging at the last moment, but the long knife slices through his respirator bag into his chest.\n\nThe enemy's face disappears, Archie's rifle practically against the man's head, and the corpse falls at my side. But Will has survived, and there's no time to think, and I'm firing a burst down the trench into the enemy racing towards us, dropping to the floor while firing another burst, my Lewis gun jumping in my hands, loudly ringing in my ears.\n\nThere is more yelling and screaming and I'm coughing, my lungs burning, and someone's hand's on me, a woman's voice whispering, \"Alfie, wake up, please.\"\n\n\"Where am I?\"\n\nThere are other voices too, deeply muffled coming from somewhere, tense murmurs. Gisela leans over the bed, whispering, \"We're in Brisbane, at the Carroll's house. You yelled out for Will and I think I hear someone coming up the back steps.\"\n\n\"Huh?\" I'm coughing again and Gisela rubs my back, her hair falling about me, tickling my face.\n\n\"Listen.\"\n\nSlowly acquiring my bearings in the dark, I can hear it now, footsteps, the sound of someone trying to insert a key in a door lock out back. \"I'll check it out.\"\n\nThere are other footsteps from within the house, Ned, both of us arriving at the backdoor at the same time, moonlight streaming through the kitchen window. Ned nods and I hold back, letting him open the door and Luke practically falls into Ned's arms. Slurring, he says, \"What a catch, eh, Dad...\"\n\n\"Come on, Son,\" Ned whispers, \"I'll get you to bed.\"\n\n\"Is this the bastard who wouldn't drink with me?\" He's pointing at me. \"Oh and here's his pretty missus, couldn't leave her for a few hours to come to the pub, could ya mate?\"\n\nTurning to glance behind me, Gisela stands in her night gown, and I wave her away but her stare is defiant.\n\n\"Shhhh, Son,\" Ned's saying, \"Alfred is Matt's future brother-in-law, so he's sorta like family.\"\n\nLuke meets my eyes. \"Was it you I could hear coughing ya lungs up? Bloody Germans and their gas, eh. You know the cure are medicinal beers and whiskey and rum, fuckin' cures all, you should try them sometime.\"\n\n\"I'll think about it, mate,\" I say, hoping he'll forget.\n\n\"Come, now,\" Ned's whispering, trying to drag his son gently away.\n\nMyrtle's in the doorway to the kitchen and when Luke notices his mother his demeanour relaxes somewhat. Finally he says, \"I need some water first.\"\n\nNed nods and helps Luke sit at the kitchen table. When I turn, Gisela is still there, and Luke whispers, \"Sit with me, cobber.\"\n\nCatching Gisela's eyes, I shrug my shoulders thinking she should probably go back to bed, but I don't say so, turning to Luke and taking a seat at the table. Ned is decanting water from a pitcher into a glass and Myrtle watches. I swallow and ask, \"What troubles ya, mate?\"\n\nHe doesn't answer immediately, looking straight ahead at the back door, and Ned sets the glass on the table before joining us while Luke takes a long gulp of water. Myrtle moves out of the door and I hear Gisela shift behind me, so I assume she's decided to leave us in private.\n\nLooking into my eyes in the moonlit dark, Luke finally mutters. \"You know what it was like...\"\n\n\"Yes, mate, I do.\"\n\nHe shakes his head. \"Me best cobber was killed tryin' ta save me life, stupid bastard. One second he's there above me, tying a bandage about my leg and he gave me a smile and said to me I'm gonna be fine, next moment blood starts spraying from his neck and...now when I go and drink, I drink for him and all me other cobbers, poor bastards.\"\n\n\"I hear ya, mate...\"\n\nNed looks to Luke, his mouth agape but he doesn't say a thing, and I reckon he's never heard his son's story. Luke takes another swig of water before continuing. \"It's absolutely fucked, me leg was shot out from under me and was in a world of pain...stupid me shoulda kept me mouth shut but I called George over and he came even though the boys were attacking, but he shoulda stayed in formation like we were supposed to. Maybe he wouldn't've died if I didn't...if he ignored me whingin'...\""
    ],
    "authorname": "Thefireflies",
    "tags": [
        "romance novel",
        "romantic",
        "love story",
        "first time",
        "world war one",
        "war",
        "ww1",
        "historical fiction",
        "drama",
        "australia"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/prussian-blue"
}