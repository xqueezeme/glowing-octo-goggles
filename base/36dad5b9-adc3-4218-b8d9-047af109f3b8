{
    "title": "A Tempting Vacation Ch. 19",
    "pages": [
        "Beth woke early, anxious to lay the groundwork for what she had planned. She'd been spending much of her downtime on this vacation fantasizing about how this particular day might play out, and now was the time to bring it to fruition. The timing of their condo stay versus the docking of the ship in Miami had required them to head on back to the mainland, and spend one more night, before Amy, Sue and Dave would return. They'd known from the start that this was part of the itinerary, and given Beth's history of traveling to Miami, she had volunteered to find them a room, even before they'd left Nashville and well before her twisted plans for Ron and her friend had become her perverted obsession.\n\nNow, Beth couldn't have been more pleased she'd gotten the reservations. She and her ex had often come to Miami. It was a fun, sexy getaway where they could let loose without fear of seeing anyone that might know them. They always stayed at the same little boutique hotel in South Beach. The owner, an older, yet dapper gentleman, had grown quite fond of them, or more specifically, Beth and the way she flirted with him, wore minimal clothing, and seldom closed the drapes to their room, which coincidentally, faced the owner's office window. So when she snuck away the day before, and called Thomas to ask for a favor, he'd been only too happy to comply. \n\nWith Pam taking her morning shower, Beth slipped on a snug sundress, the light green color making her iridescent eyes pop, while contrasting nicely to her newly bronzed skin and blonde hair. She finished packing her suitcase, and after tossing a pair of shorts and a polo shirt to Ron, she stealthily slipped into the bathroom to retrieve Pam's own relatively somewhat modest dress she'd intended to wear. After leaving the new white dress in its place, she slipped from the bathroom and finished packing up all of Pam's remaining clothes, then summoned the hotel bellboy, whom she'd already primed for his task with a $50 tip, to have their luggage taken directly to their charter flight airline.\n\nRon donned the clothes provided, not questioning Beth about her actions, and not the least bit surprised she'd not given him any underwear. After watching her nonchalantly strip naked and slip the provocative green dress over her head, his dick was swollen thick in anticipation of what might await him today. Although, short of actually having sex with Pam, he couldn't imagine anything surpassing the adventures of yesterday.\n\n\"BETH!\", Pam shouted from the bathroom, suddenly breaking Ron's thoughts of his girlfriend's mother and their forced entrapment in the spa locker.\n\nBeth winked at Ron, flashed him a devious little smirk and before entering the bathroom, whispered, \"I guess Pam wants to thank me for the sexy white dress I laid out for her today, you know the one, I tried it on for you at the boutique the other day.\" She shut the door, leaving Ron with a vivid memory of their dressing room interaction and a still hardening cock.\n\n\"What is this?!\" Pam demanded in a stern yet composed manner, motioning to the garment so enticingly molded to her fit form. \"I had the flowered dress in here. It was the least sexy thing I have, thanks to the way you've altered my wardrobe. Believe it or not, I do not intend to torment Ron anymore on this vacation, so go get me my other dress please.\"\n\n\"Well, first of all, look at yourself in the mirror. Yeah, you do look a tad sexy, and I mean, it might be a little much back in Nashville, but we're going to Miami, where dresses like this are a dime a dozen.\" Beth said, hoping to win Pam over before telling her this was the only item of clothing not already packed away and on its way to the airport.\n\n\"Of course you think that, what you're wearing couldn't be any more daring.\" \n\nBeth stood next to her friend, and they both gazed at their images in the mirror. \"Yeah, it is a little, uh, explicit, huh? But why not, we'll be back in our boring little Tennessee lifestyle soon enough. Let's live on the edge a little. I mean, I like the thrill of flaunting all my hard work in the gym, don't you?\"\n\nPam heard her friend's words, as her eyes took in the sight in the mirror. Beth's dress, while not as short as her own, was made of a clingy thin material that accentuated her bralessness, while offering a deep expanse of cleavage created by the rather daring neckline. Even though her own cleavage was not so extreme, Pam's nipples were equally apparent, and her own snug dress only came down to about mid-thigh. The erotic imagery conveyed before her was undeniable and suddenly the thought of Ron spending one more day conspicuously trying to conceal his erection invaded her mind, and instantly ramped up her own arousal. Pam's immediate and genuine response to purge such images from her brain was largely unsuccessful, as a random recollection of her numerous encounters with Ron, or more specifically, his enticing penis, thoroughly beat back any proper and moral thoughts that tried to take hold.\n\n\"Ok, you're right, we do look hot,\" Pam replied, unable to deny the obvious, then continued with the expected objection, \"but we can't do this to Ron again. Today's the last day and we just need to start getting back to normal, and putting all this vacation stuff behind us.\"\n\n\"Well,\" Beth paused, \"I'm afraid I can't do anything about it. The hotel staff came by and took our bags for an early check in at the airport. It is one of the extra little services they provide.\"\n\nEven as Pam continued to complain to Beth about her manipulative actions, the realization that she was once again left with no choice but to tease and torment her daughters big dicked boyfriend caused her to shiver with excitement. She lodged a few more complaints to her friend, each with less conviction than the one before, as she applied the finishing touch to her makeup and lipstick, then both women exited the bathroom.\n\nJoining Ron, Beth did as promised, saying, \"Ah, I need to explain a little mixup. I thought Pam wanted this dress she has on, but it was another white dress. I accidentally packed it away and let the bellboy take the luggage. She is a little self-conscious about her attire, but I just wanted to be clear about it not being her choice.\"\n\nThe entire time Beth spoke, Ron was unable to prevent his eyes from roaming over both sexy older women, head to toe. Pam could almost feel his gaze caressing her as she did her best to conceal her own excitement, even though her own nipples felt to be practically ripping through the tight white dress.\n\nGiven their attire, and the amount of Cialis coursing through Ron's young body, Beth knew his baggy shorts were going to do little to conceal his appreciation for these new dresses. She didn't want the poor boy to be completely embarrassed as they traveled to Miami, so she'd planned ahead enough to hold back an elastic headband from her packing.\n\nShe deftly slipped it to him as Pam fixed a last cup of coffee for the road, nodded to his misshapen crotch and whispered, \"Here, this may help corral things a little.\" Then louder, as she joined Pam by the front door, said, \"Oh Ron, I did keep out the one carry on bag, you know with all the toiletries and stuff, since Pam was using it. Be a dear and go to the bathroom and grab that for me. We'll be down at the office getting a taxi.\"\n\nA few minutes later, Ron joined his two lust inducing travel companions in the cab. The skinny hair band was stretchy enough to slip up and over his thigh, and allow him to basically tie his cock down at an angle that wasn't too noticeable, or too painful. The bulge was still absolutely unmistakable, but it wouldn't call attention from across the airport, as would have been the case otherwise.\n\nBy the time they landed in Miami, Ron's cock had softened, but only slightly and the elastic hair band hugging his dick was almost as stimulating as it was restrictive. Sitting between Beth and Pam for the 40 minute flight had been exquisitely torturous. The amount of tanned thighs and cleavage on display kept most every male's head within three rows on a swivel. As Ron sat there glancing from one set of protruding nipples to the other, he thought that even if they had both worn just a normal pair of shorts and a tee shirt, their gorgeous faces and fit bodies would have still turned heads. He was hopeful for what might lie ahead, but ever since Beth had made her little speech about Pam's dress mix up, there had been no touching and no innuendo from Beth, in fact they had both behaved as uninterested in his cock as anytime on this trip. He didn't know exactly what that meant, but he knew the general game plan of conveying an innocent naivet\u00e9, and just had to wait for Beth to direct him on what to do.\n\nAs they de-boarded in Miami International, Beth suggested that Ron go with Pam to get the car from long term parking, and she would wait at the baggage carousel for their luggage. Having them leave her alone for the luggage was critical, and she was thankful Pam agreed without any push back.\n\nAs soon as Beth strolled into the baggage area, now with only her small carry-on bag, she spotted Thomas. His eyes devoured her as they neared. She had filled him in on the basics of her plan, and as she gave him a lingering, full body hug, he whispered in her ear, \"This kid with you is one lucky little SOB.\"\n\n\"Well, don't forget, you will get a front row seat, that's part of our deal. I'll leave our blinds open enough for you to see everything. As long as you do your part, it should all come together.\" Beth responded, feeling the older man's growing penis prodding her hip.\n\nAs soon as their three bags came around the conveyer, Beth grabbed them and put them on a cart for Thomas to wheel out to his awaiting taxi. She gave him a quasi-sexual kiss near his ear, saying, \"Thank you so much sweetie, we'll be in your lobby in a bit.\"\n\nIt took another 20 minutes for Pam and Ron to return with the car. Beth was quick to explain the lost luggage, and how she'd been round and round with the airline. In reality, she had gone to the lost luggage counter, and simply asked for a claim form. She filled it out completely, making up airline info where appropriate, like agent number, claim number and so on. As she showed it to Pam, the form clearly stated they expected the luggage to be returned to them the next day.\n\nPam was fairly certain Beth was up to no good, but she did have a form from the airline, and these things did happen to people. Even if she raised hell and called her friend a liar over something she couldn't ultimately prove, the odds of Beth confessing and producing their luggage was remote. After a few minutes of discussion, Pam accepted the fact that they weren't getting their bags today. \n\nAt the hotel, Beth and Thomas acted as if they'd never met, so when he told them there had been a mix up with their room, Beth blasted him as planned. Pam joined in, having been clinging to the respite of Ron having a separate bedroom in their suite. Now they were back to one room yet again. Thomas apologized profusely, while leading them to their second floor room. It was very nice, but it didn't even contain two beds, as they'd had on the island. Only one king sized bed.\n\nHearing yet another round of complaints, Thomas responded, \"I am so sorry. We are completely booked up, as is every hotel in the city. There are about 4 large conventions in town, and there are no vacancies to be found. I tell you what, why don't you go out to a nice dinner, it will be on me.\" He said, handing Pam two $100 dollar bills. \"While you're out, I'll make some calls on the off chance a room frees up, or at least try to track down a roll-a-way cot.\"\n\nBeth had to suppress a grin at seeing the cash. This hadn't been part of the deal, but she figured that when Thomas saw Pam, and realized he'd be able to watch her through the opened blinds, he stepped up his efforts to make this work as she'd planned.\n\n\"Well,\" Pam said, clutching the bills. \"We do appreciate your sincere attempt to rectify the situation. We'll go to dinner in an hour or so, then swing by the office, okay.\"\n\nLater, as the threesome walked back toward the hotel, Pam realized Beth had been right. While their dresses were getting lots of looks, they weren't that different from several other sexy women she saw parading down Ocean Blvd.. She had lost most of her self-consciousness about wearing such a short dress with no panties, having potentially flashed someone her bare pussy only one time, as far as she could tell. The obviously married man with his wife at the restaurant nearly dropped his fork as Pam had scooched into the booth at dinner, her legs briefly splaying open more than she had intended.\n\nOther than that, dinner had been as normal as possible. She'd grown used to having nearly every single person they passed, male or female, do a double take at her hard nipples beneath the tight white dress, before shifting their gaze to take in Beth's equally blatant display. \n\nBeth had begun ordering drinks for them as they waited for their table. Ron was relegated to regular iced tea, for having him drunk was really not all that important to her plan. It was Pam that needed a buzz, and Beth made sure to get them something deceptively strong, like a Hurricane or Long Island Iced Tea. By the time they left the restaurant, they'd each had several drinks, and were feeling little pain. Perfect.\n\nThe sun had just set, but the air was still thick and hot. The ten minute walk back to the hotel had them all covered in a sheen of sweat. Passing through the compact courtyard on the way to the office, Beth waited until they were at the edge of the pool, and hip checked Ron into the water, saying, \"Oops, sorry Ron, but you looked kind of hot before.\" She and Pam broke into an intoxicated giggle at Ron's expense, that is until Beth grabbed her friend by the arm and likewise slung her around and into the water before making a show of teetering on the ledge herself and then tumbling in as well.\n\nIt took a few moments of drunken laughter before it dawned on Pam the ramifications of what Beth had done. They were all three soaked to the bone, in the only clothes they had. And as she began to climb up the steps at the far end of the pool, the white dress clung to her every curve and crevice like a second skin. A brief glance downward confirmed the dress left nothing to the imagination. Pam didn't know exactly what she had planned, but even now, with a decent buzz, it was obvious that Beth was once again setting her up for something... something naughty, and sexy and tempting. She would have to resist. \"Beth, I can't believe you did that. Look at me, I'm completely indecent!\" She exclaimed, obviously now somewhat angry at her manipulative friend. \n\nRon took her advice, and stared. He likewise gawked at Beth as she joined her friend just out of the water. The subdued lighting in the pool area shown just enough to make it evident just how naked they were beneath those wet dresses. Beth took her time trying to wring water from the bottom portion of her sundress, effectively allowing Ron a clear upskirt view of her soaked pussy and sparse blonde pubes, and forcing Pam to stand idly by, with no choice but to offer up her own erotic image to Ron's gaze. \n\n\"Oops, sorry.\" Beth said as she finished her task, not sounding sorry in the least. \"Come on, no one has even seen us, let's hurry to the room and get dried off.\" They scampered off to the stairway, leaving Ron to exit the water and join them at his own pace. \n\nWhen Ron entered the room, he could hear both women in the bathroom. Pam was obviously upset, as she scolded Beth in a tone Ron could hear through the door. \"Now what? Our only clothes are drenched, and we only have one bed. Somehow, and I don't know how exactly, but somehow all of this is no accident.\"\n\nBeth had already shimmied out of her clinging dress, and was wrapping a towel around her still damp torso. \"Here let me help you peel that thing off, and really Pam, you give me too much credit. I'm not able to line up the airlines and ocean front hotels to do my bidding. We'll figure something out, don't worry.\" Beth replied, trying to sound as sincere as she could. Let me take a towel to Ron and I'll call the desk to check on the room situation.\n\nBeth came out and tossed a towel toward Ron, then went to the big picture window that faced across a narrow walking path, directly into Thomas' own little second floor apartment. She opened the blinds enough to enable him a full view of the room, but no so much as to be noticeably opened. She then noticed the ice bucket, adorned with a red ribbon tied into a decorative bow, with two bottles of champagne. A nice touch she thought, before retrieving the expected note. There was even a bouquet of flowers sitting up on the dresser. Thomas was certainly playing his part to the fullest. She headed back to the bathroom, telling Ron to get out of his clothes.\n\nAgain, he could hear them beyond the closed door, \"Ah, bad news. The front desk guy left us some flowers, bubbly and a note. It says, 'Please accept these modest gifts as evidence of the hotel's sincere apology. I could find no other rooms, and all of our cots are already in use. I was called away on a personal matter, so unfortunately, the front desk is unmanned and locked for the night.'\n\n\"Well, why am I not surprised,\" Pam said in a disgusted, sarcastic manner. \"I suppose you are going to suggest we all just sleep in one bed, wearing only towels?! Really Beth, what is the plan now, I have a feeling you will have a suggestion.\"\n\n\"Pam, come on, don't be mad. I'm not sure what to do. I mean, what are our options. I guess we could sleep in these towels. I mean, they are thicker than the nighties we wore last night, but they're all completely damp.\" She concluded, knowing Pam wouldn't see the merit to this solution.\n\n\"Ah, No. I am not sharing a bed with you and Amy's boyfriend, all practically naked. In case you hadn't really noticed, these aren't exactly plush oversized towels from a 5 star resort. This is more like my towels at home, that barely are big enough to wrap around me. Look at us, almost an entire hip flashes through the gap with every step. You better find a plan B.\" Pam directed.\n\n\"Okay, okay, we'll figure something out. Let's pop a bottle and think on it.\"\n\nRon was standing there, mostly dry, the thin, now very damp towel hanging from his waist. Like the women, the towel parted to reveal almost his entire left leg. His erection was recovering from the pool plunge with a vengeance, obviously tenting out away from his body. Like a divining rod, it was only moderately restrained by the damp towel, as it was attempting to point directly at Pam and Beth, each with their own thin yet water laden towel fastened over their right breast, low enough to allow the material to drop a few inches below their ass, which also resulted in a significant portion of each tanned boob exposed to his gaze. Their hair was still mostly wet, and dripping onto the swell of each breast, before the lucky little water droplets plummeted into their towel enhanced cleavage.\n\nBeth ignored Ron and popped the first bottle open. She poured three glasses and handed them out. Pretending to notice Ron, and his erection for the first time, she said, \"Ah Ron, maybe you should sit down, you know, before your towel is pulled completely free of your body.\"\n\nEven though Pam was still a little angry, she couldn't help but giggle a little at Beth's comment to Ron, the Long Island Teas reclaiming some control of her recent surge of emotional rebellion to the situation.\n\n\"Ah, sure, yeah ok, sorry.\" Ron deadpanned, still not sure where exactly Beth was headed with all this.\n\n\"Hey, wait a minute. Maybe...hold on.\" Beth pretended to have a light bulb moment, and shot off to the bathroom, and grabbed her carry on bag, \"Come here Pam, this might work.\" She said, lilting the word 'might' to give Pam just enough skepticism as to what she was about to suggest.",
        "\"I do have this.\" Beth said as Pam entered the bathroom. \"I had forgotten that I put this little number in this bag. It is something I bought the day you went on the ship with Amy.\"\n\nPam looked at Beth holding up a red satin and lace lingerie set. There wasn't much to it, and she reached behind her to shut the door as she continued to assess the outfit.\n\n\"I know it's not exactly appropriate sleepwear, but there is a bra, panty and little robe with it. I guess we could split it up. One take the robe, and the other the rest. What do you think?\" Beth spoke the words she'd imagined since concocting this fantasy over the past days.\n\n\"So we go out there dressed in this, and Ron is going to crawl in bed with us, what, naked?, in a towel? I mean Beth, the boy can only resist so much. I would not blame him in the least if he pounced on us like a starving man set loose on an all you can eat buffet.\" Pam replied, now whispering so softly that Ron would not hear.\n\n\"Yeah, but, wait, you stay here and decide which piece you want to wear. I think I have a solution.\" With that, Beth shoved the lingerie set into Pam's arms, grabbed the only luggage they possessed, and left the bathroom.\n\nShe went straight to the bed and began pulling the comforter, blanket and top sheet down, even as she spoke softly to Ron, \"Ok kid, get ready for the best night of your life, if all goes as planned. Lose the towel and get under this sheet.\"\n\nRon did as instructed, his cock still pointed out mostly hard, perpendicular to his body. Once in the bed, Beth opened the nightstand drawer, and retrieved the four sets of fluffy handcuffs left there by Thomas, just as she'd instructed.\n\nAnother thing Beth had loved about this hotel was the furniture. It was not the usual boring hotel stuff. Thomas had old, unique pieces. Beth and her ex had always had this room, well mostly because Thomas wanted to peep on them. She suddenly remembered he was likely already watching, and gave a brief air kiss toward the window. But the other thing about his room was the bed. It was an antique iron bed, with vertical bars all the way across both the headboard and footboard. Perfect for the bondage games they liked to play on those long ago visits, and perfect for tonight.\n\n\"What? What are you doing?\" Ron whispered urgently as Beth fastened each wrist out toward the corner of the bed. She did the same thing to his ankles, leaving him spread like an X, but with enough play in the positioning of the restraints to allow him some wiggle room.\n\n\"So, if you want this to go as I plan, and believe me, you do, then you are to be the most gullible kid ever tonight. No matter what I say, or we do, you just play along, okay?\" Beth instructed him as she had so many times over the past few days, as she covered him back up with the sheet. She tucked it in securely beneath his hips and legs, leaving his stomach and chest exposed. Before making the final tuck under his left butt cheek, she grabbed his cock and pulled it up toward his belly button. The sheet extended past his bulbous head a couple of inches. After the last loose bit of sheet was wedged beneath him, his cock was tightly pinned against his torso. The long thick shaft created an obvious mound as the sheet stretched across his body, and would be held securely in place until someone pulled the mummy-like wrapping from beneath him.\n\n\"Ok now, don't move.\" Beth snickered at her own joke, \"and just hope Pam decides to go along with all this. I'll be back in a flash.\" Before leaving, she grabbed Ron's towel and the excess bedding and shoved them beneath the bed, hoping the adage \"out of sight, out of mind' would hold true when Pam came back in the room.\n\nBeth entered the bathroom, at once having to suppress a triumphant grin as she took in the vision of Pam staring into the mirror, assessing the one size too small bra's struggle to conceal the curve of her bronzed skin escaping the sexy garment from all sides. The panties provided an equally intriguing predicament, as more than half of each toned, bubbly cheek was exposed. The black lace in the front would have hinted at the opportunity to glimpse her pubic hair, had they not shaved it clean the previous day. \n\nBeth stared for another few seconds before stating, \"Oh my, ah, Pam, I have to say, you look absolutely delicious.\"\n\nPam continued to turn and examine her reflection as she said, \"Beth, really?! I can't wear this out there with Ron. It would be just too, ah, tempting, you know, for him, don't you think?\"\n\n\"Well, maybe, but given the circumstances, I just don't see another way to go.\" As she spoke, Beth dropped her towel and slipped on the shorty robe. She turned as Pam had been doing only seconds earlier, and said, \"You could trade me for this, but, well, as you can see, this barely covers my ass, and the front only drops a little lower to give me some modesty, and even pulled together tightly with the sash, I can't help but display some pretty serious cleavage. I really don't think you'd feel any more comfortable wearing this, and nothing else, would you?\"\n\nPam shook her head and turned back to the mirror. She couldn't admit it to Beth, but her pussy was already pulsing at the thought of once again being forced to tease Ron. Still, just because her sex drive had been stoked for the past week, it didn't mean she would have to act on it. She couldn't act on it, no matter everything else that had happened, in fact, in spite of everything else that had happened. Ron was Amy's boyfriend, and Pam knew it was imperative that she corral her physical yearnings and make sure that their experiences on the island stayed between them, and that any acknowledged interactions were firmly categorized as 'unintentional or unavoidable'. \n\n\"No, I don't really want to wear the robe. I don't want to have to wear anything this sexy for the rest of the night with poor Ron. I am really concerned about his ability to behave, and like I said, I can hardly blame him at this point.\" she stated, the memory of them being forced to slither their oily bodies against each other in the cramped locker reinforcing just how horny Ron must be.\n\n\"Okay, well I have some good news on that. I know your remember the goodie bag Ron won in the contest while you were on the ship? I am embarrassed to admit it, but I packed some things from the bag, thinking someday I might find another man as adventurous as my ex. And well, just come with me and you'll see.\"\n\nBeth lifted the still half full champagne glasses, and they both killed what was left, then Pam followed her from the bathroom, to see what her devious temptress of a friend was up to.\n\nRon's cock did its best to twitch beneath the confining sheet as he took in the erotic image of the two older women. Their athletic, perfectly proportioned bodies looked straight from the pages of Victoria's Secret when they stopped at the foot of the bed, as if modeling the exotic lingerie. \n\nBeth spoke up, eager to keep pushing in the direction she'd envisioned. \"So, Ron. Here is the deal. The unfortunate mix up with our luggage, and our little drunken pool dip have left us with a quandary. The only thing Pam and I have to wear, much less sleep in , is this.\" she said, motioning to their stunning physiques with her hands. \"And as I explained to Pam, the only option with you, since we have absolutely nothing for you to wear, was to secure you beneath the sheets with the, um, novelty gifts from your contest prize bag.\" \n\nPam heard Beth's words, and in some way, they registered within her alcohol, lust addled brain. But most of her attention was on Ron, bound to the bed beneath a single sheet that Beth had obviously molded to, and tucked beneath his body. The length and thickness of his lovely cock, the object of so much angst, temptation and longing, was plainly displayed beneath the inadequate thickness of his encasement. \n\nAnticipating Beth to try and nudge her across the threshold of depravity she'd been fighting against for days, Pam turned and scurried back to the safety of the bathroom, calling for Beth to join her.\n\nBeth grabbed the opened bottle of champagne, the robe pulling apart and inadvertently giving Ron a quick flash of her wispy blonde pubes as she turned to leave.\n\nPam verbally pounced on her as soon as Beth shut the door. \"Beth!\" she whispered as sternly as she knew how, \"I AM NOT GOING TO HAVE SEX WITH AMY'S BOYFRIEND, DO YOU UNDERSTAND?!?\"\n\nA little taken aback with the tenacity of Pam's words, Beth replied, \"No, ...no, ...no of course not. I don't want you to. I really didn't plan this, I promise.\" Beth lied, before continuing, \"I admit, it is fucked up, but I will also admit, I can't help but get a little thrill out of finding ourselves in this predicament.\" \n\n\"I don't believe you.\" Pam stated unequivocally. \"I mean about not planning all this. I certainly believe you're getting excited by whatever else you've got up your sleeve.\"\n\n\"Okay, I understand your skepticism, but I don't really know what to do about it. All I know to do is have us go out there and deal with it like we have the past couple of days. Act like being dressed like this is just, well sort of, unavoidable, which it is, and that we are going to treat it, and him, as if we were all dressed in fully modest long johns or something, what do you say?\"\n\nThey both looked at the mirror at the same time, and after taking in their undeniably lustful images, Pam repeated, \"fully modest long johns?\", her displeasure with Beth unable to prevent her inebriated giggles from erupting into full on laughter between the first and final words she spoke. \n\nBeth had joined in as well, managing to gain control long enough to reach to Pam's left breast and move the bra cup over a mere centimeter, then said, \"There, now that's much more modest\" before they both guffawed once again at the absurdity of what Beth had suggested.\n\nAfter calming down, Beth poured two more glasses of champagne, and said, \"Look, like I said, it is a fucked up situation. But can't we just make the best of it. Let's do out there and, you know, just hang out.\" she gave Pam a sly grin before adding, \"and if Ron happens to have a gigantic, throbbing pre-cum leaking erection soaking through the sheet, well, it won't be our fault, okay? Besides, you can't tell me the idea of this, this 'unintentional' teasing isn't' turning you on, at least a tiny bit?\"\n\nBeth was 100% right about how horny Pam was at the thought of doing just what she'd described. That wasn't really a surprise, as for the past 48 hours she'd been ready to explode from the sexual tension seemingly coiled up between her legs, poised to spring forth in pursuit of a much needed orgasm. She'd managed to control these urges so far, and now with Amy coming back tomorrow, the finish line was within sight. However, if they had to spend the evening dressed like this, she rationalized that she'd make sure to keep things under control, even if she eventually decided to have a little innocent fun with this last night alone with Ron, with innocent being the key word. As the champagne danced across her brain with the rum she'd consumed over dinner, Pam told herself that she could actually push her limits, a little at least, and maintain some degree of plausible deniability by portraying herself to be unaware of the torment being inflicted on Ron. \n\nKnowing the peril of sharing these thoughts with Beth, Pam took a big gulp from her glass, saying,\"I am not agreeing to play along with you, but if you promise to go out there and make the innocence of this situation clear to Ron, then I'll force myself to play it cool and power through til bedtime.\"\n\nBack at the foot of the bed, Beth said, \"Okay Ron, we had another little discussion, and, well, like I said before, as much as we've tried to find another solution, it appears we'll all just have to agree to deal with the situation as best we can. And by that, I of course mean that we'll treat our attire, or lack thereof in your case, as a non-event, much like we agreed to do back on the island. Do you think you can live with that for one last night?\"\n\n\"Ah, sure, I mean,\" Ron paused, glanced to his bound wrists, but rather than acknowledge the obvious reason he could do nothing other than comply, simply continued, \"I understand, and it'll be just like before, when you treat me like one of your kids, or just another one of the girls.\" He finished, doing his best to conceal what felt to be a sneaky conspiratorial grin. \n\nPam barely contained the giggle that bubbled up at Ron's words, the absurdity of which was likely not lost on any of them, as his cock continued to twitch under the lingering gaze of the two sexy milfs.\n\n\"Okay then, it is still so early, I mean barely past 9:00. Maybe we should watch some TV to help pass the time.\" Beth said in a normal a tone as possible as she grabbed the remote and crawled up on the bed next to Ron, in the crook of his bound left arm. She sat with her feet tucked beneath her naked ass, pointing the remote as she said, \"Come on Pam, get comfy and we'll see what's on the tube.\"\n\nRon glanced to his left, taking note of how the red robe only barely extended onto Beth's thighs, just enough to keep her decent. Her left breast was mostly visible through the gap in the silky material. Feeling the bed give, he turned to watch as Pam took a similar position on his right side, the red and black bra struggling to contain her golden breasts. He realized she was likely more concealed that she'd been in the white bikini on the beach, but the undeniable eroticism she portrayed now, coupled with the fact he was bound, helpless next to her sent yet another pulsing jolt to his ever thickening cock.\n\nBeth channeled up until she landed on Cinemax, hoping to find something titillating to further set the mood, but given the early hour, had to settle on some Arnold Schwarzenegger movie. \n\nA moment or two of silence passed between the threesome, as the awkwardness of the situation settled upon them, until Beth turned toward Ron, saying, \"Ron honey, you can't even see the TV like this, can you? Here now, let us prop some pillows up behind you a little. Will you help hold him up Pam while I put these behind his neck and shoulders?\" \n\nPam looked to her friend, innocently holding two king sized pillows in her hands, and decided it would be easier to play along that put up any resistance to Beth's rather blatant attempt to instigate some interaction between her and Ron. She swiveled around, her eyes roaming up his encased body as her knees pressed against his hip, tightening the sheet and noticeably causing his ensnared penis to roll ever so slightly toward her.\n\nPam leaned forward to grasp Ron by his shoulders and tug him up from the bed as best she could. As her substantial cleavage swayed only inches from his face, he was pulled up as much as his bindings would allow, and Beth wedged the pillows behind him, effectively angling his head to provide a full view of the room.\n\nAs Pam settled back to her original position next to Ron, she could feel the effects of the night's drinking, along with the ever present and escalating impact of having been unknowingly drugged with the Sensuvive, and she once again took a prolonged glance at the teen's cock.\n\n\"Now, is that better?\" Beth asked, while sitting there with her robe haphazardly tied to display most of one breast, and much of her toned abs as well, until the sash reestablished her modesty just above her belly button. \n\nAs his cock strained to a complete erection while pinned to his abdomen, Ron looked briefly to his right, at Pam's profile in the mirrored wall, his eyes locking onto the firm roundness of her ass, then attempted to answer, \"Uh, yeah, I am actually pretty comfortable.\"\n\nBeth scooted back to her perch on his left, made a show of pulling her robe snugly back together, even as her nipples poked prominently through the satin material. She thought about her next step as the threesome once again endured an unnerving silence, with only the movie to distract them. \n\nRon had seen this movie before. Arnold was a spy, and his mousy wife, Jamie Lee Curtis had to transform herself into a sexy seductress to save him. This was the scene where she did just that, and even though he was in middle of a real life erotic situation worthy of its own movie, he couldn't help but admire Jamie Lee's big tits spilling over the top of her slinky dress.\n\nBeth seized upon the opportune plot of the movie to help her transition to the next phase of her often replayed fantasy, and said, \"I have an idea, be right back.\"\n\nPam and Ron traded quizzical looks, but in only seconds, Beth returned from the bathroom with her travel bag. \"I bought a bunch of makeup and stuff on the island. You know they sell some things I've wanted to try, but is so hard to find in the states. Seeing Jamie Lee Curtis getting glammed up reminded me I had it, and well, so why don't we act like we did when we were teenagers, and give each other a makeover. It will help distract us for a while. What do you say?\"\n\nAs she spoke, Beth placed her bag snugly between Ron's legs, and then draped a hand towel across his stomach, managing to cover most of his penis as well. The cylindrical bulge was still noticeable, but not nearly to the degree as before.\n\nGiven her expectation for something completely naughty to be suggested by her friend, posing for Ron's benefit while playing with make-up seemed pretty low down on a list of temptation inducing activities, so Pam agreed.\n\nThe women turned to face each other, separated only by Ron's immobile body and his towel covered prick. As they picked through the lipstick choices, Ron admired the vision before him. Once again, Beth's robe had gaped open so that he was continually offered peeks of her entire left breast and nipple. And like Pam, each time she leaned forward to apply lipstick to her friend, the vision of her tanned, muscular hip presented itself, only hinting at the round, full nakedness of her posterior. \n\nWith Pam, however, he was provided more than a hint, as her image in the mirror provided an unfiltered view of her magnificent ass. The red strip of her panties that disappeared between her sculpted buns only served to intensify the magazine worthy eroticism of the sight afforded him.\n\nIf he had wondered why Beth had draped the towel over his midsection, it soon became apparent, as various tubes of lipstick and small brushes lay on him in his role as a makeshift table.\n\nTen minutes later, after applying foundation, liner and the lipstick of their choice, both turned to face Ron, \"Well, what do you think?\" Beth asked. \"So who has the best lips?\"\n\n\"Beth, don't do that to him...you don't have to answer that Ron.\" Pam jumped in, now starting to believe she could see Beth's intention with the whole lipstick thing. \"Let's move on to our eyes, okay?\"\n\n\"Okay, but I still think it is a fair question, does Ron like 'Cherry Plump' or 'Pink Desires' better. I mean, we have a man here, so we might as well get his opinion.\" As she spoke, Beth ran her tongue over her upper lip, moistening the already wet appearance of the lipstick.\n\nEven as Pam fought the urge to torment Ron with a similar maneuver, she could sense the shimmery pink plumpness of her own lips, and could only imagine the lewd images likely dancing within Ron's teenage mind. Resolutely intent to divert her devious friend, at least until she could think of a better idea, she said, \"Let's finish the whole makeover, then Ron can vote, okay?\"\n\n\"Okay, that sounds fair, but first we need to smoke one of these.\" Beth said, producing a well rolled joint from the pack of Camels, and lighting it before Pam could offer her inevitable objection.\n\n\"Beth, no. We can't...I mean, ...sorry Ron, she's lost her mind I think.\"\n\n\"Oh quit, Ron is a big boy.\" Beth pushed back, wondering if Pam's mind produced an image of the his oversized cock in response to her 'big boy' reference. \"One or two little tokes won't hurt, right Ron?\"",
        "\"Well, I mean, sure, I guess...\" Ron searched for the right words. Pam was his girlfriend's mother, and while he realized how silly it was to worry about a joint after the past few days of this bizarre vacation, he still didn't want to jeopardize how Pam thought of him, as Amy's boyfriend, and in his adolescent brain, drugs seemed quite a bit different from being just another horny kid.\n\nBefore Pam could offer any further complaints, Beth took a drag and placed it to Ron's lips. He could see the bright red ring of lipstick on the joint, and for some reason, found it unexpectedly arousing. He turned his head after inhaling for only a few seconds, not wanting to give Pam a reason to further complain should he break into a fit of coughing.\n\nAs Pam took the lipstick stained joint, she paused before taking a hit, saying, \"Oh ok, I guess given how crazy this night is already, one or two puffs won't do any harm, but Ron, this is one more thing on our list not to tell Amy, agreed?\"\n\nThe next time the joint was placed before him, the remnants of the lipstick now presented both pink and red smudges. Thinking of those same colors smeared across his cock seemed to intensify his already steel hard erection.\n\nAnother 20 minutes passed, as they took turns rubbing and painting each other with products Ron had never even heard of. Even through his own pot filtered brain, he could tell the joint was having an impact on both women, as the giggling and make-up 'do overs' increased. He thoroughly enjoyed being able to observe them uninterrupted, as he for the time being, appeared to have been forgotten in favor of their pursuit of beauty. Even as his body acted as the working table for their various cosmetics, they seemed to avoid any acknowledgement of his trapped prick.\n\nThe champagne and pot buzz was undeniable as Beth held up the pink fingernail polish that matched Pam's lipstick, and placed it on the towel, just past the rounded bulge of Ron's swollen dickhead, saying, \"Okay, let's get your nails done, then we'll go work on our hair.\"\n\nAs Beth finished speaking, she clasped Pam's hands in her own, and placed them on the towel, so that her friend's slender fingers were positioned along the shaft of Ron's penis. Pam attempted to remove them even before Beth relinquished her grip, which she reestablished, saying, \"Just sit still for a minute or two, and I'll get you all fixed up.\"\n\nRon's bloodshot eyes widened at the sight of four hands resting across his cock. He looked up to Pam's face, to see how she would react, and decided to take the offensive in hopes that she would play along. \"Uh, you might as well use me for a table, I mean I'm not much use for anything else, given the circumstances.\"\n\nPam glanced from Ron, to her friend, then back to make eye contact with the bound teen. She of course knew he wanted her hands exactly where they were, and who could blame the kid. The pot was really clouding her brain, Pam's arousal now successfully invading every other thought , and as she thought about her options, she opened her mouth to speak, not exactly certain the words that would come forth. \n\nRather than her own voice, however, she heard Beth interjecting, \"That's so sweet of you Ron, don't you think Pam?\" She actually patted Pam's hands, and thus the thick slab of meat beneath the towel, as if to say the matter was settled.\n\nBy the time Pam's stoned brain refocused on Beth, then her own hands, Beth was dipping the brush into the pink polish, and applying it to her right thumb. Now all three pair of eyes were unashamedly staring at Ron's towel covered penis, and the way the pads of Pam's fingers rested softly along its shaft. \n\nThe towel served to lessen the details, but the thick pole and engorged head were still discernible beneath the white cotton, and he could feel the light pressure as Beth continued to apply polish to the nails of his girlfriend's nearly naked mother. He certainly didn't want to do anything to break up this latest activity, and did his best to breath slowly and take in this incredible situation.\n\nTwo minutes later, as she drug the pink brush over the nail of Pam's pinky finger, Beth said, \"Okay, now just sit tight and let those dry for a minute or two while I dig out my polish.\" \n\nPam sat there, half drunk, incredibly stoned, and after days of near non-ending temptations, frustratingly horny, her hands perched along the alluring penis of her daughter's boyfriend. She'd quit asking herself how she and the shy teenager kept ending up in such erotic situations, and just gazed at the way her fingers laced up the thick shaft, without even getting close to touching the bulbous head, evident even while 'concealed' beneath the towel and sheet. Her mouth, previously parched from the pot, actually began to salivate as she imagined how easily she could pull his cock free and envelope the oversized head with her plump, pink lips. Unconsciously her fingers ever so slightly pressed more firmly against him, as she spaced out, oblivious to all around her, except Ron's fully erect, trapped penis.\n\nBeth observed Pam, unmistakably lusting for the oversized cock that had become the primary focus of their vacation, while the swell of her bronzed flesh escaped the too small bra and her nipples noticeably tented the thin material. Pleased with her friend's state of mind, she said, \"Here it is. Enough of my favorite polish to last me til spring. Since it is so hard to find, I just had to get the biggest bottle.\"\n\nPam jerked her hands free as if her mother had caught her in the proverbial cookie jar. She began to nervously blow across her fingertips as she looked to her friend. She tried to comment on the polish, but the lustful energy coupled with the pot led Pam to giggle nervously, \"Oh wow, I'm not used to being stoned, everything seems so, ah, funny.\"\n\nAfter unscrewing the cap, Beth started to had it to Pam, along with a new brush, but as per her well-rehearsed plan, paused to say, \"So, maybe we should take a little break, we can go into the bathroom and use the hair dryer to finish drying out our hair, and see how the makeup looks under the bright lights, okay?\"\n\nThankful to extricate herself from the temptation of Ron's penis, Pam voiced her agreement, even as she began to crawl from the bed, taking care to protect her damp nails, and still not let anything slip from her undersized lingerie. The last thing she heard was Beth giggling to Ron that he should be a good table and they'd be back in a few minutes. \n\nAs soon as Pam entered the bathroom, Beth moved quickly to pull the towel and sheet back, exposing Ron's tumescent cock. Not willing to deny herself a brief dalliance, she actually leaned down and swirled her talented tongue around his pulsing head, then moved her face within a few inches of his, and whispered, \"Keep quiet and do what I say, we don't have much time.\" \n\nAs the soft words and champagne breath washed over him, Ron watched as Beth held the refill sized bottle of red polish, and then pulled his cock up to 90 degrees, which allowed her to pour a fair amount of the thick red liquid onto his pubic hair. Next, she drizzled even more up and down his shaft and balls, all the while firmly gripping his spongy head between her fingers, taking care not to get any polish on her own hands. To finish things off, she released him, directed a small steady stream over the head of his prick, then tucked it snugly back within the rapidly reddening sheet. Next she poured most of the remaining polish onto the towel and sheet, leaving the bottle positioned as if it had just fallen and deposited its contents on the innocent boy. \n\n\"Now, after the hair dryer has been on for a minute or two, you scream for us that you need help, that there's been an accident. I'll take if from there, but then remember, you need to play along and become the most gullible kid ever born. Got it?\"\n\nA stunned Ron nodded his understanding and watched Beth scooch from the bed, her robe falling completely open to offer him random peeks at the exquisite body within. She re-tied the sash as she scampered to join Pam in the bathroom.\n\nPam was staring at herself in the mirror, silently quite pleased with how sexy she looked in the skimpy bra and panties. Beth had done quite a good job with her eyes and lips. The makeup, lingerie, suntan, and years worth of working on her body, now presented a centerfold worthy image. \n\n\"Oh my God! You look fantastic, even if I do have to take credit for your makeup.\" Beth exclaimed upon entering the bathroom. \"Let me restate that, not fantastic, way more than fantastic, you look like a freaking Playboy Playmate!\n\nMaybe you were right, maybe this is too cruel for Ron to withstand.\" She finished, the last sentence a giggled whisper. \n\nPam didn't even try to put up her typical modest rebuff of such an erotic compliment, responding instead to focus the attention back on Beth. \"Thanks, but you look way hotter than me, I mean that robe just barely stays closed, and even then the way it hugs and shows off your rockin' body has got to be driving Ron mad.\"\n\n\"Thank you darling, but I imagine after spending the past few days on the island, a stiff breeze arouses our young friend. The important thing is that we don't acknowledge any sort of sexual overtones created by the way we're all dressed, that way it'll be easier for you, Ron and Amy to get back to normal when we get home. Don't you think?\"\n\nPam was momentarily surprised at her friend's seemingly rational statement, but then Beth continued, \"So, I mean, I still want to have some fun. We DO have a teenager bound to our bed, and he DOES happen to have one of the biggest cocks I've ever seen. The fact that he is your daughter's boyfriend actually makes it all the more exciting, don't you see? Cause that will keep us from doing anything more than teasing the hell out of him.\"\n\nPam turned, her befuddled, intoxicated expression perfectly portraying her inability to adequately verbalize the objection to Beth's comment. At that moment Beth turned on the hair dryer and began to tuss up her hair, as if all was settled. With the pot buzz still impeding her reply, Pam simply stood there as several rationalizations for what Beth was suggesting began to invade her mind. Before she could succumb to her own demented line of reasoning, she thought she heard Ron's voice calling out over the roaring hair dryer.\n\n\"Beth...turn that off...I think I hear Ron.\"\n\nThey both dashed to the bed, with Pam exclaiming, \"Oh my god Ron?!\", taken aback by the expansive red stains covering much of the teenagers mid section. \"What happened?!\" \n\nRon did his best to convey the accident, just as Beth had instructed. After much banter as to how such an accident could have happened, Pam finally said, \"Well, Beth, just get the keys and unlock Ron so he can go get cleaned up in the shower.\"\n\nThis was Beth's cue to make a spectacle of searching her bag for the inevitably lost key. After an exhaustive, yet futile inspection of their only luggage, the small overnight case, Beth sheepishly explained, \"Ah, so, the key's not here. I must have left them in my big suitcase, with some of the other, ahem, souvenirs from the contest prize bag.\" \n\n\"Beth! Really? You can't be serious!\" Pam reacted in a quasi accusatory tone, certain her friend was continuing to orchestrate this entire evening, but not wanting to directly accuse her in front of Ron.\n\n\"I know, right. I can't believe I did that.\" Beth replied, doing her best to maintain a sincerity to her demeanor. \"But we really can't waste much time. When that polish begins to dry on his skin, it will be harder to come clean. And I don't really think we want Amy hearing how her boyfriend's body turned red.\" \n\n\"Ah, before we do anything, I'd like to see you once more in the bathroom.\" Pam stated, then proceeded in a deliberate, albeit inebriated gait to have yet another confrontation with Beth about her plans for Ron. \n\nBeth flashed Ron a brief, exaggerated expression as if she were in deep trouble, then flipped her robe up, giving him a brief glimpse of her spectacular ass as she scurried to catch up with Pam.\n\nRon could actually feel the drying fingernail polish constricting against his skin, and was relieved when the women returned fairly quickly, with Beth clutching what appeared to be every hand towel and washcloth she could find.\n\nPam had reluctantly agreed to Beth's proposal on how best to get Ron cleaned up. She'd confronted her friend as to the rather transparent game being played with Amy's boyfriend, naked and bound to the bed. However, in her buzzed condition, Beth's insistence that it was all just a string of coincidences, leaving them no choice but to do what had to be done, left Pam to argue a case that would change nothing about their current predicament, even if it was an argument she could win. \n\nBoth women stopped at the foot of his bed, their lust inducing figures barely concealed by the alluring lingerie. Pam's look of inebriated apprehension was unmistakable, while Beth's aura presented a confident readiness for what lay ahead, even if her calculating words attempted to convey the opposite, \"So, Ron, ...wow, okay, so this is kinda awkward, but Pam and I really have no choice, um, but to, you know, get you all cleaned up. You going to be okay with that?\"\n\nRon had used Pam's last bathroom huddle with Beth as time to prepare himself to respond at this very moment, and even through the haze of alcohol and pot, he felt as if he maintained proper innocence while he said, \"Um, well this sounds sort of embarrassing, I mean it feels like it is all over, you know, everything.\" He nodded to his crotch.\n\n\"Listen sweetie,\" Beth cooed as she dropped the various towels on the bed between his legs, \"Pam and I just talked about it, and we understand how having two women, one of them being your girlfriend's mother, seeing and touching you, you know, down there, will likely be rather awkward, but we are going to tackle this with the appropriate attitude, almost as if we were nurses treating a young patient.\" \n\nAs Beth spoke, Ron's gaze bounced between the two women. Pam appeared to be as nervous and apprehensive as Beth was assertive, and neither looked in the least like a nurse.\n\nBeth followed Ron's eyes, then said, \"Isn't that right Pam? We can handle this,\" Beth paused for a split second as the irony of her words led her to, mostly, suppress a smirk, \"and besides, if we don't take care of this right away, the nail polish will most certainly leave you stained, and I don't think any of us want to have to explain this to Amy. No matter how innocent our actions have been tonight, it might not look, shall we say, proper.\" Beth looked back to Pam, \"So? Don't you agree?\"\n\nPam had been standing there in a stoned haze, barely listening to Beth as she took in her daughter's teenage boyfriend, bound to their bed, with only a now damp red sheet molding obscenely to his ever present erection. The thought of assisting Beth in cleaning his nude body was producing some very naughty images in her inebriated brain, with her body likewise displaying its own interest in the situation before her, via her rock hard nipples tenting the one size too small bra, and a dampness within her snug little panties. \n\n\"I said, don't you agree? Pam?..., did you hear me?\" Beth repeated, noting how erotically seductive her friend looked in the teeny lingerie highlighting her sun kissed skin. \n\nStartled from her inappropriate visions, Pam replied, \"Yes, ah, sure. We have to do what has to be done, and we'll, well... we'll simply proceed as adults with an urgent task to complete.\" And she meant it, no matter her apparent inability to control her lewd thoughts or tormented body, Pam would not allow Beth to lead her into some twisted threesome with Ron. Already the implications of this vacation might come back to haunt them, but a night of sex with Amy's boyfriend would be something that couldn't be overcome. So once again, Pam pledged to herself that no matter how intimate the task of cleansing Ron of the polish might become, she'd keep things under control. \n\nAs both women knelt on either side of the messy sheet, Beth said, \"Maybe we can do this and allow Ron some modesty, why don't you pull the covers up away from his body some, and I'll use this hand towel to wipe off the polish?\"\n\n\"Yes,\" Pam answered eagerly, hopeful to end this without having to handle, or even see Ron's captivating penis. \"That sounds like a good plan.\"\n\nShe lifted the soaked sheet up, taking care to shield him from their line of vision. Beth reached underneath with the hand towel, and while taking care to keep her hand free of the polish, did little more than spread it even more thoroughly over his granite like cock and still low hanging scrotum. \n\nA slight, pleasurable sigh escaped Ron's lips before he caught himself, and Beth said, \"Sorry if I am being too rough Ron, but I have to try and get it all.\" As she spoke, her hidden hand wrapped the towel firmly around his shaft and gave him three firm squeezes. Then she pulled the towel out to reveal it to be almost entirely red. \n\nPam looked to Ron's face, asking, \"So? How does it look Ron, Clean?\"\n\nRon stared down to his dick, then looked back up, \"Uh, no. It all looks mostly red, or reddish pink.\"\n\n\"Sorry Ron, but I guess we are going to have to really take a look to see what needs to be done,\" Beth said while quickly yanking the sheet away and balling it up to prevent the red from staining anything else, and immediately heard Pam's stifled intake of breath at the vision before her.\n\nRon's red coated penis wavered above his equally stained scrotum as a result of Beth's actions. After tossing the stained sheet to the corner, Beth authoritatively stated, \"Here Pam, take this washcloth. No time to waste, or we'll never be able to clean up this poor boy.\" Beth began wiping excess polish from Ron's body as if having his throbbing erection pulsing from her touch wasn't the least bit sexual or inappropriate. Pam knelt there, staring for several more seconds before Beth took her by the forearm and directed her to tentatively place the white cloth on the teenager's thigh. \"Come on hon,\" she encouraged, \"no more time for any of us to be embarrassed, help me out here.\"\n\nPam slowly began to wipe the nail polish away from his thigh. As her actions became more purposeful, she glanced up to Ron's face and felt a fresh jolt of arousal while observing the intensity with which he focused on the diminishing distance to his cock with each deliberate stroke of her hand.\n\nBeth, having been surreptitiously observing her friend's steady acquiescence to the task at hand, grabbed the top one third of Ron's prick with a clean washcloth and gently tugged it up perpendicular to his body, saying, \"Ok Pam, take that last clean towel and use it here.\" She nodded toward the base of the thick shaft. Sensing Pam's hesitance, Beth added, \"You need to hurry, more and more polish dries with each passing second!\" \n\nPam did as instructed, for the first time on this long, frustratingly tempting vacation, her hand, albeit protected by the thin cotton towel, made contact with Ron's beefy manliness. She did her best to control the excitement threatening to materialize in the tremble of her fingers. She worked the towel, with an intended lack of sexual intent, over and around his scrotum and lower shaft for the next minute or so. \n\n\"Ok, good job,\" Beth said, \"now grab a clean washcloth and hold him tight below while I finish up here on the top.\"\n\nAt some point during the last few minutes, Pam had decided to go along with Beth's directives, that is as long as nothing overtly sexual was acknowledged between the threesome. If their actions, no matter how inappropriate if viewed in a vacuum, could be justified in getting Ron cleaned up before Amy got home, Pam was committed to doing her best to squelch her own desires and undertake the next step in meeting their goal, whatever that may be. ",
        "So, as Beth instructed, Pam exchanged the soiled wash cloth for a clean one. She wrapped it around the base of Ron's shaft and slowly once again pulled his pulsing erection away from his stomach until it was pointed to the ceiling. \n\nRon watched both women hover over his ridiculously hard dick. He could feel every pulse of his heart funnel more blood to his throbbing cockhead, the tormented purple shade of his helmet visible in those spots where the red polish had been wiped clean. His vision roamed to take in the way Pam's tanned breasts were practically spilling out of the lacy bra, the profiled curve of her sculpted hip and ass, and perhaps most erotic of all, the lustful, trancelike expression on her face as she watched Beth swipe a towel over the most sensitive part of his prick.\n\nThe sash of Beth's robe was almost completely untied, so that all but the nipple of each breast was on display, swaying within the silk robe as she continued with her efforts to remove the polish.\n\nBeth could feel Ron's escalating excitement throbbing and jerking beneath the wash cloth. She also noted the intensity in Pam's face, and knew if she was to prolong this night as she'd fantasized, it was time to interrupt the moment and move on to the next step.\n\n\"Ok, so let's see about our progress.\" She stated, removing the stained cloth from Ron's swollen head. \n\nPam didn't hear a word Beth uttered, as her inebriated focus was tunnel visioned to her hand, and its inability to wrap completely around the thick base of the teenager's penis. She was about to subtly squeeze a little tighter in an effort to make her fingers meet, when her friend touched her arm.\n\n\"Ah, Pammie honey, move our hand and let's see how much of the polish we were able to wipe away.\"\n\nSuddenly aware of the way she been staring, Pam jerked her hand free as if an electric shock has coursed through the towering slab of manhood. Her mind, partially addled from the marijuana, suddenly went into overdrive with the conviction that her lust for Ron's penis had been blatantly obvious, and she worked hard to suppress her own panic as she slowly looked from Ron to Beth. Realizing Ron, the poor boy, appeared to be doing his best to maintain his own composure throughout their efforts to cleanse him, and that Beth was forging ahead without seeming to take note of Pam's inappropriateness, calmed her to some degree. She mentally shook the lascivious thoughts from her brain, and for some reason, felt it appropriate to adjust the bra cups in a laughably fruitless attempt to provide her some much needed modesty. Even in her buzzed condition, the pointlessness of such a move quickly became evident, and Pam focused on Beth's words.\n\n\"You agree with that plan Pam?\"\n\nRealizing she'd missed every word Beth had spoken, Pam looked to her friend, \"Uh, yeah, I mean...well, tell me the plan one more time.\"\n\n\"Ron honey, you tell her. I need to use the little girls room, and get everything we'll need to try and remedy this crazy situation.\" Beth said as she scooted from the bed, her robe once again pulling almost completely open before she nonchalantly re-tied the sash. Sashaying to the bathroom, she barely suppressed her mischievous grin at the thought of having Ron tell Pam what was to come.\n\nPam wanted to bolt after Beth, for no matter that she'd just been clutching his penis with only a washcloth as a barrier, leaving her alone, sitting on the bed next to a naked, bound Ron seemed to be all kinds of inappropriate. But, if they were really going to get through this night and be able to look each other in the eye in the morning, they had to at least pretend this was not the titillating situation Beth had most assuredly orchestrated it to be. So Pam sat there in her skimpy lace bra and panties, and asked Ron to explain Beth's plan.\n\nRon paused for a second or two, composing himself as he tried to catch up with just how rapidly this situation was evolving. Ever present in his mind was Beth's directive to maintain a naive unawareness to just how erotic it all was, even as his cock absurdly throbbed and twitched no more than two feet from his girlfriend's mother. \n\n\"Um, well, she said the next thing to do was grab some soap and try to clean more off that way, and depending on how that worked, Beth said we might have to take more, ah... drastic steps.\"\n\nRon watched Pam as he spoke, her eyes darting from his face to his crotch each time he purposely, yet imperceptibly flexed to produce a not so subtle jerk in her still stone hard prick. \n\nUpon hearing the words 'more drastic', Pam let slip a tiny gasp, as her mind struggled to comprehend what her deviant friend had in mind. The poor boy's penis was pulsing and twitching, and beginning to turn a deeper shade of red as this arousing situation was obviously having an impact on him. \n\nAt that moment, Beth came back, carrying the two towels she and Pam had used after their fall into the pool, the small hotel-size shampoo, and the ice bucket, filled with hot water. \n\n\"I guess Ron told you we need to try and wash as much as way as possible with soap. We've already used all the hand towels and washcloths, but luckily we still have these two towels.\" Beth explained as she sat the water filled ice bucket on the nightstand. \"Here, help me scooch this one under Ron's little tushie, so we don't get the bed all wet.\"\n\nPam's mind was too scrambled with liquor and pot to raise an effective objection. So even as she struggled to corral her escalating libido being fueled by the recent days' near constant teasing and tempting and further turbocharged with the steady dose of sensuvive Beth had been secretly feeding her, Pam did as her deviant friend directed. She helped tug one towel beneath Ron's ass and thighs as he lifted up as best he could given his constraints. The fact that his penis was bobbing between her and Beth, at times no more than 6 inches from each of their faces went without acknowledgement. \n\n\"Good, now...Ron, Pam and I are going to wash you, trying to scrub away as much of the polish as possible. Given that we have no more clean washcloths or hand towels, well, we will just have to use our hands.\" \n\nAt this, Pam overcame her prior inability to object, and just as she was about to speak, Beth held up her hand to silence her friend, and continued, \"I know, I know...this is not proper, so inappropriate, et cetera et cetera...but, ...well, but we have no other choices here. For obvious reasons we cannot return Ron to your daughter with a fingernail polish stained penis. Let's face some facts her dear, we know Amy is quite familiar with Ron's equipment, and there would be no good way to explain away this reddish color.\" \n\nAs absurd as it was, even being bound naked between these two sexy milfs with a world class boner, Ron felt embarrassed to hear Beth speak about him and Amy to her mom. He glanced toward Pam, curious to her reaction, and could see in her face that Beth's argument had obviously held some sway with her. Her reflection in the wall of mirrored closets caught his attention, and the mere sight of her absolutely perfect ass, so sexily set off by the tiny panties, led to an involuntary lurch of his dick. He knew it best to lay there, completely silent and let Beth continue on with her perverted plan.\n\n\"So, to keep Amy from asking those type of questions, we are going to do what needs to be done to get Ronnie boy her all spic and span, good as new.\" Beth plowed ahead, not givng Pam an opening to raise an objection. \n\n\"And Ron, listen darling, Pam and I understand that this is likely to be an arousing situation for you. As mature, experienced adults, we have the ability to separate what must be done, to any sort of, ah, well, let's just say we don't view this as any sort of a sexual situation. Right Pam?\" Beth said, the absurdity of her words well concealed by her sincere delivery.\n\nPam's vision had once again strayed to Ron's penis, but she was mostly listening, and upon hearing her name, quickly refocused back to Beth's face. \"Ah, yes, we know this is just a necessary task.\" Pam could feel the moistness between her legs and the aching firmness of her nipples testifying as to her lie. \n\n\"So Ron,\" Beth jumped back in, \"Here's what we're going to do. Pam and I will do our best not to stimulate you while we wash, but the worst thing that can happen is for you to get over-excited, and well, you know, let us unknowingly push you too far. You need to speak up and let us know before that happens. If you, ahem, had an accident, then that changes everything about how innocent this all really is. But if you stay in control, like Pam and I will, then this is truly just the three of us doing what must be done, given the unfortunate and unavoidable circumstances. You understand what I am saying?\"\n\nRon's mind was whirling. Beth had basically just told him they were going to use their soapy hands to 'clean' him, but that he mustn't cum. \n\nPam had sat there, listening to Beth and trying to make sense of her words. The complete inappropriateness of it all was blatantly obvious, but he did have to be cleaned up. As exhilarating as the prospect of running her soapy hands over Ron's manhood was, she knew the danger of submitting to her body's pent up needs was all too real, and managing to gather her wits, said, \"Beth, I think, given that Ron is Amy's boyfriend, it would be best if you did all the cleaning.\"\n\n\"Oh no,\" Beth quickly replied, having anticipated such a suggestion from her friend. \"We are in this together. I don't want to be the only one...well, the only one doing what we all agree has to be done. From this point forward we have a 50/50 split of duties. If you don't agree with that, then I guess Ron's stains just set in overnight, and Amy starts asking questions tomorrow. If you don't want that to happen, then I suggest 'we' get started while there is still hope of removing the polish. So, you in or are we out?\"\n\nPam felt to be backed into a corner, with no other choice, and agreeing with Beth that time was of the essence, silently nodded her consent.\n\n\"Good, so hold your hands out.\" She directed, then poured some of the shampoo across both hands. Pam held them there, waiting for Beth to make first contact with Ron's tumescent penis. Beth poured some more into her left hand, then carefully drizzled the remainder of the tiny bottle across the swollen head of down the shaft of the lucky boy's cock. \n\n\"Now Pam, I know you are apprehensive, so we'll start together, now give me your hands.\"\n\nIn a stoned, drunken haze, Pam offered over her upturned, shampoo coated hands, and Beth guided them, along with her own, until all four effectively smothered the length of the teenager's cock. \"Now, just start rubbing the shampoo all along, anywhere you see signs of polish.\"\n\nRon barely stifled a gasp, both at the sight and sensation of having Pam grasp his dick. Both women began to roam their slippery hands along his shaft, then over his balls and thighs, then back, until they traveled up his length and over his pulsing head. Their hands hovered above his cockhead, waiting for the last hand to complete it upward stroke, then all four hands would take turns at his tip, slide down and over the bulbous helmet, then his thick shaft to gently caress his balls and then swipe over his upper thighs and pelvic region.\n\nPam couldn't believe what was happening, and felt as if her panties completely soaked through the moment her hands grasped Ron's penis, the same penis she'd been tempted by and, quite honestly, lusting for since that first innocent interaction in the back seat of her car. She worked hard to control her breathing, and had really given no thought to how to maneuver her hands, rather she simply followed Beth's lead. \n\nRon, propped up as he was by the pillows, was afforded a perfect view of these two near 40 year old hard bodies tenderly lathering up the shampoo over his entire crotch. As the fourth pass of their hands slipped up his cock, Ron could actually see the pre-cum droplet appearing to cling to his gaping urethra. \n\nBeth noticed it as well, and without specifically acknowledging Ron's tormented cock, said, \"Ah, now's probably a good time to break for a minute or two. Let's let the shampoo sit and work on its own for a bit. Who is thirsty?\"\n\nPam and Ron both looked at her, the glazed, sultry look of lust in their eyes unmistakable. As Beth got to her feet, her robe once again gaped open to the point of barely concealing her nipples. She didn't make a move to tighten it, knowing the still partially tied sash was likely hanging down enough to either conceal, or at least play peek-a-boo, with her now, very moist pussy. \n\nAs Beth poured three glasses of champagne, Pam followed her friend's lead and crawled off the bed. She could feel the already tiny panties being engulfed by her taut ass cheeks. Also like her friend, she decided not to readjust the material, rationalizing that at this point, showing a little skin was the least of her transgressions. \n\nBeth tipped the glass up to Ron's lips, and he greedily drank down most all that was offered to him. \"Ok now, Ron you relax for a few minutes, Pam and I need to go and discuss something in the bathroom.\n\nHe watched Pam's magnificent ass sway away from the bed, and wondered how Beth could ever expect him to relax, ever again. Beth followed behind her stunning friend, pausing for but a second to adjust the thermostat on the wall. Given that it was a hot night, even by South Beach standards, she knew bumping the A/C setting from 71 to 74 would soon move them further down the path of her well-planned out fantasy. \n\nAs soon as the bathroom door shut, Beth downed her entire glass, and suggest Pam do the same. She didn't realize how the excitement of the past half hour or so had left her mouth parched. She inwardly laughed at the thought of how all the moisture in her body had flooded to her pussy. \n\nAs soon as she set the glass down, Beth descended on her, her Cherry Plump lips engulfing Pam's own Pink Desire with such urgency that Pam immediately, almost unconsciously, acquiesced to her devious friend's debauchery. They kissed passionately, with tongues and moans, and the release of pent up desires. \n\nAfter about 30 seconds or so, Beth pulled back, \"Sorry, but I had to do that. I don't' know about you, but all this,\" she whispered between her impassioned breaths, motioning back toward the bedroom, \"is making me so fucking hot.\" \n\nPam surprised herself and leaned back in to kiss Beth with as much vigor as she'd received, and after another 30 seconds replied, \"Ah, yeah. I know you've manipulated me all along, but at this moment, I am so turned on...but Beth, we can't have sex with Ron...we just can't! All of this is bad, but given everything Amy instigated on the island, she might, just might forgive what we've done if she ever finds out, but if either of us have sex with Ron, well, I don't want to think about how she might react.\" \n\n\"I know, really I do.\" Beth said, no matter that she'd already fucked Ron twice, was for the first time on the trip really sincere in her agreement with Pam as to how devastating it might be. \"But...well, we've come this far. Ron is obviously letting us act like what we are going is not intended to be sexual, soooo...let's just keep playing with him some more. I know it is making us crazy horny, but it is still fun, you have to admit. You can't tell me this isn't exhilarating, naughty, sexy, fun...I mean, when will we ever in our life, have a big dicked teenager tied to our bed, innocently willing to let us do whatever we tell him is necessary to get him 'clean'?\" Beth finger quoted the word clean, then paused for a second, and directed Pam's gaze to the mirror, \"Look at how unbelievably hot we both look, seriously, we're a teenager's wet dream come to life. Let's keep amping up the tease, but I agree, not go too far, and give Ron, you know, sort of a frustrating reward for all the temptations hoisted upon him over the past few days.\" \n\nPam did look at their reflections, and she couldn't deny that yes, the years' of work on their bodies had paid off in a big way, and now, with the animalistic arousal staring back at her, Pam was tempted to go all in with Beth's tempting suggestion of more aggressively tormenting Ron, and themselves, with further naughty behavior. \n\n\"If I agree, and I said IF. What's next in your demented little mind?\" Pam asked.\n\n\"Well, we need to go out and wash off all the shampoo suds and see how he looks. Until then, I'm not sure what we'll need to do.\" Beth lied, but knew the best way to lure Pam in deeper was to present it to her in front of Ron, and his lovely cock. She leaned in and gave Pam one more brief, yet unmistakably sexual kiss, as her hands reached around to cup her bubbly cheeks, saying, \"I think the next break we take, I may just need to bring you back here and recreate our little interlude in the condo.\" \n\nPam instinctively started to protest, but Beth turned her toward the door, gave her ass a loving smack, and said, \"You go on and see how our big boy's doing, I'll be right there after I tinkle.\" \n\nPam almost stumbled out the doorway, her libido stoked even higher, and an irrepressible naughty grin painted on her face at the thought of Beth using her lips and tongue on her again, like back on the island. She was still smirking as she sat back on the bed, next to Ron. \n\n\"What has you so amused?\" He asked, glad to see Amy's mom seemingly jovial, and hopefully compliant for whatever Beth had planned for them. \n\nPam swiveled around until she was sitting indian style, with her back to the edge of the bed. Ron's cock was still there, as hard as ever, the pinkish, sudsy foam clinging randomly to him, yet mostly gathered around the base of his shaft. She realized Ron had a perfect viewing angle to her panties, as they barely covered her plump vagina, but she didn't care. Whether it was the extra glass of champagne, Beth's sexy kisses, or most likely, Beth's sincere pledge not to cross the ultimate line with Ron, Pam found herself more at ease with the situation than before. \n\n\"Beth said something funny, but between the booze and that joint from earlier, I can't seem to remember, but everything seems to be getting funnier.\" Pam answered with a giggle to her voice. \n\nBefore the conversation went any further, Beth practically skipped back into the room, \"Ok, let's check our progress. Pam, bunch the towel he's lying on up some while I drizzle some water over his, um, over the sudsy areas.\"\n\nPam did as requested with no hesitation, understanding this was the most innocent task she'd undertaken since they'd bound Ron to the bed. As she scrunched the towel under and somewhat around Ron's scrotum, Beth allowed the tepid water to pour over him in a slow, steady stream, quickly washing away most of the frothy residue from their earlier efforts. \n\n\"Well, I guess the soap helped some, but there's still a lot of reddish skin remaining. Don't you agree Pam?\" \n\nPam, for her part was rather buzzed, and even though she fully intended to not let things move into a space where any sort of acknowledged sexual activity was taking place, she was increasingly more comfortable with helping her naughty friend push things a little further. She had to admit to herself that playing this game with Ron was incredibly exciting. So when Beth asked for her opinion, she replied, \"Not only his skin, but Ron, your, well, your hairs down there, well, they're all pink.\"\n\nAs Beth and Ron shifted their gaze to confirm Pam's statement, she continued, \"As a matter of fact, you sort of look like an upside down cotton candy stick, after most of the sticky stuff has been eaten.\" Even as she finished her statement, Beth began to giggle, which in Pam's stoned state of mind, demanded that she join in just as heartily. ",
        "After a few seconds, Beth made an effort to catch her breath, adding, \"Too bad it's not cotton candy down there, I think I'm getting the munchies and would love scarf down something tasty and sticky.\" \n\nAs much as Pam liked envisioning Beth's erotic imagery, she didn't want them to start alluding to sucking Ron's extremely suckable penis. So, to alter the conversation a little, she said \"Ah, it is rather pink. We really need to quit laughing at Ron's expense and come up with a plan. What do you suggest now Beth?\" Pam finished, equally anxious for, and apprehensive of, what her friend would say. \n\n\"Well there's really only one solution. We'll have to shave it all off.\" And with that, she slide off the bed, her robe now barely tied at all, gaping open and swaying haphazardly as she headed back to the bathroom with the ice bucket. \"I'll be right back.\"\n\nBy now, Pam had once again resumed her kneeling position on the bed next to her daughter's bound boyfriend. Her knees were practically pressed against Ron's hip. She noticed how his eyes followed Beth's every step, until she rounded the corner into the bathroom, then rather than bring his attention back to her face, the boy's vision settled into the mirror covered wall behind her. \n\nPam knew her ass was most certainly a spectacular sight, each toned and sculpted cheek partially framed by the red material of her panties, stretching over her hips before steadily disappearing beneath to wrap snugly across her increasingly damp womanhood. \n\nShe could hear Beth gathering supplies, and decided to take some relatively innocent liberties with their bound roommate, and tease him just a bit for her own needy enjoyment. \n\n\"Ron, don't be nervous about Beth shaving you,\" she said, even as she slowly leaned forward, placing her right hand within inches of his amazingly still relaxed scrotum. Pam continued to reach across him with her left arm, making an effort to retrieve the towels, wash cloths and shampoo still scattered on the bed.\n\nRon's dilemma was whether to admire Pam's elevated ass in the mirror, or take in her sexy profile as she stretched and positioned her body to reach what she wanted. In the end, it was the cut of the bra that won the battle for his attention. It appeared that almost \u2153 of her left breast was presenting a delectable side boob for him to admire as her tits swayed near the head of his continually pulsing cock. \n\nPam could feel his eyes devouring her even as she attempted to speak while concealing the arousal of her own body. \"I think she has done this before, and is very gentle. It will be the best way to remove all traces of your pink hairs.\" \n\nOne final stretch allowed Pam to reach the furthest towel, but also pulled her taut stomach directly against Ron's dick with enough force to actually press it toward his left hip. At that moment, Beth called out, \"I think I've got all we need, be right there.\"\n\nThis caused Pam to immediately retreat back to her original position, taking delight in the way her dangling breasts briefly drug across the boy's tormented penis. She could feel the steel like rigidity of his shaft, and felt a perverse exhilaration as it sprung from her dangling breast and wavered back and forth over his navel. \n\nBeth positioned the ice bucket and other items on the bed next to Ron, taking note of the apparently more relaxed demeanor of Pam. Ron, or more precisely, Ron's cock looked anything but relaxed. It looked almost painfully engorged and angry, even through the sporadic pink hue of the fingernail polish. \n\n\"So, Ron, don't worry. Just like we've been doing, Pam and I will treat this as no big deal, and get your stained hairs off in no time. Just lay back and we'll get right to it.\"\n\nRon flexed his bound arms, and said, \"I'll be here til your through.\" causing Pam and Beth to both giggle at Ron's little joke, the pot making everything funny. \n\nBeth picked up the shaving gel, and handed it to Pam, saying, \"Ok, so in the spirit of sharing these tasks, I'll shave, but you have to do the prep work.\"\n\nHaving already run her hands over his penis during their attempt to wash away the polish, Pam's instinct to object to Beth's obvious manipulation was easily cast aside, Really, spreading a little shaving cream around his crotch would be far less sexual than the way they'd soaped and caressed him earlier. \n\nShe took the can and squirted some into her hand, surprised to see trail of green gel across her palm, rather than a handful of white foam. \"Ah, Beth, what's this? I thought this was shaving cream?\"\n\n\"Sorry, but this Gillette gel is all I have. It works great on my legs.\" Beth replied, leaning back and running her hand down her thigh, over her knee and along her tanned, smooth calf, while extending her right leg up toward the head of the bed, her robe parting and providing Ron a clear view of her wispy blond hair and the noticeably moist lips of her pussy. \n\nFrom her angle, Pam couldn't see past the robe, but it was rather obvious that Beth's position provided Ron a clear shot. \"Ah, Beth, your robe...\"\n\n\"Oops, sorry Ron,\" she said, tugging the robe across her crotch while retracting her leg once again.\n\nEven though Ron had seen Beth's pussy, sucked on it, and fucked her twice, something about getting a glimpse of her body in this setting was incredibly exciting. He purposely twitched his cock, which was about the extent of his ability to return any sort of teasing gesture. \n\nPam's enebriated mind was focused on Ron's throbbing penis when Beth's voice brok her trance. \"You'll have to rub it in some Pam, that will change the gel to foam. It only takes a few seconds.\"\n\nWith nothing Beth could do at this point surprising her, Pam looked up from the swirl of green gel in her hand, her incredulousness evident on her face as she said only one word, \"Really?\". \n\nThe significant pot buzz limiting her from completely portraying the image she wanted, a bemused smirk crossed Beth's face with her reply, \"Well...yeah. I mean, it's all we have, and he needs to have plenty of cream doesn't he, you know, for a clean shave.\"\n\nRon looked on, struggling to keep up the naive charade of being clueless to the true intent of Beth's increasingly obvious manipulations, but ever fearful of Pam putting a stop to it all, did his best to play his part, \"It's no big deal. I mean this has to be done, so please just use what we have so we don't risk cuts or a razor rash, especially down there.\"\n\n\"See?' Beth said, almost gleefully, \"Ron's on board so let's get to work. As soon as you get the gel all lathered up I'll get him smooth as a baby's bottom.\" and with that Beth squirted more green gel down the length of his shaft and onto his balls.\n\nDeep down, Pam wanted nothing more than to run her hands once again, all over and around the bound teenager's oh so lovely penis. She thought about putting forth her obligatory objection, but rather quickly decided that given the level of their inebriation, no one would remember, or care whether she did or did not do the 'Pam' thing, and make a fuss. So after only a few seconds delay, she braced herself with her left hand on Ron's hip, and leaned slightly forward as her right began pushing the gel to and fro over his pubic hair below his belly button, down to the base of his thick shaft. \n\nAfter about 3 or 4 swipes, the green gel began to change color and consistency, and without thinking, Pam's left hand joined her right, until all of the stained, curly hairs were obscured beneath a white, frothy blanket of foam. Now all that remained to address were his balls, and shaft. \n\nBeth and Ron were watching intently, their interest in Pam's actions evident on their faces. As Pam's right hand dipped down to gently caress the gel into Ron's scrotum, she unconsciously swiped a bead of sweat from her brow with the back of her other cream coated hand. \n\nBeth could feel the warmth beginning to take hold of their room, making a mental note to bump the thermostat up a few more degrees after their shaving task was complete. \n\nWatching Amy's mother tenderly caressing and rolling his cum laden balls back and forth between her green and white coated hands was dreamlike to the bound teenager. Furthermore, Pam was unintentionally posed leaning over Ron's bound body so that her bubbly ass was a mere foot from his restrained right hand. \n\nPam herself was moving as if in a similar dream state, mesmerized by the weighty testicles filling most of her hands. Ron's scrotum was oversized, but being proportional to his long, thick penis, she'd not considered just how large his balls were until this very moment. She gazed unabashedly, her body growing increasingly warm, as she watched the green gel turn white and foamy on all but the still exposed shaft of Ron's perfect penis.\n\nAs Pam gently continued her task, Beth spoke, \"You okay there Ron? How about a drink of water?\"\n\nHaving so much attention paid to his balls, and none to his cock was frustrating enough, but the vision presented by both women, their scanty attire serving to highlight more than conceal their nearly impossibly perfect, toned bodies was causing Ron to break out in a sweat. \"Ah, yeah, some water, ah, would be, um, would be great.\"\n\nPam's focus on her hands, and Ron's balls was interrupted by the sound of his strained words with Beth. Hearing the torment she was inflicting upon Ron in each syllable only served to ratchet up her own excitement, and while Beth scooched from her perch between his legs to get a glass of water from the bathroom, Pam impulsively decided to take advantage of Beth's absence, if only for a few seconds. \n\nWhether consciously or not, Pam had obviously, at least for the moment, embraced Beth's recurring directive to embrace their opportunity to tease and torment Amy's big dicked boyfriend. She spoke softly, not wanting her friend to hear, \"Okay now Ron, I have to get the rest of this gel to lather up, so I'll just do this as quickly as I can. Please understand I wish there was another way, and, well, maybe you should close your eyes and not think about what I have to do.\" \n\nPam suppressed a giggle at the absurdity of her last comment, then with no further warning, grasped the thick shaft wavering before her, firmly at its base. The already white foam coating his balls squished between the fingers of her left hand as she gripped the base of his shaft and pressed firmly downward toward his slowly tightening scrotum. With her right, she enveloped Ron's granite-like thickness and began to rapidly stroke up and down. He gasped with surprise at the aggressive move. The green gel descending down his length quickly frothed up and coated his tortured cock white as Pam's hand pistoned as if she wanted him to cum before Beth returned. His purplish cock head throbbed, offering up a stark contrast to the shaving foam, and emitted a fresh stream of precum. Ron jerked his body involuntarily, anxious for the release he so desperately needed. \n\nPam managed to note the sound of Beth closing the bathroom door, and just as quickly as she'd begun, she pulled both hands free from the bound, visibly frustrated teenager. Wiping them on of the least stained towels, she said, \"There, that wasn't so bad now was it,\" Pam said, ignoring his obvious signs of frustration. She continued to stare at the engorged helmet of his penis, emerging from the newly frothed foam, throbbing noticeably and continuing to produce precum at a steady pace. \n\nReturning with the glass of cool tap water, Beth paused just around the corner from the bed, noted the room temperature had climbed to 74, and silently moved the setting up a little higher, to 77. With it still easily above 80 degrees outside, she knew the temperature in their cozy room would continue to climb.\n\nAs if on cue, Pam felt a weighty drop of perspiration cascade into the bra enhanced cleavage. She then looked to Ron, noting how much of his nude, bound body now glistened, and for the first time realized just how warm the room had become.\n\nBeth handed Pam the plastic glass of water, then looked to Ron's crotch, saying to her friend with only the slightest knowing lilt to her voice, \"Ok, you've obviously done your part, so I'll get right to the shaving while you give our boy a drink of water, he's looking a little overheated.\"\n\nBeth was determined to make quick work of this task. She could feel the sexual energy rising along with the heat of the room, and was anxious to move on to the rest of her plan. Still, it took several minutes to shave him clean, especially without seeking assistance from Pam. She knew it would have been the logical next step in the progression of the evening to have Pam maneuver Ron's cock as she scraped away the pink stained pubic hairs, but somehow forcing her to just watch helplessly as she worked to get every follicle seemed just the twisted sort of teasing she'd found to be so much fun on this trip. \n\nPam, as intended, knelt there at Ron's side observing Beth move his tormented penis to and fro as she carefully pressed the razor over every inch of his crotch, never relinquishing her grip even when she twisted to dip the razor in the ice bucket of warm water. She wanted to volunteer her assistance, but still a part of her conscience was successfully fighting for a voice and was emphatic that she's already pushed things further than she should with the vigorous stroking, and should only participate in this obviously orchestrated perversion after being adequately coerced by Beth. \n\nRon stared in disbelief as the sexy older woman. The sash on her robe was almost completely undone, and the silk material either hung loosely form her body, or due to the sheen of perspiration now coating all three roommates, molded itself to her damp curves. He glanced over to Pam, noting how her bronzed tan glistened from the increasing temperature, and how her vision was locked onto Beth's hand continuously positioning his cock. Her grip was just light enough to provide him no real sitmulation, but keep him fully aroused at the same time.\n\nAfter several more minutes, Beth declared her task complete. She sprinkled a little water over his cock and balls, then used the towel still partially under his ass to wipe him clean. \n\n\"Well, that wasn't so bad, now was it Ron?\" She asked, ready to restart her game. \n\n\"Uh, I guess not, did it work, did it get rid of the stain?\" \n\n\"It does look better, I mean without the pink pubes, don't you think Pam?\" \n\nPam's mind still slowed by the pot, had been focused with all her attention on the site of Ron's baby smooth penis and scrotum, the dampness of Beth's effort to clean him making his manhood look like a shiny new toy. Toy...well, it was sort of their plaything for the night, and with that, Pam let out an unintended giggle.\n\n\"What's so funny?\" Beth asked.\n\n\"Oh, nothing, I mean, well,...no, nothing really, I'd say it does look better, I mean like a shiny new penis for Ron.\" and then the giggles came again, and this time Beth couldn't help but to join in. Ron didn't get the joke, but nonetheless found himself guffawing right along with them.\n\n\"Okay, okay,\" Beth broke in, \"we still have to figure out a way to get these stains off before Amy sees them. Let me put away this shaving stuff while you two think on it some more.\" She pulled the now damp and stained towel from between Ron's legs, wrapped up the razor and Gel canister in it, grabbed the bucket and scooched off the bed. Her robe came completely untied and flashed the right half of her body, but Beth ignored the exposure and quickly headed to the bathroom.\n\nOn her way, Pam called after her, \"Beth, it is getting really warm, check the thermostat and try to kick on the air.\" \n\n\"Will do.\" was her reply, even as she looked to see that the room temp was now up to 79. Pam was right, it was hot and about to get hotter, in more ways than one, and Beth went ahead and moved the dial all the way to the right. She quickly moved on to the bathroom and set the shaving utensils on the counter, then grabbed a fingernail file from her overnight bag and scraped a portion of the recently applied polish from the index and middle fingers of her right hand. She scraped just a bit of polish from her index finger, actually she did nothing more than remove just enough to present a slightly lighter shade of red. From her middle finger, she filed a little more vigorously, until the color was beginning to give way to the natural nail beneath. She was confident that their buzzed state would keep either Pam or Ron from catching on to her intended slight of hand. \n\nNow prepared for her deception, Beth scampered back to see just how far her friend would be willing to push her boundaries. Back on the bed, Pam took note of how Beth's robe once again twisted and hung haphazardly from her body. Surprisingly, she found herself admiring the erotic presentation of her friend's sculpetd curves rather than her prior inclination to chastise her exhibitionism. Ron, as expected, was leering at the vision being presented as well. Pam was overcome by an unexpected twinge of jealousy, and impulsively spoke up to draw his attention away from Beth's teasing pose. \n\n\"Oh my Beth, did you turn the air down? This heat is becoming oppressive.\" As both sets of eyes turned to her, Pam nonchalantly ran her right hand across the back of her neck, to her chest, then over her right breast. She felt a surge of excitement from so blatantly performing this little stunt for Ron's benefit. \"Just look at how much I'm perspiring, I mean my whole body is damp.\" As she spoke these words she skimmed her left hand up her flat tummy, from just above the silky red panties until her fingers cupped her left breast and gathered even more sweat from the valley of her substantial cleavage. \n\nRon stared, pure lust evident on his young, sweaty face, and Pam did her best to suppress a sly grin of success at having just bested Beth at her own perverted game. \n\nBeth, on the other hand, was thrilled at seeing her friend performing so provocatively. Now was the time to push the limits of their plausible deniability and do what everyone there wanted to happen next. She knew it was essential to keep up the nearly laughable facade of their actions being in some way necessary, and in no way sexual. Still, Pam, and maybe even Ron, needed this shield of rationale to allow for what she hoped would happen next, no matter how obvious or even silly the reasoning. \n\n\"Uh, yeah, the air must be broken, I have it turned on to full cool. We'll certainly be complaining about this to management.\" With that, she left the discussion of the temperature behind, pleased at the results of her deception. A sheen of perspiration coated each of their bronzed bodies, presenting a sexy image and hopefully a physical heat to match their escalating arousal. \n\n\"So, any ideas on what to do next?\" Beth asked, while at the same time bringing her right hand up to her mouth and 'absentmindedly' nibbling on her finger. \n\n\"Not really\" Pam replied, the sweat she'd wiped from her body already being replenished as her stoned mind locked in on seemingly every rivulet of moisture crawling across each breast, down into her cleavage and then eventually, cascading down her sleek abs to the tiny reservoir of her belly button. To her surprise, she offered, \"I guess we could try the shampoo again?\", feeling slightly guilty for suggesting such a blatant excuse to once again manhandle Ron's cock. \n\n\"Ah, yeah, I guess...hey, wait, look at this.\" Beth said, pretending to notice the nail she'd just had in her mouth. Taking care to hide her middle finger, she showed both Ron and Pam the slight degradation evident in the polish. \"I was just sort of, you know, chewing on my nail, and it looks like some of the color is coming off. Maybe something about the saliva, I mean this polish is supposed to be all natural.\" She finished, hoping the obvious bullshit she'd just flung out there didn't come across as silly as it sounded to her. ",
        "No matter that she'd just been purposely teasing the bound teen, Pam could see what Beth was trying to do. \"Ah, yeah right, let me see.\" \n\nBeth held her finger out in front of Ron's face, so they could both see the 'progress' she'd accidentally made. \"See? It did come off a little, there along the right edge.\" \n\nRon, also seeing where this was headed, jumped in. \"Yeah, I think it is a little lighter.\" \n\n\"Uh huh...\" Pam answered, even drunk and stoned, she couldn't help but voice her skepticism. \"Maybe you scrapped it off with your teeth, but I doubt just your saliva did that.\"\n\nHearing Pam's doubt, Beth pulled her hand back in her lap, and continued with her plan. \"Okay, we'll test it out. So you'll know I am not using my teeth, I'll let you test out the theory. As the words left her mouth, Beth brought her hand up and to Pam's mouth, and before she could object, pressed her middle finger authoritatively past her lips. \n\nPam started to try and object, but Beth cut her off. \"Just for a couple of minutes, then we'll see.\" \n\nFeeling rather silly with Beth's finger plunged into her mouth, Pam decided to just get this over with and shrugged her shoulders indicating she'd go along with the test. \n\n\"Good, but you can't just sit there, you have to lick around the nail, you know, sort of suck on it a bit.\" \n\nThere is was, the S word. Pam knew without a doubt that this is where Beth had been pushing things all night. She wanted them to use their lips on Ron. God, she wanted it too. His penis was sitting there between them, throbbing, hairless, just begging to be sucked. Unconsciously, Pam began to use her tongue on her friend's finger, lashing at it within her mouth, just as she wanted to do to her own daughter's boyfriend. She kept stealing glances at Ron's manhood, his scrotum so pink and smooth looking, and still surprisingly saggy. The shaft smooth and thick, with no veins bulging on it like her ex husband's relatively smaller penis had presented. Then the bulbous mushroom head, a deeper red than the shaft, looked to be a mouthful for sure. \n\n\"Ok, that should be enough.\" Beth spoke up, pulling her saliva coated finger from Pam's mouth and breaking her stoned examination of Ron's tormented penis. She presented them the finger she'd scraped down even further in the bathroom, the decreased polish from the first finger she'd shown them unmistakable. As she'd hoped for, neither Ron nor Pam picked up on the switch from one digit to the other. \n\n\"Oh my...ah, it really does work,\" Pam responded to seeing Beth shiny finger. \"But, well, you can't be suggesting we, I mean, we can't, you know, ...\" \n\n\"If you have something else that will work, I am all ears, but this appears to be our last hope. Otherwise Amy gets back tomorrow, and sooner rather than later she is going to get a good look, and will have lots of questions about Ron's pink privates. He can explain away the shave job as wanting to surprise her I guess, but I don't think you want him to have to get into how her mother spilled fingernail polish on him while she had him cuffed to the bed...so let's decide how best to get on with it, don't you think?\"\n\nPam, no matter how far she'd come this evening in her willingness to push boundaries, was not prepared to blow her daughters boyfriend. \"We can't, I mean really Beth, we just can't, you know, give Ron a 'blowjob'\". \n\nRon stifled a huge grin a Pam spoke the word 'blowjob' in a whispered tone, as if he would not hear her, laying there bound between to two nearly naked, sweat covered, women, actually discussing the merits of sucking his dick. \n\n\"No, I mean I agree absolutely. Our attempts to get Ron clean will not be a 'blowjob'\". Beth responded, likewise whispering the operative word. \"We will have a plan and rules and boundaries\"\n\n\"Um, rules? Like what.\" Pam queried. \n\n\"Well, let's see.\" Beth spoke, pretending to consider what she was about to say for the first time. \"First of all, we are both in this together. If I have to do something, you have to also, and vice versa. Next, Ron, you must understand that once again, this is not a sexual act. We understand that for a young man such as yourself, this entire evening could be rather, ah, well, exciting, and if we decide to take the next necessary step to remedy this whole nail polish fiasco, then you'll have to handle it as intended, do you understand?\"\n\nRon worked to arrange his face and not appear as if he'd just won the lottery. Beth's frequent advice to just play along and be naive echoed in his brain as he said, \"Ah, I guess, I mean we have to do this to protect Amy, right? So I'll do whatever you tell me.\"\n\n\"Good, so here is the plan,\" Beth continued, speaking assumptively, \"Pam and I will have to lick around on you to hopefully clean off the stains. We will do this as if it is simply a task to be completed. Believe me, we do not want to be in this position of having to place our lips and tongues on Amy's boyfriend. But we will do it because we have to. But we do realize that your body may respond to the physical interaction through no fault of your own, so if you feel a heightened respnse, then you have to tell us. As long as we can finish this without you losing control, then it will have been accomplished with no hint of sexual impropriety. Obviously, if you, ahem, well if you don't tell us of any over excitement, and we push you past the point of no return, then you will have cheated on Amy, inadvertently with her mother and me, and that is not the sort of guilt any of us want to carry around.\" \n\nPam sat there, her mouth agape at what Beth had just said. She had just laid out a plan for them to jointly use their mouths on Ron's penis and scrotum, in a \"non sexual\" manner, and essentially told Ron he had to endure it without orgasming. She was ashamed at how utterly excited and wet her pussy had become. Her body was on fire and coated in perspiration, and she was about to agree to this demented plan. God help her. \n\n\"Ok then, Pam, we should get started, this could take a while.\" Beth directed, her own body ready to burst from the heat, sexual arousal and frustration. She truly wasn't sure how the poor kid would make it through the night.\n\n******\n\nAuthor's note: I apologize for stopping here...this chapter, along with the beach scene, were the two scenes that drove me to begin this story all those years ago. As a result, this one ended up being quite lengthy. I have much of the rest of the night in the hotel written, and an exciting interaction between Pam and Ron planned for the next morning...but it is just too much to put in one chapter. Plus, I wanted to get something posted to move things along.\n\nThanks for reading my fantasies, \n\nJack"
    ],
    "authorname": "JackKing",
    "tags": [
        "edge",
        "exhibition",
        "milf",
        "tease",
        "tempting"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-tempting-vacation-ch-19"
}