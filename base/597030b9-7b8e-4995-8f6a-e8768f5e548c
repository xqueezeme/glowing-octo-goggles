{
    "title": "Bi Panty Lover Ch. 02",
    "pages": [
        "So I continued to baby sit for the Mitchell's throughout my senior year. As soon as they would leave I would sneak into their room looking for used panties. I loved wearing them all night under my clothing, especially a little mini or pair of tight yoga pants.\n\nI also found her box of sex toys and would use them to cream in her panties. One time I walked into her room and noticed a nice big fat dildo on her night stand. I'm pretty sure she did it on purpose, I mean who in the hell would leave a dildo on your bedside table with an 18 year old babysitter in your house. \n\nI also continued looking at their sexy pics on the computer. It really turned me in looking at them while wearing her thongs. I really loved pics of her topless at their pool and a few at a beach.\n\nI started showing up early so we could talk, she seemed to really be flirting with me. She always complimented me and talked about how cute I was. I loved when she would talk about my tight little body. She told me I reminded her of a good friend from high school, she said \"She had a tight little body, great ass and beautiful little boobies just like you.\"\n\nI also noticed that many times right before leaving she would disappear into her room while Mr. M would talk with me. Those were the times I would find her thongs lying on the floor still wet! I would put them on and get so turned on knowing that she just took the off. I'd pull them tight into my pussy and proceed to cum in them. Then I'd leave them on all night and keep my little pussy dripping wet! I started playing a game trying to keep them on as long as possible. One time I literally had to yank them down and sprint into her room to put them back right before they walked in the door. \n\nA couple days later we were texting and she said her hubby was heading out on golf trip all weekend. She asked me to spend the day with her and her daughter. She said she would be running around all day and I could watch her daughter. Then she'd pick up dinner for us and we could watch some movies. \n\nSo after dinner we put her daughter to bed, then she said she wants to show me something on the computer. She said \"you use this for school work sometimes don't you?\"\n\n\"Yea sometimes if I don't bring my laptop.\" I was starting to feel a little uneasy where this was going.\n\n\"You have a pc don't you? Do you find it different using our Mac?\"\n\n\"Yep I have a Dell but it's pretty much the same.\" I said\n\nShe laughed a little then said \"One cool thing I love about a Mac is that I can click on this recently opened button.\". Oh my god my heart dropped! \n\nShe hit the button and a bunch of file names popped up, then she said \"Imagine my surprised when the day after you were here I was looking for a pic and this opened up!\"\n\nThen she opened up a pic of her topless at her pool! I was totally busted.\n\n\"It sure seems that you like looking at my topless pool pics?\"\n\n\"I'm so sorry I just kinda stumbled upon them and just looked at a few.\"\n\nShe looked right into my eyes and said \"Don't fucking lie to me, I know you looked at all of them! And I know that you have looked at them the last three times you were here.\"\n\nI started crying like a little baby, I felt so embarrassed and dirty. God I can't imagine it could get worse but then she did something that totally floored me!\n\nShe stood up and went to her panty draw and pulled out a pink thong that I instantly recognized as the ones I wore last weekend!\n\n\"Then last Saturday after you left I found these on my bathroom floor, I picked them up and they were soaked. I thought damn it's been 6 hours since I took them off they shouldn't be this wet. Then I realized I took them off at my bed after I masturbated right before we left! So I guess you fucked up didn't you Jul?\"\n\nI ducked my head in shame as I started uncontrollably crying.\n\n\"Maybe I need to tell my hubby about this or maybe your mom!\"\n\nI begged her not to do that \"Please don't my mom is a prude and will be so upset. I could never look at Mr.. M again.\"\n\nShe started laughing at me then floored me when she said \"I'm only fucking with you Jul! I think it's hot as hell that you like my thongs. And turns me on knowing you like looking at my boobs and it makes you wet.\"\n\nAt that point I didn't know what to believe.\n\n\"You had to realize I've been flirting with you, right? God if you only realized how turned on I was knowing you found my wet thongs?\"\n\nI was so stunned I couldn't say a word.\n\n\"Remember when I said you remind me of my sexy little friend Beth from high school? Well what I didn't tell you is that we used to mess around and that she was the first person to touch and taste my pussy!\"\n\nMy mouth dropped open in shock \"So you were a lesbian?\" I asked through my tears.\n\nShe just chuckled at me \"No but I did realize I was bi. We started out practicing kissing then touching each others boobs and finally fingering each other. And one my 19th birthday she went down on me!\"\n\nShe continued \"So now we know secrets about each other. I've missed the intimacy with another girl, just like Beth and I had when we were younger and I want that again.\"\n\n\"So here's what we are going to do, I'm going to ask you some questions and I want you to answer then honestly. This is what Beth and I used to do, it was so much fun.\". I just stared in disbelief as the tears finally stopped.\n\n\"So tell me why you always go to the pics of me topless at the pool or beach? I'm sure you found the really dirty ones of us, don't they turn you on?\n\nI was still nervous but I just had this feeling I could trust her, I really think she was lonely. So I decided to play along. \"Yes I have seen the naughty ones and they are super sexy, but seeing you outside with no top really excites me.\"\n\nShe asked \"I'm glad you feel that way, it is so empowering. Jul have you ever been outside with your little boobies free for people to see?\"\n\n\"Just once, last summer I was at a sleepover with four girls, and we started playing truth or dare. It was late and we were outside by their pool, I was dared to sit topless for 10 minutes. Oh my god I was so nervous because she has a brother two years younger than us and I knew he was home, plus her dad had popped out to check on us five minutes before.\"\n\n\"I assume you did it? Did it make your pussy wet?\"\n\nHoly shit she was getting straight to the point! I was super embarrassed but felt the need to tell the truth.\n\n\"Yes it did and my nipples got so hard from the exposure. At first I was just so nervous and embarrassed because I had the smallest boobs of anyone of the girls, but then I realized it was turning me on. I noticed a couple of girls couldn't stop staring at my boobs. I liked the attention and could feel my bikini bottom getting wet?\"\n\n\"So did you keep playing? Anything else happen that turned you on?\"\n\nI ducked my head and said \"Yea we played for awhile. By my next turn I still had five minutes left to stay topless. I chose another dare, I was told to play with my nipples and get them really hard. Fuck, it was so embarrassing but I did it as all my friends just stared at me. Then they started whispering to each other and laughing. So when the next girl chose dare they told her to suck on my nipple for one minute! Then one by one the next three all got dared to suck them.\"\n\nMrs. M was laughing her ass off and said \"I bet you loved it, did that really turn you on?\"\n\n\"Oh my god Mrs. M it totally did!\"\n\nShe said \"Please call me Anna, and I bet it did. I bet you're getting wet right now just talking about it, correct? I can see how hard your nipples are, I'm dying to see them so Jul will you show me your little boobies?\"\n\n\"What? Are you serious?\"\n\nShe just stared at me and then finally said \"Hell yes I'm serious! It's only fair, you been playing with your pussy for months while looking at my tits out by the pool! Plus you remind me so much of Beth and I loved playing with her tiny tits.\"\n\nBefore I could even say a word she reached over and grabbed the bottom of my t-shirt. I just voluntarily raised my arms as she pulled it over my head. As soon as she tossed it to the floor she reached right between my boobs for the clasp of my little bra. She unhooked it and it opened right up exposing my nipples. Then she reached over and tweaked each nipple. \n\n\"Ok so now tell me what else happened.\" \n\nI said \"Anna it's so embarrassing! I don't think I can tell you.\"\n\nShe looked at me then reached over and pulled my bra off my arms leaving me topless. Then she brushed my face and said \"Oh Jul you are so cute, I know deep down you want to tell me all your secrets. This so reminds me of things my friends and I used to do, now I said tell me what happened.\"\n\nI started softly crying again but knew she was right I did want to tell her. \"My next turn came up with Jasmin giving the dare, I still just had only my bikini bottom on. This girl named Heather was beside me and she was just in her bra and panties. Jasmin said I need to trade bottoms with Heather! I looked at her in disbelief but she said do it now. So we both stood up and pulled them down, handed them to each other and both pulled them up.\"\n\n\"Fuck Jul that is really hot, keep going\"\n\n\"I couldn't believe I just did that and didn't know why having Heathers panties on made me so excited. I could feel that they were warm and a little wet and then I started to panic. I knew that I had made my bottom really wet and looking at Heather, I just knew she felt the wetness. It was her turn next and she said truth, which initially was a relief because I thought they would have dared her to do something to me. Then I heard the question from Laura, \"how do they feel?\n\nHeather looked at me and said \"They are really warm and super wet, I think this bitch is getting off on this!\" And then they all just burst out laughing at me.\n\nWhile I talked I had my head ducked staring at my feet because I was to embarrassed to look at her. But then I heard her doing something so I raised my head and looked at her just as she dropped her shorts! Then she stepped out of them and grabbed the side of her thong and pulled it down, and said \"That sounds so fucking hot let's do it right now!\"\n\nI thought holy fuck I can't believe this is happening as I stared at her bald pussy. I knew my panties were soaked but the thought of wearing her thong, right in front of me, made me drip even more! I just stood up and pulled my shorts and panties right off. She reached down and grabbed them from my shorts then handed me her thong. \n\nI stood before her completely naked and watched as she slid my panties up right between her pussy lips. \n\n\"Holy fuck girl these are soaked, you little slut!\" Then she burst out laughing.\n\nI finally started to calm down so I stepped into her thong and pulled it up between my legs. I first felt it slide between my butt cheeks and the nestled against my pussy. I got so excited as I felt that familiar feeling of her wetness between my pussy lips.\n\nShe said \"I've never done this before but now I realize why you wear my thongs when you are here alone, it's fucking hot as hell. Do you masturbate in my thongs Jul?\"\n\nTotally embarrassed I again ducked my head and nodded yes.\n\nShe grabbed my chin and said \"Jul look at me and tell me what you do.\"\n\n\"Anna I'm so sorry but yes it turns me on wearing them and I touch myself looking at your pics of you at the pool.\"\n\n\"Good girl Jul, do you want to see my tits now?\"\n\n\"Oh my god yes please!\"\n\nShe gave me this huge smile and pulled off her tank top then slid out of her bra and showed me her perfect boobs!\n\nWhile I stared she reached down and grabbed the front of the thong and pulled them tight between my pussy, I felt them grind against my clit and just gasp.\n\n\"Jul I haven't watched a girl play with her pussy since college, will you please let me watch you touch your pussy?\"\n\nI just looked at her and started to take the thong off so I could masturbate for her.\n\nShe grabbed my hands forcing me to stop. \"Do you usually keep them on when you cum?\"\n\nI nodded yes. \"That's what I thought, now leave them on and cum for me, just like you do when I'm not here!\"\n\nI just stared at her beautiful tits and slid my hand inside the thong and rubbed my clit. She reached up to cup my boobs then started to pull on my nipples, I was gasping from the pain and pleasure.\n\n\"You like that don't you Jul? You like my hands on those sexy little titties?\"\n\nI screamed \"Yessss please play with my littles tits... oh god I'm gonna cum!\"\n\nOh my god a felt this release of liquid gush from my pussy, I literally thought I peed myself! I looked down as liquid was running down my legs.\n\n\"Holy shit did you just squirt in my thong?\"\n\nI had no idea what she was talking about and said \"I don't know what that means.\"\n\n\"What it means little girl is that you just had a big girl orgasm!\"\n\nThen she walked to the couch took off my panties she was wearing and laid down. \"Be a good girl and grab my vibrator please.\"\n\nI just walked over to her nightstand, opened it up and grabbed it.\n\nShe looked at me and said \"You little slut how did you know it was in there?\"\n\nI just looked at her and couldn't help but give her a big smile, she started laughing as she watched me walk to her.\n\nI went to hand it to her but she said \"No... you need to warm it up for me.\"\n\nSo I turned it on and put it on my clit. After about a minute I was approaching another orgasm when she said \"Put it in your little wet pussy and cum on it!\"\n\nSo I reached down, slid her thong off, then spread my lips and let it slip right into my pussy, I came with in seconds.\n\nShe said \"Oh you are my sexy slut now give it to me.\"\n\nI still had the thong in my hand when I gave her the vib, to my surprise she grabbed both. Then she put the thong to her mouth and slid the vibrator over her clit. I just stood and watched as this sexy mom, one that I babysit for, masturbated for my eyes. I thought holy shit this is Anna fucking Mitchell showing me her tits and pussy!\n\nShe gave herself two screaming orgasms before finally turning the vibrator off. She laid there for awhile recovering before she sat up and reached for me. She gave me a big hug and whispered \"That was fucking awesome! I'm calling your mom and telling her I have plans tonight and you need to stay over. Then tomorrow I'll take my daughter to my mother in laws so we can hang by the pool all day. We can work on our all over tan!\"\n\nHoly fuck I thought I was dreaming.\n\nThe rest of the night was pretty uneventful. We snuggled on the couch watching movies. The cool thing was we each had one of her thongs on and nothing else. I would look at her perfect C cup boobs and thought god I wish mine were that big.\n\nWe finally went to bed around midnight, she laid beside me and started kissing me for the first time. I was getting totally turned on when all of a sudden we heard her daughter crying through the baby monitor. She jumped up grabbed two of her tank tops and said \"Sorry but she's gonna want to sleep in here so you better put this on.\" When they returned the three of us quickly fell asleep.\n\nThe next morning I woke up all alone in her bed. I walked into the kitchen and saw her making breakfast. My god she looked so beautiful with her little tank top that ended halfway down her ass. You could just see a hint of her thong peeking out from under the tank. Then she turned around and gave me a big smile, my eyes drifted down to her boobs and noticed the hard nipples poking through the sheer fabric, she was stunning. She told me to sit and enjoy breakfast. \n\nAfter eating she said to just relax as she ran her daughter over to her in laws. \n\nWhile she was gone I took a shower and then went to get dressed. I knew I wanted more fun so I decided to be a little naughty. I went to her dresser and pulled out the pink thong that she knew I masturbated in last weekend.\n\nI heard her pull into the garage and walked to the kitchen. When she walked in I was standing there in just the thong with my rock hard nipples pointing at her.\n\n\"Holy fuck you are so fucking sexy! Let me go change and we can go to the pool.\"\n\nAs she left I started panicking a little with the realization that she wanted us to be topless outside during the day! As much as I wanted to I just didn't know if I could do it, I kept thinking what if the neighbors saw or someone stopped by the house. So I went onto her bedroom and found my bra. I figured with the thong and bra it would look like a sexy bikini if anyone saw.\n\nAnna walked out of her bathroom totally naked and said \"What the hell is that for?\" as she pointed to my bra.\n\n\"Anna I'm just not sure I can be outside during the day topless. What if I get a sunburn on my boobs? What would I tell my mom?\"\n\nAfter I said it she showed me the bottle of sunscreen and said \"Oh well I guess I'd just have to make sure your little boobies were covered with sunscreen.\" Then she laughed at me once again.\n\nShe walked over to her her dresser and pulled out a white lycra thong and slid it on. \"Listen you know that I do this all the time, our yard is almost totally private. The only house that maybe could see is Mr. Schmitz and he's a 83 year old widower, if he can see us and get excited then good for him, he deserves it!\" \n\nThen she walked over to me, and for the second time in 12 hours just reached between by boobs and easily unhooked my bra and then pulled it off my body. \"That's better now let's go get some sun!\"\n\nMy god I really just instantly became so submissive to her. I really think she could have had me do anything at that point.\n\nOnce outside I just stood and looked around the yard. I was literally shaking from a mixture of nerves and excitement. I could feel my nipples tingle and my pussy start to get very wet. Anna walked up and ask me to help put the sunscreen on her. I started on her back and rubbed it in as best I could. Then she said \"Don't forget my ass dummy I don't want burned cheeks.\" So I lathered her sexy ass with the sunscreen.\n\nThen she turned around and just stared at me with this sexy smile before saying \"You might as well do my front.\"\n\nUp to this point it was her that did all the touching, I hadn't touched her boobs yet (or to be honest any girls boobs!). I was so nervous I was shaking as I squirted the lotion on her chest. As I rubbed it into her tits her nipples got super hard and I heard her start to moan in pleasure. I was totally getting into groping her boobs when just like that she stepped away and said \"Ok your turn.\"\n\nShe proceeded to cover almost every inch of my body with sunscreen, paying lots of attention to my butt cheeks and my little boobs.\n\nThen we sat down with our feet in the cool pool water and just talked. We talked about last night and about sexual experiences I have had. Then I started to ask her about her experimenting in high school and college. She told me about some of her more wild times with guys and girls.\n\nShe told me how she learned she was also an exhibitionist and liked to show off. She said she liked to shock people with her nudity and loved to pretend it was an \"accident.\" She also told me about the first time being nude at Gunnerson Beach in Jersey. \n\nI guess I had a look of shock on my face because she asked if that would turn me on. I just told her \"I'm not sure I'm ready for that yet.\"\n\nShe chuckled a little and stood up and slid her thong off! Then she sat back down and we kept talking. After awhile we were feeling the heat, both from the air temperature and also the heat from our pussies. So we jumped in to enjoy the cool water.\n\nI was just hanging onto the side and looking into the back yard when she swam up behind me and reached around to hug me. \"Jul I'm so glad you are open to all of this, I was nervous that you would be to scared or embarrassed to play along.\"\n\n\"Anna I'm loving this I'm just nervous about things and don't know what may or may not be to much for me to handle.\"",
        "\"Fair enough... so what about this, is this ok?\" As she started to rub my boobs and kiss behind my ear. All I could do was moan \"Uh huh.\"\n\nThen I felt her hand slide down to may butt and start groping my checks, \"And what about this?\"\n\n\"Oh that feels so good, I like that.\"\n\nShe chuckled in my ear then slid her hands around front and started to rub my thong. All I could say was \"Oh god yesssss.\"\n\nThen she whispered into my ear \"Jul I'm going to take that thong off so I can have full access to your pretty little pussy, is that ok?\"\n\n\"yessss Anna that's ok.\" Then she slid under the water hooked the waistband and pulled them down my legs. As she came out of the water she grabbed my hips and and spun me around and put her lips to mine for a deep passionate kiss!\n\nThen her right hand started sliding down my chest, she tweaked my left nipple then let it roam down my stomach. As I felt her hand sliding down further I instinctively opened my legs giving her access to my little pussy! When her fingers hit my clit I just gasp with pleasure.\n\nShe played with my clit for a little bit before sliding a finger into my waiting pussy. Much to my dismay she abruptly pulled her finger out and moved both hands to my hips. Then she gave me one last kiss and said \"I have got to taste that sweet little pussy!\"\n\nThen she lifted me out of the pool, sat me on the side and placed my ankles over her shoulders. At that point she was the first person to go down on me. I couldn't believe how good her tongue felt licking my clit. I was on the verge of another unbelievable orgasm when she pushed down on my clit with her tongue and slid two fingers into my pussy.\n\nThat put me over the edge and I exploded all over her face! She gave me a couple seconds to recover then looked at me said \"I can't get enough of this yummy pussy!\"\n\nShe went right back to eating me out making me cum several times. She finally hoped out of the pool and sat beside me, she looked down at me and started to kiss me. Her lips tasted different and then I realized it was my pussy I was tasting, and that totally turned me on!\n\nShe stood up and grabbed my hand pulling me to her. She led us to the lounger and laid down. \"I'm not sure if you are ready to taste my pussy yet but god damn do I need to cum!\"\n\nShe pulled me down and put my face between her legs. \"I'm going to rub one out but I want your face right there to watch my pussy.\" \n\nShe started to rub her clit as I watched, she started telling me when she was about to cum with each one getting more intense. She finally took her left hand and inserted two fingers into her pussy. Now she really started to buck and grind so close to my face. \"Oh my god this is it I'm gonna cum so fucking hard... AHHHHHH YESSSSSS.\"\n\nWith that she started to squirt all over the place, particularly all over me. I took my right hand and started to rub her juices into my face and mouth. She tasted so fucking sweet!\n\nWhen she finally recovered she kissed me passionately then said \"I think it's time for lunch.\"\n\nI had to be home by 4:00 to get ready for a dinner with family. So after lunch I begrudgingly dressed and said my good byes. I will say I stayed horny and wet all night and couldn't wait to get back home to play with my pussy.\n\nSo this was the first of many times playing with Anna Mitchell. It lasted all summer until I left for school. But as you will see in the next chapter she pushed me to experiencing many \"Firsts\" for me!\n\nJul"
    ],
    "authorname": "PantyGirlJul",
    "tags": [
        "bi",
        "panties",
        "exhibitionism",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/bi-panty-lover-ch-02"
}