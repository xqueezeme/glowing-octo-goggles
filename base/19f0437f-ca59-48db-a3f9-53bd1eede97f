{
    "title": "Mutual Benefits Ch. 12",
    "pages": [
        "I was never going to have a threesome with Morgan and Taylor. That much had become clear. In fact, the more the three of us hung out and sexuality was inevitably introduced, the more sure I was that I wanted to distance myself from the entire topic. And yet... something inside of me couldn't stop her. It couldn't stop her when we were alone, and it couldn't stop me when we were all hanging out together. That had to end.\n\nIt was clear it was only going to end on Taylor's terms, which definitely complicated the process. Taylor, it seemed, felt one way about me one day, and another the next. Morgan brought stability. Taylor brought spontaneity. I brought...\n\n...What the hell did I bring? To either of their lives. It was all well and good that Morgan gave me the whole 'I like you because of who you are' speech, but it didn't really convince me. I wasn't anything. I felt... blank. Boring, like a piece of paper with no writing on it or something. I definitely wanted to be someone for Morgan, she was beginning to inspire that in me, but it still felt like only a beginning.\n\nIt was around six in the morning when I woke up. The other two were probably passed out. I left to sleep on the couch around the time their alcohol started to wear off and Morgan urged me to go to bed and skip what Taylor got like when she came down from peak drunkenness, whatever that meant.\n\nI couldn't sleep, so I did what I do best when I can't sleep, and put some pants on and paced back and forth, eventually deciding I needed water in my system.\n\nI couldn't help but smirk when I saw their fridge. They had one of those rich suburban family fridges with the water tap in it. I quickly found a glass and helped myself to their water, opting for the 'cool' tap, since the fridge was kind enough to ask. Unfortunately, I nearly choked on it when someone turned the corner.\n\n\"Good morning,\" Morgan's brother told me in a quiet voice as he walked into the kitchen. Like me, he wasn't wearing a shirt, though he was clearly more secure about that fact than I was.\n\n\"Hello,\" I said, I think the first word I said to the guy. He had blond hair, dirtier than Morgan's, and some matching facial hair to go with it. Like his sister, he was fairly good-looking, and naturally intimidating. He sported a pair of trendy glasses, and clearly shared Morgan's habit of going to the gym.\n\nI didn't know why, but I was incredibly nervous.\n\n\"So,\" he began, getting some orange juice out of the fridge. \"You're Quinn.\"\n\n\"Yes,\" I replied uneasily, wanting to cut the tension with 'you're observant' or something but not knowing how that would go over.\n\n\"My sister's boyfriend.\"\n\n\"Is that okay?\" I asked. I felt my cheeks get hot after I asked.\n\nHe gave me a weird look that slowly broke into a smile. \"Yeah. Yeah, it's okay. Relax. It's just the only thing I know about you so far.\"\n\n\"Oh. Well, I go to school with Morgan. I know her because I tutored Taylor in math.\"\n\n\"You know her from Taylor?\" he asked, clearly with some kind of purpose.\n\nI felt my cheeks get hot again. \"Um, yes...\" I mumbled.\n\n\"Hmm, interesting,\" he remarked to himself. \"Well, Quinn, my name is Doug. It's nice to finally get to meet you.\" He nodded diplomatically.\n\nI nodded back. \"Nice to meet you, Doug,\" I told him. \"Is this like a thing you do often? Like, do I need to know the rules to date your sister or something?\"\n\nI didn't know if what I just asked was bold or anything, but Doug smirked like I just told him a joke. \"Maybe if you were someone else. I don't get bad vibrations from you. You kind of look... is it okay to say, 'shy?'\" Seeing me shrug and nod, he continued. \"Then yeah, shy.\"\n\n\"I'm not very popular,\" I pointed out. Doug just stared at me. \"Morgan is.\"\n\n\"Ah, I see,\" he commented lightly. He took an apple out of a bowl and took a bite of it. \"You're a lucky guy then, if I remember Hazelwood's cliques as well as I do,\" he said with a mouth full of apple.\n\n\"More like I don't get why she picked me,\" I said dejectedly.\n\n\"Ooh, pity party. Aren't you a cheery one,\" he jeered. \"I won't be able to tell you what Morgan's type is if that's something you're looking for.\"\n\n\"Why not?\"\n\n\"Because Morgan barely ever tells mom and dad that she has a 'boyfriend.' She goes on dates, but she'll only ever go on three dates with a guy, maximum, dump him, and feel weird ever calling him a boyfriend while doing it. So, clearly, whatever her type is, you mean something to her.\"\n\n\"Okay,\" I digested slowly. \"That does make me feel a little better. But she did tell Taylor about guys doing stuff with her before. You know, not date things, but-\"\n\nDoug held up a hand. \"Can I assume 'not popular' can also mean 'socially awkward?' Is that a fair thing to assume here?\"\n\n\"Um, yes, it can.\"\n\n\"Great, thought so. Gonna give you a freebie lesson here: Don't tell a girl's brother she's done anything sexual, especially out of a relationship. It's weird.\"\n\n\"Oh, sorry,\" I backed down immediately.\n\nDoug raised his eyebrows at me. \"Huh. Thought you were going to push back a little on that. You're a hard guy to read.\"\n\n\"Did we ever know each other in high school?\" I asked. \"Or even go at the same time or something?\"\n\n\"Nope, first time I'm seeing you. I'm twenty-five.\"\n\n\"Oh.\" I let silence fill the air. \"I'm sorry about saying that thing I said earlier.\"\n\n\"I trust you're more romantic and sensitive with her,\" he told me dryly with a smile.\n\n\"I want to be. She thinks I am... sometimes.\"\n\nHe shrugged. \"Then you're good.\"\n\n\"I just feel like-\" I stopped mid-sentence when Taylor stumbled into the kitchen. She practically spilled into it. Her hair was messed up, her eyes were, at most, a quarter open, and she had this look of perpetual pain on her face.\n\n\"Good morning, Taylor,\" Doug practically sang with a smug face.\n\n\"Go fuck yourself,\" Taylor answered. \"Quinn, get me some water.\"\n\nI scrambled to get another glass. \"Sounds like you went harder than cider,\" Doug observed.\n\n\"Triple eight,\" Taylor answered. \"Quinn!\"\n\n\"Yeah, that doesn't mean anything to me,\" Doug continued as I filled the glass and handed it to her.\n\nShe drank the whole thing before answering. \"Vodka,\" she spat out, handing me the glass. \"Fill it up again.\"\n\n\"Vodka? And you're looking like this? Hope you didn't throw up,\" Doug said flatly.\n\nTaylor shook her head, taking the glass I filled again. \"I didn't. Morgan did.\"\n\n\"Wait, Morgan threw up?!\" I asked with urgency.\n\n\"Keep it down!!\" Taylor said quietly yet with urgency.\n\n\"Yeah, this -- I'll handle this, Taylor -- our parents don't know about this kind of thing,\" Doug said to me in a patient voice.\n\n\"But, she's my -- I need to go see her, is she awake?\" I replied, still worried for her.\n\nTaylor's arm stopped me. \"Quinn, you're sweet, but Morgan has specifically asked not to see you this morning.\"\n\n\"She... what?\" I felt my heart sink. What the heck did that mean?\n\n\"You're going to give the guy a heart attack, Taylor, he's clueless! Lead more gently!\" Doug barked. \"Yo, Quinn.\" He whistled at me as one does to a dog to get my attention. I slowly turned to him. \"She's embarrassed and thinks she looks terrible. She doesn't want her boyfriend to see her in such a state. It's a code of honor thing. She doesn't want you to see her at her worst, that's all. It's not about you. It's an insecurity thing.\"\n\nI stared back and forth between the two of them, confused, no noise except for a muffled sound of throwing up occurring from down the hall. Was this a code of honor thing? Maybe I was socially oblivious, but the code of honor kind of sucked. Wordlessly, I got a third glass out of the cupboard, filled it with water, and marched up the stairs and down the hallway, this time ignoring Taylor's arm before going.\n\nFinding the washroom down the hallway was easy; it was clear Morgan started throwing up before she made it to the toilet. The smell was... I ignored the smell. Gingerly, I took the last few steps into the washroom, hearing the sound of Morgan sniffling and... possibly crying softly. It was hard to tell. She was hunched over the toilet, occasionally dry-heaving, looking a bit like a mess even from the back.\n\nI didn't have much experience with alcohol. In fact, I didn't have any. But I knew at a basic level what alcohol did, and tried to think hard about what she'd be going through, and based what I told her on that.\n\n\"It's me. No need to turn around if you feel bad or anything. I brought you some water, it'll be on the sink.\" I let the glass settle on the porcelain sink with a 'clink' to demonstrate. \"I just didn't want you to be alone or feel too bad to see me. This could, uh, happen to anyone, and I don't want you to feel bad.\"\n\nI let my words sink in. Morgan didn't turn around, and it was really hard to figure out if I made the right call or the wrong one. Eventually, she got some toilet paper and wiped her mouth with it, throwing it in the toilet and flushing whatever was in there. Slowly, she turned around and faced me.\n\nShe looked a little worse than usual, sure, but... she was my girlfriend. And despite her pained expression and puffy 'I've just been crying' eyes, she was smiling at me. \"Thank you for checking up on me, Quinn,\" she told me softly. \"Can you give me a second to just freshen up?\"\n\nI had an idea. \"Yeah,\" I told her, looking underneath the kitchen sink. Sure enough, sme all-purpose cleaner and paper towels greeted my eyes. I grabbed both and headed out of the washroom, determined, even being bold enough to shut the door behind me. While Morgan was in the washroom, I cleaned up any mess I found on the ground. By the time I was done, Morgan had just gotten out of the washroom, smelling overwhelmingly of mint.\n\n\"Oh my God, Quinn,\" she commented, only then realizing what I did. \"Why did you do that?\"\n\n\"Because I figure this situation was terrible for you and I wanted to help my girlfriend?\" I felt my heart rise in my chest. Something about calling her my girlfriend made me happy. The way she smiled when I said it made me more convinced.\n\n\"You are the fucking sweetest person,\" she told me, grabbing my hand and holding it in hers.\n\n\"Oh, be careful, I still haven't washed my hands since using the cleane-\"\n\n\"I'll be okay, I'll take the risk,\" she told me sarcastically. \"This was, uh, really embarrassing for me. I'm sorry you had to see me like this.\"\n\nI stared at her, somewhat confused but also somewhat understanding. \"Morgan, this was just you in a tricky situation. I don't get why I would want to not see you right now. If I hear you're not doing well, that should make me want to help, not stand by.\"\n\n\"I don't want you ever questioning why I like you again,\" she laughed. \"Can I kiss you? I brushed my teeth. Really thoroughly. I'd understand if you didn't want that.\"\n\n\"I do want that,\" I told her, and as a gesture, I was the one who brought her in close. I was the one that brought my lips to hers.\n\nI was happy to find that she did a good job; I tasted nothing but mint. We started off tame, but ended up passionately kissing each other in the doorway to her washroom, quickly going from sweet and kind to a sea of teenage hormones. When we broke off the kiss, despite her clear hangover, Morgan was looking at me with lust and vitality in her eyes.\n\n\"Do you have to go immediately?\" Morgan asked. \"Because I think a guy that is willing to be that helpful is pretty... sexy, and I want to show you how much I appreciate you.\"\n\nI smiled. \"I think Taylor is my ride, so she's the one that needs convincing,\" I told her. \"Or Doug. Whoever can give me a ride. I don't mind staying a bit longer and...\"\n\n\"And...?\" Morgan teased.\n\n\"And,\" I told her with a grin. She got the message and walked off down the stairs, leaving me in the hallway chuckling.\n\nI couldn't resist listening in on whatever conversation they'd have, though. I wasn't above that. I tiptoed over to the banister and leaned over, closing my eyes and listening in.\n\n\"No,\" Taylor's flat voice met my ears. \"Maybe try thinking of someone else for once. I'm hurting too.\"\n\n\"Doesn't that work though?\" Morgan asked. \"You can sit here and drink water, recover, do whatever you want. I just want to see him for a few more minutes.\"\n\n\"Can I ask why you like him?\" Doug interjected. \"You've turned down guys that have more charisma in their left nut. How much chemistry could you possibly have if he just answers 'um, yeah' to everything?\"\n\n\"Where the fuck did that come from?!\" Morgan demanded.\n\n\"Woah, woah. Didn't realize I had to like any boyfriend you bring home immediately.\" Doug's tone got sour.\n\n\"Taylor, help me out here,\" Morgan pleaded.\n\nI heard Taylor sigh. \"He can be a sweet guy. Misguided, but sweet. Not really boyfriend material, but...\"\n\n\"Not exactly a ten in the looks department either,\" Doug dryly added. Ouch.\n\nNo one spoke for a bit. \"You're driving him home, Doug,\" Morgan told him after a while, in the angriest voice I ever heard her use. \"And you're both going to be a lot fucking nicer to him from now on, and if you don't, don't bother fucking talking to me either. Taylor, go the fuck home if you're going to be such a baby.\" I could hear her stomping back to the stairs and tiptoed back to the hallway, grabbing the cleaning supplies again and pretending to go over the floor again. I looked up after positioning myself in time to see Morgan coming up the stairs.\n\n\"Oh, hey,\" I casually said. \"How'd it go?\"\n\n\"Did you hear anything?\"\n\n\"Nope, I was busy here,\" I lied.\n\nShe broke into a sweet smile, as if nothing had happened. \"Oh! We're all good,\" she lied back. \"Doug was happy to offer you a ride home if Taylor decides she wants to go home soon. Her head is really hurting, so I wouldn't blame her.\"\n\n\"And how's your head, are you alright?\" I asked, standing up.\n\n\"I'm... yeah, I'm okay,\" she replied uneasily. \"Can I say something weird? It's just on my mind right now.\" She started to head into her room.\n\nI followed. \"Um, yeah, sure. What's up?\"\n\nShe closed the door behind us. \"So, if we ever do break up...\"\n\n\"I don't like where this is going.\"\n\n\"I wouldn't like it either, but this is just a thing I want to say about you. I know high school does this whole totem pole thing, and a lot of people can make you think or feel you're on the bottom.\" She fidgeted with her hands. \"If you were ever single, just... don't presume that someone taking pity on you is being nice to you. It's okay to have value in yourself. You're really sweet, and you see the good in people a lot. I don't like the idea of you getting taken advantage of by some toxic girl.\"\n\nShe sat down on her bed, and I sat down beside her. I couldn't help smiling. \"Is this toxic girl Taylor?\" I asked.\n\nI wanted her to smile with me, but instead, she just frowned. \"I think you know the type at this point,\" she admitted quietly. \"Quinn, I think we're more alike than I wanted to admit when I first met you.\"\n\n\"You have a duty to protect others, but you feel as though you get taken advantage of yourself?\" I offered. \"You hate being walked on, but it's kind of hard to stop when you're used to just helping people?\"\n\nShe looked into my eyes and smiled. \"Either you're really perceptive, you're psychic, or you did hear some of the stuff we said downstairs, you liar,\" she playfully accused.\n\n\"If I said I was psychic, would that make you impressed enough to give me a kiss?\" I joked.\n\n\"This one's a freebie,\" she laughed, leaning in. Gently, I met her lips with mine and gave her a kiss. Despite the pain she was in, she relaxed and melted into the kiss, giving a small appreciative moan as our lips met.\n\nSlowly, we pulled away from each other. \"Yeah, I lied,\" I admitted. \"I thought it would be awkward to tell the truth.\"\n\n\"I understand,\" she told me simply. \"She pisses me the fuck off sometimes.\"\n\n\"And Doug?\"\n\n\"Complicated,\" she answered simply. \"I'll just say that he feels like age always gives you wisdom.\"\n\n\"I think you're kind of wise beyond your years,\" I admitted.\n\nShe gave me a look. \"Quinn, come on.\"\n\n\"No, I'm serious! You have a lot of emotional intelligence,\" I told her. \"He seems more... bro-y than you.\"\n\n\"You'll get on his good side soon, I'm sure.\"\n\n\"After you threatened him,\" I quipped. \"Besides, it's true, I'm not a ten on th-\"\n\n\"Shut up,\" she barked at me. \"Just shut up. There's no such thing as objective looks. It's not impossible for me to find you attractive. It's not impossible for you to be attractive. You're fucking attractive, Quinn. There's no number on the looks chart. It's not even a thing. I just look at you, and I think, 'wow, it's Quinn. I want to date him. I want to kiss him.' Is that so unbelievable?\"\n\n\"See? Emotional intelligence,\" I insisted.\n\n\"Admit I find you attractive,\" she ordered, quickly adding, \"Physically. Don't weasel out.\"\n\n\"Do I get to admit I'm not conventionally attractive when I say it?\"\n\n\"Only if I get to point out that 'conventional' doesn't mean a fucking thing.\"\n\n\"Morgan, despite not being conventionally attractive to many, you find me attractive. You find me physically attractive.\"\n\n\"Quinn, 'conventional' doesn't mean a fucking thing.\" We shared a giggle. \"There are people, lots of people, that would never find Taylor attractive. There are lots of people that wouldn't find me attractive.\"\n\n\"Well, they're not here. I am,\" I told her, moving in close to her face.\n\nShe smiled slightly. \"Hot.\"\n\nI kissed her gently, then looked into her eyes. \"Morgan,\" I began. \"You're such a kind and giving person. I want to give back to you. What can I do that would make you happy?\"\n\nHer eyes got misty, and she didn't say anything for a bit. \"I... really liked hearing that. Even just hearing that,\" she shakily said.\n\nI smiled at her. We were more alike than I had realized. Realizing I had already talked the talk at this point, I internally grimaced at the realization that I had to take initiative again, although I'd gladly do it for her. \"Lay down,\" I gently said.\n\nShe gave me a curious look. \"What for?\"\n\n\"It won't be as romantic if I tell you what I plan on doing.\"\n\nShe looked nervous. \"I'm kind of an overthinker. Is what you're going to do-\"\n\n\"We're not going all the way,\" I chuckled. \"And I'm going to remain clothed.\"\n\nShe smiled and blushed, looking away. I read her mind. I turned her head back to me and gave her another gentle kiss, before pushing her on both of her shoulders, letting her flop on top of the bed. Trying to be as graceful as possible, I climbed on top of her, kissing her lips over and over, slowly going down to her neck.\n\nShe closed her eyes and sighed when she felt my first kiss on her neck. I went from polite chaste kisses to passionate open-mouth kisses, until we got to the point where I was definitely going to leave marks.\n\nIt was clear that Morgan's neck was a sensitive spot. She kept moving around as I kissed her neck, to such an extent that I began to worry if I was hurting her or something. And yet, every time I tried pulling up from her neck to check up on her, her hand would find the back of my head and pull me back down. Clearly I was doing something right. Armed with this information, I pressed on, kissing and biting her neck, feeling her body flush and practically grow hotter with her passion.\n\nAs I kept kissing and biting her, my hands once again found their way over her shirt, then under. I decided not to grab anything or be too sudden with my movements -- it was easy to forget, but she was probably hurting right now, with her hangover and all. I made slow sweeping motions up and down her body, paying attention to when she'd react and which areas my fingertips were grazing when she reacted. Apart from one area where she was clearly just ticklish, I had tried to commit to memory the areas she particularly seemed to like and 'mapped' her out. Once I did, I retreated my head, moving it down to her torso, lifting her shirt. Morgan's cream-colored torso greeted my eyes, along with a bra that looked too tight on her body. I wondered if today was the day I was going to truly let her body breathe.",
        "I smiled and looked into Morgan's eyes. I was still as nervous as always, but it was fun to try and keep up some confidence around her. I wanted to be confident for her. \"You're really sexy,\" I said in a low voice.\n\nShe smiled back. \"What are you going to do...?\"\n\nIn answer, I lowered my head to her stomach, kissing around the areas where I saw her react before. While she wasn't reacting as strongly as she did when I kissed her neck, Morgan was still sighing happily and enjoying the attention on her. Her boyfriend was showing her how much he appreciated her body. Every inch of skin was being appreciated. I could feel her hips start to move, and her pelvis start to grind the air.\n\nBoldly, my one hand moved down to cup her pelvis. I didn't move in and start roughly manhandling her, I just kept my hand over her, perhaps massaging her with the slowest motions possible. As soon as she felt me make contact, her head went up and she looked right at me, her mouth in an 'O' shape of shock. It was interesting -- she was both inviting me, and yet completely floored whenever I went for it. She didn't look uncomfortable, but she did have her eyebrows together. It was like fear, but... clearly eager. It was sexy. It was like I was claiming her, and she was all too eager for me to take her.\n\nI felt my smile broaden as my eyes never left hers and my hand began to rub her pussy over her pants in a more pronounced way. The heat instantly went to her cheeks, and she hung her head back, reaching for a pillow and pulling out over her face. She moaned into the pillow -- I'll never forget the sound of her moan. It was guttural, eager, hungry. The moan of a girl in heat. The moan of a girl who needed to appear proper and motherly to her friends in public, but deep down, really loved being a good little girl in the bedroom.\n\n\"Pants or bra,\" I heard myself growl.\n\nShe slowly lifted the pillow off of her face, looking at me. \"What?\"\n\nI was too human and shrank back a bit at her asking me to repeat myself. \"Uh, I said... pants or bra. Remove one... if you want.\"\n\nShe lowered an eyebrow and smiled slightly. \"Say that again with the confidence you had the first time.\"\n\nI chuckled and cleared my throat. \"Be a good girl,\" I told her. \"Pants or bra. Remove one.\"\n\nHer smile got bigger, and her smile wasn't the only thing in the room doing that. \"Yes, sir.\" I throbbed hearing that. I got off of her and she sat up, winking at me. \"I saw you've been staring at my breasts before,\" she began, putting on this sensual voice for me. \"I want to see just how much you appreciate them when given the chance.\"\n\n\"I would lo-\"\n\nShe held up a finger. \"Nope, no words,\" she playfully told me. She pulled off her shirt fully then reached behind herself, unclasping her bra. Teasingly, she held the cups on her breasts with one hand as she moved the straps off her shoulders, moving her chest in a circular motion, teasing me. With the other hand, she beckoned me forward.\n\nI dumbly walked ahead, giving her a look that made her giggle. \"Are you falling for me, Quinn?\" she teased.\n\n\"God, I fucking hope so,\" I answered. \"You're perfect.\"\n\nShe lowered an eyebrow and smiled cockily at me. \"Shut up and kiss me,\" she said, her voice full of lust. She grabbed me by the shirt and pulled me with her free hand into a passionate, almost desperate kiss, with me eagerly kissing her back with just as much passion. Her arms snaked around my back, pulling me in closer, and my hands pulled her into me with just as much passion, going up the smooth skin of her back, eventually landing on the back of her neck, giving it a gentle squeeze. She moaned into my mouth at the sensations.\n\nAs we parted from our kiss, I realized the significance of her hands being around my back: she wasn't holding up her bra anymore. I couldn't help but overtly stare at the second pair of breasts I had even seen in my life. She was perfect. Kevin was right, her breasts were huge, almost deceptively so; I was happy I hadn't noticed up until now, because it would have been a major distraction. I think seeing Morgan's boobs for the first time really solidified for me how much I liked boobs, but only if they were Morgan's. They were perfect. She was perfect.\n\nI wasn't slow or delicate like I was before. I was on her within seconds. I was licking, sucking, kissing, and doing everything I could to make her moan for me. I wanted to spend hours on those beautiful tits of hers.\n\nI was so fast, she giggled and stroked the back of my head. \"Easy, easy,\" she gently told me. \"It feels the best for me if you're... delicate to start.\"\n\nI felt my cheeks warm. I even had lessons from Taylor at my disposal, and still I rushed in and looked like an amateur. It was embarrassing, but I could also understand it: the need was too strong to pretend to want to go slow.\n\n\"I'm sorry,\" I confessed. \"I just want you so badly... I rushed it.\"\n\nShe looked at me, confused. \"There's no need to apologize, Quinn,\" she quietly told me, a smile on her face. I went back to her breast, being more careful this time, giving her all the oral attention I could muster. I felt her nipple getting hard with every lick and suck I gave her. I couldn't tell what she tasted like, but whatever it was, I liked it, and I wanted more.\n\n\"You're so sweet, Quinn...\" she moaned as I pleasured her. \"I hope... we keep doing this... I need to invite you over more... I need to please you...\"\n\nJust getting to play with her nipples was more than enough for me. Getting to feel her nipples harden, her breathing quicken, and her skin getting hotter with each passing minute was enough to keep me hard and throbbing.\n\nI wasn't sure how long we kept it up, but it was a good thing we were relatively quiet, because after a long and happy while pleasing her, we heard a knock at the door. I felt Morgan's body instantly stiffen, and I raised my head, looking urgently at her.\n\nShe looked back at me and made a motion with her hands indicating for me to keep quiet, then waited.\n\nUnfortunately, the knocker persisted, then spoke. \"Hey Morgan, Taylor already left, and I'm going in half an hour. There won't be anyone here to drive Quinn in a bit, if that's still an issue. I'll be downstairs.\"\n\nMorgan waited until she heard footsteps fading away, then she collapsed back onto the bed. \"Shit,\" she complained in a disgusted tone.\n\n\"We should probably pick this up another time, shouldn't we?\" I asked.\n\nMorgan got back up and looked at me with a determined face. \"If we had any other option, I'd take it,\" she whined. \"For now...\" She pulled me in and gave me a passionate kiss, which slowly but surely transitioned to me on top of her, both of us slowly grinding against each other, with her topless all the while.\n\nEventually, we came up for air, and I saw that same lusty eyes-glossed-over look from the theater. \"We'd better hang out real soon,\" she complained.\n\nI smiled and got off of her, letting her grab her bra. \"I guess I'm free for the summer, as long as my parents...\" I trailed off. Mother was going to have my head on a platter, wasn't she? It was easy to brush the consequences to the side when it was last night and facing her seemed so far away, but now... I was going to get driven back to her, very soon.\n\nMorgan used the silence I created and filled it. \"Actually, there's a party coming up in a few days, a kind of 'fuck school, summer's here' party. I was already going but I bet I could get you invited. Would you like to be my plus one?\"\n\nI chuckled nervously. \"I don't know if I'll even be able to go to anything this summer if my parents don't let me,\" I honestly admitted. \"Mother is probably going to be really angry at me for today as it is.\"\n\nShe put on her shirt and gave me a quizzical look. \"Didn't you literally just say the opposite?\" she asked. \"If you don't want to go, you can be honest with me...\"\n\n\"I just thought about my Mother now, and how she's going to react to what I just did,\" I explained. \"She's going to tell me to stay home.\"\n\n\"Just tell her no, Quinn. You're an adult.\"\n\n\"It's not that simple. Please just trust me that I'll do everything I can, but I can't promise anything.\"\n\nShe walked over to me and shook her head. \"If I don't get to see you all fucking summer...\" She trailed off and gave me a passionate kiss. \"...and the last time I saw you, you got me this wet...\" Another kiss. \"...I'll never forgive you.\"\n\n\"So no pressure,\" I joked.\n\n\"I want you to know exactly what you're fighting for,\" she joked back, before giving me one last kiss.\n\n***\n\nI breathed heavily, looking at our apartment's front door. This wasn't going to be fun. Steeling myself, I walked in, seeing Kevin cleaning the countertops. When he saw me, he broke into a small smile.\n\n\"Hey Quinn!\" he declared in an overly loud voice. \"Welcome back!\"\n\nI stared daggers at him as Mother came into the kitchen from the other room. She walked right in front of me and folded her arms.\n\n\"You can leave, Kevin.\"\n\nMandarin. Awesome. This was going to be great. Kevin really liked to play both sides of the whole \"good guy that just wants to help his brother\" shtick, especially since he was clearly disappointed when he walked away -- no doubt wanting to see whatever showdown would occur.\n\nWell, I wouldn't let that happen without as much damage control as possible. I cleared my throat. \"I didn't know that Morgan would want to see me as long as she did, and by the time I realized what was going on, both she and Taylor had drank enough that they shouldn't have driven.\" It was at that moment that I realized I totally could have asked Doug, but like hell was I going to point that out now. \"That doesn't excuse my lack of preparation, and for that, I'm sorry.\" I lowered my head, understanding the disrespect I'd shown her.\n\nAfter she didn't say anything for a while, I slowly raised my head. Mother had the same unchanging expression on my face. Upset, but... it was hard to tell if she was angry, sad, or both. \"Quinn,\" she said in an uncharacteristically quiet voice. \"You keep telling me that you are going to do one thing, then I keep finding out later on that you do another. Do you not trust me?\"\n\nI sighed. \"Mother, sometimes these things surprise me as much as they surprise you. I keep finding myself doing new and weird things.\"\n\n\"Staying out and sleeping over at someone's house is something you've never done before,\" she observed.\n\n\"That's what I mean,\" I replied, doing my best to sound like I was agreeing with her, not arguing. \"I never did it before, and I never had any intention to do it, but by the time I had realized what was happening, it was too late.\"\n\n\"Let me guess, your girlfriend has already invited you to do something else.\" Mother's gaze was intently on mine.\n\nCards on the table. \"Yes,\" I admitted.\n\n\"A party or something?\"\n\nShe was perceptive. \"Yes, that's correct.\"\n\nShe sighed a long sigh. \"You will go,\" she simply said.\n\n\"Excuse me?\" I couldn't believe it. Mother's personality practically revolved around her saying the opposite of that.\n\n\"Do you think this never happened with Kevin?\" Mother asked me. \"I know, because I am your Mother, that telling Kevin 'no' only meant that when he does it he comes up with some excuse, and you would do the same. I know these things, Quinn, I know, sometimes you don't tell me the truth.\" She was smiling, but with a slightly threatening smile. \"Xi\u00e8ti\u0101nxi\u00e8d\u00ec, I had two children so I can see why!\"\n\n\"Why...?\" I had trouble keeping up.\n\n\"I can see this could be my fault,\" Mother admitted. \"I'd rather you and Kevin be honest with me than feel like lying. You two are the only kids I have and I don't want you and your new girlfriend to suffer because I did love wrong.\"\n\n\"Mother, you didn't do love wro-\"\n\n\"B\u00eczu\u01d0! Do not argue with me.\" Mother's tone was firm, yet kind. \"You are eighteen now, Quinn. Your Father and I will talk with you more later, but you will live life by your rules. Just as long as you have rules. We do want you to be happy, Quinn.\"\n\nI smiled and stepped forward, giving Mother a hug. \"Thank you, I appreciate this,\" I told her warmly.\n\n\"You will thank me by being honest with me and not lying anymore,\" Mother told me, clearly convinced I had lied last night or something. \"And by doing the dishes.\"\n\nI chuckled. \"Yes, of course.\"\n\nSatisfied, Mother walked away, going back to her room. Eagerly, I whipped out my phone and texted Morgan, letting her know that I could come to the party (and making no small deal of the fact that I dodged the bullet). This clearly wasn't me getting off scot-free, but I would gladly take it.\n\n***\n\nIt was a god damn pool party. Morgan was wise to wait for me to agree to go with her hours before dropping that little bomb on me. Even though I was convinced to bring my trunks, I was determined to keep my shirt on the entire time, thank you and goodbye.\n\nThe sun was blazing and I knew nobody there, but there were a few upsides. Number one, this was the first out-of-school event (or any event, come to think of it) where Morgan and I were operating as a visible couple to our peers, and getting that visibility was kind of exciting. Number two, I definitely didn't have a friend group present, so I was hanging out with Taylor's friend group, which meant a lot of eye candy. A bit ago that wouldn't have mattered to me, but after getting acquainted with Taylor and especially Morgan, I could suddenly see what all the fuss was about.\n\nI figured that parties were this event where everyone talked to each other and if someone didn't know who you were they'd grill you about who you were and why you were there, but to my utter relief, no one outside Taylor's friend group gave an absolute shit about me. I was happy to just stay by Morgan's side and make light conversation with her friends and her the whole time.\n\nUnfortunately, that plan didn't last very long. A few minutes into sitting down, Morgan got up and stretched. \"Okay, pool time,\" she announced to the group. She took off her sunglasses and looked at me, outstretching a hand. \"Are you sure you don't want to join me?\"\n\nI blushed. \"I'd rather keep my shirt on, if that's okay,\" I mumbled.\n\n\"Prude,\" Morgan joked. \"I'm sure you look very handsome with your shirt off.\"\n\nIf Taylor were there I'm sure she would have said some snide comment about me with my shirt off, but since Joel was at the party and hanging out with his buddies, Taylor was glued to him like a lovesick little puppy. Every so often I'd look in their direction, on the other side of the pool, and it was clear it wasn't an act -- she'd be sitting on his lap, or standing next to him with her arms wrapped around his torso, or just looking longingly into his eyes while he talked with his friends. She was clearly smitten.\n\n\"Maybe you'll find out next year,\" I joked back. Morgan grinned and stuck her tongue out at me childishly before heading off to the pool area, leaving me with Lexi, Crystal, and Milo.\n\nNot that they even noticed me there. \"Okay, Jake,\" Crystal declared to Lexi.\n\n\"Nope, fuck that. He had one chance with me and he fucking blew it.\"\n\n\"Eric,\" Milo contributed.\n\n\"Ew! Green eyes? Next.\"\n\n\"Jackson?\" Crystal replied, her voice hinting that she was giving up hope.\n\n\"Okay, you know what?\" Lexi replied immediately. \"I will admit, now that he's come out of his shell, he's way hotter than I thought he was...\"\n\n\"Yeah, you called him 'ugly' like last month,\" Milo interrupted.\n\n\"Shut up -- but, he's still like 'older brother' cute, you know?\"\n\n\"Ummm...\" Crystal surveyed the crowd. \"Quinn. Pick a guy.\"\n\n\"Huh?\" I snapped to attention.\n\n\"Pick a guy for Lexi to say no to,\" Milo quipped.\n\n\"Fuck off,\" Lexi replied. \"Quinn doesn't even know anybody's name, why are we asking him?\"\n\nCrystal shrugged. \"Maybe that's, like, even better,\" she reasoned. \"No bias. We'll just ask him to point out the best-looking guy here.\"\n\nCrystal's reasoning seemed to work; all three pairs of eyes found their way back to me. \"Um, okay,\" I replied, shrugging and chuckling in slight discomfort. I surveyed the crowd and found a tall boy with really emotive eyebrows and figured, girls probably like guys where you can tell what they're feeling. \"How about him?\"\n\n\"Um, pick another one, Quinn,\" Milo mumbled.\n\n\"Why? You asked me t-\"\n\n\"Because that's Mitchell.\" Milo gestured towards Crystal. \"Remember the nudes thing?\"\n\n\"Oh. Oh my god, I'm sorry,\" I blabbered.\n\n\"Don't be,\" Crystal waved me off, shooting a look towards Milo. \"I'm not a baby. It was my dumbass mistake.\"\n\n\"If your 'dumbass mistake' was trusting a boy, why are we trying to find more if they're all going to act like that?\" I asked.\n\n\"A-fucking-men,\" Lexi agreed.\n\n\"Yeah, agree with him, you slut. You still wanna get dicked down before the end of the party,\" Crystal argued.\n\n\"I know, it sucks.\" Lexi pouted. \"Why can't women have dicks? That would make everything so much easier.\"\n\n\"Some do,\" Milo pointed out.\n\n\"Oh, shut up,\" Lexi dismissed Milo.\n\n\"Thomas?\" Crystal asked.\n\nLexi snorted. \"Fuckin' Thomas? I'd rather fuck Quinn.\"\n\n\"You wish,\" I mumbled annoyedly.\n\nThe gang looked at me, surprised that I of all people came back with that. \"Hey, look at that. Welcome to the group, Quinn,\" Crystal replied, slapping me on the leg. Lexi didn't say anything, but just stared at me, less than amused.\n\nNo one said anything for a bit, until Lexi stood up. \"Fuck it. I'm going for a swim. Let's go, Crystal.\" Crystal, all too eager, let Lexi pull her up, and the two were off, clearly leaving their dream of getting Lexi's booty call behind.\n\n\"Looks like we're in the same boat, Quinn,\" Milo dryly noted.\n\nI nodded for a bit, before realizing I didn't get it. \"Wait, how so?\"\n\n\"We both can't go swimming without taking our shirts off.\"\n\nI stared at him. \"Why can't you...?\"\n\nHe rolled his eyes and gestured towards his chest. \"Because I still have boobs, genius.\"\n\n\"Oh,\" I awkwardly replied. \"S-sorry.\"\n\nNeither of us said anything for a bit. We just took in the sounds of the party with me occasionally waving to Morgan and Milo occasionally taking sips out of his lemonade can. Eventually, he cut the silence. \"Can I make things more tense between us?\"\n\nI looked at him weirdly. \"Oh, please do,\" I sarcastically replied.\n\n\"Why haven't you cut Taylor off yet?\"\n\nThe question caught me by surprise. I felt like sinking into my chair. \"Is this really the best place to have a conversation like this?\"\n\n\"Yes,\" he flatly said. \"It's better to have a talk about this in public than in a private place. Less people are listening.\"\n\nPopular people had the weirdest logic on the planet. Public stuff was more private. Pick your theater seats based on sound. That said, I was willing to play his game. I sighed and let my tongue roll around in my mouth, thinking about my answer.\n\n\"It's complicated,\" I began. \"You may have noticed I'm bad at... asserting myself. Even when I want something. Especially when you know as well as I do that Taylor has a habit of not taking no for an answer, and espe -- wait, how much do you know?\"\n\n\"Everything,\" he cooly replied.\n\nI stared at him in exasperation for a bit. \"Okay,\" I weakly conceded. \"So yeah, especially when she doesn't take no for an answer, and especially especially when Morgan is completely okay with it.\"\n\nMilo took another sip of his lemonade and looked me dead in the face. \"And how okay is Joel with it?\"\n\nI frowned and looked away, but kept up my sense of humor. \"Joel is right over there, go ahead and ask him, have a ball.\"\n\n\"I see him. Right there, near the barbecue, his girlfriend latching on to him like he supplies her oxygen,\" Milo replied.\n\n\"The same girlfriend that orchestrated this, and lied to me and him about it,\" I argued. \"Milo, I'm a third party to this. You know what I think? I think you're only going after me because you know you can't do a thing to convince Taylor to change or even make her feel bad about this, so you're just guilt-tripping me instead. If you know everything, you know how complicated it is, and you know how I didn't ask for, or cause, any of this.\"",
        "\"It doesn't make your compliance any less bad,\" Milo argued back.\n\n\"Yeah, well... what can I even do at this point? I'm as bad at changing Taylor's mind as you are. If she pressures me, and I can't do anything to stop it...\"\n\n\"Pressures?\" Milo repeated.\n\n\"Poor choice of words. She isn't forcing me against my will, but-\"\n\n\"Then you have willpower. If you have any say at all, use it. Make it all stop. It's that easy, Quinn.\"\n\n\"It's not that easy and you know that,\" I replied, finding my power voice.\n\nIt came out a bit louder than I wanted, so to prevent further eyes on us, Milo shrugged and went back to his drink. I followed suit, awkwardly looking at 'that thing over there.'\n\nEventually he spoke again. \"I'm not getting anywhere by pussyfooting around, so listen good. You put your foot down, or Joel finds out.\"\n\n\"And how's he going to find out?\"\n\n\"I'll tell him.\" Milo's tone was even.\n\nAdrenaline rushed through me. Fear adrenaline, like he already told him. \"And who will that help?\"\n\n\"It's the right thing,\" he simply replied.\n\n\"I don't think it is,\" I said flatly.\n\n\"I don't care,\" he replied.\n\nI sighed. \"How long do I have?\"\n\n\"Just go and tell hi-\"\n\n\"Yeah, Milo, if that's your plan, you're not taking into account that I maybe got fucking comfortable talking to people like a month ago. Give me a damn deadline that's not ten seconds.\"\n\n\"Alright, alright, jeez,\" he replied. \"Twenty-four hours.\"\n\n\"So this is the way it is?\" I asked.\n\n\"It's the way it has to be,\" Milo reasoned.\n\n***\n\nGod answers all prayers, and on this blessed day he gave unto Lexi some blond boy. I watched the two of them disappear up the stairs and gestured towards her. \"She was looking for some guy to have sex with all night,\" I whispered to Morgan.\n\nMorgan didn't bother to whisper back. \"Welcome to Lexi,\" she replied, taking a sip from her Palm Bay afterwards. \"If it has to do with sex, she's interested, either to get some or to hear all about it.\"\n\nThe sun was setting, so those of us who were left moved inside. It wasn't as crowded as the pool party was, but there were still a good twenty-to-thirty people there, and a few of them had broken off to do stuff in other rooms. Three guesses what.\n\nI watched Morgan take another sip. \"I thought you said you didn't drink that often,\" I observed.\n\nShe donned a completely serious face. \"Is it making you uncomfortable?\"\n\n\"Oh, no, god no, sorry,\" I apologized. \"I was just noticing. If you're more comfy with it now, go ahead. It doesn't bother me at all. I'm... yeah. I'm sorry.\"\n\nMorgan's serious look melted into a smirk as she watched me turn pink and blabber. \"C'mere,\" she purred, bringing me into a kiss that, given we were surrounded by people, lasted way longer than I thought it would.\n\nA lot of the guys in the crowd started whooping and hollering to embarrass us, which caused my eyes to open mid-kiss. I saw Morgan was flipping them off, not missing a beat as she kissed me. As soon as the kiss was over, she diverted her attention to the crowd. \"Jealous?\" she taunted.\n\nI could only chuckle nervously, looking around. This was still new territory, even if I didn't talk to anyone I didn't already know at this party. I looked around to see Taylor and Joel walking off towards another room, and shivered as I thought of Milo's words.\n\n\"Did I make you uncomfortable?\" Morgan asked, looking at me.\n\n\"Huh?\" I whipped my head around to face her. \"Oh. No. Um, I...\" I looked around us. \"Something happened, but I can't just say it in a crowd like this.\"\n\nShe nodded. \"Let's go to the kitchen.\"\n\nShe pulled me up by my hand and off we went. The kitchen was... was the term 'open concept?' It wasn't a lot more private than the living room we were just in, since we could clearly see it from the kitchen, but if we kept our voices low it would do, since no one else was there.\n\nMorgan started pouring herself a glass of water. \"Water's on, go ahead and talk,\" she whispered.\n\nI nodded. \"Earlier, I was talking to Milo. He's fed up with what he thinks he knows. He doesn't like what you, Taylor, and I are doing. He threatened to tell Joel if we don't tell him.\"\n\nThe water started overflowing from the cup. \"...What?!\" Morgan blurted, giving me a sharp look.\n\nI gave her a nervous nod. She grunted. \"Why the fuck does he always have to...\" She swiped her cup from the sink, and started looking for Milo. I shut off the water and followed her.\n\nShe walked with purpose, so I didn't catch up to her before she found Milo. \"Yo. I need a sec with you,\" Morgan informed him, breaking up his conversation with some girl. He seemed pretty rattled that Morgan would interrupt like that, but accepted the situation and walked off with her.\n\n\"Someone stole your girl,\" some beefy guy built like a tank teased me.\n\n\"She'll be back,\" I replied, thinking I was stating a fact, but the tank guy just politely laughed like I made a quip.\n\n\"How'd you snag that one, anyway?\" he pressed on. \"Ben's been trying like all year, and the best he did was finger her after a game. And she never called him back after that.\"\n\n\"Fuck off,\" some other guy who had a body like Crash Bandicoot sneered from behind him.\n\nI was too busy trying to get that visual out of my head to respond for the next few seconds. \"Um, I wouldn't say I snagged her,\" I replied. \"We just happened to develop feelings for each other, I guess.\"\n\nTank guy just stared at me for a few seconds, then rolled his eyes and went back to his group. I guess somehow I said something wrong. Even though I was practically dead center in the room, crowds formed around me. It was sweet of Morgan to invite me here, but it was painfully clear how unlike the others I was. If only I had Kevin's schmoozing ability, I may have at least talked to a few people and got the ball rolling or something.\n\nAfter a few minutes, Morgan re-emerged, though Milo wasn't in sight. She was clearly pissed. Upon seeing someone I could actually talk to, I briskly walked up to her.\n\n\"Hey,\" I began. \"What did he say?\"\n\n\"He said he's a fucking asshole,\" Morgan grumpily replied, uncharacteristically mad. Even in a crisis she usually had a calm demeanor to her; this was the first time I saw her this upset. \"I need another drink. And we're going soon.\"\n\n\"Is there anything I need to kn-\"\n\n\"Quinn, if you could not, I'd really appreciate that,\" she told me, only bothering to stop walking as she spoke to me, continuing to walk away after. Did I do something wrong? Was she mad at Milo, or at me?\n\nOr both...?\n\n***\n\nMorgan didn't calm down until she got home. I felt a responsibility as her boyfriend to be there and help her calm down, though I let her (and Doug, since he asked) know that I unquestionably had to be home tonight. Even with Mother's speech, I didn't want to bite the hand that fed me.\n\nLuckily, with Morgan, myself, and teenage hormones, calming someone down is easy. It just meant a prolonged session of making out. Even so, it was clear that Morgan was wound tight.\n\n\"Y'know, we could have just had a nice fucking time,\" she complained as I kept kissing her neck. \"I don't even just mean at the party. We were stopping, so I don't get what it even helps to threaten to tell him now.\"\n\nI stopped kissing. \"Well, Milo was threatening to tell Joel because he doesn't think we're actually stopping,\" I pointed out.\n\n\"Don't make me pissed at the guy that's kissing my neck,\" Morgan half-joked, half-threatened. \"We'll have to stop and then no one will be kissing my neck.\"\n\nI cracked a smile. \"What a tragedy.\"\n\n\"Right?\" Morgan's smile copied my own. \"Milo just likes to control stuff. He gets so sure that his version of events is, like, what is definitely going on, and he doesn't like to sit back and wait for shit to get real.\"\n\n\"Can I ask what happened in your conversation that made you so upset?\" I asked.\n\nShe rolled her eyes. \"He gave me the same ultimatum. He told me to tell Joel or he would.\" She looked to the ground and shook her head. \"I don't get it. I was here when Taylor tried to... you know. Do that thing with you. I saw how you reacted.\"\n\nMy cheeks burned crimson.\n\n\"That was clear as day. It's as good as done. I...\" She stopped mid-sentence, and looked at me. \"Wait, no. I'm dumb. You're right here. I'm presuming a lot of things about you while you're right here. I need to leave this up to you.\" She looked at me expectantly.\n\n\"That was a lot,\" I mumbled.\n\n\"Yeah, sorry,\" she conceded.\n\n\"I... do want to cut things off with Taylor,\" I admitted. \"But I need to be aware of myself. I'm bad at telling her no when she wants me. You saw us when you were there, but when she and I are alone...\" I stopped, realizing I was about to tell my girlfriend how attractive her friend was.\n\n\"She's persuasive, and clearly hot. Tears are out, Quinn, remember?\" she reminded me.\n\nIt was still weird, but okay. \"Right,\" I conceded. \"Well, yeah, that's it. Every time I'm alone, or with you, or even all three of us are together, it's easy to tell her no, or it seems easy, at least. But when she and I are alone... she kind of corners me.\"\n\nMorgan sighed. \"Yeah, that sounds like Taylor,\" she admitted.\n\n\"And it's definitely naive to just say, 'oh, well then, I'll just never hang out with just Taylor again.' That will definitely happen at least once more.\"\n\n\"If you don't want it to, it doesn't have to,\" Morgan simply said. \"Remember, we're really close. I can make sure I'm always there when you're hanging out with Taylor if you need a lifeline.\"\n\nI smiled at her. \"I thought you said the tears were out.\"\n\n\"Well, number one, it's clearly a you thing at this point. If you don't want to do anything with her, but can't resist her, it sounds like I'm doing you a favor,\" she reasoned. \"Number two, it's becoming too complicated. I'm allowed to change my mind. Number three, uh, please don't use my own 'tears are out' thing as a gotcha. It doesn't feel good.\"\n\n\"Okay, sorry,\" I admitted, and leaned forward and kissed her.\n\n\"I can offer you this lifeline, but at the end of the day, this is a choice you're going to have to make for yourself,\" she softly added.\n\n\"I know,\" I admitted. \"I'm going to make an effort. It's just so complicated with the Milo telling Joel thing.\"\n\n\"I'll handle that part,\" Morgan confidently added. \"I can probably get him to back down, especially since this stuff sounds like it's over anyways. Milo is just trying to invent drama. He won't go through with it, I'll make sure of it. I have around eighteen hours after all.\" We shared a laugh. \"Once he sees he's making things worse if he does it, not better, he'll stop. I know how Milo works.\"\n\n\"Okay, I trust you,\" I replied.\n\n\"So, what's the plan?\" she asked. \"For the night.\"\n\n\"It's up to Doug more than anything, but I can stay for a little while longer,\" I admitted. \"I should get back tonight, but... maybe we can finish what we started last time I was here?\"\n\nMorgan smiled a little devilish smile. \"And how were you planning to do that?\"\n\nI shrugged meekly. \"If you wanted to take things to the next level, I would enjoy... y'know...\"\n\n\"I don't know, Quinn,\" Morgan replied, keeping up her smile.\n\nI sighed. \"Isn't it less sexy if I tell you beforehand?\"\n\n\"Mm-mmm, sometimes it's more sexy,\" Morgan disagreed, shaking her head, still smiling..\n\n\"W-well, if you wanted to... if you were comfortable taking our relationship to the next level... I'd feel comfo- I'd enjoy... oral... on you?\"\n\nMorgan's smile got bigger as she watched me struggle through my sentence. At the end, she pulled me into another kiss, clearly liking what she heard. I kissed back, shyly at first, but finding my passion and power quickly after. Before long, I was the one grinding against her as we made out on her bed, listening to Morgan's little moans and feeling her little squirms as we got more and more into it.\n\nAt some point, the both of us knew the time was right. I wanted to make her feel good, and she was all too happy, especially after the stressful day, to receive.\n\nAs I got off of her, she blushed. \"Is it okay if I keep my shirt on?\" she asked.\n\n\"Um, of course,\" I replied. \"Why wouldn't it be?\"\n\n\"I know guys like my breasts, but sometimes I just... get weird about it.\"\n\nI half-chuckled. \"Then absolutely, keep your shirt on. I'm about to pleasure you. The last thing I'd want is for you to feel uncomfortable,\" I said as if it were obvious.\n\n\"Quinn, you don't know how many guys would be upset at what I just said, believe me,\" she replied.\n\n\"It sounds like they didn't respect you very much,\" I countered.\n\n\"It sounds like you've once again discovered why I chose you,\" she teased.\n\nI blushed and smiled. She smiled back as she hopped off the bed and blushed herself, sliding her pants down her legs.\n\nIf I thought seeing my girlfriend's boobs for the first time was a great experience, seeing her pussy was magical. Enchanting. I suddenly couldn't wait to be inside her. Everything, from her slightly puffy lips to her visible wetness to her cute little patch of pubic hair decorating her vagina looked perfect. She shyly stood before me, modeling what I was about to eat.\n\n\"You're so beautiful...\" I murmured.\n\nShe bashfully smiled, and got back on the bed, spreading her legs. \"Thanks, Quinn,\" she quietly said.\n\nNo more words were exchanged. They didn't need to be. I approached her, taking in everything about her. Her beauty, her scent, her... vulnerability. I didn't know if it was wrong of me to think this, but something about seeing the confident Morgan, blushing and open and willing to be taken advantage of... it was really sexy.\n\nRemembering what I had been taught before, I went slow. My tongue explored my girlfriend, exploring and licking around the sensitive areas, not willing to dive in just yet. Clearly, Morgan was eager, judging by the way she was already squirming and whimpering. Gently, teasingly, my licks transitioned into kisses. I started kissing along her folds, finding and kissing her lips, then her clit. Each kiss was incredibly gentle, and yet, each time I made contact, I felt her thighs tense up.\n\nHer thighs were so beautiful, toned yet soft. All of her was beautiful. I loved seeing her little clit, beautifully woven into the top of her little slit. I loved the little jumps she made whenever I made contact. I loved the way she deeply moaned and ground her hips into my face the first time I lapped at her slit. Taking this as a sign, I made lapping at her slit my default action, listening to her cooing and whimpering as I did so.\n\nI experimented with using the muscles in my tongue, sometimes making it longer and thinner, sometimes trying to make it wide and flat, just lazily licking up her slit. Morgan seemed to prefer the wide flat tongued approach, and appreciated my efforts. Before long I had gotten into a good groove -- licking up her slit, relaxing my tongue and making it flat and wide, occasionally making the lick longer so it could brush up against her clit.\n\nI could feel her shiver whenever my tongue made contact with her clit. Her little moans and outbursts were helping reinforce the notion of how much she was enjoying it.\n\n\"Oh yes, Quinn, just like that, you're so good, oh my god, don't stop, please don't stop...\" she begged in a high voice. I certainly wasn't planning to. I kept going, grabbing her hips, enjoying the look on her face whenever I got an opportunity to look up. Her skin was getting hotter again, and she was unable to keep still. Her passion for me was driving her wild. I couldn't wait to actually fuck her.\n\nI was also grateful she preferred my lapping at her slit instead of the more complicated procedures Taylor preferred, since this meant my tongue wasn't cramping. I had no idea how long she lasted, but it was pretty damn evident when she was close to the edge. Her moans got loud -- a little dangerously loud if she didn't want her parents to know what we were up to -- and she was grabbing bunches of her bedsheets and immediately letting go, her arms practically in a blur, her hips grinding into my face, eagerly pushing my tongue against her slit.\n\nAnd yet, my motions were still gentle. She was the tide pushing into the beach and I was the gentle shore, just lapping and kissing away, occasionally giving her a surprise with a slightly stronger lick that landed on her clit.\n\n\"F-finger me too...\" she begged. \"Please, fuck, please, Quinn. Finger me. One finger will do, don't m-make it too fast...\"\n\nI listened intently, and did exactly as she instructed, inserting a finger slowly into her and pumping away as my tongue continued its work on the north end of her slit. When her orgasm came, I could practically feel it rippling through her. It started right where my tongue met her clit, and spread out like a pulse of pure energy, warming and tingling the rest of her body, setting off a chain of fireworks across her whole self.\n\nIt was beautiful. The look of pure bliss on Morgan's face was an absolute delight. She was, luckily given the loudness of her moans, a silent orgasmer, and the way her face looked when she came, she could have visited Heaven for all I knew. Her eyes were closed, her mouth stuck in an 'O' shape, her hips moving on their own to milk every drop of pleasure out of the experience, until finally, she came back to Earth. Her body sank down into the mattress, her mouth eventually closed, and her eyes fluttered open.\n\nI gently removed my mouth from her pussy and wiped my face. My handiwork looked back at me -- her pussy was soaking wet, some of her pubic hair was matted with her juices and my saliva, and I could practically see her lips throbbing and pulsing.\n\nI smiled at her, and laid beside her. She smiled back, weakly, and took another thirty seconds to fully recover before she kissed me passionately.\n\nShe immediately pulled back from the kiss with a look on her face. She smacked her lips a few times. \"...Huh,\" she replied. \"...Okay, not as bad as I thought.\"\n\n\"Hey, I liked it, but maybe I'm biased,\" I joked.\n\nShe grinned and kissed me again, this time moving past the initial taste, and we enjoyed each other in her post-orgasmic bliss.\n\n\"You'd better be ready for the blowjob of your life,\" Morgan panted after our lips parted, giving me an almost manic smile. \"Because holy shit, you earned it.\"\n\nI smiled back, hesitating when I felt my pocket vibrate. It vibrated a few times while I was eating Morgan out, but obviously, a guy that pauses eating his girlfriend out to answer a text message doesn't have a girlfriend for very long. Now that we were transitioning, I was willing to take a look at what I had missed on my phone.\n\nFour missed calls, seven text messages. All from Taylor. I didn't know whether to smirk or grimace. \"Taylor,\" I simply told Morgan, showing her the history. \"Like I said, really hard to say no to.\"\n\nShe chuckled slightly. \"Hurry up and answer her,\" she replied. \"I'm sure you would gladly say no to her for this.\"\n\nI chuckled back, opening up my text messages. As I read them, my smile swiftly disappeared, quickly replaced by a look of worry, then outright fear. I felt the color drain from my face.\n\nMorgan caught on immediately. \"What is it?\" she asked, most of the humor gone from her voice too.\n\nI scanned the messages one final time to confirm to myself, then looked at Morgan with urgency. \"Milo didn't wait. He's told Joel everything.\""
    ],
    "authorname": "BashfulScribe",
    "tags": [
        "teen",
        "high school",
        "school",
        "popular girl",
        "wimp",
        "nerd",
        "popular",
        "eighteen",
        "asian"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/mutual-benefits-ch-12"
}