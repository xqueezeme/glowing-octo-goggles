{
    "title": "Amazonian Womb Worms Ch. 06-07",
    "pages": [
        "<p align=\"center\">Chapter 6</p>\n\n<p align=\"center\">Womb Feeder, Jizz Eater?</p>\n\nBliss. A euphoric, drunken haze of bliss more intense than what I've felt the last few days greets me as soon as I wake up. Like, it's so overpowering, I legit wake up already smiling. Maybe that's because I was super-hot last night and chose to sleep naked, so this super intense body high has been making these sheets feel so fucking good against my skin, like I'm being caressed all over my body. Not only does it feel like I double dosed an opioid and chugged three margaritas, I'm so horny that my body feels tense and hungry for a good fucking from a well-endowed man, not fingers or even the vibrator I desperately want to grab.\n\nDick. I need real dick. I need dick more than I ever have in my entire life.\n\nSeriously, the urge to get fucked is more overwhelming now than it ever has been in my sexually active years--more overwhelming than it has been since my womb got invaded by this worm.\n\n\"Fuck it, I'm going texting my ex,\" I groan as I stretch.\n\nChad is an asshole--that's why we broke up a few months ago after he cheated on me the second time--but he's the best lay of my life, and he's hung like a horse. Ever since graduation, whenever I'm feeling alone, I text him, and he always comes over to satisfy me, even if he's seeing someone. Of course, I never know he's in a relationship until after we've already hooked up.\n\nAs I'm reaching for my phone, I feel something cold, wet, and gooey between my thighs and against my vulva. Whatever it is makes a sticky, squishy sound below. When I lift the bedsheet, I find a glob of milky, thick syrup pooled between my legs.\n\nMaybe sleeping naked while I'm constantly oozing wasn't the best idea. Suddenly, the sweetest aroma wafts into my nose from under the sheet. Wow, that smells almost like warm sugar... Is it the slime that smells like that? I dip my finger into the cold, thickened syrup between my thighs then I sniff it.\n\n\"Holy shit, it is the slime!\"\n\nAs I'm sucking the sweet, nutty viscousness from my finger, Sable hops up on the bed panting and starts licking my fingers before slobbering my face.\n\nSweet fucking wow! His tongue feels so good against my skin! I wrap my arms around him and pull him in to hug him like I do every morning when he greets me, my skin tingling as his fur brushes against me. When the sensation of his fur on my skin gets me too riled up, I gently push him away, pull the covers back over me, and snap for him to get off the bed. Sable backs away, but he doesn't jump off. Nope, he just shoves his snout between my sheet-covered thighs and starts sniffing loudly.\n\nIn the corner of my eye, I see a flash of pink between his legs. Don't tell me that's... As the thought crosses my mind, he crawls over my legs and his red rocket comes into view right as something clear drips off the tip of it. Yup... my dog has an erection... There's got to be pheromones or something in this slime because he sniffs my crotch all the time and never gets boners...\n\nThe longer I stare at Sable's erection, the more an overwhelming urge to have dick in me overcomes me--not his, obviously, but a human's, because I'm not some depraved weirdo.\n\nMy hand finds its way between my legs and my middle finger slips into my tightness while my thumb works my clit. I need dick... I think I've always needed dick, not fingers...\n\n\"Maybe that's why I keep getting so fucking horny,\" I moan quietly to myself as I climb out of bed, \"because the worm is making me aroused so I can have actual sex, not just masturbate...\" Sable jumps out of bed then trots behind me on the way to the bedroom door, shoving his nose against my ass before I steer his head away. \"You're staying out here, mister,\" I say to my dog as I nudge him out of the room, closing the door behind him.\n\nIt's only after I turned around that I realized I've dripped a slug trail of Uteroboscis slime from my bed to my door. God damnit, I think, cupping my hand over my vagina before heading to my walk-in closet.\n\nAside from my curved, five-inch vibrator, the closest thing I have to an actual dick in my apartment is one of those realistic squirting dildos--the kind that comes with a tube and syringe attachment so you can make the sex toy ejaculate lube. Or obscene amounts of fake semen, like camgirls tend to do. After Claire took me out to get shitfaced the Friday following my breakup with Chad, I'd drunkenly ordered it online, my rational being, 'oh, hey, I don't have to keep pulling out the dildo to lube it if I get one that can just pump lube into me.' Funnily enough, I never even used the thing, and now that I'm about to finally unbox it, I don't even need to fill the syringe with lube because my pussy is perpetually slimy.\n\nAfter clicking on the light in the walk-in closet, I kneel in the middle of the floor and rummage around for the squirting dildo with one hand while the other stays cupped between my legs to keep what's dripping out of me from getting all over the carpet. Seconds later, as I'm moving a shoe box out of the way, my pussy throbs with need. Now, all I can think about is fingering myself to the edge of orgasm and keeping myself there until I can find this girthy dildo and finish myself off with it. The more I think about it, the more I drift off into a trance. The fantasy becomes so vivid, I actually begin to feel the phantom pleasure of my fingers pumping in and out of me. I can even hear the gushy squelching of my sopping hole being pleasured and feel the warm ooze overflowing in my hand.\n\nIt's only when an orgasm starts to build that my glazed over, unblinking eyes wander from the boxed dildo I've finally found to my crotch so I can figure out how that's possible without stimulation. That's when I realize that it wasn't a fantasy, I've actually been fingering myself this whole time.\n\nShit, the carpet, I think, looking from my slimy hand to the glob of clear sludge pooled between my knees. When did I even start masturbating?\n\nEven though I'm telling myself to stop so I don't make more of a mess of my carpet, my idle hand continues pleasuring my pussy from the closet all the way to the bed, and I continue doing so while I remove the dildo from the box with one hand. The only reason I get myself to stop is because I desperately need to replace my fingers with this girthy, veiny, eight-inch-long phallus, like, now.\n\nIt's almost as though this womb worm's chemical cocktail has me trapped in a hazy, dreamlike trance of sexual heat where I can only spectate while my unconscious desires pilot my body.\n\n\"Oh fuck,\" I moan as the dildo glides into my tightness, filling me and stretching all the way until it bottoms out. After pulling it all the way out and plunging it all the way back in, a wave of sweet release washes over me. \"Yes,\" I moan. \"This... This is what I need. Ooh-aaah!\"\n\nThat's why I feel like I just keep getting hornier and hornier... Because I need to be fucked by a cock--because the parasite needs a something from a cock. Maybe it needs something from a mammal's semen to sustain itself or trigger the next stage of its lifecycle... Or maybe if the Uteroboscis gets cum, it will leave...\n\nI picture that it's Chad fucking me instead of this dildo, and then I imagine him finishing in me like he used to, drawing out the Uteroboscis once and for all. \"There's no way I'm letting Chad cum in me,\" I pant out.\n\nI'm not letting any man ejaculate in me.\n\nWell, then how else are you going to find out if semen is what I need to get this thing out of me, go to a breeder and buy animal semen?\n\nFor some reason, the image of Sable pops into my mind, which then makes me think back to the summer after my junior year of college when I did this summer job at the dog breeding kennel where I got him from.\n\nCollecting semen from the dogs so I could evaluate it for motility, concentration, and morphology was a part of my job duties, so it's not like it'd be weird if I were to collect a sample from my dog to use it for the scientific purposes of studying this Uteroboscis... Especially if it might lead to getting this thing out of me. I look over at the detached syringe and tube on the bed beside me. I could totally just load the semen sample into the syringe and, after the worm wiggles out of my cervix following an orgasm, I can squirt it into the worm's head with this dildo.\n\nRight before an orgasm strikes, I pull the dildo out and lay there panting while I seriously consider carrying the idea out.\n\nIt wouldn't be some weird sexual thing. It'd just be an experiment, and nothing more. A onetime extraction and a one-time insemination. That's it. Best case scenario: the worm leaves your womb. Worse case: you squirt animal semen into your vagina for nothing and you carry the memory with you forever.\n\n\"It's not like there aren't people out there who drink bull semen and stuff like that,\" I whisper to myself as my hand slides the dildo back into me on its own accord.\n\nI visualize myself walking out of the bedroom and grabbing a 100 mL mason jar from the cabinet before kneeling beside Sable. Then, all I'd have to do is hold him gently behind his bulbus glandis while he deposits his semen in the jar, just like I used to do in the lab multiple times a week for an entire summer.\n\nIt's only after I actually feel Sable's imaginary tail whack me in the face that I snap out of my hypnotic trance and I realize I'm not visualizing the process, I'm actually doing it!\n\n\"Wait...\" I whisper to myself, removing my hand from behind my dog's knot as I stare in confusion at the twenty or so milliliters of runny, almond milk-looking liquid sloshing around in the mason jar. \"What the hell am I doing?\" I rise from the kneeling position and hurry back to my room.\n\nHow long was I out there? And when the heck did I even get out of bed? I stare out through the cracked bedroom door, watching Sable lap up slime from the floor. At least I had enough sense not to do anything inappropriate with my dog, I think, shutting the door. Probably because I didn't imagine it first.\n\nAfter crawling back in bed, I stare at the mason jar in my hand for a moment before glancing over at the tubing and the syringe that are lying beside the slime-coated dildo. \"Are you really about to do this, Lena?\"\n\nIf the worm gets semen, it might leave you.\n\nBy the time the thought has finished crossing my mind, I've somehow already sucked up the contents of the mason jar into the syringe, filling it to the 22 mL mark. That's when the immediate need for sweet relief strikes, making my pussy throb and my body tremble with anxious arousal. Like, it legit feels like I might explode if I don't get dicked-down immediately. It's so bad, it becomes a shaky-handed scramble to get this dildo hooked up to the syringe. One end of the tube gets affixed to the syringe's nozzle then the other gets pushed into the hole between the testicles and the suction cup.\n\nMy chest heaves like mad as I lay back and spread my legs. As soon as the dildo glides between my folds, I buck into it then thrust my pelvis up to the ceiling. \"Ahhhh!\" I cry out as I impale myself with the toy. A half-laugh, half-whimper escapes me as soon as the tip batters my cervix.\n\nMy squishy hole gushes loudly as I toy myself with desperate haste, pumping it in and out of me faster than I've ever masturbated with anything before. In a matter of seconds, a brain-scrambling an orgasm explodes between my legs. My vaginal walls contract rhythmically around the dildo like a spasming fist. It's so powerful, my vision goes blurry before my eyes roll into the back of my head. Soon after, I feel the worm bulge its way down into the cervical hole.\n\n\"Ah! Ah! Ah!\" I moan as the Uteroboscis throbs hard inside of my cervix, almost in sync with my contracting vagina. \"OOH! OOOH!\" I scream even louder when I feel the sweet discomfort of the worm's girthy head breaching into my vagina with a slippery pop of a sensation, triggering a uterine contraction that I feel all across my body.\n\nBefore I even have a chance to ask myself if I really want to do this, my trembling right hand has already depressed the syringe's plunger about halfway down, sending a jet of still-warm semen spraying the cervical flesh stretched around the worm's head.\n\nWhat am I doing?\n\nSuddenly, the worm begins throbbing harder and faster in my cervix like the heart of a startled animal, writhing excitedly like a happy dog's tail.\n\nIf the Uteroboscis gets cum, it will leave, I think, emptying the last ten milliliters of semen into my vagina.\n\nWhen the orgasm begins subsiding, I slowly pull the dildo out of me, hoping that the Uteroboscis will follow it. As the tip is nearing the exit, I feel something long and soft dragging against the top of my vagina. That's when I quickly sit up and look down. As soon as the tip of the dildo leaves my hole with a sticky pop, I see it. The worm's pulsating proboscis is right up against the tip of the dildo and there are branches webbed around the tip of the sex toy.\n\nMy eyes widen and my jaw drops. Don't tell me this thing's proboscis is inside the dildo's ejaculation tube... Is that what it'd do to an actual bare cock?\n\nI pull the white tube, tugging it slowly until it leaves the dildo. When I let it go, the proboscis just falls toward the bed, only to suck back into my pussy in the blink of an eye like a slurped spaghetti noodle. But the worm doesn't slither out of me like I'd hoped, it just starts writing and pulling itself back up into my uterus.\n\nShit...\n\nNow that my orgasm has completely tapered off, the sexual fever that had me in a perpetual trance also fades. My eroded euphoria is immediately replaced with clarity that is accompanied by this intense shame and regret from having inseminated myself with animal semen.\n\nI did that because of a little voice in my head that said, \"You need dick, not fingers. The worm needs cum or it won't leave you.\" That one thought popped into my head then, the next thing I know, I blacked out, milked my dog then pumped his spunk into me--all for what? Nothing, because the worm is still inside me...\n\n\"The deed is done,\" I say with a sigh.\n\nAll I can do now is focus on all the pleasant throbbing and squirming going on inside of my womb.\n\nIn the hours after the failed insemination experiment, the euphoria did dimmish enough for me to feel more clearheaded than masturbation alone did. I don't know if the ravenous arousal has faded because the worm got what it needed and cut down on producing arousal hormones or if the guilt over what I did has stifled the unyielding libido.\n\nAs noon rolls around, I start feeling a little weak, despite having a large breakfast. My hands and feet feel a bit cold too. The last time I felt this way was when I had a really heavy period my sophomore year of college. Normally, I'd just take some iron, eat some spinach and call it a day. But since I have this creature in me, I think it's best to go to the doctor to get some blood work done. Hemoglobin counts aside, I'm curious to see if they can detect any elevated hormones that might give me an idea of what this parasite has been pumping into me.\n\nBut before I go to the doctor, I'm going to pop by the university to drop off the refrigerated sample of this worm's milky slime with my friend Nicole Owens who's in the PhD biochemistry program over at Jacksonville University. I told her before I left that if I found any interesting samples in the Amazon, I'd bring it back for her to run chemical analyses on, so I texted her last night that I found something I wanted her to test.\n\nMy text read: I got exposed to something down in the forest that made me feel euphoric and happy and kind of turned on, so I'm going to need you to screen the sample for hormones, toxins, and alkaloids.\n\nNicole: Turned on? Um... Is this something from a plant? Can I have some? LOL!\n\nMe: Haha I wish it was a plant! It was slime from a bug that I accidentally ingested, so you don't want it.\n\nNicole: Yeah, you're right. That's gross, so I don't want it anymore hahaha. Stop by the lab around 1:00 tomorrow, k?\n\nIt's a good thing that I scooped slime from my vagina into a mason jar last night after my masturbation session because, if I did it today, the sample would be contaminated with dog semen, and that'd be super hard to explain...\n\n<p align=\"center\">Chapter 7</p>\n\n<p align=\"center\">Endless Estrus</p>\n\nAfter dropping off my goo jar with Nicole, I hang around chatting with her for a bit about the expedition to the Amazon. Our chat gets cut short when I start to feel a little dizzy and I almost topple over while I'm standing in the hall with her.\n\nThe wait at my doctor's clinic isn't long, so I pretty much get called back to see her. I tell her how I've been feeling woozy and elated and tired, answer a few questions about my trip, then she takes my blood. On the way out of the doctor's office, the euphoria and body high begin to intensify again. And, during the drive back to the restaurant that I'm going to pick up food from, I get super fucking horny.\n\n\"Not again,\" I groan, rubbing my pussy over my shorts while I drive in hopes that it'll take the edge off.\n\nIt doesn't. My cunt just throbs and aches with frustrated need, like it's begging for something big to plow in and out of it hard.\n\nAs soon as I pull into a spot in the far end of the restaurant's parking lot, I unbuckle my pants and slip my hand into my panties then I masturbate while I text Chad.\n\nMe: I just got back from two weeks of no sex in the Amazon Rainforest and I could really use a lay...\n\nI lay my head back and close my eyes while I finger my gushing hole hard and fast. The squelching, squishy sound is louder than my radio's music.\n\nMy phone buzzes in my other hand right as the climax starts to build.\n\nChad: Damn, I was just thinking about you, Lena. And you know I'd be more than happy to help you with your dry spell. My place or urs?\n\nMe: I'll come to you. Picking up food from our old spot. Want anything?\n\nChad: Riverside? If so, you should know haha.\n\nMe: Wings and loaded cheese fries ;).\n\nChad: Nobody knows me like you, gorgeous.\n\nRiverside Bar &amp; Grille is the college bar everyone from Jacksonville University went to after they turned twenty-one because it was right on campus by the water. It's was also the first stop for my twenty first this past February. It's also usually the place where people flock to right after class on a Friday. Since today is Friday, and since it's currently happy hour, this place is already pretty busy.\n\nMy womb's occupant twirls and slithers as I approach the open stool by the bar. To my right, there's a loud, drunk blonde. To my left, there's a rather handsome guy with long sandy brown hair sipping a beer while he watches the game. And the moment I look at him, I can't seem to look away.\n\nStrong jaw line. Muscular arms. Long healthy hair that I just want to rake my hands through. Big hands. And big hands equals big cock, so... His cock in me right here in this bar's bathroom.\n\n\"Hey,\" he says with a big bright smile when he catches me drooling.\n\nI grin, fighting the urge to rub my pussy at the thought of letting this stranger take me. \"Hello!\"\n\n\"You eyeing my beer, missy?\" Smirking, he arches a brow.\n\n\"Yeah, let's go with that.\" I giggle, giving him a wink.\n\n\"Hm...\" he hums, his grin widening. \"If I buy you a beer, will you tell me what you were really staring at?\"",
        "\"It takes more than one beer to get me to loosen up, hon...\" I waggle my eyebrows then give him fuck me eyes.\n\nHon? God, who even am I right now? I never flirt like this with anyone when I'm sober... Not to sound vein, but I'm the kind of girl who's been approached by modeling scouts ever since tenth grade, and guys always seem to flock to me whenever I'm out with my girls, so I'm used to being hit on. But, even when I meet a guy I actually like, I never flirt this hard right off the bat.\n\nIntrigue flashes in his eyes. \"I see... Four beers then?\"\n\n\"I might have time for two at the most.\"\n\n\"Oh, meeting someone?\"\n\nI shake my head. \"I called in a food order to go.\"\n\n\"Oh, that's a shame. I was hoping to have a little time to get to know the gorgeous blonde with the perfect smile and the hypnotic sapphire eyes who can't seem to stop smiling at me.\"\n\nMy cheeks flush and my pussy throbs as my chest heaves. Arousal. Building... \"Guess we'll have to have a cram session then.\"\n\n\"Sweetheart, I'm a procrastinator so I love me a good bar cram session. How does three shots and a beer sound?\"\n\n\"Umm, like a DUI because I've got to drive.\"\n\n\"Two shots and a beer then?\" he smirks.\n\n\"Alright. Dealer's choice.\"\n\nHe raises his hand to flag down the bar tender. \"Before I go falling for you any further, you don't have a boyfriend, do you?\"\n\n\"Nope.\" I smile, holding his gaze. \"Single as a pringle.\"\n\n\"Best news I heard all year.\" He turns to the bartender. \"A Miller and four shots of whiskey, good sir.\"\n\nThe bar tender nods then heads over to the liquor shelves.\n\n\"I'm Blake by the way,\" the hunk says, offering me his large hand.\n\n\"Lena,\" I say, shaking it. God, having his skin against mine sets me on fire, and I end up involuntarily caressing the base of his hand during the greeting. And, as he unclasps my hand, I gently rake my fingers across his palm up to his fingers.\n\nHis face lights up. \"Quite the handshake technique there.\"\n\n\"Sorry. I've been really touchy feely lately.\"\n\nHe raises his hands in surrender. \"No complaints here.\"\n\nThe bartender sets down a tray of shots before us then places a beer in front of me.\n\n\"Uh, excuse me,\" I blurt out, \"I called in an order pickup. Name's under Lena.\"\n\n\"It'll check on that for you,\" he says with a nod.\n\nI grab a shot. \"Cheers, Blake.\"\n\n\"Cheers,\" he says, clinking my glass.\n\nI down the shot, slam it on the counter, down the next one, then I reach for the beer as Blake is just taking his second shot.\"\n\n\"Impressive...\"\n\n\"Why, thank you!\" I close my eyes and grin.\n\n\"You're too cute, Lena.\"\n\n\"And you're fucking handsome.\" I turn away and chug my beer.\n\n\"Oh yeah?\"\n\n\"Yeah. Why do you think I couldn't take my eyes off of your when I sat down and saw you in the corner of my eye?\"\n\nHe grins. \"The alcohol didn't even hit your bloodstream yet and you're already all loosened up, huh?\"\n\n\"Blake, I woke up loosened up today.\" I giggle nervously, brushing my hair back over my shoulder as I look away shyly.\n\n\"So, you just wanted free drinks, is that it?\" he snickers.\n\n\"That's not all I wanted...\"\n\n\"Oh yeah? You feeling loose enough to tell me what else you want? I mean, you got drinks, you got food on the way--what else can I help the beautiful Lena with?\"\n\nThe arousal is so intense that I have to clench my thighs together. \"You live close by, Blake?\"\n\nA sinful smile creeps onto his face. \"As a matter of fact, I do. I'm right across the street at Eagle Pointe. Twelve-minute walk from here. Why do you ask?\"\n\n\"Hmm... Just trying to see whose place is closer...\"\n\n\"Oh...\" He searches my eyes. \"Any particular reason?\"\n\nI chug my beer, slamming the empty glass down and pausing to catch my breath. \"Well, when I walked in here, I intended on taking food over to my asshole of an ex's place, because I've been a in bit of a drought, if you know what I mean, and I have a bad habit of running back to him whenever I get so horny that I feel like I want to scream.\"\n\n\"Sheesh... Well, in my experience, backsliding is never a good idea, Lena.\"\n\n\"Tell me about it...\" I nod. \"You see, now that I've met this nice, funny, hot hunk at the bar, and since it feels like he and I have this instant heat, I'm tempted to leave here with him for some no strings attached fun instead of hooking up with someone I know I'll regret for the rest of the summer.\"\n\nBlake smirks. \"It's the bartender, isn't it?\"\n\nI crack up, leaning into him as I laugh, because I need to touch him--I need to be touched. Bad. When I sit upright, I slap his firm chest, giving his pectoral muscle a light scratch. All I can think about is ripping his shirt off and having him fuck me against this bar for everyone to see. My pussy throbs at the thought. \"It's you, dufus...\"\n\nHe chuckles. \"Oh, good. Because I was hoping I wasn't the only one feeling like there this really good vibe between us.\"\n\n\"Oh, you're not.\"\n\n\"If you want to get out of here after your food is ready--\"\n\n\"Did you walk here?\" I interrupt. My words come out breathless.\n\n\"Yeah.\"\n\n\"I'll drive.\"\n\n\"Wow. A twelve-minute walk isn't quick enough for ya, huh?\"\n\n\"When I said that I'm so horny I want to scream, I wasn't exaggerating.\"\n\n\"Sheesh. You're like a cat in heat!\" he chuckles.\n\n\"Blake, you have no fucking idea how bad I need to get laid...\"\n\n\"Um, if you want to get out of here now and come back for your food--\"\n\n\"That. Let's do that.\" I jump off the stool. If he didn't suggest it, I was about to ask because I can't wait. The alcohol is already hitting me and the euphoric haze is making me hornier and more delirious than I was this morning.\n\nHis face lights up. \"Or we can do that.\"\n\nHe throws his beer back, reaches into his pocket and slaps a bunch of twenties on the counter.\n\nI take his hand and drag him to the exit, caressing his palm as I powerwalk out to my car. As soon as we're both in the car, my body moves on its own, lunging over the center console armrest, cupping a hand behind his neck and pressing my mouth against his with desperation, plunging my tongue in his mouth. When his tongue sides past mine, this intensifying body high makes it feel like the softest, slipperiest thing in the world, and it drives me mad.\n\nWhen the urge to be fucked overpowers me, I part my lips from his, lean back in my seat, and begin unbuckling my shorts.\n\n\"We're doing this here? While the sun is still up?\" Blake asks, beaming.\n\n\"No,\" I say, taking his hand. \"I want you to feel how fucking wet I am for you.\" I lift the waistband of my panties and guide his hand in.\n\nPleasure explodes as he drags his hand across my mound on the way to my clit, and I moan really loud when his wide finger slips between my folds.\n\n\"Fuck, Lena...\" My cunt squishes loudly as he plunges his finger into me, and I cry out. \"Baby, this is the wettest, slipperiest pussy I have ever felt in my entire life. Fuck!\"\n\nI moan again as fingers me again, curling his finger upwards. The next thing I know, my hand is on his crotch and I'm stroking my way up the long and girthy, rock hard sausage in his pants. \"Wait until you feel how good I feel against your bare cock...\" I pant like I've just ran seven miles, dragging my fingers down his length.\n\n\"Oh fuck...\" He fingers me harder as his cock throbs in my hand.\n\nIt takes everything to pry my hand off his dick so I can start the car. \"Keep fingering me while I drive. I can't wait.\"\n\n\"You got it, sweetheart.\" When he slips a second finger in, there's a loud gush that makes my panties flood with slime.\n\nMy pussy throbs from his fingering. The hypersensitivity makes it feel so good that the pleasure intensifies the already heightened euphoria and puts me in a trance. I barely break in time when I realize the cars at the red light are standing still. As an orgasm builds, my thoughts fade and my vision blurs, and all I hear is my hard breathing and the gushing of his fingers working in and out of me. Then I swerve into the curb and it snaps me back to reality.\n\nBlake snickers. \"You drunk already, Lena?\"\n\n\"No,\" I pant. \"You're making me feel so good my mind blanked for a second.\"\n\n\"Good thing we're almost there. Turn left. Right here.\"\n\nI cut the wheel hard and pull into the guest spot that he's point to. As soon as I park, I cut the engine and Blake pulls his hand out of my pants, glazing my shirt and the armrest with glistening lines.\n\nHe stares at the strings of goo dangling off of his fingers. \"Sweet baby Jesus...\" he says, rubbing the slickness against this thumb. He pulls his fingers apart slowly and beams at the sight of the milky slime stretching between his digits like snot. \"How? How are you this fucking wet?\"\n\nI grab his hand and bring it to my mouth, then I suck the sweet goo off of his fingers. \"It's a gift and a curse.\" I open the car door then scramble out.\n\nWe meet at the sidewalk in front of the car and I mash my lips into his. My tongue explores his mouth with desperate hunger as he steers me toward his apartment. The euphoria and hypersensitivity of my skin intensifies, and the arousal scrambles my thoughts until I slip into a trance-like state.\n\nThe only thought in my mind is, 'Dick now. Fuck me now.\"\n\nMy vision starts to blur. Sounds fade. All I feel is pleasure from his hands squeezing my ass as his tongue explores my mouth. One minute we're making out in front of his door, the next, I'm on the edge of his bed and I'm naked. There are no transitions.\n\nI'm losing time, I think, staring in awe at the massive cock that's just sprung free from his shorts. I'm losing time like I did this morning.\n\nJust like that, I'm on my back and glorious, pleasure explodes below as his bare, girthy sausage slowly stretches my hole on route to my cervix. In and out, he pumps into my tight, gushing cavity at a moderate pace.\n\n\"Faster,\" I whimper. \"Harder!\"\n\nBlake starts slamming into me, his flesh clapping against mine with enough force to make my A-cup tits jiggle like mounds of Jell-O in an earthquake, my cunt squelching around his girth loud like someone is fisting a tube full of pudding.\n\nThe climax builds and builds. Suddenly, all I want is to be on top. \"Let me ride you,\" I pant out.\n\nHe rolls me over without pulling out and I begin riding him hard and fast, slamming down into him with more force than I've ever ridden anyone. It hurts so good it makes me scream.\n\nThe orgasm strikes like lighting--sharp and hard. My walls contract hard around him. My uterus spasms. Sweet pressure builds in my cervix.\n\nThe Uteroboscis... I keep getting so whacked out from the euphoria and blinding arousal that I forget it's in there--I forget why I keep going into a sexual frenzy.\n\n\"Fuuuuuck!\" Blake groans, his core spasming as his facial expression contorts. \"I'm coming!\"\n\nAfter what happened with that dildo, I know I should pull him out of me, but I'm so gone, so desperate to keep the orgasm going, I keep riding him at the same pace because I give zero shits for what will happen to this man when my womb worm comes out to drink the cum out of this man's cock. All I know is that I need cock, and I know the worm needs cum. That's the only thing that will make the maddening horniness go away--the only thing that will shatter this trance.\n\nAs the bulge pulses pleasantly in the vaginal end of my cervical hole, I slow down, only bouncing on the top half his cock to keep his rod from battering the worm to death while it's still rooted inside my uterus.\n\nI must keep my Uteroboscis safe until it leaves.\n\n\"Ah!\" he grunts as his big cock begins to throb, his core spasming hard. \"Ah! Fuck! Yes!\" Then he flinches like something hurt him.\n\n\"You okay?\" I ask, still grinding on the top half of his thick rod with shallow descents, being extra careful to keep my movements slow and steady so he doesn't wind up with a ripped off proboscis in his urethra like my sex toy almost did.\n\n\"Yeah,\" he groans. \"For a second there, it felt like my load got stuck in my dick.\" He chuckles tiredly.\n\nTake what you need, parasite, I think, imagining the proboscis feeding directly from inside his penis while I continue the shallow, slow ride of his softening cock. Fill up on cum and come on out soon, please.\n\n\"I think you're just mashing it around at this point,\" Blake says after almost a minute, snickering.\n\nI giggle as the fog lifts from my mind. \"Oh, sorry... You just feel so fucking good. Hold on.\" I reach back and curl my fingers around his super slimy cock as I look underneath me, blocking his view with my curtain of hair.\n\nWhen his mostly flaccid penis leaves my hole, it unleashes a glob of clear, snotty-looking goo. Through the slime, I see translucent tendrils webbed all over the head of his cock--I see the white, pulsating proboscis inside of his urethra. And that's not all. There's also a tiny bulge raiding down the mouth noodle towards his cock.\n\nUm is it eating semen or throwing up in his penis?\n\n\"Everything okay?\" he asks, panting.\n\nSuddenly, mental clarity returns to me in a flash. \"Yeah, one sec,\" I say with panic in my voice now that the realization of what I've done leaves me guilty and anxious.\n\nI move my fingers up his flaccid cock to the proboscis. Then, I pull the tube right as the round bulge inside disappears into his tip.\n\nWhat the fuck was that? I'm so glad he can't see this...\n\n\"Urgh,\" he groans. \"What are you doing down there? Feels like you're pulling something out of my dick or some shit...\" A nervous chuckle escapes him.\n\nMy heart starts racing. I tug a little harder, then the white proboscis slips out of his penis. The second I let it go, it snaps back inside of me, slapping around inside my vagina like a cold noodle during my dismount of Blake. It tickles so fucking good that I whimper.\n\nI lay on my back and look over at Blake, giving my finger a suck. \"I saw a bead of cum on the tip of your cock and I wanted it. Sorry if I fingered your pee hole too hard.\" I smile nervously as the womb worm throbs and writhes its way up to my uterus.\n\nHe grins. \"You are one kinky girl, Lena.\"\n\nI smile back. \"Trust me, I'm not usually like this. I don't do one-night stands or have unprotected sex or do kinky shit. I'm as vanilla as they come.\"\n\n\"Glad I met you on a weird day.\"\n\nI sit up when I feel the worm bulging against my belly. \"It's been a weird week.\" I plant a kiss on his lips. \"Thanks for the amazing lay. I should probably go get my food before it gets too cold.\" I crawl out of bed. \"Oh, and sorry for gushing all over your sheets.\"\n\n\"No worries, sweetheart.\" He sits up, staring at the slimy mess on his crotch and sheets. \"Can I have your number? I'd love to see you again.\"\n\n\"Yeah, sure. Let me just clean up quick.\"\n\nWhile I'm in the bathroom wiping off my vagina and washing my hands, the euphoria and body high wanes a bit. After I get dressed, I step back into his room then put his number in my phone. I practically run out the door after that.\n\nOn the way to my car, the horniness fades and my thoughts have become clear. This is exactly how I felt after I used that ejaculating dildo to inseminate myself this morning. By the time I get climb into the driver's seat, my heart is throttling. A pit forms in my stomach and I feel nauseous when the realization of the fucked-up thing I did to that poor guy sets in.\n\nWhat the fuck was that bulge in the worm's proboscis? Did it put something in him?\n\n\"Fuck!\" I scream, slamming the steering wheel repeatedly as the worm slithers rapidly around in my womb.\n\nI shouldn't be fucking anyone while this thing in is in me! Especially when I don't know what this womb worm is doing when it sticks its feeding tube into a penis. Who knows what sort of danger I put Blake in!\n\n\"It's not like you're doing it on purpose, Lena,\" I reassure myself. \"Everything that happened since I met him at the bar felt like a dream I was helpless to stop. Then I legit blacked out a few times between the restaurant and Blake's bed...\"\n\nWhen I get horny and start feeling all loopy and high like that, it's like I go from not thinking to blacked out, then I turn into some sex crazed zombie...\n\n\"It's like this womb worm is controlling me, and it doesn't give me back control until I both orgasm and have a bare penis ejaculate inside me...\"\n\nBut why? Is there some hormone in semen that interferes with the parasite's cocktail of compounds that breaks the spell? I thought it was just feeding, but after I saw that round bulge get forced into Blake's pee hole, I'm not so sure...\n\nAfter I picking up my food, I went straight home. When I texted Chad earlier, I wasn't in the right state of mind. And, as much as I hate him for how he treated me when we were together--for cheating on me twice, being around him when the next sexual frenzy hijacks my mind doesn't seem like a good idea when my parasite might put his manhood and possibly even his life in danger. He deserves to be punished, but not like that.\n\nIt's barely an hour after I finished eating when I start feeling all drugged with intense bliss. The urge to touch myself comes on fast and my pussy throbs needily. My skin tingles all over and I feel flushed as dizzying cloudiness erodes my thoughts like a wave to sand art.\n\nThis estrous cycle--this cycle of going into heat just keeps coming back, I think, slipping my hand in my pants.\n\nJust as I'm sliding my fingers into my slimy tightness, there's a random knock at the door. I'm not expecting anyone, but I imagine there's a handsome man on the other side of the door who can bend me over my couch and give me sweet relief from this hypnosis. The next thing I know, I get up and start walking to the door, unlocking it without even checking the peephole or asking who it is. Thankfully, I do have just enough sense to pull my hand out of my pants and wipe the slime off on my shorts before opening the door.\n\n\"Chad?\" I say, staring at the douche before me. The confusion from finding him outside my apartment sobers me up enough to keep myself from grabbing him by the junk and making out with him. \"What're you doing here?\" I say, my words coming out breathy like a moan.\n\nHe cups the side of my face and electric pleasure tingles from my cheek up my scalp and down my spine, making my vagina flex hard. \"You never showed up, and you weren't responding. I was worried.\"\n\nI bite my lip and I suddenly realize my hand is on the hand he has on my cheek and I'm caressing him gently.\n\nThe next thing I know, my mouth is against his, and I'm not sure who kissed who first.\n\nThen, boom, I'm naked on my couch with my legs spread and he's scrambling to get his pants down.\n\nOne minute, there's a condom in his hand, the next, I'm tossing it across the room as his bare cock slides in and fills me.\n\nChad groans. \"Holy shit, Lena!\" A moan escapes him. \"You're slippery as fuck! I've never felt you gushing like this before.\" With each slow thrust, he grunts. He speeds up only to slow right back down a second later. \"I don't think I'll be able to last long.\"\n\nSuddenly, I'm being fucked so hard that my head is ramming into the armrest.\n\nWhen the orgasm strikes, when my pussy and uterus flex together in sync, the worm quickly burrows down into my cervix with ease like the path leading to my womb is permanently being stretched wider with each tunneling. I grab Chad and roll us off the couch then he crashes back-first onto the floor. Now I ride him cowgirl, nice and shallow like I did Blake a few hours ago. He comes in seconds, like my orgasm commanded him to.\n\nClarity slowly comes back to me as the wide creature throbs in my cervix. Like before, I reach underneath my vagina, look back and slowly pull his softening cock out of me. And there it is, the proboscis is throbbing inside his pee hole just like it was with Blake and my dildo. This time, two round bulges are quickly working their way into his tip instead of one...",
        "I tug the worm's white mouth tube and Chad flinches hard. \"Ah! What was that?\" He starts to sit up but I push him down.\n\n\"Sorry!\" I blurt out, pulling on the fleshy, slimy rope out a bit faster. It glides right out and its tendrils retract, but the little bulges I saw a bit ago are nowhere to be found...\n\nI don't see them because they're in his penis...\n\nDuring my dismount, the proboscis wiggles as it snaps back into my hole, and a mini orgasm ripples through me when the Uteroboscis twists and throbs and squirms back to my womb. \"Ugh!\" I moan.\n\n\"How are you coming again?\" Chad asks, staring at the gooey mess on his crotch. \"And why the fuck is your cunt so fucking slimy?\"\n\n\"Don't be rude... I've just been extra wet lately...\"\n\n\"It's hot, but it's kind of like fucking a giant, sexy slug!\" He grins.\n\n\"Chad, you're such a dick!\" I say, grabbing his shorts and throwing them at him. \"Leave! Now!\"\n\n\"What about my wings?\" he asks as he rises.\n\n\"I ate them! Now please get the fuck out.\"\n\n\"Alright, fine. Let me clean all your slug slime off of me first.\" He chuckles.\n\nI kick him in the butt right as he's heading to the bathroom.\n\nWhen he leaves a few minutes later, I slam the door, lean against it, and slide down it until my ass hits the floor.\n\nThe maddening arousal is getting more frequent and more intense as the hours pass, and the zombielike trance that comes at peak horniness is getting worse... Like, I keep losing more time during each heat cycle and everything that happens feels like a dream until I cum. Is this what the rest of my life is going to be like until this thing decides to crawl out? I'm going endlessly keep going into heat, keep blacking out, and keep taking dick after dick whenever I run into a guy? If this keeps up, pretty soon I won't be able to function... I'll be fucking every other hour...\n\n\"Getting jizzed in isn't helping this thing get out of me any faster. I need to try something else...\""
    ],
    "authorname": "bl_overman",
    "tags": [
        "worm",
        "alien",
        "extreme",
        "aphrodisiac",
        "woman masturbation",
        "solo masturbation",
        "body modification",
        "insect",
        "ovipositor",
        "impregnation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/amazonian-womb-worms-ch-06-07"
}