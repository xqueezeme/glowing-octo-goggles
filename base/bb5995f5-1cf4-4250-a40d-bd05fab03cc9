{
    "title": "The Trail West Ch. 06",
    "pages": [
        "If you've hung in with the story until now, thank you. If you're just getting started; welcome.\n\nI suggest you read Chapters 1-5. They will give you a better understanding of the characters and situations.\n\nThere are no graphic sex scenes in this story. As usual constructive comments and emails are welcome and appreciated.\n\nThank you for taking the time to read my tale and please enjoy.\n\n**********************\n\nJosh and Red came to the base of a large gently sloping hill; they'd been following the tracks of ten cattle and three horses for most of the day. It had to be the rustlers trail. Now the two young men stopped to give their horses a breather. \n\n\"Red, how's Jasper holding up?\" Josh asked about Red's horse.\n\n\"He's mad because I've kept him at walk for the last two hours. He'll do,\" Red answered.\n\n\"Diablo's in good shape too. I'm thinking if we cut over the top of the hill we can cut down the lead they have on us,\" Josh suggested. \"What'da you think?\"\n\n\"Sounds good, I'd like to get closer before it starts raining,\" Red replied pointing at the low lying dark clouds.\n\nThey were mounted on two of the finest horses in Colorado and knew they could run down just about anybody or anything. Josh led the way over the top of the hill and down the other side stopping to examine the tracks again.\n\n\"I'd say we picked up about a half hour on them Red. Wonder why they're not traveling faster,\" Josh remarked.\n\n\"Those cattle aren't Texas Longhorns; they're mostly Hereford cross breeds. They can't be driven as hard as Texas cattle,\" Red answered.\n\nThey are no sooner started on the trail again when it began to rain. It wasn't a gentle rain. It came down in sheets reducing visibility to just a few feet; the two riders couldn't see much beyond the head of their horses. And the rain washed out the trail. They continued riding in the general direction that the cattle had been going.\n\nJosh was a good tracker having learned from Mali Reece, a Cheyenne woman, back home in Missouri and from hunting in the hills around his father's farm. As the rain stopped, Josh had to admit they had lost the trail. They followed what had been a small stream that turned into a raging torrent. Climbing out of the draw to high ground again, they were confronted by five men. Josh recognized one of them.\n\n\"Hello, Mr. Larson. Nice to see you again,\" Josh greeted the man.\n\n\"What are you doing on my spread?\" Larson asked.\n\n\"We were following the trail of some stolen cattle but lost them in the rain. Didn't know we were on your land,\" Josh answered.\n\n\"Well now you know, so get off my ranch,\" Larson ordered. When he said this the four men with him got tense, waiting for something to happen.\n\nJosh looked at Larson and the other men, his smile slipping from his face, then said, \"We'll leave Mr. Larson but we'll be come back if necessary.\"\n\n\"What's that suppose to mean?\"\n\n'It means that the trail was leading to your spread before we lost it in the rain. If we find it again we'll follow it no matter whose land it crosses,\" Red told him. \"If you're gonna stop us now's as good a time as any.\n\n\"There's five of us boy. You don't stand a chance,\" Larson bragged.\n\n\"We're not looking for trouble,\" Josh said. \"But if shootin starts you'll be the first to go Mr. Larson. Won't much matter what happens after that, at least not to you.\" \n\nLarson looked hard at Josh and Red. He didn't see any bluff in their faces. \"Get off my land\" he said and turned his horse around and rode off. His men waited a few seconds and then followed him.\n\nJosh and Red turned back toward the Maggie M. They felt that Larson was involved in the rustling but couldn't prove it. They talked in low voices and had been riding for about 10 minutes when Josh stopped and motioned for quiet. Red listened for a moment and then heard it too. It was the sound of cattle that were upset.\n\nThey scouted around and found a trail that had been made after the rain stopped. Following the tracks for about a mile Josh signaled a halt. Using sign language he told Red to wait with the horses and he would scout ahead a ways. Red wasn't happy with that idea but Josh was a much better tracker so he agreed to wait.\n\nJosh took off on foot keeping behind cover where ever he could. He had been gone for almost 20 minutes and Red was getting worried. Then he heard Josh calling him to bring up the horses. Red mounted and leading Diablo soon joined Josh. He found Josh, the cattle, and a stranger at the head of a small box canyon. \n\nThere was a man kneeling on the ground and Josh held him at gun point. \"There's Daniel's cattle Red, all rounded up and waitin for us. This feller was just sitting under a cover tryin to keep dry.\"\n\n\"Who is he? He looks familiar, like I've seen him before.\" \n\n\"He won't tell me but maybe he'll tell the Sheriff,\" Josh answered. \"We'll drive the cattle back to the Maggie M and take him to town tomorrow.\"\n\n\"Good. It'll give me a chance to see Sarah sooner than this weekend,\" Red responded with a big grin. \n\nThey tied the man's hands in front of him, got him on his horse, and then tied his hands to the saddle. Josh said, \"Mister if you try to run, we'll catch you and tie you face down across your saddle. Either way, sitting up or face down, you're coming with us back to the ranch. It's your choice how you get there.\"\n\nJosh and Red started the cattle back toward home and the man rode at the back of the small herd with Josh. Red rode point and helped keep the cattle headed in the right direction as Josh drove them from behind. It took the better part of the day to get the animals back near the ranch house.\n\nDaniel and the whole family came out to greet the three men. Josh took their prisoner down to the barn and tied him in a stall. Red was telling the Maguires about Josh scouting ahead all alone.\n\n\"How'd you know there was only one man guarding the cattle?\" Maggie asked.\n\n\"The tracks showed three horses going in but only two came out of the box canyon,\" Josh answered. \"The one that stayed had a loose shoe on the left front. The horse would have gone lame in another few miles. My guess is that they left the man there to guard the cattle and went to get another horse somewhere.\"\n\nThat evening Josh and Daniel went to the barn. Josh brought the prisoner some supper while Daniel fixed the loose shoe on the man's horse. The rustler finally told them that his name was Carl but refused to answer any more questions.\n\n\"Just so you understand Carl, you're going to be the one punished for rustling. Not the other two that were with you, just you,\" Josh explained. \"I don't know about out here but back home they hang cattle thieves.\"\n\nThe prisoner's face turned white. From his reaction, Josh guessed that they hung cattle thieves in Colorado too. \"Think about it Carl.\"\n\nRed and Josh brought Carl some breakfast the next morning; Carl still refused to tell them who had been with him. The only thing he did say was \"My boys will take care of me.\" They tied Carl's hands and helped him mount and started for town. This time they led his horse; Josh was concerned that the man would try to escape and he didn't want to have to shoot him..\n\nThe men rode three abreast on the wagon road. As they came out of a small gulley, Josh tensed, glanced around and looked at Red. \"Stay loose Red. Somethin don't feel right,\" Josh warned his friend.\n\nThe words were barely out of his mouth before they heard a rifle shot. Carl pitched over the rump of his horse and fell to the ground; he'd been shot through the chest. Red and Josh spurred their horses in different directions into some cover and jumped off. They pulled their rifles from the saddle scabbards as they dismounted.\n\nThey scanned the hill tops and stands of cedars looking for the shooter. After 15 minutes they remounted and rode back to where Carl's body lay on the ground. Red rounded up Carl's horse and they tied him over his saddle; they would still have to take the body to town. \n\nRed finished securing Carl's body to the saddle and said, \"Well he was right. His boys did take care of him.\"\n\nOnce they got to town they rode to Sheriff Horton's office. Josh explained about the stolen cattle, catching Carl, and the rifle shot that killed him.\n\n\"Any idea who did it?\" Horton asked.\n\n\"Didn't see em,\" Josh replied. \"But it was a big caliber rifle like a Hawken or a Sharps, I know the sound. There wasn't any cover for over two hundred yards; a mite far for that kind of shootin with a Henry or Spencer.\"\n\n\"My guess would be this guys partners shot him to keep him from naming whose was in it with him,\" Red added. \"Ifin you're done with us, I'd like to see Sarah before we head back to the Maggie M.\"\n\nSarah and Danni had left the ranch for town the same morning that Josh and Red started tracking the stolen cattle. Fine idea Josh thought; I'd like to see Danni. Sheriff Horton nodded and the young men rode away, Red toward the school house and Josh toward the freight office.\n\nDanni had her head down working in a ledger when Josh walked into the office. \"Be with you in a minute,\" she said without looking up, \n\n\"I don't know if I can wait that long Miss,\" Josh replied.\n\nDanni raised her head and saw him standing there smiling at her. She was surprised at how happy she was to see Josh. \"What are you doing here?\" Danni asked. \"I mean it's good to see you Josh but what brings you to town?\"\n\nHe explained about recovering the stolen cattle, catching Carl and the ambush where he was killed. \"We had to bring his body into the Sheriff so we thought we'd make the trip worthwhile. And here I am. Hope you don't mind,\" Josh finished with a grin.\n\nDanni stepped close to Josh took his hand and said, \"No, I don't mind at all.\" She went to an open office door and said, \"I'm going to an early lunch Mr. Whitworth.\"\n\nJosh and Danni had just sat down at the caf\u00e9 when Red walked in and joined them. \n\n\"You get to see Sarah?\" Josh asked.\n\n\"Yes sir, I did. We got to talk for a few minutes while the kids were at recess but then she had to go back to teachin.\"\n\n\"It's a shame you couldn't spend more time with her,\" Danni said.\n\n\"Yes ma'am it is. That's why I'm gonna wait until we can have supper together before I head back. There'll be a Comanche Moon tonight so I'll be able to make my way back to the Maggie M pretty easy.\"\n\n\"Comanche Moon? What's that?\" Danni asked.\n\n\"It's a full moon,\" Red told her. \"Folks back in Texas called it that because Comanche's like to attacked by its light.\"\n\n\"I know you're afraid of the dark Red so maybe I should just wait and ride back with you. Sorta hold your hand, don't you know,\" Josh said to Red but with a grin at Danni. She giggled and he continued, \"Miss Danni would you like to have supper with me this evening?\"\n\nShe agreed and they made plans to meet at Mrs. Cassidy's boarding house and then walk to the caf\u00e9 for supper. After lunch and walking Dannie back to the freight office, Josh and Red went to the general store to pick up a few things and to say hello to Mr. Mitchell the owner. Included in the supplies they bought was some stick candy for Jerry and Jacob. Of course Red had to try a piece to make sure it was good enough for the boys.\n\nJosh walked in front of a full length mirror in one corner of the story and stopped to look at his image. \"Ya know Red I'm gettin a little scruffy lookin. I think I'll get a new shirt and pants.\" Still looking at himself in the mirror he said, \"We've time to spare so maybe a haircut and shave wouldn't be a bad idea either. It's not every day I take a pretty girl to supper.\"\n\nRed joined Josh at the mirror, nodded and said, \"For once I think you're using your head for more than a hat rack. Good idea.\"\n\nThey each selected a pair of pants and a shirt and added them to the supplies. As they were paying Mr. Mitchell, he told them that the barber had a bathhouse out back. \"You boys can get a shave, haircut, and a hot bath for a dollar.\"\n\nAt the barber shop they were told it would take about an hour to get the bathhouse warmed up and water heated. They decided to get a beer at the saloon and come back in an hour. Red had just drunk a shot of whiskey and started on his beer when a big man stood next to him at the bar.\n\n\"Well son, I guess my information helped you. Y'all still here.\"\n\nRed looked at the man and after a few seconds recognized Bill Thomas, the freight driver that he had talked to in Pueblo. \"Yes sir it did. I'm working for the Maggie M and my partner here is training horses at the S Bar S. Let me buy you a whiskey.\"\n\n\"I've never turned down a free whiskey.\" The three men talked for a few minutes and Bill said, \"I heard you boys brought in Carl Davis draped over his saddle. What happened?\"\n\nJosh and Red explained about catching Carl with the stolen cattle and how he was shot as they were bringing him into the sheriff. \n\n\"Knew that boy was no good. Figured he's end up shot dead or hanged. I'm surprised y'all didn't shoot him the first time you had a run in with him.\"\n\n\"First time?\" Red questioned.\n\n\"Yeah I heard you two faced down Carl and his two friends, Rafe Johnson and Barry Summers when they were botherin the Maguire girls.\"\n\n\"That's where I seen him before,\" Red replied snapping his figers. \"I just couldn't remember where.\"\n\n\"Carl and his friends are bad ones are they?\" Josh asked.\n\n\"Yep, none of them worth the powder to blow them to hell. They sure found a home with the rest of that scum that works for Larson,\" Thomas said. \"How bout another drink sonny?\"\n\nRed motioned for another whiskey for him and asked, \"So Carl and his bunch work for Tom Larson?\"\n\nThe freight driver nodded and knocked back his whiskey. \"They did last month when I was here.\"\n\n\"How'd you hear about our run in with those boys? I mean you're on the trail most of the time.\"\n\n\"There are two places that men gossip like old women; the barber shop and the saloon. I always get a bath and a shave at the end of a run, whether I need em or not. And I surely do like a saloon; so I hear a lot of what's happened while I been gone.\"\n\nRed and Josh thanked him for the information and started back toward the barber shop.\n\n\"That sure puts in fox in the chicken coop, don't it Red? Let's get finished at the barber's and then go talk to Sheriff Horton before we meet the girls,\" Josh said. \"I got couple of questions I need to ask.\"\n\nRed had learned to trust his young friend's instincts and hunches; he nodded in agreement.\n\nAfter the boys dressed in their new clothes they came out of the barber's and headed for the Sheriff's office. They caught Horton as he came out of his door.\n\n\"Got time for a little talk, Sheriff?\" Josh asked. Horton nodded and motioned them into his office.\n\n\"You boys sure look spiffy, goin to church or something,\" he teased the young men. He knew very well why the boys had gotten cleaned up. \"What's on your mind?\"\n\nJosh grinned at the Sheriff's compliment and said, \"We heard Carl Davis was working for Tom Larson, is that true?\"\n\n\"Yeah he does or did I should say,\" Horton answered. \"He had a reputation for being a little free with a running iron. I figured he was doing a little rustling on the side.\"\n\n\"What about his friends Rafe and Barry, do they work for Larson?\" Josh asked.\n\n\"Yeah, now that you mention it, they do. You think those boys were with Carl?\"\n\n\"I'd bet on it,\" Josh replied. \"There were three horses drivin Maguire's cattle. Two riders came out of that box canyon and left Carl there. My guess is that it was Rafe and Barry.\"\n\n\"Makes sense, but it's not enough to arrest those two. Just because their saddle partner is rustling doesn't prove they're in on it.\"\n\n\"Sheriff, Mr. Sanders told Daniel that he hadn't had any problem with rustlers. He also said that Larson wasn't havin trouble either. Why would someone rustle cattle from the Maggie M and not the others? It don't make sense, both the other ranches have a lot more cattle that are spread out over a lot more land,\" Josh asked.\n\n\"It's almost like someone is targetin the Maguires. Like they're trying to run them out. Why would someone want to do that? Red asked, jumping into the discussion.\n\n\"Don't rightly know Red. I can't think of.....\" Sheriff Horton paused for a few seconds. \"Water,\" he said. \"I bet that's it.\"\n\n\"Water?\" Both Josh and Red asked. Josh continued, \"What about water?\"\n\n\"The Maggie M has the best water holes in the area. There's at least seven spring fed ponds on the ranch. You also got Black Squirrel and Chico Creeks. That's a powerful lot of water for these high plains. If the Maguires were forced out, whoever took over the Maggie M would get the water rights too. \"There's your reason boys, water rights.\"\n\n\"And Larson's place butts up against the Maggie M,\" Red said. His voice was soft and low like he was talking to himself. \"Might be time to have a talk with Mr. Tom Larson.\" \n\n\"Red don't go off half cocked, ya hear? All this is just talk right now, we don't know that Larson's behind the rustlin,\" Horton warned the young Texan. \"I don't want to have to come after you if you break the law so just sit tight until I can find out more.\"\n\nJosh looked at his friend and slowly shook his head and motioned Red to be quiet. \"Okay Sheriff, thanks for talkin with us. We'll tell Daniel what we talked about and see what he wants to do. Just so you know, if Daniel wants to go talk to Larson, we'll be goin with him.\"\n\nThey left the Sheriff's office and still had an hour before meeting the ladies. Red mentioned that he wanted the blacksmith to check out the right rear shoe on Jasper; it was wearing thin. He said that if the smithy had time, he'd have Jasper reshod. Josh agreed to go with Red; he wanted to see Sunny. \n\nSunny enjoyed the carrots that Josh had brought him and the men were waiting for Jasper to get new shoes. As they sat in front of the blacksmith shop, Rafe and Barry rode passed and turned in to hitch their horses in front of the saloon across from the livery stable. Red had been sitting with his feet on the hitching rail leaning back in a chair. When he saw the two men, he sat up quickly, and then stood.\n\nJosh saw the look on Red's face and the change in his friend. He had seen this side of Red before; when there was trouble Red became a deadly force. A force to be reckoned with. He put his hand on Red's arm to calm him down but Red looked at him and shook his head. \n\n\"Not this time Josh. Maybe the Sheriff can't do anything but I can,\" Red told him. Seeing the worry on Josh's face he said, \"Don't worry, I'm just goin to give those boys a friendly warning,\" he continued, grimly smiling at his partner. Josh nodded and followed Red toward the saloon.\n\nRed crossed the dirt street and called out to Rafe and Barry as they dismounted. They turned and tensed up when they saw Red and Josh.\n\n\"What'da you want Mister?\"\n\n\"I've got a message for you boys,\" Red told them. The two men could see that Red and Josh were primed for trouble. \"Mr. Maguire said to tell you to leave his cattle and his ranch be. No more rustlin his stock.\"\n\n\"I don't know what you're talkin about. We didn't steal his cattle; that was all Carl's doin. You tell Maguire that...\"\n\n\"That's horse shit Rafe. But I won't argue the point with you. You've heard the message, now hear the warnin. If anymore of his cattle get stolen or if anybody bothers him or his family, I'm comin for you.\"\n\n\"You don't have any proof Mister. The Sheriff can't arrest us without proof,\" Rafe said.\n\n\"The Sheriff don't come into this, I'm talkin about me. I'll come for you and it'll be me that deals with you,\" Red said. \"I'll finish both of you. That's not a threat, that's a promise. If anymore trouble comes the Maguire's way, I'll put you under.\" \n\n\"If you gun us down, you'll go to jail.\"\n\n\"Maybe so, but it'll be too late to do you boys much good.\" Red stared at the men; his eyes were piercing and had death in them. He stopped talking and looked back and forth between the two men. \"Y'all understand me clear; I'll kill you if you bother the Maguires again.\" With that final promise, Red turned and walked back to the livery stable and sat down in his chair.",
        "Josh stood staring at Rafe and Barry. \"Boys if I were you, I'd pay attention to what he said. I've never heard him threaten anyone. He normally acts instead of talkin. And just so you know, if he comes for you, I'll be comin too.\"\n\nRafe and Barry turned and hurried into the saloon as Josh went to join Red. \"Damn Red, what about not goin off half cocked?\"\n\n\"I didn't, they're still breathin aren't they. I promised not to take the law into my own hands and I didn't. I just gave those boys a friendly warnin. Well, maybe it wasn't so friendly but I did warn them instead of shootin them.\"\n\nJosh looked at his friend for a few seconds and then smiled. \"C'mon let's go meet Sarah and Danni.\"\n\nThe ladies were waiting for them when they got to the boarding house and after bundling up against the cold they all walked to the caf\u00e9 for supper. All four of them took off their coats and the girls saw that in addition to having been to the barber shop that the boys were wearing new clothes.\n\n\"Did you feel you had to get dressed up to talk to Sheriff Horton, Red?\" Sarah asked grinning.\n\nRed smiled and blushed. When Danni turned to Josh she didn't even have to ask the question to get him flustered. \"Well we thought Maggie might like to see us all cleaned up,\" Red responded.\n\nThis got all of them laughing. When they settled down, Josh said, \"There is something we should discuss.\" Red nodded and Sarah and Danni waited to hear what Josh had to say.\n\n\"With the rustlin from the Maggie M and Carl getting shot we think one or both of us should escort you ladies between town and the ranch,\" Josh suggested. \n\nSarah said, \"We're grown women and can take care of ourselves Josh. We don't need babysittin.\" She wasn't happy with Josh's idea.\n\n\"Yeah, you can take care of yourselves alright. Just like the day we meet you when Rafe and his friends were about to get all friendly with you,\" Red replied with an impish grin.\n\n\"Really Sarah, things are getting real serious around here. Your folks would feel better if you had someone with you. Let at least one of us ride back and forth with you for their peace of mind,\" Josh requested. \"And for mine,\" he mumbled under his breath.\n\n\"What was that last part?\" Danni asked. She knew very well what Josh had mumbled and was touched at his concern.\n\n\"It'd make both Red and I feel better if at least one of us was with you.\" Josh grinned and continued, \"If nothing else we can keep Sarah from shootin some poor soul who only wanted to say hello. I heard you've gotten a little trigger happy with that pistol Sarah.\"\n\nSarah sputtered and tried to argue with Josh but everyone started laughing at her and then she laughed too. \"Okay Josh, we give up. One of you can come meet us and then ride back with us, but only one. There's too much going on at the ranch to have both of you gone. Agreed?\"\n\n\"I knew you'd see it our way. How could you gals pass up riding all alone with two handsome cowboys like Josh and me?\" Red teased the girls. But deep down he was glad that he and Josh would provide protection for them. There's bound to be more trouble and I don't want them caught in the middle, Red thought.\n\nDanni said that she would arrange to have her work day end on Friday at 3 PM; the same time Sarah got finished at school. Then the girls and their escort for the day could make it back to the ranch before full dark. The days had gotten shorter as the winter season rolled in; it got full dark around 6 PM.\n\nAfter dinner on the way back to the boarding house Red and Sarah lagged behind; Josh and Danni were in the parlor for almost 20 minutes before they showed up. Waiting for the other two, Josh was a little shy talking to Danni. Finally to get him to talk more Dannie asked about his two favorite horses, Diablo and Sunny.\n\n\"I've had Sunny for 4 years or so and he's as good a horse as I've ever known; maybe with the exception of Diablo,\" Josh said.\n\n\"Which one is faster Josh?\" Danni asked to keep his talking. He relaxed when he talked about his horses and she could see more of the real Josh.\n\n\"Depends on what you mean by faster. If you ran them both at a gallop from here to the S Bar S, Diablo would be there about 15 to 20 minutes before Sunny. You'd have to give Diablo a breather before he could start back; a horse that big uses up a lot of energy running that hard. Sunny on the other hand you could turn around and start right back and he'd still be running at the same speed. He probably would be back at the start more than an hour ahead of Diablo.\"\n\n\"So Sunny is faster over a long distance?\" \n\n\"I guess you could say that. But both of them can go at a lope all day long, day after day. If I wanted to get to someplace like Pueblo in a hurry I'd take Diablo; but if I had to turn around and come right back without resting my horse, I'd take Sunny,\" Josh replied. \"But no matter which horse you'd take you'd be riding one of the best in the Colorado. Or any place else for that matter,\" Josh said with pride. \n\nDanni was smiling at Josh's intensity and obvious love for his horses. She took his hand in hers and said, \"See, it's not that hard to talk to me. Is it?\"\n\nJosh returned her smile and shook his head. \"Don't know of anyone I'd rather be talking to Danni.\"\n\nBefore either of them could say anything more, Red and Sarah come through the door and into the parlor. \"Where have you two been?\" Danni asked teasing them.\n\n\"I was showing Sarah how to find what direction is north by using the North Star,\" Red deadpanned. \n\n\"Sarah already knows how to use the North Star,\" Danni replied.\n\n\"Well now she knows how to use it the Texas way,\" Red responded. \"Besides, there's no such thing as too much education. Right Sarah?\"\n\nRed's antics made all of them laugh. After the girls quit giggling, Josh said, \"Hate to break this up but we need to head back to the ranch. C'mon Red, let's hit the trail.\"\n\nRed realized that none of the boarders were around and Mrs. Cassidy was busy in the kitchen. He pulled Sarah to him and kissed her; telling her he would see her Friday. Sarah returned the kiss for a few seconds and then pulled back blushing. Red gave her a big grin and walked out the front door.\n\nDanni followed Josh to the door and just before he left she kissed him on the cheek and said, \"Thanks for a lovely evening Josh. I hope we can talk some more this weekend at the ranch.\"\n\nOn the way to the stable to get their horses, Red said, \"Josh, if you don't quit smiling your face will freeze that way in this cold.\"\n\n\"I could say the same thing to you Red. If it gets too dark on the way back to the ranch we can use your smile to light our way.\"\n\nBoth men laughed and mounted their horses for the hour ride back to the Maggie M. Arriving back at the ranch, Josh and Red sat on the porch with Daniel. They told him about Carl being shot and their discussion with the Sheriff. Daniel agreed the water rights could be the reason behind all the trouble. The boys decided that Daniel didn't need to know about Red's warning to Rafe and Barry. \n\nThat Friday afternoon Red rode into Fountain to escort the ladies back to the ranch. Daniel and Maggie felt better with Red or Josh riding with their daughters. Maggie had a big supper waiting when the three got to the ranch. Jerry and Jacob took the horses to the barn and soon after everyone sat down for the big meal.\n\nSarah and Danni talked about their days in town and all the gossip about the town's people. They were told about what was happening on the Maggie M. The plans for getting new stock in the spring, the changes planned for the bunk house, and a new well that they planned to dig come spring when the ground thawed out. \n\nAfter supper Red went to the barn to make sure Jasper had been properly taken care of after the ride in the cold. Sarah decided to keep him company. Maggie smiled to herself thinking about the possibility of a wedding in the spring. The two young people had been gone for about 30 minutes and Daniel decided he'd go see if there was a problem.\n\nJosh and Danni spoke at the same time saying, \"I'll go.\" They laughed and then both went to check on the missing two. They knew that there was more going on than Red taking care of his horse. As Josh and Danni got close to the barn, they started talking in loud voices as a warning to Red and Sarah.\n\nBefore they got all the way to the barn, Red and Sarah came out and joined them. \"Let's get back to the house,\" Red suggested. \"It's gettin real cold out here.\"\n\nWalking back to the house Danni helped Sarah brush the hay off the back of her clothes and out of her hair. Sarah was red in the face but Red had a Texas size grin on his.\n\nBack in the house Jacob was sent to bed and Jerry wandered off to the bunk house. The rest of the group had a last cup of coffee before retiring.\n\n\"Was your horse okay Red? Daniel asked. \"You were gone so long I thought there might be something wrong.\"\n\n\"Yes sir, he's fine. I was just makin sure,\" Red replied with a sly grin.\n\nDaniel started to say more but Maggie nudged him in the ribs with her elbow. \"Hush now Dan,\" she said in a quiet voice. Daniel looked at Maggie, bewildered. What did I say? He thought. He started to ask Maggie about the elbow but she said, \"Time for bed. See you in the morning boys.\"\n\nAs the boys left, the girls went to their room, and Daniel and Maggie went to theirs. We're goin to have a talk before we get to sleep tonight, Daniel promised himself.\n\nThey got into bed and Daniel asked, \"What was that elbow and you shushing me about Maggie?\"\n\n\"You're a good man Dan but sometimes you don't see things right in front of you. Red and Sarah are falling in love; they're young and they like to spend some time alone. You askin about why it took so long just embarrassed Sarah.\"\n\n\"You don't think Red and Sarah are doing anything ...er ... er improper do you?\n\n\"No more than we did when we were courtin. Remember that hay ride we went on the night you ask me to marry you?\"\n\n\"Yeah I do,\" Daniel answered and chuckled. \"And I remember that you're daddy almost took a bull whip to me that night. He would've too if I hadn't told him we were gettin hitched.\"\n\nThe next morning Daniel asked Josh to ride out with him to check on the cattle. \"There's weather coming in the next few days and I want to scout out the grazing situation.\" They found most of the cattle grazing near a canyon that would provide shelter for them in the upcoming storms. Daniel pulled up on top of the rise and turned to Josh.\n\n\"Josh, I want you to know that I respect you and preciate the help you've given my family.\"\n\n\"Thanks Daniel. I like your family and you've all been very good to Red, Jerry, and me.\n\n\"I feel the same way about Red. I know he and Sarah are gettin close, so I need to know what kind of man he really is. So I'm asking for your help here. Will he make a good husband for Sarah?\"\n\n\"People don't take Red seriously because he's always laughin and making jokes. But don't under estimate him Daniel. He's as good a friend as I've had and as good a man as I've ever met. I've trusted him with my life several times and would do it again. Like I said before he's a good man to have with you and a very bad one to have against you. Yeah, he'd make a good husband for Sarah.\"\n\n\"That's good to know. I like Red but I worry about my daughter.\"\n\n\"Daniel, the only thing to worry about is when someone tries to hurt or harm his friends or the people he cares for; he don't like people pushin him neither. When someone threatens him or his he changes and becomes harder; the laughter goes away and he get as serious as hell. He'll do anything to defend his own and he don't worry about what comes after,\" Josh admitted. \n\n\"I worry about him being so good with that pistol of his. I wouldn't like to think he's on the prod.\"\n\n\"I've never seen anyone better than Red. But I've never seen him do more than protect himself or his friends. He don't go looking for trouble Daniel, but if it finds him he can handle it. I told you before, he's not a gunfighter.\"\n\n\"That's good enough for me,\" Daniel said. \"Let's get back to the house before I freeze my tail off.\n\nSunday afternoon late both Josh and Red rode back to Fountain with the girls. They decided that this would be the last trip until Thanksgiving. School would close at Thanksgiving until after the first of the year and Sarah would be home for all of December. Danni had made arrangements at the freight office to take off also. There wasn't that much to do as the freight wagons didn't run but every two weeks or so during the winter.\n\nThanksgiving dinner at the Maguires reminded Josh of his family back in Missouri. He was happy to be with his new friends but the holiday made him a little home sick. Josh sat on the front porch thinking about his parents, family, and the farm; Danni came out to join him. She brought a blanket with her, sat down next to him, and wrapped it around the both of them against the cold night air. \n\nJosh looked at her smiling face and all of a sudden he forgot about not being home and began to think about the pretty girl sitting next to him. He couldn't help himself and leaned over and kissed Danni. Josh pulled back embarrassed by what he had done and started to apologize. Danni smiled at him and leaned back into him for another kiss. Then she hugged him, jumped up, and went back into the house.\n\nFor the first three days of December, Josh worked and stayed at the S Bar S training four horses for Bill Sanders. Between the cold weather and the rain, it didn't make sense for him to ride back to the Maggie M each night. Josh earned $30 for his work with the four animals. When he came back to the Maguires he put $20 in the house hold kitty that was kept in a big mason jar in the cupboard.\n\nFirst Daniel and then Maggie objected to him giving them the money. \"My two partners have been doing most of the work around here and I just wanted to pay my own way. You folks have fed me, given me a place to sleep, and a place to board my horses. I'm lucky to have friends like y'all.\"\n\nJosh's second morning back at the Maggie M dawned to be a nice day for that time of the year. It was a little cold but not bitterly so and the sun was shining bright. He motioned for Jacob to follow him and went to the corral next to the barn.\n\n\"Let's see how the training of Puma is going Jacob. Bring him out and show me what you've been doing.\"\n\nJacob was pleased at the attention and ran to get his horse. He led the young buckskin into the corral; it was more like the horse followed Jacob like a big dog. Jacob put a blanket and saddle on the horse talking to Puma in a soft voice just like Josh had instructed him. He dropped the lead rope to the ground and walked away. When he was about twenty feet from the horse he clapped his hands and yelled loudly. Puma turned to face the noise but didn't move from the spot. Jacob had trained his horse to ground tie.\n\n\"Where'd you learn that, Jacob? I never showed you how to train him to ground tie,\" Josh said.\n\n\"Red taught me Josh. He said that all your horses were trained to ground tie and that it was a good thing to teach an animal,\" Jacob replied.\n\n\"Well he's right about that. It sure is a blessing not to have to look for a rock or tree to tie your horse to when you're out on the range. Have you put a bridle and bit on him yet?\"\n\n\"No sir.\"\n\n\"Let's try it now. Here feed him a piece of this apple and then rub another piece on the bit.\" Josh helped Jacob get the bit into Puma's mouth and finish putting on the bridle. \"Let him get use to the feel for a spell and then we'll try some more.\"\n\nJacob continued to talk to Puma in a soft voice, stroked his neck, and scratched behind his ears. The boy had to stand on his tiptoes to reach the young horse's head.\n\n\"I think you could sit on him here in the corral for a spell. It will teach him how you're weight feels and it won't hurt him. Go on give it a try.\"\n\nJosh held Puma's head and Jacob climbed up onto the horses back. Puma turned his head to see what was causing the weight on his back. Jacob reached forward and stroked his neck still talking to him. Josh released the horse's head and went back to the corral fence and climbed onto the top rail. He looked back at Jacob.\n\nThe boy had an ear to ear grin as he sat on his horse for the first time. Other than shifting his weight a little, Puma just stood quietly. Josh had to smile; it was such a small thing sitting on a horse in a corral but to the boy it was like opening a Christmas present early.\n\n\"Okay, now walk him easy around the corral for a bit,\" he told Jacob. The boy gently nudged the horse with his heels and Puma began to walk. Josh felt someone come up behind him and turned to see Daniel leaning on the corral fence watching his son. I don't know whose smile is bigger Jacob's or Daniel's, he thought. Twenty minutes later Josh said, \"That's enough for today Jacob. Take off the saddle and then brush and curry Puma. Make sure and give him a piece of apple after you get him back in his stall.\"\n\n***************\n\nA bright, sunny, April day greeted Red as he rode over the ranch to check on how the cattle had done through the winter. He was also checking to see how many early spring calves had been dropped. Shortly after the sun came up he had to stop and take off his coat. Guess spring is finally takin hold, Red thought. About damn time, I'm sure tired of snow and cold weather. \n\nHe found several calves and marked where their mothers were grazing on the early spring grasses. Daniel, Josh and he would come back to round them up for branding. Red thought of Daniel and the upcoming conversation that they would have. \n\nSarah and he were in love and wanted to get married, but first Red felt that he had to ask for Daniel and Maggie's blessing. He knew Sarah would marry him anyway, even if her parents didn't agree. Red for all of his free spirited fun loving ways was traditional at heart. It was only right, he thought, that he first talk to Daniel and Maggie.\n\nOf course, Maggie already knew about Sarah and Red. She had started wedding plans on the night Sarah came back from the barn with hay sticking to her clothes and hair. Maggie knew her daughter wouldn't play games in a hay loft with just any young man that came through. Sarah was head strong and independent but she was no man's fool.\n\nSarah's school was over until after the fall harvest; most of the children were needed at home with the beginning of spring planting and the round up and branding of cattle. She was living at the ranch full time now. Danni's job at the freight office wouldn't start up until May; the roads in the area were mud bogs because of the spring thaw and not many wagons were coming and going. Maggie watched her daughters clean up after breakfast and thought how nice it was to have the family all together.\n\nAs Red rode north from the ranch house, Josh rode south. He was also checking on cattle and was hunting at the same time. The family needed fresh meat; they wouldn't starve but their supplies of dried beef and salt pork were running low. There were plans to butcher a steer when the animals had time to fatten up after the winter, but that was still a couple of weeks off. In the mean time Josh would try to find a deer for them. Jacob and Jerry were doing their part by taking shotguns and hunting for rabbits and grouse.\n\nJosh rode Diablo out of a thicket of cottonwoods and willows along Black Squirrel Creek, He was following the tracks of a small herd of deer; Josh had his Henry rifle lying across the saddle in case he needed to make a quick shot. As they cleared the last big cottonwood Josh was surprised to see a lone bull buffalo staring at him; it was one of the few times that Josh had ever been caught unaware of what was going on around him.\n\nThe bull was large and relatively young but was injured. In the few seconds that Josh looked at the bull he could see that the animals left rear leg was torn and bleeding; it looked like a mountain lion or wolves had attacked the bull. The injury made an already mean animal ever more bad tempered. The bull looked at Josh and Diablo as they came out of the trees, gave a snort, pawed the ground once, and charged.",
        "Josh spurred Diablo to get out of the way but the big horse slipped on the mud and sand bank of the creek. The buffalo was on them very quickly in spite of his injured rear leg. He butted Diablo in the ribs knocking the horse off his feet; as he went down Josh pulled his feet from the stirrups and rolled away. Josh was able to hang on to his rifle; as he came to his feet fired at the animal from about 20 feet away.\n\nThe first shot just seemed to make the bull angrier; he turned toward Josh, snorted again, and lowered his head. Josh moved quickly to the side and put three more shots into the bull's chest before the animal could charge again. The big animal snorted one more time, spraying blood from his nose and fell over on his side.\n\nJosh limped over to the animal and made sure it was dead. He cut its throat to bleed the carcass so that it wouldn't spoil. No need to waste all that meat he thought, although I'd rather shoot at them from 100 yards away. This was a mite too close.\n\nDiablo came to Josh favoring his left leg; his knee was beginning to swell. Josh inspected the knee and decided that the injury wasn't serious. It was a light sprain and would be fine after a day or two; but he couldn't ride Diablo back to the ranch house that day. Lucky we're only about four miles from home so I guess I can walk and lead Diablo, he thought. \n\nJosh limped as he walked around his horse checking for any more injuries and his leg started to ache and burn. During all the excitement he hadn't noticed that he was injured too. He looked down at his leg and saw blood seeping through a tear in his pants. Josh sat down on a rock beside the creek and pulled his pants leg up. I guess the bull got his licks in after all, he thought. \n\nHe was bleeding from a gash an inch deep in places and six inches long in his calf; the bull had come close to goring Josh right through his leg. Josh washed his leg in the creek, grimacing at the burning sensation. He got a spare shirt from his saddle bag and cut strips to make a bandage for the wound. Don't look like I'll be walking back today he said to himself. Guess I'll make camp and wait for tomorrow.\n\n*******************\n\nIt was early evening and getting dark; Red had been back for over two hours. He was beginning to worry because Josh hadn't returned yet. Most hunting success comes early in the day Red thought; there's no reason for him to still be out on the range. \n\n\"Shouldn't Josh be back by now?\" Danni asked Red with a worried tone.\n\n\"Yeah, he should. He must have run into some problem or something,\" Red answered. When he notice how worried Danni was he said, \"Don't worry Danielle, Josh can take care of himself. He'll be alright.\"\n\n\"Is that why you're twisting that lariat around in your hands?\" She asked smiling at Red.\n\n\"Like I said he can take care of himself, but I'd feel a mite better if he was here. I'll head out at first light to follow his trail. It's too late tonight; as good as I am I can't track in the dark.\"\n\nBefore first light, Red was saddling Jasper to go look for Josh. When he came out of the barn leading his horse he saw Jerry mounted and waiting for him.\n\n\"Where're you going Jerry?\" Red asked unnecessarily. He knew very well what Jerry planned.\n\n\"Josh is my partner too Red. I'm going to help find him; beside two of us can cover more ground,\" Jerry said. \n\n\"Okay, let's go.\" Red knew it was a waste of time trying to talk the youngster out of going to look for their friend.\n\nThey headed south from the ranch house and picked up Josh's trail almost immediately. It took them two hours, moving slow, following Josh's trail, to get to Black Squirrel Creek. Jerry gestured at the tracks leading out of the water on the far side of the creek. Red pointed at smoke from a campfire rising into the early morning air; he led the way across the creek headed toward the smoke. Jerry and Red cleared the last stand of cottonwoods and saw Josh sitting by a campfire.\n\nHe looked up as his friends rode over to him. Red saw the bloody pants leg with part of bandage sticking out. Jerry stiffened when he saw the blood but Red just sat on his horse and looked down at Josh. \n\n\"You'll do about anything to get out of your share of the chores, won't you?\" Red asked with a smile.\n\n\"I thought you two could handle it so I thought I'd take a break, don't you know. You boys have any coffee with you?\"\n\nJerry got down and took a small coffee pot out of his saddle bag. As he added water and coffee to the pot, Red noticed the dead buffalo. He dismounted and examined Josh's leg; there wasn't much more that could be done until they got back to the ranch.\n\n\"You know you're supposed to shoot those animals not wrestle them to death,\" Red remarked.\n\n\"I've done that; thought I'd try something new. But I don't think I'll do that again,\" Josh said with a lopsided grin. \"At least it'll give us enough fresh meat for quite awhile, so it wasn't a total waste of time.\"\n\nAfter Josh got a cup of coffee, Red asked Jerry to ride back to the ranch and bring a wagon out to get the buffalo back to the house so they could butcher it. It would take about three hours for Jerry to make the round trip. \n\n\"Nothin to do but wait I guess,\" Red said as he flopped down using a big rock as a back rest.\n\n\"Come on, let's start skinning this beast. It'll help get the heat out of the body so it won't spoil,\" Josh said as he got up and limped over to the buffalo carcass. \n\n\"I did both of our chores last night since you weren't there so I should get to rest this morning,\" Red kidded as he went to help Josh. They made the necessary cuts in the hide and attached a rope to Jasper's saddle and to the hide. Using the power of the horse they were able to strip most of the hide off the buffalo. They could see the steam coming off the body as it cooled.\n\nJerry returned and between the three of them they got the big carcass into the wagon. Josh tied Diablo to the back of the wagon and got up on the seat with Jerry. He tried to hand the reins to Josh.\n\n\"You drove it out here, you drive it back. Besides I'm injured and I'm just gonna be your passenger today,\" Josh teased Jerry.\n\nTwo hours later they pulled into the yard at the ranch house. The entire Maguire clan was standing on the porch as they pulled to a stop. Danni ran off the porch to where Josh sat on the wagon. She took his hand in hers and looked up at him. \n\n\"Are you alright?\" She asked. When Josh nodded she asked, \"What do you mean, worrying us all to death and why are you riding in the wagon?\"\n\n\"Diablo sprained his knee and I didn't want to ride him.\"\n\n\"Diablo's hurt?\" Danni left Josh's side and went to the big horse. He nickered at her as she stroked his neck. \"Poor baby, Danni will take care of you. Jerry take him into his stall and get him some grain, I'll be down to take care of him later,\" she ordered. \n\nJosh and Red quickly told everyone the story of the bull buffalo, pointing to the carcass in the wagon. \"We need to butcher him pretty quick before the meat turns bad,\" Josh said.\n\nRed helped Josh get down from the wagon as his leg had stiffened up on the long ride back to the ranch. Danni turned back to the wagon and for the first time saw the bloody pants leg as Josh limped toward the porch. She ran to his side and put her arm around him to help him into the house. Danni made him sit at the table and gathered the things she needed to tend to his injury.\n\nMaggie brought hot water in a wash basin, cloths to clean the wound, and coal oil to treat the deep cut. She also brought a bottle of whiskey and offered it to Josh; he shook his head turning down the drink. Danni sat on the floor and put Josh's foot on a low stool so she could work on his leg. She slit his pants leg and long johns up the side so she could get to the long gash better.\n\nRed picked up the whiskey and said, \"I'm a little shaky even if Josh isn't. Maybe I'd better have a little drink to settle me down.\" He put the bottle to his lips but before he could take a drink, Sarah took it away from him. She playfully slapped Red's shoulder and told him to bring in more wood for the stove. \n\nDanni cleaned up the wound and applied coal oil directly onto and into the gash. And then applied a pad soaked in coal oil to the wound and bound it up. The whole time she worked on his leg she talked to herself. \"You could've been killed. How could you be so dumb? Don't you know you worried me to death?\" And then softly almost in whisper said, \"I don't know how I could take it if something happened to you.\"\n\nIn spite of the soft and quiet tone, Josh heard every word. He put his hand out and touched Danni's hair. She looked up at him and he could see the tears trickling down her cheeks. Their eyes met and in that exact moment he knew that he may never go back to the farm in Missouri; and if he did return he wouldn't be alone. It was at that exact moment that he knew he loved Danni and that she loved him. It was at that exact moment that he knew that their lives would be tied to each other forever.\n\nDanni smiled up at Josh, wiped the tears from her cheeks and eyes, and went back to treating his wound. \"This is going to hurt some,\" Danni said showing him the needle and silk thread she would use to sew up the gash. \"Are you sure you don't want some whiskey to deaden the pain?\"\n\n\"Naw, if I drink that stuff I might get sick to my stomach. I'd rather put up with the pain.\"\n\nDaniel stepped into the house to see how Josh was doing. He heard Josh refuse the whiskey and walked over to a storage trunk and pulled something out. Walking back to Josh, Daniel handed him a thick piece of rolled up rawhide. \"You might want to bite down on this son.\"\n\nJosh took the rawhide put it between his teeth and Danni began sewing the edges of the cut together; this would make it heal more quickly. She had done the same thing with others in the family when they were hurt and even to some of the live stock. Danni pulled the sides of the gash together and made a zig zag stitch back and forth across the cut to close it.\n\nAfterwards Maggie brought Josh one of Daniel's night shirts and a quilt. \"Get out of those duds so we can wash the blood out of them,\" she ordered. \"After they're clean we can sew up the slits in the legs.\" \n\nJosh blushed and Maggie laughed at his embarrassment. \"The girls and I will step outside until you get decent. You can sleep on the sofa tonight so we can keep an eye on you.\"\n\nThe girls left and as Josh was changing Red came back into the house. He grinned as Josh explained what Maggie had ordered him to do. \"Maybe I ought to get hurt so I can have three pretty women takin care of me,\" Red laughed. \"On second thought, gettin horned by a buffalo is a mite far to go just to get some attention.\"\n\nThat evening after supper, Josh told the story of his run in with the bull buffalo in more detail. Red teased Josh some more about getting out of his chores but everyone could see that Red had really been worried about his friend. Late in the evening Red and Jerry went back to the bunkhouse. The Maguires went to their rooms with the exception of Danni.\n\nJosh was bedded down on the sofa and Danni pulled her father's big chair closer. She explained to Josh that she would need to check on his bandage a couple of times during the night and this would be the easiest way. The two young people talked softly late into the night; Josh fell asleep still holding Danni's hand. In the morning she kissed his cheek to wake him and handed him coffee.\n\nWhile he drank his morning coffee, Danni examined the wound again. \"It's already started to heal and looks good. There's no sign of blood poisoning and the blood isn't seeping out anymore. You should be back on your feet in a couple of days.\"\n\nIt was actually three days before Danni would let Josh go back to doing his chores around the ranch. Josh had tried to get back on his feet the day after the accident. Danni got angry and told him he could get up if he wanted but not to come running to her the next time he did something stupid and got hurt. Josh didn't think it would've been a good idea to point out that she came running to him to take care of him. He didn't know a lot about women but he knew enough not to respond so he sat it out for two more days.\n\n****************\n\nMay rolled around and the roads and wagon tracks began to dry out. Danni had to go back to work at the freight office but she did made a deal with the owner of the company. She would work full days Tuesday through Thursday and a half a day on Friday. She would go back to the Maggie M on Friday afternoons and return to Fountain on Monday.\n\nThe freight business was picking up but it would be late June before things got real busy. Even then Danni thought she could get everything done in four days which would give her more time at home. It would also give her more time with Josh; that was becoming more and more important to both of them.\n\nDanni was all set to come home on the second Friday of the new work schedule and was waiting for her \"knight escort\" as she called them. She was surprised to see Jerry ride up to the boarding house to join her on the ride home. He was riding the big chestnut horse he called Charger.\n\n\"Hello Jerry. I thought Josh or Red would be coming for me.\"\n\n\"Hello Miss Danielle,\" Jerry greeted her. \"Red is helping your Pa round up the spring calves for branding and Josh was at the S Bar S training horses that Mr. Sanders needs for his round up. With both Josh and Red busy I was the logical choice to come fetch you; I mean come and ride back with you. I hope you're not too disappointed.\"\n\nDanni smiled and replied, \"I'm honored to have such a fine young knight escort me home. Thank you Jerry.\"\n\nThey rode back to the ranch alternating walking and trotting the horses and talking along the way. Danni asked, \"What are your plans for the future Jerry? What do you want to do with yourself?\"\n\n\"I don't really have any plans. I'm real happy just where I am and as long as Mr. Maguire will keep me on, my only plan is to stay on the Maggie M. It's a good place to live and your Ma and Pa have been real good to me,\" Jerry replied.\n\nDanni saw that Jerry was very alert and paid attention to the country they were riding through. There hadn't been any trouble since the rustler had been killed on the way into town but Jerry wasn't taking any chances. Josh would be really mad if I didn't take care of Miss Danielle, he thought to himself.\n\nThey were riding close to a big rock bluff and Jerry saw sunlight shinning off of something on the far side of the trail. He slapped Sunny hard on his rump making the big horse jump into a run; at the same time he put the spurs to Charger. As the horses started to run, a rifle shot rang out chipping rock off the bluff when they had been.\n\n\"Get behind that big rock,\" Jerry ordered a surprised Danni pointing to a house size boulder. They got behind the rock and dismounted. As Jerry jumped off his horse he pulled his Henry rifle from the saddle scabbard and quickly fire two shots back down the trail. Then he fired two more in rapid succession and chuckled.\n\n\"Got 'em pinned down now,\" he said grinning at Danni. \"They're not going anywhere too soon.\"\n\n\"Got who pinned down?\"\n\n\"Those two that shot at us. See that big rock on the far side of the trail? They're hiding behind it.\" Jerry paused to fire twice more and then reloaded his rifle. \"Miss Danielle I'm going to cover you and you ride like hell for the ranch and get help.\" Before she could protest he added, \"You're the reason those two are here. I don't know if they meant to scare you, kidnap you, or kill you but if you're not here they can't do any of that. So get going.\"\n\nDanni was surprised at the way Jerry took charge. She remembered that Josh had said Jerry was a veteran of two raids on their wagon train. Danni also remembered how he had came up behind Rafe and his friends as Josh and Red faced them.\n\nShe lean over gave him a swift kiss on his cheek and said, \"I think you can call me Danni. I'm going for help.\"\n\nHe nodded and as she mounted he fired several times at the rock where the two gunmen were hiding. Jerry didn't really expect to hit anything; he just wanted to keep their heads down while Danni got away. Danni pushed Sunny into a gallop and headed for the Maggie M, about two miles away.\n\nJerry reloaded and watched carefully for movement and every time one of them stuck his head up Jerry would fire at him. Those guys are sure dumb, he said to himself. They didn't hold on to their horses and now they can't move from behind that rock. If they try for the horses, they'll be out in the open, if they try to retreat they'll be out in the open, and if they try to rush me they'll be out in the open. Not real smart are you boys?\n\n*****************\n\nJosh had spent Thursday night at the S Bar S after working with Mr. Sander's horses. He had worked from first light until about noon on Friday. He rode back to the Maggie M because he wanted to be there when Danni and Jerry got home. Josh had loosened the saddle cinch to let Diablo rest a little and was talking to Red as he unsaddled and brushed Jasper. Red's horse had been working cattle all morning and deserved a rest.\n\nRed had just feed Jasper and started toward the bunk house when Danni came into the yard at a high gallop. She was off Sunny and talking to Josh before the horse came to a full stop. Danni explained what had happened and that Jerry was still back there. \n\nJosh asked a couple of questions as he cinched up his saddle and waited as Red saddled his other horse, Queenie. Both men checked their guns and rode off at a fast pace; they needed to get to Jerry in a hurry. It took Red and Queenie less than ten minutes to reach Jerry's defensive position. Josh and Diablo weren't far behind; Diablo was very fast for a big horse but he couldn't keep up with Queenie. She was a quarter horse and could run like a big cat for short distances.\n\nRed was grinning and held up his hand as Josh rode up. He pointed to where Jerry had made his stand. Red was a war veteran and saw at once that Jerry was in charge. It took Josh a minute to understand and then he smiled too. Jerry had someone pinned down behind a big rock on the far side of the trail.\n\nJosh whistled like a quail to attract Jerry's attention. When the boy saw them he smiled and pointed at the big rock. Using sign language Red found out that Jerry had two men pinned down. He signed to Jerry that he and Josh would flank them and come up behind them. When Josh and Red were in position, Josh whistled again and Jerry fired four shots into the base of the rock to keep the men's heads down.\n\nThe next sound the two men heard was Josh telling them to drop their rifles. They frozen for a second or two and then started to turn. \"Oh please do,\" Red pleaded. \"You know I'd really like a chance at you two so keep on turning. Damn Josh, it's our old friends Rafe and Barry.\"\n\nRafe and Barry weren't the sharpest tools in the shed but they weren't stupid. They dropped their rifles and put their hands over their heads. Josh held a gun on them as Red stripped them of their pistols and picked up their rifles. Josh yelled to Jerry that they were coming out and walked the men onto the middle of the trail.\n\n\"I warned you boys what would happen if you caused anymore trouble for the Maguires. Josh let's give them back their pistols and settle this right here,\" Red suggested. Josh wasn't sure if he was serious until Red winked at him.\n\n\"You can't do that. We're your prisoners, you have to take us to the Sheriff,\" Rafe said almost begging.\n\n\"I told you before I'm not the law,\" Red answered. \"Give 'em their guns Josh.\"\n\n\"You know Red if these boys would tell us who's behind all this trouble we might see our way clear to take them to Sheriff Horton.\"\n\n\"It's Larson, that's who it is,\" Rafe said quickly. \"He told us to steal Maguire's cattle; everything was going good until you caught Carl and shot him.\"",
        "\"Tom Larson? Why would he want to hurt the Maguires? He's got more land and cattle than they do,\" Josh was talking to Red but Rafe answered.\n\n\"The Maggie M has the best water for a hundred miles in any direction and Larson wants the rights to it. He said if we stole enough cattle and scared the Maguires he could buy them out real cheap. We'll tell it all to the Sheriff and testify if you won't shoot us like you did Carl.\"\n\n\"That's twice you've said we shot Carl. We didn't shoot him Rafe; someone shot him out of the saddle as we were taking him to Sheriff Horton,\" Josh told him. \"I think Larson killed him to keep him from talking to the Sheriff.\"\n\n\"That son-of-a-bitch! I bet you're right. He said that the Sheriff didn't believe your story that someone else shot Carl but couldn't prove any different. You get us to Sheriff Horton and we'll help put a nail in Larson's coffin.\"\n\nRed looked at Josh and then Jerry, \"You boys take them into the Sheriff. I've got something to do.\"\n\n\"Where're you going Red?\" Josh questioned.\n\n\"I'm going to put an end to it. Larson has got to pay for his actions and I'm the collector.\"\n\n\"You're going to throw away a life with Sarah because of that piece of cow shit? If you kill him Red you'll be on the run for the rest of your life. Stop and think about it for a minute.\"\n\nRed stared at Josh for a while and then nodded his head. \"You're right friend. I want him bad but I want Sarah more.\" He looked at Rafe and Barry for a bit and asked, \"Were you supposed to shoot Danni?\"\n\n\"No, we were just trying to scare her. We figured to shoot her horse and scare the hell out of her,\" Rafe answered.\n\nNow it was Red stopping Josh from killing someone. When Rafe said they were going to shoot Sunny, Josh's hand started for his pistol. Red grabbed his hand and asked, \"You want to be on the run for the rest of your life or do you want to spend it with Danni?\"\n\nRafe watched and listened to his captors and when he looked at Josh he saw death in his eyes. He gulped and swallowed hard. He hung his head and said softly, \"Sorry Mister.\"\n\nWhen Red was sure that Josh was okay he turned to Jerry who had joined them. \"Jerry you did good son. Would you ride back to the ranch and tell everyone we're takin these two into the Sheriff?\"\n\n\"Yes sir Red. Will y'all be back tonight?\"\n\n\"Not sure yet,\" Josh answered and then turned to Rafe and Barry. \"When were you gonna let Larson know how the plan went?\"\n\nAfter seeing how upset Josh had been, Rafe quickly answered, \"He's supposed to meet us at the saloon in town tomorrow about midday and pay us.\"\n\n\"Then we won't be home tonight Jerry. We'll hang around and see what happens when Larson comes to town,\" Red told him. He turned to Josh and said, \"You didn't say I couldn't watch Larson get what's coming to him.\"\n\nThey tied Rafe and Barry to their saddles and rode the five miles into town. After turning the pair over to the Sheriff, Red and Josh arranged rooms at Mrs. Cassidy's boarding house for the night. They planned to stay and watch Tom Larson get put in jail. \n\nSheriff Horton looked at Red and said, \"You stay out of this, you hear McCall? You too Josh. I'll not have vigilante justice in my town.\"\n\n\"Okay Sheriff, we just want to watch you put him in jail. And maybe laugh at him a little,\" Red responded with an evil grin.\n\nAt 11 AM the next day Tom Larson rode into town and stopped at the saloon. He was sitting at a table near the front door pouring a whiskey when Sheriff Horton stepped over to him and set down. \"Haven't seen you in town for a while Tom. Got business to take care of?\" The Sheriff asked in a friendly manner.\n\n\"Been over to the bank and I'm meeting two of my cowhands in a few minutes. After that it's back to the ranch,\" Larson replied.\n\nNeither the Sheriff nor Larson noticed that Red and Josh had come into the saloon through the side door. They positioned themselves off to the side of the men at the table. Red had convinced Josh that they should at least be around in case something went wrong when the Sheriff arrested Larson. \"One way or another, Larson's going down Josh,\" Red promised.\n\n\"I don't think Rafe and Barry are going to make your meeting Tom,\" Horton told him. Larson was surprised that the Sheriff knew who he was meeting and it showed on his face.\n\n\"They're down in the jail; arrested for shooting at Danielle Maguire and for stealing cattle. Those two had an interesting story to tell. I'm gonna have to ask for your gun Tom; you're under arrest.\"\n\nLarson knew his plan to get hold of the Maggie M was over and maybe his freedom too. He stood up quickly pushing the table into the Sheriff as he did and pulled his pistol. Before he could really get it pointed at Horton he heard a voice from his left. \n\n\"If you finish that draw Larson, I'll put a bullet in your head.\" Larson turned his head and saw Red with his own pistol pointed at him.\n\n\"And if he don't get you I will,\" came from Larson's right. He turned in that direction and saw Josh pointing a pistol at him too. \"I'll give you the count of three to put your pistol on the table,\" Josh continued.\n\n\"If he gets past one Larson, you'll never hear the count of two,\" Red threatened. \n\nLarson dropped his gun onto the table and raised his hands. Horton stood and picked up the pistol, pulling his own and pointing it at his prisoner. \"Let's mosey on down to the jail Tom. I've got a special cell waitin on you.\"\n\n\"We'll walk along with you Sheriff,\" Red told him. \"If that's okay with you, that is.\"\n\n\"I could say no but you two wouldn't listen any better than you did when I told you to stay out of all this. Now would you boys?\"\n\nBoth Josh and Red smiled at the Sheriff and followed him to the jail. After putting Larson in a cell Horton said, \"Thanks boys. Things could have got a mite tense if you hadn't stepped in. I'm glad you didn't pay no mind to me.\"\n\n\"When will he be tried?\" Josh asked.\n\n\"The circuit judge will be here in about three weeks. That's when we'll formally charge him. I'll need you two to testify about following the cattle onto his land. Between Rafe and Barry and you two we should be able to send him to the territorial prison for quite a spell. The courts don't take kindly to rustlin.\"\n\nThey said good bye to the Sheriff saying they could still make it back to the Maggie M well before supper. Josh and Red had been on the road for about half an hour when Red spoke for the first time since leaving Fountain.\n\n\"Josh, how am I gonna get Sarah to marry me? I don't know what to say to her.\" \n\n\"I spect all you'll have to do is ask her. The way she acts, she's rite fond of you. Oh, and you might want to tell her you love her,\" Josh answered.\n\nThe two young men rode into the yard of the ranch house. Red turned to the corral where Sarah was tending the horses. He climbed over the corral fence and Sarah ran to him. He picked her up and twirled her around both of them laughing. Josh rode on toward the house as Danni jumped off the porch running to him. He had barely stepped down from Diablo when she threw her arms around his neck and put her head on his chest.\n\nI don't believe I'm ever gonna take that trail back to Missouri, Josh thought.\n\nTo be continued..."
    ],
    "authorname": "woodmanone",
    "tags": [
        "historical",
        "old west",
        "wild west",
        "adventure"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-trail-west-ch-06"
}