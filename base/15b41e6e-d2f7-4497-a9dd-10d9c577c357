{
    "title": "Lady in Red Pt. 02 Ch. 23",
    "pages": [
        "After a second or two of eerie silence, all hell broke loose. Jason had turned his gun to the left and continued to fire. Steve suddenly brought two guns into play, exchanging shots with several men standing directly in front of him. Charlie was methodically firing at the men stationed to his right. \n\nTed finally tried to pull his handgun from his waistband, but something struck him in the chest. He was knocked back against the wall. As he struggled to lift his weapon, he felt another blow to his chest just before he lost consciousness.\n\nThe next thing Ted remembered was waking up as someone lightly slapped his cheek. He opened his eyes to see Steve's face quite close to his. Steve nodded to himself and then ripped open the heavy jacket Ted was wearing. He looked Ted over for about fifteen seconds before speaking.\n\n\"I don't see any blood, Ted. It looks like you took two bullets to the chest, but your vest did its job. It'll hurt like hell, and you may have a cracked rib or two, but you should be okay. \n\n\"Jason, let me have a look at your leg,\" insisted Steve as he stood and walked over to Jason, who was now seated. \n\n\"You'll need something to prevent infection, but it looks like the bullet went through muscle and missed the bone. Luckily, you're in a pretty damn good hospital. Charlie, how bad is your arm?\" questioned Steve as he moved a short distance to inspect his friend's injury.\n\n\"It hurts like hell, but I can still use it,\" assured Charlie just as one of Hasko's goons groaned loudly. Without even blinking, Charlie placed a round into the man's head. \"That was the bastard that shot me! We need to find out how Jordan and Ruth are!\" \n\n\"I just tried calling, but it goes straight to voicemail,\" responded Jason. \"If Mallory did her job, the girls' phones should be turned off and they should be in a safe place. We have to wait until they turn the phones back on.\"\n\n\"I'll call Chip and let him know what's going on,\" volunteered Steve as he made the call. He spoke briefly and then signed off.\n\n\"They have company. Chip says that there are ten of them, and the idiots think that they're sneaking up on the guys in the house. Chip said that Jared, Pete, and he are just about to lower the boom. Those poor bastards won't know what hit them. I've seen Chip work. Jared and Pete aren't any pilgrims either, as John Wayne would say.\"\n\n\"How come no one's coming in to check on us?\" asked Ted. \"They had to have heard the shooting in here.\"\n\n\"We gave the staff a bit of a head's-up about the trouble we were expecting and suggested that they stay away until the dust settles and we call for them. We'll need to get the bodies down to the incinerator as soon as possible. Charlie, help Jason down to the nurses' station and get those wounds taken care of. Ted and I will load up the bodies and get them disposed of.\"\n\n\"Are you crazy?\" demanded Ted. \"The police will be all over you if you move these bodies. We need to get them here to see that it was self-defense.\"\n\n\"Ted, these were sociopaths. They've killed without feeling any remorse. The police won't be concerned about them. Nadiya's father promised the government wouldn't be interested as long as it remained low profile. We're going to burn these bodies and go home to our families. Chip, Jared, and Pete will bury the ones they have up in the woods by the house we rented.\"\n\n\"You don't even know how that turned out. Those gunmen could have killed your friends,\" protested Ted as he tried to assimilate the information flying his way.\n\n\"Believe me, Ted. I know how it'll turn out,\" replied Steve. \"Those men are trying to sneak up on an empty house while three very capable men armed with assault rifles are waiting for them. Chip could probably handle them himself. Jared and Pete could take them without Chip. Those thugs are either dead or dying right now. Let's get this over with.\"\n\nSteve stepped into the hall and went into a nearby room. He soon returned with what looked like a small dumpster on wheels. Steve casually began heaving bodies into it. Ted shook his head and then moved to help Steve. It required three trips down the service elevator, but Ted and Steve managed to load the dead men into the fire chamber.\n\n\"How can you do this without feeling sick?\" asked Ted as they swung the last body into the fire. \"Doesn't this bother you at all?\"\n\n\"What bothers me is worrying about our girls back home,\" answered Steve as he moved to a wash basin and began cleaning up. \"These men have a history of killing and raping women, and even children. They were worse than wild animals. They were more like mad dogs. We simply exterminated vermin. Doing so will probably save hundreds of lives over the next few years. Did I enjoy it? Not even a little. Do I regret it? Not at all. If Hasko had lived, none of us would have ever been safe. We had to do this for your wife and daughters, for Ashley, Naomi, Becky, Charlotte and the rest.\n\n\"I would give my life to save our women from these bastards. So would you, Jason, Charlie, and the rest. It was forced on us and we took care of it. I'm not proud of what we did, but it needed doing and not many could have managed it. That was some of the most intense action I've ever seen. We did what we had to do and survived. It's a good thing.\"\n\nCharlie and Jason insisted on being treated quickly and leaving as soon as possible. They had their injuries dressed, given antibiotics, pain medication, and went in search of Steve and Ted. They found Steve explaining to three of the custodial staff that he wanted the floor scrubbed and the holes in the walls and furniture repaired as soon as possible. The men nodded agreement and began working on the blood stains first.\n\nBy the time the foursome reached the rented house, Jared and Chip were carrying their bags out and putting them in a dark Mercedes. Pete was grinning as he stepped out from behind the wheel.\n\n\"We won't be crowded riding to the airport now. We'll ride back in this 'borrowed' Benz. You guys can take the rentals.\"\n\n\"What happened to the men who came here to kill you?\" asked Ted as he looked around the area in front of the house.\n\n\"I don't know what you mean,\" chuckled Chip. \"Some friends loaned us this great automobile. We're just going to ride to the airport in it. They don't need it anymore.\"\n\nIt was two hours later when Steve's phone rang. He and the others were preparing to board the Red Lady when the call came in.\n\n\"Steve, are you and the rest okay?\" asked Gwen immediately and in an obviously agitated tone.\n\n\"We're fine. We're boarding the Red Lady right now. Is everything okay with you?\" questioned Steve as he somehow dreaded Gwen's response.\n\n\"Four horrible men came to our house before sunup this morning. They were armed and intent on killing someone, probably Charlotte and me. Sybil had sneaked us out earlier and secluded us with some of her agents a few miles from the home. She, Janice, and three others hid in the house and waited just in case we were attacked.\n\n\"There was a gun fight and three of the men were killed and one badly injured,\" continued Gwen. \"Charlotte and I are fine, but we're not going back to the house. Our security detail wouldn't let us use our phones until just now.\n\n\"I spoke to Mom a few minutes ago. She had pretty much the same thing happen. Mallory had moved all of the occupants of Asgard into the safe room in Valhalla. She and about twenty agents spread out in all of our homes. A van crashed through the gate, with two more following it. The three guards had been warned and they killed three of the men there before they were wounded so badly they were unable to carry on the fight. There were ten more guards on their way to help cover when the attack occurred, but they were a few minutes too late.\n\n\"The loud ruckus alerted Mallory's people and when the vans stopped in front of Jordan's house, they were prepared. Twelve men were shot to ribbons and three more surrendered after being injured. Mom said none of our friends or family was hurt, but they're all shook up and worried about you guys.\"\n\nSteve saw that his friends were all using their phones as he spoke with Gwen. \"I think the guys are talking to their ladies right now. I want you to tell Sybil that she did a great job. We need to think of something really nice for her.\"\n\n\"Steve, I hate to tell you this, but Sybil was shot in the gun battle at our house. I'm waiting to hear more from Janice, but it doesn't look good.\"\n\n\"Oh shit!\" cried Steve in anguish. \"I'm so sorry to hear that. We'll be back as soon as possible. I'll fly through to California and be with you as fast as I can make it. We need to be sure that Sybil has every chance possible.\"\n\n\"I already let it be known that Lady in Red will cover any and all expenses and efforts to help her. Everyone at the hospital is aware of how much Sybil means to us,\" replied Gwen as she fought back tears. \"Hurry back to me. I'm going to need some emotional support from you.\"\n\nSteve and Gwen spoke for a few more minutes before ending the call. As he returned the phone to his pocket, he brushed the tears from his eyes and looked at his companions. They were watching him somberly.\n\n\"We heard about Sybil being hurt,\" began Charlie. \"We all like her a lot and wish her the best. Sadly, it goes with the territory. We're pretty damn lucky that we're all alive and going home.\"\n\n\"Yeah,\" agreed Jason. \"I apologize if I jumped the gun, so to speak, but when that miserable fuck started talking about what he was going to have his men do to Lisa and Theresa, I knew he had to die.\"\n\n\"You saved me a bullet,\" admitted Charlie. \"I was just getting ready to pop the bastard myself. He deserved to die just for saying the things he did. Apparently he intended to carry them out.\"\n\n\"Won't there be any trouble over this?\" asked Ted. \"We just arrived in a strange country and killed, oh, about two dozen men, give or take. How can they let us leave so easily?\"\n\n\"I spoke to Nadiya's father a few minutes ago,\" responded Steve. \"Without going into any particulars, I explained that Hasko was out of business, permanently. I told him that my understanding was that he and his associates left the country and would not be returning.\"\n\n\"Mr. Misko assured me that his government was relieved that Hasko decided to go elsewhere, and they would not be looking for him. We just did the government, and the whole country, a big favor. Those bodies will not be found any time soon. When and if they are, no one will care about them.\"\n\n\"So that's it? No repercussions? We just go home and act like it never happened?\" wondered Ted in amazement.\n\n\"No repercussions? A beautiful, vibrant young woman may die, so yes, there are serious repercussions. Wait until you try to sleep tonight. You'll find out that there are repercussions,\" declared Steve. \"Our women have been scared to death. There'll be repercussions for years to come.\n\n\"Jason, Charlie, and the other guys appear to be fine, but we'll all have some issues from this cluster fuck,\" stated Steve flatly. \"We sure as hell could have planned and prepared for this better. Pete will have to devise some sort of barriers that prevent forced entry to Asgard. We need to study and know our adversary better before we get in the middle of something. I dropped the ball on this. When we left to come over here, I thought we'd either scare the prick off, or plant him under the ground. I had no idea how evil the sick bastard was, and it may have cost me a very good friend, and if it hadn't been for our security team, we could have lost everything we hold dear!\" \n\nIt seemed to Steve like it took a week to reach Stanford. It was past midnight when he checked into a hotel and fell into the bed. Gwen was not allowed to disclose her location over the phone, so they decided that they would work out things the following day, after Steve managed to get some rest.\n\nAfter a fitful sleep, Steve was at Stanford Medical Center at 6 AM. He strode up to the information desk and asked about Sybil Burke. The woman behind the desk looked up and immediately recognized him. \"Mr. Hammer, I'm supposed to ask you to go up to the fifth floor, where an escort will join you.\"\n\nSteve stepped out of the elevator on the fifth floor and was greeted by a nurse that had apparently been waiting. \"We've been instructed to allow you to visit Ms. Burke. She's no longer critical, but has a very long road ahead of her. Please follow me.\"\n\nSteve was ushered into a private room. His heart jumped when Sybil looked at him and smiled weakly. He hurried to her side and gently kissed her lips.\n\n\"Sybil, I was terrified when I heard that you'd been shot. You've come to mean a great deal to me. You keep saving me and my family. Now you were hurt doing it. I'll never forget what you've done for me.\"\n\n\"I saw how well everyone treated you in the hospital when you were shot, so I thought I'd give it a try. It really isn't worth it, is it?\" joked Sybil in a small voice. \n\n\"You just work at getting well. I'll stop in and help you every chance I get. We'll have you walking out of here in no time,\" promised Steve.\n\n\"That may be a problem,\" admitted Sybil as tears began to slide down her cheeks. \"I can't feel my legs. The bullet clipped my spine. They don't know how permanent the damage is yet, but I may never be able to walk again.\"\n\nSteve was stunned by Sybil's words. He simply took her face in his hands and held his forehead against hers for a long time. \"Sybil, I'll never lie to you. You have to believe that. I just considered what you said about walking and I know that you will walk again. Don't ask me how or why, but I know that you will.\n\n\"You and I will work together on this. If we concentrate on your recovery and your spine healing, it will. I believe this. My mother taught me all about positive thinking when I was a kid. It works. Will you promise me that you'll work with me every chance that you get to heal, to recover, and to be able to dance again?\"\n\n\"I'll do anything you ask,\" assured Sybil. \"But I wasn't a very good dancer before this happened.\"\n\n\"Sybil, I promise you right now that if you'll work with me as hard as you possibly can, we'll share quite a few dances over the years. I'll teach you to be a very good dancer. You know I can. You saw the movie.\"\n\n\"I'll work as hard as I can just so you visit me now and then,\" managed Sybil with a smile. \"You're the best guy I've ever met. I'll make you proud of me.\"\n\n\"I already am,\" replied Steve as he once again gently kissed Sybil's lips.\n\n\"What are you doing with my daughter?\" came a voice from the doorway. \n\nSteve turned to see Mallory Burke and Gwen watching him. \"I'm making a promise to her, if you must know. I'm going to teach her to be a very good dancer. We're going to put every ounce of effort possible into it. Your daughter is an amazing woman and I'm extremely proud to know her and call her a friend.\" \n\n\"I leave for an hour to go home and get cleaned up and you're already entertaining a gentleman?\" teased Mallory. \"He's going to teach you to dance? I want to see that!\"\n\n\"Steve usually accomplishes what he sets out to do,\" noted Gwen as she entered further into the room and kissed Steve once he stood up. \"You had better be prepared for some hard work, Sybil. The man is a real slave driver.\"\n\n\"He'll have his work cut out with me. I was never the most graceful person and now I can't even feel my legs. I don't know much about dancing, but I think that's going to be a requirement.\"\n\n\"And what did we just promise each other?\" prodded Steve gently.\n\n\"We're going to stay positive and you're going to help me heal. Is that okay with you, Gwen?\"\n\n\"Let me think about that. You saved my life and were badly injured in the process. Yes, Steve can certainly help you every chance he gets,\" promised Gwen. \"You'll find him very persuasive and extremely determined. You'd better be prepared to work hard.\"\n\nA short time later, Steve and Gwen left Mallory and Sybil and went for a breakfast. \"Was it pretty bad in Kiev? The FBI has interrogated the attackers that survived and they feel confident that there are no more bad guys left here in the states. We're going back to normal precautions.\n\n\"Charlotte and I are going to share a suite in a hotel until we graduate. We only have a couple of weeks left and we're not going back to our house. We'll have it cleaned and then sell it.\n\n\"Tell me about Kiev. How bad was it? Is everyone okay? What exactly happened?\" asked Gwen as she watched Steve eyes cloud over.\n\nSteve spent the next ten minutes explaining how everything transpired in Kiev. Gwen gave an involuntary gasp when Steve told her how Jason shot Hasko in the head.\n\n\"Do you think that was necessary?\" asked Gwen. \"If Jason had controlled his temper, would you have been able to talk him out of his demands?\"\n\n\"Honestly? No, I don't think that I could have. The man was a true sociopath. His goons were even worse. Charlie said he was about to shoot the guy himself, but Jason saved him the bullet. I was actually mulling it over. Jason had cause. Let me tell you this, Jason and Charlie are men to ride with. They were something to see.\n\n\"Your dad insisted on going with us, and we were pretty worried about him being hurt and how we'd face his wife and daughters if he was. I'm glad Jason insisted that we wear vests. Your dad never fired a shot, but was hit twice in the chest. The vest saved him, but I bet he's pretty sore today.\"\n\n\"Dad was shot? You neglected to mention that little fact!\" cried Gwen. \"Are you sure he's okay?\"\n\n\"He's going to be sore, but he'll be fine. I bet Paula is treating him like a king. Your dad really has a lot of nerve. He refused to leave when Jason suggested it would be safer,\" added Steve. \"You really should be very proud of your father.\"\n\n\"I am, and I'll tell him that next time I speak with him. More importantly, I'm going to tell Mom what you told me. She needs to know how brave he was and how strongly he feels about his family. Sometimes she sees Kate, Lisa, and me walking around on the arms of the toughest characters imaginable and maybe wonders if her man measures up. She needs to know that he does!\"\n\nSteve decided to stay in Stanford with Gwen while she finished her studies. He kept his promise to Sybil and visited her twice a day. They became very close friends. Steve constantly talked about her getting well and dancing with him. He would rub her feet and legs as they chatted. He kept telling her to picture her spine knitting in her mind and he would do the same. He insisted that his touch would increase the influence his thoughts had on her healing.\n\nThe third time Steve visited Sybil; a pretty nurse stopped him as he was leaving. \"I would like to ask you a favor, Mr. Hammer. We have a very famous children's hospital here. Would it be possible for you to visit with some of the ill children and their worried parents? It would do wonders for their morale. Maybe we could schedule a visit sometime?\"\n\nSteve smiled and took the nurse's hand in his. \"If you'll lead me there, we'll visit them right now.\"\n\nEvery time Steve visited Sybil after that, he would take time to visit the children's wing. He was humbled and pleased at how much his visits improved the children's spirits. On his second visit, he saw an old acoustic guitar by a teenage girls' bed and he picked it up.\n\nHe began playing songs and singing to the girl. When he finished his third song, he realized that the room behind him was full of children patients as they stood and listened to his little impromptu concert. Behind the kids were parents and hospital staff crowded into the hall.\n\n\"Wow, I didn't realize so many people were listening. Was I too loud? Do you kids want me to be quieter?\" teased Steve.\n\n\"No! We all like your singing,\" retorted a girl about eleven with her head wrapped in bandages. \"You're the best singer in the world and we're lucky we're in the hospital now so we can hear you. Don't stop!\"",
        "After that, Steve had a standing appointment to play guitar and sing every afternoon. The hospital had a small auditorium and they had the children that could be moved taken to the auditorium where Steve would perform for half an hour. By the end of the week, parents and staff would pack into the room as well as the hallways leading to the auditorium.\n\n\"Did you happen to hear anything about a new YouTube video?\" asked Gwen one evening when she returned from classes. \"One of the other girls showed it to me between lectures. You've been doing concerts without the rest of us, haven't you?\"\n\n\"Not really,\" began Steve. \"I've been playing for some kids at the hospital, but no one would call them concerts.\"\n\n\"No one except a few teenage girls that think Steve Hammer is the most handsome, sexiest, nicest guy in the whole world,\" countered Gwen. \"There's a twenty minute video showing you singing to these girls in the hospital. You really should watch it.\"\n\nGwen placed her laptop on the table in front of Steve and tapped the 'enter' key. He watched the video where he strummed the guitar and walked around the small auditorium, stopping to sing a song directly to a girl in a hospital gown. When the song ended and the applause let up, he'd begin playing and singing to a different teen. He didn't realize that he had been recorded, but saw nothing wrong with it.\n\n\"Is there a problem? I was just trying to cheer the kids up. A nurse asked me if I'd visit them and one thing led to another. Are you upset?\"\n\n\"Are you kidding? Look at the comments! These wonderful, but very ill teenagers have jealous friends! The kids feel like they're lucky to be in the hospital! That is not a common reaction, believe me. I've been hearing about you from the other med students and the staff. They think you're practically performing miracles! The kids are much happier and responsive to their treatments,\" explained Gwen. \"You've done a very good thing, as usual!\"\n\nThe doctors conducted a battery of tests on Sybil but were unable to reach a consensus on her prognosis. They felt it was still too early to determine if she'd recover use of her legs, or even any feeling. Early in the second week, Steve walked into her room to find Sybil sleeping.\n\nWithout thinking much about it, he quietly moved the chair down to the end of the bed to massage Sybil's feet and lower legs. As he took her left foot in his hand, Sybil suddenly gasped and came awake!\n\n\"What did you do?\" demanded Sybil as she stared at her foot in Steve's hand. \"I felt something!\"\n\n\"I'm helping you get well,\" grinned Steve. He carefully released Sybil's foot and moved to stand close to her head. Then he kissed her gently before speaking softly to her.\n\n\"I'm going to dance with you at my wedding. I want to show everyone what an amazing woman you are. Plan on hours of work between now and July 4th. You're going to recover fully. I won't accept anything less.\"\n\n\"You don't owe me anything, Steve. You don't have to spend so much time with me. I'm a big girl and I can get through this on my own,\" insisted Sybil somewhat weakly.\n\n\"You're so wrong. I owe you everything, and I always try to pay my debts. You probably can recover on your own, but you won't be. I'm going to move you back to Sparta as soon as possible. We have most of the equipment we need for your therapy in Valhalla, and what we don't have, we'll get. We'll get the best therapists available. Gwen told you that you were one of us now. This is what we do for our friends and relatives.\"\n\n\"You're with my daughter again?\" interrupted a smiling Mallory Burke from the doorway. \"I hope Gwen is as understanding as she's reputed to be.\"\n\n\"Mom! I felt Steve touch my foot!\" announced Sybil with delight. \"He's going to work with me to get better back in Sparta. I'm going to dance at his wedding!\"\n\nMallory Burke was unable to conceal her joy as she rushed over and hugged her daughter while tears ran down her cheeks and dropped onto Sybil. Then she turned and hugged Steve tightly.\n\n\"Now I have to worry about finding the right dress for Sybil to wear at your wedding? I should add it to your company's bill,\" cracked Mallory as she wiped her tears.\n\n\"No need,\" assured Steve with a grin. \"I'll take her shopping and buy her outfit, right down to her little thong.\"\n\n\"You will not be buying my daughter panties, nor will you be getting into them,\" stated Mallory as she held Sybil's hand. \"To think you talked me out of the sexual harassment clause.\"\n\n\"Mom, I'll decide who gets in my little panties,\" declared Sybil. \"Quite honestly, Steve would be my first choice, but he seems to be taken and he has that damn moral code he lives by, so I'll keep looking. When I get so I can walk again, I'm going to be looking a lot harder than I did in the past. Almost dying makes you think about your life and the things you've missed. I want a husband and family of my own.\"\n\nLady in Red had a huge turnout for Charlotte and Gwen's graduation from Stanford University School of Medicine. Only immediate family was allowed to the actual ceremony due to lack of seating, but everyone attended the celebration held at a nearby hotel.  \n\nGwen and Charlotte were smiling all evening as family and friends constantly congratulated them for their accomplishments. \n\n\"What do you call the person that graduates last in their class at medical school?\" asked Billy to everyone within earshot, before yelling the answer. \"Doctor!\"\n\nSteve and Billy were extremely proud of their fianc\u00e9es. It had taken years of hard work to attain their goals and they had somehow managed to stick with it. The two women had just a week before they were scheduled to join the staff aboard the SS Charity. They would be gone for almost eight weeks as it delivered much needed medical care to countries bordering the Indian Ocean, from Southeast Asia to the African Coast. \n\nWhile the main focus was on vaccinating children, they would also treat injured and ill people as time and room permitted. Gwen and Charlotte were extremely excited about the experience they would gain on the voyage.\n\nOnce the graduation celebration was over, everyone headed back to Sparta. Sybil, Janice, and Mallory rode back on the Red Lady with them. Steve and Gwen had arranged rooms to be readied for them at Valhalla. That way Sybil would be convenient to the equipment she would be using to rehab from her injury. A physical therapist had been hired to oversee her recovery.\n\nThat week saw Steve and Gwen make love several times a day as they tried desperately to 'stockpile' their sexual needs so they could more easily endure the almost two months they would be apart. \n\nSteve was surprised to learn that Cheryl was going to be traveling with the two friends. She was working on a documentary for a school project at Duke. He was even more surprised when Cheryl introduced him to a young man named Jeff Hook.\n\n\"He'll be the one following you around all summer and recording everything that you do. Between the two of us, we should have a very good documentary on a summer in the lives of Gwen Anderson and Steve Hammer.\n\nSteve turned in surprise to Gwen as he shook the young man's hand. \"Could you excuse Steve and me for a few minutes?\" asked Gwen. \"We have some personal business we have to discuss.\"\n\nOnce they were removed from any possibility of being heard, Gwen faced Steve. \"I'm so sorry! I forgot to tell you that I agreed to this documentary thing. It's really important to Cheryl and her friend. If they do a good job, they'll each gain four credits at Duke. I agreed to it while you were in the hospital after saving those kids on the bus. Maybe I wasn't thinking clearly. Are you upset with me?\"\n\n\"Yes, I am,\" replied Steve with an evil grin. \"For penance, you'll have to give me three blowjobs and one trip around the world, but in our bed, if you know what I mean.\"\n\n\"That seems fair enough,\" laughed Gwen. \"Especially when I planned on doing more than that already. Thanks for being such a great sport!\"\n\nTwo days before Gwen and Charlotte were scheduled to depart to their ship, a story broke on cable news about a Ukraine mobster running afoul of Lady in Red owners. Speculation held that the owners and their very close friends traveled to Kiev in response to an extortion demand. The supposed master mind of the crime had not been seen since the day the Red Lady flew out of Kiev.\n\nThe entire group was in Marsh's Landing when several reporters approached Gwen. \"How do you respond to reports that Steve Hammer and some of his friends, including your father, traveled to Kiev in response to an extortion threat by a known mobster and vicious killer. That same day, your home in Stanford came under attack, as did your family compound here in Sparta, all by Ukrainian nationals.\"\n\n\"We're having a quiet dinner,\" responded Steve curtly as he stood to face the reporters. \"You really need to learn some manners. I suggest you leave right now.\"\n\n\"Just a minute, please, Steve. Let me respond once to that rather long and ambiguous question,\" broke in Gwen as she stood and placed a calming hand on Steve's chest. \"It was Winston Churchill that said, 'We sleep soundly in our beds at night because rough men stand ready in the night to visit violence on those who would do us harm'. These men sitting at this table are such men, including my father. No, make that, especially my father! They stand ready to protect us from anyone that would do us harm, and we're all thankful that they do. I will not comment on any specific incident, but I will say that these men are the real thing. We will never pay extortion. These men will never tolerate anyone attempting to harm any of us. That is what I want you to report to your viewers, and to the world.\"\n\nWith that, Gwen waved a dismissing hand, turned, and allowed Steve to help her back into her chair. The reporters took the hint and left the room. \n\n\"My God!\" exclaimed Gwen's grandmother. \"You certainly told them. People love how strong and protective these young men are, including Ted. You offered no explanation or apology, except that people should think twice before tangling with Lady in Red. Your message was unmistakable.\"\n\nTwo days later Gwen, Charlotte, and Cheryl departed for the other side of the world, while the rest of Lady in Red began working on planned films. Kate had her screenplay ready and production began on the movie. Steve found her extremely easy to work with and had a great time making the movie with her.\n\nPaula, on the other hand, seemed stiff and nervous all of the time. Steve knew she'd have to relax or the movie would be a disaster. The first scenes they filmed were simple interactions with basic dialogue and little else. Paula had difficulty with her lines and finding her spots on the set. After several days with very little usable footage, Kate took Steve aside and spoke to him privately.\n\nThat evening, Paula rang Steve's doorbell. \"Kate suggested that we work on our scenes tonight. She said you'd be expecting me. I know I'm really screwing things up for everyone. Maybe you should get Diane to take my part.\"\n\n\"I guess that's always a possibility, but there are two things wrong with that idea,\" replied Steve. \"I wouldn't get to see you naked that way.\"\n\n\"There is that, but I doubt you'd miss it very much once Diane pressed her boobs against you. What's the second thing wrong with the idea?\" asked a dejected Paula. \n\n\"I already mentioned the two things I'd be missing,\" grinned Steve.\n\n\"You only mentioned one. You want to see me naked. That's one thing,\" insisted Paula as she became aware that Steve was staring at her chest and arching an eyebrow. \"Oh! That's what you meant be two things?\"\n\n\"Absolutely,\" replied Steve with no embarrassment. \"I've decided that I'd better act fast or I may miss my opportunity. If you bail on me and Diane gets your role, I may never get you naked, so let's rehearse the love scenes tonight.\"\n\n\"I don't think I'm ready for that,\" sputtered Paula as Steve pulled her close and began kissing her neck. \"I don't even know how I'm supposed to act when you do that.\"\n\n\"Really?\" asked Steve. \"You don't know how to respond when a man you've been working to seduce for a couple of weeks finally begins to yield to temptation? It's called 'acting' and you need to think how your character would respond when mine does this.\"\n\nWith that, Steve again kissed Paula and slowly unbuttoned the top button on her blouse. He traced his finger along the upper swell of her breasts as he maintained lip contact. Slowly, his finger slid another button out of the way and allowed his fingers to trace lower on Paula's chest. Paula moaned into his mouth when he slipped his hand inside her bra.\n\nHe soon found her very hard nipple and squeezed it gently. Paula reached up and quickly began undoing the buttons on his shirt. She had it opened and pulled off his shoulders in seconds. Then she reached down for his belt!\n\n\"Paula,\" managed Steve as he pulled his lips from hers. \"This is a rehearsal, so we won't do anything that we won't be doing in front of the cameras, okay?\"\n\n\"I understand that, but you'll have your hands inside my bra, so wouldn't I have my hands inside your pants?\"\n\n\"Well, yes, I guess you would, but you wouldn't be touching me, not really,\" replied Steve. \n\n\"So you're saying that I will be putting my hands down between your legs, but somehow won't touch your package?\" whispered Paula as she once again kissed Steve. \"How am I supposed to do that?\"\n\n\"Well, you might be touching something when we film it because it'll be impossible not to feel me when you have your hands in my jeans, but for our rehearsal tonight, I don't think you should do that. When we film the scene, we'll be in front of quite a few people, including Ted, so I won't get so worked up that I get carried away. Tonight, we need to have some restraint.\"\n\n\"You really don't find me all that attractive, do you? Diane had her hands all over you in that movie and you had a hell of a time with her big boobs. How many times did you have to film those love scenes? You must have kissed and squeezed her for hours. This was a bad idea. I should go home. I don't belong in this movie. I'm too old and plain looking.\"\n\n\"I don't think so,\" replied Steve as he gathered Paula up and carried her to one of the guest bedrooms and placed her on a bed. \"We're going to rehearse and you're going to do your best to seduce me. Just respect my limits and I'll respect yours.\"\n\nOnce again Steve began kissing Paula. She tried to resist at first, but soon was kissing him back with great ardor. Steve simply grabbed the front of her blouse and yanked it open, sending the remaining buttons flying across the room. He rolled over holding Paula tight to his chest and deftly reached back and unhooked her bra. He pushed her up and away briefly so her bra would drop off her substantial breasts. Paula watched Steve closely as he gazed at her exposed flesh. She saw his eyes widen with desire as she felt his cock grow beneath her. Slowly, she lowered a nipple to his lips.\n\n\"I think you've got the idea,\" mumbled Steve as Paula's nipples caressed his face. \"In fact, we have to stop right now! You're an extremely sexy and I'm only human. Let's get in the hot tub and talk for a while.\"\n\n\"Are you kidding,\" demanded a very flushed Paula. \"You've got me half naked in bed and you want to stop? I know you like what you're seeing. Can't we practice a little more?\"\n\n\"Paula, it's called 'rehearsing', and no, I can't do this anymore. You're ready for the love scenes. Jesus! You're a hot woman, but you're also married and I'm engaged. It's almost seven thirty. Let's get into the hot tub. Come on with me. I have it ready.\"\n\nSteve grabbed Paula's hand and pulled her to the enclosed porch where the tub was located. He knelt and tugged her jeans to her ankles and helped her step out of them.\n\n\"You'll have to decide whether your underwear remains or not,\" stated Steve as he dropped his jeans and then his boxers before stepping into the tub.\n\nPaula shrugged and slid her panties over her smooth, round ass. She left them on top of her clothes before following Steve into the tub and sitting close to him. \n\n\"Thanks for not letting me make a complete fool of myself. I'm afraid I wasn't acting, or rehearsing,\" revealed Paula. \"I was ready to go all the way with you and it's pretty embarrassing now that I can think rationally. It makes sitting naked with you seem pretty calm and boring. I know I don't have to ask you not to tell anyone how terribly I behaved. That's one of the things I like best about you. I know you don't tell tales out of school.\"\n\n\"I wanted to talk to you about the movie,\" responded Steve. \"You seem nervous on the set. Is it because you've been worried about our love scenes? Kate thought it was and suggested that we have this little rehearsal tonight.\"\n\n\"Kate thought we should do this?\" asked a very surprised Paula. \"Or do you mean that she expect us to go over the scenes I screwed up today?\"\n\n\"She pretty much told me that if I don't get you naked and over your fears, the movie would never get made,\" replied Steve. \"She felt that you had to come to the realization that it's okay to be a little crazy. So now you're sitting naked next to me and I can see most of your beautiful breasts above the water level. How do you feel about me looking at them?\"\n\n\"Truthfully? I really like it. I could tell that you liked them when my bra came off and you first saw them. I felt you get hard for me. That was a real compliment,\" admitted Paula. \"I was worried about what you'd think. Now I only have to worry about how a few hundred million people will perceive me. Do you honestly think I look okay?\"\n\n\"No, I can't say that you look okay,\" answered Steve as Paula slumped slightly. \"You look fantastic. Ted told me that you've been using the gym and rearranging a few pounds. He said you have a better figure than Diane. I've got to tell you that you look perfect.\"\n\n\"Ted said that to you? You two were discussing me like a prize heifer or something?\"\n\n\"I guess that's a good comparison. The old bull was telling the young one what to look for and to expect. He has experience in the area. I'm still learning about you.\"\n\n\"Well, you certainly learned a lot tonight,\" chuckled Paula. \"It's funny, but I'm very comfortable sitting here naked with you. A lot of it is how well I can trust you. I finally understand what the girls have been saying about being naked around you and the other men. They feel very safe and protected. Being nude next to you isn't at all scary.\"\n\n\"You sure don't look scared, Mom,\" came Kate's voice from the doorway. \"It looks like you're getting over some of those hang-ups. Think you'll be ready to film tomorrow?\"\n\nPaula had instinctively lowered her torso down into the water when she heard Kate's voice. For her part, Kate strolled toward the tub as she pulled her shirt over her head and then lowered the pair of shorts she had been wearing to reveal she had worn no underwear. Without any apparent embarrassment, Kate stepped into the tub and sat on the other side of Steve.\n\n\"You guys having a little party without me?\" asked Lisa as she moved into the room. She was soon nude and stepping into the tub next to Kate. \n\n\"Mom, are you going to sit on Steve's lap, or shall I?\" asked Lisa with a smirk as she watched her mother try to sink lower into the water.\n\n\"Here, Paula, let me help you.\" offered Steve as he gently grasped Paula's elbows and lifted her from the water and placed her on his lap. Lisa quickly sat where Paula had just been. \"That's better, don't you think?\"\n\nPaula was a brilliant red as she held her breasts in her hands and looked from one daughter to the other. Finally, she let out a sigh and sat very still as Steve placed his hands over hers.\n\nKate and Lisa then engaged Steve in conversation about the movies they would be making, Gwen's work on a hospital ship, and the current situation in Washington. Paula began to relax slightly and join in. Finally, Kate pushed the envelope a little,",
        "\"Mom, would you hand me the bottle of water sitting over there. I seem to be thirsty.\"\n\nPaula looked at the bottle just a few feet from Kate and then to Kate. She tried to stare Kate down, but it didn't work. Kate just smiled as she looked back blankly. Finally Paula nodded, as if she made a decision. She removed her hands from covering her breasts and reached over to pick up the water bottle. She was surprised when she looked back and saw Kate's expression.\n\n\"Wow, Mom! We don't need to work on your self-esteem. You just destroyed mine. You look incredible,\" marveled Kate. \"Did you see that, Lisa?\" \n\n\"Yes, and so did Steve. I bet he's poking Mom in the butt right now with a big old erection. You know he gets turned on looking at boobs and Mom's are spectacular.\"\n\nKate never moved to accept the water Paula held to her.\"Okay, you've embarrassed me enough for one night. You caught me naked in the hot tub with Steve. Now you think I'm a terrible mother and wife. I should leave.\"\n\nPaula began to shift her weight and Steve quickly wrapped his arms around her stomach and held her in place. \"Your daughters think you're beautiful, and so do I. Kate and I set this up. I was supposed to get you naked and into the tub and then Kate was going to drop in and join us. That was supposed to show you that being naked with people that you trust is not a bad thing.\"\n\n\"Mom, you're on Steve's lap. Besides the likely poking you're getting under the surface, do you feel like you're in any danger? It feels great, doesn't it?\" asked Kate.\n\n\"It feels too good, and I do feel in danger,\" replied Paula. \"I'm afraid of hurting your father. I'm afraid I like this guy too much. I'm afraid of losing your respect.\"\n\n\"Mom, I told Dad what we hoped to accomplish tonight. He laughed and said you needed to loosen up a little. He thinks he was too straight laced back in the early years of your marriage and caused you to become a lot more cautious and conservative than you were when he met you,\" responded Kate. \"He also said that you'd probably come home hot and horny.\"\n\n\"Your father knew Steve was going to try to get me naked? He thought that Steve would be able to succeed in that effort? Am I so easy to manipulate?\" worried Paula.\n\n\"Paula, I didn't manipulate you, well maybe your nipples a little, but other than that, I didn't do anything to make you get undressed,\" teased Steve.\n\n\"Mom! Steve groped you? How good was that? I bet you were rehearsing for your love scenes, weren't you? You're going to have to work on those scenes a lot to get them right. I plan on spending quite a lot of time rehearsing with him, too. It's all part of the job and I do want to get it right. It's for the art,\" chuckled Kate.\n\n\"But you're not married and a mother! I am. I shouldn't be here now, and certainly not naked on Steve's lap,\" worried Paula.\n\n\"Mom, I'm married, a mother, and I'm naked. I'll switch places with you if you like. Do you think less of me for being here?\" asked Lisa seriously.\n\n\"Of course not! Your husband and Steve are the same kind of men. They trust each other and they trust you. Steve wouldn't do anything to harm your marriage, and neither would you,\" reasoned Paula.\n\n\"Mom, Jason raved about Dad when they got back from Kiev. He says that Dad's one of the bravest, most selfless men he's ever seen, including the men he served with in the military. What I'm saying is that Dad is one of those kind of men, too,\" stated Lisa proudly. \"You need to see him the way he is now, not how you always thought of him when we were little. He loves you. We all know that. But he trusts you and he's extremely proud of you, and of being your husband.\"\n\n\"Yeah, Dad's a pretty cool guy. Gwen said that Steve was really impressed with him in Kiev. Jordan told me that Charlie spoke very highly of him and his courage in a very dangerous situation,\" added Kate. \"You saw the bruises on Dad's chest. He risked his life to back up these guys. Do you think Steve, Jason, Charlie, or Chip would ever betray Dad? They have way too much respect for him, and for you! You're safe with these guys. We all are and it's a great feeling. \n\n\"I can show off my boobs and even rub them all over the guys and they won't get all grabby, or expect more than I'm willing to do. I think the word 'gentlemen' applies to them quite accurately.\"\n\n\"I guess that's the difference,\" reasoned Paula. \"I grew up knowing men liked to look and wanted even more. Mom was beautiful and men always looked at her and it never bothered Dad. When I married your father, he made it pretty plain that his wife and the mother of his kids should behave in a certain way and showing too much cleavage or leg was discouraged. I don't blame Ted. It was his upbringing. I stopped dressing to show off my curves and became conservative. I don't know how you girls grew up so daring. Ted and I didn't encourage it. That's for sure.\"\n\n\"Remember how Gwen dressed before she met Steve,\" reminded Kate. \"She took Dad's message to heart until she hooked up with this stud. Lisa and I were always more daring. We knew we could wrap Dad around our fingers and you never really objected to our clothes. I think you understood our feelings because you had them, too.\"\n\n\"But I did get into this hot tub naked with Steve. Do you think I betrayed Gwen, or Ted?\" asked a concerned Paula.\n\n\"Mom, you don't get it yet. You can't betray Gwen, or Dad, with Steve. He won't allow it. If you push him too far, he'll shut you down. He's done it to me a few times,\" admitted Lisa. \"Once he established the boundaries, we've been fine. The only time he'll feel you up or kiss you passionately is for a movie, or maybe a rehearsal? I do remember hearing something about manipulating nips.\"\n\n\"Suppose he did hold my breasts and pinch a nipple. I'm not saying that he did, but if he did, would that not be a betrayal?\" questioned Paula.\n\n\"Not with Steve. Not tonight,\" replied Kate. \"I told him that he had to get your motor running a little or the movie was doomed. He agreed to press things a little to loosen you up and my guess is that he did, and it worked. Look at you sitting on his lap with your breasts fully exposed. I think you'll be more relaxed tomorrow and do great from here on out.\"\n\nIt turned out that Kate's prophecy was extremely accurate. Paula was a different person the next day. The director was pleased with the sudden turn around. It was the following week when Paula was told that she'd be doing one of her big love scenes with Steve.\n\nRather than being shy and nervous, she insisted that Ted, Diane, Kate, and Lisa be nearby during the filming. Steve was actually more nervous than Paula, mostly because he didn't want to harm the relationship he had forged with his future father-in-law. The spent the better part of the afternoon doing the scene. The director would often stop them part way through and suggest a slight change in the scene.\n\nBy the end of the day, Steve had kissed Paula too many time to count and had her breasts in his hands most of the time. For her part, Paula managed to squeeze his cock a couple of times when her hands were directed below his waist. She's always smile at his reaction. Between takes, she whispered to him.\n\n\"You've been fondling my breasts all day, so now and then I get to have some fun, too. I sure hope this film turns out as hot as it makes me feel. I really hope Ted is well rested.\"\n\nWhen the director finally announced the end of filming for the day, Paula pulled a robe tightly around her shoulders and went in search of Ted. \"Uh, oh! Ted, you're in for a long night,\" predicted Jordan, who had stopped in to watch the last few minutes of the scene. \"She needs it bad after Steve primed her for so long.\"\n\n\"Let's get to the dressing room,\" insisted Paula as she grabbed Ted's hand and marched off with him. \n\n\"Your mom really threw herself into the part, wouldn't you say, Kate?\" teased Jordan. \"You wanted Steve to be forced to make a tough decision in the movie and you've got it. You're going to have to bring your A-game to win the competition with Paula. She's truly a beautiful woman.\"\n\n\"Don't worry about me,\" replied Kate. \"I love a challenge, although I have to admit that I never knew Mom would be so sexy and had such an amazing figure. I think she looks better now than she did ten years ago. I hope it's in her genes and they pass down to me.\"\n\nJason and Lisa were also making a movie, although the screenplay had been purchased from a writer in Canada, and not written by anyone in Lady in Red. It was a romantic comedy and the couple was doing a very credible job. Lisa had regained her pre-pregnancy body, except her breasts remained larger than they were before having Theresa. This fact was not lost on those involved in the film. Lisa's clothes were made to accentuate her amazing figure and her classic beauty. Steve, Kate, and Diane had smaller parts in the film and were very good, but it was obvious to everyone that the movie was showcasing Lisa. She was now a mother and rapidly approaching thirty. She was confident, professional, beautiful, and the camera caught it all. Her film would do very well. Everyone was certain of that.\n\nSteve and Jared had begun getting up very early to run five miles before doing a strenuous workout in the gym. They pushed each other as hard as they could to get ready for training camp. Steve was always amazed at how fast Jared was able to run. He was three inches taller than Steve's six feet four inches and forty pounds heavier than the two thirty-five Steve weighed. But there wasn't an ounce of fat!\n\nIn high school, Steve had been able to keep up with Jared in the weight room. Steve had improved his strength when he played for Navy and maintained his level while in the service, but Jared was incredible. Jared was able to do repetitions with amounts Steve was barely able to lift once. Steve was determined to improve. The two of them were going to try to negotiate together, as well as play together, so Steve didn't want to fail to hold up his end of the deal.\n\n\"You're a quarterback,\" pointed out Jared. \"You're not supposed to be too muscled. You need to be limber and quick. I'm the one that has to be able to bull through a line with a couple of three hundred pound guys trying to stop me.\"\n\nGwen had suggested that Steve pay a nutritionist to help him achieve his goals. Steve had the nutritionist set up diets for both him and Jared. By the end of May, the two men were absolutely ripped. \n\nJeff Hook grumbled about the hours, but he'd be up early most mornings, videoing Steve and Jared as they ran past him. Then he'd drive a ways and set up to video them again. He followed Steve to the weight room. He hung close most of the day. Jared, Steve and those normally around them became accustomed to the young man being Steve's shadow.\n\nJason, Charlie, Pete, Billy, and Chip began working out with them as much as possible. \"When Becky saw these two guys run by the house, her jaw almost hit the floor,\" griped Pete as he worked on the weight machine. I knew I'd better pick up my game. I know I can't run with the big dogs, but I can get into a lot better shape.\"\n\nThe other guys agreed and soon all seven could be seen running the five miles every morning. Pete surprised everyone with his ability to keep up although he had a prosthetic foot.\n\nSteve would hang around in the gym in Valhalla to assist Sybil when she came down for her rehab work. Jeff had been told early on that Sybil's recovery was not something for public consumption. Steve would help Sybil any way he could and when he wasn't needed, he'd work out on the weight machines and wait for her to finish her therapy.\n\nSybil complained about what she felt was lack of progress, but Steve knew that she was doing far better than her doctors had expected. By the end of May, she was walking slowly, and for short distances, as she worked to restore feeling and muscle control in her lower extremities.\n\nSteve spent part of each day walking slowly alongside Sybil, offering her constant encouragement. Everyone connected with Lady in Red devoted some time and effort to helping Sybil. She was seldom alone and was constantly urged to work harder to recover. Steve was dedicated to having her ready and able to dance with him at the wedding.\n\nThe Washington Redskins were surprised when Steve's agent entered their offices. They were anticipating a heavyweight with years of experience. Instead, a beautiful young woman breezed into their office and introduced herself.\n\n\"I'm Kate Anderson. I represent Jared White and Steve Hammer. I have a proposal to offer that I think you will find acceptable. Shall we get right to it?\"\n\n\"You're an agent? You don't look like you're old enough to be out of college yet. I assume you're Gwen Anderson's sister,\" replied the general manager as he shook Kate's hand. \n\n\"Actually, I'll complete my last year of law school next spring. I am Gwen's sister and I have Steve and Jared's complete confidence. Shall we get started?\" repeated Kate.\n\n\"We're asking for Jared to receive a contract that mirrors the one signed by your first round draft pick this year. He signed last week, I believe. The only difference is that Jared will expect five percent more in every clause that discusses compensation.\"\n\nThe management's negotiating team briefly exchanged glances and then the general manager nodded for Kate to continue.\n\n\"Steve Hammer will agree to play for whatever the minimum pay is in the league,\" stated Kate to the astonishment of the negotiating team.\n\n\"However, he will do so only if the team agrees to allow Lady in Red to give a free concert after the first home game. The concert will be held in FedEx Field. At that time the Redskins will donate two million dollars to the homeless shelter that was established by our company. Make no mistake. This is not a tax dodge, except for you. You can claim the donation and use the deduction. The money will be used to feed, clothe, and house homeless in the Washington area.\n\n\"You'll be given an option of having Lady in Red play after future home games, but each time it will require a two million dollar donation to a charity to be named. A two week notice will be required if you want them.\"\n\n\"So you're telling us that we can sign Steve Hammer to a minimum contract if we agree to donate two million dollars to your charity? Why would we ever want a repeat performance? We could limit our expense to just two million dollars for the season to lock in Steve Hammer,\" pointed out the assistant general manager.\n\n\"Perhaps you should have someone from marketing in here,\" replied Kate. \"What do you think having Steve Hammer and Jared White playing for you will do for your team? How about when the TV cameras show my sisters Gwen and Lisa, along with Jordan Quick Burns, Naomi Wilson, and a host of our friends cheering for the Redskins? How about if Gwen and/or Jordan agree to sing the National Anthem? How about the press and good will you'd reap by having Gwen and Steve attend your promotional events? Imagine the publicity for you when you donate a couple million dollars to various charities in the Washington area. \n\n\"Jared and Steve are prepared to agree to the terms I just presented. If you have to think this over for more than thirty seconds, then you're not qualified to hold your jobs. What'll it be?\" demanded Kate.\n\n\"You can't just waltz in here, insult us, make a wild-ass proposal and expect us to accept it immediately,\" began the general manager. \"We'll have to sit down and...\"\n\n\"We have a deal!\" came a voice from the doorway. \"I'm the owner of this franchise and you're absolutely right, Miss Anderson. This offer is a no brainer. Do you have a contract with you? We'll have to see that the correct language is included for the league and the players' union, but I'm telling you right now that your offer has been accepted.\"\n\nKate reached into her briefcase and pulled out a three page contract and handed it to the owner with one hand, while offering to shake hands with the other. Everyone chuckled when they realized the contract was just three pages. \n\n\"Steve insisted that we keep it simple,\" grinned Kate. \"He also wanted me to ask if you'd consider selling the team, or even a minority stake in it?\"\n\n\"That's got to be a first!\" roared the team owner with true mirth. \"The player I'm negotiating with to play for me has the wherewithal to buy the team! Small wonder he asks for so little for himself. By doing so, he'll probably make millions more because of the good will he'll generate. I'll tell you right now that we'll want Lady in Red to perform after every home game. Get me the list of charities and we'll see that they get the money, and we will deduct it on our taxes. This has got to be the best negotiation process I've ever seen!\"\n\nSoon it became known that Steve and Jared had signed contracts with the Redskins. They would report to training camp in late July in Richmond, Virginia. As predicted by Kate, interest in the team increased dramatically. Jared was delighted with his contract. His parents had moved to Asgard the previous fall, but Jared insisted that they take some of his signing bonus for all they had done for him over the years. They were extremely proud of their son.\n\nOnce they wrapped up the films in Sparta, the Lady in Red group traveled to North Korea for two weeks, with the permission of the State Department. The plot of the movie did not have any political overtones. The friends simply filmed some action sequences and a car chase in the capital city. They also filmed several scenes on some of the country's surprisingly beautiful beaches. \n\nSteve insisted that the 'buddy movie' be about all of the guys, with no one person being the main character. Each of the guys had their girlfriend, or wife in Jason's case, be the love interest in the movie. That left Steve and Billy without girlfriends since Gwen and Charlotte were serving on the SS Charity. The lack of girlfriends for the two was easily written into the movie. Each of the other guys had a brief love scene. Jared's scene with Naomi turned out extremely well. Of course, Naomi looked sexy as usual and Jared was amazingly toned. He was a bit embarrassed by all of the complimentary comments from the women in the group, but extremely pleased that his hard work was noticed.\n\nSteve met with Jong a few times and they got along very well. Jong also visited the set often and seemed impressed with the beauty of the American women in the film. There were no political issues and the filming went smoothly. They returned to Sparta in the last week in June to film the remaining stateside scenes that had not been done before the trip to Korea.\n\nCharlotte and Gwen had satellite phones and called home often. The phones required constant charging, but otherwise worked very well. It was during an afternoon conversation with Gwen that Steve began feeling uneasy.\n\n\"We just left Yemen this morning,\" began Gwen. \"The people have been very friendly and seem to appreciate our efforts. I'm sure I made the right decision to be a doctor. I still want to be a pediatric surgeon, but that's going to take a few more years. In the meantime, I'm really enjoying the children we treat. We're headed south along the east African coast. We'll stop in Somalia for a couple days and then continue on to Mombasa, in Kenya. This has been a great trip!\" \n\n\"You're stopping in Somalia?\" asked a surprised Steve. \"I don't think that's a good idea. They have a lot of pirates and outlaws along the coast there. You should sail way out, well away from the coast of Somalia.\"\n\n\"The captain has been assured by the United Nations that we won't have any contact with any pirates or outlaws. Somalia has guaranteed our safety,\" replied Gwen.\n\n\"Gwen, I'm not one to trust either of those governing bodies. Especially not with your welfare. You should try to talk the captain out of it. This could go bad really fast.\"",
        "\"Don't worry so much,\" responded Gwen. \"We're perfectly safe. We only have a week left before the trip is over and we'll be preparing for our wedding. I can hardly wait.\"\n\nNot wanting to upset Gwen with something beyond her control, Steve chatted with Gwen about the wedding before ending the conversation a few minutes later.\n\n\"Is something wrong, Steve?\" asked Paula when Steve rejoined everyone at the dinner table at Marsh's. \"You look worried.\"\n\n\"It's probably nothing, but Gwen just told me that her ship is going to stop in Somalia. She said that the U.N. swears they'll be safe, and so does Somalia, but I'm not willing to bet Gwen and Charlotte's life on it.\"\n\n\"I've been hearing stories about Big Ben Chancellor, the leader of the biggest gang of pirates on the Somalia Coast,\" revealed Chip. \"Some of my old buddies call now and then. The guy is almost seven feet tall and as strong as Jared, or stronger. He loves to fight, to the death! He always kills his opponents. He's a bad ass dude, to put it mildly. He speaks perfect English. He learned it from the missionaries that gave him his English name. He later killed them, according to rumor. His nickname is 'The Butcher'. I'd say you have reason to be concerned.\"\n\nHearing Chip's assessment of the pirate leader's background caused Steve to make an immediate decision. \"Stephanie, call the pilots and tell them I'm heading to Somalia immediately. Please get a helicopter here as soon as possible. I can't sit around and hope Gwen will be okay. I'll be leaving within the hour.\"\n\n\"I'll be going with you,\" stated Billie immediately.\n\n\"Make that two helicopters,\" corrected Jason. \"Things have been getting pretty quiet around here. The guys and I were getting bored. We'll just ride along.\"\n\n\"You need to be clear about a few things. I don't know that there'll be a problem. But if there is a problem, I'll be diving in, regardless of international law, agreements, treaties, sovereignty, or anything else. Gwen and Charlotte, and Cheryl, now that I think about it, will be my first concern. If things get hot, I won't be taking any prisoners,\" promised Steve.\n\n\"We'd better get our gear ready,\" stated Chip as he stood up from the table. \"I suggest that we gather up some weapons and take them with us. We don't want to be looking for them if it all hits the fan.\"\n\nSteve turned to face the somber group of women. \"Janice, coordinate security with Mallory. All of you will follow any instructions our security team deems necessary. I don't expect any revenge from that pirate rabble, but if it becomes known that all of us guys are gone, bad things could happen. Everyone meet me in Valhalla in half an hour. We have weapons there.\"\n\nJeff Fox instantly realized that this was the drama he had hoped for when he agreed to video the famous friends over the summer. He had recorded the entire exchange between Steve and the others, and he intended to keep doing so.\n\nEveryone living in Asgard gathered in Valhalla to watch as Steve began passing out weapons to the men. They worked the actions and stuffed ammunition and supplies into duffel bags. Each man was given body armor in the form of a vest. \n\nThe women of Asgard remained quiet as they watched the men check their weapons and prepare to leave. Not one of them made an attempt to talk their man out of the journey. Becky managed to grab Pete's arm and pull him to her as she kissed him hard. The other women followed suit. Once they had kissed their men, they kissed Steve and Billie and wished them luck. \n\n\"This is what we get for falling in love with men like that,\" observed Lisa as the helicopters lifted off. \"Mom, did you notice how no one suggested that Dad stay home, or that it might be too dangerous for him? He's one of them. Every one of those men likes and respects Dad. Your husband may be an accountant, but he's a man the others trust to do his part. I'm really proud of him!\"\n\n\"So am I,\" admitted Paula. \"I never realized just how brave he was. I hope there's no problem and that Gwen, Charlotte, and Cheryl return safely.\"\n\nSteve, Chip, Jared, and Jason had a short discussion about where in Somalia the Red Lady would land and where they could find helicopters to take them to the ship. They began making phone calls. It was Jared that solved the problem. \n\n\"I know a couple of pilots that I served with in Iraq. There started an import/export business in Somalia. They own two fairly new choppers and are willing to help. They hate 'The Butcher'. He and his men steal a lot of their products and he's killed some of their employees. There had two stipulations. You'll have to repair or replace their helicopters if harm comes to them, and you have to kill that Chancellor if you get the chance.\"\n\nSteve looked around at his friends and nodded. \"I can live with those terms. Tell them we have a deal. They need to be fully fueled and waiting for us at the airport.\"\n\n\"I brought some magnetic Lady in Red signs we use on the big rigs. We'll place them on the helicopters,\" revealed Jason. \"We want everyone to know who we are and who we represent if we go in.\" \n\nPresident Rosen was relaxing with his wife in the White House shortly after eleven PM when an aide knocked on his door. Once he was inside he explained the situation.\n\n\"The United Nations has sponsored a hospital ship, the SS Charity, that's been delivering medical services to the poor and needy from Southeast Asia to Africa. At this time, our satellites have detected a rather large number of smaller ships headed directly for the hospital ship. Our intelligence indicates that Somalia pirates are planning on capturing the ship.\"\n\n\"They'd attack a hospital ship? Well, when you stop and think about it, the pharmaceuticals would be worth a fortune on the black market. Does it seem likely that they'll have some ridiculous ransom demand?\" asked Rosen.\n\n\"Sir, intelligence believes that the leader of the pirates is Ben Chancellor, also known as 'The Butcher'. He doesn't allow his captors to live very long. He kills the men immediately. He and his men rape and mutilate any women they manage to capture.\"\n\n\"What's the U.N. doing about this? Have we lodged any complaints with Somalia? How many people are on that ship?\" demanded Hanson.\n\n\"There are forty two medical personnel and thirty four crew members. Sir, you need to know that Gwen Anderson and two of her friends are on that ship,\" responded the aide.\n\n\"Oh, shit!\" exclaimed Rosen. \"I forgot all about that. We can't let that bastard get his filthy hands on her! The American public would demand retribution, and I can't really blame them. Do we have any Navy ships in the area? Can the hospital ship outrun them?\" \n\n\"We have two war ships several hundred miles north, as well as the aircraft carrier Nimitz in the Red Sea. We could have our fighters in the air within minutes,\" suggested the aide. \"The SS Charity had a small engine fire and is dead in the water at this moment.\"\n\n\"God damn it! We can't just blow up those bastards, especially while they're in Somalia's sovereign waters. Let's get some jets over the area, just in case we need them. They can give us visual reports at the very least. I'll be right down to take control of the situation,\" promised Rosen. \"Get Steve Hammer on the phone right now.\"\n\nSteve was still in the air over East Africa when his phone chirped. Looking at it, he saw a state department number, so he let it go to voicemail. He noticed Jason watching him.\n\n\"That was the state department. I don't want to drag Rosen into this. If he orders me to stand down and I don't, there'll be all kinds of repercussions. He needs plausible deniability, and so do I. I can honestly say that no one told me to not kill that big fucker,\" stated Steve grimly.\n\n\"Steve, I'm hearing that there are pirates headed for the SS Charity,\" revealed Chip. \"We'll be on the ground in twenty minutes and it'll take half an hour or so for the choppers to reach the ship. The sun will be just coming up about then. Let's go in from the east. Hopefully the sun will affect their vision. It always works for the guys in the westerns I read.\"\n\nThe Lady in Red group in Sparta had accepted an invitation from Billy Marsh's father to join him for a late evening gathering and to watch the news. Earlier in the evening, cable news had reported that it appeared that Somalia pirates were indeed headed toward the SS Charity, which was now floundering in Somalia waters off the northern coast.\n\nThey were drinking coffee and watching the big screen monitors when Paula's phone rang. \"Mrs. Anderson? This is President Rosen. You're probably aware that we have a situation involving Gwen and others. I need to speak with Steve, but he's not answering his phone. Can you help me get in touch with him?\"\n\n\"Mr. President, we are aware of the situation. Steve is not available to speak on the phone at this time, but I'll have him call you as soon as I talk with him. That's the best I can offer.\"\n\nThe conversation ended and Paula spoke to her group. \"President Rosen wanted to talk to Steve and can't reach him. If Steve wanted to talk to Rosen, he would have answered his phone. I don't think anyone can turn Steve back now and he didn't want to be in a position to disobey the President of the United States, but I have no doubt that he would do exactly that for Gwen.\"\n\nSam Petrosky was summoned to the flight deck before sunup. She looked at her superior officer and knew immediately that something was amiss. \"Petrosky, Mercer, you two will be taking off in a few minutes. You will be flying south to give the President a visual on a possible attack on a hospital ship by Somalia Pirates. I think it is conceivable that you may be ordered to fire on them, so be prepared.\n\n\"You need to know that a personal friend of the President's is on that ship. If anything should happen to Miss Anderson, President Rosen will be extremely upset,\" concluded the officer.\n\n\"Gwen is on that ship being attacked by pirates?\" asked a stunned Sam Petrosky. \"Sir, be assured that if, and when, I receive the order to fire, I will terminate those pirate bastards with extreme prejudice.\"\n\nProving that the world is becoming a small place, a British broadcast crew had been filming a story along the coast of Somalia. As the events of the day began to escalate, the crew was ordered to climb aboard the helicopter they had rented and fly over the SS Charity and to send back live reports. They arrived over the scene just as almost a dozen smaller boats pulled alongside the SS Charity. Pirates began using ropes and ladders to climb on the larger ship. Gunfire erupted as soon as the pirates' feet hit the deck!\n\nBack in Sparta, everyone's attention was glued to the TV set. American TV networks had secured a live feed from the English station. They watched in horror as the pirates climbed onto the helpless ship and began shooting.\n\nPresident Rosen was also horrified as he watched the news feed from the English station. Then he was told that two F 35's were approaching the scene.\n\n\"It looks like they're too late to make any difference,\" lamented Rosen. \"When they get a visual, patch them in so I can hear them.\"\n\nSeconds later, he clearly heard the voice of Lieutenant Petrosky. \"Sir! There are two helicopters traveling at what appears to be maximum speed toward the hospital ship!\"\n\nEveryone clearly heard the commanding officer ask, \"What country are they from, Lieutenant? Are they flying any colors?\"\n\n\"Yes, Sir!\" came Petrosky's immediate response. \"They're flying red!\"\n\n\"You don't mean Chinese? Be more precise, Lieutenant! What country do they represent?\"\n\n\"America, Sir!\" came back Petrosky's obviously proud voice. \"They're as American as apple pie! They're flying the Lady in Red logo and they appear armed.\"\n\n\"Lieutenant, what would you guess their intentions are?\" demanded her superior.\n\n\"Sir, with all due respect, they're going to kick some pirate ass. I slowed down as much as I could when I flew by. I had a visual on Steve Hammer. Even though it was a brief glimpse, I could see that he's heavily armed, as are the rest of the crew.\"\n\n\"How many men can fit in those two choppers, Lieutenant?\" came the commander's voice.\n\n\"I would guess that each chopper has four, maybe five men, beside the pilots. I just passed over the ship now and there's hell to pay there, Sir. It appears that upwards of a hundred pirates have gone aboard. I'll circle back around.\"\n\nThe group in Sparta was watching the news cast in absolute horror when suddenly the camera that had been trained on the ship swung toward the east, and the rising sun. Because of the brightness of the sun, viewers could only make out the dark silhouettes of two helicopters flying just above the water. They were tipped slightly forward, indicating that they were moving rapidly.\n\n\"That's the guys!\" yelled Kate. \"Look! One of them is climbing out and down a ladder. He's getting ready to board the ship! I bet it's Steve!\"\n\nPresident Rosen watched the same scene that the group in Sparta, and viewers all over the world, were treated to. He found himself holding his breath.\n\n\"Sir! Steve Hammer is descending a rope ladder in preparation to board the ship,\" came Petrosky's emotional voice. \"The helicopter is going far too fast for a safe dismount. Men with guns are waiting for the choppers to get within range. If there are no orders to the contrary, I'm going to fly very low over the ship, just above the tower. That may distract the shooters a little. It's the best I can do!\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "pirates",
        "extortion",
        "gun battle",
        "movies",
        "football",
        "training",
        "negotiating",
        "washington"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-23"
}