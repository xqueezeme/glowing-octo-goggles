{
    "title": "The Yule Log",
    "pages": [
        "I sighed as I saw the signs for Morrisville. My home town, the place I had struggled to escape over fifteen years ago; now I was coming back with my head hung low and my tail between my legs. It was humbling and humiliating. I had left when I was eighteen and never looked back. I wanted a career, I wanted a life, and I wanted love. I'd gotten the career, I'd had a life, and I thought I'd had love. I'd been wrong.\n\nMy company started the cut backs at the beginning of the year. They hit different departments, pruning the dead wood and scaling back over the course of the year. I had thought I was secure; I'd thought I was invaluable; I thought wrong. My loyalty had been appreciated and I was most regretfully given the boot, but the boot came nonetheless. At least they'd given me a good severance package and my skills were in demand. \n\nI came home near the beginning of August and told Steven that we would have to economize till I could secure a new job. Steven had not been pleased. His displeasure only increased as the weeks passed and I was unable to find a job. Economics was not one of Steven's strong points. He loved money; he loved spending money; and up until I'd lost my job I'd been able to keep his habits well supported. \n\nI hadn't sat on my ass waiting for a job to fall in my lap. I went to more than a few interviews, most I was well over qualified for, but none of them panned out. I came home from my latest interview in the middle of October to find Steven's things gone. His things weren't all that was missing. Anything that had been jointly purchased, the entertainment systems, electronics, some art, and such were also gone. By the time I'd gotten over the shock of having the man I'd lived with and loved just leave me without a word after three years together, I wasn't surprised to find our joint accounts completely emptied. Steven had obviously decided that his meal ticket had run out and he'd left with the last plate of food for a new buffet. I at least had enough common sense to have our joint credit cards cancelled before I broke down. \n\nI spent nearly a week in a complete funk. With most of my cash gone, and half of what I'd owned taken, I really didn't have many options. With a sense of defeat, I'd called my mother and asked if I could come home. I don't know about other thirty-five year-old ex-professionals, but by the time I'd packed up my life into a U-haul trailer and started on my way out of metropolitan life in New York to return to the hill country of Pennsylvania, my self worth was in the crapper. I was the eldest son, and the one who'd gone the farthest in my chosen field. I'd been on top of the world. Now all I had was my long-term investments, my 401k and an SUV with a trailer full of my worldly possessions. \n\nI looked at the buildings along Main Street as I pulled into town. I couldn't face the house, not immediately. I pulled into a parking spot and decided to go for a walk. The town had changed a lot since I was a kid. They were doing a major revitalization of the downtown and it was really looking good. I grinned as I saw a sign of civilization calling out to me: Starbucks. Yes, they are everywhere.\n\nI went inside and closed my eyes, letting the aroma waft over me as I tried to imagine myself back in the business district and getting my mid-morning cup of life. Even the heaven of the familiar coffee smell couldn't wash away the fact that I was back in a small town with no future, and having to sponge off my mother to get back on my feet. My shoulders slumped a little as I opened my eyes and went to the counter.\n\nI was looking up at the options when I heard my name being said by a deep, resonant voice. \"Hey, Kevin, what can I get you?\"\n\nI snapped my attention to the man who'd just come out of the back. He was tall, dark blond, athletic build, wearing a Starbucks long-sleeve shirt that hugged his body in very pleasant ways. I shook those thoughts out of my head; my dick had messed up my life enough, I didn't need to have it do it to me again. \"Umm, a cinnamon-vanilla latte?\"\n\nHe smiled, \"Sure,\" and turned to make my order.\n\nI studied his back. I had no idea who he was. He obviously knew who I was. Other than swinging by for the obligatory Thanksgiving family gatherings and Christmas, I didn't spend time in the hometown. Who the fuck would want to; no bars, no clubs, closest mall was an hour away, and cell phones were only now becoming a dependable thing. He had my latte ready in short order.\n\n\"You wouldn't want a sandwich or something with that, would you? Lunch crowd will be in soon.\" \n\nI nodded and pointed to the turkey-croissant. I couldn't place him, but there was something familiar about him. He must have noticed my perplexed expression because he started to laugh.\n\n\"Sorry, I forgot that you haven't been back in years.\" He stuck out his hand. \"Jesse Carlson.\"\n\nI blinked. Jesse had been one of those \"friends of a friend\" guys you hang with by default on Friday or Saturday nights. Not that anyone ever did anything in Morrisville; the most that ever happened was guys snagging one of their father's bottles of jack and heading out to the fields to tip cows. Woo Hoo, just my idea of fun. We'd never really known each other in high school, he'd been into sports and I'd been on the debate team and in band. I played sax, if you must know, and still do; Steven had at least left me my sax. I shook his hand, forcing myself to be pleased to be recognized. In truth, I was embarrassed. \"Hey, Jesse.\" I tried to make pleasant conversation; it was only polite. \"How'd you recognize me so quick?\"\n\nFor a moment I could have sworn he looked embarrassed, but he shrugged it off quick. \"You're the 'guy who went places' out of our class, bud. Harvard, big success in the corporate world, the local rag keeps track of all the 'kids who did good'.\"\n\nI felt like crawling under a rock. Yeah, big success I was. I'd done great. I mustered a smile, paid for my food, and took my drink to a table to brood. After a few minutes, Jesse came over with my sandwich. \"You forgot this.\"\n\n\"Thanks.\" I couldn't even muster the smile. Home wasn't more than two miles away, and I couldn't bring myself to go any further. It was the ultimate humiliation. I'd always scoffed at the guys who'd lived with their parents after graduation; they were losers. I'd paid my own way, through scholarships, grants and hard work, and had gotten the hell out. Now I was one of the losers; it was a bitter pill to swallow.\n\nThe lunch crowd came and went. I didn't even notice that Jesse replaced my latte a couple times and cleared away my plate as I sat at the window watching the afternoon drag by. Morrisville wasn't as dead as I remembered it. The lunch crowd had been pretty good and the streets, though not bustling, weren't empty. I realized I wasn't alone when I saw Jesse's reflection in the darkening glass of the window. I blinked at him as he drank his coffee.\n\n\"Mind if I ask you a question?\" He sipped from his cup, looking at me with the soft concern that you get from barbers, or bartenders. It was the \"you can tell me, I won't judge you\" face.\n\nI shrugged. \"Nah, go ahead.\"\n\n\"Why do you look like someone shot your dog?\"\n\nI shrugged. \"Lost my job; lost my lover; lost my money. Pretty much feeling lost.\"\n\nHe nodded, looking out at the street. \"Can't face the Mom yet, huh?\"\n\nI was shocked. I didn't think I was that transparent. I hung my head, not willing to look at him. \"Only losers live at home with their parents, Jesse.\"\n\nHe made a non-committal noise. \"Not always, but I know what you mean.\"\n\nI looked around. \"This is your place isn't it?\"\n\n\"Yep, how'd you guess?\"\n\nI grinned. \"Because you have two employees who are doing cleaning and such, but you're sitting here, talking to a customer, without any concern about getting on the boss's nerves.\"\n\nHe smiled. \"Dad helped me start the franchise a few years ago.\"\n\n\"That's cool.\" I looked around the shop, and really took it in. It was a fairly large place, larger than the average Starbucks. It had a separate meeting room area and what looked like a small stage area at the other end. \"I wouldn't have thought Morrisville could support a Starbucks.\" \n\nJesse laughed. \"You really have no clue what's been going on since you left have you?\"\n\nI blushed. In my mind, there was no reason to think about Morrisville. It was part of my closeted, miserable past. I'd hated the place. I hated living in a small house, sharing my bedroom with my brother and wearing clothes from thrift shops and second hand stores. I looked back out the window. \"Yeah, I'm pretty clueless.\"\n\nJesse smiled at me. I could see it in the glass. It was a soft, gentle smile that just seemed to radiate calm acceptance. \"You should get home, Kevin. If you want, I can show you around tomorrow after the lunch crowd. That way you won't get lost on your first day back.\"\n\nI grinned. \"It's grown so much I need a guide?\"\n\nLaughing, he finished his coffee and stood up. \"Not really, but I know the recent histories; so think of it as a 'this is your town' recap.\"\n\n\"Ok, you win. Mom never could make a decent cup of coffee anyway.\" I stood up and put out my hand. \"Thanks, Jesse.\"\n\nHe met my hand with a firm shake and smiled. \"My pleasure.\"\n\nFortified with coffee and the knowledge that there was one friendly face in Morrisville, I got back in the Acura and finished my journey to the house. Mom came out, smiling and drying her hands as I pulled into the driveway. \"Kevin, I was getting worried.\" Kissing me on the cheek, she pulled back to shake her head as she looked me over. \"You're too thin and you look tired. What has Steven been feeding you?\"\n\nI hadn't actually told Mom that he'd left. I tried to face it with defiance and strength, but my voice died when I tried to say it and I started to cry. Mom, like she always did, just bundled me into the house and had hot chocolate and cookies in my hands before the tears could hit the ground. She listened quietly as I told her the whole story. She'd been the only person in Morrisville who'd known I was gay. She'd just sat down with me one day during my senior year and point blank asked me. The only person I could never lie to was Mom. She'd been my hero growing up, and the last thing I'd ever wanted to do was be a disappointment. She'd just smiled and told me that she loved me no matter what gender I preferred. \n\nDad had died shortly after Katie, my youngest sister, had been born. I'd been twelve. Mom had done the best she could, worked two jobs, and had always managed to be at every concert or game or scholastic event her children had been in. What we'd lacked in material things, Mom had always tried to replace with love. I should have paid more attention to that. I'd been so caught up in my own conflicts and dramas that I'd missed the fact that she'd kept our home as a refuge. \n\nMom put me back in my old room. It felt strange to sleep in that room without Jack in the other bed. Still, I slept better than I had in weeks. I had no idea what I would do, but I wasn't going to be a drain on Mom. Coming home to recover and rebuild was one thing, becoming a dependant was quite another.\n\nI spent the morning moving most of my things either into the storage shed or down into the basement. Even though it was chilly, being late October in northern Pennsylvania, I still worked up a good sweat by lunch. I caught a quick shower, dropped the trailer off at the local U-haul place, and got to Jesse's around one. They had a good flow of people until around two pm, and then he was able to get out from behind the counter. He grabbed his coat and carried out two venti cups.\n\n\"Cinnamon-vanilla, right?\"\n\nI nodded, taking the cup. \"Yep; I've got to pay you for this.\"\n\nHe waved away the comment. \"My treat. Owners can do shit like that.\" He grinned and pushed open the door. \"Ready?\"\n\n\"Lead on MacDuff.\" He looked at me, clueless, and I just laughed and followed him out.\n\nThough I was impressed at how much Morrisville had grown, I wasn't nearly as impressed as I was with Jesse's pride in the place. He just radiated love for the town. He told me all about the struggles to revitalize the downtown, how they had torn down the old industrial park and made space for the new Community College campus, and the attempts to bring awareness of the town to others through art festivals and events.\n\nWe made it back to the shop around six, feet a bit achy but smiling in spite of ourselves. It had been a great day. One of Jesse's employees came up when we got out of our coats.\n\n\"Mr. Carlson?\" She was maybe nineteen, pretty, and had a pleasant smile. \"Will we be hosting the usual jam session on Friday? A few people called while you were out and I wasn't sure.\"\n\nJesse grinned. \"I don't see why not. Tell them that costumes are optional but encouraged.\"\n\nHer smile lit her face. \"Way, cool. Us too?\"\n\nHe laughed. \"Sure, but nothing that will dip into the food or cause anyone to catch on the handles or counters.\"\n\n\"Ok, no drapy sleeves or Lady Godiva hair, gotcha.\" She practically danced back to the counter area to conspire with the other workers about costumes. God, would I want to be that young again? Probably not, but it was tempting.\n\n\"Damn, that means I'll have to wear something or the kids are going to drive me nuts.\" Friday was Halloween.\n\nI laughed. \"What happens Friday nights?\"\n\n\"Music Jam and Poetry night. It gives the college kids and locals someplace to show off their talents, and is a draw for an otherwise slow evening.\" He grinned. \"You don't still play sax do you?\"\n\nHe had me surprised again. I'd been in Jazz band, which was a relatively small offshoot of main band. It kept me wondering how much he really remembered about High School. Of course, I'd tried to forget most of it so the whole thing baffled me. \"Yeah, actually I do.\" It was the one \"art\" I ever bothered with. It was impractical and foolish, but I still loved playing the damn thing. Steven had hated it. I suppose that should have been my first sign that he really wasn't the best choice in lovers.\n\n\"Cool. It'd be great if you'd come down. We go seven to nine, or ten on heavy nights, and we don't have anyone playing sax. \"\n\nI rolled my eyes. \"Like anyone would want to hear an out of practice sax player screeching through a blues number.\"\n\nJesse laughed. \"I would. It would be a nice change of pace from country guitar.\"\n\nI shuddered. \"Oh, that really makes me just pant with anticipation.\"\n\n\"Chicken.\"\n\nI narrowed my eyes. \"You're going to make this an ego thing, aren't you?\"\n\n\"Damn straight.\" He headed back for the counter. \"I don't think you have the guts to come here, in costume, and jam with us uncultured country folk.\" Bastard. If I hadn't known any better, I'd have thought he knew me too well. There was no way I was going to let that one slide.\n\n*****\n\nI spent the rest of the week getting settled into Mom's house, getting my feet on the ground and contacting headhunters. I also agonized over what I was going to wear Friday night. Leave it to a gay man to fret over clothing for a party when his life is in the crapper. I should have been a drag queen then at least the drama would have made sense. I went through my club clothes and shit that I'd accumulated since college. If you can't make at least a dozen costumes from a gay man's wardrobe, you have to turn in your Fag-Club Card. The hardest part was resisting the impulse just to go out and buy new stuff. When the going gets tough, the tough go shopping; but that wasn't an option.\n\nI looked at myself in the mirror as I adjusted my vest. The only thing I had had to buy was some dark tan foundation and some setting powder. Othello didn't have to be -black-, dark Arabic or Mediterranean would do. I'd done my face, ears, neck and chest. I got into costumes. Hell, I'd dyed my hair and goatee from my natural medium brown to black. Can you say \"male-drag\"? I'd even conned Mom out of a pair of her larger Avon hoops. When I got flush again, I'd have to get her some real jewelry, the fake shit had to go. It wasn't perfect, but it was the best I could do on short notice. Burgundy satin swashbuckler's shirt, black tights, black boots, black velvet vest, gloves\u2026 gold jewelry and my sax. I looked like a fucking idiot, but I looked like a hot, great assed, stylish idiot. It would do.\n\nI kissed Mom goodnight between bouts of trick-or-treaters. She rolled her eyes at me, but they sparkled with mirth. \"You can't do anything simple, can you?\"\n\nI'd become so much more comfortable with my sexuality since I'd left home. The few times I'd gotten Mom out to New York, she'd had a blast when I showed her the \"night life\" of the city. For a down home, small town girl, Mom was cool. I put my hands on my hips, struck a pose and did my best diva imitation. \"What, don't you think I look fabulous?\" I dragged out fabulous into a twenty-syllable word in a drag-queen voice that made Mom laugh.\n\n\"Yes dear, you'll knock them dead.\"\n\n\"Thanks Mom.\" I was feeling a little self-conscious as I stepped out of the house. In the city, I'd have been out and flaming with the rest of the girls, but this was Hicksville, and flaming wasn't really what I wanted to do. I looked back. \"I don't look like a fag, do I?\"\n\n\"No dear, you look dashing. I'm sure you'll break a few hearts, especially if you do even half as well with the sax as you did practicing last night.\" She smiled at me lovingly and made a shooing motion as more kids came up the walk. \"Get going; you're blocking the door.\"\n\nI laughed, bounded past the ghost and witch that were coming up the steps, and got an appreciative second glance from their teen aged escort. Ok, maybe the tights did look good. I got downtown by half-past seven. I was surprised at the number of people in Starbucks. I'd had to park a ways down the street, and walked briskly to the warmth of the store. I may have looked \"fabulous\", but tights and satin just didn't make good late fall clothing for Pennsylvania. I got inside, brushing past a couple of non-costumed javaholics who had made their last run for the night, and looked for a place to set my sax. I decided not to bring the case; it'd have ruined the look of the costume. Was it practical? No. Did it make sense to my ego involved self image? Hell, yeah.\n\nI found a spot where I could warm up when I realized that I was drawing more than a few looks. I wasn't certain if they were favorable or not. I think it is what an alien would feel if he were to walk into a place. Maybe a third of the people there were in costume, and other than Jesse's employees, none of them had tried nearly as hard as I had to do it well. Most of the people in the place were college aged. There were a few older people, and a few my age. At first I didn't see Jesse. My eyes finally found him; he had been sitting at the stage with a guitar. \n\nDamn if he didn't look good. He was wearing tight, brown denim pants, a white poet's shirt that was loosely laced up the front and showed off a nice bit of dark-blond fur covering a distractingly well-defined chest. He had on a pair of leather moccasin boots and looked like one of the folksy singers from the sixties or early seventies. He even had a leather band with feathers tied around his thigh. All in all, he looked incredible for a thirty-something ex-jock turned coffee shop owner. Who was I kidding; he looked hot enough to melt the makeup off a drag queen. I pushed that thought out of my head and steered it clear of my groin. The last thing I needed was to have a rebound crush on a straight man.\n\nHis eyes met mine and he smiled. Getting up he motioning another guy to take his turn on the stage, and came over to my table. He had the most satisfied grin on his face. \"Had to prove me wrong, huh?\"\n\nI set my jaw and looked defiant. \"City boys can take down country boys any day of the week, Mr. Carlson.\"",
        "His grin only strengthened at my attitude. \"Damn, you're feisty tonight.\"\n\n\"I haven't had my coffee and this makeup took forever. Sue me.\"\n\nHe laughed. \"The coffee I can fix; you're on your own with the makeup.\" He looked at me for a moment and shook his head. \"You actually did your chest and dyed your hair?\"\n\nMy confidence waned a little. I looked down at myself, beginning to feel like an idiot. \"Yeah, so I went a little over board.\"\n\nWhen I looked up, Jesse was still smiling. \"Nah, I think it's cool. Most people wont' go to that much trouble for a costume. I have to admit; I'm not placing the look though. Give me a hint?\"\n\nI smiled. \"Shakespeare, tragedy.\"\n\nHe smiled. \"Othello.\" I melted. I hadn't expected him to be able to guess. He actually blushed. \"I should have figured that one out without the hint.\"\n\n\"Hey, without a reference it'd be tough. I still can't figure out who you are.\" My confidence was returning. Jesse was damn good at making people feel comfortable.\n\n\"Well, I was going for minstrel\u2026 but I don't know what the fuck one of those looks like. I went to a Medieval Festival once, and I put this together from memory.\"\n\nI laughed. \"It's close. You look like a bard who made the wrong turn and ended up at Woodstock.\"\n\nDamn if he didn't blush further. Straight men were so easy to keep off balance. \"Yeah, well, you want your usual?\"\n\n\"Oh, an evasion,\" I thought, but decided to give him a break. \"No, surprise me. I'm not Kevin, I'm 'Othello'\u2026 just don't poison my cup.\"\n\nJesse laughed as he went to make me something. I couldn't help letting my eyes follow him, memorizing how well the denim hugged his muscular ass. I jerked my eyes away and returned to checking my sax. I was not going to lust after a guy I'd just met. I wasn't going to be staying in Morrisville; this was only temporary.\n\nThe last singer finished up his song as Jesse got back with my drink. He'd been a 'country' singer, covered a Garth Brooks song, not sure which one, most of them sounded the same to me. Ok, I don't like country. It was another reason I really had to get back to civilization as soon as possible.\n\nJesse nodded toward the stage. \"Get your painted ass up there, Mr. Hamilton. If you're going to talk the talk, you'd better walk the walk.\"\n\nAnother challenge, the man was really getting on my nerves. Knowing I was being played didn't stop me from taking my sax and heading for the stage. I got up on the stool and switched off the microphone. This was a small space; amplification wasn't necessary. I closed my eyes and played some soft jazz. It was Kenny G'ish, which normally turned my stomach, too \"popular\" for my tastes, but seemed to please the crowd. This was all for show anyway; normally my playing was something from inside, personal and heart felt. I had no desire to open my heart to a bunch of strangers. Not to mention, at the moment my heart wasn't in the best of places.\n\nJesse grinned at me as I came back. \"Ok, so you still know how to play. I admit defeat.\"\n\nI bowed graciously. \"Thank you.\" Struck by an appropriate punishment, I smiled fiendishly. \"I haven't heard you play that stick of yours yet. I think it's only fair that the victor should be rewarded with a song.\"\n\nHe frowned, but picked up his guitar. \"You actually want me to 'sing'?\"\n\n\"Is the Pope Catholic?\"\n\nHe sighed. \"Ok, fine. But don't expect miracles.\"\n\nI grinned. \"I'll settle for not breaking glass.\"\n\nGiving me an evil look, Jesse made his way to the stage and turned on the microphone. I sat back with my coffee, prepared for something from Tim McGraw or another country star. My head snapped up when I heard him croon his way into \"Oh, Pretty Woman\" by Albert King.  Jesse was right; he wasn't a singer, but he honestly wasn't bad. His guitar playing, however, had me transfixed. It would never have occurred to me in a million years that Jesse would play the blues. I sat, watching him work his way through the words with his eyes closed, and was hypnotized by how his fingers chorded and strummed the song with practiced, though not perfect, skill. The way his fingers made love to the strings, just like the way he loved the town, fascinated me. My thoughts lingered on what those fingers would feel like. It wasn't till the end of the song that I realized I was hard and pressing obscenely down my tights. Thank God I was sitting at a table.\n\nJesse came back, smiling at the applause but looking a little embarrassed. I liked him blushing; it made him adorable. \"Shit, stop that Kevin. You're not going to go there,\" chastising myself silently. I smiled back as he took a seat at the table and took some strength from his coffee. \"You're really good.\"\n\nHe grinned. \"Thanks, but I know I sing like a dying dog. You realize you're not going to get one over on me again, right?\"\n\nI was disappointed he felt that way; though I wouldn't have run out to buy his records, the idea of listening to him sing again was not unappealing. \"Yeah, I guess. We're both full of surprises I suppose.\"\n\nWe talked while other people played, sang and read poetry till late. Jesse was in no rush to lock the place up and leave. He'd gotten me up again, daring me into a blues instrumental duet, bastard; honestly, we sounded damn good. His employees locked up and I found myself sitting with him in the shop, after eleven, with no desire at all to leave. I couldn't remember the last time I'd felt so comfortable. I'd been lulled too deep to catch what was coming next. \n\nJesse looked at me, his eyes sincere and honest, and he smiled. \"Kevin, play something for real.\"\n\nI looked at him, confused. \"What do you mean?\"\n\n\"I remember how you played in school, bud. You've been fucking off tonight. Don't get me wrong, it was great, but you weren't really doing it for you.\"\n\nHave I mentioned that it was fucking annoying how well he could read me? Yeah, I probably have. The guy had some nerve. He didn't know the first thing about me, and there he was telling me how I'd been 'faking' all night. I wanted to be pissed, but honestly, I was scared. Who was this guy who could just look at me and know me without having spent any time with me? I didn't need that; the worst thing in the world would be to fall in love on the rebound. \"I don't open up to strangers, Jesse.\" I looked away, uncomfortable as hell.\n\nHe sounded really disappointed; like he thought I'd meant him specifically. \"Sorry.\" He got up and took our empty cups. \"I should probably close the place up anyway.\"\n\nFuck. Why did that tug at me? He started doing the final things like shutting off the amp and checking on the register and the supplies for the next day. He was checking over the totals, not looking at me, when I started playing. I could feel his eyes lock on me, but I couldn't see them. Mine were closed, and I pulled something up for me. I settled on \"You don't know what love is\" by John Coltrane. Maybe I played it for me, maybe I was trying to say something to Steven, who would never hear me anyway, or maybe I wanted to give Jesse a look at my soul; but whatever the reason, I played. \n\nHe just stared, transfixed on me, as he leaned on the counter. When I finally looked at him, he wasn't smiling. The look was, for lack of a better word, wistful. \"That was beautiful.\"\n\nI really didn't know how to respond to that.\n\n*****\n\nI didn't go back to Starbucks for almost a week. I told myself I was too busy to spend time sitting around a coffee shop. I needed a job. By Wednesday, the combination of suffering through Mom's coffee and my desperate need to socialize had me back downtown. I forced myself to believe that I just wanted some good coffee and to see a friendly face. Yeah, right. What I wanted was to feel connected. After Halloween I'd thought a lot about my previous relationships and how fake they had been. Either I hadn't really been a participant, or my partners hadn't. Steven had just been the most convincing. I realized I hadn't really been in love with him; I'd been in love with the idea of him. He'd been an asshole in many ways, but he was handsome, charming and was more than happy to make me feel special. At least he had been as long as the money was there; he'd just been a really good whore, and I'd been his favorite John. That was probably an unrealistically harsh analogy, but I was bitter. We had filled more needs in each other than money and sex, but in the end it came down to a simple exchange of services.\n\nThat was what my career had been too. I gave my skill and talent for pay. The longer I was away from it, the more I began to realize I didn't even like my job. Oh, I loved my field; I loved the investment markets, banking and commerce, and the interaction of money with people's ambitions and dreams. What I didn't like was the constant cutthroat nature of the business; the bottom dollar; the take. Who cared if a major investment group was happy or unhappy with performance? It was like making deals with inhuman titans; the personal rewards were nonexistent.\n\nJesse smiled as I walked to the counter. He seemed genuinely pleased to see me. \"Hey, Kevin; I'd begun to wonder if you'd fallen off the face of the earth.\"\n\nI grinned and put on a fake tone of boredom in my voice. \"Nah, I'm just getting settled into the 'country life' again. You know: raking leaves, hauling fire wood, listening to the sounds of -nothing-.\"\n\nHe nodded, making a drink as we talked. \"Yeah, I know. I must have raked up two truck loads of leaves this weekend.\"\n\n\"That's right, you're family owns the orchard outside of town.\" I remembered the fall harvest celebrations that happened there when I was young. They'd have big barrels of apples, filled with water, and cider and hot dogs. They'd stopped doing it by the time I'd gotten to high school. Like any other farming family, the Carlson's struggled as the produce market turned more and more to South America and other countries for goods.\n\nJesse frowned. \"Owned.\" He set my cinnamon-vanilla down. \"We sold most of the land for development.\" \n\nThat must have hurt. Jesse had such pride and love for the small town and things of our childhood. I couldn't imagine how that must have felt. \"Oh man, I'm sorry.\"\n\nHe smiled. \"Don't be. It let me afford the franchise,\" he lifted his hands to his shop, \"and I was always better with people than I was with trees.\"\n\nI set my money on the counter and took up my drink. \"You wouldn't want to catch a bite after the lunch rush, would you?\" I wasn't making a pass, really; I just wanted to spend time with someone who was turning into a friend.\n\n\"Sure; how about Claire's? Nothing better than a diner cooked burger and fries to eat around while you get reacquainted with someone.\" I liked the sound of that.\n\nOver the next couple weeks, I learned that Jesse had never made it out of Morrisville. His mother had died shortly after graduation, and his father didn't take it well. He'd stayed home, tried to manage the orchard to help his father. He'd taken correspondence courses, and attended the old community college while it was at the other campus in Haydon. He'd managed to get an associates degree, and had taken a couple small business courses in finance and accounting. Unfortunately, the orchard had been a lost cause.\n\nFive years before, when they were breaking ground for the new campus, Jesse realized there wasn't a chance for the family business. They got the land rezoned and broke it into parcels. The Carlson\u2019s had owned a hell of a lot of property. They sold to a couple of developers who planned nice communities for the land. Since the family home and land had been free and clear for years, they had enough to invest and live comfortably, though not extravagantly. Jesse's dad didn't believe in market investments; he believed in investing in people, not companies. So he invested in Jesse; he helped him buy the building and open the franchise. It was a good investment; Jesse was a natural.\n\nJesse's dad died the previous year. Jesse didn't tear up or sound regretful, but I could tell he missed him. Jesse had been an only child, so he was living in the family house, and wasn't dating anyone. I suppose that was why he kept such long hours at the shop. It was better to spend time with a few customers than to spend it at home, alone. He seemed to look forward to our growing friendship as eagerly as I did. At least we had someone to bond to; someone who understood. It didn't matter that he was straight and I wasn't; we didn't discuss dating or relationships, we just worked on the friendship. It really helped.\n\nIt was the Friday before Thanksgiving when I had my next lesson in how small towns work. I'd been back to every Jam Night. During my time with Steven I'd forgotten how much I loved my music. Jesse and I had even practiced together a few times, learning a few songs to play as duets. I had just gotten a couple lattes from Carlie, when I bumped into a couple that I'd seen at a couple of the Friday sessions. They never played, but they would spend the evening quietly enjoying the music and readings. Fortunately, I didn't splash him as I dribbled over the cup. \"I'm sorry.\"\n\nThe man smiled. \"No problem; we were too close.\" He looked at me for a moment. \"You're Kevin Hamilton, right?\"\n\nI blinked. I had no idea who he was, but his smile seemed genuine. \"Yep.\" I grinned. \"Should I be nervous about what reputation precedes me?\"\n\nHe laughed. \"I hope not, everything I've heard has been good.\"\n\nI smirked. \"Then I know they were lies.\"\n\nHis wife patted him on the shoulder, moving him aside so that she could get refills while we talked. He kissed her on the cheek as she went by. \"Thanks, love.\" He followed me back to the table and offered his hand once I'd set the cups down. \"Jeremy Bates, I'm the President of Franklin Community College.\"\n\nI shook his hand. \"Pleasure to meet you.\"  I sat down and offered him a seat but he waved it off. \"I've seen you two at other Jam Nights.\"\n\nHe smiled. \"We love the community gatherings. Most people only come through, sit long enough to have a coffee and maybe a desert, but we get to see a lot of our neighbors this way.\"\n\nNodding, I sipped my coffee and smiled. \"Yeah, I hate to admit it, but it grows on you.\"\n\nHe chuckled. \"Missing city life?\"\n\nI shrugged. \"Sometimes, but not as much as I'd expected.\"\n\nHis face shifted slightly; a bit more serious expression settled into his look. \"I understand you decided to leave big business.\"\n\nI shrugged again. \"It was, inevitable, I suppose. I've come to realize I wasn't enjoying it, and I'm not sure I want to go back.\"\n\n\"Ever think of changing vocations?\"\n\nI blinked up at him. \"Umm, well, not really.\"\n\nHe saw his wife returning with their coffees. \"Would you be willing to meet with me at the school, Monday around ten?\"\n\nThat was odd. He seemed a little nervous. I had to admit, I was intrigued. \"I don't have anything on my calendar, and it would give me an excuse to get some coffee other than for the company.\"\n\nHe chuckled. \"Any excuse for good coffee.\"\n\nHe took his cup from his wife and he introduced us. \"Anne, this is Kevin Hamilton. Kevin, this is my wife Anne. She's a sucker for a mournful sax ballad.\"\n\nShe frowned at him. \"Jeremy, don't give away all my secrets at the first meeting.\" She extended her hand with a smile. \"I think you play wonderfully.\"\n\n\"Thank you.\" I took her hand and gave it a friendly squeeze. \"I think your husband is trying to butter me up.\"\n\nShe laughed. \"Don't mind him, he's harmless.\" Grinning, she leaned down and whispered into my ear. \"And you're right, he is.\"\n\nI grinned, and Jeremy looked flustered. \"Gee, now I'm wondering if I should wear my good clothes for Monday.\"\n\nHe grunted, but I could tell he wasn't upset. \"Business casual. No classes next week so we're just having administrative days before the holiday.\"\n\n\"I look forward to it.\" They wandered back to their table, Anne teasing Jeremy about something, and I wondered what that had been about. \n\nJesse came back and snagged his cup. \"Nice to see you making new friends.\"\n\nI grinned. \"Worried you couldn't handle me on your own?\"\n\nHe almost choked on his coffee; it dripped from his chin as I reached for some napkins. \"Asshole.\"\n\nI couldn't stop grinning for the rest of the night.\n\nI met with Jeremy on Monday, and he gave me a short tour of the school. The campus was definitely in a growth mode. He explained that more people were moving into the county and the school's reputation and connections with larger universities was making it a stepping-stone for further education. They were also developing quite a reputation for specialty two-year degrees and adult education. I enjoyed the tour, but it didn't answer why he'd wanted to meet me. That was answered when we got back to his office.\n\n\"We're opening a full business school next year.\" He beamed with pride at the statement.\n\n\"Really, that's impressive.\" Honestly, I was impressed.\n\n\"Unfortunately, I'm losing my head instructor for business and finance.\"\n\n\"Oh?\"\n\nHe nodded. \"Yes. Up to this point, the position has been only a part time affair. George Madison, the investment officer for the bank, has been teaching our economics and finance classes, but he's retiring next month and plans to move to a warmer climate while he's still young enough to enjoy it.\"\n\nI smiled. \"What does this have to do with me?\"\n\nJeremy folded his hands together and leaned forward on his desk. \"I wanted to know if you'd be interested in heading up the new department.\"\n\nI was stunned. \"I don't have an educational degree.\"\n\nShrugging, he sat back. \"You have a Masters in Economics from Harvard, you're young, talented and respected in the field.\" He smiled. \"I did a little research before I approached you; you come highly recommended.\"\n\n\"You want me to teach?\" I was still struggling to get my mind around the concept.\n\n\"Yes, and head up the department as it grows. I believe we will have a growth in our business program in the next few years; with the changes in the economic environment, a lot of people are trying to get a better education or need the skills to run their own businesses.\"\n\nI thought about it. One of the things I'd missed, as my career advanced, was the interaction with individual investors. I still loved the field, but I needed a change. I shot him an ironic grin. \"I would guess the catch is it doesn't pay.\"\n\nHe chuckled. \"Not as well as you could make back in the corporate world, that's for sure. But for the area, it isn't pauper's pay.\"\n\nWe went over the numbers and I was tempted. He had given me a lot to think about. I put out my hand as we stood. \"When do you need an answer?\"\n\nHe shrugged. \"George will be here for the spring semester if we need him, but I'd really like this resolved before the fall term ends. That way we can either put out feelers.\"\n\nThat would be about three weeks. I nodded. \"Ok, I can give you an answer by the fifteenth?\"\n\n\"He nodded. That would be fine.\" His smile was warm and he seemed to know what I was thinking. \"It's a huge move, Kevin. I made it myself twenty years ago. I honestly don't regret it.\"\n\nI got to Starbucks with my head still spinning. The money was less than a third of what I'd been making in New York, but my expenses, even with buying a house, would be less than half. It'd be a change in life style, but Jeremy had been right, I wouldn't have to live in a trailer. I sat at the window, looking out at the town. Did I really want to stay? Could I be happy away from the beat and pulse of the city? \n\nI was pulled out of my introspection by the voice that was beginning to haunt my dreams. \"Penny for them?\"\n\nI smiled at Jesse as he sat down across the table from me and set down another cup by mine. \"Not sure they're worth that much, but thanks.\" I picked up the new cup and took a sip. I shuddered for a moment. It wasn't my usual. I gave the cup a dubious look and Jesse grinned.",
        "\"I thought you should try something new. You've been drinking the same thing for weeks. Sometimes change is good.\" He took up his own cup and sipped.\n\nI took another sip, savoring the flavor now that I wasn't being shocked by the unexpectedness of it. It was smooth and creamy with a hint of spices I couldn't quite place. I raised any eyebrow at him. \"Ok, I like it. What is it?\"\n\n\"Our new Holiday Spice latte. We started offering it at the beginning of November.\"\n\nI tasted it again. It really was pretty good. \"It's good. I bet people enjoy it.\" I grinned. \"I wouldn't want it all the time.\"\n\nChuckling, he smiled. \"Nah, everyone needs a change every so often. Little ones are usually better than big ones; they spice up life without causing too much commotion.\" I just melted into that smile. It wasn't perfect, but it was real, like Jesse. I hadn't realized I'd been staring till he pulled a funny face. \"Earth to Kevin.\"\n\nI blinked, suddenly embarrassed by my behavior. \"Sorry, lost there for a moment.\" I looked back out of the window. Change; that was something I still wasn't comfortable with. We sat there in silence for a few minutes. It wasn't really uncomfortable, just necessary. I turned back to Jesse and smiled. \"What are you doing for turkey-day?\"\n\nJesse shrugged. \"Probably a Stouffer's hearty meal and a beer.\"\n\n\"You're kidding? Don't you have any relatives nearby?\" Jesse was such a person-oriented guy; it was hard to believe he didn't have plans.\n\n\"No, they all live a few states away. With 'Black Friday' right afterwards, I can't leave town for the holiday.\" He sounded tired. I believe that he hadn't had a break since his father had died.\n\n\"Then you're coming over to our place. With half the crew coming in for the weekend, one more mouth won't even dent the fixings.\"\n\nHe looked shocked. \"I couldn't do that, Kevin. Thanksgiving is a family day.\"\n\nI frowned. \"Originally it was a time to give thanks for friends and neighbors too. I'm not going to sit around, stuffing myself on turkey and home made fixings, knowing you're eating a microwave meal.\"\n\nHe grinned. \"You sure?\"\n\nI laughed. \"Mom loves to cook. If you want to bring something, supply the coffee for after dinner. Mom can still burn Maxwell House.\"\n\nJesse cringed. \"I'll be there, if only to save the good name of coffee.\"\n\nI couldn't have been happier to hear it.\n\n*****\n\nKatie arrived Wednesday night. It was great to see her. My youngest sister had taken education even more seriously than I had. She was finishing her masters in the spring and had already been accepted into a doctorate program. She was brilliant. Donna and her brood arrived Thursday morning, a little before noon. They must have hit the road before seven. Dinner was at one, and Jesse showed up around half past twelve with three thermal dispensers, two of coffee and one of hot cocoa. He won the hearts of my nieces and nephews instantly and earned Tony's eternal gratitude when he smelled the first cup. Yeah, my mother's coffee was that dreadful.\n\nIt was after grace, but before we had obscenely overloaded our plates, that I had a near death experience. Tony junior, TJ to everyone, looked up suddenly, seemingly surprised by a thought, and blurted out. \"Where's Uncle Steve?\"\n\nI don't know how I kept from dropping the mashed potatoes into the green beans, but I got the bowl to the table without breaking anything. Mom came to my rescue. \"He couldn't make it, dear. He's with his family this year.\"\n\nTJ was genuinely disappointed. Steven had won the hearts of the kids and the ire of all their parents. He loved spending money, and it really didn't matter on whom; so he was the next best thing to Santa on Christmas. That was, if Santa had a sadistic streak and loved to watch parents squirm. He had a talent for picking out the toys that would bring the most delight to the kids and the greatest headaches to the parents. Loud, multipart, or just plain complicated instruments of parental torture. It was only his feigned innocence and natural charm that had kept my siblings and their spouses from ripping him apart.\n\nIf Jesse had noticed my reaction, he didn't show it. He must have assumed that Steven was just another family member or in-law. I spent the rest of the meal trying not to look at him and to keep myself from hyperventilating. I hadn't realized that I'd gone \"back in the closet\" since I'd returned. I didn't like it. That put a major wedge between me, and a decision to seriously consider Jeremy's offer.\n\nKatie went with me on Friday for more \"coffee salvation\" while Mom went with Donna on their obsessive sales barrage. Katie needed to talk, or that was her excuse to beg off the shopping. She'd never been a \"stuff\" girl. For the youngest, spoiled sibling, she had turned out about the most sensible of all of us. We walked the campus, a habit I was unconsciously forming, before getting our coffees. I told her about the offer and my reservations about it. She didn't buy my crap. \n\nWhen we hit Starbucks, the lines were vicious as shoppers demanded warmth and caffeine before braving the sales again. Jesse didn't have time to chat, which was fine; I still hadn't recovered from the previous day. He gave us what time he could spare, smiling the entire time and taking my sister's flirtations with an ever-increasing blush. I actually felt a stab of jealousy at how easily she could do it. She had never liked Steven and took to Jesse like a fish in water; the bitch always had good taste in men.\n\nShe didn't say anything serious till we'd gotten our to-go cups and had left to walk Main Street and peek in the windows. Neither of us wanted to face the rabid sale-hunters. She raised her eyebrow at me as we stood in front of a boutique, admiring a dress she'd seen. \"So, when are you going to tell Jesse?\"\n\nI frowned at her. \"Tell him what?\"\n\nShe laughed. \"That you're so in love with him you're tripping over yourself.\"\n\nI spit my coffee, making a mess of the poor shop owner's window. Scowling at her, I took our napkins and did my best to clean up the mess. \"That wasn't very nice.\"\n\n\"That's an evasion.\" She was so damn smug. \n\n\"I'm not in love with Jesse. I don't do straight men, sis.\" Katie had been the most accepting of my siblings about my gender preferences. I think, next to Mom, I loved her best.\n\nShe rolled her eyes and took my arm. \"What ever you say, big brother. You realize you're going to have to tell him you're gay, right?\"\n\nI sighed. \"Yeah, I know. I was just really enjoying the friendship.\"\n\nLaughing, she gave me a peck on the cheek. \"You are such a drama queen, Kevin. Jesse's cool; I don't think you'll have any problems with him.\"\n\nI hoped I wouldn't, but I wasn't convinced. We tabled the discussion for the rest of the day and just spent time as siblings. I was going to miss her when she left.\n. \nI spent the rest of the weekend seriously thinking about what I wanted to do. I knew, whatever it was, I couldn't live life I the closet. I didn't need to be on fire and marching in pride parades, but I wasn't going to hide who I was; never again. I'd talked with Mom after the brood had returned north. The hopeful look on her face when I mentioned the position gave me another reason to take the job. I hadn't realized how lonely she'd been since Katie had gone away to school. None of us had remained in town; none of us had considered how she would feel living alone with no family nearby; it seemed terribly unfair.\n\nI met with Jeremy the week after the holiday. I was nervous as hell, but I wasn't going to apologize for whom I was. He greeted me with a smile and I took a seat across the desk from him. I couldn't believe my palms were sweating. I'd been an out, active gay man for fifteen years; this was ridiculous.\n\n\"Jeremy, before I give you an answer, I need to make a few things clear.\" \n\nHe nodded, folding his fingers in front of his lips in a very \"I am listening to you\" manner.\n\n\"I'm gay. I'm not ashamed of it, and I have no intention of hiding it. If that would be an issue for you or the school, I don't want to take this any further.\" I made sure I didn't break eye contact.\n\nHe didn't even flinch. \"Ok.\" He waited for me to say something more, but I really didn't have anything more to say. His simple answer had thrown me. He took a breath and smiled. \"For the record, I already knew that. When I'd asked around with some people back in New York, the topic came up. I'm glad you told me though, it makes me more comfortable knowing the people I work with aren't concealing things from me.\"\n\nI was nonplussed. \"You don't have a problem with it?\"\n\nHe shrugged. \"I have a gay son, my youngest. I got over my issues with that a while ago. As far as the school is concerned, as long as you follow the accepted code of ethics, don't date students and refrain from inappropriate acts in the class room, it isn't anyone's business who you sleep with.\" His lips curled into an amused smile. \"I think it would be nice to have an open, well adjusted, successful gay role model for the students. Maybe it would help a few of them deal with their own issues.\"\n\nI really couldn't believe it, but the grin on my face must have lit up the room. \"Then I'd love to take the position.\"\n\nHis smile was relieved. He stood up and put out his hand. \"We'll get the paperwork finalized before the end of the week. You won't regret it.\"\n\nI left a few hours, and a very sore hand later, and went straight to Starbucks. I had to tell Jesse. He greeted me with his usual smile and told me to take a seat and he'd bring out some drinks. I was practically drumming the table when he got there. I probably looked like a kid who'd just gotten his first job. He laughed at me as he sat down. \"What's up with you? You look like you're about to bounce off the seat.\"\n\n\"I just got a job!\"\n\nHis eyes seemed to loose their shine, but he smiled at me. \"Congratulations, when do you leave?\"\n\nHis reaction really didn't register. I was too excited to see anything beyond my nose. \"I'm not. I'm the new head of the Business Department for FCC.\"\n\nHe graced me with a thousand watt smile. \"You're shitting me!\"\n\n\"Nope, just finished the paperwork today. I start January fifth.\" I was all grins.\n\n\"That's the best news I've had this month.\"\n\nI laughed. \"It's only the third, Jesse, the month is young.\" The look he gave me nearly had me melting. If I hadn't known any better, I'd have thought he was going to kiss me. I looked back out of the window and Katie's words haunted my thoughts. I was going to have to tell him the truth, and soon; I was really beginning to wonder what \"the truth\" was.\n\n*****\n\nThe days flew by as I helped Mom prepare for the Christmas invasion. Kids, couples, singles and more presents than any one family should have to contend with would be descending upon us in a matter of days. Mom got off the phone with Jack, my brother, and looked a bit worried. \"I think we have a problem.\"\n\nI looked up from the textbooks I was reviewing. I'd gotten advanced copies of the available texts for the classes I'd be teaching, and I was trying to figure out which ones would be best so I could have the book store stock them. I'd written off a couple already, but there were still several I had to wade through. \"What's up?\"\n\nShe sat down at the kitchen table, looked at my notes and texts that littered the surface, and smiled at me. \"Oh honey, I'm so glad you're staying. I think you're going to be a wonderful teacher.\"\n\nI squeezed her hand and blinked back the tears. Mom could just do that to me; her unconditional love through everything had kept us all going. I was glad I could do something that made her so happy. \"You're evading.\"\n\nShe grinned. \"Ok, maybe I was.\" Setting down the cocoa, she sighed. \"I don't think we can fit everyone. You and Steven had always stayed over in Haydon and just came up for Christmas Eve and Day. Katie can stay at Julia's, they still like to get together over the holidays, but I don't know what to do with Jack and Leigh.\"\n\nI shrugged. \"I'll just get a motel room, Mom. They can have the old room and the kids can all bunk in the basement like usual.\"\n\n\"I'm not going to throw you out of your own house, Kevin. You live here and will be till we find you a place of your own.\" She chewed on her lip. \"We'll figure out something.\"\n\nI was sitting at my usual spot in Starbucks, reading over an economics text, and hoping to find some redeeming value in the book. The thing was drier than week old biscotti and nowhere near as enjoyable. I seriously wondered if it would be improved by dunking it in my coffee.\n\nJesse came over and plopped down across from me. He'd been in high spirits all month. I wish I could have shared in it, but I still hadn't reconciled what and when I was going to tell him. Even if he was cool with my being gay, he might think my desire to spend so much time with him was because I \"wanted\" him. The problem was I couldn't convince myself that it wasn't the reason. Katie had opened up Pandora's Box at Thanksgiving, and all my submerged desires were rearing their lustful heads. Why did he have to be so fucking great? I smiled over my textbook. \"Care to be lulled into numbness by the most boring text anyone ever wrote?\"\n\nHe laughed. \"No, thanks. Even with such a fascinating reader, I don't think I could survive a book you label as 'less enjoyable than razor burn'.\"\n\nI grinned. \"That was the book on Business Accounting; this one is Basic Economics.\"\n\n\"So, Mr. Hamilton, what do you read for fun at night?\" His spirits just wouldn't diminish.\n\nI laughed and grabbed up \"Introduction to Business Practices\" and grinned, \"The classics.\" I looked at the book and sighed. \"I'm going to have to figure out where I'm going to read at night for a while.\"\n\nHe looked at me, surprise written all over his face. \"What's wrong?\"\n\n\"Oh, nothing serious; small house, big family. No matter how we work it out, two of us have to find outside accommodations. Katie has already gotten a room with her best friend, but I'm looking at Motel-Six.\" I shrugged. \"It will be great to have everyone down.\"\n\nJesse looked offended. \"Why the hell didn't you ask me? You had me over for Thanksgiving; the least I could do is put you up for the holidays. I've got plenty of room.\"\n\nThe thought of spending my nights alone with Jesse made my heart race. I knew I'd fuck something up. I was going to turn him down, but the look on his face made me stop. Behind the happy eyes was a bone biting loneliness that made my heart clench. God, he was alone for the holidays. I'd never been alone for the holidays, even when I hadn't had a lover I'd had family. I smiled and decided I'd survive keeping my hands to myself if I had to bolt my door and tie myself to the bed. \"That'd be great. Think you can handle me from Christmas Eve through New Years?\"\n\nHe grinned. \"I think I can manage.\" I wasn't so sure I could, but it was too late to back out now.\n\nI followed Jesse to his place after he closed up on Christmas Eve. I'd packed for a week, had plenty of reading material and had convinced myself I could keep from molesting him even if I saw him naked. I realized I'd never even seen him in short-sleeves. God, I had to get my thoughts out of the gutter. The house was on five acres of orchard. He'd kept the property the way I'd remembered it from childhood. The house was well maintained, clean and filled with antiques. I was amazed at the lack of dust or clutter, and he admitted that he had a maid come in a couple times a month.\n\nHe put me in a room down the hall from his. He still hadn't moved into the master suite. I thought that was odd, but he simply smiled and said he was saving it for when he met someone special. I hadn't realized he was a romantic; damn, I wanted him. \n\nI looked around after I got my stuff into the room, and met him in the living room. He'd gotten a fire started and had some soft jazz playing. \"You don't decorate for the holidays?\"\n\nHe shrugged. \"No one to see it but me, and I spend most of my time at the store.\" I had to admit, the store had been done up with abandon.\n\n\"So nothing, no tree, no holly, no stockings?\" I was actually disappointed and a little sad. I'd never spent Christmas without the trappings.\n\nHe blushed. \"Well, I do have one tradition I keep up with.\" He nodded to an adorned log that was next to the hearth. \"We always burned a Yule Log on Christmas Eve, and had mulled wine.\" He sat back and cast his eyes around the room. \"The decorations, tree and such are there for families. I'll do it again when I have one. The log is kind of a personal thing; you don't have to be with a bunch of people to use it.\"\n\n\"I've heard of them, but I thought they were a log with some holly and three candles on the top.\" The log looked nicely decorated, no candles, and smelled seasoned with spices. \"I don't know the traditions; what's it about?\"\n\nJesse smiled. \"The Yule Log is normally burned on 'Yule', which is a few days before Christmas and is the longest night of the year.\" He shrugged. \"We usually just did it Christmas Eve. Anyway, the idea is that you invest the log with all the love, happiness, blessings and good fortune you and your family have had throughout the year. Then, on the darkest night, you burn the log and it is supposed to shine with that love and happiness into the darkness and illuminate the year to come.\"\n\nSomething about it sounded so perfect. It wasn't all big and blown-up and centered on the giving of gifts. It was about cherishing the things we already have and gave hope for a brighter future. I was deeply touched. \"Are we going to burn it?\"\n\n\"Yeah, but I didn't want to do it if you thought it was weird.\"\n\nI smiled. \"Let's get out of our work clothes, mull some wine and toast our blessings. I think this year I've got a lot to be thankful for.\"\n\nI grinned self-consciously as I came back down to the kitchen. I actually do own pajamas, and I wear then in cold weather. Ok, so I wear the bottoms even in hot weather. Steven said it was a waste of effort since he usually had me out of them before I went to sleep anyway. I'd grown up sleeping in them; sue me. Jesse had quickly showered off the smell of coffee and changed into some soft sweat pants and a button down flannel shirt. He warmed the wine on the stove, adding the mulling spices while we talked about my plans for the department and what I would look for in a home. We went back to the living room with the wine, some bread, meats and cheeses, and our good cheer.\n\nOnce we were settled, he took up the log and set it atop the already burning ones in the fireplace. Smiling, he lifted his glass in a toast. \"We give thanks for the blessings of friendship, family and guidance. May they shine brightly into the New Year and bring us happiness and joy.\"\n\nI really couldn't think of anything to add. I clicked my glass to his and went, \"Amen.\"\n\nWe drank our wine and nibbled on the food as the log burned. It did seem to burn brighter than the other logs and the smell of the spices filled the room in the most sensual way. I closed my eyes and just enjoyed the warmth and the aromas. I couldn't imagine how a guy as great as Jesse could remain single so long. I poured myself some more wine and smiled at him. \"Ok, Mr. Carlson, it's time for you to tell me why a guy with all your blessings isn't sharing them with someone special.\"\n\nHe shrugged. \"I thought I was.\"\n\nHe was not getting out of it that easy; no matter how his words made my heart quiver. \"Evasion, try again.\"\n\nHe frowned, poured himself some more wine and shrugged. \"I guess I just haven't been lucky enough to interest someone I'm interested in.\"\n\nI didn't buy that for a second. \"Yeah, right. I remember a certain track star who got anyone he wanted back in High School.\" I'd spent a lot of time remembering since I'd gotten home. A part of me had always noticed Jesse, but we didn't really hang in the same circles often and I wasn't 'out'. Not that he'd have been interested; he always had a gaggle of girls around him.",
        "He blushed. \"I've had my share of sex, but I just haven't been with that special someone I wanted to bring home.\"\n\nI laughed. \"Come on, Jesse, you had anyone you wanted.\" The wine was getting to me. Was warm wine more intoxicating?\n\nHe looked back at the log and mumbled, \"Not anyone.\"\n\nThat dulled my enthusiasm. He really sounded like he had missed something or someone and regretted it. \"I'm sorry, Jesse. I didn't mean to pry.\"\n\nHe smiled at me. It wasn't the happiest of smiles, but he didn't seem upset. \"Can I ask you a question?\"\n\n\"Sure.\"\n\n\"Who's Uncle Steve?\"\n\nI was lucky I didn't snap off the stem of my glass. That would have been a wonderful end of the evening, being taken to the emergency room to have my lacerated hand stitched and bandaged. Honestly, I didn't really feel anything for Steven any more, save for a bit of shame and regret for being such an idiot. It was the idea of telling Jesse that had me shaking. I set the glass down before I damaged it, myself, or both. \n\n\"Steven was my lover, Jesse. I should have told you before, but I didn't want to ruin our friendship.\" I looked away for a moment, trying to steel myself for the rest. \"I'm gay.\" I waited for the shock, or look of loathing and the biting remarks. They didn't come. He just looked at me, not saying anything but obviously thinking about what I'd said.\n\nI swallowed as he set his glass down next to mine and leaned into me. He smelled of soap, wine and something else. I must have looked like a deer in the headlights because I was rooted to the spot, watching in disbelief as he closed the gap between us and brought his lips to mine. It was brief, wet and completely melted me. I was still trembling when he pulled back.\n\n\"What if the only 'anyone' I want is you?\" His voice was low and warm and would have stripped me of my clothes if it had had hands.\n\nI swallowed. Pandora's Box may have been open, but Jesse had just upended it and dumped out the contents. The last couple months flash past and I could see it all so much more clearly. We'd been making love with everything but our bodies for almost the entire time. No wonder I couldn't think straight about Jesse, I'd been stuck in foreplay for too long. My fingers gripped the back of his head as I pulled him back to me. I could hardly breathe, but I managed a quiet, \"Merry Christmas.\"\n\nI found myself lying under him as we kissed. God he tasted good. He was so much bigger than I was. I'd always been lean; light and in some way's just too graceful for a guy. Jesse hadn't been a football player, but he still had a solid, muscular body that made me tingle every time he touched me. He was touching me from head to toe and the tingling was driving me insane. \n\nWe broke from the kiss, panting and a little desperate. The way he fumbled with the buttons of my pajama top told me he needed this as much as I did. He got it open and looked down on me. I was a little worried; I'd never been a jock. He paused only for a moment before crossing his arms and pulling his shirt over his head. I finally got to look at all of his blond-furred glory. Admittedly, Steven beat us both in the looks and body departments, but his looks had been contrived and sculpted in the gym and by deliberate care. Jesse was by no means the perfect magazine model, but he had an honest, farmer's body that was built from hours of hard work. He was real, and that's what I wanted. \n\nSmiling down at me, he ran his fingers down my hairless chest and along my abs. \"You're so beautiful.\" I'd been told that before, but the way he said it and the total sincerity in his eyes made me feel it for the first time. \n\nI pulled him down; feeling all that fur-clad muscle filled me with a sense of awe. I had the most incredible man in my arms; I prayed that this time it was for life. We kissed again. Each kiss was better than the one before. By the time we came up for air, we were both hard and throbbing against each other. I moaned as he ground against me. \"I hope you've got protection\u2026\"\n\nHe stopped and looked at me, grinning. \"I hope that means what I think it does.\"\n\nI bent up and chewed on his ear. \"If you think it means 'take me to bed and fuck me like you mean it', yeah it's what you think.\"\n\nHe pulled me up with him as he stood. I didn't even get to settle my weight on my feet because he had me up in his arms and was kissing me as he carried me out of the living room, up the stairs, and down the hall. He paused at his room and looked at me. \"Kevin, what do you want?\"\n\nI didn't quite follow him. I wanted him to fuck me so bad I was squirming. \"What do you mean?\"\n\nHe swallowed. \"Do you want tonight, or do you want forever?\"\n\nOh god, if that wasn't a ton of bricks. Most guys say, \"I love you\" in the midst of blowing their load. It\u2019s a sex thing and never means the real thing. He'd just asked me to marry him; maybe not in those terms but it was the same thing. I asked myself what I wanted, and the answer came back so easily I couldn't help but smile. \"I want forever.\"\n\nHe kissed me again; this one not only took my breath away but also left me weak. It was a good thing he was carrying me, because I would have collapsed. He turned and carried me into the master bedroom. It was actually a little chilly in the unused room, but I had warm furry blanket lying over me as I was put on the bed. He whispered as he chewed on my ear. \"God, I've wanted you for so long.\"\n\nI shivered a little, not just from what he was doing to me. I didn't have all that furry muscle to keep me warm. I smiled. \"I hate to say this, but think you can wait a little longer?\n\nHe sat up, looking confused. I grinned. \"If I'm going to get my presents early, why don't we light a fire and make it last?\"\n\nHis sexy grin made me think twice of letting him off the bed. \"You're a closet romantic, Mr. Hamilton.\"\n\nI grinned back. \"I'm a flaming romantic, mister. If I'm moving in here, you better know that I plan to be as romantic as they come.\"\n\nHis words caught in his throat and he just looked at me. I think he had tears in his eyes but it was hard to tell in the dark. \"I love you, Kevin.\" His voice was cracked with emotion. \n\nI think that was the first time I ever heard those words and had them resonate so deep that I couldn't find a spot that I wasn't thrumming with it. I chuckled and hugged him tight. \"I guess I should have listened to Katie.\"\n\nHe grinned at me as I let him go. \"Why's that?\"\n\n\"She wondered why I hadn't told you I was so in love with you that I was tripping over myself.\" I started to laugh. I couldn't help it. I felt so relieved and so happy that it just came out.\n\nHe brought his forehead to mine and started chuckling. \"Probably the same reason I didn't; I was scared shitless.\"\n\nWe held each other and laughed. Our lust had faded a little but it was replaced by warmth that was far more profound. I brushed his face with my fingers and he rubbed his nose in my goatee. \"So, Mr. Also-Romantic, want to take the time to set the mood, or do you just want to strip me out of these togs and fuck?\"\n\nHe smiled, his eyes burning so bright that I could have sworn the Yule Log was behind them. \"I want everything.\"\n\nWe kissed again. I swore if I could have dissolved I would have. I don't know what he did with his lips, but it was overwhelming. It took me a moment to refocus as he sat up. \"You put a couple of the logs on, and I'll bring up some fire.\" None of my other lovers would have stopped during foreplay and have been willing to go to all that trouble. The desperation was gone, but the low burning need was there by the truckload. I knew to the bottom of my soul that this was going to be worth it.\n\nHe vanished down the hall as I got off the bed and fumbled with the logs. There were candles on the mantle and I found some matches. I lit them, and went to the curtains to wait. I was standing there, looking out at the moonlit snow, when he came back in. He had the Yule Log in a coal bucket, the wine glasses and the bottle. I could also hear that he'd turned up the stereo down stairs. Damn if he didn't look even sexier with the glow of the log illuminating him from the bucket. The light cast shadows across his muscles and glinted in the soft hair that I longed to touch. He studied me in the moonlight, his eyes taking me in. \"Damn, Kevin.\"\n\nI smiled. \"I feel the same. Get that thing loaded, and let's finish unwrapping our presents.\"\n\nHe did as he was told, setting the glasses and bottle on the mantle before he crouched down and loaded the fire. He spent a few minutes blowing on it, making sure the logs caught. It gave me some time to drink him in. I crossed the room as he stood up, and I ran by hands over his chest. He moaned as I leaned in and began chewing on collarbone, enjoying the taste of his freshly washed skin. My fingers teased his nipples to hard nubs before I kissed my way down and latched on to one. Jesse stood there, his hands roaming softly over my back as he moaned. I don't think he'd ever really made love to anyone before; I got the feeling that he'd only had one night stands and quick fucks to dull the need.\n\nI slid back up his body and pulled him down to whisper in his ear. \"I want to make love to you, Jesse. Right here, in the light of the fire. I want to explore and get to know every inch of you.\" He was shuddering at my words. \"Think you can handle that?\"\n\nHe nodded into my neck; his voice was just above a whisper, \"Yeah.\"\n\nHis eyes were closed as I resumed my explorations. My hands roamed his back as I kissed his jaw and his neck. He felt so good, so real. He was panting by the time my hands made it to the back of his sweats. I slid them under, cupping his fuzz-covered ass and squeezed. He actually whimpered. I held his ass, kneading his cheeks, as I kissed my way down his chest and along his abs till I got to the front of his pants. He must have been leaking like a faucet because the sweats were drenched. I brought my hands around and pulled the front of his sweats out. His cock leapt up, leaving a glistening trail of lust along his abs as it slapped his abs beyond his navel. I'd honestly never seen one so big. He wasn't obscenely thick, thank God, but he was much thicker than average, and damn if he wasn't ten inches long. I wondered for a moment if I could even take the thing. The thought made my hole twitch and I had my answer. I was damn well going to try.\n\nI pushed his sweats down to his ankles and ran my hands back up his thighs and around his hips to grip his ass again. Running my lips from his sack to the tip, I was trembling almost as badly as he was. This was going to be a long, hot night and I planned to enjoy every moment of it. I lifted up enough to rub my goatee along his shaft. I caused a spasm when I scraped against his flared head. He gripped my head with one hand and the mantle with the other.\n\n\"Dear Jesus, Kevin\u2026\" He sounded like he'd just run a marathon. I knew I was doing him right. \n\nI wanted him so wound up that when I finally got him down my throat he'd be over the edge and into the abyss in no time. It wasn't that I didn't want to lick and suck on that monster tool for hours, but he simply wasn't going to be an easy guy to give a blowjob to. His dick was so hard and inflexible that deep throating was going to be out of the question. I chewed on him a little, running my tongue around the crown enough to have his legs shaking. I looked up and slid back. \"Grab hold of the mantle.\" My voice was low and so full of lust that it didn't even sound like me.\n\nHe did, stepping so that his dripping, throbbing cock was facing the fire and his butt was out toward the room. I slid around behind him slowly pried open his incredible ass. I'd nearly creamed over it at Halloween, now I planned to savor what I'd missed. I ran my tongue through his furry depths and he groaned. I lapped at him, chewing and prodding as I made my way to his trembling entrance. He was gasping as I ran my tongue over his tight, sweet hole. \"Kevin\u2026 I've never\u2026\" He didn't get out anything else. I pressed in, thrusting my tongue past his resistance before he could object. He cried out, his body quaking as I dove in as deep as I could go, my tongue twisting and tasting his inner essence. I was in heaven; my only regret was I didn't get to taste his first release. \n\nHis whole body arched as he came up onto his toes and gripped the mantle for dear life. \"Oh, God!\" His scream was drawn out and he pulled the lord's name into a strangled \"awed\" that seemed to rise up from his feet. His cock blasted out ropes of cum that smacked against the hearth and soared into the fire, sizzling as they draped over the logs. He was whimpering and slumped against the mantle as I finished feasting on his ass. His body was like a limp rag. His ass was so non-resistant that I think I could have just stood up, rammed myself home and he'd have just sighed and prepared to cum again.\n\nInstead, I wrapped my arms around his waist and let him sink down against me. He was still shaking through the aftershocks. Obviously no one had ever rimmed him before. He whimpered into the side of my head as I kissed his neck. \"Oh, god\u2026 I never felt anything like that.\"\n\nI licked around his ear and hugged him close. \"We have all night, and tomorrow, and next week and next year. Let's just take our time and make love until we're too old to get it up any more.\"\n\nHe nodded, finding his breath but not talking. He didn't say anything; he didn't need to. The way he felt in my arms, sated, happy and loved, was better than words.\n\nI squeezed him. \"Lets get into bed and you can unwrap your present. I've already gotten to play with mine.\"\n\n\"I don't think I'll be able to top that\u2026\"\n\nI bit his ear. \"I think you'll rise to the occasion.\"\n\nI could already see him rising back to attention as I chewed on his ear and fondled his chest. He groaned. \"Get in bed; I'm going to give you a ride you're not going to forget.\" Like a good boy, I did what I was told.\n\nHe moved one of the mantle candles closer to the bed and I saw the box in his hands. I almost squirmed knowing that soon I'd have him inside of me. I'm a versatile guy, but I admit that I prefer being under a hot, strong, well-hung man. Jesse was all that and spare change. Sliding onto the bed, Jesse caressed my body. It was pretty clear that he hadn't had much experience; I envisioned him as I would have been, trapped without an outlet, going out of town for an evening when I could, finding some nameless guy at a bar or pickup spot for a quick fix, and coming home sated but dissatisfied. With his size and looks, he was probably \"the top\". Some part of me was overjoyed to know that I was probably the first man he'd taken the time to make love to. \n\nI melted as his hands roamed my body. His touch was so light and appreciative that it made me feel cherished. It also stirred my libido harder than any of the heavy petting and groping I'd come to expect with a partner. I sighed with relief as he unsnapped my bottoms and slid them off, letting the cool air wash over my steaming rod. I wasn't as large as he was; average really, just like my height and build. That didn't dissuade him from leaning down and tasting me. God, the velvety-wetness of his tongue sent shivers through me as he licked at me tentatively. His teeth grazed me a few times as he strove to take me in his mouth. He couldn't take me completely, even though I'm not all that large, but I knew he'd be able to with practice. I sure as hell hoped to give him lots of practice. \n\nHe pulled himself over me, becoming a heavily muscled fur blanket, and kissed me again. What his fellatio skill lacked, his kissing made up for in spades. The man could kiss me to a state of mental numbness. I was completely gone when I felt him reach for the lube and protection. I snapped to attention when I heard the foil packet rip. I was horny as hell, but Jesse was huge. There was no way he was getting into me without some serious prepping. I think he saw worry in my eyes and he kissed me again before whispering. \"Trust me.\"\n\nI did. He rolled me onto my belly and ran his hands up my legs, pulling apart me cheeks before he sniffed at my ass. I trembled; it felt like a predator was taking my scent and I loved it. Slowly, his face pressed down against me and his tongue began to press at my hole. He licked me tentatively, he'd probably never done that either, but then he kissed his way up my back and chewed on my neck as he used his lubed fingers to open me. Ok, he hadn't done much cock sucking and his ass was probably cherry, but he knew how to open an ass. I thought I was going to go out of my mind as his strong, skilled fingers peeled me open with deep, insistent twists and turns. I was panting into the pillows when he pulled his face from my ass, lubed my hole generously, and positioned himself at my entrance. I thought I was ready for it when I felt his arms supporting him at my sides, and he pressed in; I wasn't ready.\n\nI cried out; there was no avoiding it, it hurt. That didn't mean I wanted him to stop. My ass had been empty for months and he was filling it more than anyone before him. He stopped as I gripped the sheets, trying to force myself to relax and accept him. His voice was torn as he struggled to decide what to do; he hadn't wanted to hurt me. \"Kevin, I'll pull out.\"\n\nI shook my head against the sheets and reached back to grab his hand. \"No\u2026 just lie against me\u2026 give me a minute, please.\" I panted it out between gasps. I had no idea it was going to be that bad. I'd always been a good bottom, I loved it, but my months of celibacy and his enormous girth just didn't make for a winning combination. He did as I asked, pressing his chest against my back but kept his hips up. \n\nHe kissed my neck, cooing and whispering into my hair. \"Kevin, please, I love you too much to hurt you.\" He almost sounded like he was crying. \n\nMy resistance melted. I wanted him in me; I wanted him claiming me; I wanted him to know how much I loved him. I sighed as I felt my ass give way, and he sank in a few more inches. I whispered to him, my voice low and pleading. \"Go slow; I want this, just please go slow.\"\n\nHe did, God did he ever! He pulled back at what felt like an inch an hour. When his flared head reached my ring he added more lube and pressed in again. It felt like I had a semi truck pushing into me, but it didn't actually hurt. It was uncomfortable, sort of like life changes, but as I accepted him it wasn't painful. It felt like he inched in and out for days, maybe months, my brain had lost track of time, and I was living for the moment that he filled me completely. When it happened, I felt complete. Like with our feelings, we took the time to let it happen naturally. Now that he was there, I never wanted him gone. He felt so damn good.\n\nHe finally took a full stroke and I thought I was going to shudder into a million pieces. He was so thick and so long that every inch of him rubbed my prostate. Most of my partners only hit it with their thrusts or rubbed it with the head, but there wasn't a part of him that didn't send those jolts of pleasure through me. I think if it had been possible for a person to fall in love over a cock, his would have done it. Instead, it was just a confirmation of how perfect he was for me. All I could do was moan and live for the ride; I didn't even have the will to press back against him. I had been claimed, and I knew I was his.\n\nHe made love to me with slow, long, deep strokes. His lips never left my shoulders and neck as his body flexed against me. All that strength, all that fur, all that emotion was riding me even more than the bull-cock that had taken me to places no one had before. Now I knew why he'd only been a top; if he'd done me first, I'd have been in no condition to service him in any way afterwards. As it was, I wasn't certain I'd be up to walking by the time we were expected to arrive at Mom's in the morning. I didn't care.",
        "I couldn't count how many times I came against the sheets. He was just that good. All the while he whispered how good it was, how much he loved me, how long he'd dreamed of us. No stupid porn talk, no trash; he made love to me with his voice like he was with his body: in slow, determined, honest conviction. I think he rode me continuously for over an hour before he whimpered my name and I felt him shudder into the condom. I was totally gone. I only registered that things had changed when I felt him gently pull out and hold me to him before peeling back the covers. I fell asleep, wrapped in his strength, whispering words of love to him as I drifted off. I was home.\n\nWe did make it to Mom's for the mid-morning opening of presents. How she kept the kids from ripping them all apart before we got there I'll never know. As usual, Jesse went by the shop before we arrived and made up coffee and cocoa for the day. Yeah, he won the favor of my siblings with that alone. \n\nKatie took one look at us when we arrived and grinned from ear to ear. She was able to make Jesse blush as he set down the coffee dispensers by commenting that he had obviously picked the right Hamilton. Mom, ever the observant woman that she was, pulled me aside later and asked if I'd found a place to live. I couldn't help but hug her and laugh. I hadn't asked for it, but I'd gotten everything I wanted for Christmas.\n\n*****\n\nChristmas night, Jesse gave me another present; he gave me what I'd only tasted the night before. We made love all the way through to the New Year; not constantly of course, he had the shop and I had school to prepare for. The family came over to Jesse's for New Year's Eve, and we rang the New Year in playing sax and guitar together for our family. It was the perfect start for the rest of our lives.\n\nI never left Jesse's house; it took me forever to call it \"our house\". It didn't take me as long to get used to living \"out\" in a small town. Amazingly, we got so much support that what little difficulty we did face was easily weathered. It took me no time at all to learn to love Morrisville the way Jesse did. Teaching turned out to be the best decision I ever made, except for loving Jesse. The school did grow over the next several years and the town benefited from it. After a few years, Mom moved in with us. She had gotten too old for me to let her live alone. She put up some token resistance, but I knew she secretly wanted to be with us. Every Christmas the house was more decorated than the year before; our home became the center of all the Hamilton gatherings. Life simply grew brighter with each New Year.\n\nOf all the joys in our lives, the simple ones have been the best: duets on Friday nights, dinners with mom, afternoon coffees, making love, and taking the time to appreciate our blessings. The Yule Log has become a Hamilton family tradition. We passed it on to our nieces and nephews with the hope that they too would be blessed by it. I look back and cherish every moment of my life after my return to Morrisville and to Jesse, but I will always hold that first night in the light of the Yule Log as the memory I cherish the most."
    ],
    "authorname": "artisticbiguy",
    "tags": [
        "good coffee",
        "jesse made",
        "sat window",
        "jesse grinned",
        "college campus",
        "wanted christmas",
        "jesse laughed",
        "ear make",
        "still play",
        "friendly face"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-yule-log"
}