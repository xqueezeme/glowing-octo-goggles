{
    "title": "The Twelve Zenati Pt. 31",
    "pages": [
        "Authors note: Hello everyone. I am sorry for my tardiness with chapter I have been a bit apathetic about writing this series since the theft of the first 22 chapters and Amazons delay in taking them down even after they took down the other series she stole from Literotica. Again, I am grateful to MsSensualiT for her continued help to be my second sets of eyes. I hope those of you who enjoy this series continue to do so. ~ellie. \n\nMarcella had been overwhelmed by the sheer joy and relief of Olivia and Vivienne when they had finally arrived at the house during dinner. They were with Jessa's little boys, and she barely had time to take them in before she was pulled from her chair by Gideon. He had all but smothered her into his chest with his bear-like arms before handing around the small group for hugs and kisses to her cheeks. She briefly glanced at Noah between the embraces and saw him watching her carefully with an unreadable expression. She wasn't looking forward to having to explain herself to all of these people now, especially when she still needed to make Noah understand she couldn't stay. She couldn't take the risk that anyone else would be hurt because of her.\n\nMore food was brought for the late-comers, and the children were excused to go and show their cousins to the rooms they would be staying in during their visit with them. Marcella watched her nephews go with the Nanny and Auro, Jellybean leading the way and continuously talking in her excitement at having guests her own age. The three boys were quiet, even the baby. They looked more than a little apprehensive and Marcella knew that look. She'd worn it herself for much of her childhood. She hoped they would come out of their shells once they realised their father was no longer going to punish them for little more than making noise.\n\nThe rest of the dinner was populated with polite small talk. Everyone left what they truly wanted to say hanging in the air around them, making Marcella feel caged in and stifled by what she knew was coming. Connie and Vivienne talked about babies. Her friend glowed with happiness at the thought of becoming a mother as did Connie who acted as the wise friend for Vivienne when Marcella so obviously couldn't. She didn't have a maternal bone in her body and had no plans to have children of her own ever.\n\nOlivia seemed quiet, which was typical for her, Marcella admitted. Still, it seemed more thoughtful this time as if trying to work out some complicated math problem in her head and coming up short. She turned toward her sister who sat on her right side, turning her shoulder and back to Noah. He was sitting way too close to her on her left side watching her eat, and coiled for action as if he thought she might up and bolt from the table rather than endure the strange oppressive vibe in the air.\n\n\"Olivia?\" Marcella asked tentatively. \"What's going on in that pretty head of yours that's making you frown so much?\" \n\n\"You left. You left without even saying goodbye or checking that the AFP dropped the charges against me,\" Olivia sighed. She knew this was not the time or place to bring this up, but she could not help herself from saying what needed to be said. \"You left all of us, not just me. Did you leave the yacht with this Game Master willingly or did he make you?\" \n\n\"I didn't have a choice on the yacht. Konrad took me with him. There was no need to extrapolate and scare her with what she had seen that night and what a cold, ruthless, psycho the man was.\n\n\"In Brisbane, you had a choice, but you went with him anyway,\" Olivia accused.\n\n\"Yes, I had the impossible choice of putting you, Noah and everyone else in danger or going with him. I couldn't do that to you, not when you had just gained your freedom. You know Gen would have put you under house arrest again if he knew,\" Marcella said reasonably.\n\n\"If Massimo hadn't found you at the hospital would you have left with him again?\" Olivia continued to probe. \n\n\"I had planned to go with him, initially anyway. I made a deal with Konrad for access to Jessa and Zia's funeral. I had to go back. But then I saw Jessa, and her pain at being separated from the one thing she lived for,\" Marcella sighed and looked up as if she could see through the floor to the children above. \"I was angry and wanted to help her. I forgot at that moment how and why I was there and that Konrad was waiting in the rear car park for me. He was always ten steps ahead of anyone else in his games though, and he was probably long gone before Massimo even arrived.\"\n\n\"You made a deal with him?\" Olivia frowned.\n\n\"Yeah, but it was out of necessity. For Konrad, all of this is a game of moves and counter-moves. People's lives mean nothing to him. He does what he wants and always has half a dozen contingency plans in place depending on how the pieces of his game react to situations he puts them in, me in particular. He gave me a choice and the freedom to leave in Brisbane, so I could come home to put all of my affairs in order before he came for me again. The threat to those who would stop him from getting to me was real. He doesn't want me, though, not really. He wants something the Tables have claimed as theirs as if it is some sort of contest to see who has the bigger balls. The longer you all stay with me, the more danger you are in. I'm the expendable pawn in his game, and he is after the higher value pieces.\"\n\nMarcella looked up from where she had been twisting her fingers in her lap as she spoke quietly with Olivia when she heard her sister gasp. Olivia looked at Marcella wide-eyed with a small hand covering her mouth. Then she looked around the now silent dinner table and shook her head. \n\n\"You all have to let me go now. I'll find my own way back to Perth. I've finally got myself in way over my head just like you all knew I would, and now I have to face the consequences, alone,\" she said as if brooking no arguments and stood up as if to walk out. \n\n\"Fuck that!\" Noah said. He stood to block her way and looked at her intensely. \"If you think we are letting you face this alone then you're delusional.\"\n\n\"Noah, stop. You don't understand,\" she moved to push past him, but he was immovable.\n\n\"Marcella, wait, please,\" Xavier said calmly watching his cousin and the woman who had caused him so much angst. \"There is more going on here than you know; and whether you stay with us or not, we will still pursue Konrad. He has gone too far this time and crossed the wrong family in full view of those who care. Yes, he is using you in his twisted game, but the game will go on regardless of whether you give yourself over to it or fight for the life you want. You have always struck me as a strong fighter, Marcella. Was I wrong?\"\n\nShe turned to face Xavier processing everything he said slowly as if looking for the lies and manipulation in his words. She stayed silent, almost willing him to add more and be caught in a lie.\n\n\"Could we use your office for a bit, Mo?\" Xavier asked.\n\n\"My home is your home brother,\" Massimo said in his deep rumbling bass.\n\n\"Will you come and talk with me please Marcella?\uf02dbefore making up your mind between fight or flight?\" Xavier asked gently.\n\n\"Do I have a choice?\" Marcella grumbled.\n\n\"With Mo and I, there is always a choice. With the man standing beside you, those choices you once had are possibly not as forthcoming as they once were. Trust me; you will want to hear what I have to say,\" he encouraged.\n\n\"Fine, I know the way,\" Marcella sighed. Noah allowed her to push past him. Then he followed her closely as she led the way to the office with Xavier, Massimo and Carmelo after asking the others at the table to stay and enjoy dessert without them.\n\nMarcella sat in the office with the four men and at their request told them everything about her time on the yacht and her time with Konrad. They wanted to know every detail, including the deals she had made as well as those she hadn't followed through with, that kept her out of his bed and the biggest bargaining chip she had in her pocket.\n\nThen she turned the tables and began to grill them about why they believed the game had very little to do with her. She learned of the various Suebi powerplays leading up to the attack on all of the Tables' mothers, and the subsequent arrest of all of the Suebi power players across the country that could be identified. She was horrified to think that one man had orchestrated the downfall of so many tables and the Suebi clans who now had leaders easier for Konrad to manipulate. Not that she had any sympathy for Suebi or the Battaglia who needed to tighten up their processes so that what happened to her and even Veronica and Peri couldn't happen again. Still, as she grilled them, she could see everything they said was reasonable given the facts, but they had no real proof Konrad was behind it all and had been playing the long game up until this point.\n\n\"If what you say is true, then why me? Why didn't he kill me along with everyone else on that yacht? You weren't even aware of his interference until that point, true?\" she asked, thinking over the facts critically and wishing she had taken notes.\n\n\"I have a theory about that,\" Carmelo said, leaning forward his elbows resting on his knees as he spoke. \n\n\"Okay, dazzle us,\" Xavier said, turning to look at the Farnese Oracle who had been silent until now. \n\n\"Well let's face it, Marcella is a beautiful woman who can hold her own when in a room of strongly opinionated alpha types. That would appeal to him on every level. From what she has said, they had a good time together before the speeches and massacre. Had he killed her; he could have gotten away with no one the wiser that there was a second party aboard the yacht. Still, I think he was quite taken with the feisty woman he found as the Suebi captive. Perhaps he even saw her as someone who could be his equal or a least a match for his intelligence,\" Carmelo began. \"Once he had her; however, he was faced with a dilemma, woo her so she would go to his bed willingly or play more of his games to get her there by her own choice and guarantee that she wouldn't run straight to the authorities with her account of what happened on the yacht, not that it would matter as the Varangians are all ghosts and have no digital footprint.\"\n\n\"He never planned to keep her long-term though,\" Massimo said. \"I'm more inclined to think that once he had her, he began to look at her as more of a game piece like Marcella believes. Imagine if she had taken the help the Donatis would have offered and returned to Perth rather than Darwin to tie up the loose ends of her life as she was instructed. Given Peri's knowledge of what happened with the Battaglia, they could have helped her hide, causing another rift between the tables if the Zenati found out. The same with coming here. Perhaps he was banking on her being here as more of an issue than it is. The Farnese and Zenati have not always had the easiest of alliances within the tables. Even Oscar might have baulked at returning her to Darwin to be with her sister causing a rift there if the Zenati had pushed their claim on her.\"\n\n\"So, what's the bottom line here?\" Marcella asked. \"He told me he would come for me, his last message to me was that he would see me soon. Even if his games are about destabilising the tables enough to implode their alliances, wealth, power, etc., the fact is he is coming for me. Those who try to stop him will be in danger. I won't do that, my sisters have been through enough, and I won't put Gideon, Noah or Genesis in harm's way, because that will affect the few women I love in the worst way. Vivienne is pregnant for God's sake! You have to let me go and play your games without me.\"\n\n\"No,\" Noah growled in immediate response to her words. \"That is not an option for you anymore.\" \n\n\"That's true,\" Xavier cut in as he saw Marcella about to argue the point with Noah. \"Like it or not Konrad put you right in the middle of his game, and now we all have to play the hand we've been dealt. Not just us, but every table. We will meet with the others in our close circle tomorrow in Perth, and they will need to hear your story. Oscar will be there, and he will no doubt shelter you if you request it, but I strongly urge you to return with us to Darwin where you and those you love will be the safest.\"\n\n\"You don't understand how psychotic this guy is. He can justify the death of fifty people he had just concluded a contract with and been paid for only the moment before his men opened fire. He can flip the switch between the charming gentleman and a cold, brutal killer in a heartbeat,\" Marcella tried to explain again. \"He has his own inner circle and wider circle of psycho's who follow his commands without question. You can't see them coming because they are ghosts just like you said.\"\n\n\"Even ghosts disappear in the darkest of shadows,\" Xavier said gently.\n\n\"And in the brightest of lights,\" Massimo added with a chuckle. \"Our families know what they are up against and we have a secret he doesn't know which will be his downfall.\"\n\n\"Enough!\" Noah said, having been quiet for most of the conversation. \"You will be returning home with us. You can hate me if that makes you feel better about it, but you've made it impossible for any of us to trust you with even the smallest freedoms. It's time to face the consequences of rushing off into danger alone all the time.\"\n\n\"If you think I am going anywhere with you...\" Marcella began to argue, but Noah just picked her up and threw her over his shoulder in a fireman's hold while she screeched at him to put her down and walked out of the office and the house ignoring anyone who tried to intercept them. He heard his brothers and Xavier soothing the others worries as he made his way to a solid-looking pool house in the huge back yard. He considered throwing her into the pool to cool her off but didn't want any other public displays that might upset their hosts, so he marched into the pool house locking the door and throwing her onto a double-sized daybed. \n\n\"Now it's your turn to stop and listen. We are grown men; we do not need a little kitten spitting and scratching to fight our battles for us. You don't always have to be the warrior princess or martyr or protector or whatever the fuck notion you have that makes you think you can protect anyone aside of yourself,\" Noah seethed. The fury he had drowned deep within himself over the last two weeks coming out in full force as he lectured the woman he loved on why he wouldn't ever let her go again no matter what she said. He had been speaking the truth when he told her that she could hate him for what he was about to do, but there was no way she was slipping away from him in the middle of the night or a crowd again.\n\nMarcella watched him incredulously as he ranted and raved at her. She was used to the cajoling teasing Noah who wormed his way into her plans and still gave her some sense of control. This man in front of her had utterly lost his mind over everything she had done since she had walked out on him. She watched him silently, caught between feeling all of the emotion he mirrored back at her and being frightened of just how furious he was with her.\n\n\"No Marcella, just no!\" Noah seemed to come to the end of his rant and scrubbed his hands over his face as if trying to get control of himself. \"Did you know that Olivia had convinced herself that you were being held in a place like Hermione's? That you were being tortured like she had been because the alternative that you had just left without even saying goodbye after she begged you to stay was too heartbreaking for her to take?\"\n\nMarcella opened her mouth but couldn't say anything to that. She hadn't even thought about Olivia as anything but happily in love and finally free to enjoy it. She had felt the same about Vivienne. They wouldn't miss her, not really; they were just going through the motions everyone expected of them.\n\n\"Vivienne is not having an easy pregnancy so far, and you think it's okay to cause her even more stress by just walking out on us all again?\" Noah asked harshly trying to make her see that this was not just about her anymore. \"I get that you haven't had anyone in your life to answer to for a long time if ever, but you made us all love you, and that means you can't just make decisions that affect us all without considering what that will do to the rest of us. Say you manage to escape us in Perth and disappear again. Have you considered what that would do to Olivia and Vivienne, my brothers or me? You have responsibilities now, people who love and care about what happens to you. Not the least of which are those three petrified little boys up there whose mother is in no fit shape to care for them and will need all the love and compassion they can get until they all recover from what they endured.\"\n\nMarcella finally sagged at the weight of his words. Her anger dissipated as she remembered the three quiet boys who entered the house huddled together, following Auro and Gideon like they were the Pied Pipers. What could she do for them anyway? Their mother had told her to stay away from them. She was no good for anyone and Noah had to see that. Disaster and tragedy followed her around like a dark cloud, and even now, it loomed over her shoulder. There was no point trying to reason with him at this stage. She needed space and time to think. Turning her back on his fuming rage, she lay down on the day bed he had thrown her onto when they arrived and closed her eyes, blotting Noah and the rest of the world out. She just couldn't deal with any of it anymore, and she was grateful when Noah became quiet and stopped his ranting lecture.\n\n*****\n\n\"Maybe someone should go out there and make sure they haven't killed each other,\" Auro said quietly once the muffled voice of Noah had ceased its continuous stream of ranting.\n\n\"Trust me he would rather cut off his own hand than hurt her with it,\" Gideon said equally as quietly. \"The Zenati are passionate and demonstrative, we only fall in love once in a lifetime, and it's the forever after kind of stuff. He's out there fighting for her love.\"\n\n\"Can't say that we see love any differently, that doesn't mean there aren't hurts that take time to heal,\" Carmelo said joining the two men at the window overlooking the back yard. \"I'm going to check on Xavier and Mo; they haven't left the office since our little meeting. If Mo is smoking cigars inside the house, Connie will kill him,\" he chuckled.\n\n\"I'm going to check on the womenfolk, but I am sure Gen would love to know what's going on more specifically,\" Gideon said indicating his younger brother who was busy researching on his phone as always lately.\n\n\"Yeah, I think I have a lead on Konrad, but it would be good to get X to look at it,\" Gen said in a distracted response to Gideon's words. \"Also, Marcella is a flight risk, so if your watchmen could be on alert during the night, that would be great. Not that I think Noah will let her out of his sight again, but she has proven to be very resourceful in the past.\" \n\n\"I'll organise it,\" Auro nodded thoughtfully and walked off, digging his phone from his pocket, grateful to have something constructive to do. He wasn't sure exactly what was going with the Zenati. Still, after the attacks on the mothers of the tables, he was wary of the strife plaguing the three sisters and drawing at least four of the families into some sort of mystery.\n\nGideon watched Gen walk towards the office with Carmelo before turning and heading up the stairs. It wasn't difficult to find the children's wing of the great house and his beautiful wife sitting in a rocking chair in one of the rooms. He stood in the doorway, watching the scene before him. Olivia sat on one of the beds cradling the youngest of her nephews in her lap while managing to keep the older two boys close. She was speaking quietly, and they had serious faces as they appeared to be listening in rapt fascination to what she said. Not wanting to disturb the scene he signalled for Vivienne to stay where she was and watched on from the doorway. He listened to the story Olivia was telling the boys featuring an imperfect princess and the Ogre King.",
        "It was late, and Gideon knew the other children would have been put to bed by their nannies while the three little boys terrified of the ever-changing world they now lived in, clung to their Aunt refusing to separate into their own beds. Gideon began to become entangled by the story as well. He stepped inside the room, letting his back slide down the wall until he sat on the floor and just listened to the sweet young voice of his soon-to-be sister-in-law. \n\n*****\n\nNoah looked at where Marcella had curled into a protective ball on the big day bed and sighed. He was harsh, probably too harsh, but he had tried to play it her way, and it hadn't worked! Now he had to make her see that somebody loved her enough to stop her from taking such big, poorly thought-out risks. He got it. He honestly understood that she never had anyone show her what real love and caring was about, not even her sisters. The same sisters she devoted herself to knowing she would get nothing in return.\n\nHe toed off his shoes and removed his belt then he slid onto the bed behind Marcella curling around her form and wrapping her in his warmth. He could feel her trying to get her ragged huffing breath under control. Had she been crying? His Kitten didn't cry although his memory of that day with her sister on the balcony called him a liar. It was just that she was so strong, so self-contained the majority of the time. Despite her diminutive size, she was a powerhouse. Seeing her like this almost broke his resolve, knowing he was partially to blame. \n\n\"Leave me alone, Noah,\" she finally whispered hoarsely.\n\n\"Never again,\" he said softly back. He knew or at least hoped this would get a reaction from her.\n\n\"So, I'm a prisoner now? Do you plan to lock me up somewhere safe where Konrad can't find me? Don't kid yourself, Noah. I'm not worth losing your life over. You've already been shot once because of me,\" her words were cut off by a sob. Unable to take not being able to see her face while they spoke, Noah gripped Marcella's shoulder and rolled her to her back.\n\n\"Yes, if it means you remain safe and able to live your life with the people who love you, it is well worth the price,\" Noah said softly looking into her eyes. \"I love you Kitten and you are mine, just as every inch of me belongs to you now. What I feel goes so far beyond caring for a friend or family member. Even though you won't acknowledge it, I know you care about me and could love me if you let yourself. Make no mistake, though, you are mine to love and protect, and you will acknowledge that in the end.\"\n\nThe voice that came to Marcella's ears was gruff, not angry or mocking as it had been during his ranting lecture, but full of emotion and sincerity. She did care about him she could admit that much to herself. She wouldn't have been trying so hard to protect him alongside Olivia, if that weren't true, but love? She didn't feel love, not for anybody, not even for herself. What she had was a vicious need to protect her sisters from all the pain they had suffered because of her mistakes, her unwillingness to bend to her father and Uncles perverted view of the world. How could this man claim to love her when she had done such horrible things to survive and get away from everything the Tables represented.\n\n\"No,\" was all she could say. No, she wasn't his even though feeling him this close, it would have been so easy to give in. Of course, she cared about him. He had helped her to protect her sister since she had arrived in this city but love? The concept was so abstract to her, even as she had watched real love bloom between Vivienne and Gideon, she hadn't understood it or why Vivienne would want to tie herself to Gideon so happily. \n\n\"Yes,\" Noah argued and lifted a hand to smooth her hair back from her face. \"You are mine, and you will acknowledge it. So just say it and put us both out of the misery you are insisting we suffer.\" His fingers trailed down over her cheek and along her jawline before curling around to the back of her neck, his thumb reaching out to stroke her throat as she swallowed heavily. \"I need you to hear me and understand me when I say I love you, Marcella, truly, madly, deeply,\" he said and leaned down to brush his lips tentatively over hers. He was only human, and with the woman of his dreams and fantasies lying below him looking so vulnerable, he couldn't help the desire that flooded him. \n\nMarcella gave a small choking gasp as his grip tightened, and his thumb pressed deeper into her throat. He pulled back immediately and looked down at her frowning at what he had done and released the pressure from her throat. The slightly reddened skin pleased his inner Dom as he scanned the area that now held his thumbprint. \n\n\"You are mine, Marcella, to love and protect and I will do that until the Game Master is no longer an issue, just as your father and Uncle are no longer issues for you or your sisters. We could have done this together, we could have been a great team, but you shut me out and now must endure the consequences of that,\" he said gently. \"If you could only admit what you know you feel, that I am yours just as you are mine, then we could be a great team again.\" He watched her face as his hand tightened again his thumb pressing into her throat. \n\n\"No,\" Marcella ground out in a whine, tears coming to her eyes despite her inner fight against them. The reality was that she couldn't argue anything he said. Still, she also could barely admit that to herself and definitely not to him.\n\n\"It took a ton of self-restraint for Noah to keep his eyes locked on hers as she denied him again. He wanted to look over the delectable body below his that he had missed so much. She was the most beautiful of women, and she was made to fit into his body perfectly just as he was made for her. He both hated and loved that she had this power over him. It was so hard to find that balance between completely dominating her and running the risk of her walking all over him as she had done on several occasions during their time together. This time, now that he had her back, he needed to leave her with no doubt that he could and would be a dominating arsehole if she continued to fight him and try to leave him again. He wasn't sure he would survive her walking out on him again, no matter the reasons for it.\n\nMarcella drew a deep breath as he released his hold on her throat again, keeping his hand in place with a gentle touch now. She knew he wanted her to say it, to admit she was his, but she couldn't. He didn't understand how much danger he was in just by being with her now. She knew she was no prize, but the look on Konrad's face when they had made their final deal told her he would come for her and remove anybody in his way. It seemed to be a matter of pride from him now, and she knew without a doubt she had lost any chance of negotiating with him again.\n\n\"I want you to say it. I want you to tell me that you trust me to love and protect you. I want you to tell me that if you have to leave, we leave together,\" Noah spoke in a husky tone that was neither pleasant nor harsh.\n\n\"No,\" she sighed and closed her eyes against his intense glare.\n\n\"Then you give me no choice but to accept that you don't or won't trust me to protect you and keep you safe,\" he sighed and eased his hand from her throat back up to stroke her cheek.\n\nAs his hand lifted from her throat, Marcella opened her eyes to watch him warily. He was gazing at her with a softer undiscernible expression, and she could feel all of the attraction and desire this man had always brought out in her. She squirmed, knowing she should move away from him, but he felt so good, so right being here with her.\n\n\"Before we begin our battle of wills in earnest tomorrow, give me tonight, please Marcella. I have been going out of my mind without you. Just give me tonight, be mine tonight and tomorrow I will take you to Perth,\" Noah said with a catch in his voice. His hand stroked down her face and throat again but didn't stop there. Instead, his hand glided down over her breast to her ribs and further down to her hip as he caressed her slowly and tried not to moan at the need he felt to claim her again.\n\nMarcella swallowed her eyes widening at his words and the feel of his touch on her body. It was hard to admit she wanted what he offered just as badly as he did, even to herself, but she did want it, wanted him. Maybe it would be okay to feed her need for him if only for tonight. One last memory to keep with her as she left those she loved one last time and disappeared into the shadows of the disaster her life had become. She would wear him out, and he would sleep deeply then she could be gone by the time he woke. She could indulge in this one last memory of him, take what she needed from him, love him the way she could never confess to him. She couldn't voice any of those thoughts, so she merely nodded her head in agreement, as she still held his gaze.\n\nThere was no need for her to voice anything though, at her nod, Noah dove in and kissed her deeply, passionately and rolled to his back taking her with him as his hands went to work removing her clothes so quickly, she barely had time to process what he was doing. The buttons on the blouse she wore allowed Noah to strip her without breaking the kisses to her lips, throat, and jaw. Despite herself, Marcella began to tear at his clothes with equal eagerness now that she had tossed her misgivings to the wind and agreed to this one night.\n\nOnce naked, Noah rolled them back. He was on his side half hovering over where he gently pushed her to her back again. He looked into her beautiful eyes full of desire laced with uncertainty. He could see she cared for him more than she could admit out loud. She wouldn't be trying so desperately to protect him if she didn't, but he wanted more from her, needed more from her and tonight he would make her understand that.\n\nHe cupped her face in his hand, she responded by rubbing her face into his hand, and then he leaned over and began to softly and sensuously nibble on her lips and mouth. Driven by weeks of pent-up emotion, he let the dam break on his desire. He thrust his tongue past her lips, claiming her mouth as his while revelling in Marcella's gasps and moans as she gave herself over to his possession of her. Weeks, no months, of pent-up love and passion came pouring out of Noah as he began to slowly stake his claim to every part of her sensuous body.\n\nMarcella let herself slide into the moment. She would deal with the fall out when he wasn't addling her brain with his kisses and touches as if he couldn't get close enough to her and wanted to crawl inside her skin. She let go of all her fears and worries as he kissed her, and she could feel the hot skin and hard muscles of his body move against her. If there was a safe haven in her life ever, this was it. Wrapped in the arms of the man who believed he loved her, except he couldn't, not really. She could never be the woman who deserved his adoration, and he would learn that soon enough. They all did in the end, so she gave herself over to the pleasure he offered for this one night, just this one night.\n\nNoah sucked and nibbled on her neck and ears then moved to her breasts where he aggressively nipped and bit the soft skin there and teased her nipples, leaving tiny red marks as he claimed them as his. When he sucked the delicate skin on the under-side of her breast into his mouth intent on leaving a mark that would last for a day or two to remind her that he had claimed her, he found she responded by pushing her body into his aggressive attack. It was almost as if she was making a demand of her own that he claim her and take her as his. Her actions drove his need to dominate her even higher. It was as if, at that moment she wanted to give herself completely to him.\n\nMarcella had only given up total control of her body a handful of times, and each time to someone she believed she could trust. However, she could still remember the feeling of euphoria that completely releasing control of her body to another would give her. Did she trust Noah that much? Could she let him take total control and revel in the freedom and bliss she knew lay down that path? She wanted to, she thought she could trust him but... but nothing you stupid bitch, you like this, take it, tomorrow is just another day that might not come in your miserable little life. With that last hateful though Marcella shut off her thinking brain and just let herself feel.\n\nNoah continued moving down her body, claiming every part of her. He licked, nipped, bit and caressed every inch of her ribs, her flat, hollow belly, her sensuous naval as he moved on to her hips. He nibbled around her hips and then down her right leg paying special attention to the inner thigh's sensitive areas, behind the knee and her toes. He moved to the left leg starting with her toes and moving up her leg, aiming for her hot wet pussy that was moving almost hypnotically with the rolling of her hips, begging for attention.\n\nMarcella was ready to explode the minute he touched her pussy. There was no softness as Noah began to devour her, and almost her whole body came off the bed as she exploded into a mind-numbing orgasm. The build-up to this over the last few weeks had only added to his claiming of her body with teasing licks, bites and kisses and blind-sided her in a way she had ever experienced before. All of the muscles in her arms and legs went taut. She pulled his hair, bringing him closer and almost immediately pushing him away to give herself relief from the onslaught of sensations he brought her. \n\nNoah didn't let up as he sucked her pussy and tortured her clit with his tongue and teeth as he continued to claim this woman he loved madly. He continued to drive her orgasm higher and higher as Marcella's stomach muscles cramped into tight knots trying to curl her body around her throbbing and now overly-sensitive pussy. Her whole body began to spasm as Noah refused to relent in his claiming of her. Whether it was one long orgasm or multiples chained together, Marcella continued to float on pleasurable endorphins.\n\nNoah relented once her voice had gone hoarse and practically disappeared from her cries of pleasure. He began to move up her body slowly, slithering over her with little kisses and nibbles until his cock nudged her entrance. He claimed her mouth again in a brutal kiss to share the exquisite taste of her sex with her.\n\nWhen he stopped eating her pussy Marcella's body fell back to the bed bonelessly. Still, it blasted into a whole new level of orgasm when he drove his hard cock deep into her in one ferocious movement burying himself to the hilt. Marcella screamed noiselessly as the ecstasy overrode all of her bodily functions. All she could feel was the pleasure they had always shared magnified tenfold by her loss of control and the nagging voices in her head telling her to keep the most intimate bits of her psyche in hiding as he claimed her. It was different having no inner voice warning her of the dangers of loving this man or the claim he was making on her as he drove her to heights of bliss she wasn't sure she had visited before.\n\nNoah fucked her like a man possessed, his hand reached up to curl around her throat again his thumb pressing in slightly as she looked up at him with glazed eyes seemingly unable to focus on him properly as he continued to ram home into the warm depths of her.\n\n\"Tell me,\" he growled. \"Tell me that you are mine. Tell me that you feel it too. The rightness of us, just as we were always destined to be.\"\n\n\"Oh, fuck! Noah,\" she cried out in a hoarse elongated scream unable to make sense of what was happening to her as she spiralled into another orgasm that left her totally wrung out and unable to make sense of anything but the rightness she felt right then. \n\nMarcella's whole body was quivering and shaking as Noah drove into her one last time and came deep inside her. As he continued to cum inside her Noah's passionate madness began to clear, and he leaned down to kiss the woman he loved more than life itself. But Marcella couldn't respond. Instead, she leaned up to kiss him. Noah began to softly kiss her face and give her soothing body caresses until she began to calm. He stared into Marcella's eyes and kissed her cheek as he said,\n\n\"I love you Kitten, and I need you to know that you are mine and you will always be mine. I love, want and need you more than I can say,\" he murmured hoping his words were getting through her orgasm addled brain.\n\nMarcella tried to raise her head to try and kiss him again, but the last quivering remnants of the fuck of her life made her miss the mark, and she hit his chin. She gave a small lazy smile, tried again, and this time she captured his lips. As their lips parted, she relaxed back onto the bed and let him claim her mouth again, giving up all pretence of wanting to control this man when he had claimed her so thoroughly. She couldn't say what wanted he wanted to hear. She didn't talk at all as her own emotions and feelings overwhelmed her. \n\nNoah cocooned her shaking body into his. He continued to caress her and kiss her hair until their breathing steadied. He knew that to push her now would be to take advantage of her vulnerability, so he said nothing. He gently caressed her until she fell asleep in his arms where he wanted to keep her forever, safe and his.\n\n*****\n\nMarcella had woken twice during the night, her mind racing with her plans of escape. It had been madness to believe she could have one night and leave unscathed by what they shared. The first time she had barely moved when she felt Noah's arms tighten around her and draw her even tighter against his body. Instead of fighting for space though, she had let herself have a moment to revel in the fact that he was still here with her and loving her before berating herself for her stupidity. She'd closed her eyes and let sleep take her again as the voices in her head came back with a vengeance. The second time she woke, she listened for his breathing and then slowly began to edge herself away from him only to turn her head and find him watching her with an amused smirk before he gathered her back to him fitting her in close to his body.\n\n\"Where are you going, Kitten?\" Noah murmured into her neck, kissing the sensitive skin behind her ear.\n\n\"Bathroom,\" she whispered and turned her head to look at him again, believing he would relent and let her go.\n\n\"Okay,\" he kissed her, then rolled them both to his other side and sat up on the edge of the bed without breaking the kiss. He stood, pulling her legs around his hips and walked with her to the small bathroom he'd seen when he was pacing and ranting at her earlier in the night. He dropped her to her feet in front of the toilet with a fluid motion gave her one last soft kiss and turned away moving to the sink and mirror to splash water on his face and wash his hands as he waited for her.\n\nMarcella couldn't believe he was doing this to her. The room was dark enough, being shielded from the dim light of the pool, but she didn't want to have to pee in front of him. When he turned back in her direction and folded his arms across his chest, quirking an eyebrow at her as if catching her out in a lie, she forced herself to pee. The man was insufferable and reminded her of exactly why she had to get away from him. He would never let Konrad take her, and she couldn't risk him being hurt just because he felt he needed to protect her.\n\nShe moved over to the basin, reminding herself that she was a tough bitch and could look after herself quite well thank you very much. She opened her mouth to tell him just that when he stepped behind her and curled an arm around her waist before cupping her cheek and tilting her head up into his kiss. She bit his lip and broke the kiss.",
        "\"You got what you wanted from me, isn't that enough?\" she growled at him.\n\n\"What we did tonight doesn't even scratch the surface of what I want from you, Kitten,\" he said in a harsh low voice looking into her beautiful eyes. \"You agreed to give me tonight before we began to fight again and as far as I can tell, it's still night.\" With that he picked her up and carried her back to the bed they had been sleeping in, nuzzling and nipping at her neck each step of the way.\" Unless you want to tell me what I want to hear?\" he offered.\n\n\"Hear something like your dick has some magical power to enslave me and make me the submissive little kitten you want, who will do what you say and tell you whatever you want to hear?\" she challenged.\n\n\"Fuck, Marcella,\" he laughed. \"Your gift of words is just one of the many things I love about you. How about we put my magical dick to the test one more time,\" he grinned.\n\n\"Fuck you and your magical dick, Noah Zenati,\" she hissed, knowing she sounded like an adolescent.\n\n\"That's where you have it wrong, kitten,\" he chuckled in a softer more heated way now. \"I fully intend to use my magical dick to fuck you until you can't help but admit that you are mine just as much as I am yours.\" His lips descended on hers again, and he kissed her deeply showing the passion he felt for her. She wasn't fighting him with the full force of her power, and he knew it. He may not have won the war yet, but each battle brought him a little bit closer to her surrender.\n\nShe'd given him full control earlier, and it had been mind-blowing, but she had that little voice in her brain drowning out the submissive streak who had gotten her way for a little while. It was time to take back her power or at least attempt to equal the playing field with this man. Her hand reached down between them to circle his cock. She shimmied down his body more than ready to blow his mind, but suddenly she was airborne. He had picked her up from the bed and placed her on her knees on the floor in front of him as he sat, thighs wide, and watched how she dealt with kneeling before him like a sub. Her eyes flickered from him to his cock and back again as she considered refusing the unspoken request.\n\n\"You gave me this one night, Kitten, we can fight about who is the Alpha in the morning. You gave me this, don't take it away,\" Noah crooned all the while he had threaded his hands into her hair and encouraged her to move forward until the smooth round head of his cock rested on her lips. She swirled her tongue around it, tasting the saltiness of his precum. He pressed gently against the back of her head. She allowed the tip of his cock to push into her mouth, stretching her lips and sliding along her tongue until it hit the back of her throat, making her gag slightly. \n\nShe tried to move her head back, to fuck his cock with her mouth, but he held her still. Instead of moving back, he pushed forward. Her green eyes looked up at him with alarm, but he was relentless. He wanted to feel those lips around the base of his cock so badly. He knew she could take it; she had taken it before. He was determined to make it happen his way, just this once. Again, she gagged a little, and he stopped. He waited for her to start breathing through her nose, and for her fingers to tighten on his hips, and for her to hopefully push a little forward on her own before he pressed deeper.\n\nHer tongue danced against the underside of his cock, sending sparks to his head. Her eyes never left his as he pushed her down on his cock, taking her mouth until he owned it. A rush of primal need pounded against him when he finally felt her lips around the very base of his cock, her nose pressed into his groin. She was his. His. He needed to make her believe that as much as he knew it to be true.\n\nHe finally dragged her back, his fingers tangling further into her hair. When only the head of his cock was in her mouth, and she seemed to have regained some of her breath, he started pushing her down again, enjoying the wet heat of her mouth. She tried to move her mouth down faster, and he felt a thrill at her small show of greed and perhaps that fighting spirit that made her claw for every little piece of control she could get.\n\nHe pushed his cock several more times into her throat, fucking her in a slow and steady rhythm revelling in the feeling each time he felt her nose pressed to his flesh, and then finally let his cock head pop from her lips. He pulled her from her knees and held her against him. She was breathless as she buried her face against his shoulder and wrapped her arms around his waist.\n\n\"You're amazing, Marcella. So, fucking hot,\" Noah murmured and petted her hair, his other hand sliding down the small of her back to her perfect ass. He caressed it, wanting nothing more than to spank her into submission to his every whim at that moment and feel her claws as she hissed and spat at him.\n\nIts was a strange mix of emotions Marcella felt at that moment. She hated that his words and the way he enjoyed every moment of intimacy with her were as if she was special and different to all of the other women he must have known. She hated that he made her feel anything, let alone the bond he kept trying to push onto her. He claimed to love her, but she knew he couldn't. Fuck, not even her own family had loved her. She shook her head and tried to banish the thoughts as his hands continued to caress her body, and he whispered the honey-sweet words into her ear. She much preferred when they fought and had angry sex as they had in the treehouse, although that seemed like a lifetime ago now.\n\nNoah could feel Marcella slipping away from him again, and he knew he had to do something to snap her out of it. He knew that a physical release of pain would focus her attention and break the cycle of destructive thoughts. Without overthinking it, he lay back on the bed and rolled them awkwardly so that Marcella lay on her stomach. He hovered over her pulling her hand up to rest beside her head as the smoothed her hair over one shoulder and kissed across the nape of her neck.\n\n\"You are truly amazing, Marcella. You're a beautiful, sensual woman who deserves to be loved and protected as well as have her needs met.\" She shook her head slowly, but he continued, \"You're mine Marcella, just say it. Tell me you feel it and know it just as well as I do.\"\n\n\"No, it's not true,\" she argued quietly and then yelped as his hand came down on her ass. Still, she didn't move, didn't try to evade the next smack she just took it with a small whimper, and he worried that this might not have been his best move with this precious woman. His big hand stung her sensitive skin, pushing the breath out of her. \n\n\"You're mine, and I will always come for you. I won't have you thinking otherwise.\" His hand came up and down again quickly, sending a sharp pain through her. \"You believe Konrad will find you and come for you and yet you don't believe the same of me? Why is that Marcella? What reason have I ever given you to doubt me?\" \n\n\"No,\" she whispered on her breath. She couldn't deny the way her body, her pussy reacted to his show of strength, however, very few men had ever attempted to subdue her with pain. Most went too far having the opposite effect to what they wanted. For others, it was a weak half-assed show of dominance that she could out Domme easily. With Noah, however, his hands on her causing her pain were tempered with restraint. They had just the right force attached to them to push her body to react like the submissive nympho these men preferred, and she couldn't help arching her back and lifting her ass higher as if asking for more.\n\nNoah watched her react. Saw the sensual woman push past the fear and self-recrimination. She was one of the most naturally seductive women he had ever known. Her ass was perfect, round and firm, and now had a pretty pink tint to its creamy skin. He brought his hand down on it again and heard her moan. He lifted an eyebrow and did it again, and then placed his fingers between her legs, sliding them along her slit and finding her so wet and needy judging by the sounds she made for him now.\n\nShe pushed her hips backwards, trying to make him touch her more. He obliged her, sliding one finger deep. She pushed her face down into the bed and gave a whimpering moan. She felt, rather than saw him move behind her and widened her legs when he pushed against them. She whimpered louder when he slid a second finger into her pussy fucking her and stretching her for him as she moved in a sinuous, sensuous undulation below him enjoying the pleasure mixed with the pain, he gave her. Without warning he pulled his fingers out of her and put both hands on her hips. His cock found her slick, hot hole and rammed into her hard and fast making her lose her breath in a great whoosh as he started to pound her without mercy.\n\nShe cried out, arching and pushing back as he entered her. She stretched around him like he was made for her. Marcella felt herself giving over control of her body and reactions to him again as Noah took her. It wasn't so much that she gave up her power than that he took it, as his right and always had with her. Of course, outside of sex, it had been subtle, and she had fought him every step of the way to show she was no pushover or submissive little Table nympho baby factory. But right now, she didn't want to fight any more. She wanted to believe him and his words knowing that if he ever let her down, it would break her completely. No, it was better to run. Better for her, better for him, better for them all. Just this one night though she would give in to the dream just like she had agreed.\n\nNoah lifted her hips from the bed, keeping up his relentless pace as if he could fuck some sense into her and prove his love with his proverbial magical dick. He gripped her hips and pulled her on to him, manipulating her for his pleasure as well as hers.\n\nShe was coming before she was ready, going off like a rocket when she hadn't nearly had enough. His cock was thick enough to rub against the most sensitive spots with every deep, slow thrust, and she couldn't stop the resulting explosion. Her pussy clamped around him, tightening almost painfully, and he held her while she came. Her head rested back against the bed, and he moved one hand, gliding up her back slowly to brush her hair back from her beautiful face so he could see her. She whimpered and collapsed forward as he pulled out slowly. Even Noah groaned as if his cock complained bitterly at the idea of leaving its tight cocoon.\n\nMarcella rolled to her back panting and looking up at him legs automatically falling open for him as he crawled onto the bed, spreading them further. His hands caressed up her body, over her breasts and neck until they cupped her face.\n\n\"I want you to remember this, Marcella. Every time you question where you belong, where you should be, I want you to remember this and know you belong with me. I love you, and whether you will admit it yet or not, you have feelings for me. I know it just as I know that every inch of me belongs to you now.\"\n\n\"Just stop talking and fuck me,\" Marcella ground out through a throat now thick with the emotion he was infusing into her. She opened her thighs wider for him and curled her legs over his hips. Then she lifted her hips in invitation. \n\nNoah could hear the emotion and need in her voice and skimming his hands from her thighs down to her knees pushed her legs up, over his shoulders, so that she was completely open and exposed to him. Her pussy was beautiful. Its perfect wet heat was a testament to the sensual woman that lay smouldering beneath her surface. He put his hands under her hips and lifted, needing to taste her. He moved one hand, his finger circling the rim of her asshole as he fucked her with his tongue. He wanted to claim every inch of her before the night was done. She tightened her hips when he pushed the tip of his finger into her ass, a groan that was half pleasure and half alarm filled the room. He lifted his head and shushed her in a calming way, his finger not stopping its exploration. When she relaxed, he went back to her pussy.\n\nMarcella felt suspended in some kind of other world. All she felt was his hands on her, his mouth on her, and his finger doing something that she rarely let anyone do. It dipped more deeply into her asshole, and she moaned loudly. He wrapped his mouth around her clit and sucked lightly until she felt her whole body giving over control to him again. Fuck, maybe he did have a magical dick where she was concerned she scolded herself for being a fool, but the sensations he gave her were impossible to ignore.\n\nJust as she had given herself over to pleasure, Noah pulled away. His body moved between her legs, the movement brought her legs up high, and he moved his hands up to her ankles, spreading her wide. He looked down at her pussy, watching himself sliding into her. He was going to fuck her hard. She knew it like she knew her own name. She reached behind her and grasped the bars of her headboard, lifting her hips in invitation of the inevitable.\n\nNoah rested her legs against his shoulders and took her wrists in one hand, forcing her to keep her hold on the headboard. The other went to her throat, not hurting her, but holding her so that she was forced to look at him, to watch his face while he fucked her.\n\n\"You are mine, Marcella. Every time another man so much as looks at you, I want you to remember that you are mine,\" he growled.\n\nShe eyed him silently, her eyes wide and brilliantly green as he pushed deep, his cock bottoming out and bringing a cry from her lips. He pulled out and pushed in deep again, needing to hear that little cry over and over.\n\n\"Tell me,\" he growled. \"I want to hear you say it while I fuck you and take what's mine.\"\n\n\"Noah.\" The word came out like she was trying to argue but couldn't. \"Noah,\" she breathed on a long sigh. His cock pounded in and out, his hips pushing against her, her legs wrapped around his shoulders. Every thrust claimed her as his, but she couldn't admit that not out loud. His tightened his grip around her neck slightly when she tried to turn her head, to look away. \n\n\"No. Look at me, Marcella. Look at how good you make me feel, how good you feel. Look at how good we can be together,\" he persisted. \"Tell me, tell me you know it.\"\n\n\"Noah,\" she whimpered breathily able to say nothing but his name in response to his demand. It came out almost as a plea, but she could do no more. If there was ever a time where the phrase, fucking someone's brains out was apt, this was it. She was a vulnerable mess, and she couldn't say more than his name without her throat locking up in fear.\n\nHe pulled his cock out of her pussy, and her desperate-sounding whimpering moan washed over him. He moved his hand from her throat and slid his hand between her ass and the mattress and tilting her hips up so that he had access to her tightest hole. All of her would-be his and she would feel him all through their day of travel tomorrow.\n\nShe knew what he wanted, and was both terrified by the fact that he had a big cock and exquisitely excited for the mingling of painful pleasure she knew was coming. Some small part of her, the little submissive, almost always shouted down and locked away in her mind, squealed with wanting to please this man and knowing that she could more than please him, and give him everything he wanted. She was fully alive at that moment, and if he wanted her ass, she could take the pain equally with the pleasure. She could take everything he dished out and more.\n\nBecause he was a little bigger than past lovers, Marcella had to work to relax when she felt his fingers rubbing her cum into her puckered little hole. They eased inside, loosening her, and then she felt the thick, smooth head of his cock at the entrance. His fingers went into her cunt, curled against her g-spot as he pushed against her puckered hole hard, then harder.\n\nNoah's skin tingled as Marcella cried out when the head of his cock forced its way into her ass, he felt a shudder go up his spine and groaned deeply. He took her slowly, savouring every second. Her pussy was wet, her clit a swollen little nub of pleasure sensors. He circled it with his thumb, his fingers rubbing against her g-spot within her. He wanted to make sure that she could not separate pleasure from his pain. That every time she touched herself, or she allowed another access to her body, she would think of him and the way he could play her body like a finely tuned instrument.\n\n\"I want you to say my name when you come,\" Noah demanded, but Marcella had turned her face so that her cheek was against the mattress and he slammed into her harder, getting her attention. \"Look at me, Marcella.\"\n\nShe turned back to him. His cock was buried deep in her. His balls were tight against her, and they throbbed, full and heavy. He flicked his fingers over her g-spot, and rubbed her clit faster, a little harder. She bucked under the torturous touches; her eyes wide but not turning from him.\n\n\"Fuck! Noah!\" His name tore from her lips, and her hips bucked up as she came. Her body tightened around him, and his cock squeezed to painful proportions.\n\nHe didn't cum. Not yet. But it was a close thing. He pulled out slowly, torturing himself until he popped out of her asshole with an audible sound. She lay on the bed, limp and used, exhausted. But he still needed her. He needed her to find a reserve of strength, just for him. He needed to take more than she'd ever given before. His balls ached, and he barely thought before entering her again. Her pussy still clenched at him from her orgasm and it took no more than several fast hard pumps before he came to filling her and wishing he didn't know she was on birth control. The thought of making babies with this woman was more than intoxicating for him. Her hips bucked and he arched his back, letting himself spill the final drops into her. Her pussy continued to tighten and spasmed around him, milking him of his seed and demanding more.\n\n\"Mine.\" He caressed a hand over her as he rearranged her into a more comfortable position and collapsed next to her. \"Mine.\" She curled against him, her body a soft, warm weight against his. She hadn't said it yet, but he did not doubt that he was wearing her down. There were moments during their frenzied fucking when he thought he had seen a softness in her eyes that told him she was regretful of not being able to tell him what he so needed to hear.\n\n*****\n\n \n"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant",
        "submissive",
        "families",
        "tables"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-31"
}