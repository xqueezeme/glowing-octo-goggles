{
    "title": "A Class In Psychology",
    "pages": [
        "<center>1</center>\n\nAlexis Haley had blonde hair, penetrating blue eyes and fascinating lips that always seemed to be frowning. She was a graduate student at Priapis State University where I was finishing my bachelor's in psychology. I had met her two years ago when I first switched my major from English to Psych. She had ignored me, which wasn't surprising. I'd had a tendency to blend in and she was a hot, snooty senior who was about to graduate with honors. \n\nTwo years later, not only was Alexis Haley still hot and snooty, she now had authority as well. Yup, I hated to admit it, but I was hopelessly outclassed.\n\nMiss Haley, as she insisted we call her, regularly ran labs for Doctor Octavian Bennis, the dictator of behavioral psych. The doctor was out for a week with the flu and so Miss Haley was now also covering his senior classes. It was a mixed blessing.\n\nIt was a sweltering September afternoon in Berridge, Ohio, and it was all anyone could do to keep their eyes open, much less focus on periodization of social evolution in rural Cuban, Haitian and Dominican populations. Apparently unaware of our intellectual and physical discomfort, Haley was continuing to lecture without mercy.\n\nPerhaps it was the heat, perhaps the subject matter. Perhaps it was the fact that if all went well, I would be graduating in one month and had a serious case of senioritis. Regardless, at some point I realized I had completely tuned out what I was supposed to be learning and was basically just staring at my teacher. She stood in the front of the classroom wearing a short dark skirt and white blouse with the top several buttons open, exposing the gentle alabaster curves of her breasts. Her honey blonde hair was twisted artfully in a bun, held with two miniature black samurai swords. \n\nSweat glistened on her neck and I watched, rapt, as a liquid line ran down and disappeared under her shirt. \n\nDamnit, dude, I thought. You gotta get a hold of yourself. I shook my head, trying to clear the heat from my brain. I needed an A in this class to keep my GPA in line. Haley's cleavage wasn't helping me concentrate at all. Okay, I could do this. Just had to listen. What was the class talking about?\n\n\"The evolutionary challenge,\" she was saying, \"for any third-world group is no greater than any other, regardless of socio-economic status. All developing nations struggle equally.\"\n\nA hand in the back went up. A dark-haired guy named Carlos disagreed, citing the example of some Congolese villagers fighting to stay alive in the middle of a brutal war. Surely, he argued, natives living in the jungle in Brazil wouldn't struggle quite so hard.\n\n\"It would seem so on the surface,\" Haley answered. \"Men with machetes chopping off arms and legs randomly to prove their dominance is horrible, regardless of your background.\"\n\nCarlos nodded his agreement.\n\n\"Except,\" she went on, \"the Amazon is one of the deadliest places in the world to live. Comparing apples with killer apples, the Congo has only perhaps ten-thousand men at any given time fighting to kill or maim their perceived enemies. The Amazon has over a million varieties of deadly plants, animals and insects all at war for their own survival. One statistic I've heard says the average European without a guide in the Amazon lasts a total of eleven days before their death. That's not including the indigenous tribes, many of whom are warlike. It may be horrific to have your hand chopped off at the wrist, but how much worse would it be to see your next-door-neighbor in a stew pot served as a main course?\"\n\nThe class laughed and Carlos frowned and went silent. A smug smile touched Miss Haley's lips. Then it disappeared. She was looking at me and somehow...\n\n\"...I might disagree?\" I heard myself saying. \n\nWait, what? What the hell was I doing? Apparently I was arguing with her? I hadn't planned on speaking up but the flush on Miss Haley's cheeks with the heat was apparently short-circuiting my natural shyness. \n\n\"Ah, Mister Hall,\" Haley said, locking her dark blue eyes on mine and smiling confidently. \"So nice of you to join us.\"\n\nI usually didn't add much to group discussions, on account of my natural desire to blend in with my surroundings. Social camouflage my dad called it. I called it fear of looking stupid. The class turned, vaguely amused, to Miss Haley's next victim.\n\n\"So what do you disagree with?\" Her voice was clear with a note of challenge in it.\n\nMy stomach did a small flip.\n\n\"Well, um,\" I said. \"Er...\" \n\nI didn't know how to phrase it exactly, so I just decided to sit there and sound awkward. It's not like I didn't already look it.\n\n\"Er?\" she asked. She was not impressed. Neither were my fellow students.\n\nThink brain! I said. Whatever your issue is, please get it out of your system and then shut up! \n\nMy brain did not respond the way it was supposed to. \n\nNot at all.\n\nI planned to say \"My mistake. Please continue.\" Instead, what came out was \"What about sex?\"\n\nThe class was shocked. \n\nThere were quiet whispers, a rumbling of voices and somebody in the back hooted \"Hell yeah!\" A number students cracked up.\n\n\"Alright, settle down,\" Haley said, rolling her eyes. \"I know you all are psychology students so this subject is very special to you, but let's try to keep it in your pants for the moment.\"\n\nShe left the whiteboard and came around to the front of her desk. I caught a glimpse of her smooth legs as they disappeared under the soft black cotton of her skirt. She looked directly at me and my heart went into my throat.\n\n\"So what about sex, Mr. Hall? Please don't mistake me, it's certainly a vital subject. I simply fail to see how it relates to comparative social evolution.\" \n\nShe frowned slightly, the edges of her lips turning down a fraction more than usual. I couldn't say why, exactly, but the movement made heat rush towards the center of my body.\n\nThe class was now perfectly quiet, unwilling to miss a single syllable of this t\u00eate-\u00e0-t\u00eate.\n\n\"People who have sex less, um, that is to say,\" I hesitated, trying to figure out where the hell I was going. Haley tapped a manicured pink nail against the desk impatiently. I was failing. Come on man, I begged. Please just stop talking. \n\nApparently I couldn't stop.\n\n\"Species, uh...I mean groups of people, like the women of Lesbos or the Viking tribes, specifically the Nordic clans that were the ancestors of the modern Dutch...\" \n\nI could feel my palms sweating in my hands. I balled them into fists but the words were coming a little easier now. I had actually studied this subject last year for a project in human sexuality. As long as I could remember what the hell I was talking about.\n\n\"Um...\" I fumbled for words. \"Well, there are a series of historic peoples who were able to beat the evolutionary odds, so to speak, by coming together at a sexual...um...level...\"\n\nYes, I thought frantically. Keep going. Don't lose it.\n\n\"...that is,\" I continued, \"I mean, instead of fighting, they were, you know...\"\n\n\"Fucking?\" Haley finished. \n\nThe word, so casually from her lips, made me hard in my pants instantly.\n\nThe class roared. Haley grinned wickedly and right before she turned around towards the white board I could have sworn I saw her wink at me, but it had happened so fast I couldn't be sure.\n\nWhatever. Just keep going, I told myself. Just don't lose it.\n\n\"Right,\" I said, my heart still pounding. \"I mean, um, like Brown and his partner studying the desert tribes and how they fought less, because, they were too busy doing other stuff.\"\n\nThe class buzzed quietly. Haley, now back at the board, drew a vertical line and then at the bottom of the line drew a horizontal line. She wrote the words \"Sexual Repression\" on the vertical and then \"Violent Culture\" on the horizontal. She drew a diagonal line between them.\n\n\"In almost every instance,\" Haley said, \"there is a direct one-to-one ration of sexual repression and violence. Mr. Hall has made an interesting and potentially significant point. Just in the past two years there have been a handful of new studies, Brown and Littenger's seven-year Saharan investigation chief among them, that suggest it may be possible to increase a civilization's creative output if it could channel a man's desire to destroy into his desire to procreate.\"\n\nA bell rang sharply. I jumped, startled. Students were diving for their bookbags and knapsacks. It was already 2:50pm. Class was over.\n\n\"Alright, no more learning for today,\" Haley sighed. \"On your way out make sure to pick up the material for Thursday's test, including all three handouts from Spencer. Oh and Doctor Octavian wants to make sure you remember the test will also cover Balinski's analysis of the Porcupine Machine, both the movie and the autobiography.\"\n\nThe students were filing towards the door and I followed them. I needed to get out of the room and get some fresh air. I needed to figure out what the hell had just happened. Tucked in line between Rachel Linscombe and Daric Summers, I was almost free when I heard a soft voice behind me.\n\n\"Mr. Hall, could I have a moment.\" \n\nCrap, I thought. It wasn't a question. I turned around and found my hands sweating. The last three students filed past me and then the room was empty except for the instructor and me.\n\nShe bent down and picked up her brown laptop bag. As she did, the material on her dark miniskirt stretched taut over a well-toned ass and I couldn't stop myself from staring. She stood back up and I suddenly became very interested in the ceiling. \n\n\"Mr Hall.\"\n\n\"Yes?\" I replied, trying not to sound guilty.\n\nHaley was staring at me, her frown made her soft lips pout just slightly. I tried to hold her eyes, dark blue and full of something I couldn't comprehend. A natural force, like a thunderstorm. She blinked at me and then walked past me and out into the hallway.\n\nI followed, falling behind. I found myself staring at the way her four-inch heels seemed to exaggerate the movement of her hips, rolling smoothly first to one side and then back, her ass hypnotic in its rhythm. I've noticed some women seem uncomfortable in heels, as if they've never quite been able to balance on the little stiletto point. Alexis Haley looked like she went running in heels for several miles every day after class. \n\nIt took a few seconds before she noticed I had fallen behind. She turned around and caught me ogling her openly. I was rewarded with a disapproving look.\n\n\"Well? Are you coming or not?\" she said.\n\n\"Honestly?\" I said, and before I could stop myself, some inner, uber-confident bastard said, \"I apologize, Miss Aleck. But I have to admit I was enjoying the view.\" \n\nMy part-time psychology professor froze. The blood in my heart went to ice. I had gone too far. I didn't know why I had said it. It was a terrible idea. \n\nI was about to apologize when she took three steps back to me and then kept going, stopping only a few inches from my face. We were so close I could feel the heat from her body. She smelled like fresh peaches and something else I couldn't place. Something darker. I could feel blood pounding in my wrists. A drop of sweat gathered at her temple and slid down the contours of her cheek.\n\nHer beautiful blue eyes narrowed.\n\n\"Mr. Hall,\" she said, her voice low, \"I assume you are aware of the sexual harassment guidelines at Priapis University?\"\n\nHer chest moved as she breathed and her breasts rose and fell. I swallowed.\n\n\"Um,\" I said. \"Uh...\" \n\nShe was so close that I was having trouble concentrating on anything except her lips. They curved downwards sweetly at the ends. This explained the riddle of why she always looked like she was frowning. \n\n\"Go ahead,\" she said impatiently. \"Spit it out.\"\n\nMy stomach turned over.\n\n\"You...\" I stammered, \"you mean inappropriate comments, for example. Like why you're not supposed to stare, I mean say sexual things to a fellow student...or...\"\n\n\"Or a teacher,\" Haley finished.\n\n\"Even if they deserve it,\" I said and immediately bit my lip. Apparently I had a secret inner wish to get expelled from college and hell, maybe a quick trip to jail while I was at it. There was something about this woman that was re-routing all my circuitry.\n\nHer eyes widened for a split-second and I had a terrifying urge to run down the hall. But I was frozen. Paralyzed. \n\nThe two of us stood silent. A strange combination of terror and defiance rushed over me. She opened her mouth, as if she was going to say something, then closed it. Her burning eyes never left mine. Finally, she broke the quiet. Her voice was businesslike and stiff.\n\n\"Mr. Hall, I'm going upstairs to the teacher's lounge,\" she said, \"where I have a great deal of work to do. I'm sure you have similar pressing needs to take care of.\"\n\nShe took a step back, her chest rose and fell several times as if she was breathing deeply. She turned and started towards the upstairs classrooms and then paused.\n\n\"I would advise extra time,\" she said, over her shoulder, \"on the Balinski for Thursday. It's difficult on the surface...but once you're inside...\"\n\nHer face had a strange, turbulent expression that I had never seen before and couldn't read. Then she was disappearing up the steps, the crisp sound of her heels on the wood fading as she went.\n\nDamn, I thought, still staring after her. My heart was racing and I felt disoriented. What time was it? Where was I? \n\nFocus man, I told myself. You need to get your shit together. You just managed to sexually harass your admittedly super-hot professor arguably three different times in as many minutes. This had to stop. I had to get the hell out of here before...\n\nOnce you're inside\n\nBefore what? \n\nI shook my head. It didn't make sense. \n\nWhatever, I told myself. It didn't matter how logical it was. The truth was I did have things to do. A lot of things. Important things. I had a gripload of statistics papers I owed Dr. Owen from when I had been sick two weeks ago. I still had a French paper that was due yesterday (Je jure, je suis en retard pour ma propre naissance). I had to co-ordinate the study group for our French presentation. My mom had left three messages on my phone about graduation hotel arrangements for my east-coast family. I was supposed to \"swing by\" the financial aid office and see Corky Nelson. Andrew was meeting me for a workout at five...\n\nIt's difficult on the surface...but once you're inside...\n\nI did not remember climbing the stairs to the second floor of Grast Hall. Nor did I remember walking down the north corridor, past the watercooler and the massive map of Africa outside the Ethnic Studies department, or taking a left to the end of the hall. Yet somehow I had traveled this entire distance in a kind of delirious fog and now stood staring at the door that said \"Psychology and Social Science\" in black letters on bubbled glass. \n\n\n\n<center>2</center>\n\n\n\n\n\nThe door was cracked open, but just barely.\n\nI should have just opened the door and walked in. Or at least I should have knocked at the door. I did neither. Instead I found myself peeking furtively through the open crack into the psychology professor's lounge. \n\nI could only see the left hand side of the room and two office doors. One of the doors was closed and the lights were off. The other door was slightly open and I could see faint movement. Then I realized I was seeing a reflection of the fan. The psych department's large, old-fashioned fan was blowing loudly in the room, oscillating back and forth. I couldn't hear anything else. \n\nIt felt like I shouldn't be here. Why was I peeping through the door into the teacher's lounge? I looked back down the hall but the building seemed to be empty. There was a school picnic currently happening on the main grounds of Dover Field, which might explain where some of the students and teachers were. Plus it was hot. I reached up and felt my collar sticking to my neck. It was really hot.\n\nThe already aggressive temperature was even hotter up here on the second floor. Grast Hall was the oldest at Priapis University and had only recently been upgraded with modern air-conditioning. Apparently the AC hadn't been fully installed yet. No wonder the place was deserted this afternoon.\n\nStill...\n\nThe hair on the back of my neck went up. There were multiple psych professors with offices in this lounge. If anyone caught me, how was I going to look peeking through a barely open door?\n\nThat made me feel ridiculous. No, whatever I was doing I was going to do it openly. Yes, I told my told myself. Absolutely. But what the hell was I doing in the first place?\n\nMy brain compromised by helping me stand up straight, but instead of knocking on the door, I gently pushed it open and slipped inside.\n\nThe room was rectangular with a spacious inner quad of black leather couches surrounded on three sides by offices. Within the square of couches, a huge black marble table lay low and impressive. Inlaid on the marble were the words Inviglio En Partis Illimino En Fuego. Most of the table was covered with textbooks, clinical magazines and a few floral boxes of kleenex. I couldn't see all the words but I know they were there; I had translated them the first time I had visited this room almost four years ago. The secret fire that illuminates the mind. \n\nThe sun streamed through the windows of the west facing offices, bronze light glinting off the steel handles of filing cabinets and the exposed surfaces of the polished marble. It took only a second in the room to realize the temperature had jumped another ten degrees. I could feel my shirt sticking to my chest. \n\nA low sound cut through the whine of the fan and then it was gone. It barely registered but I was so keyed up at this point that I jumped anyway. My first thought was that it was an animal, but that made no sense. Was it possible the air was so hot I was hallucinating? \n\nI looked around the room, trying to locate the source. The slightly open door was on the east side of the lounge, the room beyond it hidden in shadow. I heard the sound again, a little louder this time. I found myself tensing, nervous once again. I should definitely leave, I thought. Definitely.\n\nInstead, I quietly moved toward the open door until I was close enough to see through the space into the office itself. My heart was hammering in my chest. I craned my neck to peer into the darkened room. It took my eyes several agonizing seconds to adjust to the light.\n\nWhat I saw next rocked my entire universe.\n\nAlexis Haley was thrown back in her chair, one leg on the ground, the other leg bent, heel firmly rooted against the edge of the desk. Her skirt was bunched up and underneath her, a pair of thin white panties had been discarded, forgotten on the ground. Her white blouse was unbuttoned halfway and a lace bra had been pushed down, revealing a glorious breast. Pink fingernails pinched and kneaded the small hard nipple. Her other hand was sunk deep into her center. From where I stood, her long, white leg obstructed my view of the penetration but I could watch the muscles in her arm tighten and twist. Her hips gyrated in tiny circles. Her mouth was open and I heard the low sound again, this time louder still. Her eyes were clamped shut. A tiny shadow of smeared mascara haloed her eyes. A single dark rivulet of black had begun to run down her cheek. She shuddered and hitched and the muscles of her leg clenched and released and clenched again.\n\nHoly Shit.\n\nI tried to process what I was seeing but my mind failed me utterly. My cock, on the other hand, throbbed painfully in my pants.\n\n\"Ohh huhhh,\" Haley moaned, twisting her nipple. Then, apparently unsatisfied with only a single breast, she abruptly pulled the lace of her bra away from the other nipple and began twisting that one, evening the score.\n\nHer hips were still undulating, bucking in a small, controlled rotation. Her hand disappeared further into the space between her trembling legs.",
        "Unconsciously, I began to stroke myself through my pants. More than anything I wanted to free my dick, to allow myself the release that I suddenly, desperately needed. \n\nHaley slipped her hands from between her legs and put three fingers into her mouth, sucking greedily. A thin trail of wetness lingered from her lips onto her fingers. She hesitated just a second, opening her eyes to stare at the juices. A small pink tongue reached out and licked her index finger.\n\nGod this girl was ramped up. \n\nI grabbed my cock harder and tried to jerk it through the material but I was only managing to make myself more frustrated. Fuck it, I thought, as Haley's fingers once again found her pleasure center. She moaned again and this time I unzipped my pants and pulled out the steel rod that was waiting. The skin of my cock was electric and I didn't realize I had closed my eyes until there was a sudden gasp.\n\nI opened my eyes, my heart crashing in my chest.\n\nShe was looking at me. \n\n\n\n<center>3</center>\n\n\n\n\n\nMy heart stopped.\n\nHaley had frozen, one hand covering her breast, the other still between her legs. My cock was jutting out of my pants, my hand gripped around the white-hot rod. \n\nA lifetime passed while I thought of everything that was going to happen to me. Expulsion. Lawsuits. Jail. Castration. Oh man, I was fucked. \n\nCompletely and utterly fucked. \n\nSo fucked, in fact, that the only option left was to enjoy myself for the last few seconds I had left. So much fear and lust were flooding my system that I could no longer think logically. All I could do was stare in awe at the stunning woman in front of me.\n\nHaley looked at me and then down to the huge erection in my hand and then back into my eyes. Amazingly, the corners of her lips turned up just slightly.\n\n\"I take it,\" she said with a breath, \"you are enjoying the view?\"\n\nWait, what? I was dumbfounded. Was this actually happening? Did the woman of my dreams actually like me?\n\nIt took me a long time to realize she was staring at me and I remembered I was supposed to say something. \n\nShit.\n\nI had no idea what to say. Did she want me to be sexy? Aggressive? How do you respond to your teacher when she asks you if you enjoy watching her masturbate? My brain went through a hundred responses but none of them were right. If I screwed up here it was all for shit.\n\nI had nothing.\n\nLiterally my brain was blank.\n\nI had to say something.\n\nAnything.\n\nA minute went by. A lifetime.\n\nPlease brain, I begged. Just let me show this girl how I feel about her.\n\nPlease...\n\n\"You...you're beautiful,\" I blurted. \n\nAnd in that moment I knew it was the truth. Alexis Haley had always been gorgeous before and now, in the glow of her deepest intimacy, she was positively radiant.\n\nShe responded in a way I never would have imagined. Without taking her dark blue eyes from mine, Alexis Haley put her leg back down on the ground, stood up, and, ignoring the dress hitched around her waist, walked up to me. Then she gently pressed her lips against mine.\n\nThe world dissolved.\n\nShe pulled away and then kissed me again. Her lips were like wet satin and I could smell fresh peaches mixed with coconut and the dark redolence of her sex. The combination was more than I could bear.\n\nI slowly pushed her away. Our lips separated with a soft smack and she leaned ever so slightly towards me as we parted. Her eyes asked me why I had separated us and I answered by taking a deep breath, filling my lungs with her fragrance, with the heat of the room, with everything. I let it out and gave her a sideways grin. She shook her head and laughed gently.\n\n\"This...\" she breathed, \"This is a terrible idea. Do you know how much...\"\n\nThis time I kissed her. She wrapped her arms around my neck and I kissed her deeply, our lips mashing together. Her tongue sought mine, wanting to taste me. The peach flavor gave way to peppermint in my mouth. I picked her up, my fingers reveling in the soft, tight skin of her naked ass and she instinctively wrapped her legs around me. I held her for a moment, simply enjoying the weight of her in my arms. She didn't feel light in my embrace or heavy either. No, it was the substance of her that I felt. I was holding her, I was holding this beautiful woman and the strangest feeling came over me. It felt right to held her. Like I was supposed to hold her. \n\nShe kissed my neck, raining small kisses like snowflakes along my shoulder and I shuddered with pleasure. \n\nI set her down on the desk and stepped back from her and we simply absorbed each other. I stood with my penis proudly erect, my belt unbuckled and my pants around my ankles. She leaned back on her elbows on the desk, her shirt and bra open revealing naked breasts, her black skirt crumpled around her waist, her legs apart, the thin coral pink lips of her pussy prominently on display.\n\nI looked at her and she looked at me and suddenly the whole thing was so amazing, so ridiculous and so impossible that I couldn't help but laugh. Then she was laughing too. \n\nHaley leaned forward and curled her finger, making the come-here gesture and I went to her. She pushed her hips up to the edge of the desk and then lifted both legs until her ankles rested on my shoulders. I watched her close her eyes, waiting for me. \n\nI realized I wanted her to wait. I began to kneel. When Haley felt her legs lowering, she opened her eyes, looking up with a sleepy but curious and slightly amused expression. A moment later they snapped wide as I took a deep taste of her pussy. I licked upwards from the bottom of her lips, dipping deep into the nectar of her honey and dragging my tongue upwards and settling right under the edge of her clitoris. She tasted like cloves here too. Cloves and arousal. I tasted her again and then again. \n\nHaley moaned loudly. I gently sucked one of her thin pink outer lips and then the other. She curved her feet and rested them lightly on my shoulders. When I pulled away for a moment to look at her she shook her head reprovingly and flexed her calves, pulled me back towards her swollen mound. I held my ground and grinned back evilly.\n\n\"Kinda pushy aren't you?\" I said.\n\n\"Mmmm mmm,\" she said, shaking her head. Then, somehow, she had slipped both hands around the back of my neck and pulled my tongue towards her clitoris. \n\nI figured I could argue at this point. Make life even more difficult for her. Say no. Resist. But then I had an even better idea. I would take her to the edge but not let her come. Oh yeah, I thought. Torture. I would make her beg for it. \n\nPerfect.\n\nI let her pull my tongue to her clit and I fit my lips over it. Haley quivered with pleasure, her hands playing with my hair. Her fingernails lightly traced circles and strange runes on the skin of my scalp.\n\nI sucked in, pulling the sensitive flesh up between my lips. In response, I felt her fingernails quickly sink into my neck. Pain and heat and pleasure all flared at the points of her nails; I couldn't tell which.\n\n\"Oh...\" She started with a tiny gasp of horror. Both of her hands instinctively flinched away. \"I didn't mean...I'm sorry...\"\n\nWithout moving my mouth, I reached up with one hand and laced the thin, soft fingers of her hand with my own rougher counterpart. I looked deep in her dark blue eyes, squeezed her fingers and simultaneously sucked on her clitoris. She clamped her fingers against mine, her eyes a fury of blue as I pulled her clit into my waiting lips. I took her inside me, over and over, fucking her with my mouth. She clawed desperately for my other hand and the second my fingers found hers she cried out and came.\n\nWell fuck, I thought. So much for torture.\n\nThen I realized her spasming thighs were clamped down on both sides of my head. Her legs were stronger than they looked and I was surprised and actually a little bit worried when my head started hurting. A split-second later she released my head and flopped back onto the table, spent. \n\nIt took a few seconds before the circulation returned to my brain. Then again, it wasn't like I was using it anyway. I stood up to admire my handiwork. \n\n\n\n<center>4</center>\n\n\n\n\n\nMy beautiful professor was a still-life of post-orgasmic bliss. I was so turned on I could only absorb individual details. Sweat-smeared mascara. Wild, honey blonde hair matted dark to the sides of flushed cheeks. Fingers on one hand playing absently in the air currents of the sweltering room, almost as if conducting a silent symphony. Calves and feet hanging over the edge of the desk, toes on each foot alternately contracting as tiny aftershocks continued to roll through her. \n\nI forced myself to take a mental picture for later. I wish I could have spent an hour just staring at her like this, but the painful rock-hardness of my cock simply couldn't wait.\n\n\"Turn over,\" I told her.\n\nHaley opened her eyes wide, shocked at my sudden aggressiveness. But instead of arguing she flipped over and then slid down so her legs were both on the ground. Bent over the desk, her ass was now obscenely exposed. The bright pinkness of her sex and the darker pink of her star were vividly on display. \n\nShe turned her head and looked at me over her shoulder, eyes narrowing.\n\n\"What're you thinkin' there, sailor?\" she said.\n\nI thought that she might have the best ass in the world.\n\n\"I think,\" I said instead, \"that you have a fat ass.\"\n\n\"Fucker,\" she responded. Then she laughed, reaching back and grabbing an ass cheek. \"I know, I know. No matter how much work I do, no matter how much time I spend on the treadmill, it's still a ghetto booty.\"\n\nI stared, transfixed. She watched me watching her and then took her other hand back and spread herself open, her rosebud crinkling and then expanding. I felt myself, somehow, get even harder.\n\nWithout meaning to, I reached out and gingerly touched her flesh. It was hot, smooth, wet with sweat and taut under my finger. I pushed my fingernails in and scratched three wet lines down the curve onto her thigh.\n\nShe hissed in response.\n\nI did the same thing on the other side and then, while Haley was processing my assault, I stuck my tongue in her asshole.\n\n\"Ahhh FUCK!\" she cried.\n\nShe let go of her ass and grabbed the edge of the desk in front of her. I reamed her in a slow circle, savoring the taste of her dark musk and the soft clamp-release clamp-release of her star. The muscles of her ass worked involuntarily, shuddering with pleasure and newness. \n\nClamp-release clamp-release clamp-release. \n\nI sensed, heard, tasted and felt her all at once. It lasted probably ten seconds before I realized what I needed to add.\n\nClamp-release clamp...\n\n\"FUUUUCKKKK JESUS OH YOU OHHHH\"\n\nMy beautiful professor came again, covering the fingers I had just slipped into her pussy with wetness. She thrust herself backwards over and over at my fingers and my tongue and I held onto her, riding the wave of ecstasy.\n\nShe moaned when I pulled my tongue out of her. Still rocking against me, she whispered something that I didn't hear.\n\n\"What did you just say?\" I asked her, moving so I could see into her eyes. They were on fire now. Wild. It was like looking into a hurricane.\n\n\"Do it,\" she whispered.\n\nI played innocent. \"Do what?\" I asked, my fingers maintaining a gentle rhythm against her g-spot.\n\n\"Shut up...bastard,\" she hissed, fucking back onto me. \"You knowwwww...hhhuuuuuh....what...\"\n\nI supressed a grin. \n\n\"Mm, you mean, go work on my homework for next week?\"\n\n\"Nooo! Ohhhh.\" Another tremor washed over her and she shivered. \"Come on baby. Please.\"\n\nHoly shit. She was begging. The iron bar of my dick was so hard at this point that I was worried it may never return to normal. My psychology teacher, the hottest girl in the school, hell, the hottest girl in any school, was begging me for anal.\n\nI couldn't wait any longer. It was physically impossible. \n\n\"You want me to fuck you...\"\n\n\"...in the ass. Yes. Right now.\"\n\n\"Say it again,\" I said.\n\nHaley hissed again, this time with frustration.\n\n\"Ugh, you ARE an asshole!\"\n\n\"Say it.\"\n\nShe took a deep breath, closed her eyes and focused. Her voice was sultry and nasty and exactly what I wanted to hear.\n\n\"Eric Hall, I want you to fuck me in the ass with that big cock of yours. I want to feel it in me. Do it. I need it. I need to be fucked. Please.\"\n\nShe was practically mewling at this point. \n\n\"You are dirty aren't you?\" I said, but I was really only talking with about ten percent of my brain. All the blood was elsewhere. I really almost didn't care anymore what she was saying. All I could focus on was the heat radiating from her core, her center, as I brought my cock up and held it in front of my prize.\n\n\"Pull yourself open,\" I said. \"I want to see it.\"\n\nShe did. Her rosebud opened, stretched, shivered closed and opened again.\n\nA thin stream of saliva slipped down from my lips and slid along the crack of her ass. I pointed my shaft at her and pushed. The head of my cock forced its way through until it was almost inside. The sensation of her contact against me was so intense I had to stop. Haley moaned and pulled harder on her ass cheeks, spreading them wider for me.\n\nI waited, savoring the delicious contact, the heat blossoming from inside her. \n\n\"More,\" she whispered, her voice husky.\n\nI leaned ever so slightly and the bulbous head disappeared. \n\n\"Ohh huuuuhh,\" she whimpered, involuntarily clamping down on me. The sensation of her slickened ass gripping my dick like a vice was almost too much. I bit my lip until blood flowed in my mouth. It was still almost too much. \n\nDear God this was hot.\n\nClamp-release clamp-release. Clamp...\n\n\"More,\" she whispered. \"At least I think I can...?\"\n\n\"You sure?\"\n\n\"So...so big...\" Haley was breathing heavy now, trying to relax, to accept the violation of her tiny hole. \"Okay...go slow...\"\n\nI held her hips in each hand and closed my eyes, trying to feel everything at once, trying to memorize her from the inside. I felt myself sinking deeper into her and I realized Haley was doing the moving for both of us.\n\nHer hips rolled in a tiny circle, a mirror of the movement I had seen earlier except this time in miniature.\n\nFlex, roll, twist, release. \n\nFlex, roll, twist, release.\n\nI watched her for what seemed like a million years until I found myself adding another step to her dance. At the end of her circle I pulled out a fraction of an inch and then pushed back inside.\n\nFlex, roll, twist, release, pull, push.\n\nWe were like statues, almost. Statues embedded on and in each other. Statues that were torn between permanent, frozen bliss and agonizing, microscopic motion. \n\nStatues slowly coming to life.\n\nHaley whispered something and I didn't hear the words but the push of her ass was clear enough. She needed it deeper. I responded, sinking another inch into the hot velvet of her most intimate part. \n\n\"Noo...too much...fuck...\"\n\nDamnit, I thought. Too fast. I was about to pull back but Haley reached back and grabbed my wrist.\n\n\"No, wait...\" \n\nI opened my eyes and saw her gazing up at me. Her expression was equal parts pain and need.\n\n\"Alexis...\" I said, and a wave of pleasure pressed against my chest. It was the first time I had ever called her by her name.\n\nShe bit her lip and her eyes narrowed. It was if she was deciding something. Finally she nodded a fraction of an inch.\n\n\"Okay,\" she said quietly. \"Don't stop.\"\n\n\"Are you sure...\"\n\n\"Goddamnit, fuck me alright?\"\n\nHer words hit home. I was being too gentle. I pulled out of her an inch and then pushed back in, the pleasure rushing up my spine.\n\n\"MMMMMMM huhhhhhh,\" Haley cried. I fucked back into her again. And again.\n\nMy eyes were clouded with spots as my vision began to blur. I pushed deeper and deeper into her. For some reason my right hand started throbbing with pain and I realized Haley was sinking her nails into the flesh of my palm. Her hips thrust back and all at once I was all the way inside, my cock sheathed completely inside her.\n\n\"GODDAMN YOU,\" she yelled.\n\nI saw tears spilling down her cheeks. \n\nWhat the hell? I thought, panicking. Something was wrong. I was tapping into something much deeper than I was prepared for and I knew in that moment I had no idea who Alexis Haley really was. The only thing I knew for certain was that this woman was genuinely hurting and I was the cause of it. I was actually hurting her. Maybe more than just hurting her. I started to pull out.\n\n\"I'm sorry,\" I said.\n\nI couldn't do it. I couldn't cause her pain, no matter how good it was. At least that's what I told myself, but when I pulled out of her completely, she whimpered. Then she pushed those amazing legs and that fantastic curvature outwards, just slightly, towards my cock.\n\nWhat the fuck was going on here? She was hurting, she was suffering, it was wrong and yet she wanted to keep going, wanted something. What the hell did she want from me?\n\nThen I knew.\n\n\"Stand up,\" I told her. \n\nShivering, she slowly pushed herself up off the desk and turned around so we could look at each other face to face. The intensity in her eyes was as fierce as anything before, but now there was a new note. Fear. She was scared of me. I took a deep breath and told myself I knew what I was doing. At least I hoped I did.\n\n\"Lay down,\" I said. \"On the ground.\"\n\nHaley nodded and as I moved the chair she started to lay on the thick afghan rug facedown.\n\n\"Not that way,\" I said, touching her gently. \"Turn over.\"\n\nShe did as I requested, her eyes searching mine silently. She seemed smaller somehow now. Fragile. It was fascinating but I think with the heels that she always wore combined with her ferocious intelligence, Alexis Haley had always seemed larger than life. But in reality she was probably only about 5'2. I had never seen her like this and a new wave of feeling swept over me. Protectiveness.\n\nI lay down on her and she slipped her arms around my sweat-soaked back, holding me tight to her. I kissed her neck and we remained quiet, absorbing each other. My professor was the first to break the silence.\n\n\"I want you to come,\" she said, her voice soft in my ear.\n\nThe jolt that went through my body at her words nearly brought her wish instantly. I laughed gently and pushed myself up to look at her.\n\n\"Woman, I've been about two seconds from coming for about an hour now. I almost came when you said that.\"\n\nShe laughed and when her chest shook I become aware, once again, of my cock, trapped between the heat of us.\n\n\"Good,\" she said. \"Then if I did this...\"\n\nShe reached down and grasped my cock gently in one hand, the small fingers playing over the rock hardness she found.\n\n\"And then this...\" She lifted her hips, slid backwards and I felt my pubic bone pressing against her sex, while at the same time the tip of my cock was swallowed by intense wet pressure.\n\nI shuddered and felt my arms begin to give way. I leaned forward onto her and she thrust up against me, burying me in her ass.\n\n\"You...huhhh ohhhh jesus....\" \n\nI was flush against her, our lips inches away from each other. She held my cheeks in each hand and the softest smile crept onto her face. Her hips fucked up against me and I shuddered again.\n\n\"Eric...you...uhhh....hurt me....sooouhh...so good...\"\n\nI found her rhythm, gentle this time, her ass tight but insistent against my heat. I followed her, watching her face, her eyes, as they closed each time I penetrated deeper. Her mouth opened in slow, quiet breaths. My brain was lost. I couldn't focus on anything. The pressure inside me was an exquisite fountain. Expanding. Expanding...\n\n\"I...\" I whispered, incoherent. \"I can't...\"\n\nI felt her legs wrap around me and pull me flush to her.\n\n\"Please,\" she whispered, hoarse, begging. \"Me too.. can't...uhhmm...wait...\"\n\nThe world turned to colors. ",
        "A firestorm of red, brilliant and burning, ripped through the universe. Sheets of green. An ocean of blue. Burgundy wine. Fireworks of vermillion, orange, lavender. Sunspots of yellow. A riot of colors in all directions. \n\nI don't know how long they lasted but at some point I became aware that Haley was rocking against me, thrusting and moaning incoherently, her closed eyes fluttering, sweat slipping down dark mascara-laced cheeks.\n\nThe aftershocks continued to ripple through us, tiny twin earthquakes rolling back and forth until eventually the earth swayed, slowed and then stilled.\n\n\n\n<center>5</center>\n\n\n\n\n\n\"Wow,\" she whispered. \n\nHer voice was quiet, almost shy. It sounded a long ways away. My eyes were closed but if I opened them and looked at her, I felt certain she would be staring upwards. She would be looking up through the office ceiling and the fading afternoon sky, through the clouds and the atmosphere, up to where the sky was velvet black and saturated with stars.\n\nI felt that way because I was there, too.\n\nI took a deep breath, as if to remind myself that I still had a body.\n\n\"Hey,\" she whispered again, this time in my ear. \"Hey, you.\"\n\nI pretended to snore.\n\nShe giggled softly.\n\n\"Hey you big heavy lug.\" She kissed my neck. \"You do realize you're slowly crushing me to death here.\n\nMy snoring broke off abruptly and I lifted myself up off of her a half inch.\n\n\"Better?\" I asked.\n\nShe brushed a hair from my cheek.\n\n\"Mm hmmm.\"\n\n\"Kay.\" I flopped back down onto her.\n\n\"Hey!\" she protested, squirming. \"No fair. You're too big.\"\n\n\"Was it good for you too, baby?\" I asked, smothering her. \n\n\"Noooo!\" she said, smacking my butt. \"It was awful!\"\n\n\"Not very nice,\" I said. \"I need to find a sweeter girl.\" Then I wrapped my arms around her waist and rotated both of us until her weight rested on me, her breasts lightly pressed against my chest. Her blonde hair framed a beaming face.\n\n\"Mmm much better,\" she said, and kissed me on the lips. \n\nI pretended to suffocate. \"Can't...breathe...\" I stammered. \"Too... fat...\"\n\n\"You like it,\" she said, kissing me again. \"You like the big ones. Oh, and apparently so do I.\"\n\nHaley had noticed her kissing was getting to me. I felt myself hardening again and realized that I was still inside her. What a lovely thought. Her ass was now wet with sweat and cum and as I lengthened, my shaft slipped deeper inside her with no hint of resistance.\n\n\"Round two?\" she asked coyly, her forearms resting on my chest.\n\nInstead of answering, I reached down and grabbed her hips with both hands, pulling her down onto me.\n\n\"Ohhh.....\" \n\nI pushed her back upwards a few inches and then back down, forcing her ass to swallow my burning cock, which it did hungrily.\n\n\"Gonna take that,\" she moaned, \"...ahhh...as a yes...\"\n\nShe let me control her movements, adjusting herself slightly to make the angles deeper and my strokes longer and sweeter.\n\nWhen I felt the weight of her chest lift off of me, I opened my eyes and again was rewarded with a rush of pleasure in my heart. Alexis was smiling at me. Her eyes, now a deep blue, danced with delight. She rested her hands lightly on my chest, first tossing her hair back over her shoulders then letting it fall down to brush against my ribs.\n\nI couldn't help myself. I smiled back, a retarded, ridiculous grin - the smile of an eight-year-old-boy.\n\nShe shook her head, still smiling, and then leaned down to kiss my neck.\n\n\"It doesn't feel,\" she said, still rocking against me, \"...like we're...having sex...\"\n\n\"You mean except...for my cock...in your ass?\"\n\n\"Mmm...there is...uhmmm...that...\"\n\nShe lifted herself back up and then reached down and took my hands, pausing the motion of our hips. She pressed them against the soft flesh of her breasts.\n\n\"My nipples,\" she said, biting her bottom lip. Before she had even finished the word I was squeezing the bright pink tips of her mounds, pinching first one side and then the other.\n\n\"God FUCK yesss...\"\n\nShe leaned backwards and then slipped her legs along mine until her feet were at my hips and then she leaned forward, squatting lewdly over me.\n\nI reached my hands back behind my head and let her ride me, watching her work. She flexed her calves and the taut muscles of her thighs, lifting herself up to the very tip of my cock and then letting go, impaling herself on me. After doing that a few times I realized with a jolt that she was softening as she raised up and then squeezing herself tight around me on the downstroke. Damn, this girl was amazing. \n\nMy eyes rolled back into my head and I groaned.\n\n\"Like that do you?\" she said, flexing even tighter as I pushed back into her.\n\n\"S'okay,\" I lied. I could feel my brain wavering on the edge of sanity. \"Not...uhhh...nothing special...\"\n\n\"Oh. I see how it is.\" \n\nShe pinched one of my nipples and I jerked under her.\n\n\"Hey! Ow!\" I said. It kinda hurt.\n\n\"Oooh, that was fun,\" she said. Her eyes had a wicked glint. \"I felt you shuddering inside me. Did I hurt you?\" \n\n\"Yes...\" I said. \n\nThe funny thing was, it had hurt, but now it just kinda throbbed in a warm way.\n\n\"Mmm, maybe this will help,\" she said. She put her mouth to my nipple and sucked gently. My cock responded by jerking inside her again.\n\n\"Oooh,\" she cooed. \"Again again!\"\n\nThis time I fucked up into her as she came down on me. Haley squealed with joy.\n\n\"Ohmygod Eric...\"\n\n\"Ditto on my end.\"\n\nShe lifted up and I pulled slightly down and I thrust back up into her, going deeper than we ever had.\n\nShe growled this time and I couldn't help but laugh. Her growl sounded like a little kitten, tough and adorable. I didn't have time to appreciate it because she came down on me again and then again, increasing our intensity. \n\nSoon we were fucking, really fucking, our skin slapping together in an urgent, delirious rhythm. Sweat rolled down her chest and I leaned up to lick it off. I ended up biting a taut nipple, my tongue savoring the hard-pebble texture of her arousal and the faint hint of peaches. She scratched at my back, drawing thin welts of pain-pleasure. \n\n\"Harder,\" she said. \"I just...need...\"\n\nWithout breaking stride, I sat up, grabbing her hips, and crushed her to me. She was making little staccato breaths in my ear and I found myself grunting as every impact sent a shockwave of new pleasure up and down my spine at the same time. \n\n\"I..\" she whimpered. \"God, Eric...I...\"\n\nI pushed her away just enough so I could see her face, her blue eyes burning, her pink lips flushed and swollen, her mouth open.\n\n\"Alexis.\" I held her gaze and let her feel the intensity of what she was doing to me. She slowed down just a fraction, trying to concentrate on me. \n\n\"Yes Eric?\"\n\n\"Alexis,\" I said. \"I want you to come for me. I want to feel it.\"\n\nHer eyes went to slits and she nodded and that was all it took.\n\n\"Ohh Godd..Ohh ohh...no so big...can't...Jesus...uhhbastardfucking cockunnnnnngah...\"\n\nThe words stopped making sense, changing from English to some other language, a beautiful, vulgar babble of joy.\n\nShe shuddered so deeply that I slipped from her ass and instantly found myself jetting hot cum across her stomach. Streak after streak sprayed up across her breasts and neck. Still shaking with small convulsions, she reached down, catching two more thick spurts in her hands and smeared my orgasm all over her chest. \n\nIt was a dirty, messy, beautiful thing to watch. \n\nAs I stared at her massaging my cum into her skin, I almost felt like I had left my body. As strange as it sounds, I'd barely even noticed I had come. Even after shooting my load I still felt almost the same amount of radiating, beautiful energy in my body as I had before.\n\nI had to admit it: I loved being with this girl. \n\nI was grinning again and she saw my smile and mirrored it back to me and then we were kissing. Long kisses with tongues playing tag and short, sweet kisses. We kissed each other's noses, foreheads, cheekbones. Our fingers were touching and stroking each other's bodies, scratching wet nails across slippery skin and caressing everything we could see, everything there was to touch, until we were filled, both of us filled to the brim.\n\n\n\n<center>6</center>\n\n\n\nSometime later, I don't know if it was minutes or hours, I was helping her button her blouse when I realized I was thirsty. \n\nMy shirt was untucked but I finally had pants on, so I stuffed the tails into my khakis and left the little office to fetch two cold cups of water from the Alhambra machine in the lounge. A minute later I brought two more cups.\n\nHalfway through my return trip with a third round of waters, I stepped back into reality. Somewhere along that little trip, my uber-confident inner-bastard seemed to disappear. In his place was just regular old Eric Hall. I suddenly felt lost.\n\n\"Listen,\" I said, as I set the cups down, \"Alexis, I just want to...\"\n\n\"Shhh,\" she said. She put her finger on my lips, silencing me. I tried to keep talking through her finger.\n\n\"Mbut wha about...\" \n\nThis time she used her whole hand.\n\n\"Eric, no,\" she said, and this time the playfulness in her tone was gone. \"Don't ruin it.\"\n\nIn that moment, I realized what was happening. She couldn't let herself connect to me. After everything we had just experienced, how deeply we had opened ourselves to each other, I did not understand how she could be like this.\n\nWhen I finally accepted that this was really happening, a small part of my heart died. And immediately after, another thought came to me. I could not, would not let my pain show. If she needed it to be like this, if she needed a man like that, then I would be that man. \n\nIn fact, whether I wanted to admit it or not, it was only that cool, aloof, dangerous man that had let me get away with this insane adventure in the first place. \n\n\"Okay,\" I said levelly, trying my best to betray no emotions whatsoever. I finished tucking my shirt in, buttoned the top button of my shirt and turned away to go.\n\n\"Hey, wait,\" she said, grabbing my arm. \"Hold on.\"\n\nI took a deep breath and turned back to look at her, finally composed again. Her arms were crossed and her lips were drawn in a frown, but she still looked completely disheveled and glorious. Every woman looks stunning right after sex and Alexis Haley ten times more. My heart raced again.\n\n\"Yes?\" I said, trying to suppress the smile that was threatening the corners of my mouth. Hell, I thought. Who was I kidding? Even if I was just a fuck-buddy for Miss Haley I would be overjoyed. Even if this never happened again, I would remember every second of this afternoon for the rest of my life. \n\n\"Stop that,\" she said, and tried not to smile. It took a long time and eventually she failed, ending up grinning sheepishly. \"Look man, every fucking time you smile it makes me happy and I'm trying to be practical and keep my distance from you. So just stop being all Mr. Adorable, okay?\"\n\nI looked at her and her blue eyes stayed fixed on mine. We didn't say anything for a long time and eventually I recognized what Alexis already seemed to know. We didn't need to say anything. We could just shut up and savor each other.\n\n\"Okay,\" I finally said. \n\nShe nodded.\n\n\"Okay,\" she said. \"Good.\"\n\nI kissed her once, just briefly and forced myself to stop. I pulled away from her and walked to the door for the second time.\n\nI was almost out the door when she called out to me.\n\n\"Oh Mr. Hall,\" she said.\n\nI peeked my head back around the door.\n\n\"Yes?\"\n\n\"After looking at your grade,\" she made a few quick marks on a yellow slip of paper and then walked to the door, handing it to me. \"I think you may need to get a tutor.\"\n\nThe paper had a phone number on it.\n\nI started laughing. I couldn't help it. She was hilarious.\n\n\"I'll think about it,\" I said. \"Good afternoon, Miss Haley.\"\n\n\"Good afternoon, Mr. Hall.\"\n\nAnd, with my beautiful professor's phone number in hand and a song in my heart, I walked out the door of the psychology department.\n\nSon of a bitch, I thought and laughed again.\n\nMaybe I was shy. Maybe I didn't know how to win an argument. Hell, maybe I didn't even believe in evolution. But I knew one thing on that blistering Ohio afternoon in September. \n\nFucking really is better than fighting."
    ],
    "authorname": "AmberLion",
    "tags": [
        "professor",
        "student",
        "anal",
        "college",
        "harassment",
        "cunnilingus",
        "blonde",
        "white",
        "coed",
        "teacher"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-class-in-psychology"
}