{
    "title": "Beautician and the Beast Pt. 02",
    "pages": [
        "Chapter Six\n\nThe next morning, Quentin woke to the hiss and vibrations of his phone on the nightstand closer to Lovie. The ringing became increasingly annoying to him, and then the memories from the night before flooded him. He grabbed his phone over her and didn't stop to think that he may have disturbed her sleep, which he did. She groggily moaned and he paused with a twinge of guilt then jumped from the bed and answered gruffly, \"Hello?\" He purposely had his back to her as she stirred upright. His accountant's words filled his brain for a delay of processing because he still couldn't believe he slipped the way he did. Letting her sleep over? What was he thinking? He could feel her eyes as they burned holes in the back of his head. The mere mention of his brother made him perk up, \"What Larry?\"\n\n\"Quentin have you heard a thing I've said? You're brother, Guy has been sniffing around the estate in Connecticut. The P.I. said the neighbors saw him and thought it was you.\" Quentin rose to his feet and walked out of the room with not one look at Lovie. Lovie hoped the phone call wasn't an emergency; she didn't want anything conflicting with the progress they've made. She smiled to herself as she jumped in the shower without a clue of his newfound doubts.\n\nShe was in full swing of Marc Bolan's \"Hot Love\" when she cut the water and heard more of Quentin as he yelled from all the way downstairs. \"Larry I don't give a fuck how you find him! ...I know you're not my lawyer! .... I purposely didn't take his name off that property so he would show his face! ...Fucking handle it!\" Lovie gravitated to the top of the staircase to listen down to him scream. He suddenly threw the phone on a nearby chair that indicated that the conversation was over. He wore only flannel pajama pants that were slung low on his tone hips. He slumped down to his sofa he'd been pacing in front of the whole time. He buried his head in his hands; he knew he shouldn't be worried with his stubborn scheming brother, that's why he paid people to do that. He had bigger issues like the brown lovely that lingered at the top of the stairs. With a huff he called up, \"Don't you have anything better to do than to listen in on personal phone calls?\" Lovie jumped from being caught and from the sting of the remark. He refused to look up at her as he said this and she understood all too well what happened. Now he was scared. Anger stung her eyes as she skipped down the stairs and directly to the door. He called, \"Where do you think you're going?\"   \n\nWith a coolness that frightened them both she said, \"I've got supplies to get.\" She gave him the same courtesy he gave her in that she didn't turn to look at him, she's too afraid she'd break down in front of him.\n\nHis jaw tightened as he ground his teeth and looked at her back, \"Go talk to Haviland...there's an expense card for the business. And go to AT&amp;T and pick out a company phone.\" She turned slightly so he could make out her profile and her lip trembled before she nodded. A big whoosh of breath blew from his diaphragm when she left. He instantly regretted the way he treated her. When Lovie got downstairs, Havi noticed something wrong when she gave her the card and it's info but couldn't ask her because Lovie was out the door so fast.\n\nHavi just slinked into her seat with a worried look for her new friend as she left. Almost like a choreographed move, the elevator rung and Quentin barreled out of the doors with panic on his face, no shirt and still in his pj pants. Havi smirked on the inside from how shaken Lovie had her boss. He turned to Havi who now smiled full on at him. He opened his mouth to ask her if Lovie's been by but he thought against it and closed his lips. Havi just went to the keyboard and typed with concentration on the screen, \"She just left boss man.\" He nodded and he turned back to the glass. He hoped to catch a glimpse of her, \"...And she looked like something was bothering her.\" He looked back at his employee as she still typed but now her gaze was toward him with a raise in her brow.\n\n\"Ah...Havi, let me know when Lovie gets back.\" He said as he went back to the elevator and pushed the button to go up.\n\n\"What if she doesn't want you to know?\" Havi asked innocently. Quentin just locked her with a glare before the doors closed him up and he disappeared.\n\n*~*~\n\n\"You keep frowning like that and you'll look like Aunt Honey after her fifth husband.\" Lovie looked up from her drink in front of the same bistro from the day before, this time on the lanai. A woman who closely resembled herself stood over her with a broad smile. Lovie reciprocated and stood to embrace her sister. Several men nearby nearly stumbled over each other as they sat down which in turn made them laugh, \"Gotta love an entrance like that!\" Estelle picked up her sisters new iPhone and nodded with appreciation, \"About time you got a cell!\" She picked up her sister's water for a sip and grabbed the menu. Sometimes Stelle and Lovie were as different as night and day and it's those differences that they clung onto the most in a family that had more than one multiple births. Lovie was inherently shy unless pushed while Estelle was nothing if not a mouthpiece of her opinions 24/7. She didn't keep anything inside and for that Lovie went to her to find her voice whenever she had a problem. They ate while Lovie relayed everything that happened since the last time they talked. Estelle listened the whole time with no utterance of shock or disapproval until they walked around in Sephora.\n\n\"Am I overreacting?\" Lovie said with a huff and a pleading look. Estelle was testing perfume and held her wrist out for her sister to smell. Lovie took a whiff and turned her nose up.\n\n\"Yeah too musky...\" Estelle mumbled before she sprayed another on the other wrist, \"What about...\"\n\n\"Stelly!\" Lovie was all but having a tantrum at this point as she whined.\n\n\"Alright, alright...no, you're not overreacting. You're foundation is just settling.\" Estelle moved on to the Carol's Daughter section with Lovie close in toe.\n\n\"You wanna shed a little more light on that sis?\"\n\nWith a frustrated sigh Estelle turned to her sister, \"Every relationship has its moments of working kinks out. And with the very...delicate and unique nature of your situation...\" She paused to chuckle and Lovie's eyes narrowed at her as she continued, \"I'm sorry, it just seems like you guys have been moving at a really accelerated pace so...you said he was scared right?\"\n\n\"I don't know that for sure it's just a hunch.\"\n\n\"Honey, most of the time that's all you need to unlock the complexities of man...or lack there of.\"\n\nThey began to laugh as Lovie put another item in her basket and stopped, \"But how should I act now? It'll be weird.\"\n\n\"You have to talk to him about it.\"\n\n\"I don't think I can be the one to initiate it.\"\n\n\"Well put it like this...if he doesn't bring it up and starts kissing on you, how are you gonna feel?\"\n\n\"Pissed!\" Lovie spat louder than she wanted to and other shoppers looked over at her.\n\n\"Exactly! So you better be the one to initiate it if he doesn't. If he is serious about everything he says he'll see the problem and want to rectify the situation.\" Estelle waited for Lovie's expression to lighten a bit before she gave her shoulders a squeeze then she moved to another aisle, \"Now let's talk about my wallet and how I shouldn't get anything.\"\n\nLovie laughed, \"You shouldn't buy anything but you should probably be saving that talk for the next store.\" Estelle stopped and looked at her sister with a look that said, \"continue\". \"We're going to the M.A.C. store after this.\" Lovie laughed harder as Estelle mimicked almost passing out.\n\n*~*~\n\nLovie moved past the doors with several bags hung on her arms. A cheery blonde with smoky eye makeup and a nose ring asked if she needed help and she politely declined as she moved to the elevator. She went up to her floor and thanked god that she's so lucky for having the family she has in all their support despite everything that's happened with her and her choices. She's even more thankful that her sister was there and even though she felt more comfortable with Cassie she knew that the \"real talk\" sense that her sister took was what she needed while Cassie would be more of a ear for her to unload on. When she's on her floor she saw Drew by his computer being anti-social as always and spotted Havi and Stelle by the vanity talking intimately to one another. Stelle twirled Havi's lock of hair and they didn't notice Lovie when she came up on them as she shook her head, \"Hey you two, wanna quit with the kissy face and help here?\" They both jumped to her side to help with her bags. They all didn't notice Quentin when he slipped in from the elevator. He originally came to see the pictures from the day before but decided to listen in on the girls as they talked. He told Drew to take an early lunch and snuck over to the other side of the makeup area, hidden from sight. He couldn't believe he was even doing this but if he knew anything about women he knew it didn't take them long to start talking about men and what they did wrong. He just wanted to know if he's in the doghouse and if he needed to bring a blanket.\n\n\"Are you alright darlin'? How ya feelin'?\" The southern drawl of Havi's was more prominent when she played the mama role. Stelle and Lovie took things out of bags and handed them to Havi to arrange.\n\nLovie smiled up to her, \"Better than earlier.\" She said exasperatedly. She laughed genuinely to let them know she really was okay. \"I talked with my sister and it made a world of difference.\" They decided to leave it at that and talked casually for a few more minutes. Quentin shrugged; relieved to know that she didn't take anything he did personally. He was about to come out and make up a story about how he was in the back prop room but stilled when he heard Stelle.\n\n\"I think to seal our newfound friendship with Queen Lovie here, we need to go out! What do you think baby?\"\n\n\"Well most definitely, what's tonight? I think it's swirl night at Off The Couth.\" Havi chimed in and Stelle jumped up and down and clapped with excitement.\n\n\"Off The Couth? What's that?\"\n\n\"It's a scene bar...everyone in the biz and the lifestyle goes. Tonight we can bring curious vanillas,\" Stelle beamed. Lovie started to interject that she wasn't vanilla but Stelle stopped her, \"You've been in the lifestyle all of what... two days?\" Lovie's brow furrows, \"Hon this is just so you can get an inside peek of what you're getting yourself into.\"\n\nLovie started shaking her head with apprehension 'Little too late fore that', but Havi jumped in, \"Stelle yer scarin' her!\"\n\n\"I didn't mean to alarm. It's not as bad as it sounds; I just want to prepare you for some things you may see.\"\n\n\"Like what?\" Lovie was very intrigued at this point.\n\n\"Ah, so you'll go?\" Havi purred with a smile. Lovie just looked bashfully away but turned to Stelle so she could finish her answer.\n\n\"People playing out scenes, actual collared people being lead by their masters, bondage exhibits.\"\n\nHavi lit a cigarette before she finished, \"I know tha owner, and tha club is more of a haven for people into tha art of the lifestyle than actually gettin' their rocks off darlin'.\"\n\n\"D-Does Quen-\"\n\n\"He has once or twice. He said it was nice but it's really not his scene.\" Havi exhaled. Quentin nodded; he would never of taken Lovie to a place like that, no offense. He just wanted her training to be untarnished by any outside 'help'.\n\n\"Lovie we don't have to go to that club, we just have an unlimited tab because of Havi's hook up is all.\" Stelle said as she read her apprehension.\n\nLovie thought a moment and everyone in the room, Quentin included, held their breaths for her answer. She's very curious but if Quentin didn't go she wondered if it's a good idea that she went. \"I'll think about it...how much time do I have?\"\n\n\"Well we start getting ready about six then have a late dinner so we'll say 5:30?\" Stelle said as they moved towards the elevator doors, Lovie nodded as she checked the time. It's already 3:20 so that gave her time to talk with Quentin. \"We're gonna go down to relieve the receptionist, call us?\" Lovie nodded once more with a smile. They disappeared and she's left with her thoughts. Quentin had until 5:30 to convince her that she belonged in his arms and not eyeballed by \"art enthusiasts\". He smirked as he moved from his hiding spot. He walked up behind as she finished the arrangements of the supplies. He had a better view of her attire and approved generously as he licked his chops. She wore a pleated cap sleeved dress in a medium toned navy color with a black belt and a small back keyhole. It hit just above the knees that showed off her muscular calves. He felt foolish that he admired such a part of her body but the more he watched her the more every molecule was adorable, beautiful, or perfection in his eyes. He scanned up to her heart shaped behind and inwardly groaned. Her long hair was in an upsweep with clean parts that gave an overall professional appearance but with sex appeal. His eyes end on the back of her delicate neck and revealed another tattoo he'd never noticed. It's a patch of petals swirled in a whirlwind from a single flower.\n\nHis desire got the best of him and his only thought was to trace a finger over the markings. He did just that and instead of greeting him with a jump and a scream, she melted more into his touch after a slight arrest in her stance. Lovie already knew who it was because she felt him when he came near. Just as she was about to bow her head to his submission her sister's advice shook her like a douse of cold water and she straightened then continued with her task as if she was unfazed. He moved his hand like it burned yet he watched her coolly. \"You're still mad,\" he muttered with a light chuckle. That only pissed her off more as it set in that he had no intention of speaking about earlier nevertheless an apology.\n\n\"No it's not that...I-I just have plans tonight with the girls so we shouldn't get anything started.\"\n\nHis mouth tightened while he slowly turned her to face him. The vanity lights from the booth made globe like flares in her light eyes sparkle at him with everything she didn't say directly: passion, anger, desire, indifference. \"Cancel them.\" He softly said as he lifted her chin more towards his mouth. She didn't break away but when he pressed his lips to hers there was no return pressure and he could tell that she was serious. He leaned back but didn't break eye contact the whole time. \"No?\" She simply shook her head \"no\" then moved away from him. It stunned him a bit. He couldn't believe she turned him down but he guessed that's what he got when he underestimated the female species. Once a sufficient amount of distance was between them she turned to lean on a nearby chair and crossed her arms for more effect of gumption. She was gorgeous when she looked like she's about to curse him out.\n\n\"I already promised,\" she fidgeted a bit but tried to keep it copasetic. He smirked as if he had her in the palm of his hand but the curiosity as to why she chose to lie to him made him want to play. Maybe after they had dinner he'd bring it up and get to punish her again. Quentin walked over and defied her to resist him after this; he took her in his arms and smothered her with a deep fiery kiss. She moaned and he groaned which was the only recourse for them both to know that they were weak for each other. Her tongue took over his dominating one; it licked the roof of his mouth then massaged every ripple. They both pulled back with lazy eye lids, which slowly drifted open and revealed their prizes. He smiled down into her flushed face and rubbed the back of her neck. He waited for her to say something like \"I'll get my things\" but instead she reciprocated the smile all the while never made one attempt to look down. \"If I don't get in too late...I'll call you.\" With a deep swallow she moved away from him and over to the entrance. The last look she saw on his face was priceless: mouth and eyes wide open and a white tint left to his complexion. Once the doors closed she smirked like he did before he kissed her.\n\n~*~*\n\n\"You what?\" Havi and Stelle jumped from Lovie's sofa where they threw kernels of popcorn in each other's mouths. They listened to Lovie's story and she'd gotten to the part of how shocked Quentin was when she turned him down for the night. Their reactions confused her and she stopped putting on makeup long enough to look over at them.\n\n\"I left him there picking up his jaw.\" She said as she picked up a brush and continued with her makeup. They walked over to Lovie at her makeshift vanity. She stopped again as they took a spot on either side of her. \"What's the big deal?\"\n\n\"Darlin', the big deal is that once you've entered this lifestyle you gotta learn that there's a certain way of actin'...even if you're not full time.\" Havi began before she lit a cigarette.\n\n\"What do you mean?\"\n\n\"She means that just because you guys weren't in a scene doesn't mean he won't take it out on you once you're back in. Your master, top, or dominant of any sort wants to know that you're thinking of them and ways of pleasuring them even if you're not with them.\" Stelle continued and took the cigarette from Havi and puffed. \"And sometimes they want to test your emotional ties to them and that's what seems like what he tried to do.\"\n\n\"So I should have stayed with him?\"\n\n\"Not necessarily, it all depends on when you're next punishment is, and if he chooses to bring this infraction back up.\"\n\n\"Infraction!\" Lovie squealed incredulously. \"You guys make all this sound so medieval.\"\n\nStelle chuckled, \"Not in so many words but if you want a piece of this life you have to be able to understand more complexities of your master and the primal sophistication that comes with our ways.\" Lovie started to understand all too well the complex way of the opposite sex. Her sister spoke of it earlier and now her friends. She saw how they are both on different spectrums but said basically the same thing with subtle differences. It was up to her to find a happy medium for herself.\n\nHavi ashed the cigarette then handed it back to Stelle. She saw Lovie deep in thought now and tried to lighten the mood, \"Oh honey, were not tryin' to spook you. We know Quentin well enough to know that you're not in any type of danger. Just don't think that all this is just swept under the rug. He's like a little puppy, he knows he's done wrong but he thinks his kisses and slobbers will make up for it when all you want is for him to acknowledge it. Believe me darlin', you got him all bugaboo! Right after you left earlier this morning he came down shirtless and frantic lookin' for you.\" Lovie's eyes perked up and Havi nodded with a smile, \"You guys will iron this out. Me and Stelle just didn't want you thinking that it's resolved in such.... vanilla manners.\" They laughed as they finished getting ready for their night. When no one looked though, Lovie tried to call Quentin but there was no answer. She left a brief message but was rushed off once the girls were ready to leave the apartment.\n\n*~*~\n\nQuentin told himself that he's having his business dinner changed to the Japanese steakhouse across the way from Off The Couth because they had the best Kobe in town but deep down he knew better. The dinner was going well, an hour in and he checked his watch and then the window with no sign of them. He sighed with some relief though, as he thought they might have had a girl's night in or something. He started to feel more triumph as he felt his phone vibrate on his thigh. He casually checked it to see Lovie's number flash then after it stopped a voicemail. He went right back into the conversation with his associate but with more vigor and attention at hand. The night continued and the business engagement showed to go in his favor; they soon shook hands outside the restaurant and Quentin saw them to a cab. Just as he waved them off he caught a glimpse of three slender figures that bobbed down the walkway across the street from him. He moved over to the shadows so he couldn't be seen once he recognized them. They're linked arm and arm as they laughed towards the entrance. Quentin's heart sank; their movements seemed to slow down in his mind. Lovie looked, no pun intended, virginal in a lethal mini dress of nude satin and lace. Her hair softly blew around her in tousled waves across her face. She looked more and more like Aphrodite every time he saw her. Havi was in a mini skirt and sheer dark blouse with the boots that her and Stelle share. Stelle was in a pink tube top with a silk pencil skirt and strappy heels. Before they went in, Lovie looked apprehensive about going in and she checked her phone one more time before she headed in. He'd almost forgotten totally that she tried to call earlier. As he moved across the street to go to the club, he fumbled with his phone. A car almost hit him before the honk scared him shitless and he hurried on his way. Her voice calmed his heart to regular beats as she stammered into his ear, \"Hey Quentin, I-I-I just wanted to talk to you before I left....\" There's a small pause and she cleared her throat then continued, \"I want to talk about this morning but...o-oh I gotta go. I'll talk to you tomorrow.\" The last two sentences came out hurried and he could tell if it was because Havi and Stelle came into the room. He cursed under his breath as he looked up to the neon sign of the club. He looked at the marquee and groaned then nodded at the bouncer who promptly let him in.",
        "Chapter Seven\n\nWhen Lovie first walked in she was in shock to see how stylish the environment was comparatively to what she pictured in her head. Instead, it was dark neutral colors on the walls with metal pillars that protruded from them, and in between the structures are pillow-topped benches with tons of silk throw pillows strewn over them. The lighting was intimate so she couldn't make out a lot of the figures on the benches but she could tell they're there. There are interrogation lights over the few tables that held couples. One woman had a collar on her gentleman caller and he sat at her feet as she spoke with someone else whom sat at the table. Havi read her mind and leaned in to say, \"Expectin' women in cages and strung up along the walls with a shirtless man in a gimp mask?\"\n\n\"Well...Kinda\" Lovie giggled nervously as they moved in deeper.\n\n\"Oh honey...that's all in the back.\" Havi waved at familiar faces while Stelle was already through a door that left her to believe it lead to where all the sexy stuff was happening...or maybe the bathroom, who could tell? Unlike dinner with Quentin, Lovie was very aware of the eyes on her and she wrapped one arm across her body to link with her elbow of her other arm. Men and women leered and she swore she heard a \"meow\" from one of the dimly lit benches. Havi noticed finally and shooed Lovie ahead of her and through the door that Stelle entered earlier. It lead to a padded room and at the end of the hall was another door. The closer they got a rhythmic thump got louder. Lovie loved to dance and from the first appearances of the place it didn't look like she was going to get that itch scratched but as they reached the door Lovie grinned to her all knowing friend who said, \"That was the Art gallery. The club is in the rear.\" With that she opened the door and more of her expectations revived as neon blue and pink lights splashed across cold brick walls and roman torsos and busts are on pedestals with various masks and chest pieces on them. They walked through a velvet-curtained archway to see more couples of different sexual orientations that kissed, hugged, and fondled each other. Lovie couldn't help but stare all around unabashedly just as they did her. It's wasn't until one walked right behind her and touched her hair that she jumped, right into Havi's side. Havi startled and looked to what made Lovie uneasy. She narrowed her eyes at the culprit, \"Leonard you know better than that.\" She yelled over the music.\n\nLeonard looked apologetic to Havi after she spoke but before, his eyes were glued to Lovie's frame. \"I'm sorry Havi. Your new one?\"\n\n\"No Leonard. She's-\"\n\n\"Vanilla?\" Leonard said with way too much excitement as he came closer. Lovie shrunk slightly; there was something about this character that didn't set well with her. He was clean-shaven bald, three inches shorter than her at least, glittered of gold from his neck, wrist, and pinkies. He tied it all in with leather pants with no shirt. He looked like he stepped out of some bondage magazine circa '92, otherwise extra sleazy.\n\n\"You wish. Quentin is training her.\" Havi spotted Stelle at the end of the club as she motioned them over to a private booth. \"Excuse us we're needed...somewhere else.\" She took Lovie's hand and led her through the crowd over to Stelle. She already got drinks and they took them thankfully. Havi leaned into Stelle, \"Leonard's on the prowl. He caught wind of this one and doesn't look like he's letting up.\" She pointed from Lovie to over her shoulder at Leonard who leaned against the wall and watched them. Stelle just gave him the finger and Lovie looked over her shoulder to see what they talked about.\n\n\"Who is that?\"\n\n\"It's just some piece of shit ex-pimp...so he claims.\" Stelle sneered.\n\n\"He had that air about him.\" Lovie nodded with bemusement.\n\n\"Right now he's a threat so don't talk to him.\" Havi said.\n\n\"Why is he a threat?\" Lovie eyed him again and she's pretty sure she could take him, easily.\n\n\"Well he has this thing about Quentin. He's always trying to turn his subs from him. Even tries to threaten them I've heard.\"\n\nLovie's eyes grew wide, \"What?\"\n\n\"Calm down. Quentin set him straight a long time ago but he still likes to taunt from time to time. Plus I'm sure Quentin will keep a close eye on you.\" With that Lovie took her straw out of her drink and started to swallow in large sips. She's wondered how she got herself in these situations once more.\n\nIn a huff she stood, \"Fuck it, I want to dance. Anyone want to come?\" Her drink started to do what it needed to and she was ready to relax and forget about how shitty her day had been. They all end on the dance floor and almost immediately Lovie was forgotten as Havi and Stelle grind into one another to the beat. She decided to get another drink to be a little looser and not feel too self-conscious. By the middle of the third drink she had a really good buzz. The house music allowed her body to be more languid and she looked ethereal, being the one of the only people in white. Mostly all the bystanders not caught up in their own thing at least caught glimpses of her moves and they all wanted her or wanted what she had.\n\n*~*~\n\nQuentin was in the V.I.P. room with a two-way mirror and watched everything that transpired since Lovie sat at the booth. The more she danced the angrier he got. He didn't know if it was at her, at the situation, or him but he was angry nonetheless. Something twinkled out of the corner of his eyes and he followed it to Leonard's gaudy ring. He noticed him when he came in but he didn't see Quentin because he stared at something. He saw Leonard as he made his way to Lovie and the girls and he could take three guesses as to whom Leonard was staring at when Quentin entered. He decided to make his way down there. He didn't plan to blow his cover but with Leonard in the equation, it never ended well. As he made his way through the crowd, as he expected Leonard pulled on Lovie and she tumbled back into his short stature. She was in a daze but Havi was quickly by her side and pulled her from Leonard's arm. He pushed on her and Lovie stumbled more, now Stelle was on it and she helped Lovie away from him while Havi bent down. Quentin paused and slunk back into the shadows with his all-knowing smirk on his lips. The issue of the boots came up once before with him back when Havi would moonlight as a player for the site. She wore them for a scene for him and as she got flogged, the small heel tip came off and she nearly broke her arm from the ropes as she stumbled down. Quentin examined them closer and found the steel spikes at the end. When he asked her about them she only replied with, \"A girl's virtue needs protectin'.\" Nothing more was said but now he thought he's about to get a first hand look at how passionate Havi was about protecting virtues. Leonard turned back to Havi, who straightened herself up once more. He pulled back as if he's about to hit her and before he could fully cock his arm, she stomped down and the motion was felt across the room to Quentin. He could only imagine the pain ole Leo went through right then. He still couldn't help but smile more as he saw the girls safely stumble out and a small crowd of people shrouded Leonard who crumpled on the floor. He staggered behind them and watched them gang into a cab and he made a dash for his car. He wanted to make it to Lovie's apartment before them, and the way he drove he's sure he could. In his car he decided to have a little fun with Ms. Independence. He thumbed through his phone until he spotted Lovie's number.\n\nShe picked up on the second ring and a hiccup, \"Um...Hello.\"\n\n\"Hey, I'm sorry I missed your call. I was in a business dinner and couldn't get to my phone.\"\n\n\"O-oh that's fine I just wanted\" Hiccup, \" 'cuse me, I wanted to talk about...\"\n\n\"This morning.\" He smiled.\n\n\"Yes but...\"\n\n\"And that's why I'm on my way to your place right now.\" She began to sputter her refusals but he continued to talk over her as she explained that she's fine and didn't need to talk about it anymore. He knew all to well that she's gotten a taste of the life that wasn't so glamorous and knew how good she had it with him. He'll be glad to rock her back into comfort. \"Are you at home?\" He finished.\n\n\"No, I'm...close\"\n\n\"You girls have a good night?\"\n\nWith an uneasy laugh she answered, \"Eventful.\"\n\n\"Mmm-hmm.\" He simply answered. That isn't exactly what he wanted to hear. He wanted to hear tears and trembling in her voice. He wanted her to need him. Instead she tried to keep him away and she laughed. Fuck all that noise, \"I'll be there in about five minutes.\" She went to speak again but he hung up and put just a tad more pressure on the gas.\n\n*~*~\n\nBy the time the cab pulled up, Quentin sat on her stoop with a blank expression on his face. He got down to the curb as the door opened and Lovie staggered into his arms. Havi stuck her head out with an apologetic look in her eyes, \"Be easy on her boss man.\"\n\nHavi was a dominant herself and she knew that he knew what she meant but he only answered back with a stern stare and, \"Night ladies.\" The comment was out of earshot of the others but she still slunk back in as if she'd just been scolded in front of everyone.\n\nLovie hiccupped and waved to the cab as it drove off then her hand slowly lowered down as Quentin turned back to her wobbly state. She hiccupped again as she stiffened her chin in his direction. \"You came to...\" hiccup. \" talk?\" Her hand on her hip served more of an anchor than an act of rebellion.\n\n\"Yeah, about this morning. Let's get inside huh?\" She nodded and made her way up the stoop. Once in her apartment, she tried to flip a switch and nothing happened. She slurred a curse and explained that it happened a lot in the building as she stumbled in the dark. With the flick of a lighter, a traced outline of her glowed around the room to light candles. In her trail the walls danced with a more pronounced silhouette of her with each light.\n\nAt the end she's back at the sofa where he sat at the opposite end. She positioned her back up right and her legs crossed at her ankles as she looked away from him. \"How was your dinner?\"\n\n\"Good.\" He glided across the couch but still left a good amount of room between them. When her head whirled to him she was met with the scent of the night air lingering with his cologne. \"'Bout this morning baby,\" Her focus on his hand as it traced indescribable shapes into her kneecap, shin, and calf that made its way to his lap. \"I was such an asshole. You didn't deserve me snapping at you like that.\" As he talked his hands searched up her thigh. The moisture at her opening generated a heat that his fingertips could almost feel.\n\n\"I thought you were mad at me.\" She said in an unconscious voice.\n\n\"Mad? No, not that.\" His eyes stayed on hers as she started to shake her head yes.\n\nHe went right to his questions as he took off his sports coat and loosened his tie, \"Where did you girls end up settling on?\"\n\n\"Um...one of Havi and Stelle's places...I'm not sure...of the name\" he went at the neck of his shirt and pulled at the buttons. Her juices flowed as the candlelight swayed across his broad chest. His dark locks lay across his forehead and drew attention to his fierce hunter green flecks buried under blue that hadn't blinked since he'd seen her. The intense stare made her unable to look him in the eyes. Now shirtless, he's almost unbearable to sit by. Her reaction to him also took a physical toll on him. Her nipples strained against her dress and his erection tightened against his pants so he unlatched the belt and unbuttoned to ease the strain. The lick of her lips caught a glimmer of light and for a second he imagined a drop of his come had lain across them and his cock twitched in his boxers.\n\n\"Was it...Off the Couth by any chance?\" He stood her up and unzipped her dress to have it pool at her feet. Her first instinct was to cover herself and he frowned. She shook as her hands slid down by her sides. Even though they weren't in a scene she still felt like she was under his spell. He had a way of getting his way even when they weren't training and she took notice. He had a look that challenged her and that's why she never backed down. She wore matching lavender mesh lace Rio bikini and triangle bra. He turned her around so the swell of her ass sat right in his face. He bit the corner of his lip as his eyes traveled up the length of his her spine. He undid the bra and she allowed it to fall to the floor with her dress. Her arms gathered her ample bosom with no concern to what he thought. \"Meet any interesting people?\" He stood and moved close till she felt his dick pressed at her ass. Lovie went speechless with yearning. The alcohol took its toll; made her heat up to a fiery temperature and a lightheaded stance.\n\n\"I...I j-just had some drinks and I danced. I wasn't looking for anything else.\" The first part came out shaky and unsure but the last part, she faced him and stared in his eyes. He decided to accept her unspoken truce to him but he had to make sure.\n\nHe roughly grabbed her wrists then softened his hold once she winced, \"Don't go back there.\" His monotone voice only made the weight of his words heavier. She slowly nodded in agreement, and he moved her arms back to his side. His brow relaxed then his eyes moved to her chest as it slowly heaved. His hands followed with his fingertips, ready to explore the protruded peaks. His tips on the left breast painted over the nipple. He noticed that her breaths then came out in short pants. He went to her like magnets and they fell back on her sofa and she immediately straddled him. His hands found her hips and ass in rough strokes and she reeked of alcohol but mingled with her scent of sweet vanilla toffee made him drunk. His palm smoothed the delicate skin from the back of her right thigh up to the full cheek of her ass. He squeezed so hard it got a moan from them both. The tip of his middle finger was dangerously close to the crotch of her underwear and they both paused for a moment as soon as the tip met the edge of lace. They looked at one another with a longing glance before she moved in for a powerful kiss. It was her way of telling him that she is ready. Ready to have him make love to her. He took the hint and pushed his hand in to lava-like wetness. To seal the deal she dug her hips into his strained erection. His other hand went roughly to her hair then as her rhythm began to take a proper pace; a strange feeling took over. Wait...no...it couldn't be. His scrotum tingled and warned of what was coming up soon. Not since high school had he not been able to control his climax. Right before he knew he couldn't turn back, he tugged at the nape of her neck so that she looked at him with a dazed look. Her hips halted and as his stare went glassy she immediately took recognition. That glass was about to turn to steel and that pissed her off. She could understand if they played a scene so he could have his silly rules but this wasn't that time. It's them, Olivia and Quentin, not Lovely and Sir. Her jaw tightened and she jerked from his warm lap then his hard on deflated.\n\nHe opened his mouth to explain but she stopped him with a wave of her hand, \"I'll see you tomorrow at work.\" With that she stood and tried to cover her copious mounds from his view. He felt like an idiot as she snatched her garments from the ground and started to blow out the candles. He couldn't even look at her as she moved around the room; he just slowly pulled on his discarded clothing. Once he moved to the door, she's back in that French lavender kimono robe again with a pissed off look.\n\n\"Lovie I...\" He stopped once her silver eyes gleamed toward him and narrowed like a cat on its prey. She yanked her door open and waited as he left. The door didn't slam; it's more of a depressed slow click. In his car, he watched her in her window from across the street. At that point, her lights worked and he waited as she came into view in her bedroom. There's an invisible force that wouldn't allow him to move until he could get one more glimpse. Like divine right, Lovie came to light and better yet, she wasn't wearing the robe. He made out her frontal image perfectly with the mirror but he also got a delicious view of the top of her full bottom from behind. Instinctively, his hand massaged his strained hard on as her hands drifted up to her breasts. His eyes went heavy when she tweaked her nipples and leaned her head back. Her eyes were closed, mouth parted slightly and he smiled, as he knew she thought of him. He could almost hear her whimpered moans. Her left hand dripped down her ribcage while the right lingered on her breasts. \"That's it.\" He whispered. His subconscious scolded his perverted transgression but his physical self began to unzip his pants. Lovie admired her reflection once more. Her hand soon moved down further and he made out the motion of her forearm moving up and down slightly. The other one feverishly roved her tits. His hand shamelessly tugged at the rod that protruded from his pants. He reflected her motions as if they were together. He imagined their naked bodies on a bed tangled and grinding against the candles from before. The shadows danced across the wall in an effort to catch up to their counterparts. His head slumped back on the headrest as she panted heavily up above. His breaths came shallower as she began to show the signs of orgasm. One hand on her left nipple and the other on her clit, no doubt, and he thought of him finally pumping into that body the way he wanted, not the first time but the second or third time; just too make sure she's used to the size made him seize his hips up in anticipation. He quirked his top lip as the tingle came back. The blissful ache only lasted for a few seconds before he released his load over the stirring wheel. He panted lightly, his vision blurred when he finally opened his eyes and caught a glimpse of her wrapping a sheet around herself. When the light went out he took one last look as he revved his engine. \"Sweet dreams little one.\" He drove off and momentarily another set of headlights illuminated the streets path. Instead following Quentin it went in another direction.\n\n*~*\n\nLovie's alarm clock felt like tiny chainsaws dancing in her head. She peeped past her pillow and whipped out of bed when she realized she'd hit snooze for an hour. By the time she whirled through the entrance of the company she was an hour and a half late. Havi got off the phone with a not so welcome look on her face, \"Stelle just called down and said Drew is livid.\" Lovie barely missed the door for the elevator.\n\nWhen she opened the door, there's no music, just clicking and flashing. Stelle looked over to the elevator and her brow went in a bit before paying attention to the lens once again. Her attempt to not let Drew see failed and he instantly turned behind him. He looked extremely pissed then glared at Lovie and said, \"Go get a soda or something Stelle.\"\n\n\"Uh...I'm not thirsty.\"\n\n\"Well go get 'something' then Stelle.\" He slowly turned his gaze to her. She rolled her eyes and stepped from the platform, then looked to Lovie with an apologetic look. Once she was out of earshot, the fire in Drew's eyes radiated in Lovie's direction. \"Your first official day and you can't get it together. What a surprise...should have known this would happen from your kind.\"\n\n\"What did you say?\" Lovie prepared herself for anything Drew threw out but she never stood for racism and/or discrimination from anyone no matter what their natural disposition should be. Her eyes narrowed but Drew didn't budge, in fact his chest poked out more.\n\n\"You heard me, 'your kind'. You know just because Quentin is balling you, doesn't mean that this isn't a business. We have commitments and schedules to keep. You're on my time not CP. Now we can keep this between us because this will make us both look bad. Let's see if you're as good as Quentin thinks and salvage the rest of this shoot.\" He walked off and left her dumbfounded. \"Don't just stand there! Go talk to Stelle about the next shots.\"",
        "Lovie threw her stuff down and stormed over to the station Stelle sat at as she touched up her makeup. Lovie fumed so hard she panted. She didn't know what to do. \"Hey girl. You okay?\"\n\n\"No! That fuck is a racist cock snot that needed to be thrown away in a Kleenex!\"\n\n\"Damn! He's must of really pissed you off.\"\n\n\"Ya think!\"\n\n\"Hey I'm sorry! I know what he drives; we'll get him back! Trust!\" Lovie took two deep breaths before she nodded. The only way to beat someone like that was at their own game. She asked Stelle about the next shots and they sound tired and dumb.\n\n\"That sounds pretty....\" Lovie tried to find the right word\n\n\"Shitty...it's crap-ola at it's finest!\" Stelle laughed and Lovie finally cracked a smile.\n\nJust then, an idea popped in her head, \"Hey, you have some time after this is done? I got some ideas and I want to crank them out really quick before I forget.\" Stelle nodded and Lovie got ready for Drew's next shoot. The rest of the time, he rudely thrust equipment at her or snapped when she wasn't quick with something he needed. By the time he's finished she'd taken just about all she could and swore that if he said one more thing to her she'd squirt brush cleaner in his eyes. Thankfully, for Drew, he cleared out and left them to clean up everything. It took no time to set up for Lovie's shots and without the negative tension in the room; quickly fired them off with an extra camera lying around.\n\nStelle had just finished changing into her regular clothes when she heard the hiss of the intercom. Lovie still packed away equipment and took the memory cards out to load later. \"Yeeesss?\"\n\nQuentin's voice filled the room, \"I saw Drew leaving like an hour ago. You two still up there cleaning?\"\n\n\"Yes and no. We stayed behind to do some more shots.\"\n\n\"Ah. How did it go?\"\n\n\"Which part?\"\n\n\"What's that mean? Did something happen?\"\n\nBefore Stelle could unload about the incident Lovie was at the intercom to finish, \"Everything was fine. After Drew's shoot I had some ideas for shots and wanted to get them out so I can edit tonight.\"\n\nStelle mouthed, \"What?\" and \"Why didn't you tell him?\" Lovie just waved for her on to shush.\n\nThere's a small silence before Quentin continued, \"When you guys finish up there's nothing else I'll need today so you're free. Lovie I'd like you to stop by my office first before you go.\"\n\n*~*\n\n\"Yes?\" Lovie stood in front of Quentin's desk as he sat there and examined her dress. It's a very feminine styled pale pink stretch cotton v-neck dress with spaghetti straps. He wanted to see more nipples though. Her hair was swept to one side and held together with a satin strap.\n\n\"We should talk about...\"\n\n\"Last night? No need.\" She said in such a cold tone that he's taken aback for a moment.\n\nIn silence they sized each other up with their eyes, neither wanted to be the prey to the other's hunter. \"Lovie I'm sorry.\" Quentin decided to yield...a little.\n\nFor Lovie, it isn't that simple. \"For what?\"\n\nQuentin took a deep breath and lifted from his chair, \"For once again... pulling back when we're supposed to be moving forward.\" Lovie's brow quirked in silent amazement as he continued, \"Believe it or not dear this is all new to me. I haven't had a relationship, a real one, in ages. Not to mention one that crosses over to my lifestyle as well as with someone in your condition.\" He ended up pressed at the edge of his desk.\n\nLovie narrowed her eyes at him, \"My condition?\" She snorted and folded her arms and got closer to him, \"I'm not sick Quentin. This is my virginity not a condition.\" He didn't crack a muscle in his face as she waited for him to say something. They were inches from each other and he could smell that damn smell again. It broke him down every time. She sucked her teeth in irritation, \"Are you finished?\" He lazily blinked and nodded at the same time. Now she's super pissed off and wondered if the whole situation was a mistake...once again. What a surprise!\n\nShe turned to leave in a huff but he grabbed her arm and pulled her to him, \"No you don't\" He entangled her in his arms and planted a deep kiss. He loved rattling her animal in the cage. She wanted to fight, protest, and scream 'no' but his tongue snaked circles all around her mouth. It stopped any objections as she moaned her retreat on his lips and he slowly pulled her back. \"I'm trying to say that since we're both on such new territory I want us to cut each other some slack...agreed?\" In a daze, she nodded while he released a hand that trailed up her back and ended up at the nape of her neck. Immediately her eyes lowered and she allowed him the domination that he asked for, \"Today's lesson is anticipation. Keep only your undergarments on.\" He moved over to a drawer and pulled out a blindfold and he turned back to see her in nothing but her itty-bitty thong panties. He quietly swallowed a lump in his throat and circled her to put on the blindfold, \"No bra today?\"\n\n\"I didn't have to with this dress Sir.\"\n\n\"Are you contradicting me, Lovely?\" Before she could answer a hard smack to her exposed bottom rang through the room. He smoothed his hand over the red area, \"Never contradict me sweetheart.\" She nodded but the next slap to her rear caught her breath. \"What was that?\"\n\n\"Y-yes Sir.\"\n\n\"Good Lovely. Now back to this bra situation.\" He bent down and picked up the dress then inspected it. He ripped the breast cups out of it and threw them over his head. She pouted a little with the knowledge of her $350 dress altered so unprofessionally \"Such a beautiful dress. Doesn't need to be muddled by such silly innovations.\" As he said this he sat at the edge of his desk and gently pulled her to him. Her back faced him and her rump nestled perfectly to rock his hard crotch. He looked up to see the beautiful vision of her blindfolded and nipples pebbled in a nearby mirror against the wall \"Can you feel me baby?\"\n\n\"Yes Sir.\" Her tone breathy, as she answered he slowly but deliberately ground his hips into her ass. His fingertips wandered up her ribcage and softly cupped the underside of her bust. She trembled and swayed gently.\n\n\"Would you like me to take him out princess?\" He nuzzled her ear with a whisper then his zipper filled the empty space. She heard the rustle of his pants and knew what was to come next. Instinctually, she moved her naked flesh to his and the graze heated them both to a boiling point. He hissed then quickly swatted her ass to put her in check.\n\nShe acted as if it hadn't fazed her, \"Sorry Sir.\" Her small voice made him smile as he leaned in to nibble her ear. She felt the heat that generated from his groin and she lost herself in it momentarily. All she wanted now was him buried to her core to make the aching stop. He knew exactly what she thought but this was apart of her lesson. A big lesson that brewed from the night before. He could tell she was ready for him, yet like telepathy she asked, \"Is this because of last night?\"\n\nHe chuckled, \"Would it matter?\" She knew better than to answer that right then while they're in scene so she answered as honestly as she could with a shrug. He chuckled more; \"I know you want me...just as much as I want you right?\" She nodded, \"But you wouldn't want me to take you here and now in some office would you?\" She hesitated again to answer and a quick intake of breath from him made her wince, as she waited for another smack, \"Answer me.\"\n\n\"It's not up to me.\" She said and he grinned because he knew that she wanted to say yes but something held her back.\n\nIn a whisper to her lobe he said, \"Is that right? You'd let me decide if I wanted to take you right here and now?\" His free hard cock rubbed unabashedly against her ass; it tickled and teased the walls of her pussy even though not one inch touched it. \"You'd love for me to edge every bit of me into your taut little body to end that gnaw in the pit of your stomach wouldn't you?\" He tugged and twirled her nipples a bit rougher to get her attention, \"Answer me.\"\n\nIn a weak and strained voice that sounded like she held back tears she whispered, \"Yes!\"\n\n\"Good Lovely...now let's go eat Olivia. I want hear all about your day.\" With that his hands moved from her body and he put his dick away from play. She quickly turned to face him for the first time in the past five minutes. Her mouth hung open as he zipped himself away. \"You should put your clothes on dear.\"\n\nShe snatched the blindfold off, \"Oh it's not gonna be that easy!\" She said in a huff then plastered herself onto him, lips first. He caught his balance and her as she pushed him back on his desk. Her hardened peaks cut into his chest and he wanted to pull her to him tighter but he snapped back and pushed her away slowly with a puzzled look. \"Don't look at me like that! You started it!\"\n\n\"And I finished it Olivia. The scene is over and lesson: anticipation is over.\" He moved from under her and silently cursed himself. Call him a big softy but he thought this girl was special and she deserved better than a desk for her first time. With a huge sigh and a leg curled up under her, she realized that she'd thrown herself at a guy for the first time. Her hand went over her face and the words of Stelle and Havi rung in her head.\n\n\"Sweetheart, look at me.\" He pulled her hand down but she lowered her head.\n\n\"I'm just a bit embarrassed Quentin. I'll be fine\" She hopped down from his desk and put her dress back on. Just as he suspected, the dress fit even better without the breasts cups. The bodice clung to her tits and made the outline of her nipples just right. He definitely had to take her to the candle lit restaurant tonight instead of the first one where all the men ogled her.\n\nShe blew a misplaced strand of hair out of her face before she bent to get her purse from a nearby chair. He went up to her and ran his thumb up and down her exposed arm. \"Baby, I meant everything I said before. I'm going to make more of an effort and I'd like for you to as well. I'm sorry about calling your virginity a condition.\" He paused for effect, \"I meant your situation.\" He puckishly looked through his lashes at her. She nodded slowly then playfully slugged his arm. He feigned pain then slung her in his arms for kiss. They pulled away and she could tell by his eyes that he meant what he said and just like that...another breakthrough.\n\nChapter Eight\n\nAnother week in and things started to fall into place. Even though Drew's pictures didn't produce anything, the new division was at least breaking even finally. This all thanks to Lovie with her ideas and some pictures she did without Drew. Even he took notice with an off-handed comment of how they didn't suck while at their meeting with Quentin. Lovie just rolled her eyes while Quentin's nostrils flared. Drew just picked at his nails as if he cared not that his job was in jeopardy. Lovie smirked at Quentin; a gesture she wanted him to take as a sign of her indifference to his indignant employee. He took the hint but still had to have his authority asserted. He hadn't wanted to show favoritism but he didn't want Drew to get away with the comment either. He knew that Lovie did all this by herself but Quentin decided to mess with him, \"Drew did you help with these?\"\n\nDrew looked up from his nails finally and shifted uncomfortably in the chair. He knew what Quentin was trying to do and was fucked before he even answered. \"Well I...s-she...she did it all behind my back.\"\n\nLovie piped up angrily then. \"I approached you about all those shoots not counting the first and you turned them all down!\" Quentin's brows lifted with the newfound information. \"In one week I've done five shoots to your tired two! Which reminds me, Quentin may I go? I need to get back to the factory and get ready for my next shoot.\" She got up when he nodded and glared to Drew.\n\nWith the click of the door, the silence filled the room. \"Chicks, right?\" Drew laughed shakily.\n\n\"Drew I like you, I really do.\"\n\n\"But?\"\n\n\"You may have noticed a little something between me and Ms. Laceton right? I mean it's bound to be the latest in office gossip at this point. I can put the rumor to rest and say that 'yes we are dating'...\" Drew forged an irritated smug look that said he had the upper hand, \"But before you go thinking that this is unlawful or I'm being a pussy whipped asshole, just remember who gave you a shot when no one else would.\" He paused for effect then continued, \"And remember that these fantastic shots that I hold in my hand aren't from you as you promised. Lastly, the next time you speak that way to Lovie and don't have a damn thing to back it up, remember that I'm your only recommendation and I'll do everything in my power to make sure you never work again after I boot your balding fat ass out. Fair?\"\n\nDrew wet his nervous lips with a sand paper tongue, \"Yes sir.\"\n\n\"Good, now get the fuck out of my office and do some work.\" Quentin shuffled papers, and made no eye contact as Drew padded to the door. He almost bumped into Eli as he left.\n\n\"Whoa Drew! What's shakin'?\" Eli mused but from the tension in the air he could tell no one was in the mood. Drew just nodded and went on his way.\n\nQuentin stood with a quick change in temper, \"I didn't know you guys were back! How you doin' you s.o.b?\" They embraced in a quick hug as he leaned against the desk and Eli took a seat nearby.\n\n\"Can't complain man...can't complain! Married life is treating me good.\" Eli ended with a wink.\n\n\"Yeah all two weeks of it right? Where's the little lady.\"\n\n\"Down in the lobby waiting on me. Told her I had to check something in the office before we headed home but really I wanted to shoot the shit with you for a few.\"\n\n\"A phone call would have sufficed ya know.\" Quentin got nervous with no time to think of what he'd say about Lovie's presence once they got back. Eli told him to make sure Cindy didn't find out about her and now he had to explain that there's no way Cindy wouldn't.\n\n\"Yeah but someone hasn't been checking his phone, hence my obvious intrusion.\" Eli looked to the door that Quentin periodically gazed. \"Am I missing something here? You're best friend and business partner is back from his honeymoon and I'm getting the feeling I'm being jilted.\"\n\n\"Look we gotta talk...\" Quentin began, but before he finished the door swung open and in barreled a tanned, mini skirted, and tube topped Cindy fuming in like a bull.\n\n\"Quentin Mavery...\" Her voice was eerily low.\n\n\"Uh oh.\" Was all Eli muttered; he knew what they tone meant. He suspiciously turned to Quentin and shook his head, \"dude, what did you do?\"\n\nBefore he answered, Cindy strolled deeper in the room, \"I'll tell you what he better not have done!\" She had a presence about her that commanded most but never Quentin. He merely rolled his eyes as she walked up on him and sized him up. \"You better not have that naive girl as a new player Quint!\"\n\n\"New girl? What new girl? We got a new girl?\" Eli bemused\n\n\"Oh don't you act all innocent, you probably gave him the go ahead.\" Cindy shushed her husband and he quickly took the hint and decided to get up and go.\n\n\"Where tha hell you going guy?\" Quentin wasn't afraid of Cindy but he definitely didn't want to be left alone with her for this conversation.\n\n\"Dude! Not my fight...I told you not to let her find out.\" With that Eli left which had them to stare one another down.\n\n\"I'm close to that girls' family, I made a promise to her parents I'd look out for them both and this isn't what they intended!\"\n\n\"Christ Cindy calm down. Your dramatics are a bit much don't you think? You don't even have to whole story.\"\n\nCindy took a few calmed breaths before she rested a hand on her hip, \"Then what is she doing here?\"\n\n\"She works here.\" He sighed nonchalantly.\n\n\"What? So she is a player!\"\n\n\"Hell no!\" The response even startled him. The thought of other men, or women for that matter, even touching his princess made him see red. He cleared his throat, \"We needed someone as creative concepts for the new photography division and she needed a job.\"\n\nCindy's shoulders slumped with a bit of relief then a thought came to her, \"How did she know about you and this place then? I sure as hell never told her!\"\n\nWith the same nonchalant demeanor he smirked, \"We're dating.\" He wanted her out of his office so he decided he wouldn't beat around the bush.\n\nCindy's mouth stood agape and she couldn't form words for at least five seconds. \"You can't be serious! Quentin you are way too advanced for her.\"\n\n\"But she's more than willing to learn,\" he blinked lazily at her. It took her a minute but she soon figured it out. Once again she stammered for five seconds.\n\n\"You're training her too?\" With that a barrage of emotions registered on her face such as, anger, hurt, and disbelief. You see at one point before Cindy got with Eli she had her sights on Quentin but she wanted way too much than he offered. She wanted to date and be trained while he just needed a new player for the site. Since then, they had a hot cold relationship that served colder on his end than hot on hers. \"I don't believe you...y-you just want to get in her pants then leave that poor girl's heart broken.\"\n\nThat got him a little ruffled. Why didn't she think he was good enough for her friends that weren't in the business? \"Don't give me that bleeding heart 'I'm looking out for my friend' shit. You're just embarrassed that she knows what you do now.\" He chuckled at the end.\n\nHer eyes narrowed, \"Fuck you Quentin! You probably only told her you'd date her just to get past her chastity you prick! You probably turned her out at that stupid club that your favorite dykes frequent...what's it called? Off tha cuff or something.\"\n\n\"Cindy that's enough!\" He slammed his hands on his desk, \"Those dykes? Have names, use them you spoiled brat!\n\n\"Whatever!\" She feigned anger but underneath she trembled from his outburst. \"All I'm saying is you probably hide her away in your place and play scenes and send her on her merry way in the morning.\n\nOh how she amused him, \"is that so huh? Then how bout you put your money where your mouth is... we all go out to dinner tonight.\"\n\nNot one that backed down from anything she called his bluff, \"you pick the restaurant and we'll be there with bells on!\" Without about another word she stormed out of the office with a thunderclap of a door slam.\n\n~*~*\n\nQuentin sat alone at the dinner table at a posh Greek restaurant, as he knew Greek was Lovie's favorite, and waited for his dinner mates. He thought back on how he told Lovie that Havi spilled the beans of her involvement with him and the company and she didn't flinch. He asked why she took it so well and she simply answered, \"We're two grown women that are involved in the same things. I'm not ashamed of her, you, and especially me.\" No better answer could he have heard and he smiled at her words.   \n\nBefore he knew it, a strong pair of hands slapped down on his shoulders and immediately knew them to be from Eli. \"Hope you're ready for this. She's been talking my damn head off since we left the office.\" He whispered to his friend. Quentin turned to see a grey suited Eli with a navy shirt underneath and a fire red halter cocktail dress clad Cindy. Her hair in ringlets gave the impression of a late 19<sup>th</sup> century porcelain doll with oodles of make up; rosy circles cheeks, dramatic top lashes, and deep red lipstick. I'm sure she fancied herself high fashion but in Quentin's book she resembled a teenager's first bat at the M.A.C store.\n\n\"Well where is she?\" Cindy smirked, and before she let him answer she continued, \"lemme guess, something came up?\" Quentin stood to face his accuser but reveled at the sight just beyond her head. Cindy knew before she even turned who was there and delayed the turn on purpose",
        "\"Cindy! Oh my god girl, look at you!\" Lovie squealed as she walked up to the table. Cindy turned just in time as Lovie hugged her friend. \"You're all tan and stuff!\" She turned to Eli and gave him a friendly peck on the cheek, \"And how are you doll.\" He blushed and nodded affirmation. They stood for a few seconds as they all took her in. The men drooled over her yet Cindy slightly scowled because she was jealous. Lovie wore a cream colored, off the shoulder bow neck dress that accentuated her voluptuous form and ended just below the knee. Everyone in the room could tell she had no bra and of course the next thought was if the same was said of her panties. Only two people knew and it sent shock waves through Quentin and Lovie both. \"Well are we gonna sit or get it to go?\" Lovie said, as it turned uncomfortable that they still stood.\n\n\"Of course babe.\" Quentin helped her to her seat while Eli helped Cindy.\n\nLovie immediately reached for the menu, \"I hope yo-..oh!\" Her chair suddenly skittered closer to Quentin so you couldn't tell where he ended and she began. Eli furrowed his brow; he'd never seen his friend show such an interest. Cindy was dumfounded as she hadn't either and wished it were her. Lovie just blushed as he nuzzled her bare shoulder then giggled when she remembered where she was, \"I'm sorry you guys. I was saying that I hope you don't mind if we go ahead and place our orders because I haven't eaten much all day and I really want to focus on our conversation.\" Lovie's eyes twinkled with that look that said she didn't care if she ever ate at all as long as the man by her side was there.\n\nCindy's hand fisted around her water glass but before it touched her lips she said unblinkingly, \"Sure, we can order then talk about how you two got together.\" The tone was strained and it wasn't lost on anyone at the table.\n\nLovie nodded with a quizzical look, \"Um...I was thinking more along the lines of how your honeymoon was but...okay.\" After that they all went to a comfortable silence while they looked over the menu. Well while Lovie and Eli looked at the menu. Quentin had his eyes on Lovie and Cindy had hers on Quentin. She silently cursed as he draped his arm over the back of her chair. He ran the back of his thumb on Lovie's shoulder and Cindy inwardly snarled at the soft smile that played on her lips. It was as if Eli or her weren't there. The last straw was when Quentin whispered something in her ear and she grinned like Cheshire cat.\n\n\"Well I'm ready to order, how bout you guys?\" Cindy waved a waiter over as everyone slowly lowered their menus.\n\n\"Well I guess I am,\" Eli grunted annoyingly and he snapped his menu closed.\n\nLovie tried to lighten the mood, \"Yeah, it's not like I ever stray from the norm when I come to this place.\"\n\n\"Oh so you've been before...with whom?\" Cindy said as she thought this would be her way into Quentin's head. She hoped that it was with another guy and couldn't wait to see the sparks fly.\n\n\"With me.\" Quentin said with such finality that no one said anything until the waiter came for their orders.\n\nOnce again to lighten the mood Lovie nervously laughed, \"Yeah I think we've been here like three times huh baby?\" Eli and Cindy looked up to that endearment. No one, but no one ever called him by anything but his name or \"sir\" and it caught them off guard. Eli's slow grin stretched across his face as he eyed his best friend. Cindy on the other hand just stared with an impassive look.\n\n\"No we've been here twice and went to that little Greek diner last night.\" He corrected as the waiter returned with the bottle of wine for everyone.\n\nCindy was relieved that something harder was finally poured in her glass because she felt she needed it. She coughed around the first gulp but talked through her choking, \"Lovie that's a beautiful dress you have on girl. The color is amazing on you.\" She made sure to mention its color because if she had anything to do with it, the garment wouldn't stay cream for long.\n\nLovie's hand went from her collarbone and looked down a bit, \"Thank you hon! It's Quentin's favorite color.\" Cindy's hand tightened on her wine glass and she steadied the urge to dowse the poor girl.\n\n\"Oh? I thought it was red. Quentin, didn't you say you liked red?\" Her glass went to the table a little too close to Lovie.\n\n\"For a car,\" he began as he poured Lovie a little more wine, \"For Lovie, I love light colors that compliment her skin tone. When I saw it I just knew she had to wear it for me.\" He ended the comment with a stern look to Cindy. Lovie looked over the dessert menu and hadn't noticed the exchange, or at least pretended well enough. Eli just shifted in his chair. \"Lovie, sweetheart, why don't we switch seats? My legs need a bit more leg room than this side of the booth is allowing.\" She complied as Quentin's gaze never faltered from Cindy who seethed back at him. He knew what she was up to and he had no intention of paying a dry cleaning bill on a brand new dress for some bratty slut with jealousy issues. At first he thought she would be more upset that Lovie knew about her profession but now it became abundantly clear that she wanted Quentin. Better yet, maybe she really hated the fact that her friend was with the likes of him. Whatever it was he knew he had to be careful. When females got together it some time got messy for him. He usually would do the honorable thing and leave so as to not upset anything but this was different. He decided then and there that he'd fight for Lovie and he'd challenge Cindy or anyone else that got in their way of progress. Poor Eli just downed his third wine in the last ten minutes and his expression spoke volumes, 'man I've made a huge mistake.' That pissed Quentin off the most. They both made a promise that pussy would never destroy what they had as a friendship or partnership but this got complicated.\n\nSure they were all adults, so Eli knew of Cindy's little crush on Quentin but he never let is faze him, until then. But she'd never made such a spectacle of it till then. He pulled his wallet out and slung some bills at the table, \"I've lost my appetite, I'm sorry folks... you guys have dinner on me.\" He got up from the table and looked at Cindy's startled expression, \"you coming?\" He didn't wait for her answer as he stormed from the table.\n\nWith a jovial tone Quentin said, \"You better go Cindy.\" Lovie just elbowed Quentin and looked to Cindy with a sympathetic look, \"Ow! We're going in the opposite direction as her. I'm not taking her home.\" Cindy just chewed on the inside of her cheek before she got up and apologized for the trouble. When she left, the silence was filled with tension and all the things they weren't discussing. The food arrived some time after Cindy's flee so Quentin paid the poor waiter for the check and a big tip for his trouble after he had to bag the order up. The ride home was quiet but Quentin made sure he took the right to his place and not left, to hers. Something obviously bothered her and he needed it settled that night and no later. When they got up to his place, Lovie took the bags from his hands and moved to the kitchen. She still hadn't made eye contact and that irked him. He took a deep breath as he entered the kitchen, \"Penny for your thoughts?\"\n\n\"We have food for the next two days.\" She said solemnly.\n\nHe walked up to her and placed a hand over hers so she'd put the fork down, \"If I gave you a quarter would you dig a little deeper?\"\n\nShe looked to him with a gut clenching sadness, \"Is something going on with you and Cindy?\"\n\n\"No.\" Her lip curled up and told him she didn't buy it so he continued, \"She...I mean of course we've had scenes together.\" Her shoulders slumped with the realization of Cindy, her friend, having more carnal knowledge of her man than her.\n\nShe still needed more explained, \"Why was she acting so weird?\"\n\n\"I don't know, maybe she's upset that you work with us now.\"\n\n\"Look I know I'm much younger than you and most at the company but please don't insult my intelligence...\" She left the statement to hang so as to encourage him to come clean. They stared at one another; neither backed down until Lovie did the universal \"sister-girl\" head cock, lip curl, brow raise. It actually worked to both their surprise; Lovie as she thought nothing moved him and Quentin because he saw the jealousy that surfaced from his dark lovely. Unlike Cindy, Lovie's was sexy as hell. She didn't scream like a banshee, or resort to childish tactics. She laid her cares out and demanded an answer and even though he was on the line of the firing squad he respected her emotions.\n\nWith a heavy sigh he wished he hadn't told her he'd stop smoking, as this was a good time as any for a square. His looked her in the eye, \"She may still have a tiny crush on me.\"\n\n\"Still?\" Lovie shifted to one side and perfected the final stage of \"sister-girl 'tude\". \"What do you mean 'still'?\" As nervous as he was he knew better than to crack a smile at how adorable she looked at the moment. He just calmly explained the situation and even though her face slacked from its previous mean mug, her jaw stuck on steel. \"This is all in the past right,\" She said in a small voice.\n\nHe walked close enough to enjoy the body heat she radiated despite her ever so slight tremor that ran through her body, \"Princess there was never a present with Cindy.\" Her eyes melted at his words yet she snatched it back. He instantly knew he had her but wondered why she meant to keep the charade up. He wanted to play and she still acted like there was still negative air between them. \"What?\"\n\n\"I just think that maybe I should go home?\" She moved her arms towards each other to link at the bicep, which covered, protectively over her budded nipples and turned her back, \"I mean just to clear my head.\" Now she took it too far he thought as irritation settled in his stomach. Sometimes his brown beauty played too many cat and mouse games when it was just them and not a scene. Sometimes so much he had to rein it back in by doing a scene just to have control again. He walked up to her and massaged her neck. She flinched his touch away and turned to look at him, \"Not this time. No scenes tonight.\" She waited for his petulant act of boorish man and held her chin high.\n\nInstead he remained impassive but his words spoke volumes to her initial feeling, \"You aren't going home.\" Her eyes went wild before he finished, \"It can be you and me tonight Olivia.\" She didn't know what to say. They'd done most of their sexual time under the guise of her training and barely anytime as Quentin and Olivia. It heated her to the core and scared her to chills at the same time that he read her mind. He stepped closer and wrapped his arms around her trembling body. He switched his arms so that one held her close and the other came up to caress the soft wave of her hair from her face. He knew she was surprised beyond words that he learned her so well.\n\n\"Maybe I should still-\" Her words were cut short as he took their fate in his hands. He stooped and before she knew it he bent her by the hips with his shoulder. \"Quentin put me down! What are you doing?\"\n\n\"It's me and you tonight sweetheart.\"\n\n\"B-but...\"\n\n\"No buts\" he lightly smacked her behind out of habit but put a soothing rub on the affected area then a kiss. Once they were in his room he laid her on the bed and turned to shuck his shoes.\n\n\"Quentin...sweetie...I appreciate your efforts but-\"\n\n\"No buts.\" He tossed over his shoulder once more as he removed his shirt. He stood and turned towards her as he thumbed the band of his pants. \"Why don't you get out of that dress baby?\" She scrambled to the middle of the bed. She tried to bound off but he caught her ankle, \"Where are you going?\" His brow furrowed as if he just realized her intention as being new. Was she actually serious about going home?\n\n\"I told you already...I should go home.\"\n\n\"I want to do whatever you want to do tonight but I really don't want you at home unless it's just a change of scenery for us.\"\n\n\"What do you mean?\"\n\n\"I mean that tonight I want us to be together in a bed until the morning light. I'm not talking about penetration baby. I'm saving that for a better time, but tonight I want us together.\" The light that danced in her eyes returned for the first time that night. A slow smile traveled from each corner on both their faces. He slowly released her ankle and went back to the task of his pants. She finally complied with his wish and discarded her dress. She stared full on at his erection and the dazed look she always got when she saw his hard on entered her eyes. \"Would you like to give me pleasure sweetheart?\"\n\n\"Yes.\" She said, barely above a whisper. His hand slinked to his iron member and gave it a few pumps. Her tender berry tips turned a deep plum color instead of their usual Hershey hue. It meant they were at full bloom and just as her gaze only saw his cock, his only saw her full breasts. His breath got caught in his throat once he felt her slender fingers snake over his shaft. She went through the hole of his boxers and pulled her heart's desire out. Lovie had seen her number of penises but Quentin by far took the cake. It had a rigid terrain but it felt soft to the touch. The broad head squeezed a pearl drop of pre-come and she instantly leaned in to kiss it off. He hissed audibly as her lips enveloped the head and the tip of her tongue swirled the tip.\n\n\"The best...\" was all he strangled out and she hummed her appreciation over the length of his rod in one slurp. His knees nearly buckled but the edge of his bed caught his weight. He looked down at the luscious sight of her ass up in the air as she was on all fours while she pleased him. Her ample rump tapered to a thin waist and down to narrow shapely shoulders. She paced back and forth on his pole at a steady speed. She knew that drove him crazy as it gave just the right amount of pressure, speed, and tongue action to fan the fires yet not explosive. She really did turn the act into an art form and he was so glad he could be an enthusiast. He slid a hand through her hair and gathered it in one palm. He wanted to get a better look at his princess as she sucked him off. And what a sight it was; her jaws collapsed in around his thickness as if she wanted to suck his life force away. At this point if it were true he wouldn't object; he'd just thank his lucky stars he died in such a wonderful way. \"God baby, I don't think I can take much more. You're the best!\" He groaned. Soon the scent of her arousal filled his nostrils right when he felt her vocal cords vibrate his dick. He looked down at her hand as it played with her clit. That usually meant one thing; \"You close baby?\" She only hummed out a 'mmm hmm' as an answer but it was so desperate that it pushed him over the edge. \"Me too baby...ah ah ah shit!\" He yelled before he doubled over her back. She didn't move away but made her suction more concentrated on the head and waited for his love juice to slide down her throat. He jerked and groaned with each spurt and as soon as he was done he made sure he got off her to let her breathe. They righted themselves in the bed over the covers and panted deeply as he spoke, \"Did you come?\"\n\n\"Almost but it's oka-.\"\n\nHe's mouth crashed down on hers and stopped the words and her breath. The kiss was deep and tasted sweet from her mouth and his lingering essence. He slowly lifted from her still parted lips, \"Almost doesn't count darlin'.\" He had a devilish grin planted on his face as his hand tickled across her lower abdomen. She giggled softly but it soon sizzled to a deep groan as his hand scooped into her lacy panties. \"Mmmm baby you're so hot for me aren't you?\" He took his palm and rubbed the length of her sex to tease her a bit, \"we should talk about getting you on birth control soon. I don't want anything keeping me from truly feeling you once I'm inside. Would you like that?\" She nodded as she closed her eyes. \"Open your eyes Olivia.\" She slowly complied but they were heavy lidded from drunken passion. His middle finger dipped between her puffy slick folds and leisurely spread her dew over the knotted bead at the top, \"You know what occurred to me?\" She couldn't speak. His finger rendered her speechless as she only looked at him and waited for his answer, \"I noticed that I've never seen your face up close when you have an orgasm. Isn't that a shame?\" His finger did a quick zig-zag that caught her off guard and a pained expression crossed her face and a sharp sound emitted past her lips. She whispered something but he couldn't make it out, \"what princess? I couldn't hear you.\"\n\n\"Please!\" She whispered fiercely.\n\n\"That's what I'm doing baby. Pleasing you,\" kiss, \"the way I want.\" His finger dropped to her sopping entrance and slid with ease. She was so tight that her walls sucked his meaty digit deeper and deeper with each pump. He craned his thumb to massage her clit as he simultaneously fingered her hot cove. Soon her breaths panted and heaved from her chest and her stomach collapsed to her back. The sight of her orgasm verging to the edge gave him an awe he'd never seen from another woman. She was absolutely gorgeous with her eyes slit, wet licked lips, and flushed cheeks; he couldn't wait to see her orgasm as it crashed down on her. \"That's it princess. I know you're so close aren't you? Come for me baby.\" His gentle coax was all she needed and she yelled his name to the heavens. When she came back down he was able to catch her with his disarming grin, \"That was probably the most gorgeous thing I've ever seen.\" He whispered before he rained tiny kisses down her jaw and back to her lips. She just panted and laid like jelly as she allowed him to position them in a deep spooning position. He covered them with a blanket and laced his fingers between hers and gave them a kiss. Lovie closed her eyes with a silent realization that Quentin Mavery may be her one.\n\nChapter Nine\n\nCindy slashed through Lovie's couch and stuffing flew everywhere. She didn't take pride in trashing her friend's apartment but it did quell her anger a bit from the events of the night. After the restaurant and a pity fuck for Eli to get him off her scent. She left him passed out in bed and smirked at her handiork on the way out. She pressed \"send\" on her phone to her lover. Once in her car she cursed as for the fifth time his voicemail answered. She left an urgent memo flag with her first message and knew he hated when she blew him up on messages. She threw the cell to the passenger seat and revved away. It wasn't until she spotted the full-length mirror to shatter that her phone finally vibrated at her hip, \"Hello?\"\n\n\"Where are you? You're not at home.\" The baritone voice seeped over the receiver. When it was that silky she knew to be scared. That was the trick, to lure her in a sense of security before he unleashed a heavy punishment that made even the likes of her quake in her boots.\n\n\"I-I'm at Lovie's.\" She stammered. There's a break of quiet and Cindy's hand trembled.\n\n\"Why? Did I tell you to move on this yet?\"\n\n\"No ...but...\"\n\n\"Don't talk back Cinderella.\" He gave a menacing laugh after that because he knew she hated that pet name. Sure, to anyone else it came off endearing but he used it as a moniker of her always having the scraps of life and never what she truly wanted. Ever since her first encounter with him she was smitten. She would have done anything he asked, hell she still did.\n\nWith a heavy gulp she knew better than to say it but her emotions were in a whirl, \"Why do you care?\" The next quiet patch made her heart thud like a ghetto blaster rolling down the street.\n\nShe was about to apologize for her insolence but he finally spoke, \"It's too soon to show our hand. Now get your ass down here before I come up there and drag you the fuck down!\" The last part came out in a crescendo like yell that had her to remove the phone from her ear. She couldn't say anything else as she heard the click of the phone that told her that she better get down stairs. She stepped over to the windowsill that led to the street. Sure enough his elusive sedan sat at the corner directly behind her car. She hadn't made out his face but saw his fingers as they tapped across his stirring wheel. She took a deep cleansing breath in front of the mirror. Once released, it did nothing to slake her fragile state. Her reflection only fueled more to the fire. In a screeching huff, she picked up a nearby shoe and busted the glass with a loud crash. By the end of her tirade, she panted and clenched her fists until her knuckles turned white. She went down to the street and tried to go straight for her car but he blinked his lights to let her know he wanted to talk to her. When she was close enough to the car he called for her to get in. She slid in the passenger seat and made a point not to look at him. In stead she looked out of the window as he spoke, \"Have fun?\" She didn't answer, not sure if he was being rhetorical or not. She quickly got her answer as his fisted through her hair and jerked her head to his. Her green eyes met his and she cringed at what she saw. As much as she wanted to pretend he was Quentin, it seemed his hand twisted more in the nape of her neck, where it was most tender. Quentin's twin, Guy, jeered in her face, \"What's wrong? Longing for my brother's touch right about now?\"",
        "\"N-no.\"\n\nWith a rough shuck, he released her head, \"Jesus you make me sick. Listen...\" He grabbed her chin roughly, \"don't ever make a move like that without my say, you hear me? You probably left prints everywhere.\" She shook her head and opened her mouth to explain she had gloves but he interrupted her, \"Shut up! You think just because you're married I won't punish you?\" She looked down to her hands in her lap as he continued; \"I think we should go somewhere so I can remind you who belongs to whom here.\" She shivered in her seat as he squealed away.\n\n*~*~\n\nLovie woke to the scent of something floral, earthy, and smoky all at the same time. Her hands went up to her hair to move it from her face but felt something else. She pulled it from her hair and found a three-flower bouquet of ylang ylang, violet, and lavender. Quentin was nowhere to be found in the room. Her heart sank a bit before she noticed her cell on his pillow with a post-it that read, 'check me'. As soon as she hit her text screen her face lit up with a grin. It was a picture of her asleep with the flowers tucked behind her ear. The light colored sheets gathered around her as if she was on a cloud and she looked like an ethereal woodland nymph. The caption read, 'Hard to tear myself from this gorgeous sight so I took it to work with me. Breakfast is in the kitchen. Take your time coming in, you deserve it.\" She fell back in the bed squealing in a fit of giggles, and ignored the missed calls icon. She usually didn't get this juvenile but it's been awhile since she's had a reason to thrash around in bed with a lover's excitement. After a quick shower and breakfast, she decided to wear the flowers in her hair all day then giddily bobbed out of the building to a waiting taxi. Just as she'd begun to think that the day was going to be great, the taxi pulled up in front of her loft with two squad cars parked at the curb. As she got out she noticed her Super standing next to one of the officers who was taking down notes of what he was saying. \"Mr. Jefferson? What's going on?\"\n\nBoth men looked up at the sound of her voice and Mr. Jefferson's looked heavenward with relief, \"There you are! Oh my gosh Ms. Laceton, I thought they took you.\"\n\n\"Took me? Who Mr. Jefferson?\" She walked up to the man and he embraced her in a quick hug and pulled back to look at her.\n\nThe officer turned to her, \"Are you Olivia Laceton?\"\n\n\"Yes. Will someone please tell me what's going on?\"\n\nThe officer momentarily ignored her question as he radioed in on his walkie- talkie to his partner. Mr. Jefferson braced her arms into his, \"There's been a break in.\"\n\n\"What?\" Lovie's eyes shot open as she tried to leap up the stoop.\n\n\"Hold on there, miss.\" The officer effortlessly held her back, \"We're still investigating and checking for clues. We'd like you to come to the station and fill out a report.\" The officer went on talking about formalities but her head was spinning something awful of the thought of her life being invaded like that. The last part of his comment made her look up though, \"I'd also recommend that you stay with a relative or friend for a while.\"\n\n\"Wait why? Do you think they'll be back?\"\n\n\"We really can't say miss. It could be a total random act of vandalism but at the same time this could have been planned. It looks like there wasn't any forced entry.\"\n\n\"What about prints?\"\n\n\"We're still gathering evidence.\" He shrugged.\n\nHer mind was in such a purgatory she operated on heightened autopilot. She called her sister and they went to the precinct to fill out a report. She finally broke down once she got to her loft to get some things to stay with her sister. Seeing all her things shredded, sliced, and shattered made her think on the same lines as the officer. Someone took pleasure in destroying her life and it made her angry and scared to know she was their target. She pulled herself together enough so her sister would let her go to work even though Estelle was adamant about her taking the day off. Lovie knew that would cause questions that she didn't want to answer. She wanted to keep this incident isolated from Quentin and the company. By the time Estelle dropped her off at the production building she'd even made it up in her mind to turn this into a positive, hell it was time for her to move anyway. Plus her renter's insurance would pay for most of the important things. Even though she was a bit jumpy from taking so much in at such a short time, she made it past Havi's investigative stare. She jumped on the elevator before the perceptive red-head could get any info out of her. She felt better once she began work; she took her mind off her misfortune and tried not to give it any thought other than a random act. It helped to have Quentin's actions that morning buzzing in her head. He'd quickly become something special to her in the two weeks she'd spent with him, as bumpy as it was in such a short time. For some reason, he made her feel safe with her inner yearnings. She definitely didn't want to claim it to be love but she realized that she's never really loved anyone before and whatever she had with Quentin was something totally different. But was it love? The thought of such a notion made her laugh to herself as she cleaned the makeup station. How would it look to be married to her Dom? What would they say to their children? Wait...what children? She had to shake the thought from her mind just to stop it from forming. An earlier conversation with Havi and Estelle stuck in her mind as it confirmed that there are more married Dom/sub relationships than most would think. \"As if Christmas at the in laws are in the cards for us...right!\" Lovie scoffed as she turned and met Quentin's heated glare.\n\n\"What's happening at Christmas?\" He asked with furrowed brows.\n\n\"Oh nothin'. Geez, we should put a bell on you. I never know when you're coming.\" She wrapped her arms around his neck and pressed her body into his.\n\nHe bit his lower lip and inhaled her scent deeply. \"Maybe I like it that way,\" he said in a gravelly tone. He laid his hands on her wide hips and jerked hard into his groin before he placed his lips to heaven. He thought about it all day when he left her in bed that morning. He literally had to stop himself several times from waking her just to get a little something started. But with a sigh he got the flowers and tucked it in her hair for a picture. All day he thumbed through her photos mesmerized from her talent. The pictures were exactly what he wanted for the new division and forward, as in when he could finally go straight. They were sensually subtle yet artistically appealing to anyone who didn't know it was produced from an adult themed company. Above all he was able to see a deeper side of Lovie. Everyday with her fed into his need to know her, please her, or just be with her. When he wasn't with her he had knots in his stomach. He had a constant itch that only she could scratch and he liked it...loved it even. He couldn't hold back from himself anymore; he was head over heels in love with her. He tried so hard to have her fall for him that he fell victim to her charms himself. He admired her mind, loved her body and couldn't wait to capture her soul. The part that sucked was that he knew it was way too soon to let her know this! Just because he was ready to love again never meant she felt the same. Hell, what if she couldn't see herself with someone as old as himself. Worst of all, what if she didn't return the feeling. He had to know she loved him back.\n\nFor the time being he just enjoyed her sugary sweet tongue as it slid across the roof of his mouth. Their groins were attached like magnets and she softly gyrated against his hard on. He palmed her full rump and guided her hips over his erection. They simulated a sensual dance act so well he knew she'd be a natural during the real thing. When their lips finally parted he kept hold of her hips and their mouths spread into deep grins. \"Why hello there Mr. Mavery. How was your day,\" she said in a passion soaked croak.\n\n\"Amazing...now. How was yours?\"\n\nShe hesitated and drifted her eyes down a little and he dipped his head and caught her gaze with a questioning eye. She met his stare and put her smile back intact, \"It was fine.\" She sealed it with a peck to his nose. His eyes said he didn't buy it. She didn't want to talk about the break in or the fact of one of the players, Jenna, didn't really cooperate in the best of ways that day. It seemed as if all the straight women players had a vendetta against her. When she talked to Havi and Stelle about it, they just consoled her and told her to join the club. She honestly didn't care either way and knew that the only reason why they drank so much hater-ade was because Quentin's scenes started to dwindle. On top of that, most of the girls were either obsessed with Quentin or were trained by him; some, even both! The men were another story. Lovie didn't want to point fingers but she was sure Drew dropped the rumor of how she was a gold digger that has Quentin on a leash so short he now barked at any guy that came near her. They of course never talked to her but after they saw her pictures, she could definitely see that they were threatened as well. Most gave her a distasteful snort whenever she walked by. Every time she encountered one of them she simply rolled her eyes and continued with her life.\n\n\"Are you sure? Did Drew do something?\"\n\nHis eyes went stormy and she placed her hands to his chest to quell his raised anger. \"No baby! He actually has been very helpful. Which I've been meaning to talk to you about that...\" She matched his previous quizzical stare with mirth in her eyes. \"What did you tell Drew yesterday when I left?\"\n\nHe shrugged, \"I just told him that his attitude better change towards you.\" His voice was so matter-of-fact melded with arrogance her eyes went heavenward. In actuality, her pussy tightened with satisfaction of his barbarism.\n\nTo play with him a bit, she moved from his hands and continued with her previous task. \"Do you think that's professionally sound? Couldn't he sue or something?\"\n\nHis look was incredulous as he spoke, \"What? Hell no... Look at Havi and Stelle.\"\n\n\"They don't own the company Quentin.\" She tossed over her shoulder.\n\nIn a swoop, he accosted her in his arms from behind. In a silky whisper, \"What about Cindy and Eli?\" The weight of his comment wasn't lost on either of them. He just smiled against her neck as he felt her heart beat rapidly beneath her breasts, \"there's no contracts about fraternizing with staff. I knew better than that when I started an adult production company Lovie.\"\n\n\"So you do this a lot,\" she said in a breathy attempt to gain some footing.\n\nWith a throaty growl he turned her to face him and glared into the light of her glittering orbs. He searched the clear pools to see if she really believed what she just said. \"I told him we're dating.\" Sparks flew in her eyes and he nodded with a slow smile. \"That's right, I'm not hiding you away from anyone. I want everyone to know that I've staked my claim.\" She narrowed her eyes in an unbelieving way, \"Jesus Olivia, you gotta know that you're the first woman I've done this with. Havi and Stelle must have at least told you.\"\n\nShe reciprocated his mischievous tone with her own, \"Weelll...\"\n\n\"Yeah...I know you know. I love Havi and Stelle but they are known as the mouthpieces of the company. As I said before, I want to turn you on not out.\" He trailed his index over her chest, \"maybe...there's another place I want to be besides between your creamy brown thighs.\" This was a second attempt of getting into her subconscious and this time it couldn't be avoided. He obviously wanted to be in her heart. He didn't want to get into details and show his hand. Instead he moved her head closer to his lips for a soft kiss. With a sigh like a grouchy dog he said, \"Listen I still got some work to finish up on that's going to take a couple of hours. I was hoping you'd wait for me at my place when you're all done.\"\n\n\"Of course.\" She answered with a satisfied grin before she stole another quick kiss. He turned on his heels and disappeared, and she couldn't hold her laugh as she noticed the pep in his step. For the rest of her shoot time, her stomach flittered with butterflies of their time that night and a gnawing inclination that her break in wasn't random. Thankfully, the thought of a Quentin filled evening settled the uneasiness of the vandalism. As always, she finished early and took the elevator up to the CEO offices and Quentin's home. As soon as she stepped on the floor she noticed Cindy nervously pace in front of Eli's office. \"Cindy?\"\n\n\"Oh! Hey girl! What are you doing here?\" She looked anxiously from Quentin's apartment door to Lovie.\n\n\"I was about to wait for Quentin but...uh..would you like to go get some coffee?\" Cindy looked as if she was about to say 'no' but Lovie continued, \"Please? I'd really like to talk to my friend. You know, a little girl talk.\" Cindy and Lovie always had a closer relationship than her and Estelle. They were all great friends, it was just that Cindy and Lovie had a lot more in common, so to speak.\n\nCindy gave an uneasy smile, \"Sure.\" As they walked to the nearest coffee shop, Lovie made it a point not to bring up the 'tiny' crush.\n\nDuring the first cup of Joe they spoke easily about Cindy's honeymoon and all the fun stuff they did. By their second warm up they were in a broken calm that started to get awkward. With a lazy smile Lovie said, \"Honey, we've known each other way too long to be this quiet.\" Cindy gave a sigh and returned her 1defiant smile. \"You obviously have something you want to say to me.\"\n\nAfter another stint of silence, \"okay...fine. What are you doin' Loves?\"\n\nWith a giggle, \"What do you mean Cin?\"\n\n\"I mean, what are you doing working for a porn site sweetie? You're too good for this!\"\n\n\"Cin c'mon. I needed a job and he offered. I couldn't turn it down, and what about you?\"\n\nShe promptly ignored the question and answered with her own, \"Are you trying to tell me he isn't training you?\"\n\n\"You already know the answer to that.\" She waved the waiter over for the tab.\n\n\"Look, I think I know why you're doing this but I'm here to tell you that you have nothing to prove.\"\n\nLovie fidgeted in her seat, \"I don't know what you're talking about.\"\n\nCindy leaned in and placed her hand over Lovie's, \"Sweetheart what happened that night wasn't your fault. I blame myself more so than anything. Now you have that panting dog sniffin' at your panties and I wasn't here to stop it again. I'm sorry...\"   \n\n\"Stop it Cindy.\"\n\n\"But...\"\n\n\"Just stop...\" she took a sip of her coffee then continued, \"It's not your fault and I know it's not mine either. I'm not trying to prove anything. Believe me, before I got involved with the company or Quentin I took that night in account. I can't hide behind it just because it happened, Cindy. I want to move forward in my life and progress...sexually. I chose Quentin just as much as he chose me and we're wanting to see where this goes.\" Lovie's voice was filled with earnest, as she looked her friend in the eye.\n\n\"What if you're wrong? What if he's not the one? I know things about him...things that would change your mind...\"\n\nWithout hesitation Lovie said, \"I feel like he's worth the risk.\" She wasn't about to take the bait.\n\n\"Don't get upset Loves. I just care is all.\" Cindy's brow furrowed with sympathy. It was her final attempt towards amicably getting Lovie out of the equation without someone getting hurt.\n\nThere it was again. That pity look that Lovie hated whenever anyone knew her deep secret, the secret that went past her virginity. She broke the stare so she wouldn't have the urge to curse her friend out. Of all people she thought Cindy would have understood and it peeved her that Cindy felt she couldn't handle this lifestyle because of her past transgression. \"Don't worry about it. I've had a crazy day.\" She was ready for the conversation to be over.\n\n\"Well honey, I better get going. It's been good catching up with you and I guess...\" She paused as she lifted from seat, \"I'll see you around the dungeon?\"\n\nLovie laughed uneasily, \"I don't think you'll see me there any time soon. Quentin would have a fit.\"\n\nCindy's face contorted in a mix of crazy emotions before her eyes narrowed, \"Does he know about your place being broke into?\"\n\n\"What? How did you know that?\"\n\n\"I...um...talked to Stelly earlier.\"\n\n\"I told that blabber mouth not to tell. Could you not bring it up to anyone?\"\n\n\"Sure honey. Your secret is safe with me.\" She sauntered off while Lovie took a serious thought in calling her sister and telling her off. Quentin's text stopped her once she read, \"Where are you baby?\" She grinned as she tossed a couple of dollars on the table.\n\n~*~*\n\nLovie stood in the middle of the room with soft lights gleaming through her blindfold. The majority of the soft rope was strung up and over a high beam that held her arms in place above her head. Slips of her flesh peaked through the intricate spider webbed ensemble the rope made. He was happy at how receptive her body was to the scene. He barely contained his joy when she agreed to his new training. It was a lot more advanced but he felt she was ready and he was proud to know that she trusted him just as much. Quentin tightened the rope that laced around her body and she hissed lowly. \"Ooh baby!\" He quickly stepped in front of her to check; ready to pull her down if it were too much. \"Are you okay?\" His hands moved over her body to feel if anything was too tight, then settled on her face.\n\nShe felt his eyes on her and gave a smirk, \"Sir...I'm fine.\" She reassured him in a way that said she had the upper hand and they both loved it. \"I-I liked it.\"\n\nHe straightened and matched her grin, then reached up to her wrist and checked the slack, \"You sure? I don't want you to bruise sweetheart.\"\n\n\"I didn't say the safe word.\" She said once again in the tone.\n\n\"No you didn't. Such a good lovely.\" 'a good lovely' rang in her head. She loved that he always called her something endearing that resembled her name instead of 'pet' or 'girl' like what she read in her BDSM novels. A moan erupted from them both as he stepped in closer to her body. She could feel the tickling heat of his chest at her bound breasts and she whimpered at how hyper sensitive the rope made her skin. The skin that was exposed was so taut against the rope that it would make every touch, lick, and spank more tantalized. He snaked around her body then she let out a low \"oh\" and they both chuckled. \"You're so responsive to this.\" He brought one hand to the cleft of her ass then gave a little squeeze. \"Can you feel it grind against your pussy? Feel it firmly rub your clit. Now imagine it's me. Tell me how it feels.\" He swatted lightly at her rear flesh and she let a whimpered moan\n\n\"Tight...\" She breathed. He almost asked if it were too tight but she hadn't said the safe word so he took as if she liked it. He reached for the part of the rope that hung over her hip and hooked a finger in. He gently tested the resistance and it caused the pliant material to grind more into her clit. The hum of her moan reverberated through her body. \"It feels so good. Everything you do to me...\" she panted once he stopped.\n\n\"Oh darlin' I haven't even started yet.\" He chuckled deeply as she gave an all-knowing whimper. He went to his knees and brought up the peace sign to her exposed sex. With the two fingers he spread her open and moved the rope. It allowed him the perfect access to her sweet center as he inhaled deeply of her ambrosia. She shuddered right as his tongue connected with her rigid kernel. He laved and sucked on the tender flesh until she could barely stand. Thank goodness the bindings held her up because her knees were like gelatin. A gush of her sweetness leaked over his hand as soon as he introduced his finger. He played her like an instrument, knowing exactly what keys to press and what tempo to keep her breathless. She writhed against her restraints and cried out for mercy but still...never the safe word.",
        "~*~*\n\nONE MONTH LATER\n\n\"So let me get this straight...your friends at the company took your photos over to some bondage bar and now they want to an auction off your work?\" Estelle continued to scrub at her bathroom sink as Lovie worked the tub.\n\n\"Damn Stelly!\"\n\n\"What?\" Her voice rose in pitch.\n\n\"You don't have to sound so excited or proud or anything.\" Lovie snickered.\n\nEstelle soon followed, \"Of course I'm proud of you but it's not like I really get to share in your glory.\"\n\nLovie stood up in the tub, \"What do you mean?\"\n\n\"Loves...they're gonna auction this off at the club right?\"\n\n\"Yeah?\"\n\n\"Well that's not necessarily a friends and family approved place is it? What if someone tries me? I'd feel bad having to explain to them that it's not my scene on their territory.\"\n\nLovie laughed as she stepped from the tub. She decided to give up her loft and just help her sister with her rent as it was now a slow period with jobs on Estelle's end. Estelle was such a trip at times. In the past month Estelle adjusted well to her twin's crazy job and relationship but Lovie could tell her sister's mouth filled with blood from biting her tongue on a lot of things. Still and all, it was her silent thank you and gift to Lovie for being her only support system during her split with her ex-husband, Jeremy. Their family definitely didn't believe in divorce but the cherry on top was that they blamed Estelle for adding the fuel to the fire with her career choice. She only held her tongue because she'd actually had a chance to hang out with Quentin a couple of times and knew he was enamored to her sister. She just wondered if Lovie realized. Lovie stood next to Estelle with mirth in her eyes as they looked at each other in the mirror, \"It's not like that. They'll have art enthusiasts from all walks of life there.\"\n\n\"So we can call momma and daddy and get them to pack up the silver bullet to come see your art debut?\" Estelle matched her jollity.\n\n\"Hell no!\" They both laughed at that but it was soon stopped by a alarm that sounded from the other room. \"Oh that's my alarm.\" Lovie headed for the kitchen for a glass of water.\n\n\"Estelle stood in the doorway of the bathroom and called, \"Speaking of 'alarms', has Quentin made any move towards warranting you having to ingest chemicals?\"\n\nLovie rolled her eyes as she took her birth control out of her purse. Her and Quentin decided she'd go on it after their first rope scene. Estelle was a condom girl, and with good reason. \"You sound like Cassie now. You only say it like that because you're allergic and...\" She paused to swallow the small contraception and smiled, \"No, he hasn't.\"\n\nEstelle had moved to the office nook off from the den that faced the kitchen. As she sat at her desktop, she raised a brow over the computer screen. \"Have you...talked to him about it?\"\n\n\"Lovie sighed, \"No but he knows I'm ready. I think he thinks he's going to scare me.\"\n\n\"Shut up, what?\" Estelle laughed at their familiar term of endearment that they used to describe unbelievable situations.\n\n\"I think it's sweet! He told me he's never been with a virgin and this is as important to him as it is to me.\" After Estelle didn't answer back with some innocent snarky remark, Lovie moved deeper into the den. Estelle's face was on the screen but she had a sassy simper on her face. \"What's that look for?\"\n\nEstelle stopped her clicking from her mouse and looked up, \"You can't be that blind Loves. He's in love with you sweetie.\" Lovie looked as if someone just banged the liberty bell right next to her ear. She hadn't seen it because she was too busy falling herself. Quentin was like the sphinx sometimes but of course she had her suspicions. She just felt too embarrassed to ask him about it. Of course the last month and a half had been heaven for her but it also helped put her life in perspective. She had Quentin to thank for all that. She loved doing hair and makeup but her passion for photography suddenly took the driver's seat, which made her heart soar. She got the freedom in every aspect of her shoots and she was able to achieve any look she envisioned because she was behind it all down to the tiniest detail. A month and a half ago, her life sizzled out with a dead end job and contemplation of going back home. She couldn't have ever imagined any of this would happen.\n\nEstelle's gasp knocked her from her reverie, \"What's wrong?\"\n\nLovie walked over as Estelle said, \"I just clicked on this link in my e-mail...I-I thought it was a job oppor-.\" She didn't finish, as Lovie looked to the screen. Blood rushed to her ears, itchy tingles prickled her skin, and she suddenly was hotter than a crab bake. The only thing she saw after that was black as she passed out.\n\nChapter Ten\n\nThe door opened and very angry version of Lovie stood with hands on her lips and a fire-breathing pant coursed past her nostrils. Her brown eyes are the only things that helped him distinguish between the two. \"Estelle,\" he breathed with a bit of relief and panic as he tried to look past her to the interior of the apartment. Estelle stayed at the door for a brief second as she contemplated letting him in or not, \"Estelle, you called me here half out of your mind saying she fainted! Where is she? What's going on?\"\n\n\"I know I called you but I'm starting to have second thoughts about a lot of things concerning you.\"\n\nBefore he had a chance to tell Estelle that whatever happened between him and her sister was their business, Lovie cleared her throat just behind the door. \"Stelly, we talked about this,\" she said in a small voice.\n\nShe rolled her eyes as she turned from the frame and walked in the hall and let Quentin in the apartment. As they switched places, Estelle bumped Quentin in the shoulder. It only fazed him slightly as his main focus was on Lovie as she headed back to the sofa. He walked in deeper and took in her appearance; wet hair fell over her slender shoulders that slumped in her white tank top. She'd obviously taken a shower to shake the shock of something from her system. He was so confused at this point he was about to yell at them both but Estelle spoke first. \"I'm going to pick up Cassie from the airport then I'm going to Cindy's to make sense of this all.\" Lovie quickly turned back to tell her sister to leave it be but the door was shut before one syllable was uttered.\n\nThis left them standing in the middle of the den. They stared for a moment before Lovie fidgeted and toed the rug. \"Baby, please tell me what's going on?\" His tone pleaded with her. When Estelle called his office and told him Lovie passed out from something he did he just hung up and he flew out the door. She looked as if she'd been crying with her swollen red eyes as well as her nose. She worried her quivering bottom lip with her teeth. In a small gesture, she pointed to the computer and went over to the sofa then plopped down. She put her head in her hands to try and soothe her shiver. When he got to the computer screen his confusion slid away while a cocktail of shock and rage filled his senses. The images of Lovie and him in the middle of various intimate encounters and training sessions danced across the screen with his company's banner supporting it. The site was a dummy so it seemed untraceable but he would tear the ends of the earth to find the person that did this. \"What in the fuck!\"\n\n\"Don't act like you didn't know.\" She laughed bitterly while she shook her head.\n\nQuentin jumped when he realized she was there then the gravity of her words hit hard. His face contorted as he vehemently whispered, \"You can't think I have anything to do with this do you?\"\n\n\"Didn't you?\" Her voice, quivered with uncertainty. He looked at her with such hurt that she knew instantly it wasn't him. Before he even came she knew it wasn't him. Even as Estelle ranted and raved about how it had to be, her heart and instincts wouldn't let her believe the man she'd fallen for was the culprit of this horrible betrayal.\n\nHe slowly made his way over to her but his phone stopped him mid-stride. He quickly viewed the info window and saw it was Eli. Three guesses as to what he wanted to talk about; he looked to Lovie, \"It's Eli I have to take this...I'll be right back baby.\" She nodded as he made his way in the other room. Her psyche was so fragile at this moment she really didn't know what to do. Just as easily as her heart told her it wasn't him, her head screamed 'leave! He's using you like those fuckers in college.' Just the thought of him being as foul as those guys made her nauseated and heartbroken at the same time. She wanted some sort of normalcy now and where they'd go after that, she had no idea. There was no help in that with Quentin screaming in the other room. She couldn't hear the whole conversation but she did hear something of them shutting down the site. That made her feel doubly horrible with the thought of so many people not working on her account. She just closed her eyes and thought of a way out. Quentin walked back in the room in time to catch Lovie clutching a throw pillow like a teddy bear as tears spilled from her closed eyes. He slowly made his way to her and crouched in front, \"Baby?\"\n\nIn a startled stance she looked to him and tried to move but he held her put. She stared at him with a bit of contempt but his softening disposition made her want to melt in his arms. Instead she stared past his head at a focal point on the wall, \"How did this happen.\"\n\n\"I promise you this will be dealt with.\" He moved her hair from her face as it stuck to her cheek. \"I had nothing to do with this Lovie. You have to believe me. Someone planted cameras in my home and took the footage that was supposed to be uploaded last night out and put our time together on the new material list.\" Quentin rambled nervously as Lovie still hadn't made eye contact with him. \"Sweetheart, you gotta know I wouldn't do this. You gotta know how I feel about you.\"\n\nShe finally looked into his pleading eyes, \"No...no I don't.\"\n\nHis mouth went open to speak but nothing came out. He dragged a jittery hand through his hair and stood to sit next to her. \"I-I...\" He stopped to let out a huge sigh and she watched as he began to shake just as hard as her. Her bemusement got the best of her and turned in his direction. He followed suit and took her hands in his, \"Olivia I love you. When I'm not around you I-I-I can't think straight, I don't feel right, and my heart beats slower. I crave to know more about you, yearn to learn how to make you smile. I'd die if this stopped us Lovie...just die!\" He waited for her reaction and as every second ticked by his pulse raced a second faster.\n\nShe slowly met his gaze with a soft smile, \"You...just told me you love me you realize.\"\n\nHe matched her mirth, \"That I did.\"\n\n\"So where do we go from here?\" She moved in closer to him and he caught a whiff of her freshly showered body.\n\nShe moved in equally close so that their mouths were millimeters apart, \"Why do I feel like we're in 'The Mack' right now?\" She softly chuckled as his hands did lazy circles on her exposed thighs. God, how did this man have the power to make her feel as if she lived in a world of marshmallows and cocoa rivers? When in reality, things got complicated everywhere she turned. When she got out of her cold shower she only put on a stretched wife beater and fitted red booty shorts. He looked done slightly at her semi-undress. He stood her up and placed her in his lap, \"does this mean you believe me? Do you believe that I'd never hurt you like that?\" He made her look at him by pulling her chin towards his face. She nodded solemnly before he caught her lips between his. His tongue speared the crease and gained entrance with ease to her sweetness. They both groaned in each others' mouths as Lovie turned to straddle him. She broke the seal for a moment to help him out of his suit jacket and tie, \"Lovie?\"\n\n\"Hmm?\"\n\n\"What are you doing?\" His voice shook with jovial nervousness.\n\n\"What do you mean?\" She countered nonchalantly once she began with his shirt buttons.\n\nHe stilled her hand, \"Baby we can't.\"\n\nIn a huff, she moved to get off him but he held her hips, \"We can still do stuff.\"\n\n\"That's just it Quentin!\" She threw her hands up, \"I don't want to just 'do stuff'; I want to make love with you.\" The last part came out in a pout.\n\nHe grinned at her as she tried to wiggle against his grasp. He could feel the heat of her pussy scorch his erection and gave her bottom a light tap to get her to stop. She looked to him with a warned look and he finally caught the meaning, \"I'm sorry sweetie, it's out of habit. We won't do anymore scenes.\" Her eyes left his to note concede but her brow stayed knitted together. \"It just doesn't seem like the right time, ya know? I mean in the midst of what's happened I feel like I've let you down.\" She met his gaze with softened eyes, \"I have to get to the bottom of this.\"\n\n\"I guess you're right,\" her voice small again. He hated when she sounded like that and hated even more when he was the cause. He pulled her into him and consumed her sadness with his mouth to hers. He replaced it with an ignited wave of fiery passion that she lit for him just as heavy. She stopped them this time, \"Okay, you can't get me all worked uh-aahh!\" Her words were cut short as he sneaked his hand to the crotch of her shorts. He was pleased to find that she didn't have any panties on. His thumb worked her button while his index and middle finger caressed her clothed folds. She whimpered and tilted her head back, which gave him better access to her neck. He traced tiny swirls from her collarbone up to the hollow columns and savored the feel of her shivering form as it writhed in his lap. \"Que-...tin...please!\"\n\n\"'Please stop' or 'please don't stop'?\" He growled next to her ear before he enveloped the lobe between his teeth. She shuddered harder and at the same time a rush of heat met his fingers that fervently rubbed at her hotbox. Lovie's answer was just a moan of uncertainty. She was close to eruption and he knew it. One look in his eyes said he wasn't going to stop so she allowed him more leeway by adjusting her legs wider on either side of him, \"that's it baby. Let me make you feel better. I missed that angelic face. That Lovely angelic face that you get when I send you to the heavens.\" He relished her orgasmic face and loved it even more when she was directly in front of him. Soon her moans transitioned into full on passionate cries. His cock strained in his pants and stirred like Frankenstein's monster when she threw her head back. His own pinnacle snuck up on him with a force that matched her intensity seconds after hers hit. He hadn't even realized how turned on he'd gotten but wasn't surprised. All the ingredients were there; the aromatic scent of her excitement, the sensual gyrating of her inflamed body, and all this administered by the woman he loved. When her desire soaked eyes finally focused on him, he was still in the middle of his release. With one final grunt, he gently moved her from his lap and went to the bathroom to clean himself up. When he came back, she stood with her back towards him and she was stiff again. \"Baby you okay?\"\n\nHe didn't need an answer as he saw Estelle at the entrance of the kitchen. She was obviously still pissed and opened her mouth to chew on his ass some more but Lovie spoke first. \"Stelly,\" her tone warned.\n\nEstelle narrowed her vision at Quentin and went back in the kitchen. \"I'm so glad you guys worked it out.\" The venom in her voice wasn't lost on anyone.\n\nLovie turned to him as she rolled her eyes and whispered, \"She heard us in the hall and waited until we were done before she came back. She spoke to Cindy on the phone and I don't know what she told her about you but it wasn't in the highest regard.\"\n\nQuentin sighed with the thought of his two options. He could tell Estelle and Cindy where they could shove their comments that regarded him or he could get Estelle back on his side by good ole fashioned charm that he knew he was capable of. One look to Lovie and he knew the latter was his choice, \"Should I say something?\"\n\n\"Maybe you shouldn't, she's upset now.\"\n\n\"I think I should,\" he said before he stepped around Lovie to go to the kitchen. She tried to pull him back but evaded her grasp and gave her a confident smile. He stood in the frame, \"Estelle?\" She turned with a 'what tha hell do you want' look that scared him. He'd seen it from her sister and knew what it could do, \"I just want to say...\"\n\n\"What? You want to say that my sister's in safe hands with you? Tell me she won't end up on your site again? Better yet tell me that you love her?\"\n\nHis jaw tightened and clicked in his face as he held on to her hurtful tone. He glanced back at Lovie who now had her hands up in a pleading motion. Estelle was right, he was going to say something a long those lines but now, \"You know Estelle...\" He paused and his statement hung in the air for a moment so that everyone in the room would get the gravity of what was to come next. \"I know we haven't known each other for long so what I'm about to say may not have much weight to it but despite what you may think or have heard I am a honorable man. I do love your sister and she will never be on my site again. This situation has never happened before and I'll do everything in my power to make sure it won't happen again. I understand that she's your family and that means you have no need to give me the benefit of the doubt but I'm going to ask for it anyway.\" Her eyes slacked a bit but her mouth stayed put so he continued, \"I'll do anything it takes to regain not only her trust but yours as well.\n\n\"You're right...what you say doesn't have any weight with me.\" Estelle jeered at him and he could hear Lovie's audible sigh through the partition of the kitchen over the sink. Quentin understood the comment to be snarky and a sign of her unwillingness to believe him but Lovie knew better. Lovie knew her sister could have said or even done more, but the mere fact that she didn't let Lovie know Quentin's good ole fashioned charm still worked to crack her sister's tough exterior.\n\nThat was it; no one could say he didn't try. \"Fair enough,\" he said as he turned back to Lovie. \"I have to go back to my place and put in new security and find the cameras.\" Estelle made a 'humph' noise as Lovie walked him to the door.\n\nLovie silently closed the door and counted the seconds until Estelle started in. It took all of five, \"You know you look like a puppy wanting for its master to return when you sit there like that.\" Estelle continued with her dinner ritual as Lovie joined her in silence to help. \"I don't like this Loves.\"\n\n\"I know you don't like it but that's just it...you.\"\n\nEstelle dropped the skillet on the stove a little too hard, \"What the fuck has he done to you? He has you brainwashed or something! Look I was all for this in the beginning because I thought this would be good for you to let loose a little but since I've talked to Cindy, I'm sure he's behind all this!\"\n\n\"I'm not brainwashed and Cindy isn't the best judge on the subject...\"\n\n\"Why not? Because she isn't getting you all hot and bothered like he does, or better yet because she doesn't spout off how she loves you just to finally get a piece!\"\n\nLovie whirled around to the brown-eyed version of herself, \"Shut up Estelle! Just shut the fuck up!\" Estelle gasped as Lovie never cursed at her siblings in anger. \"Now you're just going a bit too far.\" She closed in on her sister so that they were just paces from each other, \"I believe that he loves me because he shows it every time we're together...\" Estelle opened her mouth to interrupt but Lovie continued, \"Yes it could of all been an act but why would it be for this long?\"",
        "\"Maybe he just wants to say he bagged a virgin.\"\n\n\"He could have said that a long time ago. Lord knows I've tried to help him with it! He loves me and...I-I love him!\" Estelle balked at the end of her sister's comment. \"Honestly I don't have any solid proof that he's not behind this. All I have is trust. I trust him and even if you don't, could you at least trust me to know what to do?\" Estelle's shoulder slumped with defeat, she knew her sister had to do this herself and nothing else could be said.\n\nShe went back over to her skillet and cut on a burner and with a heavy breath said, \"Well finish cutting the vegetables for the stir fry and tell me what the jerk said.\" Lovie just smiled and hugged her sister from behind. Estelle made a gruff noise to shake Lovie off, \"Don't butter me up. Just cut up the veggies you potty mouth.\" They laughed again as both are glad to be back to normal, or as normal as they could be for the circumstances. Lovie caught her up to speed on everything that transpired before she came back and by the end of the story even Estelle had to admit that either Quentin was a great actor or he was telling the truth. Over dinner they discussed the possibilities of who it could have been. With the company being the same location as Quentin's home, any number of people could have had an opportunity. Lovie had only one person in mind that could be that devious, Drew. Estelle agreed as she'd heard all about the prick and all the incidents that involved him. It made perfect sense as he had access to all the equipment and log sheets for the site. It also wasn't lost of them that this situation wasn't linked to her \"random vandalism'. That thought scared her so much she stopped the conversation to take another shower, but nice and hot that time. Once out, she didn't notice her sister sitting on her bed and nearly jumped out of her towel. She quickly grabbed the fallen ends while a small squeak emitted. Estelle chuckled, \"Girl, as if you don't have anything I haven't seen before.\" She ended the comment with a gesturing hand to her own body. Estelle moved to the middle of the bed and picked up what looked to be a swipe of fabric, \"I think you should wear this for him.\" She shimmied the black cloth back and for and wiggled her brows.\n\nLovie straightened her stance from drying her hair with a towel. \"What are you talking about now? Wear what and when?\"\n\n\"I'm talking about getting you laid, tonight, wearing this.\" Estelle was never one to mince words. Lovie's eyes bugged out of her head and that time the towel fell. Estelle beamed at her excuse for a dress before she looked up to her naked sister and shook her head, \"I still can't believe you got that,\" she pointed to Lovie's tattoo on her breast like a child who was about to tell on her.\n\n\"Stelly what are you talking about?\" She repeated as she tried to process how the dress worked. \"I wasn't going over to Quentin's tonight.\"\n\n\"Well now you are. Loves, it's time for you to show him how much you love him as well. Aren't you tired of him leaving you hanging?\"\n\nLovie's eyes grew again once she realized how the scrap of chemise like dress was supposed to form to her body, \"Nuh uh! I can't wear this! It leaves nothing to the imagination! And for your information Quentin never leaves me hanging.\" In spite of her shock of the dress she found herself trying it on anyway.\n\nWith a knowing smirk Estelle helped her and adjusted the fabric over Lovie's shoulders. \"Well it's awesome that he can eat it like a kid with cake but even you are ready now. It's not fair,\" she paused to let her words sink in and saw Lovie's eyes as she examined her figure in the mirror. \"You look just as hot as me in it, but I knew that already.\"\n\n\"Did you make this?\" The dress had a mini black halter that stopped at the middle of her thigh. The halter part draped around her neck and over her breasts but dipped so low in the middle it showed her belly button.\n\n\"Yeah. I was bored the other day so I cut up an old cocktail dress.\" Estelle always dumbed down her own talents when it came to her short lived fashion career.\n\n\"You're right...it isn't fair,\" she said absentmindedly. The power of the dress started to take effect and it turned her on just to think of how Quentin would react to her wearing it.\n\n\"Besides, I have company coming over so I need you to leave.\"\n\nEstelle tried to skirt the comment and bed but Lovie's jovial bemused toned stopped her at the door. \"Excuse me Ms. Thang? You never told me you were seeing someone!\"\n\n\"I'm not, he's just a friend that's going through a bad time.\" Her tone turned a bit nervous and weird. She put her hand to the knob and was out the door before Lovie could interject again. Lovie let her go, at least for now.\n\nShe turned back to her mirror and decided if she were going to play the siren, her hair and make up had to match. \"Get ready Mr. Mavery.\" She smiled at her reflection as she switched on her flat irons and took out her lip gloss.\n\n~*~*\n\nQuentin squeezed his eyes against the bright glare of his computer screen. He had tons of loading lists to go through and find what queue the footage was under. Turned out that the dummy site was up and hidden in a link on the official page for a month at that point. Since the material had alias names, he had to go through each one meticulously. He hadn't had the heart to call Eli back and ask him for help after their heated discussion on the phone at Lovie's. He demanded that the site be shut down while Eli suggested removing the material and link. Quentin was in such a rage he yelled at his friend and partner as if he were the one behind it. Eli, being the more levelheaded of the two, conceded but made a firm statement about it being back up before five the next evening. After he took some time to blow off steam, mostly by sending his woman to the moon and back, he was able to see the fault in his haste. But when it came to Lovie all logic flew out the window, and now that he'd confessed his love for her, he'd stay up all night if it helped him to find out who posted the videos. He tried not to think of just one person as the suspect because he knew it would cloud his judgment in finding the perpetrator but he had two people in mind. The detriment of finding out it was neither of them and blaming someone else held bigger consequences than just pointing his finger at Cindy or Drew. With a huff he lifted from his desk and over to the wet bar of his office. He picked up a tumbler but thought against it and just hefted the crystal container under one arm as he left his office and into his apartment. He typed in his new security code and his new panic room like locks unlatched and he headed in. He was already in his cotton green pajama pants with no shirt as usual and felt it a good time to unwind completely. He decided to have a drink before he called Lovie to say goodnight so he popped the glass top and took a small sip from the huge mouth of the container. He nearly spilled the amber liquid over himself as his phone rang in the distance. He peeped at the screen and was elated at the sight of the picture he'd taken of Lovie as she slept popped up. \"I was just about to call you.\" He grinned in the phone; he loved when she stayed over. He always slept better.\n\n\"I'm downstairs in the alley entrance...can you buzz me up?\" Her voice was sultry and low. So low that he had to strain to recognize it to be her. As he went to the other entrance he checked the main one and made sure it was secured. He didn't think she'd feel comfortable staying over after the incident. But as always, his Lovie was full of surprises. He heard the gate open and shut and the click of heels on the floor. When she came into full view his lazy smile turned to utter astonishment. \"W-wha-...Did you come here like that?\"\n\nShe stopped in his second foyer, with an arm on the frame and the other hand on her hip. His eyes feasted on her gradually from the floor up. She had on three-inch heel ankle boots with blazing red toenails polished as they peeped through the thong-toe opening. His smoldering gaze traveled up for what seemed like eons before fabric came back into view. It didn't last long as he licked his lips with the sight of her stomach and cleavage that threatened to spill forth. He ended on her lovely face that looked naughty and nice with her black smoky shadow that caressed her light eyes, a slight peachy glow to her cheeks and liquidly glossed full lips. Her hair silkily flowed around her face and shoulders with soft curls at the ends. \"I'm here aren't I?\"\n\nHer voice knocked him out of his trance, \"Huh?\"\n\n\"You asked if I came here like this and as you can see...\" She stepped in closer and did a little spin for him and he let a low appreciative groan out that caused her grin to widen, \"I'm not hiding another change of clothes.\"\n\nHe tried to focus because he didn't know whether to be pissed or to be turned on but both would have to work for now. \"In a cab?\" His tone questioned her audacity but his body reacted differently. He gravitated to her like a moth to a flame and in a daze he ran his hand through her hair and down to her slender shoulder.\n\n\"No, Estelle let me borrow her car.\"\n\n\"Oh good.\" He said with a sigh of relief. She giggled at his unnecessary distress and he smirked at her as well. He knew she did this on purpose and now wondered what brought all this about. \"You look absolutely scrumptious baby!\" His unadulterated desire couldn't be held back anymore and he enveloped her in his arms. \"I don't think I could stand the fact of anyone getting a glimpse of you in this, not even a cabby.\"\n\n\"I'm glad you like it.\" She stepped from his grasp and left him reaching for her as she sauntered over to his den. She sat in the middle of his huge sofa and spread her arms over the back and crossed a one long caramel limb over the other. The comfy sofa usually stunted her short frame and made her want to curl up like a kitten on one of the seat sections. But that night she commanded the expansive space like a seat cover. His mouth was still open as he watched every move she made. Her aura was so different from all their other times. When he looked in her eyes he didn't see the innocent little nymphet that he'd come to love but a pure predatory vamp. The next thing that came out of her mouth sealed the deal, \"We're going to make love tonight Quentin.\"\n\nShe said it so matter-of-factly that he did a double take. 'Damn, is this how I am to her?' he thought as his hands self-consciously went to his growing erection. He felt like a high schooler being chastised by a sexy teacher. \"Uh...what was that?\"\n\nShe answered him by slowly drawing herself up accentuating her chest as she moved to the edge of the sofa. She slowly licked her lips as she took in his near shivering state. Her newfound assertiveness was getting her so hot she uncrossed and re-crossed her legs to let some steam off. \"Come here Quentin.\""
    ],
    "authorname": "FallaYourBeat",
    "tags": [
        "interracial bdsm",
        "interracial romance",
        "interracial novella"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/beautician-and-the-beast-pt-02"
}