{
    "title": "Birds of Prey - Hetero Edition",
    "pages": [
        "Author's note: this story has been re-edited to bring it up to my current standards as part of an effort to make Ebooks. It features improved editing, grammar, punctuation, and also includes rewrites and expanded scenes where necessary. Please see my bio for more information.\n\nCHAPTER 1: U.F.O\n\nThe alarm blared, the sound of boots hammering on the deck joining the siren as the hangar bay was filled with a rush of activity. The running figures and idle spacecraft were illuminated by flashing, orange warning lighting, instructions coming through on loudspeakers and radios as the personnel hurried to their positions.\n\nJaeger was already wearing his helmet, double-checking the seals on his flight suit as he made his way towards his plane, listening to the chatter in his ear.\n\n\"...heat signatures in the Oort cloud, nothing showing up on radar, but there's a lot of interference from small bodies and debris...\"\n\nJust like with every long-range patrol, or Bug hunts as they were colloquially known, the UNN Rorke had been drifting along the edge of Coalition space and scanning for Betelgeusian activity for weeks now with no contacts. Jaeger was itching to get back into the cockpit, to stretch his wings in the black void of space. Being cooped up inside the jump carrier was nearly enough to drive him crazy.\n\nHis chest swelled with excitement as he arrived beside his ship, its angular, black chassis making it look like it had been chiseled from a block of solid onyx. The airframe was designed for the lowest possible radar cross-section, the swept wings, dual tail fins and the pointed nose betraying the vessel's atmospheric flight capabilities. It was an FS-26 Beewolf spaceplane, a short-range fighter that could operate both in deep space and in the atmosphere of a planet when necessary. Looking closely, one could make out the innumerable nozzles and thrusters that were spaced out all along the hull, used to orient it in a vacuum where its aerodynamic design counted for naught.\n\nHe stepped out of the way as a Krell lumbered past him, the gigantic reptile carrying a missile in its muscular arms as if the nine foot, two hundred pound projectile weighed no more than a pool noodle. The alien looked to be about fifteen feet from nose to tail, eight feet tall due to its hunched, bipedal posture. Its back was covered in scales and armored scutes like a crocodile, spinach green in color, and it was wearing a yellow poncho that identified it as a member of the engineering crew.\n\nJaeger watched the alien as it leaned under the craft's delta wing and began to affix the missile to a vacant hardpoint. When it was done, it stepped out from beneath the plane, its long tail dragging along the deck.\n\n\"We good to go, buddy?\" Jaeger asked. The Krell turned its alligator-like snout in his direction, then curled its many-fingered hand into a fist, giving him a thumbs-up. The Krell lacked the vocal apparatus to reproduce human speech, but they understood the language well enough. They were just one of the many alien races that served alongside humanity in the multi-species Coalition.\n\nEven as he climbed up to the cockpit, Jaeger could hear the other pilots spooling up their engines and running thruster diagnostics. The deck crew moved off as the vessels prepared to launch, Jaeger sliding into his seat and hitting the button that would close the transparent canopy. The cockpit was high on the nose of the craft, which provided excellent visibility, and he watched the yellow-clad figures retreat to safety as his suit jacked into the plane's internal systems.\n\nThe full-faced visor on his helmet slid down, sealing over his head with a hiss, the heads-up display overlaying his field of view with ghostly green graphics and information as it flickered to life. External cameras mounted all around the vessel streamed a video feed to his helmet, the latency low enough that it allowed him to see through the chassis in real time, giving him an unobstructed view in every direction. If an enemy craft were below, or even directly behind him, this system would allow him to view it as if he was looking through glass.\n\nThe helmet was designed both to feed him system information and targeting data, as well as to protect him from the certain death of decompression if his vessel should lose pressure. He felt cool air across his face as the oxygen supply turned on, his flight suit shifting like it was a living thing, flexing and tightening around his limbs. It could contract to restrict blood flow to his extremities during the extreme-G maneuvers that space combat often required, preventing him from blacking out, at least to a point.\n\nAs soon as his gloved hands found the joystick, he felt like he was home, hitting switches on the control panel and booting up the various systems. The vessel seemed to wake up, its thrusters swiveling and shooting puffs of gas as the flight computer ran diagnostics, the rudders and ailerons tilting. The main engine of the craft stretched like a limb, the vectoring nozzle expanding and contracting, Jaeger feeling a rumble beneath his feet as it spooled up. The data readout on his HUD showed that all systems were green, weapons operational, propulsion gas canisters and chemical fuel tanks full.\n\nBefore him was the hangar's shimmering force field, a flimsy energy barrier that would keep the atmosphere in, while allowing solid objects to pass. Beyond it was the velvet blackness of space, dotted with twinkling stars, the void calling to him. He listened intently to his radio as he secured his straps, waiting for the order to launch. They had been on standby for so long that he felt like he might explode if he didn't get out there in the next couple of minutes.\n\n\"Beewolf two-zero-six and two-zero-niner, feeding coordinates to your flight computers. Your orders are to follow the patrol route and investigate the anomalous heat signatures.\"\n\nThat was Jaeger's plane, and Scorch had been assigned as his wingman, excellent. The callsigns that the pilots used might sound aggrandizing to the uninitiated, but they were more often than not assigned as a reference to some monumental fuckup or as a squadron in-joke. Richard Scorch Baker had earned his callsign when he had failed to retract his radiators during reentry while training at the academy, causing them to melt and overheat his engines. Fortunately, he had been able to glide to safety. Jaeger's callsign was Bullseye, a reference to him accidentally firing an extremely expensive missile into deep space during a combat exercise.\n\nHe looked around, noticing that two other fighters were starting to taxi into position as well, waiting for their turn to launch. They must have been ordered to patrol along a slightly different route to cover more ground. It looked like Boomer and Scratcher. Boomer hadn't figured out that breaking the sound barrier while doing a low flyby over a populated area was a bad idea, and Scratcher had been caught sharing a bed with a Borealan recruit within his first week on the job.\n\nJaeger lined up his plane ready for takeoff, using his helmet to look through the floor of his cockpit to make sure that he was properly aligned with the markings on the deck as Scorch taxied up beside him. He looked over his shoulder, watching as a metal panel rose from the deck of the hangar on a pneumatic piston, the angled square of blackened metal designed to deflect and absorb the heat from the engine during takeoff so that it didn't cook the vessels directly behind it. As large as the hangar was, there were still dozens of fighters and dropships crammed into the space.\n\nUnlike in the atmosphere of a planet, there was no need to gain a great deal of speed in order to generate lift. One needed only to escape the artificial gravity field of the carrier and then they were in open space, where only short bursts from the engines and thrusters were necessary to maneuver. Extended burns were usually a very bad idea, because the more momentum that was generated, the more thrust would have to be applied in the opposite direction to slow down again. Space flight had almost nothing in common with atmospheric flight, there was no banking to turn, there was no danger of stalling. The aircraft could move in any direction, and at any speed in a three-dimensional space, the only limiting factor being fuel consumption and the G-forces applied to the pilot.\n\nSome argued that fighters flown remotely would be better suited to the task, able to execute maneuvers that would turn an organic occupant to jelly. But due to the massive distances involved where space combat was concerned, the only way to ensure a low enough latency connection for that to be viable was by laser transmission, which could be obstructed by objects and hazards. You couldn't send a laser signal to a vessel that was on the other side of a planet, for example, not without satellites already in place to bounce the beam. Automated drones were a possibility, but so far the only species that had developed advanced enough computing technology to achieve that were the Brokers, and they weren't too keen on sharing it. At least for the foreseeable future, Jaeger wouldn't be out of a job.\n\nThe indicator on his HUD turned from red to green, signifying that he was clear to launch. Wasting no time, he gave the throttle a short squeeze, orange flames splashing against the panel behind him as the acceleration pinned him to his seat. In a flash, the brightly lit interior of the bay was replaced with the darkness of space, only the relatively thin barrier of his canopy protecting him from the freezing cold and the deadly radiation. Space looked so serene and pristine, but it was actually swarming with charged particles that would turn his chromosomes into Swiss cheese, along with dust and debris that could hit with the force of a bullet. The spacecraft were made of stern stuff, but every spacefarer feared the day that the cruel hand of fate might send an errant micrometeorite hurtling towards his head.\n\nHe rotated the fighter on its axis and retracted his landing gear, angling the nose towards the vast field of ice and rock in the distance. To his right, he could see the jump carrier and its trailing support vessels, torpedo boats and CIWS frigates floating along in a lazy formation like a pod of dolphins surfing the bow wave of a ship. Only the largest vessels in the Navy were big enough to house the nuclear reactors that were needed to power the jump drives, the smaller vessels had to be towed in their slipstream. The carrier was already dwindling to the size of a toy, the ocean-grey hull shaped vaguely like a giant snub-nosed bullet, with recesses along its length for docking dropships and other craft when the hangars were full. Its belly and flanks bristled with weaponry. There were lines of closed hatches that housed torpedo bays, long railguns on flexible arms, and point defense turrets jutting from its bulbous hull. A carrier could both defend itself and deal an incredible amount of damage to anything that was unwise enough to get into range.\n\nA burst of flame drew his eye, and he made out Scorch leaving the hangar, using the telescope function on his visor to zoom in on the fighter as it drifted towards him. He heard crackling static in his earpiece, and then mission control came through.\n\n\"We've got some weird heat signatures showing up on the thermal scans, could be recent collisions between large bodies, but it's not likely. Radar won't be of much use out there, there's a lot of shit floating around, so keep your eyes peeled. Remember, don't engage unless necessary, this is a recon mission.\"\n\n\"Copy that, mission control,\" he replied. \"We'll just do a little sight-seeing.\"\n\nScorch moved into formation, the black fighter barely visible against the backdrop of space, but Jaeger's flight computer tagged the location of all friendly vessels in the immediate area and displayed them on his HUD.\n\n\"Finally, an excuse to get out of that sardine can,\" he heard his friend grumble over the back radio.\n\n\"I hear that, Baker. Watch your ass out there. They have us going pretty deep into the asteroid field, and I don't want to have to engrave killed by a rock on your tombstone.\"\n\nJaeger watched as two more fighters left the hangar, setting off on a different route, their afterburners flaring for a second or two before they coasted off into the blackness. Hanging in front of him was a giant wall of tumbling ice and rock that seemed to extend infinitely in every direction. Oort clouds were truly massive spheres of rock, ice, and debris that orbited a star at the extreme limits of its gravitational pull. Their boundaries were fuzzy at best, and the fleet was currently suitably far enough away that the danger of impacts was minimized. Bugs loved asteroid fields, they infested them like cockroaches, using the natural cover that they provided to launch attacks on planets further inside the system. Heat signatures this far out probably meant that Bugs were setting up shop here, likely scouts for a hive ship that was hidden somewhere in the cloud. The system was unmapped, but anything that the Bugs could use as a staging point to push further into Coalition space had to be checked out and cleared.\n\n\"Let's give it a three-second burn on my mark,\" Jaeger said, \"three...two...one...hit the gas.\"\n\nThe two vessels accelerated in unison, the G-forces pressing Jaeger into his seat. After three seconds, the acceleration ceased, the fighters letting the momentum carry them forward. There was no air resistance in space, nothing to slow them down. If an object started to move, then it wouldn't stop until force was applied, or it encountered an obstacle. It was even possible to gain or lose momentum without wasting fuel by using gravitational assists, although they were currently too far out from the solar system to have to contend with planets.\n\nThe cloud looked like dust from this distance, but when he enhanced the image with his visor, Jaeger could see the individual rocks and balls of ice as they tumbled lazily through space. Some of them were barely larger than his own fighter, and some were the size of a mountain. It was so hard to judge distance and scale in space without using instruments, and the field of asteroids was dark, the system's sun too far away to provide much illumination at all. It was little more than a pinpoint in the distance, barely distinguishable from stars that were a thousand light years away.\n\nThe two fighters slowed their approach with bursts of gas from their forward thrusters as the asteroids ballooned in their field of view, becoming alarmingly large. Jaeger could see small fragments and particles of dust impacting on his canopy and making his hull shake. The vessels were designed to endure the rigors of combat, and so it wasn't too concerning, but they still needed to be careful and stay alert. It wouldn't do to get pancaked between two drifting hunks of rock the size of houses.\n\nThere was no clear limit to the asteroid field, but Jaeger was soon surrounded by larger rocks, his visor's optics doing their best to brighten the darkness and his flight computer tracking the nearby objects so as to warn him of any impending collisions.\n\n\"Radar is useless in here,\" Baker muttered, \"it's like tryin' to find a needle in a haystack.\"\n\n\"You'd know all about haystacks, you hick,\" Jaeger replied. Baker had a thick Southern accent, and everyone gave him shit for it.\n\n\"Switchin' to thermal,\" Baker said, \"not seeing anything...I really don't want to move deeper. It ain't a good idea if you ask me.\"\n\n\"Well they didn't ask you, it's an order,\" Jaeger said as he used his thrusters to inch forward. \"Stay on my six and keep an eye out for movement, you know how sneaky these Bugs can be.\"\n\n\"Considerin' I got more confirmed kills than you, Bullseye, I sure do.\"\n\nJaeger kept one eye on his sensors as they moved deeper into the cloud, following the route that had been planned out by command. The problem with fighting Bugs was that no two colonies were ever alike. Sure, they shared certain basic tenets and design principles, but the rate at which they adapted to their new environments and their willingness to mutate their own bodies meant that you could never accurately predict what you'd be facing off against. Fortunately, their violent xenophobia extended to their own kind too, different colonies never cooperated or shared tactical information between one another. It was a good job too, or the UNN would never be able to win the arms race that would ensue.\n\n\"Hang on,\" Baker said, \"I got somethin' on the scope. It's a heat source, three o'clock high, hard to gauge the distance in this soup.\"\n\n\"I got it,\" Jaeger replied, his HUD showing a red blip amongst the ghostly green outlines of the nearby asteroids. \"It's faint, might be a critter trying to mask its engine signature.\" He switched radio channels and put a call through to the Rorke. \"This is Bullseye, we've picked up a heat signature, requesting instructions.\"\n\nMission control came through with a hiss of static, the woman's voice crackling in his earpiece.\n\n\"Roger that, Bullseye, marking your location. Your orders are to proceed and investigate.\"\n\n\"That's a solid copy mission control, proceeding deeper...\"\n\nHe flipped to the back channel again, relaying the instructions to Baker.\n\n\"Control says we should check it out.\"\n\n\"Fuck. Oh well, ladies first.\"\n\nJaeger took point and drifted towards the faint heat source, maneuvering around obstacles with short bursts from his thrusters, the signal growing steadily weaker. He was almost certain by now that it was a cooling engine. Something had probably moved shortly before their arrival, and the heat that it had generated was slowly dissipating into space.\n\n\"I got a bad feeling about this,\" he said, \"weapons going hot.\"\n\nHe flipped up the guard on his joystick that covered one of the fire buttons, and he felt a tremor run through the hull as a hatch on the back of the fighter opened up like a trap door. As well as long-range missiles and affixed cannons that could be used both in atmosphere and in space, there was also another weapon mounted on the FS-26 that could only be used in a vacuum. A large, belt-fed railgun extended from the hull on a flexible arm, making it look like the head of a stork. It was invaluable in a close quarters dogfight, able to pivot and track independently of the fighter. A targeting reticle appeared on Jaeger's HUD as the weapon came online. It was primarily computer controlled, but UNN regulations required a human to pull the trigger...or at least a sapient creature.\n\nAs they neared the source of the signature and came upon a large asteroid, their railguns turning this way and that like curious geese as they scanned for targets, the blip on the radar completely vanished.\n\n\"Heads up,\" Baker muttered, \"it's gone dark.\"\n\n\"Be ready, it was around this asteroid somewhere...\"\n\nThey drifted slowly around the large, irregular hunk of rock, the scanners highlighting every contour on its pockmarked surface with a green wireframe. It was like orbiting a very small moon.\n\n\"Picking up traces of methane,\" Baker said, \"something was definitely here. I'm gonna call it in.\"\n\n\"Contact! Contact!\"\n\nSomething that looked like a cross between a gigantic roach and a shrimp climbed out of one of the many impact craters on several pairs of jointed legs. It was huge, at least as large as their fighters if not slightly larger, its segmented body encased within an iridescent shell that glittered in shades of blue and green. Its back was covered in ablative plates that looked like a suit of medieval armor, clearly artificial in nature, probably bolted onto its living body after the thing had matured.",
        "The Betelgeusians used a combination of organic and artificial technology, and even their spaceships were living entities. There was no doubt a Bug pilot encased somewhere inside, its lanky body hooked directly into the craft's nervous system, surrounded on all sides by exposed meat as it drove the thing around like a puppet. Rather than viewports or a canopy, the craft had dozens of glistening, compound eyes that served as cameras for the occupant.\n\nThis one wasn't flying, it was walking along the surface of the asteroid, perhaps using modified landing gear as actual legs. There was a puff of dust, and a flare of green flame as the thing lifted off, tucking its many limbs beneath its body and pivoting to face its adversaries.\n\nIts reaction speed was so quick that by the time the railguns began to fire, there were already bolts of crackling plasma hurtling towards the fighters. Beneath what could only be described as the bulbous head of the Bug ship were housed twin plasma cannons, lighting up its grotesque eyes and its jutting sensory antennae with flashes of green light as they unloaded at the enemy.\n\nJaeger took evasive action, the computer keeping the railgun locked onto the target even as his vessel rolled and tilted, the barrel as steady as a gyroscope. Keeping track of the different in-picture displays and camera views while the world spun around him would have been horribly disorienting, but this was what the pilots had trained for, frantic zero-G combat was their domain.\n\nHis vessel rocked as one of the high-velocity, magnetically-contained balls of green plasma splashed against his wing, arcing across its surface like electricity as the fighter's armor did its best to dissipate the heat and energy over a larger area. Still, the intensely hot plasma burned an ugly, black smear on the wing like someone had taken a giant cutting torch to it, the ferrite stealth coating slagging and melting away.\n\nThe barrel of the railgun rocked on its arm with every shot, rings of electromagnets sending tungsten slugs the size of beer bottles hurtling towards the target at a significant percentage of light speed. They were dumb-rounds, nothing more than pieces of shaped metal, but they impacted the asteroid like tiny meteors and blasted basketball-sized craters in the rock as they transferred their kinetic energy.\n\nEverything was spinning. His fighter was spinning, the target was spinning, the asteroids around them were spinning. Jaeger's only point of reference was the indicator on his HUD that let him know which direction was up.\n\nContrary to popular belief, there was such a thing as up and down in space. The Galaxy was a flat disk with a swollen core, kind of like a celestial fried egg, except a hundred thousand light-years across. One's position could be calculated relative to it by mapping the visible stars, ensuring that UNN ships didn't end up at wildly different inclinations when they arrived in the same spot.\n\nThe thrusters flared as he righted himself, and he watched as Baker loosed one of his missiles, the projectile shooting puffs of gas from nozzles on its nose and tail to orient itself as it arced towards its target. The battle was close range, but in space, even close meant miles apart. The Bug ship moved to take evasive action, but it had taken some railgun hits, leaking what looked like pus or ichor from jagged tears in its hull as the jets of green flame down its right flank flickered.\n\nThere was a flash of light, and then all that was left of the Bug ship was a cloud of expanding debris, Jaeger zooming in on the fragments of torn flesh and bent metal as they flew apart. It looked like a smear on a windshield.\n\n\"Splash one,\" he heard Baker shout over the radio. \"Looks like another notch on my belt, Bullseye. Are you even trying?\"\n\nHe sounded out of breath, as was Jaeger. They were both rattled by the sudden appearance of this new enemy, but a little humor helped diffuse the tension.\n\n\"Control this is Bullseye,\" Jaeger said over the comms, \"confirmed one bogey down. Kill goes to Scorch, as per usual. Where there's one Bug, more are never far, so I'd bet my wings that we've got more of them incoming. Please advise.\"\n\n\"Head back to the fleet, Bullseye. Redirecting Boomer and Scratcher to assist.\"\n\nHe spun his fighter, aiming the nose back towards the edge of the asteroid field, preparing to gun the engine.\n\n\"Let's get out of here, Baker. Make sure your flight assist is on, I don't want to be here any longer than necessary.\"\n\n\"Just like a game of billiards,\" Baker chuckled, \"except the goal is not to hit the other balls...\"\n\nJaeger typed in a few commands on a touch screen that was mounted on his console, then watched as the flight computer calculated the most efficient path through the asteroids ahead of him, appearing on his HUD as a wireframe tube that snaked between the obstacles. He gripped the joysticks in his hands, his finger hovering over the throttle, excitement welling in his chest.\n\n\"I'm keyed in,\" Baker said. \"This flight path is going to keep shifting, nothing in this cloud of shit is stationary.\"\n\n\"Wouldn't be any fun otherwise.\"\n\nJaeger gave the throttle a short squeeze, his engine flaring as it propelled him forwards, crushing him into his padded seat. The computer couldn't fly the plane for him, but it could make small corrections and assist him with short bursts from the thrusters, the massive asteroids racing past as he accelerated. When he had gained enough speed, he coasted, using his thrusters to pitch and yaw, quick burns from the main engine helping him to change direction. It was like threading a needle in zero-G. He not only had to account for the usual pitch, roll, and yaw that one would have to contend with during atmospheric flight, but also lateral movements that were only possible in space.\n\nHe arced around the obstacles, his engine flashing almost imperceptibly, nozzles all over the chassis of the fighter blowing puffs of gas into space to keep him steady and to prevent him from drifting with minute corrections. A warning light flared on his HUD, and the computer highlighted an incoming piece of debris in red, along with its trajectory. Jaeger rolled the fighter with only seconds to spare, the chunk of rock zipping past his wing like a bullet, so close that he swore he could almost reach out and touch it.\n\nThe flight path was constantly shifting to account for the movements of the drifting asteroids, and it suddenly flickered as the computer tried to calculate a new route, a rock the size of a battleship blocking his way as it drifted into his path. It bumped a smaller rock out of its way like a celestial game of curling, the asteroid tumbling end over end as it headed straight for him. Jaeger wasted no time, pivoting so that his nose was facing directly upwards, watching the incoming obstacle through the cameras mounted on the underside of his fighter as he put his belly towards it. He gunned the engine, the vessel rising out of the asteroid's path, barreling through his exhaust trail like a rolling boulder.\n\nActing quickly, Jaeger engaged his forward thrusters. He shed his upward momentum and righted himself, even as the laws of physics carried him forwards. The flight path twitched for a moment and then became solid again, directing him through a narrow gap between two large bodies. He didn't have time to question it, trusting the computer's cold logic to see him through as he angled his nose towards the target, another controlled burn from his main engine sending him careening onwards.\n\n\"Contacts on our six,\" he heard Baker shout, his voice strained as he endured the wild acceleration.\n\nJaeger cursed, setting his railgun to point behind the fighter, an overlay showing the view from its camera in the corner of his visor. Multitasking was one thing, but maneuvering a craft traveling at a thousand knots through an asteroid field while also trying to shoot behind you was quite another.\n\nHe could make out Baker's fighter, tagged with his callsign as it followed behind, its flight computer sending it along a slightly different route. Behind it were three contacts, outlined in red as they burned towards the pair. More Bug ships, probably drawn by the carcass of their dead comrade. Their engines flared with green flame as they dodged and weaved through the debris, their compound eyes fixed on their prey.\n\nOne of them launched a torpedo that had been clasped in its legs, the grotesque limbs unfurling as the metallic tube rocketed towards Baker. He popped his flares, panels on the tail of his fighter opening like airbrakes to release a stream of decoys, bright balls of light trailing smoke behind them as they made a pattern that looked like the wings of an angel.\n\nThe torpedo veered towards them, then exploded into a bright ball of green light, the plasma contained within slagging the asteroids around it as it spread outwards in a crackling sphere. Baker stayed ahead of the energy wave, and the three Bug vessels appeared behind him as the cloud dissipated, the blast actually clearing the way for them.\n\nOne of them loosed a burst of plasma fire, trailing through space like tracer rounds, missing him by a hair as he evaded it.\n\n\"God damn it,\" Jaeger muttered under his breath. If he left Baker to fend for himself, he'd be toast. \"Computer, safety off,\" he said as he gripped the sticks and steeled himself for a high-G maneuver. A warning symbol flashed, confirming that the safety limits had been bypassed and that the fighter could now make maneuvers in excess of ten Gs. If he wasn't careful, he might black out, sending his craft smashing into an asteroid. If he lost control, the stresses could even liquefy his innards.\n\n\"Hang on buddy, I'm coming for you,\" he announced as he yanked the stick and hit the throttle. His fighter flipped upside-down on its axis, facing backwards towards the incoming Bug ships, the engine making the hull shake as he shed velocity. He was pressed deep into his seat, darkness eating at the corners of his vision. His suit tightened around his legs like a tourniquet, forcing more blood to his head to keep him conscious. He felt like he couldn't breathe, the icon on his HUD flashing orange and then red as it counted up. Six Gs, seven, eight, nine...\n\nFinally, his vision began to clear, the pain in his chest abating as he focused his attention on the enemy fighters. He was now pointed directly at them, gaining speed as he roared towards them. The railgun tracked the targets, the reticle leading them as it calculated their positions. Jaeger squeezed the trigger, the weapon spewing tungsten slugs at the formation of fighters. He engaged his internal cannon too, a hatch to the left of his cockpit popping open, the twenty-five-millimeter gatling gun spooling for a second before it began to fire. It didn't have the velocity of a railgun, and it used conventional ammunition, but if he managed to land a hit, then it would do the job just as well. It sent an almost unbroken line of orange trails streaming towards the targets, more intended to scatter them than to actually disable them.\n\nThe Bugs broke their formation, shooting off in different directions as Jaeger dodged past a stray chunk of rock that had been displaced by the torpedo. His railgun tracked the nearest target, pivoting on its flexible arm to stay locked on, the Bug vessel shuddering as it took some hits. The high-velocity slugs tore straight through it like a hot knife through butter, the craft faltering and starting to drift as it lost control, crashing into a nearby asteroid and exploding into a flash of plasma and methane propellant.\n\nOne of them stayed on Baker, the second attempting to evade. Jaeger braced himself for another maneuver, a combination of his main engine and the thrusters on the underside of his fighter simulating banking as he turned, the Gs pressing down on him like there was an elephant standing on his shoulders. He tried to get a missile lock on the fleeing Bug ship, the railgun taking pot shots as it dodged and weaved through the asteroids. The computer finally managed to get a solid lock, and he thumbed the release, a missile flaring as it launched from beneath his wing and sped off into the distance.\n\nIt shadowed the escaping Bug, even as the giant insect rolled and twisted between the chunks of ice and rock, slowly gaining ground on the larger and less agile target. Once it was in range, the warhead exploded, sending out a spray of deadly shrapnel that eviscerated the Betelgeusian ship. It lost power, drifting away into the asteroid field as its engines sputtered and flickered, bodily fluids trailing behind it as they leaked from its perforated hull.\n\n\"Could use a little help here,\" he heard Baker say through gritted teeth, he sounded like he was in trouble.\n\nJaeger endured another tight turn, coming back around to target the remaining craft. It was still on Baker's tail, harrying him with volleys of plasma as the pair weaved between the asteroids, coming in and out of view. Baker's railgun was firing behind him, aiming between the fighter's twin tail fins. He scored a hit, Jaeger watching as the impact rocked the Bug vessel, ichor trailing from the wound. Still, the Bug pursued him relentlessly, Jaeger beginning to doubt that he could get into range of it in time to save his friend.\n\nJust then, a twinkling beam of neon-green light appeared to spear the Bug ship. It was barely visible, ephemeral, glittering against the darkness of space. The metal armor of the organic craft melted like it was being burned by a cutting torch, glowing with heat as the sparkling beam seemed to sear through it. The beam held on the Bug ship until it penetrated deep enough to hit something flammable, the target exploding into a bright ball of fire, and then vanished as quickly as it had come.\n\nBaker was clear, speeding away, and Jaeger scrutinized his display as he scanned the darkness for the source of the light. That had looked like someone flashing a laser pointer, could it be some kind of laser weapon? No ship in the fleet used such a device to his knowledge, their range made them useless at the distances that UNN ships usually engaged at. They would also scatter in an atmosphere, severely diminishing their lethality beyond a few feet.\n\n\"Thanks for watching my back there, Bullseye, that was a hell of a shot.\"\n\n\"That wasn't me,\" he replied, turning about and making for the edge of the asteroid field. As curious as he was, he didn't want to be sitting around scanning when more Bugs showed up.\n\n\"If it wasn't you, then who was it?\"\n\n\"I don't know, it looked like some kind of laser.\"\n\nThe radar was next to useless, it was impossible to distinguish ships from random pieces of rock. But if something had been firing off lasers, then it should show up on the thermal scans. He kept an eye on the display as he maneuvered between the asteroids, hoping that he could find something before he went out of range. There! A heat signature, the red blip appearing on his HUD. He turned his head and zoomed in on the area of space. He couldn't see anything, just blackness.\n\nAs he stared, there was a flurry of colored lights. They flashed in a wave, blues and purples moving from left to right like a neon sign outside a nightclub. It illuminated something metallic, a ship maybe, but it was so far away and so faint that he couldn't get a good idea of its size or shape.\n\n\"What the hell is...\"\n\nHe couldn't keep his eyes on it, he had to focus on the asteroids that were currently flying at his face. Hoping that the mysterious weapon didn't start firing at him too, he followed Baker to the edge of the Oort cloud. When they were clear of the asteroids, the reinforcements appeared, joining them in formation as they made their way back to the Rorke.\n\n\"You guys took your sweet time,\" Baker complained, \"you missed the fight.\"\n\n\"Don't tell me that Bullseye actually hit something,\" one of the other pilots said, it sounded like Boomer.\n\n\"He saved my ass is what he did.\"\n\n\"This time I'm only about seventy-five percent responsible for saving Baker's ass,\" Jaeger replied. \"There was something out there, something I've never seen before.\"\n\n\"What are you talking about?\" Boomer asked. \"Some kind of new Bug design?\"\n\n\"Well, that too, yeah. But there was a ship out there, colorful, I don't know how to describe it. Something fired a laser weapon that destroyed the last Bug ship that was tailing Scorch, melted through it like a blowtorch. I saw the beam hold on it for a few seconds, and then it vanished. I picked up a thermal, but all I could see were these weird, flashing lights.\"\n\n\"Who uses laser weapons?\" Scratcher asked skeptically.\n\n\"Nobody that I know of,\" Jaeger replied. \"Maybe UNNI is testing something new out here?\"\n\n\"The Ninnies?\" Baker added, \"no way. If anything, a laser weapon sounds like a downgrade over what we already use.\"\n\n\"Maybe they found a new way to focus the lens or something?\" Boomer suggested, but he didn't sound very convinced.\n\n\"When we get back to the carrier, I'll see if my cameras picked anything up,\" Jaeger said. \"If I saw it, then something must have shown up on the video feed.\"\n\nCHAPTER 2: FIRST CONTACT PROTOCOLS\n\n\"You wanted to see me, Captain?\" Jaeger asked, standing to attention as he stepped through the automatic door into the briefing room. Before him, Captain Fielding of the Rorke and several other high-ranking personnel were sat around a circular table, a hologram of the asteroid field projecting from its center. Fielding gestured for the pilot to be at ease, his hand gloved in the same pristine white as his uniform, Jaeger relaxing as he waited for further instructions. A few of the other attendants were also dressed in white, indicating that they were the captains of some of the support ships. Others were wearing the standard Navy blue, or the yellow of the engineering corps.\n\n\"We've read your report concerning the incident in the Oort cloud, Lieutenant Jaeger,\" Fielding began. \"I wondered if you might give us a more...personal account of what you saw.\"\n\n\"Of course Captain,\" he replied. He proceeded to go over the details of everything that he had seen in the asteroid field, the glittering green laser that had burned through the Bug vessel, the flashing colors in hues of blue and purple. When he was done, he glanced nervously around the table, hoping that they weren't about to ground him for a psych evaluation.\n\nThe Captain tapped at a touchpad that was embedded in the table, and then the hologram shifted, showing a three-dimensional image of one of the Bug ships.\n\n\"Fortunately, your railgun's targeting optics were tracking the enemy vessel when the laser hit it,\" Fielding said. \"Watch closely.\" He advanced the recording frame by frame, everyone leaning in as they concentrated on the flickering video. They gasped and muttered as the feed suddenly warped, corruption and digital artifacts tearing up the recording. \"The green beam that you claim to have seen isn't visible on the camera. However, the light that it emitted seems to have damaged the recording. If we advance the footage, we can clearly see where it impacts the dorsal armor of the Betelgeusian fighter and begins to melt through it...here.\"\n\nHe paused the video again, then zoomed in on a spot on the metallic armor. It was blurry and pixelated. The target had been far away, and the resolution wasn't great, but Jaeger could clearly make out an orange glow. The Captain advanced the video by another few frames, the armor slagging and becoming molten as the laser burned through it. A murmur passed around the table, a few of them glancing at Jaeger. They had probably been doubting his field report.\n\n\"Chief Engineer Campbell, what can you tell us about this weapon?\" the Captain asked as he gestured to a man wearing yellow overalls. The engineer stood, scrutinizing the still picture for a few more moments.",
        "\"You said that the beam was green?\" he asked, directing the question towards Jaeger who nodded in response. \"In that case, my guess would be a very high wattage neodymium laser, continuous rather than pulsed it looks like. We use these lasers ourselves, mostly for medical purposes and for laser targeting equipment, but nothing this powerful.\"\n\n\"So we have this technology?\" a man wearing blue who was sitting across from him asked.\n\n\"Yes,\" Campbell continued, \"but it's not very effective as a weapon. Lasers have some value for point defense applications, but generally speaking, the range at which most fleet engagements take place renders them next to useless for offensive purposes. The problem with lasers is that they tend to scatter, the beam is dispersed as it passes through a medium and encounters microscopic particles. Let's say you fire a laser beam in an atmosphere, every droplet of water and mote of dust that it encounters is going to refract the light, which dramatically reduces the amount of photons that actually reach their target. That results in a huge damage falloff, and even in the vacuum of space, there's plenty of gas and dust particles that can interrupt the beam. That's the only reason that a laser beam is ever visible, because of scattered light that's being flung out of the beam by collisions. One solution is to increase the power of the laser so that even with scattering, the light that reaches the target is still enough to be lethal. But as the range and the density of the medium increases, so too do the power requirements. It's just not an efficient weapon.\"\n\n\"This one seems to be working pretty well,\" the man added.\n\n\"It's probably wasting an enormous amount of energy,\" the engineer shot back.\n\n\"If I could have your attention again, gentlemen?\" Fielding asked. He moved his hand back to the touch screen, the display shifting once more. Jaeger recognized this new recording as the view from his helmet, looking back over his shoulder as he zoomed in on the area of space where he had picked up the heat signature. He waited with bated breath for the flash of purple light, hoping against hope that it had been in a spectrum that the cameras could capture, unlike the laser beam.\n\nIt was faint, barely larger than a fingernail at such extreme range, but the flurry of colored lights was clearly visible.\n\n\"What the hell is that?\" Campbell asked. \"Can you enhance it, Captain?\"\n\nFielding blew up the picture, and again the low resolution meant that the resulting image was blurry and pixelated, then he paused the footage as the blue light appeared. It was illuminating the hull of the ship around it, not by much, but enough to make out a vague shape. He played the video in slow motion, a light like a strobe moving from left to right in a wave, passing through different hues of azure and magenta.\n\n\"Captain, if I may?\" Campbell asked. Fielding nodded, stepping away from the touchpad as the engineer took his place. \"If we can take snapshots of the footage and overlay them,\" he began, \"then we should be able to...\"\n\nJaeger watched as Campbell manipulated the footage, taking screenshots and overlaying them one on top of the other as the wave of light passed along the side of the vessel. What resulted was a single view with the entire band illuminated, along with the rough outline of the ship itself, the light reflecting off the hull.\n\n\"What kind of ship is that?\" one of the other captains mused, leaning across the table to get a closer look.\n\n\"I've never seen anything like it,\" Campbell replied. \"The UNN has no ships with a hull shaped like that to my knowledge.\"\n\nIt was seen side-on, and so the exact composition of the wings was uncertain, but the shape of the hull was unlike anything that Jaeger had seen before. It was curved and smooth, almost teardrop-shaped, while UNN ships of that size were usually blockier and more angular. He couldn't make out any details beyond the vague outline, and the light seemed to be emitted by some kind of panel that was mounted along the flank of the vessel. Why would a ship have a need for something like that? Decoration? Communication?\n\n\"What's the name of this system again?\" the Captain asked, \"I can never remember these damned numbers...\"\n\n\"We're currently on the outskirts of HD-217107, roughly sixty-four light-years from Earth,\" one of the men sitting at the table volunteered.\n\n\"Out in the sticks,\" Fielding grumbled. \"Coalition space is a bubble about a hundred light years across, and we're right on the edge of it. Has this system been surveyed for habitable planets?\" He looked around the table as he waited for a reply, but nobody had an answer for him. Instead, he hunched over his touch screen, spending a minute or two digging through files. \"Ah, here we are,\" he said as he stood up straight again. \"Two gas giants detected, no terrestrial planets.\"\n\n\"It's possible that the astronomers missed something,\" Campbell suggested. \"At this range, most planets are detected using transit photometry, measuring the light of a star to see if a planet passes in front of it. Usually, when they detect something the size of a terrestrial planet, they send a survey vessel to check it out. If they only picked up gas giants here, and no rocky planets, then they probably struck it off as a potential colony system.\"\n\n\"Or that these guys are from another system entirely,\" one of the captains added. \"Should we enact first contact protocols?\"\n\nFielding considered for a moment. First contact protocols affected the entire fleet, it wasn't an order to be given lightly. When operating in what might well be alien territory, measures had to be taken to avoid potential misunderstandings and confrontations. The last thing they needed was a war on two fronts. That said, the Betelgeusians were also in the system, and getting shot out of the sky by some weird variation of Bug ship because you couldn't get a positive ID on it wasn't much better.\n\n\"I don't think we have a choice,\" he finally replied. \"Enact first contact protocols across the fleet. Let's hope that this goes better than first contact with the Borealans...\"\n\nJaeger looked about the table, everyone seemed just as nervous as he currently felt. First contact protocols meant that nobody could fire at an unidentified vessel unless they were first fired upon. If hostile action was taken against UNN ships, such as a shot across the bow or a target lock, then they were expected to give way and retreat to a safe distance. Absolutely no aggressive measures were to be taken against alien ships unless they were confirmed hostile. The problem was that if someone shot at you, you might not get the chance to shoot back. Jaeger also knew that they would have to watch that fucking video again...\n\n\"You're all dismissed,\" Fielding said, the hologram flickering off as he left the table. \"Get back to your respective vessels and spread the word, FCP is in full effect. I don't want a single round fired unless you can get a positive ID on a Bug ship, and by positive I mean ironclad. There's a good chance that we're trespassing in someone else's airspace right now.\"\n\nThere was a chorus of affirmations, and then everyone began to file out of the room. Fielding stopped beside Jaeger as he passed by, placing a gloved hand on his shoulder.\n\n\"I want your squadron out on another patrol as soon as your fighters are spaceworthy again,\" he said. \"If we got a look at them, then these aliens have probably gotten a good look at you too, which means they'll likely recognize an FS-26 the next time they see one. If they're out here hunting Bugs the same as we are, then we might have a potential ally here. Make sure the next time you boys meet one, everything goes down smoothly.\"\n\n\"Yes Sir,\" Jaeger replied with a salute.\n\n***\n\nThe sound of chair legs squealing against the deck was deafening as Jaeger took a seat beside Scratcher, Baker sitting down next to him as they joined the other three hundred or so crew members who were waiting for the presentation to begin. The mess hall had been cleared, all of the tables had been pushed out of the way, and someone had brought in a projector that had been set up at the front of the expansive room. Above their heads was a maze of criss-crossing pipes, wires, and air ducts that reminded Jaeger that he was in a giant tin can. As large as the carrier was, over a thousand feet long and with a mass of a hundred thousand tons, it somehow still managed to feel cramped. Along with the hangar, the mess was one of the largest rooms on the vessel. As many people as there were crammed inside it, this was only a tiny fraction of the six thousand strong crew compliment, the others would be cycled in and out as their duties allowed for it. Jaeger could see blue and yellow uniforms, humans and towering Krell, even a handful of feline Borealans who looked even more surly than usual.\n\nThe sound of a hundred muttered conversations died down as an executive officer walked in and stood to attention before them.\n\n\"Quiet down! As many of you know, Captain Fielding has enacted first contact protocols. This isn't a situation that any of us expected to be in, but it's crucial that every single one of you understands exactly what it means, and what your responsibilities are.\"\n\nHe gave the pack of six Borealans a pointed look, their furry ears twitching with irritation. The aliens didn't make good pilots, but they were formidable shock troopers, boasting superhuman strength and resilience. They had claws like meat hooks on their fingers, their eight-foot frames cloaked in fuzzy fur and muscle, old scars visible on their faces and exposed forearms. There were always mad cats on carriers, just in case they were tasked with boarding an enemy ship or leading a landing party. They were about as sociable and as well adjusted as their appearance suggested.\n\n\"Now you're all going to watch the video,\" he continued, a groan passing through the crowd of personnel. \"Don't give me that, I know half of you have probably forgotten most of this shit by now. Pay attention, and let's all do our best to avoid accidentally starting an interstellar war, shall we?\"\n\nHe stepped aside and took a seat at the front, examining the touchpad that he was holding for a moment before pressing a button on it. The projector came to life, a device about the size and shape of an ammo crate projecting a hologram into the air above it, filling the available space. The image quality didn't even come close to that of an actual monitor, it was washed out and slightly transparent, but it was big enough that everyone in the room could see it clearly. There was a hiss as the built-in speakers came online, and then the fuzzy cloud of colors took shape, the giant image of a man in a blue uniform shown from the chest-up appearing before them. There was a line of white text superimposed across the center of the picture, First Contact: What You Need to Know.\n\n\"The Galaxy is a big place,\" the presenter began, the camera zooming out to follow him as he strolled across a terrible bridge set with a shit-eating grin on his face. \"Nobody truly knows what lies out there beyond the stars,\" he continued as he leaned on a nearby console, actors playing the roles of bridge crew randomly pushing buttons behind him. \"But we can take a few simple precautions to ensure that if we do come across something alien and unknown, we can minimize the potential risks.\"\n\n\"Sir,\" one of the women who was manning a flimsy approximation of a comms station began, \"we're picking up an unknown vessel in the system!\"\n\n\"An unknown ship,\" the presenter continued as he addressed the audience, pausing for dramatic effect. \"We need FCP, first contact protocols!\"\n\n\"But what are first contact protocols?\" another of the phony bridge crew asked, walking in awkwardly from out of frame and eliciting stifled laughter from the room.\n\n\"I'm glad you asked,\" the presenter replied, \"FCP is something that we all need to understand when operating in uncharted space. There are more stars in the Galaxy than there are grains of sand on every one of Earth's beaches combined.\"\n\n\"That's a lot of stars!\" the crewman added, his stilted performance causing another wave of snickering to pass through the mess hall.\n\n\"Indeed it is. Around each one of those stars, there might be planets, planets which might harbor complex life. Odds are that there are thousands, even tens of thousands of advanced civilizations in our own backyard, and the further we venture into space, the more the odds of us encountering them increase. They might be friendly, like our allies the Krell.\"\n\nA still image of a Krell appeared on the hologram, the giant reptile sharing an Olympic swimming pool with its human neighbors, cruising along one of the lanes with only its snout and the hump of its armored back protruding from the water like a giant crocodile. One of the Krell in the audience rumbled happily, the sound making Jaeger's bones vibrate. Whether he appreciated the positive portrayal of his race, or if he just recognized that there was another Krell on the display was unclear.\n\n\"Or...they might not be so friendly.\"\n\nThis time a picture of a Betelgeusian drone appeared on the display, a bipedal insect about five feet in height, its vaguely humanoid body sheathed in a tough exoskeleton that shone in iridescent hues of blue and green. It had two pairs of arms, the upper pair longer and thicker than the secondary pair, which protruded from about where the ribs would have been on a person. Its thorax seemed to be split into two bulging segments, and there was layered armor covering all of its joints, whether artificial or natural in origin was hard to tell. The face was almost featureless, the head round and smooth. It had two large, compound eyes that glittered in the light, and a set of cutting mandibles where the mouth would have been. Sprouting from its forehead was an ornate antler or horn, branching off almost like the limbs of a tree.\n\nNobody needed to be reminded why the Coalition wasn't on friendly terms with the Betelgeusians, the alliance had been assembled for the sole purpose of stopping their incursions into civilized systems.\n\n\"The most important task when interacting with an unknown species is to avoid confrontation,\" the presenter said, turning to the comms operator again as if anticipating her next line.\n\n\"The unidentified vessel is locking onto us!\" she exclaimed, \"take evasive action!\"\n\n\"Delay that order,\" the presenter said with a dramatic wave of his hand, turning back towards the audience once again. \"Locking might not be a hostile action, they may simply be targeting us with their sensors in an effort to find out what we are. Always keep in mind that in their neck of the woods, it's we who are the aliens. Always err on the side of caution, and don't assume hostile intent without good reason.\"\n\n\"Their weapons are powering up, they're bringing their forward guns into range!\" the operator continued.\n\n\"Don't act rashly!\" the presenter warned. \"Territorial behavior is a natural response in this situation, after all, how would you like it if someone came into your home uninvited? If the aliens show signs of aggression, back down, deescalate the situation. Let them know that you didn't travel across the stars to start a fight with them. If you must retreat, then retreat. The only circumstance that permits you to fire on an unidentified vessel while FPC is active is if you are being actively engaged. Always remember the three Ds,\" he added as the words scrolled across the shot one by one. \"Deescalate, diffuse, disengage.\"\n\n\"The vessel is signaling us,\" the comms officer said, and what followed was a distorted voice listing off nonsense words that were intended to represent an alien transmission. The presenter started to speak again, pointing to his ear.\n\n\"Communicating with an unknown species will be difficult, and it may even be impossible. What if they see in different wavelengths of light than we do, what if they hear at different frequencies? What if they're entirely deaf, and they communicate only through pheromones? They may be incapable of speech, or their concept of communication may have no equivalent in our experience. They won't understand common gestures and non-verbal communication either. Shaking your head to indicate no or waving as a greeting might seem self-explanatory to you, but it won't be to them! It might even frighten or startle them, so try not to make any sudden moves or violent gestures.\"\n\n\"They want to come aboard, Sir,\" the woman added. \"What should we do?\"\n\n\"If you manage to reach this stage, it will likely be under the supervision of your ship's captain, but let's assume for the sake of this demonstration that you have to make these decisions yourselves. Perhaps you're exploring an uncharted planet, and you've encountered sentient natives...\"\n\nThe bridge set vanished as the video cut to a forest scene, clearly not an alien jungle, but a national park on Earth. A group of Marines in black combat armor walked into the flat shot from the right, the leader holding up his fist and indicating for the rest to stop. From the trees to the left emerged what looked like a B-movie alien, or something from a low-budget TV show. It held its arms out in front of it as it took exaggerated steps towards the soldiers, the mess hall erupting with laughter. The XO stood and turned to look back at them angrily, putting his finger to his lips as he gestured for the crew to be quiet.\n\nOne of the Marines raised his rifle and pointed it at the creature, but then the presenter appeared once again, leaping out from the background with almost comedic timing and standing between the two.\n\n\"Stop! Just like in space, never assume that actions are hostile without good reason. If an alien attempts to invade your personal space, back away. If you can't back away, push it back gently and make it obvious that you don't want to be touched. Remember the three Ds,\" the presenter repeated as he held up three fingers and counted off. \"Deescalate, diffuse, disengage.\"\n\nThe Marine demonstrated, letting his rifle hang from its sling as the monster approached. He placed his hand on the alien's chest, the other resting on his sidearm holster, gently pushing it back. After a couple of pushes, the pretend alien got the picture, keeping its distance. Jaeger tried to imagine someone trying that maneuver with a Borealan, they'd probably lose the arm...\n\n\"If the alien becomes hostile, retreat if you're reasonably able to do so, and avoid responding with violence. You're on his turf, keep that in mind.\"\n\nThe fictional alien advanced, waving its arms aggressively, and the squad of Marines began to retreat as they kept their rifles trained on it.\n\n\"As UNN personnel, you are representing your entire species, so do your best to make that first impression a good one!\"\n\nThe forest scene faded out, and this time it was replaced with a wall of text listing off regulations and rules of engagement.\n\n\"Now we will review the rules of engagement and the clauses of the UN charter,\" the disembodied voice of the presenter said. Another wave of groaning passed through the room, this time the XO was the only one who was laughing to himself.\n\n***\n\n\"I thought that fucking video would never end,\" Baker groaned, walking beside Jaeger as they filed out of the mess hall along with the other personnel.\n\n\"I see why they like to show it to us,\" Jaeger said, dodging around a passing engineer who was hurrying off in the other direction along the cramped corridor. \"ROE generally goes out the window when you're fighting Bugs. They don't surrender, they don't have anything like the Geneva Conventions, they don't shy away from using chemical and biological weapons. I guess some of the guys need a refresher, reminds them that there are supposed to be rules in war, even if they're only on paper most of the time.\"",
        "\"Some Bugs surrender,\" Baker replied with a shrug. \"You hear about what happened on Jarilo?\"\n\n\"Oh yeah. They caught a colony early, and the roaches gave up, right?\"\n\n\"That's what I heard, yeah. Don't know the details, it's all been very hush-hush. But of course, rumor gets around.\"\n\n\"Well, I've never heard of a Bug giving up. A drinking buddy of mine who's in the Marines told me that when he was deployed on Kruger III, he found a Bug on the battlefield after a CAS run that had been ripped in half at the waist. The main guns on those Penguins just chew up infantry. The thing had one arm left, and it was still trying to fire at him with a plasma pistol. They're not even sentient I don't think, no more than an ant or a termite.\"\n\n\"So the brass really thinks we'll be meetin' aliens?\" Baker asked skeptically, \"I mean...even you ain't sure what you saw out there.\"\n\n\"I know that I saw something, I'm just not sure what it was. Seems like they're serious about it though, this FCP shit is nothing to joke about, it really fucks us over. You know how fast Bugs react, sometimes the element of surprise is all you have. If you waste it scanning them, they're going to spin around and drill you a few new exhaust ports.\"\n\nThe carrier was cavernous, the winding corridors and packed rooms stretching for literally miles. It was like being inside a giant submarine, and as huge as it was, everything still managed to feel claustrophobic. It was large enough that the bigger aliens like the Krell and the Borealans could get around. The ceilings were high enough that they didn't have to duck too low to avoid hitting their heads on pipes, and the passageways were wide enough that they could pass one another, but only barely. The Rorke was so large, and the crew were often stationed on it for so long, that it even had its own general store where they could buy things like snacks and drinks. Jaeger made a beeline for it, turning corners and passing innumerable side rooms. Every few feet there was a pressure door, intended to seal shut in the event of a decompression to prevent the whole ship from blowing all of its atmosphere into space. There were almost no bare surfaces in sight. The deck was covered in panels that opened up to grant access to internal systems, snaking wires and pipes decorated the walls and ceiling, miscellaneous electronics clinging to every available surface.\n\nJaeger hated it, it was like a giant, flying coffin. Yet it was the only way to see action as a fighter pilot. He had to endure the weeks or months of boredom and claustrophobia, just for those few hours of freedom. There was nothing like it, zipping through the emptiness at speeds that only a bullet could reach in atmosphere, with only his ship and his wits to rely on.\n\nThey came to a stop beside the line that had formed outside the store, Jaeger rummaging in his pocket for his tablet computer. He turned the handheld device on and tapped at the wafer-thin screen for a few moments, checking his account. When you were a dozen light years out from any civilized planet, you couldn't exactly access your bank account, and so the crew deposited their money into a Navy credit account for use during their deployment. He still had a fair amount left, he'd have to remember to top it up again next time they were in port. It would likely be several months yet. He couldn't imagine surviving one of these tours without enough sugar and nicotine to knock out a Polar.\n\n\"So what did they talk about in that meeting they dragged you off to?\" Baker asked, leaning against the bulkhead with his hands in the pockets of his jumpsuit as he made small talk. \"Or is it all classified?\"\n\n\"They just wanted to hear my report in person,\" Jaeger explained, keeping his eyes on his tablet as he thumbed through the messages. There was no internet connection on the carrier either. Even at the speed of light, a signal from the nearest inhabited planet would have taken decades to reach them this far out, but the vessel had an intranet that allowed the crew to communicate and access media.\n\n\"It's been five or six years since we made contact with the Borealans, right?\" Baker continued. \"And before that, it was about twenty-five years since we met the Bugs and the Krell.\"\n\n\"And the Brokers,\" Jaeger added.\n\n\"Yeah, right. So that's...what? Four alien species in thirty years? Doesn't that seem too low? Think about all the explorin' we've done since then, we've traveled about a hundred light-years from Earth in every direction and we ain't seen shit for years. Where's everyone hidin'? Didn't the guy in the video say that there were probably tens of thousands of sentient species in the galaxy?\"\n\n\"I mean, we've found life,\" Jaeger added with a shrug.\n\n\"Yeah, animals and moss and shit like that. Fish and bacteria, nothing smart.\"\n\n\"The galaxy is a big place, I guess everyone is just spaced really far apart. That or the Bugs got to them before we did. We first encountered them at Betelgeuse, but nobody knows where they really come from. They could have colonized half the Galaxy for all we know.\"\n\n\"Well I hope we meet some more aliens,\" Baker grumbled, pulling his hand out of his pocket and idly scratching his nose. \"I want to be there, y'know? I was one year old when we joined the Coalition, I had only just joined the Navy when we met the mad cats. It's a once in a lifetime thing, I want to see it happen.\"\n\n\"Careful what you wish for,\" Jaeger muttered, looking up from his tablet. \"There's no guarantee that they'll be friendly.\"\n\n\"Well they saved my ass, didn't they?\"\n\n\"Yeah, but that might not be because they're on our side, they might just hate the Bugs more than they're worried about us.\"\n\n\"The enemy of my enemy is my friend,\" Baker stated confidently.\n\n\"You know that the guy who came up that saying was assassinated, right?\"\n\nCHAPTER 3: HIVE AND GO SEEK\n\n\"So how do we find a needle in a haystack?\" Boomer asked, Jaeger glancing out of his canopy at the formation of three fighters that were lined up beside him. The dim glow from the nearby star reflected off their angular, stealthy hulls, like black glass when they caught the light. Only their canopies were illuminated, the glow of control panels and readouts lighting up the tiny pilots like someone holding a torch beneath their face while telling ghost stories around a campfire.\n\nThey had been tasked with scouring the Oort cloud for more Bugs, the Beewolf fighters small and light enough to cover a decent amount of ground. Pretty much every bird was in the air, split into groups of four and tasked with searching for contacts amongst the asteroids. They were skirting the wall of ice and rock right now, running long-range scans to pick up thermal radiation or any strange emissions.\n\n\"We got lucky last time,\" Jaeger said, \"we have a vague idea of where they might be hiding. Those fighters that we encountered were short-range, which means there's a hive ship somewhere nearby. Find the hive ship, kill it, and we kill the Bug fleet. They can't operate without it.\"\n\nWhen Bug fleets took to the stars to colonize a new planet, as was part of their life cycle, they did so in one or more hive ships that were roughly equivalent to a carrier. The massive organic ships were not only used to transport other vessels and personnel, but also the crucial supplies necessary for founding a new colony. A hive fleet was both dangerous and vulnerable at the same time. It was the stage of their life cycle when the Bugs were at their most aggressive, but at the same time, they were at their most exposed. Kill enough of the hive ships, and you would negate their ability to found a successful colony.\n\n\"Unless they've already colonized the inner planets and there are a billion of 'em further in-system,\" Baker muttered.\n\n\"Not likely,\" Jaeger said, \"there'd be a lot more activity if that were the case. Besides, I heard that there aren't any habitable planets in this system, only a couple of gas giants.\"\n\n\"Doesn't mean they can't colonize the moons.\"\n\n\"That isn't our problem right now,\" Scratcher chimed in, \"just keep your eyes on your sensors. If we pick up anything bigger than a fighter, we're supposed to call in backup. And make sure you get a positive ID on it before you call in the whole fleet.\"\n\n\"Yeah, y'all remember your three Ds,\" Baker scoffed. \"Be nice to the aliens.\"\n\n\"I prefer double-Ds,\" Boomer added.\n\n\"That's Scratcher's line,\" Baker chuckled. \"Remember the cans on that Borealan he got caught with? Bigger'n his head, they were.\"\n\nScratcher's voice came through on the radio, attempting to talk over their laughter.\n\n\"Alright, alright. Keep your heads in the game, guys.\"\n\nThe chatter quietened down for a while, but there wasn't much to do or see out here, the sky was pitch black save for the twinkling of the far off stars. Contrary to popular belief, many of the beautiful nebulae and clouds of colorful gas that people imagined when they thought of space weren't in the visible spectrum. They might be seen through telescopes and other such devices, but not with the naked eye. To their left, the infinite wall of rocks passed them by. They were traveling at immense speed, and it was hard to get a frame of reference without checking the counter on the console.\n\nAfter maybe an hour of cruising, Jaeger picked something up on his scope, a heat blip somewhere in the asteroids.\n\n\"Eyes up people,\" he called out, alerting his companions. \"Picking something up on the infrared band. Something out there is kicking out a lot of heat.\"\n\n\"I got it,\" Baker added, \"it's hotter than the fighter we found yesterday.\"\n\n\"Peel off and spread out,\" Jaeger said, \"we're going in for a closer look.\"\n\nHe gripped the stick, hitting the forward thrusters to shed velocity, straining against the straps that kept him secured to his seat. His squadron did the same, the thrusters on their bellies flaring and their engines burning brightly as they banked towards the asteroids one by one. They maintained formation, but they put some distance between the fighters, making themselves more difficult targets. Jaeger joined them, every change in velocity causing G-forces to tear at his body. He watched the small map in the bottom left of his visor that showed the locations of the other fighters relative to him, along with the red blip that they were now racing towards. The amount of heat either meant that whatever it was had been burning hard, or it was larger than what they had encountered the last time...\n\n\"Remember, don't take any hostile actions until you can confirm that it's a Bug ship,\" Scratcher said. His voice sounded strained, they were still shedding velocity as they neared the cloud. \"Or if it starts fucking shooting at you, either way.\"\n\n\"They aren't going to give us the same courtesy,\" Jaeger warned, \"be careful.\"\n\nThe loose formation of fighters slowed enough that the asteroids were navigable, each vessel making tiny adjustments with bursts of gas from their thrusters as they avoided the debris, perpetually rolling and dodging as they advanced deeper. It was enough of a challenge to keep from crashing without having to keep their eyes out for the enemy too.\n\n\"Can we extend our railguns?\" Boomer asked, \"is that considered aggressive?\"\n\n\"Fuck that,\" Baker replied, \"I'm goin' hot.\"\n\n\"Alright, but don't point it at anything until we get a positive ID,\" Jaeger said as he flipped the guard on his trigger. There was a rumbling sensation that reverberated through his boots as the hatch on the back of his ship opened, and the railgun arm extended, the targeting reticle appearing on his HUD.\n\n\"Fuck!\" Baker exclaimed, Jaeger's heart racing as he looked around for where the attack was coming from. \"Fucking rock bounced off my wing,\" he added.\n\n\"You asshole, Baker,\" Jaeger complained. \"Maintain radio silence unless you see something.\"\n\nThis time the heat signature wasn't fading, and the four fighters slowly maneuvered through the asteroids as they neared the source. One of the larger rocks slowly rotated amidst the cloud of debris, it must have been a few kilometers wide, jagged and pockmarked from a millennia of collisions. Jaeger pointed his scanners at it, watching as his computer drew a wireframe image of the object and overlaid it on top. The desire to target his railgun was strong, instinctual, he had to make a conscious effort to keep his finger away from the trigger as he scoured the surface of the rock for activity.\n\n\"There! Got something,\" Scratcher announced. \"Feeding you video.\"\n\nScratcher's ship was out of view, but he must have a clear line of sight, because Jaeger began to receive a video feed that appeared in a window in the top right of his HUD. It showed a grainy image of a rocky outcrop, what little light that actually made it from the system's star casting it into stark shadow. It was hard to get an idea of the size with no point of reference and no atmospheric haze, it could have been the size of a snowdrift or a mountain.\n\n\"I'm gonna shine my floodlight on it,\" Scratcher said, and then the feed was lit up by a bright light. It looked like there was ice beneath the outcrop, reflecting in the camera, but there was something else there too. Lodged beneath the lip of rock like an insect hiding beneath a log was...a thing. It had a long, segmented body like a mantis shrimp or a lobster, tapering into a kind of thick tail. The armor was shiny and iridescent, hues of red and orange illuminated by the beam. Beneath it were dozens of insectoid legs of varying lengths, anchoring it to the dusty surface of the asteroid, the ones towards the bulbous front of its body longer and covered in what looked like large hooks. Each segment of its long tail had strange bulges protruding from it, two on each one for a total of maybe ten, a glint of metal reflecting off them. It didn't really have a defined head, but there was a bundle of what looked like wiry antennae and compound eyes hidden beneath the lip of its shell, twitching and shifting as Scratcher's floodlight disturbed it.\n\nThey didn't need to scan the thing to know that it was of Bug origin, and the video feed showed Scratcher's guns firing as he began to pull back. Jaeger was already checking his position on the map, spinning his Beewolf's nose towards his friend and gunning the engine. Acceleration crushed him against the padding of his seat as he opened his gun port and armed his missiles.\n\nThe flashes of gunfire and the orange bloom of explosions appeared in the distance, Jaeger decelerating so as not to overshoot, the G-forces buffeting him in his cockpit like he was riding a mechanical bull. Slowing down went against his every instinct, but in space, you didn't shed velocity once you eased off the throttle, you just kept going. He gritted his teeth, swinging his vessel to face the enemy as he drifted sideways, the computer doing its best to compensate with bursts from the thrusters.\n\nThe thing was huge, far larger than it had appeared on the video. Compared to Scratcher's tiny fighter, it looked to be about as big as a frigate, at least a hundred and fifty meters long. The little speck was retreating as the monster rose from its hiding place like a Kraken, spraying it with lines of glowing tracer fire that ricocheted off its armored hull and peppering it with missiles. Jaeger joined the fight, locking on with his railgun and unloading into the massive target, relying on the computer to handle targeting as he focused on positioning. The two other fighters soon came into range, but it was immediately apparent that they lacked the firepower to take this monster on.\n\n\"Don't waste your missiles!\" Scratcher said, \"it's too big. We need to call in backup!\"\n\n\"What do we have that can kill this thing?\" Baker asked. \"Torpedo boat?\"\n\n\"I'm calling it in,\" Jaeger said, switching channels hurriedly. \"Mayday, mayday. This is Bullseye, come in control.\"\n\n\"This is control,\" a woman's voice crackled in his ear, \"report.\"\n\n\"Have encountered a large Bug vessel hiding in the belt, too big for us to deal with. We need immediate support, this thing is the size of a frigate.\"\n\n\"Roger that, Bullseye, please hold.\"\n\nPlease hold? Easier said than done, he thought, watching as one of the creature's long forelimbs swiped at Scratcher. The Beewolf dodged out of the way, lines of thrusters flaring along the sides of the Bug vessel's segmented body like green candles as it rose higher from the surface of the asteroid, its many legs tucking beneath its body.\n\n\"Come in Bullseye,\" control said.\n\n\"Bullseye here, go ahead.\"\n\n\"Redirecting the UNN Baskeyfield to your position, stand by.\"\n\nThe Baskeyfield, that was one of their torpedo frigates, it should be able to get the job done. They just had to hold out long enough for backup to arrive. Its engines were far larger and more powerful than those of the Beewolfs, resulting in a much higher top speed, but it had a lot more tonnage to move around. It would take longer to both accelerate and decelerate.\n\n\"Can I get an ETA on that, control?\"\n\n\"Ten or fifteen minutes, Bullseye.\"\n\n\"Frigate is on the way in fifteen, guys,\" he said as he switched channels. \"Let's try and draw it out of the asteroids so that the torpedoes can get a lock on it.\"\n\n\"Watch the reach on its arms,\" Scratcher said, grunting as he accelerated away from the biological spaceship. It flicked out one of its massive forelimbs again like a praying mantis, the barbs that lined it as long as a person was tall. It looked slow, but that was an illusion due to its size, Scratcher only just getting out of range of it as the limb missed him by a hair. Its spindly antennae twitched, its wet, glistening eyes shifting independently of one another as it tracked the different fighters. Didn't it have missiles, plasma guns, projectile weapons of any kind? What was its purpose? Did it fill some kind of non-combat role, like harvesting ice or other raw materials to take back to the hive ship?\n\nEveryone kept their distance, backing off as the thing chased them, moving sluggishly through the asteroids due to its immense size. It was large enough that it could just knock any rock smaller than itself out of the way, pushing them aside with its limbs and letting them bounce off its tough shell. Unlike the hull of a traditional spaceship, the Bug's body was organic and flexible, which gave it an advantage in this kind of environment.\n\n\"The cannons ain't doing shit, keep hittin' it with the railguns,\" Baker said. The carapace might be too thick for the conventional ammo to penetrate, but the tungsten slugs from the railguns were definitely getting through. They might get lucky and hit the pilot, or an internal organ, or whatever the hell was lurking beneath that shiny shell.\n\nOne would expect shouting and panic in the heat of battle, but everyone stayed remarkably calm. There was something impersonal about space combat, the distances involved, the relative tranquility of the sealed cockpit in which the only sound to be heard was that of your own instruments.\n\n\"Keep pulling back,\" Scratcher said. \"If we can lure him into open space, then he'll be vulnerable.\"\n\nThe fleshy humps along its segmented back and tail began to wriggle, the movements immediately drawing Jaeger's eye.\n\n\"Somethin' weird is happening,\" Baker exclaimed, \"look at it's back!\"\n\nHe watched in horror as something living crawled out of one of the humps. Segmented legs gripped the shell of the creature, pulling its bulbous body out from beneath a fleshy hood, like a maggot emerging from a wound. It was one of the fighters that they had encountered the day before, its carapace lined with metal armor, its compound eyes reflecting the light. It looked like it had been living inside the hump on the larger vessel's back, like some kind of parasite.",
        "\"It's some sort of carrier!\" Jaeger exclaimed, \"there must be ten of them on its back! Break off!\"\n\nMore of the insectoid fighters pulled themselves from their organic hangars. Each one had a differently colored hull, birthed into space along with gas and fluids that froze into sparkling, crystalline clouds. Had they been refueling? Feeding on the larger vessel in the same way that a ship might siphon chemical fuel from a tanker?\n\nFlashes of green light reflected on the curved carapace of the carrier as they blasted off, angling themselves towards the Beewolfs, their spindly legs tucking beneath their bellies and their glittering eyes fixed on their targets.\n\nChaos ensued, the Bug fighters scattering in all directions as they made for the Beewolfs, the human vessels scrambling as bursts of glowing plasma fire and tracer rounds lit up the darkness. Missiles left chemical trails in the sky as they burned towards their targets, impacting on rocks or exploding the Bugs into clouds of shattered carapace and organic mush, bright flares shooting out in mesmerizing patterns as the UNN ships took evasive action.\n\nJaeger veered off, disabling his safety limits as he burned away from the melee. His railgun continued to the track the enemy vessels, rotating and twisting on its arm as the Beewolf dodged and rolled.\n\nThree of the Bugs had taken an interest in him, their plasma fire splashing against the rocks nearby like globs of acid, the not-quite-gas and not-quite-liquid melting into the stone like hot magma. One of them released a torpedo that sought him out like a bloodhound, perhaps attracted to heat or the smell of his engines, tiny eyes and protruding antennae clumped around the front of the metallic tube where the guidance system would have been on a human-made missile.\n\nJaeger flipped his vessel so that the nose was pointing upwards and slightly back, his engine flaring as he changed direction, the violent G-forces making his vision go grey as his flight suit constricted around his legs to prevent his blood from pooling there. His fighter rose in an upward arc, panels opening on the rear of his chassis to release a payload of glowing flares that spewed forth in a wing-like pattern. The Bug torpedo seemed drawn to them, veering off-course and slamming into a nearby asteroid, the rock crumbling and breaking apart as the missile exploded in a plume of green plasma.\n\nEight Gs, nine Gs, his HUD blinked a red warning symbol as it counted up and up. He had to ride that infinitely fine line between two deaths, blacking out and slamming into an asteroid, or burning up at the hands of the Bugs. It was like walking a tightrope over a bottomless chasm, as thin as a hair, the limitations of both his spacecraft and his own body guiding him.\n\nAs he leveled out, his vision cleared long enough to see his upside-down railgun score a hit on one of the pursuing vessels. The hail of slugs drilled through its forward sensor bank, as much of a head as a living spaceship could possess, the craft immediately losing coordination and beginning to drift.\n\nJaeger glanced across the battlefield at his comrades, just long enough to see the giant, shrimp-like carrier flick one of its arms out like a hatchet. It was aiming for Boomer's fighter, his callsign tagged on Jaeger's HUD, his vessel flying backwards as it fired its twenty-five-millimeter cannon at a pursuing Bug. He was too focused on the fight to see it, and before Jaeger could even speak a word of warning, the fifty-foot long limb cleaved his ship in half. It came down like a woodsman's axe, the sharp barbs that lined the forelimb tearing through the metal hull like it was made of paper, splitting it into two clean pieces. The half with the cockpit tumbled as it flew away, momentum carrying it off into the asteroid field, coolant and fuel spewing from the ruined airframe like dark blood.\n\n\"I'm hit!\" Boomer's distorted voice came through on the radio, Jaeger could hear his rapid breathing in the confines of his helmet. \"I'm spinning!\"\n\nHis radio transmission fizzled out, there wasn't anything that Jaeger could do for him right now. They would have to send out a search party once the fighting was over and hope that he hadn't smashed into an asteroid. His suit would be able to keep him alive for a few hours at least, if it wasn't breached or damaged. Dwelling on it would do no good, Jaeger cleared his mind and focused on the task at hand.\n\n\"Pull back!\" he ordered, \"we're going to get overrun if we don't make it into open space!\"\n\nIt was a fighting retreat, the vessels aiming their railguns behind them to lay down covering fire as they popped flares and pushed themselves to the limit. The G-forces threatened to make them black out as they dodged and rolled, using the asteroids as cover to avoid the volleys of plasma fire that followed after them. The Beewolfs were faster than the Bug fighters, but the Bugs were more maneuverable, their tolerances for the extreme Gs far higher than that of any human. They could endure harder accelerations, more sudden changes in velocity, things that would have turned a human to pulp in his suit. The carrier lagged behind, but it was slowly accelerating, knocking the asteroids aside like bowling pins as the lines of engines along its flanks propelled it forward on jets of green flame.\n\nThe flight computer couldn't calculate a safe route through the debris with all the dodging and weaving that Jaeger had to do to shake off the Bugs that were on his tail, and so he had to trust his instincts, relying on split-second reactions and raw gut feeling to navigate. There were still two Bugs locked onto him, bursts of plasma shooting past his wings so close that they singed his stealth coating. They weren't able to gain ground on him, but he couldn't lose them either. In the targeting window of the railgun that was serving as his rear-view mirror, he could see the monstrous, lobster-like carrier as it smashed through obstacles and turned the massive rocks to spreading clouds of rubble. It was relentless, its black, dead eyes fixed intently on its quarry.\n\nThey finally reached the edge of the asteroid field, bursting out into open space like they were breaching the surface of an ocean, dust and ice particles trailing from their wings like contrails. Immediately that sense of claustrophobia vanished, the twinkling stars greeting Jaeger like old friends, and he checked his HUD to make sure that his wingmen had made it out too. He could see Scratcher and Baker's callsigns tagged on his display, his radar mapping the wall of asteroids. He spun on his axis to face it, letting the momentum carry him away. Out here, the maneuverability of the Bug fighters wouldn't count for much. The Bugs followed close behind, seven of them left, shooting out of the dust cloud like bullets.\n\nTo their rear, the carrier emerged, exploding out of the Oort cloud like a battering ram. It sent the asteroids scattering, still gaining momentum as it surged towards the fighters, the rocks bouncing harmlessly off its thick shell.\n\n\"Hold them off!\" Scratcher said over the radio, his voice crackling with static. \"The torpedo frigate can't be more than five minutes out.\"\n\nNow that the odds had been evened out, Jaeger felt a surge of excitement welling up inside him. This was he had trained for, what he lived for, six degrees of freedom and enough firepower at his fingertips to reduce a whole squadron of Bugs to worm food.\n\n\"Keep drifting out, let them follow us, we'll lead them straight into range of the frigate. Focus fire on the fighters, ignore the carrier!\"\n\nThe three Beewolf fighters opened up in unison, even the railguns having to lead their targets at such extreme range and velocity. The Bugs scattering to make themselves harder to hit as the distance between them was bridged by lines of tracer fire and missile trails. Jaeger watched as one of the missiles found its target, the Bug erupting into an explosion of viscera and tangled metal, another succumbing to a well-placed railgun salvo that must have hit some kind of critical system or organ. It spewed yellow goo from its wounds, the liquid turning to glittering crystals as it froze.\n\nThe fight was not entirely one-sided, however. The Bugs still outnumbered them, the Beewolfs forced to dodge a hail of glowing projectiles. One of the organic vessels loosed another torpedo, the weapon locking onto Scratcher and hurtling towards him.\n\n\"Out of flares!\" Scratcher shouted, breathing heavily into his helmet as he tried to evade. The missile was agile, Jaeger tearing his eyes away from his target for a moment to watch as his friend's ship burned away in a dangerously tight arc. It was risky, Jaeger could see that he was pulling too many Gs, the torpedo shooting bursts of gas from its nose and tail as it turned to chase him down.\n\n\"Eject Scratcher, eject!\" Jaeger shouted as he watched the torpedo close. There was no way that he could outrun it, the Bug weapon leaving a sparkling trail of propellant in space as if marking its path.\n\n\"I got it!\" Scratcher replied, his voice straining as he endured the acceleration. In a few seconds, he wouldn't be able to eject. He'd be unconscious, and his drifting vessel would be destroyed anyway. \"I got it...I got...fuck!\"\n\nJaeger breathed a sigh of relief as he watched the canopy pop off with a burst of gas, the oxygen contained within turning into a cloud of frozen crystals, the ejector seat propelling Scratcher clear of his doomed vessel on a plume of flame. Not a second later, the Bug torpedo hit the Beewolf. A billowing cloud of green energy engulfed it, the black chassis slagging like a plastic toy being melted under a magnifying glass before the fuel tanks exploded. The wreckage continued on, sparkling metal and molten hull material spraying into the void.\n\n\"I think we're in trouble here, Bullseye,\" Baker muttered. \"Where the hell is the Baskeyfield?\"\n\n\"New contacts on radar,\" Jaeger said, failing to conceal the alarm in his voice. \"I'm picking up four, no, five contacts heading towards us at high speed.\"\n\n\"I see them,\" Baker confirmed, \"they're not coming from inside the asteroid field. They're skirting the edge of it. That formation is tighter than anything I've ever seen...\"\n\n\"Try and get a lock on them,\" Jaeger said as he rolled his vessel upside-down, narrowly avoiding a trail of plasma rounds. Baker was right, they were in trouble. With two fighters down, they had to contend with three or four Bug fighters each. That was a tall order, even for him. \"Fuck, watch out! Another missile!\"\n\nOne of the remaining fighters released a projectile that had been clutched against its belly with its spindly legs, another plasma torpedo speeding towards Jaeger. His HUD flashed a warning symbol, alerting him that it was locked on, an ominous red blip appearing on his map. He gunned the main engine, veering away as he popped his flares, the bright beacons reflecting off his glassy hull as they spread out in their wing pattern. The corners of his vision began to darken once again, his suit tightening like he was being vacuum-packed, his every muscle straining as he pulled the flight stick back.\n\nThe missile was only temporarily distracted by the flares this time, quickly finding his scent again and barreling towards him as they faded.\n\n\"It's on me,\" he hissed through gritted teeth, using his thrusters to corkscrew his ship in an attempt to throw off his pursuer. It was smaller than him, faster and more agile, without an organic pilot to limit its maneuvers. His finger hovered over the emergency eject button, his mind fogging from the lack of blood, his railgun taking potshots at the closing missile and failing to hit the slim target.\n\nA green beam of light was projected from the darkness, his video feed pixelating and corrupting, holding on the missile with perfect accuracy. It melted through the housing, a burst of escaping propellant sending the torpedo spinning off course. Jaeger struggled to turn his head, his bleary eyes widening as he located the source of the laser.\n\nThere was a formation of ships speeding towards the fight, his visor zooming in on the distant objects. It wasn't Bug reinforcements, it was the aliens that had come to Baker's aid the day before. Their ships looked like rounded, aerodynamic arrowheads, the hulls sleek and the points of their stubby wings upturned. There was a canopy towards the pointed nose, but he couldn't make out anything inside at this resolution.\n\nThe vessels were painted with speckled grey-blue camouflage, as if designed to make them harder to spot in an atmosphere, and along their flanks were the colored panels that Jaeger had spotted during their last encounter. They almost looked like LCD panels, running from the nose to the tail. As he watched, the lead vessel sent a wave of flashing light along its body like a cuttlefish. The other ships in the formation reciprocated, waves of indigo and deep purple flashing in the darkness. Could they be communicating with one another?\n\nThey were flying in such close formation, they couldn't have been more than a few meters apart. In space, that was close enough to be in spitting distance, and the coordination required could only have been matched by a trained aerobatics team.\n\nAs he watched, each of the five vessels produced a beam, the green lasers focusing on a single Bug ship. The target vessel immediately slagged and burst into flames, the heat igniting the gasses and fuels contained within it like pouring gasoline on a fire. The formation shot past like a bullet, more flashes emitted by their strange color panels as they banked in perfect sync, coming around for a second pass.\n\n\"Hold your fire, they're friendly!\" Jaeger warned.\n\n\"You think I can't figure that out for myself?\" Baker shot back, \"keep firing!\"\n\nThe tables had turned, and Jaeger engaged the nearest Bug ship with renewed confidence as the mysterious aliens targeted another with concentrated laser fire. The Betelgeusians seemed confused by the sudden appearance of the aliens, breaking off and splitting their attention between both targets. It took some of the heat off Baker and Jaeger, the pair firing their engines as they moved to support the strange fighters.\n\n\"Look how they're flying!\" Baker marveled, \"it's like an airshow.\"\n\nThe alien formation split into two groups, veering off in opposite directions to take on different targets, it was like watching a carefully choreographed dance. Jaeger fired his cannon at one of the distracted Bug ships, the rounds hammering it, drawing a long and bloody trail across the length of its hull. He swooped in to finish it off with a few railgun shots, zipping past the drifting carcass with only a few feet of clearance.\n\n\"Yeah! That's what I'm talking about!\"\n\nThe battle was turning in their favor now, the Bug squadron was in disarray, but Jaeger's excitement was soon marred by the looming shadow of the carrier. The giant lobster came into range, blocking out the light from the nearby star and casting him into darkness, Jaeger twisting his stick as he avoided its bulky body by a hair. He watched through his canopy as the segments of its long tail whipped past overhead, looking over his shoulder as the thing barreled forward.\n\nBaker and their new allies mopped up the remaining fighters, the last one succumbing to a well-placed missile, the fragments of its ruined hull tumbling end over end as they hammered into the side of the giant carrier. The behemoth was unfazed, its long antennae twitching and its glittering eyes pivoting as it tracked the enemy vessels.\n\nWhat was it going to do next? Its complement of fighters had been shot down, and it didn't seem to have any ranged weapons with which to fend off the Beewolfs and the colorful aliens. Jaeger and Baker kept up their railgun fire, peppering the thing's armored shell, the aliens pulling back into a formation of five as they drew burning trails across its hull with their lasers. Nothing was getting through, that shell could be meters thick, they would have to count on the frigate to deal the killing blow.\n\n\"Shit,\" he exclaimed, \"the frigate!\" He switched channels, trying to contact the incoming vessel before it arrived, it must be right on top of them by now. \"Baskeyfield, come in Baskeyfield, this is Bullseye.\" No reply, fuck. \"Baskeyfield, come in!\"\n\n\"This is the Baskeyfield,\" a distorted voice said, Jaeger exhaling the breath that he had been holding in.\n\n\"Baskeyfield, we have friendly aliens on the field, do not target them. Repeat, we have friendly aliens on the field. Target only the...the big fucker. Do you copy?\"\n\n\"We copy you Bullseye, big fucker is on our radar. Repeat, eyes on big fucker. Suggest you get clear of the engagement zone.\"\n\nJaeger turned his head this way and that, searching for the incoming frigate. There, a massive heat signature on his scanner, closing fast. He got a visual on it, zooming in to see the frigate's massive engines flaring at full burn, four nozzles arranged in a diamond shape that were spewing superheated gas as bright as a sun. It was coming at them ass-first, decelerating using its main engines, probably already locking torpedoes on the Bug carrier.\n\n\"Get clear,\" he warned, \"the torp boat is on station.\"\n\nBaker didn't need to be told twice, spinning and putting his engine towards the carrier, burning away from it. The aliens were still doing passes, Jaeger had to find a way to get their attention. His mind raced, he couldn't just leave them here to potentially be caught in the crossfire, not after they had saved his ass. Think Jaeger, think!\n\nHe thumbed a button on his control panel, turning his nose towards the formation of arrowhead fighters, flashing his floodlight at them. They seemed to like light, maybe they would respond to it. He could practically feel the bulk of the Baskeyfield bearing down on them, he couldn't linger here for long, shining his beam and wiggling his wings as he let momentum carry him.\n\nTo his relief, they noticed him, turning towards him as he began to burn away. The giant Bug made to pursue them, but it had a lot of mass to move around, and it struggled to shed its forward momentum. It slid like it was on ice, its lines of thrusters moving independently as they tried to steer its bulk in a new direction.\n\nThe alien fighters took up formation beside Jaeger, giving him a closer look at their sleek hulls. Their aerodynamic chassis were lined with what almost looked like heat tiles, painted over with their ocean camouflage, the silver gleam of exposed machinery visible beneath it here and there. The color panels seemed to be made up of individual cells, like rows of computer monitors, and he could even make out what looked like scorch marks on the noses of the craft. Residue from atmospheric flight maybe? Were these vessels also spaceplanes? They couldn't be long-range, where had they been launched from?\n\nHe could see something moving around beneath the raised canopy of the nearest fighter, but he couldn't make out much detail, it was blurry and indistinct. These weren't drone ships, there was something piloting them...\n\nJaeger looked back over his shoulder at the pursuing Bug carrier, the glare of the frigate's engines reflecting off its iridescent carapace. The UNN vessel was still hundreds of miles away, but that was more than close enough for it to fire. As he zoomed in on the approaching ship, he saw a speck rise from its hull on a plume of flame. He couldn't see it at this range, but he knew from experience that one of the many torpedo hatches that were spaced out along the top of the roughly two hundred meter long vessel had opened, a missile the length of a city bus shooting out of the tube.\n\nHe tracked it as it sped towards the carrier, gaining velocity as its targeting systems made minute adjustments, crossing the distance alarming quickly. His visor darkened automatically to protect his eyes from the glare as the torpedo slammed into the Bug's midsection, a massive explosion tearing through the giant creature. The shockwave rocked it, the beast seeming to lurch, and then it was blasted into two clean halves. It resembled a lobster that had just been smashed with a hammer, fragments of its colorful shell spreading outwards in an expanding cloud along with charred flesh and torn metal, its many legs twitching and its engines petering out. The midship, if you could call it that, was partially vaporized where the torpedo had struck it. Gore and fluids leaked from its ruined body, the two halves drifting apart to expose what looked like organs and flesh on the inside, wrapped around metal structural beams like vines choking a tree.",
        "Jaeger wanted to celebrate, but there were two pilots missing and every second counted. He opened a channel to the Baskeyfield, static crackling in his ear.\n\n\"This is the Baskeyfield, go ahead Bullseye.\"\n\n\"We have two pilots down, one ejected and one is missing inside the asteroid field. You need to scramble rescue boats immediately. We can assist in the search efforts if necessary.\"\n\n\"Copy that Bullseye. We have Scratcher on our scope, his beacon is still active. Life signs are steady. No read on the second beacon, the asteroids might be blocking it.\"\n\n\"Roger that, Baskeyfield, me and Scorch are gonna stay on station and-\"\n\n\"Contact!\" Baker announced.\n\nSomething large emerged from superlight nearby, its bulk vomited back into reality along with a cloud of colorful gas, like a technicolor smear on the black canvass of space. Jaeger's instruments lit up, warning him of the impending threat, radar and thermal sensors feeding him data on its mass and energy output. It was larger than the frigate, perhaps three hundred meters in length, the hull composed of various metallic alloys. There was a large nuclear generator inside that was kicking out a lot of heat, no doubt already recharging the jump drive. Where had it come from, and how had it found them?\n\nHe looked out of his canopy, the giant ship hanging in space at the edge of the Oort cloud, its white hull reflecting the light from the far off star. It was long and thin, seemingly made up of rounded segments or cylinders that were joined together, clearly not of Bug design. At one end was what resembled a bridge, with windows that looked out into space, and to the rear was a bulky engine module. In the center was a ring, not unlike that of the Pinwheel space station, connected to the main body of the ship via spokes as it slowly rotated. Centrifugal force to simulate gravity, did they not have artificial gravity generators?\n\nThe alien fighters left their formation, Jaeger watching them as they broke off, heading towards the strange vessel. It must be their mothership, was this their version of a carrier?\n\n\"It's locking onto us,\" Baker warned.\n\n\"Hold your fire, I'm sure they're friendly,\" Jaeger replied. \"They're probably scanning us.\" He switched channels to the Baskeyfield again, the captain of the ship outranked him. \"Baskeyfield this is Bullseye, what are your orders?\"\n\n\"Captain says hold fast,\" the operator replied, \"we're putting a call through to the Rorke.\"\n\n\"I don't like this, not one bit,\" Baker muttered. \"They might have been friendly so far, but that ship is a lot bigger'n we are, and we have no idea what it's capable of.\"\n\n\"Baskeyfield says hold fast,\" Jaeger said, relaying the orders. \"They're scanning us, so scan them back if it makes you feel any better. Just remember your three Ds, and keep your railgun in your pants.\"\n\n\"Three Ds my ass,\" he grumbled, but it looked like he was keeping his cool. His weapon ports were closed, and his railgun was stowed. Jaeger did likewise, closing the port on his cannon and retracting his railgun. The alien ships took up position around the larger vessel, docking with it belly-to-hull. Apparently, there was no hangar for them to land in. The more he looked at it, the more primitive this vessel seemed. Their carrier was too small to have a hangar, so they docked externally, the same method used by archaic human spacecraft. They couldn't generate their own gravity, so they had to use a spinning torus to simulate the effects. Unless that big ring served some other purpose, but Jaeger couldn't imagine what.\n\nEither way, they had advanced weaponry and superlight technology, which made them a threat. He kept his sensors fixed on the ship, just in case they decided that the UNN were no more welcome here than the Bugs. The standoff continued for a few more minutes, and then there was another burst of multicolored gas. The Rorke emerged from the tear in reality, the colorful residue spreading in its wake like a ripple on the surface of a lake. Seeing its massive, ocean-grey bulk immediately set Jaeger at ease, it looked like a small moon in comparison to the alien vessel. Its hull bristled with weaponry, not currently targeting the unidentified ship, but it was an admirable show of force.\n\nThe rest of the support fleet followed behind it, pulled along in its superlight wake, drifting for a few moments as their crews recovered from the mental and physical shock of jump travel. They had sent the entire fleet, good. It might be interpreted as an aggressive move, but it would hopefully deter any aspirations of violence. There was a crackle as a voice came through on his radio.\n\n\"This is Captain Fielding, hailing all UNN vessels. Maintain formation, FCP is in full effect, don't take any actions without orders from me.\"\n\nThe Baskeyfield began to burn back towards the cluster of ships, the Beewolfs doing the same. Jaeger was about to remind them about the downed pilots, but he could see a swarm of rescue vessels leaving the Rorke's hangar, one group moving off into space and the other approaching the asteroid field. He wanted to assist, but it looked like Fielding was taking direct control of the situation. Things could get very hairy.\n\nWhat would happen next? Should they try to communicate? Would the aliens send a delegation to the Rorke, or the other way around? The carcass of the ruined Bug carrier still drifted between them, pieces of its thick shell cluttering the sky. Had their cooperation been well-intentioned, or simply opportunistic? He waited a while longer as the higher-ups deliberated, and then Jaeger heard the Captain's voice in his ear again.\n\n\"Lieutenant Jaeger, this is Captain Fielding, are you receiving me?\"\n\n\"Loud and clear, Sir.\"\n\n\"Good. The Captain of the Baskeyfield tells me that you were able to communicate with the aliens?\"\n\n\"I...wouldn't put it quite that way, Captain. I was able to signal them with my Beewolf's floodlight, they seemed to respond to that.\"\n\n\"In either case, it seems that you've had the most contact with them. They responded to your signals and took up formation with you, so I'm told. I want you to fly your Beewolf up close to the bridge of the unknown ship and signal them with your floodlight, like you did with their fighters. Try to make contact, show them that we're not here to fight them. You're the closest thing that we have to an ambassador right now.\"\n\nJaeger swallowed, eyeing up the unidentified ship. The Rorke might make it look like a toy, but it was a damn sight bigger than his FS-26. It was a direct order from the Captain, however. He couldn't refuse it.\n\n\"Yes, Sir.\"\n\nHe could practically feel the eyes of thousands of crew members on his back as he slowly flew towards the alien ship, using short bursts from his thrusters rather than his main engine so as not to appear too aggressive or put out too much heat. He glided gently through space, nearing what appeared to be the front of the strange alien ship. As he closed, he could see that there were figures moving beyond the row of windows that wrapped around the rounded nose in a crescent shape. It was like watching people moving around on the ground from the window of a low flying plane, the distance still far too great to make out any meaningful details.\n\nHe exhaled, trying to calm the racing of his heart.\n\n\"Here we go...\"\n\nHe hit a button on his control panel, the floodlight that was mounted on his hull flashing on and off a few times. He waited for a response, not sure what to expect, hoping that they didn't mistake his lamp for a really shitty laser and proceed to blow him out of the sky.\n\nAfter a short delay, there was a bright flash of light, a beam directing at his vessel and then turning on and off as it reproduced his sequence. His visor darkened automatically, it seemed to be some kind of searchlight. Alright, they had an understanding. Now how the hell should he signal that he wanted them to follow him back to the Rorke? It didn't seem like he could dock with the alien ship, there was no hangar, and the fighters had latched onto their carrier with what must be a proprietary system. There must be an airlock, but he didn't fancy leaving his Beewolf floating in space.\n\nHe turned his ship on its axis, using his thrusters to push himself away, feigning returning to his fleet and then coming back around to his original position. He mimed the gesture a couple more times, waiting for a response.\n\n\"Yes, that's good,\" he heard Fielding say over the radio. \"Keep that up and see how they respond.\" Jaeger could hear people talking in the background, there was probably a whole committee of people advising the Captain.\n\nHe repeated the maneuver again, and then a new heat signature appeared on his scope. He watched as a vessel emerged from out of view behind the ship's long, cylindrical hull. It was some kind of dropship, there was no mistaking it. Its design was pointed and sleek just like the arrowhead fighters had been, but it was far larger, with a wider wingspan and a swollen chassis. It looked like a cross between a spaceplane and a UNN shuttle, clearly designed for atmospheric flight as much as for space travel. It was almost as if someone had welded stubby, swept wings and a streamlined nose to a trailer, reminding him of the space shuttles that had pioneered the era of human expansion into space.\n\nThis one had the LCD panels along its flanks, and when he flashed his floodlight at them, they responded with a flurry of colors. Alright, he was in business.\n\n\"Where am I leading this thing, Sir?\"\n\n\"To the starboard hangar bay,\" Fielding replied, \"we'll have a team ready to greet them.\"\n\n\"Roger that, Sir. Bringing them in...\"\n\nHe turned about, keeping an eye on the unwieldy vessel as it followed behind him. It was painted in the same ocean camouflage colors as the fighters, the rounded nose and the flush underbelly charred by the flames of reentry. The canopy was placed far forward, near the nose, and he could just about make out shadows moving inside. It surprised him that they hadn't sent a lone fighter, it seemed that they wanted to send a team, if indeed this was a dropship and not some kind of flying bomb...\n\nThey neared the hangar, the force field that kept the atmosphere inside shimmering with a faint, blue light. Uh oh, the aliens didn't seem to have artificial gravity if the spinning torus was anything to go by. How would they react when they entered the hangar and found that it had gravity? Was there a way for him to signal that to them?\n\n\"Er...Captain Fielding, Sir,\" he began. \"I don't think these guys have gravity on their ship. Any idea how we might warn them about our gravity generator so they don't nose dive into the deck?\"\n\n\"I'll have some engineers jump up and down on the deck as they land,\" he replied. Jaeger was about to laugh, but then he realized that it wasn't a joke, it really was all that they could do to signal the aliens.\n\n\"Roger that, proceeding...\"\n\nHe extended his landing gear, making sure that the alien dropship could see it, and then he coasted slowly towards the translucent energy barrier. He passed through it, engaging the thrusters on the underside of his vessel as he gradually lowered it down to the deck. He felt the impact reverberate through the ship as he touched down, his engine powering off.\n\nJaeger struggled to pull off his helmet, disconnecting from the Beewolf's systems and opening the canopy. It rose painfully slowly, and when there was enough room, he leapt out onto the deck, his helmet clasped under his arm as he watched the alien dropship slowly approach.\n\nBaker had already landed, he must have been ordered back to the Rorke. He was ecstatic, practically skipping as he made his way over to Jaeger's side. A space had been cleared in the usually busy hangar, they had moved the ships out of the way as much as they could. There were dozens of people watching, flight crews and engineers peering out from between the idle vessels, along with a few armored Marines just in case things went South. Jaeger had never seen the bay so quiet, he could have heard a pin drop.\n\nThe alien ship seemed hesitant, then the nose pushed through the force field, thrusters on the flat belly belching jets of fire as they compensated for the gravity. It was like watching a fridge trying to stay aloft. As a pilot, Jaeger got an immediate sense of how awkward this behemoth must have been to fly. It seemed relatively unsuited for VTOL, perhaps it was designed for gliding instead? A set of three, wheeled landing gear extended, the vessel swaying a little as they touched down, rolling for a second before hitting the breaks. It was inside, and now Jaeger could truly appreciate its size. It was big, at least fifteen, maybe twenty meters long and half as tall. The twin tail fins on the rear of its streamlined body must have been eight or nine meters from the deck to their tips. It was much larger than a UNN dropship, heavier too. Were these aliens giants? Or was this ship designed to carry a whole platoon of soldiers?\n\nThe light panels along the sides flashed in brilliant shades of orange and yellow, eliciting oohs and aahs from the crowd, even though nobody knew what they might be signaling. Jaeger saw a white uniform out of the corner of his eye, it seemed that Captain Fielding had come down from the bridge to observe the historic occasion personally, flanked on either side by two large Borealans wearing combat armor and full-faced visors. They weren't armed, but then again, a Borealan didn't need a rifle to be deadly.\n\nThere was a loud hiss as a large landing ramp at the rear of the vessel began to slowly descend on a pair of hydraulic cylinders, thick and heavy, possibly reinforced with armor plating. It reached the deck with a thud, facing towards the force field so that nobody could get a view inside the compartment. You could have cut the tension in the air with a knife, even Baker had stopped bouncing up and down excitedly and was watching with bated breath.\n\nSomething came down the ramp.\n\nThe first thing that Jaeger noticed was the ocean camo, splotches of grey and blue that matched the patterning on their ships. The alien was wearing a form-fitting suit, lighter than the combat armor that he was used to seeing, rubbery and flexible. He could make out what looked like insulated cabling for the internal electronics running along the limbs. The creature was between four and five feet tall, the body plan basically humanoid, with two digitigrade legs that were long and powerfully built in proportion to its relatively small and short torso. It had two arms that were tipped with two-fingered hands and an opposable thumb, along with a long, thick tail that it held above the ground like it was being used for balance.\n\nIt turned its helmeted head as it walked down the ramp, looking right at him through an opaque visor. It seemed to have a snout that protruded from its face, but that might just be some kind of respirator, it was impossible to tell. It had what looked like a pair of dangling, flexible ponytails snaking out of the back of its helmet, long enough that they reached the small of its back. He thought that they might be connected to an oxygen tank at first, or whatever it was that these creatures breathed, but on closer inspection, they were hanging free.\n\nA second followed it down the ramp, and then a third, then two more. In all, five of the bizarre aliens emerged from their vessel, staying close together and moving as a group. They walked strangely, with an odd, halting gait that reminded him of a chicken. It wasn't as pronounced, but they bobbed their heads slightly with every step, craning their necks to look around the hangar.\n\nOne of them tapped its boot on the ground as if testing the gravity, balanced on what looked like two toes, while another stared at the blackness of space behind them. It was perhaps alarmed by how insubstantial the force field seemed. The one at the head of the group was examining the humans, and Jaeger had to remind himself that this was also their first contact with aliens. Well, Coalition aliens at least. Hopefully, the Betelgeusians hadn't instilled in them a xenophobic fear or suspicion of outsiders.\n\nThe leader held up an arm, and Jaeger was mesmerized as a colorful pattern flashed along the limb. They had the same LCD panels mounted on their suits that he had seen on their ships, a flexible bank of what looked like tiny computer monitors running from the wrist to the elbow along the outside of the material. It lifted the dangling ponytails too, they seemed to be prehensile like tentacles, more technicolor patterns flashing along their length. It was like watching some kind of bioluminescent squid, and its fellows seemed to respond to it with their own, more muted patterns.\n\nWhat could be the purpose of these flashing lights? Surely it wasn't their only means of communication? It wasn't entirely unheard of, Bug ships sometimes used patterned sails to communicate between their larger vessels, but it seemed unlikely for what was clearly a technological civilization.\n\nThe group of aliens closed ranks, watching intently as Captain Fielding decided to move forward. He waved for the Borealans to wait, the felines flexing their curved claws and shifting their weight from foot to foot. Was Fielding making the right decision, approaching these unknown aliens alone? They didn't seem to be armed, but nobody could be completely certain of that.\n\nHe stopped within a few feet of the lead alien, the short creature cocking its head on its flexible neck as it looked up at him. It was about two feet shorter than he was, he must look like a giant to them. What would he do next?\n\n\"Hello,\" he said. \"My name is Captain Fielding of the United Nations Navy. Welcome to the Rorke.\"\n\nFielding waited, but there was no reply, the aliens merely cocking their heads in confusion. It seemed that he had a backup plan, however, producing a tablet computer and turning the screen towards them. He tapped at it, and a wave of color passed across it, mimicking the signals that the aliens had been sending during their fight with the Bugs. Someone must have examined the footage and reproduced the pattern, blues and purples swelling and fading.\n\nThis, the aliens responded to, one of them lifting its forearm and creating a similar pattern. Once that was done, it looked back over its shoulder, perhaps communicating with its companions in some way. They huddled, exchanging glances beneath their angular helmets, not using their colorful panels this time. Did they have onboard radios, were they psychic?\n\nOne of them tapped at the screen on its arm with its two fingers, it seemed that they used touch panels just like humans did. After a few moments, it showed the screen to its friends, the aliens crowding around to get a look. They were doing something, but he had no idea what, the angle was wrong for Jaeger to be able to see what was being displayed. They gestured to one another with their hands, their helmeted heads moving as if they were discussing something.\n\nThe lead alien turned back to Fielding, raising its hand towards its helmet. It hit some kind of button where the ear would have been on a human, and then there was a hiss of escaping gas as Jaeger watched with wide eyes, the helmet opening like a pair of jaws. It split into two halves, the lower staying still while the upper slowly rose up, not unlike the canopy of his fighter.\n\nBeneath it was a hairless, smooth head. It was rounded, with a sloped forehead that tapered into a snout, and he was immediately reminded of a dinosaur or a lizard. It looked so small, almost dainty, covered in smooth skin that was a dull green in color. He was too far away to say if it was scaly or not. He could see its nostrils flaring at the end of its muzzle as it took in breaths of air, perhaps they had been discussing whether it was safe to breathe the atmosphere. It didn't seem to be having any great difficulty, which suggested that it also breathed a mixture of oxygen and nitrogen."
    ],
    "authorname": "Snekguy",
    "tags": [
        "size difference",
        "group sex",
        "light bondage",
        "oral",
        "vaginal",
        "reptiles",
        "feathers",
        "creampie",
        "handjob",
        "gentle domination"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/birds-of-prey-hetero-edition"
}