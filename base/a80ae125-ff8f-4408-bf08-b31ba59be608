{
    "title": "From Jenny to Mei Ch. 22",
    "pages": [
        "People react to extraordinary experiences in different ways. Some respond with shock, reflexively hiding from the encounter, some seek a reoccurrence, whereas others might search for a religious or medical explanation. But when Mei Chun got fucked senseless she simply left her body and mind behind and voyaged in a self-less, transcendental state. \n\nAt the moment, in room four-twelve of the San Francisco Mandarin Oriental, she, or rather her body, was being gently rolled by the fluid movements of Philip's hips and hands as Ai continued to, ever so gently, glide her soft tongue along her labia. \n\nThis time Mei was lost in a new world of orange light that lived and flowed and twisted within her. Like a synesthetic, seeing sounds and hearing colors, Mei perceived the emotions of love and devotion as a warming orange, gooey, helical mass coiling around and through her. \n\nPeace, pure peace, absolute contentment and love suffused the place. And as her being dissipated, as her knowledge of self was absorbed in the warm orange that surrounded what was once Mei Chun, she became the orange. \n\n\"Orange!\" she cried.\n\nPhilip heard her and assumed she'd lost her mind again. \n\n\"Beau-ti-ful...\" she whispered. \n\nAi pulled back to observe her body convulse, which it did for what seemed like minutes after her screaming subsided. She got up on her knees and stroked Mei's thighs. \"Good one, huh?\" she said and wasn't concerned when Mei didn't answer. She remained quiet for a few moments while Mei mumbled a bit more, then fell silent save for her breathing. \n\nAi waited patiently. Philip kept his slow pace as if nothing had happened. \n\nThen Ai observed the shiver that seemed to radiate from Mei's belly button like a stone thrown into a pond. Shuddering muscles in belly and thighs that transferred to legs, arms and lolling head. She noticed the ring of foam around Philip's still slowly sluicing cock. \n\n\"Wow! Was that another one, Mei Chun?\"\n\n\"She can't hear.\"\n\nAi recalled what Mei Chun had said about Philip's magic dick and being propelled into the stratosphere but had thought it simply exuberance. Now that she saw the evidence for it she wondered at what love could do to people. \n\n\"And... and?\"\n\n\"Hum?\" he prompted.\n\nAi sat back on her heels and stared, enthralled at his slowly thrusting, deliciously thick, penis and at his hands now grasping her hips gently. \"And... uh?\"\n\n\"Yes?\"\n\n\"So... like? She just...\"\n\n\"Yep. Just zones out like this. I can't explain it.\"\n\n\"Golly,\" Ai practically gasped in awe. She watched as he moved his hands up from her waist, along the ridges of her ribs and formed cones surrounding her breasts. As he squeezed, her nipples puckered and Mei groaned. \n\nAi watched in fascination as Mei began to squirm then shudder again when his index fingers began to flick her nipples back and forth. \n\n\"And she's totally out of it?\"\n\n\"Yep. And there's more.\"\n\n\"More!?\" She wondered what more could mean. How could it get better than being tossed around, unconscious; suffering a continual series of orgasms while your mind was transported to heaven?\n\n\"Yeah. Tell me, Ai, what's double twenty-two?\"\n\n\"Forty-four.\"\n\nMei jerked and kicked and growled with such ferocity that it startled Ai. She pushed away from Mei as if she were possessed then fell over backwards and hit the floor with a thump.\n\n\"Holy Crap!\" she said from the rug. \n\n\"You ok?\"\n\n\"What was that?\" Her face peaked up above the mattress.\n\n\"She came... again.\"\n\n\"No way! Just by saying forty-four?\"\n\n\"Aaahhhrrrunph!\" Mei grunted and shook, her feet flopped limp at the end of twitching legs, smacking Ai smartly on the side of her head. \n\n\"Ouch!\" She retreated below the height of the mattress. \"So she, is, like, out?\" She could not believe the intensity these two achieved together. She wondered if Mei would return from wherever she was brain damaged. \"Where is she?\" \n\n\"She's in her happy place, heaven she says. I think it's serotonin shock personally. Like her brain just, sort of overloads and, like, escapes somewhere.\"\n\n\"No way?! So, like, how long?\"\n\n\"We did this for nearly an hour our first time.\"\n\n\"An hour?\" she said in disbelief, while contemplating an hour long orgasm. \"Mei said something but I thought she was... So this forty-four thing...?\" Her eyes went wide again as Mei thrashed, her feet once again kicking over the end of the bed. \n\n\"Um... please stop saying that,\" Philip asked as he struggled to hold Mei down.\n\n\"So like, I don't get it... every time she hears that number she... what?\"\n\n\"Climaxes.\"\n\n\"No way! I mean... no way. She's faking.\" Ai crawled around to his side of the bed, staying low to avoid thrashing limbs. \n\n\"If you felt her squeeze you the way I'm feeling it you'd know there's no faking. Plus, does she look like she's faking?\"\n\n\"Oh my God!\" She looked into those eyes of his. \"Philip,\" she said in earnest, \"you've got to fuck me into a coma like this and give me a number.\" He chuckled and she, still kneeling beside the bed, removed a strand of Mei's hair that was covering an eye and obviously causing him some discomfort. \"You HAVE to fuck me into wherever she is and give me a damn number!\" \n\nHis laughter was just like hers, sweet, amused and without a tinge of derision. \"I'll see what I can do, Ai, but it was her mind that did it. I just keep going and finally she just zones out.\"\n\n\"Zone me out, Philip! Please, I'm begging!\"\n\nMei started groaning and mumbling about her new favorite color.\n\n\"She's coming around,\" he said. \"Funny, I thought she'd be out longer.\"\n\n\"Orange... so beautiful. I never knew...\"\n\n\"Mei Chun, honey?\" Ai said with a tentative voice. \"You there?\"\n\nStill no reply.\n\n\"It might help if you would stop fucking her,\" Ai observed with a bit of pique. \n\n\"Maybe. But tell me, Ai. If it were you getting screwed out of your mind like this, would you want me to stop?\"\n\n\"Eh \u2014 when you put it like that. Can you grab her ankles so she doesn't kick me again.\"\n\n\"Sure,\" he said, taking Mei's skinny ankles in hand as Ai pushed them into his grasp. \"Careful with the number.\"\n\n\"Forty-four?\"\n\n\"Ahhgggguuuuh!\" Mei moaned from her soul and ground her ass back into Philip's groin. \n\nHe laughed at Ai's stupefied wonder and the ridiculousness of the situation. He gently chided her, \"Don't waste 'em.\" \n\n\"Dang, you guys have something special,\" she said. \"You have GOT to give me a number.\"\n\nThey let Mei slowly regain consciousness and she came to as Ai was back in her position, alternating between watching her man's cock gently stroke Mei's tunnel and licking her velvety pussy lips. \n\n\"Oh my god,\" Mei croaked.\n\n\"Back with us mortals, Mei?\" Philip chided. \n\n\"Yeah,\" she said, sounding exhausted, \"love to be back but hate to leave.\"\n\n\"Tell me everything!\" Ai said, \"... when you can form coherent sentences.\"\n\n\"Told you,\" Mei crowed. \"Totally magic dick.\"\n\n\"Big one huh? Tell me everything.\"\n\n\"Holy smokes!\" Mei whispered, profanity being something she instinctively knew was inappropriate. She lay still and boneless, her head resting on Philip's clavicle. She felt his breath in her ear and on her neck. \"So good,\" she purred. \"Sooo...\"\n\n\"Perfect?\" Ai offered. \n\n\"Perfect. Sooo purrfect...\"\n\n\"Best ever? I guess.\"\n\n\"Never better. Never in... never ever better.\"\n\nShe felt his mouth tighten in a smile that pulled at the skin of her neck and heard his warm, affectionate chuckle. She noted the continued rubbing of her insides but it was no longer erotic. It was a comforting, tactile love, like being petted on the inside. She let the sensation glaze her, let it soak into her skin and closed her eyes. Philip hugged her even tighter and she felt Ai crawl upon her. She put her arms around her new best friend and they lay like that, Philip gently rocking the both of them side to side. \n\nWhen she tried to describe the experience to Ai she mentioned that this time it was even more transcendental. For one thing it was slow. She hadn't known orgasms had their own speed, or rather momentum. For all its sluggish pace it had devastating inertia behind it. \"Like being crushed by... by... like...\"\n\n\"A steam roller?\" Philip suggested.\n\n\"I was going to say a garlic press but I don't know what one is.\"\n\n\"It's, like, a press,\" Ai said, a devilish mirth in her tone. \n\n\"...to crush garlic,\" Philip added looking over Mei at Ai. She smiled and rolled her eyes which triggered the laughter that was building in him. They laughed at Mei together. \n\n\"Ok, laugh. It sounds so nice and anyway, I'm so fucked silly.\" They were the last words anyone would speak for quite a while. \n\nIt was Ai who broke the silence. \"How long are you going to do that?\" she asked Philip, looking over Mei's shoulder with a knitted brow.\n\n\"Huh?\"\n\n\"Yeah,\" Mei chimed in, \"you've been pumping away like one of those oil thingies for, like, half an hour. Wanna come?\"\n\n\"I'm good.\"\n\n\"You're fantastic but I want you to come again. Has he come in your mouth today, m\u00e8im\u00e8i?\"\n\n\"Um. This morning he came inside then sucked it out and drooled it in my mouth.\"\n\n\"Oh my god! He did that for me. It's the best! So hot n' dirty!\"\n\n\"That's when I knew he'd reached stage two,\" Ai said, lifting and kissing her neck.\n\n\"Stage two?\" Philip asked.\n\n\"Uh huh,\" she said while crawling back down Mei's body. \"Stage one was at the coffee shop when I knew you knew.\"\n\n\"Knew what?\"\n\n\"Knew you would have me.\"\n\n\"But I had you...\"\n\n\"That didn't count. I mean a throat full of your cum is nice and all but you didn't love me then. And you paid me.\"\n\n\"Right.\"\n\n\"Which I promptly donated to charity by the way. I didn't want to tempt the Universe into changing its plans for us.\"\n\n\"So getting horny for you was stage one?\"\n\n\"Yep.\"\n\n\"And stage two?\"\n\n\"Love, of course.\"\n\n\"And what's stage three?\"\n\n\"You don't want to know. Well, I shouldn't say that. But you don't have a need to know and it's probably best that way. I mean, some things need to come in their own time, right?\"\n\nPhilip, with a quiver of premonition, felt sure that stage three was either marriage or a kid, or both. (He was, of course, correct.)\n\n\"Now,\" Ai continued, \"how 'bout I move down and blow him in between him stuffing you, Mei? Sound good?\"\n\n\"I'm good I said.\"\n\nShe ignored him. \"Ji\u011bji\u011b?\"\n\n\"Yeah. Can you get him to shift gears? I'm probably going to fall asleep like this. He's better than cough syrup.\"\n\nAi moved down and took his dick out of Mei's still slick pussy and tubed on his cock. She let a minute go by and pointed him at Mei's hole and watched him glide in. \n\nThe contrast in textures was interesting to Philip and he took the opportunity to consider which he preferred; Ai's sweet little mouth and dexterous tongue with her humming her pleasure or Mei's longer channel and undulating body. 'Probably a tie,' he concluded. And as he sunk completely into Mei, he was pleased he wouldn't have to choose.\n\nAfter a couple of times like this, being switched back and forth, he lost his slow controlled rhythm and was much more forceful jabbing his hips up which caused Mei to sigh appreciatively. The angle was just perfect to scrub her g-spot on the way in and poke her tummy a bit when he was deep. She moaned when his hands roughly grasped her breasts. She bent her neck to watch as his big strong mitts squeezed the fat of her tits so that his fingers made them conform to him. It put a delightful pressure on her nipples. \n\n\"Ugh... yesss, use me,\" she sighed and thought about Philip's passion for her. \n\nAi's mouth encompassed him again and Mei relaxed while her m\u00e8im\u00e8i took over. It let her concentrate on his wonderfully manly moans and the feel of his mouth pushing warm air into her ear. She could tell he was going to come soon, and she was so drained from all the sex she had had she didn't care one way or the other if she came again. 'As long as he gets what he needs from me. But... I mean,\" she reconsidered, \"well... I could take another... a little one, I guess.'\n\n\"Damn, Ai, you have an amazing mouth.\" He felt himself approaching the finish. \"I can't see what you're doing but it's awesome.\"\n\nBack into Mei she placed him and said, \"Thanks but wait till we've done this a few times.\"\n\nHe stiffened his body into a plank and began to jab Mei fervently. He grunted and pulled then pushed Mei like she was a doll onto which he was cramming his cock. \n\nMei responded to his renewed enthusiasm. \"YES! Fuck me, Philip! Use me! Fucking use my body!\" \n\nAi loved it, the passion and need that was emerging from him. She did her best to squeeze his balls as she used one thumb to press on Mei's clit and draw the pad of it up her sheath to expose her hot little button.\n\n\"Ai!\" It was his short hand for, 'I'm gonna come.'\n\n\"I know, Philip. You're going to come in thirty seconds. Just hold out. You're going to spray all over ji\u011bji\u011b's bald pussy lips and let me suck it off her.\"\n\n\"Ai!\" This time it was Mei announcing her approaching orgasm. \n\n\"I'll put him back in, Mei Chun. I won't forget. I love riding it down that way too.\"\n\nAi watched as his pace raced ahead and she counted down: 'five, four, three, two...' \"Ok, Philip, let me have it and completely relax.\" \n\nHe stopped thrusting and, counter to all that seemed right, went limp on the mattress. He felt Ai's hands take hold and stroke him while what felt like her tongue swished across the tip. Then his eyes sought the top of his head and let bliss overtake him. \n\nAnd then came the rhythmic gushing. \n\nIt was different, not better or worse than before but different. It brought him a unique kind of orgasm, an unburdening, a liberation and he felt his cum flow in great spouts from him like blood from an artery. It felt more natural like this, less like he was trying to inject a woman with his semen than an exhalation after holding his breath. It was good - satisfying - releasing.\n\n\"Oh my!\" Ai said as the first long strand plopped where she had pointed it, right on Mei's pretty little wet petals. \"That's right. Good boy. Come on that sweet pussy. Come for me, Philip.\" \n\n\"Ugh,\" he grunted as she stroked him with impeccable timing.\n\n\"That's it baby. Good boy. So handsome, that pearly white semen, so full of life, so nutritious and wholesome. Love those colors, the pink and white, brown and white.\"\n\n\"Ugh,\" he repeated, her encouragement seemingly causing him to extend his orgasm.\n\n\"Ummm... good boy, such a load. I'm gonna lap it up now from your girlfriends pretty waxed pussy.\" Then she sighed as he pulsed the last of his sweet cum on Mei's naked clit. \"Ah, god, how I love sex.\"\n\nOnce he was done she sucked him tenderly for a few moments then piped him back inside between Mei's glazed labia. She dove in and hoovered up the cum he deposited on her. She licked and slurped to get all of him she could, all of his essence, all of his precious salty protein and glucose. \n\nFocusing on Mei, she let her tongue do the talking and told her in quiet undertones how she cared for her. She reflected on Mei for a moment. She loved her because Philip loved her and that was good enough for the moment. They would find their own relationship and it was destined to be great. That was how the Universe worked. \n\nPhilip's creamy goodness lent a wonderful lubrication that helped Ai bring Mei off. It took longer than Ai had expected but it finished tremendously. She loved giving girls orgasms perhaps as much as guys but they were such different experiences it was not worth the comparison. This was a good one and it made her feel so connected to Mei. So much like sisters, naughty sisters to be sure but... 'Ok maybe not like sisters,' she thought, 'but whatever.' It was great. And, after she came down they let a few minutes pass, each quietly reflecting on what had just happened and what it meant for the nights to come. \n\nMei seemed to sum up Philip's feeling with the question, \"How in the hell are we going to top that?\" But Ai was so much farther down the road in her thoughts that she didn't even hear the question. She was thinking what to name their third child. Philip would be number one, of course, and Charles, Philip's father's name would be number two. 'I've always liked my brother's name but it won't be fair if I give the first two American names and him a Vietnamese one. Might cause some disharmony when they are growing up. Might make the first two think that he's mama's favorite.'\n\nMei turned over and lazily threw her arm over Philip's head, and said, \"Master, please, please do me again like that.\"\n\n\"I'm spent,\" he sighed and began to lick her underarm. \n\n\"Not now! What kind of a slut do you think I am?\"\n\n\"I know exactly what kind.\"\n\n\"Your slut? Your cum guzzling, waxed-pussied, totally into sucking your other girlfriend's pretty little cunt kinda slut?\"\n\n\"Yep.\"\n\n\"Total anal sex slave kinda slut?\"\n\n\"Uh huh.\"\n\n\"Loves to feel you using her body to burn up all the fantasies in that twisted blackmailing mind of yours kind?\"\n\n\"Yeah.\"\n\n\"Well...\" she had run out of phrases, \"good!\"\n\nThey looked at Ai and she felt their attention. \n\n\"She wants to know how you are going to top tonight.\"\n\n\"Oh. That's my job now?\"\n\n\"Anyone better qualified around here?\" he asked, not thinking that it might indicate that as a prostitute she had the experience. It wasn't how he had meant it, in fact he had intended it as a complement, but it could have been construed that way.\n\nMei, either because she was a woman or that she had a new caring and sympathy for people, heard the potential for injury and interjected. \"You are the most amazing chick I have ever known, Ai, and if it weren't for Philip here I'd follow you around like a puppy.\"\n\nNeither of them had any need for concern about Ai's feelings. She considered her time as an escort as simply training for Philip, an education in the erotic arts that was now complete. \n\n\"Hmm,\" Ai said, propping her chin on Philip's hip, \"we'll take turns.\"\n\nThe topic, as such topics do, fizzled and the conversation drifted away from sex and on to living arrangements and the need for more space in the bedroom and bathroom. \n\nMei got out of bed and found a notepad with the hotel logo and a pencil. The three of them took turns with designs and ideas. It was lots of fun and the girls' enthusiasm grew. It infected him and his joy increased with their delight. \n\n\"Why don't we make the second floor the living area?\" Ai proposed. \n\nHe objected that it was too big, too hard to heat and cool and he liked living on the third floor.\n\n\"You stay up there and let us girls have little rooms, like apartments, on the second floor.\"\n\n\"But I want you with me.\"\n\n\"But pretty soon you're going to have to have a twenty foot bed. I mean when Karla moves in and the Czech girl, when she's in town... there is a practical limit.\"\n\n\"They'll be more too. I know it,\" said Mei. \n\nPhilip recoiled at the idea but didn't voice his objections. He couldn't imagine his place swarming with young women like a sorority house. He didn't want to live like that, the noise, the mess and the bitch fights that would ruin his peace. Three were enough. Anyway, how would he ever get work done?\n\n\"I guess another staircase could be put in,\" he said. \n\n\"Yeah, or an escalator!\"\n\n\"Or a stripper pole,\" Mei added, \"like firemen use!\"\n\n\"I don't think they call them stripper poles at the firehouse, Mei and don't go crazy, Ai. I love that you're an engineer. I mean that is such a turn on for me. Just thinking of you welding gets me hard, but remember it's my house you're talking about.\"\n\nThey spoke on for another twenty minutes and by common agreement it was decided that the second floor would go through a massive transformation. The master bathroom and bedroom would also need renovation.\n\nThe girls wanted to get started immediately. \"We can shack up with Karla in the suite when the workman come over,\" Mei said. Philip wanted to point out that Tim would be there but just figured he'd have to get another one. ",
        "The talk drifted and Philip noticed Mei had become distracted. \"What are you thinking about, Mei?\" he asked as Ai started focusing on drawing. \n\n\"Oh, nothing,\" she said, attempting a fake smile, already knowing it was useless to hide from him but wishing to ignore the issue that had been plaguing her. \n\n\"Don't make me wait, honey.\"\n\nShe let her eyes plead and tried to muster a nonchalant tone, \"I really don't want to talk about it.\"\n\n\"I want to hear it. If it's about Tim you had better tell me while I'm in a good mood.\"\n\n\"It's not Tim.\"\n\n\"Gonna do this the easy way?\" he asked with a bit of threat in his voice which usually got her horny, but now just made her nervous. She knew what the hard way was and didn't relish being spanked in front of Ai. \n\n\"But you'll be in a bad mood if I tell you and I feel so bad already. Just thinking about it makes me sad.\"\n\nThis talk got Ai's attention and she put down the pencil and looked at big sis with concern. \"Tell him q\u00edng r\u00e9n (sweetheart). It'll be ok.\"\n\n\"Ai,\" she said, raising her eyebrows for emphasis, \"you haven't seen him angry.\"\n\nAi considered for a moment and thought maybe she shouldn't be a part of this particular conversation. \"Do you want me to leave?\"\n\n\"I want you to stay,\" Philip said and looked at Mei. \"Tell me Mei or I'll punish you and it won't be the kind you like.\"\n\n\"Ok. Don't send me home again,\" she implored. \"Really, Philip. Promise me one thing, you won't send me home.\"\n\n\"Tell me, Mei.\" He saw the way Ai was looking at him. \"Ok, I won't send you home.\"\n\n\"I've been thinking...\" she said. It was so hard to ask this. She knew he had been pissed about Tim and to ask this now was probably the worst time imaginable. It was nice to have Ai there, although she didn't think he'd actually hit her, her presence was a comforting moral support. \n\n\"Can you promise not to get angry?\"\n\n\"No.\"\n\n\"Can you promise that my punishment won't be beating me up?\"\n\n\"Mei.\" There was surprise and a bit of dejection in his voice. \"I love you and I wouldn't actually beat you. I mean I've never hit a woman other than you.\"\n\nMei thought that was sweet and felt a little better.\n\n\"What's the problem?\" he demanded. \n\nOh this really wasn't going to be easy. \"Did you ever see Dr. K when you visited the clinic? The guy in his sixties?\"\n\n\"Um, wears sweaters?\"\n\n\"Yeah, silver hair?\"\n\n\"Yeah, I think twice. Nice gentle old guy.\" Philip smiled at the memory, \"We just sat and talked about women for twenty minutes on the second visit when he realized what I was up to.\"\n\n\"Well, he's going through some tough times right now. His son's been diagnosed with cancer and he lost his wife just two years ago and I feel so bad for him.\"\n\n\"Uh huh?\" He had no idea what she wanted from him.\n\n\"Well... \" Mei was about to continue when he said, \"Stop for a second.\" He wanted to think. She sat looking at him, one hand on his knee, watching his mind searching. \n\n\"Does he need money?\"\n\n\"No, not that,\" her eyes tried to find something other than his eyes to look at. Whenever she saw the man within those gorgeous green eyes she lost her determination.\n\nPhilip continued to think. How could he help? He couldn't get the guy's kid into an experimental treatment plan. Then again perhaps he could. But that would be asking a lot for the son of a friend, to hack into some medical database and add him to a list, which probably wouldn't work anyway. He gave up, \"What did you have in mind?\"\n\n\"Well,\" she began timidly, \"I can't give him anything to get his mind off his son's illness, I mean, I can't buy him anything. I mean, what does a sixty-year-old guy want? Right?\" She sort of tittered nervously.\n\nPhilip was still puzzled; Ai was not. \n\n\"You see, I think if I could give him something to distract him, something he could look forward to and couldn't get, you know, like, on his own.\"\n\nShe was stalling; she knew he wasn't going to like it.\n\n\"Out with it, Mei.\" \n\n\"Please, let me say it my way.\"\n\nHe saw the plea in her crinkled brow. \"Does this mean a lot to you?\"\n\n\"Yes.\"\n\n\"So much that you would risk pissing me off?\"\n\n\"Yes. I know that and I'll take it just for asking.\"\n\nTo Philip it showed a real courage and he was preparing to agree unless it was outrageous. \"Ok. Tell me your way.\"\n\n\"So, well, you see. He lost his wife two years ago and he's such a sweet guy, like everyone's grandfather. And it's not for me, ok? I mean, I didn't think of this as something for me, it's for him. You understand, a gift, not something I want.\"\n\nAi figured it out long before Philip did. She thought it was really sweet of Mei.\n\n\"Ok...?\" It was said as a question, like 'get on with it.'\n\n\"Well... I thought that, he'd like, y'know, like all guys do, something I could do for him.\"\n\nA glint shown behind the green flecks in his eyes as they widened in comprehension. She saw it and knew time had run out.\n\n\"So...\" she screwed up her courage, \"I want to give him a blow job or two.\" She clinched her eyes closed and braced for the impact of a hand against her cheek or a scream and a stream of obscenities that told her she was a whore.\n\nBut nothing came.\n\nSlowly, tentatively, she opened one eye, than the other and saw him leaning back on the bed, a vacant stare on his face.\n\n\"No.\" His face changed from displaying shock to a puzzled anger. \"Can you believe this girl, Ai?\" He looked back at Mei. \"What part of, 'no other guys,' is difficult to understand?\"\n\n\"I think it's sweet,\" Ai said and hugged her.\n\n\"Thanks, Ai.\" Mei squeezed her hand. \n\n\"No,\" he said again. He closed his eyes and paused. \"Sweetheart.\" Taking a deep breath and exhaling he adopted a new tone. \"You're not just... I don't want you to think sex is the only thing you can give people.\"\n\nMei felt bad.\n\n\"You have so much to give and you can do so much for people.\"\n\n\"I do that already. I've tried to be understanding and sympathetic but that's what everyone else does. Put yourself in his shoes for a second. You're old, no one finds you sexually attractive. Your wife died, you have no prospect of getting sex of any kind for the rest of your life.\"\n\nHe looked at Ai and instantly saw in her face that she agreed with her. He heard her admonition earlier that he could afford to be kind to other men. He figured he had done that already with Tim but realized this was an ongoing commitment to his half of the species.\n\n\"He probably doesn't even think about it anymore. Maybe he can't even get it up,\" he said. \n\n\"Do you really think so, Philip? I can't imagine that.\"\n\n\"Yeah, well me neither to tell you the truth.\"\n\n\"It won't be sexual, I mean, it won't be love, just a release. A pleasant distraction for him.\"\n\n\"It would certainly do that,\" Ai mused. \n\n\"Mei, Mei, Mei, what am I going to do with you?\" He looked at Ai. \"What do you think?\"\n\n\"Mei Chun is not going to fall in love with him. That's pretty clear. I've had lots of sex with guys in their late fifties and a couple in their sixties. You've never seen someone as appreciative as they are. One guy wanted to put me in his will.\"\n\n\"Ai.\" He closed his eyes again and massaged his temples with the fingers of one hand. \"You can share all you want with the girls but please don't tell me stories about past lovers, either the paying kind or not, ok? Unless they were women.\"\n\n\"Ok,\" she said with a bit of regret, \"I sort of forgot my current role. Sorry.\"\n\n\"It's ok. It's just that. You know... I would rather think of you as mine. Which is the problem with Mei giving this old guy head.\"\n\n\"It won't be often,\" Mei said weakly.\n\n\"No.\"\n\n\"I can do it Philip, if that concerns you,\" Ai offered. \"Or I can find someone.\"\n\n\"Not you, Ai. You are all mine, ok. I mean both of you are mine but...\" \n\nMei interrupted, \"It wouldn't mean anything to him. I mean I can't give that by proxy.\" She put up her fingers in the quote gesture, \"Hi Dr. K. I'm really sorry your son's dying of cancer. I want to make you feel better. This girl's gonna give you head.\" She put her hands down. \"See the disconnect?\"\n\n\"She's got a point,\" Ai said.\n\n\"But my god Mei. Do you know what you are asking of me? I'm the jealous type. I mean, don't you think the stereotypical love blackmailer, the guy who whips his girlfriend into submission, is sort of possessive. I mean I just can't let you blow some other guy.\"\n\n\"You did it before.\"\n\nHe shot her an angry look. \"That's not fair. You know that. You know all that shit was part of breaking you and you know that it's what you needed. Do you think I did that for fun? You saw me cry. All of that was for you.\" He brushed his hair back with parted fingers. \"I tried to get you the soft way, Mei, if you'll remember. I tried to be the nice guy but I learned that's not what you needed.\"\n\n\"But I'm not doing this for my sexual kicks or to get something from someone. I don't want to control him or manipulate him. I want to do it because I like him and I like giving. Do you think I wanted to ask you this? Like I get off sucking old men?\"\n\n\"Then why?\"\n\n\"You turned me into someone who likes to give rather than take. He means a lot to me and to see him suffer hurts and I want to know I've done everything I can for him.\"\n\n\"Do you think it's true, Ai?\" \n\nShe heard him ask as though he were addressing his subconscious. She heard the concern in his voice, his fear that Mei would drift from him.\n\n\"I love you, Philip, but I've only known Mei Chun for a very short time. I mean if you ask me in a month I could give you my opinion with more confidence. But from what I know, I trust her completely.\" She paused to yield if he wanted to speak and then continued when he did not. \"I think you should let her. I believe her about why she wants to do this. I think you should trust her, Philip. Love is trust and I know that she loves you. For god's sake she is sharing you, the man she loves, with me. She wants your happiness. Isn't that enough proof of how much she loves you?\"\n\nAi was speaking just as his conscience was. The words were resonating within him. Mei had indeed given all she could, he could not think of a proof beyond which she'd already given him. \n\n\"The idea of sharing you with a woman was hard enough for me...\" he said.\n\n\"But it worked out ok,\" Mei said.\n\n\"Yes, but it's not like I'm going to turn the doctor into a sex slave now is it?\"\n\n\"No, true. But does there have to be something for you?\"\n\nThat question caused him to stop thinking. It sank into his conscience like the lead weight pulling a lure to the bottom of a lake. He felt a twinge of selfishness, the cost of ownership. \n\n\"No. There doesn't. What if he doesn't want it and gets you into trouble?\"\n\n\"He wouldn't, I'm sure. He's such a sweet old man he wouldn't want to do that. Anyway, I might not be there long. Why don't you think about it for a while.\"\n\nShe crawled into his lap, she wanted to thank him but figured it would be presumptuous. \"Thank you for not getting angry.\" She felt she could thank him for that at least.\n\nAfter a few minutes of mulling it over while Ai shifted the topic with Mei, he decided he was too worn out to think. He asked Ai to turn out the lights and when she returned to bed he molded her against his chest and Mei chose the other side of him, her back toward him. He wondered if her choice of position indicated a quiet threat, that if he denied her request she would turn cold on him. Then, as she said, \"I love you, Philip. You mean more to me than anything ever has,\" he decided he was over reacting. \n\nWhile the girls' breath transitioned to a rhythmic, gentle purring he stroked Mei's hip from above the sheet, admiring again the perfection of that particular feminine curve. He reflected on their sex together. It had been so different, loving them both at the same time; no, that wasn't how to think of it, they had joined one another in making love. Nothing had happened as he had envisioned, there were no feats of acrobatic sex, no awkward contortions or porn positions. It was, he reflected, more about love than sex and he felt really good about that, like he had done his part to make something exceptional for them. And the way Ai had invaded him completely blew his mind and he now accepted that, while it was still disquieting in a way, he wanted more of exactly that feeling of being utterly subject to her power. \n\nAnd then there was Mei to ruin things at the end. He shouldn't blame her, he figured. He had forced her to speak her mind. And, given that her transformation was so recent he shouldn't be surprised. He surmised that the request arose from a mixing of the two personalities. Mei was doing exactly as she had been commanded to do, find ways to please and serve. The remnant of Jenny figured sex was the only currency she possessed. And since the transformation was as yet incomplete the project was coming back to bite him in the ass.\n\nWhile he mulled over his responsibility and what action was best for her, he felt his will begin to bend. \n\nAs he let loose the last cord tying him to the wakeful world he wondered; was he the master, or was he her servant, and did it matter?\n\n##########\n\nSarah tossed and turned in her bed. It was moments like this that reminded her that life was slipping away. She fidgeted, turned the pillow, punched it a few times in as much an expression of frustration as to soften it. She missed Mitch. She hated herself for it but knew longing for him was natural. She caught shadows of his presence; smelling his scent, saw ghost images of his razor in the bathroom, mistaking her shirt for his crumbled jeans in the corner by the closet mirror. 'God, they used to look sexy, those worn jeans just rumpled in the corner.'\n\nShe wanted a man, wanted Mitch still, but wanted his maleness most of all. \n\nAt times like this, few as they had been in her life, she had taken refuge in 'dates' with her toys. But it no longer seemed to work. She had tried twenty minutes ago, even resorting to porn, which just made her feel incredulous and slimy. Even the classy stuff hadn't worked. She simply felt jealous of the slim twenty-nothing girls being romanced then hammered by their men. The attempt had backfired, growing her self-pity and her sexual frustration.\n\nShe needed. She knew what she needed. She needed someone to stare in her eyes, pin her hips to the bed and grind themselves into her and say the magic words. She needed him to hold her, to kiss her forehead and to be there when she woke up.\n\nBut it wouldn't happen. How could it? She was to be wed to the center for the rest of her life, tied to children that no one else wanted. She had to take what life had given her and make the most of it.\n\nShe thought about Mei Chun, how that skinny little Asian tart had everything that she didn't but mostly how she had Philip.\n\nShe mashed the pillow again. \"Philip,\" she grumbled.\n\nHer list of complaints was long; too stupid to know when he had found the right girl, too easily swayed by a nice pair of tits and a pretty face, and most of all, too timid to tell her that he loved her. She had known it that last night before he went to prison. Any woman would have. He couldn't look her in the eye, couldn't let himself make her suffer with a quiet, 'God, I love you Sarah, I'm going to think about you every minute in there.' He was being noble, she figured, or his idea of what noble was. But all he had had to say was, \"Four years inside, then we get married,\" or just, \"wait for me.\" That would have done it. But no. He said nothing. Nothing for her to cling to.\n\nThen, four years later, she had met him at that restaurant they used to go to. She had seen the look of resignation in his eye. The fear that she had changed.\n\nIt was partly her fault, she should have said it first thing; the moment their eyes had met, even before the hug. However, she left it till their parting. The \"I love you, Philip,\" were words so long delayed, crowded by so many other intervening words that they had lost their power. They sounded, delivered as they were, like a good bye rather than the hello they were meant to be.\n\nTrue, she was dating Mitch at the time, but that was insignificant. He must have known that. She gave all the traditional indications. Mitch was plan B. All Philip had to do was put it out there, tell her he wanted her. She knew it was true and had been rooting for him, praying he would just say it, anything. But again, nothing.\n\nShe ignored him for months after that, dedicated herself to Mitch, even flew off to Indonesia with him. And everything would have been fine, she would be three weeks from her wedding, had not that asshole spotted her in the bar and started blurting out his praise for her blow jobs.\n\n\"Fucking Men!\" she shouted, punching the pillow again and vowing to free herself of her dependency on the masculine side of humanity.\n\n##########\n\nPhilip's sleep was troubled. His thoughts regarding Mei's request had perturbed what should have been blissful, sex sated sleep between two lovely young bodies. Yet he lay in bed, awake after only a couple hours of rest, listening to their breathing, feeling their warmth. Ai was to his right, her surprisingly light head rested on his chest. Mei was on his left, her now familiar body turned, back nestling his ribs, her adorable little ass pressing his thigh. \n\n'How could she ask this?' he wondered. How, after so clearly stating, time and again, that he would not share them with another man, did she have the gall to ask? 'I shouldn't have forced her to tell me,' he considered. 'I should have let her think about it more. Maybe she would have forgotten about the idea; seen it wasn't fair.' \n\nThe word, 'fair' kept recurring in his thoughts. Tim had used it and so had he but Philip never liked the word. He had once whined to his father that something or another, probably related to money, wasn't fair. The look his father had given him had become a symbol of disdain. His father loved him so Philip didn't see that face often, yet when he did he always remembered the word 'fair' and how his disdain felt. It was a selfish word used to justify selfish desires. \n\nAfter ten minutes he was nearly panting in rage. He had set the word, and the idea that he was the selfish one, aside as it was interfering with his anger. 'The ungrateful bitch wants to reassert herself,' he thought, 'Jenny's trying to regain control.'\n\nHe let the ire burn, let his plans form. He would redouble her agony, punish her with isolation, take back the card, show her that Ai could replace her. \n\nBut as the plans for punishment began to pile in a disordered heap of outrage and sinister thoughts collided in a train wreck of bitterness he realized what he was doing. 'Fair,' he thought and recognized that he was engaged in emotional thinking and knew it was a mistake. \n\nUnlike most men, or women for that matter, Philip was gifted with a certain, though limited, self-knowledge. He could sense which half of his personality was in control. \n\n'Calm down,' he spoke to his fevered temper. 'Get a grip.' \n\nShe asked, that was point number one. Jenny would not have asked. \n\nPoint two, the guy's kid was dying of cancer, which sucked. He could empathize with that, not deep empathy but his father had died that way and he knew the torment to loved ones that was involved. Her plan, if that was what it was, had an elegant if blunt simplicity to it. It wouldn't make him forget his son's illness but it would give his mind something else to think about. \n\nPoint three, he was old. He remembered the guy and the description 'grandfatherly' hit the mark. He was soft and slow and he listened. The kind of man, if she had to fuck another guy, or 'just blow him,' Philip could accept. If she had asked to have sex with a guy at the gym he would have choked her, and not the 'just for sex' kind. \n\nThen Philip thought of something his father had said when he gave him his mother's wedding ring. \"If it doesn't mean anything to you then it's not a gift. You need to learn that, son. You need to see the difference between a present and a gift. Gifts have to hurt a little.\"",
        "His dad, knowing that Philip would inherit his money, was trying to teach him something valuable. At that point Philip had had no reason to suspect he was going to inherit ninety percent of his father's estate. In fact he was sure that his father would obey the precedent he had followed all his life, generous allotments to charity and perhaps a meaningful token gift to his son. It was his father's way. He did expect a medical trust of some kind and something to keep him in relative security, like a small stipend, adjusted for inflation, probably in the fifty to hundred thousand annually range. But his father had already decided on his plans and therefore his advice on giving was made more poignant upon his death and the revealing of his Will. \n\nHis father knew that giving from abundance would be easy for his naturally generous son and had tried to teach him that giving from scarcity would be the only way to imbue a gift with meaning. \n\n'Giving has to be a bit painful,' he heard his father say again. And what could be more painful than allowing Mei to give of herself like that?\n\n'Nothing,' he mused silently in the unfamiliar hotel bed, 'it hurts just thinking about it.'\n\nHe wanted her all. He wanted her body, her love, her obedience, her respect and devotion. He wanted her soul. \n\nBut wasn't he thinking earlier about how to earn his good fortune at having Mei? Didn't he need to earn her? To balance things out? 'But this? It's just too much to ask.' \n\nAi shifted in her sleep as if she could feel the mental turmoil whirling so close to her.\n\n'What if it became a precedent? What if Ai wants a past lover to play with too? To entertain her and mix things up a bit?'\n\nHe felt the anguish roil and twist his pancreas just thinking the thought. \n\nShe squirmed slightly and rubbed her nose. \n\nThoughts of loosing both of them started his breathing to deepen. \n\n'Fucking ungrateful bitch!'\n\nHe was doing it again. He was loosing it. There, naked between his naked lovers, the idea of loosing them was causing his face to flush and his pulse to rise. \n\n\"Philip?\"\n\nIt was Ai.\n\n\"Shh, baby. Back to sleep,\" he whispered. \n\nFor many moments she lay still, so still he thought she might have drifted back to sleep. \n\n'If I spank her she'll just climax and ask for an ass fucking,' he thought, 'so much for discipline. Bitch!'\n\nAi drew one finger from his clavicle to his opposite hip and whispered, \"Come with me.\" It sounded like willow leaves rustling in a breeze. For a moment he wondered if he had heard her at all or just perceived her thought in his head. \n\nShe gently turned off the side of the bed and noiselessly stood. He saw, through the dim city lights weeping through the curtains, that she was dressing. \n\nShe looked down on him for a moment then turned toward the bathroom. And, as he carefully stood, she returned with a robe and held it for him to step into. \n\n\"She's a unique girl,\" Ai said in a whisper as he turned the security bar to prop the door. \n\n\"I'm really kinda pissed right now, Ai.\"\n\n\"I know, that's why you woke me.\" She began to lead him down the hall toward the elevator lobby. \n\n\"Was I muttering? Grinding my teeth?\"\n\n\"Nah, you were radiating.\"\n\n\"Hmmm, sorry. I'm just so disappointed.\" \n\n\"Don't be. I mean,\" she said, \"I know how men are about this kind of thing.\"\n\n\"How could she ask me?\"\n\n\"Better to ask...\"\n\n\"I know,\" he interrupted her, \"I don't mean asking, I mean asking for that. I kinda let it slide, I guess, either because of the sex or just not believing it but after sleeping... it woke me up thinking about it.\"\n\nAt the elevator lobby he let her take the chair and slid down the wall beside her. \n\n\"Don't you believe her?\"\n\nHe stared at the fireman's keyhole at the top left of the painted elevator door. \"About wanting to do it as a way to take his mind off his son? Yeah, I don't know.\"\n\nAi stroked his hair like a mother consoling her son. \n\n\"She was tricky, Ai. You don't know about her history.\"\n\n\"You've changed her.\"\n\n\"How do you know?\"\n\n\"I know she is sweet, that she loves you, that she has completely accepted me, in, like, no time flat.\"\n\n\"Hmm.\" The sound was a dismissal of her observation, even if he didn't consciously mean it to sound that way. \n\n\"By the way you two talk about her she was a total bitch before you blackmailed her.\"\n\n\"She was.\"\n\n\"She's not now.\"\n\n\"Yeah,\" he said with an inaudible chuckle, \"she has changed quite a bit.\"\n\n\"She said she wants to give. That you made her want to give.\"\n\n\"I tried to expand her.\"\n\n\"You are not seeing this are you?\" She spoke like he were too smart not to know what she was trying to say or not to have figured it out by himself already. \n\n\"No,\" he said. \"What do you mean?\"\n\n\"In a way, a way she doesn't understand, she is asking you this as a way to show you how she has changed. She wants your recognition that she can do something for someone else. She wants you to be proud of her.\"\n\n\"Fucking odd way.\"\n\n\"Really? Think about it. She loves sex, figures everyone loves it as much as she does and thinks that it's the ultimate gift. That the most true giving is to give of her body in the most intimate and personal way.\" She paused to let him think and to stroke his hair. \"I think it's beautiful.\"\n\nFor a moment he turned away from the whole problem, just a stolen second or two to let the feeling of Ai's fingers dig furrows of comfort into his scalp and allow his mind ruminate to on the issue by itself.\n\n\"Philip,\" she said with a changed voice, \"I'm going to say something that will cause you some pain. But I want you to know something about me and maybe about Mei too.\" She took his momentary silence as consent. \"I loved making love to my clients. Not because I got my sensual fix, ok, but because I could bring a bit of their deepest fantasies alive. I could be that one unattainable girl for them. \n\n\"I'm pretty, I know that, and I know that, for most guys, they will never have a girl as pretty as I am. They all want, just once, to have, to possess, even for an hour, a girl as pretty as their fantasies. So when I was with them I could touch them at their most vulnerable and show them that I loved their lust, that I understood and accepted that part of them that they kept hidden or were ashamed of. \n\n\"It's funny,\" she said in a voice that indicated an aside, \"society idolizes a pretty girl, makes her an icon and sells cars and stuff with her sex appeal. But when a guy shows lust for her he's somehow a pervert or disloyal to his wife.\n\n\"Anyway,\" she returned to her main point, \"I gave them the freedom to find that pretty girl in me. I became that icon. I put flesh on the skeleton of their imagination. They could put their desires into me. They could, quite literally, rent me.\"\n\n\"It made you feel good?\" he said, not so much as a question as an observation and as much to fill in the gap in conversation as to elicit a reply.\n\n\"Like a goddess. Really. And there was something more. Every desire needs an object and I liked being that object. Know what I mean?\"\n\n\"Do I make you into an object?\"\n\n\"I hope so. That sounds strange I guess but girls like feeling beautiful. And, when you think about it we all are objects.\"\n\n\"Women hate being objectified.\"\n\n\"Most women are ignorant.\"\n\nHe gave a shrug and sort of harrumphed a bit but wasn't sure he agreed or just didn't want to talk about all women at the moment. \n\nShe continued. \"If a woman knew what it was she was rejecting she wouldn't be offended. The same woman that takes pride in her shoes and how people think they make her look sexy doesn't understand that a guy looking at her tits is paying triple the compliment.\"\n\n\"You do?\"\n\n\"Of course I do. I love it. A guy with a hard-on is, like, giving me the sweetest complement a guy can. It's honest, heartfelt and really warms me.\"\n\n\"You are unique, Ai.\"\n\n\"But back to why I liked it.\" She returned to the tone of voice that was caring and yet didactic. \"A man needs a mistress. I think that while women are naturally monogamous, men are not. There is a basic urge in men to procreate, of course, and contrary to the interests of the female, men look to mate with several genetically diverse partners.\"\n\nShe looked at him to see that she was getting through to him. \"To maximize the chance of success, of course.\"\n\n\"I understand.\"\n\n\"So,\" she went on, \"a man carries that something around inside of him that only a mistress can accept. It's his forbidden desire, scorned by society but completely part of his nature. His need for the other woman. Smart girls like Mei know about that. She knows she can never have that part of you and knows you won't be happy until you find a place for it. \n\n\"So she was relieved when I stumbled into your lives. I could take that from you and make you happy that way. She would be free to be your wife or number one girl or whatever and she'd have the safety and convenience of having your mistress in the same bed. That's what the harem is all about.\" She looked at him as he raised his face to hers. \"It wasn't your idea, was it?\"\n\n\"No.\"\n\n\"Of course not. It's not you.\"\n\nShe was making a very strange kind of sense to him.\n\n\"So when a man looked at me like that, like he had finally realized that I... like... that I completed something missing, that he could place his burden with me and be accepted, it was beautiful and touching. Sometimes it made me cry, Philip. It was an emotional instant that made the job very fulfilling.\"\n\n\"I'm sure you were great at your job, Ai,\" he said with a bit of melancholy in his voice. \n\n\"Yep. I'll miss that part.\"\n\n\"Are you next? Are you going to ask me in six months...\"\n\n\"No.\"\n\n\"Just no?\"\n\n\"No fucking way. Does the profanity help?\"\n\n\"Kinda,\" he said with a smile, \"but still...\"\n\n\"Listen, jackass, what part of, 'you're the last man I'll ever have,' skip your keen mind. Do you imagine I have ever said that before? I'm nineteen, Philip. If I wanted I'd have ten thousand men by the time I was your age. That's a lot to give up but now that you've been delivered to me I have zero interest. More than that. I have a kind of revulsion at the idea of another man's penis. I want, absolutely demand, that yours be the only dick in my body - forever.\"\n\nHe turned to look up at her. \"I believe you.\"\n\n\"Look in my eyes and shut up.\" She took his face in her hands and gazed into his. \n\nHe felt the weight of intimacy again but this time he didn't panic. At first he only saw a pretty, no a fabulously beautiful, young woman's dark brown eyes, but as he lingered there he noticed a change in his understanding and in her countenance. Like a physical touch he felt something that looked like the truth in her irises. And he believed. \n\n\"Only you, my Philip, only you.\"\n\nAs though the words were pulled from his chest, he said, \"I love you, Ai.\"\n\nShe kissed him and said, \"Of course you do. Now, about ji\u011bji\u011b.\"\n\nLike a spell had been broken he heard her and changed gears. \n\n\"What do I do?\"\n\n\"Give her love.\"\n\n\"What does that mean?\"\n\n\"You love me. You love her.\"\n\n\"Yeah, and?\"\n\n\"Let her love her grandfather too.\"\n\n\"He's dead.\"\n\nShe smacked his head from the back with surprising force. \"Don't be an ass. You know exactly what I'm saying. She's a damaged girl, Philip. There is so much that has been denied her. So much she needed as a kid. He's a symbol that represents a kind of supra-father to her. An over-arching paternal figure. In short he is her granddad.\"\n\n\"And sucking his dick is going to make all right in the world?\"\n\n\"Shall I just call you jackass. Is that what you are telling me? 'Cause I will.\"\n\n\"No. Seriously, how is that supposed to help?\"\n\n\"She told me her father abandoned her.\"\n\n\"And?\"\n\n\"Rejection from a father is, like, a girl's worst nightmare. And the way she told it to me he was brutal about it. Her standing at the curb and just driving off, like, without a word. Imagine that.\"\n\nPhilip could not. \"And blowing granddad would sort of be like filling in years of bouncing on his knee.\"\n\n\"In one way, yes. Is that so strange? For us sex is our deepest bond, our greatest gift to give. We are taking you inside our bodies for god's sakes, don't you get it? Don't you know what that does to a woman?\"\n\n\"That's what has me pissed off, Ai. Don't  you get it? It's what I want. I want to be the one she gives that gift to. Only me. Why do you think I react that way thinking of Tim messing with her? And why your pledge, or promise, or whatever, means so much to me.\"\n\n\"She'll change.\"\n\n\"That's what concerns me.\"\n\n\"Philip. From what I understand you are trying to transform her.\"\n\n\"Right.\"\n\n\"From a slut who used men as her own play toys to a slut totally dedicated to you.\"\n\n\"Right.\"\n\n\"Putting aside the selfish element for a moment, did you consider what a messy job that is? Did you think a little blackmail and some anal sex was going to be enough?\"\n\n\"What do you mean?\"\n\n\"Do you want analogy or want me to spell it out?\"\n\n\"Spell it out, please.\"\n\nShe tousled his hair lovingly and gave him the analogy anyway. \"The eggs you break aren't all going to be fresh, free range organic ones. Some are going to be rotten and putrid. Some are not going to please you but you can't turn away in disgust.\"\n\n\"How do you know this shit?\"\n\n\"Listen. For you to succeed you have to love her. Love her completely like you've never loved anyone before. And it's going to fucking hurt.\"\n\n\"Wow.\"\n\n\"Yeah, and I said fucking to get it deep in your head.\"\n\nThe truth of it was like an ice cold railroad spike driven between his eyes. She was right. He hadn't been looking at it the right way. He had let his self-interest block his understanding of what Mei really needed. Of course she needed to replace her loathing of her father and by association, all men, with a connection. He had an inkling that he was part of that but the even older Dr. K could be a supplementary influence.\n\n\"So I've made a commitment to her, you're saying, and if I don't follow through, no matter what the cost, it will destroy her?\"\n\n\"You knew that.\"\n\n\"Yes, but I didn't know it like you just made me see it.\"\n\n\"You are her savior, Philip. I wouldn't have done it and I admire your courage but I worry for you. If there is anything that could damage our own relationship it will come from her.\"\n\n\"What do you mean?\"\n\n\"When you love someone you give them a knife and the trust that they aren't going to stab you.\" She noticed he was waiting. \"Mei is good but she's never loved anyone the way to she loves you. I mean, it's like it's tattooed on her forehead. You see the way she looks at you and that smile? And, I mean, any guy who can fuck a woman into a coma like that has a head start anyway. So she is vulnerable and with me in the mix she's going to have a hard time adjusting.\"\n\n\"But you said she needed you as my mistress.\"\n\n\"Yeah, inconsistent.\"\n\nHe waited for her explanation.\n\n\"Did you expect you'd be lucky enough to blackmail a hundred pound Asian hottie with great tits, a supercharged sex drive and dedicated to logical consistency?\"\n\n\"Asking too much?\"\n\n\"Might as well ask for a square circle.\"\n\n\"But...\" he began to ask about why she was the way she was.\n\n\"I'm not human,\" she interrupted. \n\n\"What!?\" For a moment he was ready to believe anything about Ai.\n\nShe paused a moment to look into his eyes and laughed the most joyous laugh he had ever heard. It was angelic in its innocence and mirth. It made him feel fantastic to witness and participate in her joy.\n\n\"Oh god, I love you, Philip. You are so fun. So damn cute.\" She stroked his head and slid her palm around to cup his cheek. \"So adorable.\"\n\n\"You had me for a minute,\" he confessed. \n\n\"What? That I'm not human? Well, I'm not telling. But I'm not a slave to logic either. Logic is my servant, like for most women. Which is how it should be. Men are dumb to let it rule their lives.\"\n\n\"How are you the way you are, Ai?\" He genuinely wanted to know.\n\n\"By stage three you'll know.\"\n\n\"I'll be lost by then.\"\n\nTo which she simply smiled her agreement. Then with a change of countenance, reverted to the previous issue. \"So, Mei Chun?\"\n\n\"No Tim,\" he said. \n\n\"Hell no! Never Tim and most likely no one else but this doctor friend of hers.\"\n\n\"God, Ai, I can't believe you're going to talk me into this.\"\n\n\"Nope. That's not your way out either. Don't do that. If this blows up in your face it's all your responsibility. I didn't blackmail her. You did. She's your broken toy and you've gotta fix her.\"\n\nHe stood. She took his hand and they began to walk back to the room. \n\n\"Thank you,\" he said and pulled her hip to his. \n\n\"Don't mention it. Pay me later.\"\n\n\"What do I owe,\" he asked with a smile.\n\n\"Semen, of course.\" \n\nHe noticed she wasn't smiling.\n\n*****\n\n Thanks to my friends VanessaNelson, Mr. Fox and GTDaytona."
    ],
    "authorname": "asianToy",
    "tags": [
        "romance",
        "blackmail",
        "three-way",
        "interracial",
        "prostitute",
        "chinese",
        "faiting",
        "harem",
        "lesbian",
        "fucked silly"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/from-jenny-to-mei-ch-22"
}