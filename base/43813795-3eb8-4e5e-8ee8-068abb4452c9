{
    "title": "Unexpected Threesome Ch. 28",
    "pages": [
        "[A combination of writer's block and a dissatisfaction and uncertainty with the arc of the narrative had made this chapter a long time coming. In the end I decided it was better to push it out and move on with the next chapter.\n\nYou may recall each of Amy and now Ellen has been given a day and night at a fancy lagoon hotel with Ned. We last left of as Ellen, unlike her usual style, screamed loudly with her orgasm. Shortly thereafter, there's been a knock at the door. Probably once again the manager responding to a report of a woman in distress.] \n\n*****\n\nEllen disengaged from me; pushing herself up on her arms and letting the residue of my erection and a pool of cum drop out of her.\n\nThe door bell chimed a second time.\n\n\"Coming!\"\n\nShe picked a beach towel up from the floor and tried to wrap herself in it, only to find her 182 cm height left at least one of either her breasts or crotch exposed. Instead she just draped it lengthways down her front; her naked, and rather cute, bottom completely visible to me as she opened the door.\n\nAs for myself, I was in a post sex mess. My chest was still damp from Ellen's squirting and my cock semi-hard and sticky and now pooled with the discharge from Ellen's delectable sex. For the second time I had to pull a sheet over my nakedness, although a number of damp stains quickly penetrated through it and the way it settled over my still only half flaccid cock left nothing to the imagination.\n\nAs the door opened I could hear the manager's voice.\n\n\"Mademoiselle, you promised you woul...\"\n\nHis voice trailed off as Ellen appeared to him and he realised it wasn't Amy. I could see him studying her semi nakedness, probably realising she was uncovered from behind.\n\n\"Excuse me Mademoiselle, we've had a report of a woman screaming in pain as if being attacked or in distress.\"\n\nUnlike Amy, who playfully acted out the role of a naughty child with him, Ellen stood ram rod straight, looked him in the eye and addressed him something like a doctor might telling a patient he had cancer. It was an admirable achievement when you're standing naked in plain view of a stranger, with your modesty protected only by a towel held draped down your front by an arm across your chest, while the cross draft through the door seems determined to blow it to the side and expose far more than is appropriate. She even managed to avoid any slurring of her words, given her still tipsy state.\n\n\"I'm very sorry. I'm certainly not in any danger or at risk of being hurt or in any pain. I was simply given the best orgasm I've ever had and it caused me to cry out. It's not something I normally do, so it caught me by surprise. I apologise and I won't do it again.\" \n\nSomewhat flustered by a turn of events he wasn't expecting and a reply which, for all its expressions of contrition, in tone almost came across as a slap down, the manager looked across to me.\n\n\"Monsieur, is the other Mademoiselle well?\" \n\nEven allowing for the awkwardness of expression his formal French English might produce, it struck me as a slightly impertinent question. Was he trying to embarrass me in front of Ellen by letting her know I had another woman with me the previous night? About the only legitimate concern he might have as a hotel manager was that I'd had a succession of hookers in my room. In defence of the girls, it was for that reason I decided to give him a straight answer that laid all the cards on the table.\n\n\"Yes. She back on the yacht looking after it while my other girlfriend crewperson here has her turn with me.\"\n\nWhich told him I had two, way too young, girlfriends who were both aware of each other. I could only imagine what that would do to his brain and the gossip circles around the hotel. I deliberately refrained from offering their names, even at risk of depersonalising Amy and Ellen, because I felt it was none of his business.\n\nWith, he no doubt felt, his duty having been done, the manager excused himself and retreated from the room.\n\nEllen in turn discarded her towel and her formality and did a playful, naked superman leap on top of me.\n\n\"So, I'm officially a girlfriend now am I? Wow! Does that mean I can call you my boyfriend? You are so going to have waitresses buzzing around you like flies at breakfast tomorrow. I think I'd better find a cricket bat the beat them away.\"\n\n\"Just because I haven't had cause to use the term didn't mean you weren't one. Mind you, 'boy' hardly seems appropriate. Anyhow, when they know you're both actually girlfriends, they'll realise I'm not available so not worth the effort.\"\n\n\"That assumes they get told that part of the story or even that they care. Just a plain 'another screaming orgasm' makes a much better story.\"\n\nI threw back the sheet again to let Ellen roll onto the bed beside me. She settled in, cuddled against me and, as I thought she would, soon crashed into a deep sleep. Unlike Amy, Ellen seems to have been sated by our evening's activities. For the first half of the night we both slept soundly and to the extent there was any restlessness in the second half, cuddles seemed to satisfy her needs.\n\nI was lying on my back awake in the morning admiring her naked body laid out next to me, when Ellen too drifted into wakefulness. As our eyes met, she stretched out her long limbs, in the process closing the tiny gap between our bare flesh and wrapped herself around me.\n\n\"Mmmmmmmmmmmmm. That was such a lovely night. Thank you. I suppose I should be embarrassed about the way I was sex talking and coming on to you all the way home, but I'm not. It was fun letting myself go like that. I've never done that to anyone before.\"\n\n\"It was delightful to see you so uninhibited. But I thought you might not even remember it this morning.\"\n\n\"Oh no. I was nowhere near that drunk. Anyhow, there's no way I ever want to forget an orgasm like that.\"\n\nEllen looked across the bed to the clock and added...\n\n\"Goodness, is it that late? We'd better head off to breakfast soon. Did you come up with that cricket bat for me?\"\n\nAs I lay on my back, Ellen settled in with her arms wrapped around me and her head on my chest. She purred as I stroked her beautiful long blonde hair, gliding my hand across her head and then letting a bunch of hair slip between my fingers as I traced its lovely, silky length all the way down to its termination in the small of her back.\n\nInevitably such intimate contact had its effect and right under her eyes my manhood swelled, stood upright momentarily as it repositioned itself from its original flaccid resting spot between my legs and flopped onto my stomach. From there, it completed its growth, expanding in girth as its tip inched itself suggestively in the direction of Ellen's downturned face.\n\nEllen playfully stroked it up and down with the tip of a single finger; causing it to surge.\n\nMy physical reaction didn't really mean I wanted sex. Not after last night. So I was rather glad when she seemed content to let me keep stroking her hair while she played teasingly with my engorged member. After about five minutes, it was Ellen who broke the spell.\n\n\"Well, I suppose we'd better get up and go to breakfast.\"\n\nWith a planned walk along the seaward beach of the Island after breakfast, Ellen dressed in one of her 'fuck me' bikinis covered only the tiny mini skirt she arrived at the resort in. I went for speedos under shorts and a polo shirt. With a beach bag with hats and a few other necessities we headed off for breakfast and what, frankly, was one of the most bizarre mornings of my life.\n\nWe were no sooner out the door than we were confronted by the sight of a room cleaner's trolley with its operator bent deeply over it; apparently fiddling with something at its furthest reaches. With her white cleaner's pareo hitched high, her whole butt and crease were on display, clearly showing she had nothing on underneath.\n\nAs she heard our approach she stood up and turned towards us. Like most of the female hotel staff, she was quite a beautiful Tahitian local, probably in her early 20's. What was immediately noticeable was that her pareo was held up by being hitched over only one breast. The other was fully exposed; a sizable perky orb, capped by a large dark nipple. Feigning ignorance of her exposure, she beamed a broad smile at us.\n\n\"Good morning Mr O'Neill. Would you like me to make up your room while you're at breakfast?\" \n\nI cast a quick look at her name tag; not an easy task since it lay in the fold of material under her exposed breast.\n\n\"Good morning Mohea. You may, but are you aware we're checking out today, but not until 2.30?\"\n\n\"Yes Mr O'Neill, but I thought you might like the room freshened up for you. I'll make it again after you leave.\"\n\n\"Thank you Mohea.\"\n\nAs we continued hand in hand down the boardwalk, Ellen nudged me in the shoulder.\n\n\"You flirt. Where's that cricket bat. Did you see how the flower behind her right ear was turned backwards. That means she was telling you she was immediately available; as if her pussy display as we walked out the door wasn't doing that anyway. I bet she's left her telephone number in the room when we get back.\"\n\n\"What do you mean about the flower?\"\n\n\"Those flowers they wear in their hair aren't just decorations. They tell you about their sexual availability. Left ear is taken, right ear is available, both ears means married but available anyway and backwards means available now.\"\n\n\"Where did you learn that?\"\n\n\"I was doing some cultural research while waiting on the yacht yesterday. The missionaries weren't entirely successful in imposing their conservative sexual mores. The local culture has managed to retain some of their original more relaxed attitude to sexual engagements.\"\n\nI didn't have time to explore further. The path to the breakfast room seemed rather crowded with hotel staff that morning. \n\nTwo cleaning staff, both very young and attractive women, stood on the side of the walk letting us past. Their eyes had been on us from the moment we'd left Mohea and they giggled and whispered to each other as we approached and both had flowers displayed backwards behind their right ear. In what was intended to look like an accident, but clearly wasn't, one of them brushed her arm across her body in a way that lifted the front of her Pareo, revealing a rather cute but very naked mound covered only in a well trimmed bush.\n\n\"Good morning Monsieur, Mademoiselle.\"\n\n\"Good morning ladies.\"\n\nFour more of the staff just seemed to happen to be idling along the path we took to the breakfast room that morning - every other morning there'd been none. Two of them were young women showing enough breast that their areolas were half exposed over the top of their pareos, but the other two were guys. The latter two were topless, dressed only in their lap laps and had been seen to reposition themselves onto the side of the path where Ellen was as we approached. While they were trying to look nonchalant, I'd noticed them suck their stomachs in and lift their chests out as we'd approached. I'd also noticed Ellen start to sashay in a somewhat sexually suggestive way. \n\n\"Bonjour Mademoiselle, Monsieur.\"\n\nEllen flicked her hair and beamed them a smile.\n\n\"Bonjour.\"\n\nDistracted as I watched Ellen and the boys, I felt a body gently collide with me on the other side, the natural swing of my arm as I walked causing my hand to slip between the legs of the other person. In that instant it took me to respond to the contact and turn towards her, even with the relative insensitivity of the skin on the back of my hand, I realised it had come into contact with the naked crease of a woman. A very damp naked crease.\n\nAs you do in that sort of collision, instinctively I stopped, froze and turned toward the woman standing millimetres away from me to find that the contact had dislodged the precarious hold her garment had previously had on her breasts and that they were now exposed. Indeed, since the projection of her breasts had largely been holding the garment up, it was rapidly slipping off her body. Her friend, standing behind her, held her hand over her face as she giggled at the charade.\n\n\"Bonjour Mr O'Neill. Pardon, I wasn't watching where I was going.\"\n\nEven as she spoke and while standing millimetres from me, she had grabbed the garment, unwrapped the front to open it up and in the process revealed her full nakedness to me; a somewhat stunning full nakedness. Then in no great haste to block the view I had, she hitch it back to breast height and wrap herself back in it.\n\n\"Excuse me Mr O'Neill. I had a clothing malfunction.\"\n\nShe offered me her hand. Dumbfounded by the events, I took it and shook her hand, letting her pin me in place as she looked me in the eyes and offered a beaming smile.\n\n\"I'm Tahea. I work in reception.\"\n\nI felt Ellen pinch my butt.\n\n\"We need to get to breakfast.\"\n\n\"Sorry Tahea, I was the one not watching where I was going. Enjoy your day.\"\n\n\"I intend to Mr O'Neill. I intend to. But it's off to a good start. What do you have planned?\"\n\n\"After breakfast, we thought we might go for a walk up along the northern beach.\"\n\n\"It's very beautiful. I'm sure you'll find some delights up there.\"\n\nAs we walked on, I noticed Ellen was still putting on an exaggerated swing of her hips as we walked away from the guys. Now it was my turn to comment as I teased...\n\n\"Now who's flirting? I saw you walking like that.\"\n\nShe gave me a playful wack on the butt.\n\n\"Yea, well, you just had a woman deliberately expose herself to you. What's good for the goose is good for the gander.\"\n\nI remained acutely aware of the thought I had Tahea's dampness on the back of my hand. I lifted it up to look at it. I could see it glisten in the morning light and brought it to my nose to take in the wonderful aroma of a woman. It wasn't water. Something had made her very aroused. I felt the dampness with the finger of my other hand, smearing its slippery texture across my skin.\n\nEllen noticed and elbowed me in the ribs.\n\n\"Is that what I think it is? Did she slime you? The bitch. Where's that cricket bat?\"\n\nWhat struck me when we entered the breakfast area was that there seemed to be more staff on duty than normal and, except for Raphael, they were all young women. I quickly discovered it was no accident.\n\nWe were shown to a table outside next to the pool by two waitresses. Because they pulled the chair out for each of us, we dutifully sat down, even though we knew we'd shortly be getting up again to select our breakfast from the self service area. \n\nAfter I thought they'd left, I sat back in my chair with my hands spread lightly gripping the edge of the table, about to suggest to Ellen we go and get some food, when one of the waitresses came back, slipped her pareo over my hand and leant on it as she bent and reached across to fill my and Ellen's water glasses. As she did, I felt the raised knuckles of my hand lightly worked down into and through her naked crease.\n\nThe glasses filled, she stood upright with her crease still on my hand and half turned towards me.\n\n\"Good morning Mr O'Neill. I'm Rarhu. Can I offer you anything more?\"\n\n\"I think that's enough for now Rarhu. We're about to get some food.\"\n\nAnd that, pretty well, was the story of that breakfast. There were six waitress in the room and in the hour and a half from when we left our room until we'd finished breakfast, I saw and touched up as much pussy as I had in my whole previous life. Every time I left a hand or elbow projecting anywhere, it seemed to find itself under the hem of a pareo. The coffee was topped up after every sip and every time I moved I seemed to find myself in collision with a waitress, often with a clothing malfunction following. Every plate or other item on our table which gave even the slightest impression of being finished with was cleared immediately, usually accompanied by a butt or breast exposing bend over the table.\n\nIt became a game; leaving a hand on the edge of the table to see how quickly it was claimed by another pussy and with what flimsy excuse and increasingly, how damp they were.\n\nBy the end I could tell you who was wearing the cute pink satin thong, who had the lace thong and who had no underwear at all (the rest of them). And among the rest I knew who had a Brazilian and who had bush. I could even describe most of their breasts and nipples and give you a pretty good guide to how easily aroused they were.\n\nAnd yet it was all done with a subtlety that seemed not to attract the attention of other guests.\n\nEllen was cacking herself laughing at the whole, never ending game; more so as I ended up being slipped three pieces of paper with names and phone numbers on them.\n\nAs we left, the six of them all came over to say goodbye, like at some official engagement. Ellen waited until we were out of earshot.\n\n\"So, how many pussies did you just touch-up over breakfast?\"\n\n\"All six of them.\"\n\n\"Were they all naked?\"\n\n\"No, two had panties.\"\n\n\"Wet?\"\n\n\"Well, at least half were fairly moist.\"\n\n\"You know the irony of this don't you?\"\n\n\"What?\"\n\n\"When we got here, you were concerned I'd be embarrassed about being seen to be in an intimate relationship with you. Now I've got women even younger than me wishing they could displace me in your bed. And guys thinking that, if she can keep you happy then she must be a bit of alright, so they're ignoring all the stunning local beauties to chase me.\"\n\n\"They'd be chasing you anyway. But I suppose it does make me more comfortable about publically showing affection towards you without embarrassing you.\"\n\nThe icing on the cake for the morning - if I can call it that - came as we were strolling back along the beach towards the hotel after our morning walk and swim.\n\nThe sun was still low in the Eastern sky and the sea was an ocean of reflected light. Just beautiful in that way that only tropical waters can be.\n\nWe were still only dressed in swimwear; enjoying the warmth of the sunlight on our bodies as we let it complete drying us off after our swim. \n\nSomewhere not too far up ahead, obviously off in the bushes to the side of the beach, we heard a drum start up a fast beat. It continued as we approached until we came to the point where we could see what was happening.\n\nThere was Gloria and Tahea, dressed only in tiny, red mini wrap skirts, both split to the side knots holding them together low on their right hips. They were both dancing in that somewhat familiar hip twirling Polynesian style. I've seen plenty of tourist versions of the dance in our travels; but this was something again even allowing for the fact it more accorded with the Tahitian version.\n\nIn almost perfect synchronicity, they danced without their feet seemingly moving; their hips swaying and circling powerfully from side to side apparently driven only by the strength of their stomach and thigh muscles. They both had beautiful, tall, slender, womanly figures that had only been hinted at under their work pareos; even when I got a look down the full length of Gloria's when she'd bent over the table. Indeed, they were gorgeous; flawless brown skin, impressive breasts, and beaming smiles that lit up their beautiful faces. I felt my cock swell a bit just at the sight of them.\n\nThe only other parts of their bodies that moved very much at all were their arms which seductively moved from out stretched to their side to overhead and then out to the front. Amongst all this movement, their sizable breasts, still perky in their youthful beauty, merely wobbled sexily.\n\nThey beamed us another smile as they saw us come into view. Gloria cast a quick look across to Tahea and, as one they turned on the spot, their cute butts now the focus of attention as their fast hip sway and circling continued with their arms held above their head, elongating their figures. Another quick glance across from Gloria and they turned back. As they did, they loitered with their right side facing us for just a moment; the movement of their hips flipping the split skirt open enough to make it quite clear they had nothing on underneath.",
        "As we kept walking toward the centre of the opening, the angle of our view opened enough to reveal it was Raphael playing the drums, wearing nothing more than the two girls. And while I'm no expert judge of male figures, I would guess that Ellen probably would have found the display quite attractive. And all three of them had a flower in their hair turned backwards.\n\nAs the girls turned back around to the front, Gloria spoke in a voice remarkably free of panting, given how vigorous their dancing was...\n\n\"You can stay and watch if you'd like Mr O'Neill, were just practicing the dance we put on for the tourists.\"\n\nI very much doubted this was the version the tourists got; unless there was an x rated show somewhere. Even discounting the lack of clothing, this was a highly sexualised version of anything I'd seen before. \n\nFrom what little I'd seen, the Tahitian form of this type of dancing is somewhat different from the more familiar Hawaiian version. The Tahitians move about less, and move their arms less; the arms moving slowly through a series of fixed postures out to the side or above their head and, less often, in front. The key aspect of their version seems to be the way they hold their feet tightly together and move their hips in a really fast circle; turning from front to back and to the front, with the back view showing their butts performing an ancient version of twerking that leaves any modern performer for dead.\n\nRecognising this was clearly a set up, uncertainly, Ellen and I stopped at what we judged was a respectful distance, and loitered to watch the show.\n\nGloria held out her hands to the front, signalling me with her fingers to join her. At the same time Tahea motioned to Ellen.\n\nI know at the tourist shows they often get the audience to join in and embarrass themselves, but given the events of the last couple of days, this was a more calculated invitation. Indeed, given Raphael's past smitteness towards Ellen, I even had a momentary concern as to her safety.\n\nI looked across at Ellen who was clearly having the same thoughts, although maybe absent any sense of danger. She smirked at me and waved her head in a way that indicated I should accept Gloria's invitation.\n\nCautiously I approached her, accepting the hands Gloria held out towards me as she never stopped circling her hips to the fast drumbeat while Ellen did the same with Tahea.\n\nAlmost immediately the girls drew their hands out wide to their side, drawing our bodies towards theirs; even more so as they drew them back even further so that it projected their chests out and forced us into contact with them.\n\nEllen seemed relaxed about it and just went with the flow, soon in full body to body contact with Tahea, their breasts interlocked, even as she got into the spirit of it and did a reasonably persuasive - if amateur - version of what the other girls were going with their hips. I had instinctively adopted a stance that held my hips back from contact with Gloria's crotch, even though that meant her breasts were rubbing on my chest, quickly causing her nipples to become large hard buttons.\n\n\"Can you sway your hips Mr O'Neill?\"\n\nTo be honest, I had been too shy to even try. Call it the inhibition of being post middle age.\n\n\"Not as well as you Gloria.\"\n\n\"Let me help you find the rhythm.\" \n\nWith a glance across to Tahea, who then followed in time, Gloria raised her hands above her head, pulling mine with her. Like Ellen and myself, Gloria was a tall slender 6ft in height with legs that were quite long in relation to her body. She'd left me no choice, pulling my body up straight so that my hip met her already thrust forward one.\n\nWhen Ellen and I had been frolicking in the water earlier, she'd had intentionally kept me aroused; partly because she likes sexual play, partly no doubt as part of the girls' 'top up his testosterone' policy. As the girls are prone to amusing themselves by doing, she stuck her hand down the front of my swimmers and positioned me into the full horizontal position. This is their name for when the stretchy material of my speedos is holding my erection in a way that sheathes and holds it as it projects it horizontally forward; instead of letting it rise to the vertical. Inevitably it stretches the leg hems away from my thighs too; letting my balls hang out in a way that amuses them further and has even let them teabag themselves with them.\n\nAs I'd gone back to flaccid, it had sat itself in my swimmers in what you might call the 'cocked' position, sitting facing downward, so that upon any further arousal it would be trapped by the material to stretch out horizontally again. \n\nAlmost immediately as Gloria raised her hands and pulled me against her, the tip of my cock had slipped under her wrap and between her rapidly moving thighs. I couldn't help it or resist it. It caused me to become aroused; my manhood pushing itself between her thighs and up against her crease. Gloria just looked me in the eyes as she kept the circling movement up. I could feel the hot wetness permeating my swimmers as my erection was moved vigorously within the confines of her crease.\n\nAt first I still twisted my back, angling my hips away from Gloria's as much as I could to minimise the extent to which my erection penetrated between her legs. But the posture was unnatural and uncomfortable.\n\nAgain I looked across to Ellen; uncertain as to whether I should bring this whole sexualisation of the dance to a halt. She may not have been able to see where my cock was positioned, but she can't have had any doubts as to what was happening. It might have been playful and fun, but it was a blatantly sexual act. In a conventional relationship it would definitely constitute unfaithfulness. Mind you, Tahea seemed to be giving her mons a pretty powerful rub against Ellen's too.\n\nAnd then there was the question as to Raphael's role in all of this. My head's movement caught Ellen's attention and, as the other girl kept circling her crotch and rubbing her breasts against the corresponding parts of Ellen's anatomy, she gave me a broad smile and an eye rolling nod in a way that said 'go along with it'. \n\nI gave up my uncomfortable attempt at modesty; straightening my back and letting as much of the length of my erection slip between her legs as a normal stance would permit, which was most of it.\n\nI'd been amazed at how Gloria had been able to dance like that without it affecting her breathing. But now for the first time I could hear the tone of her breath changing; it was faster and heavier. From staring at me as she had been initially, her eyes slowly closed as if they were looking inward. She started biting her lip.\n\nA little squeal escaped her and she suddenly froze on the spot as she obviously climaxed, bending her knees to press my erection more firmly into her crease as she rocked it back and forwards a bit. She momentarily tried to start circling her hips again, but almost instantly was overwhelmed by either more of the first climax or another; rubbing her whole body up and down against me as she slipped my erection through her crease. \n\nFor a minute she just hung there pressed against me, her head over my shoulder panting and heaving into the side of my neck, all while the drums kept up their rhythm in the background. More cautiously this time, she started circling her hips again, bringing her arms down and then slowly forward to disengage our bodies, looking across to the Tahea, who matched her moves while dancing with Ellen.\n\nWith a signalling yelp from Gloria, as a coordinated trio, the three of them called on their stage dancing skills to rotate their positions. In two graceful leaps, Gloria swung towards the back of the clearing to the drums as Tahea's leaps spun her in a circle as she landed in front of me and Raphael, more worryingly, presented himself in front of Ellen.\n\nEven with the momentary silencing of the drums as Gloria replaced Raphael, the dancers hadn't missed a beat.\n\nAlmost immediately, Tahea and Raphael performed a synchronised raising of their hands to draw myself and Ellen into full body contact against them and, in my case, my erection under the hem of her skirt and into the wetness of her crease as their hip dancing continued.\n\nHaving my erection within Tahea's crease as she danced like that was a bit like sticking it in a washing machine; albeit a gentle, warm, wet and very slippery one. Her crease wasn't quite the centre of rotation of her hips, so the tip of my erection was being moved around in a fast circle as I felt each thigh muscle contract and relax to induce her hip movements. It wasn't hard to imagine that the movement of it against her clit must have been extreme; certainly faster than I thought most women liked to be stimulated down there.\n\nBut combined with the way she was rubbing her nipples on my chest it must have been working for her. In less than a minute and a half, she let out a blood curdling scream - more war cry than orgasmic - as I felt my shaft flooded with a hot liquid as, I could but assume, she'd squirted.\n\nShe kept circling; but now with tensed up thighs, letting out a number of war cry like grunts as each wave of her climax or climaxes seemed to peak; her whole body sizing up into a momentary spasm which saw her aggressively thrust her hips forward with every grunt.\n\nSlowly, she lowered her hands and brought them forward, letting me - indeed, telling me to - disengage the contact between our bodies.\n\nThe drums built to a crescendo until their constant rhythm dissolved into a number of single loud beats accompanied by a war cry like yell from each of them; signalling the performance was over.\n\nTahea and Raphael stood motionless in front of Ellen and myself without any apparent awkwardness on their part; like performers waiting for an encore. I felt acutely awkward; uncertain what to do. I looked down. My erection still projected well forward, the material covering it; dark stained with fluids which continued to drip off it.\n\nTahea stepped forward, took my hand and kissed me on the cheek, ignoring the way my erection prodded back under her skirt, whispering into my ear...\n\n\"Thank you Mr O'Neill. I hope you enjoyed our performance. I can promise you a performance and delights unlike anything you've experienced before if you could join Gloria and myself in the bushes behind us.\"\n\n\"Thanks Tahea, but I'm not in a position to do that.\"\n\nAs she moved her head away, she left some parting words...\n\n\"We can meet later if that suits you better.\"\n\nAs Tahea stepped out, Gloria replaced her, doing the same...\n\n\"Thank you Mr O'Neill. Think about what Tahea offered. It will be worth your time.\"\n\nI took Ellen's hand, expressing thanks for their performance as we continued to head back to the resort; not quite sure what to make of the whole episode. I just felt the need to talk to Ellen about it.\n\n\"That was weird. Were you comfortable with it all?\"\n\nEllen laughed.\n\n\"Is weird the best word you can come up with for that? It was outside my comfort zone, but I didn't feel threatened or offended by it if that's what you mean.\"\n\n\"What about the girls all but raping me? Didn't that bother you?\"\n\n\"I think raping is a rather emotional word for what was a consensual involvement by you. If you're asking whether I was jealous or annoyed by it, not really, or not much anyway. I knew you were looking for my permission to participate and I freely gave it. Just about every woman on the island has wanted a piece of you since the manager blabbed about the screaming orgasms. If that's all they get, then Amy and I are doing well. Anyhow, Raphael dry humped me - although he wasn't dry after he'd finished.\"\n\n\"Didn't that worry you? I thought you girls hated such creepy behaviour.\"\n\n\"He didn't last long. About thirty seconds. As long as he kept it in his lap lap and rubbed it on my stomach, I could deal with it. I certainly wasn't going to let it go between my legs. As for the bigger question of creepy behaviour, it's contextual. If someone tries to do it in a crowded train, it's not just creepy, it's sexual assault. But again, what happened was consensual. He'd had an erection tilting up his lap lap from the moment he'd come into our view. Once the girls started dancing with us, I knew how that part of it was going to end and I was ready to control things if he tried to go too far. You've stirred up a hornet's nest of sexuality in the place with what's been happening.\"\n\n\"ME? I think I might have had some help in that.\"\n\n\"Ahh no. You're the one who's brought a succession of stunning woman into the resort and made them have screaming orgasms. We were just the innocent victims. Don't ask me to protect you from all the woman who are now going to be chasing you. By the way, have you noticed the front of your swimwear is somewhat... stained and unusually configured? We might need to fix that before we get back.\"\n\nThe erection was still pushing out the front of my speedos, my balls hanging out the stretched leg hems and the material over the top surface of the erection very wet, although no longer dripping from Tahea's squirting.\n\n\"Yea, I might need to jump in for another swim before we get back. Don't you think Tahea over egged it a bit with her screaming. I mean it was little more than a good fingering with a somewhat thicker finger. Surely it wasn't going to produce an orgasm that intense. Although she did squirt. I thought that only happens with a g spot orgasm?\"\n\n\"On the squirting, I don't know. That's how it works for me, and even then, only rarely, but everyone's different. And if she did squirt, then it probably was an intense orgasm. But Ned, Ned, Ned, how many times do I have to tell you that for women, sex is often as much in the mind as it is in the crotch. As far as she was concerned she had the stud every other woman on the island wanted between her legs. That might have been enough to trigger a monster for her. So there you are, now there's going to be another woman telling everyone how you blown her brains with a screaming climax. We'd better get you out of here before things get out of control.\"\n\n\"You don't think what just happened was a bit out of control?\"\n\n\"It was unusual. 'Out of control' is probably taking it too far. But were on a holiday on an exotic island with different traditional customs and you've attracted attention to yourself. That's meant to be part of exotic holidays, isn't it? That's why I went with it.\"\n\n\"Did you hear Tahea's invitation?\"\n\n\"Yes. Are you tempted?\"\n\n\"I can hardly do that.\"\n\n\"Isn't it every man's dream? As I've said before, you gave us permission for sleepovers, so you should have the same freedom.\"\n\n\"Any dreams I have at the moment are limited to you and Amy. No I'm not tempted or disappointed I'm not in a position to take her up on it.\"\n\nEllen cuddled into my shoulder.\n\n\"You know Ned, I feel guilty admitting this to you, but I feel enormously happy hearing you say that. The thought of you sneaking off into the bushes with them for some wild sexual romp somehow fills me with jealously.\"\n\n\"Why should that make you feel guilty? That's just human.\"\n\n\"Because in theory we're meant to be in some sort of open relationship and feeling jealous might make you feel hemmed in by us.\"\n\n\"As I've said before, the openness was something that applied to you girls so we didn't close out the possibility of you meeting someone closer to your own age. I was never wanting to take advantage of it. You girls have offered me so much I'd be a fool to want more.\"\n\nHaving moved a short distance down the beach from where the others were, Ellen led me back into the water to freshen up. She found great delight in 'cleaning up' my swimmers by rubbing her hand up and down the length of the projecting erection to 'cleanse me of the sexual taint of other girls' as she so eloquently and jokingly put it.\n\nIt might have done that, but nothing she did in the water let my erection subside. I came out with it bigger than when I'd gone in. I was going to have to let the rest of the walk do that and just hope no one else came along the beach; although as Ellen turned playful and started physically flaunting herself in my path, it took longer than it might have.\n\nWe managed to get back to the room without any further incident. There we changed for lunch with Amy; Ellen into the loose hanging, plunging crop top worn braless and 'A' line mini skirt she wore to lunch the previous day, me into a pair of shorts and a polo t shirt. Since I saw Ellen go commando, I did too.\n\nOur timing was good. As we arrived back at the reception area, we saw Amy motoring the RIB towards the resort jetty. After we helped her ashore and tied the RIB up in a way that wouldn't interfere with other users of it, Amy stripped out of the waterproofs she'd worn to protect her lunch clothes from the chop of the lagoon. \n\nThat left Amy in the pair of yellow hot pants and tightly fitted plunge necked t shirt which had also been her lunch outfit for the first day. The fact she had no bra was obvious. But it took only the most casual observation to conclude she had no panties on either.\n\nIt wasn't coincidence that their clothing outfits hadn't changed from the previous lunches. In an environment where the standard outfit each day is nothing more than a 'fuck me' bikini, they have a limited selection of clothes. When you narrow it further down to clothes bought since coming aboard with the specific purpose of arousing me, that are in that zone of not being too casual for a fancy resort lunch but not being excessively formal either, the selection was narrowed further.\n\nI'd known all along that Amy's procuring of a late checkout for our room was strategic. The girls obviously had some carnal intent for me and the thought of that, combined with the sexuality of their clothing meant there was already a half mongrel in my pants by the time we walked into the dining area. To make matters worse, because I was commando, the swollen tip of it was edging its way towards exposing itself out the bottom of the leg of my pants.\n\nTo try and hide it, I let the girls lead, an arm around each of their waists drawing them together as I walked behind. But that left me trailing in the wake of these two beauties; the sensuous waft of their femineity, the play of their gorgeous long hair on their back and the sexualised movement of their tall slender bodies all ensuring that the half mongrel wasn't going away any time soon.\n\nBecause I hadn't booked for lunch, and with today being our check out day, our presence perhaps not anticipated, there was less of a gaggle of waitresses. But you could see those who were there somewhat taken aback to see Amy back with Ellen. For a while that shock value seemed to keep them at bay; even the young waitress who'd been most aggressive at breakfast called Mohea. Plus, with a girl on either side of me, both of them sitting and leaning in as close as the layout of the table would permit, others found it difficult to get a point of access.\n\nOur order was taken by the cute little Mohea, whose best attempt at seduction was limited to more than a little peak of areola showing over the top of her pareo.\n\nEllen's was less subtle. As soon as Mohea left, I felt Ellen's hand slide up the loose leg of my shorts and wrap itself around my manhood. With a cocktail in the other hand, she continued a detailed download on Amy of the events of the day with a completely straight face even as an erection exploded into her hand. She guided it out of the leg of my shorts and let it stand upright; drawing the lower hem of my pants tightly up against my balls in the process as the tip of it rested against the underside of the table, hidden only by the long table cloth.\n\nAll I could do was sit back in my chair with my hands on the edge of the table grinning like a Cheshire cat as Amy looked at me and kept repeating \"really\" in slack jawed astonishment with each new revelation and all the time Ellen's polishing my manhood; her hand occasionally giving the table a jolt as she misjudged the length of the appendage she was polishing.",
        "The girls were two cocktails in and had broken off from the last details of the dancing episode to choose the wine for lunch, when Mohea arrived with the entrees. I'd been going easier, knowing someone had to stay sober enough to drive the RIB home.\n\nIt was probably just in time. With her inhibitions dropping with every sip of her drink, Ellen gave every impression of being ready to slip under the table and give me a blow job. She sat upright as Mohea went to slip between her and me to put my food on the table; although she was still able to reach across surreptitiously under it and circle my manhood.\n\nI wasn't quick enough to move my hands and sit forward. Before I knew it Mohea had her naked pussy resting on my hand as, in no great haste, she lowered first mine and then Ellen's plates onto the table, then bent and reached across to put Amy's in front of her too.\n\nMohea was of a more diminutive stature than the other waitresses. She'd stood on her toes to slip her crotch over my hand. For the same reason she had to bend fairly deeply to reach across to Amy, giving me a momentary view of the middle two knuckles of my hand disappearing into the crease that ran through her bulging mons. \n\nAs if to remind me that Mohea had an exposed erection pointing up at her pussy more or less right under where she had it rested on the table and my hand, Ellen was jerking me furiously while completely unsuccessfully trying to suppress her amusement in doing so. \n\nAs Mohea disappeared with an order for a bottle of wine, Ellen finally released my shaft to give her two hands to eat with. But that didn't mean my erection instantly subsided. The girls' clothing had been specifically chosen to excite me and they weren't shy about flaunting their breasts with their jutting nipples even as they ate.\n\nIt was Ellen who suddenly turned the conversation to a more serious topic.\n\n\"What do you see happening when we get back to Sydney?\"\n\n\"What do you mean?\"\n\n\"Are you just going to kick us off the boat and wave us goodbye?\"\n\n\"Aahh, that's what you're asking. No, and I hope you'd know me better than that. But it is something I have been thinking about and I suppose I should have talked to you about it before.\n\nI've got a large house on an acreage at Bayview Heights overlooking Pittwater. It presently has a house sitter looking after it.\n\nIt was our family's home where I raised my kids, so it has plenty of bedrooms. My thought was to invite each of you to stay there until you settle in, get jobs and work out where you want your life to go. But of course, whether you want to do that is entirely up to you. I mean, I know Ellen has family living nearby, so that might not suit her as well.\"\n\nAmy chimed in...\n\n\"Would there be a time limit?\"\n\n\"I don't see why. You know, because we've talked about it so often, that my hope for each of you is success in life, but especially that you will come to find a love that will better serve your longer term ambitions. It's not that I want to lose you, but it's just wrong that I would selfishly hope that you would anchor yourself to an older guy like me who's not going to be in a position to be a good father for any children you want and who's just going to get older and more decrepit well before you're ready to be stuck with that.\"\n\n\"What if we decide we want to be anchored?\"\n\nIn a way, this had always been my fear with Amy. A fear for her sake, not mine. I understood that after the decade of abuse she suffered, there was a danger I'd be adopted by her as a safe port in a stormy world. I looked her in the eye.\n\n\"The love I feel for each of you is deep and real and permanent; or at least as permanent as any love can be. It's not a love of convenience for the duration of the trip. In a way you're asking me whether I love you enough to deliberately hurt you by rejecting you and kicking you out, just because I think that's the best thing for your long term happiness. I certainly do love you enough to be concerned about your best interests over mine. But to actually hurt you would break my heart. If I knew beyond any doubt that your path to long term happiness was best served by that, maybe I'd bring myself to do it.\n\nIf you were absolutely sure to be lucky enough to find a younger fantastic guy who'd be a worthy life time partner and father of your children, then I definitely should do it. But I'm not arrogant enough to believe that life offers any such certainty. You're intelligent women. All I can do is make the consequences of the choices clear and let you decide.\n\nMaybe that and make it clear you have the option of a soft exit and a chance of coming back if things don't work out.\"\n\nEllen put her hand over mine and asked...\n\n\"What about you Ned? What do you want out of life?\"\n\n\"I believe in love. I've lived with love for most of my life and it suits me. I want to find a love that will last me into my older years - or at least has a good chance of doing so. Someone I can share those years with.\"\n\n\"We understand that Ned. Maybe that's even what makes us feel insecure about an older woman like Liddy attracting your attention. Still, you might be underestimating the staying power of a younger woman. But I think you're right about one thing. Until we get back onto dry land and settle in, it's really hard to predict what any of us will decide is the best way forward. I suppose I'm just really grateful you've been thoughtful enough to have planned these things ahead.\"\n\nI looked into Ellen's eyes as she spoke those words. The love I saw in them both drew me and scared me. It drew me because it reflected back the love I felt for her but it scared me because it made me worry that she, perhaps like Amy, was in too deep for her own good; that maybe what should be for her a mere fling on the yacht had gone way beyond that.\n\nAnd yet, I found my desire to fight against them in that rapidly dissolving.\n\nLunch passed quickly enough. After all, in the girls' mind it was a mere prelude to something else and there was a strict 2.30 time limit on that. \n\nWhat minimal inhibitions they might have started lunch with had been reduced to nothing by the cocktails and wine. Ellen particularly seems to fall into some sort of sexual overdrive by these meals; pulling my hand across to finger her between courses only to rip it away just as I felt her quivering on the verge of a climax. But the 'edging' as she's previously called it, clearly left her aroused, randy and somewhat frustrated.\n\nAmy would have liked the same, but her clothing was less facilitatious of it; the tight hot pants offering no easy access. And while the material they were made of was thin enough to let me finger her through it, the bright yellow material clearly showed any damp stain, making her eventual exit from the dining room awkward. But she did persistently brush her hard and jutting right nipple against my left arm and with Amy being one of that ten percent of women who can have nipple orgasms, I was very much attuned to the way her breathing was reacting to her doing that.\n\nEllen had also started up her new found attraction to sex talking me and Amy had risen to the challenge of being an equal participant in it. Visually they were increasingly deploying the full gamut of their available tools; a coy, sultry sexuality radiating from their beautiful faces, their feminine manes of long hair flicking around in a way that would do a shampoo commercial justice, and of course, their breasts.\n\nAs Amy held her shoulders back and the front of her t shirt down, the orbs of her breasts had become increasingly exposed though the plunging neckline until the edges of her areola and the full depth of her underboob were plainly visible while Ellen only had to lean towards me to give me a peak down the front of her loose crop top at the glorious breasts that lay within. \n\nThe way they were leaning in to me, Mohea hadn't been given a chance to get anywhere near me.\n\nMy erection had come on gone and come again, even without Ellen's hand around it. It was going to be a challenge just getting away from the table. As I waited for the bill, as subtly as I could, I readjusted it to just sit upright in my pants, instead of hanging out the leg of it. I hoped that if I pulled the loose bottom hem of my polo t shirt over it, it might go relatively unnoticed.\n\nThe bill of course, in a way that had become all too familiar, had Mohea's phone number folded up in to it. I pocketed it, thinking that was less rude than leaving it on the table.\n\nWhile we'd been in the dining room, Ellen's and Amy's sex talk had, of necessity, been quite and based on ambiguities. Once we were out of sight and earshot of the reception area, Ellen really started to lay it on. She danced and skipped around in front of me, flaunting herself...\n\n\"Well Mr O'Neill, the great stud of Bora Bora, are you up for two of us? Can you satisfy us both?\"\n\nShe reached in to my crotch and felt the half mongrel sitting there...\n\n\"Come on, you can do better than that, or am I just going to have to find it with some girl on girl with Amy?\"\n\nShe planted herself in front of Amy, put an arm around the small of her back and ground her mons against Amy's while tweaking Amy's already jutting nipple with her other hand; all while doing a fairly good imitation of passionately kissing her. At least I assumed it was an imitation, because frankly I couldn't tell if Ellen's tongue was actually thrust into Amy's mouth in the way she suggested by her actions.\n\nInitially it caught Amy by surprise, but she quickly showed she was up for the game by reciprocating the action to an extent that became almost inappropriate in the public area we were in.\n\nI offered the only response I thought might stop them ending up on the ground with their legs interlocked. \"You know I'm up for it.\"\n\nEllen broke away and went back to skipping and flaunting herself across my path.\n\n\"I donno Amy. He seems to have tags on himself doesn't he? Remember how Issie used to get off watching him have sex with one of us. Maybe we should line up all these local girls wanting a part of him and see how many he can deliver these screaming orgasms to while we watch and play with ourselves. How many of those telephone numbers have you got in your pocket?\"\n\nIn a flash, Ellen's hands were inside the pockets that were on either side of my shorts. She ferreted about in them, deliberately playing against the bulge of my manhood and balls while she vacuumed up the bits of paper that had been absent mindedly thrust at me over the last 24 hours.\n\nShe pulled out a handful of them.\n\n\"There's six, just in these pants!\" \n\nAmy started to pick up the vibe of Ellen's verbal teasing. \"Na, he's an old man. It would kill him.\"\n\n\"Do you mind, it's more polite to say middle aged.\"\n\nAmy had picked up remarkably quickly on what would seem to an outsider to be the brutality of Australian banter between good friends; something Ellen had come deeply imbued with. \n\n\"What, you think you're going to live to 120? No, definitely old. Mind you, he's a good enough root, isn't he Ellen? So maybe we should keep him for a bit longer. Still, it would be an interesting way of putting him down when we're finished with him.\"\n\n\"Well he's set a new bar for performance by making me scream last time. Are we finished with him if we can't do it very time now?\"\n\nI butted in. \"That's not fair. You're not a screamer.\"\n\n\"How do you know? Maybe I'm just really repressed. Or maybe you just weren't good enough until last night.\"\n\n\"Because you told me. Anyway you promised the manager not to do it again.\"\n\n\"Did I? I don't think so. I think that was Amy. I think I just told him you caught me by surprise. I could even suggest the surprise was you were good enough to make me.\"\n\nWith Ellen dancing along backwards in front of me, she hadn't seen a middle aged couple approach from the other direction. I cast her an obvious upwards glance in their direction, causing her to look around to see them. Her reaction wasn't the one I expected.\n\n\"Let's put on a show for them.\"\n\nShe came and cuddled up against my free left side, her arm right around my back, instinctively causing me to put my arm around her. As I looked to her side, I could see that she'd brushed her body against me in a way that had caused her loose crop top to ride up and forward. The forward part let me look straight down it at her naked breast. The up part lifted the bottom hem to expose most of her right underboob; or at least the line of shadow suggested it was only underboob. But I couldn't actually see what was visible from the front. Knowing Ellen in her current mood, she may have had a nipple sticking out too.\n\nAmy responded by going from simply holding my right hand to also pressing herself close with an arm around me and mine around her.\n\nThe couple gave us a judgemental stare. Even I had to admit, the scene suggested little else than an old guy was taking two inappropriately aged ladies back to his room optimistically thinking he was up to giving them a good pounding.\n\nAs soon as we were past them Ellen slipped a hand down the front of my pants, tickling up my manhood. Her starting comment of ...\n\n\"You're still not up for it, are you Ned. I think Amy and I had better call in the services of those nice local lads who chatted me up this morning.\"\n\nAs my manhood swelled into her palm, her words turned to...\n\n\"That's more like it. Maybe we'll give you another chance. Yes, it's feeling good now Ned. It's even getting me quite randy just feeling how anxiously it's surging.\"\n\nAll this was happening while we were walking along the boardwalk towards our room in broad daylight. It was probably only the fact we'd left lunch early and most others were still having theirs that saved us all from getting kicked out of the resort for inappropriate behaviour.\n\nAnd the fact was, Ellen's randiness had been evident from half way through lunch. She was just about ready to get under the table and give me a blow job after the entr\u00e9e; although how that would have fixed her own randiness I was never really sure of. Cocktails either did or didn't agree with her, depending on your point of view; but they certainly made her randy. But her admission of it changed her demeanour from one of trash talking to just straight out sex talking.\n\nShe danced about in front of me again and flipped up her skirt, revealing her naked mons.\n\n\"I hope you're ready to give this pussy a good fucking, cause it's got your name on it Ned. It's calling out to daddy like you wouldn't believe. I'm wet, my clits swollen ready to burst and I got a hole the size of the grand canyon wanting you to fill it.\"\n\nThe flipped up the front of her crop top, exposing her breasts.\n\n\"Look at these nipples. They're like mountainous rocks wanting you to soften them with your lips. Can we walk faster? Aren't you in a hurry too Amy? Shit, is he teasing up your nipples?\"\n\nFocused on me and the swelling in my pants, Ellen had only just noticed that, after the couple had walked past, Amy had lifted the hand I had around her waist up to under her armpit where she'd positioned it over her breast; inviting nipple play. Prone to nipple orgasms, she'd been quietly humming with her head against my shoulder at her increasing arousal. I'd even seen her slip some fingers surreptitiously down between her legs a couple of times to play momentarily in an area of spreading dampness in her skin tight shorts.\n\n\"You're not the only one...oohhh...feeling randy. You know how sensitive my nipples are.\"\n\nAdding with a grin and a wink directed at Ellen\n\n\"It's working too. I might cum before...ooowww...we get to the doorway.\"\n\n\"Aahhhh. Not fair. Gimmie the key. No I'll get it.\"\n\nEven though it took longer, Ellen stuck her hand in my pocket to pull the key out, but instead got distracted wrapping her fingers around my hard shaft and rubbing it up at down.\n\n\"Oh Ned, it feels so nice doing that. I just want it. I just need it in me.\"\n\n\"We're nearly there.\"\n\n\"I can't wait.\"\n\nThe key now in her palm, she grabbed my hand and started pulling me the final few metres down the boardwalk to our room. As she pulled me off balance, I pulled momentarily at Amy's nipple in my other hand. Amy froze, bent over moaning...\n\n\"Ooohh that's so nice. Ohh, I'll catch up in a second. OOoohhhh.\"\n\nEllen wasn't waiting for her. I was dragged to the door, pushed inside and she had my pants down around my ankles and my shirt over my head in an instant; jumping up on my naked body to let the hardness of my erection slip under her skirt and easily into her sex.\n\n\"Oh, that feels so fantastic.\"\n\nShe eased her feet to the floor and with her hand on my butt, leaned back and ground her mons in a circular motion against my pubis, using short withdrawals and thrusts to add to the stimulation of her clit by brushing it along the exposed portion of my shaft.\n\n\"Oh, oh, I needed that. Oh yes, it's good. Aahh, that's great.\"\n\nShe bit her lip and hummed as the accumulated sexual frission and play over lunch caused her to quickly climax; pulling herself tightly against me as her legs quivered and refused to support her.\n\n\"Oh, that was good. You are so going to get fucked before we go home. But now we can get down to real business.\"\n\nAmy had walked in the open door and closed it behind her as Ellen first started to climax; waiting until she finished. Ellen walked over to her and embraced her...\n\n\"What say we put on a bit of a show for him?\"\n\nGrinding her mons against Amy's she started to peel Amy's shirt over her head. It took Amy a moment to realise that Ellen had in mind some serious girl on girl action; more so than anything they'd done before. Indeed, after she came on the boat Ellen had been the slowest to adopt the BOB (bi on the boat) attitude Issie had tried to instigate.\n\nAmy looked at me where I stood leaning naked against the dresser with a full erection, gave me a sort of screwed up \"what the heck\" look and pulled Ellen's lips down onto her now exposed breasts; multiplying Ellen's circular movement of their mons with a thrusting and circular movement of her own. She edged Ellen's skirt past the join of their mons and let it drop to the floor before slipping her hand up underneath Ellen's loose crop top to play with her nipples.\n\nEllen started to try and ease down Amy's tight little shorts but found it impossible to move them. Breaking away from the hold she had on Amy, she knelt at her feet, her face almost touching the quickly spreading damp stain permeating the pants. Then she peeled them down, kissing Amy's mons and penetrating her crease with her tongue as she guided the pants to the floor and off Amy's feet.\n\nAs Ellen knelt there, Amy pulled Ellen's crop top over her head and then pulled Ellen to her feet where the two now naked women continued their dance of the grinding mons, each brushing their nipples against the other. Ellen started backing Amy up to the bed. When they reached it, she broke away to position a pillow in the centre of the bed and one of those giant euro style reading pillows on top of that, before covering both with one of the new bath towels Mohea had left sitting on the edge of the bed when she'd made up the room.\n\nEllen climbed onto the bed; lying across the pillows in a way that caused her back to arch and left her crotch suspended in the air. In response to Ellen's signal, Amy lay on top of her. For a brief moment they sort of pashed, grinding their mons and rubbing their chests across each other while they did a fair imitation of passionate kissing.\n\nThen I watched as Ellen slipped both her legs inside Amy's and spread them as wide as was humanly possible, opening up to me a vista that would excite any man. Two aroused women, their creases suspended off the bed and merged into a single inviting line. Two swollen clits, almost touching each other and two receptive sexes, barely a finger length apart; all engaged in some sort of rotating dance of mutual stimulation. And because of the way they were bent over the pillow, it was all capped by Amy's cute, olive skinned butt.",
        "Ellen's voice rose from under Amy.\n\n\"There's your playground Ned. Come and play.\"\n\nI didn't need a second invitation. I knelt between their legs, more than a little transfixed by the eroticism of the sight in front of me. With a raging erection, there was a part of me that just wanted to stick my cock into one of the offered holes and pump the living daylights out of it. But that would mean missing the more nuanced fun of the situation.\n\nI stoked my finger the short distance between their two swollen buds; both their creases wet and slippery with their juices. Ellen gave a little hum, while Amy, as is her style, gave a louder moan. Having established that worked a treat, I slid my finger repetitively across the two of them; able to watch their buds give slightly to my stroke and fascinated by the difference between Amy's conventionally sized clit - if there is such a thing - and Ellen's significantly larger one.\n\nThey stopped grinding against each other, content to let me provide the stimulation; although I could see that Ellen was tweaking Amy's nipples. Both responded in a way that signified their growing arousal; Ellen's legs quivering a little while Amy squirmed about. But the clearest signals came from the noises they were making and, very predictably, Amy was obviously leading the charge towards an orgasm, her moans getting louder and breathing much heavier until after not very long...\n\n\"Oh shit, oh Ned...aaaahhhhh...fuck...oooohhhhhhhh...\"\n\nAmy pushed herself down hard against Ellen's hips, grinding them together again. As I've learnt to do with Amy, I kept stimulating her, which just seems to make her orgasm go on forever or just turn into another one.\n\nBut there was something else I wanted to try. I lay on the bed with my head between their legs, the pushing of my sensitive erection against the mattress reminding me it was patiently waiting its turn for some action. Angling my head up, I crawled up close enough to lick both their pussies at once; long strokes of my tongue which started down with a poke into Ellen's sex and finished in Amy's and then spent a moment flickering across the top of both their clits in between. They squealed in delight; bucking about with the pleasure of it.\n\nThree minutes of that and Amy had cum again while Ellen was quivering up a storm. It was a visual delight for me, even though at the top of each pass I ended up with my nose stuck in Amy's butt crack. But it was a bit hard on my neck. It was even harder on my cock which was calling to be involved as a participant.\n\nI knelt up between their legs again. While I contemplated what to do next, I made a u shape out of my thumb and forefinger and inserted the thumb into Amy's sex and the forefinger and middle finger into Ellen's. Because Amy's is shallowly located, it was easy to bring the top of each digit against each of their g spots, and rub them while putting a lot of pressure on them by drawing the digits together. Then I used the web of skin between my two digits to tickle up their clits as well.\n\nThe effect on both girls was nearly immediate.\n\nAmy had reached that stage of what always seems to me of being in a state of continuous orgasm. Whether it's one long one or a serious of them is beyond my ability to distinguish, and hers too from the times I've asked her. But this raised it up a notch. Her squirming increased as her moans steadily rose in pitch and loudness.\n\nEllen's was more surprising. Certainly the quivering of her legs and lower body increased. That was normal for her. Indeed, with Amy squirming on top of her, keeping their two creases connected closely enough to keep both fingers in was becoming a herculean task of finger strength.\n\nThe surprise was that, normally Ellen isn't that vocal. But, like last night, she seemed to have crossed a threshold with what I was doing that made you wonder if you were even making love to the same person.\n\n\"Ah Ned, it's happening again...ooooooohhhhhhh...oooooooooohhhhhh...Ned I can't stop it...oh...oh...oh\"\n\nEven as she spoke, Ellen's quivering became extreme. Her legs were tightened up so much that she was actually lifting both Amy's and her own hips clear of the pillows with Amy nearly bouncing off Ellen with every jerk of Ellen's legs.\n\nI was just starting to wonder what sort of situation I was creating, with both girls seeming ready to explode, when Amy had a massive climax, yelling at the top of her voice...\n\n\"AAAAAAAAHHHHHHHHH...AAHhhhhhhhhhh...oh my god...aaaaahhhhh...oh sshhhhhhiiitt..ooooohhhh...aaaaaaahhhhhh...ah...ah...\" \n\nAs I kept up the pressure on her g spot, she ground herself down on Ellen's mound with what little force her lithe frame could manage and certainly not enough to overcome the strength of Ellen's legs supporting her in the air.\n\nMaybe it was Amy grinding against her mound, maybe it was just time with what I was doing to her, but Amy's hadn't even passed the peak of her climax before she was joined by Ellen. My hand was flooded by her squirting as what were almost her final pleas for mercy were brought to an end by an ear-piercing high pitched squeal...\n\n\"Oh Ned...oh Ned...I can't...oh Ned...Ned...Ned...please...it's too much...oh...ohhh...AAAAAAHHHHHHHEEEEEEEEEEEEE...AAAAHHHHHHHEEEEEEE.\"\n\nShe almost threw Amy off her as she suddenly launched her hips even higher; a massive jerking motion proceeding an almost violent swaying of her hips from side to side.\n\nMy own cock was bursting with pent up desire. My problem with using it until now had been satisfying both of them at once. They'd had their turn, now it was mine. \n\nI pushed my haunches as deeply as I could manage under Ellen's raised legs. As I squatted there, I took my erection in my hand and bent it down. I had a choice of holes to find my own pleasure in. There was no safe answer in terms of keeping everyone happy. \n\nOn the spur of the moment I chose Ellen's; probably because she was face up and I prefer my sex that way, a little because I wasn't finished with her yet and more than a little because her playful sex talking had immersed me again in that ethereal spirit of hers that inhabited a space outside her physical being and which always drew me too her. Amy's delectable little mound would just have to wait.\n\nWith Ellen under Amy I couldn't easily lie over her, which is why I'd pushed my legs under hers, and the depth of my penetration was limited by the access permitted by the spread of their legs.\n\nMy now very sensitive shaft slipped easily into the warm slippery wetness of Ellen's body. The angle of penetration imposed by the way her sex was presented to me and the limited depth of penetration it permitted meant her g spot was going to get heavily raked by my thrusting. It was one of the things that influenced my choice. I exaggerated the affect by holding the base of my shaft firmly upwards.\n\nThe way Ellen was now screaming in the orgasm told me we'd crossed an interesting threshold in our sexual relationship. It wasn't as though things weren't intense before - after all she'd passed out from hypoxia with some of her climaxes. But this was different, and I wanted to see where pushing it further went.\n\nMy first penetration of her caught her still arched up in the last throes of her orgasm. After penetrating her as deeply as I could to ensure her body was ready for me, a fast upward thrust sent the tip of my shaft raking heavily along the front of her sex and the g spot that lay within it. Three quick ones of those left her audibly gasping for breath and her legs already quivering again.\n\n\"Oh Ned...oh Ned...oh Ned...ooo...ooo...\"\n\nAmy quickly worked out my shaft was now in Ellen and started to roll off Ellen and extract her leg from around me. For a moment I let her be. I couldn't satisfy both of them at once.\n\nBut without Amy there, I could engage with Ellen more vigorously; pulling her further back over my haunches so that each thrust was applied almost vertically into her g spot before her vagina bent my shaft to allow its deeper penetration. Then as Amy's weight was no longer a factor at all, I rose on my knees, pulling Ellen's hips up, to let me really get some movement into my thrusting.\n\nIn a very un-Ellen like way, she continued to vocalise her reaction; the noises a seeming combination of shock, pleading and pleasure with a touch of hypoventilation thrown in...\n\n\"OOO...OOO...OOO...OOO...OH NED...OOO...NO...OH NO...PLEASE...OOO...TOO MUCH...AAHH...\"\n\nAmy knelt next to me and tried to engage me in kissing while I was thrusting into Ellen. But she clearly found me a bit too distracted for her liking. Apart from anything else my thrusts into Ellen were causing what almost seemed like a rolling wave movement down the length of her body which had the most delightful visual effect of throwing her breasts into a wobble and Amy was blocking the view.\n\nSo Amy retreated to kneel alongside Ellen where she sucked at her nipple while extending a hand along her body to finger her clit as I kept pummelling her sex. Amy's additional stimulation clearly had an effect, ratcheting up all Ellen's manifestations of her arousal another notch.\n\nYou could tell Ellen was like someone perched on the edge of a massive waterfall about to go over. She was quivering so violently I could barely hold her and her hands were tightly clenched around giant clumps of bedsheet as if that would somehow save her.\n\nThe inevitable climax broke with a squealing rush...\n\n\"OH...IT'S TOO MUCH...OOO...OOO...AAAAAHHHHEEEEEEEE...AAAHHHHEEEEE...AAAAHHHHHEEEEE.\"\n\nShe threw her hips up so violently again I almost lost my penetration of her. I held her there, enjoying the feeling of her vagina contracting against my swollen manhood. \n\nI'm not one to think of myself to have enormous sexual stamina. There are days I go off quickly like a cheap cracker, others where I can thrust away for a long time, enjoying the feeling, but not having my balls boil up on me and it's somewhat the luck of the draw what happens on any particular day. So far, my thrusting into Ellen had made me think today was in the latter category.\n\nI was just starting to contemplate laying Ellen back flat on the bed and pounding her beautiful body all the way through the mattress (in the nicest, most considerate way, of course) to what I hoped would be a pretty good climax for me, when Amy showed she had different ideas.\n\nEllen was still in the throes of her climax when Amy, having helped Ellen on her path to orgasm, was kneeling back next to me and in my face again. But this time she was much more aggressive about it; throwing her arms around my body and pushing me backwards as she thrust her tongue in my mouth. Caught off guard and forced off balance, I had to let go of Ellen's thighs and grab hold of Amy as my shaft slipped out of Ellen.\n\nSensing my vulnerability, Amy twisted and pulled me off to the side and over Ellen's leg where she had me flat on my back. Suddenly all over me like a rash, I felt her get a leg over me and my manhood pushed effortless into her anxious vagina. With me pinned down, Amy could take a moment to reposition herself to her liking until I was under her in a reverse missionary; her head alongside mine as she pumped me vigorously, although not with any determined grip on my shaft.\n\nA little guiltily, I looked across to Ellen still sprawled on her back over the pillows and at an angle to me. As she stared back with an abandoned look on her face, I watched as she settled her hips back onto the pillows, only to be gripped by another wave of her orgasm and lift them into the air again with closed eyes and an audible groan. I reached my hand out to her and had her release the bunched up sheet and grab it just in time to crush it as she tensed up.\n\nBut Amy wanted more than my cock inside her body. With a tongue forced between my lips again, she grabbed back my attention before lifting herself up on her arms, slowing the pumping of my manhood and grinding her mons against me at every full penetration while making sure her breasts came as close to as our relative heights would permit to being dangled over my eyes. I took the hint and lifted my head to suck one while teasing the other with my free hand.\n\nAmy was still in that orgasm frenzy she is lucky enough to get into once she has had her first one and it was clear she was going for another. As her arousal grew you could see her focus was increasingly on the play of her clit against me; either as she ground her mons down on my pubis, or as she tried to slip it against my shaft as she slid it in and out of her body. But Amy wasn't Ellen with her larger clit, better positioned for playing against my shaft. The grinding was where she was getting her real dose of pleasure from. \n\nAs her moans and groans increased in tempo and loudness that - and my playing with her nipples - became almost the only form of stimulation she was taking from me. Which sort of left the tip of my full penetrated shaft with the pleasant sensation of circling strangely inside her vagina with the ambiguous possibility it was brushing against her cervix in the process.\n\nThe climax when it came was accompanied by a classical Amy vocal release...\n\n\"AH...AH...AH...Oohh...oohh...OH FFFFFAAAAAAAKKKK...OH SHIT...AAAAAAAAHHHHHHH.\"\n\nShe collapsed down on to me, moaning in my ear as I felt the powerful contractions of her orgasm push against my hardness.\n\nShe was still moaning and contracting when I felt Ellen's hand separate from mine and moments later her arms pushed between Amy's and my flesh at Amy's waist. She bent down to Amy's ear and in the sweetest voice I heard her ask...\n\n\"Can I have another turn?\"\n\nThe voice might have been sweet, but her physical actions left no room for argument or delay. Immediately Amy's hips were lifted off mine and to the side; my rigid shaft slipping out of Amy and landing on my stomach with a dull thunk. \n\nAs soon as Ellen had cleared Amy's still contracting body off my lower stomach and upper thighs, she wormed herself into position and squeezed Amy off the rest of me, before reaching between our bodies and guiding my shaft into her sex.\n\nAlmost immediately it was apparent Ellen wasn't looking to pleasure herself. She was making sure she was the one to harvest my seed.\n\nLying along me, she nuzzled the side of my face while she gripped my shaft tightly and raised her hips up and down to cause it to slip in and out of the warm, slippery embrace of her welcoming vagina. Until now I'd been enjoying the pleasure of the play of my manhood in their bodies without that extra stimulation that tells you a climax was impending. Nice, very nice in fact, but the sort of pleasure that deludes you into thinking you can sustain it forever. No longer.\n\nAlmost immediately, those shooting tendrils of pleasure started to play along the length of my shaft. They were mild and unthreatening at first. Sort of the goldilocks of tendrils that added to your pleasure without tipping you over and bringing it to an end. But Ellen was clearly not going to take any risks about being the one to receive my seed.\n\nIf I had my druthers I would have flipped her over and gone back to my original plan of pounding her lovingly into, and maybe right through, the mattress; and I'm sure that would have been her preference too. But I was clearly in the middle of a complex interaction between the girls. I figured it was better to play the innocent victim of their sexual games than be accused of favouritism. The climax might not be quite as good, but the aftermath would be far better.\n\nEllen sensed that first change in my breathing that told her she was having an effect, accompanied shortly thereafter by a moan I inadvertently let escape. She tightened it more and started pounding me faster. But I could tell I wasn't the only one getting some benefit out of it. She was clearly managing to rub that nicely positioned clit of hers against my shaft with every movement as her own face tensioned and little sighs of pleasure whispered in my ear.\n\nThen it was suddenly like someone had flicked a switch. The tendrils multiplied over the whole surface of my now well used hardness. My moans became involuntary and irrepressible, which simply encouraged Ellen to go at it harder. Shots of pleasure escaped my shaft and flooded my balls and right down into my groin. When I knew the moment had come, I thrust myself hard up at Ellen. She took the hint, pressed me deeply into her body and waited the nano-second that followed before the first jets of my cum flooded her cervix.\n\nEllen, in her perceptiveness, had my ejaculation routine - how I maximise my enjoyment -down pat. What I do when I'm on top, she now emulated. She waited a moment for the intense pleasure I experience with those first ropes of cum to subside, then as she noticed my initial hard push against her soften, she thrust in and out again a couple of times before she induced in me another hard thrust for a second wave of pleasure - and I have always assumed another flood of cum.\n\nThere's not always a third, but in a good one there is, and this was a good one. Ellen picked it like she was feeling it herself; timing those little extra thrusts to really maximise my enjoyment.\n\nThen came the pi\u00e8ce de r\u00e9sistance, a pause, followed by a little jiggle, which seems to give me a wave of little mini additional climaxes. And she timed it all to perfection.\n\nSpent, I relaxed still groaning back onto the bed wanting nothing more at that moment than for my still hard shaft to just stay inside this beautiful woman forever. But Ellen sensed, having satisfied me, she was now free to finish her own orgasm. Changing her angle and slowing things right down from their previously nearly frantic pace, I felt her slip my shaft once again in and out of her vagina as she brought her clit into contact to slide along its juiced up length.\n\nIt didn't take long. In less than half a minute her vagina was again contracting on my shaft as her head was pushed into the pillow alongside mine and, more Ellen like, delicate little moans reached my ears.\n\nOur time was short. Checkout time was approaching and for all I knew the manager of the hotel was once again approaching with reports of screaming women being subjected to terrible things in the room.\n\nBut, just for a moment, for as long as I could, I wanted to enjoy the feel of my still rigid manhood resting inside Ellen as her beautiful lithe body lay cuddled on top of me. It wasn't that Amy's was any less lithe or beautiful, it's just that if they started jostling for possession of me, the residue of my erection would be gone before I could enjoy having it inside the victor.\n\nI was lucky Amy decided to just cuddle in on top of both of us; letting me get the best of all worlds.\n\nBut time wouldn't stand still. I waited until the very last moment I could without breaking faith with our checkout time. Our bags were minimal, but already packed, but eventually I had to get up to go. The girls opted for their fuck me bikinis and a lather of sunscreen for the trip home. I had to go into reception, so put shorts and a t shirt over my speedos; if only to give me somewhere for my wallet.\n\nAs the three of us walked out of the room, we were greeted by a large gaggle of predominantly female and giggling and twittering staff members who seemed to have been loitering within earshot. They were unfailingly polite as we walked past, keen to greet us and attract my attention, but I got the impression they could just as easily have burst into a round of applause. They come for a show and they'd got it. The girls' screams, and even Amy's normally loud climaxes, would have been in easy earshot, given the light, open construction style of the rooms.\n\nIf we'd stayed around for another day, the cricket bat Ellen wanted would definitely have been required. And yet I couldn't help wondering what the fuss was about. I was not bad for my age, but no stud. I cared about satisfying the girls, but had no magic bag of tricks or high performance cock. Really, it was the girls who were the performers.",
        "But it was good for my ego, and I perceived not bad for Amy and Ellen's to be seen with someone everyone else wanted a piece of. I returned the greetings of the individual members of the audience in a way Ellen would call flirting, had a few more phone numbers thrust into my hand and witnessed a couple of wardrobe malfunctions. But I figured it didn't matter. We were leaving and wouldn't see them again."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "threesome",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-28"
}