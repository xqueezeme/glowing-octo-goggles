{
    "title": "The Designer Pt. 02 Ch. 23",
    "pages": [
        "Author's Note:\n\nAll good things must come to a middle. I hope you enjoy this final chapter of Part Two.\n\nAs with previous chapters in this middle, the Past storyline explores the origin of Jeremiah's family, their reconciliation with their awakened powers, and the interconnection of their lives and loves. \n\nThe Present storyline continues exploring the awakening of Isaac (Zac) and the issues that echo of how his power domino into other's lives even his own family.\n\nThank you for reading, commenting and voting.\n\nPast: Jeremiah\n\nWhile Kelly and Alyssa were helping form an identity of Jerry for Jenn to start to think about, I was investing rolls of quarters in long distance charges calling Jerry to tell him about Jenn. He sounded excited to meet her, but was still curious about how I managed to get along with so many women. I had to really try to keep him on topic. \n\nAs we made the turn south at Portland a couple hours before dusk we stopped to fill the tanks with gas. I called Jerry and told him we'd be at the house in a couple of hours. I asked a favor if he could buy some things for us at the store, I'd pay him back. I really just wanted him there, so I could see if our ploy had any chance of working.\n\n\"Hey,\" Jerry asked, \"Will Jenn be there?\"\n\n\"Yeah, Jerry,\" I laughed, \"She will be living with us until she can find a place of her own. We're not going to leave her in Portland.\"\n\n\"Right, right,\" Jerry said, \"I'll be there, I needed to run to the store myself. See you soon.\"\n\nIt had been a long day watching the miles stream past. Carmen and I took turns driving, and the final leg was my turn. The sun was low on the western horizon, as I drove south. Midsummer in Oregon was hit-or-miss when it came to sunny days, today was a wonderful hit. The few clouds low on the horizon glowed purple, red and orange as the sun slowly dipped towards the horizon. The lower lip of the orb was just disappearing when I pulled the coach into my driveway.\n\nThe house looked different, the upstairs had been expanded, and several construction jobs were still in process. I pulled all the way to the back, parking just in front of the garage, which allowed a good view of the upgraded backyard. The grounds looked amazing, a wide grassy space ran through the middle of yard. A broad deck wrapped around the rear of the house, with a wooden trellis that overhung the few steps to the grassy knoll. An open gazebo was centered along the new wooden fence that surrounded the private space.\n\n\"I'll be getting married in that gazebo in a few days,\" I thought to myself.\n\n\"It's beautiful,\" Kelly said from behind me, hugging me tightly, \"It's perfect.\"\n\nI shut down the cruiser, and Carmen opened the door. I wanted to check out the progress on the house. We filed out, then I saw Jerry coming out of the side door from the kitchen that exited onto the driveway. He smiled and waved.\n\n\"Jerry!\" Kelly said, walking to him and giving him a warm hug, \"It's good to see you, I want you to meet our friend Jenn.\"\n\nJerry was blushing, being near Kelly always made him a bit speechless, but at the sound of Jenn's name his eyes brightened, and looked around. I was scanning him and Jenn as they met, if this was going to work, my adjustment needed to be almost immediate. \n\nJenn looked around at the sound of Jerry's name, then smiled as she walked towards him. I saw the sparks mingle around the concept of Jerry we'd manufactured over the last week, and ramped up her connection as she identified him. I shifted her and did the same to Jerry. \n\nIt was incredible, how it worked almost instantaneously. Jerry could only look at Jenn, despite Kelly's arm around his side. Jenn smiled bashfully, which was a bit strange for her lately, and looked demurely at Jerry. His awkward smile seemed to endear him more to her, and she held out her hand.\n\n\"I'm Jenn,\" she said, \"You must be Jerry.\"\n\n\"Hello Jenn,\" Jerry said, lifting her hand to his lips for a chivalrous kiss.\n\nHis eyes drifted down Jenn's body, and he took a thought vacation as he drank in her curves. She was wearing a tank top that bared her mid-drift and her star tattoos were just visible at the low neckline of her tight shirt. He barely breathed towards her, and her nipples engorged. His eyes finally lifted to hers, and he pulled her hand, and wrapped her into a hug.\n\n\"Jeremiah has told me a lot about you,\" he said, \"I'm glad to finally put a face to a name.\"\n\n\"Likewise,\" Jenn breathed, and I could feel her attraction and arousal to my old friend. \n\nAlyssa stepped behind me, and kissed behind my ear as she watched. Kelly drifted back and wrapped her arm around my waist, leaning against Alyssa\n\n\"Looks like it worked,\" Alyssa whispered, and I felt her release Jenn from the mesh. \n\nJenn could only pay attention to Jerry as we toured the house. There were construction lights hanging in places, as the main electrical systems were shut down. The illumination from the lights cast odd shadows in the twilight. \n\nWe toured the main floor, the kitchen had been emptied, and new counters and shelves lined its periphery. Cutouts for the new appliances were in place, but it would still be a few weeks before any cooking would occur. Carmen looked around, and touched the surfaces. I could tell she was imagining how she would use the larger space. \n\n\"Love it,\" she said shortly, with a beaming smile.\n\nWe moved into a large dining area, a pass-through bar connected the two spaces. The area was large enough to have people walk through the bar, and still have room to sit around a table. I pictured how that would work in my mind and smiled. \n\nThe two rooms on the main floor were on opposite sides, and exited into the main living space behind the dining area. From the main entry to the kitchen, there was no sign of a second floor. We had to walk back through the kitchen, and wind around to walk up the staircase to our master bedroom suite.\n\nThe stairs emptied into a parlor area, large enough to have a couple of sofa's and a built in entertainment shelves could hold a large TV without invading the small footprint. To one side was a small entrance into the bathroom, that passed through into a larger open shower area with built-in seat. We continued through to a large closet and dressing area, that was as large as a single room. Through another door lead to a large space that stretched across one side of the house. \n\nThe main entrance emptied back into the parlor at the top of the stairs, and another door led out onto a private deck area that overhung the main deck below. The rails hadn't been installed, and night had fallen, but I imagined the view of the upgraded backyard would be incredible.\n\nAll of us gathered back in the large master suite, we talked. Each person had a different idea of what we should do, the options were interesting, but it was still too soon to fix anything permanently. We had a few more weeks before construction finished. I suggested we head down to check out the basement.\n\nJenn suddenly yawned, and stretched. \n\n\"Oh, I'm tired,\" she said, not looking tired at all, \"I'm beat, would it be okay, if I slept at Jerry's tonight?\"\n\nShe looked at him and squeezed his hand. Her nipples were hard and her chest flushed, two of the telltale signs she was very aroused. A smile slowly spread across his face, and he nodded.\n\n\"That would be great,\" he said, not looking at anyone else but Jenn.\n\n\"Sure,\" I said, \"Don't forget to take a change of clothes for tomorrow. Jerry, I'll call you around noon we need to get fitted for our tuxedos. Get some rest.\"\n\nThey barely said goodbye as they scrambled down the stairs and out to the coach. We were turning to head to the basement when we saw Jenn sliding out of the coach, prodding Jerry ahead of her, and heading to his car.\n\n\"That went better than expected,\" Alyssa said.\n\n\"She seems very smitten,\" Lexi said, \"Does that mean she's not family anymore?\"\n\n\"I guess we'll see,\" I said, \"I think we'll always have a connection with Jenn. She can choose to leave if she wishes though. None of you are captives.\"\n\nLexi smiled and leaned up to kiss me, \"No,\" she said, \"but some of us are slaves.\"\n\nWe all hugged in the basement, remembering our days down here with our large bed. Then filed up to the coach, and slipped out of our clothes. The curtains had been drawn, and for the first time in two weeks, the five of us again simply fell into our blissful circle. Hands, fingers, mouths wandering around familiar and supple flesh. Moans and groans of arousal, that heightened as the room glowed, bathed in Kelly's aura. We slept and then awoke and re-engaged. Everyone was unhurried, everyone was satisfied.  \n\nI slept peacefully, and rested peacefully.\n\nPresent: Leah\n\nI woke with a start, sitting up remembering something. \n\nI needed to be doing something.\n\nThe warm bodies around me felt like the remnant of the dream I was having. I looked around and combed my fingers through my hair. There was Carmen, Lexi, then Jeremiah, his cock uncovered next to Lexi's mouth. Kelly's head rested above Lexi's on Jeremiah's chest. Alyssa was facing Kelly resting opposite of her. Alyssa's body was curled around mine, her hand slowly caressing my hip as she stirred.\n\n\"Naomi!\" I thought to myself, \"She must be awake now!\"\n\nI slowly disentangled myself from the warm limbs and fleshy parts, and slid off the bed. I was still trying to reconcile if I was dreaming, or if that had really happened. I found my jeans and pulled them on, then my t-shirt, forgoing my bra. I wrapped my sweater around me, then looked for an exit.\n\nThe room spread across the whole rear of the house, and I had to think a moment to figure out which door would lead to the stairs nearest Naomi's room.\n\n\"Go through my room,\" Alyssa said pointing to the second door from the right, \"I'll come down in a few minutes.\"\n\nI nodded and didn't know what to say, and left, shutting the door quietly behind me. I looked around as I passed through Alyssa's parlor. The clock on the wall said it was half-past two. I'd lost two hours, and that was about the most Naomi slept during the day. I hurried down the stairs to her room, and she was peeking above the toddler gate, looking the other way as I approached.\n\n\"Leah!\" she said hearing my footsteps, \"Out, pwease! I wanna eat!\" she shook at the gate.\n\nI smiled and lifted her from her room, looking behind her to see if everything was all situated. A small mess of books and dolls had kept her occupied. \n\n\"Did you sleep good?\" I asked, smiling at her.\n\nI loved Naomi, she was a sweet child, and taking care of her fulfilled a deep need I felt at a primal level. She nodded and hugged me, her warm breath against my neck. A neck that until just a few moments ago was resting on her father's thigh. Her arms wrapped around my shoulders, where her mother's breasts had pressed until I had sat up.\n\nI went into auto-pilot as my thoughts swam, and made her a sandwich, some cut up apples, and two small oreo cookies. She smiled as she started eating and leaned against the counter.\n\nA: I'm on my way down, are you okay.\n\nL: Leah, I love you.\n\nC: That was wonderful, I need to start working on dinner\n\nJ:Aly do you need me to come too\n\nA: No, but you're welcome if you want to\n\nJ: I'll come\n\nL: No stay, please Master\n\nJ: In a little while\n\nThe stream of thoughts filled my head, and I tried to make sense of it. In the dream it was easier, just doing what I was told. Flowing from one body to another, seeking to please each of these people now in my brain. I must be going crazy.\n\nA: You're not going crazy. How is Naomi?\n\nShe's fine, she rested well, and is eating her lunch. Wait, you can hear me? \n\nA: I'll explain it all, just don't run away.\n\nI'm not going anywhere.\n\nI combed both hands through my hair, then pulling the length into a ponytail, then wrapped it into a loose bun. I must look a mess. I know I smelt like sex and sweat. I need a shower. I walked through my state of mind. Was I a homewrecker? \n\nA: No.\n\nL: I love the taste of your cock in my mouth.\n\nJ:  Do that with your tongue again, mmmmnnh yess...\n\nI could feel the pictures in my mind, and couldn't help being aroused. I tried to focus on just Alyssa's mind.\n\nC: Something easy, steaks maybe, with asparagus, and a nice salad.\n\nCarmen came in and saw me, then hugged me close, \"Pretty wild, isn't it?\"\n\nI nodded and she kissed my forehead, \"We love you, Leah, I know it's confusing at first. I'm always here if you need to talk.\"\n\n\"Thank you, Carmen,\" I said, and couldn't help remember her tongue between my nether lips.\n\nC: I liked that too\n\nShe winked and walked downstairs Maria's room. \n\nC: What has Maria been doing? laundry I hope, that's never ending\n\nCan I turn this off, or mute it?\n\nA: No, but just ask me, and I can.\n\nAlyssa appeared at the counter, and was holding my letter of resignation. Naomi squealed and hugged her mother, her small arms wrapping around her thigh.\n\n\"Hi Mommy,\" she said, \"I'm eating!\"\n\n\"Is it good?\" Alyssa asked smiling down at her daughter.\n\n\"Yes, yes, yes,\" Naomi said, \"LEAH made me a sammich, and apples and cookies. I don think she made cookies, but she gave me some...\"\n\nAlyssa smiled and looked at me as Naomi continued the running commentary of our last few minutes together.\n\nA: Go take a shower, clean up, clear your mind. Then we'll talk... can I burn this?\n\nShe held up the letter, and I nodded. I didn't exactly know what had happened. But I didn't want to leave, or quit. Suddenly, or really, it felt more like a foregone conclusion, this was my family. \n\nA: Okay, I'll take care of it. I'm going to let you have your own thoughts for a bit. When you're ready we'll talk.\n\nI nodded still getting used to talking without opening my mouth. I turned and went to my bedroom. Both Maria and I had suites, which meant small bathrooms and showers were attached. I closed the door behind me and leaned against it.\n\nThe quiet in my mind felt suddenly like a vacuum. It should feel normal, but I felt more alone. I shook my head and undid my haphazard bun. I stripped tossing my clothes into the chute, and headed to the bathroom naked. It felt sensual to walk naked through my room. I'd normally wrap a towel around me before going to the bathroom. Now I felt comfortable in my body. My heavy breasts bounced which felt nice. Their gentle sway reminding me how it felt as I ground onto Jeremiah's cock.\n\nThe images of our afternoon flashed through my mind as I tested the water. Lexi's firm body pressing against mine, her mouth sucking on my nipple. Carmen's fingers as she combed through my hair, pulling me to her warm breast. Alyssa's fingers gripping my ass, spreading the cheeks apart. Jeremiah's gentle eyes watching me as I rode him. My fingers curling into his chest hair. \n\nOnce in the shower, I masturbated. Reliving the feelings, the pictures, the arousal, the orgasm. Then I settled into my task, and shampooed my hair, hair that had brushed over Alyssa's thighs before I tasted her pussy. Scrubbing my breasts and abdomen, soaping up my brown tangle of pubic hair, which seemed like a forest compared to all the others. \n\nI should shave.\n\nI had never thought to do that, and I leaned against the wall, and using my fingers felt carefully as I worked the blade tenderly against my mound. The bush at the top fell away easily, and the smoother flesh felt exotic now. I worked more soap into a lather, and felt with my fingers for stubble, stretching the outer labia and running the blade over the surface until it felt smooth. I inhaled a ragged breath, the task was arousing. I continued until I was satisfied, then finished my arousal with a tour of my now slick lips. My clitoris seemed more sensitive and I groaned out as my insides convulsed.\n\nI shook my head, \"I've become a nympho,\" I said to myself.\n\nI finished cleaning my flesh, and rinsing. Then shut off the water, and stood in the shower. I worked my brown hair into a tail, and wrung out the water. Then with a toss of my head, my hair fanned across my damp shoulders. I exited the shower, naked. Stepping on the absorbent mat, and slowly reaching for a towel, I looked at myself in the fogged mirror. An apparition. I examined my flesh as I slowly toweled off the moisture. Taking my time, and appreciating each curve. \n\nThe others were flawless, and in some way that made my flaws stand out. My breasts sagged, but the nipples were perky and upright. My abdomen had a slight swell too it, which only made the dip into my now hairless valley more alluring. At least to my eyes. For every little flaw, I found a compliment, and felt comfortable in my own skin. I smiled at myself. So much had changed.\n\nI dressed, jeans and a t-shirt were enough. I didn't cover myself with a sweater or sweatshirt. The only jeans I had were loose fitting, maybe I could buy new jeans. My t-shirt stretched over my bare breasts, my nipples firm bumps under the cotton. I walked out and Alyssa was sitting at the counter alone.\n\n\"I asked Zac to take her downstairs to watch cartoons until dinner,\" she said, answering my unasked question about Naomi.\n\nI looked at her, and she rose and walked back to the living room, settling into her seat at one end. I moved and sat next to her. Then I curled my feet under my thighs and leaned against her, resting my head on her shoulder. She wrapped an arm around me, and I felt a deep belonging. I was ready for her to tell me everything.\n\nShe did, and I listened. Special powers, telepathy, angels, demons, the terms she used sounded familiar, but how she used them was unique. Unique to her... no our ... family. She included me in everything. I was part of their circle. It is something that happened before, for a time. One other needed their help, then left when they had found their true place. I was part of them now. She didn't know why, she just accepted what it was. Did I understand?\n\nNo and yes, merged together into a thought - I'd have to have faith. Faith in them, and in myself. I would need to trust them, as she had trusted me, showing me their secret, then welcoming me into their circle. It was more than just sex, it felt whole. Sex was a part, unashamedly. I was looking forward to more of all of it. I kissed her softly, and she returned it.\n\n\"We'll figure it out,\" she smiled, and combed my hair from my face, \"We always do.\" \n\nPast: Kelly\n\nTomorrow I'd become Mrs. Jeremiah Jackson. \n\nI smiled at my reflection in the mirror. I kept smiling thinking of the strange series of events that had gotten to this point. I couldn't have planned any of what had happened. I think that thought would have driven the me that was crying in the stairwell over a breakup into a panic at the thought of something so unplanned. Today, looking back, I don't think I would have had it any other way.\n\nThere is probably a lesson there, if I poked at it enough. I was too distracted with the arrangement for the wedding. My parents had driven down and gotten a hotel the day after we had gotten back. My mother was at our house the first thing in the morning, banging on the camper's door. \n\nThat wasn't a welcome move to the rest of my housemates. We'd stayed up too late enjoying Jenn-free sex. I'd gotten up and closed the door to the back, letting my mother in while I made a pot of coffee. Carmen had at least taught me how to do that, though with several laughs. My mother sat impatiently at one of the tables. \n\n\"There is too much to do Kelly!\" she said, \"I have a walk through with the contractor in an hour, the flower person will be here in thirty minutes and you're telling me you don't have a ring yet?\"",
        "\"Relax Mom,\" I replied \"We'll figure it out, Jeremiah and I are going ring shopping today. I'll take care of it.\"\n\nShe opened her purse and pulled out a notebook, ripping off a sheet of paper, and handing it to me, \"You need to get those things done,\" she said, with a pause for emphasis, \"Today Kelly!\"\n\n\"Okay, okay,\" I said, frustrated that she was more interested with her lists than welcoming her daughter home. \n\nI brushed the tears from my eyes, as I poured a cup of coffee for her, adding cream and sugar the way she liked it. I poured another cup for myself, black, because that's how Jeremiah liked it.\n\nShe saw my tears and her body softened, and she rose and came and hugged me. Her voice soft in my ear as I allowed her to see me vulnerable.\n\n\"I'm sorry, sweetheart,\" she said, \"I can get distracted with so many things, I forget myself. I'm glad your home, and tell me about your trip.\"\n\n\"Thanks, mother,\" I said, accepting her apology, \"I know you've been stressed about the wedding and us all being gone. It's been hard, but it's good to be home.\"\n\nWe talked and caught up sipping our coffee until the florist van pulled up behind our camper. By that time, the others had gotten dressed and joined us. My mother had a hug and kiss for each of them. She ignored the fact that we had all slept in the same bed, three days before my wedding. \n\nI'd gotten my list done that day, dragging Jeremiah to the jewelers to force him to make a decision on a ring. We'd discussed this as a family. He would get me and Alyssa a ring. Alyssa would wear hers on her right hand, to not blatantly betray our family. He tried to find special collars for Carmen and Lexi, but the jeweler looked at him like he had three heads.\n\n\"Sir,\" the man said looking down his nose, \"We don't make jewelry for pets.\"\n\nI tugged Jeremiah away, before he tried to explain everything. The man was clearly disinterested, and a judgemental ass. \n\nThe ring Jeremiah selected was perfect, from a distance it appeared as a simple band of gold, but closer it became a clear that the band was made of five strands of metal, three gold, two silver. The bands were turned in a spiral pattern, then flattened into a band. It was a perfect symbol of the five of us.\n\nThe next few days flew by, each of us seemed to be going in a different direction. Carmen and Lexi cleaned and reprovisioned the van. They hauled our laundry to the laundromat, and cleaned and folded our things, and stowed them back neatly. Alyssa was at my side helping me find the different places my mother needed to go. Jeremiah had his list of things to do, getting fitted for tuxedos with Tommy, Ron and Jerry. They wanted to throw Jeremiah a bachelor party, but he staunchly refused. They were disappointed, but Jeremiah's stock went up in Robin and Jenn's mind.\n\nJenn had happily moved in with Jerry. They had some fireworks getting to know each other, like any other couple that is suddenly cohabitating. Jeremiah found time to check in with them, and they soon were growing closer, beyond their obvious physical attraction. The other girls and I had spent yesterday together, having a light brunch, enjoying each other's company. Jenn didn't feel any detachment, she was still affectionate, but it was clear her heart now belonged to Jerry.\n\nNow I was standing at the mirror, looking into my eyes. Was I worried that I could be written out of the equation as easily as Jenn? \n\n\"This is what they call, pre-marriage jitters,\" Alyssa said. \n\nI blinked in surprise and for the first time noticed her standing behind me.\n\n\"I know,\" I said, trying to hide behind my smile.\n\n\"Kelly, you are getting married tomorrow,\" Alyssa said, \"There usually is a bit of conflict emotionally on the day before.\"\n\n\"I'm marrying the person that proposed to you first,\" I said, \"You should be marrying him.\"\n\n\"You're carrying his child, Kel,\" Alyssa said, \"We've been over this. This ceremony is important to you. I am comfortable with my relationship with Jeremiah, and with you. It's not normal, but I love being a part of it.\"\n\n\"Oh, I do too, Aly,\" I smiled, and shook my head, my fingers running under my eyes to collect any tears, \"It's just nerves.\"\n\n\"I know, my love,\" she said, \"I'm nervous too, we put a lot of thought into tomorrow, so many things we planned are special to each of us. Now, are you ready? You have a part in this too.\"\n\n\"Yes,\" I nodded, \"I'm ready.\"\n\nAlyssa lead the way back into our house, and down the backstairs to the basement. The room was lit with candles, it seemed like hundreds of white candles, of all shapes and sizes. They made a ring where our bed once stood, and in the center, naked, knelt Carmen and Lexi. They were trembling, though their pose seemed serene. Alyssa walked behind Carmen, and I stood behind Lexi. We placed our hands on their shoulders. They stiffened then relaxed.\n\nTheir hair hung straight, Lexi's springing into curls naturaly. They wore no make up, and nothing adorned their body. They breathed slowly and peacefully. Jeremiah approached them out of the shadows once we were in our places. He stood before them both, and placed his hands on their heads. \n\n\"Eyes,\" was the first word he spoke.\n\nThey both trembled as they looked up into his face. He smiled, his expression one of confidence and love. He looked for a long moment at both of them, then he motioned for them to look at each other, then back to him.\n\n'Carmen, and Lexi,\" he said, \"Do you pledge me your love?\"\n\n\"We do,\" the both said, in voices that betrayed an emotion so deep, it was hard for me to reconcile.\n\n\"Do you pledge your love to each other, and your Mistresses behind you?\" He asked\n\nThey again intoned, \"Yes we do,\"\n\nThey looked back at each other, then rolling their heads back to look up at Alyssa and I. I shivered at the commitment that shone in their eyes. The quiet solemness of the candlelit room a quiet perfection.\n\n\"Do you promise to bring your worries, your cares, your joys and your needs to me,\" Jeremiah said, \"Allowing me to help you grow in your submission to me?\"\n\n\"We do\" the said.\n\n\"What do you offer, slave Carmen?\" He asked, allowing her to speak her pledge.\n\n\"Master, I pledge my love, my devotion, my submission and obedience,\" she said with a quiet confidence, then looking up at Alyssa and I, \"To my Mistresses I pledge my loyalty and love.\"\n\n\"I accept,\" Jeremiah said, then looked at Lexi.\n\n\"What do you offer, slave Alexis,\" He asked, using her formal name was the perfect touch, and she shivered as she lifted her eyes, brimming with tears..\n\n\"My Master, I pledge my love, my devotion, my submission and obedience to you, owner of my soul,\" then looking back she continued, \"To my loving Mistresses, I pledge my loyalty and love, my devotion to our family.\"\n\nThe sound of her voice, how much the words came from the depths of her, brought tears to my eyes, and I squeezed her shoulder. My roommate, my lover, and now connected deeper than I ever imagined. Carmen, my one time nemesis then protector. My friend and lover. Devoted to me. I wept.\n\nJeremiah straightened and brought his hand from behind his back revealing two solid silver collars. He looked at them in his hands. He had commissioned them from a local craftsman, they were simple, and elegant, and custom made for Carmen and Lexi. He worked his fingers around the collars, and then he lifted his eyes to me and Alyssa. \n\n\"Do you have the keys,\" he said, and with a click he opened the latch, and the collars hinged open. \n\n\"We do,\" I said in time with Alyssa, lifting the locking keys that would prevent the removal or the collar except by Jeremiah's will.\n\n\"These collars,\" Jeremiah said, his voice deep and confident, \"are a symbol of my love and commitment to you. I accept your submission and return my dominance, a reciprocating cycle. My love for you flows eternally through this circle of silver, may it remind you of your Master .\"\n\nJeremiah slipped a collar, first around Carmen's neck, her eyes lifted to meet his. He took the key from Alyssa's hand and clicked the collar closed, turning the key to latch the silver ring closed. Carmen shivered, her eyes fluttered. Jeremiah took the key and slipped the chain around his neck.\n\n\"You are mine, slave,\" Jeremiah said, gripping a handful of her hair and kissing her firmly. She looked brightly up at him, then bowed her head respectfully.\n\nJeremiah stepped over and repeated the ritual with Lexi. Her eyes were openly flowing with tears, and her breathing ragged with emotion. I held out the key, and Jeremiah smiled at me, and took it. Fastening the collar around Lexi's neck, he locked it with my key. \n\n\"You are mine, slave,\" he repeated and kissed Lexi. She lifted her arms around his neck and clung to him.\n\n\"Thank you, Master,\" she whispered and then bowed her head respectfully.\n\nAlyssa combed through Carmen's hair, and tugged her neck backwards, \"You are mine, pet,\" she said and kissed Carmen.\n\nI lowered my hands along Lexi's skull, my fingers traveling to her jaw, and then tilting her head back. My touch was gentle, and it made her quiver. I looked into the emotional green eyes of my roommate, my lover and, I spoke, \"You are mine, pet.\"\n\nThat completed the ceremony. We all stood silently, just reveling in the atmosphere. The room was silent, the candles flickered. There were no guests, no witnesses, just us. To all of us it cemented our dynamic, our hierarchy, sealing us with the clicks of the locks. In many ways the wedding would be easier.\n\nAfter moments that felt like hours, Jeremiah rested his hands on his new slaves, heads. Then tapped, and walked between them. I gripped Lexi's collar and tugged her to her feet. Alyssa did the same with Carmen. We marched behind our collective Master, back to our mobile home. \n\nInside, the mood lightened, and Jeremiah kissed each of us. Deep meaningful kisses full of love. Then he smiled at each of us.\n\n\"I'll see you in the morning,\" he said, \"I promised my uncle I'd spend tonight apart from all of you. It is important to him, the night before the wedding. I will be back in the morning, I'm not sure of the exact time. I know you'll be waiting. I love you all.\"\n\nThen we were left, two slaves and two Mistresses. We spent the night sleeping, or at least trying to, in each other's arms. We all were nervous for what tomorrow would bring.\n\nPresent: Isaac\n\nAfter the night with Leah, I settled down. The whole prior day I was stressed and on edge. Testing my power in class, my Blueberry hill tryst with Beth, then luring Leah to my room. It was too much. I kept the ring firmly on my finger all day, and concentrated on my classes. \n\nAt least I tried to, Brooke and Shannon flirted with me through first period. They enjoyed teasing me about my now well known relationship with Beth. They weren't mean about it, just always bringing it up, asking me if she could keep up with me, seemingly promising me they could give me something more.\n\nI played along, but underneath the surface, I was troubled. Beth was wonderful, my best friend, and loyal. She was also sexy, flirty and fun. She was even semi-friends with Shannon and Brooke, which was new according to Beth. With all that on Beth's side, why was I fantasizing about Shannon, Brooke, Leah, and Ms. Little.\n\nOh and Ms. Little! My test of my powers yesterday put me on her radar. She kept looking at me, and smiling. Especially when the rest of the class was working, and I happened to glance up. She'd smile then shift her gaze. One time that could be explained as coincidence, but three times, in 15 minutes?\n\nI'd fucked up, she was becoming obsessed with me. That was a little hot, and also very much a danger signal. I didn't want to ruin her career, even if I was over 18, any sexual contact between teacher and student and she would be ostracized. Also it would screw things up with Beth, if she found out I was fucking a teacher. Why was I now obsessed with fucking Ms. Little? My head was filled with thoughts of her trim fit body slumped over her desk, looking over her shoulder at me, encouraging me.\n\nI shook my head, and thankfully the bell rang. I took the safe route out the rear exit. Heading through the mass of students as they flowed like a river between classes. My little experiments had an effect beyond my targets, I was increasingly being watched as I walked down the hall. Making me want to check my fly, or make sure my shirt was tucked in properly.\n\nBeth wasn't afraid of public displays of affection either. Seeking me out to hug and kiss me between periods. I'd promised her last night that we could have another lunch date, so I looked forward to the end of fourth period. She was waiting at my car, and smiled as I saw her coming.\n\n\"Hey babe,\" I said, \"What do you think about just eating lunch today?\"\n\n\"I'd love it,\" she smiled and got in my car, \"I enjoy every moment with you, Zac. We don't have to mess around at every opportunity.\"\n\nI smiled, \"Thanks, I didn't sleep well last night. I'm going to go to sleep earlier I think.\"\n\nI took her to a sushi place near the campus, one of her favorites. She smiled and we held hands. We talked like a normal couple. The ring kept my powers from turning a small brush of her fingers across my thigh into bending her over the sushi bar. Just barely though.\n\nShe was very attentive, leaning into me, kissing my cheek and just wanting to be close. She said she enjoyed just being near me. I must enjoy being near her too, because I was hard through most of lunch.\n\nShe talked about her classes. It was curious she thought, now that we were, 'an item,' that other girls were suddenly interested in me. I asked who, and was surprised to hear Brooke and Shannon's name slip out of my girlfriends lips. \n\n\"You're friends with Brooke and Shannon?\" I asked, \"Brooke Taylor?\" thinking of the shape of her pussy lips that still were burned in my memory.\n\n\"Yeah,\" Beth said, \"I told you I was lab partners with Shannon, she really helped me yesterday, I was so distracted second period.\"\n\n\"That's right,\" I said, nodding, but not recalling the conversation. \n\nGirls should come with wiki pages.\n\n\"Brooke sits next to me fourth period,\" Beth continued, \"She even wished me luck yesterday just before lunch. I had to tell them the highlights, in sixth period. They were both very interested.\"\n\n\"Maybe we should just give them a show,\" I said, half sarcastically, and a bit irritated. \n\n\"That's kind of hot,\" Beth said, making me look at her closely.\n\n\"You want someone to watch us make out?\" I asked, curious.\n\n\"It might just be a fantasy,\" Beth corrected, \"But I'd love to see the jealous looks on their faces as you take me the way you do.\"\n\nI smiled through my blush, but I scanned her while we were talking about the popular pair. I didn't know what to look for, but I could see she had some activity near two points that seemed to spark in an interesting pattern. When she spoke about me taking her another point lit up like a fireworks show. I immediately associated that point with her interest in me, and I was glad to see I had no peers.\n\n\"I just don't want them to play games to try to break us apart,\" I said, honestly, continuing to scan her curve.\n\n\"Zac,\" she said seriously, the glow around my point was flickering with blazing activity, \"You are the only one for me, and I'm not going to let Brooke and Shannon mess with us. I promise.\"\n\n\"Well you might ask them to stop teasing me in first period,\" I said, \"It's starting to draw attention from Ms. Little.\"\n\n\"Really?\" she asked, \"Oh, by the way, I saw Ms. Little yesterday in the parking lot talking to Lexi, is that her name, the redhead that lives with you?\"\n\n\"Yeah, Lexi,\" I said curious that Ms. Little would be talking with a woman that was basically like a parent to me, \"She is training for a triathlon, I think she runs at the track on Tuesdays.\"\n\n\"What's that? A triathalon?\" she asked, \"She mentioned it on Sunday, when we were all talking.\"\n\n\"It's an endurance race, combining swimming, bicycling and running. Like outrageous distances.\" I explained, \"Lexi is always training, the race will have her moving all day long.\"\n\n\"Well she makes it work,\" Beth said, \"She is very fit, I've never seen abs as defined as hers.\"\n\n\"She's hard core, for sure,\" I said, \"But under that she is a very nice woman, she is almost like a mother to me. I know she had my best interests in mind, if she was talking about me.\"\n\n\"I couldn't tell,\" Beth shrugged, \"Just looked like two girlfriends talking.\"\n\n\"Interesting,\" I thought to myself, and checked my watch.\n\nWe were behind, so I paid for the meal, and we hustled to the car. Another rush to school, park and run down the hall. I made it just in time, like I usually did. \n\nAfter school, I came home, and everyone was already home. I dropped my bag off in my room, and heard Leah's shower going. I resisted the urge to test my powers again, and headed to the kitchen. Alyssa was there with Naomi, who was finishing eating some cookies. \n\n\"Hey, Zac,\" Alyssa smiled. \n\n\"Hi, Aly,\" I said, \"Hi Mi-mi.\"\n\n\"ZAC!!\" Naomi squealed, and hugged me with chocolate cookie fingers.\n\n\"Could you do me a favor,\" Alyssa asked, \"Could you take Naomi downstairs to watch cartoons? I have to talk with Leah about some things.\"\n\nThat made my stomach clench in nervousness. Alyssa took my hand, then I felt Alyssa's mind as she looked at me and raised an eyebrow.\n\nA: I know about last night, I'll keep it a secret, but no more fucking the nanny.\n\n\"Um, .. sure thing, message received,\" I said, responding to both messages.\n\nI collected Naomi, and had her wash her hands. I dropped by my room and grabbed my backpack. I could work on my homework while watching some movies. I hoped Leah was okay, I'd hate to have her lose her job because I was a horny incubus. I twisted the ring on my finger, and led Naomi down to the media room to watch some Pixar movies.\n\nAfter an hour of watching the movie, Naomi was getting distracted. She had brought some toys down, but she wanted to look at books in her room. I collected my books and headed back upstairs with Naomi leading the way. She walked through the kitchen and looked towards the living room.\n\n\"Mommmmmmyyyyyy\" she cried laughing, and running towards Alyssa to leap into her lap.\n\nI followed. Naomi was snuggled up between Alyssa and Leah, who was leaning into Alyssa almost intimately. \n\n\"She wanted to read some books,\" I said, \"I didn't know you were out here, sorry if I interrupted.\"\n\n\"Come with me, Naomi,\" Leah said and smiled at me, \"It's okay, Zac, I'll take her now.\"\n\nShe was dressed differently. Her tee-shirt was tight over her breasts, her nipples outlined nicely. She walked past me with Naomi with a much more confident step and posture. She used to hide her curves, but just now she was showing them off. Was it because of me?\n\nAlyssa looked at me and nodded, \"You look like you have things on your chest, Zac. Would you like to talk with me?\"\n\nAlyssa had a way of looking at things dispassionately, and helping me through confusing times. I almost welcomed her advice. She sat up and crossed her legs indian style, and pushed her glasses up her nose. I sat across from her, and dropped my backpack.\n\n\"I'm making a mess of things,\" I said, \"I think.\"\n\n\"Trouble with Beth?\" she asked, curiously.\n\n\"No, not Beth, she is wonderful,\" I replied, \"It's this power, it's hard to control.\"\n\n\"Your mother's power, right?\" she asked, \"The ring isn't working?\"\n\n\"No it works,\" I said, \"It works a bit too well,\" I paused and then just confessed, \"I experimented with it yesterday at school, just seeing if I could control the shape of it. It got a little out of control, but I put the ring back on and there weren't any consequences. One of my teachers, Ms. Little caught a full force trial, and she exposed herself to me. It wasn't her fault, I did it. I left immediately.\"",
        "\"I see,\" Alyssa said, \"Nothing happened at school?\"\n\n\"At lunch I took Beth to Blueberry Hill,\" I said, and she nodded, just the mention of the remote road told the story.\n\n\"You were worked up from the experimenting,\" Alyssa led on.\n\n\"Yeah,\" I confessed, \"It was good and quick, but a bit heated, since I kept the ring off with Beth.\"\n\n\"She must have enjoyed that,\" Alyssa said with a smile, then continued, \"You had quite a day it sounds, is that why Leah was in your room?\"\n\n\"Yeah,\" I blushed, \"Another experiment, it wasn't her fault. Don't take it out on her.\"\n\n\"I wouldn't dream of it,\" Alyssa said, and seemed to be in thought, \"Leah is a special girl, she means a lot to Naomi, and to the rest of us. She is family.\"\n\nShe concentrated for a few moments, like she was working through a solution, then she looked up at me.\n\n\"How do you feel about all this?\" She asked, \"What do you want to happen?\"\n\n\"I need to find better control,\" I said, \"Quickly. Will you help me? I can't experiment at school. It didn't feel right. I don't want to slip up and hurt Beth, or destroy careers.\"\n\n\"Let me think about some things, and plan some things,\" she said, \"I'll need to talk with your father and mother. Make sure they are okay with experimenting. For now, you really need to just depend on the ring. Was today easier?\"\n\nI nodded, \"Yes, I kept the ring on all day, and it was better today.\"\n\n\"Okay, Zac,\" she said, \"I'll talk with you later, I promise we'll get you some help. Hang in there. I love you and I'm your side, always, Isaac.\"\n\n\"I know Aly,\" I said, standing up. She rose and hugged me tight, inhaling quietly.\n\n\"You do smell good, Zac,\" she smiled and let go of me, \"I don't think the ring prevents that.\"\n\nPast: Alexis\n\nLast night's ceremony was still warm in my thoughts. The silver band around my neck was a near constant reminder of my status: Slave - Owned by my Master.\n\nI sounded corny, even to me. Trying to explain that to anyone and they'd most likely look at me like I had two heads. It wasn't proper, it wasn't feminist, it wasn't politically correct. I didn't care. The silver band meant more to me than the golden bands I carried on a white frilly pillow. The man at at the steps of the gazebo was my life, and I couldn't explain how happy I was that my Master was marrying my best friend, and now one of my Mistresses.\n\nIt sounded medieval. Primal. That had been my reaction since the collar ceremony. My sister-slave Carmen and I could hardly sleep. None of us could, Alyssa was nervous, Kelly was nervous. So we played, trying to work off the nerves. \n\nKelly wasn't sure what to do, as special as she was, her dominance wasn't domineering. I had to push her a bit to start telling me instead of asking me. I had to explain how I responded better to, \"lick my pussy, slave,\" than \"please lick me, Lexi.\" It seemed impolite to her, and it was, I had to explain that I knew my position was to serve. As much as I detested topping from the bottom, but Kelly needed to understand how to care and feed a submissive. \n\nAlyssa understood better, I think she had studied some in her psych classes. Her commands were often accompanied by commentary, or followed by a question. She wanted to better understand me, and my mindset. I appreciated that, but what I craved was control. The control that Jeremiah could slip into like a second skin. \n\nI watched him standing, waiting at the altar. He was confident, relaxed. Uncle Tommy looked more nervous. Jerry looked worn out, and I smiled, he might need Jeremiah's help to acclimate to Jenn's incessant needs. I barely knew Ron, he looked strong and handsome, but he was nothing - nothing compared to my Master.\n\nThe bridesmaids were lined up, escorted by the groomsmen, the only thing left was for Kelly to open the back door and be escorted to Jeremiah's arm by her father. I thought that was special, Kelly was the only one of us with a living father. Bob was a wonderful man, like a big teddy bear, who loved Kelly so much. \n\nI looked at the bridesmaids, as I waited, something to distract me from rushing up to Jeremiah and kneeling at his feet, rubbing my cheek on his strong thigh. \n\nWhere was I? Right, bridesmaids.\n\nJenn was smiling, looking very happy, her eyes kept flicking across to Jerry who was also smitten with his new girlfriend. They were cute. Carmen looked happy, her own silver band striking on her brown flesh. She beamed, and flirted with Ron across the way. I chuckled, and wondered if she was looking for her new Master to discipline her, or if she just liked seeing Ron squirm and look apologetically at Robin in the front row. Alyssa was all smiles, her eyes also constantly flicking to Jeremiah, she clearly cared deeply for my Master.\n\nI comforted myself that our family was so close, loving and compassionate. Even if we couldn't ever explain it to anyone else. Tommy knew our secret, and even he seemed to not understand how it worked. It did though.\n\nMusic started and I turned. The small crowd of friends in the backyard turned to the house, and then there she was. This was Kelly's moment and I was so excited for her. She beamed and waved to everyone, then grabbed her father's elbow and turned to the front. She was all smiles, but I could see her eyes bright with tears when she focused on Jeremiah. She wanted to rush forward, I could tell, but she focused on walking slowly.\n\nThe crowd turned to watch her, and I turned to look back at my Master. He was all smiles, his focus on his bride. I was proud of him, he was doing everything perfectly. He looked directly at Bob, and shook his hand. Bob said something that I couldn't hear. My heartbeats were drowning out everything, I was nervous, everything had gone perfectly, but soon it was my turn, and I didn't want to fuck it up.\n\nBob passed Kelly to Jeremiah, and retreated to sit with Betsy. Betsy was all smiles, and tears. Her beautiful daughter was marrying the most handsome, caring man on the planet. I should know, he was my Master. \n\nThe woman that was officiating, was she a pastor? or a reverend? She had told us to call her Miriam, but I liked titles. So... Ms. Miriam had them face each other then she spoke to us, the audience. It wasn't anything different than what I'd heard at practice yesterday. So I zoned out, and watched the couple, they both smiled and I could tell Kelly was feeling the feels. A tear fell down her cheek as she had eyes only for Jeremiah.\n\nI listened for my cue, but it was time for vows. Pretty standard, and only slightly different than the oaths I took swearing my obedience to my Master. Only they were more traditional, I didn't know much about the bible, but these oaths sounded biblish. Kelly said, \"I do,\" then Jeremiah echoed the same vow.\n\n\"Who has the rings?\" asked Ms. Miriam.\n\n\"This one does,\" I sang out, not even realizing I reverted to protocol. \n\nI dismissed the titters of laughter as people responded to my verbiage. I walked forward, my hair bouncing in a long braid with flowers that hung halfway down my back. I lifted the pillow containing the two bands of gold, then slipped to my knees. I smiled at my Master, then to my Mistress. Offering them their rings. I felt like I was a part of their union. I didn't want to be the focus of attention, but here I was. \n\nJeremiah took one ring and gave it to Kelly, then untied the other, and held it. I stayed kneeling, in my front row seat, and watched. Kelly held out her hand, and Jeremiah took it in his, and slid the band onto her finger, next to her engagement ring. She smiled, then slid the larger ring onto his finger. They both fit perfectly.\n\n\"You may kiss the bride,\" smiled Ms. Miriam.\n\nJeremiah pulled Kelly into his arms and kissed her fully. My eyes welled with tears, it was beautiful, I was so happy for my Mistress Kelly. My Master looked pleased, and smiled down at me, then to Alyssa and Carmen. It was just for a moment, but to us it was like a ray of sunshine. Even in the midst of his wedding, he was committing to all of us. Alyssa was crying, holding her hand to her mouth, as she smiled through her tears.\n\n\"Ladies and Gentlemen, may I present, Mr. and Mrs. Jeremiah Jackson.\" reported Ms. Miriam.\n\nThe small crowd applauded, and then we were dismissed to the reception. Betsy had it all set up along the deck that curved the house. As people slowly moved to the back, a group of hired helpers, moved the chair from rows, to circles, then set up tables.\n\nI moved to Kelly to hug her tightly, \"I'm so happy for you, Kelly!\" I said beaming at her, \"You are the perfect bride!\" I leaned and whispered into her ear, \"I love you, so much.\"\n\nShe hugged me and cried on my shoulder. We'd been through so much the past few months, and she gripped me tight. Her eyes bright but all smiles. She kissed my cheeks, and breathed into my ear, \"I love you so so much Lexi, thank you for being my special ring girl. You were perfect!\"\n\nI slipped beside the groom and hugged him tight. I took a moment just to inhale his scent, and feel his solid frame. He made me feel small, which is what he was supposed to do. He surrounded me with his arms.\n\n\"I'm so happy for you Jeremiah,\" I said, and kissed his cheeks for appearances sake, then leaned to his ear, \"I love you my Master, for always.\"\n\nHe smiled and unashamedly kissed my lips, and hugged me tight, whispering in my ear, \"I love you, little one, my special loving slave.\"\n\nHe said the nicest things.\n\nPresent: Jeremiah\n\nKelly's eyes blazed with anger, \"No, Alyssa, no!\" she was seething, \"I'm not going to have my son participate in sex experiments!\"\n\nWe were all in my room, Alyssa had wanted to discuss Zac's troubles with us, and Kelly was caught off guard. She didn't have the same context as Alyssa, who had been able to talk with Zac, and hear first hand his struggles. Kelly saw only her boy, not as she would any other boy. Intellectually she knew that he was like her, special. A power that could induce arousal, and make sex pleasurable. Emotionally, though, she only saw her son, the curious and loving little boy we'd raised together.\n\n\"Kel,\" Alyssa said, adjusting her glasses, \"Maybe I went to fast, can I explain what Zac told me about his past few days?\"\n\nKelly huffed, and ran her fingers through her hair. She looked at me, and noticed I wasn't angry, so she turned on me.\n\n\"Jeremiah,\" she said, \"Please tell me you are not taking her side? This is Isaac we're talking about!\"\n\nI reached out a hand, and gripped her hand. She tried to pull away, wanting to stay angry. I didn't pull her towards me until she stopped pulling away. Then she surrendered and slumped into my lap, wrapping her arms around my neck and cried. I could feel the conflict that had teemed through her emotions and intellect. I didn't adjust her, we needed to talk this through first.\n\nI was still a bit confused by the sudden presence of Leah in our mesh. I assumed that she had probably been absorbed into our mesh because our tryst in Carmen's room. Somehow Alyssa had also slept with Leah. It was just like Jenn, but completely different. This didn't feel so raw and primal as Jenn's inclusion. I shook my head to clear my thoughts, this was about Zac. We had plenty of time to talk about Leah.\n\n\"Kelly,\" Alyssa started again, once Kelly had stopped sobbing, \"It's not a matter of allowing Zac to experiment, it's controlling his exposure, and doing it safely for him.\"\n\nKelly blinked and wiped her eyes, she nodded, \"It's hard, Aly, he's my baby boy. No mother wants her baby to grow up. I'm listening now, though.\"\n\n\"He's already experimenting,\" Alyssa said.\n\n\"We gave him the ring,\" I said, suddenly irritated with my son, \"Is he ignoring it?\"\n\n\"No,\" Alyssa said, and then stopped to think carefully, \"He used it as a control, an on-off switch. In a way by giving him the ring, we encouraged him to test his own powers.\"\n\n\"What?!\" Kelly asked shocked, \"When, where... what happened?\"\n\nI felt the bitter pang of anger rise in the back of my throat, as Alyssa told us about Zac's day. What was he thinking?? We'd told him about his powers, we told him what the ring did. We'd given him explicit instructions to wear it at school, around crowds. Now he was playing with it like a toy. Did he think this was a game!?!\n\nAlyssa closed her eyes, and just waited. Her thoughts not admonishing our emotions, but letting us work through the triggers. \n\n\"You're thinking like parents,\" she said, finally, \"Because you are both wonderful parents. I want you to think back to when we first met. Did you act any differently than Zac has?\n\nThat took the wind out of my sails. I didn't have any parents watching over me when I first used my powers. I tried to control it on my own. It was only after I failed that I'd reached out to Alyssa. I didn't tell my Uncle, the closest person I had as a parental figure, until I had created my family.\n\nI felt Kelly's mind quiet too with her memories of her awakening. How she found such great pleasure in sex after I had changed her. Alyssa was right, we would probably do exactly like Zac had done. He had showed some restraint, but we were asking a lot of a hormonal boy that had just found out he was an incubus.\n\nKelly clung to me, her eyes spilling tears. She was worried about her boy.\n\n\"Look,\" Alyssa said, \"Zac is a good boy, I could think of many scenarios where a young man with his powers could have made some serious trouble. As it is, the one most exposed to his power is his girlfriend. Beth loved him before, his power only draws him closer to her.\"\n\n\"Yeah,\" I admitted, \"I can see what you're saying. So how do we experiment safely.\"\n\n\"Our suite at our office building,\" Alyssa said, \"Zac can sit in the control room. Kelly you know how that works. We can monitor him, and help him find control.\"\n\n\"I don't know, Aly,\" Kelly said, \"You know those sessions get me worked up. I have to have someone with me, someone I can engage with. You're not asking me to be there in that way for my son?\"\n\nAlyssa looked down, \"I hadn't thought all of this through, but...\"\n\n\"But what,\" I asked, already beginning to put the pieces together.\n\n\"Leah?\" Alyssa asked, her voice betraying she was even unsure of what she was suggesting.\n\n\"Leah!?\" Kelly said, \"I thought she was... okay, this is confusing me.\"\n\n\"Well,\" Alyssa said, her face showing more confidence, \"I was going to suggest bringing Beth into the circle, and that's still an option.\" She shifted in her seat, her posture showing she was struggling with how to present this, \"Zac's been with Leah, last night she came to his room, Zac used his powers to lure her. I think she was still feeling the arousal from the day before. So it wouldn't expose someone new. We can trust Leah, if she's willing.\"\n\nWe all were silent, and I quietly examined the minds of my loves. The mother's of my children. They felt the same conflicts, Alyssa wasn't being cavalier, she loved Zac as if he was her own son. The issue was more that everything we knew about children and parenting was from our culture. A culture that was silent on how to properly raise a mind-controlling incubus.\n\nI took a deep sigh, \"My loves, we are beyond anyone's experience here. Zac is trying hard to be a good person. I love him more knowing how hard this is on him. He needs our support. I don't know what the answer is, but it will have to be outside of the box.\"\n\nBoth Alyssa and Kelly nodded at me, and I continued, \"We had to evaluate and modify what we thought a family was, when we were all younger. This thing with Zac will be repeated with Naomi. We are parents of special children. We cannot ignore that any more. We need the minds of all of our family, Leah and Zac included.\"\n\nAlyssa nodded, \"Away from home? Get away and talk about things?\"\n\n\"Maybe, maybe we take a vacation?\" I offered, \"Or maybe we can do it here, our home and office have resources we can use. I don't want to make a decision until we can all talk comfortably together.\"\n\nI puzzled things through my mind. Some parts of our family were firmly established. The five of us had only drawn closer over the years. We were all comfortable with each other, and could anticipate when one of us was going through troubles. With Zac, and now Leah, the dynamic would change. Only the future could tell me what that change would be.\n\n\"We'll figure it out,\" I said, \"But it needs to be all of us.\"\n\nPast: Kelly\n\nI was still glowing from the wedding. Everything was just as it should have been. The day had been perfect, the garden beautiful, the ceremony was the perfect harmony to our solo ritual the night before. I was now bound to Jeremiah in marriage, and bound to my sisters just as securely.\n\nI kept looking at the ring on my finger, and then at Jeremiah's. Then the silver collars on Lexi and Carmen, and then back to Alyssa ring, a twin of Jeremiah's and mine, only on her right right finger. It was like a reflection of who we wanted to be, multi-faceted as the diamond resting against the five braided ring. \n\nThen things got a bit different. A summer storm blew through and chased everyone inside, but there wasn't anything inside to do, the construction work made the spaces too small for our guests. The storm wasn't leaving quickly, it only got more windier and wetter as the rains fell. The guest made excuses, and the men mother had hired to cater and clean up soon had the back yard stripped of chair, tables, streamers and flowers.\n\nAs quickly as everything was perfect. it now looked as if no wedding had even happened. Except for that ring on my finger, and that of my husband's. Miriam was a wonderful officiant, and offered Jeremiah and me her blessings. She didn't even blink when we asked if Alyssa, Lexi and Carmen could be included. She smiled her adoring smiled, and prayed over the five of us. She didn't ask any questions, or show any judgement. She kissed my cheek, and wished me the best, and then she too left.\n\nRon and Robin didn't stay long, but they wished us all well. Robin hugged Alyssa close, and Alyssa smiled and kissed her friend's cheek. Robin looked at me, and smiled, her hug not as close as the one for Alyssa, but she smiled in her confusion. Jerry and Jenn left right behind them, lots of firm and loving hugs were exchanged. Jenn was radiant next to an exhausted looking Jerry, but they were both happy. \n\nThen it was us five, and my parents. A table full of gifts, that we'd open after the two weeks of our honeymoon. The cups of rice and streamers had already been tossed out unused. My mother said she would collect the gifts and close up the house, wanting to see us off on our honeymoon. Carmen, Alyssa and Lexi went to the RV, and Carmen fired up the engine and backed out onto the road. \n\nThen it was just Jeremiah and I, kissing and hugging my parents, then running under the rain to my car. Decorated paint and soaked streamers, the shaving cream had long ago dissolved in the deluge. Jeremiah opened the door for me, and helped me drag my wedding dress into the passenger side, closing the door carefully. Then he rushed around, to open his door, shove his drenched jacket in the back, and slide into the driver's seat. He started the car, and the windshield wipers, then waved to my parents, drenched on the side porch.\n\nWe were off, and Carmen steered the cruiser behind us, heading out with headlights glowing through the darkening storm towards the Oregon coast. I leaned into Jeremiah's shoulder and felt his warmth through his soaked ruffled tuxedo shirt. \n\n\"We did it, Mr. Jackson,\" I said.\n\n\"That we did, Mrs. Jackson,\" He smiled.\n\nI felt a flutter in my belly at those words, then pressing my hand to my belly, I felt it. Our baby!\n\n\"J! feel this!\" I cried out, and grabbed his hand and pressed it where I had felt that small foot. \n\nHe looked at me, then pressed a hand to my firmer and only slightly rounder abdomen. His eyes flicking to watch the road, then looked to stare at me, as I felt the little human inside me, kick against its father's hand.",
        "\"Is that?\" he asked, and I nodded.\n\n\"Incredible.\" he said, and I totally agreed.\n\nPast: Carmen\n\nSuch a wonderful twenty-four hours. Though the last three were kinda sucky. The drive through the pouring rain in a huge RV wearing a bridesmaid's dress - wasn't the most fun I'd had. Lexi and Alyssa had already changed into warm comfortable jeans and sweatshirts. It was still summer, but driving through the coastal range and the storm had dropped the temperature dramatically. The dress was more decoration, it did nothing to keep me warm, or dry.\n\nI had to pull over onto the shoulder and stop to dress in different clothes. Alyssa offered to drive, but I was having trouble in the winds. So I hurriedly dressed then hopped back in, and it got considerably warmer. \n\nJeremiah noticed me pull off, and was waiting a mile down the road. Alyssa's telepathy was more reliable than a citizen's band radio in this slop. I smiled as I touched the silver band around my neck. It was new, and I hoped I'd never take it for granted. I wanted to feel it's weight, and remember my Master.\n\nWe pulled into the hotel, it didn't look like much against the high cliffs of the rocky Oregon coast. As we parked, I noticed that the hotel was built into the side of the cliffs, and had several floors of rooms, all looking out towards the grey roiling oceans and the angry dark clouds that continued to pour rain in sheets. \n\nBetsy had called in some favors to get the Honeymoon Suite on such short notice. We collected our overnight bags, Lexi and I carried the groom and bride's bags into the lobby. Jeremiah was checking in at the front desk, and Kelly was beside him. She waved us over, and then ran her hand along her belly. She'd only just began to show, but she stepped back from Jeremiah and directed her hands to press against her pregnant belly.\n\n\"It's so small,\" Lexi said, \"but strong!\"\n\n\"Healthy baby,\" smiled Alyssa and kissed Kelly's cheeks.\n\nI could only stare and feel in awe at the press of that small foot against its mother's belly. I was honored to be so close to it, to be trusted as part of the family. I closed my eyes and prayed a prayer of thanks for all the blessings I had in my life.\n\nJeremiah had the keys, though the clerk looked at him oddly when he asked for five keys. Jeremiah wouldn't have it any other way. He wasn't going to hide his family, even on his wedding night.\n\nThe room was huge, with a single king-sized bed that faced out over the broad windows overlooking the angry sea. There was a small balcony outside a glass door. The suite included a shower and an additional deep jacuzzi tub. It also had a sofa and a loveseat. A large television, and a stereo system.\n\nThe bed was made in white, and had rose petals scattered over the coverlet. A bottle of champagne was chilling in an ice bucket on a nearby table, along with a plate of chocolate covered strawberries. Alyssa took it all in then steered Kelly and Jeremiah to stand in the middle of the room. Then with a look at me and Lexi, she snapped her fingers.\n\nLexi and I dashed off, and stripped naked, returning in just our collars and goosepimples in the cool room. We knelt before Jeremiah and Kelly, and started to disrobe them. Alyssa had planned this all with Lexi and I while we drove. She felt how cool the room was, and went to add a touch of heat. Not too much, soon we'd not care.\n\nReturning, she stood and watched over Lexi as she removed Jeremiah's shirt, button by button. Then watched as I unbuttoned the back of Kelly's dress then pushed it over her shoulders and down. Kelly stepped out of her dress, her white wedding slip making her look stunning. She stood, and waited for me. Lexi had gotten Jeremiah down to his undershirt and boxers. We took our time, and I carefully unwrapped Kelly for her husband. Treating her like a present. Her belly had a firm bump, that I placed a kiss against, then slid out of the way, and bowed my head. \n\nJeremiah took Kelly into his arms, both of them naked, and Jeremiah splendidly erect. He turned and placed her among the rose petals. Alyssa slipped off her clothes and then reclined on the sofa. She snapped her fingers and Lexi and I crawled to her side. We watched as Jeremiah climbed onto the bed, and knelt astride Kelly's legs. \n\nWe were a privileged audience, watching the intimate act of a husband take his bride. It wasn't anything we hadn't seen before, but it made me tremble as I watched Jeremiah kiss and caress Kelly's flesh. How she responded in arousal. She didn't shimmer or use her powers. She wanted this one moment to be fully her and Jeremiah. Her soft moans and his gentle kisses made the slow arousal in the room percolate.\n\nAlyssa had her hand in my hair, and I turned to her. My mouth opening as she pressed her firm nipple to my lips. I suckled her feeling her breathing increase as she watched the pair on the bed. Her other hand went to Lexi's red mane, her curls frizzy having dried from the rain. Lexi turned and knelt, nuzzling between Alyssa's thighs. Alyssa's breath caught and her back arched in arousal. \n\nWe made love to our mistress, as she watched. She allowed us to watch and observe, but made her desires known. As Jeremiah turned to look at us I felt an unspoken question and a reply. Then we were making love to our Mistress Kelly, Alyssa had shifted in her sister's form. It was Kelly's night. I groaned as my mouth shifted and suckled a different breast. Lexi lifted and smiled then dove between thighs that looked like Kelly's. Even Alyssa's moans and encouragements sounded like Kelly. \n\nI looked over at the marriage bed, and saw that Kelly was on her knees, facing us. Jeremiah was behind his bride, his hands on her bottom. Her mouth was open as she watched us make love to her form across from her. I could hear her pleas and encouragement as Jeremiah ground his cock into her from behind. They didn't hurry, and neither did we.\n\nIt was indulgent to make love to my Mistress, as my Master fucked her across the room. Kelly's moans encouraging Lexi's as Alyssa's Kelly shaped hand gripped the red mane and drove her hips up. I looked up into my Mistresses eyes, that were locked on her own. The synchronicity of the moment was incredible. \n\nLexi and I focused on the Kelly before us, and listened to her commands, kissing sucking, moving and offering. Her moans of pleasure only encouraging our decadent moves. I heard the Kelly behind us pleading with Jeremiah, urging her to take her, harder, faster deeper. Her moans encouraged us to reciprocate with her doppelganger, and together, all of us, drove Kelly to the heights of passion. At the peak, Kelly released her aura, and we all shivered at the feel of her supernatural glow. I felt, but couldn't see her body freeze then tremble as Jeremiah shouted out his own release. I felt, but didn't observer her lying her head on the sheets, her face streaked with tears of joy at her release. I felt Kelly's doppelganger tremble and then seize as Lexi drank her offering.\n\nThen the room shifted, Lexi and I were directed to the bed. Kelly slid alongside Kelly and kissed her deeply. The pairs embraced and continued their love making. Lexi and I knelt alongside our Master, cleaning his cock from his spending. Enjoying his warm presence as I prepared him for another turn. \n\nAlyssa had steered Kelly's image, reversing her form over the top of the bride. They were enjoying each other's pussies. Jeremiah pulled Lexi up towards his mouth, then fed me his cock. I looked up at him and all it took was a tilt of his head, and I straddled his erect manhood. I groaned as I impaled myself on his stiff shaft, and then my eyes fluttered open to look at my sister slave's eyes as her thighs were spread over the groom's hungry lips.\n\nI kissed Lexi as our hips ground and rode our Master's cock and tongue. The cries of the pair of Kelly's near us encouraged our own lusts. We quickened, the indulgent slower pace lost to the passion in the room. Kelly's aura fed us as he rocked frantically seeking the heady pleasure permeating the room.\n\nI shivered and came as my body shivered, and continued to ride my Master's cock. Lexi screamed and pulled her arms around my shoulders, clinging to me as her firm body shook in wave after wave. Kelly cried out once, then in a chorus with her doppelganger as she crested and then quieted. \n\nI grunted as I felt my inside boil with the spendings of my Master. His hips rolling as his hands clung to Lexi's hips. I felt my body trip into a wave of bliss, shaking as my cunt milked my Master's cock.\n\nWe slumped and rearranged, flesh slipping alongside flesh. My head was pressed to Alyssa's breast as her voice soothed me, she was back in her form. The five of us curled into a ring of intertwined bodies. Jeremiah spread his arms around us, and we interlocked, and rested. Fully coupled together. \n\nOur family complete.\n\nPast: Jeremiah\n\nOur honeymoon was wonderful, we toured the coast from Newport to Astoria and back. Some nights we spent in the RV at a campground, other nights we'd splurge on a hotel room. Having Kelly's car with us gave us a bit more freedom. We'd find a remote camping spot for the RV, take Kelly's car into town for a nice meal of fresh seafood. Then we'd return to the remote spot and have glorious indulgent succubus sex until we passed out from exhaustion. After two weeks of a wonderful time it was time to get back home.\n\nBack to life, Back to reality. \n\nCarmen had started playing that song on the stereo for a few days. We'd picked up some cassette tapes from various stores along our trip, and this one seemed to resonate with Carmen. She's listen to it with headphones when she was cooking, and move her body to the dance beat. \n\nHowever do you want me, However do you need me...\n\nThe other verse of the seemingly endless refrain that the singer echoed behind the dance music also seemed to resonate with all of us. We'd spent the last few months living a fantasy, wrapped up in our uncommon reality. \n\nWe'd researched my father's past, and recognized the first stories I'd heard from my uncle were only part of the truth. The stranger fiction of the United Priesthood, it's influence over not only it's followers but also it's larger corrupt enterprises, were also a web of lies and half truths. The tales were spun to control and manipulate people. I spent many hours driving along the coastal roads, wondering if I was doing anything differently.\n\nMarried life didn't change much with our dynamic. Kelly was my wife, but looked to Alyssa as the feminine leader in our family. They both deferred to me, of course, but they also were mostly autonomous, always thinking ahead. I wondered if I needed to be doing that as well. We'd spent so much time just handling the first thing on the radar, I wanted to get ahead of the curve.\n\nWhen we'd seen all the sights along the coast, we still had another few days before the Bed & Breakfast would be ready. I wanted a change of scenery, and while having Kelly's car along with us was fun, it also separated us when we drove. We drove back into the valley, and dropped off Kelly's car, and headed up into the Cascade Mountains. \n\nMy mother used to take me to a serene lake near the summit of the mountain pass that connected the central valley in Oregon to the higher plains east of the Cascade. The range of mountains had a stretch of volcanic peaks that lined up from northern california all the way to Canada. The rugged terrain had formed many lakes, this one was formed from a prehistoric lava flow, that dammed up an artesian spring. Boating was restricted, motorized boats were not allowed. It made for a quiet get-away. \n\nThe lake had a campground at one end, and at the other end was a small lodge, that rented out rowboats and provided fishing supplies. They also rented cabins, but the demand for the small rustic rooms was high, and there was no vacancy. We opted for a camping space, and then we could rent a rowboat for the few days we would be there.\n\nCarmen had dropped Lexi and I off at the lodge to rent the boat, then she navigated the cruiser with Kelly and Alyssa to the campground to set up camp. We rented some life-preservers, which were required, even if the lake was so cold that swimming was nearly impossible. Lexi took a hold of the oars, and I unclipped the chain and pushed us into the water.\n\nNear the lodge the water was crystal clear, and I could see ancient trees still standing mired in the soil of the lake. The cataclysmic event that dammed the spring had flooded this valley and created the lake naturally, trapping the vegetation underneath the rising water. The water was clear and shallower near the lodge, but dropped off into a basin and the bottom was overtaken by the deep blue color of the water. \n\nLexi smiled as she rowed, I had offered to row, but she wanted to do the chore, \"I need a good workout,\" she smiled, \"And I'd enjoy the alone time with you. You just need to point me in the right direction.\"\n\nThat simple sentence seemed to be the thing vexing me. Not getting to the other side of the lake, that was somewhat easy. I sat in the stern, while Lexi faced me, her back towards the direction she was rowing. Since she couldn't see, I got her pointed in the right direction, and then she'd row fixing her eyes on a point behind my head. A few corrections here and there kept us headed steadily towards the landmark of the far-side campground.\n\nThe direction I needed to point our family was the puzzle troubling me. Each of my loves had their own goals. Kelly had enrolled for Fall semester changing her major to Hospitality Management. Alyssa was continuing her pursuit of a degree in pre-med, with a desire to become a doctor, probably of Psychiatry. Lexi had also enrolled and wanted to walk onto the cross-country team, but she also wanted a degree in Kinesiology to follow her passion for training and coaching. Carmen had decided to take the fall term off, and that troubled me.\n\nShe loved dance, and she always would. She had looked at the needs of our family, however, and decided she needed to drop out of school. She wanted to work for the B&B, be the cook and the manager, taking care of the rooms and the work needed to keep our business going. She would do this to leave the rest of us to pursue our degrees.\n\n\"I can hire someone,\" I said, \"You don't need to quit school.\"\n\n\"Papi,\" she said, \"Why? I can do the work, I am part of the family. We wouldn't have to introduce an outsider to our family. I want to do this. School never was for me.\"\n\n\"You'll tell me if it gets too much for you?\" I offered, I'd seen how she would sacrifice herself, to the point of breaking, to help us, \"You need to let us help you too, we can all pitch in.\"\n\n\"I promise, Papi,\" she had said, hugging me and looking me in the eyes, \"Please let me do this for you, for all of us?\"\n\nI nodded and she grinned, and then went and sat with Kelly and they started planning for the opening of our business. \n\nWas that all the direction I needed to provide? Point them in the direction that we both wanted, or needed, and let them free to do what they desired? Would they start to distance themselves, as we worked in so many directions? Could I keep the center intact, to provide a safe place for them to live, and learn? Would I end up sacrificing my plans to please them, then resent them years later?\n\nMaybe I was getting ahead of myself. The steady beat of the oars was soothing. Lexi's smile, even as she worked her body hard was encouraging. She trusted me, beyond what I expect anyone to trust me. Especially after what I'd impulsively done at the start. I had to remind myself, that together we'd forged ahead, and created something so unique and special, it defied an easy explanation. \n\nI didn't need to explain this to a parent, or anyone outside of our family. I just had to keep relying on all of us, together. I closed my eyes and felt the warmth of the sun. The solitude in the middle of a lake, formed by one of the most destructive forces on the planet. Somehow this haven was carved out of molten stone and fire. Today it brought me a feeling of peace, that I was a small part of something large. Our family was a small part of something larger. We couldn't possibly know the scope, we just had to keep rowing.\n\nI sighed, a content sigh, if not a happy sigh. Lexi caught my expression and blew me a kiss. Over her shoulder I saw the lifted hand and waves of Kelly, Alyssa and Carmen, waiting for us on the nearing bank. \n\n\"We'd figure it out,\" I said to myself, \"We always do.\"\n\n*****\n\nAuthor's Note:\n\nThank you for reading, commenting and voting.\n\nThis ends Part Two. When I returned to writing, I knew that Jeremiah's marriage was an ending point I wanted to drive to. The character's surprised me along the way, taking me on tangents and rabbit trails, that were fun to explore. I also wanted to explore their pasts, and their future. Part Two is the connective tissue between their origin and their present. Part Three will focus more on their future, while returning to their past. I find that time has ripples and currents, and any story has a repetition and recursion to it.\n\nThanks for reading for the last few months. The response was much greater than I expected, and encouraged me to write often, and I hope well. I want to take some time before I delve into Part Three, brainstorm, outline, and discover the characters cores so I can tell this story.\n\nMuch thanks to mgenette who provided a steady second eye on my grammar and word choice. He also encouraged me, reading my work and offering his thoughts and advice. Any residual errors or thoroughly horrible plot lines are completely my fault.\n\nThanks for reading, commenting, and voting. An additional thanks for those that sent feedback via my Author page, the thoughts and encouragement are invaluable.\n\nHank"
    ],
    "authorname": "HankDolworth",
    "tags": [
        "male dominance",
        "female submission",
        "supernatural",
        "commitment",
        "group sex",
        "shape shifting",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-02-ch-23"
}