{
    "title": "Unexpected Threesome Ch. 41",
    "pages": [
        "It had been a late night and, by the time I woke up, the sun was well into the sky; at least by my normal standards.\n\nI looked briefly to my left and right. The girls were still asleep; delectable in their relaxed uncovered nakedness in a way that caused my morning erection to surge. Still, we had a big day ahead. A special lunch ashore after which Tash was catching a flight home.\n\nOnce we left our anchorage in Byron Bay, we were planning a leisurely cruise down the coast through towns Tash was all too familiar with and she was already late for recommencing work. So she was bailing on us; an entirely reasonable thing to do. And since we were only day sailing between towns, it wasn't going to make the slightest difference to our crewing watch schedules.\n\nI rolled as gently as I could from my back onto my front; although a lack of space meant I couldn't stop my erection from flopping onto Amy's hip and then sliding down her side as I completed the roll. Then I lifted myself onto all fours to crawl to the head of the bunk and thereby out of it without disturbing the others.\n\nFrom the elevated position of my outstretched arms, I took a moment to admire the sight laid out around me. Amy to my right was on her back; her eyes lightly closed with her hair cascading down onto the bunk and surrounding her beautiful face. Her breasts pointed perkily skyward. Capped by those stunning nipples they sagged off to the side just enough to indicate how real and attractive they were. Her stomach dipped down to make the rise to her prominent mound all the more sexually inviting; an invitation I'd happily and very enjoyably accepted last night.\n\nImmediately on my left was Liddy; also on her back with her dyed blonde hair also cascading onto the bunk under her. But in Liddy's case, the size and perkiness of her breasts at her age left no doubt they were surgically assisted; although no less sexually provocative for that. \n\nBetween Liddy and the side of the boat was Ellen; turned on her side towards Liddy and cuddled against her with her arm across Liddy's stomach.\n\nI admit, on all fours, able to feel my hardness resisting the effect of gravity as it surged even harder at the sight of the naked women around me, I felt momentarily like a rampant horse among a paddock of fillies. That's not a boast. As far as I know, I'm no better hung than average. Just a description of what it's like with your aroused cock hanging suspended like that.\n\nI eased myself forward towards the top edge of the bunk. I was nearly there when I felt a hand grab my erection. I looked down between my arms. It was Amy. She pulled it towards her and sleepily lifted her head to give it a kiss. Then she let it go and lay down again. \n\nI finished crawling out of the bunk. Now we were back in civilisation I couldn't go on deck to have my breakfast entirely naked, so I slipped on a pair of my usual speedos; tucking my erection into them and pulled the waistband down so that my hardness was tightly sheathed by the stretched material and rose a significant distance over the waistband.\n\nI've said before that I savour my morning glories. They feel nice; all the more so when on most mornings I can stare in at the naked beauties while I pour my cereal. Amy, especially, was now sprawled out in a particularly sexual manner, having spread somewhat into the space I'd vacated. But the view of them and memories of the sex I'd shared with each of them last might, meant my cock hardened, not softened as I went about getting breakfast.\n\nIndeed, as I looked back into the room I surrendered to an urge to surge it; looking down to watch as my sheathed hardness pushed away from my stomach and the bell swelled. I held it there for as long as I could; enjoying the burst of sexual energy it gave me.\n\nThere are times women are right in their judgement that men think with their cock. Mine was insistently telling me it wanted pussy. There was nothing loving or romantic about the message. Even after yesterday where I had more sex in a day than many men get in a month, it just wanted to be submerged in the warm embrace of a woman's vagina. Still, that wasn't a new message. It's a demand it's made nearly every morning of my adult life; one that thirty years of marriage teaches you to ignore. Few women want to be woken from a deep sleep because their partner is feeling a bit randy.\n\n, \n\nI turned back to pull the coupe plate from the cupboard for my breakfast. Some sound alerted me to another's presence and I turned my head to find Tash quietly approaching me, dressed only in a tiny bikini bottom; her enormous breasts hanging free and swaying slightly with her walk. Unembarrassed by my erection, instinctively, I turned to face her, whispering...\n\n\"Morning. Can I get you a bowl out?\"\n\nShe closed the distance between us, letting her reply almost into my ear...\n\n\"I thought that would be you.\"\n\nShe looked down between our bodies. \n\n\"There might be something else you can get out for me. That's an impressive morning erection you have there Ned. Would you like to put it to some good use?\"\n\nAs she spoke she slipped her hands inside my pants and pulled the waist band of my swimmers back over the tip of my shaft and two thirds of the way down it to let her wrap her hand tightly around my hardened flesh. Then she pulled her head back enough to flash me an inquisical grin. \n\nI smiled back at her and, in a tone that I didn't think I got quite right, replied...\n\n\"Sure.\"\n\nThe truth was, I'd been caught flat footed and unprepared by her sudden sexual come on.\n\nIt had been well over a week since Tash had last sought sex from me. But it had been much longer since she done so without having me indulge her in some fantasy that justified her ignoring the age difference between us. Her extensive collection of degraded old one piece swimwear had been torn to shreds one by one as she'd had me play the role of the swim coach she'd always had seduction fantasies about or simply role playing forcing myself upon her in one way or another with some sort of bondage a common request. \n\nThe one piece swimwear - whether the old ones that would be torn to shreds or the new ones that would be removed or worked around - were a signal she wanted sex that didn't even require her to admit it by words or any other action.\n\nBut even when she gave a more direct signal than a one piece and wasn't asking for role play, Tash's engagement with me was more at the level of having sexual games; concentrating more on the sex and the game and avoiding any real emotional connection. So this direct request was quite novel.\n\nWhich is why, in that spit second I had to reply, I struggled to find the right tone. The answer was always going to be yes. That wasn't the problem. Rather it was that, if it had been one of the other girls asking, the answer would be tinged with love, passion and an immediacy of desire (or else, if I want to be honest about it). But when the request comes from someone who, because of our age difference, has always been just a little bit transactional about sex, too much enthusiasm from me might be scary for her, but too little might be insulting.\n\nI mustn't have got it too wrong. She kissed me on the cheek, giving my erection a couple of jerks before releasing it to turn back towards her room. Sashaying sexily towards it, her fingers gave me a come hither sign over her shoulder; me following with my now released erection swaying back and forwards as I walked. As we entered the room, she closed the door behind us and directed me to lie on the bunk. Immediately she pulled my pants down the rest of the way; signalling me to lift my hip to assist her.\n\nThen I got to watch as this stunning voluptuous blonde, just over a third of my age, grinned at me as she dropped her bikini pants to the floor so we could have sex. Taking control, Tash climbed over me; settling with her legs outside mine and, as far as I could tell, my shaft laying in the front part of her crease. Her breasts pushed firmly into my chest as she eased her weight fully down onto me, bring her lips to my ear again.\n\n\"Ned, you've been so good to me while we've been on the boat - so understanding and patient. I know you must feel as though I've just used you for sex without giving any love back in return and I suppose I have.\n\nBut before I go, I want to show you it was more than that. I want to make beautiful love to you like you do for the other girls. No games, no dress up, no fantasies, no pretend. Just real love making. You and me.\"\n\nShe nuzzled my cheek with the tip of her nose before pecking at my lips.\n\nNow lightly biting my neck, she started rocking herself up and down on me; clearly stimulating her clit along the length of my shaft. I brought my hands up alongside my chest so that her nipples brushed against them with the movement of her body; quickly hardening into large jutting projections.\n\nI could feel her crotch first moistening, then wetting, half the length of my shaft as she moved her clit along it. Her breathing became heavy, then morphed into little moans which in turn became vocalised 'oohhh's' and 'aahhh's' as she progressed through her arousal towards a climax. I could sense her moving her nipples more deliberately against my hands to maximise her stimulation of them.\n\nReleasing my neck, she elevated her head as if clearing her airway to more firmly express her rising excitement. Knowing she liked it, I elevated my head enough to suck firmly on the side of her neck; holding on like a sucker fish as her movements became ever more pronounced.\n\nAs she came, she seemingly made a desperate attempt to quickly have me penetrate her. Then, as if overcome, she gave up on her attempt. Instead, with the tip of my shaft barely inside her, she lowered her head alongside mine and moaned into the bunk cushion quivering under the impact of her climax while grinding her hips against mine.\n\nI waited, stroking her hair, as she fully savoured her orgasm.\n\nFinished, she lifted her head and pecked my lips again...\n\n\"That was nice Ned.\"\n\nI could feel her pushing down against the shaft already shallowly penetrating her. She was, as always tight. At first my shaft bent under the pressure, but Tash realigned the direction of her push in a way that negated that and let it accept the full force of her action.\n\nBit by bit, it slipped in. I could feel she was wet and aroused and it didn't seem to cause her any particular discomfort but, as always, it just seemed as if her vagina was too small to accommodate me. I didn't really think that was how these things were meant to work; but who was I to judge and that's not in any way a boast about or comment on me. I was more concerned not to join her list of held in contempt younger lovers who, because of that, always seemed to climax before they'd even managed to penetrate her. \n\nAs she got me completely inside her and my balls almost pushing up against the back of her crease, she lifted herself up on her outstretched arms.\n\nClosing her eyes, she looked upward as she started lifting herself up and down along my shaft reverse missionary style. In terms of actual changes to my degree of penetration, her movements were minimal. I could feel my shaft was only slipping in and out of her to the slightest extent. On the other hand she was very firmly rubbing her clit on my pubis.\n\nI had to be slightly bemused. Tash's idea of making beautiful love to me wasn't quite the same as I applied to the other girls. Clearly at this stage she was mainly pleasuring herself. But that wasn't to judge her. She was young, I was old. I could rely on the girls to experience multiple climaxes and still be ready for more. As a man, Tash was only going to draw one from me and that would render me pretty much useless for much else afterwards. It was fair enough she drew her full measure of pleasure first.\n\nAnyway, I was genuinely touched by her willingness to set our age difference aside and set out to make real love to me.\n\nHaving watched transfixed for a while as they bounced delightfully up and down with her movement, I lifted up my head to suck her right nipple, playing with the left between my fingers. Again, I could sense her growing arousal. Tash was no Amy; whose first orgasm seemed to signal a continuous stream of them while you kept stimulating her. But on the whole, she didn't take long to bring to an orgasm if you were getting it half right (which is probably what annoyed her so much about her younger lovers). And if you kept at it, subsequent ones were - for a while anyway - even faster again.\n\nAs she got more excited, I started biting lightly and sucking the side of her neck again; bringing my other hand up so that one was playing with each nipple. The neck sucking was something she'd got me to do in one of our more recent role play sessions and really seemed to add to her arousal; so I'd added it to my repertoire with her ever since.\n\nTash was really getting excited; bearing down on my pubis and rubbing herself vigorously against it almost to the point it hurt. If she didn't have a full Brazilian I'd be feeling fairly abraded by now. Just my pubic hairs were enough to make me think I'd have to do something about them too if we were going to do this very often.\n\nI was having to suck pretty hard on her neck just to keep my mouth in contact; her flesh being ripped about between my teeth regardless of how light a pressure I applied and her breasts were wobbling about in my hands like moulded jelly; the hard nipples like a cherry on top as they circled in my palms.\n\nThe experience for me was highly erotic and very pleasant. But I was in no danger of going off prematurely. My manhood was embraced firmly within her body, but most of the movement was external and not too stimulating in a way that would race me to a climax. I've always liked reverse missionary for that reason.\n\nWith a couple of loud grunts Tash's hips momentarily tensed up and she climaxed. I wrapped my hand around the back of her head as she dropped her face into the bunk alongside my head; moaning into the cushion as I felt her contractions bear down on my shaft. Just occasionally she'd lift her hips and thrust my shaft in and out of her, I presume to prolong her orgasm.\n\nHer orgasm wasn't quite over when she turned her head and bit firmly on my neck, lifting and dropping her hips to cause my shaft to slip in and out half its length. At first the pace was measured. The feeling was delightful; with her tight grip on me, tendrils of pleasure were running up and down my shaft with every movement.\n\nBut I quickly started to wonder if she wasn't getting more excited by it than I was. She started grunting into my neck as her pace accelerated to the point the hand I still had around the back of her head felt more like it was there to stop her ripping my throat out than as a loving gesture. She seemed to be using her teeth as a hinge point for her whole movement as her hips humped up and down; her clit crashing down against my pubis with very thrust.\n\nAny complacency I might have had about my endurance evaporated as those tendrils of pleasure became surges of exquisite sensitivity. It was unrelenting and I had no measure of control that would let me slow things down or take the pressure off. With a loud grunt I climaxed; intensely pleasurable at first, but still Tash kept humping me in some sort of sexual frenzy. There was not even any way I could align her frantic humping with my own ejeculative waves. She just kept pounding away at me.\n\nAware that I'd climaxed and clearly looking to give herself another orgasm, she became almost frantic. The feeling in my shaft had already morphed from pleasure to that extreme sensitivity. I tried taking the pressure off by mirroring her movement; lifting my hips as she lifted hers to minimise the stimulation. But her movements were too unpredictable and all I ended up doing was ending up in some sort of uncoordinated dance with her.\n\nWith the tightness of her sex, I could sense it was all going to fall apart as soon as my manhood lost any hardness and that's exactly what happened. On one of her downward thrusts, it just bent and popped out.\n\nTash didn't miss a beat, pushing the residue of my erection down between my legs and rubbing her crease along it. But soon that was gone too.\n\nI didn't want to leave her half-finished. Sticking my hand down between our bodies towards her crotch to signal my intention, I rolled her off me and onto her back.\n\nAs soon as I'd got her there and recovered my neck intact from the grip of her teeth, I penetrated her now very wet and sticky sex with two fingers to stimulate her g spot while using the thumb of the same hand to rub her clit and sucking the nipple nearest me.\n\nTash was soon quivering with excitement. Whatever had been building inside her was clearly powerful and there was no way she was going to have let me leave it half finished.\n\nAfter making sure I was hitting all the right spots and had her back on the path to a climax, I cheekily tried something I'd done to good effect with her twice before. Instead of just rubbing her clit with my thumb, I started fluttering it rapidly against it.\n\nThe effect was immediate. She came. Hard. Once again, her legs straightened out so hard and fast they smashed into the bulkhead with an enormous crash. She may have even momentarily blacked out. With her legs quivering, her body went into some sort of spasm where hips rose off the bunk as she squirted copiously. Even after she managed to lie back flat on the bunk she was left shaking vigorously as she moaned away.\n\nShe was still moaning and shuddering when she somehow found the energy to throw herself on top of me and just about swallow my face as she thrust her tongue in my mouth and kissed me passionately. Then, as if she was suddenly completely drained of energy, her head lolled to the side of mine leaving her quietly groaning as little quivers intermittently ran through her body.\n\n\"Oh my god Ned. I've never cum like that before. What ar...\"\n\nShe hesitated as another quiver ran through her body.\n\n\"What are you doing to me? Can you write it down so I can get future lovers to do it? I'd hate to think that's the last time in my life I'll have an experience like that.\"\n\nI let her rest on top of me until she recovered some semblance of energy. Then she eased herself off the bunk, but immediately collapsed on the floor; giggling.\n\n\"Oh my god, every muscle in my legs has turned to jelly and hurts like hell. Sorry about the mess. Ill clean it up after breakfast.\"\n\nI watched bemused as she struggled about on the floor, still half in a fit of giggles at her immobility, to try and put her bikini pants back on. Having finally succeeded in that, she then discovered even her arms muscles had gone on her and she couldn't reach behind her back to tie her bikini top; instead eventually asking me to tie it.\n\nBut as I shared her amusement with the effect of the orgasm on her body, I recognised that was the last erotic engagement I'd ever be having with her. Whatever might happen with the other girls, Tash wasn't going to be part of it. She knew her future lay elsewhere and that was starting with moving back in with her parents in the Shire, at the other end of Sydney.\n\nTash and I were sitting in the cockpit, enjoying the early morning sun as we ate our breakfast, when Amy came up to join us holding her own bowl of cereal. It had been a late night and I wasn't surprised the others were a bit late in emerging.\n\nLike Tash, she was dressed only in one of her small 'fuck me' bikinis; not that I could talk given I was only wearing speedos.\n\n\"What the hell was that noise?\"\n\nTash and I both knew she was referring to the loud bang Tash had made when she'd kicked the bulkhead as her body had gone into some sort of seizure as she climaxed.",
        "\"I had another climatic seizure.\"\n\n\"You know Ellen's going to be a jealous as hell.\"\n\n\"What am I going to be jealous about?\"\n\nEllen appeared. Dressed only in a small bikini bottom, her breasts hung delightfully bare. Amy answered her.\n\n\"Tash had another seizure as she came.\"\n\n\"Yea, I heard. It nearly made me jump through the roof.\" Ellen looked me in the eye with a cheeky grin...\"and I'm waiting Ned. I'm still waiting.\"\n\nI gave her a faux knowing look in reply...\"Maybe you're not a seizure type of person.\"\n\n\"You can play me like an accordion in every other sexual outcome. I think you should still be able to pull a seizure or two out occasionally.\"\n\nEventually Liddy also emerged, moving past the rest of us already sitting around the cockpit to take a vacant spot towards the stern. As she turned to me to say something, she suddenly stopped with a frozen stare, looked across to Tash and blurted out...\n\n\"Oh my god, you have matching hickies.\"\n\nI looked at Tash and sure enough she had a welt on her neck from where I'd been sucking it. I just hadn't really focused on it. If hers was that prominent, I hated to think what mine was like given the punishment my neck had taken from her. Ellen and Amy of course had to have a look; Amy sticking her tits in my face as she bent around me to examine it.\n\nEllen of course had to be the one to really lay it on...\n\n\"Aren't you a bit old for a hicky Ned? I mean really, shouldn't you have left that behind in your teenage years. We're the ones who are going to have to be seen with you today. What are people going to think?\"\n\nLiddy chipped in...\n\n\"They're going to think I did it aren't they.\"\n\nTash blushed...\n\n\"Sorry guys, I got a bit carried away.\"\n\nEllen straddled my lap; spreading her legs wide, she pushed the gusset of her bikini pants all the way up my thighs until her crotch sat touching the tip of my flaccid manhood where it stood pushing out my swimwear. Instinctively I wrapped my hands around her lower waist.\n\nEllen curved her body down to suck the other - left - side of my neck; pushing my head back while supporting it with a hand around the back of my neck and rested her naked breast on my left bicep...\n\n\"Maybe he needs a matching one to make it look OK.\" \n\nAs the others giggled, she sucked it. Firmly; but in no way comparable with the punishment Tash had melted out to it. But I didn't really have time to think about my neck. The effect of Ellen pushing her crotch against my manhood was predictable as it quickly hardened; pushing firmly into her crease, but with nowhere else to go, initially bending and folding as it reached the limits of the space Ellen's body permitted it.\n\nShe started very subtly rocking her hips back and forwards, eventually manoeuvring the tip so that it was freed enough to straighten out under her crotch; a full, hard, horizontal erection along which I could feel her rocking her clit. There was also enough movement of her nipple against my bicep to raise it to a hard button. Whether the movement was obvious enough for the others to notice I wasn't sure; but the effect on my manhood certainly would be.\n\nShe released my neck and came up for air; still rubbing her clit as she purported to examine her handiwork...\n\n\"Nothing! That skins as tough as leather and getting a bit bristly now too. I'm not sure what Tash did to him to give him the one on the other side. Oh well; it was worth a try.\"\n\nEllen backed off me, returning to the seat on the other side and leaving the sheathed hardened rod of my erection fully exposed. As I watched her retreat, she poignantly looked down at it and then gave me a looked that almost expressed satisfaction in causing it. There was no way the others wouldn't react to it in some way; and predictably, it was Amy who made the most obvious move. Wrapping her hand around it, she commented, more to amuse the others than as something directed at me...\n\n\"Ah Ned, Issie was right. Our fuck me bikinis do work a treat don't they. It's just so easy to get a hard on out of you, isn't it.\"\n\nIt was a rhetorical question, which apart from recognising it with a round of giggles and Tash leaning in and wobbling her breasts from side to side, we quickly moved on from.\n\nAfter taking our time over breakfast and cleaning up, we started to sort out the details of the day ahead.\n\nLunch was to be at the Beach Caf\u00e9; another trendy, upmarket establishment, this one over-looking the bay, but with a more casual atmosphere than the Byron at Byron we'd been to last night. Before that, a swim and after that, saying goodbye to Tash as she caught the bus to the airport. \n\nThe logistics of getting ashore were a bit more complex than last night. The lifeguards were likely to get a bit toey if we tried to take the RIB onto the beach through the daytime crowds - even if we did that up at the Pass, where the commercial tourist boats launch. \n\nSo it was going to be another swim ashore, with surfboards and waterproof bags for the gear; including our lunch clothing. Tash would be travelling light - so her aeroplane bag could be included in the waterproof stuff. On a yacht you travel light at the best of times and what wouldn't fit in her carry on backpack could be left on the yacht and come back to Sydney with us.\n\nSo it was that about 10.30 the five of us chucked in the two surfboards - one with a waterproof bag strapped to it - and dove in after them to swim ashore; the four girls in variations of their fuck me bikinis and me in speedos - naturally.\n\nIt wasn't a short swim. We had to anchor well outside the breaker line at low tide. All of us were strong swimmers, so that wasn't really an issue; although for me, there was always a bit of a concern about sharks this far out. The girls took turns paddling the board without a bag tied to it, while I navigated the board with the bag; alternating between pushing it forward and swimming after it and just holding onto the back with extended arms and kicking it forward. \n\nForegoing her turn on the board, Ellen made a point of swimming alongside me; often breast stroking to match my pace as I dealt with the board. About half of the way to the breaking point of the waves, she picked a moment when I was kicking the board along with extended arms to duck dive and use a lifetime of mucking about in water to gracefully come up under me, face up, in the space delineated by the back of the board, my spread apart arms and my head. As she rested her elbows on my arms to support herself, I found myself intimately face to face with her, her body extended down along mine, her feet kicking outside my thighs so that I wasn't the only one propelling both our bodies and the board through the water.\n\nEllen had been in a strange mood since we'd made landfall yesterday. She had openly admitted our approach to home was causing her to be unnerved by what she called the dissolving of the bubble existence we'd lived on the yacht. She knew it would force her to eventually choose between continuing our relationship and taking what I thought was the more prudent approach of finding a more age appropriate long term partner. But for the moment, this was reflected in certain aspects of her sexualised behaviour. \n\nNormally it would be Amy who'd be most likely to come onto me in the water; and Issie when she was aboard. But now I had the front of her body pushed up hard against mine. And, like occurred over breakfast, there was not the slightest doubt as she'd wiggled her thighs and lower body against me that she'd set out to induce the erection that had resulted; an erection that in this case she then intentionally brought her crotch against the tip of, so I was effectively pushing her through the water with it.\n\nShe transferred her arms from resting on my elbows to around my neck as every thrust of my legs drove the tip of my manhood into her crease and every kick of hers wiggled it about in there; all while she made light of it...\n\n\"I hope you don't mind if I get a ride with you?\"\n\n\"Do you mean a ride with me or from me?\"\n\nWith a voice of feigned innocence, she replied...\n\n\"Why Ned, you'll make be blush. Whatever could you be talking about. Anyhow, you know my views on the incompressibility of water.\" [Which simply reflected Ellen's views on the medical risks of, shall we say, enthuastic penetrative sex in water.]\n\n\"You don't have to compress any water for the ride you're getting.\"\n\nEllen grinned at me.\n\n\"Arr Ned, you see right through me don't you.\"\n\n\"I'm trying to come up with some pun based around 'feeling right through' given the wood I've got pushed up against you, but I can't make it work.\"\n\n\"No you can't can you. Let's face it, when it comes to verbal sparring, you're not really in my league. But that's OK, I love you anyway.\"\n\nIt was nice to see that, whatever was bothering Ellen, it hadn't diminished her playful cheekiness.\n\n\"Anyway Ned, you're right. I turned myself on a bit when I fooled around with you over breakfast. \n\nIt left me a bit randy. \n\nAnd now I've got that big swollen clit of mine positioned right on the tip of your cock. \n\nThat should be a nice mental picture for your head. \n\nJust think, your engorged bell is weeping pre-cum as it plays against my enlarged clit; its hood drawn back. \n\nI can feel it flicking rather delightfully against your bell as we speak and all separated by just two layers of the finest, thinnest material. \n\nEvery time you kick I get a lovely jolt of pleasure. \n\nIs that doing your head in? \n\nMy heavy breathing isn't...just from the swimming you know. \n\nThat swollen clit is throbbing Ned... really throbbing. \n\nI'm determined to cum before we get to the beach...but even that won't do anything to cure...the ache I have in a vagina that's just gapping open and wanting your shaft to fill it. \n\nPity there's no where we can do that till we get back to the boat this afternoon. \n\nAll of which means you're going to have to get out of the water...showing a giant boner in your wet clingy pants.\"\n\nEllen's little sex talk wasn't rapid fire. It was slow, measured and delivered with a coy face and a tone that was as sultry as hell, as if talking me though her movements; especially as her words encouraged her to jerk and dance her crotch more forcefully against me. And she was right. The mental picture was doing my head in. Her clit is well above average in its prominence and there's been times I've been quite content drawing her up onto my haunches as I knelt between her legs and watch the action as I've brought her to a climax by doing nothing more than bending my erection down to flick the tip of it against that swollen nub of hers. \n\nOf course when we do that on a bed, her climax is usually followed by me throwing her back down on the bed and going the animal on her (to use an expression coined by Ellen). There was no way that was happening here. Ellen was effectively transferring her frustrated randiness to me in all of this.\n\nEllen brought her lips against mine and thrust her tongue into my mouth while rapidly micro rocking her crotch against the point where my manhood speared firmly into her crease. Since I was the one completely responsible from keeping us both afloat and safe from drowning, there was little I could do while she used my body to pleasure herself against except keep on kicking towards shore like I had been all along; although, now as I kicked, I threw my hips forward a bit in a sort of thrusting movement.\n\nEllen hadn't been kidding about her state of arousal. I could soon feel her legs quivering; a sure sign for her of an impending climax.\n\nHer thighs tensed and she hummed into my mouth as she came, then circled her crotch against the tip as she prolonged her orgasm. After relaxing her head back; leaving it floating with the water lapping nearly over her face, she looked up and around to see how far we were from shore. We were very close to the breaker line. Already the rise and fall of the swell had become more pronounced as the waves entered shallower water.\n\nThen she reached one hand down and circled my sheathed shaft starting to jerk it.\n\n\"Do you want me to deflate this thing or are you going to come out of the water with a boner?\"\n\nI grinned at her.\n\n\"After what it's been through in the last 24 hours, I don't think it's going to deflate under a hand job any time soon. I might just let you take the board ashore and do a quick lap of the beach.\"\n\n\"So, embarrassed to show a boner are you?\"\n\n\"Yes, I'm not a teenager any more. I'm supposed to be able to keep it in my pants by now.\"\n\n\"Well then, you'd better stop playing with girls half your age, hadn't you?\"\n\nI raised my eyebrows...\n\n\"Is that what you really want?\"\n\nEllen smiled and give me a kiss on the cheek.\n\n\"Alright, I'll take the board ashore. Don't perve at all those cute bikini butts in the water as you swim past face down though, or you'll never get ashore.\"\n\n25 metres of swimming up and back was enough to bring my manhood back to a reasonably flaccid state; letting me join the others on the beach.\n\nComing ashore in the little protected corner of the beach where it turns from running South to running out to the East, we didn't even bother drying ourselves before getting some small change to go up the short path through the coastal scrub to the outdoor counter of the Beach Caf\u00e9 itself for a morning fix of Cappuccinos, chocolate and ice cream - all the things you can't get on a yacht travelling through the tropics. \n\nBikinis and swimwear generally was nothing unusual at the outdoor counter of the caf\u00e9. Even my wearing of my speedos there only just met Ellen's rather brutal 50/50 rule for the wearing of them; not more than 50 metres from the beach and only allowed to be worn by an old duffer over 50. Mind you, my experience is, with the passing of years, they're becoming less commonly seen and the acceptable distance from the beach grows seemingly shorter.\n\nConversely, as common as bikinis still were, very clingy, dripping wet bikinis as small as the ones the girls were wearing and each with their nipples on high beam were, let's just say, somewhat rarer. Once again, I found myself at the centre of an attractive group of mostly tall women attracting the gaze of every male within viewing distance; with several trying their luck at hitting on them.\n\nAs before I was assuming our tight little cluster was being mistaken for a family; Liddy and me as parents with Amy, Ellen and Tash as the daughters. A few suitors took the family friendly approach of sidling up to their chosen girl while she was well within the group and engaging them in seemingly innocent conversation in the off chance it might lead somewhere. But more often, you could see the young studs circling the pack, trying to isolate out their chosen prey, and from what the girls told me later, they weren't lacking in directness when it came to making their intentions clear. Probably a function of the density of the backpacker influence in the area who, I'm led to believe, treat a place like Byron as one big fuck fest. \n\nBut the family thing didn't stop even Liddy being hit on; or at least chatted up by a male a good decade younger than her, while the rest of us were swimming after the caf\u00e9 trip.\n\nEach of the girls has a different reaction to the approaches.\n\nAmy bathes in the male attention, but expects it to come without her having to seek it other than by them being turned on by her fuck me clothing; and always from the point of view of her being in the safety of the herd. Given her past, she likes the ego boost she gets from the fact guys find her attractive and even the fact they want to have sex with her. After all, in a way, that's how this whole group sex thing on the boat got started. But she makes sure she basks in that affirmation without the slightest risk of that having any adverse outcomes for her. If a suiter is over-persistent, she simply retreats to the safety of the inner circle of her protective 'family'; no need to argue with them or even be any more impolite than simply ignoring them.\n\nEllen is more gregarious. She likes to engage people and enjoys a good banter and is body confident; but where males are concerned that makes her an outrageous flirt and prick teaser, even if she's not always entirely aware that's what she's doing. But in the end, even if she might judge a guy 'cute', she has not the slightest intention of a follow up, which does make the possibility of a misunderstanding more likely. \n\nIf they become over persistent, she tries to cast them off nicely, but if they turn nasty, she can stand her ground and give as good as she gets. I heard her deal with some guy with an Irish accent with the final words...\"Mate, just piss off.\" She explained later, he came on with nothing more subtle than a 'how about a fuck' and simply wouldn't take no for an answer, becoming increasingly hostile as she tried to bat him away.\n\nUnlike the other two, Tash is open to the potential of more than a superficial engagement with another male - if you get my drift - but because of that is much more fussy who she engages with. Let's face it, when you're as voluptuous and under dressed as Tash, you're likely to attract a certain type of male and that's not always the style she's looking for.\n\nSo whereas Ellen and Amy have somewhat prolonged engagements with others, Tash's tend to be short. To put it brutally, the guys is sized up and - more often than not - discarded, before he's much passed his opening line. And flying out this afternoon as she was, her criteria for engagement on that morning seemed to be fairly narrowly defined.\n\nSome time in the water working up an appetite followed our morning snacks; a mixture of board riding and body surfing, as our only two boards were shared around. Liddy, on the other hand, spent most of the time on the beach; only going in for an occasional cooling dip before coming back up to sun herself again.\n\nAround midday we all collected on the beach; giving us some time in the sun for our swimwear to dry before they were covered with the clothes we'd be wearing to lunch. Because, as nice as the food and as beautiful as the setting is, the Beach Caf\u00e9 is very much in that 'throw something over your swimmers' style.\n\nOf course, since she was flying home afterwards, Tash went and changed properly into dry clothes; emerging in a pair of leggy shorts and a tight fitting t shirt. Maybe it was lucky Australian airlines generally don't get as puritanical as some overseas ones. The rest of us just threw on our overclothes on the beach.\n\nLiddy wore a more causal version of her usual mini sheath dress with spaghetti stringed shoulder straps and no shortage of cleavage; even more prominently displayed when she slipped her bikini top from underneath.\n\nEllen's outfit was the same as the one she'd worn to lunch on Bora Bora. It was a very pale blue, loose fitting, crop top with a deeply curved sweetheart neckline matched with her 'A line' micro mini skirt. With her bikini top also slipped off, the top exposed the bare flesh of both the top and bottom of her breasts; the top down the front of the neckline and the bottom as an underboob under the bottom edge of the very high cropped garment. \n\nIt sort of gave the impression her breasts could fall out either the top or the bottom at any moment. Had she had anything larger than the tidy perky b cup breasts she had, you would have half expected her nipples to sag under the lower hem. As it was, the way her breasts bounced inside the top was quite provocative. \n\nBut what really made the top such a tease was the fact that its loose fit and cut away profile told you that merely standing in the right place was likely to offer a down blouse view of her naked breasts; something male waiters or the males who tried to chat her up never seemed to fail to notice.",
        "But, maybe not surprisingly, Amy was actually the one with the ultimate attention catching outfit. It was a long, white, linen, very simple halter neck dress. If the dresses Amy and Ellen wore to the Byron at Byron the previous night were of a 'starlet, formal, red carpet, front page picture guaranteed the next day' style, this was a hippie version of the same idea. And in that sense, was right at home in Byron.\n\nThe backless, string tie neck led to a couple of small triangles, providing barely adequate modesty to the breasts they draped across the front of, rather than wrapped around or clung to. The triangles were merged into a frontpiece that itself draped down to join the waisted skirt part of the dress at her hips. From there the dress flared out into a very floaty skirt, split on the sides to her upper thighs, that reached down to her ankles and wrapped themselves seductively around her legs as she walked; more so when we got out into the wind. \n\nIt was extraordinarily flattering to her beautiful figure. Because the waist band carried the weight of the dress, the hang of the upper part of it was quite loose. The triangles didn't so much embrace her breasts, but hung across the projection of them; like a piece of paper might. That meant from the side her breasts were basically unsupported and fully exposed in profile; only her nipple barely lost in the material and even the edge of those were visible from some angles when their initially cold wetness as she first pulled the bikini top out from underneath it caused them to fully jut, pushing the triangles out even further. \n\nThe loose front piece also meant that side view gave a wonderful perspective of her flat stomach and slender body.\n\nTo cap it, her wet bikini top had dampened the material of the triangles covering her breasts, causing them to go translucent and show through the colour of her jutting nipples until it finally dried half way through the meal.\n\nAll of which meant the girls attracted no less attention as we moved up to the caf\u00e9 and lined up outside to be seated at our reserved table. I was standing innocently at the front of our group talking with Liddy to the lady in front of me in the queue, when I turned around to find Amy, Tash and Ellen surrounded by five topless guys who I'd guess to be about 30, Australian and with an impressive surfer's build and just bought milk shakes in their hands. Oblivious to my presence, I could observe them unnoticed as I watched them interact with the girls.\n\nThree of them were clearly positioned to take advantage of the intimate view the girls' clothing offered. One was standing just over Ellen's shoulder and you could just about see the eyes pop from his head as the slightest lean forward by her opened up the view down her shirt and across her naked breasts. And from time to time you could see the two standing either side of Amy lean back just enough to admire the side view of her breasts and lower torso. I could see the boardies on the guy my side of Amy showing clear signs of his partial arousal. The eyes of the fourth was clearly captivated by the front view of Amy's cleavage, while the fifth seemed to be focusing on chatting up Tash.\n\nBut as much as Amy's exposure was attracting the visual attention, it was clear Ellen was dominating the conversation. It was she they were mainly directing most of their talk to and she, much more so than Amy, responding.\n\nShe caught me observing the group and flashed me a wicked grin and a wink.\n\nEventually we came to the head of the queue of people being seated and the girls broke away from their persistent suitors to follow us to the table; one by a beach facing window with a view over the bay and our yacht anchored serenely in it. Mind you, it did make me realise how publically the yacht was moored. From this elevated position, the state of dress or undress of any of us in the cockpit could be keenly observed, as could any shenanigans happening on deck during daylight hours.\n\nLunch was a riotous as the dinner the night before had been. Even though Tash was leaving us, the mood was one of celebration of what we'd shared, not of loss; with many amusing stories of past episodes repeated, many of them with me the butt of playful jokes. It certainly turned a bit ribald at times and there could have been little doubt in the minds of those around us that the yacht was a place of unconventional sexual arrangements. While, in the interests of minimising the imaginative response of those nearby, I might have been inclined to play a straight downbeat face to such talk, the girls were having nothing of it. If I played a dead bat to a comment, it would only encourage the others to tease me more - with twice the volume.\n\nWhile the lunch went as long as it could, in this case the time was subject to a limit. We needed to be at the Byron bus terminal by 3.15. Running a bit late, as we walk quickly up there, we said our goodbyes to Tash. She may not have been as deeply involved in the sexual relationships on the boat, but she was very much a key part of the group. Young, playful and free spirited it was often Tash who pushed us along to make the most of our time anywhere; maximising both the experience and the fun we had enjoying it.\n\nAnd so, in the end, there was a tear in most of the girls' eyes as they gave a final hug and kiss on the cheek as she boarded the bus.\n\nThen it was back up towards the Pass for some more swimming and surfing. Or so I thought. Leaving Liddy spread on a towel sunbathing and Amy and Ellen with a board in their hands seemingly heading off for a surf, I started to jog towards the water to bodysurf, only to suddenly find Ellen jogging alongside me. Happy to have her company, I challenged her to race me to the water. It was a draw, but as we dived in, there was no doubt she got there with less effort than I'd expended to keep up with her. I was panting heavily and she barely breathing any faster than normal.\n\nWe swam out the back of the break to where I stood up to wait for a suitable wave. Ellen came up alongside me and put her arms around my waist from behind to whisper in my ear...\n\n\"Let's go out to the yacht.\"\n\n\"What about the others?\"\n\n\"They know.\"\n\n\"Is this another ladies' room arrangement?\"\n\n\"What do you think?\"\n\nAs she said that, Ellen slipped the hand around my waist downwards to cup my manhood, causing it to engorge within her grip \n\n\"I think I've been set up again.\"\n\n\"Any complaints?\"\n\n\"No.\"\n\nI slipped my hand behind my back and pressed my open palm firmly into her crotch as I added...\n\n\"Although sometimes I feel like I'm just a body in a slave market the way you girls trade me around.\"\n\nEllen slipped her crotch up and down my hand as she punned in reply...\n\n\"I'm not sure what that's got to do with what you're actually feeling. But anyway, we do it in the most loving way. Come on, let's go.\"\n\nShe released me from her grip as she turned and swam powerfully out towards the yacht. I followed closely enough behind to be able to watch her cute butt as her legs kicked strongly with every stroke; even though the erection in my swimmers caused a significant drag through the water.\n\nFive minutes later I found myself being patted dry by Ellen as she towelled me in the cockpit and I towelled her in response. As I stood there with a raging erection in my clingy wet swimmers, pat drying Ellen in the most intimate of spots, I was painfully aware of the grandstand view of the yacht we'd had from the caf\u00e9. As soon as we were no longer actually dripping, I suggested we go below.\n\nFollowing Ellen down the companionway steps, I found her standing on the floor towel we spread out at the base of it, waiting for me. Even as I was still descending the step steps, hands over my head balancing myself with my usual grip on the companionway hatch, Ellen grabbed my sheathed erection, bent it forward and opened up an access path to slip her other hand inside my swimwear and pull the bow which tied off the waist string.\n\nAlmost as soon as my feet were on the floor, Ellen was kneeling at my feet, pulling my wet swimmers down and off my feet. Then she bent my erection down again to slip it into her mouth.\n\nTaking in about half its length she alternatively sucked it and slid her lips up and down it a few times before taking a prolonged suck. Then, staring up at me with a cheeky grin, she withdrew it and started licking it like I saw her licking the ice cream cone earlier this morning.\n\nAll I could do was stare down, running my hand first through her dripping wet hair, then down across the face of her breasts where her nipples were jutting on high beam pushing out the material of her bikini top.\n\nI lifted my head up and moaned in pure pleasure as she suddenly thrust it back in her mouth and started deep throating me. With my eyes closed and my head lolling with the ecstasy of her fellatioing of me, I fumbled as I tried to pull the neck strings of her top to let me start undressing her. Finding them and pulling the bow, I slipped my hands across her breasts again as I pushed the material off those beautiful orbs.\n\nEllen and Amy give oral unlike anything I've had before. Actually, if the truth be told, there wasn't that much before them. Louise did a little, but nothing like the full length deep thrusting that the girls do. Louise did little more than lick the paddle pop compared to the eating of the sav whole that Amy and Ellen do.\n\nI don't know how they manage not to gag.\n\nBut it's also the case it doesn't happen much. When you're trying to service three or four women, a quick cum shot over their face is a bit of a wasted erection, if you get my drift. And even when they get me alone, like now, they're usually wanting a bit more quality time than a blow job offers. And to take the cum internally.\n\nHad my balls not been so drained over the last 24 hours, I might have shot my load there and then. Even so, she all too soon had me brewing up. I had to call a halt to it, slipping my hand under the fall of her hair and moving it slightly upwards. She took the hint; rising to her feet and pushing her body against me.\n\nI quickly took the opportunity to pull the lower tie on her bikini top and get rid of it.\n\n\"Didn't you like it?\"\n\n\"I liked it too much. Things were going to come to a rather quick end.\"\n\nShe raised her eyebrows at me...\n\n\"Don't you want to cum on my face?\"\n\n\"I think you might like something a little deeper than that.\"\n\nI had meant it emotionally. It was only as I said it, I realised there was an alternative meaning to that. I wasn't really sure which meaning Ellen took, but she hugged tightly against me; her head buried against my upper chest.\n\nI started to tug at her bikini bottoms; the only item of wet clothing still between us. Getting them down to her knees, Ellen shook them off the rest of the way. Then, grabbing the towel I'd left hanging on the companionway coaming as I'd come down the stairs, I dried the still wet patches on her body.\n\nTaking her hand, I led her into the master cabin. Yes, I could have just bent her over the galley or banged her on the navigation table; all of which I'd done before. But you didn't need to be that perceptive to recognise Ellen didn't drag me out to the yacht early and alone for a hot and passionate quickie. Whatever this was about - other than the sex itself - required some intimate time and I suspected, plenty of it.\n\nOur bodies were still quite damp, so I flipped a bath sheet we kept in the room, for just that purpose, over the bed to absorb the worst of the water and salt, then held Ellen's hand as she climbed on the bed and laid herself down on it. Laying down alongside her I held the full length of her body against mine; my erection surging into her stomach as the cold, clammy, jutting buttons of her nipples pushed into my chest.\n\nEllen forced her leg between mine, bringing her crotch firmly down on my upper thigh, before cupping my face in her hands and kissing me all over it while rocking her crotch on my thigh. I was quite glad she didn't go for an immediate penetration. My brewed up balls needed at least a few moments of down time to let me be sure they'd been reset to neutral before things started again, or I was still at risk of being premature.\n\nI could feel my thigh get progressively wetter as her arousal grew. It wasn't long before she rolled half on her back to separate our bodies momentarily before holding my shaft and guiding it into her sex as she closed the gap between us again. That left me half over her as I looked for leverage to complete my penetration of her and push back against the downward force she was applying.\n\nMaybe instinctively, maybe because she thought my half over her position was read as a desire by me to be on top, she tried to complete the roll onto her back. Instead I resisted enough with a pull back the other way to induce her to come over the top of me; leaving her full weight on top of me. That at least left her in control while I worked out what she really wanted from all this; because I figured in some way this was really a continuation of last night and Ellen's unsettled reaction to being nearly home.\n\nPushing hard enough down on me to make sure I was deeply penetrated, to the point I could feel a shearing force on the base of my shaft, Ellen again cupped my face and kissed it all over, stopping from time to time to penetrate my mouth with her tongue.\n\nFor want of something better to do while I waited to see where this led, I brought my hands up to play with her nipples; responding to her affection by offering what I could while pinned under her.\n\nAs Ellen started nuzzling my cheek, I decided to test the waters. Some might think me foolish. A young woman wants to play sexual games with me; why try and read anything more into it? Why risk interrupting the whole thing with a deep and meaningful conversation that can go off the rails at any moment and end the sex? Good questions. But when you know and love someone, sometimes there are things more important that the here and now of the prospect of wild sex.\n\nI groped for a neutral question to start the conversation...\n\n\"Did you have a nice lunch?\"\n\n\"It was lovely. A beautiful view and great food. I thought everyone had a really good time. Pity Tash had to leave us though.\"\n\n\"Yes, but you know Tash. She's a woman of her own mind. Like you all are actually. You girls seemed to attract a lot of attention from the male population of the town.\"\n\n\"Were you jealous?\"\n\nThat caught me off guard. What the hell is the right answer to that question? 'No I don't give a damn about you' or 'yes I'm an overpossesive obsessive who doesn't like you talking to anyone'. I should have just said 'a little' but I squibbed it. The reality was much more nuanced than that. The thought of losing her always hurt, but that of screwing up her life hurt more.\n\n\"Should I be?\"\n\nEllen sensed she had the upper hand and wasn't going to let it go...\n\n\"That depends. What might make you jealous?\"\n\nThat wasn't a question I was going to answer honestly. I'm only human; seeing her enjoy the company of another eligible male too much was going to pull some strings of jealously in me. But I didn't want that stopping her from do it. I went to the extreme... \n\n\"Anyone you found you had the hots for?\"\n\n\"You're the one I'm in bed with the hots for.\"\n\nI sensed a vulnerability... \n\n\"That doesn't answer the question.\"\n\n\"Maybe it's better left unanswered.\"\n\nSo, as I guessed, being brought out to the yacht for sex did have something to do with the whole end of trip thing; another manifestation of how unsettled Ellen was by it and more so as she found herself surrounded by attractive guys more her age. If she wanted to talk about something, I figured the scene had been set for it. I let the silence settle as Ellen rested her head down alongside mine...\n\n\"Ned.\"\n\nI stroked the back of her head as I answered...\n\n\"Yes.\"\n\n\"Do I have to leave you before I start dating another guy?\"\n\n\"Ellen, you don't have to leave me until you want to leave me. I suppose we should probably stop sleeping together before you sleep with someone else, but even there I'm maybe just applying old fashioned rules. You can decide; although the quarantine rules would apply.\"\n\n\"No, I think I'm someone who only wants to sleep with one guy at a time. Can I come back if it doesn't work out?\"\n\n\"The short answer is yes. But you may not have actually moved out you know. I don't intend to kick you out of the house just because you're not sleeping with me; you'll just have a room of your own. I suppose, as we talked about yesterday, the key is we separate on good, loving terms. We're not separating because one of us is rejecting the other; only because that's really how it has to be in the long term if we really love each other.\"\n\n\"Will you miss me if I go?\"\n\n\"As I said yesterday, it will devastate me; but that doesn't mean I don't want to see it happen. You're very special to me. I will never be treated to another relationship with someone like you again in my life.\"\n\n\"I'll be devastated too you know Ned.\"\n\n\"Maybe. But in a way, only because I love you, I'm hoping you'll be so deeply in love with someone else, you'll barely notice.\"\n\n\"No, it's not going to be that easy.\"\n\nEllen put her head back down next to mine.\n\nAfter a few moments, she lifted her whole body up on her arms and knees, letting my erection flop down onto my stomach as it slipped out of the state of penetration we'd been in.\n\n\"We need some music.\"\n\nI watched as she sashayed her naked body out of the cabin. The girls might have most of their music collection on their phones; but Ellen's was still ashore. Being an old fart, much of mine was on CD's; played on a CD player in the main cabin. I heard her rummaging about before the sound track to Dirty Dancing came on.\n\nShe came back into the room and settled back down on me; reintroducing my unsoftened manhood into her sex as she did...\n\n\"That's better.\"\n\nEllen's wondrous long, blonde hair draped down to either side of my head, closing my field of vision to the beauty of her face. I felt her bring her legs together, tightening herself around my shaft. With her eyes half closed and softly singing along to it, Ellen dirty danced her hips and upper body against mine in time to the music. It was more than an undulation, more rhythmic than mere squirming. It was actually incredibly sexy. Her pelvis thrusted and swayed, rocked and rolled as she brushed her breasts across my chest; occasionally her head stopping to kiss the side of my cheek.\n\nI just put my arms lightly around her and enjoyed the ride.\n\nI've always loved dancing, but never done it like this before. Horizontal folk dancing at its best!\n\nI tried joining in the dance to encourage her. But with the friction of my body against the bunk and Ellen's weight on me, I could do little more than rhythmically thrust my hips up at her and use my arms in the most artistic, sensuous way my limited imagination and dagginess in such things could come up with.\n\nAs much as Ellen was dancing, she was clearing aiming for an erotic effect. I could feel her grinding her crotch in against my pubis and corkscrewing my shaft as it lay inside her body in a way I was sure was playing her prominent clit against the base of it. As her half singing of the words turned into humming and the humming in turn rose in pitch and became unsynchronised with the music I could also sense it was having the desired outcome.\n\nWhen the humming dissolved into heavy breathing, it was clear her climax was near. As she came, the dancing stopped and she squeezed her pelvic floor tightly around my shaft, released it and squeezed again several times until she was left moaning softly into the pillow alongside my head.\n\nWe lay there for a few moments until I felt her tipping us over; in effect signalling it was time for my turn.",
        "With my legs outside hers, I took the weight of my upper body on my elbows as I longed thrusted her; moving my chest against her nipples as I went. Rather quickly I could feel my balls starting to boil up again. Her early bringing me to a near climax and the long slow dance to her own was coming at a cost. Determined to enjoy it, I increased the tempo of my thrusting as I grunted my way towards what quickly became a mind blowing orgasm; one that came with multiple powerful initial waves and a prolonged period of shaking and shuddering after climaxes as it seemed my balls took their time to go in search of every last seed in my body and sent them on individual pleasurable trips up my sensitive shaft to flood Ellen's cervix.\n\nIt left me groaning, head down alongside her.\n\nBut, in her own way, Ellen quickly made it know she was unsatisfied. Initially starting slowly almost as soon as I'd finished, she was soon going at me like a mad woman with forceful upward thrusts, a quiet little grunt signifying every one of them. It seemed that even in the brief period it had taken me to find my climax, I'd stimulated her enough for her to rather urgently want more. \n\nThis was starting to turn into a repeat of this morning's adventures with Tash. To horribly mix metaphors, to stop her from trying to flog a flaccid horse, I rolled her on her side and then over on her back, making it clear I intended to finger her. Ellen lay there trustingly, flat on her back, legs apart, as I brought my head over her chest to suck her nipple and my hand into her crotch.\n\nHer beautiful clit was easy to find; engorged, wet and slippery, I could almost feel it throbbing to my touch. Ellen hummed a little as I started to play with it and I could easily have finished her by doing nothing more than that.\n\nBut I figured by now her g spot would be fairly worked up too; so I did my usual things of bringing two fingers into her sex to rake across it. That soon had her legs quivering on the threshold of an orgasm.\n\nEllen had complained playfully that morning that I'd never given her the sort of seizure orgasm that Tash had experienced. It wasn't for lack of trying in the past. I'd not infrequently tried on Ellen - and Amy for that matter - exactly the sort of technique that set Tash off. But everyone's different and what works for some doesn't necessarily work for others.\n\nBut Ellen was well worked up and I thought I'd give it another go. When I thought she was mere moments from her orgasm, I changed the way my thumb was playing against her clit from a rubbing movement to a rapid flutter of its tip against the tip of her clit. With Tash the reaction is almost instantaneous. Just as well because fluttering your thumb while still rubbing her g spot is a bit like patting your head and rubbing your tummy at the same time. Not easy.\n\nEllen wasn't going to give me that break. Clearly it ramped up her arousal - a lot. But for a few moments I was left trying to multi task; I suspect only partly successfully, in that I may have started fluttering the edge of my fingers on her g spot as well. But, whatever, it finally worked.\n\nWith a sharp intake of breath and an enormous and sudden muscular jerking of her hips into the air and a massive squirting, Ellen came. This was no graceful slow arch up of her back and swaying from side to side that might be associated with one of her normal orgasms. It was fast, almost violent and followed by a deep groan. With my head over her chest and my fingers still inside her as it happened, the movement felt as though it had nearly dislocated my shoulder.\n\nJust as quickly, she dropped her hips back onto the bunk and threw them up again with another mini squirting and an even deeper groan.\n\nUnsure whether to stop the stimulation or keep it going, I keep rubbing her g spot - staying in contact with her clit being nearly impossible as she moved about. Five more times, in rapid succession, her body spasmed into the throw hips posture; although it seemed after the second, the source of the squirting had dried up.\n\nEllen ripped my hand from her body but still held my head to her chest and just lay there shaking; her whole lower body vibrating like it was being thrown about by a powerful earthquake. Finally her constant moaning stopped long enough for her to talk...\n\n\"Oh my god... I think you've broken my vagina. Where the hell did that orgasm come from?...It was a fifteen on a ten point scale. Oh shit...\"\n\nShe fell back into a moan as her body shook again.\n\nRolling in her side towards me, she held me in a tight embrace as she kept shaking with an occasional moan; not talking ,just holding me, seemingly unable to do anything else. She kept that up for a good five minutes before her grip on me relaxed and she flopped down on her back again before breaking into a fit of the giggles.\n\nI eased myself off the bunk; offering her a hand to get up too...\n\n\"Well, you asked for it. I hope it's what you wanted.\"\n\n\"Oh god Ned, that was like, wow. Way better than even the hypoxia ones.\"\n\nShe took my hand but as she used it to lever herself up, immediately let go and dropped back on the bed...\n\n\"I can't get up. There's no strength in my body and my back and upper legs hurt like hell.\"\n\nShe giggled...\n\n\"I think I'd better do stretches before we try that again.\""
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-41"
}