{
    "title": "Keep It in the Family Pt. 10",
    "pages": [
        "Chapter 10 - My brother's wife, daughter and sons\n\nI couldn't believe it when I got downstairs and Jade and Tony told me they'd been banned from the online site Jade was using, because she'd got her brothers to fuck her on camera. Not that they'd been banned for what appeared straight up fucking, but because Jade had been foolish to let everyone know it was incest, and she was lucky not to be prosecuted.\n\nI'd invited all my brother's family over, partly just to meet his wife and sons, but at least as much to celebrate Becky becoming a full-fucking member of the family. Luckily, Chrissy twin sons and my twin daughters, as well as my older son Michael, were able to join us for the weekend. Not only that, but I'd invited my parents down to join us for the first time since I'd persuaded them to join the rest of the family incest circle, when my son and I had fucked both my parents and my paternal grandparents. They hadn't seen Brian and his family for a couple of years, and neither my sister and her daughter and sons, nor my husband, daughters or older son had met them since they changed their ways. I was looking forward to a full-scale family orgy over the next two days!\n\nChrissy's boys, Michael, and my daughters were still asleep. Well, in bed at least, though I hoped they weren't going to wear themselves out too soon, given the exertions that were anticipated, Chrissy, Jade and I decided we'd go out for our run as usual, leaving Tony to wake the others and get breakfast.\n\n\"You realise this is probably the last time we'll be wearing bras for the next two days,\" Chrissy said, making us laugh as we dressed for the run in sports bras, and smooth, modest panties under our shorts and T-shirts.\n\n\"Or panties,\" Jade added.\n\nShe was right, or course, but we'd learned the hard way that a good run really hurts your breasts if they bounce up and down without proper support, and even worse, the seam of your shorts can rub your labia raw without something soft holding them out of harm's way. As we ran, we tried to think of ways of helping Jade keep her craving for sex under control, now she wouldn't be able to perform on line, but apart from asking the rest of the family to use her as often as they could, we couldn't think of much. Although Chrissy and I were always happy to fuck her, and we could probably rope in Elizabeth and her Aunt Ingrid, men were in much shorter supply in the daytime, especially on weekdays when all our sons were at college.\n\nWhen we got back, we only just had time for a quick shower and slice of toast before my brother turned up with his family. Part of me would have liked to have started the fun while I was sweaty from the run, but Chrissy persuaded me that as it was the first time with Ingrid, Becky, Bjorn and Lucas, we should start a bit more modestly. Not that the shorts and T-shirts my husband and Chrissy's and my sons were wearing were exactly modest, except when compared with the baggy T-shirts my twin daughters, Chloe and Lucy, were wearing. Their nipples were constantly poking hard against the thin fabric, and as they moved around the bottoms rode up, giving us flashed of their beautiful pink cunts and asses.\n\nNot surprisingly, they immediately caught the eyes of my brother and his two sons, let alone their father, Charlie. Obviously Chloe and Lucy were going to see a lot of action over the weekend, and if it hadn't been for my brother's family arriving, I would have gone over and fingered my daughters' vaginas before anyone else got to them. \n\nI liked the look of my nephews, Bjorn and Lucas, who I hadn't met before, but who had massive bulges in their pants after my daughters deliberately flashed their bits at them, and pushed their tits against them as they kissed them hello. I don't know where my daughters got this forward behaviour from, I'm sure! At the same time, Brian's wife, Ingrid, was stunning. Tall, slim, and blonde: a classic Viking goddess. The image of her standing in the prow with her breasts pushed forward, as fifty Vikings rowed her longship forward flashed through my mind. I could see where Becky got her looks, though she was not as tall. She herself looked confident and radiant, and as if she was looking forward to what was going to happen to her, having only lost her virginity little more than half a day earlier.\n\nThis all gave me a major problem. There were just too many of my family around me. My pussy was leaking like mad, and I just couldn't get my brain to think about anything except fucking everyone, men and women, in the room. To make matters worse, I just couldn't decide who I wanted first. Not only that, but I could see the same look of bewildered, but intense lust on everyone else's faces as well. Even Jade, who normally had no hesitation picking someone to fuck her, looked hesitant.\n\nFortunately, as I tried to kick my brain in gear, and try to organise some introductions between the majority of the people who hadn't met before, my parents walked in. I'd never seen my mother dressed the way she was: a white cotton blouse that was so sheer I could clearly see her dark nipples underneath, and a skirt that was little more than a long belt. Shit, she looked fantastic, as did my father in a more traditional way, and I felt my cunt leaking some more, and my brain get even more confused, as I remembered how much I'd enjoyed fucking the two of them a few weeks earlier.\n\n\"Wow, what a fantastic family gathering!\" Dad said, as he walked in and saw everyone looking at him and Mom.\n\n\"Well, don't just stand there with your mouth open, Susan. Aren't you going to introduce everyone?\"\n\n\"Oh, yes, Mom, but wouldn't you like a coffee or something first after your journey?\" I managed to stutter out.\n\n\"Don't be silly, Susan. We stopped not far away overnight, and what I'm looking forward to now is a good fuck with everyone in our wonderful looking family. Come on, introduce everyone, Susan. But don't you think we'd get to know each other faster if we took our clothes off? I haven't seen you so reluctant to get your tits out since you and Christine got breasts before the rest of your class, and you wanted me to write a note to school to get you off of showers.\"\n\nEveryone burst out laughing, including my traitorous sister, while I just blushed, and felt as stupid and humiliated as I had when Mom told me off when I was a kid. Shit, here I was aiming to be the slut of the family, and it was looking as if I couldn't even organise an orgy in the Lewis family, which was even worse than not being able to organise a piss-up in a brewery, as the old saying went. Dad saved me, however, as he often had in the past, though this time not quite in the same way.\n\n\"Hello, Susan. Don't take any notice of her, she's just impatient to get a new cock up her,\" he said softly, then as he kissed me, he pulled my hand down to the zipper of his pants, and he undid the belt on my dressing gown, which was all I'd put on, pushing it off of my shoulders, leaving me naked in front of him.\n\n\"I'm really pleased to see you, darling, as you can see, can't you?\"\n\nI certainly could, because my father's prick was stiff, and pushing against my pussy. I wanted to take it in my mouth, or better still to guide him into my vagina, but the sight of everyone else shedding their clothes finally got my brain working. I realised that with so many holes and cocks available, it was going to be chaos if no one took control. In the worst case it might mean I'd miss out on fucking everyone in the room, and there was no way I was going to let that happen.\n\nI almost lost it again, though, as I looked around at the sixteen naked bodies in front of me, with stiff cocks, nipples, and cunts on display. If I thought Ingrid looked good clothed, she looked so much better naked. Her tits were like torpedoes, jutting out from her chest, with no sign of any sag at all, and she had large, pale pink areolas and long, stiff nipples, which were pierced, and had large golden rings dangling from them. Like her daughter, Becky, she had neatly trimmed blonde pubes, and I could see pale pink labia hanging between her legs, even bigger than Becky's. \n\nIt was fascinating how my Mom had the darkest nipples and cuntlips, and while mine and Chrissy's were only a little paler, both our daughters were a lot paler, and Ingrid and Becky were almost completely pink. I felt so proud of my wonderful family, and I wanted to fuck all of them so much, that I could feel my cum running down the inside of my leg. Then I got a grip again, and with one hand on my father's stiff cock, I put my arm around my Mom's neck and pulled her towards me, so I was just able to reach one of her tits with my other hand.\n\n\"Now, as you all know, this is my Mom and Dad. Without them, neither me, Chrissy nor Brian would be here, so nor would all of you, except Charlie and Ingrid, of course. As you can see, although Mom was responsible for most of us not knowing about the Lewis heritage of incest, now she's as much of a slut as the rest of us. I know that all of you are dying to fuck her, or to be fucked by your grandfather or father.\"\n\nThere was a murmur of assent to this from the others, who not surprisingly had already started to touch each other up.\n\n\"I'd have suggested that my brother Brian should be first to fuck Mom, as he has had to wait so long, but I have a different plan,\" I continued, taking my arms from my parents, and walking over to Becky. \"This is Brian and Ingrid's daughter, Becky, who is the youngest of anyone here. Aren't her tits great? Well, what most of you won't know is that since her 18th birthday, she has been working as my husband Charlie's PA. She knew what a cheating bastard he is, and how he loves young girls, so she was planning to blackmail him into giving her a better job, by filming her taking her virginity. Now, surely both her mother and father must have been in on it also. Well, last night I watched Charlie take the virginity of all three of her holes. I had her as well, and very nice she was too.\"\n\nThere were several gasps, not least from Brian and Ingrid.\n\n\"Oh, sorry Sis. But I couldn't use my position to get her a job she didn't deserve, could I? And Charlie always told me he wanted to find a genuine virgin to fuck.\"\n\n\"That's alright, Brian, and both Charlie and I enjoyed having your baby daughter, didn't we darling? However, when I found out about her plan, I made her promise that she would join in the family fun once she had lost her virginity. Half a day ago, she was a virgin, but by tomorrow another eight men will have been up her cunt, and seven more women will have eaten her. Impressive, even for a Lewis, eh?\" I said, giving her a kiss on the mouth. \"But it seems only fair that the first person to fuck her should be her father, doesn't it?\"\n\nI could see that pleased both of them, as my brother walked over to his daughter, pulled her to him with one hand round her butt, the other on one of her gorgeous pink nipples, and she used her had to guide his cock between her legs. Oh yes, Becky was going to be a real slut, that was for sure.\n\n\"That brings me back to two other men with a special role in my life. First, my older son, Michael, who blackmailed me into letting him fuck me, and started off this whole wonderful and unexpected period of my life. I think it fitting that he gets to fuck Mom first. But not on his own, though. Let me come back to my cheating husband, and his love of young girls. I love him, but put up with him only as long as he does everything I tell him when he is with me. How fitting that my Mom should show him the delights of the older woman, while he has to share her with his son. Anyway she's such a cunt, she deserves to be double-teamed first.\"\n\nI could see that pleased Mom. As she sashayed past me to grab her son-in-law and grandson, she gave me a kiss, and our breasts touched.\n\n\"Oh, Susan, I'm going to enjoy this,\" she whispered.\n\nI was well into my stride now, when I got a surprise.\n\n\"Alright, Chrissy, that's enough pretending you are me, darling. I'm Susan, and everyone loves a twin, so the next pairing is my lovely daughters, Chloe and Lucy, with Chrissy's twins, Jude and Jason.\"\n\nShit, I couldn't believe it, surely no one could get us mixed up? As I looked at Chrissy, though, it dawned on me that they probably could again, the way we enjoyed so much when we were young. All of Tony's training had now got her body back into as good a shape as mine, and without even thinking about it, we'd had our hair done in the same style. Not only that, but I'd let my pubes grow back again, so we both had a perfect triangle of neatly trimmed hair pointing the way to our cunts, but we both were shaved underneath, so our dark lips stood out. \n\nIt was all really so we could do the stripping routine as identical twins. Chrissy refused to shave completely, and in truth, I decided I preferred the furry look at a distance, though I wanted every detail of my cunt to be easily visible in the routine, so this was the compromise, and a good one at that.\n\n\"If Chrissy offered Mom something special to start, then I want to offer something equally good to my father: Chrissy's daughter, Jade. I bet you haven't had a nymphomaniac before, Dad, and I know you'll enjoy her. Of course, being slutty Susan, I've fucked almost all of you already, all except Ingrid and her two sons. Much as I want to have Ingrid, I'm just desperate to feel a cock up me, and have my vagina filled with spunk, so I want to get double-fucked by my two nephews, Bjorn and Lucas.\"\n\nI was annoyed when Chrissy first took over as me, but then I started to think how we could really have some fun again as twins. Swapping boyfriends was about the only thing we hadn't done when we were young, and I was beginning to think we'd lost out. However, I was also beginning to wonder who she was going to leave me with, and I'd figured out the answer was no one, the bitch.\n\n\"Hang on, darling, that's not fair. We'll share the boys between us, and after they've fucked me, they won't have any doubt that I'm Susan, the really slutty one. And of course, that leaves my younger son, Tony, the best fuck I've ever had, actually, to warm up Ingrid.\"\n\n\"For fuck's sake shut up and let's get on with it, whoever you are,\" Mom yelled, and there was a loud chorus of agreement from everyone else, who nevertheless had paired up as they were told.\n\n\"Alright, alright. But just one more thing. Please try not to leave too many spunk and cum stains around. If you need help cleaning up, please either grab Charlie on the spot, or there's a big bowl in the kitchen, and if we collect spare semen in that, I'll get Charlie to drink it down later.\"\n\nWas that too hard on him? Maybe, but the thought of helping him out with the bowl made me tingle. What more intimate thing could we share than drinking together the spunk from everyone in our family?\n\nAs I looked around, I could see everyone starting to engage in some form of incest. Hands were on cocks and tits, and slipping into cunts, and that bitch of a sister of mine had Lucas's cock in her mouth, while Bjorn was playing with her nipples. There was no time to waste!\n\nI went over and grabbed Bjorn, laughing as Chrissy squealed, as much as she could with her mouth full of cock, anyway, as he pulled on one of her nipples as I violently pulled him to me. I grabbed his cock and opened my legs, pushing it past my labia, and rubbing it along the inside of my slit, making squelching noises as it dragged my cum backwards and forwards over my clit.\n\n\"God, Dad said you were a slut, Aunt Susan,\" Bjorn gasped, and I could see from the look on his face that he was as keen to get his cock in my cunt as I was for him to do so.\n\n\"But did he say I was a good fuck, nephew?\"\n\n\"You'd have to go some to be better than Mom. She's fucking awesome.\"\n\nThat really pissed me off, and I couldn't let that pass without a reply, could I? I let go of his cock, and managed to find an arm chair. I fell back in it and spread my legs, hanging one over each arm, and then I used my hands to pull my lips apart, so that my nephew could see the sparkling orangey-brown of the inside of my cunt, and the deep pink of the inside of my vagina.\n\n\"Fuck your Mom,\" and believe me, I wanted to, but not yet. \"This is a proper technicolor, all-American V8 cunt, not like that wishy-washy pink battery operated pussy your Mom's got. Shove your cock up it, and feel what it is like to be in a real woman for once.\"\n\nI was pleased to see his pupils dilate as he gazed into my hole. if her colour down there reflected that of her nipples, which was my experience so far, at least, then her vulva must looked washed out compared to mine. It did. I looked over to where I'd last seen her and my younger son. He was laid on the floor, and she was knelt over him sucking his cock, her ass in the air. She had deliciously large lips, and best of all, they were the sort that tended to gape open all the time, so I could see inside her slit, which was as pale as I had imagined. Mind you, her hole looked inviting, and I wouldn't even be able to see her colour when my mouth was locked over her cunt, as I was going to make sure it would be later on.\n\nI forgot all about that, though, as Bjorn dived over on me, managing to get his cock straight into my hole without any guidance, and he locked his mouth over one of my tits as he started pumping in and out of me.\n\n\"Aagghh!\"\n\nFuck, his teeth were sinking into one nipple so hard that my whole breast felt as if it was on fire, and I almost thought he was going to bite the end off completely. Hearing me scream, and seeing the tears forming in my eyes clearly wasn't enough for him, as he started squeezing and pulling and twisting my other nipple as if he thought it ought to unscrew from my tit altogether. \n\n\"Take it bitch, I bet you can't take as much as my fucking Mom does.\"\n\nGod, I thought he might be right, as my whole chest felt on fire, and my tits felt as if they were going to explode. He moved back, and pushed my legs up, letting them drop back on to his shoulders. I knew this would let his cock go deeper into me, and on his first thrust, it rammed into my cervix, sending a ripple of pain spreading upwards to join the one in my chest. I looked into Bjorn's eyes, and saw a mixture of lust, and what looked like anger. \n\nFuck it, I wasn't going to let this kid no older than my elder son, Michael, humiliate me and make me give in. I spat in his face, and told myself that it was really pleasure not pain I was feeling. I wriggled around as he pistoned in and out of me, making my whole body move as his cock ran out of space in my vagina, and I managed to grab his balls as they slapped against my asshole. I squeezed hard.\n\n\"Aagghh, you fucking cunt!\" he yelled out, letting my abused breast fall from his mouth.\n\nI just looked into his eyes and smiled, not least because my teeth were literally gritted together as I used all my force to tighten my grip on his balls, so I couldn't have got a word out, and I tightened my grip still further. Did he give in though? He didn't, but bent his head down and bit even harder on my other tit, moving his hand to the already bitten one. I had a small victory when I dug my fingernails into his balls, making him gasp and release my nipple from his teeth, but he put his other hand back on it immediately, giving me no respite from the suffering my breasts were taking. \n\nHe gazed into my eyes, and I saw a grudging respect appear in them along with the lust and anger, but if anything, he started banging even harder into my cunt. It was clearly now a battle of wills, as I squeezed his balls harder, and he stretched and twisted my nipples even further. I knew if I didn't get him to come, one or both of us was at risk of getting hurt, as neither of us was willing to give in, so I started contracting my cunt muscles, trying to milk his cock with each thrust in and out of me.",
        "We carried on the same way for what felt like forever, and I really thought I was going to have to give in, and given he hadn't played with my clit at all, and I couldn't manage it without slackening my grip on his balls I didn't expect I'd come. However, I was wrong on both counts. I saw his eyes start to glaze over, and his balls seemed to pull up inside him out of my grasp, and I knew he was coming inside me. \n\n\"FUCK! FUCK! FUCK!\" I screamed, as silly bitch that I was, I came as well as I realised I'd won. \n\nI rolled around so much that my nipples slipped out of his grasp, wet as they were with his saliva. The pain as they stretched almost killed me, though it also set me off again, and I came a second time with his cock still in me. Bjorn prised my hand from his balls, and lay there groaning softly as his cock slid out of me, and for a while, I just had to lay there as well, my tits burning from the treatment they had had. Fuck, it had certainly been painful, and though the pain made my climax more intense, I wasn't sure it was something I'd want to repeat. Not often, anyway.\n\nAs soon as I gathered myself together, I looked around, just in time to see my older son come in my Mom's cunt, and my husband in her asshole - of course. I was delighted to see the smile on her face, so I knew she must have enjoyed it. Charlie had obviously taken my training to heart, as he immediately started to clean his and his son's spunk from her holes, making her come again even as I watched. \n\nI could see that my brother and his daughter were kissing, and I assumed that he'd already come in her, and they were looking at each other with that deeply dual loving way of a parent and daughter who had just fucked, that I recognised from when Charlie had fucked our own daughters. \n\nThen, as I was starting to get up, wondering who to fuck next, I saw my sister walking towards me, spunk dripping from her cunt, holding on to Bjorn's younger brother, Lucas, by his sticky cock, which was also dripping on to the floor. When I looked more carefully, her nipples looked red and swollen, and she had a fabulous bite mark on one of them, which was certain to colour up in a few days.\n\n\"This little fucker liked it rough, and he blamed his Mom, so I guess his brother was the same, Sis. Ah, yes, you look like Rudolph the red-nippled reindeer, darling!\" she said, laughing as she saw my tits had suffered as well.\n\nNow my climax had dispersed, I was just left feeling angry. I know there are people who enjoy pain, but I'd never really been one of them, and though I could have said no, I almost felt as if I'd been raped. Not the fucking, of course, but the way the boys had decided to treat me and my sister the same way as their mother, without even asking if we liked it that way. I suddenly had an idea how we could teach them a lesson, while still enjoying ourselves.\n\n\"Yes, but unfortunately, we haven't got our S&M gear down her, darling, have we?\" I replied, winking at my sister. \"Let's take the boys upstairs, and then they can show us how much better is it to get fucked with real pain, darling.\"\n\nI'm not sure if she just trusted I knew what I was doing or, more likely, with that mysterious twin telepathy she had got to the same idea, but Chrissy followed me and the boys upstairs.\n\n\"How about a bit of bondage?\" I asked, getting out three sets of handcuffs from the toy drawer in the bedroom, which was full of Jade's overflow, after she'd bought a huge range for her online performances.\n\nThe boys started to look puzzled as Chrissy and I cuffed them together, then cuffed their outer arms, leaving them dangling.\n\n\"Have you never played this game before? It's great. Lay on the bed, and then let us each get on top of one of you.\"\n\nThat seemed to reassure them enough that they got on the bed, and let Chrissy and I straddle over them. They probably thought we were going to let them stick their stiff cocks straight up our cunts, but we straddled their waists, and we could just feel them banging against our butts. Quick as a flash, once we were in place, we snapped the free end of the cuffs to the fastenings that I'd left in place after my daughters had tied me up and fucked me a few months earlier.\n\nChrissy looked at me, not quite sure what to do next, so I quickly got off Lucas, and went back to the drawer. Chrissy followed me, and we each took another pair of cuffs and walked back to the bed. By this time, Bjorn and Lucas had realised that things weren't quite working out how they'd planned. They kicked and struggled, but given that their arms were attached to the bed, and there were two of us, we managed to get each of their legs fastened together.\n\n\"I bet you two love ass-fucking, don't you?\" I asked, while they wriggled around on the bed. \"I thought so, calm down, then, because that's what we're going to do.\"\n\nBut not in anything like the way they were imagining with Chrissy and I cowgirling or reverse cowgirling with their cocks in our assholes. Oh no. It was going to be our way, and we were almost there. I got out two more longer fastenings, and between us we managed, one at a time, to haul the boys' legs up over their shoulders, and anchor them to the bed as well. \n\nAlthough I loved the look of a woman's cunt and asshole, I'd never really enjoyed looking at men's assholes the same way, and the sight in front of me didn't do anything to change my mind. With their legs up over their heads, the only movement left to them was to wriggle around, making their balls jostle above their exposed assholes.\n\n\"What the fuck are you going to do now, Aunties?\"\n\n\"Well, you said you liked ass fucking, didn't you?\"\n\n\"So we're going to let you enjoy it yourselves.\"\n\n\"You fucking cunts!\"\n\n\"You can't do this to us!\"\n\n\"Wait till your brother and my Mom find out about this.\"\n\nThese were just a sample of the shouts the boys gave us, which were much more anatomically explicit, and made all sorts of untrue assertions about our parentage. We ignored them, as my sister and I fitted ourselves with two of Jade's most advanced strapons.\n\nThey were really something special, rather like a double-penetration rabbit, with plugs for the ass and vagina of the wearer, and a couple of little ears which go against the clit. However, once you have the plugs in place, it leaves a large, pink plastic cock sticking out at the front. Not only that, but there are two separate motors, one for the pussy, and the other for the cock. \n\nThe only problem is that if you get too energetic, which was certainly what I intended to be now, they could get pulled out of you. Fortunately, though, Jade had custom adapted them by attaching a stringy thong which works to keep them securely inside your cunt. The other complication is that once you are going, it isn't easy to find the areas to change the vibration levels, so Chrissy and I just smiled at each other and set them both to the maximum.\n\nWe'd used them on each other a lot when the boys were away, and they were fabulous, the two different vibrations as well as the penetration sending wonderful feelings right through us. I wasn't quite sure the boys were going to regard it that way, though. \n\n\"Do you think they need lube first, Suz?\"\n\nI must have been feeling a bit soft - well they were our nephews, after all - because I got some out, massaged some over the plastic cocks, then squirted some at the boys rear entrances.\n\n\"Aagghh!\" the two boys yelled in almost perfect unison as my sister and I rammed the strapons into our nephews' assholes.\n\n\"What's wrong boys? You did say you liked it rough, didn't you? And that you liked ass fucking.\"\n\nBoth Chrissy and I were enjoying ourselves. Not that we got any great pleasure from fucking the boys, really, but our thrusting in and out of their tight butts meant that the plugs in our own vaginas and anuses were being pulled and pushed backwards and forwards, and the vibrator on our clits was sending us wild. God, it was good, and I came really fast, Chrissy following me seconds later. The boys were groaning, and periodically yelling at us to stop, but I thought I could come a few more times first.\n\n\"Shall we get them to come, darling?\" I asked my sister, leaning over to kiss her, and grab one of her tits, which was swinging away as she pumped the strapon in and out of Bjorn's butt.\n\n\"How, Suz?\"\n\nI demonstrated by making my strokes shallower, and reaching around to grab Lucas's cock which was flapping about, almost vertical, between his face and his legs. I started massaging it. Chrissy cottoned on, and started doing the same to Bjorn.\n\n\"The only trouble is, Chris, they're likely to come all over their own faces. Oh fuck!\"\n\nMy cry was just because the thought of it, combined with the glorious vibration and motions my cunt was experiencing sent me over the top again. The boys were still groaning, but I think the fact that their aunties were now jerking them off had turned the pain of the dildos in their asses into pleasure, especially given the intense vibration they were producing as well.\n\nShit, I was going to come again almost immediately if I wasn't careful, as I enjoyed the punishment we were giving our nephews, and the pleasure the strapon was giving me. I was desperately trying to hang on, remembering how many other members of the family I planned to have fuck me during the remainder of the day, but as I looked down, I could see the bag of Lucas's balls tighten, and I knew he was going to come as well. \n\nI started jerking his cock faster, and as I felt something wet and sticky land on the back of my hand, I came for a third time, ramming the plastic cock hard into Lucas's asshole as I forced the plugs hard into my own holes, and clenched my legs together, the vibrations from the toy resonating up through my entire body.\n\n\"You fucking cunts!\" Bjorn yelled, his face striped with his own spunk as Chrissy made him come with her hand.\n\n\"You said that before,\" I replied as I pulled the strapon out of Lucas's asshole, then undid their handcuffs, \"but you did say you liked it rough, and you loved ass-fucking, didn't you? In future, remember to ask before you get too rough with a woman, and maybe I'll even say yes next time.\"\n\nChrissy and I just laughed, as we shared the spunk from each other's hands, and the boys got up and disappeared into the bathroom to wipe themselves off. Chrissy switched off the strapon, took it off, and headed out of the bedroom herself.\n\n\"I'm going downstairs to see if I can get Dad to fuck me. He had you weeks ago, and I think it's my turn to have some fatherly incest, don't you?\"\n\nI blew her a kiss, and just sat back on my heels, remembering with pleasure the lesson we had taught our nephews, and still enjoying the vibrations the strapon was sending through my cunt and ass. Now, who should I fuck next, I wondered?\n\n\"My sons tell me that you and your sister practically anally raped them, Susan. Is that true? Anyway, what is it with you? Your husband just fucked my ass rather than my cunt.\"\n\nI turned around, and saw the Viking goddess walking towards me, her gorgeous tits wobbling so the nipple rings caught the light every time she moved.\n\n\"Well, they said they liked rough anal, and after they'd tried to pull our nipples off our tits, we both thought they needed a lesson in how to treat a lady.\"\n\nIngrid burst out laughing, which made her tits wobble even more. The only way I could keep my eyes off them was to look down, transferring my gaze to the large cuntlips hanging between her legs.\n\n\"A lady? Well, I don't think there's any of those in this family, do you? Cunt sluts, more like.\" \n\n\"In which case you certainly fit in perfectly, darling,\" I said smiling, walking towards her, and grabbing those wonderful breasts.\n\n\"Well, I hope you didn't hurt them too much. That is what you used, I assume?\" she said, smiling back, and looking down at my strapon, which was still buzzing away gently.\n\n\"Well, Ingrid, why don't you find out for yourself? I bet there won't be many women who've been ass-fucked by both a man and his wife. And it's only just come out of your younger son, so it's pretty nasty.\"\n\nI think it was the last thing I said which really swung it for her. She first kissed me deeply on her mouth, the strapon pushing against her belly, and then she grabbed my hand and pulled me back over to the bed.\n\n\"Come on then, Susan, ram it up me like you did my son, but crank the vibrator up to the max first.\"\n\nI'd been intending to do that anyway, but as I fiddled around to find the place to press, my eyes became riveted on what was in front of me. Ingrid was on her back on the bed, and she had her arms around the back of her knees, pulling her legs up to her chest, and wide apart. I could clearly see the wrinkled pink circle of her anal opening, my target, of course, and it had a glob of spunk hanging out of it, trying to dribble down her ass crack on to the bed. Fuck, it was my husband's spunk, of course, which immediately started my cunt leaking more. \n\nHowever, what to me was even better was what was in front of it. She had huge, pale labia, but rather than obscuring the inside of her slit, they were gaping open. At the front, her clit was also big: such a pale, salmon pink, and it almost stuck out further than the hood. Best of all, though, was that her cunthole was gaping wide open. The colour transitioned from the salmon-pink of her clit, back to a pure, vivid pink at the opening and inside. I clearly see her pee hole at the front, and into the dark depths of her vagina. \n\nBy now, I'd seen up the cunts of all of the women of my close family, and with the boys and my husband, I'd looked up loads more on the internet. While I loved the look of them all, I had never seen one quite as open as inviting as Ingrid's was then. I must have let myself get carried away, hardly noticing that I had managed to get the plastic cock vibrating at the highest setting, until Ingrid's voice startled me back to reality.\n\n\"Get on with it, Susan. I understand why you're overwhelmed with my beauty, but your husband's spunk will lube me nicely, so ram it in me.\"\n\nOh yes, I really wanted to, believe me. I steered the cock so it's vibrations were threatening to spray Charlie's spunk everywhere as it touched the stream of it running out of Ingrid's sphincter, then I pushed it in as hard as I could. I watched as the inside of her vagina was forced forwards as her anus was filled with the big plastic phallus, and I started to pump it in and out of her. I just couldn't resist pushing two fingers deep into her gaping hole, enjoying the warm wetness inside, and the feeling of the plastic cock going in and out of her other hole, so close, but so far.\n\n\"I think she needs more than that up her, Mom,\" a voice said in my ear, and when I turned my head, I saw Tony, my younger son standing next to me, his stiff cock touching my arm.\n\nI thought he meant another of my fingers or maybe two, but instead he pulled mine out of her, and plunged his fingers and thumb into her hard. I felt the impact of his fist on my cock, as he clenched it inside her, then he pulled it out quickly. Fucking hell, for a few seconds her cunt was gaping even wider than before, but that wasn't what got my attention. As my son's fist came out of my sister-in-law's cunt, she let out a fountain of pee. I could see it coming out of her pee hole in front of me, and it arced over to my belly, running down to my slit and the vibrating strapon inside me.\n\nI hadn't seen anything quite as beautiful and exciting, maybe ever, and I wanted more. I wanted to see again and again the way her pee came out of that little hole inside her much bigger one. Fortunately, Tony must have decided he wanted her in a different way. He moved up the bed, and lay crossways over her face, pushing his cock into her mouth, and right down her throat. He then started to more-or-less do push ups, fucking her mouth hard. If it hadn't have looked so dirty and sexy, it would probably have just looked funny, but seeing my son fucking Ingrid's mouth was almost as exciting as the buzzing of the vibrator in my holes.\n\nI now had a clear run at Ingrid's cunt again, and I rammed my fist into it the way Tony had. I felt her squirm as my hand and the strapon pushed hard into her at the same time, then as I pulled my plastic cock back out of her asshole, I also pulled my clenched fist out of her. Fuck, the arc of pee was even bigger this time, hitting me waist high, and running back down between my legs, and I could see some of the pee running back inside Ingrid's open vagina.\n\nOh, fuck, how much longer could I carry on without coming, giving the physical sensations inside me from the strapon, and Ingrid's gaping, peeing cunt in front of me. I reached over and started rubbing Ingrid's exposed clit as hard as I could, and when I saw her starting to twist and turn under me, I stepped up the pace of my thrusting in and out of her asshole.\n\nGod, for a few moments I almost felt I was a man, and understood the satisfaction a man gets from ramming his cock into a tight hole, then shooting his jizz inside it. The vibrator on my own clit was sending me crazy, and every time I drove the strapon into Ingrid's anus, the plugs in my vagina and ass send shards of pleasure running up through me. I just wished my cock was a real one, not a stupid plastic one, and I could fill Ingrid's anus with my seed.\n\nIn my frustration at not having a real cock, I punched my fist into Ingrid's cunt, and stirred it around inside her, pushing hard against the plastic cock in her ass. Fuck, I was beyond the point of no return now. My climax hit me with the force of a hurricane, and I rammed the strapon hard into Ingrid with all of my weight behind it. I pulled my hand out of Ingrid's hole, and started rubbing her clit again. I'd barely touched it, my fingers seeming out of my control as the sensations in my cunt took over my whole body, which was given over to the most extreme sexual pleasure, when Ingrid exploded as well.\n\nHere hips lifted off the bed, pulling her gaping cunt even further apart, and a massive stream of pee erupted from the front of it, hitting me in the face, then spraying back over her own body as her butt banged up and down on the bed. I caught some of her pee in my mouth, enjoying the salty tang mixed with the aromatic, musty flavour of her cum, but most of it ran off my chin, dripped off my tits, or ran between them down to my pussy. I was also aware that Tony had been rolled off her by the violence of her climax. He was kneeling next to her, his throbbing cock dripping with her saliva.\n\n\"Change places, Mom.\"\n\nTony's shout somehow brought me back down to earth a bit. I knew I had to get the strapon off, else I was going to keep coming and coming, and as I ripped it off and out of me, my slut brain came up with another great idea. Tony and I swapped places, and as he knelt between Ingrid's legs, hoisting them up over his shoulders, he grabbed his cock to guide it into her hole. It needed to be the right one for my plan to work, though.\n\n\"Fuck her asshole, son.\"\n\n\"I was going to, Mom, you'd left that gaping for me as well.\"\n\nI had a fleeting burst of pride on how well I had brought up my younger son, before it hit me just how inappropriate it was for a mother to leave her sister-in-law's asshole gaping, ready for her son to fuck it, but fuck it, who cared. Tony still had to force his cock into Ingrid's shit hole, though, because his cock was much wider than plastic one on the strapon, and as I watched him, I straddled over Ingrid's spit-covered face.\n\nAs I leaned forward over Ingrid's body, Tony bent towards me. He kissed me on the lips, tasting the remains of Ingrid's pee from my face. As we broke the kiss, we both looked down, each of enjoying the pink of Ingrid's gaping cunt, which was dripping with her cum and her pee. Tony looked back into my face, and we shared the pleasure and delight of looking inside her.",
        "\"Put your fingers up her cunt alongside mine, son. I want to feel your cock inside her.\"\n\nI caught hold of one of my son's hands, pulled it down to the opening of Ingrid's vagina, and we each pushed all of our fingers into it. Fuck, I could feel my son's cock ramming in and out of her, almost as if it were in her vagina as well. We stretched her hole open even further by moving our hands apart, intending to cause her as much pleasurable pain as we could. We must have succeeded, because Ingrid stopped licking my slit, and instead bit down hard on my ears.\n\n\"Fuck!\" I yelled, as my pain level spiked a bit beyond my own pleasure threshold, but either she backed off, or I got used to it, because I found I was having to work to stop myself coming again, and I didn't want to until Tony came in her, and with luck, Ingrid came again herself.\n\nTwo could play at that biting game, though. I pulled my hand out of Ingrid's cunt, and pushed my son's away as well, so that I could lay over her, and get my head between her legs. Tony's pubes were banging against my head with every stroke, as my tongue met the shiny wet surfaces inside her slit. I licked my tongue backwards and forwards, circling her huge clit, before moving back and pushing it as far into her vagina as far as I could. \n\nShe tasted wonderful. Spicy cum and salty, tangy pee mixed together. I was fairly sure that my son wouldn't last very long in her ass, having fucked her mouth for so long, and I had a little trick in mind that I thought would trip Ingrid over, even if my tongue hadn't quite managed to get her right on the edge. We were licking and biting each other's cunts, as my son pumped his cock in and out of her. As I felt the pace of his thumping on my head speed up, I knew he was releasing his sperm inside her, and I let myself go.\n\nActually, I let myself go in two ways. First, I came, of course. But second, I released the control of my bladder, and as I banged my cunt up and down on Ingrid's face, I squirted my pee right into her mouth. As I'd hoped, this unexpected delight set her off as well. I could feel her twisting and turning under me, and I could sense her struggling to swallow as much of my pee as she could. Of course, to my joy, either deliberately or because her control had totally gone, a gush of Ingrid's pee and cum entered my own mouth.\n\nFucking hell, the release I felt was spectacular, the peeing increasing the intensity of my climax amazingly. My entire body felt as if it was being pierced with red-hot needles, and my cunt felt as if it was on fire. I let my climax run on, because there was one other thing I absolutely needed to do. As Tony started to pull away, his cock now limp, I pushed him away, and reached around to push two fingers into Ingrid's asshole. \n\nI pulled as much of my son's spunk out of her as I could, then I moved my leg from over her, and knelt beside her. Her face was drenched with my pee. All of her hair that I could see was dripping wet, and there was a big wet patch beside her on the bed. However, I could see from the sparkle in her eyes that not only had she enjoyed it, but she was looking forward to what I was going to do next. \n\nI opened my mouth, letting her see that I still had some of her pee in my mouth, then I sucked my son's spunk, that I'd pulled out of her asshole, into my mouth. We smiled at each other, as I bent towards her. As our lips touched, I opened my mouth and let the pee and spunk from it mix with the mouthful of my own pee that she had kept in hers. We sluiced the wet mess backwards and forwards in our mouths, before swallowing it all down, and I just loved the taste and disgustingness of what we were doing.\n\n\"Fucking hell, Mom, I keep thinking you can't get any more of a slut, but then you do something like this and surprise me again.\"\n\n\"Your brother told me what a nasty bitch you were now, but I never expected you to be quite such a gorgeously disgusting cunt, Susan. Now I'm really looking forward to years more fucking in this family.\"\n\n\"So am I, darling, but I think we should probably have a shower so we don't smell of piss when we rejoin the others, and perhaps you can help me strip the bed and put on some clean sheets?\"\n\nWhen we eventually got downstairs, clean and sweetly-smelling again, but still gorgeously naked, it seemed that everyone else had run out of energy for a while as well, and Chrissy and her sons were getting lunch for everyone. The room still reeked of sex, though, and some of the people obviously hadn't cleaned up as well as me and Ingrid.\n\n\"Come here, Chloe\"\n\n\"I'm Lucy, Mom.\"\n\n\"Oh well, doesn't matter, I just wanted to lick that last blob of spunk you left on your tit, darling.\" \n\nLicking my lovely daughter's breast like that set my cunt twitching again, and I snaffled down a hot dog, eager to get going once more. It wasn't really my fault that I managed to squirt mustard and ketchup over my son Michael's cock, was it? And what choice did I really have to clean it up, other than sucking it off for him? And because that made it all wet, I was really only trying to dry it off for him, wasn't I, when I straddled him and sank his cock deep into my cunt?\n\nAfter that, pretty much everything became a blur during the afternoon. I remember getting my father and brother to fuck my cunt at the same time, while my Mom watched as I ate her out as she straddled my face. They struggled to work together at first, finding it hard for them both to thrust into me at the same time, but eventually they both managed to come, my father first, but without him slipping out of me before my brother added his sperm into my vagina. \n\nI also remember we put on a 'twin's exhibition display', with me and my twin sister fucking my twin daughters and her twin sons. Anyway, I'm pretty sure I managed to fuck every one of the family at least once by bedtime, and my tits, cunt and asshole were aching pleasantly from being well used.\n\nThe next morning we all must have been a bit tired from our exertions, because neither Chrissy, Jade or I, or even Michael, woke up in time for us to go for our run before we all set off to church. It felt strange putting a dress back on, but even Mom didn't bother with a bra or panties, and there was something wickedly satisfying about knowing that all of the women in the family were almost naked. \n\nYou might think it strange that after so much uncontrolled incest we went to church. Well, Mom had always brought us up to be religious, and I think we all believed still, and certainly subscribed to the ethical standards of the church. Not only that, but Elizabeth, my cousin and I, were still extremely active trying to care for people in the community who had problems of money, drugs, abusive partners and the like. \n\nAfter Elizabeth had enlightened me about the family history, I now understood that incest was in my genes. Although it is illegal and against the church's teaching, I wasn't populating the world with deformed children, nor was I corrupting anyone who didn't already have it in them. Well, almost, I suppose, since my Mom had only married into the family, and I did feel a bit guilty about pushing her into letting us all fuck her. For that matter, Charlie had married in as well, though as he definitely did cheat on me, I didn't feel guilty about him. \n\n\"I'm sorry I made you break that commandment, Mom,\" I said, putting my arm around her after we'd said our goodbyes to the pastor and our friends in the congregation, and were heading back to the cars.\n\n\"Don't be silly, darling. I should never have tried to make you deny your nature, but helped you come to terms with it, as everyone said it would come out in the end, just as it has. Thank goodness everything is out in the open now, because things could have turned out bad with Brian, and with you girls as well. Anyway, I'm looking forward to making up for my lost years when the annual family event takes place.\"\n\nBy this time, Jade, Chrissy, Mom and I had piled into Tony's Mustang, and as the day was cool, but sunny, he'd put the roof down. Mom leaned over and kissed me, then she sat back and yelled out, \"Let's get our tits out, girls.\" \n\nShe pulled her dress up to her neck, and giggled her gorgeous, but somewhat saggy breasts, above her totally naked body. That was a surprise, and it was lucky that Tony had chosen a dirt road back way home, where we weren't likely to meet many other cars, as my sister, my niece and I did the same. Fuck it, the breeze had a chill to it, but the goose bumps on my Mom's tits, and the sight of her naked cunt really turned me on again.\n\nAfter we'd grabbed a quick sandwich for lunch, I couldn't resist one last fuck with my sister, brother and our parents before they had to leave to drive back home. Then slowly the others left. Chrissy and my kids, except Tony, all headed back to college, and Brian and his family went back home to get ready for work the next day. That night, Chrissy and I slept with Charlie, and Tony with Jade, all reliving in our minds the fun of the previous day.\n\nIn the weeks after the family meeting and introduction to my brother's family, we all rallied around to look after Jade's needs, now she no longer had the online site to satisfy her. However, in many ways this was overshadowed by two other momentous events, which were unconnected, but yet had a something in common.\n\nCharlie had kept Becky as his secretary while he tried to work out what jobs she would be suitable for, but which would also be a promotion. All payment, of course, for letting him take her virginity. But it was dragging on a bit, and I think both of them were getting irritated. Once Charlie had fucked one of his young secretaries, he always got bored with them pretty quickly, it seemed, so Becky's sexual novelty was already wearing off as her holes got stretched by him, and she had started nagging him about why she was still his secretary.\n\nAll this changed, though, because one day she discovered a huge security hole in the Company systems. Almost certainly she was just poking around, well beyond what she should have been doing as his secretary, but it was such a surprise, and so serious that no one cared. The obvious solution was to find a role for Becky in the chastened IT department.\n\nHowever, even a few days later nothing had been decided, and Charlie was complaining that the IT folk were resisting, when the second thing broke. Tony had for a long time worked on checking out IT security in people's systems, and had got significant financial rewards from software companies whose systems were sold as secure, so wanted to solve the problem without it becoming public. Tony found another, but this time it was a massive one, with a convoluted series of instructions being able to defeat some of the most widely used server software, giving an intruder a level of control that was supposed to be reserved only to the system administrator. \n\nThe vendor gave him a huge payment, and an offer to do more work for them, which given he was still finishing up his studies, wasn't easily possible, It seemed. However, with the juxtaposition of the two events, Charlie decided to help Tony and Becky start up their own IT security business, and he fired some of his own staff, and awarded the contract to them to sort out his own problems. Tony needed to complete his course to get his qualification, but this was going to set him up ideally for the future.\n\nOf course, it meant that Charlie was free to recruit a new secretary straight out of school, pretty much, which meant a triple win for him. He'd solved a security problem, found a solution as to what to do with Becky, and provided him with a new set of panties to try to get into. He was ecstatic. He stuck to his promise, though, and showed me a photograph of his new assistant. She was the almost the exact opposite of Becky, who was petite and blonde. This new one was tall, dark haired, and I guess the polite term would be 'buxom', with huge tits.\n\nMy only worry was how Jade would take to Tony spending so much time with Becky, as they seemed to have become quite an item. Also, we had to start to think about getting some more space as Becky moved in with us, and Chrissy was here pretty much full time now as well. Still we had Tony's reward money, and Chrissy said she'd throw in what came from the sale of her house, so we started looking at building, converting a barn, or buying the next door property, which rumour had it would be on sale soon as the elderly couple had gone to live with their daughter.\n\nThings, therefore, were less fraught than I'd feared they would be, and this led Chrissy to take the lead in getting us into another adventure. In truth, they weren't only less fraught, but in danger of becoming dull after all of the sensational new sexual experience we'd had over the previous few months. So, one morning, when Becky and Jade were apparently engrossed in some computing and all the men were at work, she came over and kissed me, running her hand across my breast, over my dress.\n\n\"Hey, Sis. How about we meet up with Bjorn and Lucas again? I'm bored, and could do with a bit of excitement.\"\n\n\"Bjorn and Lucas? Remember what we did to them, Chris? They'll definitely want to get their own back on us, and they told us they were into S&M. Do you really want your ass spanked or your tits clamped?\"\n\n\"Yes, Suz. That's exactly what I want. Now and again, a bit of pain can really spice things up, can't it? And it seems ages since I had a really good screwing.\"\n\nI knew I might regret it, but what my sister had said had sent my cunt itching with desire. Two nephews, trained by their mother to fuck hard - what could be better? Maybe our brother fucking us again as well, and the image of Ingrid's gaping, pissing cunt flashed into my mind. Yes, it could be fun, I thought, forgetting just how painful it had been the last time Bjorn had fucked me. So I agreed.\n\nChrissy and I were already fingering each other as she called Bjorn's office number. By the time she'd finished, we were booked in to meet our two nephews that same evening, when they said our brother and his wife would be out, and we'd got each other's panties off, and our dresses were pulled up to expose our tits. \n\n\"Come on Suz - let's just warm ourselves up for this evening.\"\n\nGiven that my sister was now naked, with the fingers of one hand ramming in and out of her cunt, and her other hand squeezing one of her tits, it would have been rude to turn her down, wouldn't it? I threw my own dress off, and leapt on top of her, kissing her mouth with my tongue, and pushing her hand over to my own pussy, while I slid my fingers up into her hole, which was slippery and wet already.\n\n\"Ooh, this looks like fun!\"\n\nI turned around, and saw Becky and Jade, already starting to strip off. With the four of us, it was certain to be fun, though nothing like what the boys would do to us that evening. What better way to pass an afternoon, though, than multiple orgasms at the hands and mouths of your sister and nieces? We didn't go overboard, though, deliberately saving ourselves for later. \n\nWe dressed in thin white blouses, which our braless nipples showed through quite clearly, and short, pleated skirts which gave easy pantie-free access to the delights between our legs. It was strange how it had become so natural to dress in identical clothes, giving people the puzzle of working out who was who, just like when we were young, and we fought against it, wanting to be seen as individuals. When we were ready, we drove off in the early evening to our brother's house, stopping on the way at a pizza house for a meal.\n\nIt took us a while to find the house, which was set back from the road behind a clump of trees, as we hadn't been there before. I parked the car, and then we went to knock at the door. We didn't get a reply, and everything seemed unusually quiet, given the boys knew we were coming. After a few more unanswered knocks, Chrissy pushed the door and found it was open, so we slowly went inside, calling out to ask if anyone was there.\n\nI guess we should have immediately been suspicious, but we weren't. We only realised just how silly we had been when some sort of black, cloth bag was put over our heads, and our arms were dragged behind us and snapped into handcuffs. There must have been a tie at the neck of the bag, because as soon as my hands were fastened, I felt the bag being tightened around my neck, only just loose enough to let me breathe normally.\n\n\"Look, Lucas, here's our two slutty aunties.\"\n\n\"Not just sluts, Bjorn, but idiots. Didn't they think we'd want to get even with them after they fucked us with those strapons? Let's start by having another look at their cunts.\"\n\nI felt fingers fiddling with the top of my skirt, and then it dropped to the floor around my ankles. I was stood there, blindfolded, naked from the waist down, and I could only assume that my sister was in the same position. Then I felt fingers probing between my legs. They managed to push between my labia, then slide along my vulva until they forced their way into my vagina.\n\n\"This one's fucking wet, she must be ready for it already.\"\n\n\"So's this one. I told you they were sluts.\"\n\n\"Alright, boys, we admit it. Your aunties are sluts, but are you going to just poke us with your fingers all night? We came here for some real action,\" I heard my sister say.\n\nI had a nasty feeling that this was a bit like poking a crocodile with a sharp stick, and immediately we were pushed forwards. We stumbled along, with the boys helping me keep upright at times, but at other times touching my ass, and trying to get to touch my holes while I walked. \n\nEventually, I bumped into something a bit less than waist high, and I fell forwards, almost going right over it. While I was struggling to keep my balance, I felt the one of the handcuffs being undone, but before I could take any advantage from it, my blouse was ripped off, losing at least one button from the sound of it, and the handcuffs were snapped shut again.\n\nI had a few seconds to realise what an undignified position I was in: naked, doubled over some sort of bar, with my ass in the air, and a bag tied over my head. I wasn't sure that knowing my twin sister must be in the same state was any help.\n\n\"FUCK!!\"\n\nA belt of pain shot through one of my tits, and then before it had a chance to fade, a similar spike of pain went through the other. It was even worse than that, because the pain didn't really go away. My nipples were being pulled down hard, dragging the flesh of my breasts with them. The little fuckers had obviously used some sort of clamp on each nipple, and the clamps, in turn, must have had a heavy weight attached to each one. Shit, their mother must have trained them well, and the thought made me lust after seeing her pointy, pierced tits stretched out the way mine now were.\n\nI really couldn't move at all now; only the bar was keeping me from falling on my face, and I couldn't use my hands, so unless I kept still, I was sure I would topple over. I felt my ass cheeks being pulled apart, then I heard and felt a glob of spit land on my crinkly rim, and start to run down towards my cunt. A finger pushed my sphincter open, and forced its way into my asshole.\n\nShit, plenty of people had fingered my asshole, and I usually enjoyed it. There was something about the position I was in, though, which meant I felt really ashamed and embarrassed. I could imagine how exposed my shit hole was, and how disgusting it would look with a finger stuck in it. I'd always been brought up to regard my bottom as dirty, shameful and totally private, yet here I was, a forty-two year old woman with my asshole exposed and stretched, and being probed by my twenty-something young nephew in a way that I'd always been taught was totally forbidden. \n",
        "\"There, now Auntie, how do you like your ass to be invaded?\" Whichever one of the boys it was, he then started stirring his finger around in me, moving my guts around inside me. \"But this is just a start.\"\n\nAt some point, he must have taken his own clothes off, because I could feel his cock banging against my butt as he reached around with his other hand, and rammed all of his fingers up into my cunt, forcing the finger in my asshole further in me to meet them.\n\n\"Have the boys, gone, Chrissy? I can't hear or feel them,\" I asked, deliberately aiming to provoke them, probably foolishly.\n\n\"No, Suz, maybe they're having a rest. I thought they were going to fuck us so hard we'd never forget it, but perhaps they've changed their minds.\"\n\nI knew that this really was asking for it. The thing was, though, that while my tits were aching from the weights hung of my nipples, and I loved being fingered in both my holes, I'd come for something more extreme, and the wetness in my cunt was more about anticipation than actual arousal. I felt the fingers pull out of me, and I wondered what would be coming next, with a mixture of fear and excitement.\n\nWhack!\n\nWell, I found out. Some sort of paddle or bat slapped across my butt, making my cheeks sting like mad. I heard another whack which didn't hurt, so I guessed it must have been on my sister's butt, and I wondered what my other nephew was up to. \n\nWhack! Whack!\n\nThis time the stinging of my bum cheeks was much stronger, and at the same time I felt a blow hit one of my tits, leaving me with a burning sensation. \n\nWhack! Whack!\n\nClearly one of our nephews had something smaller and more supple, and was whipping our breasts with it. Fuck, he also must have put on more weights, because another bolt of pain shot through my tits as my nipples were stretched out even further. The other nephew was slapping harder and harder on our asses. Each time he hit, the burning sensation felt more intense and lasted longer. My whole body felt full with pain. I wanted to curl up into a ball and protect myself, but I couldn't.\n\nWhack! Whack!\n\nMy butt was beaten again, and I could hear myself groaning with the pain, as my tits also got another whipping. In my mind I could see them striped with bright red wheals, and my ass glowing red. Fuck, I was in agony, but yet I was also so aroused that if either of the boys touched my cunt now, I knew I'd come immediately.\n\n\"Aagghh!\"\n\nWell, that was what I thought, but I was proved wrong. My cunt did get touched, but it was with the whip that had been used on my tits. Whoever it was struck from below, managing to land a stinging blow right on my cuntlips, from my hole to me clit. Then he hit me again, this time right across my anus, which I'd never have imagined could be so sensitive. A third blow, even harder than before then landed on my cuntlips again, this time managing a direct hit on my clit. I screamed with pain. I think I must have come as well, as the two sensations of agony and pleasure got totally mixed up, but I know I let out a jet of pee as my bladder lost control from the delicious pain which shot through my cunt and up into my body.\n\n\"Hit my cunt again. Please,\" I managed to gasp out.\n\nAfter a few seconds, two more strokes came in quick succession. One really got the sensitive, crinkled ring of my anus, making it burn almost unbearably, then the other hit even harder on the front of my cunt. It must have got the perfect angle to open my lips a bit so the whip, or whatever it was, got my bare clit, and a torment of agony spread through my entire body.\n\n\"FUCK!\"\n\nI came again, letting out an even longer stream of pee as the pain and pleasure made me lose control of all of my sphincters. I wasn't sure whether to cry out for them to stop, or beg them for more, but before I could decide the beating stopped for a few moments. I could hear my sister yelling, and as I worked out that my nephew must be giving her the same treatment, I felt something else.\n\n\"FUCK!\"\n\nBy this time I was ready to be fucked, and boy did I want it. My battered cunt must have been criss-crossed with red stripes, but it was also soaking from a mixture of pee and cum. I wasn't surprised, then, when I felt one of the boy's cocks ram into my tingling vagina. What made me yell, though, was that something that felt larger, and harder, had rammed into the burning ring of my asshole at the same time.\n\n\"Now you can really feel what it was like for us, Aunties.\"\n\nI was loving the feeling of the cock pumping in and out of my cunt, but the force of the thrusts was making my tits swing, and with every stroke a new burst of agony swept through them, as my nipples were not only stretched down but sideways as well. Still, I'd probably have loved those two things on their own, but it was the third that was really making my body ache and burn.\n\nI was sure that the boys must have taken our idea, and were using a strapon in our assholes, the way we had in theirs. But shit, it felt as if these were much larger. It wouldn't have been so bad if they'd lubed me up properly, but all I had was some saliva and perhaps a bit of my cum to reduce the friction between the strapon and my anal ring. Each time the massive strapon went in and out, it felt as if my tight asshole was being torn apart.\n\nFrom the noises next to me I could tell that Chrissy was getting the same treatment, our groans almost perfectly synchronised each time the cocks and strapons drove so hard and deeply into our cunts and anuses. I didn't know if I was going to pass out or come, as the pain had totally scrambled my brain, but my pussy was exploding with pleasure. \n\nMaybe I did pass out for a few seconds, but then I was dragged back to consciousness by the bag being untied, then ripped off my head, and a cock was rammed into my mouth. I managed to look up enough to see that it was my brother.\n\n\"Eat my cock, you stupid cunt, Susan. You should have known better than to take on my sons after Ingrid had trained them.\"\n\nMy brother's cock hit the back of my throat at the same time as the invaders in my cunt and asshole sank into me again as far as they could, and I couldn't stop gagging, saliva running out of my mouth. I thought I was going to pass out again, but then Brian pulled his cock out, and I could turn my head enough to see him take Chrissy's bag off, and start to fuck her mouth. \n\nI heard something else, and when I looked the other way, there was my sister-in-law, Ingrid. She was naked, and from the spunk running down her leg, my brother must have fucked her quite recently. I had just enough brain cells still working to realise this explained the taste when he put his cock in my mouth, a mixture of his spunk and her vagina juice.\n\nShe wasn't just naked, though. She had weights dangling from her nipple rings, her form tits swaying as they were dragged downwards. She had clamps locked on to her cuntlips, also with weights attached, and she was fucking herself like crazy with one hand, as the other stretched her nipples and labia even further.\n\nNormally I can't come without my clit being played with, but shit, I felt really close to the edge. Maybe it was the pain in my tits and my ass. Maybe it was the way the thrusts into my holes were perfectly aligned, which two people can never get anywhere near when I'm double-teamed. Or maybe it was just the whole scenario of being alongside my sister, both unable to do anything for ourselves, being fucked in both holes by our nephews, our brother fucking our mouths, and his wife masturbating in front of us.\n\nWhatever it was, when my brother's cock, wet with my sister's saliva, was forced down my throat again, and I saw Ingrid's legs start to wobble, I knew I could no longer stop myself coming. As my brother's cock fucked my mouth, and one of his son's fucked my cunt, with a strapon ramming into my asshole, and my tits stretched and aching, I just gave in and came again, squirting all over my nephew's feet.\n\nI think I must have screamed again, and that must have set everyone else off. Ingrid let out a yell, and started dancing across the floor, clutching her cunt. My brother pulled his cock out of my mouth as he came, sending a string of spunk across my face, before he turned to our sister and decorated her cheeks and nose with his spunk as well. I wasn't surprised that seeing both their parents coming in front of them set the boys off as well, and I could feel my vagina filling with spunk from one of them, and from the sound of it, the other was filling my sister's hole as well.\n\nI thought that was as extreme as it could get, but Ingrid's come-dance had taken her close to me and Chrissy. She moved her hand, opening her cuntlips, but also pulling them forwards, and as I saw the shiny pinkness of her slit, she squirted pee all over both of our faces. I suppose that gave my brother the idea as well, and as his cock softened down, he pissed over both of his sister's faces, which already dripping with his wife's pee. \n\nNow, squirting with a cock in you is a messy business, lots of the liquid going in rather than out, so when my nephew pulled his cock and the strapon out of me, a gush of pee and spunk came out of my cunt, adding to the mess on the floor.\n\nThe silly thing was that even when our climaxes had passed, neither Chrissy nor I could manage to get up on our own. Our bodies had locked, and trying to pull ourselves up sent shards of pain searing though our tits, but eventually Brian helped us up and took the weights off our nipples. My sister and I looked at each other with horror. \n\n\"Fucking hell, Suz, I'm exhausted. Shit, look at all those red wheals our my tits! I think we'd better go home to bed.\"\n\n\"Yes, Chris, and your ass looks as red as Rudolph's nose!\"\n\nOut of the corner of my eye, I saw my nephews starting to work on their mother with what I could now see was a large plastic paddle, and a short, pliable whip. Part of me wanted to wait and see the red stripes appear on her cunt, but God, though I'd enjoyed the pain, the truth was I'd had enough for one night. My sister must have felt the same, because we both grabbed our skirts and put them on, if only to protect the car seats. When we tried to put our blouses on, though, the stinging in our nipples was just too much to bear, so we drove home topless.\n\n\"Why don't we go to bed and kiss each other better, darling?\" Chrissy suggested when we arrived there, which seemed a fine idea to me.\n\nMaybe not quite as fine in practice, because even if we kissed each other's tits very gently, the ache in them turned to real pain. However, our tongues in each other's cunts and assholes seemed much more soothing on the red stripes down there, and we rubbed each other's butts with lotion, as we sucked our nephew's spunk out of each other's holes.\n\n\"That was fucking epic, wasn't it? But maybe we should wait a while before we try it again?\" Chrissy said, before we cuddled down in bed to go to sleep.\n\nWhen we woke up the following morning, Charlie was in the bed with us. He was horrified to see all of the marks on us, and he persuaded us - pretty easily, actually - to abandon our usual run. Still, it meant we had to explain why to Becky and Jade, though I'm sure their kisses on our abused areas helped us recover over the next couple of days.\n\nA few nights later my wounds had faded away, and it was Charlie and Chrissy's turn to fuck Jade. I imagined that Tony would join them, leaving me on my own again. I was still trying to decide as I stood in the bathroom cleaning my teeth, whether to just have an early night, or to choose a couple of toys and fuck myself silly, using one hand on the toothbrush, and gently massaging one of my tits with the other, hoping my reaction would give me a clear indication of which way to go. \n\nIt didn't really help, unfortunately. I was still wondering what to do as I lowered myself onto the toilet for the last pee before bed. I'd just touched down, when I had a fright. My son Tony had walked quietly into the bathroom.\n\n\"Hi Mom, can I talk to you?\" he said softly, as my pee came out with a swooshing noise, then splashing loudly into the water.\n\nI could tell that something must be wrong. As soon as I realised he was there, I'd kept opened my legs so he could watch me pee, which he usually loved. But although he was naked, and he was watching his naked mother pissing, his cock was almost flaccid,. More than that, though, I'd expected him to reach under me and feel my pee on his hand, or even to finger me as I was going. He seemed to be back to the confidence-lacking, geeky eighteen-year old he was before I made him fuck me for the first time, and not the confident person he had become.\n\n\"Of course you can, son. Just wipe Mommy dry, first, eh?\"\n\nTony got some tissue, and I held my labia open so that he could dry me off. I certainly knew something was wrong then. Normally, as soon as he touched my cunt, his cock would snap to attention if it wasn't already. I think it is about the best trick men have, and I love watching how something soft and wiggly can turn into something stiff and hard. \n\nNot so much men whose cocks are almost the same size but just bendy when flaccid, but men like my son, whose cocks seem so tiny and harmless, but then grow into thick, long poles when they get stiff. At least my son's cock partially stiffened, so he wasn't totally immune to the attraction of my body, but he should have been fully erect, ready to enter his mother's cunt which was always his for the taking.\n\n\"Come on, Tony. What's wrong, darling?\" I said, staying seated, but looking up into his face. \"Tell, Mommy.\"\n\n\"It's not really anything wrong, Mom. I just wanted to ask if you'd mind if Jade and I got married and we started a family.\"\n\nAll sorts of emotions went through me. To start with, a bit of sadness that my younger son was moving to his own life, and would inevitably leave me behind to some extent. He'd always been my favourite, being my last born, and being slim and nerdy so that the others made fun of him. The truth was that I probably enjoyed sex with him more than anyone else, even my husband. But then also joy that hopefully he and Jade would find happiness together, only tempered still with worry about how he would keep Jade satisfied, and off of drugs. \n\nFinally, I realised that unlike most countries, marriage between first cousins is illegal in most of the USA. I think Tony must have seen all of these things flash across my expression as I looked at him.\n\n\"It's all right, Mom. It's legal in this state, surprisingly, else we'd have just lived together, but we wanted our children's parents to be properly registered when we have them.\"\n\n\"Gosh, son, that's wonderful, but you're eighteen, and Jade older, so you didn't need to ask me, really, did you?\"\n\nI stood up, and hugged him to me, pleased to feel his cock pushing against my pussy, as our naked bodies came together.\n\n\"I know, Mom, but you've changed our lives so much in the last year, I didn't want you to think we were ungrateful, or wanted to get away from you. And ... um ... well ... given Dad's with Jade, Becky and Chrissy, um ... I wondered if I could ... um ... sleep with you tonight.\"\n\nThis was still a bit worrying, as he was seeming to be losing his confidence again. Given he'd had me in just about every possible way, and explored all of my body and its functions, I couldn't see why he hadn't just grabbed my tits, or fingered me, rather than asking permission.\n\n\"Oh, Tony. Son. You know that you can have me however and whenever you want, darling. Come on, then, if you're ready for bed, so am I now.\"\n\nI grabbed his hand, and ran into the bedroom, dragging him with me, my tits bouncing wildly. When I reached the bed, I let go of his hand, and flung myself on it, turning on to my back and opening my legs so that my son had a grandstand view of my cunt and asshole.\n\n\"Come on, son. Come and fuck your Mommy, darling.\"\n\nI was expecting, no, hoping really, for him to fling himself at me and ram his cock straight up my hole, but he didn't. Instead, he just climbed onto the bed next to me, putting his arm over my waist.\n\n\"No, Mom. Not tonight - oh, don't look like that. What I mean is that I don't want to just fuck you, but I want to make love to you. Make love to you as if I were your lover rather than your son.\"\n\nI was left speechless, feeling I ought to say something, but couldn't think what. I remembered experiencing the feeling that my younger son was my lover before, on one of the first times he'd slept with me all night, and fucked me on this very bed. It seemed dangerous then to combine romantic love on top of motherly love and the exquisite sexual satisfaction of incest with my younger son, and it seemed even more dangerous now, given that he'd just told me that he wanted to marry his cousin, Jade. Neither Jade nor I would see it as cheating if he fucked me as well as her, true enough, but I thought that he should keep his store of romantic love for his wife, not his mother. \n\nHowever, before I could make up my mind what to say, the opportunity was taken from me. Tony bent over me, and gently touched his lips to mine. I thought he would have put one of his hands on my breasts, and believe me, they were crying out to be touched, my nipples to be stiffened, rubbed and pulled. Instead, he moved his hand up to my neck, slowly sliding upwards until his thumb was gently circling my ear, and his fingers were stroking the back of my neck. \n\nThat was something Charlie used to do when he started to go out with me, and it still had the same powerful effect on me now, that it had then. A buzz shot through my body, and I just felt I wanted to give myself totally to my son, and I knew my cunt had just been lubricated with a big burst of my cum. I rolled over towards my son-lover, freeing him to move his other hand up to my other ear. I felt his tongue come through his lips, and slowly and gently lick from one side to the other of my own lips. \n\nI opened my mouth to let it explore the inside of my mouth, but Tony pulled back slightly, and instead started to gently run his tongue over my face, licking my nose, then one ear, then back again to my eye, and finally across my forehead before reversing his licking down the other side of my face. God, it felt so intimate, so personal, and so gorgeously thrilling for anyone to do this to me, let alone my favourite son. \n\n\"Turn over on to your front, Mom.\"\n\nShit, and what more appropriate expletive was there? If he was intending to fuck my asshole, he might be in for more than he bargained for, given I'd expected to be on my own, so hadn't bothered to douche myself out.\n\n\"Uh, careful, son...\"\n\n\"Shh, Mom. It's all right. Just lay flat and enjoy me touching you.\"\n\nOh, well, it was Tony, and he'd watched me do absolutely everything, so I wouldn't need to be as embarrassed as I would have been with someone else if ... well, you don't need me to spell it out, do you? \n\nTo my surprise, though, he slid down the bed and lifted up one of my feet, bending my knee so that he could suck my toes into his mouth. I'd never been someone who found my feet particularly erotic, or at least I thought I hadn't, but as my son sucked each one of my toes in turn, my cunt was telling me otherwise, tingling and leaking almost as if I was about to come.\n\nMaybe I was, but then Tony took mouth away, and instead started massaging my foot, using his thumb on my instep, and his fingers over the bridge, then moving over my heel, lowering my foot as one hand gently massaged either side of my ankle. Slowly his hands moved up, and as he passed my knee, he pushed my leg out a little. Now he certainly would have a good view of my asshole, I thought, as his hands kept travelling up my leg.\n\nPlease, please, son, put your fingers in my cunt or my asshole, or best of all, both, I thought, as his hands got closer to those intimate areas that a son's hands should never reach on his mother. I felt like bursting into tears when his hands changed direction. The one on the inside just massaged along my inner thigh, carefully avoiding my labia, and then up further, but running around the inside of my butt cheek, but deliberately just skimming past my anus. It then met up with its partner as my son massaged that side of my bum. ",
        "At least, I thought, he must be getting a good look at his mother's holes, and surely he wouldn't be able to resist at least one of them soon.\n\nIt wasn't going to be that soon, though, because his hands travelled across my butt, exploring the top of my crack, but still without touching my asshole, and he reversed the massage, starting with my other cheek, working down my leg and ending with him sucking the toes of my other foot.\n\nGod, this time I really could barely control myself. I wanted my son to fuck me so, so badly, though in truth I think I'd have fucked anyone, any number of people even who had come into the room then. Surely, surely, he'd shove his cock up me now?\n\nTo start with I thought I was right, as he pushed my legs closer together, straddled over them, and slid his body over them. I felt his cock bang against my ass, and I prepared myself for the wonderful stretching his thick cock always either one of my holes. Then I realised that yet again I was wrong, as he put his hands on my waist, and started massaging upwards. \n\nHe used his thumbs on my back muscles, just the way a professional masseuse does, then across my shoulders, rubbing the areas which always seem to suffer most when you are stressed or tense. It was wonderful, but nowhere close to sexual release I was craving.\n\nThe more he had to lean forward, the more his cock kept hitting my butt, torturing me by it not being inside me. Even so, I loved his touch, and the way that the whole of my body now seemed a peculiar combination of relaxed, but yet tingling with anticipation of more delightful sensations yet to come. \n\nFuck, after finishing with my shoulders, he went up the sides of my neck again, circling his hands around my throat as if he were going to strangle me, then his thumbs ran up through my hair. His fingers gently stroked my ears, then he squeezed my earlobes, before running both hands back down one of my arms, massaging as he went. As he bent to kiss each of my fingers, his cock pressed into my back, then again as he did the same to my other arm. I don't think I'd ever felt so pampered, so loved, so completely aroused. My son totally owned me.\n\n\"Turn over, Mom, and let me massage your front, now.\"\n\nHe raised himself up just enough to let me twist my way over. I could feel his balls hitting against my hips as I turned, and when I raised my head, I saw him smiling down at me, his cock sticking up with a trickle of clear pre-cum running down the head. That really pleased me, as it seemed he did still want to fuck his old mother. I started to say something, when he stopped me with another kiss. \n\nThis time his chest was pressing down on my breasts, and I could feel my nipples tightening of their own accord, triggering another gush of cum from my cunt, as his cock was so close to it. He broke the kiss, then massaged one arm again, kissing my fingers and my mouth as he moved to the other arm.\n\nMy tits seemed to be throbbing with anticipation as his hands moved down from my shoulders, but yet again, he deliberately chose not to touch any of my sexual parts, instead massaging down the centre of my chest. He massaged my belly, kissing my navel, which tickled, and made me giggle and squirm like a silly young girl. His mouth was so close that by that time my cunt was twitching in anticipation of his touch at long last, but he neatly massaged around the edges of my freshly regrown and trimmed pubes, before he repeated the massage of each of my legs, kissing my toes again.\n\nWhen he had kissed my second foot, he held my legs up and pulled then wide apart. The way he stared at my cunt felt almost as if he was actually touching it, rather than just looking. I was in absolute bliss. My body felt alive and tingling from my son's massage, and I was revelling in letting him see my most private parts in all their glory, the way a son should never see his mother. I wanted him inside me though, so badly it hurt all over.\n\n\"God, Mom, you're beautiful. I really do love you, you know.\"\n\n\"And I love you too, son. That was the most wonderful massage I've ever had, except you missed a couple of bits.\"\n\n\"I know, Mom. I've been saving the best until last.\"\n\nMy son smiled at me as he let my legs fall to the bed, and he moved up between them again. Please, son, please slide your cock up me, I thought, but yet again he passed up the opportunity. He leaned forward, until his cock just barely touched my pussy, and he caught hold of my breasts, one in each hand. Then he released his grip, rolling the palms of his hands over my nipples. I shuddered uncontrollably as his hands seemed to be searing hot, making my breasts feel burning and inflating, then he caught hold of them again, squeezing, so that my areolas and nipples were pushed up,\n\nHe bent down, and sucked on each of my nipples in turn, his saliva feeling as if it was putting the fire out, replacing it with something less describable, but equally powerful. When he straightened up again he moved his hands up as if he were trying to force the flesh of my breast up towards my nipples, which were tight and stiff and throbbing as his fingers reached them, and he rolled them between his fingers and thumb.\n\nSlowly he ran his hands down my chest and over my belly, pausing to kiss my belly button as his hands reached the top of my pubic hair. When he straightened up again this time, his hands continued their movement, sliding along the sides of my cunt, without actually touching my labia.\n\n\"Aagghh\" I cried, not so much from pleasure, as with frustration and lust as it seemed he wasn't going to touch my cunt at all.\n\nThis time I was wrong, though. He smiled at me, clearly understanding the effect he was having on me. Once his hands were either side of my labia, he moved them inwards, pushing my lips together, and pressing against my clit.\n\n\"Aaaghh\" I cried again, but this time it definitely was with pleasure, as all my pent-up frustration seemed to burst out of my clit, and even though it was the very first touch, I came, as if I were a na\u00efve girl coming for the very first time as soon as a boy touched me.\n\nI could see from the look on my son's face that the bastard was enjoying the most unbelievably delicious suffering he was making his mother endure, and as I twisted and squirmed around, he took no notice, but just kept pulling my labia apart, then pushing them back together to crush my clit as hard as he could. It was simply wonderful: the combination of the feelings racing right through my body; the knowledge that my son was watching every detail of his mother coming in front of him, and that he could see, smell and hear the sticky, translucent cum that was flooding out of his mother's vagina.\n\n\"Turn over again, Mom.\"\n\nShit, I had been just about to come again, but I turned over on to my stomach, just as my son had asked. He put his hands on my butt cheeks and pulled them apart. I could hear a sort of crackling noise between my legs, as my cum pulled apart across my vagina, and I knew that my son now had a close up view of his mother's asshole and sticky cunt. Not for the first time, of course, but it still sent a thrill running through me. When his hands started moving again, this time he not only massaged my butt, but ended up running his fingers around the ring of my anus.\n\nFuck, I wanted him in me. Any of him would do, certainly his fingers, but ideally his cock, which from time to time banged against my thigh, and in any hole he wanted. At last, I felt something pushing into my vagina, then my asshole, and then I felt my clit being teased and rubbed again. I realised that what he had done was to put both thumbs inside my cunt, and two fingers from one hand into my anus, while the fingers on the other hand did a wonderful, exciting and complicated dance on my labia and my clit.\n\n\"Aaggh\" I yelled once more, as I came from the gorgeous finger and thumb work between my legs. \"Please, son, please fuck me now. I want your cock deep in my cunt, and your spunk filling my vagina. Please.\"\n\n\"You're such a fucking slut, Mom, aren't you?\" \n\nGod, I was. Who'd have thought when I gave birth to my last baby, that eighteen years later I'd be begging him to fuck me? It wasn't dignified, and certainly illegal, but at that moment I just didn't care. I just wanted my son's prick ramming into my cunt until he came inside me.\n\nI felt like crying as my son's fingers came out of my holes, but I was kept aroused by the hope that his cock would take their place in my pussy. Tony pulled me back onto my side, then slid his lower leg under my lower leg, and his upper leg he put over the top, moving my upper leg over his hip. Oh yes, I recognised this scissor position, one I used to love with Charlie when we were first married, because it allows one of the deepest penetrations into me.\n\n\"Aagghh\" I cried out again, as my son's thick cock sank itself into my cunt, not stopping until my vagina would stretch no further.\n\nHe locked his legs around my lower leg, his balls banging against it as he started thrusting in and out of me. He grabbed my hair, and pulled my head back so he could nibble my ear, and he put his other arm over me, and started playing with my tits.\n\n\"Come and play along with me, Mom,\" he whispered in my ear, and I moved my hand over to join his on my breast.\n\nOh, God, it was a marvellous feeling as we rolled my nipple between our two hands. Then I pulled it up as hard as I dared, and my son squeezed hard on my stretched areola, making me gasp with the sharp pain, followed by a shaft of pleasure which joined up with the wonderful sensations in my cunt as my son rammed in and out of me.\n\nI'd loved my son playing with my tit with me, but then he drew my hand down over my body, pushing it against my cunt, and opening up my labia so that our fingers touched together on my clit. Between us we rubbed and pinched it, then we slid them back along my slit to feel my son's wet shaft pumping in and out of my hole. Oh fuck, I loved my son and I playing with my clit even more than my nipples.\n\nWe both knew that either of us might come at any moment, but neither of us wanted to. The delights of hanging right on the edge were so powerful, that we both wanted to enjoy them for as long as we could. My belly felt full of my son's cock, and my skin was tingling all over, as he kept kissing my neck and ear, and together we paced the tempo of his thrusts into me, and our playing with my clit.\n\nFucking hell, it was good. It was fucking, but I realised it was far more than that. We were truly making love, the way I had with Charlie when we were younger, and which we had started to do again recently, after years of drifting apart physically. I could see why Jade wanted to marry my son, and as stupid and impossible as it was, at that moment I'd have agreed to marry him myself if he asked.\n\nIt was ecstasy, but like all good things, it had to come to an end. I guess I pressed my clit a little too hard against Tony's fingers, and I felt myself coming, feeling as if I was falling over a cliff into a bottomless ocean. My clever little son spotted what was happening, maybe even before I did myself. He started pumping in and out of me harder and faster, and as I fell over the edge, I felt his balls switching, and I knew that at last my vagina was being pumped full of my son's spunk.\n\n\"FFUUUUUUUUUUUUUUUCK!\"\n\nIt felt as if I had hit the bottom of the ocean. I could barely get my breath, my limbs felt as if they had been torn off me, and my cunt felt as if it was exploding, flying in every direction. If it wasn't the best orgasm I'd ever had, it was certainly close. As I came down, Tony's cock slipped out of me, and I started to turn around to face him. Shit, while I'd expected to see ecstasy on his face as well, instead I saw a tear running down his cheek.\n\n\"What on earth's wrong, son? Didn't you enjoy making love to your Mommy the way you had thought you would?\"\n\n\"No, Mom. It was wonderful. It's just that I suppose you won't want me fucking you once I'm married, will you?\"\n\nI was tempted to say he couldn't fuck me, but he could certainly make love to me like he just had anytime he liked, but I knew how sensitive he can be, and didn't think he'd take it as a joke.\n\n\"Look son, you've seen what a slut I've become, and I certainly intend to keep on fucking everyone in the family, including you. As long as Jade doesn't mind that is, and anyway, you're the only one who has ever made love to me like that, except your father. But surely you'll be kept busy keeping your new wife satisfied, so you won't have time for your old mother?\"\n\n\"Mom, you were the first woman whose body I ever entered, and I'll always have time for you. But you're right. It's so annoying that Jade got banned from that online site, especially as we keep getting hundreds of messages from people wanting to see more. There's a massive demand for incest, as you can see from the amount on porn sites that claim to show it, but it's obvious that the people fucking aren't really related at all. It seems that lots of people are after the real thing, but we can't give it to them.\"\n\n\"Wait a minute, Tony. If there are lots of people wanting to watch real incest, surely you've told me that there's a dark web or something. If you've got the contacts, with all your computing knowledge, couldn't you set something up that was secure, and which people had to pay to access? I mean, I think all of our close family would be up for it, and we could show pictures of you kids growing up, so people could see you really are what you claim. I bet I could get Gran and Grandad involved, and once we've fully joined the rest of the family, maybe we could bring in everyone else as well?\"\n\nThe silence was deafening. My son just laid propped on his elbow, looking at me, his cock, like my cunt, leaking onto the bedclothes.\n\n\"What? Have I said something stupid?\"\n\n\"No, Mom. It's brilliant. Why didn't I think of it before?\"\n\n\"Well, I'm not just a cunt on legs, darling, I do have a brain as well.\"\n\n\"But you are a cunt, and you do have legs, Auntie Susan. Or should I call you Mom now? I can barely tell you apart, anyway.\"\n\n\"Jade! What the hell are you doing? I thought Charlie was fucking you, your Mom and Becky?\"\n\n\"Oh, he fucked me once, but it seems that I'm already too old for him, so I left him with Mom watching him screw Becky in every hole. I knew what Tony was planning, and I've watched the recording from the camera on fast forward, then was going to come in when Tony came in you.\"\n\nShit, I'd forgotten yet again that all of the rooms were connected into Tony's computer.\n\n\"You know, I think it really could work ...\"\n\nTony started muttering about VPN's and spoofed severs or something, and Jade and I just tuned him out.\n\n\"I guess you can call me Mom, now, Jade. If Tony can get this going, that and a baby should keep you out of mischief, surely?\"\n\n\"I still think I'd need a good fucking by someone else sometimes, though, Mom. And talking of fucking, I think you have something in you that belongs to me, and I'd like it back. I'm also sure Becky didn't clean me out as thoroughly as you do, so there's probably some of your husband in me as well.\"\n\nWe pushed Tony over to the side of the bed, still muttering to himself, clearly taken over by working out how to set up a private streaming service, and we lay down beside him, our heads between each other's legs, cleaning the spunk from each other's cunts. She was right. I recognised the taste of my husband's spunk mixed with the beautiful flavour of her own, spicy slime from her vagina, having eaten so much of it over the years. \n\nThese days, though, it seemed I only got it out of some other woman's cunt after my husband had fucked her, rather than getting it direct from the source. It still turned me on, though I wished I had watched him deposit it inside Jade's vagina. \n\nJade's tongue felt unbelievable on my clit, though, licking along my vulva, lapping around my fuck hole and my asshole. My son had made love to me, but while I'd expected Jade to just be a great fuck, I realised that after my son had said he wanted to marry her, I'd started to feel love for my niece as well. But did she see me just as a fuck to take the edge off her constant lust for sex? I didn't care, as her tongue sucked my son, her future husband's sperm out of me, and we took each other to the edge of what I knew was going to be another amazing climax.\n\nIt was. Jade and I rolled around on the bed, filling each other's mouths with our cum. We banged into Tony, who took no notice, his lips still moving as he worked out whether my idea would ever work. When we calmed down, Jade swapped her position, and we kissed each other on the mouth, mixing our cunt juices together.\n\n\"I love you, Mom 2,\" she said. \"First you saved me from heroin, even though your husband had been fucking me as a whore behind your back, and now you give me your son as my husband. Thank you.\"\n\n\"I love you too, Jade. I'll be proud to have you as my first daughter-in-law. I notice, though, that despite all I've done for you, you're still fucking my husband, though.\"\n\nJade pulled back, shock and fear on her face. \"Oh, I'm so... Shit, you're joking, aren't you?\"\n\nWe hugged together, laughing. \"Of course, darling. I'm as big a slut as you, and I want to fuck everyone in the family, so it seems only fair that we let each other's husbands screw us, doesn't it?\"\n\nWe cuddled together, leaving Tony still muttering to himself as we drifted off to sleep in my big bed, pretty sure that my husband would be sleeping with my sister, and my other, even younger niece. \n\nWhen I woke up in the morning, Tony had already left and gone back to college. When I went to pee, leaving Jade still asleep in bed, I found that I'd started to come on. Given the way we lived together, I knew that Jade and Chrissy would have started their periods as well, and when Jade woke up, I saw that I was right. \n\nAt least I thought this would give everyone a bit of a break keeping Jade satisfied, as her appetite wasn't as strong when she was on. On the other hand, given Tony had fucked me when I was on, I was sure he wouldn't worry about a bit of Jade's blood either. When Tony came home, though, he was bursting to talk to us, and I doubt even Jade could have got his attention.\n\n\"I've worked it out! I know how we can set up a site on the Dark Web, keep everything secret, but also charge people for viewing proper incest online. Becky and I can get it up and running within a couple of days, I think. I'll contact the people who bought Jade's material in the past, and who wanted to see her brothers fucking her again, and we can try out some video links we already have.\"\n\nHe went on with a lot more detail about VPN, blockchain for collecting payments, proxy servers and a whole load of other terms that I'd heard before, but hadn't understood. Jade, Chrissy and I rapidly stopped listening, and started discussing what we could set up. I claimed the lead role of scripting what we'd put on the site, though with protests from the other two.\n\nOver the next few days, Becky did a lot of the technical set up while Tony was at college, though she was also spending a lot of time in Charlie's company, sorting out their security after her and Tony's little start-up had been given the contract. My sister and her daughter worked with me on designing the site, and starting to map out what material we could put together. When Tony came home, he spent the evening editing the material he had captured on the spy cameras he'd put around the house. \n\nI'd forgotten all about them, and though they just had a fixed position, some of the material was really hard core. Michael bribing me to let him fuck me, for example, then my two sons fucking me in both holes, then together in my cunt. Then me and my daughters fucking, followed by my two sons fucking their sisters.",
        "Chrissy and I had collected together as many photographs of us growing up with our parents and our brother, and then of our own families growing up, and we'd set Brian and Ingrid to dig out theirs as well. Becky loaded these on to the website, more than anything to show that we genuinely were family members, so having sex truly was incest, not like the many fakes available on ordinary porno sites. \n\nWe each also did an interview to camera, during which we stripped and showed off every detail of the private parts of our bodies. We were careful to call our pussies 'cunts', as well, as women seem to duck the word even in most hardcore porno, and we knew that it would get attention. \n\nTony sent out teasers, and we posted shortened versions of the clips and interviews on the site, so that anyone who found it could see them for free, with what we hoped showed just enough to catch everyone's attention, but not to devalue the unedited content. Tony also sent out invitations for people to subscribe at $20 for a year, and the unedited incest clips were then available for $10 each. \n\nThe strange thing was that Chrissy, Jade and I were totally occupied in thinking about how we would sell incest sex to the world, to the extent that we actually had much less sex ourselves than normal, even on our periods. Tony was busy editing, Charlie mostly was away on business, or more likely trying to seduce his secretary who he said had to join him on this trip for some reason, Becky was away, and when Tony came back, he spent all of his time working on the clips and the website. We bloodied our rabbits in each other a couple of times, and that was it. Still the prospect of streaming us fucking our family was exciting all of us.\n\nI was laid in bed near the end of my period, dreaming up alternative incest stories, all involving me getting fucked in front of the camera. I was drifting in and out of sleep as ideas came and went, when I heard Charlie come in.\n\n\"Wake up, Susan. I've got a present for you - suck my cock, darling.\"\n\nI suppose it was where I was half asleep that I didn't really think about what I was doing, but just obeyed my husband straight away. As my face approached his stiff cock, I didn't even need to taste it to know what he had done.\n\n\"You've just fucked that new secretary, you bastard. I can smell her cunt ...\"\n\nI didn't get to finish the sentence, as Charlie put his hands behind my head and forced his cock into my mouth. It was another of those confusing moments. On the one hand, I could feel growing anger that my husband had cheated on me again, with a girl only just on the right side of legal, and this time not even in my family. On the other hand, though, the delicious taste of another woman's cunt, one I'd not tasted before, sent shivers through me. I felt that familiar tingling between my legs, and I remembered how many days it had been since I'd had a really satisfying climax. I knew Charlie didn't really like fucking me when I was on, and a wicked plan to reconcile both feelings came into my mind. I pushed my husband away from me.\n\n\"God, Charlie, if her cunt felt as good as it tastes, she must have been fantastic. Lay on the bed, and let me suck you off, so I can get as much of the taste her as much as I can.\"\n\nSilly boy, he must have been so pleased with himself at filling his secretary's vagina that he didn't spot my trap. It seemed he'd completely forgotten that the three of us women were all on, which was partly why he had been spending so much time away this week anyway. He got on the bed, and lay there, his cock throbbing, glistening with my saliva. \n\nI knelt next to him, and bent over, taking his cock as far down my throat as I could manage. By this time, my cunt was aching and tingling, my clit needing desperately to be toyed with. I knew that this would mean that my cum would be flowing, and I dreaded to imagine what a mess of blood and cum must be filling my slit. I pulled back so Charlie's cock came out of my mouth, and as I swung my leg over his face, I let him know exactly what was going to happen.\n\n\"You fucking cheating bastard, Charlie. Yes, you've told me about it as you promised, but you still deserve punishment. So eat out my bloody cunt.\"\n\nI heard Charlie gasp and start to protest, and his hands moved to push me away, but he was too late. Oh, I was going to enjoy this. I'd learned to endure the pain, hassle and smells of my periods, and more recently those of the rest of the women in my family, but I still didn't like the smell of menstrual blood, and I could only imagine just how horrible it would be to have to taste it.\n\nI put my head back down to capture my husband's cock, and I moved it up and down, letting him fuck my face, taking him so far down my throat that I could feel his pubes and balls against my lips. I could still taste the spunk that had dried on his shaft, mixed with the sweet, floral scent with its underlaying musk, of the secretions from his secretary's cunt as he fucked her.\n\nIt was gorgeous, but so was what was going on at the other end between my legs. I was grinding my pussy against Charlie's face, rubbing it along my slit, and wriggling around so that his chin, nose and lips all in turn stimulated my clit. God, I knew I must have tasted horrible, but I was going to make my husband put up with it until I came and he filled my mouth with whatever spunk he had failed to deposit in his secretary.\n\nTo start with, I could feel Charlie resisting, trying to move his mouth and face away from my dirty cunt, but then I felt a change. Shit, he must have decided to go with it. Surely not? But then I could feel his tongue lapping along my vulva, as if it were filled only with my fresh, tasty slime. God, he must still love me, surely, if he'd do that? And at the same time, I realised how much I really still loved the cheating bastard. He might prefer his secretary's vagina, but I was going to give him the blow job of his life.\n\nI moved my head up and down over Charlie's cock. Sometimes I let it almost completely come out of my mouth, and I used my teeth to tease the edge of his helmet, then I forced my head right down until his cock was way down my throat. I could feel him getting more excited, and whenever I felt him too close, I held him down my throat, feeling his cock twitching as it sought the additional friction to trigger his climax. \n\nI was right on the edge myself, but Charlie, whatever his faults, knew how to keep me there, and he didn't seem now to worry about the taste of my blood in his mouth. The longer we kept each other on the very threshold of coming, the more I felt I loved him, and remembered how it had been in the good times, before I found out he was cheating, and the aggro from the children gave him an excuse to stay away.\n\nI don't know which of us it was that got it wrong. I certainly hadn't intended him to come, but as my hips bucked up and down on his face as I came, I felt my husband's sperm jet down my throat, and I had to lift my head to catch it in my mouth. Maybe she'd only let him fuck her once after all?\n\nWe gradually calmed down, and I moved my leg so I could turn and look at him. His face was wet, smeared all over with streaks of my menstrual blood. I could smell it as well as see it, and I almost lost my courage to carry through what I had planned. \n\nI bent forward and kissed my husband. The taste of my blood was as bad as I'd imagined, but I concentrated on sensing the other scent of my cum, which I'd learned to love years ago. I pushed my tongue out, and licked over his lips, and he opened them, and let me push into his mouth. I let a glob of his spunk fall into his mouth, and we shared the awful, wonderful taste of his sperm, my cum and my blood. We hugged, and held the kiss, knowing, but enjoying, just how disgusting what we were doing was.\n\n\"God, Susan, you are such a dirty slut. I really do love you, even if ...\"\n\nI didn't want to think about the 'even if' bit, so I kissed him again, and I knew that my own face would now be covered with my monthly flux as well as his.\n\n\"I love you too, Charlie. You know, we probably deserve each other, don't we? A cheating bastard and a dirty slut. Let's have a shower to clean up. I'll bring you up to date on where we've got with the streaming site before we go to sleep.\" \n\nThe next day, we started to get the first feedback from the emails Tony had sent to Jade's followers. We had no real idea how many people might sign up. Jade could get up to 20,000 viewers when she was online, but we had no real idea how many people were prepared to pay more for mothers and fathers fucking their sons, daughters, sisters, brothers, nieces and nephews, and cousins fucking cousins, brothers and sisters.\n\nThings started slowly, but just kept building and building. A lot of it must have been word of mouth, or maybe there was a dark incest social media site we weren't aware of, which sounds only too likely. After a few weeks, we had over one thousand subscribers, and we'd taken almost as much for access to views of the full videos of my children fucking me. We still had more clips Tony could edit from the hidden cameras, and we also had loads of requests for what people wanted to see.\n\nYes, we were in business! Now to develop the scripts and to film them in much higher quality. My cunt was going global!"
    ],
    "authorname": "Clivelive101",
    "tags": [
        "bdsm",
        "incest",
        "taboo",
        "lesbian",
        "non-consent",
        "lesbian sex",
        "non-con",
        "noncon"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/keep-it-in-the-family-pt-10"
}