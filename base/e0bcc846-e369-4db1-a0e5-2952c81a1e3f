{
    "title": "Reflections on Ice Ch. 04",
    "pages": [
        "Dylan's heart hammered against his ribs for several minutes after he left Cassia's side to join his team on stage. He sought her out each time he looked into the crowd, but it was a full room and he couldn't be sure of where exactly the table had been. Or what had happened a few minutes before.\n\nHe lifted a hand and rubbed his face, feeling warm under the collar. Man, she must think he was a grade-A fool. She'd just been messing around and he'd nearly kissed her. He couldn't let it happen again. This was a temporary agreement, between friends. He had no business expecting any more from her.\n\nApplause erupted as the general manager announced the final total for the charitable donation for the night. Dylan clapped his hands and smiled, glad the event had gone so well. Then he and the other players started to file off the stage.\n\nJake nudged Dylan with a hand. \"Do you and your girl want to come play poker over in that corner?\"\n\n\"I have to go find her.\"\n\nTristen, on Dylan's other side, laughed and slapped a hand to Dylan's shoulder. \"You lost her already? Is that because you said the wrong thing?\"\n\nDylan turned a scowl on his teammate.\n\n\"Or because you said nothing at all?\" Tristen laughed at his own joke.\n\nJake rolled his eyes and shoved Tristen off-balance. \"Don't listen to him, Sams. Go get Cassia and bring her over. We'll save you guys a couple spots.\"\n\nDylan nodded and wound his way through the crowd. He was stopped numerous times to shake hands, take a few pictures and sign a few autographs. Normally, he didn't mind. It was what was expected of the players at events such as this and it's how they managed to raise so much money. But when he stopped for the tenth time, within sight of the table he'd left Cassia at, he was ready to tear his hair out.\n\nThis time, when someone touched his arm to stop him, he had a difficult time not letting his frustration show. Then he realized it was a young woman and her friend, both smiling and insisting they take pictures with him.\n\n\"I'm just such a huge fan.\" The first one pressed up to his arm and stood on her toes to bring their faces closer together as she held her phone up with one hand. She snapped a picture before Dylan even had a chance to react. \"Oh, you're not smiling!\" She giggled, giving his arm a light smack.\n\n\"Oh, sorry.\" He cleared his throat and tried to smile.\n\n\"We have to do it again.\"\n\nWhen she moved close again, she slipped an arm around his and turned her body so he felt her curves against his side.\n\nDear lord, what the hell is she doing?\n\nHe tried to focus on the phone and smile, but he caught sight of Cassia moving towards him. She spotted him there with the two young women and stopped. A second later, a smirk curved her lips and she strode forward.\n\n\"There you are, baby.\" She walked right up to his other side, slid her hand into his and put her other hand on his face, drawing him down to kiss his cheek. \"I've been looking for you all over.\"\n\nThe girl on his other side dropped back, a sour look on her face. \"Oh, is this your girlfriend?\"\n\nDylan glanced at the girl before looking over at Cassia. Cassia grinned back, still holding tight to his hand, though her other hand had slid down to that top button on his shirt. She played with it, her fingers brushing the skin of his neck. Suppressing a shiver, he turned back to the young woman.\n\n\"Yeah, this is my lady, Cassia.\"\n\nCassia laughed and Dylan felt her warm breath. \"Lady. I just love when he calls me that.\"\n\nThe girl offered them a tight smile, before she flipped her hair over her shoulder and wandered off through the crowd.\n\n\"Boy, Samuels. You are a sitting duck with these women, aren't you?\"\n\nDylan laughed and nodded. \"Thank you for saving me.\"\n\nCassia hadn't let go of his hand yet but she moved back so he could see her face. \"Seems like the event is a huge success.\"\n\n\"Yeah, it is.\" Then he remembered Jake's offer. \"Do you want to go play poker with some of the guys?\"\n\nHer grin widened. \"Poker with the Dallas Stars? Yes, please.\"\n\nDylan tugged her through the crowd, not letting go of her hand either. They stopped for a couple drinks first at the bar, and then found his teammates at a poker table in one corner of the room.\n\n\"Cassia! Come sit with me.\" Tristen patted the empty chair beside him.\n\n\"Uh, I think I'll take this chair.\" Cassia pulled the one out between Paul Scott and Jake. She set her drink down and looked up as Dylan hesitated. \"Aren't you going to play?\"\n\n\"I've never been much good at poker.\"\n\n\"Come on, Sams.\" Tristen patted the chair beside him again. \"We'll go easy on you.\"\n\nDylan sighed and moved around the table to take the chair. It put him right across from Cassia, so it wasn't all bad. She grinned as Jake started to deal.\n\n\"Of course, it's Texas Hold 'Em.\"\n\nThe players around the table laughed and clapped. A few people stood around behind the chairs as well, and Dylan felt more than a little self-conscious. But as the cards were dealt, and everyone started to place bets, he relaxed. He'd played the game for years, with teammates and his friends back home, so the rules didn't worry him. He'd never been good with reading people. He, on the other hand, was an open book, or so he'd been told.\n\nThree hands in, he was almost out of chips, and decided to put himself out of his misery. He eyed his three of hearts and five of spades and shoved his remaining chips into the middle. \"All in.\"\n\nTristen chuckled and matched his bet. The others around the table did the same. When Dylan looked up, Cassia was staring back at him.\n\nShe chewed on her bottom lip for a second before dropping her cards. \"Fold.\"\n\nDylan didn't know why she'd done that. She'd been doing really well so far, her pile of chips easily triple his own. She shrugged at his look and he smiled. He didn't care, really. He was having a good time and hoped she was.\n\nThe hand ended a minute later and Dylan threw up his hands. \"Someone had to be first.\"\n\nThere was laughter as he pushed back from the table. He circled around to Cassia's side, bending close while Paul shuffled and dealt the hand. \"Do you want another drink?\"\n\nShe looked over her shoulder at him, their faces close. \"I don't think I should. This is a serious game.\"\n\nJake chuckled. \"It's only serious if you want it to be.\"\n\nCassia glanced at him before reaching for her chips. \"Who's ready to up the blind?\"\n\nSomeone whistled, and then Jake grinned, tossing in his chips for the big blind. \"I'm in. Let's dance, sugar.\"\n\nDylan couldn't help but laugh and straightened, content to watch Cassia play.\n\nThe next several hands disposed of three more players around the table, leaving only Cassia, Jake, Tristen, and Paul's wife, Alice.\n\n\"Paul, help me.\" Alice tugged his hand and brought him close. \"I don't know what to do!\"\n\nThere was laughter and some razzing from the others at the table.\n\n\"There's no helping in poker.\" Tristen waved a hand in protest. \"Get away, Scott!\"\n\n\"Shove it.\" Paul flipped him off as he leaned over his wife's shoulder to lend advice.\n\nDylan, who'd been hovering around on Cassia's side of the table, took the momentary lapse to bend closer. \"Do you need my help?\"\n\nCassia turned with a laugh. \"You're very sweet to offer, but I got this.\"\n\nJake scoffed beside her. \"Put your money where your mouth is. You're big blind.\"\n\n\"Cool your jets, Brown. You'll get what's coming to you.\"\n\nDylan laughed and straightened. No, Cassia didn't need his help. He supposed growing up with three brothers and working her whole life in a garage had taught her how to deal with all kinds of men.\n\nJohn nudged him with an elbow. \"She's a shark, man.\"\n\nDylan grinned and nodded.\n\n\"Don't ever let her talk you into strip poker.\"\n\nFor a second, Dylan couldn't think of a response. A burst of laughter from the table drew his attention, saving him from replying to John.\n\nAnd just like that, it was over. Cassia shot to her feet, handfuls of chips scattering everywhere in her excitement. Everyone laughed as she tossed a couple towards Jake. \"Here you go, sugar. Why don't you buy yourself something pretty?\"\n\nJake scowled, pocketing a chip even though they were worthless, but he broke into a smile a moment later. Standing up, he extended his hand towards Cassia. \"Well played, Cass. Well played.\"\n\nCassia shook his hand, the grin on her face the whole time. Then she turned to Dylan and launched herself at him. Startled, he caught her against his chest as she wrapped her arms around his neck. His teammates eyed him with knowing smiles as he hugged her back.\n\nStepping back, Cassia looked into Dylan's eyes, and he could see she was still wound up from her victory. \"That was so much fun. It reminded me of all the times I'd beat my brothers when we'd play games.\"\n\n\"I'm glad you enjoyed yourself.\" He hoped she didn't notice the waver in his voice. God, she'd felt so nice pressed up against him.\n\nShe nodded and pulled away, looking around. The table was filling with a new set of poker players, eager to win their own piles of the toy chips, and some people had wandered off for drinks.\n\n\"Should we move on to the craps tables now?\"\n\nDylan laughed. \"If you want, we can.\"\n\nCassia's gaze shifted around the room once more and she shrugged. \"I don't think my luck would be as good.\"\n\n\"Do you want something to drink?\"\n\nShe shook her head. \"No, I've had enough, I think.\"\n\nDylan glanced around and leaned close. \"If you want, we can leave. I don't think anyone would notice.\"\n\nHer eyes came back to his. \"Are you sure? I don't mind staying a little later.\"\n\n\"No, it's fine. I don't have to stay for anything else. I've done my part.\"\n\nShe smiled. \"What, when you stood on stage for the speeches?\"\n\nHe nodded.\n\n\"And you did it so well!\"\n\n\"Yeah, yeah, yeah.\" He gave her a playful push, in response to her teasing tone. \"You want to leave or not?\"\n\n\"I guess we can go. I do have to work in the morning.\"\n\nDylan nodded and took her hand as he turned to lead them through the waning crowd. They said 'good-bye' to a few people on the way, retrieved her coat, and headed outside to the valet stand. The drive home didn't take long, and Dylan walked her up to her door.\n\n\"You don't need to walk me right to my door.\"\n\nHe shrugged. \"I just want to make sure you don't start to fall asleep like last time.\"\n\nShe rolled her eyes. \"I was way more drunk that night.\" She shot him a narrow look. \"Thanks for reminding me.\"\n\nHe laughed. \"It's what friends are for.\"\n\nShe paused, her keys rattling in her hand, as they reached the door to her apartment. Turning, she smiled at Dylan, and he smiled back, shoving his hands in his pockets to keep from reaching for her. He might not have great luck meeting women, but he knew what followed when a man walked a woman to her door at the end of a date.\n\nExcept it wasn't a real date.\n\n\"I had a great time. It was a lot of fun meeting all the hockey players I've been watching for years.\"\n\n\"You should come to a game.\"\n\n\"Really?\" Her eyes widened for a second, and then her expression sobered. \"I wouldn't have anyone to go with.\"\n\n\"None of your friends would want to go?\"\n\nShe sighed. \"They might, but then they'd spend the night asking me all kinds of questions.\"\n\n\"What about your mom? You said you watched with her all the time when you were growing up.\"\n\nShe frowned. \"Yeah, well, I haven't really been speaking to her.\"\n\n\"Oh, right.\" Dylan nodded, recalling what she'd told him about the family dinner. \"Well, some of the girlfriends and wives would be there. You met some of them tonight.\"\n\nShe looked at him, a small smile curling her lips. \"Are you just trying to get me to a game so you can show off for me?\"\n\nHe scoffed but he could feel his ears heating up. \"I don't need to show off. You already think I'm a superstar, right?\"\n\nShe grinned. \"You bet.\"\n\nThey fell silent, grinning at each other. Dylan flashed back to that brief moment earlier when he'd felt her breath on his lips, and his smile slipped. He cleared his throat and rubbed his neck with one hand.\n\n\"So, should I come pick you up on Sunday for the cookout?\"\n\nShe blinked and nodded. \"Oh, yeah. We should definitely arrive together for that.\"\n\n\"OK. What time?\"\n\n\"Around five, I think. Since it's Sunday, it won't be a late night.\"\n\n\"Sounds fine. I'll see you then.\" He turned to go, getting himself away from her before he let himself think it was a real date again.\n\n\"Dylan, wait.\"\n\nHe turned to face her. She opened her mouth, then closed it, taking a step towards him. He waited, his heart beating double-time.\n\n\"Uh, have a good game tomorrow night.\"\n\nHe smiled and nodded. \"Will do. Have a good night, Cassia.\"\n\n\"Good night.\"\n\nHe turned and left then, hurrying down the stairs and out to his truck. After he slid behind the wheel, he didn't start it. He sat there for a long minute, his eyes on the steps leading up to her apartment. Damn. This was going to be a lot harder than he thought. Had he made a huge mistake in agreeing to pretend?\n\nWith a sigh, he jammed the key in the ignition and drove away.\n\n****\n\nCassia didn't speak to her brothers at work the next morning. She worked her four hours and went home before anyone could corner her and ask her about her date. Although, after her outburst the day before, she didn't know if anyone would have the balls to question her on it so soon.\n\nAt home, she cleaned up, made something to eat and flipped through the newspaper Kyle had left on the kitchen table. She saw that he'd circled a few jobs ads, and a few places to rent as well. She smiled, thankful that she didn't need to start needling her brother about finding a place. She knew he must be as miserable sharing her cozy apartment as she was. On the other hand, it was nice having someone around to talk to, and she had always been close to Kyle.\n\nHer phone rang, bringing her out of her reverie.\n\n\"Help!\"\n\n\"Janis? What's wrong?\"\n\n\"Carol just broke up with Brad and she's drunk.\"\n\nCassia sat up straight, her wide eyes going to the clock over the stove. \"It's two o'clock in the afternoon.\"\n\n\"I know! I took her to lunch to talk and she drank two martinis in ten minutes. And that was just the start.\"\n\n\"Oh jeez.\" Cassia shook her head, already on her feet. She headed for her room to change out of her sweats. \"Where are you guys?\"\n\n\"Tapley's. She came down here to meet me on my break, and my boss is calling me every five minutes, asking when I'll be back, but I can't just leave her here.\"\n\n\"I'm on my way. Five minutes.\"\n\n\"Oh, bless you, Cass.\"\n\n\"See you soon.\"\n\nCassia ended the call and tucked her phone in her back pocket. She changed shirts, pulled her hair into a ponytail and grabbed her keys from her dresser before heading to the front door.\n\nShe passed Kyle on the way out and left the door open for him, but didn't stop. \"Can't talk. Drunk friend.\"\n\n\"It's two o'clock in the afternoon.\" Kyle's surprised voice echoed down the hallway, his reply making Cassia laugh. They were more alike than she cared to admit.\n\nShe drove, even though Tapley's was only a short walk away. She'd need to drive Carol home and Carol's place was across town.\n\nInside Tapley's, it took a minute for her eyes to adjust, and then she heard Janis call her name. Waving a hand, Cassia hurried through the bar to the table her friends occupied.\n\n\"Cassiaaaaaaa!\" Carol threw her arms up in the air at Cassia's approach, her drunken greeting carrying on for far longer than was decent.\n\nCassia bent down to accept her friend's hug. \"Hi, Carol. How are you?\"\n\n\"I'm fine.\" She waved a dismissive hand as Cassia sat down in the chair between the other two. \"I'm so happy you're here. We're celebrating.\"\n\nJanis shot Cassia a look. \"She's insisting it's a time for celebration.\"\n\n\"It is!\" Carol slapped her hands on the table. \"I can do way better than Brad.\"\n\nCassia nodded, though she wasn't sure she agreed. She'd known Brad for a while, and she'd always liked him. He was friendly, smart, had a steady job, and had always shown his affection for Carol any time Cassia saw them together.\n\n\"And now you and I can go to the wedding together!\" Carol grabbed Cassia's hand, squeezing hard enough to crack a couple knuckles.\n\nCassia figured this wasn't the best time to remind her about Dylan and extracted her hand with a wince. \"I think it's time we all got out of here.\"\n\n\"Good idea.\" Janis hopped to her feet.\n\n\"But we haven't paid yet.\" Carol's head swung around, as if seeking the waiter.\n\n\"I paid already, sweetie.\" Janis took hold of one of Carol's arms. \"When you were in the ladies room.\"\n\n\"Oh, OK.\"\n\nWith Cassia on her other side, they managed to get Carol to her feet and pointed towards the door. Carol chattered on between them, going on about the meal first, then the weather, before moving on to how men were all bastards.\n\n\"They're not all bad,\" Cassia felt compelled to reply. Even if she was play-acting with Dylan for the next month, she knew he wasn't a bastard.\n\nCarol didn't want to hear it. \"Yes, they are. You've had it right for the last year, Cass. Being an independent woman is the way to go.\"\n\nJanis shot her a look over Carol's head and Cassia realized Carol was starting to slip out of their grasp. Tightening her hold, Cassia pushed open the big main door and they got Carol out onto the sidewalk. It was s short, stumbling walk to Cassia's car, but somehow, they got her buckled into the passenger seat.\n\n\"Oh my God.\" Janis held her head in one hand, her shoulders heaving from the effort. \"I'm so sorry, Cass.\"\n\nCassia shook her head. \"Don't worry about it. I wasn't doing anything.\"\n\n\"No, but I have no idea how you're going to get her inside once you get her home.\"\n\nCassia glanced at Carol, who was playing imaginary drums on the dashboard now. \"I'll figure something out. Maybe Cole will be home and can help.\"\n\nJanis laughed. \"I'm sure she'd love that, having her hot neighbor see her like this.\"\n\n\"She should have thought about that before she decided to drown her sorrows so far from home.\"\n\n\"Oh, she's a mess, Cass.\" Janis sighed. \"She didn't tell me everything before she got too drunk, but it wasn't good.\"\n\n\"Did he cheat on her or something?\"\n\n\"No, but they had a nasty fight last night and he packed all his stuff and left. Then, this morning, she woke up to find that he'd left a box of all her stuff on the front porch for her. Brought it over in the middle of the night.\"\n\nCassia blew out a breath. Carol and Brad hadn't been living together, but they did have belongings scattered at each other's places, as all long-term couples did. \"Damn.\"\n\nCarol tapped on the window, and they looked over in time to see her put her lips to the glass and blow, her cheeks puffing out.\n\nCassia looked back at Janis, who had her lips pressed together. \"Don't you dare laugh.\"\n\nJanis gave her a quick hug, hiding her face, and bolted with an enthusiastic \"Thank you!\"\n\nCassia watched her go and steeled herself to drive Carol home. Inside the car, the scent of Carol's overindulgence was a bit overwhelming and Cassia put her window down as she started to drive.\n\nFor a few miles, neither of them spoke. Cassia watched Carol out of the corner of her eye but her friend was occupied with tapping some rhythm on the door handle and humming off-key.\n\n\"You know, I always knew Brad wasn't the one.\"\n\nCassia started, not expecting Carol to speak. \"Oh?\"\n\n\"Yeah. He was too stuffy.\" Carol turned in her seat to face Cassia. \"I want someone fun, and sexy.\"\n\n\"You used to think Brad was sexy.\" Cassia didn't know if she would have classified him as such, but Carol had often gushed about their bedroom escapades at many a girl's night.\n\n\"I also used to think Captain Crunch was sexy.\"\n\nCassia laughed. \"Yeah. And Tony the Tiger.\"\n\n\"He was!\" Carol slapped her arm with a laugh. \"I used to fantasize about Tony the Tiger seeing me naked and saying, 'they'rrrre great!' about my boobs!\"",
        "Oh God. Cassia shook her head. There were just some things that friends didn't need to share. They fell silent for another several blocks.\n\n\"You don't know how good you've had it, Cass.\"\n\n\"What do you mean?\"\n\n\"Being on your own, being able to do whatever you want, whenever you want.\" Carol flopped back in her seat, her head lolling to one side. \"Sleeping with whoever you want.\"\n\nCassia snorted. \"Yeah, because I've been sleeping with so many different guys.\"\n\n\"You could, if you tried.\" Carol touched her arm. \"You're so hot, Cass.\"\n\nCassia patted her friend's hand, smiling. \"Thanks, Carol. So are you.\"\n\n\"Well, yeah, but I know I am. You're like the quiet kind of hot, that if the right guy takes his time to get in your pants, he wins big.\"\n\nThat made Cassia laugh. \"You're very drunk, Carol.\"\n\n\"Maybe.\" Carol smacked her arm. \"What about this Dylan? Has he got in your pants yet?\"\n\n\"I'm not going to answer that.\" Cassia glanced at Carol with a smirk, but Carol's eyes were closed. \"Oh no, don't you dare fall asleep on me.\"\n\n\"I'm not asleep.\" When a nasty snore emitted from Carol a second later, Cassia reached over and pinched her arm. \"Hey! What did you do that for?\" She shot Cassia a dirty look, rubbing her arm. \"So?\"\n\n\"So what?\"\n\n\"Dylan?\"\n\n\"What about him?\"\n\nCarol opened her mouth in a wide yawn, her eyes drifting shut even as she replied. \"Is he good in bed?\"\n\nCassia looked over at her, took in the way Carol's mouth hung half open as she rested her cheek on the back of the seat. Cassia sighed and faced forward. \"I'll probably never find out, seeing as how we're only pretending to date.\"\n\nThere was no response. Cassia let out another deep breath and shook her head. \"Glad you're getting some rest.\"\n\nA short while later, they were rolling into Carol's neighborhood and Cassia reached over to shake her shoulder.\n\n\"We're almost there.\"\n\nCarol grumbled for the next few minutes, until Cassia pulled up in front of her house. Next door, Cole - the hot neighbor - did happen to be in his front yard, working in the garden. He looked over as Cassia circled the car and opened the door to help Carol out.\n\n\"Hi, Cole!\" Carol sang out, waving a hand.\n\n\"Hey there, Carol.\" He rose and walked over, pulling his gloves off. \"You look like you had a fun time at lunch.\"\n\nCassia smiled and nodded, kicking her car door closed as she kept one arm around Carol's waist. \"Hi, Cole.\"\n\n\"Hey, Cass.\" Cole stuck his gloves in his back pocket and took Carol's other arm. \"Let me help.\"\n\n\"Thank you.\"\n\nTogether, they got up the front porch steps and Cassia let go of Carol to dig in Carol's purse for the keys. When she got the door open, she swung it inward and turned to find Carol pressed to Cole's side, his eyes wide as he looked at Cassia.\n\n\"Oh dear.\" Cassia jumped forward and pulled her friend off Cole. \"Come on, Carol. Almost there.\"\n\n\"Almost where?\" Carol didn't let go of Cole for a moment.\n\n\"Your room is just around the corner.\"\n\n\"Mmmm... will Cole be there?\"\n\nCassia shot a look at Cole, who stayed in the front doorway, still looking shocked. Smiling, Cassia didn't answer her friend. They made it down the hall to Carol's bedroom and Cassia grunted as she managed to lever her friend onto her bed.\n\n\"There you go.\"\n\nCarol didn't say anything. She wriggled into the center of the bed, hugged a pillow to her body and started to snore.\n\nCassia watched her for a minute, before backing out and closing the door. She put Carol's purse on the kitchen counter, dropped the keys beside it, and walked back to the front door. She locked the door handle and closed the door, turning to find Cole sitting on the front steps.\n\n\"Hey.\" He looked up as she walked down. \"Is she all right?\"\n\n\"Yeah.\" Cassia brushed a few loose strands of hair from her face. \"She's just having a bad day.\"\n\nCole nodded and stood up. \"I'll check on her in the morning. She'll probably need some Advil.\"\n\nCassia laughed. \"A lot of Advil.\"\n\nHe nodded with a laugh. \"See you around.\"\n\nCassia watched him go, wondering if her friend knew of Cole's interest. She glanced back at the house before walking to her car and getting in. She was curious about what had actually happened with Brad, but she knew they would all hear about it the next day at Vivian's.\n\nShe headed for home and called Janis as she parked. \"She's home in bed.\"\n\n\"Thank God.\" Janis sighed. \"I thought I was going to have to let her sleep it off in my office.\"\n\nCassia laughed. \"Not this time. I can't remember the last time I saw Carol like that.\"\n\n\"Not since her twenty-fifth birthday, I think.\"\n\n\"That was three years ago.\"\n\n\"Well, I guess she was overdue.\" Cassia tossed her keys in the air and caught them as she walked towards her building. \"She's going to regret it in the morning.\"\n\n\"No kidding.\" Janis spoke to someone else and came back a minute later. \"Thanks for coming to help.\"\n\n\"Of course. It's not the first time I've driven a drunk friend home.\"\n\nJanis laughed. \"We've all had our moments, even you.\"\n\nCassia recalled the last time, just few weeks ago, when it had been Dylan who made sure she got home safely. \"Yes, we have.\"\n\n\"Well, thanks again. I should get back to work. I'll see you tomorrow night?\"\n\n\"Yeah. I'll see you there.\"\n\nThe call ended and Cassia walked up the stairs and down the hall to her apartment. Inside, Kyle was deep into his shoot-em-up game and Cassia wandered into her bedroom. She flopped onto her bed and stared at the ceiling.\n\nShe thought of what Carol had said and wondered if she'd been such a wreck when she'd broken up with Alex the year before. She'd had a good cry but didn't remember getting falling down drunk. Then again, she'd only been with him for a few months. Carol and Brad had been together for more than two years. That would be a lot harder to deal with.\n\nThen again, Cassia thought it would hurt just the same if she'd broken up with someone she was in love with. Maybe that was the difference. She hadn't been in love with Alex, even though she'd liked him a lot.\n\nDylan's crooked smile broke into her thoughts and she felt her cheeks warm.\n\nAt least she didn't have to worry about breaking up with Dylan. They'd just stop pretending after the wedding, and she'd still have a friend she might run into at the diner now and again.\n\nShe told herself the sinking feeling in her stomach was because she was hungry. Not because she didn't want to pretend anything.\n\n****\n\nAs promised, Dylan arrived to pick her up for the gathering at Vivian's at five o'clock the following day. Cassia offered to drive, since she knew the way, and Dylan agreed.\n\n\"So who all will I be meeting tonight?\"\n\n\"My friends, Vivian, Olivia, Carol and Janis.\" Cassia turned to him with a smile as they buckled in. \"But I've told you about them before.\"\n\n\"Yes, you have.\"\n\n\"Then there's Troy, the groom-to-be, his best man, Howie, and the other groomsmen, Adam, Zach, and Tyler.\"\n\n\"And you know all them?\"\n\nCassia shook her head as she turned the car at the end of the block. \"I know Troy, obviously, and his brother, Adam, and Howie, since we all went to high school together, but I've never met the other guys. One's his cousin, and the other is a friend from college.\"\n\n\"Gotcha. Anyone else?\"\n\n\"Just their girlfriends, and Olivia's husband, and Janis' fianc\u00e9.\"\n\n\"What about Carol's boyfriend?\"\n\n\"Oh, well, they're not together anymore.\"\n\nDylan gave her a surprised look. \"What happened? You told me they'd been together for a while.\"\n\n\"They were, and I don't know all the details yet.\" Cassia recapped her impromptu adventure from the day before.\n\n\"Wow.\" Dylan let out a low whistle. \"All I did was play a game yesterday.\"\n\nCassia grinned. \"And you won!\"\n\n\"Well, not me personally, but yeah, the team.\" Dylan returned her smile.\n\n\"I watched it. You were great.\"\n\nHis ears turned pink and he shrugged. \"Thanks.\"\n\nThey fell silent for the next few blocks, turning into a quiet residential neighborhood. They rolled up in front of the house Vivian and Troy had purchased a few months before.\n\n\"This is it.\" Cassia took a deep breath as she released her seatbelt. \"Are you ready?\"\n\nDylan glanced at her and nodded. \"Of course.\"\n\n\"You sure?\" Cassia smiled. \"There are going to be a bunch of women here.\"\n\nHe laughed. \"They're all taken, so I'll be fine.\"\n\nCassia nodded, not mentioning that Carol was newly single. They climbed out of the car and Cassia led the way towards the laughter and chatter in the back yard. The rounded the house and Janis was the first to spot Cassia.\n\n\"Hey!\" She hurried over and gave Cassia a big hug. \"Is this Dylan?\"\n\nCassia ignored the look Dylan gave her. \"Yes. Dylan, this is my friend, Janis.\"\n\nHe shook her hand. \"Nice to meet you.\"\n\nAs they spoke, Vivian and Olivia came over, and Cassia introduced them all to Dylan.\n\n\"Where's Carol?\"\n\nJanis smirked. \"Probably still trying to get out of bed.\"\n\n\"Janis told us about what happened.\" Vivian clucked her tongue. \"I feel so bad for her. I thought she and Brad were the real deal.\"\n\nOlivia shrugged. \"I guess they weren't meant to be.\"\n\nThe four friends shared a commiserating look before Vivian turned to Dylan and touched his arm. \"Can I get you something to drink?\"\n\n\"I'm all right for now, thank you.\"\n\n\"OK. Come in and meet everyone else.\"\n\nThey followed as Vivian led the way, introducing Cassia and Dylan to the groomsmen, and their dates. Zach, Troy's cousin, had brought his high school sweetheart, Heather, and Howie's wife, Jill, was friendly and, having grown up in Minnesota, a big hockey fan, one who actually recognized Dylan. The other two guys, Adam and Tyler, hadn't arrived yet, but would be bringing their girlfriends. Olivia introduced Dylan to her husband, Ethan, and Janis' fianc\u00e9, Matt.\n\nLast, he met Troy, who was manning the grill, checking the temperature. \"Nice to meet you, Dylan. Vivian said you guys just met?\"\n\nCassia and Dylan exchanged a look and Cassia shrugged. The way they'd met was no secret, but she decided they may need to get some other 'facts' straight before anyone asked too many questions.\n\n\"Yeah, we met a few weeks ago.\"\n\nTroy turned from the grill, setting the lid down. \"You going to be able to make it to the wedding?\"\n\nCassia clapped a hand over her eyes. Yes, they'd already arranged for Dylan to take her, but no one else knew that. For all Troy knew, Cassia hadn't even asked him yet. Leave it to one of the guys to get right to the heart of the matter.\n\nVivian, who'd approached just as her fianc\u00e9 asked the question, gasped and slapped his arm. \"Don't ask that.\"\n\nTroy looked mystified. \"Why not?\"\n\nBut Dylan was laughing. Cassia looked up and saw him nod. \"Yeah, we checked my schedule, and I'll be there.\"\n\nTroy grinned. \"Awesome. Come on, let's get a beer, and I can tell you some stories of Cass from high school.\"\n\n\"Don't you dare.\"\n\nTroy winked at her and turned away with Dylan at his side as they walked into the house.\n\nVivian turned to Cassia. \"I'm sorry, Cass. I told Troy not to be an ass.\"\n\nCassia shook her head. \"It's fine.\"\n\nVivian broke into a wide grin. \"I'm so happy you brought him. He's so cute, Cass!\"\n\nEven as her cheeks warmed, Cassia nodded in agreement. \"He is, isn't he.\"\n\nJust then, Carol arrived and the girls hurried to her side.\n\n\"How are you feeling?\" Janis reached her first and took her arm.\n\nCarol groaned. \"I feel like hell. Why did you let me drink so much?\"\n\nJanis smiled. \"Sweetie, I couldn't have stopped you. The martinis disappeared before the waiter was even two steps from the table.\"\n\nThe other girls laughed and Carol managed a smile. They all moved through the yard to one of the picnic tables set up, and sat down.\n\n\"Do you want to tell us what happened?\" Olivia asked.\n\nCarol frowned but told them all about her blow-up with Brad on Friday night. \"He basically said he didn't want to marry me, and he'd realized it when I kept bringing up the wedding plans and all.\"\n\nVivian reached for Carol's hand. \"But you guys weren't even engaged.\"\n\n\"I know! I told him that, and that I never said I wanted to marry him either.\"\n\n\"Oh, Carol.\" Olivia shook her head.\n\n\"He said I kept talking about it, and hinting, and he was tired of me trying to pressure him. I tried to tell him that I wasn't pressuring him, that I only talked about the wedding because I was excited for you.\" Carol gave Vivian a weak smile. \"But he didn't want to hear it.\" She blew out a breath and pushed her hair off her face. \"It spiraled from there. There was name-calling, a lot of swearing, and then he just... left.\"\n\n\"I'm so sorry, Carol.\" Janis hugged her.\n\nThe others echoed her.\n\n\"Thanks, guys.\" Carol sniffled and rubbed her nose before she glanced up and blinked. \"Who is that?\"\n\nThey turned to see Troy and Dylan walking out of the house, drinks in hand. Troy stopped to talk to the other guests but Dylan kept walking towards Cassia.\n\n\"That's Dylan, Cassia's boyfriend.\" Vivian leaned close to Carol, her voice low.\n\nCassia shot her a look. \"We haven't started calling each other that.\"\n\nVivian smiled. \"Fine, he's your date, and soon to be your boyfriend.\"\n\n\"Shut up.\"\n\nDylan approached, hesitating for a moment when he saw all their eyes on him. \"Uh, hi. I brought you something.\" He handed the red plastic cup to Cassia. \"It's just soda.\"\n\n\"Thank you.\" Cassia took it, and held a hand towards Carol. \"Dylan, this is my friend, Carol.\"\n\n\"Oh, nice to meet you.\" Dylan's voice softened with sympathy. \"Can I get you a drink?\"\n\nCarol blinked again, clearly surprised by his offer. \"Uh, sure. Just water, please.\"\n\nJanis snickered and Carol elbowed her.\n\n\"Coming right up. Anyone else?\"\n\nThe other girls shook their heads and Dylan turned to head back to the house.\n\n\"Oh, he's so sweet, Cass.\" Olivia clapped her hands once. \"You are so lucky. Ethan hasn't offered to get me a drink since 2015.\"\n\nThey laughed, even Carol, and Cassia smiled, sipping her drink.\n\nThey chatted about Vivian's last dress fitting until Dylan returned, and then Cassia stood up, taking his hand and leading him a few feet away from everyone else.\n\n\"What's wrong?\"\n\nShe shook her head. \"Nothing. I think we should maybe get some details straight.\"\n\nDylan smiled and nodded. \"I agree. I wasn't sure what to say when I met Troy.\"\n\n\"Exactly.\" Cassia glanced over her shoulder to find her friends all watching them with avid interest. She scowled at them before pulling Dylan further away, until they were on the far side of the big oak tree in the corner of the yard.\n\nHe chuckled. \"They're going to think we're making out.\"\n\nCassia laughed, though it sounded strained, even to her own ears. \"Let them.\"\n\nDylan smiled down at her, leaning a shoulder on the tree trunk beside her. \"So. Details?\"\n\nSwallowing, Cassia nodded. \"Yeah. Well, I already told my friends about Tapley's so that's fine.\"\n\nHe nodded. \"Right. What about dates?\"\n\nShe chewed her lip. \"I don't know. What should we say?\"\n\n\"Maybe we should just stick as close to the truth as we can. We have talked on the phone a couple times, and met up for coffee a few times, too.\"\n\n\"Yeah.\" Cassia nodded. \"Yeah, OK.\" She thought about it for a second, and frowned. \"What about other stuff?\"\n\n\"What other stuff?\"\n\nCassia felt her face start to burn and looked down. \"Um. You know. Other... stuff.\"\n\nWhen she looked up again, his ears were pink and he was rubbing his neck. \"Well, I mean, you can tell the girls whatever you want, I guess.\"\n\n\"What about you?\"\n\nHe let out a short laugh. \"Guys don't usually talk about stuff like that. Especially not guys who've just met.\"\n\nCassia laughed. \"Right. I didn't think of that.\"\n\n\"So.\" After a moment, he leaned a little closer, his smile wider. \"What will you tell your friends?\"\n\nCassia blinked, caught in his gaze. Why was he leaning like that? \"I don't know. I'll just make something up.\"\n\n\"What if we give you something to talk about now?\"\n\n\"W-what?\"\n\nHe bent closer, putting his mouth close to her cheek. She swayed towards him, until she heard his voice. \"They're watching us.\"\n\n\"Oh God.\" She squeezed her eyes shut and put a hand on his shoulder. \"Are you serious?\"\n\nWhen he nodded, his chin brushed hers and he pulled back enough for her to see his eyes. He looked nervous as he lifted a hand - was she imagining the tremble? - and brushed her hair over her shoulder. His gaze drifted down to her mouth and she licked her lips, feeling self-conscious. They had not discussed this sort of thing ahead of time. It hadn't even occurred to her that they'd have to actually put on a show.\n\nHe touched her hair again, and this time his fingers brushed her skin, making her shiver. He paused, his eyes lifting to hers, and his hand stayed at her neck, his palm coming to rest on her collarbone.\n\n\"I, uh...\" She cleared her throat and tried again. \"Are they still watching?\"\n\nHe gave a slight nod, his eyes darting away for only a second. \"Do you want me to?\"\n\n\"What?\"\n\nHis lips tilted in that crooked smile she liked. \"Kiss you.\"\n\nThat sounded like the best idea she'd heard in weeks. And yet, as he leaned closer, his other arm going around her waist, she could feel him trembling.\n\nOh man, she was a real jerk. No, she wasn't going to take advantage of the situation. He was clearly uncomfortable with the display they were already putting on.\n\nShe pressed a hand to his shoulder to stop him. \"It's OK. I'm pretty sure we're already giving them something to talk about.\"\n\nHe nodded, though something flashed across his expression that she couldn't read.\n\nShe leaned back against the tree, which forced him to move his arms away. \"Besides, it was enough of a surprise for them to see me arrive with you.\"\n\nHis smile widened and he nodded again. \"Good point. You should have heard the razzing in the locker room yesterday.\"\n\nShe grinned. \"Oh yeah? What did they say?\"\n\n\"Well, some suggested I'd paid you to go with me.\"\n\nHer jaw dropped. \"Are you kidding me? What a bunch of assholes.\"\n\nDylan laughed and Cassia's face burned. Real classy.\n\n\"Sorry. Sometimes I don't think before I speak.\"\n\n\"No, you're not wrong. I said the same thing.\" He shifted on his feet. \"Jake likes you though. Couldn't stop talking about how you'd wiped the floor with him at poker.\"\n\nCassia laughed. \"He had no way of knowing that I'm the family champion.\"\n\n\"He wants a rematch.\"\n\nShe scoffed. \"Tell him, anytime.\"\n\nHe laughed and there was a louder commotion behind them. Cassia turned to see that Adam, Tyler and their dates had finally arrived. Along with someone else who wasn't a part of the wedding party.\n\n\"Oh, shit.\"\n\nDylan moved to stand at her shoulder. \"What's wrong?\"\n\nShe turned her back on the new arrivals and looked up at Dylan, clutching the front of his shirt. \"Kiss me.\"\n\nHe started, his eyes going wide. \"What?\"\n\n\"Please.\"\n\nHe still hesitated, his gaze darting over her shoulder before she lifted up on her toes and pressed her lips to his. For a moment, she thought he would shove her away. He didn't move, clearly caught by surprise.\n\nThen his arms closed around her back and he tilted his head, joining the kiss. With gusto. His mouth was warm, soft, and yet he kissed her with enough pressure that a tingle shot down her spine. She put her hands around the back of his neck and clung to him, forgetting in the next few seconds about who she'd seen.\n\nDylan's mouth opened and she obliged in kind, shivering all over as his tongue touched hers. He made a noise and lifted her almost off her feet, one hand going to the back of her head, holding her, and taking the kiss deeper.\n\nCassia clenched her hands in his hair, letting him take her weight in his arms. Why had she said no the first time? She'd never say no again. She wanted more.\n\nThe sounds of whistling and hollering brought her skidding back to reality. Dylan released her at the same moment, their eyes opening to each other's startled looks. Cassia's lips tingled as his exhalation brushed across them. She saw him swallow, the muscles in his throat working, and her mind shot through several images of more kisses, in more places, until Dylan cleared his throat.",
        "\"Do you want to tell me what that was all about?\"\n\nShe lifted her eyes to his, startled to see that he didn't look surprised anymore, and not entirely happy. She lowered her hands to his arms and put all her weight back on her own two feet. \"It'll be clear in a minute.\" She squeezed her hand on his arm. \"I'm sorry.\"\n\nHis expression softened, returning to his usual relaxed countenance. \"Don't ever be sorry for that.\"\n\nShe knew her face was red and she had to look away.\n\n\"Are you two done over there?\" Troy's shout brought them apart altogether.\n\nCassia took a fortifying breath and turned to face the crowd of onlookers. She smiled as Dylan closed his hand around hers and they walked across the yard.\n\nVivian took over the situation, reaching out for Cassia's free hand as they approached. \"Cassia, you remember Adam, Troy's brother?\"\n\n\"Of course. How are you, Adam?\"\n\nHe smirked at her, so like his big brother. \"Not as good as you, apparently.\"\n\nThere was another round of hooting and whistling, and Cassia wanted to die. Vivian shushed everyone, still holding Cassia's hand, as more introductions were made.\n\nDylan and Cassia met Adam's date, Nora, and Tyler, Troy's friend from college, along with his wife, Kristi. Finally, they turned to the latest addition to the party, and Vivian squeezed Cassia's hand.\n\n\"And you know Alex.\"\n\nCassia nodded, taking a step closer to Dylan's side and grateful for her friend's unspoken support. \"Hello, Alex. What a surprise to see you here.\"\n\n\"I ran into Adam at the gas station on the corner.\" Alex was smiling, but Cassia could see something else behind the smile, a sneering look she didn't like. \"He insisted I stop in and see everyone.\"\n\n\"How thoughtful.\"\n\nVivian squeezed her hand and pulled her away from Dylan and everyone else, making a beeline for the house. Cassia went, throwing an apologetic look over her shoulder at Dylan. Olivia, Carol and Janis all followed as they hurried into the house, Vivian slamming the door behind them.\n\n\"Cass, I am so sorry.\"\n\n\"It's not your fault.\" Cassia didn't know whether to laugh or cry. This whole evening was not turning out the way she'd thought it would. \"You couldn't have known Adam would bring him.\"\n\nVivian nodded. \"I don't think Adam even knows what happened. I mean, I never even told Troy.\"\n\n\"Why not?\"\n\nVivian shrugged. \"I didn't want to go blabbing about it all over, and embarrass you.\"\n\nCassia smiled at her friend. \"Thanks for that.\"\n\n\"I can't believe that snake had the nerve to show up.\" Janis crossed her arms over her chest, her expression sour. \"He had to know you'd be here.\"\n\n\"Maybe that's why he did.\" Carol leaned on the kitchen counter. \"He's exactly the kind of guy to pull a stunt like this. As if the idea of a woman choosing to not be with him is crazy.\"\n\n\"Totally.\" Olivia nodded. \"But you should have seen his face when we all saw you kissing Dylan.\"\n\nCassia felt hot all over at the thought. It had been such a brief kiss, but she was sure she was reeling more from that than Alex's appearance.\n\n\"You couldn't have timed it better, Cass.\" Janis grinned as she touched her arm.\n\nCassia felt her skin prickling with embarrassment. Sure, it had been well-timed because she'd spotted Alex and thrown herself on Dylan. How could she go out there and face him now? He probably thought she was crazy, especially after she'd vetoed his suggestion right before.\n\nThe other girls chattered on for a few minutes, making Cassia relive the moment. She moved around them, heading for the fridge and searching for a cold drink. She downed half a bottle of grape soda before turning around again.\n\n\"So, is he a good kisser, Cass?\"\n\nShe met their curious looks, a smile creeping across her face, before she nodded. Yes, he was good. Better than she'd have guessed and better than she felt she had a right to.\n\nHer friends were silent a moment before they broke into identical squeals. Cassia laughed. \"You guys are impossible.\"\n\nVivian darted over to hug her. \"I'm so happy for you, Cass. He seems super nice.\"\n\n\"He is. So considerate, too.\" Carol still had her cup of water in hand that Dylan had brought her, and was looking more relaxed than she'd been when she'd arrived.\n\n\"And he's hot as hell.\" This from Olivia, who fanned herself while the others nodded in agreement.\n\n\"And that kiss.\" Janis clapped a hand over her mouth for a second. \"I mean, I swear, I could almost feel the heat from where I was standing.\"\n\nCassia went right back to feeling embarrassed. \"Please, can we change the subject?\"\n\nThey laughed and hugged her in turn before doing as she asked.\n\n\"Well, what do we do about Alex?\" Vivian asked.\n\nOlivia smacked a fist into her open palm. \"Kick his ass outta here.\"\n\n\"No.\" Cassia shook her head. \"You can't just tell him to leave. Everyone will wonder why and I really don't want to have to explain.\"\n\nHer friends looked like they wanted to protest but she insisted.\n\n\"And I don't want to make tonight about me.\" Cassia put her arm around Vivian's shoulders. \"This is all about you, Viv.\"\n\n\"You're a good friend, Cass.\" Vivian hugged her back. \"Are you sure you can deal with him being here?\"\n\nCassia drew in a deep breath and nodded. \"I can manage for a few hours.\"\n\nJanis grinned. \"Dylan will be enough of a distraction.\"\n\nCassia rolled her eyes as the others laughed. They agreed to have as little to do with Alex as they could all night and got some drinks before heading back outside.\n\nEveryone was standing or sitting around, talking, while Troy and his brother stood at the grill, starting to cook the meat.\n\nCassia looked around for Dylan and found him chatting with Howie and Jill. She hurried across the patio to his side.\n\n\"Hi.\" He looked down with a smile as she slipped her hand in his. \"Is everything OK?\"\n\n\"Oh yeah.\" She let out a breath and nodded. \"Everything's fine.\"\n\n\"Dylan was telling us about his game last night.\" Jill grinned. \"I can't believe I'm talking to a real live hockey player.\"\n\nCassia laughed. \"I think you and I must be the only hockey fans in Dallas.\"\n\n\"My sister and I watch games whenever we can, over Skype.\"\n\n\"That's a great idea. Does your sister still live in Minnesota?\"\n\nJill nodded. \"She's going to be so jealous when I tell her I've met Dylan Samuels.\"\n\nCassia glanced up at Dylan, grinning when she saw his ears. \"Well, he is a superstar. A big superstar.\"\n\nDylan choked on his drink and sputtered for a second. Cassia squeezed his hand while Jill nodded, oblivious to their inside joke.\n\n\"I'm getting hungry.\" Cassia turned back to Howie and Jill, as Dylan wiped his chin. \"How about you guys?\"\n\nThey nodded and all turned to stroll towards the patio, where Vivian was setting out the side dishes, paper plates and plastic cutlery. Dylan tugged on Cassia's hand, pulling her back from the crowd.\n\n\"Are you sure you're OK?\"\n\nShe nodded. \"Listen, I am sorry about putting you on the spot like that.\"\n\n\"Don't worry about it.\" He glanced over her shoulder, his eyes narrowing when they landed on Alex. \"So that's the ex-boyfriend? The one your mom invited to dinner that night?\"\n\n\"That's him.\"\n\n\"How did he end up here?\"\n\nCassia explained. \"It's tough, because no one knows the whole truth, and everyone's been friends since high school.\"\n\n\"He's like a bad penny.\" Dylan shook his head. \"Wait, does this mean he's going to be at the wedding too?\"\n\n\"Looks that way.\"\n\n\"Damn.\" Dylan let out a breath.\n\n\"I'm sorry.\"\n\n\"What for? You didn't invite him.\"\n\nCassia shrugged. \"It's just... this is all turning out to be more complicated than you probably expected.\"\n\n\"I can handle it.\"\n\n\"Are you sure? I can make something up and you don't have to do it anymore.\"\n\n\"And let you go to the wedding alone?\" Dylan shook his head. \"Not a chance. You're stuck with me now.\"\n\nCassia couldn't help but smile. Stuck with him, as if she didn't already find him attractive enough. Now she knew how he kissed, and the way his arms had felt around her body. Add in his gallantry, the way he'd treated her friends so far, and how he kept her close now, knowing that Alex's presence was bothering her. She was in over her head. A month with him as a fake boyfriend was going to destroy her.\n\n****\n\nThe rest of the night passed uneventfully. When Dylan noticed Cassia starting to shiver, he suggested that they leave.\n\nAlex overheard and decided to add his two cents. \"Yeah, she always was one to get cold even if it wasn't cold out.\"\n\nCassia shot him a dirty look and it was all Dylan could do to keep from punching the guy. All night, Alex had lingered close to him and Cassia, interjecting comments even if no one was talking to him. At one point, Dylan had pulled Cassia out of the group and into the house, heedless of the catcalls behind them. He didn't care. He'd seen how tense she was getting and did what he could to lighten the mood, making her laugh during their brief sojourn inside. It had worked for the most part, and Cassia had been able to relax for the rest of the party.\n\nNow, Alex had to open his big mouth again. A fitting ending to the night. But Dylan had had enough. He wrapped his coat around Cassia's shoulders and gave Alex a hard look. \"Lucky for me that I get to warm her up later.\"\n\nThe silence that followed was fantastic, as was the expression on the other man's face. Then everyone busted out laughing.\n\nAdam pounded Alex on the back. \"He's got you there, Alex.\"\n\nVivian jumped to her feet and she and Troy saw Dylan and Cassia to her car in the front. \"It was so nice to meet you, Dylan.\"\n\n\"Same here.\" Dylan smiled and held his hand out to shake hers, but she ignored his hand and wrapped him in a warm hug. \"Oh, OK.\"\n\n\"Thank you so much for taking care of Cassia tonight.\" Vivian pulled back and pinched his cheek, like a fussy grandmother. \"You're a keeper.\"\n\nDylan laughed and rubbed his neck to hide his embarrassment. \"Well, thanks. I think.\"\n\nTroy chuckled and shook his hand. \"Glad you could make it, man. I'll see you at the wedding, I guess?\"\n\nDylan looked down at Cassia beside him and nodded. \"You certainly will.\"\n\n\"Great.\"\n\n\"Thanks for having us.\" Cassia gave Troy a hug first, and then her friend. \"I'll see you later this week for your fitting.\"\n\n\"Yeah. Have a good night. Drive safe.\"\n\nThey stood on the curb and waved as Cassia and Dylan got in her car and drove off. Dylan let out a sigh and sank back into the seat.\n\n\"Rough night?\" Cassia smiled at him.\n\n\"Not really. Last night's game was rough though.\" He rubbed his shoulder. \"Got slammed into the boards in the second and there's a bruise the size of Texas on my arm.\"\n\nCassia cringed in sympathy. \"I saw that hit. You took it like a pro.\"\n\nDylan chuckled. \"It's what I am.\"\n\n\"Well, you're off for a few days, aren't you?\"\n\nHe nodded. \"Yeah. Don't have a game until Friday.\"\n\nFor the next few minutes they didn't speak. Dylan rubbed his shoulder and watched her out of the corner of his eye. They hadn't said anything about the kiss since it had happened. In truth, Dylan wanted to ask if she'd felt the same thing he had. Even now, recalling the soft weight of her in his arms had him shifting in his seat and forcing his mind to other things, like horse manure and vacuum cleaners. But she was still there, in the back of his mind, the feel of her, the taste of her lips. So help him, he wanted more.\n\n\"So you have another fitting this week?\"\n\nCassia shook her head. \"It's for Vivian's dress. She wanted us to be there, so we'll probably do dinner again after.\"\n\n\"Are you doing anything else this week?\"\n\n\"I hadn't planned anything.\" She glanced his way. \"Why?\"\n\nHe smiled. \"I said I'd take you to a movie.\"\n\n\"You don't have to do that.\" Her hands clenched and unclenched on the wheel. \"We're not actually dating.\"\n\nDylan frowned and looked out the windshield. Yes, that was true. Maybe he needed the reminder. Screw it. He wanted more and there was only one way to get it right now. \"This way you can tell your friends that we've got plans, and it won't be a lie.\"\n\nShe didn't say anything for several blocks. \"What movie?\"\n\n\"You can pick.\"\n\n\"Are you saying that because it's what a boyfriend would say?\"\n\n\"No. I'm saying it because I don't care what we see, so long as I'm in a dark room with you.\"\n\nShe didn't look at him, but he saw the color in her cheek and smiled to himself.\n\n\"You don't need to say things like that either.\"\n\nHe shrugged. \"Sorry. Chalk it up to my bad luck with women. I never know what to say.\"\n\nShe didn't say anything to that and Dylan let her mull it over. It was true, everything he'd ever said about his bad luck with women, being intimidated and never knowing the right thing to say. Then he'd met Cassia and from the first moment, there'd been no hesitation. Even with this awkward arrangement between them, he had no trouble talking to her. Maybe he'd tell her the truth soon, the truth he'd realized at his first taste of her. For now, he was still too unsure of how she might react and he didn't want to lose a friend either.\n\nA few minutes later, they rolled up and parked on her street. They got out and Dylan walked her up to her apartment.\n\nShe faced him at her door, keys rattling in her hand. \"Thanks for putting up with everything tonight.\"\n\nHe smiled. \"It wasn't all bad.\"\n\nShe looked down and his own thoughts turned to that stolen moment by the tree. When she lifted her eyes to his again, she was smiling.\n\n\"And thanks for putting Alex in his place.\"\n\nDylan scoffed. \"You didn't need me to do that. I'm sure you'd have come up with something if you hadn't been so cold.\"\n\nCassia laughed. \"Probably.\"\n\nThey smiled at each other before she turned and slid her key in the lock. \"Have a good night.\"\n\n\"You too. I'll call you later.\"\n\n\"OK. Bye.\"\n\nHe turned to go, listening as the door clicked shut behind him. The smile stayed on his face as he jogged down the stairs and up the street to where he'd parked his truck.\n\nYes. It was pretend for now. Somehow, he had to figure out a way to screw up his courage and tell her the truth. Soon."
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey",
        "hockey player",
        "hockey team",
        "athlete",
        "hockey romance",
        "sports romance",
        "sports",
        "romance novella"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/reflections-on-ice-ch-04"
}