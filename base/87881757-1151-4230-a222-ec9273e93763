{
    "title": "Unforgettable Fire Pt. 03: The Present",
    "pages": [
        "Hello, again!\n\nHere's part 3, not the last one, though (part 4 will be some kind of special chapter from Finn's POV, not really necessary to understanding the story, but it will add a bit to it, some little interesting details at least, like why such uncommon names).\n\nI know. Some people didn't agree with Hero's decision in part 2, which is why everything is explained here. Why she made the choice she did.\n\nAnd maybe they'll get a second chance!\n\nAGAIN (I will always make this clear): Not native English speaker, so if you see something wrong, please forgive me.\n\n*I received some suggestions from part 2 readers. Thank you very much for that! I'll welcome some more.\n\nEnjoy!\n\nNana.\n\n*****\n\nThe little clock marked 19:40.\n\nFinn would leave the hospital in twenty minutes. Considering how fast he walks, he'll probably be here in thirty five to forty minutes.\n\nI was thinking to myself, while I considered the possibilities the night would offer. The good, and most importantly, the bad ones.\n\nEarlier, I'd had a long, minucius bath that had left me smelling like a walking rose petal soap bar. I had shaved, washed my hair, and even used some macadamia nut body oil. \n\nOf course I knew that wasn't going to be a date. Of course it wasn't. \n\nStill, I had dropped Massie, my Labrador, at my mom's for the night. She didn't like strange people and I didn't want Finn to get bitten while we talked.\n\nWe were only going to talk. \n\nJust talk. \n\nDespite that piece of knowledge I was spending too much time on deciding what to wear. Sitting on my bed wearing a ridiculously lacy underwear, I looked over every piece of clothing in display inside my opened closet. I found nothing suitable. And the more time I wasted on deciding, the less time I had to decide.\n\nThe danger was, If I wore something too fancy, he'd think I thought that was a date when it obviously wasn't. Now, if I wore something too casual, he'd think I didn't give the occasion enough importance.\n\nI glanced down at the little watch by the bedside table. \n\n19:50.\n\n\"What is wrong with you, Hero? He won't care what you wear. Just get a grip.\" I said out loud, scolding myself.\n\nHaving made up my mind, I walked over to the closet and chose a simple tea-length black dress with long sleeves. A bit prude despite its tightness, but I wasn't going to spend any more time staring at my closet. Walking over to the bathroom, I spilled some drops of perfume on my wrists rubbing some on my neck, under my ears.\n\nThere was a woman staring at me from the other side of the oval bathroom mirror. She had large, expressive brown eyes lined with long, dark lashes. She seemed nervous. I could see her plump lips were slightly parted as she exhaled warm air through her teeth, fogging up the mirror glass.\n\nHer cheeks were blushed due to the hot blood running faster than usual under her golden brown skin. I brought my fingers up to my hair and the woman in the mirror touched her own wild curls. \n\n\"It's all going to be fine. It's just Finn.\" She said to me.\n\nBelieving her, I made my way down the stairs and into the kitchen.\n\n***\n\n20:10\n\nHe'll be here any second now.\n\nSince he'd said he would come straight from work, I figured he'd have no time to eat, so I had pretentiously prepared his favourite meal. Lasagna. \n\nMy whole day had been spent in a constant state of agonized expectancy that resulted in inumerous butterflies flying around my stomach, unabling me to eat. \n\nAmazing as it was I had not, in fact, consumed all of the wine I had in the house while mourning my shitty marriage. So I opened a bottle of Pinot Noir and poured myself a glass to steady my nerves. I was nervous in a way I didn't even remembered ever being so. \n\nI was afraid of the course our conversation might follow. We had ten years of things to talk about. Last night when we had finally been reunited we didn't have any kind of productive talk, when we did talk. It was clear to the both of us by now we still held some power over each other. \n\nNow anything could happen. \n\nAnything. \n\nDid that include the thing I wanted the most? \n\nBut what did I want though?\n\nI gulped some more wine, forcing the thoughts in my head to drift away. I opened and closed the kitchen cabinets arranging placemats, plates, cutlery, and a glass on the wooden kitchen table. The table wasn't too big, so I saved myself another dilemma. \n\nWhere do I sit? Too close, too far from him? \n\nInstead I placed our plates directly across from each other on the table. I stepped back, admiring my work and sipping more of my wine when the doorbell rang. I jumped startled and spilled red wine on my dress.\n\n\"Oh! Marvellous!\" \n\nThank goodness I wore a black dress.\n\nI whirled around looking for some cloth to clean myself with, but none seemed to be found when I needed it. So I gave up looking and went to the door. \n\nI stood in front of it and breathed one, two, three times deeply through my nose and out through my mouth. I ran a hand down my dress to smooth the inexistent creases in it. The bell ringed again. Taking one last breath I opened the door, and there he was. \n\nAll the air was knocked out of me when he smiled and his lips formed the word \"Hi.\"\n\n\"Hello.\" I said back, and felt that my dumb smile was wider than his. \n\nHe looked tired. There were bags under his eyes. He was wearing jeans, a simple navy blue t-shirt and there was a messenger bag clutched to his side. His hair was a disheveled mess with some large curls falling to his forehead that made my fingers tingle with the desire to brush them back. \n\nFinn had always been handsome and even though he seemed to be worn out, he still looked disgustingly gorgeous.\n\n\"So,\" Finn's voice broke my admiration trance. \"Can I come in?\"\n\nApparently I had been standing there obviously staring at him for longer than I thought.\n\nI cleared my throat and spoke way too loudly.\n\n\"Yes, of course! Please, come in.\" \n\nI stepped aside and he stepped in. His scent spread through the air at once. He bent down and kissed me on the cheek. I shivered as the smell of his after shave invaded my nostrils. I wanted to crawl out of my skin and into his. \n\nGod, that would be one bloody long night.\n\nI closed the door and walked towards him. \n\nFinn was looking around the living room, his brown eyes amused and curious.\n\n\"This place is very you.\" He remarked smiling and letting his bag slid down his shoulder to the sofa.\n\n\"What do you mean by that?\"\n\nHe arched an eyebrow and pointed his long index finger to nowhere in particular.\n\n\"There's books everywhere, and three Mucha paintings in this room alone.\" \n\nI smiled and raised my wine glass up to my lips to try and hide how satisfied I was with his knowledge of me. He knew me well. \n\nThe funny thing was that I felt nervous the way you do when you're trying to impress someone in your first date. But that was Finn. He knew me, all of me. I couldn't lie or pretend with him. And also that was not, absolutely not a date.\n\nAgainst my will my brain recollected Lucian had bought me those paintings.\n\n\"I actually plan to move out to a place that's just mine, soon.\" I made that decision as I spoke it.\n\nHe just smiled crookedly and we stood in silence for a while, awkwardness filling up the air. The both of us stood in the same room, breathing the same air, none of us knowing what to say next until the kitchen timer went off and startled us both.\n\n\"Oh! Shit, my lasagna!\" I cursed. \n\nI had completely forgotten about dinner. I rushed to the kitchen and felt Finn following me. \n\nLucian was the one who spent most of his time home. Consequently he was the one doing most of the cooking, so I could never find anything in the damn kitchen without first opening all drawers and cabinet doors. Luckily, the red oven mitts were hanging just right above the stove, in perfect display. \n\nI removed the lasagna dish from the oven and placed it on the table, not burning myself by a miracle.\n\n\"You've made lasagna?\" Finn leaned close to the dish and inhaled in appreciation. \n\nI let out a relaxed breath. Thank goodness he didn't think it to be too much.\n\n\"I figured you wouldn't have had time to eat.\" I almost sounded like I was apologizing. \"I hope you still like lasagna.\"\n\n\"How could I not?\" He said happily, and for the briefest of seconds he was the old Finn I loved so much.\n\nI gestured for him to sit down. As he did it, I picked up the wine bottle from the counter and sat down across from him at my seat on the table. I refilled my own glass before offering him some.\n\n\"Would you like some wine?\"\n\n\"If there's any left, then yes.\" He teased, eyeing the glass that had been on my hand since before I opened the door for him.\n\n\"Oh, don't worry. I have another bottle.\" I had many other bottles. \n\nHe laughed and handed me his glass so I could fill it. \n\nThere was an easiness to him. He was more himself than he had been the night before. For a moment there, it almost felt like those ten years apart never happened.\n\nI noticed him fidgeting while drinking his wine. He always got fidgety whenever he was nervous or shy, or both. I could tell he was hungry by the way he kept glancing at the food, so I urged him to serve himself.\n\n\"Well, come on! Eat before it gets cold, Finn.\"\n\nHe shifted uncomfortably on his chair.\n\n\"Don't mind if I do.\" He said and served himself a generous portion of lasagna. \n\nWhen he took the first bite the look on his face and the moan out of his throat made me squeeze my legs together.\n\n\"Mhmm. Jesus, it's even better than I remembered.\"\n\nThe butterflies on my stomach swirled around. I grinned, satisfied.\n\n\"I'm glad you still like it.\"\n\nFinn looked at me smiling tenderly.\n\n\"Thank you for this. My lunch today was composed of two moldy toasts and green jello\"\n\nJust his smile alone made me feel a bit warmer. I stared at him for a tad too long before answering.\n\n\"It was really nothing.\"\n\nWe ate making small talk about his shift at the hospital and my work as a restorer for his aunt's boyfriend.\n\nIn the end, it all looked awfully like a date. I actually did open a second bottle of wine and we were both laughing shamelessly with our faces hot, reminiscing our days in university when Finn said something that brought me back down to earth.\n\n\"This is funny.\" He started speaking with his voice distant, but looking me right in the eye. \"When we were together in college this is how I used to imagine our lives would be like in the future. Me coming home every night and telling you about my day, and you'd me about yours while we laughed.\" \n\nI just stared back at him dumbfounded. \n\nFinn was such an open person. He wasn't afraid of saying what he felt when he felt it. I had always loved that bluntness and honesty about him, but sometimes it seemed like he didn't pay much mind to the consequences of his words. \n\n\"I guess back then, none of us thought our futures wouldn't include each other.\" I answered being as honest as he had just been.\n\nThe corner of his mouth turned up shyly.\n\n\"How did you imagine it?\" \n\nNow I hated his bluntness. I hated how he put me on the spotlight like that and made it impossible for me to answer him with anything but complete honesty. Because, even if I tried to lie, he'd know. \n\n\"Exactly like this. With the exception of the awkwardness.\" I said, my voice catching on my throat. \n\nI looked down at my glass, swirling the liquid inside. I had lost count of how many times after the divorce I had sat here, with a glass full of wine fantasizing about a life where we were together. \n\nWe were ridiculously happy, like only imagined people could be. \n\nWhy hadn't I said yes again?\n\nI suddenly felt my face hot. I was embarrassed of myself. \n\nWhat a ridiculously cheesy thing to think about.\n\nI smiled bitterly and jumped to my feet. With nervous hands, I started piling our plates and taking our forks and knives to the sink. I didn't even ask him if he was done eating.\n\nWith my back turned to him I allowed the hot tears that were dancing behind my eyelids to roll down my face. I turned the tap on and hoped that the sound of the running water, and the clattering of dishes and cutlery would muffle my low sobs and the shaky crying movements of my shoulders.\n\nI hated to be so vulnerable. Damn him.\n\nMy body seemed to know when Finn was close before my eyes could register his presence. I felt his heat on my back as he drew closer. I felt his warm, large hands slipping around my waist and turning me around to face him. I didn't even bother trying to resist or wiping my face. Of course he knew I was crying.\n\nHe turned my body to his and I boldly forced my eyes up into his. There was a crease in between his brows, a look of sadness and confusion in his eyes, but also something not quite so tender. \n\nHe stepped even closer to me to the point where his hipbone touched my belly. I thought he'd kiss me. My whole body thought he'd kiss me. But he didn't. He just extended an arm and turned the tap off behind me.\n\nHe then brought his hands up to my face and wiped my tears away with his thumbs.\n\nI gripped the edge of the sink because I thought my knees would give in and I'd crumble at his feet.\n\nFinn was about to open his mouth when I spoke rashly.\n\n\"Why did you say that, Finland?\" I put my hands over his and pushed them away. I couldn't think straight with him touching me. \"Why are you always saying the most inappropriate things?\"\n\nHe looked down at me, bemused.\n\n\"You said you wanted to talk. Fine, let's talk! But why, why must you come here and talk about how you've imagined our life together when you know, certainly you must know how much it hurts me to hear it!\" \n\n\"Hurts you?\" Finn stood gaping at me, wide-eyed like I was a crazy person. \n\nI threw my hands in the air, exasperated.\n\n\"What did you want to talk about, Finn?\"\n\nHe opened his mouth and started stammering. \n\n\"I just...I thought...after last night...\"\n\n\"After last night?\" I interrupted his mumbling. \"You mean last night when you first treated me like I was a stranger and then later kissed me or whatever the fuck that was?!\" \n\nRage came flowing over me, out of my mouth, out of my eyes. \n\nFinn stepped back until his back hit the kitchen aisle behind him.\n\n\"Hero,-\" Finn tried speaking again, and again I didn't let him.\n\n\"You what? You left me here! You were gone for ten bloody years! I even married somebody I didn't really love just to try and forget about you! Now you come back and coincidently, it is the shittiest time of my life! You and your damned crooked-toothed smile and your wonders about our inexistent life together, your-\" I stopped abruptly, breathless, feeling like my chest would burst. \n\nI turned and gripped my own hair. \n\nFinn had been standing there just listening to me while I yelled at him, throwing words at him like they were daggers.\n\nHe didn't seem to be getting angry like I expected him to. Instead he looked like he wanted to laugh, everything in his expression screamed indignation. I couldn't stand seeing that look anymore. I felt like slapping him.\n\n\"Hero,\" \n\nThe way he said my name, that way, made me afraid of turning to face him.\n\n\"I asked you -No- I begged you to come with me. You said no, Hero.\" He said behind me, throwing the past in my face. \n\nI turned back to look at him, shaking my head and throwing my hands up.\n\n\"Finn, we already had this fight. You know well enough why I didn't go with you.\"\n\nI thought he'd try and reopen that discussion, and say once again that I could've gone with him had I really wanted to. But to my utter surprise, he didn't. \n\nHe opened up a whole new discussion.\n\n\"I know.\" he said with mild exasperation. \"I understand why you didn't come with me. In fact, I know exactly why.\"\n\nTaken aback I asked. \n\n\"You do?\" \n\nHe looked down at his feet with a bitter, sad smile playing on his lips.\n\n\"Yeah, I do.\" He lifted his head, just a little, and looked at me from under his eyelashes. \"Don't you?\" \n\nTo me, it felt like Finn and I were having totally different conversations. I didn't know what on earth he was talking about. I just shook my head, suddenly feeling like I was the person out of tune in the conversation.\n\n\"Oh, come on, love. You know it. You might not admit that you do, but you know. Come on, say it.\"\n\nHis voice was different. All the warmth was gone. He was teasing me, but not in a good way. I felt like he was trying to pull me into a trap. Truth is, he didn't seem like himself anymore. It was like he'd been replaced by someone else in the span of seconds.\n\n\"Finn, what are you talking about?\" I asked, his intentions at a total loss to me.\n\n\"I'm talking about you and why you didn't want to go with me.\" He said, simply.\n\nWhatever game he was playing I was starting to get tired of it.\n\nI looked up at the ceiling, exasperated. My eyes fixated on the lamp until it burned my retina and the reflection flashed behind it when I blinked. That was precisely the course I dreaded the conversation would follow, and I wanted to change it desperately.\n\n\"It doesn't matter, Finn. None of this matters anymore.\" I had to fight and filter the words that wanted to come out uninvited. \"We were so young and...god! It doesn't matter! That's how it happened! We were stupid, we hurt each other. You left, I got married. So you're sorry, I'm sorry, but it changes nothing. This is who we are now because of the choices we made. You can't blame me for how your life turned out to be just as I can't blame you for my shitty marriage!\"\n\nThat wasn't what I wanted to say. Fuck. That wasn't true either.\n\nWe did blame each other. I knew I blamed him, or at least my feelings for him. I only ever married Lucian to run away from those feelings.\n\nI got way too emotional and lost the ability to be rational and say the things I really needed to. I just blurted out the words as they came.\n\nFinn's expression was serious.\n\nI buried my nails in my palms and focused on that feeling.\n\n\"I don't think we need to forgive one another. That was ten years ago, Finn. We must accept that it happened the way it did and own our mistakes. You didn't talk to me and I didn't listen to you. Now, what's done is done. Don't come here apologizing for the past, wishing to change it, or erase it, or whatever it is you think you need to do. The only thing I regret is the way we parted after that fight, if we can call it that,\" I clamped my lips shut, forcing myself to ponder the words before letting them out. \"We should've talked, set things straight and said our goodbyes out of respect for each other, if anything. I'm just sorry we didn't do that. About the rest, well...I wouldn't have gone with you, I wouldn't have wanted you to stay and miss such a great opportunity, so we...we went our separate ways. Life happened. I can't be sorry it didn't go my way, I have no control over such things, doesn't matter how much I wish them to be different. This is it. There is no what if's, there's only this one reality.\"\n\nAs soon as I shut my mouth I knew I had spoken a lot but said nothing. All rubbish.\n\nFinn remained impassive.\n\nThere was a clock on the wall behind him. It's ticking the only sound echoing in the kitchen.\n\n\"It matters, Hero. Everything matters.\" There is that voice, that tone of voice doctors use to tell you bad news. That calm, understanding voice that carried bad news. That was how Finn sounded when he spoke. \"Just admit it. You were scared. It wasn't about my so called lie, it wasn't about leaving your home behind, it was about you. You were scared.\"\n\n\"No.\" I hissed, and my denial awoke something dark in him.\n\n\"Yes! Yes, you were, just fucking admit it already. Come on!\" He spoke harshly, taking a step closer to me with every word out of his mouth. \"Come on! Don't hide behind your sloppy excuses and nice words! You were scared!\"",
        "The hot blood made his pale skin red. He felt even warmer now he was so close, a step away from being in direct contact with me. I could feel heat emanating from him and burning through the fabric of my dress. My body pressed itself harder against the edge of the sink, but I had nowhere else to go. I couldn't run. Finn's tall body was a wall between me and my only way out. So I gave in under his pressure.\n\n\"Yes! I was scared, damn you!\" I shouted, stepping forward and facing him, our chests touching. \"I was too young and I loved you too much, it was overwhelming! I was afraid of how much I loved you. I didn't want to be that vulnerable. I didn't want to be so emotionally dependent on you or anyone, for that matter! What if I had gone with you and then sometime in the future one of us decided we didn't want to be together anymore? Where would I go? What would I do? You'd still have your dream, but I would have nothing! You'd be the only thing I had there. I was you, I lived and breathed for you, I spent my days thinking of you! It was too much...I got scared, because you had the power to hurt me. You had me, you were me.\" Finn's shallow, warm breaths blew on my face. I stepped back, sighing with the weight of saying all those things I never wanted to admit, even to myself. \"Yes, I could easily have gone with you. I could have forgiven the lie. I did forgive it, a long time ago, but I can't forgive myself. I made it all bigger than it was out fear, and now here we are. Fucked up.\"\n\nI widened my eyes in an effort to avoid crying. I must have looked like a scared little doe under the aim of a hunter. Big eyes, heavy breathing. I wasn't doing so well.\n\nFinn smirked the way one would do at the sight of a pathetic creature you felt glad to see hurt. \n\nI furrowed my brows, and my lips started to shake. He was enjoying listening to me say all that, like a mean child enjoys torturing helpless little animals.\n\n\"Fear? Fear of what, Hero? Fear of commitment? Is that your best excuse?\" He said coldly.\n\nThe little empathy showed in his eyes, his voice...My warm tears got the best of me.\n\n\"No. Not fear of commitment. Fear of...I don't know, life maybe? Fear of getting hurt by the inevitability of life, fear of chance, of circumstance-\"\n\n\"You just didn't trust me.\" His words interrupted mine.\n\nTrust him? I shook my head, confused. Of course I trusted him. \n\n\"Finn, I did-\" \n\n\"No, Hero, you didn't.\" He wouldn't let me talk. \"You didn't trust my love for you. I understand I hurt you by not telling you sooner about all that internship business, but I knew you, I know you. I knew you would've used that as an excuse to run away from me -as you did!-, and I loved you. I didn't want to lose you.\" He stopped, turned and walked towards the kitchen isle before turning back again. When he spoke again he pointed his accusatory index finger at me and his face went redder, contorted in contained anger. \"You...you weren't just scared. You were a coward. You put yourself first. In an attempt to save yourself pain you hurt me. And, you see, I'm not trying to excuse myself from any blame here. I know how much you value honesty and dialogue so, yes, I should have told you sooner, but you...you should have talked to me. If you were scared, Hero, you should have told me. I would've have given you time. I would have waited for you.\"\n\nI'm not sure I processed everything he said. There was a buzz in my ears. Tears burned my eyes and dulled my vision. A coward? He'd called me a coward. In my numb state I still managed to wonder if everything he said would've hurt this much had he been wrong. And I knew he wasn't. \n\nI tried speaking despite my shaky lips.\n\n\"I just-\" And again, he didn't let me.\n\n\"And you keep saying there is no 'what ifs'. All your excuses are based on you wondering what if! You can't know how things would've been. You don't know that we wouldn't still be together had you gone with me! And I would have loved you, Hero. Damn it! Proof of that, I still do, standing right here right now, even though you don't deserve it. Even knowing you didn't choose to be with me. Fear?\" He laughed, even throwing his head back, as if that word were the funniest word ever. \"Fear of being hurt, you said. Look at your life right now. I left and after two years you married some fellow who would rather shag your fucking intern than you. Look how well your self preservation worked out for you.\"\n\n\"SHUT THE FUCK UP, FINN.\" I felt my whole body shake with anger. Who did he think he was, to stand there, inside my own damn house and deliberately humiliated and hurt me like that?\n\nHe went on throwing words at me, as if I hadn't said a word.\n\n\"I would have waited for you. If two years were all you needed to finish your degree and get your life together, I would've waited.\"\n\nI was like a scared little mouse trapped in a corner. I stood there, crying and shaking, completely pathetic. As much as I wanted to, I didn't even have words to throw back at him. Nothing I had to say could have hurt him the way his words had hurt me.\n\nAll I wanted was to not feel. I wished there were a way to physically removed the pain, the hurt. To just extinguish it. Switch it off.\n\nI thought he was done with his assault. He wasn't.\n\n\"You know, you deserve what you got.\" His eyes used to be the thing I loved the most. I thought they were so expressive and warm. Right now, they were expressive alright, full of hate, rims reddened. \"You're still the same immature little girl you were ten years ago. Selfish and insecure.\"\n\nHe hissed, more than he spoke. Like a snake threatening its prey. And I was allowing myself to be a victim. \n\nWhen had he become so cruel?\n\nI hated to be so damn weak. \n\nSo why was I doing it?\n\nI straightened my back, lifted my head up and looked right into his eyes, knowing full well I was more pretending to be brave than anything else. I didn't try to repress my tears.\n\n\"Is this why you wanted to come here? Is this what you wanted to talk about? So you said everything you needed to say. Now go. Get the fuck out of my house. And I hope to god I never see you again, Finland, for your sake and mine. If you hate me so much, fine. Go. Out of my life, out of my mind...Out!\" My voice got higher and braver gradually. I puffed my chest and let out every word I didn't know needed out. \"You left and I survived it. I lived just fine without you. However fucked up my life is right now, it is my life. Mine! So go! Just go! Begone!\"\n\nI felt the need to hurt him. I felt it running in my veins and I felt it roll across my tongue. \"Just say it,\" It urged me, \"just hurt him like he just hurt you.\"\n\n\"I'm a selfish, immature girl who doesn't deserve your love. Well, I don't want it either. So go, and leave me be.\" \n\nIt worked. I saw the hurt flashing in his eyes.\n\nMy mouth quirked into a wicked, content smile. I didn't feel happy with myself, though. Truth be told, I felt miserable. Dead inside. None of that was true and I knew it. I did want his love, because I too, loved him still. Even though none of us deserved it.\n\nFinn just stood there, staring angrily at me. Everytime he exhaled his body shook. I leveled his gaze with as much temporary hate and defiance as he did mine.\n\nHe didn't move a muscle. There was a little vein pulsing on his temple. His jaw was clenched and he stood frozen, immobile like a statue. Whenever he was really mad he would always stay still, as quiet as he could to try and master his temper. But I just wanted him to go, so I did the thing I knew well enough I should never do, I interrupted his exercise. Finn wasn't a violent man, but he had a temper, and I knew well not to get between him and his anger management.\n\n\"What are you waiting for, Finn, just go! GO!\" I took one single step towards him while I yelled at him. But moving faster than I thought possible for a man so tall, Finn grabbed me by the wrists and hauled me towards him. My body hit his with such force, it hurt my chest.\n\nHe just stared into my eyes, his own so maniac, so full of some primal emotion, I felt scared of him for the very first time in my life. I had poked the bear. \n\nMy wrist were held high in front of me. He gripped me so tightly, his knuckles were white and his hands shook. \n\nThe pain stung my skin, I felt the blood pulsing wildly where he held me. The tips of my fingers already felt cold, deprived of blood. The way he twisted my wrists was sure to give me chinese burns. \n\nThe worst, most scary thing of all wasn't his physical reaction though. It was the cruelty, the harshness on him, on his words...that wasn't the Finn I knew, not my Finn. That was another man. The Finn I had given up out of fear. Out of cowardice.\n\nI whimpered and felt the tears coming faster down my cheeks. I wanted to beg him to let go, he was hurting me. But I didn't move, I didn't beg, I didn't wiggle away. Instead I moved closer to him, pressing my breasts to chest chest until they were crushed under my dress.\n\n\"Aren't you happy you hurt my feelings, now you want to cause actual physical harm? Is that it?\" I said slowly, just loud enough for him to hear it. \n\nI must've hit a nerve, for he let go of my wrists and backed away. \n\nI rubbed my hands around the skin on my wrists. It was crimson, and already turning purple.\n\nFinn's expression softened a little, but it was still hard. He pressed his lips into a line, expelling all the blood and making them white, before he spoke again.\n\n\"You know I would never-\" \n\n\"Never hurt me?\" I spat at him, holding my wrists up to him. \"You just did.\"\n\nHe crooked his head to the side, squeezing his eyes shut and ran a hand over his hair.\n\n\"Don't do this, Hero.\"\n\nNever in a million years, would I have ever thought things would take such a turn. I couldn't imagine it being any worse. I didn't know how we would fix it now. I didn't know if we could.\n\nAll the time I had been crying I let my tears flow freely. Now I felt them running down my neck and into the gap between my breasts. \n\nI brought shaky hands up to my face and wiped my cheeks, sniffing.\n\n\"I think we said everything we had to say to each other. We did enough damage. You should go now.\" My words came out nasal.\n\nFinn chuckled, an incredulous and wry sound.\n\n\"No.\" He said firmly.\n\nI gasped and widened my eyes. Why wouldn't he just go?\n\n\"Just go, Finland! What the hell do you want from me? Haven't you said enough, humiliated me enough, you still want more?! Here I am! Say it! Get it all off your chest! Throw anything you want at me! Come on! Do it and go!\" I had lost all control over myself. I screamed and cried, desperately spilling words that just made it all worse. I cried so much it was hard to speak, my chest hurt and trapped the air in, not letting it out or any fresh air in. I dropped to my knees depleted of any emotional strength. \n\nSomething happened then, I don't know what. A shift in the air, maybe. I said something, or I did something that calmed Finn down. Maybe he felt pity, I'm not sure. I felt him by the side on the floor, his hands rubbing my back, his mouth on my hair while he whispered soothing sounds into it.\n\nI searched for some strength and found none. I put my hands on his chest and fisted my hands on his cotton t-shirt. \"I can't stand this anymore. I can't have you haunting my life any longer, I had ten years of it! Now leave me in peace, please, please, please...\"\n\nI kept saying please again and again, until the word was just a whisper. All those feelings I didn't even know I had been keeping in came rushing out, breaking me down. Finn rocked me, cradled me on his chest, with his arms protectively circled around me. \n\n\"Shhhh. Shhhh.\" He whispered into my hair.\n\nIt could have been minutes or hours, I couldn't tell. But finally I stopped sobbing, though tears still ran freely down my face. \n\nFinn felt the shift in my breathing and put a hand on my face, lifting it up to his. He had such a tender and soft look on his eyes now. \n\nIt was insane how mercurial our relationship had always been. Like the calm before the storm, we were perfectly fine one minute and then the next, we were trying our best to hurt each other. \n\n\"Breath.\" His soft voice commanded me. \"Breath. In through your nose, out through your mouth. Just breath.\" \n\nI did as he told me to. \n\nTaking in as much air as I could through my nose and then letting it all out, shakily through my mouth.\n\nHe nodded down at me, his eyebrows lifted and his mouth parted as he muttered. \"Yes, just like this.\"\n\nHe kissed my forehead and pulled my head to rest on his chest again, still rocking us.\n\nWe were inside a bubble where time didn't existed. I don't know for how long I sat there, head resting on his chest, listening to his heart. I remembered the one time when he explained to me that the sound we hear isn't actually the beat of the heart, but the opening and closing of the major valves. I smiled sadly into his chest.\n\n\"Why do we keep doing this to each other?\" I heard his words echoing inside his chest. There was a bitter laugh somewhere in his voice. \n\nI had always asked myself that question. That was just the way we had always been. Even though there was a lot of love between us, when we actually were together we fought a lot over the smallest and silliest of things. And when it was all over we didn't even bother saying I'm sorry, because it all just faded away once we were touching each other again.\n\n\"I don't know. We always hurt the ones we love the most. It's just human nature, I suppose.\" I said.\n\nFinn leaned back and the skin on my face that had been pressed to his chest was suddenly overly sensible to the cold air. He cupped my face with his large hands and forced me to look at him.\n\n\"Can we please stop?\" His thumb brushed my cheeks. There was such tenderness and...love, real love in his eyes. \"I don't know how we managed to do such a mess here today, but please, let's just stop.\"\n\nI was tired. My god! I was so tired of it all. I just wanted a moment of quiet with him. A moment where we weren't regretting the past or fighting over it. Just a moment where we weren't hurting each other.\n\n\"Yes. Let's stop.\" I nodded in agreement, and he hugged me tighter. I pressed my lips to the fabric of his shirt covering his shoulders. \n\nThat cloud of 'what do we do now?' loomed over us. We just stood clung to each other, both of us afraid of making any abrupt movement and disturbing our newly found peace.\n\nUnable to stop, my mind replayed his words over and over again in loops, until I fully realized how right he had been.\n\nHe'd been so mean, so intent on hurting me, but he had also been right. I had been scared. I was scared to death of being vulnerable and so thrown in his mercy I feared I'd lose myself in him. Most of all I was afraid he might wake up one day and decide he didn't love me anymore, and I, being only him and not myself anymore, wouldn't have survived.\n\n\"Finn,\" At the sound of his name he pulled away from our embrace. Meeting his eye I said the thing I should've said since the beginning of the night. \"I know it won't fix anything, but I'm sorry. I am so, so sorry. I know it's worthless to say all this now, but you're right...about everything. I was scared, I didn't trust you, and I need you to forgive me so I can forgive myself for ruining the best thing that ever happened to me. I'm so- fuck, what a damn useless word!\" I trailed off, being trampled on by so many emotions I didn't know how to deal with.\n\nI needed to fix everything so fucking desperately, even though I knew there was no fixing it. I just refused to believe that was the state we were to be left in.\n\nFinn's scrutinizing look felt like an actual physical weight on me. He pinned me down with such a deep look, I felt myself shrinking. But he held my face in between his hands and the tips of his fingers were so hardly pressed to my skull, his touch echoed in my bones.\n\n\"I don't have to forgive you, Hero.\" \n\nI sucked in a breath, afraid of his next words.\n\nHe saw the expression on my face and quickly added, brushing my hair with one hand. \"We did this mess together, you and I. We hurt each other together. We're older now and we know better, and I can promise you this won't be easy. Actually it will be hard as hell, but we can fix it...together. I only need to hear you say it, Hero. Just say it.\"\n\nI had already said everything I could think of saying, I had said I was sorry. I didn't know what else to say and whatever I said now wouldn't made the harsh words we directed at each other go away. \n\nI shook my head, pleading with my eyes.\n\n\"I'm so-\"\n\n\"No!\" He held my head with firmer hands, shaking it. \"Not that you're sorry. You've already said it. Just tell me.Tell me, Hero. Tell me!\"\n\nUnderstanding hit me like a truck. \n\nHe wanted me to say it.\n\nThose words I rarely said. \n\nThose words I only said in my head.\n\nI opened my mouth.\n\n\"Finn- No! Let me say this first!\" I quickly said when I saw him starting to protest. \"I know I'm damaged, I wish I weren't, but I can't help it. All I need to know is, if I tell you, if I let my walls down, please, promise me, promise me you'll stay and help me? Don't let me hurt us ever again. Promise?\" I took one of his big hands and clasped it with both of mine, pressing our hands to my heart. \"Promise me?\" \n\nHe came closer and pressed his forehead to mine. When he spoke, his breath blew warm on my face.\n\n\"I do. I promise you. I won't let you push me away again, and I won't let you run. I promise.\" He said softly.\n\nI let out the most relieved breath ever. My entire body relaxed. \n\nI brought our joined hands to my mouth and kissed it so blindly, I felt my lips on my own hands when I meant to kiss only his.\n\nThen I pressed my lips to the back of his hands and pulled away so I could look at him.\n\nIt was such a simple thing to say. It was what I felt. What people told to one another everyday a thousand times over. To me, though, it wasn't just words. It meant giving myself to him, it meant giving us a second chance, and a second chance held the possibility for failure as much as it did for success. It was a leap of faith, one I knew I had to take now or I would just regret it again, the way I regretted not taking it ten years ago. But now I was ready, I was still scared, but I also was sure that running towards him, other than from him, was what I needed to do.\n\nI breathed deeply, and just simply said it. \n\n\"I love you, Finn. I never stopped loving you, not for a single fucking moment all of these years, and-\" Whatever it was I was going to say was lost forever the moment his lips crashed over mine. \n\nFinn moaned a relieved sound and his hands twisted in my hair. \n\nThe way he kissed me...lips, and tongue, and teeth, and rough hands. Every single one of my sensitive nerve endings were on fire, alerting me to his touch. He robbed me of all my senses. To feel was the only thing I knew. \n\nHis tongue forced its way inside my mouth and met mine with equal hunger. His hands travelled down my body until they found the hem of my dress, which he hastily brought up my thighs. He ran his palms up and down my skin, digging the tips of his fingers on the flesh on the sides of my ass. \n\n\"Listen to me,\" He took his lips away from mine and I whimpered at the loss of contact. \"I'm not ever letting you run again. If I go to fucking China you have better follow me.\" He breathed out, with a husky voice before kissing me again and making me moan.\n\nI needed him to keep touching me more than I needed air to breath. My skin missed his touch, his touch that made it come alive like no other's could ever do.\n\nOnce again, Finn's lips left mine, but he quickly moved them to my left ear. He trailed kisses and little sucks from my ear to the notch in between my clavicles. I shivered and curled my fingers on his hair. ",
        "I arched my back and twisted my other arm behind me until my fingers met the little zipper of my dress. With the movement, I pressed more of my body to Finn's and I could feel his burgeoning erection on my stomach. I pulled the zipper down the middle of my back.\n\nWhen I felt Finn's teeth sinking down on the skin of my neck I moaned and pulled at his hair to bring his mouth back to mine. One of his big hands cupped one of my breasts, squeezing it with no delicacy at all. It was only not painful, but at the same time a delicious sensation. \n\nHis free hand migrated down my body, and he lifted the hem of my dress farther up, until the fabric was all bunched up around my waist. His fingers tickled the skin on the inside of my thighs, his short nails running over it, burning me, and making me squirm under him. All my sounds were muffled inside his mouth that -thank fuck- never left mine. \n\nSmart, long, fingers slipped inside my panties right where I was wet and slippery, and needed his touch the most.\n\n\"Ah.\" Our sounds came out mingled. \n\nI arched my back and Finn's mouth slipped from my mouth to my chin, where he continued to kiss me. One finger danced over my damp clit, circling it and heading down to my entrance. His teeth grazed over my jaw, while his middle finger slid inside me. An uncontrollable shiver took over my body. Finn kept massaging my clit with his thumb as a finger stroked deeper and deeper inside. I could feel how tightly my walls clung around his finger, and my body reacted to him by releasing more wetness that aided in his stroking movements.\n\n\"Fuck. You're wet.\" He growled on my neck.\n\nThe tension his fingers created started to build up in me. All that stimulation concentrated right where all those nerves were bundled up was bringing me closer and closer to the edge. I just needed a little bit more, just a little bit and I'd be right there...but when the tension became great enough and my hold on his finger tightened, he pulled it out. \n\n\"Nooo!\" A protestation moan left my lips and my clit pulsed with the tension Finn wouldn't ease. \n\nHe brought his fingers to his mouth and sucked them, closing his eyes and furrowing his brow like that was the best thing he'd ever tasted. I got impossibly wetter as I watched him. \n\nHe opened his eyes and pulled his fingers out of his mouth, licking his lips. He brushed his thumb over my mouth and my tongue swept out. I tasted my own saltiness on my lips before he slid his thumb inside and brushed it on my bottom lip.\n\nI lifted my head and took his thumb in my mouth sucking at it the way he had just done. Finn hissed out a breath retrieving his thumb, and smashed my lips with his. The kiss tasted like me.\n\n\"I missed your taste so fucking much.\" His breath was hot on my lips when he spoke.\n\nA wide and satisfied smile spread across my face when a particular memory came to mind. I remembered he'd said, the very first time we ever spoke \"I want to know what you taste like.\"\n\nFinn's lips migrated down, kissing me even though most of my upper body was still covered by my dress, he just kissed the fabric over my skin in a frantic manner. When he reached my navel and his lips came in contact with actual skin I stifled a little cry biting on my index finger.\n\nI shivered when his teeth grazed the skin of my belly. He hooked his fingers into the waistband of my lacy panties and slid them down my legs so fast and roughly, I thought he'd rip them. And without any teasing or warning, Finn put his mouth on me.\n\nAll that time ago, Finn and I must have had sex a million times. It was such an incredible thing how the memory of my body was so much more faithful to the reality than that of my actual mind. But even though I knew what to wait for, nothing in the world could have prepared me for what his open mouth on my clit felt like.\n\n\"Oh, god, Finland!\"\n\nMy body shook so violently it felt like I was convulsing. All the thoughts in my head turned into bright, blinding colors before my eyes.One of my hands flew down to his hair grabbing a fistfull of it, while the other dig its nails on his shoulders.\n\nFinn was wild, sucking and licking me blindly. I wasn't even sure he was doing it for me. By the sounds he made, it seemed more like he was doing it for his own pleasure, using my body at his will, punishing me; his tongue sliding vigorously over my clit and then, the following suction of his lips.\n\nMy hand moved from his shoulder up my body until it found one of my neglected breasts and squeezed it. My hard nipples protested against the piece of clothing preventing them from direct contact with my hand.\n\nIt didn't seem possible for me to be so close already. I wanted it to last longer. I wanted it to last forever, but it was too good, too overwhelming a feeling for me to control. I opened my mouth to say slower, but all that came out were pleas of yes and more and right there and don't stop.\n\nFinn's fingers dug at the flesh of my hips and he pulled me down to him. His tongue flickered right over my engorged clit never stopping for a second of rest. My heart felt like jumping out of my chest; I heard its drumming in my ears.\n\nPropping myself up on my elbows I lifted my head up to look at him. It was impossible not to.\n\nHe was lost in me. He had his eyes closed, and there was a crease in between his eyebrows which seemed so soft I wanted to touch. He licked me in such a way sometimes it wasn't even his tongue I felt, but the tip of his nose and his teeth. \n\nEverything started spinning. \n\n\"Ah..\"\n\nI breathed, gasping for air, but still my lungs protested at the lack of oxygen inside them. \n\nMy clit pulsed, but it wouldn't let go, my orgasm was holding back, waiting and waiting to hit me when it'd be too much to bear. Any other sensation my body could be experiencing in that moment was numbed. All of my ability to feel was concentrated on Finn's tongue lavishing me. \n\nHe knew just what he had to do to make me let go; so sucked at my clit, roughly. The vibration of his moans, the words he spoke into me, the force of his fingers burrowing into my flesh. The effect on my body was indescribable. I came so hard I lost sense of myself. \n\nI know I screamed loudly, but I heard nothing.\n\nI saw nothing.\n\nI could only feel. \n\nI lifted my hips from the ground and at the same time pulled his hair bringing his face close to me. More wetness than I though possible flowed from my quivering pussy. Every single muscle in and around my pussy contracted like crazy. A rush of hot blood spread, from my pelvis, to every corner of my body. \n\nFinn's mouth was still on me. Still licking me. It was too much. I couldn't take it. My pulsing clit was more sensible than I ever felt it before. I wanted to speak, and ask him to please, stop. Please, stop before you kill me.\n\nI opened my mouth but the sound that came out of it was a whimper, that sounded more like I was crying than begging. \n\nFinn stilled, his lips drifting from my centre to the warm skin on the inside on my right thigh. His breathing gradually came back to a more normal rate while I stroked his hair. My other hand was still on top of my breast, strengthless.\n\nFinn stretched his long arms up until his hands engulfed both my breasts; he towed himself up until his face was leveled with mine.\n\n\"Are you ok?\" He asked, with his mouth skimming mine.\n\nOk didn't begin to cover it.\n\n\"I'm bloody fantastic.\" I was amazed by how edgy and strained my own voice sounded.\n\nWith a hand on his nape I pulled him to me. His lips were so warm and wet. He tasted like me. \n\nI let my hands roam over his back only to realize he was still fully dressed. I curled the hem of his shirt around my fingers and pulled it up his torso. With inhuman speed, Finn pulled his shirt all the way off, tossing it to some corner and revealing skin that seemed to stretch for endless miles.\n\nHe still had such smooth skin that covered perfectly defined muscles. He'd never been the bulky sort, but seemed to be bigger now than he was in college.\n\nThe need to feel every inch of him took over me, but his lips were back to assaulting mine before I moved a muscle. Finn's tongue entered my mouth coaxing sounds and moans out of me; But too soon, he pulled away, cupping my face on his hands.\n\n\"I want to be gentle with you, but I don't know if I can. I've missed you too much.\" He spoke hoarsely, breathing hard.\n\nI smiled, so happy I could die, and I caressed his face with one hand, brushing my thumb over his lips.\n\n\"I don't care what you are. Gentle or not, I only care that it's you.\" \n\nFinn shook his head, his eyes flashing with urgency as he bent down and kissed me, hurting my already swollen lips. His hands went to my shoulders and he pulled my dress down, the fabric willingly sliding off my shoulders and arms; He stopped when my bra was exposed. The cold tile floor hit my shoulder blades and sent goosebumps up my skin; my nipples were visibly hard under the lacy material that barely served the purpose of covering my breasts.\n\nWithout even removing my bra, Finn's mouth fell open around one nipple, causing me to moan. The curious fingers of one of his hands dipped inside the rim of the bra grazing the other nipple.\n\nHe pulled the cups of my bra down and licked small circles around the circular darker spot on my breasts; Taking a nipple between his teeth, he bit it before pulling at it, and then letting it escape his lips only to repeat the process on the other one.\n\nWaves of electricity flowed from my breasts to my pussy commanding it to get ready for him. It pulsed with the urge to feel him.\n\nI slipped a hand between us until my palm met the glorious length of him strained against his jeans. I shivered when he groaned and the sound vibrated on his mouth around my nipple.\n\nMoving up, I hooked my fingers into the waistband of his pants.\n\n\"Get this off. Off, now!\" I pleaded in a moan.\n\nFinn pulled his body from over mine and stood on his knees. He stared down at me with ravenous eyes. Carefully, he pulled the dress that was all bunched up around my middle down my legs, then he leaned over me and commanded,\n\n\"Lift your back.\"\n\nI arched my back, heeding his command. He unclasped my bra and removed it, throwing it over his head.\n\nCompletely naked, I lay with my back pressed to the cold tile floor, my legs spread around his side, while he ran his palms up and down my thighs, moving up to my belly, my ribs, and then my breasts. His hands were so warm and big, it made my tits seem little and insignificant.\n\nHis eyes kept burrowing into mine, letting me see just how much he wanted me. My hands went to his wrists and slid up his strong, masculine arms, full of muscles and salient blue veins. I followed a path from his arms to his shoulders and ran my nails down over his chest until I reached his belt. \n\nPulling myself into a sitting position, I started unbuckling his leather belt with frantic hands, my eyes not daring to tear away from his gaze. I pressed my lips to his stomach kissing and grazing my teeth over the skin of his abdomen and ribs.\n\nI pulled the belt from its loops and threw it somewhere on the floor before moving my hands to the button and then the fly of his pants.\n\nBiting at the skin of his belly, I pulled his pants down his ass to the middle of his thighs. He was hard under his black boxers, the tip of his cock peeked out the waistband.\n\nMy eyes were fixed on Finn's face drinking in every single one of his reactions. While I pulled his boxers down, he dug his fingernails on the skin of my shoulders. His cock sprang free, hard and pointing at me. I grabbed it, squeezing gently. Finn's rich brows drew closer together. My tongue came out to lick my lips before licking the tip of his cock very, very slowly. I tasted his saltines. \n\nFuck, how I had missed his taste. \n\nI took him in my mouth, because I honestly did not have it in me to play before taking what I wanted.\n\nFinn threw his head back, his hands curling its long fingers on my hair as he let out a whistle through his teeth.\n\nI grabbed his ass, wanting to bring him closer to me, but he pulled me by the hair, slipping out of my mouth. I looked up at him in bewilderment and reached, open mouthed, for him again, but he took his cock on his hand and away from me.\n\n\"No.\" He said bending down to kiss me. \"I need to be inside you, Hero, please. It's been so fucking long.\"\n\nAnd it had. Too long.\n\nWith the sudden reminder I realized I didn't remember what it felt like to be filled by him. I only knew it was heaven, and the best feeling I had ever experienced.\n\nI wanted to feel that again and at his words I laid back on the floor and spread my legs wider, offering all of me to him. With darkening eyes Finn came down over my body and I moaned when the skin of his chest came in contact with my overly sensitive nipples.\n\nHis lips played along my neck, kissing up my chin until he reached my mouth. His pants were still hanging on his thighs, so I hooked my toes to the waistband and started to push them down as much as I could, until they stuck to his calves. Wiggling his legs frantically, Finn managed to kick them out without ever taking his lips away from mine.\n\nThe muscles on my cheeks had the impulse to stretch my mouth into a smile, but kissing Finn and feeling his tongue dancing around mine was more important.\n\nI reached down between us until I wrapped my hand around his length. He was so long, and hard, and felt so silky on my palm I could only let it go because I knew how infinitely better he would feel inside me. Guiding his tip to my entrance, I brushed my wet sensitive skin with it.\n\nWe both moaned in unison.\n\n\"Ah.\"\n\nHe rocked his hips forward pressing himself right against my wet clit. He didn't stop, rocking back and forth against me. I gripped his shoulders wanting more, but I actually wanted to feel him inside. With a hand between us I held him tight.\n\n\"In. Now.\" I begged him.\n\nWithout a word Finn replaced my hand on his cock with his own, and ran it over my wetness once more.\n\n\"Agh!\" I hissed. \"Please!\"\n\n\"Tell me how much you want it.\" Finn gritted out, pulling back to look right at me. \"Tell me how much you missed it, how much you love me. Tell me.\"\n\nHe kept swiping the head of his cock over my wet clit, I wasn't able to concentrate on anything else.\n\n\"Tell me.\" He said more urgently, positioning his cock still at my entrance.\n\nHe pushed forward just slightly, but enough to make me beg for more.\n\n\"Oh, please! I want it! I love you, I love you!\" I whispered blindly, not even sure I managed coherent words out.\n\nWith a jerk he pushed inside me, stretching me wider than I thought possible.\n\nI catched a surprised breath.\n\nFinn growled and pressed his forehead to mine.\n\nWe didn't dare move. \n\nWe both stood still, allowing our bodies to take in the sensation of being together again after such a long time.\n\nMy body opened up to him, welcoming him, and adjusting to him as if the last time it'd felt him had been yesterday.\n\nSuddenly, he thrust up roughly, going so deep inside me I thought I'd split in half.\n\n\"Fuck. I've missed you so much!\" His voice was barely audible.\n\nMy pussy clenched around him so tightly I was afraid he wouldn't be able to move. But then he moved. He pulled back slowly, and even slower, buried himself inside me again. \n\nMy eyes rolled back inside my head.\n\n\"Oh, fuck! Finn, please!\" I didn't even know what I was pleading for.\n\nI was shaken up by another violent thrust of Finn's hips, and I cried out.\n\n\"Ahh!\"\n\nI wrapped my legs around his waist and hooked my ankles at his ass, pulling him to me. I wanted deeper, I wanted faster, I wanted more.\n\nFinn's lips met mine in a sloppy kiss.\n\n\"I can't stop and I can't go slow, Hero.\" He warned me in a strained voice.\n\nI arched my back and grabbed his ass with both my hands.\n\n\"Then don't.\" I whispered back.\n\nA that Finn moved again. He really moved. I could feel the contraction of the muscles on his ass under my palms when he pushed inside me, and then relaxation when he pulled out only to go in again.\n\nHe picked up a rhythm and kept pushing and pushing himself in until he couldn't go any deeper. He was home and I couldn't be happier to welcome him back.\n\nHis movements were frantic and hot. It felt like the heat of his skin would burn mine. He moved in and out, in and out of me, flat out fucking me. His mouth sucked and licked my skin, devouring every inch it could take in. Every thrust of Finn's hips was violent and almost blind, as if he wasn't even the one in control of his own body. \n\nThe force of his pushes jolted my body upwards, the sweat sprang from my skin making it easier for it to slid against the tile floor. My left hand went flat against the floor, as my right hand grabbed the kitchen cabinet handle in an attempt to keep my body steady. \n\nI turned my head to the side biting the skin of my biceps. Finn was overwhelming me. As hard as it tried, my mind couldn't grasp and process all the sensations coursing through my body. His lips were everywhere. My lips, my neck, my chin, my shoulders. His hands all over my sides, my hips, my waist.\n\nMy blood boiled under my skin. It was like fire meeting gasoline. As he moved, my nipples brushed against his chest. His damp skin rubbed against my slick clit. All of my body reacted to him, just for him. \n\nMy pussy gripped him tighter with everyone of his thrusts. I felt the tension building and building inside me. The pounding of his cock inside was all I could feel. It was Finn, my Finn inside me.\n\nHe supported his weight on his elbows, while his hands cupped my face, turning it to him. He locked his warm brown eyes on mine.\n\n\"Look at me. Let me see you.\"\n\nI turned my face into my arm again, trying to look away because I knew that looking right at him, seeing those eyes burn into mine and his face contorted in pure pleasure would make me lose it faster than I wished to.\n\n\"Look at me, Hero.\" \n\nHis hands on my face wouldn't let me look anywhere else but at him. And as I did, I was lost. I was suddenly engulfed by a desperation, because I wanted his body closer to mine, closer than it was possible.\n\nHe slowed down and moved his hips in small, slow circles driving me mad. I grabbed his ass burying my nails into his flesh.\n\n\"Kiss me.\" How I managed those words only god knows.\n\nFinn did as I'd asked and his mouth came down to mine, absorbing my little sounds. The feeling of him was so spectacular, hot tears sprang from my eyes. I don't know how or why, but when I caught myself they were running down the corners of my eyes and into my hair.\n\nThere are about 3.650 days in ten years. 3.650 days where I didn't feel him. 3.650 days when I didn't know a thing about him. But now, I had it. I had him, his body in my body and it was too much, too wonderful. \n\nHe slowed his movements down, almost stopping altogether.\n\n\"What's wrong? Did I hurt you?\" \n\nHe was all concern for me and it made me cry even more.\n\n\"I'm fine. Just please, don't stop!\" I said with strangled words.\n\nFinn stirred above me and I panicked thinking he'd leave me.\n\n\"Please, stay!\" I begged.\n\n\"Shhh. I'm here. I wouldn't dare leave you.\" \n\nHe brushed long fingers over my forehead and then grabbed my thighs. He planted his knees on the floor, stabilizing himself with his large hands on my thighs, and sat on his heels, slipping out of me, and causing me to whimper with a feeling of unbearable emptiness.\n\nFinn's glorious chest stood above and in front of me in perfect display. I extended a hand to touch it, but before my fingers could come in contact with his skin he grabbed both my arms and pulled me to him, sitting me on his thighs. We sat almost eye to eye, the position granting me a few inches of superiority.\n\nWith a hand on my ass Finn urged me to lift my body. I stood on my knees, planted on the floor by his sides. He positioned his cock at my entrance once again and then, with a hand on my shoulder, pulled me down to him.",
        "I was already swollen and slick from his previous administrations, but when he re entered me it felt impossibly tighter.\n\nI almost came right there.\n\nI gasped and felt more wetness released.\n\nHe held me by the hips and started to move again.\n\nThe new position was fantastic. My head stood above his, my nose leveled with his forehead. His skin there was pricked with sweat, and I tasted salt on my lips when I kissed it.\n\nHe tucked his head into my neck, his hair prickling my cheeks, as he pushed himself inside me again and again. I fell down back on him by sheer force of gravity. He was the one controlling the movements of my body, I could do nothing else but feel.\n\n\"Oh...\"\n\nMy fingers fisted in his hair and pulled his head back so I could kiss him. Our damp skins aided in our movements, making it easier for our bodies to slide against each other's My clit rubbed on his skin slick from me and our sweat. Finn's arms were so tight around my ribs it was hard to breath. He growled in my open mouth.\n\n\"Fuck, Hero! That's so bloody tight!\" He hissed out.\n\nMy hips took control of the movements, pushing forward to meet his thrusts. I moved up and down on him, relishing on the feeling of his cock pulling out of the fist-like grip of my pussy, and then going in back again reaching that spot inside me that made my body shook with pleasure.\n\nFinn's breaths were hot and damp on my ear.\n\n\"Come for me, Hero. Come, love.\" \n\nThere was something savage about his words.\n\n\"More! More! I'm almost there!\" \n\nHeat flushed my body. I gripped his hair and circled my hips over him, moving rhythmically up and down, up and down...Inside I felt his cock pulsing. He groaned on my neck, and pushed himself so deep inside I swear I could feel the echo in my damn throat. \n\nAll the muscles in my belly tightened and coiled. His cock slid out, and then quickly and forcefully in. The sounds of flesh hitting on damp flesh echoed in my ears. A shiver possessed my entire body, and inside I felt my walls starting to quiver. \n\nFinn slowed down, his cock pulsing inside me. He was holding back, waiting for me. For me. After all that had been said and done that night. Even as he felt so wild and raw going in and out of my body. He was waiting for me. \n\nI threw my head back, arching my back and screaming the obvious.\n\n\"Fuck, I'm coming.\"\n\nAt my warning, he resumed his thrusting at his chosen speed. The slide of Finn's long cock inside me was punishingly strong and fast. He enclosed a hand around my neck and pressed his thumb to my throat.\n\n\"Come with me.\" He urged me with his hoarse voice.\n\nMy breaths came out shallow and sharp. I bounced my body over him.\n\nI was so, so close. \n\nI wanted to let go but at the same time I didn't want it to end.\n\nFinn moved his mouth to mine and kissed me hard, then he moved his lips down my neck where he opened his mouth and sunk his teeth on my skin.\n\nHe was moving so fast, so fast...Everything exploded.\n\nI came screaming unintelligible words, begging him not to stop moving inside me. His smell and the feeling of his cock pulsing inside me was all I knew existed. \n\n\"Ah...ah! God! Please, don't stop! Don't stop!\"\n\nBehind my eyes there was only blackness. The way my body shook, I only didn't fall back on the floor because Finn's arms wouldn't let me. The walls of my pussy jumped, contracting around his cock. Every pulse embracing his length, outlining it. I could feel every inch of him still hammering into me. The surface where my ass touched his thighs was slick with my wetness.\n\nIt very nearly hurt when he dug his fingers on the flesh of my ass as he pushed into me so vigorously he could've transpassed me. Finn growled a muffled sound on my neck and came forward, falling over me pushing us both to the floor as he came.\n\nHe erupted inside me, releasing himself as he cursed.\n\n\"Fuck, fuck, fuck.\"\n\nHis body twitched and the muscles on his ass contract as he emptied all of his essence on me. \n\nI dissolved into a million pieces, every single one of them saturated with pleasure.\n\nFinn's breaths came out short and heavy on my neck. My legs wrapped themselves around his hips. I couldn't move. I felt like melted wax, warm and liquid. His tall and heavy body was on top of mine; our chests heaved in synchrony. Mine went down as his went up. My hands, moving on their own, went up and down Finn's back. The skin there was slick, wet with sweat and I drew circles on it with the ends of my fingers. \n\nOur bodies were still linked, his glorious hardness pulsing inside me, while my walls spasms subdued.\n\nAs much as I loved the feel of Finn's full body pressed to mine, he was too big, too much. I squirmed under him, not really wanting him to move, but needing him to. \n\n\"I'm sorry, I just-\" Finn reached behind him and unclasped my ankles, opening my legs and freeing himself. He then rolled to his side, and I breathed relieved. \n\nThe satisfied grin on my face couldn't be bigger. I was just staring at the ceiling in complete bliss, listening to our breaths steadying. \n\n\"Fuck.\" Finn chuckled. \"Just...fuck.\"\n\nI turned my head to the side to find he too was smiling widely looking up at the ceiling. I rolled close to him and planted a kiss on his shoulder. He turned his head, smiling my favourite smile in the world.\n\n\"What is it?\" I managed to breath out.\n\nHe laughed a carefree sound, and ran a hand down his face.\n\n\"That was...unbelievable.\"\n\nA crazy laugh possessed me. I felt so completely and incandescently happy I had the urge to pinch myself to make sure that was real. I snaked my arms around Finn's right one and went on laughing on his shoulder. He arched an eyebrow in question. I waited, my breath labored, until I was able to speak again.\n\n\"Wow. What a night.\" I smiled at the thought that an hour ago we were screaming at each other.\n\nFinn turned to his side too, and extended an arm over my ribs. His naked body pressed to mine. He was so warm it was unbelievable.\n\n\"Yeah. What a night.\" He placed a chaste kiss on my lips.\n\nFragments of the chat we had stormed my brain, ruining my post coital bliss. I decided it was best to say it all now.\n\n\"Finn?\" I called carefully.\n\n\"Mhmm?\"\n\n\"Did you say everything you needed to? I mean, earlier?\"\n\nHe gave me a puzzled look. I let go of my hold on his arms and pulled myself into a sitting position. Finn followed my movement and sat too.\n\n\"I just...I think it's time we leave the past behind, you know? I know it's a cliche, but, I think it's best if we say everything we need to say now, tonight, and then be done with it. So none of us will use the past to throw in each other's faces in the future.\"\n\nOf course I assumed there would be a future; I've never wished for anything so badly.\n\nFinn leaned back against the green kitchen cabinets and looked deeply into my eyes.\n\n\"I actually said more than I needed to say. I hadn't planned on being so cruel, but I just wanted you to admit the truth to yourself.\" He stretched an arm and brushed his thumb over my chin. \"I have nothing else to say about the past, except that I hope none of that ever happens again.\" He added giving me a suggestive look.\n\nThe relief that invaded me at his words was indescribable. I'd had enough of the past, I couldn't have it lurking around anymore. All I wanted now was to look forward and see him there. So I asked him what I really wanted to know.\n\n\"Will you stay, then?\"\n\nFinn jerked his head back when he heard my question. His expression was one of indignation.\n\n\"Of course I'll stay, you don't even have to ask me that. I'll fucking stay.\"\n\nI smiled, feeling giddy.\n\n\"Good.\"\n\n\"But, Hero,\" He spoke with that tone of voice that made me apprehensive. \"No more running, no more getting scared, no more excuses.\"\n\nI simply nodded, eyes wide.\n\nFinn moved closer to me, and his lips brushed mine.\n\n\"I'm here and you can always trust me, always talk to me. I love you and by now I dare say is very well proven I won't stop loving you so easily.\"\n\nI kissed him quickly before speaking,\n\n\"Wherever you go I'll follow, Finland. I love you.\" \n\nHe buried his fingers in my hair and kissed me deeper. With the swiftest of movements he got up to his feet and picked me up in his arms.\n\n\"Where's your bed, Hero?\" He asked, \"I do love you, but never again are we having sex on this bloody cold floor.\"\n\nI laughed into his neck feeling the happiest I've been since I was twenty two years old.\n\n\"Up the stairs. Second door to the left.\"\n\nFaster than my synapses could fire and transmit the information, Finn was carrying me up the stairs and into my room.\n\nThe feel of the silky sheets I had changed just this morning had nothing on the feel of his naked skin on mine.\n\n***\n\nWe lay entwined, kissing each other in between words.\n\nI was exhausted, my stubborn eyelids kept falling over my eyes while I fought them, wanting to stay awake and listen to Finn's voice. \n\n\"Hey, H,\" His warm breath caressed my cheek when he spoke. \"Sleep a bit. You must be tired. I know I wore you out.\"\n\nWith a numb hand I slapped his arm.\n\n\"Cocky bastard.\"\n\nWe were so close that when he chuckled my body shook with his.\n\nIt was all too much for one night. My body and my brain couldn't cope with the fact that I had Finn there with me. My Finn, and naked. \n\nHe had promised me he'd stay, but I was afraid to wake up and find him gone.\n\n\"Finland?\" I called.\n\n\"Mhmm?\"\n\n\"Don't go anywhere. Please?\"\n\nHe kissed my hair and smiled into it. \n\n\"I promise I shall only go from this bed to the bathroom. Alright?\"\n\nMy eyes were already closed, and I found his lips with my fingers before kissing him and saying, \"Ok.\"\n\nNext thing I knew I was snuggled in his chest, inhaling his earthly scent and being engulfed by his soft warmth.\n\n\"I love you.\" I mumbled not sure I was even awake when I said it.\n\n\"I love you, too.\" Was the last thing I heard before I went under."
    ],
    "authorname": "Nanaya",
    "tags": [
        "black girl",
        "white guy",
        "romance",
        "romantic",
        "love",
        "interracial",
        "interracial love"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/unforgettable-fire-pt-03-the-present"
}