{
    "title": "Endangered Ch. 09",
    "pages": [
        "Editor's note: this story contains scenes of incest or incest content. \n\n***** \n\nHey guys, this is the second (and longer) split of what was originally chapter 8. \n\nThanks to Lunarlilith, CaptainObvious, Truehearts, and GCMIVB4 for editing assistance. \n\nEnjoy. \n\n*** \n\nThe pale purple liquid glittered up at him out of the little vial cradled in his hand. Chris sighed and tucked it back into his short's pocket. \n\nHe glanced at the air beside him again, knowing Lillian was walking in-stride and imagining the way her wide hips would no doubt be swaying. Invisible, it was distracting to even hear her unnaturally light footfalls as they walked through the underground connection to the Compound. \n\nThis morning as she'd gotten up, she made sure to give him a show getting dressed. Chris hadn't really thought about how provocative watching a woman put clothes on could be. So far it had always been about getting them off. \n\nWatching her pull charcoal stockings up onto her silky thighs and clip them onto a lacy garter belt had made his cock tent the bedding obscenely. She only laughed and then wiggled her ass sexily into a navy pencil skirt that came up to the narrowest part of her waist, clinging to her figure. Next came some odd sort of doe-skin halter top which struggled to contain her breasts and left her arms bare. As she started slipping on her 'combat boots' as he liked to call them, he suddenly realised she wasn't going to be wearing any undergarments at all today. Her rather utilitarian black boots didn't really fit her outfit very well but the rest of the ensemble was so skin-tight that it didn't matter. \n\nNow all he could think about as he walked beside her on their way to meet Michelle was that she was completely commando. He had to struggle against the desire to drag her into some sort of secluded little alcove and ravage her. His cock was dangerously conspicuous down the side of his leg, throbbing in protest of the way he was working himself up. Meeting two members of the team Michelle was putting together with a pocket-hard-on was going to make him look like some sort of horny teenager... \n\nThey met up with Michelle outside a small conference room just off the main reception area of the Compound. With her were two very unnerved women. \n\nMichelle introduced the first as Lisa Hess, a shortish Caucasian woman with quite a nice figure and very short, almost boyish brown hair. She wore a grey suit and Chris, ever the lecherous male, struggled not to let his eyes dip to assess her shapely body as they shook hands. \n\nThe second was a tall, powerfully built African-American woman introduced as Katherine (Kat) Jackson. She was almost as tall as Lillian, who would be considered a giant of a woman. But where Lillian was voluptuous, Kat was all lean muscle and very obviously in peak physical condition. She looked quite young in the company of Lisa and Michelle. Perhaps it was her more casual attire of jeans, a white tank top, and some sort of dark leather riding jacket. When they shook hands, her grip was overly strong, like she was challenging him. Indeed, her brown eyes narrowed when he simply smiled back at her. He wondered what he'd done wrong to piss her off in the ten seconds they'd been aware of each other's existence. \n\nLillian, still invisible, let out the tiniest hiss of disapproval at his side. \n\nMichelle noticed the little exchange and ushered them into the conference room where she'd set up a projector. Chris got a good look at Kat's backside in her skin-tight jeans and had to admit it looked superb, if a little slim for his refined taste. This time Lillian let out an affronted little grunt. He shrugged his shoulders. Perhaps his mysterious third heritage was pig? \n\nAs with just about everything in the Compound, the room was richly decorated. The carpet extravagantly thick and soft, the chairs firm but comfortable. A huge oak table dominated the spacious room. The walls were a calming teal and the ceiling was mostly cream but had an incredibly detailed thin stencil pattern overlaid in green and blue. Two dim light orbs shone out from inlaid recesses, providing soft illumination. Neither woman seemed to have noticed that unusual magical detail. \n\n\"Okay, you've both been given dossiers on the basic overview of our situation,\" Michelle stood with her tablet in hand as Kat and Lisa took seats opposite Chris around the oak table. Lillian stood behind him, invisible, her hands resting possessively on his shoulders. \"Through somewhat dubious means, we have discovered the existence of magical Beings who have coexisted with us in secret for thousands of years.\" \n\n\"Still ain't sure I believe it,\" Kat interrupted in her Atlanta accent. From her relaxed position in her chair, she seemed to be exuding bravado. \n\n\"We'll take care of that today,\" Michelle smiled indulgently. \"Anyway. You've accepted jobs here in Denver working under me in the youngest child agency in the Department of Defence family, the Being Interaction Agency. You've both got top level clearance as of this morning and you've signed your lives away with our strictest confidentiality agreements. Given your backgrounds and discipline, it shouldn't be too hard to keep your mouths shut for a few more months until we're ready to go public with the news. That is of the utmost importance.\" \n\nEveryone nodded agreement, uncontrolled release of that sort of information would be a nightmare. Both women had thoroughly read the briefings they'd been given. They sort of read like a fairy tale and were deliberately vague on specific details. However, the jobs they'd been offered were very real and paid very well. \n\n\"Anyway. I brought you in early because someone in our broadening network of people in the know has failed to keep their damn mouths shut. As a result, we've ended up with a public gunfight in front of a popular Being nightclub here in the city. It was an attempted kidnapping of our resident delinquent here, Chris Baryst.\" \n\nLisa's head cocked and her blue eyes were suddenly piercing him with a brutal assessment. \n\n\"Christopher Baryst? Who supposedly took out three assailants and incapacitated two more in the middle of an automatic gunfight?\" Lisa's superiors at the local FBI field office here in Denver had been trying to contact him for questioning ever since the club shooting and here she was in the very same room with him. \n\n\"Guilty,\" he said a little sheepishly, feeling Lillian's grip on his shoulder tighten. \n\n\"You've got some questions to answer if you wouldn't mind coming down to East 36<sup>th</sup> Ave with me after this?\" only the way the smaller woman said it left no doubt that she wasn't asking at all. \n\n\"Bup-bup-bup-bup, bup-bup,\" Michelle scolded, \"Hands off my asset, FBI skank. Anyway, you work for me now and if I find out you're playing for both sides, even though we're technically on the same side, I will literally defenestrate the living shit out of your career. This is too important.\" \n\nChris mocked swooning at his protector across the table and he felt Lillian relax again. Kat even had the audacity to chuckle at the special agent's bemused reaction. \n\n\"He's all yours,\" Lisa relented. \"Old habits, you know.\" \n\n\"Yes, well, he's ours actually. As for you, young lady,\" Michelle looked meaningfully at Kat. \"I've seen your Marine record. You might be just about the only woman to pass muster for dedicated frontline combat units but I won't tolerate any of your bullshit. You are not the hottest shit on this block let me assure you. I plucked you from a logistics base so you wouldn't die of boredom but I'm going to need you to keep an open mind and adapt on the fly. You've got a lot to learn.\" \n\n\"Yes, Ma'am!\" Kat stiffened, responding instinctively to the firm hand of authority. \n\n\"Wait just a second,\" Lisa was thinking over the weekend's dramatic events with new eyes. \"The club shooting was an attempted kidnapping and you say Chris here was both the target and an asset of yours... ours. But I've read his file, he's just some kid from up near Laramie. No offence.\" \n\nChris pantomimed being stabbed through the heart. Michelle tried to keep it cool but ended up giggling unprofessionally, he could be so goofy sometimes. \n\n\"Why don't you show them, Chris,\" she said. \n\n\"What, like right here?\" he looked around in concern. \n\n\"Why not? Only go half way, obviously,\" Michelle encouraged. \n\nSeeing was believing with these types of indoctrinated professionals. She could remember back in the early days when Radek had been stringing them along with his bullshit, she hadn't truly believed in the existence of magic until she'd seen it with her own eyes. \n\n\"But I'd have to take most of my clothes off,\" he glanced meaningfully at Lisa and Kat. \n\n\"Show us what?\" Kat asked suspiciously. \"What's it got to do with him getting naked?\" \n\n\"God damn it, Chris, where is this modesty coming from all of a sudden? I've seen you strutting around in almost nothing plenty of times at home,\" Michelle pestered. \n\n\"Fine,\" Chris stood up resentfully and began pulling his baggy black t-shirt over his head. \"That's different though, Michelle.\" \n\nLillian stepped aside and watched with interest. The two unknown women were about to get a shock. \n\n\"Woah, woah, woah, what's going on here? You live with him? I don't think...\" Lisa didn't finish her sentence as Chris pulled off his undershirt as well, revealing the rather impressive physique of his huge body. \n\n\"Damn, you been eating your spinach, son,\" Kat murmured appreciatively. \n\n\"Yes, Lisa, I live with Chris, I'm his Familiar,\" Michelle replied, as Chris' shorts came down and he kicked off the leather, desert-style shoes Annabel had recently bought for him. \"It's a long story and I'll tell you all about it later. Just hold judgement and watch this.\" \n\nHe stood up, his hands automatically moving to cover his junk, even though he was still wearing a dark green pair of boxer shorts. Michelle met his eyes and nodded encouragingly. He took a glance around and closed his eyes, the dragon came on eagerly. \n\n\"What the... oh, shit!\" \n\n\"No fucking way!\" \n\nHe opened his eyes again, rustling his wings into a comfortable position. His enhanced sense of smell picked up adrenaline and fear as the two new recruits, now standing, stared at him in open-mouthed shock. There was also a flash of arousal coming from the concealed vampire over to his right. \n\n\"Lillian?\" He reached his hand out toward her. \n\nThe air shimmered for a tiny moment before she was once again standing in front of them, smiling her predatory grin as she took his hand and pressed herself against his side once more. \n\nKat let out a little 'eep' noise. \n\nLisa reached for her ever present, trusty Glock 23 only to remember she'd reluctantly surrendered it when she'd entered the previously unknown underground structure that Michelle called the Compound. \n\n\"Where the fuck did Jessica Rabbit come from?\" Kat backed away, looking around defensively. \n\n\"Remember the briefing material, ladies?\" Michelle placed a calming hand on each of their shoulders. \"This is the real deal, pornographic figure and all. This is Lillian, she can make herself invisible so that light passes through her. That's rather convenient for a vampire if you don't want the world's worst sunburn.\" \n\n\"A... vampire?\" Lisa stammered. \"Holy shit it's real, it's all real.\" \n\n\"Then what the fuck is he?\" Kat pointed at Chris. \n\n\"I'm a dragon.\" \n\n\"Jesus,\" the Marine shook her head. \n\n\"No, a dragon,\" Chris rumbled out a deep chuckle. \n\n\"Are we, you know, safe?\" Lisa eyed the pale goddess wrapping herself around the... the purple and cream coloured dragon-man? \n\nLillian turned and bared her fangs at the FBI agent with a feral snarl, making her jump. \n\n\"Cut that out, Lillian,\" Michelle admonished. \"Yes, she's actually quite friendly once you get to know her. Just for God's sake don't let her push your buttons. I swear she is constantly goading people just to stave off the boredom of living for half a millennium.\" \n\n\"You don't have to worry about little old me, I've got my favourite walking, talking, snack right here,\" Lillian turned and licked all the way up Chris' large bicep to his shoulder before sinking her teeth just barely through his tiny purple scales. \n\n\"Ouch, cut it out, Lillian,\" Chris complained as she lapped at the tiny droplets of blood that welled up. \n\n\"Oh, you poor baby,\" she cooed sarcastically back. \"I could suck something else if you like?\" \n\n\"You'll have to excuse those two,\" Michelle guided the two stunned women gently back into their seats. \"They've only just gotten involved... physically in the last few days. They're sort of in that 'honeymoon' phase.\" \n\n\"Half a millennium?\" Lisa murmured, putting her hand to her forehead as the enormity of what she'd signed up for sunk home. \n\n\"Uhm, yeah, Lillian is apparently a little over five hundred years old, though she acts like a 21-year-old most of the time,\" Michelle shot the last toward the playful vampire. \n\n\"What about him then, is he actually a dragon? How is that possible?\" Kat followed up. \n\n\"Well, Chris is just as old as his file says. He's nineteen and only came into his full dragon heritage about two and a half months ago under increasingly suspicious circumstances. Before that he was just a regular high school kid. It might not make much sense to you, but Chris is a very, very powerful Being and he's incredibly important to the survival of his species. You see, dragons have been hunted to the brink of extinction for their magical powers and he's one of only seven male dragons alive today. He's also unique in his ability to manipulate the Ether dimension, it's his dragon's aspect.\" \n\nThe two women were listening but somewhat distracted by the increasingly amorous vampire's attempts at 'affection' and the young dragon's embarrassed rebuttal in front of the people he would have to be working closely with soon. Michelle scowled at Lillian but continued her explanation to the captive audience. \n\n\"Anyway, as part of the deal I struck on his behalf for getting in trouble with the Missile Defence Agency over the skies of Alaska a while ago, he's contracted to work with us at the BIA. He's the first Being to accept such a position but we hope there are going to be many more, in fact, there will have to be. Your team of four will be working closely with him amongst other duties and ensuring his safety from non-magical threats. We're going to have plenty of time to answer all your questions and I've got some far more detailed files for you to read but right now we have a time sensitive operation underway. Which is why I called you in early... Hello? Earth to two drooling idiots. Come in?\" Michelle clicked her fingers loudly and the two women started out of the enthralled state they were beginning to be sucked down into. Damn, his pheromones were working fast these days. \n\n\"Um, sorry,\" Lisa blushed, looking away from the two amorous Beings. \n\nIt seemed like Lillian had won out, they were now Frenching enthusiastically. \n\n\"Would you two knock it off for five minutes?!\" Michelle was exasperated. \"I know you just want to hump like bunnies all day long but this is serious. Lisa and Kat are coming to terms with a lot and it would be nice if you could be professional if not helpful. I mean you've already gotten her pregnant for god's sake so at this point you're just being obnoxious as far as I'm concerned. Keep it in the damn bedroom.\" \n\nLillian giggled coyly but they did separate. \n\n\"Sorry,\" Chris apologised as they broke apart. Michelle was right, of course. He glared at Lillian for getting him in trouble, but she only winked and bumped her soft hip into him. To his mortification, he had the obvious beginnings of an erection tenting his boxers. \n\n\"It's fine, Chris. I know you're hardly to blame. I think we're going to need that pheromone cancellation potion though.\" \n\nLillian stuck her tongue out at her human friend. \n\n\"Um, sure. It's right here,\" he bent down to retrieve the vial Susan had given him that morning and handed it across the table to Michelle. \"Can I go back to normal and get dressed now?\" \n\n\"Yes, of course, Chris. I'm sorry for pushing you like that, I think I understand your reluctance now.\" \n\n\"Oh, don't be such a spoil sport, Michelle,\" Lillian laughed. \"Those two seemed to like the show.\" \n\nMichelle didn't reply, knowing the vampire couldn't be reasoned with when it came to teasing. Chris was already changing back into his human form and grabbing up his discarded clothes. \n\n\"Okay, sorry about that,\" Michelle pulled up a chair and sat just behind the two women. \"You'll learn to ignore Lillian most of the time. See what I mean about pushing your buttons? This is going to sound even more crazy than what I've put you through already but this is a magic potion. It is specifically tailored to cancel Chris' dragon pheromones. They're a naturally occurring part of his species' biology. Unfortunately, they seem to work on most other humans and human-blended Beings and are very effective at amplifying one's desires. That is why you may or may not be struggling with some irrational, intense feelings right now. One little dab of this potion under your nose will clear it up right away. It's perfectly safe, I do it myself every day.\" \n\nBoth Lisa and Kat looked back and forth between Michelle and Chris, who shrugged. \n\n\"Sorry guys, not much I can do about it except carry around a vial of PCP.\" \n\n\"So what? He's like a walking date-rape? Man, you are a piece of work,\" Kat wasn't impressed as she took the offered vial from Michelle. She unscrewed the cap and placed her finger over the opening before upending it to catch some on her skin. Then she offered it to Lisa and wiped the finger under her nose. \n\n\"It's not Chris' fault, Kat,\" Michelle explained. \n\n\"Huh, smells sort of nice, like cinnamon. What do you know, a real magic potion,\" Lisa muttered as she too applied the potion and returned the vial to Michelle. \n\nChris shook his head, thinking back to how that potion was made and imagining the pain he would experience if these two ever found out... let alone Michelle. \n\n\"Okay, let's get back on track folks,\" Michelle clapped her hands to get everyone's attention and put up a screen on the projector with a large picture of Noel Redding. \"This man was the ringleader of the kidnapping crew, an ex-Marine. We're trying to catch whoever has received illegal information about the existence of Beings and is now trying to kidnap them by hiring people like Noel. I suspect we are dealing with regular old, garden variety humans but we can't be sure. Chris' actions allowed us to capture Noel and one of his accomplices who have been cooperating with us so far. We have staged their escape from police custody and are using their email account to lure their employer out of the shadows, using Chris as bait. We are going into a delicate situation blind and undermanned. We don't know where this is going to take us so we're going to have to adapt on the fly, quite literally.\" \n\nWhat followed was several hours of briefings, contingency plans, and rules of engagement. Chris followed along intently, beginning to appreciate everything Michelle had organised over the past 24 hours. It was exciting to see her truly working in her element, not just the political and bureaucratic stuff she'd been focusing on lately. It reminded him of the time she'd arrested him at gunpoint in the middle of a crowded airport. Ahh, nostalgia. \n\nFrom the looks on Kat's and Lisa's faces, they were beginning to get over the shock of meeting their first Beings and paying close attention to the briefing. Good, he was going to be relying on all of them. They were going to be Lillian's backup on the ground when they managed to catch up to him. ",
        "*** \n\nThe beat up old Dodge van bounced over another rut and Chris had to stifle a grunt as his head knocked into the thinly carpeted floor of the stripped out rear compartment. His wrists and ankles were already sore, bound behind him in a hardened pair of prisoner transfer manacles. Lying in the back of that stupid van, he thought he must look like a trussed pig ready to roast. It wasn't a nice feeling. He hated this plan already and it had barely started. \n\nHe couldn't see jack-shit and it was hard to breathe regularly through the blackout hood over his head. He was supposed to be pretending to be unconscious as they approached the exchange out in the middle of nowhere, forty minutes outside city limits. It was comforting to know that Lillian was somewhere there in the van too, but they were about to be parted. \n\nHis throat was still sore and a little bruised from swallowing the small, smooth-polished, egg-like rock. Coloured obsidian black, it was supposed to allow the bearer of the second, paired stone to intuitively know the direction and distance between the two. Michelle had its pair. She, along with Lisa and Kat, were on standby at the airport awaiting Lillian's return, Lear jet fuelled and ready to track him down anywhere in the globe. \n\n\"I wish we could just kill this human,\" Lillian's voice was so quiet he only just heard it. \"I can't stand staying behind to mind him while you are left on your own.\" \n\n\"It's okay,\" he whispered back, knowing she could probably hear him. \"I'll be fine, Lillian. Plus, if this goes according to plan, you've got to guard one and a half million dollars.\" \n\n\"I don't like it.\" It sounded almost petulant before she continued more gently. \"Be careful young one, if something happens to you I'll... well let's just say the Vampire Council would have to send one of their elimination squads to stop me.\" \n\nHe couldn't help smiling at her violent brand of affection. \n\n\"I'll be careful. We'll catch these guys and be back home in no time.\" \n\nIt was only a few more minutes on the bumpy track before they reached their destination. \n\n\"Um... Get ready back there,\" Noel's uneasy voice drifted back from the cab. \"I can see their vehicle.\" \n\n\"Okay,\" Chris replied. \n\nMomentarily, he felt Lillian's soft body pressed firmly into him, her arm enveloping him. It would have been nice to be able to return her embrace but chained up as he was, it simply wasn't an option. \n\n\"Good hunting,\" she whispered into his ear before she was gone. \n\nThe van was braking to a halt and Chris took those last few moments to prepare himself mentally. He was supposed to be unconscious so he tried to relax, focusing on getting his breathing calm, steady, and shallow. He almost lost it to humour, thinking about the poor fool who had to try and carry his bulky body. \n\nHe heard muffled voices and a sliding door on the other vehicle opened, then Redding spoke up. \n\n\"Where's the money?\" \n\n\"Right here, you gonna count it?\" \n\nSeveral dull thumps sounded, like something heavy was thrown onto the ground. \n\nChris heard Noel open his door and get out. \n\n\"Hey, what the fuck is that! You wearing a bomb vest?!\" \n\nSeveral gun actions cocked, no doubt pointed at Noel and his fake suicide vest. That had been Noel's idea. He didn't trust the team hired to collect Chris not to kill him and take both the money and the valuable \"package.\" \n\n\"Calm down, calm down. It's just a little insurance. Don't want you guys getting any smart ideas about our equity situation. You weren't thinking about double crossing me, were you? Because if you were, this little dead-man's switch will take us all out,\" Chris had to admit that Noel was pulling it off. \n\nThe vest was little more than a couple of wires, an old cell phone and some very real blocks of C4 explosive that Kat had rigged together. Despite its authentic look and the use of real explosives, all they could get on short notice, the vest was completely inert. Even if someone shot it, it would never go off without a detonator. \n\n\"Naw, man, naw,\" the tone of the speaker's voice wasn't all that convincing, neither was the awkward pause which preceded his answer. \"The boss won't be happy about this though.\" \n\n\"Fuck that bastard,\" Redding hoiked and spat, he didn't have to act this part. \"He's already screwed me and gotten half my crew killed. Not to mention my busted arm. You should break off after this job, man's an asshole.\" \n\nFor Chris, it was strange to only listen to the goings on and have to lie still. He heard footsteps on the dusty gravel and a series of industrial sounding zippers being opened and closed in rapid succession. He presumed Redding was checking the money. \n\n\"Ahh well, sorry about your boys,\" the stranger spoke. \"It's all part of the job. Less ways to split the loot, am I right?\" \n\n\"Right,\" Redding's response was sour and dripping with sarcasm. \n\n\"Hey now, how did you escape the police and get another shot at this kid? We heard he beat the shit out'a your team and you were headed straight for the slammer?\" \n\nThey had covered what Redding was supposed to say under questioning but it was a tense moment for them all to see if the other crew were going to buy his story. No doubt they were under orders to be vigilant of law enforcement involvement. \n\n\"I got out because I have an outstanding arrangement with a few friends from the old days. They bust me out, I bust them out, you know how it is. As for the kid... well, let's just say shock and awe is not the right tactic to use with this one. You've dealt with some of these freaks before, sure. Not like this one you haven't. He's powerful, but I pumped him so full of tranquilizer, he'll be out for half a day. Alright, the money looks good enough, come get him.\" \n\nThe door on the piece of shit van rolled reluctantly open, squealing all the way. Chris shut his eyes. This was it. Boots shuffled closer across the loose shingle. \n\nStrong hands gripped, dragged. He felt someone messing around with the blackout hood and he steeled his face into as relaxed a pose as possible, preparing to ignore any form of unexpected stimulus. His neck lolled, he even let a bit of spittle drool out of the corner of his mouth. Sunshine on his skin again, they were checking his identity. He held deathly still, just breathing calmly. \n\n\"It's him boss,\" a deep voice he hadn't heard before spoke from right above him. Then the hood and darkness was returned. \n\n\"Well hurry up and get him over here, we've got a plane to catch,\" the original stranger spoke up. \n\nThe man was obviously very large and strong. Chris could feel his muscles straining as the man's arms looped under his own and partially lifted his deadweight. Chris' heels impacted painfully as he was dragged out of the van, the man was huffing and puffing above him as he was hauled unceremoniously across the loose, dry dirt. \n\n\"Aww shit, Terry, I think he's almost as big as you!\" another voice laughed. \n\n\"Hey, fuck you. This motherfucker's bigger than me, he's is almost as heavy as your momma.\" \n\n\"Man, why you gotta bring my mom into this? You know she's got diabetes.\" \n\n\"You gonna' help or what?\" Terry asked. \n\nAn extra pair of hands gripped his legs and he was roughly swung up into another vehicle like an ungainly sack of potatoes. He had to stifle a gasp as some of the wind was knocked out of him. His shoulders burned and his wrists screamed protest as they were jostled uncaringly. The metal of the cuffs in particular was testing his limits of endurance. \n\n\"A pleasure doing business with you,\" the stranger said seedily from what Chris now assumed was the driver's seat of his new captor's vehicle. Above him, the two men who had carried him caught their breath and began patting him down, searching for anything untoward. \n\n\"Oh, I almost forgot, here are the keys to the manacles,\" Noel spoke. Chris heard the faint ring and clank of the keys flying before they were caught. \"Now if you don't mind, get the fuck out of here.\" \n\n\"Asshole,\" the stranger replied as the van's engine started into life and quickly began rolling forward, kicking up billow of dust into the dry air of the autumn afternoon. \n\nThe road began bouncing him uncomfortably again as they sped up. Only this time, he was also assaulted by the smell of two sweaty men. They drove in silence for a few minutes, there was obvious tension in the air. The lackeys didn't want to speak up and potentially provide an outlet for their boss' frustration. \n\n\"Fuck!\" the driver sounded like he'd just punched the dash. \"That could have been our money! That crazy asshole wore a bomb vest?!\" \n\n\"You got to give it to him for style though boss. I mean he got himself sprung from jail and leveraged it for double the original payment on the kid. Talk about turning a frown upside-down.\" \n\n\"Shut up and dose the kid, Terry. I'm not taking any chances with these freaks.\" \n\nChris' heart sank. This was one of their least preferable options. If he got drugged for real now, he would be at the complete mercy of his captors for the foreseeable future, possibly forever. It would be one hundred percent up to Michelle, Lisa, Kat, and Lillian to track him down and extract him from trouble. \n\nMichelle said it was his call. In this situation, it was up to him to decide whether to allow himself to be incapacitated or to abort the operation and hope the transfer team knew enough to lead them to the higher echelons of this conspiracy. That would take time, he wanted this whole incident to be put to bed and justice served swiftly. \n\nHe swallowed nervously, banking on the magic of the little rock resting inside him and rolled the dice. \n\nA sharp prick against his skin. Then there was no need to pretend to be unconscious. \n\n*** \n\nMichelle took another glance out the window of the patrol car toward the modern, sleek building. Situated in a spacious, newly commissioned industrial park, it was clearly designed to impress. No expense had been spared in its construction. The entire north-facing fa\u00e7ade was a giant wave-form of tempered glass, looking out across the perfectly manicured garden and extensive lawn. A crisp, unfaded flag even flapped proudly in a light breeze in front of the gilded sign near the entrance. It read Riker Pharmaceutical. \n\nShe clutched the little onyx stone in her hand, feeling the connection to its partner flare bright in her mind's eye. There was no doubt, he was here, somewhere in the sublevels. Disturbingly, it seemed like he hadn't moved at all. She hadn't been sure what to expect when they tracked down Chris, but this wasn't it. It opened an entirely new and unsettling avenue of thought in her analytical mind. \n\nDespite its impressive, clean cut appearance, this was a top-of-the-line biomedical research facility. What's more, from her brief investigation, it was the boundary-pushing daughter company of one of the largest pharmaceutical giants. Incredibly well funded, tightly secured, lawyers up to the tits, and tied to some of the oldest, richest families in the country. This could get ugly. \n\n\"Holy shit,\" Patty Hayse, their liaison with the Madison Police Department spoke in disbelief as her phone chirped. \"Your warrant just came through.\" \n\n\"That's to keep you happy, Patricia. I didn't really need one in the first place, we have exigent circumstances,\" Michelle said dryly. She could understand the Madison PD's reluctance to facilitate the search of such an institution without a warrant. In truth, the eight officers that had been reluctantly assigned to her would be helpful. They could help calm the no doubt oblivious employees of the company, especially security personnel. \n\nMichelle was more concerned with the Being inter-territory jurisdiction politics of operating in Minnesota. Reyla assured her it was fine. Seeing as New Orleans, the hub city for this territory, was so far to the south, the Lord was happy to let Reyla's agents follow their investigation into his own protectorate. This was practically the wild west of the USA Being society. \n\n\"I still can't believe it,\" Patty muttered to herself. When the obviously driven woman had showed up at their headquarters earlier that day and demanded that she be assisted with a search of the influential pharmaceutical company's premises, the Madison PD had been understandably sceptical. Now here she was, reading a no-knock warrant for that same company less than two hours later. \n\n\"Let's go!\" Kat said enthusiastically from the back seat of the cruiser, opening her door. \n\nMichelle stepped out as well and looked the ex-marine up and down, shaking her head. The woman was loaded for bear, looking like she was stepping onto the front line of a war. She cut an imposing figure in her full body armour, molle webbing brimming with extra magazines, flash grenades, breaching charges... the list went on. \n\n\"This is a civilian operation, Kat. We're trying NOT to shoot anyone, okay, especially with that thing,\" Michelle pointed to the short-barrelled AR-10 that Kat had pulled out of the back seat after attaching her Kevlar helmet and protective glasses. She had protested but Kat wouldn't budge on carrying the mighty weapon, insisting that someone on the team had to have an option for dealing with body armour or heaven forbid, hostile Beings. Michelle really hoped they didn't have to confront that possibility but admitted it was best to be prepared. The damn thing was the same calibre as a police sniper rifle. \n\n\"Don't worry, I'll take lead,\" Lisa said as she and Patty got out on the other side of the car. \"I'm more familiar with procedure.\" \n\nMichelle felt a bit better about that. She had confidence the recently former FBI agent would show adequate restraint when confronted. The newly trained soldier might not. Lisa was also an expert pistol marksman, having competed nationally for a few years after high school. She was notorious in FBI circles for once having shot a gun out of a suspect's hand. A slightly customised Glock 23 was currently holstered low on her right hip, another secured to her left thigh, a backup. \n\nDespite the heavily armed, highly trained members of their growing little team, Michelle knew their most lethal weapon required no firearm to be deadly. The vampire was bound to be somewhere nearby, lurking invisibly and itching with frustration to rush to the young man. \n\n\"Lillian, don't do anything rash,\" she whispered to the air, praying the vengeful woman would hear and listen to her. \n\nLillian did hear her, but couldn't promise not to follow her heady desire for retribution. It would all depend on what they'd done to her beloved dragon. She was very worried that he hadn't contacted them at all. \n\nMichelle secured her own helmet and weapon, clipping a compact, more manageable assault rifle into its sling. Patty was looking at them askance in their full armour as the other officers followed their lead and got out of their cars. \n\n\"Have a squad car block the car park exit and a couple of officers cover the back in case anyone tries to sneak away,\" Michelle instructed as she started across the quiet street towards the building grounds. \n\n\"Yes, Agent Hamund, I'm coming with you though,\" Patty quickly motioned two officers to comply with the instructions before rushing to catch up to the fierce looking trio. \n\nThe young security guard at checkpoint just inside the door had clearly never been confronted with quite so much bristling, hostile firepower before. He stood agog as the glass parted and the armoured figures glided into his little world, a world in which he had previously been the utmost authority. It was his job to check employees and visitor's identity before they were let into the building. This was something completely new. \n\n\"Federal agents, we have a warrant to search these premises,\" Lisa strode in first speaking clearly, confident but wary. Her hand rested casually on her hip, next to the unbuckled holster of her pistol. \n\nThe metal detector blared angrily, sensing a vast amount of its intended target as the women walked up towards the front desk, followed by a small procession of police officers. The foyer was richly appointed, open, and modern. The atrium looked like it went up all the way to the top of the five-storied building. Huge planters, brimming with live growth of untold varieties hung suspended at various levels. Michelle wondered how on earth they were watered. It was a very impressive floating garden, which many a visitor had no doubt marvelled at as they waited for appointments below. \n\nThey were almost at the worried looking receptionist's desk when a door burst open about thirty metres over to the right. Kat immediately raised her weapon, covering the startling appearance of a middle-aged man in a security uniform. He was armed too, a pistol on his hip. Behind him five more men appeared, swarming out of the security office like ants from a kicked nest. He hesitated momentarily, staring down the barrel of an assault rifle. He took in the officers behind the imposing figure of the dark-skinned woman and began walking towards them cautiously, his hand well away from his weapon. \n\n\"What's this about, Patricia?\" he asked, recognising the older police sergeant from his own days on the force. \n\n\"Sorry, Richard. It's a search warrant,\" Patricia held up her phone, displaying the electronic copy of the warrant and gestured towards Michelle. \n\n\"And what exactly are you searching for, Miss...?\" he asked. \n\n\"Agent Hamund, NSA,\" Michelle supplied. \"We have reason to believe your company has engaged in kidnapping and is currently holding at least one individual against their will on the premises. Are you in charge of security here?\" \n\n\"Yes. But you're joking, right?\" Richard scoffed, looking around for a smiling face to give away the prank. There was simply no way this woman was for real and since when was there an all-woman tactical team? \n\n\"Afraid not, Richard,\" Michelle said. \"I would appreciate your assistance providing access to the sublevels of the building so we don't have to damage the property.\" \n\n\"I... I can't,\" he stammered. \"I mean, I don't have access to the labs downstairs. There's sensitive research going on down there.\" \n\n\"Take us there, now,\" Michelle said coldly as she began walking towards the elevators. She wasn't sure if the man was truly oblivious or this was some sort of stalling tactic. She pushed the call buttons on both and spoke to the assembled officers who were milling behind them. \"Hold both of these elevators open and press the stop button when they get here. No one is to go up or down. Secure the lobby and contain everyone until we get back.\" \n\n\"Now just hold on a minute you can't...\" Richard started to protest. \n\nMichelle rounded on him. \n\n\"You will provide assistance immediately or so help me I will throw the book at you, am I clear?\" Her voice gave no room for further argument. \"Unlock the stairwell.\" \n\nKat, Lisa, and Patricia followed Richard over as he grudgingly held his card up to the reader on the door to the stairwell. It chirped happily and the magnetic lock clicked open. Michelle pointed Lisa and Kat forward. The FBI agent drew her pistol and took the lead, clearing the stairwell and proceeding downwards. Kat shadowed her perfectly, rifle poised and ready to reply to any threat. \n\n\"You don't find it odd that the head of security doesn't have access to parts of the building? Who does have access?\" Michelle asked as they headed down. \n\n\"Not really,\" Richard said a little sulkily. He knew he hadn't done anything wrong, but he'd never been on this end of a search warrant, it wasn't nice. \"I'm a glorified doorman. These guys do serious research and some of the equipment is very delicate and expensive, so I'm told. Only the executive staff and a dozen or so high-profile researchers have access down here.\" ",
        "\"Is this it?\" Lisa asked as they came across a heavy door marked B1. \n\nMichelle squeezed the little polished rock surreptitiously and felt the pulse of its brother coming from deeper below them. She shook her head to Lisa and they continued down. Patty and Richard shared nervous glances when Michelle waved them past the next level too. \n\n\"This is it, open the door,\" Michelle said when they came upon the B3 landing. \n\nThings were much more utilitarian down here. The floors were a blueish grey linoleum which came halfway up the walls. The lights were fluorescent tubing, which flicked into life as a sensor detected their movement. One of the elevators serviced this level but the little lobby was completely barren. A pair of thick double doors led off into the unknown, wide corridor. It looked like a hospital. Michelle realised that was exactly the right comparison to make. The floor and even the walls were constructed to be easily washed. What exactly were they going to find? Her heart fluttered, and adrenaline began circulating her system as anticipation mounted. \n\n\"I can't open those doors,\" Richard supplied quietly, sensing the tension in the three women. \n\n\"Blow them,\" Michelle said, eliciting an excited little yip from Kat who quickly snuck forward to facilitate. It might be nice to have Lillian simply rip them off their hinges, perhaps after the Revelation such a thing might be possible. \n\n\"Can't I just call whoever's in there on the intercom and ask them to let us in?\" Richard asked reasonably. \n\n\"No,\" Michelle said. \"I don't want anyone thinking they can dispose of evidence.\" \n\nKat hadn't had a chance to do anything like this since she'd completed her infantry training. It was exciting but a training course in IED disposal helped steady her hands as she unrolled the thick tape. The red, sticky side was covered with explosive warning symbols. She applied it face down to one of the doors near where it met the wall, covering from ceiling to floor in a continuous strip. She cut the length off with a knife and began again on the other door. With any luck, the charge-tape would simply shear the heavy door off at the hinges. \n\nShe looked back to see Lisa covering her, the more experienced woman seemed indulgently disapproving at her obvious excitement. This job was way better than sitting around on base keeping track of inventory, she was going to enjoy it. With delicate care, Kat paired two wireless detonators for simultaneous explosion and pushed the sharp little teeth into the middle of each strip of tape. She did a quick double check, making sure the detonators were holding in place and the tape was sticking as it was supposed to. Secured, they both retreated into the stairwell with Michelle and the others. \n\n\"You get me the best toys!\" Kat thanked Michelle happily as they took cover behind the concrete wall of the stairwell. \n\n\"There's something wrong with this one,\" Lisa smiled as they put plugs in their ears or in the case of Richard and Patricia, fingers. \n\nKat was ready with her trigger device, awaiting Michelle's order. \n\n\"I doubt we're going to come across resistance at this stage but just remember that our 'comrade' will be going in fast so be extra careful of friendly fire,\" Michelle looked at each of her new team members meaningfully. \"Do it.\" \n\nThe dull thump and back blast of fleeing air were only just registering with the human's senses as Lillian sprung forward from her concealed position and brushed passed Michelle. She leapt headfirst into the billowing dust cloud of shattered concrete. It clogged her senses and cut her vision unpleasantly but she pushed forward. One of the doors was crookedly blocking part of the corridor where it had fallen. She flicked it aside contemptuously with her telekinetic power, making it bounce and clatter further down the corridor. \n\nAbove, five abused fire sprinklers spluttered into life in a chain, their delicate trigger mechanisms shattered in the small blast. Chilly water rained down on her, washing the dust from the air and partially off her face. She ran, desperate to catch a scent which would guide her to him. Behind, Lisa and Kat were only just coming out of the stairwell as she used her undead strength to boost her forward. \n\nOut of the thinning dust, another set of doors just like the last loomed in front of her. She could not wait for the others clear the obstacle. Surprise was lost, she must act. Even as she charged invisibly forward she formed her gift into a sharp telekinetic wedge, reinforcing and holding it steady barely a foot in front of her. Her gift would be the knife, her body provided the momentum. \n\nThe screeching wrench of buckling steel echoing up the corridor was all Michelle and the others heard as Lillian popped the reinforced doors like a can of tomatoes. Beyond, the vampire streaked through a white corridor, scenting the air as she passed. Through windows on each side of the hallway, she caught glimpses of various laboratories. Some were occupied by a few lab-coat-wearing scientists, others dark, abandoned. Ahead, the corridor ended in a blank wall. \n\nA whiff of cinnamon in the air. It brought her up short, skidding to a halt. It was very faint but she backtracked, shutting her eyes to focus entirely on catching another trace of him. Her legs guided her automatically until she bumped clumsily into a wall. Vengeance burned hot inside as her eyes snapped open. She was up against the glass of one of dark laboratory rooms. \n\nUp and down the corridor, doors began opening as curious, worried humans poked their heads out to see what the commotion was. Lillian only had eyes for her target, but the door was stubbornly locked and reinforced. It was risky now that she had an audience but she trusted her invisibility charm to keep her hidden. She stepped to the right and swung her fist directly at the locking mechanism of the reinforced door with all her considerable might. Even using her telekinesis as a protective layer, she felt several of her extra strong bones crack in the resounding impact. The door was shaken but stubborn. She gritted her teeth and punched again. This time the door frame buckled satisfyingly under the incredible impact but white-hot pain lanced up her arm in response. \n\nLillian cradled her shattered wrist, taking measured breaths against the pain as she slunk forward, unstoppable in her resolve. The pain served to fuel her hunting instinct, her rage at the perpetrators of this injustice. Not only had they nearly killed her, they were trying to foist him away. Even now, her wounded tissues were re-knitting, siphoning from the rich pool of life energy she'd slurped from the dragon's neck in their last encounter. In minutes, she would be as good as new. Besides, she had endured far, far worse than this. \n\nHer enhanced vision let her easily see that the dark laboratory was completely deserted. Still, his scent was stronger here and growing thicker as she approached a sliding door at the rear of the room. What's more, her attentive hearing began detecting muffled noises, the hum of machines? \n\nHer good hand slid the door gently aside, revealing a small space dominated by several expensive looking microscopes draped in transparent dust covers. Yet another door stood in front of her, blocking her way at the other end of the little room. A quiet growl of exasperation escaped her throat. With only a small space to gain momentum, she would have to punch or kick her way through this one as well. That didn't sit right with her, sustaining further injury would leave her ill prepared to face whatever waited on the other side. On the off chance, she tried the door handle. \n\nTo her happy surprise, it depressed easily and swung inward. Over-warm air washed across her, thick with the smell of him. The telltale scents of other Beings registered with her subconsciously but were disregarded as irrelevant for the moment. \n\nWhat she saw set every tiny hair on her skin bristling. An involuntary shudder of goose-flesh rolled down her back. This was exactly the reason Beings feared humans and their Revelation. \n\nTwo short rows of naked bodies, trapped, sedated in clinical-looking metal frames. She could only assume they were Beings, half-standing listlessly in their restraints. They looked unconscious, she couldn't scent the death notes of any corpses. Various tubes snaked over their skin, hooking multiple IV bags into their circulatory systems at the arms and neck. \n\nOther cables connected various pads and sensors to sophisticated monitoring equipment. Each harness boasted a large screen to display vital information in detail all but the most well-equipped hospital would find worthy of envy. Thick stainless-steel bands locked around their limbs, head, and chest at strategic points. The harness held them completely captive in an almost standing position, tilted just slightly backwards so they didn't slump down. \n\nEven had they been conscious to protest their treatment, only the most physically enhanced or magically inventive Being would have a chance of escaping that cage. Lillian doubted that she could manage it, she would barely be able to wriggle. The poor souls were even fitted with catheters and bags to collect their waste, showing that their captors had no plans to let them free in the near future. \n\nHer eyes quickly found the bulky form of Chris at the end of one of the rows and relief washed through her. \n\nMovement behind him stirred her from her shock. She dove forward, pouncing like a big cat with an enraged snarl on her lips. She dropped her invisibility charm as she flew forward, wanting to see her prey's fear before she ended their pitiful existence. \n\nShe was too late. Even as she rounded his body she saw the greying woman in a lab coat pushing the plunger of a syringe to completion in the muscular tissue of his sculpted, unconscious butt. \n\nLillian's good hand closed on the old woman's throat, lifting her effortlessly, slamming her into a nearby bank of storage cupboards and pinning her. Glassware fell from a nearby shelf at the impact, shattering musically on the laboratory floor. Her other fist raised back automatically, ready to end the woman's life with a slash of her vicious black claws. Instead of fear, Lillian saw defiance in the woman's blue eyes, she even managed to smile manically down at the vampire who was throttling her.  \n\nLillian cursed, recognising that look. She let the woman slide down, so her feet touched the ground. \n\n\"What have you done to him!\" she demanded, letting her grip loosen so the woman could breathe. \n\nInstead of answering, the woman began laughing. \n\nLillian set a steely grip on her raging vampire instincts, retracting claws and fangs. There were simply some people out there who didn't respond to intimidation. You came across them occasionally, especially in her line of work. The tough nuts that didn't crack. Why? Because they were literally nuts. Insane, psychopathic, whatever. She had grown to recognise it in her five hundred years and this older woman oozed it. Laughing was not the healthy, terrified response humans and even Beings should display when confronted with the might of a vampire. \n\nHer eyes narrowed, sweeping up and down the woman's body. If she had to guess, the woman was in her early sixties. Her face was beginning to truly wrinkle yet her relatively tall body still clung to a certain lean, spritely strength that Lillian instantly knew was maintained with rigorous exercise. \n\nShe turned the woman forcibly into the wall and began searching her pockets and patting her down. The last thing Lillian needed was a poke with a mystery syringe. Her search yielded a phone, wallet, ID card, keys. Nothing nefarious. \n\nShe held the now chuckling woman by the back of her neck in an unyielding grip as she began rifling the contents of the woman's wallet. \n\n\"Dr. Emilia Mayer,\" Lillian stated with false calm, attempting put aside her simmering anger. \"Would you be so kind as to explain what you've injected into this man?\" \n\nShe manhandled the doctor like a kitten, by the scruff of her neck. They turned to see the syringe still impaled in Chris' rump, drooping down now that only the thick needle was holding it in. It looked painful. The doctor didn't resist, composing herself as best she could. \n\n\"Ah, yes. What a truly marvellous specimen. I take it you know young Chris?\" She asked almost conversationally, as if nothing was wrong. \n\n\"I... Yes,\" Lillian didn't bother trying to lie. She also noted the traces of a European accent, long overwritten by years living in the States. \n\n\"Quite intimately by your reaction, I suspect,\" the doctor continued. Lillian was silent, watching and listening. Sometimes it was best to just let the nuts talk, let them assume they had some control and see how things played out while watching them like a hawk. \"You'll be relieved to hear he's in no immediate danger. I heard the commotion outside and put my little insurance policy into play. I warned Patrick that attempting to capture him was a mistake, but the man is just too greedy to see reason.\" \n\n\"Insurance policy?\" Lillian accused. \n\n\"Well of course, dear,\" the doctor said almost maternally. \"I knew it was only a matter of time before someone came looking for Chris. We might have gotten away with the others but as soon as I began running my tests I knew you couldn't just snatch someone so powerful off the street and expect to get away with it.\" \n\n\"Actually, he volunteered to be handed over to your lackeys in order to lead us to you,\" Lillian attempted to put the woman off balance. \"Your first attempt to capture him was a disaster. We caught the remaining members of the team and turned them to find you.\" \n\n\"Hmm,\" Emilia cocked her head as much as she could in the vampires grasp as if assessing Chris' caged body in a new light. \"Valiant. I have injected him with a toxin-antitoxin cocktail. The toxin is long lasting but the body breaks down the antitoxin in just a few days. He will require regular injections of the antitoxin and blood dialysis for up to a month until the poison clears his system. At least a human would.\" \n\n\"Clever,\" Lillian admitted, reaching out to gently pull the hanging syringe out before it caused too much bruising. \"What do you want?\" \n\n\"My life,\" she said matter-of-factly. \n\n\"Of course.\" \n\n\"And one other thing, I want in. My eyes have been opened to new and exciting possibilities, I cannot simply go back now that I know of your world.\" \n\nLillian thought on that for a moment, her mind blocking out the hum of machines and monitoring equipment. This was a little unexpected. She had expected the human to ask for absolution and freedom. Instead she wanted further down the rabbit hole. It was situations exactly like this one where memory read and erase had proved invaluable in the past. She smiled ruefully. Intelligent, driven, and ruthless, the doctor would have made an excellent vampire. \n\n\"It's ironic, you know,\" Lillian spat. \"You've just poisoned the only Being I know who might have the inclination, compassion, and power to offer you clemency and protection.\" \n\nThat shook the scientist, Lillian watched her eyes widen for a moment before she regained what composure the situation allowed. \n\n\"That's unfortunate. May I ask your name, vampire?\" Emilia asked as Lillian glared down at her. \n\n\"Lillian.\" \n\n\"Okay, Lillian. I simply ask that you think about this rationally. I did not do this intentionally to harm him. I have no desire to see any of these people hurt, I just want to continue my experiments. I have uncovered an entirely new branch of medical science just from examining their cells. The morphing capabilities of the were-species is fascinating. Young Chris has incredible innate regenerative abilities and at this very moment, that machine over there is testing his cells against the most virulent pathogens known to man. I have no doubt his immune cells will fight them off without trouble. Ha! I assume you know this but he produces the most intoxicating pheromones. A few hours after he was delivered, I couldn't figure out why I was getting uncontrollably hot under the collar. I'll admit to finding him attractive but never had I found myself so helpless against such feelings of desire. It was a delightful puzzle which I solved with the help of my trusty mass spectrometer. I have discovered more in the last month studying these people than in my previous lifetime devoted to research. Sorry, I'm getting side-tracked. I say these things to show you that I don't intend you people harm. I chose Chris to carry out my insurance policy simply because he is obviously the most valuable, the best chance for getting the deal I want. It isn't personal.\" \n\n\"It's always personal to someone,\" Lillian said coldly as she heard the approaching footsteps of Michelle and her team. \"Not only did you poison my lover, you have already kidnapped other Beings to carry out your experiments. Do you think they would willingly submit to this existence for the sake of your discoveries? You are a sociopath at the very least. And all this in a delicate time when we are trying to peacefully merge our worlds. If what you have done here becomes public knowledge in our world it would spark a powder keg.\" \n\n\"Politics,\" Emilia shook her head distastefully as Lisa emerged from the darkness at the other end of the room followed by Kat, focused intently on clearing the room. \"I don't care about any of that. I have kidnapped no one, that's the work of our illustrious executive staff. I would just as soon perform my tests on willing, cooperative subjects if they were available to me. They are not. I am not the mastermind of some evil conspiracy against you. I'm simply a brilliant scientist who had the wool pulled from my eyes and didn't let an opportunity for discovery slip through my fingers.\" \n\n\"Maybe,\" Lillian admitted. \"But you're also a remorseless bitch of the highest calibre.\" \n\n\"Things must look nice and clear-cut from up on that high horse, vampire,\" the doctor smiled cautiously. \"I suppose your kind is blameless of atrocity?\" \n\nLillian glowered but remained silent as a bedraggled, damp Michelle entered the room behind the professional sweep performed by Lisa and Kat. The damaged sprinklers were obviously still trying their best to extinguish a non-existent fire out in the corridor. She paused inside the threshold, wiping damp, dark hair from her face as she assessed the room and its occupants. Her eyes hovered on Lillian, Chris, and the mysterious older woman. Her shoulders slumped, relieving a titanic load of tension she'd barely been aware of carrying. \n\n\"Oh, shit,\" Richard murmured behind her, catching sight of the unconscious figures held in futuristic restraints. Up until then, he hadn't believed the agent's claims could be possible. \n\nMichelle spun on her heels to face the astonished head of security and police liaison. \n\n\"Okay,\" She spoke almost tenderly to soothe their reeling minds. \"Please secure the corridor and keep the other scientists calm. We'll take it from here.\" \n\n\"I didn't... I have to call this in, my superiors...\" Patty's eyes looked a little glazed over as she reached for her radio to call in the disturbing scene in front of her, acting in some sort of dazed autopilot. \n\n\"No, this needs to remain discreet,\" Michelle said more firmly, stopping the policewoman's hand and turning her away from the unsettling scene of the caged, lifeless-looking bodies. She ended up guiding both Patty and Richard back through the dark laboratory and out into the corridor. \"Neither of you have the clearance to get any further involved and trust me, you wouldn't want to. I'm going to make some calls and get a few more of our people flown in but we can handle it until then. If you want to help, start evacuating the building and sending the other employees home. We've found what we came for.\" ",
        "*** \n\nChris stirred, his inner dialogue feeling sluggish. The dragon's thoughts felt distant, blurry, sleepy. It was confusing, as if a heavy blanket of fog had him imprisoned in a chilly embrace. However, there was an infallible sensation that the sun was slowly burning its way down to free him. His limited consciousness moved listlessly, not comprehending much except the slow return of self-awareness. \n\nMovement against his left side drew his attention to the warm presence of someone close to him. He felt instinctively comforted. Murmured noises of reassurance sank down through the mist to him, he felt a tender caress through his hair. A faint scent, Annabel. \n\nHe struggled to stir something meaningful from his sluggish body again, but it was no use. His limited capacity for reasoning told him if she was there, it must be okay. He relaxed, lay back and let it come. \n\nHer voice came to him softly, somehow full of love, pride, and concern all at the same time. \n\n\"Rest, my brave, beautiful dragon.\" \n\n*** \n\nMichelle's eyes squeezed shut tightly as she looked away from the screen. They were stinging, red, and dry, protesting their extended abuse at the hands of huge screens in her new office. She rubbed and pinched the bridge of her nose reflexively, a habit from the days not long ago when she'd needed glasses. Thankfully, it still gave some measure of relief. \n\nShe focused her eyes away, out of the window of her new 6<sup>th</sup> floor corner office. They jumped from lamp to lamp down the relatively quiet late-night street arrayed below. There wasn't much to hold her attention so it wasn't long before she was back to watching the screens. \n\nIt was late and she had the lights off, letting the ambience from the street and the harsh glare of the monitors mix. She'd sent Kat and Lisa away hours ago, there wasn't anything they could really contribute at this stage. They were still settling into a new city and needed all the personal time she could allow them. Now her only company was a vampire. She shook her head, how her life had changed. \n\nOn the displays before her, a man was about to get away with it. His power, his money, his family's ties; he'd used it all and it was working. \n\nShe'd passed this problem to her higher-ups and no one had the balls to dish the beatdown this criminal deserved. And the man was a criminal. However rich or connected he might otherwise be, there was no doubt in her mind about that. If the confession of his pet scientist wasn't damning enough, the evidence she'd collected once she had access to his company's electronic records was irrefutable. \n\nStill, the issue got bucked back and forth as the justice system bickered about who landed with the responsibility for charging him. No department wanted the category 5 legal shit-storm that would promptly rain down on them if they filed charges. This was old American money. \n\nThere was good reason to be wary too, if they pushed too hard, he could blow the whistle about the Revelation. They were sitting on a proverbial grenade, he had his greedy hands on a string attached to its pin. One little tug and he would be the least of their worries. \n\nShe let out a sigh of bottled frustration. It wasn't her first. Two hours ago, she'd tracked him enroute to a private airport. Now, he was going to get away. \n\n\"Let me deal with this,\" Lillian spoke quietly from the armchair in the corner. \n\n\"I can't, that's not how we do things,\" Michelle's response was mechanical, they'd had this discussion before. \n\n\"He's guilty?\" the vampire whispered, her Russian lilt making Michelle's lips twitch in exhausted amusement. She couldn't help it if the vampire sounded like some FSB counterpart trying to lure her to treason in times gone past. For all she knew, the vampire might have been at some point. \n\n\"Yes, but the system...\" \n\n\"Screw your system,\" Lillian hissed. \"I have let you handle this so far but he is slipping from your grasp. It's time you let me deal with this. Our way.\" \n\nThe problem was, Michelle didn't disagree. \n\nBeings brought them the power to serve justice in an entirely new dimension. Was truth syrup or mind reading a violation of human rights? Maybe. But by all accounts, they had already been stealthily putting these tools to use on the broader population of the planet for several thousand years without ill effect. Why shouldn't they use these resources now, when so much hung in the balance? \n\nBut that wasn't entirely true. She'd been encouraged to use magical resources and a heavy hand in her new role when dealing with hired thugs. Now she watched as wealth and influence tipped the scales in the criminal's favour. Lillian was right. Screw the system; if this was possible, the system was broken. Not just their justice system either, entire elements of their society. \n\nShe supposed she knew that already in a way. Why did people and companies pillage the environment? Why did famine and war still exist? Why did people kill each other over ignorance, intolerance, or ideological belief? People were shitty if they could get away with it. Society allowed for it. Being society wasn't much better from what she'd seen, the wealthy and powerful still got away with things they shouldn't. However, with their magical tools at her disposal she felt like she almost had the ability to do some good in human society. If she'd been allowed to. \n\nNow this man was going to get away with kidnapping and murder. She had the power to do something about it but only if she bucked her yoke. \n\nOkay, she thought, her lips twitching but not saying it, gathering courage. \n\n\"Okay,\" she spoke. It still came out reedy and quiet before she cleared her throat and continued. \"Okay, but we wait until Chris is on his feet. I need another moral compass on this, I don't trust mine and I suspect yours is completely fucked.\" \n\n*** \n\nWhen Chris finally surfaced through that fog, he found himself in an unfamiliar, rather stark room. \n\nHe was groggy and stiff but otherwise not obviously the worse for wear. His eyes roamed the unfamiliar ceiling for several confusing moments as he wondered where he was, searching for recent memories. It was his nose that finally told him he was back in Denver, somewhere in the Compound. It also told him that Petra was near. \n\nHe sat up cautiously from what he discovered was a rather luxurious, oversized hospital bed and looked around. A curtain partitioned part of the room and he wondered if there was another patient in there with him. Cables of all kinds hooked on and into him. A strange sensation let him know there was something going on with his penis. He surreptitiously lifted the sheet and pulled aside his cotton gown to look. Yup, there was a catheter tube leading from his tip off over the edge of the bed. \n\nIt was a bit dismaying to wake up like that. Most concerning though were the thicker tubes of dark fluid leading from his forearm to a whirring machine next to his bed. He thought he recognized the slowly spinning circles from a TV show or something. It was filtering his blood. \n\n\"What the hell?\" he mumbled hoarsely, his voice raspy, unused. \n\nA rustle of cloth alerted him to someone behind the curtain. A moment later, a beaming Petra ducked around the partition and came to him. She was a sight for sore eyes. For some reason he felt himself starting to choke up with emotion, his throat thick and painful. \n\n\"Shh, shh, shh,\" Petra saw his distress. She sat on the bed beside him and took him gently in her arms, nuzzling her face into his neck. \"It's okay. You're okay. We're all safe.\" \n\n\"What happened?\" he croaked, squeezing her, holding on desperately. The familiar scent of her almost silver hair bringing comfort. \n\n\"Michelle and Lillian came and found you. You and some other Beings were sedated and being experimented on. Before they could free you, the woman who was doing the experiments used you as a bargaining tool to stay alive. She poisoned you, Chris.\"  \n\n\"Poisoned?\" Chris's astonishment was clear, separating their bodies a little. \"So that's what the dialysis machine is for.\" \n\n\"Yes. It was some sort of nasty cocktail she designed. Very clever, that woman, but very dangerous, too. She's been giving you the antidote for the last few days. Lillian comes close to deciding to kill her at least once every few hours I'm sure.\" \n\n\"Days! How long have I been out?\" he asked, pulling back to look at her. \"How are the girls?\" \n\n\"We've been worried about you but everyone's fine, Chris,\" she laughed happily at his concern and placed her hand over his heart. \"This is the fourth day since Michelle and Lillian brought you home. We've been taking shifts staying here in case you woke up. No one really knew when you would.\" \n\n\"Oh, okay. Does this mean I'm cured?\" \n\n\"We don't know. The woman, Emilia, said it could take up to a month to clear a human's system. Hopefully it will be less for you. Lillian says she can taste it in your blood still.\" \n\n\"Well that sucks. Did we at least catch the bad guys?\" \n\n\"Umm... sort of?\" She smiled, reaching up to smooth his frown away with her thumb and run a hand lovingly through his blond hair. \"It's complicated. Michelle and Lillian can explain it all to you. They found the other kidnapped Beings though, so I call that a win.\" \n\n\"I feel stupid. I never should have let them knock me out like that.\" \n\n\"Maybe, maybe not. It's in the past so all you can do is learn from the experience,\" she consoled. \"Hey, I've got something which might cheer you up.\" \n\n\"What?\" \n\n\"Well, Claire and I are only about a week apart and the doctor said it would be okay if we had our first antenatal check-up together. We were hoping you might want to come?\" \n\nHe took her back in his arm again, hugging more gently this time. \n\n\"Of course I want to come,\" he murmured in her ear, kissing softly into her scalp. \"I love you all so much, my two dragonesses and our little belly-bumps. Are you showing any more yet?\" \n\n\"A little.\" She found his lips and kissed him passionately, making sure her own love was known. Then she pulled away and stood, leaving him reaching for her, cables dangling. \"Want to see?\" \n\n\"You know I do,\" he grinned, starting to feel lecherous once more. She was doing a fantastic job of taking his mind off being stuck in a hospital. \n\nShe ran her hands sensuously down her sides and over her hips, watching him follow her smooth movements. Her fingers gently tugged at the buttons of her light blue shirt, eyes never breaking contact with his as one by one, she opened a gap over her tummy. Her hands slipped delicately inside to caress soft, creamy skin. \n\nChris shifted, eager to see underneath her shirt. Merciful as she was, she stopped her teasing and pulled the cloth aside to reveal her barely evident pregnancy. \n\n\"It is bigger,\" he said in awe, reaching toward his unborn child. \n\nPetra came closer, insides melting into gooey affection at his reverent look. His rough, calloused hands were so gentle when they finally touched, sending a frisson up her spine. \n\n\"He,\" the dragoness announced proudly. \n\n\"He?\" Chris looked up questioningly. \"How do you know?\" \n\n\"He feels like a boy. I can sense him inside of me now, so strong, just like his father,\" she radiated love and pride to her young mate, placing her hands on top of his own. \"We'll find out for sure in another month and a half's time.\" \n\nChris looked back down, feeling her warmth, her softness, the contour of her small bulge. He had done this. He had put his seed inside this beautiful woman, his mate. They had shared body and soul to make this wondrous new life. He couldn't help but be aroused. She was so gorgeous, especially like this. His cock twitched, coming to life with an astonishing vengeance. \n\n\"Petra I... That's strange... Fuck! Oww! Shit!\" he yelped. \n\n\"What's wrong?\" \n\n\"I'm getting an erection and it feels really weird with the catheter,\" he whipped off the sheet but paused, unsure what to do about it now that his raging cock was exposed and free. His hands hovered over it, indecisive. Could he pull it out himself? \n\nPetra laughed. He looked so funny, whipping back the sheets and looking dismayed to find his big cock pulling angrily at the dangling tube like a leash. She managed to clamp her hand over her mouth and reduce it to a few muffled giggles. For a moment she'd worried something was really wrong with him. Typical of her young mate, he was simply too randy for his own good. \n\n\"Damn you, woman,\" he couldn't help chuckling himself, infected by her honest mirth. \"This is your fault anyway, you're too god damn sexy.\" \n\n\"Poor you,\" she crooned, paused, and began laughing again. \"Wait until the girls hear about this!\" \n\n\"Go get a nurse or something. Please, Petra!\" \n\n\"Okay, okay. Sorry, dear.\" \n\nShe was still laughing as she tucked her shirt back in her black jeans and went in search of professional assistance. Chris sighed, shook his head, and leaned back down in the bed, still throbbing and decidedly uncomfortable. \n\nWith her previous experience in nursing, Petra could probably have attempted to remove it herself. However, Chris was not under her care. It could be considered quite rude to Dr. Chang for her to start pulling tubes out of his patient. \n\nShe was actually very impressed with what she'd seen of the Compound's medical expert. A lot of Beings in the medical profession fell behind keeping up with human advances in medical science. That was easy enough to understand as they tended to focus on magical means of healing their patients. \n\nDr. Chang, however, understood the value of being fluent in both languages of healing. The sponsored practice was small, consisting of himself, two nurses, and a technician. However, it was outfitted with as much of the latest medical diagnostic and laboratory equipment as it could hold. Petra had learned that it was part of the deal he'd struck with Reyla when she headhunted him from the west coast territory to service her own. \n\nIt was good to know that Chris' care was in the hands of a competent doctor, someone who could actually understand what his body was fighting against with this darkly crafted poison. Petra didn't trust Emilia Mayer one bit, and Lillian wasn't the only one who bristled when she was escorted to Chris' bedside every morning to administer the 'antidote'. Someone who designed and used such a tactic without remorse could never be left unsupervised. It was like having a pet scorpion, all well and dandy as long as it was securely in the terrarium. \n\nIt was only now, with Chris awake, that the dragoness conceded that the mad old scientist might be keeping her word, for now. \n\nWhen Michelle and Lillian had dragged the researcher back with them from Wisconsin, Petra had been sorely tempted to rip the woman's head off and trample her lifeless body under giant draconian paws. It galled her to think that Reyla had struck a deal with the ruthless woman. Vassalage and Chris' uneventful recovery in exchange for amnesty, protection, and the rest of her life in 'productive detention.' \n\nIf all went smoothly, Dr. Mayer would soon be continuing her research under Reyla's supervision. It was almost exactly as she'd planned when she first poisoned Chris and that galled most of his brood. Petra's only comfort was that Reyla was probably enough of a ruthless, cold hearted bitch to handle the doctor. \n\n\"Ruth?\" Petra asked as she approached the receiving room and found it empty. \n\n\"In here Ms. Godran, one second,\" the nurse poked her head out of the breakroom. \"I'm just warming some food for our patient. I saw on the monitor's that he's awake.\" \n\nPetra grinned evilly, thoughts of Emilia Mayer discarded at the prospect of teasing the poor nurse. Ruth, a lovely water elemental had been particularly fussy and attentive to Chris ever since he'd arrived. The dragoness was positive Ruth was indulging in the effects of his pheromones. It was going to be wonderfully fun to see how she handled Chris' current little situation. \n\n\"Thank you, I'm sure he's going to be hungry but first we're going to need an ice pack.\" \n\n*** \n\nChris expected to be up and about as soon as all the tubes could be pulled out of him. Checking on Stephen and the three goblins was at the top of his list. He couldn't wait to see their progress and they were probably desperate for a crystal refill by now. He also needed to get down to Michelle's office and get a proper update on everything that had happened while he was out. From Petra's brief recount, he owed Michelle, Lillian, Katherine, and Lisa a thank you for coming to rescue him so quickly. \n\nNo-nonsense Dr. Harold Chang shattered every one of his hopes and plans. Chris was to stay in the clinic around the clock until the doctor was satisfied the poison was sufficiently scrubbed and filtered from his body. It would probably take a minimum of a week. Worse, he was to stay supine as much as possible and avoid exertion. Tests showed that his liver and kidneys were working overtime at the moment and therefore stress of any kind was to be kept to a minimum. The doctor thought his body would handle the toxin better if it stayed in a low metabolic state, hooked up to the dialysis machine as much as possible. Chris was sorely tempted to vanish into the Ether and avoid any further encounters with the blunt doctor-wizard. \n\nHe might have, if Petra hadn't looked so concerned as the doctor described his situation. His mates were counting on him to make a swift and full recovery, so he would. The only good news was that the big dialysis tubes would be coming out for the rest of the day and overnight to assess his condition and allow him to sleep safely. \n\nWord soon spread that Chris was awake. He spent the rest of the day catching up with his lovely ladies, each stopping by as their schedules allowed. Claire came down from the hotel suite to see him right away, snuggling up against his side and kissing him very tenderly. While her mother appeared stoic, the younger dragoness was obviously rattled. He squeezed her tight, playing a soothing hand through her beautiful red hair. Unable to promise to stay away from dangerous situations in the future, he settled for wrapping her in his arms and holding her, safe and cherished. \n\nSusan and Annabel showed up for about an hour at lunch with Immi in tow. They brought a selection of delicious treats and fresh fruit they'd picked up at a local deli on the way. Chris was ravenous. This backfired on his two mates, as he gave only a quick moment of intimacy to each of the women before attacking the contents of the hamper they brought. Annabel and Susan smiled at each other as he inhaled a whole packet of salmon avocado sushi and dug into the rest, sure that his appetite was a sign of his returning health. \n\nImmi hadn't grown noticeably but Chris was surprised to see her wrapped, somewhat immodestly in a piece of white silk. Despite making her look like some sort of painted virginal sacrifice, he had to admit any sort of clothing was a big step for the little sprite. Despite her hate of 'scratchy' clothes, silk was apparently tolerable. Besides, she had to practice for when she was bigger. \n\nChris noticed that she seemed a little subdued from her usual bubbly self as she sat on one of Annabel's thighs and nibbled with disinterest at a ripe strawberry he shared with her. Just before Annabel and Susan had to leave, Chris remembered that the pint-sized little princess was probably very hungry for something else. She chirped her delight as he apologised and drew on his magic to condense it into a golf-ball sized nugget of sprite food. Newfound manners forgotten and speaking around mouthfuls, Immi proclaimed her thanks but described in pornographic detail how she would have preferred he feed her. Everyone laughed as her vivid imagery brought redness to Chris' cheeks. ",
        "As he kissed Annabel goodbye until the evening, he made another little lump of magic for Bartholomew. Immi eyed the little tattoo jealously, but the morsel was devoured so quickly she didn't have time to intercept it. The sprite collected a smooch of her own before climbing up on Annabel's arm and slipping delicately into the wide mouth of Annabel's calf-leather handbag, disappearing completely. Chris stared wide-eyed in wonder at the blatant use of magic. There was no way that should be possible. How had she done it? Annabel laughed happily at his reaction, shrugged as if to say, 'what of it?' and left. Susan kissed him goodbye and followed her out, collecting the meagre, dragon-savaged remains of their lunch to dispose of. \n\nClaire and Petra departed around two in the afternoon after a delightful little dragon-nap nestled one on each flank. It was a squeeze, but thankfully they just fit if the ladies lay on their sides. They left with no real explanation but suspiciously knowing smiles, putting him on guard. His prime suspicion was that some sort of invisible shenanigans with Lillian were afoot. \n\nQuiet footsteps in the hallway alerted him to someone's approach. It didn't sound like Lillian's boots, it might be Michelle, but the gait lacked... confidence? There was a long pause as the soft footfalls stopped before he finally heard a quiet knock at the door. \n\n\"Come in,\" he ventured, tensing in his half-reclined position as the handle turned. \n\nA small, blond goddess peaked into the room. \n\n\"Hailey!\" \n\n\"Your afternoon's entertainment has arrived,\" she smiled at him, taking a theatrical bow. She came in and removed a heavy looking backpack from her shoulders. Rectangular outlines bulged against the sides from within. \n\n\"It's good to see you,\" Chris enthused. \"I knew the girls were up to something, but this is a wonderful surprise. Are those books in there?\" \n\n\"Yup, lots of books and I'm your demanding tutor. Scooch over.\" \n\nShe set the bag at the end of the bed by his feet and promptly jumped up as well, swinging a bronzed thigh over to straddle him. \n\nThe lust in her blue eyes should have alerted him but Chris was surprised to find her soft lips planted firmly on his own. He really hadn't expected to be kissed, let alone so thoroughly but couldn't find it within himself to object. \n\nShe teased and tugged a reaction from him as the rest of her bombshell body settled down on top of him. Their tongues slid tentatively against each other as his hands came to rest around her waist, rubbing slowly up her flank through the thin, clingy fabric of her shirt. Firm, large breasts moulded exquisitely into his chest as she pressed down into him, her passion rising. He felt her whole-body shiver and tense. Her hips twitched. A beautiful little gasp escaped their kiss, her eyelids scrunching tightly closed. \n\nHis nose was filled with her rich arousal as she opened her eyes and began trailing her kisses down towards his ear. She rested, panting, breathing deeply of his spicy, pheromone-laden, scent. \n\nChris closed his eyes, too. She was so warm and soft and small under his hands, clinging to him. His cock rapidly caught up to the situation, swelling and twitching between their bodies. \n\nFinally, Hailey let go of him and pushed up onto her palms. She searched his handsome features seriously, for what, even she didn't know. \n\n\"I thought we were taking things slowly?\" he asked, smiling devilishly up into her halo of short, golden hair. \n\nSomehow his carefree response seemed to soothe her because she slid down the bed a little and lay back down, her cheek above his heart. \n\n\"I missed you, Chris. I missed your touch, your voice, your smell...\" she whispered. \"That night at the club I was so excited to be yours, I could have screamed. I just wanted you to take me home with you, even if it was just to talk or cuddle or something. Then Lillian broke your heart and those men attacked you and... I didn't really see you again. You went off to catch the people responsible and got hurt. I thought... It's silly but I thought you might have forgotten about me or didn't care, especially when I heard about Lillian's pregnancy.\" \n\nThe dragon rumbled underneath her, his arms wrapping her up possessively. \n\n\"I didn't forget, my beautiful little werebison,\" his voice was deep and rich, vibration rolling into her body through their contact. \"I'm sorry, in hindsight it seems heartless but none of it was on purpose. Lillian's pregnancy came out of nowhere and is causing quite a stir. On top of that, I was busy helping Michelle. Regardless, we are here now, and I think you can feel that I want you very much.\" \n\n\"I know. It's stupid, but it's just the way I felt. Insecurities, ya' know?\" \n\n\"I do,\" he leaned up kissed the tip of her adorable nose as she wriggled tighter into his embrace. \n\n\"Hmm, it does feel like you want me an awful lot,\" Hailey teased, the heat and solidity of his erection obvious against her tummy. \n\n\"Don't you start with that, too,\" he groaned playfully. \"I get innuendo thrown at me from every direction these days. Aren't you supposed to be helping me study or something?\" \n\nHailey opened her mouth to reply but paused mid-breath, her happy expression turning quickly to mortification. She practically vaulted into the air and off the bed, one arm pressed firmly across her chest. \n\n\"Hailey?\" Chris was left wondering as she turned away and began fossicking desperately in one of her backpack's top compartments. \n\nShe didn't reply, and it was like she was trying to block his view as she pulled something out and angrily re-zipped the backpack. Chris thought he caught a flash of deep purple, possibly fabric of some kind clutched in her hands as she rushed around the end of the bed and disappeared into the adjoining bathroom. \n\n\"What did I say?\" he wondered aloud, part bemused, part concerned. \n\nWhen she returned, she played off the entire episode. Chris let it go as she grabbed a heavy chemistry text book and settled down beside him to read and discuss. \n\n*** \n\nLillian came to him that evening. His extended family had gathered in his room for dinner and they'd barely finished eating before she arrived and kicked everyone out. He could see the predator lurking in her dark eyes as she stripped unceremoniously and pounced on him. \n\nHer take on the doctor's orders of him 'avoiding exertion' was simply that she had to be on top, doing all the work. She silenced his objections with a huge mouthful of creamy tit-flesh as she quivered, flexed, and bounced on his steel-hard manhood. All the while she cooed throaty praises and moaned loudly as she quickly peaked. Robbed of his attention for almost a week, the pregnant, buxom vampire was beside herself with lust. She easily drew out his own release, milked him for all he was worth, and continued her avaricious fucking without respite. \n\nWhat little rest he got that night was interrupted every few hours when she insistently mounted him and rode to the heights of passion again and again. \n\nScant hours before dawn, Chris became fed up. He rolled on top of her, pinning her to the hospital bed. He forced her thick, soft thighs wide and wrangled himself into position against her play struggling. He entered her steaming, messy, pussy savagely, thrusting deep as she screeched her approval. Lillian soon found herself with her heels over his shoulders as he pistoned forcefully down into her lush body with his glorious cock, sounding her limit. He bit her perfect skin and mauled jiggling flesh wherever he could reach it, being far more unrestrained than he ever was with his other lovers. His roughness and passion set off her vampiric desires, drawing her quickly to a shuddering, squealing orgasm. Covered in sweat and breathing like a steam train, Chris finally succumbed. One last time, his voluminous ejaculation spewed from the fat, throbbing spear buried deep within his keening vampire mate. \n\nThey collapsed together in a tangle of stained bedding and sweaty limbs, her inhuman lust satiated at last. She took a small sip of his blood before catching a few rare hours of sleep in her dragon's loving embrace. \n\nIn the morning, Dr. Chang arrived with Emilia Mayer in tow. She was escorted by two members of Compound security. Lillian had showered and dressed by then, but Chris had to put his semi-ruined gown back on to be decent. Still, there was an awkward moment when the four entered. The place must have reeked of sex and Chris' hurried efforts to make the bedding more presentable were laughable. \n\nDr. Chang gave Lillian, fresh out of the shower, a disapproving glare but it was like water off a greased duck's back. \n\n\"Hello, Chris, I'm Emilia Mayer,\" the researcher boldly introduced herself and sat on the edge of his bed, unfazed by the mess. She watched his eyes narrow in assessment and anger, but he took her offered hand and shook it tersely. \"Firstly, I'd like to apologise for this situation. I needed to assure my survival and you were the most valuable hostage I could think of, nothing personal.\" \n\n\"Huh, I think I'll reserve my right to take it personally,\" Chris grunted. \"You should have just surrendered and cooperated, it would have earned you a lot of good will.\" \n\n\"That is essentially what I am doing, is it not? I've given Agent Hamund and Lady Narlakis all I know about the workings of Riker Pharmaceutical and accepted their conditions for my continued existence. I just couldn't take the chance that in the heat of the moment I would be killed out of hand. My work, especially involving your biology is too important.\" \n\n\"What work?\" he asked warily. \n\nHe'd heard the woman had been experimenting on the captured Beings. That made him angry from a moral standpoint and a little violated on a personal level. However, having never met her before this, her face and presence didn't illicit a strong reaction and it was difficult to mask his curiosity. \n\n\"Oh, all sorts of things really. I was barely scratching the surface when I was so rudely interrupted by your pet vampire.\" She watched him scowl and chided herself. \"Sorry, I jest. I was mostly focusing on your amazing regenerative and disease fighting capabilities. I could make you a very rich man if you allowed me to continue my work, not to mention all the good such cures would do if available to the broader population. All I would need is a few samples every week.\" \n\nThe two body guards shuffled nervously in the pause that followed. They were tasked with keeping the human out of trouble but what could they really do if the dragon or Lillian for that matter decided to take offence against the stubborn old woman. \n\n\"That sounds almost exactly like every other offer I receive on Maginet,\" Chris finally replied. \"A scale or two, a vial of saliva, a few ounces of blood. I'll make you rich. It couldn't possibly do any harm.\" \n\nHe sighed, watching the older woman as she opened a leather satchel and began assembling a shiny but rather archaic looking syringe gun. \n\n\"Now my species is on the verge of extinction and the first human who begins to understand my abilities wants exactly the same thing.\" \n\n\"I didn't peg you as one to indulge in melodrama,\" Emilia said matter-of-factly as she loaded a vial of clear fluid into the gun and squirted a little from the tip. \"I don't do any of this for my personal gain, I want to advance science, our understanding of the universe. I wouldn't expect someone so young to understand that drive but if you think curing cancer, AIDS, or unlocking the secrets of telomere degradation aren't worthy enough rewards for a little discomfort once or twice a week, then you're more callous than I imagined.\" \n\nHis stunned look let her know that her hook had struck. She took advantage of his silence and adeptly inserted her needle into his shoulder. He winced only slightly as the plunger pumped the antidote into his muscle for slow release. \n\n\"That's quite enough out of you for one day,\" Lillian came to Chris' defence. \"Next you'll be telling us how the Nazi's experiments in the Second World War were justified.\" \n\nEmilia ignored the vampire, instead packing away her equipment. Only Chris noticed her weathered hands tremble slightly and a firmness settle in the wrinkles at the corners of her mouth. \n\n\"I'll think about it,\" the words came from him almost unbidden. \n\n\"Thank you.\" Emilia's surprised smile stripped decades from her appearance as she met the young man's eyes for a long moment. \n\n\"You're done. Out!\" Lillian hissed, perched like a menacing hawk on the other side of his bed. She pointed threateningly at the door before rounding on the woman's two minders. \"One of you two knuckleheads needs to get down to Eddard's Apothecary right now for some pheromone cancellation potion. The boy's mother will know what you need.\" \n\nThe two burly shifters glanced nervously at each other and began bustling their charge away from the advancing vampire as she chased them from the room. \n\n\"Consider it an order.\" \n\nOnce everyone had filed out, Lillian stalked toward her sheepish young lover and leaned over him until their noses almost touched. It was quite distracting for Chris, lying half upright in the bed. Her heavy breasts hung between them and with several buttons of her crisp white shirt open, there was a lot of kissable pale skin and intriguing geometry on display. \n\nHe yelped, released from her jiggling spell as she struck like a coiled snake, grabbing his flaccid cock through his gown. \n\n\"I am not sharing with that geriatric psycho,\" she almost purred, her husky voice full of both menace and promised delights. He was hasty to nod agreement as she held him captive, like a cat with her prey. \"Good.\" \n\nShe kissed him then, her lips soft but insistent. His breath hitched out raggedly in relief, his mind struggling to deal with her swinging mood but much happier with the current direction. The grip on his member melted instantly from threat to skilled caress. \n\nIn stark contrast to the previous night, she was gentle and loving as they made out. Her hands in his hair, her shallow breath, the way she nibbled her lower lip so sexily as they finally untangled; it all had him hooked on this Amazonian goddess and hinted at a softer, more vulnerable nature. It drew out his feelings of love and protectiveness for her, his friend, the mother to be of his child. That she shared body and soul with a dark, parasitic entity was almost unfathomable in that perfect moment. Then her wicked, extra-wide and fang-filled grin split her face and she latched onto his shoulder like a hungry lamprey. \n\n\"And they say men only want one thing,\" Chris winced and chuckled as she lapped and sucked at the two shallow puncture wounds. She moaned something incomprehensible back into his skin, her body shivering in appreciation. \n\n\"Mhhhhh,\" Lillian purred as she finally surfaced, wiping a stray line of bright red fluid from her chin and sucking the stained finger with obvious relish. \"Just remember you can have that thing whenever, however, and wherever. Now, rest and get your strength back, my studly young dragon. In ten days you'll need to answer to the vampire council for rewriting the rules on my fertility.\" \n\n\"I, ah...\" \n\n\"Hush,\" she soothed. \"Don't worry overly, they think you're some sort of golden goose only I'm the one with the eggs.\" \n\nSomeone wrapped on the door. \n\n\"Who is it?\" Lillian asked. \n\n\"It's me,\" Michelle answered, coming inside. Chris saw several faces peeking in curiously behind her before she shut the door. He thought Kat might have been among them. \n\n\"Please, do come in,\" Lillian's sarcasm was dripping. \n\n\"Good morning, Michelle,\" Chris was much cheerier. \n\n\"I hope I'm not interrupting anything,\" Michelle's nose flared adorably and her eyes widened as she spotted the stain on the bed that Chris was avoiding. \"I wanted to introduce a few more members of our team.\" \n\n\"I suppose we were pretty much finished,\" Lillian admitted. \n\n\"Give me five minutes to shower and I'll be ready,\" Chris nodded. \"And, um... maybe you could ask a nurse for a change of sheets? Please?\" \n\n\"Of course, they have a nice foyer here and the place is abandoned, so why don't we meet out there when you're ready,\" Michelle smiled. \"Though you two might consider that your medical bill is going to be enormous if they have to keep burning mattresses.\" \n\nLillian punched her playfully in the arm for that. \n\n*** \n\nHaving availed himself of the bathroom's amenities, the toiletries, and clean clothes Annabel had packed for him, he sallied forth. His steps were initially unsteady, having been unconscious and bedridden for so long. It was hard to place a finger on what he felt, but something inside him was off, his body knew it. Still, his strength and confidence returned gradually as he walked barefoot up the hallway towards the nurse's office and reception. Annabel had supplied him with a comfortable pair of baggy sweatpants as well as several t-shirts and pairs of underwear. He was glad he didn't have to face Michelle and her posse in his hospital gown. \n\nNurse Ruth tutted in mild disapproval as he passed her station. He managed to escape with a dazzling smile, a light caress of her forearm, and reassurances that he would be taking it easy and sitting in plain view of her post. \n\nThe clinic lobby was surprisingly nice. It didn't have that characteristic hospital starkness and disinfectant smell which spoke of unthinkable cycles of ill people inhabiting the same space. The colours were warm and dark, the armchairs and other furniture looked like they belonged in someone's well-appointed living room. The lighting was soft, not blaring fluorescents. There was art on the walls and a rock garden of succulents on the large coffee table in the centre. All in all, a very welcoming feel. \n\nEveryone rose when he entered, making him feel self-conscious. Michelle seemed to sense this and guided him to meet the two late arrivals to their little team, Samantha Patel and Pamela Smith. \n\n\"It's good to meet you two,\" Chris shook their hands in turn, smiling and trying to seem friendly. \"Lisa and Kat had to help save my ass on the second day of the job, so the more the merrier.\" \n\n\"It wasn't like that, Chris,\" Lisa chimed in. \"It was very brave of you to go undercover in that situation. Getting you out is the least we could have done. Those poor people they'd been snatching for weeks are all at home now because of you.\" \n\n\"Brave-stupid,\" Kat added cheekily. \n\n\"That's my signature move, don't you know?\" he shot back, grinning. \n\n\"Okay, everyone find a comfortable perch and relax,\" Michelle said as she shepherded Chris to a plush recliner and took the adjacent chair for herself. \"Samantha, Pamela, why don't you tell Chris a little about your backgrounds. Then we can get the debrief signed off and you can ask the dragon all the questions you've been bottling up.\" \n\n\"Me first,\" Samantha started in with enthusiasm. \"Everyone can call me Sam by the way. I was born in the States, but my Mom and Dad met in Mumbai when he was stationed at the Consulate there. I grew up in several places around the world, we moved a lot with my father's work. I ended up following in his footsteps and joined the Air Force, became a pilot, and flew transport helicopters for half a decade. I met my husband there and we quit and moved to Oregon. I joined the Portland Police Bureau and began working my way up the ranks and eventually became a homicide detective. We had my little angel, Amy. Sadly, my husband died in a construction accident only a few years ago. Now, four years later, I'm approached with a mysterious offer to move to Denver for a 'life changing,' exciting position with stupid pay. Here I am.\" \n\nChris nodded along with her story. Her mother's Indian heritage was obvious in her lovely brown skin and thick dark hair. He couldn't help frowning as her story took a terrible turn with the death of her husband. It must have been difficult for her and her daughter. ",
        "\"I'm sorry to hear about your husband, Sam. How old is Amy?\" \n\n\"Thank you. She's seven, almost eight,\" Sam beamed. \n\n\"It must be tough for her to move at that age. Let me know if there's anything I can do to help, I'm a dragon after all. My fianc\u00e9 Annabel is great with kids.\" \n\nSam was a little taken aback at the forward offer. At first her protective instinct told her to be wary, but the large young man seemed completely genuine in his offer. \n\n\"I'm sorry,\" Chris watched her brow furrow and the other women in the room exchange nervous glances. \"I shouldn't have...\" \n\n\"No. No, it's fine. I appreciate the offer, I was just taken aback. I'm sure after the Revelation she would love to know a real-life dragon. She's such an inquisitive little soul.\" \n\n\"Okay. How about you, Pamela?\" he asked. \n\nThe athletic blond fixed her green eyes on him appraisingly and he noticed for the first time just how many freckles she had. It was quite striking, her obviously pale completion showed signs that she loved the sunshine. Her body language told him she wasn't comfortable. He wondered what he'd done wrong. \n\n\"Joined the Coast Guard out of high school, became a gunnery sniper, shot the engines out of drug boats for a few years,\" she sighed and looked around the room as if to ask if it was necessary to continue. She'd been sceptical about taking this job from the beginning. This oversized kid in front of her was supposed to be some sort of magical badass, a dragon. Something was fishy. \"A while back I moved to LA and got into the LAPD Tactical Response Unit. I've been pulling triggers ever since. I mostly took this job as an excuse to get out of a long-term relationship that wasn't going anywhere, plus the pay.\" \n\n\"Wow, um, okay,\" Chris was lost for words. \n\nMichelle rolled her eyes at him as Pamela opened her mouth to continue. The woman was known to have an attitude. \n\n\"I'm starting to wonder if I should have stayed in LA. Since when was there an all-woman anything in the police or armed forces? We're like some sort of Michelle's Angels bullshit.\" \n\n\"Michelle's Angels! Ha, I like that one,\" Lisa laughed. \n\n\"Hmm...I think we could use that,\" Michelle mused teasingly. \n\n\"I'm not joking,\" Pamela obviously didn't appreciate their sense of humour. \n\n\"Look, Pamela, I understand this situation must seem quite unusual but there is a reason for it,\" Michelle spoke, her tone placating but leaving no doubt that she was in charge. \"You only officially joined the team a few days ago so you're catching up. You are just barely dipping your toes into the world of magic. I require you to have some mental flexibility. If you can't, or wont, I have no use for you. You've read the dossiers I gave you?\" \n\n\"Skimmed, mostly,\" the slightly chagrined woman admitted. \"It just seems so unbelievable.\" \n\n\"It's true,\" Lisa assured her. \"You wouldn't believe some of the things I've seen in the last week.\" \n\n\"Chris, would you mind giving us a little demonstration?\" Michelle asked. \"Nothing too taxing though. I wouldn't want to upset Dr. Chang.\" \n\n\"To say nothing of my health. Okay, let me think,\" he said wryly. Last time he'd done a half transformation but that was a demanding process. Perhaps a little phasing? That was pretty easy. \"Okay, you've probably heard or read a little something about the Ether, my dragon element?\" \n\nHe received nods around the room and Kat spoke up. \n\n\"I don't understand it at all though. It's another dimension that this one is linked to somehow?\" \n\n\"Sort of,\" he cocked his head in acknowledgement. \"In truth I'm not sure anyone really understands it but I'm learning as much as I can. Anyway, I'm told I have unprecedented control of magic relating to the Ether. Kat would you like to assist me with the demonstration?\" \n\nShe looked a little wary at first but gathered her courage as he stood and held out his big hand to her. A marine like her wasn't going to pussy out on a little magic, heck, it might be fun. \n\n\"I need to take your hand,\" he warned, feeling a little shiver run up her arm as he took a gentle but solid grip on her wrist. She gripped him back in return, her body tensed like a coiled spring, ready to explode. \"Relax. And don't freak out.\" \n\nHe let his awareness wash over her, surround her. Her lips were just parting in an astonished little gasp, gooseflesh beginning to form on her skin as they vanished. \n\n\"What the...\" Pamela jumped up from her seat and brushed a hand through the empty space. \"Invisibility?!\" \n\n\"Well, sort of,\" Michelle looked to Lisa and Sam to see how they were doing. \"I suspect he's using one of his more powerful abilities, phasing, a roundabout sort of teleportation. They could just be sitting in the Ether right there laughing at us though.\" \n\n\"Teleportation? That's so cool,\" Lisa seemed to be taking it quite well. \n\n\"Sam?\" Michelle asked. The experienced detective had settled back into her chair and was rubbing her temples thoughtfully, eyes closed. \n\n\"I just realised what a headache this job is going to be. Our world is going to be a very different place when this gets out.\" \n\n\"Yes. Yes, it is,\" Michelle smiled a little sadly. Finally someone got it, saw the bigger picture rather than the shock value of the magic itself. Her instincts had been correct, Sam would make an excellent second in command at the Denver office.  \n\n\"But how is that possible?\" Pamela rounded on Michelle. \"Where did he take her? Is he going to bring her back?\" \n\n\"I don't know how it's possible and I have no idea where he took her,\" Michelle said calmly. \"You have to give Chris some slack. Think of him as a fresh recruit. He's unique and magically powerful but inexperienced. He's also incredibly valuable. It's our job to train, protect, and use his talents to complete our mission. If he decides to bring Kat back anytime soon that is.\" \n\n\"What else can he do? And if he's so powerful, why does he need our protection?\" Sam asked. \n\n\"That's fair,\" Michelle nodded. \"He needs our protection because he's exposing himself to danger to help us. As well as providing magical support when we need it, the higher-ups have earmarked him to be some sort of a public figure when this all comes out. They think, and I agree, that people will need to see and have chances to interact positively with Beings if we're going to integrate their hidden world with ours. Chris has the potential to fill this role well. He's young, attractive, mild mannered, and most importantly still connected with his humanity. So many of the old, powerful Beings I've met have lost that entirely.\" \n\n\"I see, he will almost certainly be the target of more violence then.\" \n\n\"Not only that,\" Lisa added. \"I've been doing some reading now that we have access to their Maginet. I also got a chance to talk to one of his mates, Claire. He's incredibly valuable to his species and Beings as a whole. It would be a tragedy if something happened to him.\" \n\n\"Did I hear you correctly? You said ONE of his mates?\" Sam cocked an eyebrow. \n\n\"Yes,\" Lisa said, a little colour rising in her cheeks. \"He has five, six if you count the sprite.\" \n\n\"Good lord, how does he...\" \n\n\"Pheromones, I treated you both with a potion to resist them this morning,\" Michelle said. \"It's all in the briefing package but there's a lot to read through.\" \n\n\"The little skin swab,\" Pamela scowled. \"It wasn't a DNA sample after all.\" \n\n\"Indeed, and you'll need to dose yourselves every day like I do if you don't want to embarrass yourselves with him,\" Michelle smirked. \"Unless you think you're completely immune to his charm that is. Perhaps you can see now why I was told to assemble an all-female team to work closely with him. His interaction with humans needs to be carefully managed. The type of men who usually possess our skill sets often have egos to go with them.\" \n\n\"That's the truth,\" Pamela admitted. \n\nA little crackle was their only warning as Chris pulled a flustered Kat back into the room through the Ether. In his other hand he gripped a large cup holder full of beefy takeaway cups. Kat's bounty was a white card box. \n\n\"That was fucking crazy!\" Kat enthused to wide eyed stares. \n\n\"I had a hankering for hot chocolate and donuts,\" Chris shrugged. \"There's enough for everyone.\" \n\nThey ended up talking for over an hour. Chris got filled in on all the work that went on to get the kidnapped Beings back to their families. Michelle gave them a report on what actions were being taken after the incident and expressed her frustration trying to get Patrick Riker arrested. The women were full of questions about magic, dragons, and all sorts of other Being related subjects. He didn't even come close to being able to answer all of them, but it felt good to talk and for once feel a little knowledgeable. \n\nEventually Dr. Chang came to collect him, it was time to start dialysis. Before he was led away, Michelle took him aside and made a cryptic comment about coming to see him later for a more private visit. \n\nHis days abed took on a loose schedule which ended up being far more bearable than he'd imagined. In the morning, he was injected with the antidote by Dr. Mayer herself. Early in the afternoon, he would be hooked back up to the dialysis machine for several hours, sometimes the rest of the day. \n\nOne of Michelle's Angels, as they now jokingly referred to themselves, was usually hanging around to keep an eye on him. He protested his need for constant supervision, but Michelle said it was good practice for them. \n\nIn truth, he was never really left alone at all. Petra and or Claire usually spent the morning with him and Hailey kept him company in the afternoon. Susan and Annabel would drop by when they could, but their schedules were full with work and school. Everyone came to the clinic in the evenings to have a picnic dinner. Those were his favourite times, lifting a lot of the frustration of inactivity. He didn't get to see much of Michelle or Lillian outside of dinner, they tended to work late or all night. \n\nOne of his broodmates always stayed overnight with him. It wasn't always about the sex, it felt just so right to have a loved one to wrap his arms around and sleep beside. \n\n*** \n\n\"Hailey?\" \n\n\"Yeah?\" \n\nTucked up against his side, she looked up from the research paper she was reading on her tablet. He couldn't help adoring her as she wriggled closer underneath his needle-and-tube-rigged arm. \n\n\"I was wondering... what's something I could do with my magic to help humanity on a large scale?\" \n\n\"I'm not sure,\" she frowned, scrunching her nose. \"What brought this on?\" \n\n\"It was something Dr. Mayer said to me the other day. She seemed to think I should allow her to research my biology because it could help so many people.\" \n\n\"I've got no doubt the right research could help a lot of people.\" She sat up and looked down at him, her short blond hair cutely messy. \"It would also probably make a few people very rich to license or sell dragon-based cures. You also must consider how exactly they would plan to mass produce these cures. There's undoubtedly a magical aspect to your healing abilities which couldn't be replicated in the lab.\" \n\n\"I hadn't thought of it like that,\" he admitted. \n\n\"Providing magical healthcare to the masses is actually a pretty poor use of your potential in my opinion.\" \n\n\"Oh, really?\" he teased. \"I suppose you have a better idea.\" \n\n\"Don't I always?\" \n\n\"So far, yes, my beautiful little aspiring astronaut. I'm ever in awe of your intelligence, it's very attractive you know.\" \n\n\"You're such a tease, Chris,\" she batted at his chest. \"When we have sex, I want you to tell me that over and over.\" \n\n\"Actually, I was thinking that for our first time I could phase us up to low orbit, we could sneak aboard and fuck in the ISS.\" \n\nShe gaped down at him, trying several times to find words. \n\n\"C... could you?\" \n\n\"Don't know,\" he smiled. \"Worth a try?\" \n\n\"Oh, God yes!\" her eyes closed as a little shiver ran over her skin just at the thought of it. \n\n\"Damn, you're one serious little space freak.\" \n\n\"You have no idea,\" she leaned back and hugged herself in excitement. \"Yet.\" \n\nShe was wearing a snug, light grey sweater-dress and the movement did wonderful things to push her breasts toward him. That was why he noticed the spreading patches of darker fabric around the centre of each of her beautiful sweater-puppies. \n\nHis mind reached back to a time where Lillian had been tormenting him about Hailey's crush and claiming that were-bovine women lactated almost constantly. He hadn't put too much stock in that at the time, being more worried that Annabel would take Lillian's teasing to heart. Should he say anything now? \n\nSomething of his dilemma must have shown on his face. \n\n\"What?\" she leaned closer. \"Was that too much? I thought...\" \n\n\"No, Hailey, I like the idea, I really do... It's just... Umm... Are your boobs leaking?\" \n\nShe looked down and saw too late that her dirty little secret was out. She didn't say a word but felt herself turn scarlet in mortified embarrassment. In a sudden scrabble of bedding, she made an attempt to flee but he sat up quickly and caught her wrist. \n\n\"What's wrong? Hailey, don't run away,\" he softened his grip and asked gently. \"Look at me, please.\" \n\nVery slowly she raised her eyes to his. There were the beginnings of tears glistening at the corners of her striking blues. \n\n\"It's nothing to be ashamed about,\" he assured, gingerly placing his needle-stuck arm comfortingly on her shoulder. She had an arm across her chest to cover the wet spots, he recognised the position and it finally clicked for him. \"This is why you've been going to the bathroom so much?\" \n\n\"Yes,\" she admitted ashamedly. \n\n\"Why didn't you just tell me? Lillian mentioned something about this a while ago, but I didn't think about it too much. Dragons have plenty of weird and cool biological quirks. I don't mind that you lactate, it's kind of hot actually.\" \n\n\"No, it's not. People tease me sometimes and mutter things about my Mom and I when we're around town. My nickname at school was Daisey.\" \n\n\"Who?\" Chris' anger was sudden and intense, dragon anger. \"I'll kick their asses.\" \n\nShe looked taken-aback, her eyes searching, hoping for acceptance. As if a dam inside her burst, she flung her arms up around his neck and clung to him, burying her face against his neck. Her words came out in a flood. \n\n\"I was scared you would think it was gross. Chris, I'm sorry. I knew I couldn't hide it forever, but the moment never seemed right and the longer I left off telling you the harder it got. Please say you don't think it's gross? I have to wear absorbent bra cups all the time and it gets so much worse when I'm around you. It's like, even just your smell turns on the faucet.\" \n\nHe rubbed her back comfortingly as she babbled but had to start chuckling when he felt the warm wetness spreading from their contact, seeping through his own thin hospital gown. \n\n\"What?\" She sat back into his lap and looked up at him a little reproachfully. \n\n\"It's not gross. I like you, milk and all... It's just that you're getting it on me.\" \n\nShe looked down between their bodies at the rough circles of damp fabric. \n\n\"Oh my God, I'm going to die of embarrassment,\" she squeaked. \n\n\"For such a smart girl, you're really hung up on this, huh? Hailey, you're beautiful, and from what I've seen so far your breasts are world class.\" \n\n\"No, you don't have to live with them...\" \n\n\"Hush,\" he kissed her softly. She seemed reluctant at first but soon her soft lips were meeting him firmly, her pink little tongue slipping tentatively into his mouth. \n\nChris' good hand was stroking up and down her slim torso, closer and closer to its target. When it finally slid up to gently cup her left breast, she let out a tiny gasp, stilling their kiss. He tenderly supported it, hefting slightly from underneath, running his thumb lovingly across the fabric shielding her upper slope. \n\nHer eyes were locked onto his, her little body quivering as he reached up and slid the grey fabric off her shoulder. Her bronzed skin looked sumptuous against the exposed top of a lacy but substantial, dark green bra cup. He paused, seeking permission, a finger gently running back and forth over the wide, lightly padded support strap. She worried her bottom lip for several seconds, considering or perhaps gathering courage. She closed her eyes and nodded, pent up breath escaping her in a shuddered rush. \n\nEven as he slipped his finger under the strap and eased it down to the side, her hand came up to do the same on her right shoulder. She made a small shrugging motion and suddenly, most of her breasts were bared to him. \n\nHe stared, once again astounded by the female form. She was so large and perfectly rounded, heavy. Unleashed, they were weighted down slightly, but this only served to accentuate her beautifully upturned, cone-like nipples. So pink and soft and glistening with moisture. He hadn't come across that sort of shape before, like her areola and nipple were merged into a puffy, sackable little teat. \n\nHe badly wished his other hand was fit for duty, but he made do with one, pushing her brassiere and sweater further down her body. Her lower slopes were marvellously full, spreading out slightly across her chest, a little wider than her torso. They were the sort of tits you would expect on someone with Lillian's more full-bodied figure, not the slight young blond exposed and vulnerable before him. \n\n\"See? Beautiful,\" he whispered. His finger traced all the way down the side of her right breast, looping under the swell, crossing the slight gap at her sternum to repeat the worshiping caress on its twin. \n\nUnder her butt, Hailey could feel his member grow and throb, hot and insistent. Her womanhood was responding too, moistening as a small fire began to kindle low in her belly. Her hands played across her lower tummy and across her thighs nervously. She opened her eyes slowly, her skin puckering under his gentle touch. He had such a look of undisguised adoration on his face that she had to smile. \n\nHe exploringly cupped and hefted her left tit, squeezing a little, like someone trying to find that one ripe avocado at the market. He was surprised how firm and engorged she felt, almost hard. He squeezed again, just to make sure. \n\nShe gasped as a little squirt of white fluid shot from her nipple, spattering his gown. He looked down at his chest, chuckled and shot her a roguish grin. She watched his eyes twinkle mischievously, holding her gaze as he very slowly raised his mouth toward her dribbling left nipple. \n\n\"Fuck,\" her breath hitched as his lips softly enveloped her puffy little cone. Their eyes never parted as he flicked his tongue around her sensitive teat and began applying gentle suction. \n\nShe was unprepared for the way her body responded to the warm, tugging sensation. As if on cue, an overwhelming tingling began in both her breasts, bordering on being painful. It had never been this powerful before. Then, as the dragon continued to suckle, the dam burst and her milk let down. She sighed happy relief, almost like if she really needed to pee and could now finally relax and let it flow. \n\nChris was in heaven. What started as a warm little trickle of creamy milk became a veritable torrent. She was delicious, sweeter and richer than fresh cow's milk. His dragon instinct told him her milk was chock full of nutrients and more than a little magic of her own. He gulped quickly as her flow increased. She looked down at him, a silly little smile on her face as he guzzled and sucked greedily at her nipple. Her fingers tangled into his short hair and she pulled him closer. \n\nA warm splash across his cheek and spreading dampness on his right shoulder made him splutter and turn his head. Sure enough, her neglected breast was firing off volleys of wasted milk in complaint. They were quickly soaking him, the streams surprisingly powerful and rhythmic. ",
        "\"Sorry,\" Hailey shrugged down at him and moved a hand to cover her overflowing breast. \"They do that sometimes when I'm really full.\" \n\n\"Don't apologise, you... unnngaarrlllgg,\" Chris tried to come up for air and speak but got blasted across the nose and mouth by the tit he'd just abandoned. He ended up laughing, the arm hooked up to the dialysis machine aching slightly from the jostling. He quickly clamped her left nipple firmly between his thumb and forefinger, stemming the flow. \n\nShe whimpered, her body tensing, hips fidgeting. It was like her nipple had a direct line to her little runaway steam train of a pussy and any signal sent just shovelled more coal into the fire box. Stemming her milk like that was unreal, she almost screamed out in a combination of pleasure, frustration, and dull pain. \n\n\"Sorry,\" he spluttered, loosening his grip a little and brushing milk off his nose. \"Am I hurting you?\" \n\n\"No... Not really,\" she panted. \"I'm just really sensitive and it's intense. It's sort of sore when I get backed up like that... unnngg... It's okay for now.\" \n\n\"Okay, well I was going to say that you shouldn't apologise. It's delicious and I only wish I had two mouths, so I could get all of it.\" \n\n\"Really?\" \n\n\"Hailey Sibon, I could literally spend all afternoon suckling the most delightful milk I've ever tasted from your perfect boobs,\" he promised solemnly. \n\n\"Oh... um... if you really like it that much I suppose you could keep pinching this one until you've drained the other one a bit,\" she suggested softly, revealing her dripping and still softly squirting right breast. \"They're sort of sympathetic like that. I usually use two pumps at the same time when I'm at home.\" \n\n\"I'd love to,\" he grinned. \n\n\"Okay, lie back then. It will be more comfortable for both of us.\" \n\nShe guided him back onto the bed. As she leaned in above him, her breasts hanging full and heavy in his face, Chris shook his head in astonishment. \n\n\"How could you not think this was hot?\" \n\nShe smiled happily and silenced him with her fresh nipple. He growled in satisfaction, and she moaned relief and pleasure as her sumptuous milk began to flow freely again. \n\n\"What was your idea?\" he asked an hour later as they lay snuggled together, dozing. \n\n\"What idea?\" \n\n\"You hinted that you had a better idea for a way I could use my powers to help people.\" \n\n\"Oh... that,\" she giggled. \"I'm all out of ideas. Sucked dry, you might say.\" \n\n\"Seriously?\" he chuckled, squeezing her against his good side. \n\n\"I warn you, it's nerdy.\" \n\n\"Go on.\" \n\n\"Okay, think with me. What do you think are the biggest problems facing the world today, aside from the Revelation of course?\" she yawned, coming more awake. \"Think about human problems.\" \n\nIt was ever like Hailey to have him consider and puzzle out an answer, rather than just giving it to him. It's what made her such an excellent tutor. \n\n\"Pollution, overpopulation, dwindling resources, climate change, wealth disparity?\" \n\n\"Good,\" she purred. \"All good answers. I would have added the ocean, especially acidification, but I guess that's part of pollution. They all help paint the broader picture. Can you think of one thing which could go some way to helping all of these issues?\" \n\nChris thought about it, determined to impress her but came up blank. \n\n\"I'm not sure. They all seem like quite complicated and somewhat separate issues. Short of me magically enforcing some sort of global socialist regime, I don't see how you would get everyone to agree on the correct course of action, let alone buckle down and make the sacrifices needed to combat the problems. It's not in human nature and I would make a terrible dictator.\" \n\n\"Ha, you're right,\" she laughed. \"You're too soft hearted to be a global dictator. Sadly, humans don't seem to care about the writing on the wall, Beings too. No... I'm talking about cheap, abundant energy.\" \n\n\"Magical energy?\" he asked, confused. \n\n\"No, conventional. Electrical mostly, but ready to be converted for use as needed.\" \n\n\"I thought we had enough to meet our demands, at least in the developed world. I can't remember any power outages or talk about a scarcity. Solar and renewables are finally becoming cheaper than fossil fuel power, aren't they?\" \n\n\"Yes, they are and that's admirable but you're missing my point.\" \n\n\"Which is?\" \n\n\"That if we could help jump an order of magnitude in electricity production and have it cheap to produce, it could be spent in ways that could benefit everyone globally.\" \n\n\"Explain, please?\" \n\n\"Okay, there are a lot of things which we know how to do but don't because they're too energy expensive. Proper recycling and pulling carbon dioxide out of the ocean to make carbon-neutral jet fuel and other products are just a few that come to mind. We also know that access to electricity and the corresponding quality of life improvements it brings lowers birth rates. If electricity was cheap and very abundant, you could do really cool things like desalinate ocean water in Africa and try to stop the rampant desertification there. There are so many things that could potentially be possible, not to mention that it could be a huge advance in aerospace technology.\" \n\n\"There it is,\" Chris chuckled. \n\n\"I'm serious,\" she protested. \"A lot of what's holding us back in space is how to generate electricity.\" \n\n\"Okay, how though?\" \n\n\"Fusion... We could try advanced fission but there are already people doing clever work on that.\" \n\n\"Like, the sun fusion?\" he asked incredulously. \"Haven't all sorts of scientists been trying to make that work for the last half century too?\" \n\n\"Yes, and they have made it work,\" she said a little testily. \"They just can't keep it working for more than a few hundred milliseconds or harvest any power.\" \n\n\"What am I supposed to do about that?\" he laughed. \n\n\"Well, I was thinking about how you said everything has a presence in the Ether. Tell me, Chris, have you heard of a muon?\" \n\n*** \n\nChris was chafing at the bit to be released late one afternoon. It was the sixth day of his incarceration, as he'd come to joke about it. Hailey had recently left to pick up some groceries for her mother and he was alone. He was on and off his tablet, unsettled by the news Michelle had brought him after lunch. \n\nThe uproar and publicity around what the public perceived as a terrible act of violence at a popular if quirky nightclub had died down substantially after a week. However, people hadn't forgotten. They also hadn't forgotten the supposed hero of the hour, Chris Baryst. In his absence, people were wondering what had happened and if he was okay. Those who remembered him in his home town, Laramie, were quick to speak up that they knew him and surprisingly persistent in trying to track him down. \n\nAnnabel had been fending off inquiries about him, including a few from dogged reporters who latched onto that connection. She'd ignored those during the first few hectic days where everything was up in the air. Once he'd been brought home and hospitalised, she used that as an excuse as to why he couldn't be contacted and wasn't available for interview. Michelle had jumped on that bandwagon, no doubt spinning a tale of bravery, a quiet hero recovering from grievous wounds in a private hospital. \n\nMichelle informed him that there was starting to be a little too much speculation for her liking. He was to have an exclusive interview with a 'reasonably tame' local reporter when he was fit to leave hospital. He would be on his own too, except perhaps an invisible vampire. No one was going to save him if he blundered and said the wrong thing though. He was nervous, and it put a huge dampener on his excitement to be cleared for release, possibly as early as tomorrow. \n\nA kerfuffle outside broke into his worrying. He thought he recognised the gravely old voice. \n\n\"... know he's in there because I can smell him, the smarmy little lizard.\" \n\nChris got up and opened the door, peering into the hallway. \n\n\"Sir, I don't know you,\" Kat's voice was raised, her accent echoing up to him from the waiting room. \"You step the fuck back or I swear to God I will drop you, old man or not.\" \n\n\"I'd like to see you try, missy,\" snarled the old werecat. \"I drove all the way here to see my boy and I hate driving, makes me cranky. You'd best be out of my way before I take you over my knee for a spanking, you ain't too old.\" \n\nChris grinned wide and started quickly down the corridor to avert disaster. He was half tempted to wait a while and see how the situation unfolded, it might be funny. Jethry wasn't what he used to be, and Chris didn't want to chance him getting hurt. He burst into the reception to the comic sight of the two about to square off. By the lecherous grin on Jethry's face, Chris realised he was enjoying himself and probably did intend to give Kat the promised spanking if he could manage it. \n\n\"Kat,\" he warned humorously, \"back away from the dirty old man.\" \n\n\"Chris!\" Jethry exclaimed happily as they took the few steps between them and embraced. \"Jesus boy, if you was a steer you'd be fit for slaughter. Look at the size of you.\" \n\n\"Thanks, I guess. It's great to see you, Jethry. Here, meet Kat, she ahh... I work with her.\" \n\n\"A pleasure to meet you, Miss,\" the werecat fixed his speech into something more proper, yet still mocking. \"Jethry Dale at your service, for all your spanking needs of course.\" \n\nChris rolled his eyes at her over Jethry's shoulder and shrugged slightly in apology. \n\n\"I saw that,\" Jethry poked him firmly in the gut making Chris grunt and then laugh. \"You ain't too old for a spanking either, though you might be a little too big.\" \n\n\"Sorry Kat, he's the dirtiest old man you'll probably ever meet, but I love him,\" Chris wrapped his arm around Jethry shoulder. \n\n\"Just keep him away from my ass or I'll whoop his, even if it is scrawny and old.\" \n\n\"You're not porking this one too, are ya?\" Jethry complained as Chris turned them toward his room, still in clear earshot of Kat. \n\n\"No! Jesus, you're terrible,\" Chris' ears were burning now. \n\n\"Good, 'cos I like 'em feisty.\" \n\nChris led him away before he could be embarrassed further. Back in his room, they found seats and just looked at each other for a moment. \n\n\"How are you, boy?\" the older man asked seriously, all trace of mischief gone. \n\n\"I'm ready to get out of here,\" Chris sighed. \"Susan told you what happened?\" \n\n\"Yep, can't say I understand it all. Some sort of poison?\" \n\n\"Basically, yeah. The scientist who'd been experimenting on... and I suppose caring for those poor folks, was smart enough to realise the hammer was going to drop on them if they captured me. She's basically been holding me hostage, feeding me the antidote every day for the last week.\" \n\nThe werecat grunted in disgust, stroking his bristly chin thoughtfully. \n\n\"Saw your picture on the news, that was a hoot. All sorts of folks been dropping by unannounced to ask about ya.\" \n\n\"Yeah, sorry about that. It's only going to get worse though, they want me to be some sort of ambassador for the Revelation. I'm working with the agency they're setting up to try keep people honest when this all comes out. It feels good to do stuff like getting those kidnapped Beings back.\" \n\n\"That's good, son. Someone like you will make a big difference, maybe show some of the rest of us that working with the humans isn't so bad. I've heard... mutterings, Beings leaving the hubs, spreading out and going back to the wilderness if they can manage. I don't know if they're trying to hide away and live how they please or if they're just running away from the places where shit will hit the fan hardest.\" \n\n\"We'll see. It could definitely all blow up in our faces if we aren't careful,\" Chris admitted. \"It doesn't bode well if there are already humans trying to experiment on us. Imagine if word of that got around.\" \n\n\"Just do your best, for you and your girls,\" Jethry clapped a hand companionably on his shoulder. \"You've got little ones to think about, too. If you need to just run for a while and get them safe, there's no shame in that.\" \n\n\"I know. Any other advice?\" \n\n\"Naw, not really. Just be true to each other and don't take yourself too seriously.\" \n\n\"Yeah, I feel like you might have taken a bit too much of your own advice on that last part,\" Chris laughed. \n\n\"Maybe,\" Jethry admitted. They sat silently for a while. It wasn't awkward, they'd spent that much time working together over the years. \"Damn, I should have picked us up a pack of beer or something.\" \n\n\"Don't worry about it. Folks will be arriving for dinner soon. Will you stay? How's the farm?\" \n\n\"I could stay. Funny you should ask about the farm,\" Jethry grinned. \"I got a load of hay from the Johnsons, but the boys didn't want to stack it nice in the back of the barn. It's sitting outside under a tarpaulin, but it won't be long until it's snowed on.\" \n\n\"I'll see what I can do,\" Chris nodded. \"I've gotten pretty good at lifting things with this house I'm helping to build. I'd take you around there right now but the doctor here is fierce, he'd probably lock me up an extra day or two if I tried to slip away.\" \n\n\"It can't be that bad, I smell all sorts of tail in here. Milk, too.\" \n\nChris blushed. \n\n\"Ha! You've found yourself a little heifer then, I thought I smelled one,\" he shook his head in mock regret. \"Teach a boy to milk a cow, aye?\" \n\n\"Jealous?\" Chris teased back. \n\n\"Of course,\" he replied gruffly. \"Good for you, boy. Plenty of worse things could happen to the world than you sowing your seed far and wide.\" \n\n\"It's not like th-\" Chris protested. \n\n\"I know it's not. I'm just saying. You're different, Chris, I can feel it. I always had this instinct about you, call it a cat sense. The hairs on my scruff pick up whenever you're around. It ain't a bad thing, just a sort of 'careful with this one.' When I heard you knocked up that sweet piece of vampire... well, I just wanted to see for myself you were okay. People take note of that sort of thing. You're in unknown territory so be careful.\" \n\n\"Thanks. I really mean it, Jethry.\" \n\n\"Ah, pishaw,\" his old friend dismissed. \"You'll do fine.\" \n\n*** \n\nTwo days later, when his urine and blood tests finally satisfied Dr. Chang, Chris was released. \n\nThe first thing he did was head down to the warehouse to visit the construction site. He was like a giddy child waiting to see what was inside his present. Hailey had hinted the day before that the progress was impressive. \n\nShe wasn't wrong. The bucket loader and pile of crushed rock were gone completely. There was also a half-used pallet of bagged plaster mix by the stairwell. He took the stairs three at a time, almost barrelling into Stephen at the bottom who was muttering and scratching his head over the complex installation manual for the security door system. There were brackets, packets of bolts, rivets, and all sorts of pre-built wiring scattered around him. \n\n\"Chris! Just who I wanted to see,\" the big werebison bellowed, wrapping him in a huge hug. Chris was a bit surprised at the contact and didn't commit to the embrace. \"Don't A-frame me, dude. We hug like men in this family.\" \n\n\"Okay,\" Chris laughed, infected by his friend's obvious good mood. They embraced more firmly for a few seconds. It was sort of nice. \n\n\"I'm glad you're back on your feet,\" Stephen said as he abandoned his frustrating job and beckoned Chris to follow him inside. They had to step around the two thick slabs of steel, doors yet to be installed, that were resting up against the wall. \"I've been holding off on a few of the spells until you got back, we're running a bit low on juice.\" \n\nChris' eyebrows rose in astonishment as they entered the foyer, even more so when he saw the kitchen and living room. Gone were the dark, bare walls, the dusty floors, and the featureless spaces. Surfaces which were to stay bare rock were polished and sealed, corners rounded down, and cracks filled. Ceilings and walls were mostly plastered where they required it. The kitchen floor had been tiled beautifully and the huge living-room was littered with thick rolls of underlay, ready to be installed. Light fittings hung from Stephen's high, fake rafters. They were bare wood, elegantly tapered toward the centre of the room to give the illusion of a peaked roof above them. Chris had to admit that touch helped make it seem like a real house. He was astounded they'd gotten all this done in little over a week. \n\n\"Come on, you haven't even seen your room yet,\" Stephen ran his hand along the bare rock walls, pausing briefly at each of the doorways to utility rooms or storage closets. With a craftsman's eye, he evaluated the rock for flaws, cracks, and moisture. \"The terrible trio have been over the stonework with a fine-toothed comb. We've sucked the last of the ground moisture out with a spell and sealed it.\" \n\n\"This is amazing. You've done the plumbing, too?\" Chris wondered as he looked into the main bathroom, seeing it tiled and multiple shower heads protruding from the wall and ceiling. The entire far third of the room was a sunken area with steps leading down into it, a hot pool fit for a small harem. \n\n\"Some,\" the werebison said. \"There's still a lot to be done in the en-suites.\" \n\n\"Woah,\" Chris whispered when they finally got to his own room. The room itself wasn't anything special, a modest to large bedroom. The ceiling had been plastered and lights installed but the floor and walls were still bare and there was no furniture. \n\nHe knew that the plans had included an en-suite and a small walk-in wardrobe but what seized his attention as soon as he got in the room was the inlaid rock carving of three dragons guarding a yawning, low, silver archway. Whether entwined in battle or lust he wasn't sure, but the craftsmanship was astonishing. \n\nHe moved closer to run his hand over the incredibly intricate artwork of troughs and ridges. A bubbling joyous laugh rose in his throat as he realised there were tiny flecks of silver, red, and purple impregnated in the dark ochre stone. Taking a step back, he examined the work again. A red and silver dragon on either side of the archway, the purple twined around them from behind the portal, his wings partially covering them. To be honest he looked a bit handsy, a paw possessively on each female's hip. Their three graceful necks met at the top of the low archway, reaching upward together in a silent roar of triumph. It was stunning. \n\n\"Holy shit,\" Chris turned to Stephen, lost for words. \n\n\"I know, the boys stayed late for an entire week. They didn't let me in here until two days ago. Trust me, you haven't seen the half of it.\" \n\nChris reached forward curiously and touched the shimmering substance inside the arch. It parted, revealing a pitch-black corridor. It was low and narrow, but Chris was more interested in the hair-thin silver strands running through his fingers. It shimmered and bent easily, marvellously cool and incredibly attuned to his magical senses. There was an enchantment there. He brought his hand nearer, pulling the strands into the light for examination. He could barely see them, even with his excellent eyesight, but there were tiny chain links there. \n\n\"Mithril,\" he whispered in awe. \"How did...\" \n\n\"Don't look at me. Just go in there,\" Stephen smiled and produced a long, thin candle from the back pocket of his cargo pants. \"Take this.\" \n\nChris concentrated for a moment with the wick between his finger and thumb. It was much harder for him to use fire magic, but he'd gotten a lot better under Arvil and Immi's tutelage. This was a relatively simple feat and a flame soon sprang into life, greedy for wax. \n\nHolding the candle before him, he reverently parted the mithril screen and ducked to enter the passage way. Stephen gave him a few moments and quietly followed behind. ",
        "He had to stoop for perhaps four metres, passing intricately carved filigree, some of which looked to be painted. He touched it in passing, feeling the cool, ridged stone under his fingertips. The candle only provided soft, weak illumination of what lay beyond, but he still sank slowly to his knees in wonder. \n\nThe flickering light licked the domed walls and ceiling, revealing an immense, incredibly detailed mural covering every surface. He didn't notice that his knees weren't protesting the hard stone, cushioned as they were by several layers of woven reed mat. His eyes raced around the beautiful, flowing scenes which traversed the inside of the igloo-like structure. \n\nRugged, snow covered peaks, rich woodlands full of wildlife and game. A stream which wound around this section of the room on a journey of transformation. Trickle to rush to torrent to majestic foothill meandering. It ended as a great river surrounded by lush farmland, flowing gently into a white-capped turquoise sea. That wasn't even close to half of it. It was all so masterfully created and lifelike. He shuffled trancelike to the sloping wall, reaching to touch the velveted antler of a proud buck. The goblins had worked their magic with stone there too, the scene was really a painted, shallow sculpture. \n\nStephan stepped quietly to the side of the entrance, still a little hunched over near the sloping walls. He found the little button disguised as the gleaming, dark eye of a raccoon gorging himself on berries. \n\nAt the peak of the dome, a field of stars and the crescent moon twinkled into existence, shedding soft light across the scene. Tiny light globes, inlaid into the rock itself. \n\nChris turned and looked back, seeing that in the mural, they had entered through a yawning cave mouth. On the other side of the entrance to the plump raccoon, a small village of huts prospered. Little green-grey figures went about their business, mothers chasing children, men with picks over their shoulders looking like they were headed toward the cave for a day's work. \n\nTears rose unbidden in his eyes as the rest of the peculiar room finally drew his attention. An open fireplace was skillfully set in the wall to look like a campfire in an icy tundra scene. Two little wooden cubby holes disguised as log-ends could house a few necessities. The huge, rounded futon-style mattress in the centre of the space underneath the twinkling night sky, spoke to him of comfortable, lazy days spent resting. There was even a huge mound of fluffy bedding piled up against the far wall. The strange little room radiated safety and tranquillity to his dragon. Finally, he understood its purpose, a stunning nesting chamber for his two pregnant mates. \n\n\"Beautiful, isn't it,\" Stephan affirmed. \"I couldn't believe my eyes when they showed me. Apparently one of their wives was bragging to someone back home in Europe about her husband who worked for 'that dragon' and how he brought home filled crystals every night. Word got to their queen somehow and she got a hold of the trio and ordered them to make you a gift befitting a dragon.\" \n\n\"It's...\" \n\n\"I know what you mean. Goblin magic, their artwork and engineering surpass even the dwarves in some instances. They've even thought to put a hidden compartment in the floor under the bed, for your hoard apparently.\" \n\n\"They've thought of everything!\" Chris laughed, wiping a little moisture from his eyes. \n\n\"Indeed they have. The other raccoon's eye turns the sun on for a bit more light and the fireplace piggybacks into the exhaust system. We've done a tricky bit of enchanting, so it shouldn't get sooty. You're used to hauling heavy things down here, so wood shouldn't be a problem if you want to light it,\" the older man smiled proudly. \"Oh, and they sent back to the homeland for that mithril lace with specific instructions. It will try to strangle anyone who forces entry or has dishonourable intentions apparently. Wouldn't want to test it personally, wickedly strong stuff.\" \n\n\"This is fantastic,\" Chris shook his head in wonder. \"Where are the beautiful little bastards? I'm not sure if I should keep it a surprise or run screaming to Petra and Claire right now.\" \n\n\"Up to you. Personally, I would go for the surprise reveal, let them experience the same wonder you just did. The boys are probably waiting outside to see what you think of it.\" \n\nChris swept his eyes around the room a final time before ducking back into low corridor. Sure enough, the three goblin brothers were waiting but what disturbed Chris was that they'd all taken a knee and bowed their heads in obvious reverence. \n\n\"Our Queen, Glea, sends her best wishes to you and your mates,\" Yurt spoke in his strong accent. Most surprising was that a whole sentence from the mohawked little man didn't contain a single curse word. \n\n\"Come here you little punks!\" Chris held his arms wide and charged, sweeping them into a hug as they scrambled up to get away. He squeezed them into a wriggling, yelping ball of goblin until the curses started flowing again. \"Thank you so much. I don't know what I can do to repay your kindness.\" \n\n\"Oi! Fuck'n' letting us down would be a start ya oversized skink,\" Belthelas wheezed. \n\n\"E's broken me damn ribs, he has,\" Gruff chorused. \n\n\"I mean it guys, it's perfect,\" Chris relented, releasing the goblins but ruffling Yurt's spiky hair affectionately. \"If there's ever something I can do for you in return, I'll do my best to help. Also, please thank your queen for my mates and I.\" \n\n\"Yeah, well, every dragon needs a good grotto,\" Belthelas scuffed the floor with his boot and continued. \"Figured you was too much a berk to know that so we'd fix it ourselves, seeing as ya been letting us nick off home with them crystals.\" \n\n\"Well, thank you. It's amazing craftsmanship.\" \n\n\"S'only magic.\" \n\n\"Well, it means a lot to me,\" Chris looked back at the carved entrance, conveying so much more meaning now that he knew the interior and its purpose. \"Why don't you show me the rest of what you've been up, then I'll have to organize some sort of bonus for you miscreants.\" \n\n\"Right you are, Chief,\" they chorused back at him. \n\n*** \n\nThe dragon and his brood went out for dinner and drinks that evening to celebrate his recovery. His mates looked stunning, dressed and made up for a night of fun. Chris whispered his appreciation to each of them throughout the night when he got a chance. \n\nMichelle was there, orbiting the edge of their little solar system as always. Kat and Pamela lurked a little further out, eyes open for trouble. Michelle had a sternness to the set of her face which told him she was worrying about something work related. He wondered if it had something to do with the private conversation she'd hinted at but so far avoided. He resolved to ask her tomorrow and went back to watching approvingly as Hailey was gradually integrated into their group. \n\nThey were back at The Cauldron, it was a quiet weeknight and Rufus had given them his booth again. The vampire made an embarrassing show of proclaiming them the saviours of the entire establishment to the hushed onlookers. Afterwards, some of the patrons came and introduced themselves, thanking all of them for acting so bravely during the crisis. Chris felt like a fake, accepting praise for something he thought was at least partially his own fault. \n\nThe music this evening was much more relaxed, featuring a lot of slower classics from the sixties and seventies. The dancefloor beckoned and Claire invited him to join her. Neither of them really knew how you were supposed to move to such music so they ended up simply swaying in a close embrace for a few songs. As he returned his mate to their group, Reyla made a surprise entry. \n\nIt was clear who in the room was a Being as heads turned and nodded subdued acknowledgement to the stunning, dark skinned woman who glided through them. She made it look effortless, so poised, haughty, and graceful. She wore an almost skin-tight grey gown with practiced ease, long legs peeking from deep slits as she floated in on tall white heels. \n\nChris hadn't seen her human guise before. Her skin was slightly browner, eyes less slanted and cheekbones less pronounced. Her long, sensitive ears were shrunk down to size and her figure was fuller. She still had that slightly alien grace about her and her white hair and grey eyes were striking and unnervingly, the same shade as her dress and shoes. Perhaps she could pass as a human, but she would never look normal. \n\nShe made a beeline toward their party, two bodyguards of her own tagging along behind. \n\n\"Good evening, Lady Narlakis,\" Chris smiled at her politely. \n\n\"Yes, I'm sure it is,\" the elf swept her eyes over his slightly nervous brood as they stood to greet her, wondering how on earth or below, one male could... Even for a dragon it was getting excessive. Of course, it all made sense now, but her theory still shocked her to the core. \"Please Chris, call me Reyla. Could I trouble you for a dance?\" \n\nChris didn't know what to say, eyeing the beautiful elf suspiciously. His eyes were automatically drawn to her narrow waist and rounded hips. He wanted to say yes, but knew she was up to something. \n\n\"Of course, you can,\" Susan saved her son from appearing rude, appearing at his side and nudging him forward. \n\n\"Sorry,\" Chris offered Reyla his hand and led her apprehensively toward the few other couples who were up and dancing. \"I was just a little surprised to see you. Do you ah... come here often?\" \n\n\"Every now and then,\" she replied vaguely. \n\nThere was an awkward pause when they finally faced each other. Chris felt his hands hovering, unsure where on her body to place them. Over the elf's shoulder, he could see Lillian laughing with Rufus about his discomfort. Reyla seemed to have no such hesitation, reaching up to wrap her arms around his neck, pulling their bodies close. His hands fell to her shapely hips as she boldly twined her fingers into his blond hair and began a gentle swaying of her lithe body. \n\nChris relaxed, letting himself listen and move to the music with her. Her piercing grey eyes never left him, spearing deep into his soul. She was mumbling something under her breath, her lips moving ever so slightly. Too late, he felt the magic she'd been gathering so stealthily snap out and grip them both in an iron-hard blackness. \n\n\"Tell me you know!\" her voice echoed strangely in the darkness, all sounds of the club, of music absent. She tasted hot, like a runaway temper with a glowing interior of fear and uncertainty. \n\n\"What? Reyla what's going on?\" He tried letting go of her, but his body was unresponsive, still moving gently to a rhythm he could no longer hear. He could sense her blocking him somehow, engaging him mind-to-mind in a way that left him nigh powerless against her. His body moved to the tug of her will, but his awareness was trapped and isolated, alone in a dark, silent place. It made him want to scream in anger. \n\n\"Tell me it's all been some prank. Please, dragon, tell me you know something. You have a plan?\" \n\n\"I... Let me go! I don't know what you're talking about. This is wrong, get out of my head!\" \n\n\"I can't, it's too important. Show me the memories of your encounter with that strange presence.\" \n\nChris felt his mind move to follow her command, traveling back to that afternoon nap that had added another mystery to his life. His anger rose. She was inside him. He struggled mightily, battering blindly at the darkness surrounding him and roaring his impotent rage. \n\n\"Don't struggle, it will only delay what must be done,\" she spoke. \"I do not relish this task, but I must experience what you felt, and we must do it quietly. I have felt the whisperings of the Eye of Ivinos passing over my city for days now. House Lefayd is watching us. I must know if my hunch is correct.\" \n\n\"House Lefayd?\" The name sounded familiar somehow, in a bad way. \n\n\"Yes, the same house implicated in your parent's deaths. Now, shut up and show me those memories. I am not trying to harm you but it's important! If the Eye is here, this is the only way I can guarantee our privacy.\" \n\n\"If I do, will you explain yourself and let me go?\" he asked angrily. \n\n\"Yes.\" \n\n\"Fine, but I am furious you would do this to me, Reyla. I could take you any number of places in the blink of an eye for a private conversation, but you decide to use this dark magic on me for what, convenience?\" \n\n\"For safety,\" she hissed in his head. \"You know nothing of the dangers you face or how I have sacrificed to shield you, you ungrateful little whelp. My own sister calls me a dragon-collared bitch behind my back and my standing amongst my fellow rulers is nigh ruined by your undermining, intentional or not!\" \n\nThat shut him up. How much of it was true, he didn't know, but Reyla had done right by him so far. Perhaps he should trust her now, if she thought it was so vital. He allowed the memories to come to him and relaxed, focusing on reliving them rather than fighting her influence. \n\nHe remembered the presence's probing touches as he first slipped into the Ether. He'd been exhausted that day after multiple feats of magic. It had felt so good to slip into the refreshing stream of Ether, become surrounded and supported, nourished. Then it had come, softly at first, just a shiver up his spine. He hadn't known anything was truly wrong until that mighty thing grasped him, encircled him, and read him like a book. It was nothing like what Reyla did to him now, this was a twisted sharing of thoughts. That had been an exposition of everything he was, down to the atomic level, a knowing that left his sense of self tattered and strewn about like the toys in a toddler's room. \n\nIt was horrible to re-live, even in memory. To feel so helpless and insignificant in the face of such power, to know your life, your dreams meant nothing to a creature such as that. \n\nReyla recoiled, panting hard, sweat beading on her brow and upper lip. A shiver of dread ran up her spine as she recovered, it was a wonder the young dragon's mind hadn't melted into a gibbering mess. She released her spell and watched him slowly regain his awareness and control of his body. He stiffened, eyes narrowing. His handsome lips began to pull apart, about to protest. \n\n\"Stay silent,\" she warned in his head, still connected by her fingers twined against his scalp and his hands on her hips. \"It is as I feared, you've been touched by one of the Old Gods, a Devine or one of their masters, a benevolent one I dearly hope. Worse, you cannot tell me why they are toying with us once again.\" \n\n\"The Old... What?\" he thought back tersely. \n\n\"I will explain, just keep up the pretence of dancing,\" she thought, running her hands gently through his hair and smiling warmly up at him. \"To think, I hold one such as you in my arms right now. I don't know if I should be terrified or jubilant. Terrified, I think.\" \n\n\"Reyla, explain. Please!\" he begged. \n\n\"I have been puzzling your remarkably strong magic and unusual powers for some time now, Chris. At first I was jaded, thinking your abilities an oddity, a balancing of the universe. If dragons were so rare, it seemed right that a powerful new male might emerge and begin to set the scales straight. Then you apparently stumbled into a nest of treachery by accident and we were forced to concede this Revelation. Too much coincidence!\" \n\n\"Yes, but what does that have to do with some ancient gods? Why have I heard so little of them before?\" \n\n\"I'm getting to that. You grew beyond a simple dragon with your full transformation, though I didn't see it then. Still, my feeling of unease only increased. It was then, I think, that my white elf cousins began taking a true interest in you. I began researching your abilities quietly, especially your seemingly undrainable well of magic. Did you know that there was an unexplained magical spike recorded around the approximate time of your conception? There are also obscure references to individuals who might have shared your powers throughout the ages but nothing concrete, at least that I have access to. When the agents of House Lefayd began showing up in my territory I knew I was onto something with my subtle investigation. I've even begun receiving all sorts of invitations to share knowledge about your unusual circumstances. Nothing more came of it and things were beginning to settle down these last months. I admit, I got distracted trying to keep my territory from falling apart. Then you knocked up my vampire.\" \n\n\"She's not yours,\" Chris growled back. \n\n\"Yes, yes, keep her,\" Reyla brushed his protest aside. \"This afternoon I was sitting in my library, thinking over your account of the memories you just gave me when the answer came to me. That presence could have been a Devine. Our legends say that long ago, this planet was a battleground, fought over as part of some endless war against dark forces. They began modifying the existing inhabitants with magic, importing new ones from other worlds to fight.\" \n\n\"I've heard a little of the story, Lillian tried to scare Annabel with it once. What are they though? Are they truly gods?\" \n\n\"No one knows. There are no accounts of ever seeing one of those old gods and no one from that time is still living. Still, their powers were so incomprehensible to us that we worshiped them, chose sides and fought for them. When you said your entity had seemed so powerful that you were almost nothing to it, a fly or an irksome gnat, it clicked. So, I decided I had to relive the experience through your eyes to make sure. Your description did not do it justice. I know of no Being on this earth who could have done that to you, not I or anyone else. Therefore, I fear something has stirred those incredibly powerful entities to take interest in our world again, in you.\" \n\n\"This doesn't make any sense. I'll admit that whatever it was that invaded my mind may as well have been a god but what are they?\" Chris asked silently but paused, a frown creasing his brow. \"Oh no, it did show me images of my conception, some sort of ritual... it didn't make much sense at the time.\" \n\n\"You see!\" Reyla's excited thoughts spilled into him. \"It's exactly as I pieced it together. The problem is that nobody truly knows anything about them, if they ever did. They came to us and war followed them across the void. We called their enemy demons, but that word has been so bastardised by human culture that we cannot trust the description. We do know that after years of bloodshed, our side, led by the elves, constructed a huge barrier to cut off the world from the rifts that allowed the warring gods to travel as they pleased. We were left here to live with the primitive humans of the time and the abandoned servants of the dark gods. Thousands of years later, we are the languishing remnants.\" \n\n\"That's it?!\" \n\n\"I have done well to make that connection,\" her haughty tone came through clearly enough in mind to mind contact. \"I think it is our best explanation to your vast power and ability to breed with a vampire. You must have a seed of their creative magic inside you... and you've been planting it in any fertile soil you can find.\" \n\n\"That's crazy, there has to be more information. You can't just drop that on me and leave it at that!\" \n\n\"So little lore survived from those early years, almost forgotten legend is all I have to go on. I'm sorry, dragon. I don't think Lefayd has made the same connection to you yet, but we need to prepare for when they do. They are already moving to insert their influence into your life. Now that you have made a child with Lillian, there is little I can do to stop them. It's too much of an oddity to block them from investigating a vampire pregnancy. If they suspect the source of your power as I do, they would stop at nothing to have you for their own. I laugh to think how they must regret agreeing to sign you over to work with the humans. It must have seemed like such a humiliating punishment at the time but now it prevents them from manipulating the Synod to give you over to them.\" ",
        "\"They would do that? Why do they care so much?\" \n\nReyla cocked a perfect white eyebrow at him in surprise. Did he truly not see it? \n\n\"Dragon, you are possibly the most promising magical resource I have seen for centuries. Anyone who harnessed your power would have a huge economic, political, and even military advantage should things turn that way. Your efforts with your mates at selling energy crystals has already made an enormous impact on the local economy, my territory is once again exporting high-magic products as it hasn't in several hundred years. With Lillian, you have released a new flood of speculation regarding the power of your children. As your ruling lady, I've already received several outlandish offers for stud fees.\" \n\n\"Oh, okay,\" he blushed. \"What about this Eye... of Ivinos?\" \n\n\"It is a most advanced scrying artefact and one of House Lefayd's greatest weapons. It can allow the users to see and freely track anywhere without the specific targeting required in most scrying spells. It also creates only a very subtle ripple to detect but can see through most simple scrying blocks. There are unconfirmed reports that it can also be used to listen in, which is why we speak through mind touch.\" \n\n\"That sounds very nefarious, useful though. I wish you hadn't taken such a firm hand with your magic though, just... I don't know. Trust me, Reyla.\" \n\n\"It is difficult for me,\" she admitted, a genuine smile revealing perfect teeth. \"I apologise for bullying my way in, I am... old habits are hard to break but I will endeavour to work on it.\" \n\n\"Good... And they've been targeting me for the last week?\" Chris chuckled mentally, thinking back to what they must have witnessed during his time in hospital. Nothing too incriminating, if it shipped with an X rating. \n\n\"Yes, almost as soon as word spread of Lillian's pregnancy. It must cost Lefayd dearly to divert the eye from their other interests, I doubt they'll keep it up for much longer unless you perform some other impossibility. Be cautious, they are snakes. It was Lefayd who killed your father, that much is almost common knowledge, but they claim your father killed one of their own without proof of wrongdoing. I'm working on a way to shrug off their vision but it's... Oh, Lillian's coming.\" \n\nChris glanced over his shoulder, his beautiful vampire was indeed homing in on them. \n\n\"Chris. Say nothing of this to anyone yet. I... I know I am... prickly and my temper gets the better of me sometimes.\" \n\n\"Most times,\" Chris couldn't help himself. \n\n\"Perhaps. What I am trying to say that I want you to trust me, to be your friend. You are a troublesome young creature to have in my territory, but you are important, and I would miss you if something terrible happened. I will not see you harmed or hindered while you choose to bless my realm with your magic.\" \n\nChris was trying to formulate a reply when Lillian arrived. \n\n\"Well, well, well,\" Lillian put a firm hand on his shoulder and sneered down at the disguised elf. \"Aren't we nice and cozy over here? I'm afraid you can't claim him all evening, Reyla. You see there's this exclusive club I joined recently, excellent benefits, but we're very protective of our club president here.\" \n\n\"That's fine. Thank you for the dance, Chris, it was illuminating.\" \n\nTo his surprise, Reyla gave him a cheeky wink, a hip bump, and a little smile as their bodies separated. \n\n\"Ah, thanks. We should talk sometime about how I might help with that situation?\" \n\n\"Yes, perhaps,\" she scowled at him and flicked her eyes upward in an attempt to warn him off any further talk. Honestly, did he think that after what she'd just told him and the lengths she'd gone to, a meeting between the two of them would be unmonitored? So young. Still, he was offering help, which could prove invaluable if she could gather the courage to harness him. \n\nShe watched as Lillian, in a very flattering black dress, led him back toward their little club. They all greeted him with such open love and adoration on their faces. He radiated it right back at them, soaking them in waves of magic and affection. What must it be like to be part of that? \n\n\"What was that all about?\" Lillian asked. \"You were just staring at each other for almost four songs.\" \n\nChris shook his head and took a sip of the beer Annabel had ordered for him to try. \n\n\"Why can't I just come here and relax one time without something crazy happening?\" \n\n*** \n\nLight from the bathroom spilled into the dark bedroom and across his supine body. He lay on the bed, pondering all Reyla had said and what it meant. He was naked, his huge body exposed and partly illuminated. It felt good to relax but in the back of his mind lurked a niggly question. Were there dozens of pale elves watching him right now as he stared up at the ceiling? \n\nAnother bout of hushed giggling reached his ears. They were up to something in there. His cock twitched at the thought, eager to go investigate. The two had retreated to the bathroom some time ago, forbidding him entry. \n\nThey came to him in white. It was like a fantasy he'd never known come true. It was conceived, imagined, and fulfilled in a pounding heartbeat as they ran hand in hand to pounce onto the bed. Faces lightly made up, white teeth flashing behind happy smiles, and hair flowing freely behind, they came. Annabel wore a veil and the thought of marrying his beautiful mate set his blood pulsing to where it was about to be needed most. \n\nImmi surged ahead with an excited shriek, reaching him first with a flap of her blue wings. Her chest heaving as she knelt at his side, eying his thickening manhood reverently. \n\n\"I've been good...\" her eyes sparkled pleadingly as her little fingers played with a new lacy, white collar around her neck. \"Please, Master?\" \n\nChris was silenced, his eyes darting back and forth between the sprite and his beautiful Annabel. Where had the snowy stockings come from? Let alone the matching garters of white mesh and lace. There was something incredible about the way the little belts sat on the slimmest part of their tummies. Thin straps connected the decorated lacy bands at the top of their stocking, the thickest, lushest section of their supple thighs. The white looked so good against their contrasting blue and pale skin. The little collars at their throats were an incredible finishing touch, it spoke of ownership and submission. \n\n\"Speechless?\" Annabel teased as she crawled slowly up across the bed, her little, bare nipples tingling, tightening in excitement. She took position to the side of her small blue lover, stroking a calming hand down the quivering sprite princess's spine. They turned their heads to each other as if by some unspoken cue and shared a soft, cock-hardening kiss. \n\n\"Aren't you supposed to wear panties with a getup like that?\" Chris wondered, noting Annabel's tuft of soft brown pubic hair, framed perfectly by the exquisite bridal lingerie. She wore an extra ribbon above her garter that Immi lacked, it was bowed perfectly over her belly button and Bartholomew was prancing proudly around it. \n\n\"They get in the way,\" Immi's practicality could not be denied. She wasn't wearing any either and her puffy little clam was visibly glistening as she squirmed. \n\n\"Indeed, they do, my Immianthe,\" Chris chuckled, reaching to touch her masterfully crafted miniature stockings. \"I love the veil, Annabel. What did I do to deserve this treat?\" \n\n\"Thank you, babe. It suits the theme, doesn't it?\" \n\n\"Yes, you look stunning. I wish you didn't want to wait until spring to marry.\" \n\n\"I appreciate the enthusiasm, but we're married in heart at least,\" she smiled and tugged worriedly at the delicate veil perched in her flowing chestnut tresses. \"To answer your question though, Lillian has been... well...\" \n\n\"Fang face has been teasing us, so we did something about it!\" Immi crowed proudly in her high-pitched voice. \n\n\"Immi, Bartholomew, and I have a surprise for you,\" Annabel pre-empted his questioning look. Smirking, she elicited a quiet gasp from him as she began teasing her nails up and down his powerful thighs, delightfully close to his thick, swelling cock. \"Lillian's been going on and on about how she can handle your whole cock inside her.\" \n\n\"She doesn't shut up,\" Immi complained. \"Always boasting she's the only one who gives you the relief you need, the one you don't hold back with.\" \n\n\"You know she's just teasing you, don't you, Immi?\" he smiled warmly at the completely uninhibited sprite. \n\n\"Yes...\" she admitted reluctantly. \"It's true though, isn't it? You can fit all the way inside her?\" \n\n\"Yes, but that doesn't...\" \n\n\"Now you can fit in Mistress too! When I'm big you'll fit in me as well!\" \n\n\"What?\" Chris looked to Annabel to translate Immi's excited ranting. \n\nAnnabel giggled down at him, moving to stroke his now throbbing cock. The huge spear of manhood rose proudly above his defined stomach, already dripping slippery pre-come. His testes looked tight and full, she couldn't wait to milk them dry with the help of their little enchantment. She teased his flared crown gently with her fingertips before releasing him and flopping backwards onto the bed with a cheeky smile. \n\n\"Hmmm. Why don't you come find out?\" She teased, raising her legs slowly open, beckoning him to her torrid, forest-capped womanhood. \n\n\"Yes! Yes!\" Immi squeaked, tugging his finger with obvious enthusiasm. \n\nChris growled playfully, their teasing sparking a heady passion for his delightful mates. He threw little Immi onto Annabel's soft tummy, his massive body rising above them. \n\nHe was going to waste no time fucking these little minxes into quivering, magic overload. \n\nImmi un-sprawled herself on Annabel's garter belt, gasping with excitement and tugging to release the bow around her Mistress' slim waist. It was a race against time to complete the little ceremony she'd imagined as her Master slapped his enormous cock down onto Annabel's gooey slit and ground into her. \n\n\"Unnhh,\" Annabel moaned lustily as her swollen clit thrummed under his heavy member. \"We wanted to...ahhh!.. to be like a dragoness for you.\" \n\n\"So we altered your spell,\" Immi added, still tugging at the reluctant ribbon. \n\nBartholomew raced beneath the sprite, all over Annabel's stomach. Elated to have participated, he left a tingling warm trail across her skin. She felt Immi triumph over the bow and release the ribbon to slither down onto the bedding. The sprite turned herself over onto her back, mimicking Annabel's position, their heads were almost side by side. Her hand snaked down to hold her swollen blue labia open, displaying her tiny, pink, glistening sex for the dragon. \n\n\"It might be hard to wait, Master, but I neeeeeed my favourite. I used a lot of magic helping change her. I get your first climax, as much as you can give me, then you can have Mistress all night. Promise me?\" \n\nChris still wasn't sure exactly what the stocking clad temptresses were up to, but he had a strong suspicion. They looked so hot, so wanton, Immi laid out on Annabel's stomach, both their pussies ripe and ready for him. Immi's greedy little bargain intrigued his dragon though. Even if her eyes were bigger than her womb could pay the check for. \n\n\"Are you sure you can handle that Immi?\" he teased. He took his vein-mottled cock in hand and moved the tip upwards to Immi's comically small womanhood, nudging and teasing against her inflamed, throbbing sex. \"I don't want to see any magic go to waste, you're still so small.\" \n\n\"I'll use it all,\" Immi promised, hunching her shapely hips into him so that their sexes meshed in the promise of things to come, her tiny vagina spread over his cum-slit. \"I need to grow big and strong.\" \n\n\"She's been very patient and well behaved,\" Annabel confirmed, running a finger over the sprite's supple, flexible tummy. \"You still owe her from that night at the club. She helped keep us safe.\" \n\n\"Yes, I agree. Okay, I promise.\" \n\n\"Ohh, thank you, Master! I promise I'll be a good girl for you and Mistress.\" \n\nChris sighed happily as Annabel reached over Immi's stomach to help apply the sprite's sweet, almond scented juice over his massive knob. The spreading warmth of the sprite's cream ensured he would be pumping both mates full of load after load without flagging. It also increased his sensitivity. He found he couldn't hold back when Immi's potentially addictive juices were in play. Annabel loved to have his cock slathered in them before he entered her. \n\nEven now, he was already throbbing, eager to blow. A shot of slippery pre-come splattered Immi's stomach as she writhed against him. He reared backward and aligned himself, parting Annabel's dew-covered labia with practiced caution. \n\nShe liked to have a few moments with just his crown inside, he was so big, so thick that she still struggled with his initial penetration. They set to a tiny, teasing, rocking motion, his enormous crown stretching her inner lips thin as he popped in and out of her. Finally, his penis throbbing and coated with their combined lubricant, she cooed her approval. Her slender hands pulled him into her, playing gently over the powerful muscles of his lower back and shapely butt. \n\nHe sighed, slipping slowly deeper into Annabel's hot, snug channel. \n\nHis First looked up at him with loving eyes, mouth gaping cutely as he hunched deeper and deeper with little thrusts. His enormous cock was welcomed home with thick, glistening, pussy-butter. It streaked his girth white and shiny, easing the way to her molten core. \n\nHe was barely holding on, his sensitivity was through the roof thanks to the small blue woman who now writhed above his entombed phallus. The ecstatic sprite frigged herself joyously in anticipation and Annabel helped with larger fingers in between coos and sighs of her own. \n\n\"God, you're so fucking big, but I love it!\" Annabel shuddered suddenly, reaching a sharp climax on about two thirds of his length. \n\n\"Come for me, Dee, my little white bride,\" he whispered harshly, struggling not to succumb himself. \"Come all over my big cock. Milk me for Immi.\" \n\n\"Yes, Mistress, please!\" Immi cried, three small fingers buried in her steaming quim. \n\nChris held still with herculean effort, letting her body spasm around him. He pinned her white-stocking thighs up to her sides and squeezed his eyes shut, begging not to cum yet. He pushed a little deeper and felt her quavering cervix kiss his throbbing tip. He bumped slightly deeper, testing his suspicion. \n\n\"The ribbon...\" he groaned in astonished pleasure. \n\nShe gave way before his mighty erection, her once human body transformed into a dragoness's reproductive anatomy. They both cried out in pleasure as his apple-like head stretched her pliant cervix. Like Claire and Petra before, she now had a ring of strong, sensitive, pink tissue. \n\nHe slipped into her dragon's womb in a rush, the final third of god-touched cock finding a stifling, tight home. \n\nTheir eyes exchanged love and wonderment, his thick head tickling the back of her uterus. Cum was already rising, his groin tensing for a huge release. A dragon's roar of triumphant satisfaction wrenched from his lungs. How could he resist? This was Annabel, but she felt like one of his dragonesses. This was exactly where he was supposed to plant his vital seed. \n\n\"Please, Master! You promised!\" Immi wailed, watching his huge body quiver, his hips hunch. He was gathering a deliciously huge pool of magic in his loins, but her enchantment had worked too well, he'd forgotten all about her. \n\nHis first, huge spurt of sticky cum splattered point blank into Annabel's uterine wall with astonishing force. Her whole body tensed in surprise, unsure about the unusual sensations being translated to her brain by this new part of her. Then, the sizzling magic in his spend raced up her nerves and set her body on fire. \n\nWith a tortured groan, he pulled his massive length out of his fianc\u00e9's gripping womanhood and levered it down onto her belly. \n\nAnnabel was left shuddering and quaking as Immi squealed, his cock firing another torrent up across their bodies. It grazed Annabel's flushed cheek, leaving a tiny white streak behind, and crashed into the wooden headboard with a loud splat. A third rope shot straight onto Immi's sculpted blue butt as they jostled into position, his rampant head searching for her tiny opening. His pungent seed now clung to her sex, stocking, and pooled onto Annabel's lacy garter and heaving tummy. \n\nFinally, Immi hunched herself down directly onto his dilated slit and held on for dear life as his fourth hit the bullseye. She had half a moment to relax, imagining what it would be like when he finally fucked her, before his pearly, thick jism rushed up her channel with the force of a flash flood. \n\nMagic, the likes of which she wouldn't have imagined before meeting him, rushed into her like a river. She didn't have a pesky cervix to get in the way, so his virile, magic-laden semen rushed from her vagina straight into her unusual womb. An orgasm crashed down on her, breaking her consciousness into a thousand shards of satisfaction. She screamed, her sharp voice going hoarse in moments as he infused her soul with his magic and love. Over and over, a never-ending barrage of his potent, treasure-like seed. \n\nOnly her greedy, hungry instinct let her hold on, wedging his bucking cock into her reluctant, slippery slit. Her pliant tummy began to expand, her womb full and stretching, attempting to hold as much sperm as it could to spawn a healthy clutch of spritelings. She hadn't made her hundreds of thousands of eggs yet but that didn't matter. Iron devotion and determination let her hold relatively still, enduring his roaring magic and her own release as he erupted endlessly into her. \n\n\"Master!\" she whimpered reproachfully, trying not to squirm away from his gigantic, jetting penis. \n\n\"Good girl, Immi,\" the dragon panted. \"Hold on, just a little more now.\" \n\nHe watched through pleasure-slitted eyelids as Immi's tummy swelled, his shaft and abdomen shuddering rhythmically. It wasn't all going inside the optimistic little sprite, she lay in a spreading white pool on Annabel's skin. He watched her shudder, her lithe, stocking-clad calves wrapped around the ridge of his knob to help hold on. Her blue, soon-to-be three-foot body shook as she cried out in twinned rapture and protest with each of his forceful pulses. It wasn't as satisfying as being inside a woman, and he couldn't wait to get back into Annabel's womb, but he loved Immi dearly and this was her favourite treat. \n\nImmi told herself that this was the time, this time she would take all of him. Even as her elastic tissues began to protest the huge bulge of her cum-swollen womb, she battled to hold on, hoping he was almost finished. Master came so much these days. Even with her growing size, she couldn't keep up. \n\n\"This time,\" she whimpered softly, even as Annabel's warm hand cradled her enormous tummy and pulled her gently, insistently away from the dragon's fearsome, spitting monster. \n\n\"I'm sorry, my little sweetness,\" Mistress cooed in her ear even as Master's cock spat more scalding seed across their skin. \"You're going to hurt yourself.\" \n\n\"Nooo,\" she protested weakly, rolling onto her side to cradle her swollen tummy. \"I need it all.\" \n\n\"Bartholomew will have the rest, we couldn't have done it without him,\" Annabel whispered, dragging the reluctant sprite up to lie at her side, face to face. \"Thank you, Immi, I can tell he loves our little present.\" \n\n\"Yes, I do,\" Chris leaned down to kiss them both, his unflagging cock dribbling its last across Annabel's tummy. Already the little tattoo dragon was absorbing the magic-heavy cocktail. \"You are constantly keeping me on my toes, my kinky little princess. I love you.\" "
    ],
    "authorname": "ltpc",
    "tags": [
        "fantasy",
        "non-human",
        "dragon",
        "magic",
        "romance",
        "incest",
        "harem",
        "vampire",
        "elf"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/endangered-ch-09"
}