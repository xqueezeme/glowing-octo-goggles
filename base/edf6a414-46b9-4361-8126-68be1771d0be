{
    "title": "Monster",
    "pages": [
        "I've been asked for Monster and Ex's story from SHAMELESS. Monster and Ex aren't your typical couple \u2013 this is their background story \u2013 with both points of view. \n\n***** \n\nIt was early evening when I arrived at the crappy little house, a three bedroom shithole with half the siding off and a sagging front porch. I could hear children crying, and a muffled, but loud voice yelling as I walked past three Harleys toward the front porch of the battered place. As I walked across dead grass and weeds, two oversize men \u2013 one with a wild head of shaggy dark hair and a matching full beard, the other bald as a cue ball - in \"Purple Pranksterz Motorcycle Club\" jean vests stood up to block the torn screen door. \n\nShaggy spoke \"Gotta wait, man, Cooler is straightening out his old lady.\" \n\nHe was a big guy, and for a moment, I wondered if he was actually one of those big teddy bear types where the gruff exterior hid a kind heart. The small black \"1%\" patch on the front of his vest spoke otherwise. Cueball moved up beside him, looking bored. \n\nI dropped my eyes and looked down at my feet for a second. The voice from inside the house grew louder and clearer: \"I'll teach your fucking brat to mouth off to me!\" \n\nA child's wail grew louder. \n\nAt that, I raised my head, locking eyes with Shaggy and letting him see the destroyed side of my face. He paled for a second, then shifted his feet into a serious defensive posture; somebody, my oldest boy probably, must have been telling tales. \n\nI kept my mask up and put on my friendly voice \"Sorry big guy, she may be his old lady, but those are my children.\" \n\nIt was Cueball's fault \u2013 Shaggy looked like he wanted to at least talk for a second, maybe even come to an agreement. On his forearm he had a Ranger Regiment tattoo \u2013 maybe I could find some common ground, maybe negotiate. Cueball, though, he had to throw that chance away. Cueball was on my right; he didn't see the ragged, ruined skin, the permanent, twisted, half-grin and the cloud-filled left eye. He lunged, grabbing for my shirt. \n\n\"We toldya to fukkin wait, Asshole!\" \n\nI prayed for patience, but was granted none. As usual. Not that I expected any. I hadn't had any prayers answered for a long time. \n\nNobody was out there for me anymore. \n\nThe moment his hand touched me, I pinned his wrist to my chest with my left hand, twisted, pulled, and stomped. He was curled up on the ground, unconscious before Shaggy could react. When his reaction did come, it was far too slow. I tried not to do him any permanent damage \u2013 I really did think he was hoping to be reasonable, and from the look on his face he could sense how it was going to end; but he just had to try out of a sense of obligation. \n\nAnd I knew all about obligations. They're all I have left. \n\nI stepped over his unconscious body and pulled the screen door open. \n\nCooler \u2013 aka Brian \u2013 had his back to me with his fist raised threateningly. Anne, my ex-wife, with one eye swelling shut and a bleeding split lip, was standing defiantly between him and the three children. With a bit of pride I noticed my oldest son, Patrick, who was 7, had pushed the 4 year old twins, Danni and Finn, behind him. Whichever of the younger ones had been wailing stopped at my entrance. Anne was thinner after two years, a little too thin. She wore no makeup and her hair looked stringy, just tied back out of the way, a sharp difference from the carefully cared for look I remembered. All in all, she looked like hell. \n\nAnne's unswollen eye widened as she saw me. While the children had seen the scars and damage to my face when my brother had brought them out, I'd simply refused to see or talk to her again after the injury. Part of that was to buy time. She had known me too well. So she got the full effect of seeing me, right along with the shock of my disfigured face. I knew what I looked like, with the ruined face and the deeply ingrained tan of years under a tropical sun. \n\nI looked, more or less, like what I really was. \n\nAlthough nobody would want to believe that. \n\n\"Cooler\" noticed her shock and spared a glance over his shoulder at me. We'd never met, but I could see sick realization wash over him. I closed with him as he turned around and I hammered him to the ground \u2013 like most big guys he assumed being taller, heavier, and smellier was some kind of advantage. Which it could have been if any of them had any real training. \n\nOnce he was down, I looked at Anne \u2013 and decided to deviate from my original plan of just taking the children. She'd been taking the beating defending the children, so maybe she wasn't a complete loss. \n\n\"Get your ass, and the children, in the car. Now.\" I'd kept the mask up. With any luck, all she saw was an angry ex-husband. \n\nIf she argued, she could stay. \n\nShe chose to go. \n\nAs she stepped forward I stopped her with a raised hand. She tried, but failed, not to stare with horrid fascination at the ruined side of my face. \n\n\"Give me the vest.\" \n\nShe was wearing cut off jean shorts, a blood speckled white tank top and boots \u2013 and a miniature jean vest with a Pranksterz logo on the back with a patch that said \"This Bitch is property of the Pranksterz MC. If Lost, Return to Cooler\". Still unable to take her eyes off me, she pulled it off and thrust it at me like it was scalding. The children smiled at me as she herded them past. \n\nI hit Brian again, hard enough to keep him down for a few minutes, then dragged Cueball and Shaggy into the house and dropped all three of them on the ratty couch. As I went out and dragged them in, I could see that Anne was sitting in the passenger seat of my car, trying to calmly talk to the children. She was now desperately avoiding eye contact with me. The children, on the other hand, appeared to be enjoying the whole event. There was obviously no love lost between them and 'Cooler'. I'd brought zip strips and secured their hands carefully. \n\nIt took a few minutes, but all three of my guests woke up. I concentrated on keeping the mask up. When they were fully awake, I stood and very deliberately snapped the little finger on Brian's right hand, just to make sure I had their attention, then walked over and stood in front of them. \n\n\"She's out. You have nothing to do with her or the children anymore. You see them coming down the street, you go another direction. I see, hear of, or smell any of your pack anywhere near her or the children it's all over. If that happens, there is no stopping it. Anyone with Pranksterz affiliation disappears forever.\" \n\nBrian glared at me, with tears of pain in his eyes, still not fully understanding his predicament. \"She left you, you ain't her husband anymore.\" \n\nGood. They were buying the \"vengeful husband\" act. \n\nI nodded. \"She shouldn't be my fucking problem. But those are my children and they need their mother. She's still acting like it. Hell, you should appreciate that; if she hadn't stopped you from hitting them, you'd be dead already.\" \n\nOn my right, Cueball shook his head \"You gotta buy her out. Bitches get gangbanged in and bought out.\" He said it like \"Bitch\" was some kind of title. \n\nI finally turned so he could get the full effect. And grinned \u2013 I knew the effect that had. \n\n\"Sure, Cueball, how many broken bones will that be? Let's start with fingers.\" \n\nHe turned an interesting shade of green. \n\nThey didn't negotiate that hard; Hell, they must have had at least 20 unbroken fingers between them before they agreed to my terms. I burned her vest in front of them. \n\nWe had a nice long talk. Long for them. \n\nI grabbed an expensive pair of Oakley sunglasses off a wobbly end table as I walked out and Brian actually tried to object, albeit weakly. \n\n\"Hey, take the cunt, but those are mine.\" \n\nI stopped and looked at him. \"Sorry 'Cooler' \u2013 do these guys know you got the nickname because you repaired air conditioning in the Army? \u2013 I'm taking them for Anne to wear. I don't want anyone to think I'm the kind of little shit that would hit a woman. I'll send them back to you in the mail or something.\" \n\nI paused again at the door and looked back. \"I don't know if she's using, but just in case: anyone who sells her anything \u2013 grass, pills... fucking aspirin, whatever \u2013 will deal with me. Then I come for you. No warnings, no negotiation. Spread the word.\" \n\nAs I walked back to the car, I reviewed everything. That had been the longest conversation I'd had with anyone in months. It looked solid, the mask had never slipped. They thought I was human. \n\nI sat down in the driver's seat of the car, handed Anne the sunglasses and headed out to the highway. Anne said nothing, she just put on the sunglasses and stared wretchedly at her feet. I listened to the children talk, but, relieved of the stress, all three of them fell asleep within a few minutes. Anne didn't even ask where we were headed, apparently just silently soaking in her own misery for the next two hours. She was holding her own arms, hunched over, seemingly trying to hide the old bruises on them. That made me a little concerned, so when she wasn't watching I looked over her arms as best I could. There were no needle tracks, so at least she hadn't fallen that far. \n\nShe'd left me over two years before \u2013 I was gone too often, too many late night calls and departures. Training all the time to be the best. \n\nI was the best. Everybody has a role on the team. I wasn't Control. Or Demo. Or the team Sniper. I was the best at point blank work. The close combat specialist. On many teams they'd call me the Tank, an echo of the games so many of us grew up with. \n\nBut on my team we had a different name. A name for the thing that left no survivors. \n\nMonster. \n\nAnne had tried. I could see that now, but I was never home, and even when I was, my head was somewhere else. We tried counseling, but I was what I was. So after nine years of marriage, she filed. She could have waited six months and had half my Army pension, but she didn't want to be \"that wife\". She'd been faithful the whole time. It wasn't about some other guy, it was about us not working. She'd even tried to minimize child support. The state had a formula for that, so she couldn't do much. She picked up the children and moved back to our hometown. The Army would likely move me in the next few years anyway, so I could hardly argue about that. Besides, to be perfectly honest, while I'd loved them, they hadn't been my priority. \n\nSometime after we'd parted ways, she'd met Brian. A great guy who planned to open his own Harley Davidson shop. \n\nThat never happened. And it turned out he was more interested in running his own little version of Hell's Angels. Sort of a start-up OMC. Sooner or later, one of the bigger OMCs would notice them and either absorb them or smash them, but it hadn't happened yet. \n\nDespite his promises, they'd never gotten married. \n\nI'd managed to get myself shot and blown up about a year ago; spend enough time in combat and the law of averages will eventually find you. While the majority of the damage was cosmetic, the combination of nerve damage and lost vision put paid to my career in the Army. I figured the real reason for my discharge was the scarring on my brain; they weren't exactly sure what it meant and weren't taking chances. So after hospitalization, therapy and transition, I was out. \n\nAnd that was wise of them. I knew more than they did \u2013 when I woke, my emotions about nearly everything were gone \u2013 no anger, sorrow, nothing. At first I thought I was still in \"trigger mode\", that place an operator goes mentally to suppress emotion, rely on reflex and training, and survive. But it wouldn't turn off. \n\nEmpathy for nearly everyone and everything had evaporated. I couldn't identify with them at all. Only my children seemed to bring out any feelings. Compared to the dead grey space all around me, the children were spotlight of color. I don't know if it's love, but it's what I have. \n\nThey were my obligations. \n\nI'd had to invent \"the mask\", the pretend \"me\" I wore in public. Because if they ever figured out what was left of me, somebody would realize how dangerous it was. \n\nI still had the training and reflexes they'd pounded into me. But little in the way of any human restraint. Basically a bundle of combat reflexes. But little else. \n\nNobody realizes how dependent humans are on emotions. How much humans use them to interact with others. Human faces reflect them constantly. I had to constantly try to figure out what a real human would do. How to hold my face. Until I perfected the mask, the doctors all thought I had residual nerve damage. I was lucky that the psychs used tests centered on family \u2013 my children \u2013 to gauge emotion response. \n\nBut I was out. With no direction, no goals and no meaning. Except my children. My obligations. \n\nTwo months ago, my child support payments had gotten screwed up when I went from active duty to medically retired, and I had had to wire money to Anne's account to make sure she got it on time. When I tried to contact her directly to get a receipt, I'd ended up talking with her grandmother instead and gotten an earful of the hell my children had been sucked in to, and how it had spiraled into freefall the last 8 months. I made a few phone calls and learned about \"'Cooler'. I considered legal action, but it didn't sound like there was time for that option. \n\nIn any case I'd always been an ambush predator. Even before. \n\nIn looking for the isolation necessary to protect my secret, I'd taken a job as a history teacher at a community college about two hours away. \n\nNobody pays attention to a history teacher at a technical college. \n\nI bought a three bedroom cabin with a mostly finished basement on the edge of a state forest. The cabin had been built on the walkout basement of a much larger house that had burned down, and the owner had all but finished the basement with several rooms before he had a heart attack at his desk at work. My brother had taken care of the details while I finished out-processing the Army. I stayed away from him as much as I could, though. He'd known me too well before. \n\nThat house gave me options now. I had decided that the boys could share one bedroom and Danni would have another for the first couple of nights, and when I got the huge basement repainted, everyone could essentially have their own room and there'd be an extra kitchen, big pantry, workshop and TV room as well. I'd initially planned on just scooping the children up and leaving Anne where she chose to be, but when it happened I realized I couldn't leave their mother, because it would send the wrong message to the children. They would want me to take her to safety. They wouldn't know her odds were better with Cooler. \n\nIrony. \n\nI can still appreciate irony. \n\nI wasn't sure how long I was going to let Anne \"stay\", but the children were going to have a stable, safe life. I had obligations. \n\nAfter we got to the cabin, I showed the boys where their room would be, and then showed Danni where her and \"Momma\" would be. Anne kind of hung back, but encouraged the children to settle in. That done, I announced I was going to get pizza and groceries and left them to look around. I stopped at Walmart, picked up some clothes for all of them - I knew the children' sizes, but had to guess at Anne's; I knew what her sizes used to be, but she'd lost more weight than she could really afford. I also picked up the aforementioned groceries and pizza. \n\nThe pizza was gone in minutes, and Anne got the children cleaned up and ready for bed. She wasn't meeting my gaze, and seemed to be fighting an urge to cringe whenever I walked too close. \n\nShe still hadn't said anything directly to me, she'd just returned to the table after putting the children to bed, and found that I'd already cleaned up the pizza boxes and put away the other groceries. She might have been waiting for the other shoe to drop. I decided to leave it \u2013 I really hadn't planned on bringing her here, and I wasn't sure how much leeway her protection of the children had bought her. It was a variable I hadn't calculated. At least dealing with her for a long term wasn't. She knew me too well for the mask to hold for long. And if she couldn't accept what was behind the mask, I would have limited options. None of them good for her. \n\nI needed time to assess the options. \n\nI pointed at the bathroom. \n\n\"You can have that one. I'm headed down to shower in the basement.\" \n\nShe opened her mouth to say something, but it was obvious she had no idea what. I just headed down the stairs. By the time I got cleaned up and went back up to the main floor, she'd finished and was in Danni's room. \n\nEven with my emotional distance, there had been a chance that seeing Anne would open up a lot of old wounds, but I'd felt nothing. No anger no sadness; she just seemed like a stranger. I could logically remember everything that happened, but the emotional impact of what had happened was simply gone. Not faded, not repressed; just gone. I knew that I had had feelings of anger and loss, but they were gone now. I couldn't even remember what anger felt like. \n\nThe next day was a Saturday, and I figured there was a lot to do before I started preparing for the semester on Monday. I'd already pulled the paint sprayer and cans of paint out of the barn storage room before anyone else woke up. I also had an adjustment to make on the car. \n\nThe boys came out quietly and were drinking tea and waiting patiently for their bacon and hash browns before Danni and Anne came out of their room, blinking sleep out of their eyes, \n\nFinn, the younger of the two boys, and Danni's twin grinned. Anne and Danni's \"pajamas\" \u2013 loose shorts and T-shirts that I'd picked up for them to sleep in \u2013 matched. I was sure I hadn't done it on purpose, but they were both wearing pink shorts and oversize T-shirts with big grey; kitten faces on them. And both of them had the hair on the left side of their head standing almost straight up. Both Patrick and Finn began laughing, much to Anne's confusion. I just reached up and lightly patted the left side of my hair. Anne slowly reached up and felt the mess of her hair realized what was going on and dashed into the bathroom with Danni. \n\nIt was several minutes later when they came out, with their hair fixed and Danni giggling. I'd already put plates of bacon and hash browns down at their places at the table. I watched everyone as we ate \u2013 the children seemed to be less the worse for wear than I'd expected, and they were eating like starving wolverines. Anne, on the other hand, was still avoiding my eyes and acting cowed. She did eat though, and took over clearing the table and doing dishes before I could do anything. \n\nAfter the dietrus from breakfast was cleared and everyone had changed, I sent the children outside. I motioned Anne over to the kitchen counter. She walked over like a condemned woman and waited for me to speak. \n\nI pulled out my extra debit card, car keys and a piece of paper. \n\n\"I'm writing the PIN on this paper, take the children and go school clothes shopping. School here starts Thursday for them, so you will have to get them registered on Monday \u2013 I'll be stuck at the college all day, but I'll take the truck and leave you the car. Get yourself stuff to wear too. There's about two thousand in that account. I need to finish painting the basement \u2013 it should take about six hours \u2013 about four hours to tape and dropcloth everything, an hour to paint with the sprayer and the rest to clean up, so take your time, take the children to lunch or whatever. The basement should be livable by tomorrow evening, and the children can each have their own room. \" \n\nShe looked numbly at the card and keys while I wrote the PIN on the paper. She finally spoke. \n\n\"So why did you take me too? You could have left me. After... everything, you might have thought that was a better idea.\" Sadly. ",
        "\"I wasn't planning on bringing you out of there. But you were protecting them. And children need a mom. Since you were still acting like it in there, it seemed like the logical choice. For now.\" \n\n\"What if... what if they say I have to come back?\" \n\n\"They won't, you're out. For good. They wouldn't take you back if you showed up on the front step naked with 10 kilos of coke. We have a deal\" \n\nShe looked pensive. \"What kind of deal.\" \n\n\"it's a simple one: They never have anything to do with you or the children again, and in return I don't exterminate everyone wearing purple for 100 mile radius.\" \n\nShe already looked sick and off balance but I decided put the rest of the cards on the table. I had to let her think she had options, otherwise she'd play along for time. \"I need to make some things clear. I don't own you, and I don't want to. If you decide to run by yourself, I won't come after you. I'll even leave the debit active, but won't put any more money into that account once you run, so once it is gone, it's gone. If you take the children, though, I will follow you to hell and back \u2013 I intend to watch over them until they can make their own decisions from now on. You really, really won't like it if I have to come after you to retrieve the children. You can stay here until they all graduate, and all I will ever ask you to do is to help take care of them. This is solely in the interest of protecting them. According to studies, children from a stable home with two parents are happier and more likely to be successful.\" \n\n\"This part is important. You need to know the truth.\" \n\nI dropped the mask. And from her expression, she could see the change, but she didn't run. Good. Maybe she'd survive this after all. \n\nI could use help to maintain the mask. \n\n\"After this happened\" I pointed at the scarring on the side of my head \"I've lost nearly all capacity for emotion. I have no feelings about you at all, good or bad, except concern for what you've put the children through. Your decision making for the last year or so has been... less than optimal.\" \n\nI paused as she considered the meaning of that. Now to give her the choice. \n\n\"The only real emotions I seem to have at all now are ones directly connected to my children. I will not tolerate anything that negatively impacts their life. I could use help taking care of them.\" \n\nThat was a lot to take in and I could see her pondering her options. \n\nShe made her choices rather more quickly than expected. \n\nShaking her head \"I don't have anywhere else to go. My parents... they don't want anything to do with me.\" \n\nAt the time she may not have realized how close she was to death. I had a handgun \u2013 a piece of shit Glock. Unlovely things, Glocks, all the feeling and warmth of a staple gun. Brutally functional though. Like me. \n\nI'd taken it from Brian. Trapped scared people look toward what they believe is salvation. In his case a much abused Glock 19 in the television stand drawer. I'd made sure his prints and blood DNA were on it. Just in case. I couldn't afford for her to leave with my secret. \n\nBest to change the subject. \n\n\"We apparently do have to get one of your tattoos removed. According to the 'negotiators' yesterday, it is mandatory when a woman leaves their social club for any reason. Removal is customarily done with a belt sander, but unless you have your heart set on that, I think we can just get laser removal.\" \n\nShe paled and her hand shot down to her pubic mound. The tattoo, according to my negotiation discussion, was a small Purple Pranksterz emblem located about an inch above the vagina, overlaid with the number of guys involved in \"ganging\" the woman in. Apparently, according to Cueball, in Anne's case, the number was 15. She started to visibly shrink in on herself as she realized I probably knew all about the meaning of the tattoo. \n\nI held my hand up. \"We can set it up with a respectable tattoo parlor in town, there are a couple, including a really pleasant-looking one at the mall. Or maybe they can hide it under different kind of tattoo if you want, I really don't care. Either way it is likely to be somewhat painful, but a lot less trouble than if somebody finds out you still have it now that you are out.\" \n\nThe conversation died out a bit after that and she headed out with my three children. I reminded her to wear the sunglasses until she found some to buy \u2013 her black eye was a glorious purple and yellow blossom over a third of her face now. The day went more or less as planned, with the repainting and clean up complete on time. \n\nI waited to see if she would run. \n\nShe wouldn't get far. The gas gauge was rigged \u2013 she'd get less than 40 miles before it ran dry - and the lo-jack would tell me where she was. \n\nAll I would need was a starting point. \n\nThe car pulled up not long after I finished and the children spilled out bubbling with excitement over all their new 'stuff'. It seemed to take forever to unload the clothes, books and other necessities from the car, but a light supper was soon fixed, eaten and cleaned up. The children insisted on showing me their school clothes and other sundry items before heading off to bed. \n\nAnne seemed a bit down and unhappy, but tried to keep a cheerful face on for the children until she put them to bed. I was sitting paging through a book in one of the two big wingback chairs by the fireplace when she plopped herself down in the other. She all but had a black cloud hanging over her head \u2013 I vaguely remembered that as sure sign she had something she needed to talk about, but really didn't want to. I considered letting her sit there without saying anything, but decided that asking would be a good way to gauge how she was adjusting. \n\n\"Something wrong?\" \n\nShe went off, although it wasn't aimed at me. \"EVERYTHING is WRONG. I was stopped twice by police to see if I needed 'assistance getting out of a bad situation' because of my black eye!\" \n\n\"They were doing their job and trying to help.\" \n\n\"Sure, but where were they YESTERDAY? Or two weeks ago when I had my last black eye? Or four months ago? Or a FUCKING YEAR AGO? Just because I was part of that club, everybody was okay with me being hurt? But today, while I am wearing regular \"Mom\" clothes everyone wants to help!\" \n\nI didn't say anything \u2013 I was sure this wasn't over. \n\n\"Then I went to the tattoo place in the mall and basically the girl there told me I would have to get permission to get it removed \u2013 like somebody owns me!\" \n\nWhich was pretty much what the tattoo meant, but here was no reason to really point that out, she already knew it. \n\n\"Then the little bitch tells me that, even with permission, she won't touch me without a broad panel STD test from a clinic!\" \n\nI thought that was probably a pretty good idea. There was no telling what she could have picked up. \n\nI let her stew for minute. \"The Tattoo artist is making sure her place doesn't get burned down in retaliation. As to the... tests, I'll try to put you on my family health plan at the school. I can tell them it was part of the divorce agreement, as long as I pay for it they won't care. The children are still on my military plan.\" \n\nFor a second, just a second, she looked at me with disbelief and a hint of anger. \n\nThe answer was that a woman who had had a 15 man gangbang and has been loaned out like a library book for the last couple years should probably be tested anyway. But that seemed to be self-evident, so I sat silent. In any case, a few seconds later, she obviously came to that rather logical conclusion herself without my prompting. \n\nShe actually blushed \u2013 a capability I was dimly surprised she had maintained - and looked down at the ground for a second. \"I... I could probably use a checkup anyway. I haven't seen a doctor in a while.\" \n\nThe next few days were busy as the children started school and Anne slipped in a Doctor's appointment - she didn't tell me anything, but since the results netted her a six week course of antibiotics, there obviously was a problem. We also moved the children into their separate rooms downstairs, adjacent to what I thought of as the TV room, but which Anne referred to as the family room. Anne, surprisingly, kept the room upstairs. \n\nTwo weeks after I brought them to the house, I got an email message from the guy I called Shaggy; I'd left a note with a cut-out email address and told them to box Anne and the children' stuff up and I would let them know where I would meet them to pick it up. Shaggy's real nickname was \"Bear\", and from the email, his real name was Ed MacManus, of all things. And Cueball's given nickname appears to be \"Wrench\". I designated a truck stop on the edge of their little town. It was only a few boxes, so I took the pickup truck. Not being an idiot, I arrived early and made sure I had favorable ground. I needn't have concerned myself, Bear made sure everything was loaded as trouble free as possible. \n\nBefore he left he talked to me a bit. \"Everything I know about is in there \u2013 a lot of her stuff is gone \u2013 Cooler probably sold it a long time ago, so it's mostly the kid's stuff. \" He paused \"I also had a call from a woman who said she was a tattoo artist and was asked to remove a club tattoo. She described Anne, so I told her to go ahead. As far as I can tell, we're done, but if something comes up, email, I'd rather avoid personal visits.\" \n\nHe paused for a long moment. \n\n\"Cooler's still really pissed. Probably doesn't mean anything, he's scared shitless of you. But I thought I'd mention it. The rest of us don't want anything to do with you. At all.\" \n\nI nodded. \"We should be done, if it weren't for the children, we'd never have met.\" \n\nI gave him \"Cooler's\" sunglasses back, then we parted company carefully. \n\nThe boxes were actually carefully packed, and there was a note from one of the other women in the club. \n\nI shouldn't have bothered returning the sunglasses. Brian died in a not-too-tragic one-vehicle crash a couple weeks later. After I'd received an anonymous email detailing Brian's traveling schedule and route. It could have been a trap, but I had the sense that Bear wasn't stupid enough to risk that. \n\nBear took over the club. \n\nThe children, as children do, adjusted quite well; Patrick told Anne that the children and teachers treated him better at the new school. She did the mental math and figured out why, which resulted in her crying in the bathroom for almost an hour after the children went to bed. \n\nAnne and I fell into the habit of talking by the fireplace after the children were asleep for the night. It was essentially a planning meeting, originally focused entirely on making sure the children were taken care of. Anne eventually tentatively initiated some small talk about harmless subjects; I went along with it to maintain a veneer of civility. But it never went beyond that. It proved I was incapable of developing any emotional bond beyond those to my children. Anne recognized fairly quickly that it wasn't an act. \n\nAbout six months after I moved them to the house, Anne left a medical report on my nightstand stating that she was clear of any STDs, including HIV. That night, she silently came into my bedroom and slipped into bed with me. It wasn't love in any sense, just sex, a release of tension; she slipped back out to her bedroom. But apparently that was enough. Three times a week, Anne returned. Every week. \n\nA couple months later, she came to me with a proposal. \n\n\"The children are old enough to think our living arrangement is a bit odd. If I move into your bedroom, we can maintain the fiction of a normal relationship until they graduate college. I'm not trying anything here \u2013 I know how you feel. Or rather how you don't feel about me. I'm not under any schoolgirl illusions. I know what you are. I'm here until the children graduate.\" \n\nI agreed \u2013 it certainly simplified everyday life. Everything indicates she was in for the long haul. \n\nMy lack of interest in building a personal life at the college was assumed to be because of my \"family man\" status. She attended every social event and played the perfect wife. \n\nShe became part of the mask. \n\nShe also asked if she could take courses. She eventually earned her RN \u2013 then her RPN, and began working at a small health clinic. Run by women for women. \n\nShe also studied psychology with a passion. I knew why she was doing it, of course, but saw no reason to stop her. \n\nAt the house we coordinated every day, made plans, solved problems and forged on. \n\nTime passed \u2013 we cooperated on every level. We made a perfect team. The children had no idea what was going on, just as we planned. It was easy to act. We went on vacation together, even purchasing a small vacation house in the islands for yearly visits. \n\nThe Colonel and Top from my old unit were there, Top even had a bar, The Shack. They'd known the Monster side of me pretty well, and hadn't really seen me outside of 'work', so they had a hard time seeing through the mask. \n\nOn reflection it was easy to see why Anne and I worked well together. She was, at best, \"damaged goods\" with no faith in humanity, including herself. Fortunately for her, I wasn't really human anymore. \n\nI really hadn't made plans past the last graduation \u2013 I figured Anne would move on and try to salvage what she could of her life. She'd kept her end of the bargain and supported the children with everything she had. And kept my secret. But a year before Danni graduated college, she announced her engagement to an earnest young law student. \n\nThree weeks later Anne came up to me after dinner, carrying a bundle of folders and handed them to me. \n\nThere were at least a dozen studies on the importance of grandparents to the success of grandchildren. \n\nAnother gleam of light in that grey void. \n\nObligations. \n\nIt appeared we would be maintaining our fiction for quite a bit longer. \n\nAnne Speaks \n\nI live every day on the edge of a precipice. Don't feel sorry for me, I don't feel sorry for myself. \n\nBy most standards it's not a bad life. I live in a nice house, I have three beautiful children and I have grandchildren on the way. I'm treated well. We even have a little vacation home in the islands. \n\nI've chosen to live here and it's probably best for everyone. Maybe even for me. \n\nBut I live one step from oblivion. I think it's a long step, but I can't be sure. \n\nI live with my ex-husband and the whole world sees us as a happy loving couple. \n\nBut while we may be a couple \u2013 whatever that means \u2013 we aren't married, and there is no love. At least from his end. I try not to anthropomorphize him, but it's hard not to pretend to myself that he's still human in some sense. Even when I know that, whatever he is, he isn't really human anymore at all. \n\nAt night, when I am sure he is asleep, I occasionally whisper \"I love you\" and pretend he whispers back. \n\nSometimes I think that by helping him, I'm just maintaining a shrine to the last man I'd ever love. \n\nHe is, at least as far as I can tell, an unusual type of sociopath. I've taken classes, attended lectures and read every piece of literature I can get my hands on. With one glaring exception, he has little or no emotion and no empathy. The exception is our children. And, I am sure, the grandchildren. He pretends to have emotion and empathy, pretends to be human. But I know the truth. He doesn't have impulse control issues, and he has no driving desire to torture. But he has no emotional reason not to. \n\nI didn't make him this way \u2013 it isn't some trauma or fall out from my stupid decision. \n\nHe was severely injured in an explosion \u2013 fragments hit his brain just the right way. Erasing his humanity. Just spectacularly bad luck. \n\nMy stupidity is why we aren't actually husband and wife. \n\nI divorced him over a year before he was injured, to chase a stupid illusion. \n\nI could go on and try justify myself \u2013 but it would all be meaningless shit. Just emotional masturbation. The reality is the same old boring tale, nothing original about it. One minute I was young and in love, the next I found I was a mom with three children and a husband in the Army who just didn't seem to be headed in the same direction anymore. He never had time for us. \n\nCounseling doesn't always work, even if you love each other. \n\nThat's how it starts and next thing you know, you're divorced, and you've dragged your children into a shit life with a shit boyfriend who beats the shit out of you on a semi-regular basis. \n\nThe Asshole \u2013 Brian, also called \"Cooler\" \u2013 had been in the Army, but had gotten out, and seemed to have a plan. He seemed great at first. But it turned out Brian was a president of a motorcycle club, one of the ones deemed OMCs. Which meant I had to be in the club, too. Like many gangs, the initiation for women is pretty misogynistic, and not exactly voluntary. I was drugged at a club meeting and screwed by every guy there. I don't remember much of it \u2013 just flashes. But the next morning I found my mound shaved and where the hair had been was a Purple Pranksterz emblem with the number \"15\" blazoned over the top. \n\nI'm pretty sure that by that point, Brian stopped seeing me as a girlfriend, and started to see me as a commodity. I fought it, but lost more than I won. I was used as an incentive with all that implies. When I deliberately let myself look haggard and quit trying to look pretty, he found other uses for me. \n\nSometimes I was used as a mule to carry meth and heroin. \n\nWomen come with such convenient stowage compartments. \n\nI was lucky I didn't end up in prison. \n\nAt least I think I was. \n\nThings had gotten way out of hand and I was trying to figure out how to get away \u2013 or at least get my children away. Brian was resenting them more and more. None of my family was talking to me anymore, except my grandmother, and she was in a nursing home. I just didn't have anywhere to go where they wouldn't drag me back. \n\nPeople use the word \"desperate\" way too often. As if you can be \"desperate\" for a piece of chocolate. \n\nI know what it really means. \n\nI don't know what started that last fight; I came out of the kitchen and found Brian looming over Patrick. When I pushed between them, Brian punched me twice, screaming about Patrick talking back to him. I could only see white flashes out of my right eye, and had a mouth full of blood from a split lip. But there was no way I was going to let him beat my son. From the look in Brian's eyes, I was going to be hurt bad. Really, really bad. \n\nThen the door opened behind him and my husband walked in. \n\nYes, I still think of him that way \u2013 I've never married anyone else and don't want to. So the title is still his by default. \n\nMy mind exploded with suppressed princess fantasies. He was here to save me! He'd rescue us, carry me out to the carriage and we'd ride off into the Happily Ever After! \n\nThen he turned his head. \n\nMy heart froze in mid-leap. Half his face was a horrible insanely grinning mockery of humanity; a devil's face. A smoke filled eye, a leering smile, the skin a relief map of pain \u2013 just runnels and crevices on an angry red canvas. \n\nHe'd refused to see me, so, although, I'd known he'd been injured, this wasn't what I pictured. I thought Patrick had exaggerated. Kids do that. I don't know what I was expecting; maybe a limp and one pristine dramatic scar down the side of his face, like in the movies. \n\nMy stomach lurched. \n\nBrian saw the expression on my face and turned to face him. He didn't stand a chance. He was down before I could even really register what happened. The Thing that had been my husband moved with a machine-like precision, no wasted effort at all. \n\nInstead of an emotional \"I Love You!\" I was ordered to get my ass and the children in the car. It was pretty damn clear that while my ass was optional, the children were not. His voice was flat and emotionless. He stopped me to demand my club vest and I handed it to him as fast as I could. I had to step over Bear and Wrench on the way out. They hadn't fared any better than Brian. I watched him drag them inside. He was in there for 15 minutes before he came out. Something made me watch for flames as we drove away. ",
        "I don't know whether I was disappointed or relieved that there were none But I suspected it had been a very long 15 minutes for Brian. \n\nHe didn't talk to me at all in the car. Which was probably for the best. I cringed in my seat and decided to see what he had planned. He'd always been fair and I just knew he loved me. \n\nThe next day I barely began to understand what I had already sensed. He made it very clear \u2013 he was completely up front about what he was. But it's really hard to grasp that someone you loved was gone, even when they sit in front of you and tell you. \n\nIt was only later I realized that if I had reacted wrong, it would have been my last day on earth. He made it very clear that his only interest in me was concern for the well-being of the children. And if I had been a threat to him watching over them, then I would have been a threat to them. \n\nI don't think I really, fully accepted that my husband was truly gone for months. Only the \"father\" slice of him was left. When I did accept it, I mourned for the guy I'd met in high school and loved for years. But he was gone and I had to face this new reality. \n\nI couldn't have my husband back; he was dead. And this new \"man\" didn't \u2013 couldn't \u2013 love me. But I could be a partner in raising his children. So I chose to be a full partner. \n\nOn the day I had the last laser removal treatment for the tattoo, I left a copy of my STD and HIV test results on his night stand. I visited his bed that night. Even without the emotion, there was still physical relief for both of us. I doubt if he cared about the tattoo, but I hoped he'd see the symbology of me sleeping with him after the tattoo removal. I realized I wasn't building any emotional bonds, but I hoped I was removing doubt about my commitment to our project. I wouldn't risk the illusion we were building over an office affair, by either of us. I suspect if the illusion collapsed, I would simply disappear. \n\nI eventually convinced him to let me move into his room. And that lowered the chances he would seek physical relief with one of those damn co-eds running around in their short skirts. I'd already been used in every possible way, so I had no qualms about anything he would want and made sure he knew it. Still, he had no interest in degrading me or playing power games with sex, so it became more of a form of pleasant exercise than anything else. Like aerobics with a few orgasms thrown in. \n\nI do avoid eye contact though. Its not the scars, it's the eyes. \n\nEspecially the clear one. \n\nI took RN classes after ensuring he was okay with it \u2013 and used my electives to look into his condition. That led to an RPN with an emphasis on psychology. And for the first time, I really, really, looked at what he had been \u2013 he no longer felt the need to shield me, so he handed over his service records with no hesitation. What I found was pretty terrifying. \n\nHe'd been on hostile fire pay for nearly our entire married life. Honest to God, I had no idea that HFP wasn't a normal part of every soldier's paycheck. He had far more medals than normal for his rank \u2013 most of them combat - and the write-ups were nearly all redacted. His tours in \"Kuwait\" were to units that didn't actually seem to exist. \n\nHe told me a little more when I asked. Not details about missions. What he was, what he did. \n\nHis nickname had been \"Monster\" \u2013 I'd heard it, but never realized what it meant. Now I knew. His injury hadn't really changed what he was, it had simply stripped the veneer of humanity away. The human part of him had been killed by that shrapnel. All that was left was the highly trained, very experienced Monster. No remorse, no regret. \n\nThe irony of it all is that people meet him and try to do the right thing. Look past the scarred demon face to see the real him. \n\nBut the demon face is the real him. The humanity is a mask. If you cross him, threaten the children, you'll find out. \n\nHe really is the Thing in the closet. \n\nOr under the bed. \n\nOpen and close that medicine cabinet. \n\nI dare you. \n\nThere are some benefits. Gangs surged around the clinic I worked at, and a young mother was raped and beaten, I mentioned it to him. Just conversationally. There was a sudden and unexplained rush of young men admitted to the local hospitals, severely beaten. None of them was able to identify their attacker. I heard they were too terrified to talk. Some died, the rest were crippled. A house or two burned down. And the problem went away. \n\nI knew what was likely to happen when I told him about the attack; that neighborhood was too close to the children' school. \n\nAnd wondered if that made me a monster too. \n\nThree men attempted to rob us one night when we were walking down the riverfront to a restaurant. We dumped the bodies into the river and never discussed it again. \n\nHe's not the only monster out there, but lesser monsters would do well to avoid him. \n\nThere have been others. I'm not even sure how many anymore. I've been there for some. \n\nI'll admit I have a little fascination with watching him \"work\". It's not like the movies at all. No fancy kicks, no flurries of punches and blocks, and it never lasts very long. Just a heartbeat or two. There's an elegant, relentless, simplicity. \n\nAnd despite how twisted it sounds, I'm drawn to him more then than any other time. I can even look into his eyes. \n\nMaybe I'm the only Monster here. He is what he is; a finely honed sword with no conscience. But I've pointed that weapon knowingly. If it helps, I've been very, very selective. \n\nMostly. \n\nAnd I always try to find other solutions to problems before he deals with them. And he allows me to do that. \n\nMostly. \n\nI do my best to help him maintain his mask. It's important for everyone. \n\nIn many ways, he's the perfect \"husband\"; he provides well, he is supportive of my career, he's great with children, never forgets to take out the trash or mow the lawn. He even helps with laundry. Despite my worries, I am certain he'd never stray, no matter how enticing a piece of ass gets dangled in front of him. He takes me to dinner twice a week, and even brings flowers home. He can even cook. Because that is the mask he wears. Like most sociopaths, he can be charming and engaging when he chooses. You'd most likely never know. But I do. \n\nI know, that if there ever comes a day when he sees me as a threat \u2013 or even just of no value to his offspring \u2013 that's the day I stop breathing. \n\nBut as I said, don't feel sorry for me. \n\nWe have grandchildren on the way. \n\n***** \n\nPost Production Note: I've never decided whether I feel sorry for Ex (Anne) or not. She made some bad decisions that negatively impacted her children, but she tried to do the right thing all along. Monster isn't her fault, he is an unforeseen consequence of war, but she takes responsibility for him. He is, in the end, a self-aware weapon that has escaped into civilized society. \n\nMonster started as a throw-away of sorts in \"Shameless\"\u2013 a half-formed idea in the shadows, a mostly harmless, self-medicating TBI (Traumatic Brain Injury) victim trying to drink his nightmares away in the corner of the bar. A Checkov's gun who would sacrifice himself and save Grease and Shameless, thereby achieving his own redemption. But as that story progressed, Ex showed up and sat down with him. And then he turned his head and I got a good look his face. And I'm afraid there isn't much redemption there. \n\nOne of the curious things about stories where the hero turns out to be a SEAL or a Delta Operator who is crossed and then goes on a rampage, even a controlled one, is just how unlikely that is. It doesn't matter if you're talking SF, SFOD (Delta), SEALs or AF Combat Control Teams or one of the ever-shifting DoD \"activities\"; lack of control, lack of discipline will kill you, and likely everybody on your team. Most operators are extremely self-disciplined. That discipline is absolutely second nature to most of them, almost to a fault. It has to be. They are also very pragmatic people and would use lawyers more than violence if possible. One of the key things they learn is when a situation becomes untenable, you have to put it down and walk away. \n\nThat said, with TBI a more common occurrence, who is to say what kind of brain damage could occur? Could it strip away human emotions, and leave \"trigger mode\" permanently on? That question is at the root of Monster. \n\nOne terminology note: \"Top\" is the common informal form of address for a First Sergeant \u2013 the \"Top Sergeant\" of a Company. In this case, however, given the nature of Monster's unit, Top refers to the Sergeant Major of the \"activity\"."
    ],
    "authorname": "Todd172",
    "tags": [
        "monster",
        "star crossed",
        "violent",
        "ex wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/monster-4"
}