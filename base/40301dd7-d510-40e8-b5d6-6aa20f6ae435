{
    "title": "One Night in Xanadu",
    "pages": [
        "<center>One Night in Xanadu</center>\n\n<center>A Princess of the Xiongnu and the Old Way</center>\n\n\u00a9 2019 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. If you read this story on any website other than on Literotica or Wattpad, it has been copied and used without the author's permission.\n\nThis story was written for the Literotica \"One Night in XXX\" Story Event and as almost always, here's that little note from Chloe right at the start. Back in early February (2019), I was tossing around ideas with a few other Literotica writers for a Literotica Story Event (NOT a competition, just an \"event\" where anyone interested could write and submit a story on a common theme). It's a great way to get a whole bunch of people kicked off and writing their own stories with a common starting point, a fixed target date, and it's amazing to see the different paths each one of us takes from that same starting point.\n\nIn this case the starting point was \"One Night in XXX\", where XXX is a city or town which can be real or fictional, but if it's fictional it had to be in an existing published book or movie. The whole story, start to finish, had to take place over one night, altho it can start the day before and finish the next morning and there can be a little in the way of flashback or prelude to set the scene. I guess it captured everyone's imagination because people were diving in and starting to write stories for it even before the Literotica announcement of the \"Event\" was made. \n\nSo a big thanks to Laurel right up front for giving this event the go-ahead and a just as big thanks to all the other authors on Literotica who were inspired enough to jump in - and I hope you all reading this little story of mine enjoy all the other stories everyone else has written for this story event -- and if you're wondering why you're suddenly seeing a whole bunch of \"One Night in XXX\" stories popping up together, that's why, folks. \n\nAnyhow, after kick-starting the idea and organizing it with Laurel and a few other authors and writing up the announcement for Literotica, I thought I better write something myself and Coleridge's \"Kubla Khan\" popped into my head for some reason although this story really isn't based on \"Kubla Khan.\" So here you are, \"One Night in Xanadu,\" Chloe's contribution to the \"One Night in XXX\" Story Event, a little historical piece that's shamelessly historically inaccurate (it would have even Robert E Howard shuddering in his grave coz I sat here with a pile of his books in front of me looking at the style he wrote in and just murdering it altho then again, Howard was pretty good at murdering history himself so maybe he'd just laugh. Wherever he is, I hope he enjoys this and RIP, dude. You were one of the best!). Anyhow, I hope you all enjoy the story all the same coz it sure was a lot of fun to write..... \n\nIf you want some good music to go with this story, go to youtube and search for \"The HU -- Wolf Totem\" for some great Mongol folk-rock that I listened to endlessly while I was writing this. They're amazing! And someone did a ten hour loop -- lookup up \"The HU -- Wolf Totem -- 10 hours\" and listen while you're reading this. It won't take you ten hours to read but you won't have to hit replay either and it's in Mongolian so it's not like the words are gonna distract you from the story. Also, partway through the story, my heroine sings \"The Heart Sutra\". If you want to listen to the version that inspired me, search youtube for \"The Heart Sutra (\u5fc3\u7ecf) by Faye Wong (\u738b\u83f2) with English Subtitles (High Quality Audio)\". It's beautiful...\n\nAlso, just a warning. This isn't my longest story on Literotica by a long shot, but it's a few LIT pages before the first sex takes place so if you're after a short stroke story, skip this one. That said, the First Time sex is hot (I mean, how many girls get to lose their virginity to the Great Khan himself in fabled Xanadu) and the final sex scene is violent and bloody, and, I hope, hot. Bloody hot. You'll get that one when you read it. LOL. And of course if you like my stories, varied as they are, I think you'll really enjoy this one.\n\n. ....and now, get reading! And don't forget, go read everyone else's stories too. We all had a lot of fun writing these for you, and it's a wild variety, so go enjoy ...Chloe\n\n<center>* * * * * *</center>\n\n<center>In Xanadu did Kubla Khan\n\nA stately pleasure-dome decree\n\nWhere Alph, the sacred river, ran \n\nThrough caverns measureless to man \n\nDown to a sunless sea. \n\nSo twice five miles of fertile ground \n\nWith walls and towers were girdled round; \n\nAnd there were gardens bright with sinuous rills, \n\nWhere blossomed many an incense-bearing tree; \n\nAnd here were forests ancient as the hills, \n\nEnfolding sunny spots of greenery:</center>\n\nKubla Khan, by Samuel Taylor Coleridge\n\n<center>* * * </center>\n\n\"You see before your eyes Xanadu, Princess Altani,\" the Captain of Five Hundred said, proudly, as we rode side by side over the low ridgeline, pausing a little after the crest to gaze down into the great valley before us. The Great Khan's Summer Palace, Xanadu, lay spread below, vast beyond anything I had imagined. My escort, my guards, they reined in behind us as I halted, shielding my eyes from the red-gold glare of the setting sun reflected from the gilded roofs. There, before me, was my destination. My fate.\n\nXanadu. \n\nThat was the name the Captain of my escort used for this sprawling city of stone built around that great Palace and the verdant park enclosed within those inner walls that I could see even from here. Shangdu. \u4e0a\u90fd. That was the name used by the Han for this place. My people, the Hu, we whom the Han named Xiongnu and the Mongols called Hunnu and others called Hun, to us this was the City of Stone, for my people had no cities, no buildings. \n\nWe were people of the steppe, our homes our yurts, our beds the ground, our roof the blue sky. People of the Wolf, we called ourselves, for we were wolves. Wolves of the plains, the great steppe that went on without end. But I, I was to be a wolf of the plains no longer.\n\nI had been sent as a gift to the Great Khan, the Khagan, here in his Summer Palace.\n\nHis Xanadu. His Shangdu. His City of Stone. \n\nCall it what you will, this great city constructed from the bones of the earth loomed before my eyes as we rode towards it at a fast trot, for dusk came down fast and we were at the end of our long journey. This night, this night that I had feared and dreaded over all these long weeks of travel, this night I would find myself within this city of Xanadu, no more travelling across the steppe and of that I was almost glad, for winter was falling fast. Snow lay sprinkled thinly on the ground now, white on the brown autumn grass and Xiongnu though I was and inured to hardship, winter is no time to be riding across the great steppe. \n\nXanadu. \n\nThis was that city to which I was dispatched. I, my father's only daughter, gifted as a concubine to the Khagan. The Great Khan, ruler of all the steppe tribes, ruler now too of the great empire of the Han, for the Han had fallen in defeat as had my own people a generation ago. Slaves, all were slaves to the Great Khan and though we Hu were of the steppe, my people had not escaped that fate. The Mongols had defeated us and I, I who was a Princess who fate might have destined to rule, now I was a mere gift.\n\nGifted to the Great Khan by a fool. I, a princess of the Hu, we that the Han named the Xiongnu and the Mongols named Hunnu and others called Hun. Bitter were my thoughts as I gazed down on those great walls of stone. Walls that stretched high and impassable across the grassland before me as we rode towards great wooden gates set in a fortress-like tower, one of half a dozen great towers that I could see. \n\nAlthough my thoughts in that moment were bitter, I rode on without hesitation, my escorts on their shaggy steppe horses following in a long column for bitter though I was, I would show no fear. I would ride into this City of Stone, this Xanadu, this Shangdu, at the head of my escort, proudly riding beside the Captain of Five Hundred. I would ride at the front of my escort, not dragged or carried in as if I were reluctant, unwilling, forced. \n\nI would not enter this city as a prisoner. I would enter as a Princess of the Xiongnu, leading my escort, fearing no-one, riding my great black stallion, my sword at my side, my bow in its leather case before me, my arrows slung across my back in their leather quiver, my steel-tipped spear in my hand.\n\nI would ride into this City of Stone on my stallion, woman though I was, for I was no effete Han girl to be carried in a palanquin or to ride seated in a cart as the Mongol women were carried. I would ride, or I would walk on my own feet, for I was Xiongnu and in that knowledge there was pride as merchants and peasants drew aside to give us passage, turning their heads to gaze after me. Pride that turned to anger as Jiang Shunfu kicked his gelding ahead of me on the stone road, and the bearers of the palanquin that had travelled with us from the start jogged at his tail.\n\n\"Woman, you must take your place in the palanquin. It is unseemly that a woman of the Khagan's should ride into Shangdu seated on a horse and carrying weapons.\" Jiang Shunfu ignored my rank, my title, as he had ignored my rank and my title from the very start of this long journey. \n\nHe eyed my great black stallion askance, as he had eyed Aranjagaan askance from the moment I had been given over to his authority. He knew my title. He knew I was daughter of the old Chanyu. He knew my name. He knew Aranjagaan was a part of me for we were inseparable, as inseparable as a mother with her child. He knew all of that, and yet Jiang Shunfu showed no respect for me and I, I had showed none to him before and I would give him no respect or obedience now.\n\nJiang Shunfu. \n\nHow I cursed that name. \n\nHow I cursed my older brother's name. \n\nMy older brother, now Chanyu, the ruler of our people. It was he who had sent me to the Khagan as a gift. Sent me out of fear, for with a husband at my side, all Hu knew in their hearts that I would be a far more capable ruler than my older brother, the fool. Thus, when this minor emissary of the Khagan, the Great Khan of the Mongol overlords, had arrived with a Han \"princess\" gifted to my brother as a wife, the fool had seen his opportunity to rid himself of the threat I posed to him. \n\nPublicly, before all, he had gifted me to the Khagan in return.\n\n\"I am handing over to your protection my sister, the Princess Altani, as a gift to the Khagan.\" Those were my cursed brother's words to Jiang Shunfu, the Han emissary, but that twist of his lips, that malevolent smirk, that had been for me. A gift. A concubine. Not given even as a minor wife, but as a gift and a concubine; and the insult in his words brought a flooding rage and I would have killed my brother there, on the spot, but for his guards. There had been too many of them and my bloodlust had gone unquenched. \n\nMy brother had not been fool enough to stay and provide me with any further opportunity. Before the sun had set on that inauspicious day, my people were on the move, that pitiful Han \"princess\", beautiful enough to please my brother but more than likely only some minor noble's daughter who would forever weaken the bloodline of my father, carried weeping and wailing across the steppe.\n\n\"Curse that motherless fool,\" were my parting words as the dust of my people clouded the horizon. \n\nThe Captain of Five Hundred had understood enough to chuckle. In my heart, I was well aware that no doubt the Khagan's servant, this Jiang Shanfu, had another motive for separating me from my people for the Han was observant. \n\nHe had made his own assessment of my fool of a brother, of that I was sure. Perhaps he had made an accurate assessment of me, perhaps not, for women were of little regard to the Han. It mattered not, I was more than certain he had determined my older brother was a fool, and a fool leading the Xiongnu, that would serve the Khagan's purpose well. Subtle indeed were the ways of the Khagan's Han advisers and servants and in the end it made no difference to my fate.\n\nOnce gifted to the Great Khan, that gifting could not be undone, and Jiang Shunfu came with an escort of five hundred Mongol warriors commanded by their Captain. Only a fool would resist, only a fool would flee; and I, I was no fool. I knew, as my brother well knew that I knew, any resistance on my part, a call to those warriors loyal to me, and there were many; that would bring the wrath of the Great Khan down on the Xiongnu now that I had been gifted. \n\nAnd so, cursing myself for not having foreseen the cunning of the fool and making myself absent, I sat my great black stallion, Aranjagaan, watching my people depart. Not a few of them glanced over their shoulders at me as they rode, and I promised myself to remember those faces, to remember who was yet loyal to me. \n\nWeeks of riding had followed, endless league upon league across the great steppe, threading the high mountain passes, crossing the vast desert of the singing winds, the endless desolation where nothing lived and there was only sand and rock and more sand. I endured the long days, the freezing nights, the sudden sandstorms, drinking the brackish water from wells and oasis pools, struggling over the endless dunes, enduring the burning heat that I prayed would boil Jiang Shunfu's brains within his misshapen skull and always, always I had ridden my great black stallion. Ridden when the Mongols had ridden. Lead my horse when they had lead theirs, walked when they had walked. \n\nNever showing weakness. Never.\n\nI was Xiongnu, and to weaken was to lose honor. Twas better to die than to lose honor.\n\n\"Keep your people's ways to yourself, Han.\" I had scorned Jiang Shunfu when he had thought to place me in a tent identical to his own on that first night, with guards at every corner as if he feared that his companions would kill him in his sleep. What use were those guards then? Who did he distrust? I knew not, and I cared not.\n\nI had laughed in his face as I displayed my trust in my escort from the very first, placing my bedroll alongside the warriors who now guarded me as my father's warriors had once guarded me. Sleeping on the ground as they did, warmed by the bodies of the men to either side of me for I was no Han, unused to hardship. Brushing the frost or the early snow from my covering in the morning, for winter was closing in now.\n\nOut there on the great grasslands, my people, the Hu, the Hun, the Hunnu, the Xiongnu, call them what you will, they would be camped in sheltered valleys, feasting, singing our songs of courage and victory and glorious death in raids and in battle and of the stealing of Mongol and Tatar women and of the feuds that had gone on for generation after generation.\n\nNone here would have the temerity to attempt my virtue, close to them as I lay, for I was gifted to the Khagan. It would not have mattered if any had made the attempt. My knife would have ripped the throat out of any who attempted such an act, as I had ripped the throat from men of my own people before for such offences against me, smiling as their blood spurted onto the grass while my father laughed and praised his only daughter's skill with weapons. My brother had had good reason to dispatch me thus, for assuredly his blood would very soon have fertilized the grasslands if I had remained with my people.\n\nThe Captain of Five Hundred had chuckled at Jiang Shunfu's outraged protests. Chuckled, and silenced him with a look and a hand to the hilt of his sword, for all knew who were the masters and who were the servants in this great Khanate of the Khagan's. The Captain of Five Hundred knew well that no warrior of his would dare touch me, for I was gifted to the Khagan, whether the Khagan knew or not; and I would come to the Khagan with my virtue intact.\n\nI had laughed at that Han woman who thought he was a man as I rode my horse through the autumn snow, scorning the meals that the Han's cook prepared. Instead, I took my food from the iron pots my guards shared, eating as they ate, drinking milk, hot and fresh from the teats of the mares, guided to my mouth by my own hands, drinking mare's blood, thin and hot and fresh, my lips pressed to the pulsing neck vein as I sucked at the nourishing blood, staining my lips redder than any artifice those fragile and timid Han girls used to tempt men. \n\nSmiling with those reddened lips at Jiang Shunfu, smiling as he recoiled in horror, smiling as I tore at the dried meat with my pearl white teeth while we rode, and in the evenings I wrestled with the men, as I had wrestled with my father's warriors. Never did I win, for they were men and they were warriors; but often I forced them to exert all their strength and skill before I was defeated; and the Captain of Five Hundred oft silenced Jiang Shunfu's incessant whining with a single gesture of his hand when his voice was raised yet again in protest.\n\n\"This must stop, it is unseemly for this woman to fight men.\" \n\nThis as I gave Arslan a butt to his nose with my forehead that had the hot blood spurting onto my face and his, and in this I had an advantage, for none of these warriors would risk the wrath of their Captain or of the Great Khan by inflicting permanent damage on me. An advantage that I shamelessly used, and they knew it. \n\nThey knew it, and they knew that I knew, and they laughed, for my bravery and my skill and deceit at the wrestling and my skill and unerring speed and accuracy with the sword and at the archery won their admiration. Their admiration, but not their loyalty. They would kill me in a moment if the Captain of Five Hundred ordered it so, for these men were hand-picked men of the Khagan's, loyal only to him. Loyal by blood and by oaths sworn; but I, I was gifted to the Khagan, the Great Khan, and their duty for now was to guard me. I had their admiration, they knew their duty well, and I was as safe with them as their own sisters would have been. Safer perhaps than their sisters, for they were, after all, Mongols.\n\n\"She is of the Hunnu, the Hu, the Xiongnu, the People of the Wolf, Han.\" The Captain of Five Hundred deigned to respond. \"She is of the Xiongnu, she is trained as all the Xiongnu women are, to fight as a warrior would fight, and she is a gift to the Khagan. We will deliver her to the Khagan as she is,\" and the Captain was smiling as I took Arslan with a kick to the head that staggered him backwards and a second that almost took him down. \n\nHe recovered, he closed with a sudden rush, ignoring my knee and elbow strikes as I attempted to strike him to the ground where I should have danced backwards, and I cursed myself for my overconfidence when he grappled with me even as I doubled him over with a knee strike to his guts and an elbow to the back of his head. Despite those blows, he managed to fling me to the ground so that the blood burst from my own nose and I saw the stars even though the darkness of night had not yet fallen on the great grasslands.\n\n\"I give you best, Arslan,\" I groaned, lying there watching the stars circle as he pushed himself to his hands and knees while I still lay there and he took my hand and pulled me to my feet and almost I fell and I would have had he not supported me.\n\n\"Almost she took you, Arslan,\" Basan laughed, standing, taking my other arm. \"Sit here, Princess.\" For these Mongol warriors, they gave me honor and respect where the Han did not. \"A bucket of water is coming. The shaman brings the tea for the bleeding.\"",
        "\"Unseemly,\" Jiang Shunfu hissed, making no pretense that his words were not meant to be heard and my sword hand itched to hew his ugly head from his scrawny shoulders.\n\n<center>* * * </center>\n\nAnd so the days and the weeks had passed, riding, always riding, east towards this fabled Xanadu of the Khagan's. Now I was here at last. Seated on my great black stallion, gazing at the stone walls of this Xanadu. The sun was low in the sky, a great red ball of fire sinking towards the distant horizon and those walls of stone now loomed before my eyes, my long journey nigh over and once through those gates, I would be fortunate ever to leave. \n\nMy heart quailed, my anger at my fate grew, and before me, his gelding blocking my path, Jiang Shunfu was insistent. No doubt he felt that here, at the very gates of Xanadu, about to enter the city of the Khagan, the man to whom my brother had given me as a gift, whose concubine I was destined to be, he could force his will on me where he could not do so on the endless steppe. \n\n\"Dismount and seat yourself in your palanquin, woman.\" He raised his voice as none but my father had ever dared raise their voice to me. \"Or I will have you punished.\" \n\nHe smiled and that smile was that same smile worn by a thousand such Han emissaries as they worked their sly tricks on my people. As they worked their \"diplomacy,\" playing one tribe, one clan against the other. As this Jiang Shunfu had played my brother for a fool. Or perhaps not. \n\nPerhaps he was aware of the danger I represented, but if he was, then more fool him for threatening me here and now where I sat Aranjagaan still with spear in my hand, sword at my waist, bow in its bow case slung from my saddle, for no man other than my father or my husband would punish me, and the cold anger rose within me for there would be no husband now.\n\nA gift, that was all I was. \n\nA gift, I was destined to be a mere concubine. That was what I was and this Jiang Shunfu, if I could not have my brother's head, I could have his.\n\nMy Mongol escort sat their horses impassively, their commander, the Captain of Five Hundred, saying not a word, sitting unblinking as his eyes met mine and there was no clue there as to his thoughts for he wore the cold face and perhaps that was a clue in itself. Perhaps. Dare I? I looked at Jiang Shunfu, considering him, and then I spat on the ground at the feet of his horse. \n\nA horse? A gelding. A horse for a slave-woman, or a man who was a woman. \n\nA sham of a horse for a sham of a man such as this Jiang Shunfu was.\n\n\"I am the daughter of the Chanyu of the Xiongnu. I am to be concubine to the Khagan. I am not to be commanded by some effete Han whose hands have never held a sword or a spear or drawn a bow.\"\n\n\"Woman, you are about to enter Xanadu. You will do as you are commanded, or it will be the worse for you.\"\n\nI shrugged. The Captain of Five Hundred watched, unblinking, waiting, but I knew these Mongols. In the past my people had fought them and often we had defeated them, as at times they had defeated us in the raids and warfare of the steppe tribes. Now we were ruled by them, but this Captain, he and I we knew each other, as we both knew the Han, and I was no Han. I was no servant to be commanded by this woman in men's clothing. This rider of a gelded horse that a child of the Xiongnu would be ashamed to be seen on.\n\nMy name was Altani. \n\nI was a princess of the Hu, the Hunnu, the Xiongnu. A princess of warriors, trained in the ways of war. Trained to kill men, and my hand itched to wield my spear even as horsemen rode up from behind us, a hunting party, parting the merchants and the tradespeople and the laborers on the road before them as if they were water.\n\n\"Wait, Princess.\" The Captain of Five Hundred did not move, but he knew me as I knew him and in that moment I knew he would not have objected but for this interruption. His voice was flat and this fool of a Han had no idea how close to death he was.\n\n\"What is this?\" The voice at my back was harsh. \n\nA voice such as my father, the Chanyu Attila, had once had before the sickness took him. Harsh. Commanding. A voice to be listened to and obeyed instantly. Before me, the Captain of Five Hundred and all his men instantly bowed low over the necks of their horses whilst the bearers of that thrice-cursed palanquin flung themselves on their faces, heedless of the snow and the ice and the mud. \n\nBefore my eyes, this Han woman who thought he was a man half fell from his gelding to prostrate himself in the snow and mud beside the road of stone leading towards those great gates. I did not take my eyes from the Han but my hand moved to grip my spear the better to drive it through the Han and the blood-rage filled me as I looked down on him considering where best to pin him through as I would have pinned the misshapen frog he resembled.\n\n\"Who are you, woman, who considers the death of my servant so eagerly?\" that harsh voice said, curious now. Forcing the blood-rage back, I turned my head. I looked.\n\n\"Bow to the Khagan, Princess,\" the Captain of Five Hundred hissed, his face next to his horse's mane.\n\n\"I am Altani, Princess of the Xiongnu and sent by my brother, the Chanyu, as a gift and as a concubine to the Khagan,\" I said. Only then did I bow my head, to the same degree as the Captain of Five Hundred and his men. \"And this woman in men's clothing on the ground before us has insulted me.\"\n\nAround us, nobody moved. Nobody. It was as if the very air had turned to ice. \n\n\"If your brother is now the Chanyu, your father, the Chanyu Attila must now be dead, Princess Altani,\" the Khagan said. \"And that is news to me, but first, Chingay, we will discuss this insult.\" The Captain of Five Hundred. Chingay. In all those weeks and months of travel, he had never revealed to me his name, and out of his armies, his men in the hundreds of thousands, the Khagan knew his name. \"We will also discuss why a Princess of the Xiongnu who is sister to the Chanyu, and a daughter of the Chanyu Attila, is sent only as a concubine and a gift.\"\n\n\"Lord.\" The Captain of Five Hundred sat upright and while the Khagan's attention was on him, I ran my eyes over this Khagan, this feared ruler of the steppe peoples and of the Han, and, too, ruler of my own people, seated on his horse. \n\nThis man, he was my destiny whether I chose or not. My fate, my life, my future was in his hands, and I eyed him with, yes, both curiosity and fear, for it was wise for all men and women to fear the Khagan; and my brother the fool had gifted me to this man. This ruler of all.\n\n\"Who is this?\" the Khagan said, eyeing Jiang Shunfu, prostrate in the snow and icy mud.\n\n\"One of your bureaucrats, Lord,\" Chingay said, and he spoke as a warrior of the Xiongnu would have spoken to my father. Forthrightly, but with respect.\n\nI knew now what manner of man this ruler of these Mongols was. What manner of man this Khagan was. A man such as my father had been before he had sickened. A man such as this, a ruler such as this, there was no dishonor in this for me as a concubine, but even for him I would not swallow my pride, for I was Xiongnu, and honor and pride were everything. Without honor, without pride, I was nothing. Less than nothing.\n\n\"A servant who was sent to deal with the Xiongnu in the past. We were detailed to escort a bride to the Chanyu, as has been the custom of these Han. The Council in their wisdom decided to continue the custom. A woman was sent. When we arrived, the old Chanyu was dead and a new one had been acclaimed. The women was given to him, for the decision said nothing of which Chanyu and it was of no great importance.\"\n\n\"Ah. Yes. I recall the decision. And this one?\" The Khagan glanced at me, but my face was the cold face, the stone face, giving away nothing.\n\n\"Her brother, the new Chanyu, sent her to you, Lord.\" Chingay allowed a chuckle to escape. \"Her brother feared her. He is a fool, Lord, but not that much of a fool for she would have made a better Chanyu than he by far. He offered her as a gift to you to rid himself of her and insult her.\"\n\nMy eyes regarded the Captain of Five Hundred in a new light. He played no second fiddle to Jiang Shunfu, this Chingay.\n\n\"Is that so?\" the Khagan said, eying me now, and I looked back, my eyes meeting his, giving him the cold face, for I was Xiongnu and no whimpering Han lapdog, and this Chingay, this Captain of Five Hundred, he was correct. My brother was a fool, but not enough of a fool to allow me to remain with our people if he wished to continue to draw breath.\n\nNow I smiled and I spoke, unbidden but with respect. \"He would not have lasted the winter, Lord, and there would then have been a Chanyu who required no Han princess for her amusement.\"\n\n\"Still, you are here, Altani, Princess of the Xiongnu, and your brother's gift is acceptable in my eyes.\" The Khagan was amused.\n\n\"The Han?\" Chingay asked, his voice flat, his face the cold face as I glanced at him, and I did not smile, but I knew the Han, this Jiang Shunfu, he had no friend in Chingay and my heart warmed.\n\n\"An insult to a concubine of the Khagan is as an insult to the Khagan himself,\" the Khagan said at last, and his face was the stone face, the cold face, as was mine. \"Princess Altani of the Xiongnu, you may do with my servant as you believe an insult to the Khagan deserves.\"\n\nHis look was a challenge. His words were a challenge, and his guards watched imperturbably, alert for any threat to the Khagan. \n\nNow I smiled, and that smile was colder than a Siberian winter. I smiled and I leaned forward. \"On your feet and run, little Han woman. Run for your life.\"\n\nJiang Shunfu's voice pleaded from the snow and mud, begging as not even a slave of the Xiongnu would beg. \"Mercy, Lord. I am your servant.\"\n\n\"I have many servants,\" the Khagan said. \"None of whom offer insult to my women. Obey the Princess Altani.\"\n\nJiang Shunfu sobbed as a woman of the Han sobs. Sobbing, he pushed himself up onto trembling legs, and the scent of his urine filled my nostrils. He looked at me. He looked and he saw his death in my eyes, and he turned, and he ran. He ran from death as no warrior runs. A warrior embraces death, welcomes death, calls death to him. Not a man, woman or child of the Xiongnu, nor of the Mongols, nor any of the people of the steppe, not even the Tatars, would have run from certain death as this Jiang Shunfu ran.\n\nHe ran as a coward runs where if he had stood his ground, as any Xiongnu or Mongol would have stood, as even a Tatar would have stood, wearing the cold face while waiting on certain death, I would not have killed him. I would have ordered him banished him from this city, banished him from my presence, forever, but I would not have killed him. \n\nMy eyes followed him with scorn as he ran towards the Gates of Xanadu, and my eyes were not the only ones that held scorn. I watched him, my face the cold face once more. All watched him as he ran, all but the Khagan and his bodyguards, who watched me as I waited, waited. \n\nAs Jiang Shunfu neared the gates, those great wooden gates set within that great tower of grey stone, I uncased my bow of layered horn and sinew and birchwood, made with my own hands, sat the foot on my boot where it sat in my stirrup and strung it in one easy movement, plucked an arrow from my quiver, raised my arms, nocked the arrow to the bowstring, pulled and released without thought, and I had chosen that arrow with malice aforethought.\n\nAn arrow for small game, a whistling arrow such as one that was used on rabbits or hares, and that shaft warbled as it flew, warbled and shrieked and sang of death, and Jiang Shunfu froze as a rabbit freezes, and the Mongols read my message in that arrow more clearly than any words. The Han was a rabbit, not worthy of respect, and the Khagan's guards regarded me with something that might have been approval as I drew the next arrow, a war-arrow, a man-killer, nocking it to my bowstring, pulling, releasing.\n\nAgain. Again. One arrow followed another until four were in the air. One white and three blackbirds snapped through the sky, seeking that which I had aimed for. Jiang Shunfu took one faltering step and plunged face down to the ground, one white and three black shafts buried in his back, and I knew without examining him that all four shafts had transfixed him. Silence surrounded me as I unstrung my bow with the casual ease of long practice, slid it back into its case.\n\n\"Long have I desired to kill that woman in man's clothing.\" I spoke without looking at the Khagan. And now I turned my face to him. Now I bowed as even a woman of the Xiongnu bows her head low in respect to her husband or her father. \"I thank my Lord the Khagan for permission to repay his insults. So I would I repay any who insulted the Great Khan of all the people of the steppes before my eyes and ears.\"\n\n\"The Great Khan of the Xiongnu?\" the Khagan asked, and his face was the cold face. Around us, his guard and my escorts remained alert for my sword was at my belt and my spear was once more in my hand. I was within easy reach of the Khagan, and I had proved myself able to kill.\n\n\"Am I, the daughter and sister of the Chanyu of the Xiongnu, not here as a gift, Lord,\" I said, and now my face was not the cold face. My cheeks were pink, my lips were red and my words were not words of flattery or simulated happiness.\n\n\"I, the daughter of the old Chanyu, Attila, and sister of the new Chanyu of the Xiongnu, I have been sent to you to serve you as you please. You are the Great Khan of the Xiongnu, Lord, for if you were not, I would not have been sent as a gift. Instead we would be meeting in battle as our people met in the past, or you would be raiding the camps of my people, as we raided each other's camps in the past.\"\n\n\"Though my grandmother, whose name was Gan, was a woman of the Khorulas,\" I added. \"Taken by my grandfather in a raid.\" And now I smiled.\n\nAround me, his guards' hands gripped the hilts of their swords, the shafts of their spears, the grips of their bows. One word from the Khagan and my body would join Jiang Shunfu's on the stone road, but I had my pride and my honor and my eyes met the Khagan's, and I sat Aranjagaan upright and unyielding. I sat without fear, for what was death compared to honor and pride.\n\nAround me, his guards' breath hissed out, their horses shifted beneath their riders. I smiled, for many of my people had stolen wives from the yurts of the Mongols in the past, as the Mongols had stolen many wives from the yurts of the Xiongnu. \n\nAs my grandfather had stolen my grandmother from the Mongols, and Mongol blood ran strong in my veins.\n\nIt was counted no dishonor for a woman to be taken in a raid. Dishonor for the men to let their woman be taken perhaps, but for us woman, this was a fact of life. My grandmother had made the most of it. She had been a wife of the Chanyu of the Hu, which was no ill fate. Not his first wife, for he was the Chanyu, and he had had many wives, but a wife nonetheless. Her son though, he had become the Chanyu in his turn, and now her grandson too, fool though he was.\n\nThe Khagan threw his head back; his laughter filled the air. \"Your grandmother's blood is strong in you, daughter of the Xiongnu, blood of the Khorula's, and I see at a glance that the Khorula blood and the Khorula pride and the beauty of the Khorula women run true. When I was younger, I would have raided your father's yurts for one such as you.\"\n\nMy eyes looked into the Great Khan's. \"And if your raid had been successful, I would have welcomed one such as you, to carry me away and make me his wife in the old way.\" \n\nNow I smiled, for was I not Xiongnu? Was I not a daughter of the steppe? Was I not of the People of the Wolves? \"If one such as you could indeed capture me and take me as a daughter of the Xiongnu should be taken. Is not that the way of our peoples, Lord? Is that not the old way?\"\n\nHis men, his guards, here and there a man nodded agreement, here and there came a hiss of approval, and the Khagan heard. He heard, and he took notice, and I saw that even the Khagan took heed of the approval of his warriors.\n\n\"It was our way,\" the Khagan said. \"That was the old way, and it was good, and it appears to me that you are indeed your father's daughter, and that his blood and the Khorula blood run strong in you,\" and he was watching me, and it was as if he could see into my soul and read my mind and he smiled then. \"Your brother the Chanyu has sent you to me as a gift, but I do not accept you as a gift, Princess Altani of the Xiongnu.\"\n\nMy heart sank like a stone cast into a lake, but I held the cold face as the Khagan watched me. Watched me for a long moment and then he smiled. A slow smile, a smile that held a deeper meaning. \"Why do we not let us see then if the Khagan can still capture and take a daughter of the Xiongnu as his wife in the old way, if that should be your wish, Princess.\"\n\nI laughed then. I laughed for joy because he had given me my title and my honor before his warriors. I laughed and my heart was light within me as I tossed my spear to the Captain of my escort, the Captain of Five Hundred. His hand snatched it from the air without thought. My bowcase and quiver followed, and the Captain of Five Hundred bowed his head to me as he took them from my hands for my bow I would not throw. \n\nI had made that bow myself, layers of birch and horn and sinew, bound and glued with the fish-glue, many long and patient weeks in the making, a year in the drying. It had not been the first I had made, but it was the best, and I had kept it for my own use, made as it was for a woman's strength.\n\nThe Khagan watched me as I unbuckled my sword and passed it with care to the Lieutenant of Five Hundred, for the Captain held my spear and my bow case. The Lieutenant too bowed his head for he knew this was my grandfather's sword, forged from the sacred sky iron, given to me by my grandfather with his own hands before he died and sour had been my brother's face on that day, and proud had been my father's for there was no love to be lost between my father and my older brother. \n\nThe Khagan's guards watched me. My escort watched me, the Khagan watched me, and above me the cloudless blue sky and the red sun on the horizon smiled down on me, and the eternal blue sky gods had indeed blessed me this day.\n\n\"Let us then see if the Khagan can still capture and take a daughter of the Xiongnu as his wife in the old way.\" I said, my eyes holding his for one long moment, my smile showing my pearl-white teeth, my voice clear and loud so that all might hear and from his guards there came a long murmur of approval, and my heart danced with elation for I was no longer bitter at my fate. \n\n\"But remember that I am Xiongnu, Lord. I am no Mongol maiden who surrenders herself without a fight.\" My fingers flicked my knife from my belt, tossed it spinning into the air, caught the blade neatly, sheathed it in one swift move, and then I was in motion, my eyes sparkling.\n\nI knew that his eyes followed me as I moved and my heart raced, my spirit soared. Not just his eyes watched me. The eyes of every Mongol warrior there followed me, and there were many warriors and many eyes.\n\n\"Chuhh... chuuhh!\" My voice commanded. My heels kicked my great black stallion into motion, and I was laughing as he responded in an instant, bursting from stillness into a gallop, straight down the great stone road that led to the Gates of Xanadu and I was alive as I had not been alive in many long weeks.\n\n\"Huyayayayayayaaaaaaa!\" My voice sang the ululating war-cry of the Xiongnu as they attacked an enemy encampment. The rhythm of the gallop coursed through my veins. Merchants, horseman, carts pulled by horses, great wagons laden with all the goods of the world, I wove around them. Laborers scattered like chaff on the wind before me, and those that were not fast enough, we ran down, leaving bodies in our wake, but they were only slaves and of no account. ",
        "Slaves. Slaves dying a slave's death, and I heeded them not, but heed Jiang Shunfu I did, for I did not forget to spit on his body as we passed. Ahead of me the gate guards closed ranks, blocking the gate but I did not slow, for did I not ride some Han woman's gelding. I rode Aranjagaan, the greatest stallion of the Xiongnu, and the horses of the Xiongnu were the best in the world. \n\nI rode Aranjagaan, whom no man could ride before he came to me of his own will. He had stood for me and allowed me to mount him and ride him as my father and his men watched in amazement, for all others who had tried had been thrown, and some had been trampled and kicked by those great hooves; but to me he had come. When his great brown eyes had looked into mine it was as if we were one, and he had bowed his head to me and to me my father had gifted him, if one could be said to gift such as Aranjagaan.\n\n\"Huyayayayayayaaaaaaa!\" Aranjagaan's iron-shod hooves trailed sparks from the stone, his head stretched forward, his great muscles bunched, he carried me as effortlessly, as if I was a feather, and I laughed as the spears came down, blocking my path.\n\n\"Chhuhhh... chhuhhh,\" I hissed, my voice and my hands urged Aranjagaan on. His muscles tensed, he jumped, he soared over their heads and the spears and behind me the Khagan's voice roared, the horns sounded, and the chase was on. \n\nThis city of stone was a mystery to me, I who had never seen a city or town of the Han. I knew of no other peoples that built like this, none but the Han, and I did not care. Ahead of me was the great dome of the Khagan's summer palace, known to my people through songs carried across the steppe, told to me in the stories of my escort as we journeyed to this place of stone and towards that Palace, towards that great dome hewn from the bones of the earth, I urged Aranjagaan on, heedless of the people thronging the crowded streets.\n\nCrowded were those streets, crowds of people such as I had never seen, bewildering, the streets teeming with life and with vibrant colors. Camels, donkeys, horses, palanquins carried by their teams of bearers, sedan chairs, carts, wagons, people of such variety as I had never seen. Shops and stalls, butchers, bakers, vendors of such variety as I had never imagined, and almost I would have liked to stop and look at the contents of those stalls, those shops, for never had I heard of so many different things gathered and sold in one place before; but I could not stop for behind me the horns called and the pursuit sounded, and I must continue.\n\n\"Huyayayayayayaaaaaaa!\" My voice sang the ululating war-cry of the Xiongnu again and again as Aranjagaan's hooves thundered, as his wild neighing echoed down the stone canyons. \n\nHan cowered against the walls of the buildings, those walking the streets looked towards us and darted aside. Those who were too slow were left lying on the stone paving, and I cared not, for they were not of my people, they were not Hu or Mongol, they were not of the steppe, and thus they were of no account. Carriages and wagons and carts we dodged and behind us, always behind us, the horns of the Khagan's guards sang high, sang the hunting calls, and the hooves, the cries, they echoed through these canyons of carved and hewn stone.\n\n\"Huyayayayayayaaaaaaa!\" The ululating war-cry of the Xiongnu rang out in this stronghold of the Great Khan, such a cry as had once struck fear and terror into the hearts of the Mongols in days past when the Xiongnu horde swarmed down on them, arrows shadowing the sky with death's dark cloud. \n\nToday there was no swarm of Xiongnu, no death cloud shadowing the sky under which I rode. Today there was only I, and I alone. A single Xiongnu girl, unarmored, unshielded, alone, clad in her black leather boots and trousers, her black leather tunic and over all, her long ceremonial dress of fine white felt, belted around my waist with my fine blue sash of treasured silk, my hair braided with pearls and with coins of gold and silver that were my dowry, as befits a princess. \n\nA princess now armed with naught but a knife and her courage to defend her virtue, galloping headlong into the heart of the Great Khan's city for honor and pride, pursued by the Khagan himself, and I would give him such a fight as no woman of his had given him ever before. \n\nMy heart sang with joy, for when the tale of my pursuit and my taking as a wife in the old way by the Great Khan himself made its way to the yurts of my people, their hearts too would sing. Sing with pride that a princess of the Xiongnu had dared to bate the Khagan in his own city. Sing with pride that a princess of the Xiongnu had been captured and taken by the Khagan as his wife in his own city in the old way. Sing with pride that a princess of the Xiongnu had been taken as a wife of the Khagan in the old way, the honored way, the way of our peoples.\n\nAlso present in my mind was the knowledge that should the Khagan make me with child in the old way, ties of blood between our peoples would be renewed, and my people, led though they now were by a fool, would be the safer within this Empire of the Great Khan's.\n\n\"Huyayayayayayaaaaaaa!\" My heart swelled with joy as I urged Aranjagaan on, for this was the first and very likely the last time the war-cry of the Xiongnu would ring out in this summer capital of the Khanate and always before my eyes was that great dome ahead of me, the heart of the city, the summer palace of the Khagan and I burst into the great square that fronted the walls surrounding the Khagan's summer palace.\n\nAcross that empty square towered another gated fortress. Set in that fortress, a great gate stood open, many guards to each side, and as the horns behind me sounded out their wild hunting calls, as the cries echoed out, I sang once more the war-cry of the Xiongnu, slowing Aranjagaan from his wild gallop for ahead of me the Khagan's gate guards formed an impenetrable wall of spearmen backed by mounted archers so deep there was no jumping them, even for Aranjagaan.\n\nBehind me, the Khagan galloped headlong into the square. Behind him his guards careered in, fanning out in a long line as if they were going into battle. I slowed. I turned Aranjagaan to face them, my knife now in my hand, the blood-rage in my eyes, and the Khagan's hand was raised, the horsemen halted. The Khagan halted. \n\nAll was still, the great square silent. Silent enough that the squeak of a mouse would be heard from one side to the other. If a mouse had been brave enough to squeak in that moment.\n\nThis mouse did more than squeak.\n\n\"Does the Khagan need his guards to trap a maiden of the Xiongnu? A poor helpless girl, alone and defenceless?\" My voice mocked him, as I had mocked suitors before my father had died. My knife-blade glinted in the last of the red sunlight. \"A poor girl with but a little knife to defend herself?\" \n\nA knife that had ripped out the throat of more than one importunate man who had desired me. Beneath me Aranjagaan snorted, shaking his head. and it was as if his laughter joined mine.\n\nThe Khagan said nothing. A gesture of his hand and the guards blocking the gate parted, leaving a lane for me to pass through.\n\n\"Enter my palace, maiden of the Xiongnu. Enter if you dare...\" His voice held laughter as I turned Aranjagaan and trotted him through the passage his guards made for me, and the Khagan's horse trotted after me, carrying the Khagan, and his guards followed him.\n\nInside those great wooden gates, I paused, for it was as if I had entered paradise. Ahead of me stretched fields of verdant grass, groves of trees, gardens bright with sinuous rills, and a wide stone road leading straight to the great palace with its dome of gilded metal, shining now like red gold in the last of the daylight; and the Khagan was there, on his horse beside me, smiling.\n\n\"Twice five miles of fertile ground, with walls and towers girdled round, is it not beautiful, Princess?\" the Khagan said, and his voice was slow and almost sleepy, as if he dreamed a waking dream and behind him his lines of guards reformed.\n\n\"It is beautiful indeed, Lord,\" I said, and it was; but it was an artificial beauty, manicured and groomed, not the wild beauty of the steppe on a spring day of sunshine, blue sky and green grass; or the glowering blackness of a great storm in summer where the thunder rolls like the hooves of the sky gods horses, and the lightning hammers down as a sword strikes a foe. \n\n\"It is beautiful, but while you sit here on your horse admiring its beauty, this beautiful maiden of the Xiongnu will be escaping your taking.\" \n\nOne kick, one laugh and my great Aranjagaan sprang into life, leaping forward onto the grass that was now gray in the dusk, for night was fast falling. The Khagan laughed and laughing, he kicked his steed into motion, pursuing me and ever I dodged him, ever I outran him. No horse of the steppe could outrun my Aranjagaan, and if we had been on the steppe, my escape would have been certain, and the Khagan would have had to find a new wife elsewhere.\n\nHere, in the gardens of the Khan's summer palace, there was no escape, and I had passed through those great wooden gates with that knowledge in my heart. Aranjagaan could run all night, but the dawn would come. Should it come and should I have evaded the Khagan, I would have given the Khagan no honor, and in his Palace, in this palace of Xanadu, I would shame my people and put their lives at risk, and that too I knew. \n\n\"It is time,\" I whispered in Aranjagaan's ear, slowing him a little as we circled a grove of trees and that little was enough, for inside this pleasure garden I had not let Aranjagaan run free. Behind me the Khagan roared with delight as he gained on me and soon, soon he was beside me, his horse's eyes wild, muscles straining in the gallop. I smiled as the Khagan's horse closed on mine. I slipped off Aranjagaan as the Khagan reached out for me, holding onto my great stallion's mane, my feet touching the ground on the far side and then springing up and over Aranjagaan's back. This was something I had practiced many times.\n\nI sprang and not just over Aranjagaan. I sprang, my feet settled on Aranjagaan's back and I sprang again, through the air, and the Khagan's eyes widened as I landed on his back. My arms locked around his throat, my muscles strained as I braced my feet on his horse's back and I threw the Khagan from his galloping horse to the ground. My arms released him as we crashed to the ground, rolling across the grass, springing to my feet as he sprang to his, and he was laughing.\n\n\"Well done, Princess of the Xiongnu,\" he said, shaking himself, and I knew he had felt that impact, as had I, for falling from a galloping horse is no easy matter, even for those such as we whose horses were a part of us and many have broken bones in this game. \"Well done.\"\n\nMy knife was in my hand now, and I crouched low, moving towards him in the tiger stance for tonight he was my prey, and I would kill him, or he would vanquish me. Yet deep in my heart I knew I could not kill him, for that would bring death down on my people. Draw blood, perhaps, and I smiled at the thought.\n\n\"My knife is not poisoned, Lord,\" I called so that all could hear. \"But it is sharp.\"\n\n\"I do not doubt that it is,\" the Khagan called back, also so that all could hear. \"I would expect nothing else from a maiden of the Xiongnu defending her virtue.\"\n\nHe stepped back, unbuckling his sword belt and his sword, passing them to one of his guards and around us, the Khagan's guards had reined in their horses, dismounting, forming a circle, a wide circle of standing men, horses at the rear for all his men watched, and I knew none would miss this, for this would be a tale worth retelling, how they themselves had witnessed the Khagan vanquishing a Princess of the Xiongnu in his own palace gardens.\n\nNow I bared my teeth, for this story would be certain to be told, and it would grow in the telling, and my fool of a brother would know fear as he heard. How a Xiongnu maiden fought the Great Khan in the old way in the grounds of his own palace, his palace of Xanadu and became his wife in the old way, the honorable way. Not gifted, but taken as a maiden should be taken, by force and right of conquest and this was such a man as I would have asked to raid my father's yurts had he ridden into our camp and eaten the guest salt. \n\nFor a moment, a mere moment, my head spun with exhaustion and my feet were uncertain and in that moment the Khagan could have taken me and I knew it. The Khagan's eyes met mine and he too knew and I was filled with despair for this was not the end that I had sought.\n\n\"Hold.\" The Khagan raised his hand. \"The Princess of the Xiongnu has been riding all day. She must be famished, and I would have my other wives and my concubines come to greet their new sister. Bring food, bring wine, bring kumis, summon the drummers and the chant-singers, summon my wives and concubines, bring lights, for we will not fight in darkness.\"\n\nGrateful I was indeed, for I was tired and famished though I would admit it not. I sank to the grass, seating myself cross-legged as a low table was placed between us, the Khagan on one side, I on the other and behind me Aranjagaan whickered softly, his nose brushing the back of my head and while we waited, I shed my white felt dress to sit in my black leather breeches and tunic.\n\nFood was bought, food and hot tea for me, salted and with butter, and I drank gratefully. Kumis, fermented mare's milk, for the Khagan. and he drank of it as he ate, drank copiously, ate enormously and I, I ate the roast mutton and the tender lamb and the steamed rice and the meat of the steppe antelope. I ate hungrily. I ate gratefully, my strength restored with every mouthful, but I did not eat to excess for I intended to fight and fight well. I would be no easy victory for this Khagan.\n\nI smiled now as he drained another great wooden bowl of the kumis, for every bowl he drank would slow him a little, and when his bowl emptied I took the jug from the servant's hands and refilled his bowl myself as a maiden would fill her suitor's bowl. I picked the choicest meats for him with my fingers and placed them on his dish, smiling shyly as I did so for he was not yet my husband, and I was not yet vanquished, but all who watched saw and nodded their approval, for my actions were those of a courted maiden who favors her suitor, and it was not as if there were any doubt as to the outcome of this nights wooing. \n\nAt his back, the drums of the hastily summoned shaman's now beat softly, their song background to our meal. The Khagan's ladies arrived on foot or in palanquins, the Han ladies twittering like the helpless birds of pleasure that they were, the Mongol women silent, their eyes assessing me as they seated themselves on carpets spread across the grass before the Khagan's guards. I bowed my head low to she to whom all others deferred, and she was Mongol, the Khagan's First Wife, and I knew her name was Borte for the Captain of Five Hundred had told me of her. \n\nHer returned smile warmed me.\n\nThe Khagan sat cross-legged, as did I, and with a gesture and a word, he summoned Chingay, the Captain of Five Hundred, to his side. I listened as they talked, not understanding their words for they spoke a dialect unknown to me, their faces inscrutable, expressionless although their eyes glanced at me on occasion, so that I assumed they were talking of me. At last, Chingay backed away.\n\n\"Has the Princess Altani of the Xiongnu refreshed herself?\" the Khagan asked me, his eyes twinkling. \"Is she ready to continue?\" And he winked but I needed not that warning.\n\n\"She has, Lord, and she thanks you for your hospitality, and she is more than ready to continue,\" I said, and as he threw himself across the table at me, scattering the food, smashing priceless porcelain, any piece of which would have been a treasure beyond price amongst my people, I rolled backwards, flipping myself to my feet and slamming one foot into his head hard enough to rock him sideways, hard enough that I evaded his grasping hands, and his nose was bloody as he rolled to his feet for I had in no way pulled that kick.\n\n\"A Princess of the Xiongnu is not so easy to vanquish with little tricks, Lord,\" I said, feinting, but he did not move. The gasp from his wives and his concubines was audible, the hisses of appreciation from his men even louder, and the Khagan's laughter louder still. \n\n\"Princess Altani of the Xiongnu,\" his voice boomed out. \"You are a wildcat indeed, and zerleg muur, wildcat, I name you. With the exception of my First Wife...\" His smile grew. \"... the only woman who can ever say she has landed a blow on the Khagan. Is that not so?\" He glanced at his guards.\n\n\"It is so, Lord,\" they rumbled, and they were grinning, enjoying the show and so was his First Wife, for she was laughing; and I saw that even though he was the Khagan, the Great Khan whose word was life or death, there was a bond between the Khagan and his men that was true loyalty, they to he and he to they. Loyalty such as my father's warriors showed to my father; and this was a leader, a ruler, whose warriors followed from respect and love as well as duty and honor.\n\nI used that moment, that glance at his men, to dart in, a kick to the back of his knee, with all the force I could put behind it, buckling his knee; and I pivoted, my other leg kicking back, at his chest and out of balance he fell backwards, rolling, seizing my ankle in a grip of iron but I kicked free though his fingers were of steel and bruised me; but I was no tender Han maiden to quail at mere bruises. I was Xiongnu, and I rolled back and away as he rolled to his feet and eyed me, and he was not laughing now. \n\nThere was nothing passive about the Khagan as he stood there, looking at me. He might have been still, but it was the stillness of the snake, waiting to strike. On my feet, mine, mine was the stillness and the alertness of the mongoose, and I held the knife in the knife-fighters stance and all who saw me would know I knew how to use that knife.\n\nI needed every fraction of that alertness for the Khagan was fast, striking like a viper; and he almost had me with that first attack, moving in, and he was fast, faster than any of Chingay's men whom I had fought, and I would not make the mistake of closing with him, for his chest and shoulders and arms were thick with muscles, and once those arms had me in their grasp, it would be over.\n\nNo, my advantages were my speed and my skill and I would use them. I would use every iota of them and as the Khagan moved in, my knife slashed out, slicing through the leather of his sleeve; and all who saw gasped, for my knife was of razor sharpness, and I was not hesitant. A fraction of an inch closer and the Khagan's arm would have now been streaked with red but he showed no hesitation as he moved in, evading my knife as he attempted to close and I, I danced backwards, staying out of reach of those hands of steel. Now I shielded my knife hand, for it was the concealed threat of my knife that held him at bay, cautious now for I was faster than he, but without his strength.\n\n\"The zerleg muur, the wildcat, has sharp claws,\" he said, and his eyes were narrowed, narrowed to slits, concentrating, focused, and I knew now that he took me seriously. He knew now that this was not mere bravado on my part, and Chingay's men too had discovered that too on our long journey.\n\nI bared my teeth in a smile, not answering, my own eyes narrowed, focused, intent, looking for that flicker that would signal his intent; but he was impossible to read and now he came in faster and his balance, his footwork, they were perfect; and I drifted back, almost running backwards, my mind clear and calm as the old master who had been my instructor for so many years had taught me.",
        "As I drifted backwards I watched for any weakness but there was none; and when I looked into his eyes they were dark, dark as the night, and I knew that unlike me, the Khagan had looked death in the eye many a time in battle. He had an age of experience that had me feeling as a child, and he had fought for his life many times and survived, victorious, for was he not the Khagan, the Great Khan. I had killed on occasion. I had killed men, warriors even, but never had I fought a warrior such as this and for a moment there was doubt within me, but then I restored my breathing, centering myself, focused.\n\n\"Good,\" the Khagan said. \"Very good, my zerleg muur,\" and his voice was quiet, his words only for he and I; and he came in faster, and he was focused on the knife.\n\n\"Kiiyaaahhhh.\" My shout was exhaled sharply as I ceased that backward movement, reversing that momentum to leap forward towards him, and my weapon now was not my knife. I cast my knife to the ground far behind me for I did not wish his guards to intervene, as they surely must should they believe the Khagan's life to be in danger. \n\nMy weapons were my feet with which I took the Khagan in the solar plexus with a stop-kick and a followup to his heart, knocking him a pace backwards. I twisted in the air, landing on my hands and feet, springing to my feet and diving away from him for I had only slowed his advance for a second, and he was almost on me, and I rolled and rolled and sprang up, pivoting.\n\n\"Kiiyaaaahhhh.\" Again, and I was poised on my left leg, my right lifted, coming around in a vicious reverse roundhouse kick aimed at his jaw; but his arm blocked my kick. I knew I had hurt him but his arms were massively muscled, and my kick would have broken a women's or a boy's arm, but it did not faze him in the slightest.\n\n\"Haaaaaaaaaa.\" He did not strike me, for if he had and his strike had had connected, I knew I would be dead or crippled for his strength was enormous. I felt that strength as he seized my leg with one hand, and I kicked myself free at the last, a frantic kick which barely sufficed. His lips twitched in a faint smile and in that moment I knew he had let me escape. \n\nMy breath hissed out, and I kicked and kicked again. Kicks which he blocked, moving forward. I danced back, almost running as he moved towards me, and I was circling, circling around the ring of his warriors who enclosed us. They were grinning and cheering me on as I landed kick after kick on the Khagan's massive forearms; but those kicks served no purpose for they did not get past his blocks, and he blocked me with impunity.\n\nDancing backwards, I continued to kick at him, but now I waited my moment. It came when I let the distance between us close a little. I kicked.The Khagan took his opportunity and dived forward, reaching for me. I gripped his tunic in both hands, falling backwards, my weight and his momentum overbalanced him and he came down with me. I curled my legs, feet braced against the steel of his stomach, and I kicked upwards, thrusting him up into the air -- and he was grinning as he let me go.\n\nThe thump of his body hitting the ground came as I rolled to my feet and spun, kicking for his head again as he rolled and I landed a glancing blow. One kick made contact, and then another, and he was up, crouched now in a wrestlers couch; and he was toying with me. I spun away, and now he moved faster, beckoning me with one hand as my Father's master at arms who had taught me would beckon me, and all who watched knew that he was giving me honor.\n\nFor a moment, I paused, and the Khagan paused with me as I bowed my head. \n\n\"You are my master in this, Lord,\" I said, for I knew he was, and there was no shame to me in acknowledging this, for he was a man, he was a warrior, he was the Khagan. \n\nHis warriors who watched us knew too, for skilled as I was, his strength would over power me at any time now that he had my measure, and I had not my knife with which to hold him at bay. We both knew that, his warriors too knew. They cheered me on in good humor, and the bets flew between them. Not that I would win, but on how much longer I would last.\n\nThe Khagan smiled. \"Show me your attacking style, Princess Altani of the Xiongnu,\" he said. \"Consider me as your Master who teaches you. I will block only, but now I wish to see your true abilities.\"\n\nHis warriors hissed their amazement. For the Khagan himself to spar with such a one as I was an honor indeed, but I did not pause. I moved into the attack now, launching kick after kick with all my strength and speed. Kicks which he blocked with ease; and now I closed, using knee and elbow strikes, using the knife hand and the spinning kicks and those little tricks I had learnt, and every other technique I knew. \n\nHis speed and his ability to block me amazed me. Even the best of Chingay's warriors on the long journey here had not been able to block my every kick and strike, and at the start I had thought I was faster than the Khagan, but he had been honoring me indeed.\n\nI kicked again and now he moved and my ankle was gripped in a clasp of steel and struggle as I might, he drew me towards him and wrapped his arms around me, and when I moved to throw him to the ground he went with me; but I knew it was his choice and not my skill that brought us too the grass, our bodies pressed together, and I refrained from the head butt, for that would be an insult. He smiled, knowing the choice that I had made, for his eyes looked into mine and he read me.\n\nHe smiled and his teeth were good, strong and white, unblemished. I looked at them as I struggled. Strong, he was strong, his muscles of banded steel and strong as I was, even with all my strength exerted I could not prevent him from shifting his grip and my hands were seized. I could not free my hands from his one hand gripping my wrists, effortlessly pinning them above my head as his other hand gripped my hair so that I must look at him. \n\nI struggled still but his legs pinned mine even as I tried for the knee strikes, and I knew I was defeated. But still I fought, for a maiden of the Xiongnu should fight to the end before she acknowledges that she is truly mastered.\n\nHis legs and his hands and his body moved, moved and immobilized me, not without exertion on his part; and I was proud of that, my honor satisfied, and I ceased to struggle for I knew, and he knew, and his warriors knew that struggle was now fruitless. It was not as if I was a maiden stolen from her father's yurts, taken to be ravished in the night and then cast aside. The Khagan had already acknowledged that he would take me as his wife, and he had given me my honor and my pride.\n\n\"You are captured and vanquished in the old way, little wildcat of the Xiongnu,\" the Khagan said as now he held me effortlessly, for his arms and legs were as steel bands imprisoning me and his eyes were smiling. \"Shall I now take you in the old way, here before my guards, or shall we hold the wedding feast before I carry you unresisting to my bedchamber where we will first talk and bathe before the taking.\"\n\nMy laughter was as clear as my voice, giving honor to the Khagan so that all could hear.\n\n\"I am vanquished, Lord, this zerleg muur, this wildcat, she is at the mercy of the Khagan. This maiden of the Xiongnu surrenders herself to you in the old way, yours to do with as you will. Take me here in the old way before your men, or take me to our wedding feast, or take me to your bedchamber. It shall be as you please for I acknowledge you before all your warriors as my vanquisher and my master, for the word of a Princess of the Xiongnu is her honor, and I have given you my word before all your warriors.\"\n\nThat murmur of approval that arose around us told me that I had spoken well. The Khagan's eyes spoke that same message and around us the drums of the shaman's thundered now, shaking the very ground beneath us and all in this city of Xanadu would hear the distant thunder of those drums and know that something momentous had taken place this night.\n\nMy heart filled with joy as his tumescence pressed hard against me, and I would not have objected in the slightest if he had taken me then and there, before his warriors and his women, for was I not now his?\n\n\"Take me now if that is your desire, Lord,\" I murmured, for his ears and his alone, and I no longer fought him. My body was now soft and yielding beneath his, and I knew desire as I had never known it before. He saw that in my eyes and on my face and he smiled. He smiled and he rose to his feet, lifting me with him and standing me on my feet, one of his arms around me, and his eyes fell on my knife as it lay on the ground. Around us, there were gasps as he stooped and picked it from the grass, holding the naked blade out to me.\n\n\"Use this blade always in my service, Princess Altani of the Xiongnu, who is to be wedded to me this night,\" he said.\n\n\"I will, Lord who is to be my husband,\" I said, sinking to my knees before him, pressing my lips to that blade as he held it, taking the knife from him and cutting my arm enough for the blood to flow. Wetting the blade and raising it high, I swore the sacred oath that the Xiongnu warriors swore to their Chanyu.\n\n\"By knife and by blood, before your warriors and before Mongke Koko Tengri, the Eternal Blue Sky God, I swear myself to your service, Lord, to live and to die as you command.\"\n\nThere was that long moment of silence, a hush as all present digested my words. This was not an oath that a woman swore, except in the old legends of our ancestors from the dawn-time, and my heart beat the faster at my own temerity.\n\nThe Khagan's eyes looked down into mine for a moment that seemed an eternity and almost I dreaded his response, for indeed this was not an oath that a woman swore and I had presumed much. His eyes looked deep into mine, reading my very soul, and then his hands reached out and clasped mine where I held the hilt of my knife. \n\nHe bent and he licked my blood from the naked blade. He took my knife from me and he cut himself. Around us there were gasps as he smeared his own blood, the sacred blood of the Khagan, on my blade and he held it in turn for my tongue to lick the blade clean and I did, every drop, and he knew the rites of the Xiongnu.\n\n\"By knife and by blood, and before Mongke Koko Tengri, the Eternal Blue Sky God, I accept your oath, Princess Altani,\" and his hands raised me to my feet and he returned my knife to my hands. \"As one of my warriors you have sworn, and as a warrior-wife I accept your service.\" He smiled. \"As a warrior and as my wife you shall serve me.\" \n\nHe raised his hand and silence fell. \"Tonight we shall have an ikhudar,\" his voice boomed out. \"A feast of great rejoicing, for tonight I will take the Princess Altani of the Xiongnu as wife.\" \n\nA storm of cheers greeted his words, and already there was the scurrying of many feet as servants rushed to do their master's bidding.\n\n\"Summon your horse, Princess,\" the Khagan said. \"We ride together to our wedding feast, and on this night you shall be seated in honor between myself and my First Wife.\"\n\nA shrill whistle summoned Aranjagaan to my side as the Khagan's horse was led to him. We mounted and now I rode a little behind the Khagan, his guards fanning out around us as lanterns flickered into light all across the parklands through which we rode. Chingay was there, close by, the Lieutenant with him and they carried my weapons still.\n\n\"Chingay.\" The Khagan summoned him to his side. \"You and your Five Hundred have guarded the Princess Altani faithfully and well on her long journey here. You and your men, you are assigned to permanent guard of the Princess who will be my wife. Her life and her safety are your responsibility.\"\n\n\"As you command, Lord,\" Chingay bowed. His look said that he was not at all displeased with this duty. Falling back, he bowed to me, a hand gesture to the Lieutenant and half a dozen of his men were behind me in a half-moon, the Lieutenant and the Captain Of Five Hundred deep in conversation.\n\nAhead of us loomed another palace set in the midst of a great grove of tall trees. A palace that looked to my eyes as a dream of the gods and my eyes widened as lanterns flickered into light everywhere I glanced. The Khagan dismounted, and I with him. A man of the Five Hundred took the reins from me, bowed low to me, and there were others of Chingay's Five Hundred behind him, and they bowed as one, and I, I returned that bow for they were good men, picked warriors all and they were now my guards, as my father's men had once guarded me.\n\n\"I will care for Aranjagaan, Lady, fear not. He will be cared for and guarded as you would yourself,\" for on that long journey I had refused all assistance. \n\nArajagaan was mine and my own hands had cared for him; but this warrior was one who had brought water for him and had assisted me from time to time in caring for my saddle and reins. I smiled at him and nodded as I turned to follow the Khagan for Aranjagaan knew him, and he was whickering and tossing his head as I left him but otherwise he did not protest.\n\nThis palace, it was built from bamboo, I saw that at a glance as the Khagan reached for my hand and led me inside through a great arched entrance way. Within, light flickered, lanterns hung as if they were stars in the sky, and the bamboo glowed golden. Great gilded and painted pillars of carved wood supported a roof far above our heads; and the roof was made from woven bamboo covered by waterproof silk. Ropes braced the structure, and I realized this was a single great yurt, greater by far than any I had imagined, and the floor beneath my feet was of polished wood, glowing like honey under the light of those lanterns and more and more flickered into life as we walked forward.\n\n\"Come, my bride,\" the Khagan smiled down at me and nervous now, I clung to his hand for around us more and more people thronged in, chattering and talking and eyeing me with great curiosity, deferential to the Khagan as his guards formed a circle around us as we moved to the dais at the head of this great tented hall and music was playing now.\n\nNot the music of the steppe, but Han music, atonal and strangely beautiful. There were rows of tables at which everyone was taking seats, hundreds of seats; and the Khagan lead me through them, pausing here and there to speak to a bowing warrior. He led me up the steps to a dais that sat high above everyone, looking down over their heads, a sea of upturned faces as the Khagan took his seat and gestured to me to take the seat beside him as his First Wife sat on my other side.\n\nNow his wives and concubines were filing in, seated below us and to one side. To the other were the generals and the leaders, more hastily arriving as if they had been summoned from elsewhere. The great tent was a sea of color and noise, great bursts of chatter, calls and cries, a feast, an ikhudar such as my father had held but on a vastly larger scale -- and I, who had been sent as a mere gift to the Khagan, I sat at the head of this hall on the raised dais beside the Khagan himself and many were the curious glances that came my way.\n\nFood and drink were served by attendants, lavish in its quantity and now, for the first time, I tasted the dishes of the Han that I had rejected on that long journey here. Strange dishes and strange flavors, exotic, deliciously spiced, melting on the tongue, and I ate of them sparingly, as I drank sparingly of the rice wine while beside me the Khagan summoned men to question, and I listened, for any knowledge in this strange new world was of use. A aged lama came forward, clad in the simple red robes that any lama wore, kneeling before the Khagan as all others had knelt and his gaze on me was thoughtful, his eyes deep with wisdom and with power.\n\n\"This is Ch\u00f6gyal Phagpa, Princess.\" The Khagan's hand squeezed mine. \"Chief of my Shaman's and one of my close advisors. He will perform the marriage ceremony shortly.\"\n\n\"Holiness.\" I bowed my head in respect, for the lama's of Tibet were well known among my people, though we worshipped the Sky Gods and not the Buddha.\n\n\"Princess Altani.\" He inclined his head and he knew my name and my rank. I noted that news travelled quickly within this Palace, and the Khagan smiled.\n\n\"We will follow only a little of tradition, for you have no family here but Khulan and Naran are of the Khorula and as near to family as you will have in my court. Borte will take you to them now. They will prepare you.\"\n\n\"Yes, Lord.\" Glad I was that I had drunk sparingly of the rice wine. I rose as Borte rose, and I followed her to the rear of the dais, passing through a doorway behind which servants awaited, together with two Mongol women resplendent in the silk dresses of the Han.\n\n\"Princess Altani,\" Borte said, and she too used my title. \"This is Naran, and this is Kulan, they are of the Khorula.\" She smiled at me. \"You mentioned your grandmother was of the Khorula.\"\n\n\"Yes, Lady,\" I said, bowing more than a little for she was First Wife. \"My grandfather took my grandmother from the yurts of the Cho'os-chakhan. Her name was Gan, and she was indeed bold for she was not first wife of my grandfather, the Chanyu of the Xiongnu, but her son, my father, succeeded as Chanyu and his son, my brother, is now Chanyu in turn.\" \n\n\"The Cho'os-chakhan?\" She who was named Khulan spoke, and her brow was wrinkled in thought. \"Gan. I remember the story of a beautiful young girl named Gan who was stolen, and she was a daughter of my Great-grandfather, for he was Khan of the Cho'os-chakhan at that time, and Gan was a younger sister of my grandfather; we are therefore related by blood.\"\n\n\"I too,\" Naran said, and she embraced me. \"For I and Khulan are cousins, thus you must be cousin to me too. I bid you welcome, sister.\"\n\n\"I too, sister,\" and Khulan embraced me in turn. \"As family to us you will be. Our knives will protect your back, for blood is blood.\"\n\n\"Blood is blood,\" I said, and I was happy to have found kin in this strange place, for friends were friends and could betray you, but blood was blood. \"I greet you, my sisters. My knife is yours.\"\n\nKhulan giggled them. \"Having seen you fight the Khagan himself, of that I am happy, sister, for I must tell you, I have seen even his warriors do worse than you in fighting him. I would not have dared fight as you did.\" She smiled. \"Borte would, but she is First Wife.\"\n\n\"Even I would not dare fight him as the Princess Altani fought him,\" Borte shook her head, smiling. \"In anger I have struck him, but never in such a fight. You will be talked about, Princess, and all will know your name.\" She clapped her hands sharply. \"And now, enough talk. We must dress the Princess Altani for her wedding.\"\n\n<center>* * * </center>\n\nThe wedding ceremony completed, shortened but not carried out in haste, the tea offered and drunk before all, the vows exchanged, I was a wife of the Khagan, the Great Khan, and surely my brother the fool who was now Chanyu of the Xiongnu would tremble in fear when word reached for him, for he knew me as I knew myself and he had dispatched me as a gift to the Khagan as an insult. He would know I would remember that insult and he would tremble, and I smiled at the thought.\n\n\"It is a great thing to be a wife of the Khagan, my little wildcat,\" the Khagan said. \"Are you now pleased with your fate, Princess Altani of the Xiongnu?\"\n\nGlancing sideways at him, I smiled and my smile, my happiness, it was not feigned. \n\n\"Lord,\" I murmured, and my hand raised his as I bowed my head and kissed his fingers. Those fingers of steel, thick and strong and calloused by the sword and all who saw whispered their approval, for my look was as a maiden who has been wedded to her favored suitor.\n\n\"Lord,\" I murmured again, and my words were for his ears and his alone. \"When my brother the Chanyu dispatched me as a gift, sending me to serve you as a concubine, I dreaded my fate and my heart was bitter. But now, chance and the good wishes of the eternal blue sky gods have given me to you as a wife and I have looked upon you and you have vanquished me as a Xiongnu maiden, even one of the royal blood such as I, should be vanquished, and I am indeed pleased and honored with my fate, Lord.\"",
        "I looked up then, into his eyes and they were eyes such as the guilty and fearful would quail before, but I was neither guilty nor fearful. \"Lord, I have sworn to you as wife and also sworn myself to you as a warrior of the Xiongnu swears to the Chanyu. I am not Han, who break their oath without thought or care. I am not Mongol, except for my Khorula blood. I am Xiongnu and my word is my pride and my honor and always I will speak the truth to you as I see it, for to speak untruths is dishonor beyond measure.\"\n\nI smiled then. \"And so, Lord, I tell you that I am well pleased with my fate. To be even the most junior wife of the Lord of the Steppe, that is a fate and an honor beyond any I had ever dreamed and you are a man beyond any I have dreamed of.\"\n\nThe Khagan's eyes held mine for a long moment, and it was as if he peered into my soul, and then he nodded. \"It is well, Princess Altani. I am indeed pleased to take you as wife, and you will have my favor.\" He smiled. \"For this is not a marriage of diplomacy or to cement ties with another clan. This is a marriage of the heart, for I desire you, Princess. I desire you with my heart.\"\n\n\"As do I, Lord,\" I breathed, and there was a long moment where he looked upon me and I looked back and our eyes were for each other only and I saw he spoke truly, as did I. \"Although in taking me as your wife, you weld the Xiongnu to your banner, for all Xiongnu know how and why I was sent to you, and they will see you taking me as wife to be a great honor and they will praise your name.\" And laugh at my brother the fool, but while they would laugh, they would not break their vows and my brother had achieved his intent. He was safe, though he would know it not.\n\nI smiled now. \"In wedding me, you have wedded the Xiongnu to you, Lord, whether you willed it or not.\" For I knew my people as I knew myself.\n\n\"I take not the Xiongnu to my bed, little wildcat.\" The Khagan laughed, and his laughter was the deep-bellied laugh of true amusement. \"I take you, and rather would I take you to my bed now, but Duty calls. We must tarry awhile to honor our wedding guests.\"\n\nAnd tarry a while we did, for many would speak with the Khagan. Many would come forward to bow and offer their congratulations to the Great Khan of all and his newest wife. Many were the exchanges of bows, and many were the curious glances at this Princess from the far distant steppes beyond the great mountains to the west. \n\n\"My Chancellor, Wu Sheng.\" The Khagan looked down at the silk-clad Han of high rank who knelt before him. Han, not Mongol, and I trusted not the Han for even ruled by the Mongols, they sought power and wielded it as deviously as ever they had under the Emperors of their own blood. \n\nBows and platitudes exchanged, this Wu Sheng returned to his table having examined me with his inscrutable eyes. My own eyes watched and noted that Phagpa did not care for this Wu Sheng. Nor did Wu Sheng care for Phagpa, and the Khagan noted the direction my eyes took.\n\n\"It is good that they hate each other,\" he whispered, his eyes unsmiling. \"Phagpa is truly loyal to me. Wu Sheng is a master of finance, but loyal to me he is not. He is loyal to greed and greed alone and he would serve another as willingly as he serves me. Remember, Altani, this Wu Sheng is never to be trusted.\"\n\nI looked at this Wu Sheng, and I would remember, but then a troupe of Han girls floated out before us, all flowing silk, graceful movements and voices singing the songs of the Han as the musicians played. This I did not enjoy, for the songs of the Han were not as music to my ears and perhaps my face was not as expressionless as I thought.\n\n\"The Princess does not care for these songs?\" Wu Sheng directed the question towards me and it was not as if I could not answer.\n\n\"Unused I am to such beauty,\" I said in reply. \"My people do not often hear the music and songs of the Han.\" \n\n\"Perhaps the Princess would care rather to sing for us?\" Wu Sheng bowed, his voice raised to carry, his tone humble, but his eyes were malicious and I would remember, for this was my wedding and he sought to humiliate me before all, thinking that I did not have the accomplishments of these Han concubines with their songs and their artful graces and their tinkling inconsequentialities.\n\nI bowed my head, and perhaps all present expected me to make my excuses, for the singing of the people of the steppe is not as the music of the Han. Perhaps Wu Sheng did not know that the Xiongnu were not as the Mongols or the Tartars. My father and my grandfather had sought to educate my brother and I in the ways of others beyond our tribe. While my brother had disdained much, I had done my best. Thus I had the reading and the writing of the Han and of the Tibetans, and I could speak the languages of the Mongol, the Han, the Tibetans and of the Tartars a little. \n\nAlso, the old lama from Tibet who had served my grandfather and my father since he had wandered into our camp many years before I was born had taught me more than a little of the prayers and songs of Tibet, and of the saying and teachings of the Buddha and the Bodhisattvas. I had also noted that this Wu Sheng and Phagpa disliked each other, and I smiled, for in this moment I saw an opportunity to cultivate this Phagpa who was a favored and powerful servant of the Khagan's. Perhaps also I would show this Wu Sheng that I was not the simple girl from the steppe that he took me for.\n\nI glanced sideways at the Khagan, and he saw my eyes and he smiled. \"Not the arrows, my little zerleg muur, my wildcat,\" he said. \"Not for this Han.\"\n\nWu Sheng paled a little, and perhaps he had already heard of the fate of Jiang Shunfu. If he had, so much the better.\n\n\"Lord, may I sing?\" I asked the Khagan. \"I know not the ways of this court, but if it is permitted, and the Honorable Chancellor wishes me to sing in honor of my wedding night, it would give me great pleasure to sing for you and for your Lords and Generals and all your guests.\"\n\n\"Do not embarrass yourself, little wildcat,\" the Khagan's voice was a whisper, his hand on mine. I could see he was preparing to cut this short, and I did not want that, for had not my voice been praised by my people often. And my people did not flatter even their rulers or the daughters of their rulers, for we were the Xiongnu, and we had honor and pride. We did not flinch from the truth.\n\n\"I will not embarrass myself or you, Lord, my husband,\" I whispered, and my heart thrilled that I was now indeed a wife of the Khagan. His most junior wife, yet I was a wife, and that had not been my brother's intent. \n\nPerhaps, perhaps I could aspire to more but I would not hope. Yet I would not meekly acquiesce to the malicious barb of this Wu Sheng, powerful though he was and I had seen the glances exchanged between he and Phagpa, and in that exchange of glances, I had seen my path. \"Permit me to sing.\"\n\nFor a long moment the Khagan looked at me and then, slowly, he nodded. \"There is more to you, my little wildcat, than I thought at first or even at second glance. You have the true courage. Do not bring embarrassment on yourself.\" He hesitated a second and his look now was implacable. \"Or on me, and this I will tell you once only, my newest wife.\"\n\nHe stood. He clapped his hands once. In an instant that great tented hall was silent. Silent enough that the night breeze whispering across the silk of the roof could be heard and in the distance, a hunting owl called, and that was an omen that was good.\n\n\"In honor of our wedding night, and at the request of the Chancellor Wu Sheng, who has praised the beauty of my wife's voice, the Princess Altani will sing.\" He sat, and his look said that if I embarrassed him in this, I would have pushed my luck far indeed on this night, for one did not embarrass the Khagan and escape without punishment. Banishment or death was the only reward for that, and now I had risked both more than once on this day. \n\nWu Sheng smiled, and I would not forget that smile, and my memory was long.\n\nI myself smiled, and my smile was not forced for I knew what I did. I stood. I stepped forward on that dais, stepping without haste, slowly, graciously, so as to be seen by all who were guested at this wedding. I placed my hands together in the namaskara as the lama had taught me, slowly, graciously, both hands close to my chest, palms and fingers against each other vertically, and many here knew the namaskara. Many were the puzzled looks, the softly whispered questions, and I was aware of Phagpa's eyes on me. \n\nMy eyes found Phagpa's in that silence before the first words fell from my lips. My eyes held Phagpa's as my lips quirked in a slight smile as I breathed in, breathed out, centering myself, clearing my mind before I sang. Those first words came without thought, my voice filling the great hall with a pure clarity that cut the air as a sword-blade cuts silk, sure and clean, without hesitation, and the words came without thought for this was a song I knew well. \n\nThe words I sang were old, an ancient song from centuries past that the aged and revered lama of Tibet who had lived in the yurts of my people as an honored guest had taught me long ago, when I was but a child. I had sung this song many a time, first for my grandfather's guests and then for my father's, and also at times for the gatherings of my people, so I was not without experience. Also, I had sung to gatherings of our people and the old lama had taught me well, so that my voice carried effortlessly to the furthest walls.\n\nPhagpa's astonishment as he heard those first words fall from my lips was great indeed. In a moment, no sound but my voice was heard throughout that great tented hall. And indeed, it was not the music of the Han, nor was it a song of the steppe, for this was the Heart Sutra, and many were the widened eyes as they recognized those first words that fell from my lips for I sang them in the language of the Han that almost all here in this great hall knew well.\n\n(Note to readers: If you want to listen to the actual song while you read this, search for \"The Heart Sutra (\u5fc3\u7ecf) by Faye Wong (\u738b\u83f2) with English Subtitles (High Quality Audio)\" on YouTube)\n\n<center>\u89c2\u81ea\u5728\u83e9\u8428 \u884c\u6df1\u822c\u82e5\u83e0\u841d\u871c\u591a\u65f6\n\ngu\u0101n z\u00ec z\u00e0i p\u00fa s\u00e0 h\u00e1ng sh\u0113n b\u0101n ru\u00f2 b\u014d lu\u00f3 m\u00ec du\u014d sh\u00ed \n\nWhen Avalokiteshvara Boddhisattva was meditating upon the pursuit of transcendent wisdom\n\n\u7167\u89c1\u4e94\u8574\u7686\u7a7a\n\nzh\u00e0o ji\u00e0n w\u01d4 y\u00f9n ji\u0113 k\u014dng \n\nHe came to the realization that form is nothing more than illusion\n\n\u5ea6\u4e00\u5207\u82e6\u5384\n\nd\u00f9 y\u012b qi\u0113 k\u01d4 \u00e8 \n\nAnd so he freed himself from all suffering and dissatisfaction.\n\n\u820d\u5229\u5b50\uff0c\u8272\u4e0d\u5f02\u7a7a \u7a7a\u4e0d\u5f02\u8272\n\nsh\u011b l\u00ec z\u01d0\uff0cs\u00e8 b\u00fa y\u00ec k\u014dng k\u014dng b\u00fa y\u00ec s\u00e8 \n\nShariputra: Form does not differ from emptiness; emptiness does not differ from form.\n\n\u8272\u5373\u662f\u7a7a\uff0c\u7a7a\u5373\u662f\u8272\n\ns\u00e8 j\u00ed sh\u00ec k\u014dng, k\u014dng j\u00ed sh\u00ec s\u00e8 \n\nForm itself is emptiness, emptiness itself is form.\n\n\u53d7\u60f3\u884c\u8bc6\uff0c\u4ea6\u590d\u5982\u662f\n\nsh\u00f2u xi\u01ceng x\u00edng sh\u00ed, y\u00ec f\u00f9 r\u00fa sh\u00ec \n\nSo too are feelings, perceptions, impulses, and consciousness, neither existing nor not existing.\n\n\u820d\u5229\u5b50\uff0c\u662f\u8bf8\u6cd5\u7a7a\u76f8\n\nsh\u011b l\u00ec z\u01d0\uff0csh\u00ec zh\u016b f\u01ce k\u014dng xi\u00e0ng \n\nShariputra, everything is empty, non-existent.\n\n\u4e0d\u751f\u4e0d\u706d\uff0c\u4e0d\u57a2\u4e0d\u51c0\uff0c\u4e0d\u589e\u4e0d\u51cf\n\nb\u00fa sh\u0113ng b\u00fa mi\u00e8\uff0cb\u00fa g\u00f2u b\u00fa j\u00ecng\uff0cb\u00fa z\u0113ng b\u00fa ji\u01cen\n\nNo birth, no death, no purity, no impurity; nothing increases, nothing diminishes.\n\n\u662f\u6545\u7a7a\u4e2d\u65e0\u8272 \u65e0\u53d7\u60f3\u884c\u8bc6\n\nsh\u00ec g\u00f9 k\u014dng zh\u014dng w\u00fa s\u00e8 w\u00fa sh\u00f2u xi\u01ceng h\u00e1ng sh\u00ed \n\nTherefore, in meditation there is no form, no desire, no thought, no consciousness\n\n\u65e0\u773c\u8033\u9f3b\u820c\u8eab\u610f\n\nw\u00fa y\u01cen \u011br b\u00ed sh\u00e9 sh\u0113n y\u00ec \n\nThe eyes, ears, nose, tongue, body, mind; all are irrelevant.\n\n\u65e0\u8272\u58f0\u9999\u5473\u89e6\u6cd5\n\nw\u00fa s\u00e8 sh\u0113ng xi\u0101ng w\u00e8i ch\u00f9 f\u01ce \n\nSeeing, hearing, smelling, tasting, touching, thinking; all are useless\n\n\u65e0\u773c\u754c\uff0c\u4e43\u81f3\u65e0\u610f\u8bc6\u754c\n\nw\u00fa y\u01cen ji\u00e8\uff0cn\u01cei zh\u00ec w\u00fa y\u00ec sh\u00ed ji\u00e8 \n\nEverything that we see, hear, smell, taste, touch or imagine has no significance\n\n\u65e0\u65e0\u660e\uff0c\u4ea6\u65e0\u65e0\u660e\u5c3d\n\nw\u00fa w\u00fa m\u00edng\uff0cy\u00ec w\u00fa w\u00fa m\u00edng j\u00ecn \n\nThere is no ignorance; there is no cure for ignorance\n\n\u4e43\u81f3\u65e0\u8001\u6b7b \u4ea6\u65e0\u8001\u6b7b\u5c3d\n\nn\u01cei zh\u00ec w\u00fa l\u01ceo s\u01d0, y\u00ec w\u00fa l\u01ceo s\u01d0 j\u00ecn \n\nThere is no aging, no death; there is no cure for aging or death.\n\n\u65e0\u82e6\u96c6\u706d\u9053\n\nw\u00fa k\u01d4 j\u00ed mi\u00e8 d\u00e0o \n\nThere is no way to end one's unfulfillment, no way to ever feel satisfied, no path to follow\n\n\u65e0\u667a\u4ea6\u65e0\u6240\u5f97\n\nw\u00fa zh\u00ec y\u00ec w\u00fa su\u01d2 d\u00e9 \n\nWisdom cannot be attained, there is no wisdom to be attained.\n\n\u4ee5\u65e0\u6240\u5f97\u6545 \u83e9\u63d0\u8428\u57f5\n\ny\u01d0 w\u00fa su\u01d2 d\u00e9 g\u00f9 p\u00fa t\u00ed s\u00e0 du\u01d2\n\nBy seeking nothing\n\n\u4f9d\u822c\u82e5\u83e0\u841d\u871c\u591a\u6545\n\ny\u012b b\u0101n ru\u00f2 b\u014d lu\u00f3 m\u00ec du\u014d g\u00f9 \n\nThe Bodhisattva through reliance on transcendent wisdom is unimpeded in his mind.\n\n\u5fc3\u65e0\u6302\u788d \u65e0\u6302\u788d\u6545 \u65e0\u6709\u6050\u6016\n\nx\u012bn w\u00fa gu\u00e0 \u00e0i, w\u00fa gu\u00e0 \u00e0i g\u00f9, w\u00fa y\u01d2u k\u01d2ng b\u00f9 \n\nHis heart is free, and when the heart is free, there is no fear,\n\n\u8fdc\u79bb\u98a0\u5012\u68a6\u60f3\n\nyu\u01cen l\u00ed di\u0101n d\u01ceo m\u00e8ng xi\u01ceng \n\nAbandoning false dreams.\n\n\u7a76\u7adf\u6d85\u76d8\n\nji\u016b j\u00ecng ni\u00e8 p\u00e1n \n\nHe can achieve Nirvana.\n\n\u4e09\u4e16\u8bf8\u4f5b \u4f9d\u822c\u82e5\u83e0\u841d\u871c\u591a\u6545\n\ns\u0101n sh\u00ec zh\u016b f\u00f3 y\u012b b\u0101n ru\u00f2 b\u014d lu\u00f3 m\u00ec du\u014d g\u00f9 \n\nThus the Buddhas of the three worlds attain perfect wisdom.\n\n\u5f97\u963f\u8028\u591a\u7f57\u4e09\u85d0\u4e09\u83e9\u63d0\n\nd\u00e9 \u0101 n\u00f2u du\u014d lu\u00f3 s\u0101n mi\u01ceo s\u0101n p\u00fa t\u00ed \n\nAnd awaken to complete enlightenment\n\n\u6545\u77e5\u822c\u82e5\u83e0\u841d\u871c\u591a \u662f\u5927\u795e\u5492\n\ng\u00f9 zh\u012b b\u0101n ru\u00f2 b\u014d lu\u00f3 m\u00ec du\u014d: sh\u00ec d\u00e0 sh\u00e9n zh\u00f2u \n\nThe perfect wisdom is this: the great spiritual mantra\n\n\u662f\u5927\u660e\u5492\n\nsh\u00ec d\u00e0 m\u00edng zh\u00f2u \n\nthe Great Mantra of Awareness\n\n\u662f\u65e0\u4e0a\u5492\n\nsh\u00ec w\u00fa sh\u00e0ng zh\u00f2u \n\nthe Highest Mantra,\n\n\u662f\u65e0\u7b49\u7b49\u5492\n\nsh\u00ec w\u00fa d\u011bng d\u011bng zh\u00f2u \n\nA Unique Mantra\n\n\u80fd\u9664\u4e00\u5207\u82e6\n\nn\u00e9ng ch\u00fa y\u012b qi\u0113 k\u01d4 \n\nThe cure for all suffering\n\n\u771f\u5b9e\u4e0d\u865a\n\nzh\u0113n sh\u00ed b\u00fa x\u016b \n\nThe ultimate truth.\n\n\u6545\u8bf4\u822c\u82e5\u83e0\u841d\u871c\u591a\u5492\n\ng\u00f9 shu\u014d b\u0101n ru\u00f2 b\u014d lu\u00f3 m\u00ec du\u014d zh\u00f2u\n\nRecite the Mantra of Perfect Wisdom.\n\n\u5373\u8bf4\u5492\u66f0\n\nj\u00ed shu\u014d zh\u00f2u yu\u0113 \n\nRecite it like this:\n\n\u63ed\u8c1b\u63ed\u8c1b \u6ce2\u7f57\u63ed\u8c1b\u6ce2\u7f57\u50e7\u63ed\u8c1b\u83e9\u63d0\u8428\u5a46\u8bc3\n\nji\u0113 d\u00ec ji\u0113 d\u00ec b\u014d lu\u00f3 ji\u0113 d\u00ec b\u014d lu\u00f3 s\u0113ng ji\u0113 d\u00ec p\u00fa t\u00ed s\u00e0 p\u00f3 h\u0113 Bodhi svaha!\n\nGone, Gone, Gone Beyond, Gone Completely Beyond, Enlightened. So be it!</center>\n\nMy voice faded away with that last note, and silence fell. A long silence. I bowed my head to the hall, I bowed a little to Wu Sheng, I bowed rather more deeply to Phagpa, and as I seated myself, I bowed my head deeply indeed to the Khagan, my expression unchanged, serene, for as always that song had filled my mind with great peace and calm and all disquiet was banished.\n\n\"Princess Altani, all here are greatly honored.\" It was Phagpa's voice that broke the long silence and he bowed low, bowed to me until his forehead brushed the floor. \n\nAt that, there was a low surration of astonishment. Behind him the seated lamas and shamans in their robes of dark red bowed their heads with his, their voices humming quietly as their foreheads too brushed the floor, their slow chant echoing my last words again and again, and many were the heads bowed together with theirs in reverence at the words of my song. \n\n<center>\u63ed\u8c1b\u63ed\u8c1b \u6ce2\u7f57\u63ed\u8c1b\u6ce2\u7f57\u50e7\u63ed\u8c1b\u83e9\u63d0\u8428\u5a46\u8bc3\n\nji\u0113 d\u00ec ji\u0113 d\u00ec b\u014d lu\u00f3 ji\u0113 d\u00ec b\u014d lu\u00f3 s\u0113ng ji\u0113 d\u00ec p\u00fa t\u00ed s\u00e0 p\u00f3 h\u0113 Bodhi svaha!\n\nGone, Gone, Gone Beyond, Gone Completely Beyond, Enlightened. So be it!</center>\n\n<center>\u63ed\u8c1b\u63ed\u8c1b \u6ce2\u7f57\u63ed\u8c1b\u6ce2\u7f57\u50e7\u63ed\u8c1b\u83e9\u63d0\u8428\u5a46\u8bc3\n\nji\u0113 d\u00ec ji\u0113 d\u00ec b\u014d lu\u00f3 ji\u0113 d\u00ec b\u014d lu\u00f3 s\u0113ng ji\u0113 d\u00ec p\u00fa t\u00ed s\u00e0 p\u00f3 h\u0113 Bodhi svaha!\n\nGone, Gone, Gone Beyond, Gone Completely Beyond, Enlightened. So be it!</center>\n\nTheir murmured chant faded to silence as Borte, the Khagan's First Wife turned her head and it was she who spoke next, her voice clear and carrying, and she too bowed her head to me. A bow that I returned rather more deeply, for was I not most Junior Wife, and was she not First Wife.\n\n\"Your voice and your song does all here who have heard you great honor, Princess.\"\n\nNow a soft murmur of applause and approval filled the great hall. My cheeks flushed a little pink for I had never before sung for such an audience as this. These were the Khagan's chief warriors, his generals, the men who administered his empire and their women.\n\nThe Khagan raised his hand and once more all was silent in an instant. \n\n\"I believe you asked my wife to sing?\" The Khagan was amused as he glanced at Wu Sheng. \"The Princess Altani aims as well with her song as she aims with her arrows. Perhaps you should reward her with a wedding gift, Wu Sheng, lest I encourage the Princess to display her skill at archery once more.\" His laughter said he was joking. His barbed words said that he was well aware of Wu Sheng's intent and I was gladdened but my expression remained serene and unchanging.\n\n\"The beauty of the Princess's voice and the wisdom of her choice of song are as the beauty of her person.\" Wu Sheng bowed low, hiding his face, but I had seen his eyes, and I had no friend there. \"A suitable gift will be awaiting the Princess come the morn.\"\n\n\"Let it be so,\" the Khagan spoke, and his glance said that Wu Sheng should take heed. \"And now, what is our next entertainment?\" For this was an ikhudur on a grand and lavish scale and the Khagan was in a jovial mood it seemed.\n\n\"He is not always thus,\" Borte whispered in my ear as dancing girls appeared. Lithe young girls whose skin was of a dark brown, unlike any people I had seen before. Those girls were clad only in minuscule loincloths, narrow bands of silk binding their small breasts, and they danced as I had not seen girls dance before, their movements assuredly designed to arouse the excitement of men.\n\n\"He is not?\" I glanced at her. My question was rhetorical, for I had not assumed he was. My father had been a man of many moods. I knew of the pressures and demands that rule brought, for had I not sat at my father's right hand as he gave judgement and issued commands? My father had ruled but one tribe, where the Khagan ruled many and the Han besides, and the Han were like ants covering the earth.\n\n\"Tonight, thanks to you, he is relaxed and enjoying himself. You have taken his mind off the demands of ruling for a night. We, his wives, that is what we do, but often it is impossible. There are demands on him, Altani. So many demands.\" She called me by my name, as one woman to another, and her hand rested on my shoulder as one does with a younger sister. \"You are new here. In you he sees the freedom of the steppe, and he longs for that freedom always.\"\n\n\"Can he not ride the steppe?\" I asked. \"He is the Khagan. None would question him.\"\n\n\"He rules an empire of a vastness that is difficult for the mind to imagine and each day is filled with countless problems and decisions,\" Borte said. \"There is much for you to learn and many dangers in this court. You have earned his respect this day and this night, but that respect will draw the enmity and envy of others. I think you have already seen that. Remember, Altani, you have kin here, you are of the Khorulas and thus also of my own blood for I too have Khorula ancestors, more distant than yours but nevertheless there. Thus I count you as younger sister, but be careful who you trust. Be careful of your words, for in this place anything you say may be heard and twisted and used against you. Be very careful.\" \n\nHer hand squeezed my shoulder tightly. \"Bare is sisterless back in these cities of the conquered, Altani, but you have sisters here and you may come to me at will. I serve the Khagan in all things and at this time you are in his favor, and indeed, you have sworn to him as no other of his wives or his concubines have, even I.\" \n\nShe looked me in the eye, and in her words were truth. \"The Khagan has many daughters but as yet no sons and not for want of trying. In that I have failed him. Should you give him a son, Altani, you will be a power in this court and thus also in great danger. Many will want you to rise and many will seek your favor while others will desire your fall and will seek to bring you down, for there are those who are the enemies of the Khagan and would wish to take his place.\"\n\n\"Should I be so fortunate as to bear a son,\" I said, my eyes meeting hers. \"I will always honor and respect you as First Wife and Older Sister to me, for that is who you are, and I count myself your younger sister in all things and always I will ask your advice.\" I smiled now. \"I would be fortunate indeed to give the Khagan a son where others have failed, but I will pray for this.\"",
        "\"We must hope,\" Borte said, and I saw the direction her glance took. \"You have won him over with a song, and to have him on your side is something many have tried and few have succeeded in doing; but now he looks, I believe, favorably on you. He and I see many things the same. He is truly loyal to the Khagan, though some doubt that and many hate and fear Phagpa for there is a dark side to him.\"\n\nHer face was lined. I saw now that those lines were of worry and fear. \"I care for my Lord, Altani. My only desire is to serve him and to serve our people and always, always I fear for him and for our people, for we of the steppe, we Mongol, Xiongnu and the others who are our kin, we are but a single drop in this sea of Han we rule, and we must stand ever together, although some do not see the necessity of this, and they are fools. \" \n\nShe looked now into my eyes, searching my soul, and she seemed to find something that she was looking for. \"In you, there lies the strength and purity of the steppe, Altani. Give of that strength and purity to my Lord. You have pledged to him as none other of his wives and women have, and I saw and heard the truth in that pledge and so too did the Khagan, or he would not have accepted your vow as he did.\"\n\nAgain, I bowed my head. \"I will, my Lady. I have pledged my word, and I am Xiongnu. We are loyal to our word once given, and, too, their is Khorula blood in me.\"\n\nBorte looked at me and I looked at her and I read her as she read me. Strength lay in her. The strength of the women of the steppe, for even for a daughter of the Chanyu such as I it was a hard life, and the weak did not survive. Strength and courage and loyalty. Above all, loyalty and I bowed again, wordless, and there was no need for more words between us, but I spoke regardless.\n\n\"As First Wife and as an older sister and as a mother you will be to me, Lady,\" I murmured. \"Always you will have my respect and my willing obedience to your wishes and commands as First Wife, and in this I pledge you my word.\"\n\nShe nodded, once, and now she glanced past me. \"I will summon attendants,\" she said, and her words were spoken to the Khagan.\n\n\"There is no need,\" the Khagan said, standing, resting his hand on my slender shoulder as I stood with him. \"It will be my pleasure to ready the Princess Altani for my bed tonight.\" \n\nHe smiled at his First Wife, and it was the smile of a husband who knew his woman well. \"She will remain with me until the morn. There is no need to send someone to remove her from my bed. Come for her after the sun rises, Borte and take her into your care.\"\n\n\"Lord.\" First Wife bowed her head low in obedience, and all watched us as the Khagan led me from the wedding feast. Behind us the revelry rose anew, and it was as with a wedding feast of my own people. Long would it continue into the night, many would be the unconscious bodies lying on the rugs and on the polished wooden floors come the morn. No doubt some of those bodies would be bodies indeed if these Mongols followed similar customs to my own people.\n\nA wedding was not a wedding unless blood was spilt, and with warriors such as these, and women as beautiful as the Khagan's many servant girls, there would be fights, and those fights would see blood spilt. With warriors such as the Khagan's, where blood was spilt, death soon followed, and I smiled, for that blood and those deaths would bring honor to our wedding. I was glad for that as I walked with the Khagan and many eyes were on me, no doubt curious as to this new Xiongnu bride.\n\n<center>* * * </center>\n\nBefore and around and behind us, the picked guards of the Khagan strode, ever alert, swords in hand, eyes constantly roving as my father's guards eyes had constantly roved, ever searching for any danger, any threat. Behind them, and close to my back, strode Chingay with a dozen of his picked men and in the midst of those guards, my hand in the Khagan's, I walked the hallways of a palace such as I had never imagined. My eyes roamed, ever curious for it had never dawned on me that men's hands could create a single building as enormous as this.\n\nHallway after hallway we trod, long corridors, great halls whose purpose I could not imagine, verdant courtyards paved with stone walkways, fountains with flowing water, lanterns hung, and always around us the guards, moving ahead and behind and around us. Beside me the Khagan strode silently, and it was not my place to speak unless I was bidden. Curious though I was at all we passed through, I restrained that curiosity, walking silently at the Kagan's side; silent as a woman should be unless her husband or her father bids her speak, although I was not always so obedient.\n\n\"Wait, Lord, Lady,\" one of the bodyguards spoke as we reached two carved wooden doors flung wide, guards to either side and half a dozen pairs of the guards who had escorted us from the banquet hall moved ahead through the doorway. Thus had my father's guards moved ahead of my father as he entered a yurt.\n\nI waited, my hand in the Khagan's as if it were a child's, and my fear and my excitement rose within me.\n\n\"Patience, little wildcat,\" the Khagan murmured, smiling as I glanced up at him and now I was shy, for I had never been with a man, as befits a Princess who must retain her virtue for her husband and for her wedding night.\n\n\"All is safe, Lord.\" The guards emerged.\n\n\"Come, my Princess.\" The Khagan led me through the doors and into such a room as I had never seen before. There had been much in this Xanadu, this Summer Palace of the Khagan, that had been beyond anything that I imagined; and this room, this chamber of pleasure, for that is what it was, it was beyond anything my eyes had yet seen. \n\nUsed I was to sleeping in my father's yurts, the walls hung with tapestries, the ground lain over with thick rugs of knotted wool, a burning brazier keeping all warm through the long cold of winter on the steppe. Used I was to sleeping on thick sheepskins and layers of felt, covered by blankets of wool. Used I was in the harsh frozen weeks of mid-winter to sleeping kneeling on my forearms and my knees to raise my body from the chill of the frozen ground that sucks the heat from the body even when overlain by thick layered felt and by woollen fleeces and blankets.\n\nThis room, this bedchamber, it was a room of such palatial splendor that my heart caught in my throat and my breath came in a gasp of astonishment.\n\n\"Do you enjoy my bedchamber, Princess?\" the Khagan smiled down at me as I gazed around in open admiration.\n\nWhile this room was in the midst of this great palace, it could almost have been the interior of my father's great yurt but twice, perhaps thrice the size, and for one man alone where my father's yurt was his and whichever of his wives and family he chose to eat and sleep there with him. My father's pride and joy was a single silk painting of the Han, brought to him by the Han \"princess\" gifted to him when he had succeeded as Chanyu, and I had never met her, for she had died before I was born. \n\nOf a weakness of the lungs, my mother had said. I would not have put it past my mother to have rid herself of competition to her children, for my father had treasured that princess of the Han for her frail and delicate beauty. At times when he turned maudlin with the heady strength of the airag he would talk to me of her, for it was to me my father turned rather than my brother the fool; and always I listened, for even in his drink my father was a wise man, and words of great wisdom often fell from his lips.\n\nI gazed around me and how I wished my father was here, gifting his daughter to the Khagan and able to offer me those words laden with his wisdom and advice. For here, in this great City of Stone, this Xanadu, I was a stranger in a strange land, a swimmer in great waters far out of my depth and this room held me speechless, for anything I should say might work against me.\n\n\"It is a place of great beauty, Lord,\" I whispered at last, for indeed it was. Great beauty and yet a savage beauty that was not of the Han, and my heart thrilled within me.\n\nThose stone walls were painted white and hung with scored and damaged leather shields, bows and bow-cases of every sort, daggers, swords, axes, even spears. Between those weapons were colored paintings in the Han style, of horses and riders hunting, of strange mountains and flowing rivers, even of trees and flowers -- and those flowers were things of beauty beyond a vision. \n\nAt the far end, against one wall, a bed was placed, a large bed. A bed of carved wood overlain with layers of soft felt and sheets and cushions of silken white, and on the stand to one side of that bed were my sword, my knife, my bow and my quiver of arrows and against the wall stood my spear, all laid out as they had ever been close to me in my father's yurts -- and the sight reassured me for those weapons meant that the Khagan trusted me with his life. My heart swelled with pride at the honor done to me this night, with this simple gesture of trust in one hitherto unknown to the Khagan.\n\n\"Never have I seen such a sight as this, my Lord husband,\" I said as the Khagan closed and barred the wooden doors behind us with his own hands. We were alone now, his guards and Chingay's men, my own guards in truth now, they stood without.\n\n\"You will see this sight often in the nights to come, little wildcat,\" the Khagan had smiled. \"For beautiful and spirited as you are, you will be summoned often to my bed.\"\n\nNow my smile was shy, my cheeks pink, for I was a maiden and unused to being summoned to any man's bed. He chuckled at my shy embarrassment, watching me as I examined that room, unlike any yurt I had ever entered, and my father's yurt had been impressive indeed, needing a dozen carts to carry but the felt walls and roof. This room by itself dwarfed by far my father's greatest yurt, and it was merely one room in this great palace. \n\nGlancing at the Khagan, I wondered at my fate, for this was something I had never dreamed of. To be the Khagan's wife, albeit his most junior wife. Not one of his concubines, and of them there had been many and no doubt there were more. I was a wife of the Khagan, and this was beyond anything I had dreamed of and certainly this had not been my fool of a brother's intent. The Khagan's first wife and I had already talked during the ikhudar, the wedding feast, and her I had understood, as she had understood me.\n\nI was of the steppe as his First Wife was, and I had given her the respect that a First Wife was owed. No usurper, I, and I had been at some pains to make that clear for I was new here, I was the most junior wife, and I was of the steppe -- but I was not of pure Mongol blood. I was Hu, I was Hun, I was Xiongnu and of that I was proud.\n\nFirst Wife, she had welcomed me, reassured me. Before all his wives and concubines she had called me Little Sister, and my heart had overflowed with gratitude and relief. Those other Mongol wives, they had welcomed me also and those two of the Khorula's, they had acknowledged me as kin. They knew my grandmother's family and they had welcomed me as sister, and with that welcome and that acknowledgement as kin, my status and place was assured.\n\nBut now, now I was in the Khagan's bedchamber, alone. He and I, and as he turned and gazed at me, his smile grew and his arousal grew visibly with that smile. Now I was both filled with desire and afraid, for the time to defend my virtue had passed. Now was the time to surrender myself, to be taken as a maiden is taken -- and I was both eager and more than a little fearful for I knew his strength, as one who had fought him and been vanquished. Also, I had felt his arousal, and he had been large and hard, as a stallion is for a mare. \n\n\"Come, be not afraid, little maiden,\" the Khagan said, extending one hand to me and I gave him my hand, trembling a little now, following as he led me through an archway and into yet another room of stone, the floor paved with marble. In the center of that floor was set a giant waterhole from which steam rose, and my eyes widened in amazement.\n\n\"It is called a bath, little wildcat,\" the Khagan smiled. \"Where we of the steppe bathe in rivers and icy lakes and in the snow, the Han build these from wood or stone and heat the water, and delightful they are.\" He chuckled. \"Is it any wonder we defeated those Han, for they are soft and unused to hardship such as we of the steppe know it.\"\n\nHis hands sought the fastenings of my dress, my fine wedding dress of red felt which I still wore and my eyes gazed upwards into his. My protest that this was unfitting, that the Khagan should not do this, that protest died unspoken for his eyes and his face said that he did indeed want to do this -- and so I stood unmoving as his fingers completed the unfastening, as his hands eased my dress from my shoulders to discard on the marble flagstones.\n\n\"Hush.\" One finger touched my lips as I began to bend for I treasured this dress of pure red felt as my wedding dress, and I would not see it despoiled by the dirt of the floor on which we stood, although those flagstones gleamed and never had I see such cleanliness.\n\n\"There are servants here, little wildcat. A wife of the Khagan has no need to labor except at that which pleases the Khagan. Servants will take your clothes, servants will bring you fresh clothes in the morning. Borte will come to you and guide you, and tomorrow you will have your own maids and servants and your own suite of rooms near to Borte and your Khorula sisters. Chingay and his men will guard you well. You need have no fear that you will be left unguarded, unguided and untended. But for tonight, for our wedding night, it is I that will guide and tend you, my Altani, my beautiful little wildcat.\"\n\nHis lips spoke my name gently, as if he was tasting me, and I kissed his finger then, a gentle kiss. My smile was tremulous for I was fearful and his reassurance and his care for me meant much as his fingers ran over body, caressing me through my leather tunic; and he held me close, he buried his face in my hair, in my neck and I was ashamed, for those many concubines, those other wives, they had that smell of scented soap, of perfumes, their hair shining and silky, their complexions white and flawless. \n\nI knew my hair, in its braids decorated with pearls and gold and silver coins, was matted and thick with oil and smoke, my face and arms burnt brown from those long days and weeks of travel, and I did not have that pale delicacy of his Han concubines. I had come straight from the road and that bout with the Khagan to my wedding feast, and now to my wedding bed. Of that I was all too conscious, for did not the Khagan prefer his concubines silky and smooth, freshly washed and perfumed, reeking not of horses and dirt and sweat.\n\n\"Ahhhhhh,\" the Khagan breathed, inhaling deeply, his face buried in my hair, his hands running over the black leather of my tunic. \"Altani, my princess, my little wildcat, you bring to me the scent of the steppe. The scent of our people. Sweat and horses and the smoke of our cooking fires and the steel of our weapons, the milk of our sheep and the salt-blood of our mares on your lips.\" He lifted his head, his eyes looked down into mine and there was a deep longing there.\n\n\"We have lost much in this conquest of the Han, in this Great Khanate, for while we have conquered from horseback, while my armies ride ever onwards, we cannot rule an Empire from the backs of our horses. It is the dismounting and governing that is hard, and in adopting their ways, we weaken ourselves. It is such as you, my little wildcat, who remind me of this. It is something I need to be reminded of often, for it is all too easy for our people to lose ourselves in these sybaritic luxuries. At times I yearn for the steppe, for the freedom of riding with my warriors under the blue skies, with nothing but the grasslands as far as the eye can see and the blue sky overhead.\"\n\n\"Let me remind you now, my Lord husband,\" I murmured, no longer ashamed of that familiar scent of sweat and horse and smoke that permeated my hair, my skin, my clothing. \"Forget this bath, forget these Han affectations and take me now, Lord. Take me as you would have taken a woman of the Xiongnu whom you captured in the old days. Take me on the hard ground beneath our feet as you would have taken a wife newly stolen from her father's yurts and let me scream for you, let me struggle and fight as you take me, let me remind you of the old days and the old ways, Lord. Let me give you that, if that is your desire, Lord.\"\n\nMy hand reached down and held him where he was swollen and rigid beneath those leather breeches that he wore, and they were the leather of the Mongol horsemen, leather such as my own people wore, even the women such as I. The Khagan wore not the silk robes of the Han, and I knew where his heart lay and I was gladdened, for this I could give him. In this I could lighten his load, ease his stress and make myself favored and my hand caressed him.\n\n\"Forget the ways of the Han on this night and take me in the old way, Lord. Let me give you that gift on our wedding night. Take me as you would have taken a maiden of my people in the old days. Let me remind you of what you are, and I shall be content.\"\n\nHe shuddered under the touch of my fingers. His eyes burned with desire. The power and strength and will in those eyes brought a weakness to my knees, a flood of heated excitement to my sex such that I knew I was melting with my own desire -- and I had seen men with women, I had heard the women talk. My own mother had advised me of this, and I had watched the stallions mate with the mares, the rams with the ewes. I knew this Khagan was as a great stallion, and on this night I was to be his mare.\n\n\"Take me, Lord,\" I breathed. \"Take me in the old way if that gives you pleasure, clasp me to you as you would clasp a daughter whom you have taken by force from her father's yurts.\"\n\n\"Little wildcat of the steppe,\" he breathed, and there was no laughter in his voice now, only the flaring of his nostrils and a quickening of his breathing as my fingers fumbled at the fastenings of my leather tunic. My hands pulled my tunic over my head. My hands unwrapped the binding that restrained my breasts. His hands joined mine, exposing my skin of pale olive, revealing the youthful firmness of my breasts. His hands sought my breasts, cupped them. Under his large hands my breasts of whose beauty I was so proud were small, tiny almost; and I shivered at his touch, my nipples swelling to a firmness that ached; and my knees weakened.\n\n\"You are beautiful, Altani,\" he breathed. \"I will take you indeed, but not as a maiden ravished from her father's yurts in the night. Rather I will take you as a wife willingly wedded, for you come to my bed as a wife, eagerly and willingly, and I will not spoil what should be for you a night of joy merely to slake my desire.\" His look now was one almost of anger. \"Your brother insulted you by offering his father Attila's daughter to me as a mere gift and not as a wife.\"\n\n\"Do not punish him for that, Lord,\" I breathed in sudden fear, for while I would have willingly killed him myself, that was now in the past, and he was my brother. \"He offered me to you in good faith, humbling himself and me to show his loyalty to you, and I came to you in obedience to his gifting.\"\n\nWhile I would have killed my brother to better rule my people myself, now that I was a wife of the Khagan, that would never be. I would never rule my people, and that was something that could not be changed. My destiny was in this room with me, and I would make the most of this, my fate. \n\nThe fate of my Khorula grandmother was mine now, and had not my grandmother's son become the Chanyu? Was I not now the Khagan's wife? A son of mine to the Khagan would succeed the Khagan, for he had no sons as yet, and new ambition flared bright within me, for was I not now at the center of the world, was I not the Khagan's wife? Power beyond any held by the Chanyu of the Xiongnu lay here, and so now lay I."
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "chinese",
        "chloetzang",
        "genghis khan",
        "historical",
        "mongols",
        "one night in xxx",
        "sacrifice",
        "shaman",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/one-night-in-xanadu"
}