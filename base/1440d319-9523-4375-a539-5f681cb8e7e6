{
    "title": "Ambiramus Ch. 03",
    "pages": [
        "A/N -- Hello everyone. Just a quick note of thanks for all the comments for the previous two chapters. Nice to read that people are enjoying this.\n\n*****\n\nMike chuckled, shaking his head. \"You're moving in with her already?\"\n\n\"Not yet. She asked, I said I would.\"\n\n\"It's not a little fast, is it?\"\n\n\"I'm not moving in tomorrow. Breaking my rental agreement will cost me too much money, so Cindy knows it will be a couple of months, at least. But I want to move in with her too.\"\n\n\"I knew it was already serious, but this sounds... you know, really serious.\"\n\n\"Meeting some of her friends at her apartment tonight. And Cindy will be joining me tomorrow at yours. Who else will be there?\"\n\nShrugging, he replied, \"The usual bunch.\"\n\n\"Long as it doesn't turn into one your fucking orgies. I get it, you and your friends like to fuck around, but it's awkward when I'm busy chatting with someone, then another guy walks up and starts fooling around. Seen more than one man sucking dick to last a lifetime, let alone walking into your bathroom to see some guy bent over getting fucked...\"\n\n\"I'm sure you're used to it by now.\"\n\n\"Just because I'm used to it...\" I trailed off and sighed. \"I'm sure my ex-wife did wonder if I was fucking around with you lot while we were married. Insinuated more than once about it when I got home steaming drunk. Fairly sure she was joking but... well, here we are now.\"\n\n\"Good thing we don't fuck drunk men. And I reckon you'd have knocked us out if trying it on, while no doubt being apologetic for knocking us out at the same time.\"\n\nLaughing, I also nodded my agreement. \"I'd buy you a case as an apology. Anyway, what time you want us around on Saturday?\"\n\n\"Make it mid-afternoon, around 3pm or so. Don't need to bring anything except yourselves. Food and drink will be provided. Bedrooms and lube if you want to fuck.\" I gave him a look. \"Well, I think you're getting a lot of sex, Mark. That stupid smile on your face tells me more than you think.\"\n\nGesturing with my head towards the door, I told him to piss off.\n\nFinishing work a little earlier, being a Friday, I headed back to my apartment first to shower and change. Packing a bag, I figured I'd stay until Monday morning, aware Cindy preferred being at hers on a Sunday night. If she needed an early night, that would give me an excuse to cuddle her. That thought made me stop and smile, glancing into the mirror. I didn't recognise the man for a moment because he just seemed completely different to the one I'd seen staring back at me for months on end.\n\nKnowing Cindy had company that evening, I didn't just want to barge inside, so I let myself in the door downstairs before knocking on her apartment door. She opened it and smiled, seeming to understand what I'd done. She kissed me first, her hand wrapping up to the back of my head as she led me down the hallway toward the living room. When there was some whooping and clapping, she broke the kiss and giggled. \"Hi,\" she whispered.\n\n\"Hello yourself, sweetheart,\" I whispered back.\n\nDumping my bag in her bedroom first, asking if it was okay to stay until Monday morning, being assured she rather I did than didn't, she took me by the hand and led me back out to her living room. There was a three seater couch and two armchairs. I recognised Emma straight away, not surprised she was present. She greeted me with a kiss on the cheek before I was introduced to everyone else. Before she did, Cindy mentioned that everyone present was like her.\n\n\"Mark, this is Alexa. She's been my best friend for over a decade. Alexa, this is Mark.\" She was tall enough to meet my eyes easily. I reckon she was six-one, and that was without heels. She'd have towered over most men in her heels. Gorgeous strawberry blonde hair, emerald green eyes, her smile was radiant, tanned complexion and a pair of big tits on her chest. If I guessed, they'd be in the D-range. I stepped back to see a pair of long pins.\n\n\"You approve?\" she asked softly.\n\nI smiled and nodded, glancing at Cindy. \"Is she a woman with...?\"\n\nCindy smiled and nodded. Looking back at Alexa, she licked her lips. \"Play your cards right, handsome, and you'll see just what I'm packing. Your mouth will water when you do, and you'll want it inside you very quickly.\"\n\nCindy smacked her arm playfully. \"Behave, Alexa.\"\n\n\"Have you broken him in yet?\" Cindy blushed. So did I. \"I'll take that as a no.\" She met my eyes again and smiled. \"Oh, you are going to love it when she finally does, handsome. After Cindy does, you'll crave it all the time. Nothing better than a bit of thick girlcock sliding inside you.\"\n\nI'll admit, her sultry and very suggestive tone had me nursing more than a semi quite quickly. I cleared my throat. \"Nice to meet you,\" I managed to say.\n\nI was introduced to Melanie. Dark hair. Dark eyes. Smallest chest present, or so it looked. B-cup at best. Five-six, so the shortest of the girls too. She was of Asian descent, though when she introduced herself, there was only the hint of an accent. \"What is your ancestry?\"\n\nShe almost rolled her eyes but thankfully smiled. \"Come on, Mark. Take a guess.\"\n\n\"Thailand.\" She smiled as it was rather obvious. \"I've read stories about what places like Bangkok can be. Never been myself.\"\n\n\"I did live there for a little bit. I was born here, parents went back, but didn't last long. They preferred living here.\"\n\nFinally, there was Georgina, though she immediately said she preferred Georgie. Brunette like Cindy but with a pair of gorgeous brown eyes, she was a little taller than Cindy, with a large chest, not as large as Alexa but larger than Cindy. Surprisingly, she was remarkably pale. \"I hate being tanned,\" she said, as I compared her skin even to mine, \"I'm a pale goddess.\"\n\n\"Nice to meet you all. I think you've heard a bit about me.\" That made all of them laugh. \"Okay, maybe more than a bit.\"\n\n\"Cass might arrive later,\" Cindy explained, \"Remember the woman who served us at the first bar where we met?\"\n\n\"Yeah, I remember.\"\n\n\"She's like us too. And she liked you, Mark.\"\n\n\"I don't know why. I just sat there.\"\n\n\"That's exactly why. You didn't spend your entire time trying to chat her up and annoy her. She gets a lot of attention from thirsty men who know she's packing heat.\"\n\nSitting down in one of the armchairs, Cindy disappeared to grab some wine and a beer for me, settling herself on my lap as the five of them chatted away. I was asked plenty of questions, answering honestly. How old I was. What I did for a living. Where I lived. The fact I was a divorcee and had two kids. I played footy during the winter. My two best mates were gay, which seemed to impress them for some reason.\n\n\"And Cindy being born and assigned as a male doesn't bother you?\" Alexa wondered.\n\n\"No, why would it? I look at her now and see a woman. She's lived as a woman for fifteen years. You said you were ten, sweetheart? When you knew?\"\n\nShe smiled. \"You remembered?\"\n\nI kissed her forehead. \"Of course. Anyway, anything before the age of ten isn't important. It's everything from that moment which matters. Her journey to who she is now. I look at her and see not only who I see, but who she wants me to see.\"\n\nThere was silence for a moment. \"You'd better not fuck this up, Cindy,\" Emma joked.\n\n\"You have a brother or something?\" Alexa wondered.\n\n\"I do. He's happily married. My sister is too, before you ask.\"\n\nShe waved that away. \"Not interested in women. I'm not a lesbian. Certainly no interest in pussy.\"\n\n\"Do you go to the sort of bars where I met Cindy?\" I wondered. They all nodded. \"Get women asking you out often?\"\n\nAlexa laughed. \"Oh sweetie, women figure me out just looking at me. Don't get many women over six foot built like me. I know I'm not like you, I'm tall, not broad, but women still figure me out. Someone like Emma, she'd get plenty of attention, only to disappoint them when she tells them the truth.\"\n\n\"What about men?\" I wondered. I simply didn't know.\n\n\"Most men in those sort of bars are gay, honey,\" Georgie replied, \"We might have a cock but we don't look like nor identify as men, so they're not interested either.\"\n\n\"Bloody hell, what a minefield,\" I muttered.\n\nCindy grabbed my hand. \"You're asking the right questions, handsome. As I said, ask anything on your mind. We won't be offended.\"\n\n\"The only question I really have is do you find it difficult to meet someone? Cindy told me...\" I trailed off as I felt the wave of momentary sadness and silence. I understood immediately. \"I'm sorry. That was insensitive.\"\n\n\"We just have to be careful,\" Emma replied, \"Many men are interested in us, but a large majority of them simply want us for sex. We are a fetish. You only have to trawl the internet to see. We're women but, at heart, we're human beings. We want love, companionship, a relationship. But there is only a small pool of men willing to overlook what's between our legs. We certainly understand that, to men and women, it's very important. Men want women who can give them children, for example. But when Cindy meets someone like you, that's why she almost latches on, not willing to let go.\"\n\nI hugged Cindy tightly. \"Oh, I wasn't letting go of her either. I'm still far more worried about the age gap than anything else. And now I feel like an old man sitting here with five rather beautiful women, assuming you're all younger than me by at least five years.\"\n\n\"If you're trying to charm me out of this dress and my panties, Mark, you're going the right way about it,\" Alexa said.\n\n\"Okay, so Alexa is the shameless flirt,\" I retorted, much to the amusement of everyone.\n\n\"Mark, she wants to fuck you bad,\" Cindy whispered, before her lips moved to my ear, \"They all do.\"\n\n\"Oh...\"\n\n\"And they'd love you to fuck them too.\"\n\n\"Really?\"\n\nShe breathed into my ear, sending a shiver down my spine. \"But you're mine tonight. I'm going to bury my cock in your arse later,\" she breathed. She giggled as my cock sprang to life. \"I think you love the sound of that.\"\n\nI turned my head and kissed her, pulling her tight to my body. She whimpered within a few seconds, moving so she was straddling my lap, my hands moving to her arse as her fingers caressed the back of my head and neck. We only stopped making out when there was a clearing of throats, breaking apart to see the other four smiling at us. \"Was wondering if you were just going to start fucking in front of us,\" Emma joked.\n\n\"You'd probably enjoy the show,\" Cindy retorted.\n\n\"I'd stroke myself something stupid,\" Alexa added.\n\n\"I'd want to be fucked or fuck him when she's done,\" Emma said cheerfully.\n\nCindy laughed so I guessed everyone was joking, though I was left wondering about this group chat of theirs. Cindy and I had already taken a few selfies together. She was your archetypal young woman, phone out constantly, taking numerous selfies. I didn't mind as she was gorgeous and liked to show herself off, and now that I was with her, I was in a lot of them too.\n\nSettling back on my lap crossways, conversation continued to flow until the last bottle of wine was finished. There simply wasn't enough space for all of them to stay the night, so I ordered a couple of Ubers to take them home, as two pairs lived close enough to each other that more were not necessary. Cindy and I walked them downstairs once they arrived, receiving a tight hug from the four guests, Alexa giving my arse one hell of a firm squeeze at the same time, Cindy slapping her hand as she laughed. \"Hands off, that's my firm butt to play with.\"\n\n\"Hmmm. Well, if you want a nice thick cock, Mark, you just give me a call.\"\n\n\"You're incorrigible, Alexa,\" Cindy stated.\n\n\"Cindy, we're all thinking the same thing,\" Georgie added, \"But we're delighted you've found some happiness at last.\"\n\nThere was one last group hug between the girls, a couple of tears as she thanked them for coming over, before they parted, Cindy leaning back against me as we waved the other four off. She stayed in place against me as I said, \"I like your friends.\"\n\n\"You wouldn't believe me if I said they were nervous about meeting you.\"\n\n\"I believe you though that's not what I'm left thinking.\"\n\n\"Did you enjoy yourself?\"\n\n\"I had a great time.\"\n\nShe turned around and stood on her tiptoes to kiss me. \"You're about to have a better time upstairs, baby,\" she whispered.\n\nRushing back upstairs, Cindy made sure the front door was locked and bolted before we made out all the way to her room. It's amazing how quickly one can undress when you want to have sex with your partner, my clothes ending up spread across her room, hers joining mine just as fast. Pushing her down onto the edge of the bed, I got down onto my knees as I spread her legs, her hard seven-inch cock popping up, the head already glistening with her pre-cum.\n\n\"Want to boss me around?\" I wondered.\n\n\"No. Tell me what you want, baby.\"\n\n\"I want to suck your cock until you cum in my mouth, and I want to share your load.\"\n\n\"I love the sound of that,\" she murmured.\n\n\"Then I want you to lick my arse and get me ready for your cock. When you think I'm ready, we can make love in whatever position you want. I just want you to love it as much as I hope I do.\"\n\nShe leaned down and kissed me, our arms wrapping around each other. I was rock hard myself, growling into her mouth as I felt her fingers wrap around my shaft, giving me a few strokes. \"Fuck, I love you,\" she whispered, \"You need me to please you?\"\n\n\"I've read up about it. I think you'll make me cum while you're inside me.\"\n\n\"I hope you do cum,\" she said softly, \"I love the idea of exciting you so much.\"\n\nKissing down her body, I gave her breasts some attention first, her nipples hard and as sensitive as I remembered, giving her cock some gentle strokes, feeling it continue to leak a little pre-cum. Gently pushing her backwards onto her back, I kissed down her body before running my tongue along the shaft of her cock, lifting it at the base, twirling around the head, licking up her pre-cum.\n\n\"Yummy,\" I murmured, \"I hope I get a lot more later. Oh, one more thing. I love you too, sweetheart.\"\n\nLicking up and down her shaft, she grabbed a couple of pillows to prop up her head, looking up into her eyes as my tongue found its way down to her balls, making her gasp as I took each of them in my mouth. She was as hairless there as anywhere else, before I spread her legs wider and ran my tongue across her rosebud. \"Oh fuck,\" she moaned.\n\n\"Cindy, I'd just eat your arse for hours if you wanted me too.\"\n\n\"Baby, my body is yours as much as yours is mine.\"\n\nI gave that delightful arse of hers some attention before moving back up over her balls to her cock, wrapping my lips around it and takin a few inches in my mouth. Using my tongue as I bobbed up and down, I felt her fingers run through my hair, glancing up again to see her smiling broadly. I made sure my eyes reflected I was smiling back.\n\nShe moaned softly and I felt a throb of her cock, assuming she was also quite excited and might cum quite quickly. I didn't mind, I'd either keep blowing her or we'd just cuddle until she was ready to fuck me. Bobbing up and down faster, using the limited experience I had pleasuring a woman in such a manner, she whispered for me to use my tongue a lot more. I quickly figured out what she meant and what worked, focusing more on the sensitive head of her cock, before I managed to take nearly her entire life. Gagged once, then adjusted my head so it worked better.\n\n\"Oh fuck, I'm getting there, baby,\" she moaned.\n\n\"I need your cum, Cindy,\" I said, meeting her eyes, saliva dripping from my mouth, attached to her cock.\n\nShe stood up and, gently grabbing my head, slid her cock back in my mouth. Running a hand up to her arse, I squeezed it as she gently thrust while I moved my head at the same time. \"Oh fuck, yes,\" she moaned, \"I'm close... so close, baby...\"\n\nThat was the last warning I had before I felt my mouth fill with her cum. I pulled back so only the head of her cock was in my mouth, letting each spurt fill my mouth until she was done. Looking up to see that she was done, she carefully took it from my mouth, ensuring my lips remained closed as she got down onto her knees.\n\nLeaning forward to kiss her, she opened her mouth as I did, feeling us swap her cum between us. It was one of the hottest things I'd ever done in my life, both of us moaning as I pulled her tight into my body again. Once we'd done playing around, we parted and swallowed what we had.\n\n\"I love your taste, sweetheart,\" I said.\n\n\"I know. I taste fantastic!\"\n\n\"Taste yourself a lot?\"\n\n\"I was a bit of an own cum addict for a while. Every time I jerk off, I'd cum on myself, or the wall in the shower... I do that a lot... then clean myself up with my finger and tongue.\" She kissed me softly on the lips. \"You can have my cum whenever you want it, handsome.\"\n\n\"I'll get better too.\"\n\nThat made her smile, resting a hand on my chest. \"Mark, you're willing to go down on me. That means so much to me already. Just going down on me is such a turn on, I'm going to cum within a few minutes, no matter what. But if you get better, I'll cum faster, so that means more blowjobs for me!\"\n\nGetting to our feet, she giggled as she got behind me, gently pushing me forward onto the bed. Grabbing the pillows she'd been lying her head on, I got myself comfortable as I felt her presence behind me, allowing her hands to position me. Feeling her cock rest between my cheeks, she leaned forward so her head rested on my shoulder. \"Just remember to relax, baby,\" she said, \"You're going to love this as much as me.\"\n\nHer hands moved up and down my back, mentioning how smooth I now felt, before she moved to my now smooth arse, then her fingers ran across my arsehole. I laughed, earning a giggle from her. Didn't make me tense up, not yet at least. Leaning forward again, I did like the feeling of her cock pressing against me, feeling her lips kissing across my shoulders before she left a trail down my spine. Made me shiver with anticipation.\n\nFeeling her wet tongue at my rosebud was a weird feeling at first. I'd always been curious about anal play during my marriage, but as much as she was not interested in receiving anal, there was absolutely no chance of anything happening with me. When the rare blowjobs happened, I could have suggested a couple of fingers up the butt, but considering she made me almost feel guilty just blowing me...\n\nCindy seemed to be enjoying herself, spreading my cheeks wide and going to town. The first moan I released caught both of us by surprise, Cindy singing, \"I think someone likes it.\"\n\n\"Yeah, more than I thought,\" I muttered.\n\nI didn't feel her tongue enter me, and after a few minutes, her tongue disappeared, feeling her move for a moment before I heard the cap of the lube open, and I felt cool gel applied to my arse. I moaned softly as she ran her finger over my arsehole before she ever so carefully pressed it into me. I clenched immediately, an automatic reaction, Cindy massaging my lower back with her free hand and I relaxed, feeling her slide her finger in a bit more.\n\n\"How's that feel?\"\n\n\"Good,\" I replied.\n\nShe thrust her finger in and out for a couple of minutes before adding a second one. I felt it stretch me slightly, and it felt even better. I closed my eyes and just enjoyed the feeling, her free hand continuing to rub my back. I felt my cock leaking pre-cum at the same time, her hand occasionally giving it a gentle squeeze, but she knew I wanted to cum with her cock inside me.\n\nA third finger made me moan louder. \"Like that, baby?\" she asked after she'd thrust for a minute or so.\n\n\"Yeah, that's pretty fucking good, sweetheart.\"\n\n\"Few more minutes and you'll be as ready as possible for my cock. I'll be gentle. I promise.\" When she was confident I was ready, she playfully smacked my butt. \"Turn over, baby.\"",
        "\"Huh?\" I asked, turning to look at her.\n\n\"I want to watch your face when I slide in you the first time. We're making love, Mark.\" I felt a smile form on my face before I turned to kiss her, pulling her tight to me, feeling her erection press against me. \"You do realise you've not fucked me that way either.\"\n\n\"I've never really thought about it. I prefer seeing your face, and nothing sexier than you riding me.\"\n\nShe remained silent, just gazing at me for quite a while. \"I love you so much, Mark.\"\n\n\"I love you just as much, sweetheart. I'll be thanking Mike for a long time yet. If he hadn't convinced me to go, I wouldn't have met you.\"\n\nEnding up on my back, she kissed me as I felt my legs slowly spread, a pillow placed under my lower back. It was exactly the same thing I'd done to her our first night. Her eyes remaining on mine, I felt the head of her cock rub against me. I was surprised I didn't tense up, and she seemed to notice that too. Her face lit up. \"You want this?\" she asked softly.\n\n\"I want you,\" I replied, voice barely above a whisper.\n\nSitting up slightly, I felt her press against me a little firmer. She'd prepared me as best as she could, but her cock was still thicker than her three fingers. But I kept breathing and made sure I relaxed. Slowly but surely, the head of her cock spread me nice and wide, and quicker than I thought possible, the head of her cock slid inside my arse.\n\nThat did make me grunt, following by an immediate laugh by me and a giggle from her.\n\nMeeting her eyes, I nodded as, although there was a little discomfort, it didn't hurt. \"If it hurts, you're doing it wrong,\" Cindy stated, slowly sliding more of her cock inside me.\n\nHoly shit, it felt fantastic. I knew there were a million nerve endings down there, which is why anal could be so pleasurable, but her cock was absolutely wonderful. She took her time giving me her entire length before I felt she had nothing else to give. Her face lit up again. \"That's everything, baby. How does it feel?\"\n\n\"I fucking love you,\" I exclaimed, \"And I definitely love your girlcock.\"\n\nShe leaned down to kiss me deeply, tongues duelling playfully as always. Feeling her hands underneath my knees, she knew I wouldn't be as flexible, but she pushed them back far enough that she could start thrusting into me comfortable.\n\n\"Holy shit!\" I cried after barely a minute. It wasn't a cry of pain. She realised that straight away. Now I knew why some men enjoyed having things inside them. Feeling Cindy's cock sliding inside me, never taking the head out, but I loved the thrusting, I had to close my eyes a moment and just focus on the sensation of her thick cock inside me.\n\nFeeling her lips against mine, I opened my eyes to see her leaning forward further. I nodded, as I knew what she wanted, watching as her arse started to rise and fall a little faster. She was pressing something inside me that I knew was my prostate. It felt like I need to pee at times, but the pleasure was almost overwhelming. She stroked my cheek. \"It's okay, baby,\" she whispered.\n\n\"I had no idea,\" I admitted, \"I'll admit, a little part of me has always wondered...\"\n\nShe started to pump me a little faster. My cock was now almost unbelievably hard. I moved my hand to stroke myself, Cindy gently grabbing my wrist, sucking on my thumb. \"No, cum without touching yourself. I'll do it for you.\"\n\nShe leaned forward, changing the angle as she thrust into me harder. Holy shit, that was absolutely perfect. The moan she made me release had us both chuckling as she moved faster and faster. \"Oh god, fuck me!\" I cried.\n\n\"I'm going to cry after I cum, Mark,\" she said, watching her face as she started to really fuck me, \"The emotions I'm going to feel.\"\n\n\"I'll hold you, sweetheart. I want to feel you cum in me too.\"\n\nResting on her hands, I placed my hands around the back of her neck as she started to pound me. Within five minutes, I came without touching myself at all. The groan I released as I felt my cock just spurt and spurt and spurt would have been heard around her entire apartment complex. Cindy focused on fucking me hard. Her cock was now driving into me, reminding me of how hard I'd fucked her earlier. It was starting to hurt a little bit, as I simply wasn't used to it, but the pleasure outmatched any lingering pain. I'd feel it the next morning. So be it. It would be worth it.\n\n\"I'm close, baby.\"\n\n\"Cum in me, sweetheart. Just fill me.\"\n\n\"Fuck, I love you,\" she moaned softly, lasting barely another minute before my tight arse felt the throb of her cock, then a warm sensation as that first spurt fired inside me. More throbs, more spurts. She moaned softly with each one before it seemed to be over, leaving her cock buried inside me as she met my eyes.\n\nHer lower lip started to tremble, raising my head to kiss her deeply. Resting my forehead against hers, she choked back a sob. She nearly got me going at the same time. \"First time I've done that with someone I love,\" she whispered.\n\n\"Cindy,\" I whispered back.\n\n\"I have so much to tell you, Mark. I want to tell you everything.\"\n\n\"Whenever you're ready, and once you do, I'm just going to love you even more.\"\n\nShe made to pull out, but I leaned forward, grabbing her arse. She knew what I meant by that, lying back and taking her with me. She got comfortable between my legs as she relaxed her head just under my chin. Her cock did eventually soften and fell out of me. It was weird feeling her cum leaking out of me, but I ignored it.\n\nRolling off my chest, she lay on her side as I turned to face her. She kissed me hard, pressing her body into mine so I'd hold her in my arms. \"I love to fuck but I'm not dominant,\" she explained, \"At least, I'm not at heart. What we just did was perfect.\" She paused before adding, \"But I want you to fuck me hard from behind. I know the perfect thing to do when we're really into it.\" Her face broke out in a grin. \"I think you'll love it.\"\n\n\"Will you want to do what we just did again?\"\n\n\"Oh, god yes. Do you?\"\n\n\"You can make love to me whenever you want, Cindy. And we can try anything you want, same as when I'm with you like that.\"\n\nHer lower lip trembled again. \"Sorry, I'm being...\"\n\nI shushed her. \"You're human and have emotions. Trust me, I'm keeping a lid on most of mine here.\"\n\n\"What's the biggest emotion?\"\n\n\"Complete and utter love and devotion.\"\n\n\"So this is serious?\"\n\n\"I hope it is.\"\n\nShe left a soft kiss on my lips. \"It definitely is.\"\n\nFifteen minutes later, she was between my legs again, her cock buried in my arse. Now that I was used to her, this time she fucked me harder. I urged her on to fuck me harder, and she certainly started to give it to me. After around ten minutes, I suggested I turn around. I really didn't mind and she took all of five seconds to agree.\n\nGetting on my stomach, I lifted my arse enough that she could slide inside me easily. Feeling her lean forward, she left soft kisses up my back before I felt her head next to mine. \"Are you ready?\" she asked.\n\n\"Fuck me, Cindy. Just fuck me. Fuck me like that, and I'll return the favour.\"\n\n\"I hope so.\" She nuzzled into my neck. \"Love you so much, baby.\"\n\nPressing into my shoulder, she poured a little more lube first before she really started to drive her cock into me. That earned a few grunts, but holy shit, it felt wonderful. Her cock was just perfect. We built up a good sweat as she fucked me, no idea how long she lasted that second time. The sound of her skin slapping against my butt was amusing. Her language got rather dirty at times, which I found an even bigger turn on. Things like 'You love my big thick cock, don't you?' but nothing I'd consider derogatory. I'd never call her a 'slut' while we made love, and she didn't call me that back either. She did demand I tell her I love her cock. Like I was going to deny that?\n\n\"I'm going to make you beg for this every fucking day,\" she growled.\n\n\"I'll suck you first before you fuck me,\" I retorted.\n\n\"Maybe I'll just fuck your face,\" she grunted, really pounding me, fairly sure she was getting ready to cum again.\n\n\"Then I'll just fuck you hard in return,\" I replied, turning to look at her. She looked beautiful, brunette hair plastered to her sweat covered forehead, breasts jiggling ever so slightly with every thrust, her body taking on a pinkish hue due to her exertions.\n\n\"I want your cock all the time, Mark,\" she admitted, \"In my mouth, in my arse... You should fuck my tits too.\"\n\n\"Whatever you want, sweetheart. I'm yours.\"\n\n\"And you're mine,\" she whispered, \"I'm getting close.\"\n\nShe leaned forward again, pressing her body into mind, feeling her breasts press into my back as she really started to drive her cock into me, earning more than one grunt as she was beyond being gentle now. \"Fuck me,\" I groaned.\n\n\"So close,\" she whimpered.\n\nThen I felt her fill me again. It was once again a feeling of bliss, the throb of her cock, the feeling of each spurt filling me, the feeling of her body pressing into mine, each deep breath... Soon as she was empty, I felt her relax on top of me, able to move just enough to turn and see her face. She pulled out rather quickly, turning me onto my back so she could relax on top of me again, cuddling her in my arms.\n\n\"Holy shit, you've worn me out!\" she exclaimed, giggling away.\n\nWe laid like that for at least half an hour before we got up and headed to her bathroom. I was surprised when she started to run a bath. Ten minutes later, after she'd added bubbles, scented oils, and lit a couple of candles, she was sitting back against me as we shared a bottle of wine.\n\n\"I can't remember being this happy,\" she said softly. I pulled her a little tighter to me. \"Do you have questions, Mark? About me and my life?\"\n\n\"A have a few.\"\n\n\"Anything on your mind now?\"\n\n\"Well, I am wondering about your family. Have brothers and sisters?\"\n\n\"My mother is my champion. I'll explain everything about her later. I love my mother. My father? I haven't talked to him in seven years. I'm sure you can understand why. He still insists that he has a son and daughter, not two daughters.\"\n\n\"I'm sorry.\"\n\n\"I'm not, He's a bigot. Fuck him.\" She took a deep breath. No doubt it was a sore point, not one I'd pursue. Definitely didn't want to upset her. \"Anyway. Mum and I are still as close as ever. I want you to meet her. She's going to love you. I have one sister. She's been brilliant. Mum and my sister figured out very quickly I was a girl. They...\" I noticed her lift a hand to her cheeks. \"I couldn't have got here without them.\"\n\n\"I'd love to meet them. And I'd love to introduce you to my family too.\"\n\n\"Would you tell them about me?\"\n\n\"Only if you wanted me to. I was left believing that would be your decision. That would never be something for me to share. But what I do know is that they would love you immediately because you have put a smile back on my face.\"\n\n\"Know how your daughter visits?\"\n\n\"Yeah.\"\n\n\"We might have to explain to her, just in case she eventually asks the question 'Why does daddy's girlfriend have a penis?' It could lead to an awkward conversation or two.\"\n\n\"Hmmm. I hadn't actually thought about that. I guess she could discover it by accident. Sex education in this country is pretty good, but I guess this would still be something not widely known.\"\n\n\"Might have to tell your ex-wife.\"\n\n\"Why?\"\n\n\"Just wondering how open-minded she is. How would she react if her ex-husband is dating a trans woman...\"\n\n\"You're a woman...\" I stated fiercely. Enough that she turned around and met my eyes, seeing surprise in hers. \"What's between your legs doesn't...\"\n\nShe kissed me deeply, accidentally dropping her glass of wine into the bath. It was one hell of a kiss, enough that I rose to the occasion, so that she had to break the kiss and giggle for a moment. \"Mark, I love the fact you are so open-minded and you see me for who I am. But the reality is most people simply don't. I don't know your wife at all, but to stop any potential problems, perhaps next time you pick up your daughter, we just sit her down and explain that her ex-husband is dating a woman with extras, so if her daughter was to discover my secret by accident, we can sit her down and explain things together.\"\n\n\"Only if you're comfortable with it, Cindy. I know how much courage it took to tell me.\"\n\nThe smile formed quickly. \"You've been reading, haven't you?\"\n\n\"All I've done is try to learn what I can, Cindy. I haven't experienced it. I don't know anything. I just want to do the right thing.\"\n\nResting her head against my shoulder, looking up into my eyes, all she said was, \"Love me. That's all I want, all I need you to do.\"\n\n\"For the rest of my life, if you'll let me.\"\n\nShe smiled before saying softly, \"Definitely introducing you to my mother and sister. When can I meet your family?\"\n\n\"I'll give Mum a call. Trying to organise my brother and sister can be tricky sometimes. Mum knows I've met you, so no doubt everyone on both sides of the family knows by now.\"\n\n\"Nervous?\"\n\n\"Nope. We can tell them or we can leave it for later. They accept it, which they likely will, or they don't and I cut them out of my life.\"\n\nShe turned around and hugged me tightly. \"We should get out of the bath, otherwise most of the water will end up on the floor!\"\n\nI woke up after her the next morning, surprised I barely even felt a dull ache down below. Throwing on my underwear and t-shirt, I staggered out to the kitchen, Cindy preparing breakfast for us. She was wearing a small top and panties. I stood and watched her bop to music, ponytail bouncing around, singing away with her melodic voice. She must have sensed me watching as she stopped and turned to look at me.\n\nShe had me rock hard within seconds from nothing more than a sultry look and leaning back slightly against the side. \"Morning, handsome.\"\n\nI walked towards her, looping an arm around her waist and pulling her close, making her squeak, before I leaned down and kissed her. Made her moan within seconds as I cupped one of her arse cheeks, giving it a gentle squeeze. \"Behave,\" she whispered, barely breaking the kiss, her eyes gazing into mine.\n\n\"I'll do my best but you are far too fucking sexy.\"\n\n\"Wearing it for your entertainment. I love how you look at me.\"\n\n\"I'd move in tomorrow if I could.\"\n\n\"And I'd love you to. But it's okay. You can stay as often as you want. I want you here with me.\"\n\n\"Scared?\"\n\n\"Terrified at times, though only of losing you.\"\n\nI kissed her again before replying, \"Not going anywhere. I'm the one worried about fucking it up.\"\n\n\"Love me. That's all you need to do.\"\n\n\"For the rest of my life.\"\n\nA sweet smile formed before she kissed my cheek. \"Sit. I'm cooking my man a hearty breakfast. Then I'm thinking we relax until we go to Mike's?\"\n\n\"Sounds good to me.\"\n\nBacon. Eggs. Sausages. Toast. Baked Beans. Hash browns. She filled my plate with all of it, sitting as near as she could to me with smaller portions for herself. I was ravenous and polished off everything, enjoying a strong cup of coffee with it. Cindy watched approvingly as I devoured everything, then did the right thing of helping her clean up everything. That earned a hug of appreciation, taking my hand and leading us to the bathroom for a shower, where I was then given one hell of a blowjob, watching on in amazement as she practically sucked the cum from my balls, swallowing every drop, before spending most of the time washing me.\n\nAfter dressing, we sat in the living room, flicking on the TV for background noise. I had to ask, \"Cindy, um... don't get me wrong, I loved everything...\"\n\nShe kissed my cheek, snugging into my side. \"I'm looking after my man.\"\n\nI could have replied with one or two comments, but I figured what was the point. She was happy doing it for me. \"Thank you,\" I said softly, \"It's appreciated. Trust me. I'm just not used to it.\"\n\nShe kissed my cheek again. \"I'm not her, Mark,\" she whispered, \"Look after me, I'll always look after you in return. I love cooking, even if it's something simple like this morning.\"\n\n\"That wasn't simple, though I can burn cereal, so there is that.\" Her laughter made my heart swell. She eventually stopped and met my eyes, the smile not dimming for a second. I was thirty-five, and I honestly couldn't remember anyone looking at me like she did in that moment. It left me momentarily speechless, opening and closing my mouth more than once.\n\nWe ended up doing absolutely nothing that morning, cuddling on the couch, and I was pleased that Cindy didn't mind watching a little sport with me. We had lunch around an hour after midday, heading out to a nearby takeaway to grab a good burger. Half an hour or so before we were expected, Cindy hopped into the passenger seat of my car as we headed to Mike's place.\n\nUnderstandably, Cindy was a little nervous meeting my two best friends, even though they knew her by sight, at the very least. Knocking at his front door, Mike opened it and was pleased to see me as always, before I introduced Cindy again. He hugged me then hugged her. \"So you're the woman who has put that stupid bloody grin on his face every day,\" he said.\n\n\"The one and only,\" she retorted, taking my hand.\n\n\"Thank the lord!\" he exclaimed, \"He was a right miserable bastard before he met you.\" He jerked his head. \"Come on, a few others are already here. Got plenty of food, most of it ready to cook. Lots of booze.\" He stopped and turned towards us. \"Cindy, I obviously... er...\"\n\n\"It's okay, Mike. If people do wonder, let them wonder,\" Cindy said, grinning away.\n\n\"Okay. But everyone is friendly. Mark has known nearly everyone here for years. We're not all massive homo's either.\"\n\n\"Jesus wept, Mike,\" I muttered.\n\nHe leaned closer to Cindy. \"We tried to convince him to switch sides a while ago while he was still with... her...\"\n\n\"Cindy, Mike has obviously been enjoying himself. When he does that, he turns into a right gobshite.\"\n\nHe placed a hand over his chest. \"You wound me, old friend.\"\n\n\"Fuck off, Mike,\" I retorted. Then we both cracked up laughing as we headed out to the backyard. No surprise Chris was there, a hug for myself and Cindy, and a few other friends we'd made over the years. I introduced Cindy to everyone, knowing there were at least three 'straight' couples present, as Mike, Chris and I had kept in touch with people from school. It was nearly twenty years ago but our friendships had remained strong, even after all this time.\n\nAs soon as Mike fired up his barbecue, I stepped forward and told him to piss off, taking over cooking all the meat. I'd done that more time than I could count for the kids, and also did it more often than not at his parties, simply because he'd drunk enough already that he'd burn everything. Cindy hovered nearby, chatting with people but constantly looking in my direction. She realised I was in my element as I focused ensuring everything was cooked properly.\n\nBy the time we sat down to eat, Mike having two long picnic tables in his backyard, it was easy to see that there were more people present who were part of his lifestyle, his arm already around the shoulders of a young man. Thing is, I knew Mike was eager to settle down, but after the last heartbreak he'd endured eighteen months ago, he was scared of committing himself again. We'd had more than one heart to heart during that time, when I was going through my divorce.\n\nAfter we'd eaten, the music was turned up, the drinks started to flow, and everyone relaxed, having a great time. Cindy and I snuggled on one of the couches that was on the wooden decking, sipping at our drinks as I didn't particularly want to get a taxi back to hers. No surprise some of the dancing turned what I'd call intimate. Nothing I hadn't seen before, watching more than one couple head inside. Mike and Chris were sitting on the other two couches, appearing to behave themselves, at least for the time being.",
        "\"You two can stay the night, if you want,\" Mike said.\n\n\"He's taking me home so he can fuck me,\" Cindy blurted out, turning quickly to see her blushing. Then she cleared her throat. \"God, he's going to fuck me so hard later.\"\n\nI glanced between Mike and Chris, both of them laughing out loud. \"Nice to see our friend is finally getting some action again,\" Chris stated.\n\nCindy cuddled into me, not adding to what she'd said earlier. I think she might have been feeling a little embarrassed, lifting her up easily so she sat on my lap, her head resting against my chest. The four of us continued to chat about nothing particularly important until I started to yawn. I hadn't touched a drop in over an hour, and with Cindy starting to fall asleep at the same time, I suggested to my host that we should head off.\n\nEscorting us to the front door, Chris and Mike hugged Cindy first, noticing they whispered something into her ear, before they shook my hand before they hugged me together. \"Don't fuck this up,\" they stated in unison.\n\n\"Thanks for your belief,\" I muttered, \"Arseholes,\" I added for humour.\n\n\"Definitely loves you though, so you've got that in your favour.\"\n\nAfter wishing them goodnight, I joined Cindy by the car, noticing she leaned back against it. She grabbed my t-shirt and pulled me close for one hell of a kiss. \"They told me to look after you because they'd never seen you happier,\" she whispered, \"So I must be doing something right.\"\n\n\"Yeah, I was warned not to fuck this up.\"\n\n\"Want to take me home so you can fuck me?\" I smiled as she added, \"Driving sensibly, of course. Don't want a fine now.\"\n\nGetting us home far quicker than the journey there, I practically dragged her to the door to her apartment complex, ensuring the car was at least locked, laughter echoing as we just about made it to her front door before we started to removing clothing. A trail was left from her front door to her bedroom. By the time we were there, she only had her panties on, her hard cock straining at the thin fabric. I think I almost ripped those off her before she turned and got onto all fours on the bed.\n\n\"Eat my arse, lube me up, then by god, just fuck me, Mark.\"\n\nI love a woman who knows what she wants!\n\nI buried my face between those firm cheeks of hers, my tongue devouring that tight little hole of hers. I had her squirming and moaning within a matter of seconds, grabbing each cheek, squeezing them tightly. I felt her body move, knowing she was already stroking herself. I could feel my cock was already a steel bar as well.\n\nFinding that she'd grabbed the bottle of lube and placed it next to her, I poured some of it onto her and kept eating her out for a little longer. I adored the sounds she'd made, barely able to put a few words together otherwise. But we both wanted something else, lubing up my fingers and sliding two fingers inside her, slowly, very slowly, but she loved it straight away.\n\nRubbing her back, I increased the tempo of my thrusts once she seemed comfortable, and she was eager for me to add a third finger, using my left hand to lube up my cock at the same time, as I wanted to ready as soon as she begged for my cock. Removing my fingers, I ate her out again, my tongue sliding into her. She moaned so loudly, I think she almost had an orgasm. \"Fuck,\" she whimpered. \"Fuck...\"\n\nFingers back inside her, I leaned forward, kissing up her back until resting my head on her shoulder. \"You want my cock?\" I whispered into her ear.\n\n\"God yes.\"\n\n\"How much?\"\n\n\"So much, Mark. Please...\"\n\n\"Beg for it.\"\n\n\"Mark, I will do anything, and I mean anything, if you slide your cock inside me. I'm begging you, pleading with you, please, slide your cock inside me and just fuck me!\"\n\nRemoving my fingers, I placed my cock at her hole and gently slid inside her. She turned to kiss my cheek as I felt her lower her arse so it was a little more comfortable for us both. Once I was buried entirely, she shuffled again. \"Your cock is back where it belongs,\" she whispered.\n\nLifting myself up slightly, she turned just enough to watch as I started to thrust into her. Within a couple of minutes, I was fucking her hard. Her face lit up with every thrust, and I couldn't remember a time I'd felt as hard. I think it was just the fact I was feeling unbelievably horny. She'd turned me on at the party and I'd carried that feeling for a few hours by now.\n\n\"Mark, sit back on your knees,\" she said. Wondering what she wanted, I did just that, keeping my cock buried inside her, as she pushed herself up and then rested back against my chest. Resting her head against my shoulder, she looked into my eyes as she started to move against my cock, and it felt really good. She took my hand and wrapped it around her stiff cock. \"Stroke me until I cum,\" she asked, \"I'm going to shoot everywhere!\"\n\nAs she rode me, I slowly stroked her cock, leaning down to spend most of my time kissing her otherwise. My left hand moved to her breasts, giving her nipples some attention at the same time. All the attention earned plenty of whimpers and moans, moving faster and faster on my cock, matching her movements with the strokes of her cock.\n\n\"Mark,\" she whimpered so softly, I knew she was close.\n\nMoving my mouth to her ear, I whispered, \"Cum for me, sweetheart. Cum all over yourself.\"\n\n\"Aim my cock! Aim my cock!\"\n\nI leaned back slightly, taking her with me, just in time to see cum spurt from her cock, landing all over her chest and abdomen. It was one hell of an orgasm, at least six solid spurts of her hot cum before she was empty. My fingers and thumb were coated in her cum, sucking my fingers dry, before I scooped up the cum on her body and fed it to her, though she kissed me each time to share a little bit.\n\nRealising I hadn't cum yet, surprising even myself, she leaned forward and practically demanded I just pound her until I did finally cum. Taking her by the hips, I thrust hard straight away. I did worry about hurting her, but she turned her body so she was looking back, nothing but a smile the entire time. \"Fill my arse, baby. Cum for me. Give me a baby!\"\n\nThat really turned me on and I came hard. Half the building would have heard my groan before I sagged where I sat on my knees, Cindy lifting herself again to rest back against me. Holding her tightly, she giggled again. \"Did you like that thought, baby?\" I rubbed her belly without thinking, feeling her hand rest over mine. \"I do think about it sometimes,\" she admitted softly.\n\n\"Sweetheart,\" I whispered.\n\n\"No, I don't get upset about it, Mark. Please don't think that. But the idea of you cumming inside me, the idea is still a turn on.\"\n\n\"Definitely a turn on. I'll just keep filling you up then.\"\n\nAfter a shower, we walked back into her bedroom to see her cum stained covered sheets. Looking at each other, we shrugged and just got underneath them. \"To be honest, this whole apartment is going to end up covered in cum by the time you're done with me,\" she said, laughing away.\n\n\"Well, considering how turned on I am all the time nowadays,\" I added.\n\nCuddling into me, her head resting under my chin, I stroked her back as we slowly relaxed. Thankfully, the horniness was now subsiding and I think we were both ready to go to sleep. \"You have Natalie next weekend?\"\n\n\"Yeah.\"\n\n\"I'll organise for you to meet the family the weekend after that. Will you want to speak to your ex-wife this weekend about me?\"\n\n\"Only if you feel comfortable telling her. I'd suggest it's none of her business, but I know she could try and make things awkward.\"\n\n\"What she thinks doesn't really matter. But I adore Natalie already. I'd like her to understand that while I'm a woman, I do come with a difference, though we'll keep it as simple as possible.\"\n\n\"She's a smart kid. What will matter most is that her father loves you, and you love her father.\"\n\n\"What about your son?\"\n\n\"Hmmm. That might be a little more awkward, I guess. He's at that age where he'll understand but make assumptions. Though he's known Mike and Chris all his life so that might help.\"\n\nWaking up later than expect the next morning, we dressed quickly and I took us out for breakfast. Spending the morning wandering around hand in hand, fairly aimlessly as she was interested in one or two shops, we stayed out long enough to eventually buy ourselves lunch before heading back to her apartment. Sitting together on her couch, I wasn't surprised she ended up straddling me, nor by the fact we ended up naked, nor by the fact that after my cock was lubed up, she happily slid down it. What amused me was the fact she rested against my chest without moving.\n\n\"Just love it inside me,\" she whispered.\n\n\"Can I stroke your cock?\"\n\n\"Baby, you can do whatever you want.\"\n\nShe sat back, resting her hands on my shoulders, as I lubed up her cock before stroking it. She didn't move on my cock, watching me with interest as I started stroking her slowly, picking up the tempo as I sensed her getting more and more turned on. She kissed me deeply once she was far too turned on, bouncing up and down on my cock hard as I really started to stroke her cock. Her tongue was practically down my throat at times, which seemed to make my cock even harder.\n\n\"Oh god!\" she groaned. I aimed her cock just in time, feeling at least six spurts of her cum fire onto my chest. With it still dripping off my chest, I picked her up and turned us around so she was on her back. She spread her legs wide and growled, \"Fuck my arse!\"\n\nI obliged my lover, pounding her for all I was worth for perhaps five minutes, pushing her legs back so her knees rested by her head, still amazed by her flexibility. With her arse completely exposed, we both watched my cock slamming her arse. \"Fucking hell,\" I growled, \"Where were you after I left her?\"\n\n\"Worth the wait, baby. Worth the fucking wait.\"\n\nI leaned down, my hands still on the back of her knees, my cock feeling even deeper inside her. \"You're mine, Cindy,\" I grunted, \"Your arse. Your cock. Your body. Everything. You belong to me now.\"\n\n\"Long as I own you in return,\" she retorted, leaning up to kiss me hard, biting my bottom lip as she broke it.\n\n\"Absolutely. Yours forever.\" I started to really drive into her. \"I've never loved anyone as much as I love you.\"\n\nHer eyes widened as I stopped with my cock buried, comprehending what I'd just said. And I'd meant it. I had loved my ex-wife but I honestly couldn't remember a time I'd loved her as much as I loved Cindy in that moment. Maybe it was lingering bitterness that clouded my mind. I'd had girlfriends before my ex-wife. Maybe it was the passage of time. Maybe it was because it still felt new with her. But I couldn't remember falling in love as deeply, and as fast, as I had with her.\n\nI leaned down and kissed her softly, seeing the emotion on her face. \"I mean it,\" I whispered, meeting her eyes, hers searching mine.\n\nHer face lit up in a smile. \"Definitely introducing you to the family now. But before that, you really need to cum in me.\"\n\n\"Ah, sorry. Caught up in the moment.\"\n\nShe giggled before grabbing the back of my head, resting her forehead against mine. \"My arse needs a pounding, handsome. I expect a load of cum in me shortly.\"\n\n\"Love it when you talk dirty.\"\n\n\"Do you like me being your submissive little girl?\" I almost snorted as I kept pumping into her. \"I have a school uniform.\" I raised my eyebrows in amusement. \"Maybe you could discipline me...\"\n\n\"Anything else?\" I grunted.\n\n\"I'll wear anything you want, Mark, though I have a few ideas already.\"\n\n\"Anything you want me to do?\"\n\n\"Keep fucking me forever!\"\n\nI couldn't quite do that, lasting barely a couple of minutes before I groaned and came hard. The sort of orgasm where I left my cock buried but almost collapsed on the smaller woman beneath me. Feeling her legs wrap around me, her fingers stroked my back as she whispered sweet words into my ear. Once my cock softened, I had to roll onto my side, Cindy spooning into me immediately, ensuring she was snug in my arms.\n\nWe both passed out rather quickly."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "romance",
        "anal",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/ambiramus-ch-03"
}