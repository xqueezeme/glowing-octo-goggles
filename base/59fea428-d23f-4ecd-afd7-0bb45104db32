{
    "title": "The Twelve Tables Ch. 24",
    "pages": [
        "Authors Note: My apologies for the delay in this chapter. My muse went walkabout and left me with no words to string into the web of this story. I hope you enjoy this chapter. Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you also to Margaret who proofread for me. ~ellie\n\nPeri returned home with her family two days later. They left at the end of a long day where she and Rosanna had worked together to get as much information as they could about the closest members of the family into the online database. Rosanna seemed to understand the system Peri was attempting to set up and while it wasn't perfect yet she could see the tweaks CJ was making in the new versions he uploaded.\n\nPeri left Rosanna with the task of slowly adding to the database and communicating with both herself and CJ through emails mostly about any updates. It wasn't a hard task just very time consuming, and Antonia did not wish anyone but the three women who had started the project together handling her precious journals that held all the current family information.\n\nShe'd spoken to Josh and Dante about her problem with Carmen. She listened to what Ang had told them and welcomed Rosanna warmly when she had approached her the following day. She didn't talk to her about Carmen though, not wanting her to feel like she was in the middle of a power struggle. Instead, she had accepted the vague apology Rosanna offered without any further questions and welcomed her to help with the first of her big projects.\n\nIt was during the quiet times that she thought about the problem and how she could diffuse the situation without having to exclude Carmen from any of the projects she was working on with the rest of the ladies. Peri had called Margarite, and she had been thrilled about the idea of a big family christening with them. Realising that Emily had not given them an answer before she left the farm, Lucia called her and explained that both of the other women had been enthusiastic, about the shared event. She had emphasised that it would be a shame if Timo were the only one not being christened on the day, especially as Bianca and Jules would be flying back for it. Emily had reluctantly agreed to be part of the event.\n\nPeri knew the key to having this day be drama free and have everyone enjoy it fully was to deal with her issue with Carmen. She needed to know what promises she had made and to whom. She reasoned that there were two ways she could find out. She could ask Carmen directly, but she wasn't sure her sister-in-law would tell her the truth, even when confronted with the knowledge that Peri knew there was more to her antagonism. Or she could go through the table to Vincenzo, who would know or be able to find out if he didn't already know.\n\nNeither alternative was fuss free and she wasn't sure how much authority she had with the current table to ask for a meeting with Vincenzo about this subject. She had his contact details, and she could call him herself rather than having Josh organise it for her, but she worried about navigating the family rules around this. In the end, she had decided that the worst that could happen if she called Vincenzo is that he would tell her that he couldn't help her, and she decided to call him once they were home and gotten settled again.\n\nHaving flown home late in the evening, she had gone to the nursery with the nannies to help the babies settle while Josh and Dante spoke to the household staff about going to the city apartment on the thirty-first to stay for a week until the epiphany meeting of the table. Peri was exhausted and went to shower after ensuring the triplets were fast asleep in their beds. She was glad to be home and in her own bed even if it was only for two days before they left again to go into the city.\n\nShe stood under the hot water considering how she could approach Vincenzo when she finally realised she had a third option. She could approach Zita, Vincenzo's wife. Surely she had access to all sorts of information. She knew now that the men of the Donati family relied on their wives far more than anyone ever realised. She would feel more comfortable having the conversation about Carmen with Zita and not getting the men involved at all if she could help it. She felt better about what she had to do by the time she turned off the steaming water.\n\nShe got out of the shower and put on a robe wrapping it tightly around her body. She looked longingly at the bed but decided to go and find Josh and Dante before finally crawling into it. She found them sitting in the living room talking quietly with the television on at a low volume. It was rare to see them with the television on unless it was sports related, so she stopped a few feet behind them and watched for a few minutes.\n\nHer mild curiosity turned to horror as she watched the news report and she made a strangled sound as her chest and throat tightened in fear. Both men turned simultaneously to look at her, but she couldn't take her eyes from the screen or drown out the voice of the reporter:\n\n\"A dormitory fire claimed the lives of three prisoners early this evening. Two of the women killed' Celia Castillo, and Hannah McMillian were partners and criminal associates of known drug smugglers David and Michael Kirkman. Two other prisoners were injured in the fire. A senior police officer said that the fire had been set as a reaction to the escape of four other prisoners earlier today. That escape occurred at ten this morning when four women forced open a laundry door and scaled two fences. Two of the women were quickly apprehended by police officers near the prison grounds while two prisoners continue to evade capture and remain at large. It has been suggested that the third deceased woman, Veronica Maris, lit the fire in reaction to being left behind by those who had escaped. It is thought that she had been removed from laundry duty due to an altercation during breakfast. It is believed that all three died from asphyxiation.\"\n\n\"She's dead?\" Peri asked unable to process the information on the television that showed emergency services still surrounding the prison.\n\n\"The commander called to let us know that he had confirmed that it was her,\" Josh said woodenly holding her in his arms.\n\n\"I never wanted her dead, Josh,\" she whispered feeling numb. \n\n\"I know,\" he said.\n\n\"I'm so sorry,\" she whispered and held him close. \n\n*****\n\nIn the following two days, Lucia had stepped up and had taken over for Peri and her mother in working with her Aunts on a memorial service for Nik. The autopsy and inquest meant that there would be no physical body to bury for weeks yet, but it was agreed by Joseph and Antonia that it would be better for the family to put her to rest before the new year began.\n\nPeri drove to the city on the morning of the thirty-first with mixed emotions. She was devastated for Josh at the loss of his twin, but her relief that she no longer felt so scared of Nik's return couldn't be denied. Josh had not taken the news well on that first night and had stayed up until dawn drinking with Dante and talking. He'd uncharacteristically slept half of the next day, and when he reappeared, he seemed to have compartmentalised his grief and continued with life as normal which worried Peri. \n\nHis phone rang constantly, and he spoke in sombre tones as people sympathised while giving him their condolences on the tragic death of his sister. As far as most people knew she died in an accident. Only the closest of relatives knew the truth about her crimes and subsequent death in the prison. Dante seemed unconcerned with the way Josh was handling his grief and Peri tried not to worry, but she knew he must be dying inside. No matter what Nik had become she was his twin, and they had lived a lifetime together.\n\nShe followed Josh's car into the parking lot and pulled up beside him in a reserved car space. The nannies and babies following them in the van pulled up moments later. It had seemed silly to take so many cars, but she had wanted her car for the week they would be in the city, so she could go and visit her friends and mother. They would all be busy with their plans now, and it seemed silly for one of the men to be constantly having to change their plans for her, or for her to have a driver when she just wanted to go home to see her mother sometimes. She'd argued about needing independence, and they had finally relented.\n\nThey went upstairs together opening up the children's apartment before going up to their own. Peri loved the city apartment. It was very different to the house that Josh had built for her, but Dante had hired Grant who had worked closely with her on the interior of the country house, and he had also created the interiors here with her style in mind but with Dante's influences rather than Josh's. The effect was amazing in its contrasts and similarities. She didn't have a great deal of time to settle into her home for the week. They had about an hour before they had to leave for the memorial and once again Peri silently thanked Lucia that she hadn't had to be involved in the organisation of it.\n\nPeri made sure the babies were settled though and that the nannies were happy and had everything they needed. Then she went upstairs to change into the outfit she had chosen for the memorial. She chose a deep purple dress rather than black. She was sad for Josh and his family, but she felt no sadness that her family were now safe from Nik's insanity.\n\nTo Peri, it seemed as though Dante was more upset about Nik's death than Josh. She wondered if in the days before Nik had been sent to the Battaglia and again when she had tried to kill her had altered Josh's perception of Nik in ways that Dante couldn't understand. If Josh had been at the courthouse and seen how she had been during the trial Peri imagined, he would know that this was the best outcome for her and his children. He had told her, at the time, he couldn't be there, none of his family could be seen to be supporting Nik. Still, the bond he had shared with Nik should have made him more responsive to her death, Peri thought. She gave a half smile as she came out of the bedroom dressed for the memorial. Dante returned her half smile, but Josh seemed not to notice and moved to embrace her as if going through the motions. \n\n\"You look beautiful,\" he said woodenly. \"How are you feeling?\"\n\n\"I'm okay Josh. I'm more worried about you than anything else,\" she said quietly as his arms remained tight around her.\n\n\"She's at peace now,\" he murmured. \"Everyone can move on now from what she had become, and we can feel safer.\" She'd heard him say those words several times in the last two days as if justifying his lack of emotion over his sister's death.\n\nA driver waited for them outside the building to take them to Saint Stephen's Cathedral. As with Lio's funeral people filled every pew and Peri wondered if some of them had arrived just to make sure Nik was gone. The memorial itself and those who spoke at it centred their words on her younger years when she dreamed of fashion design and the catwalks of Europe. Peri had been surprised to discover this other side of Nik, the dreams she had and the charity work she did. It made her wish she had have known Nik before her madness took control.\n\nWhen Josh addressed the gathered mourners, he spoke with affection for his twin and recounted several funny anecdotes from their childhood all of which seemed, to begin with, Nik leading him on a harebrained adventure that went horribly wrong by the end of the story. He didn't say she would be missed or what a terrible waste of life it was that she had been taken so young as the other speakers did. He ended his words by thanking everyone for coming and asking them to remember the good times.\n\nPeri looked at the empty coffin and wondered if all of the mourners realised there was nobody there. It didn't seem real to her yet despite the relief she felt. She neither cried nor smiled and it occurred to her that this sense of unrealness she felt might be the reason Josh seemed completely unaffected by the death of his twin.\n\nThe wake which followed the memorial was held in the gallery at the House of Lorraine where Lucia had placed pictures of Nik from various stages of her life along one wall. Peri couldn't deny how beautiful she was and viewed them in an abstract way, as separate from the personality of the woman she had become in her final years of life. She socialised with the mourners accepting and giving sympathy until she finally found Zita sitting closely with her children. \n\n\"Zita, I'd been planning to call you before all this happened,\" Peri said after going through all the obligatory condolences with the family members. \"Do you think we could meet for lunch and have a chat next week?\"\n\n\"Of course Dear,\" Zita had smiled. \"However, there's no time like the present. How about we take a walk, and you can tell me what's on your mind,\" she said surprising Peri.\n\n\"It doesn't have to be right now,\" Peri looked around wondering what Josh would think of her selfishly going on with her plans during his sister's memorial.\n\n\"Nonsense, life goes on my dear, and honestly I'd love to find a window in some quiet corner where I could have a quick cigarette without a lecture from my sisters-in-law,\" she laughed quietly. \"You'd be doing me a favour, honestly. It's difficult to say goodbye to one of the younger generation like this.\"\n\n\"I doubt any of the windows here open because of the air conditioning, but I am sure we could step outside for a few minutes,\" Peri said. The two women excused themselves and walked toward the front of the building. \n\n\"How can I help dear?\" Zita asked as she fished in her handbag for her cigarettes and a lighter.\n\n\"I'm not sure you can, but I'm having one issue that's a bit more challenging than anything else since the new table was named,\" Peri began to explain. \"I need some information and I am not sure that approaching the person involved will get me an honest answer.\"\n\n\"I don't have all the resources that my husband does, but I can usually discover little bits of information when we women need them,\" she laughed lightly and winked at Peri. \"Tell me what you need.\"\n\n\"I guess it's no secret that Carmen thought either she or Emily would become the next Mother,\" Peri said hesitantly not wanting to sound petulant about the situation. \"She's been fairly aggressive in her,\" Peri paused trying to find the right words. \"In her offer to take over and do everything that would be expected of me now.\"\n\n\"I got that feeling when we all met on Christmas morning,\" Zita nodded. Peri felt better knowing the woman had noticed the tension between herself and Carmen.\n\n\"There were two other incidents that Carmen had made sure were kept private,\" Peri explained without going into details.\n\n\"I see,\" Zita said clearly unimpressed as she pursed her lips and blew out a cloud of smoke.\n\n\"The thing is, I believe there is more to the issue than just sour grapes. I think Carmen may have made some promises to people or organisations she deals with that she may have trouble making good on without the authority of being the mother,\" Peri got to the heart of the matter. \"If I knew what these were, maybe I could help her with them and smooth out the rift between us, but I am not sure that confronting her is the best way to find out that information. I am not sure she would trust me enough, to confide in me that she had made plans or promises before the announcement.\"\n\n\"You could be right. It would certainly explain her reaction to the announcement,\" Zita nodded. \"Give me a few days I'll call you Monday and if we need to talk further we can have lunch,\" she said decisively. \"Until then just be your usual friendly self, she may just come around with a little time.\"\n\n\"I don't want the men involved if possible. However, if it's something bigger than I can handle alone it would be nice to know before they have their meeting on Wednesday,\" Peri said softly admitting that she was worried that it was something more than just building a new wing of a hospital or a university scholarship. Either of those she would happily help with and give Carmen the funds and the glory.\n\n\"I understand,\" Zita said quietly thoughtful. \"We'll keep this just between us for now,\" she agreed. \"If we discover something that might be harmful to the family name the men will have to be told, I agree.\"\n\n\"Let's hope it doesn't come to that,\" Peri said sadly.\n\n*****\n\n\"Are you sure it wasn't us?\" Dante demanded yet again. \n\n\"You're the one who told me that we're not killers,\" Josh said unemotionally. \"The Papillo's plan had been set for the fourth. The fire was beyond our control.\" He walked toward the Athenaeum talking quietly with his brother. It was mid-afternoon, and the women of the family had been sent home to their families as the men gathered to discuss the tragedy that had unfolded for Nik. \n\n\"Greetings Gentlemen,\" Marcus said easily as they entered the room. \"Congratulations are in order I believe.\" He slapped Josh on the shoulder, \"My condolences as well,\" he said sombrely.\n\n\"What brings you here on this of all days?\" Josh asked. \n\n\"We found the two women who were still on the run, and they had an interesting story to tell,\" Marcus said conversationally. \"The commander thought it best if you and I knew each other better and he sent me up this morning rather than disturb the memorial you had planned.\"\n\n\"It's a long way to come on New Year's Eve,\" Dante said, \"It must be of some importance.\"\n\n\"True but it's always good to catch up with my brother and sister-in-law,\" Marcus said easily. \"The trip up is no hardship I assure you. I hope to see Peri and your little trio as well while I'm here. We're sure she's blooming with motherhood.\"\n\n\"She is indeed,\" Josh said proudly. \"She's an amazing woman.\"\n\n\"Let's sit shall we I expect everyone else will be along shortly,\" Marcus said in his formal but cheery tone. \n\nThey chatted amiably as the others came into the room and took their seats at the large table. Marcus greeted Dino with a genuine show of affection embracing him and clapping his back loudly.\n\n\"You would have been my first choice too had I been a Donati, well-done brother,\" he congratulated Dino on being part of the table here. \n\n\"So tell us all what you're doing here then, there is no need to schmooze this table,\" Dino laughed.\n\n\"I'll start,\" Joseph said. \"The table is new, and they do not all know the whole story as yet.\" He had debated briefly with Andreas about what he would tell the twelve younger men. It was not their table yet nor their war to fight, but they needed to know that life as they knew it was about to change forever. In a perfect world, they would have eased them into their positions and the knowledge that came with it. Unfortunately, it was not a perfect world, and Nik had created a situation that had brought the need to pass on this knowledge sooner, rather than later.\n\nJoseph and Andreas took over an hour between them to lay out the depths of Nik's betrayal and her involvement in many underworld dealings, including the deaths of her brother, Lio and his lover, at the hands of the Suebi. They stressed the need for unity and strength among those who battled in the shadowy world of political intrigue and influence. \n\nMarcus took up the story of Nik's demise and the new information they had been able to find from the two women they had picked up after a raid on a known Suebi safe house they had been watching.\n\n\"The news reported that the women lit the fire as a result of being left behind when the four women escaped,\" he explained. \"What we have learned was that the fire had always been part of the plan, as Nik had never been allowed to do laundry duty, despite media reports. The idea had been that while the prison was in lockdown after the escape, they would light a fire in the shared cell and a guard that had Suebi sympathies would help them escape once the alarm had been raised and the prisoners evacuated.\"",
        "\"What happened to the guard? Why didn't he get them out?\" Dante demanded. \n\n\"We don't believe they ever intended to,\" Marcus said seriously. \"Nik's narcissism was such that she was making demands of the Suebi women who had befriended her in prison. The plans came from several men who visited those women regularly. We have the visitor's names and are searching for them, although we aren't sure if they used aliases at this stage. We do have the security footage, thanks to the commander who was able to get a copy. It would seem that Nik had become more of a liability than an asset to them, since the family had cut her off. Apparently, she recently threatened to expose their operation.\"\n\n\"So the girls essentially killed themselves?\" Ben was aghast at the idea. \n\n\"The chemicals used as mattress protectors were quite toxic and once the fire took hold they would have died quickly from asphyxiation,\" Marcus said. \"I doubt they would have suffered greatly.\" He said seeing the pain and anguish on several faces around the table.\n\n\"Why didn't we get her out?\" Carlo asked. \"We must have known there was a threat.\"\n\n\"We didn't think the threat was as immediate as this,\" Vincenzo spoke up for the first time. He felt that this was more his fault than anyone.\n\n\"The Papillo had organised her transfer to the compound on the fourth,\" Joseph said. \"We knew that she would start making threats and demands in the new year once she believed her penance had been served. We had no way of knowing they would act earlier than us. They had left her alone all year as far as we could tell. If you are looking to point the finger of blame at someone, then I am your man,\" he said gruffly. \"I should have acted earlier, but there were reasons we left our move until the new year. We do not kill or murder; we do things that may not always be deemed as above board, but we try not to hurt anyone in the process.\"\n\n\"I don't think now is the time for blame, nor is it time for retribution,\" Andreas said sternly looking at the faces of the men gathered around the table. \n\n\"What we do now, with this new information, should be the discussion at hand,\" Charles said. \"Do we leave it in the hands of our brothers, the Battaglia or do we realise there is an organisation here in our region that we need to deal with? Who's next? Who's vulnerable to them? Now is the time to be sure of those around us and ensure we lose no more family to the Suebi.\"\n\n\"No one needs to know details of what happened to Lio and Nik, but it wouldn't hurt to warn those closest to you of an old family feud which threatens the family and to be careful of making deals with strangers, even if they seem too good to be true,\" Joseph advised.\n\n\"Ben and I will go over everything I've got in the way of information with my team starting tomorrow,\" Vincenzo said raising a questioning eyebrow at Ben, who nodded. \n\n\"I have a package for you both,\" Marcus said and pushed a full envelope across the table to Vincenzo. \"We have reason to believe they may have targeted another member of your family already. Having a second source of information may be why they were so willing to get rid of Nik permanently at this time.\"\n\n\"Tonight we celebrate the end of what has been a traumatic year. Then tomorrow we work on protecting the ones we love. If the Suebi feared our influence and power before now, just wait until they see the next generation in action. Now that we know what we're dealing with, I am sure every man here will work to ensure that the family not only survives but flourishes,\" Josh said vehemently. \n\n*****\n\nAntonia had stayed with her sisters-in-law to help with the organisation of the new year's gathering the older women of the family had planned for that evening. This celebration had been planned well in advance, once they had been told the new table would be forming in the new year. The plans had changed in the interim where the table was concerned, but the celebration remained. The six remaining men of the current Donati rulers would bring in the new year with their families in a show of solidarity and brotherhood with their chosen sons. In terms of family gatherings, the guest list was small, but each person coming this evening was at the heart of that larger family. \n\n\"I may have questioned the decision to make Josh and Peri the Mother and Father of the Donati, but I am beginning to see what you and Joseph see in Peri,\" Zita said quietly to Antonia. \"She's a thoughtful girl not ruled by emotions or given to over-dramatizations.\"\n\n\"She's intelligent, she understands the value of those around her, and whether she believes it herself or not yet, she is strong enough to lead not only the women but our sons,\" Antonia said equally quietly. \"She is a natural diplomat. She charmed the Vitali when we were there, and she has strong alliances with the Battaglia. The Farnese already know of her. She's in a good place to lead and commands respect already.\"\n\n\"You don't have to sell her to me,\" Zita laughed.\n\n\"I'm sorry,\" Antonia smiled. \"I guess I have been waiting for the questions to come up.\"\n\n\"We trust you and while the others like me are probably waiting to form their opinions we trust that the table chose the best to lead us into the future,\" she smiled. \"We just don't know her as well as you do, but I must say I'm pleasantly surprised by what I know so far. She has my full support.\"\n\n\"And mine,\" Marisol joined their conversation.\n\n\"Anyone who can make Manuel smile must be someone special. He loves her, and as we all know, he doesn't like many people,\" Concetta laughed. \"The younger ones will come around. They just need time to readjust their thinking. You remember what it was like at the beginning of our table. Emily and Carmen both had high hopes for their families, and that will take some time to overcome. I imagine Carmen is considering whether she could have four more sons in as many years and demand a change of leadership.\"\n\n\"She wouldn't would she?\" Zita gasped as the three other women looked at Concetta as if the thought had never occurred to them.\n\n\"It's an option,\" Marisol said considering the idea.\n\n\"Interesting times ahead ladies, we'll have to watch that closely,\" Concetta said with a laugh. \"Let's hope she has given that option as much thought as you all obviously have. None!\"\n\n*****\n\nPeri had gone home alone, grateful for some time to be left to her thoughts. She went to the nursery and spent some time playing with her babies. She hugged Eden closely and watched the boys play on their bellies and roll over. They were making all of their milestones easily and although Eden lagged behind a little she was not so far behind that it was a source of anxiety. She was the smallest of the three and Peri imagined that her little girl would always struggle to keep up with her brothers. She hoped her next baby would be a little girl so Eden would have someone trying to keep up with her.\n\nShe stayed in the nursery until the babies went down again for their afternoon sleep and then she went upstairs to rest before the party tonight. She picked up a book she had taken from Antonia's library and lay on the couch. She could hear the staff in the apartment moving quietly around and felt somehow reassured that she wasn't totally alone. \n\nIt was strange how quickly she had become used to her new life since meeting and marrying Josh. In less than a year, she moved three times to bigger and better homes and now had two. She had gone from having one staff member to now having ten if she included the nannies and knew that would only increase as time went on and they took on more responsibility for the family. If she included her team at work, then she had close to twenty staff already.\n\nShe had gone from being a shy and plain little research mouse to the mother of one of the most respected families in the state. She closed her eyes and wondered how she had ever become this woman and knew it was her love for Josh that had guided her here. She tried to reconcile the timid little mouse she had been with the woman she had become in just over a year. She didn't feel any different. She would have liked to believe she was still the same woman as she had been, but hearing another sound in the apartment she knew she was vastly different on many levels.\n\n\"Who are you?\" she asked herself out loud. She found herself wishing she had have journaled all the changes in her life over the last year, and she got up to go and find the office that had been moved in the refurbishment of the apartment. She didn't want a digital diary. She wanted a leather bound book like the books she had found in Antonia's secret haven. She wanted a fellow book lover like herself to find them in a hundred years and discover what her life was like as she embarked on a new life in the new year.\n\nShe found the office and was surprised by a gift-wrapped box on the desk. There was a card with her name neatly spelled out in fine calligraphy. Sitting and looking at it in wonder she reached for the card and opened it. \n\n\"My love, I knew you would seek out the library and office here eventually. You love the history found in books and the people you get to know within them. It's time to start leaving that legacy for future generations in the way that historians do. I know you now almost as well as I know myself, and as the year ends, I know you will be questioning and reasoning and wanting to see into the future by looking at the past. I had Dominic commission these for you and keep the exact details on file because it is my hope that you will fill them all and need more. I am looking forward to what the future holds for us. I love you,\n\nDante.\"\n\nShe opened the box and took out a calligraphy set that had been engraved with her name. She touched it in wonder as she reached inside to remove one of the journals. The rich russet leather had been aged but did not look worn, and it was tooled in great detail. The leather in the centre depicted three hearts intertwined and the decorative border surrounding it repeated the same intertwining hearts into a chain like image. Her full name Perinique Donati sat at the top left of the cover and in the bottom right it stated Volume one.\n\nShe smiled as she opened it and saw the inside cover was also decorated with diamond shaped panel. The image within the diamond depicted a landscape in relief of a willow tree with low branches beside a small tumbling fall. Peri could imagine that this image was taken from the spot across from where they had spent their long slow afternoon together at the farm and she smiled. She ran a finger over the edge of the blanket that peaked out from beneath the tree. She had finally admitted that she loved him deeply that afternoon. She had been fighting the feelings but found that although it was different to how she loved Josh the emotions ran just as deep. It wasn't something she could explain easily even to herself, but she knew she loved them equally, but in different ways.\n\nThese journals were exactly what she had come looking for, thinking only to find a notebook. Dante did know her and was able to predict her need. She gave a small laugh. He was indeed the oracle or at least her oracle. She wished he was here to thank personally. She found herself longing for more of the time they had spent alone together at the farm. Their world had become crazy after that afternoon, did he realise that it would be their last chance to find each other before the chaos set in, she wondered. He had a way of making sure she had everything she needed including having come to terms with her feelings for him before seeing Lucia.\n\nHaving found the other journals similarly bound and numbered she opened the first and began to write a synopsis of the year that was ending before going onto her hopes for the future. She had been sitting there for some time before Bridgette came to disturb her. \n\n\"Josh and Dante are returning with a guest,\" she said quietly after Peri looked up to acknowledge her presence in the room. \"You should probably dress for the party which I imagine they will want to leave shortly after to attend.\"\n\n\"Gosh yes,\" Peri said closing the journal and replacing it and the calligraphy set in the gift box. She would take the time this week to see if there was a writing box down in the repository that she could use for her journals until she had managed to create a private space for herself here and at home. Not that here wasn't home, but she was still getting used to having two homes, three if she counted her mother's house that she had lived in until this year. Three was becoming her lucky number; she smiled to herself as she walked out of the office.\n\nShe had quickly showered and dressed, grateful once again that her mother had become her personal shopper. The Venetian style ball was a chance to dress in the period costumes she loved. Andie had managed to have a gown made for her that was perfect. It was a pale blue Cinderella-like gown, and that was exactly how she felt after spending over an hour journaling about the changes in her life this year. She went out to the living room expecting her Princes Charming to be there already.\n\n\"Marcus!\" She smiled widely seeing him sitting with them as she entered the living room. \"What a lovely surprise.\" She went to hug him as he came to his feet. \n\n\"It's always good to see you when I visit. I must say you look spectacular,\" he returned her wide smile. \"You must save me a dance at the ball tonight, Cinderella.\"\n\n\"Is it too much?\" she worried looking at Josh and Dante as she asked the question.\n\n\"You're looking amazing,\" Josh eyed her ample cleavage above the tight corset-like bodice. \"There's something missing, though.\"\n\n\"Yeah somethings not quite right,\" Dante agreed with a smile. Making Marcus turn to look at the two men with a questioning frown. \"You look beautiful, and radiant, but Josh is right there's something missing.\"\n\n\"I can never tell if they're teasing me or not when they agree with each other like this,\" Peri said to Marcus with a soft laugh.\n\n\"Why don't you introduce me to those little bundles of joy instead of listening to them. You look perfect for the ball,\" Marcus said. \"I'm sure they have costumes of their own to get into.\" He chuckled. \"I imagine they don't have the legs for tights, though.\" He winked at her.\n\n\"I would love that,\" Peri said eagerly. \"The babies aren't nearly as hard to handle as these two,\" she laughed merrily and escorted him downstairs. \"So spending some time with Josh must mean the Commander is getting ready to retire as well?\" Peri asked not sure if she was supposed to know or not. \n\n\"We have all evening to talk about me, I want to know all about your babies,\" he laughed. \"Usually, I don't have to ask the first time mother's more than once,\" he chuckled. \"Trust me nothing would make me happier to hear how proud you are of your little ones.\"\n\nShe laughed and began to tell him about the beautiful triplets before they got to the nursery. They spent close to an hour in the nursery while they talked about the different personalities they were developing and that the little fairy Eden was already trying to catch up to her brothers. Peri was happy and in her element when Josh and Dante came down in their long leather waistcoats and boots looking more like fighting musketeers rather than the brightly coloured courtiers she had imagined they would be dressed as.\n\n\"What no Prince Charming?\" Marcus asked shaking his head.\n\n\"I already married her, now I just have to protect her from the villains,\" Josh said putting his hand on his sword.\n\n\"You can't have just one musketeer,\" Dante said with a perfectly straight face. \"Lucia sent over a costume for you. It's upstairs in the guest room, take your time we can wait.\" \n\nDante showed Marcus up to the guest room as Josh and Peri lingered over the babies a few moments longer before following them upstairs.\n\n\"Staying on the farm for so long and then coming back to the news about Nik meant that D. and I put off giving you a proper Christmas gift,\" Josh said. \n\n\"That's not necessary, I gave you something so small and insignificant, and I have everything I need,\" she smiled thinking of the personalised business diaries she had given each of them knowing this would be a hugely busy year for them both.\n\n\"You, as always, were thinking about the best way to help us,\" Dante said as he met them in the living room. \"That's far from insignificant. You're a true Queen now, the Donati queen. You married Prince Charming and had tiny royal children, and you can't convince me Eden is anything but a fairy princess,\" He said making Peri giggle.\n\nPeri accepted the wide flat velvet box from Josh and opened it, her breath catching in her throat as she looked at the beautiful matching necklace and earrings.\n\n\"It's too much,\" she whispered gazing at the glittering jewels.\n\n\"I'd say it's not nearly enough after the year you've been through, but we will make it up to you now,\" Josh said softly taking the necklace from the box and placing it gently around her neck and fastening it. \n\n\"Now your costume is perfect,\" Dante said. \"I'd like to take the equal credit Josh is giving me for this, but it was all Josh, I agree with the sentiment, though.\"\n\n\"I found the box you left in the office for me,\" she smiled at Dante, \"and it is more than equal to this,\" she touched the jewels at her throat. \"He gave me some journals to start writing in this year,\" she explained at Josh's inquisitive look. \n\n\"We live in momentous times, and I thought it was the time she started writing her story for future historians,\" Dante chuckled.\n\n\"That's a good idea,\" Josh agreed. \n\n\"I love you both and this year has brought me far more joy than it has heartache. I know everyone else thinks of the tragedies that have befallen the family this year, but I am surrounded by people I love and who love me back, what more could I ever ask for. This year has brought me far more than I ever dreamed of and I'm happy. Truly happy,\" she kissed them both. \n\n*****\n\nThe New Year's Eve Party held a sombre air after the memorial earlier during the day. Small groups talked in hushed tones, as low sedate music played in the background. Peri had an idea and wandered over to where Carmen stood a little apart from the group sipping on a drink.\n\n\"I think the mood from today has carried into this evening,\" Peri said breaking the ice between them.\n\n\"You could be right,\" Carmen said. \"It is never pleasant to say goodbye to a loved one, though I imagine you're quite pleased.\" She said judgementally.\n\n\"I may not have trusted her to babysit my children, but I never wished her any harm Carmen. She was Josh's sister. His twin. My heart broke when we found out she had died,\" Peri said sincerely surprising Carmen. \"I can't believe that two of our husband's siblings have died in such a short space of time, it's tragic, but as Zita has reminded me, life is for the living and dwelling in the past doesn't do anyone any good.\"\n\n\"That's true, and I can see what you mean about the party being a bit gloomy,\" Carmen admitted giving a little leeway after hearing the emotion in Peri's voice.\n\n\"We have this lovely band here, why don't we have a bit of karaoke,\" Peri suggested to Carmen. \"Everyone loves your voice when you sing. Why don't we pick a few songs that we normally hear at the New Years Eve Parties and see if we can make it more festive? Maybe we could convince the others to have a bit of a concert to liven things up and remember the good things that happened this year as well?\"\n\n\"Like what?\" Carmen asked as if she was considering the idea.\n\n\"All I can think of is rock ballads, like the Final Countdown or that one from that movie, you know, the dude with the big mouth?\" Peri said hopelessly.\n\n\"Mick Jagger?\" She offered.\n\n\"No, the other one, his daughter was in the movie,\" Peri struggled to remember the name.",
        "\"Armageddon?\" Carmen asked as if it was a trivia contest now. \n\n\"Yes! I can't remember the name of it, but you know the song I mean right?\" Peri enthused.\n\n\"I guess we could ask the band if they have a playlist,\" she suggested \n\n\"That's a great idea,\" Peri said. \"It's been an awful day, but it would be nice to bring in the new year on a happy note don't you think?\"\n\n\"It would be good to bring in the new year on a cheerful note,\" Carmen agreed slowly as if she didn't want to agree with Peri.\n\n\"What are you two ladies planning over here?\" Zita said approaching them with a smile.\n\n\"Carmen has such a lovely voice that I thought if I could convince her to sing with the band it might cheer everyone up. Maybe even inspire some karaoke? Like we do at Christmas, sort of, but just some fun end of the year type songs.\" Peri said trying to draw the older woman into the conversation.\n\n\"It's a good idea, I'm just not sure this is what Antonia and Joseph would want after a memorial for Nik,\" Carmen said sadly.\n\n\"Nonsense my dear, life is for the living,\" Zita said with a smile. \"I would enjoy that. We oldies didn't get the chance to sing at Christmas time. What can this band play?\"\n\n\"I thought we could ask them for a playlist,\" Carmen said quickly before Peri could take full credit for the idea.\n\n\"Excellent let's get this party started, and if they don't like it, you can blame me,\" Zita laughed. \"Why don't we go and see the band leader about that playlist.\"\n\n\"That's not necessary, Peri and I were going to go and check with Antonia and Joseph first. I'm not sure how much of a party they would want after today,\" Carmen said carefully.\n\n\"If you think it's necessary we'll follow your lead won't we Peri,\" Zita said cheerfully.\n\n\"Of course,\" Peri nodded. \"It would be nice to bring in the new year with some cheer. I'm sure Mama and Papa will feel the same. Will we ask together or would you like just one of us to go over?\"\n\n\"I'll go,\" Carmen said quickly.\n\n\"We can all go, there's strength in numbers,\" Zita suggested.\n\nApproaching Antonia, Peri hung back a little letting Carmen take the lead and was surprised when she turned to her suddenly looking worried.\n\n\"Mama,\" Peri said getting Antonia's attention. \"I was wondering since we have the band here if it might not be nice for some of those with good voices to do a few songs to liven up the party a little. It's been a sad day, but we have so much to be thankful for this year, and it would be nice to bring the new year in on a happy note. Carmen has such a lovely voice, I suggested it to her first thinking she might break the ice with everyone.\"\n\n\"That's a lovely idea,\" Antonia smiled. \n\n\"I thought we could ask the band for a playlist and maybe pass it around a bit like karaoke without the tacky screens,\" Carmen joined the conversation seeing Antonia agree to the suggestion. \n\n\"Perhaps you and Papa might like to sing this time too?\" Peri asked. \"I am sure your children get their gift from their parents.\"\n\n\"You don't have to ask me twice,\" Zita laughed, \"We could do a duet, Antonia. \n\n\"We'll see,\" she laughed and shook her head in the negative as if saying no. \"It's a lovely idea why don't you go and see the band leader and get the playlist,\" she said to Carmen.\n\nIt was about twenty minutes later when Carmen came back circulating a few sheets of paper with the band's song list on them. Peri noted both the murmurs of approval from the family and groans from those who were reluctant singers.\n\n\"Ah my boy, don't groan,\" Manuel chuckled to his son. \"They can play Stars, and you and your cousins can repeat the Christmas performance so your wife can hear how good you sound when you aren't in the shower.\"\n\nLorenzo scowled at his father as his wife grinned widely nodding enthusiastically. \"That would be so cool this is the first time I have been out of the house for weeks. First, I meet all these wonderful cousins and family, and now I find out you can sing as well? This is going to be a great party!\" Margarite laughed.\n\n\"Alright men let's get this over with,\" Lorenzo grumbled.\n\n\"I need a few more drinks before we attempt that again,\" Dino laughed. \"Let's just build the anticipation a bit more. Let the stars of the family take the lead,\" he nodded in Josh's direction.\n\n\"Nah, he only sings Christmas carols,\" Ben shook his head. \"It's expected during the Christmas concert, but we've never been able to get him to sing any other time.\" \n\n\"Sounds like a challenge,\" Lorenzo grinned. \"If I have to sing then he should too. I think I will go have a word with that wonderful little wife of his.\"\n\n\"I imagine Ang will want to take bets on whether he will sing or not,\" Ben chuckled. \"I think I might get in early while the odds are still good.\" He got to his feet and walked in the direction of his older brother.\n\nPeri listened to the conversations around her as she looked over the list. She was pleased with the wide variety of music the band played. She assumed they did weddings, as well as nights like this as she smiled at some of the song choices. She looked up as Carmen came back to where she stood.\n\n\"What are you going to start with Carmen?\" Peri asked cheerfully. She was trying very hard to befriend this woman in the hopes that things would work themselves out as Zita had said. She could tell though that Carmen was not going to make it easy for her.\n\n\"I thought since this was your idea we could sing something together,\" Carmen said sweetly. Peri knew she would sound like a drowned cat next to Carmen and her beautiful voice and considered if this was her way of showing her superiority. \n\n\"What did you have in mind?\" Peri asked.\n\n\"We could do that song that you planned to do with Josh at Christmas, that you let Arianna sing,\" she suggested. \"Seeing as you know it so well now.\"\n\n\"I guess but I was hoping for something a little more upbeat, and I am not sure I am a strong enough singer to be able to sing that one with you,\" Peri admitted.\n\n\"It will be fine if you can sing it with Josh you can sing it with me,\" Carmen said sweetly. \"I think it will be nice to start a bit slower with the sombre mood and gradually build up to the party songs. It will be a good ice breaker.\"\n\n\"Ah, there you are,\" Lorenzo smiled and took a seat beside them.\n\n\"Hello Larry,\" Peri said returning his smile.\n\n\"Dad's trying to convince me and the boys to redo our Christmas song so Margarite can hear it and I thought it would be nice for you and Josh to sing that song you gave Arianna. You know as the future leaders it would be good to see the two of you get up there together, and I know Margarite would love it,\" he said earnestly.\n\n\"I was just telling Peri she should sing that with me, it was originally sung by two women,\" Carmen said.\n\n\"Still, I think it would be good to see Peri and Josh up there together don't you think?\" Lorenzo asked not noticing the tension in Carmen's face. \n\n\"The video that went with it is such a good way to remember the year and move on. So many highs and lows. All the children's successes. I'm sure CJ has it on a server somewhere and could hook something up,\" Carmen insisted. \"Josh never got to see it the first time because he was singing with Arianna.\n\n\"Alright as long as they do a song together after that,\" Lorenzo insisted. \n\n\"I guess,\" Peri agreed feeling the weight of the argument. \"I'd rather not have the video though it was very sad and I was hoping to raise the mood a little with the singing.\"\n\n\"Well you don't want to be singing I'm Happy after a day like today, do you?\" Carmen asked in an accusing tone. \"You need to work up to that if you do plan to sing it.\" She added with a disapproving tone.\n\n\"I wouldn't have done that,\" Peri said quietly and stopped herself from arguing once again that she cared about Nik and what had happened to her. Admittedly most of her care and concern came more from her worry for Josh and Dante than for herself, but she had never wished her harm regardless of what she had done.\n\n\"Steady on, Carmen,\" Lorenzo frowned. \"Peri was just suggesting we try to bring in the new year on a better note than the way we are leaving it. Which is for the best, I have to agree. It's been a rocky year.\" He turned to Peri then. \"I understand your feelings, but the video is a good way to say goodbye to all the ups and downs and try to concentrate on the good things that happened this year.\"\n\nLorenzo had taken what he had learned that afternoon to heart and knew that it was important for this family to come together for healing and celebration. While he grew up outside of the immediate pressures of the inheritance, his cousins faced, his father had been preparing him to take a seat on the table. He'd grown up with the knowledge and understanding of what was involved in being part of the Donati family table. He had seen the pressures on his father show from time to time, but it was only now that he realised the seriousness of the work of the table within, not only local, but wider affairs. He waved CJ over and told him to organise the video.\n\n\"I'm still not sure this is the best song to start with, people cried at the Christmas concert,\" Peri said quietly. \"Maybe Josh should sing with Carmen.\"\n\n\"I'll take full responsibility,\" Lorenzo said. \"I think it would be nice for Margarite too see it. She's so new to the family, and I promise I will sing though I am sure no one will thank either of us for that,\" he chuckled. \"Maybe I can get Josh to sing with me and make me sound better,\" he said considering the idea and remembering that getting Josh to sing to had been the main reason he had come to talk to Peri in the first place. \"I'll let you know when CJ is set up, if you want to cue the band up for it.\" He stood and walked away. \n\n\"What are the odds?\" Lorenzo asked walking past Ben and Ang.\n\n\"A hundred to one. No one has ever convinced him before, your chances aren't good,\" Ang laughed shaking his head.\n\n\"I'll back myself at those odds, put me down for a hundred,\" he chuckled with a wink and went to talk with Dante and Josh. Then he went to talk to his father until CJ was set up. \n\nFifteen minutes later Lorenzo stood in front of the band and tapped the microphone to get everyone's attention. \n\n\"It's only natural that the Master of Ceremonies role should fall to me. I may not be the most handsome or talented man in the room, but I'm possibly the most used to being up on the podium and making speeches,\" he chuckled and paused as his cousins heckled him about his racing career and winner's speeches.\n\n\"The band has kept the mood mellow on hearing of the tragedy of our loss. Many of you were not at Antonia and Joseph's Christmas concert, and you may be surprised that we have so many talented people in the room,\" he looked around at his cousins and siblings. All of his generation had stayed for the party and the first chance to welcome those that would inherit their positions on the table formally in the new year.\n\n\"The band has graciously consented to let some of us sing with them, sight unseen. For those who were fortunate enough to see Arianna take to the stage in her first family performance, I'm sure you won't be disappointed to know that I have asked Peri to fill in for her. Also because Josh had been singing and missed the video that went with the song, Carmen will stand in for him. I think one song truly summed up the year that was, so to start the evening and to look back over the lives of some of those closest to us, \"When you believe.\"\n\nCarmen's voice was strong and loud, and Peri knew hers sounded weak and totally unsuited to the power ballad as she came in on her part. Toward the end, she was grateful that the few singers with the band came in when the choir would have in the original song making her part carry stronger with Carmen's warbling harmony. She had been concentrating so hard on not messing up the lyrics that the audience reaction to the song hadn't registered in her mind until they came to the end and she saw people wiping their eyes between quiet applause.\n\n\"You're welcome,\" Lorenzo cleared his throat as he came back to the microphone. \"Just to push my luck a little further I've also requested this next number. It's one of Margarite's favourites since she saw a cover of it on one of those reality singing shows. To sing the Brother Three version I'm going to need a little help though so Margarite you're going to have to share this one with Peri for tonight. If you will gentlemen?\" He grinned widely at Angelo and Ben as Josh and Dante joined him in front of the band.\n\nThe three-part harmony developed as a cover to Taylor Swift's song Safe and Sound sounded beautiful as the three men occasionally checked the screen behind them where CJ had put up a clip of the words from YouTube. As the song came to an end, Lorenzo stepped back up to the microphone and gave the two men time to take their seats.\n\n\"That's the ball rolling, and enough from me so let's let the band liven this place up a little and make it more of a party to celebrate that we are all here together, and ready start the next year on a lighter note. Who's next?\" He encouraged his audience to step up. \n\n\"That was beautiful,\" Peri smiled up at Josh and Dante as they returned to the table where she had sat with Margarite to watch them.\n\n\"I'm feeling a little left out,\" Margarite giggled as both men kissed Peri, making them laugh. Dante turned and kissed her cheek as Josh took a seat.\n\n\"I think I'll leave a little of that for your husband,\" Josh chuckled.\n\n\"Spoilsport,\" she continued to giggle. Lorenzo came back to the table and accepted a kiss from her, as his mother got up with Zita and began to sing, 'That's What Friends Are For,' with stunning voices that had all of their children paying attention.\n\nThe mood of the night picked up considerably as requests were made of the band between songs performed by the family members. The wine flowed, and the food was served making it more of a party atmosphere and Peri happily sat back enjoying being with the whole family, for what would perhaps be one of the few times that they would all come together like this, where they could just relax and enjoy each other's company.\n\nThe christening was only a few months away, but others would be invited to that event, and the children and their nannies would be there to add to the chaos of belonging to such a large family. Tonight everyone seemed able to relax, and while the mood was not exactly buoyant, they seemed happy. Carmen particularly was in her element with people praising her singing and what a good idea it had been to get the family involved in the entertainment.\n\nPeri realised in her attempt to build a bridge with Carmen and try to extend the hand of friendship, she had unwittingly given the woman the upper hand. She wasn't about to sound like a petulant child running around telling everyone that the singing had been her idea, but she didn't like that Carmen was taking all of the credit for the success of the evening, when the real credit lay with Antonia and her sisters-in-law. She decided to go and thank Antonia for all her hard work on a day when she must have least felt like a party of this size.\n\nPeri stood beside Antonia at the full table where she sat and smiled at everyone. \"This is such a good night. I just wanted to say thank you, the catering was superb, and the band has been so good letting the family sing with them.\"\n\n\"It was a good idea to get everyone up and to sing. You did a wonderful job on that first song, it's a shame you didn't sing it with Josh at Christmas,\" Antonia said.\n\n\"I can barely hold a tune compared to either Carmen or Josh. Even Arianna outshone me,\" Peri laughed. \"I have no illusions about my singing ability.\"\n\n\"Nonsense you were perfectly lovely tonight,\" Zita said. When she had told Antonia that Peri had her full support she had meant it.\n\n\"I think I'd still like to hear the two of you sing together,\" Antonia said looking around. \"Where is Joshua?\" \n\n\"He and Dante were having fun telling some tall stories to the cousins they hadn't seen for a while,\" she pointed to the table where they sat with several other men laughing loudly. \"Every time I turn around there is a new family member to meet. It's a lot of fun trying to keep all the names straight with Josh and Dante playing silly games and telling me nicknames,\" she said with a smile.\n\n\"I'm not sure Dante has ever been the best influence on his brother,\" she smiled indulgently spotting the two men regaling their cousins with a story. \"I almost died when he taught Josh to drive and told him the most important thing when driving was his music selection,\" she shook her head making Peri laugh with her. \n\n\"They complement each other, rather than influence I think, but I understand what you mean about their driving,\" Peri rolled her eyes. \"It came in handy when I was in labour, though,\" she tried to put a positive spin on it.\n\n\"Still, perhaps we should separate them for a few minutes. Can you ask Joshua to come and see me for a moment?\" Antonia asked.\n\n\"Of course,\" Peri said before pausing for a minute. \"I'd rather leave the singing to those with better voices than mine if that's okay,\" she laughed and walked toward the table where Dante and Josh sat.\n\n\"Mama thinks you two trouble makers need to be separated,\" Peri said with a cheeky grin as she stood between the two men she loved.\n\n\"So she sent you to stand between us like a cheeky monkey?\" Dante laughed looking up at her.\n\n\"No she sent me to ask Josh to join her for a few minutes,\" Peri said seriously.\n\n\"I won't keep her waiting then,\" he chuckled and stood to kiss her gently and moved off toward his mother allowing Peri to sit in his seat at the table. Dante reached out and took her hand looking at her critically.\n\n\"Everything, good?\" he asked.\n\n\"Yeah, it's a lovely night everyone seems so happy and relaxed now,\" she said with a soft smile. \n\n\"Life goes on and the New year is about to begin. Making a resolution this year?\" Dante asked.\n\n\"Oh didn't I tell you? I'm giving up sex this year,\" she said with a perfectly straight face. She watched a slow smile spread across his face.\n\n\"I see,\" he replied in a deceptively mild tone. \"In that case, perhaps we should sneak off for a little while before midnight strikes. Just to remind you of what you would be giving up.\"\n\n\"We can't leave now! Everyone will notice,\" Peri laughed.\n\n\"So?\" he leaned over and kissed her lightly. \"It's not like our relationship is a secret with this crowd.\" He stood pulling her up beside him. \"Just a few minutes, no one will even know we were gone,\" he whispered and wrapped an arm around her waist guiding her through the room.\n\nThe ballroom was part of the huge precinct that housed the House of Lorraine and all of its warehouses and buildings including the high-rise that was their home. Dante knew his way around well and took her through a small side door that connected to a series of rooms available to guests and performers who might hire the ballroom for the night. He pulled her into one of the furthest rooms from the door and smiled as he turned on a dim floor lamp.\n\n\"Now about that resolution,\" he said with a slight growl to his voice. He began to unbutton the long leather vest he wore.\n\n\"Dante I still have to be here for a couple of hours. I can't be looking like I just rolled out of your bed,\" she said reasonably.\n\n\"I have no intention of messing up your makeup or hair,\" he said bending slightly to kiss her deeply. \"Well, not much anyway. A little relief though after watching you almost spill out of the top of this dress all evening is called for, though,\" he pressed up against her. \n\n\"Right now?\" She asked breathlessly. \n\n\"Yes right now,\" he looked down into her eyes. \"You and Josh have had over a year of living and sleeping together whereas I am still in the honeymoon phase. I want you right now, and again after that and anytime I can steal you away for a few minutes alone.\" He slid his hand up her leg lifting her long gown.",
        "\"I sometimes forget because you have always been there for me. Not in the same way Josh has been there, but you have been such a big part of my life for so long,\" she began to explain, but he silenced her with another kiss picking her up and carrying her to the small table in the room.\n\n\"This thing has more petticoats than Josh has chest hair,\" he chuckled leaning her back on the table and lifting the skirt. Gently sliding his hands along her legs, he slowly lowered her panties and moved between her legs. Leaning down he kissed the mounds of her breasts which strained at the tight corset-like bodice before he moved up her neck to nibble at her ear and entered her slowly. He groaned softly feeling the warm moist flesh envelop him. \n\nPeri pulled her knees up and wrapped her legs around his hips pulling him further into her as their lips met again. Feeling her need and desire rise to meet his, Dante wasted no more time and began moving within her. He lost himself in her passionate embrace and held nothing back as he fucked her, revelling in the soft whimpers of pleasure she gave in response. \n\nThey moved together in unison their costumes and the chances of being walked in on making them feel the moment more keenly and while it seemed only minutes it was in fact much longer when Dante groaned loudly and slumped over her breathing heavily. Peri quivered with the remnants of the small climax she had managed to achieve.\n\n\"There's something to be said for a quickie now and then,\" she purred softly in the afterglow of sex. Dante chuckled and kissed her helping her to sit up and clean herself up with the panties he had discarded earlier.\n\n\"Not a hair out of place,\" he whispered and stroked her faced tenderly. \"I guess we better get you back in there, little mother.\"\n\n\"Oh stop that,\" she laughed but let him guide her back out into the ballroom. \"I'm just going to visit the ladies room,\" Peri said softly and moved off through the small crowd leaving Dante to deal with Josh who was stalking toward them.\n\n\"I thought she had expressed her milk earlier,\" Josh raised an eyebrow as he spoke and a knowing smile crossed his face as he turned his head to watch her disappear into the bathrooms.\n\n\"I don't think that bodice leaves much room for surplus milk,\" Dante went along with the excuse for their absence.\n\n\"Now that you're both back, Mama wants speeches. So help gather everyone to their seats at the tables,\" Josh instructed with a nod and went in the direction of the bathrooms.\n\n\"Sure thing,\" Dante said as he walked away. Josh seemed unimpressed by their absence and Dante worried. Things between the three of them had been going so well he hadn't considered that Josh would be so bothered it.\n\nPeri quickly cleaned up and fixed the few tendrils of hair that had come loose from the ornate clips she had used in her hair. When she left the bathroom, she had been surprised to find Josh waiting for her and blushed guiltily.\n\n\"How did everything go with Mama?\" Peri asked with a smile.\n\n\"I think Nik's death has hit her harder than she would like to admit,\" Josh said quietly. She'd like Papa and me to make a speech before midnight. We've just been waiting for you and Dante to return,\" he said giving her a strange look that made her feel uneasy.\n\n\"Oh, I'm so sorry,\" Peri said not knowing how to explain so she faltered and said nothing. \"I'm here now, though,\" she smiled softly and took his hand in hers.\n\n\"During nights like this we need to show a strong united front,\" he murmured without accusation but showing he wasn't happy that they had disappeared for so long together without telling him where they were going.\n\nPeri realised that it wasn't what they were doing as much as the fact that he didn't know they had left for more than a few minutes and didn't know where they were. Given recent events, she could understand why he would have worried and in some way would have felt excluded from the moment when he liked to have full control over every situation in their lives.\n\nThey walked back to the table where Antonia and Joseph sat taking seats beside them. Joseph nodded to Josh and stood.\n\n\"It's that time of the evening where you all grumble while I mumble my way through the usual platitudes of thankfulness for having such a fine family to support Antonia and me in our endeavours to make our family name one of the most respected in our town and beyond. Whether in business or philanthropic pursuits no facet of society takes us lightly, and that is due to the hard work of all of you in this room. Without you we could never have achieved what we have in our lifetimes, building on what those who came before us envisioned for our family in this country. Antonia and I want you all to know how grateful we have been for your support over the years and hope that transfers to the new first family, Joshua, and Perinique as they embark on a new era for the Donati family.\" Joseph raised his glass. \"To family,\" he toasted his audience.\n\n\"It would seem that it falls to me to make you all groan and fidget restlessly while I wax lyrically about commitment to family and the continued prosperity of the Donatis,\" Josh said with a crooked smile as he stood next to his father.\n\n\"I haven't had much time to think about what I would like to say to you all on the eve of a new era for us as a family. Despite Papa's words he is far from retiring, and while those of us who have been chosen to lead will begin taking on some of the work and freeing up our fathers to spend more time with their grandchildren, we are not taking the reins just yet. We are fortunate to be following the footsteps of such great men and women, and I am humbled to have been chosen as the spokesman for the next generation.\" He paused for a moment and looked around the room.\n\n\"I'm not sure today is the day for a rousing speech about hard work and loyalty instead I would like to make mention of the love in this room. From our newest family member, welcome Margarite, to our oldest, and I won't mention any names there,\" he chuckled with his audience. \"It's always been love that's held us together and those who question it or don't feel it as keenly as the rest of us fall by the wayside as we go from strength to strength, together. We aren't a business we are a family. We may not always agree, we may argue and curse, but in our heart of hearts that love is always there.\"\n\n\"As the new generation takes up the gauntlet passed to us by our fathers it is only natural that there will be a time of adjustment for everyone. What we ask of you is to remember that we are a family built on love and loyalty first and foremost, everything else we are, the businesses, the philanthropy the standing within society come secondary to that.\" Josh raised his glass and toasted them all, \"To love.\"\n\n\"I would like to take a personal moment now to extend that speech to include my love for my wife.\" He gazed down at her with a smile. \"In loving me she gained all of you and your open and welcoming ways, some more welcoming than others,\" he looked directly at Dante and grinned widely. \"Peri has taken it all in her stride and not run in terror from our family laws and traditions. Instead, she has embraced them as if born to a family such as ours. She's done this with great care and respect for all of us. I hope as we go into the new year, you will all support her as she attempts to follow in the footsteps of the most formidable woman I have known in my lifetime,\" Josh's voice was soft as he spoke of his mother and smiled softly at her.\n\nPeri watched Josh as he spoke seeing the confidence and self-assuredness with which he had addressed his family. He was so handsome standing there beside her, his cape hanging off his broad shoulders and his lean muscular physique showing through the leather-vested costume he wore. He looked heroic. He was her hero. Josh was her first love and as she gazed up at him and listened to his speech about loving her it took all her self-restraint not to launch herself at him and cling to him smothering him in kisses. \n\n\"Thank you, Peri. Thank you for loving me and in turn my family. You are the sunshine in my day, my guiding star, my soul mate, my love. I, we, adore you,\" he said and pulled her up to stand beside him wrapping an arm about her waist. \"To Peri.\" He toasted and raised his glass again. \"Now if you will all indulge me one last time, Mama has requested that we sing with the band.\" Peri froze, but Josh took her hand and led her to the space in front of the band.\n\n\"You know this song, it's not a duet so we'll just take alternate verses,\" Josh murmured in her ear and held up his phone to her showing the lyrics of a song they both loved from a movie they had watched during her recovery. She smiled and looked up into his face, unable to hold back any longer she wrapped her arms around him and leaned in to kiss him.\n\n\"I love you,\" she said breathlessly as they broke apart and took the microphones from the band leader. \"Forever and always,\" she whispered blushing as she realised everyone was watching them. She was grateful when the music started, and she tried to blot out the curious eyes who watched the new leaders of their family empire.\n\n\"How long will I love you?\" Josh sang launching into the song. \"As long as stars are above you. And longer if I can,\" he took a breath and smiled as he kept singing. \"How long will I need you? As long as the seasons need to, follow their plan.\"\n\n\"How long will I be with you,\" Peri began the smaller verse grateful that Josh had taken the larger verses. \"As long as the sea is bound to, wash upon the sand,\" she drew out the last note hating how she sounded beside Josh's beautiful tenor.\n\n\"How long will I want you?\" Josh looked at her, and she could see the smouldering look in his eyes as he sang the words directly to her. \"As long as you want me to. And longer by far.\" He continued with the verse holding her gaze, and she melted inside. This was the man she had loved so intensely that not even her near death experience could pull her away from him. The heat in his eyes seemed to go straight to her core, and she felt her body react as if pulled on some invisible strings as she listened to him serenade her in front of his family.\n\n\"How long will I give to you?\" She picked up her verse with difficulty sure that her cheeks were flaming with arousal and desire as they stood wrapped up in each other's eyes and voices. They sang the last two shorter versus together and as the song ended Josh bent down to kiss her tenderly. \n\n\"I meant every word,\" he whispered into her ear.\n\n\"Me too,\" she smiled widely at him. She looked out into the audience and could see Dante looking somewhat bemused as he took in their performance. They had become an inseparable trio in the last two weeks, and Peri wondered if he felt excluded. Perhaps it was time to put in some ground rules of her own. She needed time alone with her husband to bask in her love for him and his love for her. She knew that equally, she needed to start making some memories with Dante that were separate to Josh if their relationship was going to work for her and each of the men she loved. The year ahead was going to be a complicated mess unless she could bring all the pieces of her life into one coherent picture. \n\n\"That was lovely, Peri,\" Carmen said sweetly as they went back to their seats. \"Josh perhaps we could Auld Lang Syne at midnight?\"\n\n\"At midnight I plan to be kissing my girl, but you feel free Carmen,\" he grinned.\n\n\"You two are a delight to watch together,\" Concetta joined them. \"That's why you will make the perfect Mama and Papa for our family, the love between you is just so obvious.\" She patted Josh's cheek. \"You are wise beyond your year's dear boy, and it was a pleasure to watch you both tonight. I am glad Antonia put her foot down, Peri you can't always be the one holding the spotlight for others, sometimes you have to step in front of it too. Don't you agree, Carmen?\"\n\n\"I, umm,\" Carmen stuttered after closing her gaping mouth.\n\n\"Carmen has such a lovely voice, she deserves to be in the spotlight,\" Peri said easily. \"I'm afraid I sound like a drowning cat next to these two virtuosi. I love to listen to them sing together at Christmas. Just as well I am not the jealous type.\" She giggled softly and looked up at Josh. \"Romey probably feels the same way, he seems to be a reluctant singer like me.\"\n\n\"We all have our strengths,\" Concetta nodded glancing speculatively at Carmen who still seemed stunned to silence. \"Gosh look at the time we better find our husbands,\" she winked and linked arms with Carmen. Josh and Peri turned toward where Dante sat with Lorenzo and Ben.\n\n\"Welcome back,\" Lorenzo grinned as Peri took a seat next to Dante and Josh sat beside her.\n\n\"That song was so familiar like I should know it from somewhere,\" Margarite's brow creased as she once again tried to place it. \n\n\"I first heard it in a movie called \"About Time.\" If that helps,\" Peri offered. \n\n\"Yes, that's it!\" Margarite exclaimed. \"I love that movie.\"\n\n\"I don't remember it,\" Lorenzo said.\n\n\"That's because you always fall asleep five minutes into any movie that isn't full throttle action and car chases,\" she laughed. \"I think it would kill you to have to watch a whole chick flick from beginning to end.\"\n\n\"I think Josh fell asleep too. I put the song on his phone and in his car once I had recovered from my accident last year,\" Peri admitted.\n\n\"She's always messing with my music,\" Josh groaned.\n\n\"So did Peri tell you about her New Year's resolution?\" Dante smirked at Josh. \"I'd say she holds out about an hour after midnight.\" Josh turned an inquisitive look on her, and she blushed under the scrutiny of the table. Josh raised an inquisitive eyebrow and Dante continued. \"Sex, drugs and rock and roll all gone,\" he sighed dramatically. \"Legal drugs I am assuming seeing as she's not a pothead that I know of. You might just have time to get one in before midnight if you forgo any foreplay.\"\n\n\"I was joking! I wouldn't do that. Eden needs a little sister after all,\" she rolled her eyes at Dante and looked up at Josh while the table burst out laughing at the look of mock horror on his face.\n\n\"Well, I am certainly glad you weren't serious,\" Josh said with a slight quirk of his lips. \"I would hate to be the one who made you break your resolution before the sun comes up.\"\n\n\"Even if I was serious that little speech you made would have dissolved any self-control I had,\" she said quietly and leaned toward him and ducking under his arm pulling it around her. \"My husband says the nicest things sometimes,\" she smiled at Margarite.\n\n\"He does indeed. I hope you were taking notes,\" scowled at Lorenzo.\n\n\"What? You know I love ya, babe,\" he said plaintively.\n\n\"Yeah I have to admit you can be pretty romantic at times,\" Margarite smiled softly.\n\n\"I think it's a family trait, we have good role models,\" Ben nodded his head toward his parents who held hands as they sat side by side. \"All of the elders are very demonstrative of their love for each other.\"\n\n\"Sometimes too demonstrative,\" Dante groaned. \"Let's not go there,\" he said picking up his drink and taking a large swallow.\n\n\"I agree,\" Lorenzo shook his head with distaste making Peri smile.\n\n\"It must be wonderful to grow up with so much love surrounding you,\" she said to Ben quietly. \"I barely remember my father and what I do remember isn't pleasant.\"\n\nDante listened carefully. He knew so little about her past, and he suddenly had a pang of jealousy realising that Josh had been a big part of her metamorphous from the shy and insecure girl she was into the strong woman he knew now. His resolution, he decided then and there, would be to discover all of the elements that made up the woman he loved. With that in mind he looked over at Andie, he knew she hadn't always been as she appeared now and that the relationship she had with her daughter had been strained for years. For the first time, he wondered how Andie had met Charles and if he was responsible for the change in her relationship with Peri. He was so deep in thought he hadn't realised someone was talking to him.\n\n\"So since you brought it up, what resolution are you making?\" Ben asked Dante.\n\n\"I think I am just going to try to value what I do have and disregard what I don't. Top that half empty glass I've carried around for a few years up with some well-aged scotch and be Mr. Happy,\" he chuckled.\n\n\"You've already got a good handle on that from what I can see,\" Ben chuckled with him. \"Love will do that to you I suppose.\"\n\n\"Yeah,\" Dante gave him a goofy smile.\n\n\"I didn't realise you had a partner here,\" Margarite said looking around curiously.\n\n\"It's complicated,\" Dante said not wanting to push Josh into an awkward conversation just yet. \"What about you giggles? Making any vows of celibacy that Larry should know about?\"\n\n\"Gosh no! I only married him for his body,\" she let out a peel of laughter and leaned over to kiss Lorenzo. \"I guess I would like another baby too. Though I'm happy to wait a little while yet,\" she quickly amended. \"We both want a big family with lots of noisy boys racing around the place. I guess everyone here does though so it's not news I'm sure.\"\n\nThe band struck up the opening chords to The Final Countdown and Peri looked at her watching noting it was only a few minutes until midnight.\n\n\"I guess it's time, come on before they come to get us,\" Ben grimaced and went to the dance floor where the family was making a circle with the men on the outside and the women on the inside. \n\n\"It's Mama's way to make sure she gets to kiss all her sons,\" Ben said to the curious look Peri gave him as he stood next to Josh and Dante in the circle. Emily joined them taking her place with Ben.\n\n\"Peri, have you met my cousin, Vicky?\" Emily introduced the woman beside her.\n\n\"I have, but I didn't realise she was your cousin, how nice you both came to live in the same part of the world,\" she said and smiled at Vicky. \"I worried about Maryanne having to live so far from all the people who love her. It must make the wives terribly homesick initially when they get married and move so far away. I feel lucky to have my mum so close, still.\"\n\n\"I called my family all the time when I first moved up here. Ask Ben my phone bills were astronomical,\" she nodded.\n\n\"Well worth it,\" he said softly and took Emily's hand and kissed it. Peri could see the genuine love between the couple.\n\nThe band finished the song, and the countdown began. \"Three, two, One...\" Josh took her in his arms and kissed her gently.\n\n\"Happy New Year, Mine,\" she whispered softly. \n\n\"Mine, forever and always,\" Josh murmured in her ear before passing her to Dante.\n\n\"Hello you,\" Dante whispered and bent his head to kiss her lightly. \"Happy New Year. This one will be wonderful for you if I have anything to do with it,\" he smiled.\n\n\"I hope it's wonderful for all of us,\" she replied sensing his pain at missing Emilio tonight. Even with the strong relationship he had forged with Josh and herself, she knew he still felt Emilio's absence keenly deep inside in that dark hidden part of himself. Peri moved on around the circle. As a gap came in the smaller circle of women, Josh turned to Dante. \n\n\"Last year wasn't so bad look at us and what we've managed to achieve despite all the shit that came our way. Above all else we have her,\" he looked over to where Peri kissed Charles.\n\n\"I love you, Josh,\" Dante said seriously. \"I never imagined you'd be so,\" he paused unable to find the word he needed, \"With her, I'm not sure I could be so generous in your place. In the early days before Christmas, I considered not acting on my feelings and concentrating on what we have now, making our relationship everything you missed out on with Nik. I can't give her up, though,\" he admitted. \"Not now, now ever.\"",
        "\"I know,\" Josh nodded with a look that said he understood. Carmen moved to stand before him. \"Happy New Year,\" he smiled and kissed her cheek and took her hand looking into her eyes. \"I want you to know that there are no secrets in this family, someone is always watching. Do you understand?\" He asked Carmen watching as she visibly paled. She nodded saying nothing and moving to Dante who had watched the exchange. \n\nDante did not add to what Josh had said instead kissing the woman's cheek and smiling softly as he wished her a Happy New Year. When the circle dispersed, Dante signalled Josh to walk with him toward a secluded area. \n\n\"What was that about? I thought you promised Peri you wouldn't interfere,\" Dante said with concern in his voice.\n\n\"She's unhappy and resentful if the Suebi are looking for another source of information she is a prime target. What I said will make her think twice before dealing with anyone not on the up and up,\" Josh explained. \"If what I said helps Peri at the same time then that's a bonus.\"\n\n\"Makes sense, but you should tell Peri,\" Dante murmured. \"If there's fallout she will need to be prepared. She'll think you broke your promise if you don't explain, and there is any fallout for her.\"\n\n\"I expect the fallout to be with Romey,\" Josh said uneasily. \"I want to start this year off by letting people know that I will be taking the lead. I meant what I said in the Athenaeum. The Suebi have no idea who they are dealing with. If they come after the people I love, they will find out pretty quickly.\" \n\n\"There you are,\" Peri interrupted them. \"Some people are leaving already, and your parents want us to stand with them to farewell the guests.\"\n\n\"Better you than me,\" Dante chuckled but walked with them back to where Joseph and Antonia stood. \"I wanted to have a word with Charles before he left,\" he explained as Josh raised an eyebrow at him.\n\n\"What can I do for you?\" Constantine asked pretending to be Charles again.\n\n\"Nothing thanks, Zio, I wanted to talk to Charles,\" Dante winked and headed toward where Charles and Andie sat chatting with CJ and his wife.\n\nThe night dragged on for Peri, and she grew weary. She knew it was important that she and Josh stay but as the crowd dwindled down to just a few couples and Joseph announced his departure Josh put his arm around her and smiled. \n\n\"Would you like to go with them?\" he asked.\n\n\"I'm so tired Josh, but I can last a little longer if you want to stay,\" she whispered. \n\n\"Mama and Papa are staying at our apartment tonight, you can leave with them,\" he guided her toward the small group saying farewell. \n\n\"Joshua, good, you will come with us,\" Joseph said as if it was already decided.\n\n\"I was about to suggest that,\" Josh said easily. \"We'll let D. know he's on clean up duty.\"\n\nThe short journey back to the apartment seemed to sap what was left of Peri's energy, and she apologised for her lack of stamina and bid everyone good night as soon as they arrived back at the apartment.\n\n\"You need sleep too Joshua,\" Joseph said sternly we have a meeting in the morning before brunch. He moved forward and embraced his son. \"You make me proud. I love you, my son.\"\n\n\"I love you too, Papa,\" Josh responded patting him on the back and went to kiss his mother as Peri embraced and kissed them both wishing them sweet dreams.\n\nSince his speech about his love for the family and her, Peri had felt a yearning for her husband and guiltily she was grateful that Dante hadn't accompanied them home. She walked into their room together and turned to kiss him reaching up to pull his head down to hers and taking the control if only for a minute. They parted breathlessly, and he searched her eyes. \n\n\"I thought you were so tired,\" he let a small smile touch the corners of his mouth.\n\n\"I love you, I want you, I need you,\" she said in a husky voice as she looked up at him through her eyelashes. Her desire showing in the smouldering gaze she stepped in to kiss him again. His arms wrapped around her and she felt the tight bodice of her dress loosen as he undid the zip.\n\n\"Show me,\" he murmured darkly as they parted again. \n\nPeri took several steps back and slid the dress from her shoulders peeling it away from her body. As her hands pushed it down revealing the tight corset with the small shelf like cups she gently pulled her breasts up revealing the nipples and exposing most of the soft flesh above the tight satin and lace. She pushed the dress down over her hips slowly revealing her lack of underwear and the decorative tops of her thigh-high stockings. She dropped the heaving dress letting it pool on the floor at her feet. Stepping out of it delicately in the too high heels she turned slightly revealing her bare ass to him then she bent forward at the waist to retrieve the dress, giving a slight wiggle as she did so.\n\n\"Stop,\" he growled as she was bent double. \"Don't move.\" She felt him move behind her and run his hands over her thighs and ass. She bit her lip as he smacked her hard to stifle her whimpering. He continued the soft stroking of her skin between the harsh smacks until her skin was red and she could feel the heat running through her igniting the fire that had been burning inside her for over an hour. \n\nPushing a hand through her hair, he pulled her upright and bent her head back before lowering his head to devour her lips. Keeping his tight grip in her hair he turned her toward him. \"Now me,\" he growled in a voice as heated as the gaze he turned on her. \n\nPeri lifted her hands to the leather vest enjoying the feel of it under her hands as she undid the large buttons pushing it open and stroking her hands over his chest. Refusing to let go of his grip on her hair she let it hang from his broad shoulders as she undid the three small button at the top of the flowing white shirt he wore beneath it. She leant in to kiss the small patch of exposed skin and heard him groan in a long slow rumble.\n\nReefing her head back he devoured her lips again. Breaking the kiss abruptly he pushed her to her knees releasing her hair reluctantly as he watched her reach out to stroke her fingers around the waistband of his pants before beginning to undo them. Discarding the vest and shirt he felt her soft touch as she pulled his cock from the restricting material and lifted it to her lips. Wrapping a fist into her hair again, he dragged her toward the bed and sat on it with her kneeling on the floor before him.\n\n\"Boots,\" he commanded lifting on foot from the floor and stretching it out beside her. Peri quickly removed them and the socks once again reaching for the waistband of his pants as he stood. She nuzzled into the heat of his groin placing soft kisses along the shaft of his cock as her hands stroked down over his ass pushing his underwear down with his pants. Her hands glided over the soft skin of his ass before pushing the material down his legs.\n\nPulling her head back again he sat pulling his belt from his pants before allowing her to remove the last of his clothing and toss it to where the rest of their clothes lay scattered on the floor. He rested the belt on the bed beside him and pulled her head back to his cock. He guided her with both hands wrapped firmly in her hair, the pins she had used to keep stray tendrils from coming loose during the night falling as his hands wound into the silken strands.\n\nHe looked down at the woman he loved, on her knees worshipping his cock and groaned loudly. None of the initial lust he had felt for her had waned over the last year. Motherhood had only made her more beautiful her full breasts hanging low beneath her and her ample ass wriggling, still glowing from their initial spanking. She was his world and while he had come to terms with allowing Dante into their lives, her need for him tonight gave him the surge of power he craved and needed from her. He was her husband and first love he had no doubt about his place in her life, but it was more than arousing to have her show it in the way she had when they entered the room.\n\nLifting a hand from her hair, he retrieved the belt that lay beside him. He lifted his hand flicking it lightly over her back she flexed and stiffened slightly squealing delightfully around his cock. He dragged it slowly up her body as he revelled in her complete submission to his need and flicked it again, not putting much force into it, instead enjoying the sound and feel of her reactions to the pale pink marks appearing on her back.\n\nPeri felt the belt fall producing a light sting along her back. She knew he was holding back and was grateful, she would hate to damage him by reacting badly to anything harsher. She could feel his power and revelled in it as she sucked him lovingly, taking him deeply into the cavern of her mouth and squirming deliciously in her heated arousal at his feet.\n\n\"Tell me again,\" Josh demanded pulling her head back and gazing down at her as the long strands of spittle hung from her mouth keeping a tentative connection to his cock for a few seconds longer. \n\nPeri looked up at him in a daze for what seemed an eternity but was, in fact, more like fifteen seconds before she breathlessly whispered, \"I love you. I want you. I need you.\"\n\nJosh bent low pulling her up to her knees and possessed her lips. The belt now doubled bit into the soft flesh of her ass, and he devoured her scream of pain revelling in the trembling reaction to the livid red welt the belt left in its wake. He struck her again savouring the moment with all of his senses. Pulling her back he wedged the belt between her teeth, and she dutifully clamped down on it. His free hand lashed out and landed harshly against her breast. Heavy with milk the impact was startling to her, and she cried out around the belt as the pain lanced through her. Releasing her hair his hands lashed out alternately until her skin shone with the red heat of his handprints and tears coursed freely down her cheeks, yet she held her position offering herself up to his needs.\n\n\"Fuck,\" he groaned and pulled her up to the bed. He rolled her to her back and doubled her over by grabbing her ankles and pushing them up over her head. The contrasting red welts from the belt, and the deep pink blotches covering her breasts was breathtaking to him and without any further thought he ploughed into her hot wet cunt losing himself in the feel of her. He fucked her as if possessed and she rose to meet each thrust, as if urging him on as she met his need for her with her deep need of her own.\n\nShe came first, biting her lip to stifle her cries as her world exploded around her and she floated on a high that rolled through her body like a freight train. It was as if from a distance that she heard Josh growl loudly and felt his stiffen above her as her body shook in spasm after spasm. When he released her legs, she clung to him as if grounding herself until he freed himself from her arms stroking her hair softly and kissing her gently.\n\n\"I love you, I need you, and I want you, forever and always. You are my everything,\" Josh said softly and kissed her deeply. Leaning back he watched her exhausted eyes close as she smiled up at him and repeated his words.\n\n\"Always and forever Josh, I am yours,\" Peri said softly feeling her complete exhaustion wash over her.\n\n\"Stay right here,\" he said softly and rose from the bed. Peri didn't argue, she didn't feel like she could move even if she wanted to.\n\nJosh came pack with warm wash cloths to clean her up. Taking his time, he gently stroked over her skin enjoying the enduring effect of the marks he left on her body. She was beautiful. His hands lingered over each curve of her figure, only made more pronounced by motherhood. Each small pink stretchmark told him of her commitment to him and their family. Even the milk that leaked from her breasts as he cleaned the perspiration from him was an amazing declaration of her ultimate role of mother to his family. He bent his head to suckle one briefly. He didn't enjoy the taste as Dante did but it gave him pleasure in a different way.\n\nShe'd fallen asleep early in his soft cleansing movements, and he stood to look down on her sleeping form. The heat of the mid-summer night allowed for no coverings and when he had tidied up the room of their clothes he slid onto the bed beside her wrapping his arm around her stomach as he moved tightly against her side. He dozed lightly for a short time waking instantly when Dante entered the room.\n\n\"Hey, how'd it go,\" he whispered as Dante began to strip off walking toward the bathroom. \n\n\"Yeah good,\" he turned the light on in the adjoining bathroom and looked back at his brother. His talk with Charles had been enlightening, and he had a new respect for Peri and how she had grown up to be the sweet loving woman she was. He had been taken aback by Charles and Andie's honesty with him and with each other, as Andie had admitted that Peri had taken on the mothering role in their relationship from the time she was thirteen. Andie had shown a lot of regret about how she had treated her daughter when admitting she had thrown herself at Josh thinking he was there for her, not believing a man like him could be interested in her fat and frumpy daughter. \n\n\"I talked to Charles and Andie about how they met,\" he admitted. \"They're grateful you know, and she would be too if she knew that you gave her back a mother instead of the adolescent Andie had been acting like.\" He smiled at the look of surprise on Josh's face.\n\n\"It's never come up,\" he murmured. \"Even then, before our first date, I knew she was the one. There isn't anything I wouldn't have done to make sure she realised it too.\" Josh admitted. \"I doubt she would be happy about my interference in mother's life, though.\" He gave a sad smile and looked down at his sleeping wife. \n\n\"I would never have met the love of my life if you hadn't,\" Dante admitted his real feelings for Peri taking Josh by surprise. \"This afternoon's meeting disturbed me. We have to keep her safe. I'm thinking a bodyguard of some type.\"\n\n\"I doubt she would allow it,\" Josh said thoughtfully sitting up slowly so as not to disturb her.\n\n\"She took the tracker well enough,\" Dante argued softly coming back into the bedroom having removed his costume. \n\n\"That's not somebody invading her personal space or listening to her every conversation,\" Josh said. \"For the time being, we make sure she is not left alone, and we talk to Vinnie about a personal watcher if he hasn't already put one on her.\"\n\n\"Maybe we should talk to Ben instead, he was the heir apparent and unless someone has let the cat out of the bag early they may be targeting Emily,\" Dante said thoughtfully.\n\n\"True, I've got a meeting with Papa early so I'll run it past him and see what's already happening. They probably have thought about this already,\" Josh nodded as Dante climbed onto the bed with them.\n\n\"If you tell me who would be targeting me and why I might accept that I need a watcher,\" Peri murmured sleepily. \n\n\"Sleep,\" Josh crooned though his chagrin showed clearly on his face, \"We can talk about it tomorrow.\" He reached out and stroked her hair while raising an eyebrow at Dante. \n\n\"You're right I wouldn't have liked you interfering in Andie's life back then but it's all worked out for the best, so I am grateful,\" she murmured without opening her eyes. \"I love you and trust you and I have learned some harsh lessons in the past year. If you tell me I need a watcher, I believe you, but I would like to know why.\" She said softly finally opening her eyes to the stunned look on their faces. \"If I don't know why, how can I take it as seriously as you both obviously do, instead of just the men I love being needlessly overprotective.\" She looked from one to the other of them and reached up to place a hand on their cheeks. \n\n\"Have I told you how amazing you are today?\" Josh asked softly bending to kiss her.\n\n\"That's the first time this year, and I was wondering when you were going to get around to it,\" she grinned making him frown and then laugh."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "holidays",
        "new year",
        "memorial",
        "brothers",
        "family"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-24"
}