{
    "title": "B&B",
    "pages": [
        "\"I should probably get going, huh?\" he asked his daughter.\n\n\"I guess so. Thanks for bringing me, Dad,\" she told him.\n\n\"I wouldn't have missed it for the world,\" he told her truthfully. \"I'd apologize for staying three whole days, but knowing I'm saying goodbye forever, I won't.\"\n\nShe got up to hug her father. \"Dad, it's not forever. It's only until Christmas break. I'll be back home the day after school's out.\"\n\nGary Fields knew it wasn't literally 'forever' but he also knew it would be in the sense she'd almost certainly never live at home again. She'd been his rock since her mother, Grace, had passed away a little over three years ago. \n\nIn many ways, his daughter Pamela, had been stronger than he'd been. Grace's death had devastated him and were it not for Pam, he felt certain he'd have found a way to be with his wife of 20 years by now. But Pam had some kind of unseen inner strength he admired and had leaned on time and time again just to get through one more day.\n\nAfter her death, he'd buried himself in his work, but it just wasn't the same without her. The money kept rolling which was a good thing as his 'baby' would be going off to college in another two or three years, but he was bringing in far more than he spent. College wasn't an issue anymore because Grace insisted her husband pay for all four years of their daughter's tuition with the money he'd receive from her life insurance policy. The rest would go into investments until she went to school and be used to pay for room and board. \n\nWith college paid for and Gary having no desire to go anywhere or do anything, he was sure anything he earned would just sit in the bank and collect dust until death mercifully came one day and reunited him with the love of his life. And then\u2014Pam could have it all. The house, the money, and anything else he owned at the time. They were just things and without either of his 'girls' at home, they were of little value to him.\n\nHis only child, his little girl, his daughter, was now safely at college, in her dorm room, and Fields really liked the nice young lady she had for a roommate. She was now completely set up, and Fields knew there was no justification for staying any longer so he hugged his daughter back\u2014hard\u2014and held her for a few seconds.\n\n\"You know how much I love you, right?\" he said quietly.\n\n\"Yes. I love you too, Daddy,\" she said calling him by her childhood name for him for the first time in many years.\n\n\"Okay, then I guess it's time...for me...to head home,\" he said wiping away a tear he'd fought not to let fall.\n\n\"Hey, stop that!\" Pamela said sweetly. She put her hand on his cheek and said, \"Dad? You really need to find someone. I know you don't want to, but you need someone. You're only 41 and...well, all my friends say you're still really...handsome.\" She smiled then added, \"Actually they say 'hot' but that's kind of creepy.\" \n\nHe smiled understanding how hearing that about her own father must make her feel. Still, Fields did say in excellent shape by swimming at least a mile every other day. Along with cooking, the career he often wished he'd chosen instead of real estate, swimming was his only other escape from the aching loneliness that never seemed to go away. As to Pam's friends, he also felt reasonably certain they would quickly add, \"For a guy his age\" when they said he was hot or whatever word kids used these days. Growing up, guys were called hunks and girls were babes. Now they were all just...overheated. \n\n\"So will you please promise me you'll at least try or at a minimum be open to looking for opportunities to find someone? Please?\"\n\nHe wanted to tell her, \"Sorry but\u2014no. Not now, not ever,\" but couldn't. Anything his daughter wanted, she got. He hadn't always spoiled her and she had the character to prove it. But since her mom died, she was all he had and making her smile was the only thing he lived for. Okay, the perfect souffl\u00e9 was pretty rewarding, but that was different. So when his Pammy wanted something, he gave it to her. In this case, he smiled and told her, \"I can do that. The trying part, that is.\"\n\n\"So what are you going to do when you get home? Besides work?\"\n\n\"The only thing I can think of is taking a trip to New England. It's the last part of the country I've never been to.\" He choked up briefly then fought it off. \"Going alone doesn't seem like much fun, but next month is going to be beautiful up there.\"\n\n\"Oh, right! The leaves will be changing. Yeah, that'll be awesome. Take lots of pictures, okay, Dad?\"\n\n\"I will, honey,\" he promised her. He held out his arms again and fighting back more emotion asked, \"One more hug?\" \n\n\"Yep. No problem!\" she told him with a big smile as she did just that.\n\n\"Okay, then I'm outta here,\" he said reluctantly taking that first step out of her dorm room.\n\n\"Don't worry, Dad. I promise to call at least once a week and we can text all the time, okay?\"\n\n\"Okay, honey. I'm gonna hold you to that,\" he said forcing a smile. \"I love you, sweetie.\"\n\n\"I love you too, Dad!\" she said as he turned and walked away. He swallowed hard several times and blinked several more then headed downstairs and out to the parking lot. He got in his car, looked at her dormitory one last time, then backed out and headed to Charlotte to start the rest of his life...truly alone. Maybe it was finally time to get the dog he'd promised Pam they'd get when she was five and every year until she quit asking but never did.\n\nPamela was less than three hours away at The University of North Carolina, Chapel Hill, but she may as well have been on the moon as far as Fields was concerned. He made it as far as High Point before pulling over into a rest stop. He parked as far as he could from other vehicles and sat there for a few seconds before letting it all out. \n\nThere was no stopping it this time. He'd put it on hold for the last three years only letting drips and drops find their way out. It was time. It had to happen. Tears quickly turned to crying which led to sobbing as memories from the past flooded over him. Meeting Grace, their first kiss, their engagement, the wedding, Pamela's birth, her first steps, learning to read and ride a bike, her first date, her mother's illness and suffering, her death, and finally Pam's graduation from high school and ending with him dropping her off at college. He sat there and waited for it to run his course before pouring some water from a plastic bottle into his hands and washing his face the best he could.\n\n\"You big baby,\" he said out loud as he looked at his puffy eyes in the mirror before getting back on the road.\n\nBy the time he got home, he couldn't believe the difference in his outlook. It was as if a kind of emotional dam had burst releasing a torrent of toxic emotion that had built up over the last three years. For the first time since his Grace's passing, he felt...different. Not good. Not okay. Just...better. A part of him even felt...hopeful...and that felt really good.\n\nHe felt good enough that he decided to go for a swim in the pool in his backyard. Some 75 laps later, he was both exhausted and exhilarated. He showered, dressed, made a very extravagant dinner for himself, then opened his laptop and started researching his first-ever trip to New England.\n\nOther than the foliage, he had no real idea what there was to see and the thought of just driving around and looking at whatever he could find appealed to him. He planned to see everything he possibly could while staying somewhere in northern Vermont. The only real requirement was a swimming pool. He laughed when he realized it also had to be heated pool. North Carolina got chilly in October. Vermont had to be downright cold.\n\nHis choices were narrowed to two bed and breakfast inns and the final decision was made easy when he saw the size of their pools. One was barely 12 feet long while the other was a very respectable 24 feet. He picked up the phone and dialed the number while looking at various photos of the inn itself.\n\n\"Maple Leaf Inn,\" he heard a female voice say. \n\nThe Maple Leaf was in the town of Sheldon just south of the US-Canadian border. The inn had a rustic charm to it and the kind of pool Fields was looking for. Case closed.\n\n\"Yes,\" he replied. \"I'm interested in making reservations for the first week of October if you have any rooms available.\"\n\n\"We do indeed!\" he heard a cheerful voice reply. \"We have two left.\"\n\nHe was looking at the choices on line and said, \"Is the one that leads out to the pool one of them by any chance?\"\n\n\"Oh, have you stayed with us before?\" she asked.\n\n\"No. I'm looking at your rooms on line and that's the one I'd like if it's still available.\"\n\n\"Ah, that makes sense. Either way, you're in luck,\" she told him. \"How many nights would you like?\"\n\n\"Um...let's say three for now. Can I leave it open-ended?\"\n\n\"Hmmm. That's our busiest time of the year with the foliage change,\" she told him. \"But if you want to put down a deposit, I can book you for the three days and try to hold it for you after that. The day you arrive, you'll need to let me know for sure though, okay?\"\n\n\"Deal,\" he said. \"Sign me up!\"\n\nShe asked for his name then said, \"Did you say you'd stayed with us before?\" she asked again. \"I'm only asking because I just took over running the inn from my mom and dad and I don't know names so if you stayed here before, please forgive me.\"\n\n\"No. This is my first time,\" he told her.\n\n\"Okay. That's wonderful,\" she told him. \"So...three nights. For how many people?\"\n\nFields felt a lump in his throat and that sick feeling return. \"Sir? I was wondering how many are in your party?\"\n\nHe was trying to speak but still couldn't. He cleared his throat then finally said, \"Sorry. I lost my wife a while back and it's still hard sometimes.\"\n\nTo his surprise, the voice on the other end didn't say, \"I'm so sorry\" or \"Sorry for you loss.\" Instead he heard her say, \"I understand. I lost my mom and dad to a drunk driver on the 4th of July. I...I quit my teaching job to come back and run the inn. I'm not sure how long I can do this but....\" She stopped talking and said, \"My apologies. I didn't mean to burden you with my loss on top of your own.\" She paused again then said, \"It really sucks losing someone you love, doesn't it?\"\n\n\"It really does,\" Fields said feeling less sorry for himself. \"Are you thinking about possibly selling the inn?\"\n\n\"I don't know,\" she replied thoughtfully. \"I left here when I was 18 to go to college and vowed I'd never come back. Not because I didn't love my parents. I did. I loved them dearly. I just wanted no part in the family business. Growing up, I felt like I never had any real privacy, you know? There were always new strangers in my house. I got used to it, but I never liked it. After Mom and Dad died, there just wasn't anyone else to run the businsss and I had the summer off so I came back here tried to make sense of everything. By the time I got it all figured out, I needed to go back and start teaching, but I couldn't. So I'm taking a year off and giving this a go. I'm still not sure what I'll do yet, but I can tell you I really miss teaching.\"\n\n\"What grade?\" Fields asked.\n\n\"Kindergarten,\" she said with a hint of nostalgia in her voice. \"I often feel like they're my own kids.\" She sighed then said, \"Maybe someday.\"\n\n\"They're so sweet at that age,\" he remarked.\n\nHe heard her laugh then say, \"Sweet works for most of the kids. I wouldn't use it for all them, though.\"\n\n\"I guess that makes sense,\" Fields said as he found himself chuckling, too. \"I know not all five-year old are angels.\"\n\nThere was another short pause before she said, \"Anyway, three nights for one person, right, Mr. Fields?\"\n\n\"Oh, right. Yes, just little old me.\"\n\n\"And when will you be arriving?\" she asked.\n\nHe gave her the day then said, \"Okay, you're all set. My name is Misty, and I'll be here to check you in and I have to warn you, I'll be cooking for you, too.\"\n\nFields laughed again and said, \"It can't be that bad, can it?\"\n\nMisty laughed too, then said, \"No, not at all. In fact, I'm a pretty good cook. I just don't like doing it which is one big part of why I'm not sure I'll stick with this. But that's my cross to bear and not yours.\"\n\n\"Okay, well, I'm looking forward to meeting you Ms....?\"\n\n\"Vincent. Misty Vincent.\"\n\n\"All right. See you then, Ms. Vincent, and thank you so much.\"\n\n\"You too, Mr. Fields. I look forward to meeting you.\"\n\nFields sold high-end real estate on both the private and commercial sides and rarely took time off, so when he announced he was taking a week off in early October, no one blinked an eye.\n\nIt was two weeks after Labor Day when the weather turned chilly in Charlotte. In preparation for his trip, Fields broke down and finally bought himself some new clothes\u2014something he hadn't done in a very long time other than stuff for work, then invested in a high-quality video camera, a pair of binoculars, and began doing some research on what there was to see in northern Vermont.\n\nAs time passed, the highlight of his days were the texts he regularly got from Pam who did her best to keep him informed on her classes, the friends she was making, and the occasional guy she met whom she found interesting. Saturday was the best day of the week as that's when she'd call and he could have her all to himself for half an hour or so. Just the sound of her voice did so much to cheer him up. The difference it made in his mood was like night and day.\n\nThe good news was his better mood had, for the most part, stayed with him since the emotional dump he had on the way home from Chapel Hill. He wasn't 'happy' or 'perky' but he no longer felt despondent or depressed. He'd even finally gone on a date with someone from work, and Pam was thrilled when he shared the good news with her.\n\n\"Dad! I am SO proud of you! Did you have a good time?\" she wanted to know.\n\nIt had just been dinner and nothing more but it had been pleasant talking to someone in a social setting outside of the office. \"Yeah, it was okay, honey,\" he told her.\n\n\"So...are you going to see her again?\" Pamela asked hopefully.\n\n\"I don't know. If I do, that's fine. If not, that's okay, too. Baby steps, right?\"\n\n\"I can live with that!\" she told him. \"You are just so awesome, Dad! Keep it up, okay?\"\n\nFields tried to do just that. A few days later he went on another date with someone he hadn't seen since high school. She'd asked him out once a year or so ago, but he hadn't been ready. Not sure if she'd even still be available, he was a little afraid to call her. Well, that and the fact he hadn't called a 'girl' in...what? Twenty-two years or so?\n\nShe'd happily said 'yes' and they'd had a very nice time eating dinner and going dancing later. Fields was more than a little surprised when she invited him in for a drink and blown away when she asked him if he'd like to stay. \n\n\"Um...well, um....I, um...stay? As in...stay?\" he'd asked not sure how to process what he'd heard.\n\n\"Yes,\" she said. \"That kind of stay. And why not? You're still as cute as you were back in high school. I had a thing for you then and the fire is still there. Now we're both free again so...yeah. Stay with me stay.\"\n\nFields let the 'free' comment pass even though he blanched when she made it. He hadn't had sex with a woman since shortly after Grace was diagnosed with cancer, and the thought of sleeping with another woman caught him completely off guard. He hemmed and hawed and eventually found a way to excuse himself leaving a very frustrated date home alone as he went back to his place...also alone but happily so.\n\nAfter that, he decided to put dating on hold until he got back from his trip and even then, he planned to take things slowly.\n\nHe was packed and ready to go shortly after breakfast when the 4th of October finally rolled around. He was staying Tuesday, Wednesday, and Thursday, to avoid the weekend crowd even though he knew the B&B only had five rooms making the word 'crowded' a relative term. Even so, it just seemed like a smart thing to do. If he was enjoying himself, he could stay there a couple more days or maybe head up Maine and stay somewhere else.\n\nThe weather was crisp and clear as he headed out and turned onto the freeway to take him to the airport where he'd fly into Montpelier, the capitol of Vermont, and rent a car before heading north toward Sheldon.\n\nThe leaves were gorgeous, ranging in color from a beautiful shade of dark orange to a rich, deep red. It was every bit as beautiful as he'd been told, and Fields couldn't help but wish his wife could have seen it with him. \n\nThe winding roads were as much a part of the scenery as the leaves. There was just this amazing country charm all around him and trying to take it all in was probably as dangerous as texting and driving. The good news is there was very little traffic to contend with.\n\nFields stopped anytime he saw something worth recording whether it was a particular group of trees with red leaves or a quaint little chapel or a some tiny town with one street and a single stop light. He didn't know anything about how Vermont looked the rest of the year, but this kind of beauty was something he could get used to. Then again, not having someone to share it with made it all seem rather hollow and even pointless. \n\nHe pressed on consoling himself with knowing Pamela would enjoy the footage and the scenery and that maybe, just maybe he might one day find someone with whom he could again share all of life's wonders. He smiled when he realized one of those wonders was the beauty of a woman's body and the accompanying sounds of her gentle sighs and moans which came from an equally gentle touch.\n\nWithout warning, he realized something else had happened for the first time since she left this world. He was hard, and it was even more surprising when he realized he hadn't been thinking about his late wife. \n\nThere was no specific woman in this fantasy. It was more a mental compilation of all the things he found attractive in women. This image, this...fantasy girl...was all of those things rolled into one. From her silky hair to what she was wearing and everything in between suddenly appeared to him and for the first time in as many months, he desperately wanted to be with 'her', or least with some reasonably close version in real life. And yet, as desperate as this need was, Fields wasn't about to settle for just any woman who came along and that, he understood, was why he'd said 'no' to the invitation from his high school flame from so many years ago. Time was on his side and there was no need to rush. She, whoever she might be, would enter his life at some point and when he found her, he was convinced he'd know it. Until then, he'd do as Pam had suggested and patiently watch for opportunities to present themselves.\n\nFields wasn't certain he'd entered the city limits of Sheldon even when he saw a sign which read \"Sheldon, Vermont, Site of Civil War Action, October 19, 1964.\" It was nothing but a sign along the side of the winding road he'd been following for some time. He continued along the road for another half mile when his GPS told him to turn left in one mile. He slowed as he approached the turn and received another warning just as he reached it.\n\n\"Destination is on the right in half a mile\" the voice said. \n\nIt was a large, beautiful, two-story house with a large front porch. It was painted dark blue with white trim and there was a small, tastefully-done sign out front which read \"Maple Leaf Inn, Sheldon, Vermont.\"\n\nHe pulled around back and smiled when he saw the swimming pool enclosed in a large glass shelter, its blue waters beckoning to him. He stepped out and took a long look at it before retrieving his bags from the trunk.\n\nAs he grabbed his suitcase, clothing bag, and gym bag, he saw a rather attractive woman maybe ten years older than him coming down the steps at the back porch. Having no idea how old Misty might be or what she might look like, this woman fit with the mental image he had of her. She was not only nice looking, he didn't see a wedding ring. He smiled as his first thought was this might a very nice place to say.",
        "\"Good afternoon!\" a cheerful voice said as they approached each other.\n\n\"Hello, there,\" Fields said. \"It's nice to finally meet you.\"\n\nThe woman smiled and said, \"Had you and I met before I can assure you I'd have remembered.\" She opened the door to the inn for him, reached out and took his clothing bag, and followed him inside. \"I think you're looking for my niece, Misty, who's right over there.\"\n\nThe man did a double take at the woman who was now behind him as he heard yet another pleasant-sounding female voice say, \"Mr. Fields?\"\n\nHe turned and saw her and the smile faded from his face. \"Is something wrong?\" she asked as she reached for his gym bag. \"I see you met my Aunt Barbara.\" He was still staring her unaware he was doing so. \"Mr. Fields?\" she said again.\n\n\"Oh. Um, yes. Sorry. I was just confused. I guess I just assumed your aunt was you and...well, shame on me for assuming.\"\n\nThe young woman standing in front of him and smiling at him was not only much younger than he'd imagined, she was much more attractive than he'd um...assumed. She was downright beautiful. She was probably somewhere between 25 and 30 and not at all the kind of person he expected to see running a bed and breakfast in the tiny hamlet of Sheldon, Vermont.\n\n\"Your room is ready and we'll be serving dinner at 6 o'clock.\" She and her aunt led him across the inn to a room with a large number '1' on it. Misty unlocked it, handed him the keys, then opened the door for Fields and said, \"After you, I come first.\"\n\nIt took him a second to 'get it' but Fields chuckled when the light finally went on. He almost replied with a favorite line of his own: \"What'cha got on? Your mind?\" but decided against it.\n\nThe room was filled with the kind of things his wife would have loved. \"That's a beautiful quilt,\" he remarked as she sat his bag on it.\n\n\"Thank you. My grandmother made that when I was born. One of her quilts is in every room of the inn.\"\n\n\"Oh, so it's about 10 years old then,\" Fields said with a smile.\n\n\"I wish,\" Misty said as though she was old enough to have the authority to say something like that. \"I'll be 28 in a few weeks so it's closer to 30.\"\n\n\"Congratulations in advance, and it looks brand new,\" Fields remarked as Barbara hung his clothing bag in the closet. She smiled at him in a way he hadn't seen in quite a while (or maybe just hadn't noticed), wished him a wonderful stay, then left.\n\nMisty thanked her aunt then continued the orientation tour. \"The bathroom is in here,\" Misty said as she pointed out the amenities. \"We have basic cable as well as HBO and Showtime. You have a microwave over there and a mini-refrigerator in the corner with an assortment of cordials and various snacks. We do laundry for you, but there's an iron and an ironing board in your room.\" She smiled at him then said, \"Just in case you get bored. Oh, and obviously, your swimming pool is right through this sliding door.\"\n\n\"Perfect,\" he told her. He took a peek through the sliding glass door then said, \"I thought you were running this place all by yourself.\"\n\n\"For the most part I am. Aunt Barbara stops by every now and then to help out when we get busy.\"\n\n\"Is she your mother's sister by any chance?\" he asked.\n\n\"She is,\" Misty told him. \"In fact she's her twin.\"\n\n\"I don't want this to sound trite knowing the loss you recently experienced, but it's obvious beauty runs in your family.\"\n\nMisty laughed and said, \"Well, thank you,\" she said in a friendly sort of way. \"Aunt Barbara will be thrilled to know you said that.\"\n\nShe gave him a serious look then told him, \"I may have to keep an eye on you, Mr. Fields. Then again, my Aunt Barbara mentioned she already kind of has hers on you.\" She saw him give her a puzzled look then said, \"She was at the back door when she saw you get out of your car. Before she went outside she called out to me, 'Hottie alert!'\" Misty smiled again, then said without looking as she walked by, \"She wasn't wrong.\" \n\nShe stepped out of the room then told him, \"You know where I hang out, Mr. Fields. If you need anything, don't hesitate to ask. \"Oh, and do watch out for Aunt Barbara. She can be...a handful.\"\n\n\"Good to know,\" Fields said smiling back at her as she walked out and closed the door.\n\nHe sat down on the edge of the bed and tried to remember the last time he'd seen a woman\u2014of any age\u2014who was as beautiful as Misty. He racked his brain for a while and other than actresses or models he'd seen on TV, he wasn't sure he could think of one.\n\nLike many men, he had a thing for blondes, but Misty's raven hair was nothing short of amazing. It reminded him of his wife's the first few years they were married before she began cutting it ever shorter, something that inevitably seemed to happen at some point once a woman got a ring. He didn't mind short hair, but there was something very...delicious...about long hair that he'd always loved. Misty's was shoulder-length and softly styled and it was the first thing he'd noticed.\n\nHer bright, blue eyes were the next feature that had jumped out at him. They were a perfect contrast to the nearly black hair and taken together with her beautiful, white smile, her already very-pretty face became stunningly beautiful.\n\nShe was neither tall nor short, and her hard body was as attractive as her face. He'd done his best not to stare, but he couldn't help but notice her soft, round breasts perfectly framed by the dark-gray, long-sleeved sweater she was wearing. Her waist was narrow and tight and the ass he'd not even tried to avoid looking at as she led him to his room, was just so round and...perfect. The black skirt which hugged it in all the right ways was still modest but short enough to show off a pair of very shapely legs that ran all the way into a pair of black heels that might have been 2\" high.\n\nAs he sat there thinking about her smile, he realized it was happening again. He let out a long, slow groan then laughed out loud when he wondered whether or not his balls might actually be turning blue. The only release he'd had in all these many months was maybe a half-dozen wet dreams. Well, until the night his high school friend had invited him to stay the night. He'd gone home and done something he hadn't since...well, high school. He'd been so horny something had to give and it was his willpower as he stood in the shower letting the warm water run down his body and wash away the enormous batch of 'body batter' he unloaded as he fantasized about her.\n\nOther than that, were his balls not turning blue, the back up was getting so severe his eyes had to be turning white. After looking at Barbara, who was herself, a very nice-looking woman, and then Misty, who was simply incredible, he knew he had to find relief and find it soon.\n\nHe grabbed the TV remote and laughed again when he wondered whether or not the Playboy channel was included and he couldn't help but wonder if he'd blush if Misty saw a charge for a porno movie on his bill at checkout.\n\nFields showered and changed for dinner and Misty introduced everyone at the table to each other. There was a retired couple from New York celebrating their 40th anniversary, a young couple on their honeymoon, and Fields who was sitting all by himself and feeling more out of place than he could have ever imagined.\n\nThat is, until Barbara slipped in beside him and said, \"Well, hello again, Mr. Fields! Do you mind if I join you?\"\n\n'Dangerous' or not, he was grateful not to feel alone. \"By all means,\" he said as he stood up and pulled her chair out.\n\n\"Handsome and a gentleman,\" she said loud enough for everyone to hear.\n\nThe older man said, \"So are you two an item?\"\n\nFields smiled and before he could speak, Barbara answered for them. \"No. Not yet anyway.\" Fields just kept on smiling.\n\nThe younger woman said, \"I think you make a very cute couple!\"\n\nAgain, Barbara spoke. \"Well, thank you, dear! I couldn't agree more.\" She looked at Fields who was still smiling away and wondering if being alone might just be the better option.\n\nMisty walked up and said, \"We have either roast beef with cabbage and potatoes or fresh rainbow trout caught in a nearby stream just this morning.\"\n\n\"Did you catch them yourself, young lady?\" the older man asked.\n\n\"As a matter of fact, I did,\" Misty said taking a small bow when everyone applauded. \"I can only do that when I get some help at the inn so thank you, Aunt Barbara.\" There was more light applause before she said, \"So...what'll it be?\"\n\nEach person placed their order then the conversation started. Fields knew there was no way he was going to be able to avoid taking about his late wife so he mentally prepared himself for it. Without exception, he got the standard responses from each person at the table. He knew they were sincere, but hearing 'I'm so sorry for your loss' for the thousandth time sounded canned. \n\nPutting that behind him, he had a very difficult time listening to the older couple talk about their 40 wonderful years together then listening to the happy, young honeymooners talk about the coming 40 years still ahead in their lives.\n\nDuring the meal Barbara said, \"So, Mr. Fields. Not to be too personal, but I see you still wear your wedding ring. Does that mean you haven't started dating yet?\"\n\nMisty heard her clear in the kitchen and said, \"Aunt Barbara?\"\n\nShe craned her neck and called out, \"I was just asking, honey. There's no harm in that, right?\"\n\nMisty stepped inside the dining room, looked at Fields, then said, \"I told you she could be a handful.\"\n\nNot knowing what else to say or do, Fields just smiled\u2014again.\n\n\"Would it really be that bad for Mr. Fields to get a handful of m....\"\n\n\"Aunt Barbara! Seriously?\" Everyone chuckled and Fields joined in but to a much lesser degree.\n\n\"Fine. I'll just eat in silence then if that's what you want.\"\n\nMisty turned to walk away and said, \"Promises, promises.\"\n\nSome more chuckles were met with Barbara's, \"What?\"\n\nAfter dinner Barbara asked Fields if he might like to join her for a drink in the great room. \"That sounds really nice, but I think I'm going to relax in my room for a while.\"\n\n\"What a pity,\" she said. \"You come all the way up here and just sit alone in your room.\" Fields didn't smile and Barbara didn't let up. \"If you change your mind, I'll be out here somewhere until around 10.\" She leaned over and said, \"After that, I'll be upstairs in room #5.\" She whispered, \"I never lock the door.\"\n\nFields raised his head then nodded once and said to everyone at the table, \"If you'll all please excuse me.\"\n\nMisty saw him leaving and said, \"No dessert, Mr. Fields?\"\n\n\"I don't think so, Misty. Thank you, though.\"\n\n\"If you change your mind just let me know, okay?\" she said with a smile. \"I can serve you out here until 10pm or bring it to your room. Your choice.\"\n\nHe thanked her and headed to his room where he laid on the bed and turned on the television settling on ESPN's Sports Center.\n\nJust as it was ending, he heard a knock on his door. \"Mr. Fields? It's Misty.\"\n\nHe got up and opened it. She was standing there holding a piece of German chocolate cake then said, \"I'm bringing your dessert as a cover for coming to apologize.\" She smiled then said, \"But you can still have the cake if you'd like.\"\n\n\"I might do that if you'll have a piece with me.\"\n\n\"Um...I don't normally eat dessert, but I might be willing to have a scoop of vanilla yogurt if you'll give me a minute.\" She was back in a flash and Fields invited her to join him.\n\n\"I know I tried to warn you about my aunt, but even I was embarrassed tonight. I'm really sorry.\"\n\n\"She's not so bad,\" Fields lied. \"A little too direct for my liking, but I'm sure she's just a very outgoing person.\"\n\n\"You can say that again,\" Misty quipped as she took a tiny bite. \"Sometimes it's hard to believe she and my mom were twins. Mom was so devoted to my dad and Aunt Barbara has been married twice and is um...on the prowl for number three.\" She smiled at Fields then said, \"When she sees something she likes....\"\n\nFields smiled back and said, \"Forewarned is fair-warned, right?\"\n\nMisty smiled then got serious. \"Does it ever get any easier? You know, losing someone you love?\"\n\n\"Yes and no,\" he told her. \"For me it's been over three years and I only recently stopped crying.\" He stopped then said, \"I've never admitted that to anyone before and I don't why I just told you.\"\n\n\"I'm glad you did,\" she said quietly. \"I cry a lot myself.\"\n\n\"It's only been three months for you, Misty. I was a basket case at that point.\"\n\n\"I suppose it's different, though. It's not that parents aren't important to us, it's just that losing the one person you share everything with has to be....\" She stopped then said, \"I'm really sorry. What I was trying to say was....\"\n\n\"It's okay and I completely understand. I can't say you're right because everyone grieves differently. It's possible someone could love a parent far more than a spouse or vice versa. To me, the worst possible thing would be losing a child. As hard as it was losing my wife, if something happened to my daughter....\"\n\nMisty saw him hitch and said, \"Tell me about her.\"\n\nHe explained how he'd recently taken her to UNC, Chapel Hill, and how hard it had been to say goodbye as well as her admonition to keep an eye out for opportunities.\n\n\"She seems wise beyond her years,\" Misty told him. \"You're obviously and justifiably very proud of her.\"\n\n\"I am and I'm sure your parents were equally proud of you,\" he said managing not to choke up this time.\n\nMisty pushed the yogurt around in her dish as she replied. \"Yes, they were. I know they wanted me to finish college then come take over the inn, but as I said, this just wasn't my dream. It was their dream for me, but not mine.\"\n\n\"May I ask why you came back? I mean, couldn't you have just hired an attorney to sort through everything and put it up for sale?\"\n\n\"I thought about it very seriously,\" she told him. \"But I just couldn't do it, you know? This was the only real connection I have left to them so I felt like I owed it to them to give this a try.\" She smiled and said, \"If it wasn't for the cooking\u2014which I hate\u2014and not teaching my Kindergarten class\u2014which I love\u2014this might be something I could enjoy.\"\n\n\"I love to cook,\" he said.\n\n\"Are you serious?\" Misty asked. \"It is the most boring, mundane, waste of time...ever!\" She realized she'd probably just insulted her guest then quickly added, \"For me, that is.\"\n\nFields chuckled quietly then said, \"I've always enjoyed it as far back as I can remember. I love getting everything together from the food itself to the spices and oils to having it all come out at the right time. It goes without saying, it has to be delicious, too, but for me it's a labor of love.\"\n\n\"So you must not eat what you cook,\" she said.\n\n\"Really? Why's that?\" he asked not following her.\n\n\"Well, just look at you. You don't have an ounce of fat on you and...I dunno, maybe my Aunt Barbara was right. You are kind of hot.\" Misty smiled then took a bite of cold yogurt.\n\nFields laughed but couldn't believe the way her compliment made him feel. \"You just made an old man feel very good,\" he told her. \n\n\"Old? Hardly. I can't believe you have a daughter in college,\" she said truthfully.\n\n\"We got married when when we were 22 and just out of college ourselves. Pamela came along the following year and I'm now 41 so...there you have it.\" She smiled at him in a way that caused a serious increase in blood flow to a place he didn't want filled with blood. \"I swim a lot, too. I guess that helps.\"\n\n\"I swam on our high school team but quit when I went to college. Maybe we could go swimming before you leave. If you're interested, that is.\"\n\nFields wished he could grab the pillow next to him but settled for crossing his legs and hoping 'it' wouldn't be noticeable. \"I'd like that,\" he told her. \"And I'll tell you what. I'd be happy to help you out in the kitchen. If you're interested, that is.\"\n\n\"Ha! Are you kidding? I'd gladly pay you to cook for me. But because you're a paying guest I could never ask you to do that. But if I could...\"\n\n\"But you're not asking me. I'm volunteering. I mean, I don't really know what I'm going to do other than drive around and try and find things to record on my video camera. And to tell the truth, as beautiful as it is around here, there are only so many miles of red leaves you can get excited about.\"\n\nMisty laughed and said, \"I get that. Growing up around here, you take it for granted. I sometimes marveled at how far people came from just to watch the leaves change color. Then again, I've never seen the Mojave Desert or the Rocky Mountains or a beach in Hawaii, and I'd pay to see all three of those so....\"\n\n\"So much of life is this push-pull thing. We crave intimacy and love yet we also want solitude sometimes. We want routine and predictability yet we also seem to need excitement and spontaneity. It's as though we're never satisfied.\"\n\n\"I think that's nature's way of pushing us forward and onward. If we were all content to stay in one place and do the same thing our entire life, nothing much would get done let alone new discoveries in science and medicine and the like.\"\n\nFields smiled a genuine smile then said, \"Talk about wise beyond one's years. You seem pretty dialed into this thing called life, Misty.\"\n\n\"I try and pay attention,\" she said smiling back at him.\n\n\"If you don't mind, could I ask a personal question?\"\n\n\"Not at all. Besides, it's your turn,\" she told him as she took another bite.\n\n\"You mentioned your age and while I know most people marry later in life now I was just wondering if maybe there was...you know....\"\n\n\"Someone in my life?\" she said completing his thought. Fields nodded so she replied to his unfinished question.\n\n\"I was engaged to someone seven years ago.\" He saw her expression change as she said almost somberly, \"Someone I loved very much.\"\n\n\"I'm beginning to feel sorry I asked,\" Fields said as she looked into the little dish in her hand.\n\n\"Vermont is one of the most liberal, progressive states in the Union and although it's not anti-military it's not exactly Texas, you know? I met this guy who was an Army recruiter when I was in college in Montpelier. I didn't know that when I met him. We were at a bar and he was in civilian clothes for first couple of days we spent together. When I learned he was on active duty, it didn't matter. I fell in love with him crazy fast. He was so kind and gentle and so handsome. I was 21 and he was 32 but it didn't matter at all. We had six months together before his tour on recruiting duty was over. The Army sent him back to Fort Bragg in North Carolina, and a week before he left, he proposed. We were going to get married that year around Christmas time, but two months later his unit was sent to Afghanistan and four months after that....\"\n\n\"I think I know how this ends,\" he said quietly. \"I'm terribly sorry,\" he told her hoping that didn't sound as empty as the 'platitudes' people offered him all the time.\n\n\"I went to his memorial service and it was all so surreal. There was his flag-draped coffin supposedly containing the remains of the only man I ever loved but because it was a 'closed-casket' ceremony, I couldn't even 'say goodbye.' Other than my parents, I didn't know a single person around me. His family had never met me and although they were cordial, I was still an outsider. Not being his wife, I was like the odd-man-out.\" She tried to smile then said, \"Or would that be 'odd-woman-out'?\"\n\n\"After that, I kind of withdrew and stopped dating. I'd just graduated from college and really threw myself into teaching.\" She smiled her old smile again then said, \"Did I mention I love teaching?\"\n\n\"Maybe once,\" he said supportively. Fields sat up straight then said, \"We're both members of a club no one ever asks to join.\"",
        "\"Yeah, it pretty much sucks. Or as the military guys say, 'It sucks\u2014big time'.\"\n\nBoth of them laughed then Misty said, \"I should be going, Mr. Fields. It was really nice talking to you. I had no idea we had so much in common.\" She paused then said, \"I wish we didn't.\"\n\n\"Me too, Misty. And it would be nice if you'd call me Gary.\"\n\n\"I'll do that, Gary,\" she said as she stood up. \"Can I take your plate before I go?\"\n\n\"Tell you what. I'll go with you and you can show my the kitchen and if you'll let me, maybe I could make dinner for everyone tomorrow.\"\n\nMisty laughed as she said, \"They say the way to a man's heart is through his stomach. Well, the way to mine is to keep me out of the kitchen.\"\n\n\"If that's true, I can't wait to take over and get you out of there!\"\n\nMisty smiled, looked up at him, then said, \"Why Mr. Fields, are you flirting with me?\"\n\nHe smiled back then said, \"A man can always dream, right?\"\n\nHe followed her to the kitchen and looked around. \"Okay, I can work with this. Nice commercial mixer here. Double oven over there. Large grill for pancakes, hamburgers, and what not. Plenty of refrigerated space and a freezer that's nice and deep.\" \n\nHe turned to Misty and said, \"Someone put some money into the kitchen. This is all high-end, quality stuff.\"\n\nShe stood there shaking her head before saying, \"This turns you on, doesn't it? Ha! You have an oven fetish. I can see it in your eyes.\" She was pointing at his right eye and Fields couldn't help but laugh. \"Uh-huh. You laugh, but I'm on to you, Gary Fields.\"\n\n\"All I need is an apron with the inn's logo on it and I'm all....\"\n\nMisty tossed one at him and said, \"You were saying?\" It was wrapped around the top of his head and she started laughing.\n\nHe tugged at it and found an opening to talk through. \"I do not look ridiculous,\" he said pointing a finger at her.\n\n\"Oh, no. Not at all,\" she said her eyes open wide in mock agreement. \"You look very.... Oh, hell, you look totally ridiculous!\" \n\nFields ripped at the apron and said, \"That's it, you are toast!\"\n\nMisty shrieked as she turned around to run. Fields couldn't see with the apron around his face and two steps into the chase, tripped and drove his right thigh into the corner of a steel table.\n\n\"Son of a b....\" he called out biting his tongue as the pain from his leg made its way to his brain.\n\nMisty stopped immediately and came back to see him holding his upper leg and grimacing. \"Gary! Are you okay? What happened? What did you do?\"\n\nHe told her what happened and she could see it hurt like hell. \"Come here and sit down. We need to get some ice on this right away.\"\n\n\"No, I'll be fine,\" he told her. He tried to put his weight on it and the pain shot back through him. \"Okay, maybe some ice would be a good idea. But not here. I want to sit down in my room.\"\n\n\"Okay, okay. Um...let me help you. Here, put your arm around my shoulder and....\"\n\nFields did that as Misty put her arm around his waist. \"Can you walk?\" she asked.\n\n\"No, but I can still hop pretty good,\" he told her trying to be funny. The humor broke the tension and Misty laughed with him.\n\n\"I'm really sorry, Gary. How bad do you think it is? Should we call the doctor?\" she asked as he limped back to him room.\n\n\"Call him? As in...house call?\"\n\n\"Well, yeah. That's how it works in Sheldon. Doctor Smith makes house calls. Should I call him?\"\n\n\"No, I'll be fine,\" he told her. \n\nShe helped into the soft, comfortable chair in his room and said, \"I'll go get some ice. Take those pants off so we can see how bad it is and I'll be right back.\"\n\nFields looked at her and said, \"Why Ms. Vincent, are you flirting with me?\"\n\nShe flipped her hair as she turned and said, \"Ha! In your dreams!\"\n\nAs she walked away he called out, \"I told you a man can always dream, right?\"\n\nHe heard her laugh and that was enough to mitigate the throbbing pain in his leg. He dropped his pants and pulled a towel over his lap then looked down. It was already a deep purple in the middle and red for a couple of inches all around it. He was no doctor but he did know what a hematoma was and that concerned him. What he didn't know was whether or not they caused blood clots and that thought made him think twice about letting her call the doctor.\n\nMisty came back with an old-fashioned ice bag. As soon as she came in, her eyes went straight to his thigh. \"Oh, my God!\" she said unable to keep looking. \"I'm calling Dr. Smith right now!\" \n\nShe handed him the ice bag then grabbed her cell phone. \"I'm fine,\" he said reaching for her forearm. She was still punching buttons when he told her, \"I'm okay. Really.\"\n\nMisty ignored him and Fields heard a man answer the phone. \"Dr. Smith? Hey, it's Misty. Good, how are you? How's Phyllis? Oh, that's wonderful. Say, listen....\" \n\nShe described what happened and Fields hear him say, \"Let me take a look at it. Just turn your phone around and go to FaceTime, okay?\"\n\nWithout asking, she did just that. \"Oh, okay. It looks nasty, but I don't think it's serious. I see you've already got the ice out. Give him Tylenol for the pain and have him keep the ice on it off and on until he goes to bed. Then again in the morning. After that, a heating pad will help until it heals. It looks painful but not serious.\"\n\n\"Okay, thanks, Doctor Smith. Will do and you take care, okay? Hey, you guys need to stop by soon. I haven't seen you in forever!\"\n\nFields loved the folksy charm and the old-world method of calling a medical doctor directly coupled with modern technology that saved him a house call. Fields hadn't heard a word the doc said, though. He spent the entire time staring at Misty and her gorgeous figure and beautiful face.\n\n\"Did you get all that, Captain Klutz?\" she said with a big smile.\n\n\"No, not really,\" he told her honestly. \n\nHe saw her glance down then smile. \"Um...looks like something else is swelling. I should get some more ice.\"\n\nFields knew he was getting hard again. He just had no idea it was that obvious. \"Oh, shit!\" he cried out reaching for the quilt to pull it over the towel.\n\n\"Hey! Easy with that quilt,\" she said reaching over him and turning to look at his face. She was only a few inches away and he could not only smell her perfume, he could smell her breath which struck him as being...sweet. \n\nHe let go of the towel and said, \"Okay, okay. It's all yours, Nurse Ratched.\"\n\nShe made an angry face as she took the quilt from him. It was playful and only lasted a second. She pulled the quilt over his...growing problem and said, \"There you go. All safe and um...sound.\" She leaned over and said very quietly, \"This will be our little secret, Mr. Fields.\"\n\nShe patted him on his good thigh then said, \"Can I get you anything else? Maybe a bruise for the other leg so you have a matching set?\"\n\nFields made a growling sound and snarled at her. \"With friends like you....\"\n\nMisty stood up and said, \"This must be the universe's way of telling you you don't belong in the kitchen.\"\n\n\"I don't take advice very well,\" he said. He tried doing his best Arnold Schwarzenegger impression and said, \"I'll be back!\" with 'back' sounding like 'Bach.'\n\nMisty laughed and told him, \"You mean you'll be on your back, right?\"\n\n\"Nope. I'm not letting a little thing like a massive hematoma slow me down. No, sirree.\"\n\n\"Um, Gary? You're no Terminator, okay?\" She laughed when he laughed then told him, \"Let me go get you some Tylenol and I'll get out of your hair.\"\n\n\"Dang! And just when I was getting used to having you in it!\" he said.\n\nShe looked at the top of his head and said, \"Well, it's thick enough for a girl to get pleasantly lost in there. I'll at least grant you that.\"\n\nShe smiled again and said, \"I'll be right back, okay?\" A minute later she was and handed Fields two Tylenol capsules along with a glass of water.\n\n\"I really am sorry about your leg, Gary. Do you honestly think you'll be okay?\"\n\n\"I wouldn't want to go hiking tomorrow, but I think I can manage to drive around just fine.\" He smiled at her then said, \"Or even cook dinner.\"\n\n\"You don't have to do that. I can take care of it. After all, that is my job.\"\n\n\"Yeah, but I'm on a mission to get you out of the kitchen so....\"\n\n\"Ah! You're so sweet,\" she told him. \n\n\"Sweet. Hmmm. Um...thanks?\" he said knowing what 'you're sweet' typically meant.\n\nShe walked over to the door and just before closing said, \"You're kind of cute, too.\" Before he could reply, she waved with her fingers the way women do then closed the door and left.\n\nHe lifted up the quilt and saw the purple had spread and that the towel now resembled a tent with a large pole in the middle. \"She is so hot!\" he said as he tried to move his leg causing him to wince from the sharp pain.\n\nFields didn't sleep too well as his leg woke him up every time he turned his body. It was a little after 5am when he gave up. He limped to the bathroom where he peed then emptied the water from the ice bag. He washed his hands then went to the little fridge and poured the cubes from the ice tray into the bag and sat back down. Twenty minutes later, his leg was numb from the cold and he decided he was going to try swimming.\n\nAfter a slow, painful set of movements, he got into his trunks and limped out to the pool. Only the small lights under the water were on and it was otherwise pitch black and utterly silent as he gently lowered himself into the water. As he tried moving around using only his arms he felt pretty good. He used his one good leg and that too, was fine. His bruised leg hurt but not in a bad way, and he knew he could swim if he used it sparingly and didn't push off with it when he changed directions.\n\nHe'd completed about 20 laps when he heard a noise. He stopped swimming, treaded water, and saw Misty standing there in a bathing suit.\n\n\"Are you insane?\" she said her hands on her hips and her hair in a ponytail.\n\n\"Maybe a little,\" Fields offered. \"Come on in. It feels great.\"\n\n\"Yeah, so you can hurt your leg even more, get gangrene, sue me, and... Hey, that way you'd own this place and I could go back to teaching!\" she said before taking two quick steps and doing a cannonball. Fields turned as she raised up a modest plume of water before shrieking loudly.\n\n\"Shhh, shhh, shhh!\" she said mostly to herself when she realized how loud that was. Misty giggled again then said, \"You're right, this does feel good!\" She pushed off the side and free-styled to the deep end, then did a very nice flip-turn and swam to the other end.\n\n\"Not bad,\" Fields told her as she grabbed the side of the pool at that end.\n\nShe was gasping for breath as she said, \"I still have decent form. What I don't have is stamina!\"\n\nShe swam three laps with him then said, \"I'm pooped and I've got to get breakfast started anyway.\"\n\nShe pulled herself out of the pool then said, \"Seriously, how's your leg this morning?\"\n\n\"Not too bad in here,\" he told her. \"I can't say that as a land lubber, though.\" He was holding onto the side and tried to pull himself up until he got to his bruised thigh. He made a hissing sound then lowered himself back in. \"I think I'll try the ladder,\" he said pointing to the shallow end.\n\n\"Hold on. I'll come around and help you.\" Misty walked quickly to the ladder just as he was surfacing.\n\n\"Easy!\" she said. \"Don't put any weight on that leg, okay?\"\n\nFields used his good leg, drug the bad one up, then repeated the process. Misty extended her hand and as he reached for it he saw her staring at his body. \"What it is it? Do I have another bruise or something?\"\n\n\"Wow,\" she mumbled. \"How old did you say you are?\"\n\n\"Forty-one. Why?\"\n\nMisty hadn't seen a body that hard on any guy since college and she'd seen her share of them back then. \"Swimming definitely agrees with you,\" she said as he put his arm around her again.\n\n\"It kept me from going crazy that first year. Well, along with my daughter, that is.\"\n\nShe helped him grab his towel and let him steady himself using her to balance as he dried off. \"Okay, I think I've got it from here,\" he told her. She was staring at him again, but not at his body.\n\n\"Thank you,\" he said waiting for her to break free of whatever trance she was in. \n\nShe blinked twice and said, \"Oh, um...you're welcome. I guess I'll see you at breakfast then, okay?\"\n\n\"You will,\" he told her as he limped into his room.\n\nGary was the talk of the table when he limped in for a breakfast of homemade biscuits and gravy with sausage and bacon. \n\n\"That's what you get for...fooling around...with such an attractive young woman, Gary,\" the older man told him.\n\nHis wife gave him a look but it had no effect. \"The only question is whether or not you caught her. Did you?\"\n\n\"I'm listening to your conversation!\" Misty called out.\n\nThe man turned around and said, \"Good. So I'll ask you. Did he catch you?\"\n\n\"You are such a bad man!\" she teased.\n\n\"That wasn't an answer, young lady!\" he called back.\n\n\"Why don't you ask him?\" she said loudly.\n\n\"I tried. He won't say.\" He waited for a second then called out, \"I'm gonna keep asking until I get an answer. You know that, right?\"\n\n\"Not if you want to stay married another year you won't,\" his wife finally said causing everyone to laugh and her husband to give up.\n\nWithout prompting, Misty called out, \"To answer your question, he gave up too soon.\"\n\nEveryone turned and looked at Fields as the younger man said, \"Oooo! I believe you just got zinged, Gary.\"\n\n\"She knows I can't run right now so she thinks she's safe. But when my leg gets better!\" he called out.\n\n\"Yeah, yeah. All talk, no action.\" He saw her smiling at him and he immediately felt the results.\n\nAfter a second cup of coffee, he was sitting alone at the table. Misty came out, cleared everything off, then started the large dishwasher in the kitchen before coming back out.\n\n\"So what's your plan for today, Crip?\" she teased. \"You gonna hobble around here all day or venture out into the grand world of Sheldon?\"\n\n\"I'm feeling bold,\" he said. \"It's a brave new world for yours truly.\"\n\n\"Uh-huh. Sure it is. A man has to dream, right?\" she said trying not to smile.\n\n\"Wise guy, eh?\" Fields said doing his best imitation of Curly from The Three Stooges.\n\n\"Hey, I think you've found your calling!\" she told him very seriously. \"You make a perfect stooge, Moe!\"\n\n\"If I could run, you'd be so....\"\n\n\"So...what? What would you do Mr. I-can-barely-walk? Huh?\"\n\n\"Okay, fine. You win this round, but I will be back!\"\n\n\"Yeah, yeah. That's really getting tired. You and your idle threats.\" She finally smiled a genuine smile at him then said, \"There isn't a whole lot to see around here once you've had your fill of leaves. But unless you know where to go, you'll miss the handful of things that are worth seeing.\"\n\n\"Oh, okay. Can you let me know where they are so I can make sure not to drive on by?\"\n\n\"I can do you one better,\" she said. \"Well, if you don't mind a tour guide.\"\n\n\"Really? Can you afford to get away for a while?\"\n\n\"The dishes are running and I don't have to start lunch prep until around 10:30, so yeah, I could probably squeeze you in. But we better hurry.\" She looked at his leg then said, \"Oh, right. You can't. Tsk, tsk. What a shame!\"\n\nHe stood up like he was going to come after he again and Misty just laughed. \"Uh-huh. All talk and no...run?\"\n\nShe smiled at him again then said, \"Let me just grab my coat and we can head out.\"\n\nFields went to his room so he could brush his teeth and get his own jacket. He put his keys in his pocket, grabbed his cell phone and limped back into the dining room.\n\n\"All set?\" she asked as soon as he walked in. \n\nShe let him lean on her and use the handrail as they went down the steps, but he still opened her door before painfully limping around to his side. He set down and put his foot on the brake to start the car and winced.\n\n\"You okay?\" she asked.\n\n\"Wow, that hurts like h...the dickens.\"\n\n\"Why don't you let me drive?\" she said. \n\nHe wanted to make a joke about women drivers, but his leg was really hurting so he told her that sounded like a good idea.\n\n\"This way, I won't have to tell anyone where to turn,\" she kidded as she started his car.\n\n\"So where are you taking us?\" Fields asked.\n\n\"Saint Albans Museum,\" she said. \"It's about 10 miles south of Sheldon and St. Albans was the site of the northern most action in the Civil War.\"\n\n\"I just learned something,\" Fields said. \"I'm sure you've been there before, right?\"\n\n\"Only once,\" she said. \"It's another one of those things you take for granted if you live nearby. I think you'll really enjoy it and it's been many years since I saw it and I'm happy to go again.\"\n\nMisty was absolutely correct. It wasn't a large building and only took a few minutes to see everything in it. The draw was in its connection with history. In October of 1864, Confederate soldiers in Canada came to St. Albans claiming to be on a 'sporting vacation.' Two or three more soldiers arrived each day for over a week until 21 Confederate cavalrymen had assembled. Shortly before 3pm the men staged simultaneous robberies of the city's three banks. They identified themselves as Confederate soldiers and took a total of $208,000 ($3,150,000 in 2016 dollars). During the robberies, eight or nine Confederates held the villagers at gun point on the village green, taking their horses to prevent pursuit. Several armed villagers tried to resist, and one was killed and another wounded. Their leader ordered his men to burn the city, but the 4-US-fluid-ounce (120 ml) bottles of Greek fire they used failed to ignite, and only one shed was destroyed by the flames.\n\nThe raiders escaped to Canada, despite a delayed pursuit. In response to U.S. demands, the Canadian authorities arrested the raiders, recovering $88,000. However, a Canadian court ruled that because they were soldiers under military orders, officially-neutral-Canada could not extradite them. Canada freed the raiders, but returned to St. Albans the money they had found.\n\nAs an unintended consequence, the raid served to turn many Canadians against the Confederacy, since they felt that Canada was being drawn into the conflict without its consent. The Confederate agents in Canada realized this and no further raids were made.\n\nAs they drove off, Misty said, \"That's about as good as it gets up here. There are some old churches and other things to see, but since I have to get back to the inn, that's probably the end of my ability to serve as your tour guide.\"\n\n\"Fair enough,\" Fields replied. \"Is it possible to stop and buy what I need to make dinner tonight?\"\n\nMisty checked the time and said, \"I think we could squeeze that in. Keeping in mind we're on a pretty tight budget, any idea what you're looking to make?\"\n\nThey arrived back at the Maple Leaf with ten minutes to spare and Misty unloaded and brought in most of the groceries. She went straight to work preparing lunch while Fields developed his game plan for dinner. \n\nAt lunch, Misty let everyone know they had a mystery chef preparing dinner that evening which generated some chatter at the table. After a simple but delicious lunch, Fields did his best to help Misty clear the table and run the dishes. She sat with him and chatted for an hour over a cup of coffee. \n\nThe more he learned about her the more he liked her. She had such a mature, realistic perspective on life and love and yet she was still very much a romantic\u2014something Fields found very endearing. \n\n\"So after losing your fiancee, did you give up trying to find love?\" he asked.\n\n\"Not exactly. For the first year or so I was too heartbroken to really care. As I said, I dove into teaching headlong and spent my evenings preparing for the next day. It may sound counter intuitive to 'prepare' for a Kindergarten class, but it's amazing how much planning it takes to make learning enjoyable and effective. After that, I dated here and there but my heart still wasn't in it.\"",
        "\"Did you ever get over his loss...understanding, of course, we never truly 'get over' it?\"\n\n\"I guess after two years my heart stopped aching and I let go. I really barely knew him and yet my mind had no desire to ever let go.\" She looked at Fields and said, \"I can't imagine what it would be like to live with someone all those years and then lose him or her.\"\n\n\"It's hard. Your brain keeps looking for some way to keep them alive. It still wants to be with that person. When you first lose them, your brain is 99% filled with thoughts and emotions about them, you know? You can eat, drink, and try to sleep, but they occupy all of your conscious time. At some point, and maybe this is nature's way, the brain simply can't do that anymore and it drops off gradually to some manageable level. I'm guessing that one day it might be as low as 1% but that may be overly optimistic. As they say, time will tell.\"\n\n\"I agree. Our brains are like computers. They only have so much RAM or memory and if a tragic event maxes it out, it can't handle anything else. You're right about gradually dropping off. You go from 99% to 95%, then it surges back to 98% then falls off to 92% and so on. I'm sure some people recover much more quickly while some may never recover,\" she offered.\n\n\"They're the ones who fall into states of depression. The brain can't handle that kind of emotion for that long so it says, 'Hey, I know how to end this suffering! I'll just shut down all feeling.' So you mostly stop grieving but you also lose interest in everything else. It's a kind of Pyrrhic victory. You stop hurting, but you also stop feeling.\"\n\n\"I don't think I've ever enjoyed talking to anyone as much as you, Gary,\" Misty told him. \"You're not only intelligent, you're empathetic and insightful.\"\n\n\"Thank you for saying that, Misty, but it's mostly due to having been put through the ringer like you were. It tends to put life in perspective, you know?\"\n\n\"I do,\" she replied. \"I guess one of the reasons I've never gotten serious with anyone else is I need someone who 'gets it.' I don't need a man to pity me. I don't plan on bringing up my loss all the time. I just need him to understand how devastating it was and to give me space to still love him and not get jealous. Does that make any sense?\"\n\n\"It does,\" Fields told her. \"It makes perfect sense. I feel the very same way.\"\n\nThey sat quietly for a few minutes just sipping coffee before Fields said, \"I should probably get things started.\"\n\n\"Oh, great! Let me give you a hand,\" Misty said.\n\n\"Uh-uh. Not a chance. I know how much you hate cooking, so I've got this. I already looked around enough to know where everything I need is located, and I can handle it from here. Just go do whatever you enjoy doing and I'll take care of everything else.\"\n\nShe stared at him for a few moments then said, \"I enjoy spending time with you.\"\n\n\"Be careful saying things like that a guy my age. We can get the wrong impression pretty easily,\" he said smiling and pretending not to care how much she meant that.\n\n\"What would the wrong impression be?\" she asked smiling politely.\n\n\"Well, a guy my age could think something like you might want to actually spend time with him other than just talking,\" he volunteered.\n\n\"That wouldn't be wrong,\" she told him. \"What other things might he be mistaken about?\"\n\n\"Okay, well, a guy my age could possibly even think a beautiful young woman like yourself might have feelings for him. As in...more than just platonic feelings.\"\n\n\"I see. But in my case, that wouldn't be a mistake, either,\" she said sweetly.\n\n\"Misty, I'm serious. I...I like you more than I've liked anyone since...you know...losing Grace. I'm probably a little naive and even willingly gullible and ready to believe the most unlikely of things. So please don't give me any reason to do that.\" He looked away for a moment then said, \"Because it would really, really hurt to find out that's all it was was being gullible.\"\n\n\"I'm many things, Gary, but I'm not dishonest. I can't stand liars and cheats so I never lie to or cheat on someone I care about.\" She got up and sat in the chair next to him and said, \"So anything I say to you I sincerely mean.\" She put her hand on his then said, \"I would never intentionally hurt you.\"\n\nTheir eyes were locked in an unblinking stare for several seconds before Misty leaned toward him. Just as her eyes began to close they heard a cheery voice say, \"Oh, there you are!\"\n\nAunt Barbara came back from wherever she'd been and sat a couple of bags down. \"Don't you need to get started on dinner prep, Miss?\" she asked as she took her coat off.\n\nMisty had pulled back immediately when they heard Barbara speak. \"Um, yes. You're right. I really should get started except that Gary offered to make dinner tonight.\"\n\n\"Oh! I had no idea you were a cook, Gary. Listen, I'd love to give you a hand. Come on! Let's get started!\"\n\nFields smiled at Misty who smiled back before looking away. He stood up, then put his hand on her shoulder partly to steady himself and partly because he really needed to touch her. Even her shoulder was good enough. He gave it a gentle squeeze and let his fingers slowly slip away from her as he walked on by.\n\nBarbara proved to be much more of a hindrance than a help as Fields went about getting the evening meal put together. The main dish was going to be a ham and corn risotto with arborio rice, chicken stock, fresh corn, and smoked ham, seasoned with garlic, salt and pepper, and sprinkled with freshly-sliced chives and white cheddar cheese.\n\n\"This guy can cook!\" Barbara said to Misty who'd been relegated to the role of silent observer. She hadn't said two sentences in the last hour, but she and Fields had spoken volumes in the various looks and smiles they shared. Some were intended only for the other's benefit while a few came at Barbara's unknowing expense as she endlessly prattled on about what an amazing chef Gary was or how he was not only handsome but talented. She even intimated she was sure his talents extended well beyond the kitchen to um...other rooms of the house.\n\nWhen Barbara said that, Misty waited until she wasn't looking but made sure Fields was. She made a nasty face at Barbara then stuck her tongue out at her. Fields smiled then chuckled, then when Misty laughed too, they both lost it.\n\n\"What? What in the world is going on with you two? Did someone put something in your iced tea at lunch?\" That made them both laugh all the more until Barbara got so exasperated she said she was going up to her room. She made sure to shoot a snooty look at Misty on her way out and it was all Misty could do not to burst out laughing again.\n\n\"That went well,\" Fields said once they were alone again.\n\n\"You say that sarcastically,\" Misty began before adding, \"but in my opinion, that actually did work out quite nicely.\" She looked over at Fields who smiled and that was it. They were both in stitches again and looking for something to use to dry their eyes.\n\n\"I can't remember the last time I laughed like that,\" Gary told her. \"That felt SO good.\"\n\n\"I know!\" Misty agreed. \"I feel terrible it was at Aunt Barbara's expense.\" She paused then added, \"Okay, not that terrible,\" and there was another round of loud laughter.\"\n\nOnce they finally settled down, Misty asked if there was anything she could do to help.\n\n\"You're helping more than you can know,\" he told her.\n\n\"I am?\" she asked having no idea what that meant.\n\n\"You are,\" he repeated. \"Just seeing you sitting there is the most amazing thing.\"\n\n\"Oh,\" she replied finally understanding. \"In that case, I'm enjoying sitting here and being seen just as much.\" She smiled at him then said, \"The view is pretty nice from here, too, by the way.\"\n\n\"What else is on the menu?\" Misty asked to change the subject.\n\n\"Garden salad and fresh bread,\" he told her. He'd been working on the bread dough for a few minutes and thanks to the fast-rising yeast, it would be ready to put in the oven soon after he finished kneading it. \"I'll chop the salad when we get a little closer to meal time.\"\n\n\"What kind of wine do you want to serve with it?\"\n\n\"I'm thinking white but it might be heavy enough for a ros\u00e9. What do you think?\" he asked.\n\nShe got up and walked toward him. She stood directly in front of him and said, \"I think we got interrupted before.\" Her eyes no sooner met his than she put her hands on his shoulders, stood on her toes, and finished what she'd started before they'd been interrupted. As their lips parted she said, \"Okay, now we can talk about wine.\"\n\nFields entire outlook on life changed in an instant. Suddenly, everything was interesting again. The air was fresher, colors were brighter, the smells from the kitchen were more aromatic, and Misty was even more beautiful than before. They settled on a chardonnay and everything was ready to be put in the oven or on the stove.\n\n\"So this is actually enjoyable to you, huh?\" she said as they sat back down at the table and waited.\n\n\"Define 'this'?\" Fields said with a smile as he reached for her hand.\n\nShe gave it to him then said, \"Not just...this.\" She looked at their hands laced together then said, \"Which is very enjoyable, by the way. But...cooking. You really like that, don't you?\"\n\n\"I do,\" he told her. \"It has just enough complexity to make it challenging, but it's easy enough to make it enjoyable. So, yeah, I really like it.\" She was staring at him again and he decided to go ahead and just say it. \"I really like you too, Misty.\"\n\n\"You just stole my line, Gary,\" she told him without taking her eyes off of him. \"I was just sitting here wondering if you've decided whether or not you'll be staying beyond the three days.\"\n\n\"I can only think of one reason why I'd do that,\" he told her as their fingers gently touched each other.\n\n\"What reason might that be?\" she asked quietly.\n\n\"It would depend on whether or not you'd like me to stay,\" he told her also in a very quiet voice.\n\n\"I would like that very much,\" she replied. \"I would really like you to stay.\"\n\n\"Then it's settled. I'll be staying,\" he told her.\n\nMisty leaned toward him and said, \"I'm very happy to hear you say that.\" This time no one interrupted them and their kiss lasted for several seconds. \"Very...happy,\" she said again.\n\nMisty helped Fields chop and dice the salad after he put the bread in the oven then get the risotto on the stove. As he turned around to reach for a pan, Misty stopped him and kissed him then handed it to him. \"Relationships require teamwork,\" she said with a big smile as she handed it to him.\n\n\"Is that what we have now?\" he asked her. \"A relationship?\"\n\n\"I'd like that,\" she told him. \"If we don't already have one...can we?\"\n\nHe set the pan down then put his arms around her and said, \"I'd like that, too. I'd like that...a lot.\" After he kissed her for quite a while, he looked up just as Barbara was walking away. He hadn't heard her or seen her but it was obvious she'd seen him. Or more to the point\u2014them.\n\n\"Uh-oh,\" he said.\n\n\"What do you mean 'uh-oh'? I'd say more like...wow.\" Misty was referring to the kiss and hadn't seen what Gary'd seen. \"Why uh-oh?\"\n\nHe told her what he'd seen and Misty said, \"Uh-oh. I think she really likes you, Gary. I better go talk to her.\"\n\n\"Good luck,\" he said sincerely. He had no romantic interest in Barbara, but he had even less interest in hurting her in any way. He sat down to rest his leg and shook his head as he thought about going from having no real romantic prospects to having two attractive women interested in him. \"Feast or famine,\" he said out loud to himself.\n\nAbout twenty minutes later, both Misty and Barbara came back downstairs. \n\n\"Gary? I wanted to apologize,\" Barbara said.\n\n\"Why? You haven't done anything wrong,\" he said.\n\n\"Maybe that's true, but I did pretty much make a fool out of myself the way I basically attacked you.\"\n\n\"You didn't attack m....\" he tried to reply.\n\n\"Yes, I did,\" she said interrupting him. \"You're obviously a very handsome man and we don't get a lot of them up this way.\" She forced a smile and said, \"Anyway, I think it's about time for me to get back home.\"\n\n\"Aunt Barbara, please don't go,\" Misty pleaded. \n\n\"Honey, I'm not upset. At least not with you. Or Gary. I'm just a little too embarrassed to keep hanging around. Shame on me for being so...unrestrained and for assuming Mr. Fields would feel...well, anyway, I think it's time I left.\"\n\n\"I wish you wouldn't,\" Misty said again.\n\n\"I think it's best I do, sweetie. You know I love you like my own daughter, but where Gary's concerned, well, three's a crowd.\" She did her best to smile a genuine smile then said, \"Whatever it is that's going on between you, I truly wish you nothing but the best.\" She hugged her niece then told her, \"All I want is for you to be happy, Missy-Miss. So if this is short-term or long-term, if it makes you happy, I'm all for it. Okay?\"\n\n\"Okay,\" Misty said finally believing what her aunt was telling her.\n\nShe picked up the small bag she'd brought with her then said, \"Gary? It was a pleasure meeting you. I hope you can excuse my behavior?\"\n\n\"There's nothing to excuse, Barbara. You're a very attractive woman. I was actually quite flattered.\"\n\n\"Okay, well, I guess I'll see you in a few weeks then?\" she said to Misty.\n\n\"Please,\" her niece replied. \"Come on, I'll walk you out.\"\n\nNeither of them discussed what happened. Gary tended to the evening meal and Misty spent time with her guests as they came downstairs for dinner.\n\n\"So who's this mystery chef?\" the older man asked. \"Can you tell him to hurry it up? I'm starving!\"\n\nHis wife hit him playfully again and the younger woman said, \"Is it Gary?\" pointing into the kitchen.\n\n\"At your service!\" he called back.\n\n\"Something smells heavenly!\" the older woman said. The smell of freshly-baked bread was wafting from the kitchen throughout the entire house. Soon, the guests were treated to a hearty, delicious risotto that was a hit with all of them.\n\n\"The man can cook!\" the honeymooners said after taking a first bite. \"This is delicious!\"\n\n\"Everything was perfect!\" the older woman said as they were sipping a second glass of wine. \"The salad was crisp and fresh. The risotto was just so flavorful and the bread was nothing short of heavenly!\"\n\n\"I think you're hired, Chef Fields,\" Misty said to him.\n\n\"I might just being willing to accept the job...Boss,\" he replied winking at her.\n\n\"I'll have to see what I can come up with to sweeten the deal,\" Misty said winking back.\n\nThe older woman saw Misty wink and her intuition told her something was going on. \"Oh, my. Is there romance blooming at the Maple Leaf Inn?\"\n\nMisty smiled at Gary then told her, \"Maybe so.\"\n\nThere were some raised eyebrows and an, \"Oh-ho!\" from the older woman's husband. \"Things move a lot faster now than in my day,\" he said with a smile to Misty.\n\nMisty smiled back and said, \"Well, a girl can't always wait for the man to make the first move. If she does, he might not realize he should have taken it.\" \n\nShe smiled at Fields who said, \"Hey, I resemble that remark.\" He came over and sat next to her and said, \"Sometimes the man can't help but think the girl's so far out of his league there's no reason to take the first step.\"\n\n\"That just goes to show how wrong some men can be,\" she said before she kissed him in front of everyone.\n\nAlmost in unison, all four of the other guests made another 'oooo' sound followed by their heartfelt congratulations. \"You make such a cute couple!\" the younger woman said.\n\nFeeling a little out of sorts, Fields said, \"Who'd like some more wine?\"\n\nOnce everyone had left the table and everything was cleaned up and dishwasher was running Misty said, \"So I wondering if you might like to um...see my room later this evening.\"\n\nFields looked at her as though he didn't understand. \"Why? Is it different than mine?\" he asked.\n\n\"Yes it is, Mr. Wise Guy,\" she said playfully.\n\n\"Oh? How so?\" he asked as he put his arms around her.\n\n\"I'm not in your room,\" she told him as she kissed him.\n\n\"Excellent point,\" he ceded when the kiss ended.\n\n\"We need to get dessert ready, but after that, I should be pretty much free the rest of the night.\" She smiled then said, \"By 'free the rest of the night' I don't mean you're staying that long in my room, though.\"\n\n\"I never thought it did,\" he told her.\n\n\"Never?\" she teased. \"Are you saying the thought never even crossed your mind?\"\n\n\"I can't honestly say that,\" he answered. \"But I was picturing you possibly spending the night at my place in Charlotte one day in the not-too-distant future.\" \n\n\"Hmmm. I like the sound of that, but I'd need Aunt Barbara to run the inn until I got back.\"\n\n\"Ooooh,\" he said. \"I hope no bridges were burned here today.\"\n\nMisty smiled and said, \"I don't think so. We talked privately for a while in her room and she made it very clear she wasn't at all upset. At you or me, anyway. Maybe a little disappointed she couldn't catch your eye, but not upset.\"\n\n\"Then I suppose all we need to do is decide on when,\" he told her still holding her in his arms.\n\n\"Well, I say the sooner the better.\"\n\n\"I like the way you think,\" he said with a smile. He kissed her again then said, \"And the way you kiss.\"\n\n\"You're not so bad yourself, you know.\"\n\nAfter dessert, Fields followed Misty to her room where they sat and talked until a little after 1am. Both of them knew there was a strong physical attraction between them and that they both shared the effects of a tragic loss. But they also knew they didn't really know one another. \n\nThose first hours of conversation revealed they had many things in common from the so-called 'big-ticket items' like politics and religion to the importance of family to less important things all the way to the trivial. The one big disagreement was ice cream.\n\n\"I don't see how this can work,\" he said. \"You're really a vanilla girl?\"\n\n\"I am,\" she admitted. \"Always have been, always will be.\" She got very serious then said, \"How can you possibly like chocolate better? That's deal-breaker stuff right there, Mister!\"\n\nFields laughed and said, \"I'd say I'm not a 'vanilla kind of guy' but should we ever, you know, be...intimate...you'd see right through me.\"\n\nMisty got up and sat in his lap making sure to sit only on his left leg, then put her arms around his neck. \"Oh, that kind of vanilla. I see.\"\n\n\"Sorry,\" he told her. \"I'd love to claim I'm a 31-Flavors kind of guy in the bedroom, but when you found out your choices were vanilla or French vanilla....\"\n\n\"Mmmm. I love French....\" She kissed him and for the first time offered him her tongue. They French kissed for quite some time before Misty said, \"Kissing.\"\n\nFields smiled and said, \"You may have just made a vanilla lover out of me.\"\n\n\"You mean French vanilla, right?\"\n\n\"Tomayto, tomahto,\" he said with a smile. \n\nHe looked into her eyes and said, \"You are so beautiful, Misty.\"\n\nShe put her hand on his cheek and said, \"And you are so handsome,\" before offering him another helping of French...kissing.\n\nMisty felt his response and said, \"Maybe you should go before I run out of willpower.\"\n\n\"Oh...that,\" he said sheepishly. \"Yeah, it seems to have a mind of its own lately.\"\n\nShe wriggled a bit and said sweetly, \"It feels very nice, by the way. I kind of like the way it thinks.\"\n\nHer sweet laugh made Fields laugh, too. \"You're not just beautiful, you're...amazing. Did you know that?\" he asked rhetorically.\n\n\"Pretty much,\" she said trying not to laugh. She kissed him again then said, \"You make me so happy, Gary. Did you know that?\"\n\nHe wanted to reply with a witty comeback of his own but didn't. \"I'm glad. You make me happy too, Misty. Very happy.\"\n\nAll of a sudden she realized she'd slid over and was sitting on both legs. \"Oh, my goodness! Your leg! Why didn't you say something?\" She jumped and asked, \"Is it okay? Are you okay? I'm so sorry! I totally forgot.\"",
        "Fields slowly extended his injured leg and winced slightly. \"You know what? I did, too. It takes a whole lot of pretty to make a guy forgot something that painful.\"\n\nShe helped him stand up and asked, \"Are you really okay?\"\n\nHe put his arms around her and said, \"I've never felt better in my entire life.\"\n\nMisty put her hands on his chest and then his arms and told him, \"You do feel very good.\"\n\nFields laughed then said, \"This is all happening so fast. And yet it's all so...wonderful.\"\n\n\"I know. It's almost scary,\" she told him.\n\n\"Are you afraid we're moving too fast?\" he asked as he brushed her hair back.\n\n\"Not at all,\" she replied. \"I've sat around waiting for this kind of...opportunity...for a very long time. Now that it's presented itself, I'm not going to squander it.\"\n\n\"Opportunity. I seem to recall someone else who's very important to me use that very word when it comes to finding someone.\"\n\nMisty laid her head in the crook of his neck and said, \"Someone else? Does that mean I'm important to you?\"\n\nHe kissed her cheek and said, \"Yes, it does. You're very important to me, Misty.\"\n\n\"I'm glad,\" she said as she ran her hand along his chest. She looked up at him and said, \"I want to be important to you.\"\n\n\"You are. I promise you you are,\" he said before kissing her goodnight.\n\nThe next morning she joined him for a while longer in the pool as Fields got in a full mile. \n\n\"You've inspired me,\" she told him when she finished a tenth lap. \"I haven't swam this much since high school. I forgot how good it feels.\" They were in the deep end and he was holding onto the side of the pool as she wrapped her arms and legs around him. She pushed against him when 'the thing that had a mind of its own' made its presence known again.\n\n\"Mmmm. That feels really nice,\" she purred as she pushed hard against it.\n\nFields groaned softly as she ground against him. \"Guess what?\" she said. He had no guess so she said, \"Unless someone checks in today, we're going to be all alone here tonight.\"\n\n\"Oh! Both couples are checking out?\"\n\n\"Uh-huh. Right after breakfast.\"\n\n\"And you have no reservations for this evening?\" he asked.\n\n\"Uh-uh,\" she said. \"We're booked solid this weekend but not tonight.\"\n\n\"I see. So...would you maybe like some company?\" he asked as she ground her pussy on his very hard cock.\n\n\"It does get lonely up there by myself,\" she cooed. \"You don't want me to be lonely, do you?\"\n\n\"No. Of course not,\" he told her. \n\nShe pulled herself in as close as possible and ground as hard as she could. \"I want you so bad right now,\" she whispered.\n\nFields groaned as she puled them into the wall pinning his back to it as she grabbed the side with both hands. Both of them were in their bathing suits, but neither of them had had sex in a very long time with Fields's time of abstinence being much longer.\n\nAs she continued grinding, Misty whimpered and said, \"I'm so close to coming.\" She ground furiously the said, \"Cum with me, okay?\"\n\nFields didn't need any more encouragement. He'd been on the verge for several seconds. The moment he felt her stop grinding and hold her pussy in place and just quickly slide push on his shaft, he let go, too. He tried not to grunt too loudly aware they might be watched. Then again, he really didn't care since Misty clearly didn't.\n\n\"Oh, my God!\" she cried softly as she shuddered violently for a few seconds. She moaned softly as the trembling subsided. \"That felt so good,\" she said quietly as he held her while she held them afloat.\n\n\"I believe you've created quite a mess down below,\" he teased.\n\n\"Were we in my room rather than the pool, there wouldn't be any mess to clean up,\" she whispered. \n\n\"Oh, my,\" Fields said. \"You really are amazing.\"\n\n\"You ain't seen nothing yet,\" she said before kissing him then pushing off leaving him reaching for the side of the pool.\n\nShe swam to the opposite side, pulled herself out of the water, then turned and blew him a kiss. Fields smiled and said, \"I can't wait to find out what it is I ain't seen yet.\"\n\nShe grabbed her towel and began drying her hair. Still talking quietly she said, \"Trust me when I say it's going to be worth the wait.\"\n\n\"You're killing me here,\" Fields said as she dried her body off.\n\n\"Not yet,\" she said with a smile. \"That happens tonight. Don't be late!\"\n\n\"It gets very quiet around here when you don't have guests,\" Fields said as they ate another delicious dinner he prepared for just the two of them.\n\n\"I knew it meant we didn't make any money, but I used to love the days when no one was here. It meant I had my house all to myself for a change. I didn't have to share it with other people or pretend to like the ones I didn't care for.\" She finished a bite then said, \"As a teenager, I got sick and tired of the way men flirted with me. I could tell you stories that would curl your hair.\" She smiled then said, \"And you have very nice hair I like just the way it is.\"\n\n\"I'm almost afraid to ask if any of these guys ever...you know.\"\n\n\"A couple of times. Nothing more than kissing me, but when it's unwanted it's unwanted.\"\n\n\"I'm sorry that happened to you.\"\n\n\"Both of them were married and one them had his wife here with him. I guess marriage means different things to different people.\"\n\n\"It means everything to me,\" he told her. \"I can't say I never 'looked' during my marriage, but it never went beyond looking and even the looking stopped before...um...what would you call it? Lusting in my heart?\"\n\nMisty laughed. \"Didn't some president say that once upon a time?\"\n\n\"Uh-huh. Jimmy Carter. He admitted to Playboy magazine to having 'lusted in his heart.' I can honestly say I never did.\" He looked at her and said, \"And I never would.\"\n\n\"Nor would I,\" she told him. \"Otherwise, why get married, right? If I wasn't sure enough about someone to settle down with him\u2014to commit to him\u2014completely and totally\u2014then why get married? That doesn't mean you're blind or that attractive people don't exist. It just means you've made a conscious decision to stop looking...around.\"\n\n\"Falling in love with the right person will do that,\" he said unable to take his eyes off of her.\n\n\"Yes it will,\" she agreed.\n\n\"I have two questions for you,\" he said.\n\n\"Shoot.\"\n\n\"Where did 'Misty' come from?\"\n\nMisty chuckled and said, \"My dad loved Clint Eastwood. I mean loved him!\"\n\n\"As in 'go ahead, make my day' kind of loved?\"\n\n\"Oh, my gosh! I heard that so many times growing up I lost track. Or, 'You feel lucky, punk?' My dad would always pretend to draw his .44 magnum when he said a Clint Eastwood line.\"\n\n\"So it came from Play Misty for Me?\"\n\n\"Yes, indeed,\" she told him. \"I think he liked Jessica Walters, too. He'd just never admit it because my mom would have whacked him.\" She laughed as she pictured the dynamic between them; a dynamic she sorely missed. \"What's the other question?\"\n\n\"Is there any reason we have to wait any longer to go upstairs?\" he asked with a wicked smile.\n\n\"Oooh! I like the way your big head thinks, too. Let's get this stuff cleared off and then get better acquainted.\"\n\n\"Oh! I like the way you think, too!\" he said as he grabbed as much as he could carry and limped into the kitchen.\n\n\"That leg's not gonna slow you down, is it?\" she asked pretending to be extremely worried about it.\n\n\"No worries. I've got a third leg that's big enough to compensate for any loss of function in this one.\"\n\nMisty absolutely burst out laughing. She set her dishes in the sink and said, \"I don't know why that's so funny. I got a pretty good sense for just how big that third leg of yours really is this morning and you're not kidding.\"\n\n\"Seeing is believing,\" he said laughing along with her.\n\n\"Then make me a believer, Brother Fields!\" she said leaving the dishes in the sink and taking his hand instead.\n\nAn hour later, Misty lay beside panting after a second go-'round. \"I believe!\" she told him with a big smile. \"Oh, and I thought you said you were out of practice.\"\n\n\"I am,\" he told her. \"It's been over three years.\"\n\n\"I better get back in shape because if that's out of practice\u2014and your leg is holding you back\u2014I'm dead!\"\n\n\"You gave me a heck of a workout too, you know,\" he told her. \"And where did you learn that thing you did with my balls while you were...you know?\"\n\n\"Blowing you?\" she said as she climbed on top of him. \"You're not afraid to say things like 'blow me', are you, Mr. Fields? You're not the shy type, are you?\" she asked as she kissed her way from his lips to his chest.\n\n\"I told you, I'm true vanilla where making love is concerned.\"\n\nShe looked up at him and said, \"I'll have you eating chocolate fudge in no time.\" Misty realized immediately what she'd just said, but before she could make amends Fields started laughing.\n\n\"I hope not! I'm open to trying all kinds of new things but not...that!\"\n\n\"Agghh! You are so terrible!\" she told him.\n\n\"Hey, that's not what you were saying ten minutes ago.\"\n\n\"That's because you were pushing all my buttons\u2014or at least my love button\u2014in all the right ways.\" She slinked down between his legs and said about his flaccid member, \"Hmm. Looks like I've got my work cut out for me.\"\n\n\"Blow me,\" Fields said causing Misty to laugh before she took him her mouth again to charm the snake. Moments later he was rock hard and she got on top of him. \n\nShe grabbed his cock, pointed it where it needed to go, then just before lowering herself onto it said to him, \"Fuck me!\"\n\nAs he slid back inside her Fields groaned loudly, \"Ohhh, wow! Fuck me!\"\n\nAfter an even longer swim the next morning Misty told him she had to get busy. She still had last night's dishes to run and breakfast to make. \"You take care of the dishes and I'll make breakfast,\" he said as he got out of the pool with her.\n\n\"Are you trying to impress me?\" she asked as she toweled him off.\n\n\"Yes,\" he said very simply.\n\n\"Oh, okay.\" She kissed him and said, \"Well, between that and last night, it's definitely working.\"\n\nThree new couples checked in keeping Misty hopping all day even with Fields doing the cooking. After dinner she told him, \"We make a pretty good team.\"\n\n\"I was just thinking the very same thing.\"\n\nShe'd been putting dishes in the dishwasher then stopped moving. \"What's going on?\" he asked as he came up behind her.\n\n\"Nothing,\" she said unconvincingly.\n\n\"Uh-huh, sure.\" He turned her around and said, \"Tell me.\"\n\nShe was looking into his eyes and hers spoke of sadness. \"I don't want you to go.\"\n\n\"I know. Me either.\"\n\n\"But your life is in Charlotte and mine is here,\" she said as she slipped her arms around his chest and back. \"It's so unfair. I thought I might never find someone I lo...really care about again and then when I finally do, I can't have him.\"\n\nFields held her for a while then said, \"Would you like to?\"\n\n\"Like to?\" she asked repeating his question.\n\n\"Would you like to have me?\" He quickly added, \"And I don't mean just the 'in-bed' kind of having me.\"\n\n\"Of course I would, but I can't just walk away from the inn.\"\n\n\"What if you didn't have to?\" he asked her.\n\n\"You mean sell it? I've been thinking very seriously about it the last couple of days for obvious reasons,\" she told him.\n\n\"Maybe eventually. But what if there was another way to have your inn, at least for a while, anyway, and keep me, too?\"\n\nMisty smiled but didn't laugh at the paraphrase of having one's cake and eating it, too. \"If only,\" she said wistfully. She looked up at him and said, \"Why? Do you have an idea?\"\n\n\"I do,\" he told her.\n\nIt took him less than two minutes to explain it to her but twice as long to convince her he was serious. \n\n\"You would really do that? For me?\" she asked with total incredulity.\n\n\"Yes, but it wouldn't be just for you. It would be for us,\" he said clarifying what he'd told her.\n\n\"But what about Pamela?\" she asked with genuine concern.\n\n\"She's in college and on her own now.\"\n\n\"True but I'm not that much older than her. What's she going to think of me?\"\n\n\"She's going to ask me two simple questions: 'Do you love her and does she make you happy'?\"\n\n\"I see. And...how will you answer her?\" Misty asked, her voice filled with hope.\n\nFields caressed her pretty face and smiled. \"Yes and yes.\"\n\n\"May I please hear you say it?\" she asked just above a whisper.\n\n\"I love you, Misty.\"\n\nHe saw her eyes well up with tears as she pulled him close to kiss him. \"I love you too, Gary. I love you so much.\"\n\nThey spent the night together not only telling but showing how much they loved one another.\n\nMisty did her best not to cry when he left the following morning, but couldn't help it when he drove off. She was drying her eyes as she walked back inside when her phone buzzed. \"I love you!\" Her first text from Gary. Her tears stopped falling and a smile brightened her face. \"I love you, too. Hurry back!\"\n\nFields talked with the broker and other agents at his firm the next day and let them know he was taking an extended leave of absence and turned his pending sales over to a trusted friend. That was the easy part. The more difficult task was calling Pam.\n\n\"Hey! How's things?\" he asked.\n\n\"Good, Dad. This is a big surprise. Is everything okay?\"\n\n\"More than okay,\" he told her. \"I have some news I want to share with you. Can we go to FaceTime?\"\n\n\"Okay,\" she said pensively. Seconds later he saw her beautiful face asking, \"What's going on?\"\n\n\"Remember the advice you gave me? About watching for opportunities?\"\n\n\"Yeeessss,\" she said dragging the word out.\n\n\"Well...I did just that and an opportunity presented itself.\"\n\n\"Annnddd?\" she asked.\n\n\"And...I'm in love, Pam.\"\n\n\"In...love? Dad, how long have you known her? Who is she? What does she want?\"\n\nHe patiently and lovingly answered each of her questions then sent her some pics of himself with Misty.\n\n\"Oh, wow. She is...gorgeous!\" She finished looking then said, \"Um...how old is she?\"\n\n\"She's 28, honey. Is that a problem?\"\n\n\"I guess not. Well, not if you love her and she makes you happy.\"\n\n\"I do and she does, and I can't wait for you to meet her.\"\n\n\"Wow. This is all happening really fast, but as long as you're happy, then...so am I.\"\n\n\"I also have some other news,\" he told her.\n\n\"So you're not selling the house?\" she asked hopefully after he shared his plans with her.\n\n\"No. At least not now. I'm going to move in with Misty and do the cooking and I wanted you to be the first to know that I'm going to ask her to marry me as soon as I get back to Vermont.\"\n\nThere was silence on the other end for a few moments. \"She must be amazing to have stolen your heart like this, Dad.\"\n\n\"She is, honey. Listen, I want you to know I will always, always love your mother. You know that, right? No one can ever take her place.\"\n\nHe saw Pamela fighting off tears as she said, \"I know, but it's really nice to hear you say that.\" She blinked several times then said, \"I'm really happy for you, Dad, and I'm looking forward to meeting her.\"\n\nThe next day Fields packed his car with everything he'd need for the next two months or so and headed north. He left at 4am and drove straight through.\n\nMisty shrieked with joy when he pulled in as the snow that had been falling for several days began falling harder and harder. She helped him bring his things inside then told her about his talk with Pam.\n\n\"So she's okay with this? With me?\"\n\n\"She is,\" he assured her. \"In fact, she's thrilled that I've found someone who loves me and whom I love so much.\"\n\nThe next morning he waited for her to join him in the pool and when they finished swimming he said, \"Give me just a minute, okay?\" He ran upstairs and came straight back down.\n\n\"You know how much I love to swim and you also know how much I love you.\" He laid the big, fluffy towel down, then knelt on it on one knee. He opened the small box to expose a very large diamond and said, \"This place, the Maple Leaf Inn and this pool, will always hold a special place in my heart. This is where I met you and this is where I fell in love with you.\"\n\nMisty's hands were covering her mouth and she was shaking like a leaf as he said, \"Misty Vincent, I love you with all my heart. Will you marry me?\"\n\nShe held out a trembling left hand and watched him slip the ring on her finger. \"Yes, of course I'll marry you, Gary Fields. How could I not want to?\" He stood up and smiled at her before kissing her and telling her again how much he loved her.\n\nOver the course of the next two weeks, the newly-engaged couple developed a plan which included selling the inn and moving to Charlotte where Misty would go back to teaching her beloved Kindergartners and Gary would continue in the real estate business.\n\nThe housing market was on fire and Misty received multiple offers on the inn within days of putting it up for sale. They closed in early December and loaded up a U-Haul truck with all of Misty's belongings. Gary drove the big rig which pulled his car while Misty drove her own behind him.\n\nThey spent another week getting her moved in and disposing of boxes and tons of packing paper and by the time Pamela's first semester was over, Misty was completely settled in and ready to meet her future daughter in law.\n\nGary picked her up at the airport by himself so they could at least have a couple of hours alone and talk anything out that might still be a concern to Pam.\n\n\"No, everything sounds great, Dad. I'm actually really looking forward to meeting her. Do you think she'll like me?\" Pam asked uncharacteristically unsure of herself.\n\n\"She'll love you, honey. Guaranteed.\"\n\nThe chatted about new friends, classes, and a guy Pam especially liked the rest of the way home and both of them were grateful for this opportunity. \n\n\"You ready?\" he asked as he opened the door to their house.\n\nMisty was standing there waiting and as soon as the girls saw each other they were drawn like magnets embracing and telling each other how good it was to finally meet. \n\n\"You're even prettier in person,\" Pamela told her.\n\n\"Me? You're the gorgeous one here,\" Misty told her as she helped her with her things.\n\n\"So...when's the wedding?\" Pam asked at dinner.\n\n\"I'm glad you asked!\" her father replied. \"School gets out in late May so we were thinking about June 14th. Flag Day. How does that sound to you, Pam?\"\n\n\"Perfect. If it works for you, it sounds great!\"\n\nMisty reached out for Pam's hand and said, \"With my mom and dad gone and not having a sister, I don't have a Maid of Honor. My Aunt Barbara will be standing in for my father and giving me away so...I was wondering if you might be willing to be mine.\"\n\n\"Are you serious?\" Pam asked. \"I would be honored to do that.\" She smiled at Misty then looked at her dad and said, \"I see why you love her so much, Dad. She's awesome.\"\n\nMisty found a teaching job almost immediately and went back to work in early January. She had to teach 1st grade, but it turned out to be every bit as rewarding as teaching Kindergarten. \n\nShe and Gary were married the following summer in the Methodist Church he'd occasionally attended over the years. They honeymooned in Hawaii so Misty could finally spend a week on a beautiful beach with white sands and clear water.\n\nShe taught Kindergarten the following year then learned she was pregnant with their first child.\n\n\"Are you sure you want to raise another child?\" she asked when they found out. \"Is starting over okay with you?\" she asked.\n\n\"You're not only my wife, honey. You're my life. We had Pam very early in our lives and I'm still as young as many first-time dads. Besides, I want us to have a family of our own and I know how much you want children.\" He kissed her and said, \"Nothing could make me happier.\"\n\nMisty delivered their baby two weeks late\u2014a healthy, happy, 8-pound boy they named Gary, Junior, and two years later he had a little sister they named after Misty's late mother.",
        "Had Pamela not encouraged her father to watch for opportunities, he might have missed the biggest, most important one of his life. As it turned out, his decision to see New England and stay at a B&B with a large swimming pool forever changed not only his own life, but that of his beautiful young bride, Misty Vincent-Fields."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december",
        "older man",
        "younger woman",
        "may-december romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/bandb-2"
}