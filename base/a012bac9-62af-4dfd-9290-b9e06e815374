{
    "title": "Rock and Water Ch. 09",
    "pages": [
        "This is the second to last installment for Rock and Water. While I'm excited to move on to new projects, I'm already beginning to mourn the end to my first story, and it's characters. Thanks to all who have followed from the beginning, with special thanks to FA_JF and lindseymarsh for their keen eyes. A shout out is deserved to everyone's favorite Brit for his advice on all things England, and educating me that there are, in fact, no ranches there.\n\n***\n\nMaster.\n\nSuch a loaded word. In the most basic terms, it defines one person's authority over another; but in the context of my relationship with Patrick, the use of the word goes so much deeper, and brings such pleasure to us both. It's a word I'd never considered using, even as my interest in bdsm burgeoned. It felt contrived, as if the use of it only confirmed that bedroom games were being played. I still primarily call him Sir, but there are times during our sexual adventures, that nothing less than 'master' will do. At those times, I want to leave him with no doubt about my love, my trust, and my deference to his wicked desires. \n\nThere have been times that we've surprised each other, with how potent and dark our explorations have taken us. We've had some heart to hearts whether they could harm the foundation we're building together, one that will very soon include having Addie back at home, and me working full-time again. For as much as power exchange has begun to creep into our everyday lives, there have been as many occasions where Patrick checks in with me, making sure I have little doubt of his love or respect, along with his commitment to our relationship.\n\nThough, in those moments where I give myself to him, the peace I find in exposing my most base and raw desires to him, trusting him to guide me safely through those dark waters, have been the most sexually charged and freeing of my life.\n\nThese are the thoughts that pass through my Ambien -addled brain at a cruising altitude of 36,000 feet as we cross the country, and soon the Atlantic, to visit Addie in London. It's been three weeks since the pivotal evening that introduced Patrick's desire to be called Master, and my desire to feel owned.\n\nIn that time, very little has changed in our day to day, except that my kitchen is up and functioning again and I've started going back to the office once weekly to begin brainstorming for shows and interviews I'd like to do in September. Our worlds have begun to cross over, friends meeting friends.\n\nWe've gotten together with Gil and Vanessa a few times, and took Johanna and her husband to The Market for dinner one evening. Like teenagers, Johanna less than subtly leaned over during dinner to whisper in my ear, \"OMG...he's hot!\" Of course, it was heard by half the restaurant. Vanessa and Johanna hit it off, and the three of us have met for hikes and drinks on a few occasions.\n\nAs planned, we took Luka to my recording studio, and were both blown away by how much he understood all of the technical aspects of running a radio station. Although I'm sure the topics bored the hell out of him, he insisted on staying to watch a colleague deliver an hour of news.\n\nI feel my eyes closing as I catch one last glance of Patrick asleep beside me, and before I drift a rush of childlike excitement runs through me once again, for my excitement of seeing Addie, and for the two of them finally meeting. While Patrick has become incredibly important to me, and my love for him deeper than any I've held for a man before, Addie will always be my number one.\n\n***\n\nAs soon as we pass through customs and security, we spot Addie and her father, my ex-husband Frank. With just enough time for me to hurl my bags to the ground, she launches herself into my arms. Both men are lost to me as I hold my girl for the first time in almost two months. I try to hold in my tears so as not to embarrass her, but I just can't help it and as I finally move back and hold her at arm's distance away, I see matching tears have wet her cheeks too. We whisper our love, and how much we've missed each other, then return to our tight embrace once again. In the periphery, I see Patrick walk over to Frank and the two shake hands and make introductions. \n\nFinally emerging from our happy bubble, we find the two men standing next to each other, both smiling at the spectacle of our mother-daughter reunion tear-fest. I quickly step forward and give Frank a tight hug. His arm quickly envelopes my waist, treating me to a familiar and warm squeeze.\n\n\"Hi, Frank. It's good to see you.\"\n\nHis warm, brown eyes smile back at me, and I already know everything between us is good. He is still as handsome as I remember; only an inch or two shorter than Patrick's 6'3\", his body is just a bit thicker, his shoulders broader. His dark brown hair has grown longer, curling just above the collar of his button down shirt. The beard that he'd worn for the last few years of our marriage is gone, making him look younger and more relaxed than he has in years.\n\n\"It's good to see you too, Corrine.\"\n\nIn my excitement for Addie to meet Patrick, I hadn't anticipated how it would feel to see Frank again, and I have to admit a small rush goes through me at the easy familiarity there is between us. It's not sexual, but almost like coming home. Some bonds don't break, even if divorce papers declare it so.\n\n\"Thanks for finding a place for us to stay, so close to you two.\"\n\n\"No Problem. My mates are off on holiday for the week and it suited them to have their cat looked after anyway. Addie's decided after all that she'd like to stay with you, so we've been through and set up the extra room.\"\n\nThis is a surprise to me; a very nice one. While Addie had seemed enthusiastic about meeting Patrick, the last she'd told me was that she'd prefer to stay with Frank until Patrick left after a few days to stay with his friends just outside of Bedford.\n\nIt's Addie who breaks the silence, \"Um...Mom?\" I can see she's looking shyly up at Patrick.\n\n\"Oh, of course...,\" I shake my head a bit, still spacey from the long flight. \"Addie, this is Patrick.\" I then turn to Patrick, \"Patrick, this is my girl, Addie. Looks like you've already met Frank.\"\n\nPatrick steps forward to Addie first, extending his hand to shake hers. She looks a bit stricken and takes a step backwards towards Frank, who reflexively puts his hand on her shoulder. Patrick's hand immediately drops, and he stops where he is, giving her the space she needs, but a warm smile crosses his face.\n\n\"Addie, it's so nice to meet you after all this time. Your mom has told me so much about you.\"\n\nIn typical tween fashion, Addie rolls her eyes and groans, burying her face in Frank's arm which has Frank and I chuckling, and Patrick looking totally lost. \"Ughhh. I can only imagine. Mom...what have you told him?\"\n\nI pull her back to me and squeeze her against me. \"Nothing you wouldn't tell him yourself...but I did show him your baby pictures.\"\n\n\"MOM!!\"\n\nPatrick speaks up. \"Seriously though, Addie, you were a pretty cute kid. The pictures were great.\"\n\nShe looks at him warily. \"Uh, sure...whatever you say.\"\n\nHe continues, obviously trying to find some footing with her. \"Your mom tells me you've ridden horses a few times. My friends, just outside of the city, have a few and would love you to come out and ride with us.\"\n\nShe just stares at Patrick a bit, biting on her lower lip and clearly unsure of what to make of him.\n\n\"Um...thanks. I don't know.\" She looks down at the ground, shrugs and walks back over to Frank, who whispers in her ear, causing her to shrug again.\n\nIn two steps I'm in front of her, taking her hands in mine. \"It's okay, hon. I know this is weird for you and it's going to take some time.\"\n\nWhen she looks up her eyes are moist. \"I'm sorry mom. I just...I want to be cool about this but it's just weird that he's here...and dad's here.\" Addie pauses, and before she can stop herself blurts out, \"Shite!\"\n\nAll at the same time, Patrick bursts into laughter, I look at her stunned, and Frank quickly whispers, \"Addie! What did I say about using that word?\"\n\nShe stands up a little taller, and says back to him, \"You said words are just words, and unless they're said in malice that it's all cool...except at school...or in front of grandparents.\"\n\nI just smile and nod. \"I see you're getting an education in English dialect while here.\"\n\nThis earns me another eye role, while Frank buries his head in his hands and Patrick continues to stifle his laughter.\n\nFrank regains his composure and grabs my bag. \"Alright then; let's head to the car park.\"\n\n***\n\nWe arrive at the flat that Frank's friend is loaning us for the week. Once again, Frank grabs my bag, hauling it up the three flights for me, while Patrick carries his own and our carry-on. The master bedroom has been set up for Patrick and me, while a spare room has Addie's suitcase already resting on the bed. \n\nI feel wistful seeing her bag on the small bed, and before I can say anything Patrick walks purposefully into the room and throws his suitcase on the bed.\n\n\"Addie, no reason for you not to spend the nights with your mom; you've been away from each other so long.\"\n\nWith that, he picks up Addie's bag and walks it over to the master bedroom, setting it next to my own where Frank had left it. Addie immediately brightens up and begins to bounce up and down a little, clearly excited by the idea. In the short time since I'd discovered Addie would be staying with us at the flat, I hadn't realized how conflicted I felt about sleeping in a room with Patrick. Suddenly I feel the weight of my anxiety roll off my body, causing me to be as giddy as she is.\n\nI look over her shoulder at Patrick, and mouth a quiet, \"Thank you.\"\n\nA warm smile and slight nod tells me all I need to know.\n\n***\n\nThe next few days are most definitely the most platonic Patrick and I have ever spent together, but also some of the most fun too. Addie, Patrick and I have filled our days with every tourist attraction we could, including a Jack the Ripper tour, a trip to Madame Tussauds, and even taking pictures of ourselves at the Abbey Road crossing. Addie seems more at ease with Patrick outside of the flat, even ribbing him a bit about his mild claustrophobia as we rode the London Eye. He took it in good nature, but even I had to admit I'd never seen him look so pale.\n\nIn the flat, though, she barely mumbles a word to him. Unless he goes off on his own, she buries herself in books. For that reason, Patrick takes many walks \"to explore the neighborhood\" during these days, to allow Addie and I to spend time on our own. He doesn't want to push her into liking him, and I appreciate his restraint.\n\nOn his last night with us, before Patrick leaves to stay with his friends, Frank and his girlfriend take Addie and a friend to a concert. She plans to sleep at the friends, giving Patrick and me our first night alone since arriving in London. Once he leaves, Addie and I will have a few days together to shop and hang out before I go to meet him on the farm. There have been discussions on whether Addie would like to join us out there for the day to go horseback riding, but she's still undecided.\n\nThese have been some of my happiest days in years, and glimmers of hope fill me as I consider a future together as a family. Long days of exploring London, followed by late night girl-talks with Addie, have kept Patrick and I at arm's length since we've arrived. Even when we've been alone, affection has been limited to fleeting kisses and rare embraces. Considering the focus our relationship has had on sex and pleasure, it's reassuring to see how easy we are together during more platonic times. \n\nPatrick seems happy too, but it occurs to me that we've only spent a few days with Addie, and wonder whether he truly understands what life will be like once she's home again. Although there'll be weekends with her grandparents and the occasional sleepover with friends, she's going to be in the house more often than not.\n\n***\n\nAfter dropping Addie off at Frank's house, we stop for some curry, eating out of containers at a local park. We sit in the grass, across from each other, eating mostly in silence. Neither of us have mentioned heading out for the night, which is fine by me as his smoldering looks throughout the meal have my panties damp and my nipples stiffening beneath my summer dress. We leave more than we eat, too impatient to be bothered.\n\nSetting our food aside, Patrick gently pulls me forward into his arms, then guides me back until I'm lying in the grass with him above me, held up by his strong arms as he looks down at me with fire in his eyes.\n\n\"I want you, Corrine...\" He reaches down and runs his slightly calloused thumb over my top lip first, then drags it across the bottom lip of my slightly open mouth. My tongue darts out, making contact with the tip, tasting remnants of the samosa he just ate. I brazenly lean down and trap his thumb, down to the knuckle, between my teeth and lips and suck hard as I look up into his eyes. Heat radiates from his gaze, and a low growl escapes his throat.\n\nOnce I release him, his mouth crashes down onto my own; the full weight of his firm body blankets mine. Lost in our kiss, we fail to notice a group of teenage girls gathered on a wall nearby until their giggles break through our erotic haze. We stand and give a slight bow to the girls, before cleaning up and heading back to the flat.\n\nJust blocks from the flat, I'm surprised as Patrick pulls me into a small market and begins to search the aisles with an obvious mission. I'm only left with more questions when he grabs an electric toothbrush from the shelf, then two boxes of cling wrap, before heading towards the pharmacy section of the store. He slows as we reach treatments for cough and colds, looking keenly at the products until he finds what he's looking for. Vicks Vapor rub.\n\nRealization dawns on me for what he has in mind. My whole body turns soft as heat suffuses through my core and wetness escapes my swelling pussy lips, quickly saturating my panties. I'd previously shared with Patrick that in one of my phone sessions with Robert, he'd instructed me to gently rub tiger balm over the hood of my clit and around my tight, puckered asshole. The tingles and heat that penetrated deep into those erotic tissues ignited sensations that shook me to my core. Patrick had asked me if I'd ever like to try it again and I recall blushing furiously and eagerly nodding my head. That was almost two months ago, and we haven't discussed it again.\n\nJust the thought of playing with menthol again, especially with Patrick, has my whole body buzzing as we pay for our purchases and walk back to the flat. I'm practically trotting with eagerness while he's as calm and contained as ever, although a smile keeps dancing on his features in response to my clear excitement.\n\nAs we take our last steps up to the fourth floor, he jokes, \"You're awfully excited tonight, Corrine. How can you be so sure I don't have a cold coming on and need a little menthol rubbed on my chest and a good night sleep?\"\n\n\"Well then...,\" I say, with feigned sympathy, \"Let's get you straight to bed. Once you're asleep you won't be needing this!\" As soon as we close the door behind us I make a grab for the bag, but before I can reach it he tosses it on the couch and with little effort pins me against the wall; his hands capturing my forearms on either side of my face. His touch is firm, but not rough in the least. His blue eyes shine down on me. My gaze fixates on his lips. Unconsciously, my own tongue travels along my lower lip, moistening it in anticipation.\n\n\"Sir?\"\n\n\"Yes, sweetheart?\"\n\n\"I've missed this. I've missed you.\"\n\nAn undefinable emotion sweeps over his face before he folds me into his arms, his head leaning onto my own.\n\n\"I've missed being close to you too, Corrine, but I have to say these past days with Addie have meant the world to me. She's absolutely a killer girl...just like her mom. Funny, sweet, a bit nerdy.\" He shakes his head slowly, and sighs. \"I hope I've made a good impression...I hope she's okay with this.\"\n\nI run my fingers through his hair, then gently down his trimmed beard. \"I think she is. It's just going to take some time. These are hard years for her, especially with Frank and I divorced; but it's been long enough now that she's mostly accepted it. It'll just be a matter of whether she can handle sharing me once we get home.\"\n\n\"I'm in this for the long-haul...I hope you know that.\" He's looking down on me with a sincerity that makes my heart explode.\n\nI push myself up on to tip-toes and graze my lips against his.\n\n\"I know that, Patrick. I'm with you there.\"\n\nHe takes a deep breath and lets it out slowly. Standing up, he takes a step back, his hands on my shoulders. His voice deepens; the tone more commanding.\n\n\"Okay then, sweetheart...are you going to be a good girl for me tonight, or do you need a reminder of what happens when you're naughty?\"\n\n\"Oh, no Sir...I mean, yes. I'll be good!\"\n\nMy eyes flit over once again to the innocuous bag sitting on the couch containing the recipe for my torture and my pleasure tonight.\n\nHis gaze follows mine to the plain brown sack, then taking my hand, he leads me over to the couch and we sit on either side of the bag. He doesn't make a move to open it.\n\nHis voice startles me. It's warm, deep, and pensive. \"It's wonderful how for most of the population, the items that line the shelves of markets and pharmacies are just what they seem to be at face value; never would they imagine other possible uses. Aren't you lucky to have a boyfriend who recognizes these items for their other potentials?\"\n\n\"You're the kinky MacGyver!\" I blurt out.\n\nPatrick bursts out in laughter, failing in his attempt to issue me a stern look.\n\nHe reaches forward and secures my chin between his thumb and forefinger, catching my attention and sending a rush of excitement through me. In a cautioning voice that belies his clear amusement, he says, \"Shush, naughty girl...\"\n\nHe continues. \"But you're like me, aren't you? When you see clothes hanging by clothespins in neighbor's yards, you blush when you remember what those clips feel like pinching your most intimate flesh. When you see long, thick vegetables at the market, you ponder how they'd feel, imagining them in all three of your holes.\" \n\nAs he talks, my skin begins to prickle and my face and neck begin to flush.\n\n\"Lastly, Corrine, I've seen how your body responds when I pull my belt out of my pants, even on nights we aren't playing.\"\n\nMy breath catches. He knows me so well. He could be miles away and all I have to do is imagine his hand on his belt, slowly pulling it from the belt loops, and my clit tingles.\n\n\"Which leads us to tonight, when you saw me take the Vicks from the shelf; you immediately knew what I had in mind. It made my cock hard to hear your breath quicken...to see that little shiver go through your sweet body.\"\n\nA blush travels down my body, caressing my skin in heat. I look back to his eyes, pleading with my own for him to touch me. Pushing the bag off the couch, his strong hands are on my hips, pulling me up and over so I'm straddling his thighs, facing him.\n\nPassive at first, he lets me lead the kiss we started in the park. My tongue penetrates his lips; touching the tip of his before slipping in, letting our tongues caress each other in an erotic dance. My mind begins to slip into that soft, familiar space deep inside, where all else but sensation and submission to Patrick cease to exist.\n\nI break from the kiss to look at him. A calm intensity transforms his features; a tethered strength emanates where from moments before tenderness had prevailed.\n\nI can also feel his now semi-rigid cock pressing against my mound, and I begin to rock my hips in a slow rhythm. The skirt of my dress has ridden above my hips, and my saturated panties are rough against my pussy lips and clit. I begin to grind hard on his cock, causing the crotch of my cotton panties to bunch and push between my greedy lips. ",
        "We both let go long denied groans of pleasure. Desperation grows inside of me; I'm hungry for his cock in a way that pushes my own needs down. All I want is to please him, to show him how much this week together has meant to me.\n\n\"Please sir, I need to feel your cock...to see it...to taste it.\"\n\n\"Ah, fuck, Corrine. My sweet slut...suck my cock, baby. I've got a long night planned for you, and if I don't release my load soon I'll never be able to focus on all of the delicious tortures I've planned for you tonight. Make me come, baby.\"\n\nNo need to be asked twice! I jump off his lap and undo his belt, button and zipper. In one motion his hips are up, and he's pushing his shorts and boxers down to his ankles. His knees spread, allowing me access to his cock and balls. Crouched on my knees on the couch, I approach him from his side. I slip both of my hands between his legs, one cupping his very full and sensitive scrotum, the other takes his hardening cock by the base, guiding it to my lips.\n\nI begin by stroking his cock from the base upwards, then down again. My hand is firm and snug around his hard length, and I can feel every ridge and vein beneath the velvety skin. My mouth becomes increasingly wet, anticipating his taste; lowering my mouth to just above the crown without touching it, I open my lips and allow the wetness to drip onto and down the head of his cock.\n\nOnce my saliva is glistening on the dark and engorged flesh, I purse my lips and begin to blow gently. Patrick throws his head back with an aching moan, as his cock pulses beneath my hand. His balls twitch and pull closer to his body in reflex, but my hand there begins to gently squeeze and massage them, coaxing them back again. I continue to blow cool air down his length, still cradling the base firmly in my other hand. His cock is now rigid in my grasp; long, thick, and absolutely sexy as hell. Precum beads at the slit before dripping downwards.\n\nJust before I lower my tongue to taste one glistening pearl as it forms, his hand reaches down and grasps my scalp, pulling my head back so I can look into his fiery eyes. \"Okay now, baby, warm me up with that mouth of yours.\"\n\nMy eyes still on his, I lower my head down, over his cock, until my lips contact my fisted hand near the base. I hear Patrick let out his breath in a long, slow release as his legs relax and spread a little bit more. His hand is tight in my scalp, causing prickles to race down my neck, straight to my clit. Although his grip is firm, I control the pace and depth of the penetration, for now anyway. My nipples are turgid peaks, rubbing against the fabric of my dress with each bob of my head.\n\nHe releases my hair, moving his hand slowly down my back. I feel him gather the material of my dress at a leisurely pace, until it bunches just above the small of my back. His hand begins to caress my ass cheeks, just barely covered by my cotton panties. Strong fingers grasp the material through both leg-holes as he clenches the flimsy material together until it's no thicker than a cord, then pulls it snuggly between the cheeks of my ass. Reaching below my belly, he does the same to the front of my panties, pulling it tightly between my cunt lips and over my swollen and straining clit, making me groan and wiggle.\n\nAs I begin to suck him in earnest, he begins to alternate between slapping my ass cheeks and pulling tightly on my soaking panties; each tug cutting between my sensitive lips and mashing my clit against my pelvic bone. Pain and pleasure combine once again and a vortex of pleasure begins to build within me.\n\nI push my hand further between his legs, using two fingers to massage firmly just behind his scrotum. His cock jerks and a surge of precum leaks into my mouth, letting me know his pleasure with my efforts. I let go of the base of his cock, allowing my lips to push downwards until I feel coarse hair tickle my nose and lips. The thick head of his cock pushes and opens my throat, again and again. My chokes and gags fill the air, but we both know I enjoy this almost as much as he does. The sounds and the mess I make I my attempts to open my throat to him turn us both on. They are the sounds of submission.\n\nMy fingers press even further back, in an act I've never attempted before, and I press two of them just over his own tight hole.\n\n\"Ah, Corrine!\" He yells out, but doesn't stop me. I know my fingers are dry, and I can't attempt to penetrate him, but I resume the rhythmic massage there that I had started on his perineum and I feel him shift his hips, allowing me to continue. Knowing how much ass play brings me pleasure, I've wanted to do the same for him for a while now, but felt too shy to broach the topic, even though he knows all of my secrets and desires.\n\nGasps and low growls escape him as his orgasm builds. His hand continues to spank my ass, but the rhythm and strength of each slap wanes, until it stops and his hand is back in my hair, guiding my mouth in just the way he needs to get off. His hips rise to meet my lips in quick jerks, before a flood of cum surges into my mouth and down my throat. I swallow as quickly as I can, but feel some leak through my lips and onto him.\n\nPatrick pulls my head up and away from his now overly sensitive cock. I smile up at him, and before I can use my arm to wipe my chin dry, he pulls me forward into a passionate and hard kiss. I know he can taste himself on my lips, and love that it doesn't deter him. I find it incredibly sexy, as he does when I taste myself on his lips. We both like our sex dirty and raw; to have our senses filled and overflowing with each other.\n\nWhen he becomes less sensitive, I use my tongue to clean him dry before he lifts his boxers and shorts up once again. I notice the belt remains off.\n\nHis eyes lock onto mine, and with one word my body begins to buzz with anticipation.\n\n\"Strip.\"\n\nAs I toss my dress on the couch, and pull my sticky, drenched panties from between swollen pussy lips, I watch as he grabs the bag, then moves over to small open kitchen. He pulls out one of the tall bar stools from the kitchen bar counter that we've been eating our meals from. As is the rest of the flat, the stool is cross of modern and contemporary; made of white finely polished wood with bright orange leather padded backs. The corners are rounded, with no sharp edges. Setting the bag on the counter, he removes its contents; first the Vicks, then the electric tooth brush, and finally the two boxes of cling wrap.\n\n\"Come here, Corrine. Sit.\" His voice penetrates me on so many levels, causing delicious changes to my body, and acute focus of my mind.\n\n\"Yes, sir.\"\n\nMy feet move of their own volition until I reach the barstool, then half jump, half push myself my hands, up onto the chair. My bare ass makes contact with the cool wood. Patrick directs me to scoot back, until my back makes contact with the soft leather of the chair.\n\n\"Sit up straight, arms crossed at the wrist behind the chair, legs spread and over the sides. See if you can line up your ankles with the front posts of the stool. There you go, baby, that's just perfect. Now tilt your hips forward, just a touch. Let's make sure I have full access to that needy cunt.\"\n\nAs I'm following his directions, I'm watching as he casually takes a roll of the cling wrap out of its box and walks behind me. I hear the tell-tale sound of plastic wrap being pulled from its roll, then feel as it is succinctly and evenly wrapped around my torso, including my wrists and lower arms that are still behind me. He's careful to not allow my shoulders to be strained, or my arms to be pulled too tightly together, but the effect is incredibly restricting. The wrap, which started just above my navel, extends to just below my breasts. I take a deep breath, and note that my breathing is not restricted in the least, and the moment of panic that threatened to seep in quickly dissipates.\n\nMy breasts sag just a bit over the upper edge of the plastic, and I can feel droplets of sweat develop between my sensitive flesh and the binding wrap that confines me.\n\n\"Are you okay, Corrine? Are you comfortable?\" I can see both concern and lust dueling in his eyes.\n\n\"Oh, sir. It feels incredible... Yes, I'm okay. Please go on.\" The plastic against my skin feels tight and smooth...so much more confining than the rope we've used in the past.\n\n\"I have scissors right here. Just say the word, any word, and the wrap will be off of you immediately.\"\n\nI see that Patrick had pulled the kitchen scissors out of the wood block they'd been kept in, and their proximity makes me feel even more at ease; more able to let go to his control and my desires.\n\nI nod, and say, \"Thank you sir.\"\n\nHe flashes me a quick smile, before continuing with the wrap, this time around the calf and ankle of my left leg, securing it to the corresponding front leg of the chair. He finishes off the roll and then repeats the same action on my right leg with the second roll. He puts the remaining cling wrap back into its box and puts it in the utility drawer for the flat owner's future use.\n\nIn two long steps he's standing in front of me. He stops and just stares for a bit; emotions, both tender and carnal, alight his face.\n\n\"You look beautiful like that, Corrine. Your flesh under the clear wrap...so pale and naked...your exposed skin with just a hint of flush. It's fucking hot as hell.\"\n\nAs an aside, he quickly adds, \"...and it's a damn good thing I've come already, because if I hadn't I'd probably explode inside of my shorts right now.\"\n\nMy giggles break through the nerves that have been creeping in as I wonder, just what does he have planned for me?\n\nWith one more step he's between my legs, pressed against the front of the chair. His eyes caress my face, arms, and chest, only to be followed by his touch.\n\nFingertips brush wisps of my hair behind my ears, sending goose bumps down my neck. They trace each eyebrow before blazing a sensuous trail across my cheek and over my lips. His gentle touch is igniting a much more forceful response within me, as tremors begin to shake my body with each breath. Two fingers push my chin up and to the side, exposing my pale neck to his touch. This time it's his nails that I feel tracing from the underside of my chin to the hollow of my throat; two fingers return just above and to the left, feeling my bounding pulse beneath them. This makes him smile.\n\nWith just the lightest of touch, both hands now continue a path of tender torment across my shoulders, over my breasts, nipples and plastic covered torso. Squatting on his powerful legs just in front of me, his hands run over the tops of my thighs and down my calves. He uses the backs of his hands and nails to trace up and down the sensitive skin on the insides of my limbs, each time getting closer to my exposed and swollen pussy. I feel the puffy lips spread for him, as droplets of moisture collect on the chair below. If I could, I would thrust my hips towards his touch, but the wrapping prohibits even the slightest of movements.\n\nI look down on myself, and can see my swollen clit protruding from its hood, begging to be touched, begging for relief, but there's none to be had. My head is swooning as he stands and walks back to the couch, returning with his belt.\n\n\"Show me you can turn your head side to side.\"\n\nWithout thought, I do as he asks. \n\n\"I've never gagged you before, Corrine. I'd like to tonight. I want to see your mouth stretched by my belt. You won't have any trouble breathing around it. It's also just fine if you say no and we'll continue what we've started.\" He places a hand on my arm, looking in my eyes for any signs of distress. \"Answer me with words, please.\"\n\n\"Yes...gag me, sir.\"\n\nGiving him my voice only deepens the lovely, submissive headspace that I'm floating in. Like layers of an onion, it's one more level of control that I'm offering him. Ultimately, I know that a few shakes of my head will return all control back to me, which is comforting.\n\nFrom behind me, the belt is placed in my mouth and I can feel and hear as Patrick cinches the strap through the buckle until my lips are stretched tightly but not painfully. When he's done, the slack of the belt falls behind my neck and then down beyond the back of the chair.\n\nBack in front of me, he commands, \"Shake your head three times...back and forth.\"\n\nOnce again, I do as he asks. He sees that I'm able to, and gives a quick nod and wink.\n\n\"Okay...those three shakes are your safeword. If at any time anything I'm doing to you is causing you any level of pain, especially the menthol, you need to shake your head and let me know.\"\n\n\"Ye..thur.\" I try to talk before I remember the belt, which clearly amuses him and makes me blush furiously. A little drool escapes the corner of my mouth.\n\n\"So fucking sexy...\" He uses his thumb to smear my drool across my chin.\n\nHe reaches towards the counter, and grabs, then opens the jar of Vicks. So much more than just a smell, it's a sensation. Tingles and tickles flood my nose and sinuses as he approaches. He runs his finger through the untouched ointment, collecting a large dollop on his fingertip. He rubs some first on one, and then the other areola and nipple. I don't feel anything at first, but I rapidly suck in air as the cool heat penetrates deep into the flesh of my breasts. We watch as my nipples elongate and the areolas pebble beneath the sheen of goo.\n\nBehind the belt, I begin to emit small gasps as a fire ignites inside of me. The initial intensity wanes, but the stimulation continues to breathe fire into my chest. My breasts feel heavy and swollen, aching to be squeezed and touched. I've never been able to come from stimulation of my breasts alone, but in this moment I'm convinced I could if he would just damn well touch them. I plead with my eyes and jiggle them for him, attempting to coax him into action. I'm received with a smile and a shake of his head.\n\n\"Oh, Corrine...it's going to be a long night for you.\" He looks almost apologetic for what he has planned for me, but overriding any compassion he may hold for the moment is a look of excitement and maddening control, and I know that no truer words have ever been said.\n\nI inhale deeply; the smell of my excitement mingles with the menthol as my juices continue to pool between my legs and onto the chair. As if he is just sensing it himself, a low growl escapes Patrick's chest as he squats down once more, pressing his mouth intimately between my wide-spread legs. Using the flat of his tongue, in one long, fluid stroke he licks from the bottom of my open pussy, deep between the swollen folds, before raking across my very erect clit. My body begins to involuntarily spasm and tremble from the intensity. Repeating this motion over and over again, it's clear he is enjoying cleaning every last drop of my excitement, although his actions are only succeeding in creating more.\n\nBehind the belt, desperate groans and gasps flow freely from my lips. My head is thrown back, eyes closed, as I absorb the sensations careening through my body. I force myself to open them, and look down just in time to see his tongue lap at my clit. This vision alone nearly sends me over the edge. I struggle in my restraints, not in attempt to set myself free, but to enjoy the sensation of being completely bound and helpless.\n\n\"Patrick...sir...please!\" I beg. Although is comes out as \"Hathrick...thur...hease!\"\n\nHe pulls back, the look on his face raw. Primal. My heart explodes from the stark desire in his eyes.\n\n\"No words, love... Although you sound pretty adorable with my belt in your mouth.\" My face burns once again from hearing the nonsensical words instead of my usually radio-ready voice.\n\n\"Do you want to come, Corrine?\"\n\nI nod eagerly. Too eagerly.\n\n\"I think not...\"\n\nMy heart deflates.\n\n\"...yet.\"\n\nMy heart beats once again, and even faster as I see him reach for the Vicks. Scooping a generous dollop onto his forefinger, he looks into my eyes as he approaches, until his gaze slowly shifts until it's locked on to the pink and puffy folds of my pussy. Squatting down once again, with almost clinical expertise he uses one hand to stretch my outer lips, exposing my pulsing clit and inner labia. In a conversational tone, he talks to me as he proceeds.\n\n\"Vulnerability only enhances your beauty, Corrine. I know how strong you are... how competent. That you willingly release that power to me is such an honor. That you allow me to mark you, to tease your body...to torture it...fills me with such pride and love for you.\" He pauses to look up at me, before continuing on.\n\n\"It also turns me on to no end, and brings out some pretty heady sadistic tendencies. I confess that I love to watch you squirm as I edge you, to see you on the brink of madness as your need to orgasm passes beyond the point of pleasure. My cock throbs when I hear you gasp with each slap of my hand against your bare ass, or whip of the flogger. I watch with amazement and admiration that you do this for me. And tonight, at your invitation, I get to watch you as the heat and power of the Vicks works deep into your fat, beautiful clit.\"\n\nMy eyes widen and my moans fall silent as I watch his finger approach my most sensitive spot.\n\nHe starts by rubbing his ointment covered finger on top of the hood of my clit, then on either side. He's avoiding the protruding, exposed head, concentrating on all of the surrounding skin. At first I feel nothing, except the pleasure of his touch, but then it hits, and when it does, the intensity ratchets up insanely quickly. Sensation that is almost orgasmic-like on its own vibrates from my clit deep inside. It almost feels like I have to pee, my whole pelvis sings as it tingles. There's no pain, only intense and pure pleasure as my hips squirm and buck as best they can. Bypassing the sensitive skin of my pussy, I feel him reach between my ass cheeks and the chair, feeling the finger wiggle around the ring of my asshole, and just barely penetrating it before he slides his hand out.\n\nMy eyes close as I try to control my breathing. Wave after wave of electric pulses course through me but keep me just at the edge. Without his touch, any touch, there is no way for me to crash over. I ride the crest as long as I can, my mind empty but for the amazing pleasure that Patrick has launched me into. Just when I think I can't go on without coming, I hear his voice, thick with lust.\n\n\"Open your eyes, Corrine. Look at me.\"\n\nAs I do, what I see causes my jaw to slacken around the belt. He's holding the electric toothbrush in his hand.\n\nOf all of the items he bought tonight, this is the one I hadn't considered, not even for a moment. I can't say why, I just didn't. But now that I see it in front of me, it's clear my torment is far from over.\n\n\"Answer me honestly...it's all good either way. Is the Vicks okay? Too intense? Do you want me to wash it off before we go on?\"\n\nI vehemently shake my head, the hair that has escaped the confines of the belt sweeping over my eyes.\n\nHe nods, acknowledging that I'm good, and turns on the toothbrush.\n\nIt looks so benign, but when the hum of its vibrations fills the air, my already hypersensitive body goes on high-alert. He steps in front of me, lowering the device to the side of my left breast. The first touch makes me jump and squeal, but as he gently runs the bristles over the expanse of pale flesh my body becomes accustomed to the intensity and I press against my bindings to encourage deeper contact.\n\nHe follows a similar pattern on my right breast; under...over...side to side, avoiding my areola and nipple. I sigh deeply as waves of heat resonate from my chest to my pussy and back again. Agonizingly slow, he finally trails the bristles over my right areola and nipple. Already hard and distended from the menthol, which at this point has faded in intensity, I can feel each bristle as it lightly scratches the surface of these most sensitive areas.",
        "\"Aaaahhhhh...,\" is all I can say when he moves back to my left nipple. He spends what feels like an hour, but in actuality is more likely five minutes going back and forth between each breast, leaving me in almost a hypnotic state.\n\nAlthough he was never rough, I look down at my heaving chest and see my breasts are flushed pink, with the occasional fine scratch etched into the usually pale skin.\n\nFor just a brief moment, Patrick turns off the toothbrush, removes the belt from my mouth and hurriedly takes off all of his clothing. The sight of his body only pushes me further into that placid zone where endorphins swim through my brain and my body is alight with pleasure. His rock hard cock bobs between his legs, its veins bulge prominently and the head is crimson with excitement. Precum has formed, creating a glistening sheen.\n\nRivulets of sweat gather between my torso and plastic wrap; my arms, shoulders and limbs are strained, which only serves to amplify both the pleasure and duress within me that are feeding off of each other.\n\nPicking up the toothbrush again, his warm voice breaks through my haze.\n\n\"Alright, sweetheart. I can see you're buzzing in a sweet zone right now. This is going to get pretty intense, very quickly. I want you to hold off as long as you can...ride the sensation...feel it all. When you're ready to come, just let it all go. Can you try that for me?\"\n\nMy voice, cut off to me while gagged by his belt, sounds rough and filled with need.\n\n\"Y...yes, sir. Oh, please sir, please my master.\"\n\nPatrick's eyes blaze in response to my words. He takes his cock in his hand that isn't holding the toothbrush, and smears his precum down its length. He strokes his powerful hand up and down the shaft and head for a few strokes before releasing it with a growl.\n\n\"I'm telling you now, my girl, as soon as you come I'm cutting you out of your bondage and I'm going to fuck you hard.\"\n\nWith that, he turns on the toothbrush, spreads my outer cunt lips once again, and touches it to my clit. This time the initial contact is with the back of the toothbrush, but the rapid vibrations very quickly have me gasping and trembling at his touch. The vibrations, on top of the lingering heat from the Vicks, cut deep inside of me, through my pelvis, deep to my g-spot.\n\n\"Oh fuck oh fuck oh fuck...\" I whisper, as my juices flood the chair.\n\n\"Hold on, baby...hold it back.\"\n\n\"Ungh...\" I'm bucking and groaning, writhing with pleasure, becoming almost fearful of the orgasm I'm trying to stave off. Tears form in the corners of my eyes, and he leans down to kiss them away.\n\nHe flips the toothbrush around, the sharp bristles coming in contact with the hood of my clit. For \"soft\" bristles, they feel rough and sharp. He gently rubs the brush up and down the hood, dragging the flesh with it exciting the erect tissue underneath. Palm side up, two fingers enter my cunt, my swollen walls squeeze in on them. His fingertips make contact with my g-spot, pushing firmly and rubbing in a controlled repetitive pattern.\n\n\"Wow! I can feel those vibrations radiate straight through my fingertips...that's amazing power.\"\n\n\"Uh, huh...\" is all I can respond with as my orgasm grows like a helium balloon about to pop. Pressure builds within me, reaching every corner of my body until I can't hold back any longer. An explosion of pleasure and light crashes through me; I barely notice that he's turned off the toothbrush and put it aside. He continues to fuck his fingers in and out of my pussy, milking every last sensation from my body.\n\nMy head falls forward, as I slump in my bindings. My breath is coming in short pants, not from being restricted, but from the marathon I'd just endured. I'm vaguely aware that he is carefully cutting through the plastic; limbs first, then my torso. Painful prickles jerk me back as my arms and legs are allowed to move once again. Patrick massages each limb individually with strong fingers, until normal circulation returns.\n\n\"All good?\" He asks, tilting my head upwards to look into my glassy eyes.\n\n\"So good, sir.\" I say sleepily.\n\n\"Okay, sweet girl. This is going to be fast and rough.\"\n\nIn one sweeping motion, he picks me up from the chair, carrying me in his arms before laying me down on my back, on the bed. On his knees before me, my legs are pushed back and my ankles up over his shoulders; he drives into my cunt in one fluid thrust and begins to fuck me as he promised. Hard, fast, and deep. His balls slap my ass with each thrust. While I know my body is incapable of another orgasm, the feeling of his cock inside of me, fitting so perfectly, rubbing just the right way, currents of pleasure continue to thrill my body.\n\n\"Ah, Corrine. Fuck! This feels so fucking good. You are so tight, baby...\"\n\nWords of raw lust continue to pass his lips; his eyes are clenched shut, his lips parted. Intense concentration dominates his features until his eyes shoot open look down into mine as his orgasm sweeps through his body. His hips jerk against my flesh, as cum floods my core.\n\nHe collapses next to me, pulling me close so my head rests on his chest. Lazy fingers trail a pattern across my back as we both recover. The cat, who has chosen to remain hidden for the majority of our trip decides in this moment it's time to be social, jumps up on the bed and curls up just behind my back purring loudly. The heat is almost unbearable but I don't have the heart to move him.\n\n\"Patrick?\"\n\n\"Hmmm?\" He replies, sleepily.\n\n\"Please make sure to pack that toothbrush home.\"\n\n\"Looking after your dental hygiene, are we?\"\n\n\"Mm, hmm. Something like that.\"\n\n***\n\nPatrick's friends Tyson and Alexandra, or Alex as she prefers to be called, come to the city to pick him up the next afternoon. We'd spent the last few hours with Addie, and she's decided after all to visit the farm on the day I'm to go out there. Frank and his girlfriend, Carrie, offer to drop the two of us off in the morning, and pick up Addie at the end of the day. I'll be staying on for our last days of vacation until it's time to head home.\n\nThe next few days with Addie are a whirlwind of shopping, watching silly summer movies, and just hanging out. I won't say it's been all easy; preteen hormones would never allow for that, but overall we make the most of our time together. It's clear she enjoys having me all to herself, but she seems to understand that Patrick and I are involved now, and that we plan to stay together and develop our relationship.\n\nShe asks some good questions, including if he'll be sleeping at the house with us. I tell her in time, probably so, but not straight away after she comes home. She seems satisfied with that answer, but she then gets a questioning expression on her face, and looks down at her fingernails shyly.\n\n\"Do you love him, Mom?\"\n\nI nod my head. \"I do, Addie...very much.\"\n\nShe nods her head, and is quiet for a moment.\n\n\"I think Dad loves Carrie.\"\n\nShe peeks her eyes up to mine through her eyelashes, looking to see how I feel about this news.\n\n\"That's good honey. I'm really happy for him. While I don't have romantic feelings for your father any more, I'll never stop caring for his happiness and welfare.\"\n\nA flash of relief passes through her eyes, and I realize how much worry she's carried within herself about Frank and I, and our happiness. I fold her into my arms.\n\n\"Ah, honey, your heart is bigger than any I know.\"\n\n***\n\nWe arrive at Tyson and Alex's farm in mid-morning, just in time for a huge brunch spread that they've prepared for us. It's so good to see Patrick, but we curtail our enthusiasm a little for Addie's sake. The plan for the day is for the three of us to ride horses through fields and trails, our destination a sheep farm owned by some of their friends. Once there, we'd sample some cheeses and tour the ranch before heading back. Tyson and Alex plan to drive there and meet us. The ride itself shouldn't take much more than an hour each way, unless we stop to take in some sights.\n\nSadly, the best laid plans never turn out as one hopes, and it turns out one of the horses has thrown a shoe, leaving only two to ride. Patrick is a much stronger rider than I am, and knows the area well from previous visits, so it's decided that he and Addie will go alone. She's so wrapped up in excitement that it doesn't seem to faze her much that it will just be the two of them.\n\nIt's odd to watch them ride off together, but I can see her chatting away happily until I lose sight of them over the ridge. Tyson, Alex, and I drive to their friend's farm, getting there only twenty minutes before the riders should arrive. Twenty becomes forty, and my nerves begin to rattle a bit; forty becomes an hour and I'm pacing as Tyson and Alex attempt to calm me down when I realize we have no way of contacting them. Alex makes a call to the one other farm they may have passed through, and is told that they had been seen, but over an hour ago.\n\nJust as their friends begin to saddle up their own horses, ready to hit the trail in search of Patrick and Addie, a single silhouette of a horse can be seen in the distance. We all run into the field, and can quickly see that the horse is carrying two riders. Addie is riding in front of Patrick, fabric from his flannel shirt has been made into a make-shift sling and her arm is being held snug against her body. Her face is smeared from old tears, and remnants of leaves are in her hair and on her clothes. Despite all of this she actually has a smile on her face.\n\nPatrick, on the other hand, looks like he's aged five years since I saw him this morning.\n\n\"Addie!! What happened?\"\n\n\"I think I broke my arm, mom!\"\n\nShe shouts this with almost glee in her voice, and I realize that she probably has some wicked adrenaline running through her; the world's best pain-killer.\n\nWe get them back to the house, then onto Bedford Hospital. Addie is talking a mile a minute, about a tree branch that fell and spooked her horse, causing it to gallop down a trail, too narrow for anything but a walk or trot. She explains how she lost her reins and stirrups, and how she was holding on to her horse's neck as best as she could. She flashes a smile to Patrick, and essentially calls him her hero for galloping just behind her, coaching her to hold tight and stay calm. He'd hoped for an opening in the trail, but before they could reach it Addie had fallen off, and fallen hard.\n\nPatrick takes over the story, still looking a bit stricken, and describes how she laid there motionless at first, not responding to his shouts. Her helmet had remained on, for which he was thankful. He jumped off and secured his horse, then ran to where she laid on her side, her right arm under her body. By then she was groaning; tears started when the shock wore off and her right lower arm began to scream with pain. He checked her over before moving her, concerned for a large bump that was forming on her forehead, and quickly assessed that her arm was likely broken. He was able to sit her up, lean up against a tree and have her rest her back against him, cradling and soothing her until her tears and trembles slowed.\n\nHe checked her speech for any slurring, checked her eyes for any changes to her pupils, and crossed his fingers that her head was truly okay. Ripping off his flannel he was able to tear it into a sling, which helped support her arm until they could find help. He was able to get her onto the horse, then himself, and had the horse walk the rest of the way in an attempt to jostle her the least.\n\nDoctors at the hospital examine her thoroughly, and while they agree that there are no clear signs of a concussion, they elect to keep her there for observation long after the cast on her arm has set. Alex stays with us at the hospital, while Tyson goes by horse to search for the other missing horse, which ended up finding its way home by the time he gets there.\n\nFrank and Carrie arrive in a flurry after we were able to reach them. The concern for Addie that I see shining in Carrie's eyes means the world to me. Frank extends his gratitude to Patrick for his care of Addie. Patrick, for his part, is still looking grim and remaining pretty quiet. I see him watching Addie intently more than once, and can see he is still feeling responsible for her despite the rest of our presence, not to mention the hospital staff.\n\nI want to talk to him, but know there will be time for that later and don't want to leave Addie's side. By eight o'clock that evening the doctors feel confident that Addie is fine to be discharged from the hospital, but give a long list of symptoms to watch for. As planned, she goes back to London with her father and Carrie. It's especially hard to say goodbye to her now, but we now plan to go back to London a day prior to our flight to have a little more time together. I know she'll be in good hands with Frank, and that I'm only an hour away if she needs me. Before they leave, she gingerly hugs Patrick with her good arm, thanking him for all he did. We watch as they drive off, before Alex takes Patrick and I back to the farm.\n\nOnce we arrive, food takes priority and we share some beers with Tyson and Alex before turning in. Later, when we're settled in bed, our naked bodies tangled together, he finally opens up.\n\n\"I've never been so scared in my life, Corrine. When she fell...she looked so small, so helpless. She didn't answer me! I thought...\" He lets out a long breath, then continues. \"She finally stirred, after ten seconds or so, but it felt like a lifetime.\"\n\nHe turns towards me, his face ashen.\n\n\"I don't think I could handle that ever again. It would kill me. How do you do it, Corrine? How do you deal with the worry, with all the bad shit that can happen in this world to kids?\" He pauses, and turns back to look at the ceiling.\n\n\"Maybe it's best I never had one...\"\n\nI roll on top of him, straddling his torso. My heart aches for him.\n\n\"Patrick, what you're feeling right now is what every parent feels when their kids have been hurt. It's horrible...you feel helpless to protect them...but you did. You were there. You handled it perfectly, and we are all so grateful. I have no doubt in my mind about you, and neither does Addie, or Luka, for that matter. You handled a really shitty thing, and you will again, and again, if faced with it.\"\n\nHe lets out a sigh. \"Yeah, you're right. I feel like I've been punched in the gut, but I'd do it all over again...for you...for her. Anytime. Any day. You can't get rid of me that easily.\"\n\nHe pushes himself up onto his elbows, then gently brushes my hair behind my ears.\n\n\"How are you, Corrine? Are you okay?\"\n\n\"Well, I think today added on a few more grey hairs, but yeah, I'm ok.\"\n\nI snuggle onto him, my head nested by the soft hairs on his chest. His hand strokes over my lower back, before resting on my bare ass cheeks.\n\nI'm beginning to drift off, when I hear him whisper.\n\n\"I love you sweet girl...now and always.\"\n\nI squeeze my body against him, and with a sleepy voice, whisper back, \"My love, my boyfriend, my dom...now and always.\"\n\n***\n\nNext chapter is the conclusion of Rock and Water."
    ],
    "authorname": "jhollander",
    "tags": [
        "bdsm",
        "mdom",
        "fsub",
        "bondage"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/rock-and-water-ch-09"
}