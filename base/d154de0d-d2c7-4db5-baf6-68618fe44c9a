{
    "title": "Sisters, Friends, and Lovers Ch. 26",
    "pages": [
        "<center>Chapter 26 -- Sisters, Friends and Lovers\n\nOffice sex, Steve's parents disapprove, SIL and niece sex</center>\n\nI'd been working in my assigned conference room for a couple of hours when Brenda came in with an extra cup of coffee for me. After making sure I could talk for a few minutes, she sat down.\n\nBrenda asked, \"I have three candidates for the Saturday party as guests, and I wanted to run them by you before I started my little seduction to see if they'd like to join us for some sexual debauchery.\"\n\nI said, \"You speak with certainty as though they won't be shocked and raise a ruckus when you ask them to go to a swinger's party.\"\n\n\"I'm pretty sure about them, that is that they are players of some kind. They each have low ego needs, so that makes them my kind of person -- like you, yet they give off vibes of enjoying sex and having a playful attitude about life.\"\n\n\"Do I know any of them?\"\n\n\"You've met all of them, and that's why I'm here, to get your assessment of them. They're Dana St. Germain, Rob Oakley, and Ed Trout.\"\n\nI quickly responded, \"Rob and Ed are both nice guys and would fit in well. I'm sure you, Marge, and Jane would enjoy a romp with each of them since they're both hunks. I have no negatives on either of them. Dana is gorgeous; I've wanted to just take pictures of her all day long she's so pretty. She's model quality, and certainly, in my book, highly fuckable.\"\n\nBrenda laughed, \"That's exactly what Marge and Jane said about the three, so I'll see if I can ask them. The fact that YOU are highly fuckable will probably be sufficient to lure Dana into coming; just be sure you save some time to give her the Big Steve Experience on Saturday night. Now that I mention it, I'd like the Big Steve Experience on Saturday night too, but if I can get that tonight or tomorrow, I'll reluctantly relinquish my Saturday time slot to some other slut like Dana.\" She actually giggled.\n\nI asked, \"Is Mike coming?\"\n\n\"Oh, yes. He's bringing a guy he works with whom I've wanted a little liaison for quite some time. I'm the bait. TJ is coming too, and he's bringing a date, but that's all I know.\"\n\nI speculated, \"Ivy will be sorry she missed this party, but I suspect she'll be involved in some party of her own back east. I heard Fran and Sheila cooking up some get together just before I left. There may even be a swinger's party the same night as ours.\"\n\nBrenda said, \"Someday soon I want to go back east with you to one of those parties and meet the rest of your crew. I feel as though I know them from your talking about them and seeing a photo or two, but it's not the real thing.\"\n\nJust then my iPhone vibrated alerting me to a text message. I glanced at the screen and there was a sexy photo. The pic had been taken the night before I surmised; it was a point of view photo showing two bare females laying next to each other on their backs each with a cock in their pussy. The females were Ivy and Ally, and the cocks were Aidan and Matt.\n\nI showed the picture to Brenda. Her eyebrows rose. She said, \"You get great text messages. Do you know who's who?\"\n\nI nodded and explained what I thought was going on.\n\nBrenda thought for a moment and asked, \"If I hike up my skirt to show my bare pussy would you take a picture of me?\"\n\nI grinned about a mile wide. I asked, \"With or without cock?\"\n\nBrenda strolled over to the door, and locked the door so we wouldn't be interrupted. She turned and said, \"With cock, but we can't fuck right now. It'll just be for show.\" She pulled her cellphone out of her purse and set it on the table.\n\nBrenda reached up under her skirt and yanked down her boy shorts that she wore as underwear and stuffed them in her purse. I found them sexy. She then hiked up her skirt and tucked it into her belt, totally exposing her pussy.\n\nI stood, walked over to her, and pulled my cock from my pants. Brenda massaged it a little until it started to have some serious heft to it. She passed me her cellphone all ready to take photos. \n\nAs she fondled my cock, I took a picture, but after checking I realized I had to hold the phone lower to get the best angle on both pussy and cock. I took another, only by this time, Brenda had me passing a 'seven' for an 'eight' on my cock hardness scale. I took another picture.\n\nBrenda kept fondling me and soon we were looking in each other's eyes. I leaned in and kissed her. I whispered, \"You are such a hottie. Are you sure you don't want me to fuck you?\"\n\n\"No, I'm not sure ... in fact, I've changed my mind. Put it in, but make it fast; not one of your two hour fuck sessions.\"\n\nBrenda had me up to a 'nine' by that point. She rubbed my mushroomed head all around her pussy lips, lubricating up the head, and then suddenly I lurched forward and slid every inch of my shaft into her hot cunt.\n\nBrenda moaned so loud I thought security three floors away would hear her. We fucked for a couple of minutes, and I just allowed every wonderful sensation from her moist love tunnel to surround my organ and bring me closer to climax. I didn't want to cum until she did, so I held off. I started to rub her clit with my thumb, and a dreamy look came over Brenda's face.\n\nA minute later she whispered, \"I'm almost there ... building up ... just a little more ... almost ... THERE! NOW!\"\n\nAs Brenda came, I allowed myself to explode my cum deep inside the executive. I came in buckets, thinking of both our pleasures, and already thinking about how to best clean her up so she could make it to the ladies room. Before we parted, I grabbed the camera and took a snapshot of my cock in her cunt. A few drops of white cum had seeped around the edge of our coupling.\n\nAfter my surges ceased, Brenda knelt in front of me and inhaled my cock, with the obvious intent of cleaning me up. As she squatted a cup full of my cum ran out of her pussy onto the carpeted floor. She looked up at me with my cock in her mouth and I snapped another picture. I got the angle just right and the photo also showed the puddle of cum dripping from her pussy.\n\nBrenda stood but with her legs spread. I said, \"Want me to get paper towels or something. I could lick you clean too.\"\n\nShe cocked her head to one side and said, \"No, I want to enjoy this all day if I can. I'm just going to slip my panties back on and go back to my office.\" She kissed me passionately and said, \"See you later. I do want to see you later -- a lot. We'll do this right the next time -- a nice, long fuck with more orgasms. I'll send you the photos at the same time I sent them to Mike.\"\n\n\"He'll be cool with this?\"\n\n\"Oh, hell yeah. He's got a little honey in his office who he now fucks occasionally, so this won't be the first time we've traded photos: first for me, but not for him. He owes me. He likes you anyway, so he'll be cool. It'll give him a laugh. He's always telling me I should find a way to relax at work anyway ... and, oh, God, you really relaxed me. You are such a hot fuck.\"\n\nOn that note, Brenda and I gave each other clothing checks and then she slipped out of the conference room. It took me fifteen minutes to get my head back into working. Sex does that to a guy. Of course, fifteen minutes after that four pictures of Brenda's pussy mostly with my cock buried deep inside arrived on my iPhone as she sent them to Mike and me. They were hot. I passed them on to the contingent of lovers I had in Boston under the title 'Coffee Break.'\n\nIn reply to the sexts, I got two up-skirt pictures, neither of them particularly sexy since they both had panties on, but they got the point across. One was titled 'Boring Day, Can't Play' and the other  'Waiting for the Weekend.' \n\n<center>* * * * *</center>\n\nDespite having warm and loving female companionship in Denver for ten days, I was glad to get home to the east coast to the other set of female companions, one of whom was my fianc\u00e9e. \n\nThe Denver trip had included a Saturday-to-Sunday swing party at the Brady and Edie's home. This time Jane, Marge, and I had stayed over making the party an eighteen-hour fuck fest that nearly defies description, but as they all do, will remain a most memorable experience.\n\nAt that party, I'd met four new women who hadn't had the Big Steve Experience yet. Brenda was there too and wanted the same. Thus, over that time period I gave five women the most intense orgasmic pleasure of their lifetime, so intense that each of them briefly passed out in what I'd come to learn was called La Petite Mort or LPM as I'd shortened it to. \n\nAs usual, the by-product of LPM were four new women who'd fallen madly in love with me and wanted me as a life partner under practically any conditions I wanted to apply. I would have counted Brenda, but she was already madly in love with me. Dana Seymour, one of women from TCI who Brenda brought to the party, was another. A couple of days later, Dana had come by Jane's conference room where I was working, locked the door, and fucked me royally for a half-hour just before lunch. She'd gotten Marge to stand guard.\n\nI again got a hero's welcome back home in Cambridge. I realized as that thought crossed my mind that I had multiple homes around the country now: Cambridge, New Jersey, and Denver. I felt a bit like the character in an old movie called Frequent Flyer, where the main character was an airline pilot who ended up married to three women in different cities until the whole set up fell apart. I said a little prayer that my life wouldn't fall apart; unlike the movie, all my lovers knew about each other.\n\nI knew something serious was afoot within sixty seconds of walking in the door that Friday evening. After all the kisses and hugs, Fran said the four words that strike terror into every able bodied man in the universe: \"We have to talk.\"\n\nThe talk turned out to be about the wedding. The five women in the apartment -- Fran, Sheila, Ally, Ren\u00e9, and Ivy -- along with Jean, the sisters' mother, had spent hours planning the wedding. I apparently had been a distant thought, especially since I'd been away for almost two weeks.\n\nFran had decided on a spring wedding. After considerable thought and discussions with her sisters (now including Ren\u00e9, Ivy, and Jane) and her parents, she'd planned a 'destination wedding.'\n\n\"Where?\" I asked, thinking of something like Cape Cod or the coast of Maine, only an hours drive from Boston.\n\n\"We'll be coming off of winter and everyone will be questing for warm weather, so we thought about someplace in the Caribbean.\"\n\nI know I gulped. I could even feel my Adam's apple bobbing up and down, as I did. I said slowly, \"Oooooookay. Have you picked an island?\"\n\nFran continued, \"No. You and I are going to do that this weekend with a lot of time on the Internet, but we'll also have to make calls about availability and rooms.\"\n\nI asked, \"How many people are you thinking about -- how big a wedding party?\"\n\nFran turned to the side table next to the sofa and picked up a pad of paper and passed it to me. There were one hundred twenty four names listed. I glanced through the pages, and I knew all but about a dozen of them. I saw my brother Doug and his wife Sheri on the list, so I guess I would have a best man.\n\n\"Do you want to tell me more about my wedding?\" I teased. I knew that Fran's mind was really on our getting together and not on wedding plans.\n\nFran said, \"Not until tomorrow. Right now you've got five eager pussies that want to be fucked, and that's going to take you the rest of the night if you do it right. I'm your starting pussy and your ending pussy, and I want to go to sleep with your arms around me.\" She smiled up at me and then kissed me in a tender but hot way. Next, she pulled me up to the amusement of the other women in the room, and then herded me into the bedroom, slowly undoing her blouse as we walked. \n\nBy midnight I had indeed provided a satisfying orgasm or four to each of the five women now living with me on a full-time basis. Fran and I did have the last 'interlude' of the evening, and it was kind of messy because we both came in buckets. We made the moves to ignore our drips and the wet spot and drift off to sleep. Someone had other plans. After cleaning the two of us up orally, Ivy also nestled into my other side with her erect nipples digging into my back, sighed in contentment, and drifted off to sleep.\n\nIn the morning, I sat with Fran and Sheila, and the preliminary planning for the wedding came up. This time Fran pulled out a bright white manila folder, and the first page in it she placed on the table in front of me. It was a checklist of all the things that a bride (and her mother) and groom had to consider in planning a wedding. I about choked.\n\nFran said, \"So, here's the deal; I'm responsible for all the stuff highlighted in pink, we jointly have to decide the stuff highlighted in yellow, and you take the rest. Later today, I'll break the page up into three separate 'To Do' lists.\n\nI looked at the joint and hubby-to-be list, but it wasn't too long.\n\n<blockquote>\n\n\u2022Prepare invitation list (joint)\n\n\u2022Notify friends to hold particular date for the wedding\n\n\u2022Coordinate with parents and relatives\n\n\u2022Pick best man and groomsmen and let them know\n\n\u2022Set up honeymoon (joint)\n\n\u2022Help set up catering (joint)\n\n\u2022Arrange travel and any insurance\n\n\u2022Pick and book band or DJ (joint)\n\n\u2022Gift registry (joint)\n\n\u2022Shop for wedding rings (joint)\n\n\u2022Decide on dress for wedding and guests (joint)\n\n\u2022Set up joint bank accounts\n\n\u2022Arrange ceremony, including any readings or poems\n\n\u2022Buy gifts for best man and groomsmen\n\n\u2022Get marriage license\n\n\u2022Thank you notes as required</blockquote>\n\nAs I scanned the list, Fran told me, \"I have some ideas and I've talked to Mom about it too. A lot of what we need to decide will depend on the venue for the wedding. A destination wedding would probably limit the guest list to those willing to travel and take more than an afternoon and evening of their lives. There would also be the cost.\"\n\nFran continued, \"I want this to be the party of the century for us. This is a one-time blast we'll never forget.\"\n\nShe laid some printouts from an Internet sit in front of me. \"I picked this place, but want to talk to you about it because it's very risqu\u00e9 and some of your conservative relatives might be there -- like your parents.\" Fran slipped a couple of pages printed off the Internet in front of me.\n\nThe online brochure was for a place called the Club Orient on St. Maartens in the Caribbean. All through the various photographs nude or nearly nude people strolled the grounds of the resort, frolicked in the pool, or played games with one another. I was intrigued but wondered how I'd sell this to my parents. I wondered if I should spring this on them, or just let them find out when they got there. I laughed at the two possibilities, reveling in the discomfort I knew they'd feel.\n\nFran said, \"A lot of the crowd around here want to go, and we want to turn the place into Orgyville for a week.\" She thought for another moment and added, \"Oh, we have one minor problem too -- about money, at least I want to raise it.\"\n\n\"What's that?\" I had the feeling I'd had the good news and now for the bad news.\n\n\"I don't think we should make Mom and Dad pay for all of this. It's not like we're just starting out and need a little push. We both have healthy savings accounts, and I think we should blow a bundle on this and not let them do too much.\"\n\n\"I agree.\" My response was automatic. I'd already thought of the burden a large wedding would put on Jean and Dave, and I didn't want that to befall them. I knew they'd end up spending a wad anyway, but they sure didn't have to pay for the whole shebang.\n\n\"You do?\" Fran acted surprised. I think she'd expected an argument, but I'd pledged to avoid money arguments with her if we could easily duck the issue. I shared my thinking with her, plus I knew I'd be getting a large bonus for bringing in the TCI strategic planning work.\n\nI shocked Fran a bit further with my next statement. \"I also think I'd like to do some kind of commitment ceremony to the other women in my life whom I love. I'd marry you and then thought I might do something special with each of them -- a short vow and pledge of love as well. Would that be all right with you?\"\n\nFran sat back in her chair and thought. \"I think that's a beautiful idea. Could I do it with the men or would that be inappropriate?\"\n\nI shook my head, \"No, very appropriate. This is a union of us with Sisters, Lovers, and Friends. We pull them all closer to us with our commitment and love.\" I paused and added, \"The resort is fine, but I will need to alert my parents. Can you find me another nearby resort that's not clothing optional? Something conservative?\"\n\nFran grinned; she'd anticipated the request. She reached into her folder and pulled out another page for the Karibuni Lodge. \"I picked this place but there are many others. This has a water view, beach access, but it's a good four miles away from the Club Orient so they wouldn't have to put up with our nudity and fucking around.\"\n\nI chuckled, \"They will anyway, and I'll hear about it, but this is good. I approve. Nice choices. I do think I need to make a trip to Illinois to see them and start to explain my life and lifestyle to them. They're going to be in for a shock. Maybe Doug will join me.\"\n\n\"Do you want me to come with you?\"\n\n\"Absolutely, fianc\u00e9e. They need to meet you at least once before the big day. Let's plan a trip for ... how about next weekend?\"\n\nFran nodded. \"What about the other stuff on the list?\"\n\n\"Let's get this piece of it done first since I think it's such a gating factor for everything else we might want to do.\"\n\n<center>* * * * *</center>\n\nOur plane set down at O'Hare Airport at noon on Saturday. Fran and I were going to stay with Doug and Sheri, but spend the afternoon and evening with my parents -- Dwayne and Myra. Except for phone calls and a shared meal at O'Hare six months earlier as I transited the airport on the way home, I hadn't really seen them to sit and talk with seriously for two years. My Dad was a precision machinist making replacement airplane parts, and Mom worked as a paralegal.\n\nFran and I got an airport rental car, and drove to my brother's home. We hugged Doug and Sheri, each of getting passionate kisses from our counterparts. Sheri whispered in my ear, that she had great plans to fuck me blind later that night.\n\nAn hour later we pulled up in front of my parent's modest home on the edge of Rockford, Illinois. The couple had lived in the same home since they bought it in 1985 when I was about five years old. I'd grown up here, gone to high school nearby, and felt some attachment and nostalgia to the whole area.\n\nThe day was cold with one of those cutting winds that start in the western Dakotas and don't stop until they hit the Atlantic. We ran to the front door, and burst inside. Mom and Dad were there with hugs and kisses, and a warm welcome. \n\nI made a point to introduce Fran as my fianc\u00e9e, and we were both on our best behavior. They knew about Fran and I'd emailed them sedate pictures, but this was their first meeting face to face. Mom had held lunch so we munched on little tea sandwiches she'd prepared and had iced tea despite the chilly weather.\n\nI figured I'd divide and conquer with my parents about the wedding plans. At one point, I went to help my mother in the kitchen. The discussion out there took forty minutes, and fortunately no one disturbed us.\n\nI'd always thought of my mother as slightly more liberal than my father, probably because she was the only person growing up who I could talk to about anything. I got Mom to sit down, and just bulled my way into the china shop of the discussion. \"Mom, we're getting married next April down in the Caribbean on St. Maartens Island. It's a destination wedding. The resort we've picked is unique in many ones, but one of them we wanted to alert you to is that it is a clothing optional resort. Even our wedding may have that element in it.\"",
        "My mother had started to blush, but I continued. \"I know that might not appeal to you and Dad, so we found another place we thought you might prefer, but you'll have to let us know. I hope this won't upset you too much, but the place is consistent with the lifestyle we lead.\"\n\n\"Lifestyle?\"\n\nMy parents had no idea about my lifestyle until that afternoon. \"Mom, I live with five women -- intimately live with them. There are some others in my life who are also dear and loving to me and the girls, and I love them. As part of the wedding, I will likely do some kind of pledge of love with each of them.\"\n\nMy mother muttered, \"At least you're not gay.\"\n\nI almost burst out laughing, but I contained myself. \"Fran will likely say some commitment words to some of the men she loves as well.\"\n\nMom cocked her head to one side and asked, \"If you're still sleeping with other women and it sounds like she still is with other men, then why are you getting married?\"\n\n\"Because we love each other and want a family and things like that. The wedding is our commitment to each other.\"\n\n\"Will you stop seeing these other women soon or when you get married?\"\n\n\"No.\"\n\n\"Oh.\"\n\n\"This is what I mean about our lifestyle. In a way my engagement to Fran is an engagement to her two sisters, and now several others who have become like sisters in our midst. We are an intentional family -- a core group of people who live together in a polyamorous relationship.\"\n\n\"And you have sex with each of them?\"\n\n\"Yes, I 'make love' with each of them because I love them and they love me.\"\n\n\"And you're happy?\"\n\n\"Ecstatic.\"\n\n\"And Fran and these other women are happy?\"\n\n\"Yes, very.\"\n\n\"And this isn't just a passing fancy?\"\n\n\"I don't think so. We've been living this way for about two years.\"\n\nMom thought for a few minutes and I gave her room to sort out her thoughts. Finally, she said, \"Thank you for getting us a separate hotel. I know we'll enjoy the island, but I think being around the rest of you will be a little too much for us. Will you come and see us?\"\n\n\"Certainly, and I know Doug will too.\"\n\nI could tell my comment linking Doug and Sheri, who they saw often, to our ribald event unsettled her even further, but then maybe she was waking up to the open sexuality of the newer generations.\n\n<center>* * * * *</center>\n\nTalking to my father was another story and one to be broached with great care as though I were about to make love to a porcupine.\n\nDespite the cold weather and the wind, I suggested that Dad take a talk with me to get some fresh air. He'd obviously seen me in conversation with my mother for over a half hour, so he knew something was up. He agreed, and we bundled up and exited the house. As I did, I got a wink from Fran -- an obvious sign of support that would have to steel me for the next thirty to sixty minutes.\n\nWe walked along the rural street, mostly in one lane of traffic unless we heard someone coming when we'd step off the macadam surface. \n\nTalking at about sixty miles an hour, I explained to my father about setting him and Mom up in a separate hotel on the island because the one we had chosen had so much nudity. Moreover, before I gave him much of chance to digest that, I explained about my living the past two years with at first three and now five women in Massachusetts, and having several more intimate friends at various places I worked across the country, and, with barely a pause for a breath, I told how there would be the wedding and then commitment ceremonies with some of the other women in my life whom I loved, and then the men who Fran also loved.\n\nMy Dad's footsteps got heavier and louder as we went along and I kept talking until I'd became aware of the dark human mass of displeasure next to me. I also realized I'd been avoiding his gaze since we left the house. I stopped talking; it was time to shut up.\n\nWe walked for about five minutes in silence, and I had the feeling my father was working hard to get his emotions under control. Finally, he spoke as we turned a far corner away from the house.\n\n\"Son, I appreciate you coming all the way out here from Massachusetts to see us and bring us this message about the way you live. You must also realize that neither your mother nor I approve of what you just described nor the resort you chose. Do you have any rationalization for your behavior?\"\n\nAfter another minute of silence, I had a few sentences to add. \"You and Mom were raised and signed onto a meme -- a belief -- in monogamy, and that a marriage has to be that way and between a man and a woman. You also taught me to question even the most fundamental thinking going on around me before I bought into ideas that everyone else did. That thinking enables me to be really special and do well in my job as a consultant where critical thinking and idea generation outside the norm count for a lot. That thinking also resulted in my loving many women and believing that love is not a zero-sum game. I feel fortunate to have found a group of people who think the same way. We love each other, but not exclusively. The love we radiate comes back to us ten fold or more.\"\n\nI continued, \"While I will marry Fran, I will also enhance the commitment I have already made in my mind to my other friends and Fran will do likewise. I don't expect you to change how you think, to adopt my lifestyle, or anything else other than to maintain the tolerance of others that you imbued in me.\"\n\nMy father said slowly, \"Son, marriage is build on trust. What kind of trust are you building with your fucking around with other women or Fran with other men?\"\n\nI responded, \"The kind with a lot of love, faith, and kindness in it. Fran and I do not and will not own each other. Our relationship isn't about limiting our interactions with others, it is about expanding them in ways most people don't because they abide by a model of marriage created in a different era.\"\n\nDwayne asked, \"Will you put Fran first above all others?\"\n\n\"Sorry, but my answer is 'It depends.' Much of the time yes, but if one of the other people I love needs it, they will get my attention and probably Fran's as well. The question is a bit like asking a parent of several children which one they will save if there's imminent disaster. The answer is all of them.\"\n\n\"What kind of ethics does your living this way display to others?\"\n\n\"I would hope dedication, caring, unconditional love not just for my wife but for others, a broader sense of responsibility than most assume, a sense of democracy and equality uncommon in many relationships, and mutual respect. There may be others I'm failing to mention right now. These are ideals and we will strive to fulfill them to their utmost.\"\n\n\"Son, you have an odd moral compass that I think is pointing in the wrong direction.\"\n\n\"I understand that, and so does Fran. We always reserve the right to redefine our relationship over time, even adopting what you call a traditional path. Right now, this is the path we've chosen.\"\n\n\"What will you do about having children? Who'll raise them?\"\n\n\"Fran and I have a loving environment that we live in, and I can't think of a more positive environment to raise a child or children in; and, just to set the record straight, I may father children with some of the other women who I love.\"\n\nMy father slapped his forehead with his hand. \"Where did I go wrong?\"\n\n\"You didn't go wrong anywhere. You're just not used to someone living in another paradigm about relationships, marriage, child bearing, or life style. The model you have in mind consists of two loving married heterogeneous parents with two-point-one children, a house, and a white picket fence, etcetera. Only about twenty percent of the family units in this country fit that model today. Less than half of people living together are married, and some of them are gay or lesbian -- some with children. About three to five percent of people living together are in multiple person, polyamorous relationships, and Fran and I happen to be in that category.\"\n\n\"I hear you say all that, but I just can't get my mind around the fact that YOU are living this way. It's so different from anything your mother or I would even consider ... or even approve of.\"\n\n\"Without being rude, let me say I'm not here seeking your approval. I would like you to come to our ceremony down in St. Maartens despite our differences. I don't want to embarrass you, and we will try to be circumspect given the overall nature of the resort and the unusual nature of the event. That said, there will likely be some nudity, maybe in our own group. We likely won't wear tuxedoes or a wedding dress -- more than likely beach wear of some kind. The ceremony will be unusual but legal where it needs to be. Our friends are trying to design a wedding that is beautiful, erotic, and memorable. Fran and I are not privy to all the details, but it should be fun, at least for our group.\"\n\nMy dad gave a huge sigh, \"Son, I support you, even in this ... this ... situation you are in or entering. I don't approve but I will continue to support you, as I feel compelled to do as your father. I want to be there for you in your ceremony, and I want to meet the rest of your friends to see what is so unusual about them that you've created this way of living.\" He was shaking his head in the negative as he talked, so I knew he wasn't happy.\n\nI just said, \"Thank you, Dad. Thank you for reaching one more time in my direction, especially since I know it's hard for you.\"\n\nWe walked the rest of the way back to the house in silence, each of us in our thoughts, no doubt wondering in part about what the other was thinking.\n\nWe had an early dinner, and somehow we managed to not return to any of the details about our living arrangements or the spring wedding. A lot of attention was devoted to learning more about Fran, her family, and her job, education, and thoughts about life and current issues. She talked a lot about her work in art, the gallery, and the lessons she taught.\n\nLater, I told Fran how proud I was of how she handled herself given the tension in the household.\n\nAs we bid them goodbye to head back to Doug and Sheri's house, Mom pulled me aside. After a motherly kiss, she said, \"Give us time to get used to the idea of your new living arrangements. I'm sure we'll mellow out a bit, and don't worry about the wedding. You make it anything you want to, even complete nudity if that's what strikes you. We won't join in, but we'll be there to support you. We both love you, and we love Fran too. I'm sure we'll love the others you hold dear.\"\n\n\"Thanks, Mom. I love you both, although I know you wish I were something else about now. I am what I am.\"\n\nWe hugged goodbye, and then headed away.\n\n<center>* * * * *</center>\n\nFor the one-hour drive to my bother and sister-in-law's home, Fran and I told them about my talks with Mom and Dad, and talked to Doug and Sheri about our ideas about the wedding service and how they might fit into it. I didn't want either of them to be caught off-guard by something my mother or father said to them. I also gave them the option of participating 'conservatively' in the wedding and staying over with my parents, but they both laughed and explained that they were so looking to the wedding and what promised to be the orgy of the century afterwards or during or however we wanted to portray it.\n\nDoug accepted my invitation to be my best man. I had been the best man at his wedding years earlier despite my young age at the time. Doug was almost six years older than me, and he and Sheri had been married about twenty years. They had a nineteen-year-old daughter and an eighteen year old son, both a gorgeous young niece and handsome nephew. \n\nI asked, \"What about your kids? Would they want to participate in our wedding?\"\n\nDoug shook his head. \"I'm not sure I want to expose them to what's going to happen down on the island.\"\n\nSheri intervened and overrode my brother's remark, \"Yes, they'd love to come and be full participants. They already have experienced lots of sex, some in what I'll call group and unusual situations.\"\n\nDoug exclaimed loudly, \"WHAT? What do you mean? What have they been doing?\"\n\nSheri shook her head. \"Honey, they are tuned in to the whole scene as well as their sexuality. They just don't talk to you about it, partly because you want to continue to think of them as virgins until they're thirty-five.\"\n\nDoug said, \"What about the group situation you just talked about?\"\n\n\"Lori has had her steady boyfriend for what, three years now? And there are two other male friends whose names I forget just now. They've all gotten together and made love to Lori to her great orgasmic delight. She loves group sex. Ace has a similar situation with his girlfriend, except she's often involving her BFF in their lovemaking, sometimes even with his best friend.\"\n\nDoug said, \"Excuse me for being so out of touch.\" There was a tension in his voice that hadn't been there earlier.\n\nSheri leaned over and kissed her husband on the cheek. \"Honey, I love you. I'll try to let you get a little more involved in their sexual lives. Just don't berate them on any of this or I'll cut you off for a year.\"\n\nHe laughed. \"No, not my plan.\" The initial discovery had upset him, but he seemed to be coming around rapidly.\n\nDoug looked over into the backseat at me and said, \"So, I guess the answer to your original question is 'Yes,' involve Lori and Arthur in the service. They're hardly the cute little ring bearer or flower girl they would have been fifteen years ago, but I'm sure you'll think of a role for them.\"\n\nI said, \"And to be blunt, what should we do if they want to participate in the sex that's sure to be going on the rest of the week -- and I include myself and Fran in that question, just in case.\"\n\nDoug said, \"Oh, God, I don't want to know. Just remember you're their uncle.\"\n\nSheri laughed and added, \"If either of you get your hands on them, I hope you teach them some of that Tantric sex stuff you are so good at. You have my blessing to fuck their little brains out of their heads too.\" She laughed all that much harder at her last statement.\n\nBack at Doug and Sheri's home, we quickly unpacked, showered, and swapped partners. Lori and Ace (Arthur) were both out for the night with friends. Sheri speculated they were probably on their fourth round of sex by that time, so we had to take some serious steps to catch up.\n\nI proceeded to eat Sheri to three orgasms in a ten-minute period as she tried to push my head up inside her cunt. My head wouldn't fit, but my fist did, and soon I was doing things to her that she thought might be illegal in most states because they felt too good. After about four G-spot orgasms, I found Sheri's A-spot with my fingertips and together with my tongue on her clit, brought her to a peak slightly higher than Mount Everest. I worried that her screams might bring the police.\n\nI avoided the whole Big Steve Experience where she'd pass out. I wanted a cogent love partner and not one I'd worn out before I got my own rocks off deep inside her. \n\nNext to us, Fran was working especially hard to make Doug reach a state just shy of a mountain peak. She'd work him up with lips, tongue, breast play, and pussy, and then back him down. Doug's cock turned a royal purple suggesting that most of the blood in his body had packed into his thick shaft.\n\nFinally, Fran had Doug cum deep inside her. Doug's wail of pleasure nearly matched Sheri's, and then I dumped my load inside Sheri to make her the happiest woman in the living room next to Fran.\n\nWe were still coupled together when a voice from the foyer said, \"I always knew you had a thing for my uncle. Nice show, Mom. I didn't know you could cum so hard. By the way, 'Hi, Steve.'\"\n\n\"Hi, Lori.\" I ignored my nudity, the fact I was visibly embedded in her mother's pussy, and the further fact that Fran straddled her father with his cock still up her cunt.\"\n\nLori said, \"You must be Fran. I'm Lori.\"\n\nFran blushed a little, but stuck her hand out past my brother, and said, \"Hi, nice to meet you. I don't think we were expecting you home tonight.\" She giggled.\n\nLori laughed, \"I guessed that. I decided to come home early instead of staying over. Mark, my boyfriend, had to get up early tomorrow morning for a trip to another college campus for some event.\" She turned to her mother, \"So, the two of us made love a couple of times and I decided to come home.\"\n\nSheri had whispered to me, \"If you pull out of me, I'm going to flood the entire city with your cum. Stay inside me.\"\n\nLori said, \"Was this round one or round two, or don't you do second rounds at your age?\"\n\nFran spoke, \"That was round one, and we were planning on a couple more before the end of the night.\" She taunted her future niece-in-law, \"Want to join us for the next one?\"\n\nLori lit up like a kid at Christmas, \"Could I? You wouldn't mind?\" She looked at her mother, obviously a softer touch than her father.\n\nDoug started to sputter from beneath Fran, but before he could speak, Sheri said, \"Doug, don't say a word, and yes, Lori, you may join us if it's all right with our guests.\"\n\nFran and I both nodded and muttered words of approval. Lori was a study in teenage beauty with long brown hair that glistened, it was so well cared for, dark set eyes that could stare right into your heart, lips that looks succulent, and a body every supermodel would die for.\n\nLori came over to me and kissed me really hard on the lips. She whispered, \"I've wanted to do that for about the past seven years Uncle Steve.\" She turned and moved to Fran, and delivered an equally passionate kiss. \"So, very nice to meet you in a more friendly way ... my future aunt. I think we're going to have a really nice relationship.\"\n\nLori stood, and slowly stripped her clothing from her nubile body, revealing to me for the first time what a hot number she was. \n\nWhen Lori was nude, she went back to Fran. She asked in a whispered tone, \"Are you full of my father's cum?\"\n\nFran nodded and said, \"Afraid, I am. Why?\"\n\n\"Because, if you let him extract from you, I'm going to suck every last drop of his man juice from your pretty pussy. That's also something I've been curious about for years.\"\n\nFran didn't need a second invitation. She pushed Doug to one side. He moved, but watched his daughter with lust and awe.\n\nLori immediately swallowed her father's flaccid cock in one gulp, cleaned his shaft in about fifteen seconds as he groaned and watched her in abject fascination. Lori then moved to Fran's pussy with both fingers and tongue totally engaged in her suctioning up every drop of cum she could find.\n\nWe all watched the lurid show, and I made eye contact with Lori and saw her smiling eyes. She was doing this for pure parental shock value, obviously taking advantage of leap frogging the situation because she caught us in flagrante delicto in her living room. I smiled back at her to show that I understood her little game.\n\nAfter Fran had two orgasms under Lori's tongue, Lori rose and looked over at her mother and me. She grinned, and knee walked over to our over-stuffed love seat. She nudged me aside and took ahold of my still inflated rod. She deep throated me several times, probably to prove to everyone it wasn't an accident the first time.\n\nLori pulled off of me and said, \"Oh, you taste good. I bet that besides your cum that's my Mom's pussy.\"\n\nA microsecond later, Lori's tongue was lapping at my juices leaking from her mother's pussy, making a lot of noise in the process as she obviously suctioned and sipped the fluids into her own body. Sheri closed her eyes and whispered, \"This is sooooo wrong, and yet it feels so fucking good.\"\n\nSheri looked at me through her slitted eyes. She said, \"If you don't push your hard cock into my daughter's tight little pussy, you're not half the man I thought you were.\" She gave me a cocky little grin.",
        "I moved behind Lori who wiggled her butt at me. I leaned in and lapped at her pussy, tasting her sweet teenage pussy. She moaned into her mother's cunt as I did her. I slowly pushed my shaft into her body, a small fraction of an inch at a time, drawing out the penetration experience.\n\nLori said over her shoulder, \"Oh, fuck, you are much bigger than anything I've had before. You're fabulous. Fuck me ... and cum in me; I'm on the pill.\" She went back to eating out Sheri.\n\nAfter a few minutes, Sheri said, \"I want to do a little orchestration here. Lori lie down on the sofa on your back, and Steve get your cock inside her again.\"\n\nWe did Sheri's bidding, but not before I'd kissed Lori several times in a passionate and very un-uncle manner. Doug and Fran moved away from the sofa.\n\nSheri grabbed her husband's cock before he got out of reach. \"Come here, honey. Drop your shaft into Lori's mouth. Let her suck you.\" \n\nDoug looked uncomfortable, but did as his wife requested.\n\nLori was getting jammed from the south by my cock, making her entire body shudder with our hard fuck. At the same time. Lori kept swallowing and fondling Doug's ever hardening shaft until it had achieved a 'ten' on the hardness scale. Lori looked pleased with her accomplishment.\n\nI asked Lori, \"Are you a little slut or is this all new to you?\"\n\nLori smiled around Doug's cock and pulled away for a moment, \"I am the town slut. I love to fuck and do it as often as I can. My boyfriend and his friends always have access to my hot teenage body, and usually daily I can count on them for a few go arounds. Now, fuck me good uncle; you're the best I think I've ever had.\"\n\nI started to apply some of the Tantric techniques, drawing out our intercourse, and changing pace. Doug finally came in his daughter's mouth and she gobbled up every drop of his cum directly from the source.\n\nI then took Lori through several new positions, each more tantalizing to her than the previous one. I ended with her back in a modified missionary. I reached under her to her ass, and got a finger positioned. In the meanwhile, I sucked on her vibrating tits until I thought she was ready to cum, I pinched, put my hand on her neck and squeezed, and started to shoot my cum inside her just as she also peaked. \n\nI got off four jets of cum into her body before Lori's eyes rolled up in her head and she passed out. LPM -- La Petite Mort -- had just claimed another victim -- the Big Steve Experience.\n\nI finished cuming inside her, and then moved off of her so I could hold her to me in a loving way. Doug and Sheri looked concerned but Fran explained again to them about LPM and what had happened.\n\nA minute later, Lori's eyes blinked open and she looked up into my face. \"Holy shit. You are a sexual superman.\" She pulled one of my arms tighter around her and said, \"You can fuck me like that any time; I'm not kidding. That was the most intense experience of my life. I want you to teach me that so I can have my boyfriends do that to me.\" We started to make out, and after a few minutes, Lori whispered to me, \"I think I'm madly in love with you. I hope ... well ... although we're related ... maybe we can do this once in a while.\"\n\nI smiled and kissed her back. \"Only if you promise to have a role in my wedding next April -- it's at a clothing optional resort in the Caribbean.\"\n\n\"Oh, God, yes. Will you still do this to me then?\"\n\nFran knelt beside us and kissed Lori, \"Sweetie, that can be arranged. We're going to have a very open marriage, lots of sex with all sorts of people, and you can be one of our wedding sluts.\"\n\nLori chuckled, \"I like the sound of that.\"\n\nFran paused and said, \"Now, I'd like to eat my fianc\u00e9's cum from your little hot love box ... and in the process show you how to really eat pussy.\"\n\nOne of Lori's legs moved to expose her pussy to Fran. Fran kissed her way down Lori's body, taking her time around her breasts before starting her own assault on the pretty nineteen year old. In seconds, Lori was squirming and writhing in pleasure, and as the minutes ticked by Lori came over and over and over, until finally she was one massive continuous orgasm just vibrating and twitching in climatic lust. \n\nI glanced over at Doug and Sheri. Sheri had sucked Doug back to life, and mounted her husband, but in a way where they could continue to watch their daughter and us. We went a long time, had a few more orgasms, except for Lori who had so many we lost track.\n\nWe called it a night about one a.m. Lori and Sheri slept with me, and Fran went with Doug. In the middle of the night, I made love to Sheri again to her delight. I didn't want her to think I'd thrown her to the curb because I now had access to her daughter. I loved the two of them, now in multiple ways.\n\n<center>* * * * *</center>\n\nSunday, we hung around most of the day and repeated the events of the night before, except I didn't give Lori a LPM. Instead, I did her mother, and reconverted her to be one of my most ardent lovers, although she was circumspect in telling me that in front of her husband. Fran already knew the effect I had on women when I did that, so the words of love from Lori and Sheri were not news to her.\n\nWe had to leave the house at three o'clock to get back to O'Hare. Fran and I both had separate five o'clock flights: her to Boston and home, and me to Denver for four plus days.\n\nWe kissed goodbye at Fran's gate and parted company. My gate was ten more down the concourse.\n\nI got into the room at my hotel about ten o'clock. Jane was naked in bed reading. Marge was also naked in the same bed, but doing a crossword puzzle. The two looked so companionable, and also ecstatic to see me.\n\nJane asked, \"Are you all fucked out, or did you save some for us?\"\n\n\"I always have something for you,\" I kissed Jane, \"And you,\" I kissed Marge.\n\nJane said, \"Then get out of those clothes and prove it.\"\n\nI proved it much to their mutual satisfaction.\"\n\nTo be continued\n\nThanks to Germandragon for his editing. Things are much better now."
    ],
    "authorname": "SteveWallace",
    "tags": [
        "polyamory",
        "romance",
        "love",
        "tantric",
        "threesome",
        "foursome",
        "orgy",
        "incest",
        "sisters",
        "lifestyle"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sisters-friends-and-lovers-ch-26"
}