{
    "title": "Of Rivers and Religion Ch. 02",
    "pages": [
        "This is Part Two of a two-part story.\n\n* When I awoke in the morning, I was alone in Dave's bedroom. Light was pouring through both of the room's windows, neither of which was covered by a blind or curtain. It must have been about 7:30. I stood up, and spying my reflection in the mirror above the dresser, I realized I was naked except for my bra, the cups of which were still tucked under my breasts.\n\nAs my brain slowly pieced together all of the details of the previous night and attempted to explain my solitary presence in a place that I'd never before seen in the harshness of day, my reflection exposed me in a starker psychological light than I was prepared to view myself. In short, reality hit me like a jab to the nose.\n\nI had just slept with my professor, the man who had personally championed me and my work, and who was undoubtedly one of the most respected individuals at the entire university.\n\nMore than that, this was no simple, one-night stand. Dave was a wounded man, and as with any wound, when you peel back the bandages, the exposed flesh isn't always terribly pretty. I had no idea how last night might play itself out today, much less further into the future.\n\nI was studying my naked form in the mirror, trying to decide how conspicuous both my best attributes and worst flaws looked in the daylight. And then, I felt a trickle of fluid running down my inner thigh, and that revelation prompted a truly unpleasant recollection -- I hadn't used birth control last night! Dave's cum was still inside me, or more accurately, some of it was inside me, and some of it was running out of my pussy and down my leg!\n\nI spotted a box of tissues on the dresser, so I quickly grabbed one and wiped up the semen and threw the tissue in a waste basket next to the dresser. I grabbed a handful of fresh tissues for another impending disaster that seemed certain to befall me in the very near future.\n\nThen, I thought about my dilemma, specifically the not so clear, but present danger that I could become pregnant. I tried to remember when I had had my last period, and then I did the math. I was trying, however unrealistically, to calculate the odds.\n\nLuckily, I was a millennial, and I was reminded that those of us born so late in the 20<sup>th</sup> Century had been gifted with so much of modern science's technological and innovative wizardry. Much of that wizardry might have had the potential to save older generations from some serious problems, one example of which, I now acknowledged, might just be able to save my sorry ass from an unplanned pregnancy. I had never taken \"the Morning After\" pill, but I resolved that I would change that reality that very day.\n\nAs I began musing about the precise location of a pharmacy within walking distance of Dave's house that was likely to carry the stuff, I heard the subtle creak of floorboards in the hallway, and afraid that I would be caught fully exposed, I scrambled back to the bed and crawled in quickly, tissues in hand.\n\nJust as I had hidden myself under the covers, Dave entered the room. He was fully dressed and carrying the same tray and stand on which he'd schlepped our delicious meal from the previous night, except that this morning, it was loaded down with various sliced, fresh fruits; assorted containers of yogurt and granola; and two carafes, one filled with hot, strong coffee and the other chilled apple cider, as well as plates, silverware, napkins and cream and sugar for the coffee. I swear he was the most considerate man I've ever met.\n\nI feigned sleep, but pretended that Dave's entrance had awakened me. I looked up at him smiling and pretended to rub the sleep from my eyes. Then, I sat up and started to stretch my arms, neck, and back, while I held the bedcovers to my exposed breasts.\n\nDave smiled back at me, \"How's my newly minted scholar this morning?\"\n\n\"I'm good! I slept like a rock! What have we here?\" I asked as he set the tray down on its stand next to my side of the bed.\n\n\"I thought you might like some breakfast. You worked hard last night!\" There it was! At least he wasn't going to act like it hadn't happened, though I thought it odd that he'd characterized sex as \"work.\"\n\n\"So did you!\" I said stupidly. Then, I paused for a moment, waiting for him to say something else. I should have known better. Then, I reconsidered; maybe the \"hard\" work he was referencing meant the counsel I'd offered him, not sex. But either way, I decided if he wasn't going to talk, I would delicately tiptoe my way toward what I perceived to be the crux of the matter, \"Are we okay, Dave? Last night was... well, just so... I don't know... I... I guess I'm just hoping it won't change things between us.\" I could barely articulate anything that I thought I should say.\n\n\"Why would it do that?\"\n\n\"Uh... because we had sex!\"\n\nHe smiled. \"Look, Lily, I know that we need to talk about what happened, but for now, why don't we just have some breakfast? I thought all women -- and in my experiences, beautiful women in particular -- love to be served breakfast in bed. And there's no denying your beauty!\" He kissed me, and I blushed. He was always making me blush. \"I promise when we're done eating, we can talk. Okay?\" he asked.\n\nI shook my head, so he climbed up next to me on the edge of the bed, and then, when I pulled the covers more tightly to my breasts, he realized that in the bright morning light, I was embarrassed to be almost completely naked in his presence. \"I need to use the bathroom anyway, so why don't I give you a chance to get dressed,\" he said politely.\n\n\"Thank you. I appreciate that.\" He got up and walked into the bathroom, and I pushed my tits back into my bra and found my panties, blouse, and skirt folded carefully on a chair next to the dresser. My jacket was hanging over the back of the chair, and my heels were underneath it. I quickly donned my panties, tucking the spare tissues into the crotch, and then I slipped on my skirt and my blouse. I was just sitting down on the bed when he came back into the room.\n\n\"Feel better?\" he asked.\n\n\"Yes, I guess I'm being kind of prudish after last night, considering what I... Let's just say, I'm not usually that... vocal.\"\n\n\"Thank god you were!\" He paused and waited for my reaction, but I was too embarrassed to say anything, so he continued, \"Look, Lily, I've reconsidered; maybe we should talk now. Breakfast can wait for a couple of minutes, can't it? How about if I go first?\" I shook my head sheepishly.\n\n\"Lily, I'm an old guy, probably pretty decrepit in your eyes, and you, well, you're far too pretty and, let's face it, too young to be with a man like me, but, I'll get to that later. Lily, I really want you to know this. I don't think that I can ever thank you enough for what you did for me last night. I mean that sincerely, and I want to emphasize, I am not referring to sex!\"\n\n\"I also realize that I will never be able to repay you! No matter how long I live, I can never fully repay my debt to you! You helped me a thousand times more last night alone than all 12 years of counseling that I've received put together -- 12 years of counseling that ended last night, by the way, and not a moment too soon, and that's because of you, Lily. So, thank you!\" Somehow, I knew he wasn't finished, especially when he scooted closer to me on the bed and put his arm around me. Then, he continued.\n\n\"But, Lily, I also want you to know that I am very, very attracted to you. For a million reasons, sure, but I'll be honest with you -- first and foremost, you drive me crazy with lust! You have from the very first moment I met you that opening day of class. You're absolutely perfect, beautiful in every way!\" I blushed again, and after he paused for a moment, he added, \"Especially when you blush, god, you're angelic!\"\n\n\"And then I found out how brilliant you are, and I fell in love with your mind too. But after last night, my god, Lily, it's not just your face, or your body, or your mind, it's everything else too! You are the most beguiling young lady that I have met in almost 38 years, that day when I first stumbled across one Catherine Conley in the criticism section of the Memorial Library. Catherine, you probably guessed, became my wife. I know Catherine would have liked you too, Lily. You two have a lot in common.\"\n\nHe smiled. In many ways, what he had said had made me feel a lot better. He understood the impediments to any future relationship that we might have, even better than I did.\n\nBut that didn't change the pending awkwardness of walking into the lecture hall tomorrow morning to listen to a gifted intellectual expound on Faulkner's narrative techniques, an intellectual whose cum was literally dripping from my pussy at that very moment! Besides, I could never replace his wife, and I was uncomfortable with being mentioned in the same context as her, much less being compared to her.\n\n\"Dave, last night was really wonderful for me, too. That was the most sensual night of my life. I don't have a lot of experience with men, but that was the best... ah... evening I've ever had, bar none. I think I'm still tingling all over. I didn't know it could be that good. On the other hand, I don't think that I've really thought this through at all, and that scares me a lot.\"\n\n\"What exactly scares you, Lily?\"\n\n\"Well, for starters, I didn't use birth control, so...\" I paused, \"there's that.\"\n\n\"Oh, Lily, I am so, so sorry. This is entirely my fault; I shouldn't have assumed anything.\"\n\n\"It's not your fault, Dave! I believe I was begging for you to... ah... to....\"\n\n\"To cum inside you?\" I was surprised when he said the word. After the way I had been talking last night, I was now far more embarrassed by such explicit language than Dave was. Last night, with the exception of the sounds he'd made while orgasming, he had been the epitome of restraint and decorum, while I, on the other hand, had used every dirty word that I knew. Now, he seemed unfazed, while I couldn't form the syllables.\n\n\"Yes.\"\n\n\"That doesn't matter. A gentleman should always ask, Lily, and I didn't do that. I'm so sorry. What do you want to do?\"\n\n\"Well, I thought I should probably take \"the Morning After\" pill. I think the sooner you take it, the better it works.\"\n\n\"Okay, we can walk to the pharmacy as soon as we're done with breakfast. I insist on buying it for you. And Lily, if for some reason, it doesn't work, I want you to know, I'll stand by you. I'm not going to leave you to deal with this on your own... if it comes to that.\"\n\n\"Thank you, I appreciate that. That makes me feel a lot better.\"\n\n\"Still, I sense that there may be something else bothering you. Am I right?\"\n\n\"Well, yes! I mean, Dave, you're my professor. I'm your student. Do you think that you can overlook what happened last night when we're in academic situations together?\"\n\n\"Lily, if there is one thing that I can promise you, it is that whatever happens to our relationship moving forward, it will not affect me as an instructor in the least. A long time ago, I was a grad assistant who fell in love with one of my undergraduate students, and I know that my love for her did not change my teaching or how it impacted her learning at all, and last night is not going to change our relationship either. That I can absolutely promise you. On the other hand, maybe it will bother you. Do you think so?\"\n\n\"I hope not, but, Dave, there's something else. Last night was really emotionally draining. For me too, but I think, especially for you. You must have exposed a lot of raw feelings. That's hard to ignore, I think.\"\n\n\"Lily... How do I say this tactfully? Last night repaired me. In so many different ways, it healed me, probably not completely -- I doubt that will ever happen -- but, Lily, I can't tell you how differently I feel today. Yes, you're right, there were a lot of emotions that were purged from me last night, and that is something that a person, any person, has to continue to work through for him or herself. Those emotions don't just disappear overnight. I know that.\" He paused, and then without saying anything, he poured us each a cup of coffee. He handed me a cup, and I gratefully accepted. I added a little cream, stirred the coffee with a spoon, and then took a big sip. It was just what I needed.\n\nThen, he continued. \"But part of the reason that I couldn't deal with those emotions in the past was that they had manifested themselves in physical ways that only increased my emotional problems.\" He took a big drink of black coffee himself. \"It's hard for me to say this to another person out loud, especially a beautiful woman, but until last night, I was unable to perform in bed. That's not uncommon for someone my age, and so, when it first happened, I thought that maybe I just had some physical issues associated with age. I had waited an entire decade after my wife died to even try to be sexual again, and then I found that I couldn't be sexual.\"\n\n\"But, Lily, after last night, I don't believe my problems were physical. I think we both know they were deep-seated psychological issues that prevented me from... well, I think you understand. But after last night, I realize that there aren't any physical issues, at least not when I'm with you! But I guess I don't need to tell you that! You were there! You saw the effect you had on me!\"\n\nHe smiled, and then we both drank greedily from our cups. Then he paused again. I could tell he was thinking, and so to stall briefly, he stopped to spoon some fruit onto a plate for me, and then he pointed toward a container of yogurt and a box of granola on the tray next to us. I shook my head affirmatively, and while he continued talking, Dave began preparing my breakfast.\n\n\"I was convinced that I was condemned to be impotent, because I could never get past my loss. And then it became a vicious cycle -- I wanted to move on, but if I tried, I couldn't have sex, and if I couldn't have sex, I couldn't really move on. It was the classic catch-22. I didn't fully understand the root cause of my impotence, but ultimately the cause didn't matter if I couldn't find the solution.\"\n\n\"But then last night you brought me to an incredible catharsis. Probably the most profound cleansing a person could ever experience, certainly that I could ever experience, and, Lily, for that, I can never be too grateful to you. I don't know how you did it, but if you weren't such a promising literary scholar, I would suggest that maybe the field of psychotherapy could use your unlimited talents!\" He smiled and handed me the plate. Then, he began working on preparing his own breakfast.\n\n\"But, Lily, speaking absolutely selfishly, now that I have made that breakthrough, I would like us to keep going. I want you, and, just as importantly, I feel like I need you. I know that sex is probably humankind's basest instinct, but I really want to make passionate love to you again, and I think that doing so is actually healthy for me in some strange way. Our being together could certainly restore my sexual health, and I think, more importantly, it might help me psychologically.\" He paused. \"Now, if that doesn't guilt you into giving yourself up to me again, my skills as a shamelessly self-serving libertine are themselves impotent!\"\n\nHe took a bite out of some pineapple and smiled at his joke, and I returned the smile. I really did find him incredibly attractive, not just physically, but, in part, because he was so emotionally honest. Besides, he was just a great teacher, who I really admired. And beyond all that, he had furnished me with four mind-boggling orgasms only hours before in the very bed on which we were both now sitting. Maybe Dave was being self-serving in wanting to sleep with me again, but I wasn't far behind him with my own selfish desires.\n\n\"Dave, I want you too, and as long as our being together won't affect our student/teacher thing and I don't end up getting pregnant, then I want us to continue what we started last night, too.\"\n\nHe smiled again with a sense of both relief and gratitude. \"Well, then finish your breakfast and we'll walk down to the pharmacy. Or if you want to, we could take my car. I think it still starts!\" He laughed. This amazed me, and not just because I had underestimated the power of last evening's breakthrough.\n\nI don't think that Dave had driven that car in at least ten years. I guess I should have been honored that I was the first person that he was willing to take for a ride in it in so long. But suddenly the urgency of getting to the pharmacy was not as strong as it had been. All of that talk of want and desire and passion and all my thoughts of orgasms had produced more tingling between my legs, and the look of yearning on his face had me craving his cock inside me.\n\n\"Dave, do you have anywhere you need to be this morning?\"\n\n\"You mean other than the pharmacy? No, why do you ask?\"\n\n\"Because if I'm going to let you pay for that product, you might as well get as much value from it as possible, right?\" He looked really confused at first, until the light of understanding switched on, and he smiled a knowing grin.\n\n\"What are you thinking in that devious brain of yours, Ms. Williams?\"\n\n\"I was thinking that maybe we could enjoy some breakfast in bed for a little while longer before we go to the pharmacy! Though to be honest, I'd really like to take a shower beforehand. Would you mind?\"\n\nHe laughed. I think my coyness amused him. \"Breakfast in bed, huh? You mean something other than yogurt, granola, fruit, coffee and juice? Tell you what, Lily; let's finish our yogurt, granola, fruit, coffee, and juice, and I'll be waiting for you when you get out of the shower. Then, we can have that breakfast in bed!\"\n\nI smiled back at him. It was nice of Dave not to make me say what I felt too shy to communicate out loud. It was ironic too, because now I was going to expose myself to him completely. There would be no darkness, no dim blue light to cloak my body this morning. We were both about to completely reveal ourselves to each other, both physically and emotionally. I could see it in his eyes and in the crotch of his jeans; he was as excited as I was.\n\nWe finished eating, and then Dave got me a washcloth and towel and showed me to the bathroom. I took a leisurely shower, letting the warm water and soap run sensuously between my legs. The longer I spent there, the hornier I got, and I could feel my prudence and discretion disappearing, like the water swirling down the drain beneath my feet.\n\nI hadn't washed my hair, so I just dried off the rest of my body and combed it. Then, I put my bra and panties back on and walked shamelessly back into the bedroom.\n\nDave was on the bed. I knew he was naked. He had the covers pulled up to his waist, but it wasn't difficult to tell that he had done so to conceal his erection. It hadn't worked. His right hand was under the covers, which were stretched taught over his pole, like he had just pitched his tent! When I approached the bed, he said breathlessly, \"Oh my god, you are unbelievable, Lily! Your loveliness is just devastating!\"\n\nI pulled back the covers to reveal Dave's hand gripped tightly around the base of his erect penis, which was pointing suggestively toward the ceiling. His legs were spread slightly, and when he moved his hand away, I could see how hard he was. His balls were hairless and more darkly pigmented than the skin around them, and they hung slackly in his scrotum. The head of his dick was engorged, even more than it had been last night, and it was almost a dark purple in color. The veins in his shaft, like those in his balls, were blue, prominent, and bulging.\n\n\"Mmmh,\" I murmured with intrigue, adding sarcastically, \"are you sure you're ready?\"",
        "The first glimpse of his rock hard cock had completely dispelled my bashfulness, and I could tell that Dave was aware of that, so he was clearly trying to be ironic when he said with as much feigned erudition as he could muster, \"Had we, but world enough, and time, this coyness, Lily, were no crime....\"\n\n\"Oh, Dr. Heard,\" I responded, like the cheeky, young bimbo in a bad movie, \"breaking out the carpe diem poetry now, are we? You are desperate! Since you appear to be so... shall we say... enamored of me, I think that it would only be appropriate if you allow me to finish what I started last night.\" I think we both knew exactly where this was going, since there was little chance that Dave was going to do anything to curb my unabashed, erotic enthusiasm this morning.\n\nI pulled the covers all the way back, and I climbed onto the bottom of the mattress, and crawled between Dave's splayed legs. First, I grasped him around the base of his cock and pushed it toward him, so that my access to his balls was unhindered. Then, I began running my tongue back and forth over his testicles, kissing and licking them ardently, while he quietly moaned his approval. Then, I began sucking one, and then the other, into my mouth, and his low sighs soon morphed into louder groans of pleasure.\n\nI was drooling all over his balls, and I could see my saliva dripping down his sagging scrotum when I leaned back to look at my handiwork. Then, running my hand over his wet sack to scoop up as much residual spit as I could, I reached back to his shaft and began stroking it in my fist. I started slowly, but soon began building my rhythm.\n\nAnd then I resolved that I would make Dave cum with my mouth. He hadn't let me do that the night before, but I knew that it was possible, and I figured that if I could take him into my throat, I would get him there sooner, rather than later.\n\nSo, while I continued to apply a tight grip on the base of his cock, I started to take it into my mouth, applying as much suction as I could, before beginning the movement of my lips up and down the length of his shaft. Then, I changed things up just a bit. For a moment, I concentrated exclusively on the bulbous head of his penis, wrapping my wet lips around the crown, while my tongue slithered and snaked over, around, and on top of his glans.\n\nNow, he was growling even louder, and when my lips, tongue and teeth began raking the sensitive V on the back of his engorged helmet, Dave began writhing underneath me, thrusting himself deeper into my mouth and grunting lewdly, \"Ugh, ugh, uugghh, uugghh, ooohhh, ooohhh, ugh, ugh, ugh...\"\n\nThe grunting sounds were coming faster now, and I knew that he was really close, but then, I realized he wanted to postpone his climax for as long as he could. He had resigned himself to the fact that I was going to make him cum with my mouth, but he wanted to last just a little longer, so then he struggled to vocalize a request between clenched teeth, trying hard just to hold on until he could make his plea known to me, \"Lily, would you turn around on top of me, so that I can taste you?\"\n\nIt was a modest entreaty, and he knew I wouldn't refuse it, but it served its intended purpose, which was to force me to remove my insistent mouth from his cock long enough for him to stave off his impending orgasm.\n\nWhen I spun around, planting my slender knees on either side of his head, I felt him slide my panties to the side, and then his tongue touched my wetness before I had even lowered myself to his face. He must have been craning his neck to reach me, but when I felt that tongue make contact with my clit, I involuntarily sat myself down until my pussy engulfed his face lewdly, and with a raucous, exhalation of my own, \"Oh god, yeah,\" I urged his mouth to make love to my wet hole as I ground my clit against his lips.\n\nAnd when I had recovered sufficiently from the suddenness of his oral onslaught on my slit, I leaned forward and moving my mouth back to its former residence as the warm, wet scabbard for his sword, I grasped him roughly around the root again and lowered my lips to his dagger.\n\nThis time there would be no reprieve. I was quickly back to sliding my lips up and down his length, and soon he was back to thrusting himself deeper into me, though his grunting sounds now were somewhat muted by my pussy.\n\nNow I was leaking gaudy amounts of saliva on his shaft, and the excess was dripping down his balls, and all over his lightly tufted pubic mound, and within mere seconds, he was involuntarily plunging his cockhead into my throat again, and this time, I wasn't gagging indecently like I had the previous night. The lubrication of my saliva was making his cock's penetration smooth and effortless, and then I could feel him release his own mouth from my sex, and one long, low grunt, exactly like the ones I'd heard nine hours earlier -- just after midnight that morning -- erupted from inside him, \"Uuuuuuuuuuuuuuuuuuuuuggggggggggghhhhhhhhhhh!\"\n\nAnd simultaneously, I slid my mouth off his stiff erection, and, with my hand still wrapped tightly around it, I could feel a massive contraction in his root as a gigantic spurt of pearly ejaculate shot like a missile from its launching pad, spurting straight upwards two, maybe three feet into the stratosphere until gravity called it back to Earth, and it landed with a noticeable splat on the side of my neck, running down to my shoulder, where it coated my pale blue, bra strap in translucent goo.\n\nThe next few jets were less powerful, but glazed my lips and cheek with more of his viscous cum. A few more contractions dripped spunk on my chin and down into my cleavage, and after 20 seconds or so, the contractions slowed and then ceased entirely, while a little more seed continued to ooze from the end of his cock.\n\nI had never smelled or tasted a man's cum before that day, and I had assumed it would stink and be awful tasting, but I was pleasantly surprised that it was not only inoffensive, but also had both an unusual and intriguing odor and taste that I found agreeable, even pleasing. It was salty, but it also had a musky, kind of organic smell and flavor, and just a bit of a sweet or floral odor and taste. I didn't slurp the stuff down like some crazed cum slut, but I swallowed what was already on my lips, and even slid a little from my chin into my mouth for good measure. I decided I liked it.\n\nDave's heart continued beating through his chest, and I could feel that pleasurable thumping on my pubic mound. Then, without saying anything, Dave went back to my pussy, eating it with a renewed vigor that soon had me whimpering with pleasure, and when I went back to grinding my overheated sex on his face, he soon caught my clit hood in his mouth and began sucking it back and forth between his lips, until my demure button materialized from its fleshy, hiding place, where he could lash it pitilessly with his tongue.\n\nAnd then only a minute or two after I had brought Dave off, my orgasm started welling up inside me, until his prolonged assault on my clit had me screaming my own release, \"Oh my god, I'm cumming! I'm cumming!\"\n\nDave continued to lap at my pussy lips, drinking in my cum, just as I had done to his, and I rode out my climax sliding my hips back and forth so that I was grinding myself reflexively up and down his face from his nose to his chin for at least a minute or so.\n\nWhen I climbed off him and stood next to the bed, we stared at each other smiling wryly. Both of us looked a sight! Our faces were wet and sticky, and I had semen dripping down the inside and outside of my bra. My panties were scrunched up and exposed my pussy and pubic hair to the morning light.\n\nI noticed now that Dave had moved the box of tissues that I had found earlier in the morning on his dresser to the night stand next to the bed, and he reached for it now to offer me the opportunity to clean his cum from my face, neck, shoulder, and chest. He used one on his own face as well. Then, he grabbed several more and shared them with me. We both used the tissues to wipe up the garish mixture of saliva and cum from our genitalia.\n\nThen, I leaned forward and kissed him, and he reached for me and pulled me toward him onto the bed, so that I soon lay next to him in a sensual embrace. We kissed, caressed and hugged each other for a good 20 minutes, whispering soft nothings and tender endearments in each other's ears.\n\nI suppose it is human nature to always want more, and I was nothing, if not unapologetically human. The saying goes, \"You can't have your cake, and eat it too,\" but who doesn't like cake? And who, if there were no consequences to pay, wouldn't eat it for breakfast?\n\nI reminded Dave that I had asked for \"breakfast in bed,\" and, with a kind of Aristotelian logic pointed out that \"oral sex is a nice appetizer, but I think I'm hungry for the main course.\" I calculated, with a 20 minutes refractory period, Dave was ready to prepare something more substantial -- the entr\u00e9es, if you will. As I had already learned, he was the consummate chef.\n\nHe was naked, and now with the sun streaming through the east window, it seemed only fair that I, too, should bare my soul. So, as I lay on top of him, Dave reached around me to unhook my bra, and soon he slid my panties down my legs and off as well and tossed both cavalierly to the floor. Then, he began to kiss my neck and shoulders, and soon he was suckling my fat areolas, and gently biting my nipples. Then simultaneously, he reached down between my legs, so that his fingers could dance over my wet cleft and around my sensitive clitoris.\n\nHe had me really excited really quickly, and I wanted him inside me as soon as possible. So I lifted myself from my prone position atop him, and knelt between his legs to begin stroking his semi-flaccid cock. I was amazed at how quickly he got hard again. He may have been 60 years old, but now years later, after I have been with other men, I realize that Dave could fuck like a man half his age. The next few hours would prove that.\n\nWhen I was satisfied that he couldn't get any more engorged, I crawled on top of him and lowered my eager pussy to his throbbing erection. I started moving slowly, leaning toward him as I had done the previous night; though this time I supported myself with my hands on his chest.\n\nWith my outstretched arms only a foot or so apart, I began to ride him. This position afforded me the chance to squeeze my ample breasts between my arms, pushing them outward toward his face, and when I did so, just as he had done the night before, Dave too leaned forward and again began sucking my tits into his mouth with great relish. He paused just long enough between his languid licking, sucking, and nibbling to tell me, \"Lily, your breasts drive me mad with desire. They're the most beautiful breasts I've ever seen!\"\n\nBut then, for some reason, he released my fat tit from his mouth momentarily, and in an attempt to tease him and drive him even crazier with desire, I leaned back, so that he could not reach my soft, round globes with his hands, much less his mouth.\n\nThe move had the added effect of pulling his cock toward me so that he was now entering my creamy pussy from an unusual angle, and deciding that I liked the feel of him penetrating me this way, I leaned even farther back, and lifted my knees off the mattress, replacing them with my feet out in front of me astride his waist, so that I had better leverage to slide on his stiff spear. Then, I put my hands behind me on the mattress, pulling Dave's cock toward me at an even sharper and more deliriously erotic slant.\n\nNow, instead of me riding him, he was lying flat on his back, plunging himself into me, which I could tell was as enjoyable for him as it was for me. Then, he did something curious. Without saying anything, he reached both of his arms out in front of him, as if he wanted to touch my tits again. This would have forced me forward and would have prevented me from receiving those deep thrusts. Initially, I resisted. But then I realized that what he actually wanted was for me to grasp both of his hands with mine, and when I reached my hands out to clasp his, I was able to lean even farther back, and Dave was plunging his engorged cock even more vigorously and deeper into me, while I met his thrusts with my own rocking movements. All the while we kept our hands clasped together with each of leaning back as far as we could.\n\nI realized that this position also allowed me to squeeze my tits together with my outstretched arms, just as I had when I was riding atop him. Now my breasts looked huge, even bigger than they had earlier when I'd sandwiched them between my arms as I rode atop him. I was staring down over my provocative cleavage watching his glistening cock entering and exiting my sex.\n\nThe scene was so sensual that I doubted that it would take me very long to cum. Dave was building a rhythm and the incredible feeling inside me was building with it. I began to notice that if I contracted my pussy muscles so that they pushed outward against his plunging intrusions, the effect was dizzyingly erotic. And before I knew it, I was groaning with bliss, \"Oh my god, Dave! Oh, you feel so good inside me! Oh! Oh! Oh! Oh! Oh! Oh! Oh! Ooohhh!\"\n\nAnd then, with me still lying as far back as I could in the saddle, Dave suddenly let go of my left hand, and with his right hand began touching my clit ever so lightly, running just the very tip of his index finger back and forth across my bud, and instantaneously it hit me, an orgasm so powerful that I lost control. I screamed, half out of pleasure and half out of shock, at the strength of the spasms that began coursing through me. Each shriek increased in pitch and volume, \"Aaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhh! Aaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhh! Aaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhh! Aaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhh! Aaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhh! Aaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhh!\"\n\nAnd as he continued to thrust himself into me at a frenetic pace, I squirted a forceful shot of arousal so potent that, had his hand not shielded its presumed trajectory, I'm certain the spurt would have hit him full on in the face. Instead, it bathed his hand in warm cum, which then, having no place else to go, poured over my pussy and his cock, dripping down between both our inner thighs until I could see it soaking into the sheets and mattress.\n\nDave slowed his piston strokes, as I rode my climax to its conclusion. Then, the reality of what I had done hit me, and I froze completely. I was incredibly embarrassed. I had never done anything like that before. I didn't even know that I was capable of such physical vulgarity, and so I began apologizing profusely, \"Dave, I'm so sorry! I don't know what just happened! I've never done that before. I'm so ashamed!\"\n\nHe was still inside me and hard as a rock, and he was still moving ever so slowly, but then his expression changed -- as if he sensed that I needed to know something, and that he was the only person in the world who could edify me on this particular topic at this particular moment. And so without stopping his movements, he smiled up at me and asked kindly, \"Why would you be embarrassed, Lily?\" He paused. I didn't say anything, so he continued.\n\n\"What just happened was a natural, human response. There is no reason for you to be ashamed by it. At the risk of ruining this incredible moment, I might remind you of something that Maya Angelou once said -- she actually stole it from the Roman poet Terence, but maybe it's more memorable in her slightly more informal and modern phrasing -- 'We are all human,\" she said. \"Therefore, nothing human can be alien to us.'\"\n\nThat blew me away! I mean, who, except Dave Heard, would have said such a thing right in the middle of fucking? No one, of course! I laughed at the absurdity of it all. \"How do you do that?\" I asked smiling at him with a strange mixture of amusement and admiration. \"How do you think of things like that at such a time?\" He didn't say anything, but continued smiling back at me, while he also started to push himself into me a little more forcefully.\n\nBut then I realized how much better it had made me feel. Instead of killing the moment, he had salvaged it. I don't think that I could have continued had he not banished my shame from the room without discussion. I was not allowed to be embarrassed, and suddenly I was embarrassed no longer.\n\nI leaned forward again, dropped my knees to the wet sheets, and kissed him with gratitude. But then I realized that my cumming in such a dramatic way had done nothing to diminish his desire. Instead, I realized he was even more turned on than he had been, and he wasn't even close to being done.\n\nAnd in a quick, but graceful movement, he grasped me by my waist and gently lifted me off him. And then, in an instant, he'd turned me around, and I was on all fours, and he was behind me, sliding his stiffness back into me, grasping me around my hips, and resuming his vigorous thrusts.\n\nAnd now, I, too, was turned on again, and soon his rhythm was building, and his thighs and hips were slapping against my ass and my thighs, while I gyrated my butt backward to meet his plunging strokes. Now, I was transfixed by the reverberations in the still room -- the staccato reports of our haunches crashing together in feverish piston-fucking, the sloshing sounds of his cock penetrating my saturated hole, and his heavy breathing and soft moans.\n\nI turned around to look at him, and our eyes met in an intense visual kiss, and I could see the passion in his eyes, the desire coursing through him, and I knew he was going to cum too. And then he placed his right hand on the small of my back and pushed down, and I slumped forward, further exposing my ass to his vigorous thrusting.\n\nAnd then with my face buried in the sheets, I involuntarily reached back between my legs with my own hand and began to touch myself, gently caressing my clit, which, it seemed, should have been numb to stimulation, but, I discovered happily, definitely was not. My digits skipped across my clit delicately, and then I spread two fingers on either side of my fleshy hood, and began sawing them back and forth, squeezing my sensitive pearl between them as I rubbed myself briskly.\n\nNow Dave's sensual groans were adding more inspiration to the already erotic soundtrack playing, \"Uugghh! Uugghh! Uugghh! Uugghh! Uuuggghhh! Uuuggghhh! Uuuggghhh! Uuuggghhh! Uuuugggghhhh! Uuuugggghhhh! Uuuugggghhhh! Uuuugggghhhh! Uuuuuggggghhhhh! Uuuuuggggghhhhh! Uuuuuggggghhhhh! Uuuuuggggghhhhh! Uuuuuugggggghhhhhh! Uuuuuugggggghhhhhh! Uuuuuugggggghhhhhh! Uuuuuugggggghhhhhh!\" and then simultaneously, we were both there again, and I announced my intentions, \"Oh, I'm cumming again! I'm cumming again! Oh my god, I'm cumming again! Oh fuck! Aaaaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhhhh!\"\n\nAnd then before my shriek had even finished leaving me, Dave unleashed another of his patented and elongated orgasmic grunts, \"Uuuuuuuuuuuuuuuuuuuuuggggggggggghhhhhhhhhhh!\" and I could feel his release explode inside me. Then, he thrust himself as far into me as he could and held himself there, grabbing my ass tightly and holding on like there was no tomorrow, while I felt six or seven more massive contractions of his manhood unleash a flood of seed deep in my vagina.\n\nI sensed that both of us could feel the rest of each other's convulsions wax and then wane, and a half a minute later, Dave collapsed on top of me with his cock still buried deep inside, pinning me to the mattress with his body, while both of us struggled for breaths, our hearts pounding in perfect rhythm in our chests.\n\nI soon realized that instead of crushing me, Dave was supporting enough of his weight with his knees and elbows that the feeling of his warm body on top of me was intensely satisfying. After 10 minutes or so of rest, he began kissing my neck, shoulders, and the side of my face, and then he spoke again softly in my ear, \"Maybe we should get you to the pharmacy now, Lily.\"",
        "I had never considered myself a particularly demanding person. And I certainly wasn't greedy or voracious in any way, except perhaps when it came to reading. I'd cum three times already that morning, and Dave had had two huge orgasms of his own. That made seven for me, and three for him since last night, but now I was an insatiable slut, and I couldn't get enough of Dave's cock.\n\nI turned my head around as far as could, so that Dave could see my face and the passion it could not hide. And then twice I ran my tongue in a full counterclockwise circle around my lips -- which was, I guess, the sluttiest thing that I knew how to do, and then I said sarcastically, but with a perfectly slutty pout, \"I don't want breakfast to be over! I'm still hungry!\" He smiled and shook his head.\n\nWe didn't leave Dave's bedroom until the early afternoon. He took me in practically every imaginable position, and made me cum in every one. Then just before noon, he knelt on the bed while I lie back with my legs spread wide, my knees bent, and my feet resting flat on his thighs, so that he was supporting my butt with his hands, and I was lying back on a steep slant, licking my tits that were falling in my face, while I looked up the length of my torso to watch Dave eating my pussy with great delight and bringing me to one more earth-shattering climax with his mouth again. In all, I came 13 times that weekend.\n\nWe stopped, showered together, and then walked down to the pharmacy, and I got the Morning After pill, except that now it was the Afternoon After pill! Whatever it was, it worked its magic, and the next week I saw my OB/GYN and started taking the pill.\n\nAnd for the next five years, Dave and I carried on our affair. We were judicious, I thought, careful not to let on to anyone about our relationship. We didn't go out together in public, unless it was a university function that made our being together understandable and, therefore, acceptable.\n\nAnd that wasn't the only way we showed restraint. Though I'm sure that in some undeniable and unavoidable way I loved him, loved him with a passion that far exceeded platonic friendship and suspected that he felt similarly about me, we behaved as if we were just lovers and not in love.\n\nI think that in some strange way, we respected each other too much for our relationship to turn into romance. I don't know why I say that, because I think that two people have to have complete and total respect for each other in order to be in a successfully romantic relationship, but ours was just such a mutually beneficial association that romantic love somehow, someway seemed to be kept at bay.\n\nWe talked about it, but we were both so satisfied being sexual partners that neither of us wanted to risk losing that so that we could replace it with something else. Besides, the impediments were just too great.\n\nI realized that Dave was right when he said that he was far too old to be my \"boyfriend,\" and I was far too young to be his \"girl.\" It was just too impractical to think that he could introduce me to his family or colleagues as his significant other, and I felt the same way about introducing him to my parents and siblings. He was ten years older than my father, for god's sakes! Instead, we just had sex, and, when we weren't having sex, discussed literature and criticism together.\n\nI had him for two more classes, and he helped me get four other articles published in the university's Literary Review, and when I graduated, three years after I first met him, Dave got me a position as a grad assistant, working for him while I was studying for my doctorate.\n\nAnd we were there for each other in emotional ways as well. In the spring of my second year in grad school, just before I was about to defend my dissertation, Dave's mother died. She was quite old -- into her 90s when she passed -- and she'd been ill for a few months right before, so it wasn't as if it was some kind of shock for him to lose her, but I know it hurt nonetheless, and so I was there for him and happily joined him on a trip back to St. Cloud, Minnesota, his hometown, to attend the funeral.\n\nI was his grad assistant, so I suppose it wasn't too outrageous that I was there, attending the funeral of an old, Catholic woman, the mother of the man that I worked for. But I felt strange being there with him nonetheless.\n\nI knew that it was an opportunity to explore his roots, and I determined that knowing where he had come from might help me to understand him even better, but the entire time I was there, I felt like I was on display somehow, a little like some insect pinned to a piece of foam board in some crude entomological exhibit at a Sixth Grade science fair.\n\nAnd that trip did teach me a great deal about Dave Heard. I understood after going that he couldn't have ever asked me to marry him or even to be his significant other, not with a family as conservative and devout as Dave's people. They were kind and all, polite to a fault, but there was no way that any of them could have understood, much less accepted, his dating or, god forbid, marrying a young woman 42 years his junior.\n\nBy the time I was born, Dave already had three grown children and had been married to Catherine for almost 20 years. I was in First Grade when they all died. How could he explain our relationship to the rest of his family?\n\nAnd then I came to another illuminating revelation. I discovered that scholarly work: literature, criticism, the whole university scene was, for Dave, an escape -- a way out. He couldn't have lived in St. Cloud, Minnesota, even if St. Cloud was, in fact, a cloud, which it clearly wasn't. He knew that by having the job that he did, his family could be proud of his cultured learning and his academic accomplishments, without them even being aware of his iconoclastic and non-conformist lifestyle, his abhorrence of their conservative and doctrinal values.\n\nCatherine's family had come from somewhere near Chicago, and they had been married there, so the only time that Dave's relatives had ever come to Madison to see him was for the memorial service that was held for his dead wife and children.\n\nHe had brought his wife and children back to St. Cloud with him plenty of times, but other than that one trip his mother and siblings made to Madison, Dave must have been a complete and utter mystery to them. He had projected an image of conventionalism -- a wife, three children, a good job at an elite university -- even while he rejected so much of that conventionalism.\n\nWe went to the funeral, and Dave, along with his brother and two sisters, spoke about their mother. His was a moving tribute, a touching story of his childhood and how his mother had proven herself to be patient and loving to him, even without ever really being patient and loving, as that was not really the style of times. He went on to discuss how her long, long life stood as symbol of her perseverance, her love for life, and her faith. When he was done, there wasn't a dry eye in the church.\n\nAfterward we went to a reception in the parish hall, but I knew right away that it was too much for him. After we talked to some people, and nibbled at some sandwiches and some macaroni and fruit salad, Dave asked me if I wanted to go for a walk. He said that he wanted to talk to me privately. I was more than happy to get out, so we left and began walking west, toward the river, just on the edge of downtown St. Cloud.\n\nSt. Cloud, Minnesota, is a pretty mundane place. It was so unremarkable, so unbelievably modest in its very existence and in the existences of the people that lived in it, and I now understood that Dave wanted me to see that this was where he was from, that he had been raised by those unremarkable people in that modest place -- that he wasn't some hot shit professor, destined for some Ivy League college and born and bred in the high and mighty halls of some elite prep school to be a literary scholar.\n\nWithin a couple of minutes, we got to an old, rusty railroad bridge over the Mississippi. It was no longer in use, having been replaced by a new bridge to the north, but it afforded a beautiful vantage point from which to view the river, and so we walked until we were halfway across it, suspended thirty feet above the water, and then Dave stopped, and we leaned on the steel railings looking out over the Upper Mississippi.\n\n\"Well, there it is, Lily. Huck's river!\" He paused. \"I guess it's my river too; I spent a lot of time on this bridge when I was younger. It was a good place to think.\"\n\n\"What did you think about when you were here, Dave?\"\n\nHe didn't answer right away. I knew that he was thinking, remembering. \"God, I guess. I always saw this old river as a symbol of something, freedom probably, but also something timeless, nurturing, and honest. As I saw it, it was always a place far removed from man's influence -- his cruelty, hypocrisy, and destruction -- all the things that I saw happening when I went to church or school or read a newspaper or watched television. Just like Huck! I think that's why that first article of yours made such an impression on me, because you captured those emotions so eloquently when you wrote.\"\n\n\"Yeah, but I didn't live it -- you did!\" I paused for a long time, and he didn't say anything, so I stared at the swiftly moving water, before continuing, \"That was a long time ago, wasn't it? Has it changed any?\"\n\n\"Not really, and neither has that church or the schools I went to or the people in them.\" Again, he didn't say anything for a long time, and I knew that he was going to get to something else entirely. I guess he just needed time -- something that I sensed he believed was in short supply.\n\nAnd then he was out with it. \"Lily, I think it's time for you to move on from me. You are a young, beautiful, and vibrant woman, and I'm an old man -- Ol' Man River, I guess! And it's time for me to move on, too.\"\n\nI knew it would come sooner or later. It was inevitable. The impediments to us being together were simply too great, and if we couldn't be together for the long haul, then there was going to come a time, when we would have to part. I knew that; I'd known it for a long time, but I guess I always thought it would probably be me saying these words, not Dave. Still, like Marvell's mistress, I played coy,\n\n\"What do you mean, Dave? What are you saying?\"\n\n\"I've got a plan, Lily. As soon as you defend your dissertation, you're going to have your doctorate, and then you can start teaching. I've already had some discussions with Dean Kurimay and some of the other administrators. They want you, Lily! They want you to teach and to research and to write, and they're going to need to find a new professor for the fall term. You're in an ideal position to take that job, and you're perfect for it too! I've done a little cursory research -- do you know that you'd be the youngest professor ever to accept an associate position at the university? 23 years old, Jesus!\"\n\n\"Whoa, slow down, Dave. Why does the university need to find a new professor for the fall term?\" I knew there was something else, something he hadn't yet told me.\n\n\"Because I'm retiring! I'm taking down my shingle, Lily! And, more importantly, you're going to be hanging yours up in its place!\"\n\n\"What are you talking about, Dave? What the hell are you talking about?\"\n\n\"I'm quitting, Lily, and you're going to take my place. It has all been arranged. The university wants you, and I will only submit my resignation on the condition that you be hired as my replacement. Those are my terms, and amazingly, the university is willing to accept those terms, because they know what a star you are!\"\n\n\"And then, Lily, you're going to start dating men your own age, and because you are stunningly beautiful, brilliant, wonderfully loving and generous, and one of the most desirable young women in all of Madison, you're going to attract a million suitors, and you're going to pick out the one that will enrich your life and your destiny, and you, Lily, are going to live happily ever after with all your dreams fulfilled! I've planned it all out!\" He laughed.\n\nAt first, I thought that Dave's intention was to teach me how to fly solo, to release the fledgling, so to speak, but now I realized that his purpose was much more complicated, and I marveled at how impressively he had contrived his \"plan.\" It was bribery of sorts -- bribery that involved not only me, but the university as well. I realized that I, of course, was the beneficiary of that bribe, but he was bribing me nonetheless.\n\nThe payoff for setting myself free from him was my own career, and he had determined that the lure of being offered that career, something I had realized I wanted since the day I first saw Dave Heard in White Hall five years ago, was possibly even more powerful than the affection that I had for him, considering that both of us knew that we couldn't stay together anyway.\n\nHe smiled, and laughed again at his joke, but I was crestfallen. I started sobbing, not because Dave was insisting on me living my own life, but because he was giving himself up for me. \"But I don't want to move on from you, and I don't want to deny the thousands of people that need you to do what no one else can do, not me, not anyone else!\"\n\n\"Oh, you're wrong about that, Lily! You're definitely wrong on that count. Do you remember me telling you and the other undergrads some time ago that I would know that I had done my job and done it well when one of my students took that job away from me? Well, Lily, that time has come, and you've already surpassed me!\"\n\n\"All of my students already know that, Lily! All of the people that run the university know that, Lily! The only person who doesn't know it is you! Besides, I'm not going anywhere! Just not back to work! I'll still be here. Right where I've always been! \"I'm 65 years old, Lily; I've been in a university setting for nearly 50 years now!\" He paused, and I continued to cry. I couldn't say anything.\n\n\"Lily, will you do something for me, please?\" He didn't wait for me to answer. He was staring almost straight down, looking at the river. \"Pick out a drop of water, somewhere in the midst of all that movement beneath us. One drop, just one drop, and then try to imagine, where that drop of water will be 50 years from now. And then try to imagine, where it would have traveled, what it would have seen in that span of time.\"\n\nIt was a provocative thought, and when I did what he asked, a million images and thoughts came to mind.\n\n\"I'm out to sea, Lily. I'm already floating somewhere, in some paradise. I'm floating, someplace where everyone is joyous, where people don't work! Maybe the South Pacific! I thought that was going to be paradise once. It wasn't, but you know, someplace like that -- heaven maybe.\"\n\n\"Lily, I'm convinced that the most important thing that anyone can learn in his or her life is how to be empathetic, to be able to look someone else in the eyes and then \"stand in his shoes and walk around in them\" -- you know, Harper Lee -- ol' Atticus Finch, and all.\"\n\n\"I'm trying to get you to see this from my perspective, because even if you won't see it from your own, even if you don't see what everyone else sees, even if you won't acknowledge that everyone else has already taken a walk in your shoes and discovered that those shoes will take them much farther than they could ever get on their own, much farther than I could ever take them, then maybe you'll put yourself in my shoes and see this world from the places where I've been walking.\"\n\n\"That's why I brought you here, Lily -- thought if you could see me in my ol' stompin' grounds, so to speak, you would understand. Lily, I've gone as far as I can go; now, I've got to hand the keys to someone who can drive the BMW out of the garage!\" Then, he winked at me! He winked at me! That blew me away!\n\nHow did he do that shit? How the hell did he do it? How did he waltz so gracefully past every discussion of every disgustingly unfair thing that fate had shoved down his throat, and somehow bring it all back to a joke, another self-deprecating joke? How did he so effortlessly get himself out of every impossibly horrible situation that life, his fucking life, had thrown at him, and act like it was someone else's accomplishment, not his?\n\nAnd how could he have understood from the very moment that he first touched my timid, white hand, that his fate was to teach something to me, something that no one else in this world could ever have taught me, all the while knowing that my fate was to teach him something that one else in this world could ever have taught him? How did he see that far down the river?\n\nHe was right. I understood it now, understood that what he was proposing was probably for the best, for everyone's best. I was astonished at how he had woven this incredibly fortuitous set of circumstances together, whereby he got what he wanted by coercing me, essentially extorting me with kindness, while at the same time, seeing the situation from this incredibly expansive perspective in which he understood what was best for everyone, including himself.\n\nIt was a little like his line in bed that morning after our first night together -- the \"Morning After\" morning, as we had come to call it! -- when he told me that my sleeping with him was good for his physical and psychological health and, considering that, that I should, by all rights, feel guilty if I didn't do so!\n\nHe knew what was best for me long before I did. He knew that our relationship was mutually beneficial, and that by getting what he wanted, he forced me to get what I needed. And he somehow managed all of that while maintaining this unbelievable humility, modesty, and unpretentiousness. I realized he had a lot more in common with Huck Finn, than he did Tom Sawyer. He was still just a boy from St. Cloud, who spent his time staring at a river, dreaming.\n\nI just shook my head. I really couldn't talk, but I reached for him, buried my face in his chest, and as the cool spring breeze from the northwest blew across the chill waters of the Mississippi, we stood there on that rusty bridge hugging each other.\n\nWe drove back to Madison. I successfully defended my dissertation in early May and graduated a few weeks later. My parents drove over from Cedarburg, and I did the whole silly cap and gown thing, just as I had two years earlier, and I went out for dinner with them, my siblings and Dave.\n\nBut the next night, Dave hosted his own graduation party for me at his house. Like the party he held for the publication of that first scholarly article, and each subsequent party for every milestone in my academic career, I was his only guest.\n\nI joined him, as always, in that den/study of his. He poured us each a glass of wine, just had he had that first night, and then he walked over to his stereo to put on some music.\n\n\"You know, Lily, I have always regarded music as a superior way to express the subtlety of feelings and emotions that I'm too inarticulate to put into words myself, which is ironic, since I've spent most of my life pretending that I knew and understood words.\" He took a drink of his wine.\n\n\"I don't think that anyone ever really does. Words, like time itself, are ephemeral, they both betray us, and so at the very moments when we need them the most, they're gone, and most of us don't appreciate either one, except maybe, as Thorton Wilder put it, the 'Saints and poets.'\"\n\n\"But songs are different. I find them to be much more timeless. I've always thought that they capture moments for me, and that sometimes it is easier to piece together the events of my life and the lives of those that I care about with songs, rather than with any other vehicle. So, anyway, that's why I picked one out for this occasion, Lily. I think it's perfect -- my dedication to you and your future.\"",
        "\"I don't know if you've ever heard of this band -- I sort of doubt it -- they're pretty obscure, and this is almost 15 years old now, but I've always loved these guys. Sort of a cross between The Beatles and maybe somebody like Squeeze. Their name is Cotton Mather -- which, I find interesting in and of itself -- considering who the real \"Cotton Mather\" was!\"\n\n\"And the songwriter, Robert Harrison -- I think he must be a lot smarter than I am, at least a lot more articulate, because I never knew what exactly I wanted to say to you, Lily, what I needed to say to you to set you free, but then there's this song, and I realized old Robert Harrison, he did... I think he saw you coming, Lily!\"\n\n\"Anyway, ever since I met you, I haven't been able to keep it out of my head. I've been listening to it a lot lately, waiting patiently until the time was right for me to play it for you -- I knew that time would come eventually. There had to be a tonight!\"\n\nHe cued up the tune, and the strains of this dreamy, kind of ethereal, high melody washed through the room, trickling down and over me, like a brook tumbling over rocks, falling gently toward a great river, and then slowly, languidly out to sea. The name of the song was \"Lily Dreams On.\"\n\nThat was five years ago, and since that time that song has become a part of me, become embedded as deeply in my soul as anything I've ever thought, done, said, or, most importantly, dreamed. I long ago memorized the lyrics:\n\nLily I hope you picture me in your dreams\n\nPut down your King James Bible\n\nYou don't need no kings\n\nClose your eyes\n\nBaby, I'll dry mine\n\nEchoes through the phone\n\nFar from this\n\nLily dreams on\n\nThink back to fields of Catherine\n\nYou used to play\n\nI swore I heard you laughing\n\nAnd almost say\n\n\"Pull your morals down,\n\nTake away the past,\n\nAnd let the past be gone\"\n\nFar from this\n\nLily dreams on\n\nFar from this\n\nLily dreams on\n\nWe drank more wine, had another wonderful dinner that Dave prepared, and I asked to hear that song two more times that same night. Then, we went to bed together and made love all night long. It was the last time we slept together.\n\nThat fall I started my job at the university, and I began dating other men, while Dave started his own relationship with a pretty professor -- a widowed, 50-something, Linguistic instructor named Martha May, with whom he'd already had an affair the year before I entered the university. This time things went a lot better. She soon moved into Dave's house, and then he asked her to marry him. And then Dave asked me... and I said \"yes,\" and I walked him down the aisle.\n\nFor the past four years and half years, I've visited Dave and/or Martha at least once every week. Other than my own husband, they're my closest friends.\n\nMy father died the next year, suddenly from a heart attack. I was devastated, but so incredibly grateful that Dave and Martha joined me at the funeral mass, just as I had done for his mother's. I tried my best, probably unsuccessfully, to eulogize my Dad, but I couldn't help thinking that a lot of what I was saying was as true of Dave as it was of Dad.\n\nAnd then a year after the funeral, I met Tyler Churchill, a graphic artist a couple years older than me who moved in to my building that year. Tyler is amazing. He's handsome, kind, loving, and brilliant. We began dating, fell in love, and within a year, we, too, were married. With my father gone, it only seemed appropriate: I asked Dave to walk me down the aisle.\n\nThat was two and a half years ago. And then, about six months ago when I turned 29, Tyler and I decided it was the right time to try to have children. Now, we're going have a baby boy, and we've already got the name picked out.\n\nIt seems as if I have lived two lives: the pre-Dave years, when I aspired to be an intellectual and a scholar and all that entails, and A.D. -- after Dave -- when I learned that all that intellectualism, all that scholasticism is just so much cerebral masturbation, ultimately designed to make you feel better about yourself because you haven't changed the world in quite the way you thought you would. Not that I don't love my job -- I do -- but you have to take everything with a grain of salt. Dave taught me that.\n\nIt is amazing to me that over a decade after I first met him and shared his bed, we grew to love each other the way that old, old friends do. Maintaining that love while we are both married to other people demanded a requisite set of skills.\n\nI never forgot Dave's words to me, standing on that railroad bridge in St. Cloud, and because of those words, I've come to learn that love, real true love, regardless of whether it is platonic or romantic, requires the qualities of Dave's Mississippi River -- it has to be \"timeless, nurturing, and honest.\" And so in an effort to be honest, it only seemed fair that both Martha and Tyler should be made fully aware of the five-year love affair that changed our lives.\n\nOnce we told each one in turn, I think that each of them became more in awe of our relationship than even we were. They both say that they've never seen two people that are not married to each other that are more comfortable being together than we are.\n\nOf course, we also had to be honest with each other. And with that in mind, I realize now, all these years later, that in all the time I knew him, Dave Heard told me only one untruth, one lie. I suppose by most human standards that makes him the most honest person that I've ever heard of. But there is one thing that he said to me all those years ago that was absolutely false -- he said that no matter how long he lived he could never repay me for helping him.\n\nThat was, without question, a bald-faced lie, because he repaid me a million times over. He gave me everything that I have today -- definitely knowledge, even though he and I both know that some of it isn't worth the paper it's printed on; very possibly wisdom, which is, of course, invaluable, though I often doubt whether I possess any; and absolutely and positively, a job and a career.\n\nBut I also remembered that there was one other quality of Dave's river -- freedom. And love, like a river, has to set you free. So, more importantly than all of those other things that Dave gave me, he also gave me up -- gave me up, even though I knew he loved me. He set me free so that I could have what he was sure was a better life with someone else who would love me just as much as he did and for whole lot longer.\n\nThat's because Dave died six months ago. He had inoperable pancreatic cancer. Complications from the disease took him from us only one month after he was diagnosed. He was 70 years old.\n\nI realize now that Dave knew where that drop of water was headed, long before it got there. He knew before he was \"out to sea,\" before that day on the bridge in St. Cloud. That was his gift -- to see where we were all headed before we even started moving in that general direction.\n\nThings happen for a reason, and I suppose that is as true for death as it is for anything else. Even though neither of us are particularly religious people, both Dave and I are mystics. How can you love a river if you're not?\n\nThat mysticism kind of makes me wonder why Dave died when he did. He said he could never repay his debt to me, but everyone knew it was the other way around. And then, when he did die, his death ensured that I had no chance to even begin repaying my debt to him.\n\nStill, I guessed I could try. Even though I knew I would fail, I could try. So, yesterday, I made the first payment on that debt. I couldn't believe it! I got Dean Kurimay's and then the chancellor's approval! And I found out it really wasn't all that hard.\n\nThey'll hold the ceremony later this year, and we'll all be there -- Martha, Tyler, Dave's brother and sisters, and of course me and my son David. He should be a couple of months old by that time! Considering his name, I'm sure he'll be as excited as anyone when Helen C White Hall, the place where I first met him, is renamed for David H. Heard. "
    ],
    "authorname": "stfloyd56",
    "tags": [
        "large breasted blonde student",
        "mature college professor",
        "fellatio",
        "cunnilingus",
        "69 position",
        "variations of cowgirl postion",
        "doggie style position",
        "break up"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/of-rivers-and-religion-ch-02"
}