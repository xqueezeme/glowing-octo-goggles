{
    "title": "All the World's a Stage",
    "pages": [
        "Matthew Goodwin's pencil hovered over the blank page like the spear of some angry god ready to strike down from the heavens and forever leave its mark on the world of mortal men. \n\nIf only, the much more human Matthew hadn't been experiencing a king-sized case of writer's block at that moment. He might have been leaving just as indelible a mark on the literary world.\n\n\"Brenda...Brenda...What? Shouted? Screamed? Cried? Jesus! The bitch needs to do something. Her freaking boat is sinking!\"\n\nMatthew scooped up the offending page and crumpled it into a ball in his fist, hurling it at the wastebasket ten feet away. To his disgust, he missed by a good ten inches.\n\n\"Crappy writer and even worse basketball player,\" he mumbled, swatting the pencil on his desk away and onto the floor. He decided it was a good thing he did his rough drafts the old-fashioned way, knocking a laptop off on the floor when he got frustrated would have been expensive.\n\n\"I take it the play isn't going so well?\" said a voice from the door to his office.\n\n\"You could say that. I'm just off to a slow start. The ideas will come...eventually.\"\n\nMatthew swiveled around in his chair to lock eyes with his eighteen-year-old son, Ryan. \n\nThe younger Goodwin reminded him of himself at that age. They both had the same straight, dark-brown hair that dropped over their ears and formed into bangs across their broad foreheads, though Ryan's hair fell longer, down to his shoulders while Matthew kept his at a more responsible, adult length, the hair stopping at the nape of his neck. Ryan had his father's eyes, piercing hazel-green orbs that tended to mirror his moods, seeming to darken when he was unhappy. \n\n\"The eyes are the windows to the soul...\"\n\n\"Huh?\"\n\n\"Nothing, Ryan. Just waxing poetic.\"\n\nRyan shrugged. \n\nHis dad was always doing that, quoting verse, reciting passages of Shakespeare or some other play, spitting out lines from classic Hollywood movies. It was his way of commenting on the world around him. \n\nMatthew stood and stretched, his back cracking loudly. He was roughly the same height as his son, both of them just grazing the six-foot mark, but unlike Ryan's slender young build, Matthew was broader across the chest and shoulders from working out. \n\nRyan waited patiently for his father to stifle a yawn.\n\n\"Did you need something?\"\n\n\"You were going to give me a ride to school this morning. I have to take my guitar for theater, remember?\"\n\n\"Right! Sorry. I got distracted.\"\n\n\"Clearly,\" agreed Ryan, noting the pile of crumpled paper balls in front of the wastebasket.\n\n\"Slow, as I said.\"\n\n\"This is just a community theater playhouse. You don't have to write the next big Broadway production.\"\n\n\"I know that, but I still don't want to embarrass myself. I do have a reputation to uphold,\" replied Matthew with a chuckle.\n\nRyan nodded and smiled. His dad had been an aspiring novelist when he had met Ryan's mother, Jane, twenty years earlier. He had written a couple of well-received plays, one had even been produced off-Broadway, quite an accomplishment for a twenty-year-old. The elder Goodwin had been working on his first novel while taking university classes when he ran into the raven-haired Jane Wellman at the student union. The two had hit it off from the word go and started dating a short time after. It was all good fun, at first, but after a wild night with too much wine involved, Jane had turned up pregnant. Being far too Catholic even to consider any alternative short of marriage, Jane had pressured Matthew into hasty nuptials that quickly turned out to be a mistake.\n\nOnce living together, the pair discovered that outside of a keen interest in literature, they didn't have nearly as much in common as they first believed. \n\nBy the time Ryan came along seven months later, the relationship was already strained and adding a child did nothing to turn down the pressure in their small household.\n\nMatthew was forced to put his novel on hold and get a job while struggling in night school to finish his teaching degree. The two years that followed were difficult for both him and Jane. Eventually, he had graduated, and things slowly improved, at least economically. They were able, with the help of Jane's parents, to secure a modest starter home in the suburbs of Richmond Heights in their home city of Turlington, Michigan, pop. 67,000. \n\nUnfortunately, the scars of their shaky beginning never fully healed.\n\nMatthew and Jane had fought more than once, arguments that amounted to a channeling of the disappointments they both felt for having their lives disrupted even if the source of those mistakes had been themselves. Looking for someone to blame, it was easier to blame each other than the person in the mirror.\n\nThe affair blindsided Matthew, though, in retrospect, he should have seen it coming a mile away. Jane had been dissatisfied with things for a long while, and given how far they had drifted apart by then, her turning to someone new was not all that surprising. \n\nThe divorce had been quite amicable, given the circumstances, and young Ryan, being just four at the time, hardly seemed to notice that his parents were no longer living together. As time had passed, Ryan seemed to gravitate naturally to spending more time with his father. Some might have seen this as a consequence of his mother's tendency to go off jet-setting with whatever well-off young stud she happened to be enamored of that week, but, in truth, he and Matthew got along better anyway. The pair were two peas in a pod, with similar tastes in music, books, and movies. \n\nWhen Ryan reached high-school age, his mother had abruptly remarried to a wealthy British aristocrat and moved to London. They still kept in touch by phone and the Internet, with Ryan going to visit when time permitted. Deep down, he felt guilty that he didn't miss his mother more.\n\n\"Just let me fetch my keys...\" said Matthew, rifling his desk and patting at his pockets.\n\nRyan held up a finger, his father's car keys dangling by the silver ring that kept them together.\n\n\"What would I do without you?\" quipped his dad as he walked by and grabbed the keys.\n\n\"You would be in trouble.\"\n\n\"I have no doubt. Come on. I can't have you being late. It would reflect badly on my parenting skills.\"\n\nThe drive over to the high school was a short one. Matthew didn't usually have to bother, Ryan preferred to walk most of the time, but lugging his guitar the whole way would have been difficult. He helped his son remove it from the trunk while Ryan slipped his backpack over his shoulders.\n\n\"Do you ever use your locker? That thing looks like it's going to explode,\" said Matthew eying the bulging backpack.\n\n\"No time. I can never get there and back between classes. I'll see you later.\"\n\nMatthew contented himself patting his son on the shoulder, not wanting to embarrass him by going for a hug.\n\nHe was on his way to the driver's door of his car when a short, bald man in an ill-fitting suit came walking briskly in his direction.\n\n\"Excuse me! Mr. Goodwin? I'm sorry to bother you. I'm Principal Mathers. I don't know if you recall, but we met at the Drama Department fundraiser last year?\"\n\n\"Of course, Principal Mathers. It's good to see you again,\" lied Matthew.\n\nHe had actually found the Principal to be a colossal bore, able to carry on for hours about his love of bird photography.\n\n\"If you have a moment? We could use your help.\"\n\n\"With what exactly?\"\n\n\"It might be easier to explain in my office.\"\n\nMatthew glanced unhappily at his watch. He didn't have a class to teach at the university until ten, but he still needed to finish writing some notes.\n\n\"I'm in kind of a hurry...\"\n\n\"This won't take long. I promise.\"\n\nReluctantly, he locked his car and followed Principal Mathers into the school. The corridors were jammed with kids fighting their way through a sea of their fellow students and trying to make it to their first class before the tardy bell rang. He and his shorter companion were salmon swimming upstream against the current getting jostled by book bags and other student paraphernalia the whole way. \n\n\"Whew! I'm afraid in the time before the first bell this place is a madhouse,\" joked Principal Mathers.\n\n\"I can see that. What did you need to talk to me about?\"\n\n\"Well, Mr. Goodwin. I know you have always been a big supporter of the Drama Department here in the past, and we could use your help now.\"\n\n\"I gave at the last fundraiser.\"\n\n\"Oh! This isn't about money. The thing is our current drama teacher, Mr. Pangle, suffered a heart attack jogging last night.\"\n\n\"That's terrible. I'm sorry to hear it,\" replied Matthew sympathetically.\n\n\"Yes...quite tragic. We have a substitute who can cover his classes, but...\"\n\n\"But?\" echoed Matthew.\n\n\"Mr. Pangle was directing our entry in this year's state U.I.L competition. We're on a tight deadline, and I'm worried that an inexperienced director stepping in this late in the process would find themselves overwhelmed.\"\n\n\"How can I help?\"\n\n\"Well, Mr. Goodwin. You are a university professor with a background in drama,\" said Mathers letting his voice trail off.\n\nMatthew raised an eyebrow, \"True, but I haven't directed anything in some time.\"\n\n\"Yes...but I think you might be uniquely qualified to direct this play.\"\n\nPrincipal Mathers lifted a copy of the script from his desk, handing it to his guest. The top cover was a title page, and Matthew coughed in surprise.\n\n\"The kids are doing, 'The Last Glow of Spring,'?\" he said incredulously.\n\n\"Yes. I think you can appreciate why you would be a good choice to direct them since you wrote it.\"\n\n\"Twenty years ago...I don't know...\" \n\n\"Please, Mr. Goodwin. This is the most talented group we've had at this school in the fifteen years I've been principal here. We have a real shot at winning this time, but you could put us over the top. Especially given the absence of poor Mr. Pangle.\"\n\n\"Look, I get that you're in a tough spot, but I honestly don't know if...\"\n\n\"We could really use your help with this, Matthew. Did you know your son just got cast in it yesterday? Mr. Pangle would have given him the news today if it hadn't been for the whole heart attack thing.\"\n\nMatthew shifted uncomfortably on his feet. He hated to let the kids down, but he worried that Ryan would think it awkward to be directed by his dad.\n\n\"Can I think about it tonight and call you in the morning?\"\n\n\"Certainly! I just want you to give it some thought. I hope, in the end, you will consent to help us.\"\n\nPrincipal Mathers shook his hand, and Matthew tried not to flinch at the feel of the other man's sweaty palm.\n\nThe drive to his job at the university took a while longer than the one to the high school. Throughout, Matthew found himself glancing over at the script for his son's play sitting on the passenger seat. He thought it was an odd choice for a high school play. The basic plot followed a young woman named Elsa, who, in 1923, answers an advertisement to be a housekeeper for a rich older man named Joshua. He is a widower who lost his family to the 1919 outbreak of Spanish Influenza and is bitter and angry about it, but in need of someone to take care of him. He hires Elsa at the behest of his younger brother Marcus, who hopes that the presence of the vibrant, funny, Elsa will act as a balm to his brother's aching heart. It was a typical odd couple sort of play where the pair seem ill-matched at the beginning but gradually become fond of one another. There was a hint of melancholy sentiment in it when the younger brother finds himself unexpectedly falling for Elsa, but keeps his distance when he realizes the extent of his older siblings feelings. In the end, Elsa nearly dies herself from a fever that Marcus, a physician, manages to cure. Her near demise frightens Joshua into pushing her away, but ultimately they come back together at the end. \n\nThe play was personal history for Matthew. He had been inspired to write it after hearing the story of his great-grandfather, who met his second wife in precisely that way. The romance of it had intrigued his young mind, and out of that bit of family lore had come \"The Last Glow of Spring.\"\n\n\"Still seems pretty stuffy for a bunch of teens,\" he said to himself.\n\nThe script was full of period issues, playing on the lack of control that women had in their lives at the time and how dependent they were on powerful men to protect them. It's made clear that Elsa is an extraordinarily strong woman who does not need such codling despite her relative youth. She is more than a match for the curmudgeonly, but underneath, quite gentle Joshua.\n\n\"It would take a heck of a girl to portray Elsa properly,\" he mused, doubting a teen thespian would have the depth of emotion to handle the part.\n\nHis day was a blur of lectures and meetings with tired-looking students, who likely viewed his classes as an easy liberal arts credit on their way to the degree that would make them some real money. It was a hard bit of logic to argue with, and he didn't try.\n\nWhen he arrived back home, it was to the smell of freshly cut rosemary. Ryan was busy at work in the kitchen, cooking up dinner.\n\n\"I see you found a ride home.\"\n\n\"Jenny's dad was nice enough to drop me off.\"\n\nJenny Parker was Ryan's girlfriend, a tiny, petite girl with a head of red curls and a laugh like a happy two-year-old. She was sweet if not the sharpest pencil in the box, and Ryan adored her.\n\n\"Glad he was there. I know you didn't want to wait for me.\"\n\n\"Grab a plate. The roast is ready.\"\n\n\"Ah! The wonder of pressure cookers. I'm glad we invested in one,\" said Matthew with a grin.\n\nThe two of them sat at the small, round kitchen table and dug into their evening meal.\n\n\"We got the saddest news at school today,\" Ryan began.\n\n\"Mr. Pangle had a heart attack?\"\n\nRyan looked up from his plate with a wrinkled brow.\n\n\"How did you know?\"\n\n\"Your Principal stopped me this morning with the news. He...Uh...had an offer for me.\"\n\n\"Oh?\"\n\n\"Yeah. He wants me to step in an direct the U.I.L play this year.\"\n\n\"That makes a lot of sense. We are doing your play, after all.\"\n\n\"When were you going to tell me that little piece of news?\"\n\n\"I was waiting to see if I got cast. I thought it would be a nice surprise. Then again, you might not want to have to watch me perform your words on stage.\"\n\n\"Nonsense! I'd be delighted to see my son giving life to one of my characters. As it happens, you did get cast.\"\n\n\"Do you know which part I got?\"\n\n\"Not yet. I haven't agreed to direct the thing. I told Principal Mathers I would have to think about it.\"\n\n\"Not sure if you want to deal with a bunch of high school kids?\"\n\n\"I admit I'm a little intimidated by the prospect, but I was mainly hesitating because I didn't know how you would feel about it. I thought it might make you uncomfortable to have me directing the play.\"\n\nRyan laughed, setting down his silverware and pushing back his mostly empty plate.\n\n\"Don't worry about me. I think it would be fun to do it together. I'm curious to see how you would bring your work to life.\"\n\n\"If you're sure?\"\n\n\"It's fine, Dad. The casting was already a done deal, so they can't accuse me of nepotism. That is assuming I got a juicy part...\"\n\n\"I have no idea, but I guess I will find out tomorrow.\"\n\nRyan pushed back from the table, \"I have some homework to finish. Remember, whoever cooks doesn't have to clean, right?\"\n\nMatthew stood up and collected their plates, acknowledging their long ago established rules for kitchen duty.\n\n\"After you finish your homework?\"\n\n\"Oh! Then it is on, my friend!\"\n\nMatthew and Ryan had been engaged in a cut-throat video game competition since the previous fall. The game was \"Super Smash Brothers\" and the winner got to get out of one chore of their choice for that week. \n\n\"We agreed you couldn't play 'Pit' anymore!\" said Matthew as they chose characters on the screen.\n\n\"I don't know why you think it matters. I can trash you with any of the characters.\"\n\n\"There's just something about that cheerful little angel that freaks me out.\"\n\nThe match began, and it was surprisingly even. In the end, Ryan's edge in experience probably played a part in him just managing to come out ahead.\n\n\"That's a week worth of trash cans I won't have to smell,\" crowed Ryan having decided that avoiding trash duty would be his prize.\n\n\"Sure, don't gloat or anything. It's not like I taught you to be humble in victory,\" teased his dad.\n\n\"As I recall, you took a victory lap around the coffee table the last time you won!\"\n\n\"I remember it differently.\"\n\n\"I'm sure you do. I'm going to take a shower and hit the bed. See you in the morning, Dad,\" said Ryan over his shoulder.\n\nMatthew shook his head and laughed as he went to empty the kitchen garbage.\n\nIt had been some time since Matthew had been passed the attendance office at his son's high school. He knew the campus housed some three-thousand students but didn't have an appreciation for just how big the place was until he had to find his way around on it. The building was mostly quiet. School long since let out for the day. Matthew was there for his first rehearsal. The drama kids were supposed to be waiting for him in the auditorium, assuming he ever found it.\n\n\"Are you lost?\" asked a female voice.\n\nHe had just stopped to search for his cellphone in his jacket pocket intent on texting Ryan to get some guidance.\n\n\"Yeah. I haven't been here in a while. I was trying to find the auditori...um.\"\n\nMatthew stammered on this last word as he locked eyes with one of the prettiest women he had ever seen. \n\nA tall, curvy, blond with thick hair that fell in waves around her round, cherubic face, the woman before him also sported a truly luscious pair of full, pouty lips and eyes such a deep shade of green they looked unreal. By the way she was dressed, fashionable but conservative skirt and blouse, he assumed her to be a fellow teacher.\n\n\"Auditorium is this way,\" she offered, inclining her head to the right.\n\nHis gorgeous new companion fell in beside him as he resumed walking down the empty corridor. Her heels clicked on the tile drawing his attention to her very sexy looking legs. She caught him looking but didn't seem to mind just smiling up at him with a flirty lifting of her perfect lips.\n\n\"Is this your first day? I don't recall seeing you around here before now.\"\n\n\"Yeah. I'm filling in for Mr. Pangle as the director of the U.I.L. play. I'm Matthew Goodwin.\"\n\nHe offered her his hand, and she took it in her warm and incredibly soft palm. \n\n\"Tricia Harrington. It's very nice to meet you.\"\n\n\"Likewise.\"\n\nThey resumed walking while Matthew struggled to think of something to say. It had been a long time since he was this tongue-tied around a woman but, then again, he hadn't encountered a beauty like Tricia Harrington before even on his college campus. The need for a topic of conversation evaporated quickly when they turned the next corner and found themselves right in front of the big double doors that led into the student activity center. Ryan was standing out front with two other boys, a dark-haired young man of medium height and build with the roguishly handsome features of a young George Clooney, and a shorter boy with close-cropped blond hair that looked as if he could have stood to lose a few pounds. \n\n\"Dad! We were just starting to wonder if you had changed your mind?\"\n\n\"I got lost. This campus is ridiculously huge!\"\n\n\"This is John Corbin and Toby Bell. They're in the theater class with me.\"\n\nMatthew nodded at the young men and turned to his guide.\n\n\"Well. Thank you for your assistance. I think I can find my way from here,\" he said, laughing nervously at his lame joke.\n\n\"I was hoping to see if I landed a part in the play before you cut me loose,\" said the blond with a smile so dazzling it darn near blinded him.",
        "\"I beg your pardon?\"\n\n\"A part? In the play? I'm in the drama class with Ryan,\" she explained.\n\n\"You're not a teacher?\" shot back Matthew feeling more than a bit foolish.\n\n\"A teacher? That's funny.\"\n\n\"Don't let her kid you, Tricia gets mistaken for faculty all the time. She once got away with hanging out in the teacher's lounge for almost half-an-hour before they caught her,\" said John Corbin with a chuckle.\n\nMatthew could see why. Tricia looked nothing like her contemporaries. If he hadn't known better, he would have guessed her to be in her early to mid-twenties. She had a maturity about her that even Ryan lacked, not to mention a body that could make a man lose his concentration. Even now, knowing she was just kid, he was having a hard time not staring at her large, firm mounds that sat high on her young chest. Again, she seemed to note the scrutiny but took it in stride going so far as to bat her eyelashes at him and flash that pretty smile.\n\n\"I guess we should all get inside,\" said Matthew finally.\n\nThe others moved passed the doors with Ryan dropping back next to his dad.\n\n\"Don't let Tricia bother you. She loves to mess with people that don't know how old she is. I'm sure she's not going to like it as much when she's thirty and looks ten years older.\"\n\n\"I suppose not,\" affirmed his dad.\n\nThe auditorium was a massive space that could have competed with the one on his campus. At the front, just before the stage, about twenty-five kids were seated in the first two rows. Ryan joined them, taking a seat next to Tricia. Matthew noted that Tricia and John were holding hands now and assumed they must be a couple.\n\n\"Lucky little bastard,\" he thought, then instantly felt guilty at being jealous of some eighteen-year-old.\n\n\"Good evening, everyone. My name is Matthew Goodwin. Some of you may know that I'm Ryan's dad, but before you get any ideas, the casting for this play was done by Mr. Pangle before his unfortunate medical situation, so how ever the roles land, I had nothing to do with it!\"\n\nMatthew opened a folder that Principal Mathers had given him and started reading off the sheet inside that listed who had won each part. The kids who didn't make the cut would work as the backstage crew, tech helpers, and stagehands. There were a dozen or so parts, but only three were critical roles in the production.\n\n\"So, the role of 'Elsa' goes to...Tricia Harrington\" read Matthew out loud.\n\nThere were some polite claps but more than a few groans and eye rolls.\n\n\"She gets every fucking lead...\" he heard one of the kids upfront whisper.\n\nHe tried to ignore the backbiting and pressed on, giving out the key roles of \"Joshua\" and \"Marcus\" to John Corbin and Ryan, respectively. Inwardly, he felt a swell of pride that his son had impressed Mr. Pangle enough to win one of the most significant parts in the play.\n\n\"As I'm sure you're aware, if you've looked at the cover, I wrote this particular play we are going to be putting on together, but don't be intimidated by that fact. I prefer a collaborative approach to putting on a production, so if you have any ideas about how your character would react or behave in a given situation, don't be afraid to speak your mind. I'll be passing out the rehearsal schedules and meeting with the set designers tonight, so we can get things moving along. I know this is for a competition, but don't let that kill the joy of creation. We should all be having fun with this thing, okay?\"\n\nThe kids gave him a nice round of applause as he came off stage. The first person he ran into was Tricia Harrington, who looked exuberant. Her skin flushed pink with excitement.\n\n\"This is going to be quite a thrill! You know, bringing a character to life for their creator. I can't wait to pick your brain about what you had in mind for this young woman thrust into the arms of an older, more experienced man.\"\n\n\"Uh...Well...She isn't thrust really. It's more of a dance of equals and opposites that ends with them together, but we can get into that,\" said Matthew more than a little thrown by her enthusiasm and her mention of younger women and older men. She did seem to have the gravitas that the role called for, and she certainly looked the part of Elsa.\n\n\"I even have a costume we could use! I wore a period piece for Halloween last year.\"\n\n\"You went as a nineteen-twenties hooker, Tricia. I don't think that works for a housekeeper,\" laughed John.\n\n\"I was a flapper! A hooker!... Is that what you thought I was dressed as, John? How did you get prostitute out of what I was wearing?\"\n\n\"Probably because there was so little of it,\" he teased.\n\nMatthew waved a hand trying to break up the argument while fighting down his imaginations attempt to picture the voluptuous Tricia in a skin-tight mini-dress.\n\n\"We can get into costuming details later, folks. For right now, let's concentrate on learning our lines, shall we?\" \n\nThe rest of their first practice together went better than Matthew had expected. The kids seemed genuinely excited about the project, much more so than many of his more jaded college students would have been. He found himself feeding off that emotion and enjoying the process. When they finished for the day, he offered to take Ryan out for a burger, and they left together.\n\n\"Were you surprised to get one of the lead roles?\" he asked his son as he drove.\n\n\"Actually, yeah, I have to say I was just a little. Mr. Pangle has been complimentary in the past, but I never got the feeling that he was that impressed with my acting abilities. This is the biggest part I've had in a production this year.\"\n\n\"Well, I'm proud of you. I might be biased, though...\"\n\n\"Thanks, Dad.\"\n\n\"I noticed some groaning when Tricia got the part of Elsa.\"\n\n\"That wasn't surprising. She isn't very well-liked among the drama kids.\"\n\n\"Is that right?\"\n\n\"Yeah. I mean, I like her okay. She's never been anything but nice to me for the most part, but she is Mr. Pangle's favorite. Tricia has won the lead female part in almost every play we've done since she was a sophomore. Some speculate her talent has more to do with the growth spurt she took that year,\" he added, holding up his hands to mime having big breasts.\n\n\"Ryan!\"\n\n\"Hey! I didn't say it. I've just heard others make comments like that.\"\n\n\"You don't think she has talent?\"\n\n\"Truthfully? I think she's terrific and probably deserves every role she's won, but it does get old when no one else gets a shot, and the other girls resent it. You add to that the fact that her family is loaded, and you can see why she isn't more popular.\"\n\n\"Her family has money?\"\n\n\"They live in Gable Meadows,\" he pointed out.\n\nGable Meadows was a gated community near the high school where the cheapest homes started at five-million and escalated rapidly up from there.\n\n\"I saw the inside of her house once at her eighteenth birthday party. It was palatial. I mean, you could get seriously lost in that place.\"\n\n\"No, kidding? What do her parents do for a living?\"\n\n\"I'm not sure. I don't think anyone has ever met her parents. They travel a lot from what I hear. Holidays in Europe, trips to Africa, that kind of thing.\"\n\n\"They don't take Tricia with them?\"\n\n\"Maybe they do in the summers but not during the school year. I get the feeling she spends a good deal of time alone. I mean, minus the servants and stuff.\"\n\n\"Her house is big enough to need servants?\" asked Matthew, both taken aback and impressed at the same time.\n\n\"Yep. I told you the place is a monster. I think I heard it was twenty-thousand square feet or something like that.\"\n\n\"Wow. You could fit seven houses like ours in that space.\"\n\nRyan looked out the window, lost in thought for a moment, \"I don't think she's very happy, though.\"\n\n\"Why do you say that?\"\n\n\"Well, she does take a lot of shit from the other kids. I mean, sometimes she deserves it. She can be a bit...I don't know...haughty, maybe? I've seen her crying when she thinks no one is watching like it hurts her even though she acts like it doesn't. Then there's the liquor...\"\n\n\"She drinks?\"\n\n\"I can't say for sure, but I know one day before class, she asked me if I wanted a \"pick me up\" and then opened her book bag. She had like a whole bottle of bourbon in there wedged between her school books.\"\n\n\"Did you...\"\n\n\"Oh! Yeah! Dad. I got shit-faced and spent the rest of the day on my knees in the little boy's room,\" replied Ryan sarcastically.\n\n\"I get it. Sorry, I asked. Just being a dad.\"\n\n\"It's cool,\" said Ryan, playfully slapping him on the arm.\n\n\"I'm sorry to hear she's having so much trouble. I guess it's true that money can't buy happiness.\"\n\n\"I bet it could rent it, though...\"\n\n\"Hilarious, Son. Still, I'm glad she has you as a friend, at least. It sounds like she could use one.\"\n\n\"She has John also, but I'm not sure that's a good thing either.\"\n\n\"Troubles in paradise?\"\n\n\"Ha! You could say that. They've always had a combustible relationship, very off and on. I've heard things...about how he treats her...\"\n\n\"Rumors?\"\n\nRyan nodded, \"I don't like to say anything because I don't know for sure, but I've heard stories that he can be rough on her.\"\n\n\"You mean to hurt her? Like physically?\" said Matthew, his voice showing an edge of concern.\n\n\"No...not physically, I don't think, more emotional. Manipulative kind of stuff.\"\n\nMatthew shook his head, reminded about his issues with Ryan's mother, who could put the \"P\" in passive-aggressive.\n\nHe pulled into their driveway and shut off the engine.\n\n\"Don't forget to bring in the trashcans,\" said Ryan over his shoulder as he went into the house.\n\n\"Smart Ass...\" mumbled his father with a chuckle.\n\nA DYSFUNCTIONAL FAMILY -\n\nThe next time Matthew met with the cast and crew of his upcoming production, he made sure to pull them all together and give them a brief lecture about family.\n\n\"Remember that while you are here and a part of his production, you are, in a sense, a family. That means we protect one another by creating a safe space where artistic expression can flourish. We don't criticize. We share ideas and offer different viewpoints. The way one person approaches a role might be very different than how you see it, but that doesn't make it wrong. It's important to support one another to get the most out of the creative process. You are kind of like brothers and sisters in pursuit of presenting the best performance we can together.\"\n\n\"Does that make you the dad?\" joked John.\n\n\"If you prefer, but don't expect an allowance, John.\" \n\nEveryone got a laugh out of that. \n\nHe broke them up into small groups, sending the techs and stagehands off to work on the sets while he put the main cast together for a read through that took most of the rest of their time. Sitting making notes on his script, Matthew sensed a presence coming closer right before a shadow dropped across the pages in front of him. A strong and very alluring scent of perfume struck his nostrils as he looked up into Tricia's smiling face.\n\n\"Busy?\"\n\n\"Just making some notes. Can I help you with something?\"\n\n\"I was just going to say that some of the cast are going to watch John's older brother, Charlie, play at 'The Vault,' tonight, and you should come.\"\n\n\"'The Vault,' huh? I'm not familiar with it.\"\n\n\"It's just a venue where bands play and hang out. They let anyone in even if you're under twenty-one. They stamp your hand to keep you honest, though,\" she said, adding this last while sticking her hand out palm down in his face.\n\nThe perfume scent got instantly stronger making his head swim. \n\n\"I don't think so...\" he started to say.\n\n\"Come on! You did say we're a family now. Shouldn't a family bond?\"\n\n\"I'm too old to bond.\"\n\n\"You don't look so old to me,\" she said with a grin that made him decidedly nervous, \"besides, Ryan's going. Don't you want to have this opportunity to embarrass him? I thought that was the kind of thing parents lived to do.\"\n\nMatthew laughed, rolling up the script in his hands.\n\n\"Okay. I guess I could stop by for a bit.\"\n\n\"That's the spirit!\" \n\nIt was a decision he was soon to regret.\n\nHe wasn't entirely sure how the kids could consider this music. Charlie's band had barely made it through their first two songs before Matthew was ready to head for the exit. His ears rang from the sheer volume of it, and he fancied he could feel the sound waves vibrating his face. The whole thing might have been tolerable if he could have made out one lyric, or anything at all that Charlie was growling about, but it all sounded to him like someone gargling glass and trying to throw it up.\n\n\"What the Hell do you call this?\" he shouted into Ryan's ear.\n\n\"Post-punk Industrial. I think...\"\n\n\"Sounds like a car with a busted piston head. Jesus! How do you listen to this stuff?\"\n\n\"Begrudgingly,\" admitted Ryan.\n\n\"I'm going to get some water.\"\n\n\"What?\"\n\n\"I'M GOING TO GET SOME WATER!\"\n\n\"You're going to read Harry Potter?\"\n\n\"Never mind...\" said Matthew, leaving his son and a few other young cast members to walk over to the bar. He got a free cup of water from a bartender who looked like he just got out of prison. The man had so many scary-looking tattoo's it was intimidating, and Matthew tried not to make eye contact.\n\nA hand on his back made him jump nearly spilling his water in the process. He turned abruptly, but any angry response he would have uttered died in his throat. \n\nTricia had taken the time to change before she came out for this event. Gone was the conservative look she had worn earlier, jeans and a loose-fitting t-shirt. The young woman standing before him now wore a dress that barely covered her. As near as he could tell in the low light, it was a dark blue color, had a hem that rode up well above her knees and fabric that hugged her like a second skin. The top was cut so low if her breasts had wanted to stage an escape, they didn't have far to go. She had darkened her eye shadow and put on a cherry-red lipstick that shined in the glitter of the stage lights. \n\nMatthew swallowed hard, trying to find his voice but struggling against a wave of desire that made his knees shake. Teenager or not, Tricia was one of the hottest women he had ever seen.\n\n\"Hey! What's your poison?\"\n\n\"Ah...It's just water...\" he stammered, looking at the cup in his hand.\n\n\"I had you pegged for a rum and coke guy.\"\n\n\"Only on the weekends. What would a girl like you know about drinking anyway? You're underage.\"\n\n\"My parents,\" she said by way of explanation, shrugging off his comment.\n\n\"What do you think of the music?\" she asked before he could pursue the matter.\n\n\"I think it's ridiculously loud and meaningless.\"\n\n\"You just described most teenagers I know,\" shot back Tricia.\n\nThey both got a laugh out of that.\n\n\"I don't think I can take much more of this to be honest,\" said Matthew, setting his empty cup down on the bar.\n\nHe was more than ready to go, but Tricia stopped him with her hand.\n\n\"Don't leave. If you need a break, I know a great place to take one.\"\n\nShe didn't give him a chance to answer but tugged him toward a pair of heavy steel doors that led to a stairwell. Matthew followed her upward, trying without success, not to stare at her heart-shaped ass that swung from side to side in front of him. They came out into a rooftop lounge with a bar on one side, chairs and couches scattered around were a few patrons sat in deep conversations and a long, open railing across the back. Tricia went to the rail and leaned against it, silhouetting herself against the setting sun. If possible, it made her look even more gorgeous.\n\n\"I love the view from up here,\" she said as Matthew joined her.\n\n\"I love the quiet. I'm pretty sure my ears are going to ring for a week.\"\n\n\"Charlie's band is not to everyone's taste.\"\n\n\"Or for anyone with taste.\"\n\n\"Oh! Harsh!\"\n\n\"Sorry. I just know what I like.\"\n\n\"There's nothing wrong with that. So do I.\" said Tricia with a mischievous twinkle in her eye that made Matthew look away.\n\n\"I'm enjoying the role of Elsa. It's written beautifully. I can feel the character on every page.\"\n\n\"That's very kind of you to say. Elsa was based on a real person in my family's personal history. My great-grandfather's second wife.\"\n\n\"Really? That's amazing. I hope I can do justice to the part.\"\n\n\"You'll do just fine. I think you have the right stage presence for it. The rest is just learning the cadence of the dialog and building the relationship between the characters.\"\n\n\"So you think I'm like the real Elsa?\"\n\n\"Well, I didn't know her personally but based on the stories I've been told you fit the bill. By all accounts, she was ahead of her time. A strong woman, opinionated and not afraid to speak her mind.\"\n\n\"When you describe her like that, it makes me wonder.\"\n\n\"I haven't noticed you having any trouble speaking your mind.\"\n\n\"True...\" laughed Tricia, \"but I've had the advantage of a hundred years of women raising themselves to be closer to the level of men. If I had been alive in Elsa's time, I don't know if I would have been so brave.\"\n\n\"I wouldn't doubt you would be the same at any time.\"\n\nTricia turned to face the rail, subtly moving closer to Matthew. \n\n\"Have you seen any photos of Elsa? I'm just curious what she looked like.\"\n\nMatthew pulled his phone from his pocket and hunted down a photo he had posted some time ago to his Facebook page. The woman in the black and white picture was quite attractive even in her more conservative period dress and hair. She also bore a peripheral resemblance to Tricia now that he was looking at the two women side by side.\n\n\"She was stunning. I can see why your great-grandfather was smitten with her.\"\n\n\"You two look more alike than I realized. I guess that's another reason you're right for the role.\"\n\nTricia smiled up at Matthew, \"So you think I'm as pretty as your great-grandmother?\"\n\nMatthew tried to brush off the question while shoving his phone back into his pocket, \"I...uh...don't think looks are going to be a problem for you.\"\n\n\"I just want to give you everything you're looking for...\" she replied in a softer voice.\n\nHe found himself staring into her emerald eyes that shined in the dying light of the sun. \n\n\"Jesus! How can any girl have skin that smooth? Does she even have pores?\" he thought, simply stunned at how gorgeous Tricia looked even this close up.\n\nThey continued just to stare, an awkward silence made even more so by the sudden, baffling urge Matthew felt to reach out and see if her cheek was as soft as it looked.\n\n\"Your eyes are...\" he stopped himself short, realizing he was about to say, \"beautiful,\" to a teenage girl. It would have wildly inappropriate even if it were true.\n\n\"What about my eyes?\" she asked, smiling that wicked smile again.\n\nThe doors to the lounge slapping open, followed by a cacophony of young voices, saved him. \n\nHe took a step away from Tricia, thinking how it would look for the two of them to be seen hovering so near to one another. \n\n\"Great set, Charlie! Great set!\" John was saying, slapping his older brother on the back. They were being followed by the members of Charlie's band and most of the drama kids, including Ryan. Matthew caught his son's eye and saw the younger Goodwin raise an eyebrow at seeing his dad and Tricia alone together.\n\n\"Great. I'll be having to explain this later,\" said Matthew to himself, wondering precisely what explanation he would offer.\n\n\"Tricia! Get over here and tell Charlie how great he is!\" shouted John with a grin.\n\nTricia shook her head with the expression of a tolerant parent planted on her young face.\n\n\"You'll have to excuse me. I have to go stroke someone's ego.\"\n\nMatthew couldn't hold back a laugh though he did turn away from Tricia's departure determined not to get caught up in staring at her ass again.\n\n\"I wondered where you got off to,\" said Ryan, joining his father near the railing, \"Hope we didn't interrupt you two before the good stuff?\"",
        "Matthew couldn't tell if his son was joking by his tone, and he fought to keep his voice calm, not wanting to give away how nervous he felt.\n\n\"Tricia was just showing me a quiet spot to get away from the noise.\"\n\n\"Good thing. I can't have you losing your hearing like Grandma. It would be such a pain to have to shout at you all the time.\"\n\n\"Yeah...I'll bet. Look. Can you get a ride home with your friends? I think I've had all I can stand of the local music scene for tonight.\"\n\n\"Sure. I can find someone to bring me later.\"\n\n\"Awesome. I'll see you at home then.\"\n\nThe crowd of kids had moved over to the couches where the older Charlie was holding court like a rock god expecting tribute from the masses. He slipped around the edge of the lounge, making it to the stairs without being noticed, but couldn't resist the urge to take one last look at Tricia in her skimpy outfit. To his surprise, she was looking right back at him, managing a brief wave in his direction.\n\nAll the way home, Matthew admonished himself for his lapse of judgment.\n\n\"What the Hell was I doing? Letting myself get talked into hanging out with a bunch of teens? I know better than to mess around with this kind of situation! I'm a trained professional teacher for Christ's sake!\"\n\nThe more he thought about it, the worse he felt, but that didn't stop images of Tricia in her dress from dancing inside his head. It had been four years since his last date. He had decided to put romance on the back burner and focus on helping Ryan get out of the house and into a good school. In reality, this was probably just his lack of female companionship catching up with him. This all sounded logical, but he couldn't recall ever reacting to another woman the way he was to Tricia. It was unnerving how mesmerized he was by her.\n\nWhen he arrived back home, it was late, and he decided to go straight to bed after a quick shower. The hot water relaxed him, and he tumbled into bed, pulling the covers up and settling in. \n\nThe dream came sometime during the night, and it was the most vivid he had ever encountered.\n\nHe was on stage at the high school, reviewing the sets for his play. In his fevered imagination, they seemed to spread out to infinity, though, oddly, this didn't bother him. A sound like the beating of wings came to him, and he turned just in time to see Tricia dropping down onto the stage like some sort of impossible fairy. The sound of her heels was like the clicking noise they had made on the school tile the first time he had walked with her.\n\n\"I knew I would find you here,\" she said.\n\n\"I was inspecting things,\" he replied.\n\n\"Then, it's time for our scene?\"\n\n\"Our scene?\"\n\n\"Sure...our love scene...\"\n\n\"Wait...Tricia...We...We can't...\"\n\nThings happened so fast. One minute he was standing on the stage, and the next he and Tricia were naked with her on top of him. It was so real. He swore he could feel the weight of her body. The warmth of her engulfing his penis as she took him inside. His body seemed to move on its own, hips pushing upward.\n\n\"This is wrong...\" he begged.\n\n\"It's what we both want,\" she whispered, smiling down at him.\n\nShe started to move faster.\n\nA surge came from between his legs. A sudden clenching that took his breath away.\n\n\"I'm cumming!\" he cried.\n\n\"I know...I am too!\" screamed Tricia, whose face was glowing like she was lit up from the inside.\n\nMatthew sat up in bed, sweat rolling off his chest. He ran a hand through his damp hair.\n\n\"Jesus! That was some dream!\" he mumbled.\n\nThere was something off, though, and it took him a long moment to realized what it was, but when he did, his face reddened in embarrassment.\n\n\"You have got to be kidding me!\" he said, tossing aside the covers in disgust as he got out of bed.\n\nFixing the problem took very little time, but it was still very disconcerting to him that even at his age, he could still have a wet dream.\n\n\"What's next? Am I going to start having to deal with acne again?\" he mused.\n\nThe following morning, Matthew was determined to put Tricia out of his head once and for all. The dream the previous night and its unexpected aftermath had made him even more leery of putting himself into a situation that could be misinterpreted by anyone, especially Tricia herself. He was determined to keep things professional at all times, and for the most part, this worked, until a week later during rehearsal for one of the plays more pivotal scenes.\n\nThe first time Joshua begins to discover his true feelings for Elsa.\n\nThey cast had spent the first hour working out the blocking under Matthew's watchful eye. Then it came time for the actors to run through the dialogue. He thought things were going reasonably well, especially with Tricia, who had the cadence of her delivery down pat. She was managing just the right amount of casual indifference in her words while using her body language to portray something else altogether. The problem with the scene was all John, who Matthew felt was over-playing it, threatening to turn this poignant moment into something akin to caricature.\n\n\"John! I think you need to dial it back. This is a moment of struggle for Joshua. He recognizes both his desire and his vulnerability. Remember, this is a man who has lost everything once already. He is going to be frightened of embracing that again, no matter how much he may want it deep down inside.\"\n\nJohn frowned, and they reran the scene, but Matthew still felt like John was almost forcing himself on Tricia as the younger Elsa, coming on too aggressively.\n\n\"It's okay to show his frustration but don't fully direct it at Elsa. He's furious at himself.\"\n\n\"I'm not sure I get it,\" said John in exasperation.\n\nMatthew climbed out of his seat and jumped up on the stage, coming to stand between the two actors.\n\n\"I like what you're doing with your delivery, but your body language needs to be more hesitant while still being drawn in like a moth to a candle.\"\n\nHe turned to Tricia, \"Take it from the line, 'I see your pain, Joshua, and I grieve with you.'\"\n\nShe did her line reading perfectly, with just a hint of the actual pain she was feeling in her belief that his grief for his lost family was all that was driving him. \n\n\"My pain? You think you know it's depths, but it has no bottom for me! I feel as if every day of my life is a futile attempt not to drown in a tempest of my own making.\"\n\nHe took a tentative step toward Tricia, endeavoring to portray in his movements that Joshua wasn't speaking just of his grief from loss but also his pain born of the guilt he felt for the emotions she stirred up in him. They began a sort of fencing match across the stage while delivering their dialogue. At times, Joshua's character seemed on the verge of breaking down and admitting that Elsa had awakened hope in him that both scared and exhilarated him in equal measure. Matthew ended up backing Tricia to the wall beneath the partially completed staircase facade that would be used in the play. She trembled, partly in fear, and partly from the desire her character fought to hide.\n\n\"What do you wish from me? I have nothing to give...nothing!\"\n\n\"I think the thing you fear most is that you will find that isn't true.\"\n\nThey paused, Matthew, staring deep into Tricia...Elsa's green eyes. His hand shook as he raised it, placing it on her cheek. The skin was warm, and he felt his heart race in his chest.\n\n\"Good God, her skin is even softer than I thought...\"\n\nHe started to lean toward her perfect, full lips, and just when they were about to meet.\n\n\"Hello, Brother! I hope I haven't arrived too early!\" came Ryan's voice from off stage, queued by one of the set managers.\n\nMatthew stepped abruptly away, overwhelmed by the moment, still staring at Tricia, whose skin was flushed with excitement. The other cast members started applauding, breaking the spell that had fallen over both of them. \n\n\"Brilliant! Mr. Goodwin! I see what you want now,\" said John appreciatively. \n\n\"Yes...right. I'm glad I could help,\" said Matthew sheepishly as he tore his eyes from Tricia's face and jumped back down off the stage. He retook his seat, letting the rehearsal continue but discovering that he was having a hard time focusing on any character but Tricia's. \n\nWhen they wrapped for the day, Matthew tried to beat a hasty exit, but Tricia stopped him before he could reach the door.\n\n\"Do you have a second?\"\n\n\"I need to get home. I have some papers to grade tonight.\"\n\n\"I understand. I just wanted to say what a privilege I think it is to have you directing us. I mean, you know these characters better than Mr. Pangle ever could. What you did up on that stage earlier? It sent chills all through me! Are you sure you don't want to be an actor yourself?\"\n\nMatthew's felt his face turning red with her praise.\n\n\"I did act in college a bit. It was never my calling, though. I guess I was more interested in putting things on paper and leaving the acting to others.\"\n\n\"Too bad. You should have seen yourself. The barely contained passion was palpable. I could see why Elsa would have been swept away by your grand-father. What woman wouldn't be?\"\n\n\"You're too kind.\"\n\n\"I'm serious,\" she said, leaning closer to whisper, \"you almost made me wet.\"\n\nMatthew was too stunned by this to say anything. He could only stand and stare as Tricia pivoted on her heel and walked back the way she had come.\n\n\"Holy shit...\"\n\nHEART OF THE STORM -\n\n\"Did you intend to burn these? Because if so, you did a brilliant job!\" remarked Ryan as he poked at his breakfast.\n\n\"What? Oh...Sorry. I guess this wasn't my best batch of pancakes ever.\"\n\n\"Is everything okay, Dad? You've seemed a bit distracted lately?\"\n\n\"Oh, nothing to worry about, Son. I'm just obsessing over your classmate. You know, the one that told me I got her wet,\" thought Matthew as he stabbed his fork down on one of the few less crunchy bits on his plate.\n\n\"It's nothing. I think I'm just a bit worn out from teaching and trying to put on this play at the same time.\"\n\n\"Thankfully, we're more than half-way through then, right? Plus, we have tonight off, so you can get some much-needed rest.\"\n\nThe thought of it sounded good to Matthew. He had endured enough stress lately between overwork and his strange obsession with a certain teenage drama queen. \n\nAs soon as he finished his last lecture that evening, he rushed straight home. Ryan was out on a date with Jenny, so he had the house to himself for once. There were still some papers to grade, but he got through the last of them and sat down in front of the T.V. to unwind. A movie caught his eye on the cable guide channel that was coming on in a little over an hour.\n\n\"You know what would go good with a movie? Cookies!\" he said to himself.\n\nMatthew was old-fashioned in that he liked straight forward chocolate chip cookies. Since he had time, there was no reason not to bake a batch, but to his disgust, it appeared that Ryan had used up their supply of chocolate chips in the pantry.\n\n\"That little shit! I bet he puts them in his pancakes.\"\n\nMatthew glanced at the clock and saw he had just enough time to run to Sutter's bakery and pick up a dozen before his movie started. The trip would be a pain, but his mouth was set for cookies, and there was no denying it. He threw a jacket on over his t-shirt and jeans, heading out the door.\n\nSutter's Bakery was a small, family-owned establishment near the high school that had been there seemingly forever. It was popular among adults and kids alike. It was safe to say that everyone in the surrounding neighborhoods had grown up on Sutter's Bakery treats. The line for service was long but seemed to be moving fairly fast, so Matthew had his head down staring at his phone when a familiar set of voices caught his attention. In the glass of a nearby window, he saw that John Corbin had come in with Tricia in tow.\n\n\"Jesus! What were the odds?\" he mumbled, keeping his head down and hoping they didn't notice him.\n\nThe line surged steadily forward, but he noticed that John and Tricia seemed to be having some kind of argument. Their voices were pitched low, but from their body language and sharp replies to one another, he could tell it wasn't a pleasant conversation. \n\nThe whole thing was none of his business, and he knew he should just ignore it and get out of there, but something made him turn his head, trying to pick up what they were saying.\n\n\"I'm not blind, John, I know what I saw. You and Marsha O'Dwyer were practically in each other's arms.\"\n\n\"I don't know what you think you saw Tricia. She was just helping me work out a scene from the play.\"\n\n\"You said you would only work on the romantic scenes with me!\"\n\n\"I never said that. I think you're not remembering the conversation at all.\"\n\n\"Should I have taped it for you?\"\n\n\"Good Lord, Tricia, listen to yourself, Kid. You're paranoid, just like always. I don't know why I put up with this from you. As nice as I am all the time, and then you treat me like this?\"\n\nMatthew clenched one hand into a fist inside his jacket. He knew gaslighting when he heard it. His ex-wife had been a master of that type of ploy, and he had grown to hate her manipulations. The confused look on Tricia's face spoke volumes. John likely had her questioning her reality. It was a cruel way to run a relationship. \n\n\"Can I help?\" asked the attendant behind the counter.\n\n\"A dozen chocolate chip cookies. Please.\" \n\nThe pair further behind him was still at it. Neither John nor Tricia was raising their voices into a full-blown fight, but it was apparent they were teetering on the verge. \n\n\"Stay out of it. It's none of your business,\" Matthew reminded himself as he paid for his cookies and turned to leave. He kept his head low, scurrying passed the others in line and avoiding contact with John and Tricia. Once he was outside on the sidewalk, he looked back into the bakery. They didn't appear to have noticed him. There was no reason to stay, and yet he hesitated while watching the couple through the window. Tricia seemed to be becoming more agitated, and suddenly she got out of line, head down, rushing toward the door. John wasn't following her.\n\nMatthew's eyes darted toward his car, four parking spaces away. If he moved quickly, he could be in it before Tricia even noticed him. She was coming fast in his direction. It was now or never.\n\nHe didn't move.\n\nThe door opened, and Tricia looked up as she stepped out, freezing when her eyes met Matthews.\n\n\"Mr. Goodwin! Uh...Wow...I didn't know you were here. We're you inside?\"\n\nThe bag of cookies he held in his hand made that rather evident, so he just nodded.\n\n\"Yeah. I wanted some cookies. I didn't see you either,\" he lied.\n\nHe could see she was agitated, tears in the corners of her eyes. \n\n\"Stay out of it, Matthew!\" his brain screamed at him.\n\n\"Is everything okay?\"\n\nTricia threw a look over her shoulder, back inside the store John was ignoring her, keeping his eyes to the front of the line.\n\n\"Everything's fine,\" she said in a very subdued tone.\n\n\"You don't sound convinced of that.\"\n\nShe turned back to face Matthew, a single tear ran down one cheek, and she reached up to rub it away.\n\n\"I'm not.\"\n\n\"You and John?\"\n\n\"It's nothing. I'm probably just making it a bigger deal than it is. I can be that way. You know us, Drama kids.\"\n\n\"If you think it's a big deal, then it is one. Don't let someone else dictate to you how you feel,\" offered Matthew thinking back to his misery at the hands of Ryan's mother.\n\n\"You sound like you've had experience in that arena,\" observed Tricia. \n\nMatthew cleared his throat, suddenly embarrassed to be having a conversation about something so personal with a young girl he hardly knew.\n\n\"I've been there, let's just say that.\"\n\nJohn was almost to the front of the line.\n\n\"I want to go home,\" she said suddenly.\n\n\"I..could give you a ride. If you're not comfortable with John taking you.\"\n\nA small smile lit her face, driving back some of the sadness that had been there.\n\n\"That would be nice of you. I can text John and let him know I left with a friend. He won't know who.\"\n\nShe added this last clearly for Matthew's benefit, and he recognized that fact. \n\nHe led the way to his car, letting her inside and joining her a moment later. In the tight confines of the car's interior, her strong perfume was readily apparent. The smell was reminiscent of flowers in springtime. He liked it a lot.\n\nThe car pulled away, and he and Tricia quickly left John in their wake.\n\n\"Ryan says you live in Gable Meadows.\"\n\n\"That's right.\"\n\n\"Nice place.\"\n\n\"It's full of entitled assholes,\" she said with a toss of her head.\n\n\"Money doesn't necessarily cause someone to act entitled. It's all about the character of the person.\"\n\n\"Then, the people that live in Gable Meadows don't have much in the way of character.\"\n\nMatthew chuckled at Tricia's innate cynicism.\n\n\"Does that include your family?\"\n\n\"It might. If I ever say them.\"\n\n\"Ryan mentioned your parents travel quite a bit.\"\n\n\"Rome, Madrid, Paris, London. You name it. My parents have probably been drunk there.\"\n\nHe stole a glance over at this passenger. In his previous encounters with Tricia, she had always been very upbeat, but tonight he sensed a bitterness in her that seemed very out of place in one so young. \n\n\"I'm sorry,\" was all he could think to say.\n\n\"It's not your fault,\" she replied, looking at him for the first time since she had gotten in the car, \"you're the best thing that's happened to me tonight. Without you, I would still be in that bakery getting put down by my soon to be ex-boyfriend.\"\n\n\"So that relationship is on the rocks?\"\n\n\"On them? Crashed into them and burned, I would say. Which makes me single again.\"\n\nThe way she looked at him then made his hands start to sweat on the steering wheel.\n\n\"I take it from the way you were talking before that things with Ryan's mother were...difficult?\"\n\n\"We were very young when we met. It was a relationship that probably should never have happened, but we did get Ryan out of it, and I can't complain about that.\"\n\n\"Ryan's a good guy. I think he's the one kid in the whole drama department everybody likes.\"\n\n\"We got lucky with him. He sort of raised himself. I feel like I had very little to do with how he turned out.\"\n\n\"I wouldn't say that. I see quite a bit of you in him. The way he's kind to everyone and...good looks seem to run in the family.\"\n\n\"Ha...Thanks...\" stammered Matthew, caught off guard again by something Tricia blurted out.\n\n\"I've embarrassed you,\" she said in an amused voice, noting how his face was turning red in the dashboard lights. \n\n\"I appreciate the compliment, but it's not appropriate for you to say things like that to me.\"\n\n\"You sound so authoritative when you say that,\" teased Tricia.\n\n\"Seriously, I'm your teacher and...\"\n\n\"You're not, though. You're just subbing in to direct a play.\"\n\n\"I'm not sure anyone else would see the distinction. I especially don't think Principal Mathers would.\"\n\nThe headlights of Matthew's car illuminated the front gate of Gable Meadows, where a guard shack sat on one side of the road. He pulled to the curb across the street.\n\n\"I'm assuming you can walk from here without a problem?\"\n\n\"This isn't a door to door service? I could get you in easy as pie.\"\n\n\"I'm not really up for meeting your parents right now. Thanks, just the same.\"\n\nTricia unbuckled her seat belt but didn't immediately get out of the car. \n\n\"My parents are in Rio,\" she said, turning in her seat to face him.\n\nThe temperature in the car seemed to climb ten degrees in as many seconds, and Matthew thought he could see a steamy fog starting to form already on the front windshield.\n\n\"Lucky them,\" he managed to say. His voice was suddenly strained, and he fought to calm himself.",
        "\"Are you sure you don't want to see the house? I would be happy to give you a tour.\"\n\nThe temptation to do as she asked was almost overwhelming. He had a strong feeling he knew where this would lead, but like that moth, he felt inexorably pulled forward.\n\n\"Maybe some other time, Tricia.\"\n\nDisappointment briefly colored her features, but only for a second or two. Before Matthew could react, she leaned across the car and kissed him. It was so fast he was hard-pressed later to recall it clearly, but he did get a sense of her very soft, full lips, all creamy with her dark lipstick pressing on his mouth before she pulled away.\n\n\"Thanks for being so sweet. I'll see you at practice.\"\n\nTricia was out of the car and headed toward the guard shack before Matthew could even get his thoughts into gear. He watched her walkaway through the big steel gate while his heartbeat so hard in his chest he thought a coronary was not wholly out of the question. When she finally vanished from sight, he pulled away and headed home, his mind awhirl with conflicting thoughts, but one stood out above all the others.\n\n\"I'm in big trouble...\"\n\nThe following week, Matthew did everything he could to keep his distance from Tricia. This wasn't easy to pull off when you're directing a play, and the woman you're trying to avoid is your lead, but he managed to minimize things to just short interludes where he gave out general advice to everyone. When he did have to deal directly with Tricia, he tried to make sure to have other cast members around and not to be alone with her ever. He reasoned it was the best way to keep her obvious intentions toward him in check. Truthfully, though, he was also protecting her from himself. The more time he spent around her, the greater his attraction for her seemed to grow to the point he was getting seriously worried about keeping his libido under control. \n\n\"Earth to Dad? You in there?\"\n\nMatthew looked up from his script to find Ryan's smiling face looking down at him.\n\n\"Huh? Oh...Sorry, Son. I was just thinking about the last scene.\"\n\n\"I'm sorry for interrupting your creative process there, Mr. Director, Sir, but I just wanted to let you know that some of us are going to hang out at Tricia's after practice. I've got a ride there, but I might need one back home later.\"\n\n\"Yeah, sure. I could do that. When?\"\n\n\"It's not supposed to be a drawn-out thing. Say, ten maybe. I can meet you outside the gate.\"\n\n\"Fine. Have fun, and stay out of trouble.\"\n\n\"Dad! Look who you're talking too.\"\n\nRyan punched his shoulder and walked off with such a self-confident air about him that, not for the first time, Matthew was left to wonder which of them was the parent.\n\nHe was actually kind of grateful not to have to worry about cooking that night. It had been a long week, and he was pretty tired. He ended up dozing off on the couch after dinner, and thankfully he had remembered to set the alarm on his phone to wake him in time to pick Ryan back up.\n\nThe night had turned nasty while he slept. A thunderstorm had swept in, pelting the city with rain and strong winds. The power at his house flickered a couple of times but held steady finally as he made to leave out the front door. By the time he reached the main road, the storm was going all-out, making it hard to see through the sheets of rain. He felt terrible about Ryan having to walk to the guard shack in this weather and tried to call him to see if maybe Tricia could let him inside to do the pickup, but Ryan's phone went straight to voice mail.\n\n\"He better not have let his phone go dead,\" groused Matthew.\n\nIt was one of Ryan's less endearing habits. He always forgot to charge his phone, and it would go dead at the worse possible moment. Matthew had cautioned him to keep a charging cable with him when he was out, but Ryan never remembered to do that either, or to keep the charging pack Matthew had gotten him for Christmas in his backpack.\n\nLightning was flashing across the sky when he arrived across the street from Gable Meadows. The first thing he noticed was how dark the neighborhood was, and it soon became clear they had lost power due to the storm. He pulled up to the guard shack, but there was no one inside. The main gate, bereft of electricity, had swung open without its magnetic locks. Matthew glanced around but didn't see the harm in hurrying in to fetch his son and get out. He pulled through the open gate and turned onto the third street down. He recalled Tricia's address from the Drama department's parent directory, so it wasn't a big deal to find the right house.\n\nRyan hadn't been kidding. Tricia lived in one of the largest homes on a street full of small mansions that made his little three-bedroom house look like a hut. He pulled into the driveway and ran up the walkway to the towering front door, still getting wet despite his efforts. The sound of his fist hitting the door reverberated in the interior of the cavernous home, and at first, it seemed as if no one was there. He hammered on the door again.\n\n\"Damn, Kid. I'm going to kill him for letting that cellphone die.\"\n\nMatthew was about to knock a third time when the door swung ponderously open, and he found himself standing in front of Tricia, who held a flashlight in her hand.\n\n\"If you're selling Girl Scout cookies, we already bought,\" she said with a sly grin.\n\n\"Very funny. I'm just here to pick up Ryan.\"\n\n\"Come inside. You're getting soaked,\" she advised. \n\nMatthew stepped inside, grateful to be out of the rain. The entryway of the big house was almost more extensive than his entire home. He stood, dripping a bit on the cold tile floor. Tricia eyed him with curiosity. She was dressed more casually than he had ever seen her so far, in a pair of shorts and a tank top. The latter dropping low enough to show off the swell of her substantial chest. Her hair was pulled back from her face bringing even more emphasis to her gorgeous eyes. \n\n\"Where's Ryan?\" he asked.\n\n\"I need to apologize right upfront. I was supposed to call you.\"\n\n\"Call me about what?\"\n\n\"He and some of the others decided to go for ice cream after we got done watching movies. I was too tired to go along, but they left about a half-hour ago. He asked me to call you and let you know because his phone was dead.\"\n\n\"Of course it was...\" grumbled Matthew.\n\n\"Sorry.\"\n\n\"Which ice cream parlor did they go to?\"\n\n\"McKellars on Fifth.\"\n\n\"Wonderful. This is such a great night to be driving around. Well, don't worry about it,\" said Matthew turning to go.\n\n\"Wait!\" blurted Tricia.\n\n\"What?\"\n\n\"Please...don't go yet. The power went out after everyone left and...Well...It's kind of creepy in this big house all by myself.\"\n\n\"I thought you had servants?\"\n\n\"Did Ryan tell you that? It's a small exaggeration. We do have cleaning people and a housekeeper that stays with us, but this is her night off.\"\n\n\"You could come with me to get Ryan. Maybe the power would be back on by the time we got back here?\"\n\n\"You want to run back out into that?\"\n\nThe storm had gotten worse in the short time since he had come inside. It was raining so hard now he could barely make out his car twenty feet away from where he stood.\n\n\"At least wait until this blows over. I doubt a storm this wicked can last long.\"\n\nIt seemed sensible, but it wasn't lost on Matthew that this put him alone with the one person he had been avoiding. \n\n\"I don't know, Tricia.\"\n\n\"It's okay. I promise to behave myself. Don't worry, Matthew. Your virtue is safe with me.\"\n\n\"It sure as Hell isn't MY virtue I'm worried about,\" thought Matthew, but he followed Tricia from the entryway into a large, open living room. The area was so big Tricia's flashlight beam couldn't light enough of it to give him a real sense of the layout, but she guided him to a spacious couch. He took a seat while she fetched him a towel to dry his head. \n\nHe noticed the script for the play was lying on the glass coffee table near his legs.\n\n\"Were you guys rehearsing?\"\n\n\"I was before the others got here. I want to nail the scene where Joshua and Elsa finally admit their feelings for each other openly. It's such a wonderful moment. I want to make sure there isn't a dry eye in the house.\"\n\n\"I've watched you perform for weeks, Tricia. I can guarantee you there won't be.\"\n\nTricia's smile lit her face almost as bright as the beam of the flashlight she had set down on the table. \n\n\"I'm glad you're happy with my portrayal. I love the whole story. Did it happen the way you wrote it? I'm just wondering if you took any dramatic license.\"\n\n\"Not much,\" he conceded, \"it largely transpired exactly as I wrote it out. My great-grandfather kept a journal as well, and it outlined his thoughts quite clearly.\"\n\nTricia got up while he spoke and went to the edge of the light, fiddling around inside a cabinet and returning with a large candle on a holder. She lit it with a match sending a tiny bit of smoke wafting up toward the ceiling. As soon as the candlewick caught the flame, she reached over and switched off the flashlight.\n\n\"I don't like to waste batteries. It's not good for the planet,\" she said.\n\n\"Very ecologically sound,\" agreed Matthew.\n\nThe switch to candlelight had done more than just save battery life though; it had also bathed Tricia's face in a subtle glow that made her look even more beautiful. He took a deep breath, trying to settle his stomach that was suddenly filling with butterflies. Having to look at Tricia like this wasn't helping matters. In this light, her features had taken on an almost ethereal beauty like some sort of fairy creature that a mortal had no right to look upon. \n\n\"Tell me more about them.\"\n\n\"Once my great-grandfather was able to overcome his fear of losing her, they enjoyed a love that was the envy of the township. Everyone in the area attended their wedding. It was quite an event from what I understand.\"\n\n\"It sounds beautiful. They were happy?\"\n\n\"For many years until my great-grandfather passed on.\"\n\n\"Did Elsa ever marry again?'\n\n\"No. She said that her heart would always belong to her Joshua. I guess she couldn't see herself being with anyone else.\"\n\n\"That's such a sweet sentiment. I'm glad that things worked out for them, given how much your great-grandfather resisted his feelings at the beginning.\"\n\n\"You can't blame him. He had suffered a terrible loss, and it was just easier to wall himself off than to face having to suffer like that again.\"\n\n\"There's is always a risk when we put ourselves out there, but isn't the reward more than worth it in the end?\"\n\nWhile she spoke, Tricia put her hand on the back of the couch close to where Matthew had laid his after tossing the towel aside. Their fingers were just inches apart.\n\n\"I'm sure they thought so, but it doesn't always work out that way.\"\n\n\"You mean you and Ryan's mother?\"\n\n\"That's one example.\"\n\n\"I never met your Ex. but I suspect she was no Elsa.\"\n\nMatthew laughed, \"No, she was no Elsa. There aren't many women like her.\"\n\n\"Didn't you say I was like her?\"\n\nMatthew felt something tickle his hand. He looked over and saw that Tricia was running her nails on the back. \n\n\"You have a lot of her qualities. That's true,\" he admitted grudgingly.\n\nThe candle flame had grown brighter as the wax melted away from the wick, and the glow was now reflected more strongly in Tricia's eyes, making it seem like they were glowing as well. \n\n\"Is that why you're attracted to me?\"\n\n\"Tricia!\" said Matthew sharply.\n\n\"Don't pretend it's not true. I've seen the way you've been looking at me since we took that first walk together in the hallway to the auditorium.\"\n\n\"If I was looking at you in any way that wasn't appropriate, then I'm sorry.\"\n\n\"I'm not. I like the way you look at me. I wish it didn't make you so uncomfortable.\"\n\n\"It should. You're just a kid. I'm the grownup here...I have no right to...to...\"\n\n\"Desire me? I may be just a kid to you, but wasn't Elsa just a kid to your great-grandfather?\"\n\n\"That was 1923. Society was different then. It was a very different time.\"\n\nTricia slid closer on the couch, and Matthew felt his heart race in his chest. He knew he should get up and walk away, but something held him there. He thought ironically that if he was the moth, then the flame was coming to him.\n\n\"Can I ask you something?\"\n\n\"That depends...I have a feeling it's going to be something I can't answer the way you want.\"\n\n\"We'll see.\"\n\n\"Okay, then. Ask.\"\n\n\"Please tell me the truth, Matthew. Do you want to kiss me right now?\"\n\nThe room, as gigantic as it may have been, seemed to shrink until all that existed in that small piece of the universe was the two of them. Matthew's heart was pounding, his hands shaking. He hadn't been this nervous with a woman since he had lost his virginity more years ago than he cared to recall. Tricia was waiting patiently for his answer. Her face hovered not more than a foot away from him. It would be so easy to lean over and see if those full lips of hers tasted as good as they looked. He longed to do precisely that, but his morality warred angrily with his desires. \n\nAbruptly, he leaped up from the couch, putting a meter or so of distance between Tricia and himself. He shook like a leaf on a tree, torn between what he desperately wanted and what he knew was wrong. Turning his back, Matthew put his hands to his face rubbing at his eyes as if he could scrub the image of Tricia from them and by proxy from his heart.\n\n\"Matthew?\"\n\nShe was right behind him. Her voice was pleading and pitying him this torture in the same instant. \n\nThe worst thing he could do was turn around. If he looked at her again, he knew he would be lost.\n\nA hand touched his shoulder. \n\nHe turned.\n\nTricia was right there, gazing up at him. \n\nGod...She was so beautiful.\n\nMatthew's hands rose to cup her face. The skin was impossibly smooth, not a blemish to mar its perfection. He ran his thumb across her thick lower lip. It was covered in some light, berry-colored lipstick, shimmering in the candlelight, so slick and silky. Tricia shut her eyes, the dark shadow on her eyelids making her look even more mysterious and sexy. \n\nMoth meets flame.\n\nHe kissed her.\n\nThe touch of her lips was like someone brushing a feather across his, and it sent a rolling warmth down through his whole body, making him tremble. It might have been a few years since the last time Matthew had kissed a woman, but he was not inexperienced, yet in an instant, he knew he had never shared a kiss as sweet as this with anyone. Tricia slid into his arms, and he held her to him, letting his hands move down from her face to wrap around her middle. They gently rubbed their lips together, enjoying the contact, the moist touching. She sighed into his mouth, slipping her arms around his neck. Their heads began to move, slowly, side to side, bringing their lips into greater contact. A hunger started to claim them, and any inhibitions that Matthew had been feeling dropped away. \n\nSoft groans permeated the semi-darkness, the sounds of two people breathing harder, gasping, needing, wanting.\n\nMatthew tentatively slipped his tongue forward, and Tricia met it with enthusiasm, thrusting hers right back into his mouth. She may have been young, but she French kissed like a much more experienced woman. In no time, she had his knees shaking with her swirling, probing movements. Her juicy lips rolled all over his, sending waves of pleasure running down his back. \n\nThey clung to one another, their kisses becoming more desperate and needful. \n\nThey parted, taking a step back, panting like they had run a long-distance race. Tricia's eyes were wild, so filled with lust, it was almost scary how primal her expression was at that moment. While Matthew looked on, barely able to hold himself in place, she began to strip.\n\nHer tank top went first, slipping from her body with a whisper of silk. It drifted to the floor, but he hardly noticed. His eyes never left her body. Tricia was surprisingly calm, reaching behind to unhook he bra while Matthew drew in a shuddering breath when it joined her shirt on the ground. If she had a flaw, he couldn't find it. Her breasts were the most perfect he had ever seen. Despite their size, they sat firm and high on her young chest without a hint of sag. In the low light, her erect nipples stuck out like ripe cherries off the vast expanse of bumpy dark pink that contained them.\n\n\"Oh...Jesus...Tricia...\"\n\nShe smiled at his apparent appreciation of her assets but was also still moving, unbuttoning her shorts and shoving them to the ground. An emerald green thong covering her womanhood was all that remained. \n\nTricia stepped toward where Matthew stood mesmerized by her approach. She stopped in front of him, seeing how nervous he was by the way his hands shook. He didn't make a move, but she knew he very much wanted to and just needed a little help.\n\nTricia reached down and took his hands in hers, guiding them toward her chest.\n\n\"It's okay,\" she whispered.\n\nThe skin against his hands was smooth, warm, and he closed his eyes for a second and just took in the wonderful feel of her breasts. \n\n\"God...Tricia.\"\n\nHe ran his fingers around the edges of them, lifted them from beneath, feeling their heft, the way they filled his palms. They were so firm, the solid core of a fruit that had, as of yet, gone mostly unsullied. Matthew couldn't stand another second. He swept Tricia back into his arms, kissing her deeply, with all the passion that was suddenly let loose inside him. She sighed and met his excitement full-on, pasting her creamy, silky lips to his and letting her tongue roam around his mouth. The room filled with the sounds of ragged breathing, quiet moans of desperation. \n\nMatthew let his mouth slide free, covering her neck with gentle kisses, moving ever downward. He took those sweet breasts in his hands again and brought his lips to them one at a time, just brushing across her tight areolas letting the skin rub on his face, his tongue flick out for a taste. The stiff nipple barely moved when his tongue rolled around the edge of it. He licked it harder, listening to Tricia gasp when he pushed his mouth around the whole of it, drawing the entire erect knot inside. Her cries grew louder when he started to suck on it, catching the skin between his teeth and pulling it away from her areola, gripping her nipple hard.\n\n\"Ah! Matthew! I've wanted to feel you touch me like this since the first time I saw you!\"\n\nHe smiled, setting her nipple free only to grasp it again between his teeth. The teasing went on, long licks, running his tongue in circles around her areolas until they shined with his spit. Tricia thrashed in his arms, her arousal blooming into a pulsing heat in the pit of her stomach and spreading down between her legs. She could feel the dampness, her labia swelling and pulling away uncovering her pink fleshy hole. \n\n\"I want you, Matthew...\" she hissed as he roughly squeezed and suckled her tits.\n\nHer body left the ground, lifted in his arms, but he didn't go far, setting her back down on the couch, then carefully pushing her legs together and sliding her thong off. The secret place between her legs was mostly hairless. The curly pubic mound that adorned the top of her vagina was trimmed close into a small patch of fur, fully exposing her long, thick pussy lips. Matthew brought his fingers to her juicy labia, running them slowly down her slit, feeling just how wet and slippery they had become in a very short time. Tricia arched her back slightly, groaning and biting one nail while looking down at him.\n\n\"Tease...\" she mouthed.\n\nHe gave her a wicked smile that matched any she had bestowed on him in recent weeks before covering her entrance with his mouth and letting his tongue run free. \n\n\"Oh! Oh! Yes! Yes...Matthew! Ah! GOD! YES!\" ",
        "It was the hottest thing he had ever seen in his life, the sight of this naked, curvy, sexy, young woman writhing in pleasure on her couch. The juice that poured out of her was tangy and tart, coating his tongue. He ran it straight up between her labia to catch her clitoris at the top of her hood.\n\nTricia nearly came off the cushions.\n\n\"FUCK ME! Ah! Shit! Matthew! I don't know what you're doing but...GOD! Don't stop!\"\n\nClearly, the boys she had been with before didn't have a clue how to please a woman. \n\nWith one hand, he fingered her tight opening, and with the other, he played with one firm breast. His tongue lashed her clit like a badly behaved child. Tricia was beside herself, unable to lie still, pushing up with her hips and forcing her pussy tighter to Matthew's face while she moaned and grabbed at the back of the couch.\n\n\"Oh! Son of a BITCH! I'm going to fucking cum!\" she screamed.\n\nMatthew caught it full-on, her juice roaring out to drench his face while she whimpered and threw herself from side to side. He had never seen a woman go off so hard before, and it turned him on so bad he knew he had to have her right there and then.\n\nWhile Tricia recovered, he stood up and undressed, dropping his shirt to rest on top of hers and removing his shoes and pants. His silk boxers bulged with the shape of his tortured cock. \n\n\"Oh...Matthew...\" said Tricia quietly, sitting up to put one hand on his throbbing dick, squeezing it through the cloth.\n\nHe winced, barely containing an urge to throw her naked body back on the couch and take her hard and rough, but he didn't want to frighten her by being too aggressive. \n\n\"Tricia...\"\n\n\"My turn to tease...\" she said with a sultry smile.\n\nShe rolled down his underwear, letting his cock swing free. The fat, thick head was swollen and dripping with clear fluid, his long, vein-covered shaft red and angry looking in the candlelight. Matthew couldn't remember ever being this hard before. His cock stood high, curved toward the ceiling, and he thought his balls had never felt so full. \n\nTricia, despite her seeming inexperience, moved slowly, letting the pressure mount while she ran her fingers up and down his cock, exploring every inch before wrapping them around it. The jerking motion that followed made Matthew groan, and she compounded his growing excitement by rubbing her lips on the underside of his penis. He grew crazed with the need to feel her mouth on it, but every time he pushed towards her waiting lips, she pulled away.\n\n\"Tease...\" he gasped out.\n\n\"Poor Baby...You need me. Don't you?\"\n\n\"God, YES!\"\n\nShe took pity on him at last, letting her tongue roll around the fat head before rising to take him fully into her mouth.\n\n\"Ah! Tricia! Fuck, yes!\" \n\nMatthew bit his lower lip and tossed his head back, eyes shut. The pleasure was amazing, and Tricia had more than a little natural skill. Her head bobbed up and down his shaft taking him deeper with each push until she was gagging on it. When she pulled back, his dick was covered in her slick spit, and she went to jerking him hard and fast, watching with fascination his balls surge and harden. He felt a moist heat on his swelling sack, and Tricia took his pleasure up another notch when she started to lick and suck on his balls.\n\n\"Holy...FUCK! Tricia! That feels so good!\" he whimpered.\n\nMatthew had often begged his ex-wife to do precisely what Tricia was doing now, but she had objected, thinking it too gross for her taste. Her tiny hand masturbated his straining cock the whole time, driving him ever crazier with the desire to join his flesh to hers. \n\nHe growled like a caged animal, unable to contain his needs any longer.\n\nTricia found herself pressed over onto her back, Matthew on top and looking down at her with a lust that was almost frightening in its intensity.\n\nThe thunder outside barely masked Tricia's scream when he entered.\n\nGod...was she tight.\n\nIt was evident that Tricia wasn't a virgin, but her pussy had seen very few visitors and nothing like the thick, fully developed penis that penetrated her now. Her eyes squeezed shut, and she cried out with the feeling of her young slit being slammed open by the fat head of Matthew's prick. It pushed violently into her shoving aside her dripping pink walls, descending toward her womb in a single, hard thrust. \n\nMatthew arched his back, reveling in the sensation of being squeezed inside Tricia's body and held tight in her slippery hole. The euphoria quickly started to fade though when he looked back down at the pained expression on her face, and it hit him that he had allowed his overcharged libido to take over, forcing this poor girl to take him before she was fully ready. He should have gone slow, been gentle, but so many years of denial had left him unprepared for this moment.\n\n\"Tricia...I'm so sorry...Did I hurt you?\"\n\nShe was breathing hard, but out of pleasure or pain, he couldn't tell. \n\nA slow smile finally settled on her features, and a sense of relief flooded Matthew's brain.\n\n\"It's okay. You didn't hurt me...I like that I turn you on so much you can't fight your need for me.\"\n\n\"It feels so good inside you.\"\n\n\"You're filling me, Matthew. I've never felt it like this...It was never this good before...Don't hold back...Take me now.\"\n\nLightning flashed outside the windows, momentarily dispelling the darkness and revealing two lovers locked in a perfect embrace. Matthew did as she asked and began to make love to her with long, slow movements, taking care now to allow her time to adjust to his girth. Their bodies fell into sync. Their hips were meeting with the distant slapping of skin on skin. Tricia began to moan and thrash beneath him, digging her long nails into his back with each thrust. He gasped and cried right along with her caught up in the sheer, unbridled joy of it all. \n\nThere was no denying her allure. Her young body so perfect, every curve, every flawless inch of skin. The way she looked up at him with so much hopeless, naked desire. \n\nTheir movements began to reflect their internal struggle between the need to be released from this exquisite torture and the longing for the pleasure never to end. \n\nTricia pulled Matthew's head down, covered his lips with hers in a fiery, intense kiss.\n\n\"Oh! Matthew! You're going to make me cum again!\" she warned him a breathless whisper.\n\nThe stared into one another's eyes as their pleasure peaked.\n\n\"Matthew! You're going to make me cum! OH GOD! You're going to make me cum! Oh...Yes! Yes! YES! OH, MATTHEW!\" \n\nHe felt her go. A climax so hard he found it difficult to push through it. She looked so gorgeous caught in the spiders web of her orgasm, shaking, mouth falling open in a silent scream. It was an image of beauty that would be seared into his brain forever.\n\n\"Tricia...My God...You are so beautiful...\"\n\n\"Don't fight it, Matthew. I know you're close.\"\n\n\"Is it okay?\"\n\nShe caught his meaning and nodded.\n\n\"I'm safe. Don't hold back. I want to feel you!\"\n\nMatthew was seized by an implacable urge to move ever faster like an engine fed too much fuel. The sounds of his hard, panting breaths became more audible. His body snapped tight, back arching as he emptied his seed into Tricia's fertile young body.\n\n\"TRICIA! Ah! God! Baby!\" he yelled.\n\nShe clung harder to him, holding him close while feeling each pulse and jerk of his cock shooting inside her.\n\n\"That's it! Give it to me! Give it all to me! Oh, Matthew!\"\n\nThey fell into another sweet kiss while the rain splattered against the windows and beat a steady tattoo on the roof. \n\nAfterward, Tricia guided him to a more comfortable spot to lay than the floor. She didn't need a candle having grown up in this house, but she brought one just the same so that he could see his way forward. The guest bedroom they ended up in was nicer than any four-star hotel that Matthew had ever seen. The silk sheets slipped around their naked bodies as they slid between them cuddling together.\n\nMatthew kissed Tricia's forehead, stroked her hair while she pillowed her head on his chest.\n\n\"Can I ask you a question?\"\n\n\"I don't own any handcuffs, but there's some rope in the garage.\"\n\nMatthew laughed out loud, \"Intriguing. But that wasn't where I was going.\"\n\n\"I suppose that's fair. I asked you one.\"\n\n\"And look where it led us.\"\n\n\"We would have ended up here anyway.\"\n\n\"Oh! You sound so confident.\"\n\n\"Am I wrong?\"\n\nShe looked up and cocked one eyebrow in the air.\n\n\"I didn't know you could do that.\"\n\n\"Do what?\"\n\n\"Cock your eyebrow that way. I've always thought it was such a cute, sexy thing when a girl could do that.\"\n\n\"Seriously?\"\n\n\"Yep...I know it's a strange thing to get hung up on, but I just love it so much.\"\n\n\"So if I did this when we're having sex?\" she asked, arching one thick eyebrow.\n\n\"I'd probably cum.\"\n\n\"Good to know.\"\n\n\"Can I ask my question now?\"\n\n\"Sure.\"\n\n\"Did you really go to school with an entire bottle of booze in your backpack?\"\n\n\"Ryan narced on me.\"\n\n\"He was concerned about you. So am I.\"\n\nShe sighed, sitting up slightly to make eye contact.\n\n\"The short answer is, yes, I did have booze in my backpack. I showed it to Ryan and made a joke to...I don't know, shock him, I guess? It was just one of those silly teenage moments. The truth is I never even opened it, let alone drank any.\"\n\n\"Why did you have it then?\"\n\n\"I took it from my parent's liquor cabinet intending to drink it all. I was upset at the time. They had left me again to go on another one of their adventures, and I felt lonely. Abandoned.\"\n\n\"Have you ever told them how you feel?\"\n\n\"Oh! Have I ever. Believe me, Matthew. They know exactly how I feel for all the good it's done me.\"\n\n\"I don't understand. How can they still ignore you?\"\n\n\"They already got what they wanted.\"\n\n\"You've lost me.\"\n\n\"This house. The trips. It's all being paid for with my grandfather's money. My mom and dad don't work. They inherited a big chunk of money when my grandfather died. He did have one stipulation. I guess he was worried they were just going to take the money and blow it, so he made it a part of his will that they wouldn't inherit if they were childless. It was a stupid idea if you think about it. I'm assuming that he thought the responsibility of parenthood would make my mother grow up, but that backfired spectacularly. Oh, I think she tried for a while, but her natural inclination was to enjoy herself, and my dad wasn't much better. The two of them are peas in a pod. They spend their time jet-setting. Their lives are one endless party.\"\n\n\"Certainly, it can't last forever.\"\n\n\"I'm pretty sure my parents aren't the type to plan. The way they're burning through the money, it probably will run out one day. God, help them when it does. I don't plan to be around to see it when they crash and burn. My grandfather set aside a trust for me, which I claimed in part at eighteen. The rest I get when I graduate from college.\"\n\n\"What then?\"\n\nShe shrugged, \"Then? I make a life for myself, I guess.\"\n\n\"I'm so sorry, Tricia. I've never heard of anything like that. I don't know how your parents could be that callous.\"\n\n\"Not everyone in the world has a heart like yours, Matthew. Ryan's lucky.\"\n\nHe pulled her back to him and resumed stroking her hair. The storm outside started to calm. The sounds of rain on the roof faded.\n\n\"I hate to say this, but I need to go. Ryan's going to wonder where I am.\"\n\n\"Please don't go yet. Just hold me a little longer.\"\n\n\"Tricia...\"\n\n\"I'll make it worth your while.\"\n\n\"Oh?\"\n\nShe started to kiss his chest, working her way back up to his lips. A moment later, she was on top of him, tongue working its magic in his mouth. Between his legs, Matthew's cock stirred to life.\n\n\"Are you trying to distract me?\"\n\n\"Is it working?\"\n\n\"Yes...\"\n\nRyan looked at his watch again. The ice cream shop had closed an hour earlier. Thankfully, the rain had stopped, but he still needed a ride home. \n\n\"I should have charged my phone. I wonder if Tricia forgot to call him?\"\n\nHis dad was forgetful but had never left him sitting on a sidewalk in the middle of the night. If they could have afforded two cars, this wouldn't have been a problem. Ryan was planning on working over the summer to get together the down payment for one of his own, but for now, they were a one-car family.\n\n\"Everything okay, Pal?\"\n\nThe owner of the ice cream parlor had just locked the door and was looking down at where he squatted on the sidewalk.\n\n\"Uh...My dad seems to be running late. You wouldn't have a cellphone I could borrow, would you?\"\n\nThe older man laughed and pulled a battered-looking phone from his coat pocket.\n\n\"Help yourself.\"\n\nRyan quickly dialed his dad but didn't get in answer, just straight to voice mail. He tried twice more while the shop owner waited patiently. It was becoming clear that wherever his dad had gotten to, he wasn't going to answer. Ryan scratched his head. He had one other possibility, but it was a card he hated to play.\n\n\"Like I have a bunch of choices right now.\"\n\nLess than a half-hour later, a small, red car pulled up in front of the ice cream parlor. The window rolled down, and a curly-haired red-head poked her head out.\n\n\"Going my way, Stranger?\"\n\nRyan practically lept into the car, more than ready to get away from the well-meaning shop owner who had insisted on staying with him until a ride came.\n\n\"Fly fishing, Jenny! For the last half-hour, the only subject the man could talk about was fly fishing! I learned more about it than I ever wanted to know.\"\n\n\"I got here as fast as I could,\" said his girlfriend with a chuckle.\n\n\"Thank God, your parents got you a car for your eighteenth birthday,\" said Ryan.\n\n\"So, you don't know what happened to your dad?\"\n\n\"Mr. Flighty? He probably fell asleep watching some classic black and white movie and forgot I was out. I hope your parents weren't pissed that I called so late.\"\n\n\"They were asleep themselves. To be honest, I slipped out without letting them know. I am adult now, right? Do I have to check in with them every time I need to go somewhere?\"\n\nRyan kind of felt she probably did since she still lived at home, but he wasn't going to take a chance at ticking off his savior, so he just agreed. They pulled up in front of his house a short time later, but oddly, there was no sign of his dad's car.\n\n\"That's funny. If he's not here, then where the heck did he go? I hope he didn't get into an accident or something. That storm was a bitch.\"\n\n\"I'm sure he's fine. The traffic might have been bad. I ran into a lot of stoplights flashing and stalled cars driving from my place. If you want, I could stay with you until he shows up?\"\n\n\"I don't want you to get in trouble.\"\n\n\"My parents sleep like they're dead. They'll never notice I'm gone.\"\n\nThey sat for a moment listening to the cooling engine tick.\n\n\"So...How would you like to pass the time?\"\n\nJenny was looking at him very intensely, and he felt his mouth go dry.\n\nThey had been together for almost a year, but things hadn't progressed much beyond kissing until just recently. Jenny had seen her eighteenth birthday as something of a milestone that seemed to have heralded a previously unencountered sexual awakening. In the weeks since, she and Ryan had slowly been progressing toward a full-on physical confrontation. It had been an adventure of fits and starts. Jenny sometimes seeming as if she was ready to go all the way, but then backing off at the last minute. Ryan had gotten frustrated a few times, but he loved her too much to push.\n\n\"What did you have in mind?\"\n\nShe smiled wickedly at him. Her pretty, freckled face, suddenly flushed with an excitement that colored her fair skin a deeper pink. \n\nRyan returned her smile as she unbuckled her seat belt and slid closer, looping a hand behind his head. Jenny had a sweet, pert little mouth, with very soft light pink lips, and they danced across Ryan's like butterfly wings. He had always loved kissing Jenny, but tonight there seemed to be an even greater urgency to it. She pulled his mouth tighter, slipped her agile tongue inside, and made it dance all around. The heat grew inside the interior of the vehicle causing the windows to fog. \n\n\"Jenny?\" he gasped.\n\nHis arousal was taking off like a jet. It was getting hard to think straight, and she didn't seem interested in letting him. \n\nSlowly, she guided his hand toward her chest. \n\nThey had gotten this far a few times, but never in public. The fact that they were sitting on a neighborhood street, even if it was in the middle of the night, upped the craziness factor considerably. \n\nRyan's hand shook, but somehow he managed to unbutton her blouse. The minute the last button gave way, Jenny took his hand and moved it upward. He groaned in his throat, hardly believing she was going to let him touch her this way now. \n\nShe wore front clasp bras most of the time, and this night was no exception. The small plastic hasp parted easily, and the two halves fell away from one another. Jenny's perky, tea-cup breasts weren't large, but Ryan never got tired of seeing them. He put his hand over one, feeling the dime-sized nipple poking into his palm. \n\n\"Ah...Damn...\" he groaned.\n\nThe smooth skin was so warm. He squeezed it, letting his thumb run across her erect nip. Then with a sharp intake of breath, he darted his head down and put his mouth right on her tit, sucking that tight little knot into his mouth. Jenny dropped back against the seat, moaning softly while he played with her bare chest, licking and sucking her tits until they shined in the faint moonlight.\n\n\"Oh...Ryan...That feels so good...\"\n\nHe was trying to keep it together, not wanting to get too excited as he had in the past. There were times when he had tried to move faster than she was comfortable, and he didn't want to ruin this moment. It was so hard to keep himself in check though with her so fired up, that excitement feeding his. It seemed like a bad idea, but he couldn't help himself, and he put one hand on her thigh and let it creep up under her skirt. She didn't react at first, at least not negatively, so he pressed on, feeling his blood boil and his breath come more quickly. There was heat between her legs, a warmth coming off her skin that seemed to get even warmer as he slid his hand upward. He kept suckling one tit while his fingers edged within inches of the place he had been dying to go.\n\n\"Jesus...please let this happen...\" he thought desperately.\n\nHis fingers encountered the soft, cotton outside of her panties. Jenny tensed up, but she didn't tell him to stop or push his hand away as she had done before this night. Carefully, Ryan slid her panties to one side, letting his fingers slip into the space behind. \n\n\"Oh...My God!\" \n\nHe was there. He could feel it. The thick, bushy pubic hairs were parting around his fingers. The tender, wet opening to her virgin pussy pulsing, throbbing with an urgent need. \n\n\"Ah! God, Ryan!\" cried Jenny softly when he pushed a finger into her trembling pink hole. The first boy ever to touch her there.\n\nHe wasn't sure what he was doing, but he had seen enough video's on the Internet to get a general idea. \n\nTime seemed to come to a standstill in that car. There was nothing but the hard breathing of two young lovers tentatively seeking their first pleasures together and the soft drip of latent raindrops hitting the roof as they ran off the tree branches above. \n\nJenny pulled Ryan's lips back to his and kissed him hard, frantically thrusting her tongue into his mouth while his fingers moved more quickly between her legs. \n\n\"Oh...Oh...God...Ryan...Ryan...I think I'm going to...AH! RYAN!\"\n\nShe suddenly threw her head back against the seat, shaking so hard Ryan was afraid he had hurt her somehow, but nothing could have been further from the truth. Jenny was climaxing, orgasming all over her boyfriend's hand for the first time, and it left her trembling.",
        "\"Holy shit! That felt so good!\"\n\n\"I was doing it right?\"\n\n\"I'm pretty sure you were. Fuck...\"\n\nJenny opened her eyes, to find Ryan's fevered, wild eyes looking back down at her. He had pulled his hand away, but now he reached down and tried to lift her skirt. She gently put her hand on top of his, stopping him.\n\nDisappointment colored his expression.\n\n\"I love you, and I want to, but I'm not ready yet. I do want to do something for you if you'll let me?\"\n\nRyan let Jenny push him back into the passenger seat. She reached across him to tilt his seat back, and then, with his eyes growing wider by the second, she started to undo his pants. \n\n\"Jenny...\" he moaned.\n\nThe denim of his jeans spread back in a \"V,\" and she pulled the elastic top of his underwear down. Ryan's stiff, hairy cock sprang up like it was trying to escape. Jenny took it in her small hand, marveling at how hard it was, how the thick veins throbbed with the blood that swelled Ryan's shaft to its full size. She stroked it a couple of times experimentally, afraid she would do it too hard.\n\n\"Faster...please...\" begged Ryan.\n\n\"Okay. Tell me if I hurt you.\"\n\nJenny moved her hand more quickly, watching Ryan's eyes get a glassy, far away look. \n\n\"More...faster...Oh, GOD! Jenny! Faster!\"\n\nA little fearfully, she stroked it harder, quicker, fascinated with the way Ryan grabbed at the seat. \n\n\"Tell me when you're going to cum,\" she whispered, and before he could ask why she leaned down and pushed her mouth over the head of his quivering penis.\n\n\"Holy MOTHER!\" cried Ryan, grasping the door handle in a death grip.\n\nJenny was the kind of girl who liked to be prepared. She had learned that in Girl Scouts growing up. That had led her to seek out the advice of a few trusted girlfriends, which, in turn, led to a few embarrassing nights practicing on zucchini and carrots to get ready for this moment. \n\nThe practice was paying off.\n\nRyan tasted different than she had expected, not bad, just odd. \n\nHis cock was thicker than the vegetables she had used to get ready, but her saliva was more than lubricant enough, and his noises spurred her on. The head seemed to swell even more in her mouth, a salty discharge rubbing onto her tongue. Ryan was moaning so loudly she was afraid someone might hear, but she was too turned on to care. \n\n\"This is sucking cock? Huh? I like it...\" she thought, loving how powerful it made her feel like she was in control. \n\n\"Fuck! FUCK! FUCK! Jenny! NOW!\" he cried.\n\nJenny pulled away and jerked Ryan's dripping cock in her hand. She didn't have to wait long for the explosion. His penis jumped like a scalded cat, spewing thick gobs of sticky semen up into the air. \n\n\"Oh, JENNY!\" gasped Ryan.\n\nShe kept pumping it, wondering if he would ever stop. Cum was getting everywhere, all over his stomach and down into his dark, tangled pubic hairs, running down her hand. \n\nThe cleanup took both of them and most of an opened box of tissues in her glove compartment.\n\n\"That was some show. Do you always shoot so much?\"\n\n\"Not hardly. I think you brought out the best in me,\" said Ryan, who was grinning so hard it made his face hurt.\n\n\"I'm sorry that I stopped you from...you know...I just...\"\n\n\"Hey, it's alright. We talked about this before, and we're not on anyone's time table but our own. When you're ready.\"\n\n\"That, right there, is one of the reasons I love you,\" replied Jenny.\n\nThey started to kiss again when headlights illuminated their vehicle. His dad's car turned into the driveway, and Ryan and Jenny stepped out to meet him.\n\n\"Dad! I'm glad to see you. We were worried something might have happened to you.\"\n\n\"If you kept your cellphone charged, I could have let you know,\" said Matthew reasonably.\n\n\"Did you not get my message about the ice cream parlor? Tricia was supposed to call you for me.\"\n\nMatthew hesitated awkwardly before answering, \"I saw Tricia when I came to pick you up. She mentioned she forgot.\"\n\n\"I guess I should have known better than to count on someone else. Where have you been this whole time, then?\"\n\n\"Oh...Uh...The power was out at Tricia's house, and she was scared so...I stayed with her until it came back on.\"\n\nRyan raised an eyebrow at that, \"You stayed knowing I was at the ice cream parlor without a ride?\"\n\n\"You're an adult now I knew you would figure it out. Tricia was really in a bad way. I didn't feel like I could just leave her. I could have told you that if you had your cellphone working,\" shot back Matthew, trying to turn attention away from Tricia and keep Ryan on the defensive.\n\nSensing a brewing argument, Jenny intervened to keep the peace.\n\n\"Hey, Guys! It all worked out in the end, and everyone is home safe. Isn't that what's important here?\"\n\n\"The voice of reason,\" acknowledged Matthew.\n\n\"I should get home. It was nice to see you, Mr. Goodwin.\"\n\n\"You too, Jenny. Drive careful on your way home.\"\n\n\"I will.\"\n\nMatthew stood on the porch, watching Ryan lead his girlfriend back to her car. \n\nHe had nearly had a heart attack when he saw them parked out front. He had hoped that Ryan got a ride with someone else and perhaps would be asleep by the time he arrived at least forestalling any awkward questions until the morning.\n\n\"It must have been an interesting night of conversation spending so long in the dark with Tricia,\" comment Ryan when he returned from seeing Jenny off.\n\n\"We mostly just talked about the play and acting in general,\" said Matthew as he unlocked the door to their house.\n\nAs soon as they were inside, Matthew feigned a yawn.\n\n\"It's late, and I'm bushed. I'll see you in the morning, Kid.\"\n\nHe started to pat his son on the shoulder, but Ryan was looking at him curiously.\n\n\"What?\"\n\n\"You smell like Spring Violets.\"\n\n\"I beg your pardon?\"\n\n\"Spring Violets, it's the perfume that Tricia wears all the time. I get a nose full of it every day because she sits in front of me in our Civics class. I was also there when John bought it for her.\"\n\n\"Yeah...Well...As I said, she was upset, and she hugged me when I left to thank me for staying with her. I guess her perfume rubbed off on me.\"\n\n\"Must have been a long hug.\"\n\n\"Ah! Get your mind out of the gutter!\" shot back Matthew, trying for a kidding, dismissive tone.\n\nHe darted toward his bedroom before Ryan could ask questions anymore, but he could feel his son's stare boring into his back.\n\n\"Goodnight...\" whispered Ryan.\n\nHis dad shut the door to his room, but Ryan lingered in the hallway, lost in thought. One of the things he and his dad had in common was that they were both terrible liars. He was overcome with the most definite feeling that his father wasn't giving him the whole story about what had gone on at Tricia's, but the apparent conclusion seemed ludicrous.\n\n\"Dad and Tricia? No way...\" he thought.\n\nThen again.\n\n\"Man...This is too much to think about,\" grumbled Ryan deciding bed was his best option as well.\n\nTHE SHOW MUST GO ON -\n\nOpening night was always stressful for everyone, but this one, in particular, took the cake for Matthew. He had directed many plays, all at the college before tonight, but never had he been having an affair with his lead actress.\n\nIt seemed almost clich\u00e9, the director sleeping with the star of the show.\n\n\"Affair...Who am I kidding? It was one night, and if I'm smart, it will never be repeated,\" groused Matthew under his breath while observing his techs lighting the stage. The week that followed had seen him ducking Tricia and trying to keep any contact purely professional. The best thing for them both was probably to pretend like it never happened.\n\nHe wanted to believe that, but when he had seen Tricia getting out of her car earlier, his heart had fluttered in his chest.\n\nShe had been with her friends. That stopped him from even thinking about going over to her. The urge had been there because she looked great, wearing a black and white striped cotton summer dress that hugged her curves. The parking lot had been full of other drama kids as well, so he tried not to stare when she crossed in front of him, but it took a real effort. Seeing her again, brought on a crush of memories from their stormy night together, bodies intertwined, lips and hands moving all over. \n\n\"Mr. Goodwin? Does the key light looked centered?\"\n\n\"Huh? Oh...Yeah, Jeremy. It looks good.\"\n\n\"Get your head in the game, Mr. Director, \" Matthew chided himself. \n\nThis wasn't the time to dwell on what a mess he may have made of things.\n\nTicket holders started to arrive, and Matthew went backstage to see how things were going with hair and makeup. He had to admit the kids had done a fantastic job finding clothing that was at least close to the period and creating hairstyles to match. Things seemed to be moving along fine, so he drifted back out to the auditorium where the seats were filling up.\n\n\"Mr. Goodwin! I can't tell you how excited we all are to see what you've put together,\" said Principal Mathers, pumping his hand.\n\n\"I hope you'll be pleased,\" said Matthew, trying to rub the sweat off his hand without Mathers noticing.\n\n\"Does this guy ever not have wet palms?\" thought Matthew.\n\n\"I'm sorry. I have so much to do. If you would excuse me?\"\n\n\"Of course...Break a leg!\"\n\n\"Right.\"\n\nMatthew made a hasty exit, determined to put some distance between himself and the odd Principal.\n\n\"Hey! Mr. Goodwin!\"\n\nHe was almost grateful when the stage manager, Karl, came up to him. Any distraction at the moment was a good thing.\n\n\"We might have a small problem.\"\n\n\"What is it?\"\n\n\"One of the girls told me that Tricia was getting all freaked out in the dressing room. Stage fright, maybe? I don't know for sure, but she won't come out.\"\n\n\"Shit...I mean...Don't worry about it. I'll take care of the situation.\"\n\n\"Yes, Sir.\"\n\nMatthew glanced at his watch, fifteen minutes to curtain. This was the last thing he needed, but he knew he had only himself to blame for it.\n\nA small crowd of girls was gathered around Tricia when he arrived. She wasn't crying thankfully, but she did look unhappy, not wanting to meet his eyes.\n\n\"Why don't you ladies get up to the stage. I would like to talk to Tricia,\" he said in as authoritative a tone as he could manage.\n\nOne of the young women patted her on the arm before she left.\n\nAs soon as the door closed, Matthew stepped close, looking worriedly at his star.\n\n\"What's wrong, Tricia?\"\n\n\"Do you regret the other night?\"\n\nShe looked up at him finally, and the hurt in her eyes was more than plain.\n\n\"You want to talk about this now?\"\n\n\"The way you've been avoiding me all week, I figured you never wanted to have a conversation about it.\"\n\n\"Tricia, it's not about regret, though I would be lying if I didn't say I had reservations about what happened. I'm supposed to be your mentor, your teacher, a person who sets an example for you. Not...\"\n\n\"My lover?\"\n\nHe winced at the description. Just hearing it made him even more aware of how wrong the world would see what he had done.\n\n\"I'm not sure I would use those words.\"\n\nTo this point, Tricia had been sitting in the shadows in the corner of the dressing room. She rose now and stepped into the light. \n\nMatthew was stunned into silence. \n\nTricia had modeled her outfit and hair after the photo he had shown her of his great-grandmother, and it was amazing how much she did look like his long-deceased relative. \n\n\"What words would you use?\"\n\n\"I don't know. This situation is complicated, Tricia. There is so much going on here, with you, your parents, the fact that I'm so much older.\"\n\n\"You know who you sound like right now?\"\n\n\"Who?\"\n\n\"Joshua Goodwin.\"\n\nTricia crossed the room to stand right in front of Matthew, her eyes flashing in the bright lights of the makeup tables.\n\n\"You wrote a whole play about the greatest love-affair in your family's history and at the core of it was a man fighting his feelings. Your great-grandfather nearly lost the love of his life because he couldn't put one unfortunate tragedy behind him. Are you any different because you can only bring yourself to see the problems ahead for us?\"\n\n\"I'm just trying to be realistic.\"\n\n\"If Joshua and Elsa had been worried about being realistic, you wouldn't even be standing here.\"\n\n\"Tricia...\"\n\nShe came closer, reaching up to put a hand on his cheek.\n\n\"I don't want to be just your lover, Matthew.\"\n\n\"What do you want to be?\"\n\n\"Your Elsa...\" she whispered, leaning up to kiss him softly.\n\nThe lights blink off and back on.\n\n\"You need to get to the stage,\" he managed to say despite the plethora of emotions that were churning within him.\n\n\"Can I see you after the show?\"\n\nA knock cut off his answer, and he took a deep breath, trying to calm his nerves as he stepped to the front door.\n\nRyan stood on the other side, in costume and ready to go, but looking worried.\n\n\"What are you guys doing? The curtain is about to go up!\"\n\n\"We're coming. Tricia was just a little nervous.\"\n\n\"Since when?\" \n\nTricia breezed passed both men making her way quickly up the stairs to the main stage. Ryan and Matthew watched her go.\n\n\"Is she okay?\"\n\n\"She'll be fine, Son. Just worry about your lines. I need to get into position, and so do you.\"\n\nMatthew started to step passed him, but Ryan grabbed his arm.\n\n\"Can I give you one piece of advice before you go up, Dad?\"\n\n\"Yeah, Sure.\"\n\n\"You might want to wipe the lipstick off your face before you do.\"\n\nRyan walked away with one last look over his shoulder.\n\n\"Shit...\" said Matthew to himself as he leaned down in front of a mirror to wipe off the evidence of Tricia's kiss.\n\nThe play went off without a hitch after that, and the whole cast was brilliant, but especially Tricia, who seemed to embody the role of Elsa perfectly. The audience gave them a standing ovation, and Matthew was justifiably proud of what they had accomplished with this run-through. The U.I.L trophy could be in the bag. If only he felt as confident about his future.\n\nThe cast as a group wanted to go out and celebrate, but Matthew politely declined to go with them. Ryan was going, still giving him side-long looks before he took off. It was obvious the two of them would have to have a long talk about things. Matthew wasn't looking forward to that discussion. \n\nHe drove straight home afterward, and though he wasn't much of a drinker, poured himself a stiff shot of whiskey and downed it in one go.\n\nThe cable guide listed a Humphrey Bogart film festival that night, which ordinarily would have thrilled him, but he had too much on his mind to focus on it. When his doorbell rang at near 11:00 p.m., he was sitting on the couch, lost in thought. Assuming that Ryan had forgotten his key, he went to answer the door.\n\n\"Tricia! What are you doing here?\"\n\n\"The cast party was boring without you. I figured you could use some company.\"\n\n\"Jesus! Get in here before someone sees you!\"\n\nMatthew pulled her inside, looking up and down the sidewalk to see if any of his neighbors were still awake, but no one had their lights on.\n\n\"How would I explain a teenage girl on my doorstep this late if one of the neighbors saw you?\" \n\n\"Tell them adult prostitutes were too expensive?\"\n\nHe locked the door and favored her with a frown, \"Nice. You're almost as big a smart ass as Ryan.\"\n\n\"Have you been celebrating alone?\" she asked, seeing the whiskey bottle on the coffee table.\n\n\"No. I just had one when I came home. Guess I was too lazy to put the bottle away.\"\n\n\"You didn't say what you thought of my performance tonight?\"\n\n\"Are you asking for notes?\"\n\n\"You are the director.\"\n\n\"Then, I thought you were amazing. I can't think of anything I would change about it.\"\n\n\"My Elsa met with your approval?\"\n\n\"Very much so,\" he confirmed \n\n\"I'm glad. I wanted to do it perfectly for you. There are all kinds of things I want to do for you.\" \n\nShe added this last part while moving into the living room.\n\nWhen Tricia arrived at his house, she had been wearing a long, dark jacket that went all the way passed her knees. She untied her coat right then and turned, shucking if off onto the floor.\n\n\"Jesus Christ! Tricia...\"\n\nThe outfit she had on underneath left very little to the imagination. A black, lacy, teddy with long silk stockings that ended on spiked-high heels with matching panties that hugged her hips. Matthew couldn't take his eyes off her as she moved toward him, one hand on her hip. \n\n\"You like it?\"\n\n\"This isn't a good idea. Ryan might come home at any minute.\"\n\n\"I left him not too long ago. The way those boys were chattering, they're going to be at it for hours. Jenny Parker showed up, so I think that will keep him busy as well. We don't need to worry.\"\n\nShe came closer, and Matthew's heart started to palpitate in his chest.\n\n\"You didn't say if you liked my outfit?\"\n\n\"Um...Well...Shit...You look beautiful, okay?\"\n\nTricia smiled in a very sultry fashion. She had taken the time to remove her stage makeup, and what she had replaced it with gave her a dark, sexy look. Her full lips gleamed all cherry-red in the light of Matthew's house. Her steps brought her to Matthew's chest, and she ran her hands up, letting them meet behind his neck.\n\n\"Do you want your Elsa, Matthew?\"\n\nThis may have been one moment in time, but Matthew sensed the crossroads he had reached. The decision he made now would reverberate for a long time to come. He knew what was right and what was wrong, but to this, he added a third option.\n\nWhat his heart truly needed.\n\n\"Great-grandpa? I read your words, but now I see why you had no other choice,\" he thought.\n\n\"I want more than that. I want my Tricia...\"\n\n\"I'm all yours.\"\n\nTheir lips met in a hot, searing kiss that became instantly hungry and wild. Tricia's slick lips were like velvet on his sliding so perfectly all around. He took in the scent of her, the taste, her warmth permeating every fiber of his being. His desire for her, like a lump of hot coal dropped into a pile of paper, burned straight through making him mad with need. \n\nMatthew pulled her firm body tight to him and parted her lips wider with his tongue. She sighed in the back of her throat, met the tip of his tongue with hers, letting them move together in a sweet dance. It didn't take them long to end up in his bed, Matthew's clothes tracing a line back to the door.\n\nTheir naked bodies pressed together between the sheets while he gently kissed her erect nipples, fully enraptured by how gorgeous her wide, dark areolas were, entranced by their smoothness. \n\n\"Need you inside me...\" she moaned softly.\n\nHe let his weight shift forward, almost imperceptibly, but it was more than enough. Tricia let out an explosive breath as Matthew's steel-hard penis rammed into her flesh. She had never felt anything like his cock as it descended into her body. The head forced a passage to her womb, slamming open her sugar walls. He arched his back, groaning loudly in the small space, loving the caress of her silky cunt on his cock, so tight, so wet, wrapping his prick in its velvet embrace. \n\nThey made love at a slow, steady cadence that grew more rapid with their peaking arousal. \n\nMatthew slid one hand into Tricia's, intertwining his fingers with hers and holding on.\n\nWhen they came, it was together, a violent, mutual eruption of ecstasy that left them weak and trembling.\n\n \"Are you sure you don't want me to come in for a bit?\" asked Jenny.\n\nRyan would have liked nothing better. His house was dark, and his dad likely asleep. He could only guess at what type of shenanigans he and Jenny could get up to, but given everything that had happened tonight, he wanted to be alone with his father.\n\n\"Sorry. I'm exhausted. Can I see you tomorrow?\"\n\n\"Sure. You were great tonight! I think someday you're going to be a big star.\"\n\n\"Then you'll have to help me keep my ego in check.\"",
        "\"No problem.\"\n\nThey shared a quick kiss and Jenny left, while Ryan searched his pants pockets for his key.\n\nThe minute he went inside the house, he smelled a subtle hint in the air of women's perfume.\n\n\"Spring Violets...Son of a bitch!\" he mumbled angrily.\n\nThe living room light came on, and he jumped surprised to see his dad sitting in the dark.\n\n\"Welcome home, Son.\"\n\nRyan crossed over to the chair, directly opposite, and sat down.\n\n\"Is she still here?\"\n\n\"Went home an hour ago.\"\n\n\"Are you going to tell me you were just talking with her about her acting?\"\n\n\"I think we both know I wasn't.\"\n\n\"Jesus, Dad. Tricia? What...Why...Shit! I hardly know where to start.\"\n\n\"I would love to give you a reasonable explanation outside of her being a young, beautiful girl, but I'm not sure I fully understand it myself.\"\n\n\"This could get you in a lot of trouble.\"\n\nMatthew nodded, \"In the short run, if anyone finds out. Once she graduates, then it's a lot less of a deal.\"\n\n\"So, you're going to keep seeing her?\"\n\n\"I've been sitting here wondering about that very thing. The crazy part is that I really do like being with her. I mean, not just for the obvious reasons. She's funny, smart, loves old movies and literature, and she's strong. Given what her home life is like, she's remarkably brave in the face of it all.\"\n\n\"What about the drinking?\"\n\n\"Tricia told me the story. It wasn't what you thought. Her parents are the messed-up ones in that regard.\"\n\n\"You understand that this is kind of weird for me. I've known Tricia since we were freshmen. It's...well...it's just kind of weird to think of the two of you together when you're so...uh...\"\n\n\"Old?\"\n\n\"I was going to go with mature, but, yeah, old.\"\n\n\"We've spent weeks putting on a play about that very thing.\"\n\n\"So, you're trying to be your great-grandpa?\"\n\n\"I didn't set out to have that happen, but being around Tricia has made me understand his story even better than I did. You really can't help who you fall for. I don't know...it is crazy, isn't it? I should probably just walk away.\"\n\nRyan got quiet for a minute listening to the distant hum of the refrigerator in their kitchen.\n\n\"I don't think you should.\"\n\n\"Honestly?\"\n\n\"I can tell you this much. I know you've been spending most of your energy all these years taking care of me. I mean, I love my mom, but we both know she left you high and dry when it came to child-rearing. It all fell on you, and I appreciate how hard that must have been at times.\"\n\n\"You were never anything but a joy for me, Ryan.\"\n\n\"I could say the same about you, but we both know you had to sacrifice a lot to raise me. It must have been lonely. When was the last time you went out on a date? You don't have to answer. We both know it's been years. Then Tricia comes into your life, and all of a sudden, you light up. I didn't notice it before, but you've come alive around her in a way I've never seen from you. So, I think it would be a mistake to give that up. Someday soon, I'll be going off to college, and it would make me feel better if I knew you had someone in your life. Don't you think you deserve that?\"\n\nMatthew shook his head, \"Look, I'm glad that you want me to be happy, but won't it be awkward for you if it's Tricia?\"\n\n\"Well, I'm not fucking calling her, Mom, that's for sure!\" he said, laughing.\n\n\"I don't think she would want that either,\" replied Matthew, laughing along with him.\n\n\"Thank you for trying to understand, Son. It means a lot to me that I don't lose your respect.\"\n\n\"That could never happen. Whatever you decide to do. I'll always support you. If the two of you decide to have kids, though, I'm not babysitting for free!\"\n\n\"On that note, I think we both should get some sleep.\"\n\nThe stood up together and shared a hug.\n\n\"I love you, Pal.\"\n\n\"Back at you, Old Man.\"\n\n\"Tomorrow, we play Super Smash to see who mows the lawn next.\"\n\n\"You're on!\"\n\nGRADUATION DAY -\n\n\"Are these robes supposed to be this itchy?\" \n\n\"Quit being such a wuss, Toby. We only have to wear them for a couple of hours,\" said Ryan.\n\n\"Toby should just be happy he's graduating at all!\" joked John.\n\n\"Play nice, everyone. This is supposed to be our big day,\" said Jenny giving John Corbin a dirty look.\n\nShe had never cared for him or his narcissistic attitude.\n\nRyan was craning his neck, trying to catch a glimpse of his dad in the football field stands. It was difficult, but he spotted him at last, four rows up from the bottom. He waved and was gratified when his dad waved back at him.\n\n\"He must be so proud of you,\" said Jenny.\n\n\"He's proud of both of us.\"\n\n\"They'll be lining us up soon.\"\n\nRyan nodded, noticing that Tricia was off by herself away from the main group talking on her cellphone.\n\n\"I'll be right back.\"\n\nHe made his way over just as she finished her call and slid the phone inside her robes.\n\n\"Ready for the long walk?\" he asked her.\n\n\"Oh, yeah! I can't wait.\"\n\nHer voice lacked the enthusiasm he would have expected.\n\n\"Is everything okay?\"\n\nShe shook her head, \"That was my parents calling. They originally said they would be here, but their tour of Rome got held over or something. I don't know. It doesn't matter.\"\n\n\"Clearly, it does.\"\n\n\"Fuck them. I refuse to cry on my graduation day unless it's tears of joy!\" said Tricia, trying to shake off her melancholy.\n\n\"You have plenty of people here who are proud of you already, even if you're parents aren't here to tell you.\"\n\n\"You've always been so nice to me, Ryan. I'm going to miss you when you leave for school.\"\n\n\"Yeah. I hear you're going to take classes at that girl's school across the freeway from where my dad works?\"\n\n\"It's private and supposed to be good. I don't need the distraction of having a bunch of guys trying to hit on me while I study.\"\n\n\"Is that the reason? I thought maybe you were trying to stay close to someone.\"\n\nTricia cocked her head to one side, trying to look puzzled as if she didn't know what he was talking about.\n\n\"I'm not sure what you mean?.\"\n\nRyan glanced around to make sure no one was listening.\n\n\"It's okay. He loves you too. You should wave, the fourth row from the bottom,\" he said, pointing back to his dad.\n\n\"He told you?\"\n\n\"It didn't take a genius to figure out.\"\n\nTricia looked embarrassed, staring down at the ground, \"I probably should have said something to you. I didn't know how you would feel about it.\"\n\n\"Tricia?\"\n\nShe raised her head.\n\nRyan smiled back, \"It's okay. I just want him to be happy. If, by extension, my friend can be happy too, then where's the harm?\"\n\n\"You mean that?\"\n\n\"Sure...but I'm not freaking calling you, Mom! Okay?\"\n\n\"Deal!\" she said, hugging him.\n\n\"Come on! Get it in gear, you two. We're lining up!\" called Jenny.\n\nRyan gave Tricia one last pat on the back and went to join his girlfriend.\n\n\"What was that all about?\"\n\n\"Nothing. Just making sure to stay on her good side. I might need to borrow the car one day.\"\n\n\"Huh?\"\n\n\"Don't worry about it. Let's go start the first day of the rest of our lives.\"\n\nHe took Jenny's hand and went to join his classmates."
    ],
    "authorname": "darkoverlord6",
    "tags": [
        "dilf",
        "female student",
        "first time",
        "hot oral sex",
        "mature romance",
        "older man",
        "older teacher",
        "sex outdoors",
        "younger woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/all-the-worlds-a-stage-1"
}