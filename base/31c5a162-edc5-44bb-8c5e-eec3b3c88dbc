{
    "title": "An Evening with a New Toy",
    "pages": [
        "Note:\n\nThis is an Ellie and Sam story. If you want the back story, please read my other stories, starting with Late Night at the Office, then Ellie's first time, then (optionally) Tied to a Table and Distracting Leggings.\n\n*****\n\nEllie closed the door behind her with a sigh of relief. Another long work week was done. Back to back meetings, always another email to answer, another decision to make. She knew she deserved a relaxing evening, something that would relieve the tension of the stressful past days. She'd been so busy that she hadn't even had time to contact Sam - she'd seen him in some meetings, which had definitely increased her tension, albeit in an entirely different way. But each night, she'd gotten home late and had basically fallen asleep. No time for anything else.\n\nThat was going to change tonight. She was going to take some well earned time for herself and really work on relieving some pent up energy. Dropping her handbag, she picked up the package that had been waiting for her for three days. Thinking about its contents had been another reason for her mounting antsiness. The package contained her very first vibrator, and tonight she was going to try it for the first time.\n\nHer girlfriends were always shocked that she'd never owned one. It was even surprising to herself - she was well aware of how high her sex drive was, and how much she enjoyed trying new things. But she'd never really gotten around to it. That had all changed when she'd had a fantastic dream about using one with Sam. After waking up drenched in sweat and already rubbing her swollen clit, she'd made the decision to order one and had done it that very day. \n\nA little over 5 days had passed since that morning. The week had been unforgiving, and despite the package arriving on time, she'd not had the opportunity to open it, let alone savour her first experience. \n\nCarrying the package, she walked into the bedroom, kicking her shoes off as she went. Almost without thinking, she took off her blouse before sitting on the bed and gently picking at the tape keeping the box closed. Fortunately, the box and the packing inside it wasn't difficult to open and she was soon holding the smooth vibrator in her hands. The size was modest; she'd been careful to get a beginner's model. The most important feature was the rabbit head. As well as being able to penetrate her, there was a small nub to stimulate her clit at the same time.\n\nEven just holding it and stroking it with her finger was making her wet. She couldn't quite believe what she was about to do, but at the same time she was already pulling down her skirt to expose her hold-ups and lacy underwear. The underwear followed the skirt to be thrown in a corner, leaving her in her bra and stockings on the bed. Tentatively, she touched the head of the vibrator to her clit and pushed her hips against it, wondering whether to turn it on now or later. It wasn't long until curiosity overcame her, and she pressed the button. The effect was immediate. She arched her back, gasping at the sudden stimulation. Ellie was practised with her fingers but this was a whole new realm of sensation. Just pushing the tip against her clit felt so intense. The thought of having it inside her was simultaneously exciting and nerve wracking. Would she even be able to cope with the intensity? After this week, she was determined to find out.\n\nLying back comfortably, she began to move the vibrator between her clit and her pussy, noting that the wetness increased every time she moved back and forth. After a few rotations, she couldn't contain herself anymore, and slowly pushed the whole vibrating shaft inside her now aching pussy. On the way in, she felt every movement deep inside her core. The sheer sensation of being filled with this object, vibrating along her inner walls, was new and unexpected and already addictive. As she reached the hilt, the extra nub touched her clit, causing her to pause, tensed, in that exact position, breathing ever quicker. The feeling was indescribable. She was acutely aware of the length and breadth and constant movement of the vibrator inside her, and the combination with the vibrations on her clit was already more sensation than she was used to. \n\nSlowly, she began to experiment with the angle. Pushing deeper increased the pressure on her clit, but it was when she angled towards her back that she twitched involuntarily in pleasure. From this position, if she moved her hips correctly, she could feel the vibrations against her pussy, and backwards towards her ass. At the same time, the vibrations on her clit were insistent and unrelenting. She hardly had time to register the new feeling before she felt a sudden orgasm crashing over her. Never before had she been so surprised by that much sensation. Without realising, she screamed as her body dealt with the most intense orgasm of her life. Her hips thrusted against the vibrator while her free hand added extra pressure to the nub against her clit. The release was almost painful, as every muscle tensed and relaxed in sync with her orgasm. If there was any real pain though, it was exquisite. Muscles contracted and relaxed of their own accord, her breathing was erratic, and her pussy clenched around the vibrator again and again keeping her writhing on the bed. Still feeling the vibrations, her hand moved from her clit to her breasts, enjoying the orgasmic sensitivity of every nerve ending. Moving back down her taut belly, her wet fingers traced around her hips and between her ass cheeks to delicately touch her tight asshole. Although the orgasm had been mind blowing, her previous experiences with Sam had really opened up a side of her that was insatiable. Pressing a finger against her ass and pushing it slightly in, she could feel the vibrations from her pussy, and despite having only just come, she knew what she needed next.\n\nRegretfully, she pressed the button to stop the vibrations. Although the movement stopped, her muscles were still clenching delightfully around the vibrator as she slowly pulled it out, relishing each centimetre. If her plan worked, she wouldn't have to wait for long until feeling it again though.\n\nStretching, and enjoying the shaking in her legs, she stood up and walked to the hall to her handbag and retrieved her phone. Deciding the time for messages was past, she quick dialled Sam's number.\n\n'Hey Ellie!' \n\nEven his voice made her knees weak and her insides throb.\n\n'Hey Sam! I just wanted to check in and see if you're busy... Well, if you want to come over.'\n\n'You sound out of breath, everything ok?'\n\nEllie hesitated a moment. Was she really going to be this forward?\n\n'Everything's perfect... I, er, got a new toy and the first test went really well...' She knew that even if the words could be misunderstood, her tone couldn't.\n\nThe line was quiet for a second before Sam replied:\n\n'A new toy huh? And you're calling because you... want to show me it?'\n\nBingo. \n\n'Better than that. I want you to play with it. With me.'\n\nThis time there was no hesitation.\n\n'I'll be there in 5.'\n\nFortunately Sam lived close by. Ellie didn't think she could wait any longer for him to get here than those five minutes, and even they passed tantalisingly slowly. Nevertheless, it wasn't long until the doorbell rang. \n\nAngling behind the door so that her almost nakedness wouldn't be seen by any passers by, she opened the door to let him in. He stepped inside, briefly confused about not seeing her, but he smiled in understanding when he saw her. Black bra, black hold ups. That was all. And a slightly dishevelled look from her first orgasm. Ellie barely had time to register that he looked sexy in his blue jeans and grey shirt before he pushed closed the door and turned her around so she was facing it with her hands on the panels. \n\nSam loved seeing her in this position. His eyes followed her muscular back with the tattoo down the spine, past her waist and to her hips. Ellie knew he loved this view, and obligingly spread her legs a little, standing on her tiptoes and leaning forward so Sam could get the best view of her ass. With a small moan, he placed his hands on her ass cheeks and pulled them apart gently.\n\n'God I love your ass Ellie.'\n\nHis thumbs caressed the smooth skin around her small hole, and down to her soaking pussy. Ellie was making small circles with her hips, getting more insistent in her body language that she was definitely ready for him to touch her, eat her, take her. \n\nEating was the first thing on Sam's mind. He knelt down behind her and spread her fine ass even further. Ellie's breathing was faster, her small moans getting more animalistic as she waited to feel his tongue. \n\nSam paused a moment from his position. He could see the glistening wetness of her pussy, the small twitches of her ass. He could smell the sweetness of her orgasm and her arousal. Stretching his tongue out, he touched it to her asshole and licked on and around it with only a small amount of pressure. \n\n'Oh fuck...God yes.'\n\nEllie lived for that first moment of contact. The initial jolt of ecstasy that Sam's tongue was touching her most secret places. Even just from the delicate touch she felt her thighs tense and her pussy ache more. The problem was that she always instantly wanted more. Sam knew it - and he also loved to tease her, even if it meant teasing himself. \n\nThis time was no different. He licked tantalisingly slowly from her pussy to her ass, savouring her taste and deciding firmly to get more later. But not yet. He knew she had something special in mind and his imagination was already running at full speed. Ignoring his cock, which was protesting against his jeans, he planted a small kiss on Ellie's ass and stood up behind her to whisper in her ear.\n\n'I'm gonna eat that ass later. But you said you had something to show me.'\n\nEllie was torn between just wanting to be fucked against the door right now, and the fantasy of having both Sam's cock and the vibrator inside her. In an intense effort of willpower, she turned around to face him, her face close to his. Her cheeks were flushed, her voice breathy. Slowly unbuttoning his shirt to reveal his toned chest, she whispered back.\n\n'I had a fantastic dream last week... You were fucking my ass, and I was using a vibrator in my pussy...'\n\nShe knew the appreciative growl wasn't just because she was tracing her fingers over his now naked chest and sides. \n\n'I couldn't stop thinking about it. So I bought one... It feels...' Sam could hear the desire in her voice: 'It feels divine. But it's still missing something. You know?'\n\nSam's voice nearly failed him. 'I have a good idea.' The few times he'd fingered Ellie's pussy while his cock was deep in her ass he'd loved the sensation through the thin wall. The thought of a whole vibrator... He pushed his hips against her so she could feel what he thought of the idea. \n\nEllie gave him her cheekiest grin and led him by the hand into the bedroom. \n\n'You are wearing entirely too many clothes.' \n\nShe knelt in front of him, letting her fingers stroke down his belly to his belt. As soon as it was open, Sam helped by pulling his jeans and underwear down to his ankles where he kicked off shoes, socks and boxers in seconds. \n\nEllie leaned back on her heels and took in the sight in front of her eyes. Sam's cock was fully erect, a small drop of precum shining on the tip. She licked her lips, already wanting to feel the whole length and girth inside her. With a sultry look up towards Sam, who was watching her with fiery desire in his eyes, she stretched out her tongue and licked the precum, loving the slightly salty taste and the gasp from Sam. \n\nSam watched her move in closer, her head coming ever closer to his belly, and waited for the moment he would finally feel her lips around him and his cock in her warm mouth. When he felt the welcome heat and wetness, he couldn't resist placing his hands on the sides of her head, pushing his hips forward to fully explore Ellie's mouth. Feeling his hands and his need, Ellie began to use her tongue, gently pushing his cock from one side of her mouth to another, all while alternating between taking him as deep as she could and moving her head back to just grasp the tip with her lips. Sam moaned softly and moved his hands and hips in sync with her mouth.\n\nEllie moved her hands onto his muscular ass and used the pressure to push Sam's cock yet deeper into her mouth. A glance upwards let her see that his head was leaned back, his mouth open. She could hear his breath in short gasps, punctuated with the occasional murmur. As tempting as it was to keep going until he came hard in her mouth, her pussy was protesting the lack of attention. \n\nSam was torn himself. The feeling of Ellie giving him head was delicious. Feeling her tongue, pushing his cock towards her throat, feeling the pressure of her lips around the tip when she moved her head back. He knew what it felt like to come in that mouth, and it was something he would love to do again. Fortunately, he didn't have to wrestle with his willpower, since Ellie took one long last suck and stood up, pushing him backwards to sit, and then lie on the bed. \n\nShe took a moment to survey the sight before her. Sam's gorgeous body was laid out on the bed, his cock wet and rock solid from her attention. His eyes met hers and his lips formed a crooked smile. Ellie grinned back. Those lips where what she wanted.\n\nSam watched in anticipation as she crawled onto the bed, turning her ass towards him as she straddled him in a 69 position. She didn't have to wait long to find out what Sam thought of it, as she felt his hands go instantly to her ass, and a first probing finger push deep into her aching pussy while another rubbed in small circles on her clit. She knew Sam well enough to know that he was admiring the view - full access to her ass, pussy and clit, and a view of her breasts before seeing her mouth close to his cock. She also knew him well enough to know what was coming next; the expectation only made the sensation even more pleasurable. Sam removed the finger from deep inside her pussy and used its wetness to press it in one movement into her ass. Ellie gasped and pushed back onto it, feeling it slip past her tightest muscles, and revelling in the shock and desire that shot through her. Sam moved the finger in and out a few times, hearing Ellie moan breathlessly, before pressing another finger into her pussy. At the feeling of both holes being penetrated, Ellie felt heat shoot through her belly and chest, and her arms and legs begin to shake. She exulted in the familiar ecstasy of his fingers exploring her; curling, pushing and clenching as she moaned and rocked her hips towards to increase the depth and intensity. Keeping her rhythm, she bent her head down and lifted his cock back into her mouth. From this position she could take him even deeper, as far as feeling her lips on his belly and his tip against the back of her throat. She rested there, pulsing gently with her tongue and hearing him moan incomprehensibly. \n\n'God Ellie... Fuck...'\n\nHearing him enjoy it was as much of a turn on for her as it was for him. Keeping her hips moving back and forth onto his fingers, she began moving his cock in and out of her mouth, taking him alternately as deep as possible and then lifting her head to flick his tip with her tongue. \n\nSam was close to losing all control again. He forced himself to open his eyes and look at the tantalising sight in front of his face. His fingers plunged deep into Ellie's pussy and ass. He could see her juices on her thighs and his hands, and the smell of her was intoxicating. He wanted to taste her again. \n\nIgnoring Ellie's cry of protest, he removed his fingers, replacing them instantly with his mouth and tongue. He used his hands on her hips to pull her down hard, licking and sucking on her clit and pussy. Ellie gasped, all plans with Sam's cock forgotten. She arched her back and added her own weight to the pressure on Sam's face. Sam smiled, feeling her pussy even closer to his lips and tongue. He used the nearness to press his tongue deep into her pussy, tensing it to jab in and out in the same rhythm that she was riding his face. \n\nEllie was moaning incomprehensibly. Her hips were moving of their own accord, and she was rubbing her clit with two fingers, increasing the speed and pressure as Sam fucked her with his tongue. Just when she thought she couldn't take any more pleasure, Sam pushed her hips forward and shifted his head slightly to circle her asshole with his lips. Sucking hard, he began to move his tongue around her tight ass. \n\nEllie's breath caught in her throat as she sat up further. Her ass firmly on Sam's face, she could look down and see his chest, belly and cock. She couldn't see what his mouth and tongue were doing, but the feeling was exquisite. Every movement of his tongue sent shivers up her spine. Every time he pressed it deeper into her ass, she had to bite her lip to keep herself from screaming. Sam felt her hands grasping his chest harder, fingers digging into skin and muscle. He could hear her gasping and panting, and loved knowing that he was causing it. Him eating her ass was something that they both loved. He increased the pressure and intensity, knowing that she would come soon.\n\nAs he expected, he felt her thighs twitch and her weight increase in his face. Instead of riding out the orgasm on his tongue though, Ellie shifted forwards and, in one swift movement, pressed his cock into her pussy to ride him reverse cowgirl. Sam groaned in ecstasy as his cock was enveloped in her tight warmth. Ellie didn't even have him fully inside her before she felt her orgasm start, clenching his cock with her muscles and pressing down into his hips as hard as she could. She stretched her back and tilted her hips, angling his cock inside her to feel every inch of him though the orgasm. \n\nAs she sat down on him, grinding and rubbing, he moaned as well, loving the feeling of finally being inside her again. His hips rose to meet her, his hands pulling her onto him. \n\nEllie's movements slowed as the orgasm abated, her hips moving slowly and languorously to enjoy the fire still radiating from between her legs. Idly, she rubbed her clit, pausing every couple of seconds to enjoy the aftershocks of her orgasm. \n\nSam let her take control, simply enjoying her riding him and taking pleasure from him being inside her. From the corner of his eye, he noticed the vibrator on the bed, where it had been lying unnoticed the whole time. He pushed himself up onto his elbows and used one hand to trace down her back, seeing her shudder in delight as he touched her. She looked over her shoulder, throwing him a smouldering glance that he now knew to interpret as 'I want you again'. Perfect for him.\n\n'I found your toy.'\n\n'Mmm.' Ellie grinned at him and reached for the vibrator. 'This thing?'\n\n'Show me how you use it.' His voice throbbed with desire. The very thought of what was coming made him shake with anticipation.\n\nTo his delight, she actually blushed a little. Biting her lower lip, she lifted her hips, giving him a perfect view of her ass and pussy as his cock slipped out. Still keeping eye contact, she lay next to him on the bed, one knee raised and legs slightly apart. The thought of feeling the vibrator inside her again was enough to remove any nervousness. She showed Sam that cheeky grin again and turned on the vibrator.\n\nTouching the head gently to her clit for the second time today, she closed her eyes and let out a slow moan as the indescribable sensation washed over her. Sam watched, fascinated and aroused, slowly stroking his cock with one hand. He watched as she pushed the whole length inside her, opening her legs further and pressing the vibrating nub against her clit. After having come twice already today, her nerves were sensitive and her pussy soaking. Small twitches of pleasure coursed through her and she began fuck herself slowly with the vibrator, feeling every movement magnified through her whole body.",
        "Opening her eyes, she saw Sam devouring her with his gaze. His eyes locked briefly with hers before returning to watch the vibrator move back and forth into her pussy. \n\n'You like that?' her words came in gasps. \n\nHe could only imagine how it felt - and couldn't wait to be inside her and feel it for himself.\n\n'God yes... Ohhh fuck.'\n\nAs he was answering, she changed position, kneeling and presenting her ass to him, legs wide. One hand kept the pressure on the vibrator, the other stroked her ass. One finger pushed achingly slowly into her small asshole, letting Sam see her muscles stretch and her finger slowly disappear as she pushed simultaneously with the vibrator and her hand. They both moaned with pleasure and desire.\n\nEllie's mind and body were going crazy. Just her finger was already giving her a sense of intense fullness. What would Sam's whole cock feel like?\n\nSam wasn't going to give her long to find out. She heard him move behind her, and felt his tongue explore around her finger, licking intensely between her pussy and ass. The combination of stimulation was too much for Ellie. She let go of the vibrator to keep herself from falling forward as her legs threatened to give way. Her finger slipped out of her ass, and she used both hands to support her in a perfect doggy position. Sam grinned as he saw his chance. Using one hand to cup her round ass cheek, he grasped the vibrator, still deep in her pussy, with the other.\n\nHaving watched how Ellie moved it, he began to imitate her movements, pushing and pulling to fuck her with the vibrator. Her moans became gasps and she tried to formulate words.\n\n'Oh god...Sam... fuck...good.'\n\nEllie didn't even know what she was saying. She was lost in the feeling of being touched deep and hard by the vibrator. She felt like there was a line of hot pleasure connecting her clit to her deepest core. Nothing else mattered, except maybe the knowledge that Sam was doing this to her and watching as he did. \n\nSam added first one, then two fingers into her ass. Ellie buried her head into the bed covers and pushed back; Sam could hear muffled screams of ectasy. He pushed his fingers deeper and felt the power of the vibrator through the thin wall. The temptation and his need were getting too hard to resist - he needed to be inside her. \n\nEllie had reached the same conclusion. \n\n'Sam, fuck me. Fuck my ass.'\n\nHe would never get bored of hearing her say that; it would never fail to bring him to the edge. Hardly able to contain himself, he removed his fingers and watched her gorgeous ass contract around them as they left. Holding his throbbing cock, still wet from her pussy, he pushed the very tip against her asshole and paused, determined to watch every moment of his cock disappearing into her ass. Slowly, he pushed his hips forward, guiding with his hand and watching as the head slipped inside her tight ring.\n\n'Oh fuck!'\n\nThey had both gasped. Both were feeling, for the first time, the effects of double penetration. For Ellie, feeling the tip of Sam's cock finally push into her ass was always one of her favourite moments. Her nerves there were so sensitive that the intrusion was simultaneously invasive and exquisite. Something that large most certainly did not belong there, and yet it felt so damn right. She felt the effects throughout her body. Her back sparked electricity, her pussy and legs were molten and burning with pleasure. At this depth, she could only start to imagine how full she would feel once he pushed in, but she knew she wanted it more than anything.\n\nFor Sam, the sensation was unlike anything he'd imagined. A thousand times more enticing than simply feeling his finger in her pussy. He could already feel the vibrations, pulsing against him and removing any ability he had to think clearly.\n\nStill watching her ass stretch to accommodate every centimetre, he pushed decidedly and almost forcefully until he was enveloped completely. Normally he took a moment to just enjoy the tightness of her ass around his cock. There was no chance of that this time. The vibrations felt like they were coming from everywhere. There was no beginning or end, just tight warmth and constant, relentless throbbing. Leaning forward, he pressed his hands against her wrists and whispered into her ear.\n\n'God you feel so good.'\n\nEllie hardly registered his words, just the breath against her ear and neck, sending impossibly more jolts of thrilling excitement through her body. She grasped the vibrator, pushing it as deep as she could and as close to her clit as possible. Her mind failed her. Thought wasn't possible; her body was simply a receptacle for the waves of ecstasy that coursed through her, focused on the pure vibrating fullness in her pussy and ass. The satiating stretch of Sam's cock in her ass, the almost too intense vibrations in her pussy and the extra vibration on her clit was very nearly more than she could take. She had never felt so gloriously captivated by sensation. Every heartbeat - from herself or from Sam - reverberated through her pelvis muscles and along every nerve path. She could feel everything. \n\nIt felt like an eternity that they both stayed in that first position, filling Ellie as deeply as possible, not needing to move to be brought constantly to the brink of orgasm. Inevitably though, they both began to rock their hips, exulting in the increased sensitivity brought by the vibrator. Ellie couldn't believe that she had gone so quickly from her first experience with a vibrator to the most erotic moment of her life in the space of an hour. She also couldn't believe that she'd waited this long. Similarly to her first experience of anal, everything felt so right, so amazing, that she regretted every previous moment where she hadn't known what she was missing. Sam's cock pressed against the walls of her ass, stretching her with every thrust. She could feel the length of him moving through the wall to her pussy, pressing against the vibrator and increasing the pressure against her g spot and clit. She hardly had the strength to keep holding herself up - and dropped to the bed so she was lying with Sam straddled on top of her, compounding his weight to the various pressures inside her.\n\nThe change of position pushed Sam even deeper. Ellie's entire body felt like it was vibrating, and her ass clenched around his cock like a hot, wet, throbbing vice. He grabbed the hand that was not underneath her and pushed against her, his chest rubbing against her arched back as he thrust quicker and harder. She could feel his breath in her ear, his ragged whispers turning her on even more.\n\n'Fuck Ellie... Your ass... You're so hot...'\n\nAfter that there were no words. Just the sounds of Sam's hips crashing against Ellie's ass, the moans of pleasure from both of them and the gasps of shock when Sam pushed even deeper. Ellie was still frantically pressing the vibrator inside and against her, feeling the mounting orgasm like a giant storm about to hit. Even without her speaking, Sam could feel it coming too, in the raising of her hips and the tensing of her legs. He was close himself. Since hearing her breathless voice on the phone he had waited for this. \n\nEllie let her body take over. The rhythm of her hips and hand perfectly matched Sam's ever quickening thrusts. She could feel him everywhere, rubbing against her tight walls, his skin against her ass. On his outward movements, she ached for him to fill her again. When he pushed in, she felt the delicious stretch at her entrance and the perfectly tight fullness of both pussy and ass. The vibrator was unrelenting, stimulating every nerve and rubbing her clit mercilessly. She felt the heat increase as every muscle tensed. \n\nSam felt her buck her hips, which pushed him over the edge. Grabbing her waist, he thrust harder than ever as his own orgasm flooded through him. Still moving rhythmically, he watched as his cock pumped in and out of her willing ass, groaning loudly in time with each push. \n\nEllie's voice joined his as she lost control, screaming and gasping. Waves and waves of pleasure crashed over her, emanating from her clit, pussy and ass and meeting in her lower belly to radiate tremors of almost painful pleasure to every inch of her skin. Her whole body felt like molten lava - hot, wet and in constant movement. Sam continued to push into her, his cock rubbing against the length of her ass, both holes stretched and full. She couldn't tell anymore where she ended and Sam began, nor did she care. Seconds passed without the orgasm slowing; she lost herself entirely to the feeling of Sam's body in and against her, his breath hot and heavy in her ear. \n\nEventually, their movements slowed and Sam rested his whole weight on her. Still deep inside her ass, he could feel the vibrator and her own muscles massaging his cock, making him tense involuntarily. Each time he tensed, Ellie moaned slightly, loving the feeling of him inside her. \n\nEven more reluctantly than the last time, she stopped the vibrator. \n\nSam's voice in her ear was barely a whisper. \n\n'Fuck, that was intense.'\n\n'Mmhm.'\n\nShe couldn't even formulate words.\n\nSam shifted to lie beside her, his pelvis still pressed hard against her ass. One hand lazily stroked her side, igniting nerve cells and making her giggle softly. They lay there, breathing synchronised, not speaking. Ellie was already dreading the feeling of emptiness when they had to get showered and dressed. Fortunately, Sam was already planning the next time they could use his favourite new toy."
    ],
    "authorname": "lexie_writes",
    "tags": [
        "double penetration",
        "anal",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/an-evening-with-a-new-toy"
}