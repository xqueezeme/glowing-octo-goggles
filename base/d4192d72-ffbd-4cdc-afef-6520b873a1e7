{
    "title": "Beautician and the Beast Pt. 03",
    "pages": [
        "Chapter Eleven\n\nHer air commanded Quentin to do most of what she wanted. Lovie was ardent with her attention to him but still ordered him to her will. In honesty, he was in shock to everything all at once. She came in like a viral bomb and set off a contagious explosive excitement that mounted each second. Signs like her nonexistent dress, her sexy new look, and for the most part her announcement showed that she meant business. Her words burned through his head as she slinked around on his bed, 'We're going to make love tonight Quentin'. He gravitated to her like an animal to a scent yet he tried to ignore her sexual appeal and talk to her about the material found to his thoughts of who did it. She dismissed him with an agreeable nod towards the prospect of Drew. He stammered through the whole explanation so much that before he could get to the possibility of Cindy, the words were swallowed. She took off her shoes and ran her foot up his thigh. Lovie's gummy bear like toes found the tip of his penis on the inside of his leg and she smirked as he took a sharp intake of breath, \"Don't I make you feel good?\"\n\nThe role reversal wasn't lost on either of them as usually it took him having to put her legs in his lap; he did it so much at that point that it was in his subconscious. When they talked, watched TV, even when they ate he had her shapely stems in his lap. At first it started as a non-sexual way to enliven her arousal but soon it seemed to work just as well on him. Now that her little aggressive meter ticked up a notch he had to admit that it turned him on beyond belief or relief. Her tiny geisha digits rounded the circumference of his cock-head through his pants and he groaned low in his throat with tightened eyes. \"It's not that. I just wanted to catch you up to speed.\"\n\nHe hoped to stave off her craving for sex by just a bit of heavy petting like back at her place. Once they were official he'd perfected a technique he called the 'Lovie Lullaby', which made her come so hard she went to sleep after. It usually helped when she pouted over not being mounted, which was more and more with each encounter. But that didn't happen. In stead she blocked his move, then pushed the fabric panel to the side of her right breast, the tatted breast, his favorite breast. Her left hand began to tug on her nipple and palm at the full weight in a circular motion. \"Oh? I thought speed wasn't your thing. I thought you loved to take your time. Take it slow?\" He couldn't contain himself any longer because she played too dirty. 'She knows what that tit does to me', his mind screamed! It was how he was most familiar with her. Sure on the surface it told a tame story of a beautician that loved horror but underneath it spoke volumes of a need for a darker life. Nothing crazy like serial killing but something that she definitely couldn't write home to mom about. Lovie's eyes glittered past her charcoal black lids and her breaths short staccatos of arousal. When her slender fingers plucked at her budded peak so hard that it rippled her breast he damn near fainted. In a breathy invitation she said, \"Quentin...I want you.\" That was sexy overload as he ravished her right on the sofa; he groped, fondled, rubbed every inch of her and couldn't get enough. The heavy petting ended with them in his room where he stood at the foot of his bed as she writhed on his comforter. He covered her body with his and nothing but undulating hunger shown through their eyes and boiled through their bodies. Her knees rubbed at his waist down to his hips then back up. In a pained whimper and eyes more alert, \"I need you.\"\n\nThat stung him in an upright position and designated him to the edge of the bed with his back to her. \"We can't do this Lovie,\" he said in a low voice. He stooped with his forearms to his knees and ran his hand through his hair. \"I can't have sex with you tonight?\"\n\nIn a ragged sigh, \"If not tonight when? I mean, why tha hell am I on the pill then!\"\n\n\"When we're ready.\" He still couldn't look at her. It would hurt him too much. He didn't want to see any more signs that pointed towards her not loving him. \"We're not ready Olivia.\" The tone warned not soothed. It took control of the situation and that didn't sit well with her.\n\n\"Yes we are.\" Her voice as calm yet calculated. Quentin wasn't running that night. She was ready to prove her love to him and damn it, he was going to like it!\n\n\"No we're not!\" He jumped up at that point and paced. He looked like a smoking train barreling through his carpet tracks. He changed directions every five steps. She wasn't scared but cautious wasn't out of the question. He looked like a mad man.   \n\n\"Quentin,\" Lovie comforted.\n\n\"We're only halfway there.\" He made a fleeting glance towards her before he switched paces again. She was thoroughly confused now. Was he really quoting the Black Eyed Peas? He searched for words and stopped to talk a couple of times but when he couldn't come up with it, he paced again. After the third attempt he finally said, \"You tell me you need me...t-that you want me but it's not enough. Lovie that's only halfway to where we need to be before we can make love.\" He blew a harsh breath out and paced more after her brow still knitted tight with puzzlement.\n\nShe looked down to put his words together for clarification and when she finally got it, she slowly looked up to his erratic form. Love...that's what she forgot to tell him when she came over, that she loved him too! She was so ready to give herself completely to him that she forgot to take his feelings in account. She just figured that his dominate nature assured his confidence in her love for him so much that he already knew how she felt. She held back her smile as he walked back and forth in huge strides. He was really upset she didn't say the words he wanted...scratch that, needed to hear. \"Quentin...I,\" he held up a hand to stop her.\n\n\"Lovie let's go the bed and we'll talk about it in the morning. I'm so tired...I can't even think straight.\"\n\n\"No,\" she said simply.\n\n\"Lovie...\" He turned to her with a warned tone then moved back towards his wall, \"you're not going home like that at this time of night. Just get in bed and-\" the last part he said as he moved to his light switch to turn down the light. When he turned back around she was right at his side. He kept himself from jumping but his eyes betrayed his surprise. The ole sneak attack...he taught her that.\n\nShe was completely naked and the look of unyielding determination was back in her eyes. Determination and a spark of something else, something he couldn't put his finger on. When he moved to step around her she stopped him with her little frame in his path. He smiled at her boldness but still had no intention of following through. She saw it too and narrowed her eyes to him before taking his hard face in her small hands, \"Quentin...I love you.\"\n\nHis features settled into rigid lines, \"That's not funny Lovie. Let's just go to bed.\" Quentin knew she figured out what he was trying to say but saying it just to get laid...Ha! That's the oldest trick in the book. He gently stepped around her and started to turn back the covers on his bed.\n\n\"How dare you...\" She whispered fiercely through clenched teeth.\n\n\"What?\" He looked to her as he fluffed her pillows. She faced him with a pissed off stance.\n\nShe slowly walked over to him as she spoke, \"I tell you I love you and you tell me to get in bed? I'm not a child so don't treat me like my feelings aren't valid!\" The stomp of her foot conveyed opposite to her big girl point of view.\n\nShe was at the end of the bed and he advanced on her, \"Oh please Lovie! You're only saying that because you want me to have sex with you!\" He winced as her gasp filled the room. He wasn't stopping; he felt he was right and just as much as her feelings were hurt his were too! \"You're trying to tell me that your nipples are hard with love or you pussy is leaking sweet nectar of devotion? Nah uh...it's lust and as little as you think of me, I want a little more from our first time together than an heated roll in the hay!\"\n\nThat did it! She couldn't take anymore of his hurtful words as he spewed vial inclinations on her. Sure she was horny but she wasn't lying about her feelings for him for a fuck! As quick as a snake, she hauled off and slapped him. It rung in his ear and her palm for several seconds as they panted for clear air. They were both in angry shock but Lovie started first, \"Fuck you Quentin Mavery.\" The venom that seeped through her words was like a fast acting poison that only fueled his fire. He clamped her body to his but she didn't cower, \"I never wanted this...you know that. I was, hell, still am so na\u00efve that my life has been turned upside down in both good and bad ways here. In spite of and as a result I've found myself loving you more and more every day since we've met. I did things with you that I never thought I could imagine on my own because of this stupid stigma that ran me out of college...\" His face contorted to angry bemusement but he let her finish, \"as much as I pictured myself a slut I never felt you pictured me like that too.\" The hurt in her voice transitioned from the original anger that started the statement. She jerked so hard from him that he stumbled back a bit. She reached for her dress then put it on and raced from the room.\n\nHe was still stunned and it took him a minute to get his legs moving from their rooted spot. He bounded down the stairs and caught up just as she made it to the alley entrance elevator. \"Lov-...Lovie!\" She struggled hard to get out of his reaching grasp.\n\n\"Leave me alone Quentin!\" She swatted him away.\n\n\"No! Stop it! Let me explain.\"\n\n\"Oh you've explained enough! Explained how you're done with the cock hungry slut aren't you!\" She wept openly at this point, with her back to him still. Her sobs weakened her stance and he caught her before she slid to the floor. In a heaving cry she tried another feeble attempt to shake him from her, \"Get off...get off me!\"\n\n\"Sshh ssh, I'm so sorry baby.\" His voice was full with his own emotions as he scooped her in his arms. He carried her back to his room and laid her down, she instantly turned her back to him. He took off his pants and removed her dress and lay next to her naked form. The warming connection helped her crying subside and her shudder went down to a sporadic tremble. He ran his hands up and down her side, all the while he whispered, \"I'm so sorry baby...I love you,\" or some other variant. She never cried or got that upset in front of him and frankly it scared the shit out of him. In minutes her sniffles stopped so he broke the silence, \"Baby let's talk.\"\n\n~*~*\n\nAnd talk they did, about everything from her homesickness, her time at Louise's salon, and at the company where almost everyone hated her. They opened up on their love, fears, and their relationship. Lovie even broke down and told him about the break in the month before. That almost sparred another fight but they decided to table that conversation for another time. Lovie hoped not too soon. By the end of it they faced each other and he ran a thumb up and down her bicep. She had her pointer smoothing his chin. They were in such a comfortable silence that when Lovie spoke he jumped a little. \"Now what do we do?\"\n\n\"Now we're a couple that love each other.\" He rolled on top of her until they faced one another again. \"And couples that love each other do certain things to prove it.\" Quentin moved his arm so his hand fell to her widow's peak and slowly smoothed her hair back on his pillow. His face warped with so many emotions, but this time they were all good. He saw them too in hers, love, admiration, and yearning. He searched her eyes for each feeling like a kid that caught fireflies. \"Lovie...\" She nodded as she instinctively allowed him between her legs. He could already feel the heat at the apex of her thighs and reciprocated his own as the length of his steely rod rubbed her seam. He ducked his neck in the column of her neck and traced soft and feathered kisses to her chin and ended by devouring her lips between his for a passionate kiss. They battled tongues to a fevered pitch of groans. They broke the kiss then smiled at each other when the sound of her parted folds smacked with wetness up to them. \"Guess there's no need for foreplay,\" he smirked as he moved one of her soft limbs up over his hip.\n\n\"Boy,\" she chuckled in a husky tone, \"everything we've ever done to this point has been foreplay.\" She lifted her hips then ground them on him. He hissed low and set her with a warning look. She backed off and gave a puckish smile, \"Sorry...\"\n\nHe positioned his cock at her opening and ran it over her swollen lips with breathy pants. He watched her reaction when it slipped just past her folds. He was rewarded with her sensual whimper and her bottom lip sucked past her top teeth. Her wetness slathered the tip of him and he hissed then turned his head again with a slow leak of air. He looked to her face and her eyes were closed. \"Open your eyes Lovie.\" She snapped them wide and looked down at their crotches as his hand guided his lengthy girth to her petal soft crease. Her breath quickened with anticipation, \"Baby look at me.\" Lovie's eyes flew to his and grew as his face displayed his stark commitment to her and their love. \"Are you ready?\" She nodded and never broke their eye contact. \"Like a band-aid?\" She nodded once more. This was it, her last remaining seconds as a virgin and she strangely wasn't nervous. She knew that it would hurt for a moment and with his more than generous size she wondered vaguely if that meant it would hurt more. In spite of that the only gnaw at her stomach was the fact that he hadn't entered her yet. Then just as she was about to ask him if something was wrong he impaled her all the way to her hilt. Her sharp intake of breath lifted at the end to a strangled yelp. He shut his eyes to the celestial adventure her tight little body sent him on but wasn't too far-gone to not sate her initiation into womanhood. He took the hand that directed his cock in his love and caressed her cheek, \"Are you okay sweetheart? Do you need me to stop?\"\n\n\"No I'll get used to it,\" was all she could clearly get out. Even though he wanted her eyes open they both seemed to shut them for the same reason. She was so snug on his dick that they both had to adjust. After a moment Lovie asked, \"Quentin?\"\n\n\"Just give me another minute.\" He whispered through tight lips. Lovie smiled and allowed him his extra minute. As it stretched into what seemed like an eternity she rolled her hips to get him involved. They circled and urged him to move but he still wasn't ready. The pain had subsided for the most part and her aroused ache burned more than her newly enlivened core. He hadn't felt bliss like that ever and he wanted to be able to remember every sensation to later tell future generations. Her walls swaddled him so warm and cozy he felt he was about to resort to a child once more.\n\nIt wasn't until her small whimpered plea of, \"Please Quentin,\" that he finally moved. He slowly went back before he retreated with a sharp thrust. She choked a beat and his face flew to hers to gage. She only shook her head and assured, \"I'm fine. Just please don't stop.\" From there his hips took on another conscience and gathered more speed in and out of her lithe like form. He hiked her leg up to his waist and dug his fingers into her soft tresses. He watched her closely as he struggled to contain his own flame. Lovie's lids were heavy with scorching passion and lips that swelled from his ripe kisses. He hadn't made love to a woman since Ana and he was nervous he'd forgotten. Once he found a steady rhythm to course through her channel that wouldn't let him come too quickly he stuck to it. He leaned in to delve his tongue between her parted lips for another soul-searching kiss. It drove his hips deeper and harder into her and he lost himself for a moment. He barely noticed her strangled cries as his mouth danced around her saccharine soaked tongue. Instinctively he slowed, as he feared he started to hurt her. With eyes closed so tight they gathered tears at the corners, he had to fend off his own excitement before he could look to her. When he broke the kiss her moans echoed in his ears, \"Oh don't slow down...please don't stop! I love it!\" Her dull blunt talons burrowed in his back and he welcomed the intrusion as he stroked into her so smooth that it made her eyes roll in the back of her head.\n\n\"Jeez Lovie, you're flawless!\" He choked as he palmed her tits. He ducked down further and lightly bit at her beaded nips. She then withered under his tongue while his cock tagged her tunnel as his. When she looked down and found his blue-green pools staring back at her, she threw her head back for her first orgasm as a true woman. It hit so hard her back arched into him so much that he even stilled at the sight. He whispered his defeat to her lobe as she clenched so hard on him that he thought she was going to break it off. \"Baby you gotta let up a little. It's going to be over before we even start.\" With that notion she quickly recovered and looked to him with astonished eyes. \"Don't look at me like that,\" he said with a mocking glare, \"You asked for it!\" And with that declaration, he threw the covers off of their heated bodies, hiked his leg up so that her falling limb was braced for his next barrage of pumps. He had to show her that playtime was over and she quickly got the memo as he moved like a piston in and out of her. His face concentrated on her eyes while his lower half battered into her welcoming cavern. One hand stroked her knee that was now at his ribcage while the other persuaded her hands over her head and was held there by his massive palm. \"How is it sweetheart? How does it feel?\" He ground out as his pelvis jacked her body to and fro.\n\n\"So good! You have me baby! You have me right where you want me!\" She cried as unshed tears escaped one by one down the sides of her face.\n\n\"Yeah?\" He licked the salty liquid of admission to pleasure with vigor. \" I don't think so baby...you're not there yet!\" He chuckled when she whimpered at his comment. \"I want you over the moon Lovely!\" There it was again, that commanding voice he used when he wanted her to do something, even when they weren't in a scene. She didn't mind though, hell she even loved it. She loved how he controlled her body to a tightened knot so tense that only he knew how to unravel her. As one more orgasm slammed to her core she bucked into him instinctually. \"That's it baby! Take my cock in that snug body of yours.\" She screamed his name so loud he was relieved that he didn't have neighbors. All of a sudden his own orgasm hinted its impending presence, \"Oh my god baby! I'm almost there.\"\n\n\"Yes!\" She breathed, \"Give it all to me baby. I want to feel everything you got for me! Quentin,\" he looked in her eyes at the sound of his name, \"I love you.\" That kicked him over the edge and was happy to fall. The next stroke stilled inside of her and he let out a yell that matched her last orgasm. She moaned close to his lobe as his heated essence filled her quivering channel. He jerked with each spurt and collapsed to match her labored breaths. The cool air blanketed their bodies as they caught treasured gasps of breath. \"That was...\" She paused and shook her head as no words could describe her feeling. Lovie never came so hard in her life and for a fleeting second wondered if it would be the same with another lover. As soon as she found the strength she lifted her head and found his earth like orbs directed to her. She didn't care what other men could do because this one did more than she ever needed.\n\n\"I know baby. I know.\" He rolled back over so that she was lying on his chest. Quentin stroked her matted hair from her face then moved so she looked to him. Lovie sat her chin on his chest and lazily smiled. He reciprocated as he traced the pad of his thumb over the fullness of her bottom lip, \"I love you too Olivia.\" She blushed to a hurtful grin and he chuckled lightly at her sudden bashfulness. He wasn't joking when he said she was flawless. She as perfect for him as his skin encasing his body and he'd do anything in his power to never let her forget.",
        "~*~*~\n\nLovie reached up and made sure her hair didn't fall from the pins as she eased down in the frothy fragrant foam of Quentin's sunken Jacuzzi spa tub. She didn't believe Quentin when he told her that she needed to soak before bed to ease her muscles until the hot warmth encased over her hips. She let out a deep groan that made Quentin laugh with an 'I told ya' so' air. \"I know I know,\" she admitted, \"it does feel great.\" She laid back and rested her head on the plushy head slope that was put in to cradle the neck. She laughed inwardly at how much he loved his baths. So much so that he had his own secret stash of bath bombs. He told no one of his private obsession but his secret was out once she used his bathroom and the distinct smell that only came with a certain bath store wafted to her nose. When she found them she didn't tease, though she did go out and get him a gift set with some of his favorite bombs and added in some favorites of her own.\n\n\"It's about to get a helluva' lot better.\" He grinned as he rummaged through the draw for the volcanic sea salt, pine, and cypress oil bomb. Perfect for achy muscles like hers. He walked to the edge of the tub to sit and dropped the round bouillon in. The spicy aromatic sizzle of the soak and the sweet floral smell of the bubble concluded in a haze of a breezy Hawaiian walk along the beach. She looked angelic as she nodded off for a few seconds. He smiled as he took off his robe then tested the warmth of the water. He hadn't planned on joining her in the bath but he had to make sure she didn't drown.\n\nAs his feet plunked in the water she peeped to him through small slits, \"Well I'll say it got better.\"\n\nQuentin moved her in from of him so she leaned back on his chest, \"You little faker.\"\n\n\"I wasn't faking! I was wired until I got in this water.\" She giggled as he dribbled a sea sponge over her shoulders and the tops of her breasts.\n\nHe was going to wait for the next day to bring it up but something she said when they were fighting stuck in his craw. Besides the break in that she neglected to tell him, which she was dead wrong if she thought he wasn't bringing that up again, this seemed to hang in the air more so than anything. Lovie sighed deeply and he knew she was ripe for the picking, \"Lovie?\"\n\n\"Hmm? Mmmm...\" he began to knead her shoulders as he figured how to broach the subject. She melted more into his frame.\n\n\"What did you mean when you said I had enough of you?\"\n\n\"What are you talking about?\"\n\nHe swallowed hard because he didn't exactly know how he wanted to repeat what she said. \"Um...you said something about being ran out of college?\" Her shoulders tensed up and she slid away to face him. She remained silent so he continued, \"Do you think I think you're a slut?\" His questions came so fast that even he knew he had to scale it back. He didn't want to scare her.\n\n\"I-It was just the heat of the moment...I know you don't think of me like that.\"\n\n\"But why would you say it?\"\n\nShe paused and looked away then shrugged and met his gaze again; \"I guess...I-I-I was just upset that you called me out on my horniness.\"\n\nHe shook his head because he wasn't buying it, \"Lovie, you were more upset than I've ever seen you before. It was like you had a lot of pent up emotion and you blacked out.\"\n\nHer eyes were wide with each word of his last statement and her heart thudded in her chest. She shook her sudden anxiousness and plastered an ill excuse for a smile. She didn't want to have this conversation with him. Her therapy was the only thing that made her feel comfortable talking about it. She liked the ability to hide behind the fact that she paid someone to listen rather than expelling her dirt to the people she loved. It nearly broke her when she thought Quentin looked at her like they did. She lazily blinked as she moved to the other side of the tub, \"I don't know what you're talking about.\"\n\nHe followed her but stopped short of the edge that she held on to. In spite of the still very warm water, her hands shook like the little match girl in snow. Something from her past obviously made her that tense and deep down he felt like it was the reason for a lot of their issues. \"Baby, you don't have to tell me but I'd love to be your support with this.\" Her breath moved the bubbles from around her as she sighed and leaned back to examine him. Almost as if she fought herself on telling him her jaw tightened and he knew that the side that didn't want to say was winning. Okay, he'd go slower, \"Does Cassie or Stelly know?\" His voice was low and beckoned her from the edge of the tub. It was a little reminiscent of a cop talking down a jumper. She felt a little calmer as his fingers sought out her ankle under the water. Languid circles played at the tattooed etching of a peacock feather on the inset of her Achilles. He didn't have to look to know it was there and where to trace. When she looked in his eyes she felt as if she didn't have to run from it anymore and could fully accept what happened to her because obviously she hadn't as well as she thought. She met his gaze once more and saw the sincere plea to open to him. Now it was time for her to put up or shut up. She spent most of her time convincing other people that her faith in Quentin was so true she'd forgotten to fully convince herself. Deep down she knew it was her defensive nature going into overdrive because she was so tired of standing up for her own judgment. \"Lovie?\"\n\n\"They know bits and pieces but not the whole story. I don't think anyone does but Cindy.\" As soon as she said it she regretted bringing her up, but there was no way around it.\n\n\"Cindy?\" He pulled her back in his embrace and wrapped a protective arm to the middle of her chest and hooked his hand on the opposite shoulder and fixed her against him again. She felt his deep breath as he said, \"What does she have to do with this?\" He already didn't like the sound of it.\n\nShe skirted the question for the time being to allow the whole story to unfurl. She settled in for the cathartic experience of opening up to the man she loved. \"Momma had a silent rule that the only way we were going to school out of state was if someone else paid for it,\" she began with a humorless laugh, \"Estelle, being the talented painter, got a scholarship out of state. I, being not so talented, stayed in state. At the time I was really burnt out on doing neighbors hair for prom and special occasions and felt a major in photography would be nice. It was the only thing that I felt wouldn't make me crazy and I knew it would get me abroad if I worked hard. As a quick back up I took cosmetology classes during my summer after senior year of high school but I didn't get my license just yet. I felt a bit better that Cindy was going with me as did my parents,\" she was in a daze at that point and didn't hear the grit of his teeth once Cindy was brought up once more, \"She had a way of making them think she was a saint. Her promiscuity was legend in our town but my parents never liked to point fingers or believe in town gossip. My mother had her fair share of it in her own town when she was younger...or so she said. Anyway, as you can guess, most of the rumors were true yet she got in their hearts anyway. I was just really coming into myself and she helped with that during my first year of school. In shedding my tomboy exterior I got more attention and it felt good to get noticed. Back in high school Estelle and Cindy got all the guys while I was just content to do their hair and makeup or give their guys' second-string friends some attention. One night Cindy came squealing into my dorm about being invited to a frat party by some guy that was pledging...\"\n\n~*~*\n\n\"Cindy, I've three girls waiting on me to do their hair for other parties. There's no way I can go party myself.\"\n\n\n\n\"That's just it girl you never party because you're doing stuff for other people or you're afraid of what people think of you. You look like a the martyr with a Cinderella complex.\" Cindy nonchalantly twisted and turned as she posed in front of Lovie's full-length mirror. She turned when she saw her friend's shoulders fall in her reflection. Cindy walked over to her, \"I'm sorry, I didn't mean that. It just makes me so sad that you don't see your potential.\"\n\n\n\n\"Potential? For what?\"\n\n\n\nCindy's eyes glittered with her sudden grin, \"To bring these boys to their knees honey!\"\n\n\n\n\"Speaking of 'boys' what's up with you and mystery date man? I thought you had some elusive boyfriend somewhere.\"\n\n\n\n\"Oh please, you think I'm giving some loser pledge any of my time? I'm looking for the real deal in a senior at that party...and ask for my MANfriend. Let's just say,\" she came intimately close to Lovie, \"He likes to watch.\" Then she softly poked Lovie on the nose. Lovie didn't say anything she just turned away to look at her hair magazines hoping she hid her heated flush. \"Aw look at little Loves getting all flustered. I told your sister about you...\" Cindy was referring to the fact that anytime she would talk to Estelle or Lovie about her debauchery Estelle would laugh and roll her eyes while Lovie would gawk with genuine interest. After a moment, she'd turn to blush but Cindy saw right through her. Even Cindy had to admit it was cute and maybe that was why He liked her too.\n\n\n\nLovie knew what she was going to say next because she heard it so much at that point, so she indulged, \"And what's that?\"\n\n\n\n\"You got a lil' freak in ya!\" Cindy laughed while Lovie stifled her own giggle. Deep down maybe Cindy was right. By 19 Lovie had oral sex pretty much fine tuned to her liking and loved the act, but could never pull the trigger on the rest. She just seemed to like it more, but it never crossed her mind that she was being a freak. Only that she was circumventing her piety to her family's religion and wishes. Yet the more she heard Cindy talk about her transgressions the more curious she was about sex.\n\n\n\nWith a rolling stare upwards Lovie ceded, \"Fine, I'll go sate my freakish nature. If not just to shut you up!\" Lovie laughed as she went to her closet door.\n\n\n\n~*~*\n\nLovie went on and choked through the story while Quentin listened to the rest of the story but he really didn't need to hear. It was the classic story of girl gets drunk at a frat party and frat guy takes advantage. His eyes were shut with anger, not at Lovie but at the guys and Cindy. As she regaled him on how some drunken frat prick took advantage of her, he wanted to ring Cindy's neck. She led Lovie to the slaughter and masqueraded as friend all after the fact as well! Lovie's sniffles shook him from his daydream and he held her close. \"I haven't even told you the worst part.\" She sniffled, \"Him and his friends taped it and put the footage with this homemade college girls gone wild DVD and sold it around the school.\" Quentin's stomach lurched and he tightened his eyes and grip on Lovie. It all made sense then, he could only imagine how she felt when she saw herself on his site and it burned in him more to find the fuckers so they could be prosecuted.\n\nSpeaking of which, \"What happened to the guys?\"\n\n\"I complained to the school but the guy had influence and got him and his friends off. He said that he was doing it for some other guy in California and he only got a cut of it. He turned him in but they never got the guy. The kid was suspended from school for a month.\"\n\n\"What tha fuck!\" Quentin made a mental note to find that guy as well. He made a silent vow to fuck that scum's world up. She shook with tears that he felt burn his forearm and held her close again, \"I'm sorry baby. I didn't mean to scare you.\"\n\nShe calmed herself enough to say, \"It's okay, I'm just glad I can finally get it out.\"\n\n\"What happened next sweetheart?\"\n\nWith a deep sigh she continued, \"I was beyond humiliated, I was obliterated with grief. People called me names, played nasty pranks on me. I virtually lost all my friends while Cindy could barely talk to me without breaking out in tears she felt so guilty,\" Quentin did a mental 'humph' as he listened on, \"I went home and eventually dropped out. My parents didn't know what to think. I didn't tell them anything but my mother knew better. She made me get examined by our family doctor. I remember I was so mad at her that I cried through the whole thing. But when he confirmed that I was still a virgin she still wouldn't leave it alone. She dragged me to a therapist that same day and even though it was hard at first, it did help. I went for a year and in that time I got my Cosmetology and Skin Therapy License, got my own place, and even started to date a little. So by 20 I felt I'd done a pretty good bounce back,\" he smiled at the obvious pride of how her life turned for the better, \"my family got a little overbearing with me, as my mother never let it go. My brothers would mysteriously stop by when they saw a car in front of my place, or my dad would come over to fix a nonexistent broken door handle or something. It was comical at first but got old soon. I love them to death but I had to get out of there. I know deep down my mother knew because she'd always ask me if I'd heard anything about 'those guys at my school that got accused of the sex crimes'. I'd just shrug and change the subject. So by my 21<sup>st</sup> I moved to the west coast with my sister and by that time Cindy was there doing some modeling with her and it felt like we were the three musketeers again. The rest is history.\" When the story was over they both took a deep cleansing breath and laughed at their unison. It was therapeutic to say and a lot to take in so they were both drained. She was so tired of carrying the burden of her past that she didn't realize how weary it made her.\n\n\"Let's go to bed baby.\" Was all he said and she knew he understood. This time she didn't fight it as they lifted from the water, dried, and left the bathroom hand and hand.\n\nChapter Twelve\n\nSweat rolled down the bridge of Cindy's nose and splat to the carpet. She trembled and hoped Guy didn't notice. He of course did and promptly swatted her naked rear with the riding crop and she whimpered slightly. Another bead of sweat from her forehead mingled with a tear this time as she spoke, \"I'm sorry sir.\"\n\n\"Oh that's nothing,\" he said over a mouth full of food, \"if you knock over my steak I'll be sure to make you sorry.\" As he fixed the off kilter plate that balanced on her back he picked up the glass of wine that steadied itself on a round cheek of her ass. She was on all fours as he used her backside as a dinner table. \"I'm sorry I didn't hear that?\"\n\n\"Yes sir.\" She gnashed and he rewarded her with another swat.\n\n\"Don't test me pet.\" His voice low, \"I'm glad you've been able to put this all on that Drew guy but I never said to put a link on the site.\"\n\n\"I was just taking initiative sir.\"\n\nSwat! \"When have I ever rewarded initiative?\"\n\nThe fork and knife still rattled from her shuddering form, as she choked through a sob, \"Never sir.\"\n\n\"You're so pathetic. You better be glad all this is almost over.\" Guy stabbed at a potato wedge and chewed through her quiet cries. Cindy faked her noisy tears because she knew he wouldn't let up if she didn't make noises like a hurt animal. It was too sick, even for her, how he got off on that kind of stuff. She was glad he couldn't see her face so it made her act more convincible. She'd willingly go through all this again to have the plan finally unfurl completely as she intended, not Guy. She sniffled loudly to welcome his chuckle to her discomfort and pain, yet her smirk only grew as he played right into her game. Oh it was going to be so sweet to see the look in both Quentin and his eyes. Sure her feelings for Guy were genuine and true when she first met him but when he started getting her involved with more and more of his vendetta against his twin she saw how weak he really was and it turned her off. When she finally met Quentin, some emotions were stirred again and she contemplated telling him of her involvement with Guy but then he turned her down flat she said forget it. Anger manifested into the need to fuck them both over and take the prize at the end. Guilt did set in for having Lovie in the middle of this ever since college. Although a good friend she was, a pawn was what Lovie served as first and foremost.\n\n~*~*\n\nThe next morning Lovie flittered around Quentin who kept trying to get her in his lap as she cooked breakfast. Several times he won out and she threw away a couple of not-so-perfect pancakes as a result. They ate in a serene-like cocoon that almost enveloped them back to each other's arms but Lovie's phone stopped them. A short conversation with Cassie made Lovie feel guilty enough to have to pry herself from her man's arms...but only for a few hours. He made quick work of hiding the dress for a later date, as he had no intention of letting her out in it anymore. He sat up on the rumpled bed with his back to the headboard with nothing but boxers on. He watched as she shimmied into some left over sweats she forgot at his house and one of his wife beaters. He silently sighed in relief that she didn't ask where the dress was. As she brushed her hair in his dresser's mirror she stole glances of his trim hard body in the mirror and had to turn away before she found herself back under the sheets with him. Just the thought of having him between her legs again sent aftershock quakes to her core. Quentin would see Eli that day and they'd do more to get to the bottom of the situation. He definitely needed to talk to Eli about some things that had weighed on him for a while, but Quentin knew what Eli's stand would probably be. He decided to run it past her as well, \"Sweetheart...\"\n\n\"Yeah?\"\n\nHe smiled when she ducked her head down to brush the back. \"How would you feel if I took some time off from the company?\"\n\nHer hands slowed through her hair as she lifted slightly to meet his gaze. His expression was anxious for her answer. \"Well I guess that depends. How would you feel, is the better question.\"\n\nHe broke out in a grin, \"Don't try to analyze me. Just answer the question babe.\"\n\nShe matched his leer and leaned on his dresser as she put her hair up in a high ponytail. \"There are too many factors for me not to analyze it first. What's this about baby?\"\n\n\"It's about me finally going clean. Being more hands on with my other commitments and seeing how well I stand up.\"\n\n\"But you love the company...\"\n\n\"Well...now, I wouldn't say all that. Yes I enjoy my time here and I'm very proud of my success with the company that I've help found but it was only because it was so easy to me. I got to do something with a hobby that I'm passionate about. Plus I can always still be a silent partner.\"\n\n\"So BDSM is a 'passionate hobby' for you now?\" She mused as she lifted to the dresser's counter.\n\n\"Okay, yes it's a big part of who I am but that doesn't change the fact I too can get burnt out on it. Maybe I'd like something a bit more low key.\"\n\n\"So this could be a permanent thing for you...not just time off,\" She asked and waited before he nodded. She examined him like a he was under a microscope, \"Quentin please tell me you aren't doing this because of me and what happened.\"\n\nHe hesitated before he answered, \"No.\"\n\nLovie jumped down and rolled her eyes with an exasperated air. \"I'm comfortable with what you do Quentin. Is it fair to say that it doesn't bother me a little? No, but I don't want to be the reason that you change your whole life around.\"\n\nShe walked to the foot of his bed to get her shoes and he was on her in a flash. While on his knees in bed he seized her close to his chest. \"Newsflash darlin', you've already done that.\"",
        "The enormity of his words washed over her again and she couldn't believe this perfect man could love her so intensely. With softened eyes and a small voice she said, \"you know what I mean. I just want you to be happy.\"\n\n\"Fine...yes you may have been the catalyst but we've talked before about me going straight before all this, remember? I feel in my gut that this is the right time to do it. I just want to know that I have your support.\"\n\nShe lightly rubbed her palms to his smooth chiseled chest and pressed her lips softly to his, \"Of course you have my support, I love you.\"\n\n\"I love you too.\" They kissed passionately as their pulses raced with mutual commitment and admiration.\n\n*~*~\n\nLovie decided to go the scenic route though the building in hopes she'd see Havi at the front desk. She checked a message from Cindy with an all-knowing quirk in her lip as to what her friend would say. 'Hey Loves...I've spoken to your sister on the phone again. I was going to call you later once everything was settled but when Stelly told me what you were up to tonight I knew I had to call sooner. You can't go through with it. I told you about him. I told you he was nothing but trouble...anyway...call me when you get this K?' The last part of the message came out a bit rougher than the first; like she was sympatric at first then turned malicious at the end. If she didn't know Cindy so well she'd almost be scared. She instead just chopped it up to Cindy not getting her way and even started to question Quentin's judgment on Cindy all together. From what she could see there was no love from Cindy to Quentin so it was hard to believe there was ever any crush nevertheless her presently having one. The elevator opened and she was pleasantly presented with Havi's red flame image as she left the little cockpit.\n\n\"Well look what momma brought in with the turnips.\" Havi beamed as she crossed the desk to hug Lovie.\n\nLovie giggled at Havi's aphorism, as she loved her southern sayings. They reminded her of her grandmother in a strange yet good way. \"How you doing sweetie?\"\n\n\"I'm just fine but I should be askin' you the same thang,\" Havi said before she pulled back and inspected her pal, \"Now, I won't dwell or keep you but I expect a full report on everything once Quentin gets this all taken care of ya hear? I bet he had a right fit when he saw it! I just hope who ever did it gets what's coming to 'em real good!\"\n\nHavi was on fire and Lovie could tell. Her southern drawl was only that pronounced when she was upset with Estelle being hit on at a bar or club. Laughingly Lovie soothed her friend, \"Havi calm down, you're almost as red as your hair child!\"\n\n\"Well I see you took it well.\" Havi huffed.\n\n\"Oh not a first I didn't but...Quentin and I dealt with.\"\n\n\"So you found out who is was?\"\n\n\"No.\"\n\n\"Then how?\"\n\nLovie just winked, \"my report's not ready,\" she sidestepped Havi to plop in one of the chairs with a pert drop.\n\nHavi followed close with narrowed eyes, \"Olivia Laceton! You had sex last night!\" Havi yelled but Lovie shushed her as she looked around and found no one. Havi lowered her voice but the tone was still excited, \"Oh darlin' you better give me the goods later on but now that I have you here I wanted to talk to you about the art exhibit.\"\n\n\"Oh of course! What did your friend say?\"\n\n\"They'd like to have it in about a week. Is that too soon? I mean do you have enough material or would you need more time?\"\n\n\"No that's great! That's just enough time for me to finish some editing that I have for my last portfolio.\" This arrangement would allow her a clear head for Mrs. McCaffery's niece's wedding. She promised over a month ago that she'd do the wedding party's hair, makeup, and full facials the night before. It was a two-day process that would drain her if she had the exhibit to worry about at the same time.\n\n\"I better let you go...\" Havi began as she rose from her chair.\n\nLovie's hand stopped her, \"um...before you do I wanted to ask you something. It's about Cindy.\"\n\nHavi's face went in a slight scowl before she went blank. \"That's funny that you ask about her because she called here this morning asking if you came down yet. I didn't even know you were here so I said you weren't. Why...what she do?\" The last part came out an octave lower with a flat tone.\n\n\"You really don't like her do you?\"\n\nHavi's eyes grew a bit then went apologetic, \"Is it that obvious? I'm sorry sweetie, I know she's your friend and all but she is one insufferable human being.\"\n\nLovie nodded solemnly, Cindy was very hard to take by most. When people found out her and Stelly were friends with Cindy they'd always praise them for their unassuming nature towards her and the ability to 'turn the other cheek' so to speak. Cindy had a tongue like a viper and a sensibility like a bear sometimes. Lovie was so easy-going that Cindy never bothered her in that way while Stelly was more like Cindy in that she'd stand up for herself when she felt Cindy got out of line. It's probably why they respected each other more so than have a friendship bond like her and Lovie. \"I know she can be mean and bit much but she means well.\"\n\n\"Honey there's nothing you can do to convince me of this. Half the rumors that follow me and Estelle are because of her.\" The eye roll that commenced after the comment told Lovie to drop it.\n\n\"I just wanted to know if you'd heard anything concerning Quentin and-\"\n\n\"Cindy? Hell no!\" Havi looked around herself this time then continued, \"Cindy is before my time so I can't say anything before then but since I've been here I've noticed nothing but contempt between the both of them. But then again, still waters could run deep with her. I just always thought she was as shallow as puddle...\" She stopped and looked to Lovie who shook her head, \"Sorry honey. Just call it as I see it. Why are you asking about her?\"\n\n\"I don't know. She's just been acting so weird lately.\"\n\n\"That's not above her. She's probably mad that you're working here.\"\n\n\"I thought so too but she never mentions it. It's always about how Quentin is bad for me and that I need to leave him alone.\" Havi pursed her lips to ponder the odd dealings then shrugged. With a sigh, Lovie lifted from her chair, \"Oh well, it's probably nothing. I better let you get back to work. Let Stelle know that I'll be needing her as a model in the next couple of days will ya?\"\n\n\"No problem puddin',\" Havi smiled.\n\nThey said goodbyes and Lovie headed out to leave. As she walked to the car, two women she recognized as Jenna and Charlotte walked from the back lot behind the building. They had a glower on their faces as they approached and Lovie hoped they'd just pass her. Their strides slowed and to Lovie's regret they stopped right in front of the driver's door. \"Jesus, you're just way too much,\" Jenna spat.\n\n\"What are you talking about?\" Lovie started to feel a motif here; every time she had a good feeling going, something or someone had to ruin it. Today wouldn't be the day; she was in too awesome of a mood considering everything that had happened. Charlotte just sat there with a hand on her hip as if she scared someone as she eyeballed Lovie.\n\n\"First you fly in and steal my place in Cindy's wedding...\"\n\n\"I did no such thing, you were too un-presentable to walk!\"\n\nJenna sputtered with the memory of why she really didn't walk then continued, \"Regardless, you stole Quentin and ruined any chance for me and him. Now he's probably going to shut the site down because of you! We'll be out of a job!\" Minion Charlotte gave an enthusiastic 'yeah' to follow her leader's steps.\n\nLovie swallowed hard and let the rational of the conversation absorb into her. Then she realized there was no rational with these horny bitches. They were just mad that Quentin wasn't fucking them anymore. \"Listen to me you insignifi-cunts,\" Lovie paused, got in closer, and they started to cower before she stopped, \"it's time for you bitches to start acting your ages and not your I.Q. so whatever fairytale land that you think you're from where you and Quentin are dating, why don't you slide down that beanstalk into reality and get some business so you can stay out of mine.\" She went for the driver door to get in but Jenna was still a bit in her way. Lovie looked to the two women who were still gap mouthed from her statement, \"Can you get outta my fuckin' way dearies? Thank you.\" The last part came out jovial and singsong. Lovie revved the engine and let down the window, \"Oh and ladies? If I catch you near my man again...that's yo ass.\" The calm in her voice turned them sheet white as she sped off.\n\n~*~*\n\nLovie was still on high as she rushed into her and Estelle's apartment. She was so energized by the moment that she didn't notice Stelly hastily tying a robe around herself as she shut her door to her room. \"Oh my god Stelly!\" Lovie jumpily skittered to the den and jumped on the sofa.\n\n\"What?\" Estelle swallowed hard and looked around the apartment frantically. She made sure nothing was out of place or left behind from the night before with her and her guest.\n\n\"I have so much to tell you. Thank you so much for the advice,\" she jumped from the couch and hugged her sister and gave her a kiss on the cheek, \"but I can't talk right now because I have to go over to Cassie's to catch her up on...well...everything then-\" Lovie stopped when she noticed how rigid her sister was. \"Stelle you okay?\"\n\n\"Oh...uh...yeah girl! You just kinda scared me half to death with the way you came in and all. How did last night go?\"\n\nLovie knew better than to take that bait and decided to scrutinize the situation more. It was nearly noon and Estelle was still in her robe and her hair was a mess. Estelle always tied her hair up at night plus she was usually up by the crack of dawn to go running. \"Nuh huh! How about you tell me how your night went first?\"\n\n\"W-what do you mean?\"\n\n\"I didn't forget your company coming over.\" Then Lovie gasped as she looked past Estelle to her closed door. Estelle had a bedroom set that she loved to show off and hardly ever closed her door out of habit. \"He's still here isn't he?\"\n\n\"Lovie...\" Estelle warned while she held Lovie firm as she tried to wiggle toward the door.\n\n\"Is he a sleep? I promise I won't wake him, I just wana see!\" Lovie was like a kid at Christmas as she begged to look at her sister's new lover. She'd been celibate after the divorce and Lovie was thrilled someone finally broke Estelle's chastity.\n\n\"Olivia please!\" And that was the only thing that stopped Lovie in her struggle. Estelle begged no one so this meant she really needed to not let her see him.\n\n\"Alright, alright but...you'll tell me soon right?\" Estelle nodded over a sigh of relief. Lovie rolled her eyes and huffed, \"Fine...I gotta go anyway. I just came to change.\"\n\nLovie changed and left to Estelle's relief, without looking in her room at her little secret. Her dirty little, sexy secret. And as she put the chain on the door to ensure Lovie couldn't just barge in again, the door's creak from behind her alerted to his entrance, \"That was close.\" His whiskey soaked voice was still hoarse from screaming her name throughout the night.\n\nShe put a hand over her own throat as it ached from her reciprocated yells of his name as well. She turned and leaned on the door, \"You damn right it was close...too close!\"\n\n\"Why are you getting pissy with me? I didn't do anything!\" He advanced on her but she put more distance between them as she made her way to the kitchen.\n\n\"Why did you have to spend the night?\"\n\n\"Why did you let me?\" He simply answered as he slowly moved like a lion to a stubborn lioness.\n\n\"I wanted answers.\" Estelle defended weakly.\n\nHe chuckled harshly, \"well you sure got 'em alright!\"\n\nHer eyes spat fire at him, \"well now that I got them you can leave.\" She equaled his callousness.\n\nHe stopped a foot away from her. She averted her gaze from him then held herself as she trembled slightly with anger and a bit of heated passion. \"Okay Elle, truce,\" he was the only one who called her that and they both secretly loved it. \"I didn't mean to get upset. I needed answers too and now I can honestly say that...I'm still confused.\" His voice was softer as he tried to loosen her death grip on her torso. She looked absolutely irresistible with her pink Hello Kitty terrycloth knee length robe and her hair a mess from his roving hands throughout the night.\n\n\"How bout I figure it out for you. We can't see each other anymore.\"\n\nShe tried to jerk away but he just held on stronger and pulled her to him, \"That ain't gonna work for me,\" he growled. Estelle's incredulous astonishment made him laugh inwardly but he knew she'd be too pissed if he let it show. He knew what she needed now, a man not afraid to tell her 'no'. Not afraid to take charge of a situation. That's where he messed up all those years ago and now he was paying for it big time.\n\n\"I don't care what doesn't-\" He didn't let her finish before he devoured her little sass mouth. She whimpered across his scouring tongue before he slowly lifted from her still parted lips. She kept her eyes closed as she swallowed and spoke, \"You're not playing fair.\"\n\nHe chuckled deep in his chest as he held her with one hand and other found her hot center under her robe, \"Life isn't fair.\" Her eyes snapped open to her familiar words that she spoke to him numerous times. She gasped as two fingers dug into her saturated slit and circled her sticky walls. Instinctually she began to raise her leg to allow him better access and his grin widened to her surrender. She snapped to her senses then planted her leg firmly on the ground. His smile slacked and with a growl he hiked her leg over his hip and ground his hard on into her crotch. The movement was so harsh and fast that she had to steady herself on his shoulders. Her eyes widened at his might and looked to him, all anger gone and replaced with the heated desire. She swallowed hard as she went to move her hands from his body. \"Don't you dare,\" he gritted and she froze. He descended on her neck with fervor.\n\nHis hot tongue and lips drugged her while his hips kept her in a snake dance trance. In her last breathless whimper she tried to stop the madness, \"we can't do this. We're over.\"\n\nHe answered her with another rumble and lifted her by the ass to put her on the nearby counter. \"We're over Elle? Nah, I think we're just getting started.\" He knelt between her thighs and roughly spread them as she tried to keep them closed. Before he feasted on her like a starved hobo he looked up to her flushed disposition. Eyes heavy with yearning watching him, lips full from his hard kisses, and her robe slightly opened to reveal her taut budded peaks as they craved his attention. He silently shuddered from the sexiest image he'd ever seen. Lord how he loved to lap at her jugs. Hell, he could nibble, lick, and suck every square inch of her just as he did the night before. He loved getting her nice and seasoned for his cock and mouth so the foreplay was always just as good as the full invasion. He knew she was right about everything she said but damned if he cared. Every time they were within ten feet of each other he couldn't help but ravish her. The fight to keep him away only detonated his volatile need for her. Her heady aroma was of no other and it beckoned him as he petted the protruded flesh from her damp pussy. She was ripe for the picking but there was something else he needed out of the way before he could munch on her sweet delicious peach. He let his middle finger round her hard nub, \"Say it.\" His voice was heavy and harsh with need yet grew pained and a bit louder when she only shook her head 'no', \"Say it!\" He wrist flicked and she squealed at the sudden sensation.\n\nShe was still being the perfect prisoner of war and looked to him with a slit gaze. \"No.\"\n\nHis eyes went dark as he rearranged his hand so his thumb rubbed her clit and two fingers sought out her folds, \"Say it damn it!\" He jacked his fingers in and out while the thumb never left contact from her tender button. Her head fell back and she strangled on the sound that her throat tried to make. \"Look at me.\" Her eyes moved back down to him and she looked as if she were going to explode. \"Say. It.\"\n\nThe intense stare his chocolate eyes gave made her heart stop while her river ran wild on his digits. Her taut ball of a body screamed, 'stop fighting him girl! Say it!' Unshed tears threatened to fall, \"But...\"\n\n\"No buts...\" He secretly cheered at her fading resolve. His lips went to her folds and rubbed her cunt lips gingerly. Barely they grazed her and she grunted from his teasing ministrations. She squirmed from his blazing breath but he held her put with an arm over her waist like a theme park safety bar. \"Mmmm,\" he said when he pulled back and watched her as he licked her dew from his lips. \"Elle, I won't tell you again.\"\n\nHis lip smacking chops and stern demand finally won out. She was so close at that point and couldn't stand a second longer not feeling his devilishly expert tongue in her hot box. She took a deep breath and opened her mouth and everything stilled in them as well as time itself. He was ready to devour her as soon as the word came out and licked his top lip for good measure. \"P-p-please.\"\n\nHe lifted his brow with relief, \"Thank you,\" then dived tongue first into her luscious pond.\n\n\"Oh shit!\" She squealed as her climax that teetered for the past five minutes fell in her favor. He by far, gave the best head she'd ever had and her mistake was in telling him that. He made her his captive with his tongue every time as he lavished languid strokes that were attentive to all her outer erogenous zones. \"Right there baby...yeah..y-y-\" she stuttered to a stop as her mouth went into a perfect 'O' and her hands found his head as she silently screamed. His tongue curled over her clit while the bottom lip teased her opening. That move alone sent her fevered body into another fit of shudders. \"I'm coming again!\" He grunted like a pig to its trough as he greedily slurped and sipped at her tangy sweetness.\n\nHe removed his mouth but kept his fingers jiggling over her passage, \"I only do this for you because you taste so good! Now gimme some more of that nectar baby, I want it all so no one else can have it. It's all mine!\" He finished her off with two more orgasms before he lifted from his position and moved her from the counter. He went to the den with her still cradled in his arms and gently laid her on the couch. \"Elle...\"\n\n\"Just go,\" her voice small with defeat and shame. Every time she tried to stop him he'd just prove that she was no match. At first she thought it was left over lust but now, it was more apparent to both of them how their hearts were screaming from the bench to be in play. She tried to dismiss him and reached for the remote to turn on the TV. She needed him to get the hint that she needed time to herself...to think.\n\nHis jaw tightened but he decided to let her have that, \"I'll go...for now Elle.\" The last part demanded she look him in the eye. \"I'll be back.\" He stood to button his shirt and she bit her lip at how disappointed she got that she wouldn't see his hard chest anymore. He caught her glance towards him and smirked when she tried to hide it. He went down and captured her lips between his, her taste still mingled on his tongue and she groaned. She needed control of the situation so she bit the inside of his lip. Childish yes, but it got the response she needed. He jerked back as the iron-laced liquid tinged his tongue. Her eyes were back on fire. With a shaking finger he lifted upright. The kitten's claws were back out and he didn't have time to show her how much it turned him on again. So he turned, without another word, for the door.\n\nHer eyes seethed at his back until he silently shut her door. She gave an Amazonian cry as she threw a pillow at the door. He was so adamant about not giving her up that she started to enjoy his insistent demeanor. In the end though, nothing could happen with them and that saddened her beyond belief. She sat upright then ran both hands through her head and whispered, \"How am I gonna get outta this.\"",
        "Chapter Thirteen\n\nQuentin went through the motions after Lovie left and headed to his office to get to the bottom of everything. As he investigated, all signs pointed to Drew, yet it still didn't add up in Quentin's book. The line to Drew was too straight and clean; it didn't make sense for Drew to be this clumsy about it. Either he was the dumbest, most arrogant SOB on the planet, or this was a frame up. Then again, Drew was a real hot head when it came to the girls of the site. He tried them all and they all shut him down flat. His contempt for Lovie probably overflowed since she was beating him at his own game as well. He was about to call Eli but stopped at the chance when he came in and slapped some papers on his desk. \"Nice of you to knock.\"\n\n\"Why would I knock? There are the contracts for the gym and its merger you called about this morning.\" They were co-owners to a small private chain of gyms that an associate of there's mostly managed, and now they were in the works of acquiring an even smaller chain. That would mean the business would span across the northeast and it was exactly what Quentin wanted to sink his teeth into. He quickly made a five year plan to have it all over the east side of the country and in another five the whole nation. He grinned as he fantasized about everything falling into place while he leafed through the contracts.\n\nHe did a double take when he looked up. Eli's brow rumpled as he sat and propped his feet on the desk. He tongued his bottom lip and rubbed his forehead in contemplation. \"What's wrong with your mouth?\"\n\n\"I...uh...bit the inside of my lip.\" His eyes glazed over a bit.\n\nNormally Quentin would of pushed his friend's feet off his desk as usual but Eli didn't look to be his sprightly self so he indulged further. \"You okay man?\" His look screamed of woman trouble and he could just guess when it concerned his wife.\n\n\"Huh? Yeah...yeah, just worried about Cindy. She didn't come home last night.\"\n\n\"Christ, shouldn't you call the police or something?\"\n\n\"Nah, she left me a text saying she'd be at a friends'.\"\n\n\"So what's the problem?\"\n\nEli looked up slightly, took a deep breath and shook his head. \"Nothing man. Did you come up with anything else? We should start to compare notes so we can tie this up.\"\n\nQuentin let the previous conversation slide for the moment and agreed, \"So far everything's pointing to Drew.\"\n\n\"I saw that...but why him?\"\n\n\"Well he doesn't have the highest opinion of Lovie since she's doing his job better. Plus they've already had some negative run-ins. In fact, so much so that I've had to talk to him.\"\n\nEli finally dropped his feet and thought fully at what was at hand. He himself had to talk to Drew a year before about Cindy. Like most of the girls with the site they just dismissed his comments and pitied him but Eli wasn't going to let someone just talk to his girlfriend at the time any kind of way. \"Again? He really doesn't have the best disposition when it comes to the women here. Shit, anywhere for that manner. Well do you want me to do it or you?\"\n\n\"Do what?\"\n\n\"Fire him.\"\n\n\"We don't have sufficient proof Eli. He could say he was framed.\"\n\n\"We're 'at will employment' with a three strike rule. He already has two strikes, so if it's legal action you're worried about him taking then-\"\n\n\"It's not that,\" Quentin interrupted, \"it's the fact that this is just coming together a bit too well. I'm not unconvinced that someone else had something to do with this.\"\n\nEli's eyes narrowed as if he already knew the answer, \"Who?\"\n\n\"I don't know,\" Quentin lied, \"I think that maybe we should investigate this more.\"\n\n\"Investigate...dude are you nuts? And do what, bring everyone in here one by one to question them about their involvement with this?\"\n\n\"Um, why not?\"\n\n\"Because do you know how many people would lie or be offended by such an accusation,\" Eli was getting worked up and he calmed himself when Quentin's gaze went darker. \"Look man, I know you want to make sure this doesn't happen again and we can brainstorm on that. I don't think it's necessary to involve everyone or offend anybody with this.\"\n\n\"But it's okay to let me and Lovie be offended by this.\"\n\n\"Ah c'mon Quint! It was a hidden link that was up for all of 12 hours.\"\n\n\"We hide Easter eggs on our sites all the time Eli, you know that and our fans know that.\" His anger was teetering, \"why are you fighting me on this?\"\n\n\"Because if it walks like a duck and quacks like one then I'm ready to get Drew the fuck outta here! I'm ready for my life to go back to fuckin' normal!\" Eli rose in the middle of his rant and was close to the door. Even he noticed that the last comment didn't have anything with the situation so he had to cover quickly. \"Shit he hasn't been happy here for some time so now is best as any to get rid of him.\"\n\n\"Dude chill!\" All the years of friendship he'd only seen Eli that upset a couple of times. \"I'm only doing what I feel is right.\"\n\n\"Well what you feel affects a lot of people if you keep searching for something that's right in front of you. It's Drew; I know it and deep down you do too. I know you think it's someone else,\" he paused to let that wash over Quentin before he continued, \"but I promise you I'll take full responsibility if I'm wrong about Drew.\"\n\n\"I don't want to risk Lovie like that.\"\n\n\"Well I don't want to risk our business over accusing the wrong person. I like Lovie, I really do but maybe she shouldn't be working here.\"\n\n\"Excuse me!\"\n\nEli put his hands up in a calming motion; \"Okay let me approach it like this. She's definitely welcomed her but she's not meant to be here Quentin. And come off it anyway, you just want her here so you can keep an eye on her. You and me can find a much better place for her at any number of other endeavors we're involved in. Besides does she even feel comfortable working here anymore?\"\n\nQuentin looked down with some defeat, \"I don't know.\" He of course couldn't tell Eli of her tragic past, but he was right in that he wasn't sure if she even wanted to continue there.\n\n\"Quint, believe me I empathize with your situation. I don't know what I'd do if my privacy were invaded like that but we gotta move forward. We have to think about the business now and not your emotions.\" Quentin slumped back in his chair and palmed his face of frustration and with a sigh nodded his submission.\n\nQuentin pressed a button for a direct line to Havi, \"When Drew gets here, tell him to come directly up to me.\"\n\n~*~*\n\nHe watched everyone as they mingled through Off the Couth. Quentin had to hand it to Havi's friend because between his own personal guest list and Quentin's, the place was packed. He didn't get to see much of Lovie the whole week except for two nights that he'd spent with her at her place. She had an epiphany to crank out one more portfolio that would highlight the event so it occupied her time. She even came up with a dark forest theme mixed with a masquerade. He adjusted his Kato mask and wolf ears as he searched the floor for his Little Red Riding Hood. He spotted her as she laughed at something that a well-known art critic said. Even behind her mask he could see the twinkle in her eyes that constantly amazed him. She had on another creation from her sister and this time nodded with approval as he scanned her body for the fifth time that night. It was a backless red floor length dress that donned a detachable hood. It hugged her curves deliciously yet left enough movement with the deep slit at the side. She looked like the perfect sensual rendition of the lost fable and it got him so hard he rearranged his package several times in the night. Finally their eyes met from across the room and she flashed him a crippling smile. The attention of the critic followed her gaze and he nodded with a tight smile to Quentin. Quentin returned the favor and silently muttered, \"That's right guy. The lady is very taken.\" He downed his last bit of champagne and thought no better time than the present to prove just that. He waded through the crowd of people but lost sight of Lovie. He figured it was just because of everyone in the way but once he got to the general area that his love once was she was no longer there. The art critic was only left as he studied an already claimed piece of Lovie's photo.\n\nHe did a total 360 as he searched out the red hood again. His inner wolf began to whimper with confusion. He moved through the crowd again to get to a higher place to scan but bumped into a woman with rabbit ears. It was Casica, Lovie's friend. She apologized blindly then looked up and smiled when she noticed it was him. He'd only met her that night but she already treated him like an old friend, \"Oh Quentin, I'm so sorry.\" She kind of looked out of place there but she came anyway to support her friend. Very commendable in his book as he was a bit peeved that Lovie's sister didn't come. She came up with some excuse of a gig or something but he couldn't help but think that it was because she was chicken of the lifestyle.\n\nHe returned the smile briefly as he steadied her wobbly stance, \"No problem Casica. Is everything okay? No one's bothering you, are they?\" He knew they were all adults here but some regular scene people lurked as well and he didn't know if they were on their best behavior or not.\n\n\"Child please, call me Cass or Cassie. Only my mother calls me Casica. And yes I'm fine, there's nothing I can't handle,\" her laugh was endearing, almost like Lovie's and he could tell why they hit it off so well. She was just as smart, beautiful, and he guessed, as talented as Lovie with her career as a choreographer. Her honey colored eyes set in a red shaded caf\u00e9 au lait face, probably would have made him swoon, if he wasn't already too captured by a certain moon lit eyed nymph that was hiding from him at the moment. Speaking of which, his eyes filtered the room to search for her again as Cassie kept talking, \"I can't believe how this is going. I always knew Lovie was amazing but this goes beyond her regular talents!\" Cassie gushed continually and not to be rude, but Quentin had better matters to attend. She must have noticed because she slowed her words and stopped completely as he hadn't looked at her most of the time she spoke. He looked down to her with apologetic eyes but she waved him on, \"Don't worry about it. I saw her duck into one of those hallways in the back.\"\n\nHis eyes shot to the area and sure enough Lovie waited by one of the doors and watched them. \"Excuse me,\" he went to step around her.\n\nCassie stopped him with, \"she really loves you, you know.\"\n\nHe smiled and turned to Lovie's friend, \"I know, and I love her too.\"\n\nShe grinned and nodded, \"That's all I needed to hear.\" She ended with a wink then disappeared in the crowd.\n\n~*~*\n\nCindy fumed when she saw Quentin and Lovie duck in the back to the fantasy rooms. In one swipe, her cat ears and mask were on the ground and she rudely snapped for the bartender. She downed her shot in one gulp. She was glad Eli was mad enough with her to not come because he'd only get in the way. Now that the plan had changed she needed Eli most of all on her side. It was a close call because he started to talk about divorce. She even was shocked with that one. He must have been really angry and no amount of pity sex could mend it. She had to break out the tear bomb to get out of it on top of promising to go to therapy. Damn it Guy! He just didn't understand that sometimes it wasn't about what he wanted and it could all go bust just because he needed to feel in control. She rolled her eyes as she assessed the situation at hand. She had to look like she was supportive of their relationship now and that meant admitting defeat. The scent had to be thrown off of her as she knew Quentin still suspected her of putting the material up. She conjured up the perfect speech for Lovie and as naive as she was Cindy knew Lovie would take the bait. She'd take it because it's what she wanted to hear. She sat back in the stool and daydreamed on her future triumph against men that had dogged her for as long as she could remember, starting with the Maverys.\n\n~*~*\n\n\"Lovie what's going on?\" Quentin sat in a chair in the nondescript red and black room. She lit candles in sconces that draped the walls and still didn't answer him. The dance reminiscent of the night he'd seen her there with Havi and Stelle. Her silence peaked his interest at first and now sizzled low in his groin. The anticipation of what to come made him squirm. The sex was through the roof with them and he could barely contain himself around her. \"Lovie,\" he all but whined.\n\nShe finally giggled and turned to him as she took off her hood, \"Patience baby, I'll be with you in a minute.\" She shook out her newly cut bangs and he grinned at the vision. She thought she'd messed up by doing them herself and felt them to be a bit child-like. He thought they made her vixen like character surface more and added to her allure. She walked behind him and uncovered some scented candles to light. \"Quentin, don't you think it's time for another scene?\"\n\nQuentin's heart jumped to his throat and his Adam's apple bobbed it back down as he spoke, \"What?\" They hadn't done a scene since after the incident two weeks before. It hadn't really bothered him since the sex was so phenomenal but he also thought she just wasn't into it anymore.\n\nShe ran her fingertips through his hair and took off his ears and mask as she circled to the front of him, then straddled one of his large thighs. The heat that generated from between her thighs was wet and he groaned with the knowledge of her nonexistent panties. He had his eyes closed the whole time and slowly opened them to find her mask off as well. \"Don't you want to play with me anymore?\" She meant to tease him with the comment but her eyes pleaded with a wealth more of meaning.\n\nA ragged breath left his lungs while he thought of the implication. He licked his thirsty lips as her nipples made a guest starring appearance through the red fabric. \"I'm down for any game you fancy baby.\"\n\nHer smile made her eyes glitter as she said, \"Good! I want to be the dominate to your submissive.\"\n\nHe chuckled shakily, he'd never been in that situation and he wasn't sure if he'd be any good. \"I don't know sweetheart...\"\n\n\"You already said you were game. Besides,\" she ducked into him and whispered, \"I'll make it painless if you want me to.\" She leaned back on his thigh and did a small grinding motion that elicited another moan.\n\nHe took a moment before he said anything; each second double, tripled, and quadrupled in his mind as her thick sexy hips circled on his meaty thigh. With a gulp and a drop of sweat that rolled down his brow, he said, \"what did you have in mind?\"\n\nShe lifted from his leg to his reluctance and bent to kiss his pout away. When he tried to deepen it she pulled back, \"tonight's lesson is restraint.\" He smirked and nodded to her obvious plan to get him back. Fine with him, she wouldn't break him. She couldn't break him. She pulled out another chair and sat it in about a foot away from him. She let her dress pool to the floor and he was met by another succulent vision. Her slip, if you could call it that, was just as brazenly red as the dress. It was an all lace halter chemise that didn't leave much room for imagination. Her berry tipped breasts bulged past the rose embroidered bodice and hugged over her substantial hips. \"Do you like what you see?\"\n\n\"I love what I see.\" He lifted his hands to grab on to her handle like hips but she gave him a look so he stopped himself and placed his hands palm down on his pants.\n\n\"Good. Now take off all your clothes. I want to see that magnificent body of yours.\" As he loosened his tie, she sat in the chair and lifted both feet up on the seat so he got a lovely view of pussy from the chair. When she did that his movement slowed and his mouth hung open a bit. She studied him carefully as her hand went to her exposed sex and caressed her tender lips. Her head fell back but she didn't lose him from her sight. He'd gotten his jacket and tie off and started on his buttons to his shirt as she teased him with her pussy. Her red nails circled the entire area of her cunt while he staggered across the buttons. \"Quentin,\" she had a lazy half smile on her face when he met her gaze while his expression was like a little boy with his first train set, \"we don't have all night.\" He looked down and noticed that he still had more clothes to go through. When he was finally finished he stood proud as his cock jutted from his body and swayed like a flagpole.\n\nHe smirked when she bit her finger at the sight of his naked form. He worked out five to six days a week for an hour at a time so he knew he looked good, but under her watchful eye he knew he looked delicious. \"Do you like what you see?\"\n\nShe blushed as nodded, \"Sit down.\" He followed her direction then was pleasantly met with a full on view of her glistening center. Her fingers dipped in and out unabashedly now and he wished to the heavens it could have been him. He hoped that this was it for her lesson tonight because he was sure this was all he could take. The sound of her wet pussy sloshed the room and her lips grew fat with desire for him. She softly moaned yet still didn't break eye contact. She looked so lusciously x-rated and voracious that he wondered why he came as the wolf that night. \"Would you like me to come for you Quentin?\" Her voice was tight and hitched at the end of the statement so he knew she was close.\n\nHe didn't notice he was panting until he whispered, \"Yes.\" His hands burned to wrap around his thick pole but she hadn't given him the go ahead. Fuck! He couldn't remember why he agreed to this. She suddenly straightened and simultaneously hiked her stretch material up to her waist. The glorious sight of her neatly trimmed kitty sent an invigorating scent to his nostrils. She spread her legs over the chair until she straddled it like Catherine Zeta-Jones in Chicago. Her eyes smoldered to him as her hand jiggled over her clit. He didn't know what was sexier, her not letting her eyes close like she usually did or the actually sex act she performed from him. Her breath gulped and sputtered rapidly as she brought herself to a screeching climax. She panted and smiled as she noticed his hand that cupped his balls.\n\nShe raised her brow and nodded to his privates and he looked down and immediately moved his offending hand. \"Another infraction like that and I'll have to punish you.\" She let the words silkily leave her lips to let him know she was enjoying every minute. \"Well now that I've prepared all the ingredients and heated the oven so to speak...care for some sticky treat?\" She offered a come-covered finger to his mouth and he greedily enveloped the digit. When she snatched it back his eyes snapped open with a bit of annoyance. She chuckled as she lifted from the chair.\n\n\"Pay back's a mother.\" He muttered.\n\n\"What was that?\"\n\n\"Nothing...um how long is this going to last Lovie? Won't everyone miss you?\"\n\n\"We can stop now if you want.\"\n\n\"No! I mean...I just mean-\"\n\n\"I think you're getting impatient,\" she moved his legs together and straddled his chair, \"am I breaking your resolve?\"\n\nHe began, \"Ha!\" Then hissed when her heat hovered his cock, \"Holy shit!\" She giggled but he held strong and through clenched teeth he answered, \"You can't break me Lovie.\"\n\n\"Oh yeah?\" She sunk her channel over the helm of his dick then revolved around it like a moon around a planet. He threw his head back; the sight and sensation was too much to keep him from slamming inside of her yet he gathered the last bit of strength. The straw that annihilated the camel's back was when she moved close to his ear and said, \"I do a lot of stair master at the gym so I can stay like this for a very long time baby.\"",
        "His eyes popped open with that revelation, \"screw that!\" He had her pinned to the wall like a poster faster than a blink of an eye. He grunted and pounded into her mercilessly as she sobbed his name and incoherent curses.\n\n\"You...said...you'd...submit...\" Each thrust extracted her breathy words.\n\n\"Fuck what I said! I can't take it! I want my sticky treat now!\"\n\n\"Then sticky treat you shall have baby!\" Her next orgasm hit like a ton of bricks as he followed soon after with an almost wolf--like howl.\n\nWhen they came back out they sat at a reserved table for themselves and ordered some drinks. The night thinned out a lot of the patrons and she was proud to see most of her work sold. They were like teenagers, with her schoolgirl giggles and his neck nibbles. They didn't notice when Cassie came up so she had to clear her throat just to get their attention. \"Excuse me you guys. Quentin can I ask you something?\"\n\nHe turned from Lovie but kept her in the crook of his arm and smiled, \"Shoot.\"\n\n\"Can you tell me more about Heath Miller? The Aussie guy?\"\n\nQuentin thought for a second and his face turned up in confusion. \"I don't know any Aussie Heath but I do know an Aussie Lochlyn.\"\n\nCassie's eyes went cold as she drifted off, \"he lied,\" she finished with gritted teeth.\n\n\"What? Cass, what's wrong?\" Lovie could see the wrath that fumed in her friend as she turned around to spot a very hunky looking man smiling in their direction. \"Do you know that guy?\"\n\nCassie grabbed Lovie's martini from her hand, \"Can I borrow this? Thank you.\" She walked over to the hunk and threw the drink in his face. Lovie gasped and Quentin cursed at the scene, as the hunk that must have been Heath/Lochlyn, stood shocked when Cass stormed away. When she made it back to them she said, \"I'm sorry if I ruined anything for you but I have to go. Loves, I'll call you later.\" Cassie turned and stalked to the door.\n\n\"You better,\" was all Lovie could get out as Quentin got up to check on his associate.\n\nWhen he got back she could hardly stand the anticipation and asked question after question in rapid fire. Quentin just shrugged, \"He won't tell me what happened. Is Cassie okay?\"\n\n\"I guess, I don't think it was anything serious. Maybe he was a jerk to her or something. She said she'd call me later.\"\n\nAs they laughed at the recent events, another figure blocked the light of their table. This time it was Cindy, and instead of her usual scowl she had when she saw them together she had a smile. \"Hey you two. You guys look cozy over here. How has your night been?\"\n\nLovie equaled her smile but held a bit of bemusement while Quentin's expression was just down right confused. They stared at her in silence before Lovie shook her head to rid the reverie, \"Um, it's been really good. Everyone seems to like the pictures.\"\n\n\"Like them? Girl, they love them! I'm so proud of you.\"\n\nLovie may have fell for it but Quentin didn't, \"Have you called your husband to find out why he isn't here?\"\n\nCindy drifted her eyes coolly to him, \"He's your best friend Quentin. You could of called him just the same.\" Lovie laid a hand on Quentin's as he was about to say something else. She fixed him with a look that said, 'let it go'. Cindy smiled but it didn't quite reach her eyes, \"As he's probably told you Quentin, we've been having some problems lately. We decided to do our own thing tonight.\" She turned back to Lovie, \"but Lovie he said he was sorry and he'd like to bid on everything that's left over from tonight.\"\n\nLovie gushed, \"Oh my...well sure! There's not much left but it's all his!\" She looked at Quentin and he nodded with approval.\n\n\"Well anyway, I'm about to go but I was wondering if you could walk me out Loves? That is...if Mr. Wolfie here can spare you for a minute.\" She directed the last part to Quentin. She made the comment sugary but he knew she was being facetious.\n\nLovie was already getting up as Cindy was talking so Quentin grabbed Lovie's hand and pulled her down for a deep kiss. When he let her up for air she had a dreamy look on her face. He whispered, \"I love you.\" And she whispered it back before he turned to a red-faced Cindy, \"Don't be too long.\"\n\nWhen they got outside and to Cindy's car she turned to Lovie and hugged her, \"I'm so sorry. I've been such a bitch!\"\n\nLovie hesitated as she returned the embrace, \"It's okay. You were only looking out for me.\"\n\nCindy pulled back with a twinkle in her eye, \"Yeah I was. But now I see that you guys really do belong with each other. I guess I've been so stressed with my own marriage I took it out on you guys.\"\n\n\"What's happening Cin? You guys just got married.\"\n\n\"Well after the honeymoon, we kind of decided that our open relationship rules would taper to a stop but I won't lie and say that it's been harder for me than for him to end things. Regardless, I just want you to know that whatever happens with you and Quentin, I'll be here for you. You've been a good friend to me over the years and I know I haven't been-\"\n\n\"Cin...\" Lovie warned.\n\n\"I know I know, I won't talk about it. Whatever happens, I'll always cherish our friendship the most.\"\n\n\"I will as well Cindy.\" Lovie squeezed her shoulder and hugged again before Cindy got in the car and sped off. She had no idea that would be the last time she saw Cindy as a friend.\n\n`*~*~\n\nEARLIER THAT EVENING\n\nEstelle put away her sewing gear as Lovie danced around in her new dress. \"Oh Stelly it's so gorgeous!\"\n\n\"Oh girl, stop. It's just some fabric sewn together.\"\n\n\"No you stop putting yourself down! I hate when you do that.\"\n\nEstelle put on a tight smile as Quentin chimed in, \"It really is a beautiful dress Estelle.\" He couldn't take his eyes off of Lovie\n\nShe genuinely smiled at Quentin and was glad they put their differences aside, \"Thank you Quentin. She wanted me to make it with you in mind.\"\n\nEstelle 2 and Havi whistled and cheered as they came in the room as well. Estelle 2 said, \"Can you make something like that for me?\"\n\nLovie's Estelle only chuckled, \"of course.\"\n\n\"I mean I can pay you and everything.\" Estelle 2 rushed. Everyone in the room couldn't stop looking at Lovie in the dress.\n\n\"Oh you'd only have to pay for the fabric.\" Estelle latched her sewing machine away.\n\nHavi seconded in as she flirted with the hem of the dress, \"We'd have to give you something for it. This looks like it should be in a boutique or something.\" The incredulous tone made Estelle blush, which was very hard to do.\n\nLovie noticed and shooed every one out to do finishing touches with her sister. When they were gone she turned to Estelle, \"I told you this was your calling.\"\n\n\"It's just a hobby.\" Estelle said simply. Lovie sighed as she saw her sister was in a rut. She hoped that this new man in her life would help her see her potential like Quentin did with her. The love of a good man could change a lot in a girl's life.\n\nAs they moved to the front door, Quentin held Lovie's jacket out for her and she spoke to Estelle, \"You sure you don't want to go?\"\n\n\"No, I really need the money from this gig and it's too easy not to do. I just promote a drink for a few hours at a club then I'm out\"\n\n\"Okay, call me if you need anything.\"\n\n\"You guys have fun.\" Once she closed them out she went to her bathroom to start a nice hot bath. She felt guilty for lying to her sister on not going but she couldn't risk seeing him there.\n\nAlmost like she summoned him, her phone hummed of an incoming call. She spotted the name and clutched the phone to her chest. On the third vibration she hit send, \"What?\"\n\n\"Are you going to the show?\" His voice was urgent but still sexy as hell with its baritone that tickled her ear.\n\n\"No.\"\n\n\"Why not.\"\n\n\"I think you know.\"\n\n\"Just like for my wedding, you got a gig?\" There was a pause on her end so he continued, \"Well I'm not going either, so I'm coming over.\"\n\n\"No! Eli-\" Before she could get it out he hung up. \"Damn it! Shit,\" she cursed as she tried to call him back. His phone would ring once then go to voicemail. She sighed as she stopped the water. Her relaxing bath was no more. Elliot Leary was on his way over.\n\nChapter Fourteen\n\nMoist.\n\n\n\nHot.\n\n\n\nDelicious.\n\nGod it all felt so real that morning. His dream took a turn for the better as his faint smile stretched into a full on grin. He had a constant fantasy since the exhibit of keeping Lovie as his love slave for a week or two. Having her depend on him for everything, especially her pleasure gave him a raging hard on at the drop of a hat. He knew it was too much, even for them, but he couldn't help it. Sometimes he just wanted her all to himself, uninterrupted. No site, friends, or family, just good old fashioned one on one time. He'd dress her up and keep her locked away like a male version of a dollhouse. In the fantasy, every morning began with one of her super duper blowjobs and this morning spared no exceptions. His senses were on fire as he gripped a clump of sheets in his hands. He could hear the slurping sounds of her mouth while her throat took him deeper and deeper. The feel of her long dense tongue that battled with his rigid love stick was too good to wake at that moment. He wished he could stir Lovie for some morning sex but he'd rocked her body for so long the night before he felt bad in waking her. She was already tired from the first night of the McCaffery job and his insatiable need for her delectable body still couldn't hold out over her obvious fatigue. What was supposed to be a full body massage to relax her turned into a three-hour lovemaking session. As long as his sleepy sex kept up like it did, he'd be okay with the wet dream finish like it usually ended. He groaned as he imagined her tongue muscling the underside of his hood. Now it got too intense for even him. He'd have to get up and jack off in the bathroom so he wouldn't disturb her. As he stirred to get up his knee hit something and he heard a plop and, \"Ouch!\"\n\nHe startled himself upright and found a ghost-like sheet rising before he ripped it off. He found Lovie rubbing her head and wiping her mouth of excess spittle. He breathlessly chuckled, \"I thought it was a dream. I'm sorry baby,\" he rubbed her head with vigor until they were both laughing.\n\n\"I decided to be your alarm clock. A fun alarm clock.\" Her eyes drifted back down to his wet semi hard cock.\n\n\"You're not tired?\" That question alone slowly inflated his dick.\n\n\" I know I should be but,\" as she trailed his inner thighs with her feathery touch, her camisole strap dipped off of her shoulder, \"when I'm around you I just can't help myself.\" She met his gaze finally with a wanton glare.\n\nHe was baffled and shocked at how well they synced to each other. She was full of surprises and he was a kid at Christmas every time. He propped his back on the headboard with a pillow behind him for support. \"You want to try something new?\" His voice held a hint of challenge and cemented her decision in the process.\n\n\"A new position?\" She all but gushed as she stripped her boy shorts and top.\n\n\"Something like that,\" his mouth went dry as he eyed her full bosom. Every time he saw those babies he was hypnotized. He had to stay focused so he put on his dominate tone, \"I want you to hover over me on your knees. Face the foot of the bed.\" She looked as if she wanted to ask why but complied anyway. His eyes wandered around her playground of sex while his cock saluted to full attention. Her silky petals shimmered while her ambrosia called for his touch. One hand went to his cock and the other to her parted pussy. While she moaned she closed her eyes for a moment and sagged to the bed. She mustered enough strength and rose again with wobbly arms. She looked back at him and found his bottom lip tightly captured by his top row of teeth and with a strain across his face. She was about to ask if he was okay but the tip of his swollen shaft kissed at her opening. His hand slowly guided his delicate flesh over hers and whistled low when a gush of her cream saturated his head. \"You're always so ready for me my Lovely.\" She whimpered at his use of her name then threw her head to look at him and pushed her hair to the side to get a better view. His glassy eyes melted from the heat of hers when they looked at each other. He looked tormented as he spoke, \"This is called the reverse cowgirl. It allows you control and me access to- Ah...oh my god!\"\n\nHe choked out the last words and before he knew it she was halfway down his steel pipe. Her inner walls contracted around him and her knees went wider. \"I know what this is Quentin. I do watch porn,\" she simpered. When he regained control of his senses again he massaged her swollen folds that had him nestled inside of them. He groaned deep when she sunk down the rest of the way.\n\n\"Slowly,\" he whispered and she automatically lifted painstakingly at a snail's pace. His eyes went to his main attraction, that bubbling brown ass. When she made it to the summit of his dick he swiped his thumb to the moistened shaft and removed any traces of her residue. His other hand went to the heft of one cheek and exposed her puckered hole. As soon as his dampened thumb swirled the opening she stilled then sat up so her back was parallel to his chest and looked to him with apprehended perplexity. He quickly soothed, \"Baby I'll stop if you want me to but I promise I wouldn't ever do anything that I know you wouldn't love.\" She gave him a trusted nod then braced her hands on his knees and bent slightly. It allowed him entrance to her rear and made her booty more pronounced for his ravishing gaze. She looked like something out of the black men's magazines he used to jack off to; only this time she was naked and wrapped around his cock. He reached down and gathered more of her juices and slathered them over her rear's hole. She was staled halfway down his rod once more and clenched. This time he knew it was because she was nervous of the new ass play. \"Sweetheart, it's okay. Just relax and feel the sensations. That's it, just think of my cock sliding in and out of your succulent little cunt,\" Her hips took over as his words shocked her core. He knew she loved when he talked to her during sex so he kept it up as he gained more ground with her asshole. \"My, my, Lovely...you're a quick study. Now I want you to move just your hips. Oh shit baby! That's it...bounce that ass up and down on that dick.\" By this point he had his thumb to the first knuckle and slid it on home once her whimpering pants echoed through the room. That was all he needed to hear to know that she loved it. But he liked a little dirty talk as well, \"Talk to me sweetness. Tell me what you feel.\"\n\n\"I-I feel your dick...\" She breathed harshly as she ground her hips into his and her clit kissed his ball sack. \"It fills me up so good. I love when I'm full of all that big cock.\"\n\nThat was amazing but he wanted to hear about the new thing they were trying. He twisted his digit and she shuddered to her chest, \"And what about my thumb baby.\"\n\n\"Oh it's simply mind blowing Quentin!\" And for a reward he pumped his thumb in and out of her second passage while her rump hopped up and down on his stick. \"Don't stop baby...I'm almost there!\"\n\n\"Never baby, I won't ever stop until you beg me to,\" He fisted her hair like he was about to place it in a ponytail and hauled his chest up to her back. He licked a swirled petal on the back of her neck then pumped into her with his own hips. That triggered staccato sobs from her with each meeting of his thrust. Suddenly she stilled and yelled at the top of her lungs. Louder than he's ever heard her before. It fed his masculine pride to nigh god-like proportions. His thumb jiggled in her rectum and prolonged her orgasm to a marathon time record. He was of course in control of his own climax as she stopped pumping. He drove into her like a madman until the tickle in his balls grew to a burning gnaw. The last shudder of her release triggered his own and he blast one hot rope after another of seed into her intimate strait.\n\nThey slowly moved to a spooning position, all the while their breaths couldn't catch up to their heartbeats. \"Jeez that was incredible,\" Lovie's weak voice was the first to fill the space besides their pants.\n\n\"I told you you'd love it,\" he grinned. She turned to him then placed herself in her self appointed nook of his body and stared at him until he opened his heavy lidded eyes. When he met her gaze he knew she wanted to ask something, \"What?\"\n\n\"Maybe next time...when we do a scene...we could do a little more ass play?\" The way she asked held a hint of bashfulness but her need for pleasure still outweighed the shy.\n\nHis grinned deepened as rubbed the bottom of her lip, \"Oh you can count on it sweetheart.\"\n\n~*~*\n\n\"Heeelloooo, earth to Quetnin.\" Lovie already took a shower after their morning frolic so her change to clothes would be fast. When she came back to the kitchen, she found him lost in thought again, \"are you sure you're okay? Is something else bothering you?\"\n\n\"Yeah I'm fine baby. Really.\" She didn't believe him so she just pursed her lips. Quentin's mind wasn't right after he checked his messages while she was in the shower. He inwardly snorted and shook his head at what he found. All the money he wasted on a P.I. and his brother contacted him instead of the other way around. He hadn't seen him in over ten years, not since the incident with Ana.\n\nAna. His Ana.\n\nHe looked up to Lovie as she chopped up a pork loin with careful vigor. She wasn't anything like Ana but he loved her just the same. Shit, who was he kidding? He loved her way more. A pang of guilt rumbled to an acid reflux of sudden memories, memories that haunted him more than he cared to admit. She was his first girlfriend in the lifestyle and even though he was only 19 flirting at 20, he knew she was special. His brother introduced him to the life at 17 and enjoyed much of the training that he got from his mother's friends. Still, they were all seasoned pros and he wanted innocence, compassion, and understanding all mixed in with the BDSM life. That's where Ana came in. She was a step niece to one of Guy's lover's and they hit it off immediately. At first Guy feigned dislike towards her and it seemed as if he were just jealous, then it soon turned to attraction. He wanted Ana and talked to Quentin constantly of having a polyamorous relationship. Quentin was dead set against it so Guy went down to just some scene play together. Just to ease the riff that was forming between him and his brother he said he'd talk to Ana. She of course wasn't too keen on it but loved him so much she said she'd give it try. After their first time they were all hooked. They set up rules that Ana was only to be penetrated by Quentin and no scenes would be played without him. Soon the last clause was dropped and Ana and Guy did scenes alone, all with Quentin knowing though. It did bother him a bit that Ana wanted to be with Guy and not him sometimes but it was only because he wasn't really into the hard stuff like they were. It never really mattered because Ana always came back to him. Then one faithful day...\n\nHe came in on a scene of Ana being drilled by Guy while she was bound in ropes that twisted her limbs in opposite directions. She had a gag in her mouth and drool pooled around it while tears streamed from her eyes. He probably wouldn't have said anything but one, she didn't look like she enjoyed any of it. Two, he had no idea they were playing a scene that day. In a rage he pushed his brother from her body and undid her gag, \"What the fuck is going on here!\"\n\n\n\n\"Pickle god damnit...pickle!\" Ana yelled her safe word a long with a few other explicative comments. She collapsed to the floor in sobs when her arms were free.",
        "\n\n\"I need answers now!\" Quentin knelt to her broken shivering frame then looked to Guy.\n\n\n\nGuy just smirked as he said, \"she came to me to do a scene. She told me you were okay with it.\n\n\n\nBefore Quentin could look back to Ana she was up and quickly hobbled over to Guy and spat in his face. \"You fuckin' liar!\" She turned back to Quentin with a shaky stance and cried as she explained, \"He pretended to be you. By the time I figured it out he had me tied up,\" she paused to take another breath through a sob, \"I said my safe word over ten times then he gagged me and...and...\" Quentin turned as bile rose in his throat. He walked in on the rest and needed no further explanation.\n\n\n\nGuy just acted as if she just spoke of making a pie for a church picnic and yawned. The anger that welled in Quentin exploded on his brother as he punched him in his jaw. He gathered his hand around his neck and wailed three more punches before Guy looked up with a bloody jeer. In a hoarse whisper he asked, \"you gonna believe a whore like her over your own flesh and blood.\" Quentin loved his twin more than anything but the malicious evil that radiated from Guy set Quentin back with disgust. His brother had problems and as much as he tried, he knew he couldn't help him like all the other times. He carried Ana out and to a hospital and after, the police.\n\nThat was the last he saw of his brother. Even though it never went to trial, his parents almost disowned him while they actually did to his brother. Ana couldn't even stand the sight of him anymore as she said he was too much like his brother. His parents eventually retired early but he knew it was partly because of their shame in the community paired with his mother's anger towards her so-called friends. The years waned and eventually they all stopped talking about Guy. When he would bring it up his mother would either burst into tears or his father would just get up and leave the room. They wanted to forget him and on some levels so did he. It would have made life so much easier, but his loyalty couldn't let him give up on Guy. In the end it was still his brother, still his twin. Still his flesh and blood. He hated him for causing Ana to leave and for her pain but he still loved his brother. He just felt he needed a little help. He wanted to talk to Guy and find out why he did all the things he did. Ever since they were younger he seemed to give everyone a hard time. From his message it seemed like he was willing to finally except that help. If not he'd be prepared to tell him he wouldn't wait for his brother anymore. He wanted things to work with Lovie and that couldn't happen if he was still the same as back then. Quentin hoped to God he was ready to change. He'd find out soon enough.\n\n\"Quentin that's not funny!\"\n\nHe shook his head and his brow tried to run to his nose because he wasn't laughing, \"What?\"\n\n\"You're just looking at me while I'm trying to talk to you,\" she whined, \"I've been asking you if you wanted the pork for lo mein or just for a salad and mashed potatoes tonight and you act like I'm not even here.\"\n\n\"Gosh I'm sorry sweets, I've just been thinking about the business. Lo mein sounds terrific.\"\n\nShe sighed and took her knifed hand from her hip and diced the meat, \"How's everything with the site.\"\n\nHe got up and came over to the island she worked at and slouched over it, \"Not the same since you've been gone.\"\n\nShe eyed him coolly as she dumped the meat in a bowl and began her marinade, \"Well soon you won't even notice because you won't be there either. Have you heard anything from Drew?\" Quentin told her how Eli and he fired Drew on a third strike that involved poor performance but they could tell he knew better. He took the severance and walked out of the office with a door slam. Pretty good considering what could have went down.\n\n\"Nothing yet but Eli says we're in the clear. He says he really doesn't have a leg to stand on.\"\n\nLovie nodded in agreement. \"How's that merger going?\"\n\n\"Fine and I've talked to my guy who's over the gyms and made some arrangements to do some rounds with the most lucrative stores and find out what sets them apart from the others. It'll involve a little traveling.\"\n\nLovie looked up then, \"For how long.\" Her brow scrunched but her eyes were as big as saucers. He couldn't help but smile then. He could read her mind just as well as she could his and she continued with a meek smirk, \"it's just that we just started with the next level of our relationship and it sucks to know it has to stall for two weeks or more.\"\n\n\"No one says it has to stall. I actually need a photographer to take pictures of the layouts of the gyms...soooo got any good recommendations?\" The thought of spending two weeks on the road with each other made them both heat with excitement in every sense of the term.\n\nHer smile turned cocky, \"I heard of a certain new photographer with a buzz around town. I hear she's not half bad.\"\n\n~*~*\n\nQuentin thanked his waitress as she took his order for a second Scotch. Guy was 30 minutes late but that was expected, Quentin sucked down the last of his original order and checked his watch again. He wasn't so much nervous as he was anxious and so this was the reason for his second drink. It didn't help any because when the hairs stood on the back of his neck, he knew his brother was close by. He was just about to turn to see how far away but Guy's large palm slapped on his shoulder, \"little brother.\"\n\nQuentin obeyed the subtle command to remain forward and gritted his teeth at the greeting. \"Only by eight,\" Quentin stopped before he said 'minutes' then cleared his throat as Guy took a seat. He was a bit embarrassed and peeved that his brother still invoked such juvenile and inconsequential semantics from when they were children. He looked to his brother; forever still a badass with his black short-sleeved shirt and black jeans. With his hair much longer than his and a five o'clock shadow, it would be the only things to set them apart. Otherwise it would have been very hard to tell. \"How have you been,\" even though it was Quentin's attempt of ice breaking cordially, his voice was still tight.\n\nGuy's smug smile didn't help matters. It was the same smile he gave when Quentin beat the shit out of him. \"Can't complain.\" His simple answer made Quentin squirm and Guy's sneer grew. When the waitress brought back Quentin's drink, Guy ordered a glass of wine.\n\nThe waitress was obviously attracted to both men so her nervousness took over as she spoke, \"I'm sorry but we're out of that bottle.\"\n\nGuy's intense gaze turned from his brother and to the frail server, \"I saw the bottle on display at the bar when I walked in.\"\n\n\"It's a display...\" she fidgeted from one foot to the other and her already red complexion took on a bloody hue.\n\n\"Then go ahead and charge me for the whole bottle and get another display.\" His tone dared her to dispute him.\n\nQuentin wanted to put the poor girl out of her misery. \"Ma'am, he'll be perfectly happy with the next best glass you have.\"\n\nShe tried to turn away but Guy held her with his comment, \"he doesn't speak for me. Now do as I say...get me my wine.\" The waitress swallowed a lump and excused herself.\n\n\"Always have to bully someone to get what you want.\" Quentin looked to the bottom of his glass as he talked.\n\n\"I just don't take 'no' for an answer, there's a difference Q. Besides,\" he waited as the waitress brought his wine with a shaky hand while Quentin had to thank her for her trouble, \"it's not like you're not going to leave her a big tip to make up for it. You love cleaning up my messes...except for the last time.\"\n\nIt wasn't that he was right but it was more because Guy didn't get it. With a low crescendo whisper to a heated hiss Quentin leaned in, \"that's because what you did was inexcusable!\" He fumed a breath from his lungs and looked around the establishment. He continued when the patrons continued with their lunches, \"Look I didn't come here to fight. I want to help you.\" Guy's brows lifted then he nodded with a mocking air. \"I'm serious Guy. You're my brother and I love you despite your unpleasant ways. I want you home, hell, mom and dad want you home.\"\n\nGuy snorted, \"Let's not Q. Let's not go through this crybaby, 'holier than thou' routine that acclimates me back into your life. And certainly don't talk about mom and dad because I'm pretty sure I'm the furthest from their minds.\" The end of his statement came out cold and hard. \"I don't want your help, I just came here to get your goons that follow me off my back. You haven't been my brother in over ten years, there's no way in hell I'm going to act like nothing's changed.\"\n\n\"Why wouldn't you want to mend this? Why wouldn't you want to be apart of our family again?\"\n\n\"Because none of you ever wanted me anyway!\" Guy's yell made everyone look but unlike his brother he didn't care. He lowered his voice though at Quentin's behest, \"All our lives mom and dad favored you over me. Not a big deal, it made me stronger in spite of it but now to pretend like my whole life hasn't been in your shadow negates everything I stand for now.\"\n\nQuentin couldn't even look at his brother as he spoke. Deep down he knew Guy was right; his parents did favor him. He was the best at everything, while Guy just coasted by. Guy pulled back from the family with each year of their adolescence and their parents seemed to mind less and less. They didn't even bat an eye after high school graduation when Guy announced he wasn't going to college. They even joked about how they didn't have to worry with two tuitions. Quentin couldn't miss the spark of hate and pain in his brother's eyes. \"I know they seem like they don't care but...\"\n\n\"But nothing. Just continue being their golden boy savior and report back to them that I'm dead. That's what they are to me in my eyes anyway.\"\n\n\"What about you and me?\"\n\n\"What about us?\"\n\n\"I didn't treat you like that.\" Quentin left the comment in the air. He knew Guy wouldn't deny that. Quentin constantly tried to keep his brother close to the family to no avail to either side. Yet it never stopped him from making an effort.\n\n\"Yeah I suppose you didn't but at the same time it was only to make yourself look so good against the 'evil twin'.\" Guy knocked back the rest of his wine and leaned back in his chair. He snapped rudely for their waitress and told her to leave the bottle. He was no longer the smug bastard but more of a petulant child that brooded over not getting his bike for his birthday. \"Shit, even you turned on me once pussy got involved.\"\n\n\"Is that was you think?\" Quentin's voice was beyond incredulous, he was flabbergasted. \"What you did was...was...\"\n\n\"Was of no importance then and it certainly isn't now. I've see your new one and I can say that you've definitely progressed and upgraded.\" The arrogant jerk was back with vengeance as he steepled his hands then he moved to the table while Quentin's jaw clicked and he set his glare ablaze. Guy just continued and poked, \"Mmm mmm and what a upgrade she is huh? That beautiful light mocha skin caressing that curvy frame, long hair I know you love to pull when you're taking her from behind. Oh god and that ass...\" He closed his eyes and shook his head as if he knew first hand.\n\nQuentin flew across the table and grabbed Guy by the shirt collar, \"You stay the fuck away Lovie.\"\n\n\"So that's her name? Short for anything? Maybe I can ask her myself.\"\n\nQuentin let go with a shove, \"fine, I'll call off the P.I.\"\n\n\"That's not enough.\"\n\nQuentin looked like he wanted to yell again but he just narrowed his eyes, \"What do you want?\"\n\n\"I want mom and dad's estate in Connecticut, three million in a Swiss account, and three million in a Virgin Islands account.\" Quentin should have been surprised but extortion from his brother seemed to be the next probable thing that he could do. Quentin just shook his head as Guy asked, \"Is she worth it?\"\n\nQuentin finished his scotch and stood, \"It's chicken feed to keep a lowly dog like you away from her.\" With that he walked to the front and gave the hostess a couple of bills for the drinks and the waitress, fully aware that Guy had no intention to pay then left the restaurant without a look back. Any positive feelings he held for his brother he felt slipping away with each step but a dark sadness ate at his insides. He wanted his brother in his life still but not at the expense of his own happiness. He would no longer wallow with Guy in his bane of existence all because he had a severe case of 'mommy and daddy don't love me' syndrome. Knowing now that Guy all but threatened Lovie with bodily harm he quickly went to his phone to call her. He gnashed his teeth as the third ring sounded in his ear. Something in his gut said that Guy was up to something so he had to check on her.\n\n\"Hey baby!\" Her voice, although out of breath, instantly calmed his racing pulse.\n\n\"Lovie...are you okay.\" He tried to keep his voice relaxed but it didn't work.\n\nLuckily, she didn't even notice as she laughed, \"Yeah, I was invited to the reception and the food is fabulous! Oh just a minute sweetie,\" Lovie obviously directed the statement to someone else on her side and Quentin went on alert again as he stopped at his car.\n\n\"Who are you talking to?\"\n\n\"Oh I danced with one of the little junior groomsmen and now the ring bearer wants a dance too.\" Her voice was filled with so much merriment that he decided to wait until she got home to warn her of his brother.\n\nBetter yet, \"Sweetie, are you about ready to go?\"\n\n\"Um, I guess. My job is finished and I didn't want to be rude to everyone but I guess I've had my fill of wedding cake.\" She started to catch the uneasiness in his voice.\n\n\"Okay, tell me where you are and I'll come pick you up.\" He didn't leave room for discussion so she just told him the address and before she could ask if he was okay he continued, \"Stay there Lovie, you hear me? I'll see you soon and I love you.\" He hung up before she could reciprocate out of haste. He jumped in his car and punched in the first three numbers in his GPS but the stench of something strong yet sweet smelling caught him. He looked up in time to make out a blonde figure before it shoved a cloth over his face...then everything went black.\n\nChapter Fifteen\n\nCindy carefully leapt from the back of Quentin's car. Thankfully no one saw her but now was the time for the most delicacy. She had to get Guy to see that her plan was better; her only insurance was in that he had no choice. She carefully walked to the large glass of the restaurant and caught sight of Guy. She tapped on the window until he looked up. He quickly went upright and looked around the restaurant. He dashed outside and jerked her to the parking lot. \"Are you out of your mind! What are you doing here?\"\n\n\"We have to change the plan to tonight.\"\n\n\"What?\"\n\n\"Drew is leaving for L.A. tomorrow morning. His alibi will be locked tight if we don't move tonight.\" She watched his eyes as she darted back and forth and he dragged his hand through his hair.\n\n\"You couldn't call? You better be glad Quentin didn't see you and the P.I. is off today!\" They both knew that but the warning in his tone said he was definitely going to reprimand her later. She nodded but followed his eyes when they latched to Quentin's car. \"You dumb bitch!\" He quickly scanned around as if he looked for a sniper.\n\nHer hands went up as she calmed frantically, \"No no, he's not watching us! He's in the car! I used the chloroform.\"\n\nEven though his relief was evident, he fixed her with a dangerous glare before he went to the car. She tried to explain as he got closer but he was in too much of a contemplative state. His brother was in the driver seat slumped over to the passenger's. Cindy babbled in his ear so much that he snapped, \"God just shut up! I get it...\"\n\nHer mouth went in a line and her blush incensed with anger. For good measure she added, \"And he called Lovie to tell her to stay put until he comes to get her.\" His frown turned to a smiling gleam of debauchery. She could see his wheels turning in his demented head and knew he'd probably have her giving him head while he drove to her doom. He'd even pretend he was Quentin then laugh at her shock and horror when they walked into his place to see he was the twin. Cindy was tired of these bitches getting all her men. She wanted this to go as quickly as possible so she added, \"I can't lift him and what if he wakes up too soon. He'll overpower me. I can get Lovie to Quentin's and I'm strong enough to lift her with ease.\" Guy turned slowly to her and watched her with a guarded look. Cindy's heart slammed against her ribcage as she felt him figuring something out. To deflect, she looked around and said, \"We should hurry.\"\n\n He narrowed his eyes and nodded once. \"Take my car to get her and chloroform her. I'll have everything ready when you come back.\n\n~*~*\n\nLovie stood outside of the reception hall alone. She was so worried by Quentin's actions she decided to wait for him outside. She hoped everything was all right and nothing happened with Drew or something worse. She fanned her palms across her pale yellow wrap dress to rid some of its clamminess. She took another look at her phone to check the time and frowned because it was so late. She called Estelle too but there was no answer. When she put the phone back in her dress pocket she was greeted with a three short honks. \"Cindy?\"\n\n\"Hey Loves, hop in.\" Cindy smiled from the driver side as Lovie moved to the passenger side.\n\n\"Whose car is this?\"\n\n\"It's Eli's.\" Lovie opened the door and examined the interior before sitting in the seat. It just didn't look to be Eli's style. He liked American muscle not foreign.\n\nShe was about to shut the door but stopped, \"Wait, I'm supposed to be waiting for Quentin.\"\n\n\"I know. He told me to come and get you.\"\n\n\"Really? Why didn't he call me?\" Out of habit she went for her phone to check if she bypassed a message.\n\nCindy thought she was going to try Quentin's phone and quickly grabbed for Lovie's hands, \"No! I mean, he said he had something really important come up with the merger and had to see about it as soon as possible.\"\n\nLovie slowly shook her head with confusion, \"No he sounded really worried when I talked to him. Like he was scared.\"\n\n\"Hey don't shoot the messenger.\" Cindy's voice was light again as she tried to play ignorance.\n\n\"But he'd text me or something. Or why didn't you call to tell me?\"\n\nCindy sputtered to search for a good lie then suddenly stopped and glued Lovie with a dark look. \"Just get in the car sweetie and I'll take you to Quentin.\"\n\n\"What's going on?\" With a drastic huff Cindy turned to her purse. It was hidden from Lovie so she continued, \"What are you doing? What's that smell?\"\n\nThe flash of white napkin was all Lovie saw before she tried to turn to run from the car, \"Oh no you don't!\" With a snake's quickness, Lovie was accosted with a small struggle before the smell took over. As she was drifting Cindy said, \"Sorry Loves but I tried to warn you to get out while you can.\" Cindy was able to shut Lovie's door just as someone was walking out of the reception hall and drove away.\n\n~*~*\n\nLovie's eyes faded in and out as her head rolled over her shoulders. Her mouth was dry and she had a splitting migraine. Her sight faded and strained against the light and a far away voice was saying something to her. The more she strained to hear the more her head hurt. At that point all she wanted to do was to close her eyes again. Her head swayed and she straightened to catch herself. All she could hear was, \"Breathe baby...that's it...get some clean air through your lungs.\" The voice belonged to Quentin and she tried to alert herself more to follow him.",
        "She took a deep breath, or as deep as she could considering her condition. Her tiny voice whispered out, \"Quentin?\"\n\n\"Yes sweetheart it's me. Listen to my voice and breathe deep.\"\n\n\"What's happening?\" She started to weakly move against her restraints. Everything started to flood back to her. Cindy! Cindy tied her to a chair!\n\n\"No baby! Don't struggle...\" Quentin tried to soothe her struggling but she didn't stop. They tied her ankles to each of the front legs of the chair with the same thing as her wrists. By the looks of the blood that seeped from her ankles her wrists weren't any better. \"Baby you gotta stop. You're ripping your wrists to shreds.\"\n\nLovie's expression was in panic as she looked up to him. His legs were shackled together with a foot long chain between the two and he was handcuffed to his chair. \"What is this? It hurts.\"\n\n\"I know baby, I think they used fishing line or something then and sharp on you. You gotta stop or you'll bleed out.\"\n\nShe froze in terror but didn't know what was worse, the fact that she may bleed to death or that more people were involved in their despair. \"Who are 'they'?\" Unshed tears sparkled in her eyes and he sighed deeply as he tried to think of a way to tell her.\n\nGuy's entrance made it easier while Cindy walked close in toe. Lovie's eyes grew at the sight of another Quentin. Guy chortled, \"It's nice to meet your too Olivia. Or can I call you Lovie?\" Her tears fell freely as she looked over to Quentin. His eyes darted from her to Guy's as Guy rounded Lovie. She began to pant with fear as he leaned into her from behind. Guy never broke eye contact with Quentin as he sniffed in the column of her neck. \"Feel like sharin' this one bro?\"\n\nLovie couldn't hold her whimper as she cringed away from Guy. Quentin thrashed against his restraints so hard that when he stood he toppled over his legs. The chair doubled him as his handcuffs were looped around the seat's back bar. Both Cindy and Lovie jumped at the sight while Quentin cursed at Guy. \"Leave her alone asshole! Get away from her!\"\n\nWith a ridiculing huff, Guy lifted from his stance and stood in front of Quentin as he squirmed across the floor, \"Look at you Q. You look ridiculous.\" He turned to Lovie who silently cried at the setting. \"He gets so emotional about his ladies sometimes.\" He lifted him to an upright position but it didn't stop Quentin from straining in Guy's direction.\n\n\"Just leave her alone.\" Quentin's voice was low and calm yet his face betrayed his true feelings.\n\nCindy looked at Lovie's crying and pleading eyes. With a sigh she walked over to Lovie's shivering form to check her wrists and ankles. She reached past her to the end table for a glass of what looked to be water and Lovie ducked away. Cindy held it to Lovie's lips but she just moved from it. \"C'mon on sweetie, it'll make you feel better. Help you clear your head.\" Lovie still turned to and fro from the mouth of the glass. \"I swear there's nothing in it...here I'll take a drink.\" Cindy swallowed from the cup to show Lovie she could trust her. \"See?\"\n\nLovie reluctantly took a sip only because she was so thirsty but she never took her eyes from Cindy. When the cup went down she swallowed and said, \"Why?\"\n\nCindy opened her mouth to speak but Guy spoke over her, \"Cindy go get me a drink. I wanna talk to the two love birds.\" Cindy's face was away from Guy so he couldn't see her scowl. When she didn't move fast enough he tore her away from Lovie and pushed her towards the bar section. His rage was barely contained as she stumbled the rest of the way. \"Don't make me tell you again slut!\" He sat in a nearby seat that was in the middle of Lovie and Quentin's chairs. \"If you haven't noticed this hasn't been the most graceful of plans but my associate, if you can even call her such, has nearly fubar this whole situation. I hope you can only sympathize with my plight. To see years of planning down the drain because of a jealous tantrum isn't settling but I think I've picked up the bar pretty well don't you agree?\" He looked between Lovie and Quentin as they looked at him with the most incredulous look they could muster.\n\nCindy crashed ice cubes in a tumbler with an attitude. Guy feigned nonchalance as Quentin spoke, \"Years? What are you talking about?\"\n\n\"I'm talking about watching you and Ms. Olivia for some time now. Since she was in high school.\"\n\n\"I've never seen you in my life?\" Lovie squeaked.\n\n\"No but Cindy has been my eyes mostly. I saw you and knew you'd be the perfect bait for Quentin. Oh and sorry about that little mishap in college.\"\n\n\"What did you have to do with that?\" Lovie choked out the words as more shock set in. Her eyes flew to Cindy as she handed Guy his drink.\n\n\"You were the connection. The one the cops couldn't find.\" Quentin's said through clenched teeth.\n\nGuy stopped the glass before it touched his lips and grinned to Quentin, \"Well honestly they didn't look hard enough but yes it was me. I was going to use the footage as leverage.\"\n\n\"What type of leverage?\"\n\n\"The type of leverage that allowed me to blackmail Ms. Laceton when the time came. Seeing as how you're both going to die now...\" Guy turned his attention solely on Lovie; \"I guess there was no need for that whole debacle while you were in school Lovie. But hey, it gave me jack off material for awhile.\" Guy took a healthy swig of his drink and Cindy finally sat at the edge of the sofa with a satisfied grin.\n\n\"What exactly was you original plan?\" Quentin really wanted to know now. How long had he been watching.\n\n\"Well, quite simply, when I found out you started your porn site and was doing so well I saw the perfect opportunity to move in. I went on a search for the perfect ing\u00e9nue that would seduce you so well she wouldn't even know it. I went through three states until I found her. I hooked up with Cindy here and...\" He stopped and coughed over another sip of his drink. His brows knitted together and he shook his head of a sudden light-headedness. \"A-and she led me to...to...this lovely with a purity that...\" Guy's vision started to blur and he noticed too late that he'd been drugged. He looked up to where Cindy should have been but she was no longer there. He went to the waist of his belt to get his gun.\n\n\"Not so fast!\" Cindy had his gun out and pointed at him but she lowered it with a giggle when she noticed how weak he was. \"Guess there's no need for the theatrics huh?\" Quentin shook his head at the obvious double cross between the two crooks. Guess there really was no honor among thieves.\n\n\"What did you do to me you...b-b-b...\" Guy slurred.\n\n\"Well Guy, I believe that'll be the last time you'll call me a bitch, slut, cunt, or Cinderella. And ask for you two...\" She turned the barrel of the gun lazily to the both of them, which caused them to flinch. \"He's wrong about you having to die but that six million would have to be properly put in the accounts to ensure your safety.\"\n\n\"Is that why you've been helping him this whole time? To get money?\"\n\n\"Oh no this is much more than that. I know I'm not saint but your brother is the devil incarnate. He sniffled me out and had me by the neck the whole time just to get closer to Lovie and in turn, you.\" Cindy's eyes glazed over as the story went on. \"He turned me out and made it so no respectable man would want me. It wasn't his entire fault, I believed him when he told me he loved me. Soon, he let me in on his plan to annihilate you, Quentin. I was so young and dumb...\"\n\n\"Looks like the dumb part is still in tact.\" Quentin couldn't help but taunt her stupidity, especially if she thought she'd get away with any of this.\n\nCindy turned a mercurial eye to him then slowly brought the gun in Lovie's direction. Lovie sobbed through a yelp as she fidgeted through her bindings again. \"What was that you pompous prick? Are you making judgments?\" Quentin's nostrils flared with fear and anger while Cindy walked closer to Lovie and held the barrel to her temple. \"Answer me.\" She glowered but savored the ability to finally have her way.\n\n\"No,\" was all Quentin could get out through his clenched teeth.\n\n\"Fuckin' bitch.\" Guy tried to get up but the drugs took more effect with each minute.\n\n\"Jesus, who's the pathetic ones now? Between the three of you, I can't tell who's worse.\"\n\n\"I was your friend. I defended you.\" Lovie finally found the strength to speak through the madness that was going on. \"If you never wanted this to happen, why did you put me with Quentin at your wedding?\" She had her eyes closed because she couldn't look at the gun that was pointed at her.\n\nCindy sighed and shrugged then lowered the gun a bit; \"Honestly I thought you'd go running for the hills once you found out what we did for a living. I thought your morality would win out against your horniness. I was sure what would end it and I could start fazing you and Guy out. I really did want my marriage to work for a little while...it was going to feel good to know Estelle wouldn't have him again. I'd even convinced myself that Eli truly loved me but I know now that he was only with me to get to your sister.\" Lovie stilled at that admission but Cindy kept talking, \"But I still tried to get you away from him because above it all you were my only true friend. You were so blind to everything I did and you liked me even after what happened. I'm sorry it has to end like this, I really am.\" Cindy looked closer at her friend's complexion and noticed the ashen tone. It was obvious Lovie was losing a lot of blood and wondered if she only nicked one or both arms. She continued to speak as she noticed the small pool of red that was spilling to the floor. \"But you're not so squeaky clean in this as it seems.\"\n\nLovie felt just as dizzy as when she first woke in her chair. Quentin noticed as well, \"Cindy untie her, she's bleeding to death.\"\n\n\"That's the point of it Quentin.\" Her voice jovial as the gun pointed to him. Her attention stayed to Lovie, \"As I was saying, you aren't as innocent as you think Lovie. You or your sister...\" Her tone went brashly vengeful and made Lovie look up to with question. \"That's right. You were always so ready to find out about me and Guy's exploits. On top of your whore like obsession with cock sucking it was painfully obvious Quentin wasn't giving you up or vice versa. I knew you had a little freak in ya.\" Cindy laughed at her common phrase with a harsh tone.\n\n\"God do you have to wring her dry? Just untie her!\" Quentin couldn't watch her bleed to death that way. She stood a chance if she could just get her arms from that position.\n\nCindy shook her head and sighed with frustration, \"Fine. She's too weak to go anywhere anyway.\" As she cut Lovie from her restraints, Lovie set her arms upright on her lap. Cindy slid the tip of the gun through Lovie's bangs, \"I give you an hour maybe two at the most before you're too far gone to save. Buuuuut....\" Cindy turned back to Quentin, \"If lover boy here gets me my money wired before that time, I'll be sure to call the paramedics while I'm leaving.\"\n\n\"What happened to killing us?\"\n\n\"That was his plan,\" she points to Guy's soft panting body. \"I just want the money. This has been a nice experience and all but I'm looking to retire somewhere exotic and rich.\"\n\n\"I'll do whatever you want just call a paramedics for her now, please!\"\n\nCindy smiled as she sat next to Guy, \"I think that's the first time you've ever asked me for anything. And you even said 'please'. I love when the tables are turned. Don't you Guy?\"\n\n\"F-fu-fuck...\"\n\n\"Don't strain yourself, dear.\" She looked to Quentin, \"And you. You never liked me from the beginning did you? You treated me like shit without even getting to know me. I guess in retrospect you were right to not trust me but why? What made you hate me from the beginning?\"\n\nQuentin was about to tell her to fuck off much like what Guy tried to do but he noticed Lovie fumble with her phone from her pocket. He knew it would take her a moment, as the touch screen was slippery with her blood. Her blinks were more pronounced and lingered as she tried to keep awake. \"Honestly Cindy, there was something about you that I didn't like.\"\n\n\"What was it that she had that I didn't have?\" Cindy wasn't saddened but her tone took on a needy timbre.\n\n\"She doesn't make people feel small for no reason or start rumors about others to make herself feel better. She didn't go all fucking nuts for no reason! So in the wake of what's going on right now,\" he lifted his shackled feet. \"She isn't evil like you, Cindy.\"\n\nCindy's jaw clicked before she rolled her tongue through her jaw. She grabbed a throw pillow from behind Guy and walked over to Quentin. With a smirk that didn't reach her eyes she said, \"Why don't I show you how evil I can be?\"\n\nShe moved as if she were going to fire through the pillow on him but in the last second she positioned it at Guy's chest. His eyes widened but he couldn't move. Quentin started to rattle at his cuffs, \"What are you doing?\" His panic stepped up a notch when he heard the click of gun's chamber, \"Cindy no!\" His yell was cut short with the fire of the gun. His eyes went to Guy's blood gurgling cough. Quentin was enlivened by an unearthly fury as his brother's body gasped for futile breaths. Quentin couldn't hold his tears as he cried over Guy's impending death. \"You heartless bitch! You killed him! You fuckin' killed my brother!\"\n\n\"He was planning on killing you and her then taking over your life! Don't act like I'm the Bond villain here! I'm just sealing loose ends.\" It wasn't any solace as he shook with grief.\n\nHe checked Lovie who had a sympathetic glare behind her fragile state. As much as he mourned for Guy he had to stay focused for Lovie. All he had to do was keep Cindy occupied. \"You want a fuckin' medal or something?\" He kept his eyes trained ahead while his voice dripped venom.\n\n\"I'd like a 'thank you'. I was going to kill you both just like Guy was about to do but now I think you two deserve each other. That's if Juliet over doesn't croak from blood loss here. So what do you say Q...\" she paused and leered as his head popped up to her knowledge of what only his brother called him. \"Wanna get that transfer going so there's a chance for Loves to live?\"\n\n\"I need my laptop...it's in my office.\" He was strangely calm as she slowly stepped away. As soon as she was gone he looked Lovie over and noticed her sash to her dress. He spoke calmly, \" \"Sweetie look at me, take off your sash and wrap your arm in it to slow the blood flow\" Her eyes were heavy lidded but she followed his instruction as best she could, \"I saw that you had your phone...did you call 911?\"\n\nShe whispered hoarsely as she tied off her worst arm, \"No...ghost dial...Stel-ly.\" The room went quiet then and he heard Estelle's frantic yells through the receiver.\n\nWithout a care of Cindy hearing he yelled, \"Estelle, call a paramedics!\" Call a paramedics...then the police!\" He annunciated the words and hoped she heard him clear enough. He didn't know if she were still on the line but he kept yelling anyway. He was so panicked and hysterical on the inside but his outside was focused. He was lost in the moment and let his guard down. He only felt the butt of the gun then saw stars. It took him a minute or two to shake it off. When he focused he instantly lost it and sobbed, \"No! Don't...please!\" Cindy had Lovie on the floor with the pillow and gun poised to her head.\"\n\nCindy walked over and kicked him as she said, \"Oh stop crying you big baby! Open your eyes! She's not dead...but she will be if you don't tell me why you were screaming.\"\n\n\"Just get away from her!\" He snarled and she jumped a little before she realized she had the upper hand.\n\n\"Look I know you weren't yelling to get anyone up here because this floor is soundproofed. We both know that.\" Cindy sounded calculated and deliberate as she spoke. When he didn't answer she squinted and started to look around. She looked around Lovie and something shiny caught the corner of her eye. When she looked closer she saw it was Lovie's cell and it was still on a call. She dashed for it to look at who was on the line. \"Fuck!\" She screamed as she smashed the phone. She raked one hand through her hair as she paced. She had her eyes closed and moved her lips as if she were talking to herself. Just then a knock sounded and she froze with horror. Her eyes slammed to his and she moved the gun back to Lovie, this time moving the barrel in her head so hard that she moaned and whimpered. Quentin's blood boiled and coursed his veins with nothing but contempt for this woman. \"Answer the knock...I don't think I have to tell you not to mention our little shindig here.\" Her eyes flashed at him as she cocked the chamber.\n\nThe knock came more insistent, \"Quentin honey?\" It was Havilland.\n\nCindy nodded at him to say something, \"Yeah, Havi...what do you want?\"\n\n\"Can you come to the door?\"\n\nCindy gave him a warning look so he made up a lie, \"I'm on a call...can't it wait?\"\n\n\"Um...well...\" Havi stammered at the door. Maybe Estelle called the office and asked Havi to check. Cindy knew something was up too because she picked up Lovie's limp body, gun and all. Quentin was about to lunge when she presented the cuffs and shackles' keys. \"There seems to be a problem...I have an officer Randall with me.\" Havi's voice was guarded and professional.\n\n\"What problem?\" He rubbed his wrists as she handed him the keys to unlock his shackles.\n\nCindy leaned into him and whispered, \"Get rid of him.\" He could tell she was desperate and scared and he almost laughed in her face.\n\n\"Give it up...it's obviously over.\" She pinned him with a hard stare but the hard knock and the call of the policeman shock alarm back in her eyes. All the while she was moving further back in the loft away from the entrance and around a large column.\n\nThe officer spoke this time, \"Sir there's been a call of a gunshot at this residence. I have to come in to investigate. I do have the right to forcefully enter if I feel probable cause, including your refusal in opening the door.\" When he turned back from the door, neither Cindy nor Lovie were found. He quickly ran to the door to allow the officer in who quickly observed the site then unsheathed his gun, \"What's going on here?\"\n\nQuentin raises his hands in defense, \"She has a gun to my girlfriend's head.\" He nods over to the huge column that the stairs are by.\n\nAs if on cue she came out with Lovie, awake again but dazed. Cindy looked determined yet unsteady as she advanced in the room. \"I just want to get out of here. I want no one to follow me and she won't have to die.\"\n\n\"Ma'am please, lower your gun.\" Officer Randall had a stern yet soothing tone. \"We can talk about this.\" He moved around her in a way that made her have to split her attention from Quentin or him. The officer was smart and darted his eyes to Quentin as if to say 'If you have a chance take it'. So he kept talking as he slowly closed the gap to them, \"Ma'am, I'm sure your very sorry about what you've done,\" and she did exactly what he wanted which was turn the gun to him and before she knew it, Quentin was on her in a flash. Lovie was pushed and stumbled away to the cop. He gently sat her down before he jumped in on Cindy and Quentin's struggle. She was reduced to high-pitched screeches and tears by the time they wrestled to gun from her hands.\n\nQuentin left Cindy with the cop as he cuffed her and went to Lovie's body. He held her close to his warmth with a shaking posture. He looked up to a stunned Havi and yelled, \"Call a paramedics!\"\n\nHavi jumped and answered back, \"Eli did already. They're on their way.\" Quentin just looked back to Lovie as she was hanging on by a thread. \"I can't lose you.\" His voice was mournful and his face scrunched with emotion. \"I don't want anyone else but you.\"",
        "She looked up to him and smiled, \"I'm not going anywhere.\"\n\nHe laughed through his tears as they listened to the faint sounds of sirens. He just stroked her hair and waited for the medics to take over. She reached for his hand and squeezed. It assured them both that they were finally safe to be with one another with no obstacles.\n\nEpilogue\n\nHis mind can't fathom it. He doesn't know if it's because it's his wedding night, a full moon, or something else just as cosmic and unexplainable but he's never taken her body five times in one night. Yet here he is again, stroking his long pole while he watches his gorgeous sleeping wife. She looks like a renaissance sculpture with her limbs tucked over or around her most intimate parts. She still makes the most tantalizing view with her torso upright and her hips to one side. She never looked more true to her nature than at that moment. Demure yet wanton and coquettish with an edge comes to mind as she sighs and reaches for the sheet he held up to take a better look of her. When she can't find it she frowns and moans as she wakens. He's still jacking himself and grins lecherously when she follows suit to his expression. \"Again? She croaks unbelievingly but her body gives way to his shifting weight as she instinctively goes fully to her back.\n\nHe positions his engorged length to her velvety brink before he looks to her lustful eyes. He quirks his upper lip as he sinks his crown to her core. \"I can't get enough of you.\" He moves his hands around her large mounds and feathers light touches before sweeping up to her nipples for a healthy tug.\n\n\"Now you won't have...mmm...to!\" Her voice hitches at the end as he bottoms out in her. After all this time he is still a perfect fit for her and she to him. He rarely goes this deep because he's afraid he will hurt her. Not tonight though. Tonight, she begged for the move until it's second nature.\n\nHe is on his knees so he can fully take her in while he sways in and out of her. \"That's right...you're all mine now.\" He makes one pounding move, a stark contrast to the other long languid strokes. She squeals her delight and waits for the next hard thrust. It's as if she's on a ride that randomly rattles you until you come from excitement, anticipation and desire. He smoothes his hands down her chest to her stomach while he's loses himself in the moment. Her sheath clenches him with an electrified high that feeds his habit of her. He rests one hand on her hip and the other to her sensitive febrile button. Her hips arch into his pumps and he grins when he grips her hip tighter. They're eyes meet because they know what's to come next. He gives her three hard taps that make her grab his forearms. He links the back of her knees to his waist giving him the leverage he needs to pound into her the way she likes. He knows she loves his slow passionate lovemaking but he has a sneaking suspicion that she loves when he takes her like a rutting animal. That's when he lays claim to her body the most. A quick swipe of her lips with her tongue makes him jealous for a taste. With a growl he bends and captures her lips between his. He nudges his tongue deep in her mouth for one of his favorite flavors ever. Her hunger for him matches his for her as she nearly rises off the bed to get a deeper savoring of his mouth.\n\nThe only thing that makes her turn away is her impending orgasm that he's about to cause. She moves her mouth away with a reluctant moan but she's rewarded with her climax. \"Oh Quentin...I'm coming!\" She fiercely whispers this as the other times she yelled the neighbors called front desk to complain. His middle and ring finger slowly move around her nub in a clock motion giving her a sweet stimulation to pair with his strong strokes.\n\n\"Oh yeah, come on my cock baby. Get that luscious cream all over my dick then milk me dry baby...just like that. Make that pussy grab my dick baby.\" He is speaking through clenched teeth at the same time of his hips taking over the majority of his action. Her fiery plummet into rapture makes him want to dive too so his concentration is on his upcoming leap. At the moment of his first spurt he looks in her eyes and witnesses the warmest, sexiest, sweetest flicker in her eye. He speaks through his second jerking spurt, \"I love you.\" He groans out the rest of his crescendo before collapsing on her. His breaths are so harsh they suck her hair to and fro as he nuzzles her neck.\n\nShe reaches up and brushes his hair from his face and continues to stroke softly when she says, \"I love you too.\" He swallows hard at the faint sight of scaring on her wrist and holds her tightly to his chest at the thought of nearly losing her. After that tragic day, they help each other cope with their emotional wounds. He told her of Ana and his strained relationship with his brother, while he helped her tell her parents the truth of everything. In the end they are stronger than ever in their relationship and were able to bounce back considerably easier from all the previous heartache. They still have fears and concerns but nothing they both couldn't handle together.\n\nShe reciprocates the hug with a loaded sigh. He doesn't want to ruin the moment but his conscience gets the better of him, \"Is that a content sigh or worried sigh?\" He rolls off of her and lies on his stomach with his forearms tucked under his head to look at her.\n\nShe goes back in the same position that awoke his desire for her and he lazily blinks with a soft smile tugging his lips. She thinks carefully before answering, \"I guess a little of both. It just occurred to me that if Guy and Cindy hadn't of done those horrible things, we probably would have never met. Not to mention Stelly and Eli being together either.\" There is a thoughtful silence between them as they absorb the information.\n\n\"I guess you're right,\" he concludes as he covers one arm over her to pull her close. \"Maybe it was fate.\" He leaves a hard kiss and lets go with a plop that swells her lips to his liking. She has a dreamy look as she nods in agreement. \"How is Estelle by the way?\"\n\nLovie smiles more to contain a giggle, \"You mean when is Stelly going to say yes to one of Eli's many proposals?\"\n\n\"Well...yes...I mean...no...\" She begins to laugh at his failed attempt to fish for information for his best friend. \"Well babe, you gotta admit that he's asked to marry her a lot of times. Like six or seven now. Once a month since they went public about their dating.\" To be exact, Eli's last proposal was at their wedding reception in front of everyone. Estelle was so mad she left him in the middle of the dance floor for him to run after her. Later in the night they made up but it was still a little strained Lovie could tell.\n\nShe rolls her eyes exasperatedly, \"I know. I asked her about it at the reception and she just wants to wait a bit longer for the 'ink of his divorce papers to dry' as she puts it.\" Quentin snorted as it had been six months and Lovie nodded, \"Tell me about it. I think she's just afraid that they'll both end up being wrong about one another again. I don't know...she's not the most open person when it comes emotions. Always has been, but if it's any consolation to Eli you can tell him that she loves him. I know it for a fact, I just don't know when or if she'll ever marry him.\" She concluded the last part a bit sadly.\n\nQuentin looked down as he thought of his friend. He felt sorry for him because Eli told him how he'd always been interested in Estelle over Cindy and figured the only way to get her out of his system was to marry Cindy. Quentin didn't even have to tell him how stupid it was but Eli figured it was better than nothing when Estelle was still married to her ex-husband. \"What are we gonna do with those two.\"\n\n\"How about we don't worry about them. At least until we're back stateside.\" She kisses him before turning to the tropic breeze that waves the sheer curtains in on the room from the balcony of their suite. \"It's so peaceful here.\" In the background she hears the waves crashing into the shoreline.\n\nHe goes to his end table and pulls a silk scarf from the drawer. Lovie closes her eyes as he massages the edge of scarf over her body. \"Have I ever told you about this reoccurring dream that I have about you?\"\n\n\"No what dream?\" She opens her feline eyes as he runs his hands up and down the length of her arm.\n\n\"It's a dream I've been having that has you at my whim for immeasurable gratifying pleasure in everyway possible.\"\n\nShe begins to pant with excitement as he slips the soft material around her wrist then up to the bedpost. \"For how long?\"\n\nIn his dream it was two weeks but now...\"I haven't decided yet.\" His grin is delightfully dirty as he searches her body with his eyes and hands. Each caress heats her exposed flesh. They hadn't decided when they would return from their honeymoon. The pinnacle of her thighs wept with joy at the prospect of being at his summon when he wanted her. His eyes flitted over her face and a solemn look stole his features, \"How does forever sound?\"\n\nHer eyes glitter from his double meaning. They never thought they'd find anyone that made them as whole as they both did for each other and now they didn't ever had to wonder. Fate saw fit to see them together and now it was up to them to make sure it stayed that way. When they look into each other eyes, they know it's possible. She finally answers when he's millimeters from tasting her lips, \"Forever? I think I can handle that.\" He grins into the kiss to seal their destiny."
    ],
    "authorname": "FallaYourBeat",
    "tags": [
        "bdsm"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/beautician-and-the-beast-pt-03"
}