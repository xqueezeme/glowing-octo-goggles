{
    "title": "Sugar Baby Chronicles: Aimes",
    "pages": [
        "Warning: This is NOT an accurate representation of a sugar baby/sugar mommy arrangement. PLEASE be safe if you're using one of these apps. \n\n \n\n \n\n\"Here's how it works.\"\n\nI looked over the steaming rim of my plastic ramen bowl, the salty flavors dancing on my tongue. It was a little past midnight and my roommate Niko had just walked through the front door, smelling like stale cigar smoke and high-end cologne.\n\nIn her hands was three hundred dollars in cash.\n\nThat wasn't even her full payment\u2014that was only her tip for entertaining a balding old man all night.\n\nI couldn't say I wasn't intrigued by her life. As someone whose diet revolved around the clearance bin at the supermarket and a daily dose of ramen, I could see the appeal of a life where you were taken care of.\n\n\"Give me your phone.\"\n\nBalancing the bowl in one hand, I handed her my cracked and abused phone. It was almost four years old, but changing it wasn't really my priority right now.\n\nShe plopped herself down on our worn blue couch, her slight form barely making a dent in the cushions. Flicking through my phone, she toed off her heels so they clattered on the floor, before raising her legs to the couch, mirroring my cross-legged position.\n\n\"I'm downloading the app on your phone,\" she commented as I slurped, fingers deftly typing in my passcode. We'd been roommates for almost four years; we didn't have any secrets.\n\n\"Seriously, Nik,\" I said around a mouthful. \"I doubt any of these rich old men would want to spend an evening with me.\"\n\nShe raised a pastel pink brow. \"And why not?\"\n\n\"Look at me.\"\n\nWith my free hand, I pointed to the raggedy tank top and boxer shorts that had several holes in it.\n\nShe pursed her lips. \"I know you're not opposed to dressing a little slutty.\"\n\nA burst of color hit my cheeks. \"Only on occasion. Most days I wake up feeling masc.\"\n\nI tugged at the dark curls that crowned my head in a pixie cut.\n\n\"For five hundred a night, you wouldn't throw on a dress?\"\n\nI chewed on my bottom lip, pondering that question.\n\n\"That's what I thought,\" Niko said into the silence.\n\nI tipped the last of the noodles into my mouth, thinking as I chewed.\n\n\"It would be nice to have money. Not a lot, you know. But enough so that I don't have to struggle month-to-month.\"\n\nNiko looked at me over the phone, her painted pout curving into a soft smile. \"I know, sweetie. I know.\"\n\nShe tapped away on my phone, her long nails clacking on the cracked surface.\n\n\"All right, I've got you signed up as Ayme with a y. That ok?\"\n\n\"Uh, sure?\"\n\n\"Have you used any of these pics on socials?\"\n\nShe thumbed through a few she'd selected from my camera roll.\n\nI shook my head; I barely updated those spaces anyway.\n\n\"Good, good,\" she murmured under her breath as she uploaded those pics. \"I don't want them reverse image searching you. People are so creepy.\"\n\n\"I doubt I'll get a match anyway.\"\n\nI downed a glass of cool water to chase away the lingering taste of salt on my tongue.\n\n\"Why do you always talk down to yourself? Have a little faith, boo. There are a lot of lonely people out there who'll pay a hundred bucks an hour to chat a little. Flirt a little.\"\n\n\"But that's all, right?\"\n\nNiko nodded. \"Unless you want more. That's totally up to you. No judgement.\"\n\nI wrinkled my nose. \"With those rich old men that come to pick you up? Um, no thanks.\"\n\nHer dark gaze landed on mine. \"What about a rich old lady?\"\n\nMy eyes widened. \"Like Cate Blanchett?\"\n\n\"Yeah,\" she snorted. \"I'm sure she trolls apps like these.\"\n\n\"You know what I mean,\" I said, leaning over to place my head on her shoulder so I could peek at what she was doing on my phone.\n\nPansexual student in my final year of college. Brown hair, brown eyes. 5'4. Reeeeeeally need a break from my books. Text me! \n\n \n\nI could feel my nose wrinkling. \"I sound like a teenager.\"\n\n\"Some people like that.\"\n\n\"Ugh.\"\n\nAs she hit 'save', I asked: \"Shouldn't I write a little more? My hobbies, what I'm studying, what I love?\"\n\n\"Sweetie.\" Niko brushed her lips across my forehead. \"No one cares.\"\n\n\"Oh. Well. Okay.\"\n\n\"I'm posting pics of you in your masc and femme looks okay?\"\n\nI sighed. \"Sure.\"\n\n\"See, the good thing about this app is that it secures the bookings for you. All sugar daddies and mommies are verified before they're allowed to create a profile. After a date, you get to rate them and they'll rate you.\"\n\n\"What if I get someone with zero ratings?\"\n\nShe made a thoughtful humming noise. \"Then I'll go with you. First rule of being a sugar baby: always pick a crowded place. No dark bars, no corner booths. An open location keeps everyone on their best behavior.\"\n\nI nodded against her shoulder.\n\n\"If they want to give you a gift, what do you say?\" she asked me.\n\n\"Um, thank you?\" I ventured.\n\n\"Wrong.\" She slapped my thigh. The answer is, \"Cash would be great, hehe.\"\n\nI grimaced. \"Can you imagine me saying hehe?\"\n\nShe snorted. \"If you wanna get rich fast, you better get used to it.\"\n\n\"I don't\u2014\"\n\n\"Yeah, yeah, you don't wanna be rich, you just wanna be comfortable. Got it.\"\n\nA little box popped up on my screen: Your profile is live. \n\n \n\n\"Great!\" She handed me the phone. \"Now you can go through the list of available patrons and see which you like best.\"\n\n\"What if it's a catfish situation?\" I murmured, flicking through pictures of what looked like the same middle-aged white man with different names.\n\n\"It usually isn't with this app. But for your first few dates, I'll come along with you, all right? I'll wait outside until you're done.\"\n\nI caught my lower lip between my teeth, nodding as I continued flipping through the screen.\n\n\"God, it's like old man Tinder.\"\n\n\"Yeah, unfortunately.\" She rose from the couch, reaching for the brown paper bag she'd brought home. \"I ordered the Tomahawk tonight, knowing full well I won't be able to finish it. You want some?\"\n\nMy heart warmed at that. I knew she'd done that on purpose so that we could share a midnight snack together. \"Did you think I'd say no?\"\n\nAs she stuck the half-eaten steak on a pan for the oven, I joined her at our little kitchen nook slash study table, piling the books against the window so we'd actually have room to eat.\n\nI continued scrolling absently, my heart plummeting even lower with each unattractive wrinkled face.\n\n\"Hey.\"\n\nNiko's voice made me pause.\n\n\"Are you even looking at those pics? You're not actually dating them. You just want their money. So look at what type of watch they're wearing, the bags they carry. The quality of their clothing.\"\n\n\"This is too hard. Can you just pick for me?\"\n\nI gave her the most hopeful look I could muster.\n\nShe set her manicured hands on her tiny hips. \"You look like a needy golden retriever.\"\n\n\"It's my signature look.\"\n\nShe rolled her heavily winged eyes. \"I bet it goes down well with the ladies.\"\n\n\"I would like to brag, but the answer is no, it doesn't.\"\n\nShe grabbed a bottle of water and sat across from me in the nook. I slid my phone to her.\n\nHer fingers moved silently for a minute before she said, \"Ooh.\"\n\n\"Ooh what?\"\n\n\"You don't get a lot of women on this app. But hmm. No reviews.\"\n\n\"So that means she hasn't booked anyone before?\"\n\nI tried to peek at the screen but Niko was holding it at an angle.\n\nShe frowned a little. \"Her last seen is about a week ago and her bio is empty. But she gets points for her picture, though. Very attractive. She's obviously wearing Tiffany around her neck. And the bracelet looks like Cartier.\"\n\nDespite my earlier hesitance, my curiosity was piqued. \"Let me see.\"\n\nShe flipped the phone.\n\nI gasped. I couldn't seem to keep the air in my lungs.\n\n\"Oh my god.\"\n\n \n\nThere was no way on earth that this was a real profile. It must be some sort of catfish situation. Surely.\n\n \n\nShe wasn't smiling in the picture. It was a candid shot with her staring into a glass of red wine, the city skyline in the background. The setting sun was hitting her profile, bringing out the burnished chestnut color of her skin, highlighting notes of gold across the dip of her neckline.\n\nShe was perfectly polished, from the neutral square-shaped nails to the darkly arched feathered brows. Her hair was pulled back into a tight bun at her nape\u2014not an errant strand in sight.\n\nMy breath seemed to tumble out of my body. \"I don't understand.\"\n\n \n\nNiko's gaze was fixed on me. \"What don't you understand?\"\n\n\"Why would someone like that...\" I struggled to find the words. \"I mean, look at her.\"\n\nNiko flipped the phone back. \"She's very attractive. She has that boss bitch vibe, you know? The strict, no-nonsense bun. Those CEO-nude nails.\"\n\n\"Exactly. This kind of woman can get literally anyone she wants. She could walk into a room and point at the nearest person and they'll trip over their own feet trying to get to her.\"\n\nNiko pursed her lips. \"You have a point. But I mean, what do you have to lose? Let's say hi.\"\n\nMy heart stuttered.\n\n\"What if she doesn't like the way I look?\"\n\n\"Then she doesn't reply or she doesn't pay a deposit to take you out\u2014simple as that.\"\n\nNiko's eyes widened slightly.\n\n\"What, what, what?\"\n\n\"She's online.\" Niko flipped the phone back to me. \"See that green circle next to her profile pic? That means she's online. She wasn't before, though. So she must've seen your message.\"\n\nI tried to swallow past the lump in my throat.\n\n\"Move over,\" I said, joining her on the small bench. \"I wanna see.\"\n\nNiko tapped back into the chat just as three dots popped up.\n\n\"Oh my god,\" we said together, and the little zip of excitement in my belly became an overpowering wave. My breaths were leaving my body in little gusts as we waited, squashed together in the small space.\n\nWhat's your rate\n\n \n\nA question without a question mark.\n\nNiko answered for me.\n\n$150 for the first hour and $100 for each subsequent hour. \n\n \n\nI swallowed, the dry click of my throat echoing loudly.\n\n\"That's a lot,\" I whispered. \"Maybe I should ask for less.\"\n\nNiko shook her head. \"That bracelet she's wearing goes for at least ten thousand dollars. She can afford you, sweetie.\"\n\nIt was too much. Everything inside me tightened, waiting for the rejection.\n\nTomorrow, 8pm, Lava Bar. \n\n \n\nAgain, not a question. Not asking if I was available.\n\nNiko was already typing.\n\nSure, that sounds nice. I'm free.\n\n \n\nThe app chimed, a notification box popping up.\n\n$350 deposited to your wallet by Ananda. \n\n \n\nNiko's brows rose.\n\n\"That was the fastest deposit I've ever received,\" she mumbled.\n\nIs Ananda your first or last name? Do you want me to dress masc of femme? I'm fluid.\n\n \n\nA one-word response.\n\nMasc. \n\nNiko and I shared a look.\n\nOkay, see you tomorrow. \n\n \n\nNo response.\n\nMy heart was thudding so loudly in my ears I could barely hear anything.\n\n\"Sweetie, you okay? Just think about it as paid Tinder.\"\n\nI moistened my suddenly-dry lips. \"None of my Tinder dates ever looked like that. Oh god, Nik. She sounds so scary. What's with the one-word response?\"\n\nNiko didn't seem fazed by that. \"She's probably busy or something. She looks like the kind of person that would plan things down to the very last minute.\"\n\nThe chime of the oven made me jump.\n\n\"Why are you so nervous, sweetie? I told you I'll be there with you.\"\n\n\"I... I don't know. I guess I thought it would be some ugly old man.\"\n\nShe set the phone on the table. \"You know what? Me, too. I'm kinda jealous.\"\n\nI blinked. \"Jealous? Of me?\"\n\n\"Well yeah,\" she said, shooing me off her seat so she could retrieve the steak. \"I've been on that app for months now and I've never found someone half as attractive as her.\"\n\nI opened my mouth to respond but she was still plowing ahead.\n\n\"And did you see how quickly she placed the deposit? Usually I'd have to spend sooooo much time trying to form a connection with them before they cough up.\"\n\n\"So what does that mean?\" I asked, scratching my scalp.\n\n\"She must've liked something she saw,\" Niko commented, reaching for the pan with an oven mitt. The steak sizzled on the sheet, releasing a smoky/peppery scent. \"Seems a little too good to be true, but I'm hopeful.\"\n\n\"$350 for just 3 hours of my time. Crazy.\"\n\n\"Oh yeah.\" She transferred the large steak onto our only serving plate. \"Before I forget, you have to sync your wallet with your bank account, otherwise the app can't pay out.\"\n\n\"Okay,\" I said a little dazedly. Was it really this easy to make money? Then why the hell had I been on a budget for like four years?\n\n\"You know, just a few more dates and you can afford that ticket to go see your mom and grandma in Singapore.\" She sat back down on her bench, pulling apart the steak with her fingers. \"Keep this lady on the hook for a few weeks and you'll be set.\"\n\n\"Yeah, keep it casual.\" Those words left my lips feeling slightly numb. \"I can do that.\"\n\n\"Good, now come help me finish this monster steak. Can you believe he paid $120 for this? Insane.\" \n\n \n\nShe set a large chunk on my plate, but I simply picked at it, wanting nothing more than to reach over and grab my phone from her side of the table and look at that picture again. I must've built it up in my head, glossed over her imperfections... right? Right? \n\n \n\n\"Nik...\"\n\n\"Yes, sweetie?\" she said around a bite of her steak.\n\n\"I'm really nervous.\"\n\nMy palms had started to sweat and I curled them into a fist, setting them on my lap.\n\n\"What time do you finish classes tomorrow?\" she asked, slicing off more of the Tomahawk.\n\n\"Around 4ish. I think.\"\n\n\"Then come home straight after. We'll have a girly day and get you ready for the date. Okay?\"\n\nI tried to breathe through my nose so I wouldn't look like I was panting.\n\n\"Okay.\"\n\n\"There's really no reason to be nervous. She saw your pics and she liked you. Now she wants to get to know you a little, that's all.\"\n\nI nodded repeatedly, sending my curls bouncing around my temple.\n\n\"I promise you'll be just fine. And I'll be right there with you.\"\n\n\"I'll be just fine,\" I murmured, but I don't think I convinced myself with the tremor in my voice.\n\n*\n\nThe Lyft dropped us off about a block down the street from the glass-lined hotel that housed Lava Bar. I glanced at my phone for the twentieth time in as many minutes.\n\n7:48.\n\n\"We're early,\" Niko said, and I didn't have to look up to know she was rolling her eyes at my nerves. \"Stop fidgeting. You look so good even I'm thinking about sneaking a taste.\"\n\nMy cheeks colored at her compliment and I tugged at the dark tweed blazer that hugged my shoulders.\n\n\"You sure it's not too much? Or too little?\"\n\nShe slung her arm over my shoulder. \"You look amazing, sweetie. Just trust me, won't you?\"\n\nUnder the blazer I wore a black mock neck top that set my skin aglow with its contrast. Dark denim and simple boots completed the look.\n\nWe made our way down the block, Niko chatting about anything and everything, her designer purse swinging in one hand.\n\n\"All right,\" she said, stepping into the marble-tiled lobby of the hotel. \"What are you going to do for this \"Ananda\" tonight?\"\n\nI tugged the blazer closed, pulling the button through its loop.\n\n\"I'm going to ask what she likes\u2014her hobbies, her favorite music, where she vacations. I'll let her talk and I'll listen. I'll say, 'tell me more' when she brings up certain topics.\"\n\n\"Mmhmm. What else?\"\n\n\"I'll... flirt.\" I had to force that word out. \"Light touches on her hand or her arm. Tell her how amazing she looks.\"\n\n\"Good, good. If it's not weird, try calling her 'Sweetie' or 'Honey'. I do that with the older guys I go out with and they generally tend to like it.\"\n\nI tried to swallow past the discomfort in my throat. \"Umm... that may not work for me.\"\n\nNiko shrugged, ushering me into a waiting elevator. \"Suit yourself.\"\n\nWe glanced at each other in the mirror that lined the back of the elevator, taking in Niko's little black dress and my dark outfit. In her heels, she was about an inch or so taller than me, and we kinda looked like we were dressed for a date. Or a night out.\n\nI fussed with my curls again, shaking them out with my fingers so they lay perfectly across the right side of my temple.\n\n\"If you could glue those curls to your face, you would, wouldn't you?\" Niko asked, watching me in the mirror.\n\n\"I just don't like it when they move around,\" I admitted. \"My forehead looks too big otherwise.\"\n\nShe raised a brow. \"You know what big foreheads are good for?\"\n\nI backed away quickly. \"No, no, no, no...\"\n\nI couldn't afford to have her lipstick stains on my skin.\n\nShe puckered up her lips, making kissy noises. \"You're lucky we don't have much time.\"\n\nThe elevator doors opened with a hushed slide, leading us straight into the dimly lit restaurant. There was a small queue ahead of us and I glanced at my phone again.\n\n7:58\n\nOh shit. \n\n \n\nIf this line didn't move, I was going to be late.\n\n\"It's okay to make them wait, you know. Draws out the anticipation,\" Niko said, watching me shove my phone down my pants pocket. \"Maybe they'll think you're not going to show up. Or they'll wonder if you walked in, saw them and left.\"\n\nI tugged on my coat again. \"I'm more afraid of a reverse situation happening.\"\n\nShe raised a pink brow. \"If they look at you and leave, it's probably because they're afraid of how fast they could fall for a face like this.\"\n\nI'd long ago understood that accepting a compliment from Niko was like accepting a compliment from my mom\u2014both of them rarely ever saw the worst in people. Even so, Niko's sweet words lit my heart with a warm glow as the hostess asked for our reservation.\n\n\"It's uh, under uh\u2014\"\n\nNiko shot me an incredulous look as I stuttered.\n\n\"It's under Ananda,\" she supplied for me. \"And I'll have a seat by the bar if there are any available.\"\n\n\"Great.\" The hostess scrolled through her iPad and ticked something off her list with a quick flick of her fingers. \"The other party is already seated. Follow me.\"\n\nHer heels clicked sharply on the dark marble tiles as we followed her around a curtained corner and onto an open patio with only four tables. The wind whipped around us, carrying the scent of sizzling meat from the open grill up on a higher deck.\n\n\"Oh fuck, she's real,\" Niko whispered under her breath, her dark eyes cutting across the patio.\n\nOr at least that's what I thought she'd said as blood rushed into my ears, relegating any noise around me to the background.\n\nShe was cradling a glass of deep red wine in her hand, swirling absently as she looked out into the skyline. The warm lighting at each table cast a beautiful glow on her dark skin, caressing the sharp tip of her nose and the rounded contours of her cheeks. Her lips were painted a delicate rose pink, the only pop of color on her dark ensemble.\n\nShe lifted the glass to her lips, taking a small sip, those sculpted curves closing over the rim in slow motion like something out of a movie.\n\nI couldn't feel my hands\u2014could people normally feel their hands?\n\nMy breaths were escaping my lips in tiny pants, my lungs struggling to retain any air.\n\nThen she set the glass down, reaching for the button on her jacket and...\n\nI think the fuse in my brain blew.\n\nSomeone was saying something, but I could barely hear it past the rapid pounding of my own heart.\n\nUnder her blazer was a simple tank top that swooped low, showcasing the swells of her breasts like inviting twin beacons alight under the glow of the individual table lamps.",
        "I felt my lips moving, but I didn't know what I was saying.\n\nThen she looked up, her gaze finding mine in the low light.\n\nI took the final step towards the table.\n\nShe didn't say hello.\n\nNeither did I.\n\nI simply stared, wondering why on earth, how on earth, this woman needed to get on an app to find company and companionship. Hell, I'd lick her boots for free. I might even pay her for the honor.\n\n\"...I'll be at the bar.\"\n\nI felt myself nodding, but I couldn't seem to tear myself away from her gaze, so openly assessing as they raked down my torso, then back up my face.\n\nMy cheeks heated in a flush I couldn't control.\n\nShe gestured to the chair with a slight movement of her chin.\n\nSit. \n\n \n\nI sat, dropping onto the surprisingly plush patio chair with little grace.\n\nShe leaned back, seemingly at ease, picking up the glass again, swirling its contents as she assessed me.\n\nThen she spoke. \"Is that your girlfriend by the bar?\"\n\nI tried to speak but my throat tightened to a bottleneck at the sound of her voice, rich and honeyed like someone used to giving orders. Or having their orders obeyed.\n\nI simply shook my head.\n\n\"You sure?\" she asked, her gaze leaving me for a second. \"She's watching us very closely.\"\n\n\"She's worried about me.\"\n\nShit. My voice sounded like the croak of a drain frog.\n\nA perfectly arched brow rose. \"Why is she worried?\"\n\nI curled my hands into fists in my lap. \"I've, uh, never done this before.\"\n\nSomething shifted in her eyes, darkening in the low light.\n\n\"I noticed you had no reviews.\"\n\nI fidgeted on the chair. \"You didn't either.\"\n\nShe licked her lips, raising her glass to them again.\n\nI cleared my throat. \"So you haven't, um, haven't done this too?\"\n\n\"No.\"\n\n\"Then... why me?\"\n\nThe question brought a smile to her lips\u2014one that could easily be confused as a smirk.\n\n\"Why not you?\" she asked, flashing a row of even teeth.\n\n\"I just... I'm a little confused.\" I looked down at my hands, wondering if I was breaking any of the rules Niko had mentioned earlier. There seemed to be a lot of them.\n\nShe raised that single arched brow. \"Would you like a glass of wine while we sort out this confusion of yours?\"<br ><br >\"Yes, please. And water.\"\n\nShe raised her glass and tapped her index finger to it. Within a minute, an identical glass was set in front of me and the waiter rattled off some rubbish about its origins that went past my head.\n\nAs he waited, I took an obligatory sip that I barely tasted, murmuring, \"Delicious.\"\n\n\"We'll have Evian as well, Richard. Thank you.\" She paused, turning back to me. \"Now, what exactly is confusing you?\"\n\n\"I thought I was being catfished,\" I blurted, and that smirk/smile tugged at her lips again.\n\n\"Why?\"\n\n\"Because.\" I grappled for the right words, but only came up with, \"Have you seen you?\"\n\nShe only made a noise\u2014a cross between agreement and 'go on'.\n\n\"If you don't mind me asking, why do you need the app at all?\"\n\nShe set her glass down, lacing her fingers through one another, the lamplight playing over her features.\n\n\"I don't have time to date,\" she said, tapping her index finger against the back of her hand. \"Swiping through Tinder or Bumble or whatever... that'll never work.\"\n\n\"Are you looking for something in particular?\" I asked, genuinely curious now as I charted the way her lips moved as she spoke.\n\n\"Perhaps.\"\n\nHer gaze lingered against mine for a few moments.\n\n\"Tell me something about you. Ayme, is it?\"\n\nI nodded.\n\n\"I'm sorry, I didn't even get your name,\" I said, taking another sip of my wine.\n\n\"Mira.\"\n\n\"So Ananda is your last name?\"\n\n\"Yes.\"\n\n\"What do you do for a living?\"\n\nThat finger began tapping again. \"I believe I asked you first.\"\n\n\"Oh, well,\" I sipped on the chilled wine, clutching the glass as though I could draw some much-needed strength from it. \"I'm a finance major at NYU, graduating in the fall. I play a lot of video games, particularly RPG. I watch a lot of anime.\"\n\nOh god, was I really sitting at a swanky restaurant telling this woman how much of a weeb I was?\n\nOn her part, she didn't seem to react outwardly to my statement. She simply watched me with those inscrutable dark eyes as my own gaze moved over her face, trying to find one flaw. One imperfection.\n\n\"Mmmm.\"\n\nShe made a humming noise at the back of her throat.\n\n\"I work at Starbucks part-time.\"\n\n\"Are you from the city?\" she asked.\n\nI shook my head.\n\n\"I was born in Singapore\u2014my mother is Singaporean Chinese. She met my dad when he was over there for a business exchange. When I was two, they moved the family to Boston\u2014that's where my dad is originally from. I lived there until I moved out here for college.\"\n\n\"So your parents still live in Boston?\"\n\nI could already imagine Niko yelling at me: Ask about the client's life! Don't talk about yours!\n\n \n\n\"Yes and no. My parents have been separated for the last couple of years. My dad still lives in our old apartment but my mom moved back to Singapore to take care of my grandma.\"\n\n\"That must be hard.\"\n\nFor the first time, I noticed something soft in her gaze, a mellowing of the lines around her mouth.\n\n\"Yes, but wait. I'm supposed to talk about you, right?\"\n\nNow she was amused.\n\n\"I don't know, are you?\"\n\n\"Well, yeah... I'm sure you didn't pay so much money just to hear me talk about myself.\"\n\nA corner of her lips crooked upwards. \"I think your adorable floundering is worth my money.\"\n\nMy adorable floundering? \n\n \n\nSomeone just kill me.\n\nI reached for the wine again, needing something to distract me from the insistent burning of my cheeks.\n\n\"Maybe...\" I cleared the cobwebs in my throat. \"Maybe you should tell me a little about yourself.\"\n\n\"What would you like to know?\"\n\n\"Um, what do you do for a living?\"\n\n\"I'm a publisher. I produce digital magazines for beauty brands.\"\n\n\"Oh.\"\n\nShould I tell her she looked the part?\n\nThe wine was zipping through my body, warming me up pretty quickly even with the insistent breeze. I unbuttoned the blazer and laid it on the back of my chair, knowing that she was watching me, tracking my every movement.\n\n\"Why did you choose the beauty industry?\"\n\nShe cleared her throat, finishing the last bit of wine in her glass. \"It's not something I chose. I got my degree in literature when I was a little younger than you. No one else was hiring except Conrad Media, so I started as a Junior Writer with a pittance for a paycheck.\"\n\n\"And now you're a publisher at the same company?\"\n\n\"Exactly. After almost fifteen years.\"\n\n\"How'd you do it?\" I asked, unable to keep my fascination out of my voice.\n\n\"Ambition, I suppose. I knew what I wanted and couldn't settle for less. I have a tendency to obsess, which is great for the publication, but detrimental to my personal life.\"\n\n\"Isn't that empowering? I envy people who know what they want and go for it. Most days, I can't even decide what to have for dinner, much more what I want to do with my life.\"\n\nSomething shifted in her eyes.\n\n\"So you'd rather have someone make decisions for you?\"\n\nI let out a breath like a deflating balloon, the mere thought of letting go of the decision-making burden easing the tension along my shoulders.\n\n\"That sounds like a dream. It takes the pressure off, you know?\"\n\n\"Do you cook?\"\n\nThe random question made me pause.\n\n\"Uh, yeah. My mom taught me. I'm not professional or anything, but I can cook a lot of Asian dishes.\"\n\n\"Mmm.\"\n\nThat humming noise again, as though she was evaluating my words.\n\n\"Any dietary restrictions?\"\n\nI shook my head and she raised a hand, getting the attention of our waiter.\n\n\"Ask Edoardo to send us anything he recommends,\" she said. \"And a bottle of wine for the table, please. Whatever pairs best with the food.\"\n\n\"Right away, ma'am\"\n\nAs he walked away, I said, \"You come here often.\"\n\nShe nodded. \"I have an account here for client meetings. It's not my favorite spot in the city, but it's high on the list.\"\n\n\"I've never been up here before,\" I said, looking out into the skyline. \"Can't say I'm a 'wine-and-dine' type of person, but I do like to cafe hop sometimes.\"\n\n\"I used to write top ten lists for cafes when I was younger. They all blurred into an indecipherable blob after a while.\"\n\nI tilted the last sip of wine to my lips, leaning back against the chair, feeling my body relax a little more.\n\n\"You talk about the past like it was a long time ago, but you don't look old enough for that.\"\n\nThat brief smirk again. \"I'm fourteen years older than you, Ayme. I remember a time with pagers and answering machines.\"\n\nI shrugged. \"Does the age thing bother you? Because it's nothing but a plus for me.\"\n\n\"Is it?\"\n\nI nodded. \"There's a sense of comfort in knowing there's someone more... I'm losing the word... maybe experienced? Yeah, maybe. It's nice to have someone experienced looking out for you.\"\n\n<br >\"So you've only dated older women before?\"\n\n\"Um, no. Not really. Just women my age. I've been dating on and off for years but it's never really clicked, you know?\"\n\n\"Why didn't it click?\"\n\nI shrugged, thanking Richard as he placed a platter of starters on the table.\n\n\"I think women expect certain things from me. I'm masc, I'm supposed to take the lead on certain things. But I'm not like that. I don't like making decisions, even if it's something simple like where we're going for dinner. I think it irritates people that I'm not as advertised on the package.\"\n\n\"I think you are.\"\n\nHer words made me pause as I reached for a dome-shaped entree.\n\n\"You do?\"\n\n\"I expected to be entertained and I certainly am.\"\n\nI couldn't hide my pleased blush.\n\n\"Okay, then I have an idea.\"\n\nI popped the entree in my mouth, tasting truffle and mushroom. Pretty good.\n\nShe made that humming noise again\u2014I was beginning to realize it could mean many things, but this time, it meant continue. \n\n \n\n\"What if I pretended to be your girlfriend for the rest of the evening? Kind of like roleplaying?\"\n\nA sharp brow rose in my direction.\n\n\"Would that make you more comfortable being here with me?\"\n\nI nodded.\n\nHer shoulders moved almost imperceptibly. \"Sure.\"\n\nI reached into my pocket. \"Hang on a minute.\"\n\nShe watched as I texted Niko as quickly as I could, telling her I was all right and she could go home. I even turned in my chair to wave at her. In response, Niko drained her glass and gave me a thumbs up.\n\n\"I think I don't need Nik on bodyguard duty anymore,\" I said, turning back to my date.\n\n\"Why not?\"\n\n\"You don't seem like the type to kidnap me.\" I popped another tiny entree into my mouth.\n\nShe gave me an odd look.\n\n\"Oh, but if you are, please ask my consent first. Sometimes I could be in the mood to be kidnapped.\"\n\nA flash of surprise flickered across her face before her features changed, softening as a husky laugh overtook the table. I wasn't prepared for how those notes landed in my gut like an unsuspecting punch.\n\nIt wasn't just the laugh\u2014it was the fact that she was laughing at something I said. The very idea that I had the power to make this stoic, stern woman melt into soft laughter... that made me feel invincible.\n\nI felt my spine straighten a little as I reached for the glass of water and took a congratulatory sip.\n\n\"So,\" I said, leaning back against the chair. \"How was your day, my little pumpkin squash?\"\n\nDamn if that didn't make her laugh even harder, the lines around her mouth deepening like a shallow trench I wanted to immerse myself in.\n\n\"You're ridiculous,\" she said with a flash of her teeth.\n\nI shrugged. \"Life's too short for boring ol' nicknames, you know?\"\n\n\"Sure is, sweetcheeks.\"\n\nI pursed my lips, mulling that term. \"I think you can do better than that.\"\n\n\"Whatever you say, sugar tits.\"\n\nI nodded in agreement. \"Now we're talkin'.\"\n\n\"You're not what I expected.\" She regarded me with laughter lingering in her eyes, glimmering like dark cocoa under the lamplight.\n\n\"Neither are you. Well, mostly cause I thought you were a catfish situation.\"\n\n\"I take it there aren't many women on that app?\"\n\n\"Nope, at least according to Niko.\"\n\n\"I think I've seen your friend on the app before,\" she said, idly slicing a wedge of crumbly cheese.\n\nI paused. \"And? Niko is most people's idea of a good time. You didn't make an offer?\"\n\nShe followed that bite of cheese with a sip of wine. \"She's not my type.\"\n\nI moistened my bottom lip. \"Am I? Your type I mean.\"\n\nShe didn't miss a beat. \"Yes.\"\n\nI couldn't help the pleased blush that reddened my cheeks, and I knew she noticed.\n\n\"I don't particularly have a type myself. Niko calls my dating history 'experimental'. I don't really know what I want so I pretty much just trial and error. Mostly error.\"\n\nShe took another bite of cheese, her gaze moving over me assessingly. I fought not to squirm, crossing my legs and keeping them in that position with the sheer force of my will.\n\n\"I'm tired of error,\" I confessed, my gaze on the dark table.\n\n\"What are you looking for, babygirl?\"\n\nI thought she was going back to the game of nicknames, but when I looked up, her eyes didn't hold that hint of laughter.\n\nOh god. She was serious.\n\nShe'd really called me babygirl.\n\nA little burst of pleasure coiled low in my belly and a smile tugged at my lips. Who the hell would've guessed I'd genuinely like a nickname like that?\n\nI reached for my wine to hide the smile that was slowly becoming goofy.\n\n\"I guess I just want someone who makes me feel safe, you know? Someone I don't have to second guess all the time, who accepts me as I am and doesn't push me to do things I'm not comfortable with.\"\n\n\"Partners in your past have made you do things you're not comfortable with?\" Her brows knotted, as though she was irritated by the mere idea of it.\n\n\"Sometimes, yes. I'm not the most confident person, so even the littlest things like sending food back can make me extremely anxious.\" I picked at the fabric on my pants. \"I guess you can see how that would irritate people.\"\n\n\"On the contrary.\"\n\nMy gaze shot up to hers.\n\n<br >\"What?\"\n\n\"Maybe you're more suited to a different relationship dynamic. Perhaps your previous partners were looking for an equal balance of power. But you're actually looking to be taken care of.\"\n\nFuuuuck. She was uncannily perceptive.\n\nI reached for a joke so it wouldn't seem so scary: \"You can just call me a bottom, you know. I won't be offended.\"\n\n\"Are you a bottom?\"\n\nI looked away briefly. \"Yes.\"\n\n\"Does that... Are you... okay with that?\" I struggled to get those words out.\n\nA corner of her lips crooked upwards in a smirk. \"I wouldn't be here otherwise.\"\n\n*\n\nI didn't realize how much time had passed until we were the only ones left on the patio. The constant flow of food and wine and conversation blurred away the hours until it was way past midnight.\n\n\"I believe I only booked you until eleven.\"\n\nMy shoulders lifted in a shrug. \"I don't really care about that.\"\n\nAs Richard returned her credit card, she lifted her napkin from her lap and dropped it onto the table.\n\n\"Let me book you an Uber home.\"\n\n\"That's okay. I'll get the subway. It's not far.\"\n\n\"I'm getting you an Uber.\"\n\nHer voice brook no rebuttals and I let her have her way.\n\nShe stood, reaching for her jacket, and I did the same.\n\nOh wow.\n\nI hadn't realized how tall she was, towering over me in those skinny heels. From this angle, I could step straight into the warm cove of her breasts and press my face into the deep crevice. I wondered if they would part to welcome me then swallow me whole.\n\nOkay, it was becoming blatantly obvious that I'd watched too much anime.\n\nBut it was still tempting. So incredibly tempting. \n\nI had to force my gaze away and shrug into my blazer.\n\nThere were still a few people lingering by the bar and we strode past them to the elevator.\n\nHer hand was dangling by her side and before I could overthink it, I slid mine into hers, stepping close.\n\nShe stared at me, unblinking.\n\n\"I-Is this okay?\" I stammered, wondering if I'd broken another one of Niko's precious rules.\n\nThe elevator doors parted with a ding and she tugged me inside, barely waiting for it to close before she shoved me against the side, taking my lips in one quick dip.\n\nHoly shit. \n\n \n\nI was struggling to keep my thoughts together\u2014the feeling of right, good, perfect taking over the part of my brain that was meant for logical thinking.\n\nShe tasted like deep red wine and the chocolate we'd had for dessert, and I wanted to climb her like a tree and cling to her shoulders... let her do anything she wanted to me.\n\nThe way she handled me, like a toy under her fingers, was making me pulse and ache. It seemed so easy for her\u2014as though she already knew what I wanted. How to touch me, taste me, make me purr under her lips.\n\nThis is what I needed. Someone to take control of my pleasure. Use me. Plunder my lips like it was her source of life.\n\nI needed all of this, and more. More of her.\n\nShe pulled back barely an inch.\n\n\"Book your Uber now, babygirl,\" she murmured against my tingling lips. \"Go home.\"\n\nI made a sound of protest that sounded suspiciously like a whine. \"Not yet. Please.\"\n\n\"Why not?\"\n\nMy fingers found the edges of her jacket, holding on tight. Tugging. \"Will you take me home with you?\"\n\n\"Are you sure?\"\n\nShe pulled back further and a quick zip of pleasure rippled through me at the sight of our mingled saliva on her bottom lip.\n\n\"This is a decision I'm one hundred percent sure of,\" I promised, yearning to press close to her. \"Please kiss me again.\"\n\nBefore she could respond, the elevator doors slid open, intruding on our little bubble.\n\nMy fingers found hers again, tugging her out the small space.\n\n\"Tell me you live close by?\" I questioned hopefully as we hurried out of the lobby, her heels clicking on the hard surface.\n\nShe nodded, fingers tightening on mine. \"Three blocks.\"\n\n\"I don't think I can wait three blocks,\" I admitted as we stepped onto the sidewalk.\n\n\"Be patient, babygirl.\" Her gaze sparked in the dim streetlight. \"I promise it'll be worth it.\"\n\n*\n\nI managed to get a brief glimpse of exposed brick, clean lines and glass, before a single word stopped me in my tracks.\n\n\"Strip.\"\n\nMy breath caught in my throat as she towered over me, the glow of the low-hanging lights in her apartment playing across her face.\n\nI couldn't think, couldn't breathe.\n\nShe was too close, her deep floral scent swirling around me like a cage.\n\nI wanted nothing more than to take a step forward and plunge my face between her breasts, resting there as though they were pillows meant only to comfort me.\n\n\"If you want to leave\u2014\"\n\nI didn't let her finish that sentence.\n\nMy blazer landed on the wood floors with an unimportant rustle, and I relished the hunger that seared in her eyes.\n\nHunger for me. Me. \n\n \n\nThis beautiful woman who could make rows of heads turn in any room was hungry for me.\n\nIt was almost unbelievable.\n\nYet I felt the truth of it in the coiling of my stomach, the sudden desire to appease that hunger. Whatever she asked of me... I'd do it.\n\nWhatever she wanted.\n\nThe top slid over my head, joining the blazer on the floor, and I didn't waste any time shoving my pants down to my ankles and kicking them aside.\n\nEven though Niko said it didn't matter, I was now glad I'd worn my best set of underwear: black briefs with a pink trim and a matching sports bra. No holes.\n\n\"Let me see you.\"\n\nA question that was really a command.\n\nI felt her hand on my waist as she lifted me onto her counter, putting us almost at eye level.\n\nNow it was my turn under the low lights, the amber glow dancing over my skin as lightly as her fingers.",
        "She touched me like I was a doll\u2014a breakable, fragile thing. It was such a contrast to the fire in her eyes that I couldn't help but shiver, clutching the edges of the counter as she took her time.\n\nThe backs of her knuckles found the rise of my collarbones and dipped over my shoulder, down my arm and into the small of my waist.\n\n\"You're beautiful.\"\n\nI barely heard those words, whispered into the semi-darkness, but they resonated in my chest like an unfurling bloom, spreading across my body like a burst of warmth. I trembled under the feather-like onslaught of her fingers, needing a deeper connection, craving so much more.\n\n\"Please.\" My voice was a rasp in the semi-darkness. \"Please kiss me.\"\n\n\"No.\"\n\nIt was the cruellest response, the swiftest denial. It snapped my yearning heart in half and I gasped aloud, reaching for the hand that was exploring my body in those barely-there touches.\n\nShe stilled as my fingers wrapped around her forearm, needing something to hold onto amid these pants and trembles.\n\n\"Did I say you could touch me?\"\n\nOh, she was cruel. Her low, whispered question made my body throb so wonderfully, even as my heart jumped to obey her as quickly as possible. My hand fell away from her arm, and my knees parted like an open invitation, creating a little nook for her between my legs.\n\nPlease come closer. Please, please, please. \n\n \n\nI was begging without words and I knew it, gazing up into her eyes with as much longing as I could muster.\n\nHer lips crooked into a smile before she laughed\u2014just little puffs of air, really.\n\n\"That won't work on me,\" she chided, her fingers now moving across the gentle folds of my belly. \"I'm not that type of lover.\"\n\nOh god, then what type are you?\n\n \n\nI wanted to yell the question but I knew she wouldn't tell me anything until she was ready\u2014I knew it in my gut.\n\nHer fingers trailed along at their own pace down my thigh and I let my head fall back and my eyes close, savoring the lightest of touches as though they were circles against my clit.\n\nFuck, why was I so wet? I was a mess down there and she hadn't even done anything. Hadn't even kissed me like I'd asked.\n\nIf she wanted to build anticipation, she was succeeding. But could one call it anticipation if I was already on the edge, poised to fall over whenever she commanded it?\n\nHer fingers curled under my knee, hooking it up and inward towards my body. I shifted back on the counter a little, making room for my foot right on the edge.\n\nHer deep hum of satisfaction resonated through my body like an aphrodisiac.\n\nThen she leaned forward, running her nose against the curve of my neck, inhaling my scent on a deep breath.\n\n\"I could take you like this,\" she whispered against the shell of my ear. \"I can smell how wet you are.\"\n\nThe breath that left my lips was high and weird.\n\nA whimper. <br >\n\nI was whimpering for this woman, my gut clenching and trembling and heating at the thought of being open to her.\n\n\"Please.\"\n\nWe both knew I wasn't beyond begging at this point, but I made sure to clutch the counter instead of her body\u2014it would be inconceivable if she pulled away now because I overstepped.\n\nHer lips met the dip of my throat and the scent of her hair rose around me like the richest, deepest perfume. Jasmine, I think. Mixed with the tiniest hint of lavender. Such a soft scent for a hard woman.\n\n\"Tell me your limits.\"\n\nMy what?\n\nMy brain was foggy with her scent, her closeness. The way her fingers now gripped my waist, thrumming with urgency.\n\n\"Hmm?\"\n\nI made a questioning sound, tipping my head to the side to allow her full access to my neck.\n\nShe nipped me, deliberately pinching a fold of my skin between her teeth and biting down. Hard.\n\nMy core pulsed and I knew if she kept this up, I'd be leaking out the edges of my briefs.\n\n\"Tell me your limits, babygirl.\"\n\nHer tongue soothed the little bite and I struggled to piece together a sentence, my throat working helplessly.\n\n\"What... what do you want?\"\n\nSoft puffs of laughter against my neck.\n\n\"I don't think you should be asking me questions like that.\"\n\n\"W-why not?\"\n\n\"It could be dangerous... for you.\"\n\nIf words could make me come, I would have been a puddle right at that moment.\n\nI moistened my drying lips, looking into the fierce possession in her eyes.\n\n\"Please.\"\n\nI saw the spark of impatience rush across her face. Hard fingers dug into my waistline.\n\n\"If you don't set your limits, Ayme, I'm going to hold you down and fuck you with my strap.\"\n\n\"Mmph.\"\n\nMy lips parted but no words came forth, just ridiculous little noises that sounded pathetic to my own ears.\n\nHer lips slid across the curve of my shoulder, pressing kisses that were slowed down. Sultry. They lingered against my skin like a heated, hungry reminder of her desire for me.\n\n\"Yes or no, Ayme? I need to hear it.\"\n\nMy body did the thinking for me, sliding forward on the counter and wrapping my legs around her waist.\n\n\"Yes,\" I breathed, mirroring her position and placing my nose against her neck. \"Yes, please. Fuck me. Hold me down. Yes.\"\n\nShe rewarded me with a hand diving into the hair at the back of my head, pulling me away to look into her eyes.\n\n\"You're mine.\"\n\nFor tonight? Or forever? \n\n \n\nMy body didn't care as it quivered, ringing with the undiluted possession in those words.\n\nI leaned forward and dragged my tongue over her lips, needing to taste her again, needing to feel her throbbing against me, feel her lipstick smears on my skin.\n\n\"Please,\" I whispered, and finally, finally, she obliged, her hand unwavering at the back of my neck as she slid her lips across mine, devouring the oversensitive, tingling flesh.\n\nI'd never felt this way before. So free in the cage of someone's arms. My mind was a blank canvas, knowing she'd take care of me, feed every need that was burning through my body. There were no second guesses, no hesitance. I would follow her lead, do anything she wanted, and in return, I knew she would give me everything I needed.\n\nHow was I already used to the taste of her lips? The smell of her hair? The swell of her breasts against my chest? All of it wrapped in such a stern package that was already beginning to feel like home.\n\nI grabbed at the hand around my waist, caressing it until it let go. She pulled away for breath and I entwined our fingers, relishing the contrast of our skin. Mine so pale against her own.\n\nWhen she didn't move away, I raised the back of her hand to my lips, placing a lingering kiss there, an inch or two from that shimmering gold ring.\n\n\"I am yours,\" I whispered against her skin. \"I won't fight it. I won't fight you. You can have me as you wish.\"\n\nShe did the most unexpected thing, leaning forward to lay her lips on my forehead in the chastest kiss I'd ever received.\n\nThen she moved away, just an inch or so, her fingers disentangling from mine to reach for the ties to her wrap dress around the small of her waist.\n\nMy breath caught with an audible hitch as she undid the knot, tugging at the ties that held her dress together.\n\nMy gaze zoomed into the quick movement of her fingers, and her dress parted to the sides, revealing something like a body shaper, black and tight against her chestnut skin.\n\nAs the dress fell from her arms and pooled on the floor with my clothes, I immediately reached for her waist, needing to feel her, but she slapped my hand away, choosing instead to pull the pins out of her hair as I watched.\n\nThis was turning into some sort of strip tease\u2014my body certainly thought so, pulsing so hard I found it hard not to squirm on the unyielding marble.\n\nI counted the pins as she removed them, setting them next to me in a neat pile. It was an exercise that tested my patience sorely; my fingers ached to delve into the band of my briefs and stroke myself as I watched her slow, calculated movements.\n\nI resisted the urge. Barely.\n\nFifteen.\n\nI counted fifteen pins as each one hit the counter with a little click. In my head, I knew the practical purpose of what she was doing. She was letting her hair down\u2014simple, right?\n\nNo. I wasn't prepared for it.\n\nMy body reeled with the depth of the floral scent that swirled around me. It wasn't just jasmine and lavender; it was all of that plus the heated scent of her skin. It plowed across my senses, heady and thick, and I made a sound, unable to voice anything I was feeling.\n\nHer curls tumbled across her shoulders and down to her waist, tiny springs that were oiled into submission. The strands glowed and shimmered in the amber lights and my gut ached to press my nose to the crux of that scent. To breathe it all in and lose myself in her.\n\nThen she turned, presenting me with her back and a taut bow across the middle of her shaper.\n\n\"Take it off.\"\n\nAnother order. Curt, without hesitation.\n\nMy body lurched forward, fingers entangling in the strings and tugging, trembling at the prize that lay just beyond my reach.\n\nThe strings loosened and parted. Before she could deny me, I snuck a quick kiss to the top of her shoulder, before flicking my tongue against my lips to taste her skin.\n\nHer own lips crooked upward in that smirk as she turned back to me, letting the shaper fall to the floor.\n\nA goddess.\n\nThere were no other words I could use to describe her.\n\nShe was by no means a small woman. That was part of her appeal. Her body was soft, so beautifully curved and dimpled around the simple black lingerie.\n\nI blinked and blinked again.\n\nHow the hell had I gotten so lucky?\n\n\"Come here.\"\n\nShe'd barely finished saying those words before I launched myself at her, wrapping my arms and legs around her body and fusing her lips to mine. I felt her chuckle against me, taking my weight fully with her hands under my ass.\n\nI was whispering things to her\u2014things I barely processed before it left my lips and melded to hers. I didn't even notice we were moving until I felt the softness of bed sheets beneath my back. Yet I still clung to her, unwilling to let her lips go even as she tried to pull away.\n\n\"Ayme.\"\n\nMy fake name seemed like a reprimand on her tongue and it sounded so wrong. Too wrong. I needed to hear her say my real name.\n\n\"Call me Aimes,\" I breathed, pulling away not more than an inch.\n\nHer fingers dug into my ass.\n\n\"Did you lie to me before?\"\n\nI bit my lip.\n\n\"My name is Aimee with an i. But everyone calls me Aimes.\" I moved restlessly against her. \"Can we please not talk about this now?\"\n\nShe pinched my ass as punishment and I squirmed trying to get away. But not really. God, I was so conflicted. Why did I relish anything from this woman's hands, even if it was pain?\n\n\"No more lies,\" she commanded, her features so stern and unyielding I found myself nodding frantically.\n\n\"Anything. Anything. Just please.\"\n\nI'd ached for too long. My body was no longer throbbing delightfully; it had tumbled over into tortured pulsing. I pressed the heels of my palms into my breasts, trying to take the ache away, but I felt her move.\n\nHer hand landed on my neck, pressing against the sides.\n\nI froze.\n\n\"Don't you dare, babygirl.\"\n\n\"Hmph?\"\n\nIt was the only noise I dared to make as a titillating type of fear trickled through my veins.\n\n\"Move your hands.\" She watched as I removed my hands from my breasts, mourning the loss of their pressure against those sensitized nubs.\n\n\"Your pleasure is mine. Understand?\"\n\nAnother question that wasn't really a question. She didn't even wait for me to respond. And in a way, she didn't really need to. I was like molding clay in her hands, waiting to be shaped into submission.\n\nBut that didn't mean I wasn't impatient, moving my hips against her. This was taking too long. I'd never recalled sex lasting this long without at least an orgasm. My body pulsed at the thought\u2014needy, restless.\n\nBut I trusted her. I knew she would take care of me. I don't know why I was so sure about that\u2014I just was. \n\n \n\nShe tugged at the band of my sports bra and the next thing I knew, it was flying over the edge of the bed.\n\nMy breasts were small and lay flat against my chest. I'd always been sorta neutral about them. They looked good when I dressed masc but on my femme days I mourned that they didn't fill out my bras.\n\nShe didn't seem to mind. In fact, it was quite the opposite.\n\nHer fingers reached between her breasts, pinching the front clasp of her bra and letting it part.\n\nI stared.\n\nMy eyes were probably wide as a goldfish but I didn't care. I always thought women only had breasts like these in movies. Beautifully curved with a teardrop shape, they were topped with large, thick nipples that were ruched and pouting. My heart sang as I saw that small indication of her desire and within mere seconds, my mouth had filled with saliva.\n\nShe was sitting on top of me, her knees firmly on the bed on each side of my hips. From this angle, it looked like she was about to crush me with the weight of her breasts, and to be honest, I wouldn't mind. If she wanted to suffocate me with those thick nipples, I would die happy.\n\nThe soft pouch of her belly pressed against my tummy as her bra fell away with a little click on the wood floors.\n\nMy hips twitched of their own accord, and I wondered what the hell I could do to hurry this painfully slow process along.\n\n\"Turn.\"\n\nShe gave me enough room to get on all fours, her hands running down the indent of my spine as though I were a skittish animal she wanted to soothe.\n\nHer fingers hooked the band of my briefs and I turned just in time to watch her peel the fabric away from my skin, the wet center coming off with a little extra effort.\n\nI should be embarrassed. Perhaps in any other scenario, I would have been.\n\nBut I heard her rumble of approval as my underwear landed between my knees, her fingers playing over the curve of my ass.\n\n\"Such a pretty pussy.\"\n\nThe words hit me right in the gut, stroking the tension that was already at a peak. I bent low, my elbows hitting the sheets as my knees parted even further in the dirtiest invitation I knew.\n\n\"Please,\" I begged, my voice almost disappearing into a pillow. \"Please just fuck me. I can't take this anymore.\"\n\nIn response, her thumb flicked over my weeping core and I cried out, burrowing deeper into softness around me.\n\nYes, yes, YES!\n\n \n\nGod, please. If she kept flicking me like that, I was going to come. I was already so close. So on edge. Please, just please.\n\nI felt her fingers at the edge of my opening, tracing lightly, dipping in. Toying with me.\n\nI knew I shouldn't have\u2014I knew it but I did it anyway, pushing back onto her fingers and taking them as deep as they would go.\n\nA stinging slap landed on the curve of my ass and I jumped, clenching around those deliciously curved digits.\n\nThen her front was draped over my back, her weight pressing me into the mattress. Oh fuck, she was heavy; why was this so fucking good?\n\n\"What did I say?\" she barked in my ear, her fingers moving deliciously inside me.\n\n\"W-what?\"\n\nI was swiftly losing my ability to process things, my entire being focused only on those fingers.\n\n\"Your pleasure is mine. You will not rush me.\"\n\nThen those fingers were removed from my body and my fingers curled into fists. Her warmth was gone from my back and I heard shuffles in the background. The clink of a harness. The tightening of a strap. The crinkle of a condom.\n\nI didn't dare move; I wanted this too much. My body was frozen in place, fearing that she'd deny me pleasure if I moved a single muscle.\n\nThen her palms were against my ass again, soothing now instead of slapping.\n\n\"You're going to open for me.\"\n\nI nodded on the pillow, arching my back as high as it would go, offering everything I had and a few tears.\n\nHow had she gotten me like this, naked and begging and crying to be taken? All in a span of a few short hours.\n\nMy nails bit into my palms as I felt the tip of her cock push into me.\n\nDon't move, don't move, don't move. \n\n \n\nI ached to push myself back and impale myself on the deliciously ridged silicone, but I forced myself to be still. To take what was offered and not a drop more. Every part of me quivered, fighting to stay upright instead of melt into the sheets in a puddle of surrender.\n\nHer fingers moved under my body to the crux of my clit and this time, I couldn't hold back the jump that slid her deeper into me.\n\nI shuddered, murmuring unintelligible words. Saying her name like a prayer.\n\nWith each pulsing, pleasure-filled circle on my clit, she slid deeper and deeper until I didn't think I could take anymore.\n\nI told her so.\n\n\"You can.\"\n\nShe was right.\n\nI needed something to hold. Something to dig my fingers into so I could maintain some sort of control. Some sort of decency. Because I was rapidly devolving into pathetic sounds and high whimpers.\n\nThen Mira draped herself over my back, seating herself even more firmly within my body. I clenched down on her, muscles rippling as I reached one hand behind to hold on to her neck. Keep her plastered to me as I quivered.\n\n\"I need... I can't...\"\n\nShe moved, pulling out halfway and thrusting back in.\n\nToo full. Too good.\n\nMore tears leaked from my eyes as my lips parted on the pillow.\n\nA sound of surrender.\n\nShe began fucking me in earnest, her breasts slick against the sweat on my back, her nipples poking into my skin as she set a hard, fast pace.\n\nI was whimpering, crying out, holding on to her hair and neck and skin as she pushed into me with savage precision, tilting her hips at different angles as though she was experimenting with something.\n\nI froze when she brushed across that swollen bit of flesh inside me, moving with even more purpose now that she'd found what she was looking for. Her fingers rubbed in circles over my clit as she huffed into my neck, her teeth digging into my shoulder like a brand.\n\n\"You may come.\"\n\nI hadn't even thought to seek permission, but my body burst around those words, rippling on the sweet silicone pressure thrusting into my body so savagely. So sweetly.\n\nI was crying, tears melting into the pillow, a small stream of drool leaving the corner of my lips as I struggled to stay in the present when my mind was drifting elsewhere.\n\nIt was too good, too much. My body struggled to cope as the thrusting continued, pushing me up and over another edge, my scream of surprised pleasure echoing in the large room.\n\n\"Mira!\"\n\nA sob accompanied her name and my fingers dug deeper into her hair, anchoring her to me.\n\nHer voice was warm in my ear.\n\n\"You're perfect. So fucking beautiful.\"\n\nI was ruined. \n\nThere was no other word for it.\n\nShe'd ruined me.\n\nEmotionally and physically.\n\nMy body went slack under her and her thrusts slowed, fingers retreating from the swollen bud of my clit.\n\n\"Mmph.\"\n\nIt was a sound of defeat. Of surrender.\n\nWhatever she'd sought to take from me... it was hers. My tears. My pleasure. My very soul.\n\n\"Deep breath,\" she cautioned, and I shuddered, trying to do as she asked.\n\nAs I inhaled, she pulled out of my body, sliding slowly as her hands stroked my sides in an effort to soothe me.\n\nNothing could prepare me for the wave of emptiness that rolled over me as her heat was removed from my back.\n\nI wanted to open my mouth, tell her to come back, but I couldn't summon the energy.\n\nMy vision was blurry around the edges as I struggled to focus.\n\nShe was gone for what seemed like forever, the sweat on my back cooling rapidly.\n\nI shivered, reaching blindly for the covers but I was lying on top of them.\n\nThen there was a dip in the mattress and I was in her arms again, the familiar floral scent closing around me.",
        "She ran a warm cloth over my cheeks, wiping away my tears and drool, before cleaning up the mess on my thighs.\n\nI should be embarrassed, but I couldn't summon the energy for a blush. She'd seen it all, anyway.\n\nShe'd had it all.\n\n\"Thank you,\" I whispered as she pulled me close, letting my face rest on the swell of her breasts. \"I've never... thank you.\"\n\nMy voice was hoarse. The back of my throat tingled; I belatedly wondered how loud I'd been.\n\nShe pushed the sweat-soaked curls off my forehead, replacing them with her lips.\n\n\"Would you like to stay the night?\"\n\n\"Can't... move.\"\n\nHer puff of laughter warmed my rapidly thudding heart.\n\n\"Give... give me a minute. Then I'll rock your world,\" I promised.\n\nHer lips lingered against my forehead.\n\n\"I'm good, babygirl. Just sleep. Rest.\"\n\n\"But you... you didn't come.\"\n\nI struggled to sit upright, only to be shoved down onto the mattress again.\n\n\"That's my choice,\" she said, pulling me against her, flush with her stomach. \"Now rest.\"\n\nI slung a leg over her hip, burrowing into the pillow of her breasts.\n\n\"Okay.\"\n\nI was more than happy to oblige.\n\n*\n\nMy screaming bladder woke me up before dawn, although I fought it as much as I could. I was too cozy, too comfortable, too warm.\n\nMy seeking lips found errant bits of flesh, pressing kisses to the soft, yielding surface as I grappled with consciousness.\n\nThrough the night, that deep floral scent had somehow become my own, sticking to my skin like a permanent mark of her brand. My eyes popped open at the thought, adjusting to the low light in the room and focusing on her sleeping face.\n\nThe tension in her shoulders and jaw was gone as she breathed against my tousled hair, lips parted peacefully. Her hand was still cupping my bare ass, holding my leg over her hip as she slept.\n\nThere were no covers; we didn't need them. She was warm enough to keep me cozy, inside and out.\n\nA brief glance at the old-fashioned alarm clock beside her bed told me it was a little before six. I squinted at the red numbers and saw an alarm set for seven.\n\nOn a Saturday? \n\nAs gently as I could, I disengaged myself from the web of her limbs, padding across the room naked to the bathroom hidden away past a large walk-in closet. My bladder was insistent and I took care of that as quickly as I could before peering into the large mirror above the sink.\n\nI looked... ravaged.\n\nHoly shit. \n\nMy hair was a tangled mess of curls atop my head but that wasn't what caught my attention. No, it was the redness of my lips, the swelling of their sensitized curves... and the obvious bite mark on my shoulder.\n\nMy fingers ran over it, the red mark stark against the paleness of my skin. I'd always been one to bruise easily, but never had I thought someone would temporarily mark my body like this. Never thought anyone would want to.\n\nThe mark would fade in a couple of days, but I doubt the memory of it, the feel of her huffing against the back of my neck as her weight held me down and she pounded into me... I doubted it would ever leave the black box in my brain.\n\nIt would be a permanent fantasy I reached for on days I needed a quick release with my own fingers\u2014this I knew for certain.\n\nMy gaze rose from the mark on my shoulder, pausing as I saw the smile on my face. Sleepy, yes. But also satisfied. Contented.\n\nI'd never seen that look on my face before.\n\nMine. \n\n \n\nMy breath hitched at the memory of that word, breathed hotly against my skin. She was so clear about her intentions that I hadn't even stopped for a single moment to doubt her words.\n\nI assumed she'd meant I was hers for the night... and while that was okay, I wondered if there was a way I could convince her that I was worthy of more than just a few stolen hours.\n\nThere were a couple of shirts hanging on the back of her bathroom door and I selected one, pressing it to me face for a quick whiff before I pulled it on.\n\nIt was a shirt made from thick cotton but it hung on me so loosely that one shoulder was bare\u2014the shoulder with her mark on it.\n\nOh, there was that smile again. I couldn't seem to help myself.\n\nThe cabinet under her sink yielded a large bottle of mouthwash and I swilled the morning breath out of my mouth, using a piece of tissue to wipe my teeth clean. I couldn't find any extra toothbrushes meant for guests\u2014or even a spare one for that matter\u2014and my mind was quick to deduce the fact that Mira might not entertain overnight guests very often.\n\nGood. \n\nMy fingers ran over the red mark again, shivering at the possessive bite.\n\nWarmth swirled in my belly as I padded back to the bedroom, watching her sleep for just a minute. Or ten.\n\nNo one was really counting anyway.\n\nThe clock blinked 615.\n\nMy tummy growled, resounding loudly in the dark room, and I retreated to the living area so I wouldn't disturb her.\n\nAs I made my way to the kitchen, I shook out the clothes I found on the floor, laying them out on the back of a stool. Then I stacked our shoes by the doorway so they wouldn't track any dirt onto the polished wood floors.\n\nThere was a fancy coffee machine taking up prime space on her kitchen counter, set to Latte, single shot, large. The barista in me made note of that order as I slid a new pod in, letting the coffee drip into its assigned mug.\n\nAs the machine worked, I peered into her fridge.\n\nHuh. \n\n \n\nTwo eggs. A tiny bit of 2 percent milk. Some really good cheese with French words I didn't understand. And a few takeout boxes that were due for the bin.\n\nI withdrew the eggs and milk, placing them on the counter, wondering if she had any bread for french toast. There was none in the small dry pantry\u2014although that search unearthed a whole row of spices with the seal still on the bottles. I palmed cinnamon and vanilla sugar, placing it next to the wet ingredients.\n\nWell, if she didn't have any bread, maybe I could make an omelette instead...\n\nI finally found white bread in the last place I thought to look: the freezer. It was well past its 'use by' date but it looked like it had been frozen before it went bad. I pried several slices from the loaf and slid them into the toaster to defrost.\n\nThere was a tune on my lips, although I didn't know what song it was. I hummed it as I worked, mixing up the ingredients to make a sweet custard bed for the bread.\n\nI didn't let the toaster go for too long\u2014I wanted the bread to be dry, not toasted to a crisp.\n\nI planned everything out just as my mother used to on lazy Sunday mornings: pan on medium heat with a little butter melting in it. Bread soaking in the custardy mixture.\n\nThe kitchen/living room began to smell like cinnamon and vanilla and buttery goodness. My stomach spoke up, growling loudly in anticipation.\n\nI hummed to myself, sipping on black coffee, setting each piece of bread in the pan to sizzle with a knob of butter. That was really the trick to the best french toast: never skimp on the butter.\n\nBy the time the last crusty toast was stacked high on a deep blue serving plate I found, I heard the alarm go off in the bedroom.\n\nI quickly switched the coffee machine setting back to a large single shot latte and let the machine run.\n\nBy the time she appeared from the corner of the bedroom, I'd laid out the plates and cutlery for breakfast.\n\nHer hair was gloriously puffy, like a halo around her body. She'd opted for a dark green jewel-toned robe that looked like silk against her dark skin. I think I had a goofy smile on my face, watching her blink sleep out of her eyes.\n\n\"You're still here.\"\n\nIt felt like my heart dropped to the pit of my stomach. I felt the smile fade from my lips as I stammered... \"Oh. I-I could just go. If you want. I'm sorry.\"\n\nA frown marred her brows. \"Did I ask you to leave?\"\n\n\"Well, no, but...\"\n\nI tugged at my curls, wanting nothing more than to take a step forward and let her kiss me good morning. My lips were already tingling. Yearning for it.\n\nShe cleared her throat, knotting the robe more securely around her waist.\n\nHer voice was uncharacteristically soft as she said, \"I thought you'd already left.\"\n\nOh. Ohhhhh. \n\nThis time, I didn't resist, stepping into her arms and going onto my toes to press my lips against hers. I felt her grip on my waist, tightening on my shirt and pulling me closer. Her lips seemed to cling to mine, sliding against them over and over until I forgot what it felt like to breathe.\n\nShe tasted like mint and sex and warmth and I wanted to curl up on her lap and sip at her lips like it was fine wine.\n\nI'd initiated the kiss but she quickly took over, sliding me onto one of the bar stools so she could grip my face between her hands and slide her tongue over mine.\n\nMy fingers landed over hers, back arching like a bow as I melted into her touch.\n\nWhen she pulled away, her chest billowed under that silky robe and I let out a little noisy puff of yearning.\n\n\"Good morning,\" she said, her fingers turning into a caress of my cheeks.\n\n\"Morning.\" I turned to press a kiss into her right palm.\n\n\"Did you sleep well?\"\n\nI tilted my head, assessing her question. \"Considering the fact that you pounded me until I passed out, I would say yes, I slept very well.\"\n\nHer surprised laughter warmed my soul.\n\nShe looked so beautiful this way\u2014face stripped of makeup, hair wild around her shoulders. Laughing at something I'd said.\n\nHer fingers ran over the mark she'd left on my skin.\n\n\"I didn't mean to do this.\"\n\nHmm.\n\n\"I think on some level, you did.\"\n\nShe didn't object as she traced the red skin.\n\n\"It won't happen again.\"\n\nI pouted. \"Well, why not?\"\n\nSurprise was evident in her dark eyes. \"You like it?\"\n\nI licked my lips, considering my words. \"I like what it represents.\"\n\nMy words echoed around us as her fingers stilled on my skin.\n\nNeither of us spoke for a minute that stretched out like warm taffy.\n\nThen she cleared her throat, letting her fingers fall away. I almost leaned into her, following the direction of that warmth.\n\n\"Not a lot of people wake up earlier than I do on the weekends,\" she commented idly.\n\nI shrugged, reaching out to play with the knotted ribbon on her robe. \"My body clock is pretty messed up. I'm usually up at odd hours gaming with people across the world.\"\n\n\"Ah.\"\n\n\"I made french toast.\"\n\n\"I'd be blind not to miss this huge stack of carbs. Are we entertaining guests I don't know about?\"\n\nI glanced at the plate. \"It's only eight slices.\"\n\n\"Only?\"\n\nShe looked appalled. I wondered how she'd react if she knew I could scarf all of this down in minutes.\n\n\"Why don't you sit?\" I said instead. \"I'll get your coffee.\"\n\nShe shook her head. \"I'm quite specific about my coffee.\"\n\n\"Single shot large latte?\"\n\nShe paused. \"How did you know?\"\n\nI tapped at my temple. \"I can read minds.\"\n\nShe raised a sharp brow.\n\n\"Fine, fine. I noticed the setting on your machine,\" I confessed, pressing my fingers into her waist. \"Sit, please. Let me serve you.\"\n\nShe settled onto the high bar stool, leaning forward to rest her elbows on the counter.\n\nAs quickly as I could, I placed the steaming cup of coffee in front of her, as well as two warm pieces of eggy toast.\n\n\"So,\" I asked, downing the last of my cold coffee and rinsing the mug in the sink. \"What are you up to today?\"\n\n\"Work.\"\n\n\"It's a Saturday!\" I protested.\n\nThat vague humming noise again. \"I rarely stop working.\"\n\nI dried my hands and leaned over the counter. \"You weren't working last night.\"\n\nHer brow rose. \"That's 'cause I had someone to keep me occupied.\"\n\nI plucked a slice from the platter and folded it in half. \"Well, how about I keep you occupied tonight? I have a shift in a couple of hours but I should end by six-ish.\"\n\nShe stared at me for just a second, before nodding. \"Okay. Where's my phone?\"\n\nI'd hung her little shoulder bag over the back of the bar stool but it was now piled with our discarded clothes.\n\nStuffing the edge of the toast into my mouth, I wiped off my hands and ruffled through the pile to retrieve her bag.\n\nThen I slid the stool a little closer to her and hopped onto it so that our shoulders brushed as we ate.\n\nShe thumbed through her phone for a minute as I got to work on the pile of french toasts. They were pretty good, given the frozen origins of the bread. The fancy vanilla sugar was definitely the star of the show\u2014I wonder how much it had set her back.\n\n\"So how many hours should I book you for tonight?\"\n\nThe question was so swift, so unexpected. It cut through the sweetness in my mouth.\n\nI jerked away as though she'd slapped me. And to be perfectly frank, my heart was starting to hurt as though she had.\n\n\"W-what?\" I stammered, struggling to swallow the bit of toast in my mouth.\n\n\"For tonight,\" she repeated, fingers tapping on the phone. \"How much do you want?\"\n\nI could feel my face twisting, heating, the words tangling on my tongue.\n\nUnder my borrowed shirt, my chest billowed as a sharp burst of anger lanced through my gut.\n\n\"Are you deliberately trying to hurt me?\"\n\nThe words were ripped from my lips. Tight, tense.\n\nShe looked up, surprise evident in those deep, almost-back depths.\n\n\"Aimes.\" Her tone was rational. Reasonable. I hated it. \"This is our arrangement.\"\n\nMy fingers shot out, grasping her phone and setting it aside.\n\n\"Did you really think we did what we did last night because of this... arrangement?\"\n\nMy heart thudded dully as I said it. She couldn't have such a low opinion of me\u2014surely, she couldn't.\n\n\"Well, yes.\"\n\nDon't cry, don't cry, don't cry. \n\n \n\nI tried to swallow away the thickness in my throat, letting my gaze drop to the counter.\n\n\"Aimes...\"\n\nHer fingers reached out as though she meant to touch me, but I bolted straight out the chair, reaching for the clothes I'd draped over the back of it.\n\n\"I have to go,\" I said between numb lips, tugging on my pants. I couldn't remember where my briefs had gone; I didn't really care. All I knew was that I couldn't be here anymore.\n\nShe slid off her seat as well, a fierce frown on her face. \"I think I'm missing something here.\"\n\nI jerked the top over my head.\n\n\"Stop,\" she ordered.\n\nI hesitated for just a moment before I reached for my blazer.\n\nAn irritated growl hit my ears a second before I was in her arms again. She pressed me into the counter, one hand holding onto my chin so I would meet her eyes.\n\n\"Let me go.\"\n\nThere was no use fighting her hold\u2014I didn't have it in me. But her touch felt different now with the knowledge that she'd thought I'd slept with her only because she'd paid me.\n\nI'm nothing better than a prostitute to her. \n\n \n\n\"I think there's been some miscommunication.\"\n\nDamn her.\n\n \n\nDamn her for being so formal and put together when I was falling apart inside.\n\n\"Please... please just let me go. I can't be here anymore.\"\n\n\"Tell me why and I'll do as you ask.\"\n\n\"Because.\" The word burst from my lips. \"I didn't sleep with you 'cause you paid me. And everything inside hurts because you think so.\"\n\nHer grip on my chin gentled, wiping away the tear that had tracked down my face without my knowledge.\n\nShe said nothing so I continued. \"I-I'll return your money. It never felt right before... and it doesn't feel right now.\"\n\n\"It's yours. Keep it.\"\n\n\"But what does that make me, huh?\" I challenged her, trying to wiggle away. But she held me still.\n\n\"Aimes.\" Fuck, why was her voice so stable when I felt like I was falling apart. \"In my position, what would you do?\"\n\n\"Ask me what I want. Not assume I'm some kind of... whore.\"\n\nHer fingers now brushed through my tangled curls. \"All right, babygirl. What do you want?\"\n\n\"You,\" I whispered. \"I want you. As stupid as that sounds... you're way out of my league and so beautiful my heart aches to look at you. But I can't help what I want.\"\n\nHer head tipped to the side, assessing me like an anomaly she couldn't quite decipher. Couldn't understand.\n\n\"Have you thought this through?\" she asked, running her thumb over the sharpest point of my cheekbones.\n\n\"No,\" I said bullishly. \"Clearly, I haven't.\"\n\nHer lips pressed into a thin line. \"The reason I'm asking is because I'm difficult, Aimes. I like things a certain way. There's a reason why I've been single for so long.\"\n\n\"What kinda way?\" I sniffled, feeling my nose tingle with the range of emotions that were flowing through me.\n\n\"I always need to be in-charge. I don't like back talk. I spend too much time at work. I can be distant.\"\n\nMy brows rose.\n\n\"And that's just a start.\"\n\n\"B-but...\" I paused to moisten my lips. \"If you're self-aware enough to know all these things, surely you can work on it?\"\n\nA puff of laughter. \"I like the way I am. I'm difficult, but I'm me. I'm not going to change myself for someone to like me.\"\n\nHer lingering touch on my cheek was starting to tingle.\n\n\"Mira?\"\n\n\"Hmm?\"\n\n\"What if I told you I already like you?\"\n\nThat feathered brow rose a notch. \"After one night?\"\n\nI felt twin pinches in my cheeks as they heated. \"Especially after last night.\"\n\nShe shook her head. \"You don't know what you're in for. I'm not joking when I say I'm difficult.\"\n\nI bit my lip.\n\n\"Maybe... maybe I'm being rash. But last night, I got this feeling, you know. That you'll take care of me if I let you.\"\n\nI let my gaze drop, unable to meet her eyes.\n\n\"Is that what you want? Someone to take care of you?\"\n\nShe placed her thumb into the tip of my chin, pressing in. I could feel my bones trembling, battling to get closer to her. Lean into her touch.\n\nI nodded instead. \"But I want to take care of you, too. I want to cook for you, make you laugh. Keep you happy.\"\n\n\"I haven't been happy in a long, long time.\"\n\nShe said those words quietly. Like a soft realization.\n\nI gently touched the fingers that were tethered to my chin.\n\n\"Maybe... maybe I could try.\"\n\n\"It's not going to be easy.\"\n\nI pressed a kiss into the cup of her palm, meeting her gaze as I said, \"It's never going to be easy until you let yourself be loved, Mira.\"\n\nMy words took her by surprise, if her widening eyes and furrowing frown were any indication. She leaned into me slowly, pressing me into the hard counter so that my breath left my body in a long exhale.\n\n\"Are you sure you want to try this?\" she murmured, her lips a mere inch from my own.\n\nI nodded, raising my head to hers.\n\n\"I want to make you happy.\"\n\nThe soft pad of her lips found the center of my forehead, brushing a chaste kiss against it.\n\n\"I must be crazy to consider this,\" she murmured against my skin.\n\nI shook my head.\n\n\"Deep inside, you know we feel right together. Otherwise you wouldn't have even bothered with me.\"\n\nShe leaned back to stare into my eyes.\n\n\"You're very observant,\" she commented, sounding a little breathless.\n\n\"I am. When it's important.\"\n\n\"So, how is this going to work?\"\n\nI shrugged. \"We could, you know, date?\"\n\nThat thoughtful humming noise again. \"But I'd still like to provide for you. Financially or otherwise.\"\n\n\"That's really not necessary. I'll pull a few extra shifts a week to try and make up the money for the plane ticket to see my mom. It'll be fine. Really.\"\n\nShe frowned. \"I have enough miles to get you a free ticket, Aimes. It won't cost me a cent. If you want, you can pick up extra shifts, but in the weeks leading up to finals, I don't want you splitting your time between work and studying.\"\n\nThat seemed all right.\n\n\"Deal\u2014wanna shake on it?\"\n\nHer lips feathered kisses across my hairline. \"I had something much more satisfying in mind.\"\n\nI hopped onto the counter before she could say anything more.\n\n \n"
    ],
    "authorname": "KillerRomance",
    "tags": [
        "lesbian",
        "wlw",
        "ff",
        "love",
        "not real life"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/sugar-baby-chronicles-aimes"
}