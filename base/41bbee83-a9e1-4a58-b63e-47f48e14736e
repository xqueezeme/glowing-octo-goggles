{
    "title": "Temptation Abounds Ch. 02",
    "pages": [
        "This is a continuation of Temptations Abound Ch. 1. On a long weekend at a friend's lake house, Joel finds himself with three beautiful women who do not seem to worry about being naked. Although there is a promise of sex everywhere he turns, Joel is hesitating. Barbara, his fantasy woman, is married to his best friend, although their marriage is in trouble since Barbara caught her husband fooling around. Ruby, Barbara's friend and co-worker, is a tall, beautiful red head and is pushing Joel's buttons. He worries about becoming intimate with her since she and Barbara have been lovers. Finally, Sheila, is Barbara's sister-in-law. She was shocked at her brother's infidelity to Barbara. She also has harbored a long-time crush on Joel. Now that Jim, Barbara's husband has left the lake house, Joel must navigate the turbulent waters that are being stirred by these attractive women. The story picks up after Barbara and Joel have a direct talk while she sunbathes topless on the lake house deck. They now are awaiting the return of Ruby and Sheila from inside the house.\n\n*****\n\nAlmost on cue, Ruby and Sheila reappeared on the porch, carrying what looked like gin and tonics. Their bare breasts moved in syncopation with each step. Ruby handed Barbara a tall glass wet with condensation.\n\nBarbara took it and passed the cold glass over her nipple. \"Aah, that feels good.\"\n\nRuby reached out and pinched the now hard nub. \"I like them like this.\"\n\nThe two women smiled and looked at me. \"I'm going inside,\" I said. \"You guys are driving me crazy.\" \n\n\"Wait a second, Joel,\" said Sheila. \"Hold these.\" She handed me two drink glasses. Grinning, she eased down her bikini bottoms. I just stared at the narrow strip of dark hair above the tight, small lips, wondering if I could even get my cock inside them. I was brought back to reality as Sheila took one drink back and walked to the lounge chair next to Barbara. She reclined, letting her legs part slightly and a bit of pink inner lips showed. There was no way I could disguise the bulge in my shorts, so I didn't even try.\n\nRuby then handed me her drink and shed her bottoms. In the daylight the sun revealed a gallery of different shades of red in her thick bush. I could clearly see her thick lips. Like Sheila, she retrieved her drink and took a lounge. As she adjusted the back, her legs straddled the front part. Her lips spread open and her inner lips appeared. My mind jumped to the thought of Barbara burying her face between those white thighs and feasting on that lush treasure. Being a guy, my mind quickly re-imagined me with my tongue running along the plump lips.\n\n\"Give me your drink, Joel,\" said Barbara. \n\n\"Why?\"\n\n\"I think you'll need two hands to take my bottoms off.\"\n\nRuby and Sheila chuckled. Slowly I handed my glass to Barbara. I knelt beside the lounge and slipped my fingers along her hips. She raised her fanny and I pulled the small piece of clothing down her legs. Her soft blond curls appeared as I removed her suit. I thought it was the most beautiful sight I had ever seen. She smiled handed me my drink and laid back. She ran her hand across her boobs, down her stomach and across her pussy. As her thighs parted, she slipped a finger between her lips and slowly drew it back up, and then repeated this motion several times. I could see the wetness on her fingertip as she held it out to me.\n\nI was torn between desire, not wanting to encourage her teasing and wondering what the two other women would think. Recalling the taste of her sweetness from that day in the park, I stared at the proffered finger.\n\n\"God, Joel, if you don't take it, I know someone here who would,\" Ruby said.\n\n\"Make that two someones,\" said Sheila.\n\nI moved my mouth to her finger and Barbara slowly slipped it inside. The taste was even better than I remembered. Calling on all my strength, I held back the orgasm straining for release. I straightened up and drank half of my gin and tonic in one long gulp.\n\n\"I'm going inside,\" I said, \"Before I go crazy.\"\n\n\"But, you haven't greased us up,\" said Barbara with a pronounced pout.\n\n\"I can't. Sorry. You'll have to take care of yourselves.\"\n\n\"I like that idea, too,\" said Sheila. \"Ruby, can you do me?\"\n\nAs Ruby moved next to Sheila, she squirted lotion on her boobs and began to rub it in, Sheila cooed with delight. I finished my drink and went inside. I made a beeline to the bedroom recently vacated by Brad and Janet and had my shorts and boxers off before I hit the bed. My hand flew up and down my erection and I came with volcanic power in under a minute. I grabbed some tissues from a box on the night stand and cleaned myself. I closed my eyes and wondered if I could survive two more days being tormented by three beautiful women. \n\nLying in the bed my mind raced with conflicting emotions. There were three attractive women a few feet away who all made it clear they would welcome a sexual encounter. Every male chromosome in my body screamed to go pick one, hell, pick two and have some fun.\n\nIn contrast, the analytic side of my brain kicked in. I couldn't have sex with Barbara because she was still married to Jim. Although I was reasonably sure that marriage would not last much longer, I didn't want to place myself between Jim and Barbara. Or, did I? Would it be worth the possible awkwardness to make love to her? \n\nSheila really was like a kid sister to me, although there were no blood ties and she said we should give sex a try. She was a young woman who could say yes or no to sex, and, she was making it clear that 'yes' was the only option in her mind at the moment.\n\nThen there was Ruby. The instant I saw her, a sense of raw lust swept over me. She was pretty, smart, witty and just plain hot. She made it obvious she wouldn't mind a little sex. Barbara told me I should go with Ruby. My big hold up was that she and Barbara were in a quasi-physical relationship. What if Ruby and I did sleep together and later, after Barbara and Jim divorced, I wanted to try to build something with Barbara. Would the fact that we shared a lover be an impediment or a benefit?\n\nMy head was so messed up I thought the room was spinning. I needed to talk with someone. Obviously, Jim, once my best friend, was out of the question. Barbara, a woman whose opinion I valued, was unavailable. I didn't think I could call my mom and ask her advice. \"Hi, mom, I was wondering if you could help me. I'm thinking about fucking a married woman, a girl barely out of her teens or a bi-sexual red-headed attorney. Oh, yeah, maybe I could have sex with all three. Any ideas?\"\n\nNo, that call would not be happening.\n\nSuddenly I remembered Brian. He is a client and a successful writer. We met through a mutual acquaintance and I began to manage some of his money. The recommendations I made were returning high dividends and showing growth. Brian was more than happy with my advice. He eventually shifted most of his investments to my care. We had become friendly through our frequent conversations and there were a couple reasons that I felt he could help me.\n\nFirst, Brian was smart, worldly and a solid guy. Second, I know that he had been involved in a situation along the same lines. In his case there were two married women. I was desperate and pulled out my phone from the discarded shorts on the floor. I found his number and pressed send.\n\nAfter three rings, he answered.\n\n\"Joel?\"\n\nNo secrets with caller ID. \"Hi, Brian, hope I'm not catching you at a bad time.\"\n\n\"Not at all,\" he said. \"Is there a problem? Am I suddenly broke?\"\n\nI could hear the humor in his voice, but also an undercurrent of concern. \"No, your investments are in great shape. I just reviewed your portfolio last week and everything is humming along.\"\n\n\"Good news,\" he said. \"I'd hate to have to sell the farm.\"\n\n\"No, you can enjoy living there for a long, long time.\"\n\n\"Great. So what's up?\"\n\n\"Uh, Brian, I have sort of a private situation and was hoping I could talk to you about it. It has to do with relationships.\"\n\nHearing a hearty laugh, I wondered if this were a big mistake.\n\n\"Bad idea, huh?\" I said.\n\n\"No, Joel. It's just that thinking of some of my relationships, I'm doubtful that I can be of any help. Putting doubt aside, if I can help, even by listening, I'm happy to do so.\"\n\n\"Thanks, Brian. This may take a while.\"\n\n\"Go ahead. I've got nothing else to do.\"\n\nI doubted that since he was usually working on a novel. But, I took him at his word and began to tell him the story of how I accidentally flashed Barbara at the old pool. I wove the tale and introduced Ruby, Sheila and Jim. Brian made noises to let me know he was listening. \n\nWhen I finished, I realized how truly strange this whole thing was. I questioned why I thought anyone could help me.\n\n\"That's some story,\" he said when he was sure I had finished. \"So, let me be sure I understand. There are three beautiful women who want to have sex with you?\"\n\n\"Uh, yes.\"\n\n\"And, you find each of them both sexually and personally attractive?\"\n\n\"Yes.\"\n\nThere was a long silence. \n\n\"You do realize, Joel, that a majority of the men in this country would not see this as a problem? And, that they would probably think you are some kind of wuss not to be balls deep in pussy right now? You do understand that?\"\n\n\"God, yes.\"\n\n\"Well, for better or worse, I never considered myself part of the majority. I happen to think that you are a decent guy trying to figure out how to navigate treacherous waters without damaging yourself or any of those women. I admire you. I also think you are doing the right thing when you show concern for someone's marriage. As you know when my wife, Judy, cheated on me it started a chain of events that ruined her and pulled apart some life-long friendships. You are wise to take it slow. May I ask you a couple questions?\"\n\n\"Sure,\" I said.\n\nI could hear Brian take a deep breath. \"The way you've spoken about these women, I take it Barbara is probably the one you desire the most.\"\n\n\"I guess so,\" I said, \"I'm sure it's more than just desire. I think I love her, too.\"\n\n\"And, you'd like to see where your love might take you. Does she love you? Would she want to commit to you? Would you two marry?\"\n\n\"I never got that far in my thinking,\" I admitted.\n\n\"Yeah, well as a writer I'm always thinking about where the story leads. So, what do you think would happen if Jim and Barbara divorced? Do you think she'd want to jump right into another committed relationship?\"\n\n\"Shit.\" I said. \"Probably not.\"\n\n\"Yes, probably not. If you were to pursue her immediately, you might be her rebound lover. She then might have regrets about getting involved with you before her marriage was officially over. Or, she may have second thoughts about having jumped into bed with you so quickly and back off so she could come to grips with how she could move on with her life.\"\n\n\"So, don't fuck her now and don't do it right after the divorce?\"\n\nBrian laughed. \"I wouldn't put it that way, but that's the gist. You said she values your friendship. So, what would be best for her after a divorce? Having you as a friend or having you as a lover. Believe me, Joel, I doubt if you could be both at that point in her life.\"\n\n\"But what if someone else comes into her life? I could lose her.\"\n\n\"Do you think she knows how you feel about her, I mean sexually or romantically?\"\n\n\"Yes.\"\n\n\"Then, if it is meant for you two to be together, it will happen. My advice is to be her friend, support her, give her space when she needs it, but let her know you are there when she needs that. If she is as smart as you tell me, she's probably figured all this out. Her teasing is just a way to both let you know she is interested and also to test the depth and limits of your friendship.\"\n\n\"That's kinda messed up but makes sense in a strange way.\"\n\n\"Just telling you how I'd write the story. Besides, you know how complicated my life became.\"\n\nI recalled how he had managed to have two women move in with him and allow him to sustain a third relationship with an older neighbor. As far as Joel knew, Brian was still living that dream.\n\n\"Now, what about the other two women?\" said Brian. \"Do you want to have sex with one, the other or both?\"\n\nAfter a long pause, I said, \"Yes.\"\n\nHe laughed. \"I imagine Barbara knows that, too. I also imagine she knows that you need some release. My advice is to continue to be available. If one of them makes a definite move and you feel like you'd want to go that way, then have fun, my friend. I would say, though, that you seem to have a major hang-up about the young one. When one of my characters gets this conflicted it can lead to a lot of fun for me as a writer. In real life, however, I think such conflict is a major 'Caution\u2014Danger Ahead' sign.\" \n\nBrian and I talked a little longer and he allowed me to run various scenarios by him. In the end, his original advice made the most sense. Just be a friend to Barbara and let nature take its course with Ruby and Sheila, but mostly with Ruby.\n\nAfter I hung up, I felt I had completed a five set tennis match. I closed my eyes and fell into a deep sleep.\n\nAs I dozed I dreamt I was being treated to an amazing blow job. I opened my eyes and almost screamed. Either I was having a living dream or the wet mass of red hair belonged to the head that was swallowing my dick.\n\n\"Oh, god, Ruby. Stop.\"\n\nFeeling her warm lips pull away, I looked down to see her emerald green eyes sparkle as she smiled. \"Joel, I'm only stopping because I wanted you hard. Now, my dear man, we are going to fuck. And, I mean F-U-C-K.\"\n\n\"Do you really think we should...\"\n\nRuby straddled me and mashed her mouth onto mine cutting off any other stupid words I could utter. As her tongue slipped into my mouth, tasting of gin, lime and something so sweet, all my hesitations melted away. I wanted her. \n\nRuby was rubbing her pussy along my erection. I could feel the wetness as I enjoyed the sensation. I and cupped each small breast. They were firm and the nipples hard. Ruby continued to kiss me and moaned into my mouth as I pinched each nipple. I pinched harder and she pulled her mouth away. \n\n\"God, yes, Joel. Just like that.\"\n\nRuby was breathing through her mouth and had her eyes closed. I pulled hard on her nipples to bring her breasts closer to my head. I released one and sucked her entire breast into my mouth. Her skin tasted clean and fresh from a recent shower. She let out a long growl as my tongue lashed the nipple. I kept squeezing one nipple between my fingers and bit down on the other.\n\n\"Oh, shit,\" she cried and pushed her pussy hard against my shaft, momentarily stopping the steady grinding she had been doing. I could feel her shake and realized she must have had an orgasm. Spurred on and determined to make her come much harder, I shifted around and eased her onto her back. Her boobs disappeared onto her chest. I licked each nipple and continued a downward journey. As I neared her wild bush, I caught a whiff of something that reached deep inside me, arousing an animal instinct left from years of evolution. I wanted to fuck this female. This is how our ancestors must have felt and how the human race flourished. My mind was inflamed by her scent. \n\nAs much as I wanted my cock inside Ruby, I need to taste what I was smelling. I pushed my face between her thighs. There was no kissing, nibbling or teasing. I wanted to eat her and drink in that liquid coating her pussy. I spread her sex with my fingers and drove my tongue in as far as I could.\n\nMy taste buds exploded with a unique experience. Ruby tasted hot, sweet and, after a second, a little tart. Her juices were thick and coated my tongue. I wanted more. I began lapping at her pussy. Ruby was making mewling sounds as my tongue explored her. My thumb pushed down on her clit and she cried out. I shoved two fingers inside and she rotated her hips back and forth. I moved my hand around and let my fingers search along the top wall of her vagina. I figured I found the special spot when Ruby grabbed my head and smashed me hard against her pussy. I rubbed that interior spot and moved my tongue to her clit. The tiny nub was trying to escape its hood. Using my thumb I pushed the hood back and wrapped my lips around her clit.\n\n\"I can't take any more,\" gasped Ruby as I felt another shock travel through her body and her pussy squeezed my fingers.\n\nIgnoring her, I sucked the clit as hard as I could and banged my tongue against it time and time again. Ruby was bouncing on the bed. I pushed as hard as I could on her interior spot and used my teeth to catch her clit. The effect was a low scream as Ruby clamped her strong thighs against my head. Her hands pushed my face even deeper against her crotch. I could feel the orgasm work through her body as her hips pushed up off the bed. She clawed at my wrist trying to free my fingers from inside her. I knew she had enough, but I was not going to go easy. I pushed two more times hard against her G-spot and she cried out again. I then let her pull my hand away. As her thighs relaxed a bit, I sucked her clit and lashed it with my tongue.\n\n\"Oh, fucking stop, Joel. Please, stop.\"\n\nI pulled my face away and moved up her body. I pressed my wet lips against hers. She opened her mouth and I slipped my tongue inside. She used her mouth and tongue to clean my face. I could feel her heart beating fast as I lay atop her. My erection was splayed on her thigh.\n\n\"Are you on the pill?\" I asked.\n\n\"Oh, Joel, no, you can't,\" she pleaded as her eyes bore into mine. \"Give me some time.\"\n\n\"Are you on the pill?\" I repeated.\n\nShe slowly nodded.\n\n\"I haven't been inside a woman in six months,\" I said, \"And I had a full screening three months ago. I know I have no problems. You?\"\n\n\"Joel, I don't think I can do anything right now. Maybe later. Let's take a break and...\"\n\n\"Are you safe?\"\n\nRuby closed her eyes and nodded.\n\nI rose up on my knees and pushed her thighs apart. I aligned the tip of my cock against her swollen and wet opening.\n\n\"Ruby, I know you are tired, but I want you. You can say no and this will end. But, trust me, you can go further. I know you can. If you don't say 'no' right now, I'm going to continue.\"\n\nRuby opened her eyes. For the first time I saw a hint of something. Maybe it was uncertainty, maybe it was fear. We locked eyes as I moved my cock against her pussy.\n\n\"Joel, no.\"\n\nMy heart sank. I wanted to fuck her. I needed it. I believe she wanted it. But, I promised.\n\nI started to pull back. Ruby placed her hands on my ass and held me in place.\n\nRuby smiled. \"Joel, no...way are you going to stop now. Fuck me. Really, really fuck me.\"\n\nI didn't give her a second to reconsider and pushed inside with one, long thrust. Ruby screamed and I'm sure that Barbara and Sheila must have heard her. Immediately I began long, slow thrusts. Ruby had accommodated my size and was responding. She linked her long legs around my waist and pulled me in with every thrust I made. Soon, we found a rhythm that met both our needs. \n\nHer hands dug into my ass, her nails going deep into my flesh. Sweat was pouring off both of us as we tried to outdo each other. I knew I was rapidly reaching my point of no return. I grabbed her legs and hoisted them onto my shoulders. I leaned forward practically doubling her over. \n\n\"Jesus, you feel good inside me,\" she cried.\n\nMy hands were planted next to her head as my arms held my weight. Using my knees for leverage, I pounded into Ruby with every ounce of energy I had left. Her tongue was out and she moved her head in accord with my plunging dick. \n\n\"I'm there. What about you?\" I rasped.\n\n\"I've fucking lost count, but I think the mother of them all is just around the corner. Can you last another minute?\"\n\nI ground my teeth, and calling on some reserve I never knew I had. I held my orgasm in check and drove as fast as I could. Ruby's breathing shortened and her face turned scarlet. ",
        "\"Now, Joel, now,\" she cried and her hand reached to her clit. She began strumming her bud.\n\nI pushed in as fast, hard, and deep as I could. My balls smashed her ass and I let loose. Her hands gripped my biceps and she slammed her pussy up to meet me. As spasm came upon spasm I felt her pussy squeeze my cock until I could not even move it. Ruby was saying something I could not understand. My arms were trembling from exhaustion as the last spurt of relief left me. \n\nShe let go of my arms and I rolled to the side, my spent cock popping out. We lay side by side, our damp bodies touching, chests heaving and staring at the ceiling.\n\n\"Now, that's a fuck,\" she said. I started laughing and she joined in. Soon, we were rolling against each other as we held our stomachs. There was a knock on the door.\n\n\"Cut it out, you two. That's not fair. We can hear you, you know.\"\n\nRuby and I locked eyes and burst out laughing again. I gained some control and yelled back, \"Go away, little girl.\"\n\n\"Fuck you both,\" Sheila yelled and kicked the door. We could hear her enter the bedroom next to us and slam the door. In a second she pounded on the adjoining wall.\n\n\"I fucking hate both of you.\"\n\nPulling Ruby to me I whispered in her ear. She nodded.\n\nTogether we went into the interconnecting bathroom. We took a minute to clean up and then burst into Sheila's room. She was on the bottom bunk, naked with one hand clamped to her breast and the other moving rapidly between her legs.\n\nShe saw us and screamed. \"Get out. Fuck. Get out.\"\n\nInstead, we pounced on her and began tickling her sides. She squirmed, but couldn't escape the both of us. Together we wrangled her out of the bunk and I hoisted her over my shoulder. We went back into my bedroom and I threw her face down on the bed. Ruby and I pushed down on her back and pinned her to the mattress. I put my hand on her round butt. \n\n\"Now, apologize for saying nasty things to us.\"\n\nShe looked over her shoulder. I had my hand poised inches above her naked flesh.\n\n\"You wouldn't dare,\" she sneered.\n\n\"Apologize,\" I said.\n\n\"Fuck y...\"\n\nBefore she got the second word out my hand slapped her ass.\n\n\"Shit. You prick,\" she yelled.\n\nRuby raised her hand. \"That's not an apology. Let's hear it.\"\n\n\"Screw you, bitch.\"\n\nThe sound of the second slap bounced off the walls. \n\nSheila looked back over her shoulder again. We both had our hands in a position to deliver an even more powerful blow.\n\n\"Ok, ok. I fucking apologize to you two assholes.\"\n\n\"That's better I said.\"\n\n\"Much,\" said Ruby.\n\nI nodded and we delivered a simultaneous blow to her reddened cheeks.\n\n\"Ouch,\" Sheila cried. \"That one really hurt.\"\n\n\"Time to make it better,\" I said. I bent and softly kissed her tender rear. Ruby did the same. We each rubbed a cheek and let up on the pressure that kept her pinned.\n\nSlowly Sheila turned over. \n\n\"Mad?\" I asked.\n\n\"I should be. That was cruel.\"\n\n\"But...\"\n\nSheila smiled. \"That freaking turned me on.\" We all laughed and Ruby and I fell along side of her.\n\nThe door opened and Barbara looked in on the three naked bodies in the bed.\n\nShe was wet from a shower and toweled her hair dry. She was exquisitely nude.\n\n\"I guess when the dam breaks there's bound to be a flood,\" she said and grinned. \"I'm going to start to make dinner, but no need to rush.\"\n\nShe closed the door. \"What did she mean that we didn't have to rush?\" asked Sheila.\n\nRuby slid her hand slowly toward Sheila's crotch. \"I think she meant if there was unfinished business, we should finish it.\" She cupped Sheila's crotch. \"We saw what you were doing in your room. And, we know that you never completed what you started.\"\n\nSheila gasped and I could see her legs move apart. \"Oh, that feels nice.\"\n\n\"Joel and I interrupted something before.\" Ruby was slowly moving her hand around Sheila's lips. \"I hate when that happens to me, so why don't we help.\"\n\n\"Help?\" I said looking across Sheila's naked body to Ruby.\n\n\"You don't have to fuck her, Joel. Kiss her, play with her boobs. Do anything. I can do the rest.\"\n\nSheila turned her head toward me. \"Is this ok with...\" Before the last word could escape my mouth, Sheila's lips pressed to mine. I kissed her back and welcomed her tongue into my mouth.\n\nRuby rolled on to her side and kept a steady motion between Sheila's legs as she gently kissed a nipple. Sheila took my hand and placed it on the breast Ruby wasn't teasing. I cupped the soft mound and squeezed. Sheila pushed her chest up from the bed. She kissed me again and then whispered, \"Kiss my tit.\"\n\nAs I put my lips to Sheila's breast I made eye contact with Ruby. She winked and sucked a nipple deep in her mouth. Sheila let out a long, low sound. I took her nipple into my mouth and sucked. \"God, that's it,\" said Sheila.\n\nRuby and I continued to lavish attention to the beautiful mounds. I could see Ruby's hand hard at work below. Sheila had raised her knees and let them fall open. I could clearly make out two fingers moving in and out while her Ruby's thumb kept a steady beat on Sheila's clit. I lightly bit down on Sheila's nipple. Suddenly, she let out a sound and her body tensed up. Sheila held her breath and then began to relax. Ruby and I released her nipples. Ruby offered me her two coated fingers. I took one and licked it clean. Sheila's taste was different from Ruby's. It was stronger and less sweet. Ruby smiled and took the remaining wet finger and slipped it past her lips. We moved our faces together and kissed sharing the rapidly fading taste of the young woman between us. \n\nRuby next kissed Sheila. I followed her lead. In a second three tongues were touching each other.\n\n\"Thanks, guys,\" said Ruby. \"That was special. I'm going to help Barbara. You can stay here and relax.\"\n\nShe moved away and left the room, closing the door behind her. Sheila rolled into my arms and I held her as her head moved to my chest.\n\n\"That was awesome, Joel. Thank you.\"\n\n\"Thank you, Sheila. You are simply beautiful.\"\n\nShe slid her hand onto my flaccid cock and sighed. I kissed her hair and felt her drift into sleep.\n\nI must have dozed off as well, because I was startled at the sound of a rap on the door. The door opened and Barbara stuck her head in. She looked at us. Sheila had rolled partially on top of me and her hand still clutched my cock, which was hard. Barbara shook her head and then asked if I could consider grilling. I nodded and Barbara retreated.\n\nI eased myself away from Sheila and covered her with the sheet. I pulled on shorts and a tee shirt, slipped on my flip-flops and joined Barbara in the kitchen.\n\nThere was a platter stacked with steaks on the counter. I made my way to the deck to start the fire. I was leaning on the railing when a beer appeared in front of me. Ruby, dressed in a light cotton sweater and shorts, stood next to me.\n\nWe raised our bottles as our eyes met. \"Cheers,\" I said and she nodded.\n\nWe turned and looked down at the lake. \"Did you fuck her?\"\n\n\"No, we just held each other.\"\n\n\"Hmm,\" said Ruby.\n\n\"There's a lot contained in that 'hmm',\" I said. \"Would you be angry if I did?\"\n\n\"Got no claims on you, Joel,\" she said staring straight ahead.\n\n\"That doesn't answer the question.\"\n\n\"I thought we were pretty good together,\" said Ruby. \"It was like the fuck of the year.\"\n\nI laughed and said, \"For me, it was like the fuck of the decade.\"\n\nRuby bumped her shoulder into mine and smiled. \"Yeah, it was really good.\"\n\n\"Good, in like you might consider more?\" I asked.\n\n\"Good, in like I might consider a lot more,\" she replied.\n\n\"So, you don't want me to sleep with Sheila? Is that like part of the deal?\"\n\nRuby turned toward me, her green eyes blazing. \"Joel, we don't have any fucking deal. We had a great fuck and I thought maybe we could have some more. That's it.\"\n\nI knew that wasn't it. \"Bullshit, Ruby. Are you jealous because of what we did with Sheila or that I might sleep with her?\"\n\n\"What we did to help Sheila, we did together. All I heard from you is that she's like your sister, so I didn't figure you would screw her. I figured that was a one-time thing and what she needed at the moment. It wasn't a big deal.\"\n\n\"Ok, then where's all this anger coming from?\"\n\n\"I'm not angry, Joel. Believe me. You would know if I were angry. I'm confused.\"\n\n\"By?\"\n\n\"When Barbara went to ask you to cook, she said you and Sheila were like on top of each other and she was holding your hard cock. So, I thought maybe since you had one of us, you were like going for a double, or something.\"\n\nI was surprised by the apparent jealousy, despite Ruby's protestations to the contrary. With all the teasing the three women were doing it appeared that sex among any of us was acceptable.\n\n\"Ruby, sex with you was amazing. You're amazing. As far as Sheila and I are concerned, I could be coy and say it's none of your business. But, I don't want to get defensive. I plan to talk to Sheila tonight. I was already planning to do so. I will tell her that what happened among the three of us was a unique experience and that I will not participate in something like that again. I will also tell her that she and I are not going to have sex. When she finishes school, has a job and some real world experience, she can come see me. If she is still interested\u2014which I am sure she will not be\u2014we can discuss sex at that time.\"\n\nRuby watched me closely as I spoke. I tended to the grill and saw that the coals were ready. I spread them about the bottom, placed the rack on top and loaded the steaks. I placed the top on the grill and turned back to Ruby.\n\n\"You telling me the truth?\" she asked.\n\n\"Yep.\"\n\n\"Now, I feel like an asshole,\" she said and drank her beer.\n\n\"No need to,\" I replied. \"I think we are all in uncharted waters. And, you are not an asshole. You have a great ass, though.\"\n\nShe laughed and bumped my shoulder again. \"You're a good guy, Joel.\"\n\n\"Sometimes,\" I said and smiled.\n\nWe heard the door open and saw Barbara come onto the deck.\n\n\"How's it coming?\"\n\nRuby and I shared a glance that Barbara noticed.\n\n\"God, not the fucking part, I mean the steaks.\"\n\n\"I think both are doing quite nicely,\" I answered.\n\n\"I agree,\" said Ruby.\n\n\"Well, then concentrate on the steaks for now. I'm starving,\" said Barbara. She smiled and went back inside. \n\nI flipped the steaks. As I turned back to Ruby, she came into my arms, wrapping hers around my waist. \"Can we sleep together tonight?\"\n\n\"Can't promise a lot of sleeping,\" I said.\n\n\"Even better.\"\n\nWe kissed. \n\nI checked and saw that the meat was cooked to rare. I piled the steaks on the platter and Ruby and I went inside. Barbara and Sheila were pouring wine. We sat and toasted each other.\n\n\"To a great weekend,\" offered Sheila.\n\nBarbara laughed, \"With some qualifications.\"\n\nSheila apologized. \"Sorry, I didn't mean all that shit with my asshole brother was part of a great weekend. I meant like the four of us, being here and, you know, that kinda stuff.\"\n\nRuby banged her knee into my thigh to signal that we knew what sort of \"stuff\" Sheila was referencing. \n\n\"Right,\" said Ruby, holding her glass high. \"To the four of us and a great weekend.\"\n\nWe clinked and took a sip. I passed the platter of meat and we began our meal. The conversation flowed and dealt with current affairs, movies, TV and almost everything except what went on in the bedroom. \n\nThere were still some of Ruby's cookies left and we sat on the deck enjoying them.\n\n\"Are you guys up for another swim?\" asked Barbara.\n\nThe ladies answered yes. I said I'd like to take a walk and asked Sheila to come with me.\n\n\"Shit,\" she said. \"I was afraid I was going to get a 'talk.' I was hoping it would come later.\"\n\nRuby and Barbara laughed and went inside to finish cleaning up. I led Sheila around to the back and we walked down the road. She slipped her hand in mine.\n\n\"Joel, that was so nice before. It almost made me forgive you about the loud screwing.\"\n\n\"Sheila, I enjoyed being with you. Hell, you are really sexy and pretty and I loved touching you. But...\"\n\n\"Yeah, there's always a fucking 'but',\" she said.\n\nI squeezed her hand. \"Sheila, it would be very easy to make love to you. It's just that I can't do it. I want to explain.\"\n\n\"Hey, no problem. I get that I'm just some dumb kid. I think I should just pack my stuff and go home.\"\n\n\"Sheila, I don't think of you as dumb or a kid, except when you talk about running away. Adults don't do that.\"\n\n\"Some adults do. My asshole brother probably does.\"\n\n\"Jim isn't part of what we're talking about.\" I stopped and pulled her to me. The moon allowed us to see each other's faces.\n\n\"Sheila, you are special to me. What happened earlier was not planned. Somehow we moved from teasing you to, well, you know. I won't be a hypocrite and say I didn't enjoy it, because it was erotic as hell. But, that's not how I truly feel about you. I love you, but I don't want to be your lover.\"\n\nTears formed in the corners of her eyes. \"I'm such a loser,\" she said. \"I know I could never compete with women like Ruby or Barbara. Thanks for before, Joel, it was nice. Sort of a low level mercy fuck.\"\n\n\"Sheila, you have to stop exaggerating everything. You're not a loser. You are every bit as attractive\u2014both sexually and personally\u2014as Ruby and Barbara. I am not going to have sex with you because I want more than a physical relationship. Even just the little bit we did today made me feel that I was doing something wrong.\"\n\n\"How could something that felt so good, so natural be wrong?\" she asked.\n\n\"Maybe 'wrong' is not the correct word. Sheila, I'm not blind. I know you've had a crush on me. It sounds conceited, but I think I'm right. I tried not to feed into it, but it was very flattering. But, as sexy as you are, right now I want to be your friend. Having you as my friend and someone you respect is much more important than a sexual fling.\"\n\n\"It could be more than a fling,\" she said.\n\n\"Not really,\" I answered. \"It's not the number of years between us, it's where we are in our lives. You still have the rest of college. That will be a time for having fun, letting loose and learning. It is not a time to be tied into a relationship with a man who is past all that. Enjoy your time now.\"\n\n\"I wouldn't see it as being tied down,\" Sheila said.\n\n\"Yeah, you would. I would be so not interested in the social life of college that I'd never want to do things you want. I wouldn't want to hang with your friends, go to your parties, play beer pong and all the other stuff you would be doing. That doesn't mean you're immature; it means we are different points in our lives. Sheila, you should just enjoy the hell out of right now. In a few years, you'll be dealing with all kinds of shit that won't let you enjoy the right now.\"\n\n\"Does that mean that we could get together after college?\"\n\n\"I'll make you a deal,\" I said and put my hands behind her neck. \"On the second anniversary of your graduation and if you have a job, you can ask me for anything. If you want sex, I will take you to bed. If I'm in a relationship, I'll tell that person that I am going with you. We will see what happens.\"\n\n\"Is that a real promise?\"\n\n\"Yes, a real promise. But, Sheila, it's not going to happen. You will be so far past what you're thinking right now that you'll wonder how you even considered it. But, it is a promise.\"\n\nShe jumped in my arms. \"Joel, you're the best. I love you.\"\n\n\"I love you, too,\" I said and then paused. I added, \"Little sister.\"\n\n\"Ugh, I hate that.\" Sheila kissed me. I kept my lips pressed tight.\n\n\"Ok, I get it,\" she said. \"But does that mean we get to go skinny dipping again? And, can I still lust after your cock?\"\n\nI laughed and gave her butt a slap. \"Do I have to spank you again?\"\n\n\"Well, the last time was lots of fun, so...\"\n\n\"Speaking of the last time, did it bother you to have a woman touching you?'\n\nSheila laughed. \"Joel, I'm a woman in college. Girls getting like together is so not unusual. We're not Lesbians, we just like to be with another girl sometimes. It's fun and you definitely cannot get pregnant. And, I don't have to tell you that Ruby is nuclear hot. Plus, she knows how to work the business. I haven't come that hard with just a couple fingers doing the action in like ever.\"\n\nI laughed and grabbed her hand. \"See, we are in way different places.\"\n\n\"Do you think Barbara and Ruby are Lesbians?'\n\n\"Don't know.\"\n\n\"Duh, wake up and smell the perfume. Just because girls have sex with girls doesn't mean they're Lesbians. \"\n\nI led her off and we arrived back at the house to find Barbara and Ruby in the lake. Sheila and I stripped and joined them\n\n\"How was the talk?\" asked Barbara.\n\n\"Great,\" I said.\n\n\"Sucked,\" said Sheila.\n\nLaughing we began splashing each other. The water felt much warmer than last night and none of us wanted to get out.\n\n\"I wouldn't mind some more wine,\" said Barbara. Ruby and Sheila agreed.\n\n\"Do you mind, Joel?\" asked Ruby.\n\n\"Happy to oblige. Uh, are there plastic glasses or something? I'd be afraid I'd drop a glass and have to deal with stepping on broken pieces.\"\n\n\"I'll come up with you,\" said Barbara. We climbed out and walked naked up to the house. Inside I opened the wine and she took some plastic wine glasses from the cupboard. As we were placing them on a tray, our eyes met.\n\n\"Joel, I want to go to bed with you in the worst way.\"\n\n\"You really think it would be the 'worst'?\"\n\nShe laughed. \"God, you can make me feel so good. We aren't going to screw, are we?\"\n\n\"Not now.\" I was thinking I was banking a lot of promises regarding future sex. I hoped they didn't all come due at the same time.\n\n\"Will you hold me?\"\n\nI opened my arms and Barbara slid in. I wanted to tell myself that it was not sexual, but was having trouble with that concept as her breasts pushed into my chest and my dick nestled against her pussy.\n\n\"I think we would be good together,\" Barbara said softly.\n\n\"Yes, I know we would. I think that it would be better that I'm just your friend for a while. The road ahead looks bumpy. I want to be there for you.\"\n\nShe flattened her cheek against my chest. \"I could really love you. You're always thinking about my best interests.\"\n\n\"True, but sometimes I think about your tits.\"\n\nShe choked and let out a burst of laughter. \"See, you can always make me laugh. I appreciate that more than anything.\" She paused and slid her hand between us and onto my cock. \"Well, almost anything.\"\n\n\"It's just a dick, Barbara.\"\n\n\"A handsome dick,\" she said. \"That's the unanimous opinion of all the women gathered here.\"\n\n\"My dick is the topic of conversation?\"\n\n\"Don't go getting all impressed with yourself. It also happens to be the only dick here. Still, we all think it looks great.\"\n\nShe squeezed it and added. \"Of course Ruby thinks it works just fine, too.\"\n\n\"Are you ok about the two of us?\"\n\n\"I'm jealous, but ok.\"\n\n\"What about you and her?\"\n\n\"Would it bother you if she and I still had sex?\"\n\n\"I haven't thought about it, but probably not.\"\n\n\"Good. I think she will also help me get through the bumpy road you mentioned.\"\n\n\"I'm certainly not a lawyer, but I think you would not want Jim to know about the two of you. It might give him some leverage.\"\n\n\"Shit, I hadn't thought of that. God, I will be so fucking horny without her I may lose my mind.\"\n\n\"It's only temporary.\"\n\n\"Joel, when this is all over do you think that we all could, I don't know, somehow be together?\"\n\nMy mind and my dick reacted to that thought. \"Let's not close any doors, but I want you to know when this\u2014the resolution of what you and Jim decide-is all over, I want to try to build something with you. If Ruby is a part of that, well, we can deal with it then. But, Barbara, I want to have you in my life.\"\n\nI could feel tears running down my chest. Barbara sobbed quietly and hugged me tighter.",
        "\"I love you, Joel. I've wanted to say that for a long time.\"\n\n\"I love you, too. We'll get through this. I'm here for you.\"\n\n\"Thanks. Now, let's get back to the lake. They must think something's happened to us.\"\n\nI bent my head down and kissed her.\n\n\"Something has happened to us, Barbara. Something quite good.\"\n\nSometime later...\n\nAs divorces go, it was not that bad. Jim had pleaded with Barbara for another chance. After some consideration, she said no. Even with no contentious issues, it took almost a year for the decree to be finalized. They did close to a fifty-fifty split on assets with the exception that Barbara kept the condo, including all the furnishings. I think the video of Jim and his mistress took most of the fight out of him.\n\nJim moved in with Keisha, but that only lasted a month. Seems once the allure of a dangerous and secretive affair went away, so did a lot of the passion for both parties. He ended up sharing an apartment with another divorced attorney in his office. We never played tennis together again. I see him on occasion, but other than a perfunctory hell-o, we don't have much to say to each other. I miss having him as a friend, but his behavior toward Barbara destroyed any chance we had for maintaining a friendship that included trust and respect.\n\nSheila finished her senior year and moved to the west coast. During her senior year, she shifted her need for advice and support from Jim to me. She continued to flirt, but it was clearly a game and we both knew it. My affection for her grew and sometimes I thought I must be crazy to not enter into a physical relationship with her. At times she would stay with me on a short college break. In the morning I would find her in the kitchen making coffee dressed solely in tiny bikini bottoms. She would smile and slowly walk back to her room. I thought perhaps she was majoring in flirting. If so, she was magna cum laude. In spite her teasing, Sheila knew she was safe with me. She could let down her guard and relax. I think she developed some mistrust of men after seeing how her brother treated Barbara. When I never responded to her flirting, I hope she realized that you could trust a man. Of course, she probably never grasped how close to the edge I was. In the end, I loved her too much to violate her trust.\n\nDuring her senior year, Sheila met and fell in love with a great guy, whose family lived in the San Diego area. His father owned a large landscaping business and Sheila's boyfriend started working there. He graduated with a degree in landscape design and would most likely take over the business. She got a job at the San Diego Zoo in the development office. They are still together and appear to be happy. She has not come calling to collect on my promise made at the lake. I am fairly certain she never will.\n\nRuby and I, to both our surprises, have continued to build a relationship. At first the foundation was sex. It was excellent sex, but we kept it at that level for a while. Finally, as Barbara's divorce moved along, the three of us began to hang out together. Ruby and I found we enjoyed each other's company just as much when we weren't slapping our groins together, although said slapping continued at a pleasant pace. \n\nShe and Barbara also found equilibrium without sex as the common element. Their friendship deepened. The biggest turning point turned out to be a week-long trip to Ireland. Traveling and sharing rooms in B&Bs brought us to a new level of comfort and intimacy. That's intimacy without sex. Well, to be honest, Ruby and I had lots of sex and Barbara watched. We felt bad at first, but after a couple times, we enjoyed having her as a non-participating partner. We would fantasize on how maybe things could be different after the divorce. Barbara was not shy about pleasing herself while watching Ruby and me. Truth be told, I was equally aroused by the physical contact with Ruby and the visual appreciation of what Barbara's fingers were doing.\n\nBarbara and I shared lots of lunches during the year and a half after the weekend at the lake. Our friendship deepened to the point where we became each other's most important relationship. She was supportive of Ruby and me being together. We never fully discussed what we would do once she had the decree in hand. \n\nIt was a Tuesday several months after the decree was finalized when she called me at my office. \n\n\"Can we skip lunch today?\" Barbara asked.\n\n\"Sure. Got something pressing?\"\n\n\"No, actually I'm taking the day off.\"\n\n\"Really!\"\n\n\"Yes. I plan to spend the entire day cooking a great meal for tonight.\"\n\n\"Special occasion that I'm not aware of?\"\n\nShe made a little sound. \"Can you be here around seven?\"\n\n\"Sure. Can I bring wine?\"\n\n\"Got everything taken care of.\"\n\nWe rang off with our usual, \"Love you.\"\n\nI got home close to six and showered and shaved again. I dressed casually, but in decent clothes. I wasn't sure what Barbara had in mind, but I thought it sounded special.\n\nI walked into the lobby and saw Ruby at the elevator.\n\n\"Ah, dinner for the three of us,\" I said. \"Do you know what's up?\"\n\nShe was carrying a bouquet of yellow roses. \"Not sure, but I have a suspicion she's thinking that this is the sixth month anniversary of the decree. Barbara said she didn't want to make any big changes or commitments for a while after the divorce was final. She's been putting most of her energy into her work. You know she's now regarded as the one of the top death penalty defenders in the country.\"\n\nI did know that and was proud of what she had accomplished. I was also in awe that she had the strength to seemingly abstain from sex for this long a period.\n\n\"So this is celebration time?\" I mused.\n\nRuby leaned in and kissed me. \"Probably. I wonder what she has in mind.\"\n\nAs we rode up together, my mind churned in anticipation.\n\nBarbara greeted us at the door. She was dressed in a simple blue skirt and long-sleeved pale yellow blouse. She looked radiant. Her hair was pulled back with a blue head band and then hung down in a soft pony tail. She wore make-up to accent and not to overpower her natural beauty. The blush on her cheeks was real and not applied. I could see a glint in her eyes that was absent during the time she was recreating her life.\n\nAfter hugging and kissing both of us, she welcomed us into the condo. The scent of something subtle and exotic lingered. I felt I could inhale that fragrance forever and never tire of it. As Barbara went to the kitchen, Ruby turned to me and whispered. \"God, she smells so good.\"\n\nSmiling, I whispered back, \"Does it make your mouth water?\" Ruby jabbed me in my ribs and told me to behave. She then grinned and the desire in her eyes told me her true answer.\n\nThe table was set with her best china and crystal. Sitting in the living room, we enjoyed champagne and light appetizers. Dinner was superb and accompanied by a selection of wines. Barbara served a composed salad with a semi-sweet dressing. The accompanying fresh sourdough rolls balanced the sweetness. This course was accompanied by a light, buttery Chardonnay. She would not allow us to clear or help serve the next course, which was tenderloin of pork in an apple demi-glaze. Each of us received a plate with the carefully arranged meat, fresh saut\u00e9ed asparagus and sp\u00e4tzle made in bacon fat. Barbara served a light St. Emilion. \n\nOur dinner conversation flowed as only three close friends can accomplish. With no awkward pauses, we jumped from topic to topic, listened to each other and laughed a lot. Barbara cleared our dinner plates and returned with a selection of hard and soft cheeses. After returning to the kitchen, she served a bottle of sauterne. The wine was perfect with the cheese, but I was becoming concerned about driving after drinking so much. I was to learn that it would not be a problem.\n\nRuby and I resisted pushing her into the one topic we had not discussed, but as we nibbled on the cheese plate, Ruby finally burst out.\n\n\"So, what are we celebrating\u2014your anniversary?\"\n\nBarbara lit up. She nodded and pulled an envelope from under her chair. Opening it, she passed the decree around. In spite of all the legalese, we knew she saw it as her passport to her future. She then pulled out her original marriage certificate. She touched one corner to a lit candle and watched it catch fire. She held it until it burned down close to her fingers and dropped the remnant in a wine bucket. We all stood and did a group hug. Ruby and I congratulated her as tears streamed down her cheeks.\n\n\"You two have been my rocks. I could not have gotten through all this without you. Thank you.\"\n\nNow there were three sets of eyes running with tears.\n\n\"I've prepared a special dessert. I am really nervous about it.\"\n\nWe assured her that we would love whatever it was.\n\nTaking us each by our hands, she led us back to her bedroom. Ruby and I shot a glance at each other.\n\nBarbara pushed open the door. Although I had seen her bedroom before, I was amazed at what was before our eyes.\n\nHer queen-sized bed was gone and a king-sized one was in its place. The room was repainted in a soft yellow. It struck me as not too feminine nor too masculine. The blue sheets and comforter were pulled half-way down. Resting on the headboard were three pillows. Candles were the only illumination. A wine bucket with a champagne bottle rested on the bedside table accompanied by three flutes.\n\n\"God, just let me get this out,\" Barbara gushed.\n\nRuby and I stood silent.\n\n\"I've wanted this for a long time. When we were in Ireland, I loved watching the two of you in bed. More than anything I wanted to join you. I wanted the three of us to join as one.\"\n\nBarbara took a deep breath and continued. \"Joel, I know that I love you and am sure you love me.\"\n\nI nodded.\n\n\"Ruby, I know you love me and you know I am crazy about you.\"\n\nRuby sniffled and nodded.\n\n\"Joel, I imagine you thought about the two of us making love. I do want that, I really do. But, tonight I want the three of us together. I want to be loved by both of you and I want to love you both in return. I've never done anything like this and am not sure how it all works. But, I figure let's get naked and let nature and our desire do the rest. I can't tell you how many times I've been tempted to just say the hell with it and drag one or both of you to bed. I resisted those temptations until I could put a definitive end to my marriage and give myself some time to reassess who I am.\"\n\nWith that Barbara unbuttoned her shirt and dropped it. The lacy bra soon followed and in a minute she had shed her skirt and panties. I had not seen her naked since Ireland. Her blond bush was still neatly trimmed and looked so sexy in the flickering candlelight. I certainly had not forgotten how beautiful her breasts were, but it was a new found delight to see them standing firmly on her chest, the nipples hard and proud. \n\n\"God, guys, say something,\" Barbara exclaimed.\n\n\"I'm trying,\" I said. \"But, honestly, you are so beautiful, I'm practically speechless.\"\n\nBarbara relaxed and let her smile spread across her face.\n\n\"Oh, honey,\" Ruby said. \"You can't imagine how I've ached for such a sight. Yes, you are beautiful, but you're so much more than that. I love you.\"\n\nBarbara grinned, exposing her perfect, white teeth. She spread her arms and Ruby and I filled that space. I drank in her delightful aroma as she pressed her lips to Ruby. In a minute, she turned to me and I grew weak as her soft lips met mine. Barbara alternated between our mouths, letting her tongue reacquaint itself with long denied pleasure.\n\nShe finally stepped back and said, \"You, two, are way over-dressed.\"\n\nNeeding no further encouragement, Ruby and I were naked in record time. The three of us crawled on to the huge bed. I poured three glasses of champagne.\n\n\"To new experiences,\" Barbara said raising her flute.\n\n\"To new love,\" added Ruby.\n\n\"To all new temptations,\" I added.\n\nWe clinked, drank down the smooth liquid, set our glasses aside and fell into each other's arms. \n\nI turned Barbara's face to mine and explored every inch with my lips. I could feel Ruby move a hand to Barbara's chest and play with the soft mound and bud. Barbara moaned as Ruby teased her. Soon my hand joined Ruby's on Barbara's chest. I slowly moved my kisses from her face to the crook of her neck. Barbara's response told me it was a special place that she loved. As I nuzzled her, I could feel her nipple harden and extend farther. Ruby's fingers touched mine and together we massaged Barbara's right breast.\n\n\"Oh, god, yes,\" Barbara said. \"That feels so good.\"\n\nI brought my face down to her chest. Ruby and I locked eyes as we each took a nipple into our mouths. Barbara's back arched and her tongue licked her lips. I knew I could be happy sucking her breast for the rest of the evening, but both Ruby and I wanted more. Although I had never made love with Barbara and Ruby knew her body in intimate detail, I decided to hold back. I looked at Ruby and pulled my mouth from Barbara's breast.\n\n\"Oh, no, don't stop,\" Barbara moaned.\n\nI mouthed to Ruby, \"Make love to her.\"\n\nShe shook her head, and by doing so pulled Barbara's nipple, eliciting a small cry.\n\nI said softly, \"Yes, do it.\"\n\nIt was part respect for Ruby but also a practical approach. I knew Barbara and I were going to have sex. I thought Ruby might enjoy going first and not having to deal with the mess that I would definitely be leaving. Come to find out later, that would not have been a deterrent. The three of us found many things that others might consider off-putting that we loved. But, at this moment, I moved my eyes to indicate Ruby should begin her descent. \n\nAs Ruby kissed her way down Barbara and I lavished attention to both her breasts, Barbara called out. \"Oh, my god, yes Ruby, yes.\"\n\nRuby adjusted her position so that her face was between Barbara's legs. For several moments she looked at the golden triangle and the droplets of moisture highlighted by the candles. Slowly she pushed her tongue forward and touched the plump lips.\n\nBarbara made a sound I never heard before. Her hand grabbed my shoulder as her nails dug into my flesh. \n\n\"I've missed that so much.\"\n\nRuby was now licking up and down. I saw her use her fingers to open Barbara's lips and let her tongue move along the wet slit. Barbara thrust her hips up to increase the contact. I had never witnessed two women making love before. Sure, I watched porn, but never the real thing. The sounds, the smells the subtle movements of face, hips, back\u2014all these were new delights. I could watch these two women and never tire of what I was seeing.\n\nRuby abruptly stopped. Barbara lifted her head and stared down in surprise.\n\nRuby smiled and said, \"Joel, come here. You need to share this before I finish her.\"\n\nQuickly I moved down and Ruby guided my face to the plump lips that shone with arousal and the wetness from Ruby's kisses. I let my tongue touch the outside of one lip. Barbara pushed back. Using the point of my tongue, I ran the length of her pussy. My senses exploded with the taste and with the knowledge that this was the love of my life opening her sex to me. Throwing any sense of restraint aside, I started licking and probing with my tongue. Barbara was writhing on the bed, encouraging me with sounds.\n\nRuby took my erection in her hand and slowly stroked me as I ate Barbara with abandon. The little tastes Barbara had given me in the past in no way prepared me for the feast I was experiencing. The sweetness of her essence drove me to lap and suck for more. I slipped a finger inside to probe her g-spot. Her pelvis shot from the bed and my lips captured her clit.\n\n\"Oh, yes,\" Barbara cried out. I knew she was mere moments from exploding. That's when I pulled away.\n\n\"What?\" she cried, her hands scrambling for my head to force me back between her legs.\n\n\"No,\" I said. \"I want to make you come with my cock. Ruby will take it from here.\"\n\nRuby smashed her mouth to mine. \"I love you, Joel. Thank you.\"\n\nBefore I could reply, Ruby was back in position. She attacked Barbara's pussy with an intensity that made me wonder if she was trying to punish her lover. By Barbara's reaction I saw that Ruby was far from inflicting any sort of punishment. Barbara was sweating and breathing heavily. Her hands were pushing Ruby's face so hard against her pussy I wondered if the red head could even breathe. I saw Ruby move two fingers into place and then stab them inside.\n\n\"Oh, yes, my love, yes,\" Barbara cried.\n\nRuby was pumping hard and suddenly Barbara went deathly still. Her eyes were closed and her mouth hung open. Her chest was not moving. Then it broke. She screamed in pleasure and her body shook. I could see her thighs quivering with the effect of her orgasm. Ruby withdrew her fingers, raised her head and gave Barbara one last, slow lick from her butt to her clit. Barbara emitted another sound of ecstasy and her body went limp. \n\nI pulled Ruby to me and kissed her. I cleaned every drop of liquid from her nose, lips, chin and cheeks. We scrambled back up to lie on either side of Barbara. As we snuggled her between us, she opened her eyes.\n\n\"Am I still alive?\"\n\nRuby kissed one cheek and I the other. \"Not only are you alive,\" said Ruby, \"But the second round is yet to come.\"\n\n\"Oh, I don't know if I can,\" she said in a small voice.\n\nMy heart sunk. I had waited so long to be inside her, to make her mine and now I must wait longer. My only consolation was that I loved her more now than I did before.\n\nThe silence in the room seemed to overtake us. Ruby was about to say something, when Barbara cracked up. She laughed until her belly shook.\n\n\"The look on your faces is priceless,\" she said once she got under control. \"Sorry, I just had to do that. We were all getting so fucking serious. Of course, you and I are going to make love, Joel. I want you and I want you deep inside me.\"\n\nI smiled and kissed her. \"Uh, should I get a condom?\"\n\n\"You don't have one with you?\" Barbara asked.\n\nI shook my head. \"I thought this was dinner.\" The three of us cracked up at that statement.\n\n\"Do you use a condom with Ruby?\"\n\n\"No.\"\n\n\"Have you been with any woman other than Ruby in the last six months?\"\n\n\"Of course not,\" I said. Ruby smiled.\n\n\"Then, no need for a condom,\" said Barbara.\n\n\"But, what if you get...\"\n\n\"Joel, I've been planning this evening for a long time. Believe me, it was not just the menu I was preparing. I've been on the pill for three months.\"\n\nIf ever there were words that gladdened my heart, those were the ones.\n\n\"Ok, guys,\" Ruby said. \"Here's where I make my gracious exit.\"\n\nBarbara grabbed her hand. \"Not on your life.\"\n\n\"I thought,\" said Ruby, \"that you, two, would want some privacy for at least the first time.\"\n\n\"Darling, did you see the three pillows on this bed,\" said Barbara.\n\nRuby nodded.\n\n\"That means this is our bed. Yours, mine and Joel's. Understood?\"\n\nWe both said yes.\n\n\"Good,\" continued Barbara. \"Remember on our trip to Ireland how I would watch you two make love?\"\n\nWe smiled and nodded in unison.\n\n\"That was so special. I want the same thing tonight. Joel is going to fuck me. There will be plenty of time for making love later, tomorrow or for the rest of our lives. Tonight, however, he is going to fuck me and you are going to watch. Then, if any of us has any strength left the three of us will begin to figure out how to do the old three-way.\"\n\nBarbara reached for our hands and pulled us to her. We kissed her and each other until our mouths were soaked. \n\n\"Ok, Joel, ShowTime,\" she said. \"I hope you don't have performance anxiety.\"\n\n\"Barbara, this is something I've dreamed about for a long, long time. Believe me, I'm ready.\"\n\n\"Great,\" she said. \"Now, remember that night in Ireland, in Kinsale? We drank all evening in the pub because we didn't have to drive anywhere. We barely got into that lovely room overlooking the harbor when you two were naked. Joel you fucked Ruby so hard that night that I thought you were going to split her open. I sat there and must have come three times watching you. Joel, that's what I want now. I haven't had a man in close to two years. I never had you. That combination has me so freakin horny I'm crawling out of my skin. So, take me.\"",
        "I was already hard as I'd ever been. I moved above Barbara and bent down and kissed her. \n\n\"That's the last gentle thing you're going to do, understand?\"\n\nSmiling, I said, \"Yes, ma'am.\"\n\n\"Ruby, make sure I'm wet enough.\"\n\nRuby pushed my erection aside and slipped finger inside Barbara. \n\n\"Might need a bit of refreshing,\" she said with humor in her voice.\n\n\"Do it and then put Joel inside me. After that, sit where I can see you play with yourself.\"\n\nI moved aside and Ruby used her tongue until Barbara's own lubricant was running down her thighs. She pulled away and motioned me back into place. Ruby took my cock and pulled me to Barbara's opening. She rubbed my head up and down and toyed with Barbara's clit. \n\n\"Now,\" Barbara said.\n\nRuby spread Barbara's lips with her fingers and positioned my head so it just split the warm and plump folds. \n\nRuby slapped my ass and I pushed in until I felt my balls on Barbara's ass.\n\n\"Ooh, yes, that's good,\" Barbara gasped. \"Give me a moment to get used to you.\"\n\n\"Not likely,\" I said and laughed.\n\nI pulled her ass up, then asked Ruby to help me get Barbara's legs positioned on my shoulders. This done, I pulled back to the brink and slammed forward.\n\n\"Ah, Christ,\" Barbara said.\n\nI set a tempo that I prayed I could sustain for more than a minute, because I felt so close to my own release.\n\nI got going in and out as I watched Barbara's face turn crimson. Her hands clutched at my arms and her nails dug into my biceps. I kept plunging. Her hips pushed hard against me to meet every thrust. I pumped even harder. \n\nI looked over to see Ruby with three fingers working in and out of her beautiful pussy with the red crown above her opening. Her other hand was alternately pinching each nipple.\n\nI knew Barbara craved this pounding, so I obliged. Every fiber in my body wanted me to slow and enjoy the soft velvet that surrounded my cock. I wanted to prolong and let every sensation penetrate me through contact of penis and vagina. I wanted not to just come in her, but to become her through our merged flesh.\n\nMy thoughts were dragged back to the present as Barbara called out that she was close. I told her to touch herself as I tried to go as deep as I could. Freeing one hand from my arm, she stroked her clit. Arching her back, she let out a hiss and squeezed my neck with her ankles as her vagina clamped down on my cock. That drove me over the edge and I started emptying into her as her climax overtook her. \n\nThe ending arrived none too soon as my arms were about to give way and I thought I might pass out. I knelt straight and gently lowered Barbara's legs to the mattress. I withdrew my withered cock and fell beside her. I felt Ruby climb on the other side.\n\n\"Did you come?\" I asked Ruby.\n\n\"Oh, yeah, twice.\"\n\nWe all chuckled. \n\nLater, lying exhausted between the two women I loved, I knew that the only temptation left was to see how much more the three of us could explore the depths of our love.\n\n*****\n\nAuthor's Notes: If you are interested in learning more about Brian, the friend Joel asked for advice, you can read A Clear View.\n\nOnce again my deep appreciation goes to Perry for his editing assistance and helpful insights. Again, please know that any remaining errors are all mine."
    ],
    "authorname": "orie",
    "tags": [
        "naked sunbathing",
        "skinny dipping",
        "three way",
        "masturbation",
        "friend\u2019s wife",
        "friend\u2019s sister",
        "redhead"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/temptation-abounds-ch-02"
}