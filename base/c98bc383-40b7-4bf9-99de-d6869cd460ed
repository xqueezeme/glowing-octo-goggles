{
    "title": "Office Fun Ch. 04: The Office",
    "pages": [
        "CHAPTER FOUR: THE OFFICE\n\nAs I was printing and collating nine sets of forms, the office personnel filed along both sides of my workstation coming from their offices around me and the open work area in front. Bill Clancy came in the back entrance from his office in the plant. It was an early meeting I was asked to schedule on all their computer calendars as a mandatory meeting with Bob Hansen. I occasionally smiled as someone greeted me or commented on my outfit as they walked by. My focus though was on getting the forms ready and waiting for when they were needed in the meeting. It had probably seemed like a normal Monday to them.\n\nThis day I was wearing a tight, short, black skirt that molded to my mature curves and ended at mid-thigh. My blouse was semi-sheer white so the sheer white, lace-trimmed, bra underneath was visible underneath. Underneath my skirt was a matching sheer white, lace-trimmed thong. My thigh-high stockings were sheer black with lace at the elastic tops. My shoes were 4-inch, shiny black patent leather with stiletto heels. I had sparkly, silver necklace and earrings. Bob dictate my dress just for setting the mood in the morning before the meeting. I came in a little late when we knew everyone else would already be in the office. My arrival created the stir he intended. They were still getting used to the dramatic change in my appearance.\n\nThe door to the conference room was partially open. They were 20-some minutes into the meeting with Bob doing most of the talking but several of the other managers also adding some affirming comments. The topic of the meeting was the same as the one with managers. I was leaning against my workstation idly listening to the meeting progress. When it got to the part where the discussion went past the realm of theoretical and studies to the idea of implementation, the atmosphere in the room changed.\n\nI heard one of the sales guys blurt out, \"What's Patty going to say about this.\" I was sure the managers were probably having a difficult time keeping a straight-face.\n\nBob asked them not to worry about that for the moment. Did anyone have an issue with the idea? Nobody did. They would have to sign forms, everyone, protecting the company from harassment claims and complete confidentiality. Everybody agreed.\n\n\"But, Bob, what about Patty? Is she on board with this?\" That everybody, managers, and others, had the same concerns about me pleased me tremendously and reinforced the feelings I had for them all.\n\nBob came to the door and I handed him the sorted forms, harassment claim protection, and confidentiality, and returned to the meeting. I knew he would have them passed around the room, each person, including the managers, would be instructed to review them and sign them. Bob told them that as an extra-legal precaution, he was going to have me witness the signature. \"That should satisfy your appreciated concerns about Patty.\"\n\nThat was my cue. I began to get undressed. If the meeting hadn't gotten to that point of agreement, I would have stayed out of the meeting. The guys in the meeting still didn't know my participation, only that some form of sexual motivation would be involved.\n\nWhen I was down to my stockings, jewelry, and heels, I lightly knocked on the door. From inside I heard, \"Everyone signed the forms? Good.\" There was a pause. \"Everyone, keep your forms and Patty will come in to ask for your understanding and witness each one. \"Patty... we're ready for you.\"\n\nWhen I entered, I swear all the air in the room was sucked out by the men gasping all at once. I stood next to Bob at the end of the table and made direct eye contact with each of the men in the room. Except for the managers who were already privy to what we were doing, everyone had looks of shock and disbelief on their faces.\n\nBob put his arm around my waist and I comfortably leaned into him. I stepped forward and in front of Bob so I had their attention like I wouldn't have if I was standing in the corner.\n\n\"Yes, me... I know you thought of me as a nice mom-type. I also know you have noticed a change from me recently and this is why. I want to assure everyone this is wholly the result of my desires getting expressed in a mutually advantageous manner.\" They were relaxing to the idea as I received a spattering of applause and cheers with good-natured laughter. \"I can also say without question that hearing the concerns for me pleased me tremendously and reinforced my intention here.\"\n\nI reached to my right stocking top and pulled a pen from it and held it up. They all laughed. I moved to the first man, Ted, one of the designers in Marty's group. I bent over the table next him, my breast hanging and swaying slightly in the process. It was an intentional move and he looked, but, \"Ted, my eyes are up here.\" Everyone laughed, the expected nervous awkwardness slowly easing from the group. \"You signed both documents, I see. Did you understand them?\" He nodded his head. \"Do you have any questions regarding them?\"\n\nHe looked from my face to my breasts and down to my exposed pussy next to his shoulder. \"Ummmm... only... well, Bob... Mr. Hansen... he seemed to indicate we were going... I mean, are we really going...\"\n\nI leaned into him with my hand on his neck as I kissed his cheek. The entire room was silent. The question was never finished, but the question was very obvious. \"Yes, Ted. You are... as is everyone, if you want.\" I took his form to sign as the witness and said, \"Ted, you can touch now.\" He was tentative, but he reached out and cupped a breast as I finished witnessing his two documents. I then moved behind him, my hand gliding over his shoulders to move to the next man and repeated the same thing around the table, then to each of the managers standing around the room. They were a little more familiar, as I was sure the others would soon become.\n\nI finished up standing next to Bob, again. I made an elaborate show of replacing the pen in my stocking top. Bob shook his head and said to the group, \"I don't know about you, but she could have had a knife there I wouldn't have noticed.\"\n\nThe conference room was emptying but there was a big question not yet asked or offered until the youngest guy in the design group stopped the flow. He waited for Bob and me to exit the room, \"Okay, boss, so I'm just going to blurt out the question everyone else is wondering... how is this supposed to work?\"\n\nBob moved me forward with a tap on my butt. I walked into him and kissed him on the lips, his hands finding my bare back and butt. I parted our faces, \"We can go back in the conference room, your desk, or right here. Using offices or rooms will be without doors closed. Out in the open is just as good.\n\nThere is a cocky confidence in some young males and this one had it. I also recognized that he wasn't much older than my own girls. He took my hand and followed the other three designers into their open work area. Their area was an open space between the management offices and the front door where desks and tables had been arranged with computers, monitors, and reference material organized around them.\n\nOnce in the area, I lined the four of them up and went down the line kissing them. The next time, I opened their belts. When I got back to the first, again, he had his jeans open and down to his knees. This was really beginning. I knelt in front of him, pulled his underwear down and stroked his cock. It was soon growing in my hands and mouth so I moved to the next one who had his cock out and stroking it himself. The others followed suit. The line I had formed had morphed into a tight semi-circle so I merely turned to move from one to the next. When I returned to the first, again, he had removed his shoes, socks, and pants. He was in the process of pulling his shirt up over his head. His cock was hard and he encouraged me up to my feet.\n\nI glanced at the four and to the side where the managers and two sales guys were gathered to watch. I smiled, this didn't appear to be the start of improved productivity. I put my arms around his neck as he pulled me in. We kissed, then he encouraged me onto the desk. I sat down and lay back on top of the papers already spread over the surface. He spread my legs and gazed at my wet, open pussy. He slipped his cock in without any further hesitation or consideration. I moaned as his cock moved smoothly into my wetness.\n\n\"God, you're wet and feel so good around me.\"\n\nI smiled up at him. \"You feel pretty good inside me.\"\n\nHe pulled back and thrust deeper. A hard cock appeared at the side and I turned my head, one hand taking it and pulling it down to my mouth. I opened and took it inside, concentrating on the head for a moment or two before taking it deeper. He seemed content to let me suck it and I assumed he was waiting for his turn to fuck a different hole.\n\nThe guy fucking my pussy moved my legs to his shoulders and he bent them back toward me as he leaned in. He fucked me with strength, determination, and youth. It was marvelous to feel a young cock and all that energy behind it and I knew he wasn't new to fucking. I slipped my free hand between our bodies and applied some added attention to my clit. When I felt his body tense and his cock pulse and jerk in my pussy, I pressed hard on my clit to time an orgasm with his. I moaned in satisfaction as he grunted and pounded rapidly, then held himself rigid and deep inside me. His spurts were powerful and mixed his cum with the juices flooding from my orgasm.\n\nThe man in my mouth pulled out and took his place next to the man still gasping with his cock in the last throes of climax. When the other one pulled out, the next one offered his hands and pulled me off the desk. He kissed me on the lips, then turned me around and bent me over the same desk surface. I went flat on the desk, my breasts flattening on the papers. He moved his cock to my dripping pussy, coating the head with the juices escaping, and pressed his cock in. I grunted as he penetrated me completely in the initial thrust. I looked over my shoulder and found the one who had just fucked me. I called out to him. Puzzled, he came to me and I grabbed his softening cock and squirmed to the edge of the desk to suck him.\n\nOnce I had him cleaned with my mouth and tongue, I looked at Bob standing a little way off, \"Thank you for fucking me. I was told a good slut cleans the cock that satisfies her.\" Bob smiled. The young man looked shocked at first, then smiled lustily.\n\nWhen the four youngest men of the office were finished with me, all using the same desk for support, I stood on shaky legs and kissed each of them, thanking them and saying I looked forward to their cocks many times in the future. They were pulling on clothes as I remained in only my stockings, after losing my shoes during the fucking. I could feel the cum of four climaxes oozing from my pussy making my inner thighs slick with the wetness of their cum and my juice.\n\nBob walked up to our group and clapped them on the shoulders, shaking their hands. \"Well done.\" He turned to look at me but still talking to them, \"Well, guys, what do you think of our experiment now?\" They all talked at once, thanking me, thanking him, confirming the dedication and commitment they all felt to have this available going forward. Then, sweetly, they each came to me, thanked me, and kissed my cheeks.\n\nI walked with Bob back to the offices as the designers straightened themselves up and resumed working, though glancing back at my retreating ass. There was a tap on my shoulder and I turned to find one of them.\n\n\"Patty, you dropped these.\" He was holding my heels. I kissed him, again.\n\nBob patted my ass, \"I think this is going to work just fine. How are you doing?\"\n\nI allowed my hand to subtly stroke over the front of his pants and the hard cock underneath. \"I'm doing wonderfully.\" I giggled, \"I feel like my pussy is squishing. But, I am ready for next two.\" I turned to him, \"Thank you, Bob.\" He only smiled and handed me to the sales guys who took me into one of their offices.\n\nThey unbuckled their pants and dropped them to their feet. I moved in front of Jim, quickly taking his semi-hard cock into my mouth while taking Dan's cock into my right hand. I slowly stroked Dan's cock as my mouth slowly stroked Jim's. After several minutes, I switched, taking Dan's cock in my mouth and using my left hand on Jim. I moved back and forth several times until each was grunting with their arousal.\n\nI pulled back after sucking Dan, \"You want to cum in my mouth or...\"\n\nThey looked at each other as if it mattered what the other wanted. Dan said, \"The... ah 'or'. Patty, do you do anal?\"\n\nI stood up and pulled them shoulder to shoulder and leaned my naked body into them. \"Yes... as a matter of fact, I do.\" I looked from one to the other, \"You each want my ass or would you like to double me?\" I raised my eyebrow and stepped back, then walked out of the office, into my workstation, opened a drawer in my desk, and returned with a tube of lubrication. \"You guys need to shed some clothes.\"\n\nThere seemed to be a bit of uncertainty about how they were going to go about the DP, though. There were several options when in a bed but in an office? Remembering what happened the night with the managers, I arbitrarily indicated for Jim to rest against the edge of the desk while I applied lubrication to his cock, then gave him the tube as I kissed Dan. He was very generous with the lubrication, a large amount spread over my asshole, then pressed inside with one, then two fingers. He pulled me back to him and the fingers were replaced by his cock head pressing at my tight, puckered opening. Once he managed to force the head of his cock past the restriction of my sphincter, I moaned loudly and he began sawing back and forth, each time pushing his cock a little further into my ass.\n\nThis still felt awkward and I began wondering if I had it properly figured out. Jim hefted me up and sat abruptly on the desk and I sank down completely on his cock, which released a gasp from him and a cry from me. I wondered how long it would take for everyone to get used to these new sounds emanating from various rooms and locations throughout the office during the day.\n\nJim was sitting on the desktop and I was planted on top of him, my legs on the outside of his. Dan approached us while stroking his cock, his gaze shifting from my face to my crotch. He momentarily released his cock and spread Jim's legs, which spread mine even further. Dan placed his cock head at my pussy still oozing the cum of the four designers and moved it over the length of my slit. I glanced down at the obscene display and shuddered involuntarily. With a cock up my ass, my legs spread wide, and my pussy pulled open and leaking the climaxes of the previous fucks. I watched as Dan placed his cock head at my pussy, moved it up and down to locate my hole, then pressed forward. The position made it awkward, forcing him to press upward as much as forward and the presence of Jim in my ass made the fit tighter. I gasped as he penetrated me and moaned deeply as he pressed his cock deep with several thrusts.\n\nJim's cock in my ass wasn't moving much given the position he was in, but that didn't seem to eliminate his arousal as Dan's cock pressed firmly along this cock through the thin membrane separating the two chambers. The way Dan was fucking into me caused me to move up and back into Jim, which did cause him to move in my ass despite his inability to cause much of the movement himself. Dan's fucking was also angled such that his pubic bone impacted my clit with stunning regularity.\n\nI was gasping for breath as my orgasm rushed higher and higher. My own body's reaction to the fucking numbed me to what else was happening until I felt Dan thrust hard and deep into my pussy, then again and holding himself there, his body straining, his mouth releasing sharp grunts and gasps. The next thing I felt was his seed pumping into my pussy, the throbbing and jerking of his cock plainly felt in the tightness of the space. That sensation was all I needed to crest my own orgasm, my arms going around Dan's neck to hold on while Jim's arms snaked between our bodies to keep me against him.\n\nI was still shivering through the end of my orgasm as Dan pulled his cock out. I collapsed back against Jim, but he was only beginning. Our position was still awkward and he was intent on some serious fucking. He pressed forward, both of us standing on the floor at the same moment, his cock still lodged inside my ass. I looked over my shoulder almost afraid to question what he might have in mind, but it was relatively tame. Keeping us joined, cock-to-ass, he turned us around so I was now facing the desk and I bent over, supporting my body with my arms as he now had the freedom to plow strongly and deeply into my ass. My head hung from my shoulders as he thrust into me. I glimpsed an obscene sight and struggled to focus for confirmation, then groaned loudly as I recognized globs of spent cum pumping out of my pussy with each of his deep and powerful thrusts into my ass.\n\nWhen he climaxed, I joined him for another orgasm. I collapse onto the desk, papers and folders scattering across the desk and onto the floor as my body and arms flailed in the throes of orgasm.\n\n* * * * *\n\nI was refilling the second to the bottom paper drawer of the copier. I had decided to make the most of my new reputation in the office by refraining from bending my knees as much as possible when I needed to bend over. The effect wasn't lost on people. I felt fingers on the back of my thighs, which continued up and wound to the inside of my thighs to touch my pussy.\n\n\"No panties.\"\n\nI turned around to the voice. \"As one of the managers, do you disapprove, Bill?\"\n\nHe laughed, \"No, I don't, but even if I did, I would be outvoted. Could I have a word with you and Bob?\"\n\nI finished filling the copier drawer and followed him into Bob's office.\n\nBob smiled at my entrance, \"I have to say, Patty, I do like this look you have.\" After initiating the office guys into the new office motivational policy that morning, I had elected to not get fully dressed. I put my blouse, skirt, and heels back on but left my bra and panties lying on the surface of my desk. I played coy and inquired what look he was referring to. \"First off, you still have a well-fucked looked about you. But, also, your nearly unbuttoned blouse gives very nice views of your gorgeous breasts and your nipples are teasing through the fabric.\" He looked at Bill, \"I also understand your pussy has on occasions peeked out as you bent over... how was it put... indiscreetly, but lovely.\"\n\nI shrugged my shoulders. \"I figured I had been fucked throughout the office while basically naked. Too late for modesty.\"\n\nHe laughed, \"And modesty we are not encouraging, either.\" He then turned to Bill for him to lead in whatever it was he had.\n\nWhat he had was wanting a discussion about the shop. We knew we couldn't be doing this in the office and not have those in the shop finding out and we had never been inclined to try to keep it a secret. As was stated before, they are as critical to improvements as anyone. We had been at a bit of a loss, however, considering there were 20 guys out there. He disclosed that he took into confidence the three supervisors in the shop. After their initial shock of what was proposed, they were equally shocked that it was going to include the shop personnel.\n\nBob, \"Why? Why was that a shock? We've always striven to be fair... office and shop.\"\n\n\"There's a difference when cultural difference is so strongly ingrained. They know it, Bob, but it is just part of a shop guy's DNA to believe the office is thought of as more important.\"\n\nI could tell it bothered Bob. He had worked so hard to cut through the stereotypes for the betterment of the company. I broke the quiet, \"This is a positive for you, Bob.\" He looked up at me. \"Think about it. We were already going to make this company wide. Everyone. What better way to reinforce the concept of inclusivity than what we can do with this.\" I looked at Bill for reinforcement. \"Could this be the knock-out punch to the perception between office and shop?\"",
        "Bill smiled, \"Well, if not a knock-out, it will put it on the ropes.\"\n\nThat made Bob smile. He was a large, physical guy and he related to those analogies. The question, then, was how to implement it and that had always been the issue. The numbers were staggering.\n\nBill saw the hope in his boss's eyes and the sudden realization that we still didn't have the solution. He pressed forward, though, \"My talk with the supers might have the solution, though. Like I said, after they got over the shock and we started talking, the ideas became very realistic. After all, this was Patty they were thinking about. You're like everyone's sister or cousin out there. Well, not for long maybe...\", he laughed. \"So, Patty, what do you think about using two days, morning at the beginning of the shift and afternoon toward the end of the shift. There are 20 guys, so a half on one day and a half on the second, then half of those in the morning or afternoon?\"\n\nI looked at Bob and smiled, \"Five guys morning and afternoon. I did you four before and these six this morning. This will work!\"\n\nBob looked at me, \"You know, saying the numbers has me concerned. This is a lot. I understand the excitement, but... can you keep this up?\"\n\nI smiled at them both, \"Do you really think anyone is going to complain if it does become too much and I have to taper it back? It isn't like it will stop completely. It might slow down, but... in the meantime... I'm not complaining.\" They laughed.\n\nWe very quickly came up with the schedule: since Wednesday had to be avoided, Tuesday and Thursday in the shop; Monday and Wednesday in the office.\n\n\"I suppose you're wondering about Friday?\" They both nodded expectantly. \"There might be some managers getting randy by then.\" I smiled and walked out.\n\n* * * * *\n\nAt about the end of the day, Bob came up behind me and he had the designer group with him. He said they had an interesting idea going forward. I thought to myself, that didn't take them long.\n\nThey suggested since my body was going to be seen frequently, anyway, that I be given freedom to dress any way I wanted. I would need appropriate clothes to travel at least to and from work, but in the office, I could decide how I wanted to be dressed... or, as they emphasized, undressed. They suggested I could have a bra and pantie day, micro-mini-dress day, only stockings day, negligee day, etc. I could tell Bob like the idea, too. I could see another shopping trip in the near future. That new credit card was going to get a workout.\n\nBill was in Stan's office and popped his head out upon hearing the conversation.\n\n\"I couldn't help but overhear... we were talking about equal consideration, earlier... I usually come in to pick up the mail for the shop. Why don't you bring it out dressed however you are that day, but not on Wednesday.\" We all laughed. \"After we initiate them into this, of course.\""
    ],
    "authorname": "ikeman48",
    "tags": [
        "exhibitionism",
        "office",
        "group sex",
        "anal sex",
        "slut"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/office-fun-ch-04-the-office"
}