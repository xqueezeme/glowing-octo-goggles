{
    "title": "Desire Awakened",
    "pages": [
        "Catherine wandered through the noise-filled house, her heels clicking on the floorboards as the music's heady beat thrummed through her veins. She sent an occasional smile to one guest or another, raising the champagne flute clutched in her fingers in a silent toast. \n\nFriends and family filled her home to capacity, all in attendance to celebrate her husband Sean's thirty-fifth birthday. She felt undeniably alone. Her eyes met with Sean's as he took part in a conversation with his cousin and father in the kitchen. He smiled at her in acknowledgement. \n\nCatherine's heart plummeted. His smile held its usual tight edge, something she'd grown used to of late. It worried her, made her think unthinkable things about the husband she loved more than anything. \n\nThey'd drifted apart in recent times, relations between them strained. Catherine couldn't decide exactly what to do about that; she wondered if their marriage had begun an unstoppable downhill slide. \n\nShe drifted toward the glass doors, staring out into the star-filled night. A strong desire for solitude travelled through her. Clicking the lock, she dragged the sliding door open. With a quick glance over her shoulder, Catherine slipped outside into the darkness and eased the door closed behind her. She watched her step on the deck, careful to avoid her heels wedging in the gaps between the wood. \n\nHer chest filled as she drew a deep breath. She let the air out in a sigh and leaned against the wall. Lifting the flute to her red-painted lips, Catherine took a long sip and rested her head on the bricks. She swallowed and closed her eyes, fighting the wave of despair washing over her. \n\nSean wouldn't talk about it, no matter how she approached the subject. He'd grown cold toward her in bed, had become distant during their waking hours. Oh, he was always polite, always treated her with respect, but there was an invisible barrier between them preventing any real closeness.\n\nIt hadn't always been this way. They'd shared some passion, Catherine thought - in the beginning. But even then it had felt strained, like he was holding back from her. She'd never been completely sure if that was normal, if all couples reacted that way to each other. Sean had been her first lover, her only lover. She had nothing to compare their relationship to.\n\nCatherine opened her eyes and stared into the blackness, appreciating the alone time, a moment away from the festivities to pull herself together. It was all too much trying to perfect the fa\u00e7ade of happiness, smiling when she really just wanted to cry.\n\nHer heart thumped when the glow of a cigarette brightened the gloom. She strained her eyes and gasped. \"Who's there?\"\n\nA deep, rasping chuckle sounded in the dark. It sent a thrill running through her. \"Cat, it shouldn't be too difficult to work it out. I'm the only smoker left in this whole godforsaken family.\"\n\nShe rubbed a hand against her heart, blowing a relieved breath through her lips. \"Jack.\"\n\n\"Uh, huh. Pull up a chair. Keep me company.\" The scrape of metal chair legs pierced the silence. \"Tell me what's wrong.\"\n\nCatherine picked her way through the darkness. She thought about leaning back inside to flick the light switch, but somehow the idea of anonymity appealed to her more. \"What makes you think anything's wrong?\" She set her glass on the table and settled into the chair beside Jack. Sean's brother, younger by two years.\n\n\"I'm not blind, Cat. You're upset.\"\n\nHis deep voice soothed her, his understanding reaching inside to tug on her injured heart. The smell of cigarette smoke wafted around her. She found the scent calming. \"It's Sean.\"\n\n\"What's going on?\"\n\nCatherine sent him a look. Having grown accustomed to the night, she could now make out his relaxed features - always relaxed and affable - as he watched her in the dark. \"We're having problems.\"\n\nHis smile lit up the murky night before he inhaled again from his cigarette. He blew the stream of smoke out, lifting his chin to keep it from trailing into her face. \"What kind of problems?\"\n\nCatherine watched him. Her eyes passed over his black hair, gleaming in the moonlight. His dark eyes shined with amusement. His lips quirked with a hidden smile. She found his humour puzzling. \"He doesn't want me anymore.\"\n\nJack chuckled again and the deepness of the sound - the rumble it made in his chest - both excited and infuriated Catherine. \"Whatever problems you're having, that's not one of them.\"\n\nShe took another long drink of her champagne and twirled the glass between her fingertips. Catherine had no-one to talk to about this. No-one she trusted enough to share her problems with. She felt alone. \n\nIf there was one person who would understand, she guessed it would be Jack. He was honest and forthright. In all the time she'd known him, fifteen years now, she'd never picked up on any insincerity in him. She took a breath and decided to share her thoughts on the subject for the first time. \"We're not having...\" Oh, it was more difficult than she'd expected, voicing her deepest concerns, \"We're not\u2014\"\n\n\"Fucking?\" Jack raised his brows expectantly. \n\nCatherine's mouth pursed. \"Do you have to put it like that?\"\n\n\"What do you want me to call it? Making love? Having sex?\" Jack dragged on his cigarette one last time and crushed the light in an ashtray on the table. \"It's fucking, Cat.\"\n\nCatherine released the glass from the tightness of her grip and hid her face in her hands. Brash talk unsettled her. She'd grown up in a strict household where such things were never discussed. She'd attended a private girl's school run by nuns. Crude words were not and never had been a part of her extensive vocabulary. \n\nSeveral breaths later she peeked over the tops of her fingers and scowled at the look of amusement on Jack's face. He lounged in his chair, the top two buttons on his white shirt opened to display his tanned chest. He was all confidence and relaxed male sensuality; the main reason she'd steered clear of him in the beginning and gravitated toward his more refined, politer, blonder brother. \"We made love on a regular basis until recently. I've been wondering lately if he's....\" Catherine's voice trailed off as tears clogged her throat. \"I've been wondering if he's cheating on me.\"\n\nJack's eyes remained fixed on hers, overwhelming in their intensity. \"He'd never cheat on you.\"\n\n\"How do you know that?\"\n\n\"I know him. He loves you. He'd never do that.\" \n\nJack reached his arms above his head in a long stretch, drawing Catherine's attention to his hard stomach and the tight column of his throat. He tipped his head back to stare at the inky sky. She wondered why his appearance had never particularly appealed to her in the past. He had an aura of raw sexuality, a bold confidence that had a trail of women lusting after him, yet she'd been attracted to his more polished older brother. \"I thought I knew him too. Things have changed.\"\n\nJack lowered his arms and dangled them over the back of his chair. \"You've been married ten years. Things are bound to change.\"\n\nCatherine sighed. She couldn't describe the feeling properly. She was too close to it. \"He's not interested in me anymore.\"\n\nHe took his time looking her over. A smile tilted the full line of his mouth. \"I'm pretty sure that's not an issue.\"\n\nHeat flooded her features. \"Stop looking at me like that. It's inappropriate.\"\n\nJack's low laugh sounded in the silence. \"I'm just trying to take a step back and see you as any man would.\"\n\n\"Oh?\" Catherine couldn't stop the feeling of curiosity that washed over her. Just how did other men see her? She'd always been pretty sure they didn't look at her at all. \"What do you see?\"\n\n\"Hmm...there's a question.\" Jack scraped a hand down his face, the gesture failing to hide a smile. He met her eyes and she saw honesty shining there. He watched her a moment longer and his expression turned to one of tenderness, sweeping over Catherine until she felt it like a blanket of warmth. \"What do I see? Full lips and glossy hair the colour of wheat, long enough to sway across a great pair of tits. Want me to go on?\"\n\nCatherine crossed her arms over the offending breasts. \"Can you try to keep it clean?\"\n\nJack grinned, the brightness of his smile a shocking contrast against bronzed skin. \"Oh, believe me, I am.\" His fingertips tapped against his stomach. \"I see kind eyes and a sweet smile, and when we're done talking and you walk away, I'll see a tight little ass in that skirt.\"\n\nCatherine's lips twitched. She forced the amusement down, knowing he was only goading her into good humour to push away the sadness he'd seen in her eyes. \"Thank you.\"\n\n\"You're welcome.\" \n\nSilence lingered a while, though it wasn't unpleasant. Catherine heard the sound of a frog plopping into the pond bordering the deck. A cricket chirped in the garden bed and a feeling of peacefulness settled inside her. \n\nTalking with Jack had planted a little seed of confidence in her, had given her hope. She'd work this out with Sean. She had to. Her love for him was too great to let him walk away, to let him continue distancing himself emotionally. They'd talk after the party and set things straight. Life would get better.\n\n\"Take off your panties.\"\n\nCatherine's attention snapped to Jack. The roguish gleam in his eyes set her on edge. \"What did you say?\"\n\n\"You heard me. Take 'em off.\" \n\nShe tried to stand up, to stalk way, but his eyes speared her, held her motionless. \"Why?\"\n\n\"An experiment.\" Jack reached for his pack of cigarettes, drew one out and lit it. His eyes stayed on hers as he exhaled the first breath of smoke. He waited. \n\n\"I'm not removing my underwear.\"\n\n\"Proves my point.\" \n\n\"You have one, do you?\" Catherine glanced in the direction of the sliding doors, expecting Sean to materialize any second and catch her in a conversation far too intimate to be having with his brother. The party continued on, the guests oblivious to her disappearance. \n\n\"You can't act like a bad girl unless you feel like one.\" Jack watched her closely, amusement warring with kindness to create the most appealing expression on his rugged face. \n\nCatherine realised then that he wasn't trying to seduce her or encourage unfaithfulness to her husband. He was attempting to help her. She fought it though, as she fought every decision when someone else tried to convince her it was right. \"Who says I want to feel bad?\"\n\nA quick grin flashed across his face. He leaned back in his chair and took another drag. \"Men like it. Take my word for it.\"\n\n\"Sean, too?\"\n\nJack nodded. \n\nCatherine closed her eyes against the knowledge that her husband wasn't satisfied with her. Why did she have to change to make him happy? Why wasn't she enough?\n\n\"Take 'em off, Cat. Live dangerously.\" Jack released a husky chuckle. \"I'll even close my eyes.\"\n\nIre burned inside her and a blush crept up her neck. She wanted to wipe that self-satisfied smirk off his face. She wanted to show him he couldn't embarrass her with the sexual undertones in his voice. Catherine sucked in a breath and pushed her chair back. She kept her eyes on him as she stood and hiked up her beige pencil skirt. It reached to her knees and the material fitted around her thighs like a second skin. \n\n\"Want me to look away?\" Amusement coloured Jack's voice. \n\nCatherine forced herself to meet his eyes. \"Only if you're shy.\" She ignored the low laugh that escaped him and struggled with the skirt to lift it high on her thighs.\n\n\"Want some help?\"\n\nCatherine narrowed her eyes and growled at him, hooking her thumbs beneath the edges of her cream-coloured lace thong. She dragged the flimsy fabric down her legs and stepped out of it. \n\n\"See, now that's sexy, Cat.\" Jack's eyes dropped from her face to her legs, thoroughly entertained by the show. \"You're eyes flash when you're angry. It does amazing things to your face.\"\n\nCatherine ignored the fire his words ignited in her. She twirled the thong around her finger. \"What do I do with this now, oh wise one.\"\n\nJack grinned and propped the cigarette in his mouth, speaking around it. \"Give it here.\" He held out his hand, palm facing upwards, fingers wiggling in encouragement.\n\nBefore she had the opportunity to think her actions through, Catherine's hand reached out with a will of its own, dropping the tiny bundle of lace in his. Her mouth gaped when he fashioned it into a slingshot and launched it into the darkness of the garden. A shocked laugh tore from her. She clapped a hand over her mouth. \n\n\"Now,\" Jack pulled the cigarette from between his lips and regarded her with shining eyes, \"Sit back down and flick a few buttons open on that blouse. You look like my fucking mother wearing buttoned-up beige.\"\n\nGlee spread through Catherine, overshadowing her surprise at his taunts. The freedom of being out in the garden, uninhibited, with a man she held a great affection for, was nothing short of exhilarating. She'd never felt so carefree before. \"One button?\"\n\nHe held up three fingers, silent in his appraisal as her hands went to work. \n\nWhen she'd finished the cool night air caressed the tops of her breasts. Catherine's eyes shifted down to examine the sight. Her breath caught in her throat. Cream lace peeked from the open vee in her blouse, the valley between her breasts clearly visible. Her skirt was still bunched around her thighs. Her nipples hardened and warmth spread through her.\n\n\"You're getting turned on, aren't you?\" Jack's knowing voice sent a streak of pleasure through her.\n\nCatherine's eyes shot up to meet his. The connection was more powerful than any she'd experienced before. She didn't want him as such, she wanted the feeling he brought alive within her. If she was being honest with herself, Catherine would have preferred Sean to walk out the door right then, take her hand and lead her inside to finish what Jack had started. \n\n\"Mess up your hair.\"\n\nHer mouth opened to voice a protest, but she shut it again and did as he asked. He seemed to know what he was talking about, and for once in her life she was going to just do what she was told. Her fingers slipped through her silky strands, ruffling the carefully straightened mass of blonde until it became a tousled halo around her head.\n\nJack made a small hum of approval and leaned over to extinguish his cigarette. \"Now Cat, you look like a woman a man might want to fuck.\"\n\nHer stomach churned with his admission. She knew him, knew him well enough to realise he wasn't making an offer. Jack was too good a man to pursue his brother's wife. She watched him with appreciation in her eyes. A slight smile shaped his mouth, encouraging a responding smile from her. Catherine could feel lightness in her chest that hadn't been there before. \"Are you done now?\"\n\nHe shook his head slowly, his eyes flicking briefly to the glass door before returning to hers. \"Spread your legs.\"\n\nNow that was taking things too far. Catherine's stomach lurched at the idea. Her knees clamped together in unconscious reaction. \"And do what, Jack?\"\n\n\"Trust me, sweetheart.\" \n\nShe wanted to cry at the tenderness of the endearment. She wanted to bask in the weight of his gaze a little while longer then throw herself in his arms to hug him, thank him for awakening this feeling inside her. \n\nHe seemed to understand her intentions and nodded toward her legs. \"Do it.\"\n\nWilling herself to forget everything she'd ever been taught, Catherine forced her legs to part under the table. Brisk air invaded her inner thighs and she could feel moisture gathering there.\n\n\"Touch yourself.\" \n\nHer worried eyes returned to Jack's. The warmth in his gaze softened the complete seriousness of his expression. \n\n\"I...I can't do that.\"\n\n\"Have you ever?\"\n\nCatherine's face bloomed with colour as she shook her head. \n\nJack released a part laugh, part groan. He looked her over. \"Jesus Christ. What's my brother been doing with you?\"\n\nHer eyes clouded with hurt. It hadn't been all Sean's fault. She was too straight-laced to do anything other than missionary position, or sometimes, if he pushed her, she'd climb on top and straddle his body. He'd wanted more, she could see it in his eyes, but he'd never persisted, never tried convincing her. \"You're laughing at me.\"\n\nThe amusement left Jack's eyes and he raked his hands through his hair. \"I'm not. I'm just surprised.\"\n\nCatherine thought about closing her legs, putting an end to all this. She teetered on the edge of control, wanting to touch herself as he'd suggested, but needing him to tell her again. It had to be someone else's decision.\n\n\"Let's start with something less intimate. Slip your hand inside your bra, Cat. Cup one of those tits.\"\n\nCatherine hesitated a moment. Her fingers twitched in her lap, then rose slowly to her opened blouse. She unhooked the front closure of her bra and slid her fingers inside, working them under the heavy weight of her breast. She closed her eyes at the sensation. \"Ahh...what next?\"\n\n\"Look at me.\" Jack waited until he had her attention. \"Keep your eyes on me, sweetheart. Eye contact's good.\"\n\nCatherine watched him as she kneaded her breast, feeling her nipple pucker beneath the lace. Her cheeks heated under his gaze. She forced herself to continue watching him. \n\nJack groaned and shifted in his seat. \"Cat, baby, you're every man's wet dream.\" His eyes blazed with heat and a muscle worked in his jaw. \"Slide your other hand down between your legs.\"\n\nCatherine fought the ingrained need to rebel against his request, to put such a private moment on display. Her fingers hovered at her thigh, running lightly over silky flesh. She pleaded with her eyes for Jack to retract his request, to let her go, but another part of her begged him not to. He smiled and shook his head. \"Uh, uh, Cat. Slip your fingers into that heat. I want to see you come. If you won't do it, I'll get under the table and use my tongue.\"\n\n\"Oh, God.\" The idea of him doing just that shocked and thrilled her. A rush of longing swept through her, swelling and spreading. Catherine's fingers moved to her inner thigh, teasing her senses, making her want. It was hard to push through the mental barrier she'd constructed for herself over the years, but when she experienced that first sliding touch of soft fingertips against the inner lips of her vulva, the sigh that broke free was guttural. She stroked the moist flesh once, twice, feeling tingles shiver and travel throughout her body. Her head tipped back on her neck, her fingers increasing pressure as they sought out her pleasure point. When they reached their intended target, Catherine's hips jerked.\n\nJack groaned at the sight, leaning forward to capture her chin in his hand. Her glazed eyes shifted and refocused, fixing on his. He smiled gently and released her. \"Keep looking at me, sweetheart.\"\n\nCatherine pushed her blouse aside, then her bra, baring her breast to Jack's hungry gaze. Her fingers pinched at the pale pink nipple, plucking it to an erect point. Her other hand continued its ministrations down below. She worked her fingers over her clit then slipped them deep inside her heat. Her musky sweetness drifted on the night air. Her hips began writhing on the seat. Jack's breathing increased in tempo.\n\nShe watched him rein in his tight control, watched the hard strength of his face as he fought the natural progression to drag her onto his lap and sink inside her. She knew what this cost him. It heightened her desire. Catherine increased the pressure on her clit, gripping her breast tightly. She could feel it building inside her, the sensation she'd been denied for too long. Her legs spread wider and her hips thrust upward against the stroking of her hand. \n\n\"That's it, Cat.\" Jack leaned back in his chair, his face tightened against the need all but consuming him. Catherine's mouth softened and parted. She slipped her fingers inside and pressed back harder into the chair. She raised one leg and propped her foot on the seat, baring all her secrets to Jack's darkening eyes. \"Oh, fuck, Cat.\" He placed a hand over his erection, rubbing it through his black dress slacks. His eyes never left hers, their intensity shocking and calming simultaneously. ",
        "Catherine's breaths grew shallow, panting from her open mouth. Her stomach clenched against the shots of pleasure sparking through her. \"Oh...\"\n\n\"Are you coming, honey?\" Jack's voice grew thick and a groan rumbled in his chest.\n\n\"Oh, yes...I think...\" Catherine arched her back and pinched her nipple hard. She pressed against her clit, moving her hips in time with the stroking of her fingers. Jack's eyes connected with hers as she pushed herself through that final barrier. \n\nBreath caught in her throat and she threw her head back, thrusting her breasts out, gasping as spasms racked her body hard. Her fingers continued to stroke, bringing on tiny aftershocks that left her shuddering and weak. She'd never felt an orgasm so intense, and sobbed with the release. \n\nWhen her senses returned, Catherine lowered her eyes to meet Jack's again. She sighed breathlessly at the softness of his expression, at the affection in his eyes. She shifted her legs and repositioned her skirt to cover her nakedness. \n\nJack watched her in silence, his eyes taking a slow tour over her, from her mussed hair to the tips of her heels. His mouth finally quirked in a smile. \"You're one sensual woman, Cat.\"\n\nShe could see his erection still painfully filled out his trousers. Her mind began to wander as she mentally ticked off all the single women in the house who'd be more than happy to take care of that for him. She had more important things on her mind; a man she loved and needed to seek out. A man she needed to drag away from the party. Her voice filled with regret and promise as she spoke. \"I'm so sorry, I have to go.\" \n\nHe chuckled and reached for his cigarettes again. \"I know.\"\n\n\"Thank\u2014\" Tears flooded her eyes and she blinked to set them free. \"Thank you. I mean that.\"\n\n\"You just make sure that brother of mine looks after you.\"\n\nCatherine stood, fastened her bra and re-buttoned her blouse. She glanced inside to see if she could locate Sean. Her need for him hadn't diminished with the physical release Jack had encouraged from her. It had only grown stronger. \"I will.\"\n\nShe and Jack contemplated one other in silence, an understanding between them. A poignant moment both knew would never happen again, would never be spoken of. Sadness crept through Catherine, but at the same time she felt like he'd set her free from the confines she'd placed on herself. \n\nIt was time to explore this new side of her, time to see if she could work on making amends with her neglected husband. He deserved it. And so did she.\n\nShe gripped the door handle and looked at Jack one last time. \"I owe you. So much.\"\n\nHe waved away her admission and pointed to the door. \"Inside. Now.\"\n\nShe smiled and ran a hand through her tangled hair. \"Are you coming with me?\"\n\nJack shook his head and released a breath of air through his nose. \"Fuck no. I need a smoke after that.\" "
    ],
    "authorname": "__Lisa__",
    "tags": [
        "female masturbation",
        "brother in law",
        "exhibitionism"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/desire-awakened"
}