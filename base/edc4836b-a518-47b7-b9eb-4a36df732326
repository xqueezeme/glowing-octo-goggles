{
    "title": "Mark of the Incubus Ch. 05",
    "pages": [
        "\"Are you serious?\" Michelle gasped. Michelle and Agnes worked side by side that next morning. She had told her friend about James's lustful advances though her reaction was less excited. They were taking a smoke break outside the diner by the dumpster sitting on old plastic lawn chairs that were older than they were.\n\n\"What?\" Agnes became defensive. \n\n\"I'm just shocked that you would let him just finger bang you outside your house,\" Michelle insisted. \"What if your mom saw you?\"\n\n\"No one was home,\" Agnes explained, her cheeks flushed with irritation. \"Though the dreams...\"\n\n\"What dreams?\"\n\nAgnes took a long drag of her cigarette. She had often tried to quit but then a few years ago gave up on giving up. Bring on the cancer. She couldn't masturbate her stress away. Agnes would get carpal tunnel by the time she was 30. Smoking was a better option. \n\nAfter taking a relaxing exhale, watching the toxic smoke cloud over head Agnes told Michelle about her erotic yet violent sex dreams about James Abel. After she had finished Michelle was silent. Usually Michelle would be more vocal about Agnes's wet dreams but this one left her still which was more disturbing. \n\n\"What's wrong?\" Agnes couldn't take the silence anymore. \"Aren't you going to say something like 'Damn, girl, you're into S&M?' or something?\" \n\nMichelle put out her cigarette, her olive green eyes dimmed. The color had suddenly drained from her face when she said, \"That ritual totally worked.\"\n\n\"Oh come on,\" Agnes rolled her eyes. \"Sex dreams don't mean anything.\"\n\n\"Think about it! We do that sex ritual and the next day some hot guy shows up.\"\n\n\"Michelle...\"\n\n\"When has a hot guy ever come in to Paradise Falls? The good ones always get out of here the minute they graduate.\"\n\nMichelle had a point. Deep down Agnes knew she was right but she wouldn't say it out loud. Sometimes Agnes was more like her mother than she cared to admit. Like Mary, Agnes would deny the truth of things even when confronted with all the facts.\n\n\"I don't know if we summoned him or not but those dreams might be a warning,\" Michelle stood up, brushing some stray ashes from her waitress uniform. \"I'm going back in. I'll do some research about this ritual we did after work. Just promise me you'll stay away from Pastor Abel until I figure this out.\"\n\nAgnes felt numb inside at the idea of staying away from this sexy, hot, mysterious guy that gave shattering orgasms both in her dreams and when she was awake. Nevertheless, Agnes nodded in agreement. When Michelle walked into the diner, Agnes's hand went to her chest where the hand print was left by that shadowy figure. That entire area of flesh was like pins and needles. Those pins and needles sank below the skin piercing her heart. The cigarette smoke writhed as it rose from the burning embers.\n\nAgnes couldn't bring herself to reveal the whole truth. That Agnes enjoyed it when James attacked her. The way he took her also with tenderness. It was sick to admit that she loved the violence. She loved the dark feelings James aroused deep within her. There was a tether between them. \n\nAn unbreakable chain that may choke the life out of her but she was slowly suffocating for a long time before James. Dying a slow death of every day mundane life with the people of her life like little parasites that sucked her dry. James was like a savior to Agnes. But Michelle was her best friend. She would at least try to keep her promise. \n\n***\n\nSadly Agnes couldn't keep her promise. Mary had invited Pastor James Abel to dinner. Sunday dinner with Agnes's whole messed up family. She would rather have nailed her tongue to the tree outside and wait for lightning to strike. Yet Agnes wanted to see James again.\n\n\"Agnes?\" Charlie knocked. \n\n\"I need your opinion,\" Agnes let Charlie in, hurrying him inside. She held up two dresses. Both were modest. The red one though allowed for some cleavage while the other was a yellow dress that made her feel like she was 10 years old. \n\n\"Red is your color,\" Charlie scratched his chin. \n\n\"You think I should add that golden cross? It is the Pastor and all.\"\n\nCharlie raised an eyebrow in amusement. \n\n\"What?\"\n\n\"You've been really weird lately,\" Charlie accused his older sister.\n\n\"What do you mean?\"\n\n\"Like you're having scandalous sex,\" Charlie tilted his head. \"Or are you just masturbating everywhere...\"\n\n\"That's gross. I'm going with the red one.\" Agnes threw on the red dress that made her breasts so round and appetizing. She also added a simple Christian gold cross. The cross rest snuggly between her ample cleavage.\n\nCharlie shrugged then plopped onto Agnes's bed flipping through a trashy magazine that was at least 2 months old. They never got much Us Weekly in Paradise Falls but Louis's wife Carol loved to bring some to show the Miltons what the outside world was doing. Charlie fixated on a page with a shirtless Hugh Jackman at the beach.\n\n\"I'll find out,\" Charlie winked. \"You'll see.\" \n\n***\n\nMrs. Vanhorn was watching TV. She loved to watch FOX news like it was a new gospel of truth. The rest of them helped decorate the long table with fine china that Mary only put out for very special guests like Louis. Frank couldn't keep his mouth from salivating over Agnes's ample breasts as they budded out of her red sun dress. Mary gave Agnes one of her famous nasty looks of \"Really? You're wearing that, slut?\" as Frank leered at her with more gross intensity that made Agnes want to puke. \n\nUsually they would have a screaming match about it but the Pastor came early. But Agnes could already feel his presence before he rang the bell. She was getting used to the burning hand print as if it were just 20 mosquito bites. Still irritating but not as painful as a burning iron. \n\n\"Pastor Abel!\" Mary squealed like a child at the sight of their new Pastor who wore casual clothes. Just a pair of blue jeans, a navy blue shirt and a black dinner jacket. Agnes actually winced with embarrassment. Agnes watched Carol's face redden at James's touch. Carol was Louis's vain wife. Agnes suspected that Carol flirted on a regular basis and perhaps did more than flirt... She married Agnes's brother the minute Louis won the lottery. Carol wanted to wear all the designer brands to show off her wealth. \n\nThen James's eyes settled on Agnes. Those dark pools raked across Agnes's body sending delicious chills climbing up her spine. That scene in the car still played freshly in her mind. \n\n\"What a lovely dress, Agnes,\" James smiled broadly. \"Red is your color. Goes with those dark indigo eyes of yours. And the cross...\" James touched the cross, feeling it between his two fingers admiring the golden sheen. Agnes's heart fluttered as she felt James's hand brush her skin. A surge of electricity surged through her making Agnes's heart jolt with new life.\n\nJames took Agnes's hands into his looking deep into her eyes, her very soul. Agnes felt weak in the knees. No one else mattered until Mary gave a loud cough wanting attention turned back to her. \n\n\"Let's sit down and eat,\" she said.\n\nFrank glared at James as the Pastor offered Agnes his arm. \n\n\"Milady,\" he joked. Agnes chuckled. \n\n\"Handsome and funny,\" she said. \"God doesn't make them like you anymore.\"\n\n\"Absolutely not,\" James winked.\n\n***\n\nThey all sat down to dinner with James sitting right next to Agnes. Louis's 4 brats sat at the kids table throwing food at each other getting it on the floor more than on each other. Just as they were saying grace, everyone bowing their heads Agnes felt James's warm strong hand on her thigh, messaging it making her nipples harden and her cunt moisten. He wasn't bold enough to do this again? But the idea was exciting. Perhaps Michelle was right. Inside Agnes was a exhibitionist. \n\nAfter they said grace, James didn't move to stop. He kept messaging her thigh sending waves of pleasure to Agnes's pussy. \n\n\"I wish Louis lived in town but he's a business man,\" Mary boasted of her golden boy. \"He needs to go where the action is.\" \n\n\"I got people knocking down my door wanting to invest in my business,\" Louis shrugged though he was beaming. Agnes wanted to punch him. But all she could focus on was James's hand on her thigh as it inched higher. \n\n\"You run an investment firm, Louis?\" James asked never missing a beat. \n\nAgnes shifted in her seat, trying to appear normal as Abel began rubbing her through her now wet sheer panties that she wore just for him. \n\n\"I do,\" Louis piled some mashed potatoes on his porcelain plate. \"I could go into detail but I don't want to bore anybody.\" \n\n\"He's such a catch,\" Carol beamed. Her short brown hair shined in the lamp light. Carol was a pretty woman but she was just as shallow. She's obsessed with staying thin but refused to take birth control so ended up in a cycle of diet pills, antidepressants mixed with mimosas and botox. \n\nAgnes bit her lip as James moved nimbly past the fabric and into her heated core pulsating with lust. Agnes sucked in her lips to suppress her sounds of pleasure as like a maestro James conducted a symphony between her wanton loins. She was shocked that no one noticed her reactions. But her family were too absorbed in their own business to care about her. \n\n\"So, Charlie?\" Louis diverted attention to their baby brother. \"Any new girlfriends this week?\"\n\nCharlie shrugged focusing intently on his roast beef and mashed potatoes. \n\n\"No one special,\" he sighed. \"I like to keep my mind on my grades.\"\n\n\"He's a chick magnet this one,\" Louis boasted to the Pastor who's eyes were absorbed in the conversation but whose hands were equally intent on driving Agnes mad with passion. \"Just like me. Following in his big brother's foot steps.\"\n\n\"Charlie gets the best grades in school,\" Mary gloated about her other son. Perhaps if Agnes were a boy Mary would be less nasty. \n\nAgnes popped a piece of steaming carrot into her mouth as James rubbed against her budding clit. Agnes accidentally made a moaning sound.\n\n\"Something the matter, Agnes?\" Mary shifted focus to her daughter who was making odd noises though never joining a word of the conversation. \n\nAgnes startled opened her eyes to see all eyes on her. James ceased what he was doing to Agnes's chagrin. Agnes flushed, her heart suddenly seemed to stall. \n\n\"I'm not feeling well,\" Agnes excused herself from the table despite her mother's mean looks. \n\nJames stepped in, \"These carrots really are delicious, Mary.\"\n\nAgnes's mother smiled pleased to have pleased the new pastor, getting some heat off of Agnes. She made her way to the bathroom down the hall. Little Louie, her bratty nephew, barred her way. He held onto his Captain America action figure as he judged his weird aunt Agnes.\n\n\"Move,\" she ordered. \n\n\"You look funny,\" Little Louie tilted his head. \"Your cheeks are red.\" \n\n\"I may have a stomach flu,\" Agnes pushed pass Little Louie who eyed her suspiciously.\n\n***\n\nAgnes splashed cold water on her face hoping it would cool the fires of lust that burned inside of her. She looked at herself in the mirror, admiring her red dress. She heard everyone outside. Louis regaling everyone with his stories that they've heard a thousand times. Suddenly the door opened and Pastor James appeared. He quickly shut the door securely locking it behind him. \n\nAgnes whirled around, the hand print on her chest burning as if freshly applied. She gripped the porcelain sink to steady herself as her knees weakened while her nipples hardened and puckered.\n\n\"James...,\" Agnes spoke his name in a breathless whisper. As if he were lightning itself James lunged forward and attacked Agnes with his mouth. He assaulted her mouth with tongue thrusting kisses, exploring every aspect of the dark wet cave while his hands roved over her curvy body. He pressed her to him as if they would become one body. \n\nAgnes surrendered to her desires as she threw her arms around James's neck and began backing up against the wall. James broke the kiss only to bite the luscious mounds of her ample breasts. His hands quickly reached under Agnes's dress almost tearing her panties off.\n\nJames seductively dragged Agnes's already moist panties. Licking her sticky thighs with his rough tongue, tasting the cum that slid down them with relish. \n\n\"I could smell your arousal before I even stepped through the door,\" James growled as she kissed and caressed her supple thigh. \"It was all I could think about.\" James pushed Agnes's dress up over her hips revealing her delicate flower that was dripping with nectar. \"Do you know how hard it was to concentrate with that smell in my lungs?\" Agnes bit her lower lip like a minx. \"I could almost taste it...\"\n\nJames licked Agnes's wet swollen lips. His mouth on her pussy was enough to send Agnes over the edge. Feeling his rough tongue along her slit. She covered her mouth to muffle her cry of pleasure as James began nibbling on her rosebud. Then he sucked it as his fingers dived into her fleshy folds, pumping in and out of her passage making Agnes's muscles clenched.\n\n\"So tight,\" James purred. Agnes tried to take steady breaths. Try stay zen but every now and then an erotic groan escaped her lips. James sucked and nibbled Agnes's clit as she worked his fingers inside of her. Just when Agnes was about to come a knock came to the door. Agnes's insides locked up.\n\n\"Everything ok in there?\" \n\nDamn it, Mary! But James's fingers didn't stop their work. Agnes covered her mouth afraid that even her ragged panting was becoming too loud. \n\n\"Fine, Mary,\" James called calmly. How did he do that? Swing back and forth between a lustful wild animal to a composed civilized member of society. \n\n\"If you need anything just ask,\" Mary called sweetly. \"And if you find Agnes tell her to come down stairs.\"\n\n\"I will,\" James looked up at Agnes, his dark eyes full of sin. He rose up roughly turning Agnes around to face the wall. Her breasts pressed against the warm wood, her heart pounding and blood racing as she felt James's maleness pressed against her.\n\n\"My bitch in heat...,\" James whispered joyfully as he pulled Agnes's dress up further, his hand cupping and squeezing her full breast eliciting a moan from her sinful mouth. \"Shhh we don't want them to hear us,\" James pinched her nipple. Agnes pushed back, rubbing her ass right into his burning crotch wanting him to ram his cock inside of her.\n\n\"Then by all means,\" Agnes whispered as she touched his face, loving the feel of his sexy stubble. \"Stop what you're doing because if you keep touching me down there then I won't be able to control my screams.\" Agnes planted a burning kiss on the iniquitous pastor's lips. She opened her mouth to allow James's tongue to seek out hers. Agnes felt elated when she felt his hand begin to message a circle around her erect clit. \n\n\"Cover my mouth,\" Agnes advised. \"Then I want you to thrust into me until neither of us can walk.\" James ceased messaging Agnes's swollen, sensitive nub. He smiled and quickly unbuckled his pants setting free the monster that ached to be buried inside Agnes's pink sheath. He wrapped his arm around her waist to hold her in place.\n\nThen without much ceremony he plunged his rod into Agnes who cried out at the sudden pain. James covered her mouth trying to fit his whole cock deeper within. Agnes's stifled cries became muffled moans as James thrusted. Holding onto her hip while keeping a hand on her mouth, James pumped faster. He loved the feeling as her inner muscles squeezed sometimes locking around the shaft, holding it in place while Agnes relaxed her muscles again releasing the rod as she prepared for the next onslaught. James huskily breathed into Agnes's ear as he groaned her name.\n\nAgnes began playing with her clit to make herself come faster. As she did so James was fast approaching his own climax. His thrusts became rapid until Agnes felt his hot seed shoot into her womb. The hot liquid seeped down her leg as they remained locked, waves of pleasure crashing over them like ocean waves. James imprinted gentle warm kisses on Agnes's neck as he began to soften then slip out of her. Yet James stayed a little longer burying his head into Agnes's nape. He breathed her rustic scent tempered with the scent of her lust. It smelled of country linen, soil, and daffodils. \n\n\"You smell so good,\" he groaned into her back. James moved her long dark hair away. It felt like sable. Agnes didn't want this moment to end. She wanted to stay there in that small bathroom instead of going out into that hot, humid, sticky world where Louis was the golden boy, with Frank the filthy pervert and Mary the bitch that emotionally and verbally abused her 24/7. \n\n\"I wish it would rain,\" Agnes whispered. James kissed her ear, nibbling on her earlobe sending a delicious shudder through her body. \n\n\"As you command...\"\n\nAgnes eyed him in confusion but once James pressed his hot lips to her neck she didn't care.\n\n***\n\nThat night as she tossed and turned in the sheets Agnes thought about dinner. It wasn't a total loss. Agnes closed her eyes picturing the rain in her mind, imagining it's sound as it tapped against the window, as it blessed the dry earth after months of drought. Just as she was picturing it all the sound became real... the sound of hitting her window pane. \n\nAgnes sat up then ran to the window. She flew open the shutters and held out her hand to make sure it wasn't a dream. Rain. Cool, wet, sweet rain. Even the smell was real! Agnes put her head out the window, turned around then lay back on the ledge, arms outstretched allowing the rain to cool her sweat caked body. The water felt so nice on her flesh. She didn't care if she fell out the window. Dying or being crippled would have been worth it. \n\nAgnes suddenly heard familiar whispers. Whispers of a language she didn't understand. The hand mark on her chest began to glow. She drew in a sharp breath at the pain. Agnes turned over and saw a dark figure standing under the tree just below her bedroom window. \n\nRight by the wooden swing a dark figure stood very still. So still Agnes thought it was just part of the tree until through the darkness and the rain she could make out the stranger's face. Then in a flash of lightning for a split second that lit up the darkness Agnes's heart froze in her chest as she saw that it was Pastor James Abel staring up at her with his devilish handsome face. The pain subsided and glow disappeared but the rain continued to fall.\n\n***"
    ],
    "authorname": "ErosinaScarlett",
    "tags": [
        "demons",
        "magic",
        "incubus",
        "m/f",
        "erotic",
        "romance"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mark-of-the-incubus-ch-05"
}