{
    "title": "Seven Nights A'Dippin'",
    "pages": [
        "I'll be the first to admit I used to be something of a prude when it came to nudity. I guess it was just how I was raised, which was probably typical by most middle American standards. But things can change and sometimes that change can be pinpointed to a specific, formative event in one's life. \n\nIn my case, that formative event took place over seven nights, and it's a story worth sharing.\n\n#\n\nNight 0 (vs. the Stakes)\n\n\"Bow before me, your Queen of Bear Creek!\"\n\nI rolled my eyes at Becky's pronouncement, made while perched atop her boyfriend (and my best friend) Chuck's shoulders. The blonde held her arms wide as if accepting the applause of a crowd, one that didn't exist.\n\n\"Sorry,\" I muttered to Eve, my partner in our losing effort at playing chicken in Becky's backyard pool. Unlike the other two, and much to my chagrin, we weren't a couple. The four of us had grown up together in the small neighborhood of Bear Creek, attending the same schools and sitting in a group on the bus twice a day for a decade. I'd crushed on both girls over most of our high school years. Circumstance and fear of messing up a good friendship had prevented me from ever asking Eve out, even after Chuck and Becky broke through that unspoken barrier.\n\n\"Don't worry,\" Eve said, clearly not too bothered. She ran her hands through her brunette bob to pull the water out after being unceremoniously dunked. \"Becky cheats.\"\n\n\"You're just a sore loser,\" Becky taunted while Chuck simply smiled and avoided getting between the two girls.\n\nMax, a new-comer to the neighborhood but one who'd easily meshed with the four of us thanks to his goofy, easy-going nature, chimed in from his seat on the side of the pool. \"There's no cheating in chicken. I'm afraid this round goes to Becky.\"\n\n\"Your queen.\" Becky winked.\n\nBecky and Eve, despite their differences, had been best friends since grade school. They'd also shared something of a rivalry, often an open and heated one, over just about everything. Each had a competitive streak a mile wide. Fortunately, they made up quickly when things got out of hand. Chuck and I had long since learned to stay out of the fray.\n\n\"I'd hardly call a game of chicken enough to warrant that title,\" Eve said. \"Not even close.\"\n\n\"Oh, I smell a challenge coming on,\" Max said, sliding fully into the water. There was a glint in his eye and I couldn't help but smile. As a spectator, this could be fun. \n\n\"Bring it, then,\" Becky said, tapping Chuck on the head to get him to let her back down.\n\n\"As if you could beat me in anything.\" Eve crossed her arms beneath her modest breasts, which only served to draw my attention that way. Where Becky tended to dress fashionably in tight everything, leaving little to the imagination in terms of her curvy figure, Eve preferred to dress casual and modestly, making her summer bikini appearances something of an annual revelation.\n\n\"Okay, so it's to be a challenge,\" Max said. \"I nominate myself the referee. Anyone opposed?\"\n\nNo one objected.\n\n\"Let's find a suitable challenge,\" he continued. \"Eve -- what's the most daring thing you've ever done?\"\n\nEve tilted her head in thought. I'd heard a few of her stories, including some things she and Becky had done during summer camps together. The single-most daring, however, I had no idea.\n\n\"Probably the time I went up to a stranger's house in nothing but my underwear and rang the doorbell,\" she said. There was a hint of blush to her face as she said it, visible even under dim lights of the pool at night.\n\nBecky blew a raspberry. \"That's it? That's nothing!\"\n\n\"Yeah, well, I had to do it alone and at night,\" Eve continued. \"And to win the dare, I had to borrow their phone and call my friend to prove it.\"\n\nWow! I was impressed. I was also surprised she'd had the guts to do it.\n\nBecky seemed slightly mollified. \"Better. But did you actually do it?\"\n\nEve smiled. \"Of course I did. And the guy who answered the door was cute. Too old, but I'm pretty sure it made his year.\n\n\"But I suppose you think you can do better than that?\"\n\nEveryone's attention turned to Becky, who was already grinning with confidence.\n\n\"I went skinny dipping in a stranger's pool,\" she said. \"Also on a dare. Had to spend ten minutes in it, too.\"\n\nAnd to think I'd been impressed with Eve's adventure. Skinny dipping? It boggled my eighteen-year-old mind. Becky had a lovely figure and full chest. Given the skimpy bikinis she liked to wear, it didn't take much imagination to picture her nude. My mind had certainly gone there more than a few times and I jealously cursed Chuck for having gotten to see the real thing.\n\nEve seemed less impressed. \"And did anyone see you, or was this under cover of darkness?\"\n\nBecky shrugged. \"My cousin, Wendy. Can't say if anyone else did. And, yeah, it was dark out.\"\n\nMax raised his hands. \"Okay, I think I see the challenge here. Both of you seem less than impressed with what the other did at their most daring. So, it's time to back that up.\"\n\nHe turned to face Becky. \"Becky, your challenge is to visit seven different houses over seven days, all in Bear Creek. At each, you must pose in your underwear with the owner or a resident.\"\n\nBecky blanched a little but didn't say anything.\n\nMax grinned. \"Oh, if you want the title of Queen of Bear Creek, you're going to have to earn it. To make this a worthy challenge, there are a couple complications. First, the person you're posing with also has to be in their underwear.\"\n\n\"What!?\" Becky couldn't hold back at that. Eve just smiled.\n\n\"And...\" Max let the tension build. \"You need photographic proof.\"\n\nBecky groaned. \"Perv. And, geez, that's not going to be awkward trying to get all that.\"\n\n\"A lofty title needs a serious challenge,\" Max said. \"And, don't think I'm going easy on you, Eve.\"\n\nEve, bobbing in the water beside me, tensed up. After hearing Becky's challenge, she had good reason to be nervous.\n\n\"You get to go skinny dipping. Same deal -- seven different pools over seven nights, all in our neighborhood.\"\n\nEve tried to look unmoved. \"Of course.\"\n\n\"With pictures for proof,\" Max said. \"But you're allowed to blur out the private bits.\"\n\nThat was a hell of a challenge, for the both of them. On the surface, it seemed like Eve had the worst of it, but then she apparently didn't have to interact or have witnesses. It might just mean a lot of sneaking around late at night.\n\n\"Yikes, those are both rough,\" Chuck said, echoing my thoughts.\n\nMax's evil smile widened to Luciferian levels. \"Oh, I'm not done. Becky, you have to bring Chuck along and he has to pose in his underwear as well.\"\n\nChuck's eyes bulged. \"Me? Why? I'm not in the running for Queen.\"\n\nMax's eyes turned on me and I felt a sinking feeling in the pit of my stomach. \"And you, Rand, you'll have to skinny dip with Eve in order for her to get credit.\"\n\nEve cast a glance my way that was utterly unreadable. Me? On one tiny level, I was thrilled at the idea of getting to see Eve naked, of having this skinny dipping adventure together. On the other and infinitely bigger level, I was terrified of being caught...or being seen by Eve, or embarrassing myself, or...\n\n\"What Chuck said,\" I said, lamely.\n\nMax latched on to my discomfort like a leech. \"What, you don't want to see Eve naked?\"\n\n\"I didn't say that!\" I felt my face burning. \"I mean, not that there's anything wrong with that, but, I mean, it's the girls' challenge. I wouldn't want to risk holding her back or anything.\"\n\nEve's expression softened slightly, but I still couldn't tell how she felt about it. At least my fumbling response hadn't pissed her off. She was, inwardly, probably just as freaked out as I was. She just wouldn't want to give Becky the pleasure of seeing it. Because Becky, after hearing about Chuck's involvement in her challenge, seemed rather pleased.\n\n\"Sorry, folks, but those are the terms,\" Max said, brooking no dissent. \"You guys will be along for support and protection, since these dares aren't entirely without some risk.\"\n\nWell, he did have a point there, not that I felt like some great protector. Hell, I'd be naked, too. How capable would I be in keeping Eve from getting caught or running some nosey neighbor off? If anything, having two of us would make it more likely we'd get caught.\n\n\"Are there even seven pools in our neighborhood?\" I asked. \n\nOur neighborhood of Bear Creek was so small as to be almost unknown outside those who lived here. It constituted all of one road that looped in an oval with houses around the periphery and in the middle. Three-quarters of the neighborhood was surrounded by woods, while the rest butted up against a private golf course. The homes were nice, but hardly mansions, and the yards weren't so big that neighbors couldn't be nosey. At best, there were maybe twenty-five or thirty homes in total. \n\nMax hesitated. \"Hmmm...good question. Let me check.\"\n\nI wasn't sure how he intended to do that until he hopped out of the pool and turned on his phone. Ah -- Google maps in satellite mode. Nothing like a little surveillance snooping. The rest of us got out and crowded around him as he zoomed in and started counting.\n\n\"You're in luck,\" he said. \"I count seven.\"\n\n\"Not exactly any flexibility built in there,\" I said. \"They get to pick from all the houses.\"\n\nMax shrugged. \"Yeah, but they have to get the owners to join them. You don't have to be seen.\"\n\n\"They'll probably just sneak in at like four in the morning,\" Becky said, also finding issue with the disparity in the tasks. \"That's hardly risky.\"\n\nMax considered that. \"Okay, how about this? All photo proof from each team has to be time-stamped between 6am and midnight. Photos also have to be geo-tagged to verify the location. Eve and Rand's can be fuzzed out to make it PG, but not so much as to question whether nakedness was achieved. I'll also allow Becky and Chuck to fuzz out their host's face if requested, but only twice. Fair?\"\n\nI wasn't happy about losing the wee hours option, but the neighborhood was quiet enough that we'd probably be just as discreet in the eleven to midnight hour. I wouldn't have to come up with stories for my parents, either, as to my late-night excursions.\n\n\"Sure, I guess,\" Eve said. Becky nodded in agreement. Chuck and I exchanged a glance, equally resigned to our roles.\n\n\"Okay,\" Max said, setting his phone aside. \"Game on, then. The challenge starts at 6am tomorrow morning and ends at midnight in seven days. Send you pictures to me by 12:15 each night, and you can't do multiples on one day. Has to be one each day with no repeats. Cheating will result in forfeit! Highest score wins title of Queen of Bear Creek, and sidekick.\"\n\nSidekick indeed. Eve looked up at me and there was a glint of determination in her eyes. Awkward as this might be, I could tell she intended to win. I didn't want to let her down.\n\nChuck threw Becky back into her pool, then jumped in after. Max excused himself to go inside, leaving me alone with Eve. I did my best to keep my eyes off the body that would soon be far more exposed to me than it currently was in her bikini.\n\n\"You good with this?\" she asked.\n\nI shrugged. \"I'd be lying if I said I wasn't nervous.\"\n\nShe nodded. \"Yeah, me too. But gotta keep the game face on around Becky. Sorry you got dragged into it. I didn't expect that.\"\n\nI tried to act nonchalant. \"It's cool. I don't do enough crazy shit as it is.\"\n\nShe smiled. \"Well, this should make up for it.\"\n\nI sensed something in her demeanor. Discomfort? \"Are you okay with it? I mean, if you're not, I can back out. Be the wuss.\"\n\nEve's expression hardened. \"Becky would declare victory by default. So, yeah, I'm totally in. Period.\"\n\nWell, clearly that wasn't what had been on her mind. \"Fair enough. How do we want to do this?\"\n\nEve pursed her lips. \"Not sure, but I definitely want to do it under cover of darkness. So, late. I'm pretty busy with work tomorrow. Do you think you could start scouting our prospects?\"\n\n\"Sure.\"\n\n\"I'll text you tomorrow afternoon and we can figure the rest out from there.\"\n\nI had a busy day ahead of me, not the least of which would be worrying about how I could keep from chickening out, or what Eve might think of my naked body, or how I might embarrassingly react to the sight of hers.\n\n\"Sounds good.\"\n\nNight 1 (Vs. the First Time)\n\nMy predisposition to over-plan things helped get me through the day. I studied Google maps, gleaning everything I could from the seven addresses in our neighborhood which had pools. With that information in hand, I walked the neighborhood loop several times, making additional notes about fences, bushes that might offer cover, signs of dog ownership, who might be home or on vacation. Anything and everything came into play. I sure as hell didn't want to get caught, especially when most of the neighbors knew each other.\n\nEve and I shared a few texts and I got the impression that she trusted me to handle the selection of our first night's target. When ten-thirty rolled around, I quietly let myself out the backdoor and into our detached garage. Eve was already waiting, shuffling nervously in an over-sized t-shirt and flip flops. I could see the tie of her bikini top sticking out of the neck hole.\n\n\"Never thought I'd stress out about what to wear skinny-dipping,\" she said.\n\n\"Swimsuit,\" I said, looking down at my own trunks. \"Figured since we'll be sneaking around the neighborhood in the dark, carrying towels, we can just say we were at a friend's house to swim. We do it often enough.\"\n\nShe nodded and held up her own towel. \"Exactly. So, where first?\"\n\nI dug my notebook out from under a pile of musty tarps. In the back, I'd sketched out the targets and added my compiled notes. I pointed at a house just four doors down from my house.\n\n\"Figured we'd start with the easiest, just to get the hang of things,\" I said. \n\n\"And what makes this one easy?\"\n\n\"It's for sale and the owners already moved out.\"\n\nShe smiled and nodded appreciatively. \"So we just have to worry about the neighbors.\"\n\n\"Exactly. It looks like there's a decent bit of cover, but we won't know for sure until we get over there. Plus, I don't think either neighbor has a dog.\"\n\n\"Lead on.\"\n\nWe started walking down the block, doing out best to project an aura of nonchalance. Nothing to see here. No kids about to sneak into someone's yard for a spot of skinny dipping.\n\nI, meanwhile, was nervous as hell. What had been abstract -- getting naked with a girl I'd crushed on for a decade -- was suddenly becoming very real. How would it go? Would it change things between us? If so, for better or worse?\n\n\"I can't believe we're doing this,\" she said. Good, at least I wasn't the only one nervous.\n\n\"No kidding. Did you hear if the others were successful today?\"\n\nEve snorted. \"Yeah, they were. Cheating bastards got Chuck's brother to pose with them.\"\n\n\"Weak.\"\n\n\"I know, right? But, I guess they'd probably say the same about us going to a vacant house.\"\n\n\"One gimmie for each of us on the first day, I guess.\"\n\nWe reached the house, dark except for the porch light which dimly lit the real estate sign out front. Both of us looked up and down the street and at neighbors' houses and found no sign of anyone watching. Trying to act calm, we snuck across the front yard and around the side of the house. It was surrounded by a wood privacy fence which, thankfully, had no lock. The thing squeaked more than I cared for, but probably not enough to catch anyone's attention unless they were outside and close by.\n\nThe backyard was empty save for the pool -- a bean-shaped in-ground affair not unlike the one at Becky's house. A concrete patio wrapped around it, but any furnishings had departed with the residents. The pool's underwater lights, presumably on a timer, were on, giving everything a soft blue glow.\n\n\"Check the neighbor's backyards?\" Eve whispered. \n\nI nodded and we each took a side. This house backed up to woods, so we only had to worry about two homes. The one I checked was dark except for a single upstairs light. Should someone look outside, it was possible they could see us just about anywhere in the pool. Fortunately, the blinds were drawn closed and as long as we were quiet we'd probably be safe.\n\n\"Clear,\" I said when we met back up. \"Upper floor probably has a view, but the blinds are closed.\"\n\n\"Same over here. Think we should be good if we're quick and quiet. Any other escape routes?\"\n\nI hadn't given much thought to escape, should we be spotted. There appeared to only be the one gate and I didn't think either of us could safely climb the wood fence in a hurry.\n\n\"Not really, no.\"\n\n\"And you brought your camera, right?\"\n\nI unrolled my towel, revealing my cellphone and the mini tripod I'd bought for vacation last summer. It took just a couple seconds to get it seated. With my phone being waterproof, voice activated, and good at shooting in low light, we'd agreed I would handle the pictures. Of course, I promised Eve I'd carefully edit the pics and then delete the originals.\n\n\"How do we do this?\" she asked.\n\nI shrugged. \"I don't know. Get undressed, get wet, take a picture?\"\n\nShe rolled her eyes and gave me a playful swat on the arm. \"I meant the picture. Where?\"\n\nI looked at the pool and got an idea. \"How about I set the camera over here, about five feet from the side. After we get in, we can climb up and sit on the side in front of it. I'll voice activate it and we get a shot of us sitting from behind. Won't show much, but Max will be able to tell we're naked.\"\n\nEve agreed and sounded relieved. \"Okay. I guess this is it, then.\"\n\n\"Yeah.\"\n\nWe looked at each other, my own nerves reflected clearly in her eyes. We smiled and laughed, though it was tense.\n\n\"My god, this is so embarrassing,\" Eve said. \n\n\"So, it's not just me, then?\"\n\nShe shook her head no. \"Do you mind if we, I don't know, maybe not look at each other getting undressed? I know it's going to be impossible not to see each other, but...god, I just need to ease into this, I guess.\"\n\nI liked her way of thinking. \"Sure. How about I face the house and you face the pool? As soon as you're ready, you get in the pool, then I'll get in after you're under water.\"\n\nShe smiled. \"We're such prudes.\"\n\n\"Yeah. But at least we're prudes together.\"\n\n\"Okay, I like it. Ready?\"\n\n\"Ready.\"\n\nI turned toward the house and took a deep breath. This was it. Moment of truth. I pulled off my t-shirt. That was the easy part. Behind me, I could hear Eve doing likewise. Was she really facing away or sneaking a peek? I doubted the latter, but I wouldn't dare risk being caught sneaking a peek to find out.\n\nI reached for my waistband. On the upside, I was so ridiculously nervous that I was as far from aroused as possible. One less thing to worry about.\n\nBehind me, I heard Eve working off her bikini. I couldn't chicken out now and leave her hanging alone. Like ripping off a Band-aid, I took a deep breath and dropped my suit to the ground. The cool night air brushed my cock in an unfamiliar but not unpleasant way. I looked side to side, half expecting a neighbor to be peering over the fence with a camera, but the coast remained clear.\n\nI almost turned, but remembered I was supposed to wait when I heard the first soft splash of water.\n\n\"It's brisk,\" Eve said. Moments later, there was a bigger splash. \"Okay, I'm in.\"\n\nI turned and was relieved to find Eve floating toward the middle of the pool, her back to me. I stepped around her discarded bikini and quickly descended the steps into the water, eager to hide myself just as the water was hiding her naked body.\n\nWe were both naked. Naked together and alone. How crazy was that? And the world hadn't ended.\n\n\"I'm in,\" I said, giving her the all clear.\n\nShe turned, water up to her neck, and smiled. I'll admit, I tried to check out her tits, but between the darkness and the waves I couldn't make anything out. If she noticed me trying, she didn't say anything.",
        "\"Gotta say, this feels nice,\" she said.\n\n\"Yeah, it does,\" I said. To be honest, I hadn't expected it to be much different from regular swimming. But the feel of freedom, the way the water flowed over my cock and balls...yeah, it was different. \"I had no idea.\"\n\n\"If I could get over the thought of people seeing my skinny, little girl body, I might even want to do this again.\"\n\nI hadn't realized Eve had any body image issue. Granted, she didn't flaunt her body like Becky, but I thought she looked great. Slim body, small but nice breasts, great smile.\n\n\"I don't think anyone thinks that when they see you,\" I said. \"You're very attractive.\"\n\nEve appeared to blush but gave me a dismissive frown. \"No, I'm not. I'm a stick.\"\n\nUgh. I didn't want to go down this path with her. It made me very uncomfortable, but I understood. I, too, judged myself against other guys and often felt myself lacking. Not tall, not buff, not tanned...whatever.\n\n\"Not fat doesn't mean you're a stick,\" I said, hoping that was a safe way to approach it. \"Trust me, you're not just attractive. You're beautiful.\"\n\nHer eyes flashed up at me, expression unreadable. \"No one's ever said that.\"\n\nI'm sure that wasn't true, but her parents probably didn't count. Had no one ever really said that before?\n\nI shrugged. \"I guess I'm just the first to state the obvious, then.\"\n\nEve cracked a smile, then splashed me in the face before kicking back and swimming away from me. As I wiped the water from my eyes, I caught just a fleeting glimpse of her breasts before she plunged back into the water. Apparently, she'd eased up about the chance of getting caught if she was making that much noise.\n\nI swam vaguely in Eve's direction and she circled around to where I'd set up my phone on its tripod.\n\n\"Ready to get this done?\"\n\nI shrugged. Honestly, I was enjoying myself and in no hurry, but I didn't want to press my luck and get caught, either. \"Sure. Sticking to the plan?\"\n\nShe nodded.\n\n\"I guess there's no getting around this,\" she said, backing up to the side of the pool and reaching back. \"Just try not to stare.\"\n\nEve met my eyes and then hoisted herself up to a sitting position on the side of the pool. She was truly beautiful, particularly in the dim blue lights with water running down her body. And her breasts -- yes, her bare breasts, for the first time -- small and perfect. They were just large enough to curve underneath and were topped with surprisingly large, puffy areolas. I looked but didn't gawk.\n\nShe kept her legs together, but I still caught a brief glimpse of dark hair. I suspected it was a trimmed strip, since there wasn't much in evidence.\n\nI smiled and moved my focus back to her face. \"Like I said.\"\n\nShe smiled shyly and rolled her eyes, but didn't splash me. \"Whatever. I'm sure you say that to all the naked girls.\"\n\nI rolled my own eyes back at her. \"Yeah, like I see so many of those.\"\n\nEve gave me a look that, again, was unreadable. She had a knack for those.\n\n\"My turn, I guess,\" I said. \n\nSomehow, despite her bare body being on full display, I'd managed not to spring a full-blown erection. With Eve having gone first, I couldn't afford to act nervous. I just had to get on with it.\n\nLike Eve, I hopped backward up on the side of the pool into a sitting position, beside her but with a little bit of space. My cock was perfectly conspicuous between my legs and I could tell Eve was looking. I had no idea what she was thinking -- curious, bored, appalled, repulsed? Disappointed? I hadn't been in the cool water quite long enough to have gone full-on shrinkage, so at least that was something for first impressions.\n\n\"Hi,\" Eve said.\n\nI looked at her and she was looking at me, in the eye. She smiled. I smiled.\n\n\"Hi.\"\n\n\"We're naked.\" \n\nI agreed.\n\n\"And the world didn't blow up.\"\n\n\"Nope.\"\n\nWe just sat there, grinning like fools. For all the nervous lead-up, I couldn't have been happier. Me and Eve, naked together. In a strictly platonic way, sure, but still...\n\n\"Maybe we should take that picture,\" she said.\n\n\"Right. I have to turn it back on.\"\n\nI got up, aware that my nakedness was a bit more conspicuous now that I was dangling in the cooler night air, and hurried over to my phone. Once it was on and in camera mode, I adjusted it to frame Eve with the gap that I would fill. In the screen, I could see her looking back at me. Okay, fair is fair -- I was just as curious to see her body.\n\n\"Okay, ready,\" I said, walking back to the side of the pool, no longer particularly concerned about her checking me out. For her part, she kept her eyes up before looking away as I sat beside her.\n\nShe said, \"So, now what?\"\n\n\"Just say 'smile,'\" I said, and even as the word left my mouth I heard my phone's shutter sound.\n\nEve laughed. \"Smile!\" The phone clicked again. \"Easy.\"\n\n\"Yup.\"\n\n\"Let's see what you got,\" she said, getting up. \n\nI hurried to follow, getting a nice look at her cute butt in the process. I scooped up my phone and opened the gallery to look at the two shots. They were predictably dark, but it had done a decent enough job to make it clear it was the two of us and that we were, yes, naked. Only our butt cracks showed with our backs to the camera, but that was enough. With the pool lighting behind us, it was actually a pretty cool picture.\n\n\"Nice,\" Eve said. \"I like it.\"\n\n\"Just have to do some editing and send it off to get credit.\"\n\n\"Nah. I don't think we need to edit that one,\" she said. \"I won't lose any sleep over a little crack showing. If you don't mind, anyway.\"\n\nI shrugged. \"Okay with me. Makes this a lot easier.\"\n\nI made sure the photo had the proper time and geotags attached. Eve, watching on, was now brushing up against my arm with the side of her breast. That got my attention, though I did my best not to glance down at her hard nipple.\n\nI sent the picture off to Max and turned off my phone. I felt my cock begin to swell in response to Eve's close contact, which got me very nervous that it would offend her, so I stepped toward my towel to keep my back to her while I took my time dislodging the phone from the tripod.\n\nEve said, \"Much as I'm tempted to swim some more, we probably shouldn't press our luck.\"\n\nI glanced back, noting she was doing nothing to hide her full nakedness from me as she walked over. Damn, she was cute. It did nothing to slow my growing problem.\n\n\"Yeah, you're probably right,\" I said. \n\nPhone set aside, I snatched up my towel and began drying, doing my best to keep myself covered without acting like I was doing it intentionally. I doubted my acting skills were very convincing, but she didn't say anything. I kept my focus on getting dry and dressed while she did the same the same. By the time I had my shorts on and glanced her way, Eve had her bottoms on and was already tying her top. No more show until tomorrow, though she did look very cute in that bikini.\n\nWe double-checked to be sure we hadn't left any incriminating evidence, then snuck back out the way we came. The neighborhood was just as quiet as it had been on the way in and we walked the block back to my garage.\n\n\"One down, six to go,\" Eve said. \"Thanks again for doing this with me.\"\n\n\"No problem. It's been fun so far.\"\n\n\"Fingers crossed the rest can be so easy.\"\n\n\"Yeah, well...\"\n\nEve nodded, knowing it would only get trickier. \"Talk to ya tomorrow?\"\n\nI'd kinda hoped she would want to hang out and talk, but it was getting late and we both had summer jobs. At least I had tomorrow night to look forward to.\n\n\"Tomorrow.\"\n\n#\n\nNight 2 (Vs. the Killer)\n\nWe'd texted back throughout the day and agreed to try one of the more potentially challenging targets, keeping the easier ones for fallbacks. With six pools and six nights, we couldn't afford to skip any. Picking the order was all the choice we had going for us.\n\nWe also weren't in a competitive position to skip because team Becky had already pulled off their second day. According to Chuck, he'd come up with a clever idea that had worked...once, at least. He wouldn't tell me what it was, though. Bastard.\n\nEve figured Becky's house would be the toughest, simply because her friend's competitive streak would lead her to watch it as much as possible. For that reason, we made it our primary target for the night if we thought we could hit it.\n\nBecky's backed up a sparser bit of woods, so at eleven o'clock it was easy enough for us to sneak up on it from behind without being seen. Before we even got there, though, we could tell it was a no-go. Becky and Chuck were out back, swimming, and every light imaginable was turned on. It was bright enough to be a movie set.\n\n\"Plan B?\" Eve sounded frustrated at the set-back.\n\n\"You bring the treats?\"\n\nEve uncovered a plastic baggie she'd wrapped in her towel. \"Better. Bacon.\"\n\nI smiled. \"Onward.\"\n\nPlan B was a house in the middle of the Bear Creek loop, meaning it had neighbors on both sides as well as behind, each separated by privacy fences. Only one neighbor's house was two stories and would have a view in, but thankfully it looked dark as we closed in. The owner's house had a couple of dim lights on, barely visible through the curtains. Occupied, but hopefully in bed.\n\nHere was the catch -- my scouting report confirmed they were the owners and regular walkers of Killer -- a mutt of no more than thirty pounds. The name was clearly a joke, but I knew it liked to bark and it was kept outdoors. We wouldn't be able to sneak in without waking it, which would bring the owners and it'd be game over. Hence, bacon. A happy dog would, hopefully, be a quiet dog. If not, we were in trouble.\n\nWith the coast clear out front, we snuck around the side of the house and took cover in the near total darkness over there. I'd half expected the dog to already be on our scent and barking like mad. Instead, it was quiet. I peered through the gaps in the fence and saw almost nothing. Unlike the pool last night, this one's lights were off, and there were no other backyard lights on here or in any adjacent neighbor's yard. It was great cover but creepy.\n\n\"I don't really want to go in without knowing where the dog is,\" I said.\n\nI think Eve nodded in the dark, but I couldn't be sure. I just heard her open up the baggie. She whistled softly and almost immediately we heard the jangle of dog tags from the yard. No barking, amazingly.\n\nShe had to whistle yet again to get the dog's full attention, and it predictably barked at us as it ran full tilt toward the fence. I fought the urge to just bail, thinking this would be impossible to pull off, but Eve grabbed my arm and pressed up against the fence. A moment later, the barking stopped and I could hear the dog sniffing.\n\n\"Hey guy,\" Eve whispered. \"I bet a big boy like you likes bacon. Right? Want a taste?\"\n\nWhile Eve won the favor of Killer, I focused on their backyard for any change in lights or noises that could indicate the owners were checking on what had riled the dog. Nothing happened, though, and I figured they were probably so used to the odd bark that they couldn't be bothered unless the dog wouldn't shut up.\n\n\"Yup, we have a bacon lover,\" Eve said. \n\nWith my eyes adjusted somewhat to the dark, I could see her reaching in through the gap by the fence gate and petting Killer. Good sign. I just hoped she'd brought enough bacon.\n\n\"Undress here,\" she said. \"That way, if we have to bail, we can just grab it on the way out. And don't forget your phone.\"\n\nI'd been nervous last night, but for a totally different reason. Tonight, we were under considerably greater risk of getting caught and the dog was still a wild card. Eve seemed confident, though, or was so hell-bent on winning this contest that she wouldn't risk missing a night. I could barely make her out, but it was obvious she'd already shed her t-shirt and was working on her bikini.\n\nI stripped out of my clothes, concern about my nakedness and interest in Eve the last thing on my mind. I rolled it all up in my towel and then made certain I had my phone attached to the tripod. I risked a quick turn on to ensure the flash was set along with the voice trigger on the shutter release.\n\n\"Good?\" Eve asked, brushing up against my arm.\n\n\"Yeah.\"\n\n\"Here goes nothing.\" Eve eased the gate door open with minimal squeaking. Thankfully, with another bite of bacon in its mouth, Killer happily let us in without making any more noise than soft chewy and the rhythmic sway of his tail. Eve bent down and scratched him beneath the chin while I softly closed the gate behind us.\n\nI surveyed the pool area and it was damn dark. I saw a lawn chair not far from the pool that looked promising, so I affixed the flexible legs of the tripod to it and did my best to make sure the phone was pointed in the right direction.\n\nI turned to let Eve know I was ready, but she was already climbing down a ladder into the pool. Killer waited patiently by the edge for her. Nice. As soon as she was clear, I followed suit.\n\nFrom the back, the house had the same couple dim, obscured lights. Possibly something in the kitchen and an upstairs room. No sign of anyone coming or watching, though.\n\n\"Same picture as last night?\" Eve asked, having snuck up on me so quietly I started in surprise.\n\n\"Yeah. And quick, before my phone times out.\"\n\nWe both climbed up on the side, backs to the camera, and almost immediately Killer was trying to squeeze in between us. I couldn't help but smile and Eve wrapped an arm around him. Shame she wasn't doing that to me. If it kept him quiet, though, who was I to complain?\n\nI triggered the voice shutter and the flash was disturbingly bright. Killer didn't seem to even notice, thankfully, and I didn't want to risk more shots than necessary. I hopped up and quickly pulled up the picture. Far brighter and more explicit shot of our backsides than last night thanks to the flash, but it was all we needed. Killer's backside and tail was a nice touch.\n\n\"Done,\" I said.\n\nBy the time I had the tripod off the chair, Eve was heading around to the gate with Killer at her heels. She fed him the last of the bacon and gave him another neck rub. \"Such a good boy. I bet you want to come with us tomorrow night, huh? You'll have to ask Rand.\"\n\nI shook my head. \"We'll see.\"\n\nEve chuckled softly and then closed the gate, having to use a hand to keep Killer from following us. We fumbled in the dark to find our clothes, but soon we were dressed and back in the neighborhood, headed to the garage.\n\n\"Two for two,\" Eve said, offering a fist bump which I returned.\n\n\"Got lucky, but I'll take it.\"\n\nAgain, Eve left after we got the photo sent off to Max. I was bummed we had been so rushed and that I hadn't gotten much chance to see her naked again. There would be more nights to come, surely, and hopefully at least one would give us a chance to just hang out and enjoy the experience.\n\n#\n\nNight 3 (Vs. the Witnesses)\n\nI'll admit it -- the third night of our challenge was the worst of my fears realized, but the outcome was nothing I could have imagined.\n\nEve came over just before eleven and, like the night before, we'd planned on scouting Becky's pool first. Again, Becky and Chuck were outside and the lights were bright. I had a sneaky feeling they'd be using that to their advantage if at all possible. It left us only a few more days to come up with a plan.\n\nIn the meantime, we went to one of our fallback options. This was a quiet house a few doors down from Becky's backing up to the woods and with almost no visibility from the neighbors. There were two cars parked in the driveway and a few indoor lights were on, but otherwise it was quiet. We peeked into the backyard over the fence and found their pool had dim lights and there were no other outdoor lights on. It made for good cover, albeit a bit more challenging for us to see where we were going.\n\nWe were both still nervous as there was that perpetual risk of getting caught. Occupied houses had a way of doing that to trespassing skinny dippers. The actual getting-naked-in-front-of-a-friend part was no longer the foremost concern in our minds. Well, not mine, anyway. I think the same was true for Eve.\n\nAfter passing through the gate, we were faced with a heavily landscaped backyard. There were huge bushes and vines and such everywhere. A patio was half obscured by vines and a gazebo in the back corner of the yard was similarly overgrown. It probably looked gorgeous in the daylight, especially if the vines were of the blooming variety.\n\n\"Ready?\" Eve whispered.\n\n\"Yup.\" \n\nBefore I'd even responded, she was undressing. I quickly followed suit, stuffed my phone in its tripod, and joined her by the pool edge. We both peered around once more, focusing in particular on the back windows, but there was no sign of anyone awake. I set my phone on a small table about ten feet away from the pool and made sure it was aimed at the edge where we could hop up and do our now-regular bare backside proof shot.\n\nI finished just in time to catch a glimpse of Eve's cute butt before it vanished under the surface. I slipped into the water quietly just behind her. It was a nice evening and, perhaps by unspoken agreement, we just swam around for a bit, enjoying the freedom of skinny dipping.\n\nEve pulled up along the side over by the gazebo and rested her elbows on the side. I joined her, leaving just enough space between us to be decent, and she gave me a playful nudge with her elbow.\n\n\"I didn't talk to Chuck today,\" I said. \"Did you hear if they got their photo?\"\n\n\"Yeah,\" Eve said, letting a hint of irritation seep in. \"And I found out how they did it, too. Apparently, they concocted some story about representing a charity that raises money to clothe the poor in various third world countries after natural disasters or some such. Anyway, they claim that they're doing a fundraiser where sponsors have offered so much money per picture they can get with both them and other people in just their underwear. Sort of a cross between sponsoring lap walkers and a political statement of solidarity.\"\n\n\"And people are buying that?\"\n\n\"At least one did. I don't know how they can do it with a straight face, but...\"\n\n\"Wow. I'll give them marks for creativity.\"\n\n\"Yeah, well. I guess they had to come up with something to convince others to go along with it.\"\n\nI nodded. \"Wonder how many suckers there are in the neighborhood.\"\n\nSomething caught my attention in the gazebo. It was pitch black over there, between the dark night and vines growing up the sides. Maybe it was just a bug -- there were plenty of those chirping happily away -- but I was sure I'd heard something. And the hairs on the back of my neck said someone or something was watching us.\n\nEve must have sensed my concern. \"What?\" she whispered.\n\nSomeone coughed politely, clearly letting us know they were in the gazebo and aware of our presence. My heart started pounding a thousand miles an hour. They knew we were there, trespassing, and had seen both of us naked. And we were as far away from our stuff as we could possibly be.\n\n\"We were wondering why you were here,\" a man's voice said. I could hear him standing and caught just a hint of shadow moving against shadow. \"So, this is for a dare or something?\"\n\nHe didn't sound upset. Amused, really, if I had to describe it. That made me slightly less petrified.\n\n\"Sorry,\" Eve said. \"We're so sorry. Didn't mean for anyone to see us. But, uh, yeah, it's part of a dare.\"\n\nThe guy stepped out from the shadow of the gazebo and into the only slightly brighter apron of the pavement surrounding the pool. He was maybe in his early thirties, average figure, and completely naked. A moment later, a woman of similar age, joined him. She, too, was naked, and had a curvy figure with full breasts. Both held half empty wine glasses and neither seemed particularly bothered to be standing in front of us in all their moonlit glory, such as it was.",
        "\"Sorry,\" I added belatedly. \"We can go.\"\n\n\"Relax,\" the woman said, smiling. \"It's cool. We were young, younger, once too.\"\n\n\"You did surprise the hell out of us,\" the guy said. \"I mean, at first, we thought you might be robbers looking to break in from the back. And with us partaking of our nightly wine and dip routine dressed like, well, this, we weren't exactly keen on jumping out to confront you.\"\n\nSeen from that perspective, I could appreciate why they'd been so quiet.\n\n\"Wow, sorry.\" Eve said. \"Never thought we'd be the ones scaring someone.\"\n\nThe woman said, \"Thankfully, once you two started undressed, we figured we were in the clear. We didn't say anything until we were certain of your intentions.\"\n\n\"Yeah, about that...\" I said.\n\nAs the couple approached the edge of the pool, Eve and I both backed up to give them space. They set their glasses down by the side and climbed into the water. I couldn't help checking them out as they did so. It almost felt like it would be rude to look away.\n\n\"A dare?\" The guy asked as he draped his arms along the edge and his wife cuddled up beside him.\n\n\"Something like that,\" Eve said. \"My friend and I have this challenge going, to see who's 'Queen of Bear Creek' for the summer. We're each doing something the other had already done, but we have to do it every night for a week and collect photo proof.\"\n\nThe woman chuckled. \"So, you're skinny dipping in strangers' pools?\"\n\n\"Yeah,\" Eve said. \"And since there are only seven pools in our neighborhood, we kinda had to hit them all. We toyed with asking permission, but that seemed like a surefire way to lose the challenge.\"\n\n\"We'd have let you,\" the guy said. \"But, yeah, I can see how most probably wouldn't.\"\n\n\"Thanks,\" I said. \"For, you know, not freaking out. We've tried to be sneaky and quick in and out.\"\n\n\"I take it you haven't been caught before tonight, then?\"\n\nEve and I had drifted slowly back toward the couple, now that they'd settled in at the edge. It felt like a comfortable across-the-dinner-table sort of conversation distance. Now, with a bit better lighting, I recognized them, though I didn't know their names. In a neighborhood as small as ours, there were few people who I couldn't recognize at least in passing.\n\n\"Not yet, no,\" Eve said. \"This is the third of seven, so we've got a ways to go.\"\n\n\"I'm Mike and this is Annette, by the way,\" Mike said, uncurling from the edge to offer his hand. I shook it, as did Eve, and then we did the same with his wife.\n\n\"Rand and Eve,\" I said.\n\n\"I recognize both of you from the neighborhood,\" Mike said. \"Nice to finally make your acquaintances.\"\n\n\"Cute couple,\" Annette added.\n\nI blushed at that and was about to correct her when Eve simply said, \"Thanks.\"\n\nWe joked a bit about the challenge, told them more about the details and what we'd faced so far and what pools we still had yet to tackle. They found the whole thing amusing and were particularly interested in hearing about the other side's underwear challenge.\n\nMike and Annette weren't shy in telling us about their proclivity for skinny dipping, a large reason why they'd bought this particular house with a well-obscured backyard. They rarely wore suits and even had a few couple friends who joined them on occasion. I found it surprising, yet after having gone skinny dipping a few times now, I could see the attraction.\n\nAnnette finished her wine and looked at the empty glass with disappointment. \"Well, we should probably be calling it a night. Shame you couldn't just use our pool every night to finish your challenge. We'd let you.\"\n\n\"Absolutely,\" Mike said. \"Heck, feel free to come on by any time you wanna do some swimming or skinny dipping. Just, maybe let us know ahead of time in the future. We wouldn't want to be caught indecent or something.\"\n\nAnnette gave her husband a playful scowl and I blushed at the suggestive nature of the comment.\n\n\"Sure, thanks for the offer,\" I said. It seemed unlikely, but maybe we'd actually take them up on it one day.\n\n\"Hey, you still need you picture, right?\" Mike asked.\n\n\"Yeah, we do,\" Eve said. \"And we'd probably better hurry to make sure we get it in time.\"\n\nMike nodded. \"How about you take it with all four of us? Bet that'd totally blow your friends' minds!\"\n\nAnnette looked at Mike with a questioning look. \"You sure you want our pictures out there?\"\n\nMike shrugged. \"I trust them. Beside, they'll be in them, too.\"\n\n\"We're supposed to blur out the naughty bits,\" I said. \"So, I mean, if you want to get in it, sure. And I'll delete the unedited version.\"\n\n\"We don't want our pictures getting out, either,\" Eve said.\n\nAnd so, just like that, we all got out of the pool in our naked glory and I repositioned my phone to get all of us in the picture. Mike and Annette were in the middle, arms wrapped around one another, and Eve was getting cozy with Mike. Annette held her arm out for me, so I joined her, acutely aware that I was pressed body to body with a naked woman I'd only just met. Still, it wasn't that weird. They were a nice couple and our nakedness had become more incidental than sexual.\n\nI called out the command for the picture and the camera flashed as it was too dim here to go without. Everyone crowded around behind me to check out the result and I made quick work of blurring out all the bits on display. After doing two butt-only shots that didn't need editing, this was going to be quite the change-up for our judge. \n\n\"Send a copy to me, would you?\" Mike said, giving me his cell number. \"Then you've got a number to reach me at if you two ever want to come back over.\"\n\nI did, and he thanked me.\n\nThey offered to let us keep using the pool while they went inside, but Eve and I both politely declined. It was getting late and we both had work tomorrow. Besides, it would feel a little awkward.\n\nAfter we were dressed, Mike got me alone for a moment. \"Say, we're going to be leaving Friday on vacation for a week. If you two wanna use the pool, have a little privacy, knock yourselves out.\"\n\nI blushed yet again, hopefully invisible in the dark, and simply thanked him. Yeah, that would be fantastic, but Eve and I weren't a couple. Hadn't even gone on a date. Earlier, though, Eve had acknowledged their assumption that we were a couple. Or, rather, she hadn't corrected them. Did that mean maybe she was starting to look at our friendship differently?\n\nWe shook hands again and parted ways. \n\n\"I can't believe that happened,\" Eve said, practically skipping. I was surprised how good a mood she was in, considering how it could have gone.\n\n\"Sure got lucky.\"\n\n\"I gotta say, I'm kinda jealous of them. Getting to skinny dip whenever they want?\"\n\nI turned to Eve. \"So, you're liking it, then?\"\n\n\"Yeah. Why, aren't you?\"\n\n\"No,\" I blurted. \"I mean, yes, I am liking it. It's been...surprisingly fun. I like the daring, the risk. And doing it with you. And, yeah, I think I'm past being all nervous about getting naked.\"\n\nEve agreed and we walked in awkward silence for a bit.\n\n\"What did Mike talk to you about at the end, there?\" Eve asked.\n\n\"Oh, he just mentioned they were going on vacation starting this weekend, in case we wanted to use their pool some more.\"\n\nEve seemed to catch on to the unspoken implications.\n\n\"Funny how they assumed we were a couple, right?\" I said.\n\nEve gave me a questioning look. \"What's funny about that? You don't think we'd make a good couple?\"\n\nI stammered, then realized she was messing with me, which only caused my face to burn all the more.\n\n\"I think we would,\" I finally said.\n\nEve looked a little embarrassed, mirroring my feelings. \"So, why haven't you asked me out?\"\n\nOh crap. What did I say to that? That I'd wanted to forever but didn't know if she would say yes, and that I didn't want to risk our friendship?\n\nBefore I could decide on an answer, she offered one. \"Same reason I didn't? We've been friends too long?\"\n\n\"Yeah.\" I said.\n\nOur hands grazed and clasped. I don't really know which of us started it. Maybe it was both. All I'm sure of was that neither of us let go.\n\n\"You free for dinner tomorrow night?\" I asked.\n\n\"Yes, I am.\"\n\nI squeezed. She squeezed back. With that smallest of gestures, it seemed my world had been turned upside down. Or was it right-side up? Either way, I was ecstatic.\n\n#\n\nNight 4 (Vs. the Storm)\n\nOne thing I hadn't factored into planning for our seven nights of skinny dipping was the weather. I should have known things were going too smoothly this particular night.\n\nI suppose I should circle back to the date. Yes, we met up for dinner. While Eve and I had known each other and been friends of a sort for most of our lives, there were precious few times we'd ever done something together, just the two of us. Aside from the skinny dipping episodes this week, they probably numbered fewer than the fingers on a bomb-maker's hand. So, dinner could have been a really big deal. I mean, this was a date. That meant something.\n\nAs it turns out, we talked about mostly the same stuff as always -- work, school, TV shows, dumb friends, and strategies for trespassing skinny dipping. Yes, I did say \"mostly the same.\" Despite the conversation being familiar, there was just a hint of difference -- an energy, a deeper look in one another's eyes, a genuine interest in the other.\n\nAnd we held hands when walking from dinner to the movie theater and almost entirely throughout the picture. That was nice.\n\nOn exiting the theater, though, at about quarter to eleven, we realized our mission might be in jeopardy. A strong breeze had kicked up and there was the smell of cold, rainy air behind it. The sky was a freaking light show with lightning forking across the face of huge wall clouds. It was still distant enough that the rumbling was an indistinct perpetual growl, but it was clearly headed our way.\n\n\"Think we can get an exemption for inclement weather?\" Eve asked as I drove us back to Bear Creek. \"This doesn't look safe and I don't think it'll be over in time, either.\"\n\n\"I doubt it,\" I said. \"You can ask, but he'll probably say that we had all day.\"\n\n\"And Becky would never let me hear the end of it.\" Eve grumbled, watching the sky. \"Think we could get in and out of one quickly?\"\n\nI wasn't keen to take on the storm, but I was invested enough that I didn't want to lose any more than Eve. And, since we appeared to be something of a couple now (I hoped), I wasn't about to get off on the wrong foot by letting her down.\n\n\"We can try, sure. Maybe this is the best chance to get Becky's place.\"\n\n\"Yeah, good call.\"\n\nWe got back to my house and parked in the garage just seconds before the heavens opened up. It wasn't rain, but a deluge. Lightning struck somewhere nearby and shook the garage and car. Eve looked at me with concern and determination.\n\n\"Might as well leave the towels,\" she said. \"No faking that we're off to swim with friends tonight.\"\n\nI realized I'd left my suit and towel upstairs in my room. If I went inside now, my parents would probably notice and wonder why I was heading back outside. I couldn't bank on them being asleep quiet yet. With the storm, that was a question or two too many.\n\n\"It's not like you're swimming,\" Eve chided when I explained it to her. \n\nShe undressed right in front of me, though she did turn her back and I pretended not to look. She slipped into her bikini so that she might have dry underwear at least for when we were done. That was topped with her t-shirt, which would be soaked in moments. I offered to leave my shirt behind and she could take that after. She smiled at the suggestion.\n\nWe ducked out of the garage and were physically hit by the wind and rain. It was hard to talk, so we just jogged side by side the two blocks to Becky's house. No one was outside, and we had no reason to think anyone would bother watching us. We let ourselves in through the side gate, but it was already clear by then it was going to be another bust. Becky's back light was on, clearly illuminating the pool. We peered around the corner and were slightly surprised to find Becky and Chuck sitting out on the back porch, pretending to be watching the storm or something. The jerks couldn't even let us catch a break on a night like this.\n\n\"Fuck!\" Eve looked to me. \"Plan B? Again?\"\n\n\"Running out of time, but sure. Might as well go for the toughest target. I don't think anyone will notice in this.\"\n\nI strained to recall which house it was from the front -- just across the street and down a few from Becky's. This one was in the middle of the Bear Creek loop, so it had neighbors on all sides. I'd rated it a challenge due to being very visible from multiple two-story houses adjacent and that they always seemed to be home. I was pretty sure there was at least one dog neighboring as well.\n\nThe storm was insane but gave us great cover. The gate to their backyard, however, was padlocked. I gave Eve a boost over and then used a trash can to help get myself up and over.\n\n\"Looks clear, but it's pretty dark,\" Eve said from her post at the back corner of the house. \"Camera?\"\n\nIf I set my phone near the pool, the lens would be covered in rain and might not get a clear picture. I looked around and decided it could go on the patio table under the overhang. It was really close to the back door, but our best option. I explained the plan and we moved quick.\n\n\"You know,\" Eve said as we stripped. \"We're so wet, we could just take the pic and skip the pool.\"\n\nI chuckled. \"Yeah, but we'd know. It'll take an extra ten seconds to jump in and out.\"\n\n\"Fine.\" I could tell she agreed with me and wasn't annoyed. \"Let's roll.\"\n\nI set my phone-in-tripod on the table and was in the pool moments behind Eve. A huge bolt of lightning hit nearby, and Eve jumped into my arms. I could feel her bare breasts pressing into my chest and my cock grazed her hips under the water.\n\n\"Damn!\" she said. \"Too close!\"\n\nI agreed, despite my eagerness to keep holding her. She, however, let go and led the way out of the pool. There were a couple lights on upstairs, but as long as no one was up and watching the storm, we were in the clear.\n\nI tried to voice activate my phone, but the storm drowned it out. I had to fiddle with drying my fingers so I could work through the menus until getting to a timer setting. After about a minute longer than I wanted, I got the shot, using the flash. It wasn't like anyone would notice in the middle of a storm.\n\nPhoto checked -- yeah, Max liked yesterday's full frontal group shot and would undoubtedly like today's follow-up frontal angle -- and we were back around the side and trying to dress in the dark. Eve cursed at trying to deal with the wet clothing and finally just fought her t-shirt over her and carried the bikini. I similarly struggled, but eventually managed to get my shorts to cooperate.\n\nI boosted Eve over, well aware that my hand pressed bare ass, and then had to climb over using one of the gate's crossbars. It wasn't pretty, but we were clear.\n\nEve jogged across the yard and down the sidewalk. Between the distant streetlights and flashes of lightning, I could see her bare ass. Unlike her swim cover-ups, the t-shirt she'd worn tonight didn't cover all of her bottom.\n\nBy the time I caught up, she was giggling like mad. \n\n\"Your butt's hanging out,\" I said.\n\n\"I know. Don't care. That was awesome!\"\n\nShe took my hand and we jogged all the way back to my garage, thankfully never seeing another soul. We ducked inside and closed the door. For not the first time in this endeavor, I was glad we had a detached garage with minimal chance my parents would notice us.\n\nI flicked the light on and was immediately treated to one of the most amazing sights of my short eighteen years -- Eve standing before me in just her t-shirt. Tank top, really. Without having been able to put her bikini back on, the thin fabric was utterly plastered to her skin, with highly erect nipples protracting from the slightly darker hue of her areolas. And, well, she was still bottomless, leaving a narrow strip of dark hair running between her hem and between her legs.\n\nEve must have caught my staring. \"Wet t-shirt material?\" At least she was in good humor about it.\n\nI nodded. \"Yeah. You've got my vote.\"\n\nShe shook her head and sighed in amusement. \"Yeah, well, I'm freezing and need my towel. And you probably need a cold shower.\"\n\nEve didn't know how right she was on that count. While I'd somehow managed to keep myself in check through the first few times seeing her naked, this had set my cock to swelling. At least I had my shorts on.\n\nI handed Eve her towel as she stripped and set aside her sodden shirt. Again, I was acutely aware of her dripping wet and goose-bump swathed body, particularly the way her tits bounced as they came free of the clingy shirt. She caught me staring -- again, and only half-heartedly turned away from me as she toweled dry.\n\n\"You can use my towel when I'm done,\" she said, reminding me that I, too, was soaking wet, cold, and without my own towel. That also implied I'd have to strip and reveal my state of arousal.\n\nI was nervous as hell about it, but if we were going to keep getting naked together and date, her seeing me erect would be inevitable. It didn't seem like the sort of thing she'd probably be offended over. Still, I wasn't used to...exposing myself like that. She was drying off quickly, though, so I had to make a decision.\n\nDeep breath, shorts and underwear off. It wasn't quite that easy, as the soaking wet fabric was hard to get over my hips. Eve turned in time to watch me tip over into my car, giggling at my awkwardness. I blushed at her response, and then her eyes dropping to my crotch. Yup, still hard. She got another one of those unreadable expressions, which seemed better than turning away or looking disgusted.\n\n\"Here,\" she said, handing over her towel when I was free of my clothes. I happily accepted and managed to partially cover myself while drying, all the while hoping things would settle down. A naked Eve trying to get past me to open the back car door and her dry clothes didn't help the cause.\n\nEve got her panties, a cute pink pair, on and turned to me. \"Oh, right. You don't have anything to change into, do you?\"\n\n\"Uh, no.\"\n\nShe smiled. \"Might want to keep that towel for a bit, then. I'll get it from you tomorrow.\"\n\nI nodded and tried to wrap it around my waist. With my erection, that was easier said than done. Eve actually laughed out loud at my difficulties. She closed the car door, still only in panties, and came up close to me and wrapped me in a hug.\n\n\"I had a lot of fun tonight,\" she said. \"Never had a date go quite like this.\"\n\n\"Yeah, me either.\"\n\nI was acutely aware of her breasts pressed into my chest and the way my erection was pressed up against her pelvis. Still holding each other, she looked up. I looked down. We both kinda figured out this was the moment. Thank goodness, because I was worried I'd miss it or, worse, it wouldn't happen at all.\n\nWe kissed.\n\nI've only had a few first kisses before. Most were nice. None were while nearly naked with a topless girl. That certainly made it noteworthy, but what really made it special was that it was with a good friend.\n\nThe kiss was tentative at first, as if we were making sure this was right. Then it became more passionate as we agreed that, yes, this was right and way overdue. And then it became almost frantic, as if we could make up for years of missed opportunity with one another.\n\nWhen we finally paused, many minutes later, my body was trembling. Eve's chest was heaving. I wanted to continue but not overdo it.\n\n\"C'mere,\" she said, pulling me back so she could open the back door again. She climbed into the car and pulled me behind her.\n\nSoon, I was sitting in the middle of the back seat and Eve was straddling my lap. She was sitting just far enough back so as not to be pressing into my cock. Much as my body craved that contact, it was probably just as well since I didn't need to make a mess in her towel.",
        "We kissed -- quick, slow, hard, soft, passionate, playful. It was fantastic. And, with her being topless, I eventually couldn't resist running my hands up her sides, incrementally closer to her breasts. Eventually, I was brushing the sides and underside of them, fully prepared for her to shut me down.\n\n\"Oh, just touch them already,\" Eve chided, taking my hands in hers and placing them fully over her breasts. She sighed and let go once I started massaging them.\n\nI don't know what it is, but there's just something special about touching a woman's breasts. I'm sure it has something to do with knowing she trusts you enough to allow it. There's a certain intimacy. Judging by the way her breathing changed when I changed my focus to circling and lightly pinching her hard nipples, she was certainly getting pleasure.\n\nJust as I was about to break off our resumed kissing to see if she'd let me use my mouth, Eve sat bolt upright, banging her head on the ceiling of the car.\n\n\"Ow,\" she said, rubbing her head. \"What time is it?\"\n\nI shrugged. \"My phone's on top of the car.\"\n\n\"We have to send in the picture!\"\n\nYeah, I'd been a bit too distracted to remember that detail. It would have been impossible to do it out in the driving rain. But she was right, we had to have it sent to Max by quarter after twelve.\n\nEve got off my lap and poked her head out of the car until she found my phone. \"Four minutes left,\" she said, thrusting the phone into my hands.\n\nI fumbled through the process of pulling up the image. The phone's lens had been wet, despite my best efforts, and the image of us was blurry without any selectively blurred spots. So, even with it being a full frontal shot of both of us, the photo didn't really need any special editing.\n\n\"Looks good enough to me,\" Eve said, confirming my assessment.\n\nI sent it off to Max with a quick note of apology due to the weather-induced quality issues. He replied within thirty seconds, saying it was cool and we'd still get full credit...and that he was impressed we braved the storm.\n\nEve, sitting beside me now, leaned in for a quick kiss. \"Much as I'd love to pick up where we left off, I need to be home in ten. Mind driving me?\"\n\nIt was only three blocks, but between the dark and still tapering rain, I was happy to drive her. I had walked her most nights but, again, rain and my lack of clothing changed the circumstances. I glanced down at the towel and she chuckled.\n\n\"Drive me just in that,\" she said. \"Dare ya.\"\n\nI sighed but said, \"Fine.\"\n\nEve hopped out of the car and pulled on my t-shirt. It was baggy but looked good on her, especially since she had skipped her bra and her nipples were still quite hard. She pulled on her shorts as well, then wrapped her bikini and bra in her soaked tank top.\n\nThe worst of the storm had passed and we drove in companionable silence. When I was about a block from her house, Eve subtly reached over toward my lap and began tugging at the towel where it was wrapped about my waist.\n\n\"What'cha doing?\" I asked without bothering to try and stop her.\n\n\"Nothing,\" she said with an innocent tone. \"Why?\"\n\n\"No reason.\"\n\nShe kept tugging until the tuck job came undone. As the towel loosened, she pulled it back until my cock was revealed. Understand, it was pretty damn dark in the car, so she probably couldn't see all that much, but what she could see had bounced back from nearly soft to fully erect in the short span of time it took her to undo the towel.\n\nEve didn't say anything. When I pulled into her driveway, she unbuckled and then leaned over to give me another long, heated kiss. Her fingers ran up my thigh and then, ever so lightly, traced the length of my cock, causing it to twitch in response. I could feel her smile through our kiss.\n\n\"Walk me to the door?\"\n\nMy heart was already thudding from her intimate attention. The nervous excitement of her request, though? I thought my hands would begin shaking at any moment.\n\n\"Uh, sure.\" I reached for the towel, but she held my hand and gave me a subtle shake of her head. No towel.\n\nI studied the windows of her house. All were closed, though there was light seeping out from around the curtains by the front door. A porch light was on by the kitchen side door near the end of the driveway -- better than the front porch, yet still very exposed.\n\nI opened my door and Eve, curiously, just sat in her own seat, watching and smiling. As I closed my door, I had a brief moment of fear that she'd lock me out as some sort of practical joke to see how I responded. Fortunately, she wasn't that type of girl. Rather, she was simply giving me the opportunity to walk around the car and help her out. She even took my hand, exiting like some movie star from a limo for a red carpet walk.\n\n\"Thank you, sir,\" she said, hooking her hand in the crook of my elbow as I walked her to the back door. I felt horribly exposed, terrified her parents were waiting and would meet us at the door, finding me not only naked but still partially erect. I'll admit, though, it was also a huge thrill to know she liked seeing me naked.\n\n\"Thanks again for a lovely evening,\" she said when we reached our destination. \"Do it again tomorrow?\"\n\n\"Can't wait.\" I couldn't.\n\nWe kissed again, and she gave my cock a quick squeeze. I waited for her to go inside, wave back at me, and then turn the light off before I finally returned to my car. I didn't bother to cover up for the short drive.\n\n#\n\nNight 5 (Vs. the Open Window)\n\nThe next day dragged on in the worst way. My mind was abuzz with fond memories of the previous night and the absolute craziness of how it ended. Eve and I were finally a couple and she'd made it perfectly clear that she was looking forward to pushing things along quickly. Our mutual desire for one another, now that it was out in the open, had broken the dam between us. Unfortunately, we both had long days at work keeping us apart until our planned rendezvous that night.\n\nWe texted back and forth when we could, reassuring one another that we couldn't wait to get back together. In between those texts, Chuck and I had a bit of a back and forth. I was eager to tell him about me and Eve, yet I didn't want to face his probing questions just yet. He and Becky would find out soon enough. Instead, I pressed for how they were doing in the challenge and he said their record was still perfect. He didn't say it outright, but I got the impression their \"fund-raiser\" scheme might be running out of steam. Chuck hit me up for details as well, but I only said we were keeping up.\n\nEve came over to my place around nine and we hung out in my room until it was quieter out in the neighborhood. We made out for a bit between catching up on our respective days, but didn't go too far since my parents were home. For perhaps the first time since the challenge started, I was more eager than nervous to get on with our skinny dipping. Could we possibly get lucky enough to have a quiet, private pool like we'd had on the first night?\n\nWe changed to our swimsuits in the garage, leaving everything else behind except my phone and our towels. Eve suggested we check Becky's house yet again, even though we were resigned to finding her friend out there, staking the place out with all the lights on. Our only hope was to catch Becky on a night when she simply couldn't be there.\n\n\"Well, so much for that,\" Eve said as we walked past her best friend's house. Even from the sidewalk, we could tell the backyard lights were all on. We were rapidly running out of nights. \"Next best option?\"\n\nI pointed down the block, at a house on the other side of the street. \"Let's check that one. It's a younger couple. Don't know too much about them, but I don't think they have a dog. If it's dark, we're probably good to go.\"\n\nEve nodded and we slipped around the side of the house in question. There were lights on in the house's first floor, but the upstairs was dark. As a younger couple, the odds of them still being awake as the clock approached eleven-thirty were higher than with many of the other places we'd snuck into. That just meant we'd have to be quick and quiet.\n\nThe gate through their backyard fence was cooperative, smooth and almost silent. I took that as a good omen, but found our luck didn't hold once we peered around the corner. The pool, a nice rectangular affair with several lounge chairs dotting the pavement around it, had its underwater lights on. They were dim and the outdoor lights were off. Where the problem arose was in the wide swath of bright lights spilling from the large picture windows in the back of the house.\n\n\"That's not good,\" I said in a whisper. Carefully, I crept further out into the yard, hugging the shadows, in hopes of getting a look inside to see if anyone was there. Eve followed, hand in hand.\n\nBefore long, we spotted a large dining room table situated beside the window. Sitting at the table, side-on to the windows, was a young woman working on a laptop. From there, she clearly would have a good view of the entire pool should she look up.\n\n\"Next house?\" I asked.\n\nEve shook her head no. \"It might be worse, then we'd be out of time. With it being that bright in there, she probably can't see out very well. I think if we're quick and quiet, we can do this.\"\n\nI admired her audacity, even as my stomach clenched with nerves. I wasn't about to chicken out on her, though. Hopefully, she was right about the difference in lights giving us cover.\n\nWe shed our swimwear back by the gate and left it slightly propped, just in case we had to make a quick getaway. From there, we planned our approach and debated where to place my phone to get a picture without using the flash. The lighting sucked beyond the spotlight from the dining room and we weren't going to stand right there and invite discovery.\n\n\"How about on the steps around the side of the pool?\" Eve said, pointing out the spot. \"We can lay on the steps and maybe use the pool light. We'll be mostly underwater, but I think it'll be clear enough.\"\n\nSounded good enough to me, despite it being on the opposite side of the pool. We crept through the yard and then ducked behind what chairs we could as we got closer to the water's edge. Both of us had eyes glued on the woman, who thankfully seemed to be completely oblivious to us. At the edge, heart pounding, I sat down and did my best to slip in quickly, quietly, and without making so much as a ripple. Eve was right beside me. With only our heads above the waterline, it appeared we'd made it undetected.\n\n\"So far, so good,\" Eve said. Her hands brushed across my bare ass as she nudged me to start making my way around the edge of the pool toward the stairs. We kept low and moved carefully. My eyes were glued on the woman, yet behind her I could make out the flickering of different colored lighting on the ceiling. Seemed the dining area was part of a living room that included a television.\n\nWe used the recliners between the house and the pool to good effect, pausing behind each. At the last one before we would reach the pool's steps, we paused to watch the owner and see if there was any reason to fear she might look up abruptly. I had to admit, the woman was easy on the eyes -- seemingly fit and curvy in her tight tank-top -- even if it felt wrong to have such thoughts while hand in hand and naked with my new girlfriend.\n\nThe woman's husband abruptly entered the picture, prompting Eve and I to crouch even lower, eyes barely above the edge of the pool. The guy, probably in his late twenties, was only wearing boxers. He was fit in a men's magazine cover sort of way that made me jealous and insecure. I couldn't help but feel like Eve would judge me against that and come to her senses.\n\nThankfully, the guy never seemed to glance outside. His attention was solely on his wife, who looked up from her laptop and exchanged some words. Would luck favor us with them deciding it was time to go to bed?\n\nLuck, as it turned out, had a quirky sense of humor. Eve and I watched on in stunned silence as the man leaned down and kissed his wife while cupping one of her breasts. The wife appeared to be rather receptive to the attention and their kissing was clearly involving a lot of tongue. I felt Eve squeeze my hand, but she otherwise was frozen.\n\nAfter the opening round, the couple's make-out session didn't move away from the picture window. I was of a mixed feeling about that -- fascinated in the voyeuristic sense, yet a little dirty for my role in trespassing and witnessing a private moment. Regardless how I felt, I couldn't look away. The guy continued to fondle his wife's breasts, eventually pulling her shirt up and off, revealing the lack of anything underneath. She, meanwhile, felt up the obvious tent in his boxers.\n\nEve's grip on my hand tightened, then she began to pull it up until it brushed the side of her breast. I might not be the most experienced guy, but I got the hint. Our fingers extracted from one another and I ran my hand over her bare breast, her hard nipple pressing into my palm. The angle was awkward with that hand, though, so I set my phone on the edge of the pool and took half a step back, positioning myself behind her so I could easily reach around both sides. As my hands encompassed her breasts, Eve sighed and melted back into my body. Her butt pressed into my erection, pinning it between us.\n\nI don't recall having ever been so torn between sources demanding my attention simultaneously. Clearly, Eve was every bit as enraptured with the show through the window as I. I could feel her breathing become deeper and she eventually reached back and seized my cock.\n\nThe couple of our inspiration didn't disappoint. Before long, the wife had stripped her husband of his boxers. The guy's cock pointed straight at her and she gave it a few playful tugs before leaning forward to take it into her mouth. I'd seen plenty of blowjobs on porn before, but this was the first in person. Judging by the way Eve was responding to the sight, I had a pretty good feeling about being on the receiving end of the next one I saw.\n\nI nibbled Eve's ear, causing her to squirm. I could feel her smile through her jaw, though, and her hand gave my cock a few playful tugs.\n\nEve whispered, \"I know we shouldn't be watching...\"\n\n\"Hard to stop.\"\n\n\"Exactly.\"\n\n\"Maybe they wouldn't mind if they knew how much we appreciated it. How much it was affecting us.\"\n\nEve squeezed me again. \"Yeah, hard to miss how it's affecting you. Bet you wish that was you in there.\"\n\nI didn't get the sense she was implying anything. Teasing, rather. I ran one hand down her tummy and through the thin strip of hair over her crotch. Eve didn't resist my approach.\n\n\"I'm exactly where I want to be,\" I said.\n\nEve turned her head just enough to kiss me. We shared a brief, intense bout of tongue jockeying before returning our attention back to the show. The blowjob clearly hadn't been done to completion as they'd already disengaged. The husband relieved his wife of her bottoms, then hoisted her onto the table after shoving aside the laptop. After a bit of kissing, he knelt on the floor and his lips and tongue went to work on her pussy. I took that opportunity to mirror their actions in a sense by tracing my finger along Eve's slit for the first time. Even under the water, I could feel her heat and slickness. She clearly enjoyed the contact as she pressed back into my body and shifted from squeezing to lightly rubbing my cock.\n\nWe might have been like that for five or ten minutes. Time stood still, me and Eve and our inspiration. Eventually, the woman must have reached a climax as her back arched high off the table and her hands clutched the edges. The friction and angle underwater wasn't terribly conducive to me reaching an orgasm (though I enjoyed the hell out of Eve's attention) and she similarly seemed to be more in a state of elevated bliss rather than out-of-body orgasm. Something to aspire to later.\n\nI half expected the couple through the window to transition straight to sex. Instead, they embraced and kissed for a bit before getting up and retreating further back into the house and out of sight. Probably looking for somewhere a bit more comfortable. Regardless, it was probably for the best -- we still needed to take a picture and we really didn't need to be spying on anyone's intimate moments.\n\n\"Show's over, I guess,\" Eve said, sounding a little disappointed. \n\n\"Pretty hot, huh?\"\n\nWe kissed, then she agree. \"Yeah. Definitely some things for our to-do list.\"\n\n\"We have a list?\"\n\nShe smiled and gave me a quick kiss again, along with another squeeze of my cock. \"Uh huh. It's a long one, too.\"\n\nI grinned. \"Can't wait to get started.\"\n\n\"Down, boy. The first item on the list is to get tonight's picture.\"\n\nShe was right. Our hands relinquished one another's genitals, but didn't stray far. We quietly made our way down to the end of the pool where we'd intended to take our picture. I couldn't help but notice how our world had shifted entirely just in the span of time it'd taken to cross the small pool.\n\nI set up the camera on its tripod just outside the pool while Eve waited on one of the steps, still half submerged.\n\n\"How do you want to do this one?\" I said.\n\nShe gave me a grin. \"How about you sit up on the edge, kinda turned toward the house.\"\n\nI nodded and followed her instructions. That put my back and side to the camera. Eve then climbed out of the pool and straddled my lap, her legs wrapping around me. My hardon poked into the fuzz of her pubic mound, eliciting a not-so-innocent shrug from her. She wrapped her arms around me and I did the same to her.\n\n\"Smile,\" she said out loud, triggering the 3 second delay on my phone's camera. Eve then drove her tongue down my throat. My only recourse was to fend off the assault with my own tongue. If we hadn't been on a schedule and trespassing naked in the yard of a couple we knew were still awake, I think we'd have just gone for it right there. Alas, we did eventually come to our senses.\n\nEve's posing of us was masterfully erotic without showing anything but a little of my butt. Far less than some of our previous pictures. Max would certainly know our relationship had taken a huge step forward. Thankfully, he wasn't the sort to make a big deal of it. Frankly, I think this was part of his plan all along. Eve and I would owe him more than he could imagine.\n\nBy the time we made it back around the side of the house and started dressing, Max sent his reply. \"Nicely done, you two!\"\n\nI showed Eve the reply, to which she gave me another smoldering kiss. \"C'mon, let's go.\"\n\nWe walked back through the dark and quiet neighborhood, hand in hand. It was the most intimate conversation of my life and not a word was spoken. Our touch and looks said it all.\n\nWhen we finally reached my garage, I was ready to burst. Eve's phone, tucked away in her purse in the back seat of the car, took that moment to chime several times in quick succession. Unusual for midnight, unless it was Becky. Eve groaned.\n\n\"Ugh, not now!\" Complain as she might, though, the siren call of her phone drew her to check it. Her expression darkened instantly and I knew anything I thought might be happening tonight between us was off.\n\n\"What?\" I asked softly.\n\n\"My parents are taking my grandma to the hospital,\" she said, already beginning to shed her suit so she could get dressed. For once, her nakedness didn't draw me in.\n\n\"Shit, not cool. Did they say what happened?\"\n\n\"Chest pains. Apparently, they tried contacting me over half an hour ago but I didn't reply. They're at the hospital now.\"\n\n\"Want me to take you there?\"\n\nShe struggled into her shorts and tossed her suit into the back seat. She looked both worried and apologetic. \"If you could.\"\n\nI hastily dressed as well and we made the quick ten minute drive to the hospital. Eve was busy exchanging texts with her mom and gave me what little updates there were. Apparently her grandma had been taken back and was being seen now.",
        "\"Sorry this evening had to end like this,\" she said as we pulled into the ER entrance. She squeezed my hand.\n\nI waved her off. \"It's fine. Really. I just hope your grandma is okay. Want me to come in with you?\"\n\n\"Nah, that's fine. But thanks for the ride.\"\n\n\"Text me. Let me know what's going on. I'll be up for a while. And even if I fall asleep, you can always wake me.\"\n\nShe leaned over and gave me a kiss carrying a world of promise. \"Thanks.\"\n\nI watched her go, feeling more connected than likely could have happened even if we had gotten to spend the next hour or two together. \n\n#\n\nNight 6 (Vs. The Fury and The Fuzz)\n\nEve's grandma, thankfully, was okay. Chest pains led to a battery of tests and an overnight stay, but by morning she was cleared and sent home. Eve had been in touch with me until after one in the morning and seemed to be very appreciative of my support.\n\nWe both dragged through a long day of work, playing text tag when opportunity allowed. Our competition was in the home stretch with only two days left and we both knew we still had to hit the hardest target -- Becky's house. Eve was getting grumpy at her friend for spending every night in her pool as a deterrent. I suggested maybe we should just ask Becky if we could use it, but Eve said there was no way Becky would go that easy on us. Knowing their competitive nature, she was probably right.\n\nEve spent the evening with her parents, including a trip to her grandma's to take over dinner. By the time she was able to come to my place, it was already after eleven o'clock. The night was cooler than it had been all week, but at least it wasn't stormy. We quickly changed to swimsuits, grabbed towels and my camera, and slipped out into the quiet neighborhood.\n\n\"Check Becky's place again?\" I asked.\n\n\"No,\" Eve said, her frustration clear. \"She's sitting outside, waiting for us to try. I was talking to her before coming over.\"\n\n\"Oh.\" That left only one other house on our list, one which was risky mostly thanks to having a pair of two-story homes adjacent to it along with good lighting and at least one neighboring dog. The only upside was that it backed up to the golf course.\n\n\"Worse, they've managed to keep pace, haven't missed a day,\" she said. \"At best, it looks like we can tie them, and that's assuming we can get a pic from her pool.\"\n\n\"Which she seems hell bent on preventing.\"\n\nEve nodded. \"Yeah. Oh, and she invited everyone over to her place tomorrow night, so she can 'be crowned at midnight.' Ugh. Smug bitch.\"\n\nMy girlfriend's (I still pinch myself, saying that) competitive streak was rubbing off on me. I didn't want to lose and was willing to take greater risks to make it happen. Still...\n\n\"Got any ideas?\"\n\nShe smiled. \"Actually, I might. But I'm not sure you're gonna like it. I'll tell you after we knock out this other one.\"\n\nWe'd already reached the house in question. Indeed, the place was well-lit both front and back. I knew an older couple lived there, so I was hopeful they preferred an early bedtime. Several lights on inside, though, muted my optimism. We took cover in the darkness behind a neighbor's pine tree to assess the situation.\n\n\"This house definitely has a dog,\" I said. \"Pretty sure the one on the other side does as well. Hopefully both in for the night.\"\n\n\"Hope so, since I forgot to bring bacon.\"\n\n\"I vote for a quick hit -- get in, get the pic, get out. Maybe go back to the original pose, sitting on the edge with our backs to the camera. We can use the light from the house to make sure we're lit well enough to avoid using the flash.\"\n\nEve nodded in agreement. \"Good, let's do it.\"\n\nWe quietly stripped out of our suits and rolled them up in the towels. These we left under the bows of the neighbor's front yard pine, the best cover from the streetlight across the street. Exposed, we hurried over to the side gate and found it padlocked. Seriously?\n\n\"Fuck,\" I muttered. \"Guess we're going over the top.\"\n\n\"Can you climb it?\" Eve clearly came to the same conclusion as I in that there wasn't anything handy to use for a boost. We could go all the way around and try to approach from the golf course side, where they had a shorter, decorative iron fence rather than the six-foot wood privacy fence on this side, but that'd take too long to make the hike all the way around.\n\n\"I think so, yeah,\" I said. Hopefully I wouldn't get too scratched up in the process.\n\n\"Okay, boost me up, then,\" she said.\n\nI hooked my hands and she put her foot in it. I hoisted her high enough that she was able to throw her foot over the top and find purchase on the opposite side. She tapped my shoulder and then climbed over, landing lightly on her feet. I handed my phone and tripod over, then tried to climb over myself. It was unpleasant, to say the least, but I eventually made it over without snagging my balls on the top. Halfway over, I found myself wishing I'd left my suit on until after getting into the backyard. Hindsight.\n\nEve caught my awkward landing and we shared a quick kiss. \"Ready?\" she said, handing my phone back.\n\nI put the phone in the tripod and made sure the camera app was up and the settings ready to go. \"Yup.\"\n\nWe hadn't taken five steps toward the pool when the backyard floodlights snapped on. Motion sensitive, no doubt, as we hadn't gone far enough or made enough noise to have been noticed. We still instinctively froze, though. Geez, were these lights bright. It felt like prison yard spotlights. We didn't have time to retreat and the lights would remain a problem.\n\n\"Go!\" I whispered urgently. \n\nWithout wasting time to look back toward the house, we hurried to the closest edge of the pool. I set the tripod up while Eve dipped into the water. She was pushing herself back up onto the ledge when I did the fastest in and out ever.\n\n\"Smile.\" I spoke the phone's trigger word at the exact same moment the back door opened. Eve and I both snapped our heads around and saw an angry old man storming out of the door, dressing gown whipping out in his wake. Holy balls did he look pissed.\n\nThe phone clicked, no doubt pricelessly capturing our terrified expressions. My next thought was to hope he hadn't seen our faces well enough to recognize us.\n\n\"Go, run!\" I whispered urgently to Eve as the old man started cursing us out for trespassing. \"To the golf course.\"\n\nI knew we'd never make it over the locked privacy fence fast enough, so I hoped the shorter decorative fence along the back would work better. While she jumped to her feet and ran around the pool, I scrambled for my phone. If the guy had been a few years younger, he'd have beaten me. As soon as it was in hand, I made like Usain Bolt on my way toward the back gate, passing Eve along the way. Thank god, there was no lock on this one.\n\n\"Damn perverts!\" the old man yelled. \"I'm calling the police! You'll be rotting in jail, mark my words!\"\n\nThe neighbor's dog, it turned out, was indeed outside. It may have missed out sneaking into the back yard, but it didn't miss the old man's creative string of curses. Barking like mad, I'm sure it woke everyone within three houses on either side. \n\nThrough the gate, Eve and I went racing straight into the golf course. It was dark, save for the moonlight, and the smooth grass and open space allowed us to run with little risk of injury. I knew my way around it somewhat and pointed us toward an adjacent hole which had a bit of a depression that could offer us cover from casual observation. We'd probably ran a good quarter mile when we finally came to a stop, hands on knees and breathing hard.\n\nTogether, we just started laughing. It was probably the best natural response to the fear that had taken us minutes earlier. When this challenge started nearly a week ago, I'd half expected every night would be like this one. Thankfully, we'd dodged a lot of bullets, possibly even one tonight.\n\n\"Oh my god, the look on his face,\" Eve said. \"The only thing missing was a pitchfork.\"\n\n\"I think he really would have fought me if he could have caught up.\"\n\n\"Think he'll call the police?\"\n\nI shrugged. \"I don't know. Wouldn't be surprised. We'll have to keep an eye out.\"\n\n\"Did we get the picture?\"\n\nI turned on my phone and pulled it up. Sure enough, it was as bad and funny as I thought it would be. No blurring necessary, at least, so I sent it to Max with a one-word caption: Caught!\n\nEve nestled up tight to me and I instinctively wrapped an arm around her. Now that we'd had a minute to catch our breath, I realized it was a rather chilly night compared with what we'd had most of the week. Dripping wet and naked with no towels and exposed to the breeze out on a golf course fairway, it could get uncomfortable before long.\n\nMax's reply came half a minute later: \"Awesome! Well done. I take it you got away?\"\n\nI sent a quick reply: \"We did, yes. Our clothes and towels, however...\"\n\n\"Uh oh. No IDs, I hope?\" Max texted. \n\n\"No, just swim suits and towels. Nothing that can identify us.\"\n\n\"Good luck getting home!\"\n\nI was tempted to ask if he could pick us up, but we'd have to face him naked. As it was, we weren't too far from home and we should be able to sneak our way back at this time of night.\n\nEve, apparently, had something else on her mind. She turned fully into me and wrapped her arms around my neck, pulling me down for a hot kiss. I met her lips and tongue in kind and felt a stirring down below despite the inevitable shrinkage from the cold. My hands slid up until I cupped both of her breasts, the nipples stony islands in a sea of goosebumps.\n\nAfter several minutes of intense making out, Eve pulled back and gave me a sly smile. In the cool moonlight, she transformed from beautiful to goddess -- blue white sparkles off every drop of water, highlighting her curves in entrancing fashion. Then my goddess sank to her knees and ran her fingers along the underside of my cock. I wasn't sure I had the strength to remain standing under this kind of attention.\n\nEve kissed the tip, then licked it. I had no idea if she'd ever done this with another guy before. My guess was no, but it certainly wasn't the time to ask or speculate. She continued with simple kisses and licks, first around the head and then along each side of the shaft. A few involuntary twitches on my part prompted her to smile up at me.\n\nAs she grew confident, Eve began fondling my balls with her fingers. Then, finally, her lips parted and she took me into her mouth. The warmth and smoothness of the contact was divine, but the greater effect it had on me was an appreciation for her enthusiasm. She wanted this as much or more than I did. And I, in turn, couldn't wait to reciprocate.\n\nEve tried varying her approach to sucking me off, mixing tongue and depth and speed. Eventually, she settled into taking about half my length while jerking the rest of me off by hand. It was definitely a sweet spot for me and I knew I wouldn't last even a minute if she kept up her pace. My appreciative moans and gentle hands on her head seemed sufficient to communicate.\n\nMy attention was jolted away when a pair of headlights flashed across the course from the direction of the clubhouse. I couldn't make out the vehicle from here, but at this time of night it could only be a police car in response to the old man's complaint. Shit!\n\nEve must have picked up on my change in demeanor as she pulled off and looked up. \"What?\"\n\n\"Cops, I think,\" I said. I doubted they'd be able to see us here, but we were still fairly exposed on a bright night. \"We should find better cover.\"\n\nI helped Eve back up and, hand in hand, we hurried down the fairway and across a putting green, my boner leading the way. The fine cut grass was as soft as carpet on my bare feet, cool and inviting. From there, we cut to our left and found a depression behind a steep-sided sand trap. There were trees not far away, a line between the course and the edge of our neighborhood, in the event we needed to make a run for it. \n\nWe looked back and could see the vehicle driving slowly along the cart path, now with a window-mounted spotlight scanning across the course. Geez! I felt nervous energy being on the wrong end of a police manhunt. The more rational part of me said the police had nothing better to do and were looking mostly as a token effort for the old man who'd called us in.\n\nEve and I crouched down and then laid flat in the short grass as the cruiser reached its closest approach to us. We held hands, bodies pressed close to one another, and waited with breaths held (as if that would help). The light flashed over our heads, illuminating the trees behind us, but we were deep enough to remain out of the beam. As quickly as it had approached, the light faded and the car continued away toward the back nine.\n\n\"Oh my god,\" Eve said, giggling as she rolled into me. \"I can't believe we're hiding from the police.\"\n\n\"While naked.\"\n\n\"Craziest. Night. Ever.\"\n\nI turned to face her and gave her a big kiss. \"Best night ever.\"\n\nShe smiled. \"Even after getting interrupted?\"\n\n\"Even still.\"\n\nEve threw a leg over my hips and rolled atop me. I was acutely aware of the fuzz of her trimmed pubic mound pressing into my rejuvenating erection. She propped herself up and gave me a semi-serious look.\n\n\"Thanks again, for participating in all this. I didn't think I'd put you at risk of getting arrested.\"\n\nI ran my hands down her back and over her hips. \"No thanks needed. It's been the best thing that's ever happened to me.\"\n\nEve's smiled widened. \"Best thing so far.\"\n\n\"You know how some people can point to a single decision in their life and say how much different things would be if they'd gone the other way?\"\n\nShe nodded.\n\n\"Well,\" I said, \"I can confidently say that participating in this little challenge was one of those moments. And I'll never regret saying yes.\"\n\nEve looked like she might have been on the verge of tears. If so, she hid it by kissing me hard and long. When she finally came up for breath, she said softly, \"I love you, Rand.\"\n\n\"And I love you, Eve,\" I said, meaning it.\n\nWe kissed some more. The longer it went, the more our hands roamed one another's bodies. Eve's crotch kept grinding into me, so much so that I feared I might climax.\n\nEve broke the kiss and whispered in my ear. \"You know those moments, those decisions, in peoples' lives you were just talking about?\" \n\n\"Yeah?\"\n\n\"I think this is another one of those.\"\n\nI got the hint without her having to spell it out. Was this going to be our first time making love -- out in the middle of a golf course, naked and hiding from the police? Could it be much more memorable any other way? There was only one right answer.\n\nI gently rolled over, lowering Eve to the soft grass and then settling in between her legs. She wrapped her arms around my back and spread her legs to accommodate me. Yes, we were definitely on the same page.\n\nShifting my hips around, I finally felt my cock line up with Eve's pussy. She was definitely wet and we had long since dried from our dip in the pool. Eve's legs wrapped around me encouragingly and I nudged cautiously forward. I felt her labia part and soon I was inside her, inside my girlfriend and now lover. Eve sighed contentedly as we learned to accommodate one another. There were no doubts about whether this was the right thing or the right time for us.\n\nOnce I was as deep as I could go, we just held one another and kissed tenderly. After a bit of that, I felt her smile.\n\n\"What?\" I said.\n\n\"This. After imagining it for so long, I was afraid I'd be disappointed. Like I'd set up impossible expectations.\"\n\n\"And now?\"\n\nEve sighed. \"I think my imagination needs some work.\"\n\nI kissed her. \"We can circle back to that. Later.\"\n\nSlowly, I began rocking my hips. If just filling her felt amazing, this was off the charts. All my senses were blazing, soaking up every aspect of this wonderful girl -- her sweet taste, the quirky mixed scents of fruity shampoo with chlorine and grass, her smooth, hot flesh enveloping my own. \n\nAs the tempo of my thrusting increased, Eve's voice whispered between our kisses. Sighs, moans, my name, yes, yes, yes. I don't know if she was talking to me or to the fates that had brought us together.\n\nOur first time probably didn't last more than a few minutes. I couldn't honestly say, looking back. It was over in a flash, while being a perfect moment that would reverberate long into the future. I was so primed and eager and young that I probably came far sooner than I'd have liked. But that climax...amazing as it was, the best part was sharing it with Eve. She pulled me in tight with her legs, refusing to let me come anywhere but deep inside her.\n\nAfter, we held each other for a long time, kissing softly and trying to drag that perfect moment out to eternity. Unfortunately, my cock softened and eventually slipped out, not long before my elbows started getting tired and sore from propping myself up in the grass. Reality -- what can you do? Us? We giggled as I rolled off her and flopped spread-eagle on my back, naked beneath the starry sky. Eve nestled up in beside me, head on my shoulder and hand on my chest.\n\n\"I know we said we owed Max a thank you,\" she eventually said. \"I'm not sure that's enough.\"\n\n\"Well, future Queen of Bear Creek, did you have something else in mind?\"\n\nEve poked me playfully on the nose. \"Not really. And don't go crowning me yet. We still need one more pool tomorrow.\"\n\n\"Becky's.\" We both knew her friend would do everything in her power to make that difficult.\n\n\"Yup.\"\n\n\"Got any ideas?\"\n\n\"I do, actually,\" she said with a playful tone. She told me.\n\n\"That's...bold.\" Daring and a little crazy was more like it, but I'd follow Eve anywhere at this point.\n\n\"So, darling, you're in?\"\n\n\"Absolutely, honey.\"\n\nWe kissed.\n\nShe said, \"Now, what do you suppose the odds are that our suits and towels haven't been discovered and thrown in the trash?\"\n\n#\n\nNight 7 (Vs. The Competition)\n\nI suppose I should recap for the curious how the rest of the night panned out. We got cold and had to hurry back into the neighborhood. It was well after one o'clock and the old man's house was still lit up outside. Disappointingly, our suits and towels had been found, despite hiding them under the neighbor's tree. Cutting our losses, we snuck through the neighborhood back to my house, using every shadow we could find along the way. As far as we could tell, no one saw us.\n\nThe next day, the final one of the contest, was a busy one. I was in understandably great spirits, as was Eve. The scheduled pool party at Becky's that night was the one thing that put a tiny damper on my day. We had our plan and it was going to be...uncomfortable? Awkward? Revealing? All that and then some.\n\nEve worked all afternoon and I picked her up when she got off at ten o'clock. In the back of my car, she changed into a new skimpy black bikini she'd picked up from a shop in the mall during one of her breaks to replace last night's loss. After all the skinny dipping, it seemed a shame that we had to wear anything now when swimming.\n\nWe reached Becky's a little before eleven and let ourselves into the backyard through the side gate. Becky, Chuck, and Max were already in the pool with some pop music playing softly enough not to disturb the neighbors. An assortment of drinks and snacks were sitting on the patio table. There was the same friendly vibe we were used to with this group, though a look from Becky added an undercurrent of competitive pride. She thought she had this competition in the bag.\n\n\"Ready to bow before your queen?\" Becky called out as we dropped our stuff off and joined them in the pool. Yup, she was feeling confident. \n\n\"Sorry, you're ready to bow before your queen?\" Eve said, slinging back just as much confidence. That seemed to make Becky wonder.",
        "\"As if,\" Becky said. \"Chuck and I went a cool seven for seven. At worst, that's a tie.\"\n\nI'd quietly held out hope that the other couple had missed a day, perhaps today, but apparently that was not to be. I could live with a tie, I suppose. Eve would be disappointed, yet we both knew we'd really won where it mattered.\n\n\"The contest isn't over yet,\" Max said. \"I can't make a ruling until midnight.\"\n\nI was watching Becky when the referee made his announcement. She first raised an eyebrow and then turned a curious eye toward Eve. After spending a week \"protecting\" her pool from our nighttime incursions, I think she was suspicious. If so, though, she said nothing else.\n\nHaving seen little of our friends over the last week, we caught up and generally just had a good time swimming, eating, and drinking. I checked my watch frequently as the minutes ticked away toward midnight. When it got to five minutes before midnight, I gave Eve a nod that she returned.\n\nWe met down in the deeper end of Becky's pool, taking each other in a loose embrace and sharing a lingering kiss. Her eyes sparkled with mischief, so I didn't have to ask if she was still ready to go through with our plan. Was I ready to take this step? If not for this wonderful girl at my side, no; with her, though, I felt I could do anything.\n\n\"Hey, what's going on over there?\" Becky called out. Sure enough, she'd been watching us like a hawk.\n\n\"Nothing much,\" I said, innocently.\n\nIn reality, I was reaching under water for my swimsuit and working it down and off. Eve, meeting my eyes and smiling like a fool, was doing the same with her bikini. Of all our nights skinny dipping, this was easily the most nerve-wracking save for that very first night. We were doing it knowingly in front of others (granted, friends), but also with the knowledge that Becky's parents and brother were home.\n\nDespite my nerves, it still felt wonderful getting my suit off. There's just nothing quite like that feeling of freedom in the water. Eve handed me her bottoms, then began removing her top. There could be no doubt among the others as to what we were doing now, even with Eve's chest just below the water line.\n\n\"I figured as much,\" Becky said, slowly working her way toward us. \"Thought you could sneak your last picture in just under the wire?\"\n\n\"I don't know what you're talking about,\" Eve said with saccharine sweetness. She handed me her top, at which point I tossed both of our suits out onto the side of the pool.\n\nBecky gave us a smug look. \"Max, how much time is left?\"\n\nMax swam over to the side and picked up his phone. \"Uh, about a minute and a half.\"\n\nBecky climbed out of the pool and interposed herself between us and where we'd dropped our clothes and phones. She crossed her arms under her ample tits.\n\n\"Well,\" she said, \"that doesn't leave much time to get your phones to take a picture and send it to Max, does it? And don't go asking him to take the picture. You gotta get it yourselves.\"\n\nEve and I shared a look, then smiled back at Becky. \"Guess you got us, huh?\" Eve said. She then melted into my arms, wrapped her legs around my waist, and kissed me.\n\nI could no longer see Becky, but I could full well imagine the look of confusion on her face as we blew her off. Chuck, who I could just see out of the corner of my eye, looked more amused than anything.\n\nThankfully, Eve eased off before I got too aroused, not that it'd be that easy for any of the others to see my state underwater. She unwrapped herself from me, our hands remaining entwined as we turned to face the others. Becky, indeed, was frowning as she turned from us to Max.\n\n\"Time,\" Max said. He set his phone down and hopped up on the side of the pool.\n\nIndeed. It was time for Max to announce we'd tied. And, as far as Eve and I were concerned, that would be a victory in that it'd drive Becky nuts.\n\nBecky hopped back in the pool and idly paddled over to Chuck. I caught my best friend's eyes lingering Eve's direction, no doubt hoping to catch a glimpse of her bare breasts. \n\n\"Well,\" Becky said to Max. \"Which is it? Did we win or tie?\"\n\nMax knew how to draw this out for drama, smiling like a game show host about to announce the grand prize winner. \"We do, indeed, have a winning team.\"\n\nWhat? That didn't seem right. We knew both teams had gotten all seven days. Eve squeeze my hand, though, mirroring my spark of hope.\n\nBecky looked excited until she saw us, then it changed to uncertainty.\n\n\"First,\" Max said, \"I'd like to congratulate both teams on their resolve, courage, and ingenuity. You all faced substantial challenges and did an impressive job of delivering photos day after day. That said, one team delivered seven qualifying pictures while the other only had six.\"\n\nBy the confused looks, neither team seemed to know who had screwed up. Had I emailed Max late one night? I didn't think so, but I suddenly couldn't be sure.\n\nAfter the dramatic pause, Max continues. \"It's my great pleasure to present your new Queen of Bear Creek, Eve! And consort, Rand.\"\n\nI couldn't believe it, an outright win! Eve squealed and jumped into my arms, kissing me again. I could already hear Becky protesting but really didn't care. \n\n\"Relax,\" Max said, trying to mollify the ultra-competitive Becky. Eve and I stopped kissing long enough to listen. \"Yes, you guys provided seven pictures of yourselves with strangers, all in your underwear. That was no small task. But I had to throw one out on a technicality. See, I'd explicitly said all seven had to be taken at different houses...not just with different people. Two of your pictures, on consecutive days, were taken with different people in the same house. Sorry, but that's the way it goes.\"\n\nOuch. I hadn't even recalled that bit of the rules, but it wasn't something that had applied in our case. We knew from the get-go that we had to take pictures in each of the seven neighborhood pools.\n\n\"But what about them?\" Becky said, pointing at us. \"When did they get a picture in my pool?\"\n\nWe left it to Max to answer this question. \"They took it at ten o'clock this morning. Sent in their copy just a few minutes later.\"\n\nBecky looked dumbfounded while Chuck, at her side, took it in good humor. Probably for the best that his girlfriend couldn't see his expression. \n\n\"In broad daylight? While the neighbors could see? Hell, my brother was home then.\"\n\n\"Yup,\" Eve said, letting a little self-satisfied smugness go through. She deserved it, too, as her plan to hit Becky's pool in the middle of the day had been bold in the extreme. Getting naked with just minutes before the end of the contest? That was just a ploy to give Becky false hope that a win was within her grasp.\n\n\"Son of a bitch,\" Becky said, finally beginning to accept she'd been bested.\n\nChuck chimed in, \"So, uh, why did you two get naked just now, then?\"\n\nI smiled at my friend. \"Because after seven nights of skinny dipping, we found we rather like it. Prefer it, even.\"\n\nEve wrapped an arm around my shoulder. \"Amen. And, now, as my first decree as your sovereign ruler, I'm ordering everyone to get naked. This is now a skinny dipping party!\"\n\nBecky's eyes widened and even Chuck looked uncertain. Max, meanwhile, just smiled and seemed to take it in stride. Eve hadn't mentioned this to me, but we'd only been hoping for a tie. Maybe she just came up with it on the fly.\n\n\"Uh, hello,\" Becky said. \"My parents are home.\"\n\nEve rolled her eyes. \"So? And they're probably long since asleep, like usual.\"\n\n\"But they could look out at any time.\"\n\nEve sighed and gave Becky a disappointed look. \"I think it's pretty clear why I won this contest, then, huh? Chicken?\"\n\nBecky's eyes narrowed, but then she laughed. \"That's low.\"\n\n\"That's low, 'your highness,\" Eve corrected.\n\n\"Your highness,\" Becky said. \"Fine.\"\n\nBecky was a good sport in the end, shedding her bikini and making it clear that Chuck had better be losing his suit as well. Max slipped back into the water and soon was tossing his shorts over the side with the rest of them. Granted, we were all \"hiding\" underwater, probably as a silent nod toward the parents being home, but everyone knew what we were doing. I doubt more than five minutes passed before everyone had started getting used to it. Within fifteen minutes, we were getting out of the pool to fetch drinks and snacks with hardly a care in the world that our friends could see us naked. Everything had changed while the most important things were the same as ever.\n\n\"So, Eve and I need to say one more thing, before this party wraps up,\" I said, hoisting my soda as if in a toast. Eve, sitting on my lap as we were all hanging out in the shallow end where there were underwater benches, turned to give me a curious look. \n\nOnce I had everyone's attention, I turned to look at Max, the contest's official. \"Max, I don't know if this was why you'd paired me with Eve for this contest, but we owe you our thanks for the nudge that finally got us together.\"\n\n\"Hear hear!\" Chuck said, smiling.\n\n\"About damn time,\" Becky said, nudging her best friend in the arm.\n\n\"You're most welcome,\" Max said. \"I didn't exactly plan it that way, but I was hopeful.\"\n\nEve said, \"If there's anything we can do to repay you, just let us know.\"\n\nMax looked deep in thought for a moment. \"Actually, there is something you could do.\"\n\n\"What?\" Eve and I said in unison.\n\n\"Tell me what happened after you got caught,\" he said with a grin.\n\nBecky and Chuck both looked surprised and very interested as well. I could feel Eve wilt a little with the forthcoming embarrassment. \n\n\"You got this one?\" she asked me.\n\nI sighed. \"Which time? We got caught twice.\"\n\n\"Oh, right,\" Eve said, remembering the first couple who'd been sitting out in their yard and then hung out with us for a while. Mike and Annette. And that reminded me they were on vacation now... \n\n\"Last night,\" Max said by way of clarification, snapping me out of making plans for some alone time tomorrow night with my girlfriend. \n\n\"Ah, that,\" I said. \"Well, we were just taking our picture when the owner, some old geezer, came out and was screaming at us. So we grabbed my phone and ran -- right onto the golf course. And then the police were looking for us and...uh...our clothes were gone when we got back.\"\n\n\"So you didn't get caught?\" Max said.\n\n\"No,\" Eve said. \"Thankfully. That'd have been...embarrassing, to say the least.\"\n\n\"Oh, come on,\" Becky said. \"That's the weakest story ever. We need details.\"\n\n\"Yeah,\" Chuck said. \"I mean, come on. You're naked on a golf course. Did you at least get in nine holes?\"\n\nBefore I could come up with some witty response, Eve answered. \"Let's just say Rand got a hole in one and leave it at that.\"\n\nI felt myself blush at the innuendo, but our friends loved it. They loved us and might have been just as happy we'd finally hooked up as Eve and I were. I was so going to miss these days as we all spread out for college. For now, though, I was determined to enjoy every moment of it.\n\n\"Hmmm...naked golf,\" Chuck said. \"That does sound like fun.\"\n\n\"Mixed doubles?\" I said.\n\nMax's eyes shifted back to magnanimous official mode. \"Do I sense another challenge coming on?\"\n\n#\n\nSo that's it, my tale of how one decision dramatically altered the landscape of my life, thankfully for the better. One of my best friends became my girlfriend and the rest of my friends became even better ones as the last barriers fell between us. Yeah, there were many more nights of skinny dipping (among other naked adventures) shared that summer and in the years to follow, but it was and always will be that week I remember as the best of them."
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "challenge",
        "dare",
        "friends",
        "naked",
        "pool",
        "skinny dip",
        "skinny dipping",
        "sneaking",
        "streaking",
        "trespassing"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/seven-nights-adippin"
}