{
    "title": "Odette: Path C",
    "pages": [
        "I sighed. \"Two minutes,\" I spat at Ollie angrily. \"Randi, go ahead, I will come in in a minute.\"\n\nI turned back to Ollie and he was opening the passenger door for me. \n\n\"We can talk right here,\" I said, gesturing at her driveway.\n\n\"I want privacy,\" he said, picking me up by the waist and setting me in his truck, sliding me over to the middle before shutting the door. He came around and got in and I scooted back to the door.\n\nWhen he put it in gear and started driving, I felt a little panic well up. \"You said talk, not leave! Stop, Ollie!\"\n\n\"I just want to go somewhere private so we can talk!\" he yelled with a scowl.\n\n\"You said two minutes!\"\n\n\"Two minutes when we get there!\"\n\n\"Ollie, pull over!\"\n\n\"NO! Just sit tight till we get there.\"\n\nI crossed my arms and hunkered down angrily. He was getting ridiculous! \n\n\"Det,\" he said more softly, anguish in his voice. \"I don't want you to go!\"\n\n\"Ollie, my whole life is back there! I don't feel the same about you. We are too different, you aren't who I thought you were at all.\"\n\n\"Because the girls?\"\n\n\"No. I mean, not just the girls. We are different.\"\n\n\"That doesn't really matter though, does it?\" he said angrily. \"Opposites attract and all that. And who is the liar? I was there when we kissed, remember? I know how you felt, I felt it too. And I know how you looked at me.\"\n\n\"Ollie, I was lost. I am still lost. I was grasping for something solid to hold on to. It was nice for a minute, but we really are too different. Please let this go? I don't like you like that.\"\n\n\"We'll see,\" he half snarled. \n\nHe was driving the opposite way out of town, passing by the trailer park where I thought he was taking me. \n\n\"Ollie? Where are we going?\" I asked fearfully.\n\n\"I said we were going somewhere.\"\n\n\"I don't want to! Take me back home, please?\"\n\n\"I'm not going to hurt you,\" he said, turning to look at me like I had offended him.\n\n\"What are you going to do?\"\n\n\"I told you, I want to talk to you.\"\n\n\"Ollie...\"\n\n\"Just hold on,\" he grumped. \"Wait and see.\"\n\nI sighed and let my head fall back miserably. When he turned and started up a small gravel road up the side of the mountain, I got curious. It took twenty long minutes for him to pull off the road. He helped me out of the truck, took my phone and set it on his dash, then led me to a huge cliff overlooking the town.\n\nI pulled back and stayed well back, feeling queasy and lightheaded.\n\n\"Don't like heights?\" he asked, concerned.\n\n\"No,\" I answered, backing up even more. \n\nHe nodded, then moved closer and caught my hand. To my horror, he went to one knee and pulled a little box out of his pocket.\n\n\"Ollie, don't you dare!\"\n\nHe looked at me with a scowl, not letting go of my hand. On his knee, he was only slightly taller than I was. \"Odette, I think you are wrong. We are meant to be, you and me. That's why you ended up here in such a weird way. You came so we could meet. I fell hard, the second I saw you. You have to know that. You say you can't stay, but you could if you wanted to, and if you refuse? I'm eighteen. I can come to Atlanta with you. I wouldn't like it much, but I would do it. For you I would do anything.\" He flipped open the box with his thumb, still holding tight to my hand with his other hand. There was a little silver filigree ring inside, it looked like an antique. \"It was my grandmothers.\"\n\n\"Ollie! Let me go! This is ridiculous!\"\n\nHe snapped the lid shut angrily, then shoved it in his pocket. As soon as his hand was free, he pulled me against him and took hold of my face, kissing me. I pulled back and shoved with my hands, but he held me, forcing the kiss on me.\n\n\"Stop!\" I pleaded when he finally pulled back, but he pulled me against him and held my face in his hand.\n\n\"Det, don't you see how much...\"\n\n\"The girl said let her go,\" A deep voice rumbled.\n\nI cried out in fear as Ollie stood up, still holding me against him. I couldn't turn and see where the voice was coming from, he was holding me tight against his legs.\n\n\"Let her go,\" the voice repeated.\n\n\"It's a misunderstanding, a lovers spat, that's all. She is about to become my wife!\" Ollie said desperately, moving and shoving me behind him. \"Get in the truck!\" he hissed to me.\n\n\"I heard her say no. Let her go,\" the man repeated. The man... was monstrously huge. Taller even than Ollie, at least by a few inches, but he was wide and solid and huge where Ollie was skinny. He wore buckskin pants, a vest made of a darker leather and a fur cape. His hair was long, down to his backside and he had it pulled back with braids on the sides. There were feathers and beads and cloth braided into the braids on both sides. He was young, mid twenties, but had a beard long enough to cover his neck. There were bone necklaces circling his neck and down his exposed chest. He wore no shoes.\n\nHe was terrifying. \n\nOllie nudged me towards the truck, but I was frozen in place, staring in terror at the mountain man. \"The truck,\" Ollie hissed.\n\n\"Step off the girl,\" the man demanded, moving in closer.\n\n\"We don't want any trouble! We were just leaving. We aren't on your mountain, not here. I come here all the time!\"\n\n\"Always with a different girl. This one said no. Step away from her,\" he said dangerously, moving closer. \"Girl, come over here. I won't let the boy hurt you.\"\n\nI stepped away from both of them, the three of us forming a triangle. \n\n\"You can't take her man,\" Ollie said desperately. \"I love her! I want to marry her.\"\n\nThe mountain man looked back at me, reconsidering me as he looked me over. \"What age do I put to you?\" he asked.\n\nI blinked. What? \"I'm eighteen?\" I answered, thinking that was what he was asking.\n\n\"So you are,\" he said, turning back to Ollie. \"Lady said no. Go back down to your rolling house. Go alone.\"\n\n\"Let me take her with me,\" Ollie said, edging closer to me.\n\n\"Your hand touches the lady, your hand stays on the mountain,\" the mountain man said darkly, moving closer to me as well. I saw the long knife hanging in a leather sheath on his belt. It was huge.\n\nI backed up, but a single stride from the mountain man closed the distance and he picked me up, his forearm under my bottom like a toddler. He backed away from Ollie as I tried to push off of him. He ignored my efforts. \n\n\"She is under my protection,\" he said loudly, making me jump and go still. \"Leave my mountain. Or stay and let the mountain take you,\" he said, then turned and walked away, still carrying me. \n\n\"Please! I love her! Det! Tell him!\"\n\nI stared at the man carrying me, my eyes wide and my heart hammering. \"Are... are you going to let me go? Go home? You saved me from him so I could go home, right?\" I asked, panicking as we went deeper into the woods and up the mountain.\n\nHe didn't answer, he just kept walking. \n\n\"Are you going to kill me?\" I asked fearfully.\n\n\"No,\" he answered, ducking under a branch.\n\n\"Are... are you going to rape me?\"\n\nHe looked at me then as if I had accused him of something foul and he resented it. \"No,\" he said angrily. \n\n\"What then? You saved me, I mean sort of. You thought you were. He wouldn't have hurt me.\"\n\n\"He would have.\"\n\n\"He is harmless!\"\n\n\"He isn't.\"\n\n\"He isn't?\" I asked, my gut twisting. \"How do you know?\"\n\n\"Seen'm. He has anger. You say no once too often, he'd've gotten rough. He wouldn't'a let you leave.\"\n\n\"Are you? Going to let me leave?\"\n\n\"Aint nothin' for ya down there.\"\n\n\"Please, I...\"\n\n\"Quiet now, girl,\" he rumbled.\n\nThe walk went that way for hours. Every time I tried to speak, he would ignore me or tell me to be quiet. I asked to walk, or squirmed and he tightened his grip until I stopped. It was pitch black and I could see nothing, but he kept walking, and ducking and moving as if he could see perfectly. It was surreal. I eventually got tired enough I began nodding off. Twice I caught myself with my head on his shoulder, dozing. I woke up with my face buried in his neck when he finally stopped. I lifted my head and looked around sleepily, surprised to find myself in what looked like a small log cabin. \n\nHe finally set me down on the bed, pulled my shoes off and pulled a crocheted blanket over me. I watched him wide eyed as he moved a chair in front of the only door and sat in it, then hunkered down with his arms crossed and closed his eyes like he was going to sleep.\n\nI looked around at the cluttered little cabin and realized dim light was coming in the small window. It was morning!?! I turned to my side to keep an eye on the giant guarding the door and wondered if I could make it to his knife before he woke up.\n\nI fell asleep weighing my chances.\n\nA knock on the door woke us both up. He stood and moved his chair, then opened the door. \"Mill said he saw you come in last night? Had something you brought in? Cailleach Willa sent for ya,\" a woman's voice said, and I could see her trying to peek in.\n\n\"I'll be along. Brought up a lady. Tell Cailleach Willa to arrange a bond.\"\n\n\"For true, Feen?\"\n\n\"Go on then,\" he said, shutting the door. \n\nI sat up when he turned to me, looking me over again. He went over to a pile of clothes and rummaged around, then tossed a white shirt at me. \n\n\"Cain't go in front of the Cailleach in pants,\" he said, then turned his back like he expected me to change into the giant shirt.\n\n\"Who is Cailleach?\" I asked instead, pulling the blankets in tighter.\n\n\"You get it on or I will.\"\n\n\"It won't fit! It's huge! The neck opening would fall right off my shoulders! And the sleeves would touch the ground! I can't wear that!\"\n\nHe turned and looked at me, his nostrils flaring and a panic coursed through me. I jumped up and snatched up the shirt, pulling it on over my clothes. I hoped hiding my yoga pants would work! The hem pooled on the ground and the sleeves did as well, but I held the collar closed around my neck, pulling the hood of my hoodie out to help hold it in place. He stepped closer and scooped me up like he had the day before, then carried me outside.\n\nI wanted to tell him I could walk, but I was too afraid. \n\nWhen he ducked under the doorframe, I looked around, a little in shock. There were cabins and houses, buildings with things inside that made me blink. An old fashioned blacksmith with a man hammering away. And the people. All the men were in layers of odd clothes, leather and cotton alike. The women all had on long dresses. Not old fashioned, more bohemian hippie style with all kinds of beads around their necks, all colors. Many of them had dreads with cloth woven in and larger beads as well. All of them looked at me curiously as they walked around the little... village? Town? What was it exactly?\n\nHe took me to a large, open shelter with rows of tables and a kitchen along the only wall. There were four women cooking. Four men were standing next to a tall chair and in the chair was an ancient woman with a long oak staff in her hand.\n\n\"Cailleach,\" the giant said, taking a knee and nodding in greeting. He set me on his knee.\n\n\"Feen,\" she nodded back, her voice old and raspy. \"Bonn' a chil'e?\"\n\n\"A woman,\" he answered, then to my horror, cupped my breast in his hand as if to show her. I hunched away and pushed his hand away, but he was moving it already. It hadn't been sexual, just... proof?\n\nThe old woman nodded, then lifted the staff and pounded it on the ground. \"Ain' one'a us Feen.\"\n\n\"No'm. Mine to teach, Cailleach.\"\n\n\"O'm,\" she nodded, then pounded her staff again.\n\n\"Name, chil'e?\"\n\n\"Name,\" he demanded, jostling me.\n\n\"Odette?\"\n\n\"Allit,\" the old woman spat.\n\n\"Odette Springmeyer? Odette May Springmeyer?\"\n\nThe woman nodded, then rapped her staff again. The giant stood and turned away, carrying me back to his little cabin.\n\n\"What was that?\" I asked. \"Is that your name? Finn?\"\n\n\"Feen,\" he corrected. \n\n\"Feen,\" I repeated. \"What just happened out there? Who was that woman? Were those men her bodyguards?\"\n\n\"Cailleach Willa. Her husbands.\"\n\n\"Husbands?\" I asked faintly. \"They were all so young!\"\n\nHe shrugged and set me on the bed, then pulled his shirt off of me, tossing it back to the pile. \"Choice was theirs. Nore and Bliss will come to dress you. You willin?\"\n\n\"You mean will I make a fuss? Can't you please tell me what is happening? Can I please go home now?\"\n\n\"Willin?\" he asked again, more forcefully this time.\n\n\"Yes! Yes. I won't fight or make trouble for them, I promise.\"\n\nHe frowned at me like he was trying to figure out what I said. There was a knock at the door and he opened it. A tall woman stepped in, willowy and graceful with her long white blonde hair. She said nothing as she moved close and looked me over, then shook her head. \"Nothin',\" she shrugged. \"I'll hafta go to Rossa.\"\n\nHe scowled, but nodded.\n\nThe woman came closer and started to pull my hoodie off. \n\n\"What are you doing?\" I demanded, dancing away.\n\nFeen stepped closer, his hands going to fists. Right. I'd said I wouldn't fight. \n\n\"You have to turn around!\" I said to him, making myself be still.\n\nHe turned.\n\nI let the woman pull my hoodie off, then my pants. She left my underthings alone as she turned me and poked and prodded. \"What are you doing?\" I whispered, wiping tears out of my eyes.\n\n\"Takin' stock,\" she answered, turning me again. She took my bra off, then took my breasts in her hands. She moved to my hair, pulling on my curls, then pushed my lips back to look at my teeth. She picked up my clothes, then turned to Feen and moved so he could see her. \"Good hips for birthin', she's got her full growth though. Won't get no bigger.\" With that, she turned and left. \n\nWith my clothes.\n\n\"Hey!\" I yelled, starting after her, but then spun and dove under the blankets when he turned around. He looked down at me, hands on his hips. \"You stay back!\" I yelled, terrified.\n\nHe cocked his head slightly. \"S'my place, girl.\"\n\n\"Odette. My name is Odette.\"\n\nHe nodded. \"Still my place. Odette.\"\n\n\"Be that as it may, you still stay over there till she brings my clothes back!\"\n\n\"She aint,\" he said, moving to sit down. He watched me as I looked around for a weapon, something to use to keep him away.\n\nHe pulled his knife out and I tensed, then squealed as he drew back and threw it. It landed with a 'k-thunk', sticking into the wall next to my head.\n\n\"You could have killed me!\" I screeched.\n\nHe shrugged, then nodded. \"If I'd wanted to. Tha's what you wanted, isn't it?\" he asked, gesturing to the knife. \n\nI scowled and worked the long knife out of the wall with a great effort. He was grinning when I turned back around, holding the knife in both hands, pointed at him. I sat glowering until there was another knock at the door. \n\nThis time she didn't wait, the woman came in with a younger girl, holding a white gown that looked small enough for me. She stopped when she saw me holding the knife. She looked at Feen, confused. He shrugged, grinning. He motioned me to get up as he stood and turned away.\n\nThe woman brought the gown to me as I stood and she slipped it over my head, then held my arm up and poked under my arm curiously. \"Sh'aint got all'r hair on'r,\" she told Feen. \n\nFeen looked over his shoulder as she held my arm up, then frowned as he turned and moved closer. \"Eighteen?\" he asked me, concerned.\n\n\"Yes,\" I hissed, yanking my arm down. \"I shave there.\"\n\n\"Why?\" the woman asked, confused. She bent to lift the hem as if she intended to look other places, but I held the gown down and stepped back.\n\n\"Because it's how we do things in the real world,\" I said, jerking the hem from her hands. \"Do you have something with sleeves? I'm freezing!\"\n\nThe woman laughed and turned to Feen. \"Tiny fires burn hottest, Col?\" She was still laughing as she left and Feen was smiling. \n\nHe looked me over, his head cocked, then nodded. He started pulling his clothes off and I backed up, pulling the knife up in front of me again. He glanced at me, but ignored me as he pulled on the white shirt and a pair of white cotton pants that looked like sleep pants. \n\nHe moved to me, then picked me up, ignoring the knife like I wasn't pointing it at him. I was beginning to feel a little ridiculous. \n\n\"I can walk!\" I said as he ducked out of the cabin again. I flinched down when there was yelling and cheering, then peeked around at the gathered people. They were all yelling, hands raised, some of them shaking cans with rocks or beans or something in them, some banging sticks together, some banging pots. I put my hands over my ears, holding the knife in one hand, then tried to lock my arms around my head as panic welled up all over again.\n\nThey were about to eat me, I just knew it. They were going to roast me over a fire, or sacrifice me to the mountain, something. When he sat me down and tried to pry my arms down, I shook my head and burrowed against his legs. The cacophony was overwhelming and I screamed at them wordlessly, wanting them to stop. \n\nTo my shock and relief, they did. I lifted my head slowly, panting. Feen took a knee and squatted low, lifting my face to his with a single finger. He studied my face, then thumbed my tears away before standing. He turned and I noticed Cailleach Willa then, watching me with her head cocked like I was crazy. They were all looking at me like I was crazy. \n\n\"Feen?\" the old woman asked.\n\n\"Yes,\" he answered. Not a question, an answer to a question I must not have heard.\n\nThe old woman nodded, then stood with the help of the staff. She stood stooped and was barely taller than I was. She looked at the knife in my hand. \"She fi'n ta gut ya?\"\n\nHe shrugged. \"Makes her happy. Makes her quiet.\"\n\nThe old woman nodded, then looked down at me. \"Odette May and Feengun Marius. Hands.\"\n\nFeen held out his left hand, palm down, then looked down at me. \"Hand, girl.\"\n\n\"Odette,\" I insisted.\n\nThere were chuckles and he smirked. He bent down and took my left hand, turning it palm up and holding out towards Cailleach Willa as he held his left hand out again.\n\nThe old woman spoke in a language I did not know, but it sounded familiar, like I should know it. Gaelic with latin roots. Something about binding and bright days and snakes? It seemed to be trying to make itself make sense in my head.\n\nShe rapped her staff and Feen turned to face me, making me face him. He put his left hand on my left wrist and clasped it, using his right hand to make me clasp his wrist. At least, put my fingers on his wrists. There was no clasping for me. \n\nCailleach Willa chanted as she laid a white rope over our wrists, where each of our hands ended. Goddess and west and something about the sky?\n\nShe rapped her staff and Feen stepped to the side, using his grip on me to make me step the opposite way. He had his back to her now and I was facing her, though I couldn't see her through him. A woman in white with red beads stepped up and wound the rope around our wrists twice, then layed it over our forearms as Cailleach Willa chanted about a goddess again, then fertility.\n\nThey were going to sacrifice me as a virgin. \n\nAnother rap and he turned me again. We were now the opposite of where we had started. I was in his spot and he was in mine. Cailleach Willa wove the rope up our forearms, making a design with the knots as she chanted about a goddess and the mountain? And I think it was longevity? There was more but I could not decipher it.\n\nAnother rap and we spun again. Now Cailleach Willa was behind me. The woman with the red beads wove the rope back down to our wrists as Cailleach Willa went on with her chants. Still with the goddess, and more with the mountain, and bonded in death? Something close to that.\n\nAnother rap and we spun, going back to where we began. Cailleach Willa shouted the last of the chanting and everyone repeated it. From what I gathered, it was the name of the goddess, Bheinn. She tied the rope over the top of the first knot, then there was cheering again as she raised her hand up. \"Feengun! Odette! Mor!!\"",
        "Feen bent and lifted me up, higher than he had before as everyone cheered. I was still clutching the knife in my right hand and trembling now. This was the part where they sacrificed me to this Bheinn. \n\nHands touched me and I flinched. So many hands! Cheering, yelling, touching. No one hurt me, or groped, just light, petting touches as Feen carried me to the large table in the hall, the one facing the rest and turned north and south and not east and west like the rest. There were chairs and stools, but he took me to a short bench in the middle of the table and set me facing him. He sat facing me, straddling the bench. It was awkward, sitting with one hand bound to his.\n\nI held the knife up. \"Are you going to kill me now?\" I asked quietly, as the others cheered and found seats.\n\nHe raised his eyebrows and looked down at me uncertainly. \"No.\"\n\n\"Are they? Are you going to roast me and eat me?\"\n\nHe looked shocked, then laughed. \"A joke?\"\n\nI shook my head. \"Sacrifice me to Bheinn?\"\n\nHe laughed again. \"Bheinn blesses women. You will not be harmed, Miontine.\"\n\n\"Then what is this? And what did you call me? Little fire?\"\n\n\"Tiny. Tiny fire.\"\n\n\"Oh. So what is happening? Can you take this off now?\" I asked, poking the knife at the rope.\n\nHe gently took the knife from me, shaking his head. \"That would be bad draiocht.\"\n\n\"Draiocht? Magic? Bad magic?\"\n\nHe rolled his shoulders uncomfortably. \"It is not for me,\" he said, dismissing my concern. \"You speak the old tongue?\"\n\n\"Not really, is it gaelic? It sounds gaelic with some latin thrown in. Is it latin?\"\n\nHe looked down at me as if I were speaking gibberish. \"It is the old tongue,\" he shrugged, looking around. \n\nMoments later, a huge man came striding in like a force. He was easily as large as Feen but much older with his long white hair. When he smiled at Feen, I knew it was his father, they had a sameness.\n\nHe grabbed up a glass jug from a table and lifted it high. The water in it sloshed around and the room went quiet. \"To my boy! My youngest! Finally a married man!\" He tilted back the jug as everyone cheered and lifted glasses of water to drink. Feen cheered as well and lifted his own glass.\n\nI stared at him, gobsmacked. \n\nThis asshole had just married me. \n\nInfuriated, I snatched at the knife and started sawing at the rope. He spilled the water in his haste to stop me, pulling the knife away and frowning down at me in surprise. \"Miontine?\"\n\n\"You MARRIED me?\" I hissed. \"You made me marry YOU?\"\n\n\"I asked,\" he said, drawing up, his nostrils flaring.\n\n\"You didn't! And if you did, I didn't understand what you were asking! I thought you were about to sacrifice me to the mountain, not MARRY me!\"\n\nHe laughed then, throwing his head back and letting out a loud booming laugh. I growled and kicked at him, tugging on my hands, trying to break free of the knots. \n\nHe caught my wrist gently and shook his head. \"You were calm with thinking death, but angry to be a wife?\" he asked, grinning.\n\n\"I was scared before. Now I'm just pissed! This isn't real you know! No legal paperwork, no documents or anything! This isn't real!\"\n\nHe just grinned down at me.\n\nHis father sat down across from us and Feen finally looked away. \"Feen, my boy! She is a little thing! So little! And you so big. You sure you should not have asked after Wiss?\"\n\n\"Wisteria is spoken for and I had no interest. I like this one. She is...\" he trailed off, looking down at me like he was searching for the right word.\n\n\"New and different? She will not accept our ways, but if you are happy. Keep her in line. She shouldn't be much trouble.\"\n\nFeen laughed then, knowing that his father was wrong I was sure.\n\n\"What is her name?\"\n\n\"Odette,\" I answered.\n\n\"Miontine,\" Feen answered.\n\nThe older man chuckled, looking me over. \"I see it! Yes, she is so. Your mathair would have been proud.\"\n\n\"Athair,\" he nodded, accepting the praise. \n\n\"Is that your name?\" I asked. \"Athair?\"\n\nHe grinned, and looking at him I knew what Feen would look like in thirty years. \"You are my daughter now, you can call me athair. My name is Feengun, same as my athair. I am called Gun. Feengun here is Feen.\"\n\n\"Athair is father? And mathair is mother?\"\n\n\"Yes, girl.\"\n\n\"Odette,\" I corrected, glaring.\n\n\"Hah!\" he laughed, then slammed a mug down in front of me and poured it full of water. \"Drink!\" he yelled to everyone. \"Oll!\"\n\n\"Oll!\" everyone yelled and drank from their mugs. \n\nI pulled the mug close to take a drink, then spit it out, coughing. It was not water! It was something horrible! Jet fuel and arsenic and skunk spray all combined. Feen patted my back and laughed as I coughed. \n\n\"That is awful! What is that?\"\n\n\"Drucht. Shine. Pure as you can find anywhere, won't ever find better! Drink up girl, it is bad draiocht to refuse a toast on your Binding day!\"\n\nBinding. Had Feen said something about binding? And asking if I agreed? I couldn't remember. \n\n\"I didn't agree to this!\" I said, as much to myself as them. \"And I am not drinking that poison! I want to go home!\"\n\nGun looked at Feen, his eyebrows high. \"First fight boy?\" he teased, standing. He turned to the crowd. \"OLL!\" he roared.\n\n\"Oll!\" they yelled in return and threw back more drinks. \n\nI looked up at Feen who was setting his cup down. He wiped his beard and leaned on the table, closer to me. \"Bind is good and done. Bheinn blessed us. Wife.\"\n\n\"No.\"\n\n\"Word don't make it so,\" he shrugged. \"Wife.\"\n\n\"NO!\"\n\nHe smirked. \n\n\"Why did you do this, after saving me from Ollie?\"\n\nHe shrugged. \"I wanted you for myself. The boy woulda hurt you. I aint.\"\n\n\"You have! You are! I want to go back to Atlanta!\"\n\n\"There is no Atlanta anymore,\" he said, shaking his head. \"There is only the mountain now. Once she lets you in, there is no going back. She keeps you forever.\"\n\nI froze, staring up at him. Did he mean if I tried to leave he would kill me and my body would be here forever? Or that I would end up dying if I tried to leave?\n\n\"Sip,\" he said, lifting the mug to my lips. \"No bad draiocht tonight, Miontine.\"\n\nI sipped, then coughed again and he patted my back. It burned! My belly was on fire!\n\nPlatters full of food were set in front of us and when I saw it, I realized I had not eaten since yesterday. I was starved! \n\nCailleach Willa stood and waved her hand for silence. She gestured at Feen and I and he stood, pulling me up to stand on the bench next to him. \n\n\"Feen Mor. Odette Mor. A night as this, I offer a beannacht! Torthulacht and go leor clann to you!\"\n\nFertility and many kids. Ugh.\n\nEveryone was cheering again, and stomping now as they threw back more drinks. Someone pulled out a fiddle, then a banjo and then there was singing and music as Feen pulled me to sit down again.\n\nI noticed he was significantly closer, his legs on either side of me, our bound hands pressed between us.\n\n\"Am I supposed to eat like this?\" I asked angrily, trying to turn to reach the food. \n\n\"No, Miontine, I feed you,\" he said pulling a strip of meat off a whole chicken and holding it close to my mouth. \n\n\"Seriously?\" I asked, horrified.\n\n\"And you feed me. We work for each other this night, to show our willingness to serve each other.\"\n\n\"You will starve,\" I snorted. \n\nHe smirked, then pressed the meat to my lips. I ate the bite, then grudgingly and awkwardly did the same for him. \n\nEating was slow and tedious work, but he seemed to enjoy it. There were so many toasts and he insisted I sip for each one. He threw back his cup, refilling it again and again. How could anyone drink that? And how was he still standing?!? \n\nSeveral hours into the feast and the dancing, people were passing out, or wandering out to the darkness. Some didn't bother. More than one couple was unabashedly making out, biting on each other, groping each other and... more... right out in the open like it didn't matter. One woman was bent over a table, moaning loudly as a man went at her from behind and a few people at the table cheered them on. \n\nWas this real?\n\nMy head was swimming and I was starting to feel tired and lightheaded as I looked around at the chaos. \n\nWhen Cailleach Willa suddenly appeared behind us, I gasped and Feen had to catch me to keep me from sliding off the stool. He stood, taking me with him, holding me like a child on his arm.\n\nThere were cheers, but they were drunken and fewer now that the night and moonshine had taken the revelers to their beds. I had a moment of clearheadedness, knowing what was about to happen. I threw myself down as hard as I could and snatched up the knife before he could pull me back up. I held it in my free hand, pointing it up at him and he laughed again. \n\nHe let me keep it as he slowly followed Cailleach Willa to a small hut. Inside was nothing but a huge bed. I shook my head and squirmed, brandishing the knife as I tried to get down. He let me down, smirking at the knife. I held it, trying to make it stop wavering so much as Cailleach Willa whispered as she untied the binding. \n\nOnce it was loose enough, I backed away and started trying to get feeling back in my hand.\n\nCailleach Willa pursed her lips as she left, but Feen was still grinning. I raised the knife in both hands and slid down the wall I was leaning on, trying to make the room stop wobbling. He pulled off his shirt and tossed it down, then shucked his pants and stood in front of me like he was posing.\n\nHe was posing. \n\nHe should be posing. \n\nHe was... pretty spectacular. His huge, hard body was something off of a woman's porn cover. If men on those covers wore no underclothes and weren't circumcised. I guess that wouldn't be a thing up here. I was staring, I realized, but I decided I didn't care about looking away. It was... something to see. I swallowed hard and looked up at him. He was watching me curiously, waiting.\n\nNope. Not happening.\n\nI looked down and found the knife on the floor and picked it back up, fumbling.\n\nHe was there suddenly, taking it from me. \"You'll cut yourself Miontine, it's sharp. You can have it back tomorrow.\"\n\nHe put it with his things and I watched him move, unashamed of his nakedness. He had the confidence of ten men. My eyes went to his face as he sat on the end of the bed. His brown eyes with his wild dark blonde hair didn't seem to mesh. His eyes were sweet and soulful, his hair completely wild. They were at odds with each other. His lips should have been lost in this beard and moustache, but they were just full enough to peek through.\n\n\"Just gonna look or you gonna join me?\"\n\n\"What is this place?\" I asked, avoiding his question. I didn't have a knife anymore, I needed a diversion tactic instead. \n\n\"A binding house. The clan stays here when they bind. Marry.\"\n\n\"I... I know what you think is about to happen but it's not. I won't. Just... stay away.\"\n\n\"Wife,\" he chided, moving to the closer end of the bed. \n\n\"No! I'm not, I'm not! I won't! You can't! It's... it would be rape. I won't do it!\"\n\nHe chuckled. \"No, wife. That cannot be so between a man and wife.\"\n\n\"It is! No is no! No! I won't!\" I said, shaking my head and huddling in on myself.\n\nI squealed when I felt his hands on me, picking me up. He set me on the bed and sat next to me. \"Easy, Miontine,\" he whispered, trying to calm me. \"I will be gentle.\"\n\n\"I said no!\"\n\nHe hugged me against him, rubbing my shoulder. Why was my head still spinning so much? I closed my eyes and sighed. He was so warm and I was so cold!\n\nI opened my eyes, then winced, closing them. My head! \"Nnnnnn,\" I groaned, trying to roll.\n\nWhere was I? There was a wall beside me, so I had to try the other way. The wall moved and a hand caught my hip. \"Don't fall off,\" it rumbled.\n\nFeen. \n\nI groaned again, then went still. What had happened? I shifted, trying to feel out my body. It was only my head that hurt and my stomach was feeling nauseous, but nothing else? I shifted again and moved my hand up to my shoulder. I still had my gown on too.\n\nHe hadn't touched me.\n\nI felt relief, but also fear. I had to find a way to get away today, before tonight. \n\n\"What's worse?\" he asked.\n\n\"Mmm?\" I asked, trying not to make too much noise. My head was throbbing so hard I couldn't open my eyes.\n\n\"Head or stomach?\"\n\n\"Head,\" I whispered.\n\n\"Mph. Stay here.\" He got up and I peeked despite myself. He pulled his pants on and stepped out, then yelled loudly. I didn't understand what he said but he ducked back in and pulled his shirt on. He looked grumpy. \n\nThe girl who had called him 'Col' came in with two cups. She glanced at me and her lips parted as her eyes darted to him. He glared as if daring her to say something. She handed him both cups and dropped her eyes, then started to go. She paused at the door. \n\n\"I won't talk,\" she said softly.\n\n\"If I cared I wouldn't have had you come,\" he snapped.\n\nShe looked over her shoulder at him, then back at me. She looked concerned. \"Cousin? May I speak to your wife?\"\n\n\"On?\"\n\n\"Girl to girl,\" she answered, standing tall.\n\nFeen looked at me, then scowled and rolled his shoulders. He handed her one cup, drank the other, then pushed past her, ducking out. \n\nShe came in and sat next to me as she handed me the cup. I sat up and took it, sipping it. It was bitter and I grimaced. \n\n\"Drink it all at once, quick.\" she said, tilting it back to my lips with her finger. I swallowed it, shuddering. I handed it back and hid my eyes in my hands.\n\n\"What's your name?\" I whispered.\n\n\"Loenore. I am called Nore. Odette is it?\"\n\n\"Yes,\" I answered, laying back on my side and pulling the blankets up. \"Will you help me escape here?\" I asked numbly. \"Get home?\"\n\n\"The mountain is home now. Odette, you must listen. Feen has come home, back to us. If... if you make it so he leaves again, no one will be happy. He has been gone too long, not taking his mantle. He must stay. If... if it seems you are not all he hoped for, Cailleach Willa may not be very happy. You have to be here one way or another, but... if you keep him happy, keep him here, it will be better for you. He has been long in looking for someone. The right someone. He saw it in you. Do not...\"\n\n\"He kidnapped me,\" I grumbled irritably. \"He stole me and brought me here and tricked me into the union by not telling me what was going on. I don't owe him anything, or any of you! I don't want to be here and my fucking head hurts!\"\n\n\"The herbs will help given time.\"\n\n\"Time will help, given time,\" I said, rolling my eyes with my eyes shut. \n\n\"You are disagreeable, aren't you? Like so many from below. I do not see what he sees in you, but you could at least try. Give him a chance. He has never liked a girl so well as to wish a bind. I think if you...\"\n\n\"Look, Nore, I know you want to have a heart to heart right now, but my head hurts, I have to pee so bad I am afraid to move and I am in a god damn scene right out of Deliverance. Please. For the love of god just leave me alone.\"\n\nShe huffed and stood up, moving the bed harder than she needed to. I sighed and got up as well. My bladder was about to explode. \n\n\"Where's the girls room?\" I asked, clutching my stomach as it heaved.\n\n\"What?\" she asked, pausing at the door.\n\n\"Bathroom? Where do you go pee? You have a place, right?\"\n\n\"Outhouse is this way, I will show you.\"\n\nI groaned. \n\nFeen was sitting in his huge chair when Nore led me back to his cabin. He was looking sulky and grumpy. \"Can I have my clothes back?\" I asked before she left. \"At least my sweater?\"\n\nShe kept walking, ignoring me. I turned to Feen and he glowered at me. I realized than that my headache was better. \"Can I get my clothes back?\" I asked him.\n\n\"Nore'll bring you clothes.\"\n\n\"Dresses like they wear?\"\n\n\"Yes.\"\n\n\"I don't like dresses.\"\n\n\"Dresses or nothing,\" he said shrugging. He lifted his chin at me, looking at my gown. \"Why don't you take that off?\"\n\nI hugged myself and backed away from him, then took up the knife he had tossed on the bed with his white clothes. His glower turned to a scowl. \"I told you, it's not happening.\"\n\n\"It will,\" he said standing.\n\nI backed up to the far wall and held my hands straight out, pointing the blade at him. He moved closer, until his belly touched the tip of the knife. \"Stop!\" I said fearfully, pulling it back slightly when blood welled up. He put his hand on the flat of the blade slowly and moved it out of his way, then moved closer. He lifted my hand with the knife and then slid his hand up the edge. I cried out and dropped the knife when I saw blood on his hand. \"Why did you do that?\" I asked, horrified. He closed his fist in front of my face, squeezing and working his fingers until his hand was covered in blood, then he opened his hand to show me. I shook my head, not understanding why he had cut himself. He reached out suddenly and put his bloody hand on my face, shoving me against the wall as he held me still with his other hand. He had his bloody palm over my mouth and his fingers splayed over one cheek with his thumb on the other. His hand was so big his fingers were on both of my ears and I screamed into his hand. He held me there a long moment, then lifted his fingers slowly and pulled his hand back, looking down at the bloody handprint on my face. \n\n\"Mine,\" he whispered to me, then grabbed my hand when I went to try and wipe my face. \"No. It stays. It stays until I bed you.\"\n\n\"Please! This is gross! Please take it off! What if I catch something?!? Please!\" I wailed, trying to find a way to wipe my face. \n\nHe pulled me down to the floor and held me there, pinning me and watching me struggle. He carefully wiped my tears, making sure they didn't make tracks through the blood and that seemed to make it worse. He held me there until it was dry, then he stood up and pulled me up, still holding my wrists. \n\n\"You try to take it off, I will punish you and do it again,\" he said coldly. He let me go and I stood with my fists clenched at my sides.\n\n\"You are a psychopath!\" I hissed, unable to stop more tears. \n\nHe just watched me passively, then suddenly spoke. \"We are going to eat.\"\n\nHe took my arm and pulled me out the door, then led me to the large pavilion. People went quiet as they stared at us. He stopped in front of Cailleach Willa in her chair. She gave him a nod, but never looked at me. Almost like I wasn't even there. When he sat down, someone sat a plate in front of him, but not me. He handed me a biscuit, but otherwise ignored me. Everyone did. I realized the handprint meant something to all of them. Like I was a ghost until it was gone. \n\n\"You think this is going to sway me?\" I asked angrily. \"Being ignored by these... inbred imbeciles? I don't care. In fact, this works for me. Keep ignoring me as I walk out of this place!\" \n\nI stood up, but he caught my arm and yanked me back down to sit hard on my bottom. Hard enough to make my teeth hurt. \n\nHe kept eating like he hadn't been interrupted. \n\nAsshole. \n\nI hefted the hard, heavy biscuit, then threw it with all my might at Feens father two tables over. I missed but he turned and Feen looked at me like I had lost my mind. \n\n\"Boy,\" Gun warned, standing. \n\n\"Yeah,\" Feen said, sounding resigned. He stood and pulled me up, then tossed me up over his shoulder. I pounded on his back and kicked, but he ignored me as he took me back to the cabin. He threw me on the bed so hard I bit my tongue and cried out as I tasted blood.\n\n\"You bawstwad!\" I yelled, sounding like an idiot. I sat up and blood dripped out of my mouth onto my white gown. \n\nHe stood with his hands on his hips, watching me with a confused frown. I rolled off the bed and poured myself some water from a pitcher by his sink, then rinsed my mouth. \n\nWhen I turned, he was right behind me and he caught my arms before I could move back. He started to pull the gown off, then ripped it when I tried to hold it in place. He threw it to the floor, then held me out at arms length to look at me. I tried to hunch down, to hide, but he was holding me up, my arms out wide. ",
        "He walked to the bed, forcing me to stumble back as he went. When my legs hit the bed, he pushed me onto it, sliding me higher. Looking down at me, his eyes holding mine, he slid his hands up to my wrists, then moved them so he could hold them both in one hand. He slid his other hand down, his touch light as he dragged his fingertips over my bare breast. He slid down my waist, then into the edge of my cotton panties.\n\n\"Don't,\" I begged, tears coming again.\n\nIf he heard, he gave no sign. He ripped them down the side and shoved them over, exposing half of my sex. \n\n\"If you do this, it's rape! You are no better than what you said about Ollie!\"\n\nHe took hold of the other side and ripped them, then pulled them away completely as he looked down at me. He ran his fingertips through the small patch of hair between my legs as I started trembling.\n\n\"Please?\" I whispered. \"Please??? Don't do this?\"\n\nHe looked back to my face, to my eyes, then his eyes dropped to my lips. He leaned in as if to kiss me, then hesitated, his mouth so close to mine I could feel the tickling hairs from his moustache and beard.\n\nHe whispered, \"It's gonna hurt some. Not bad. I'm a bit bigger than the boy, probably your other boys too, but it won't be bad.\"\n\nI broke down sobbing hysterically. \"Don't! Please don't! I was never with Ollie! He kissed me, that's all! That's all! I've never... I've never done anything! With anyone! Please don't do this!\"\n\nHe paused and pulled back, looking down at me. He seemed confused. \"Why haven't you?\" he demanded.\n\n\"Because I didn't want to? I never met the right guy? Please let me go?\"\n\nHis face went back to determined as he leaned back in. He was rough when he forced my legs apart with his knee and I squealed as I sobbed. He bent his leg, forcing my legs further apart as he pressed his lips to the bend in my neck, then bit lightly. His fingers sliding down between my legs made me scream again and struggle. \n\n\"You can't DO this!\" I wailed miserably. \" I want to go HOME!\"\n\nHe ignored my cries as his fingers explored gently. He ran his fingertips through my slit and up, rolling them over my clit, making me hesitate a moment and suck in my breath. He repeated his movement, raising up to look down at my face curiously. \"You like that?\" he rumbled, rolling his fingers over my clit again, sending pleasure spiking through my body and making me twitch involuntarily.\n\n\"No!\" I lied quickly before gasping and holding my breath again. \"Stop!\"\n\nHe didn't stop, watching me as he made me writhe and whimper under his touch. He kept exploring with his fingers as he toyed with me and he smirked as he brought his fingers up in front of my face to show me how wet they were. How wet I was. He rolled a finger over his lower lip, getting the slick wetness on it as he smiled, then went back to toying with me. He licked his lower lip as I watched and I felt my excitement rising. \n\n\"Please?\" I pleaded a final time.\n\n\"Shhh,\" he whispered, then slid a large finger into me. I gasped, my eyes going wide as he pushed in. It didn't hurt, not really. I'd used toys before, mostly it felt intrusive and... warm. Full. Nice... \n\nI closed my eyes, giving up the struggling. It felt good, what he was doing. Sliding his finger in and out gently, his thumb rolling over my clit. The feeling climbed inside of me, making my body tense up in anticipation. The closer I got, the more tense my body got, the more rigid I became. I moaned into his chest as I got close and I half realized he had released my hands and I was holding on to him. His massive arms, his face with his lips on my jaw as he watched me. It was a distant thought as my head swam with need. The feeling started to crest and I held my breath, biting my lip in anticipation.\n\nFeen stopped suddenly and I let out a cry of shock as my entire body deflated. He stood up and pulled off his clothes and I watched him, panting, delirious with need. He pushed me higher in bed, then knelt between my legs, looking me over from close up as he touched me. \n\nI squirmed and rolled my hips, needing him to go back to what he was doing, to finish me! \n\nHe slid a finger into me again and I moaned, dropping my head back. When he slid a second finger in, I tensed up but only for a moment. It wasn't too much, it was just this side of pain and I was getting close again as his thumb slowly rolled over my clit.\n\n\"Faster!\" I pleaded, pushing my hips up to his thumb, needed more. \n\nWhen he worked a third finger in, I whimpered and tensed up, then squirmed back, trying to escape the invasion. He rolled his thumb faster over my clit and the pain faded. It hurt, but not bad and the pain was good. I felt so full! \n\nMy body started going rigid with need again as he brought me closer. His thumb slowed and I let out a breath, \"No! Don't stop!\" I begged. \n\nHe slid his fingers out and the emptiness was like an ache. When he moved, I knew what he was doing. Fear pulsed in me, but the need was more. I waited for him, accepting, open. I second guessed my needs when I felt him press the head of his cock to my slit and push in. He was larger than his fingers had been and I whimpered fearfully as he tried to ease into me. He grabbed my hand and pushed it down so I could work my clit as he held my hips so he could push into me. \n\nThe pleasure could not hold back the pain and I screamed when he spread me open with his cock. \n\n\"Shhh shhh shhh,\" he whispered, moving up over me. He eased his hips in, pushing and I screamed louder and his giant cock invaded me. I had stopped trying to do anything but escape. \"Don't stop,\" he demanded, pushing my hand down between my legs.\n\n\"I can't I can't I can't! Pleeeeeease!\"\n\n\"Shhhh,\" he whispered again, easing back but not pulling out. He leaned back enough to start working my clit again and moved his hips very slightly as he worked me. The pain was still too much. I cried, but didn't fight and I stopped struggling, wanting him to get it over with. \n\nAs bad as the pain was, even with his slight movements, there was still pleasure in the background, just under the pain. I focused on it and reached down, helping him work me. He pushed slightly deeper and I whimpered but didn't tell him to stop as I made myself focus on the bliss that was just under the pain. \n\nHe eased back and watched me work myself as he took my hips and pushed himself further and further in, moving slowly. I felt him hit my inner wall and push against it as if he wanted to push through it. He held himself there, pushing in as hard and as far as he could as I brought myself closer. He moved his hand to start working me, letting me guide him.\n\nWhen I came, it shocked me as it hit. I wasn't expecting it yet, it had seemed just out of reach still. I cried out in surprise and he hissed in a breath of pain as my pussy locked down on him. His hands gripped my thighs painfully as I twitched and bucked, at the mercy of the orgasm sweeping over me. \n\nHe groaned as my body relaxed and released my legs to lean over me. He caught my hand and laced his huge fingers through mine before holding it down above my head and starting to pump his cock slowly. I whimpered and bit my lip. My muscles were all tighter now and the pain was a lot. He was shaking with need, but he stayed slow and gentle with a huge effort. An effort I could see. I could also tell that he was in discomfort. Was I hurting him?\n\nI was trembling as I slid my free hand down and started trying to work myself again, trying to make my muscles relax. Not just so it wouldn't hurt me, but so it wouldn't be too tight for him.\n\nHe groaned again and threw his head back as I started working myself again. He started moving faster and I grimaced, then hid my face in his arm.\n\n\"That's good,\" he groaned. \"So good! I am here!\" He growled loudly as he exploded inside of me, squirting hard and deep, the force of it making me suck in a breath. His roar of release was loud enough to make me flinch and half cower, pressing my face to his arm and clutching him until he finally half relaxed on me and I felt his cock starting to go soft inside of me. He still held himself there, breathing heavily with his forehead on the pillow. \n\nFinally, he eased out of me, moving slow and deliberately. He rolled to his back and pulled me against him. \n\n\"Wife,\" he said. A statement. \n\n\"It doesn't mean anything,\" I whispered, curling up on my side, trying to ease the discomfort. \"I'm still going to go home.\"\n\n\"You are home.\"\n\n\"No. I am a prisoner.\"\n\n\"My wife,\" he corrected, rolling to his side to spoon me. \n\nHe was so warm and his arms were comforting, despite how I felt about my situation. I closed my eyes and breathed in his unique, earthy scent, then drifted off to sleep. \n\nHe woke me in the afternoon, lifting me to sit up as he did. \n\n\"You need to eat,\" he said.\n\nI grabbed at the sheet, trying to cover myself, but he pulled me away from the bed. There was a blue dress laying on the back of his chair and he handed it to me. I pulled it on, looking down at it as I did. \"Can I have underclothes? And my shoes?\" I asked, wondering how they had been able to measure so exactly that the hem missed the floor by half an inch. \n\n\"No shoes on the Mountain,\" he said, pulling his vest on. \n\n\"No shoes?!? How am I supposed to walk?\"\n\nThe smirk he gave me said everything. He had no intention of letting me walk anywhere any time soon. \"No shoes,\" he continued, \"makes you closer to Bheinn. It's our way. Come,\" he demanded, holding up a wet cloth. \n\nHe wiped all of the blood from my face as I looked up at him. \n\n\"My underclothes?\" I asked.\n\nHe shrugged. \"Ain't much point, less your moons on ya.\"\n\n\"Umm... I feel like I sort of need them?\"\n\n\"Ya don't.\"\n\n\"Can I at least have a sweater? Or coat? Something? My feet are freezing! Socks?\"\n\n\"Ya get used to it. You done complainin?\"\n\nI sighed, throwing up my hands. He picked me up and carried me out the door and I just held on to him. At least he was warm!\n\nThis time, people smiled at me and greeted me and Cailleach Willa gave me a nod as we passed her. He sat at a table with other people, including his father. I avoided looking at him, embarrassed. \n\n\"Got her head straight then?\" Gun asked Feen. \n\n\"She saw her own way.\"\n\nI was quiet as I watched everyone, listening to them and the odd way they spoke to each other. I ate the odd food, huddled close to Feen. He seemed happy enough for me to stay close, holding me against him with his free arm. Nore sat next to me with a plate and looked down at me.\n\n\"Fit?\" she asked.\n\n\"Yes, thank you. Do you have anything with long sleeves? Or a sweater? Or can I have my hoodie back? Or my pants to wear under this? It's really cold.\"\n\nNore smirked over my head at Feen. \"She chitters like a squirrel.\"\n\n\"Mmm,\" he agreed.\n\nI sighed dismally. \"So can I get my hoodie back or not?\" I asked irritably. \n\nShe laughed and started eating. Feen patted my leg absently, trying to calm me down. \n\n\"Takin her over to Lossa?\" Gun asked Feen.\n\n\"After,\" Feen said between mouthfuls. The man could put away some food. I noticed his father put away just as much. \n\n\"Helpin' for Mabon?\" Nore asked him.\n\nFeen shrugged, then cut his eyes at me. \"She hafta go in for the crown?\"\n\n\"Tradisiun. Cailleach Willa may offer leithsceal.\"\n\n\"What's going on?\" I asked, alarmed.\n\n\"Mabon,\" Nore said, moving her food. \"I will say more if you offer aifeala for actions and words.\"\n\n\"Mabon? Aifeala? Is that... sorry? You want me to apologize?\" I asked, trying to decipher her words. \"Sorry I was mean. What's Mabon?\"\n\n\"Mabon,\" she said, looking at me like she was wondering if I was serious. \"The great deolchaire. Sharing of the harvest with the clans?\"\n\n\"The clans? The people living here?\"\n\n\"All of the clans. There are 78 clans on the mountain. We will share harvest with four who are close. Celebrate the deolchaire.\"\n\n\"Deolchaire? That's like... endowment? Bounty?\"\n\n\"Bounty,\" she agreed with a nod. \"She speaks old tongue?\" she asked Feen.\n\nHe shrugged. \"Some. She chatter's.\"\n\n\"She speaks some?\" Gun asked.\n\n\"More'n me I think,\" Feen answered with a one armed shrug, still eating. \"Has a way of figurin'.\"\n\n\"She hears Bheinn,\" Nore nodded. \"I will speak with Cailleach Willa.\" \n\nShe jumped up and hurried away, leaving her plate.\n\nFeen sighed like he was upset now, or put out. I couldn't figure out which. I looked up at him curiously, still trying to figure out what was going on. Would he tell me if I asked? No. He would think I was talking too much. \n\nI looked around, then pulled out of his arm and headed towards the outhouse like I was going there. He glanced at me, but said nothing. The ground was freezing and my feet were soft and not used to the packed dirt and rocks. What the hell kind of people didn't wear or allow shoes?!?\n\nI went into the outhouse, then stood on the seat and peeked out of the little window, watching Feen. When he looked down at his plate, I darted out and slipped behind the small building. I went low and peeked again, but he was still looking down and I didn't see anyone watching me. I edged back, looking around and keeping the small building between Feen and I until I made it to the trees. The second I was out of sight, I turned and started running full tilt down the mountain. It may take a day, or three, but I was determined to make it down to the road that circled the foothills of the mountain. I ran until I was out of breath, which was sooner than I would have liked.\n\nI paused to turn and look behind me, leaning on a tree and panting. I was cold, my feet were cut and hurting, but I ignored it. I was not staying on this mountain. \n\n\"Bheinn, if you are listening, no offense but I want to go home,\" I whispered, starting back down. \n\nI kept waiting to hear sounds behind me, some signal of a pursuit, but all I could hear were birds and my own stumbling steps, crunching leaves underfoot. Two hours in, I was sore and my feet were killing me. I wanted to stop and rest and find a way to do something about my feet, but I made myself push on. I wanted off this mountain! Two more hours and dark was settling in, the dense forest making it even darker than normal. Should I keep going, or hunker down for the night?\n\nI half stumbled into a tree and pushed off of it, breaking into a small clearing. There was a large rock jutting up, and learning against it, Feen. He was at his ease, eating something he was holding in his hand and not looking at me, though I knew he knew I was there. I froze, feeling defeated and upset. He finished eating, then stood up off the rock and dusted his hands off before finally looking at me. His dark brown eyes were furious. \n\nI sighed, resigned, then stood up straight.\n\nHe closed the distance and picked me up, slinging me over his shoulder and making me squeal, an embarrassingly frightened noise as I threw my hands out, thinking I was going to be let go and thrown to the rocks behind him. I grasped at the back of his fur cape, trying to steady myself as he landed a very hard open handed smack to my backside. I let out a pain filled cry of fear and humiliation, trying to wriggle away from the next blow. It didn't come as he pulled my dress up and grabbed my ankle. He looked at the bottom of one foot, then the other, then growled angrily and swatted my bottom again. Not nearly as hard this time. He pulled me back and held me sitting on his forearm like he usually did as he started back up the mountain. \"Never again,\" he hissed.\n\n\"I won't stop trying!\" I said angrily. \"I want to go home!\"\n\n\"The mountain is your home! I am your home!\"\n\n\"No! My home is in Atlanta! I will keep running!\"\n\n\"The mountain will keep you. You may hear Bheinn speak, but she speaks to me as well. She led me right to where you would be and led you right to me. She will always lead you back to me.\"\n\nI went still, looking at him guardedly. Was he serious? Did he think the mountain spoke to him? Or this Bheinn, the goddess of the mountain? How had he known where I would be?\n\nI sighed again, trying to staunch tears. I ached and my feet hurt and I was shivering with cold. He didn't complain when I laid my head on his massive shoulder. I'd half thought he would. I pulled back and tried to pull the fur cape that was wedged between us out and he relaxed his hold enough that I could. I lifted it, leaned into him and let it fall over me, huddling under it and trying to get warm. He adjusted me slightly on his arm, moving me down so I could lay against him more easily. \n\nThat made me feel a little bad, as accommodating as he was being after I had run and made him have to come get me. As if to rub it in, he adjusted me again so that he was holding me in both arms, then put the other side of the cape around me as well. Snuggled into his arms, as soon as I was warm I passed out in exhaustion. \n\nI didn't wake until he jostled me awake in the morning. We were in his cabin in his bed. I sat up, then winced at the sunlight and shaded my eyes as he got up and opened the door. An older woman came in with a bag hanging on her stooped shoulders. \n\nFeen came to me and pulled me out of the blankets, then laid me on my stomach. I squirmed to turn my head and look at him, but didn't struggle as he pulled my dress up to my knees and grabbed my ankles. He held my feet up to the woman and she looked them over. My head hurt and I was still freezing. I laid my head down, unable to summon any curiosity. I ached from head to toe and I wanted to go back to sleep more than I wanted to know what they were going to do to me. \n\nI woke to being jostled again, but I tried to go right back to sleep after turning and pressing my face to Feens shoulder. He turned me and lifted my face to his. He looked concerned. I grumbled and pulled back, then laid back down with an exhausted sigh. When I woke again, I was on my stomach again and someone was messing with my feet. I didn't look, I laid there with my eyes closed, my head throbbing. The hand holding my foot wasn't Feens, it was too small. They were painting the bottom of my foot with something and it burned in several places, but even the pain couldn't make me rise up from my weariness. \n\nWhen I opened my eyes again, I was sweating. I pushed the blankets off with a groan, my body hurting as I tried to sit up. I needed the restroom badly. Feen got up from his chair and came to me, tilting my face up to his and looking at my eyes. He gave a nod, then picked me up. I was in a brown dress now, I half noticed as he carried me out to the outhouse. How had he known? \n\nHe carried me straight to the pavilion afterwards, but I didn't look around. I was still too tired. He set a cup of water in front of me and Nore set a bowl of soup in front of me.\n\n\"She gon' live?\"\n\n\"Yeah,\" Feel answered.\n\nWas it a serious question? Had there been a doubt? What had happened? Uncaring, I ate the soup ravenously, then paused as my stomach clenched and heaved. I pushed the bowl back before it was a quarter done. She seemed to expect that as she pulled the bowl across to herself and finished it.\n\n\"What happened?\" I asked tiredly, laying my head on Feen's arm.\n\n\"Red crown,\" Feen answered, laying my head on his leg so he could eat. \n\n\"Nn?\" I grumbled sleepily.\n\n\"Poison thorn,\" Nore answered. \"You got yourself cut up good. Shouldn't'a been able to keep walkin as much as you did. Adh mor Feen found ya. Bheinn was lookin out, she must like you. Most the cuts were easy to heal, but the poison coulda killed ya.\"\n\nI should have been afraid, but I only felt numb and still tired. \"Can I have my shoes back now?\" I asked sleepily.\n\nFeen grunted and I realized he had laughed. \n\nHe woke me up again and I blinked, looking around. We were back in his cabin. He carried me out to the pavilion and it was dark. Dinner was being served and there was something going on. ",
        "Cailleach Willa was up, talking and several women in white were wandering around the very crowded pavilion. Feen sat us down next to his father at a very crowded table and a bowl and cup were immediately put in front of me. \n\nI watched what was happening as I ate and tried to figure out what Cailleach Willa was saying. Bheinn, mountain, harvest, blessing... My head hurt but I was still able to figure it all out, even as quickly as she was speaking. \n\nA woman in white put a hand on my shoulder and I turned to look up at her. She smiled and put a strand of yellow beads over my head. \n\n\"Thanks?\" I said, looking down at the painted wooden beads. \n\nI looked at Feen and he was scowling.\n\nMoments later, another woman came and put blue beads over my head. When a third came and put white beads around my neck, there were murmurs all around the table. Feen had stopped eating and was glaring at his plate. When a fourth woman arrived, he glared at her as she put brown beads over my head. Another woman was right behind her with red beads. \n\nFeen stood and started to pick me up, but his father spoke. \"Boy,\" was all he said. \n\nFeen sat back down, gritting his teeth. \"They intend to make her Mabon Banrion, athair!\"\n\n\"So they do,\" he answered, still eating. \n\nAnother woman came with green beads. Feen made a strangled noise. \n\nFinally, the women in white stopped handing out beads to the girls in the crowd and went to stand around Cailleach Willa. \n\n\"Ceim,\" Cailleach Willa called loudly.\n\nFeen helped me stand and I looked at him questioningly.\n\n\"Go to her,\" he commanded irritably.\n\nI limped around the table to Cailleach Willa, along with half a dozen other girls. She lifted a single strand of beads, all different colors with a huge medallion hanging down the middle. It looked like an apple? The women in white lined the seven of us girls up and Cailleach Willa looked us over. Her eyes stopped on me. \"An dtuigeann t\u00fa m\u00e9?\" she asked quietly.\n\nI nodded slowly. \"Yes, Cailleach Willa, I think I understand you.\"\n\nShe nodded, then addressed all of the girls. \"An bhfuil a fhios ag gach duine agaibh conas labhairt le Bheinn?\" she asked.\n\nI looked around at the girls, who all looked confused. One stepped up. \"Yes!\" she said confidently. I looked at her long brown dreads and her pale profile. \n\nCailleach Willa nodded. \"Cad a deir s\u00ed leat?\" she asked the girl.\n\nThe girl hesitated. \"Yes,\" she answered.\n\nCailleach Willa nodded and I sighed. The girl was bluffing.\n\n\"Cad a deir s\u00ed leat?\" Cailleach Willa asked me.\n\n\"I don't know that she does speak to me. You say she does but... knowing languages, being good with words, that doesn't mean I can speak to Bheinn,\" I answered. \n\nThe pale girl looked at me, her cheeks turning pink as she stepped back into line.\n\n\"Labhra\u00edonn s\u00ed tr\u00edothu,\" Cailleach Willa said gently, moving to stand in front of me.\n\n\"Why?\" I asked fearfully. \"Why would she speak through me? It's not true. I just know languages and base and root words!\"\n\n\"Tuigeann t\u00fa n\u00edos m\u00f3 anois n\u00e1 mar a rinne t\u00fa ar dt\u00fas.\"\n\n\"I do, but it's not like that! I only understand more because I am getting used to it!\"\n\n\"Labhair liom,\" she commanded gently.\n\nI meant to say 'I don't want to, but it came out, \"N\u00edor mhaith liom.\"\n\nHer smile was triumphant as she put the beads around my neck and a cheer went up. She kissed either of my cheeks, then stepped back. \"Mabon Banr\u00edon!\" she announced.\n\nCheers went up, but they sounded halfhearted. A voice cut in, yelling over the crowd. \"She aint of us!\" the man yelled.\n\nI turned to look at him and noticed Feen had stood up, looking over at the man dangerously. \"She's a M\u00f3r,\" he thundered, quieting the entire pavilion.\n\n\"She is weak!\" another man said, standing up next to the first. Several people stood up and joined them and the pale girl joined them as well.\n\nGun stood also. \"What makes you say so?\" he asked lightly. \"Was it how she survived the mountain? The red crown sting? How she kept going long after she should have fallen, or was it how she survived when Bheinn should have taken her? She was not born here, but Bheinn has taken her as her own. My son has taken her as his own. If you disagree, perhaps you would like to take it up with him? No? Then sit. I give ag tairiscint to Mabon Banr\u00edon! OLL!\"\n\n\"OLL!\" thunderous cheers went up. I covered my ears as Feen came around and picked me up. I was hoping he would take me back to the cabin, but he lifted me higher to sit on his shoulder and turned a slow circle as everyone cheered. I felt ridiculous and overwhelmed, still covering my ears. \n\nWhen he finally lowered me down and carried me back to the table, I was relieved and frustrated. I wanted to leave the loud people, not stay! \n\nMusic started and I pressed into Feen, half trying to hide. When Nore sat down across from me, I turned to her. She was grinning like she had a secret, but I ignored it. \"What is all of this about?\" I asked.\n\n\"Mabon Banr\u00edon? Do not fear, your job is easy. It is Feen who will have much to do!\" she laughed.\n\nFeen growled irritably, but he still seemed to look proud. His eyes shone with excitement. What was going on?\n\n\"When?\" I asked, having to yell.\n\n\"Tomorrow!\" she answered, smiling. \"I will get you when it's time!\"\n\nFeen stood then, picking me up. He set me on the bed in his little cabin, then paced, looking down at me thoughtfully. \n\n\"I will win,\" he said confidently.\n\nI looked up at him, wondering if I understood him. Did it have something to do with tomorrow, or did he mean about me staying on the mountain and not getting away? I guessed it didn't matter. \"Ok,\" I answered, shrugging. Let him think what he wanted. \n\nHe half nodded, then began pulling off his clothes. I looked away, but still glanced back when he stepped closer to me. He started to pull my dress off and I grabbed at the hem. \"What are you doing?\" I asked, half choking on the words.\n\nHe pulled my hands off the fabric gently, then started to pull the dress off again. I hunkered into a tight ball, holding the dress over my knees with all my might.\n\n\"Nore made this, she would be m\u00edsh\u00e1sta if you made me rip it.\"\n\n\"I would be unhappy if you took it off!\" I countered.\n\nHe cocked his head, looking me over. \"Take it off or I will,\" he said simply. No threat, no anger, just a fact. \n\n\"I don't...\"\n\nHe didn't wait for me to finish, he grabbed my ankle and picked me up, holding me upside down. I screamed as the dress fell over my face and the skirts pooled on the floor. He stepped on the skirts, then lifted me higher, pulling it off of me like he was skinning me. I slapped at his legs and kicked with my free foot, but he just set me back on the bed and picked up the dress, tossing it on his chair before moving to get back into bed. He looked angry now. I hid under the blankets and tried to feign being tired and weak. \n\nHe climbed in the blankets behind me and pulled me against him, his cock pressing into my back as his hand moved up my belly to grope my breast in a massive hand. I tried to turn out of his grip, but he held me tight. I struggled harder and he growled low in his throat. \"Miontine!\"\n\nI went still, breathing heavily, shaking slightly. \"I don't...\" I began to whisper.\n\n\"Quiet,\" he grumbled, pushing me to my stomach. He shoved the pillow away and the blankets back, moving back to look down at me laying face down on the bed. It was a feather mattress and I sunk down into it slightly so it felt restricting. He took my hands and put them over my head, but didn't hold them there. He just expected me to keep them there. He moved lower and pulled my legs apart, moving so he could see. I tried to fight him, but he was strong. Ridiculously strong. I was trying so hard to pull my knees together, my back was arched and my ass was in the air. I only realized it when he put a hand on my bottom, caressing as he held my other leg wide with his other hand. He moved so he was between my legs and I could not close them. Gripping the mattress, I went still again, my eyes wide. Was he about to start spanking me again? The memory of his single hard smack made me tense up. I jumped when his hand lighted on my lower back, gentle and warm. His other hand he pushed down between my legs, searching for my clit. I sucked in a breath when he found it and turned to hide my face. His fingers toyed softly, gently as he held his other hand in the small of my back. I closed my eyes and moaned softly, the sound escaping before I could stop it. He moved the hand from my back and laid next to me, his knee keeping my legs wedged open. His fingers kept rolling over my clit as he petted my hair back and turned my head so I was facing him. His look was curious as he watched my face. I squeezed my eyes shut and bit my lip, feeling self conscious. \n\nHe moved down, leaning over me, his fingers still working my clit slow and steady. It was maddening! The slow buildup of pleasure, I writhed with the need for more. When I felt his hot breath on my back, I got goosebumps everywhere and I raised up slightly, knowing he was about to kiss my back. He did not. He bit gently, pulling with his teeth and making me gasp. He did it over and over again, nipping a trail across my shoulder to my neck, over my other shoulder and down my ribs to my side. Every single one sent chills through me.\n\nOnce his mouth was down to the dimple on my lower back, he slid his other arm under my shoulder and slid his hand higher, then lifted me and rolled me before laying me back down. I looked up at him wide eyed, and he looked down at me hungrily. \n\nHis fingers went back to my swollen pussy and he played in the wetness in my slit, then rubbed his fingers over his lower lip again as I watched. I swallowed hard, part of me wanting to get up and kiss him, pull his lip into my mouth and suck on it, see what he would do. I started to sit up, but he quickly held my shoulder down with one hand while going back to my clit with the other. \n\n\"Stay,\" he whispered, pressing slightly on my shoulder before moving his hand to move my hands back up above my head. \"Stay,\" he whispered again, pressing on my wrists. He leaned down, his mouth close to mine and I tilted my chin up, accepting the advancing kiss. He moved past my mouth and gently bit my jaw, then my neck. \n\n\"Kiss me!\" I demanded in frustration.\n\n\"What?\" he asked, lifting slightly, then moving back down to bite harder on my shoulder. \n\n\"Ooohhh,\" I moaned, my body melting. \"Kiss me... please.\"\n\n\"Kiss?\"\n\n\"On my lips? You don't... kiss?\" I asked, confused. As I thought about it though, he had never kissed me, even when we were joined and I had seen no one kiss. I had seen plenty of them nipping on each other and dragging their teeth over skin, but no kissing. No mouth on mouth.\n\nHe looked down at me, confused, then at my lips. He leaned in and took my lower lip in his teeth, sucking it up and pulling, biting softly.\n\nIt was sexy and very hot, but I shook my head slightly. I moved my hands, taking hold of his face. He made a noise of protest and pulled back, taking my wrists again. \"It's ok,\" I said, pulling away. I sat up and pushed him to sit up, then I straddled him, going up on my knees and taking his face in my hands. His hands went to my hips, the light in his eye saying he thought I was about to do something I wasn't. I buried my fingers in his hair and made fists, pulling him close, then kissed him softly. His lips were stiff, like he had never been kissed before. I kissed him again, then again, sucking on his lower lip and pressing closer to him. He held me closer and slid his hand down to slide a finger into me. I moaned into his mouth, but he was still stiff. \n\n\"Kiss me back,\" I whispered, then kissed him again, parting his lips with mine and teasing his tongue with mine.\n\nHe jerked back, looking alarmed and confused, then shook his head slightly. \"You want my mouth?\" he asked, raising an eyebrow.\n\n\"Yes! Kiss muYAHHH!\" I yelled as he lifted me and shoved me down to the bed. He shoved my legs apart roughly, then tilted my knees high, raising my pussy and bottom high in the air. He dropped down and his mouth covered my pussy and I let out a shriek of horror. I struggled, but he held me firmly as he bit along my inner thigh, my pussy lips, my clit. His mouth covered my slit and he sucked so hard it was painful as his tongue worked a trail up and down my slit. \"Stop!\" I wailed, trying to push his head back with my hands. He growled and moved higher, locking his mouth over my clit and sucking, then flicking with his tongue. \"Ohh?\" I had meant to tell him to stop again, but... it felt amazing! The second I stopped struggling, his hands slid from under my knees to my thighs, then he moved one under my bottom to hold me up and the other he slid to my pussy lips, playing in the wetness there. I moaned again and shook my head as he slid a finger into me. My body instantly rewarded his attention as I came, the bliss cascading through me as I stiffened and twitched under him. His growl said he loved it and he redoubled his efforts, sucking almost painfully. My cry rose in pitch as the pleasure took me higher and higher and a second orgasm slammed into me before the first had even abated. White filled my vision as my body became a slave to the driving force of the orgasm. Movements, thoughts, nothing was my own while it filled me. \n\nIt was his hand on my face, his thumb on my lower lip that brought me around. I was completely blissed out and languid as I turned to him. His eyes were bright with want and amazement and I grinned up at him before taking his thumb into my mouth and sucking on it. His growl said he liked that a lot. \n\nI pushed myself off the bed and looked up at him. \"Not what I meant, but that worked,\" I said lightly. I looked down at his jutting manhood and knew I wasn't going to be able to return the favor, but I wanted to try. I pushed him to lay down, but he stayed up on his elbows watching me, his eyes still bright and curious. I took his cock in my hands, watching his face as I did. His eyes widened slightly as he watched me, his eyes going from my hands to my eyes. I stroked him in both hands, then bent low and kissed the tip gently as I drew the foreskin back. His lips parted in anticipation and I kissed again and again as I stroked. He looked enraptured and enchanted as he watched. I met his eyes as I ran my tongue along the ridge on the bottom of his cock, then did it again, flattening my tongue and pressing harder. His fingers slid into my hair while I wasn't watching and I looked up at him. I felt a stirring then, as our eyes met. Not just a sexual want, but a deeper tugging as he looked at me so full of adoration. It drove me to want to please him more. I circled my tongue around his cock, then sucked and licked off the precum before kissing the tip again. I licked my lips, then kissed the head again, pressing and letting his cock part my lips as I lowered my head. He groaned, a rumble that I could feel in my chest as I worked his entire head into my mouth. It was as much as I could take, my mouth was too small, but I kept stroking with my hands as I swirled over his head with my tongue. His fingers moved and I thought he was going to try and push my head down further, force more of his cock into my throat, but he ran his thumb over my temple again and again as he panted. The motion was gentle and sweet, loving as he caressed my face. My heart swelled and I tried harder, forcing his cock further into my mouth, working my hands in tandem as I tried to unhinge my own jaw. \n\nHis rumbling roar was my only warning before his cock swelled and throbbed in my mouth and he shot into the back of my throat. I felt exultant and excited as I sucked and pulled and swallowed. The final shot spurted out and I felt him half collapse to lay down, but his hand didn't move from my face. I pulled off of his shrinking cock and turned my head to kiss his wrist. He stroked my cheek lightly, then ran his thumb over my lip. \n\n\"I like kiss,\" he rumbled.\n\nI giggled. I couldn't help it. I climbed up and curled up next to him, smiling happily. When he pulled me against him, I thought about what had just happened. I'd enjoyed that... and I felt good. Happy almost. There was something about Feen, something guileless and open. I fell asleep curled into him and dreamed about him. \n\nHe woke me in the morning, his mouth on my bare breast, sucking and tugging with his teeth. I stretched and smiled, stroking his face like he had stroked mine the night before. When he lifted his head to look at me, his lips were swollen and his eyes alight with need. That look pulled something low in me and his smirk said he knew it and liked that it did.\n\nHe shoved me higher on the bed and pushed my legs apart, laying between them while stroking my face with his fingertips. He moved close and once again I thought he was going to kiss me. He pressed his head to mine and stared into my eyes as his fingers stroked my cheek. \"Miontine,\" he whispered hoarsely. \"My wife.\"\n\nI stared up at him, intense feelings overwhelming me as I felt like we were looking into each other's souls. It was incredibly intimate. So much more than kissing, with eyes closed. His eyes held mine and I could feel emotion pouring in. I wanted him. I was aching for him! \n\n\"Feen,\" I whispered, then paused because I was too embarrassed to say what I wanted. I stared up at him and whispered, \"Fear c\u00e9ile,\" without thinking about it. His smile said he had wanted to hear me say it. Husband.\n\n\"Sea mo bhean ch\u00e9ile?\" he asked. 'Yes, my wife?'\n\n\"Is bre\u00e1 liom t\u00fa!\"\n\nHis chuckle was low and pleased. \"I love you too, Miontine.\"\n\nI blinked. Had I just said that? Why had I said that? I felt uncomfortable for a moment, was the mountain really affecting me somehow? I didn't know this man, I certainly didn't love him! \n\nI looked up at him and the fear fell away. None of that mattered just now, he was all there was. Filling my vision, filling my heart and my mind. It was love. \n\n\"Ba mhaith liom t\u00fa!\"\n\nHe grinned again and practically purred, \"I want you as well.\" His hand slid down to my hip, then my knee, pulling my leg high around him. \"And I will have you,\" he whispered. \n\nI shivered with need and anticipation as his hand moved in and his fingers played over my slit. I was already wet and his smile was beautiful as his eyes widened. He pushed up off of me and moved higher, taking my hand with his free hand and lacing his fingers through mine as he raised his hips to line his cock up.\n\nI felt him press the head of his cock against me, then start to push in and I bit my lip. There would be pain, but I didn't care, I needed him so badly, my pussy was throbbing with it!\n\nThere was a loud knock on the door and Nore came in.\n\n\"No!\" Feen said angrily as I tried to shield myself. He did not move, just looked over his shoulder at her.\n\nIf she was bothered by seeing us in bed, she didn't show it as she smiled at him. \"It is time now, Col,\" she said with a grin.\n\n\"No! Come back.\"\n\nShe laughed. \"Cailleach Willa is waiting.\"\n\n\"Everyone can wait!\" he raged, but then he roared angrily and pushed off of me. \n\nI yanked a sheet up and tried to cool my burning face. He was standing there looking like some sort of god and I still quivered with need for him. He obviously needed me as well and that wasn't helping me at all, seeing how ready he was for me. Nore's smile was impish as she looked at me. \"Come,\" she said, gesturing.\n\n\"Sure, umm, give me a sec? I need to get dressed?\"\n\nFeen tossed me the brown dress and gently laid the necklaces on the end of the bed, then turned to Nore. \"You listened. You waited. You did this for sport!\"\n\nShe laughed and shrugged. \"How much harder will you fight now, Col?\" she asked, her eyes dancing.\n\n\"I will win,\" he hissed. He yanked his pants on, then grabbed his vest and left without even looking at me. ",
        "I pulled the dress on, then stood up and let the skirts fall to the floor. \"Am I supposed to put these back on?\" I asked, gesturing at the necklaces.\n\nShe picked them up and put them over my head, adjusting them so the amulet was centered. \n\n\"I need the restroom,\" I said as she led me out.\n\nIn less than ten minutes, she was leading me into a hastily erected pavilion off away from the gathering of houses. There were white sheets enclosing it and some filmy, sheer ones as well. I looked out at the huge open space in front of the little pavilion and the structure in the center of it. It was a round staircase in the center, and at the top of the stairs was what looked like a birds nest with pillows instead of branches. \n\n\"What is that?\" I asked as Nore started pulling off my dress. I didn't ask, I let her since I saw a white gown laid out. Two women came in, both with buckets of water and cloths, and they began washing me. Very thoroughly! \n\n\"It is the r\u00edchathaoir,\" Nore answered.\n\n\"It doesn't look like a throne,\" I said, looking again through the sheer fabric on that side. \n\nCailleach Willa came in and handed me an apple. \"Eat!\" she commanded. \n\nI ate as two more servants came in and started disrobing her and washing her as well. I was shivering as they washed my hair and rubbed scented oils into my skin. More women in white came in and the first two held me with my arms wide while four of them began painting my naked body with tiny white swirls and designs, runes as well. The brush strokes tickled and made me giggle until Nore was laughing with me. Even Cailleach Willa offered a smile as her hair was dried off. My smile disappeared when I saw them put the white gown on Cailleach Willa. The only white gown. My brown dress was nowhere to be seen. All I had was paint and the necklaces. \n\nI turned to Nore fearfully, but she was still smiling as she looked at something in the open field.\n\nI turned and looked and Feen was there, pacing angrily. He looked different. He had on his buckskin pants, but no shirt at all. His hair was all gathered up and knotted in the back of his head like he wanted it out of his way. He also had a giant black handprint on his face, just like the one he had put on me. \n\n\"What does that mean?\" I asked Nore. \"The black handprint?\"\n\nNore smiled and pressed her lips together. \n\nI looked back at Cailleach Willa. \"Means he's willin'a die.\"\n\n\"Die?\" I asked, spinning back to look at Feen. \"Why?\"\n\n\"Keep you from bein' took.\"\n\n\"Me? Someone is going to try and take me?\"\n\n\"S'Mabon,\" she nodded. \"Gon',\" she said to the women. \n\nThe women in white pulled me out to the field and I protested and pulled back. \"I need clothes!\" I shrieked.\n\nThey didn't listen, they dragged me out and up the steps to the high nest, then held me there and turned me to face Cailleach Willa at the bottom. To my horror, I could see people starting to head to the field in the distance. I whimpered, but then Feen was there, standing next to Cailleach Willa and I felt a calm wash over me as I looked at him.\n\n\"Nore,\" Cailleach Willa said, gesturing to me. \n\nNore nodded at her, then turned to me. \"You must sit on the r\u00edchathaoir until change of day. If you are claimed afore, you spend a year and a day with them and they receive Bheinn's deolchaire. You must sit as a Banr\u00edon all day. You musn't waver or hide or you will shame us and lose Bheinn's deolchaire. You have a cosant\u00f3ir, but you must not speak to or acknowledge them. Even to call for help or shout warning. At change of day, if none have touched you, your cosant\u00f3ir may claim you. You may speak only to your seirbh\u00edseach, and no one else. Do you understand?\"\n\n\"I think so? Who is my handmaiden?\"\n\n\"You may choose.\"\n\n\"Can I choose you?\"\n\nShe grinned. \"Yes!\" she answered, climbing the steps eagerly. \n\nThe women in white turned me again and helped me step into the bowl with the thin mattress and pillows in it and I sat down as they lowered me. They arranged me and I sat there shaking as my eyes darted around to all of the people arriving. They piled pillows behind me so I could lean on them and laid a light blanket over my lap, but not my exposed chest. They laid my painted arms out on cushions like they were displaying them. Two more climbed up and they began arranging a large wreath on my head, adding and moving flowers as the other women left. Finally, it was only Nore and I and she sat down on the step just below the throne.\n\n\"Can you tell me more now?\" I asked in a whisper. \"What is happening? Can I cover my chest?!? Please?\"\n\n\"No!\"she hissed urgently. \"Cover nothing, try not to move.\"\n\nI was starting to hyperventilate as throngs of people began gathering around the field. People were moving tables, chairs, bringing food and drink and instruments. \n\n\"What is going to happen?\" I asked.\n\nShe offered me a smile, but didn't answer. \n\nI saw Cailleach Willa when they pulled back the white curtains to the pavilion and tied them all to the poles on the corners. She was in her own chair now, in white. There was also a huge bell near her and a hammer next to it, along with a long rope and ribbons tied to it.\n\nAn hour passed and people kept coming.The buzz was deafening and I was terrified. There were so many people! Tables and chairs circled the field and there were cookfires all around.\n\n\"May I have a drink?\" I finally asked Nore. I hadn't spoken to her in forty five minutes, I was angry at her not answering any questions. She lifted two fingers at the tent and one of the women in white hurried up with a cup. \n\nFeen had been circling the throne, watching the crowd and I had been trying not to watch him too closely. I was supposed to be pretending he wasn't there. It was hard not to look though, especially when his eyes lifted to mine.\n\n\"It's almost time,\" Nore whispered. \"When Cailleach Willa stands, so you must as well. Stand as a Banr\u00edon, proud and fierce. Do not cower or hide or cover yourself like you do. It is not our way.\"\n\n\"It is MY way!\" I hissed, horrified at the thought of all of these people seeing me. The only consolation was that they couldn't really see details. I was high up and far enough that they could only see vague impressions. Surely. Right? And they wouldn't be getting closer.\n\n\"Once she rings the bell you may sit again, but as you were. Don't fidget around or get upset at what happens.\"\n\n\"Why? What's going to happen?\" I asked in alarm.\n\nShe smiled. \"Just stay calm and indifferent.\"\n\nI opened my mouth, but Cailleach Willa stood. Nore jumped up, but I stood slowly, letting the blanket fall as I did. I squared my shoulders and stood as tall as I could, ignoring the screams of the crowd. I focused on a tall tree poking out above the rest and lifted my chin. The yelling and shouting died down and I could hear Cailleach Willa speaking, but my heart was hammering so loud in my ears that I didn't know what she was saying. \n\nNore touched my wrist. \"Be ready,\" she whispered. \"Stay calm and sit as if nothing is happening.\"\n\nI took a calming breath, but still jerked when the bell sounded. I started to sit as slowly as I stood, but paused halfway down and ended up falling the last few inches to my butt. A man came screaming out of the crowd, straight at the throne. He was large and terrifying and I half whimpered as I watched him charging straight for me. \n\nFeen was there suddenly, intercepting him. He grabbed him by the throat, lifted him in the air and slammed him down on the ground so hard that I felt it in the throne. \n\n\"Close your mouth,\" Nore whispered.\n\nI closed my mouth.\n\n\"Try not to watch, sip your water as if you are not concerned. Feen won't let them get to you.\"\n\nI lifted the cup, but did not drink. \"If... if they get to me... they will rape me, won't they?\" I asked, terror clawing at my throat.\n\n\"And they will own you for a year and a day. Until a new Banr\u00edon is crowned and claimed.\"\n\nI was shaking and I made myself look away from the next man who came charging out of the crowd. He went straight for Feen, not me.\n\n\"What if they come a bunch at once?\"\n\n\"They can't, they drew lots for order. One at a time and only one can claim.\"\n\n\"What... what if they hurt Feen?\"\n\n\"They won't,\" she laughed softly.\n\n\"What if they do?\"\n\n\"Hope they don't,\" she shrugged. \"And if someone does, hope it is any clan but the Olc clan. None will harm you for true, save perhaps the Olc clan.\"\n\n\"Why?\"\n\n\"They live closest to below, furthest from the mountain. They have... a fearg in them.\"\n\n\"Why are they angry, OH! Please!\" I whispered as another man rushed Feen. I made myself look away.\n\n\"Too close to the one below we reckon. Look, there, off to the right, straight off from your shoulder. See the tall man wearing all black and the pale girl with him with the white hair and red eyes?\"\n\n\"A true albino,\" I said, a little shocked.\n\n\"Puca is evil, she is. The man is Bayn Olc. That next to him with the kilt, the one with the shorter hair tied back?\"\n\n\"The little one?\"\n\n\"Yes, don't let his size fool ya. That's Bayn's cousin Hasslin. Hass is quick and mean. Seen him fight Gun's brother two years off, climbed him like a squirrel and choked him to sleep.\"\n\n\"Gun has a brother? Feen's uncle? Where is he?\"\n\n\"Watching the below. Like Feen was. There, that man next to Hass now, the one talkin, he is Barret Cleas. He's a weasel, that one. All Clan Cleas are. They are kin to Olc. Not so mean, but watch what you trade. They'll put a layer of good potatoes over a bushel of bad. Don't trust a one. See Hass movin off, that's his brother Rast. Hass is quick tempered and flares, but Rast is a slow burn. He's not a fighter like Hass, but he'll poison you and watch you die a slow death. And be happy to do it. Hass'd cut your throat and be done. They are smart too. Bet they traded off to be near the last, wait till Feen was tired.\"\n\n\"Is every man going to make a try for me?\" I asked fearfully, looking around.\n\n\"Not all of them, just ones who want a shot at you. Cailleach Willa was sure we'd make a record tribute this year and judgin' from how long it took to get started, I'd say she was right. Look over at Cailleach Willa!\" Nore said suddenly, urgently.\n\nI spun to Feen in alarm and watched as a man tackled him to the ground. The man was fast and viscous, but after a punch and roll, Feen got him down and choked him out. \n\n\"Sit back,\" Nore hissed, \"and look somewhere else. Feen will protect you.\"\n\n\"Then don't scare me like that!\"\n\n\"I thought I saw a knife,\" she said, sounding almost a little fearful herself.\n\n\"They can use knives?!?\n\n\"No, no one can use anything but their hands. We don't trust the Olc's and Cleas's not to though. Four years yon, Con still swears Bayn blew something in his eyes that burned so bad he couldn't see for a day. When the year was up, Puca wouldn't go back to her clan and she was changed. She is Olc through and through now, and not by bond.\"\n\nI sipped my water and scanned the crowd, trying to watch Feen in my periphery. \"That man there, the one all in white, who is he?\" I asked. The man was staring at me.\n\n\"Draoi Lukel.\"\n\n\"Really? A real life druid?\"\n\n\"You have them below?\" she asked curiously.\n\n\"Only in stories! Can he really do magic?\"\n\n\"Same as Cailleach Willa.\"\n\n\"So if it's a girl they are a witch, if it's a boy they are a druid?\"\n\nShe laughed. \"That is like saying red redbird and blue bluebird. Why?\"\n\nI felt my face heating. \"But they can really do magic?\"\n\n\"How do you think she chose you? She found the mountains cain\u00e9al and made it wider. Made it pour into you instead of dripping like it was. It is how a banr\u00edon is always chosen. And you speak the old tongue as well as Cailleach Willa herself. She opened that...\"\n\nNore trailed off, her eyes wide as the crowd collectively gasped.\n\nI spun, standing up, ready to run to Feen. He was standing over a man, covered in blood. It was not his blood. The man had to be carried away and Nore caught my hand and pulled me to sit down.\n\n\"You care for him,\" she said softly. \"I did not think you could.\"\n\n\"I do, despite myself. Did Willa do that too?\"\n\n\"No,\" she answered, smiling. \n\n\"Did... Feen just kill that man?\" I asked breathily.\n\n\"All know it is a risk going in. More of one with Feen bearing the dark mark. It means he loves you and will die for you. You aren't just kin he is giving token protection to.\"\n\n\"Oh,\" I said faintly. When I looked up, the man was still looking at me and I was sure he hadn't looked away. \"Why is he staring?\"\n\n\"He is likely trying to read you, or is trying to listen.\"\n\n\"Can he?\"\n\nShe shrugged. \"Draoi Lukel, his m\u00e1thair was like you. From below. Like you, the mountain called her, brought her in. She had the bronntanas, she was trained as a cailleach.\"\n\n\"Mar sin a rugadh draoi d\u00f3?\" I asked, watching the man watch me.\n\n\"What?\"\n\nI froze, realizing what I had said. \"Umm. So he was born a druid?\"\n\n\"In a way, he was born with the bronntanas and was trained.\"\n\nMy skin was crawling and I felt a little numb. I didn't like that I kept saying things I shouldn't know how to say, or understanding what should take me longer to figure out. I pressed my lips together and focused on the tall treetop again. I tried not to focus on the movement I could see in my periphery below. \n\nFeen would win. He had told me he would. I hadn't understood what he meant at the time, but I knew now and I did not doubt him.\n\nWhen the sun rose high, I was brought another apple and a tall mug of cider. Feen also sat on the stairs, climbing more than halfway up to sit and eat a huge meal that was brought to him. More than anything, I wanted to go down to him.\n\nI knew I wasn't supposed to speak to him, but I turned to Nore and said loudly enough for him to hear, \"Tell him to please be safe! Tell him I...\"\n\n\"Tell who what?\" she asked with a smirk. \"There is no one here.\"\n\nI sighed. \n\n\"He knows,\" she whispered.\n\nAs soon as Feen finished and stood, the bell was sounded again. I lounged back and looked away, out towards Willa and her tent. I tried to look impassive and commanding, but mostly I felt tense and stressed. I watched the comings and goings of the tent for hours, until everyone went quiet and the entire field went into a hush. Nore stood, her hands on her mouth and I turned to look.\n\nAt first I didn't understand what I was seeing. Gun was walking slowly out onto the field and Feen was watching him come with a stupefied look on his face. It hit me then, what was happening. Gun wasn't going out to see his son or talk to his son...\n\n\"He won't hurt his athair!\" Nore wailed in a whisper. \"How could Gun do this to him?\"\n\nFeen did indeed look torn and crushed. I felt sick, I wanted to go to him. Why would Gun do this? I knew then, it wasn't about Feen as much as it was about me and punishing me. He wanted me punished more than Feen would. \n\nWhen Nore caught me around the waist and pulled me back, I realized I had started down the steps. \"He can't!\" I whispered fearfully.\n\nI saw Feen look past his father, up to me where Nore was pulling me back to the throne. I froze then, when he let out a savage roar and charged Gun. He lowered his shoulder and caught his father in the belly, lifting him and driving him back a good thirty feet before driving him down to the ground at the edge of the field. They rolled and the crowd moved for them and I took another step down to see better. Nore had stopped trying to pull me back and was watching with me. Gun came up and took a heavy swing, but Feen dodged it and caught Guns arm, then stood, holding onto Guns arm over his shoulder. He bent and threw Gun back into the field, slamming him on his face. The collective crowd made a noise of commiseration for the pain that must have caused. Gun rolled and kicked out, kicking behind Feens knee, making Feen go down.\n\nI was holding my hands over my mouth, watching fearfully as the fight went on and on. Feen was faster and stronger, but Gun never seemed to run out of steam! He kept getting back up and fighting back!\n\n\"Feen!\" Nore hissed. \"Take him out! Stop holding back!\"\n\nIt wasn't until she said so that I realized Feen was holding back. He didn't want to actually hurt his father and that's what Gun was counting on!\n\n\"D\u00e9an \u00e9!\" I screamed.\n\nNore caught me then and pulled me bodily back to the throne, turning me away from the fight. I was still stunned by my own words. 'Do it!' Had I really just commanded him to hurt his father?\n\nNore wrestled me down to a sitting position and I tried to look around her. \"You must...\" she began, but cut off as the crowd let out a collective cheer. \n\nWe both stood to look. \n\nFeen staggered away from Gun, laying face down on the ground. Feen held his arms up in an 'X' above his head and the bell was rung. Feen sat on the ground and someone brought him water as more women in white hurried to Gun. He had to be carried off the field, but I could only watch Feen. He looked heartbroken, but still determined. My heart broke for him.\n\nWhen Feen stood, there was silence as he looked around. He circled twice, waiting, then suddenly took off towards me at a full sprint. He took the stairs four at a time and I watched him come, horrified. \n\nI realized last second that the next man had gone around, put the throne and stairs between him and Feen and was sneaking up the back. Feen caught him at the shoulders and they were both flying off the stairs to the field below.\n\n\"Sneaking Cleas!\" Nore spat. \n\nThe two rolled and Feen came up on top, then slammed the smaller man's head against the ground again and again until a woman in white hurried out and called to him.\n\nFeen stood, staggering again and rotating his left shoulder like he had hurt it. 'No!' I said mentally. 'Don't show where your weakness is, the rest are watching!'.\n\n\"Wipe your tears,\" Nore said softly. \"But do not look as though you are. Go back to watching the puball, Feen will win.\"\n\n\"Can I have a knife? Just in case?\" I whispered.\n\nNore looked at me, shocked, then laughed. \"You cannot kill the winner just because it is not Feen\"\n\n\"Why not? I am not going to let a man rape me.\"\n\n\"It is not... rape. It is...\"\n\n\"It's rape. If I am not willing, and I am married to another man and I don't want it to happen, it is rape. I don't care about this stupid event! I will kill any man who comes up those stairs that isn't Feen!\"\n\nNore looked at me and her smile was pleased. \"I did not like you at first, col ceathrar, but I have learned to. You care for Feen.\"\n\n\"That is why you call him Col. Cousin.\"\n\n\"Gun is my uncle.\"\n\n\"I didn't understand it until you said all of it. Will you tell me about him? How he grew up? Why he was watching the town? Anything to distract me?\"\n\n\"Feen has always been the way he is now. Most would say he was a fathach milis, but a few know that he can be ferocious. Like now. He is...steadfast. Unwavering in his loyalty and affection. So unlike Gun, who is so volatile. When we were just little, he would follow the rest of us, not to play too, to make sure we were all safe. He has always taken it on himself to protect, like he knows that his size makes him best suited to that job. When Gun tried to make him bond Gitty so her athair would prentice him, he took off down the mountain. To watch, to protect us from those below. He had no want to bond Gitty, or take up smithing. So he just didn't. He left. Past time for him to come back and take up his athairs mantle as ceannaire. Councils been waiting nigh on 4 years now to be rid of Gun. He had a fascination with the people below too. Not understanding them or how they could be so awful to each other. He'd come back maybe twice in a year till Gitty was bonded, then he'd come back more oft. Tell us about below, about the people in that town, about the Olc's and Cleas's who were so close.\"\n\nNore spent the evening telling me about Feen and I was smiling sadly as I listened. My affection for him swelled with every story and the way Nore smiled as she talked about him made me fond of her too. She cared about him and she liked who he was as a person. That spoke to me, the way she looked up to him and respected him. ",
        "Night came and the bell rang again. I was brought ANOTHER apple and another tall mug of cider. I hadn't finished my first, not wanting to have to make a trip to the restroom through all of those people with nothing on but my skin and some paint. \n\n\"How much longer?\" I asked Nore who was showing signs of boredom.\n\n\"Two hours?\"\n\nI nodded and looked down at Feen who was just four steps down, eating another huge meal. Close enough that I could see bruises and blood from the torchlight around me. \n\n\"So what happens when it is over? I get to go home with Feen?\"\n\n\"He gets to come up the steps and claim you for his own.\"\n\n\"Claim me?\" I asked carefully, looking at her in horror.\n\n\"Like any of the others would if they got up here.\"\n\n\"In... in front of everyone?!?\"\n\nShe shrugged. \"It is how we do it.\"\n\n\"But you said kin sometimes does what he is doing! How does that work?!?\"\n\n\"If it's kin, it's token. He leaves over when the man she wants comes and lets him win. Kin don't take their own that way. Only if they wear a dark mark like Feen, or a light mark.\"\n\n\"What does a light mark mean?\"\n\n\"That he loves her and will protect her.\"\n\n\"Isn't that what a dark mark means?\"\n\n\"A dark mark means he will kill for you... and himself if he loses.\"\n\nI felt another wave of sickness wash over me. Now I was twice as angry at Gun! He did that, came out here and tried so hard KNOWING his son would end his own life if he succeeded?!? That BASTARD!\n\n\"You don't have to be upset. Feen won't lose,\" she said confidently. \n\nI tried to be as confident, but my eyes went to the man she had called Hass. The small, quick one who liked to fight. He was squatting at the edge of the field, talking to a girl who was laying down next to him, between him and another man. He was also looking right at me. He smiled when he saw me looking and stood up. He put his hands on his hips and I tried to assess him. He was small for a man, but hard. Every bit of him was wiry muscle. There was no way he could be a match for Feen, one solid blow and the small man would be out! No matter how quick he was, all Feen had to do was get a hand on him. He had a leather pouch over his kilt with three racoon tails hanging from it and he unbuckled it as I watched, letting it fall to the ground. He pulled his shirt off as well and fear spiked up. He was next! I looked at his face again and he was still looking at me, smirking now. He was one of the few men I had seen on the mountain with no facial hair. Did he shave or could he not grow it? How old was he? \n\n\"Det,\" Nore warned. \"Don't let him upset you. If you are upset, so Feen is as well.\"\n\nI looked down at Feen and he was still powering through his food, but his head was angled so that I knew he could see Hass as well. \n\n\"Nore,\" I whispered. \"Just one knife? Anything?\"\n\n\"You won't need it,\" she whispered back confidently.\n\nConfidence. I had to be confident and I had to do it where Feen could hear it now. \n\n\"So when Feen wins and comes up here, can we hide under the blanket?\"\n\n\"Why? You act as though it bothers you to let people see how you care for him?\"\n\n\"Sex is not so casual below. Or public.\"\n\n\"You should be proud. Gitty would have tried to climb on him and ride him like a stallion for everyone to see.\"\n\n\"I am not Gitty,\" I hissed, unaccountably jealous of this unknown girl. \n\nNore laughed. \"No, you are not. She is taller even than me and as wide in the shoulders as a boy. She'd have made a good match with Feen,\" she said teasingly, looking down at Feen as his back stiffened, \"but not many others could stand next to her and feel comfortable. Bet it is eating at her that such a slight little thing caught his eye! If it was allowed, bet she'd'a put her lot in just to keep you from him for a year!\" she laughed.\n\nFeen turned and gave his cousin a withering look and I felt myself smiling. When his eyes met mine, he quickly looked away and I sighed, wishing I could go to him.\n\nI grinned. \"Well, I guess I can't let her show me up! When he wins, I will have to ride him like a stallion myself.\"\n\nFeen half choked on his food and took a fast drink as Nore laughed joyously. He stood suddenly, leaving food on his plate and signalled the tent and I laughed too now that he was suddenly eager to get this over with. \n\nPart of me was screaming at myself. I was going to have to pay up to that boast in front of all of these people! The other part of me said I didn't care as long as it was Feen who climbed those steps. \n\nThe bell rang and my head whipped around to watch the small Hass. He was squatting at his ease again in nothing but his kilt now, and still smirking at me. It was another man who came out onto the field. I turned back to Nore quickly. \"Tell me when that guy comes out?\" I asked quietly.\n\n\"Don't fear him. He is quick and mean, but Feen loves you. He'll break him over his knee for you. And Hass isn't mean for mean sake like his brother, he is mean like a badger. Don't cross him and he won't cross you.\"\n\n\"Why does he keep looking at me that way?\"\n\n\"He is probably enjoying the view,\" she shrugged. \"The firelight makes the shadows around your breasts dance beautifully. It is also known that he likes small, beautiful girls.\"\n\n\"Why hasn't he bonded one?\"\n\nShe laughed. \"The Olc's don't bond! They use until they are done and find another. Hass especially, he goes through girls. They are always taking girls from below, then moving them up the mountain when they are done with them, most too broken to ever be bonded. There's a Cleas now, not one of the clan leaders though.\"\n\nI turned to see the man who had been sitting next to Hass go onto the field. The first thing he did was go down low and scoop up a handful of dirt and sling it at Feen's face. Feen was expecting it, he spun as he closed the distance, then grabbed the man by the head, using his own momentum to shove a knee up to the man's face. The man crumpled and stayed down. His kin had to come pull him off the field.\n\nFeen was walking away before he knew the man was out, stalking like an animal. God he was sexy! My body reacted in a visceral way, my pussy throbbing and getting hot as I imagined him stalking up the steps. I needed him.\n\nI made myself look away, flushed as I looked at Nore who was smirking at me. \"Even I must admit, Col is easy to look at. I am glad you have given your heart over to him so quickly and wholly. He deserves it.\"\n\nI felt myself blushing as I smiled shyly. \"I wish I could just hide for the rest of this, I am too afraid to watch and too terrified not to. Is it just those Olc's and Cleas's left?\"\n\n\"No, that one out there now is an Ard. I'm not sure why he is here, his clan should be up at the Feirmeoir Mabon, it is their turn to host the Ard's.\"\n\n\"Is he bad like the Olc's?\"\n\n\"Naw,\" she shrugged. \"List is alright.\"\n\n\"List? The names are so... off.\"\n\n\"Listion?\"\n\n\"Like that. I have heard Bastion, but never Listion. And Finnegan, but never Feengun. Ben but not Bayn. It's like the names have been distorted by the mountain.\"\n\n\"Or by the below folk,\" she shrugged. \"This is a Cleas too, but he is nothing. Don't look. See? One single shot and he isn't moving. Only an hour left now!\" she said excitedly as one of the women in white pulled a ribbon off the long rope that hung on the side of the tent.\n\nI turned to look at the sideline. \"Do you think they all put their lots in?\" I asked looking at all of the men standing with Hass. \n\n\"I know they did. They have no love for Feen. They'll want to get their licks in and thumb their noses if they win. When they saw him with the dark mark, they surely made a plan to see him defeated.\"\n\nA new wave of nausea swept through me and I swayed in my seat. I turned to watch.\n\nOne hour left, there couldn't be many more fights left, but there were still half a dozen of them over there talking who hadn't fought yet. Hass was still smirking at me.\n\n\"I hate him!\" I seethed, balling my hands into fists angrily.\n\n\"No reason to let him into your heart at all, especially not to hate. He's not worth it, none of them are. Focus on your love and not your anger. You can...\"\n\nShe trailed off as Rast Olc pulled his shirt off and stepped out onto the field. I held my breath, watching Feen pace a few short steps halfway between the stairs and where Rast had stepped out. \n\nRast was both like his brother and nothing like him at all. He was small and had no facial hair, but where Hass was hard and wiry, Rast was just skinny. He was sneering at Feen as he eased closer slowly, trying to make Feen come to him. \n\nFeen didn't take the bait. Rast snorted in laughter, then looked back at his kin as if asking what he was supposed to do now. Bayn lifted his chin as if motioning to Feen.\n\nRast shrugged and started to close the distance as if he hadn't gotten his way and he was just getting it over with now.\n\n\"Don't you dare fall for it!\" I whispered.\n\nFeen did not. He went low, watching Rast coming, being careful to pay attention to every movement.\n\n\"His feet!\" Nore whispered.\n\nI looked down and his feet were glistening in the torchlight like something was on them. Oil, or salve of some kind.\n\nI stood, not knowing what to do, then did the only thing I could think of. I crossed my arms like Feen had earlier.\n\nThe bell was rung and Rast looked furious as he looked over at the tent to see what the problem was.\n\n\"His feet!\" I yelled. \"He has something on them!\"\n\nHe stiffened, his eyes darting to the tent and Willa who was standing up. \"Bring'm!\" she yelled. \n\nRast stood up straight as if offended, then turned his glare on me. Moments later, he was removed from the field.\n\nWilla held her hands up. \"Any mo' cheat'n n'y'all'l all be told off to go.\"\n\nThe bell was rung again.\n\nBarrett Cleas was next and he looked almost sick as he went out to the field. He was obviously upset that their trick hadn't worked, but something felt off. The ploy had been too obvious, too easy to see. They'd expected us to see it and stop the event, then let our guard down when we thought we had caught them out. Something was still coming.\n\n\"Nore!\" I said urgently. \"They have something else coming! That was too obvious, we were supposed to see it! His guard is down!\"\n\n\"No,\" Nore said calmly. \"He is cautious, see?\"\n\nI did see. Feen was circling wide of Barrett, watching him, watching every move he made. My eyes went to Hass and he was looking at me, his arms crossed, that smirk still there. I was so focused on him, I almost didn't see Puca behind him at the fire, mixing something.\n\n\"Puca!\" I whispered to Nore. \"Go Nore, run!\"\n\nNore ran. She sprinted to the tent, whispered to Willa and the others listened. The women in white hurried around the field to where Puca was working. I looked back at Hass and he wasn't smirking anymore as he watched the women come. He quickly spoke over his shoulder and Puca snatched up what she was doing and slipped into the crowd, away from the field.\n\nHass looked back to me and he looked angry now. He glowered as Feen finally closed the distance with Barrett. It was over in seconds. \n\nBayn stepped out next and circled wide, almost to the tent. He paced and taunted, but Feen stayed between us and wouldn't close the distance. Bayn took off suddenly as if racing for me and Feen rushed to intercept the feint. It was a feint. Bayn stopped and backpedalled and Feen started to follow. He had enough of his wits to stop and stay between us, watching. Bayn feinted again and again, drawing Feen closer and closer. Finally, Feen rushed him and Bayn danced back, then took a knee. Feen stopped, staring down at him in confusion. \n\nToo late. \n\nHass had moved to where he was closer to the alter and was sprinting all out the second Bayn's knee had touched ground. I whimpered as Feen spun and took off after Hass like a raging animal.\n\nIt wasn't going to be enough! Hass was faster! He hit the bottom of the steps and was smiling viciously as he bound up them. I cried out in terror, even as Feen hit the stairs himself, right behind Hass and closing the distance as impossible as it seemed.\n\nHass was right in front of me, a single step away, but instead of reaching for me, he pivoted and jettisoned himself off the top step, flying back towards Feen. He slammed his knee into Feen's face so hard that Feen was knocked back down the stairs.\n\nI screamed as Feen hit the ground in a rolling heap. Hass hit the ground, rolled once and was back up. He rushed to Feen who was trying to stand and stomp-kicked the back of Feen's shoulder, the one he had hurt earlier. Feen let out a growling yell and grabbed for Hass, but he was too slow. Hass darted back and snatched up a handful of dirt, slinging it at Feen's face. Feen hadn't reacted quickly enough! I was halfway down the stairs before Nore stopped me. She held me around the waist and sat down, forcing me to sit on her.\n\n\"Behind you!\" I screamed at Feen.\n\nToo late. \n\nHass used Feen's own knee to launch himself up onto Feen's shoulders and wrap his legs around his neck and grabbing fistfuls of Feen's hair. He yanked his head back and began dropping his elbow over and over again into Feen's face.\n\nI screamed and pulled away from Nore, but there were two more women there when I reached the bottom, holding me down.\n\nFeen finally managed to reach behind him and get a hold on Hass, but he couldn't pull the wiry man off of his neck. Hass's legs were locked on with a will and he kept pummeling Feen's head and face. \n\nFeen threw himself backwards onto the ground, just a few feet from me and Nore and the two women began dragging me kicking and screaming back up the stairs. \n\nFeen landed a solid punch to Hass's kidney and the man grunted and hunched enough that Feen got a hold of his neck. The crowd went dead silent as there was a sickening crunch. \n\nFeen layed there a long moment, panting, and when he stood up, the limp man fell away bonelessly. I stared at Hass, his sightless eyes staring back at me. \n\nThe crowd roared when Feen staggered to the steps and I looked at him in astonishment. Was it over? Had he won? \n\nI pulled away from the women holding me down and they let me go, but Nore held my arm. \"He has to come to you or it doesn't count,\" she said quickly.\n\nI waited for him to limp up the stairs, not taking my eyes from his, tears streaming down my face. My Feen, my sweet Feen! One eye was swollen shut and his lip was busted open. His hair was a wild mess and there was blood on his shoulders and neck. \n\nThe second he was close enough, I pulled him into a hug, sobbing. He lifted me gently and held me as I pressed my face to his neck. \"You won,\" I wailed shakily. \"I was so afraid for you, that was so reckless!\" I said angrily, trying to rub the dark handprint away.\n\nHe managed a smile as he caught my hand. \"I feared for you as well, Miontine. Now you are mine.\" He managed to sound excited about that.\n\nI laughed and pushed out of his arms. I tugged on his pants, until they were around his thighs, then shoved them down before pushing him down to sit on the throne. I straddled him, pressing against him though he was not yet ready and held his face in my hands.\n\n\"Your cousin is right, you are a gentle giant but you are the most fearsome man I have ever met when the need rises.\"\n\n\"My need is rising,\" he quipped, and he was right. His cock was getting hard quickly. \n\nI smiled and leaned in to press my head to his. \"You act like you aren't hurt or bleeding all over the place!\"\n\n\"He had something sharp on his legs, under the kilt.\"\n\n\"Of course he did,\" I said, exasperated and looking at the cuts. They were shallow at least. \n\n\"I heard mention of a ride,\" he said with a grin.\n\nI smiled and slid down his chest to press pelvis to his hard cock. \"It amazes me how single minded you are even when you can hardly move,\" I said, rolling my hips.\n\nHis hands went to my hips as he let his head fall back to the pillows. \"No man would fault me, not after a look at you,\" he whispered, his voice thick with need.\n\nI realized then that there was cheering and shouts, course comments and suggestions pouring in. I tried to shut them out as I leaned in and pressed my face to Feen's chest before lifting myself enough to try and take him into me.\n\n\"I am not sure I can do this,\" I whispered.\n\n\"You should have no shame, you are a sight to behold.\"\n\n\"No, I mean... I'm not tall enough to do what is needed\"\n\nHe chuckled and wriggled down so he was on his back and I was laying on his belly. He pulled me higher and reached down to touch me. I knew what he would find. I had been wet for him for hours. He made an appreciative noise as he eased me back down and pressed the head of his cock to me. I lifted just enough to put my hands on his chest, then slid down until his cock pushed into me. I hissed in pain and pleasure and he groaned.\n\nI moved slowly until I got used to his size and then managed to push down further, allowing his cock in all the way to my wall. \n\n\"Mmmmmm,\" he hummed, his massive hands on my hips, sliding me down faster. I lifted slightly higher, but the angle was wrong. I could not ride him like I had promised. I had to settle for laying on his stomach and rocking back and forth. If he minded, I couldn't tell. He held me and guided me for several long minutes as the cheers and catcalls kept coming. \n\nHe sat up suddenly and laid me down partially so that my head and chest were up over the lip of the throne. Everyone could see me as he thrust back into me. I let out a small cry of pain, but it gave way to passion and pleasure. The crowd may as well not have existed.\n\nI was in Feen's arms, he was making love to me. He'd won. I was where I wanted to be and I'd never been happier. I was his.\n\n \n"
    ],
    "authorname": "gabthewriter",
    "tags": [
        "choose your own adventure",
        "mountain",
        "non-con",
        "reluctance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/odette-path-c"
}