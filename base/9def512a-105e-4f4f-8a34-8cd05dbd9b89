{
    "title": "Walk a Crooked Milf Ch. 06",
    "pages": [
        "Chapter Six -- I Have a Proposal for You\n\nDelores Cashmore stood by her husband's gravesite and dabbed at her crocodile tears with her handkerchief. Jeremy Cashmore had treated her badly and left her poor and she was glad to see him gone. She didn't know how she was going to survive but survive she would. She was a housewife who had no skills whatsoever but she decided then and there that she would no longer live her life doing menial work for men; she would be her own woman.\n\n\"How can you dress like a slut at your own husband's funeral!\" her mother hissed as they walked back to the little church.\n\nDelores' mother was a little harridan of a woman and was one of the reasons Delores had married Jeremy and left home as soon as she could.\n\nDelores was wearing a black short-skirted suit with a white satin blouse, black fully-fashioned stockings and black four-inch high heels. Her makeup was heavy and she was wearing her favourite red lipstick.\n\n\"This is how Jeremy liked me to dress mother. On the rare days that he actually went to work, because most of them were spent in the pub, he liked to come home and find me dressed like this and bend me over the kitchen table,\" Delores spat her response.\n\n\"Don't talk like that! Not in church!\" her mother squawked.\n\nAda Robinson, Delores' mother, was one of those women who was content to live a hard life dominated by a brutal controlling husband and thanked God every Sunday for allowing her to exist. She insisted that her daughter attend church every Sunday with her and Delores had been unable to break the habit even after she had moved out of the family home. What she didn't tell Ada was that God had finally answered her prayers when Jeremy Cashmore had walked out of the pub in a drunken stupor and fell under a number ten double-decker bus.\n\nNor did she tell her mother that when she lived at home she only accompanied her mother to church so that she wouldn't be left alone with her father who liked to feel her up while she sat squirming in his lap. Ada Robinson thought that her husband and daughter were just playing a stupid game and chose to ignore the spunk stains on the back of her daughter's knickers.\n\nAda and Delores went back inside the little church to thank the Vicar for officiating at the service. There were few mourners at Jeremy Cashmore's funeral and those who had attended had left quickly. Delores cringed as her mother fawned over the Vicar, expressing her undying gratitude for what Delores thought of as just the Vicar performing his duty. Delores was very much a 'births, deaths and marriages' person when it came to religion, she attended church only to hide from her father and her husband.\n\n\"There is one other matter I'd like to discuss with you Mrs Cashmore, if you wouldn't mind remaining behind,\" the Vicar said as he walked the women to the big wooden doors of the church.\n\nAda Robinson once again thanked the Vicar and toddled off down the road.\n\n\"Please accompany to the vestry,\" the Vicar pointed to the door set into the side of the little church's rendered walls.\n\nDelores walked ahead of the Vicar who appraised her bottom and long legs. Publicly he would say that he didn't approve of the way Mrs Cashmore dressed for church but privately he'd played with his erection under his vestments on many a Sunday when Delores Cashmore had sat in the front row of pews next to her mother with her legs unintentionally parted showing a glimpse of her knickers.\n\nThe little vestry was gloomy and sparsely furnished with a wooden desk and cabinets that held the church's meagre sacraments. The Vicar took off his vestments and hung them on a coat rack.\n\n\"There that's better. Please take a seat Mrs Cashmore,\" the Vicar sat at his desk and indicated a plain wooden chair beside him.\n\nDelores sat down and primly crossed her ankles but her skirt rode up her thighs and she tugged at it and blushed.\n\n\"Thank you again for the service today Vicar,\" Delores said, although she didn't really mean it.\n\nAs far as she was concerned the Vicar had merely performed the funeral rights that he was bound to do by his position. He confirmed that in his reply.\n\n\"Merely performing my God given duties Mrs Cashmore and glad to do so, which is possibly a good segue into the reason I wanted to talk to you,\" he smiled at her through yellowed teeth.\n\n\"The funeral service comes free of charge of course, although some parishioners like to donate a little something to the church fund,\" the Vicar said.\n\nDelores blushed. She didn't have a penny to donate and she was sure the Vicar was aware of it.\n\n\"That brings us to the matter of the grave plot. Unfortunately that doesn't come free of charge,\" the Vicar said gravely.\n\n\"Oh my, I didn't realise,\" Delores' face fell.\n\n\"I know things are tough for you right now Delores, I can guess that Jeremy didn't leave you with much,\" he reached out and patted her knee.\n\n\"Pardon my French Vicar but he didn't so much as leave me a pot to piss in. All I have left is the house which he inherited from his uncle,\" Delores shook her head.\n\n\"Do you mind me calling you Delores?\" the Vicar had not removed his hand from her knee.\n\n\"Of course not Vicar,\" Delores smiled grimly.\n\nThe Vicar got out of his chair and walked to the vestry's old wooden door and turned the ancient doorlock. He looked at Delores intently and smiled through his tobacco-stained teeth.\n\n\"There are of course other ways one could pay for a burial plot. It's not really cheap Delores, around five hundred pounds plus the annual upkeep charges,\" The Vicar came back and stood before her.\n\nDelores felt very uncomfortable being eyelevel with the Vicar's crotch.\n\n\"Do you understand what I mean by other ways?\" he leered at her.\n\nDelores was bemused at first and then she saw the bulge in the Vicar's black trousers. If Delores had any faith at all it left her right then as did any respect she had for men in general.\n\nHer husband was a drunkard who beat her and would bend her over whenever the urge took him demanding his conjugal rights. Her father had held her squirming in his lap while he pressed his erect penis against her knickered buttocks until he ejaculated while her mother had feigned ignorance. Now the one man she should be able to trust above all others was making a pass at her.\n\n\"I understand Vicar,\" Delores sighed.\n\n\"Then shall we make the first instalment now?\" the sound of the Vicar unzipping his fly in the silent vestry was ominous.\n\nThe Vicar's penis was quite big and knobbly with pulsing veins and an angry-looking distended purple glans. For some reason Delores thought of the Vicar's wife who was a short mousy looking woman who always seemed to be wearing a pinafore, thick brown tights and scuffed flat shoes. Delores couldn't imagine her tending to the Vicar's needs but she obviously did because they had three children.\n\nDelores set her resolve and reached out and took the Vicar's penis in her hand and began to stroke it. The Vicar gasped as he watched Delores' slim fingers with those bright-red long fingernails grasp his manhood and begin to caress it. She gripped it tighter and felt the meaty thickness of it pulse in her hand.\n\nShe felt utterly disgusted and demeaned as she sat in the wooden chair masturbating the man who had christened her. But she couldn't deny that she also felt something else. She felt power. Delores realised that she could blackmail the Vicar should she chose to do so. It would be her word against his but surely a bereaved widow would attract sympathy and even if the Church didn't believe her the Vicar's name would be besmirched for ever.\n\nInstead of letting go of the Vicar's erect penis she lowered her mouth to it and began to suckle it. Her husband had demanded this service and she was quite adept. When she closed her lips around the shaft and used her tongue on the bloated glans the Vicar's knees gave way and he fell into his chair.\n\nDelores followed him with her mouth, getting down on her knees so that she could pay full attention to his cock with her mouth.\n\n\"Oh my Delores; no one has ever done that to me before,\" the Vicar sighed watching the woman with flaming red hair, heavy makeup, exuding a miasma of perfume bob up and down on his phallus.\n\nDelores worked her mouth on the Vicar's cock and as she did she gradually realised that not only did she feel powerful, she was also becoming sexually aroused. Her knickers were damp and she felt a tingling in her vulva that she seldom felt when Jeremy fucked her.\n\nThe Vicar unbuckled his trousers and pushed them down around his ankles with his underpants and placed his hands on Delores' head and guided her mouth up and down on his cock but she shook him off. She didn't like being handled like that, it reminded her too much of her dead husband who had often choked her when she fellated him.\n\nShe could feel the Vicar's cock begin to throb insistently and her quim becoming wetter. She needed something inside her to satiate her lust.\n\nWhen Delores spat out the Vicar's cock just as he was about to climax he cried out with dismay but when Delores bent over the desk and raised her skirt he was delighted. She tried to pull down her red satin knickers but the Vicar impatiently slapped her hand away eased the gusset aside and drove his cock all the way inside her.\n\nHe smiled when he realised how wet this woman was. He'd always fancied her and regretted having not made a pass at her before now. He gripped Delores' hips and began to fuck her and she obligingly pressed back against him and wriggled her buttocks appreciatively.\n\nThe Vicar's cock was bigger than Jeremy's and also Jeremy had seldom been able to maintain a durable erection because he was usually drunk. The Vicar might be a manipulative adulterous cad but he certainly had a great cock and knew how to use it. Delores began to moan as her orgasm germinated and began to grow. It began deep in her vagina where the Vicar's cock pounded on her G-spot and blossomed into delightful sprigs of pleasure that radiated from her tingling clitoris.\n\nThe Vicar felt Delores' cunt contract around his cock as she orgasmed. She was shaking on her heels and pushing her pillowy buttocks back into him as he gripped her tightly by the hips and drove himself all the way inside her and ejaculated. \n\nThe Vicar gasped and stifled the moan that he so wished to howl at full volume as he discharged his semen deep inside Delores Cashmore's quivering vagina. The aroma of her sex drifted from under her skirt as her juices flowed freely. Delores bit her lip to supress a scream as she writhed and wriggled with lust. This was what sex was supposed to feel like. She might be being coerced into giving the Vicar what he wanted but she had to admit that she liked what he was doing to her. She hated him for violating her when she was most vulnerable but she absolutely adored the pleasure he wrung from her.\n\nSuddenly there was banging on the vestry door.\n\n\"Are you in there Vicar?\" called Dorothy Clinton, one of the volunteer helpers, as she rattled the doorknob.\n\n\"Just a minute Mrs Clinton, I'm changing out of my vestments and mourning suit into something more comfortable,\" the Vicar called out.\n\nHe pulled his cock out Delores' vagina and a flood of semen and vaginal secretions soaked into her knickers as the Vicar pulled the gusset back in place over her puffy labia.\n\nDelores pushed herself up from the desk, adjusted her knickers and pulled down and straightened her skirt while the Vicar pulled up his underpants and trousers.\n\nDelores reached into her handbag and found a compact and her lipstick and fixed her face.\n\n\"That was an excellent first instalment Mrs Cashmore,\" the Vicar grinned at her.\n\n\"I'll make regular payments Vicar, every Sunday after church,\" Delores picked up her handbag ready to leave.\n\nThe Vicar walked her to the other vestry door, the one that opened onto the church grounds.\n\n\"I'll want a nice marble headstone installed and fresh flowers placed on my husband's grave every week Vicar,\" she leaned into the Vicar and nibbled his ear.\n\n\"Now, now Delores, I didn't agree to any of that,\" the Vicar's yellowed teeth repulsed her when he smiled condescendingly at her.\n\n\"Oh you'll do it Vicar. You'll do it gladly for your weekly stipend. Either that or I'll open the other door and call in Dorothy Clinton. Even a muppet like Dorothy will know what's been going on in here. The place stinks of perfume and cunt,\" Delores smiled and the Vicar's grin soured at the use of such vulgarity in his church.\n\n\"See you next Sunday then, shall I Vicar?\" Delores smiled sweetly and let herself outside onto the gravel path that cut through the centre of the church's lush green lawn.\n\nHer knickers were squidgy and uncomfortable but she was smiling to herself. She knew now how she was going to make a living. Men had always fancied her and some of them had used her but from now on she would be using them.\n\n*****\n\nDelores had been using her house as a brothel for six months before Steven Cottrell paid her a visit. She had no idea who he was and thought he was just another punter who had found one of her 'tart cards' that she had distributed in all of the public phone boxes in the area.\n\n\"You must be the delightful Delores Cashmore,\" Steven smiled as he entered her house one Thursday evening.\n\nDelores had not yet converted her cellar into a dungeon but she had renovated it and she led Steven down the stairs to what she called her workroom.\n\n\"This is a nice big space you have here,\" Steven looked around at the newly painted and carpeted room.\n\nThe the four-poster bed and the armoire were in place but the clothing in the armoire was very vanilla: sexy lingerie, a nurse's uniform, French maid's uniform, and extremely high heels.\n\nDelores currently had no need for the rubber and leather fetish clothing or the whips, canes and restraints that would eventually be required.\n\nSteven sat on the bed and started to undress.\n\n\"You should put in a bar and lounge area where the punters can relax, you know, provide a few extras so you can charge them more,\" he was down to his underpants and vest.\n\nDelores thought that her new punter was a little forward giving her unsolicited business advice.\n\n\"Also, I forgot to mention when I phoned you. Do you do any S&M or B&D?\" Steven stripped off the last vestiges of his clothing and lay naked on the bed.\n\nDelores was wearing a black transparent neglig\u00e9e, matching knickers, black stockings and high heels.\n\n\"Sometimes clients ask me to spank them,\" Delores said as she approached the bed.\n\n\"Yes but what about yourself? There's a lot of money in that lark. Would you be prepared to take a spanking or a bit of a caning?\" Steven propped himself up on one elbow.\n\n\"I've never thought about it,\" Delores sat down on the edge of the bed.\n\n\"If I doubled what you're asking could I give you a spanking?\" Steven smiled at her.\n\nDelores considered the short, pasty-faced, pudgy, pale-skinned, piggy-eyed man. He had arrived wearing an expensive suit but he was coarse and spoke with a common cockney accent.\n\n\"You would pay me double?\" Delores' business was performing moderately well but she was only just making ends meet, especially as she had outlaid a substantial amount to renovate her cellar.\n\n\"Yeah I'll pay you double. Call it a special service,\" Steven's grin widened.\n\n\"Sure, ok, why not?\" Delores was a little apprehensive but she could use the money.\n\nSteven joined her on the edge of the bed and began to kiss her. Delores didn't usually let her clients kiss her and she turned her head away.\n\n\"I don't kiss,\" she said evenly.\n\n\"Look love, if you want to make this a going concern you're going to have to offer what the other girls don't,\" Steven said, his voice gravelly.\n\n\"But...\" Delores never got to finish her sentence because Steven grabbed her and forced her down on the bed.\n\nHe might have been short and podgy but Steven was strong and he held her down and pressed his face to hers. Delores turned away again and Steven tweaked a nipple until she screamed.\n\n\"There we go,\" he grinned when she stopped struggling and faced him.\n\nHe lowered his face to hers and began to kiss her. He had wanted to kiss those full red lipsticked lips ever since he had laid eyes on her. Delores refused to open her mouth and Steven pinched her hard until she acquiesced and opened her mouth a little. Steve drove his tongue into her mouth and kissed her passionately.\n\nHer husband had liked to use his hands on Delores and often hit her but this was different. The pain was part of the foreplay and Delores wouldn't admit it but she found it stimulating. She returned Steven's kisses and used her tongue. She squealed when Steven tweaked her nipples but it was a squeal of both pain and delight.\n\n\"That's good girl,\" Steven hissed and kissed her again.\n\nHe suddenly sprang off her and dragged her onto his lap and began to spank her buttocks. At first it was just a few painful slaps and then he began to lay into her until Delores' buttocks were red and burning with pain. He slipped a finger inside her panties and opened her labia and circled her clitoris, whilst still slapping her bottom.\n\nSteven smiled. Delores was wet and although she squirmed with pain she was also squirming with pleasure.\n\n\"Oh my god stop! Please stop!\" Delores cried and Steven did.\n\nHe threw her on the bed and dived on top of her, his stubby penis probing between her legs. He slipped his cock inside the leg-hole of her knickers and found her sex swollen and wet and he drove his cock into her. Delores wrapped her legs around him. Her buttocks were burning and her nipples ached but the pain amalgamated with the pleasure that was radiating from her cunt and forged an intense decadent sensuality that she had never experienced before. Who would have thought that pleasure and pain could coexist and illicit such divine rapture?\n\nDelores lifted her buttocks off the bed to meet Steven's frantic thrusts. His stubby appendage didn't quite hit her G-spot with every stroke but his pubis ground against her clitoris and she could feel an intense orgasm blossoming.\n\nShe felt Steven's cock begin to convulse has he discharged his semen in her quivering cunt and she kissed him fervently and raked her heels on his back and held him close and rode her orgasm as Steven's climax peaked.\n\nWhen they finished they were sweating, scratched and bruised. Steven lay on top of her panting.\n\nSteven leapt off the bed with surprising agility for a little fat man.\n\n\"Clean yourself up luv and we can talk business,\" he called over his shoulder as he headed for the bathroom.\n\nDelores lay panting on the bed. Her body was sore, her buttocks burned, her nipples ached but she felt surprisingly contented and when Steven came out of bathroom she went in there and cleaned herself up and fixed her makeup.\n\nWhen she came out Steven was gone. Delores was angry because he hadn't paid her the extra money he promised.\n\nShe became even angrier when she found a besuited Steven Cottrell sitting in her lounge room having helped himself to a healthy dram of her whisky.\n\n\"Hey! What the fuck?\" Delores was about to berate him.\n\nSteven Cottrell held up his hand.\n\n\"Don't get your knickers in a twist luv. Come and sit down and let me tell you who I am and put to you a new business model for your consideration,\" Steven waved his drink at Delores.\n\n\"Well it's not really for consideration, let's say I'm making you an offer you can't refuse,\" Steven gave her a shark-like grin.\n\nDelores suddenly realised that Steven Cottrell was no ordinary punter.\n\nSo Delores entered into a business arrangement with Steven Cottrell whereby she was allowed to operate her own brothel paying Steven a premium for protection from other criminal elements and from the Metropolitan Police Force. She was to provide bespoke services maintaining confidentiality for her clients.",
        "Her business flourished and she was soon overwhelmed so she recruited Felicity Bancroft and Amanda Blundell after vetting them both to ensure that they were willing to provide the unique services she offered to her clients and to maintain confidentiality. Over the ensuing years she made a very good living and her business arrangement with Steven Cottrell proved lucrative for both of them. The feminisation of William Baxter had started out as a whim but once she realised Wendy's earning potential and her willingness to participate, Wendy joined Delores' stable of prostitutes and Delores was able to offer Wendy's special services for those who requested them.\n\n*****\n\nMy trip to Bangkok to undergo breast augmentation surgery went surprisingly smooth. I spent only one day in hospital under observation and then five days in a hotel recovering before my surgeon cleared me for the return journey and warned me to take it easy for four to six weeks until I was completely healed.\n\nI was very anxious when I went through immigration on departure from Heathrow but both Delores and John Benstead had told me to remain calm and not to draw any undue attention to myself and assured me that my passport would hold up under scrutiny which it did.\n\nIt helped that I was attired in leggings, a longsleeved t-shirt and heels and was wearing full makeup. The customs and immigration officers paid more attention to my pretty face, long legs and shapely derriere than they did to my documentation and Delores had sprung for a Club Class upgrade which also meant I had access to the British Airways departure lounges. I was more confident on my return journey especially knowing that I now had shapely C-cup breasts filling my bra rather than silicon breastforms.\n\nI didn't venture out of my hotel in Bangkok except to undertake surgery but I wasn't there for a holiday and I enjoyed an Executive Suite. The airfares, surgery and accommodation had taken a healthy chunk of my savings but as I was only just about to turn twenty I had plenty of time to make up the loss and build my bank account, which was now in Wendy's name.\n\nWhen I returned home Delores gushed and fawned over me and refused to let me work until I had fully recovered.\n\n\"I can still work Delores, the punters will just have to stay away from my tits,\" I said indignantly.\n\n\"Oh Wendy. All of your clients know that you've had breast augmentation and they are clamouring to see you again; do you really think they will stay away from your news tits?\" Delores replied.\n\n\"You can't perform any B&D in your current state and Steven Cottrell has been pestering me about you and so have the other punters on your client list. You will return to work when I say you can,\" Delores put her foot down.\n\nMy first clients when I returned to work were Steven Cottrell and Anthony Edwards who had paid for a foursome with Delores and I.\n\n\"I once again remind you that the safeword is Red gentlemen and ask that you are not too rough with Wendy given her recent surgery,\" Delores explained.\n\nDelores was wearing her leather catsuit and handing out drinks in the lounge area of the cellar dungeon. Steven and Anthony were naked under their black satin robes.\n\n\"Come off it Delores, she's only had her tits done. It's not like she's had lifesaving surgery,\" Steven snatched the offered drink and took a long draught.\n\n\"Come on Wendy. Show us your new tits then, that's what I'm paying for,\" Steven growled and reached for me.\n\nI was dressed similarly to when the gentlemen had last visited us: black satin bustier with red garters clipped to long, black fully fashioned stockings, a pair of red satin full-cut knickers and four-inch black high heels. My makeup and hair were perfect and the bustier gave me an hourglass figure with new creamy white breasts filling the cups. I had accessorised with silver jewellery from my growing collection.\n\nSteven roughly extracted my breasts from my bustier and I winced. It didn't hurt much but the scars underneath my breasts were still tender. Steven hefted my breasts in his hands and inspected them and Anthony joined him.\n\n\"They are lovely Wendy,\" Anthony smiled at me.\n\n\"The scars will fade eventually and will be hardly noticeable after a year,\" I smiled at the two men.\n\n\"Well I bags first dibs at her,\" Steven grabbed my wrist and led me over to the saltire cross.\n\nI had mode love with Delores many times since my return but this would be my first time having sex with a man and I was looking forward to it. I knew that Steven was going to treat me rough but I had to admit that I was longing for it. My cock was already fully erect but I kept it in my knickers as I knew that Steven did not like to see it or touch it.\n\nSteven was a strange man. He liked to kiss me, caress me, whip me, beat me and of course fuck me but he didn't want to touch my penis. Now that I had breasts for him to play with I knew that he would enjoy playing with them. I always wore full-cut panties when I was with him so that my erect penis was covered and after my first session with him I always made sure that if I ejaculated I did so into my knickers so that he wouldn't have to see that either.\n\n\"Put your back to the cross this time Wendy,\" Steven said as we approached the apparatus.\n\nI took position on the cross with my legs spread wide and my arms extended in the X position. I knew the consequences of displaying any amusement when Steven struggled to secure my wrists to the cross. He pressed his body against mine as he did so and his stubby penis rubbed on my thigh. He kissed me and I responded accordingly, slipping my tongue into his mouth.\n\nI felt his cock grow to full tumescence as he kissed me languidly. I quite liked being kissed whilst I was restrained. My usual response was to put my arms around my clients and hold them close and cosset them while we kissed but the impediment of being restrained and the frustration of not being able to fully respond actually added to the excitement and expectation.\n\nSteven secured my ankles and stood back to admire his work.\n\nPreviously when we used the cross Steven secured me face first to it so he could punish me and then pull down my knickers and fuck me from behind. It was strange being able to see him and watch what else was happening in the dungeon.\n\nDelores had Anthony bent over the restraint table with his wrists firmly secured. She was laying the cane into his already reddening buttocks and he gave a little yelp of pleasure and pain as she did so. After a few strokes of the cane she would reach under him and squeeze his cock and testes and then stroke him until he mewed and then remove her hand and begin to punish him again. I had seen Anthony endure this for hours with Delores, Amanda and Felicity taking over from each other as they tired.\n\nSteven selected a slim leather flail from the rack on the wall and I tensed in anticipation of its use on my body. Delores' rule was that customers were not to leave marks on any exposed parts of our bodies which usually meant being thrashed on the back and buttocks. This was the first time that I was to be punished standing face-on to my disciplinarian.\n\nSteven whipped me across my belly. To my relief he didn't hit me as hard as he did when he thrashed my back or buttocks but I still cried out as the searing pain lit across my tummy.\n\n\"What out for her tits!\" Delores called from across the room.\n\n\"You just keep whipping your Nancy-boy and leave me to my business you old harlot. The tranny knows the safeword,\" Steven snapped back at her.\n\nAfter ten strokes, each which was harder than the previous one, Steven stopped and approached me. He kissed me again and to my shame I became erect. The burning in my stomach and the carnality of Steven's passionate kisses merged into an intense feeling of rapture over which I had no control. It had been so long since I had been restrained and punished that I forgot how stimulating it was or how much I craved it despite the fact that I despised the man who was administering it to me.\n\nSteven pulled down the bodice of my bustier and exposed my breasts and lowered his face to them. He used his lips to suckle my nipples and when I sighed with contentment as wondrous feelings emanated from my tender teats he suddenly nipped them causing me to squeal. I found myself once again intoxicated by the amalgam of pleasure and pain.\n\nSteven squeezed my breasts and rubbed against me, driving his tongue into my mouth. He must have been able to feel my hard cock against his belly even though it was constrained by my full-cut panties, I could certainly feel his rubbing against my thighs. He had a way of sensing when I was experiencing pleasure and immediately applied pain in one form or another by biting, slapping or tweaking some tender part of my body. He seemed fixated with new breasts and alternately lapped and suckled my nipples then twisted, bit or pinched them. He stroked my milky globes gently and then he kneaded them coarsely.\n\nHe kissed me hard, driving and wriggling his tongue in my mouth and he ground his rampant cock against me. He suddenly stopped attending to me and laid into me with the flail making me scream with pain but I refused to use the safeword. For some reason being punished by the man I hated most in the world caused me to become extremely concupiscent, in fact Steven could evoke a satyric lechery in me that no one else seemed to be able to. I often wondered if my loathing for him juxtaposed to the licentiousness that he engendered in me was the reason I responded as I did.\n\nMy cock was throbbing, the front of my knickers were soaked in pre-ejaculate, I wanted him inside me. I wanted him to drive that stubby, gnarled monstrosity of a penis into my anus and fuck me hard and violently. I wanted him to violate me!\n\nAnd that's just what he did.\n\nSteven grappled with the bonds holding me to the cross and I fell to knees. He knitted his hands in my hair and forced my face into his crotch and I instinctively opened my mouth. He pushed his stumpy appendage into my mouth and I suckled it using my lips and tongue, gratefully accepting the pulsing phallus which was leaking droplets of dewy precum. I tried to use my hand to stroke the shaft and he slapped it away.\n\n\"Suck on it you tranny whore!\" he put his hands on either side of my face.\n\nHe face fucked me, making me gag and choke and I tried to prise his hands from my face. I hated it when men did that to me. But if I hated it so much why was my cock so hard?\n\nI sucked and slavered at Steven's cock and felt it pulse and throb and I expected to receive a mouthful of semen but Steven pushed my face away. He reached for the flail and whipped me as I scampered across the floor, the blows falling on my back and my rump. Then he entwined his fingers in my hair and dragged me to the bed where he trussed me over it so that my buttocks were raised and my head buried in the duvet.\n\nHe pulled down my knickers and thrashed my buttocks. The pain was indescribably and magically spectacular. When my buttocks were red raw he gripped my hips and drove his cock into my tight anus.\n\nI mewled with pain and delight as he gripped my hips and pounded his cock in and out of my back passage. My nipples ached, my back smarted, my buttocks burned and my anus was being ravaged but I felt the most intense pleasure.\n\nMy cock strained against my silky knickers pressing against the bed linen, my anus was afire with lustful decadence and I pushed my buttocks back into his groin to ensure that his glans pressed against my prostate.\n\nI ejaculated into my knickers the exact moment Steven ejaculated into my anus. I felt the warm flood of his seed fill me as he gripped my hips and drove his cock all the way inside me and ground against my stinging buttocks. My orgasm was astoundingly powerful and my cock erupted. The spurts of ejaculate that spewed from my pulsating penis burned and tingled and filled my knickers.\n\nSteven pressed against my scoured buttocks, grinding his pubis and eliciting every scintilla of pleasure from me as his cock continued to pulsate and ejaculate his load deep inside me.\n\nSteven pushed me down onto the bed and ripped his cock from my anus. His spend poured from my sphincter and ran down my thighs. He laughed.\n\n\"Now that's how you fuck a tranny!\" he guffawed.\n\nI was nearly exhausted, every part of my body ached but I felt exhilarated and deeply satisfied. I rolled onto my back and crawled onto the bed panting with exhaustion.\n\n\"Did you come? You dirty tranny whore!\" Steven pointed at my sodden knickers.\n\nI stupidly smiled up at him and nodded.\n\nHis face filled with rage and he snatched up the flail and began to beat me ferociously all over my body.\n\n\"Red! Red! Red!\" I screamed but he ignored me and continued to lash me.\n\nI covered my face and rolled onto my back to protect my breasts.\n\n\"Stop! Stop! Stop!\" Delores ran across the room and grabbed at Steven's wrist.\n\nHe pushed her away and kicked her when she fell. He thrashed her with the flail and then turned his attention back to me and began beating me again. The pain was indescribable. It raged through my body like fire. I cringed and curled up in a ball as Steve rained blows down on my body. The pain exploded with a blinding whiteness. It made me dizzy, almost faint I reeled with it, it was like molten metal being spattered on my skin, like electricity wired straight onto my flesh.\n\nAnthony Edwards was restrained over the table and he struggled to break free. His wrists bled with his efforts and eventually he was able to slide his hands through the cuffs. He dashed across the room and crash tackled Steven Cottrell to the floor. Steven struggled to get up and lashed out at Anthony who had no choice but to defend himself. He punched Steven repeatedly until he stopped struggling.\n\nAnthony helped Delores to her feet while Steven grovelled on the floor attempting to stand. Delores and Anthony crawled onto the bed to tend to me. I was sobbing and incoherent and Delores gently stroked my face and comforted me.\n\n\"I'm so sorry Wendy. What Steven did was unspeakable and unforgivable, you are such a lovely and caring young woman and do not deserve in any way to be treated like this,\" Anthony leant down and softly kissed my forehead.\n\n\"Don't apologise for me to that tranny whore! She got what she deserved, strutting around like she's something special!\" Steven spat as he struggled to his feet.\n\n\"She's a wonderful young woman Steven, why would say that? Why treat her like that?\" Anthony leapt off the bed and confronted Steven.\n\n\"You're no longer welcome here, get out!\" Delores screeched.\n\n\"Fuck you, you harlot! Fuck that tranny cunt too! And fuck you Anthony,\" Steven raged.\n\n\"I'm shutting this whorehouse down. You're finished Delores, you won't work again and you better watch your back!\" Steven strutted across to the valet clothes stand and began to dress.\n\n\"And you watch your back too Anthony. You just put your hands on me and you're going to pay for that,\" Steven struggled into his trousers.\n\nDelores and Anthony ignored him and tended to me. Anthony went to the bathroom and snatched up a towel which he filled with ice at the bar and brought it over to bed. Delores took it and placed it on my wounds.\n\n\"You're all fucked; all of you! You'll pay for this! She's a worthless tranny whore and I'm the boss of both of you, so fuck you! I fucking own you!\" Steven stormed up the stairs dressed only in his shoes and trousers, carrying his shirt and jacket in his clenched fist.\n\n*****\n\nI recovered quickly but once again I had to take some time off from work.\n\nFour days after the incident in the basement I heard Delores talking to some people downstairs and it definitely didn't sound like they were punters.\n\nI snuck down the staircase and saw Delores being interviewed by two policemen, one in uniform and one in plain clothes. I couldn't hear what they were saying but it seemed serious. I guessed that Steven Cottrell had fulfilled his promise to shut us down.\n\nDelores came upstairs when they left and smiled at me as I lay in bed.\n\n\"I heard you on the stairs you sneaky possum,\" she grinned.\n\n\"So the Old Bill is shutting us down at the behest of Steven Cottrell,\" I sighed.\n\n\"That's not what they were here for,\" Delores approached the bed.\n\nShe had her hands behind her back and she smiled at me again and dropped a copy of The Daily Mail on the bed.\n\n'London Gangster Missing,' the headlines read. \n\n'Long-time underworld thug and criminal kingpin Steve Cottrell is missing under suspicious circumstances. His car was found abandoned on the M1 motorway outside of Leeds. SOCO officers found blood spatter in the vehicle which matches Cottrell's DNA which police have on file. No body has been found but the incident is being investigated as a potential murder by the Serious Crime Squad.'\n\n'The vacancy created at the top of London's criminal hierarchy caused by Steven Cottrell's disappearance will likely be filled by Brendan Bourke, Steven Cottrell's deputy or by Anthony Edwards, the head of an associated criminal organisation. It has not been ruled out that Steven Cottrell was assassinated by members of his own criminal organisation following the disclosure of pornographic tapes which portrayed Steven Cottrell as a sexual deviant.'\n\nThe article continued but I read no further.\n\n\"The tapes?\" I looked up at Delores who had a thin smile on her face.\n\nShe just gave me a knowing look.\n\n\"And Anthony? Where does he sit in all this?\" I asked.\n\n\"Ah... perfect segue into another conversation. Anthony and I are well... well we've decided to make it more of a permanent thing,\" Delores patted her hair nervously.\n\nI looked at her quizzically.\n\n\"I'm moving in with him,\" she murmured, not looking at me.\n\n\"You're what?\" I was clearly astonished.\n\n\"Anthony has moved up in the world. He's going to be looking after all of Steven Cottrell's business interests now that he's gone and he wants a permanent partner.\"\n\n\"Someone attractive who can tend to his special needs and wants, someone who can be discreet but is intelligent,\" she said in a gentle tone.\n\n\"But not a brass? The head of London's biggest crime organisation can't have a brass as his partner,\" I said as the ramifications of what Delores was telling me dawned on me.\n\n\"Well technically I'll be an ex-brass I suppose but yes I won't be working here any longer,\" Delores said softly.\n\n\"This has all happened so fast,\" I was incredulous.\n\n\"Well things went quite off the rails the night Steven went crazy but Anthony seized the moment. Steven Cottrell is no more and he is not missed by anyone,\" Delores sat down and crossed her legs demurely.\n\n\"The tapes. You released the tapes so that people in his organisation would realise how perverted he was so that there would be no reprisals over his disappearance,\" I said.\n\n\"I'm on them aren't I? I'm the reason why that the papers are calling him a sexual deviant,\" I was incredulous.\n\nDelores didn't reply she just looked away.\n\n\"Like I said it all happened so fast Wendy,\" Delores sighed.\n\n\"So what happens to me now?\" I was still in a state of shock.\n\n\"I have a proposal for you. You're only young but you have an old head on your shoulders. What if you take over the business? I've spoken to Felicity Bancroft and Amanda Blundell and they are happy for the arrangements to remain in place with you running the shop,\" Delores reached out and took my hand.\n\nI was incredulous, speechless.\n\n\"What about you?\" I muttered.\n\n\"I'll go live with Anthony and help him with his business interests. I'll be the perfect wife: a cook in the kitchen, a lady in the parlour and a whore in the bedroom,\" Delores smiled at me.\n\n\"What about us?\" I asked.\n\n\"Oh Wendy there will always be us. You know you are special to me and always will be. You're like the daughter I never had but more than that. You are my lover and my confidant, my pupil and my friend. Things will change but we will still see each other, we will still be close,\" Delores climbed onto the bed and snuggled up beside me.",
        "\"Amanda Blundell had agreed to move in here with you but you will run the business. She will tend to my clients and be your assistant,\" Delores stroked my cheek.\n\n\"I'm handing the business over to you... if you want it. If not, Anthony and I are prepared to set you up wherever you want in whatever endeavour you choose,\" she looked at me meaningfully.\n\n\"I can do whatever I want and you'll pay for it?\" I looked at her incredulously.\n\n\"Yes, whatever you want Wendy,\" she kissed my cheek.\n\nI moved my lips to Delores mouth and kissed her.\n\n\"How soon can Amanda move in? I'll take the master bedroom of course and I'd like you to help me find a car like yours; I quite like the Beemer,\" I said.\n\n\"Oh you little ferret! Here I was worrying that I was abandoning you and all the time you're pondering what it's going to be like running your own brothel at twenty years of age!\" Delores leapt on me and began to tickle me.\n\nThe tickling turned to cuddling and then Delores took off her skirt, heels and blouse and joined me under the covers.\n\n\"You're going to be ok. I'll still be around to help you. You're strong. You'll thrive,\" she whispered to me between kisses.\n\n\"Promise me that you will still be around,\" I pulled her close and kissed her.\n\n\"Of course I will. You'll be sick and tired of having me visit and tell me to piss off and go home to Anthony,\" she chuckled.\n\n\"Ok then. Let's do it,\" I said as I climbed on top of her. \n\nI was wearing satin and lace babydoll pyjamas and my cock was straining at the front of my knickers. I kissed Delores and pressed my breasts against her and my cock into her silken-clad cunt. She lifted her legs and wrapped her stocking-sheathed legs around me.\n\nI gazed into her beautiful eyes and smiled.\n\n\"You're beautiful,\" I whispered.\n\n\"You're beautiful,\" she returned the compliment.\n\nI prised her breasts from the cups of her bra and suckled on them, lapping at her nipples as they hardened like berries in my mouth. Delores found my breasts with her hands and stroked and tweaked my teats until they became hard and tender and then we kissed again.\n\nDelores reached for me and found me engorged and throbbing in my knickers. She freed my phallus and guided it to her sex. She pulled aside her knickers and the scent of her cunt wafted to my nostrils and when she pressed my glans to her labia they were warm and wet. I resisted the temptation to plunge myself inside her, instead I sopped her when just as my meatus was inside her tight quivering cunt.\n\n\"Don't be mean,\" she looked up at me sulkily.\n\nShe lifted her groin up and impaled herself on my steely cock which slid into her hot buttery cunt. I fucked Delores slowly and tenderly, kissing her and stroking her. We whispered endearments and cossetted and caressed each other, luxuriating in the feel of satin and nylon on our tender flesh as we ground and rubbed against each other.\n\nWhen we were both reached climax we clung to each other and kissed each other with such passion that we both sobbed. I kept myself inside her and lay on top of her and Mrs Cashmore hugged me to her body and kissed my hair and told me that everything was going to be alright.\n\nShe told me that she loved me and I began to cry.\n\n*****\n\nJayden Watson and his mother had moved into the house next door to Wendy Baxter's nearly a year ago. Neither of them knew that their property had once belonged to their next door neighbour's mother and had been inherited and immediately sold by Wendy Baxter through a real estate broker.\n\nAt twenty years of age Jayden was a quiet unassuming lonely young man who worked as a bricklayer but was studying at night to get an MBA.\n\nEver since he had moved in next door to her, Jayden Watson loved watching Wendy Baxter walk to church. To be fair, he loved watching Wendy Baxter do almost anything. But Sundays were special because she dressed for church where she sat with Mrs Delores Edwards and endured the liturgy just so they could go for tea together after the service.\n\nWendy Baxter always wore a tight figure-hugging suit with a skirt that was not immodest but it was moulded to her buttocks and thighs with a hem that flirted with being too short for church but wasn't quite, the kick-pleat in the back opened and closed as she walked. The jacket, cinched at the waist by a single button, the buttons on her blouse which was always white, sometimes silk -- sometimes satin, strained to contain her bosom.\n\nHer brunette hair, straight, shoulder length with highlights, her makeup was heavy and exotic, as was her perfume. And her legs. Those glorious legs: long, toned, unblemished, and sheathed in the sheerest of sheer shiny nylon. Her hosiery glistened in the sun. Her feet were shod in four-inch pumps, always black.\n\nShe was not just pretty she was beautiful, her face was interesting and when she smiled she looked beguiling. Wendy Baxter had a thing for red lipstick; she always wore it. \n\nJayden Watson guessed that Wendy was in her thirties. She looked alluring and she was stylish; always well dressed, only occasionally in jeans, but usually in a skirt or a dress and she always wore nylons and heels. She even wore hotpants with pantyhose with a designer t-shirt when she worked in the garden. Jayden didn't know what she did for a living, she came and went at strange hours and Jayden wasn't about to ask but he was keen to know.\n\nJayden Watson referred to Wendy Baxter as a MILF: Mother I'd Like to Fuck.\n\nThe End\n\n \n"
    ],
    "authorname": "MicheleNylons",
    "tags": [
        "anal",
        "discipline",
        "forced",
        "knickers",
        "nylons",
        "panties",
        "pantyhose",
        "prostitutes",
        "stockings",
        "transvestites"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/walk-a-crooked-milf-ch-06"
}