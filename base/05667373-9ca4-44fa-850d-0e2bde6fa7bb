{
    "title": "Ransom Ch. 08",
    "pages": [
        "Oh, you didn't really think I'd end it like that, did you? Thank you to all of my readers for the wonderful feedback, constructive criticism, and continued support. This is the final chapter for Kailee and Dominic. \n\n-Amanda Sarah xx \n\n*** \n\n\"I'd just like you to know how much we appreciate your generosity, Miss Brooks.\" \n\n\"Please, call me Kailee.\" Kailee lifted her glass of champagne to meet that of the lady in front of her, toasting her with a smile. Whisper Wine Bar hadn't been her first choice for dinner and drinks tonight; it was a new edition to the city and she'd been unsure if it would be appropriate for a business meeting; but she was pleasantly surprised. The bar was larger than most others in the area and the vast majority of diners were surprisingly classy. The lights had dimmed slightly after 8pm and now a pianist was softly playing from the back of the venue. \n\nAs she brought her glass to her lips, her eyes moved to the back corner of the wine bar where a group of suited men had erupted into cheers. Their glasses clinked in celebration and then, when their arms were lowered, Kailee saw him. He was the most underdressed of them all; dressed in dark blue chinos and a white dress shirt, while the others wore expensive suits and ties. They all patted his back encouragingly and toasted a second time. He held a smile to match his colleagues, but it didn't quite reach his eyes. \n\n\u202f \n\n\"I'm really looking forward to seeing the final interior of the building. If it's anything like the other Brooks...\" \n\nKailee nodded while Linda continued to talk, but her eyes remained fixed on Dominic. She'd seen him plastered in magazines, newspapers, and social media over the past 12 months; but seeing him in the flesh was different. In the photographs you couldn't quite catch the level of superiority in the way he held himself; you couldn't see the way he somehow demanded attention from all around him when he spoke; and you couldn't fully experience the intensity of those dark eyes. \n\nA stunning young woman with long black hair and large blue eyes appeared out of nowhere and planted herself on the seat next to Dominic. She was a vision in a short rose gold dress and silver stilettos, with one thin bronzed leg crossed over the other towards Dominic. Kailee watched as the woman placed a hand on his thigh and whispered something into his ear, a playful smile on her lips. She shouldn't have been surprised really; she'd seen plenty of photographs over the past year of Dominic with different girls on his arm, usually gorgeous models or 'it' girls dressed in daring gowns and posing perfectly for the cameras. For someone who had kept out of the limelight for most of his life, Dominic Malikov had become somewhat of a paparazzi king in a short amount of time. Seeing this bombshell of a woman cuddled up close to him hit a nerve Kailee hadn't even realised was there and she tried to shrug it off. \n\n\"Yes, that's correct, Nathan is looking at opening a new Brooks Hotel in Japan,\" Kailee answered Linda's question with a smile. \"It should be completed early next year if all goes as planned.\" \n\nLinda's smile widened, \"How fabulous! And I hear your brother is also soon to be married?\" \n\nKailee nodded with less enthusiasm than she should have exuded; her mind was elsewhere. \"Yes, Nathan and Mira have set a date for mid next year. It's sure to be the event of the season.\" \n\nAs Linda began to gush over the details, she turned her attention back to Dominic and the girl in gold. She noticed he barely registered the woman, even as her hand slid up his leg seductively. His expression remained blank as his colleagues continued their boisterous chatter. And then, suddenly, as if he could sense Kailee watching him, his eyes landed straight on her. \n\nHer heart skipped a beat. She wanted to look away, to pretend she hadn't been watching, but it was as if she was frozen in place by his gaze. Dominic studied her intensely, stripping away her confidence and causing her heartbeat to increase. Her lips parted slightly and even though his mouth remained still, she could have sworn he was smiling at her. The woman beside him planted a soft kiss on his cheek and a sudden anger washed over Kailee. She watched on furiously as the woman's fingertips ran through his hair, her perfectly glossed lips whispering more obscenities into his ear. Dominic's eyes hadn't moved from Kailee and now they narrowed slightly, as if reading her own expression. Then, to her complete shock, he smiled fully with satisfaction. \n\n\u202f \n\nAngrily, she cast her eyes away and moved her focus back to Linda who was still talking about the benefits of their business relationship. \"So you can see why we're so grateful to have this opportunity.\" \n\nKailee nodded. \"Yes,\" she managed a smile, despite her wandering thoughts. \"Well this is something I've wanted to contribute to since my parents' accident. It's the least I can do.\" She downed the remaining liquid in her champagne flute, trying desperately to clear her head. It had been an entire year and yet she still felt jittery in his presence. She dared a sneaky glance towards the back corner of the bar, but his seat was now empty. Her mind wandered to what he and the dark haired beauty would get up to in their own privacy. Would he kiss that woman with the same ferocity as he'd kissed her? Would his hands run over her body the same way they'd ran over hers? The very thought of it made her sick to the stomach. \n\n\u202f \n\n\"Kailee?\" \n\nKailee blinked. \"I'm sorry?\" \n\nLinda motioned towards her empty glass. \"Shall I order us another round of drinks?\" \n\n\"Oh,\" Kailee shook her head. \"No, thank you. Unfortunately I think I'd better head home, it's been an awfully long day.\" \n\n\"Do you need a ride, Miss Brooks?\" His deep voice from behind made her jump. It had been over twelve months and yet that accent still made her stomach swirl. He came to stand beside their table, his demeanour cool and collect as he carefully watched her reaction. She battled internally to match his nonchalance. \n\n\"Oh, Mr Malikov!\" Linda brought a hand to her chest in excitement. \"What an honour!\" \n\nDominic turned to face the overwhelmed woman. \"Lovely to meet you, Miss...?\" \n\n\"Hughes,\" Linda beamed, \"Linda Hughes.\" \n\n\"Pleasure,\" Dominic took her hand and shook it graciously. \"And what are you two ladies celebrating tonight?\" He kept his focus on Linda, which allowed Kailee to continue studying him. \n\nHis hair was longer, she noticed. It was styled almost in a way that would be suited to a magazine advertisement. It gave him more of a friendly look, almost boyish. And yet, his side profile; that chiseled jaw lined with a shadow of facial hair, added that gruff masculinity she remembered so well. \n\n\"Oh! Well, Kailee here has just signed the papers to donate a very generous percentage of her new hotel's profits to our organisation - the National Grief and Bereavement Centre.\" \n\nDominic turned to face her, a genuine smile on his face. \"You've opened your own hotel?\" \n\nKailee nodded, \"Just a small one. It's not as elaborate as The Brooks Hotel Chain, of course.\" \n\n\"Oh, stop being so modest!\" Linda tutted. \"The hotel, Toska, is like something you've never seen before; it's so edgy and new-age! The younger generations are flocking in, and investors are all over it. We're so grateful to have been approached by what's sure to be such a successful business.\" \n\n\u202f \n\nKailee flushed slightly as she felt Dominic's gaze fall upon her. \"Toska?\" His eyes narrowed. \n\nShe quickly waved a hand at the nearest waiter. \"Excuse me, can I please grab the bill?\" \n\nLinda nodded, \"Yes, Russian, I believe. What does it mean again, Kailee?\" \n\n\"It doesn't matter...\" \n\nDominic cut her off, \"It means longing for something...\" his voice lowered, \"...or for someone.\" \n\nKailee stood suddenly. \"Well, Mr Malikov, it's been lovely seeing you, but Linda and I were just finishing up.\" She couldn't meet his eyes and instead kept her attention on Linda. \"Thank you so much for meeting me tonight, I really look forward to working with you.\" \n\n\"And you, Kailee,\" Linda leaned in and gave her a quick hug, \"Don't forget to send me that contract first thing Monday morning.\" She turned to Dominic. \"It was so nice to meet you Mr Malikov.\" \n\nKailee fumbled around in her purse, pulled a few hundred dollar notes out and placed them in the bill holder on the table. She could feel Dominic standing behind her, but she refused to turn and face him. \n\n\"Kailee.\" The way he spoke her name made her legs want to cave beneath her. She ignored him and began walking towards the exit, her stilettos clicking loudly against the wooden floor. \n\nDominic was fast on her heels. \"Kailee!\" he hissed, obviously not wanting to make a scene in such a prestigious venue. \n\n\"Leave me alone, Dominic,\" she spat. \"Just go home to your girlfriend, I'm sure she's wondering where you are.\" She pushed hard against the door, a blast of cold air and moisture icing her skin. Rain was battering the footpath and Kailee flattened her back against the wall of the building to keep out of the wet. \n\nDominic moved to stand in front of her, his large body blocking the rain from hitting her. She finally looked into his eyes and, for the second time that night, her breath caught in her throat. His eyes drank her in from head to toe, dark with a need that matched her own. \"She's not my girlfriend,\" he growled, his nose scrunched up in disgust. \n\n\"Fine. Your date, your... girl of the week,\" Kailee rolled her eyes. \"Whatever you want to call her.\" \n\nHe pressed his palms against the wall on either side of her, caging her body and deafening the sound of the pounding rain behind him. \"You're jealous,\" he said knowingly. \n\nKailee's mouth dropped open. Rage surged through her. \"How dare you!\" She shoved forcefully at his chest with the palms of her hands, but it was like trying to move a brick wall. \n\n\"I saw it in your expression tonight from across the bar. Admit it.\" \n\nShe lifted her chin haughtily. \"That wasn't jealousy. It was sympathy for the poor girl having to endure your company.\" \n\nShe'd aimed to anger him, but instead he smiled with genuine amusement. \"Still as fiery as the day I met you,\" he said, and it almost sounded like pride in his voice. \"Do you want me to leave?\" He asked her honestly this time. His face was just above hers and, even amongst the smell of the rain on the bitumen, she caught a hint of his shampoo. The memory of being in his possession hit her hard. A year had passed and she still didn't know what she wanted. Or perhaps the issue was that she knew and she just hadn't been able to accept it. She'd spent many nights alone in her bed, thinking of his firm body pressed against her in the dark, imagining his hard cock filling her while she roughly fingered herself to completion. It was never enough, though; never the same release he had been able to give her. She tilted her head up and brought her face only centimetres away from him, close enough to feel his warm breath against her cheeks. \n\nHe smiled smugly, reading her thoughts. \"If you want a kiss, Miss Brooks, you're going to have to ask for it.\" \n\nKailee felt her face flush. \"You're infuriating!\" she growled. \n\nThe sly grin didn't leave his face. \"Yes. Now, tell me what you want.\" \n\nKailee pursed her lips and leant back against the wall, crossing her arms stubbornly. \n\n\"Fine.\" Dominic nodded. \"Goodnight, Kailee.\" He turned to leave, and a blast of wet chiselled her shoulder blades. \n\n\"Dominic, wait!\" She roared over the rain. He stopped in his tracks and glanced back, waiting for her to speak. Her eyes fell nervously to her feet. \"I want you to kiss me.\" \n\nDominic took two full steps forward, and used his upper body to pin her forcefully to the wall. She gasped at the impact. \n\n\"Say it again.\" He demanded. \n\nThis time her eyes didn't move from his. \"I want you to kiss me.\" She repeated. \n\nDominic's hand came roughly behind her neck and he kissed her fully, passionately. He tasted exactly how she'd remembered him; rough lips with a touch of scotch on his breath. She leaned into him and let him devour her mouth with his. She moaned desperately into his mouth, and began to feel a familiar ache between her legs. \n\n\"I want you...\" she whispered urgently. \n\nDominic nodded. \"Good.\" He grabbed a firm hold of her hand and dragged her out onto the footpath. \n\n\"Ahh!!\" She shrieked as the rain pelted into her, but she had no choice other than to follow him as Dominic led her firmly towards a black limousine parked near the curb. He opened a door for her and she scrambled inside, her hair and clothes dripping all over the leather seats. Dominic tumbled in after her. He said a few quick words to the driver before closing the shutter and settling in beside her. The car began to move and Dominic brushed the wet hair back from his eyes. His white shirt was soaking and clung to his torso, accentuating every muscle in his arms and abdomen. She looked down at herself and realised her own white dress was now clinging to every curve of her body. Meeting Dominic's eyes, she could see he was already aware of the fact, his dark gaze drinking her in. \n\n\"Come here,\" he growled, motioning to his lap. \n\nKailee hesitated only a moment, and then slowly slid towards him. Every fibre of her body craved his touch. She slowly sat herself into his lap with her back to him, and closed her eyes. Nervous anticipation washed over her, as she wondered what he would do to her. \n\n\"Relax,\" he breathed into her ear. A large arm came around her chest, drawing her to lean back against him. She exhaled and bid herself to relax, letting her head rest against his shoulder. His hand delicately traced the skin against her neck and chest bone, and then trailed down towards her breasts, brushing a nipple through the thin fabric. Kailee moaned lightly in response. His hand slipped beneath the fabric and began stroking her bare breasts. Without intent, Kailee's legs opened slightly. Dominic groaned approvingly. His knee came between her legs, and nudged them further open while he continued fondling her breasts. His thumb brushed over first one nipple, then the other, and Kailee writhed, feeling each peak harden at his touch. He brought his other hand to her bare thigh and slowly slid the hem of her dress upward, exposing her dampened underwear. \n\n\"Oh, god...\" Kailee whimpered. Her fingernails dug desperately into Dominic's thighs. He collected her right hand in his. \n\n\"Show me how wet you are.\" He guided her hand down between her open legs. \n\nKailee kept her eyes closed and slowly pushed the crotch of her underwear to one side. She already knew she was dripping, and as she exposed herself to him, she heard him groan at the sight of her glistening slit. She slowly began to circle her index finger around her clitoris, her breathing laboured, while Dominic continued teasing her breasts. \"Show me,\" he murmured darkly into her ear. She slipped two eager fingers inside herself, and pushed them in as far as they would go. She left them there a moment, her folds hot and slick around the digits, and then gradually slid them back out. She held her fingers up to Dominic, allowing him to examine her dampness. \n\n\"Good girl,\" he praised. Then, to her surprise, he grabbed a hold of her wrist and closed his mouth over her two fingers. She looked up at him, eyes wide, and watched as he sucked her fingertips clean. He smiled wickedly, and her cheeks reddened. He pulled the straps of her dress back over her shoulders and lifted her from his lap. \"We're here.\" \n\n\"Oh!\" Kailee hadn't even noticed that the vehicle had stopped moving. She quickly pulled her underwear back into place and fixed her dress. \n\nThe door was opened for them and Kailee shivered as a blast of wind travelled up her bare legs and chilled the dampness between her thighs. She accepted Dominic's hand as he guided her out of the vehicle and under the protection of the porch. Rather than pulling out a set of keys, Dominic instead lifted a latch next to the front door and keyed in an eight-digit number. A long beep sounded and the door opened with a click. She followed him inside and her mouth opened slightly in amazement. She was born into riches, so luxury was nothing new to her, but this was something else altogether. The d\u00e9cor was what some would call old fashioned, but what Kailee could only describe as classic. Large glass chandeliers hung from the ceiling, illuminating the double carpeted stairway leading the way to the second floor and, she suspected, the bedrooms. \n\n\"Wow...\" she breathed, unintentionally doing a full turn to take in her entire surroundings. \n\n\"Come here,\" Dominic ordered. His arms came around her waist and, pulling her body hard against him, his lips crashed into hers. His mouth was soft and violent all at once, teasing her mouth open with his tongue and eliciting desperate sighs out of her. God, she'd forgotten how good his kisses felt. She bit lightly against his bottom lip and he groaned, pushing her up against the front door and deepening the kiss. \n\nKailee's fingers ran through his hair, her nails gently scratching against his scalp. His strong arms moved to her ass and he collected her into his arms as if she weighed nothing. \"You don't know how long I've wanted this,\" he breathed huskily into her ear. She sighed softly in agreement and wrapped her long legs around his waist. He turned and began ascending the staircase, holding her against him with one arm, and using the other to explore beneath her dress. \n\nKailee sucked in a sharp breath when his hand brushed against her damp core. But before she could experience more, her feet were back on the ground and she found herself in a spacious bedroom with a four poster bed layered with black and purple silk sheets. The door clicked shut and Dominic ran his eyes over her hungrily. He took a step towards her, but Kailee held a hand up. \n\n\"Wait,\" she said firmly. \"I have terms.\" \n\n*** \n\nTerms. Dominic raised an eyebrow questioningly. \"I'm sorry?\" \n\nHe watched as Kailee bit her bottom lip nervously. \"If we're going to do this, I have terms.\" \n\nShe stood there, long wet strands of hair stuck to the sides of her face, her now translucent white dress plastered to the curves of her body. Her cheeks were flushed, and her green eyes bright. He wanted all of her. He delicately pushed the straps of her dress over her shoulders so the material fell to her waist, exposing her full breasts. He ran his fingertips across the soft skin of her chest bone and felt her shiver beneath his touch. \"And what exactly do these terms consist of?\" \n\nHer eyes flickered to her feet and she let out a slow breath. \"I want you to see a counsellor.\" \n\nDominic's hands halted. He almost thought he'd heard her incorrectly. He glared at her, hard. \"I beg your pardon?\" \n\nShe hesitated a moment, then met his eyes with confidence. \"If we're going to be together, I need you to have more control over your emotions.\" \n\nHe was in control. Right now he was controlling the anger fast building up in his chest. He took a tight hold of Kailee's hand and spoke softly. \"I won't hurt you.\" \n\nShe shook her head stubbornly. \"You say that, but I see the anger in you. You're like a ticking time bomb.\" \n\nDominic frowned. \"I've seen therapists. They know fuck all.\" \n\n\"My decision is final.\" She pulled her hand from his and began to pull the straps of her dress back onto her shoulders. He grabbed a sharp hold of her wrist, stopping her in the process. She thought she had him in the palm of her hand, the devil. \n\n\"I'll do it,\" he said begrudgingly, \"but only if you come with me.\" \n\nNow it was Kailee's turn to frown. He held back a smile; this obviously wasn't part of her plan. \"Dominic...\" she began to refuse, but he cut her off. ",
        "\"If you're going to be with me, you need to understand where my anger is coming from. And if you can't handle my past then maybe you're not cut out to be with me either.\" \n\nKailee scowled at him. She lifted her chin haughtily and snatched her wrist free from his hold. \"I can handle it... \" \n\n\"Good, then we're agreed.\" He gave her a light shove, not forceful, but just enough so that she fell backwards onto the bed. She propped herself up onto her elbows and he towered above her, drinking in the sight of her. It took a good deal of restraint for him not to just lift her skirt and fuck her senseless right then. He couldn't wait to sink himself into her, to feel once again the warmth of her tight cunt; to see her strained expression as he pounded into her. \"Any other terms on your little list, Miss Brooks?\" \n\nKailee nodded. \"I want you to make things right with my brother.\" \n\nDominic's jaw tightened. This girl would be the death of him. \"Jakob gave him his money back.\" Much to his disapproval, he thought. His brother was too soft. He took after their father; something Dominic secretly admired about Jake. \n\nKailee scoffed, \"It's going to take more than the money for Nathan to forgive you.\" \n\n\"Forgive me?!\" He roared, glowering down at her. \"I haven't yet received an apology from your precious brother, Kailee. You'll do well to remember that he wronged me first!\" \n\nShe rolled her eyes. \"Oh please! He was twenty-one, he'd been thrown into the company with barely any training and the board told him to make a difficult decision. You would have done the same.\" \n\nDominic leaned in to her then, his face hot with rage. \"I would never have done that to a friend.\" \n\nTo his surprise, she didn't so much as flinch. \"All the same, if you want to be with me, you'll do what you can to make things right with him.\" \n\nDominic took a few deep breaths, considering her request. He growled angrily. \"Fine! I'll do what I can. Is there anything else?\" \n\nKailee shook her head. \"No.\" \n\n\"Good.\" He smoothed his hair back. \"Then we can move on to my terms.\" \n\nShe half laughed. \"Your terms? What makes you think you have the right to request terms?\" \n\nDominic moved quickly so that his body covered hers. The breath was taken out of her as he pressed her roughly into the mattress. His hands caught her wrists and he brought them above her head, splaying her and exposing her full upper body to his eager eyes. \n\n\"I may have waited a full year for you, Kailee, but don't pretend as though I haven't been on your mind too. If I walk away now, you'll be just as gutted as I am. Or did you name your little hotel after another Russian that you're longing for?\" \n\nHer face turned a lovely shade of burgundy. \"Fine. What are your terms?\" \n\nHe moved his face closer to hers and spoke low. \"I enjoy being rough with you.\" He could feel her heart beating fast against his own chest. \"And I know you enjoy it too.\" Kailee opened her mouth to protest, but he stopped her abruptly. \"No, don't deny it. I will never hurt you, I promise you that. But if you honestly feel as though I'm taking something too far, you will use a safe word. Do you understand me?\" \n\nKailee closed her eyes and he watched as she processed his proposal. For twelve long months he'd thought about this moment. He knew she craved the loss of control he offered her, but that she also wanted her independence. It had taken him a long time to realise if he was going to make her happy, he'd have to find a way to give her both. \n\nKailee looked up at him, her green eyes filled with apprehension. \"Toska,\" she whispered. \"Toska will be my safe word.\" \n\nDominic nodded. \"Good.\" \n\n*** \n\nHis hair was dripping onto her chest, leaving tiny droplets across her bronzed skin. Her eyes lustfully wandered over his body, she longed to undress him and run her fingertips across his bare chest. Her hands fidgeted beneath his, but he kept them firmly pinned above her. \n\n\"Let me touch you,\" she demanded with frustration. \n\n\"No.\" He said simply. And with that, he reached behind the headrest and collected a thick braid of black rope. Kailee frowned and squirmed to try to see where the rope was coming from. \"Keep still.\" He warned her and he looped the rope around each of her wrists, his fingers working quickly until the coils held her arms tightly in place. Kailee struggled slightly against the bindings, but they only tightened more against her skin. \n\n\"Dominic...\" she whispered cautiously. \n\n\"Remember what I told you.\" He said softly, and then began popping open the buttons of his shirt. He dropped the wet fabric to the floor and she felt his eyes wander over the length of her. His hands slid slowly down the sides of her body, her skin soft and luscious beneath his fingertips. He collected her dress and dragged it down past her ankles and onto the floor. Her eyes fluttered closed in anticipation. \n\n\"No.\" Dominic growled and she opened them again, confused. \"I want you to watch.\" \n\nShe frowned. \"What about what I want?\" \n\nHis smirked and motioned to the thick rope binding her hands. \"You think your current predicament allows you to make demands?\" His hands continued, collected the edges of her panties and then slid them under her buttocks and down her long legs until they too fell to the floor with her crumpled dress. \n\nAware of her full nudity now, she began to fold her legs to one side self-consciously. \n\nCRACK! Dominic's palm crashed against the back of one of her thighs and she yelped loudly at the sting that followed. \n\n\"You asshole!\" She roared angrily. \n\n\"I told you to keep still.\" He brought his hands under her knees and lifted her legs into the air so her sex was crudely exposed to him. She felt herself redden and ached to close her eyes, but feared the consequences if she did. His tongue traced the welt on her thigh and she felt her insides coil at the soft sensation against the pain. He roughly pushed her legs back, further exposing her glistening slit, and then he brought his mouth down to devour her. \n\n\"Ah!\" Kailee cried out as his tongue traced her from her back entrance right to her clitoris. He lapped eagerly at her folds, licking and sucking the growing moisture between her legs. She looked down the length of her body and met his dark eyes as he ate her greedily. Abashed at the sight of his head between her raised legs, she wanted to look away, but his gaze held her mesmerised. He ate her noisily, and she found her moans grew louder, mixing with the sound of his mouth meeting her moist core. He slowly slipped two fingers inside her, carefully watching her reaction. Kailee arched her back in response, her mouth widening into a soft cry. He slowly drew the digits out from her, and then pushed them deeper back in, fucking her sensually with his fingers while his tongue continued to circle her clit. She could hear the slosh of her wet entrance every time his fingers entered her. Moisture was now trickling down towards her buttocks and Dominic's free hand eagerly collected it, delving down to her backside and slowly circling her puckered hole. She jumped slightly at the contact, not prepared for him to touch her there. \n\nSLAP! He landed another blow on her other thigh, making her cry out more in anger than in pain. \"What did I tell you about keeping still?\" She said nothing, but simply growled back at him in response. \"Don't move.\" He ordered once again. \n\nHis fingers slipped out from inside of her and she had to hold back a disappointed groan at the sudden emptiness. He moved to grab something from under the bed, but she couldn't see what he was doing without sitting up. \"What are you doing?\" She asked hesitantly. \n\nHe answered her question by bringing his fingertips back to her ass, but this time his fingers were cold and slippery with lubricant. She sucked in a sharp breath, suddenly apprehensive. \n\n\"Dominic...\" she started. \n\nShe heard a soft humming the end of the bed, and then a sudden vibration met her back entrance. \n\n\"Dominic!\" She lowered her legs quickly onto the bed, blocking him from further intrusion. His palm came down hard against the side of her upper leg. \"Stop!\" She hissed angrily. \"Not there, please!\" \n\n\"Lift your legs, Kailee.\" He demanded. She shook her head defiantly and he lowered his voice. \"Don't make me ask again.\" \n\n\"I've never been touched there before...\" she said meekly. \"It's too tight... please...\" she begged. \n\n\"I'm not going to fuck your ass, Kailee. At least not tonight. This is for your pleasure only.\" \n\n\"M-my pleasure?\" She stammered. \n\n\"Yes. Now lift your legs before I decide to restrain them as well.\" \n\nKailee begrudgingly raised her legs back, exposing herself to him again. The humming started up again and she shivered as the device was once again pressed into her. \n\n\"Relax,\" Dominic whispered. Kailee closed her eyes and urged herself to relax. This time she wasn't punished for averting her eyes. He moved the vibrator in slow circles against her, gradually adding small amounts of pressure so it was slowly inserted inside her. She couldn't help but tense up at the unfamiliar intrusion, involuntarily rejecting it. Dominic's mouth brushed against one of the welts on her thigh, distracting her with a trail of gentle kisses up her leg. His mouth found her core again and she sighed as he delicately sucked and teased the sensitive nub. \n\n\"Mmmm...\" she breathed deliciously. \n\nHe took advantage of her moment at ease and slid the vibrator further inside her. She felt stretched and slightly uncomfortable, but there was also a strange pleasurable sensation she had never felt before. She wiggled slightly, adjusting to the feeling of it inside her. \n\nDominic suddenly stood and Kailee heard the zipper of his pants. The vibrator continued to hum against her virgin hole and the longer it was there, the more Kailee began to relax and enjoy the sensation. \n\n\"Open your eyes,\" Dominic instructed. Kailee obeyed and found him in a kneeling position above her, fully undressed, his erection pressing angrily against her opening. He was all muscle and she longed to press her palms against his torso, or even run her tongue across his chest, but she had no choice in the matter. He grabbed a tight hold of her ankles and placed her legs atop his shoulders. \n\n\"I want you to watch as you take all of me in.\" His voice was rough with desire. \n\nShe looked down between her legs and watched as he slowly pressed himself against her entrance. The tip of him dipped inside her, brushing against her clitoris, and she let out a low moan. The head of him slid out slick with her moisture, and then it disappeared again. This time he pushed himself in halfway, allowing her tight channel to stretch around him. She sucked in a tense breath, adjusting to the girth of him. He pulled out agonisingly slow, his cock dripping with her dewy moisture. Kailee looked up at him, wide-eyed. His expression was strained, desperate. He gripped her ass cheeks and then pounded himself fully into her. Kailee cried out loudly. The vibrator was purring furiously at her ass. The sensation of being filled in two places overwhelmed her completely. Her eyes moved back between her legs where Dominic was fucking her relentlessly. His large cock bobbed in and out of her, the sound of her wet slit being stuffed clashing against the hum of the vibrator and her high pitched cries. She gripped the thick rope above her head and moaned continually. Dominic lifted her ass from the bed and his cock landed deeper within her. \n\n\"Oh!\" Kailee squeezed her eyes shut. \n\nDominic landed a hard blow to her ass cheek and her eyes flew back open as the pain hit her. His expression was dark, his eyes warning her to keep hers open. \n\nShe growled, but there was no true anger inside her. The pleasure far outweighed the pain. She lifted her hips further from the bed, loving the sensation of being so gloriously filled. \n\nDominic increased his pace, hitting her g-spot with full force now. He rode her roughly and persistently, his balls bouncing at her buttocks as he fucked her deep and hard. Her throat was hoarse from screaming. \n\n\"Dominic...\" she cried urgently. \n\n\"Ask me.\" He said gruffly, between thrusts. \n\n\"Please...\" \n\n\"Please, what?\" \n\n\"Please, Dominic... I need to come!\" She cried. \n\nDominic's thumb landed on her hot core and he stroked her sensually as he continued to forcefully fuck her. \n\n\"Oh, god!\" Kailee's head fell back against the pillow. Her legs turned to jelly as her orgasm hit. She felt herself contracting around his cock. He must have felt it too, because with only a few more thrusts, he let out a long groan and she felt his hot seed spilling inside her. His body convulsed while he emptied himself, and she could feel him pulsating against her walls. He fell heavily onto her, his warm body melding into hers. They both lay there, as one, until he softened inside her, and their breathing gradually slowed. \n\nHe carefully pulled out of her, and then reached behind her to remove the vibrator that was still buzzing joyfully inside her. She sighed as it was pulled from her, her puckered hole feeling stretched and sensitive. \n\n\"Mmmm...\" she purred, in a complete daze. Dominic reached to untie her arms and then fell onto the bed beside her, wrapping a possessive arm around her small waist. \n\n\"You are a goddess,\" he murmured, brushing her hair away from her face. \n\n\"And you're the devil,\" Kailee smiled. \"But you're my devil now.\" \n\nDominic pinched at one of her nipples, making her gasp. \"Is it too late to add another term to my list?\" \n\nHer eyes narrowed. \"That all depends on what it is, Mr Malikov.\" \n\n\"Well, you see, Miss Brooks, a particular young lady happened to steal my custom-made, MV Agusta motorcycle last year,\" he gave her an accusatory glare, \"and I'd very much like it back.\" \n\n\"Hmm...\" Kailee pondered. \"I tell you what. You can spend the night convincing me to give it back to you and I'll make my decision in the morning.\" She smiled smugly at him. \n\nDominic rolled atop her and she felt his semi-hard erection press threateningly against her stomach. Her mouth dropped open in surprise and he smiled sardonically. \"Oh, I'm confident that will work out in my favour.\" \n\n***"
    ],
    "authorname": "AmandaSarah",
    "tags": [
        "reluctance",
        "power play",
        "heiress",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/ransom-ch-08"
}