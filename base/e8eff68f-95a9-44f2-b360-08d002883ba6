{
    "title": "Escort Neighbour Pt. 03",
    "pages": [
        "Welcome to Part 3 of Escort Neighbour. I have to admit to genuinely wanting to see just how far Bill and Jennifer will take their relationship. I'm not plotting this story, I'm just rolling with it. Hope you enjoy.\n\nWarning: There is a LOT of anal sex in this. If you don't like that, please don't read!\n\nNancy dropped me off at the airport Thursday at noon. Flights to Saint Thomas left early in the morning from Dulles and I would have to overnight. Nancy drove up to the passenger drop-off area, released the trunk, and kissed me on the cheek. I got out, went to the back of the vehicle and pulled out my carry-on bag. I said goodbye to Nancy through the back hatch and pushed the button to close the hatch. As soon as it clicked shut, she drove off. I waved at her.\n\nI turned to the automatic sliding doors leading into the airport and took a deep breath. This was exciting and nerve-wracking. I was about to fly to Saint Thomas in the US Virgin Islands for a sexual weekend with my next-door neighbour and her female client.\n\nThe last couple of days had been a blur. Jennifer had taken care of everything. I provided her with my passport details and she took care of everything else. She said to head to the airline check-in, use the business class line, and pick up my boarding pass. She would meet me in the lounge. She insisted I wear a sports jacket, a white dress shirt with no tie, and nice loafers. And to only bring a carry-on.\n\nI entered the airport, dragging my wheeled carry-on behind me and found the airline queues. I entered the business class corral and was met by a stewardess. She smiled at me, asked if I was business class, and when I said yes, she escorted me to the check-in attendant.\n\nI provided my passport and soon I had a boarding pass for Dulles in Washington, DC. The rest of my check-in to Saint Thomas would be in the morning. The check-in lady told me where the business class lounge was and wished me a pleasant journey.\n\nSecurity was a snap and in minutes I was walking past gates toward the airline lounge. I followed the signs and entered an elevator that took me up. The elevator opened and I walked into a luxurious lounge. Thick comfortable chairs were spread out all over. I noticed a self-serve bar, a small buffet line with steaming food and soups, TV screens filled with sports and arrival and departure times. A large circular desk met me and I handed over my boarding pass to the woman behind the counter. She checked me in and said my wife was waiting for me in a private conference room.\n\nI blinked at that, and then quickly realised it must be Jennifer. She was calling herself my wife now. I smiled and headed toward the conference room in the back. A small corridor separated it from the main lounge and it looked private. I knocked at the door and in a moment the door swung open revealing Jennifer, dressed exquisitely in the finest business clothes for women.\n\nShe grabbed my lapels and pulled me into the room, kicked the door shut and kissed me hard. I let go of my carry-on and embraced her. We kissed passionately, lips mauling each other, tongues licking tongues and probing deep in our mouths.\n\nI felt Jennifer fumble at my belt and I started pulling her skirt up over her ass. I pushed her backwards until her ass hit the table. I had her skirt up and reached between her legs and found her panty-less and soaking wet. She pulled my hard cock out and in one motion I buried it to the hilt in her pussy.\n\nShe moaned into my mouth. I lifted her slightly by the ass and deposited her on the edge of the table. She lifted her legs and wrapped them around my lower back and pulled me in toward her. We fucked on the table with passion. My cock loved her warmth and wetness; now a familiar welcome home. We fucked with practice and passion. It never got old. It always felt new and fresh.\n\nWe kissed the entire time, grunting and moaning into our mouths. Her hands pulled my head to hers. Mine cupped her ass and helped me drive deep into her pussy. We fucked for a good long time. Every second was memorable and delicious.\n\n\"I'm gonna cum,\" she said.\n\n\"Good, me too.\"\n\n\"In my mouth. I don't want to be dripping cum onto the business class seats on the plane.\"\n\n\"Sensible.\"\n\n\"Uh-huh, mostly I need to taste you again.\"\n\n\"Come then, hurry.\"\n\nAnd she did, a pleasant orgasm that curled her toes and had her holding me tight until it passed. It took everything I had not to cum with her. Her pussy clenched me hard and added feeling to my cock that almost took me over the edge. When her breathing resumed, her eyes opened.\n\n\"Thank you, Bill.\"\n\nInstead of responding I yanked my cock free, stepped back and gripped my cock hard. Jennifer pushed off the table and fell to her knees in front of me and sucked my cock into her mouth. I let go of my cock and ejaculated into her mouth.\n\nJennifer swallowed and made happy noises. I came down from my bliss and watched her suck and lick my cock clean. She hadn't spilled a drop. Finished she stood and kissed me and smiled against my grimace. She knew I hated tasting my own cum and thrilled herself forcing it on me every chance she had.\n\nShe leaned back her head and smiled at me. \"Hi, handsome.\"\n\n\"Hi beautiful.\"\n\n\"You look really sharp, Bill. You'll turn heads looking like that.\"\n\nI snorted in disbelief.\n\nShe smacked my shoulder where her hands were placed. \"Trust me, dummy. A woman knows. You're very handsome, Bill. You have a confidence about you, too. It attracts women. I'll point it out to you.\"\n\nI looked at her. Her makeup was flawless. Her hair perfect and shining red. I loved the freckles on her face and on impulse I kissed her. I watched her eyes widen a little. When I finished she looked questioningly at me.\n\n\"What was that? Not that I mind.\"\n\n\"You're so beautiful, Jennifer. I'm so lucky to have you in my life.\"\n\nHer eyes softened. \"You too, Bill. I'm glad we met.\"\n\n\"Best friends?\"\n\nShe kissed me. \"Always.\"\n\nWe kissed for a little while until it started to get heated again. It was Jennifer that said we needed to stop and laughed when I pointed out my cock didn't agree. She said she needed to clean herself up and dry herself off. I finally agreed and pulled up my pants and tidied myself up.\n\nJennifer pulled down her skirt and then stepped up to me and placed a hand on my chest and kissed me on the lips. \"So handsome.\"\n\nShe smacked my ass and told me to head to the lounge and get her a drink. She asked for an Irish whiskey on the rocks with water, turned me toward the door, and then pushed me out of the room. I only just managed to grab my carry-on.\n\nI wheeled it past the woman at the entrance counter. She was really cute and dressed in the airline uniform with a scarf around the neck. She looked at me, her eyes opened wide, and then beckoned me over to the side entrance. When I stepped into the opening, she stood up and came over to me looking around to make sure she wasn't noticed. She pulled out a Kleenex and wiped my mouth with it.\n\n\"A little lipstick, sir.\"\n\nI blushed hard and she chuckled. She took a small sniff and then arched her eyebrows at me.\n\n\"How was your conference with your wife, sir?\"\n\n\"Uh, uh, fine?\"\n\n\"Mm-hmm,\" she murmured. \"There, all done. Have a lovely day, sir.\"\n\n\"Uh, thanks?\"\n\nShe smiled at me and returned to her station. I wheeled my carry-on into the main lounge and found a quiet place by the window that looked out onto the runways. I dropped off my bag and then went to the bar and fixed two whiskeys and returned to my seat. As soon as I sat down, Jennifer walked into the room.\n\nShe stole my breath away. Her poise, the way she walked, the way she held her head drew looks. She was a powerful woman. She exuded confidence. Man looked at her with lust, and women looked at her with envy. I could see the airline lady at the front counter tracking her and then saw her look toward me. An expression crossed her face that I couldn't fathom.\n\nI rose when Jennifer came close and handed her a whiskey. We clinked glasses, sipped our drinks and I waited until she seated herself before sitting down.\n\nI smiled at her. \"You looked stunning crossing the room. You owned the place.\"\n\nJennifer laughed lightly. \"Years of practice. I actually took classes on how to do that.\"\n\n\"Looks natural to me. You are a thing of beauty, my dear.\"\n\n\"Thank you, darling. I have to admit hanging off your arm is going to boost my worth. You look all sorts of dashing. You really dress up well. Betty is gonna love you.\"\n\nBetty was her client in Saint Thomas. She had paid for our travel to Saint Thomas. All expenses were covered. This was the life Jennifer was used to, but not me. I felt like I was playing a role. \"Tell me about her, this Betty.\"\n\nJennifer pulled out her phone and spent a minute scrolling through it. I had never wanted a smart phone. I had no use for one and it annoyed Jennifer. She said she wanted to text me all the time. She handed her phone over to me. The screen was filled with a picture of a couple sitting close to one another at a restaurant table smiling at the camera. The man looked about my age, but with more hair and a little more grey. He was deeply tanned and his teeth looked perfect.\n\nThe woman next to him was stunning. She looked like a porn star I had seen, but one who had aged really well. Plastic surgery had to be the answer to her gorgeous face. Only the slightest wrinkle around her eyes gave her away. She was blond and I could see the tops of what appeared to be massive breasts at the bottom of the picture. She wore fake eyelashes, bright red lipstick, and her smile was wide and gorgeous. She was a real looker. \"Wow,\" I said and started to hand the phone back to her.\n\nJennifer shook her head and told me to swipe the image.\n\nI did and the picture changed. I could now see everything nature had given Betty. She was lounged back completely naked on a couch, sitting back with her legs spread. Her breasts were massive but clearly man-made. They were gorgeous though. Her areolas were massive with thick, protruding nipples in the middle like little towers. Her pussy was completely shaven. Not a hair or blemish could be seen. Her clit was the largest I had ever seen. Her inner labia was small and I could see right into her gaping vagina. I noticed a C-section scar on her abdomen. She was gorgeous, clearly an older woman, but well-preserved.\n\nI swiped again and was treated with an image of Jennifer being eaten by Betty. It was fucking hot. I could see the pleasure in Jennifer's face and knew it was real. I swiped again and again. The images changed position of the two of them. I guessed Betty's husband was taking the pictures. I froze when the next picture was Jennifer with a strap-on sodomizing Betty. I swiped again and this time it was a real cock sodomising Betty. I could see the strap-on buried in her pussy.\n\nWith my hand shaking I handed the phone back to Jennifer. I grabbed my drink and took a big gulp.\n\n\"What do you think?\" she laughed.\n\n\"Unreal. Fucking hot.\"\n\nShe glanced at her phone. \"You stopped when Betty's husband entered the pictures.\"\n\n\"I stopped when my heart couldn't take anymore.\"\n\nShe smirked at me. \"This is gonna be so much fun, Bill. I've never travelled with anyone before. Not like this. With a client sometimes. But that was all business. This is fun.\"\n\nI calmed down and squirmed a little when my cock, hard again, strained against my pants. Jennifer watched my crotch and sipped her drink. \"So far, this has been the best. Betty is really good looking. How'd you meet?\"\n\nJennifer looked out the window and watched a plane roar down the runway and lift off. \"They found me.\"\n\n\"Through your website?\"\n\nShe looked over at me and smiled. \"No, they found me in the Ritz-Carlton in New York, half-dressed, drugged, and clearly out of my mind.\"\n\n\"What?\"\n\n* * *\n\nJennifer was messed up. She knew it. She had gotten away, though. From what? She couldn't remember. She sat at the bottom of the elevator car in the corner. She was missing her shoes. Her stocking feet were covered in what looked like caviar. Her skirt was missing, too. Oh no, wait, there it is, torn off and lying beside me.\n\nThe elevator dinged and she pushed herself off the wall to stand up. Her balance was messed up. What happened? Where am I?\n\nThe doors opened and noise filled the elevator. The sound of conversation flooded her ears and she held her hands up to her ears to block it. She staggered out of the elevator and right into a couple waiting to get in. They caught her as she slumped forward. She felt herself being sick and then all went black.\n\nShe woke in a bed. It was dark. Her head pounded horribly and she moaned. She heard a rustling near her and the face of a woman swam in front of her eyes.\n\n\"Shh, it's okay, you're safe,\" said the woman.\n\n\"Safe?\" asked Jennifer. She tried to remember where she was. New York, she remembered. The Ritz.\n\n\"Yes, my dear. You were drugged with a date rape drug. I don't recall the name.\"\n\n\"Date rape drug?\"\n\n\"Yes, it seems you recognised the symptoms just in time and escaped.\"\n\n\"Escaped?\"\n\n\"Yes, your companion. Room 1516. Security has handed him over to the police. Your belongings are here with my husband and I. You're in our room. My husband is with the police giving a statement. The hotel doctor drew blood. I hope you don't mind. We needed evidence.\"\n\nIn a flash, Jennifer remembered everything of the day before. She had met her client here in New York. Went to his room. They were to spend the weekend together in New York. He was new but recommended by a client she trusted. She went into his room. Met him. He gave her a drink, they ate caviar. Then she remembered feeling strange. She tried to leave. He fought her. She... Oh my god, I stabbed him!\n\n\"Oh no!\" said Jennifer and tried to sit up.\n\n\"Shh. It's okay. Your companion was seen by the doctor. It was a superficial wound. Minor. He's pressing charges against you. But don't worry about that. It's a clear case of attempted rape. He's fucked, if you don't mind my expression. Lovely, really. We even have footage of him coming out the hotel room after you. He says all sorts of interesting things.\"\n\nJennifer sank back and tried to relax. \"How?\"\n\n\"I'm Betty, by the way. My husband is Roger. The fellow you were with is an adversary of ours. Business adversary. He's going to jail, my lawyers - your lawyers now - will make sure of that. Suddenly my business ventures are looking up.\"\n\n\"I don't understand.\"\n\n\"This incident, and having that bastard thrown in jail, will probably net me close to two hundred million dollars, young lady. So you relax right there. The doctor told me to give you something when you woke. I'll go fix it up. You're my guest and I'll take good care of you, my dear. Lie back, sleep if you can. Okay?\"\n\nJennifer sank into the pillow and sighed.\n\n\"I know who you are, Rachel.\"\n\nJennifer said nothing.\n\n\"Roger and I looked at your website. Then we made a few calls. We know quite a few of your clients. I'm only saying this because I want you to know you're safe here. We respect what you do. We have your belongings here. We had to go through them to see who you were. So, Jennifer is your real name? From Canada?\"\n\nJennifer hesitated then nodded.\n\n\"It's a pleasure to meet you, Jennifer. I used to be a stripper before I met Roger. Get some rest. I'll get your medicine.\"\n\nJennifer looked at me and waited for me to say something. I watched another plane take off outside the window. I didn't know just how dangerous her life could be.\n\n\"You seem to have all sorts of trouble,\" I finally said into the silence.\n\n\"It's how I met Betty. She did porn and stripped all over the US before she met Roger. They fell in love, got married, and had a kid. They're swingers. They crave sex all the time.\"\n\n\"What happened next?\"\n\n\"They took care of me. Got me back on my feet. I gave testimony to the lawyers. I never saw the police or talked to anyone other than Betty and Roger's lawyers. Next thing I knew, it was all over. It was settled out of court. I signed some paperwork, was handed a check for five hundred thousand dollars, signed a non-disclosure agreement and went home. It took four days to settle.\n\n\"The check was the first of four. I was given two point five million dollars to keep my mouth shut and drop the charges. Betty and Roger were able to progress some deal they were after and after my client was forced to back off, they landed it and secured some prime real-estate in Manhattan.\"\n\n\"Who was your client?\"\n\n\"I'm not allowed to say. Everyone knows him. He has a history of abusing women and paying them off.\"\n\nI blinked at her. \"Are you serious? Him?\"\n\nShe nodded.\n\n\"The good that came out of it was I met Betty and Roger. They started hiring me and they insisted they pay for my services. I meet with them about twice a year. Usually somewhere warm and sandy. They know me better than anyone else. I love them and they love me. They take care of me. Watch out for me. I send them new client information now. The details I mean. They run checks and tell me yay or nay. They say they're my pimps!\" Jennifer chuckled. \"They're so good to me.\"\n\n\"And what do they get in return?\"\n\nJennifer raised an eyebrow at me. \"Are you kidding me? I fuck their asses off, Bill. Happily, I might add. Sex with them is amazing. I swear I lived for it until I met you. You're a lot like them, Bill. Kind, caring, gentle, and so sure of themselves. I'm attracted to that. Strong, good people.\"\n\n\"Okay. I'm glad to hear you have good friends like that.\"\n\n\"They are good friends, and I love them, Bill. But I only have one best friend. And that's you.\"\n\nI stared at her. I didn't understand why she had chosen me. \"Why me?\"\n\nJennifer looked away and didn't answer.\n\nI sighed and rose and got us another round of whiskey. I doubled the amount. Jennifer took hers without a word and sipped.\n\nWe sat quietly for a few minutes before Jennifer stirred.\n\n\"You're my best friend because you are. Bill. Don't ask me why. I have never talked about my life with anyone. Not even Betty and Roger. Not like with you. I trust you and I don't know why. I just do. So don't ask why, okay?\"\n\nI nodded. \"You are mine, you know. I haven't had a best friend since high school. Then I was married and imagined my wife was my best friend. You hear that all the time: my wife is my best friend, blah blah blah. I don't believe that. My wife is my wife. But you? You're my best friend, Jennifer. My only friend. I'm sorry I asked why. I shouldn't have. I'm just not used to this. I'm gonna say lots of stupid things.\"\n\nJennifer nodded and I could see her eyes were a little wet. \"You are pretty stupid.\"\n\nI laughed and in a moment she joined me. She smiled at me and then wiped her eyes careful not to smear her makeup. She raised her glass and toasted us. \"To us, best friends forever.\"\n\n\"With benefits,\" I added.\n\n\"Oh yes, so many benefits!\"\n\n* * *\n\nThe journey to Saint Thomas was amazing. We boarded our plane to Dulles and I enjoyed first class for the first time. Jennifer and I were treated like royalty. At Dulles we took a limo to a nearby airport hotel and retired to our room. It was a simple room, with a king-sized bed, but had a Jacuzzi whirlpool bathtub.\n\nWe made it our home for the night. We drank and fucked in that tub until our skin was so wrinkled we escaped just to dry ourselves out. We climbed in bed and then realised we were going to sleep together -- actually sleep. Jennifer couldn't wait and snuggled up naked against me and draped a leg and arm over me and laid her head on my chest.\n\nI smiled when she fell asleep in seconds. It took me longer. I was enjoying the feel of her in my arms.\n\nI woke to a blowjob. Then we fucked, showered, made out again, dressed, and headed to the airport with a croissant and coffee in hand.",
        "It was an early flight to Saint Thomas. We passed through security and headed right to the gate just as they announced business class boarding. We boarded, sat holding hands, drank mimosas, laughed, and kissed as much as we could for close to four hours.\n\nThe stewardess said we were the cutest couple she had met in a long time and wanted to know how long we had been married. Jennifer told her ten years and we were heading to Saint Thomas for a second honeymoon.\n\n\"Perfect place for a honeymoon!\" exclaimed the stewardess. Her name was Anne.\n\nJennifer nodded her head. \"We're staying at the Secret Harbour Beach Resort.\"\n\n\"Oh, my!\" said Anne. \"Which part?\"\n\nJennifer tried to remember, but I did and answered. \"The Hillside two-bedroom condominium suites.\"\n\n\"Wow! They're the best. Or so I've heard. I can't afford that! Why two bedrooms?\"\n\nJennifer, a little drunk, made a cooing sound. \"We're meeting a lover there. A wonderful woman.\"\n\nI saw the stewardess start and look around the cabin. No one seemed to have heard Jennifer. She smiled at Jennifer. \"Wow, you two just got more interesting.\"\n\nJennifer beckoned the stewardess closer. She leaned over and Jennifer slowly placed a hand around the back of her neck and pulled her closer still until their lips were almost touching. I could see the stewardess was feeling the sexual heat. She was almost panting a little.\n\n\"You have no idea, Anne,\" she purred and then kissed her lightly on the lips and then let her go.\n\nThe stewardess pulled back and touched her lips with a hand. \"Hmm.\" She beamed a smile at Jennifer and then at me. \"I hope I see you around the island.\"\n\n\"Me too,\" said Jennifer.\n\nAnne practically floated forward to the scullery and out of sight. I leaned over and kissed Jennifer. \"How do you do that?\" I asked.\n\n\"What do you mean?\"\n\n\"Figure out people like that. No one but you could have kissed her and got away with it.\"\n\nJennifer purred and snuggled across the armrest against my shoulder. \"It's my gift. She was cute. Tasted of cinnamon.\"\n\nI hummed a Katie Perry song and Jennifer laughed and slapped me on the leg. \"That was cherry chapstick, not cinnamon.\"\n\n\"Close enough.\"\n\nWe landed at the Cyril E. King Airport and found someone holding a sign with our names on it. We followed the man to a stretch limo parked outside the airport. Soon we were whisked away and drove through hills and narrow streets. The driver said it would be at least an hour to the resort. He had placed some salads in a small fridge in the limo and we dove in, starving.\n\nWe passed through some gorgeous country and the city of Tutu. Soon we saw Nazareth Bay glittering in the sunlight. Boats of all sizes darted about on the calm water. I could see beaches with white sand everywhere I looked. In moments, we swung into the resort. Our bags were taken and whisked away. Key cards were handed to us at the entrance and we were guided to the condominium.\n\nJennifer was slipping money into hands everywhere we went and I felt a twinge of something. She was an expert at it. I could barely see when she did it. American bills appeared and disappeared. I wandered along behind lost in the splendour and opulence. I still felt I was playing a role.\n\nWe entered the condo, high on a steep hill above a large freshwater pool. Betty was elsewhere, but we found a note from her telling us to make ourselves at home. She was out shopping in the city of Charlotte Amalie. Jennifer paid the porter and he left closing the door behind him. No sooner was it closed than Jennifer was on me.\n\nWe were soon out of our clothes and I had her on the couch with her legs and ass hoisted high in the air eating her. She tasted like heaven. I licked her from tailbone to pelvic bone in broad long tongue strokes. She squealed and then moaned and then grabbed the couch material in her hands and cried out. I probed her pussy and ass with my tongue. I sucked her inner lips into my mouth and swirled her clit. She smelled gorgeous. Her pussy was candy to me. I couldn't get enough of it.\n\nShe came hard crying my name. I put her on the couch and climbed on top of her. She kissed me and then grabbed my cock and lined it up with her opening. \"In me, now.\"\n\nI obliged her and sank my length into her pussy. We fucked slowly in the cool, air-conditioned air of the condo. Her legs wrapped around me and we settled into our rhythm. We were so lost with one another we never heard the door open and close.\n\nWe heard someone clear her throat and looked over to see Betty sitting on a nearby chair watching us.\n\n\"Oh, don't stop on my account! Please keep going.\"\n\nI was in shock and stared at Betty. She looked exactly like her photos, but more beautiful in person. She had a twinkle in her eye and she didn't seem mad at all at finding us fucking on her couch.\n\nJennifer laughed beneath me. \"Betty! I couldn't wait! I had to have him. We won't be long!\"\n\nI looked from Betty to Jennifer beneath me. \"What?\"\n\nJennifer thrust against me. \"Keep going, baby. Don't stop.\"\n\n\"With Betty right there?\"\n\n\"Oh baby, Betty right there needs this as much as I do. We're a team here. Just fuck me.\"\n\nI moved a little and looked at Betty. She smiled at me. \"Hi, you must be Bill. Nice to meet you. How was the flight?\"\n\n\"Um, lovely actually. Thank you for the tickets.\"\n\n\"My pleasure. Well, don't just lie there, fuck her!\"\n\nI stared at Betty. Jennifer was making little thrust motions. I looked at Jennifer and she smirked at me.\n\n\"Maybe you should get naked, Betty?\" suggested Jennifer.\n\n\"Hmm, probably.\" Betty rose and I watched her undress. Jennifer did, too, telling her to slow down. Betty beamed and unclipped her bra from the front. Her two massive DD tits sprung free. Her areolas were darker than the pictures and her nipples were huge and hard, jutting out obscenely. She massaged her tits and then shook them at us, laughing. She was still in her panties and she walked closer to us until her mons was mere inches from our faces. My cock twitched and Jennifer squeezed her pussy around me. She knew the effect Betty was having on me.\n\nBetty hitched up her panties and they dug between the lips of her pussy. I could see her outer labia, smooth and hairless. Betty spun around and then bent over showing us the crack of her ass with her panties trapped deep in the cleft. She spread her legs and I could see the brown skin around her covered asshole. I licked my lips.\n\nBetty slowing pulled her panties down exposing her asshole and then her pussy. Her panties dropped to the ground. Betty grabbed her firm ass cheeks and spread them revealing everything. Jennifer reached out and ran a finger down the crack of her ass, over her asshole, and split the lips of Betty's pussy. Her finger came back wet and Jennifer sucked her finger.\n\nI wanted to lick that crack and I moved my head closer.\n\n\"Lick her, Bill,\" whispered Jennifer. \"Taste her. She wants it.\"\n\nBetty was looking back at me and I could see the desire in her eyes. I reached out with my tongue and licked her pussy, spreading her lips and pushing my tongue inside. She tasted delicious. Stronger than Jennifer but I savoured the taste and the aroma. I thrust a little into Jennifer and realised with sudden clarity I was fucking my girl and eating out another woman at the same time.\n\nI moaned.\n\n\"That's it baby, keep eating her,\" encouraged Jennifer.\n\nBetty moved back and swung a leg over Jennifer's face and leaned forward. Her pussy and ass were right in front of me and over Jennifer's face. I licked her pussy again and then felt Jennifer move her head. Our tongues touched at Betty's clit and Betty moaned.\n\nMy hunger grew. I supported myself on my hands and pushed my tongue into her pussy. Jennifer was lapping at her clit. Betty's labia swelled and split open and I had easy access to her vagina. I tongued her hard and then ran my tongue up and over her asshole. Betty cried out and pushed her ass back into my face.\n\nJennifer was thrusting at me and I started driving my cock in and out of her pussy. I was in heaven. Betty tasted wonderful and Jennifer's pussy flooded with more of her juices. Soon we were lost in eating Betty and fucking each other.\n\n\"I want you to cum on her ass. I want your cum to run down into my mouth, baby.\"\n\nI grunted agreement and kept fucking and licking. I loved it when my tongue met Jennifer's. It joined me with her in pleasuring Betty. Never in a thousand years did I think I would find myself doing this. I hadn't even shook Betty's hand in greeting. Instead, I had licked the crack of her ass.\n\nI felt my cum surge within me. Jennifer did too. \"Cum on her ass!\"\n\nI pulled out and struggled to find my feet and place them on either side of Jennifer without stomping on her. My orgasm was racing to consume me. I aimed my cock at the crack of Betty's ass and stroked my cock. Betty looked back at me and smiled.\n\nMy orgasm hit and I stroked my cock lost in the pleasure. I aimed my cock at her ass and watched my cum spew out onto her tail bone and start to run down the crack of her ass. I shot three ropes and then used my finger to push my cum down Betty's ass crack. Jennifer was lapping at Betty's clit and I watched my cum run across Betty's pussy lips and then slide into her waiting mouth.\n\nJennifer came as soon as the first taste entered her mouth. A large glob worked itself down and slid into her mouth and Jennifer swallowed and licked for more. Betty was looking back at me and winked. I winked back, feeling cocky.\n\n\"Fuck that was amazing,\" I managed to say at last. I watched Jennifer continue to lap at Betty. Betty looked at my cock.\n\n\"Still hard? Fuck me, Bill.\"\n\nI lined up my cock and ran it over her pussy lips. Jennifer licked my head. I shuddered.\n\n\"Stick it in,\" ordered Betty. \"I'm so close.\"\n\nI lined up my cock and slid it into her opening. She easily accommodated me. Her pussy was wet and not as tight as Jennifer's. I slipped all the way in until my balls hit her pelvis. Betty arched her head and moaned.\n\n\"So good. Fuck me hard.\"\n\nI started to fuck her slowly with long strokes. When I pulled back, I could look down and see Jennifer smiling up at me. It was a beautiful sight. I couldn't believe what has happening to me. I pushed back in and cried out when I felt Jennifer lick my balls. I pulled back and saw her grinning up at me.\n\n\"Keep fucking her Bill. I'll lick your balls full of cum. Fuck her. She needs it.\"\n\n\"I do! I need it! Fuck me!\"\n\nI started thrusting. Jennifer would stroke my balls with a hard tongue and tickle and tease them. I watched my cock disappear into Betty's hairless pussy. She didn't have a single hair anywhere. Her asshole was open slightly and I didn't hesitate. I wet my thumb and drove it into her ass. She bucked and moaned.\n\n\"Oh yeah. That's it. Harder.\"\n\nI started to fuck with abandon. Giving in to my own pleasure. I drove my cock in hard and moaned with Jennifer's attention to my balls. I had always imagined this and I had always wanted this and wondered how it would feel. Now I knew and it was better than I had imagined.\n\nI pulled out my thumb and replaced it with my entire forefinger. I drove it into her ass and felt my cock surging below it through the flesh separating her rectum from her pussy. My finger slipped in so easily so I replaced it with two fingers. Betty was panting now and growling. I kept thrusting and then opted to add a third finger. Her ass accommodated me and I fucked her ass with my fingers.\n\nI looked back and saw Jennifer was fingering herself hard. Her tongue danced on my balls. My cock drove in and out. My fingers ploughed mercilessly into her asshole. I increased my pace and Betty started bucking.\n\nShe screamed out throwing her head back. It was the scream of an animal. Deep and guttural and full of passion. I felt her pussy go into spasms around my cock and I drove in hard and held my cock inside her. Her pussy kept spasming and Jennifer took the opportunity to really go to town on my balls. Licking all over and I felt my cum boil. Betty was still cumming hard and then I did too. I thrust once, twice and then drove in again hard and ejaculated deep inside this stranger. She felt me cum and she came again. I heard Jennifer cry out.\n\nI grunted and spewed my cum deep, holding my cock with the fingers in Betty's ass. I could feel my cock twitch and I smiled. I pulled out and Betty's pussy ejected a large volume of clear liquid. It poured down onto Jennifer's face and she opened her mouth and drank it in. I watched Betty's pussy twitch and then my cum oozed out and ran down into Jennifer's waiting mouth. Betty collapsed over the arm of the couch. Her legs shook and she still appeared to be coming.\n\nJennifer was still fingering herself. I slid down and attacked her pussy with my mouth. She was soaking wet and gaping. I sucked her clit and slipped two fingers into her pussy and found her g-spot and rubbed gently. She groaned and bucked her hips. I clamped my lips over her clit and circled it with my tongue. She didn't last long and came into my mouth. Liquid gushed over my fingers and I lowered my mouth to her opening and sucked in the juices. Jennifer cried out and her legs shook violently.\n\nHer voice became muffled and I looked up to see Betty had lowered her cum filled pussy to Jennifer's mouth. Jennifer was sucking my cum out and licking Betty's juices. Betty came again and stilled. Jennifer stopped licking and stilled. I removed my mouth and fingers from Jennifer and slid up her body and my cock naturally slipped inside her. She didn't move. I lay on her and placed my head between Betty's wet thighs. I closed my eyes and fell asleep.\n\nJennifer woke me sometime later. The sun was much lower in the sky and I judged it had to be close to six. Betty was gone and I was still on top of Jennifer, with my soft cock inside her. Jennifer's face had dried cum and pussy juice on it. She smiled at me. I kissed her and she kissed me back. I broke the kiss and leaned my head back to put her in focus.\n\n\"Morning, beautiful,\" I said.\n\n\"Hey handsome. It's early evening, not the morning. You okay?\"\n\n\"Yeah. That was amazing.\"\n\n\"You slept for a long time.\"\n\n\"Didn't you?\"\n\n\"No.\"\n\n\"Why didn't you wake me?\"\n\n\"I've always wanted a man to make love to me and then fall asleep inside me. You all want to fall asleep. My work doesn't allow that. I wanted it. I had to explain it to Betty. She just shook her head and went and cleaned herself up.\"\n\n\"Where is she?\"\n\n\"I dunno. Somewhere in the house. Probably out on the balcony drinking wine and watching the sunset.\"\n\nI laid my head down over her shoulder. She twitched her pussy and my cock was squeezed out.\n\n\"No!\" she quailed. \"That's not what I wanted!\"\n\n\"What did you want?\"\n\n\"It harder. I've been enjoying you inside me for a couple of hours. I keep twitching my pussy and your cock would get a little harder. It was fun.\"\n\n\"You're a strange girl.\"\n\n\"Uh-huh. That's why you love me!\"\n\nShe froze.\n\nI lifted my head and looked at her. She had wide eyes and looked frightened. I kissed her but she kept staring at me with those wide eyes.\n\nI chuckled. \"I do you know.\"\n\n\"What?\"\n\n\"Love you.\"\n\nHer eyes danced over my face, looking for deception. Then her face lit with joy. \"You do?\"\n\nI nodded.\n\n\"I knew it!\" she said.\n\nI settled my head back down next to hers. She stroked my back.\n\n\"Don't you want to know?\"\n\n\"Know what?\"\n\n\"If I love you?\"\n\n\"You do.\"\n\nShe smacked me. \"Stop that. You don't know.\"\n\n\"I do. You love me. Jennifer and Bill, sitting in a tree, k-i-s-s-i-n-g.\"\n\nShe laughed. \"I do love you, you big stupid.\"\n\n\"I know.\"\n\nShe squealed and started punching me lightly. I tickled her and we wrestled. I learned a knew thing: wrestling with Jennifer is extremely erotic. I was soon hard and Jennifer seeing that pushed me onto my back and rode me, sitting high and basking in the feeling.\n\nBetty came round and watched us for a moment. She kissed Jennifer and disappeared.\n\nJennifer rode me hard. She was an expert. It takes talent to ride a man correctly. If a woman gives in to just her pleasure it rarely pleases the man. A woman will just gyrate her hips and cum if she wants to. A man needs the penetration, the rubbing of her walls along his cock. An expert will find a way to do both, and Jennifer was an expert.\n\nSoon she couldn't stay upright. She collapsed on me and I rolled us over and finished the job. Soon we were coming and I came deep inside her. We held each other and talked about small things. I stayed inside her but slid to the side and played with her breasts and nipples. She played with my chest hair.\n\n\"I love you, Bill.\"\n\n\"I love you, Jennifer.\"\n\n* * *\n\nBetty threatened to dump buckets of cold water on us unless we agreed to wash and get dressed. She wanted to hit the discos, as she called them. She declared it a no-underwear night and that included me.\n\nShe showed us our room in the condo. Our bags had been unpacked and Jennifer made a noise and checked the nightstand. She pulled out vibrators and her large strap-on. She looked at me holding them.\n\n\"Oh my god, the staff saw these in my bags! I'm mortified!\"\n\nBetty laughed. \"That's nothing. Don't worry about it. Hurry up! Get washed and dressed. You have your own bathroom.\"\n\nWe washed and changed into shorts and loose shirts. Betty was pleased to see Jennifer was braless. She shocked me by reaching up a pant leg and confirming I was without underwear. She insisted I check her out and I did.\n\nBetty said I had to be sure so I dropped her shorts and licked her pussy. She sat back and spread her legs. \"Eat me, baby.\"\n\nI lapped at her with more long strokes. She tasted delicious. I sucked and teased her clit and then found her g-spot with two fingers and stroked it. She moaned.\n\n\"That's it baby. Keep doing that. Jesus Jennifer, where'd you find him?\"\n\n\"He's my next-door neighbour.\"\n\n\"Your... your next-door neighbour? Are you fucking with me?\"\n\n\"Nope. He's good isn't he?\"\n\n\"Ungh. Fuck yes, he is. That's it, Bill. Lick my ass.\"\n\nI lowered my tongue and licked her ass and then returned to her clit. She was close to coming. Her legs shook and her pussy clenched hard on my fingers.\n\n\"Oh fuck me, Bill. I need your cock in me. Do it.\"\n\nI felt Jennifer fumble with my shorts and then they were loose and pulled down. I stood and watched Jennifer line my cock up with Betty's opening. She pulled me forward and I slipped my cock inside her. I thrust with long strokes and built up speed. Jennifer hung off my shoulder and watched and encouraged me.\n\nJennifer reached down and thumbed Betty's large swollen clit. It really was big. Now that I noticed I realised Betty looked like a blond Vanessa del Rio. I could a little Hispanic in her. I said so and Betty laughed.\n\n\"Not the first time, I've been told that. Now shut up and fuck!\"\n\nIn a few minutes, Betty came around my cock. Jennifer got on her knees and pulled me out and sucked me and licked me clean. She knew I wasn't going to cum anytime soon. She just wanted me clean again.\n\nWe dressed and then Betty kissed me. It was tentative at first and then grew more passionate. She broke the kiss and then smiled at Jennifer. \"Jesus, hon. You've found a keeper. You two up for dancing?\"\n\nI nodded but dreaded it. Betty led the way out of the condo. I asked her to stop.\n\n\"I don't have my wallet!\"\n\nBetty sauntered up to me and kissed me again. \"Jennifer said you could be stupid. Hon, I'm the client. I pay for everything. Just relax and enjoy yourself.\"\n\n\"Client? I'm not...\" I couldn't find a way to finish my sentence.\n\nBetty laughed and looked at Jennifer who had the good graces to at least blush. \"I'm her client, Bill. That means I'm yours too. Never been pimped before?\"\n\nI shook my head.\n\nBetty laughed. \"Relax, Bill. We're all friend here. I will pay Jennifer. It's part of what makes this exciting for me. I pay her well. Maybe if you treat me to more of that awesome fucking you just gave me, I might reward you too. Now let's go.\"",
        "Betty left and Jennifer stopped me. \"Bill, it's not like that...\"\n\nI smiled at her. \"I think I'm okay with this. I get it. I like her. She's fun.\"\n\nJennifer searched my face and then kissed me. \"You really are amazing.\"\n\nShe grabbed my hand and pulled me out the door.\n\nWe entered a limo and sped off toward the main city. We hit the bar in the back and drank our way to club. The girls were pretty tipsy and kissing each other. At one point they asked me to rate their pussies. They have me grading material. I had to score them on taste, smell and tightness and use my fingers, mouth and cock on them. I got them to each cum a couple of times and really enjoyed having two pussies at my beck and call. Betty, it turned out, had her hair lasered off. Jennifer said she would never do that. In the end, I gave them a tie and Jennifer called foul. Betty kissed me for being a gentleman and then whispered in my ear that she knew Jennifer's was the best.\n\nBetty wanted to blow me in the car but unfortunately we arrived at our destination: The Starz Night Club and Ultra Lounge. It was early in the evening. The sun had set during the drive but already a line up went out the door. The limo pulled up and we were escorted inside and upstairs to the VIP lounge. The owner met us and Betty introduced us. We were seated by the railing looking out over the DJ area and the dance floor.\n\nWe were asked what we wanted to drink and soon bottles appeared on our table with mix. I had heard of bottle service before but never experienced it. I made myself useful and started making drinks. Mojitos were on order and soon we were sitting back and laughing.\n\nThe night was one long loud party. So many people came by to talk and filter through. Betty would laugh with them, give them drinks if they were interesting enough, and pull us onto the dance floor. Dancing was not my strongest skill but I moved around enough to get whistles from Jennifer and Betty.\n\nJennifer found it fun to point out all the women eyeing me. I told her it was just because I was sitting with two gorgeous and wealthy women. She glared at me, whispered something to Betty, and then pulled me off to a different area of the club. We found ourselves sitting near the dance floor.\n\n\"Okay, watch. Don't make it obvious. See the skinny girl over by the speakers? The one with the large hoop earrings? Yeah? Okay. Watch her. She's been checking you out.\"\n\nI watched her and sure enough I caught her stealing glances at me. I said so to Jennifer.\n\n\"See? She's not the only one. Look around. Women are checking you out, baby. You are hot. You've got that secure, calm, confident look about you.\"\n\n\"I'm too old!\"\n\n\"What? Women don't care about that. Its looks wealth and confidence. You have all three. The Holy Trinity of sexual appeal. These girls will suck your cock if you let them.\"\n\n\"That's crazy, Jennifer.\"\n\nJennifer glared at me. \"Okay, we bet. If I win you do whatever I want tomorrow. No complaining. No arguing. You just take it. You win, you get to do whatever you want to Betty and me. Deal?\"\n\n\"Deal? I don't even know what the bet is!\"\n\n\"I pick out the woman. You go up to her. Talk. Then ask her if she would do you the great pleasure of sucking you off. If she does, I win. If not, you win.\"\n\nI squinted at her. \"You're gonna pick someone you know.\"\n\nJennifer laughed and clapped her hands. \"Oh, Bill. I don't know anyone here. This is my first time to Saint Thomas.\"\n\n\"Hmm. Okay. But if some girl kills me tonight, it's on you.\"\n\nJennifer laughed and then looked around the dance floor area. I looked around as well. I started to notice that a lot of women were looking over at us. Could Jennifer be right? The girl by the speaker even gave me a little wave. I waved back and smiled. The girl's face lit up.\n\n\"Okay, her,\" said Jennifer. \"Speaker girl. Go dance with her. Something slow. Then whisper in her ear that you find her so sensual. See what happens.\"\n\nI gave Jennifer a look and rose. I walked directly toward the girl across the dance floor. I cared little for idiots cavorting on the floor and I moved past them. Most thankfully moved out of my way. The girl by the speakers looked frozen watching me approach her. She looked to her left and right and then at me. Her eyes looked a little frightened to me.\n\nI walked up to her and stopped a few inches from her. \"Hi, I'm Bill. I noticed you looking at me tonight. Would you care to dance?\"\n\nThe music was fast and thumping. Lights swirled and this close to the speaker I had to shout.\n\nThe girl nodded.\n\n\"Not yet, though. Something slower, quieter. Do you want to go someplace a little quieter to talk?\"\n\nShe nodded again. I held out my elbow and she took it hesitantly. No one had probably ever offered her an elbow before. I guided her to a quiet corner and stood near her. \"Sorry, that was too loud for me. I'm Bill. Nice to meet you\"\n\n\"Hi Bill, I'm Alice.\"\n\n\"Are you visiting?\"\n\nShe nodded. \"From Vermont. My family is here for a wedding.\"\n\n\"Oh, how nice! You look beautiful. I love your long hair.\"\n\n\"You do? I mean, thanks!\"\n\nThe music slowed down and the dance floor emptied. I looked at Alice and held out my hand. \"Shall we dance?\"\n\n\"No one is out there!\"\n\n\"Doesn't matter, we will be. They'll all see the most beautiful woman in the place being danced like she deserves.\" I groaned inside at the smarmy comment.\n\nAlice beamed at me and took my hand. I led her out to the floor and held her close, wrapping my arms around her narrow waist. I looked up at the balcony and saw Jennifer and Betty leaning over watching me. Jennifer gave me a thumbs up and I hid a smile.\n\n\"Who was that lady you were with?\" asked Alice.\n\n\"My wife.\"\n\n\"Your wife?! Are you serious?\"\n\n\"Yup. She made me a bet.\"\n\nAlice frowned up at me. \"A bet. What kind of bet?\"\n\n\"She said if you blow me she gets to do whatever she wants with me tomorrow.\"\n\nAlice looked startled. \"Blow you? Jesus. Wait, what if I don't?\"\n\nI couldn't help but notice she said 'if' and blinked. \"Um, I get to do whatever I want with her and Betty.\"\n\n\"Who's Betty?\"\n\n\"Look up at the railing. The two women there. Jennifer is my gorgeous redhead and Betty is the blond.\"\n\nAlice looked up at them and then back to me. \"What do you mean by whatever you want?\"\n\n\"Sexually.\"\n\nAlice's mouth opened and then closed. \"You're having sex with both women?\"\n\nI thought back to just a few weeks ago. I was content smoking and drinking in my backyard writing erotic novels. Now I was dancing in Saint Thomas, with two women nearby who I had already had a threesome with, and now I was talking to a stranger on the dance floor about her sucking my dick. I shook my head in disbelief. \"Yes. Would you believe me if I said a few weeks ago I was in my backyard writing my erotic novels and I lived a normal life?\"\n\n\"You write erotic novels?\"\n\n\"Yes.\" I realised I shouldn't have said that.\n\n\"Are you famous?\"\n\n\"Under my pseudonym, yes, I suppose I am. Best-seller anyway.\"\n\n\"What's your pen name?\"\n\nI told her and she gasped. \"Oh my god, no way! I've read all your novels! I thought you were a woman! I mean how could you not be? You get everything so perfect!\"\n\n\"Well, I am.\"\n\nShe slapped my chest. \"No way! My mom and sister love your stuff. Jesus, my sister, who's getting married tomorrow wanted a wedding like in your second novel!\"\n\nI winced. \"That was pretty hardcore. The bride gets gang-fucked by three Jamaican hotel staff.\"\n\nAlice stared at me. \"That's right!\" She then proceeded to test me with questions. I corrected her a few times and then she was gushing all over me. \"I can't believe I'm dancing with you!\"\n\n\"It's nice.\" I realised the music hadn't changed. The lounge people remained off the dance floor and were all watching us. I felt Jennifer or Betty had something to do with it.\n\n\"So, you're totally gonna lose that bet.\"\n\n\"Um, what?\"\n\nAlice moved away from me and grabbed my hand. She started to pull me off the dance floor. I followed behind and she pulled me into the women's bathroom past a series of complaining women. I entered the bathroom and the women at the mirror glanced at me with their reflections, but didn't pause applying lipstick and makeup.\n\n\"Um, hi, ladies.\"\n\nA chorus of hi came back to me.\n\nA stall opened and a woman came out. Alice pushed past her dragging me in with her. She dropped the toilet lid and pushed me down on it. She closed the stall and then started working on my shorts.\n\n\"Oh my god, no underwear! How perfect!\"\n\nShe popped my cock into her mouth and started sucking. She wasn't very good, but she was energetic. She sucked and bobbed her head and kept up a steady rhythm. I soon found myself thrusting into her eager mouth.\n\nI heard a conversation outside the stall.\n\n\"She's blowing him, right?\"\n\n\"Yeah, can't you hear it?\"\n\n\"Was it that really good-looking guy?\"\n\n\"Yeah, it's him. He came in with the redhead and the rich blond.\"\n\n\"How'd she land him?\"\n\n\"Who the skinny chick?\"\n\n\"Yeah.\"\n\n\"Dunno. He danced with her, real slow, then she pulled him in here.\"\n\n\"Damn. I want to see that dick. I'd suck that in a heartbeat.\"\n\n\"You and me both, girlfriend.\"\n\nThere was silence for a while and Alice kept sucking.\n\n\"How long has it been?\"\n\n\"About ten minutes. I would have totally swallowed him by now.\"\n\n\"Me too. I'm good.\"\n\nI wondered if Alice was hearing this. She didn't seem to care. She kept sucking and then she surprised me. She drove my cock all the way inside her mouth.\n\nI cried out. \"Fuck! That's deep!\"\n\nAlice smiled around my cock and then licked my balls.\n\n\"Jesus!\" I said.\n\nAlice started deep throating me. Each time she touched bottom she would lick my balls. In moments my cum rose hard and fast.\n\n\"I'm gonna cum!\"\n\nAlice kept the same pace and I ejaculated into her mouth. I held her head down and pumped my cum into her throat. I had never been deep throated before and it was amazing.\n\nWith a gasp Alice drew her mouth off me and gasped.\n\nWe heard applause outside the stall in the bathroom.\n\nI was totally embarrassed. Alice saw me turn red. \"Never been blown in the woman's bathroom before?\"\n\nI shook my head.\n\n\"Happens all the time. Sorry you lost the bet. But I had to swallow the cum of the writer who gave me so many orgasms reading your books. I'm telling my mom and sister tomorrow. They won't believe me.\"\n\n\"I'll write you into my next novel. Look for a girl named Alice, Saint Thomas, and a bathroom blow job.\"\n\n\"Are you serious right now?\"\n\n\"Yes.\"\n\nAlice squealed and kissed me. Once again I was forced to taste my own cum. I endured the kiss and then rose and pulled my shorts up.\n\nAlice opened the stall and the women were once again applying makeup without a care in the world.\n\nAlice paused and then announced to the bathroom that she had just blown the writer of my novel series. The woman gasped and turned to stare at me. Phones came out and I was photographed. Alice beamed and took a selfie with me. I groaned and wished I had kept my mouth shut.\n\nI pushed past everyone and fled back upstairs. Jennifer clapped and Betty whistled at me. I hung my head and refused to look at anyone. Jennifer noticed my distress and asked me what had happened. I told her and she looked horrified.\n\n\"Oh Bill, that's gonna spread fast.\"\n\nBetty looked chagrined and impressed. \"Are you really the author?\" When I nodded, she rose. \"We should leave.\"\n\n\"I'm sorry, guys.\"\n\n\"Not your fault,\" said Jennifer. She grabbed my head and pulled me up. I looked around and saw the women in the lounge all staring at me and whispering with one another. I was outed. In Saint Thomas of all places. Betty led the charge out.\n\nWomen moved forward with their phones and called out to me by my pseudonym. I kept my head low and moved out through the door. In a moment we were inside the limo and roaring off into the night. Flashes from phones followed us out of the parking lot.\n\nI sank back into my seat and groaned.\n\nBetty was looking at me in a new light. Jennifer seemed to be trying not to laugh.\n\n\"It's not funny.\"\n\nJennifer snorted when laughter escaped her. \"I'm sorry honey. Is that how you got her back there? By saying you were a famous author?\"\n\n\"Yes, well, no. Maybe? Not really. It just came out. Turns out she's a big fan.\"\n\n\"You're so stupid, baby. But fuck, I love you!\"\n\nI saw Betty look quickly at Jennifer at her words. \"I love you, too. Jennifer, but this is gonna fuck me over.\"\n\nBetty shook her head. \"Maybe not. Let me contact some people. I can spread a false story. Counter to this. It might work if I act quick enough. But social media is faster than light these days, though. For now, stop worrying. This will probably be nothing. I'll make a few calls.\"\n\nA week later she was proven wrong, but for that moment, I was thankful.\n\n* * *\n\nWe got back to the condo late in the evening. The girls were drunk and insisted we go swimming in the freshwater pool. We changed together and hands groped and probed. There was a great deal of laughing and a little bit of moaning. Eventually we stumbled out of the condo and staggered down to the pool.\n\nI leapt in at once and cannon balled in the middle of the empty pool. The girls squealed and tried to enter all dainty before I pulled a 'Jaws' and dragged them under. We splashed around, played Marco Polo of all things, kissed and made out. Soon I had forgotten all about the lounge and enjoyed the women.\n\nWe clicked. There's no other word for it. We complimented each other and fed off each other. It was a mutual admiration club. I found myself increasingly relaxed and comfortable with them. They talked of sex and sex acts. Betty, had read all my books, and wanted to talk about them all night.\n\nShe confessed she wanted to recreate a scene from one of my books and Jennifer groaned in mock despair. It required a threesome, two women and a man, a strap-on and a great deal of lube.\n\nI shuddered thinking of it and told them no way. Jennifer reminded me of the bet I had lost and I shut my mouth. Tomorrow was going to be a memorable day.\n\nThe hotel staff came and chased us out when we were making too much noise. We fled laughing to the condo and flew inside. Jennifer went to fetch more drinks and I found myself in Betty's arms kissing her.\n\nOur swimsuits came off and I found myself massaging Betty's overly large tits. I traced a finger around her huge areolas and watched her nipples tighten. The flesh of her breasts was so soft and malleable. I could feel the implants though and preferred natural breasts. But they were fun and exciting. I could hear Jennifer in the other room humming a tune tonelessly. Betty had grabbed my cock and was stroking it. She reached farther down and ran a hand through the crack of my ass, over my balls and up to the head.\n\nHer hand caught my pre-cum and she wiped it around my head sending shivers through me. I lowered my mouth and sucked a hard nipple into my mouth. I sucked it gently and she placed a hand behind my head to keep me there. I reached down and slipped a hand over her mons and dipped a finger into her slit. She was wet and I slipped a finger into her opening. She pressed my head to her nipple, and I took my teeth and gently bit down. She gasped softly and I felt her pussy contract.\n\nI took my mouth off her nipple and French kissed her. Her lips were hungry against mine and she drove her tongue into my mouth aggressively. I sucked on it and she pressed herself up against me. My cock was pressed up against her stomach and she kept her hand there and continued to try to rub it. She dropped her hand from the back of my head and reached down and grabbed my left ass cheek hard, squeezed and pulled me in tighter. My finger drove into her pussy and she moved her hips with me.\n\n\"Jesus, Bill,\" she whispered into my mouth. \"You're so hot. I need you inside me.\"\n\nStill kissing her I looked past her and saw the large soft chair behind her. I steered her backwards and when her calves touched the chair she let go of me and sat back. She lifted her legs and spread them. She kept her eyes locked on my erection and licked her lips. I took a moment to admire her. Her massive breasts were pushed together with her upper arms. Her hands were crossed over her stomach and her fingers were splaying her pussy lips apart. I could see her swollen clit, rising hard and prominent. It was huge and glistening. Clear liquid escaped her vulva and ran down to disappear between her ass cheeks.\n\nShe was so open and ready for me. I sank to my knees and lined up my cock head to her opening. I grabbed my cock and ran the head between her pussy lips and up and over her clit. She made appreciative noises and tried to move her opening up to my cock head. I resisted her and kept rubbing my cock along her wet pussy and clit.\n\nShe locked eyes with me and I enjoyed the look of wanton lust she sent my way. This woman wanted me bad. Me and my cock. I was in my element. A man deeply desired. A woman wet and open and willing. I pressed my swollen head to her opening and pushed it in. Her eyes pleaded with me to continue pushing my cock inside her. I resisted and withdrew and ran my cock back up and over her clit.\n\nShe made an angry noise but then stopped and laid her head back as I continued to circle her clit with my cock head. My pre-cum made it slick and wet. I tapped my cock against her clit and she rewarded me by sucking air in past her teeth. I rubbed her clit harder, enjoying the electric shocks running down my cock.\n\nI pressed my cock against her opening and pushed it in just past the head and then pulled it out again. She made an exasperated noise and looked down and watched my cock play with her pussy lips and clit. I tapped her clit again and she smiled.\n\nI kept up this game. I could do it all night. I would probe her vagina, run my cock head up through her swollen inner labia, and then circle her clit hard with my cock. She was breathing heavy now and couldn't tear her eyes from what I was doing. Her clit was swollen and standing up from her pussy. It was easily an inch long and I was mesmerised by it. Her pussy was dripping now. Her groin was red with excitement. I could see her upper chest was red as well. She was beyond excited.\n\nI couldn't tell you how long I did this for. It was exciting and sexual. I was rock hard. Pre-cum poured from my cock and coated her pussy and mixed with her copious amount of wetness. We could hear the wet sound of my cock rubbing against her. She no longer had to hold her lips apart, they were swollen open with excitement. She reached up and pinched her nipples and twisted them.\n\nShe was getting close to a powerful orgasm. And so was I. I put my cock head against her opening and this time I pushed it all the way in. The feeling of her pussy wrapping around my cock shaft was heaven and I almost came from the sensation. She threw her head back and cried out loudly. I felt my balls press against her and then slowly pulled back until my cock almost fell out of her.\n\nI pushed back in slowly and then withdrew. I kept up this slow, agonizing pace, wanted nothing more than to thrust wildly. She didn't move. She let me set the pace. She lowered a hand and circled her clit. I watched, amazed as she touched her clit with thumb and forefinger and stroked it. It was an amazing sight to see. I almost lost my rhythm and faltered for a moment before resuming.\n\nI continued to fuck her slowly and felt my orgasm starting to reach a crescendo. She was close. Her eyes were screwed tight and her mouth was open in a little 'o'. I thrust harder and her eyes shot open. I thrust three times hard and fast and she came screeching. She lost control and bucked and thrashed. It was all I could do to stay inside her. Her pussy clenched so hard on my cock I could barely move it. I needed to cum but held it off watching her. I felt a flood of liquid around my cock and watched a flood of liquid escape around my cock and run down her ass. I kept thrusting and she kept coming.",
        "She didn't stop cuming and I don't know if it was one or many. I watched in awe as this woman simply gave in to her pleasure. She had tears running down her face and her pussy clenched and unclenched. My orgasm surged hard. I pulled back tearing my cock from her pussy, grabbed it and gave it three quick strokes. My orgasm hit and I ejaculated hard. My first rope shot like a cannon and a thick stream of cum launched itself into the air with a force I hadn't felt since I was a young man.\n\nThe rope hit her chin and throat. She gasped and watched me cum. The second rope landed on her right breast, right on the nipple. The third landed on her stomach. I needed to feel her pussy and drove my cock, still orgasming deep into her pussy. My cock jerked hard inside her and she came again.\n\nI had never had sex like this before. I had never felt so in tune with the needs of another woman. We had synced desires perfectly. I bottomed out and fell forward on to her. She wrapped her arms around me and held me against her. I could feel the wetness between us. My cum and her sweat made us slippery together. Her legs collapsed and she stretched them out. We must have looked strange lying like that. My head was beside hers and I lay gasping.\n\n\"That was amazing, Bill,\" she whispered. \"Thank you.\"\n\nI grunted in reply unable to form words. I was exhausted and spent.\n\nShe stroked my back and ran her nails over me, causing me to shudder. I enjoyed the heat of her pussy surrounding my cock. I enjoyed the large soft mounds of her breasts pressed against my chest. She was like a large comfy cushion. I smiled and relaxed.\n\nI was asleep in moments.\n\nBetty woke me moments later.\n\n\"You have to get off me. I need to pee.\"\n\nI struggled to rise. Suddenly Jennifer was there helping me. She was wearing cute Sponge Bob jammies. She steadied me and then slipped an arm around my waist. \"Come on lover. Let's get you cleaned up and in bed.\"\n\n\"Yes, mommy,\" I said.\n\n\"Ha ha, too funny. You earned your rest. Come on. Night Betty.\"\n\n\"Night Jennifer. Night Bill. Thank you for that.\"\n\nI murmured something and let Jennifer guide me to the shower off our bedroom. I washed quickly, let Jennifer put a pair of sleeping pants on me, and then let her lay me back in bed. She crawled in beside me and snuggled up against me.\n\n\"I want you to do that to me,\" she whispered.\n\nI made a noise in response. Sleep was so close.\n\n\"It was beautiful...\"\n\n* * *\n\nI woke alone in bed. The sun was up, and I judged it to be late morning. I hadn't moved all night. My thoughts returned to yesterday and I replayed everything in my head. The sex with Betty last night had been amazing and I felt a little guilty that Jennifer and I hadn't reached that level of intimacy.\n\nI remembered the girl from the bar and being outed as the author of my erotic novels. I groaned inwardly and then pushed the worry aside. I would speak to Betty about it and see if she had managed anything to suppress it.\n\nI listened and couldn't hear anything in the condo. I suspected the girls must be out. It was so peaceful and quiet. I could almost go back to sleep.\n\nInstead, I willed myself out of bed and went into the bathroom. A half hour later I emerged, clean, shaven and ready to face the day. I wore a loose pair of shorts and a simple shirt and left the bedroom. I spotted the large gift bag on the kitchen table right away.\n\nIt had a small note attached with my name on it. I opened it and read the note.\n\n\"Thanks for last night, Bill. That was memorable. I won't begin to bore you with just how amazing it was. Just trust it was. I can see what Jennifer sees in you. Please accept this small gift. It is meant simply as a thank you. Signed, Betty.\"\n\nShe had kissed the note and left an imprint of her lips in lipstick.\n\nI pulled the bag closer and removed the blue tissue paper stuffed into the top. The bag was heavy and full. I reached in and pulled out a pair of shorts. They were designer, but I knew nothing of who and the worth. They were made of linen, lightweight and a light blue colour. I checked the size and saw Betty had nailed it. I set them down and pulled out the next item: a linen short-sleeve shirt by the same designer. It had a floral pattern but masculine enough for my tastes. It was also the right size. I set it down on the shorts.\n\nNext was a watch. A gold Rolex. I stared at it in shock. No way could I accept that. I knew they were expensive but had no idea how much this was worth. Too much, I thought and put it aside.\n\nThe next item was a smart phone. The latest from Apple. A sticky note was on the case. It was from Jennifer.\n\n\"This is from me. Use it. I'm tired of not being able to text you. I'll help you set it up later. Love, Jennifer.\"\n\nI smiled and put the phone on top of the shirt and shorts.\n\nThe next item was a fedora. I couldn't believe it. It was gorgeous, but I never saw myself as a hat wearer. I tried it on and wasn't surprised to find it fit perfectly. They probably measured my head while I was sleeping. I set the hat down over the phone.\n\nThe next item in the bag was a pair of Birkenstock sandals. Of course they fit, I laughed. They were gorgeous.\n\nThe last item was a large bottle of Fuck Water. It also had a note attached.\n\n\"This is from both of us. You're gonna need it later, lover. Signed, Jennifer and Betty. xoxoxo\"\n\nThe lube frightened me, and I set it down. No way, Jose, I thought.\n\nI knew what Jennifer intended to do. She had often told me how she loved to fuck men in the ass. There was no way in hell that was happening. Bet or no bet.\n\nI collapsed the bag and set the Rolex on top of it. I grabbed the new clothes and retreated to the bedroom to change. I opted to not wear underwear. I knew Jennifer and Betty expected me to leave them off. I smiled and went back out to the main room. I slipped on the sandals and marvelled at how good they felt. I put on the fedora and then stepped in front of the full-sized mirror in the hallway.\n\nI looked good. Really good. I put the hat on a jaunt and smiled at myself. Jesus, a fedora looks good on me! Who knew?\n\nI felt the need to strut around and left the condo with a key card in my pocket. I wandered down to the pool and up to the bar set up nearby. The bartender smiled at me and asked what I would like. I had no idea and asked him to surprise me. He smiled and got busy. He did a lot of things, even using a small blowtorch contraption, and he then produced a drink he called an Old Fashioned.\n\nI had heard of them but never had one. I took a tentative sip and then looked at the bartender in surprise. \"Jesus, that's amazing!\"\n\n\"Thank you, sir!\"\n\nI realised I had no money on me. \"I'm sorry, I have no cash on me.\"\n\nThe man smiled. \"No worries, sir. Miss Betty had already tipped the staff. Enjoy.\"\n\nI nodded. I shouldn't be too surprised. Betty had money and power. I felt a little like a prostitute and wondered if this guy thought I was one. I shook my head and thanked him. I found a small table in the shade and settled down.\n\nLooking out over the pool I could see several couples lounging around suntanning. The heat was almost too hot for my Canadian temperament, but I managed to suffer it. I laughed to myself. I sipped my drink and looked around. I noticed quite a few single women lounging around. They seemed to have noticed me, as well. It appears Jennifer is right again, I mused.\n\nIt didn't take long, but a woman, maybe in her early twenties, wearing a pure white bikini that left nothing to my imagination rose from where she was suntanning and looked my way boldly. She had been stealing glances at me. Her bronze skin glistened with tanning oil. Her figure was the perfect hourglass, with large tits, narrow waist, and ample hips that promised pleasure. Her bikini bottoms was nothing more than a string down her ass. Her pussy lips were prominent in a classic camel toe.\n\nThe sight of her gave me an erection at once. Unfortunately, my new shorts were loose and I tented pretty obviously. I moved a hand and pressed it down against my leg as nonchalantly as I could. I sipped my drink and pretended non-interest.\n\nThe woman started walking my way. She chatted en route with people she knew, but her eyes were glued to me. As she got closer, I could see the finer details of her face. She was gorgeous. She wore no make-up but her face exuded the power of youth. Perfect skin, beautiful deep blue eyes, large full lips, a scattering of freckles across her cheekbones, and beautiful blond hair falling below her shoulders.\n\nShe walked up to my table and sat in the seat beside me to my left. \"Hello, there. I haven't seen you around here.\" Her accent was Scandinavian: Swedish, or Norwegian.\n\n\"Hi yourself. I arrived yesterday.\"\n\nShe smiled at me and I was dazzled by it. She had a wide full mouth and her teeth were perfect. Her smile completely changed her looks. She looked playful, youthful, exciting. My cock twitched under my hand against my thigh. \"How long are you here for?\"\n\n\"Only until tomorrow, I'm afraid. It's really quite beautiful here.\"\n\n\"Is this your first time in Saint Thomas?\"\n\n\"Yes, or anywhere in the Caribbean.\"\n\nShe cocked her head at me for a moment. \"You are Canadian, yes?\"\n\nI nodded. \"Correct. Was it my accent?\"\n\nShe laughed and it was beautiful. \"Yes, and your white skin. Us northern countries are so pale.\"\n\n\"You're not! You have the most stunning tan. Are you Swedish?\"\n\nShe got a sly look on her face. \"Why is that always the man fantasy? Swedish babes by the pool? No, I am Norwegian. From Trondheim.\"\n\nI laughed feeling comfortable now beside this beautiful creature. \"I've actually been to Trondheim once. Years ago. Back in the early nineties.\"\n\n\"I would not have been born yet,\" she smiled.\n\nI blushed. \"Yes, well. Trondheim was wonderful. But I had the most expensive coffee of my life there.\"\n\nShe laughed. \"Yes, it is expensive there. What brings you to Saint Thomas?\"\n\n\"I'm here with a couple of friends. Just visiting.\"\n\n\"Where are you staying?\"\n\nI told her and she gasped a little.\n\n\"You are with Betty! I see! She told us you and Jennifer were coming to stay with her.\" She leaned back a little and appraised me. \"I can see why she was so excited. I saw her this morning, you know.\"\n\n\"You did?\" I was trying to get my head wrapped around the fact this woman knew Betty.\n\nThe woman leaned forward toward me. \"Yes, she was most pleased with you.\" She winked at me and I felt heat rush to my cheeks. She laughed at my discomfort and reached out and tapped my leg below where my hand was still pressing my erection against my thigh. \"That was high praise, coming from her.\" She kept her hand on my thigh and looked up at my hat. \"The fedora is really quite dashing on you. You caught my attention from across the pool.\"\n\nLeaning forward her breasts pushed the small material of her bikini top to a point where I thought it might fail. Her bronzed skin gleamed with oil and the smell of coconut swirled around us. She looked like a wet dream. Perfect features, perfect skin, a body young and ripe. I licked my lips and so did she.\n\nThat small motion of copying me sent a shiver through me. The last few days had been a force beyond my control. I had done things I would never had imagined from sitting in my fort in my backyard in rural Canada. I needed to take charge of my own destiny and this woman excited me.\n\nI lifted my hand from my cock and the material of my shorts rose with my throbbing erection. The woman glanced down at it and stared at it for a moment before looking up at me.\n\n\"Is that for me?\" she asked with a smile.\n\n\"It can be. It certainly likes you.\"\n\nShe moved her hand on my thigh. She reached under the opening of my short leg and slid her hand up and wrapped it around the base of my cock and she squeezed lightly. \"I think I like it, too. I'm Elsa.\"\n\n\"I'm Bill. Would you like to see the view from my condo?\"\n\nShe squeezed my cock a little harder. \"I would like that very much. Perhaps you should trap this under your waist band?\"\n\nI nodded and when she released my cock; I adjusted myself and tucked the head of my cock under the waistband of my shorts. I rose and so did Elsa. I took her hand and led her toward the condo. I saw the look of disappointment from the other girls around the pool. I slipped my arm around her waist and Elsa purred.\n\n\"They are jealous of me,\" she whispered and wrapped an arm around me. \"And they should be.\"\n\nI laughed and brought her up to the condo. When I arrived at the door, Betty opened it and stared out in shock at me and Elsa. Then her face brightened and she called back inside. \"Jennifer! Come see who Bill brought home!\"\n\nI heard Jennifer from our bedroom. \"What's that?\"\n\nBetty called out louder. \"Bill brought home a friend!\"\n\nI saw Jennifer emerge from our bedroom. She saw me with my arm around Elsa and I saw the immediate frown on her face. Then it cleared and she brightened. \"Elsa! Right? We met this morning?\"\n\nBetty moved clear of the door and beckoned us inside and closed the door behind us. I let go of Elsa and moved over to Jennifer.\n\nShe looked at me and I wrapped my arms around her and kissed her. She hesitated and then kissed back.\n\n\"I missed you, Jennifer,\" I whispered in her ear.\n\n\"You better. Didn't take you long to find someone.\"\n\nI nodded. \"I'm sorry. I'll tell her to go. This is all too much. I'm fucking this up.\"\n\nJennifer looked unto my face. \"No, it's me. I'm exposing you to too much too fast.\" Jennifer looked past me and her eyes widened.\n\nI looked back and saw Betty kissing Elsa. She had a hand on a breast having pulled the bikini top away. Her other hand was buried in her pussy under the bikini bottom.\n\nJennifer sighed and looked at me. \"Feel like some Swedish?\"\n\n\"She's Norwegian.\"\n\n\"Oh.\" Jennifer gripped my cock through my shorts. \"My friend is excited.\"\n\nI grunted and watched Betty's tongue dart into Elsa's mouth. Elsa was looking past her at me.\n\n\"You can fuck her, Bill. But you need to wear a condom.\"\n\nI nodded.\n\nBetty had pushed Elsa down over the table and was squatting behind her and eating her ass and pussy. Elsa was moaning and watching me. Jennifer undid my shorts and they fell to the ground. My cock bobbed free and Jennifer fell to her knees in front of me and took me in her mouth.\n\nElsa moaned and watched my cock being sucked. My cock surged hard in Jennifer's mouth and I watched Betty finger fuck Elsa from behind. It sounded wet.\n\nJennifer got up and went into Betty's bedroom and came out with a couple of condoms. She looked at them and then my cock and chose one. She opened it with her teeth and then pressed the condom against the head of my cock and rolled it back over my shaft in one practiced motion. I hate condoms. They always feel too tight and uncomfortable. This one didn't and I said so and Jennifer looked at me in surprise.\n\n\"You probably use normal sized ones, right?\"\n\nI nodded.\n\nShe grabbed my condom covered cock and squeezed it. \"This is not a normal cock, Bill. Your girth is above average. You need a larger condom. Like this one. Come.\" She grabbed my cock and pulled me over to Elsa. I could now see the full crack of her ass where Betty was eating her. Her asshole was brown and perfect. Her pussy had gorgeous full outer lips and a slim inner labia. She was beautifully pink inside and her clit was a white button glistening with spit.\n\nMy cock twitched hard. Jennifer was staring at Elsa's ass. The tanned globes of her ass were exquisite.\n\n\"Jesus, Elsa. You're gorgeous,\" said Jennifer.\n\n\"Thank you. You are letting your man fuck me?\"\n\n\"Yes. Just this once.\"\n\n\"Thank you.\"\n\n\"Thank me later. Bill, you ready? Look at that pussy. Fuck.\"\n\nI nodded. Betty pulled back but remain squatting. She wanted to watch up close. I really admired Betty.\n\nJennifer guided me behind Elsa and lined my cock head, with the little cum pouch at the end of the condom, up to Elsa's pussy opening. She continued to hold my cock and pushed me inside. She kept her grip on me until her hand got in the way. She let go and pushed my ass, burying me in Elsa's hot, tight pussy.\n\nI moaned with Elsa. I grabbed her hips, stared down at her pulsing asshole, and started to fuck this Norwegian bombshell with long slow thrusts.\n\nIt was almost a mechanical fuck, except Betty kept on insisting to wet my cock every so often. I would pull out and Betty would suck my cock. Eventually Jennifer joined in and fingered Elsa's asshole with a lubed finger.\n\nThe condom felt better than any other I had ever used. Still, it robbed me of the pleasure of feeling everything. I hated condoms, but it was necessary. Before coming to Saint Thomas, Jennifer had taken me to a doctor friend of hers. I was tested for all known STIs before coming here. Betty had insisted on it. The results of some tests wouldn't be back for a couple of weeks, but the main examination and tests gave Betty enough confidence to let me fuck her bareback. Plus, I had been fucking Jennifer for weeks now.\n\nElsa was an unknown and so I had a condom wrapped around me. I thrust harder and harder trying to find more pleasure. It was proving difficult. Elsa was having a great time and had come once already with a funny sounding squeal that had Jennifer biting her hand to stop from laughing.\n\nJennifer saw the effort I was under. She took some lube and covered her hand with it. I looked at her questioningly and she smiled at me. I felt her hand slip between my ass cheeks from behind. She slipped it across my ass and then wrapped it around my balls and tugged them down a little. It hurt a little and I gasped. Then she gentle fondled my balls and I felt my cum rise.\n\nShe continued to stroke my balls with her slick hands. It felt great and I thrust into Elsa. Jennifer slid her hand back and rubbed my taint and I groaned. Encouraged I felt her hand slip back farther and I felt a finger press against my asshole. I shot a look at Jennifer and she smiled and kissed me.\n\nNo sooner had her tongue crossed my lips, but she pushed the tip of her finger into my ass. I grunted and shook my head. Jennifer smiled against my lips and pushed in farther. I had never had this done to me before. A rimming yes, but never anything in my ass.\n\nJennifer timed her finger in my ass with my thrusting. With it lubed up she soon had her finger well into my ass. It felt about ten feet long. She finger-fucked my asshole. I thought I would hate it but in moments I loved it.\n\nElsa asked what was happening and Betty told her. Elsa looked back at me and beamed a smile. \"We are same, yes? Both being finger banged in ass, yes?\"\n\nIt was all it took. My orgasm exploded out of left field. I had never come in a condom before and it felt strange. To Elsa, it set her off. Something about coming in a woman gives them pleasure. It didn't matter I was coming in a condom, I suppose to her it didn't matter either. It was a pleasant orgasm and satisfying. It was not lost on me that three women had helped this happen. I was so fortunate.\n\nI kissed Jennifer and she slowly slipped her finger out of my ass. \"Thank you,\" I said to her.\n\nElsa laughed. \"How about thanking me?\"\n\n\"I'm so sorry, yes, thank you, Elsa. That was awesome.\" I pulled out of her pussy. The tip of the condom was heavy with cum and sagged down.\n\nElsa stood and then sank down in front of my cock. She gingerly took the condom off my cock and held it, swinging heavy with my cum between two fingers. She popped my cock in her mouth and I groaned. The sudden warmth and wetness felt so good. She sucked my cum out of my cock and then smacked her lips.\n\n\"Watch this,\" she said. We watched and she upended the condom into her mouth. My cum poured out onto her tongue and filled her mouth. Once drained she closed her mouth and swallowed. \"Is good, yes?\"",
        "Jennifer laughed and clapped. \"Bravo! Elsa! That was hot.\"\n\n\"He is delicious. Betty was right. She told me how good it was.\"\n\nBetty kissed Elsa. \"It is. You're delicious Elsa. The coconut oil makes me hungry. Speaking of which, we have lunch reservations at one. Jennifer go clean up your beau. Elsa, I'm afraid we need to run. Come by on Monday. We can entertain each other. Is your sister and her husband still here?\"\n\nElsa nodded, looking pleased.\n\n\"Good bring her along. My husband wants to fuck her sweet ass again.\"\n\n\"Is good. Her husband is ready now. You should know.\"\n\nBetty looked surprised. \"Really? I'll let my husband know. He's wanted that ass for a long time. Now, run along.\" Betty slapped Elsa's ass with a loud retort that had me wincing.\n\nElsa fixed her top and pulled her bottom back up. She stopped near me and then kissed me long and hard. \"Thank you, Bill.\"\n\nElsa moved to Jennifer and kissed her, too. \"Mostly, thank you for sharing. You are as Betty always said, a good person. I am envious of you with him.\"\n\nJennifer looked at me for a long moment before answering. \"We are good for each other.\"\n\n\"Yes, is true. Ciao!\"\n\nElsa left and we stood staring at each other. There was an uncomfortable silence.\n\n\"Did I just fuck up?\" I asked.\n\nJennifer shook her head and looked away. Betty made a small laughing sound and came over to me. I was aware I was still naked with cum leaking out of my cock.\n\n\"No, Bill. We did. Jennifer isn't ready to share you yet. I started that little ball rolling and Jennifer knew. I think she hoped you would decline Elsa. That's stupid and she knows it. Elsa is a fucking sex weapon. Who could resist that?\"\n\nBetty turned to Jennifer. \"Go take your man into the bedroom and clean him up. Fix this. Go.\"\n\nI picked up my shorts from the floor and headed to the bedroom taking Jennifer's hand in mine and pulling her along.\n\n\"Oh, Bill,\" said Betty and I stopped and looked back at her. \"The new clothes look great on you. You're taking the watch, too. I won't take no for an answer.\"\n\nI nodded and then pulled Jennifer into the bedroom. I closed the door and then she was in my arms holding me.\n\n\"I hated that, Bill!\"\n\n\"I could see that. I'm sorry. I fucked up.\"\n\nJennifer pressed her face into my shoulder. I held her and felt her shaking. She was crying. \"No, it was me. I saw Betty sic Elsa on you. I knew she would hit on you and I knew you wouldn't be able to say no. I've been encouraging you. Pushing you.\"\n\n\"Because you want to see me say no, is that it?\"\n\nShe nodded against my shoulder and her crying grew stronger. I let her cry. I felt terrible. I should have said no but everything about this trip screamed no boundaries to me. I felt liberated and a new man. I was waking up to someone new and I liked this new me. That I had rose to this level was all thanks to Jennifer. I truly loved her. She was my muse, my hero, and my lover.\n\nI sat her down on the edge of the bed and held her until the crying stopped. She sniffed against my shoulder but kept her face hidden.\n\n\"I'm not going to lie to you, Jennifer. You've woken up something inside me. I feel different about myself. More sure of who I can be. Who I want to be. I've been a writer all my life. I wrote erotic fiction fuelled by a sexual hunger than always lay just under my sense of decency. You've pulled back the cover and what scared me before now excites me. I owe all that to you. Look at me.\"\n\nShe shook her head.\n\n\"Look at me, Jennifer.\"\n\nShe tentatively raised her head and looked up at me. Her eyes were red-rimmed. Snot ran from her nose. Her face was blotchy from crying. She looked terrible, but I loved her all the more. I kissed her snot and tear covered lips.\n\n\"I love you, Jennifer. It will always be you in my life. The one I want and need. You fulfil me. Make me something better. Stop crying. I won't touch another woman ever again.\"\n\nJennifer sniffed and shook her head. \"Yes you will. I need you to be with other women. Just on my terms. Okay? It's not fair and probably bullshit on some level. But I get to decide, okay?\"\n\nI didn't understand and didn't truly care. If she wanted to run that part of my life I would let her.\n\nShe looked up at me waiting for an answer. \"I'm a jealous person with you. I don't know why. I've never been that way before.\"\n\n\"Have you ever been in love before?\"\n\nShe shook her head.\n\n\"Maybe that's why. You want to possess me. But it can't be that way. I don't own you and you don't own me. Problem is, the lifestyle you live involves intimacy with so many people. You're an escort. You asked me to get past you sleeping with clients. I did. For you. You can't hold me to a higher standard.\"\n\nJennifer didn't look happy, but she nodded, eventually.\n\n\"Now what?\"\n\nJennifer pulled away a little and then noticed my limp cock in my lap. \"I clean this up and we head to lunch.\"\n\n\"Okay.\"\n\n* * *\n\nLunch was wonderful. Betty had influence and we were treated to a special meal from the head chef herself. Small plate after small plate were brought out, explained in detail by the chef, and consumed to exclaims of joy.\n\nEverything was paired with wine. Bottles were opened, small amounts poured, and the bottles were set aside. It was the most decadent meal I had ever enjoyed. The plates were small, but the quantity soon had us complaining and begging off anything else.\n\nThe chef joined us and we shared glasses of sherry. We talked for a couple of hours. I learned more about cooking than I ever had. The chef and I hit it off and discussed so many recipes and tricks of the trade. She was a middle-aged woman, and not bad looking at all.\n\nI noticed her touching me more and more and looked over at Jennifer. She rolled her eyes and then nodded. I could see the humour touching her eyes. Betty whispered something to the chef and chef looked at me in surprise and then nodded.\n\nSoon I was eating the chef out in a backroom. She didn't want to fuck and didn't want to suck me off. Betty offered her a good pussy eating and the chef jumped on the chance. She tasted good. She was responsive but oddly quiet. She made no noise at all and I was a little disappointed. I licked her pussy, sucked her clit, rubbed her g-spot, and drank her juices when she came.\n\nI kissed her goodbye and left to join Betty and Jennifer. Jennifer wiped my face with a napkin and then kissed me. \"Good boy,\" she said and dragged me out of the restaurant.\n\nThe rest of the day was a whirlwind of shopping. Betty insisted on buying me clothes. She enjoyed pampering me. Jennifer was overjoyed and ran around finding clothes for me to try on. The ladies would sneak grabbing my ass and cock whenever they could. I would change clothes and strut about showing them off. The ladies would vote, and clothes would go into one pile or another.\n\nIn the end, a massive parcel was put together and Betty had it mailed off to my address back in Canada. I had no idea how much she had spent but she clearly enjoyed spoiling me. I looked at my Rolex and saw the time. Betty had wanted to know when it was five in the afternoon. I told her and she clapped her hands.\n\n\"Back to the condo!\" she declared.\n\nWe found the limo and got in back. It was a long drive and I spent the time kissing both women and pleasuring them with my hands and mouth. When we got back to the resort Betty insisted I take Jennifer for a walk along the beach.\n\nWe left hand in hand and walked the beach and watched the sunset. It was glorious. We talked about everything and anything. I was so happy with her. The thought of spending my life with her popped into my head and once there it grew roots and sprouted high into the air. My heart wanted it so bad my emotions threatened to overwhelm me.\n\nJennifer noticed and asked what was wrong. I couldn't tell her and wrapped her up in my arms and held her instead. My heart was betraying me. I was married and had made vows with Nancy. I found it odd I hadn't thought of her once in the past few days. She seemed a distant memory and I felt a sadness. I realised I could no longer pretend my married life was anything more than what it was: empty of love.\n\nI had fallen in love in my early twenties to a gorgeous girl from Quebec City in Canada. It was full-blown love and when she dumped me I never truly recovered. I met my wife years later and thought it was love. I knew it never reached the same intensity as my first love but thought that was normal.\n\nNow, looking at Jennifer I felt that same intensity with my first love. I loved this woman so very much it hurt. I didn't know if she felt the same way. I could never tell her. When we returned home tomorrow, I would be back in my marriage and sitting outside in my fort writing erotic fiction. Jennifer would go back next door and receive clients and fuck them.\n\nI felt a terrible depression strike me and I squeezed my eyes against the tears. I went to suck in a breath and a sob escaped me, embarrassing me to my core. Jennifer pulled herself out of my arms and held my face.\n\n\"What's wrong? Bill? Talk to me!\"\n\nI shook my head and tried to turn my face away but Jennifer held me firm.\n\n\"Talk to me, Bill. What's wrong?\"\n\nI hated crying in front of her. I felt so weak and defenceless. She didn't need to see this rare part of me. I shook my head refusing to answer.\n\nShe kissed me then. Tenderly. Like a lover would. Like someone who loved me regardless of my weakness. My grief rose hard and fast and I found myself in her arms sobbing. She stroked my back and let me cry. I had never done anything like this in my life. With Jennifer I felt safe and secure. She didn't ask me to explain. She merely held me.\n\nAfter a time I calmed myself and got control over my emotions. I pulled back and Jennifer wiped my face searching my eyes. \"Are you okay now?\"\n\nI nodded.\n\n\"I feel the same way, Bill. This is so much to take. We go home tomorrow. Is that what's bothering you?\"\n\nI nodded again.\n\n\"Me too. It will never be normal again, will it? What happens to us?\"\n\nI looked into her green eyes and saw her sorrow. Her eyes were red-rimmed. They seemed to be a lot these past few days. I reached up and pulled stray red hairs from her face and kissed her softly. \"I don't know. I'm scared.\"\n\nJennifer's chin quivered. I could see her fighting the emotions. We were too raw. Too exposed to one another in ways that proved our love for one another and made it all worse somehow. What I wanted, I couldn't have. I would return to my mundane life and pretend to be happy for years to come.\n\nJennifer grasped me and pulled me in tight. It was her turn to cry and she did for a long time. I ran my nails down her back and held her until she grew limp. She slept against me and I watched the stars emerge listening to the gentle surf crash on the beach.\n\nI forced everything into my memory. I would always have tonight with her on the beach. It was our time together. It would have to be enough to hold me together.\n\nWe returned to the condo to find hotel staff leaving with empty trays. We let them pass and walked in to find Betty waiting for us. She took one look at us and sniffed and told us to follow her. We went upstairs and out onto the massive balcony looking out over Nazareth Bay. Dinner had been laid out for us. Every type of seafood was presented. We oohed and awed and dug in.\n\nFresh oysters, massive prawns, lobster, salmon and other unknown fish was laid out with professionalism. Everything was perfect. We fed each other, drank expensive wine, and laughed our cares away. I caught Jennifer looking at me and we shared a moment. She raised her glass to me in a little salute and I copied her.\n\nI noticed Betty looking between the two of us and she tutted. \"You two are fucked,\" she said and Jennifer shot her a look of surprise. \"Don't look at me that way. You've gone beyond friendship. You're madly in love with each other, aren't you?\"\n\nWe looked at each other and said nothing.\n\n\"I can see it. I saw it the moment you entered the condo. Jennifer, he's married and you fuck men for money. How is this going to work, huh? This is going to be an epic tragedy. I don't see a happy ending for either of you.\"\n\nI had nothing to say and either did Jennifer.\n\nBetty sighed. \"I can't blame you. You're perfect for each other. I'm soaking in the joy of it and taking advantage of it. You keep touching each other. Little touches, just making sure the other is still there. The little looks. The kisses. Jesus, Jennifer I can smell your arousal around him. Its thick and cloy. I've seen you cum before but with him? Jesus. I've felt it, too. He fucked me last night like no other time in my life. I only wish Roger could do that to me. But it's more than sex. It's raw and real.\"\n\nBetty sighed again and swallowed a large gulp of her wine. \"You actually remind me of Roger and I. He swept me off my feet. Made me feel like a woman and not some whore. Which I was. Don't look at me like that Jennifer. You're a whore, too. You know it. A pretty spectacular one but a whore nonetheless. Him? He's a dream come true, just like my Roger. A perfect man. The one you read about in romance novels. Tall, dark and handsome with a magic cock. You won the lottery with him. And now you want to cash in and you can't. He's taken, love.\n\n\"Here's what I suggest. We have tonight. Tonight we fuck like there's no tomorrow. But tomorrow, you need to find a way past this. To go back to your lives. I think you know what you need to do, Jennifer. We talked about it. Make the hard choice.\"\n\nJennifer looked at me and I tried to figure out what Betty was suggesting. I could see the grief in Jennifer's eyes. Then I understood. \"You're going to move away, aren't you?\" I asked, knowing the answer.\n\nJennifer nodded and a tear slipped down her cheek.\n\nI looked out over the bay. I watched a yacht under power steam past the resort. The upper deck was lit up and people were partying by the looks of it. I wish I could join them and be as carefree. I looked back at Jennifer. \"I understand,\" was all I said and chugged my wine.\n\nBetty refilled it. \"Good. You're a smart man, Bill. I like you. You remind me of my husband, except you have a smaller cock.\"\n\nI blinked at her in surprise.\n\nBetty laughed. \"Yup,\" she said and held out her hands about ten inches apart. \"This fucking big. You'd think that was great but Jesus I miss a man pounding my crotch hard. He can't or he'll tear me apart. Drives him nuts, the poor dear.\"\n\nI looked at Jennifer and she had a wry smile surrounded by tears. She nodded.\n\nBetty pushed my glass closer to me and I picked it up. \"You have the perfect cock, mister Bill. Now don't let it go to your head. It's just the right size and thickness. I can't wait to gobble it up tonight. Speaking of which, no more wine for you. I want you to last, but I also want you to produce more of that delicious cum for me.\"\n\nI nodded and sipped my wine.\n\n\"Tonight will be memorable, I hope. Jennifer here is going to pop your cherry. I want to watch that. I'm soaking wet right now thinking about it. So let's drink a little more. Oh wait, wait here a moment.\"\n\nBetty rose, slipped a little sideways and held the table for balance. She laughed and then darted inside. She came out a moment later holding a rather large blunt in her hand. She brandished it like a trophy. \"For my Canadian friends! Pot! Best thing you guys ever did, other than hockey and poutine.\"\n\nI smiled and saw Jennifer's face light up.\n\nBetty lit the blunt and took a large drag and passed it to Jennifer. We passed it round and drank our wine and laughed. Jennifer left at one point and came back with my new iPhone. She helped me set it up and enter all my details. I noticed the gmail icon had a large number next it. Jennifer told me to ignore it and then entered her contact information.\n\n\"There now we can text wherever we are. Stay in touch.\" She looked up at me. \"Exchange dirty pictures.\"\n\nThat interested me and I smiled. I felt the pot hit me and suddenly started laughing for no reason. Jennifer joined me and then climbed into my lap and tried to kiss me while laughing. It was hilarious.\n\nBetty made a little coughing noise and we looked over and saw her sitting there completely naked. She sipped her wine and held a very dignified pose. \"If you two are about done, my cunt would like some pounding. It's feeling very lonely.\"\n\nJennifer got out of my lap, mostly falling, but managing not to hurt herself. She crawled into Betty's lap and started French kissing her. I rose, unsteady and undressed. My cock was standing straight up and I stroked it watching the girls.\n\nBetty helped undress Jennifer while she continued to kiss her. For the next little while they just kissed and enjoyed each other. Jennifer lifted Betty's right breast; her hand dwarfed by the size and lowered her mouth to the nipple. She sucked like a new-born making mewing noises. Betty closed her eyes enjoying the sensation.\n\nI could smell their pussies. My cock grew harder and I let it go, afraid to spill cum. I watched them enjoying the sight. They were so beautiful to me. Strong sexual women enjoying each other. It was every man's dream.\n\nAfter a time, Jennifer let go of the nipple and kissed Betty. She looked over at me and winked. \"Time to get you ready, big boy.\"\n\n\"Ready?\" I asked.\n\n\"Yup. Come. Into the shower. We need to prep you.\"\n\n\"Prep me?\"\n\nBetty laughed at the expression of horror on my face. I knew it was there. I was feeling it. \"Yes. We need to rinse out your ass, you poor man. You're getting your cherry popped, remember? What did you think we meant?\"\n\nI stammered some sort of reply and the girls laughed. Jennifer got up and grabbed my hand and pulled me out of my chair. Thank god it was covered in fabric or I would have left a pound of ass flesh behind. Laughing she dragged me inside and into Betty's bathroom. It was massive with a glass-enclosed shower big enough for six people. She turned on the four shower heads and soon warm water cascaded over us.\n\nBetty joined us and took out body wash and started soaping us all down. It was a game and fun and exciting. Soon I had four hands soaping my ass crack with zeal. I cried out and tried to escape and only managed to land on my ass. Betty pounced and held me down. Jennifer grabbed the shower head on a long hose and aimed the spray on my ass. I fought as best I could but soon they had me on my back with my legs spread wide. Jennifer took soap and without much warning started soaping the inside of my asshole.\n\nShe was as gentle as she could be but it clearly went past my boundaries. She was finger fucking my ass and laughing. Betty cheered her on and I found it easier to let her go than anything else. My cock was hard and gave lie to my complaints. Soon she was forcing water from the shower head into my ass. I looked down and saw the water swirling slightly brown and groaned in embarrassment.\n\nJennifer declared me fit and then lay back. I watched Betty do the same to her. I admit it was erotic to me. I watched Jennifer's asshole get stretched with Betty's fingers and get soaped up inside. She was rinsed out and then it was Betty's turn. I helped and held the water.\n\nAfter she was clean, we made out on the bottom of the shower, rinsed clean with my insistence. I was glad I was high as a kite. It removed all my inhibitions and let me enjoy it for what it was: trust.\n\nWe dried off and stumbled into Betty's bedroom. Betty pulled back the sheets and Jennifer produced a large rubber sheet and they wrapped it over the large king-sized mattress. Night tables were opened and all sorts of toys appeared. Dildos, oils, lube, strap-ons, and strange little narrow dildo.\n\nJennifer pulled me onto the bed and pushed me back and climbed up onto my face. She lowered her gorgeous pussy, swollen with her lips spread, onto my hungry mouth. My heart leapt in joy at the first taste. She was so sweet and juicy. I drank from her pussy like a starved man. I tried to be gentle but my hunger took me. I ate her. Hard. And had her coming in minutes. She flooded my mouth with her juices and I never tasted anything sweeter.",
        "I felt Betty engulf my cock with her mouth. She drove it deep and I felt my cock head strike the back of her throat. She choked and coughed but didn't stop. I felt warm spit run down my shaft and over my heavy balls. She rubbed the spit all over my balls and pulled my sack down, stretching my scrotum painfully. I jerked, but she didn't stop. She was sucking my cock hard, driving it deep into her throat and gagging and spitting.\n\nHer hand moved off my balls and I felt it press up between my ass cheeks. In one motion she drove a finger hard into my asshole. I cried out against Jennifer's pussy. Jennifer pressed down harder and for a moment I couldn't breathe. Jennifer didn't seem to care. She ground her pussy against my face and nose. I struggled to breathe and tried to lift her off. I felt my heart pounding and felt the room spin.\n\nJennifer lifted off me and I sucked in air with three large gasps. She dropped down on me again and cut off my air. I licked her hard, ramming my tongue deep into her pussy. I was getting angry and reach up and drove a finger into her asshole, hard. I heard the muffled sound of Jennifer crying out and her pussy flooded my mouth. I drove my finger in and out of her asshole as hard as I could, punishing her. I needed to breathe and rammed a second finger in her ass. She cried out and lifted off me. She reached down and circled her engorged clit with two fingers. I kept jamming her asshole.\n\nMeanwhile, Betty was fucking my asshole with her finger and sucking me hard. I felt her hand shift and suddenly two fingers were deep in my ass. I cried out, sucking in air. I felt my cum boil. My ass hurt, but Betty's cock sucking skills were overcoming the pain. I was lost between two worlds. I watched my fingers plunge into Jennifer's asshole, my fingers pulling her sphincter out obscenely. I tried to spit upwards to lubricate it but missed. My spit landing on my chest.\n\nBetty stopped sucking me and slurped up my spit. Oh my god, I thought. What the fuck are we doing?\n\nI felt the bed shift with Betty's weight and then Betty grabbed my hand that was finger-fucking Jennifer's ass. She pulled it free and then squirted Fuck Water over my fingers. She rubbed some around Jennifer's asshole and then lined my fingers back up. I plunged them inside and Jennifer groaned hard.\n\nWith the lube I could slide my fingers in easily. I watched myself plunge two fingers in deep. I swirled them around inside and pulled them out and back in. Jennifer was pushing back, enjoying the penetration. I added a third finger and Jennifer came. I was watching her pussy and saw it contract in a blinding blur. Because I was watching I saw the liquid leaving her pussy and splash on my face.\n\nI loved it and raised my head and sucked on her. She bucked on my face and grappled with my head until she got purchase and pushed my face hard into her pussy. She gushed more liquid and I drank it. I loved this woman.\n\nI felt Betty lower her pussy onto my cock and I thrust upward. Her hands were just above my knees and I knew she was facing away from me. She was squatting on my cock, her knees bent. She drove her pussy down hard on my cock. Her right hand left my leg and fumbled over my balls and reached lower. Her finger plunged back in my ass and I thrust hard against her.\n\nFor a time we fucked like that. I ate Jennifer and fucked her ass with my fingers. Betty rode my cock and fingered my ass. It was bliss.\n\nI tried to add a fourth finger to Jennifer's ass, but she stopped me and told me to save that for Betty.\n\nI felt my first orgasm rise within me and warned the girls. They clambered off of me and in moments I watched as they held a small cup, like a shot glass, near the tip of my cock and stroked me. Betty started licking my balls to speed me up. I cried out and ejaculated hard. Jennifer caught my cum in the cup and made happy noises.\n\n\"I love watching him cum, Betty,\" she said. \"Look at it all. Mine.\"\n\n\"Mine too,\" said Betty and watched me cum.\n\nI was looking down at two gorgeous women stroking my cum into a cup with rapture on their faces. It heightened my orgasm and I filled the small cup.\n\nMy head fell back and I gasped for air. Jesus, this is the best sex of my life.\n\nI looked back up and the girls were handing the glass back and forth and taking small sips. They talked about the texture and flavour like wine connoisseurs. They smiled at me with cum coated teeth and lips.\n\nJennifer grinned wider and slid up the bed to kiss me hard. I could taste my cum and grimaced. Betty joined her and I had two cum coated mouths ramming their tongues in my mouth. Before I knew it, Betty upended the remains of my cum from the glass into my mouth and then clamped her mouth over mine.\n\nI had no choice but to swallow. When I did, the girls cheered.\n\n\"Gah!\" I said. \"I need something to drink!\"\n\n\"How about a fresh fucked pussy?\" said Betty and she climbed up onto my face.\n\nBefore I could protest, I had her pussy in my mouth. It tasted different. Richer. Tangier. I liked it and licked her harder.\n\n\"Ooh, he likes it, Jennifer!\"\n\n\"Mmm, good. He's in for a lot tonight.\"\n\n\"So much for vanilla sex with him. Tonight he becomes a new man. Lucky boy.\" stated Betty and then moaned when I bit her clit.\n\nHer clit was like an object in my mouth. I hate to say it, but it was like a tiny penis. I sucked on it and then blew it like I would a small penis. Betty responded by leaning forward and actually kind of fucking my mouth with it. I loved it and sucked and licked it.\n\nShe came with a gush of thick liquid. It poured out over my chin and down my throat. It tasted so sweet. I wanted more and moved my mouth down to lap it up.\n\n\"Oh, he loves pussy cum. Look at him go.\"\n\n\"So hot,\" stated Jennifer. \"We've all cum now. Time for a break.\"\n\nBetty moved off me and I tried to keep my mouth on her pussy. She swatted at me and laughed.\n\nI struggled up onto my elbows and looked around. The girls were heading to the bathroom. \"Where are you going?\"\n\n\"Pee and warm towels. Come on.\"\n\nI got out of bed and entered the bathroom to see Betty sitting on the toilet and peeing. I looked away and started to back out. Jennifer laughed and grabbed me. \"Don't. There's nothing here to be ashamed of.\"\n\nJennifer pushed me to the sink and started to run warm water. She grabbed hand towels and soaked them. She started to clean me up when Betty got off the toilet and wiped herself.\n\n\"Next!\"\n\nJennifer went over and sat down, watching me watching her. I soon heard her peeing and looked away. Jennifer laughed. Betty took the towel and started cleaning me where Jennifer had left off.\n\n\"Done!\" declared. \"You're next, Bill!\"\n\n\"Um, what?\"\n\n\"Get over here.\"\n\nBetty pushed me over to the toilet. And then reached around me and held my cock, aiming for the toilet. Jennifer joined her and held my cock, too.\n\n\"Um, I can't.\"\n\n\"Sure you can. Just let go.\"\n\nI tried, but I was too self-conscious. \"I can't.\"\n\n\"We aren't going anywhere until you do.\"\n\nThe girls remained there holding my cock. I was quite hard but unable to let go.\n\nThey refused to leave and I closed my eyes and imagined they weren't there. Thankfully, all the wine made it so I had to go. I started in a spurt and the girls squealed. It shut off the flow and they complained.\n\nI relaxed again and finally I was able to pee. It poured out of me and the girls sucked at aiming properly. My pee went everywhere, but the girls cheered anyway. Soon, and thankfully it was over. They gave it a good shake and Jennifer insisted she dab the tip with toilet paper. We flushed and then cleaned up the mess.\n\nI washed the girls with wet hand towels and kissed their pussies and assholes, making them squeal again. I chased them into the bedroom and we collapsed in the bed. We kissed and groped and fondled each other. Betty came and so did Jennifer.\n\nJennifer produced a double-ended dildo and I got to watch them pleasure themselves. It was exciting. I licked their clits while the dildo plunged in and out. I really enjoyed that. When they had both said they had cum enough we fell in bed together, with me in the middle and both girls latched onto me on either side. We dozed for a bit.\n\nI woke to Jennifer sucking my cock and Betty licking my balls. I came in about five minutes. The girls swapped my cum and thanked me for the deposit.\n\nThey brought me back to life and then insisted I ass fuck them both. They lay over the edge of the bed, with their asses in the air. I lubed them up and then slipped my cock inside Jennifer.\n\nThe image was seared into my mind. I watched my engorged head of my cock spread her sphincter wide and then slip inside. She clamped down hard on my cock and I loved the tight little grip. When she relaxed and told me to go for it I started slowly inserting my cock. Betty liberally added lube. It spilled everywhere and I saw the utility of the rubber sheets. Not soon enough I was all the way inside Jennifer. She moaned and I started thrusting gently. I watched my cock slide out, pulling her asshole with it. I loved being in her ass.\n\nAfter a time I was able to thrust freely. Betty said it was her turn. I pulled out of Jennifer and Betty slammed in a butt plug to replace me. I worked on Betty next with Jennifer's help. Soon I was deep inside Betty and thrusting happily away. Jennifer assumed the position and pulled the butt plug free. I added more lube and drove my cock into her ass.\n\nI traded back and forth. Going from asshole to asshole relishing the sensations and sights. The girls were moaning hard and thrusting back at me. Jennifer came first. I slammed my cock hard inside her and she cried out in pleasure frigging her clit. As soon as she finished, I pulled out and she collapsed on her side.\n\nI drove my cock into Betty and fucked her ass hard. She came in moments crying my name. Her pleasure tipped me over and I came inside her ass. This sent her off again. I shot my cum deep inside her ass and grunted with pleasure. I pulled out and Betty swung around and drove my cock into her mouth sucking like a mad-woman. I had one last squirt of cum and she moaned when she felt it enter her mouth.\n\nMy cock, normally hard, deflated. I was done and said so. Betty fell onto the bed and curled up next to Jennifer who reached out and pulled her closer. I staggered into the bathroom and warmed up two hand towels with water. I brought them out and cleaned up the girls, wiping off lube and my cum that was leaking from Betty.\n\nI grabbed the duvet and threw it over the girls. They fell asleep like that, huddled under the duvet with little smiles on their faces.\n\nI went outside and lit up a smoke. I found the wine bottle and filled my glass. The night air was warm but cooling on my flesh. I smoked and drank and thought about tomorrow. It would be here too soon, I knew. Jennifer would move away and my life would try to return to normal. Except I knew there was no normal, not anymore.\n\nI wanted this life with Jennifer. More than anything. I wondered what would need to happen to make that a possibility. I could leave my wife, but knew I could never do that to her. I saw despair in my future.\n\nI went back inside and crawled under the duvet. The girls grabbed onto me and held on. I smiled and felt sleep take me.\n\nI woke to someone sucking my cock. I stirred and looked down to see Betty smiling up at me. She was really good at sucking cock and I smiled back at her. I looked to my left and saw Jennifer putting on a strap-on. There was a smaller penis on the inside and I saw her slip it inside herself. She smiled at me.\n\n\"Awake I see,\" she said.\n\n\"Yup.\"\n\n\"Betty is getting you ready.\"\n\n\"Ready for what?\"\n\n\"I'm going to fuck your ass, Bill.\"\n\n\"What? No, you aren't.\"\n\n\"You lost the bet Bill.\"\n\n\"Yes I did, but that was for yesterday. Today is Sunday.\"\n\nBetty popped my cock free. \"Nice try but nope.\" She resumed sucking my cock.\n\n\"You're gonna love this Bill,\" replied Jennifer. \"So will I. It's inside me too. When I fuck you, I also fuck myself. Trust me, Bill. You are gonna want this all the time afterward.\"\n\n\"Nope. No way.\"\n\n\"It's not gay, Bill. It's fun.\"\n\n\"Not gonna happen. Don't I have a safe word or anything?\"\n\nJennifer gave me a strange look. \"Uh, no. Just relax. This is going to rock your world.\"\n\nBetty looked up. \"If it helps, she did this to my husband, too. He protested louder than you. In the end, he begged for more.\"\n\nI shook my head. Betty snorted and sat up between my legs. I could see she had one of the thin dildos there and the bottle of lube. Without preamble she squirted lube onto her hand and then smeared it on my asshole. It was cold and I cried out.\n\n\"Sorry, normally we warm this, but that's at home, not here.\"\n\nBetty lubed up the thin dildo and then pressed the narrow tip to my asshole. I clamped down hard.\n\n\"Relax, Bill. Trust us. Do you trust us?\"\n\nI shook my head.\n\n\"Pfft, liar. Here we go!\" Betty pushed the dildo tip past my shut sphincter. Unfortunately, it slid in easily and I grunted. I wasn't going to admit it, but it did feel good. Betty must have known because she winked at me.\n\nJennifer was watching while lubing up her giant phallus on her strap-on. No way that was going inside me.\n\n\"That's too big. It won't fit.\"\n\nJennifer laughed. \"It's the same size as your cock, Bill. I took it, little ole me. All the way in. You fucked my ass hard with your cock, Bill. I loved it. You will, too. Trust me, love.\"\n\nBetty had pushed the little dildo thing in deeper. I felt a strange sensation that didn't feel bad at all.\n\n\"That's your prostate, dummy,\" explained Betty. \"It's your g-spot.\" She pushed in further and I groaned. Dammit but it did feel good.\n\nBetty pulled out and then slid it back in. She slowly repeated this over and over. I moaned and my cock was standing straight up. I could see pre-cum spilling out the tip. Betty leaned over and sucked it into her mouth. I moaned at the added pleasure.\n\n\"So delicious,\" she said and smacked her lips. Jennifer gave her a quick kiss with tongue.\n\n\"Deeper, Betty. Look how he's taking it. He loves it already.\"\n\nBetty obeyed, adding more lube. The thin dildo grew wider farther down. As I watched I could see at least six inches were inside me. My insides tingled and my cock grew harder.\n\n\"Yup he does.\"\n\n\"You need to go bigger,\" stated Jennifer.\n\n\"Yup.\" Betty produced a dildo. She lubbed it up and then pulled out the thin one from my ass. I felt the tip of the larger dildo press against my asshole and I clenched up. \"Easy, Bill. Relax.\"\n\nI did and felt the dildo push past my sphincter. I grunted at the size. I felt stretched wide open. It slid in further and Betty added more lube. She pulled it out and pushed it in farther. I couldn't help it: I moaned. It felt great.\n\n\"There you go, Bill. Good job. Relax.\"\n\nSoon Betty had the large dildo inserted deep in my ass. The feeling of being stuffed was strange and confusing to me. She worked it slowly in and out and I felt a strong stirring of pleasure. It was so foreign to me but I wanted more. Betty worked the dildo in and out adding more lube.\n\n\"He's ready, Jennifer.\" Betty moved aside leaving the dildo inside me. Jennifer climbed on the bed and knelt between my legs. Her strap-on looked obscene, jutting forward, a large penis that I knew would soon be inside me.\n\nJennifer looked up at me with a soft expression on her face. \"I love you, Bill. I need to do this. You're going to love it. I find it so empowering. I'm going to take you. Fuck you like you fuck me. We're going to cum together. My pussy is on fire right now.\"\n\nI nodded and Jennifer smiled. I never wanted to see that smile leave her face. \"I love you, Jennifer.\"\n\nShe nodded, slipped out the dildo in my ass, and pushed her strap-on inside me with one long stroke. I moaned at the feeling of penetration. This was my lover. The love of my life, taking me. Fucking me.\n\nShe didn't hesitate. She started slowly fucking my ass. I could see when she pulled back that the part of the strap-on inside her pussy was pulled out slightly. When she pushed back inside, it penetrated her as well.\n\nIn moments, she found a rhythm. We rocked together. Fucking each other. Her moans turned to cries of pleasure and I joined her. She reached down and stroked my cock, mimicking her thrusts with her hand on my cock. I was soon lost to the pleasure. I had never felt anything like it. It was beyond pleasure.\n\nSoon she was humping madly at me. Her pleasure was mine. Her hand slipped off my cock, but Betty was there and replaced her. We humped like mad. Straining and crying out.\n\nMy orgasm started in a strange place. It started deep inside my ass and spread out to my stomach and groin. It surged through me and I felt a strong tingling from the base of my skull and down my spine. It built in waves, each wave stronger than the last. Each time I was sure I would explode with cum but it would sink back and rise stronger. It frightened me with the intensity. My eyes were wide and boring into Jennifer's. I could see her excitement. She knew what she was doing to me. Knew the signs. She thrust harder and deeper. The waves came faster and faster.\n\nThe orgasm hit me like a sledgehammer. The intensity was off the scales. I felt like I was dying in the most pleasurable way possible. The orgasm hit me, but I failed to ejaculate. The waves hit over and over. An orgasm unlike any other in my life. It went on and on. Jennifer was screaming in pleasure and the sight of her face lit with pleasure sent my orgasm to the next level.\n\nI came with a noise from my cock. I heard my cum squirt out of my cock with the force. We all heard it. I stared in amazement as my first rope launched straight up into the air. It soared above us and hung there. My second rope shot nearly as high. Both streams of cum combining and falling back to earth. My third rope shot up and I cried out with the pleasure. My cum splattered all over me. It landed on my chest, stomach and face. A fourth rope shot out and then a fifth.\n\nIt almost hurt. All the muscles in my lower body strained to force my ejaculation out of me. Betty stopped stroking me and held my cock as it twitched hard in her hand. I kept cumming. My cum oozed from my cock and my orgasm continued. I threw my head back and cried out Jennifer's name. I loved her more than life in that moment.\n\nI don't know how long the orgasm ripped through me. At one point I wanted it to stop. It was too much. Soon it subsided and I lay spent, drained of all energy. I felt the dildo pull itself free from my ass and gasped in relief. I felt tongues, warm and hungry consuming the cum off my body and I luxuriated in the feeling. It took them a long time to clean me up. I had never cum that much before.\n\nI heard their pleasure and heard them kissing. I closed my eyes and when I opened them the girls were pressed up against me and holding me tight. Time had passed. I must've dozed.\n\n\"Is it over?\" I asked.\n\nJennifer laughed. \"He's back! Yes, it's all over. You were great, Bill. You came so hard and so much. Jesus, a litre of cum at least!\"\n\n\"Don't exaggerate, dear,\" chuffed Betty. \"Maybe a quarter cup?\"\n\n\"Seriously?\" I asked.\n\n\"Yup. That was impressive,\" declared Betty. \"You won't be able to come for a long time, I'm afraid. That pretty much emptied you. Oh, and don't get a prostate exam anytime soon. The numbers will be off the chart.\"\n\n\"Okay. I think I just had an exam.\"\n\nJennifer laughed and her face rose over mine. I struggled to focus on her. She kissed me. \"I love you, Bill.\"\n\n\"I love you, too, Jennifer. Thank you for that. It was amazing. I don't know how to describe it.\"\n\n\"I do. It's what you do to me, baby. That's what it feels like.\"\n\n\"Really?\"\n\n\"Yes, baby. Now go to sleep. We fly out tomorrow. It's late.\"",
        "\"Okay.\" I closed my eyes.\n\nThey thought I was asleep, but I hovered at the edge of it.\n\n\"Oh, Jennifer, what are you going to do?\" I heard Betty say.\n\n\"I don't know. I love him so much. But it can't work, can it?\"\n\n\"He's married and from what you say he will never leave his wife. He's duty bound, the poor man.\"\n\n\"He's amazing. I've met so many men in my life, but never anyone like him.\"\n\n\"I can see the attraction. He's perfect for you, dear. But he's taken. You've had your tryst. Now you need to let him go.\"\n\n\"I know. I don't want this weekend to end.\"\n\n\"It's been wonderful. My husband is going to be so mad he missed out on this.\"\n\n\"Bill doesn't swing that way, Betty.\"\n\n\"Perhaps. Sometimes it just takes the right setting.\"\n\n\"Hmm.\"\n\n\"I sent him money, by the way. You left his phone unlocked, so I transferred money to him.\"\n\n\"What? He won't like that.\"\n\n\"I don't care. He deserved it.\"\n\n\"How much?\"\n\n\"Fifty thousand. The usual rate.\"\n\n\"Dear Lord, Betty.\"\n\n\"What? I'm rich. So are you. If I can't spend my money on the good things in life what should I spend it on?\"\n\n\"The watch is that much at least.\"\n\n\"It was a gift for Roger. Don't know why I bought it, he already has one. I would rather see Bill wear it, anyway. Women will flock to that like flies to honey.\"\n\n\"He doesn't see it. His attraction. I love that about him.\"\n\n\"He doesn't see it because he only sees you, you know that.\"\n\nThe silence went on, and at some point I truly fell asleep.\n\nEnd of Part Three"
    ],
    "authorname": "Estcher",
    "tags": [
        "cum swapping",
        "erotic coupling",
        "pegging"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/escort-neighbour-pt-03"
}