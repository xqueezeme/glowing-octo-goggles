{
    "title": "Hot Fun with a Stranger Ch. 03",
    "pages": [
        "Though he was more than happy to let Deana finish, once Damien realized she was just in it for the hot sex they were enjoying, and probably didn't feel a thing for him, his heart wasn't in it anymore, even as she gave him the ride of his fucking life. \n\nWatching her full lush breasts bouncing so enticingly that she had his mouth watering for a taste, it still hurt to know that she was only in it for a little kinky fun and nothing else. \n\nAs she mercilessly pummeled his cock, taking him so incredibly deep, with her head thrown back, long dark hair tickling his thighs, the way she dug her teeth into her bottom lip, eyes drifting shut, groaning with a deep sexy throaty moan when she finally came. She quivered into a full-body shudder, coating his balls with her hot slick release. It all just felt too insane to be real and he knew he'd never seen anything sexier than her lost in the feel of him filling her up and giving her just what she needed. \n\nAnd he'd come with the power of a volcano, flooding her pussy with everything he had, and digging his fingers deep into her ass, hard enough to leave marks. Staring hard into her eyes so she could see what he was feeling, as they climaxed together so wickedly hard it left them breathless. But at least for him, no matter how wickedly good it felt -- it just wasn't enough. \n\nBut he still couldn't resist kissing her back when she'd finished by nearly kissing his face off, and wrapping herself around him so tight, he wondered if she'd ever let go. \n\nHugging her close with her warm soft breasts pressed to his chest, brushing her long dark hair out of her eyes to see her pretty face. What he hated even more was that he knew he couldn't do this with her anymore, at least if he hoped to keep his sanity. And he also hated that he lost himself in her every time they were together like this, especially knowing that she only needed him for one thing -- his big fat cock. \n\nAnd once she'd gotten dressed, given him one last lingering kiss and taken a taxi and gone home to change her clothes before heading back to the office for the day, he knew he had some thinking to do. \n\nStaring hard at his reflection in his bathroom mirror, Damien shook his head, wondering what in hell he'd been thinking, getting involved with someone like Deana Maxwell in the first place. Not only was she his bosses daughter, which alone should have made her completely off limits the instant he'd learned who she was, but she was so far out of his league as far as wealth and class went, it was laughable. And of course her old man would probably shit a brick if he ever discovered the way they'd been going at it with each other -- which of course would leave him out of job -- a job he desperately needed right now if he was ever going to get his business off the ground and start making some real money -- so he could plan his future. \n\nSo naturally it made sense, that she only wanted him for a little naked fun and nothing else. After all he was just a security guard, hired to protect the place, and she was not only a top executive in the firm, but was as close to the owner as could be, seeing as she was his only child. Still, whenever he looked at her, the unrelenting ache in his chest that just wouldn't let up told him that what they had was just too real to be nothing but a fling, despite their differences. \n\nAs he reached for his razor and started to shave away the dark scruff on his face, heaving a sigh, he shook his head. He honestly couldn't figure her out. If she was keeping herself detached and just having a few laughs with him, she sure had a funny way of showing it. Especially with how she'd wrapped herself around him like a second skin when he'd held her in his lap last night at her office after they'd made each come so hard they both nearly blacked out. And then again later in his bed, the way she was curled into him so tightly when all they were doing was sleeping, it just felt so right to have her warm and close, so close they were breathing the same air. And he knew she had to be feeling something for him when she'd acted like that. \n\nThen this morning, when she woke him up with his cock buried in her mouth, giving him the best blow job he'd ever had, and then nearly fucked him blind, she couldn't have been faking how she felt about him -- at least he hoped not, because he knew he'd never experienced anything even close to how good it felt with her. \n\nSo maybe what he needed to do was step back and give her some space and let her decide if the only thing she wanted from him was his cock, oh and his mouth, with the way she screamed her fucking head off when he went down on her and feasted on her delectable little pussy. And then maybe he'd know for sure if she just wasn't that into him -- unless of course they were naked and going at it. \n\nSo, later that morning when he went into the office, as much as it pained him to keep his distance from her, he told the other guard Davey that he'd take a turn at keeping an eye on the security monitors, and that Davey could make the rounds, that he normally did, checking out the building, where of course he'd come across Deana alone in her office, instead of him. \n\nComing on evening, sitting upstairs in her corner office, waiting to see if her sexy friend would wander in again, Deana was getting so anxious to not only just see him, but get with him again she was nearly crawling out of her skin. Time just seemed to stand still while she waited for even the slightest sound that might be him. And no matter how hard she tried to concentrate on work, nothing seemed to make any sense. All she could think of was him, and how amazing things had been between them, even when he'd had her handcuffed to her desk, nearly fucking her senseless. She grinned, biting into her lip, or maybe especially when he'd done that. And poor pussy was nearly screaming with need, already dripping just thinking about him. \n\nRunning her hands over the surface of her highly polished desk, closing her eyes and heaving a shaky breath, recalling every last detail, she knew the night before had to have been the best night of her life, having spent it naked with the most gorgeous hunk of a man she'd ever encountered. And now she could hardly wait for him to show up again, and rock her world all over again. And at this point, she was so desperate to be with him, he could do any damn thing he wanted to her, just as long as he gave her what she needed. \n\nBy six thirty she was so on edge, when her phone rang, she nearly jumped out of her skin. But when she glanced at the caller ID and saw that it was just her mother calling to say hello, she rolled her eyes, answered and patiently chatted with her for a bit. But it was same conversation they always had, with her mother's normal little digs: She wasn't still at work, toiling away in her office, was she? And she really needed to get out more and find herself a life away from work. But the funniest of all was when she asked her, \"Deana, how on earth do you ever expect to meet anyone when you're tied to your desk?\" The moment she said that, Deana almost lost it and had to fight not to laugh into the phone since just the night before, she'd never been more elated to be tied to her desk and fucked to within an inch of her life, by her very handsome stranger. But of course if her mother even had an inkling of what her daughter had been up to, she'd probably have a stroke. And since thankfully they never talked long, Deana was saying goodbye and back to waiting him out within a couple of minutes, staring hard at the door, wishing that he'd magically appear. \n\nAnd though she was mostly done with her work for the night, she still waited, hoping like crazy he'd show up. She'd already set aside the print ads that would run in all the major magazines and newspapers, and had okayed the TV spots for the Christmas campaign which was about to start Thanksgiving weekend. And now she just had one thing left to do -- get it on with the man who'd pretty much filled her thoughts non-stop since the first time he'd taken her from behind in that little out of the way courtyard. \n\nAnd at this point she was so desperate for him to come and give her what she needed, she'd happily do anything he'd asked; suck him off, let him tie her up -- and shifting her backside in her chair, she knew she'd even give up her virgin ass, if he'd just show up and stop making her wait. \n\nA few minutes later, she'd just finished emailing copies of the print ads to her father for his final approval when she heard the sound of a door opening and closing and froze with her hands poised on the keyboard. Anxiously lifting her gaze to the doorway, she had to will her heart not to beat out of her chest, she was just so eager to see him again. Time seemed to stand still as she heard a few doors being checked to see if they were locked, and she just knew it had to be him. Her poor pussy was almost dripping with anticipation, and already beginning to tingle crazy hard, just imagining what he might have in store for her tonight, and she kind of hoped he'd have his handcuffs again. Training her eyes on the door, her breath tight in her chest, she couldn't believe her eyes, or how deflated she felt, when tall, lanky Davey poked his head into her office and said, \"Working late again tonight, Miss Maxwell?\" \n\nFeeling her shoulders sag, she was so disappointed she could barely focus on what he'd asked, but somehow she nodded her head and managed to get out, \"Yes.\" But what she really wanted to ask was where the hell Damien was. And why was he here instead of him? But she knew he'd probably find it strange that she'd even want to know. After all, if they were just here to guard the place, she shouldn't care one way or the other who made the evening rounds. And yet she felt like wailing, she felt so let down, knowing that for whatever reason, he wasn't going to show up. \n\nAnd normally she wouldn't have cared, with most guys she knew, at least if he hadn't given her the best night of her entire freaking life and then disappeared. Blowing out a disappointed breath, she never imagined he'd be such a bastard about it. Seemed once he'd gotten what he needed from her -- one last good hard fuck -- apparently he was done. \n\nNo wonder she'd sworn off relationships when they'd all left her disillusioned like this. \n\nThat Saturday night, the big formal Thanksgiving party the office always held prior to the Christmas launch of their latest ad campaign was normally something she enjoyed. But since she'd been saddled with yet another horrible date arranged by her parents, hoping she'd take the hint and find someone they approved of to marry, she was too annoyed with his inane patter to find it in her to relax and enjoy herself. This particular total bore was apparently a lawyer that did some work for the company. Nearly bald, and a little on the short side with remarkably bushy eyebrows that looked like caterpillars wiggling above his eyes while he yammered on about himself, nearly boring her to tears, she could barely stand to listen to him. \n\nEspecially when her mind kept going back to Damien and how insanely hot he'd looked even in just his guard's uniform, with his killer body, sexy dimpled smile and of course that giant monster he had in his boxers. There was just no comparing them. Although Nigel the bore was decked out to the nines in what she knew had to be a ridiculously expensive designer tux, he did nothing for her -- well, aside from making her want to scream. \n\nAnd she also knew there was no way the guy was hung like a horse. And not once in the entire time that he was talking to her, did he smile or say anything clever. The guy was an absolute dud, and all she could think of was losing him and finding a way to leave the party without being noticed. But since the dinner hadn't even started yet, she knew she'd be missed and had to stay at least until the band struck up and the dancing started, which would happen once the speeches were over and she and the other department heads had been introduced by her father, which happened every year. \n\nBut since it was a surprisingly warm night for November, she politely excused herself and instead of heading for the ladies room, where she told him she was going, she took a detour and headed out onto one of terraces of the grand old estate where the party was always held. \n\nAnd tugging her black lacy shawl around her, she was just getting herself unwound, enjoying some fresh air and a fortifying glass of champagne that an attentive waiter had kindly offered her on her way outside. Happily staring out at the surprisingly green gardens, bathed in a soft moonlit glow, wishing she never had to head back inside, she nearly choked on her drink when she heard a deep familiar voice behind her, asking, \"Why are you out here all alone, when you're boyfriend's waiting for you inside?\" \n\nTurning to face him, her jaw actually dropped at the sight of him, dressed completely in black including his shirt and bowtie, in a body hugging tux, he just looked too delectable for words. And staring at him wide-eyed, she knew he could make big bucks if he ever chose to model, he just looked so fucking hot, that every woman on the planet would want a piece of him. \n\n\"He's uh... not my boyfriend,\" she finally explained, at least once she remembered that he was waiting. \"Unfortunately my parents are in the habit of setting me up with a different eligible bachelor every time I have to go to one of these things, so I wouldn't even call us friends.\" \n\nDamien slowly nodded his head, as he feasted on the alluring sight of her with her dark hair up, with a few sexy tendrils framing her face, diamond earrings sparkling in her ears, and her slender neck just begging to be kissed. And the way the shimmery deep blue dress hugged every last one of her curves, he already wondered where the zipper was, so he could get her out of it, to see if she'd be naked underneath. His cock already thickening, just from looking at her, he wanted to taste her lips so badly, but knew he had to hold back. After all, he was here to keep an eye on things, while doing his best to look like a guest. But damn, though he expected to see her tonight, he never dreamed she'd tempt him to cross the line with her again, especially the instant he saw her, looking just too beautiful for words. \n\nAll he knew was that whoever ultimately wound up with her would be one lucky bastard, and he had to admit, it crushed him to know that it could never be him. \n\nStill, against his better judgement, he wandered closer, and smiled into her eyes, when she lifted her glass to his lips and offered him a sip of champagne. Their gazes locked as he had a taste, slipping his hands around her waist and drawing her closer till they were hip to hip. \"I've missed you,\" he told her. \n\nSearching his gaze, confused, she said, \"Well, if that's true, then why did you have Davey come around every night instead of you?\" \n\nHe shrugged, leisurely tracing his finger along her jaw, loving the feel of her silky skin, even as he told her, \"Maybe because I realized it's for the best if we stop this thing before it goes too far.\" \n\nRefusing to accept what he'd said, leaning in and inhaling his intoxicating scent, he nearly had her whimpering, he just smelled so good, and she could feel the warmth of his body getting her all tingly, right through their clothes. And oh dear god, it just felt so good to be close to him again. And right now she knew she'd do anything he asked, if he'd just let her have one more night with him. \"Are you here with anyone?\" she asked him, praying that he wasn't. \n\nHe chuckled. \"No, but some of the ladies that work in your office have been following me around so much tonight, that I came out her for some air -- and to try and escape from them.\" \n\nShe grinned, stroking his cheek. \"Who could blame them when you look this hot, and I'm just surprised a few of the men aren't chasing, too.\" \n\nDamien rolled his eyes at the thought. Then as he ran his thumb along her full bottom lip, he said in a low sultry voice, \"I should probably go back inside and let you enjoy your drink.\" \n\n\"Or...\" She grinned at him coyly, playfully wiggling her eyebrows. \n\nUnable to resist, because she just looked so damned tempting, he tipped up her chin, lightly pressed his lips to hers and whispered, \"Or what, Deana?\" \n\nShe gestured with a tip of her head at the garden below. \"Or, you could walk me down to that little gazebo at the bottom of the garden and we could spend a little alone time together before we have to go back inside for dinner.\" \n\nStudying the glow of arousal in her eyes, he hesitated, and finally blew out an exasperated breath, knowing he wanted nothing more, he still said, \"You know, Deana, to be honest, I just can't see this going anywhere. Otherwise I'd love to get together with you again, and just as often as you'd like.\" \n\nHer brow furrowing, she said, \"What do mean?\" \n\n\"Well, aside from the fact you're the bosses daughter, and I shouldn't even be touching you, you've made it pretty clear that you'd never want more than sex with a guy like me. I mean, being realistic, why would anyone like you want to do more than fuck around with the help?\" \n\nShe actually pulled back and gasped when he said that. Feeling as hurt as she was confused, she stared at him hard. \"Why would you even say something like that? Do you really think that's who I am some snotty society bitch, who'd just use you and toss you away?\" \n\n\"The thought occurred to me, yes. I mean we're hardly in the same league, are we? I'm just a guy from the wrong side of the tracks and obviously you've always been your daddy's pampered little princess. And I think we both know that I have no business being with someone like you. And you told me from the start that you wouldn't want anything more from me than some naked fun. And I've got to tell you, as amazing as it's been every time we've been together, that I need more than that.\" \n\n\"But, Damien, you know with the job I have, I don't have time for anything more. You've seen the hours I work, staying late every night and sometimes even working weekends.\" \n\nHe heaved a sigh, as he tugged her closer, since somehow he just couldn't keep his hands off her, even though he knew he had to. Running his hands down over her back, giving her tight little ass a good hard squeeze, he told her, \"Then tell me this -- how is that you're the only one on your staff who works so late, and the rest of them go home at a decent hour?\" \n\nDeana began to stammer, trying to think of an answer, and finally she thrust out her chin and just decided to go with the truth, as sad as it was. \"Well, the rest of them have families and loved ones to go home to. And since I don't have anyone in my life, I don't think it's fair that they work the hours that I do, and risk ruining their lives at home, when there's never been anyone waiting for me.\" \n\nSmoothing his hands over her delectable ass, he drew her tight against him, so she could have a feel of what being this close to her did to him. And despite the conversation they were having, he was so hard for her he ached. But still, he had a point he wanted to make, and then he'd leave it up to her. \"But I know you're clever enough to see that if you were to share the load with the rest of your staff, that you'd be able to have a life, too -- a life that might include someone of your own to go home to at night.\" And hopefully, if he was lucky, that someone might be him. \n\nBiting into her lip, gazing into the compelling look in his warm brown eyes, and loving the feeling of his long hard length pressed hard against her belly, she often wished she could have just that, a life with someone she cared for, instead working herself to a frazzle to try and please her overly demanding father. ",
        "When finally it seemed she had nothing left to say, Damien let go of her and stepped away. \"Well, guess I should get back inside. And your date's probably looking for you, too.\" \n\nThough she nodded, she wanted to beg him not to go. Especially since she had a feeling it might just be the last time they ever talked. \n\nOf course once dinner was served, he had to be facing her, at the table across from hers. And the sexy smirk he was wearing as he teasingly eye-fucked her as course after course was served, that she barely even touched, especially with her pussy nearly convulsing, only reminded her of just how desperate she was to get with him again. \n\nSo by the time her father had made the usual introductions and the band had struck up to commence the dancing, she knew that she could finally get up and get away from her boring date, who'd been droning into her ear so long, she wanted to scream. \n\nMumbling something about having to get some air, snatching up her shawl, she hurried outside, hoping that Damien would follow. \n\nAnd when Damien glanced up after politely talking to an older woman next to him and saw that Deana was gone, he was torn between hoping she'd gone home early and praying that she stayed, so he could find her and finish what they'd started. \n\nCurious to see where she'd disappeared to, when Damien wandered outside after the dessert had been served, he wasn't too surprised to find Deana alone on the terrace, with another glass of champagne, staring out at the garden. Coming up behind her, slipping an arm around her waist, he whispered into her ear, \"Why can I never get enough of you?\" \n\nTurning her head, she smiled, relieved that he'd come out to join her. \"I'm guessing for the same reason I can't get enough of you.\" \n\nTaking her by the hand, sure that he'd be kicking himself later, he said, \"Come on.\" And as he led her down the steps and along a dimly lit stone pathway into the garden, looking over at him Deana flashed him an expectant smile as they approached the closed-in gazebo. Her heart already racing, she just hoped they were going to do a lot more than talk this time. \n\nAnd the moment they got inside the dark little enclosure, lit only by a thin shaft of moonlight, shining in from an opening at the back, Damien took her in his arms, and kissed her till they were both breathless and desperately grinding their bodies together right through their clothes. \n\nFuck, he hated that he needed her like he needed to breathe. But maybe, he tried to convince himself, if he had her just one more time, he could get her out of his system and be able to forget that they'd ever connected and driven each other nearly out their minds. \n\nAnd Deana was so lost in the taste and feel of him, as they feverishly kissed each other senseless, that she accidentally tipped her glass and spilled some champagne down the back of his suit, and he just laughed and shuddered from the feel of it running down his back and into his boxers. Then with a menacing narrow-eyed smile, he took the glass and set it down on a little table between two padded lounge chairs. Then his smile widened considerably when he glanced up and noticed a pretty substantial looking brass light fixture hanging from the top of the high peaked ceiling -- giving him an idea. \n\nSlipping her lacy black shawl off her shoulders, keeping his eyes fixed so firmly on hers that he had her shivering with anticipation, he tossed an end over one of the arms of the light fixture, grabbing hold of it as it came down between them. Then before she could even figure out what he was up to, he had her wrists tied with the ends of her shawl, and her arms up over head, trussed up and at his mercy all over again. \n\nAnd her pussy was getting so wet, just imaging what he was what about to do to her, that she could actually feel it dripping down her thighs. Damn, the man was demon, the way he loved to toy with her. \n\nTaking his time, Damien slowly walked around her, muttering, \"Fuck, you know I just love the look of you tied up -- so helpless and yet so eager for me to take you.\" And his dick heartily agreed, already aching like a bastard in his pants to get at her. \n\nStepping in behind her, he delighted in seeing her shiver as he took hold of the zipper that ran down the back of her body hugging dress, and slowly began to slide it down her slender back. Totally blown away by how indescribably sexy she looked as the shimmering blue dress began to fall away, baring every last inch of her silky flesh to his hungry gaze. And when he realized she wasn't wearing a bra, he almost came on the spot as her full pale breasts enticingly began to heave, bathed in a glorious moonlit glow. And her pink nipples, erect and hard as diamonds, seemed to be just begging for him to claim them with his mouth and of course tug at them with his teeth to get her squealing. \n\nAnd he knew he'd never seen anything sexier in his life than her bound with her hands tied over her head, nearly naked, except for the wickedly revealing black lace thong and crazy hot garter she was wearing, of course perfectly framing her delectable little pussy. And seeing her like this, he needed inside her so badly that his balls felt like they were ready to explode. \n\nBut since he had her right where he wanted her, he smiled, watching her eyes go big and round as he picked up the champagne glass from the table and began to dribble little droplets of the cool bubbly liquid over her nipples, grinning as he watched it drip down over her belly till it slid inside her panties, soaking her pussy and making her shiver all over again. \n\nRelishing the feel of wetting the rest of her in the cool liquid, he slid his hands along her sides from her ass, all the way up her body, and along the length of her raised arms. And as he did, he murmured over her lips, \"You know you have got to be the sexiest woman alive, especially now, trussed up like this and just waiting for me to have my way with you, and I can smell your hot little pussy just begging to be fucked.\" But of course, first he had to lick off the champagne. \n\nHe had her poor throbbing pussy clenching so hard at his words, Deana was already starting to quiver. And when he lowered his head and began to lap at her swollen nipples, he loved the sound of her desperately whimpering as he suckled each one in turn into his mouth, moaning at the delectable taste of her flesh, especially now coated in Champagne. As if she wasn't sweet enough before, she tasted so amazing sliding over his tongue, so delectably warm and wet and sweet that he knew he could happily lap at her days. \n\nBut then when he finally dropped to his knees, Deana thought she'd just about die. Holding her steady, with his hands on her hips, slowly trailing his tongue down over her quivering body and around her belly button, and dipping his tongue inside to lick the few drops in there, she cried out, desperately licking her lips and shamelessly thrusting her hips at him, begging him not to keeping teasing her. \n\nNo man had ever made her this crazy, or had her wanting him more. God, he was such a beast the way he loved to torment her. And yet, she knew she wouldn't have it any other way. Being trussed up and taken like this just felt so incredibly erotic that she wondered if she'd come just from the thought of what he was doing to her alone. \n\nTrailing even lower, when he planted a warm lingering open-mouthed kiss over her sex right through her damp panties, licking all around her garter belt, even gently scraping at her pussy with his teeth, till she could actually feel her pussy flooding, she let her eyes fall shut and let out a deep desperate little groan. God he was just so wicked. And he was driving her so fucking crazy and her need was so acute, he had to know he had her nearly crawling out of her skin, never having felt as desperate to be filled and taken in her life. But cruel bastard that he was, he just kept taunting her to come, when all she wanted was for him to finally give her what she really needed, to feel him buried inside her so deep that she'd ache. \n\nLooking up into her eyes, his heated gaze nearly scorched her as he unclipped her garters and grasping her around her slender thighs slowly began to slide her sheer silk stockings down over her legs. Licking and nipping at every smooth soft inch of her as he went, he had her gasping as he slid his tongue into the sensitive spot behind her knees, even suckling at the warm tender flesh, till he had her whimpering with need. And when he began to slide her panties down over her legs to her ankles, and then leisurely followed the same path with his tongue, he soon he had her squirming and squealing like a woman possessed, so overjoyed and relieved to finally feel his mouth on her needy little pussy. \n\nClosing his eyes, he groaned, savoring the delectable taste of her on his tongue. Suckling her pussy lips into his mouth, circling her hot little sex button with just the pointed tip, fuck, he loved the taste of her. And when he looked up and saw that she'd closed her eyes and her mouth had fallen open, lost in the feel of what he was doing to her, a part of him wanted to turn and leave her like this, so she'd feel the sense of abandonment he'd felt when she let him know that he didn't mean anything to her. \n\nBut seeing as he'd be depriving himself as much as her, at this point, he knew he had no choice but finish what he started. Groaning deep, he pushed her legs open wide, and hungrily lashed his tongue along her folds from back to front, smiling against her sex at the satisfying sound of her really beginning to make some noise. And he could actually feel her pulsing pussy quivering against his lips, like a second heartbeat, he had her so aroused and so anxious to be plundered. \n\nEven as he savored the feeling of eating her out, lost in the taste of her hot little cunt, he shook his head, wishing he could give her up. \n\nBut as he slid down his fly and fished out his achingly hard cock, he decided it wouldn't be tonight, not when he was this stoked to get inside her. And as he got to his feet, he was surprised to realize that his legs were shaking, he needed her so badly. \n\nTipping up her chin, staring into her lust-filled gaze, he slid a finger inside her dripping pussy and asked her, \"Is this what you want, for me to lose myself in you again?\" \n\nShe nodded, licking her lips as he began to work his finger inside her, and murmured, \"Yes, Damien, the same way I lose myself in you.\" \n\nFinally clutching his cock he gave in and gave them both what they needed, thrusting up into her ruthlessly hard. And just the feel of her wrapped around him so tightly inside her, had him instantly growling for more. Grasping her ass in his hands, he lifted her off her feet, and as her legs circled his waist, he pushed into her so deep with one hard penetrating thrust, they both gasped at the incredible feel of being joined so incredibly tight again. \n\nGod, he loved the feeling of being inside her more than woman he'd ever known. Yet it slayed him to know that this would be all they'd ever have, raw hot sex in the dark where no one could see them or ever know of their need for each other. \n\nAnd when she moaned and murmured, \"Oh, god, I love the feel of you like this, deep inside me, Damien.\" \n\nHe grunted and thrust into her even deeper and told her, \"But this is all you love, isn't it, just the feel of me filling you up, and fucking you hard?\" \n\nDeana looked into his eyes, and whispered, \"I wish I could give you more than this. I really do. But I honestly don't know that I can.\" \n\nLetting out a defeated groan, wrapping his hand around the back of her neck, claiming her mouth in a deep ravenous kiss, he gave in and just savored the taste of her filling his senses and made love to her mouth, their tongues desperately tangling as he claimed her body. He saw no point in trying to hide how he felt about her, especially when she could rock him to the very soles of his feet with just a kiss. \n\n\"Please,\" she begged, as he broke their kiss. \n\n\"Please what?\" he asked her, pulling back. \n\n\"Please take me, Damien, I need you so badly right now. Please.\" \n\nHeaving a frustrated breath, he clutched her ass so hard, that she whimpered. And when he really started pounding her pussy, losing himself in the feel of her, she just clung to him tight and took everything he gave her. And even as he gave them both what they needed giving it to her wickedly hard, he told her, \"I just hope you know this is going to be the last time for us. I can't do this anymore, knowing this all you want from me. No matter how incredible it feels with you.\" \n\nDeana clamped down on him tight, clutching him inside her. With her arms tied, it was only way she could let him know how deeply she felt for him, since she couldn't find it in her to say the words. But how could she promise him anything more than what she was giving him now, when she'd basically given her life to the company, even though part of her knew that her father didn't care how long and hard she worked for him -- or if she even had time for a life of her own. \n\nAngry with himself, Damien just shook his head, amazed to find himself lost in her again. If he was smart he would have stayed inside. But then of course he wouldn't be buried balls deep in the sweetest little pussy in the entire planet, with the sexiest woman he'd ever known wrapped around him and making him want to come so hard, that he knew she'd be dripping with his cum for days by the time he'd finished with her. \n\n\"Fuck, why can I never get enough of you?\" he asked her as he slammed her pussy punishingly hard with thrust after desperate thrust. As he squeezed her ass in his hands, amazingly she just gasped with the delight, as he fucked her harder than he'd ever taken a woman in his life. \n\nLost in how good it felt with him, she looked into his eyes and told him, \"I can't get enough of you either. And you just feel so damn good, this can't be it for us, Damien, it just can't.\" \n\nThough he hated to admit it, even to himself, he knew she was right, when it felt this good, it also felt like more, so much more. And like a moth to flame, he knew he'd be back, wanting her again, even if he knew it was going nowhere, and she'd probably ending up tearing his heart out. But fuck, when he had his cock buried in her like this, with her clenching him so unbelievably tight, like she never wanted him to pull out, it was hard to think about never having her like this again. And he couldn't imagine never being able to feel her body wrapped around him, or tasting that pretty mouth, and giving them both what they needed just to survive. And he just couldn't deprive himself of being like this with her no matter if she eventually left him without a backward glance once she was finally done with him. \n\nThen suddenly he turned his head and froze when he thought he heard a man's voice calling out from the direction of the estate. \"Deana, are you out here?\" \n\n\"Fuck me, what now,\" he muttered. But he knew it had to be her date, trying to figure out where the hell she'd gotten to. \n\n\"Oh, please don't stop,\" she begged him, squirming in his arms and trying to get him moving again. \"I'm so close, Damien, please. And I really don't think he'll look for me out here.\" \n\nRolling his eyes, and shaking his head, though he knew he was crazy, he grasped her hips in a death grip and slammed her pussy for all he was worth, tunneling in and out of her insanely hard and fast, he just hoped she was right. Because if they were discovered like this now, with her stripped naked and tied by her hands to the light fixture, and him with his pants around his ankles nearly pounding her pussy raw, he'd have a lot fucking explaining to do. \n\nAnd he'd not only be out of a job, her old man would probably have him arrested and put in jail for assaulting his daughter, whether she was a willing participant or not. And damn, if the sense of danger didn't make it that much hotter for both of them, making him wonder if they were crazy to be out here like this, especially doing what they were doing. \n\nAnd when he looked into her eyes, and could see them sparkling with delight, obviously excited and thrilled to be out here like this with him, knowing there was a chance they might get caught, he just shook his head and laughed. Whether he liked it or not, they were two of a kind, and being together like this, risking it all for a hot little fuck could just be why they were meant to be. \n\nJust like that first time he'd taken her from behind in that little courtyard, he knew he could no more pull out of her now than stop breathing. He craved this wild sense of danger, as much as he craved her, and even if what they had was never going to go anywhere, being with her, even if just in the here and now, felt so fucking so wild and incredibly amazing, that he just couldn't give her up, even if he knew he should. \n\nAnd when she started to shiver in his arms, moaning deep as she told him, \"Oh, fuck, Damien I'm coming, and so fucking hard,\" he lost it too. And as he flexed his hips and pumped into her deep and hard, for a few more strokes, the sense of elation that washed through him as he clutched her to his chest and kissed her nearly breathless as he filled her clenching pussy to overflowing with every last thing he had, was beyond words. Damn, even if the cops came and hauled him away now, he'd never regret taking her like this so wickedly hard, even out here, where knew they could be found. \n\nOnce he'd untied her and helped her back into her dress, he couldn't resist just one more lingering kiss. And as they listened to the strains of the Nat King Cole song, \"Unforgettable,\" being played by the band, his eyes warm on hers he slipped his arms around her and took a moment to share a dance with her. Knowing this was probably the only chance he'd ever get, since her father would be alarmed to say the least, to see his head of security dancing inside with all the other guests, with his precious daughter wrapped in his arms. \n\nAnd as she smiled up into his eyes, he stroked her cheek with his finger and told her, \"Just had to have a dance with you before we say goodnight.\" \n\n\"Thank you for this, Damien. I'll never forget it,\" she whispered, tugging his head down for one more kiss, because she just couldn't get enough of him. \n\nAnd when they broke apart, she said, \"Stay with me tonight.\" \n\n\"At your place?\" \n\nShe nodded. \"I'm all caught up with work, since all my ads are all ready to go. And tomorrow's Sunday, so we could spend the day together and just hang out.\" \n\nSmiling into her eyes, he said, \"Hang out, huh?\" He knew if he had an entire day to spend alone with her, they'd be doing a lot more than just hanging out. Still, the idea of having her all to himself until Monday morning was a little too tempting to refuse. \"Sure,\" he finally agreed. \"But first we'd better get back inside, before they send a search party out to find you.\" \n\nDeana, grinned, thrilled that he'd agreed. And just the thought of having him naked in her bed had her pussy clenching like crazy all over again. God, she was already so hooked on him, it was crazy. And if he'd agreed to come home with her, at least they weren't done yet. \n\nBut what they didn't know, as they carefully made their way out of the little gazebo together and quietly headed back up the path and into the party, was that her date for the night, Nigel who she'd ditched to meet up Damien, was standing alone in the shadows, pissed off at being dumped and having a smoke. But then his eyes lit up when he saw them sneaking back into the party together, a leering smile breaking out across his face as he watched Damien purposely hang back while Deana quietly slipped inside without him. Smiling like the cat that ate the canary, he murmured to himself, \"Hmm, I'll bet her father would just love to know that she's sneaking around with a character like that.\" And of course he was still wearing that smug little smile on his face when he followed them inside..."
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/hot-fun-with-a-stranger-ch-03"
}