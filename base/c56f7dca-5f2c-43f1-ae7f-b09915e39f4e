{
    "title": "Rock and Water Ch. 10",
    "pages": [
        "Thank you dear readers for your patience and kind words while waiting for this final chapter of Rock and Water. It's been a long road since I posted chapter one, and your comments and emails have shaped me as a writer.\n\nFrom day one FA_JF was there with her excellent editing skills and insightful suggestions. For this final chapter, I need to thank both Richard North (North200) and the fabulous Brit for their fabulous edits and unwavering friendship.\n\n*****\n\nThree months have passed since our trip to London. Addie has been back in the states with me for the past two - her arm mended and cast removed. I've returned to work after my summer hiatus, and before we know it, days flow into weeks and alone time for Patrick and I becomes few and far between. We'd expected it - planned for it - but neither of us were truly prepared for how little time I would have for him.\n\nI'm a bit worried. This is his first committed relationship to someone with kids, and while he's been great with her, I know the limitations have been difficult for him - they've been hard for me too. \n\nAlthough Patrick joins us for dinner twice weekly, even cooking at his place on a few occasions, I've yet to invite him to stay the night. We've shared a few weekends together when Addie goes to visit her grandparents for the weekend, or steal the occasional night or afternoon when she's at a friend's, but much of our time to talk or play occurs over the telephone after she's asleep.\n\n\"How are you doing over there, sweetheart?\"\n\nI can hear the smile behind the mock concern. \"You know damn well how I am... Sir.\"\n\nWhile I know I'm tempting fate with the clear derision in my voice, It's difficult to answer sincerely while I'm double penetrated by my largest plug and dildo - my clit teased and tortured for over thirty minutes with no clear answer that I'll be allowed to come.\n\nHe remains silent.\n\nI try to lighten the mood a little. \"I'm sorry for that, really. My sheets have seen better days, though.\"\n\nNo response.\n\n\"Patrick?\"\n\n\"I'm here. I'm sorry.\" He pauses briefly, as if weighing his words. \"...was just thinking.\"\n\nMy chest clenches a little. HIs voice sounds distant, almost veering towards melancholy. I'm not quite sure what to do, but turn off the vibrator that's been buzzing against my clit. The two toys inside of me suddenly feel tight and awkward.\n\n\"Is it anything you'd like to talk about?\n\nHe pauses again, then let's out a deep breath. \"I don't want to sound like I'm complaining, but I want to be there with you... not on the phone. I'm just going to put it out there - I think Addie could handle it. I think you're underestimating her.\"\n\nI hear him fumble with the phone for a second, then the sound of him zipping up his pants.\n\nI guess that answers what I should do about the toys.\n\n\"Hold on,\" I say.\n\nSliding both toys out, I walk them to the bathroom sink. Throwing on my robe, I sit back on the bed, my back against the headboard. I feel empty, and suddenly very cold.\n\n\"Patrick, we've talked about this. I want it, too. ...just feel like I need to protect her.\"\n\nHis voice comes out tight. \"Protect her from me?\"\n\n\"No!\" I whisper emphatically, but my heart sinks when I admit the truth to myself, and then him. \"Well, yes... kind of, but more along the lines of I don't want her to get attached - to love you - until...\"\n\nPatrick saves me from saying it out loud - my fear since introducing them.\n\n\"...until you know whether I'm going to stick around.\"\n\nWe're both quiet. An unidentifiable anxiety creeps in now that the unspoken has been said, but an iota of relief is sparked too.\n\n\"Tell me, Corrine, have I given you the impression that I'm going anywhere?\" Before I can answer, he adds more forcefully, \"What is it that you want?\"\n\n\"No, Patrick, you've never wavered. You've always been there for me... for me and Addie...\" My voice trails off as I think back to the day in England when Addie fell off her horse while the two were out for a ride. It had terrified him seeing her so helpless, yet he'd taken care of her and the two now seemed to have a bond independent of me. A new realization dawns.\n\nYou're not protecting Addie - you're protecting yourself.\n\n\"Shit,\" I groan.\n\n\"What's going on, sweet girl?\" His voice has softened.\n\n\"I think I've been keeping you away at night under the guise of protecting Addie, when it was really me that I was looking out for.\"\n\n\"What are you worried about... shit, I hate having this conversation over the telephone.\"\n\n\"I know, I'm sorry.\" I pause to gather my thoughts. \"Patrick, I love you. I love everything about you and what we have. I'm just... I'm just scared that normal, everyday life with its early nights, hormonal teenagers, and overworked girlfriend are going to bore the hell out of you - and I won't be enough... Not to mention even if you did spend the night I don't know how we'd, um, be kinky?\"\n\nPatrick doesn't respond at first, but when he does, his voice is thick with emotion.\n\n\"Okay, 'kink' aside, I'll tell you now that yes, I have been bored at times.\"\n\nMy breath catches as I hug the phone closer to my body.\n\n\"...and I've been excited, happy, frustrated, and insanely turned on. You've brought some real, tangible feelings back into my life that had been long buried since Maureen. You and Addie, both. As for the kink - It's not going anywhere. We'll make it happen. Hell, a locked door and a good ball gag is all we'll need.\"\n\nSomehow I'm laughing again. Leave it to Patrick to once again be the eye at the center of my storm.\n\n\"Tomorrow night,\" I state.\n\n\"Tomorrow night?\"\n\n\"Tomorrow is Saturday night. I'll talk to Addie in the morning to see how she feels about it - assuming she's okay with it, you can come over for dinner and a movie... and to stay the night.\"\n\n\"I can tell you now that she'll be cool with it, so I'll plan to be over around five - and to make brunch in the morning.\"\n\nMy excitement starts to take over with this new step in our relationship.\n\n\"I think I'm going to be too excited to sleep!\"\n\nPatrick laughs a little before assuring, \"No worries, I know what you'll need to sleep. Grab some clothes pins, the Hitachi, and your paddle. You'll be crashing hard and sleeping in no time.\n\nHe was right.\n\n***\n\nNo surprise, when I ask Addie at the breakfast table the next morning how she'd feel about Patrick staying the night, I'm met with an eye-roll and an 'It's about time' response.\n\n\"Please be serious, Addie,\" I respond. \"I know you like him, but going for hikes or having him over for dinner are very different from having him staying at our house.\"\n\nTo her credit, she appears to think about what I've just said - the light expression that had been on her face now looks more contemplative.\n\n\"Are you guys going to get married one day?\"\n\nWhile I'm not surprised that the question is on her mind, it wasn't quite what I'd expected.\n\n\"Honestly, sweetheart, I don't know. We may, or we may just stay together without marrying. Not everyone does. Things are good now - really good - but you never know what the future will bring.\"\n\nAddie looks at the table before quietly mumbling, \"Like you and dad.\"\n\nMy heart aches for her. Our divorce forced her to learn some harsh realities sooner than I would have wished.\n\n\"Mom, I really miss dad. Before this summer, it seemed okay that I only ever saw him when he'd come to visit every few months - but after living with him again... I... I just really miss having him around.\"\n\nI scoot my chair next to hers and take her in my arms.\n\n\"I can't imagine how hard it's been sweetie. I wish it wasn't this way for you.\"\n\nAddie looks at me shyly, clearly uncomfortable with what she's about to say. \"Well... I was thinking about that and thought of an idea. What if I lived half the year here with you, and half the year with dad and Carrie.\"\n\n\"No!\" It flies from my mouth before I can contain it and Addie jerks back as if I've slapped her. Gathering my thoughts as quickly as I can, I try to soften my answer. \"Addie, sweetie, I just don't see that happening. Your schooling would be all over the place... and what about your friends?\"\n\nShe's not buying it.\n\n\"They've got schools there, mom, in case you didn't know - and my friends there... I miss them.\"\n\nI'm trying to hold it together while my mind is screaming that like hell I'd live away from her for six months. I know I can't discount her thoughts though, and muster what sounds like a reasonable response.\n\n\"I'll give it some thought, babe. I promise.\"\n\nShe looks at me skeptically, but seems appeased for the moment.\n\n***\n\nThe evening goes well, and Addie seems excited to have Patrick over. After dinner, she insists on making the popcorn and picking out the movie. I'm not sure what he was expecting, but relief paints his face when she pulls out 'Lord of the Rings'.\n\nAt the end of the film, she gave Patrick a genuine but awkward 'good night' and I walk her to her bedroom.\n\n\"I'm really proud of you, Addie. This means a lot to me.\"\n\n\"It's good to see you happy, mom.\"\n\nShe says this as she gives me a quick peck on the cheek and closes her door. She can't know how much those words mean to me. Walking back to the living room, I find it empty except for a message on a scrap of paper.\n\n\"Out with the dogs. Back in a bit.\"\n\nHaving Patrick here feels unexpectedly normal, and thoughts of having him in my bed - his body against mine - fills me with nervous excitement and aching happiness. It finally feels like I can have it all... the submission... the love... the family.\n\nIt's an unusually warm night for early November and I wait on my front steps for Patrick's return. Eventually he comes into view, but his silhouette under the street lamp starts and stops a few times. As he approaches the house, I can see him in a heated conversation - his jaw rigid as he listens to whomever he's speaking to. I jog up to him and retrieve the two dogs that are coiled around his legs. He looks at me and I can see another emotion beyond the tension. Grief.\n\nI take the boys inside to give him some space to finish his conversation. It's not long before he comes in - closing the door after himself, but standing just inside, looking at his cellphone as if expecting it to ring again.\n\nI approach him and wrap my arms around his waist. He absentmindedly reciprocates, but once I'm in his arms they tighten and he lowers his jaw onto my head.\n\n\"What's wrong, sweetie? Who was that?\"\n\nHe's silent for a few more moments before answering.\n\n\"It was Katya.\"\n\n\"Luka's mom? What'd she want this time of night?\"\n\n\"She doesn't want me to come tomorrow... or anymore.\"\n\nI pull away from him and half whisper, half scream, \"What the fuck?\"\n\n\"It's her new boyfriend - her new fianc\u00e9. He thinks my relationship with Luka is holding back their own from forming. He seems like a good guy, and I think his intentions are good, but this is so fucked. She also mentioned they may be moving to Southern California to be closer to his kids.\"\n\nPatrick's voice caught on his last words, and my heart aches for him. His hold on me is almost crushing, but we stay like this for a few minutes in silence until I feel his body relax and he backs away. When I look up, his eyes are wet and he's wiping them with his sleeve.\n\nI attempt to console him.\n\n\"Sweetheart, I don't know what to say except that you were there when he needed you the most. You made a real difference in his life and nothing can change the bond you share. Is she at least going to let you say goodbye?\"\n\nHe nods. \"Yeah. She said I could come by their house one night next week. I have to make him something before then...\" His voice is distant, as if his thoughts were already in his workshop, planning what to make for Luka.\n\nWe walk into the bedroom and I lock the door. While Addie had assured me she'd knock, I don't want to take any chances. The mood is sober as we go through the motions of getting ready for bed. My room is drafty, so I leave my panties on, then slip into an old tee-shirt. From across the room Patrick has been removing his clothes until he's bare, and when he sees me dressing he shakes his head.\n\n\"No, Corrine... no clothes. I need to feel you against me.\"\n\nJust seeing his lean, muscled form with the beautiful ink along his torso and arms causes every nerve in my body to spark. His cock, while not hard, arouses me regardless. When my gaze travels to his face, though, pain still radiates from his normally bright blue eyes. All I want to do is comfort him - to help him forget the pain, if just for one night.\n\nRemoving my tee-shirt as I walk towards him, I'm intent on bringing Patrick pleasure, to help him bear his sadness, if just a little. When I'm standing in front of him, I move to kneel but his right arm embraces me as his left tilts my chin upwards. His lips find mine and the kiss is both passionate and emotional - his tongue penetrates me and searches for my own, the contact makes my head spin and my legs weak.\n\nWithout releasing my lips, he pulls me to the bed. We separate just enough for him to position me on my back in the center of the bed, before he lays himself on top of me - full skin to skin contact. We resume kissing as his arms and legs straddle me. I feel completely enveloped and consumed by him and I only want to give him more.\n\nI break our kiss to whisper in his ear, \"Please, Patrick. Let me take care of you tonight.\"\n\nResting on his elbows, his face leans down to nuzzle my ears and neck, sending goosebumps shivering down my skin.\n\n\"How would you like to please me, pet?\"\n\nMy body ignites as he uses the endearment he only recently introduced. The first time he'd called me 'pet', I'd been surprised by how loved and revered it made me feel. Had he used it early in our relationship, I suspect I may have bristled at the implied ownership and docile subservience - but through his love and guidance, I've learned so much about what submission truly means to me. The level of trust, acceptance, and love I feel in this relationship has moved beyond any that I've ever experienced before, and when I give myself to him - mind, body, and spirit - I know he feels the same love and trust that I do.\n\n\"Sir, I would like to pleasure your body - your whole body - until you come. I would like you to let go... to just accept and enjoy.\"\n\nHis bright blue eyes look down on me with love, but there's a heat in them that pushes me further. I gently push against his chest, scooting myself out from under him.\n\n\"Lay down on your front - and wait for me here.\"\n\nRather than the amusement I suspected he might respond with, Patrick just smiles a sexy grin and nods before turning himself over, resting on his stomach in the center of the bed. I grab a few things from my toy bag and lay them beside the bed, out of his view.\n\nI remove my panties and crawl on top of him, straddling his hips. My exposed sex pressed hard against his lower back. Before I start, I allow myself to reach behind and run my hands over the contours of his firm ass. Once I've allowed myself to enjoy them fully, I pour a small amount of cedarwood and sage massage oil over his upper back, then lean down and murmur into his ear.\n\n\"May I be the first to tell you that all of those squats I see you doing at the gym are working for you.\"\n\nPatrick chuckles from below me. It's nice to hear him relaxing after his phone call with Katya. He turns his head back, about to reply, but I've started on his shoulders and all that comes out of his mouth is a long groan.\n\nTaking my time, I massage his back, neck, temples, and scalp with strong fingers and a fair amount of upper body strength. The knots in his back gradually reduce as his breathing slows. I'd think he was asleep except for the occasional moan of appreciation when I work on a particularly pleasurable region.\n\nI scoot back, encouraging him to spread his legs so I can kneel between them. Beginning with his left leg, I slick my hands with the oil and start with his foot - sensuously massaging the arches and each individual digit. In no rush, I move to his firm calf and work my palm into the tight tissue, feeling it eventually give and relax before moving onto his thigh. Patrick is silent now - almost in a meditative state. I move to his right leg and make sure it gets the same treatment the left did. \n\nMoving forward again, I situate myself on my knees between his upper thighs. I lean down and begin to kiss and gently suck, alternating between his two firm ass cheeks. I run my hands down his sides, over his lean waist until they rest on his hips. My lips travel closer and closer to the snug crevasse of his ass - my tongue licks the sensitive margins in long, firm strokes. I feel him tense just a little, so I splay my fingers over each side and spread him.\n\n\"Corrine...\" His voice is barely a breath.\n\nI revere this man, and want to show him there is not a part of him that I don't want to pleasure. I begin to trace just the tip of my tongue along the now exposed skin, staying away just yet from my intended target. I sense a shiver run through him as his skin vibrates under my hands. Alternating soft kisses with strokes of my tongue, Patrick's body relaxes beneath me. I love that I'm bringing the man that does so much for me to such heights of pleasure, and I only want to give him more.\n\nWhile my hands begin to squeeze his well-muscled butt cheeks, my tongue dips to the tight erogenous ring and all of its sensitive nerve-endings.\n\n\"Ooooh,\" he sighs, as my tongue licks and probes the entrance. His hips move, but only to grind himself into the bed. I can only imagine how desperately hard his cock must be. I smile briefly as my fingers split him even wider and my tongue pushes deep inside of him - my nose pressing hard against the skin just above. I wiggle and spear it in and out. His breathing becomes interspersed with gasps and I know I can push him further.\n\n\"Up on your knees, love - spread them for me.\"\n\nIn a trance he obeys my wishes, giving his body over to me. This does not undermine the tightly coiled power I feel radiating from him, it only makes it that much better that he would allow himself to be vulnerable and exposed to my desires.\n\n\"Oh, Patrick... You are so fucking hard,\" I admire as his swollen, crimson cock comes into view. On my own hands and knees, I lower myself below him and suck on just the head, as if to milk him dry of the pre-cum that had started to bead at the slit. He slowly pushes his hips forward, fucking my mouth deep. I allow him this moment of control, but only briefly before I pull away.\n\nI pour a copious dollop of massage oil into my palm, then rub my hands and fingers together, coating them well. I kneel next to him, facing his receptive, hard body. With my left hand I cup my fingers around the base of his cock, stroking firmly up and down the shaft while also turning my hand slightly with each rise and fall. My thumb curls over the slick head, ensuring not an inch of skin is left untouched.\n\nI love the way the soft skin moves over the hard steel that lies beneath - how it twitches and pulses under my grip. My right hand moves behind him, gliding over the slope of his ass before curving the fingers towards the center. He arches his back, just enough to allow a natural chasm to open. I move the tip of my third finger over the tight ring, circling over it - lubricating the entrance. I know how good this feels, and am rewarded by some quick jerks of his cock within my grasp.\n\nOnce it's nice and slick, I push in just the first digit - surprised by how easily it slips in. While I know Patrick enjoys playing with my third hole, he's recently admitted that while he was open to it, no woman in his past had ever been interested in pleasuring him this way. I have no experience performing on a man, but I know what I enjoy and what I've read that men enjoy. I play with just the ring for a couple of minutes - moving in and out only by one or two knuckles at a time, occasionally slipping a second finger in too.",
        "The tight band of muscle begins to relax, and my fingers begin to explore deeper. I know what I'm searching for, I just don't know if I'll know what it is when I feel it - so I'm delighted when I feel a slight bulge slip beneath my fingertips.\n\n\"Ah, fuck!\" Patrick's voice is almost strangled as my fingers begin to rub back and forth over his prostate. I can tell he's trying to keep his voice down as best as he can. His already rock-hard cock seems to thicken in my hand, his balls drawing up tight between his legs.\n\n\"I can't... I can't last long,\" he gasps as my fingers move in a steady rhythm over the incredibly erogenous gland. Pre-cum is dripping from the tip of his cock, mixing with the massage oil creating wet, slick sounds as I pump his cock. His body bucks and jerks as cum goes flying at incredible velocity out of him, splattering the bed and even his own arms that are just barely supporting him now. I slow the motions of both hands, but don't stop until the last drops escape him. Removing my fingers, and slipping my hand from his still hard shaft, I lean over him, kissing his sweaty back.\n\nHe remains quiet, staying on his hands and knees with his head down - chest heaving.\n\nFinally he speaks. \"There's no other words for that than 'mind-blowing', Corrine. My fucking heart was slamming in my chest... never come so hard in my life.\"\n\nI'm just beaming - excited to discover a new and clearly powerful way to please him. I don't get to celebrate long, though, when Patrick rises and flips me over onto my back and lands on top of me - his hands press my wrists into the bed.\n\nHis lips meet mine in a long, lingering kiss that sends molten heat through me. I'm about to joke about where my mouth just was, when I remember how many times he's rimmed me and I shrug it off.\n\nHe lifts his head and l just can't stop smiling.\n\n\"You're pretty damned pleased with yourself, aren't you sweetie?\"\n\n\"Yup!\" My smile grows even wider.\n\n\"Well, I'm pretty pleased with you too, my love. You took me somewhere I've never been - thank you.\"\n\nMy smile drops at his sincerity. Reaching up, I brush his errant hair from his forehead before placing my palm on his cheek.\n\n\"Patrick, you've taken me to that place so many times. Every day with you I learn something new - feel something new.\"\n\n\"That's very mutual. I've always prided myself on my autonomy - but I have to confess that days away from you are getting harder and harder.\"\n\nI nod in agreement, but don't know quite how to answer to that. It's just too soon and too complicated to consider moving in with each other just yet. Patrick rolls off and lies next to me - heat radiating from his skin. We lay in silence for a few minutes before he speaks again.\n\n\"Addie seemed fine with it all tonight.\"\n\n\"She did, Patrick. She really likes you.\"\n\nHe goes silent, and I suspect he's thinking about Luka again as he absentmindedly runs his fingers up and down my arm. I move to rest my head on his chest, until I feel how damp it is.\n\n\"Um..., shower?\"\n\n\"I suppose I'm pretty ripe by now.\"\n\n\"No, just soggy.\"\n\nHe laughs before leaning over and tweaking my nipple.\n\n\"How've you been enjoying that new shower head?\"\n\nBest shower ever. \n\n\"I think you know quite well considering you tried each setting on me the first night.\"\n\nMemories of how long he'd edged me - was it three, four, five times? - make me shudder. My pussy and clit had grown over sensitive to the point of pain while I begged him to let me orgasm. When he did, he held the spray of water on me with one hand while the other delivered a series of wet, hard slaps to my ass until I collapsed to the floor trembling - the ripples of my orgasm caused spasms through my pussy and belly for minutes to come.\n\nWe make it to the shower, where Patrick is surprisingly gentle with me. Using his fingers, lips, and of course, the shower head, he drives me to an achingly long and deeply intense climax that left me sated and sleepy.\n\nThe next morning, Addie acted as if Patrick had slept over countless times. After taking the dogs to the park, the three of us went to brunch. She was surprisingly mature and sympathetic with the news about Luka, and suggested that at the very least his mother may allow him and Patrick to remain pen-pals.\n\n***\n\n\"Do you know a Marilyn Morris?\"\n\nI'd just answered my phone and these were the first words out of my agent's mouth.\n\n\"Yeah, I know Marilyn. We worked together briefly years ago. She's been with Minnesota public radio for years now. Is she back in town?\"\n\nPeter's voice holds barely contained excitement, a rarity for him.\n\n\"No, she's not. In fact, she's starting a new show with PRI in London. Corrine, she wants you there.\"\n\nMy heart starts thumping and I can't seem to get my mouth to work.\n\n\"Did you hear me? She wants you to be the voice of the show. It's going to be a little less politics and news than you're used to, leaning more towards human interest, but shit, you've gotta' do this!\"\n\n\"Oh...\"\n\n\"That's all you can say? Corrine, this is a life changer! This is huge!\"\n\nA whirlwind of factors hit me all at once. Addie... my home... my life... Patrick.\n\n\"Wow, Peter. I don't know what to say! I loved working with her when she produced my first show. I can't... I just can't believe this.\"\n\n\"Call her. She's waiting to hear from you. Just reach her at the Minneapolis office.\"\n\nStill in a daze, I barely squeak out an answer. \"Um, okay - I will.\"\n\nPeter hangs up and I sit in my car just in front of my house, trying to slow my thoughts down.\n\nAddie would love to live in London - hell, she's already asked to - and Frank and Carrie are there. She'd have both parents. Working with Marilyn again would be amazing - it seemed like every program she had her hands in succeeded - many of which had won awards over the years.\n\nI can't help but let out a choked sob, though, when I think of Patrick. We've only just started less than a year ago - there's no way we could hope to survive a long distance relationship, and I can't expect him to abandon a business that he loves to follow me over there.\n\nFuck!\n\nI go back into the house, forgetting why I'd gone out to the car in the first place. Addie is just home from school and Skyping with her dad. It's after eleven in London, but he stays up frequently to help her with her homework. I watch on as the two talk through a school project she's been working on. I give her a smile and Frank a brief wave before going into the bedroom to call Marilyn.\n\n***\n\nThe following Sunday, the three of us spend the afternoon with Luka and his family at Oaks Park, an ancient amusement park with old time carnival games and rides that look like they're about to fall off their tracks. It's official that they'll be moving to California in two weeks, but Luka's mom has agreed that they can write to each other.\n\nLuka loved the drafting table that Patrick had made for him, hoping to encourage his love of graphic arts. Katya's fiancee keeps his distance most of the day, but the impression I get is that he's allowing the two to enjoy their last day together. At the end of the day he shakes Patrick's hand firmly, assuring him that he'll be a good dad to Luka - for him not to worry.\n\nI try and fail not to cry as Patrick and Luka say their goodbyes. They remain embraced for close to minute while Addie and I cling to each other for support. I wonder whether Patrick may need some alone time this evening - I also wonder when and how to discuss my own news with him. In the end, he suggests take-out Thai and a game night.\n\nI've known for the past three days that the move to London will probably take place . It's as if all the stars aligned for it to happen. My contract is up for renegotiation at the end of the year which is only two and one half months away, the position in London will not only come with more exposure, but also a hefty raise in pay, and Frank was out of his head ecstatic when I told him the news. When I told Addie last night, she actually started crying she was so happy. We talked frankly about how it may feel to live in another country - about missing her friends and grandparents in Portland - but also told her it wasn't necessarily forever. Depending on how the show is received, the contract I'm negotiating will be for four years.\n\nI stressed to Addie that I'd yet to tell Patrick. She looked stricken when she realized the move may potentially break us up and began backpedalling about going. I told her that while I love Patrick with all of my heart, I can't ignore all the good that could come to our lives with this move.\n\nUnfortunately, while playing Monopoly, Patrick attempts to engage an unusually quiet Addie, bombarding her with questions about her London friends and whether she'll be going back next summer. I regret immediately asking her to keep secrets from him, and by the conflicted look on her face I can tell she's struggling to keep silent about our move.\n\n\"Addie, can you give Patrick and I some time alone?\"\n\nShe eagerly nods and dodges from the table to her room in obvious relief.\n\nPatrick watches with growing unease in his eyes.\n\nI stand and extend my hand to him. \"Can we go talk on the back deck?\"\n\nHe doesn't follow suit when I grab for my glass of red wine, but does take my hand as we walk in silence outside.\n\nWhat's going on, Corrine? Why does my gut feel like its twisting before I even know what you're going to say?\"\n\n\"I've...I've been offered a new show with Public Radio International.\"\n\nHe looks surprised, but cautiously positive.\n\n\"PRI? That's great!\"\n\n\"In London.\"\n\nHis hold on my hand slackens, but does not let go. Patrick closes his eyes and takes a deep breath - remaining silent for longer than makes me comfortable.\n\n\"That's wonderful, sweetheart... Well deserved.\" He looks down at our hands, his thumb idly rubs against my palm. \"When?\"\n\nMy body becomes tingly and numb as our conversation continues. It feels both surreal and devastatingly real at the same time - like a dream where you're falling and don't know when or if you'll be hitting the ground.\n\n\"We'd move over winter break to allow Addie to settle in before the school-year resumes.\"\n\nPatrick drops my hand and runs his palms over his face. When he looks up at me again, he doesn't take my hand back.\n\n\"What do you want to do then... about us?\"\n\nI kneel down on the ground in front of him, grasping his hands from his lap. \"I want us to be together... I... I can't imagine being apart from you!\"\n\nTears bead in the corners of my eyes when faced with the very real prospect of losing a man that has become as crucial to my life as air and water. He reaches forward and wipes an errant tear with his thumb.\n\nTwice he looks like he's about to say something, before stopping himself.\n\n\"Fuck... Fuck! I don't know what to fucking say Corrine. I'm happy for you. Proud of you - but this is tough. The easy thing to say would be I'll move there too, start a new business, but it's not that easy. My life is here - my friends, my business, my cabin - I've never considered leaving. I thought... I thought we'd be here together... as a family.\"\n\nMy voice is a whisper when I respond. \"I thought so too.\"\n\n\"Will you be coming back?\"\n\nAgain, I struggle with my words. \"Probably? I don't know. The contract is for four years.\"\n\nPatrick flinches as if I've punched him in the gut.\n\nHis voice is tight - his eyes tense. \"Four years?\"\n\nI nod. Gripping his hands even tighter, even though they remain placid in his lap. His voice is flat when he continues.\n\n\"Selling the house?\"\n\nI think about the gorgeous custom kitchen he just designed for me, but nod.\n\n\"Probably not the first year - in case things don't work out - but it'll be too difficult to manage from over there.\"\n\nPatrick starts to discuss pragmatics - about the strong rental market and his friend that manages rental properties - but I'm barely listening. I just watch on as an invisible wall begins to build between us.\n\nEventually we go inside. I half expect him to leave for his own house, but he stays. We brush our teeth next to each other, but he feels a million miles away. Stripped, we get into bed and resume our automatic go to position of him on his back with my head on his chest. It feels good to have his arm around me, holding me tight against him.\n\n\"Corrine, I really am happy for you - this is just a lot to take in.\" He pauses, then looks down at me, capturing my eyes. \"I bet Addie is ecstatic.\"\n\nI nod. \"She is. She really is... Frank, too.\"\n\n\"Yes, I imagine he is.\"\n\nAfter that brief exchange, we both fall silent, but even thirty minutes later neither of us are sleeping. I begin to ramble a string of consciousness.\n\n\"It's doable, Patrick. I'll fly back as often as I can. You can visit us... Tyler and Alex too. I can come home over the summer for a bit - a few weeks at least. I...\"\n\n\"Shhhh... Just relax. We're not over. I just need to think.\"\n\nI'm not sure why hearing him say 'we're not over' makes me even more depressed - as if it was qualified with 'yet'. He kisses the top of my head and I know it's time to quiet my mind and try to sleep. My gut feels raw and my heart is aching - I have no idea how sleep will come.\n\n***\n\nTwo weeks go by. They're busy ones for us both. He's working on a bar remodel in a restaurant, and can only get in there during early morning or late night hours. My station is scrambling to find my replacement and while I'm plugging for one of my writers to take it on, they insist that outside applicants be screened and interviewed - this on top of my normal work load. We see each other just a few times, with only two sleepovers, both of them at my house since Addie hasn't gone anywhere. This weekend, though, she'll be at my parents who are also reeling from the news - although as faithful public radio listeners, they're already enjoying the bragging rights of my new position with their friends.\n\nGriffin and I arrive at Patrick's house Friday evening - bags packed for the weekend. He's out when I arrive, so I let us in with a key he gave me a while back. Guinness bounces and runs circles around us, so I take the two out back and throw a stick for a while. Back in the house, I see a text on my phone from Patrick.\n\nTake a shower. Clean yourself well - very well. Plug and lube are on the bed. Use them. A dozen clothespins are also there. Use them too. Cuffs and collar already attached to bedroom door frame. Secure yourself facing the bedroom. I'll be home in the next hour. I want you there and waiting for me. No touching yourself.\n\nI'm a bit incredulous. We haven't delved into power exchange in weeks, and it feels odd when there's still so much to discuss. The topic of my move was neither avoided nor sought out - it was just there. Frank and Carrie found a small house for me not to far from theirs, or Addie's new school. It's smaller than my current one, and outrageously expensive, but between my new salary and moving expenses being covered, it's just perfect.\n\nI realize how asexual I've been feeling - consumed by stress and worry over the looming move, new job, and the uncertainty of my relationship with Patrick. I look at the text again, and the faintest pulse between my legs begins to manifest. My tongue darts out to moisten my suddenly dry lower lip, sending tingles through me. Oh, yes. I'm ready for this.\n\nLooking at the time, I realize the text came while I was outside with the dogs and fifteen minutes have already passed.\n\n\"Shit!\"\n\nMy shower is fast, thorough, and efficient. Already shaved, I clean myself well - using two fingers and gentle soap to ensure my asshole is squeaky clean. I wash my hair too, and after toweling dry pull it back off my face in a simple ponytail. Trotting into the bedroom, listening for him, I find on the bed the largest plug in his collection, along with lube.\n\nDamnit.\n\nThis is going to hurt. It's been a while since he's fucked my ass - he knows this.\n\nI lube it and my tight hole generously before leaning over the bed and pushing it slowly in. It doesn't slip in easily, and it hurts, but I need it in quickly so I twist it side to side, working it inch by inch, in and out, until it pops past the resistant ring. My belly cramps for a few moments. I allow myself to lean down over the bed until it passes, fighting the urge to play with my clit and pussy which always smoothes the transition from pain to pleasure.\n\nOnce my body adapts to the large intrusion, I rise and feel it shift within me - making me acutely aware of it's presence. Stress and anxiety slowly ebb as my focus shifts to the sensations stirring within my body, along with the serenity of knowing that all I have to do is obey. As I reach for the bag of clips, it occurs to me that this is just what I need - which no doubt Patrick already knew.\n\nI pull out twelve of the wooden clothespins. He didn't assign where I should put them, but I know he would want me to challenge myself. He knows my most sensitive spots - the ones that take so long for the initial pain to recede, and even longer when the clips are removed. I spread my legs, pinch a small amount of skin in my inner thigh, just above my left knee, and attach a peg.\n\nOh, fuck.\n\nAlready just one clip in I feel screaming pain shoot up my leg. Before stopping to think, I place another higher up in the same inner thigh. I start to pant and do my best to keep my leg still. Even the slightest jerk of my leg make the pegs swing and achieve new levels of pain. Quickly I place two more on my other thigh. I realize the mistake of starting with my legs, as I have to walk a few steps to the bed to reach the remaining clothespins. In rapid succession now, I grab four more, clipping two on either side of my waist.\n\n\"Ow! Shit!\" I try not to dance around, I really try, but it feels like twenty bees are stinging where each clip is attached. The burn and ache radiate deep inside of me, but my focus turns to my pussy which I can feel swelling and getting very, very wet. I've stopped questioning my body's response to erotic pain. My lust and hunger are high now, and I know I'd withstand forty more clips at this point if he asked me to. \n\nLastly, I clip two on the undersides of each arm - on the pale white baby-soft skin. Tears well in my eyes while involuntary gasps escape me. I muse that I didn't clip any traditionally erogenous zones - nipples, cunt lips, clit - but I know that Patrick will be pleased. I eye the doorway, and gingerly walk myself over, keeping my legs spread to avoid knocking the pegs. It hurts like hell.\n\nAlong with velcro ankle and wrist cuffs secured to keep my legs spread and my arms lifted and separate, there is a velcro collar with an O-ring in the front. The attached rope, coming from an almost invisible hook above the doorway, is long enough that should I fall there's no way I could be choked.\n\nI secure myself, tremble, and wait. The house is warm - my shivers are purely from anticipation and arousal. I'm not waiting long when I hear his Bronco pull up the driveway, the dogs barking, then the front door opening and closing. I wonder if he'll keep me waiting, but instead I hear him running up the stairs, taking two at a time but slowing as I must be coming into view. He walks up behind me - I can feel the heat from his body just inches from mine - but neither of us say a word.\n\nMy body is screaming for his touch... anywhere. I just need his hands on me. In answer to my silent plea, I feel his palms rest on my bare ass cheeks - the heat from them sears into my skin as I press against him. They don't squeeze, or pinch, they just remain there... owning the flesh under them. Slowly they move up my sides until they come to a rest cupping the weight of my breasts. I take in a trembling breath as again they lay their claim. Next, one hand travels to my wet and swollen cunt, covering it entirely without entering it. The other hand slides upwards until it reaches the collar, then rests over it and around the front of my neck. He doesn't squeeze, but the symbolism of my vulnerability is clear.",
        "Patrick continues his silent, gentle journey over my body - tapping each clip enough to awaken the nerves that had slumbered. I stifle a groan as my body absorbs the pain for him. While he loves my groans and cries, I know through my silence I'm showing acceptance of his command over me. Like an object, he undoes my left ankle and wrist cuffs, shifts me away from the door to gain entrance to the room, then secures me once again. His eyes watch mine as he takes the slack from the collar loop, pulling it until my head could only potentially move a few centimeters in any direction, before securing it.\n\nI'm completely immobile. The new sensation of the collar adds to my helplessness and my body responds by leaking juices over my inner thighs. It no longer surprises me when my body responds in this manner to pain and vulnerability.\n\n\"How long have the clips been on?\"\n\n\"Only about twenty minutes.\"\n\nHe nods, then surprises me by dropping to his knees in front of me. Avoiding the clips on my thighs, he runs two fingers along my slit, splitting the folds as they skim back and forth over my pussy. Slick, wet sounds resound through the room - accompanied by my increased breathing. His hot breath moves over my flesh, occasionally inhaling deeply to take in my essence. Palm outward, he pushes two fingers deep inside my wet cunt, but pulls out just enough to rub against the puffy bundle of nerves. My cunt walls clamp down on him as I can't decide if I have to pee or orgasm. It's all too intense and fast. His thumb pushes hard against my clit and moves rhythmically over the hood, pushing it into the bone below.\n\n\"Oh, Patrick, I'm going to come!\"\n\nIn quick succession the two pegs on my inner right thigh are removed and tossed to the ground. Blinding pain surges through me as the nerve endings awaken and blood flow returns to the deprived flesh. My orgasm eludes me as my body processes the pain, but quickly the urgency arises when he pulls my cunt lips apart with his fingers and uses his tongue to explore every fold and valley. The tip of his tongue becomes firm, nudging against my clit like a finger - up and down, side to side. Juices soak his lips and chin as my climax screams for release. Just in time, and eagerly anticipated, he removes the clips from my left thigh.\n\n\"Ow...shit...motherfucker...!\"\n\nPatrick looks up at me in amusement, his mouth never leaving its claim on my pussy - quite a feat considering I'm dancing on my toes as fire scorches the tortured flesh. While pain often tips me over the edge, tonight it continues to push me off the crest and leave me free-falling in a zone between pleasure and anguish. My head whips around - the fabric of the collar a constant reminder that I am in his hands - vulnerable to his will.\n\nOnce I've recovered, just barely, Patrick changes his tactic by sucking my swollen clit deep between his lips - the touch of his teeth towards the base, trapping the already engorged nub, causes my knees to buckle and my weight be almost completely supported by my arms. The rope attached to my collar gives just enough to prevent any struggle to breathe.\n\nPatrick's mouth is consuming me as it never has before - his tongue penetrating my cunt, fucking it, his lips sucking, teeth biting and pulling. Every nerve in my body needs to release - I need to scream and shout and cry. He reaches up with both hands, removing all of the clips rapidly, from under my arms to down my sides. Pain ignites over the surface of my skin, penetrating into the deeper tissues, colliding with the ball of heat and pleasure rising from my core. When they hit, I'm thrown into an orgasm that threatens to obliterate all of my other senses. Blackness overtakes my visual field and my own screams sound far in the distance as wave after wave of energy and ecstasy blast through my body.\n\nI'm barely aware that he's back on his feet, holding me close against his hard form. I feel weightless and lightheaded as he removes my bindings and carries me to the bed. My body is pliant and receptive as he positions me as he wishes. I'm on my knees resting my belly over two pillows. Arms extended, he binds them together in rope, fastening them together to a carabiner on his headboard. My thighs are spread - attached to ankle cuffs arising from the base of the bed, on either side.\n\nMy mind slips into such a peaceful place - where the air between us feels alive and charged and where nothing but feeling him inside my holes will complete me. My body relaxes and becomes open to however he wants to take his pleasure. I hear the familiar buzz - from the smaller vibe in his collection - behind me as the weight on the bed shifts. The heat of his body emanates against mine as he moves between my legs. The vibe begins to run over my soaking, puffy folds - collecting fluid before slipping over my sensitive clitoris.\n\n\"Sweet little slut... just look at you. Tied and bound, holes open and greedy to be filled.\" His voice becomes deeper, more introspective. \"If only I could keep you here in my home, in the city that I love.\" The vibe runs through my folds once more before the tip begins to play against my anal ring, which twitches and clenches in response. In one smooth push, the well lubricated, vibrating toy slips easily inside and quickly ignites my need once more.\n\n\"...but everything that I love about you - your ambition, your intelligence... your devotion to Addie - threaten to take you away from me, and I can't let that happen.\"\n\nMy breath catches. I'm trying to listen to every word - fighting for clarity as his cock thrusts deep inside my pussy and both holes are stretched and vibrating from the anal vibe.\n\n\"Patrick...,\" I gasp out. I want to hear his words and my skull feels likes it's filled cotton-balls while all my blood surges to my pelvis.\n\nHe leans down and bites my neck - hard. My body bucks against him, driving him deeper.\n\n\"You haven't asked me to come to London with you, Corrine. I don't know if out of some fallacy that it's too soon for us to make such a big move, or whether you're considering starting a new life there - I don't think that's it, though. I don't believe in soulmates, but I do believe in us - and goddamn it, we're too good to let it go.\"\n\nHis hips grind slowly against my backside as he talks, he feels impossibly deep within me, stirring every nerve and pleasure zone.\n\n\"I... I want you there, Patrick.\" I want to continue, but he's reached under me and is rubbing small, soft circles around my clit.\n\n\"I know you do, love - and I'm going. Nothing could keep me away.\"\n\nI can't stop the tears that flood my eyes and run down my cheeks. The myriad of emotions shooting through my brain threaten to collapse me, and I'm thankful for the bonds and pillows that support me. Before I can answer, Patrick intensifies his hold - one arm wrapped tight around my waist as the other hand continues to focus on the bundle of nerves between my legs, rubbing, pinching and pulling on it as his hips slam into me with brutal intensity. Initially his strokes are long, almost to the point of pulling out altogether, but soon he's fully seated - his body pressed firmly against my backside. His full body lunges against my ass pushing me into the pillows below - I brace my elbows against the sheets as best as I can. The sounds in the room are primal - wet slaps in tandem with gasps and curses.\n\nHe's coming to London.\n\nIt's that thought that propels my orgasm over the edge. My heart slams in my chest as exquisite sensations light up my body inside and out. He's holding out and continues to fuck me like he's trying to open me up and crawl inside. It hurts and I love that it hurts. I love his brutality. I love his need to consume me. I love his unwavering devotion. I love his love.\n\nWhen he comes, he comes hard. His voice cracks and chokes as his cum pulses deep into me. The walls of my pussy sting from the friction, and the vibrations in my ass continue to make my tight passage spasm and twitch. As he pulls out, he removes and turns off the vibe at the same time, tossing it on the floor. Cum and my own fluids begin to leak down my thighs - I've grown to love this moment.\n\nHe remains collapsed over me, cocooning me as he kisses the back of my neck and shoulders.\n\nSo much love.\n\nReaching over me, he releases my wrists from the rope binding them, then goes to the end of the bed to remove the ankle cuffs. My body is limp - I remain loosely draped over the pillows supporting me. He jumps off the bed and trots to the bathroom, returning with a warm, wet cloth. He cleans my inner thighs and gently cleans over my tender pussy lips.\n\nPatrick gently encourages me to rise enough for him to remove the pillows, but holds me up to prevent me from collapsing. With the same care, he rolls me onto my back and pulls the covers over us both. Lying on his side next to me, he idly caresses my face.\n\n\"You're coming to London.\" Saying it out loud makes the reality of the news come to life.\n\n\"Yes. I'll be a couple months behind you two while I finish up my current projects, but I'll come out at least once during that time.\"\n\n\"Your business... your cabin.\"\n\n\"The nice thing about being a craftsmen, is that my business goes where I go. There may be times I'll need to come back here for some of my clients, but honestly, I'm itching to do some bar restorations in some pubs over there. As far as the cabin goes, Vanessa and Gil have offered to look after it.\"\n\n\"Wow... you've got this all worked out. What about your house?\" I wave my arm around the room.\n\n\"Marc.\"\n\n\"The bartender?\" I can actually say his name now without blushing at the thought of him. We've been to the Market enough times now that memories of my pre-Patrick makeup session with him have become a distant, although still pleasant, memory.\n\n\"Yup. He's always coveted the place, and he was the first person I thought of. It's the plan, anyway, for the indefinite future. Should we stay in London past your contract I'll consider selling.\"\n\nI process what he's telling me - he's thinking of years from now. I can't believe this is really happening. My happiness is soaring out of me and I continue to ply him with question after question.\n\n\"Your bike?\"\n\n\"Oh, that's getting shipped. There are miles and miles of unexplored roads for us to explore.\"\n\nEventually we get up to do what needs to be done - let the dogs out, eat a snack, brush teeth. Back in bed, we're both quiet. I'm curled into him, my head on his chest. His breathing becomes deep and slow, and I'm sure he's fallen asleep when he quietly speaks.\n\n\"I want to marry you, Corrine. I want to be family. Do you... will you marry me? It doesn't have to be soon, I know you've got so much happening - the move, the new job - but I really ho...\"\n\nI cut him off by jumping on top of him, straddling his waist and claiming his lips.\n\n\"Yes, Patrick! Yes! I would love to be yours - I'm already yours.\"\n\n\"God I fucking love you woman.\"\n\nHe turns me over and the two of us make slow, lazy love long into the night. I'm still sore from earlier, my pussy as raw as our emotions but as I think about life before him, the hurt is so much better than feeling nothing at all.\n\n***\n\n\"Clothes off, slut.\"\n\nNo sooner had Addie left for a week with Frank and Carrie than Patrick takes me by surprise with his order. My body responds before I find my voice - my blood feels warmer as it tracks through my veins, my skin suddenly prickly, needing to be touched.\n\n\"Yes, Sir.\"\n\nIt's been three years since we moved to London. There were growing pains, especially between Addie and Patrick, until they found a good balance. The flat Frank had initially found for us was way too small for three people, although the house we're in isn't much better. Luckily, it has a finished basement with its own bathroom - perfect for my now teenager who wants her \"space\".\n\nMy radio show went through some growing pains too - early on it was close to being cancelled but they changed the time of day and modified the scope to primarily focus on health and wellness and since then it's bloomed. Most amusing was when I was encouraged to \"investigate\" the BDSM lifestyle due to its reported mental health benefits.\n\nPatrick and Luka have had regular, but sporadic, contact since we've arrived. His new father won't allow for Skyping, but emails seem to be okay.\n\nBoth dogs are here too. Griffin and Guinness have found their own balance, and their own beds. It's a lot of dog for a little space, but when we take them out to visit Tyler and Alex on most of our weekends, the two go absolutely nuts, often needing the week to recover before heading out again.\n\nOur toys, ropes, and anything that we'd prefer Addie not to come across are safely locked in a small closet in our bedroom. Patrick has learned to improvise without the built in hooks he had grown accustomed to throughout his house - which incidentally were quickly found by Marc who assured Patrick he'd already made good use of them.\n\nSummer is only a few months off, as is our wedding at Tyler and Alex's farm. It'll be small, mostly family traveling from the states, along with Johanna and her husband, Gil and Vanessa. Frank and Carrie, who married two years ago and have become good friends to us will also be there. It's difficult to imagine that I'll feel any more committed to him with the piece of paper that will bind us - I already feel that I belong to him, as he belongs to me.\n\nI was still in the foyer when he told me to get naked, so without delay I remove my clothes there and wait for further instruction. His pale-blue eyes peruse my body slowly - I can almost feel his scrutiny against my skin. Initially his expression is relaxed... but standing there before me I see the subtle shift. His jawline hardens, his eyes darken. My cunt begins to pulse between my legs, the lips becoming wet and puffy.\n\n\"Follow me. On your knees.\"\n\nMy eyes widen and I don't move. In all of our years together, he's never asked me to crawl. It was never a limit for me, nor something I ever particularly craved. Years ago, during my phone relationship with Robert, he would instruct me to crawl - overall, I haven't missed it.\n\nPatrick looks at me intently, gauging my lack of response. Calmly he walks over, standing before me with a warm but unreadable expression. He reaches forward, and just when I think he's not going to enforce his directive and embrace me instead, he places his palms over my shoulders and presses down, encouraging me to the floor. Once there, without words he pushes my upper back forward until I'm resting on my hands and knees.\n\n\"Follow.\"\n\nMy cheeks redden as naked I crawl behind him into the living room. Each contact my bare knees make with the hardwood floor only amplifies my feelings of subordination and surrender. It's making me very, very excited. My breasts sway under me - my nipples growing tight and sensitive. Cool air contacts my exposed folds, confirming that I'm wet just from this small act of submission.\n\n\"Up on the rug - then stay.\"\n\nI crawl onto the Kilim rug just in front of the couch, then wait. I sneak a glance up just as he's leaving he room. Not sure when he'll return, I remain in position - although it's difficult not to squeeze and rub my thighs tighter - my swollen pussy aches for any contact. To keep myself in line, I spread my thighs to prevent any more stimulation. I hear Patrick return and approach me from behind. The sounds of his footsteps stop and for a moment there is just silence.\n\n\"What a beautiful view my little fuckslut. Your cunt and tight ass presented to me - those sweet holes inviting me to use them and fill them - to own them.\"\n\nMy body shudders with lust at his words. He knows I love to feel objectified - to be reduced to a toy for his pleasure. Two fingers swipe back and forth through my cunt lips - wet, slippery sounds fill the quiet room. He paints my exposed asshole with my own juices, not penetrating me yet still stimulating the ring of nerves until involuntarily my body pushes against him. The hand pulls back strikes both cheeks with one hard slap - my entire body jerks forward from the pain and surprise.\n\n\"You know better than that, slut. Remain still.\"\n\nI hope I haven't blown it and he goes back to using his fingers on me, but apparently I have. He passes by me, approaching the couch. I can hear him deposit a few items before he returns to me.\n\n\"Up on your knees, back straight, eyes forward.\"\n\nHis voice is crisp, alert, and in command. The confidence in his command makes it easier for me to turn myself over to him. I rise up until I'm on my knees and looking straight ahead.\n\n\"Lace your fingers behind your head.\"\n\nThis is a very sexy position. It lifts and pushes my soft breasts with their rosy peaks up and forward in offering to him. In my peripheral vision, he approaches me a large amount of crimson-red rope which I've never seen before. It catches my eyes and I can't help but stare at its beauty.\n\nPatrick kneels in front of me - he looks as in awe with the rope as I am. He pulls it from his shoulder and holds it in front of me.\n\n\"Go ahead...touch it.\"\n\nI smile eagerly at him before running my fingers over rope. It's soft and pliable - not stiff at all. Patrick has always collected the finest rope, but this one looks and feels more sensual than any before.\n\nHe takes his time, appearing almost meditative as he begins a series of intricate knots and ties around my chest. My elbows remain raised and my fingers interlaced behind my head - only now they are bound that way. The rope binds my breast above and below, crossing between them until the flesh bulges forward. The building pressure within the confined flesh sends current after current of heat and wetness between my legs.\n\nTwo identical long ends of rope dangle from below my breasts. Patrick draws them downwards then one by one, separates my folds until one cord rests snug on one side of my clit and the other on the opposite side. Patrick uses his fingers to pull my clit forward so the ropes rest against the base. Both sections are then passed between my wet folds and ass crack before being cinched and tied behind my back. As they tighten, the ropes pinch my clit - like my breasts, I feel it swell and become engorged with pressure.\n\nPatrick inspects his work, checking for circulation issues or any undue friction or rubbing. He gives a nod, then rises to retrieve a mirror hung near our front door. He holds it in front of me, and I gasp at the beauty of the rope and the design it creates over my torso. My breasts swell from their confines - their faint pink color contrasting with my otherwise pale skin. The crimson color is stunning. My face turns warm when my eyes trace the length of rope down over my belly to between my legs. My clitoris is swollen and red, the exposed head jutting lewdly between its captors.\n\n\"Sir...Master, it's beautiful. Can we...would you take pictures?\"\n\nA look of surprise passes over Patrick's smoldering expression. Early in our relationship I'd requested that we avoid pictures - mostly to protect my public image should they accidentally get leaked.\n\n\"I would like nothing more,\" he responds, getting up to retrieve his cellphone.\n\nHe takes around a half dozen pictures from every angle, then a few embarrassingly close up shots of my breasts, cunt, and ass. Perhaps I'm more of an exhibitionist than I thought, because somehow my body is already catapulting towards orgasm. My clit is buzzing, sending shockwaves up my spine, splintering out to my fingertips. The pressure builds steadily and uncontrollably until I fear the slightest movement may propel me forward.\n\n\"Sir! I can't help it - I'm going to come!\"\n\nHe reaches forward and pulls the rope away from my clit, pulling each side out and away. I'm panting with my eyes clenched tight, attempting to quell the waves of pleasure inside of me.",
        "\"Breathe, Corrine. Let it pass.\"\n\nThe wave keeps building, pushing towards the inevitable crash, but Patrick continues to calmly talk me down. Focusing on his even voice pulls me back to center again, although my body is trembling while my pussy and asshole spasm erratically. Once it's clear I have control again, he replaces the rope around my clit - once again passing it though my folds.\n\n\"Mmmm... That was exciting to watch. I'd hoped you'd like this restraint, but I didn't expect it to push you so far, so fast. I think you need some distractions.\"\n\nHe rises and sits in the middle of the couch.\n\n\"Up you go. Lay over my lap.\"\n\nWith my hands bound behind my head it takes some effort to rise from kneeling, but I do, albeit with less grace than I'd prefer. He positions me so that my belly is over his jeans-clad legs, but my face and chest rest on the couch itself. Bent over in this way, the rope cinches up even more, pinching my aching clit and digging into the sensitive, wet folds- threatening once again to push me over the edge.\n\nIt's been so long since he's administered an over-the-knee spanking. Something about his implicit dominance over my body, coupled with his actual hand rather than a paddle or flogger, makes it much more raw and intimate. I've never been bound this way though, and the extra sensations from the rope and my immobility are making my head spin with excitement.\n\nAs he reminds me about using my safeword, one of his hands begins to rub over my bare and vulnerable ass cheeks and upper thighs. Goosebumps follow the path of his hand, and I press myself into him, grinding my hips - seeking rougher contact. I don't have to wait long.\n\nThe first strike is swift and hard, the echo of the slap seems to bounce off the walls around us. It takes a few moments for the sting to resonate over my skin, just in time for the second spank. It's clear the pace he sets is intentional, ensuring I feel each one both individually, but also compounded with the one before. Fire engulfs my hind-end as sting morphs to burn, and sensations travel from superficial to deep within the fleshy globes.\n\nThe pace increases, as do the distribution of slaps until the entirety of my ass and upper thighs are screaming in pain. My gasps and moans would make one think that I was in misery, but thanks to the rope clamping the base of my clit and rubbing my swollen folds, the reality is that I'm teetering on the crest of an epic climax.\n\nThe spanking stops and his hand goes back to caressing the burning flesh. Suddenly both hands are present and he's parting my red-hot cheeks and the two lengths of rope between them. Embarrassment overtakes me as I imagine what he sees below him - my tight puckered hole framed by ruby cheeks.\n\n\"So fucking sexy...\" His voice trails off, but soon after I feel him spit directly over the ring - once, twice, and finally a third time. I can feel his saliva trickle down my crack, dribbling over my pussy lips. Without pause, I feel a finger easily invade my passage and slip deep within me.\n\n\"Aauuugh\" I moan as exquisite sensations fill my anal passage as sensitive tissues stretch to accommodate him. His hand moves with a purpose in and out of my ass until he adds a second finger - then they both are moving in and out, twisting side to side. My body loosens and accepts their delicious torture.\n\nThey pull out, only to be replaced one by one with my largest anal beads - five of them, each at least two centimeters wide. I wriggle and leak as he pushes them deep inside me. Once in, I feel fuller than full and worry they may begin to pop out on their own volition until I feel him replace the ropes, each on either side of the little string and loop that remains outside of my body.\n\n\"Oh, Sir...oh, Sir. Please, Sir!\"\n\nI feel caught in a vortex of pleasure. The ropes on either side of my clit seem to be shifting back and forth, rubbing the erect nub between them almost better than any two fingers ever could. My hips actively hump against his lap, not caring how lewd and slutty my actions are - I just need to relieve the ache and pressure building in my core. The promise of the pleasure that lies on the other side of the explosion suppresses any sense of propriety I may have held on to.\n\n\"Do it, Corrine. Get yourself off over my lap. Come for me like the beautiful little slut that you are. Come like a little fuckpig who can't get enough. Come because it pleases me. Come for me Corrine!\"\n\nHis words and name-calling mesh together and sink into my brain, sparking even more fire inside my already ravaged body. I grind and grunt and sweat and cry until lightening explodes around me and within me. Wave after wave of white-hot heat and pleasure course through my body. Rapidly Patrick pulls the beads from my ass, amplifying my orgasm to even greater heights. Tears streak my face as my body convulses over his lap. My clit feels raw, burning like the skin on my ass.\n\nI'm mumbling gibberish...begging for something but I don't know what. I just keep saying, \"please, please\" over and over again.\n\nPatrick lifts me, curling me up and onto the couch. Quickly his hands reverse knots and coils until the rope is free from between my legs, followed eventually by my breasts and arms. Pins and needles greet me as my arms collapse against my sides. He uses his own hands to rub firmly over my hands, arms and shoulders until the pain is gone and they're warm once again.\n\n\"Fill me, Sir. Fuck me, please. I need to feel you.\"\n\nWith a growl Patrick flips me over until I'm on my knees with my torso resting on the back of the couch, reminiscent of our first trip to his cabin so many months ago. What had felt almost cold and detached that first time, I've now come to understand as full submission - which is anything but detached. It's an offering, a gift - a giving of oneself with no barriers except the safe limits chosen by those involved. I hear his button undo and zipper release. The sound of his jeans passing down over his hips has me spreading my legs wide - opening for him.\n\nOn his knees behind me, Patrick pushes his cock deep inside my soaking, swollen pussy and begins to fuck me hard and fast. He's not trying to prolong his pleasure - only pushing his own crest higher and higher until it violently crashes over.\"\n\n\"Fuck!\" He screams out as pulse after pulse of his cum shoots hard, coating my inner walls and making me complete. He pulls out and collapses next to me, pulling me down with him. Cocooned by his arms and torso, I curl into a ball in his lap. Feeling very safe, and very sated.\n\nHe traces the lines of my waterfall tattoo up and down my calf. Then quietly speaks.\n\n\"I know you've told me before that I'm the rock to your water - the hard to your soft - but you should know that I feel the same about you. You've become the foundation that I rest on - the place that I come home to.\"\n\nMy chest aches with love for this man as I consider his words. After some thought, I respond.\n\n\"Yes. I see that now, too. You're not just my rock. You're also the water that courses around me, shaping me - molding me. You're my light and dark - my pleasure and pain. I love you, Patrick.\"\n\nHe leans down to whisper in my ear.\n\n\"I love you too, Corrine.\"\n\nPatrick pulls me in tight, both arms fold snuggly around my body. My head rests against his chest.\n\nNothing else needs to be said."
    ],
    "authorname": "jhollander",
    "tags": [
        "bdsm",
        "mdom",
        "fsub",
        "bondage",
        "spanking",
        "love"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/rock-and-water-ch-10"
}