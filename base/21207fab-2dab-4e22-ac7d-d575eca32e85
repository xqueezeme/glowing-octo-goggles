{
    "title": "Seven Days Ch. 06",
    "pages": [
        "The next morning, Victoria stared up at Antonio's ceiling. On a poster, looking back at her, was a half naked Latina who held the smile of a seductress on her face. She was wearing cut off jean shorts that looked more like panties, and a short wet, white shirt that was torn just right below her nipples. She was sitting on a counter by a cash register counting money and below her the caption read 'Sex sells'. 'It most certainly does,' Victoria thought sadly as she stared at the young woman. She wondered if the girl had a family who would look down on her for taking these photos. Did she have men degrade her for the decisions she had made? Victoria continued to stare at the pretty girl on the poster as she heard a knock on the door.\n\n\"Hey Vicky, are you decent?\" she heard Antonio ask through the door. Decent. There was that damn word again.\n\n\"Yeah,\" she croaked out and sat up in the bed as Antonio entered.\n\n\"Coffee, dear?\" he grinned, while handing her a cup.\n\nVictoria smiled, \"Thank you. Just what the doctor ordered.\"\n\nVictoria took a small sip and glanced up at Antonio. He was dressed in tan cargo pants that were a little baggy, and a blue Best Buy shirt with a black long sleeve shirt underneath. His hair was still wet, giving him a little boy look.\n\n\"So you work at Best Buy?\"\n\n\"Yep. Home theater department. It's not much, but it helps pay the bills.\"\n\nVictoria nodded. \"Yeah, I wasn't saying anything bad about it. Hell, it's more than what I have. So what do you do for...him?\" She couldn't even say his name just yet.\n\n\"Oh, well, I'm...uh, I guess you could call it a runner. I pick up things and drop them off, no questions asked. He pays really well too, it's just that there aren't always drops to be made, so that's where the part-time job comes in handy.\"\n\nVictoria thought about that while she took another sip of her coffee. \n\n\"But hey, my shift ends at six and I can bring home some dinner. Do you like Thai?\" Antonio asked.\n\nVictoria nodded her head. \"Hey, if it won't make you too late, can you tell me about some places here that I could waitress at?\"\n\nAntonio scratched his head. \"Hmm, well your best bet is probably Calamity's Bar and Grill. It's at the corner of Turner and 45th street. It's...well, it's a step up from Hooters, but just barely. I mean, the girls have to wear these short black outfits, but they're not so bad. I used to bartend there and one of the managers is my friend. I can give him a call on my way to work. You're hot, Greg will hire you in a second.\"\n\nVictoria didn't know if that was good or bad. \"Um, thanks. That would be great. I'll just hop in the shower and take the bus over.\"\n\n\"Hey, do you want a ride? It's on my way. If you can get dressed in twenty minutes?\" Antonio asked, hopeful.\n\nVictoria hopped up. \"Yep,\" she said grabbing her bag and running to the bathroom. She quickly scrubbed and pulled her hair into a messy, massive ponytail of curls. She wrapped the towel around her body and ran out of the bathroom, crashing into Antonio. He grabbed her as she almost lost her balance. She quickly tightened her hold on the towel. When he released her, she noticed his eyes quickly drink in her appearance before settling on her neck.\n\n\"What the fuck?\" Antonio said, as he leaned in closer towards her neck. \"What happened?\"\n\nVictoria touched the small purple bruises that were located at the base of her neck and her left shoulder. Her constant reminder.\n\n\"Oh, it's fine. It doesn't hurt.\"\n\nAntonio lifted an eyebrow. \"Are those...bite marks?\"\n\nVictoria was so embarrassed. \"Uh, yeah. He, um. Yes, they are.\"\n\nAntonio grinned, \"Hehe, someone's a freak!\"\n\n\"Shut up!\" Victoria said, trying to conceal her own smile. \"I am not.\"\n\n\"Well, he's Italian, alright. Mark your woman any way you can,\" Antonio laughed. Victoria swatted him on the shoulder and pushed past him to the room. She walked over to his mirror and looked at the marks. Two small dark purple bruises caressing her neck and shoulder. Suddenly images of Nic's predatory grin and piercing blue eyes came back to her. She thought of the way they always looked right before he would bury his face into her neck, and how she would run her fingers through his soft black hair. That picture seemed burned into her eyes. She shivered and quickly dressed. She would have to remember to put makeup over the bruises.\n\nWhen they pulled into the parking lot of Calamity's, the outside didn't look so bad. Antonio had called his friend on the short drive over, so at least she had a leg up.\n\n\"Hey, I would go in with you, but Greg can talk forever and I'll be late. But see you later tonight with Thai. You're cool getting back by yourself?\"\n\n\"Yes, daddy,\" Victoria laughed, getting out of the car. \n\n\"Oooh, she called me daddy. Knew you were a freak!\" he laughed, then sped off before she could tell him to shut up again.\n\n'Fucker,' Victoria thought as she walked toward the restaurant. Calamity's definitely had a cluttered atmosphere about it. There were pictures of James Dean and Frank Sinatra everywhere, mixed with football and baseball paraphernalia. A pair of panties hung from one photo of Joe Montana and Betty Boop stickers were plastered on anything that was still.\n\nShe walked up to the hostess stand and noticed a guy and a girl arguing. The girl glanced at Victoria then back at the guy. She took off her small black apron, threw it at him and walked out.\n\nThe guy sighed and turned to Victoria.\n\n\"How many?\" he asked, placing the apron behind his back.\n\n\"Oh, I'm looking for Greg. Is he here?\"\n\n\"I'm Greg,\" he said, giving her a once over. \"You must be Veronica.\"\n\n\"Victoria, actually. Nice to meet you,\" she said.\n\n\"Hostess or waitress? Bartender is full\"\n\n\"Um, waitress, but I'll take whatever is available.\"\n\n\"You're hired. Follow me,\" Greg said, turning his back and walking quickly through the restaurant.\n\n\"So, do you have any experience?\"\n\n\"Yes. My dad briefly owned a restaurant, but I've been waitressing a long time,\" Victoria said, trying to keep up.\n\n\"Good. Here are the outfits, pick your size. We give you one free, but the other two outfits come out of your paycheck. I know it's black, but keep them clean and no lint.\"\n\nVictoria leaned over the counter looking for the correct size shirt and shorts...very short shorts.\n\nGreg leaned against the counter drinking in her figure. \"So, are you Antonio's girl?\"\n\n\"No, we're just friends.\" Victoria pulled the right size from the stack of black clothing and turned to Greg.\n\n\"Wanna start now? My ex-girlfriend just quit on me and walked out...well, you saw it. And as we speak, she's moving out of my apartment. So I'm staying an extra shift to avoid that headache...so, basically I'll be here all day. I'll place you with Tracy to train. Restroom is on the left so you can change,\" Greg said, then turned to enter the kitchen.\n\n\"Thank you!\" Victoria called after him. A small smile formed across her face. Finally, she'd be making her own money again. She wouldn't feel useless. She grabbed her work clothes and walked into the bathroom.\n\nOkay...these shorts were really short. But at least the black shirt was able to be tucked down inside them. The neckline was low, but whatever, it was an honest job and she was grateful. And at least she got to wear her Converse.\n\nWhen she walked out, she saw Greg standing next to a woman with long brunette hair. She was laughing at something he was saying. He turned his attention toward Victoria.\n\n\"Whoa, hot. Good. Alright, this is Tracy, she's going to be your shadow today. But I'm pretty sure you can handle it,\" Greg said, placing his arm around Tracy's shoulder.\n\nTracy smiled at her. \"Hiya sweetie. Come on, I'll show you the ropes,\" she said in a thick southern accent.\n\nThe day moved by pretty fast. It was basic waitressing 101. The customers were a little rowdy, much different than Victoria was used to. She had several ask for her phone number and one college kid that kept staring at her ass. But all in all, the day went pretty well. And Tracy even shared some of her tips with Victoria, even though, technically, there were supposed to be none during training. When the day was done, she said goodbye to everyone and rode the bus back to Antonio's. On the bus ride, she couldn't help but think of Nic. She wondered what he was doing right that moment. Was he hanging out with that girl Kim? Was there any part of him that missed her? Did he care?\n\nVictoria had reached the house before Antonio, so she grabbed the key from underneath the mat and let herself inside. She quickly changed out of her outfit and into a large shirt and jeans. She came back downstairs and realized how messy his house was. She started picking up different plates and bottles in the living room. She quickly washed dishes and straightened the kitchen. She went back into the living room and picked up his articles of clothing, magazines, and sports equipment. She emptied out ashtrays and organized his dvd's that were piled on the floor. One in particular caught her eye. When she was done cleaning, she placed the disc in the dvd player and sat down.\n\nShe was halfway through the movie when Antonio entered. \n\n\"Honey, I'm home,\" he said, shaking off his hair. \"Shit, it's raining hard out there. Oh, hey, you cleaned up. Sweet.\"\n\n\"Hey. You alright?\"\n\n\"Yeah, just wet and cold. Did you get the job?\"\n\nVictoria smiled up at him. \"Yep, I certainly did, thanks to you.\"\n\nAntonio snorted. \"Nah. That was thanks to your ass...I know my friend.\"\n\nVictoria laughed. \"Well, he seems nice enough. I already made some tips tonight. So, I can pay you back for the food.\"\n\n\"Vicky, stop trying so hard. Jesus babe, you've only been here for a day. Chill out. I'm not totally broke, you know. It's fine,\" Antonio said, pulling off his coat and setting the bag of food on the coffee table.\n\n\"I know, I'm sorry. I just...I don't know, thank you though.\"\n\n\"You're welcome. What are you watching? Is that Dracula? Fuck, that movie sucks,\" Antonio said, sitting down. \n\n\"No it doesn't. I love this movie. I had never seen it before. I didn't realize so many stars were in this movie. And Gary Oldman is so amazing as the count,\" Victoria said, barely able to take her eyes from the film.\n\n\"He acted like a fucking pansy over a girl. I mean, he's supposed to be the fucking bad ass of them all. Dracula! He should have been killing people left and right, owning shit. Not harping over some girl,\" Antonio said, stuffing a bunch of noodles in his mouth. \"That dvd is Sean's by the way. I would have never bought that shit. Give me Blade or something.\"\n\nFor some reason Antonio's assessment of the movie was unnerving for Victoria. She looked back at the screen and got chills at the way Dracula would stare at Mina. How she tried to struggle away from him in the theater, but he held her tight and she caved to his whim. This invisible power he held over her. Victoria gave a slight uncomfortable laugh.\n\n\"What's so funny?\" \n\n\"Nothing. I mean, I just always kinda...well, Nic always reminded me of a vampire. Watching this is...nevermind. Just strange.\"\n\nAntonio looked at Victoria. She was picking over her food, obviously thinking about something. He placed his carton of noodles back on the table and wiped his hands. \"Did you love him?\" At first Victoria was taken aback. She immediately shook her head 'no', but then she slowly nodded and put her face into her hands.\n\nFinally she looked back up at him. \"I know you probably think that's loony due to the nature of our relationship. Trust me, I think that myself. I don't know, the whole thing was just crazy.\"\n\nAntonio nodded his head then asked, \"Do you think he loved you?\" Victoria shrugged. \"Sometimes I thought...just maybe there was something on his side. But in the end, I guess I was wrong. I mean, there was always something in his eyes. Like he was in war mode at all times, but every now and then...I would get that small glimpse of peace. It was usually fleeting, but when I saw it, it was beautiful. It was like catching Dr. Jekyll right after Hyde had disappeared. I don't know. I know it sounds crazy, but that's the only way I know to explain it. And yes, I do think I'm crazy,\" Victoria laughed and then sighed.\n\n\"Did he ever...you know, did he ever force you?\" Antonio asked. \n\nVictoria shook her head. \"No.\"\n\nThey both sat there in silence thinking over the conversation as Bram Stoker's Dracula continued to play in the background.\n\n\"So, enough about me, why don't you have a girlfriend?\" Victoria asked, picking through some cashew chicken.\n\n\"Well, I did up until about a month ago. She wanted me to do the whole suit and tie and get a job working at a bank or something. That is sooo not me.\"\n\n\"But at least it's legal, and you don't have to worry about getting arrested with anything illegal in your car, Antonio. Perhaps you should have listened to her.\"\n\n\"Yeah, but getting a job like that, it will be years before I actually start making any dough. Working for Mr. Andretti, I can move up the ranks and retire in no time. I mean, my moms has been working all of her life, and I'd love to see her just sit back and relax. That would be perfect. And Nic, hell, he could retire tomorrow if he wanted to, and he'd be set for life. So would his kids and grandkids.\"\n\nVictoria had to admire Antonio's intentions, in a way, but she couldn't imagine him going down Nic's path. She felt there was more hope for him than that.\n\n\"You admire him, don't you?\" Victoria asked, picking up a dumpling.\n\n\"I mean, I don't know. Well, I'm twenty-five, and he's what, thirty-two. That's only seven years older than me, and he's done so much. He's Italian-American like me and when he walks into a room people listen. He commands respect and he always gets what he wants. People just do what he says.\"\n\n\"You know if you're nice and just ask, people will usually do what you say too,\" Victoria stated.\n\nAntonio shook his head and chuckled. \"It's a guy thing, Vicky...you wouldn't understand.\"\n\nVictoria smiled, \"I guess not.\"\n\n*****************\n\n\"And this is the last one, Nic. It's to make sure that the bartenders at the club...Nic?\" Eddie asked. He slowly waved his hand in front of Nic's face.\n\nNic's eyes followed Eddie's hand before they locked on his eyes. \"Yes?\"\n\n\"Um, I was just saying this is the last one you have to sign,\" Eddie sighed.\n\nNic leaned down, glanced over the document and then signed his name. Eddie scooped up the papers and stuffed them in his briefcase. He gave a small smile to Nic before he quickly exited.\n\nNic leaned back in his chair. He slowly ran his hand over the top of his desk, thinking about the time he and Victoria made love on top of it. The light blue lingerie had hugged her curves, causing his manhood to stand at full attention. God, what was it about that girl? He would never admit it to anyone, but he dreamt about her. It had only been a couple days, but he kept feeling a tightening in his chest. He wanted her back. A part of him wanted to make up for the night he called her a slut and ruined everything. But another part of him thought, how dare she leave him like that. And he was still trying to figure out where she had gotten the money. \n\nThe day after she had left, Nic had wanted to go over to his loft. Just maybe, she would be there, waiting on him like she had been for the past few weeks. But he knew she was gone. She would not be sitting balled up on the couch reading her book or watching one of those sappy Lifetime movies. She was really gone. Funny, all of the things he'd worked so hard for in life...a large house, several cars, and many other material things could not make him happy. Nothing could cheer him up. At the end of the day, those things didn't smile back at him. Those things didn't make him laugh. And those things didn't hug him back while they made love. Only one thing made him feel that way. He had to have her back. He would figure out a way to handle Victoria and business. But something told him, eventually he'd have to make a choice if she were back in his life.\n\nHis men had gone to her parents' house, expecting her to be there, but after a day of sitting outside of their apartment, she never came or went. So, she wasn't staying with them and Nic wondered why. As he was thinking about where she could be, Jimmy came in.\n\n\"Hey Nic, we found her,\" Jimmy said.\n\nNic immediately sat up. \"Where is she?\"\n\nJimmy hesitated for a second, and then said, \"She's staying with that kid, Antonio.\"\n\nNic clenched his jaw. \n\n\"What do you want me to do?\" Jimmy asked.\n\nNic sat for a moment thinking. He then looked up at Jimmy. \"Bring him in.\" \n\nJimmy nodded his head and left the room.\n\n*********************\n\n\"Screw you, fucker. I'm about to go home to some good cooking and a sweet little lady while you're jacking off in the bathroom on your break. Peace,\" Antonio said grabbing his jacket and gigging his friend and co-worker Freddie.\n\n\"Right back at ya, punk!\" Freddie yelled and then laughed.\n\nAntonio flirted with a cashier, until a customer tried to ask him a question. He quickly zipped past them and out of the busy store. It was pouring down rain, so he pulled on his hood and whistled while walking to his car. He reached into his pocket to retrieve his cell phone. He was about to dial his house phone when he halted in his tracks. Leaning up against his car were Jimmy and another of Nic's men. Fuck!! He knew he was in trouble. It wasn't every day that Nic's main guy came to visit you. And it was never a good thing. He slowly started to walk toward them.\n\nJimmy was holding an umbrella and sipping a fountain drink through a straw. When he was done, he tossed it aside. \"Hey Antonio. I need you to come with me,\" he said.\n\nAntonio knew this wasn't a negotiation. He nodded his head and followed the two men to another car and got in. Neither Jimmy nor the other man said a word to him on the ride to wherever they were going. Antonio started thinking about his mother. He thought of her wondering what happened to her son once they killed him. The little bit of money he did send to her would stop, and she would be all alone in this world. He thought about his ex-girlfriend, Shauna. She had told him to get a fucking desk job. Then he wouldn't be riding in the back of a car that might as well have been a hearse to his inevitable death. \n\nWhen they reached Nic's home, he got out of the car and they escorted him inside. Funny, Antonio had dropped several packages off at Nic's house and served as a waiter at parties, but he'd never actually seen the inside past the ballroom area. \n\nJimmy guided him up stairs and into a large room. Antonio saw Nic sitting behind a desk. When Nic noticed them enter, he got up from his chair and walked around to the front of the desk and leaned against it, crossing his arms over his chest.\n\n\"Have a seat, Antonio,\" Nic said.\n\nAntonio sat down in front of him. He didn't like being at such a disadvantage. Nic was already a tall guy, and now he was leaning over him while Antonio was forced to sit.\n\n\"I guess you can probably guess why you're here, right?\" Nic asked, staring at the scared kid.\n\nAntonio nodded his head. \"Yes, I can.\"\n\n\"Which is?\"\n\n\"Victoria.\"\n\nNic's heart fluttered at the mention of her name. None of his men ever said her name. They said, 'she' or 'her' or even 'Ms. Davis', but never just 'Victoria'. \n\n\"Yeah, Victoria,\" Nic repeated. He watched as Antonio wiggled in his seat. \"Did you sleep with her?\"\n\nAntonio's eyes bulged out of his head as he stuttered, \"N-No! Absolutely not, Mr. Andretti. I haven't touched her, I swear to God.\"\n\nNic stared down at the young man. \"You haven't touched her, though she's staying in your house...even after I warned you? How does that work?\"\n\nAntonio felt like he couldn't breathe. He glanced down at the floor praying he could talk his way out of this. \"Antonio?\" he heard Nic say. He quickly looked up at him.",
        "\"Choose your words carefully,\" Nic warned in a low voice, glaring at him.\n\nAntonio licked his dry lips. \"I--I, fuck, sir, she came to me and she was cold and crying and she didn't have anywhere to go. I didn't know what to do, but there's no way I could have shut my door on her. I just--I couldn't do that,\" Antonio said. \"I know you warned me, but I promise, she slept in my room and I slept on the couch downstairs. Swear to God.\" Antonio finally took a breath and squeezed his eyes shut. Holy fuck, how did he get into this mess?\n\nNic tried not to let Antonio's words affect him, but they did. He hated the thought of her cold and crying, turning to practically a stranger for help. She should have been with him. But the wheels in his head started turning. He knew of one way of getting Victoria back. She wouldn't have anywhere else to turn. \n\nNic stood there, leaning against his desk. He glanced over to Jimmy who was standing silently in the corner like he always did. Everyone in the room was quiet, waiting for him to make a decision. In life, Nic realized everything was a fucking chess game. And he had just figured out his next move. \n\n\"Antonio, I have a proposition for you. Actually, more of an exchange. I heard through the grapevine that you want to be more of an inside man, is that right?\"\n\nAntonio opened his eyes. \"Um, yes sir, I'd love to move up the ranks some,\" he said, sweeping his eyes across the other men in the room. \n\n\"How about I make that happen for you.\"\n\nAntonio turned his attention back to Nic. \"What? Really?\"\n\n\"Yes, I can make that happen. You'll get a major pay bump and you won't have the shit jobs anymore. I can make all of that happen for you, but you have to do something for me,\" Nic said.\n\nFuck, that meant taking care of his mom for good. No more backbreaking work for her. How did he go from thinking he was shark food to possibly being an inside man. \"Of course, sir, anything,\" Antonio said, too eagerly.\n\nNic hesitated for a moment. Then looked him straight in the face. \"Good. You have to kick Victoria out of your house.\"\n\nHearing that was like a bucket of ice being thrown on Antonio. The smile faded from his face. \"What?\" Antonio asked.\n\n\"Tell her to leave. Tonight.\"\n\n\"But, where will she go?\" Antonio asked. \n\n\"That's not really your concern, but she'll be with me.\"\n\n\"Sir, I can't do that,\" Antonio said, lowering his head. God, he wanted so bad to be on the inside. And at his age, that meant that by the time he was in his early thirties like Nic, he would have his own mini empire. Shit!\n\n\"Yes you can. I'll take care of everything regarding her. Plus, you don't get opportunities like this handed to you very often. And I'm sure you wouldn't want to consider the alternative,\" Nic said, before he walked to the door. \"Let's go.\"\n\n*****************\n\nVictoria was so proud of herself. She had finally learned to perfect Lasagna. She had been looking over several recipes all day, and found the perfect one. Sure, it was a basic dish, but she was still proud that she had made it. The cheese was a bright golden color, and the edges were slightly browned, and the smell...oh, it was fantastic. She couldn't wait for Antonio to taste it. He couldn't make fun of her Italian cooking anymore, seeing that she had tried to make chicken parmigiano the night before and it was...well, nasty, no other word. And she had been bragging that entire day about how good a cook she was. But tonight, she would redeem herself. She was adding tomatoes to the salad, when she heard the front door unlock. She quickly picked up her Lasagna masterpiece and headed to the front of the house.\n\n\"Ta da!\" she shouted, and held the scrumptious dish right under Antonio's nose when he entered.\n\nBut he didn't smile. He didn't even look at her. He looked down at the dish, and then pushed past her. She slowly turned, wondering what she had done. She quietly watched as he removed his coat and ran a hand through his dripping hair. He stood with his back facing her.\n\nVictoria stared down at her dish, then back up to him. \"Antonio? I didn't think it was that bad,\" she tried to joke.\n\nFinally he turned around to face her. \"Vicky...I, shit!\" he shouted. \n\n\"Jesus, Antonio, what's wrong?\"\n\n\"I did something, that, well, I'll probably regret. No, I KNOW I will regret. Just please find it in your heart to forgive me. Please,\" he said, walking closer to her.\n\nVictoria started to get a cold chill creeping through her body. She stared at his face, and realized something really bad had happened.\n\n\"What do you want me to forgive?\" she whispered.\n\nAntonio exhaled. God, she looked so small and fragile standing there holding dinner that she had prepared for him. She had been with him less than a week. He exhaled again and rushed out his explanation, as if to lessen the blow. \"Mr. Andretti...he, fuck, he offered me an opportunity to be on the inside.\"\n\nVictoria tried to smile, but she figured there was more that he wasn't telling her. Why would Nic offer that...especially to Antonio? \"Well, that's good. It's what you've been waiting on. I'm happy for you.\"\n\n\"Shit!\" Antonio screamed again, while kicking his coffee table over. The sudden move and loud crash caused Victoria to jump, but she said nothing, waiting on him to disclose why he was so upset.\n\n\"He...the only way I can have the offer is if I make you leave my house...tonight,\" Antonio whispered, staring down at the ground.\n\nVictoria couldn't believe what she was hearing. Not again. This can't be happening. No way this could be happening. \"And you said yes,\" she whispered, staring down at her perfect creation. She felt him sliding closer to her. \n\n\"Yes,\" he quietly whispered back. Immediately, as if on cue, tears sprang to the surface of her eyes, but she refused to let them fall. At that moment she hated her life. She hated that people had this power over her. They could just use her and toss her out. Nic, her father, and now Antonio. The pain of her existence started to really hit her hard. She moved around him and walked to the kitchen. She sat the lasagna down, and covered her mouth before a loud cry escaped. She really was all alone. She tried her best to calm her breathing and hysterical cry, but it was painful keeping it in.\n\n\"Fuck!\" she heard him say from the living room. He walked into the kitchen and tried to hug her, but she pushed him off and walked upstairs to his bedroom to pack.\n\nHe quickly followed. \"I'm so fucking sorry Vicky. I'm sorry, I can't tell you how much. Shit!\" he said, as he watched her pile her few belongings in her tattered duffel bag. She couldn't stop crying. She hated crying in front of people who she felt had wronged her. She was tired of being so fucking weak. Weak, stupid slut, she thought, which caused her to momentarily laugh, to keep from seeming so pathetic.\n\nAntonio tried to grab her again, but she pushed him off. \"Don't touch me! Just leave me alone, okay,\" she huffed out, and stomped out of his bedroom. He chased behind her and tried to grab her again before she exited.\n\n\"Let go of me!\" she screamed hysterically at him, while he pulled her in for a bear hug. \"No, get off me!!\"\n\nAntonio wouldn't release her. He kept trying to whisper his apology in her ear, but she didn't want to hear it. She was tired of men. Tired of their lies, manipulations and cruelty. She was done with them all. She finally shoved him as hard as she could, and that broke his bear hug.\n\nShe flung open the front door and immediately froze. Leaning against a black Escalade was Nic. He was dressed in his signature black suit and long black coat. He was holding an umbrella while the rain poured around him.\n\nAntonio slowly closed the door and leaned his forehead against it. He hated himself in that moment. He was sending her right back to Nic, which was something she had fought so hard to escape. \n\n\"Shit!\" he said again, as he kicked the door and then walked upstairs.\n\nVictoria hated that Nic was seeing her like this. All broken and crying again. Maybe he got off on seeing her in this state. Probably did. The rain was freezing and falling in large fat droplets. Her hair was already matted to her face and neck. She picked up her two bags and walked down the steps of Antonio's house. When she reached the sidewalk, she turned to the left right past Nic.\n\n\"Victoria, get in the car. It's freezing,\" Nic said, opening the backseat door. His heart had skipped a beat seeing her step out of the house. She was more beautiful than he remembered. Fuck, he needed to pull his shit together!\n\nVictoria ignored him and kept walking. \n\nNic slammed the car door and stalked after her. He grabbed her arm and pulled her back towards him and under the umbrella.\n\n\"Let go of me, you bastard!\" Victoria screamed at him, pushing him, causing him to drop the umbrella, while he gripped both of her arms.\n\n\"Get in the fucking car! We can talk in there,\" Nic shouted at her, while pulling her backwards.\n\n\"Let go! I fucking hate you!\" Victoria shouted, pushing him as hard as she could. But he wouldn't release her arm. \"Where are you going to go, huh? Where? Victoria, get in the fucking car and I'll put you up anywhere you want. Just get in,\" Nic said.\n\n\"I don't want anything from you! And I don't owe you anything! Now let me go!!\" Victoria shouted, pulling her whole body away from him, but he gripped her shirt tighter. He jerked her towards him again, and she almost lost her balance. The rain was stinging her eyes and she was already starting to shiver. But she absolutely refused to go anywhere with him.\n\n\"Get your hands off me!\" she cried. \"I'm not your plaything anymore. Let go!!\"\n\n\"Victoria, you have nowhere to go,\" Nic whispered to her.\n\n\"Then I'd rather be out on the streets than to be in your bed even one more night,\" Victoria spat at him, breathing quickly through her nose. \n\nThat felt like a kick to his gut. She really hated him that much? He stared down into her face to see if there was any part of her hesitating. But nothing. She wanted him to leave her alone. Well, fuck, he wasn't about to beg her. His mind told him to let it go. Here he was standing out in the rain having a shouting match with her, something he NEVER would have done with Amber, or any other woman for that matter...yet, here he was. What a fool. He noticed her shivering and the rain had molded her clothes to her body. Fuck her, she could leave in the freezing cold rain and be alone. Why should he care? He released his grip from her and turned to walk back to his car.\n\nVictoria quickly picked up her bags and stomped off down the street and turned out of sight.\n\nNic got into the car and wiped the water from his face. \"We can go back, Raymond\". They started to make the drive home when Nic shouted \"Fuck!\" He didn't want to let her go without knowing she'd be safe. Goddamn this girl! He had figured getting her to go with him might be a stretch, but he didn't realize she would refuse the way she did. Now, he felt like an idiot for having Antonio make her leave. As much as he hated that kid, he would rather her be in his house safe and warm, then out on the streets alone and freezing. \n\n\"Turn back around, Raymond. I need to find her,\" he said, whispering the last part more to himself.\n\nVictoria didn't know where the hell she was going. Her body was so cold, but she kept walking until she came across a park and sat down on the covered benches. The cold wind and rain were whipping her hair around her face. She was freezing, but couldn't force herself to budge. So far all of the men in her life had used her. Her father had taken away her childhood. She spent every day after school and weekends working in his failed businesses. So many friends' birthday parties, prom and many other events she had missed because of him and his constant need for success at any cost. She lowered herself to ensure that no harm would come to them, and he repays her by attacking her character and kicking her out of the apartment. The apartment that as of late, Nic had paid for. And her one friend...Antonio. She thought they were close. Even though she wasn't able to pay half of the rent yet, she did all of the household chores...yet here she was with nowhere to stay because she didn't own anything of her own. And Nic...he had used her for the last time. There was no way in hell she was going anywhere with him. Even if she wanted to, she just couldn't do that to herself again.\n\nShe had a few bucks on her and hailed a cab to the only place she had left to go. She was doing what she prayed she wouldn't have to do again. But she really had no option.\n\n\"Hello, is Mr. Marcone there?\" Victoria asked, when she pressed the intercom button. Her fingers felt frozen trying to hold the button down.\n\n\"Yes, may I ask who's calling?\"\n\n\"Victoria Davis.\" After a few moments, the gate opened and Victoria walked through. When she reached the front door, Paul opened it with a big smile, which quickly faded into a frown.\n\n\"Victoria?\"\n\n\"I'm so sorry to bother you so late at night,\" Victoria chattered through her teeth, dripping water all over his floor.\n\n\"Nonsense, come in. My God, you're freezing.\" He quickly barked orders at different people to bring some towels and a blanket.\n\n\"I want you to explain this to me later, but right now, we need to get you warm,\" Paul said, leading her upstairs. When they reached a large bathroom, he turned the faucet on. \"I'll step out, but please get in and get yourself warm. You're skin is ice cold. The water is on warm instead of hot, so you can adjust better.\" He turned to walk out.\n\nVictoria removed her clothes, which took a while since her fingers felt like they were frozen. When she stepped in the tub, the water was painful. But she forced her body down under the warm liquid. She coughed and then sneezed. Fuck. Her body was already aching and her eyes were watery. She stayed submerged under the water for a few more minutes before shakily standing up and wrapping herself in a towel.\n\nShe slowly opened the door and walked out. The young man who had handed her the bag full of money that day, was waiting for her in the hall.\n\n\"Ms. Davis, if you would please follow me, I'll show you to your room,\" he said.\n\n\"Oh. Thank you. And just Victoria,\" she said, as she walked closely behind him.\n\nIt was a large guest room, beautifully decorated. The heat filled her nostrils when she walked in. The young man turned on the light and was about to exit when she called out to him.\n\n\"Um, thank you...?\"\n\n\"Renny. And you're welcome,\" he said as he left.\n\nVictoria grabbed the large robe that was folded on the bed and slipped into it. She felt like shit. Her whole head felt like someone had hit her several times with a baseball bat. Her nose was burning and her chest felt tight.\n\nShe wanted to go find Paul and tell him thanks, but her body was so tired, she could hardly think. She pulled back the covers of the bed and got in. The sheets were so warm and comfortable. Within a few seconds, Victoria was asleep.\n\nAfter a while, Victoria saw a small light shine into her room as someone placed a tray on the nightstand beside her. Her nose was stopped up, but she was sure it was food. She rolled back over and nodded off to sleep again. \n\nLater that night, Victoria woke up gasping for air. She felt like she couldn't breathe. Her whole body was shaking. She tried to get up from the bed, but knocked over the lamp and tray that sat on the nightstand. They hit the floor with a loud crash, spilling food everywhere. Fuck! 'I'm more trouble than I'm worth,' Victoria thought, trying to clean up the mess.\n\nA few seconds later she heard footsteps coming down the hall. Shit. As soon as Paul entered, she tried to apologize. \"I'm so sorry, I was\u2014,\" Victoria tried to get out, before Paul shushed her. \n\n\"I have my doctor coming over to examine you,\" he said, helping her up from the floor and back into the bed. \"I've been checking on you while you were asleep, and your breathing is really labored and you're running a temperature.\"\n\nVictoria could barely listen to what he was saying. Her head was exploding. She laid back down and he pulled the covers around her. After a few more minutes, Renny escorted another man into the room. He was an older man with a bag. He took her temperature and held the cold part of the stethoscope to her chest. Victoria started fading in and out as Paul and the other man talked. That was the last thing she remembered before she fell back into a deep sleep.\n\n*****************\n\nNic was furious and...hurt. \n\n\"Turn down here,\" he said to Raymond. It was now three in the Goddamn morning and they were still searching for her. Nic cursed himself. He should have just followed her. It was freezing outside, and she only had a flimsy little jacket on since she had refused to take any of the clothing he had bought for her. He got desperate and had gone to her parent's house. That...had been interesting.\n\nHe had knocked on the door several times. He could see them pacing back and forth through the light in the peephole and he could hear them frantically discussing something. No doubt, whether or not to open the door for him. But then, finally, her father had answered.\n\n\"Yes?\" he said.\n\n\"I'm looking for Victoria, is she here?\" Nic had asked.\n\n\"No.\"\n\n\"Do you know where she is?\"\n\n\"No.\"\n\nNic narrowed his eyes at James. His next question was going to be, 'Do you care where she is?', but Nic didn't have time to argue with him. \n\n\"If you see her, tell her to call me. She has the number.\"\n\nJames just stared at him and then tried to close the door. Nic couldn't resist any longer. He stopped the door with his hand and leaned close to him. \"You may not owe me any money, but I can still make your life hell,\" he threatened.\n\nJames nodded slightly, \"I'll tell her to call if I see her.\"\n\n\"Thank you,\" Nic said, and removed his hand from the door.\n\nBut now he and Raymond were still driving around in the rain looking for her. Antonio had gotten in his car to look as well, but he had not called to give him any good news. Fuck! \n\nBy four-thirty in the morning, they pulled back up to his house. He needed to get into some dry clothes and get his head straight. When he opened the door, he saw Jimmy standing there with a worried look on his face.\n\nNic's heart dropped. \"What?\" he asked.\n\nJimmy hesitated, then said, \"Hey Nic, look, don't hate me okay? But...I know where she got the money from, and I know where she probably is right now.\"\n\nNic wanted to punch Jimmy in his fucking face. Why he hadn't told him earlier would be another conversation at another time, but right now he needed to get to Victoria. \"Where is she?\" Nic asked, burning a hole through Jimmy.\n\n\"She, uh, well the day she brought the money to you, she had called me earlier asking for Paul Marcone's address. So, I figure that's the only person she could have gotten it from. I would have told you earlier if\u2014\"\n\nNic turned and walked away from him. He didn't want to hear. That motherfucker had known all this time where she was and hadn't told him! Paul Marcone...what the fuck kind of relationship did they have? He didn't even know Victoria knew him. He marched upstairs to his office, pulled the bag from a small safe and quickly returned downstairs.\n\nHe walked out of the door without saying another word to Jimmy.\n\n********************\n\nWhen Nic finally pulled up to Paul's gate, they quickly let him enter. As soon as he parked he walked up to the door and was greeted by Paul.\n\n\"Hey Nic,\" Paul said, extending his hand.\n\n\"Paul,\" Nic said, shaking the older man's hand. \"I believe this belongs to you,\" he said, handing Paul the black duffel bag. \n\n\"Hmm, thank you,\" Paul said, looking at the bag, then placing the strap over his shoulder. \n\n\"Is she here?\" Nic asked, scanning behind Paul.",
        "\"Yes, she is. I'll tell her you're here,\" Paul said, turning to walk upstairs. Nic wanted to follow him, but this was Paul's house, and he would try his best not to be disrespectful. No matter how pissed off he was.\n\nVictoria was awake, but still she felt a bit weak. Her eyelids felt heavy. But whatever the doctor had given her had made her feel much better.\n\n\"Victoria?\" she heard Paul say as he entered. \"Good, glad to see you awake. Are you alright?\"\n\n\"Yes,\" Victoria croaked out. \"Thank you.\"\n\n\"You're very welcome. I need to let you know that Nic is downstairs and he wants to see you.\"\n\nVictoria quickly woke from her haze. \"No! I mean, no, I don't want to see him.\"\n\nPaul nodded his head and left the room.\n\nNic waited patiently as Paul came back downstairs.\n\n\"Nic, she doesn't want any company at the moment. But if you come back later, perhaps--\"\n\n\"Paul, you and I both know I'm not leaving here until I speak with her.\"\n\nPaul narrowed his eyes at Nic. He didn't want to get in the middle of this lovers' quarrel, but he also wanted to respect Victoria's wishes. She had come to him for help.\n\n\"I understand you're concerned Nic, but causing a scene in my house won't make this situation better for her.\"\n\nNic stepped around Paul and started heading towards the stairs. Renny approached from the side blocking Nic's path.\n\n\"Sorry sir, Mr. Marcone asked you to come back,\" Renny said.\n\n\"Paul, I have a lot of respect for you, but I'm about to drop this kid and head upstairs anyway. Now if you don't want him hurt, I suggest you tell him to move,\" Nic said, just a few inches from Renny's face. \n\nPaul could easily call another of his bodyguards, and blow this whole situation out of proportion. But he knew that Nic wasn't thinking rationally. And that he probably would break Renny's nose. Paul didn't know every detail about Nic and Victoria's strange relationship, but he did know that there were more feelings involved than either one was letting on. He stared at the back of Nic's body, which was tense. He had always liked Nic. Much more than Nic's father. Nic had a brutal honestly about him. Paul respected that. He wished his own son could be more like Nic. But Sonny was sneaky and unreliable. Two traits that neither Paul nor Nic possessed.\n\n\"Renny, let Mr. Andretti pass,\" Paul said. Nic moved forward, barely giving Renny a second to move out of the way. Paul followed behind. \"I would like to give her a heads up, Nic. So she won't think I am betraying her.\"\n\nNic stopped when they reached the top of the stairs. \"Alright,\" he said as Paul moved ahead of him and entered a room at the end of the hallway.\n\nVictoria looked up to see Paul come in. \"Is he gone?\" she asked.\n\n\"No. Actually, he's right outside the door. He wants to make sure you're okay, Victoria. He was very insistent. I'll stay in the room if you want. So is it alright to let him in?\"\n\nVictoria really didn't want to see Nic. Not now. Not when she felt and looked so weak. To fight him, she needed all of her strength. But she didn't want Paul to go through so much trouble just because of her. So she nodded her head.\n\nPaul walked to the door and let Nic into the room.\n\nImmediately Nic was concerned. She looked so frail. He wanted to scoop her up and put her in his car and take her to his house. Where she belonged. Her big, brown eyes looked weak and less expressive than they normally were. And although the room was pretty toasty, she shivered.\n\nVictoria watched as he scanned over her body. And then he turned to Paul.\n\n\"Has a doctor seen her?\"\n\n\"Yes, my family doctor came. He diagnosed it as a slight case of pneumonia, but he gave her some antibiotics, and already she's doing much better.\"\n\n\"This is much better?\" Nic accused. \"I want my doctor to see her,\" he said, looking back down at her.\n\n\"Nic, I assure you, my physician is one of the best. She's already feeling better.\"\n\nNic tore his gaze away from her and glanced at Paul. \"I need to speak to her alone.\"\n\nPaul looked back at Victoria and she slowly nodded her head. Paul walked out and closed the door behind him.\n\nNic removed his jacket and sat down on the bed. \"So, how are you feeling?\"\n\n\"I'm alright,\" Victoria answered. She took in his appearance. He seemed tired. His eyes were a darker blue and he had small dark circles underneath them.\n\n\"So basically, you'd rather get pneumonia than come back with me?\"\n\n\"Nic, I have no reason to be with you now. You have the money. So just leave me alone.\"\n\n\"Actually, I don't. I gave it back to Paul. What are you going to do when you leave here?\" Nic asked, wanting so bad to pull those covers back and get in bed with her. He knew another way to cure her sickness and hopefully make her feel better. Make himself feel better.\n\n\"I don't know, but I'll figure something out.\"\n\nNic exhaled. \"I'd like you to come stay in my house with me.\"\n\nVictoria shook her head. \"Nic, you just don't get it, do you? You treated me like shit! Like I was nothing. I even gave you a chance to explain your actions, and you refused. And instead, you called me...you made me feel so low. I felt worse the last night I spent with you more than the first night I spent with you. And I don't ever want to feel that way again. And then on top of that, you get my friend to kick me out when you KNEW I had nowhere to go. Why would you do that to me?\" Victoria asked, staring at him with hurt in her eyes.\n\nNic had no answer. Well, none that he actually wanted to divulge to her. \"Victoria, I know I've made some decisions that you don't understand, but I have my reasons for making them.\"\n\nVictoria scoffed. \"If that's all you have, then please leave.\"\n\n\"Victoria,\" Nic whispered, but she rolled over onto her side, facing away from him.\n\nNic got up from the bed, turned off her light and walked out.\n\nWhen he reached his house, Jimmy was sitting by the door. Nic ignored him and marched upstairs to his office. Jimmy followed.\n\n\"So, is she okay, Nic?\" Jimmy asked, shutting the office door behind him.\n\nNic glanced up at him and narrowed his eyes. \"And what was your reasoning for not telling me?\"\n\n\"Nic...I just wanted her to be okay.\"\n\n\"You have a job and you weren't fucking doing it!\" Nic growled at him.\n\n\"You know, if being a fucking decent human being is not a part of my job, then fuck, I quit!\" Jimmy shouted back.\n\nBoth men stood there staring each other down. \n\nJimmy finally relaxed and loosened his tie. \"Fuck, Nic. I've known you since we were little kids still wanting to be on the right side of the law. Over the years, I've never questioned you. And we've done some pretty shady shit, and hurt a lot of people, but I never minded because I felt like they deserved it. Hell, I even enjoyed it sometimes. But Nic, Victoria doesn't deserve this. I mean, you really thought you could take away all of her options, and she'd come back to you with arms wide open? It doesn't work that way. I know you're so used to getting what you want, and to have someone throw that all back in your face is new to you, but that's no reason to hurt someone who hasn't done anything wrong. Fuck, Nic. I...look, she was sad and miserable. I knew what she was planning to do, and a part of me wanted her to. This whole thing with her has gone way too far.\"\n\nNic sat down at his desk. \"Are you done?\"\n\n\"You don't even realize that you love her, do you?\" Jimmy asked, shaking his head.\n\n\"Jimmy, you don't know shit about our relationship. Love? You have no clue what you're talking about.\"\n\n\"Right...you couldn't possibly love her. That's why you were parading her around as your girlfriend a few weeks ago. Spending every other night at your condo, or driving around in the rain at five am searching for her. Because you don't love her, right?\" Jimmy retorted sarcastically. \n\n\"Done?\"\n\nJimmy shook his head. He knew there was no getting through to Nic, because he would never admit that Jimmy was right about something like this, even if he knew it was true. He would lock it deep down inside and ignore it for the rest of his life. \"Yeah, I'm done Nic,\" Jimmy said as he walked out.\n\n********************\n\nOver the next two days, Victoria quickly recovered thanks to the doctor's visits and medication. She tried to stay out of Paul's way so she wouldn't be more of a bother than she already felt, even though Paul insisted that she wasn't. Paul offered to let her borrow one of his cars, but she politely declined and took the bus to work. At first, Greg had refused to let her work since she was recovering, but Victoria was desperate. She needed to make some money, so eventually after nagging and following him all over the restaurant, he agreed to let her pick up some more shifts if she would just shut up.\n\nBut it was her third day in the house when Sonny showed up. And of all the times, she had been bending over her bed, trying to find a rubber band for her hair when she heard his voice.\n\n\"Damn, I think that's about the best position,\" he said.\n\nHer body immediately tensed as she raised up. She was still on her hands and knees when she turned to glare at him.\n\n\"Don't you knock?\" she asked.\n\n\"In my own home?\" he shot back at her, raising an eyebrow.\n\n\"I thought this was your dad's house.\"\n\n\"Yeah, but when he bites the dust, it will be mine. So...how are you feeling? Pops told me you were really sick,\" Sonny said, leaning against the door frame.\n\n\"I'm much better, thanks to your father,\" Victoria answered, looking uneasily at Sonny. She just didn't trust him.\n\n\"Good. Glad to hear it. By the way, dinner's ready,\" he stated, and then walked out.\n\nDownstairs, Victoria sat at the dinner table with Paul and Sonny. She noticed that neither man really talked to each other. They more or less talked to her. Paul said he wasn't feeling well, but said not to worry, he was just tired. Victoria asked if he were sure, and he said he was, then excused himself early, asking her to finish her meal. But this also left Victoria alone with Sonny. The asshole.\n\nShe noticed him, out of the corner of her eye, staring. She tried to ignore him as she picked over her salad. \n\n\"Vicky...I want to apologize to you,\" Sonny said, taking a sip of his drink.\n\nVictoria looked up at him. \"What?\"\n\n\"I want to apologize for the prior two times that I met you. You know, for the pool game and Nic's party. For what I said. And if it's okay with you, I'd like to start over.\"\n\nVictoria didn't know what to think. What did he want? Sonny had this friendly way about him, but it was almost that look he would give right before he would stab you in the back. She just didn't trust him.\n\n\"I mean it. So...this is corny, but I'd like to re-introduce myself. I'm Sonny Marcone,\" he said while reaching for her hand.\n\nVictoria did think the whole thing was rather silly, but she would play along. \n\n\"Apology accepted and I'm Victoria Davis.\"\n\n\"Nice to meet you, Victoria,\" he said, while kissing the back of her hand. A gesture he learned from his father no doubt. She wondered why none of Paul's other wonderful traits had rubbed off on him.\n\n************************\n\nSonny ended up becoming a permanent fixture at his father's house. Victoria couldn't escape from him. But pretty soon he started wearing her down, and she even laughed at a few of his jokes. When he didn't have a group of people around to show off in front of, he seemed like a halfway decent guy. \n\nHe even tried playing Scrabble with her, but she could tell he was pretty bored with it. His game was cards. Poker to be exact. Victoria had played before, but she was nowhere near as good as Sonny. He beat her every time. And something in his eyes when he won, was unsettling for Victoria. Almost like this lust for winning. He had to win at all cost. She thought about that night he bet Nic in the pool game. How dark his eyes seemed when he had lost. And again, when he taunted her at Nic's party, and she told him not to bet someone who will beat him every time. Again, his eyes darkened. Victoria tried to shake off the thought, and concentrate on the game.\n\n\"So, a friend of mine is throwing a small party tonight. Wanna go?\" Sonny asked, placing down another card.\n\n\"No, thanks,\" Victoria said, as she studied her cards.\n\n\"Oh, come on Victoria! Live a little. You go to work, then come back here and read, then go back to work. You're too young for that shit. It will be fun,\" Sonny said.\n\n\"Sonny, I'm content right here. But thanks for the offer.\"\n\n\"Please...please. I need a date. You wouldn't want people to think I'm a loser, would you?\"\n\n\"Sonny, I'm sure some already do,\" Victoria quipped, while placing a card down.\n\nSonny pretended like she had struck an arrow to his heart. \"See! That's why I need you. Who else is going to keep this huge head of mine from taking off?\"\n\nVictoria laughed and shook her head. \"Sonny, no. Besides, I have nothing to wear to stuff like that.\"\n\n\"Problem solved, I'll buy you something now,\" he said, as he placed his winning hand down and left the table.\n\nVictoria hopped up. \"No!! Wait, seriously, don't do that!\" she called after him.\n\nHe stuck his fingers in his ears and walked toward the door. \"I can't hear you...be back in a bit,\" he said, grabbing his jacket and leaving.\n\n'Fuck!' Victoria thought. She walked back to the table to clean up the game. She grabbed a book and went to her room.\n\nAbout an hour later, Sonny appeared at her door.\n\n\"Knock, knock,\" he said, while barging in. She could tell he held something behind his back. \"For you,\" he said, while holding up a very short, strapless bright blue dress in one hand, then pausing for a moment before producing the heels in his other hand.\n\n\"Sonny! I...no, no no! I'm not going. And I asked you not to spend any money on me,\" Victoria said, clearly pissed.\n\n\"Hey, don't worry. I got this dress from a flea market. Seriously, there might be some stains on it.\" He quickly ducked from the box of tissues that Victoria threw at him.\n\n\"Come on, you have no excuses now,\" he said.\n\nVictoria sighed and leaned back against the headboard. She did kind of want to get out of the house for a bit. Just not with Sonny and definitely not at one of his parties. She would just die if she ran into Nic.\n\n\"You said it's a small party, right? A close friend of yours?\" Victoria asked, slowly feeling herself caving.\n\n\"Yep. Small party, close friends.\"\n\nVictoria didn't want him to think she was thinking about Nic, but she had to ask. \"And no chance of running into Nic, right?\"\n\n\"Nope, he's not invited,\" he smiled.\n\nVictoria looked at the dress again. If they only stayed and hour or so, who could it hurt? \"Alright. I'll go. But this isn't a date, okay?\"\n\n\"Yes! And gotcha, not a date,\" Sonny said, handing her the dress and shoes. \"See you downstairs.\"\n\nVictoria stared at herself in the mirror. The dress Sonny had chosen was awfully short. And strapless at that. And tight! Fuck! She could barely bend over to slide her heels on and fasten the straps.\n\nShe grabbed her jacket and met Sonny downstairs. He gave her body a onceover. \n\n\"Damn, you look so good,\" he said, glancing at her ass again.\n\n\"Thanks, but Sonny, this dress is so tight. You sure you got this for me?\" Victoria questioned, raising her eyebrow. \n\nSonny laughed, \"Trust me, I knew exactly what I was doing.\" \n\nWhen they pulled up to the party, there were several cars parked outside of a club. It was definitely not a small get together.\n\nVictoria stared at the long line of people waiting to get in. \"Sonny, you said this was a small party!\" \n\n\"Well, I guess he invited more people,\" Sonny said, grabbing her arm to escort her to the front of the line. The bouncer immediately let Sonny in, and the two glided through the main entrance. The club was packed. People on all sides. Victoria couldn't really hear anything over the loud music, but Sonny stopped and talked with several people. He was definitely charismatic in a room, Victoria thought. He continued to pull her through the crowd, until they made it to a small room in the back. The VIP section. \n\n\"There he is,\" Sonny whispered in her ear. Victoria was trying her best to tug her dress down below her ass. She would have to remember when they left to kill him for buying this damn dress.\n\n\"Karl! How are you buddy?\" Sonny asked a guy. Victoria still couldn't see over his shoulder, but she heard a man with an English accent answer him.\n\n\"Sonny! I'm well. How are you? You know, I was just saying to me self that it isn't a party until Sonny Marcone shows up.\"\n\n\"Hey man, I want to introduce you to my lovely date, Victoria,\" Sonny said, pushing her up front.\n\nVictoria was about to say hi when she froze. Son of a bitch!!! She should have NEVER trusted Sonny. Standing beside the guy she could only assume was Karl, were Nic and Jimmy. They both immediately stared down at her. There she was in this ridiculously short, tight dress with Sonny holding her hand. She tried to pull it away, but he only gripped her hand tighter. Her skin seemed to burn as Nic's eyes scanned over her dress and then back up to her face. She could see the veins in his neck and she knew he was clamping his teeth together. \n\n\"Nice to meet you, Victoria,\" Karl said, the only one in the group with a smile still on his face.\n\nVictoria still couldn't speak. She tried to jerk her hand away again, but Sonny tightened his hold. Nic must have sensed it, because she saw his eyes shift to their hands and then to Sonny's face. Victoria tore her gaze from Nic long enough to look at Jimmy. He gave her a small smile but didn't say anything.\n\n\"And Sonny, I think you know Nicolas and Jimmy,\" Karl offered further, clearly not picking up on the negative tension surrounding the situation.\n\n\"Yeah, Karl. We all go way back,\" Sonny said, smiling in Nic's direction.\n\nNic's fucking head was on fire. There she was standing in that outfit and holding Sonny's hand. Fucking bitch! And he had almost let Jimmy's words the other night affect him, only to find that she had moved on, and of all people, his fucking enemy! She refused to stay with him, yet now she was hanging out with Sonny. Nic couldn't hold it in any longer. He wanted to hurt her as much as she had hurt him.\n\n\"So, you fucking him now?\" Nic spat out at her.\n\nVictoria's eyes widened and Jimmy coughed.\n\n\"Um...hey you know, I see another guest who just came in. I'm going to say hello. Um...yeah,\" Karl stammered, as he quickly left the group.\n\n\"Whoa there, Nicky. Is that any way to greet a friend?\" Sonny said, smirking.\n\n\"Stop it, Sonny,\" Victoria said, finally jerking her hand from him. She knew he was trying to bait Nic. \n\n\"What?\" he said, looking down at Victoria. Then he stared back up at Nic. \"See, our boy Nic can dish it, but he can't take it.\"\n\nSonny took a step closer to Nic. \"You steal the Russians, so I fuck your girl,\" Sonny whispered, just seconds before he was slammed back against a wall and lifted up to his tiptoes by his throat.\n\nJimmy grabbed Nic's hand that was squeezing Sonny's neck. \"Nic! He has two guys by the door. They're going to know what's happening in just a second. Let him go,\" Jimmy said, scanning the room to make sure no extra attention was brought to the problem.\n\nVictoria screamed, but quickly covered her mouth. She had never seen Nic lose control like that. Usually, he was so calm and never got frazzled. At least not with other people. \n\nNic only saw red. He knew he had to get himself under control, but everything in his body was telling him to choke this fucker until his eyes bulged out. But that wasn't Nic's style. Not in a public area like this...at a friend's party. He released Sonny's neck.\n\nSonny coughed and rubbed his neck. He quickly straightened his tie and smoothed his hair back, glancing over to the corner where two of his men were engrossed in a conversation. ",
        "Nic looked down at Victoria. \"Outside, now,\" he barked at her.\n\nVictoria just looked at him like he had lost his mind. \"I'm not going anywhere with you.\"\n\nNic grabbed her hand and was about to pull her away from the group when Sonny made the mistake of grabbing her other hand. Victoria tried to jerk her hand away from Sonny, but Nic was already heading for him again when Jimmy stepped in and blocked the two men.\n\n\"Take your fucking hands off her,\" Nic growled at Sonny.\n\n\"She's my date!\" Sonny spat back.\n\n\"Keep fucking with me Sonny. And pretty soon the fact that Paul Marcone is your father isn't going to be enough to keep me from putting a fucking bullet between your eyes,\" Nic warned, jerking Victoria behind him.\n\nSonny knew the look on Nic's face, and Nic wasn't bluffing. Sonny looked down at Victoria. \"Don't take too long. I'll be leaving soon,\" he said, as he turned to walk away.\n\nNow that the situation was defused, Victoria tried to pull her hand from Nic, but he gripped her tighter, almost painfully, and pulled her to a side door. \n\n\"Nic, oww, you're hurting me,\" she said, trying to get him to stop, but he pushed open the door. Waiting outside was his limo. He opened the door.\n\n\"Get in!\"\n\n\"No!\" Victoria shouted.\n\nNic was beyond pissed at this point. This girl always made him lose his fucking mind. He hated getting so worked up. Only fools lost their temper and once that happened, they usually lost control of the situation. That wasn't him. He was calm and collected for the most part. Until Victoria started fucking with him. \n\n\"So you're fucking him now?! You certainly move from house to house\" Nic yelled at her. \n\nThat's it! Victoria wrenched her hand from him and slapped him as hard as she could. Then she stuck her finger in his face. \"Don't you EVER say anything to me like that again! I don't know why you get off on embarrassing me, but I'm not a whore, I don't care what you think! I've only slept with two men in my life. One was my high school boyfriend that barely touched me and the other is you, you motherfucker!\" she screamed, punching him in the chest.\n\nNic stood there, taking in the sight of her. His face was stinging, but he knew he deserved it. He had to chuckle to himself. A month or so ago, there's no way in the world she would have gotten away with that. But right now, fuck if she didn't look fine as hell. He had missed her so much. It had been too long. He wanted her. Now.\n\nVictoria calmed her breathing long enough to take in the way Nic was gazing at her. He had that look on his face...the one she had seen several times before. She needed to leave. She turned to go back inside, when Nic blocked her exit. He gently pushed her back against the limo and locked her in with his arms braced on both sides of her.\n\n\"Get in,\" he whispered to her.\n\n\"No.\"\n\n\"Get in, Victoria.\"\n\n\"No!\" she said, breathing hard and glaring up at him. Her body was so close to his, he was brushing up against her, causing her nipples to harden.\n\n\"I just want to talk, okay?\" Nic whispered close to her neck.\n\n\"No you don't,\" Victoria said, turning her head away from him.\n\n\"Just talk,\" Nic persisted.\n\nVictoria knew better, but damn if she wasn't getting an aching down there. She had only been away from Nic for less than two weeks, but still, she felt herself moving toward the car door. \n\nShe finally sighed. \"Okay. But to talk only.\"\n\nNic opened the door and she stepped inside. He quickly followed and shut the door. He turned on the overhead light and stared at her.\n\nVictoria was trying to pull the dress down again. But sitting was a bit of a challenge. \n\n\"Okay, what do you want to talk about?\" Victoria asked.\n\n\"Why the hell did you show up here with him?\"\n\nVictoria sighed again. \"Nic, that's really none of your business. You and I have no connection now.\"\n\n\"He bought this dress for you?\" Nic said, scanning over her curves.\n\n\"Nic, I told him not to. Honestly, I didn't want it,\" Victoria said.\n\n\"Can I tell you that HONESTLY, I want to rip that shit off your body? You let him parade you around in that like you're his fucking Barbie or something.\"\n\n\"Like you haven't,\" Victoria replied. She shook her head. She didn't owe him any explanation. She tried to exit the limo, but he grabbed her and gently pulled her down to the floor. \n\n\"No! Stop it, Nic,\" Victoria said, trying to push Nic off her.\n\nNic hadn't felt her lips since the morning he had left her and not come back. They had been torturing him in his dreams. He roughly kissed her and shoved his tongue into her mouth. He heard her moan, but then she tried to pull her head away. The short dress had already risen to her waist. He took that opportunity to pull her panties off and shove them in his pocket. His little habit when it came to her. He spread her legs apart, and placed his body in between them. He yanked the top of her dress down, exposing her perfect, round tits. He massaged one of her soft mounds before he seized a nipple in his mouth and rolled the bud around his tongue. He heard her moan again.\n\n\"I'm not having sex with you,\" she gasped, trying to push his head away from her breasts, even though the feeling was starting to get to her. She could already feel the wetness between her legs, that she was sure was dampening the front of his pants.\n\n\"Yes you are,\" he moaned into her soft skin.\n\n\"No, I'm not. Stop it...uh, fuck, stop Nic,\" Victoria said, pushing him harder.\n\n\"Sure sounds like you want me to,\" he grinned up at her, and moved his body down hers until his tongue licked her slit. She inhaled sharply and arched her back. His tongue proceeded to assault her moist pussy, licking the sides and sucking on her hard clit. He teased her by shoving his tongue inside her and twirling it. Victoria thought she was going to die. A happy death.\n\n\"Nic, wait. Stop,\" she said breathlessly after she came, trying to push his head away. She couldn't take anymore. She was already so sensitive. She felt his wet tongue leave her pussy as he climbed back in between her legs. She laid there quietly as she heard him unbuckle his pants. She knew it was about to happen, and she wasn't going to do anything to stop him, because she wanted it to happen. She was such an idiot to give him this power back.\n\nNic slowly thrust into her wet pussy, dragging out a moan from both of them. He laid his body flat on top of hers and gripped her upper body while he bit down on her neck.\n\n\"Aah, fuck, Nic,\" Victoria muttered. He felt so damn good. And she welcomed his roughness.\n\nNic wanted to pull his shirt off and push his pants past his knees, but he couldn't stop long enough to do it. Her pussy felt so good, enveloping his cock. She was still so tight, like she had been waiting just for him. He knew she had. He started to drive in and out of her faster and faster. He was sure if Raymond came to check on the limo, that he would know exactly what was going on in here. He could feel the car rocking under his thrusts. But he wanted to be as close to her as possible, so he kept his chest pressed tightly against hers, while his hips moved rapidly up and down, trying to bury himself as far into her as he could.\n\nVictoria stared up at the ceiling of the limo. She wanted him. There in that moment, she wanted this mean, possessive, alpha asshole. And she wasn't even sure why, but she loved him. But she knew deep down the only way he would treat her how she believed she deserved to be treated was if he loved her. She could never go back to the type of relationship they had before. If they ever ventured into real relationship territory, it would have to be on equal footing. Something she wasn't sure he'd be willing to share. She would learn to understand the war and peace that was constantly going through his head, but she knew underneath this rough exterior was something only she could touch. She had seen it, even that night when he had hurt her so badly, she saw him hesitate. She saw a flash of forgiveness in his eyes, but he would have to meet her halfway. He had to. But she still wanted him to know how she felt, and prayed before they left this limo, that she would know how he felt. \n\n\"Nic...I think I love you,\" she whispered to him, running her fingers through his jet black hair. She felt him slowing his thrusts down until he stopped. He was completely still on top of her, but she could hear him breathing by her ear. She wondered what he was thinking at that moment. Then he slightly raised up and stared into her eyes. She watched, as his eyes scanned hers back and forth, as if to see if she were joking. But Victoria wasn't. She meant every word. She bit her bottom lip, watching him watch her. He had yet to say anything.\n\nShe placed both her hands on the sides of his face and lightly gripped his hair. \"Do you...do you think, maybe you love me too?\" she whispered to him, her heart beating a million miles a minute. 'Please, meet me half way,' Victoria begged in her mind. \n\nNic looked down into her hopeful face. He did. He knew he did, he just still wasn't ready to go that step. He just couldn't. Not yet. This was all still so new to him. It was throwing him off. He had to figure some things out first. So instead of answering her, he leaned down and kissed her lips, then made a trail back down to her neck and started thrusting into her again.\n\nVictoria closed her eyes, swallowing back the lump in her throat. She held onto Nic tightly, knowing this would be the last time she was ever this close to him. She couldn't accept anything less this time, and he couldn't even confess his love or any love for her. She held him firmly and whispered into his ear that she loved him again, trying desperately not to let any tears fall. She thought she felt him hesitate a second, but he continued to plunge in and out of her.\n\nNic didn't know what he was feeling. Hearing her whisper those words to him...was really fucking him up. He wanted her back, but he just wasn't sure if he wanted everything to be this deep yet. But for right now, he just wanted to be inside her. \"Ugh, shit,\" Nic whispered into her neck as his lower body convulsed and he came, sending his sperm deep inside her womb. \"Fuck, Victoria.\"\n\nNic rested his body on top of hers for what seemed like several minutes. He wasn't ready to part from her. But he felt her wiggle underneath him, her tell-tale sign that she was getting uncomfortable. Nic raised up from her and pulled his pants back up. He grabbed her hands and pulled her up to her knees.\n\nVictoria pulled up her top, and pushed down the bottom of the dress. She knew she had to leave now and not look back. She couldn't do this with him any longer. \"Nic, can I have my panties back,\" she asked, while fixing her hair.\n\n\"No.\"\n\nVictoria sighed, and went to open the door, but he grabbed her.\n\n\"Wait, where are you going?\" he asked.\n\n\"I'm going to find Sonny, so I can go.\"\n\n\"Oh, no the fuck you aren't. Just come back with me,\" Nic suggested, trying to keep her with him. \n\n\"Nic, no. There's nothing for us,\" she said.\n\n\"What are you talking about? What do you call this?\" Nic asked, looking between the two of them.\n\n\"It was just sex. Something you and I are great at. About the only thing we do great together.\"\n\nNormally a girl making a comment like that wouldn't have fazed Nic, but for some reason that one hurt. Especially coming from her. She went to reach for the door again when Nic grabbed her and pulled her onto his lap, pressing her back to his chest. He locked his arms around her, so she couldn't move.\n\nVictoria could feel his heart beating fast as he leaned his head against her back. She felt his hair tickle her shoulder. He gently kissed the middle of her upper back.\n\n\"Victoria...I, fuck,\" he whispered and closed his eyes. \"I never said I didn't love you.\"\n\nVictoria slowly nodded. \"But you didn't say you did,\" she whispered back. She pulled his arms from around her, opened the door and stepped out.\n\nWhen she closed the door, Nic leaned his head back against the headrest. \"But I never said I didn't,\" he repeated softly. He sat there for several minutes, just thinking, before he got out of the limo and slammed the door.\n\n*\n\nThank you so much for reading chapter 6, and I really hope you all enjoyed!! Chapter 7 might take just a little while longer than chapter 6 did, but as always, I'll try to get it out as soon as possible;-) Thanks for all of your comments, emails and votes! Much appreciated.\n\nSoular  "
    ],
    "authorname": "soular",
    "tags": [
        "interracial romance",
        "interracial novella",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/seven-days-ch-06"
}