{
    "title": "The Lost Boy Ch. 12",
    "pages": [
        "A.N. Hello, hello, hello, hello.\n\nThis chapter was finished a long time ago but unfortunately didn't get uploaded unil now because reasons. \n\nBut I hope that doesn't stop you guys from liking it! :D \n\nThe next few chapters will follow VERY soon, like this week soon. So stay tuned and keep an eye out for them over the next few days!\n\nThe Following Contains: Interracial sex between a dominant black dickgirl and a submissive little white boy. Hawt. \n\nEnjoy!\n\n*****\n\nIt was cold.\n\nThe brisk Autumn air blasted all around him, it felt like Ian was able to see in small fragments. Flashes and flickers of light from the surrounding buildings on the ground below. He was constantly blinking as the gusts of wind whipped through his black locks and chilled his face. Coherent thought was difficult to manage as the world flew by in a flash.\n\nYet somewhere in all the loud noise, Cassie's voice managed to reach his ears. \"I've got you Ian, just hold on to me.\" It was strange, despite the roaring of the wind he could hear her just fine. Her voice managed to overpower all the exterior sounds and felt as if she just resonated in his head. He wanted to reply, but the world moved too fast for him to focus. All he could do was hold onto the soft body of his friend as tight as he could, hoping that whatever was going on would be over soon. That he could open his eyes and be awake in bed, greeted by his beautiful mothers and be back to his normal life. And all that just ensued at that club, The Den, would have been just a bad dream.\n\n\"They...they were dragging people...\" He squeezed his eyes tightly shut, no longer able to keep opening them as the rushing air dried his orbs out painfully. \"That woman...bit me...those eyes...\" As he shut them the images of what he saw after that lady assaulted him flashed back through his thoughts. Women in the club were grinding up against men and other women that were there. Unzipping their pants and pulling out... \"It couldn't be...\" He only caught a few glances before Cassie and Peter bolted him out of there. But he still managed to see what was beginning to happen.\n\nHis whole world was flipped upside down in the span of only a few bewildering minutes. Both literally and figuratively.\n\nCassiel couldn't think of anywhere else to go, he tried to bury Ian's head into his chest as tightly as he could but the Angel was a little bit smaller than Ian was. So he was sure that Ian could get a couple glances at the holy white angelic wings and the sheer altitude of them above Shelter. \"Shit, shit, shit, shit!\" He thought beating his wings as hard as he could, flying over towards the edge of town.\n\nIf Liline or Sin found out that Cassiel allowed Ian to be exposed to an entire brood of Urul, they would never let him see Ian again.\n\nSo taking him back to those two was not an option, Cassiel had grown very fond of Ian over the last few weeks he'd spent watching over him. But at the same time, this was over the young Angel boys head. He needed to reach out to someone who held a little authority in Shelter and would know what to do while still keeping a lid on the situation at least for now. And the first person that came to his mind was his own personal mistress Samantha.\n\nSince she was the owner of himself, the only divine being in all of Shelter, she held quite a bit of sway in many of the things that went on in town. Mainly by selling him in exchange for favors or just simple coin. But regardless, he had a feeling that she would know what to do, and there wasn't anyone that he trusted more than her. Hopefully she would be able to help them.\n\nFinally after only about thirty seconds of flight, but what felt like thirty years, the construction site came into view. Cassiel knew that this is where Samantha would be around this time, she told him when they woke up today she would be out late tonight working on the motel with Gloria and he didn't need to wait up.\n\nNext to Shelter's carnival, a large motel was being built. A full three-story building that stretched into a U shape was being put into place quickly via help from the towns infinite supply of Wretched workers. It wasn't finished and still had the chain link fence and warning sign posters around it, but based on Sam's original calculations, it should be ready to go within the next few weeks. Depending on whether or not they connected it to the trailer park grounds or left it as standalone. Since Shelter's wall came down, many of the Sisters were trying to put into place locations to hold all the visiting outsiders. Thankfully, Samantha was good at her job as well as several others so it was still a manageable problem for now.\n\nAs soon as Cassie spotted the trailer parked just a few yards beside the site, he nosedived. Ian immediately tightened his grip around the Angel upon feeling the complete shift of speedy weightlessness, to a plummet back into the harsh realities of gravity.\n\n\"AAAAAH!!\" He screamed bloody murder as the starlit sky grew further away from his view underneath Cassie's arms. The sound of it was still carried away though into the wind, all the way up until the pair came to a harsh halt in movement.\n\nCassiel's wings spanned out completely when they reached only a few feet above the ground and settled into a smooth glide until his feet delicately touched the sandy gravel.\n\nDespite also feeling his shoes hit the pavement, Ian still clung to the smaller frame of his high school companion. Eyes wide in fear at the prospect of becoming a large splat mark still fresh in his system.\n\nOnce they were settled, Cassie banished his wings and the two radiant beacons flickered, vanishing into a dazzling sparkle and flurry of feathers. Understanding what Ian just went through though, Cassiel didn't let go of him and tried to comfortingly rub his back. \"It's okay Ian, we're safe now.\" He then tried to walk him, arm in arm towards the mobile home R.V. up ahead.\n\nSlowly Ian withdrew from his death grip on the purple haired boy, but not completely, and looked over his new surroundings.\n\nLess than a minute ago he was outside the The Den bar, now he was on a side of town he had never seen before. Not that he could remember at least. \"Wh...where are we Cassie?\" He asked, his body still physically shaken from what just transpired. \"What the Hell is going on?\"\n\nCassiel supported Ian with one arm over his shoulders and the other resting on his chest. \"It's okay, I'll explain everything.\" Continuing to pull him forward, Cassie was very thankful that the lights were still on inside the trailer. \"There! There's someone inside who will help us.\" There was a bench nearby, and Cassiel tried his best to guide Ian to it. \"Here, sit down.\" Awkwardly Ian obliged, trying to move his shaky legs accordingly to plant his bottom on the wooden seat. \"Stay here, I'll tell them what's going on and they'll help us. Don't worry.\" He reassured him with before taking off to the trailer in a full sprint.\n\n\"I'm telling you there is no physically possible way I would even remotely consider funding something like that.\" Gloria spoke while her golden-haired co-worker re-tied the loose ponytail behind her head.\n\nSamantha rolled her eyes, \"It's just an expansion of the parking lot. You trailer park girls are always complaining about getting the shit end of the stick when it comes to the pickings at the carnival, but if we were able to park your trailers in the lot over here-\"\n\nGloria raised her hand to stop her but stayed hunched over the table, \"Sam honey, that would mean pushing back the opening of the motel another few weeks. We'd have to knock down these buildings back here which means more work, which means more expenses.\" In front of the two of them were several plans and blueprints laid out, detailing both the current layout and setup for the motel, and the possible new one Samantha was trying to sell Gloria on.\n\n\"So you really think I won't be able to pay you?\" Samantha asked finishing fastening her hair securely.\n\n\"Of course not.\" Gloria shook her head, brushing one of her own silky black locks behind her ear. \"I know you're always good for that. I'm more worried about the amount of extra time and work it'll take that I've gotta put my girls through. I understand what you're selling, but we've already put a hell of a lot of our time working on this motel that we could have spent hunting some fresh pets from the many that have been flooding in the streets.\"\n\nThe shorter woman now joined Gloria in hunching over the table, \"I know, I know, and I appreciate that. But you gotta think long term here. Carnival rolls up and you're already right next to it because of the built in lot, you and your people can park it there for a few nights in advance than when the opportunity arises, just walk across the street, pick up a hot piece of ass boy toy and walk right back to the motel.\"\n\n\"Yea I know. But that's all future pay that we'll be getting Sam, I'm talking about right now. You know that we've gotta have something up front before I can sign away my workers for another project expansion.\" Gloria responded, \"We're already still working on just the pay you've already given us. That's not gonna cover this new amount of construction.\"\n\nSam sighed and rolled her eyes, she was hoping with her reputation she would be able to negotiate a further work load and installation of an expanded parking lot. But Gloria was a tough one, and many other horny sisters would've caved already at the promise of tight holes. This one however was seasoned in her negotiations and it would take a little more work on Sam's part to get her to crack. Plus, Gloria was still a little weathered from the work she had done today. She was dressed in a slightly dirty white tank top and worker pants with heavy boots on. Obviously, the motel was still in progress and required work from both the Sisters and the Wretches for everything Sam had planned to get it done. And Gloria was helping oversee the project.\n\nMaybe it was a negotiation tactic, to try and get Gloria's point across. They were already working hard on the motel. So if she wanted them to keep going, she'd have to cough up some more dough.\n\nChewing on her lower lip, she felt the coin purse at her side. \"Okay, okay...\" She didn't want to have to cut into her actual coinage, but sometimes you've got to spend money to earn money. \"How about...\"\n\n\"Samantha?!\" Immediately the blonde sat upright, her ear almost twitching at the sound of her worried baby boy's voice calling out her name. Gloria as well sat up in surprise, \"Samantha!? Are you in there? I need help!\" A few bangs were heard and the door to the trailer rattled from his aggressive knocking. Without hesitation, Sam darted up away from the table to the door and flung it open.\n\nThere was a blur of purple as Cassiel practically jumped into Samantha's arms, throwing both of his limbs around her neck. She immediately caught the small boy despite being staggered by the sudden surprise. \"Whoa, hey it's alright! I'm right here what's wrong?\" She tried to ask, her brain right away went to, 'he's pissed some Sister off' or, 'he let something slip to Ian' so she was already bracing herself for that.\n\nHowever she was not expecting what he actually said, \"I'm so, so sorry, me and a couple of boys from school including Ian got mixed up in a group called The Den Mothers. A pack of Werewolves, and they attacked us and tried to get at Ian. I got him out of there in time but I think a part of his powers might have awakened again and he saw my wings so I brought him here and I'm sorry but I didn't know what else to do and-\"\n\nSamantha tried to shush him, \"Shh, shh baby, it's alright, it's okay, it's fine.\" Her hand quickly petted his lavender locks soothingly. \"Don't worry, Mama's here, it's all gonna be fine.\"\n\nQuietly Gloria stepped up beside the hugging couple. \"...Did you just say Ian?\" The shorter woman and her Angel both turned to look over at the inquiring Sister. Something about her demeanor changed from what it was just a moment ago. Before she was a block of iron that Samantha couldn't bend to her will no matter how much she pried and pried. But now, she noticed that the Gloria she was speaking to didn't even resemble the one standing there now. \"You mean, Ian, Ian Cassie?\" She said again, a faint glint in her eyes.\n\nThe blonde tilted her head resting her cheek on the crown of Cassiel's purple hair. \"Oh?\" She thought. Cassiel nodded against Sam's chest, still holding onto her tight. Gloria drew in a shaky breath as he did this and her eyes almost anxiously glanced over towards the door. \"That's right...she had a bit of a thing with the famous Ian a while ago.\" Silently she scanned over Gloria's body, feeling out both her physical appearance and the changes in her aura. And oh yeah, both were obviously reacting to the news of Ian. So Sam decided to test the waters with this news, believing that if she played her cards right she could use whatever accidents happened this evening to her advantage. \"Cassie, where's Ian now? You said you brought him here?\"\n\nAgain, Cassiel nodded, \"Mhm, he's outside.\"\n\nShe cast another side glance at Gloria and could literally feel the pulse in her energy. \"What about Liline? Does she know about what happened?\"\n\nThe boy looked up at Samantha with a look of dread, \"N-no...I didn't want to tell her.\" He then looked away shamefully, \"I'm suppose to be his bodyguard, if they knew I let him into a pack of Urul...well...\"\n\n\"They wouldn't let you see him again.\" Samantha finished for him and Cassie blushed. It was hard not to catch some feelings for the innocent little half blood with just how delicious and erotic his body/energy was. So she was able to understand her little Angel's plight. She patted his head again and hugged him closer, \"Don't worry baby, I'll think of something.\" And she was, this seemed like the perfect disaster for her current predicament.\n\nGloria was practically pacing the floor beside them continuously looking over at the doorway trying to see outside. She fiddled with her hands and moved about like she had ants in her pants. Her anxiousness was crystal clear, and a solution to everybody's problems was formulating in Samantha's opportunistic brain. She glanced outside herself to in fact see, a slightly wary looking Ian, the black haired blue eyed half breed that every Sister (and now apparently Werewolf) in Shelter was crazy about. Quite a few tales about the tightness and heat of that sexy boys booty had reached her ears, and she recalled herself participating at the welcome home party for him over a month ago. \"Hmm that ass might even be worth a little more than my Angels.\" She thought again stroking the lavender hair her chin rested on. \"Enough to pay off another few weeks of work on my Motel?\" Her eyes again drifted back to Gloria.\n\n\"Gloria honey...can I talk to you for a second?\" Sam suddenly said snapping the black Sisters attention back to her.\n\n\"Wha-?\" She said, clearly having not been focused on her at all for the last few moments.\n\nSam rolled her eyes, \"Come here, let's talk outside. Cassie honey, you just stay in here for a sec. I'm gonna call Liline and get her down here to pick up Ian. I'll just need to work something out with my business partner before we can do anything else okay?\" Cassiel nodded and stepped away from his Mistress's embrace, allowing her to gesture to Gloria for her to follow.\n\nShe did, a bit confused at first but followed her Sister down the steps of the trailer and out into the brisk night air. That's where she was finally able to see him. Only maybe twenty yards away or so, but she would recognize that sweet innocent scent anywhere. \"Ian...\" She whispered to herself, like a breathless lover finally reunited with a lost spouse. She could see the shape of his body, so similar to how she remembered it. But even at this distance, while he sat on the bench she could see the delicate curves on his form that she longed to kiss again.\n\nOnly she was rudely wrenched from her sight seeing by a snap of Samantha's fingers. \"Hey, horny bitch, eyes on me.\" Gloria blinked and almost angrily returned her vision to the blonde. Sam actually heard Gloria emit a low growl as she did so. But she wasn't intimidated, she knew that she had all the power now. \"You sign the contract, and I want ten Obols.\"\n\nGloria blinked again at this, \"Excuse me?\"\n\n\"You heard me.\" She rested her hand on her hip, speaking quietly enough so that only the two of them could hear. \"I have every right in the world to report Ian to Shelter police department and get Liline down here as fast as possible. I'm sure for rescuing her lost and scared boy from a pack of vicious Urul the Sherriff would gladly compensate me.\" She reached into her pocket and drew out a flip phone, flicking the device open, brightening up the screen and raising her index finger to the keypad. \"Oooorrrrrr...\" She slowly looked back over at Ian, then to Gloria again, \"You can sign the contract, fork over ten Obols, and Ian stays here. I walk away with my Angel and...\" She mimed herself zipping her lips shut, locking them and throwing the key away. \"Our little secret.\"\n\nSeveral seconds of silence passed between the pair of Succubi as Gloria seemed to be processing everything she just said.\n\n\"Are you...bribing me with...\"\n\nShe nodded before Gloria could finish, \"Mhm, I'm bribing you with a full night of plowing between you and that hotness over there. I can see it in your eyes how much you want him again, and my silence is all you need to have him. All you have to do is pay for it.\" She finished with a wink.\n\nA mixture of emotions ran through Gloria's chest. On one hand she felt angry, Samantha got lucky with whatever the Hell happened to her Angel boy that gave her the opportunity to tip the tables of their bartering in her favor. But then again, on the other hand this was Ian they were talking about. She looked over her shoulder at the boy still seated at the table. He glanced about quietly, probably curious about what exactly was going on especially since Cassiel hadn't returned to him yet.\n\nBut even though their time together was weeks and weeks ago, it might as well have been yesterday with how fresh in her mind it was.\n\nIan was such a shy little fuck toy, it was that innocence that always came through even after he awakened to his inner slut that Gloria fell head over heels for. She could remember his big doe eyes looking up at her while he was on his knees nursing on her big black cock.\n\n\"Is...is that good?\" He delicately stroked her shaft with his small hands, unable to wrap them all the way around her girth.\n\nGloria nodded standing up tall above him. Both hands on her hips while he carefully worked her twelve inches. Butt naked on his knees, tiny horns protruding from his forehead and an adorable little tail excitedly whipping back and forth above his behind. \"Yes my baby, you're doing so good...keep sucking, keep making mama happy.\" \n\nHe giggled a bit at that and softly pressed his lips to her cock head again. Smooching it a few times before parting them and dipping his head down allowing it back inside his petite, warm mouth. \n\nShe bit her lip, \"...Three Obols and the contract.\"\n\nSamantha rolled her eyes, around here favors were typically exchanged far more often than actually currency. But when big deals were put on the table and cash was needed up front, the Sisters of Shelter occasionally use coinage to help balance out the need for cold hard cash in place of promises.\n\n\"Eight.\" She countered. \"This is an extremely rare half breed we're talking about here. You know what it's like to have him.\"",
        "Gloria balled up her fist and grinded her teeth behind closed lips. The temptation was there, to just say 'fuck it, shut up and take my money!' But even Eight Obol coins was a looooooot of money. Samantha knew how much that boy meant to her and therefore was trying to exploit her weakness for him. \"Five.\" She said, and even then she felt her wallet crying.\n\nSam crossed her arms at that, seeming to contemplate the offer for almost a full thirty seconds before she broke into a smile. Then held out one of her hands in an offer to shake Gloria's. \"My good Sister, you've got yourself a deal.\"\n\nCassiel paced worriedly back and forth in the trailer, biting his nails and running through the possibilities about what was going to happen next tonight. Samantha knew how much Ian meant to him, and hopefully she would have a plan to take action against the Wolves, but at the same time sweep this evening under the rug so that he could keep spending time with Ian.\n\nThe pair had only had sex once, back before Ian lost his memory and it wasn't exactly consensual on either of their parts. But, it was still engraved into Cassiel's memory forever. He had never had sex with any other creature aside from Succubi, so being with a half Incubus, let alone another boy, was a wild and taboo experience that had him aching for more. Of course he wasn't allowed to due to Liline, Sin's, and Melodies orders, but he still loved being around him. Ian was really one of Cassiel's only friends that he could really relate to, a person who got stuck in the wrong place at the wrong time and was tangled up in this big crazy world of power and pleasure.\n\nHe felt like the two of them shared a bond that he didn't really have with anyone else. Not talking down to Samantha of course. He loved her, and the other Sisters were his friends/Mistress's as well. But Ian was special, Ian had to be protected.\n\nHe didn't want to lose him.\n\n\"Okay and when do you think you'll get here?\" Samantha said suddenly coming back around the trailer by the front so Cassie could hear. \"Okay thank you Sherriff. Yes, you have a good night too, buh-bye.\" She came into view of the doorway and flipped her phone shut with a loud click. \"Alright honey, everything's set you've got nothing to worry about.\" She said stepping back up the steps to Cassiel.\n\n\"Really?\"\n\n\"Mhmm, I made up an excuse for you, everything is totally cool. You're still his guard and the problem with the Urul will be dealt with okay?\" She said resting her hand comfortingly on his shoulder.\n\nCassie breathed the heaviest sigh of relief he had ever breathed and touched his cheek to her hand. \"Oh thank you Mistress. Thank you so much.\" He nearly fell into her arms again enticing a laugh from Sam.\n\n\"No thank you my little Angel, you saved Ian. You brought him here and got him out of quite the possible jam. Werewolves are assholes, if they got him in their little den he probably would still be getting fucked right about now. And it would be a task and a half to get him out of there. So you did great, you saved him.\" She kissed Cassiel on the forehead, \"I think your little crush now owes you a big one if you know what I mean.\" She playfully poked his side at that and Cassie flinched away but couldn't hide his own little smile at that. \"Okay it's safe for us to go home now, Gloria's gonna watch him until Liline gets here.\"\n\n\"Huh? We're not gonna wait too?\" He asked confused.\n\nSam shook her head, \"Nope, my excuse is that you got sick again and I needed to take you home from too much draining.\"\n\n\"Ohh...\" Cassiel said, nodding his head in understanding. That was believable enough, one thing Cassiel unfortunately had to deal with was that unlike Ian, if he has too much sex with the Succubi, they can drain him of his Radiant energy, and since he doesn't absorb energy like they do from sex, it goes away faster than he can naturally replenish it. This can cause him to get sick and weak. It's happened once or twice before, usually during a long rough gangbang when the Sisters get a little too carried away with him. But it's nothing very serious, usually a good nights sleep and some food in his tummy is enough to get him back to one hundred percent fast.\n\n\"Don't worry, she'll be here super fast and tomorrow we can put all this behind us.\" She said as she lead him out of the trailer and began to head off to the side. \"I promise, Gloria is going to take good care of him. I never put my trust in someone I can't do business with.\" Her head turned back to the trailer as they walked. Gloria tucked the keys to the R.V. into her back pocket and began to walk over towards the still seated Ian. \"Have fun you two.\" She thought patting the heavier coin pouch on her side opposite of Cassiel.\n\nIan's leg was bouncing with all the nervous energy his body was able to contain and had concentrated onto that one particular limb. Why did he go to that weird club? Of course it was the alluring prospect of possibly getting some action with one of the many beautiful women there. Being a virgin of course he jumped on the opportunity, but now he was wishing more than anything that he could rewind today and just pretend it never happened.\n\n\"What kind of place was it? There were women with...dicks. LITERAL DICKS!\" Ian folded his arms across his chest as a cold breeze blew by. Cassie had ran into the trailer and practically yelled their experiences at the bar to the two women inside. Ian knew that Cassie had a mother named Samantha, and he assumed that the one with the matching skin color was her. But the other woman he thought he might've recognized also. It was hard to tell from the distance but she looked familiar. \"Are they gonna call the cops? I hope so, my mom would come running the second she got word that I was attacked.\" And it was then that Ian remembered how he was actually attacked in that bar. One of the girls grabbed ahold of his arm and bit him, like some weird primal fetish shit. But she bit too hard and actually ripped through his arm. He looked down at it now but saw there was no wound where he was bitten. Just the ripped open part of the sleeve and some stains of blood. The skin was completely clean and healed, gently he touched that part of his arm.\n\n'CLACK' \n\nHe jumped. Recalling how after she bit him, she fell to the floor and must've hit something metallic to make that sound. But aside from that, her arm was torn open, in the exact same spot where his arm was. It was mostly a blur up until just now, being able to sit and take in the events was helping to clear his head and get the images in a more logical order. Nothing like this had ever happened before, at least not that he could remember. \"What the Hell happened...\" He thought terrified, his world turned in a one eighty in just a day. Everything was normal and now that happened. Violent rapist women, his arm healing in a split second, and Cassie! What was up with Cassie? He covered his mouth with his hand, feeling himself tremble as he did so, \"Just what the Hell is going on??\" \n\n\"Hi there.\" Ian's attention was brought back to reality and he shot his gaze up to the voice of the tall black woman standing before him. Leaned over a bit with her hands on her knees to look at him more closely. Brown eyes twinkling in the starlight and the kindest most welcoming smile he'd seen since his mothers. \"Mr. Adams?\" She asked lightly.\n\nThis surprised him a little as he didn't know the name of this lady, but she knew his surname. \"Uhmm...yes?\"\n\nShe quickly took a seat beside him, more than ready to close the gap between their bodies. It had been far too long since she had been this close to the boy. \"It's nice to...finally meet you Ian. I'm Gloria.\" She offered her hand to him, he stared at it seeming to be dumbfounded for a second before accepting it and shaking her larger but still feminine hand. \"Or well, you probably know me better as Ms. Carter.\"\n\nThat's when it finally clicked in his head. \"Oh! You're the Biology teacher.\"\n\nGloria nodded, \"Mhm, glad you recognize me.\" This was a little weird to her, having to pretend like she hasn't fucked this boys brains out before was awkward. But at the same time, it already had her rock hard in her work pants. If Samantha was right, he hadn't been fucked in over a month, he even believed he was a virgin again. But, as eager as that made her feel, she needed to hold back a bit. She didn't want to scare him away after just getting him back. She had to be strategic and make him hers again. \"Well, we've called your Mom Liline, and she's gonna be coming to pick you up and take you home in a little bit okay?\"\n\nHope filled Ian's eyes, \"Oh thank God, I can't believe what has been going on tonight Miss Carter.\"\n\nGloria shook her head, \"Oh please just call me- Gloria.\" She almost said Mama.\n\nIan chuckled a little nervously as he again saw a sparkle in this gorgeous woman's eyes. \"Oh um...o-okay. Gloria.\" He said, feeling a little bit warmer in the face area despite the cold outside.\n\n\"Why don't we wait inside for her, it's freezing out here.\" She stood up but brought her arm around Ian's shoulders to pull him up along with her. She could feel he was still shivering from the cold outside and probably the chilly trip he went on with his Angel friend to get here. \"Let me take you inside and warm you up.\"\n\nIan smiled, \"That sounds nice Mis- I mean...Gloria.\" Again he gave her a nervous heart melting smile, that made her rigid pole throb in her pants.\n\n\"Fuuuuuck, I missed you. You are mine tonight baby...\"\n\nCarefully she lead his smaller body up the steps into Samantha's trailer, \"Wait what about Cassie? Is she staying and waiting with us? She's not in trouble is she?\"\n\n\"She?\" Gloria almost did a double take at him before she remembered the little charade Liline and Sin put together. \"Ohhh the Angel, good to know he's getting in touch with his girly side.\" She held back a little laugh and guided Ian in front of her, directing him to the bare mattress in the far left of the space against the wall. \"Oh no, of course not honey, her...mother is just taking her home now. I'm sure you can understand that it's been a rough night for her too.\"\n\nHe nodded, \"Oh, right. Yeah I think she...she was the one who got us out of there.\" She sat him down on the mattress and he touched his hand to his forehead. \"Ugh, it's such a blur.\"\n\nGloria also ran her hands through his black hair, \"Oh you poor thing.\" She could tell that he was still cold and probably nursing a headache, her motherly instincts were coming out. \"Here.\" Over near the foot of the bed was a pile of neatly folded up clean white sheets. She plucked the top one off and transferred it over to Ian, wrapping him in the thin material.\n\nIan gladly hugged the sheet closer around him, he offered her a grateful grin, \"Thank you.\"\n\n\"Don't worry about it dear.\" She waved off his gratitude then put her index finger underneath her chin, pretending to be deep in thought. \"You know, I want to warm you up, but these trailers are always pretty drafty around fall. Why don't I...\" Casually Gloria turned on her heel and sat down right next to him. \"...Just slip in here with you, maybe it's my teacher brain reminding me but transferring body heat is always the best way to heat somebody up.\" Her hands skillfully swept under the sheet and gently pushed Ian's fingers away, allowing her to hook her own digits into it and pull the fabric back enough to wrap her body in it as well. Cuddling the pair of them close together as she scooted right up to his side.\n\nHis breath practically hitched in his throat as she did this. \"O-oh, okay, miss...\" He cleared his throat. \"Miss Carter.\"\n\nShe rolled her eyes, \"Sweetie.\" She brought her fingers under his chin this time, tilting his face to look directly at her. \"I told you, you can call me Gloria.\" The muscles in his throat noticeably flexed as he swallowed hard, and it took a lot of willpower for her not to just throw him down right there. \"But if you must, you can just call me Miss.\" She said teasingly.\n\n\"Whooooaaa...\" Ian's heart rate was surely going off the charts. For a woman dressed in dirty work clothes. Even more so, a well used construction looking outfit, she smelled amazing. This heavenly chocolatey aroma seemed to bloom from her and it nearly made his eyes droop, it must've been coming from her hair. Some type of shampoo that she used to wash that long straight black mane. Which was odd since she looked like she hadn't taken a shower yet after whatever work she did today. He definitely recognized this teacher from school, so she must've had some kind of part time outdoorsy work job. But never had he been this close to her, nor seen her in such an informal attire. Or any woman for that matter! He could remember the original reason for this whole catastrophe of a night was originally his desire to get some action with some older women. Being a virgin was of course embarrassing for any teenage guy in high school, but his main thought behind it was he could perhaps have some experience in the bedroom. Just in case on the off chance him and Cassie ever happened to get together, and he wouldn't embarrass himself in front of his crush by being a two pump chump.\n\nThis however, was definitely not something he expected would happen.\n\nMiss Gloria had fantastic breasts, he didn't know cup sizes for women's bras but she had to be DD. Coated in her smooth light brown skin with a curvaceous body to match, wide child bearing hips and probably an incredible ass hidden by those big cargo pants. Such a stacked woman practically snuggling with a young student would probably be frowned upon if they were seen like this.\n\n\"Something wrong Ian?\" Gloria cutely tilted her head at him, noticing that he was being pretty quiet.\n\n\"Huh? Oh! Um no, not at all.\" He chuckled nervously, \"I guess I'm just not use to seeing you outside of school.\"\n\nShe smirked, \"Oh that's all?\" She scooted closer to him, being that their bodies were already touching, she technically pushed her leg underneath his own, starting to lift him off the mattress and nestling him semi-onto her lap. \"I thought maybe the thought of calling me Miss might've set something off since you went all quiet.\" She coyly played with a lock of her hair, letting go of her side of the blanket, also revealing that the strap of her tank top had slipped over her shoulder and hung at the side of her arm. \"Oh how silly of me.\" \n\nLike a moth to the flame Ian's eyes darted to the dark flesh, not to sound rude, but Ian had never really pictured himself in a romantic situation with a black woman before.\n\n'Was this romantic?' \n\nBut either way it was pretty hot, he swallowed again and tried to focus on the area around the room. \"No, no, Miss- I-I mean...umm...\"\n\nThis time before he could finish an excuse Gloria leaned even closer to him. His gaze going straight up to hers as this was not a subtle lean closer for warmth, this was a full, boobs danger close to his face, and half-lidded eyes full of intent looking back down at him.\n\n\"Oh my God.\" Ian could feel his heart beating like a base drum. Gloria could too. \"She's so close...I can barely breathe.\" \n\n\"You know...Mr Adams...\" She began, knowing full well how turned on the pubescent teen was becoming. Her aura was filling his own with her pheromones and she could already taste the familiar sexual energy beginning to pulse from him. It was slightly different from how she remembered, like it was muffled, only allowing small fragments of it to leak out possibly due to her influence. \"Seems like it needs a little assistance with waking up.\" She trailed her finger up the front of Ian's shirt, he was no longer shivering from cold, but he still trembled as she touched him. \"It's been...quite a long time since I've had a cutie like you in my bed.\"\n\nIan went bug eyed, \"Uuuhhh...umm...\" Speechless.\n\nGloria giggled, his innocence was always so yummy. Like the first time she ever saw him. Naked. Stealing food and a shower from her home, like a beautiful bathing dove. An innocence she could just fill with her lust and defile, making it hers and hers alone.\n\nShe was unbearably hard.\n\n\"I just can't stand seeing such a bright young student going through such a terrible time. You looked so scared and distraught, I think that's making me want to...\" Her fingers found their way into the collar of his shirt, tugging it down gently, trying to signal him that she wanted it to come off. \"Take care of you...make it all go away...make you feel good...\"\n\nHer lips, her heavenly caramel colored lips were hovering only inches away from the terrified teens face. There wasn't enough oxygen in the world for Ian to catch his breath now, and all of the blood in him was rushing to only two places in his body. His face and his groin.\n\n\"Miss...Miss Gloria...\" She was right, saying her name like that did set off the faintest spark in him. \"I...I don't think we should...\" He feigned reluctance. This was the score of a lifetime! What started as a shitty horror show of a night was ending on the highest note possible, a sexy teacher had come to his aid, and seemed to be the type of teacher that likes to give 'private tutoring' to her students. Of course he was nervous, because they could probably get in a lot of trouble for something like this. But his brain wasn't exactly calling the shots here.\n\nBesides before he could finish, Gloria shushed him, \"Shhh Ian...let me make it all better...\" She drew closer, her lips barely touched his, the minimal contact caused his own to part on reflex with a subtle shaky inhale of breath. \"Let Momma take care of you.\" His eyes closed and their lips met.\n\nIt hadn't registered until after her full luscious lips captured his that he realized she had stolen his first kiss. Not that he was bothered by it though, he practically dissolved into her as her mouth opened against his, coaxing it to do the same. Her tongue followed after dipping into his cavern and greeting his own with quick hungry strokes.\n\n\"Mmmmhm...\" Ian moaned melting away as Gloria took the opportunity to loop both arms around him and scoop him into an embrace. He quickly returned it wrapping his arms around her neck while she held him by his waist, pressing their bodies together and allowing the sheet to fall from their shoulders forgotten.\n\nIt wasn't a slow kiss, she very quickly moved to devour his innocent lips feverishly. Having longed to make out with this half breed butt slut for so long now. It was a miracle she'd gone as slow as she had this far. \"Oooohhhh fuuuuck I missed you...I missed you...\" Gloria mentally repeated, smacking their lips over and over, tasting him again like she used to. His sweetness combined with how shyly his smaller tongue responded to her more assertive movements had her practically in a frenzy. She wanted him now, but she held off against giving in to the urge with all of her willpower.\n\nShe couldn't keep the beast completely buried however, as her hands slithered their way back around to his front. Palming and feeling along every inch of the body she's been needing to have in her clutches again. Eventually grabbing a fist full of his white shirt and allowing the claws to come out just the tiniest bit to cut the material before pulling hard out to both sides ripping his shirt open.\n\nHe made a startled sound of surprise followed by a gasp as their lips disconnected for a moment. Gloria cleanly ripped his shirt straight down the middle and it now was a torn heap pushed off his body and dropped to the floor. Ian looked as if he wanted to say something in protest, but again she pressed her lips to his in a quick smooch, then softly shushed him again. Not allowing him to comment on it at all.",
        "All it took was the right coercing, and he was an easily manipulated play thing. Putty in her hands.\n\nShe pressed down on his now naked torso, feeling his rabid heart beat and warmth of his skin, gently guiding him to lie back onto the cool uncovered mattress. His chest rising and falling so fast, when she removed her hand she could actually see his skin vibrating ever so slightly with each beat of his poor nervous little heart.\n\nGloria smiled a pearly grin at him then moved to kiss the boys neck. Sucking on his pulse point, drawing the flesh into her lips with the suction. The moment she made contact with it, she heard another light gasp from him. Just as sensitive as she remembered.\n\nShe trailed some more butterfly kisses down his body, making sure to poke her tongue out and lick around those pert little nipples of his. Even nipping at one for a moment before taking it into her mouth to nurse on it.\n\n\"Uuh!\" Ian squeaked suddenly, the quick twinge of electricity surging into his chest as she sucked on his nipple. \"Miss...Gloria...\" He breathed. This seemed very naughty, how she was taking such charge over him. Being the older woman, combined with the teacher student situation, made the scenario very dirty. His dick was throbbing in his jeans, just dying to come out and play.\n\nHe heard a chesty chuckle come from her as she released his nipple, she kissed it one more time and maintaining her grin sunk lower, letting the tip of her tongue come out again draw a trail all the way down until it reached the hem of his pants. \"You don't need these hun.\" Completely ignoring the button and zipper of his jeans, she sunk her fingers into the waistband, making sure to get a hold of his underwear as well and started to yank down hard.\n\nAgain, Ian squealed as she jerked his body, pulling his pants and underwear down his legs. His small prick immediately sprang up being freed at last, and she tugged again and again, showing off more of his smooth legs until his bottoms were at his ankles. \"Miss Gloria! Um, aren't we, going a little fast?\" He asked, panicking a little as the realness of the situation hit him there, his dick was out. And this hungry looking Amazonian Goddess of a woman looked ready to eat him alive. It was a little scary, still exciting, but again he was a virgin. \"And...I-I'm sorry I'm...I'm not bigger...\"\n\nGloria just continued smiling at him, making quick work of his bunched up pants and undies at his ankles. Stripping him of his shoes and socks as well to leave him completely naked and vulnerable to her. Looking over his pale, luscious, hairless body, and cleanly shaven little cock. Eagerly standing up straight and asking for attention with his cherry sized balls nice and plump beneath it. \"Sooooo cute! God, he's such a beautiful boy.\" She thought, \"Oh baby, don't you worry about any of that. You look sooo fucking sexy... And when we get started you're gonna be begging me to go even faster...\" Discarding his clothing away from the mattress, Gloria crawled up him again making sure he got a good view down her cleavage as she did. \"..and faster...and faster...\" She slowly drew out her words until she managed to reach his face again to lean in for another kiss.\n\nHe had to have hit the cosmic lottery. How often does somebody just happen upon someone as sexy as Miss Gloria? A seductress literally falling into his lap and now was laying on top of his naked body pressing herself tightly to him swapping their spit.\n\n\"Wow...oh wow...\" She ran her hands along his sides, lifting his right leg up by the back of the thigh. \"God she's so hot...uuuhhh...\" He moaned both mentally and physically, though his vocal one was swallowed by Gloria's continuous kisses. Her other hand grabbed his opposite leg, also by the back of the thigh and began to lift it, parting his legs and giving her easy access. \"Wh...why is she opening my legs like that?\" Ian thought slightly confused, they were laying right now in a missionary position. Only he was laying on his back with his legs being spread and she was nestling herself between them. As if she was the man, and he the woman. \"Why is-\" And before another thought could be finished, that's when he felt her.\n\nShe ground her pelvis right up against his own. And against his stiff dick and ball sack, he felt an incredibly hot, and hard tubular shaped object press strongly up against him.\n\nHis mind instantly flashed back to the club. That same feeling he got when those women were grinding against him during the dancing. Those warm rods they all seemed to have tucked into their pockets.\n\nOnly to be revealed later as numerous big, fat, hard, coc-...\n\nIan broke away from their kiss and stared up at Gloria, stunned. \"...Umm...what...what is that?\" He darted his gaze down to the space where their bodies touched, then back up again.\n\nQuite frankly, Gloria was shocked that it took him this long to notice. She had been at full mass for like the pass fifteen minutes and getting harder with every passing second. She probably had her work pants to thank for hiding the obvious bulge she was packing.\n\nBut here was the big moment, he'll probably resist, probably struggle, but she knows it'll work out.\n\nBecause she loves him, and he loves her too. She knew it.\n\n\"Oh baby...\" She began low, husky tone in her voice. \"That...is how Momma is gonna give you her love tonight darlin'. Slowly, tantalizingly she reached up to cup him under his chin. \"All of Momma's hot and creamy love.\"\n\nIan's eyes widened, but this time rather than widen from surprise or amazement, they were widening in horror. No way, it couldn't be. \"Wh-what..?\" His voice shook. \"That...you can't have a...a...\"\n\nGloria chewed on her lower lip, \"Oh fuck... Fear and arousal...\" Two quintessential body responses that heightened one's sexual energy. Succubi love to feed on just one of them, but when the two manage to perfectly mix together as they were now. It was enough to drive any well controlled Sister wild with desire. \"Nnff...yes baby. Cock.\" She giggled, \"I have a big...black...cock. And it's all yours tonight.\"\n\nPanic.\n\nIan panicked.\n\nOn reflex he tried to twist his body off of the mattress and run for the door. Hoping to make a break for the nearest building and try to get someone's attention.\n\nUnfortunately, he only managed to twist, and nothing else. Gloria grabbed him as he tried to flee and held him, flipping him now face down on the bed and keeping him there. She slapped her hand over his mouth before he had the chance to yell and kept him tightly grasped from behind.\n\nOf course he struggled, as she was prepared for, but since he had forgotten his powers and everything supernatural within him was still dormant, it was like a child was trying to feebly bat her away with his minimal strength.\n\nQuietly she shushed him again, \"Shhh, shhh Ian, it's okay. You're not going anywhere. Be as noisy as you want, but no one can hear you.\" She said, earning a small thrill of her own with her mean taunting. But then decided to lighten it up, she didn't want him to be completely mortified after all. \"You don't have to be scared though baby, I'm going to make your first time so special. You'll remember it forever and ever sweetie.\" She kissed his ear lobe, \"Sssshhhh...don't worry...it'll only hurt at first, then like I said, you'll be begging for more before we're through here...\"\n\nMuffled cries tried to escape the grasp of her hand as she manipulated his prone form. Gloria shifted both of their bodies, pulling him further onto the mattress rather than so close to the side. She pulled his lower body up, shuffling with her legs to move him so that he would be up on his knees and his torso would be bent over, face down into the bed.\n\nHer hand eventually slipped from clasping his mouth shut and elected to hold him down by the side of his head. \"Aah! Stop! Let me go!\" Legs kicking a bit, but Gloria practically effortlessly held him in place.\n\nHer free hand moving to unbuckle her work pants, she shook her head at his plea, teeth chewing her lower lip at his begging, fearful face. \"Mmmhmm, no way baby boy.\" She pushed them down to about halfway down the thigh so she could shuffle out of them while she worked on Ian. \"I told you, you're first time is gonna be special, you just need to relax.\" Now with her pants undone and her foot long rod was free, she used her available hand to grab a handful of his pale ass cheek. Squeezing it delightfully and shaking the bubbly flesh with joy, \"Uggh fuck, how do you expect not to get fucked with an ass like this?\" She gave it a light slap earning another yip of shock from the teen.\n\n\"Stop!\" He said again, squirming and writhing around trying to get free. His arms attempting to reach back and push her away. \"I won't tell anyone! No one at school will know, just let me go!\" Ian tried to think of anything he could do or say to get out of this. His brain triple checked every inch of itself to find some kind of brilliant plan tucked away he could use to free himself, only to come up empty.\n\nContinuing to ignore him, Gloria just snickered at his bargaining. It sounded familiar actually, like they'd been here before, but only she remembered that. The taboo nature of him believing that he was under age, and a virgin in both the penis, and anal department, was a huge turn on. He'd never gotten any pussy before, and if she had her way, he never would.\n\nShe could already feel her cock dripping with sticky clear precum at the thought. The veins on her shaft bulged and pulsed powerfully, this was the horniest she had been in weeks. She could probably knock him up with just how many swimmers she was packing in her precum alone.\n\n\"Hmm...mommy Ian?\" She almost shuddered in delight at the image of an impossible future of Ian with the most adorable baby bump in his tummy, with her unborn Succubus daughter cooking in there. But first of course, she'd have to plant her seed in him to do that, and his 'virgin' love hole was right before her eyes. Gloria licked her lips and dove in.\n\nIan gasped and jerked up against her hand. Gloria's warm wet tongue dipped straight into his puckered hole, squirming and shifting about. Getting a nice full taste of his pure, unused anal cavity. She moaned against the sensitive area and palmed his ass cheek while pushing the appendage in further.\n\nThe oddest warmth weaseled its way up Ian's body, feeling the moistness of being kissed in such a dirty spot made goosebumps form out all over his body. \"S-stop! Wha-...ah!\" He yelped again, feeling her tongue slip another inch or two deeper. She had a long tongue! \"That's not...aah...stop! Why are you doing this?\" Ian asked, his voice starting strong but ending on a weaker note. As Gloria's lips smacked against his star, he felt his toes curl and an odd, but not unpleasant spark jolt downward in his pelvis to his dangling balls and still stiff cock.\n\nAlthough he was frightened, adrenaline seemed to be keeping his dick hard in the moment. That had to be the reason, right?\n\nHe squeezed his eyes shut and tried to ignore it, believing that if he imagined himself in a different place he would just magically teleport there.\n\nUnfortunately, that fantasy would not come to be.\n\nGloria wiggled her face against his ass, shaking the length of her inhumanly long tongue in him and stirring him up. All the while she shifted with both her legs to shuffle her work pants all the way down her legs, eventually kicking them off and fenagling her boots off as well. She removed her tongue from inside the young boy and gave him a few more long licks up and down his ass crack. Even occasionally going down far enough to give his balls just the feintest tease of a few strokes as well. Not touching his hard little cock of course, but otherwise rimming him sufficiently to the point where he would be lubed up plenty.\n\nIan could feel his balls jiggle as she touched them with the tip of her molesting organ, again more jolts of odd excitement bolted into his belly. Enough so to draw more squeaks from him and causing his feet to flex and fists to claw at the bare material of the mattress. \"What is happening??\" \n\nAfter she gave him one final lick, and her bottoms were completely removed, Gloria moved up to kneel behind him. Grabbing hold of her massive monster girl cock, giving it a nice squeeze at the root and dragging it all the way up the elven thick inches to the tip. She was right, precum flowed like a river out of her tip, perfect for more lube.\n\nShe guided her cock head to the sweet heavenly hole that was begging to be stuffed. \"Oh baby boy...you don't know how long I've been needing this.\" Her tip kissed his puckered anus, and she traced along the entry way, slicking it up with a healthy spread of her pre-love.\n\nIan shook his head, \"Please...Miss Gloria...\"\n\n\"Oh Ian...\" Gloria said darkly applying a hint of pressure to his ass. She watched his eyes widen up again in horror at the realization that she was about to penetrate him. \"Just call me Momma...\" And slowly but surely, she pressed her hips forward, determined enough to easily break through the anal ring. His only defense at keeping her out, and in a moment of pause for the both of the couple, there was a wave of bliss and shock that boomed out in the air. As their bodies finally joined, fitted together perfectly, like it was always meant to be.\n\nAll Ian could see was white, he couldn't yelp, he couldn't shout, couldn't say no, all he felt was this massive invading length enter into his body. Breeching beyond his most sacred place that shouldn't have ever been touched this way. His jaw hung wide open, and shaky breaths were all he could manage in this moment.\n\nGloria sank inch after inch into the poor boys tummy, cramming as much of her nearly foot long she cock into him that she could fit. His hot, searing heat enveloped her so tightly. Soooooo tightly. \n\n\"Uuuuuuuhhhuuuuuuu...\" Gloria let out a long low moan, his innocent energy finally began to pour into her through their union. And it fueled her like gasoline on a fire. Her eyes lit up bright Gold as she pushed deeper, and deeper, until she felt her pelvis gently touch his plush booty. Ian felt a gut wrenching fullness that could almost be compared to a punch in the stomach.\n\n\"Holy fuck how big is she!?\" The million dollar question was the only thing on his mind. It felt as if she had just jammed a train up his ass. There was also a hefty pair of balls practically triple the size of his own dwarfing his boy hood as well, further adding to the intimidation and humiliation.\n\nAnd just as slowly as she pushed in, she started to pull out, practically taking his bowels with her. She retracted her dick out to about halfway, then pushed it back in.\n\n\"Guuhh...\" Ian groaned, again feeling the gut punch from her thick meat.\n\nHe was tensed up, and trying to expel her from inside, so Gloria tried to soothe him. \"Relax baby boy...it'll get better quicker if you relax...\" She removed her grip from his head and grabbed hold of his hips, helping to guide his body back onto her own. She wasn't worried about him running anymore, she literally had him speared on her shaft. He was going nowhere. \"Just focus on relaxing your ass...let me in you...\" She quietly coached him.\n\nTruthfully Ian was shocked that it wasn't more painful than he thought it would be. It was uncomfortable, but not...bad.\n\n\"What's...happening...\" His breathing had evened out and had changed to just hot heavy breaths against the bed. Her hips tapped against his butt with her gentle, even pace. This was probably helping him adjust to it quick enough so that it didn't hurt as much. But what made him even more confused, was that she was so big, that her cock managed to reach a tiny little button deep within his asshole. That every time she went in, she pushed it, and that same spark, or now it was more like a straight up volt of electricity sprang out. And it struck his nerve endings, making his cock tingle. \"Why...why do I...\" Her balls slapped his own, causing him to flinch and drawn in a sharp breath. Again, he felt it should've hurt but it...\n\nIt didn't...he...liked it...\n\n\"Oooohhh...Oh my...God...\" Gloria tilted her head back, her steady rhythm of thrusts making a sweet song of flesh tapping against flesh. \"Ohh my baabbyyy...mmmm...\" Her hands gripped his soft skin a little harder. All the memories of the sweet bliss he gave her coming back. He was the best sex she'd ever had, and clearly he still was. Her cock was singing with happiness at being home inside him. She felt like she was about to cum already. \"Oh I missed you baby...\"\n\n\"M-missed me?\" \n\nGloria leaned down over his body and began to thrust harder, her balls no longer merely tapping against Ian's, but clapping as she picked up the pace. He tried to breathe every time she shoved it in but keeping up with it was getting difficult. Her sheer size took his breath away and he felt his ankles crossing beneath her as his body squirmed and wreathed about trying to find a way to channel the excess feelings that were building up in his nerves.\n\n\"Fuuuuckk...yeah...\" Suddenly she brought her hand back and smacked Ian's bouncy ass cheek hard.\n\n\"Aah!!\" Ian jumped up.\n\nGloria took advantage of his movement to lean all the way down against his back and wrap her arm around his front. Grabbing him by beneath his chin and allowing her to speak directly into his ear. \"Oooohhh yeeeeaah...you remember me now baby? You remember being my little slut?\" She didn't care if she was breaking rules right now, she had her boy back, and she was ready to breed him.\n\n\"I...I don't know what your talking...abouoooohhhhh!\" His voice arched high as her long deep thrusts suddenly changed pace to short rapid ones. Staying plugged in deeply inside him, she rubbed the tip of her dick against his prostate sending a surge of desire through Ian unlike any he'd felt before. \"My...my body...\" \n\n\"Oh yes you do slut...Mmmm I can feel it. Uuuh!\" She moaned loudly, \"Yeeess I can taste you baby...\" Ian was facing away and couldn't see the bright glow of her pupil-less yellow eyes. \"Uuggh yeeeeesss...yeeeeeessss...\" She leaned up again pressing her weight further down onto Ian, causing him to lay prone on the mattress and trapping his cock between his body and the bed. Gloria now straddled his body and gyrated her hips, quicker and quicker, rubbing and stirring her member up within him. His squeezing and flexing muscles milking her shaft so incredibly. \"Oooh fuck I love you baby...ooh! I could never forget you babe, I'll remind you now why you'll never forget me too.\" She spanked him again.\n\nIan squealed once more, \"Everything is...it's so hot...\" \"Uhh...uuuuhhh...Glo-...Gloriaaaaa...\" He moaned, the words came out like a song as his bowels were mixed up by a churning rod of dark girl meat. Two massive balls massaging his perineum, surely just sloshing around with baby batter that would... \"Oh God...cum...so much...cum...\" \n\n\"Oooohh fuck that's it bitch...\" She spanked him again and reached to grab a fist full of his hair again, tugging it not painfully but...tight enough to earn a girly noise from Ian's throat. \"You know you love it...you know you love being Momma's whore...\" She laughed lustfully, \"A pretty little butt slut like you...fuck, you were born to service my cock. Tell me you love it...tell me you love my cock... tell me you love it bitch!\"\n\nThose words...\n\nThey sounded...\n\n'FUUUUCK I LOVE COCK!'\n\nHe blinked and felt a sudden burst within his tummy, \"Uh! AAAAHHHHGGGUUUUHHH!!!\" Out of nowhere there was a massive pulse that exploded in Ian's abdomen that he couldn't hold back. Gloria rocked her hips hard and arched her back.\n\n\"OOHH FUCKK YEEEAAHH!\" She practically screamed to the high Heavens as his aura broke free of whatever barrier that it was held back behind. The trailer practically shook with the force of it and Ian's eyes...his glowing baby blue eyes rolled up. He could feel his small prick pulsing and twitching under his belly as it spewed forth a powerful anal induced orgasm, making a mess on his belly and the bed. Gloria's own cock swelled up to its fullest state and began to pour out shot after shot of thick, lustful, Succubus cum.",
        "She rolled her hips in a swivel motion riding her high and milking out every drop into his boy womb. She truly almost wished she could knock him up in this beautiful moment.\n\nIan couldn't explain it, he was just hit with an intense climax that had him literally pushing his hips back into her. Something just told him, 'let her fuck you...you'll love it...' Like a voice in the back of his mind, a little devil on his shoulder that convinced him to do it.\n\n\"Uugghhh...uuuhhh...\" Ian huffed and puffed as the aftershock waves began to subside. And that's when he felt it.\n\nHis eyes dilated, and he could see the room clearer. Everything was brighter, easier to focus on, fine details could be made out from the simplest of things. And FUCK did this room smell good, before Gloria smelled amazing but now...\n\nAnd the full feeling in his butt, along with the smoldering heat in his stomach... now that felt reeeeeally good.\n\nHe looked back over his shoulder to see Gloria again, only...something blocked his vision. A smooth velvety looking purple sheet seemed to be just in front of his black lover.\n\nIt was quickly revealed to not be a sheet though...as Gloria, pushed down on it with her index finger and he felt her touch it. \"Fuck baby...nice to have you back and all but, your wings hit me right in the face when you came. Kind of a blue ball moment.\" She finished with a giggle.\n\nIan again blinked a few times, \"Huh?\" His eyes followed the trail of the purple sheet, only to find that it lead straight to the back of his shoulder blades where a second one also rested. Beneath them where their bodies connected, a long purple tail had also emerged, just above the valley of his butt where his tailbone was.\n\nWings, a pair of silky bat like wings protruded from his back, and a tail coming from above his ass...\n\nImmediately Ian tried to pick his head up, only to feel the mattress catch on something on his forehead and having to jerk his head up to pry it free.\n\nHorns. A small pair of tiny matching horns were sticking out of his head.\n\nHe felt Gloria's hands on him, \"Ooouuu, you're reeeeally soft now.\" Her large feminine hands explored around his back and shoulders. His aura had awakened, and although he still seemed out of it, his powers were returned. His skin had gone almost snow white in color and his curves accentuated even more into an hourglass frame. His plump ass almost pert out up against her and she felt his inner anal cavity moving methodically, practically working her still hard dick on auto-pilot. Massaging her shaft so lovingly, like it was thanking it for giving it the gift of such a big load. \"Mmm, all it took was a little Momma cum to get this boy to wake up.\" She playfully swatted his butt again. \"Now come on baby, time for round two.\" Without another word she scooped up Ian from the mattress, he let out a surprised sound but otherwise didn't protest. Gloria pulled her top off over her head, finally letting her beautiful big tits out for Ian to see. She then shifted their position around, never removing herself from inside him, so she could lay down on her back and set Ian on top, straddling her cowgirl style. \"Now...be a good boy and ride Momma like you use to hun.\"\n\n\"Uuuhh...\" Ian weakly moaned, his brain was mush. It was almost like he wasn't controlling his body anymore. Like he was watching what was happening through a screen, and the point of view was his eyes. He was confused, lost and didn't know what to say but, his body reacted. He set his hands down on Gloria's taut abdomen and lifted his body up off of hers. Feeling her meat slowly being pulled out, until he lowered himself back onto it. \"Oh...ooohh...\"\n\nGloria rested her hands behind her head and relaxed, confident now that he had remembered everything and was slowly getting back into it. She laid there with an open mouthed smile and allowed her aura to flow freely. Dropping the guise of her human form and revealing her demonic nature.\n\nHer claws on both hands and feet extended out and her hair became a bit more wild. Her skin took on a golden glow and her teeth sharpened to a fine point. Ian's own eyes widened as brownish gold wings also sprang from Gloria's back, and longer horns than his own grew from her forehead.\n\n\"What the...what's happening...?\" \n\nFor some reason, seeing this form seemed to encourage and entice Ian's robot body. He began moaning, loudly, like a bitch in heat as he bounced on her cock. Images of all the potential loads she had stored up in those big black balls flashed through Ian's mind and it made his cock twitch. Still as hard as it was before. Desperate for another release, craving it more than anything else in the world. But he didn't want to touch it, didn't want to just rub it a bit and get the relief he sought. Instead, he bounced harder. Practically making his booty clap on Gloria's big dick.\n\n\"Ooh yeah...good boy...\"\n\n\"Uuuugh fuck...\" Ian whispered, his body quivering upon hearing that. Again, his hips moved on their own, riding her harder and faster like a wild cowgirl, no pun intended. \"Oh...yesss...\" He spoke without thinking, \"F...fuck me...\" His words barely had volume, coming out in just hot shallow breaths.\n\nHe picked his legs up, to switch positions, squatting over Gloria rather than straddling her and lowered himself down on her monster again.\n\nA louder laugh belted out from Gloria, \"That's right baby boy...bury that bone in there. Where it belongs right?\" She reached up and grabbed his chin again. \"Right?\"\n\n\"That's...where it...belongs...\" Ian panted out.\n\n\"Where is that?\" She asked assertively.\n\nIan's eyes were desperate, his cock bouncing along with his body, more of his own precum flying in stringy ropes from the friction building up inside thanks to her dick. \"In...in my ass...\" He said meekly.\n\nPlayfully Gloria slapped his face eliciting a loud moan from Ian, \"Louder!\"\n\n\"In my ass!\" Ian shouted.\n\n\"Why do I...\" He was loving it, what had started as rape, turned into this odd out of body experience that was just so...good. So thrilling that Ian's excitement was already reaching a fever pitch again. \"Why is it...so...\" \n\n'Whore'\n\n\"And what else do you want in your ass baby?\" Gloria braced her hands on Ian's thighs, thrusting upward to meet with his downward hip movements. \"Hmm? Tell Momma, what else do you want deeeeeep in your ass...\" His eyes rolled over her body, watching her glorious double D cup breasts bouncing in tandem with their bodies movements. Her nipples were as stiff and taut as his own.\n\n'Butt slut'\n\n\"Oooh fuuuck I want your cum! Mamma...\" He cried out.\n\nAn evil throaty laugh came from Gloria's clenched teeth, \"Fuck yes you do! Mmmm, you ready for Mamma's milk baby boy?\"\n\n\"Yes! Please! Give it to me Mamma! Give it to me!\" Ian cried, bouncing harder and harder, trying as hard as he could to wring the cum out of that big delicious cock.\n\nGloria closed her yes, \"Awww yeah baby, oh here it comes! Here it comes ah-...oooooohhhhhh....\" She continued thrusting up again and again until she slammed her hips in to the hilt and held Ian there.\n\nAnother wave of hot bubbling sperm burst out of the floodgates of Gloria's balls and into the depths of Ian's boy pussy.\n\nIan's wings flexed, unfurling outward and he went silent, his body twitching and convulsing as he felt her seed pumping into his body.\n\n'Cum Slut'\n\nHe could feel her girth throbbing, pulsing her jizz into his belly, warming it from the inside with her unborn children. He had to have gone crazy, there was no other explanation as to why despite all of this insanity, he sat there now on her lap, feeling her cum pumping into him, his own prick jumping excitedly, and shooting its own little shots of jizz up out and onto her chest.\n\nAnd he smiled.\n\nLater\n\n\"Mmmmm...good boy baby...suck...\" After the two had finished their second round of love making. Gloria stood up to her full height and planted Ian on his knees in front of her. And she fed him her cock, wanting to relive the memory she had earlier. Both his smallish hands working the shaft of her cock that he couldn't fit in his cute mouth. \"Clean me up good baby boy.\" She kept one hand on her hip and the other petting Ian's head comfortingly.\n\nHis lips released the head of her dick with a loud pop, \"Is...is that good?\" He asked, blushing and clearly nervous about servicing his first cock orally.\n\nGloria smiled, \"Yes my baby...you're doing so good. Now keep sucking...keep making Mama happy.\"\n\nIan offered a small nervous smile back before returning her tip to his mouth again and stroking her still steely shaft.\n\nHe felt like at some point in between he had come back into his body but wasn't freaked out anymore. This all almost felt natural, as unnatural as it seemed. It was familiar somehow, like he had seen this gorgeous naked woman standing above him like this before. Lording over him with her huge dick. It was embarrassing but...it was hot. He too was also still hard.\n\n'Cock sucker'\n\n\"Mmmm c'mon baby, we have to get us thoroughly cleaned up.\" She reached down and took hold of her cock, pulling it free from his lips again, playfully tapping him on the cheek with it before laying it out across his face. It was bigger than his head.\n\n\"Why Mamma?\" He asked, still trying to adhere to calling her that. Not that he was complaining, again, the taboo nature of it all turned him on.\n\n\"Well how do you think we're gonna explain your nakedness and your true form coming out to your mothers hmm?\" She said, Ian seeming to catch on quickly. \"Listen, your father was a demon, that's why you look like this. Something happened and you lost your memory but, being with me again brought some of your memories back.\" She stated matter of factly.\n\nIan nodded, \"O...okay?\"\n\n\"Your mothers though...they're both human, and they wouldn't understand our situation. I mean can you blame them hun? Besides, I think I'd be in pretty biiiiig trouble if they found out what we just did. So we have to keep this secret, just between us. Okay hun?\" He nodded again, \"And I'll help you with doing that okay? We'll start making plans to keep our time together secret at school.\" She finished with a wink.\n\n*****\n\nA.N. Sexiness. \n\nI know some people are probably gonna be a little bummed that Ian lost his fake virginity to a little bit of a lesser spotlight character. But all I can say guys is, I've written the next few chapters guys, don't worry, it's worth it XD \n\nLike I said earlier, the next few chapters are coming quickly, so be on the lookout for them! \n\nNext Chapter: Steam And Frustration "
    ],
    "authorname": "DamienDeath20",
    "tags": [
        "interracial",
        "futa on male",
        "anal",
        "succubus",
        "domination",
        "futadom",
        "shemale",
        "blowjob",
        "creampie",
        "dickgirl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-lost-boy-ch-12"
}