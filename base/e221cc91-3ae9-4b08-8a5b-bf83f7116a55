{
    "title": "A Gift From His Father Ch. 31",
    "pages": [
        "In the blink of an eye, John and Penny were naked. An unseen force seemed to have peeled her clothing off, catching Penny off guard. John was there. He took her into his arms as if she weighed nothing. Penny wrapped her legs around him tightly, grabbing him around his neck. She pulled herself up his body, her wet pussy sliding along his erect cock, trapping it against his abdomen.\n\nLifting herself up, she pulled herself closer then slid down his muscular body, slipping his cock right into her tight, wet and warm pussy. Nothing like this had ever happened to her before and Penny moaned loudly. John was inside her once again. There was a feeling of both accomplishment and expectation. She was reunited with her master and he was going to fuck her like she'd never been fucked before. She felt him grow larger, thicker and longer. \"Oh, my gawd!\" She trembled through her first orgasm.\n\nDefying gravity, they were now somehow in a horizontal position and Penny had her calves on John's shoulders as he began to stroke in and out of her, slowly at first. She panted as this incredible joy began to expand within her, emanating from her core outward. Then her mind exploded with the intensity of the moment as another stronger orgasm erupted, stronger than any she'd ever imagined.\n\nSomething was different, John realized. It was Penny. It had been months since they'd fucked last, and she'd impressed him then. When you fuck as many women as John, there has to be something really different to make him take notice. It was the way she was gripping his cock, she was tight but her pussy seemed to be caressing him differently. That alone moved her into his top ten. But there was something more, though he couldn't quite put his finger on it. Nevertheless, fucking her was making him happy; he was thoroughly enjoying her, much more than he'd expected he would.\n\nOne dizzy moment later, Penny was on her hands and knees being fucked doggy style. John held her by her athletic hips and pumped into her from behind for a while before magically changing positions. He loved watching as her magnificent breasts swayed back and forth as he bounced against her. Penny was coming again or she'd just continued in one long orgasm. After several minutes in that position, things changed again. Penny now found herself straddling her master, riding him cowgirl as John reached forward to play with her tits. she'd completely lost track of time. It seemed that she'd been coming almost continually; mentally she was having trouble keeping up. It was like a roller coaster, she'd come hard and then it would taper off, only to return stronger. She felt him grow bigger still, and knew that he was close. Using her last ounce of strength, she squeezed as hard as she could and he came with a roar, filling her as she screamed loudly, unable to hold back her passion.\n\nJohn heard a familiar voice from behind him, \"Hey you! I thought you were home?\"\n\n\"April!\" Penny gasped with a raspy voice, \"Please, help me! He's killing me. Can't cum anymore.\" She giggled, holding out her hand to be tagged.\n\n\"Hey you yourself!\" John said. \"Looks like you're tagged in.\"\n\nWith a whirl of air and dizzying movement, April was stripped of her clothes and in John's arms, while Penny was resting on a king size bed, with a bottle of cool water in her hands.\n\nJohn and April kissed gently at first, then April pierced his mouth with her tongue and John sucked it in. They continued while Penny enjoyed the much-needed water and watched. She was surprised that she wasn't sore from the pounding she'd just taken. She had just been thoroughly fucked. The water refreshed her and she wondered if there would be a second round, perhaps a double team? Perhaps she'd get to play with April. Had they played together before? She thought they had but couldn't remember. she'd had so much sex since she joined Johns agent corps, much more than she'd ever dreamed of having, most of it great. Some sex she had just to make her quota, still, she always got off. She couldn't help but enjoy sex, the way John had made her pussy, tits and lips so sensitive, as he did with all his agents. Still, fucking John was like comparing a pickup game of basketball to the NBA.\n\n\"Are you showing off for our guest?\" April cooed as she looked at Penny reclining on the bed that had appeared only moments ago.\n\n\"Perhaps,\" he sighed as he bent down and took one of her nipples into his mouth. He nibbled on it causing April to shudder and her pussy to moisten.\n\n\"Aerobatics or bed?\" he asked as he moved to her other nipple, giving her a choice of where they would continue to play.\n\n\"Bed,\" she said, hoping that Penny wouldn't be too nervous to join the fun.\n\nIn a flash, they were lying on their sides in the bed next to Penny. John was facing away from her, but April looked up and down her long golden legs. She was beautiful, she thought. She took another second to admire the woman, this time as a lover, starting at her dainty feet and slowly traveling up her, legs lingering where they met. Her gaze traveled farther up Penny's body, past her flat belly to her mountainous globes where her eyes rested for a time as she admired her ripe nipples, then finally up to her beautiful face. Penny was watching her and a smile appeared when their eyes finally met.\n\nApril took in a quick breath of air as John inserted one finger inside her, which he quickly followed with a second. She was wet and ready. April's eyes rolled back in her head as she melted under his touch and the warmth spread throughout her body.\n\nShe opened her legs wider and felt his palm covering her pussy and rubbing her clitoris as he made small circular motions. His mouth was near her ear and he whispered, \"Come for me.\" April's eyes sprang open, startling Penny, who could only imagine the pleasure Johns fianc\u00e9 was enjoying as April moaned loudly. Seeing Penny watching her come, she ended the moan with a smile, her eyes inviting the brown woman to join them.\n\n~~~\n\nIn another wing of the mansion, Jim was racked with guilt as the memory of his wife's abduction played on a continuous loop in his mind. He had tried and failed to save her.\n\nMaria and Carmen sat not far away, reading Jim's mind. \"He's blaming himself,\" Carmen thought at Maria. \"There was nothing he could do. It all happened so quickly,\" Maria thought back. \"He did try to help. He's lucky that the only thing that happened to him was being knocked unconscious,\" she added.\n\n\"We've got to do something. Besides, it's been almost an hour since I've been fucked. We should ease his pain. Get him to forget about this for a little while.\" They both agreed. Standing together, they strolled over to the tormented man and sat on each side of him. Jim looked up from his thoughts to see their beautiful faces only inches from his own. They were very beautiful women; their makeup was perfect, their lips so very appealing.\n\nUnintentionally, he greeted them roughly, \"Is there something you want?\"\n\nMaria said, \"Jim we don't want you to be sad. John will get Susan back unharmed, you'll see. Tell him, Carmen.\"\n\n\"That's right,\" Carmen said, as she placed her hand on his knee. \"There is nothing to worry about.\"\n\nMaria placed her hand on his other knee and rubbed back and forth once. We were hoping that we might be able to help you relax a while.\n\n\"Relax? No. What about Susan? Why aren't we going after Susan? He said he could track her.\"\n\nCarmen rubbed his knee as Maria had. \"Jim, don't worry. If John said that he could get Susan back, you should consider it a done deal. When the time is right we'll go after her.\"\n\nMaria leaned in close to his ear and using her agent gifts, she gave Jim a few suggestions. \"Relax Jim; let us put your mind at ease. Let me and Carmen make you feel good. You need to feel good.\"\n\nJim blinked and let the women push him backwards into the couch. \"Yes, I need to relax,\" he repeated as he slowly laid back. Maria kissed him softly on his lips while caressing his face with her hands while Carmen unbuckled his belt and worked his pants off. Jim was growing firm and his cock sprang up as she pulled his boxers off and tossed them next to his pants. Maria continued to kiss him while she worked on unbuttoning his shirt and had it off before Jim knew anything had changed. Carmen pulled her dress off and traded places with Maria while she pulled her jeans and top off. Neither of them had bothered with bras and panties, they only got in the way.\n\nMaria took Jim in her mouth and began to work his cock, bobbing her head up and down. Meanwhile, Carmen straddled his face and lowered her pussy to his waiting mouth. He pulled her down into place by her thighs as he admired her bald pussy. It was dripping wet. As soon as she was near enough, he licked her and she cooed.\n\nIn the kitchen, Chance was engaged with his bank on the phone. He was transferring several thousand dollars to his hometown. He was trying to finance a new building for the school he'd built. The girls were getting a little loud so he stepped outside and sat on the patio while he conducted his business, not wanting the banker to think he was watching porn. Little did he know that Chance's life was better than any adult movie or series.\n\n~~~\n\n\"We aren't safe here. He'll be coming for her. Why did you take her? He'll want her back. He'll probably kill us for her,\" said the bald man missing the finger.\n\n\"He'll kill us anyway. But we now have a way to strike back from the grave,\" said his twin.\n\n\"What are you talking about?\" asked the former Master of the Ring of Justice.\n\n\"Don't you see, brother? We are hopelessly outmatched. He'll be here soon and he will take my ring and kill us both. But if we use our time wisely, we can create a trap using her as both bait and the trap. We will win even if we won't be here to enjoy it.\"\n\nThe other brother realized that his sibling was right. \"Go ahead, tell me your plan.\"\n\n\"What's the one thing this young master of the power ring can't refuse?\"\n\n\"I don't know. He can have anything he wants.\"\n\n\"Yes, that is true and what he can't resist are women. Sooner or later he fucks every woman around him. He can fuck all day long and into the night. So, we give him a new woman, and she will use her body to poison him. We will make her the ultimate assassin, the killer of the Master of Power. When we are dead, we will long be remembered as the brothers that defeated him. Our names will live forever and we will become legends.\"\n\n\"I like it brother. How should we proceed?\"\n\nWith his brother at his side, the Master of the Ring of Peace looked down at Susan who had been tossed into a pit full of slime, dirt, and feces. \n\n\"I will change her physical appearance, make her alluring to him and then poison her pussy. He will be compelled to fuck her and when he does he'll die.\"\n\n\"A brilliant plan, my brother. When do we begin?\"\n\nSusan was wading breast- high in the muck. With no idea where she was and what the brothers would do to her, she was defenseless and still completely naked. The stench was horrible but not knowing what else was in the pit with her was even more frightening. Suddenly, she was pulled out of the filth and flung against a wall. As she began to crumple to the floor she was pinned to the wall, her feet dangling off the floor. \n\nNext, her arms and legs were spread wide and she was completely exposed. She screamed as the filth dripped from her body: she feared that no one would come to her aid.\n\nThen, jets of water hit her from every direction; it was as if someone had turned several fire hoses on her at once. She closed her eyes as the water hit her face with the force of slaps. Then she was thrown face first, tits and belly forced into the wall as the hosing continued washing away all the crud, leaving her bruised but clean of the muck. Without warning, the water stopped and she was tossed back again, pinned ass and shoulders against the wall, feeling like a drowned kitten.\n\nThe two bald men stepped forward as the last of the water receded into the floor drain. They walked back and forth as they looked her over. The one missing his finger spoke, \"She'll need to be much younger, perhaps in her late twenties, no twenty-three. I like that age, not too young, just old enough to have some experience.\"\n\nSuddenly there was pain, intense pain as Susan's body was forced to regenerate. She screamed as the pain rippled throughout her body. Her flesh was becoming stronger, more flexible. Her skin tightened, cellulite disappearing from her thighs, butt and arms. Her breasts grew more firm and retreated higher on her chest as the lines from her face disappeared along with the grey from her hair. Her pussy tightened causing the jewel piercing her labia to rise and sparkle in the light.\n\nThe men paced back and forth as they watched her body obey their will. Susan stopped screaming when the pain subsided. \n\n\"She's too short, too small. She needs to be taller.\"\n\nImmense pain attacked her body once again and she shrieked and struggled against her invisible bonds, but they held firm as her legs stretched longer. Her torso and arms stretched proportionally to her new height. The pain was different, but just as intense as before, only this time it was deep in her bones. She felt as though she was being torn apart. When it stopped, she'd passed out from the ordeal. She was now over six feet tall, perhaps six feet three inches tall. It was difficult to know for sure.\n\nThe Master of the Ring of Peace was exhausted and almost collapsed, his brother catching him as he tried to regain his strength. \"Perhaps you should rest a bit, brother.\"\n\n\"No. There will be plenty of time to rest later. He'll be here soon, I must finish the trap.\"\n\n\"If you insist,\" he said as his brother regained his footing. \"She's too skinny now.\"\n\n\"I know,\" he said angrily. \"She needs to be strong and soft.\" He began again, this time adding curves to her ass and growing her breasts, making them fuller and larger. Susan moaned, unaware of what was happening.\n\nShe was pulled from the wall, hanging limply, arms dangling from her sides as she was levitated before the brothers as they looked over their work.\n\n\"She should have red hair and green eyes. Blonde is too common,\" said the brother missing the finger. His twin concentrated and his sibling watched her hair color change to a bright red, lifting her eyelids to confirm their new color.\n\nHe was almost done. He shoved his hand into her most sacred of places. She was tight, but he gave her more strength there. She'd be able to clench and hold any man until she was willing to let him go. He tugged his hand free, and staggered to a nearby table. His brother watched as he retrieved the chemicals he'd mixed earlier. There was only a single dose, but it was sure to do the job. Once the man finished his ejaculation, it would be sucked into his urethra and death would be swift.\n\nSusan was coming around; her body was still tingling and ached everywhere. She only remembered the pain. \"Where am I?\" she asked. \"I'm afraid that will have to change too,\" the brother missing a finger said. \"She's not erotic enough. You need to change not only the sound of her voice but also the way she speaks. It's too American. She needs to have a foreign accent, something European or Balkan.\"\n\nSusan didn't know what they were talking about, but her throat tightened and she coughed as though she was choking. Her mind got a little fuzzy and when the coughing stopped, she asked. \"Vdat have you done to me? Vhy do I sound so different?\"\n\n\"Time is growing short, brother. We've one last thing to do. She must be irresistible to every man.\" His twin was weak. He closed his eyes and concentrated. He looked at her. She looked no different, but he found looking at her painful. She was so beautiful. He was instantly aroused. He took a step forward and almost fell; he was drained. His brother didn't look, but could feel the pull and he too was aroused.\n\nHe lifted his brother, pulling his arm over his shoulder and taking his weight. \"We need to leave her now. You need to rest for the final battle. You can program her from a safe distance. She's not going anywhere.\" The twin bald men hobbled from the room leaving Susan once again suspended in midair four feet off the ground, unable to move and sounding like a character from a Dracula movie. \n\nThe brothers watched lustfully at their creation from the safety of the warehouse control room where John Deere had once built tractors. She was magnificent, this new woman. Once programmed, she would be deadly.\n\nUsing his last bit of energy, he programmed Susan. \"You have one purpose in life; you must fuck the Master of the Ring of Power. You know him as John Smith,\" he thought deeply, speaking into Susan's unprotected mind. She repeated the commands, allowing what she was being programmed to think.\n\n\"I have but one purpose. I must fuck John Smith, the Master of the Ring of Power,\" she said in a voice that was foreign to her. Susan was deep in a trance, her new voice sounded deep, exotic and so sexy. She sounded more intelligent, as if English was just one of the many languages she spoke.\n\n\"The sooner I fuck him the better. Only after I fuck him will I have any other thoughts. I will be discrete and patient, but I will fuck him, within twenty-four hours. If I fail, I will forfeit my life. He can't resist me. No man can resist me.\"\n\nThey listened to her repeat the litany aloud several more times. Satisfied that she would carry out her programming, she was ordered to sleep but to continue to recite it in her mind until she awoke.\n\n~~~\n\n\"Party at my home tonight at eight. Be there or move out of state, tonight,\" Jacquelyn warned her nemesis, then she turned to Betty Sue and told her she needed to wash the tennis match from her body. The two turned their backs, dismissing their defeated opponents and began their shower.\n\nJenny Baxter, Victoria Strauss and Betty Sue Weaver had arrived early at Jacquelyn Smith's mansion, anticipating a good time and looking forward to seeing Gale further humiliated. They assisted in setting up the party, telling the servants where to put the hors d'oeuvres and what wine would be the most appropriate. While they waited for Jacquelyn and their special guest, they wandered around the main floor admiring the portraits and paintings, lingering in front of the one of the late Dr. Zachary Smith, which hung in the library.\n\n\"It's hard to believe he's gone,\" Jenny said to no one in particular, as she reminisced of all the times he'd fucked her right under Jacquelyn's nose. He could be a bastard, but he had a huge cock and knew how to use it. He never failed to make her cum. Thinking about him made her pussy throb. How long has it been?\n\nVictoria sighed. I don't know, it has to have been three or four years now, as she remembered how he took her anal virginity one night on his yacht. She never thought she'd enjoy anal sex, but he seemed to know what he was talking about when he said she'd love it and come as soon as he got all his thick long cock in her ass. He was right. Amazingly, she loved anal sex, although she'd not found anyone who could fuck her like him.\n\n\"That's mistress' deceased husband?\" Betty Sue asked, already knowing the answer. \"He looks dreamy. How'd he die?\"\n\nBoth Jenny and Victoria thought about that day. Jenny answered first. \"I think they said it was a brain aneurism, is that right Vicky?\"\n\n\"Yes. That's what I heard. He went quickly,\" Victoria said, as she remembered making the 911 call while pretending to be his wife. \"Left Jacquelyn a huge fortune from what I heard, too.\" \n\nJacquelyn chose that moment to enter the room. \"You girls lamenting over Zachary again?\" She knew that he had been fucking them. They didn't know he'd fucked all of her friends. She missed him at times, but whom she really missed was his son John. It had been months since he'd bothered to fuck her. She knew he was busy, doing god knows what, but she resented it nonetheless. She'd have to be satisfied with fucking her girlfriends, and having them eat her pussy. Especially tonight, she thought. It will be fun. I'm going to add a few toys to the mix, including my brand-new strap-on. She smiled. She was going to fuck them all, well maybe not Betty Sue.",
        "\"I do miss him occasionally,\" she admitted. \"He did have his ways.\" She smiled, knowing they knew what she meant.\n\nThey chatted on about her late husband, and then asked about the girls and where they were. They were happy to learn they'd not be home that evening as the girls were visiting friends during their winter break from college.\n\nThe doorbell rang, signifying guests at the gate. Jacquelyn pulled her iPhone 7 from her pocket and opened the gate. \"Well girls, it looks like the entertainment is on time. Shall we meet them at the door?\"\n\nGale Farnsworth and her tennis partner Leah Scott were about to ring the front door bell when Jacquelyn opened the door and beckoned them in. \"Why Gale, Leah, so nice of you to drop by.\" She looked them over. Gale was wearing a white pantsuit and heels. Leah was wearing a blue dress that showed off her fabulous legs.\n\n\"I didn't think we had a choice,\" Gale said as she stepped into the mansion that rivaled her own.\n\n\"Of course, you had a choice, silly,\" Jacquelyn said as she led the women into the house. The others were lounging on the furniture, eating and drinking as if the party had already begun. \"You know the girls. Ladies, our special guests have arrived.\"\n\nThey all approached, hugging and giving air kisses, then retreating.\n\nAna appeared and offered to take the women's coats. The maid always seemed to know what was going on. \"Thank you, Ana,\" Jacquelyn said as the women handed the maid their coats. \"Did you take care of that other thing for me?\" she asked her maid. Ana nodded. \"Then why don't you take the rest of the night off. I'll see you in the morning.\"\n\nAna took the coats to the guest closet and prayed that her mistress wouldn't be so tired that she wouldn't have the energy to play with her in the morning.\n\nJacquelyn allowed her guests to get comfortable for a few moments, as well as give the women a chance to feel that Ana had retired. They all sat in the circle the furniture provided, chatting and talking about general topics, despite everyone knowing why they were there.\n\nFinally, Jacquelyn had decided that enough time had passed and said, \"Gale and Leah, as you know, you are here because you lost a bet. So, for the next twenty-four hours, you're going to be our personal sex slaves. Why don't we get started? You can strip for starters.\"\n\nLeah wasn't a fool. After the incident in the locker room, she knew what to expect. She stood and pulled her dress over her head and was naked, having not bothered to wear panties or a bra. Her lean body and tiny tits made her look like the perfect play toy, thought Jenny and Victoria, who'd never seen the young woman naked before. She was unafraid and judging by how hard her nipples were, she was eager to begin.\n\nGale was much slower to respond, and didn't dress for a quick strip. While Leah sat sipping her wine with her legs crossed, everyone focused on Gale as she slowly removed her clothes. Standing in just her panties, bra and heels, she was surprised to find that Ana had left several hangers for their clothes. Did she know what they were up to?\n\n\"Gale you are making us wait, which means that you will be punished for taking so long,\" Jacquelyn said.\n\n\"Time violation warning!\" Vicky yelled and they all laughed, reminding them all of the penalties Gale accumulated at the tennis tournament.\n\nGale blushed and couldn't decide what to take off first. Finally, she decided to remove her bar and then slid off her panties. That was probably the wrong order as the girls all giggled when she bent over, her large tits hanging so low as she bent over. She was much bigger than she looked in her clothes. Her natural breasts were large and drooped considerably, but it worked for her. She would probably be happier if they didn't hang so low, but they were a teenage boy's fantasy. \n\n\"Since you made us wait so long, Gale, you can stand in the middle and slowly turn around and let us see that body of yours,\" Jacquelyn said. \n\n\"What do you think girls? Can we work with that?\" All the women made agreeable sounds. \"Thank you, Betty Sue, for chopping down that neglected forest,\" Jacquelyn pronounced and Betty Sue beamed. \"Girls, you wouldn't have believed what it looked like before Betty Sue applied her talents.\" Gale blushed, her face and upper chest turning crimson.\n\n\"Leah, it's your turn. Gale, don't go anywhere. Leah, turn slowly and let us admire your lovely body,\" Jacquelyn instructed.\n\nLeah quickly joined her tennis partner in the center of their circle and turned her body, showing off her long legs and firm body. She was excited and dipped her fingers into her wet pussy, then played with her clit a bit before Jacquelyn told her she could stop. The women were fanning themselves. Leah was hot and she knew it.\n\n\"I think it's time we joined our guests. Ladies, get naked. Betty Sue, what do you think? Daisy chain?\"\n\nBetty Sue agreed as she quickly slipped out of her clothes. She definitely felt her star rising as Jacquelyn twice called on her. \"Why don't you decide the order,\" Jacquelyn told Betty Sue. \"Gale has to eat my pussy before she gets to join the chain.\"\n\nElated by her new status, Betty Sue made sure that she mixed everyone up nicely. She put Leah in between Jenny and Vicky, since they were so familiar with each other's pussy they could probably sketch it with their eyes closed. Jenny would eat her while she ate Vicky, completing the chain.\n\nLike Leah, Jacquelyn and her girls hadn't bothered with underwear and were naked in no time at all. Jacquelyn took her seat in the overstuffed chair while the women curled up together on the plush carpeting. This left the hesitant Gale still standing.\n\n\"Well come along Gale, don't keep your mistress waiting. Unless you like a little pain with your sex.\" Jacquelyn produced a leather riding crop she'd purchased just for this occasion. \n\nSeeing the riding crop, Gale quickly knelt between Jacquelyn legs but still hesitated until Jacquelyn used it, lightly moving it over Gale's breasts and around her nipples, watching them harden. Jacquelyn lifted one tit and then the other. Gale closed her eyes and trembled. She couldn't remember ever being this turned on. She felt the crop slid between her legs and against her very wet pussy. She let out a small squeal as she felt a sharp slap on her ass.\n\n\"Come on slut, my pussy isn't going to eat itself,\" Jacquelyn said. Before she could use the crop again, Gale was lapping her adversary's cunt. \n\nShe was becoming more aroused being dominated like this and enthusiastically licked and sucked on the second pussy she'd ever eaten. She moved her tongue around Jacquelyn's outer lips before moving inside and dipping her tongue into the center just a bit before licking around, ignoring the clit, which was protruding and begging for some attention.\n\n\"Oh, mmm...\" Jacquelyn moaned. \"You're not very good yet but there are signs that you have a talent for this, my pet.\"\n\nThis served to encourage Gale and she added a finger and then licked and pulled on Jacquelyn's clitoris, which caused her to shudder as she felt her first orgasm shake through her. Gale was rewarded by a mouth full of Jacquelyn's juices, as she relaxed her calves on Gales shoulders. The nectar was almost too much but Gale was determined to drink it all. She was almost purring as she savored this new exotic cocktail and was surprised that she enjoyed the taste.\n\nIn her lust to get all of the tasty syrup, she managed to bring Jacquelyn off again. She tried to suppress her scream of ecstasy, but it was too much and her pussy was becoming too sensitive so she pushed Gale away with her right foot.\n\n\"Mmmm, you little slut you may have found your calling, yet. And you may end up getting a reward after all.\"\n\nIn a tangled mass of arms, legs, tits, pussies and asses, screams of passion filled the room as one by one the girls came. It started out as a daisy chain, but once everyone began to feel good, it collided into any open hole. As they pulled themselves free, in the center of it all Leah popped her head up. Her face was soggy and someone handed her one of the fresh towels that had been set out. She smiled. She was definitely enjoying this little romp. She'd never had sex with another woman before today and if this was typical, she thought perhaps she'd have more fun playing for the other team? She giggled at the thought. She didn't currently have a boyfriend and these ladies were much wealthier than the crowd she usually hung out with. Before she could contemplate any more, Jacquelyn was trying to get everyone's attention.\n\n\"It's time to bring out my toys,\" Jacquelyn announced as she dropped a large basket near the girls. Inside were an assortment of dildos, vibrators, nipple clips, collars and leashes, and a strap-on that was identical to the one that Jacquelyn was wearing. She called Leah over to suck her cock. \"If you do a good job,\" she said, \"you can be first, or defer calling out someone else instead.\"\n\nThere was a long lifelike cock wiggling from Jacquelyn's groin. Leah struggled to suck it into her mouth, but was eager to show off her cock sucking skills and after a while was able to deep throat it, much to the amazement of all.\n\nSatisfied that her cock was ready, Leah opted to defer and called her tennis partner's name. \"I think that Gale should be first. After all, had it not been for Gale, I'd never have been invited.\"\n\nGale's eyes grew large. She'd never had anything that large in her pussy. Her husband had a tiny cock, four inches at best. That monster would kill her. Still, she heard that large cocks were supposed to be better, and since she was trying new things, she surprised Jacquelyn and the others by spreading her legs in the air and calling for Jacquelyn to come and fuck her.\n\n\"You are full of surprises aren't you Gale,\" Jacquelyn said as she knelt between Gales legs and moved the tip of the fake cock to Gale's freshly shaved pussy. She pushed it all the way in.\n\nGale gasped in surprise. It was huge, but it felt so good sliding in. She hadn't realized just how slick she'd become as she took it in all in a single stroke. She sighed as she realized how good it felt to be completely full for the first time in her life.\n\nThis was the first-time Jacquelyn had ever used a strap-on, but she wasn't going to let that stop her. She pulled out slowly, watching Gale's pussy lips hug the fake cock until it was almost completely out then pushed back in slowly. She was hoping to drive the poor impaled woman crazy as she fucked her the way she'd often enjoyed her lovers fucking her. After several strokes, her arms were beginning to tire, and she increased the tempo. Gale started moaning and Jacquelyn learned that Gale liked it a bit rough. Fortunately, the nub riding against Jacquelyn's clit was bringing her close to her orgasm, too. She pulled hard on one of Gale's nipples and the slut squealed. Apparently, she was right; Gale enjoyed a little rough play. She slapped her hard on her ass. That did it! Gale screamed as she wrapped her legs around Jacquelyn and held on as her climax had her flailing.\n\n\"Oh, my Gawd! So, Good, so gooood!\"\n\nThat was enough to get Jacquelyn off as she contemplated that Gale might never have had a real orgasm before. That would explain a few things, her bitchy behavior for example. \"Perhaps she's ready to try my Sybian?\"\n\n~~~\n\nRejuvenated from the sex, both directly and indirectly, John felt himself rise from the bed, where Penny and April slept. He meant to step over them, not disturbing their slumber. Instead, he effortlessly levitated out of the bed, hovering above it and the two sleeping women. He mentally called out to Dr. Smith.\n\n\"Ahhh...dad. This is new!\"\n\n\"Johnny, are you floating?\" Dr. Smith asked from the dimensional prison within the Ring of Power.\n\n\"That does seem to be the case,\" he thought back to his father as he moved away from the bed and was instantly cleaned and once again clothed. He lowered himself gently to the floor.\n\n\"I was wondering when new powers would manifest themselves,\" Dr. Smith said.\n\n\"What are you talking about? What new powers and why?\"\n\n\"Son, you possess four of the five ancient rings. No one has done that in,\" he paused to check his notes, \"over three hundred years.\" \"I didn't realize that was such a big deal. So now I can fly?\"\n\n\"It is a huge deal. If you mean fly like the guy with the S on his chest and the red cape, probably. However, like him you'll need to experiment with it to see just what you can do.\" He paused. \"It's not like you giving April the ability to fly. That takes effort and energy from your reserves. This is more natural, almost like breathing.\" He waited again as if he were reading something, and then gulped.\n\n\"Johnny, when you get the fifth ring...then the fun begins.\" He yelled, \"This is incredible! Son, you can't hold on to them for very long, they are meant to be out in the world. But, according to this, you can alter them, change their powers and even rename them.\"\n\n\"This is strange,\" John said. Then, as if he were watching a movie, he saw himself surrounded by all his agents and in a ceremony, he began doing just that, changing the rings, renaming them and presenting them to...The vision was gone. \"Dad, did you see that?\"\n\n\"I did. Precognition. That would be another power manifesting itself. Once you get the fifth ring there will be no stopping you.\"\n\n\"What do you mean?\"\n\n\"Well from what I've read over the years and this text, you can't keep the rings but must reassign them to new masters and or mistresses. These new lords will be like your agents, but much stronger and their power flows through the Ring of Power, making you even more powerful, amplifying your existing powers and opening the door to new abilities.\"\n\nThey both said nothing for several moments. Dr. Smith's words seemed to hang in the air magnifying their importance. \"So, looks like the real question you have to answer is who among your agents is worthy to become a master or mistress of a ring?\"\n\n~~~\n\nThe team was assembled once again. April watched as John, his agents, and Jim were covered by a shiny transparent bubble and then they vanished without so much as a sound.\n\nHalfway around the world, they materialized in what looked to be an abandoned building once used for making steel. They knew their assignments and spread out, Maria teamed with Chance and Carmen with Penny, John covered them in forcefields, expanding as much as twelve inches from their bodies. Of course, they were looking for guards, support personnel, Susan, or the large bald twins themselves. While John and Jim advanced on the main target, the others would flank them. He was expecting one or two traps; he wouldn't make the same mistake as before. His personal forcefield extended several feet from his body, and his footing would be sound.\n\nAs if on cue, a large scaffolding dropped from above and shattered into pieces around him and Jim, who was just a few feet behind him. \"Well at least we know they know were here,\" John said. \"So much for being cautious.\" With that, he levitated into the air and moved forward using his forcefield to break through walls, doors, and anything else in his path. Machine gun fire erupted, bullets began to bounce off Johns shields, ricocheting in every direction until John altered the shields to catch the bullets, allowing them fall harmlessly to the ground. John's offensive action sufficient to distract the snipers long enough for the team to disarm them.\n\nAs John rose from the floor of the open warehouse, hot molten steel poured down upon his bubble, covering it and forcing it to the ground in a huge crash. Everything was quiet for a few heartbeats as things settled, and then the sound of the cooling steel cracking pierced the air. Within seconds, the shell encasing Johns bubble cracked open and fell away. John continued to advance, this time up through the floors of the surrounding levels, crashing through like a wrecking ball shattering the once sturdy building as defenders scrambled away lest they fall along with the debris.\n\nJust yards ahead of him, and standing between him and what he hoped was Susan, stood the twin bald men, and though definitely there, John sensed their powers had diminished. \"You can't have her. She's ours now,\" they said in unison as if rehearsed.\n\nJohn lowered his forcefield as he landed gently on his feet. He looked at the brother missing his finger and said, \"I think this belongs to you,\" and he hurled the missing digit at its owner. The bald man ducked, expecting an attack, but the finger fell at his feet and rolled towards him. He picked up the digit ripped from his hand, looking at its discoloration. It rolled back and forth for a moment then reattached itself, looking like it never left, minus the powerful ring.\n\n\"She is not yours. She is mine. Let her go and you might live through this,\" John said sounding provoked.\n\nThe brothers held firm. The Master of the Ring of Peace had used the last of his power; he had nothing in reserve. So, he bluffed, hoping to stall and misdirect. \"She's been altered. She will become more powerful than all of us,\" he said making grand gestures with his arms and hands. The problem with a bluff is that when it doesn't work it fails miserably. That was the case here.\n\nJohn laughed. \"That isn't going to work,\" he said. \"First of all, I know who you really are, Albert Ebenezer Webster and Ebenezer Albert Webster, identical twins born in 1857, common thieves and con artists.\" John paced back and forth in front of them, his hands behind his back.\n\n\"You tried to use your matching faces to frustrate the authorities in England and demanding compensation for convicting the wrong brother. Between the two of you, nearly one hundred fifty convictions for stealing.\" He paused for effect, \"But they couldn't make it stick because they couldn't prove which of you committed the crime.\" John laughed again before continuing, \"But your criminal r\u00e9sum\u00e9s helped lead to the discovery that fingerprints could be used to identify culprits such as yourselves, even though you share DNA, your fingerprints are different.\" John stood before them, \"But how did you come to possess the rings? Did you steal them?\"\n\nThe brothers stood speechless, how did he know this about them?\n\nSeconds later, John threw them against the nearest wall, suspending the brothers several feet off the ground, leaving them pinned and unable to move. He admired the final ring. It wasn't as beautiful as the rest, but he'd make it beautiful once again.\n\n\"The spas and resorts where you are stealing and killing the young for their youth, tell me their locations!\" The brothers were helpless now. John felt the brothers' minds working, trying to come up with a plausible lie. But that was all John needed. He picked the locations from their minds and now knew how many were active and which were under development. \"Dad, you know what to do,\" John said and in an instant Dr. Zachary Smith sent the messages to waiting teams, including where and how to destroy the devices.\n\nStanding just behind John, Jim listened to the evil twins. What had they done to his bride? Seeing that the twins were standing between John and the only door, he realized that Susan had to be somewhere behind that door. Moving stealthily, he made it to the door and opened it. Surprised to find it unlocked, he dashed into the room, not knowing or caring if there were any remaining booby-traps.\n\nJohn immediately felt Susan's consciousness as the door opened. But she was changed in some way. He couldn't tell from here, she was not conscious, but she was troubled.\n\n\"Don't go in there. I warn you,\" Albert said, or was it Ebenezer?\n\n\"Oh, I almost forgot.\" There was a crunching sound and a scream of pain as John ripped the finger with the ring from Albert's hand, or was it Ebenezer's? He admired the ring. It was old, and tarnished, but he knew what to do with it. In an instant, he had deposited it into his safe.",
        "Leaving them alone to ponder their fate, he followed Jim into the room behind the double doors. It was a more like an auditorium or classrooms with tiered seating looking down on the main floor where professors and instructors lectured. In the center of the floor, laying on a table, was the woman that had once been Susan Peterson.\n\nJim rushed down the main aisle to his wife's side. The closer he got the less he recognized the woman lying unconscious on a medical table of some sort, naked, lifeless and beautiful. She was breathing. He stared at her face, after having given her naked body the once over. He tried to find his wife there, but nothing physically remained. \n\nJohn glided quietly into the room, defying gravity as he floated cautiously then landed just behind Jim.\n\n\"She looks different, but she's still in there, Jim,\" John assured the distraught husband.\n\nHearing John's voice, Susan blinked her eyes as she regained consciousness. She sat upright. \"You came for me?\" she said in a surprised voice that she barely realized was her own. Looking just beyond her husband and then back again, she quickly concluded that if the plan were to work she'd need to play along until she could get John alone.\n\nShe looked intensely at her husband and smiled. Both men instantly became captivated.\n\n\"Susan, is that really you? You look and sound so different.\"\n\n\"I know,\" she said with her new accent, watching how she'd charmed the two men. \"I sound like something out of a Dracula movie.\" As she talked, she saw that they'd changed her hair color, too. It was long and bright red, accenting her porcelain skin. \"Seriously, red hair?\" she said aloud and groaned.\n\nJim and John were speechless, as they each envisioned themselves balls deep within her spread legs, pounding her tight pussy while she screamed in passion, fucking her as if they had invented the act.\n\nFinally, John managed to shake the vision; he knew this was part of the Websters twins' threat. Nevertheless, he'd never felt anything like this before. He had to have her.\n\n\"Johnny, are you okay. I am getting some funny readings down here.\"\n\n\"Thanks, dad. I'm cool,\" John lied.\n\nDr. Smith wasn't convinced and decided to pay closer attention to events outside.\n\nShe jumped off the table, her firm breasts bouncing then settling, nipples hard and pink. She was now taller than Jim, and almost as tall as John. Both men continued to admire her beauty, her perfect body. John had to fight to not sweep her up into his arms and take her right then and there.\n\nShe moved quickly to her husband, rubbing her enhanced body against him, brazen by her nudity. He pulled her tight, one hand fondling her firm ass, the other across her narrow back. Their mouths met as Jim lustfully kissed the woman. It was her! It was his Susan, only she was ten times more beautiful and desirable. He was going to fuck her silly when they returned home. If he could wait that long. He must, he had to.\n\n\"You're going to need some clothes,\" John said, interrupting Jim's vision, \"Jim...\"\n\n\"Oh,\" Jim said. Reluctantly pulling his lips from Susan, they slowly disengaged and Jim stepped back a step or two. Couldn't that have waited? Jim thought, angry at being disturbed from his reunion with his wife.\n\nJohn conjured up a black dress with a daring plunge V-neck, ruched sides and asymmetric hem. It barely covered her, but having been completely exposed, it offered the necessary modesty. Her massive breasts remained visible, except for her nipples. Long sleeves descended to her wrists, it fit like a second skin. Susan didn't complain; it felt good to have clothes on again, even if he'd neglected to include lingerie. Her altered mind embraced the slutty look, despite it not being to her normal taste.\n\nShe looked past Jim again, looking at John as he admired the way the dress fit her. Jim caught her gaze and realized that John was going to fuck her the first chance he got. He remembered his powerful master now possessed all five rings. He wasn't sure what that meant, but he knew that opposing him would be a fool's errand. His life would never be the same again. His master would take her as his own; she was already looking beyond him. It's all because of those monsters. The evil twins had done this. But they weren't powerful any longer, mere men. \"Shoes?\" Susan asked, bending forward then stepping back so that she could see her left foot. Looking down, all she could see were her tits. \n\n\"Damn it,\" she thought. \"Are all men that into huge tits?\" Then her thoughts softened. He was, and she jiggled them for him.\n\n\"Oh.\" John was still admiring the new Susan; she looked more naked in her clothes than when she was nude. Suddenly, Susan was standing in red Christian Louboutin four-inch pumps, which left her towering over Jim and at eye level with John. \n\nChance, Penny, Maria and Carmen trotted down the main aisle. Chance was immediately stunned silent by the transformed beauty, catching Carmen and Maria off-guard. They'd never seeing anything shatter Chance's cool exterior. They glanced at the men, who all had bulges stretching their pants. They looked back at the woman. She was breathtakingly beautiful, and the guys were acting a little funny. Penny, Maria and Carmen recognized that look in John's eyes; someone was going to get seriously fucked. Unfortunately, it wasn't going to be either of them. \n\nBeing bisexual, the girls each felt drawn to the woman, but not nearly as strongly as the men seemed to be.\n\nCarmen asked Maria through the link they shared, \"Did you get that? I thought I picked up a thought from the woman, but it was fleeting.\" \n\nMaria replied, \"All I got was relief, but now that you mention it there seemed to be something more.\"\n\nMaria broke the spell. \"Ah... we've secured the remaining hired guns. If that's Susan, we can get out of here now, right boss?\"\n\n\"Yeah, sure. Let's get home, after we check on the twins. Where's Jim?\"\n\nSomehow, he'd managed to slip away while the others basked in the charms of his transformed wife. \n\nShe seemed to no longer want him. They'd gone through something similar when they first began swinging. It almost ruined their marriage. Even in this stranger's body, Jim recognized the look in her eye. What had those evil men had done to her beyond her appearance? He could tell in their brief moment together that she was different. She was no longer his wife. The pain was strong and sudden. His heart was breaking. It was like a punch to the solar plexus. He could barely breathe. Worst of all, he knew he was really to blame. It was his fault that he'd finally lost his Susan, after more than forty years of married life.\n\nHe understood what he had to do. They would pay for this, he swore to himself. Despite his master's reluctance to take a life, he would. He'd kill the two of them and not think twice about it. He continued to lament. Why did they have to change his Susan into this temptress? He'd never have her to himself again. He had gotten accustomed to sharing, though in the end Susan would always come back to him. Why? What was the purpose?\n\nApproaching the twins, still pinned to the wall where John had left them, he picked up a discarded automatic weapon, stepping over the falling security person without so much as a care as he advanced. The brothers watched the broken-hearted husband approach, but could do nothing about it.\n\nPerhaps if they were dead, their spell would be broken, Jim hoped.\n\n\"Hey, no fair, I saw 'em first,\" an unknown blonde woman said as she dropped the machine gun nose to the floor.\n\n\"Who are you?\" Jim swung the business end of his weapon on the sexy blonde woman dressed in the black uniforms of the security the twins had either hired or entranced. Her uniform fit her like a glove. Her tight round ass filled out her pants while her shirt hugged her chest, revealing the lack of a bra to hide her small tits. Jim didn't notice.\n\n\"Oh, right, you don't recognize me. It's the tits and ass. I'm the guy that I suppose got you involved in this mess to begin with. Of course, your master changed me into a woman.\"\n\n\"What makes you think that I won't kill you, too?\"\n\n\"By all means, please do. Put me out of my misery, but only after you take care of those bastards,\" the woman said, pointing to the brothers. Before he lost his nerve, Jim pivoted, aimed his weapon, and pulled the trigger, spraying the helpless pair with over forty rounds in less than two seconds.\n\nThe sounds of the automatic gunfire echoed into the auditorium, alerting the team. In the blink of an eye, John enclosed the group in a forcefield bubble and they dematerialized. A split second later, they materialized just inside the great hall where he'd left the defeated former masters. They were still hanging from the wall, but now the brothers were a bloody lifeless mess. Less than twenty feet ahead Jim turned the weapon on himself, as a small blonde woman watched what was about to happen in horror. Just as Jim pulled the trigger, his weapon turned into a two-foot-long sub sandwich.\n\n~~~\n\n\"It's called a Sybian,\" Jacquelyn declared as she pulled the cloth away, revealing the machine that had been placed in a corner away from where the women were. \"It's the ultimate sex toy,\" she said as she swept a hand down towards the machine in Vanna White fashion. \"I discovered it about six months after Zachary passed,\" she lied. She had actually discovered it after her stepson John had forced her to masturbate daily as part of her punishment for trying to kill him. \"We're all going to take a turn riding it. Who wants to go first?\"\n\nThe women, who were very comfortable lounging and still very much naked, perked up. Having already paired up with each other and used every kind of dildo, butt plug, anal beads, double ended dildo and toy they could find, they had thought the party was winding down. They had all cum so much they'd have been dehydrated if not for the many bottles of wine they'd consumed. Jacquelyn had plenty of good wine, and as the girls would soon learn, she had saved the best for last.\n\n\"I've heard of it,\" Leah said, \"Is it really as good as I've heard?\"\n\n\"Why don't you try it and tell us,\" Jacquelyn said as she pulled the device to the center of the room and made a few adjustments, while explaining to Leah how to mount it.\n\n\"You have to slide all the way down,\" Jacquelyn told her as she slithered forward on the small dildo sticking up from the machine. It wasn't shaped like anything she'd ever seen before. It was average in width but had a funny looking tip.\n\n\"Good, now rest your clit here occasionally,\" she said, pointing to the flesh colored pad with the short bristles. \"This is the clit stimulator. It vibrates.\"\n\nVicky and Jenny became more interested and joined the ladies on either side of Leah. They couldn't help but caress her body and kiss her as she began to look a little nervous. She moaned, responding to the caresses, and was eager to begin. She was already creaming and Jacquelyn hadn't even turned the machine on yet.\n\n\"Okay, ready? Here goes,\" Jacquelyn said as she turned on the machine, to its lowest setting. \n\n\"Oh! Oh...\" Leah said as a smile crept across her lips. \"That's good.\" Straddling the machine, she raised herself up slightly on her knees, bending forward a bit and keeping contact on the clit stimulator.\n\n\"Oh, you like that, huh? Maybe a little more?\" Jacquelyn said as she turned up the vibration and the twisting of the dildo.\n\n\"Oh! Oh! Yeah, mmmore like that!\"\n\nJacquelyn complied and Leah rode the machine while Vicky and Jenny held her while caressing her tits and ass. Leah's moans grew louder. It was really doing a job on her and she didn't want it to end, but she felt herself growing to what seemed like a major climax. After all the sex and climaxes she'd already had that night, this would be something else.\n\n\"Mmmmmm...\" She gasped. \"Oh oh oh.... ah...ah....\" Leah screamed as the anticipated tsunami took her. If it weren't for Jenny and Vicky supporting her she'd have fallen off the machine.\n\nJacquelyn slowly turned down the machine until it was off and quiet. Leah was a shivering, sweaty mess as Jenny and Vicky slowly pulled her off the machine.\n\n\"Oh, my god, I have got to do that again,\" she cried out as she let herself be laid out on the floor. Gale wasted no time in crawling up to her tennis partner, then kissing her face and tits before working her way to her messy pussy and the juices that were leaking out.\n\n\"Hmmm...looks like someone is hooked on pussy,\" Jacquelyn observed before asking who wanted to go next.\n\n~~~\n\nThe team materialized at John's mansion with a defeated Jim Peterson, the transformed temptress Susan, and the mysterious blonde in tow.\n\n\"Chance, you know the drill. I have matters to attend to. Girls, (referring to Maria, Carmen and Penny), assist as needed. I will be back soon.\" With that said, John vanished.\n\nChance and the women looked at the space where their master had been standing only a second ago, amazed. He had never displayed that much power before. Realizing that he now had the fifth ring, they shrugged it off.\n\nMaria and Carmen pulled Jim with them into one of the smaller rooms. Penny took the transformed Susan in to another room, leaving Chance and the small blonde in the great room.\n\nShe was no longer in possession of her automatic weapon, but the holster hanging low on her hips still held an automatic pistol. Chance looked down at her. She held up her hands and showed him she had no hostile intentions, and then slowly moved her hands to the buckle, removing it and offering it to Chance.\n\nJohn materialized in his bedroom, the one he now shared with his fianc\u00e9e April Martin. Out of thin air, materializing before him was his safe, which contained the other three rings. He pulled out the newly acquired ring of peace and examined it a little more closely before putting it back with the others. He closed the safe and it dematerialized, leaving John alone.\n\n\"Congratulations, son. You did it. You are now in possession of all five rings,\" Dr. Zachary Smith said from his command post somewhere within the Ring of Power. At least that the way that Dr. Smith liked to think about it. His sole mission was to be his son's advisor; he had no more thoughts of escape, only those of ascending to the next plane of consciousness, just as Rocky had.\n\nJohn felt a little confused but more powerful than he'd ever felt before. He could now simply think a thought and he would will it to happen. He had glimpse of future events, particularly of his team and his life.\n\n\"You know I can't keep them, don't you?\" John asked his father.\n\n\"Yes, that much is clear. I was wondering if or how it would make itself known to you.\"\n\n\"I just knew it the moment I put it in the safe. The rings are meant to be out in the world. No single man or woman has ever had possession of all five rings for very long,\" John said.\n\nDr. Smith nodded. \"You can change them somewhat, you know. You will need to redistribute them. Have you decided who the new masters/mistresses will be?\" \n\n\"I do,\" John spoke as he sat back in his favorite chair. \"I am going to change and rename the rings. It is my right. They will no longer be used for evil purposes,\" John said. \"We will have a ceremony in a day or so and I will dispense the rings.\"\n\n\"Son, this may not matter to you right now, but because of all that you've accomplished in such a short matter of time and at such a young age, you've become one of the greatest Masters of the Ring of Power, ever. Only three times in its history has a Master accomplished what you are about to do. I'm very proud. Your name will live on forever, regardless of what you do from here. My only regret is not having given you a better last name than Smith,\" John's father joked.\n\n~~\n\n\"You look familiar, but I've met a lot of people in my life time so how about saving us all a lot of time and telling me who you are and what you had to do with the killing of the twins?\" Chance said, clearly in no mood for games.\n\nThe small blonde woman knew that she had better get to the point quickly lest the big man lose what little temper he'd been holding.\n\n\"We met at the orgy in the Caribbean. We didn't actually meet, but I was there. I was a man until your master thought it would be funny and turned me into a woman. I was the man that got Susan and Jim involved in this whole thing in the first place. I was simply doing my master's bidding. Had Jim not killed them, I would have. They were horrible men and deserved to die.\"\n\n\"Interesting,\" Chance said, rubbing the hairs on his chin. \"Let's say that I believe your story. Do you know why they changed Susan?\"\n\n\"I don't know, but there is a reason. The brothers don't do anything without a payoff,\" the blonde said.\n\n~~~\n\nSusan strolled into the large media room and took a seat on the couch. She needed to be with John, but she'd have to play along for a while. She'd get to him soon enough.\n\n\"Susan, my name is Penny. I was at the orgy,\" she paused, looking over the woman again. \"I see they really did a number on you. How are you feeling? Can I get you something?\"\n\n\"Thank you, water would be great,\" she said in an accent that she still didn't recognize as her own.\n\nPenny walked across the room, stepped behind the bar, and pulled out a bottle water. \"Cold or room temperature?\"\n\n\"Cold please,\" she replied cringing, annoyed at the sound of her voice.\n\n\"Are you okay? Is something the matter?\" Penny asked.\n\n\"Yes, it's me. I don't usually sound like this. At least I didn't before my transformation.\"\n\n\"What do you mean,\" Penny asked.\n\n\"I'm from New Jersey. I never had an accent before, at least not one that makes me sound like a foreigner.\"\n\n\"Oh? Really! So, that was part of your transformation. Why?\"\n\n\"Beats the shit out of me,\" Susan lied. \"I sound more like a Natasha than a Susan now.\"\n\nPenny laughed, \"That's funny. I was just thinking that very thing. You may need to change your name.\" Definitely getting the reference to the once popular cartoon show. \n\n\"You think?\" Susan agreed.\n\nThe women chatted on for several minutes, Susan seemed no worse for the ordeal she'd gone through, but Penny couldn't shake the feeling that she was hiding something. Penny thought she seemed distracted. Penny pondered that for a while, and then remembered that Maria and Carmen could read minds. Perhaps they could find out what's going on with a scan or two.\n\n~~~\n\nJim paced the floor back and forth like a caged animal. Maria and Carmen were trying to calm him, but he was caught. He'd successfully killed the evil twin brothers, but failed to kill himself. Without Susan, he had no reason to live. To make matters worse, John had turned the gun into a sub sandwich. It was similar to their first meeting. His master was taunting him.\n\nMaria and Carmen scanned Jim's mind and saw his jealousy. They understood what he was thinking, but why would he think that? They asked each other while they watched Jim pace.\n\nFinally, Jim stopped pacing and turned to the women, \"I'm sorry you had to see that.\" Looking at his new friends, hands in his pockets, he began to share his feelings, hoping they would understand.\n\nBoth women listened sympathetically, deciding to let him talk it out. He rambled on about how Susan's change would make every man want her. The girls realized that she was now as gorgeous and desirable as they were, but irresistible? They didn't see it. Perhaps they needed a man's perspective. They agreed. Maria would stay with Jim while Carmen talked to Chance.\n\n~~~\n\n\"I know that you all are probably worried about me, but I'm fine, just a little tired. Perhaps I could lie down somewhere. I'm pretty exhausted from all these recent changes,\" Susan said.\n\n\"That's understandable,\" Penny said. \"Why don't I leave you here? I will check back in a few minutes.\"",
        "\"Thank you, Penny. If you could dim the lights, on your way out that would be good, too,\" Susan said sounding tired as she kicked off her shoes and reclined on the couch.\n\nPenny complied and smiled as she watched Susan get comfortable. She would find Chance and discuss this with him, something wasn't sitting right with her, but nothing specific. \n\nAs Penny approached, she found Chance talking with Carmen, \"Well, what are your impressions?\" she heard him inquire. Carmen admitted that she was a bit suspicious, but there wasn't anything specific she could put her finger on. Jim seemed to be extremely jealous of John, but she didn't understand what had changed. Penny's account of Susan was similar. She seemed different but the same. Penny and Carmen were wondering if they should ask Chance about his odd behavior and for that matter all of the men, around the new Susan, but decided to shelve it for the time being. It was probably nothing, but their guards were up now. Once might be a fluke, a second time wouldn't be coincidence.\n\nAfter a brief discussion, they all agreed that perhaps Susan was holding something back. Carmen agreed that she should be the one to speak with her next, under the guise of checking on her. They also agreed Jim needed to be watched; if there were to be a penalty for having murdered the twins, then John would be the one to administer it.\n\nChance and Penny went to see Jim, while Carmen went to look in on Susan. Carmen knocked softly on the door to the media room where Susan was supposed to be napping, but she wasn't there.\n\n~~~\n\nTrying to decide who among his people should become a master or mistress of one of the rings had become the single focus for John. The problem wasn't one of trust, but who'd stood out and was worthy. He had a short list. He was working on the details of the ring ceremony when there was a knock on his door. That was peculiar; no one was usually in this wing of the mansion, by design. This was his private office, just off the master suite.\n\nUsing his abilities, he recognized who it was. He stood and called out, \"You may enter Susan. What are you doing here?\" His voice was annoyed.\n\nTimidly, she entered the office, taking note of its elegant furniture and decorations. \"I needed to see you. I wanted to talk about my capture and alterations...\"\n\nShe paused as she watched her charms begin to work. John's heart rate increased as he began to become aroused.\n\n\"Certainly...what do you want to talk about?\" His tone had changed dramatically. He was excited to see her.\n\n\"Johnny, are you okay? I'm getting those strange readings again,\" Dr. Smith asked.\n\n\"Later dad,\" he replied.\n\nDr. Smith knew then there was something wrong. What was it about this woman? How had she been changed?\n\nSusan slowly sashayed into the room, until she was just inches from John. \"It's just that I have been through so much, I don't feel safe. Can you make me feel safe, master?\"\n\nWithout thinking, John took a small step and wrapped the voluptuous woman in his strong arms. She was just a little shorter than him, having left her shoes behind. As she tilted her head up to look at him, he looked down and their mouths met. It was one of the most sensual kisses John could remember. Their tongues wrestled in each other's mouths as Johns hands roamed over Susan's body causing her to sigh.\n\nIn a blink of an eye they disappeared only to reappear naked on John's king size bed, both seemingly oblivious to the change of location. John was soon on top of Susan, his mighty cock at full staff, almost a foot long. Unintimidated, Susan smiled and asked, \"Are you going to fuck me with that club you call a cock?\"\n\n\"Yes,\" John said, \"and you're going to love every second of it. I'll make you cum like no man has ever made you come before.\"\n\n\"And what of my husband?\" Susan asked, growing accustomed to the sound of her accented voice.\n\n\"Who?\" John asked, clearly forgetting Susan was married to Jim. Not that it would have mattered, as this was definitely not normal behavior.\n\n\"Exactly!\" she said. \"Take me. I want to feel that big cock inside me. Make me feel safe.\"\n\nJohn wasted no more time, and pushed into her tight, wet tunnel while Susan squealed in delight. John touched her mind, making certain to keep his word. She was cumming and he'd not yet begun to fuck her. She was tight, but also very wet. He slid into her with little trouble and as he bottomed out, Susan shrieked louder. She wrapped her long dancer's legs around him and gripped his cock tightly, getting Johns attention. He pulled back, but he couldn't move until Susan eased her grip. John had never met a woman that could grip him that tightly.\n\nShe shouldn't be able to do that, Dr. Smith noted. Perhaps John didn't really try to pull back.\n\nJohn looked down on the temptress, her red hair fanned out behind her, her green eyes full of lust as he began to fuck her slowly. Each stroke sent ripples of pleasure through the woman. Four strokes later, she was cumming again and John increased his speed. Susan was moaning loudly now, he was right. She'd never cum this hard before, each time stronger than the last. John knew that he could go on like this for hours, as he loved the how much Susan was enjoying the fuck. He adjusted his speed, the size and thickness of his cock, like no man alive could. He played with her tits, sucking one nipple at a time into his mouth. She liked that and was coming again. \n\nFinally, he decided that she'd had enough and he was ready to cum. He was doing her from behind now, doggie style, holding onto her hips and really letting her have it. They switched positions again, back to missionary. Susan was moaning and yelling his name in that strange new accent that she'd acquired, which seemed for some reason to turn him on. Then with a mighty roar, he came, flooding her with rope after rope of his manly juices.\n\nJust as he stopped cumming and the room became quiet, something triggered inside Susan and the toxin was released. She gripped him tightly; \"I must hold him long enough for the toxins to enter.\"\n\nHe smiled, he was done. It had been a very satisfying fuck. Susan was looking up at him, concentration on her face. He tried to pull out, but Susan gripped him tightly and stared into the eyes. He tried to pull out again, but she didn't let go. He reduced his size as his cock began its natural shrinking process after ejaculating, but she still held on tightly, despite being slippery.\n\n\"You can let go now,\" Susan. \"We're done,\" John said half joking and he tugged again. He couldn't pull free. He looked at the woman lying beneath him, beginning to suspect something and tapped into her mind.\n\n\"Almost there, just a little while longer and you'll have absorbed all the toxin I have for you.\"\n\nJohn realized that it was a trap and he vanished, reappearing standing over and staring at the stunned woman.\n\nHe read her thoughts again. She was troubled, it hadn't been her idea, she'd simply been a tool. \"Oh no, I did it. I really did it. I did as they commanded me to. Will it really kill him? No, please no.\"\n\nJohn began to feel strange, almost sick, something he hadn't felt for years. \"Dad, dad...\"\n\n\"What is it Johnny?\"\n\nDr. Smith had been monitoring things, and only this second was receiving Susan's thoughts. \"Johnny!\"\n\n\"Dad, you have the conn,\" he said. Then John Smith seemed to mentally collapse within himself.\n\nHe buckled a bit as he took on the full weight of controlling his son's body, but managed to stand firm. Dr. Smith now had full control of John's body.\n\nHe was still imprisoned within in the ring, but it was if he were driving John's body, much as if he were driving a car, though it be from the back seat. He was controlling a two hundred twenty-pound, lean, muscular twenty-something man, who just happened to be the master of the ring of power.\n\n\"This is strange,\" Dr. Smith thought as he manipulated John's body, turning it slowly. To anyone watching, nothing would have looked out of place. He was a little clumsy, but since he was just poisoned, Dr. Smith thought it would pass. He turned back to Susan who was sitting up now, crying into her hands, yelling out an apology. Dr. Smith called out to his son over and over, but he didn't respond.\n\n\"What have you done?\" John asked the woman through his father's manipulation, a little more harshly than he intended. She didn't answer, just continued to weep. He read her mind, learning the covert plan. He even saw all the things they'd done to her. She wasn't at fault, but she'd need to be contained and scanned more deeply. But he didn't have time to do it himself.\n\n\"Chance. I need you,\" Dr. Smith thought.\n\nChance and the others were searching the mansion looking for Susan when he received the summons from his master. It was urgent. He changed his direction and ran towards the master suite.\n\n\"Maria, you and Penny stay with Jim. Carmen, you're with me.\"\n\nChance took the elevator to the third floor, impatiently waiting for the elevator to rise to the master level. He would have preferred to run up the stairs, but despite his impatience, this was the faster method.\n\nThey entered the master suite. Susan was still naked and crying into her hands again. John too was naked, pacing back and forth, not too steadily and not looking well, pale in fact.\n\n\"Master?\"\n\nJohn's body turned to face the giant. Looking at Chance, he spoke to him privately through telepathy. \"Chance, Susan was a trap. Through no fault of her own, she's attempted to kill me. She may yet succeed. Take her. Keep her secure.\"\n\nCarmen heard her master's voice in her mind. \"Carmen, your power to read minds has now been doubled. You need to scan Susan deeply to find out everything they did to her and learn if there's any more danger. Share what you learned with Chance, and only Chance.\"\n\nOnce Dr. Smith was sure they'd received and understood his instructions, John vanished, leaving his trusted agents to their mission. John materialized in the garage. By now, John had acquired a small fleet of vehicles. John stood motionless as Dr. Smith gathered as much information as he could. It appeared that John's body was still functioning perfectly, the question was, where was John's consciousness?\n\nHaving once been the Master of the Ring of Power, Dr. Smith knew that in times of crisis John needed to be where he would be the most powerful. If he were going to save his son's life, or consciousness, he'd need to significantly increase his reception of sexual energy. The best way would be through direct interaction. He would also call upon his agents who weren't currently engaged in some sort of sexual play to begin immediately and continue for the next several hours.\n\nJohn was going have to do some serious fucking and Dr. Smith knew just where to start. John appeared to come out of his trance and leaped behind the wheel of his 2017 Mercedes-Benz AMG SLC43 Roadster, started it up, and roared down the driveway into the streets of Mountain View California.\n\nIt wasn't long before he had arrived at the mansion he'd once called home. The gate still accepted his code, despite his being dead almost seven years. It was the master code; he'd programed the gate himself. There were a few cars in the courtyard; she had guests. He wondered if his code would still work on the door, not that it mattered. He was now, for all practical purposes, once again the Master of the Ring of Power. And he was much more powerful than he'd ever been. John's network of well over two hundred agents dwarfed his meager few dozen. He was in possession of the other four rings, further magnifying his power. Why bother with a code?\n\nWith that thought in his mind, Dr. Smith, controlling his son's body, merely walked through the door as if it wasn't there. He heard faint noises coming from what he guessed was the drawing room. He walked through the huge home, surprised to see that not much had changed. On Johns many trips here, he'd never really looked around, simply a passenger along for the ride, but now he was the driver.\n\nAs he grew nearer, he heard the unmistakable sounds of a woman in the throes of passion. He was surprised to see two naked women assisting a third as she rode some sort of mechanical sex toy. He realized he knew most of the women, Jenny, Vicky and of course his widow Jacquelyn. He smiled. This was just what he needed, that is what John needed. He called out to his son again, but there was no answer.\n\nJohn paused and watched as the unknown woman who had obviously just come was being helped off the machine. Her pussy lips were enlarged and dripping, her nipples hard. She panted as they laid her off to the side. She had a silly grin on her face, as if she'd never come that hard before in her life. Dr. Smith could feel the sexual energy being absorbed, but John needed direct infusion he'd only get from fucking.\n\nJohn stepped forward into the room, alarming the naked women who would have run and covered their naked bodies, but Dr. Smith used John's control to calm them and accept him as part of his widow's many surprises of the night.\n\nJacquelyn, recognizing her stepson, jumped to her feet and all but ran into his arms. \"John,\" she said as she fit comfortably into his embrace and kissed him deeply while the others watched and waited for an introduction that seemed as if it might never come.\n\nOut of breath, she somehow found the words to ask, \"What are you doing here?\" It was soft enough that only he could hear as Jacquelyn's lips were at his ear.\n\n\"Querida, I came here to see you. But I see you have company, so it looks like you'll have to share.\"\n\nPuzzled by his reply, Jacquelyn wanted to react to the use of her nickname. The nickname that only her husband called her. It was their private joke. It was also the name that the fictional Gomez Addams called his wife Morticia. How did John know to call her that? She pondered for a moment. She was just getting used to him calling her Jackie.\n\n\"Good evening ladies,\" John said as he walked into the center of the room, suddenly as naked as they were, swinging a sizable cock between his legs. Despite being tired from all the sex play of the day, they were suddenly rejuvenated and very much aroused. They all stood around the young virile man, as Jacquelyn slipped back into his arms, attempting to take control once again. But Dr. Smith wasn't going to have it. He pulled her along with him while he studied the women as they formed a semi-circle, waiting for his approval.\n\n\"I know you two,\" he said to Jenny and Vicky as he walked up to each of them, letting go of Jacquelyn and kissing each one passionately while he fondled their tits and ass. He had the others squirming and dripping as they awaited their turn.\n\n\"Is that Gale Farnsworth?\" he asked. Gale blushed, turning her chest and half of her large breasts deep pink. She'd never seen this young man before, but she didn't care. He walked over to her and gave her some of the same treatment, only lifting her slightly sagging breasts and squeezing them before pushing his middle finger into the very wet opening between her legs, and then moving on.\n\n\"And who have we here?\" John looked at where Betty Sue Weaver and Leah Scott were standing. They were a contrast. Leah's athletic long body and small tits and Betty Sue's shorter body and oversized breasts for a woman of her height. Dr. Smith had John play with each for a while before announcing that they were about to learn the difference between man and machine.\n\nEach woman nearly swooned upon hearing John's words. They marveled as they watched his cock slowly begin to expand and rise to almost ten inches of thick, hard manhood. He told them that they would need to stay hydrated and that there was plenty of water sitting on the counter, but they were going to cum as they'd never come before.\n\nAs if on cue, Betty Sue and Leah dropped to their knees and together began to lick and suck on John's cock, each wrapping an arm around his leg. Vicky and Jenny helped him recline and took turns kissing him and suckling his nipples. This left Jacquelyn and Gale to curl into a sixty-nine, for reasons they couldn't explain if asked.\n\nThen one by one, John fucked each of the women who came several times. While the women waited their turn, they got each other ready by sucking and fondling each other. Two hours had passed before John had fucked each of the women. They were all very satisfied, but John hadn't come yet. He announced that it had been so much fun that he wanted to do it again. This time he came in each one and they then spent the rest of their time cleaning up the others with their tongues, amazed at how much the taste reminded them each of butterscotch.\n\nAlthough Dr. Smith enjoyed fucking Vicky and Jenny again, it was like watching porn. He wasn't actually getting off himself. He was controlling John, but he couldn't really feel what John was feeling. He could probably fix that, but he was, after all, still in prison. He called out to John several more times and with each woman, telling his son how much fun he was having fucking these women. He still got no response.\n\nHe was about done. It was early the next morning, and in spite of John's hold on the women, they were beginning to show signs of fatigue. Dr. Smith decided to finish with his widow. Jacquelyn couldn't explain what she was feeling; it was almost as if John was channeling her late husband Zachary. Once again, he was fucking her, her legs wrapped tightly around his body and she was cumming again. She seemed to be cumming constantly. \"How is this even possible?\" she thought. \n\n\"My Gawd, John,\" she moaned. \"How can you keep fucking me like this? Aren't you getting tired?\" And she squealed again as she looked at the others laying watching as they casually caressed and licked each other, trying to keep the orgy going.\n\n\"Querida, it's the effect you have on me.\"\n\n\"There it is again,\" she said. \"How did you know your father called me that? And why are you calling me that, I kinda like you calling me Jackie.\"\n\n\"Okay, Jackie if you prefer.\"\n\n\"What's wrong with you,\" Jacquelyn scolded herself. \"I don't like Jackie, no one calls me Jackie. I only let you get away with it...because...\" She paused trying to catch her breath and then said, \"I shouldn't have to remind you of this,\" she said between grunts.\n\nDr. Smith thought to himself, \"So, she's beginning to get suspicious. Not a problem. She just needs to have the mother of all climaxes.\"\n\n\"Oh, oh...mmmy gawd!\" she screamed, panting as John continued to slam into her, finally coming himself. He pulled out of Jacquelyn as she rolled back and forth, the aftermath of her violent orgasm subsiding.\n\n\"Ladies, it's been fun, but it's almost six AM and I have some things to do today. I hope to see you all again soon. Don't get up. I'll see myself out.\"\n\nWith that said, John walked out of the mansion almost as quickly as he'd arrived.\n\nLeah groaned and cried out to no one in particular, \"I'm going to have to call in sick, I can't go to work today. I don't know if I can walk.\"\n\nSpeeding down the two-lane road from the mansion, Dr. Smith had John pull over to the curb. Rush hour traffic was beginning. He called out to his son. No answer. \"Irony is something,\" he said, hoping that his son could hear him. \"A few years ago, I would have killed to be in control of this body. But now, I only want you back, son. I'll get out of this prison of my own making some day. I will ascend, as Rocky did. But, Johnny you have to come back.\"\n\nDr. Smith waited, but there was no answer. There was only one place left for him to go. John checked his mirrors, signaled, and pulled away from the curb. He phased the car into phantom mode and drove quickly through the stalled traffic. Within ten minutes, he was pulling into the driveway of Mary Smith, John's mother, and Dr. Smith's former mistress.",
        "Mary was sitting in her favorite spot in the kitchen, drinking coffee, watching the sunrise over the mountain when John entered the kitchen. She had only just returned home thirty minutes ago, following orders to fuck more as there was an urgent need. \"Hey mom,\" Dr. Smith said in John's voice. He wished now that he'd paid more attention to their conversations; he didn't want to screw things up, not that he couldn't fix them.\n\n\"Johnny!\" his mother said, jumping up from the table where she sat naked. She was almost always naked now. She had always adored being nude, but since she'd become one of her son's agents, she never wore clothing at home. She grabbed her son and held him tightly. \"I thought you'd forgotten about your old mother.\" She wanted to ask if everything was okay, but fought her curiosity. \"He'd tell her if he wanted her to know.\"\n\nOf course, like most of his agents, Mary looked nothing close to her real age, thanks to John. She appeared to be a woman in her early thirties, nowhere close to the pushing sixty like her classmates.\n\n\"Are you going to make love to your mother, honey? Mark is sweet, but he's not you.\"\n\nDr. Smith smiled. How did he forget that John was fucking his mother, too? John was the Master of the Ring of Power, Dr. Smith laughed to himself. He's fucking everyone, at one time or another.\n\n\"Sure, mom, I'd love to,\" Other than April, his mother was the only one with whom he could be himself, but this was Dr. Smith manipulating John's body. He'd have to be careful.\n\nIn a flash, John was naked. His mother marveled at her son's physique and commented, \"That never gets old.\" They took each other's hands and walked into her bedroom. They kissed and made love. It was slow and deliberate. Like all of John's agents, she wasn't immune to his magnetism, it continued to grow. She was thrilled to be with him again. They didn't talk much, but she knew her son was troubled. She tried to reassure him that he was a good man and whatever was troubling him, he'd figure things out. He always did.\n\nDr. Smith hoped that John was hearing her. He recorded it and would play it back for him later. It was so strange to be in the driver's seat and making love to his mistress again even if he didn't really feel anything.\n\nIt was almost noon. They ate a light lunch, and then John left. Mary had a few errands to run before meeting one of her regulars for an early dinner. It was strange, Dr. Smith thought. John was in a sense whoring his mother out so that he could be the master of the ring. Of course, there was much more to the story than that. Dr. Smith began to feel ashamed, it was, after all, his doing all those many years ago, and it was he that had bequeathed the ring to his son. This had never happened before in the ring's long history. Despite appearances, Dr. Smith was an accomplished negotiator. He managed that while he negotiated his punishment. He wondered now if he had done his son a favor or cursed him.\n\n~~~\n\n\"Wake up, John Smith, Master of the Ring of Power!\" John slowly opened his eyes and found himself staring into a wall of multicolored sparkling light of every color he could imagine. It was beautiful, he thought.\n\n\"Thank you,\" was the response.\n\nSlowly, as John became more aware, the wall seemed to back away and he recognized a pattern. They weren't just lights but gems, precious gems, diamonds, emeralds, rubies and sapphires, and they created their own light.\n\n\"Oh, my God.\" It was the ring. He was standing before the Ring of Power itself.\n\n\"Am I dead?\"\n\n\"No, John Smith, far from it.\"\n\n\"Then, where am I?\"\n\n\"Try and think of it as another dimension. One where we can talk, face to face, if you will,\" the ring stated. \"It is true that you should be dead, but you are one of the cleverest masters ever to possess the Ring of Power. Because of this, we couldn't allow you to die.\"\n\n\"What do you mean?\"\n\nAnother voice spoke up, \"As you know, John Smith, the rings you captured must be returned to the world. You can and should alter them; they've been corrupted over time. But you alone can recall them from their hiding place. A hiding place that isn't stable and is ever changing. Yes, you are very clever indeed.\"\n\nA third voice entered the conversation, \"But the sins of the father...he should be made to pay.\"\n\n\"What about the sins of my father?\"\n\nThe first voice spoke. \"He's reformed. Even now, he is driving your body around attempting to save you the only way he knows how. Even though he has the power to escape and become the master of the ring once again, by simply claiming his son's body as his own. But he has not and will not.\"\n\n\"Dr. Zachary Smith was a clever man, too,\" the third voice continued, sounding annoyed that he had been interrupted. \"He was one of the first to discover that we are, as you would say, sentient.\" There was a brief chuckle from the other two voices.\n\n\"He thought to deceive us and drain our power for his own purposes, but of course, we couldn't allow that. He experimented on his own daughters, your sisters, resulting in the way you found them, androgynous. He was attempting to change their sex and for what corrupt purposes we'll never understand. As you know, he was imprisoned for his crimes. You are his son, and though you've committed no crimes, you should be allowed to die.\"\n\nThe other two voices chuckled again, and then the first voice spoke, \"But of course he's forgetting several important matters. John Smith, you have been a very wise master. Weighing your actions carefully and taking care to do good deeds to balance your power, erring on the side of good. You've had a few painful lessons, but you learn from your mistakes. Recapturing the four other rings in and of itself makes you one of the greatest masters of all time. That feat had only once been accomplished until now. Like you, he too was young. His legacy has been that of being the greatest. Like young Alexander, will you too stand the test of time, John Smith?\"\n\n\"Wait a minute, are you telling me that Alexander the Great was once the Master of the Ring of Power?\" John asked, already knowing the answer. \"You are comparing me to him?\" John asked.\n\nThere was no response to his question as it hung in the air.\n\n\"There is the matter of retrieving the rings from your hiding place. Only you, John Smith, can do that.\"\n\nThe third voice conceded, \"Perhaps we should let John Smith live? He has proven himself worthy.\"\n\n\"It is unanimous. John Smith, you will be returned to your body and take control. You've a lot of work ahead. We will be watching.\"\n\n\"Just a minute,\" John said before he was returned to his dimension, \"Are you God?\"\n\nThe three voices chuckled again. \"No John Smith, we are not GOD. We kind of work for him.\" Then there was nothing.\n\n~~~\n\nHaving visited all the women on his list of priorities, except Candace, Dr. Smith knew there was only one woman, if any, that could bring his son back. She was, of course, April. She was back at the mansion, hopefully unaware that anything was wrong.\n\nHe wasted no time. After securing the car in the garage, he manifested in the bathroom as April soaked in the tub. She realized that her fianc\u00e9 had returned.\n\n\"Hey you,\" she said.\n\n\"Hey Apes, how have you been?\"\n\nShe noticed it immediately. That wasn't their usual greeting. Something was wrong. She quickly rose from the tub, water pouring off her gorgeous twenty-something body. Dr. Smith watched through John's eyes as water trickled down from her shoulders unto her magnificent breasts and over her hard nipples. Where her legs met, John gazed absentmindedly upon her equally beautiful slit, as if seeing her for the first time. Dr. Smith realized how truly beautiful she was, not just in appearance but April in her entirety. She was truly a beautiful person, no wonder John loved her. \n\n\"Would you please hand me a towel?\" she asked.\n\nJohn quickly responded, Dr. Smith having gained great acuity with John's motor reflexes. He handed the naked woman the towel as he gazed upon her, admiring her beauty.\n\n\"Thank you,\" she said sweetly. \"Now tell me what's the matter?\"\n\nDr. Smith cringed. How did she know? He took a light probe of her thoughts.\n\n\"And don't do that mind reading trick on me, John Smith. What's going on?\"\n\nDr. Smith was afraid that he'd have to confess to her. He couldn't lie. John wouldn't want him to. What if he was gone for good? He'd have to take control. He'd let her out of the agreement to marry of course, though he couldn't think of baring such a loss. He was becoming emotional.\n\n\"Thanks dad, I'll take it from here,\" John said as he returned to his mind. \"I relieve you.\"\n\n\"I am relieved,\" Dr. Smith said as they mimicked the naval officers' change of command mantra.\n\nStill standing in the tub, April called at her fianc\u00e9 as it appeared that he'd lost focus and was simply staring at her. \"Hey you!\" she said, sounding almost annoyed.\n\n\"Hey you yourself,\" John said. Suddenly, he was naked standing in the tub in front of her.\n\nShe relaxed and as they embraced. They kissed more passionately than ever before. When the kiss was broken, almost by simultaneous mutual agreement, John asked about her day and what she had planned.\n\n\"Well, Mister Smith, your charitable businesses don't run themselves. I've a pretty busy day planned. I don't have time for...\"\n\nBefore she could complete the sentence, they were dried and lying in a fresh bed, just the sheets covering their legs.\n\n\"No, Johnny,\" she giggled as he began to play with her sensuous girly parts. \"I'll be late for my meeting. Besides, until you give me the power to clean myself like you do, hint-hint nod nod, it will take me another hour to get ready.\"\n\n\"Consider it done,\" John said. \"Now will you give a guy a break?\"\n\nThey made passionate love for about thirty minutes before April flew up over the bed and did John's refresh thing. In a flash, she was cleaned and smelling fresh. There was a long pause and nothing happened. Then, after reading her mind, John smiled and April was dressed as she had planned; her hair was perfect. She lightly landed on the bed. In another instant, John disappeared, only to reappear clean and attired for the day. April kissed him then flew away, still worried that she'd be late for her meeting.\n\n\"Johnny, it's good to have you back son!\" Dr. Smith said, more cheerful than he could remember ever hearing his father.\n\n\"Thanks, dad. I see that you've been busy,\" John stated as he took inventory and images from the last several hours became integrated in his memory. \"What was that like for you to have sex with Jackie again?\"\n\nDr. Smith chuckled, \"I didn't have sex with Jackie, you did,\" he laughed some more, \"but to be honest, it was like having sex with a thick condom on. I didn't feel much of anything. I realize that I could have fixed that. Hell, I was controlling your body. But for some reason that didn't matter. I wanted to have as much sex as possible, thinking that is what your body needed, what you needed.\"\n\n\"And with mom?\"\n\n\"That was special. It was far more emotional and tender, but like watching a romantic movie. And it was fun,\" he laughed again. \"By the way, where were you or did you simply lose consciousness?\"\n\nJohn told his dad about his experience. When he was done, Dr. Smith asked, \"So, you met the quartet?\"\n\n\"No,\" John said slowly for effect, \"I only heard or experienced three voices or personalities.\"\n\n\"Only three?\" Dr. Smith said. \"They must really like you. Number four is more like the punisher. You want to avoid meeting him, if you can.\"\n\n\"Dad, one thing puzzles me. Don't take this the wrong way, but you could have made off with my body, broken out of the prison and have been the Master of the Ring of Power once again. Why didn't you?\"\n\n\"Johnny, I never said this enough, particularly when I was in my own body, but son I love you. The old me would have done just as you said, but you trusted me. I broke that trust once; I will never do that again or take your trust for granted.\"\n\nThe two men envisioned themselves in a father and son embrace, and they were. It was more emotional than either of them would have imagined. It took John back to some of his long-lost childhood memories that had been suppressed.\n\n\"There are things you need to attend to, son. I will be here later,\" Dr. Smith said and the visual faded slowly. In all the time that Dr. Smith had been mentoring John, he'd never seen a visual of his father. It was only his voice and the secure knowledge that it was his father. This contact he had seen his father's face. It was an older version of the face he'd remembered from his childhood. His hair was salt and pepper, but he had a full head of hair, and a few wrinkles he didn't remember him having. It was a pleasant sensation and it made John feel good.\n\nHe trotted down the stairs to find a worried Chance and Carmen seated at the table having their second cup of coffee. Seeing John, they both stood, bracing themselves for a jolt.\n\n\"Hey guys, you look worried. Is everything okay?\"\n\nIndividually through his telepathy, John assured each of them that he was fine and unless they had news for him, there was nothing alarming from him. He watched them both as their bodies relaxed.\n\nChance explained what they had learned from the deep mental probes Carmen performed on Susan. It was most of what John already knew. She was an unwilling victim and tool used by the twins for their revenge. Once the trap was sprung she reverted to herself, minus the alluring personality, accent, appearance and a twat strong enough to crack walnuts.\n\nJohn assured them he would fix all of that, changing Susan back as much as she desired. He considered briefly what to do about Jim, but made no definite decisions. He asked about the woman/man and former servant to the twins. Chance explained that he/she was very helpful and he might consider finding a position for him/her in his organization. They all laughed, since no one bothered to ask or remember her/his name.\n\nJohn checked in on Jim and Susan. John still found Susan extremely appealing; of course, she'd been altered to turn him on. For her part, she too was becoming wet as their eyes met, but was extremely relieved to see him alive and unharmed.\n\nJohn laughed aloud and then caught himself finding Susan's new accent amusing, particularly once he read her mind and learned her-self talk was minus the accent and how annoyed she was at the sound of her voice. When asked if she wanted to be changed back, she didn't hesitate and John made the change immediately, while rewarding her by taking several years off, which firmed her muscles and tissues. He rewarded Jim similarly. They were allowed to return to their lives, but would be bound to John for life, should he need them. They thanked him and left immediately, calling an Uber after making flight arrangements from their mobile phones.\n\nSummoning Penny, Chance, and Elizabeth, he told them to meet him for an early dinner at an expensive restaurant in downtown Mountain View. They arrived together, without a clue as to the reason, and were taken to a private room where John and April were waiting, catching them in a passionate kiss.\n\n\"Hey why don't you two get a room?\" Chance teased. \"Other than this one.\"\n\nThey all enjoyed a fabulous meal, the food just kept coming and the wine and alcohol was plentiful. Everyone had a great time telling stories, laughing, and enjoying each other's company. When it looked as if things were winding down, John got everyone's attention and began to tell them why he'd asked then to dinner. \n\n\"As you all know, I now have in my possession all of the rings, but I can't keep them. They belong in the world so I must redistribute them. You are here because each one of you will be given one of the rings.\" He looked at April when he said that so that she would know that she was included.\n\nThey were all speechless. So, John continued.\n\n\"The rings have been corrupted over the years. I will fix that, rename them, and award one each to you. You will become masters and mistresses of that ring with all the powers and privileges that come with it.\"\n\nThey were still in shock. Some still had their mouths slightly opened, so John continued.\n\n\"I will put limitations on the rings; they will submit to me and be tied to me as long as I wear the ring of power. You will be released from your quotas, but your power will flow through me. In a sense, I will have a sort of veto power over your rings and you, but you will have a great deal of autonomy. You will need to balance your power by making sure to do good to offset any bad or questionable actions, lest the ring cease to perform. There will be a ceremony in a week, immediately following our wedding,\" John said as he turned to April again. \"Now would somebody please say something!\"\n\nThey all started talking at once, full of questions and asking about limits to their powers, obviously extremely happy and excited.\n\nChance finally asked, \"Why me?\" before reminding John that when they first met, he had tried to kill him.\n\nJohn explained that he wanted to repay loyalty. Elizabeth and Chance had been there from the beginning. Penny, though new, was something special, and he wanted to reward that. April was his beloved since childhood. He ended the discussion saying they would know more at the ceremony.\n\nAs it was time to leave, John sharpened their alertness, without taking away the pleasant buzz they'd gotten from the consumption of their drinks. They wouldn't be any worse a driver than normal, though Chance had a bit of lead foot. Should they be pulled over, they could all handle themselves. Then they said their good-byes and left the restaurant in high spirits.\n\nApril pulled John in for another kiss and then said, \"That's some wedding present you're planning for me, mister.\"\n\n\"I hope that it is, and not a burden,\" John admitted.\n\n~~~\n\nIt was a warm spring day in Mountain View. The last of three storms had just passed and California had finally gotten much-needed rain, breaking the six-year drought. The mountains were covered in snow, contrasting with the green and colorful flowers blooming everywhere the eye could see. The temperatures would be in the high seventies, making the outdoor wedding and reception in the mansion's sprawling secluded grounds the perfect setting. Clothing was optional, causing all those who weren't part of Johns agent corps to tenaciously diet and exercise in order to look their best naked. A few even resorted to cosmetic improvements, after the date was announced.\n\nAs usual, John had seen to every detail of the security, the uninvited wedding crashers would be disappointed, but left with a memorable skin rash from the attempt.\n\nAs John looked out at the naked guests and agents mingling about the grounds, he reminisced to the days when he first learned to use his powers. He was just eighteen and as a result had a teenager's limited appreciation of the female form. He could have had any woman he wanted and his focus was stuck on big tits and asses.\n\nHe looked out at his agents, most of whom were women, admiring the rainbow of colors and diverse body types. He had finally learned to appreciate women in all their assorted body types and forms. What he finally learned was that all women were beautiful, but it was their minds more than their bodies that made it so.\n\nIf a woman lacked confidence and didn't think of herself as beautiful, then she wasn't. He chuckled to himself as he admired a pair of beauties who had just arrived and were exchanging hugs, they both would be considered small breasted, A-cups at best, and they were stunning. He wouldn't have thought that back then.\n\nMost of the men were in pretty good shape, while others looked like they were models for a variety of men's products. Several of them were unable hide their enthusiasm, displaying their excitement at being in the midst of all the beautiful, naked women. Jackie and his sisters were there, naked of course. He'd invited all the women from Jackie's little party he had crashed. If they were there, he hadn't seen them yet.",
        "It was soon time for the guests to take their seats. It was still early and the sun had yet to reach its apex, nevertheless most of the guests had taken advantage and covered themselves in copious amounts of sunscreen. The organ began to play and the bridesmaids and groomsmen processed up the wide aisle that split the two sections of folding chairs and then stood in front facing the guests. One by one, in pairs, they stationed themselves at six points along the aisle. Once all were in place they met in the middle and began to kiss and fondle each other. The nearly two hundred naked and partly dressed guests were stunned, watching as their own arousal began to peak. When the wedding march began, they quickly separated, stepping back to make room for the bride to enter. Each groomsman stood at attention, his large cock hard and pointing to the sky, while the bridesmaids firm breasts showed erect nipples and their mons absent of any hair and labia enlarged, all young twenty-somethings and gorgeous.\n\nThe bride entered, wearing a translucent wedding dress that clung to her body with a long train and veil. She was radiant. April smiled as she walked up the aisle, her maid of honor holding the ends of her long train. She was blushing a bright pink. She was one of April's high school girlfriends. They'd made a commitment to be there for each other on such an occasion. She had never been naked in public, until now. Her hard pink nipples ached. She'd have sworn everyone could hear her throbbing heart and the squishing of her pussy with each step she took. She tried not to swoon as she followed her girlfriend up the aisle; she couldn't help but notice the erect large cocks, secretly hoping to have one of them to herself.\n\nAs April began her march up the aisle, every head turned, and every cock grew hard and stiff in salute. Even those of the gay men in attendance, causing their owners, if only for a second, to question their orientation. Gleaming from between her legs, April's diamond sparkled as if it were creating its own light.\n\nTo say that April made a stunningly beautiful bride would have been an understatement. Every woman there wanted to be her, as they looked upon her beauty. Even those that knew her were hoping to catch her eye as she slowly moved towards the front of the makeshift altar, so that they could be a greater part of this moment.\n\nApril kept facing forward, a small smile on her pretty lips, yet allowing her eyes to look at the assembled audience. She couldn't believe that her childhood dream was coming true; she was about to become the wife of John Smith, her beloved Johnny.\n\nReaching the front, she turned to face the gathered. Candace (April's mother) stepped forward, looking almost as beautiful naked as her daughter, and lifted the veil from her face as her maid of honor bent down to arrange the train of the diaphanous dress, unknowingly completely exposing herself in the process. It wasn't until she felt the warm spring breeze that she realized what she'd done. Candace kissed her daughter on the cheek and returned to her seat, her own diamond catching the sunlight as she sat next to Mary Smith, John's mother. Mary took Candace's hand and squeezed it gently.\n\nThat seemed to be John's cue as he and his best man Mark Taylor, and John's best and childhood friends stepped onto the altar. John wore a collar with a bowtie, cuffs on his wrists, complete with cufflinks but was otherwise naked. His impressive physique looked like a combination of a world-class swimmer, bodybuilder, and NFL linebacker. His abs were the fantasies of most men, while his powerful arms and legs looked to be in perfect proportion. Swinging between his mighty naked thighs hung his semi erect cock, making the women damp and many of the men envious. Mark looked impressive too, a smaller bronze version of the groom.\n\nIt was Mary's turn to greet her son. She stood slowly, impressing the crowd with her beauty. Like Candace, she was stunning, her diamond glistening in the sunlight, though she too paled in comparison to the bride. She stepped forward, hugged her son, kissed him on the lips quickly, and returned to her seat.\n\nThe minister entered wearing only his collar, a smile, and an erection. He said a few words about the bride and groom, and commented on the wedding party before beginning the ceremony.\n\nAs things began, John and April gazed lovingly into each other's eyes, April heard Johns voice in her mind. \"Hey you!\" he said. \n\n\"Hey you, yourself,\" she replied.\n\nBefore they could say more, it was time for the vows, and commitment, and the pronunciation. When the minister said, \"You may kiss the bride,\" John stepped forward, his cock now fully erect, almost twelve inches long, and they kissed. Their bodies met and they rubbed against each other. John lowered himself slightly and April rose to her toes as she accepted John into her tight, wet tunnel.\n\n\"I love you, April,\" John said mentally to her as she repeated those words back to him. \"As part of my gift to you, we now share this mental telepathy. We can talk to each other privately. The range is several miles.\"\n\nJohn stroked into her a few times as they kissed, and pulled out when they broke the kiss. Mark announced, \"Ladies and Gentlemen, please greet Mr. and Mrs. John Smith.\"\n\nThe assembled got to their feet and cheered. There wasn't a dry eye or pussy in the place. Nipples and cocks were hard and the audience were anticipating the reception and getting relief from the pent up sexual tension. Most were unaware of the ring ceremony still ahead. \n\nMark announced there would be a brief five-minute intermission, and that despite their urges, they should refrain from any satisfaction of those needs for now. It would be worth the wait. Nevertheless, several men and women couldn't contain their enthusiasm and either broke away from the main group or simply bent or knelt to satisfy each other, only to learn that they couldn't cum and that it made matters worse. They were frantic when called back to order.\n\nAs Mark returned to the center of the altar, now turned into a stage, he announced the final ceremony. The distributions of rings. He could hear questions murmuring among the guests.\n\nJohn came out and faced his guests. \"Most of you won't remember this,\" he said, \"because only my agents would as the rest will have foggy and selective memories of events. But to my agents and employees I am doing more than marrying my beloved April today. I am rewarding loyalty. Some of you may have noticed that there was no exchange of rings during the wedding ceremony. I will correct that now.\"\n\nHe paused for effect and then asked, \"Would my beautiful wife, April Smith, please come forward?\"\n\nApril joined him on stage, still in her beautiful see-through wedding dress, minus the long train, but still reaching the ground. \"In addition to being my wife, April will also be known as the Mistress of the Ring of Chastity.\" From out of thin air, John held up one of the most beautiful rings anyone had ever seen and placed it on her ring finger. April felt a surge of power and energy swell through her body. Her pussy moistened as if she were about to cum, her nipples hardened and she felt as though she would collapse, then just as suddenly, she felt her strength return doubling, tripling and she smiled. She was the Mistress of the Ring of Chastity.\n\nShe immediately realized what it meant. Not that she had to be chaste as in having no sexual relations outside of with her husband, but that it meant morality, the concern with the distinction between good and evil or right and wrong; right or good conduct. It also meant purity, knowledge, honesty, and wisdom. Those things, in addition to sexual energy, would power the ring and her power. Everyone stood and cheered. April took a seat on the tall stool behind her, smiling proudly at the second honor bestowed on her.\n\n\"Chance Goodwin, please join us on the stage.\" From the back of the audience the large, black man stood, towering over the nearest people at his full height of six feet eight inches. His head now shaven, his beard trimmed to a neat goatee, he walked with purpose, his large cock swinging between his legs. He looked like a bodybuilder; every muscle had been developed to perfection. He greeted John with a smile and the two men embraced.\n\n\"When I first met Chance, he attempted to kill me. But as you can see, we're like brothers. He's been very loyal to me and will be henceforth be known as the Master of the Ring of Diligence,\" John said as the ring appeared in his hand and John put it on the giant's left ring finger. Like April, Chance felt the immediate surge of power, doubling and then tripling his strength. Chance understood the meaning of his ring, persistence, fortitude, effort, ethics, and rectitude were his ring's dominant traits. After the cheering died down, Chance took a seat next to April.\n\nNext, John called up Elizabeth Brooks. Most knew that she had been John's second in command. Elizabeth looked as stunning as always. Her caramel coloring gave her an exotic look and her flowing black ringlets fell down her back, occasionally falling over her large jiggling breasts. Her new height gave her body an amazon quality that she and John both admired. John told the audience a funny anecdote about their relationship, that had everyone laughing and Elizabeth blushing. Then he got serious and explained how he'd never have been able to grow his corps to its present size without her help. He placed the ring on her finger and announced to all gathered that she was the Mistress of the Ring of Temperance, meaning humanity, justice, honor, and abstinence. Elizabeth almost choked when she heard the last virtue. Then, she, like the others, realized that it was just like her. Although she was extremely enthusiastic when it came to sex, she had an amazing amount of self-control.\n\nLast but not least, John introduced Penny Jones. He didn't go into a lot of history but said that Penny seemed destined to become the Mistress of the Ring of Kindness. Its dominant traits included satisfaction, loyalty, compassion and integrity, all traits that described Penny perfectly. After her individual applause, John had everyone stand once more to a roaring ovation. It was only exceeded in volume when John announced that the formal ceremonies were complete and that guests were free to roam the mansion grounds and enjoy each other's company as they wished. \n\nIt wasn't long before more than a few screams of ecstasy were heard, as anxious guests quickly relieved each other orally. The orgy had official begun.\n\nJohn and April embraced again, his cock sliding into his bride's wet pussy once more as if of its own accord.\n\nCandace kissed her new son-in-law as he and April were mobbed. \"Do you want some alone time,\" John asked his bride.\n\n\"Hmmm.... that would be nice, your cock feels extra-long and hard right now. Do you mind?\" she asked her husband telepathically.\n\n\"Not at all,\" John announced that they would be back in few minutes and then they simply vanished, only to materialize in their master suite where they continued their lovemaking as husband and wife for the first time.\n\nBack at the orgy, food and drink flowed freely as the guests took full advantage of the situation. The bashful maid of honor soon found herself being the center of triple penetration as she took on three hard cocks, making her airtight, another first for her. Almost all of John's agents were present and mingling, hoping to knock out a full month of quota in the process.\n\nWith the exception of April, the new master and mistresses of the rings held audience, showing off their new powers they were still just beginning to understand.\n\nFor many of John's guests it was a first to be out of their clothes in public. In fact, most didn't understand why they'd even agreed to attend. These guests would have no memory of the wedding details other than they had attended without their clothing. As far as the orgy was concerned, no one would do anything they didn't want to do, except that their libidos were highly increased and they'd be easily susceptible and led into participating.\n\nThe orgy was in full swing by the time Mr. and Mrs. Smith returned. Everyone was having a good time. John was surprised to learn that his sisters had all brought dates and all of Jackie's friends had attended. The guests had dwindled down to less than a hundred by the time that dinner was served. John had fucked the giggling maid of honor and as the sun began to set, the party was brought indoors.\n\nIt was late when the last of the guests had left or settled down with a partner to sleep off the day's events. Naked bodies lay motionless all through the mansion except for the areas that were off limits.\n\nMr. and Mrs. Smith, having fucked all day and night, were exhausted but pleased to finally be married. John was pleased that he'd made the right choice. Dr. Smith even took time away from his many projects to consider the events with pride. He had given his son a great gift, but it was no greater than the gift his son had given him.\n\n*\n\nThis is the end of this series. The characters will return under another title. Thank you for your loyal readership. I appreciate your comments. Yes, I've considered going back through some of the earlier chapters and giving them a makeover. "
    ],
    "authorname": "Absolutelywickedthoughts",
    "tags": [
        "magic ring",
        "supernatural"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-gift-from-his-father-ch-31"
}