{
    "title": "The Honey Trap",
    "pages": [
        "You can learn a lot about someone by playing tennis with them. Generally I've found that guys who are gentlemen on the tennis court are also gentlemen in their off-court lives. Conversely, I watched a guy display the worst sportsmanship I'd ever seen while playing his best friend. It was no surprise to me later on when the guy abandoned his family and ran off with another man's wife.\n\nAnd then there's Frank Calhoun. Frank is a big guy; in fact, he played football at Georgia Tech until he blew out his knee. Once the orthopedic surgeon had repaired it, Frank switched to tennis. But he plays tennis like a football player, hitting booming serves and blasting away at the net man from the baseline.\n\nBut I can beat him. I like to come to the net and put pressure on him to hit it by me. As often as not, he'll overhit and bounce the ball off the back fence. And don't get me started on his line calls. Let's just say that the benefit of the doubt always goes his way when he's making the call.\n\nAs a result, Frank always wants to play me. He just can't stand losing to \"a little guy.\" Now I'm not little, I'm actually six feet tall. But I'm pretty lean and wiry, which makes me little compared to Frank, who's three inches taller and seventy-five pounds heavier than me.\n\nNot surprisingly, I don't really care to play with Frank, but he's hard to avoid because we both live in the Eden Pointe subdivision north of Atlanta. Since Atlanta is such a big tennis town, our subdivision was built around a clubhouse with a pool and lots of tennis courts. With so many people playing on teams in the Atlanta Lawn Tennis Association league, it's pretty hard to avoid someone like Frank.\n\nBut the good news is that I also get to play with a lot of really nice people -- like my mixed doubles partner, Penny Pennington. I met Penny through my wife, Melanie. Melanie is a Pilates instructor, and a lot of people who live in Eden Pointe take classes at her studio, including Penny. Unfortunately for me, Melanie doesn't care for tennis, but when she learned that Penny was looking for a partner, she introduced me, and Penny and I have been playing together for about a year now.\n\nThe club we were playing in today's match was all the way over in Stone Mountain, so I had offered to drive Penny to save gas. Given the way traffic builds up on a Saturday afternoon, we gave ourselves forty-five minutes to get there.\n\nAs she emerged from her front door, I wondered yet again why Penny was still single. Part of it was that she'd lost her husband in an automobile accident three years ago. After lengthy mourning period, one of the ways she'd coped with her grief was to join Melanie's Pilates class. Another way was to get back into tennis, which she'd played in high school. The result of all that physical activity was a fit, trim dark-haired woman in her early thirties. I would have expected a woman as pretty as Penny to draw suitors like flies to honey. But she kept telling Melanie that she just hadn't found the right man.\n\n\"Hey, Penny,\" I greeted her when she opened my car door, \"are you ready to get 'em today?\"\n\nShe grinned at me. \"You bet, Michael. I've been looking forward to a rematch with these guys for a long time.\"\n\nWe were talking about our strategy for the match as I pulled out onto I285, but I was interrupted by the ringing of my cellphone. \"Hi, Robert. You're kidding! No, it's perfect here. Damn. OK, we'll reschedule.\" \n\nPenny looked at me quizzically as I took the next exit and began heading back home. \"That was our opponent,\" I told her. \"He told me that a rainstorm just passed through and the courts are unplayable.\" Atlanta is notorious for isolated showers that can drench one area of the city while the sun is shining brightly only a few miles away. \n\nPenny was clearly disappointed. \"Darn it, I was really looking forward to playing today.\"\n\n\"Listen,\" I said, \"why don't we go back to the club? We can get in some practice, and maybe there'll be somebody there willing to play.\"\n\nWhen I pulled into the main entrance to Eden Pointe, I turned off on the road to my home. \"I just want to stop and pick up my check for this quarter's club dues,\" I told Penny. \"I won't be but a minute.\"\n\nI parked at the curb and dashed to the front door. I'd made out the check last night and left it on my dresser, so I knew just where to find it. But as I walked down the hall, I heard noises coming from the master bedroom, sounds that I shouldn't have heard.\n\n\"Oh, please, do that some more. Yes, just like that. Ohhh!\"\n\nThat was Melanie's voice! What in the hell?\n\nI tiptoed down the hall and peeked in the door. Melanie was lying naked on the bed, her legs draped over the side and spread wide. Between them, a man was crouching, using his mouth and hands on her as she moaned and gasped. \n\nI felt as though I'd been in an auto accident. I was stunned, unable to move, unable to think. Everything had suddenly changed, and I couldn't comprehend what was happening.\n\nThen the man stood up and lifted Melanie's legs high to facilitate his penetration. \"No, this can't be happening,\" I thought as I recognized the figure of Frank Calhoun. I heard her moan as he slid into her. Then she was chanting, \"Oh god, oh yes, oh god!\"\n\nI staggered back from the door as though I'd been hit by a fist. It was just too much to bear. My first impulse was to charge into the room and attack him. \"But what good would that do?\" I asked myself despairingly. \"They've already cheated on me; fighting him won't change that. Besides, even if I got in the first blow, he's so much bigger than me that he'd still be able to beat me to a pulp. But I don't want him to get away it.\" \n\nAs I stood there, I suddenly remembered Penny waiting in the car. \"Oh, shit, I've got to get her home first, then I can come back here to face them,\" I thought.\n\nI found myself walking back down the hall and out the front door in a daze. I felt like I might vomit at any second. I glanced up and saw Penny peering at me through the car window. A moment later I climbed into the driver's seat and started the engine.\n\nI don't know what I looked like, but it can't have been good. \"Are you all right, Michael?\" Penny asked anxiously as she stared at me. I couldn't speak. I gripped the wheel as tightly as I could while steering the car toward Penny's home. When I pulled up out front, I put the car in Park and spoke without looking at her, \"I'm sorry, Penny, but I'm not going to be able to hit with you today.\"\n\n\"What is it, Michael, what's happened?\" she asked with growing concern.\n\nWhen I didn't respond, she reached over and turned off the ignition; then she took the keys with her as she got out and came around to my door. I turned toward her. \"I have to go, Penny. Please let me have the keys back.\"\n\n\"No,\" she said firmly, \"not until you tell me what happened.\"\n\nWhen I didn't say anything, she opened the car door and tugged on my arm. \"You're not going anywhere until you come inside and tell me what's going on.\"\n\nRobotically I got out of the car and let her lead me into her home. She disappeared for a second and returned with a glass of ice water. I sipped on it automatically as she watched. When I set the glass down, she took my hand and pressed it in hers. \"Tell me, Michael. What happened in there?\"\n\nSuddenly, all my resistance collapsed and I sagged back against the back of her sofa. I tried to speak but my throat suddenly tightened up again, so I took another sip of water.\n\n\"It was Melanie and Frank,\" I said in a strained tone. \n\nShe looked at me uncomprehendingly. \"Go on,\" she said.\n\n\"They were there together, in our bedroom. They were . . .\" my voice tailed off.\n\nShe gasped. \"No! That can't be right. Melanie would never do that!\"\n\nThe image of the two of them came back to me with full force, and I felt a tear streak down my face. \"I never thought she would either,\" I croaked as the pain in my throat increased.\n\n\"Could it have been something else, Michael? Could you have been mistaken?\" she asked.\n\nI knew she was trying to help, but that didn't keep my anger from rising. \"When I looked in, she was lying on her back with Frank licking her pussy. When I left, he had her heels over his shoulders and was pumping his cock into her. So you tell me, Penny, was I mistaken?\"\n\nShe flinched at my angry sarcasm. \"I'm so sorry, Michael. I wasn't doubting you, I was just hoping there could be some other explanation.\"\n\nMore pain shot through me. \"And with Frank Calhoun of all people!\" I said angrily. \"How could she let that big baboon near her?\"\n\n\"I guess that explains why Frank started taking Melanie's Pilates class,\" Penny mused.\n\n\"He was taking her class?\" I yelled. \"She never mentioned that to me.\"\n\nMy anger was still flowing. \"Thanks a lot for warning me,\" I said bitterly.\n\nPenny was hurt now. \"That's not fair, Michael. I had no idea there was anything going on between the two of them.\"\n\n\"I'm sorry, Penny,\" I said, \"I didn't mean to lash out at you. It's just that I'm pretty raw right now.\"\n\nShe squeezed my hand. \"That's okay, Michael. I can only imagine how you must be feeling.\"\n\nI stood up. \"I have to go,\" I told her. \"I have to go back there and find out what's really happening.\"\n\n\"You're not going to do anything violent, Michael?\"\n\n\"No, I just need to get some answers.\"\n\nShe squeezed my hand. \"Please let me know what happens, Michael. And let me know if there's anything I can do to help.\"\n\nI thanked her and went back to my car. Driving back to my home I dreaded what was coming. I thought about all the questions I wanted to ask her and I tried to anticipate her probable reaction. I expected tears, denials, and angry words. How should I respond to them? And what about Frank? What if he's still there? I could feel the adrenaline pumping through my system.\n\nWhen I walked in through the kitchen door, Melanie must have heard me because she came out to meet me. She was wearing her robe; her hair was wrapped up in a towel. \"You're back early,\" she said brightly. \"How was the match?\"\n\n\"We were rained out,\" I said in a clipped voice.\n\n\"Oh, I'm sorry you didn't get to play,\" she said. \"I'll bet Penny was disappointed.\"\n\nI just looked at her. I didn't want to make small talk.\n\n\"They called about the rain just after we left,\" I said quietly. \n\nShe blinked, but there was no change in her facial expression.\n\n\"I came back to the house,\" I told her. My heartbeat accelerated. \"I saw you and Frank together.\"\n\nOf the many scenarios I had envisioned, Melanie's response was not one I had anticipated. \"I'm sorry you had to see that,\" she said evenly. \n\n\"That's all you have to say?\" I asked incredulously. \"You're cheating on me and you're sorry I witnessed it? Aren't you even going to say you're sorry for fucking him? How long has this been going on? Don't you have any kind of explanation?\"\n\nShe crossed her arms and heaved a sigh. \"Sit down, Michael,\" she said, gesturing toward the breakfast room table.\n\n\"I prefer to stand,\" I said angrily.\n\n\"Suit yourself,\" she said, and took a chair. I stood there dumbfounded at her total lack of reaction.\n\n\"Listen, Michael, we were going to tell you soon anyway, but I guess this just steps up the timetable a little. I'm leaving you. Frank and I are in love, and I'm going to move in with him. We'll get married as soon as the divorce is final.\"\n\nI decided to sit down; I didn't want to risk falling.\n\nBefore I could think of anything to say, she jumped up and said, \"Wait here,\" before disappearing back toward our bedroom. A few moments later she came back, clutching a sheaf of papers. She slid them across the table at me.\n\n\"This doesn't have to be acrimonious,\" she said. \"I don't even want any alimony from you. I've taken all the money from our savings account, but that's only fair since I'm leaving you the house. This is a much better deal than you'll get if we go to court, but I'm good with that if you'll sign the papers and let us all get on with our lives.\"\n\nI looked at the sheaf of papers: it was a petition for a divorce.\n\n\"You've already been to a lawyer?\" I asked in astonishment. \"What about our marriage? What happened to the last ten years we spent together?\"\n\n\"I'm sorry, Michael. This wasn't something that I planned; it just happened. Just accept it: it is what it is.\"\n\n\"Accept it?\" I shouted. \"Accept that my loving wife is fucking that asshole Frank Calhoun in our own bed? Accept that our marriage is over just like that?\"\n\nShe stood up. \"I'm disappointed, Michael. I had hoped for a more mature reaction from you.\" She turned and walked back to the bedroom.\n\nI sat there at the table, staring at the divorce petition in front of me and trying to make sense of what was happening. If someone had asked me that morning, I'd have told them that I loved my wife and that we had a good marriage. This afternoon I learn that she's leaving me for another man. Talk about cognitive dissonance!\n\nIn the quiet I could hear the beep of a cellphone, and then snatches of conversation. \n\n\"He saw us. . . About like you'd expect. . . That would be good.\"\n\nWhen she came back out she was fully dressed and carrying an overnight bag and make-up kit. \"Now that you've forced the issue, I don't intend to stay here tonight. Frank's coming over to get me. We'll come back on Monday while you're at work and get the rest of my things.\"\n\n\"So you're going, just like that?\"\n\n\"It has to be that way,\" she said.\n\n\"Fine,\" I said bitterly. \"What do you want me to tell our friends?\"\n\nShe sighed. \"Listen, Michael, Frank and I haven't done anything wrong and we don't intend to hide away like criminals. We're going to continue to be active socially. In fact, we'll probably go to the Eden Pointe reception tomorrow evening. You won't have to tell anyone anything because they're all going to know about it anyway.\"\n\nJust then there was the beep of a horn outside. Melanie looked out the window. \"Frank's here,\" she said. \"I'm going now.\"\n\nAs she was closing the door, she leaned back in to look at me. \"Just sign the papers, Michael. The sooner you do, the better it will be for all of us.\" Then she was gone.\n\nI don't know how long I sat there. Emotions flickered through me like the cars of a train rushing through an intersection. One minute I'd be boiling with anger; the next I'd remember happier times and be filled with sorrow. I told myself I'd treated her like a queen; then I wondered what I'd done to drive her away. \"I'm better off without her,\" I repeated; until I was filled with loneliness.\n\nThe tone from my cellphone startled me, and I quickly answered. Subconsciously I think I was hoping to hear Melanie's voice, but it was Penny. \"How are you doing, Michael?\" she asked.\n\n\"Not so good,\" I replied. \"She's left me.\"\n\n\"I heard,\" she said.\n\n\"You heard?\" I said in astonishment. \"Where? How?\"\n\n\"I'm sorry, Michael,\" she said sadly. \"Frank's been up at the clubhouse boasting about it.\"\n\n\"Oh, shit,\" I thought. \"It's already started.\"\n\nOn Sunday I called the captain of our men's team. There was no way I was going to go up there. \"I'm sorry, Joe,\" I told him, \"you're going to have to scratch me from the line-up today. I've got some personal issues to deal with.\"\n\n\"Yeah, I heard,\" he said sympathetically. \"Sorry about that. Good luck, man.\"\n\nI thanked him, but I knew all I had to look forward to was more bad luck.\n\nI spent the whole day inside. I guess I was hiding, though it pained me to admit it. The TV had sports on, but I wasn't paying attention. My thoughts kept drifting back to my marriage with Melanie. Where did it all go wrong? When did she stop loving me?\n\nI felt certain that she'd loved me when got married right out of college. We'd gone steady throughout our senior year; I'd asked her to marry me over Christmas break. She'd majored in Health and Physical Education, and whenever my fraternity brothers would catch sight of her in workout clothes, they'd give me a hard time. She had that combination of cute, fit and sexy that's almost irresistible; I gave up trying the minute I met her.\n\nWe settled easily into married life. I landed a great job in Atlanta, and she found a job as an instructor at an aerobics class. After a few years, we'd saved enough money for a down payment on a house, and we found just what we were looking for in a brand new development called Eden Pointe.\n\nI thought that we'd been really happy here at Eden Pointe. I got several promotions with my company, and Melanie decided to strike out on her own. We had enough money by that time to lease space for her studio in one of the small strip shopping centers in the area, and her business did very well. Our savings account was growing, we had a host of friends and acquaintances, especially at Eden Pointe, and we had even started talking about starting a family in a year or two.\n\nOur sex lives had quieted down some, but that hadn't surprised me. My job kept me busy, and teaching Pilates every day will tire out anyone. As I thought back about it, I began to realize that things had really slowed down in the last six months, though I hadn't noticed it at the time. I also remembered that Melanie had seemed a bit distracted at times, as though she was off in another world. But when we had made love, it was as good for me as ever, and I had thought Melanie felt the same way. Obviously, I was wrong.\n\nI kicked myself mentally. How could I have been so blind that I didn't realize she had gotten involved with someone else? How could I not have been aware that she was falling out of love with me and in love with Frank Calhoun? The only thing I could figure was that when you love and trust someone else, you don't go looking for signs of treachery and deceit. \"No,\" I thought sardonically, \"you just have to wait until they dope-slap you in the back of the head.\"\n\nI went into work early on Monday to try to get ahead of the game. Around nine o'clock I called the office of my attorney to try to make an appointment. When the secretary asked about the purpose of the meeting, I didn't want to get into the subject of Melanie and me so I told her I needed to make some changes in my will. When she came back on the line, she told me he could see me right after lunch.\n\nWhen I got to his law office, Jonathan met me in the lobby. He had been a classmate of ours back in our undergraduate days, and I had gone to him when Melanie and I decided to have wills drawn up. \n\nAfter we were seated in his office, he looked at me with concern. \"Is everything OK, Michael? I understand you need to make a change in your will. You or Melanie aren't ill, are you?\"\n\n\"Thanks for your concern, Jonathan, but it's not quite that bad,\" I told him. Then I handed him the papers that Melanie had given me on Saturday. As he read them, he \"tsk-tskd\" to himself. When he had finished, he looked up at me.\n\n\"I'm really sorry to learn of this, Michael. Do you think there's any chance of reconciliation?\"\n\n\"I don't think so. She's already moved out of our house and moved in with her boyfriend. She told me that they plan to get married as soon as our divorce is final.\"\n\nHe shook his head. \"I would never have expected this. You two seemed like the perfect couple.\"\n\nThen his expression changed and his voice took on a professional tone. \"Given those circumstances, as your legal advisor my advice to you is to sign this agreement immediately.\"\n\n\"So, just like that, ten years of marriage wiped away?\" I said bitterly. \n\nHe shook his head patiently. \"In matters like this, Michael, you have to stop thinking with your heart and start thinking with your head. My read on this is that Melanie has made you a very generous offer, much better than you'd get if you decide to fight over it. Part of her motivation may be guilt, but I'd be willing to bet that the main reason is to give you an incentive to agree quickly so she can marry her new man. While it may feel like you're giving in to her now, the truth is that if your marriage is over, this is the best deal you can hope to get.\"",
        "I knew he was right. Hell, after what she'd done, I didn't want to stay married to her anyway. But it still felt like she and Frank had beaten me in a game I didn't even know I was playing. \n\nJonathan's tone became sympathetic once again. \"Listen, Michael, I know the attorney that Melanie used. If you sign, we can get this Settlement Agreement filed with the court very quickly. That will pretty well lock in what she's proposed. Then, if she begins to have 'buyer's remorse' and wants to come back -- and if you're willing to take her back -- you still have thirty days to drop the divorce.\"\n\nI knew that wasn't going to happen. \"Can I borrow your pen?\" I asked.\n\nWhen I got back to the office, I headed straight for Human Resources. I had lots of changes to make in my health insurance, my 401K plan and numerous other benefits that involved a spouse. The clerk who helped me must have done this a lot because he was able to produce all the forms I needed in short order. As I was signing them I glanced up to see him staring at me. \"I guess I won't have to make an announcement in the office now,\" I thought wryly.\n\nOn the way home that evening, I stopped at a neighborhood restaurant and picked up some dinner to go. But when I got home, I found that Melanie had been there during the day and packed up everything she wanted. Of course all of her cosmetics had disappeared, but I was surprised to find a number of items of clothing left behind. However, when I examined them more closely I realized that they were things she didn't wear anymore. \"I guess I get to haul them off to Goodwill,\" I thought morosely.\n\nFurther investigation revealed that the bedroom was not the only place she had raided. Our good china was gone, along with most of the serving pieces we'd received as wedding presents. From the kitchen, I noticed that a number of utensils and our set of good carving knives had also been carted off. Several pieces of furniture were missing, and when I went into the den, I saw that large chunks from our CD and DVD collections were also gone. As I prowled through our belongings I noted that she'd left our wedding album untouched. Somehow that was more depressing to me than all the things she'd taken with her. It was as though she wanted to expunge any memory of life with me.\n\nI went back in the kitchen and stashed the food I'd bought in the refrigerator. I had no appetite left after discovering her incursion. I made myself a mental note to have the locks changed. \"Damn it to hell, how do you go from being happily married to a single lonely divorced man in three days?\" I asked myself. It all seemed so damned unfair.\n\nI spent the next week in virtual isolation, starting work early and leaving late every day. Otherwise I stayed in the house. The humiliation of having Frank Calhoun steal my wife was excruciating, and the fact that there was nothing I could do about it was almost unbearable.\n\nI'll admit that I entertained fantasies about assaults with a baseball bat or brass knuckles; other times I daydreamed about hired killers and car bombs. But then I'd come back to the real world. Did I really want to ruin my own life just to get back at a skirt-chasing sleaze ball and a wife who couldn't keep her legs together?\n\nBy Friday I decided it was time to come out of my cocoon. I'd done nothing wrong and there was no reason for me to hide. I called Penny. \"Hey, partner, don't we have tennis match scheduled for this weekend?\" I asked, trying to sound upbeat and positive.\n\n\"Oh, Michael, I'm so glad to hear from you,\" she said quickly. \"I thought about calling you so many times, but I thought maybe you'd prefer to be alone for awhile.\"\n\n\"Thanks, Penny,\" I replied, softening my tone. \"It's been a rough week.\"\n\nI went on to tell her everything that had happened; then I asked her what was going on at Eden Pointe that I'd missed. She hemmed and hawed for a few seconds before admitting that our situation was the talk of the subdivision. \n\n\"You'd think they could find something better to discuss,\" I said sharply.\n\n\"They might,\" Penny allowed, \"but Frank and Melanie don't make it easy. They've been socializing at the clubhouse every night since last Saturday. Frank is all but openly bragging about how the better man won, and Melanie hangs on him like an infatuated school girl.\"\n\nI could hear the anger in her voice.\n\n\"It's just sickening, Michael. I quit her Pilates course straightaway and told her I couldn't be her friend anymore,\" she said. Her loyalty made me feel a little better.\n\n\"What about the others, Penny? What are they saying?\" I asked.\n\n\"I guess it's what you'd expect, Michael. There are some who are pretty unhappy with Frank and Melanie, and they try to avoid the lovebirds as much as possible. Then there's the group that always hang around Frank. They're all lauding his prowess, if you know what I mean. But for the majority of people it's just a sad, awkward situation, and they try to stay out of it as much as they can.\"\n\nRationally, I'd known that that would be the situation, but a part of me had wished the community would tar and feather Frank and Melanie and ride them out of town on a rail. But I was determined not let my disappointment hold me back.\n\n\"Be that as it may, I'm not going to spend the rest of my life in hiding,\" I told Penny. \"We're scheduled to play on Saturday, and unless you'd rather not, I intend to get out on the court with my partner,\" I told her.\n\n\"I'm glad, Michael,\" she told me fervently, \"You can count on me.\"\n\nI deliberately drove over to the tennis courts a little late so as to avoid conversations about topics I didn't want to discuss. It didn't help much: as I walked up to the tennis pavilion I could feel the eyes of my neighbors and teammates on me. I could understand their curiosity but I still hated the feeling.\n\nWhen she saw me, the captain of our mixed doubles team came rushing up to me. \"Michael, I'm so sorry. The other team made a last-second change in their line-up, and some of the matches have already started, so I can't change it. If you don't want to play, I'll understand.\"\n\n\"What are you talking about, Mary?\" I asked. \"I don't understand.\"\n\n\"It's Frank,\" she said. \"You and Penny are scheduled to play Frank and his partner.\"\n\n\"Oh, crap,\" I thought. \"That's the last thing I wanted.\"\n\nJust then, Penny came up, and when she realized what was happening her face went pale. She pulled me aside and whispered, \"We don't have to do this, Michael. It's no big deal: we'll just forfeit and play somebody else next week.\"\n\n\"No!\" I said, loudly enough for Penny to jump. \"I am not going to hide from that bastard the rest of my life. I'm going to have to face him, and it might as well start now.\"\n\nPenny looked at me worriedly, but I turned back to Mary. \"It's fine,\" I told her. \"Penny and I are here to play.\"\n\nIt was a slaughter. I played worse than I had in years, and my obvious emotions affected Penny as well. Frank, by contrast, was really on his game, and his big, booming ground strokes were scorching over the net like rounds from an RPG. To make things worse, he was constantly taunting me throughout the match. \"Come on, Michael, you can hit it harder than that,\" he yelled after I floated a weak shot that he smashed for a winner. Another time he yelled, \"Your wife can hit it harder than that. Oh, wait, my bad: you don't have a wife.\" I just fumed.\n\nTo add insult to injury, our little match had drawn a crowd, and I looked up to see Melanie standing by the fence. To her credit, she did wince at some of Frank's comments, but she never looked in my direction.\n\nAt one point, I floated a weak second serve over the net, and Frank ripped it straight at Penny. It bounced off her shoulder and nearly knocked her down. I rushed to the net with my racket cocked, ready to decapitate the bastard, but Penny grabbed my arm and pleaded with me not to go over the net after him. \"It was fair shot,\" she said. \"I'm okay, I'm not hurt. It's just part of the game.\"\n\nI stared at him with venom in my eyes as he pretended to tie his shoelace. Finally, I walked back to my position in angry frustration.\n\nThe final score was 6-2, 6-1, a humiliating defeat. Gritting my teeth, I went to the net to shake hands with our opponents. Frank's partner seemed embarrassed by his display and mouthed an apology to me when she shook my hand. Frank, however, simply walked up to us and, without bothering to extend his hand, said, \"That was a lot of fun. Let's do it again the next time you feel like taking a beating.\" Then he pointedly turned, walked over to Melanie and gave her a big kiss over the waist-high fence.\n\nI don't know what Penny saw in my face, but she grabbed my arm and pulled me off the court. \"He's trying to provoke you, Michael. He'd love for you to start a fight with him. Don't let him get to you. Please, for my sake.\"\n\nI sat down on the bleachers and somebody handed me a cup of ice water. I took a few sips and then dumped the remainder on my head. I couldn't have felt much worse than I did that afternoon. I apologized to Penny for playing so poorly, and although she protested, I got in my car and headed home.\n\nThrowing my clothes in the hamper, I dragged myself into the shower and proceeded to let the water cascade off of me for half an hour. When the water finally turned cold, I got out, dried myself off and then plopped down on the bed, angry and disgusted.\n\nI knew why I had lost: I'd let Frank get to me. That knowledge only made me feel worse. He got to me and he got to Melanie too, though obviously in a different way. Nevertheless, the outcome was the same: to turn a loser like Frank into the big winner. I swore to myself that I wasn't going to take any more of Frank's abuse, or Melanie's either. I was going to find a way to turn the tables on them both. Now all I had to do was come up with a way to accomplish that.\n\nI lay back on the bed and thought about what my old tennis coach used to tell me: \"Play to your opponent's weakness.\" It sounded good in theory, but how could I apply that in this situation?\n\nI know myself. Once I start working on a problem, my brain will keep attacking it even when my conscious mind turns to other tasks. In fact I've often found that if I leave a problem alone for a while, when I come back to it the solution is easy to see. And that's what happened in this case. I chewed on the challenge for a while and then set it aside to spend most of Sunday catching up on the yard work that I'd neglected. By that night I was tired enough that falling asleep was no problem. When I got into work the next day, I realized I had a possible solution. \"It's probably going to be expensive,\" I thought to myself, \"but if it works, it'll be worth it.\"\n\nAbout mid-morning I gave a call to one of our top sales guys. \"Hey, Jerry,\" I said when I reached him, \"any chance you could have lunch with me today? My treat.\"\n\n\"Sure, Michael, especially if you're buying.\"\n\nWe met at a bar and grill I know that's a little run-down but has great food. After we'd ordered, Jerry looked over at me. \"Hey, Michael, I was real sorry to hear about you and Melanie. I thought you guys had everything going for you.\"\n\n\"Yeah, me too, Jerry, me too. But actually, that's sort of why I wanted to talk to you.\"\n\n\"Sure, Michael, I'd be glad to help any way I can.\"\n\n\"OK, Jerry, so here's my question: when you're entertaining your best clients, have you ever had occasion to use an escort service?\"\n\nHe looked at me oddly. \"No, Michael, absolutely not. That's against company policy, and I would never do that.\"\n\nI leaned over the table toward him. \"Jerry, this is not a company issue, and we're not on business here. This is strictly personal, if you know what I mean.\"\n\nHe looked at me for a few seconds, and then light dawned in his eyes. \"Oh, I get it,\" he said. \"I guess it's been a long dry spell for you, what with the wife splitting and you being out of the dating game and all.\"\n\nHe paused and then leaned closer to me. \"Sure, I know one of the top services in the city. But listen, Michael, they cater only to the biggest hitters, understand? Their girls are unbelievable, but I think they may be way out of your price range.\"\n\nI smiled at him. \"You let me worry about that. Just tell me how to get in touch with them and what to expect.\"\n\nAnd over burgers and brews, he did exactly that.\n\nI was nervous that afternoon as I went over the notes I'd made during lunch. I hoped I was doing the right thing. Then I remembered Frank taunting me and Melanie's cold-eyed announcement that she was leaving, and I decided to go for it.\n\nI called the number Jerry had given me, and a pleasant male voice answered. \"Hello. May I help you?\"\n\n\"Yes, I'd like to speak to Mr. Henry Miller,\" I said as I had been instructed.\n\n\"This is Mr. Miller,\" the voice responded. \"What are you looking for?\"\n\n\"Something from the Grove Press,\" was my response.\n\n\"Please give me your name, sir.\"\n\nI thought about using a pseudonym, but Jerry had been very explicit about the need to identify myself accurately. \"They're always worried about the vice squad,\" he told me. \"They'll go to great lengths to make sure you're not a cop trying to set them up.\"\n\nI gave him my real name.\n\n\"Are you calling from your office?\" Mr. Miller asked.\n\n\"Yes,\" I replied, \"but this is a personal matter. It has nothing to do with my company.\"\n\n\"I quite understand, sir. Now would you give me the switchboard number where you work?\"\n\n\"Sure,\" I said, \"but wouldn't you rather have my direct line instead?\"\n\nNo,\" he replied. \"I will call the main number and ask for you; then we'll be able to attend to your business.\"\n\n\"Pretty clever,\" I thought to myself. \"If he calls and the operator answers, he knows he's calling a real company, not the police station. And if she transfers his call to me, he'll know I'm really an employee of the company. It's not foolproof, but it's pretty darn good.\"\n\nI gave him the main switchboard number and he hung up immediately. A couple of minutes later, my phone rang and the operator transferred a call to me. It was \"Mr. Miller.\"\n\nNext he asked me for my cellphone number. \"This will allow us to contact you outside working hours, if that is required,\" he explained.\n\nAfter I'd given it to him, he went on. \"Now that we've dispensed with the identification process,\" he said smoothly, \"please tell me how our service may help you.\"\n\n\"I'm looking for a very special companion who can be available for a series of occasions that may stretch over a month or more.\"\n\n\"Hmm,\" the voice said, \"that's a bit out of the ordinary. We don't usually make commitments for such an extended period of time. We may be able to help you, but it will be expensive.\" He quoted me a price that made my eyes water. \n\nI gulped. \"That will be fine, Mr. Miller.\"\n\n\"Very well, do you have any special requirements?\"\n\n\"Yes,\" I said, \"she has to look like a goddess.\"\n\nHe chuckled. \"Beauty is in the eye of the beholder, sir. But I think you'll be able to find a companion suitable for your needs.\"\n\nHe paused. \"Do you have a pen handy?\" \n\nWhen I assured him that I did, he proceeded to give me the address for their website. I noted that the URL began with HTTPS, indicating a secure server. When I had it down, he told me to my amusement that when I was prompted for a user name to enter \"Anais Nin.\" Then he gave me a numerical password.\n\n\"Please understand, sir, that both the user name and password will change after your selection has been made. This is for your security as well as our own.\"\n\nWhen I acknowledged my understanding, he went on. \"Now about the matter of payment, sir, once you have made your selection and she is scheduled for a session, your credit card will be charged in the amount to which you have just agreed. In addition, our clients are expected to show their appreciation directly to our companions. If everything is satisfactory, we recommend a gratuity of 25%.\"\n\nI did some quick mental mathematics. \"This had better work,\" I thought, \"or I'm going to be broke as well as humiliated.\"\n\n\"Very well, sir. Whenever you are ready to make your selection, please proceed to our website. You will be able to make all other arrangements there. Good day, sir.\" With that, the line went dead.\n\nI waited till I got home that night to access the website \"Henry\" had given me. The main screen identified itself as only as \"Capricorn Services\" with the tagline \"Catering to the needs of the most discerning clients.\" The user name and password \"Henry\" had provided got me into the site, and a window opened up that could have come straight from the pages of a Victoria's Secret catalog. \n\nThe women pictured there were all so gorgeous that I wondered why they weren't in modeling rather than the escort business. In fact, I even wondered if the pictures could have been copied from some modeling site as part of some kind of bait-and-switch con. But my buddy Jerry had insisted that Capricorn was for real, so I decided to take my chances.\n\nI had assumed that I would choose a blonde for my purpose, but a photo of a woman with dark shoulder-length hair caught my attention, and I impulsively clicked on \"Rhiannon.\" The confirmation that appeared on my screen assured me that Rhiannon would contact me within twenty-four hours to arrange our meeting. Next I was prompted for my credit card information. Once the card number and expiration date had been verified, the screen went dark and I was suddenly kicked out of the site.\n\nOut of curiosity, I tried to go back to the Capricorn website, but the welcome screen wouldn't recognize the username and password this time, and after a second try I was kicked back to my home page. I was pretty impressed by the security their system used, and decided that was a hopeful sign. If they went to that much trouble, maybe their service was as good as Jerry had indicated.\n\nI was on pins and needles the next day waiting for Rhiannon to call. At one point I even considered backing out of the deal. My little plan was going to be very expensive to implement, and there was no guarantee of success. But when I went to the break room to get myself a cup of coffee, two secretaries who had been speaking when I walked in immediately fell silent and looked away from me. It didn't take a genius to figure out who was the subject of their conversation. The pain of being the subject of office gossip strengthened my resolve. No matter what, I wasn't going to continue to be the helpless victim if I could do anything about it.\n\nIt wasn't until after dinner that my cellphone rang, and when I answered, a melodious voice said, \"Hi, Michael, this is Rhiannon calling. I'm looking forward to meeting you.\"\n\nI gulped and then responded, suggesting that we meet for dinner to discuss my request. When she agreed, I suggested the same grill where Jerry and I had eaten. It was small, dark and far enough away from Eden Pointe that I'd be unlikely to run into one of my neighbors. She laughed. \"How interesting! I don't believe I've had the pleasure of eating there before. I'll look forward to seeing you there.\" With that she hung up.\n\n\"Here we go,\" I thought.\n\nThe grill wasn't very busy on a week night, which was one of the reasons I'd picked it, and the low lighting also suited my purposes. But when she walked in the door, it was as though a spotlight was shining on her. She saw me stand up nervously, and she walked over and shook my hand confidently. \"Hello, Michael,\" she said in that musical voice. \"It's a pleasure to meet you in person.\"\n\nShe sat down and I followed. I must have been staring, because she laughed and said, \"Well, how do I look?\"\n\nWe've all seen movie stars on the big screen or models in magazines. They're gorgeous but they're not \"real.\" But now I was meeting one of them in person, and the impact was overwhelming. The young woman seated across from me was absolutely stunning. The dark eyes, high cheek bones, pouty lips, the way her hair framed her face, her athletic but womanly figure \u2013 I could go on and on, but the fact was that for a few moments all I could do was stare at her in silent wonder.",
        "She smiled and broke the silence. \"I'm going to take that to mean you approve,\" she said.\n\n\"Oh, yes, I'm sorry,\" I stammered, \"I just, for a moment, that is . . .\" My voice tailed off in embarrassment.\n\nThankfully, at that moment the waitress came over to take our orders. I don't even remember what I ordered, but Rhiannon settled for a green salad with dressing on the side. As the waitress wrote down her selection, I could tell that she had fallen under Rhiannon's spell as well. She kept glancing at her until finally she burst out, \"Aren't you on television?\"\n\nRhiannon smiled at her sweetly. \"No, I'm afraid not,\" she said, and the waitress walked away mumbling to herself.\n\nTheir little exchange allowed the rational part of my brain to re-engage. I looked at Rhiannon curiously. \"I'll bet that happens to you often.\"\n\nShe nodded unselfconsciously. \"Yes, it happens quite a bit.\"\n\n\"Can I ask you a question? Why aren't you on television or modeling, instead of, well, you know,\" I asked, stumbling a bit at the end.\n\n\"I've looked into it,\" she acknowledged, \"but that's a very cut-throat world. I may look good to you, but I'm just one of many in that world. The odds against making it are about the same as a basketball player making it in the NBA. But in this line of work, I stand out. And unlike modeling or acting, I didn't have to starve for years paying my dues. From the day I started I was making top dollar. By the time my looks start to go, I'll have put enough away to live off my investments for the rest of my life. And if I'm really lucky, I'll find a rich man who wants a trophy wife and doesn't care what she used to do for a living.\"\n\nI couldn't help nodding. I didn't agree with the career she had chosen, but she had certainly approached it sensibly.\n\nAt that moment, the waitress brought our dinners. After she'd served Rhiannon, she looked at her again and said, \"Are you sure you're not on TV? I just feel certain I've seen you before.\"\n\nRhiannon shook her head. \"I don't think so. If I had been, I'm sure I would remember it.\"\n\nI tried to smother my laughter as the waitress beat a hasty retreat.\n\nWhen we began eating, she looked at me carefully. \"So, Michael, why don't you give me an idea of what you have in mind? Henry indicated that this is something a bit out of the ordinary.\"\n\nI blushed and began to tell her my story. When I replayed my conversation with Melanie after catching her and Frank in bed, Rhiannon gave me a sympathetic look. \"That was pretty cold,\" she said. When I described Frank Calhoun and the way he was acting, she nodded knowingly. \"I've met a lot of his type.\"\n\nShe wiped her mouth daintily and then folded her hands on the table. \"So what is it exactly that you want to do, and how do I fit into the picture?\"\n\nI spent the next fifteen minutes describing what I hoped to accomplish over the next month or so. When I finished, I admitted that I had a lot of doubts about what I was trying to do. \"But I just can't sit by and let the two of them run roughshod over me without fighting back. And now that I've met you, I'm beginning to think this just might work.\"\n\nShe broke into a big grin. \"What a lovely compliment!\" she said. Then she leaned forward across the table. \"You know what? I think I'm going to enjoy this.\"\n\n\"Great!\" I said enthusiastically, and reached across to shake her hand to seal the deal. She laughed at that and gave me a firm handshake in return. \"To partners in crime,\" she said with a sly smile.\n\nThen she sat up and did something that I didn't quite catch with her body, and suddenly she exuded raw sexuality. I realized I had a hard-on. \"Well,\" she said in a low, sexy voice, \"now that we've concluded the business portion of our meeting, shall we adjourn to someplace cozier for the recreational component?\"\n\nMy mouth was suddenly dry and I had to take a sip of water before I could speak. \"No,\" I said, \"tonight is just supposed to be a get-acquainted session.\"\n\nShe gave me a crooked little smile. \"You don't find me attractive?\"\n\n\"Oh, gosh, no,\" I stammered, \"I mean yes. I mean it's not that. It's just I'm trying to keep focused on what we're planning to do here, and it would be better for me not to get involved with you that way, don't you see? But I do have the extra for you.\" With that I slid an envelope across the table to her. I'd stuffed a number of large bills in it earlier.\n\nShe solemnly picked it up and it disappeared into her purse. Then she changed her posture again and her sexual side seemed to recede. \"I think maybe I do understand, Michael.\" She tilted her head slightly to look at me. \"You're a very interesting man. I think I'm going to enjoy our little adventure together.\"\n\nWith that she rose and left, while I remained seated in the booth. For some reason I felt wrung out. \"That is some woman!\" I thought.\n\nWe'd planned for Phase I of Operation Honey Trap to commence on Saturday shortly after the lunch hour. The temperature was already heating up in Atlanta, and I figured there would be a large crowd at the pool at Eden Pointe.\n\nI was a bit nervous about whether Rhiannon would show up, but shortly after noon a BMW Z4 pulled into my driveway. She came to my door carrying a small bag, and when I raised my eyebrows, she said, \"My swimwear.\" \n\nShe looked around and smiled. \"So this is suburbia. Do you like it here?\"\n\nI scowled. \"I did until recently.\"\n\nShe patted my cheek. \"We're going to fix that.\"\n\nWe separated at the clubhouse to go to the locker rooms to change into our suits. As we'd agreed, I came out first and found two lounge chairs beside a table with an umbrella. No sooner had I made myself comfortable than I spotted big Frank Calhoun making his way toward me. \n\n\"Well, Michael,\" he boomed out, \"I'm surprised to see you at the pool today. I would have thought you'd be taking a lesson from the pro, trying to improve your tennis game.\"\n\nI knew he was trying to bait me, but I answered him evenhandedly. \"Nope, today my girlfriend and I are going to enjoy the pool and get a little sun.\"\n\nFrank wasn't going to let me off that easily. \"Oh, you have a girlfriend now? I'd like to meet her.\"\n\nBy now our conversation had drawn the attention of the people within earshot. That was fine with me.\n\n\"Well you're in luck, Frank. Here she comes now,\" I said, pointing to the door to the women's locker room.\n\nOh my gosh! A hush fell over the club members as Rhiannon approached us. I had expected her to wear a bikini, but to my surprise she was wearing a one-piece swimsuit. But somehow it was far more enticing. It was made out of some kind of silvery material that captured and reflected the sun, commanding the attention of every man and woman in sight. I heard a clicking sound and realized she was wearing stiletto-heeled slippers. They made her calves, thighs and butt look absolutely amazing.\n\nAs she drew closer to us, I wrenched my eyes from her legs back to her suit. It looked different somehow, and then I realized that it had to be made from the thinnest material I had ever seen. It absolutely molded itself to every contour of her body, and, as I looked closer, it was obvious that the suit was totally unlined. It looked as though it was painted onto her body.\n\nShe came up to me and linked her arm in mine, pressing her breasts against my bicep and kissing me on the cheek. \"Oh, good, honey\" she cooed, \"you've gotten a place for us.\" Then she turned to Frank. \"Who's your friend, Michael?\"\n\nI glanced at Frank, and saw to my amusement that his mouth was hanging open as he stared at the vision in front of him. \"Rhiannon,\" I said, \"I'd like you to meet Frank. Frank, this is my girlfriend Rhiannon.\"\n\nHis mouth snapped shut and he quickly reached out to shake hands with her. \"Welcome to Eden Pointe,\" he said rather grandly. \"If there's anything I can do to assist you, please don't hesitate to ask.\"\n\nRhiannon smiled prettily. \"Oh, how nice!\" She turned to me and said coyly, \"Is everyone here as nice as Frank?\"\n\nI replied drily, \"No, Frank is unique.\"\n\nShe smiled at him again. \"Well, thank you so much for making me feel right at home.\"\n\nWhen he just stood there, she looked down with a smile. \"You can let go of my hand now.\"\n\n\"Oh!\" he said in embarrassment. \"Well, I have to get going. I hope I see more of you, Rhiannon. Um, I mean, I hope I see you around again.\" With that he turned away awkwardly and returned to the other side of the pool, repeatedly glancing over his shoulder as he went. I glanced in that direction and spotted Melanie sitting there with her arms crossed. She didn't look happy.\n\nRhiannon and I settled back in our lounge chairs. She took my hand and pulled me closer so she could whisper in my ear. \"I thought that went rather well.\"\n\nI squeezed her hand. \"You were perfect,\" I assured her. She smiled and gave me quick kiss on the lips. I know she meant it in a friendly way, but I could still feel her lips fifteen minutes later.\n\nThen she stretched out face down on the lounge chair. \"Put some sun tan lotion on me, would you Michael?\" As I happily complied, I was sure I heard masculine groans from nearby.\n\nOver the next couple of hours, I think everyone who was at the pool that day made it a point to stroll by us to get a glimpse of my new girlfriend. I know for sure that everyone on my men's team came by, and after exchanging a few jovial words I made it a point to introduce them to Rhiannon. She was gracious to every one of them, chatting easily as though they were old friends.\n\nAt one point I leaned over and whispered in her ear, \"You should have gone into politics.\" She just smiled and winked at me. \"In my line of work I'm only one step away.\" I guffawed.\n\nWhen things quieted down, she leaned over to me again. \"Which one is she?\" I knew exactly whom she meant, and I pointed Melanie out to her on the other side of the pool.\n\n\"Good,\" she said, \"leave this to me.\"\n\nShe slipped on her high-heeled mules and clip-clopped over to Melanie's side of the pool. Bending over at the waist facing the pool, she slipped the shoes off her feet and then executed a graceful dive into the shallow water. When she surfaced, she bowed her head forward, and then quickly flipped it back so that her hair made a graceful arc over her head, spraying water in a fan shape into the air. I was in awe: I'd seen that move in advertisements before, but never in real life. It was stunning.\n\nThen in a single motion Rhiannon gracefully pushed herself out of the water and onto the deck. As she stood there facing Melanie with the water running down her body, she reached up to push her hair back, emphasizing her breasts in the process. Then she slipped the mules back on her feet, adding four inches to her height, and walked back to where I was staring.\n\nI reluctantly shifted my view away from Rhiannon to look at Melanie. She was glaring angrily at me. Then she turned and spoke sharply to Frank before grabbing her things and heading for the exit. He tagged along behind her, once again looking over his shoulder at Rhiannon.\n\nShe gracefully settled herself in the lounge chair with her eyes closed. I could just hear her murmur, \"Mission accomplished.\"\n\nOnly one bad thing happened while we were there. As we were getting ready to leave, I looked up to see Penny walking in my direction. \"Oh, shit,\" I thought, \"I forgot all about Penny's women's team playing today. What am I going to tell her?\"\n\n\"Hi, Michael, I'm so glad to see you out again. Maybe we can get together and play some more . . .\" She stopped abruptly as Rhiannon stood up and grasped my arm. \"Oh,\" Penny said in surprise, \"who's this?\"\n\n\"Um, this is Rhiannon, my date,\" I said awkwardly.\n\nPenny blinked and looked in silence at Rhiannon for a moment. Then she stuck out her hand. \"I'm Penny,\" she said. \"It's nice to meet you.\" She turned back to me. \"Um, I've got to get cleaned up. I'm pretty grimy after our match today. See you around, Michael.\" Then she turned and scurried away before I could think of anything to say.\n\n\"Who was that?\" Rhiannon asked curiously.\n\n\"That was Penny Pennington,\" I told her. \"She's my partner for mixed doubles.\"\n\n\"Interesting,\" was her response.\n\nI mentally kicked myself for not having planned in advance how to deal with Penny. I didn't want to risk revealing my plan, but I didn't want Penny to get the wrong idea. Damn!\n\nShortly after that, Rhiannon and I decided to call it a day. I felt like we'd accomplished everything we wanted to do today. As we left the pool area, I swear I heard the level of conversation pick up noticeably.\n\nWhen we got back to my house, I let Rhiannon use my shower while I dried off and thought about the afternoon. Except for my unexpected encounter with Penny, everything had gone even better than I could have hoped. I'd showed Melanie that I wasn't going to sit around and mourn her desertion for the rest of my life. More than that, I'd showed her that not only was she replaceable, but in fact I had upgraded pretty dramatically. \"Let her stew on that for a while,\" I thought triumphantly.\n\n\"So how do you think it went?\" I heard a voice ask from behind me. I turned to see Rhiannon standing there wrapped in a bath towel. \"You were perfect!\" I responded enthusiastically. \"You were everything I'd hoped for and more.\"\n\nShe did something with her fingers and suddenly the towel slipped to her feet. \"Would you like to celebrate?\" she asked coyly.\n\nFor a moment I stood there, unable to breathe. Everything about her was absolutely perfect. Her breasts sat high and proud on her chest, not huge but perfectly proportionate to her frame. Surprisingly, her areola and nipples were pink, not brown. There was not an ounce of fat on her; instead, her abdominal muscles were well developed and inevitably drew my eyes down to her Mound of Venus, which was smooth and totally bare. From there, her legs seemed to stretch on forever, strong and perfectly formed.\n\nI gasped and realized I'd been holding my breath. Steeling myself, I stepped over to her, bent down and handed her the towel she dropped. \"I'm sorry, Rhiannon. It's just not the right time.\"\n\nShe smiled. \"Okay, I was just checking.\" She draped the towel over her shoulder and padded away from me. Oh my, I hadn't gotten a look at her ass before!\n\nWhen she came back out, she was dressed and her bag was packed. I handed her a sealed envelope. \"Thank you,\" I said fervently. \"Today was exactly what I wanted.\"\n\nShe cocked her head again in that funny way she had and looked at me. \"Do you want to get back with Melanie?\" she asked suddenly.\n\nI flinched. \"No!\" I said vehemently. \"That wasn't some one-time error in judgment or loss of control. She deliberately tossed me away like some piece of trash she didn't need any more. I would never have her back under any circumstances!\"\n\n\"That's what I thought,\" she said, \"but I just wondered. Anyway, are we still on for next week?\"\n\n\"Oh, absolutely,\" I said with a big grin.\n\nDuring the week I made it a point to go to tennis practice at the club. I wanted everyone to know that I was done hiding. \"Glad you're back and have come out swinging,\" our team captain told me. My team members greeted me with slaps on the back and broad winks. Behind my back I heard someone say, \"Lucky son of a bitch!\" I smiled. I knew what kind of an impression Rhiannon could make.\n\nA couple of days later I came back to the courts for mixed doubles practice, but I couldn't find Penny anywhere. Our captain told me she'd phoned in sick. When I got home after practice, I called her right away. \"Are you okay, Penny?\" I asked. \"It's not like you to be sick.\"\n\n\"Oh, it's nothing serious, probably just a little bug going around.\"\n\n\"Can I get you anything?\" I asked. \"I'd be glad to bring it over to you.\"\n\n\"No!\" she said sharply. \"I mean, thanks but I don't really need anything. Anyway, it would be better if you stayed away. I don't want you to catch whatever I've got.\"\n\n\"Well, okay,\" I said hesitantly, \"but if you start feeling worse, give me a call right away. I'm concerned about you.\"\n\nShe gave me a vague promise and then said she needed to rest, so I let her go. I wasn't happy about it. Penny was always so healthy and vital that it disturbed me to think anything might be wrong with her. \"And our little run-in at the pool last Saturday probably didn't help any,\" I thought. I still felt like I couldn't tell her about my honey trap for fear of screwing things up, but I just hated to have Penny get the wrong impression. \"Hopefully she'll forgive me after it's all over,\" I thought.\n\nThe next step in my plan was scheduled for that weekend. The club was having a potluck dinner and Rhiannon and I were planning to make an appearance. When she arrived at my house, she was dressed very differently from our last outing.\n\n\"Wow, you look like you just walked out of a fashion magazine!\" I said as I stared at her.\n\nShe was wearing a casual outfit consisting of some kind of skirt, casual jacket and blouse. But although it sounded ordinary, the fabrics, the style and the accessories all screamed high fashion. \n\nShe curtseyed like a little girl. \"Thank you, kind sir. Actually, Nordstrom's just got these in,\" she said, \"but don't worry if you're not familiar with the labels. Tonight my primary target is the ladies, and one lady in particular.\"\n\n\"Well, I can't speak for the wives, but I think you're still going to have quite an impact on the men,\" I told her sincerely.\n\nAs we pulled into the parking lot in front of the clubhouse, Rhiannon turned to me and said, \"We need to change our tactics a little tonight. We need to split up and mingle with the people here. That will let me do what I need to do.\"\n\n\"Sounds good to me,\" I told her.\n\nWhen we walked onto the patio area where the supper was being held, I could tell immediately that we'd both been right. Once again, most of the men just openly stared as Rhiannon walked by. The wives were a bit more subtle, but I heard more than one comment about Rhiannon's outfit that evening. Several of the bolder women made a point of asking her where she'd found her clothes, and Rhiannon was soon cheerfully exchanging shopping tips with them.\n\nAfter a bit of mingling, she and I got back together to eat. \"Having any luck?\" I asked her quietly. \n\n\"Oh, I've been a very busy girl,\" she said seriously. \"I've learned ever so much about what the wives think about the situation with you, Melanie and Frank. More importantly, I've been making life miserable for your ex. I've also been flirting pretty heavily with her fianc\u00e9, and she didn't like that one bit.\" \n\nI just grinned. It was obvious that Rhiannon knew exactly which buttons to push.\n\nI was chatting with one of my team mates when Melanie walked by and motioned to me. Curious, I followed her to see what she wanted. When she turned to face me, I could see that her face was red with anger. \"Well it looks like you've wasted no time getting back into the dating game,\" she said huffily.\n\n\"I didn't realize there was a mandatory waiting period,\" I said sarcastically.\n\n\"Yeah? Well it looks to me like you're way out of your league with that one, Michael. Where the hell did you find her? I never met her when we were married.\"\n\n\"I met her through work,\" I said blandly.\n\n\"Well I'd watch out if I were you. She looks like a lot more than you can handle.\"\n\nI couldn't resist. \"You're wrong about that, Melanie, I handle her every chance I get.\"\n\n\"Is that so?\" she said hotly. \"Well you'd better keep her away from Frank!\" And with that she stormed off.\n\nI smiled to myself. Everything was going exactly the way I'd hoped.\n\nJust then I caught sight of Penny carrying a tray of food. I knew she was on the entertainment committee but I hadn't known if she'd be feeling well enough to come tonight. I rushed over and grabbed her arm. She flushed when she saw me.",
        "\"I'm so glad you're feeling better,\" I told her. \"You should have called me to let me know you felt well enough to come tonight.\"\n\n\"I guess I wasn't sure until the last minute, Michael. Besides, I figured you'd be here with your new girlfriend, and I didn't want to bother you.\"\n\nJust then, Rhiannon walked by, laughing and talking with one of my teammates. \"And I see that I was right,\" Penny went on with a scowl on her face. \n\nShe started to walk away, but I grabbed her arm again. \"Wait, Penny, we need to talk about our next match.\"\n\nShe hesitated and then apparently made a decision. \"About that, Michael, things have gotten really busy for me lately, and, well, I've decided to drop mixed doubles and just focus on the women's team.\"\n\nI was shocked. \"You can't do that, Penny,\" I blurted out. \"You're my partner. Who will I find to play with?\"\n\nPenny looked over my shoulder, and when I looked around, I saw Rhiannon standing there. \"You'll find somebody, Michael,\" Penny said. \"Now, please let me go. I need to get this food out.\" When I released her arm she darted away.\n\nRhiannon took my hand and walked with me toward a vacant table. Once we were seated, she leaned over and whispered, \"Just so you know, that girl is in love with you.\"\n\n\"What! No, that's crazy, she's my tennis partner. She was in Melanie's Pilates course.\"\n\n\"And if I'm not mistaken,\" Rhiannon went on, ignoring me, \"you might just be a little in love with her, too.\"\n\n\"No,\" I protested. \"You're way off base on that. She's just a good friend.\"\n\n\"Maybe,\" she said skeptically. \"In any case, I think we've done all we can for tonight, so let's get out of here.\"\n\nWhen we got back to my house, I asked Rhiannon to fill me in on what had transpired with Melanie and Frank. She gave me a smug little smile. \"I wandered over to where they had their food laid out and sampled it, making complimentary remarks. Melanie obviously didn't appreciate my being there, but there wasn't much she could say. Then I told her how much I liked her outfit, and she was forced to return the compliment. That gave me a chance to tell her where I bought it. I could tell she recognized the clothes and knew how much the outfit must have cost. She didn't say anything, but her eyes were almost green with envy.\"\n\n\"That sounds like Melanie,\" I said. \"She's definitely into fashion, and prides herself on her taste in clothing.\"\n\n\"Just then,\" Rhiannon continued, \"one of the other ladies asked Melanie for her help in the kitchen, and though she didn't want to, she had to leave me alone with Frank. Once she was gone, I reached over and tried another sample of their dish.\"\n\nAs she spoke, Rhiannon re-enacted what she had done. She bent over at the waist and her blouse fell away, revealing her ample breasts barely restrained by a flimsy bra. Then she made a little scooping motion with her finger, stuck it in her mouth and, staring at me all the while, sucked on it so lasciviously that I could feel the heat.\n\nShe straightened up and grinned at me, clearly aware of the impact she'd made. \"Once I had Frank's attention, I began to flirt with him in earnest. I asked him if he'd played football, and that gave him a chance to boast a little. While he was doing that, I reached over and rubbed his chest. I commented on how much bigger he is than you, and I told him I liked big men.\" She snickered. \"I thought he was going to come right there at the table.\"\n\n\"Wow!\" I said. \"No wonder Melanie was so hostile!\"\n\n\"I do what I can,\" she said with obvious false modesty.\n\n\"And I can't believe that Frank would believe you were coming on to him,\" I added.\n\nShe laughed derisively. \"Guys like Frank are so full of themselves that it would never occur to them to question a woman's interest. What's so ironic is that they're usually the worst lovers.\"\n\nI had to grin at that. If what Rhiannon said was true, it would serve Melanie right.\n\nI handed her her envelope. \"Do you think we're ready for the next stage?\" I asked her.\n\n\"Definitely. Your club's dance will be perfect for what we've got planned.\" Then she turned and headed for the front door.\n\n\"What? No attempted seduction tonight?\" I asked her with a smile.\n\nShe grinned back at me over her shoulder. \"I wouldn't think of it.\" Then she turned and gave a little twitch of her hips that sent a jolt through my loins.\n\nAfter she'd gone, I opened a can of beer and sat down to think about what was happening. On the one hand, I felt really good about how well the honey trap was working. Even though Melanie didn't want me anymore, I knew that she was less than happy about how quickly I'd found someone to replace her, and even more discomfited because her replacement was way hotter than Melanie would ever be.\n\nAll that was really gratifying, yet I couldn't help feeling down about the situation with Penny. \"Could Rhiannon have been right?\" I wondered. \"Could I really have feelings for Penny?\" I'd liked her right from the first time Melanie had introduced us. Likewise, I'd found her attractive: slim, athletic and graceful, with an engaging, outgoing personality. But I'd always been careful to keep our relationship strictly as friends and tennis partners because of Melanie. And I'd been sure that that was the way Penny wanted it too, especially while she was getting over the loss of her husband.\n\nI thought about what Rhiannon had said about Penny. That couldn't be true, could it? If Penny was interested in me, why was she avoiding me like the plague? And why did that bother me so much? For that matter, why had I repeatedly turned down the hottest woman I was likely ever to meet in my life? Could my feelings for Penny be a part of that?\n\nFinally I gave up and went to bed. I didn't know the answers to my questions, and even if I had, I still wouldn't have known what to do about them. I decided that the best thing for me was to stay the course, keeping focused on the plan I'd set in motion.\n\nThe annual spring dance at the club was a popular event that always drew a large crowd. The ladies used the dance as an occasion to dress up, and the men grudgingly wore their sports coat; some even donned ties. I was counting on Frank and Marlene to make an appearance. \n\nI'd clued Rhiannon in on what to expect, and I was curious to see what she'd be wearing for the climax of our plan tonight. So I was surprised and disappointed to see her get out of her car wearing jeans and a t-shirt. Admittedly, they were the tightest jeans I'd ever seen on a woman and the t-shirt clung lewdly to her bra-less breasts, but I had still expected something different.\n\nMy face must have given me away because she patted it as she brushed by me. \"You didn't think I was going to risk my dress driving over here, did you? Just let me use your bedroom for a little while and then I'll be ready to go.\"\n\nI had already put on my sports coat and slacks, so I puttered around impatiently in the den while she got dressed. \"Damn,\" I chuckled to myself, \"it's almost like we're an old married couple.\"\n\nAfter a few minutes, her voice came floating out to me. \"Michael, can you come in here? I need your help with something.\"\n\nI walked back and opened the door to the bedroom. Oh my Lord! Rhiannon was standing there in the sexiest underwear I'd ever seen. Her strapless bra and panties were a matching chocolate brown accented by an off-white lace trim that served to draw attention to the curve of her breasts and the sensuous vee between her legs. Her stockings were the same deep brown color, and they were held up by a garter belt that drew further attention to her most intimate parts.\n\nShe made a half step in her stilettos and twirled around to reveal that her panties were actually a thong that revealed the full cheeks of her ass.\n\nShe turned back to face me. \"Will I do?\" she asked with a little smile.\n\nI couldn't help myself -- I took a step toward her. But she stopped me with a smile and an upraised hand. \"No, no, not now. I can't afford to have you mess this up. So now that I have your approval, get out of here and let me put my dress on.\"\n\nI think I staggered walking back out to the den.\n\nA few minutes later she emerged. This time she was wearing a strapless dress that was the same off-white color as the trim on her lingerie. The color contrasted perfectly with her hair. As she walked across the floor, I realized that the dress must have been custom made for her because the fabric seemed to flow over her limbs like water. I could clearly see the definition of her thighs with every step, and when she turned, her buttocks flexed in clear detail. The slit in the side of the dress came up to just below her stocking top, and when she stood the right way, her perfect leg was revealed to devastating effect. Of course it didn't help my blood pressure that I knew exactly what she wearing underneath her gown.\n\nI swallowed hard. \"I think you may cause some heart attacks tonight,\" I told her, and I wasn't being facetious.\n\nShe simply smiled at me and extended her arm so that I could escort her out the door.\n\nFor the dance, the patio area at the club had been cleared and paper lanterns had been strung overhead. It was kind of cheesy, but I found myself enjoying the effect of the soft light and tinkling music. Rhiannon slipped into my arms to dance, and I was not surprised to find that she was a far better dancer than I. As we moved together, she rested her head on my shoulder, and at that moment I decided I didn't care if she was a working girl. I just enjoyed the feeling of her body against mine and the pleasure of her company.\n\nShe raised her head and pulled back far enough to look at me. \"You know, this suburban living isn't so bad. A girl could get used to it.\" \n\nBefore I could respond, she stiffened. \"Uh-oh, battle stations!\"\n\nI turned in time to see Frank Calhoun headed our way, dragging an obviously reluctant Melanie with him. \"Hello, Rhiannon, hello, Michael,\" he boomed out. \"So glad you decided to join us this evening. How about switching partners for a dance or two?\"\n\nWhen I acceded, he whirled Rhiannon away, leaving me and an obviously uncomfortable Melanie standing there. I held out my arms to her. \"Care for a dance, for old times' sake?\"\n\nShe reluctantly agreed, and as a new song started to play, I began to dance with her. It was an interesting experience: I'd loved this woman and been married to her for ten years. Yet after what had happened, the only thing left in me was an intense desire to make her feel what she'd done to me. \n\n\"So was our marriage really that bad?\" I asked.\n\nShe sighed. \"No, Michael, it wasn't like that at all. We had some good years and some good times. But then things settled down into a routine, and after a while I just didn't feel very excited about our relationship any more. When Frank came along and made it so obvious how much he wanted me, I just got swept up in it all. I really fell hard, Michael. It felt just like when I was back in college.\"\n\nShe looked up at me. \"I didn't want to hurt you, Michael, but I had to do what was right for me. Can you understand that?\"\n\n\"I understand,\" I said bitterly, \"you decided to trade up.\"\n\n\"I didn't mean it like that,\" she said defensively.\n\n\"That's okay,\" I said, \"I've traded up too.\"\n\nShe winced, remembering who I was dating now, and I felt a measure of gratification. If everything went right later, that was only going to get better.\n\nI looked up to see Frank and Rhiannon walking toward us arm in arm. \"Here's your date back, Michael,\" Frank said with a little smirk. \"Have a nice night.\" Then he walked away with Melanie struggling to catch up.\n\nRhiannon and I resumed dancing. \"How did it go?\" I whispered in her ear.\n\nI could almost hear the grin in her voice. \"The hook is well and truly set,\" she said. \"He's convinced that I've got the hots for him. He's going to make some excuse to Melanie and we're going to meet back at the clubhouse after everyone has left.\"\n\n\"I'm just a little nervous about that part. The timing is going to have to be perfect,\" I told her.\n\n\"You just leave that to me. Women know all about such things.\" Then she licked my ear and I shuddered helplessly.\n\nAs the night went on, I noticed that the people were beginning to thin out pretty quickly. I guess I must have been looking around, because Rhiannon caught me. \"Sorry, Michael,\" she said. \"I don't think Penny came tonight.\"\n\n\"Am I that transparent?\" I asked her.\n\n\"Like glass,\" she said with a little smile.\n\nWhen we got back to my house, I reached in my pocket and handed Rhiannon another envelope. \"I may not get a chance to give you this later,\" I told her, \"and I wanted to make sure you got it OK.\"\n\nShe took it almost reluctantly, I thought. She looked at me for a moment, and then her face changed. The sexual goddess somehow disappeared, leaving a real, albeit still beautiful woman. \"This has been the most unusual assignment I've ever had,\" she said, \"and you're unlike any client I've ever had. It's been a little frustrating at times\" \u2013 I blushed \u2013 \"but I've thoroughly enjoyed it.\"\n\nI took both her hands in mine. \"When I set out to get revenge, I knew I needed someone with remarkable attributes,\" I replied. \"But I never expected I would find someone like you, and I'll never forget you.\" \n\nI stepped forward suddenly and kissed her on the lips. She held it for a few seconds, and then stepped back abruptly. She blinked her eyes rapidly several times and then said hastily, \"Mustn't mess up my lipstick.\"\n\nThen she glanced down at the jewel-encrusted watch around her wrist and added, \"It's almost time; we need to get going. Give me exactly thirty minutes.\" With that, she went out the door, got in her car and drove away.\n\nI stood there for a minute and then made a decision. Rhiannon and I hadn't talked about this and I hoped I didn't screw everything up, but I had to take that risk. I pulled out my cellphone.\n\nShe must have recognized my number. \"Michael, why are you calling at this hour?\"\n\n\"Penny, I'm about to ask you the biggest favor of my life. Please, please, don't ask any questions. Just meet me at the clubhouse in thirty minutes.\"\n\n\"What's going on, Michael? What's this all about?\"\n\n\"Please, Penny,\" I begged, \"I don't have time to explain. Please trust me. Just come in thirty minutes. I'm sorry, I have to go now.\" I hung up.\n\nAs I set out walking toward the clubhouse, I wondered if she'd come. It was a slim chance, but I figured it was the only chance I had. \n\nWhen I reached the parking lot, there were two cars parked there. I pulled out my cellphone again and made another call.\n\n\"Frank?\" came Melanie's angry voice through the phone, \"where are you?\"\n\n\"It's not Frank,\" I said, \"it's Michael.\"\n\n\"Michael! What do you want, and why are you calling so late?\" she demanded.\n\n\"I'm calling because I know where Frank is. He's with Rhiannon.\"\n\n\"What!\" she shrieked. \"Where are they?\"\n\n\"Listen,\" I said, \"just meet me at the clubhouse as fast as you can.\" Then I hung up.\n\nFrank's house was several blocks away from the clubhouse, but she must have sprinted because I soon spotted her running through someone's back yard. I intercepted her before she reached the clubhouse.\n\n\"Where is he?\" she raged.\n\n\"Quiet!\" I commanded, grabbing her wrist. \"You've got to be quiet so we can catch them.\"\n\nI led her to the door to the clubhouse, which was unlocked, and we stepped across the threshold on tiptoes. As we walked into the lounge, we could hear murmurs and the rustling of clothing. By the dim light filtering through the windows I could see Melanie's eyes grow wide. Quickly I put my hand over her mouth to keep her silent, and then pointed to the light switch on the wall. She nodded her understanding and we tiptoed over to it. I flipped on the switch and the room was instantly flooded with light.\n\nWith a startled yell, Frank tried to spring up, but with his pants around his knees he tripped and fell on the floor. He scrambled to his feet again, frantically pulling his pants up. \n\nBehind him, Rhiannon sprang up from where she'd been lying on the couch. Her dress was draped over the back of the sofa, and as she arose, she pulled her bra back over her exposed breast. She stood there dressed only in her outrageous underwear, and there could be no doubt in anyone's mind what had been going on.\n\nI had to hold Melanie back as she began to scream at Frank. \"You bastard, how could you do this to me? We're supposed to get married!\"\n\nRhiannon clung to Frank's arm, cowering behind him in the face of Melanie's wrath. Now that he had his pants on, Frank's confidence returned. He glanced boldly at me and then turned to Rhiannon and asked her, \"What do you want to do now, baby?\"\n\n\"Oh, Frank,\" she replied in a little girl's voice, \"I just want to be with you.\" As she clung tightly to him, he put his arm around her protectively. Then he turned back to face us. Despite Melanie's distress, his first words were addressed to me.\n\n\"Well, Michael, it looks like you've lost another woman.\"\n\nI didn't say a word, but Melanie shrieked. \"What about us, Frank? What about us?\"\n\nThe big man turned to her. \"Listen, Melanie, we had a good thing for a while, but it would never have lasted. Now I've found someone better and I'm going to be devoting all my time to her.\"\n\nHe glanced back at Rhiannon and then turned to Melanie. \"You can't blame a guy for wanting to trade up, can you?\"\n\nEven in her pain and anger, Melanie couldn't help but glance guiltily at me when she heard those words.\n\nRhiannon turned around and deftly slipped on her dress. Then she turned back and put her arms around Frank's neck. He bent over and kissed her. \"Come on, baby, let's get out of here,\" he said, tugging her toward the door.\n\n\"You go ahead, Frank,\" she said, \"I have a few things I need to say to Michael. Besides I don't want to leave my car here. Look, meet me at this bar.\" She reached into her purse, pulled out a slip of paper and hastily wrote down an address. \"I'll be right behind you, honey,\" she added, stroking the front of his pants and giving him a passionate kiss.\n\nHe looked at her doubtfully. \"Are you sure you're going to be OK?\" He asked.\n\n\"I'm sure, honey. Michael won't hurt me; he's not that kind of guy.\"\n\n\"Yeah,\" Frank chuckled, \"I guess you're right.\" With that he headed out the door, and we heard him drive away.\n\nWhile our attention was on Frank, Melanie managed to wriggle out of my grasp. She screamed, \"You bitch!\" and ran at Rhiannon with her claws extended. Instead of flinching, Rhiannon calmly stood her ground. When Melanie reached her, Rhiannon took a quick step to the side, grabbed one Melanie's outstretched arms and fluidly twisted it behind her back.\n\nShe winked at me. \"I knew that self-defense class would come in handy.\" When Melanie continued to struggle, Rhiannon told her harshly, \"If you don't calm down, I'll be forced to dislocate your shoulder.\"\n\nMelanie stopped fighting and Rhiannon pushed her away to face her. \"Listen, Melanie, there are a few things you need to know,\" she said. \"I could care less about your Neanderthal ex-fianc\u00e9, and I have absolutely no intention of joining him at the bar where he's headed.\"\n\nMelanie was dumbfounded. \"But, but why . . .?\"\n\n\"Why did I seduce him? Because that's my profession: I'm a paid escort. I've been with dozens of guys like Frank. They all think they're God's gift to women, and they're always on the lookout for the next piece of ass. Do you think he loved you? The only thing he really loved was the chance to finally beat Michael at something. I'm sure he loved screwing you, but he loved screwing Michael over even more. So Michael hired me to get a little payback from Frank, and at the same time to show you how it feels when a lover is unfaithful. It hurts, doesn't it?\"\n\nMelanie screamed at that, and then lunged for me. But before I could react, a figure flashed in front of me and shouldered Melanie off her feet. She sprawled awkwardly on the floor. Penny stood over her with her hands clenched. \"You deserve that, Melanie. After what you did to Michael, you deserve a lot more.\" Melanie just lay there and began to sob. It looked to me like her feelings were hurt more than her body.",
        "Penny turned to face me, and I saw that tears were running down her face. \"Is that really true?\" she asked me. \"Is she really not your girlfriend?\"\n\n\"No,\" I told her solemnly, \"she was my partner in the honey trap we set for Frank and Melanie, but nothing more.\"\n\n\"But she's so beautiful,\" Penny protested. \"I could never compete with someone like her.\"\n\nRhiannon walked over and put her hands on Penny's shoulders. \"You silly girl, I was the one who never had a chance. He only had eyes for you.\"\n\nPenny looked over at me again. \"You mean you never even . . .\"\n\nRhiannon interceded again. \"No, Penny, he never did. I could never get his mind off you long enough to get his hands on me. And believe me, I gave him the opportunity.\"\n\nPenny didn't say anything, but she looked at me with shining eyes.\n\nRhiannon grinned at us both. \"I think it's time I got out of here. I've had harder assignments than this, but somehow this one has worn me out.\"\n\nAt that moment, Melanie picked herself up off the floor. \"What about me? Where do I go? I can't go back to Frank's house, not after what's happened.\"\n\nPenny looked at her thoughtfully. \"I don't know what you're going to do tomorrow, but you can sleep at my house tonight. I'm going to go home with Michael.\" With that she kissed me soundly. I took her hand and decided not to let it go.\n\nBut something was bugging me, and I turned back to Rhiannon. \"What about Frank? Where did you send him anyway?\"\n\nShe laughed. \"That was the address of a gay bar I know. I wonder how long he'll stay there before he realizes I'm not coming?\"\n\nThen her face lost its smile and she looked at me intently. \"Good luck, Michael. You're a special man, and I won't forget you.\" She leaned forward and gave me a gentle kiss. I felt Penny grip my hand even tighter.\n\nThen Rhiannon turned to Penny, and her face assumed a fierce expression. \"You treat him right, you understand me? If I ever hear you haven't, I'll come back, and this time I won't take no for an answer.\"\n\nThe fierce expression left her face, to be replaced by a look I later realized was sadness. She reached out and patted my cheek. \"But I don't think I'm going to get that lucky.\"\n\nThen she reached into her purse and stuffed something in my hand. \"Goodbye,\" she said, and then turned and walked out the door, her hips swiveling magnificently. I looked down at my hand. It held four unopened envelopes."
    ],
    "authorname": "FrancisMacomber",
    "tags": [
        "cheating",
        "adultery",
        "escort",
        "true love"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-honey-trap"
}