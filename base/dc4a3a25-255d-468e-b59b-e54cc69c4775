{
    "title": "Is She Smiling at Me? Pt. 04 Ch. 02",
    "pages": [
        "This story is the second and final chapter of the fourth installment of the \"Is She Smiling at Me?\" series. For clarity, that only means the end of part four, not the end of the series. As dearly as I wish I could say any part of the following is based on actual events it is, in its entirety, a work of fiction. Any resemblance to real people is purely coincidental. I love hearing feedback from my readers, please feel free to leave your comments and suggestions. Thanks, and enjoy.\n\n* * * * *\n\nI awoke to the morning light creeping into the room around the edges of the curtains over the window. Rolling over onto my stomach, I discovered myself alone in the big bed, about the same time I became acutely aware of my raging morning wood as it pressed into the mattress. I laid there for a bit, trying to decide between getting up and going back to sleep, part of me wishing Liz was next to me to help quell my throbbing erection. Eventually, I made up my mind and rolled out of bed, slipping into my pajama bottoms and heading for the washroom.\n\nStubborn as always, my cock remained rock-hard even after I did my business, tenting the front of my pajamas as I tucked it back inside. I found Liz sitting on the couch with a book and a cup of coffee, her hair pulled back in a short ponytail, wearing my sandstone dress shirt from the night before and a pair of black ankle socks. Her new diamond tennis necklace still adorned her slender neck, sparkling in the morning light. She smiled brightly when she noticed me, her big doe eyes twinkling with joy. She looked so damn cute, and the adoration in her gaze sent my heart aflutter.\n\n\"Morning, baby!\" She exclaimed happily, song in her voice as she put her book down.\n\n\"Hey, gorgeous.\" I answered as I slid next to her on the couch, putting an arm around her and leaning in kiss her cheek.\n\n\"Mmm.\" She vocalized with a giggle as her hand found my cock through the thin material of my bottoms.\n\nLiz was not one to let an erection go to waste and needed no prompting anytime an adamant morning boner refused to subside on its own. She snuggled into me as her fingers found the button on my fly, deftly undoing it and reaching inside to pull my hard cock free. I let out a sigh as her hand wrapped around me, gently stroking in a soft, lazy manner befitting a quiet weekend morning.\n\n\"I love that you're always hard in the morning.\" Liz said softly.\n\n\"I love that you love it.\" I smiled down at her. \"Hey, where's Alex?\"\n\n\"She had to go into the office to put out some fires, you know how it is. She promised she'd be back by the afternoon.\" She answered distractedly as she stared at my cock in her dainty hand.\n\n\"I guess we'll have to figure out how to pass the time on our own.\" I grinned.\n\nLiz giggled again and looked up at me, biting her lower lip with a playful gleam in her eyes. She released me from her grip and leaned back against the arm rest, lifting her feet to my lap and taking my throbbing dick between her sock-covered toes. The material felt cool with a slightly rough texture against me and I moaned quietly as I watched her expertly jerk me with her tiny feet. Liz's footjobs had become one of my greatest pleasures in life, and fortunately for me she seemed to enjoy giving them as much as I enjoyed receiving them.\n\nDrinking in the sight of Liz's adorable feet, I stared in wonder as she stroked me, her socks accentuating the sexy curvature of her ankles, her toes wrapped around my shaft through the thin, black material. She was softly vocalizing her delight in muted moans and giggles, her mouth partly open as if she were deriving intense pleasure from her efforts. Watching her gave rise to my hunger; I wanted to be inside her, to see her eyes go wide and hear her gasp as I penetrated her, to make her yelp as I drove myself into her depths forcefully. I let her continue jerking me with her feet until my desire to have her could be suppressed no longer.\n\nLifting one of Liz's legs behind me I leaned into her, pushing my shirt up over her hips as my lips met hers, pleased to find her nude under the shirt. I kissed her intensely, slipping my tongue into her mouth as my hand slid up her side to fondle her ample breasts. She met my passion as she kissed me back, arching her back and pressing herself into me. Her excitement was obvious as I felt her hard cock against my stomach, warm and firm on my skin. Taking her member in my hand, I gave her a firm squeeze and stroked her slowly while our tongues explored each other's mouths.\n\nLiz shuddered at the sensation of my hand on her, breaking the kiss and touching her forehead to mine. She bit her lower lip and looked up at me, her animal need shining through in her eyes. I sat up, pulling her along with me so she was straddling my lap, and continued stroking her with one hand while I began unbuttoning the shirt with the other. When I'd gone far enough to grant access to her chest, I pulled the shirt open, exposing her glorious tits, and nuzzled my face against her, kissing and sucking at her nipples.\n\nWith a whimper of delight, Liz threw her head back and grinded herself into my lap, her perineum rubbing against my throbbing dick. I jerked her cock and worshipped her breasts, kneading and squeezing her taut little ass with my free hand while our bodies expressed our love for each other. Liz was alive at my touch, shuddering, grinding and moaning with increasing desire.\n\n\"Oh, God, Matt...\" She groaned, desperation dripping from her lips, \"I need you inside me.\"\n\n\"Get the lube?\"\n\n\"Mm-mm.\" She shook her head, an unfocused look in her eye as her hunger consumed her.\n\nLiz spit a wad of saliva into her hand as she shifted herself back, reaching down to stroke me, spreading her spit over my hard cock until it glistened wetly in the morning light. She lifted herself and positioned me at her hole, smiling at me adoringly as she sat back down, pushing her ass onto me. I felt the resistance build as her sphincter slowly engulfed the head of my dick until the tension broke and I slipped inside her. Liz gasped, eyes and mouth wide open as she slid down on me until she was fully seated on my lap. She felt warm and tight as her ass swallowed the length of me and I moaned softly as I entered her. We sat there motionless for a moment while Liz adjusted to my intrusion, embraced in warm intimacy until her eyes fluttered open and she smiled happily at me.\n\n\"God, I love you so much.\" Liz beamed, her face alight with joy.\n\n\"I love you, baby.\" I whispered back.\n\nWith that Liz raised her hips, sliding all the way up until I nearly slipped out of her, then driving herself back down forcefully, both of us moaning at the pleasure it caused us. She repeated the action several time, slowly up and then quickly down, impaling herself on me over and over. I gripped her firm ass with one hand and felt her smooth back with the other as we writhed in ecstasy, eventually falling into a rhythm as we made passionate love on the couch.\n\nI watched Liz's tits bounce as she rode me, moaning and grunting as her tight ass slid up and down on my turgid cock, alternating pace and forcefulness as she controlled the action, fucking herself on me with reckless abandon. After a while she leaned backwards, putting her hands on my knees for support, thrusting her hips back onto me with increasing fervor. Her chest heaved with her effort, big beautiful breasts on full display, her hard cock spinning as it poked out from the bottom of the half-way unbuttoned shirt. She looked unforgivably sexy in that moment as she used her body to pleasure us both.\n\nLiz's cock was streaming precum, leaving wet smears against my stomach and her thighs as it spun and bounced to the tune of her movements, glistening strands of thick, clear fluid hanging from her slit. She watched me as I wiped a glob from her head with my thumb and sucked it clean, delighting in the sweet taste of my beautiful lover. As if it were possible, the display made her even more wild with desire, and she pushed back into me fast and hard, whimpering and crying out desperately.\n\nSoon, her ecstasy mounted; her cries hit a crescendo and I felt her tense, her ass contracting powerfully on my cock as she squirted a rope on cum onto my stomach. I pushed myself back into her as she came, pulling her by the hips and driving as deep as I could into her bowels. She whimpered loudly, her eyes shut tight and her movement became erratic as her load spilled from her onto me, thick gobs of her cum streaming out of her until she was empty and trembling. Wanting to taste her, I ran my hand over my stomach, collecting her semen on my fingers and sucking them into my mouth, relishing the warm, salty experience of Liz's essence. She gasped in arousal, leaning forward to kiss me before I could swallow. We made out passionately, sharing her load with delighted groans and giggles, all the while she rocked gently on my cock.\n\n\"Can I taste you?\" Liz asked when we broke the kiss, her lips wet and glistening with her cum.\n\n\"Of course, baby.\" I smiled back at her.\n\nWithout hesitation, Liz lifted herself off me and slid down between my legs, pushing herself down the length of my cock until I was buried in her throat. I gasped as I felt her tonsils stretch over me, and again when she immediately pulled all the way back to my head and forced herself down again. It didn't take long, with Liz deepthroating the entirety of my throbbing dick over and over at a rapid pace, before I felt my impending orgasm begin to swell inside my pelvis.\n\nLiz read the signs and backed off just before I erupted. With my head in her mouth, she took hold of my shaft and jerked me furiously, emitting muffled moans that added a vibrating sensation to the mix. She was staring up at me, eyes twinkling joyfully, when I grunted and the first jet of cum pulsed from my cock. I watched her eyes roll back as I filled her mouth, cumming powerfully as I tensed, the orgasm rumbling through me while my dick twitched spastically, emptying against Liz's swirling tongue.\n\nWhen my orgasm had subsided, Liz pulled off for just a second, swallowing emphatically before taking me all the way down her throat again. The post-orgasm sensitivity was almost too much to bear and I chuckled at the intense pleasure verging almost on discomfort. She looked up at me with a playful gleam in her eyes and winked cutely at me, holding still with her nose pressed firm into my trimmed pubes, the muscles of her throat coaxing that last few drops out of me. I laughed again and smiled down at her until she finally pulled off, taking me in her hand and gently smacking me against her grinning lips.\n\n\"Come here, beautiful.\" I grinned, reaching down to help her up and seating her on my lap.\n\nI pulled her in close, kissing her affectionately and tasting myself on her tongue. I sighed contentedly and hugged her tight while she rested her head on my shoulder. We sat like that for some time, cuddling and sharing our happiness in the warm afterglow, Liz softly kissing my neck occasionally. Eventually we got up to take a shower and get on with the day; there were still some last-minute preparations to take care of before the party later.\n\n*****\n\nSex was in the air. Throughout the apartment, young, attractive people mingled, danced and drank. The music pumped through the speakers as the acrid smell of cigarette smoke blended with the skunky pine aroma of cannabis drifting in through the open balcony door. From my position behind the makeshift bar, I saw Alex and Liz grinding against each other near the couch.\n\nAlex wore a black sweater dress with three-quarter length sleeves and cutouts at the upper arms, showing off her milky-white and adorably freckled shoulders. The garment clung to her slender figure snugly and came down just below her taut little ass, her naked legs stretching on for miles below the hem. Her long, mahogany hair was down, flowing over her shoulders and down her back in waves of rich red-brown.\n\nLiz had chosen a cute, light-coral cap sleeve dress with a petticoat skirt that flared at her waist. The lacy material overlayed a floral pattern over a solid background and the modest neckline came down just low enough to show off her new necklace. It pleased me that she hadn't taken it off since I fastened it around her neck the night before. She likewise wore her hair down in a cute, messy-by-design tangle of brunette locks that nearly reached her elegant shoulders.\n\nMy girls were dancing sexily, both with a drink in hand, smiling adoringly at each other as they gyrated to the music. I watched them for a moment, struck, as always, by the magic between them. Their energy and love radiated out, illuminating the room in a warm light one felt more than saw.\n\n\"Well don't you look sharp?\" A bold, playful voice snapped me out of my reverie.\n\nIndeed I did, if I did say so myself. I wore a black vest over a white dress shirt and black tie I had rented, in my best impression of a bartender at fancy, high-end establishment. I had the idea mostly as a joke, but my girls seemed to appreciate the change in presentation and embarrassed me with cat calls and playful teasing when they first saw me dressed thus.\n\nThe owner of the voice was a very attractive, exotic looking woman who appeared to be in her late twenties. Her olive-toned complexion gave the impression of a healthy tan, indicative of a Mediterranean heritage. Wavy locks of dark hair, highlighted with tawny notes of honey, framed her pretty features and her eyes were a striking hazel with tinges of gold and burnt orange around the edges of the iris, twinkling as she smiled confidently at me. She was slightly thicker than either of my girls, though not at all overweight; just a little curvier than the petite Liz or slender Alex. A fitted black tank top stretched over her ample breasts and stopped short of her waist, showing off a few inches of stomach and a pierced belly button. A charcoal heather maxi skirt completed the outfit; tight against her body with a long slit down one side, displaying a portion of smooth leg to about mid-thigh.\n\n\"Hi, I'm Matt.\" I smiled at the complement, extending my hand to shake. \"Get you something to drink?\"\n\n\"Nice to meet you Matt,\" She said, looking me up and down as she shook my hand. \"I'm Alyssa, and I'd love a drink.\"\n\n\"Well, we have a menu...\" I trailed off, gesturing to a printed sheet of paper that outlined a few dozen cocktails.\n\n\"You look like you know what you're doing, surprise me.\" Alyssa said, grinning as she twirled a strand of hair around a finger.\n\nI realized she was flirting with me, and my eyes flickered over to Alex and Liz as I got to work mixing a drink. They were still dancing on the other side of the room, oblivious to my situation.\n\n\"Tell me Matt, how'd you get the bartender gig?\"\n\n\"Oh, I'm with Alex and Liz, I kinda just volunteered.\" I answered as I filled a shaker with ice.\n\n\"That Matt! You're the new beau!\" She exclaimed with sudden realization. \"Alex said you were cute, but I had no idea.\"\n\nCaught off guard by the fact I was already a familiar name to her, I smiled awkwardly as I prepared a cocktail of vodka, coconut rum, melon liqueur and pineapple juice. I rotated the glass as I drizzled grenadine down the inside, leaving a spiral of thick red syrup to run down through the chartreuse concoction.\n\n\"How do you know Alex?\" I inquired, feeling self-conscious and eager to take the attention off me as I handed her the drink.\n\n\"We went to college together, been friends ever since.\" She replied, watching me as she took a sip of the drink. \"This is amazing!\"\n\n\"Guess I do know what I'm doing.\" I chuckled.\n\n\"Hmm, I guess so. I'm going to go say hi to Alex.\" She turned away, pausing to flash a flirtatious smile as she scanned me up and down once more. \"I look forward to seeing more of you.\"\n\nI shook my head as she walked away, unable to help but take note of the way her skirt hugged what was, by all appearances, a phenomenal ass. When Alex noticed her friend, her face lit up in a wide grin, and I heard her exclaim 'Ally!' over the music. I watched the two embrace, then Alyssa greeted Liz with the same familiar enthusiasm, the three of them talking excitedly.\n\nA cute blonde girl in a brightly colored sun dress whom I had served earlier diverted my attention, looking for her second blue raspberry martini. When I looked back to girls, I caught all three of them looking over at me smiling; apparently I was a topic of conversation. A few minutes later, Liz broke away and headed my way. She came around my side of the bar and leaned into me, stretching up to kiss me on the cheek.\n\n\"I guess you met Ally?\" Liz asked.\n\n\"Made her that drink, yup.\"\n\n\"Thought so.\"\n\n\"What's her story?\"\n\n\"She was friends with Alex when I met her.\" Liz shrugged. \"We all used to be pretty close but we don't see her a lot anymore. Life, I guess. Make me something to drink?\"\n\n\"How about a French kiss?\" I suggested.\n\n\"Hmm,\" She grinned mischievously, \"Don't mind if I do.\"\n\nLiz reached up to take hold of my tie, pulling me down and kissing me intensely. She pressed herself into me as our tongues met, and I held her close by her slender waist while she gyrated to the music.\n\n\"I meant the drink.\" I smiled at her when she pulled away.\n\n\"I know you did.\" She winked cutely.\n\n\"Good thing I didn't suggest a blowjob.\" I said with a wry smile.\n\nLiz giggled and we high-fived, immature dorks that we were. I threw the cocktail together; a mix of Chambord, creme de cacao, vodka and cream. I gave it a quick shake over ice and poured it into a martini glass, floating a raspberry in the center for garnish. Liz took a sip and hummed her delight, her big eyes going wide as she tasted the drink.\n\n\"Holy shit, that's good.\" She said with a sigh, making me laugh as I poured myself a glass of Jameson.\n\nLiz kept me company at the bar for a while. I talked her through making a few drinks for some of the guests while we hung out, flirting and dancing. She disappeared while I was making an Old Fashioned for a younger hipster type, returning shortly after with a hand-written sign that read 'Bartender Off Duty' and propped it up on the table. She took me by the hand and dragged me away, insisting I couldn't spend the whole night making drinks. I dutifully, if not somewhat awkwardly, followed Liz around while she did her social butterfly routine, introducing me to her friends and acquaintances.\n\nAs the evening began to verge on night, my friend Josh showed up. I got him a beer from the fridge and introduced him to my girls, who were doubly pleased to meet him when I explained it was him whom I had bought their diamond jewelry from. Alex shook his hand, while the ever-excitable Liz threw herself at him in a big hug. After the exchange of pleasantries, Josh wanted to go out to the balcony to smoke. I poured myself another glass of whiskey and accompanied him outside.\n\n\"You know,\" Josh said around a cigarette between his lips as he paused to light it, \"I fuckin' hate you.\"\n\nI laughed heartily, leaning against the railing. The sun was just beginning to set, disappearing behind the city skyline, and the day's heat had finally broke. A breeze blew onto the balcony, sucking the smoke from Josh's cigarette off into dusky oblivion, the sound of the wind somewhat drowning out the noise of the busy street down below. I sipped my whiskey, grinning proudly.\n\n\"No doubt about it. I am the luckiest man on the planet.\" I replied reflectively.\n\nWe talked and joked while Josh smoked his cigarette down to the filter. When we went back inside, I got us a couple more beers from the kitchen, bumping into Alex making herself a drink at the bar on my way out. I came up behind her and put an arm around her stomach, pulling her into me with an affectionate squeeze. When she leaned back into me, gyrating her firm ass against my groin to the music, I kissed her pale cheek and held her close as we swayed to the beat.",
        "\"Hey, baby?\" I spoke softly near her ear.\n\n\"Hmm?\" She replied, leaning her head back against my shoulder.\n\n\"How do you like our odds of getting Josh laid tonight?\"\n\nAlex had a way with other women. Something about her confidence and natural, effortless sexuality rubbed off on them. I couldn't explain it, but I'd become aware of it in passing. When I'd first met the girls it was Liz who had picked me up, but if it was a woman one was after, Alex was like the ultimate wing-man. If anyone could help a guy make a good impression, it was her. She looked over at Josh, then seemed to scan the room before leaning back against me again.\n\n\"I'd say it would be hard not to.\" She nodded in the direction of the cute blonde in the sun dress who favored my blue raspberry martinis. The girl appeared to be alone, and possibly a little buzzed.\n\n\"That's my girl.\" I chuckled, patting her on her firm ass.\n\n\"Go make me whatever she's drinking, I got this.\" She instructed, heading across the room to where Josh was hanging out with Liz and Alyssa.\n\nI whipped up another martini and brought it over, handing it to Alex.\n\n\"That's for you.\" Alex said, giving the drink to Josh. \"Come with me, there's someone I want you to meet.\"\n\nJosh eyed the blue drink in his hand, then looked at me with intrigue; I just smiled and winked, handing him his beer as Alex led him away. When I noticed Liz giving me an inquisitive look, I grinned and raised my eyebrows suggestively, making her giggle. Putting an arm around her, we watched Alex lead Josh across the room and make introductions. We couldn't hear anything over the music or the din of our guests, but we saw Josh hand the blonde the martini, earning a bright smile from the girl. Alex hung around for a few minutes, then artfully broke away, leaving the two alone.\n\n\"Yeah,\" She began with a tone of confident boredom, affecting a yawn as if she'd just performed an effortless task. \"They'll be out of here within the hour.\"\n\n\"Jesus.\" I laughed, grinning amusedly.\n\nI talked with Alyssa and the girls for a while, eventually resuming my post at the bar. Setting Liz's sign off to the side, I looked across the room, seeing Josh dancing with the blonde as guests started coming around for drink orders. When I finished making a vanilla mojito for a pretty black girl I recognized as one of the waitresses at Liz's restaurant, I noticed Ally and the girls looking over at me again. Alex and Liz giggled and turned away when they saw me looking, but Ally lingered for a moment; that provocative smile back on her face. I wondered what my girls were saying about me that warranted the attention, but I was quickly distracted by another cocktail request.\n\n*****\n\nIt was late, or rather, very early morning. I had ditched my tie and vest and abandoned my post at the bar to hang out with the girls. We were sitting on the couch, Alex and Liz on either side of me, working on a round of drinks. The party was definitely winding down and guests had begun to taper off; more than a few who had come alone left in pairs and only a handful of hardcore party animals remained. Alex was off on her prediction for Josh and the blonde, but only by about a half-hour; they had indeed left together a few hours ago. I'd saluted my friend like a soldier going off to battle when he left. He laughed and shook his head, muttering something that sounded a lot like 'fucker.'\n\n\"Do you ever miss pussy, Matt?\" Alex asked casually, a playful twinkle in her brilliant green eyes as she took a sip of her drink.\n\nI nearly sprayed whiskey out of my nose. I sputtered and coughed, taken aback as I tried to wrap my head around the question. I knew Alex well enough to suspect there was a subtext here, and that knowledge carried an overwhelming connotation, but on the other hand, it could be genuine random curiosity, spurred on by a night of watching attractive young people pairing off and pawing over each other.\n\n\"What?!\" I replied incredulously, stalling for time while my mind grappled with the nature of the question.\n\nLiz had been watching my reaction closely and giggled at my visible discomfort.\n\n\"You can tell us,\" Alex laughed, \"You're not going to hurt our feelings.\"\n\n\"You girls are more than I ever dreamed of. You're more than I deserve and you're all that I'll ever need.\" I really did mean it, but I was also attempting to deflect.\n\n\"Aww!\" Liz gushed.\n\n\"That's sweet.\" Alex smiled warmly, \"But you're avoiding the question; do you ever miss pussy?\"\n\nI looked to Liz, she was staring up at me with an amused grin on her face and her eyebrows raised, accentuating her already big doe eyes as she waited for my answer. I realized I was trapped; there was no getting out of this one.\n\n\"Fuck. Alright, look, cards on the table? Eating pussy is one of my favorite things in the world. But I'm not going to say I miss it. I meant what I just said, I'm the luckiest man in the world to have you two, I wouldn't trade that for anything. It doesn't even cross my mind.\"\n\n\"Who said anything about trade?\" Alex replied with a mischievous smile. \"We were thinking more like include.\"\n\n\"Oh, Christ.\" I said with a grin as the full realization of the direction this was going set in.\n\n\"Ally is really into you.\" Liz chimed in.\n\nI looked at Alex with one eyebrow raised.\n\n\"We...\" She said, pointing a finger back and forth between Liz and herself, \"Used to fool around with her occasionally. She suggested we get the band back together for the night. Liz and I are game if you are.\"\n\nI turned back to Liz, she was biting her lower lip and nodding emphatically. She looked so cute and excited I had to chuckle.\n\n\"I mean, what did you think I was going to say to that? Yes, of course I'm in.\" I smiled.\n\nLiz squealed and giggled, hugging me and kissing me on the cheek. Early on in my relationship with the girls I had a lot of 'is this really happening' moments, but over the past few months I'd reached a point where nothing seemed to surprise me anymore. I did still feel a little overwhelmed about the proposal, but Alex and Liz wanted this and hell, I'd be lying if I said I wasn't excited about it too.\n\n\"Perfect.\" Alex grinned, taking me by the hand and pulling me up from the couch. \"Come dance with her.\"\n\nLooking over my shoulder, Liz was giggling amusedly as Alex led me across the room to where Alyssa was talking to some of the last few stragglers still hanging around. She leaned into her friend and whispered something in her ear. I watched Ally's eyes light up with excitement before flickering over to me, her face cracking into a wide smile. Alex led us away from the group, leaning in to kiss me quickly before pushing Ally and I together with a giggle.\n\n\"I'm so glad you agreed to this.\" Alyssa said, sliding into me as my hands found her hips.\n\n\"Did you really think I'd say no?\" I asked with an eyebrow raised, feeling the curvature of her body as it pressed against me.\n\n\"I definitely hoped not!\" She replied with a sultry smile. \"From what I hear, if you eat pussy half as good as you suck dick I'm in for a treat.\"\n\n\"You have no idea.\" I grinned. I knew my oral game was on point and this was no time for modesty.\n\n\"Cocky! I like it!\" She laughed as I felt a thigh slip between my legs, her hip pushing firmly into my bulge.\n\nAlyssa put her arms around my shoulders and drew me closer, her soft tits squishing against my chest while her striking eyes gazed into mine hungrily. I knew she wanted to kiss me and I suddenly felt self-conscious, unsure of what was considered apropos. Was this kosher? I glanced past her to Alex and Liz on the couch to get a read on the situation. The girls were watching us intently; Liz was beaming joyfully and Alex winked at me with a warm smile.\n\n'Fuck it.' I thought, taking their air of general happiness as encouragement. I leaned toward Alyssa, pulling her into me firmly as my lips met hers, giving her my best as my tongue grazed her lip, slipping inside to coax hers out to play. She emitted a soft, muffled moan, grinding herself into me with the sudden, primal desire my kissing seemed to produce in women. I felt my cock come to life, inflating against Ally's hip while we danced and made out.\n\n\"Yeah...\" Alyssa said softly as we parted, her eyes remaining closed for a moment before slowly opening, somewhat glazed with a dreamy look about her. \"You know what you're doing.\"\n\nWhen the song ended, I took her hand and led her back to the girls. On some subconscious level I think I felt a vestigial twinge of guilt. I had always been monogamous by nature, and I still was really, even if it was to two women, but being with Alex and Liz had also opened my mind to a different set of experiences. Still, old hang-ups die hard and I felt an underlying sense of awkwardness having made out with one woman in front of the two I loved. Certainly, it was all in my head, as both Alex and Liz looked pleased with what they had seen, Liz kissing me adoringly when I sat next to her.\n\n\"What do you guys say we make this party just like old times?\" Alyssa asked with a playful smile, producing a joint and wiggling it before us.\n\n\"Old times?\" I inquired quietly into Liz ear.\n\n\"We used to smoke a lot of weed.\" She giggled, smiling brightly at me.\n\n\"Fuck it, I'm in.\" Alex answered without hesitation.\n\nThree sets of eyes turned on me, as if I were the deciding factor.\n\n\"Oh Christ,\" I chuckled, \"I haven't smoked pot in forever.\"\n\n\"Pot?!\" Liz blurted out, \"Oh, okay, grandpa. Come on, we're getting you stoned.\"\n\nI laughed as Liz stood up in front of me, tugging at my arm to pull me up off the couch. The four of us went out to the balcony and sat on the patio chairs we kept outside, Liz setting down on my thigh with one arm around my shoulder. I smiled at her and gave her a quick kiss as I heard a lighter flick, briefly illuminating the dark space outside the apartment. We talked as we passed the joint around, when it was my turn, I coughed at the heavy smoke straining my lungs and handed it off to a giggling Liz. I felt the drug come on immediately, a floating, airy sensation settling over me.\n\n\"I'm impressed with your bartending, Matt,\" Alyssa said, her voice heavy with smoke as she exhaled a plume of billowing clouds. \"But doesn't it take some of the fun out of a party, working all night?\"\n\n\"Heh, I mean it's a lot of work serving people all night, but it's fun. I like doing it.\" I answered, trying not to trip over my words as the THC in my system slowed my mind.\n\nLiz was giggling excessively; clearly the drug was working its magic on her as well.\n\n\"What's so funny?\" Alyssa laughed at Liz's uncontrollable giggle-fit.\n\n\"That's what she said!\" Liz blurted out laughing.\n\n\"Pound it.\" I said, breaking into laughter myself as I raised a hand to fist-bump Liz.\n\n\"You guys are the worst, you know that right?\" Alex tried to accuse, but even she was laughing; probably more at how hilarious Liz had found her own joke than the joke itself.\n\n\"I think their adorable!\" Ally argued.\n\n\"Don't encourage them.\" Alex replied, her face illuminating in a warm, orange glow as she took a puff on the joint.\n\nWe stayed outside for some time after we finished the joint, talking and flirting. Alyssa and the girls seemed to pick up right wherever they had left off, speaking with the ease of old friends from times gone by. I could see why the girls got along with her; she was a warm and friendly personality with a confident, playful demeanor not unlike Alex, though certainly more of an edge to her. All the while, Liz was getting frisky; teasingly grazing her hand against me through my pants and giggling playfully when she felt my cock twitch in response. When we finally went back inside, the last of our guests had left and the four of us were alone in the apartment.\n\nAlyssa grabbed Alex, spinning her around and sliding up to her sensually, gyrating to the music as she pressed herself into the slender, redhead beauty. I sat on the couch, head swimming with the effects of the weed as I watched the girls dance. Liz sat next to me, turning into me and sliding one smooth leg over mine as she leaned against me, her hand drifting up inside my untucked shirt and teasing around my abs with a feather-light touch of her fingertips.\n\nWe watched Alex and Ally grinding against each other, Ally slowly hiking up Alex's dress as their hips swayed sexily. Alex slid a hand up her friends back, looking into her eyes and pulling her in slowly until their lips met. They kissed deep and slow, Ally finding Alex's ass and squeezing her firmly, humping her leg as they made out. I watching in awe until I felt I warm, wet tongue on my earlobe, making me shudder in delight. When I turned to Liz, she was staring at me, love and hunger beaming from her big, slightly reddened eyes. I kissed her enthusiastically, feeling her melt into me as our tongues met and rolled over each other.\n\nI felt my belt pull free as Liz and I kissed. In a fluid, practiced motion, she popped the button on my waistband and unzipped my fly, slipping into my pants and taking my hard cock in her hand, gently squeezing me through my underwear. I moaned softly; the sensuality of her touch heightened by the drug as she stroked me slowly. I broke off the kiss, lifting my butt to awkwardly pull my pants out from under me while Liz giggled, helping to tug them down. My erection sprung free, standing straight up in the open air as I got the pants past my knees, kicking them off and settling back down next to Liz.\n\nLiz took me in her hand once more, jerking me sensually as she leaned into me and we turned our attention back to the other two. Alyssa had Alex's dress up to her hips and her big, uncut cock pulled out the side of panties, her tanned hand contrasting noticeably against Alex's alabaster foreskin as she stroked her. Alex turned Ally around, pulling her head back by her throat and nibbling her ear while Ally gasped, pressing her ass into Alex's pelvis.\n\nAlex looked over at us, a sultry smile on her face at the sight of Liz stroking my cock while we watched them. She crouched, sliding herself down Ally's back erotically, tugging the edges of her friend's skirt down over her hips. A skimpy black thong was revealed as she slid the garment to the floor. When Alex bit the voluptuous ass in her face, Alyssa yelped and giggled, looking over her shoulder before flashing us an alluring smile, her eyes lingering on my dick while Liz jerked me. Alex stood back up, pressing herself into Ally once more, her engorged cock nestled between full, curvy cheeks while they danced.\n\n\"Come here, baby.\" I smiled at Liz, pulling her onto my lap so she was straddling me.\n\nI slid my hands up her dress, lifting it as I ran my hands up her sides, discovering first a pair of tight, white panties, then a matching bra as I pulled her dress off over her head. Liz's excitement was obvious; her five-inch cock straining against the material that kept it flattened to her hip. She smiled down at me happily; arousal heavy in her eyes when I rubbed my cock against hers through her cotton underwear. I pulled the panties aside at the leg, not to free her member, but to shove my own inside next to hers before pulling her into me and kissing her passionately.\n\nLiz squeezed us together through her panties, massaging our throbbing cocks together while I found the clasp of her bra, unhooking it with a quick pinch of my fingers. Her ample tits bounced free, liberated from their confines as I slid the straps over her shoulders. I leaned her back, kneading one breast with my hand and seeking out her pink nipple with my mouth. Liz moaned softly while I sucked her little nub of flesh, flicking my tongue and gently nibbling until it stood erect before moving on to the next one.\n\nA sharp gasp and low moan from Alex drew our attention. We looked to see Alyssa down on her knees with Alex's panties down to her ankles and her eight-inches buried halfway down Ally's throat. Alex was gripping Ally's head firmly, her pale fingers woven through her friend's dark hair while she fucked her face. Eyes closed and mouth open in an expression of unabated pleasure, Alex's hips rolled sensually as she pushed her cock through Ally's lips.\n\n\"Hmm. Get up beautiful.\" I said, smacking Liz firmly on her taut little ass.\n\nWatching Ally blow Alex made me want my own taste of cock. When Liz got off my lap and stood between my legs, I grabbed her butt with both hands, kissing her flat, smooth stomach and nuzzling my face into her. I kissed down her abdomen and over her panties, kissing and licking her bulge. I felt her warmth coming through as my lips wrapped around her, tonguing her dick through the thin material. I teased her thusly for a bit before reaching up for her waistband, slowly pulling down until her rigid cock sprung free, pointing straight out at my face, tipped with a glistening bead of precum.\n\nI looked up at Liz as I took her in my hand, staring into her eyes and extending my tongue until I made contact. The flavor of her fluid spread across my taste buds, driving me wild for her cock. I took her in my mouth with a hungry moan, feeling her firmness against my tongue as I sucked her adoringly. I was enthralled with the taste and sensation of my beautiful Liz's dick as I worshipped her lovingly. I felt so erotic, so sensual sliding my lips up and down on her while my tongue worked the smooth underside of her member, rewarded with the divine sweetness of her precum. I realized in that moment that I was relearning a forgotten lesson from my youth; I really enjoyed sex on weed.\n\nThe pot had a dilating effect on my sense of time, further obfuscated by my total immersion in the experience of making love to Liz's cock with my mouth and hearing her gasp and moan in delight. I only snapped back to reality when I felt someone sit next to me, turning to see Alex's sultry grin as she leaned against me, having lost her dress since I had seen her last. Alyssa sat on my other side, wearing only a black bra and matching thong. Liz stepped back, sinking to her knees between my legs to return the favor.\n\n\"Jesus, your eyes are red.\" Alex laughed, looking at me.\n\n\"Well, I am pretty stone- Ah!\" I interrupted myself with a gasp as I felt Liz swallow the entirety of my cock down her throat in a quick, smooth motion.\n\nAlex giggled at my sudden reaction and reached for the back of my head, pulling me in for a kiss. I moaned into her mouth as our tongues met; the feeling of Liz's tight throat massaging my cock was incredible. Alyssa leaned into my other side and I felt a warm, wet tongue against my neck, making me shudder in delight as I made out with Alex. I turned to Ally and her alluring eyes, kissing her deeply and moaning again when Liz started bobbing on me. I felt myself stretch her tonsils over and over, making that distinctive sound as I hit the back of her throat.\n\nAlex and Ally took turns kissing me while the three of us caressed and petted each other. Happy, muffled moans emitted from Liz, broadcasting exuberance in her enjoyment of my throbbing cock. After a few minutes she shifted over to Alex and dove onto her big cock with the same enthusiasm. Alex moaned as Liz swallowed her, mouth open, eyes closed once again in a sexy display of the pleasure she was receiving.\n\nI turned to Alyssa, pulling her leg over my thigh and leaning in to kiss and nibble at the soft flesh of her neck. She moaned softly, her hand finding my cock and squeezing me firmly while I nuzzled her collarbone. I found the clasp of her bra and popped it open with a snap, pulling one of the straps down over her shoulder and leaving a trail of wet kisses in its wake. Ally adjusted herself and slipped the bra over her arms, tossing it aside with a sultry smile. Her breasts were indeed substantial, larger even than Liz's, though somewhat lacking the gravity-defying lift of the younger girl's. Her body was exquisite; curvy in all the right places with hardly any excess.",
        "Sliding a hand up Ally's thigh and over her butt, I kissed her again, probing her mouth with my tongue while I squeezed a round cheek. We made out, listening to Alex's moans and Liz's happy giggles, my fingers drifting teasingly closer to her pussy as I kneaded her ass. I could feel the heat coming off her from between her legs even before I finally reached my goal. Lightly grazing my hand over her through her thong, Alyssa arched her back and gasped at my touch. She felt soft and damp under the thin material, her body alive at my touch as I started rubbing her in earnest.\n\n\"God, I want to taste your pussy.\" I said almost subconsciously, as if the words had escaped my lips without a thought to guide them out.\n\nAlyssa nodded her approval, eyes closed as she leaned against the back of the couch, enjoying me petting her. I gave her a playful smack on the ass and turned back towards Alex. Liz was still on her knees, the full length of Alex's impressive cock concealed in her throat, her big brown eyes gazing up at us adoringly. I leaned over to kiss Alex, coaxing her tongue into my mouth to suck on it, relishing the sensation of her saliva on my lips.\n\n\"We're going to need more room to play, babe.\" I said when we broke off the kiss.\n\n\"Sweetie, get up, we're going to the bedroom.\" Alex instructed Liz, helping her to her feet.\n\nI unbuttoned my shirt on the way to the bedroom, tossing it on the dresser at the same time Liz shimmied out of her panties, wiggling her ass seductively at us as she crawled onto the bed. Alex took Alyssa by the hand and pulled her into bed with her, sitting against the headboard next to Liz with Ally in the middle. Three drop-dead gorgeous women sat there waiting for me; three alluring smiles and three sets of hungry eyes beckoning me to join them.\n\nRealizing I was standing there dumbly gawking at them, I smiled sheepishly and crawled onto the bed. Alex and Liz giggled, familiar with my occasional awkwardness, but Alyssa just watched me with hungry desire as I slid up between her legs. My girls were cuddled up to either side of Ally, kissing her ears and neck while they fondled her, a seething mass of wet lips, soft skin, quiet moans and happy giggles. As I drew near to Ally's thong-covered crotch, I picked up a whiff of her scent wafting up to my nostrils.\n\nIt wasn't until that moment -overwhelmed as I had been previously about the prospect of this new sexual adventure- that it occurred to me just how excited I was about eating Ally's pussy. The aroma of her sex had triggered a desire deep inside me that had gone dormant since I'd met Alex and Liz. It was awake now and it was hungry.\n\nI looked up at Ally, savoring the anticipation that I felt and that she wore on her face looking back at me. I extended my tongue and gingerly grazed against the material of her thong, pressing gently into the soft flesh underneath. She inhaled sharply, biting her lip and smiling down at me with a shudder and a soft gasp when I licked her again. I slid my hands up her hips and hooked my fingers under her thong, pulling it down over her mound. As the underwear peeled away from her body it exposed a neatly trimmed thatch of black pubic hair before she lifted her legs to let me slip the diminutive garment off her, flashing her fleshy clamshell of a cunt for just a moment.\n\nWhen Alyssa put her cute feet back down on either side of me, knees bent and legs spread wide, I got my first good look at my prize. Her pussy was absolutely beautiful. Immaculately groomed, she was perfectly smooth and hairless save for the neat triangle she kept in a soft tuft on her pubis, pointing like an arrow towards her hooded clit. Her outer lips had a swell them to them, just the slightest puffiness, split down the middle by the delicate butterfly wings of her inner lips; pink and fleshy on the inside and darkening towards the edges. Already dripping wet, a glistening film of clear fluid coated her opening, pooling in a thick glob at the bottom of her fleshy folds.\n\nMy go-to move for eating pussy was to open with gentle kisses, just like I would a mouth, building in passion and intensity, working up slowly to the full-on tongue action. Alyssa responded to this as most did; with a surprised and adoring gasp as I made out with her vulva. I let the passion build organically as I lost myself in the experience of going down on Ally, kissing deeper and harder as her taste and smell aroused me to my core. I moaned happily as her juices coated my tongue, lapping her into my mouth hungrily and delighting in her flavor while my rigid cock throbbed, pinned between my abdomen and the mattress.\n\nAs I ate Alyssa with mounting intensity, I refocused my efforts on her clit, kissing and sucking while I moaned my appreciation for her pussy. I pressed my face into her, feeling her wetness spread across my lips, cheeks and chin, wanting her juice all over me. She was moaning ecstatically and arching her back, clearly enjoying my efforts. I looked up at the girls from between Ally's legs, her pubes tickling my nose while I licked her little nub of sensitive flesh. Alex was petting Ally, kneading a breast with one hand as she looked down at me with an erotic grin and amusement in her eyes. Liz had a slightly different expression; her face a mix of awe and total arousal, watching me with her big eyes open wide while she tweaked the nipple on Ally's other tit.\n\nAlyssa was getting close. Her legs and hips trembled intermittently and her breath came in short spurts and heavy pants between whimpers and moans of rapture. I dipped my tongue down once more, slipping deep into her and greedily lapping her sweet juices into my mouth, desperate for another taste of her before she came. When I went back to her clit she reached down and took the back of my head in both hands, pulling me into her and panting heavily. I leaned into it, moaning into her soft folds and shaking my head side to side while I sucked her labia around her clit, flicking my tongue over the magic button vigorously.\n\nThat was the end of that; Ally's thighs squeezed my head tightly as she cried out in ecstasy. I held her hips firmly with both hands, pulling myself into her when her ass lifted off the mattress. She trembled and shook, grinding her pussy into my face as her orgasm ripped through her, nearly screaming her pleasure to the heavens as she vocalized her carnal delight. Her warmth and wetness coated my face while she spasmed and convulsed against me. I didn't miss a beat, attacking her clit aggressively until I sensed the orgasm wane and fade away, finally slowing with the rhythms of her body.\n\n\"Holy fuck...\" Alyssa exclaimed amid heavy panting.\n\nI chuckled from between her legs, kissing her pussy softly and slipping my tongue between her lips to steal another helping of her delectable juices. I was pleased with myself; it seemed I had lived up to my earlier self-assuredness. Alex and Liz were giggling at her reaction and kissing her tenderly as she basked in post-orgasm bliss.\n\n\"Holy fuck,\" Ally repeated, looking at Alex, \"He's really good.\"\n\n\"I'm not surprised.\" Alex answered, winking at me.\n\n\"Sure looked like he knew what he was doing.\" Liz chimed in, sounding amused.\n\n\"Come here.\" Ally said to me, reaching down and pulling me up her body.\n\nI wiped my mouth with the back of my hand, a string of thick, clear fluid connected my chin to the wet smear on my hand. I crawled on top of Alyssa as she pulled me in, kissing me passionately as gratuitous thanks for my efforts. Not that I didn't appreciate it, but I already had my mind set on my reward. While we kissed, I sought out her opening, hands free and blind, with the head of my stiff cock. I found it on the first try and pushed into her slowly, feeling my glans penetrate her soft folds easily until I was just inside her, plunging the rest of myself all the way into her body with a smooth stroke.\n\nAlyssa gasped again when I bottomed out inside her before collecting herself and smiling up at me. I shifted forward, righting myself so I was kneeling as I pushed her knees towards her for better access. I watched her lips hug my shaft as I pulled out nearly to the end and plunged into her once more, moaning my own delight. Her silky-soft pussy felt warm and tight against my aching cock as I fucked her with increasing intensity, that familiar wet squelching sound emanating from her sex as I pounded into her.\n\nLiz caught my eye; she was staring at me while she watched me fucking Ally's cunt, her mouth slightly open in phantom pleasure as if she could feel the ghost of me inside her ass. I smiled at her and reached for her hand, pulling her towards me. She giggled happily and shifted onto her knees, crawling up to my side so I could lean down to kiss her. I pistoned in and out of Ally, hearing her moan while I kissed Liz passionately, pulling her against me as our tongues danced together in our mouths.\n\n\"God, you smell like pussy.\" She giggled when we broke the kiss, her big, twinkling eyes staring into mine adoringly.\n\nI reached around Liz and squeezed her taut ass cheek with one hand, walking my fingers towards her asshole teasingly while I fucked Ally. She moaned softly when I found her tight little knot, pressing into her with one finger as I held her against my side, my lips finding hers once more for another intense, passionate kiss.\n\n\"I want to taste her on you.\" Liz whispered sensually into my ear when we parted, a gleeful twinkle in her eyes.\n\nHappy to oblige her, I gave a few sharp thrusts into Ally, who yelped in pleasure as she bounced against the mattress, before pulling out and rolling over to Ally's side. Liz slid between my legs and took my cock in her hand, licking the cream that had collected around the base near my balls. I watched her tongue glide all over my turgid member, cleaning me thoroughly while she hummed and moaned, before finally taking me in her mouth and sucking me hungrily.\n\nAlex took the opportunity to get a taste of her own and rolled on top of Alyssa, kissing her neck, tits and stomach as she worked her way down the other girl's body sensually. I watched as she positioned herself between Ally's legs and dove face first into her pussy, giggling happily. I had never had the benefit of getting to see one gorgeous woman eating out another first-hand before, but watching Alex devour her friend while Liz swallowed my cock was just about the pinnacle of eroticism.\n\nI watched the show for some time, enjoying Liz's mouth on me while Alex kissed, licked and sucked Ally's pussy. Her brilliant green eyes sparkled up at us, nose buried in Alyssa's tangle of black pubes, occasionally shaking her head side to side aggressively and eliciting throaty whimpers and loud moans from the other girl. Finally, I reached over Ally, pausing to kiss her and fondle a breast, and retrieved the bottle of lube from the nightstand.\n\n\"Sit on my cock, beautiful.\" I instructed Liz, handing her the bottle.\n\nThere was zero hesitation as Liz came off my throbbing cock with a wet slurp, a string of saliva connecting me to her lips, and poured a dollop of lube onto me, massaging the slippery fluid into me with a few quick strokes. She crawled up to my pelvis and straddled me, lowering herself onto my cock as I felt the resistance build against me until the muscles of her tight little hole yielded and gave way. Liz gasped as I slipped inside her, sliding down until her ass pressed against me and immediately starting rocking, making short, deep strokes on my hard dick. I moaned at the sensation of her tight velvet ass squeezing me, looking up at her beautiful body while she bounced on my pelvis, her face a mask of pure pleasure.\n\nBeside us, Alex crawled on top of Alyssa, her pale face glistening with pussy juice, kissing her friend deeply as she penetrated her. Ally cried out when Alex's big cock drove all the way inside her, reaching for her friends face and holding her in her hands, smiling up at her. A symphony of erotic moans, cries, yelps and whimpers filled the room as I fucked Liz and Alex fucked Ally, each of us lost in our infused ecstasies.\n\nEventually, Alex pulled out and got up on her knees, turning Alyssa over to fuck her from behind. She pulled Ally's hips up and pushed her face down to the mattress roughly, earning a surprised gasp from the other girl before she slid her big cock into Ally's pussy once more. Liz had been watching them while she rode me and leaned over to kiss her lover, my girls making out desperately, all moist lips and wet tongues amid soft, muffled moans while Alex pounded into Alyssa.\n\nI pushed myself up on one arm, wrapping the other around Liz's waist, and flipped her over onto her back, her face next to Ally's. The move had caused me to slip out of her and she whimpered in disappointment at the sudden emptiness, moaning in delight when I quickly pushed into her again. Alex was pounding Alyssa mercilessly, holding her hips and fucking her hard and fast, loud and rapid slapping noises filling the room as her pelvis smacked into Ally's ass over and over. I took it as a challenge and pushed Liz's knees up towards her, righting myself so I was side by side with Alex and matched her pace.\n\nAlex looked at me and smiled while we each pounded our respective partners, Liz and Ally crying out uncontrollably. I leaned over to give Alex a quick, passionate kiss before getting back to the task at hand, furiously pumping into the tight ass before me. Precum streamed out of Liz's rigid cock, leaving a wet trail up to her belly-button as it flowed out of her, a string of the glistening fluid connecting the puddle to her glans, her member bouncing to the cadence of my powerful thrusts.\n\nAlyssa was yelping and whimpering intensely, another orgasm building inside her as Alex fucked her like a wild animal, driving into her hard and desperate. The sheer, primal eroticism was sensory overload and I felt myself rapidly nearing climax as well. Liz was looking up at me happily, wincing in pleasure when I slammed into her hard and deep, looking intolerably adorable. I leaned down to her, wanting to be close to her when I came, moaning and kissing her intensely.\n\nI jerked into Liz roughly as my orgasm thundered over me, grunting into her mouth while our tongues entwined in a wet embrace. I felt my cock pulse as I tensed, shooting rope after rope of cum into her bowels, emptying myself into her in a series of powerful spasms amid wave after wave of orgasmic ecstasy. Liz giggled and hugged me tight, kissing my neck when I finally collapsed against her, sweaty and panting heavily. When I lifted my head to look at her, she was grinning from ear to ear, her big eyes sparkling with light and love, radiating adoration. I kissed her again, intimate and passionate as I slowly withdrew from her ass, moaning as she squeezed me tight, milking the last drops of cum from my cock as I slipped out of her.\n\nNext to us, Alex was pounding the second climax out of Ally, grunting and moaning, a fine mist of perspiration coated her pale skin giving her a sexy, shiny glow. Alyssa let out a long, wavering cry, her body shaking as Alex held her hips tightly, slamming into her in rapid succession as the dark-haired beauty trembled and convulsed with the force of her orgasm. I rolled off Liz, cuddling up to her side and taking her in my hand, stroking her tenderly while watched the other two with rapt attention.\n\nFinally, it was Alex's turn. Watching her, I knew from experience that she was close to the edge. No sooner than Alyssa's orgasm had come and gone I saw her face contort in a visage of agonizing rapture. Alex cried out and moaned loudly, her strokes into Ally suddenly slowing in tempo, though maintaining their intensity. She held the other girls hips firmly, thrusting herself deep into Ally's pussy crazily while she came, her grunts of ecstasy tapering off until she slouched down against Alyssa's back, trying to catch her breath.\n\nWhen Alex pulled out, she shifted over to let Alyssa roll over onto her back. Liz was up instantly, crawling down between Ally's legs as Alex got out of her way and moved up alongside me. Liz dove hungrily into Ally's crotch, licking and sucking our lover's cum from her well-used pussy with wet smacking sounds. Alyssa moaned her appreciation as Liz cleaned her voraciously, strands of thick, white cum trailing from her lips and chin to Ally's pussy every time she pulled back to examine her work before diving back in with an indulgent moan. When Liz's eyes flickered up to Alex and I, realizing we were watching her, she giggled happily and shook her face against Alyssa's pussy.\n\n\"God, I forgot what a dirty little slut you are.\" Ally purred at Liz when she finally backed off, apparently satisfied that she had sucked all the cum she was going to get out of the messy pussy before her.\n\nLiz giggled and blushed profusely, her face a wet smear of bodily fluids, evidentially quite flattered to be addressed that way. I took note of her enjoyment at being called a slut, filing the information away for later use.\n\n\"Come here, cutie.\" Alyssa purred again, reaching down for Liz and pulling the smaller girl up beside her, kissing her deeply.\n\nAlyssa shifted over to make room for Liz, rolling on top of her and kissing her neck as she reached down to take Liz's hard cock in her hand. Ally kissed and licked down Liz's petite body, pausing to suck and nibble her nipples playfully before resuming her journey, finally reaching Liz's cock, kissing and lightly smacking it against her lips. Liz was looking down at the older girl with wonderment in her eyes as she watched Ally take her into her mouth, humming her delight at the sensation.\n\n\"Oh God...\" Liz moaned softly when Alyssa began sliding up and down her throbbing erection.\n\nAlex and I looked at each other and smiled. It made us happy to see Liz enjoying the pleasure she was receiving. I hugged Alex, snuggling into her neck for a moment and gave her a quick kiss before getting up and moving to the other side of the bed so we could each be on either side of Liz. We cuddled into her, nuzzling her lovingly as we kissed and fondled her all over. With the rest of us satisfied, all the attention was on adorable Liz, moaning and gasping in ecstasy as the three of us concentrated on pleasuring her. It filled my heart with joy to see her being treated this way; if anyone deserved that much love and attention it was surely Liz.\n\nAlyssa sucked her cock with mounting enthusiasm, making wet slurping sounds as she bobbed up and down. Alex was busy sucking a nipple while I kneaded a supple breast and nibbled an earlobe, making Liz squirm while she whimpered and giggled. My face was very close to hers as I watched her, her brow knitted up and relaxed, mouth opening and closing, eyelids fluttering while her body processed the pleasure we were administering. I realized I could smell her sweet breath as she panted and moaned; a mix of cum, pussy and just plain Liz, and it aroused me all over again in a way I hadn't expected. I nuzzled her lovingly, smiling to myself.\n\nWhen Liz finally exploded, I had sensed it coming; her body tensing as her breath came in short, shallow spurts. What had come as a surprise was seeing Alyssa drive herself balls-deep onto Liz's cock when the first cry of ecstasy escaped my lover's lips. Alex and I moaned and giggled along with her, sharing in her pleasure while she emptied herself down Ally's throat. Liz grabbed Alyssa's head mid orgasm, thrusting her hips against the older girl's mouth, crying out in unbridled delight until her orgasm faded away and her ass fell back down to the mattress.\n\n\"Hmm.\" Alyssa vocalized, sliding of Liz's still throbbing cock and licking her lips.\n\n\"Wow...\" Liz uttered, breathing heavily as she tried to catch her breath.\n\nI chuckled and hugged her, squeezing her tight and kissing her cheek before laying my head down next to hers. I felt Alex's hand on my bicep, pulling us together as the three of us cuddled together in a warm embrace. Alyssa kissed around Liz's smooth pelvis a few times and layed her head down on the smaller girl's abdomen, purring contentedly. All four of us lay quietly for several minutes, snuggling and sighing, enshrouded in an aura of post-orgasm intimacy.",
        "\"Who else really needs a drink right now?\" Liz finally piped up, breaking the silence.\n\n\"Right here.\" I raised a hand, the other two girls laughing.\n\nOne by one, we rolled out of bed. Liz found my shirt on the dresser and slipped it on, buttoning just enough to give the illusion of modesty. Alex slipped into a nightgown-sized t-shirt before going to the closet and pulling out her sexy blue floral print satin robe for Alyssa. I pulled on a pair of pajama pants and followed the girls out to the living room, telling them to relax while I took everyone's drink order.\n\nThe three of them were cuddled together on the couch when I returned with the drinks. I had a passing moment of disbelief, a familiar sense from early on in my relationship with Alex and Liz, that I had just had sex with these three gorgeous women. They each smiled up at me as I passed out their glasses, my girls shifting over to make room for me between them. We talked and flirted, laughing and teasing while we sipped our drinks.\n\nThe effects of the weed had worn off significantly by now and everyone was tired. It wasn't until I looked out the balcony and noticed the sky lightening that I realized we'd been up all-night fucking. The offer was made to Alyssa to spend the night, or rather morning, but she insisted on taking an Uber home. I got the sense that she didn't want to intrude; we had all had our fun and now she wanted to leave us lovers to our own devices. I respected her for that.\n\nEventually, we finished our drinks and Ally collected her clothes scattered around the apartment. She went to the bathroom to get dressed and somewhat straightened up, though there's no cure for that 'I've been up all-night partying' look. She called for a ride and bid us farewell, hugging and kissing each of us goodbye. When she hugged me, she whispered an appreciative compliment about my pussy eating skills, smiling flirtatiously when she drew away. I smiled back at her and kissed her on the cheek, and then she was gone.\n\n\"Jesus,\" I groaned as the girls and I made ready for bed, \"That was pretty amazing.\"\n\nLiz beamed happily at me from behind tired eyes, stretching up to kiss me while Alex chuckled.\n\n\"We could do more of that, you know. Ally would be down for it.\" Alex said suggestively, grinning at Liz and I as we crawled into bed together.\n\n\"Hmm,\" Liz hummed, looking half asleep and fully adorable. \"Talk later. Sleep now.\"\n\nAlex and I laughed, and both girls cuddled up to my chest, sighing contentedly. I kissed each of them, they kissed each other, and almost immediately I drifted off to sleep under the warm auspice of soft, smooth flesh that was my beautiful, amazing girls."
    ],
    "authorname": "loveinbriefs",
    "tags": [
        "bareback",
        "transexual",
        "redhead",
        "cum",
        "lesbian",
        "group sex",
        "pussy eating",
        "oral sex",
        "creampie",
        "pussy"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/is-she-smiling-at-me-pt-04-ch-02"
}