{
    "title": "A Long Walk Home Ch. 10",
    "pages": [
        " Here's a little extra chapter this week. Real life has made it impossible for me to answer emails and comments as I've wanted to. So here's a treat to make up for it :-)\n\nMany thanks to mikothebaby for her editing skills and to the Guild and my Tweeps who keep me entertained.\n\nEnjoy! \n\n*\n\nDayton sat shell shocked, disbelief coursing through him. He couldn't believe he'd lost control the way he had, that he'd actually thrown the knife at her. He couldn't believe that he was still alive; that she hadn't retaliated and taken his life as he'd tried to take hers. But the thing he couldn't believe the most was, how at the very last moment, a fraction of a second before the knife had left his hand, he'd changed the angle of his throw.\n\nHe was proficient with knives, an expert even. His aim had been true even if slightly weak from his injuries. The knife was destined to bury itself deep in her throat, incapacitating her long enough to allow him to get a sharper one so he could detach her lovely head from her shoulders. And at the last moment he'd change his angle, enough to merely wound her without leaving her helpless. It was staggering.\n\nThe hate he felt inside him twisted, turned around on itself until it was no longer focused on the vampire, but was directed at him. He'd almost killed Freya and what really was her crime? She had kissed him, shown some attraction to him and said a few uncomplimentary things about Faith. Hardly actions deserving the death he imagined for her.\n\nThose things had hurt him, wounded him deeply but to try and kill her? It was unconscionable. He was better than that, a former Beta who would have laid down his life to protect any member of his pack. He didn't recognise the man he had been a moment ago. \n\nYes, Freya had hurt him but she had also saved his life, cared for him when he couldn't do so himself, cooked him food when she didn't eat, anticipated his every need in her own warped way. Rayne's words came back to him, his friend's appeal on behalf of the vampire.\n\nHe knew now that Rayne could feel other's emotions, that it had been his pain which had first attracted her to him. She had sensed the same pain in the vampire, had been amazed that Freya could hide it so well behind her serene mask. He hadn't wanted to listen to it, hadn't wanted to admit that maybe the vampire did hurt inside, maybe she did understand some of how he felt.\n\nA pair of anguish filled green eyes filled his memory, raw pain in her voice as she damned him to hell. His gut twisted hard and he sucked in a deep breath, turning to look into those same green eyes which were still tinged with a fine circle of red.\n\n\"Your knife,\" Freya remarked calmly, handing him a clean one so he could finish his breakfast, not that he could stomach another bite.\n\n\"Finish it,\" she said in the same calm tone. \"You need to be out of here by tomorrow morning at the latest. You need to regain your strength as quickly as possible.\" She walked back to her chair and sat down again as if nothing untoward had just happened. \n\n\"Why the deadline?\" he finally asked quietly, forcing himself to eat some more, knowing she was right, that he did need to regain his strength quickly.\n\n\"You're interrupting my plans,\" she answered almost absentmindedly, turning a page in her hand to read the next one. \"I have other things to do than care for a wolf who was too stupid to notice a trap.\"\n\nThere was more to it than that. He didn't know how he knew but he did. His wolf was stirring with agitation, unhappy with his actions. Dayton bit into a slice of toast and took a sip of coffee to wash it down.\n\n\"You're wrong,\" he said quietly, pushing his plate away, unable to eat any more. His words and sudden movement had Freya meeting his gaze again with a raised eyebrow.\n\n\"About what?\"\n\nTaking a deep breath, Dayton let it out slowly, swallowing hard. \"About Faith,\" he said so quietly it was almost a whisper. \"She would have kicked my ass if she could see me right now.\" His lips quirked slightly; a hint of warmth entering his eyes.\n\n\"She had a temper that was so hot everyone ducked out of the way when she blew, me faster than anyone else because it was usually my fault.\" A true smile crossed his face, his expression softening completely. \"She hated being looked after and I was a Beta. It was my role to protect everyone and she was the one person I wanted to protect the most. It drove her insane sometimes.\"\n\n\"She sounds as if she was pretty feisty,\" Freya answered in a carefully neutral tone. \"A strong mate for you.\"\n\n\"She was. The best mate ever. She loved life, dived into every new experience without a care in the world. When she laughed my heart sang with joy, when she yelled my heart sang with joy, when we loved I stopped being a single person and joined with her completely, two people living in one soul for the barest fraction of a moment. She was my life.\"\n\n\"And yet you hate her with every fibre of your being.\"\n\nHer statement stunned him. \n\nDenial ripped through him, his mouth opening automatically to protest but nothing came out. He stared at Freya, her words echoing around the room, crashing over him in a wave of raw agony. A choked sound ripped out of him, clawing its way out of his very soul. \n\n\"She left me!\" The words were issued on a raw, primal scream of anguish, guilt and harshness in the air as he admitted the one thing he'd hidden from himself for over fifty years.\n\nFreya watched him crumble, watched the sheer horror on his face as he gave voice to the truth he had hidden from himself for so long. Something cracked deep within her, something splintered as she watched a proud wolf disintegrate before her very eyes. Pain like nothing she had ever experienced before welled up inside her as her wolf bowed his beautiful head and began to sob such awful tears of anguish.\n\nShe sat rooted to the spot, unable to move or offer him any comfort. He didn't want it from her anyway. She would only add to his anguish if she placed her hands on him at that moment. Instead of going to him she forced her limbs to move, retrieved the dishes silently from the table and took them into the kitchen.\n\nLeaning against the wall, hidden from the man in the other room, she closed her eyes tightly and wept silent tears with him, her heart breaking at his anguish. To love was to suffer, to feel nothing but pain and misery. \n\nFor two thousand years she'd done this to her brother, broken Nors' heart over and over again with her actions. She would do so again but it would be the last time he would ever have to suffer the misery she put him through. If she could only tell him that she understood now, how sorry she was for every tear she had ever caused him to shed over her.\n\nIf he only could know that just once she had known the same anguish, the same unrelenting torture of knowing someone she loved was slowly killing themselves, slowly wilting under the pressure of emotions they had hidden from for so long.\n\nListening to Dayton cry, seeing the agony she had put on his face by making him face up to what he'd been hiding from for so long, was the cruellest punishment ever, one that would haunt her until her dying day. But she had to do this for him, had to drag him back to living no matter what it cost her personally. It would only hurt for a short period of time. She could endure it. \n\nHe had stopped weeping by the time she returned to the room, a cup of coffee in both hands. Her face was as serene as ever, her gaze sweeping over the destruction written across his face.\n\n\"She couldn't help it,\" she said quietly. \"I'm sure Faith would have preferred to remain with you rather than leave the mortal world as early as she did.\"\n\nHe took a deep breath, kept his gaze averted from hers even as he reached for the proffered coffee. \"I know,\" he answered hoarsely, amazed at the weight that felt lifted from his shoulders.\n\n\"Your heart hasn't been ready to face it, Dayton. That is why it has taken you so long to admit to your feelings. You can't heal until you admit to the hate, understand the foolishness of it and let Faith go. She is dust. You can deny it all you want but it doesn't make it any less true. Faith is dead and she is never coming back. Accept it.\"\n\nDayton turned his eyes to hers, was once more struck by the red ring of fire around her irises. He knew he had just humiliated himself in front of the one person who couldn't even begin to understand what a true emotion was. And yet she'd said all the right things, pushed through his very last barrier until he was raw with no place left to hide. If she was so unfeeling then how could she know what to do?\n\nHe wanted to hate her for it, strove to find that bitter emotion he'd held so tightly to before, but he couldn't find it. It was as if his tears had washed away every bitter emotion he'd felt for the last fifty years. Instead of hate he actually found himself wanting to thank her. From the moment she'd entered his life she had pushed him relentlessly one way or another. \n\nBecause of her he had returned to the pack, begun the slow reintegration with his family and his people. Because of her he was alive when he should now be dead. Because of her he didn't hate Faith any more for leaving him. He could accept that it was just a horrendous accident; that his beautiful mate had laughed and loved with such wild abandon, that she had given everything to him in the time that they'd had together.\n\nBecause of Freya Eriksson he could finally let his Faith go as his mate would have wanted him to. He could finally start to look towards the future and maybe hope to find someone new to share his life with. \"Why?\"\n\nSomething danced across her face, an emotion so fleeting that he didn't have time to catch what is was before her mask slipped into place.\n\n\"Call it my apology, for taking that which you did not give freely,\" she answered before rising to leave the retreat. \"You should rest some more, Dayton. You can use Nors' room. It's the first on the left through the door.\" The vampire slipped out into the early morning sunshine leaving him alone with his shaken emotions still whirling wildly through his mind.\n\nDayton was confused by her response, still feeling raw as he made his way to the bedrooms, heading towards the room that belonged to her brother. The door directly ahead caught his attention and he wondered if it was Freya's.\n\nJust what was her room like? Who was the real Freya Eriksson? A person's private space reflected their personality more truthfully than anything else did. He was walking towards the closed door before he realised what he was doing, his wolf vocal in a way it hadn't been in a very long time. Reaching out he turned the knob and let the door fall open.\n\nShock rippled through him causing every muscle to tense in his body. His mouth gaped open and he fought to breathe as he stared at row after row of his paintings all one on top of the other. There was barely an inch of wall space between them.\n\nThey were all pieces from his showing in Japan years ago. It had been his best exhibition, a large number of his paintings attracting buyers. From the looks of things Freya Eriksson had been the one who had purchased most of them. Seeing them all together in light of his recent emotional backlash, he could easily see the pain and suffering within each painting, the harshness of each brush stroke like a knife wound.\n\nHis heart turned over in his chest, his thoughts in turmoil. Why did she have all these painting? Why did she surround herself with such misery? Was Rayne correct all along? Was Freya Eriksson really wounded so badly? His artwork seemed to say yes and yet her calm demeanour said otherwise. \n\nThe ring of fire around her eyes concerned him too. He didn't know why he cared at all but he did. There was something so badly wrong here that his wolf was reacting to it, his protective instincts kicking in when they shouldn't. Not for a vampire.\n\nHe was backtracking to the living area, his body aching with the exertion he was putting it under. He needed to rest, needed to gather his strength; but he was suddenly and perplexingly desperate to see Freya, to talk to her, ask her some questions.\n\nHe threw open the door and found her sitting on the steps of the porch. He stopped in surprise, blinking slowly. He had expected her to be miles away and yet she hadn't left the area.\n\n\"You should be resting,\" she said quietly not turning to look at him. \"You need to leave tomorrow. Do I have to drug you again?\"\n\nHe growled loudly before moving to sit carefully on the step beside her. \"I thought you'd realise by now that I don't like being made to do things against my will.\"\n\n\"Sometimes a man needs a little push in the right direction. He can be pigheaded and stubborn and not always know what is best for him.\" Her head tilted to the side and he was once more staring at her eyes and their abnormal glow of red which appeared stronger in the morning sunlight.\n\n\"What does it mean; your eyes?\"\n\nLong dark lashes swept down hiding her gaze before they fluttered open again and she met his. \"Nothing important. Nothing that need concern you.\"\n\nHer evasiveness caused more unease to settle deep within him. \"That's not an acceptable answer, Freya. Not one I'm willing to accept. You've just ripped me to shreds emotionally. I deserve the truth after what you've put me through.\"\n\nPain flickered in her eyes, the first honest emotion he'd witnessed since he'd woken up in her retreat. \"Everyone has their demons, Dayton. You don't have a monopoly on pain and suffering. Everyone selfishly believes that their pain is stronger, that it hurts deeper than anyone else's. The truth; it's all relative. Each person's pain is as strong or as weak as they allow it to be.\"\n\nThere was such hopelessness in her voice that he reached out and caught a lock of thick brown hair, watching the sun glint off the blonde and red streaks hidden within it. It was instinctive to reach out to someone in pain. \"Tell me your pain, Freya. I told you mine. Let me hear what demons haunt you.\"\n\nIt was so tempting, so overwhelming to feel him sit so close to her, to have him touch her voluntarily. Freya wanted to reach out to him, to succumb to his words, to the hypnotic sway in his voice that promised her he would listen to every word she said. No one had ever really listened to her. Nors had tried but their timing had always been wrong.\n\n\"I'm afraid that if you're still here tomorrow I will kill you,\" she answered honestly, her gaze never wavering from his.\n\nHer answer surprised him but it didn't frighten him. \"Why would you do that?\"\n\n\"Because I wouldn't be able to stop myself,\" she whispered, a catch in her voice as her guards tumbled down around her. \"The hunger is crippling. It's tearing me up inside until all I can think about is feeding.\"\n\nThe red fire around her eyes, it all suddenly fell into place. Rayne had mentioned once that when a vampire went hungry for too long their eyes began to glow red. It was a highly dangerous situation because their humanity was lost and they devolved, effectively turning Rogue. The only solution was for their peers to put them down as Weres put down a rabid wolf or cat.\n\nAshleigh's words came back to him too, her certainty that Freya would never return, that Nors believed his sister had left to find some way to die. His conversation with Freya when he'd asked if she was leaving and her cryptic response. It all fell into place and his wolf howled a mournful sound so loud it was all he could hear for a long moment.\n\n\"What have you done?\" he whispered, horrified as her eyes glowed a little redder.\n\n\"I'm tired, Dayton. So very tired of it all,\" she answered quietly a tear rolling down one perfect cheekbone. \"Tired of the memories, of the endless faces of lives I've ruined, lives I've taken. My very first act as a vampire was to slaughter an entire family. I would have killed them to the very last member if Nors hadn't spirited the children away. There was still more than enough for me to drink from, to bathe in their blood and feel their pulses beat their last. It was horrifying but it was glorious too. Heaven and Hell all rolled into one.\"\n\nMore tears fell, silent and yet screaming of an agony that ripped her soul apart. \"I'm a monster and you should get as far away from me as possible, Dayton.\"\n\nHe was horrified at her words, imagining the destruction she had caused and yet he could see her pain, see the self hatred deep within her and knew that if she could go back she would do things differently. But she couldn't go back and she couldn't go on, not until she let go of the past the way she had forced him to let go of his.\n\n\"Let it go, Freya,\" he said firmly tightening his grip in her hair and pulling her face close to his. \"The past can't be changed, you've shown me that. But we can learn from it and move forward. You just need to try.\"\n\n\"I can't,\" she whispered tremulously. \"Not anymore. It's too late for me, Dayton, but it isn't too late for you. Leave while you can. I'll call The Council before I degenerate too far. They'll send a clean up crew and take care of me. You should be as far away as possible before that happens.\"\n\nHis wolf howled furiously, something broke deep within him and he was amazed that there was anything left inside him still to break. He had thought he wanted this woman dead and yet he couldn't walk away from her, couldn't leave her to self destruct the way she was intending.\n\nFight! The word resounded through his head and he heard it in a feminine voice, a tortured voice that had urged him to fight when he lay in a drugged sleep. He'd heard it in Freya's voice. \n\n\"Fight, damn you!\" he growled harshly a second before he ground his lips hard against hers in a kiss so ruthless it brought cuts to both their lips. \"Fight, Freya,\" he whispered against her mouth. \"Don't give in.\" \n\nFor some reason it was suddenly crucial that he save her as he hadn't been able to save Faith. His wolf demanded it. The man he was demanded it. Somehow he had to reach into the soul of this broken woman and will her to fight.\n\nHer sobs wrenched through the morning air, long, wracking sounds that made his wolf howl continuously and his own eyes fill with tears. He kissed her through her sobs, brushed his lips against her wet cheeks over and over again seeking to give her comfort, trying to imbue some of his strength to her. Letting her know, through a wolf's touch that someone cared enough to fight for her.\n\nWith a tortured groan he ripped himself away from her and forced his aching body into the house, grabbing the first sharp knife he could find. He didn't hesitate, didn't stop to think about what he was doing. He drew the blade across the side of his neck quickly and forced her mouth to him. \"Feed, damn you! Fight!\"\n\nDayton's blood filled her mouth, her stomach cramping in agony as the scent of him overcame her. Freya swallowed hard, savouring his precious life's blood and began to pull deeply, ravenously. It had been months since she had fed. \n\nFor years she had hurt herself, holding off feeding for as long as possible, until the agony was so crippling it was an unendurable torture, a fitting punishment for what she was. Years of planning, waiting for the right moment, the time when she would know it would be right to die. As she had known when she had stared into a pair of anguish filled blue eyes that had seen deep inside her and branded her the monster she truly was.\n\nLong torturous months of slowly starving to death engulfed her. It had been excruciating, terrifying, and yet she had persisted, intent on finally having an end to her suffering.\n\nNow she glutted herself unable to stop the pull against his neck. When his wound closed she sank her fangs deep into his tender flesh, feeling him stiffen at her bite and then moan softly as she continued to feed. It was only when he fell limply against her that reason took over and her heart stopped for an instant.",
        "\"No!\" she moaned ripping her fangs from him, catching him as he fell backwards, his face completely ashen. She could hear his heart beating but it was weak, his pulse barely flickering in the side of his neck. Tearing into her wrist she pressed it urgently against his lips, fear rushing through her as she forced her blood into his mouth.\n\nShe had taken too much from him and he was already dangerously weak from his injuries. Her heart thudded painfully as he moaned and swallowed, taking more of her blood inside him. His colour improved, enough for the danger to have passed. For the second time in days, Freya picked Dayton up and carried him into her home.\n\nWhen consciousness returned Dayton found himself lying in a large bed, Freya lying width wise down at the bottom, watching him intently. The first thing he noticed was the red was no longer ringing her irises; the second was the concern on her face mixed with a healthy dose of irritation.\n\n\"I thought you were cured of your death wish,\" she said dryly moving to sit up before she crawled to the top and lay beside him. She rested her head on her bent arm, her green eyes never wavering from his.\n\n\"You bit me,\" he answered slowly turning onto his side to face her. \"I'm still alive so I guess that answers how you healed me before.\" He knew how Weres could become immune to a vampire's venom. She had to have mixed her blood with his to heal him. He was surprised his disgust at the thought didn't surface as it had done earlier.\n\n\"I should have killed you,\" she mused with a frown on her face. \"The belief has always been that time is required for your other injuries to heal before it would be safe to bite you. Though I suppose we don't really know of the exact timing required for it to be truly safe. Both Loretta and Ashleigh had more than one potential fatal injury to them. You had only the one. Maybe that's why you're still breathing.\"\n\nDayton found himself fascinated with the open expression on her face. There was no sign of the cold, closed off woman he was used to seeing. Oddly enough she looked younger which was ridiculous considering she was over two thousand years old.\n\n\"Why would you do such a thing?\" she finally asked; her eyes full of curiosity and confusion.\n\nThere was something quite endearing about the expression on her face, something so soft and approachable about her, that he found himself reaching out and once more catching a lock of her multi coloured hair. \"You do keep telling me I'm a stupid wolf,\" he remarked lightly, his lips twitching slightly as hers did. \"Why did I pass out if it wasn't the venom?\"\n\nAnother frown crossed her exquisite face, fear clouding her suddenly expressive eyes. \"I'm Ancient. We can survive for months without feeding. It had been too long since I'd last fed. I took too much blood and you were already dangerously low from your own injuries. You'll find your strength will take a while to return.\"\n\nHe let out a slow breath. \"That explains why I feel so tired. Was it enough for you?\"\n\nFreya sat up swinging her legs from the bed. \"For now,\" she answered quietly. \"Rest, I'll bring you something to eat and drink. It will help you regain your strength quicker.\"\n\nShe was almost at the door when he stopped her, his gaze intent on her back. \"Did I risk my life needlessly, Freya?\"\n\nShe turned to meet his gaze, feeling so vulnerable with all her barriers down. Only Nors and Ashleigh had ever fought for her before. The wolf before her had not only fought for her he'd been willing to sacrifice himself even if he hadn't realised the foolishness of his actions. There was warmth in his eyes that had never been there before. She could still feel the brand of his lips against hers.\n\n\"I will fight,\" she whispered seeing a strange emotion ripple across his beautiful face. For a moment she thought it was pride but she shook the thought away. Why would Dayton Alexander feel pride in her? Only hours before he had buried a knife in her neck. It would be foolish of her to read anything into his expression just because his caring instincts as a Were Beta were once more coming to the fore.\n\nDayton lay back against the bed feeling so exhausted that he had to close his eyes. His body felt as if he'd gone ten rounds with every Beta in his Pack, his emotional state was less easy to analyse. He had just run a gauntlet of emotions so intense it was a wonder he'd survived them. \n\nLetting Faith go had been pure agony and yet it had also been a blessed relief too, a fact he still felt a bit of guilt over though he knew it was time. Finally releasing the last of his emotions, acknowledging that she was his past had freed something deep within him, something his wolf had been trying to tell him for years but he'd ruthlessly suppressed the animal.\n\nHis wolf's recent activity had oddly been a comfort to him, as if it was lending him the strength to meet his emotional crisis. He'd forgotten what it was like to embrace the animal, to join with it and be one instead of segregating their time into separate entities. He felt tears prick his closed eyelids. He had missed his wolf and was only now just realising how much.\n\nSwallowing against the lump in his throat he forced himself to think about Freya and his reaction to her. The violence of his emotions towards her had been unconscionable. He was not the man who had come looking for her, full of hate and red hot fury. He had never been that man and he couldn't understand why he had felt such a need to protect himself from her.\n\nHis need to make amends was what called to him now. She had saved him both physically and emotionally and he needed her forgiveness though he was too much of an emotional wreck at the moment to simply ask for it. All he could do was try to help her as she had helped him. If he could teach her to forgive herself, to take a chance at living a better life, to fight for herself, then he would stay by her side until she believed in herself. Maybe then he could ask her to forgive him too.\n\nHis wolf liked the sound of that, rumbling contentedly deep within him. His animal's agreement soothed him, told him he was on the right path. The sound of the bedroom opening a moment later had him wearily opening his eyes to look up into the exquisite face of the most beautiful woman he could ever remember seeing.\n\n\"A light soup you can drink,\" Freya said softly, cupping the back of his head and pressing the warm liquid to his lips. He drank slowly his eyes intent on the softness of her lips, the warmth of her eyes as she patiently fed him the liquid food. She replaced it with some cold water, smiling when he shot her a questioning look.\n\n\"No drugs this time,\" she smiled. \"You don't need them.\"\n\nShe was right because no sooner had she rested his head back against the pillow than his eyes were closing and he was slipping into a deep dreamless sleep.\n\nFreya watched him sleep, a deep aching tenderness filling her soul as she reached out and traced his jaw lightly. He was so beautiful, so proud and strong. He probably viewed his breakdown as a weakness but she viewed it as a strength. He could only heal by confronting his emotions. He had done so and now he was mending at an almost phenomenal rate. She was certain that the worst was over for him.\n\nSoon her wolf would be ready to leave and she would have to make a decision on what she was going to do with her life. She had promised him she would try. She just wasn't sure if she had his strength. But she would try because he asked it of her, because he was willing to fight for her even if he didn't feel for her what she felt for him.\n\nSilently she left the room and picked up her cell phone, hitting the speed dial.\n\n\"Freya?\" Nors' voice was thick with emotion; fear and concern the predominant ones.\n\n\"Hello, Nors,\" she whispered, fighting back tears at just the sound of his voice.\n\n\"Are you alright? Where are you? I'll come and get you. We've been worried out of our minds, Freya. Liam wouldn't stop crying. Ash thinks we're never going to see you again. Just tell me where you are.\"\n\nSweet Nors, so demanding and so protective. Her brother never ceased to amaze her. Despite the displeasure creeping under the relief at hearing from her, she knew it was just his concern for her. \n\n\"I need some time,\" she said quietly. \"I just wanted you to know that I'm okay. I have a...friend staying with me at the moment. I'm not alone.\"\n\nHis voice was gruff when he next spoke, his emotions close to the surface. \"I didn't mean what I said before. You know that, don't you? I love you, Freya. We love you and you'll always have a place in our family.\"\n\nHer tears overflowed, his love shining through with every word. \"I know,\" she whispered tremulously. \"I love you too so very much. Tell Ash and Liam that too. I'll be home as soon as I can.\"\n\n\"Freya, are you sure you're okay?\" he asked gently. \"This friend you're with, is it anyone I know? I can still come and get you if you change your mind.\"\n\nWiping at her tears she sat straighter and took a deep breath. \"You've picked me up too many times, Nors. You have your family now and it's time I learned to deal with my own mess and work it out on my own. I'll call again soon and I'm fine, really I am. Don't worry about me so much. It's time you lived your own life.\"\n\nThere was silence on the other end of the phone for a long moment and then Ashleigh's voice. \"Freya? What did you just say to Nors? He's laughing and crying at the same time.\"\n\n\"He's just learned his sister has finally decided to grow up,\" she said with a small smile on her face. \"He's probably in shock. I have to go now. Kiss Liam for me, Ash, and don't let Nors worry too much. I'll be in contact again soon.\" \n\nShe hung up before any more could be said and finished wiping her cheeks dry. Then she headed back into Dayton's room and lay down beside him. She felt emotionally drained, tired on a level she'd never felt tired before. Caring was an exhausting experience and she was yet to see the benefits of it. Watching Nors and Ashleigh together showed her that it was worth it. Now it was her turn to find out if it really was.\n\nShe closed her eyes and let sleep claim her, all the while conscious of the wolf at her side.\n\nDayton rolled over and wrapped his arm around the soft, tantalising woman sleeping beside him pulling her tightly against his chest. Sleepily he breathed against the side of her neck, his lips brushing the soft skin lightly so as not to wake her. His wolf rumbled its pleasure, his body reacting instinctively to her closeness.\n\nHis tired mind began to climb out of the thick fog of sleep and he knew it wasn't Faith in his arms. The thought didn't trouble him as it once had. Faith was gone and there would always be a special place in his heart for her. He would always love her and miss her but it was time to move on, time to start living again.\n\nHe knew who he was holding so tightly. There was no mistaking that wonderful scent of cherry blossom that teased him. Her scent had always teased him, right from the very first moment he had seen her. It was what had thrown his barriers up even tighter than they had been before. Clinging onto his memories of Faith had demanded it of him which was why he had reacted so negatively to her.\n\nHe slowly opened his eyes, shifting slightly so he could prop his head on his hand and gently brush Freya's hair from her face. She truly was exquisite to look at, so soft and vulnerable in her sleep. He smiled slowly catching a lock of her hair and letting it fall through his fingers. \n\nHe knew she would hate being considered vulnerable. She viewed herself as a monster and maybe a part of her truly was just as all vampires were capable of being. The past couldn't be changed but the future could. All she needed was the right trigger, the right incentive to want to be different. Finding Freya's trigger was what was important and he was committed to helping her do that.\n\nHis fingers trailed lightly across her jaw, her skin like silk against his fingertips. It felt strange touching a woman's skin after denying himself so long, strange and intoxicating at the same time. His wolf was certainly enjoying this closeness to her, as was the man.\n\nFreya stirred, turning in her sleep, instinctively seeking the warmth of his body. Her hand came up to his chest as she cuddled into him, making his heart start to race and his body tighten with need. He couldn't stop his hand threading into her hair, tilting her face up as he lowered his head and gently brushed his lips against hers.\n\nHe had kissed her earlier, used touch as a way to anchor her as she fell apart outside. His kisses then had been way of grounding her, a way to reach inside her and pull her out of her destructive thoughts. His kiss now was the kiss of a man who wanted the woman lying in his arms. It was his first real kiss in over five decades and it felt amazing.\n\nFreya opened her eyes, feeling warm heat beneath her fingertips and hard lips moving sensually over hers, teasing her, enticing a response that she had no hesitation in returning. Her shocked brain tried to assimilate that Dayton was kissing her but her body overrode her surprise to press against him and kiss him back with a need that was almost overwhelming.\n\nHis hand tightened in her hair and he rolled her onto her back, his mouth becoming more urgent as her response ignited a fire deep within him which was quickly raging out of control. Her taste was heady, intoxicating and he pressed his erection against her as his tongue swept into her mouth and tangled with hers in a hot, erotic dance.\n\nHe'd forgotten how wonderful kissing could be, how hot and sensual it was to taste a woman's mouth so intimately, to press her softness against his aching hardness as he tasted every inch of her. Freya's response was total. There was no hesitation, no uncertainty as her fingers burrowed into his hair and she kissed him back as if starving for the contact.\n\nShe was full of hunger, full of need and passion and he realised instantly that he'd found her trigger, what she needed to survive, what everyone needed to survive. Freya Eriksson needed touch. She needed someone to see past the mask she presented to the world and truly see the woman beneath it. It was what she had craved, what she'd been searching for all her life and had never found.\n\nFreya needed someone to love her, despite her past, despite her faults. She was starving for affection, for tenderness, for love.\n\nDayton pulled his mouth from hers, his wolf growling loudly, demanding to be heard after decades of being silenced. He stared into her beautiful green eyes, shock rippling through him as he finally listened to his animal, finally heard what it had been trying to tell him but he'd been too wrapped up in his misery to hear.\n\nFreya Eriksson had been waiting for him! He was her trigger, he was what she needed. And she had been what he had needed, what he had spent the last fifty years craving.\n\nThe woman in his arms, this erratic, volatile vampire was his new mate.\n\nHis wolf howled in ecstasy as he stared down at her in stunned shock. He knew it was possible to find a second mate, that there were instances of it happening in the past though they were few and far between. Most wolves went Rogue after losing their mate, unable to bear the loss of half of their souls. Most who didn't; were older when their mates passed so they spent their remaining years alone.\n\nBut Faith had been young when she'd died and he had been strong enough to hold onto his sanity, to survive her passing though he'd done a piss poor job of it. He was young enough and had the capacity to love again and he found Freya firmly embedding her way into his heart right beside the spot Faith lived.\n\nIt was a different kind of love from what he'd felt for Faith. He could feel the difference. Faith had been his youth, his wild streak; their love almost innocent in its beauty. Freya was his future, his salvation. The love blossoming for her was intense, deep, taking over the bigger part of his heart but that was only right because she was alive, vibrant and beautiful in his arms.\n\n\"What?\" she whispered concern crossing her face as he stared down at her.\n\nDayton kissed her softly, resting his forehead against hers as his body hummed with joy and he fought to calm his racing heart. He should have felt terrified at this turn of events, he should have been running a mile from her but he wasn't. His mate was a vampire. She was indestructible. He would never have to suffer her loss as he had suffered Faith's. \n\nBut he would have to go carefully with her. Freya may crave to be loved but she wasn't used to accepting it. She was fragile emotionally, still learning who she was deep down inside. He would have to ease her into his life, convince her that she deserved the happiness she wanted so badly. \n\nHis wolf didn't even argue with him about it, agreeing with him in an instant. For the first time in such a long time, Dayton had a goal to reach for, someone to live for. It was the most wonderful feeling in the world.\n\nHe stole another kiss, a long searing one that turned his blood to fire and brought the sweetest of moans from Freya's lush lips. Then he rolled off her and lay on his back smiling. \"Still feeling a bit on the weak side,\" he belatedly answered her question, feeling her eyes on him the entire time.\n\nIt had the desired effect, sending her scooting off the bed like a shot. The truth was he felt more than able to get up and fix himself something to eat, but his vampire had displayed a need to care for him. She said she was no good as a nursemaid but when it came to him she was a natural at it. She was already showing her reaction to the mating pull though she probably had no idea what was happening to her.\n\nLetting Freya experience her softer side was the way to go. Letting her explore her need to comfort, to care for another person was critical to her forgiving herself. He didn't need a woman to wait on him hand and foot but it was about her needs at the moment. Once she was more balanced, once she was accepting him as part of her life, then he would show her just what he needed.\n\nThe passionate, fiery love of a vampire. Untamed, wild and so very, very sensual.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "mating",
        "vampire bite"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-long-walk-home-ch-10"
}