{
    "title": "Finding the Perfect Fit Pt. 16",
    "pages": [
        "<center>Saturday</center>\n\nHoly shit, I fell asleep on the keyboard! Well, I guess that makes me a real writer now, having passed out while typing. Anyway, Jamie started texting me during my early shift and thanks to being in the cooler, I was able to answer quickly.\n\n'Sorry I was so all over the place last night. Had a lot on my mind.' Jamie might be one of the few people who use periods and proper grammar in texts. And I dunno if it's cause of him or my English class that I've been giving my all to, I've been trying as well.\n\n'All good. Ya better today?' I responded back, setting my phone on a stack of Coke instead of back in my pocket. Easier to grab when he responded and that took a few minutes, catching me fighting with a tray of 1-liter Dr. Peppers while on a step stool.\n\n\"Nice timing Jamie!\" I said to no one, sending the bottles down their slide and heard the first one fall. It never fucking fails. That row got stocked and the tray added to the stack of empties before I got to read his text.\n\n'Kinda? I keep going back to that dress and I don't know how to feel about it.' Turning down my music, no Fleetwood Mac today, I pondered how to respond.\n\n'Ya looked good! What's left to say?' Not great but I was on the clock and still had holes in the drink wall left to fill. I resumed, wondering about Jamie and what he wanted. Admitting he was bisexual must have been a huge step for him and yet he did so in a logical manner, with research and deduction. I knew that I liked Cass and once that fell apart, I drifted until I was getting to know Clint and with him, found out I might like guys too. For me, it hadn't been that big of a deal but Jamie? Who had lived his life shrinking away from people and dealing with shithead 'Father of the Year' eighteen years running?\n\nMy text chime rang out in my ear and I killed off the current tray of Mountain Dew and bringing over another, filling in the holes before reading his text. I was dragging ass, lacking sleep and texting on the job but fuck it, Christmas at this place had nearly killed me so they could deal with one bad day.\n\n'That's the problem? If I didn't fit then I could write it off, forget about it. But the dress was so nice and I loved how it felt Gen.' I smiled at the honesty, the memory of him swishing the skirt to and fro coming easily, Jamie as happy as a person could be in that moment.\n\n'Whenever ya wanna try it on, just let me know.' The question of if I should be encouraging him came and went, as in Jamie's words what did it matter? If he like the dress, then why not wear it? No one was hurt by it, the world didn't change except for the better, as Jamie got what he wanted out of it and so did I.\n\nMoving onto the energy drink section, I got the Monster filled up but not before my mouth started to water at recalling the taste, that jolt of sweetness and slight tang so tempting. The lemonade wasn't any better, sweeter and lacking the brutal punch of regular Monster. I'm not sure being a Monster taste tester is a job but after last semester, I was well versed in most of their products. Yeah, being a consumer whore is really something to be proud of.\n\nA chirp told me of Jamie's response and I pushed on to get this section filled up so I could move on and try to forget about the tastes my monkey brain craved. Giving up, I checked my phone and saw a novella waiting for me.\n\n'I'm scared of how much I like it. All of it. I don't have to advertise that I like things in my butt but the cross dressing? That's way more obvious. And I want more, to try on everything you have and before, these thoughts were easy to ignore cause I couldn't do anything about it. Now? I keep seeing myself in the mirror, looking like a girl ready to be taken to prom that I never went to and it hurts but feels good at the same time.'\n\nI read that twice before getting interrupted by someone opening the door and yelling for me to stock the milk. I called back \"Yeah, sure!\" and gave Jamie a 'one minute', tucking my phone away. I hauled gallons of dairy on the shelves in record time, mind burning over his thoughts.\n\nMilk good and full, I stepped behind a shelf and reread the text, still at a loss of how to respond. I didn't get a single letter down when another text came in.\n\n'How much is there to a person? How deep does all of this go? Is this who I am?' Blinking at reading that, I raised my free hand and slapped the side of my head.\n\n\"The fuck am I suppose to do with this?\" My question went unanswered and I furiously typed out what first came to mind.\n\n'Jamie that last text is way above my pay grade! Ya got boobs so no wonder ya like things that fit ya boobies after so long without. Just cause ya bi doesn't change who ya are! Have ya started listening to different music since we fucked?' And sent, leaving me stranded and annoyed. So I returned to work, unable to fully grasp his questions, tossing them back and forth endlessly as if they were a live coal.\n\nWhen he sent a return message I waited until the current song ended, trying to get my temper under control. Just cause he was having a harder time accepting what he liked was a terrible reason to snap at him. Still, I took a deep breath before reading what he had to say.\n\n'No I haven't. Never thought of that. Sorry, I'm just freaked out about how strong that feeling was.' The screen dimmed, then faded to black as I failed to find something to say.\n\n\"Freaking me out too dude.\" I muttered to the few twelve packs with weird names, hauling them on the shelves. Had to be patent, let him figure all of this out. Jamie deserved, at the very least, for someone to let him do that much. Getting the beer topped off, the tomato crap being sold out once again, I reread his last text and only then sent my reply.\n\n'Ya gotta take it easy and deal with this shit one turd at a time. There is no reason to rush into this and flip ya whole world upside down cause of some dress. At least get 2 outta the deal.' Tucking my phone away, I got back to work for the last hour, not wanting to be accused of slacking off and being put on a register.\n\nThe cooler was looking good by the time I clocked out, checking Jamie's text as I got out to my car, the day cold but clear.\n\n'Okay, doing much better. Guess as long as Metallica is my favorite band I'm still me. Come by my job for lunch, I'll hook you up for dealing with my drama.' Sitting in my still warming up car, all I could do was shake my head. Out of all measures of identity, it fell to a rock band. Of course.\n\nStill, I let him know I'd be by around 2ish, so maybe we could talk after the lunch rush and headed to my dorm, showering and coming out alert and refreshed. When looking for something to change into, I saw the gray ghost that had so enamored Jamie last night hanging in my closet, nothing more than a batch of sub par memories for me but a crisis for him. Yet in that moment, Jamie had reached an unsustainable level of happiness and how high it must have been.\n\nPicking a lower cut shirt and tight jeans, the Meeting Jamie Casual, I opened my laptop and brought up this document before closing it. I wanted to write but had already gotten last night's clusterfuck down.\n\nA few hours passed and I saved the new thing, very uncertain but feeling there was a nugget of gold there that I had to dig for. Grabbing my coat, I went out to start my car and was standing out there when Donna pulled up beside me.\n\n\"Hey, there was a note on the door, something about them coming in to look at the other rooms.\" Each of these little dorm houses has four bedrooms but the other two in our unit had been damaged sometime last year. How exactly that happened seems to be myth, with the most common one being two girls getting into a fight over a boy or meth, yes really, and somehow a fire starts. The first day of Donna and I living here we'd taken the tape off the doors and checked out the damaged rooms. Sure enough, the common wall between them was blackened and the ceiling stained with smoke.\n\n\"What, now? In the middle of fuckin' winter?\" She shrugged and I sighed, knowing there was no rhyme or reason to what the college did. \"Sure, long as we don't get new roommates anytime soon.\" Donna nodded, as we had come to some kind of fucked up agreement. Sure, we really didn't like each other but coexisted well enough.\n\n\"I'm going out tonight so feel free to have your hippy boy toy come over.\" Her smile was disconcerting but whatever. If Donna knew something, I'd deal with it later. With a wave, I got in my car and cranked the heater, heading off to Jamie's Dairy Queen. It wasn't busy but a few of the booths were occupied, the people talking more than eating. The smell of the kitchen wasn't enough to overpower the scent of ice cream and the machinery to make it.\n\n\"Whatever she gets, put it on my tab.\" I heard Jamie say, seeing him in the back by the grill. He sounded normal but in a hat and back in the kitchen, I couldn't be sure.\n\n\"Ohh, I didn't know ya had a girlfriend Jamie.\" The 30 something woman who walked up to the register said, looking me up and down with bright, cheery eyes. \"Let me guess, ya met online.\"\n\n\"Nope.\" I said, picking the name Missy off her name tag. She looked like the kind of person who was too smart to be working at a place like this but had some reason for it. Those types came and went at the gas station, sights always set higher.\n\n\"Leave her alone, Missy. She came to eat, not to be interrogated.\" Jamie said, leaning on a microwave and giving me a little wave that I returned. His hair was pulled back into a ponytail and covered with a DQ hat, paired with a huge apron that intentionally wasn't pull tight over his work uniform. It made him look far younger than he was, like Jamie was playing at working instead of being paid for his time.\n\n\"Aww, ya no fun! But okay, whatcha want?\" Dropping me a wink, Missy took up a pen and hovering it above an old school paper slip, ready to take my order.\n\n\"I'll give ya another guess.\" I said, Jamie rolling his eyes as Missy perked up. \"Just one though cause I need to figure out what I want.\" Very true and aside from Tom, I didn't know anyone else that Jamie hung out with. Even if it was a coworker, I was interested in their thoughts on him.\n\nStudying the menu, only then realizing how hungry I was as Missy looked back at Jamie, then me. \"Ya going to school?\" I nodded at her question and she stood up straight, eyes ablaze. \"Met in a class, final answer.\"\n\n\"Nope. Number three please, no pickles, small chocolate shake.\" Studying me, Missy jotted down the order and tore it free, handing it back to Jamie, who started cooking it at once.\n\n\"Really.\" Muttering that, Missy started making my shake and I was left to my own devices for a minute or so until she returned, handing my ice cream over. \"Nothing against Jamie, he's a good kid, but where Hell did you find him?\"\n\n\"Ya make it sound like I went shopping and saw him in a window.\" Keeping my voice down, as Jamie was busy, I took a drink as Missy chuckled.\n\n\"Looking, I'm not saying you're out of his league but...\" The unsaid question lingered as I took another drink, letting Missy stew in silence. \"Just surprised is all.\"\n\n\"Missy, come on, be civil.\" Jamie came from the back and raised part of the counter, stepping past and joining me. \"I'mma take lunch, Johnny's back from break.\" Jamie reeked of grease but hey, just part of the job.\n\n\"Alright, have fun you two!\" Missy started talking with another guy who was watching us leave, the gossip already started to flow as we headed out to my car. Still warm, I tore into the burger as Jamie spoke.\n\n\"I swear, she's more interested in my life than I am.\" I nearly choked at that, knocking a lump that almost went down wrong free. \"Always saying I need to get out more, living life and enjoy being young.\"\n\n\"Let me guess: That means going to parties and getting piss drunk?\" I managed to say that much, still sucking down air after nearly dying.\n\n\"Nah, but Missy's definitely a extrovert.\" I nodded, as that explained everything. \"And I never mentioned you cause well...\" He blushed, stealing a fry as I made sure to chew and swallow before speaking. Amazing, I was still learning that talking while eating was a bad idea. I might get the whole living thing down at some point.\n\n\"I get it. My little sister's the same way, asking 'bout everything I've ever done.\" Jamie nodded, taking another fry.\n\n\"By the way, Donna's out partying tonight so if ya wanna come by...\" Thoughtfully chewing on the sliver of potato, Jamie took his time getting all of his thoughts in order.\n\n\"Sorry about this morning. I kinda had a freak out and you brought me back. I owe ya so yeah, I'll be there once I'm off.\" He looked and sounded more confident, meeting my eyes when he said that.\n\n\"Ya owe me huh? What's that mean?\" I asked all innocently, fluttering my eyelashes at him.\n\n\"Whadda think?\" I bit back laughter, still giving him a huge, sweet smile that felt wrong the longer I held it. \"Stop that.\"\n\n\"Whyyy?\" I asked, batting my eyelashes at him once more.\n\n\"Or I'll not come by tonight.\" That got me to stop, opening my mouth to protest before I noticed his grin, that he'd won.\n\n\"Oh, you'll come over.\" I snaked my hand in his lap, not grabbing but letting it rest on his thigh. \"Cause I've got more surprises.\" Almost true but I had time to figure something out before he got off work.\n\n\"Gen, your last surprise fucked me up.\" Jamie said, covering my hand with his, giving a light squeeze. \"But seeing how I'm Pandora, I can't say 'no', can I?\" I grinned, amused by the callback and how true it was.\n\n\"Don't worry, I'll take care of ya. Off at nine, right?\" I asked and he nodded, taking a sip of my shake before giving me a brief hug and returning to work. So I had a handful of hours to figure out another surprise and after a few minutes of driving around, I went to the mall. Sure, the adult toy store was always there but Jamie hadn't said anything about getting something bigger so I was keeping it that way.\n\nBut the mall was pretty big and still thriving, despite the gloom and doom surrounding such places. I found a spot to park, way in the back, and hurried inside. It was packed, with it being Saturday and the chatter overwhelmed any music that might have been playing. Teenagers with stupid haircuts abounded, parents dragging along kids with wide eyes either taking it all in or glued to phones, the smells of the food court wafting far and wide.\n\nUnzipping my coat, it was plenty warm in here, I started walking, checking out the stores as they passed by. Ritzy clothes places that I'd never been into before, a hat shop, used game store that was having a DVD sale, sports shop, a group of kids running and shouting, shoe store, escalator to the upper floor that I took. Even with the times changing, the mall adapted and those who came here to shop never seemed to change. It was a weird sort of comfort, that this place had outlived plenty of people and I might end up being another one. Or not, who knew?\n\nStepping onto the upper floor, I strolled around, checking out a few women in leggings before spotting the store I was looking for. Sure, I know Victoria's Secret isn't the best place for what I was after but it was close and convenient enough.\n\nI walked into a place that would probably give Jamie a heart attack and browsed, not quite sure what I was looking for but I'd promised him a surprise and surely there was something here that qualified. Another dress was out of the question, at least for now, but something slinky or overtly girly would do.\n\nI knew exactly what I was getting upon seeing them nestled in a narrow slice of the wall between panties for women with serious hips and some sheer stuff like we'd tried on last night. A bunch of garter belts hung loosely from pegs in the wall, lacy and tempting. Jamie liked stockings, had asked for them last night, and I figured this would tickle his fancy too.\n\nChecking out the colors, no gray, I reached for black but instead grabbed a pure white one. I'd wanted to see Jamie in bride's attire when we'd first started making out and this was a small, broke ass step towards that. Another pair of stockings to go along with it, these white as well, screamingly so. I'd never seen anyone wear these before but hey, that only made them more special. With those in my arms I wandered about, not looking to spend any more money but knowing I had a bit to spare thanks to holiday pay.\n\nI stopped cold, seeing something I'd never considered before and the rising fire in my stomach told me this was a good idea, the best idea ever. All manner of bustiers and corsets screamed for me to buy them and present it before Jamie, to see how he would react and how happy it would make him. Then I saw the prices and then they began mocking me for not wanting to spend that much for his happiness. The issue now was Jamie interested in this? Probably but I didn't know for sure considering how much even one of these things was.\n\n\"May I help you?\" A very pretty woman with a dark mess of curls falling to her shoulders asked, catching me off guard. I shook my head, finding where my voice had run off to and kicking it into gear.\n\n\"Ah, no I'm good. Thanks though.\" Christ she was pretty though! Nice ass too, I saw as she walked away to help another customer. Turning back to the tempting display, I had no idea what Jamie's size would be in any of this and if I was going to spend big, I had to make sure it was going to fit. Leaving this alone for now, I wondered over to the check out stand surrounded by all kinds of cheap shit about it. Basically everything over here was stamped with the store's name, as if the addition of two words made it more valuable. Or just slapping PINK on everything.\n\nGlancing back towards the bustiers, I smirked at seeing pictures of models showing off the styles and how Jamie had all those skinny bitches beat in boobage. Sure, they all had the smoldering eyes and pouty lips standard for advertising shit to women but he simply had more up top.\n\nPaying for Jamie's surprise, I snagged a catalog before leaving and tucked it in the bag then got out of there. A few people along the way gave knowing looks upon seeing me with the distinctive pink and black bag. 'Haha, you bought expensive underwear and now I know.' They said with their eyes. Or, from a few of the guys: 'I'm never going to see you in that underwear and I hate you for it.' Their anger wasn't anything I could solve so I left, back out in the cold. Trekking back to my car, I got it fired up and turned the radio on, finding either Journey or Foreigner and singing along until the heater blew hot air.\n\nThen began the drive home and I saw Donna's car was still outside the dorm when I got back. Taking my goodies from the bag and tucking them in a coat pocket, I folded the bag up and shoved it under a seat. There, no snarky questions while my brain was boiling from renewed interest in seeing Jamie as a blushing bride in pure white that wouldn't be sullied as he would make sure the dress and lingerie was taken care of before I had a chance to ruin it. Jesus, that's a fucked up fantasy! Like, if that was in a video on YouPorn, who'd be out there getting off on the guy picking up the chick's clothes before banging?\n\nAnyway, I flopped down on the bed, hearing that Donna was taking a shower and removed the tags on my new purchases. That done, I tucked them under a pillow for later. Now, I just had to wait. Once more I grabbed this laptop and got to work typing today out and it did the trick of passing the time as well as being soothing. I hope tonight goes well. Future Gen, don't fuck this up!\n\nFuture Gen here and I didn't fuck up, I fucked Jamie instead! Alright, from the beginning. I picked up Jamie from work, the restaurant dark and Missy nowhere to be seen. The clarity of the day had faded into a brutally cold night, the stars distant and cold, only half of a moon watching as Jamie hopped in my car.",
        "\"I need a shower.\" Jamie grumbled, reeking of a long day over fryers and a grill.\n\n\"Donna's already gone so ya can shower at my place.\" I wiggled my eyebrows in his direction, Jamie not at all impressed.\n\n\"Are you trying to make a shower sexy?\" His tone suggested such a thing was impossible.\n\n\"Ya should know me by now! I'll make anything sexy when you're involved.\" More waggling and a few smooches to my stoic boyfriend.\n\n\"Gen, I've seen your shower and it's barely big enough for one person.\" Jamie stated a fact, one I couldn't easily wiggle out of. \"Not that the one in the guy's dorm is any better.\"\n\n\"Whadda expect from this place? Only the finest for us, who will inherit the world.\" My words made Jamie mock shudder as I pulled in front of his dorm. \"Okay, run in and grab some clothes, then to my place for a boring, non sexy shower and fun!\" Jamie sat there for a second, staring intently at the face of the building before nodding and leaving without a word.\n\nFlipping on the radio, I surfed until I caught 'It's the End of the World' on an alt-rock station and enjoyed until Jamie returned, still in his DQ clothes.\n\n\"Shit! Shit shit fire and save matches!\" Slamming the door behind him, Jamie looked at me as if I'd gone insane and yelled: \"Punch it!\" Throwing back my head, I screamed and put my foot down,, Jamie's eyes darting from me to the world not moving about us, then to the electronic speedometer that displayed a solid 0.\n\n\"Oops. I'm still in park.\"\n\nLetting up on the gas, I shifted into drive and took off, Jamie slumped back in his seat. \"You are the worst get away driver ever.\"\n\nI grinned, not going much faster than the speed limit cause with it being a Friday night, there was no telling if cops were around.\n\n\"What are we getting away from? Is it Godzilla? That fucker?\" I asked, as if we lived in Japan instead of a landlocked state too boring for giant monster attacks. Pulling the tie out of his hair, Jamie did a shampoo hair commercial head sway, brown hair transfigured into a silent storm cloud laden with rain.\n\n\"Nah, I went to my room to change but Tom was still there and had friends over. They were trying to drink and do homework at the same thing.\" Just from the tone of his voice, I knew it wasn't going well. \"They offered me a shot, I told them no and tried to grab some clothes but I had two guys I didn't know breathing down my neck asking if I could get them free ice cream so I couldn't grab any underwear. I'll have to borrow some.\" Jamie didn't sound despondent but annoyed, as anyone would have been.\n\n\"Oh no, my boyfriend is going to wear my clothes! I've never heard of such perversion!\" I parked and turned the engine off, seeing Jamie was amused but trying not to show it.\n\n\"Yeah, okay. That's rich, coming from you.\" Jamie spouted as he got out of the car and I followed, making sure it was locked and beating him to the front door, opening that for the both of us.\n\n\"What's that supposed to mean?\" I played innocent, badly but hey, that was part of the fun. We walked past Donna's nest and into my room, the light being flipped on for now.\n\n\"You offered me a push up bra, bought me girly clothes and then showed off a strap on.\" Ticking each item off on his fingers, Jamie tried and failed to look stern as I stared blankly, giving him nothing else to work it.\n\n\"And?\" I said, biting my cheek to keep from laughing. \"I didn't hear ya complain about any of it.\"\n\n\"Yeah, which makes me a hypocrite. Well, shit.\" With a wry grin, Jamie shrugged and then held up a hand as I tried to get closer. \"No touchy until I shower.\" Flicking on the light to my closet, he wandered in and shortly emerged with one of the shirts I'd gotten for Christmas, the one with the old car and 'Christine' on the front.\n\n\"Where'd you get this?\" It was my turn to shrug, my thought of what Jamie would look like in it about to be answered. \"Looks like it's from the movie.\"\n\n\"Movie?\" I asked, completely lost.\n\n\"Yeah, Christine, based off a Stephen King book about a haunted car.\" A random memory fell loose in my head and I recalled seeing part of it, the dents in the car popping back up and I'd marveled at how real it looked and Dad laughed, saying that's how they did it back in the day. \"Can I wear it?\"\n\n\"Of course. Hell, ya knew what it was from!\" With a bra strap trailing from the pile of clothes liberated from my stash, Jamie went and got his not at all sexy shower started. Sitting on the bed with my present still tucked under a pillow, I got up and found my coat, pulling the catalog out and finding a pen. I was going to learn what all Jamie was interested in and then I'd have a goal to work towards.\n\nSo I sat there, flipping through the pages and having to put it down, getting a little too excited before anything happened. That Jamie was back to how he had been during Thanksgiving was just as exciting as new clothing. Anything could happen and I was ready for it.\n\n\"I don't know why I grabbed clothes.\" Jamie said as he walked in, nearly making my heart explode as I was lost in thought. And sure enough, with my pulse flying high, Jamie was only in a push up gray bra and black panties with lace that we'd bought together. \"Cause it always ends up like this.\"\n\n\"No, it usually ends with you being naked.\" I said, making Jamie raise an eyebrow. \"I mean, if ya wanna skip ahead to that point...\"\n\n\"Not yet.\" Color bloomed in his cheeks and I knew what was coming, beating him to the punch.\n\n\"Try on the other one if ya wanna.\" Jamie's mouth opened, then closed with him looking so utterly taken back I laughed.\n\n\"Am I that predictable?\" He asked and I shook my head, rising and walking over to where he stood.\n\n\"Maybe. Or maybe I know you.\" I told him softly, my gaze going down to his still impressive rack being bolstered by the bra. \"So go ahead and put on whatcha want and then we'll look at this and see what else ya like.\" I showed the cover of the catalog to him and his face flushed further, fidgeting while beholding the nearly naked woman on the front.\n\n\"I...\" A smile took hold of him and Jamie surprised me by laughing, a bump in his panties growing all the while. \"I've got a story for you.\"\n\n\"And I've got a present!\" I rushed over to the bed and plunged a hand under the pillow, finding the stockings and garter belt, handing them over in a pile that looked like driven snow. \"It ain't much but here it is.\"\n\nHolding them up, Jamie looked past the pale and his smile was pure happiness. Walking with him to the closet, he reached in and pulled out the gray dress, hooking the hanger on the top of the door as he began to puzzle out the garter belt while speaking. \n\n\"So, some backstory, it's just been my Dad and I, with Grandma helping out every so often. I got older, began doing more stuff around the house, growing up, right? Well, one day I check the mail and there's a Victoria's Secret catalog there. Wrong address though, the mailman fucked up.\" I watched as he latched the back and smoothed the belt out, the straps danging free. Leaning against the wall, he began carefully pulling on the stockings, already quite adept at it.\n\n\"Dad wasn't home so I took it. And sure, I had the internet but with the magazine I could hide it easier and not have to worry about him finding my search history.\" I lucked out in that regard, my parents not caring about what I looked at as long it was legal. The cheesecake calendars my Dad had up in the shop were what convinced me I might like girls, stealing any chance I could to check them out alone.\n\nNot daring to interrupt him with words, I waited until he had the stockings up and interjected with actions. I took the hanging straps and fed them under the waistband of the panties so that when they came off, the stockings and belt would still be on. Jamie saw what I was doing and gave me a quick peck on the lips before resuming telling his tale.\n\n\"At first I just jacked off to it, what teenage boy wouldn't?, but over time...\" Looking at the mirror, Jamie was quiet for a minute and I gave him that time. His butt looked wonderful paired with the garter belt, having enough of a curve that it looked right. \"I started looking at what they were wearing instead of just pretending I was with them. My boobs had already started to grow but were still small then, A cup I suppose. And I looked at those smaller bras and wondered.\" Still lost in the past, his face thoughtful in the mirror's reflection, Jamie pulled the dress free and held it up before him.\n\n\"As they grew, I began studying it, wondering how big I would get, what size I'd end up being. I didn't know what any of them meant, only that Ds were suppose to be huge, it was all gibberish to teenage me and I had no one to ask.\" Mom had sat me down with a training bra and answered all my questions, including a very honest 'probably' when I asked if it was going to hurt. She hadn't been wrong.\n\n\"I was terrified of looking it up and my Dad finding out somehow. Cause when the boobs started coming in, that's when his attitude towards me changed and he checked out, as you put it.\" Unzipping the back, Jamie stepped into the dress and his eyes closed as he lifted it over his body, only opening them to slip arm into their places.\n\nI slowly approached, taken by his story, the genesis of us doing this together and zipped him up. Stepping back, I saw Jamie examine himself, first from the front and then the back, extending a hand towards me and I took it. He still wore a smile as the story resumed.\n\n\"Then, by snooping around in my room, he found the magazine and asked me about it.\" Rolling his eyes, as if to say 'parents, am I right', he continued. \"I had to explain to my father that I was masturbating to a lingerie catalog, which is a low point for society as a whole.\" I giggled, as hearing Jamie talk so calmly while defying his Dad's wishes so strongly had stricken me mostly mute.\n\n\"So when I walk in here and see you with that...\" Jamie let loose with a huge smile, pulling me over to the bed and picking up the Victoria's Secret magazine with the fondness of a well loved book. \"Now I can enjoy it all I want.\" Sitting, Jamie crossed his legs with the pose of a proper lady and I laughed with utter glee. This was too much, too perfect and his expression, like I'd just lost my mind, made it all the better.\n\n\"Okay, sorry, had to get that out.\" Catching my breath, I sat down beside my boyfriend in a dress and shared a long kiss with him, loving the slinky feel of the dress and knowing the leg I was fondling had a stocking on under it. Jamie was all wrapped up in the most girly things I had and wore it well, not shrinking back but relishing it. And a book promising more sat in his lap.\n\n\"Thank you for this.\" He whispered as we parted, eyes closed.\n\n\"Always.\" With that, he sat upright and opened the book, looking over the table of contents. I handed over the pen and Jamie clicked it, turning the page and looking at the skinny women wearing all sorts of skimpy and teasing items. And so we looked over that thing, Jamie circling things he was interested in and underlining the color he liked. The high waist panties weren't to his liking nor were the thongs.\n\n\"I need coverage!\" He insisted and I lapsed into more laughter, knowing that his needs were different than mine. Flower prints didn't impress him and same with all the retro styled stuff. Skirts kept his attention for a while with a good chunk of them being circled and then bras happened.\n\n\"Jesus! I could blow a month's pay on all this!\" I snorted as he studied the different styles more than I ever did.\n\n\"Yeah, welcome to the wonderful world of chick underwear. This isn't even the most expensive stuff.\" Jamie shook his head but marked a natural fit bra in peach, tapping the picture of the model with the butt of the pen.\n\n\"I don't get it. I mean, yeah, I like my boobs but this is all too much.\" I nudged him with an elbow, fighting back more laughter. \"What?\"\n\n\"You're saying that wearing a dress! And a push up and panties and stockings with matching belt! How is all that not too much?!\" I nearly shouted, bursting with pent of energy.\n\n\"Well, I didn't buy any of it, now did I?\" Said in such a smug tone, Jamie struck me speechless and I had to resort to tackling him for payback.\n\n\"You cheapskate gold digging bitch!\" That I did shout with fake outrage, tickling him until he shrieked, kicking legs sending gray rippling waves of cloth all over as I took the catalog and smacked him a few times about the head with it for good measure.\n\n\"You said I could! What happened to 'always'?\" Jamie wheezed as I hauled him back upright and thrust the slightly beaten magazine in his lap.\n\n\"Trying to get all decked out on a budget. Very sneakyyy.\" I flipped the book open and Jamie produced the pen, clicking it back to readiness. \"Sneaky but cute.\"\n\n\"I'll willing to buy my own stuff but not a whole bunch and not yet.\" Smoothing the skirt out, he browsed until finding the page we had been at.\n\n\"Taxes are coming up, that'll give us some money to play with.\" I offered as Jamie tapped the pen against a page of slips, slowly coloring one of them blue. \"Besides, there's something in there that I wanna know your thoughts on.\"\n\n\"Really?\" A sly glance out of the corner of his eyes and he began turning pages faster. \"Tell me when.\" So they flew by, stuff that someone had to have designed but I only had eyes for what I'd seen at the store.\n\n\"And... Stop!\" Compared to everything else offered, there wasn't much for bustiers and corsets and they were pricey, as I'd seen in the store. \"Well, whatcha think?\" The look Jamie gave me was close to exasperated, stopping just short.\n\n\"What am I suppose to say, 'not interested?' Gen, that's a trick question, probably every guy loves this stuff!\" Turning another page, he pointed at a picture of a smoldering eyed woman in a corset, showing how slim she was and pushing her meager boobs enough I'm surprised nip was showing. I mean, sure, she would have been hot as well without the corset but it covered yet hinted at enough that the model was better with it. \"It's... Um, it's like the ultimate in sexy women's clothing, better than any bra. The designs and colors, the intention upon wearing such a thing...\"\n\nJamie's eyes were unfocused, not seeing the page anymore, probably not aware he was in a dress either. The eye in my thoughts, the one that drove me to write, opened and I could see Jamie but younger, looking at a similar catalog and wondering what it would be like to wear some of this. Small and scared but excited, as he must have been when I offered a bra to him for the first time. He might be Pandora but I was the one who had tempted him with the box, unknowningly offering what he had wanted all along.\n\n\"So... I take it you like them?\" I asked and Jamie shook awake, a few blinks to clear whatever else had been in his vision before giving me a 'no shit' look.\n\n\"Yes, very much so. However, I don't want you spending any more money on clothes for me.\" Facing me, Jamie brushed hair out of his face and I could tell it was serious time. \"I appreciate it, I really, truly do but...\" He paused, eyes flickering away then coming back, hands taking mine. \"I'm just going to say it.\"\n\n\"Lay it on me.\" I had no idea what he was going to say but Jamie was in the zone, totally here and not held hostage by the past.\n\n\"I... Was hoping over summer break we could look into getting an apartment together.\" The words got quieter as he spoke, with me leaning forward to catch the last one. When put together, they struck me dumb. Why had I never thought of it before? We both worked and had the means to live off campus. \"That is, if your still going to be going here next-\"\n\nThere was no more speaking as I tackled Jamie once more, this time silencing him with kisses. Finally I found his lips and my tongue slipped into his mouth, the one that had uttered so many things, sad and wonderful things, but this idea was one of the best he could have said.\n\n\"I take it that's a 'yes' then?\" He managed to get out, panting as I slipped one of the straps off his shoulder and unhooked the bra, brushing it aside and getting to second base. That melted any further conversation away as he held the back of my head, bringing me closer, urging me to give the same attention up top as I gave down below and so I did until my jaw ached and Jamie was whimpering, touching the larger bump in the skirt more frequently.\n\n\"Didn't know getting a place together would get me laid.\" Jamie got out, reaching for the zipper keeping the dress on and giving up, still panting from my efforts.\n\n\"Having a place together means you get laid more often. No more dealing with Donna.\" I said, taking pity and letting him free of the dress, his white clad legs now on display. \"And ya can wear that anytime ya want.\"\n\n\"Aww, don't tell me that!\" With a fair amount of effort, Jamie got out of the gray expanse and rolled over, reaching for the bag of fun when I heard him get up. Rolling on my side, I watched his panty clad butt as he hung the dress on a hanger and brushed wrinkles out of the skirt, making me lose it once more. \"What?\"\n\n\"Ya treating that damn thing better than I did!\" Topless and with his dick threatening to break free, Jamie sauntered over and sat like a lady, all prim and proper.\n\n\"Maybe cause you took it for granted and I, indulging in my fantasies, want to keep it nice.\" Jamie stated and I had no retort. He had me, fair and square.\n\n\"So, what are you in the mood for tonight?\" Spoken like an English butler, Jamie wasn't at all surprised when I freed the strap on from where it had been hiding. \"Ah yes, of course. Good choice.\" Unbuttoning my jeans, I shoved them off and down went my panties, followed by my shirt and bra. Naked, I held up the mess of straps, a strange mirror of Jamie seeing the garter belt for the first time, and finally got it on, nice and snug.\n\n\"I was actually going to ask about, for that.\" Blushing hard, Jamie watched as I got my purple penis locked in place. \"Last night was good, very intense, but I like it better when you're wearing it. Having you behind it makes it more, ah, real I guess.\" Producing the lube, I summoned up the image that had captured my attention for nearly a full day, with me playing out how I could set it up and now was the time.\n\n\"So your saying you don't want to be fucked by a phantom dick? Good to know.\" I snarked, grabbing a pillow and laying it down before me, trying to judge if it'd be enough. \"Okay, this should be simple: You lay here with your butt on that, I lube ya up and then well... Yeah.\" I gave my dick a little flick, the swaying weight of it nice after being gone for so long.\n\n\"Oh. Yeah, that'd work.\" Coloring again, Jamie stood and slipped out of his panties and crawled over, the garter remaining like we were part of the classier upper crust of college students I assume exists and fucks in crazy parties. \"This way I can see you and don't have to do everything by myself.\" I opened my mouth to protest but recalled when I was on my back and he indeed had done all the work.\n\n\"Like to watch me work huh?\" I asked, Jamie taking his spot and spreading legs for what was to come, his obvious eagerness on display. Lifting him up some, I stuck a shirt only good for being a rag under his butt and opened the lube, the harsh 'crack!' of it expected by now.\n\n\"Yeah. You really get into it.\" Reaching down, his extended arms pressing breasts together, Jamie held out his cupped hands and I shared some of the dwindling lube. As I rubbed it between his butt cheeks, he applied it to his dick and sighed, veins standing out on the surface as he very slowly stroked it from base to head. \"Come on, don't leave me waiting.\" A fresh layer of lube and the two usual suspects got in Jamie, the fingers he'd wrapped about about his penis extending straight for a moment before curling back.",
        "\"If I'dda known ya liked this so much, I'dda gotten it sooner.\" Taking my time, I got all the way in and rubbed up, where the prostate was and Jamie made a noise like he was being strangled. \"Or looked up how to do that.\" When I backed off, his dick slumped slightly, as if I'd forced it to be as hard as possible with just a little touch.\n\n\"That's cheating, whatever that is!\" Giving his dick a hard squeeze, Jamie moaned as I feathered that spot, no pressure but rubbed back and forth. \"Stop! Stopstophuggn!\" I instantly pulled out, Jamie writhing in slow motion, his dick not yet erupting as his legs contorted and at last relaxed.\n\nBacking off the bed, I found another shirt I never wore and wiped my fingers off on it. Jamie was still laying there in a gasping heap, his white covered legs twitching. Flipping the ceiling light off, I lit the candle on the desk before rejoining him, the whole of the bed now draped in flickering shadows. I didn't see any mess so he must have held out.\n\n\"Sorry?\" Cracking an eye open, Jamie didn't quite manage a glare but pointed with an unsteady hand.\n\n\"Ask before you do that again.\" Spoken in a creaking voice, I crawled over to the always there bottle on standby, the dildo banging off my thighs the whole way. I offered the water and he tenderly took it, draining the whole thing. \"What does a prostate do anyway?\"\n\nI opened my mouth and found that I had nothing. Sure, I'd read about it but hadn't paid attention to it's function but rather where it was, how to reach it and what it did to guys. Judging by Jamie's reactions, it matched what some brave souls had said was astounding pleasure.\n\n\"Makes you feel good?\" That got the empty plastic bottle tossed at me, bouncing off my head with a hollow and unsatisfying sound. \"Got that out of your system?\"\n\n\"Just get over here.\" Flopping on his back, arms spread, Jamie looked up at me as I took my spot. \"I almost blew Gen, but held on.\" He sounded tired, as if the struggle to not climax had been far more intense than I could know.\n\n\"Sorry but I'll make it up to ya.\" Getting myself slicked up, I got another coat on him, fingers slipping back in and Jamie stirred to life, his prick pulsing with need. \"Ready?\" I got a nod and lifted his hips up, aligning my dick and scooting closer. This was still new to me and being on my knees with Jamie splayed out was a sight to behold.\n\nShifting my hips forward, my instrument poked Jamie in the balls and I aimed lower, the purple tip seeking the entrance it had been in just yesterday only this time as a part of me. Another splooge of lube, on the orders of the woman from the toy store, and I put a steadying hand on my dick as it was welcomed in, judging by the sound Jamie made.\n\n\"Ohh, uh!\" With hands still slick with lube, he grabbed his breasts as I pushed deeper, Jamie's face coming to life. There was no music aside from our breathing and my hammering heart but that was enough. I took hold of him, the garter telling me where to put my hands as all thoughts burned away. A final, smooth motion and Jamie rolled from one shoulder to the other, letting loose of boobs and gripping the blanket instead.\n\nWalking with my knees, I growled as the last bit of purple disappeared from sight, going where Jamie wanted it and his pawing at the bed gave me pause, the fire pounding in my temples telling me he wanted it, to go for it but I, as though from a great distance, spoke.\n\n\"Ya alright?\" His dick was gently poking me in the stomach, balls pulled into a tight pouch and surprisingly soft.\n\n\"Yeah.\" A shudder racked him, breasts jiggling, tapping the mattress a few times with a hand and then holding it up as if he'd never seen it before. \"Bring it.\" And that's all I needed. Jamie had wanted me to do the work, to watch me fuck him and I was going to deliver. My first thrust knocked a moan from his lips and I picked up speed, only slowing when his stockinged legs wrapped and locked about my waist, pulling me closer still. And that was something that struck me as right, correct, needed to complete this.\n\nJamie, with his lower half propped up on a pillow, was trying to push back into me but I was giving enough for the both of us. His nylon textured legs about me, the steady slapping of his dick as I drove into him again and again, the sound of us meeting overriding anything else, the dancing shadows of his body that too, danced to our rhythm... I was a wildfire and Jamie was a bed of roses and together we would create something so savagely beautiful it couldn't exist for very long. True beauty is transient and this was proof.\n\nI fucked Jamie good and hard, the crackling inferno that rose from a single spark of longing knowing just what to do. I slowed up, giving him long, slow strokes, my wider hips meeting his forcing his legs farther apart, fully open for and to me. Fully in, I switched to shallow, fast motions that made him claw at the mattress.\n\nI knew what he was feeling, at least close enough. Jamie had surrendered, let me take charge and here, as before when bent over in the backseat of my car, had given up any measure of masculinity. Just as with the bras, panties, stockings and dress, this too was finding the female perspective and taking it for himself. Had he dared dream of this while looking at lingerie, opening himself to a woman and her always hard artificial dick?\n\nWriting this, I know I didn't think in those exact terms or words. They occurred to me, seeing Jamie laying there getting stuffed, attempting to help but unable to do much aside from take it and moan increasingly louder. Only now, alone, can I make sense of what I felt, thought in the chaos of then.\n\nEach sound Jamie made, each twitch from one of the legs about me, each time his dick slapped against me and left behind a hot, wet spot, proved I was giving him what he wanted and feeding my own desires as well. We burned, Jamie and I, and no fire lasts forever.\n\nThrowing his head back, chest fully exposed, Jamie called out my name and I felt raw liquid heat on my front. Plunging in for a final time, I felt his legs tremble and seize as I reached down to ride this high along with him. My name being moaned over and over helped and I gasped his, falling forward, hair spilling down as colors flooded my mind, stole over my vision as the now familiar sensation of nothing within came over me, an orgasm anything but empty. I'd given Jamie what we both wanted and nothing else was quite like it, of me being in total control with his consent to fuck him.\n\nPulling out, shaking, I found the rag shirt and carefully wiped Jamie's orgasm up. It was slowly dripping down and I wasn't going to take any chances of it going to my drenched and aching sex. Undoing the strap, I pulled the thing off and cleaned it as well.\n\n\"Oh my God.\" Jamie groaned, laying very still. \"I haven't been fucked like in...\" He fell silent, trying to figure out how long it had been.\n\n\"Two months? Month and a half?\" I threw out there, my mental math not up to snuff right now. That and my legs were shot.\n\n\"Thought it had been longer than that.\" Slowly, he rose and helped me up, the both of us shambling to the bathroom. I washed off the dildo with steaming hot water and soap while Jamie used some wet toilet paper to wipe himself clean of all the lube. \"I should just take another shower.\"\n\n\"Nah, just get clean enough and we'll deal with it tomorrow.\" Washing my crotch area, I watched as Jamie put a foot on the lip of the bathtub and cleaned where I had been pounding.\n\n\"Do you mind?\" He noticed me looking and I gave a shit eating smile, the only answer I had. \"I'd like some privacy when trying to fix my poor, ruined butthole.\"\n\n\"'Ruined?' I didn't go that hard, did I?\" Crossing my arms, I took the clean dildo and placed it between my boobs and used my arms to bring them closer, locking it in place.\n\n\"No but it felt like it the first time.\" Facing me, Jamie noticed the privileged spot where what I'd used to fuck him was in and smirked. \"I'm surprised you haven't tried that on me.\" My exhausted brain tried to process that and he sagged, eyes rolling skyward. \"I was joking!\"\n\n\"I could do it for you sometime.\" I offered, turning the light off and heading to the kitchen to grab two more bottles of chilled water.\n\n\"Sure, when we've moved in together.\" Jamie said, starting off sarcastic but getting more hopeful towards the end. I handed him one and lifted it, Jamie doing the same.\n\n\"Here's to having a place of our own!\" Our cheap plastic bottles came together and then we drank, the water cool and refreshing. \"Alright, cool, I'mma pass out.\" Jamie nodded in agreement and we returned to my room, with Jamie getting his now broken in stockings and garter belt off as I blew out the candle then got all the stuff from our time together cleaned up. Sure, there was a few wet spots of lube on the blanket but whatever.\n\nI got situated and held the blanket open for Jamie, who crawled in with me and there was nothing between us, his smooth skin on mine but sleep stole me away before I could even say anything else."
    ],
    "authorname": "Joshana",
    "tags": [
        "college",
        "cross dressing",
        "erotic",
        "female dominate",
        "male submissive",
        "romance",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/finding-the-perfect-fit-pt-16"
}