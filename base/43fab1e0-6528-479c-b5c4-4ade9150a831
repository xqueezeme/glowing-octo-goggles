{
    "title": "Between the Bars Pt. 04",
    "pages": [
        "Chapter 16\n\n\"I'll do the dishes, you go write.\"\n\nI clutched the edge of the table and pretended to swoon. \"I've been waiting my whole life to hear those words.\" \n\nDaniel rolled his eyes and snickered, but in a way, it was true. I pretty much gave up on the relationship thing when Neil moved out. Before that, really. Before he ever moved in. Obviously, there was no man out there who could deal with my need for space and time to myself. They claimed they could. Maybe in the beginning, they even tried; but the accusations always came around like the same song on repeat. \"You're self absorbed, you don't care about my needs, you spend more time in front of that computer than you do with me.\"\n\nNeil used to get so angry with me because I'd spend evenings in my office, where he was not allowed, with the door closed instead of going to clubs with him.  \"Why do you even want me here?\" he asked and in the end, the answer was, I didn't. Maybe Daniel really did understand. Maybe he was the one man who could accept me the way I am but it didn't matter, did it? These few days of constant togetherness pushed us into an accelerated mode and things were moving so much faster than they normally would in the outside world. We'd never relate the same way when it was over, even if we did see each other again, and I doubted we would. It would never work, our lives were too different, we were too different. \n\nBut the fact that he'd noticed my distraction while we were eating, the way I flipped through my notebook and stared off into space, and knew I had to write made me feel a spark of hope that there might be someone out there for me after all.\n\nStill, I hesitated. \"But what are you going to do?\" I asked uncertainly. I'd been made to feel like a shit so many times for wanting to write instead of \"spending quality time\" with someone that the guilt still lingered.\n\n\"Oh, don't worry about me, I can always find something to do.\" He was already pouring hot water from the pot on the stove into the sink for dishwater and he turned his head and gave me that smile that made my heart skip. Shit, I cringed inwardly. \"I'll probably read for awhile. I saw some copies of your books in the bookcase and having time to just sit and read is rare for me. Now would you go?\"\n\nJust another second of hesitation because I couldn't quite believe he meant it, but he gave me an expectant look so I grabbed the notebook off the table. God, it had been a long time since I wrote anything longhand, but I used to do it for hours and hours upstairs at my desk, the view from the window nothing but acres of fields, swirling wheat or bright green corn, changing with the seasons. So cold up here, but that was nothing new. I grinned as I dragged the kerosene heater upstairs and set it next to my desk. Grandpa would never let me have it in here because of the risk of fire but now that I could have as much heat as I wanted, I'd long ago decided I was never going to be cold again.\n\nWrapping a blanket around my feet, I sank down into my old desk chair. At first, I wrote facing the door because I kept glancing up every ten minutes expecting Daniel to come through the door with some excuse to interrupt me, like a cup of tea. That's what Neil used to do and I tried to be nice about it, but it always got on my nerves. If I wanted tea, I would've come downstairs to get it.\n\nAfter awhile, when Daniel never made the trip upstairs, I relaxed and forgot about it. The next time I looked up with any real awareness of my surroundings the wintry late afternoon light was fading outside. The snowy fields spread in every direction, turning shades of gray and blue; the wind rattled my windowpane and I grinned as I stuffed an old sock along the base of the window to keep out the persistent draft. This old house never changed.\n\nDownstairs, Daniel was curled up on the couch with a quilt and a book in his lap, the oil lamp casting light on the page from behind his shoulder. He smiled when I flopped down next to him and stretched.\n\n\"What time is it?\"\n\n\"Getting close to five.\" He flipped the book upside down on the coffee table to hold his place. It was one of my earlier works, Dark Beauty. I grimaced.\n\n\"That's not a very good one.\"\n\n\"I'm enjoying it.\" Daniel lifted the edge quilt and I slid under it next to him, snuggling down into the warmth, letting my head fall on his shoulder. He smelled fucking delicious. \"Get a lot of work done?\" he asked, wrapping his arm around me.\n\n\"Hmmm? Oh.... yeah, I guess so.\" I closed my eyes halfway. I wasn't sleepy, exactly, just still half in my fantasy world, and totally relaxed and content with his warmth surrounding me. As the fireplace crackled and popped, I watched the blue flame lick at the logs through my heavy eyelids. Daniel's thigh pressed against mine under the quilt and I put my hand on it so I could feel the muscle under the smooth, worn denim.\n\n\"Whatcha writing about? A strong-minded heroine who bucks social convention and follows her heart?\" he grinned.\n\nI laughed. He'd picked up the theme to most of my books quickly.\n\n\"No, not this time.\"\n\n\"Well, what is it then? I'm interested.\"\n\n\"Oh... It's stupid really.\" I blushed and talked too fast, the way I did when I got embarrassed. I hated talking about my work while it was still in the drafting phase, when the idea was so ephemeral that any criticism or negativity could kill it. \"Earth has finally used up nearly all its natural resources and so the scientific community sends small groups of researchers into space to explore unknown planets and do experiments and surveys, to see if they can be mined for sources of energy.\"\n\n\"A sci-fi story,\" Daniel said, smiling with satisfaction. I blushed deeper and nodded.\n\n\"Yeah. I mean, it'll never sell or anything, I'm just writing it for fun. I'll probably never finish it.\"\n\n\"Who cares? Tell me more, it sounds interesting.\"\n\n\"Okay.\" I took a deep breath and plowed on. \"So one particular group of scientists are headed to the planet KRS12. There's a malfunction with their craft and it crashes on the planet, and everyone dies except a small boy. He's rescued by the native race on this planet and a family takes him in and raises him as one of their own. He remembers his first name is Duncan but he grows up not knowing anything of who he is, or his parents, or his own race.\"\n\n\"And what is the native race like? Is the planet like Earth?\"\n\n\"Uh, kind of. The natives call the planet Osari. The basic makeup is like Earth, the atmosphere and all, so the Osarians are very similar to humans.\" Up until now, I had no idea what the planet was called. It was coming to me in flashes while I talked, like a movie in my head. \"But they're different you see, because they've adapted completely to life on their planet, and Osari is mostly covered in water. What land there is, is marshy or rocky.\"\n\nDaniel smiled, watching the genesis of my inspiration play on my face. I couldn't stop grinning because it was all so vivid and I was exhilarated by the clarity in my mind's eye. This didn't happen very often but when it did, it was very exciting. \"And because they're surrounded by water...?\"\n\n\"They've evolved with gills. They're amphibious.\" I looked at him and laughed with sheer amazement. \"Just how the fuck do you know exactly the right question to ask anyway?\"\n\n\"I dunno, it just seems obvious,\" he shrugged. \n\nHe pulled his legs up and crossed them underneath him on the couch cushion, leaning forward so the quilt fell off his shoulders. The firelight was an amber glow over his face and while I gazed at him in fascination, a wave of warmth and delight washed over me, so intense and joyous it almost scared me. I caught my breath and for a moment I was literally speechless as our eyes kept meeting, irresistibly drawn together, and I watched the corners of his eyes crinkle into those little laugh lines, and the play of his smile across his kissable lips. They parted and the tip of his pink tongue peeked out to wet them and I knew he could feel my hand trembling slightly on his thigh. I didn't know whether I was happy or totally horrified at these feelings I thought were gone forever. \n\nShit. Why now? Why him? Why always someone I can't have?\n\n\"So,\" he finally said softly. The resonance was there and I knew that he was deliberately interrupting it, deflecting it. I got the feeling this was just as scary for him as it was for me; we were both fighting it and both slowly losing. \"Tell me more about Duncan. How does he fit in with the Osarians, when he can't breathe underwater?\"\n\nI pulled my hand off his leg and crossed my arms. Self-preservation, this. We could fuck, but nothing more. \"Well, he knows he's different and the other boys torment him. They hold him underwater until he almost drowns and things like that. But his adoptive family has a son, Kai, and they're raised like brothers and they're best friends. Kai will never let anything happen to Duncan. He always seems to appear just in time whenever Duncan's in trouble. It's when they're almost grown that the mining ships from Earth appear.\" I leaned back against the couch again and shrugged. \"That's all I've got so far.\"\n\n\"It's a very good start,\" Daniel nodded.\n\n\"Don't expect a share of the royalties,\" I joked. \"Now, what about that rum and Coke? Did you put the Coke out on the porch to keep it cold?\"\n\n\"Yeah... that's a good system,\" he said as he pushed the quilt off and went through the kitchen doorway. I stayed where I was staring at the fire, pulling the quilt up to my neck.\n\n\"It's handy on holidays. We put a lot of food out there to stay cold.\" I laughed at a memory. \"One year, Gran had all the pies on the floor out there, and someone left the door open and the dog got in. He ate the middle out of all the pies before we caught him. It was so funny. My poor grandma, she didn't know whether to laugh or cry.\"\n\n\"Oh no, what did you do?\" he called.\n\n\"Just cut around the dog-eaten part and ate them anyway.\" I laughed. City folks would've thrown the pies away and ran to the grocery store to buy more. \n\nA cool glass of rum and Coke slid into my hand and Daniel perched on the coffee table with his drink. I could tell he was getting restless from sitting around the house all day. He wasn't used to being trapped indoors, and even before the ice storm he'd been sitting in a car for a couple of days. The inactivity was starting to bother him. \n\n\"So Ry, what about your parents? You never talk about them. I'm guessing this is your dad's family here, since you have their last name?\"\n\n\"No, my mom's. My parents never got married. That's her and me in that picture.\" I pointed at a framed picture on the wall of my mom, very young, holding me as a small boy under a tree bright with golden autumn leaves. Her long strawberry hair blew across her face and she was laughing, while I stared into the camera with big serious eyes. Even at that age, I took life very seriously.\n\n\"You look like her,\" he decided after looking at the picture for a minute. The whole wall was covered with pictures and portraits of the whole family, including me. Ugh. I looked so dorky with my red hair and braces. \"If you don't mind me asking, how did she die?\"\n\n\"She's not dead either,\" I said with a grin. \"My whole family is disappointingly alive and well. She just decided I was too much responsibility and I've lived here with my grandparents since I was about eight years old. Right now she lives on some Indian reservation out in Ronan, Montana with some guy I've never met.\" I shrugged.\n\n\"And your dad?\"\n\n\"Joe Cochran. I don't know him all that well. He used to come around about every summer and take me to Chicago for a week, took me to the museums and theaters and libraries, I guess so I wouldn't be totally uncivilized living out in the cultural desert of Illinois. When I was at Northwestern, he was living in Chicago at the time and I'd see him once a month or so. Right now, he lives in Raleigh, North Carolina and restores old houses. I haven't talked to him in awhile. He's an all right guy, I guess.\"\n\n\"Well, he has an all right son.\" Daniel smiled at me over his shoulder and I made my heart not do that skipping thing. Oh, damn. \"My dad was there, but he wasn't around. At least not much. He was one of those cops who can't do anything but live the job. My mom tried, but she was always locked in the bedroom with a headache. She has some kind of chronic migraine syndrome.\"\n\n\"So you were all by yourself,\" I said softly. \n\nHe paced up and down the room, looking at the pictures on the wall with his arms crossed restlessly over his chest. \"No, never. I had to take care of my little sisters. They're twins, five years younger. I barely remember a time when I wasn't changing their diapers, feeding them and helping them with their homework. I fixed more school lunches than my mother did, I'm sure.\"\n\n\"That's a lot of responsibility for a kid.\" It fit him though, his strength and his independence and his fierce dedication, his need to save the world. But I couldn't help but wonder who was going to save him, what it would take to mend what was broken inside him, that he would never show to anyone. \n\n\"Yeah, I guess it is, but I managed.\" He sat back down on the edge of the coffee table and gulped his drink. \"I wasn't like you. I had girlfriends and everything, no boys. I didn't really know why it never seemed right with any of those poor girls. I thought I was going to marry one of them when I got out of the Army.\"\n\n\"So you didn't know?\" I asked curiously. I just couldn't reconcile doubt and uncertainty with Daniel, but I knew it was a fact, a condition of being what we are. We all have to travel a road, he'd found his somehow as we all did, gone through the same hell and come out on the other side. My heart just forced me to go through it at a much younger age than he did. \"I just can't imagine not even suspecting.\"\n\n\"I knew. I just wouldn't let myself think about it. I thought it would go away if I just ignored it and never acted on it. If I went into the Army and did everything I was supposed to and married a nice girl and had kids, I could just be normal. You know, normal and miserable.\" He shrugged irritably. \"And my dad would've thrown me out if he ever suspected. So, I joined the Army right after high school and got the fuck out of there as fast as I could.\"\n\nI sat up, close to his knees, and just watched him, just listened. He'd never talked about himself like this before, and he might never again.\n\n\"The American public has no idea what really went on over there in the desert.\" He stopped, and I sat and waited but I didn't ask. I'd known enough Viet Nam vets - friends of my mother's, broken, wandering in and out of my life - to know not to ask. He'd never talk about it. I had a strong urge to wrap my arms around him and hold him but I seriously doubted he'd let me, so I stayed where I was, just waiting for him to talk when he got ready to. When he did, he started at a totally different point, skipping over that part. \n\n\"I had a lot of sex while I was in the Army, and when I got out and came back to Tallahassee. It was a thrill and I got addicted to adrenaline over in the Gulf. I became a vice cop just like my old man and I was just like him, married to the job, only with no wife and kids to neglect. Chase bad guys all day and fuck all night and the hell with the danger in either one.\"\n\n\"What finally stopped you?\" I asked softly, because it seemed empty and sad as hell to me. Something had changed him, something had anchored him and I was starting to see that the anchor was gone and beneath his world-saving exterior, he was lost.\n\n\"Dear old Dad got gunned down by a dealer. He should've been retired by then, but he just couldn't let go. They were about to pension him off and then he got himself killed instead.\" \n\nThere was the unresolved pain of losing a father he could never get close to, but that wasn't it. What else? I said in my mind, but I didn't ask, and Daniel didn't tell me. He tipped back his drink and finished it off, and then stood up and asked me what I wanted for dinner. \n\n\"You're going to cook?\" This amused me for some reason, possibly having to do with the very strong, un-iced rum and Diet Coke I'd just polished off.\n\n\"Hey, I've been known to cook.\" He gave me a playful shove, knocking me over sideways on the couch. \"We have ham and cheese and eggs. I can make omelets.\"\n\n\"On a woodstove? Fix me another drink while you're in there, why don't you. And this time, put some ice in it.\"\n\n\"We don't have any fucking ice.\" He dropped down over me and unerringly found my ticklish spot under my arms. I screamed and doubled over, clutching my ribs as I tried to roll away under his relentless tickling. \n\n\"If you open the front door, you can just chip some off the porch rail, genius.\" I kicked at him, laughing hysterically. \"Oh god, Daniel, stop... please stop.\" Thud. I hit the floor, curled into a ball and lay still, clutching my ribs. He stopped short, looking down at me in concern.\n\n\"You okay?\"\n\n\"Happy now? I'm going to get you for that,\" I promised. \n\n\"Mmm, I can't wait for my punishment.\" He pulled me up and I growled, because I couldn't stay mad when he purred into my ear in that sexy voice, pressing his body against mine. His hand ran over my back and rubbed the spot where I fell, making my cock twitch. \"I'll make you feel all better.\"\n\n\"Okay. But I want dinner first. And don't burn my toast.\"\n\n****\n\n \nChapter 17\n\nW-E-L-S-H\n\n\"Ha! Double letter score on the W plus a double word score, that's thirty points,\" Daniel gloated. \"Read it and weep, PhD. boy.\"\n\nI didn't take the time to mention my lack of a diploma. \"You can't use that word, that's not a word.\" \n\n\"The hell it isn't. Since when is Welsh not a word?\" he protested. The rum made it hard to spell so he was excited to have a decent word at last, after staring at the tiles blankly for several turns only to end up with words like \"and.\"\n\n\"It's a word, but it's proper and you can't use proper words in Scrabble. It's not legal.\" \n\n\"Says who?\"\n\n\"The rules say no slang and no proper words, and that includes names of countries. 'Welsh' is an adjective but it still counts as proper. I'll find it for you.\" I dove for the rulebook and started looking it up but he grabbed the paper away from me and held it out of my reach, smirking while I grabbed for it over his shoulders. We were on the floor in front of the fireplace with the Scrabble board between us and my knee hit the board and made the tiles jump and slide into chaos. \"Dammit, Daniel, the game.\"\n\n\"Screw the game. That's a bullshit rule if I've ever heard one.\"\n\n\"Only because you were losing,\" I grinned.\n\nI found myself straddling his lap; the rulebook tossed aside, as he pulled me forward and wrapped his arms around my back, grinning wickedly up into my eyes. A slow burn started in my cock and it hardened against him.\n\n\"Besides, I don't follow the rules. I make the rules.\" His hands slipped under the hem of my shirt and skimmed my lower back. His face was shadowed by the fire behind him and I swallowed as I stared down at his eyes and the way they crinkled at the corners when he smiled like that. Through his jeans, I felt his dick nudge me and my knees weakened while my heart began to thump. \n\n\"A law unto yourself, that must be a cop thing.\" \n\nAlways a sarcastic remark when I felt at a loss to say something, or when I was tempted to say something important or, heaven forbid, tender and emotional. My other lovers hated that about me but the look in Daniel's eyes told me he had my number, that he wasn't fooled. His fingers drew light circles over my back up to my shoulder blades and I broke out into a sudden sweat, squirming so that my cotton shirt brushed against my sensitive nipples.\n",
        "\"Yeah, it is,\" Daniel whispered, as he watched me. His lips were luscious and so very addictive and I groaned as I dropped my head down to flick my tongue over them. \"But there are a lot better games we can play.\"\n\n\"Cops and bad guys?\" I grinned against his mouth, rubbing it with the tip of my tongue, wetting his lips. His breath smelled of rum and it drew me like a magnet, irresistible, warm and sweet when he laughed softly. His hands were on my hips now and I ground against him in short little circles that bumped our hips together until I couldn't think, I didn't want to think. I captured his mouth and pushed my tongue past his sweet lips. His tongue teased mine and he sucked lightly on my bottom lip, nibbling it with the edge of his teeth when he pulled back to trail kisses over my jaw.\n\n\"I wanna fuck you like this. When we get a condom - I'll walk ten miles through the snow if I fucking have to - I have to fuck you like this,\" he growled in my ear and I went weak, clutching his neck for dear life. He pushed his hips up under mine and it felt so fucking good, oh god. He was blazing hot from the fire. My cock screamed for relief inside my jeans, the crotch was unbearably tight, digging into my tender flesh and I was going to explode with him thrusting his cock against me through our clothes. \"I want you to ride me just like this... I want to be so deep inside you, all the way inside that tight ass while you ride me so hard we both die. Will you ride me, Rylan?\"\n\n\"Yeah... Oh god, yeah.\" I swiveled my hips down against him and whimpered, biting my bottom lip in my desperation. He gripped my thighs while the hard length of his cock collided with my balls and it almost hurt even while it sent jolts through my brain and I couldn't fucking breathe. The frustration was a sharp intense ache inside me and I was so empty, I needed the one thing we couldn't have and I was going to go off like a rocket if he kept on like this. \"Daniel, oh god, oh god, stop, stop...\"\n\n\"Mmm.\" He groaned as I pulled away and dropped onto the floor in a panting heap. I couldn't stop staring at his lips, dark, wet and swollen with my kisses. I wanted to tear his clothes off. I rose to my hands and knees and slowly crawled toward him while he stared at me dizzily, eyes wide as if he'd never seen me before. His chest heaved just as breathlessly as mine did and it made me grin knowing I affected him that way.\n\n\"You know, Rylan, it might do you some good to break the rules once in awhile,\" he told me with his wicked smile. He leaned back on his elbow and watched me lazily as I moved toward him. \"You play it way too safe, you know that?\"\n\nI faltered but I didn't want him to see how his words struck me. He needed someone like himself, reckless and addicted to danger, not somebody boring and cautious like me. As soon as we got out of the farmhouse and back into the real world, and all this was over, this would be obvious. It would never work. We both knew that. Or at least, I was painfully aware of it, and being reminded right at this moment knocked the wind out my sails. Why did he have to say that now?\n\nMy uncertainty had stopped me in my tracks on my hands and knees, facing the fireplace, Daniel watching me with slightly puzzled amusement. It wasn't his fault I felt this way. I would never force my way into a place in his life. When the time came, I would step aside, so he would never have to find a polite way to get rid of me without hurting my feelings.\n\nBefore I knew what was happening, he'd flipped me over on my back, straddling my hips and pinning my wrists above my head with one hand. My heart was suddenly pounding and a cold anxious sweat broke over me and I had to get away now. I fought wildly to break free but he was strong, holding me down, his face a leering mask staring down at me, looking strange and even threatening in the dim firelight. His heavy body was a weight on my chest that made me start to gasp for air while panic flooded me in an ice-cold wave.\n\n\"Fuck! Daniel, what're you... get off me.\"\n\n\"Relax, just let go. I'm not going to...\"\n\n\"No. I'm serious, dammit, let me go.\" I twisted under him desperately; the catch in my voice wiped away his smile, and when he looked down at my face and saw what was in my eyes, Daniel let go and moved off me immediately. The threatening air was gone and even though my heart still thumped, the panic slowly receded, reason returned and I felt bad because I knew he would never hurt me. The concern and confusion on his face made me feel even worse.\n\n\"I'm sorry, I don't know why I did that.\" I drew a long breath and let it out slowly to even out my breathing, while the splinters of ice thawed in my blood.\n\n\"No, I'm sorry, I shouldn't have pushed like that. I didn't mean to scare you.\"\n\nI cringed. God, that made me sound like such a pussy. \"It wasn't you, you didn't do anything wrong. My adrenaline kicked in and I couldn't control it for a second. It used to happen to me sometimes... I'm fine now.\" I nodded to reassure him and reached behind me to grab the rest of my rum and Coke, gulping it down. Daniel still looked doubtful and his blue eyes watched me closely as my breathing returned to normal and the visible signs of my panic went away. As a cop, he was very attuned to those bodily reactions. Suddenly, he jumped to his feet.\n\n\"Be right back.\"\n\nThe strong shot of rum had restored the edge of my buzz, and I didn't think much about where he might have gone. The choices were limited; he was either in the bathroom or getting more drinks. I stared at the fire. What is wrong with me? That hadn't happened to me in years; I'd almost forgotten what a panic attack felt like, and now I remembered just how awful they were. My logical, thinking brain knew without question that Daniel would never hurt me but something about being pinned by him had transcended that knowledge and driven itself straight into my unconscious. Dammit. Now he was going to see just what a loser I am...\n\n\"Here.\"\n\nSomething hit the floor in front of me with a loud, metallic thump. \n\n\"I want you to have those.\"\n\nWith a questioning glance up at Daniel, I poked at the handcuffs with one finger. They were vaguely unpleasant to me, like a reptile dropped in my lap.\n\n\"And do what with them?\" I asked dubiously.\n\n\"Whatever you want. Use them on me, or put them away somewhere and never touch them again.\" He stared down at me with his eyes dark and shadowed, face a bit flushed from the rum but he was very serious. \"I shouldn't have cuffed you like I did in the motel, that was wrong. So I just want you to have those so you'll know I won't do it again.\"\n\nI started to smile automatically and tell him that wasn't necessary, that I was over that, but the look in his eyes told me how important this was to him. He wasn't going to express this in words. This was a trust thing with him; he wanted my trust, and so he was giving up his means to control me. The handcuffs were more of a symbol than anything else; they might not mean that much to me but his cop paraphernalia was very important to him. Giving up a piece of that was a big gesture. It meant more than just handing over his cuffs and telling me I could use them however I wanted... it meant that to earn my trust, he was putting that trust in me.\n\nNodding slowly, I picked up the cold metal handcuffs. I held them in my hands and felt their weight. They'd hurt my wrists and rendered me helpless. That trapped, out-of-control feeling scared the hell out of me. Back in the motel, there'd been no guarantee Daniel wouldn't hurt me. I was sure of him now, but there was always that little whisper of doubt in the back of my mind, those persistent questions that never let me entirely trust someone.\n\nDaniel still hovered over me, watching me in the dim firelight. Beyond its warm circle, the room was dark and chilly. I waited to see what he would do; finally, he dropped to his knees facing me and leaned in close, nuzzling my neck. He felt so good against me and we fit together perfectly; I closed my eyes and lost myself in his smell but at the same time I felt a stab in my gut because I knew it would all be over very soon. I should've been tired of him by now, trapped alone with him in this small, cold house with nowhere to go; we should've been short-tempered and irritable, sick of the sound of each others' voices. With most people, it took very little time before I was ready for them to go away and I was relieved when they were gone. But I wasn't tired of him. I wanted more time.\n\n\"How do you want me?\" he whispered in my ear.\n\nWhen I drew back, puzzled, I saw that he'd dropped his arms on my lap wrists-up and he looked straight into my eyes. He smiled a bit when the realization of what he was offering appeared on my face, but it was a patient smile and his trust overwhelmed me. When he leaned in and brushed his lips over mine I was trembling and he pressed his face to my neck again, leaving his hands in my lap, waiting. \n\n\"Just try it,\" he said so softly I almost couldn't hear, and then changed his tone to a sexy murmur in my ear. \"Want me to get naked?\"\n\nI nodded, forcing confidence. \"Yeah... get naked and bring one of those chairs over here.\" \n\nI pointed at the dining room chairs around the table behind us, close to the kitchen door, and watched him go get it. He was making this easy for me. He'd been making things easy for me since the very first night. I watched him bring the chair close to the fire; he pinned his eyes on mine, while he slowly unbuttoned his flannel shirt, dropping it on the floor. He lifted his arms and peeled off his t-shirt and the flickering light from the flames played over his flexing stomach and his chest and his nipples that were stiff and flushed from the chill in the air, his golden flesh, lean and smooth like a lion's warm rippling hide.\n\nHe was so fucking beautiful and my heart started to thump in my chest. Gratitude washed over me for everything he had done for me, the way he understood me. Some other emotion that I didn't want to think about too closely started to leak from some locked-up place inside me and I had to swallow hard and clench my fists at my sides to fight the sudden weakness in my knees.\n\n\"Pants too?\" he drawled, giving me a sexy smirk.\n\n\"I said naked, didn't I?\"\n\nI smirked back at him and crossed my arms while I hungrily watched him unbutton his too-tight jeans and push them over his naked hips. The way he moved was hypnotic, even when he lost his balance a little kicking the jeans off his legs and he stumbled and caught the edge of the couch. His cock bobbed and I stared at it as he hopped around on one leg and finally got the jeans off, kicking them to the side, and then he straightened completely naked and beautiful in the firelight. He lifted his arms and stood still while I devoured the sight of him, all that muscle and the light arrow of silky hair from his belly button down to his pubic hair curling around the base of his cock, which was hard and gorgeous, the thick flared head flushed a deep pink color that made me drool.\n\n\"Now what?\" \n\n\"Um.\" I closed my mouth and pulled myself back into the role, pointing at the chair. \"Uh, sit down with your hands behind your back. Is that okay, to put your hands in back?\"\n\nHe did what I said but I could tell he was trying not to smile at my hesitation. \"Don't ask, just do it.\"\n\nI took the handcuffs in my shaking fingers and opened them awkwardly, moving around behind him. His arms were around the back of the chair and his wrists were already together, waiting, and I closed the metal around his wrists as gently as I could, not handcuffing him to the chair so he had freedom to move. It turned me on to see him restrained and at my mercy but at the same time, nervous butterflies flipped in my stomach.\n\n\"I don't want to hurt you though...\" \n\n\"Come around here,\" he said quietly.\n\nThe serious note in his voice startled me but I did as he said, leaving him still cuffed. When I was standing in front of the chair, he looked me in the eyes and smiled. He looked so fucking hot I had a hard time concentrating on what he was saying. \"You're not going to hurt me. I won't let you, okay? Handcuffs don't hurt unless you struggle, and I'm not fighting you. Besides, I like it.\"\n\n\"You don't seem like the leather type to me,\" I grinned slightly.\n\n\"It's not something I need to get off, but it can be fun.\" He gave me that heart-stopping smile, the one that had me under arrest even when he was the one cuffed. \"Now. I'm yours, what're you going to do with me?\"\n\n****\n\n \nChapter 18\n\nAll I could do was stare at him sitting there naked with his hands bound behind him; I couldn't think and the fuzziness in my brain was soft and comforting, like floating in a fog. He was so far out of my reach. And yet, when I came back to earth he was there, my own fallen angel just looking up at me with his deep blue eyes, waiting to be touched, and my heart pounded along with the aching pulse of my cock trapped in my jeans.\n\n\"What am I going to do?\" I grinned and moved behind the chair, running my fingertip down the back of his neck. It thrilled me when he shivered. \"I'm not sure yet...\"\n\nI wondered what he wanted me to do, but he'd already told me not to ask, just do it. He'd put the reins in my hands and I wanted to be good at this; I wanted to please him. I focused and then I knew exactly what to do. I already knew what he liked most. I was going to tease him and excite him and make him shake with need before he came so hard his head exploded. \n\nI felt more confident as I trailed my finger Daniel's neck and over the back of his head, where I knew he was so erotically charged. He drew in a short, surprised breath, biting his lip; I laughed and brushed my teeth over the outer edge of his ear. Over his shoulder, I could see the fat head of his cock start to darken even more and a tiny bead of moisture welled up in his slit. Grinning even wider, I leaned against his back so he could feel the hard bulge of my dick pressing against him through my clothes and know what he did to me.\n\n\"I could push you to your knees and make you suck me, then cum all over your face...\" Just thinking of it sent a shiver down my spine. \"Mmm, you'd look so pretty with my cream dripping down your chin.\" I was stroking his head with my fingertips while I rubbed my cock against his shoulder blades just above the back of the chair. I would have to unbutton my jeans soon because the pressure was getting uncomfortable. Daniel sat very still, but his breathing was getting heavy and uneven, and I was so turned on I had to stop and take a few deep breaths to settle down and focus.\n\n\"Or I could bend you over the chair and spank your ass till it's all red and burning. You like that.\" I bent closer to his ear and growled into it. \"That ass of yours is just made to be spanked, you know that? That what you want me to do?\"\n\n\"Yeah,\" he breathed, squirming in the chair. My heart thumped heavily against my ribcage and I dragged myself away from him, leaving him panting harshly.\n\n\"But you don't get to decide,\" I whispered with an evil grin. \"I do.\"\n\nOver his shoulder, Daniel lifted his eyebrow at me, slightly impressed. He didn't think I could pull it off. But the corners of his mouth curled up in a grin and I could see he approved, and a warm feeling radiated all through my body. He was bound and helpless, I had control, but this wasn't about me. This was about him and what got him off and I was going to make him cum so hard that afterward he'd be limp and drained.\n\nSlowly, I circled around the chair so I was standing in front of him, facing him with my back to the crackling flames. He tilted his chin up and looked at me and I swallowed hard. Seeing him like this rendered me speechless. When I finally recovered my voice, it was harsh and raspy, not cool and confident like I wanted it to be. \n\nI ran my hand over the obvious bulge in the crotch of my jeans. His eyes dropped and he watched as I rubbed the hard ridge of my cock and traced the flare of the head. It felt so good but I didn't take my eyes off him. The firelight made him glow in shades of gold and amber and bronze, a gilded sculpture. He was so hard, and it was all for me.\n\n\"Remember that little show you put on for me in the shower? Where you stroked your cock for me, and tugged on your balls and jerked yourself while I watched.... But I couldn't touch you because you had me cuffed to the handicap assistance bar?\" \n\nHe smirked, eyes still on my hands, which were now slowly unbuttoning my jeans. \"I remember.\"\n\n\"Yeah... You liked that, didn't you? You liked making me watch you cum. You liked that there was nothing I could do but sit and stare. Didn't you?\"\n\n\"Mmmhmm. I really liked how you looked at the ceiling and pretended not to watch,\" he grinned. \n\n\"I was watching,\" I told him. \"I watched you spurt on the shower curtain. I wanted to be on my knees catching it in my mouth, licking all the water off your skin. And now I'm going to show you what I did in the bathroom after you fell asleep.\"\n\nIn some distant way, I couldn't believe I was doing this but it didn't even bother me. I was in another place in my head where shame and embarrassment couldn't intrude. The look in Daniel's eyes sent me there and I was so focused on his need that nothing else seemed to matter. Quickly, I stripped down to naked skin. I barely felt the chill of the room or heat of the fire against my back. He watched me with burning eyes as I wrapped my hand around my shaft and stroked it slowly. I imagined it was his hand on me at the same time I stared at him, watching the way his breath quickened and the little drop of liquid dripped from the tip of his cock and glistened down his shaft. There was a shiny pink spot just under the ridge of his fully hard, swollen head that I couldn't stop staring at. I wanted to lick it and suck it and I stroked myself harder, my eyes rolling back a bit as I struggled to keep them open. I wanted to see him, wanted to know he was watching me.\n\nThe desperation of the night in the motel seized me. He needed to see what he did to me. I dropped to my knees, jerking myself more slowly. My face, I knew, was red and flushed and damp the way it was in the mirror that night. Daniel licked his lips as he stared at me naked on my knees. My cock surged in my hand and I ran my thumb over the tip, spreading the sticky pre-cum all over the head while I spread my legs and lifted my knees up so he could see better. Two bright spots of red were spreading over his cheeks and his eyes started to glaze over with lust as he stared at me. \n\nI grinned through my own sexual haze. \"You like that? While you were sleeping I was locked in the bathroom doing this... because watching you got me so hot...\"\n\n\"I knew you were jerking off,\" he said harshly.\n\n\"Mmmhmm.\" The tingling pressure grew in my balls and I groaned, sliding my other hand down to gently squeeze them. \"Oh shit,\" I whispered. Gasping for breath, I pushed myself back so my back was against the couch and I spread my legs wide, propping my ankle on the coffee table just like I'd put it on the side of the bathtub. I'd never been this open and exposed to someone and it excited me so much I almost came right then and there. But I slowed down and got a grip on myself because it wasn't time yet. \n\n\"Yeah, and I wet my fingers,\" panting, I slid my first two fingers in my mouth and sucked them until they were wet. Daniel's eyes got very wide and his cock was dripping while he squirmed restlessly in the chair. \"Got them nice and wet and then...\"\n\nI reached down and touched my hole. It tingled and I felt electricity race through me and settle in my gut. With a whimper, I slid my finger inside and across the room, Daniel let out a groan. It was hard to keep looking at him, hard to hold back, but I squeezed my cock hard just under the head and the intensity faded just a little so that I was able to speak again, in a harsh raspy voice that sounded nothing like me.",
        "\"Oh god Daniel. It feels so tight... I want you to be in there.\" What it would be like on my knees with him behind me... slowly pushing into me and my muscles wrapping around his hard shaft filling me up, owning me, possessing me. He was panting in hard jerks and so was I now, eyes slitted to watch him totally at my mercy, unable to touch his cock and give himself the pleasure and relief he needed. \n\nFor a reason I didn't understand, I suddenly stopped caring about my own orgasm. I got to my knees and crawled over to him with my cock aching. I crawled between his legs and spread his knees with my hands. His head went back and he groaned deep in his throat when I wrapped my hand around his throbbing shaft. I ducked my head and closed my eyes as I gently sucked his balls into my mouth, first one then the other.\n\n\"Rylan... please...\" He was panting hard and his hips swiveled against my hand. \"Let me out of the cuffs, I want to touch your hair...\"\n\n\"Uh-uh.\" I grunted and shook my head with my mouth full of his sack and he melted back whimpering. My mind was blanking again, drifting on his scent and the taste of him and the way his cock pulsed in my hand. I drew away and climbed onto his lap straddling him with my cock against his belly and his next to it. He tilted his head back and gazed up at me with this indescribable look of trust and need and I wrapped my arm around his neck and licked his open lips. \n\n\"Soon... we'll be out of here soon and I'll get to feel you in me...\"\n\nHe whispered 'Oh god' or something and I started to ride him. I thrust my hips into him and the chair thumped on the floor and our cocks slid together between our stomachs; it was almost like fucking and Daniel moaned deep in his throat and it sounded so beautiful I shivered all over. The tingle in my balls deepened into a burning fire that raced up my spine. I wrapped my hand around his cock and stroked it. He bucked his hips and I felt his abs tighten and his back arch; he shot in my hand, splattering his stomach with his warm cum. Watching it spurt out pushed me over the edge and I finally gave into the orgasm licking at my insides. Yellow bursts of light exploded behind my eyes and I came so hard that for a moment, I actually felt dizzy from the pleasure and I collapsed on Daniel's heaving chest and we stayed locked together limp and slick with sweat and juices until our breathing finally slowed. \n\nReaching back, I unlocked the cuffs and Daniel brought his hands around and rubbed his wrists, opening and closing his hands to get the feeling back into his fingertips. I got off his lap, bending to kiss him before I pulled him to his feet. After a quick, chilly cleanup, we were under the layers of warm covers in bed with the heater on. Daniel wrapped his warm body around me and I drifted mindlessly, hovering between sleep and oblivion.\n\n\"You did great,\" he said in my ear. He sounded far away and it took a second for me to come back from wherever I was drifting. \"I'm proud of you.\"\n\nThe praise made me feel warm and happy, like a puppy being petted. \"You didn't think I could do it, did you?\"\n\n\"I knew you could. I just didn't think you knew it.\" He stroked my arm with his warm hand and then reached behind him to grab something. He hung the handcuffs on the bedpost next to my head. My breath caught in my throat and I stiffened, knowing exactly what he wanted, even though he didn't say it.\n\nThe silence hung thick between us. The tightening in my crotch confused me and I lay still on my side with my back to him.\n\n\"Talk to me,\" he said in a low, commanding voice, right next to my ear. \n\n\"Uh, about what?\" \n\n\"You need to tell me who hurt you. We can't get past it until you do.\"\n\nMy stomach sank. \"Oh.\" I stopped, hoping he would let me off the hook, but he peeped around at my face with his eyebrow lifted expectantly and I sighed. Fuck.\n\n\"Okay,\" I said reluctantly. \"Just remember you asked. You remember me telling you about Matt, right?\"\n\nHe nodded and I rolled to my back and stared up at the ceiling.\n\n\"Yeah, so Matt was my first love. He told me he loved me too and I believed him because when he fucked me, it felt like love. Anyway. We talked about going away to school together, somewhere that we could be open about who we were and our relationship. It was difficult to hide it. We were going to move to Champaign and go to the U of I, but I got a scholarship to Northwestern and as much as I wanted to be with Matt, Northwestern has an outstanding English program. Getting a scholarship there was a big deal and I couldn't disappoint my grandparents. Evanston and Champaign weren't that far away, we promised we'd visit each other.\n\n\"We were pretty busy the first few months of school and didn't see each other. I didn't exactly plunge into the gay scene in Chicago but I did explore it a little bit. I'm sure you know how exciting it is when you first come out and see you're not all alone in the world after all. It was an especially intense time for me, being from a small town, and never having known anyone openly gay. But I didn't fuck anybody else because Matt was the only one I wanted. I wrote him all these passionate letters; he didn't answer most of them, but I didn't expect him to; that just wasn't his style.\n\n\"I finally went to see him. I wanted to share all my new experiences with him; I wanted us to go to gay clubs where we could kiss and dance and everything else we'd never gotten to do in public. But when I got there, I saw that Matt wasn't going in the direction I was. He was living a different life. He'd pledged a frat and was living in the frat house; so instead, we ended up going to frat parties. I was disappointed but it was okay because we were still together.\"\n\nStopping, I took a deep breath. Daniel was lying beside me with his arm folded over my chest, his chin resting on it, his eyes huge and bottomless so close to mine. I glanced at him and he nodded encouragingly. He could tell this was hard for me.\n\n\"Okay.\" I swallowed, stalling. \"So, we went to this frat party with some of his buddies. It was something new and I was having a pretty good time even if it wasn't exactly where I wanted to be. I had a lot to drink and smoked a little pot, so that I was feeling pretty uninhibited. I probably didn't even know how wasted I was. I'm not even sure how we got back to the frat house, but I ended up in Matt's room with him and about four of his friends. We... uh... got to talking and I'm not sure how it happened... I was drunk, too drunk to know what was going on at first, and then when I finally understood I couldn't stop them...\"\n\nDaniel drew in a sharp breath and his eyes narrowed. He stared at me, but I flushed and couldn't continue because my throat was so tight. Finally, he reached up and gently brushed my hair back from my eyes.\n\n\"So these frat boys, they...\"\n\n\"Yeah,\" I interrupted before he could say it. \n\n\"And Matt? What did he do?\" Daniel asked. He didn't sound angry or upset, just calm and encouraging, reminding me that he was a detective after all. \n\n\"Actually... I'm not sure. I was so wasted, Daniel. Everything got all mixed up and I just... I think he just kind of watched, he didn't do anything to me but he didn't try to stop it either.\"\n\nI closed my eyes, shutting out the details. Shutting out the memory of Matt's eyes, and his face that night just looking at me, just watching while I was helpless and in pain. I'd never told anyone exactly what happened that night and I didn't plan to now. I'd finished with it years ago, locked it away, filing it for future reference when I might need it some day, the day I wrote a \"serious\" work. Someday, I would use all that pain to create something and nobody could take that away. Until then, it was mine alone.\n\n\"What happened afterward?\" he asked softly. \n\n\"I dunno, I guess I passed out. I woke up while it was still dark. I was on the floor and Matt and one other boy were asleep in the room. I grabbed what I could find of my stuff in the dark and left.\"\n\n\"Did you call the cops?\" There was a sad note in his voice; he knew what my answer would be.\n\n\"No. What would they have done? I was drunk... I was high... the cops wouldn't have believed a little gay boy anyway. I just got the fuck out of there.\"\n\n\"Yeah,\" he said simply. \"Most rapes don't get reported. The victims are too ashamed to tell anyone.\"\n\n\"I'm not a victim. I was stupid. I shouldn't have been there; I shouldn't have let myself get in that situation. I should've known better.\"\n\n\"It wasn't your fault, Rylan. You were with the man you loved, you had no way to know he'd violate you and betray your trust like that. You thought you were safe.\"\n\nSafe. His words struck me like a punch in the gut, and for a split-second, everything I'd kept locked up inside threatened to burst. Gasping, I instinctively curled into a ball and Daniel was there, holding me and whispering in my ear that it was okay, that nobody would hurt me again, all the things I needed to hear then but I didn't because I never told anyone. Wrapped in his arms I let him take all that old pain away and when it was finally gone I felt wrung out and empty and totally clearheaded. I looked up into his blue eyes and I saw nothing but a refuge there. Daniel was my safe haven. I wouldn't let myself think about later, when this would all end. I was safe with him. Closing my eyes, I let him take my arms - in front of me, not behind - and there was nothing but peace when the metal closed around my wrists and the lock clicked.\n\n \nChapter 19\n\nThe low sheet of gray was finally gone from the sky, leaving it high and thin and shockingly blue. The fields stretched in every direction from the kitchen windows, endless white expanses of glittering unbroken nothingness. The sun reflecting off the whiteness made tears sting my eyes. Three miles away across the southwest field, a plume of smoke rose from the nearest neighbor's chimney, but nothing moved. I felt like Daniel and I were the only two people in the world, frozen in this spot like insects in amber; and instead of lonely or restless, I didn't think I'd ever been more content. \n\nThe fire popped in the fireplace behind me and I glanced through the kitchen door over my shoulder at Daniel on the couch next to the fire. He'd been reading under a blanket and he'd dozed off. His face was half-hidden, snuggled into the quilt, and his sides rose and fell with the slow rhythm of his breathing. I smiled because he looked so fucking adorable. Yeah, he was content too. He'd stopped pacing around like an animal in a cage. When he got out of bed and spotted me at the table with my notebook early this morning, he came up behind me and rubbed my shoulders before bending down to kiss me, and when we parted we'd stared into each others' eyes until I finally had to look away, heat rising in my face.\n\nThat odd butterfly feeling I'd had in my belly then was back now, as I gazed at him snoozing under my grandma's quilt. Shit. My heart flipped and I groaned to myself because I was in serious trouble.\n\nI'd started writing almost as soon as I woke up and I'd been scribbling away pretty intently until now. The words flowed more smoothly than my hand could keep up with, having to scrawl it longhand. It had been a long time since I'd been in the zone like this. I found it odd that Daniel's presence, and everything that happened last night, didn't distract me. Instead, it seemed to make me more focused than I'd ever been before. \n\nUsually when writing, I got up and wandered around, played computer games, flipped through channels on the TV, all the electronic distractions I'd set up for myself. I didn't have any of that here and everything was so much simpler; and instead of annoying me, having Daniel here put me at ease. I'd never felt this all-encompassing desire to be with someone. My eyes darted to the window where an icicle was forming drop by drop on the eaves outside and my heart sank. The ice was melting and time was running out. Paradise lost.\n\n\"What you looking at?\" Daniel's rough, sleepy voice cut into my thoughts. He blinked at me, smiling sleepily and rubbing his eyes with his palms, and my dick got hard. I was suddenly afraid he could read exactly what I was thinking so I ran my hand through my hair to cover my nervousness.\n\n\"Damn, I need a shower.\" I shuddered when I realized how greasy my hair was. Sponge baths weren't cutting it anymore. Daniel could run a damp cloth over the soft stubble on his head but I needed shampoo.\n\n\"A shower would be nice, then I could stick my tongue up your ass.\" \n\nHe watched me, his grin getting wider as my face heated. He loved making me blush.\n\n\"Why are you getting red, Rylan? You liked it when I talked dirty last night,\" he taunted me softly. Everything that happened last night washed over me in a wave and I felt my stomach drop like I was on a roller coaster. Thrilling but somewhat nauseating. \n\n\"Last night was different,\" I said when my throat finally let me speak. I stared down at the table, untwisting the end of the wire spiral of my notebook.\n\n\"Yeah, it was. Last night was something entirely different.\" His self-satisfied grin softened and he lifted the quilt and patted the hollow next to him, in the curve of his body. I'd never seen anything so inviting. \"Come here.\"\n\nI got up and went over to him, bracing my hands on the back of the couch. He pulled me down next to him and wrapped his warm arms around me, and I buried my face in his neck and closed my eyes. My cheeks and my lips burned a bit, scraped raw from his stubble, constant skin on skin friction last night. When I shivered, he mistook it for cold and pulled the quilt over my shoulders.\n\nDaniel drew a long breath and I froze, waiting. I was afraid he was going to start talking about last night and I didn't want to talk about it. There were too many things I couldn't put into words and I didn't want to try, not now and maybe not ever. To my relief, he just closed his eyes and didn't speak.\n\nWhen the lock clicked around my wrists last night, my thoughts stopped. It was the first time in my life my inner narration was silent and I just let myself be in the moment, without telling it to myself in my head so I could understand it and remember it later. Like a dream, the images were hazy and disconnected, awash in emotions.\n\nHands on me, lips, hot skin everywhere, flesh on flesh, his weight pressing me down keeping me safe. Overwhelming peace, total security. My hands bound and my mind quiet, relief, no struggle. The kind of surrender I feared more than anything in the world until Daniel showed me what trust meant. He showed me what it meant to be safe and in return, I turned myself inside out for him. Somehow he knew what I secretly needed, what I could never admit even to myself let alone to him; I didn't know how, but he knew. He knew. Pillow cool against my face and my chest, fingers wrapped around the bed frame's iron bars, wrists bound together with a short chain; my eyes closed while Daniel's hand landed sharp stinging blows on my naked ass cheeks. His voice in my ear, telling me.\n\nIt's not wrong to want this. It doesn't mean you're weak. It doesn't mean you liked being hurt.\n\nHis telling it to me made it true. My secrets climbed out of the box in which they were locked and Daniel took the fear and the shame away. He was the light in my darkness.\n\nHe opened an eye and looked at me when I squirmed and swallowed. There was still shame there because I'd never opened myself like that before, not even with Matt. I was wide open and if he mocked me or used my secrets against me, I had no defense. He could destroy me like Godzilla crushed Tokyo and it fucking terrified me.\n\n\"You okay?\" he asked softly. He squeezed me and the anxious tightness left my chest. Safe here.\n\nI nodded. He wouldn't do that to me. He'd promised me. He'd promised me that when the cuffs came off, we didn't visit that place again. Only when I wanted to. Only when I asked for it.\n\nWhen the cuffs were on, I didn't have to ask for anything. \n\n\"We got any food left? I'm getting hungry.\" His belly rumbled under my hand for emphasis and we both laughed. I sat up, reluctantly leaving the warm cocoon of the quilt, muttering something about lunch even though I had no idea what time it was. Clocks didn't matter anyway. There was no schedule to follow and nowhere we had to be; so, when tummies growled, it was time to eat.\n\nMovement caught my eye in the blinding whiteness outside the window, in the field past the corner of the barn. Two four-wheeled ATV's approached, one of them trailing a big yellow raft-type inner tube with black handles tied on with yellow nylon rope. The riders were Jeremy and Madison, Paul and Charlotte's two kids, my cousins. Watching them park the ATV's and tromp up to the house, I clutched the edge of the counter with the realization that if Paul let them drive the four-wheelers over the frozen fields, then the roads would very soon be passable for a car and that meant we'd be leaving soon. It also meant condoms.\n\nThey burst in the back door in a swirl of cold. Maddie threw her arms around me in a snowy bear hug while Jeremy headed straight to the stove's warmth. He was fifteen and didn't have much to say, like his father. Maddie was the outgoing one. She grinned up at me, her freckled cheeks red from the cold. In the puffy parka and layers of scarves and mittens, she still looked like a little girl, but she was getting so grown up. She was almost fourteen now and according to her mother, already the battles over low-slung jeans and belly-baring tops had begun.\n\n\"Mom sent us over to get you,\" Jeremy announced after we all greeted each other in our usual low-key manner. \"She said bring your stuff.\"\n\n\"You've got power, then?\" I asked. Daniel appeared in the doorway and my eyes automatically lifted to him. When he walked into a room, he was the center of it. The kids stared at him and he smiled, looking totally at ease while Jeremy answered my question.\n\n\"Yeah. Mom figured you'd be ready for a hot shower.\"\n\n\"Sounds great,\" Daniel grinned at me from under his lashes and I fought the heat in my cheeks. I didn't want the kids to see me blushing, but Maddie's eyes were just as sharp as her mother's and Jeremy hadn't missed a trick since he was born. He looked between us skeptically, while Maddie was busy pulling off her coat.\n\n\"You can sleep downstairs in the guest room,\" Maddie piped up. \n\nDaniel and I exchanged a glance. Jeremy continued to stare at Daniel while I introduced them. \n\n\"My dad says you're a cop.\"\n\n\"Yeah, I'm a detective down in Florida,\" Daniel nodded. Not even suspicious Jeremy could resist that smile and he grinned back.\n\n\"Can I see your badge?\"\n\n\"Jeremy,\" I protested but Daniel said of course and went to go get it from his bag, which he'd stashed in the dining room. Leaving the kids in the kitchen, I went back to the bedroom and got what little we had together. I saw him sliding his gun out of the bottom of the bag when I walked back in carrying some dirty clothes I wanted to throw in Charlotte's washer.\n\n\"I'll leave this here,\" he said quietly and I nodded. I knew he didn't feel safe without his gun, so I appreciated him not bringing it into my family's home. We found a safe place for it in the bookcase.\n\nThe kids inspected his detective's shield while I put everything in a grocery bag. There wasn't much. It was still down in the teens according to the thermometer, so Daniel and I piled on layers of sweaters and warm socks and all the other cold weather gear from the closet. My grandpa's clothes fit Daniel, so he had plenty to wear. My grandparents left all their coats and things here, since they didn't need them in Florida. Heading through the door, I enviously imagined them sipping mimosas in the warm Sarasota sun while I froze my balls off.",
        "I huddled on the back of the ATV behind Madison. It made her so happy when I let her drive; she was a good driver, and I remembered being fourteen and desperate to be treated as a grown up. Daniel eyed up the inflatable raft and asked if he could ride on it.\n\n\"But it's five miles,\" I protested. \"It's dangerous, you could be killed.\"\n\nHe shot me a brilliant grin, making my heart skip. His eyes were exactly the same shade of blue as the sky behind him. I forgot about the kids, watching with interest, and stared at him with my mouth slightly open. God, he was fucking beautiful.\n\n\"If an inner tube can do what drug dealers, crooked cops and Iraqi soldiers with machine guns haven't managed yet, then my number is up.\"\n\nI had to laugh, shaking my head. Dammit. He had a point.\n\nThe wind was cold in my face as we sped across the frozen field, following the set of tracks made on the way over. Pulled behind Jeremy's four-wheeler, the raft bounced over bumps and flew into the air while Daniel clutched the handles with snow flying in his face, whooping with glee. I grinned. He looked like a kid, face flushed with the cold, laughing, wild and daring and completely in love with life. At first, I'd hated him for dragging me kicking and screaming out of my neat, quiet little life but now when I thought about going back without him my heart seemed to sink; but I put it out of my mind for now... Plenty of time to think of that later. \n\nFinally, we pulled up into Paul and Charlotte's back yard. Their house was also in the middle of a field, with a big metal storage barn and a few smaller outbuildings gathered around it; heavy equipment was parked neatly in a line next to the barn. Paul owned his own excavating business, and my aunt Charlotte was the school secretary at our old grade school. Their brick split-level home was solid and spacious and a lot more comfortable than the drafty old farmhouse. I carried the grocery bag of dirty clothes I'd held in my lap the whole way over, as well as another with my notebook and our toothbrushes. I took Daniel's gloved hand as the kids sped off on the four-wheelers and he wrapped his snowy arm around me, red-faced and grinning, as we walked up to the porch. \n\n\"That was fun. You should've tried it.\"\n\nI shook my head. \"No thanks. If it was about eighty degrees, I might.\"\n\nHe laughed just as the door flew open. My aunt flung open the screen door and threw her arms around me.\n\n\"Squirrel Bait!\"\n\n\"Monkey Butt.\" I hugged her back. She hurried us into the big, spacious kitchen; it was so warm and smelled delicious, of fried chicken and rolls and spices. I breathed in appreciatively, my stomach growling. Charlotte was talking a mile a minute while Daniel and I shed our snowy boots and coats and peeled off scarves and sweaters. \n\n\"I can't believe you've been over there in that cold house all this time. It must've been awful. I told Paul to bring you back but he said you had plenty of firewood and you wanted to stay although I have no idea why when you could've been nice and cozy over here. You have to be hungry. I made your favorite, Rylan.\" She turned and smiled at Daniel, who was hanging back a bit, uncharacteristically shy. \"And you must be Daniel.\"\n\n\"Yes ma'am,\" he said, shaking her outstretched hand. His mellow drawl dripped from his lips like sweet, thick honey. I shivered, sharing Charlotte's appreciation. \"Daniel Braden, nice to meet you.\"\n\nShe looked him up and down admiringly and by the way she was smiling, I could tell she liked him. \"Listen to you! Such a proper Southern gentleman.\"\n\n\"Not always,\" I said under my breath and I grinned to see Daniel's cheeks redden slightly more, this time not from cold. I'd never seen him blush. I didn't even know he could blush.\n\nCharlotte punched me on the arm. \"Shut up, Master Squirrel Bait. Daniel, it's so nice to meet you. I'm Charlotte Harlin, Ryan's aunt. I'm so sorry you've been trapped over there in that icebox, come in and get warm. Do you like fried chicken?\" she asked as she headed toward the stove across the room. I arranged our snowy boots on the doormat with the other shoes and barn boots that already lay there, and hung our coats on the pegs over the furnace grate so they could dry. On the other wall, next to the fireplace, a floor-to-ceiling Christmas tree twinkled. I'd totally forgotten it was only two weeks until Christmas. \n\n\"Yes'm, I do,\" Daniel answered politely. \"Thanks for having me, Ms. Harlin.\"\n\n\"Oh, Lordy,\" she laughed and I smirked. \"Don't call me that, please. It's Charlotte. Come in and eat. Everything's ready. Rylan, get you and Daniel a plate while I go round up the kids to eat.\"\n\n\"Where's Paul?\" I asked.\n\n\"He's out with the county snow crew.\" She pulled on a coat and slipped her feet into oversized boots.\n\n\"You mean...\" I looked over at Daniel quickly. His eyes widened in comprehension. \"The roads are clear?\"\n\nShe shook her head firmly. \"No, they're still closed to traffic, only the road crews can get through. But tomorrow you'll be able to get out.\" \n\nWhen the door closed behind her, I turned around to Daniel. \"Well, looks like tomorrow...\"\n\n\"Yeah.\" He grinned and wrapped his arms around my neck, drawing me closer. \"I'm sorry in a way. This has been kind of fun. But we can't stay here forever, and I know what our first stop is going to be.\"\n\n\"Mmmhmm.\" I closed my eyes as his mouth captured mine and he scraped his tongue lightly over the edge of my incisors, teasing the tip of my tongue with his until they played lightly. I clutched his shoulders, moaning softly. I wanted him so fucking bad and just the very thought of finally procuring that all-important latex disc just made my knees go weak and butterflies flip in my stomach. \n\nGrinning, I pulled back and took Daniel's hand to lead him toward the food before Charlotte got back with the kids. \n\n\"Hey Squirrel Bait,\" Daniel whispered. \n\nI cringed at the nickname. \"Huh?\"\n\n\"I can't wait to fuck you,\" he said under his breath just as the door swung open and I had to turn to the stove quickly to hide the hard-on that suddenly dug into the crotch of my jeans. \n\n****\n\n \nChapter 20\n\n\"He's beautiful. Those blue eyes.\"\n\nCharlotte gave a dreamy little sigh as she gazed out the window at Daniel, who was walking toward the storage building with Jeremy and Maddie hanging on his every word. Amidst the conversation over lunch, it turned out Daniel was a classic car buff, which I didn't know because it never came up before, and so Jeremy was taking him out to show him the 1968 Mustang Paul had been restoring for years. Maddie went along because she followed her brother everywhere he went. I smirked, scraping chicken bones onto a plate.\n\n\"Yeah. I know.\"\n\n\"And he likes you a lot, too. I can tell.\" She nodded.\n\n\"You think so?\" I asked, trying to sound like it didn't matter. \"We haven't known each other that long.\"\n\nCharlotte gave me a knowing look over her shoulder. I wasn't fooling her. \"Doesn't matter. He watches you, even when you're not aware of it. That means he likes you.\"\n\n\"He does?\" I blushed deeply and Charlotte laughed.\n\n\"And you like him a lot too, don't you.\"\n\n\"Yeah.\" I nodded shyly, my face flaming. I put my hand on my stomach. \"I... I get this funny feeling when he smiles at me, you know?\"\n\n\"Really? So you're fall --...\"\n\nCharlotte stopped mid-word when she glanced at me and saw my eyes bug out and my mouth start to open in protest. She smiled and reached over and pushed my hair back from my eyes, stroking my red cheek. Then she gave it a little slap.\n\n\"So, tell me how you ended up on a road trip with this gorgeous man without any condoms. Are you fucking crazy?\"\n\n\"The trip wasn't planned,\" I answered with a shrug. I knew Paul would tell her the whole story so it was no surprise she already knew about our dilemma. \"We were just running to Birmingham, Alabama really quick and ended up here.\"\n\n\"And how did that happen?\"\n\nI hesitated. \"Well, that's Daniel's story to tell, not mine. He'll have to decide if he wants to tell it to you.\"\n\nHer brow wrinkled curiously, but she didn't press the issue. Instead, she jabbed me in the ribs with her elbow. That was just how Charlotte showed affection; I was used to it. She used to hold me down and tickle me until I pleaded for mercy and nearly wet my pants. No wonder I was screwed up in the head.\n\n\"So... you don't have any condoms in the house, do you?\" \n\nCharlotte laughed. \"I'd kill Paul if I found a condom and I don't even want to think about the kids having any.\"\n\n\"Doesn't hurt to ask.\" I dodged her, grabbing her arms as she snapped my butt with a dishtowel.\n\nTwisting out of my grasp, Charlotte somehow got behind me and pulled my arm backward; I swiped with my ankle and knocked her off balance. We were rolling around on the kitchen floor when Daniel and the two kids came back into the house, laughing and talking. They were obviously fast friends now. Daniel looked startled to see us pummeling each other, while the kids just rolled their eyes and ignored us. They were used to it.\n\n\"Mom, can we go tubing down at the Millers' hill? It's not that cold out,\" Jeremy assured her as we lurched to our feet and straightened up our clothes, breathless with laughing. \"Daniel's never been tubing.\"\n\n\"Yeah... okay... but don't stay long. And get your long johns on because it most definitely is cold, young man, don't try to bullshit me.\"\n\n\"I might go with them, it sounds fun,\" Daniel said while they ran to their rooms to get dressed. \"Wanna go?\"\n\nI shook my head. \"No, but you go ahead if you want. Or, you can stay here and take a nice steamy shower with me while the youngsters are away, instead of going out there in that nasty cold. What do you think?\"\n\n\"Um,\" he gave Charlotte an uncertain glance but when she just rolled her eyes and turned away, he grinned at me. \"You make a good argument.\"\n\n\"I can be very persuasive,\" I breathed right next to his ear as the kids ran back in the room. Won over by Daniel's charm, they were disappointed he wasn't coming along but finally they left and I grabbed Daniel's arm.\n\n\"Mind if we borrow your shower, Charlotte?\"\n\n\"Sure. Use the one in mine and Paul's room. It has a safety bar,\" she grinned. \"Towels are in the closet behind the door. I'll put this laundry in when you get out.\" She called after us as I quickly marched Daniel down the hallway. \"Have fun.\"\n\n\"You sure she doesn't mind?\"\n\n\"Nah. Don't worry about her.\" I pushed him against the back of the door, locking it with one hand while unbuttoning his shirt with the other. He grinned at me, letting me pull his clothes off while I nibbled at his chin and down his neck with short biting kisses.\n\n\"How quiet can you be while I tongue-fuck you?\" \n\nPeeling off his shirt, I shivered. My dick was so hard and he hadn't even touched me. \n\n\"Can you be totally quiet?\" he went on in my ear, his breath hot and relentless. \"Not make a sound while I eat you out?\"\n\nI was sure I couldn't, but I nodded my head to speed the process of getting us both naked. I turned on the water and let the steam rise over the top of the glass enclosure while I peeled his off his layers of clothing - flannel shirt, long underwear, jeans, socks, greedy to touch his skin, smell him, trace the line of his hipbones with my fingers down to his soft golden brown pubic hair. He caught a breath when I raked my fingers in the silky curls. I wrapped my hand around his cock and it was so warm and solid and beautiful. I whimpered longingly, like a hungry puppy. The urge to fall on my knees was almost more than I could resist but I needed that shower first. The rising steam made me flushed and damp, and I hastily shed my own clothes while Daniel watched, still leaning against the door, naked, with his eyes heavy-lidded and sultry.\n\nThe water felt so fucking good splashing on my face. The hot water streamed down the back of my neck and my shoulders and down my back into the crack of my ass. So hot and steamy and soothing, washing away the days of never being quite warm. Daniel didn't get in the shower with me but now the glass door slid open and his lean body pressed against me from behind, every inch of me in contact with his skin. I felt his hard shaft against my ass, nestling into the crack, and I leaned back against him and sighed with contentment. Oh, yeah.\n\nSoapy hands washed me from head to foot. I was grateful for the stout metal safety bar attached to the enclosure wall because gripping it was the only thing keeping me from slipping to the tiles in a boneless heap. I tilted my head backward, eyes closed, as Daniel lathered deliciously sweet-smelling shampoo into my hair, massaging my scalp with his fingers while the tip of his dick danced and slid over my butt cheeks and his wet, slippery skin grazed the back of my thighs, my lower back, my shoulder blades, everywhere I was most erotic and sensitive.\n\n\"God... Daniel, that feels...\" I let out a groan. He laughed softly, moving me under the spray to rinse away the lather. When my hair was squeaky clean, his hands turned me around to face him. Then, I was drowning in wet slippery golden flesh and a hot hungry mouth and streaming water, a very hard cock sliding over my belly, everywhere at once, nudging at my balls. It felt so good I threw my head back and clutched his shoulders, biting back a moan. Pressure gathered in an aching knot in my balls and my legs almost couldn't support me.\n\n\"Turn around so I can wash your back,\" Daniel said. His voice was strained and harsh and I had to smile knowing this affected him just as it did me. The head of his cock was deep red and swollen, so tempting, but I didn't have any willpower to do anything but what he told me.\n\nTurning around, I braced my hands against the tiles. To get better balance on the slick molded plastic floor of the enclosure I spread my legs a bit and leaned my weight onto my hands. This naturally lifted and spread my ass and I chuckled when Daniel sucked in a breath between his teeth. Being spread for him like this made my knees tremble with a mixture of shame and excitement and I needed his hands on me, to reassure me it was okay\n\nTeeth nipped at my shoulder while his soapy hands slicked down my back, making slow circles, down my spine to my hips and then finally cupping my ass. He soaped up my cheeks, then ran his fingers down my crack. My hole tingled but I didn't move. His slid down slowly, circling my hole, teasing it and then slipping away when I pressed back to get his fingers in me. He chuckled softly in my ear and I closed my eyes and lost myself in the feeling of his slippery finger stroking that little spot under my balls. Nobody had ever lavished this much attention on my ass - I'd never let anyone - and it felt so good. My cock leaked and twitched as he ran his thumb around the base of my balls, swirling in little circles, then cupping them gently in his hand. I spread my legs more to give him better access and he pressed into me, his other hand running lightly over my back. For once, he wasn't talking dirty in my ear, he was just breathing, touching me, moaning slightly now and then.\n\nThe weight of his cock was warm and solid resting on the top of my ass. His balls were soft against my crack. I drifted, losing myself in his hands and his body against me and his breath getting raspy in my ear while the water pounded down on us in our own little steamy glass-enclosed universe. His hand wrapped around my cock and stroked it slowly. Dimly, through my sexual cloud, I felt his cock slide down my crack. Electricity shot through me. His hips took on a slow rhythm and I bit back a scream from the pleasure of his hand jacking me while his cock slid up and down in my crack so slippery from the water and the soap.\n\n\"Jesus... fuck...\" Daniel groaned under his breath. \n\nSo hard to stay quiet, my knees buckled and I threw my weight against my hands. No thinking, just the pleasure and the water on my face; I wanted to scream and cum while he fucked me. His cock caught at my hole and I wanted him in me so bad, filling me with his warmth, ached for him I couldn't stand it...\n\n\"Daniel.\"\n\nThe head of his cock teased my hole and the noise in my head was so loud I couldn't think, don't care anymore just fuck...me... fuck.\n\nSuddenly, he shoved me forward away from him. I was confused and bereft, my head still spinning in my haze of need; I looked over my shoulder at him, standing there with his face red, panting like he'd just run a marathon. When he ran his hand over his wet face, I saw his hand shaking.\n\n\"Gotta stop,\" he growled. He swallowed hard while I stared at him blankly. His eyes burned, dark and clouded like someone in a fever. \"You better get out before I fuck you raw.\"\n\nA flash of his cock inside me without a barrier of latex, just feeling nothing but his flesh and the hot spurt of his cum deep in me made me go weak, but I forced the image out of my mind and the reality of what had just almost happened dawned on me. The animal lust was still there but reason returned and I nodded, swallowing hard. I reached out and touched his flushed cheek before I slid the glass door open and stepped out onto the rug.\n\nStill dazed and stupid, I stood and stared at myself in the mirror. My own face was blazing red and my mouth was open and panting.  I can't believe what we almost did. And I almost let it happen. I knew I was clean and disease-free and he'd already told me he was too, but we both knew that was no guarantee. He was the first person I'd been with since splitting with Neil after two years of monogamy; but Daniel admitted he still picked up tricks in bars down in Tallahassee and that made the equation very different. I made an accusing face at myself, glared sternly into my own eyes in the mirror. Are you fucking crazy?\n\n\"Daniel. I'm sorry,\" I said over the rush of the shower. I'd only noticed in the back of my mind but the water had gotten noticeably cooler; he was about to get a blast of cold. I half-smiled when I heard him give a little gasp of dismay.\n\n\"No, it was my fault.\"\n\nThe water went off with a squeak of turning faucet and he pulled the glass door open and grinned at me. I stared at him, naked and dripping, blue-eyed, fucking delicious. My cock was hard and eager but at least my brain was back in control. \n\n\"I had an unfair advantage,\" he told me. \n\n\"Yeah, you did.\" I grabbed two towels out of the cupboard behind the door and tossed him one. \"You were holding my dick hostage.\"\n\nHe laughed and there was a little silence as we dried off. He was still just as hard as I was but we both held off. I watched him the mirror, drooling over the luscious curves and hard lines of his beautiful body, his luscious ass and long legs, all that smooth golden flesh and his dick so tempting and ready. \n\nFinally, he looked up into my eyes in the mirror before us. \"Would you have stopped me, if I'd actually started to push inside?\"\n\n\"Yeah, I would've stopped you.\" I nodded emphatically. I needed to convince myself of that just as much as I did him; he had so much on him already, he had to know that he wasn't solely responsible for what happened between us. It was too much of a burden for him to carry alone. \"We just got too carried away.\"\n\n\"Uh-huh.\" Dropping the towel, he wrapped his arms around my neck and dipped his head to kiss me deeply. I clutched his hips feeling the room tilt off-kilter. \"Soon,\" he whispered against my jaw. \"We just have to wait a little longer. We're almost there. I can't wait to bury my dick inside you so deep you taste it.\"\n\n\"Mmm,\" was all I could manage to half-whimper. Reaching back, I dropped the toilet seat and sat down on it, pulling his hips close to me. He put his hand in my wet hair as I licked the head of his cock and then swallowed it down my throat. The low, sexy moans he couldn't keep back turned me on and I stroked myself rhythmically while I looked up into his eyes, sliding my mouth up and down his shaft. I could see his ass in the mirror behind us and I loved seeing the muscles flex, watching him buck into me, fucking my face. ",
        "My balls ached and I felt a deep tingle blossoming at the very base of my cock and radiating out through my belly and up my spine. My moan made him shiver and I sucked him harder, swirling my tongue around the juicy head of his cock on every backstroke. Just as the tingle in my balls started to explode into yellow sparkles, Daniel bit back a cry and thrust hard into my mouth, catching my head to hold it still. His warm cum spurted into my mouth in such a thick stream, it dripped out the corner of my lip even as I was trying to swallow. The thick, buttery taste got me off and I muffled my own cries with his cock while I came all over my hand, and splattered my thighs with sticky cream. Daniel looked down at me and grinned as he withdrew, wiping the drop of cum off my chin with his thumb.\n\n\"We better get dressed before the kids get home,\" I mumbled when I could finally speak. After a nice shave and getting dressed, we emerged into the kitchen. Charlotte looked up from the sink where she was peeling potatoes for dinner. \n\n\"Have a good shower?\" she asked cheerfully.\n\nDaniel and I looked at each other and grinned. \"The best,\" I answered; and for a passing moment, to my complete surprise, I thought I saw a slight blush cross my shameless aunt's cheeks.\n\n*****"
    ],
    "authorname": "carsonshepherd",
    "tags": [
        "gay blow job",
        "gay anal",
        "gay romance",
        "handcuffs",
        "gay oral"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/between-the-bars-pt-04"
}