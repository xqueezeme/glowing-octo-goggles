{
    "title": "Jessie & The Tornado Ch. 05",
    "pages": [
        "Again, I suggest reading the first four chapters before beginning this one. Also, I want to emphasize that if you are expecting a story with non-stop sex, then you will be disappointed.\n\nJessie &amp; the Tornado, Ch. 5\n\nDistantly I heard someone saying, \"Sam? Sam? Sam?\" then felt someone shaking my shoulder.\n\nI looked up, and realized I was still sitting outside Jessie's hospital room, and that Janice had been trying to get my attention, before finally having to shake my shoulder.\n\nJessie was standing beside Janice and was grinning like crazy. She had a small bandage on her forehead.\n\n\"The doctor has finished his exam, Sam, and there is no sign of physical . . . or mental problems,\" Janice said with a huge smile. \"Jessie called her parents and told them about the tornado while we were waiting for the results of the x-ray.\"\n\n\"Where were you Sam? We've been trying to talk to you for several minutes,\" said Jessie.\n\nI could feel my face flush.\n\n\"Just thinking about the past few years,\" I said, and I knew Jessie could see the pain in my eyes because she immediately grabbed my hand.\n\n\"And especially about the past few months. Ever since I met this totally crazy woman who is attending UGA,\" I added. Jessie squeezed my hand very tightly.\n\n\"Are you sure she is okay?\" I asked Janice.\n\n\"Yes, Sam, she is fine. Not going to be fine, she IS fine. Jessie might have a little headache, but that is all,\" Janice confirmed.\n\n\"In that case,\" I said, stood up and grabbed Jessie and kissed her. And she kissed back.\n\nOur kiss was becoming more and more passionate, at least until I heard someone making a theatrical coughing sound. When we broke off the kiss, Dr. Wilson was standing there.\n\n\"Sam, Janice tells me you are probably the best Paramedic in the fire department,\" he said. \"Sam, the hospital could really use your help . . . I could really use your help. I know this might not be a good time since you are concerned about your fianc\u00e9e . . .\"\n\n\"She's not my fianc\u00e9e,\" I interrupted.\n\n\"She is his fianc\u00e9e,\" Jessie countered.\n\n\"Well . . . whatever she is, I know you are concerned, but in the last 30 minutes the Emergency Room has not only filled up, but people are standing outside just waiting to get in. All injured in some way by the tornado,\" he explained.\n\n\"We are completely overwhelmed. We really need help, Sam,\" he emphasized.\n\nI looked at Jessie, and she nodded \"Yes.\"\n\n\"What can I do?\" I asked.\n\n\"Triage,\" he explained.\n\nI knew instantly what he was talking about since that was something I dealt with every working day. In any medical emergency, where there is more than one injured person, the responder has to make instant decisions.\n\nTriage is from a French word which dates back to the Napoleonic Wars, and means divide into threes. In any medical situation, there are three types of patients: those who will likely live, regardless of what medical care they receive; those who will likely die, regardless of what medical care they receive; and those for whom immediate medical care can mean the difference between life and death.\n\nObviously you don't want to ignore any patient, but quite frankly, some can wait, and for some . . . it really won't matter. You have to concentrate on the ones who need help the most.\n\nJanice threw a medical kit at me, and since I was still soaked from the rain while trying to get to Jessie, a set of hospital scrubs. After changing clothes, I examined patients' non-stop for the next 10 hours. Checking blood pressure, respiration, symptoms and severity of injuries. Many patients only needed bandages and tetanus shots, along with antibiotics.\n\nJessie had asked if she could help me and with Dr. Wilson's approval, became my \"runner,\" keeping me supplied with bandages, syringes and whatever medicine I needed to administer. I was also assigned a junior nurse to write down my assessment of patients, and immediately rush those most seriously injured inside.\n\nIn several patients I recognized symptoms of a heart attack, and was able to stabilize those until they could be taken inside. Twice I had to use the defibrillator to restart their hearts.\n\nSeveral times I had noticed a photographer taking pictures, but really didn't think much about it. Newspapers and television news departments usually showed up at most of the emergencies we would respond to, so that wasn't unusual. They had a job to do, and a little publicity never hurt -- especially whenever the county started talking about our yearly budgets.\n\nEven when I saw Jessie talking to some of the reporters, I didn't think much about it since I was so busy. At least until the next day.\n\nIt was nearly midnight when I examined my last patient. He just needed a few stitches and a tetanus shot.\n\nI honestly don't think I have ever been as tired as I now was. Once I realized the last patient had been dealt with it was as if all the life had been drained out of my body. As keyed up as I had been while helping at the hospital, now it was almost more than I could do just to put one foot in front of another. Jessie actually had to help me inside.\n\nAs I sat down, Jessie handed me some food and something to drink and I realized this was the first thing I had had to eat or drink all day. Several times Jessie or a nurse had tried to get me to stop and take a break, but people needed help. I feel asleep sitting in the chair before I had finished half my sandwich.\n\nSomehow Jessie and a nurse managed to revive me enough to have me lay down on a hospital bed where I slept for nearly 12 hours. When I woke up, Jessie was sitting down in a chair beside my bed, holding my hand.\n\n\"Good morning, beautiful,\" I said.\n\n\"Well, good morning, my Hero,\" she answered.\n\nWhen I tried to protest that, she immediately put her hands over my lips.\n\n\"You are famous,\" she said, with a smile. \"Everybody is talking about you. The newspapers and television stations all want to interview you.\"\n\n\"Interview me? About what?\" I asked.\n\n\"About this,\" Jessie said, as she handed me the local paper.\n\nThe paper was folded in half, and on the top half was the headline, \"Killer Tornado Devastates Area.\" A small headline said at least 10 people had been killed in the county.\n\n\"Look at the bottom half,\" Jessie volunteered in a very quiet voice, then walked down to the foot of the bed.\n\nWhen I flipped the paper over, I immediately saw that about one-fourth of the bottom was a story with a box around it, and the headline: \"Local Fireman Rescues Fianc\u00e9e From Demolished House, Treats Hundreds More At Hospital.\"\n\nI could feel the blood drain from my face as I began reading.\n\nBasically, the story was about how local fireman and EMT-Paramedic Sam Baker, frantic with worry about his beautiful missing fianc\u00e9e, UGA star athlete Jessie Johansson, ignored danger as he began ripping apart the remnants of a demolished house looking for her.\n\nOnce he found the beautiful young woman, he administered mouth-to-mouth resuscitation until she was breathing again, then carried her over a mile, dodging downed trees and power lines, to his truck. Arriving at the hospital, even though he was frantic with concern for his beautiful fianc\u00e9e, he immediately volunteered to help others who had been injured in the tornado.\n\nThe article quoted, extensively, Jessie Johansson, the beautiful, all-time leading scorer for the UGA soccer team, as well as quotes from Head Nurse Janice Rand, and the hospital's new Director of Emergency Services, Dr. Wallace Wilson.\n\nI was credited with saving the lives of at least two heart attack patients at the hospital, as well as helping hundreds of others.\n\nNurse Rand and Dr. Wilson were also quoted making comments about how worried I was about my beautiful fianc\u00e9e.\n\n\"It is obvious how much they love each other,\" Nurse Rand said.\n\n\"Even though she had been a patient herself just minutes earlier, Miss Johansson was adamant that other people needed help more and insisted on helping her fianc\u00e9, Mr. Baker, as they saved others,\" said Dr. Wilson.\n\nThe article, which continued to inside pages, included a number of photos of me and Jessie, taken at the hospital. Some of the photos also showed Jessie handing me items as I was treating patients. At one point, apparently between patients, Jessie and I were kissing. I don't even remember that photo, or the kiss. The paper also must have obtained a head and shoulder shot of me from the fire department, as well as a great picture of Jessie from UGA.\n\nThe paper also mentioned I had spent four years in the Marine Corps, and had served two tours of duty in Iraq, and was a \"highly decorated veteran who had been wounded in combat.\"\n\nThe final paragraph in the story stated that I only needed one more course in English to obtain my degree, and that I was hoping to be able to complete that course through the University of Georgia so I could soon join my beautiful fianc\u00e9e as UGA grads.\n\nI hadn't said anything as I was reading, and Jessie? Well, for once Jessie was being as quiet as a church mouse!\n\nI was so stunned I didn't know what to say, or even really what to feel.\n\nShould I be mad? Should I laugh? Should I start shouting?\n\nAs I folded the paper down, I looked at Jessie. Jessie was standing at the foot of the bed, and would not even look at me.\n\nI couldn't help but notice that her hands were shaking as she waited for my reaction to the story.\n\nJust looking at Jessie I felt something in my heart began to expand. \"God, she is scared to death of what my reaction is going to be,\" I thought.\n\n\"Hey,\" I said, very, very softly, \"come here, you.\"\n\nWhen Jessie looked up and saw my smiling face and open arms, she first gasped, then her face transformed into a smile that could have turned the night into day.\n\nJessie ran around the bed to my waiting arms.\n\nI first heard the thud, then Jessie's scream as she fell face first onto the floor, barely getting her hands up in time to protect herself from the impact.\n\nJessie, who was barefoot, had rammed two toes into the bed post.\n\nTwo hours later I carried Jessie and her two broken toes out to my truck, then went back inside for her brand-new pair of crutches.\n\n\"I carried you in, and by golly, I'm carrying you out,\" I told her as she laughed through the pain.\n\nWhile I had been sleeping, Jessie had taken a shower at the hospital, and one of the nurses loaned her some clean clothes. While Jessie was having x-rays taken of her foot, I had called a friend from the fire department who brought me a clean uniform I always keep at the station. While she was having the toes taped up, I used the opportunity to also take a shower and shave.\n\n\"Are you as hungry as I am?\" I asked Jessie, once we were in the truck.\n\n\"Starving,\" she said.\n\n\"French?\" I asked, \"Or is your foot hurting too badly?\"\n\n\"French food now,\" she said with a raised eyebrow, \"French something else later!\"\n\nOoh la la.\n\nI had offered to carry Jessie into the restaurant, but she insisted on using the crutches the hospital gave her. Once we walked in -- me in my white fire department uniform, Jessie using crutches -- something extraordinary happened.\n\nAt first, I saw a few heads turn to look at us. Then a few more. Then spontaneously, people started standing up and applauding. Obviously a lot of people had read the article.\n\nThroughout dinner, people would stop by our table and shake our hands and offer us congratulations on our upcoming wedding. Invariably, they would ask when, and of course the only thing we could say was we hadn't picked out a date yet.\n\nThe more people who came by our table, the quieter and quieter Jessie became.\n\nMost of those people who came by would also drop a bill or two on the table. A lot of $20s, some $50s, and even a few $100s.\n\nThroughout dinner Jessie had been as quiet as I have ever known her, and was just picking at her food. I wasn't sure if it was because her foot was really hurting her, or something else. Then she finally started talking.\n\n\"Does it bother you, about the engagement thing?\" Jessie asked at one point. \"I don't know why I said it, about being your fianc\u00e9e. I mean I do know why I said it, because I wanted to tease you a little at the hospital and then it just seemed to take on a life of its own, and when I was helping you outside the hospital last night and the newspaper reporter asked if he could ask me some questions about you and I said sure because I was so proud of you, the way you were helping people, how much you cared, how kind and considerate you were, how incredibly competent you were, then I thought I would tease you a little about UGA and how you wanted to get your degree from there, and he asked me at one point 'why is your name so familiar,' and I told him I was on the UGA soccer team, but I never told him I was the all-time leading scorer for the team. I mean I am, but I never told him that, I guess someone at Athens told him that, and I told him about how you dug me out of the crumpled remains of my house and carried me to your truck, but I never said it was a mile and never said anything about downed power lines, and I never said anything about you having to give me mouth-to-mouth resuscitation to revive me, he just made those up, then the reporter asked me about our engagement because apparently Janice or Dr. Wilson had mentioned it to him and then he was asking me and I didn't know what to say and I couldn't just say well we aren't really engaged after all because people were already talking about it like we were engaged and I didn't know what else to say and I am so sorry if I embarrassed you and now I feel like an idiot and I know you are probably upset with me and I don't blame you if you are, and if I could go back and change it I would, but I don't know how to change it now, but I will stand up right here and right now and tell everyone we really aren't engaged, but please don't be mad at me and don't yell at me because I just couldn't take it right now and would probably start crying like crazy and my foot hurts and I feel like I am about to be sick to my stomach . . . and . . . and . . .\"\n\nJessie finally ran out of words and was now just looking down at the table. Tears were streaming down her face. I had once kidded Jessie about talking for 30 minutes straight without taking a breath. She hadn't exactly just finished talking for 30 minutes, but it was several minutes and I honestly don't think she stopped once to breathe.\n\n\"Jessie, (she looked up at me and I could see how scared she looked) . . . My love (suddenly the fear was gone and something else was taking its place) there is only thing that really bothers me about that,\" I answered.\n\nSo . . . I stood up and started hitting my glass with a knife.\n\n\"Could I have everyone's attention for a minute?\" I asked.\n\n\"I assume many of you have read the newspaper article about us, and I would like to clarify something,\" I said. \"The newspaper said we are engaged. The fact is, we are not engaged. Jessie is not my fianc\u00e9e, and I am not her fianc\u00e9. Yet! I want to take care of that right now.\"\n\nI dropped to my knees beside Jessie.\n\n\"Jessie, yesterday when I saw your demolished house and knew you were inside I went berserk. I didn't know if you were injured . . . or worse . . . but I knew right then just how much I love you and that I want to spend the rest of my life with you. Jessica, my love, will you marry me?\"\n\n\"Yes, Yes, Oh God Yes,\" Jessie said as tears began streaming down her face again. They were also streaming down my face as well. We were hugging and kissing.\n\nWe received another standing ovation.\n\nShortly after that, we finished eating (actually I had already finished and Jessie finally started) and Jessie slowly made her way to my car.\n\nWe had barely gotten inside when Jessie reached over and tried unbuckling my belt. \"I promised you French something else,\" she said.\n\n\"Patience, Miss Johansson, patience,\" I admonished her, pushing her hands away.\n\n\"Patience, Hell,\" she answered. \"I saw a cartoon once, it showed two buzzards waiting for an animal to die so they could eat, but one buzzard said, 'Patience, Hell, I want to kill something.' That's how I feel now, I want to eat you NOW!\"\n\nI punched in an address on the GPS, and 20 minutes later we pulled into one of the nicest hotels in downtown Atlanta.\n\n\"What's this?\" asked Jessie.\n\n\"Patience, Miss Johansson, patience. You kids today are so impatient.\"\n\nWhen we walked up to the counter, I said, \"I believe you have reservations for Mr. and Mrs. Walker?\"\n\nJessie gasped loud enough for the clerk to look up and smile.\n\n\"Yes, sir, the honeymoon suite,\" he said. I gave him a credit card and he gave us a magnetic key and told us how to find the room.\n\nAfter getting off the elevator, we were walking to the room when Jessie couldn't contain herself any longer. Jessie put one crutch in front of me so I had to stop.\n\n\"Reservations! Honeymoon Suite! Just what is going on Sam?\"\n\nI pulled Jessie against me.\n\n\"I talked with Dr. Andrews Friday night. She said she thought we were ready, IF, IF, you wanted to that is. So I made reservations for us here. I had hoped to bring you here last night, but that tornado interfered.\n\n\"Are . . . are you ready Jessie?\" I asked, very gently.\n\nShe didn't actually answer me. Instead Jessie put her arms around my neck and jumped up, wrapping her incredible legs around my waist and was soon sticking her tongue half-way down my throat.\n\nI took that as a \"Yes!\"\n\nWe were actually only a few feet from our room, so I just carried Jessie like that over to the door, then slid the magnetic key down the slot.\n\nOnce inside, I -- regretfully -- put Jessie down so I could turn and lock the door. When I turned back around, Jessie was waiting for me. She didn't rip the shirt off like she had the previous Saturday, but she unbuttoned it. Then Jessie undid my belt, unsnapped my trousers and pulled them down with my underwear.\n\nBefore I could do or say anything, Jessie dropped to her knees and the head of my penis was in her mouth. I know her toes had to be hurting from kneeling like that, but apparently Jessie didn't care.\n\nAfter gently sucking on the head for a minute or two, Jessie pulled back, then slowly started licking the length of my penis with her tongue. She lowered her head and licked my balls, then gently took one at a time in her mouth and sucked.\n\nI gasped, and Jessie resumed licking my penis, then took me back in her mouth.\n\nThe first time Jessie tried to take me into her throat she gagged, then pulled back enough to say, \"God, you are so BIG, Mr. Walker.\" Before I could respond (my blood had left my head by now), she had me back in her mouth and this time I slid deep inside her throat.\n\nI was moaning and groaning at the feeling; her throat was so tight and her mouth and tongue were absolutely incredible.\n\nBefore long, I finally managed to tell Jessie that if she didn't stop, then I was going to cum. Rather than stop, Jessie redoubled her efforts until I could hold back no more. I think I shot harder, and more, than I have ever cum in my life. Jessie continued sucking and cleaning me off until I was soft.\n\nI think the only thing that kept me vertical was the fact that I was, by now, leaning back against the door.\n\nJessie stood up and was in my arms as we exchanged a deep, deep kiss. I could taste myself in her mouth.\n\n\"Come on, let's go to bed,\" she said, grabbing my hand and turning away.\n\nThe next thing I knew, I was lying on my stomach, barely getting my hands up in time to catch myself before I would have hit the floor face first.\n\nI had forgotten that I hadn't actually taken my pants and underwear off. They were still pushed down around my feet, so when I tried to take a step I fell down.\n\nJessie, displaying some sadistic tendencies, was laughing so hard I was afraid she would hurt herself!",
        "\"This reminds me of when I first saw you, lying helpless at my feet, after I knocked you out!\" she declared.\n\nI growled at her. She continued to laugh. I growled some more.\n\n\"Payback, Miss Johansson, can be a bitch,\" I warned Jessie.\n\nI rolled over and finally got my pants, underwear, shoes and socks off, then stood up.\n\nAs I started to look for Jessie to administer the threatened \"payback,\" I stopped cold in my tracks.\n\nJessie . . . Jessie was looking at me with a look that I can only describe as pure love. Yes, there was lust and desire, but there was also something else. Some undefinable \"something\" that I think my heart recognized.\n\n\"Oh, Jessie,\" I said, as I held my arms out. She quickly moved into my arms and we were kissing again.\n\n\"Sam, do you mind if I take a shower first?\" she said, \"I was laughing so hard at you after you fell I think I . . . peed myself.\"\n\n\"Do you need any help? You know, washing your . . . back . . . or something?\" I asked.\n\nJessie actually blushed.\n\n\"I'd love to take a shower with you . . . later,\" she said, \"but I promise I won't be but a few minutes.\" Luckily the hospital had given us some plastic bags and waterproof tape so I quickly wrapped those around her injured foot.\n\nTrue to her word, five minutes later she limped out of the bathroom, wearing only a towel. By the time she reached the bed, the towel was laying on the floor.\n\nIt was still early afternoon, so I had turned the lights off and pulled the curtains partially shut, but there was still plenty of light in the room.\n\nAs I watched Jessie limp over to the bed I was almost speechless.\n\nI don't know how, in five minutes, she had managed to not only take a shower but to also comb her hair but she was so beautiful it almost made my heart ache just to see her.\n\nI had a very naked girl standing directly in front of me, with one of the most well-conditioned and sexiest bodies I had ever seen, and yet I could not even look anywhere but into her eyes.\n\nFor some strange reason, I immediately thought back to a week earlier when we had almost made love for the first time. That night, Jessie had been trembling with fear or nerves, and when I had looked into her eyes I could sense lust and desire, but I could also tell she had been scared.\n\nNow, all I could see was love almost radiating out of eyes.\n\nI was still sitting on the side of the bed and was almost afraid to touch Jessie, to break the intimacy of the moment. Looking into her eyes, I knew my life would never be the same again. I knew from this moment forward, Jessie would possess me, and I would possess her -- totally.\n\n\"You are so beautiful,\" I finally managed to whisper.\n\nJessie smiled, then held out both her hands. As my hands grabbed hers, she pulled me up until we were standing face-to-face, lip-to-lip. Tentatively almost, our lips met then we were exchanging the most mind-blowing kiss of my life. Our bodies were tightly pressed together.\n\nI don't know if we kissed for five minutes or fifty. Time no longer seemed to have any meaning. We kissed until we finally had to stop.\n\n\"Make love to me, please, Mr. Walker,\" Jessie whispered against my lips.\n\n\"Gladly . . . Mrs. Walker,\" I said.\n\nJessie started crying.\n\n\"Don't cry Jessie, but it is going to be a little awkward if after we are married I become Mr. Johansson,\" I teased her. \"Or maybe you want to become Mrs. Johansson-Walker?\"\n\nBy now Jessie is both laughing and crying. \"No, no,\" she said, \"I think I am going to love being just plain old Mrs. Walker.\"\n\n\"There is nothing plain or old about you,\" I said as our lips met again.\n\nAfter kissing for several more moments, I finally reached down and picked up Jessie in my arms, then gently laid her down on the bed.\n\nI could not help but to pause and just stare at this incredibly beautiful woman for a minute. And as I did, my mind relived those first few seconds, just the day before, when I saw the almost total destruction of her house.\n\nAlmost as soon as I saw what was left of the house, I had just shut down that part of my mind. I had refused to even consider the possibility, or probability, that she was lying dead somewhere in the wreckage.\n\nThe devastation had been so complete it had seemed impossible that anyone could have lived through it. At first, my fear for Jessie had been almost paralyzing.\n\nNow, as I remembered the incredible despair I had felt in those few seconds, before my fire department and medical training had kicked in and did what I was trained to do without even thinking, my eyes filled with tears.\n\n\"Oh God, Jessie, I was so afraid you were dead,\" I cried, \"I was terrified you had been killed. And I had not told you just how important you are to me. I never told you just how much I love you.\"\n\nJessie didn't say anything, just wrapped her arms around me and pulled me down beside her.\n\n\"Oh, Sam,\" Jessie finally said after several minutes, \"I was afraid of the tornado, but I knew you were coming back to me, and I knew you would save me.\"\n\nThen her lips curled up in a mischievous smile.\n\n\"Besides Sam, I knew you loved me,\" she grinned. \"I've known that ever since you regained consciousness, after I knocked you out that first day.\"\n\nI laughed, then rolled my eyes at her.\n\n\"I don't care what the doctor said, I think there must be some brain damage,\" I muttered. Jessie laughed.\n\n\"Now, are you going to screw my brains out, or do I have to knock you out again?\" she asked.\n\nAs our lips met, I could feel Jessie's mouth open beneath mine. Our tongues began sparring in a passionate kiss.\n\nWhen I reached over and gently cupped her breast, then started rubbing my thumb across her nipple I could hear Jessie moan, deep in her throat.\n\n\"Now, Sam, now!\" she insistently proclaimed, \"I want you inside me NOW!\"\n\nWhen I reached down between her legs, and inserted a finger inside her, I could not believe how wet Jessie already was.\n\n\"NOW, Sam,\" she again insisted.\n\nPositioning myself between her legs, my rock-hard penis brushed against her waiting folds.\n\nJessie reached down and guided me inside her. It was like sinking into a glorious, blazing hot pool of fire. Jessie was so tight.\n\nBy the time I was halfway inside, Jessie was making incoherent sounds of pleasure.\n\nWhen I finally felt our two bodies meet as I bottomed out, I heard Jessie sigh, \"So full. Oh, God, I am so full.\"\n\nI pulled slowly out, until just the head of my penis was still inside her, then started pushing in again, just a little faster than before.\n\nJessie reached up with both hands and pulled my head down to meet her. Our lips met again, then our tongues.\n\nI began increasing the speed and force until Jessie was again reduced to almost incoherent sounds.\n\nWhen I moved my head down and sucked one of her rock-hard nipples into my mouth Jessie screamed softly as her incredibly well-conditioned body lifted off the bed in the throes of a mindless orgasm.\n\nI stopped while Jessie came back down to earth, then started moving inside her again.\n\nJessie's eyes opened in amazement.\n\n\"You didn't cum yet?\" she asked.\n\n\"When I cum . . . Mrs. Walker . . . you will know it,\" I promised.\n\nDuring the next 10 or 15 minutes, Jessie must have had a half-dozen more increasingly intense orgasms.\n\nBy the time I finally filled her insides with cum, the only sounds Jessie could make, in addition to moans of pleasure, were prolonged, \"Yesssss, Yessss,\" or \"Saaaammm, Saaammm.\"\n\nBy the time my body stiffened and I cried out, \"Jessie, Jessie, Jessie,\" we were both drenched in sweat. That triggered another orgasm from Jessie.\n\nWe were both completely spent. I am not sure how long we just lay side-by-side, holding each other.\n\n\"Well, Mr. Walker, at least now I know one thing,\" Jessie said after 15 or 20 minutes of just holding each other.\n\n\"What's that, Mrs. Walker?\" I asked.\n\n\"You are DEFINITELY one of the exceptional, gifted Marines. I think you can probably count to 21 and a half,\" she said with a big smile.\n\nI just answered her with my own smile, then we gently kissed.\n\n\"Oh, crap,\" Jessie said, a few minutes later.\n\n\"What's wrong?\" I asked.\n\n\"I just realized I don't have ANY clothes, other than what I wore here . . . and those I borrowed from a nurse at the hospital,\" she said.\n\n\"Well, I can't have my wife looking like a homeless person,\" I said with a grin. Jessie grinned back at me.\n\nWe quickly got dressed, then drove to the nearest mall. Since it was a Sunday, the mall would be closing early, but two hours . . . and several thousand dollars later . . . Jessie had a lot -- a lot -- of new outfits, including some very special ones from Victoria's Secret.\n\nAs thrilled as she was with the new clothes, she also kept complaining about how much money I was spending on her.\n\n\"Well, like I told you, I can't have my soon-to-be wife looking like a homeless person,\" I answered her. Jessie grinned.\n\nOur final stop was one that Jessie had not planned on . . . one of the larger jewelers in Atlanta. They were supposed to close in 15 minutes, but when I gave the salesperson our price range, I was told not to worry about closing time.\n\nWe had been looking for about 20 minutes when one of the salesmen came up and asked, \"Hey, aren't you the people in the newspaper?\"\n\nTo make a long story short, the jewelers received a lot of free publicity, Jessie received a diamond engagement ring that had a price tag that was nearly equal to the cost of the first home I bought, and I received a nearly 50 percent discount off that price.\n\nTalk about a win-win-win! If you have ever heard about a diamond ring with a stone big enough to choke a horse, well Jessie had one with a stone big enough to choke several horses.\n\nAfter we drove back to the hotel, Jessie and I took our first shower together, which ended with us making love standing up in the shower. Then we made love on the bed, after Jessie tried on one of her Victoria's Secret outfits.\n\nWe ordered room service, then made love again after dinner.\n\nThen we made love again before falling asleep together for the first time.\n\nEarly the next morning we made love, took a shower, made love, ordered breakfast and made love before driving back to my house.\n\nJessie quickly took sole possession of one of my two walk-in closets, and started making a list of additional clothes she would need. Meanwhile, I called my insurance company, and a roofing company.\n\nIn between phone calls, and hanging up clothes, we made love several more times.\n\nFinally, it was late Monday afternoon, and Jessie had to get back to college.\n\nHer car had been leveled when her parent's carport collapsed, so when Jessie asked how she was supposed to get back, and started talking about renting a car, I handed her the keys to Deb's Mercedes S65 AMG.\n\n\"Oh, my God, Sam, I can't drive that,\" she exclaimed. \"Don't they cost around $150,000?\"\n\nI just smiled, because even the basic model cost a lot more than that. And Deb's car was NOT the basic model.\n\n\"You CAN drive it, and you WILL drive it,\" I told her. \"It's probably the safest car on the road, and I am not going to have my wife driving anything less.\"\n\nJessie immediately teared up. \"Oh, Sam, I just love to hear you say that, 'your wife,' but I can't drive your car . . .\"\n\n\"Our car . . . OUR car,\" I interrupted her. \"Once we are married, which I hope is very soon, it will be OUR car.\"\n\nThen I grinned. \"Besides, now that I know how clumsy blondes are (pointing to her foot), I absolutely insist. How do you ever manage to kick a soccer ball without tripping over it?\"\n\nAt this implied insult to her soccer prowess, she scowled, then grabbed me and started tickling.\n\n\"Hey, listen up, you dumb-ass Marine,\" she declared, \"Just because we are now engaged it doesn't mean I can't still kick your sorry butt. I'll just have to do it with a pair of crutches until my foot gets better!\"\n\n\"Typical blonde,\" I said, \"first you have to catch me. And a five-year-old can probably run faster than you can hobble.\"\n\nThe tickling soon turned to kissing, and the kissing soon found us back in bed making love again.\n\n\"Oh Sam, I don't want to leave you. I mean it will only be two weeks, but I don't know if I can stand being away from you for two whole weeks,\" Jessie lamented.\n\n\"Don't worry about that, Jess,\" I said. \"On my days off you just might find yourself with a visitor for a day . . . or night.\"\n\nFinally, after a lot of kisses and a few tears -- from both of us -- Jessie got in our Mercedes and returned to Athens. She took a number of the new outfits we had purchased as well, since all the clothes she had brought home to clean were now probably scattered across several square miles.\n\nJessie called me once she was back at UGA, and we reminded ourselves of how much we love each other before we both went to bed. I slept like a baby that night, and Jessie later told me she did as well.\n\nThe next day I received a beautiful e-mail from Jessie where she talked a lot about how wonderful the weekend had been -- well, other than the tornado of course.\n\nShe also told me that after seeing the new clothes I bought her, seeing the size of the engagement ring, and seeing the Mercedes she was now driving that Rachel, her friend from the soccer team, said what I needed was a REAL woman who could keep me happy . . . someone like, well, Rachel.\n\nWhen I answered Jessie's email, along with my usual blonde joke and UGA joke, I also told her that she had better make sure I stayed happy, or I just might have to call Rachel.\n\nDuring the next two weeks, I spent a number of nights in Athens with Jessie, and believe me, we did EVERYTHING we could think of to keep each other happy.\n\nI was also sitting in the audience when she received her degree, with honors, in civil engineering.\n\n\"Civil Engineering?\" I asked, after the ceremony, \"I thought you dumb jocks majored in courses like basket weaving?\"\n\n\"Listen, butt-head,\" she bristled, \"you dumb-ass Leatherbrains probably don't even know what a civil engineer is . . .\"\n\n\"Of course I do,\" I interrupted, countering with, \"Marines love civil engineers. Civil engineers build bridges, roads, factories, and other buildings. Or, as we say in the Marines, civil engineers build targets that we can blow up.\"\n\nThat quieted her down for a while!\n\nWhen Winston and Gloria returned home, they actually had no home to return to. So they moved into one of my spare bedrooms. They salvaged what little they could of their lifetime of memories and possessions, then watched as the rest of the house was torn down so a new house could be built.\n\nAfter the graduation ceremony, we all went out to eat, then Jessie's parents returned to my home, while Jessie and I stayed in Athens at a hotel.\n\nThe next day we loaded all of Jessie's possessions into my truck and her Mercedes then drove back home.\n\nYes, it was a little awkward, having her parents there. Especially that first night when Jessie and I went to bed together, but Winston and Gloria had made it very plain how happy they were knowing we were together and would soon be married. Luckily for us, since Jessie tends to be quite vocal, their bedroom is on the other side of the house.\n\nOne day they showed us the plans they had had drawn up of their new house. It was beautiful, but was even bigger than their old home.\n\n\"Why are you building such a big house now, knowing that Sam and I are going to be married and living here?\" She asked them.\n\n\"Well, we expect a LOT of grand-kids . . . SOON,\" Gloria answered, then as both Jessie and I blushed she and Winston started laughing at us.\n\nJust a few days after Jessie moved into my house, I went to my mailbox one day and found a bill from Dr. Andrews.\n\nIt was with some trepidation that I finally opened it, with Jessie beside me.\n\nIt was a very detailed bill, showing our initial two hour phone call, her first five hour session with Jessie, her one hour follow-up phone call with me, plus two hours each session for all six follow up sessions with Jessie. All total, 20 hours at $200 per hour (her special 'premium' charge), plus a surcharge listing 287 UGA jokes at $25 each.\n\nThe total bill came to $11,175.\n\nI really don't remember THAT many UGA jokes, but I wasn't going to quibble over it.\n\nEspecially since Dr. Andrews had written across the bottom, \"This bill shall be considered PAID IN FULL as soon as I receive my invitation to the wedding.\" Jessie and I both got a little misty-eyed. Okay, a lot misty-eyed.\n\nSoon after that, Dr. Andrews received her invitation to the wedding, along with a pre-paid voucher good, for up to a year, for two round-trip, first-class air fares to Athens, Greece.\n\nJessie and I were married a month after that (July 15) then spent two weeks in the Bahamas.\n\nAfter we got back, Jessie was almost immediately hired by a large engineering firm in Atlanta.\n\nThat also brings up an interesting question.\n\nI had spent four years in the Marines, and, at that point, been a fireman and EMT for over six years. Relatively speaking, I made a decent salary.\n\nJessie STARTED making more than double my salary.\n\nWhat is it about me that attracts women who invariably end up making a lot more money than I do?\n\nOf course you also have to add the money I make buying, restoring and selling houses. Every 9 to 12 months or so, Jessie and I will buy a run-down house, then I will spend six months to a year completely gutting it and restoring it to mint condition. We only buy houses that are actually in good neighborhoods, but need a lot of TLC. So far, I have managed to at least double the price I initially paid for every house.\n\nAfter flipping our first house, and realizing how much money I was paying in commission to the real estate agent, I took some courses and obtained my real estate license so I could sell those houses myself and save thousands on commissions.\n\nOne day a buddy with the fire department asked if I would help him sell his house, so the two of us spent a couple of weeks working on his house, and put in less than a thousand dollars in improvements. He sold it for over $10,000 more than his last agent said it would bring in.\n\nAfter that several more firemen asked for my help, then as word got around, several policeman also asked for help. The next thing I knew I was getting calls from fireman and policeman throughout Atlanta asking for my help in selling their homes.\n\nSome months, I actually make more in real estate commissions than I am paid by the county as a fireman.\n\nBecause we don't need her money, Jessie is actually putting 50 percent of her salary (the maximum allowed by law), into a company-sponsored 401k retirement account.\n\nIf the truth be told, we could retire now since I still have most of the money I received from Deb's insurance policies.\n\nI love what I do, helping people. In Iraq . . . well there is no easy way to say this: I killed people. Yes, they were people that truly needed killing, but it is such a blessing now to be able to save lives.\n\nJessie loves her job \"building targets\" as I keep reminding her!\n\nWe will probably continue to work until Jessie is 40 (I will be 48), then decide whether or not to retire. Even if we do retire, I will probably continue with the real estate business since it doesn't take up that much time.\n\nI did complete that one remaining course, and did graduate from the University of Georgia. \"How 'bout them Dawgs!\" Or perhaps I should modify that, since I now have a degree in English, to: \"Consider the Canines!\"\n\nWhen we started adding up all the college credits I had earned over the years we were shocked to learn that I actually was only six credits short of earning a second degree, but in history this time. In the years since then, I added that second degree and NEVER let Jessie forget that I have two degrees to her one.",
        "Jessie keeps threatening to drag me back onto a soccer field and this time she says she won't take it so easy on me.\n\nShe actually talked me into playing soccer against her ONCE. I played goalie.\n\nThis was only a month after she gave birth to the twins and I wasn't really worried. After all, how much damage could a brand new mom do to me? I mean she was still recovering from the long, long labor, still carrying some of the extra weight she had gained during the pregnancy, and I knew she had to be out of shape.\n\nI had played soccer throughout my elementary school days, usually as a goalie. It was only after I was in high school I gave up soccer to concentrate on other sports, but would still sometimes work out with my high school soccer team to keep my goalie skills sharp.\n\nPlus this would be the first time she had been on a soccer field since she had broken two toes the previous May. I thought I was safe.\n\nBIG mistake.\n\nIt took me a couple of days to walk unaided. It took two weeks for most of the bruises to fade away. Even worse, she called some of our friends from the fire department and they taped the whole damn thing -- from multiple angles.\n\nThat is a source of endless amusement to everyone at the fire department.\n\nThey call it \"The day the bad-ass, dumb-ass Marine got his ass handed to him by a girl.\"\n\nMy so-called friends from the fire department took all the different videos of the soccer debacle and actually hired some guy to put them together in the form of what looks like a Hollywood movie.\n\nThe film opens with a shot of the Marine Corps War Memorial in Washington, D.C., then pans to the inscription at the bottom, \"Uncommon Valor Was A Common Virtue,\" which was what Admiral Chester Nimitz said about the Marines on Iwo Jima.\n\nThe film then cuts to a shot of a soccer ball bouncing off my head and into the goal.\n\nNext, the film showed the inscription about \"The Marines Have Landed And The Situation Is Well In Hand,\" which dates back to our landing in Panama in 1885.\n\nThe film then cuts to a shot of a soccer ball hitting me squarely in the stomach and my collapsing on the ground. The ball slowly rolled into the goal.\n\nThe next shot shows the immortal words of Gunnery Sergeant Dan Daly, who during the battle of Belleau Woods, during World War I, yelled to his men, \"Come on, you sons-of-bitches! Do you want to live forever?\"\n\nThe film shows me, after I got completely twisted around on a play, with the soccer ball bouncing off my butt into the goal.\n\nThe next shot showed an inscription I had never seen before: \"The Marines I have seen around the world have the cleanest bodies, the filthiest minds, the highest morale, and the lowest morals of any group of animals I have ever seen. Thank God for the United States Marine Corps!\" Eleanor Roosevelt, First Lady of the United States, 1945.\n\nAfter that, well the film really turned nasty: at least to my point of view. I actually blocked several shots, but somehow not a single one of those made it in the final film!\n\nAfter a number of additional shots of soccer balls bouncing off different parts of my body and into the goal . . . well the final shot showed a soccer ball hitting me . . . below the belt and bouncing into the goal, followed by my rolling around on the ground clutching my . . . privates.\n\nJessie was on her hands and knees crying, thinking she had probably killed me.\n\nAt least the film ended on a somewhat positive note: A quote by President Ronald Reagan in 1985, \"Some people spend an entire lifetime wondering if they made a difference in the world. But, the Marines don't have that problem.\"\n\nThe film continues with some pictures of me in my dress blue uniform with my medals on my chest, followed by a close-up of just those medals. Next came the headline in the local paper about my rescuing Jessie from her house, followed by a number of photos of the absolute destruction of the house after the tornado.\n\nApparently someone had also gotten copies of the photos from the paper showing both Jessie and I helping people at the hospital, then the photo of us kissing between patients.\n\nThen the film cut back to the debacle at the soccer field and the final play when the soccer ball hit me below the belt.\n\nBut at least the film ended with Jessie and me kissing, before she helped me limp to the car.\n\nJessie and I have done our best to make Winston and Gloria happy.\n\nSix weeks after the honeymoon, we found out Jessie was pregnant . . . with twins, two daughters.\n\nTwo years later we added Samuel Obediah Walker, Jr.\n\nIt is now two years after that, and I am almost in a state of stunned disbelief. Jessie is pregnant again, and today we had a sonogram. I am soon going to be the father of triplets. It looks like two girls and a boy. That will be four girls, and two boys.\n\nJessie's mom says the twins are already taller than Jessie was at four years of age. My father is just over six feet, two inches, and Winston is even taller at six feet, four inches, so it is going to be interesting to see what happens in the next 14 years!\n\nFor the twins' recent fourth birthday, in addition to all the clothes, dolls and other toys, I also bought each a miniature soccer ball. After Jessie left the room to cut their birthday cake, I explained to the girls that while their mom liked to \"try\" to play soccer, she really wasn't that good and that any time they wanted to play, they needed to come and get me. I told them this would be \"our little secret\" and not to make their mom feel bad by asking her to play.\n\nAfter we ate the cake, Jessie asked the twins if they wanted to play soccer with her, and she was more than a little disappointed when they both said they wanted \"Daddy\" to teach them.\n\nNow, it drives Jessie crazy that any time the girls want to play soccer outside, they come and get me. Even when Jessie offers to play, to teach them, they just say, \"Ah, Mom, Daddy can teach us.\"\n\nYes, I know that when one of them finally slips up and tells Jessie what I said she is probably going to kill me. And death will just be a start for what she has in mind. Probably cut my head off and use IT for a soccer ball.\n\nOh, and speaking of soccer, remember Jessie's friend Rachel, who once threatened to \"rip my balls off?\" She went on to play soccer professionally, and won an Olympic Gold Medal in soccer.\n\nEvery year Rachel visits Jessie and stays with us for a week or two. And every year Rachel tells both Jessie and me that I need a REAL woman to keep me happy . . . someone like, well, Rachel!\n\nI will freely admit something, since Jessie knows and understands.\n\nAs much as I love Jessie -- and I love her so much it hurts to even think how close she came to being killed by that tornado -- on August 15<sup>th</sup> of each year I get a little . . . emotional. You never forget your first love.\n\nJessie always takes that day off, if it falls on a weekday, so she can just be with me. To offer a shoulder to cry on, or someone to talk to, to help ease the pain.\n\nThis next August 15<sup>th</sup>, however, will probably be a different story. That is Jessie's due date, and so far she has been completely on target.\n\nNow, I will have something to celebrate, something to temper the pain I still feel every year.\n\nSomehow, I feel Debs is up there, watching, and this is her way of telling me, like she did so many, many years ago \"maybe we can hold hands and keep each other from crying.\"\n\nSo many, many years ago, I held her hand to keep her from crying, and I think this is Debs way of telling me she is still holding my hand, and telling me she doesn't want me to cry anymore.\n\nShe doesn't want me to only remember the pain when I think about her, but to remember the good times.\n\nYes, I love Jessie so much. But I still love Debs as well. You never forget your first love.\n\nI feel so blessed to have had the love of two such incredible women. As baseball great Lou Gehrig once said, \"I feel like I am the luckiest man on the face of the earth.\"\n\nSpeaking, as I was earlier, about the Georgia Bulldogs (my now favorite football team), I have one last little story to share.\n\nDuring World War I, the Marines fought the Germans at a place called Belleau Woods in France. We absolutely kicked their butts. The Germans said the Marines were the most dangerous, relentless enemy they had faced during the entire war, and wrote reports back home calling the Marines \"Teufel Hunden\" or Dogs from Hell, or Hounds from Hell.\n\nThat was later translated as Devil Dogs, and since 1918 has been a proud nickname for the United States Marine Corps.\n\nDo you know which breed of dog is the mascot of the United States Marine Corps?\n\nThe English bulldog.\n\nThe same breed serves as the mascot of the University of Georgia.\n\nSo, I say again, \"How 'bout them dawgs!\""
    ],
    "authorname": "OldSarge69",
    "tags": [
        "usmc",
        "marine corps",
        "soccer",
        "uga",
        "georgia",
        "fireman",
        "veteran",
        "humor",
        "athens",
        "friends"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/jessie-and-the-tornado-ch-05"
}