{
    "title": "Queen of Diamonds",
    "pages": [
        "NOTE: This story begins in 1996. Cell phones were expensive and uncommon. People were starting to buy personal computers for home use and had discovered email. Cars had cassette tape players, and VCRs were the main way to watch or record a movie at home. Airports were still hang-loose about who got to greet or see you off at the gate. And you couldn't legally buy absinthe. \n\nAll characters engaging in sexual activity, past or present, are eighteen or older. \n\n[Many thanks to my volunteer editors, Sexyvibe and Animaris, whose considerable investment of time made this a much better story.] \n\n* * * \n\nI was actually having fun at my 20-year high school reunion picnic, despite the sweltering heat that was well over 100 that day. Don't even ask about the humidity. That's why I had left Texas for California years ago. I was reminiscing with a group of friends when I felt a tap on my shoulder. \n\n\"Jake? Jake Hayward? Hi! Trudy Tyler. Remember me?\" \n\nOh, how could I not, even though I hadn't seen her in over twenty years? She looked remarkably unchanged; I would have recognized her anywhere. \n\nWhen I was a young teenager, Trudy was the first girl I got sweet on. Her hair was very dark brown\u2014almost black\u2014which made her blue eyes stand out. Plus, she was one of the girls who developed very early, but she was completely at ease about it\u2014didn't try to hide it, didn't try to flaunt it. \n\nTrudy was also the first girl I had a serious slow dance with\u2014meaning arms around each other with chests and waists touching. Her rapidly maturing bustline always felt very nice pressed against my scrawny torso. Even when I dated other girls, I always sought her out for at least one slow dance at the various parties we went to during our youth. Memories of those encounters barely faded as the years passed. \n\nI can't remember how we drifted apart. Trudy was one of several girls that disappeared without any explanation prior to graduation day, apparently due to untimely pregnancies. She must have gotten involved with some guy that wasn't a student at our school. I hadn't heard anything about her since, not even who knocked her up. \n\nI was glad to see her. It took guts to come back to a reunion after dropping out. She seemed very happy with her life and was in good spirits. Trudy's blouse displayed a tantalizing glimpse of cleavage. I wondered if I was finally going to experience the full reveal later. \n\nTrudy introduced the young woman with her as her daughter Kelly. \n\n\"But she wants to be called 'Kat' now,\" she said with a hint of exasperation. \"Today's her birthday. She just turned twenty.\" \n\nI did some quick math\u2014then Kelly/Kat was the unplanned baby she had back then, all grown up now. Wow! It must be hard to get any child to go to your class reunion, particularly an older one\u2014not to mention the one that caused you to drop out. \n\nKelly/Kat was standing several feet behind her mother and staring out in another direction, slightly turned away from us, as if she were by herself. She obviously heard her mother introduce her to me, but she ignored my extended hand. \n\nEven though it was scorching, Kelly/Kat wore all black. Heck, I was miserable in a white t-shirt, shorts, and sandals. She had a rock and roll Goth look going on: torn black t-shirt, black zippered jacket, tight black jeans, and\u2014I had to admit\u2014some very cool-looking black leather boots. She had a pretty face, although clouded with a bored scowl. Her jet black hair was plastered to her face with perspiration as she struck a pose, indifferent to the good times going on all around her. Boy, she must have been dying in that outfit. \n\nAs Trudy and I talked we caught up on the missing years. Her daughter still lived with her in Dallas. Trudy would mention Kelly's name from time to time and glance back toward her, but she never looked our way. \n\n\"I was married to a man I met when Kelly was a little girl. Bob was a really nice guy, a good husband to me and a good father to Kelly. But he died three years ago.\" \n\nI offered my sympathies. I felt ashamed when the first thing that came to mind was she might be looking for a hook-up at the reunion. \n\nWhen I talked about my college years, Kelly's name came up again. \n\n\"I keep urging her to get her degree and not get stuck in a dead-end job like I did. She's been out of high school several years now, but so far she's barely earned a year's worth of credits at the junior college.\" \n\nStill no reaction from Kelly/Kat. \n\n\"She was making good money in the men's department at Neiman Marcus, but she quit there to work at this little clothing boutique.\" Trudy turned toward her. \"What's it called? Shameful? \n\n\"I think most of her money gets spent on clothes there.\" Trudy called her Kelly the whole time, not Kat. \n\nTrudy looked really good\u2014and sexy. I was trying to pick up on any signals that she might be interested in a tryst later that evening. \n\n\"Trudy, are you coming to the dance tonight?\" \n\n\"No, I promised Kelly if she came to the picnic, we'd spend the evening together. She wants to go to FunLand, the old amusement park.\" \n\n\"Is that place still open?\" \n\n\"Yes, it is. Ferris wheel, bumper cars, miniature golf, the midway\u2014all of it.\" \n\nA flashback hit me: Trudy and me on the Tilt-A-Whirl at FunLand. I got sick and had to hurl when I got off. It was humiliating. She was actually pretty cool about it and stayed with me until I felt better\u2014and we weren't even on an official date that night. \n\n\"And we're going to eat at Billy's Barn.\" \n\nThat was the classic Texas roadhouse near the local college campus: burgers and beer, jukebox and dancing. It had been there forever. \n\n\"Even after I moved away, Bob and I would bring Kelly here to go to FunLand and Billy's. I guess she has a nostalgia thing from her childhood.\" \n\nI tried one more time. \"Sure you don't want to go to the dance? Other classmates will be there that didn't want to brave this heat. It'll be air conditioned.\" \n\n\"No, I promised Kelly we'd do what she wanted for her birthday.\" \n\nStill no response from Kelly/Kat to any of this. Well, so much for the \"twenty years later\" romancing with Trudy, at least for that weekend. \n\n\"Jake, this is really great music they're playing. I haven't heard these songs in ages. Did someone put together a tape?\" \n\n\"You're talking to him right now.\" \n\n\"Oh, that was such a swell idea. It really gets everybody in the mood\u2014and feeling young again. Thank you so much for doing that.\" \n\n\"I'll be honest, Trudy, I did it for myself,\" I joked. \"I had fun making it. Nothing's worse than a party without music, particularly a class reunion.\" \n\nTrudy was ready to move on. \"Jake, it was so good to see you again.\" She gave me a hug. And it was so good to feel your nice big boobs against my chest again, Trudy. \n\n\"We're going to talk to some other people over there.\" You may be, Trudy, but it looks like Kat's lost her tongue\u2014or whatever that expression is. \n\n\"Oh, could you get me a copy of this tape? It's really super.\" \n\n\"Sure, I'd be happy to. Where should I send it?\" \n\nNeither of us had a pen, so I asked if she was set up for email yet. \n\n\"Yes, can you believe it? Kelly talked me into buying a home computer, but she has to show me how to do everything.\" \n\nHer Prodigy email address was easy to remember. As I said my final goodbyes to Trudy, I stepped toward her daughter. \"It was nice meeting you, Kat.\" Was that a possible minor eye movement in my direction? \"Considering the heat out here, I really admire your dedication to fashion. Those are really nice boots you have on. You look good in them.\" I thought I detected the merest flicker of a smile, but I may have been imagining it. \n\nThey walked over to another group of alumni. Kelly/Kat assumed exactly the same bored posture several feet away from Trudy, so it wasn't just me. I was really disappointed that Trudy wasn't going to be a possible conquest that night. She was the most desirable of all the female classmates I had seen so far. Maybe if her daughter hadn't been with her. Trudy had this laid-back sexiness. I was always attracted to that. Too bad. \n\nThat night as I went to bed after the dance, I thought about Trudy and how I wished she had been there. My imagination was very active. What would she have worn to the dance? A dress with a plunging neckline or one that exposed a lot of leg? Other women had dressed like that to show they still had it going. \n\nI fantasized that we were both there in the same hotel ballroom where many of our high school dances had been held. Of course, Kelly/Kat had been banished from the picture. I asked Trudy to dance to a slow number. Her full breasts pushed against my chest. \n\n\"Jake, I remember how nice it felt when we used to dance this closely. But we're all grown up now. We can take things a lot further than we could before. We could go up to my room later, if you'd like. We could do some more 'dancing' there.\" \n\nMy libido took off like wildfire. Having that dance with Trudy in the privacy of her hotel room. Kissing. Fondling. Slowly unzipping her dress. Yanking back the bedcovers and tumbling into a wanton embrace. I imagined her astride me, unfastening her bra. The tingle I felt as she lowered her breasts into the palms of my hands. I started to stroke myself, lost in thoughts of fucking her into the early morning hours. That wasn't the first time I had masturbated to sexual fantasies of Trudy\u2014and it certainly wouldn't be the last. \n\n* * * \n\nWhen I got Trudy's address, I immediately sent the tape to her. I wanted to keep the relationship going in case I had another chance to see her in the future. We started a polite email exchange. Despite dropping numerous hints, it became clear that Trudy wasn't going to invite me to come see her the next time I was in Texas. So much for that. \n\nThen about a month later she asked if I could send her another tape. Kelly had borrowed hers and never gave it back. I was very surprised to hear this. Kelly/Kat had seemed so antisocial, and I didn't really see her as someone who would be into music that her mother's generation grew up with. Still, I was proud to have my music tastes validated, both by Trudy as well as her offspring. \n\nI was completely floored about a month later when I got an email from Kat herself: \n\nhave any other tapes like this one? kat \n\nbtw, it's shameless - not shameful \n\nActually, I did. I had made three tapes for the reunion weekend. There was way too much good music to fit on a single tape, and I wanted to be able to cover several hours without repeats. \n\nI emailed Trudy first to mention that Kat had asked about another tape. I was still a bit shocked about her contacting me directly like that. I wanted to make sure that Trudy knew about her request, particularly since she had forgotten to copy her mother on the email. I didn't say anything about her getting the name of her daughter's place of employment wrong. \n\nTrudy wrote back that it would be very kind of me to send another mix tape to Kelly and would I mind giving her one as well. I mailed the copies of Volume 2 to Trudy right away. I was still bummed that the tone of her emails was always bland\u2014no flirty prose or anything. It was about as sexy as the ones I got from my female cousins, full of their gossip and nonsense. I'll admit I started losing interest in keeping in touch with Trudy since I never detected any signs pointing to a future romance. \n\nAlmost a year after the reunion, I got another unexpected email: \n\nthx for the 2nd tape, really good music, kat \n\nWell, at least she acknowledged it, even if it was months later. I noticed Trudy wasn't copied on this one either. \n\nAt that point, my contact with Trudy had essentially stopped. The months passed, and I had more or less forgotten about the two of them when another Kat email hit my inbox: \n\nyou said you had a 3rd tape, can i get it? Kat \n\nIt had been a full two years since the reunion. Why would she bother asking about that final tape at this point? \n\nI noticed Kat's email address had changed; it was now at University of North Texas. Well, good for her. I guess Trudy's hectoring finally got through to her about taking charge of her future. I dutifully mailed two of them to Trudy. I said something about how I just remembered I hadn't sent them a copy of the final tape, so here it is. I wasn't trying to hide anything, but I made it seem like Kat hadn't been the one who asked for it first. \n\nIt wasn't too long after I mailed the last tape, when I started getting the occasional email from Kat asking questions about the bands that were on the tapes: what other songs they did, if they were worth seeing live at an upcoming concert, what albums should she buy\u2014things like that. Of course being the music nerd that I was, I always answered in great detail, adding loads of trivia that she probably didn't care about. These email responses rambled on at some length. And I'll admit that I was showing off, particularly to a \"girl\"\u2014whether it had been Kat, or Trudy, or any other female. \n\nThe odd thing about all of this was I had never heard Kat utter a single word. Trudy was never copied on any of her emails so I didn't bother keeping her in the loop anymore. \n\nKat's emails never strayed from the topic of music, so I never asked any questions about what she was studying or anything else about her life. I didn't really care or need to know. We didn't communicate that often\u2014sometimes several months went by between the emails. I felt a bit weird having any kind of contact with the female child of someone I had dated over twenty years ago, but it wasn't like she was some teenager. \n\nThe only time I got a non-music email from Kat was when she announced that her mother was engaged. Trudy was getting married the next summer to a guy she had been seeing for several years. I guess that explained her disinterest in getting something started with me. Until then I had been holding out the slightest flicker of hope my renewed friendship with her could turn into something more. \n\nIt was liberating in a way, I suppose, to finally get some closure. I'll admit Trudy had become the top box office star of my masturbatory fantasies, yet I'm not proud to say there were times I thought of her while I was having sex with someone else. \n\nThe music-related emails from Kat continued to pop up in my inbox from time to time. She was actually writing longer messages\u2014which for her meant more than one or two choppy sentences. I couldn't help but be flattered that some \"youngster\" was appreciative of my musical tastes. She had started signing her emails as \"k\" instead of \"kat.\" Still, I never initiated the exchange; I always let her make the contact. I didn't want to do anything that would smack of \"dirty old man\" behavior. \n\nI never received an invitation to Trudy's wedding. I guess that saved me from buying a gift. \n\n* * * \n\nIt was almost five years after the reunion when I got an email from Kat saying she was planning to come to Los Angeles later in the summer to visit an old roommate from college. I hadn't heard from her in months. She wanted suggestions for places to go: clubs, restaurants, and sightseeing. As usual I went way overboard, spending hours researching my answers. I wrote a lengthy email about the latest hot restaurants, unexpected places to see celebrities, and the hidden gems of Los Angeles. \n\nIt wasn't until I was about to send it when I noticed her email address was now at Tulane Law School in New Orleans. That was quite the surprise. Based on my limited first impression of her from the reunion picnic, I was guilty of thinking she didn't have it in her to pursue an intellectually demanding career like that. \n\nI included my phone number and suggested if she needed anything when she was here, she could give me a call. Of course, being really uncool, I couldn't leave it at that. Like a jerk, I added something about maybe meeting for coffee if she wanted to. As soon as I hit SEND on that email, I felt a wave of shame and anxiety. That was completely out of line: some lecherous old friend of her mother angling to get some face time with her young daughter\u2014as if! \n\nI felt the uncomfortable mantle of middle-aged creep settling on my shoulders. Too late, might as well forget about it. But I couldn't. I'm sure she laughed out loud when she saw my email. She probably read it to her friends in a mocking tone. The only way I finally calmed down, albeit several days later, was by convincing myself that the email was so long that maybe she didn't read it all the way through. \n\nLater that summer I called an old high school friend to see if anyone was putting together a 25-year reunion. He said no one had stepped forward to do the planning, even the people who had done the last two reunions. It looked like we wouldn't be doing it until the 30-year interval. I was actually fine with that. I still had pangs of jealousy thinking about Trudy getting poked by her new husband, so I put all that old high school stuff to rest\u2014at least for another five years. \n\nThen one Saturday afternoon a few weeks later, I was sitting around the house amusing myself by playing solitaire\u2014with an actual deck of cards\u2014when the phone rang. I picked up and heard a woman ask \"Can I speak to Jake Hayward?\" Another telemarketing call. I really should train myself to just hang up on them and not feel guilty about it. \n\nThen I was totally blindsided when I heard: \"Jake, this is Kelly. Trudy Tyler's daughter. Have you settled on a place for dinner tonight?\" \n\nWho? What? Trudy's daughter? Kelly? What happened to Kat? \n\nOf course I didn't recognize her voice\u2014how could I? I'd never heard her speak before then. I had forgotten that she was coming to L.A., and I certainly wasn't expecting to hear from her even if I had remembered. I recalled my embarrassing ploy of suggesting a coffee date, but what's this about dinner? \n\nI mumbled something about her being confused about this. Then Kelly cheerfully said, \"Oh, the Eastlake Grill. That's one of the suggestions you had on your list. Sounds like fun. Do you have the directions? I can meet you there.\" \n\nWhat the fuck? I could hear other voices in the background talking to her while this was going on. \n\n\"No, I don't need you to pick me up. I can take a taxi, no problem.\" \n\nPick her up? Her voice was quite nonchalant\u2014like we had talked about these non-existent dinner plans a few days ago. Then I realized something sounded unpleasant about the voices talking to\u2014actually yelling at her\u2014while she was on the phone. \n\n\"Kelly, is there a problem over there?\" \n\n\"Yes, that's right\" she said brightly, as if I had asked whether her flight had been OK. \n\nSomething was wrong. \n\n\"Kelly, are you talking this way because the people there are listening to what you're saying?\" \n\nIn another way too happy voice, \"Yes!\" \n\nI tried to collect my thoughts as quickly as I could. \"Kelly, do you need me to come get you now?\" \n\n\"So I'm ready to write down the directions,\" she answered. \n\nI guess not. I recited them to her\u2014damn, what's going on over there? She asked what time. I tried to think quickly. Getting a reservation there was going to be almost impossible for that night. \n\n\"Shall we say 8:00?\" \n\n\"How about 7:00?\" she countered. \n\n\"Uh, OK ... we can do 7:00.\" \n\n\"Jake, it's been five years now. How will I recognize you?\" \n\nI stammered while thinking about how to describe myself or what I was going to wear. I still had the deck of cards in my hand\u2014I got a brainstorm. \"Kelly, if you could be any card in a deck of fifty-two, which one would it be?\" Needless to say she wasn't expecting that question. \n\n\"Umm ... let's see ... uh, the queen of diamonds?\" \n\n\"Queen of diamonds then. I'll be sitting at the bar, and I'll put the queen of diamonds in front of me. That way you can be sure it's me. I doubt if anyone else will have one.\" ",
        "Kind of a silly, spur of the moment idea; but it was better than trying to find a flower to wear in my lapel. Plus it had the benefit of being simple and foolproof. \n\n\"Jake, one other thing.\" She was almost whispering now. \"Can you get there at least twenty minutes early? I don't want to be sitting in the bar alone.\" \n\n\"Sure, no problem.\" Seemed like a reasonable request. \"So, Kelly ... 7:00 o'clock at the Eastlake Grill. I'll be there early. Look for the guy with the queen of diamonds.\" \n\n\"Thanks, you are so nice to ask me to dinner tonight,\" she said in the louder, happy voice she had used before. Then she hung up. \n\nI sat there in a daze. I felt helpless, but she had turned down my request to come pick her up, wherever that was. I finally snapped out of it and called the restaurant. \n\n\"We really don't have anything at 7:00.\" \n\nI pressed them\u2014they said I could come by and give my name when I got there, but they couldn't guarantee anything. Almost as an afterthought I pulled the queen of diamonds out of the deck and started thinking about what I was going to wear. \n\n* * * \n\nA few hours later I walked into the Eastlake Grill. I was surprised at how full the place was already. I let the hostess know that I was hoping for a table at 7:00. She barely looked up. \n\n\"I wouldn't count on it. We're really busy tonight.\" \n\nI had her write my name down anyway and said I would be waiting at the bar for my dinner companion to arrive. \n\nI walked into the lounge; it had quite a few tables, most of them full. The bar had stools along two sides. I picked one on the shorter side so I could see people as they came in. I ordered a beer and took out the queen and set it down. \n\nEastlake was still a happening scene, although not the crazy place it was the year before. The hipsters had moved on to other newer spots, but the restaurant was still very popular\u2014and the bar was always packed. I would occasionally see celebrities there, mostly TV actors. \n\nIt was a very typical Los Angeles place, meaning almost every woman in there looked young and attractive. I liked the way L.A. women dressed: fashionable, eye-catching, but not too flashy. They had a comfortable, confident sexiness\u2014which meant long hair (mostly blonde), tanned skin, and tasteful d\u00e9colletage. Several times I was distracted from my mission of watching out for Kelly when these local ladies walked by. \n\nThe bartender looked at the playing card in front of me and made some crack about it. I ignored him and tried to keep my eyes on the entrance. I didn't know how long I was going to be waiting there\u2014at least thirty minutes, maybe more. Who knows, she might not even show up. I'd give her an hour before getting something to eat at the bar. \n\nTo stave off my boredom, I played a little game with myself. As each woman came back from the restroom, I tried to guess whom she would be there with: a nervous first date ... or her parents? Maybe her loving husband, or a bunch of gal pals out on the town, or an older sugar daddy? I was right most of the time. When I saw an attractive young woman come in and sit down next to a middle-aged man (father? boss? lover?), I realized uncomfortably that's what Kelly and I would look like. \n\nThe next woman who came in caught my eye mainly due to her dress and her hair, both of which were very 1940's. Now, there was still a robust swing dance scene in L.A. started by the movie Swingers a few years earlier, so it wasn't that unusual to see men and women dressed in WW II-era fashions headed out for a night of dancing. I expected to see more big band dance fans when she got to her table. In fact, the club where the scenes were filmed for the movie was only a few minutes away\u2014and still packing them in. \n\nHer dress was an eye-catching dark emerald green with a crossover v-neck front, like a wrap dress. The waist was nipped in by a self-fabric sash that fastened on one side. That style of dress certainly accentuated the figure of a woman who had the right body for it\u2014which she did. There was no exposed cleavage, but the dress displayed the curve of her bosom nicely. \n\nI checked her out as she headed toward the tables just behind me, her shapely legs visible with each step. Her dress had a narrow black velvet trim accenting the lapels and the cuffs of her sleeves. The hem hung a few inches higher than the proper mid-calf length for that dress, but the fashion police were nowhere in sight. \n\nI caught a glimpse of her shoes: Mary Jane pumps with short heels\u2014ready for the dance floor. Her abundant dark auburn hair reminded me of the movie stars of that era. \n\nI panicked for a moment. I had been ogling this woman for way too long and had taken my eyes off the entrance where I should have been watching for Kelly. I quickly looked over and scanned the area. Had I missed her? Was she out in the lobby where I couldn't see her? \n\nAs I nervously took another sip of my beer, I was startled to see a hand reach in and pick up the queen of diamonds. I turned and saw the woman in the green dress as she held up the card. \n\n\"Looks like I should be the one with this.\" \n\nMy jaw was slack with disbelief. I struggled to reconcile the face of the woman in front of me with the sullen, Goth misfit from five years earlier. Yes, it was Kelly, but I never would have recognized her. She dropped the card into the breast pocket of my jacket. \n\n\"I saw you sitting here as soon as I walked in.\" \n\n\"Kelly, it's you,\" I said stupidly as I held out my hand. She had a haggard, weary expression on her face. \n\n\"A handshake is not going to do it for me right now. I need a hug.\" She put her arms around me. \n\nI felt her breasts press into my chest as we embraced. She felt just like her mother when we had slow danced over twenty-five years ago. Crazy flashbacks went off in my head: shuffling across the dance floor with Trudy, responding to her closeness as the music played. \n\nKelly held the hug much longer than I expected. I could feel the eyes of everyone in the room staring at us. Her hair reeked of cigarette smoke, and the smell of stale sweat surprised me. An unexpected erection began to stir. \n\n\"So, Kelly, can I get you a drink?\" \n\n\"Maybe later. Can we check on our table now?\" \n\n\"Sure, let's go.\" \n\nThen Kelly grasped my upper arm with both hands. It seemed like an odd gesture\u2014she didn't seem tipsy, and her heels weren't that high. And it wasn't a lovey-dovey thing. Maybe she needed emotional support? We walked slowly toward the front as everyone else tried to figure out what our relationship was. There were probably some father-daughter guesses as we headed out. \n\nI hadn't noticed when I first met Kelly that she was fairly tall, like Trudy. And the same blue eyes. The auburn hair was different, but it certainly suited her. \n\n\"Is there a table for Jake Hayward yet?\" \n\nAgain the hostess barely looked at me. \"I don't think so.\" \n\nBut when she glanced at Kelly, holding my arm with both hands, her expression changed. She quickly scanned the seating chart and flipped through the pages of her reservation book. \n\n\"Actually there is something. Follow me.\" \n\nShe briskly led us to a nicely situated table and pulled out a chair for Kelly before I could. As Kelly sat down, she fumbled with her purse, dropping it on the floor. When she leaned over to pick it up, I got a look at her cleavage when the dress opened up a bit. I felt guilty, but it gave me a sexual jolt. \n\n\"Your waiter will be with you shortly.\" \n\nThe hostess set down two menus and bustled away. I sat down across from Kelly. \n\n\"Jake, can you sit in one of these other chairs closer to me?\" \n\nI moved over to a seat next to her, and she put her hand on my forearm. Her face was drawn and anxious. \n\n\"Jake, I really appreciate your dealing with this tonight.\" She didn't let go. \n\nOur waiter glided up a moment later. \n\n\"Can I get either of you a drink before you order?\" \n\nKelly answered immediately. \"Can your bartender make a Sazerac cocktail?\" \n\n\"I should hope so. He lived in New Orleans for years. But he may not have some of the special ingredients in stock, particularly the absinthe.\" \n\nKelly said she'd go with the bartender's professional judgment as far as using alternate ingredients, if necessary. \n\n\"However, if he feels he can't make a credible Sazerac with what he's got, I'll take the rye whiskey by itself\u2014on the rocks.\" \n\nI got a shot of Gentleman Jack Daniels instead of another beer\u2014couldn't let the lady be the only whiskey drinker at the table. Just by ordering a real cocktail Kelly seemed much more grown up than before. \n\n\"I know I owe you a lot of explanation, but let's wait until later. I promise I'll tell you everything.\" \n\n\"That's fine, take your time. Do it when it feels right.\" \n\nKelly glanced around the room. \"There sure are a lot of beautiful women here. I feel outclassed.\" \n\n\"Well, this is the city that attracts all the pretty ones from everywhere else.\" \n\nShe seemed overwhelmed by her female competition. I had seen out-of-town women react this way before. \n\n\"Kelly, you're very attractive yourself. They don't have anything on you. Keep in mind that most of them have had some kind of help: nose jobs, boob jobs, Botox, spray-on tans ... you name it.\" \n\nShe didn't seem entirely reassured hearing that. \n\n\"Well, at least I'm all natural\u2014just the way Mother made me,\" giving her bosom a little heft with her free hand. \n\nI blushed profusely when she said that. I instantly regretted mentioning anything about boob jobs. She definitely was busty\u2014just like Trudy. She didn't seem to notice my discomfort. \n\n\"Oh, I stand corrected\u2014my hair color came from the salon. I've got the same dark hair as Mother. I wanted something a little more mysterious.\" \n\nMysterious indeed. The color looked very natural to me. Our waiter arrived with the drinks. \n\n\"Here's your Sazerac\u2014made with Herbsaint. Absinthe is still illegal.\" \n\n\"That's fine. It's that way everywhere. I didn't expect this to be a speakeasy.\" \n\n\"You must be from New Orleans then.\" \n\n\"No, born in Texas, but I go to school in The Big Easy now.\" She took a sip. \"Perfect. And thank the bartender for being prepared for an unusual request like this. It's much appreciated.\" \n\n\"Are you both ready to order?\" \n\nI started to say no\u2014we hadn't even opened our menus, but Kelly flipped hers open and ordered almost without looking. I became flustered and ended up getting the same thing I had the last time I was there. The waiter whisked away the menus. \n\n\"Kelly, that is a most impressive dress. It looks stunning on you.\" \n\n\"Thank you. It belonged to my grandmother. You must have met her when you were dating Mother.\" \n\nI really didn't remember; it had been too long. \n\n\"I helped Mother clean out Nana's closet after she died. I was excited seeing all the 40's clothes, but it turned out that most of them had been worn to death. I took two tea dresses that were still in good shape. Then we saw a zipper bag in the back of the closet. This dress was in it. Mother had never seen it before\u2014it was pristine. She guessed that Nana must have bought it right after the war, expecting to have lots of parties to wear it to. Then three pregnancies, one right after the other, likely put an end to those plans. \n\nAs I listened to her, I marveled at the beaded detailing gracing the velvet in several key areas. I hadn't noticed it before. \n\n\"I'm taller than Nana was, so I know I'm wearing the hem too high, but that can't be fixed easily.\" \n\n\"You'll get no complaints from me, Kelly. You've got the legs to wear it at any length you want.\" \n\n\"You think so?\" \n\nShe seemed doubtful. I guess she was still comparing herself to all the other women in the room. \n\nI watched her face\u2014I wondered what the story was behind all this. I couldn't read her expression. She was still holding onto my arm. Then she delved into the topic I knew was inevitable. \n\n\"Tell me about when you were dating Mother.\" \n\n\"Kelly, it was over twenty-five years ago. We were both very young. I don't remember much other than going to dances with her\u2014and being driven to some of our earlier dates by one of my parents. The shame!\" \n\nFor this one time only, I was glad I hadn't slept with Trudy. I could answer everything truthfully. Even so, I tried to downplay things. \n\n\"We never did much other than slow dancing and kissing. And it was mostly goodnight kissing. Remember, Kelly, this was small-town Texas. Things were a lot stricter back then. Teenagers were pretty chaste.\" \n\n\"Obviously not all the time.\" \n\nI was a beat slow in getting the joke\u2014the punch line was sitting right next to me at the table. She smiled at my embarrassment. \n\n\"You got me on that, Kelly. Good one.\" \n\nI continued my story. \n\n\"In that era pregnant girls quietly dropped out of school and had their babies out of town somewhere. Toward the end of our senior year I realized I hadn't seen Trudy for awhile. She wasn't in any of my classes that semester. I never knew who your father was.\" \n\n\"That makes two of us. Mother said he was a student from a high school in the next town who she met on a church retreat. He refused to take any responsibility once he found out she was pregnant. She went to a place near San Antonio to have me. All the family urged her to give me up for adoption. It was very tough for Mother raising a baby with no high school diploma and no husband, but once she made her decision, the family was 100% behind her. \n\n\"I was six when Bob came into the picture. He turned out to be a really good stepfather. He made our family whole and gave us the financial and emotional stability we had been missing. But I don't know why he and Mother never had any other children together. I became 'daddy's little girl' by default\u2014I had no competition. \n\n\"Sadly, Bob got sick and died just before I finished high school. That explains a lot of my rebelling and acting out\u2014like when I was at the reunion.\" \n\n\"So now your mother's remarried?\" \n\n\"It was a very small wedding. Less than ten guests.\" \n\n\"I really wasn't expecting an invitation, but thanks for giving me the heads-up.\" \n\n\"I'm glad Mother found another man to make her happy.\" Kelly sipped her drink and smiled. \"If you're still holding a torch for her, you'd better snuff it out now.\" \n\nWhen the food arrived, Kelly apologized for being so hungry. \n\n\"I need to eat right away. Sorry if I can't keep up a conversation.\" \n\nShe seemed relaxed enough to let go of my arm for the first time since she got there. I usually eat really fast, but she kept pace with me. Even so, her table manners were impeccable. We didn't say much other than to make a few comments about how good the food was. \n\nWhen she finished, Kelly said, \"That was delicious. I haven't eaten much today.\" She set down her utensils on her empty plate and drank down the rest of her cocktail. Kelly rested her hand on mine, but more gently this time, and started to tell her story. \n\n* * * \n\n\"Ren\u00e9 was a roommate I had at North Texas when I started there as a sophomore. I rented a room off campus with her and two other gals. I think Mother was willing to pay for this because she wanted some privacy at home now that she was back in the dating pool. \n\n\"Ren and I became fast friends. She was cute, athletic, smart. But she also liked to party. All four of us did. She graduated a year ahead of me and moved out here to L.A. We've kept in touch off and on. She's been saying I should come out and visit. So I took her up on it and planned my trip for this weekend. \n\n\"I arrived yesterday afternoon, and the cab took me to this apartment complex near the airport. It looked shabby, and the neighborhood was run down. When Ren opened the door I hardly recognized her. She was really thin and looked like she had aged ten years. \n\n\"I was told I could sleep on the living room couch. It was fun getting to catch up with Ren and talk about the old days at North Texas, but I could tell there had been some major changes in her health and lifestyle. \n\n\"Her roommate, Annie, was this emaciated, jittery thing who talked a lot. Ren and Annie claimed they had telemarketing jobs but were very vague on the details. They both smoked non-stop. \n\n\"So later we started talking about where to go that night. I mentioned the first restaurant on the list you gave me, the one that was the latest 'in' place. Ren and Annie were both on board for that, even when I warned them about it being expensive. They brushed off your suggestions for live music, though, saying those places were for old people. They wanted to go to this club called Trackers. Ever heard of it?\" \n\nI shook my head. \n\n\"Anyway, everything you said about the restaurant was true: it was packed, we had a long wait, and I couldn't believe the prices! You were right\u2014the portions were tiny and the bill was huge. Even after blowing my food budget for the whole weekend, I was still hungry when we left. \n\n\"Then we headed over to Trackers. I thought we'd be going to Hollywood or the Westside, but it was in this odd industrial area past downtown. As soon as we walked in I knew it wasn't my kind of place.\" \n\nI watched Kelly as she told the story. Her voice became a low monotone, and her hand tightened on my forearm. Her eyes were sad, even fearful. \n\n\"We got a booth and two guys came over. Ren and Annie definitely knew them. They were good looking, sort of, but the way they talked and acted creeped me out. One of them left and came back with a buddy\u2014one for me, I guess.\" \n\nKelly told how the evening went from bad to worse. About having to constantly fend off \"Bachelor #3,\" as she called him. \n\n\"The guys ordered round after round of drinks. Then they pulled out drugs, a white powder\u2014coke, I assumed. They asked me if I wanted some 'Tina.' It finally clicked\u2014they were snorting meth. Right at the table! I was trapped in the booth. They kept asking me if I wanted a 'bump.' No thank you! \n\n\"Jake, I'm no drug virgin. I smoke weed. I've even used uppers to study for finals or to catch up on schoolwork I should have started sooner, but I was completely turned off by their recklessness. And after seeing what Ren looked like now. And those people she was hanging out with! I wanted someone to throw me a life preserver and yank me out of there.\" \n\nKelly said #3 kept trying to grope her. When the others went out on the dance floor she had to go too, otherwise #3 would keep pawing her in the booth. Her jet lag was starting to set in as everyone else was rushing. \n\n\"The bill eventually came, and the guys refused to chip in. They said they provided the drugs. It wasn't their fault I didn't partake. That wiped me out almost to my last dollar. Finally we decided to leave. I was so relieved. But then Ren asks them over to the apartment!\" \n\nKelly looked like she was recounting some catastrophe. I wasn't sure I wanted to hear what came next. \n\n\"After we got to the apartment, all of them became loud and argumentative. It was harder to push away #3. Annie eventually disappeared into her room. I tried to hide in Ren's bathroom, but #2 was in there. Lying in the tub mumbling to himself. Ren and #1 were arguing on the couch\u2014right where I was supposed to sleep. \n\n\"Jake, the thing that shocked me the most was Ren saying I should be nice to #3, just give him what he wants and he'll stop bothering you. I was speechless! How could my 'friend' take the side of this would-be date rapist? \n\n\"I went back to Ren's bathroom and locked myself in, even with #2 in there. Soon #3 realized I was in there and asked me to let him in. He was pleading at first. Then he became more agitated. Finally he started pounding on the door and throwing his weight against it. Fortunately #2 was starting to nod out. \n\n\"I slumped down to the floor with my back against the door and braced my feet against the toilet. I thought he would break down the door at any moment. He kept up an angry, incoherent rant for hours. ",
        "\"Jake, my body clock was 5:00 in the morning Texas time! By sheer willpower and fear I stayed awake as long as I could. I must have finally succumbed at some point. When I awoke it was after noon, and #2 was sound asleep in the bathtub. \n\n\"I looked out in the hall and #3 wasn't there. Ren and #1 were still talking in the living room. Ren calls out 'Hey, where have you been? Your boyfriend was looking for you. He should be back any minute.' I quickly grabbed my suitcase and carry-on bag and went back into Ren's room and locked the door. \n\n\"I stunk of cigarettes and panic sweat, but there wasn't even time to brush my teeth\u2014much less take a shower. I was too scared to strip naked anyway. I dumped most of my carry-on into the suitcase except for my cosmetics and plane ticket. I was ready to walk to the airport and stay there until my flight Sunday if I had to. \n\n\"But then I saw the copy of your email that I'd printed out with all the restaurant and club suggestions\u2014and with your phone number. Jake, you had offered to do coffee. I was desperate. I thought dinner wouldn't be too much of a stretch. \n\n\"I went back to the living room and announced I was having dinner that night with some old family friends. Ren protested: 'We're supposed to go to Trackers again, yadda, yadda.' I was so relieved when you answered the phone. \n\n\"As soon as I hung up, I quickly changed into this outfit. I grabbed my carry-on and purse, said I was staying with my dinner hosts, don't wait up for me\u2014and rushed right out the door and started walking.\" \n\nShe described zigging and zagging down different streets, afraid that someone might follow her. With that dress on she wouldn't have been hard to find, I thought. \n\n\"I eventually came out to a main thoroughfare and went into a Starbucks and spent my last few dollars on a pastry and coffee. \n\n\"I asked the girl that worked there how long it would take me to get over here by taxi. She looked concerned and asked me if I was OK. I explained how I was trying to escape and only had about $20 left on my credit card and no cash. She called a cab driver friend who used to work there. He agreed to bring me here. \n\n\"I still had to wait there several hours until it was time to head over, wondering if someone from Ren's was going to walk in the door at any moment. When the cabbie picked me up, he knew about my credit card limit. So he took me as far as he could, then pulled over and turned off the meter. He brought me the rest of the way for free, and he didn't even want a tip. He was so nice. \n\n\"And ... now I'm here.\" \n\nShe seemed relieved. Perhaps by telling the story she could actually believe that she was free and safe. \n\n\"Kelly, you were very brave to tell that story to me. I am so sorry you were put in danger by someone you trusted.\" \n\n\"Dessert tonight, folks?\" our waiter chirped as he presented two tiny menus. \n\n\"No thanks, not tonight. Can you just bring us the bill?\" \n\n\"Right away, sir.\" \n\n\"Kelly, one thing is sure: we need to find you a hotel room where you can stay tonight. Don't worry about the cost. I can cover it. We can make the call from the lobby when we're done.\" \n\nShe looked upset but didn't say anything. I droned on about various hotel choices, but I didn't notice that her mood was regressing. \n\nAs soon as I finished signing the check, Kelly grabbed my hand again. \n\n\"I can't stay in a hotel room alone tonight. I'd just be thinking about someone coming in the door with an extra key or prying open the window.\" \n\nI offered to stay with her and guard the door. She stared down at the table. \n\n\"Jake, I need to ask a really big favor. Is there any way I could stay at your house tonight? I'd sleep on the couch, on the floor. I really need to be somewhere that feels homey and safe, not some corporate hotel room that hundreds of people have been cycling through, week after week\u2014and doing god knows what on the bedspread. I'd understand if you can't do it. For whatever reason\u2014like a girlfriend.\" \n\nI agreed immediately. \n\n\"Absolutely. Kelly, you're more than welcome to stay at my place tonight if that would make you feel safe.\" \n\nI explained that I didn't have a girlfriend. Her eyes teared up as she thanked me profusely. \n\nWe stopped at the front desk to get her bag where she had asked them to keep it earlier. I carried it for her as we walked to the car. She still needed to hold onto me with both hands. As we drove away, Kelly looked around at the neighborhood. \n\n\"This is really interesting looking. There's nothing like this in Texas. Steep hills and canyons ... and little winding streets ... houses on the sides of the hill tucked into the trees ... lots of little stores and restaurants. Do you live around here?\" \n\n\"No, but we're only about ten minutes away. By the time I could save enough money to buy a house, this area over here by the reservoir had been discovered. Prices were unaffordable. I have a house with nice views but just not of a lake.\" \n\nShe seemed extremely relieved I wasn't going to dump her off at some hotel. It wasn't long before we pulled into my driveway and got out. \n\n\"Oh, I really like this. It's so cute. You were right about the view. Look at all the lights down there.\" \n\nAs I unlocked the door she put her arms around me and kissed me on the cheek. \n\n\"Jake, thank you so much.\" She hesitated for a second ... then kissed me on the lips. It wasn't a passionate kiss\u2014more like a kiss of gratitude, but it caught me off guard nonetheless. \n\n\"You're welcome, Kelly. I'm glad you're OK.\" \n\nEven though my little bungalow is modest, Kelly had many compliments to offer. She seemed happy and at ease for the first time that evening. She plopped down on the couch. \n\n\"This would be perfect for me to sleep on.\" \n\nI disagreed. \"No, madam. You are assigned to the master bedroom. I will be staying out here.\" She protested, but I insisted. \n\nI showed her where the only bathroom was and gave her a quick look at the other rooms. She grasped my arm again. \n\n\"I need to ask another big favor. Can I take a shower? I really need to wash off all that bad shit from last night and get the cigarette smell out of my hair.\" \n\n\"You sure can. Anything you want, just ask.\" \n\nFortunately the bathroom was spotless. I got her a fresh towel and showed her where everything was. \n\n\"Do you need any special shampoos or things like that?\" \n\n\"No, I'm alright.\" \n\nShe shut the bathroom door, and I went to change the sheets on my bed. A minute or so later Kelly opened the bathroom door partway and held out the green dress. \n\n\"Can you hang this up for me?\" \n\nAs I took the dress, I looked past her and realized that the medicine chest was half open and the mirror showed her from behind. I could see her brassiere straps and down to her lacy panties. She probably had no idea her reflection was visible like that. I felt a bit guilty for looking. \n\nI found a hanger for her dress. As I was pulling the sheets off, I heard her start the shower. I was unfolding the fresh sheets when the door opened again. \n\n\"Jake, can you come here?\" \n\nI walked over to the bathroom. \n\n\"Can you get me one of your shirts to sleep in? Long sleeves. And long tails, if you can.\" \n\nThis time she was totally nude but I really couldn't see much except the top of her butt. Even so, I felt my cock swelling up. I promised to get her one and went back to finish changing the sheets. \n\nOnce the bed was made, I opened my closet door and looked at the shirts lined up in there. I saw two that had extra-long tails. I ruled out the tux shirt and took out the other one. Ironically it was a 40's style shirt but not a true vintage item like her dress: cream colored with twin flap pockets and a flat collar. It was actually a bit large on me so it should be perfect for her. \n\nThe water had stopped running by now. I knocked on the door. \n\n\"Kelly, I have a shirt for you.\" \n\n \n\nShe opened the door wearing a towel. \n\n\"Thanks.\" She held it up under her chin and looked in the mirror. \"It's a really beautiful shirt. Say, do you have a hair dryer?\" \n\n\"No, not anymore.\" \n\n\"Well, it's going to be hard to get my hair to look as pretty without one. I'll just have to use a brush.\" \n\nI was back in the living room sitting on the sofa when she came out. Oh boy! Why does an oversized man's shirt look so sexy on a woman? It hung down long enough\u2014probably at least as long as the skirt she wore to that disco the night before. \n\nI thought she'd take care of her grooming in the bathroom, but she came out and sat down on the edge of the coffee table close to me and started toweling her hair dry and brushing it out. \n\n\"Oh, that shower felt perfect. I really needed that.\" \n\nI felt like I was peeping at her while she was getting dressed, but it was her choice to come out in the living room and talk. Maybe she needed to be close to another person. \n\nI really didn't know what to say to her. This was all too strange for me. Here was Kelly/Kat sitting in my living room with little or nothing on but one of my shirts, brushing her wet hair. I didn't know if she had put her panties back on, but I could tell by the way her breasts were bobbling around in the shirt that she was braless. I tried not to stare but without much success. \n\nShe wasn't facing me directly, thankfully. A concession to modesty, perhaps, when all she had on below the waist were shirttails. She seemed sad and pensive, so I kept quiet. Kelly brushed silently for a while\u2014then she stopped and blurted out: \n\n\"I know you're thinking that last night was no big deal\u2014no harm, no foul\u2014that kind of thing. But it was a big deal. It terrified me. You can't really understand what it's like to be a woman in a situation like that. Like prey!\" \n\nHer sharp words surprised me. She turned and saw the hurt look on my face. \n\n\"Oh, Jake, I'm sorry. I didn't mean you specifically ... I just ... I know you want to understand. It's hard to explain. It's always on a woman's mind\u2014being the victim of some sick animal's criminal behavior. We don't always want to be on the alert, but it's a self-preservation reflex.\" \n\n\"It's OK, Kelly. I think I can sympathize. As much as any man can. I know you're hurting and need some time to recover, even though there was no physical violation.\" \n\nShe went back to her brushing. \n\n\"You know what's strange? I probably would have been ready to screw some guy last night. It's been a while\u2014more months than I want to admit. If Ren had been the same old Ren that I remembered from school and we were on the same wavelength and were in a different situation. And if I had met a different kind of man ... I mean, you should have seen the way I was dressed last night!\" \n\n\"I don't know, Kelly. Maybe I shouldn't have.\" \n\nShe laughed. That helped release the tension from her outburst. \n\n\"Yes, I was ready for love, as it were\u2014little black, spangly mini-dress with a push-up bra and come-fuck-me heels. My first night ever in L.A. Boy, did I get the opposite of what I wanted.\" \n\nI was a little surprised by the way she talked, not that I'm a prude or anything\u2014far from it. But it seemed to be coming from a different person than the one who slipped the queen of diamonds into my pocket earlier that evening. Maybe that was a good thing. Maybe she was slowly coming back to being her old self? \n\nHer hair was starting to take shape. She was doing pretty well without using a dryer; she almost got that look she had earlier. Her sadness returned. \n\n\"Jake, even though I feel safe now ... and I can start putting the unpleasantness of last night behind me ... the experience did something to me.\" \n\nShe set down her brush and looked like she was reluctant to talk about it. \n\n\"It numbed something in me. In my libido. It's hard to describe. I don't feel sexy or flirty or any of those normal girly things now.\" She sighed. \"I hope it's not permanent.\" \n\nWow, what do you say to that? The room felt smaller all of a sudden. \n\n\"Kelly, I'm sure that won't happen. Give it time.\" \n\nShe turned toward me and thanked me again for my support and understanding. \n\n\"Jake, I've been so focused on my crisis that I haven't really given much thought to how extraordinary it is to be sitting here with you\u2014five years after being such a sullen brat when you first met me. \n\n\"You know something? You were the only person who called me 'Kat' that day\u2014the only one. And I still remember the compliment you gave me about my clothes. That actually meant a lot to me\u2014although I would have been loath to admit it then. You were the only person I met that day who really 'got' me\u2014what I was about, how I chose to dress and wear my hair. \n\n\"Yes, I'll always love my mother. She really sacrificed a lot for me. Denied things for herself so I could reach my potential. But, other than Bob when he was alive, I never felt like she or any of her friends or our relatives her age really understood me, really connected with me\u2014although I sure didn't make it easy for any of them. Somehow you saw right through the shell I was hiding behind that day. And, however briefly, you spoke to me as a person, not as some pouty weirdo.\" \n\nShe looked at me as she started brushing her hair again. \n\n\"And I'll always be thankful for your turning me on to such great music! Like most of my peers, I automatically rejected anything that my mother liked. But that first tape\u2014there was something about it: the selection of songs, the lyrics, and the way it all flowed together. It was really great music\u2014timeless, I realized eventually. I love all that stuff now. And so I just had to have the other tapes.\" \n\nI realized then that Kelly hadn't forgotten to copy Trudy on those emails. She knew her mother wouldn't have understood why she was interested in the music, or why she would seek me out to talk about it. \n\n\"I always looked forward to your emails telling me all about the bands and their records, the different people that came and went from the groups, and how they reformed into other groups. You taught me a lot. That music means something to me now, like it did to you\u2014and my mother.\" \n\nSo she actually read through all those rambling, trivia-stuffed emails. I never would have guessed. \n\n\"Jake, it was something more important than the music\u2014or any other knowledge you could have taught me. You showed me respect. You didn't judge me. You were an adult treating me like another adult. Someone who thought I was worth spending his time on.\" \n\nI started blushing. I really wasn't expecting to hear that from her. Her communications had been so curt. I had no idea I had touched her like that. \n\n\"Kelly, it means a lot to me that I made a difference. It gives me great pleasure to hear that.\" \n\nShe reached over and touched my knee. \n\n\"It filled in some of the emptiness that I had in my life back then. I know I never let you know it before, but I'm thanking you now.\" \n\nMaybe I shouldn't have, but I took her hand in mine and caressed it. We looked at each other. I felt powerful, confusing urges flowing through me. \n\nKelly smiled. \"I'd like to continue sharing this moment, but I really need to catch up on my sleep now. I hope you don't mind my retiring early.\" \n\n\"Sure, by all means. I'm so glad I could help you tonight. It was my pleasure.\" \n\nWe both stood up, and she stepped closer and put her hands on my shoulders. I looked into her eyes. I wanted to kiss her, but under the circumstances I wasn't about to make an unwanted pass at her. Then I guess she read my mind. Kelly placed both hands on my cheeks and gave me a kiss. It lingered longer than the last one. \n\n\"Are you going to be OK out here on the couch? I feel bad about bumping you out of your own bed.\" \n\n\"Think nothing of it. The couch is quite comfortable. I even come out here to sleep sometimes in the summer\u2014for the breezes. I want you to get a good night's sleep.\" \n\nShe said goodnight and turned toward the bedroom. I could see her breasts swaying under the shirt as she walked away. \n\n\"Kelly, I can put a night light in the hall so you can see your way to the bathroom in the dark. You let me know if it disturbs you.\" \n\n\"No, I'm sure it won't.\" \n\nI plugged in the night light. It gave off a soft glow. \n\n\"Thank you. That's perfect.\" \n\n\"You can close the door if you want. And lock it, if it makes you feel safer.\" \n\n\"No, actually I'll feel better if it's open. Goodnight.\" \n\nI removed the cushions from the back of the sofa and turned out the living room lights. I sat there in the dark wondering if I should keep some clothes on. Usually I sleep in a t-shirt and boxers; I haven't owned pajamas since I was a kid. I finally decided to sleep in my underwear like I usually do. I hung up my clothes on a chair and pulled a comforter over me as a makeshift bedspread. \n\nThe light from the bedroom was already off; just the night light was glowing in the hall. It wasn't even 10 o'clock, but I knew Kelly must be completely spent. Still, I didn't want to disturb her by turning on a reading light. I'd just have to tough it out, knowing I'd fall asleep eventually. But right then, a lot of strange, conflicting thoughts were coursing through my head: about Trudy and about Kelly and me. How odd it was for us to see our intermittent email relationship turn into the emotional drama that had played out that night. \n\nI have to confess: I found Kelly to be very appealing. And she did remind me a lot of Trudy. And the thought of having sex with a woman that much younger, well ... But I swore to tamp down those feelings before they went any further. \n\nI lay there for thirty minutes. I watched each one slowly go by on the front of the VCR. Unplugging the damn thing came to mind, but I didn't want the hassle of resetting the clock. I turned over and worked my way through all the various mind tricks I had for falling asleep but without any success. I resigned myself to the fact it probably wouldn't happen until around midnight, like on a typical night. About an hour later I was still lying there silently when I heard a whisper. \n\n\"Jake ...?\" \n\nI raised my head up a little. I could see Kelly's silhouette lit from behind by the night light. She was standing in the entryway between the hall and the living room. \n\n\"Kelly, are you OK?\" \n\n\"No. My body is so exhausted, but my mind won't let me sleep.\" \n\nHonestly, I wasn't sure what I could do to help her at that point. \"Can I get you something?\" \n\nShe walked slowly into the living room and knelt down by the couch. \"I really need a loving, human touch right now. I need to be healed.\" \n\nI didn't know what to say to that. She put her arms around me and rested her head on my chest. \n\n\"Oh, Jake, that really feels good.\" We lay there quietly. \"Mmmm ... I can already feel it working.\" \n\nI was holding my arms up awkwardly, not sure where I should put them. I finally lowered them and held her to me. She shifted up a little closer and sighed. I felt my emotions sucking me into the warm quicksand of sexual longing as Kelly whispered her thanks to me. \n\nKelly moved herself up some more; she was almost entirely on top of me. She moaned and whispered, \"That's so good, Jake, help me heal ... I really need it ... you don't know how good it feels when you hold me like this.\" \n\nThe proverbial angel on my shoulder was practically shouting at me: \"Don't you dare take advantage of this poor woman in such a vulnerable state\u2014don't do it!\" I totally agreed, but I knew I had only a few moments left before it would be a lost cause. \n\nI really struggled; Kelly felt so good in my arms. Her breasts squeezing against me released sparks of sexual arousal all through my body. She seemed so content. Like she really did need the closeness\u2014and my touch. I felt my resistance melting away. \n\nThen Kelly slid off me and stood up. \n\n\"Jake, sit up straight on the couch now ... for me ... please.\" ",
        "She grabbed my shoulders, helping me sit up. I wasn't sure what was going on. Then Kelly straddled me and placed her knees on the sofa. I could feel the bare skin of her thighs on my legs as she sat down. The night light threw just enough illumination from the side for me to see her face. She leaned in and whispered. \n\n\"Jake, I need to be touched. I need to feel your hands on me.\" \n\nI suppose a stronger person could have pushed her away and said \"Stop!\" But that was a moving train I should have jumped off long before then. It was already going too fast for me to do anything but stay on for the ride. I put both hands gently on her face. Kelly let out a long sigh and rested her forehead on mine. There really was no going back now. \n\nI felt a few tears flow down on my wrists\u2014my god, I hoped I wasn't being completely irresponsible. It could have been emotional dynamite. I moved my hands up and caressed her temples. \n\n\"Nice ... nice ... mmm,\" she moaned softly. I started running my fingers through her hair. \n\n\"That's good\u2014perfect. Oh, Jake, it's so nice to feel you touch me like that.\" \n\nI reached around and began massaging her neck and shoulders. Kelly put her face against mine and threw her arms around me. \n\n\"Oooh, yes! I'm so knotted up there. That feels wonderful ... aah ... aaahh ... so good.\" I could almost feel the tension and fear draining from her body. \n\nKelly moaned contentedly for several minutes as I massaged her. Then she said, \"Now do my lower back.\" \n\nI slid my hands down toward her waist and began to massage her there. \n\n\"Yes ... yes ... yes ... oh, you're touching me just right ... that's good ... you're making it better ... so much better.\" \n\nI would like to say I was the dispassionate massage professional at that point, but that couldn't have been any further from the truth. I had an aching erection and plenty of conflict about what I should do next. The devil on my other shoulder pushed my hands down to her hips. \n\nI began stroking her there, letting my fingers move around the curve of her ass. Her moans took on a more urgent tone. And then I felt her hips start to gyrate slowly, in rhythm with my caresses. \n\n\"Aaah ... yes, Jake ... that's what I need ... just right.\" \n\nI could feel my own passion growing as my touch became more insistent. Kelly lifted her head and looked at me. \n\n\"Jake, you may not understand how I'm feeling right now, but with your hands on me ... it's just wonderful. It's exactly what I need. And ... I can't let last night blunt my sexuality. I must stop that feeling before it settles in. I need you to help me fight it.\" \n\nI saw a look in her eyes that was completely different from earlier: her passionate side was struggling to overcome the grip of the prior night's misery. \n\n\"If this is making you feel uncomfortable, we can stop. But I don't want you to. I really need this ... to be healed ... to wash it all away ... all of it.\" \n\n\"Kelly, I'm not going to stop ... unless you ask me to. I want to help you. Just guide me. Tell me what you need.\" \n\nHer eyes were tired, but serious. \"I want you to touch me in front.\" \n\nShe reached down and moved my hands to her chest, right below her breasts. She was still gyrating slowly over my legs as she started to caress my hands. I felt her push them higher. I was cupping her breasts\u2014they were more than a handful. She closed her eyes. \n\n\"Yes ... yes ... oh, Jake. So good ... I need this ... perfect.\" \n\nMy excitement was accelerating as I stroked her voluptuous breasts. They felt soft and pillowy. Her nipples hardened under my touch. Kelly let out a long cry of passion as her head tilted back. At that moment I felt myself tumbling into the same, sweet vortex of sexual surrender she had already given into. \n\nKelly leaned over and kissed me, but this time I felt her wet tongue dart into my mouth. That was no thank-you kiss. We were both groaning with arousal, breathing hard, not caring how clumsy we were as we pressed our lips together. \n\nMy fondling of her breasts had been gentle and loving at first, but her reactions encouraged me to be rougher. Kelly was writhing in my lap, moaning with passion. I waited for a signal from her as to what else she wanted. It didn't take long. \n\n\"Jake, put your hand between my legs. Touch me there. I want you to get me off.\" \n\nWhoa! If I were still that teenage boy, I might have lost my load at that point. I moved one hand along her thigh and slipped the other under her shirttails so I could stroke her bare ass. Kelly sat up straight and slowly unbuttoned her shirt. \n\nI expected my fingers to tease her bush, but I was startled when I realized she was completely shaven. That was a first for me\u2014welcome to Generation X, Pops. Quickly my surprise turned into lust, thinking about Kelly carefully grooming herself there, wanting to fully expose her parts to her lovers, leaving no barrier to the sexiest touches\u2014or kisses. \n\nI spread my first two fingers and softly touched just her outer lips. She whimpered quietly then let out a long groan when I started to rub my thumb around slowly near her clitoral hood at the same time. I drew my fingertips back and forth along her labia, not yet touching the inner folds. \n\n\"Oh, god, Jake, oh! The way you're touching me ... I've never ... it feels so, so ... oh, please!\" \n\nI was teasing myself as well. I desperately wanted to feel her wetness, to feel inside her with my fingers. Kelly was moving around, trying to make me touch her more intimately; but I wanted to wait a little longer. When I felt a dribble of her arousal ooze down on my hand, I knew it was time. \n\nI slowly closed the vee of my two fingers as I stroked her until I was touching her inner labia. They were engorged and dripping. Kelly cried out when she felt me smear her juices all over. \n\n\"Fuck! ... Jake! ... My god!\" \n\nI fingered her very slowly, intermittently teasing her clit with my wet fingertips. \n\n\"Oh, you're driving me crazy ...Jake! ... Jake!\" \n\nI was totally lost at that point\u2014lost in the swirl of giving her pleasure, feeling her body react, hearing her moan and beg me to go faster. \n\n\"Oh, Jake, this is exquisite ... exquisite torture. I can't take much more.\" \n\nI gradually picked up the pace. Her pussy was sopping wet by that point. \n\n\"Oh, that's it . . . Jake ... Jake, you're going to make me come. Don't stop ... don't stop ... please ... I'm getting so close.\" \n\nI slipped my fingers up inside her and pumped\u2014that did it for her. Kelly grabbed me tightly and let out a long wail as her climax shot through her body. I felt so close to her at that moment. The energy from her orgasm affected me deeply. Sex is such an incendiary mix of body, mind, and emotions\u2014set afire by pure animal lust. She collapsed in my arms. \n\nKelly was moaning softly. I eased my fingers from her and started to move my hands gently over her hips. \n\n\"Jake, that was nice ... really nice.\" \n\nHer face was pressed against mine as she hugged me tightly. \n\n\"I'd give anything to feel you inside me right now, but I just don't have the energy.\" \n\nI sadly agreed with her, but then I got an idea. \n\n\"Kelly, let's try something. Lie down on your side.\" \n\nI helped her up and eased her onto the sofa. I moved my pillow over and put it under her head as she rolled on her side, turning her back to me. My shorts were on the floor in a flash. \n\n\"Now pull up your top leg. That's good. You get comfortable, and I'll do the work.\" \n\nShe looked up at me and smiled. \"I'm on the pill in case you were worried about history repeating itself.\" \n\nI bent over and kissed her. \"Thanks for letting me know. I was just about to ask.\" \n\nI put one knee on the sofa and positioned myself behind her. Kelly figured it out quickly. \n\n\"Oh, I get it now. I see what we're doing. Haven't tried it this way before.\" \n\nWe both shifted around to get lined up properly. I leaned down, stroked her shoulder, and whispered to her. \n\n\"Kelly, are you comfortable?\" \n\n\"Yes, I'm ready for you.\" \n\nI inched closer and began rubbing my cockhead along her pussy lips. She was considerably slick from her recent orgasm. Kelly moaned as I coated my glans with her wetness. \n\n\"I'm going to enter you now.\" \n\n\"Yes ... please.\" \n\nI pushed in just enough to cover my cockhead. I carefully pulled back ... then pushed in again, a little bit more. I took it slowly, letting her lubrication ease my entry into her. With each thrust Kelly cried out. \n\n\"Am I hurting you?\" \n\n\"No ... it feels good ... I'm fine.\" \n\nI was finally all the way in. I let her get used to the fullness for a few moments. \n\n\"Mmmm, Jake, you are so gentle with me. It makes all the difference.\" \n\nI pulled back slowly and started a very easy rhythm. Kelly's moans grew louder as I gave her my full length. Her pussy felt incredible\u2014soft, warm, wet, and satisfyingly tight. The closeness that I felt for her intensified. Kelly grabbed one of the big throw pillows and clutched it tightly. \n\n\"Oh, Jake ... Jake ... Jake ... oh, baby. You don't know how good you feel inside me ...oh, it's perfect.\" \n\nMy emotions were scattered in all directions. Kelly was an attractive young woman\u2014yet she came to my house like a wounded bird, betrayed by someone she thought was her friend. And now she had put her trust in me\u2014to give her refuge, help heal her, and bring her back from that darkness. I hoped I was doing the right thing. \n\nI looked down at her exhausted body, curled in a near-fetal position, taking my cock up inside her, barely able to vocalize her pleasure. I shifted closer and held her to me as I made love to her. Her sexual moans became raw and feral. \n\nKelly's surrender was so complete. It affected me profoundly\u2014like no other coupling had done before. I hoped I could hold out until she was satisfied. \n\nI picked up the pace gradually. She almost sounded like she was crying. I hesitated. \n\n\"Kelly, is it too rough? \n\n\"No, no. I'm OK.\" She turned her head and looked at me. \"Don't you dare stop,\" she said, \"I feel something big coming.\" \n\nI went back to my full, steady strokes. \n\n\"That's it, keep it going, babe ... oh, really good ... perfect.\" \n\nMy balls were aching. I couldn't believe how good she felt, her tight pussy caressing my cock with every stroke, bathing it with her wetness. I could feel my orgasm approaching. \n\n\"Oh, Jake, you're making me crazy. I feel like I'm going to explode.\" \n\nI could sense subtle changes in the way her pussy felt as she neared her climax. \n\n\"Jake, I'm so close ... push me over the edge. Oh, right now ... oh, my god, my god!\" \n\nShe let out a long, plaintive cry\u2014it came from deep inside her. Her body jerked and shuddered as waves of pleasure rushed through her. It seemed like all the remaining emotional and sexual tension that had built up inside her was released in one powerful burst. \n\nKelly was still twitching as the last few jolts of her orgasm spread through her body. I eased up and came to a halt, still inside of her. I touched her lovingly. \n\n\"Kelly ... oh, Kelly ... oh, sweet baby ...\" \n\nShe had her face partially buried in the pillow. \"That was beautiful, Jake, so nice ... oh, god, was that good.\" She seemed totally sapped. \n\nI wasn't sure what the end game was going to be, but I was resigned to the possibility I'd have to take care of myself later\u2014just like any other night, I thought. \n\nKelly looked up at me. \"That's enough, babe. I can't do any more. Oh, that was wonderful.\" \n\nI carefully eased my cock out, getting a final groan from her when I pulled free. Kelly slowly rolled over onto her back. She raised her hands and brought my face down to hers and gave me a soft, sensual kiss. \n\n\"Jake, I feel like the evil spell is broken. I'm so much better ... thank you so much.\" Kelly was moving and talking in slow motion, as if she were drugged. \n\nAfter a few moments, she regained some of her composure and glanced down at my erection. \"Oh, Jake! I want you to come, too, but I'm too exhausted to do any more.\" \n\nI had an idea. \n\n\"Kelly, I know what we can do. Your part's easy. I can put my penis between your breasts and use your cleavage\u2014and get off that way.\" \n\nKelly was surprised\u2014and amused. \n\nShe laughed. \"I didn't know you could do that. How does this work now? Show me.\" \n\nI straddled her and placed my cock on her chest. \"OK, now you hold your breasts together like this.\" I demonstrated for her. \"Hold them like that while I slide my cock in and out. It won't take long. You've got me so turned on right now.\" \n\nShe was intrigued. \"That's all you need from me? OK, I can do that.\" \n\nKelly pushed her breasts together. I helped position her hands as I slipped my cock between them. I didn't want to kill the mood by running off to get some lubricant. I had so much precum leaking out anyway, plus my cock was very wet from being inside her. Besides, I wouldn't last more than a minute. \n\nKelly gave me a lazy smile. \"Don't be too critical with me, Jake. Remember, I'm a beginner at this.\" \n\nI started fucking her tits, nice and easy. It felt delicious\u2014exactly the right amount of friction. Her breasts were big and soft and easily engulfed my prick. \n\n\"Oh, Jake. This is really sexy. I had no idea. Oh, it's making me tingle all over. You feel so nice sliding between my boobs.\" \n\nMy arousal was at that peak where you feel like your whole body is humming with ecstasy, spreading out from your genitals. You want to make it last forever, and you feel like you almost could. I started to lose my inhibitions. I had to share this with her. \n\n\"Kelly, my cock is on fire. It feels really good ... fucking your tits like this. You're making my balls swollen with cum. Ready to explode all over you.\" \n\nShe seemed taken aback by my dirty talk at first but then picked up on it herself. \n\n\"You like fucking my titties? It's getting me hot, too. I love watching you get excited like this. Watching you get turned on by me ... by my naked body.\" \n\n\"Kelly, I'm getting close. If I come on you, it's going to be messy.\" I had no idea how she would feel about a wet shot. \n\n\"It's OK, Jake. I want you to come. Let it out, sweetie. Let it out.\" \n\nAnd that was it. My orgasm was epic. I spurted harder and thicker than I had in years. \n\n\"Kelly, I'm coming ... all over you. Oh, Kelly ... Kelly ... oh, god ... oh ... fuck!\" \n\nPleasure rushed all through my body as she milked a huge load from me with her soft breasts. It splashed up under her chin, over and over, and pooled at the base of her throat. Thankfully none went on her face. \n\nKelly cried out each time I splattered onto her. \"It's hot! ... oh! ... oh! ... Jake! ... oh, you're coming so much! ... my god!\" \n\nShe seemed more surprised than disgusted by my ejaculation. Actually, I think she might have been turned on by it. \n\n\"Jake, that was amazing. All of that for me? I must have really got you going. That was really hot\u2014in every way.\" \n\nWe were both stunned at what had just happened. I leaned down, and we shared a long, post-coital kiss. I got up and offered to get something to clean her up with. \n\n\"No rush,\" she said, sitting up partway so she could see the mess I had spurted all over her. \n\n\"Oooh, look what I made you do. It's running all down my boobs.\" \n\nShe surprised me by slowly dragging her fingers through the semen glistening on her chest. She had a strange look on her face as she did it. \n\n\"This ... makes me feel powerful.\" \n\nWhen she rubbed some on her nipples, I almost swooned. \n\nI came back with a damp washcloth and carefully cleaned her off. She had almost passed out by then. I helped her up and put my arm around her as I guided her to the bedroom. She managed to fasten a few buttons on the shirt before I eased her onto the bed and lifted her legs up. I started to pull the covers over her when she stopped me. \n\n\"No, I want you to sleep next to me.\" \n\n\"Kelly, I'd be honored.\" \n\nI leaned over to kiss her goodnight, but she had fallen asleep almost immediately. I wanted to drink in her smell and feel her body next to me for as long as I could\u2014but I was out much too quickly. \n\n* * * \n\nYou know that feeling when you begin to wake up from a bizarre dream, and you can't seem to sort out reality from the dream? As those phantasmic images swam in my head, I opened my eyes to the sight of a green 40's dress hanging in my room. The exact dress that was in my dream\u2014or was it real? Trudy had been wearing it in the dream. And there was a naked woman with beautiful auburn hair. I didn't know her, but I had sex with her while Trudy watched. And I was ... \n\nThen my head cleared: the green dress ... the Eastlake Grill ... Kelly in trouble. Then I brought her here and we ... I quickly turned over. Kelly was awake and propped up on one elbow, watching me and smiling. \n\n\"Pleasant dreams?\" \n\nI wondered how long she had been up. \n\n\"It's 9:30 Texas time, I've been awake for a while.\" \n\nAll the details from the night before\u2014all of them\u2014came flooding back to me. \"Kelly, I ...\" \n\n\"Shhhh ...\" She pressed her finger to my lips. \"Quiet ... I'm going to talk first. \n\n\"Jake, I don't want you to feel the slightest bit of guilt about last night. Everything that happened ... I asked for it. I knew what I was doing at the time ... and I needed it. And ... I enjoyed the hell out of it. It was the best. Your touch was so perfect.\" \n\nShe looked at me tenderly for a moment; but before I could reply, she gave me a quick kiss and crawled out of bed. I watched Kelly and my shirt disappear into the bathroom. \n\nMy mind was racing in several different directions, trying to sort out what had happened. Kelly seemed to be quite at ease about the whole thing, even appreciative. I felt immense relief that I didn't wake up to an embarrassing emotional crisis caused by my indiscretions the night before. \n\nShe came back from the bathroom and jumped on the bed, straddling me. \n\n\"So ... here's what I look like in the light of day, without the green dress.\" She seemed very playful and frisky. \n\n\"Kelly, the dream I had ... it was real! You really were here!\" \n\nShe laughed and shrugged the shirt off her shoulders, exposing her breasts. \"In the flesh.\" \n\nI was getting a good look at Kelly's boobs for the first time. I really hadn't seen much in the near-darkness the night before, although I certainly got a good feel through the shirt\u2014and around my cock. They were nearly perfect: full, nice shape, and deep cleavage\u2014with wide, light brown areolas and stand-out nipples. Her breasts were definitely larger than average but not oversized. The effect that gravity had on them was apparent; but since she was tall, they complemented her body nicely. And pendulous breasts are a big turn-on for me, anyway. \n\n\"Wow, you have the most beautiful breasts. I don't think I've ever seen a naked woman as sexy as you.\" As trite as it sounded, it was true. \n\n\"Jake, you're too kind. I'm barely twenty-five and my boobs are already heading south.\" \n\n\"Well, I like your breasts. They look heavy and sexy.\" Kelly leaned over me so I could touch them. \n\n\"Mmmm ... I remember those hands.\" She kissed my forehead. \"Thanks for not saying 'saggy.' I like 'heavy.' That's a good word.\" \n\nI could have stayed in bed with her for a week, but I wondered about her flight home. \n\n\"We're OK. It's not until this evening\u2014at 7:00. I'm flying to DFW to stay with Mother for a few days before heading back to New Orleans.\" \n\n\"What about your things at Ren's? I can go with you to her apartment if you want.\" \n\n\"Let me think.\" She began ticking off the items she had left there. \n\n\"My old, hand-me-down suitcase that Mother gave me years ago. She's promised to get me a new one anyway. And the black dress\u2014it was the first thing I bought when I started working at Shameless. That was over six years ago. I've gotten my money's worth out of it. I don't think I'd ever be comfortable wearing it again. ",
        "\"What I would like to get is a change of casual clothes to wear home on the plane. But I'll wear my dress from last night if I have to.\" \n\nI promised I'd put on the same clothes I wore to Eastlake\u2014in solidarity. \n\n\"What about your shoes from that night?\" \n\n\"My come-fuck-me's?\" She laughed. \"I brought them with me. They were too expensive to leave behind. They're actually not that extreme\u2014no platforms. A little bit taller than my other shoes. I don't want to tower over every man that's out there. \n\n\"Oh, I know! I can put them on, and you can decide if they're extreme or not.\" Kelly looked at me coyly, then hopped out of bed and pulled the shoes out of her bag. She sat down on the bench at the foot of the bed and strapped them on. \n\nThings were taking an unexpected turn. \n\n\"Oh, and the push-up bra, too. So you can get the full effect.\" \n\nShe slipped off my shirt and hung it on the bedpost. I watched her fasten the bra behind her back, then bend over and do a lot of adjusting and tugging as she positioned her breasts in the cups. \n\nI looked at Kelly's lissome ass and narrow hips. The shoes gave a taut, shapely tone to her long legs. Her pale skin was flawless. Was this the sight I would have savored if Trudy and I had been lovers back then, carefree in our youth? Memories of the unexpected fling I had with another old high school girlfriend a few years after graduation flooded my consciousness. What if that had been Trudy? \n\nGood god! Kelly was a baby when that happened. Daughter of a struggling single mother. I quickly banished any thoughts of Trudy as Kelly stood up and walked over to the bed next to me and put her hands on her hips. Her boobs swelled up from a lacy plunge bra that was sheer enough to show the outline of her areolas. \n\n\"Technically this isn't a push-up bra. It's me barely fitting into a D cup. Now imagine I have the black mini dress on\u2014and my panties, too, of course.\" \n\n\"Kelly, I could try for days, but I could never picture you with more clothes on while you're standing there like that.\" \n\nKelly grinned as she sat down on the edge of the bed. She leaned over and stroked my hair. \n\n\"Jake, I'm sure you felt awkward last night, trying to deal with my state of mind\u2014particularly when I came to you after I couldn't sleep. I'm sorry if my needs put you in a quandary. I hope things are OK between us because I really feel we're connecting now. I don't want you to feel uncomfortable with me, especially when it comes to sex. I know our intimacy last night started out with more of a ... therapeutic intent. But ... what can I say? You really rocked my world.\" \n\nHer final words sent a hot surge of sexual desire washing over me. Her tousled auburn hair, her astonishing cleavage inches from my face\u2014and her lack of clothes down below. It was irresistible. But before I could respond, she beat me to the punch. \n\n\"Actually, Jake, I wouldn't mind if we did that again. How about some straightforward, passionate sex\u2014without all those other worries hanging over us?\" \n\nThose were the magic words. \n\n\"Kelly, I'll show you just how comfortable I can be with you when it comes to sex.\" I got up from the bed and grabbed the pillows and put them behind her. \n\n\"Lean back.\" I kneeled down in front of her and parted her legs. \n\nShe gasped. \"Oh, Jake, you're going to be really naughty to me, aren't you?\" \n\nAs I caressed her inner thighs, Kelly stretched out one bra strap so she could reach in and scoop out her breast\u2014followed by the other one. She folded the tops of her bra cups down. \n\n\"Still some support, but a lot less confinement.\" \n\nWho could argue with that? The look was quite flattering to her\u2014very \"bad-girl\" sexy. \n\nI began my attention near her knee, along her inner thigh, and gradually moved my kisses and licking closer to her swollen lips. The anticipation was overpowering\u2014my first time going down on a woman's bare pussy. Faint traces of the perfume she had been wearing mixed seductively with the scent of her excitement. \n\nKelly reached around, grabbed her thighs, and pulled them back. She opened her legs wider, giving me full access. I grazed my fingertips over her ass, right where it joined her legs. My tongue dipped down and licked along her outer labia. Right where I had started fingering her last night. \n\n\"Oh, fuck, Jake! You're going to eat me out! I want you to ... I want you to suck on my pussy ... now ... please!\" \n\nKelly's natural breasts had flattened out, but the bra was allowing them to wobble around as she reacted to my oral teasing. I could see her strappy shoes just above my head. The image was powerfully arousing. \n\nHer musk was tantalizing. I wanted to taste it and rub my mouth in it. I closed my lips and pressed them on her mound just above her clit. I started moving around slowly, in small circles, left to right, up and down. \n\nKelly let out a huge groan. \"Oh ... my ... god!\" \n\nMy lips could feel her swollen bud through the thin skin that covered it. Kelly was begging me now. \n\n\"Lick me all over, Jake. I want it so badly. Please!\" \n\nI couldn't wait another second either. I wet my tongue and drew it along her inner lips several times, then parted them with it. I licked all around the opening of her vagina. \n\n\"Motherfucker! Oh, my god!\" Kelly squealed. \n\nI eagerly lapped up her wetness and spread it around with my tongue. Her pussy had an intoxicating, natural taste that drove me wild. I could have kept my mouth on her for hours, letting her juices coat my tongue. I put my lips on her clit and sucked it softly. She was going crazy and making lots of noise. I was getting so turned on by her reactions to my pussy licking that my balls were aching. \n\nI put my hands up behind her knees so she could rest her arms and free up her hands. I looked up and saw her roughly kneading her breasts and pinching her nipples. At one point she grabbed her nipples tightly and lifted up her boobs. She let their full weight hang there as she pressed her pussy into my face. I could feel copious amounts of precum dripping from my cock down onto my thighs. We were both delirious with lust. \n\nShe groaned as she slowly lifted herself up on her elbows. Her eyes were half open. \n\n\"Jake, I can't believe how good that feels. Don't stop, honey. Please don't stop. I'm right there ... any second now ... now ... now!\" \n\nI held her legs tightly as she started to shake. She was looking right at me. \n\n\"Oh, Jake ... I'm coming on you!\" \n\nMy lips felt her pussy contract several times as hot juices leaked out onto my tongue. Kelly screamed as a strong orgasm exploded all through her body. I couldn't believe how sexy it was to watch her as she came. I kept licking and sucking until I sensed she wanted me to ease up. \n\n\"Jake ... oh, Jake ... what you do to me. I can't believe it.\" \n\nI moved up slowly and stroked her torso as I planted kisses all around her navel. She shuddered and moaned and rolled to one side. I got up on the bed and spooned next to her, holding her tightly as she cooled down. \n\n\"Oh, Jake ... I want you to do that a hundred more times, OK?\" \n\nAfter a brief rest, she groaned, rolled back over, and threw her arms around me. Kelly gave me a deep, long kiss. She had to know her musk was all over my face; she became excited as she tasted herself. Our tongues did a dance together as the kiss became lustful and sloppy. \n\nKelly pulled back and gave me a wild look as she panted with arousal. I knew then that our sex the night before had been just the beginning\u2014and she did, too. Nothing to be embarrassed about. Certainly neither of us had planned it, but it was clear we'd be eager participants going forward. She rested her head on my chest. \n\n\"Give me a second to catch my breath.\" \n\nShe closed her eyes while I gently stroked her body. When she had recovered, she raised her head and looked at me intently. \n\n\"Jake, you've unleashed something very powerful in me.\" \n\nI gave her a quizzical look. \n\n\"Yes, you did. Something very sensuous. But there are consequences,\" she smiled. \n\n\"Like what?\" \n\n\"Like, I'm going to be in charge now. You've done all the 'driving' so far. It's my turn.\" \n\nKelly got up on her knees and looked down at me. I could see her bare pussy. It was swollen and glistening from my cunnilingus. She saw me eyeing her there and began to run her fingers over her labia. \n\n\"I'm still really wet. And look at you!\" She was right\u2014my cock had been oozing and dripping precum everywhere. She laughed. \"I guess that's how nature intended it to work.\" \n\nKelly gave me a provocative look. \"Have you ever gotten a full body massage?\" \n\n\"Just once.\" \n\n\"Sounds like you didn't like it.\" \n\n\"Oh, I liked it just fine. But they're expensive. It's something I didn't want to get addicted to. And I never really resolved my issues of male masseur versus female masseuse.\" \n\n\"What were your 'female' issues?\" \n\n\"The usual: how do you not think about sex while a woman's hands are roaming all over your body? Even though they're not quite going into your erogenous zones. I'm sure they encounter boners all the time, but I could never get fully comfortable while worrying about that.\" \n\n\"You wouldn't feel uncomfortable if I was touching you, right?\" she asked innocently. \n\n\"Are you kidding? I'm already as hard as this bedpost just from talking about it.\" The thought of submitting to her control gave me a nice tingling between my legs. \n\n\"Well, you're in luck. I took a massage class last month. I thought it would be a good life skill to have. But since then I haven't had a chance to practice my technique outside the classroom. To be honest, I've been waiting to find someone who deserved that kind of special attention from me. Would you like to be my first?\" \n\n\"Kelly, I would love to. I'll bet you're extremely talented, even if you're just starting out.\" \n\n\"And ... I did some additional research on my own. To learn some special things to do if the situation was ... less platonic. Like it is now.\" Her hand roamed near my waist. \"You seem like a man who could appreciate my taking the time to ... heighten all your senses ... not cutting right to the chase, so to speak.\" \n\nThe thought of Kelly's hands all over my body\u2014everywhere\u2014was making me lightheaded. \n\n\"Jake, this could trigger some intense sexual feelings on my part as well. I'm glad I'm with someone I can trust.\" She leaned over and kissed me. Her tongue slipped all around my own. \n\n\"Can you finish undressing me?\" \n\nI sat up and Kelly turned her back to me so I could unhook her bra. I pushed the straps down off her shoulders and let it fall. She let out a big sigh. \n\nKelly leaned back and swung her legs around. She presented one foot to me so I could remove her shoe. I took my time, stroking and caressing her calf and ankle before I undid the strap. I kissed her toes and gently sucked on them. She had a dreamy look in her eyes. I did the same for her other foot. \n\n\"Mmmm ... there you go again ... you're still doing the touching. Remember, it's my turn?\" She didn't seem all that upset about it. \n\nKelly sat up, put her arm around my shoulder, and whispered in my ear. \"Do you have any massage oil? I can use baby oil if you don't.\" Her other hand was already moving seductively over my legs. \n\n\"Actually, I do. I got some as a gag gift last year. I've never even tried it. Do you want me to get it?\" \n\n\"Yes, and bring some towels. One big one and some smaller ones.\" \n\nI returned to the bedroom with the massage oil and towels. It was still dim. The blinds were closed, and the sun hadn't risen on that side of the house yet. The Sunday morning quiet blanketed the neighborhood. Kelly instructed me to spread out the large towel on the bed and lie face down. I grabbed a pillow so my head could rest comfortably. \n\nShe read the label then opened the bottle and took a whiff. \"Mmm ... sandalwood, frankincense, and sweet almond. This will be perfect.\" \n\nKelly steadied her hands on my lower back and swung her leg over me. I could feel the wetness of her pussy when it brushed against my ass. As she straddled me, I heard her squirt some oil into her hand and felt her spread it on my shoulders. The whole experience was breathtaking: her touch, the scent of the oil, the feel of her bare legs wrapped around my waist, her soft moans. And we were just getting started. \n\nKelly rubbed the oil into my neck and shoulders then moved to my upper arms and back. After I was sufficiently slick, she began to knead my muscles more firmly. Her technique was quite proficient despite her beginner's status. \n\nI felt her breasts press against my back when she leaned over to whisper in my ear. \n\n\"So how am I doing so far?\" \n\n\"Like you've been at this for years. You're really good.\" \n\n\"Thanks, Jake. Actually, I meant to compliment you on your technique last night. The way you massaged all that tension out of my neck and back. That really started me on the road to recovery ... and look where we ended up.\" \n\nYes, indeed\u2014look where we ended up. The full implications of what had happened the night before still eluded me. And here we were headed down yet another uncharted path of intimacy. I was quite comfortable letting her be in control. I trusted her completely. \n\nKelly pulled back and moved away from me, positioning herself down toward the end of the bed. Her soft hands rubbed oil into my calves, then my feet. The way she manipulated the muscles in those areas\u2014I never knew you could feel such unique sensations. I groaned with pleasure. \n\n\"That's good, Jake. Let me know how much you like this.\" \n\n\"Oh, Kelly, you learned your lessons well.\" \n\nAfter she was finished down at my feet, she inched back toward me, pushing my legs open with her knees as she repositioned herself. Her slippery hands kneaded the backs of my thighs\u2014it felt wonderful. \n\nThen her fingers began caressing the inside of my thighs. When she started to drift over near my ass cheeks, a lusty sigh escaped my lips. \n\n\"Jake, this is getting into the extracurricular material that I was telling you about\u2014the stuff that wasn't taught in the class. Are you ready?\" \n\n\"Absolutely, Kelly. I am literally in your hands.\" \n\nI felt a stream of oil drip down onto my ass. I gasped involuntarily. As she spread it in thoroughly, an intense anticipation built when her fingers moved closer to my sensitive areas. I began to moan. \n\n\"You like that, Jake. You like my touching you there?\" \n\n\"Oh, yes, Kelly. Oh, my god.\" \n\nHer thumb and fingers on one hand slipped up and down my ass, gradually opening up my cheeks, exposing myself to her. I felt her other hand move down between my legs and massage behind my balls. I moaned loudly as her fingers found my perineum and sent jolts of pleasure up inside me. \n\n\"Jake, doing this to you is really turning me on. I hope you like it.\" \n\n\"Kelly, I've never had anyone touch me like that. Oh ... it's so intense.\" \n\nI writhed in pleasure as she stroked the root of my penis. Then I felt an oily fingertip from her other hand gently graze my anus. I couldn't believe how bold she was. I cried out her name. \n\n\"Oh, Jake. Being able to touch you everywhere is such a turn-on.\" \n\nKelly continued to stimulate me with her hands and fingers. I could hear her breathing getting more excited. The experience was quite overwhelming. \n\n\"OK, I want you to turn over on your back. You can prop yourself up a bit if you'd like to watch.\" \n\nI didn't need to be asked twice. She kneeled between my legs and spread more oil on her hands, but she ignored my erection\u2014at first. Her routine was similar to the way she had massaged my back: slowly rubbing in the oil, then the serious muscle kneading. She worked my chest, my sides, my hips and thighs, and all the way down my legs. I was moaning contentedly\u2014and so was she. \n\nShe was done, at least with the classroom techniques. Kelly spread more oil on her hands and massaged between my legs. We looked at each other, knowing things were going to heat up quickly. She started to gently rub her hands on my cock. It was the first time she had touched me there. \n\n\"Oh, Kelly, that feels amazing.\" \n\nShe smiled. \"I want to make you feel good, Jake. Let me know if I'm doing anything wrong.\" \n\nI couldn't imagine that happening, but I understood that we needed to work together\u2014as a couple. She had learned some general ideas of how to touch a man. I needed to show her how to touch me. \n\nShe stroked my cock very slowly, letting the oil glide all over my shaft and head. I was in heaven. \n\n\"Kelly, you can massage my balls, too. You won't hurt me.\" \n\n\"Are you sure? I want to be careful.\" \n\n\"It's fine. They can stand a lot more handling than you'd think.\" \n\nShe gently cupped my balls with her fingers and started to fondle them. \n\n\"Is this OK?\" \n\n\"Beautiful. You can pull on them and stretch my scrotum, too, while you do that.\" \n\nShe had a very deft touch as she caressed me. I let her know when she found the spots that felt particularly nice. Kelly seemed to be getting as turned on as I was. \n\n\"Grasp my shaft with your hand. Now squeeze it. Yes ... a little harder ... good. Now stroke me very slowly upward.\" \n\nI knew a heavy flow of precum would ooze out. She gasped when she saw it. \n\n\"Oh, my god ... you're so wet!\" \n\n\"Run your fingertip through it.\" \n\nShe took one finger and teased my cockhead. Kelly added another finger, then her thumb. She began to smear it all over my glans, massaging it slowly. I let out a loud groan. \n\n\"Oh, Kelly\u2014oh, honey! You are so good!\" \n\nTogether we worked out several other moves. She used both hands to stroke me, and I showed her how to put her thumbs side by side underneath so they would rub my frenulum. I warned her I couldn't take too much of that without coming. \n\n\"Thanks. I may need to remember that for later.\" \n\nShe rubbed some more oil in her hands. I showed her how to pull down on my cock and grasp it at the base so that the skin on the shaft was taut and sensitive. \n\n\"OK, bunch the fingers of your other hand together and grasp my cockhead from the top. Then slide all your fingers and your thumb down my shaft. Oooh, yes! See how your palm rubs against my glans when you stroke me like that. Use a twisting motion as you stroke me, up and down. Oh, Kelly, that's it.\" \n\n\"You like that, don't you, Jake? God, it's so sexy touching you like this. I can feel the heat from your cock in my hand. This is making me so wet!\" \n\nWe were very open with each other\u2014so at ease with our sexual communication. This wasn't about jerking me off quickly. She really wanted to please me and learn how to slowly bring my arousal up to its peak. I yearned to do the same for her, but she was the mistress for now. \n\n\"Jake, have you ever had the 'infinite vagina' stroke?\" \n\n\"Kelly, I've even never heard of it. Could you demonstrate?\" \n\n\"I've only read about it. This will be my first attempt. I'm going to make a tight circle with my finger and thumb ... like this ... like I'm signaling 'OK' ... with both hands. And then I bring the circle on one hand down slowly ...\" \n\nI watched her slip her \"circle\" down on my cockhead and slide it all the way to the base. She gripped me firmly, but just enough to let my cock slide through, and let go when she hit bottom. Then she used her other hand the same way. And she kept it going ... left hand, then right hand ... over and over. \n\n\"How does that feel?\" \n\n\"Like I'm sliding into your pussy ... but it never stops.\" \n\nShe was really making me squirm now. It was like an infinite vagina. I couldn't get the satisfaction of the reverse strokes that were intentionally omitted. It was an incredible tease. \n\n\"Kelly, my god, what are you doing to me? Oh, Kelly!\" \n\n\"Does that feel good?\" she smiled. \"I guess I'm doing it right?\" \n\nAs she watched me struggle, she switched to a different two-handed stroke, this time with her palms pressed together with my cock in the middle. Her fingers pointed toward me as they slipped up and down my shaft\u2014it almost looked like she was praying. It felt really nice. ",
        "\"You like this? I'm just improvising now.\" \n\n\"Kelly, you are the best. I can't believe how good you're making me feel.\" \n\nShe had a good sense of when to shift to another stroking pattern. Most women I had been with just settled on one thing and went on autopilot. Not Kelly. She teased me with lots of cockhead play and more frenulum rubbing with her thumb while she massaged my perineum again. Whatever book or website she learned this from should be on everyone's list. \n\nHer intensity seemed to build as I grew more aroused. I could see it in her face\u2014her expression changed as she drank in the raw, sexual power she had over me. \n\n\"Jake, I just love touching you like this. It gets me so hot. Watching you writhe and hearing you call my name.\" \n\nI had never felt anything like the way she was handling me. \n\n\"Jake, will you let me have a little fun, too?\" \n\n\"Absolutely. You're in charge.\" \n\nKelly moved up and leaned over me. Her breasts seemed even larger as they hung down seductively, right above my face. \n\n\"You think my breasts are sexy, don't you? I want you to play with them. Make me a little crazy now.\" \n\nI let my hands slide over them. I caressed the sides, underneath, and then on top. I stroked her cleavage, carefully avoiding her nipples. Kelly was moaning and swaying. She still had her hands between her legs, slowly stroking my cock. I let my thumbs massage her areolas, staying away from her nipples. \n\n\"Oh, god, Jake\u2014you're so bad. You know I want you to grab my nipples and pinch them.\" \n\nEnergized by her arousal, I ran the backs of my fingers roughly over her nipples, rubbing and tweaking them. \n\n\"Oh, that's good. Oh, yes. Ahhh ...\" \n\nI loved playing with her breasts as much as she enjoyed being touched there. I brought one nipple to my lips and sucked on it. I wasn't gentle. \n\n\"Yessssss!\" she hissed. \"Ahhh! Oh, god!\" \n\nKelly's cries of pleasure were becoming more frequent. I switched to her other breast and started to nibble and suck. \n\n\"Fuck! ... Jake! ... Fuck!\" \n\nHer breasts were soft and loose enough for me to push them together and almost get both nipples in my mouth. I raked my teeth across them as I sucked and licked her. \n\n\"Oh, oh, oh ... Jake ... Jake ... keep it up ... a little more ...oh, shit!\" \n\nKelly released my cock and quickly grabbed my shoulders to steady herself as she dropped her pussy down and started to grind away on my shaft. She let out a loud gasp as I kept sucking on both nipples. Her body shook and twitched. Had she come just from nipple stimulation? It sure seemed like it. \n\n\"Jake, I can't believe you just got me off like that. Oh, my god!\" Kelly paused to catch her breath. \"I've always been very sensitive to breast foreplay, but I never knew it could make me come. Damn!\" \n\nI loved the look on Kelly's face right after her orgasm\u2014wild, raw contentment. This was already heading into \"best fuck ever\" territory, and I hadn't even come yet. \n\n\"Whew! That was an unexpected treat,\" she said, slowly regaining her composure. \"Now, where were we? Right, I was giving you a massage. Let's get back to that.\" \n\nWith a playful smile Kelly sat back and grabbed the massage oil. She tipped the bottle up and let it dribble onto her breasts. She rubbed it in sensuously\u2014all around, tweaking her nipples, letting her boobs get slippery. They slid through her hands, swaying and bouncing. I felt like I could have come spontaneously myself just by watching her do that. \n\nKelly rubbed the oil on the top of her legs and her stomach. I was transfixed watching her. She leaned over so that her boobs were touching my thighs. She looked at me as she moved her body back and forth, her breasts sliding on both sides of my cock. \n\nI could feel our individual passions playing off one another. We were reinforcing each other's lust. It was a heady, wanton feeling. A whole new level of sexual excitement overtook me. \n\nKelly took my cock in her hand and pressed it to her breasts as they slid back and forth. She stroked my cock and rubbed it on her nipples and buried it in her cleavage. \n\n\"Jake, I'm so glad you didn't give up on me last night when I said I was too tired. You knew just what I needed. I'll never forget it.\" \n\nOne compliment deserves another, I thought. \n\n\"Kelly, you have the sweetest pussy. Last night, it was like heaven being inside of you. And ... it was like heaven when you let me taste you this morning.\" \n\nA wave of lust washed over her features when I said that. She shifted up on the bed so that she was straddling me. Kelly lowered herself, pressing her pussy against my erection. \n\n\"Jake, I'm going to tease myself with your cock before I put it inside me. Let me know if it's too much.\" \n\nShe caressed my chest as she started a slow back and forth grind. I embraced her sexual excitement as she rubbed her lips on my shaft. The sensation of her wet labia sliding and teasing my penis was sublime. \n\nKelly took it up a notch when she reached between her legs and started fondling my cock and playing with the head while she continued to move her pussy back and forth on my hardness. \n\n\"I just can't keep my hands off you, Jake. I know that must feel good ... I like watching you get hot for me when I touch you.\" \n\nThen she started pressing my length directly on her labia as she moved her pussy back and forth. I was groaning loudly. \n\n\"Kelly ... you are so good ... rubbing my shaft against your pussy ... I love feeling your hands all over my cock.\" \n\nI was in a very precious place emotionally. It wasn't merely the sexual electricity from her exquisite manipulations. It was also that delicious feeling where time stops and you see and feel nothing but the beautiful creature inches away from you\u2014knowing you're moments from the deeply primal sensation of sliding into her vagina. \n\nI cried out as she began slipping my cockhead all over her wet lips, stimulating her pussy directly with it. The sensations were magnificent. \n\nKelly's face was right over me, her breasts swaying gently, her hand stroking my cock, rubbing it on her pussy. What an incredible tease! Stroking ... rubbing ... sliding her body back and forth. I felt a powerful mixture of affection and lust as she looked down at me. \n\n\"Jake, I want to go all the way. I want you to mate with me. Make me feel like a woman.\" \n\nI was expecting her to say something like \"fuck me now,\" but her quaint phrasing was, in a way, more intimate. I slipped inside her easily. It was a special moment. \n\nKelly put her hands on my shoulders and let her boobs flatten against my chest. I loved feeling her weight on me. I remained still as she found her ideal position and started a gentle rocking motion. I matched her movements while we kissed and caressed each other. Her hair was so sexy as it grazed my face. She lifted herself up slightly so she could slide her slippery body against mine. Our faces were very close as she looked into my eyes. She seemed overtaken by it all, moaning and sighing\u2014like she was in a trance. \n\n\"Jake, this is so good ... I always knew it could be like this ... it's so nice ... really beautiful ... I've got you touching me inside right where I want it ... where I need it ... oh, Jake, sweet baby ... make love to me ... make love to me ...\" \n\nI thought things couldn't get any more profound than our completely unexpected coitus the night before, but I was wrong. Her total openness and bliss touched me deeply. I had all but forgotten I was in bed with a woman so many years younger\u2014that's how serious this was. \n\nLet me be absolutely clear about one thing. I was not thinking about Trudy while I was screwing Kelly\u2014not at all. She couldn't help but remind me of her mother, and she always would. But Kelly was completely her own woman. That started the moment she knelt down by the sofa the night before and laid her head on my chest. She was a unique person, on top of me right then, fucking me, making me want her much more than I should. \n\nKelly gradually increased her speed\u2014she was moaning and gasping. I felt those same pre-orgasmic feelings in her pussy as the last time. Then the dam broke. She let out an ecstatic cry as a powerful orgasm ripped through her. Like before, it invigorated me in ways I can't explain. It seemed like she melted into me. \n\nShe moaned softly as the contractions eventually subsided. Kelly held me even tighter. It was awhile before she could speak. \n\n\"Oh, Jake ... Jake ... what you do to me! I've never had orgasms like that\u2014and more than one. Talk about getting addicted!\" \n\nShe was still breathing heavily as she lifted her head up. \n\n\"You haven't come yet, have you?\" \n\n\"No. Not yet.\" \n\n\"I must compliment you\u2014you have amazing staying power. Typically, it's over long before now. I wasn't aware this could go past a few minutes.\" \n\n\"Sounds like you've been dating the wrong guys.\" \n\nKelly shook her head. \"You can't imagine how right you are about that,\" she said wistfully. \n\nShe parted her lips and fixed her blue eyes on me. \n\n\"Jake, let me finish you off. That would really make it perfect for me. Do you want to come on my body again? That was a first for me last night\u2014it was incredibly sexy. Is it weird to like that?\" \n\n\"Absolutely not. You said it made you feel powerful.\" \n\n\"Yes ... it did,\" she said, shuddering at the memory. \n\n\"Why don't you sit on the edge of the bed, and I'll stand in front of you while you finish the massage?\" \n\n\"Excellent idea. I don't want you to say I can't complete an assignment.\" \n\nWe assumed our positions at the side of the bed. Instead of jumping right into some stroking, she started by rubbing my cock all over her slippery breasts. Feeling her nipples tease my frenulum was particularly nice. She had an uncanny way of knowing how to get me even hotter. \n\nKelly got a mischievous look on her face as she manipulated my cock. \n\n\"Jake, maybe there's something wrong with me. Am I not sexy enough for you to come after the first two minutes?\" \n\n\"Kelly, that's not fair,\" I gasped. \"I wanted to wait until you were completely satisfied. That's what a gentleman does.\" \n\nShe smiled. \"Is that so? Then allow me to be the perfect lady.\" \n\nKelly dipped her head down and took my cock into her mouth for the first time. I can't even describe how wonderful it felt. She was very eager to please, adding lots of saliva in the process. She had a wild look on her face when she finished. \n\n\"Now I don't want any more holding back, babe. It's time for you to show me how much you liked my massage.\" \n\nI started groaning as I realized how close she had me to coming. \n\n\"How do you want me to do you? Two hands?\" \n\n\"Yes. Put your thumbs together like you did before.\" \n\nI felt her thumbs rubbing against my frenulum as she stroked me. I opted for one final lesson. \n\n\"Here, let me show you a variation. Take your fingers and put them at the end of my cock. Keep your thumbs on the underside ... and fingertips on top ... good. Now slide them back and forth over my cockhead.\" \n\n\"Like this?\" \n\n\"Loosen your fingertips a little. Oh, yeah. Just like that.\" Boy, she was a quick study. \n\nKelly leaned down again and let her tongue swirl all around my glans as she added more saliva. She even kept the same fingertips and thumbs stroking technique while she sucked me. The combination caused my orgasm to rush ahead much sooner than I thought it would. \n\n\"Oh, that's it. I'm going to come all over you.\" \n\nShe raised her head back up and gave me some encouragement. \n\n\"You like how I suck you ... and stroke you? Show me how sexy you think I am. Shoot it all over me, sweetie.\" \n\nI realized that I had been in a state of arousal for almost an hour. My load was going to be heavy. It started flowing out before the actual contractions started. \n\n\"Oh, god, Jake. It's so hot! You're pouring out on my boobs. Ooooh, baby!\" \n\nAnd then the official ejaculation started. \n\n\"Kelly, I'm coming on you now. Oh, Kelly, Kelly ...\" \n\nI shot out so hard that I heard it splatter against her chest. She looked up, surprised at its force. More strong blasts followed. \n\n\"Jake! ... Jake! ... oh, my god! ... Jake! ... oh, honey!\" \n\nMan, she was crazy good at this! I couldn't do much more than shout her name out, again and again, as she coaxed thick bursts of semen from my cock. I ran my fingers through her hair while her hands sent massive surges of pleasure all through me. \n\nKelly watched as my load splashed all over her breasts, dribbling down onto her thighs. She was moaning loudly. Then I saw one hand wander down to her pussy. \n\nShe turned her head away. \"I can't help it. You're making me want to ...\" Her voice was weak and apologetic. \n\nKelly was still jerking me with one hand as the last spurts left my cock. I wanted to let her know it was OK for her to take care of herself. \n\n\"Yes, Kelly. I want to see you come for me. That's so sexy. Watching you finger yourself. Let it out. Let me see you come again.\" \n\nShe seemed totally surprised by her lack of inhibition as she frantically rubbed her clit. \n\n\"Jake, I'm ... I'm sorry ... I can't stop ... I'm so close ... oh, shit!\" \n\nKelly grabbed my hand to steady herself. She leaned back and let the orgasm take over her body. \n\n\"Oh, my god ... oh ...oh, Jake! Mmmh ... oh, baby! That's ... so ... good!\" \n\nWhen she finally calmed down, she looked embarrassed. \n\n\"Ahhh, I can't believe I did myself in front of you. I've never\u2014\" \n\n\"Kelly, Kelly ... it's OK ... don't feel bad. That was really hot! It's nothing to be embarrassed by. I'm glad you were spontaneous. You should always feel free to touch yourself. I'm not threatened by it. I want you to do whatever you want while we're in bed together.\" \n\n\"You really mean it? You aren't pissed at me?\" \n\nI sat down next to her on the bed and stroked her hair. \"No, really, it's quite OK. You can touch yourself any time you want. Even while I'm fucking you. You never have to feel guilty about it. I love watching you do it.\" \n\n\"You do?\" She let out a big sigh. \"That's such a relief. You really are a gentleman.\" \n\nI leaned over and kissed her. She finally let herself relax. Whoever the clod was who originally yelled at her for doing that certainly had no business being in her bed. He wasn't even worthy enough to tie her hair ribbons, much less screw her. \n\n\"That's the first time I've gotten myself off in front of anybody. You certainly have an effect on me.\" \n\nShe looked down on the floor at what she had on earlier. \"And I'm damn sure that's the first time I've been eaten out with my shoes on and my boobs hanging out of my bra. You really bring out the dirty girl in me, don't you?\" \n\nKelly gathered up her bra and shoes and put them back in her bag even though they were items she had on at Trackers. She decided they had been properly \"exorcised\" by wearing them in bed with me. \n\nWe hopped in the shower together. It was supposed to be quick, but we took turns slowly soaping and rinsing and holding each other. There was something magical about our time in bed together that morning: the emotional intimacy, the raw lust, our complete surrender. And the sheer pleasure of discovering each other's bodies\u2014and souls\u2014without the cloud of the prior evening hanging over us. We both wanted to hold onto those sensations for as long as we could. \n\nAfter we dried off, I'm sure Kelly and I felt a little nutty as we watched each other putting on our clothes from the night before. I doubt if either of us could have remotely imagined where things would have ended up when we originally selected those outfits. It was time to head over to a popular neighborhood coffee shop for breakfast. \n\n* * * \n\nThere was a line to get in already, but it wasn't too bad. Kelly said she wanted to see a few classic L.A. tourist destinations afterward. We had plenty of time before her flight later that evening. \n\nShe was most excited about visiting Venice Beach and the Santa Monica Pier. Personally, I never get tired of going there\u2014the amusement park, the boardwalk, the ocean\u2014it never disappoints. Then I saw some people I knew walking out of the restaurant. \n\n\"Kelly, that couple that just came out? They're friends of mine. I'll introduce you. \n\n\"Mike went to school with me, and we worked together at the same company for several years. His wife Nancy is an attorney at a talent agency. They used to live over here near me, but they moved to the Westside last year. I guess they missed the Sunday morning breakfasts here. \n\n\"Mike. Nancy. Over here!\" \n\nThey walked up, and Mike shook my hand and gave me a punch on the shoulder. \n\n\"Jake ... good to see you. Where have you been? You don't come down to the beach anymore?\" \n\nI got a polite partial hug from Nancy along with a dainty kiss on the cheek. \n\nMike saw the way we were dressed. \"Well, looks like you two just made it over here from a long night of after-hours clubbing,\" he teased. \n\nI put my arm around Kelly and gave her a squeeze; she did the same. No point in hiding anything from them, but I wasn't sure Kelly wanted to be referred to as my girlfriend. \n\n\"Guys, this is Kelly Tyler. She's a real good friend of mine from Texas. I've known her and her family for years.\" Yes, the truth can be told in many ways. \n\nHandshakes and \"nice to meet you's\" followed. \n\n\"Your first time here in L.A.?\" Mike asked. \n\n\"Yes, I've wanted to come visit for some time now. I finally made it.\" \n\nNancy offered a compliment. \"That's an amazing dress you have on, Kelly. I want to know where you got it. A lucky thrift shop discovery or is it new?\" \n\n\"No, it's from the back of my grandmother's closet. It was a lucky discovery before it got to the thrift shop.\" \n\nI watched Nancy warily. She was known for her undiplomatic personality. Usually I get a laugh out of it, but I also knew she wasn't a big fan of young women dating older men. I didn't want her asking if I used to be Kelly's babysitter. I tried to head that off. \n\n\"Unfortunately Kelly has to leave tonight. Her second year at Tulane Law School is calling.\" \n\nThat got Nancy's attention. The next thing I knew, she and Kelly were off and running\u2014discussing everything from Creole cuisine to Louisiana's Napoleonic law. \n\nEventually we heard our name being called so we said our goodbyes. Nancy gave Kelly one of her business cards and said she could call her anytime for career advice, particularly if she liked L.A. enough to consider relocating. Kelly thanked her graciously. \n\nWell, the encounter went more smoothly than I thought it might. I had to hand it to Kelly; she did have a very amiable personality, like her mother. And she was very much at ease with herself\u2014now that the Friday night problems had been dealt with. She made it seem like our going to Sunday breakfast in our Saturday night clothes was the most natural thing in the world. \n\nI realized that was the first time I'd seen the real Kelly in a normal social setting, interacting with me and other people. Not the aloof Kat from the picnic, or the email pen pal of few words, or the \"Kelly in peril\" from the night before. I let myself start thinking about what might be in store for us in the future\u2014even though that was dangerous. \n\nAfter breakfast we worked our way over to the Griffith Park Observatory and the La Brea Tar Pits. By the afternoon we were enjoying the view from the Santa Monica Pier. The breeze was blowing Kelly's skirt all around; she had mostly given up on trying to hold it down. We were both watching the waves when she spoke. \n\n\"This time yesterday I was nervously dialing your number from Ren's place. A lot has happened in twenty-four hours, don't you think?\" \n\n\"Kelly, I still think I'm in that dream I had last night. I'm not sure any of this is really happening.\" \n\n\"Oh, it's happening alright. In real time ... as we speak.\" ",
        "She gave me a little nudge as she continued to look out over the ocean. \"Hmm ... so I'm your 'real good friend' from Texas?\" \n\nYes, what was Kelly to me? Normally I'm cautious and reserved about these matters, but that day I spoke from the heart. \n\n\"Kelly ... the woman I was with last night ... and the woman I was in bed with this morning ... and the woman I'm standing next to now\u2014the term 'girlfriend' doesn't begin to do justice to the feelings I have for her.\" \n\nKelly turned and looked at me. I meant every word, and I could tell by her expression she knew that. Our thoughts hung silently for a second then she threw her arms around me. We held each other tightly. I could feel her body quiver with emotion. \n\nI don't know how long we held our embrace on the pier that afternoon\u2014I couldn't tell you. It was a long time, but it wasn't long enough. \n\nKelly eventually brought some reality back into the picture. \"Let's get this thing with Ren over with. She may not even be there, which is OK, too.\" \n\n* * * \n\nIt wasn't long before we pulled into Ren's apartment complex. It was a bit seedy: ominous gang graffiti, peeling paint, overflowing trash cans, wet laundry draped over the railings. Sheriff's deputies were questioning an obviously intoxicated woman while the roar of jets from LAX intermittently drowned out the numerous hateful voices echoing in the courtyard. We walked up to her door and knocked. \n\n\"You don't have to come in. Just wait out here,\" Kelly said, adding sarcastically \"Unless you hear me screaming.\" \n\nA woman opened the door. \n\n\"Oh, Kelly, I wondered where you were.\" \n\n\"Ren, I just need to grab my suitcase.\" \n\nI stepped up to the screen door so I could monitor the situation. Ren definitely looked years older than Kelly. A male voice inside asked, \"Is that your dad out there? Why doesn't he come in?\" Thanks, pal. \n\nMy anxiety ebbed when I saw Kelly quickly heading back with her suitcase. \n\n\"Hey, why don't you guys hang out here until your plane leaves?\" Ren offered. \n\nKelly actually managed a \"no thanks\" as she shut the door behind her. \"I got it. Let's go.\" We both sighed with relief as we drove away. \n\n\"Can we try and find the Starbucks I walked to? If that girl who helped me yesterday is there, I want to thank her and let her know I'm OK. I'd give her some money for her cabbie friend if I had any.\" \n\nWe got lucky and found it without too much trouble, considering the erratic route Kelly had taken on foot. Before she could get out of the car, I stopped her. \"Kelly, this is a good time to talk about your expenses for the rest of the trip.\" I reached for my wallet. \n\n\"No, Jake. I'd be embarrassed to take money from you.\" \n\n\"You won't be. This is the college graduation gift I didn't get for you last year.\" \n\n\"But I never even told you about it.\" \n\n\"Yes, but now I know. So congratulations, Kelly, I know you worked hard for that degree.\" I pulled out some cash to give her\u2014more than I would have spent on a gift. \n\n\"A graduation gift? Jake, that was clever. You've definitely earned a handwritten thank-you note.\" She leaned over. \"Delivered personally, if I can swing it.\" She punctuated the promise with a wet swirl of her tongue in my ear. \n\nKelly walked up to the Starbucks\u2014still wearing her green dress and pumps from the day before. They'd certainly recognize her if any of the same people were working there. I could see her inside getting a hug from a female employee, presumably the barista who had helped her. It looked like she was telling a summary version of what had happened. I saw her gesture towards me as I sat in the car. Kelly took out some money to give to the barista. More hugs ensued. \n\nOne thing I had to give Kelly maximum credit for: she hadn't made a single reference to my being too old for her or robbing the cradle or any other teasing like that. Nothing at all. I still couldn't believe it hadn't come up yet. I tried not to think too hard about her daddy issues: biological father bails out on day one; kindly, understanding stepfather croaks on her before she's out of high school; her own admitted poor choice in men. \n\nWell, so what if I'm the daddy? Who the hell cares? I didn't. All relationships are complex and nuanced. Each person brings different things into the mix, hoping to find what they need in return. I just wanted to build on the incredible, serendipitous collision of our two lives from twenty-four hours ago ... or five years ago. Take your pick. \n\nKelly came back out and asked me to drive around back to the dumpster. \"I need to consolidate.\" \n\nI opened the back of the car so she could get to her suitcase. She took out a casual skirt, a camisole, sandals, fresh underwear, a blouse, and a few other things. It looked like the spangled black mini dress was staying in the suitcase. \n\nKelly held up a pair of intentionally ripped jeans. \"I wore these on the plane out here\u2014big mistake. They've been too tight on me for some time. I should have known better. I thought I looked way cool. They were so uncomfortable I actually considered taking them off in the plane's lavatory and wrapping a blanket around me for the rest of the flight.\" Back in the suitcase they went. She snapped it shut and put the other items in her carry-on. \n\nShe hefted the suitcase into the dumpster and jumped back in the car. I couldn't shake the image of Kelly under an airline blanket with nothing on below but her underwear. \n\n\"Now I need a place to change clothes. It could be just about anywhere.\" \n\n\"Kelly, we're actually only a few minutes from my office. You could do it there.\" \n\n\"Sounds good to me,\" she said as she slipped off her panties and replaced them with the pair from her suitcase. \n\nI saw one of the many small specialty markets that dot the Los Angeles area up ahead. I proposed that we go in and get some things and take them up to the top of the parking structure at my office and have a picnic after she changed clothes. \n\n\"There's quite a nice view from up there. And it's not too far from LAX\u2014you can even see the planes taking off over the ocean.\" \n\n\"Great plan. I wasn't looking forward to having my final meal at the airport.\" \n\nThe market had a wide selection of fresh and prepared foods. We selected some salads from their deli and grabbed some cheese, crackers, and fruit. I was picking out some sodas when Kelly put a small bottle of champagne in the basket. \"We definitely need this.\" I added some ice for the little cooler I kept in the car and some plastic cups, and we were set. \n\nA few minutes later, I pulled into the company parking structure and swiped my key card. \"It's rare that anyone comes to the office on the weekends, particularly on Sunday.\" The garage was deserted. \n\n\"Jake, we don't have to go inside to your office. Just drive up to another floor. I can change there\u2014nobody's looking.\" \n\nWe got close to the top floor and parked in a corner. Kelly hopped out and got the other clothes from her bag. \"You were right. We have the place to ourselves.\" She took off the green dress and laid it over the back seat. I felt the sweet, warm urge of sexual arousal when she undid her bra and pranced around in just her panties and pumps. \"Don't you have a camera? You're going to miss an important photo opportunity,\" she said, striking a few provocative poses. \n\n\"Sorry, it's back at the house.\" Damn\u2014talk about regrets! \n\nI actually thought about having sex with her in the car since we hadn't seen a soul around anywhere. She might have found that idea a bit crass, though. \n\n\"Too late,\" she teased as she pulled on a white camisole\u2014with nothing under it. She stepped into a light, summery skirt. \"I'm going to put on a bra and a blouse later\u2014before we get to the airport. I just want to be unrestrained for a while,\" she said, slipping on her sandals. Now I was the one that was overdressed for a Sunday picnic. \n\nWe drove up to the top floor. It was a beautiful view from there. We could see planes from LAX rising up over the ocean, one after another. I backed my SUV up to the railing so we could tailgate. \n\nKelly pulled the champagne out of the cooler and opened it herself. She poured it into the plastic cups and raised hers in a toast. \n\n\"To my first trip to L.A. and the man who saved me from it.\" \n\nWe took long sips. I returned the toast. \n\n\"To the woman who made this weekend more than memorable. A woman whom I thought I knew, but now I know so much better.\" \n\nAs we ate our picnic food, we had long talks about anything and everything. I felt completely at ease with her\u2014like we had been close for years. \n\n\"I've still have a lot of work ahead of me at school. But I've got much better study habits now. No more uppers to get through the semester. I swear!\" \n\nI tried to tamp down my prejudice against lawyers. There are ones who help people, and there are ones that cause trouble. Kelly was a smart, compassionate woman. She seemed likely to end up in that first group. \n\nWe ate quietly for a while, taking in the feel of a perfect Los Angeles day. She took my hand and squeezed it. The look she gave me sent all sorts of pleasurable thoughts spinning around in my head. \n\n\"Jake, I hope we've evolved to the point where you can think of me as an individual, someone other than just Trudy's daughter or Kat from five years ago.\" \n\nI assured her that was true\u2014more than she could know. She could have easily added \"or a piece of young tail that you never thought you'd be getting at your age,\" but she didn't\u2014that wouldn't have been like her. I wondered what kind of future we had together, if any. \n\nKelly clicked my cup again. \"To happy endings. Speaking of which ...\" She leaned into me, caressing the back of my neck and whispering in my ear, \"Would you think I'm being too forward if I wanted to move to the back seat so you can give me one more for the road?\" \n\nTalk about being blindsided! \n\n\"Absolutely not. Please forgive me for being too timid to suggest it first.\" \n\nShe laughed and finished her champagne. I couldn't believe she just asked me to fuck her again\u2014and in the car! We got out and checked our surroundings and looked at the tinted rear windows. \n\n\"What do you think, Kelly? Can we leave the back open?\" \n\n\"That would be wicked. I could look out at the ocean while I'm on top of you.\" \n\nIt was a little risky since we could be seen through the windshield, but we wouldn't be exposing a lot of skin. Plus there had been no one else in the structure while we had been there. \n\nI opened one of the rear doors. \n\n\"After you, m'lady.\" She took my extended hand as if I were a footman helping her into her carriage. \n\n\"You are such a gentleman, sir.\" \n\nShe sat down and quickly kicked off her sandals. I yanked the door shut and pulled down my slacks and boxers. She surprised me by taking me in her mouth immediately. I was already hard anyway\u2014ever since she said she wanted to do it one more time. Kelly gave me an enthusiastic tongue lashing with plenty of saliva. \n\nShe straightened up and climbed onto my lap. We kissed lustily as she pulled the straps of her camisole down, exposing her breasts. I had a better idea of how she liked to be touched from our two prior sessions: gently at first, then increasingly rough. She became very aroused and vocal. Her hand reached under her skirt and pulled her panties aside. \n\n\"Oh, I'm so wet already from thinking about this all afternoon.\" \n\nShe eased herself down on my cock without any hesitation and started a slow, sensuous grind in my lap\u2014recalling the moment where things reached a tipping point the night before. But this time I was already in her sweet pussy. \n\nI let Kelly find a comfortable rhythm and fell in sync with her. \n\n\"Kelly, you can look out at the ocean ... take it all in. You don't have to look at me the whole time.\" I could smell the sea breeze and hear shore birds crying out. \n\nShe gyrated smoothly in my lap, transfixed by the ocean in the distance and the planes reaching for altitude. \"Jake, this is so naughty ... fucking in the car ... in broad daylight. But I just had to have you again before I left.\" \n\nWe had both surrendered. Surrendered to the hunger we had for one final copulation before parting. Knowing it would be our last one for a while. Or maybe our very last. \n\nAs she neared her climax she looked down and stared into my eyes. \"You're going to make me come. I'm almost there, babe.\" \n\nKelly's climax shook her whole body. She tried to keep her voice down when she came but wasn't all that successful. I watched her eyes as waves of pleasure surged through her. She got even wetter. \n\nShe quieted down, and I thought we were through. I was wrong. \n\n\"Oh, Jake, that was good, but I'm going to need one more\u2014quick and dirty, OK?\" \n\nShe began to rock back and forth in my lap, and a wild look crossed her face. \n\n\"I want you to come inside me this time\u2014make it real. Give me something to take with me.\" \n\nKelly grabbed my shoulders and leaned back. Her movements became more aggressive as her second orgasm approached. \n\n\"God, Jake, I love fucking you!\" \n\nThat's what every man wants to hear, isn't it? \n\nKelly let a quick, jerky orgasm whip through her body. Hers moans were raucous. I stopped trying to delay my ejaculation. I wanted to finish right after her. \n\n\"Kelly, you feel so good, riding my cock like that. I won't be able to last much longer.\" \n\n\"Oh, Jake, don't hold back ... shoot it all up inside me ... I want you to come in my pussy.\" \n\nI was only seconds away from releasing into her. I wanted to savor the moment as long as I could. \n\n\"Kelly, you're so hot and sexy ... I can't help it ... I'm going to pour into you ... right now!\" \n\nAt that moment it almost seemed like time had slowed down and I was fucking her in slow motion\u2014like the climactic scene of a movie: our faces flushed with passion and the ecstasy of release, our moans inaudible on the soundtrack that only carried the ambient noises of the nearby ocean. \n\nMy orgasm was breathtaking. The totality of it was overwhelming: humping in the back seat of my car with the tailgate open ... her breasts exposed and bouncing around ... anyone could have seen us ... her skirt hiked up and panties pulled aside ... coming inside her for the first time\u2014it all carried an emotional wallop. I immediately felt our juices mixing together on my cock as I pumped my load into her. Since she hadn't been that quiet, I didn't hold back either. \n\n\"Oh, my god, Kelly ... your pussy feels so good ... I'm shooting my cum in you ... oh, it's so good, honey ... oh, you're the best ... the best ...\" \n\nMy sweet Kelly\u2014one more for the road, indeed. \n\nShe slowed her grinding as we caught our breath. Kelly moaned with satisfaction. \n\n\"Mmm, Jake, you really came hard, didn't you?\" \n\nShe beamed with sexual confidence. I could see that side of her start to blossom. Soon Kelly had an impish grin on her face. \n\n\"Tell me the truth. When you said hello to me at the reunion, did you think 'five years from now I'll have her bouncing on my dick in the back seat of my car'?\" \n\n\"Truthfully, I never expected to see or hear from you again\u2014ever. But I've never been so glad to be so wrong about something in my whole life.\" \n\nWe hugged and kissed some more, tenderly this time. Kelly dismounted reluctantly. \n\n\"I'd like to keep going. It would be a good excuse to miss my plane, but I'm going to show some willpower now. Pull your pants back up before I change my mind.\" \n\nKelly fell back on the seat and yanked her camisole off. I must have looked surprised. \n\n\"Remember, I promised to put a bra on?\" It was the one she took from her suitcase earlier. \"This one actually fits me better so it doesn't have the dramatic cleavage of the one I wore for you this morning.\" \n\nI'll be the judge of that, I thought. \"Kelly, your cleavage is dramatic with or without a bra. I'm taking plenty of mental pictures for later.\" \n\n\"For when you're alone at night\u2014under the covers, stroking yourself? That's so sweet!\" She thanked me with a long, sexy kiss. \n\nKelly pulled her camisole back on and slipped into a yellow blouse. \"I hope this additional layer will keep the male travelling public at bay.\" She smoothed down her thin, flowery skirt and put her sandals on. \n\nWhen we got back in the front seat, Kelly said, \"Here.\" She handed me the other panties she had on when we left the house. \"You left a little souvenir inside me, so here's a little something for you.\" \n\nNow that shows style. To show my appreciation for her gift, I inhaled her musk and perfume from the fabric. My gesture sent a ripple of arousal through her body. \n\n\"Nice, Jake. I knew you'd appreciate it.\" \n\n* * * \n\nAs we drove down to the ground floor, we both fell silent. Kelly finally spoke. \"I'm pretty sure that Mother knowing about this wouldn't be a good thing right now. What do you think?\" \n\nI nodded in agreement. \"Yes, you're right.\" I wondered: would Trudy knowing ever be a good thing? Probably not. \n\n\"Jake, I hope you can handle a moment of candor.\" \n\n\"Sure, go ahead.\" \n\n\"I can't quite picture my taking you home for Thanksgiving or Christmas. I hope you're not insulted by my saying that.\" \n\n\"No, Kelly, I'm a realist. I understand.\" \n\n\"I'm going to be really busy at school as soon as I get back. Those holidays are the only time I'm going to be free for the rest of the year.\" \n\nI asked about Mardi Gras or Jazz Fest next year. \n\n\"Oh, that's a great idea. I could take a little time off, maybe for Mardi Gras. We have finals during Jazz Fest\u2014can you believe it?\" She paused for a moment. \"Shit! That's too long to wait before we see each other.\" \n\nWe both let the reality sink in a little more. \n\n\"Jake, this may not make any sense at all, but maybe you could fly down there for a quick visit sometime. I might only be able to be with you for a few hours here and there, maybe more. Damn, we wouldn't have time to do much other than go eat and then ... find a place where we can have at it.\" \n\n\"Kelly, I would definitely come to New Orleans for that: dinner and a shag with you.\" \n\nShe laughed and squeezed my thigh. \"You'd fly half-way across the country just to have sex with me? I don't think I've ever had that effect on a man before.\" \n\nShe took a deep breath and sighed. \n\n\"I'll have a better sense once the semester starts. I really don't want to wait months before I get to be with you again. We just have to be realistic about my schedule and family obstacles.\" \n\n\"Kelly, I understand. We'll plan on Mardi Gras for sure, and we can talk about my dropping in down there for quickie visits.\" \n\n\"Jake, I'm thinking ... here's another idea, for Christmas, maybe even Thanksgiving: I could cut my visit short for a day or so. I'll say I need to get back and study. Or maybe you could come to Dallas, and I can go out for the evening to meet 'friends.' We'll have to work this out. I'm very motivated. I hope you are too.\" \n\n\"I am, Kelly\u2014incredibly motivated. It's all I can do to keep myself from buying a ticket and going with you now. But I absolutely have to be in the office tomorrow.\" Needless to say, I'd never be able to park in that garage again and not think about what just happened there. \n\nAfter I pulled into short-term parking at LAX and turned off the engine, I said something to her that I really didn't want to say\u2014but I'm sure we were both thinking about, at least subconsciously. \n\n\"Kelly, we're adults, and ... I think we know there's a possibility that one\u2014or both\u2014of our lives could change ... in ways we don't know about yet ... that will ... that will alter our plans.\" \n\nThe thought of some other guy on top of her made me nauseous with jealousy, but I'd probably need to let that go at some point. \n\n\"Yes ... I suppose it could. But don't make me think about that now, OK?\" \n\nI got out and pulled her bag from the back of the car, slamming the tailgate shut. Kelly placed her arms around me and put her head on my shoulder. ",
        "\"I just want to think about us,\" she said with a quaver in her voice. \n\n\"You're right, Kelly,\" I said as I held her to me. \"You feel so nice in my arms. I wish we could make this last forever.\" \n\n* * * \n\nSince Kelly wasn't checking any luggage, we breezed through the airport. \"It feels liberating to travel with only a carry-on. Maybe I should rethink my packing strategy for future trips.\" \n\nWe sat down at the gate and waited for her flight to be called; it was the last one to DFW that evening. Dusk would be settling over the airport soon. \n\nI felt a great wave of sadness wash over me. There was no way Kelly and I could have a relationship\u2014unless we were very lucky. And really committed to each other. The age difference would certainly rear its head at some point. And I couldn't even begin to think about dealing with Trudy. \n\nI took her hand in mine as we both got lost in our thoughts. I had fallen hard for Kelly. Really hard. It was reckless, but I couldn't help it. I didn't want her to fade into the past as some great fuck I had a few times and never saw again. But life has its unfulfilled yearnings. I would do my best to hold up my end\u2014I hoped she would, too. \n\nThey started boarding her flight. We stood up and began a passionate goodbye kiss. Thoughts of Rick and Ilsa on the tarmac at the end of the movie Casablanca filled my head. At least I was able to kiss the girl before she got on the plane. Well, actually, I got to do a lot more than that. \n\nWe held each other a long time. She put her hand on my chest and realized something was in my jacket pocket. She pulled out the queen of diamonds and smiled. \"I'll think I'll keep this\u2014so you'll know which girl at Mardi Gras you should be flirting with. It's hard to be sure when everyone's in costume.\" \n\nShe broke free of our embrace as they made the last call. \"Gotta go.\" \n\nShe hesitated, tears wetting her eyes, then leaned in for one last kiss\u2014it was a tender one. \n\n\"Jake, we're going to be together again\u2014I just know it.\" \n\n\"I do, too, Kelly. I really want that. Au revoir, ma ch\u00e8re.\" \n\nShe smiled and turned away. I watched her walk down the jetway. When they pulled the plane back, I waved. I knew she had a window seat on the side facing me. I saw her wave back and blow me a kiss. My heart felt very heavy at that moment. \n\nI turned and started the long walk back to the car\u2014a car that would still have her presence in it: lipstick on an empty champagne cup, the underwear she left behind\u2014and the smell of sex. \n\n* * * \n\nThree weeks later, after a September morning that none of us will forget, air travel in the United States would never be the same again. Our lives did change\u2014in ways we couldn't have known about then. \n\n* * * \n\nIf you've read this far, please go ahead and vote. Feel free to favorite or comment as well if you really enjoyed the story\u2014that's what encourages us authors to keep writing. Thanks! \n\nAll characters and events are fictional, and any resemblance to actual persons, living or dead, or actual events, is strictly coincidental. \n\nFor such a lengthy story, I split it up so that two volunteer editors could work on it simultaneously. The editor Sexyvibe worked on the first part (up to when Jake and Kelly get in bed together for the night), and the editor Animaris worked on the second part (after they wake up the next morning). They both got a chance to review and comment on the part that the other editor worked on."
    ],
    "authorname": "KenNicottii",
    "tags": [
        "older man",
        "younger woman",
        "romance",
        "busty",
        "massage",
        "cumshot",
        "tit fuck",
        "cunnilingus",
        "handjob",
        "car sex"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/queen-of-diamonds"
}