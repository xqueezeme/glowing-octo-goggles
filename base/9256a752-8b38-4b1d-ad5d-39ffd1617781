{
    "title": "Taming a Bitch and Beyond Ch. 02",
    "pages": [
        "The weekend was a joy ride. A sore one, but what a ride. Katie and I fucked like rabbits in heat. During breaks we'd watch porn, and discuss what was hot and what was not. She was intrigued by big cocks, and gangbangs, but would not say the later. Instead, she just communicated that it would be nice fuck several people at once. She didn't care for the strap-on scenes, but sure got off watching a beautiful face delve into a wet pussy. And for the first time ever, I got my whole hand into her pussy and she loved it.\n\nBy Sunday afternoon my cock hurt to be touched. I declared that I needed a break and had to get some work done at the office. An hour before, Katie had taken two hits of pot and was roaring for more. I bowed out, but gave her some instructions. Every five minutes she was to send me a new video or photo of her pleasuring herself. We kissed goodbye, with her trying to weasel another fucking out of me, but alas I needed a break so I promptly departed.\n\nMy mind was spinning with the realization that deep down inside my wife was a nymphomaniac. She obviously had strong control over her impulses, but I was guessing they'd be harder to control once she released some of her urges. The notion got me pumped. I was ready to see her fuck others and I think she was too. In addition, the beta testing information was also making my head spin. Katie and I hadn't discussed it since our first discussion as we'd somehow gotten distracted, but I had a plan and was ready to put it into action.\n\nI was not headed to my office. Instead, I had a few other stops. First, to a store where I purchased a few Visa and other cards with preset limits. These were all paid for with cash. Next up, was to a coffee shop that rented computer/internet access by the hour. They usually required an ID, but the clerk was satisfied when I paid in advance and let her hold onto one of my recently purchased cards. Then I purchased access to a mail service that encrypted all mail, and supposedly added data to each outgoing e-mail to make it appear as though they originated abroad from a variety of different countries. It was probably unnecessary, but better safe than sorry.\n\nNext, I started the plan in action. At home, I'd taken screen shots of my cell phone photos, and e-mailed to an account I'd set up years ago and no longer used. These were e-mailed to my secure account, stripped down, and run through a scrubbing program paid for with another of my newly acquired cards. They were now ready to be attached and e-mailed to my teammate Gloria. I drafted the following note.\n\nDear Ms. Vajwellden:\n\nThe Committee uncovered the attached \n\ne-mails and photos. They were traced to you. An investigation has been concluded into their uses. You committed a variety of crimes, have irreparably harmed the company, manipulated a variety of projects and forced Mr. Rogers to act in inscrutable ways. The Committee's task is to ameliorate these actions given the damage exposure is in the millions.\n\nThere appear to be few options. However, two options do not involve incarceration. First, you resign immediately and agree to fully reimburse the company for its losses. Given your current asset level we would require with your resignation, that you sign on to work for an affiliated company in Nigeria. Your work there will involve mining data from various worldwide businesses and will not extend beyond a five-year period.\n\nSecond, you remain an employee with the company. All communications with Mr. Rogers cease. He will be advised of your situation. In order to repay your debt, you will be required to engage in various services. These will involve one or more of the following: data interception, recruitment of targeted individuals, sexual services and/or periodic feedback to The Committee regarding the effectiveness of said services and endeavors.\n\nIf you elect neither of the above options then an electronic file will be delivered to the FBI with the attached documents and supporting background information. Security will escort you off the premises and into the custody of an awaiting FBI agent. The crimes you have committed involve multiple felonies which carry lengthy prison sentences. You have three minutes to make your decision.\n\nAs you are reading this, surveillance video is capturing your keystrokes, screen and face. If you do nothing, the FBI will shortly have you in custody. At the bottom of this note is a link to a website. Please click on it now. The password to the account is your last name, in small letters, followed by your social security number. Please access immediately. Once opened there will be a file named Crusader on the web page you have accessed. Open it, and enter either 1 or 2 for your choice of the above options. Then close the file, sign off your computer, exit your office and proceed to the lobby. Instructions will later follow.\n\nSincerely,\n\nThe Committee\n\nI had no idea what Gloria's dark secrets or fantasies consisted of, but I did know a few things about her. She despised squalor and might possibly pick U.S. incarceration over a five-year work assignment in the bowels of Nigeria. In addition, she knew she was sexy so presumably periodically scratched that itch, and being an evil sexy spy that occasionally fucked people for information or favors actually seemed to be a fairly decent match for her. So I was gaming she'd pick option two. Worst case, she did nothing, but would be shitting in her pants for a bit, and surely would never attempt to coerce Mr. Rogers again.\n\nThe encryption service I'd use to secure the e-mail accounts also came with a \"timer\" that allowed for e-mails to be sent with a predetermined delay. Gloria would receive the above e-mail at 8:20 am on Monday morning. She followed a daily routine with extreme predictability. A one-hour workout in the early morning, then showered and dressed and showed up to the office with a latte by 7:30 am. I usually arrived around 8:30, as I'd never been much of a morning person.\n\nI knew that come Monday morning if I didn't receive an e-mail from the Crusader program I'd created, before I got to the office, then the rouse was over. In theory, she could report the e-mail, but that would also mean confessing to her crimes. She wouldn't do that. I was pretty sure, that when I checked the new account it would contain a response with her reply of \"two.\" I was correct.\n\nWhen I walked into the office Monday morning, there was poor Gloria. Dressed up in a black ladies' suit, with a starched white blouse with one button too far undone in order to show off her generous cleavage and sporting a pouty face. It was unbelievable. Made me smile something fierce.\n\n\"Morning Gloria. Have a great weekend?\" I inquired acting quit chipper, but really it wasn't needed.\n\n\"Fine. I'm busy,\" she spat back then turned away from me. I continued on to my office, chatted with my co-workers and about twenty minutes later returned to the lobby.\n\n\"Hey Gloria. Just got word the owners want us to push hard on the beta refinements. We're supposed to huddle up and brain storm over a security problem, then tackle it. Are you ready, everyone's waiting?\" I asked.\n\nShe looked surprised and quite relieved so followed me back to one of our fish bowl conference rooms. Before retrieving my girl, I'd dropped a printed business card off on her chair. It simply read, \"New E-mail Address. Check at night. Same password as this morning.\"\n\nThe fishbowl huddle was fairly uneventful, except Gloria barely spoke a word and disagreed with no one. After the group split apart, I overheard a few in the group express their shock at her silence and wonder whether she was ill or if one of her parents had passed away. I was thrilled with her silence. Usually, over an hour was spent on getting consensus on the path we'd follow. Today, we reached agreement in under twenty minutes.\n\nJust before dinner, I logged on and left Gloria instructions and a small project. The commands provided:\n\nThe Committee needs you to improve your social and seductive skills. Each day report to the office without a bra for the next week. Wear only white button ups and loose hanging tops.\n\nWhen you meet individually with project teammates lean over and barely expose your breasts. Learn to capture those interested and obtain from them favors, just with your body and actions. No words. Noncompliance will result in dismissal as per our terms.\n\nThe Committee\n\nKatie arrived home about thirty minutes later as she'd elected to pick-up take out dinner. We shared a Greek salad topped with quinoa, and a quart of butternut squash soup. It easily satisfied my hunger, and afterwards felt like I could fall into a coma. I was thinking about watching some boring show and getting in a little cat nap when Katie walked up and asked, \"Do you have a second. I'd like to talk with you.\"\n\n\"Sure. What about?\" She pulled my chair away from the table then straddled my legs. Once on my lap she scooted up closer which also caused her dress to bunch up and expose her sheer panties. My sleepiness dissipated almost instantly.\n\n\"Have you thought more about our conversations this weekend?\" Katie questioned.\n\n\"It's been hard not to,\" I responded with a smile.\n\n\"I'm just worried you think, like, less of me or are turned off. Have those thoughts crossed your mind?\"\n\n\"Wait. Why would you think that? Since you've been sleeping naked I've made love with you every morning. And last night, I got so turned on watching you screw yourself with the big dildo I came in my jeans. So, no I am not turned off. Are you having second thoughts about it?\"\n\n\"Not really. I'm just worried you'll think I'm disgusting or filthy,\" Katie slowly answered.\n\n\"Kiss me,\" I countered. She did, but it was just a peck so I put both my hands through her hair and pulled her face in for something more. It didn't take long until we were in a full on make-out mode. Our tongues sliding over one another as our jaws struggled to open wider. When I felt Katie start pressing her hips into mine it was my cue.\n\nWith my right hand, I reached down and pulled her panties aside. Her position on my lap had her legs opened wide, so her pussy was perfectly positioned. Without pause, I jammed two fingers up into her folds. She was already wet, and reacted with a \"Ohhh, yes. I like that.\" I played with her pussy for a bit, building her lust.\n\n\"Are you repulsed by what you want?\" I asked while fingerfucking her and diddling her clit with my thumb.\n\n\"No. No. I just. Get worried you'll be, ahh, turned off.\" As the words trailed off she unbuckled my belt and started working on pulling my cock free.\n\n\"Do you want what we discussed or do you blame the pot?\" I asked.\n\n\"I like sex and pot, ahhh, shit, ahhh. Put another finger in me. I want it,\" Katie whispered as she grimaced in pleasure.\n\n\"My hand or all that crazy sex we talked about?\"\n\n\"Everything. I'm tired of being the goodie smart girl. I want to, ahh there, push in more. Yesss. I want to be fucking wild. I want to stop, ohh, there, there, I want to stop dreaming and actual have crazy sex.\" I pulled my fingers out of her, then raised her up and plopped her ass on our kitchen table. She'd freed my cock, and it was now aligned with her entrance. After setting her on the table, a grabbed either side of the hem of her panties and ripped them in half. Then I plunged my dick into her slit.\n\n\"Do you like that?\" I asked while pounding my cock in and out of her.\n\n\"Fuck yes. Fuck my pussy honey. Fuck it hard,\" Katie begged. Prior to this weekend, when Katie was really worked up she'd ask me to go hard and deep, but had never used the F word or talked dirty. Mental sexual walls were collapsing. She was exposing a deviant side I'd never anticipated. As I screwed her, she leaned back, supporting herself with one hand while toying with her little bald man with the other.\n\n\"Are you ready to get fucked by other people?\"\n\n\"Yessss. I feel like it's all I can think about. I'm so horny all the time. God, you cock feels good. I crave it so much. Yes, fuck me, oh there, ohhhh. I love you fucking me in the middle of the night and how afterwards you fall asleep with your cock still buried in me.\"\n\n\"Should I take you downstairs to the bar. I could spread your legs, and show everyone your pretty little pussy. Let a few ladies eat you out, and if they made you cum I'd let their boyfriends fuck you. Would you like that my love?\" I asked.\n\n\"Ohh, jesus honey. God, maybe. Don't stop fucking me, just keep fucking me please,\" Katie begged as I continued to pound into her hard. Smacking the table and every so often slamming her ass down hard onto the table.\n\n\"Would you like to be fucked like that?\" I asked again.\n\n\"Right now?\" Katie responded with a bit of surprise.\n\n\"Would you like that?\"\n\n\"Yes, but I think I'd have to be stoned,\" Katie answered quickly. \"Ohhhh, here comes one, hard harder, ohhhhh, ahh, oohhhhhh shhitttt. Her body shock rapidly as her head fell back. I'd grabbed her ass with both hands, and pulled it towards me burying myself in her velvet folds. For a bit I held still, allowing her time to decompress. I eased her ass back onto the table top then slowly began to thrust in and out again.\n\nWhen Katie raised her head back up her eyes seemed to be in a daze. \"Are you thinking about getting fucked downstairs?\" I asked.\n\n\"How did you know? Is it that obvious?\"\n\n\"I love you being this horny. It makes me want to just fuck you over and over. If one of the guys had a giant cock would you welcome it into your vagina?\" I asked as my humping began to pick up pace.\n\n\"Yes, oh yes, just if it was ok with you,\" Katie answered back between breaths. \"I like all cocks honey. Big, small and all in me. They feel so warm and hard. Each a different tool.\" I pulled one hand away from her ass and instead began to feed my fingers into her around my shaft. Katie responded by gasping heavily, and laying still as she spread her legs even further apart. Slowly, I eased three fingers and my thumb into her pussy, then began to move my hand back and forth literally stroking my cock inside her quim.\n\n\"Do you like this honey?\" I asked as I continued my movements.\n\n\"Fuck. Shit, honey. It, ohh god, it hurts a little bit, but it feels so different. Push in more. Fuck that looks hot,\" Katie squealed as her eyes feasted on my cock and hand penetrating her opening.\n\nSoon I began to hump her in earnest, while moving my fingers rapidly over my shaft. \"I just never want to stop fucking you. I want to split your pussy in half.\"\n\n\"Oh, god, ohh shit honey, here comes another one. It's going to be big.\" As Katie shouted out she grabbed my wrist and pushed it inward, while using her other hand to manipulate her clit.\n\n\"Would you like to be getting fucked right now in the bar. Honey, would you like to be getting split open and everyone watching?\" I screamed while drilling into her eyes with mine.\n\nShe stared right back, then answered, \"Yes. Yes. Cum with me. Arghhhhhhhhhh.\"\n\n\"Oh, fuck! I'm cumming too,\" I shouted back as I flooded her snatch with semen.\n\nWe laid still for a bit to recover, then moved off the table and stood holding one another. I pulled Katie into me and started kissing her fiercely. She reciprocated my affection. As we kissed I laced my fingers through her petals, then smeared the dripping semen all across her swollen clit. It didn't take long before she was humping my hand.\n\n\"Are you still horny Katie?\" I asked.\n\n\"Yesssss,\" she sighed back.\n\n\"Go get some toys in the bedroom and give yourself some relief on the couch. I want to watch again,\" I requested as I continue to fondle her and with my other hand pulling on her erect nipples.\n\n\"Ok, I'll be right back.\" She turned around, and walked away shaking her sultry ass. What a wife I had. Perfect tits, a moon of an ass and the face of an angel. And now I was realizing she loved sex and was willing to try almost anything.\n\nWhile she was gone, I took the opportunity to relieve myself in the restroom, and when I returned Katie was laying on the couch pleasuring herself. She had the pocket rocket lightly buzzing to the side of her clit, as she eased the large dildo that I'd taken to calling Big Ben closer to her vagina. \"Would you like to screw me with this?\"\n\n\"Nah, I just want to watch for a bit.\" She started to pleasure herself. It was intense. After she rode another orgasm I walked over to her and fed my limp dick into her willing mouth. She attacked it and managed to get it half way firm before I took a break as another idea entered my head. I went to our closet and returned with her pipe, and our iPad.\n\n\"Sweetie. I can't let you video me.\"\n\n\"Sure you can. And when you're not here I'll have a visual foreplay tool.\" I propped up the iPad just above the couch, and hit the record button. I handed the pipe to Katie, then held the lighter to the bowl as she took a big hit. I sat down and grabbed the recorder.\n\n\"Do you mind if I take another hit?\" Katie asked. \"It just makes my orgasms so fucking intense.\"\n\nI responded with laughter, then answered, \"Sure sweetie.\" After her second hit, Katie returned to her pleasures.\n\nThe pocket rocket obviously caused her buttons to be tweaked. She grabbed Ben and eased it deep into her pussy. Ten inches were inside her, with just the base extruding so she had something to hold onto. She rammed Ben in and out. I would film her face, her body and then take a close up of her sloshing pussy. When she began to get close to another orgasm I started asking her questions.\n\n\"Katie. Are you going to start eating pussy?\"\n\n\"Yes. Ohhh, yes.\" Her voice was just a bit slower than normal. It let me know the pot was kicking in.\n\n\"When are you going to eat your first pussy?\"\n\n\"I hope soon. Will that turn you on, watching your wife lick a hot lady's pussy until she cums?\n\n\"You know it babe. Would you like two girls?\"\n\n\"Mmm, yes, I would.\"\n\n\"Does that giant dildo feel good?\"\n\n\"Yes, oh shit, just just a minute. Ohhh ohhh. Almost there. Real cock feels better.\"\n\n\"When are you going to fuck another real cock, Katie?\"\n\n\"Whenever you want me to,\" she replied as she picked up the pace with Ben. Another orgasm was about to consume her.\n\n\"Katie would you like to fuck three men?\"\n\n\"Yes, ohh shit, yes I'll do it for you, ohhh ohhhh. Fuck. It's almost here.\"\n\n\"Would you like a cock in your ass, mouth and pussy?\"\n\n\"Ohhh, ahhhhhhhh yyessssssss. Oh. Oh! AHhhhh!\" After this orgasm, Katie just laid still for a bit. I walked up to her and sat down beside her.\n\n\"Are you still horny Katie?\"\n\n\"Yes, a little bit. Are you ready? I'll, I'll be ready soon. Just let me catch my breath.\" However, I had little patience. While still holding the recorder with one hand, I grabbed Ben with the other, nudged Katie's knee aside, and eased Ben back into my wife's twat. \"Oh shit, honey. Not yet. Ohhhh.\" Verbally Katie was protesting, however, at the same time she pushed her hips upward to assist me with fucking her.\n\nOnce she did this I knew she was ready. Without any hesitation I began to slam Ben in and out of her spread opening. She responded instantly. Twisting and turning her body, while at the same time thrusting upwards.\n\n\"Katie, how many men would you really like to fuck you tonight?\" I asked while increasing my assault on her vagina.\n\n\"Ohh, Ohhhh. Ohhhh shit. Ten, Ohhhh, I don't know. Maybe more if you wanted ooohhhh shittttttt. It's coming ... ahh what the fuck?\" Katie screamed.\n\nWithout any notice, I yanked Ben out of her pussy, shut down the iPad and grabbed my wife's hands.\n\n\"What the hell are you doing?\"\n\n\"Hurry up. Stand up. We're going downstairs to the bar,\" I instructed.\n\n\"I can't honey. I look like a mess.\"\n\n\"No, you look great. Just like you been very recently fucked. Go comb your hair, and I'll get some clothes for you. We're going to have some fun.\"",
        "\"Are you serious. Shit, I can't do this,\" Katie pleaded.\n\n\"Hurry up. Think about people seeing your pussy and maybe, just maybe, someone fucking it,\" I added before pulling her in for a quick kiss and allowing my fingers to again fondle her velvety folds. \"Go now, you've got two minutes,\" I advised before dashing in to our bedroom.\n\nI selected four items from the closet. A black leather miniskirt, that fit Katie snuggly and showed off her perfect ass. A white sheer button up, with \u00be sleeves and pockets over the breasts. The outfit was completed with black five inch pumps and a long red dress coat that hung down to her calves, just in case we needed to hide.\n\nWhen I entered the bathroom Katie had fixed her hair, and was frantically applying make-up. As she did I had her step into the mini, which I then pulled up and zipped tight. Next, I put on her blouse and buttoned up about half the buttons. The pockets somewhat hid her nipples, but up close they could be made out. Once her shoes were on she was ready, so I placed her coat on, grabbed her hand and we headed out.\n\nOnce in the elevator Katie started to panic a bit. \"This is crazy. We can't do this.\"\n\n\"We are doing it, but who knows if anything will happen. Come here my love. Again I pulled her to me, but this time I greeted her lips with an open mouth and thrust my tongue into her mouth while my fingers parted her wet box and penetrated her opening. \n\nWhen the elevator stopped she was responding well and even moaning a little. As the doors opened I pulled my fingers away and pushed down her skirt. Then I whispered to her, \"Are you horny now Katie?\"\n\n\"Yes, fucker. I'm going to get you for this. Shit, I don't even have panties or a bra on. People will be able to see everything if I'm not careful. Damn you.\"\n\n\"My love that's the point. Prepare yourself. Tonight a fantasy may be turned into reality.\" With that we marched out of the elevator and walked half a block and into a local watering hole.\n\nAlas, not all plans succeed.\n\nIt was Monday night, just a tad before 9 pm, and basically the place was empty. Not a soul at the bar, and so we wondered around the corner to an area with pool tables and additional seating. \n\nThere sat a single couple, a quick look painted a pot of boiling over drama. She was an elegant looking black lady, with long flowing hair and a thin build. In contrast, he was white, fit and at least ten years her senior. They were engaged in a serious discussion with eyes glaring at each other.\n\nI picked a table across the small room from them that had a love seat and one additional chair. Katie and I sat in the love seat, positioned so we both faced them.\n\n\"Honey, this is a bust. God, you had me freaked out,\" Katie stated.\n\n\"It's not a sure bust yet. Other people might flow in. And you have to admit it sure soaked your pussy despite generating some anxiety,\" I replied.\n\n\"So why don't we head back up to the room and you figure out some naughty way to fix my 'horniness,'\" Katie suggested as she leaned into me and placed her hand atop my jean's zipper.\n\n\"We have to have a little bit of fun here my love,\" I replied just as a waitress appeared.\n\n\"What would you two like to drink? We may not be open much past ten as you can see its pretty slow,\" our drink server asked. As she did so, I pulled up the hem of Katie's dress exposing her crotch. The waitress didn't seem to notice as instead her eyes kept tracking over to the other couple. When she glanced back to us she added, \"I think they are having an argument.\"\n\n\"It appears or so we assumed given their reverse smiles. How about a bottle of cab? Any chance you have something decent in the back?\"\n\n\"I can pull a '97 Napa from the Stags Leap district. Only have two left and it'll cost you,\" she replied.\n\n\"Perfect!\" I responded. Our waitress wondered off, cautiously eyeing the other couple and still not having noticed my handy work. I needed practice. Across from us the couple were becoming animated in their hand gestures and voices. Their disagreement seemed to be escalating.\n\nKatie leaned over to my ear and whispered, \"I'm glad we never argue like that, especially in public.\"\n\n\"Nope. We just fuck one another and others in public,\" I shot back while also winking.\n\n\"You are so bad,\" Katie replied then lifted my hand away from her loins and added, \"Drama is a big buzz kill, and now we have to finish a bottle before you can have any more of that.\"\n\n\"What about your recent promise on availability?\" I replied\n\n\"And yours on discretion?\" she countered, while raising both eyebrows and tossing out a faint smile. Just then our neighboring couple erupted.\n\nThe thin black lady shouted out, \"That will not happen. Ever!\" Her raised voice caused both of us to flinch.\n\nThe elder white man stood abruptly, shoved his chair out of the way and in a seething voice responded, \"Screw this panty ass bullshit. I need more, you just don't get it. We are done.\" He then turned around and stomped out.\n\n\"Wow,\" I whispered to Katie. \"So much for turning fantasies into reality.\"\n\n\"Drama is a sure way to wipe one free of any sexy feelings.\"\n\n\"No shit, but I'm not going to let that temper our evening. We are going to remember this as it was a big step. Come here. Now swing your legs over mine and give me a kiss.\" Katie did as I requested, but the kiss was more like a peck, so I pulled her towards me and gave her a real kiss.\n\nAs we snuggled I continued to talk. \"Katie twenty minutes ago you were so horny that you agreed to come down her and let a stranger or strangers possibly fuck you. Did you want to be taken on a bar stool, the pool table or a love seat like we are sitting in?\"\n\n\"I didn't really think about it. Just kept visualizing all these different cocks using my pussy for pleasure and each one rocking me to a new orgasm. Maybe I'd get passed around, like a bottle of wine, and be fucked on each of those,\" Katie answered, and with a glimmer in her eye. Her horniness was being retrieved.\n\n\"Part your legs a little bit and show me your pussy,\" I asked and Katie complied. \"Even in this darkness I can see its still slick. Did I mention I love when one of your tits doesn't line up with one of the pockets and I can see your nipple? It makes me want to pull it out and suck hard on it.\" I reached into her blouse and gently pulled on each of her nipples to harden them.\n\nThe waitress returned, but first spoke with the dark skinned lady and dropped off a drink. She then stopped by our table. \"Sorry, the bartender had to run out for a quick break, but I'll be back in just a minute with your bottle.\" She then hurried away, but this time she definitely noticed Katie's sheer blouse and had a hard time keeping her eyes off her pert tits.\n\n\"I think she likes your tits,\" I whispered to Katie. \"Part your legs a little wider. I want to feel your wetness.\" Katie complied. I took one finger and slowly eased it up and down her slit, just barely parting her outer lips, but enough to gently flick her clit a few times. \"Do you imagine how each dick would feel different as they entered you?\"\n\n\"Sometimes, yes,\" and just as she answered I pushed two fingers into her.\n\n\"Do you want lots of different dicks in your pussy?\" and as I asked, I pulled my two fingers out and replaced it with one.\n\n\"Mmm, that feels nice,\" was my answer, as she spread her legs further apart.\n\n\"All different sizes?\" I asked, and this time I replaced a single finger with three.\n\n\"Yes. That feels nice. Be careful the waitress will be back soon.\" I took her response as encouragement so while diddling her with three fingers, I started teasing her clit with my thumb.\n\n\"Can you imagine some guy taking you on the pool table over there? Your skirt bunched up around your waste, blouse wide open so the world could see your fabulous body as he rocks his cock in and out of your body. Does that thought get you excited?\"\n\n\"Yesss. Rub my clit slow and hard,\" Katie returned.\n\n\"After he exploded in you would you like if he flipped your body over, and pulled your feet to the floor, then shared you with his friend? He'd just grab your hips, and fuck you as you were bent over the table. Would you like being shared like that?\"\n\n\"Mmmmhmmm,\" Katie moaned. I could tell she wanted a release, and to completely part her thighs, yet the public setting was making her hesitant. I kept using my fingers on her, every so often changing from multiple fingers to just one, and even pushing them into her sideways.\n\n\"If they had a third friend, would you let him take you also?\"\n\n\"Yes,\" Katie answered swiftly.\n\n\"If the lady sitting there at the table wanted to sit on your face and have you eat her pussy until she came all over you, would you want that too?\" Instead of answering immediately, Katie looked over at the lady and took her view in.\n\n\"I would. She's beautiful. I'd want to take her home and make love with her all night long,\" she answered slowly in a sing-song voice. \"I'd like to kiss her. She looks hot.\" Just then the lady looked up and right into Katie's eyes. She had to realize I was toying with my wife's pussy. Her response was a look of disgust combined with a negative shaking of her head. We both froze, then Katie sight up straight. \"Shit, she caught us.\"\n\nPerhaps it was fortunate as a few seconds later our waitress reappeared and skipped directly to our table. \"I'm sorry. We don't have anything close to that year. Would 2007 work instead? It's a lot cheaper.\"\n\n\"Sure. No problem,\" I answered and she was off again. When I turned to look at our neighbor she now had an interesting smile on her face and was standing and collecting her items. She then left the room.\n\n\"Wow, Katie. We have quite the effect on people tonight.\"\n\n\"Do you think she is pissed and going to complaint to the bar?\"\n\n\"I have no idea, but now it's just you, me, a bottle of wine and I'm sure as hell not going to let it be a buzz kill. When that wine comes I'm going to accidently spill some on your chest, and then lick it dry\u2014just like this,\" and then I bent over and fastened my mouth to one of Katie's nipples through the outside of her blouse. As I did this, I returned my fingers to her well lubricated opening and eased two fingers into her while pressing the heel of my palm against her upper vagina.\n\n\"Shit, she's back,\" Katie snapped and pushed my head away. She was right. Our neighbor had just walked back into the room and busted us again, but now she was sporting a huge smile and laughing.\n\n\"You two crack me up. Either you get off on being caught or desperately need a room. What did you two just start dating, maybe for a month?\" she asked us. Up close her looks were even better. About 5'9\" tall, very thin, small perky breasts and a distinct sexy face. Her legs were long and muscular. Like those of a track star. She was wearing a cocktail dress. Silver sequined, with long sleeves, a deep V cut and the dress ended a few inches down from her groin. \"I'm sorry, I just had to come back. First, I'm sorry for the argument over there. It was a splitsville discussion, and now we are split. Can't believe I ever thought he was impressive. What a prick. I'm sorry, I'm sorry. My emotions are running high and my mouth can be a motor. Hi, let me start again, I'm Dalilah. I wasn't upset at your bit of fun. More like jealous. It's just that,\" and then Katie cut her off.\n\n\"Hi, I'm Katie and this is my husband,\" and then she was cut off.\n\n\"I don't need to shake his hand, but I'll shake yours,\" Dalilah responded and extended her hand. The ladies shook hands and Dalilah continued on, \"You are married. Damn. Would have bet some serious money that you two had just recently started dating and still had the serious hots for one another.\"\n\n\"What do you mean 'still,'\" I asked.\n\n\"The two of your eyes still sparkle when you look at each other. That is too rare for married folk. Newlyweds?\"\n\n\"Nope,\" Katie answered, then continued, \"but he still can get me fired up and does the sweetest things. Sorry about our play. We were having some fun at home, and realized we both had a fantasy about doing something sexy in public. Sooo here we are, and busted on try one.\"\n\n\"That's actually kind of sweet and funny. Actually, it looked pretty hot. I should have pretended not to notice and see how far y'all went. My loss. I was pissed off. Bad form to argue in public. I ordered some drinks for you as my way of saying sorry.\" Dalilah was funny. Once she opened her mouth words just seemed to pour out.\n\n\"You would have watched us?\" Katie piped up in a surprised voice.\n\n\"I'm not a prude. Of course, and you have a pretty hot body. Your breasts look even better up close,\" Dalilah responded. Katie seemed to have forgotten about her sheer blouse, and now was a touch embarrassed.\n\n\"Don't worry girl. If you have cute young tits like those you should show them off to the world,\" Dalilah tossed back. \"Did you too really agree to come down here and have some public fun or showing?\"\n\n\"Something like that,\" I answered. \"You didn't have to order us any drinks.\"\n\n\"Of course I didn't, but it felt right. Ordered one for myself too. Assuming you won't mind if I crash your party briefly. At least for a bit to allow me to finish my drink, and to ask a few more questions. So like did you really both discuss having a little public fun, agree on it and then come down here to do the fun?\" Dalilah asked as she looked from one of us to the other.\n\nThis time Katie answered, \"Yes. Does that seem weird?\"\n\n\"Yes. Public sex is weird,\" this statement was followed by laughter. \"I'm sorry. Hell, I never thought about sex in a bar or whether it's weird or hot. But the little I saw was pretty hot. No, I was talking about your agreement. Let me explain. Our gameover fight was about sex. He wanted a threesome, and I agreed. Next thing I know, he's not available for several nights, and when he is I find out he's been sampling the 'goods' to ensure the other person is right for us. That fucker. So now he can sample away all he wants. As a single man. So really, I'm being noisy, and wondering how you two agreed on this or was it just a wild one-time thing?\"\n\n\"Actually, we've spent several days discussing it. Probably not too surprisingly, it started as sex time talk, then slowly progressed to discussions about fantasies, then we agreed on it and took time to set up rules. We both want it to enhance our relationship and not take anything away,\" I answered.\n\n\"You guys are good. We or I should have done something like that. It is fun being sexy isn't it?\" Dalilah asked and in doing so seemed to have changed the conversation.\n\nJust then the waitress returned with three tonics and gin, along with our bottle of wine and three empty glasses. As she carefully placed the drinks on the small table before us, she asked if we needed anything else, but we each declined. She then let out a giggle, and added \"Have fun,\" then was gone again.\n\n\"Do you like showing off your body?\" Dalilah asked looking directly at Katie.\n\n\"I suppose. For my day job I have to dress like a prude, and I'm just discovering that sex can be fun, and there's all different types of sex. Love sex, fun sex, solo sex and release sex.\"\n\n\"Release sex? What the hell is that?\" Dalilah piped back.\n\n\"You know when your horny all day and you just need a few orgasms to break that tension. You need a release. Haven't you ever used a vibrator in your car over lunch?\" Katie asked as she started sipping her drink. This even surprised me.\n\nDalilah and I both responded with laughter. Then I added, \"I love you honey!\"\n\n\"Girl, you are trouble. I have not tried that one. Not that it's wrong, but yes I can relate to release sex. It's like when you're single, you go out Friday and Saturday night, have zero options and a burning need. Come Sunday morning a girl needs a release,\" Dalilah stated. \"It's really bad when you tease away sexily, and fail to land anything.\"\n\n\"What do you mean tease away?\" I asked.\n\n\"It's what your wife's doing right now. She knows people can see her nipples, and whenever she catches anyone taking a look it sends a little zing of pleasure. She's teasing people, but if she does that all night and ends up without hooking anything then she's going to go home needing a release,\" Dalilah answered. This time I laughed.\n\n\"So honey does it get you excited when people look at your tits in that sheer blouse?\" I asked.\n\n\"Yes, a little bit. It's exciting and embarrassing, and sexual. Dressed like this I feel like I'm broadcasting my sexual interest, and when people look at me it's like they are admiring my sex and wanting what they see. That'll make anyone high,\" Katie replied.\n\n\"That is why women love to tease men with their body. It's not just to show off, it also gives us pleasure. However, you don't have to be so obvious. My biggest highs come from when I have control over what or how much I show off,\" Dalilah stated.\n\n\"Like in what dress or style you pick out,\" I asked.\n\n\"No. It's how you use what you have on. Do you think this dress is sexy?\" she asked me.\n\n\"Well, yes.\" I answered with a touch of embarrassment.\n\n\"Why?\" Dalilah countered as my wife smiled at my interrogation.\n\n\"It shows off your legs, and emphasis your breasts, gives the illusion or possibility that more could be shown easily,\" I replied.\n\n\"Good answer. Now watch how I use it.\" Delilah scooted her chair back. \"If I cross and uncross my legs I can determine how much of me you see. There I just crossed and uncrossed a few times and never once did you catch a glimpse of my crotch, but it seemed so close right?\"\n\n\"Yes.\"\n\n\"And now if I stretch right you can basically see my entire leg, correct?\"\n\n\"Yes,\" I answered while keeping my eyes on her legs. They looked delicious. Her skin looked flawless, and the dark coloring seemed so exotic. Both Katie and I were sipping freely from our drinks as Dalilah put on her show.\n\nShe then stood up two feet in front of me. \"So you noticed the low cut of my dress. Good. Now let me show you how it can be worked.\" Delilah bent over at the waist so her breasts were just inches from my face. \"Go ahead and have a look. I too have no bra on, but I'm quite certain you cannot see a bit of nipples. Any luck?\"\n\n\"Uhmm, nope,\" I replied.\n\nDalilah then stood upright, and continued on. \"Now I reach back, scratch my shoulder blade, and make a minor adjustment.\" Then she leaned forward again. This time both of her nipples came into full view. Her breasts were small, maybe a B cup, soft brown, and tipped with almost black nipples that both looked erect. \"What can you see now?\"\n\n\"Everything. You have beautiful breasts.\"\n\n\"So does your wife,\" Dalilah added as she adjusted Katie's blouse so the pocket wasn't obscuring her view.\n\n\"A little nipple glance never fails to catch someone's attention. Of course there are always other options.\" Dalilah stood up, turned around and slightly bent over. \"How do the bottom of my cheeks look?\"\n\nThis time Katie answered, \"Splendid.\" And she was correct. Dalilah's ass had to be one of her best features. It was well muscled, firm and compact. It really made you want to reach out and squeeze it. Her demonstration was definitely charging the air.\n\nDalilah turned around, and added, \"If you really want to make a guy think they've gotten away with a cheap view you find a reason to adjust something just above them.\" She closed the gap between us, then reached her arms up high which caused her hem line to rise above her groin. Her pussy popped into view. Although it was covered by the small strip of her bright red panties. Being inches away from it, I could just make out the outline of her crack and felt the urge to stroke it. \n\nShe posed for just a few seconds, then pulled away. \"And if you need to be more daring there are the bend at the waist moves.\" Dalilah took a step back, turned around, then stood so she was somewhat to the side and bent over so her back was almost parallel to the floor. Again, her hem raised up, but this time over most of her ass. It was amazing. She swayed her ass back and forth while stating, \"Nice, huh?\"",
        "Katie and I both answered \"yes\" in unison. Katie had also slid her hand over onto my lap and was gently caressing my cock through my jeans. I'm sure she wasn't surprised that it was fully erect.\n\n\"If one is desperate, a lady can point her coochie right at a man and do that move, but it's pretty much a fuck me gesture. Would be hard for such a lady to claim surprise if the person she did that too popped up, pulled her panties aside and screwed her right then and there,\" Dalilah tossed out causing a laugh from the two of us.\n\n\"Ok, my turn. You can have a good deal of fun even with sheer revealing clothes.\" To my surprise, Katie stood up and apparently was going to put on a show of her own. She finished her drink, then walked around the table. \"Dalilah, sit down right next to him.\" Katie took her place two feet in front of us and began to sway her hips seductively as if dancing.\n\n\"I know you two can see glimpses of my nipples, but there is something about seeing a real nipple that gets to people. Viewing Dalilah's tits was much nicer than just seeing her cleavage.\" As she made this statement, Katie slowly unbuttoned her blouse, but tucked the shirt tail ends into her dress. One could from her neck down to her belly button, but her breasts remained covered. \"If I pull out the ends, watch what your eyes do,\" Katie added then proceeded to untuck her blouse while continuing her swaying. \"Yep, all eyes are on my tits. Wanting to see them free, but unable to. Funny thing about breasts. No matter who you are, they make you want to fondle, kiss and lick them. Then squeeze them and pull on those nipples.\"\n\nJust as she said the word nipples, Katie raised up her hands behind her head. It caused her blouse to part and her tits to spill out. Her nipples were hard and looked incredible. She was correct. During her show, Dalilah had placed her hand on my thigh and started to rub it and I returned the favor. When Katie exposed her breasts, Dalilah moved her hand over and softly rubbed my cock.\n\nKatie just smiled, brought her hands down and pulled on both of her nipples. \"And if a little nipple magic doesn't work, you are correct Dalilah, one can always show off their bottom.\" She then turned around, slide one foot out and proceeded to slowly bend over until her sex came fully into view. She held this pose for a bit, then reached between her thighs and parted her lips to give us a complete view of her pink flesh.\n\nWhile Katie was busy taking the reins of the show, Dalilah continued to rub my cock. I'd moved my hand between her thighs and was rubbing her pussy through her panties. When Katie bent over, Dalilah released a gasp while tilting her hips upwards. Katie parted her lips for a bit, slipped a finger into herself and slowly pulled it back out, now coated in juices.\n\nI was at a lost exactly where to go from here. Fortunately, Dalilah kept the show going. \"Can you please show me what you were doing to Katie when I caught you? I want to see up close.\" As Dalilah made her request for us, she poured each of us a full glass of wine and emptied the bottle.\n\nDalilah moved to the end of the loveseat, but sat with one knee and foot up on the couch, and the other foot on the floor. Her red panties were on display, and now contained a wet spot. Katie sat on the other side of me, put her feet over my legs and parted her thighs. She hadn't bothered buttoning up her blouse so now her pussy and tits were free. The seating was tight, so there was skin contact with everyone and it felt nice. I pulled Katie's head towards mine, and we kissed passionately. As we kissed I eased one hand down her thigh, then started to make love to her opening with my digits. It wasn't long before Katie pulled her head back so that she could moan freely. Her eyes were on Dalilah who was rubbing her own pussy through her red panties.\n\n\"Was this your fantasy, to get off while a stranger watched you?\" Dalilah asked.\n\n\"Part of it,\" Katie replied as her moans increased.\n\n\"What else?\" Dalilah asked.\n\n\"Just more sex stuff,\" my wife eased out. As she said this, I pulled my hand free of her, took Dalilah's hand and led it to my wife's sex. Then I used my free hand to pull Delilah's panties aside and began to play with her pussy.\n\n\"Was there more than public sex?\" Dalilah asked as her breathing increased. My wife was now resting her bottom on my lap and inches from my eyes, Dalilah's chocolate fingers were working their way in and out of Katie's creamy pink pussy. \"Can you please tell me, Katie? God you're so hot. Do you know how beautiful your pussy is babe? What do you dream about when your rubbing your pussy in the car?\" As she asked this, she leaned forward so her other hand could squeeze and pull on Katie's tits and her face was resting against Katie's thigh. No doubt Katie could feel her warm breath, less than a foot away from her pussy.\n\n\"In your car, do you make yourself cum several times?\" Dalilah seductively whispered to Katie.\n\n\"Yes, yes. I have to.\"\n\n\"Do you dream about making love to a woman?\"\n\n\"Ohh. Oh. Yes!\"\n\n\"Do you dream about anything else?\" Dalilah asked and now had her face just a few inches from my wife's vagina. Her questions were slow, allowing her warm air to envelope Katie's quim. I was no longer able to play with Dalilah's slit so had unzipped the back of her dress a bit and was enjoying rolling her pointy nipples through my fingers. \"Tell me your desires.\"\n\n\"Ohhh Goooood. Oh, Shit! Uhhhh,\" Katie gasped as she repeatedly tried to push her pussy up to Dalilah's full lips. \"I want sex. Ahh. I want woman. I want, I want to be used. To be passed around and anyone can fuck me. Men, women, they all cum in me and make me cum over and over.\"\n\n\"What would you like me to do right now?\" Dalilah asked as she now had three of her long skinny dark fingers stroking in and out of my wife.\n\n\"Please, please eat my pussy.\"\n\nAnd she did. Her mouth was glued to Katie's mound for the next ten minutes. I'd never seen Katie cum so hard. Her face looked like it was in torture. She grimaced and shook, but at all times kept one hand on the back of Dalilah's head and the other squeezing her tits so hard that they left marks. I kept grinding my jean covered cock into Katie's ass, but it wasn't the relief I was wanting.\n\nThen the lights in the room started to flicker on and off. Someone was sending us a message.\n\n\"I think that is our signal the bar is closing and its time to depart,\" Dalilah stated after pulling her lips from my wife's lips.\n\n\"Oh, shit. That's too soon,\" Katie complained.\n\n\"How about we continue the fun elsewhere,\" Dalilah offered.\n\n\"Our apartment is close,\" Katie replied with a seductive smile as she stood up and straightened out her dress.\n\n\"My penthouse is just twenty floors up. We can go there, if you're comfortable with me kissing your husband. I'd like him to taste you.\"\n\n\"He is yours to do with as you please,\" Katie seductively replied, then added in a big smile and wink to doubly make her point. Dalilah stood shortly after Katie, so now I was the only one sitting. Dalilah returned to me, then straddled me such that she was now kneeling with a knee on the outside of each of my thighs.\n\nDalilah took one hand and placed her long fingers underneath my chin, and titled my head upwards so I was looking into her face. She smiled deeply, then whispered, \"I need a release.\" Then we started to kiss. Slowly, at first. Just lips, and after a bit our mouths opened. She eased her tongue into my mouth and I gently sucked on it, then I sucked on each of her full lips and tasted my wife's essence. As we kissed, I wrapped my hands under her dress and massaged her ass. I couldn't believe how firm and tight it was. The tempo of our kissing increased and became passionate. My right hand eased between Dalilah's gap and slid into her thong. She was soaked. My fingers easily entered her velvet taco and induced a deep moan.\n\nWhile playing with her privates, Dalilah broke off our kiss, but kept her forehead pressed against mine. \"Your wife's pussy is beautiful. I love contrast. Do you mind if I help her out with her dreams? I think she'll enjoy it, and I know I'm going to love watching your white cock slide in and out of my pussy.\"\n\n\"Sounds spectacular. I think Katie would like to taste you after I fill you with cum. Would you mind that?\" I asked.\n\n\"Oh darling, she is going to have lots of opportunity to taste my pussy and cum. Tonight is a night we will remember. Come on let's go!\" She popped off my lap and walked up to Katie. \"Honey, we are going to leave your blouse unbuttoned and I'll take your coat. And lets finish the rest of the wine.\" Dalilah adjusted the hang of Katie's blouse, finished her glass laced an arm through one of Katie's and held the other out for me. \"Shall we?\" Katie and I polished off our glasses, not the way that a good bottle should be consumed, but better than letting it go to waste.\n\nAs we walked passed our waitress on the way out, we were greeted with a big knowing smile. Dalilah said good night, then whispered into my ear, \"She's a friend. Probably would have joined us, but bad timing for her. Maybe a treat you might be interested in at a later date. She prefers couples as less drama and I believe is interested.\" I had to say I was surprised and had no response, but thought to myself just who the hell is the lady we are with.\n\nWe walked down the empty street about half a block, and walked under a bright awning and double brass doors popped open for us. \"Thank you, Pablo. These are my friends and will be staying with me tonight. If they need anything, please make sure it happens. Thanks, babe. Oh, and could you have Chris help us with the lift, and I'll need his assistance moving a load.\"\n\nAfter Dalilah's instructions, we walked about ten yards and stood in front of the lift. \"Did you see how he couldn't keep his eyes off your tits Katie? Men, are so predictable. Come here love, stand in front of me and lean back into me.\" Katie complied, and once in position Dalilah laced her arms around Katie's waste and slowly brought them up until her hands were cupping Katie's tits. Then she loudly announced, \"Pablo her tits feel even better then they look.\" He was trying to ignore us, but couldn't help himself now. His eyes were glued on Katie's breasts and Dalilah's hands, slowly she moved them away exposing both tits. After several seconds she brought her fingers back and tweaked both of Katie's nipples, then abruptly spun Katie around.\n\nKatie's eyes were huge. I think from both surprise and excitement, but Dalilah wasn't done. She attached her lips to Katie's then inch by inch she hiked up Katie's mini until her derriere was fully exposed. The ladies kissed with open mouths, and Dalilah's right hand teased apart Katie's thighs then promptly started fondling her sex. Pablo starred on, and Dalilah brought an abrupt end to the show by firmly slapping Katie's ass and pulling down her skirt. Her timing was perfect, as just a few seconds later a young man appeared from around the corner.\n\n\"Hello Chris. This is Katie and her husband. There are going to be staying over with me, and I need your help moving a piece. Can you help us out?\" Dalilah asked.\n\n\"Sure thing Ms. Stoeker. I'd be more than happy to help you. The lifts ready if you are Ma'am,\" Chris announced so we entered the elevator.\n\nAs we walked in Dalilah whispered softly to Katie, \"That got you fired up, didn't it?\"\n\n\"Yesss,\" Katie answered softly.\n\n\"Is your pussy ready for action?\"\n\n\"Yesss. I'm very horny,\" Katie answered and looked at me to judge my reaction. I responded by just blowing her a kiss.\n\nOnce we entered the lift, we leaned against the back rail. Chris pressed the button for the top floor and closed the doors. It was an older lift, and moved fairly slow. As it started to ascend Dalilah reached over and pushed Katie's blouse further apart exposing one of her breasts. She then went to her side, bent over and took the nipple in her mouth. Sucking hard on it, then biting the nipple to make it fully erect.\n\n\"Chris, this young lady is naughty, but so beautiful. Doesn't her auburn hair, fair skin and glowing blue eyes make her stunning to just admire. And then you see her body, and it makes you want to do more. Are her tits perfect or what? It is rare to have tits this size matched up with such red nipples that stick out so far. And they are very sensitive.\" Dalilah then pulled firmly on each of Katie's nipples causing an audible gasp to pour out of Katie's open mouth. \"And she's a good girl. Keeps her pussy clean and bald.\" She pulled up the hem of Katie's mini dress to allow a brief showing.\n\nDalilah continued on. \"But she can be naughty. Just a moment ago she was teasing your friend Pablo downstairs. Showing off her perky nipples and adorable ass to him. No doubt it worked him up, and also worked her up too. She likes to show off her goods and more. Does her sexy little body make blood flow to your cock Chris?\"\n\n\"Yes she is nice to look at. Very sexy,\" Chris answered in a raspy voice.\n\n\"Why don't you stop the elevator for a bit. That wasn't much of an answer.\"\n\n\"Yes ma'am,\" Chris replied then stopped our movement.\n\n\"Katie you come stand here.\" Dalilah positioned Katie so she was about two feet from Chris. \"Perfect, now turn away from him, bend over and grab the back rail.\" Katie complied with the request and the hem of her dress glided up exposing her sex. Dalilah wasn't satisfied so she pulled the mini up further so it was bunched around Katie's waste. She then slid her foot between Katie's feet, and instructed her to broaden her stance. I knew Katie's pussy was now obviously visible and likely spread apart.\n\n\"Katie, earlier tonight we had a discussion about this position didn't we?\"\n\n\"Ye-ye-yess,\" Katie answered with a stutter. She was obviously nervous. \n\n\"Katie, Chris is one of the nicest persons I know, but he is a man.\" She then walked up to him, unbuckled his trousers, and pulled them down to his ankles along with his briefs. \"And he has a delightful cock. Just made for fucking.\" Dalilah now had Chris' cock in her hand and was gently stroking it. And a cock it was, both in girth and length. It was about as thick as a beer can and had to be almost ten inches long. Holy shit, Katie was going to get really fucked, and with her head facing the floor she had no idea.\n\n\"Chris, when Katie teases people it gets her excited. Worked up. But she is not just a cock tease. No she likes cock, likes to have lots of it. She's listening to us talk, knowing you can see her pretty little pink pussy nicely spread and glistening with juice. Does it look wet and swollen to you?\"\n\n\"Yes, yes it does,\" Chris answered slowly as he breathing was growing faster.\n\n\"Let me put a little bit of her moisture on your cock. You tell me if you can feel her slipperiness.\" Dalilah reached out and started to rub Katie's exposed quim, and when I heard Katie start to moan I knew Dalilah must have penetrated Katie with her fingers. \"Come here Chris, let me rub her juices on your sweet penis.\" He complied, and stood just inches behind Katie's ass. Dalilah began to stroke his cock fast, this time moving her hand rapidly, and periodically cupping his head. He too began to moan.\n\n\"Watch this Chris. She likes her pussy filled.\" Dalilah's hand returned to my wife's vagina. \"See how easily two fingers slip into her? And now three, sliding easily in and out, making Katie starting to moan aren't we? Let's see if we can make her moan more.\" Dalilah then bent down on her knees, and pressed her face against Katie's white ass. \"Mmm, Mmm, Mmm, I have all four fingers knuckle deep in her pussy. Do you like that Katie?\"\n\n\"Ohh, oh, yesss, you're going to make me cum,\" Katie answered.\n\n\"Not yet, not me dear,\" Dalilah replied. She then pulled her hand away, grabbed Chris' shaft and pulled him closer to Katie's opening. She started to rub it up and down Katie's slit. \"Does that feel nice?\"\n\nThis time both Katie and Chris responded with a frantic, \"Yes.\"\n\n\"Chris when you see a lady bent over like that exposing her hot pussy to her does it make you want to fuck her?\"\n\n\"Yes. I'd make any man want to screw her,\" Chris answered.\n\n\"Do you want Chris to put his cock in you Katie, and fuck you?\" Dalilah asked, but before she could answer Chris began entering her.\n\n\"Oh, Jesus. Ahh, shit. Ohh, fuck, fuck. He's giant. Oh God!!\" Katie replied as Chris started working his cock into her. It didn't take long before his shaft was buried, and then he started to increase his pace. Dalilah stood and watched briefly, squeezed behind Chris and pressed her back up against me.\n\nChris was young, and it was clear he wouldn't last long. Shit, how could he as I was close to blowing my load just from watching. After a few minutes, he increased his pace and started ramming his cock in and out of Katie's hole. Sometimes, pulling it completely free, holding it out until Katie begged for it, then letting her have it full force. Katie appeared to be loving it, moaning nonstop, begging for him to stop, and then begging for him to fuck her more. It was beyond erotic.\n\nWhile the two fucked, Dalilah pulled up her dress and began rubbing her ass checks into my crotch. I reached around her, and started to forcefully fondle her pussy. She was dripping wet. She turned her head and we kissed fiercely. \"Are you ok with seeing your wife getting fucked?\" Dalilah asked me.\n\n\"Yes, it's pretty intense. I can't believe how horny it makes me, and how much I want to see her just ravished.\"\n\n\"I want you to ravish me. I want to watch your cock pound my ebony and pink pussy. Your fingers feel good. There, right there, now rub slowly and firmly,\" Dalilah instructed. While pleasuring her, she reached back, unbuttoned my jeans and freed my cock so it was now rubbing directly against her ass. She turned towards me again for another kiss, as our lips seemed desperate for each other. \"Tonight, you can do anything you want with me.\"\n\n\"Oh Fuck!\" Chris shouted out just then, as he pulled his prick free of Katie's pussy and covered her ass with jism. When he was finished, he reentered Katie and took a few more strokes before finally pulling out. Katie had been moaning nonstop, and now was struggling to catch her breath and she was visibly shaking.\n\nDuring this climax, Dalilah had managed to place my cock at her entrance and embedded just the tip in her opening, but didn't proceed any further. Instead, she turned to me and whispered, \"Let's finish upstairs.\" After this statement she pulled away, and released the lift's stop button. A minute later we reached the summit and the doors slid open.\n\nChris pulled up his pants, while Katie managed to stand. Dalilah and I put our arms around her, then walked her out. As we left the lift, Dalilah told Chris, \"We don't need anything else from you, but may have some of the others bring up some snacks later depending on how we all are feeling. Hope you had fun.\" Then the doors closed. We stood in a small dark hallway, with minimal lighting. Dalilah pulled a card from somewhere in her dress, and was able to open the door.\n\nWe walked in to paradise. Twelve foot, floor to ceiling windows showed off the City's amazing lights, while the ocean provided a balancing dark void. Wood floors lined her place which looked vast. Her living room greeted us, complete with an all-white sectional sofa, lamb's wool rugs and a huge tropical fish tank. \"This is my palace. Welcome,\" Dalilah announced.\n\n\"Wow, it beautiful,\" Katie tossed out then headed directly to the couch where she parked herself.\n\n\"My dear, there is no rest for the wicked. Did you enjoy Chris' large cock?\"\n\n\"Oh, god. I didn't know a real cock could be that big and fat. I'll probably be sore for weeks,\" Katie replied as she tucked her feet underneath her bottom and curled up.\n\n\"Does it make your pussy hungry for more?\" Dalilah asked.",
        "\"Ha, I don't know about that,\" Katie stammered back. I think it needs a rest.\n\nDalilah then walked over to her and in the process unzipped her dress and let it fall to the floor. Next she pulled down her red thong and let it also plummet. The dress hid lots. Her baby was fabulous. Six pack abs, gorgeous thighs, firm tits with nipples that stuck out, arms very femininely muscled and gorgeous dark curly long hair. She looked like an Olympic runner, with a very healthy dose of sex appeal.\n\nWhen Dalilah reached Katie, she pulled up on one of her knees. \"Here, let me see how bad he ravaged you.\" Katie willingly complied, but didn't sense Dalilah's next move. She plopped up on the couch, placed her face right above Katie's pussy then started to tenderly lick her slit.\n\n\"Shit, its its so sensitive,\" popped out of Katie's mouth, but she didn't push Dalilah's face away. Instead, she just watched as Dalilah's tongue massaged her slit and gently caressed her upper vagina.\n\n\"Does that feel good?\" Dalilah asked.\n\n\"Yes. Gentle. It's nice,\" Katie responded.\n\n\"And this?\" Dalilah asked then started flicking Katie's clit with the tip of her tongue and pushed two fingers into her vulva.\n\n\"Oh, shit! It's too much,\" Katie shouted out, yet again her body betrayed her as her thighs flew open as she jutted her hips upward towards Dalilah's mouth.\n\n\"You,\" Dalilah stated, while pointing to me, \"Come over here. Play with my body as you wish. It's not an offer that I make too many people.\" I quickly lost my clothes and hopped up on the couch besides Dalilah and let my hands freely roam over her body. It was amazing. Her legs, ass and back were art, and especially so as she feasted on my wife. Such a sight would never grow old. Touching her was a blessing, but quickly my fingers were deep in her pussy as my other hand massaged her ass. When she started to moan I pressed my thumb against her anus and she raised her ass up to welcome the pressure.\n\n\"We have to get you and your pussy ready for more. Ready for your dream,\" Dalilah told my wife. \"It's still hungry isn't it?\"\n\n\"I don't know. You feel good,\" Katie responded.\n\n\"And this?\" Dalilah asked, as she abruptly shoved three of her fingers in Katie's vagina.\n\n\"Ah, ah, ok, yes yes,\" Katie moaned back.\n\n\"Yes what?\"\n\n\"Yes it feels good. You make me so horny so fast. Oh, shit!\"\n\n\"Is it hungry for more cock?\"\n\n\"Yes, yes I could do more,\" Katie replied and now her eyes were wide open.\n\n\"Put your cock in me, I want you to fuck me for a few minutes then pull it out,\" Dalilah turned to me and stated. I complied, and rode her briefly. My cock exploring her sweet pinkness, as my eyes and hands mauled her ass. Then I pulled out and was further instructed, \"Now give your cock to your wife. I want her to taste my sex.\" I did as instructed, and was surprised by how ferociously Katie inhaled my cock. It felt heavenly. \"That's enough, now kiss me Katie,\" Dalilah commanded.\n\nThe two woman kissed, and Dalilah shoved her tongue deep into Katie's mouth. After a minute she pulled away. \"Katie, I'm going to fuck your husband now. I want you to watch. I want you to see how beautiful his ivory cock looks sliding into my ebony folds, and when the excitement builds you'll be rewarded with a view of my inner pink flesh. It's going to make your pussy very hungry. When we're finished, I'm going to call for some snacks. The delivery people are all going to fuck you. Are you ready?\" \n\n\"Yes,\" Katie answered simply with a glazed look on her face.\n\nDalilah then turned to me, \"Lay down on the carpet. I'm going to show your wife how a lady fucks a man.\"\n\nI took my position on the carpet, and Dalilah rose off the couch, stepped over me so one foot was on each side of my body, then slowly lowered herself down. With one hand she guided my steel into her vagina, then sat on me fully with her weight. She leaned over and started to kiss me passionately. As we kissed, I began to hump up into her. It didn't take long, before Dalilah started to moan freely.\n\n\"Do you like your wife watching us fuck?\" she whispered into my ear.\n\n\"I do. I think it's going to make her really horny.\"\n\n\"Can you feel me grinding my clit against your pelvis? God it feels good to be fucking you. Tonight has been a dream come true for me also,\" Dalilah added. She then sat up and started to hump me with greater speed while she squeezed and pulled on her breasts. \"Tell your wife how my pussy feels.\"\n\nI didn't hesitate to comply. \"Her pussy is so wet. It's like slippery velvet, and tight. Very tight.\"\n\n\"That's because I keep my pussy in shape. I work out and also work out my pussy muscles. Katie, now I'm going to fuck your husband.\" Dalilah then popped up on her feet, and started working my cock in and out of her lady box at a frantic pace as she used her legs to move her body and pussy up and down. Soon she was covered in sweat as she worked my cock. \"Look at the white cock going in and out. Katie, Katie do you like my pussy wrapping up and fucking your husband? He feels so good. I'm going to lean back and open my legs wide so his cock hits my G-spot just right, and then I'm going to cum all over his meat.\" Dalilah leaned back, and put on a show. Her pussy gaped open, showing off her pretty pink flesh, then she started thrusting up and down even faster. \"Ohhhhh fuccckkkkkkk,\" she yelled. And then again, while gasping for air, \"Ohhhh fuuuucckkkkkkkkkkk. I'm cuummmmiiinnnnggggg!!\"\n\nThat was all I needed. Blasts of semen erupted from my cock, and flooded Dalilah's pussy. When I came, I grabbed her hips and entered her womb as deeply as possible. Then we both collapsed to the floor desperately sucking in air.\n\nWhile grasping for breath, Dalilah made another request, \"Katie, come and clean me up. Make me cum again. Show your husband how much you've been dreaming of pussy.\" We were both on our backs, and Dalilah hung one leg over my stomach opening herself up for Katie and coincidently placing my slumping cock adjacent to her sex.\n\nKatie rolled off the couch and crawled over so her body was between my legs, but her upper body leaned off to the side so I could feel her breasts pressed up against my thighs. She had a huge smile on her face, and pushed Dalilah's leg further up. \"I've dreamed of this for so long. Does it excite you honey? I'm going to eat another lady out,\" Katie stated, then dove in. \n\nTentatively at first, just using her tongue around Dalilah's outer lip, but then pushing it through them and into her opening to explore her vagina. A minute later, Katie's lips were pressed firmly against Dalilah's lips as she began to fuck Dalilah with her tongue. She tried a few different combinations, then began to suck directly on Dalilah's clit. This got a response, Dalilah started to moan and verbally encourage Katie to suck harder and use her tongue at the same time. Katie complied and Dalilah's body was soon withering back and forth. When Katie pushed two fingers up and into Dalilah's pussy it evoked a serious of load moans from Dalilah followed by sexy encouragement, \"Yes baby, yes. There you go, ohh, fuck yes. Like my pussy? Come on girl, lick my pussy, lick it, oh yessssssssss.\"\n\nAs Dalilah came, she ground her hips upwards into Katie's face, while placing two hands on the back of her head to force even more contact. She held Katie in this position for almost a minute then released her, as once again she was grasping for air.\n\n\"Did that turn you on honey? I loved the taste of your cum mixed with her pussy juice. It's very intoxicating. Oh, no and look at your poor cock,\" Katie stated then pulled her head over and inhaled my cock into her mouth. She sucked on it for a minute or two, but it failed to respond. \"Has he had too much attention, I was hoping I could use him again.\"\n\nWow, my wife's libido was out of control. \"Are you horny again beautiful?\" asked Dalilah.\n\n\"Oh, god yes. Would you like me to kiss your pussy some more?\" Katie asked.\n\n\"Hold on, sweet one. It's refreshing to see such a sexy young lady with such an appetite for fucking. Why don't you take a seat on the sofa, and we'll sit on either side of you. Maybe we can help,\" Dalilah offered. We all moved up to the couch, with Katie between us. \"Wiggle your tush down, and put a leg across each of our thighs. If your pussy needs attention, it has to be easily accessible.\" Katie did as she was instructed and opened her pussy for us. \"Now, I want you to raise your arms above your head, and lean them on the back of the sofa. Good girl, so beautiful. Your husband and I are going to gently tease your body with our fingertips, and I want you tell us about your dreams of pleasing multiple people while we do it. Ok?\"\n\n\"Yes, this will be fun,\" Katie responded and started. \"I feel horny so much. It's like I need to be screwed crazily to get it to go away. So I think of just random people having their way with me and it helps. I cum several times, and then I'm better. I can focus.\"\n\n\"When they fuck you does it feel good or bad?\" Dalilah asked.\n\n\"Good. Real good. I just think it's so dirty and thought it would upset my honey so I felt horrible and thought it would be best to always keep it a dream. But then tonight, I never thought it would feel this good or make me feel so free.\" Our hands were now roaming over Katie's body. Her arms, thighs, stomach, shoulders and breasts. I'd attempted to stoke her pussy, but Dalilah caught my hand and pushed it away while gently mouthing to me a simple 'not yet,' and I got the hint.\n\n\"Did you like Chris fucking you in the elevator?\" Dalilah asked.\n\n\"Oh, shit that was so hot,\" Katie murmured back, and spread her legs even wider indicating she wanted her mound caressed too.\n\n\"Did you ever dream of something like that?\"\n\n\"Kind of,\" Katie replied and then brought one of her hands down to her gash and started to rub it and continued, \"except when I fantasize it's not just one guy, it's several. If I'm dreaming of making love to a lady, its usually just one.\"\n\n\"Arm back up sweetie,\" Dalilah instructed and pulled Katie's hand away from her quim. \"How do they fuck you?\"\n\n\"Just one after the other. I end up with cum all over me and orgasm so much.\"\n\n\"Do they play with your ass too?\" As Dalilah asked this she brought a finger down and teased Katie's anus. \"How do they play with it?\"\n\n\"They fuck me. Everywhere.\"\n\n\"Do they fuck your ass and pussy at the same time?\"\n\n\"Yesss.\"\n\n\"Would you like to be fucked like that now?\" Dalilah asked then pulled my hand down to Katie's mound.\n\n\"Yes,\" Katie spat out instantly just as two of my fingers entered her womb. Her pussy was drenched. Moisture coated her lips, ass and thighs. While my fingers teased her, Dalilah worked a finger up her ass. \"Are you going to screw me with some toys?\"\n\n\"No my dear. I think you need real cocks. Remember Pablo from downstairs? I think he'd like to fuck you. He has a friend that works around the corner and his girlfriend works nights in the kitchen. I do believe they might enjoy you. Would you like them to fuck you?\"\n\n\"Oh, shit. You're making me so horny. Jesus, right now. Oh, god, your fingers are driving me crazy. Yes-I want them too,\" Katie answered.\n\n\"I'm going to hand you the phone. Press pound, then two, two and it will ring at Pablo's station. Tell him your Dalilah's friend, the one with tits and ask if he, his girlfriend and Johnny would like to share you.\"\n\n\"I, I don't know if I can ask for it,\" Katie responded in a nervous voice.\n\n\"Yes, you must Katie. You need to learn how to ask strangers to fuck you.\"\n\n\"Honey, this is crazy. Should we just go home or are you ok with it?\" Katie asked looking at me with look of concern and desperation. I pulled my fingers out of her, and vigorously rubbed her enflamed clit.\n\n\"This is your fantasy my love. If you want to be fucked more it might be your best chance. Do you want to fuck them?\" I retorted.\n\n\"Yes, honey. Yes. So so bad. I need it.\"\n\n\"Call them now,\" Dalilah softly stated as she returned from getting a land line and handed it to Katie. \"Also, tell Pablo we need a few bottles of bubbly, some strawberries and a joint. I need a snack.\"\n\nOddly, Katie took the phone, got up and went to a far corner to make the call. She returned a few minutes later and advised the crew would be here in about 15 minutes. It was interesting she was embarrassed about us hearing her ask for sex, but seemed to be turned on by us watching her serve the participants. When Katie returned to the couch, Dalilah stood and said she needed to visit the restroom. This was the first time Katie and I had been alone since the wildness started.\n\n\"Honey, are you sure this is ok,\" Katie asked me after Dalilah's departure.\n\nI responded by grabbing my wife and pulling her into my arms, then delivering a fierce kiss. When it ended, I pulled back and said, \"Katie I want to see them screw you silly. They're going to suck and pull on your tits.\" As I told her this, I reached down and fondled her breasts. \"And they are going to fuck your pussy over and over.\" I then continued our kiss, while easily shoving three fingers into her worn pussy. After a bit, I ended the kiss, then added, \"And I bet you your ass gets fucked too.\" I had my thumb position and eased into her causing her to squeal.\n\n\"Are you going to fuck her again?\" Dalilah asked me as she entered the room carrying two robes.\n\n\"Nope. Can't right yet, and just reassuring her I'm fine with her fantasy,\" I answered.\n\n\"And you my sultry one?\"\n\n\"Oh yes. You two have gotten me so horny, and I just can't stop thinking about it. I'd fuck a whole army right now if I could. I feel like my pussy and body just need constant attention,\" Katie answered while I rubbed her pussy a bit more than give it a firm swat.\n\n\"I've brought a robe for your husband and I, so that we can properly greet our guests. But I want you to stay naked. There is a large ottoman over there against the far wall, that is on casters. Let's position it here so we can enjoy the show as the lighting is good here. Katie, I'd like you stretched out on the ottoman when they arrive. Keep your legs parted. I want them all to see how swollen and wet your pussy is.\"\n\nI pulled the ottoman over, and Katie took her position and used a few pillows to prop up her head. \"I feel so damn nervous right now. And you two all clothed makes me feel like a piece of meat for the wolves to enjoy. Arghhh, I hate butterflies.\"\n\n\"My dear, you are a piece of meat for all to enjoy. At least until they have their fill of you. Here, let me offer you a distraction,\" Dalilah suggested then proceeded to lower her sex muffin to Katie's mouth. Katie began to clean Dalilah's pussy with her tongue, and in the process cover her lips and cheeks with Dalilah's wetness. A few moments later, the door ball rang and Dalilah stepped down. \"Thank you, that was invigorating. I think the boys will get a thrill out of kissing you now and tasting my essence on your lips.\"\n\nDalilah slipped back into the bathrobe, and answered the door. \"Welcome everyone, I'm so glad you could join us. Please, please come in.\"\n\nIn walked Pablo, along with who I presumed was his girlfriend. A short Spanish lady, with an infectious smile, small breasts and a round bottom, later I learned her name was Rosie. Behind her was a tall thin white kid who introduced himself as Johnny. And there was a surprise guest.\n\n\"I heard the good times were rolling on so I thought I'd help keep it rolling on if that was cool with everyone,\" Chris announced. I think he was ready for seconds.\n\n\"The more the merrier, at least tonight. You are most certainly welcome. Come in, let me make the introductions and Rosie how about if you light up that joint and I'll get flutes for the champagne,\" Dalilah offered.\n\n\"Sure, no problem,\" Rosie replied, then added, \"I brought two cause there's so many and guess I might as well light both of them up.\" Rosie proceeded to light the marijuana cigarettes and distributed them in opposite directions. The group had arranged themselves in a C around Katie, with the open portion of the C being where the ottoman rested.\n\nAs the doobies circulated, the group grew silent with everyone's eyes glued to Katie's body. After two hits, I passed as I already felt it's pull, but Katie kept on enjoying the weed. I suspected she would soon be higher than a satellite. Dalilah returned with a tray full of champagne flutes, and passed them around. The group chitchatted nervously, knowing why we were gathered, but not knowing how to get things started.\n\nAfter five minutes of this, Katie \"accidentally\" spilled the rest of her champagne on her chest, then cheerily asked, \"Can anyone help dry me?\"\n\n\"I'd love to,\" Rosie announced. She then slowly pulled off her t-shirt, took off her bra and removed her jeans. Her breasts, were small with puffy nipples. Once mostly undressed, she walked up to Katie and began to lick and suck on her tits.\n\n\"Oh, that's heavenly, thank you,\" Katie responded to the new stimuli. It wasn't long until the girl were kissing and feeling up one another's bodies. As their lips teased one another, Katie's hand pulled down and discarded Rosie's panties. She too was now naked and both girls were snaking their fingers in and out of each other's neither regions. Rosie had a full ass, but it was sexy with a rose tattoo just above her crack. In didn't take long, for Rosy to take advantage of Katie's obvious reason for being undressed. She climbed up on the ottoman, placed her knees on either side of Katie's head and lowered her pussy to Katie's waiting lips.\n\nAs Rosie lowered herself down she issued an order, \"Suck my pussy and make me cum.\" Katie seemed to be spurred on and started feasting on Rosie's pussy. The boys had stopped their conversation, and stripped off their jeans, trousers and tops. All three looked ready to go. Pablo was the first to action. He approached the ottoman, kneeled on its end, then pushed up Katie's knees towards his girlfriend's hips. Without any notice, he shoved his full length into Katie's waiting hole causing a muffled whelp to fly out.\n\nPablo fucked her furiously. Over and over slamming his cock into her sexual folds. Just a few minutes later, he exploded and pulled his cock free. Johnny and Chris were both ready, but Johnny jumped quicker and soon had his skinny white cock pounding in and out of my wife's cunt. As he screwed her, Chris pulled one of Katie's hands free from Rosy and placed it on his cock. She got the message and began to stroke his meat.\n\nFive minutes later, with Johnny still fucking away crazily, Rosie exploded on my wife's face. Screaming out like a siren, as she rubbed her muff forcefully across Katie's lips. When Rosie was finished, she bent forward so she was on all fours. Chris wasn't slow, and jumped behind her, and jumbled out, \"I been wanting a piece of you for a long time. I'm going to fuck you now Rosie.\"\n\n\"Oh, fuck,\" was Rosie's only response, then Chris was pressing his tree limb into her. He was horny, high and low on patience which caused Rosie to scream out loudly, \"Fuck, fuck, oh oh fffuuucccckkkkk!\" Rather quickly he was buried in her, and started working her. A few minutes later, Rosie erupted. \"Oh Jesus, Chris. Oh, Jesus. Dios Mio. Shittttttttttt! I'm cummminggg alreaddyyyyy you fucker!\" She collapsed onto Katie who was still being fucked by Johnny.\n\nChris wasn't sure what to do. He stood above the mound of flesh, then smiled. \"Everyone off the box for a minute.\" Everyone froze, but complied. He whispered something to Johnny that was inaudible, but left him smiling. Johnny laid down on the ottoman so his long pool was sticking straight up. \"Lady, Johnny likes your ass and is going to fuck it. I told him he should let you be on top to control it.\"\n\nKatie simply responded, \"ok.\" She got up on the ottoman, balancing on her feet, spread apart over Johnny's legs and slowly guided his long rod up her ass. She took a few moments to adjust, but soon was rocking steadily on it.",
        "Chris approached and barked out another order, \"Pull her down and hold her legs back. I need more of that pussy.\"\n\nKatie's eyes looked like they were going to pop out of her orbits, but she had insufficient time to protest. Johnny pulled her back down onto his chest, grabbed the underside of her knees, and pulled them back and apart. All Katie could do was watch as Chris brought his fat cock up to her gapping pussy and began to push into her soaked cunt. When he had his tool about half way buried in her, Katie started to holler, \"Oh Jesus Fuck!! Ohhhhhhh! Yes, yes fuck me!!\" This prompted Chris to speed up his assault on her, and then the fucking really started. I'd never heard Katie cry out like she did that night.\n\nAfter five minutes, Pablo approached the threesome and tilted Katie's face towards his cock. She got the idea, and sucked in his manhood. All three men were soon rocking her body, using her holes and tweaking her tits. I lost count of the number of orgasms she had. They seemed to fall one after the other.\n\nWhile Katie was getting worked over, Rosie sat next to where Dalilah and I were standing. \"Do you just watch or get to play too?\" she asked me.\n\n\"Oh yes. I've had a good deal of fun tonight too. This is Katie's fantasy and we'll we're a bit exhausted,\" I answered.\n\n\"Well your cock is starting to make a bit of a tent in the robe. Maybe it's enjoying the show,\" Rosie responded. She then slid her hand through the front of my robe and parted it so my cock was visible. Just as quickly she brought her face towards it, then drew it into her mouth and began to suck on my partially erect cock. It was nice to witness her dark hair, brown eyes and cute face staring into my eyes while feasting on my meat, while in the background my wife was getting fucked raw. \n\n\"If you manage to get him hard, I think he'd enjoy my ass. Hasn't been able to keep his eyes or hands off it all night. Think he as a little obsession with it,\" Dalilah added to our conversation.\n\nThis caused Rosie to pause, dislodge my cock and add, \"I can help with that. Both of you take off your robes.\" She then continued my blow job. Two minutes later, I was mostly firm, and Rosie took a break. She gave Dalilah's body the up down, and squeezed her ass. \"Who wouldn't want a piece of that?\" she asked rhetorically. She proceeded to lick Dalilah's slit for a bit before returned to my cock.\n\nWhen she had it almost at full mast, she stood up, pulled Dalilah's chin to her and gave her a big wet kiss. The kiss seemed to fire up both women, after a repeat Rosie took a step back and announced, \"I'm going to lay at the end of the sofa. Dalilah I want you on top of me and we're going to get your cute little butt ready for some anal play. And you, Mr. Cock Finally Hard, I want you to stand right behind Dalilah's ass.\"\n\nWe smiled in agreement, and took our positions. My cock was bumping up against Delilah's ass cheeks, and her open pussy looked inviting too. Rosie wormed her way down so the ladies' faces were aligned. \"First we need to get your cock well lubricated. I want you to feed that into my pussy and fuck me for a bit. I'm sure that won't be a problem. Be gentle though, Chris wasn't so much fun. I don't think I'd ever be up for a repeat, but it sure seems like your wife loves it.\"\n\nAcross from us, Katie was still getting slammed. Pablo was the only guy to climax, and he'd cum all over Katie's face and tits. Chris was really thrusting hard into my wife. Katie was letting out some bloody loud screams that made it seem like she was in pain, but then every so often would add in a \"more\" or \"harder.\" I think she was loving her mini gangbang.\n\nI bent my knees a bit and eased my cock into Rosie's snatch. It didn't look like she was much over twenty, and her pussy felt impeccably tight. She and Dalilah had started to kiss again, so I began to hump her a little faster, while squeezing Dalilah's ass and watching the freak show to our side.\n\n\"Oh goodness, that feels nice. Do you like my little pussy? You're a much better fit. If I wasn't the guest here I'd have you fill it with cum and then let our friend her clean me up. Yesss, just like that. Mmm, that's good. Make sure you get your fingers coated with Dalilah's pussy juice then very slowly stick a finger up her ass, and slowly add another. Keep going, nice and slow, and deep. Oh, yess. Just like thatttt.\"\n\nAfter lubing up my fingers in Dalilah's wet folds, I eased a finger up into her ass. It caused her to moan softly, and these grew louder after I worked a second finger into her rear. I thrust a few more times into Rosie's tiny gash, was reluctant to leave the love it was giving my cock, but I was thrilled about stuffing my cock up Dalilah's perfect ass. So pulled my cock and fingers out, then eased my shaft up Dalilah's rectum.\n\nThe other group had mixed things up. Chris was on his back and Katie was trying to ride his monster as Johnny took her ass from above. Once I was fully embedded in Dalilah, Johnny pulled out and sprayed his load all over Katie's back. Her body seemed to have adjusted to Chris' girth and length, as she was vigorously riding him. Viewing the scene before me, flooded by body with a strong dose of sexual cravings. I began to pound Dalilah harder, as Rosie inched her way upwards so Dalilah could eat her.\n\nWith the pot shifting reality, it seemed like we had been fucking for an eternity. I'd never seen Katie so red faced and sweaty. She was revealing a side I'd never even imagined. Literally, slamming her pussy down onto Chris' cock as forcefully and as fast as she could, while barking out, \"Fuck that pussy, yess, yessss! Fuck that pussy harder. Did you ever think you'd get fuck'd like this? My pussy is hungry for cock. Fuckkkkkk yesssss.\"\n\nKatie's rantings turned Chris' eyes big, and he wanted more. Once again Katie was flipped onto her back and he started jack hammering his giant stick in and out of her as she screamed nonstop. Underneath me, Rosie was withering through another orgasm, while I'd reached one hand around Dalilah's waste to finger her clit and gash. A minute later, the room erupted in loud long moans. Cum squirted from my cock deep into Dalilah's dark regions, while Katie's body started to shake nonstop. Chris had pulled out and blasted load after load of semen all over her pelvis, tits and face. A few seconds later the room was silent, except for some very heavy breathing.\n\nJohnny was the first to speak up, \"We have to get back to work quick or someone's going to lose their job. They all agreed and began throwing their clothes back on. As they did, Katie just laid on the ottoman, her eyes staring at the ceiling as she continued to try and to calm her body down.\n\nRosie walked up to me and gave me a nice goodbye kiss and hug. During the hug she also whispered into my ear, \"Please let me know if your wife and you would like to have some fun with just me, or I could find move guys if that's her thing.\" I thanked her, smiled hard and said goodbye.\n\nDalilah walked over to the ottoman and was easing Katie up into a sitting position. She had cum caked all over her body and still hadn't spoken a word. I saw the guests off and then came to my wife's side.\n\n\"Are you ok honey?\"\n\n\"Yeah. That was crazy. It was just so intense,\" Katie answered.\n\n\"How about we get you in the shower and clean you up?\" Dalilah asked.\n\n\"That would be wonderful,\" Katie replied. Dalilah then guided the three of into a massive bedroom and adjoining it was a huge restroom complete with a walk in shower that appeared as though it could accommodate a dozen. Through a computer interface, Dalilah fired up the machine and soon all heads were squirting out warm water.\n\nWe soaked ourselves and gradually lathered one another up. Soap was applied everywhere, and the shower alone felt pretty magical. During the shower we lightly kissed one another, and when all clean Dalilah hit a few more buttons that turned on a massive blower to dry us all off. I'd never imagined such a contraption existed.\n\n\"I insist you spend the night with me. Tonight we've all been through much, and it will be good to see each other outside of this world of sex we created tonight. Please lay in my bed. I'm going to give you a few minutes alone, while I fix some chamomile tea for us,\" Dalilah stated then walked out. Her bed was a massive round fixture, that looked like it could sleep ten.\n\n\"I like her, and think she knows what she's talking about. Are you ok staying here for the night, honey?\" Katie asked.\n\n\"Not a problem. Think we may have to sleep naked, unless you want to put on the clothes we came in,\" I replied.\n\n\"Are you complaining?\"\n\n\"Nope. Just need to know that you are ok my love,\" I shot back.\n\n\"I'm ok. Well, I'm still processing it. Everything that took place I wanted. It took me to a high I never thought existed. There were times when I couldn't imagine ever doing what I did, and then sometimes I wanted more. It was crazy. The only trouble is I felt a bit out of control, and this leaves me unsure of whether I trust myself. Plus, I was really worried what I was doing would offend you.\"\n\n\"I'm a big boy. I would have let you know, and if at any time I felt you were doing something you didn't want to, I'd do anything to get you out of the situation.\"\n\n\"Yeah, when I saw you getting a third erection for the night while watching me get screwed every way possible, and with Rosie's help I realized you were fine, and it caused me to let go even more. Probably a bit too much. I may not be able to walk or sit tomorrow,\" Katie stated, as she wrapped her arms around my body, pressed her flesh into mine and leaned her head against my shoulder.\n\n\"It was hot, and Rosie didn't hurt the cause. Funny, she extended an invitation to us. In case we just wanted to play with her sometime or she offered to find more men if you'd like.\"\n\n\"That might be fun. I wouldn't want to do this frequently, but every so often it could be fun,\" Katie answered softly. \"I think Dalilah use to play with them, but stopped until tonight and my feeling was she's past them. Well maybe not Rosie. I understand that now. A few hours ago I wouldn't have.\"\n\n\"Can you explain that to me?\" I asked.\n\n\"No. It's just instinct or a sense I feel.\"\n\n\"Are you both ok?\" Dalilah asked as she returned with three steaming cups.\n\n\"We're all good,\" both of us responded simultaneously.\n\nDalilah set the cups down next to her bed, and pulled back the covers. \"Tonight, young man, two of the world's most beautiful women are going to sleep on either side of you. Remember this. It will be something you fondly recall fifty years from now. All of us, in bed now.\"\n\nWe chatted over the next twenty minutes as we sipped our tea. Each of us talked about our origins, careers and dreams. Dalilah was surprised by our intellectual side, and we by her revelation of being an international runway model. We probably should have recognized her. A later google search showed she was much more than a flash in the pan model, but had been around for almost a decade and was famous.\n\nIn the morning, I awoke early with the usual morning woody and a full bladder. I wormed my way out of the girls' naked bodies, crept into the restroom then returned a moment later. My delicious Katie was sprawled out and snoring. I eased back into position, and was a bit surprised when Dalilah turned around and greeted me with a smile and open eyes. Her hands caressed my face, chest and arms before dropping to my partially erect shaft. She brought my sore manhood to full erection, then rolled around and pressed her rear into me. I snuggled up against her, but wasn't sure what she wanted. A moment later I again felt her hand on my member as she guided me into her pussy. We made slow love in a spooning position and afterwards I drifted back to sleep.\n\nAn hour or so later I awoke to the ladies whispering. Dalilah's hands were exploring my wife's body who was expressing to her what parts wore sore. She departed to the restroom, and returned with a salve. She applied it liberally to Katie's vagina, gave her clit a teasing lick and climbed on top of her. The two began to expertly kiss, and it wasn't long before Katie seemed to want more.\n\nDalilah surprised her by rolling off and quickly sitting up. \"Katie would you like to fuck?\"\n\n\"Yes, you've got me horny again. I'd like to make love to you.\"\n\n\"How does this feel?\" Dalilah asked and eased two fingers into her.\n\n\"Good. Nice, and good,\" Katie answered.\n\n\"And what happened to you being too sore to screw for a week?\"\n\n\"It's gone. I'm ready,\" Katie whispered back.\n\n\"Remember what a little lotion and lust will do to relieve a well fucked pussy. I'd love to stay and use your body, but alas I have an assignment to report to in an hour so am in a bit of a rush. Instead, please keep this stewing in your mind, and think of the delicious things we can do on our next meeting.\" Dalilah then walked into her restroom.\n\n\"I think that's our cue to depart honey,\" I added.\n\n\"Would you like to have a little more fun?\" Katie asked me.\n\n\"Yes, but let's go home. I know we both have to work to tend to also.\" I got my wife moving, and we dressed. This time I wrapped her well in the red coat. Before ducking out, we said our goodbyes to Dalilah which involved a few provocative kisses. Just before we left, Dalilah checked her calendar and made a date for three weeks later. She was going abroad for a spell, and then wanted a week to clear out the \"shit in her brain.\" We kissed her goodbye, and made our way back home."
    ],
    "authorname": "wetwordmixer",
    "tags": [
        "group sex",
        "anal",
        "lesbian",
        "submissive",
        "straight sex",
        "fantasy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/taming-a-bitch-and-beyond-ch-02"
}