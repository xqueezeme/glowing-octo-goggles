{
    "title": "AProudMaleFeminist gets Creamed",
    "pages": [
        "\"So... why Ms CreamyTits?\" Parker Matland-Forbes asked.\n\nIt was the name on her adultwerk profile. All of her profile pics had also been focused on her chest and cleavage. Which, to be fair, was a damn good selling point. It was the reason Parker had decided to book her after all. And the reason she was here now, in his bedroom.\n\nHe was surprised she hadn't included pictures of her face on her profile as well. She had a gorgeous pixie-like face with big doe eyes. Her face was framed with a chic blonde bob that looked like a fashion throwback to more decadent times.\n\nOkay, so Parker could think of lots of eminently sensible reasons why she might not want to place pictures of her face on an escort site...\n\nStill, it was a pleasant surprise to book her and find the rest of her was just as gorgeous as her tits.\n\nShe didn't answer his question, at least not directly. She smiled demurely at him and then lifted her top up over her head.\n\nAh, there was the cleavage Parker had seen in the profile pics. The deep soft cleft between her lush, full boobs had caught his gaze and kept dragging him back to her profile over all the others. It was even better when seen in the flesh. Her skin was smooth, very pale\u2014almost milk-white pale\u2014and completely flawless. She was wearing a scandalously red frilly bra that contrasted perfectly with the pale flesh beneath.\n\nStrawberries and cream, Parker thought.\n\nHe nodded. \"Ha, I see it. They look delicious. Good enough to eat.\"\n\nShe gave him a shy smile and a sexy little twist as she shrugged off her dress. Her panties were as scandalously scarlet as her bra. She was petite and had a delicate figure, aside from her hips and chest, where she had the gorgeous, lush curves of a woman in her prime. Perfect womanly curves.\n\nParker looked at her and tried to think of a woman he'd seen with a better figure. He couldn't. And that included the women he'd seen in magazines and on TV.\n\nHe'd totally hit the jackpot here. Who'd have thought the shy young woman who'd arrived by taxi just ten minutes ago would have such a killer body hidden beneath her plain grey overcoat. The girl didn't even seem to realise how fine she looked. She looked shy and slightly embarrassed by her semi-nakedness.\n\n\"I don't suppose I could trouble you for a glass of water?\" she asked. Her eyes were big and misty blue.\n\n\"Of course,\" Parker said. \"Or I can do you a cup of tea? Coffee? Can of Coke? Glass of wine?\"\n\n\"A glass of water would be fine,\" she said, giving him a sweet smile.\n\nParker went down to the kitchen to fetch her a glass of water. Those two sentences were the only thing she'd said since confirming who she was when he'd answered the door. She seemed shy... inexperienced. If it hadn't been for the reviews she'd already picked up he'd have thought this was her first day\u2014night\u2014on the job.\n\nReviews could always be faked, he supposed. Not that it mattered. Inexperienced newcomer or experienced pro, in appearance she was everything he could have wanted.\n\nHe took the glass up to the bedroom and nearly spilled it at the sight of her standing, completely naked, by the corner of the bed.\n\nShe'd already looked amazing in scandalously scarlet lingerie. Her fully unclothed figure was something else.\n\nParker's gaze pinballed between the neat, shaven folds of her pussy to the delicate little pink nubs of her nipples. She was amazing. Fucking gorgeous. She looked way too good for her sordid little profession. Though, he supposed it wasn't her fault that the fashion industry only seemed interested in girls that looked like they'd been stretched out on a medieval rack.\n\n\"You look surprised,\" she said. And this time there was a mischievous glint in her eyes, the first glimmers she was a little more experienced than her doe-eyed act. \"Isn't this what you're paying for.\"\n\nIt was. And Parker was internally celebrating his decision to book an appointment purely on a couple of enticing cleavage shots. He'd definitely done well picking out this particular 'Ms CreamyTits'.\n\nParker passed her the glass of water and hurriedly set about removing his own clothes.\n\nThe girl put the glass down on the nearby chest of drawers without drinking. Parker suspected she wasn't thirsty and asking for a glass of water had been her excuse to get him out of the room so she could fully undress without an audience. Maybe her doe-eyed shyness wasn't completely an act.\n\nRemoving her last bits of clothing did seem to have increased her boldness. The naked woman in front of him seemed far more confident than the shy and reserved girl he'd answered the door to.\n\n\"You asked me, so now it's my turn,\" she said. \"Why AProudMaleFeminist?\"\n\nParker smiled. His username on the adultwerk website. She would have seen it in his contact details.\n\n\"Is it an irony thing?\" she asked.\n\n\"No no,\" Parker said. \"I wanted to make a statement. Most of the men on there are sexist pigs. I wanted to let women know I wasn't like them, that they didn't have anything to fear if I booked them.\"\n\nThe girl tilted her head and gaze him a quizzical look.\n\n\"So you're a proud male feminist... that books escorts and pays them to have sex with him.\"\n\nParker flashed her a rakish smile. \"I'm all about a woman's right to choose. I'm no SWERF.\"\n\nThe girl still looked nonplussed. \"I'm sorry. I don't follow a lot of the political stuff,\" she said.\n\n\"It's fine,\" Parker said. \"All you need to know is I fully support your right to do what you wish with your own body. Now get on your knees and suck my cock!\"\n\nParker smiled at her sudden expression of shock.\n\n\"Just kidding,\" he said.\n\nThe girl seemed less than convinced. \"So what would you like me do with my body?\"\n\nShe rubbed her hands over the firm curves of her lovely figure.\n\n\"Whatever you like doing.\" Parker answered.\n\nShe looked nonplussed.\n\n\"I'm a feminist,\" Parker said. \"That means I support a woman's choice to offer sexual services for money. But I also recognise the grossly skewed power dynamics at play here. My way of balancing it is to cede control to you in the bedroom. You can go on top if you like. I like it when the woman is on top. Feels right.\"\n\nFinally a laugh, a nervous one, from the girl.\n\n\"I can fuck you cowgirl style, if that's what you'd like.\"\n\n\"Sounds wonderful,\" Parker said. He was down to his boxer shorts and socks. He sat down on the end of the bed and flopped back on the mattress.\n\n\"There's something else I can do first,\" the girl said. \"If you want. It's sort of a speciality of mine. The other men liked it. Liked it a lot.\"\n\n\"Oh.\" Parker sat back up. \"Do tell me more.\"\n\nThe girl climbed up on the mattress and went down on her knees behind Parker. She placed hands on his neck and shoulders and began to knead and squeeze. Given her skittishness, Parker expected her touch to be clumsy and unskilled. Instead it was light and practised.\n\nSomeone had taken actual massage classes, Parker thought.\n\nGood classes, he amended.\n\nHer touch was gentle and he felt a pleasant prickle akin to static wherever she touched him. Her hands slid lower and around him. They roamed all over his naked chest. She leant into him and pressed her boobs against his back. He felt their round pressure\u2014like two soft sponge balls\u2014and the little nubs of her nipples at the centre of the them. With her arms wrapped around him, she began to rub her breasts against him in slow circular movements.\n\nThat felt... pretty damn nice.\n\nParker felt little prickles of static\u2014pleasant little tingles\u2014wherever her nipples brushed against him. The tingle spread up to his scalp. An ASMR, but triggered through touch rather than sounds.\n\n\"Men like my boobs,\" she whispered in his ear.\n\nThat didn't surprise Parker. Likely men so inarticulate the best they could manage while reviewing her was: \"Nice knockers. I spunked 'em. Spunked 'em real good.\"\n\n\"Men like it when I rub them all over their naked bodies.\"\n\nParker didn't really want to hear about other men and their naked bodies. Snappy words to that effect were already on the tip of his tongue before he had the presence of mind to bite down and swallow them. No. No. There would be time for that later.\n\n\"You know, that sounds rather pleasant,\" he said, forcing a smile.\n\nThe girl moved back to give him room to scoot backwards until his whole body was lying on the mattress. She knelt next to him and motioned for him to turn over.\n\nA sexy body-to-body massage? Why not. There wasn't any rush. He could be patient and forestall his desires for a little while longer.\n\nParker turned over and lay on his front. The mattress creaked and he felt her weight, not that there was much of it, settle on his buttocks and lower back. That weight spread out as she lay on top of him, covering him like a human duvet. She blew lightly on the back of his neck.\n\n\"I still can't get over you calling yourself AProudMaleFeminist,\" she said.\n\n\"I know. It is a rarity for any good man to be on that swamp of bad attitudes and misogyny,\" Parker said.\n\nThe girl shifted her body on top of him. She was surprisingly warm given the paleness of her skin. Her hands slid down his arms. She rubbed along his calves with the insides of her feet.\n\n\"And you are a good man?\" she asked.\n\n\"Most of the time,\" he replied. \"Except for nights like this, where I like to get really really naughty.\"\n\nShe started to rub her tits against Parker's back in slow languid circles. That felt really pleasant, Parker thought. He didn't know what it was about her breasts\u2014the weight, the elasticity, the smoothness of her skin, the feel of her erect little nipples dragging over his skin\u2014but they were intensely erotic in a way Parker had not experienced before.\n\n\"What drew you into this... profession?\" Parker asked. \"Please don't tell me you're here against your will and there's a big black pimp waiting in the car to slap you around if you don't get the money.\"\n\n\"No, I'm independent,\" she said.\n\n\"Thought so,\" Parker said. \"The girls I've booked before have been bored housewives and students looking for quick cash to pay off their debts. So, what is it for you... money or excitement?\"\n\n\"It's convenient,\" she replied. \"It's an easy way to... meet people.\"\n\nShe slid up Parker's back and pressed her big boobs against the back of his head. They felt like two big soft pillows.\n\n\"What about you?\" she asked. \"Why are you booking strange women off an escort website?\"\n\n\"A man has needs,\" Parker replied. \"Even a proud male feminist.\"\n\nThe girl slithered down his back. Her nipples traced a sensual, snaky path.\n\n\"And this way feels honest... uncomplicated.\" Parker continued. \"No games. Both parties know what they're here for\u2014no-strings sex.\"\n\nThe girl peeled down his boxer shorts as he spoke. As he said 'sex' her hand dipped between his legs and lightly fondled his balls. This was not a shy touch.\n\nShe pressed her ample chest down against his buttocks, squashing his erection up against the mattress. She traced mazy, sensual lines with her nipples all over his sensitive butt cheeks. She even pushed one warm globe of flesh between his cheeks and let his anus kiss a nipple.\n\n\"I'm surprised you're paying for it,\" the girl said. \"I'd have thought a man of your decent feminist principles would have no shortage of lovely young women wanting to partner with him.\"\n\n\"That's not how it works,\" Parker said.\n\nBecause humans are stupid and don't know what's good for them, he thought but didn't say.\n\nThe girl stopped talking and focused on rubbing every inch of his flesh with her splendid tits. It was like nothing Parker had ever felt\u2014slow, deliberate, intensely erotic. It was like his body was a canvas and she wanted to paint every square millimetre with her tits. Sometimes they felt like soft sponges. Other times it was a featherlight stroke of her nipples. The pleasant tingling sensation spread all over his skin. It was as if a powerful erotic charge was building within him.\n\nParker had expected to grow impatient with the urge to fuck her. Instead he wanted her to keep going, to let her luscious breasts explore and touch every nook, cranny and fold of flesh.\n\nBy the time she motioned for him to turn over, he didn't think she'd missed a single spot. He was tingling pleasantly all over and his manhood was tumescent and eager.\n\nIt still wasn't time for sex. She sat on his chest and smiled down at him. Then it was the turn of his face to feel her soft tits. She folded her body over him and pressed her bosom into his face. He felt the weight and softness of her tits against his cheeks. Her skin was so silky smooth. Parker twisted his face from side to side, relishing the feel of her tits bouncing against him.\n\nNot bad. Not bad at all.\n\nThe girl slithered down his front so easily he wondered if she'd also found time to apply oil to her naked body during the time he'd gone down to the kitchen to fetch her a glass of water. As she slid down she tucked his erection between her boobs and slid over it. She wiggled her bosom and waggled Parker's cock between her tits. She squashed it down with her chest and then slid down low enough for his erection to spring back up between the soft pillows of her breasts.\n\nThis was turning out better than he'd expected, Parker thought.\n\nHe thought about what was in the drawer under the bed.\n\nAnd the best was still to come.\n\nThe girl positioned herself between his legs with her tits resting on his crotch. Perfect positioning for a titwank. Smiling at Parker, she tucked his erection into her ample cleavage and began to rub her boobs up and down. The stimulation was... very pleasant.\n\nAlmost too pleasant.\n\n\"Not too much,\" Parker said. \"I want to save myself for the main event.\"\n\nThe woman gave a strange sigh. It sounded more like a sigh of relief than anything erotic.\n\n\"Phew. I didn't think I'd get a chance to do this. I didn't think you'd let me.\"\n\nShe twisted her nipples inwards and squeezed her breasts together, sandwiching Parker's hard cock between them. He heard a strange burbly, frothy sound\u2014like cream being squirted from a can. His erection was slathered in a warm creamy substance that sent a wave of pleasure surging through him. The girl pressed her tits together, squelching the indecently pleasurable substance around Parker's cock until he nearly whited out from the overwhelming bliss the sensation stirred up within him. His head flopped back on the mattress and he let out a surprised grunt. How he managed to keep from coming he had no idea.\n\nWhen he looked back up he saw the girl was still smooshing and kneading her lovely round tits around his cock. Frothy cream bubbled up out of her cleavage.\n\nIt must be her 'trick', Parker thought. She must have brought a can of squirty cream with her and squirted some between her tits while he wasn't looking. It was a good trick.\n\nIt felt so good Parker was even tempted to let her wank him off all the way. He suspected she got most of her sadsack clients with this\u2014promised them sex, then got them to spunk their loads all over her juicy big tits instead. Prozzies were crafty. You had to be careful with them. They tried all sorts of tricks to get out of actually fucking their johns.\n\nDespite this, Parker was still sorely tempted to let her wank him off. After all, he had plenty of time for proper fucking\u2014and other pleasures\u2014later.\n\n\"Now I see why you call yourself 'Ms CreamyTits',\" he said.\n\nThen he paused. A change seemed to have come over the girl. She looked strangely relieved, and also more confident. Certainly less skittish than she'd been before.\n\n\"This is my special... I suppose you could call it my finishing move. Once I land it my prey lose the ability to fight back,\" she said.\n\nShe let out a sigh of relief.\n\n\"Oh Da\u011fal Am\u0101, I've never been so scared.\" She smiled down at Parker. It was a strange smile. Utterly alien. \"It might seem ironic to you, that someone like me could be terrified of a mere human like you. It's supposed to be the other way around. But we're still mortal despite our other talents. We can die the same as anything else. And I'm not very strong.\"\n\nParker's brow furrowed. \"What are you blathering on about?\" he demanded.\n\n\"I assume the ropes in the drawer under the bed were for me,\" the girl said. \"The knives and hooks too. Were you planning to tie me up and stick them into my soft flesh.\"\n\nParker's mouth fell open. How did she...?\n\n\"You've done it before as well. More than once. I smelt the dried blood on the hooks.\"\n\n\"Who... what are you?\" Parker asked.\n\nThe girl shook out her hair. A dainty pair of horns poked up at the temples. The corners of a small pair of batwings emerged from behind her back. When she looked back at Parker he saw her eyes were the colour of fresh cream and no longer had iris or pupils.\n\n\"I'm a succubus,\" she said. \"Just not a very powerful one. Some of my kind can enslave a man with a single glance, or deprive him of all his will with a single blown kiss. Not me. I'm puny. You could have beaten me into submission at any time.\"\n\nAnd still could, Parker thought with a snarl. Then he attempted to sit up and realised he couldn't. His body refused to obey his commands. It was as if his limbs felt so relaxed and comfortable they just didn't want to move. \n\n\"Not now,\" the devil girl said.\n\nShe was still crouched between Parker's legs. She continued to knead and massage his erection between her creamy tits.\n\n\"My sweat contains a mild muscle relaxant. Like me it's not very strong. I have to rub it in all over a man's body and give it time to soak in.\"\n\nShe dragged Parker's cock deeper into her cleavage. She wrapped her tits around and pointed her strange nipples inwards.\n\n\"And then do this.\"\n\nParker heard more burbly squirty sounds. They sounded lewd and strangely indecent. His cock was enveloped in a warm froth of cream. The sensation was pleasurable enough to send his head crashing back onto the mattress. A surprised grunt of pleasure slipped out between his teeth.\n\n\"That should do it,\" the pale-skinned devil girl said with a smile. \"You had me worried\u2014terrified even\u2014for a moment there, but now you're mine.\"\n\nParker couldn't move at all. His body didn't want to. He felt too relaxed\u2014floppy like overcooked pasta.\n\nOne part of him that wasn't floppy was his cock. It was as hard as steel and throbbing as the succubus slid it back and forth between her cream-slathered tits.\n\n\"How does it feel to be paralysed by pleasure?\" she asked. \"That's how we like our prey\u2014all relaxed and docile while we feed. Most of our prey like it that way too.\"\n\nShe continued to knead and press the soft pillows of her tits against Parker's cock. The reveal of her true demonic nature hadn't taken the edge off Parker's arousal. If anything, he felt even hornier. Unnaturally so, as if a fire had been lit in his veins.\n\nThe succubus stoked that fire higher as she continued to plump her tits against his cock. She rubbed them up and down, letting his dick slide smoothly back and forth within her cream-lubricated cleavage. It felt incredible.\n\nShe was going to make him come.\n\nWasn't it bad if a succubus made you come\u2014like they sucked your soul or life essence out or something?\n\nYeah right. There was no way this demonic bitch was going to make him come. Not now he knew what she really was.\n\n\"The first cream is to put you under my control. This is to make you come.\"\n\nShe pressed her big tits together. Soft flesh smothered and squeezed Parker's erection. Her tits pulsed. Parker heard more of those indecent squirty sounds. Luxuriously supple cream welled up and enveloped his cock. The pleasure rose in a great wave and buried Parker's thoughts in a flood of purest white bliss. His head fell back. His hips bucked. He felt his cock throb with an ecstatic burst of release. He poured his semen into her cleavage.\n\nAnd poured.",
        "And poured.\n\nHis body bucked and writhed out of his control. Muscles in his cock and loins twitched, throbbed, then twinged from overuse as they pumped his semen up his shaft and into the delicious clutch of her breasts. Parker was so lost in the moment, he didn't even know how long it had been or how much he'd poured out between her tits. She must have drained the entire contents of his balls.\n\nWhen Parker finally came back down to earth, he found he was breathing as heavily as if he'd just done a vigorous gym session. He felt twinges in his cock and balls\u2014the muscles lining his tubes complaining at all the work they'd been forced to do.\n\nParker lifted his head. The succubus had her head tipped back with her eyelids fluttering. She let out a contented sigh.\n\n\"Mmm, the innocent ones taste sweeter, but yours has an interesting flavour all of its own. Dark. Bitter.\"\n\nThe succubus had made him come. Had she got his soul? Parker didn't feel any different. Maybe he didn't even have a soul. One of his playthings had accused him of missing one, while she was still capable of accusing him of anything.\n\nWouldn't that be a hoot. Look, no soul. Joke's on you, devil bitch.\n\nHer tits were still pressed together. He couldn't see his cock. It was hidden\u2014buried\u2014within. A froth of cream spilled out of her cleavage like the cream layer of a decadent cake.\n\nWere those boobs even larger? They were already generously large, but Parker would have sworn they'd jumped a cup size since he'd last saw them.\n\n\"This is as far as I go with my other clients,\" the succubus said. \"A nice little snack for me. A lovely big orgasm for them. I'm careful not to drain too much. Leave a trail of bodies and vengeful humans will eventually hunt you down and kill you.\"\n\nShe plumped her big tits together around Parker's still-hard cock.\n\n\"With you it's different. I don't have to hold back.\"\n\nShe pressed her hands into her soft tits. He felt the smooth flesh of her tits squeeze his cock. Her nipples squirted again...\n\n...and Parker's head fell back again as he was overwhelmed by a flood of pure white pleasure. He bucked and writhed in helpless bliss. His cock and balls throbbed ecstatically as he spunked big loads of cum into her smothering tits. The pleasure was incredible.\n\nThe aftermath... less so.\n\nThe girl sighed in bliss. Parker breathed heavily and let out a hoarse cough. As good as the moment had felt, now he felt awful. Weak... drained...\n\n\"This feels so good,\" the succubus said. \"To drink and drink as deeply as I'd like and not worry about the consequences.\"\n\nHer tits were definitely bigger. A fat girl's voluptuous tits on a Barbie Doll figure. They rested on and overflowed Parker's lap. His cock was still hard and erect between them, hidden within the creamy flesh and frothy cream. It felt weird as well\u2014hard and eager like time had been rewound back to before he'd emptied his balls in the biggest, whole-body-shuddering orgasm he'd ever experienced. It was the same for his balls. They felt itchy, gravid, and begging to be drained. Yet they'd already been drained... of more than Parker thought possible. His sex organs were stuck in the moment of pre-coital desire, while the rest of his body had to deal with the steadily worsening effects of over-exertion.\n\nIt was then he realised the existence or non-existence of a soul didn't matter. She was going to drink him all up like a vampiress sucking up all his blood. The realisation sent an icy spike of fear right through him.\n\n\"Stop. You don't have to do this,\" he pleaded.\n\n\"Did you have to kill those girls?\" the succubus said.\n\nParker paused.\n\n\"It was wrong,\" he said. \"I was weak. You don't understand the pressures men like me are under. If we don't get the girl we're less than nothing. 'Virgin'. 'Incel'. 'Loser'. Yet we're good. We listen. We're sensitive. And then the girls go off with some asshole ape who's going to treat them like shit. You don't understand how frustrating it is. It's not fair. I couldn't stand it. It's toxic masculinity. I'm just as much as victim in thi\u2014\"\n\n\"Oh shut up.\" The succubus cut him off. \"You can't lie to me. I've tasted you. I know the men you're talking about. I've let them pour their frustrations out between my tits. I've tasted their self-doubt and insecurities. Giving them a brief moment of sexual bliss is the one time I feel like I'm more\u2014better\u2014than just a hell-spawned leech. You're not one of them. They're lonely. You're just a creep who gets off on abusing others.\"\n\nShe pressed her tits together, harder this time. More of that exquisite cream squirted up around Parker's cock.\n\nEverything went white. His body contorted and writhed in the grip of another shattering orgasm. His thoughts were subsumed between a jumble of animalistic gratifications. He felt like he was flowing down into his penis, that it became the totality of his being. The soft pressure of her breasts enfolded the whole of him. He felt the throb around him like the beats of a great heart. Wrapped in total contentment, he poured himself between them.\n\nParker sucked in a great gasp of air like a drowning man surfacing in stormy waters. The pleasure and bliss he'd just felt was already slipping through his fingers like a lovely dream dissipates on awakening.\n\nParker felt awful. Weak. Shivery. His breath was ragged. It felt like his lungs were coming apart inside him. Other aches and pains let him know it wasn't the only organ.\n\nAnd yet his cock was still hard and eager as it was nestled between her warm tits. His balls still churned as if making semen was his body's sole remaining purpose.\n\nParker had a horrible feeling it was.\n\n\"Why should you care what I've done?\" he said. \"You're a demon. A killer. You're a predator, just like me.\"\n\nHis expression turned crafty. His true face.\n\n\"We shouldn't be preying on each other. You understand. We're alike.\"\n\n\"Then you know only one of us can walk out of this room,\" the succubus said.\n\nShe fondled her big tits and slid them around Parker's still-throbbing cock. Even stimulation as mild as this was enough to cause a pulse of pleasure to run through Parker. He released a little premature spurt between her breasts. The muscle spasms that followed were less pleasant.\n\n\"Mmm, my cream is all soaked in. One more little squirt and you won't be able to stop.\"\n\n\"This isn't fair,\" Parker wheedled.\n\n\"You're lucky,\" the demon said. \"A friend of mine hunts down men like you. Their deaths are not so pleasant.\"\n\nShe sighed and pressed her overflowing tits together. The flesh shivered. Parker's cock was flooded in creamy tingling bliss. Something snapped. His head was filled with bright shooting stars. His cock throbbed as he came and came in one final endless ejaculation. His thoughts collapsed in a jumble of animalistic bliss, and eventually that too faded and collapsed down into darkness as the succubus drained the last fluids from his body.\n\n* * * *\n\nThe demon got up off the bed. She put her clothes back on, struggling with her now increased bust size. She retrieved a phone from her purse and rang a number.\n\n\"Hi Nicole, it's me, Corene. I need some help. I ran into one of those clients you warned me about.\"\n\nShe listened to the person on the other end.\n\n\"No, no. It's okay. I'm okay. I've handled it... him,\" the succubus said.\n\nShe looked over at the bed. On it lay Parker Matland-Forbe's emaciated corpse. He looked like a concentration camp inmate or famine victim.\n\n\"Um... what should I do with the body?\" she asked.\n\nTHE END "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "devil girl",
        "escort",
        "cream",
        "paizuri",
        "titwank",
        "body-to-body massage",
        "big tits"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/aproudmalefeminist-gets-creamed"
}