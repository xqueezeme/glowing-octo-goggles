{
    "title": "Cat Fight Ch. 30: Family Final",
    "pages": [
        "TERMS \n\ntinton - 2 1/2 seconds \n\nspecton - 2 1/2 minutes \n\nToton - 2 1/2 hours \n\nminton - 2 1/2 days \n\ndaycon - 2 1/2 weeks\n\nMalant - 2 1/2 months \n\nquant - 2 1/2 years \n\ngalant - 2 1/2 centuries \n\nMetson - 2 1/2 inches \n\nmaclon - 2 1/2 feet \n\nheckson - 2 1/2 miles \n\ntetson - 2 1/2 acres \n\nunit - 2 1/2 ccs \n\nTac - 2 1/2 pounds\n\nMayan Terms \n\np'uchik - spank \n\nnohchil - Chief \n\nAhau - King \n\nk'aat - Claim\n\nk'iimil - Death \n\ntaak'in - gold\n\nCharacters \n\nBill Axor (AKA Ambrose) - Lion clan, Cit-Chac-Coh \n\nKing Tomco Traxor - Bill's dead father, Lion clan\n\nKing Tobias Traxor - Bill's dead brother, Lion clan \n\nQueen Trianna Axor - Bill's dead mother, Lion clan of Mandria \n\nQueen Niaco Traxor - Tiger clan, Tobias mate, now Bill's \n\nTwitty Glax - Grey Tabby clan, bill's body guard and mate \n\nGlenna Nox - Bengal clan, Bill's body guard and mate \n\nMikos Glac - Chartreux clan \n\nSkylos - Captain of Xendran star fleet - Wire hair clan \n\nHenna Glac - Chartreux clan, Mikos mate, Xendran Doctor \n\nTheta Panadon - Cheetah clan \n\nCornelius Glax - one of Bill's Uncles, Grey Tabby clan\n\nConrad Nox - Bill's other, Uncle Bengal clan \n\nAssassin group - Jaguar clan \n\nsecond assassin group - Ocicat clan \n\nTypree Maxor - Sub King of Mandria, Lion clan \n\nAdina Maxor - Paladin Princess of Xendra, Sub-princess of Mandria, Lion clan \n\nTimora - The great mother of the feline people, mate of first tribal leader \n\nHippacamp - Timora's father, father of modern Xendran doctors \n\nKindra - The Female half of the start of Ambrose's line\n\nKnights \n\nGeneral Roth - Leopard clan \n\nGregor - Cougar clan Gwayne - Panther clan \n\nThomas - Lynx clan\n\nPaladins - Female Knights \n\nWrena - Leopard clan, Roth's mate \n\nCetana - Cougar clan, Gregor's mate \n\nDawney - Panther clan, Gwayne's mate \n\nMileen - Lynx clan, Thomas's mate \n\n-----------------------\n\nAdina couldn't move, speak, or hardly even breathe at the news. Her mother? How was it possible? Looking at the female with her head bowed Adina started to shake hers. Looking closer at the woman, Adina had to admit the woman did resemble what she could remember of her mother.\n\nAmbrose stood there trying not to say anything to spoil the surprise. Looking at Adina, Twitty, and Glenna he could see that they all were in shock.\n\nTurning to Trilltana, Ambrose decided to break the growing silence. \"Though I have seen what and why all this happened, I thought you might want to explain.\n\nTrilltana's head snapped up as she gave Ambrose a look of almost absolute terror. \"I...I\" she started shaking quite a bit. \"Sire, I'm not sure I can. I feel such pain and shame when I think of this. Please Sire if you do, please go slowly.\"\n\nAmbrose's eyes were wide a moment then he nodded toward her. \"I can start for you Trilltana, though I cannot finish.\"\n\nTrilltana's eyes were wide a moment then she dropped her head nodding to Ambrose. \"I will try Sire, much of my past is at the least hideous to me. I am ashamed to reveal even half of it.\"\n\nAgain Ambrose nodded as his mates sat beside a shocked Adina. \"What I saw, when I briefly touched her mind, is a rather long tale. Apparently she and your father thought it best for her to hide. At the time her abilities were well known to many others. Unfortunately these others learned where she was to be waylaying her guards in the process.\" Ambrose looked at Trilltana who was slightly nodding her head.\n\n\"Wait, you mean father knew? Here I thought he loved me!\" Adina suddenly yelled.\n\n\"Wait, I'll try to explain,\" Ambrose stated causing Adina to quiet. \"Your mother has an extremely powerful ability. I do believe she tried to use it on me.\" Here Ambrose looked at Trilltana with a slight smile as she hesitantly nodded to him.\n\n\"I believe she can kill with her mind. This was sought after by a great many. Unfortunately,\" here Ambrose turned toward Twitty and Glenna, \"both of your fathers gained control of her.\"\n\nBoth Twitty and Glenna's mouths were hanging open as they looked at each other. \"I don't see how that is possible. I had a hand in everything how did he hide this from me?\" Glenna stated.\n\n\"I'd be interested in learning that also. I knew far more than I thought father knew about.\" Twitty said somewhat upset.\n\n\"Actually it was quite easy, considering she was kept on Talandia almost the whole time. Apparently she was in your father Cornelius's control most of the time.\" Ambrose told Twitty. \"Then it appears that the last quant and a half control went more to your father Conrad.\" Ambrose told Glenna.\n\nGlenna was nodding her head, \"That would explain the many trips out there as often as they did. I know they both had controlling interest in it.\"\n\n\"It was also apparent that my father knew, well perhaps part of it. Father and sub-king Milgon found out that she was being held here which sparked part of the war and subsequent battle here. I believe Uncle Milgon used his power to try and free Trilltana, a move that cost him his life.\" Here Ambrose paused seeing that this part of the story was causing Trilltana great stress, as renewed tears started to fall at the thought of her husband.\n\nTurning to face Trilltana, Ambrose told her, \"I can stop for now, I can feel how much this is upsetting you.\"\n\nTrilltana looked up at Ambrose, tears flowing down her face as she nodded a grateful expression in her eyes.\n\nThe whole time Ambrose had been talking a war of emotions had ranged across Adina's face. Slowly Adina had moved closer to the female who Ambrose claimed was her mother. Now almost touching the strange, small female Adina could only stare.\n\n[Cousin? Can she really be my mother?] Adina's thoughts came to Ambrose.\n\nBoth Twitty and Glenna's heads snapped up looking around the room. Then they both looked at each other. \"I swear I just heard a voice.\" Glenna told Twitty who was nodding her agreement.\n\nTrilltana stared at Ambrose a look of shock on her face as she whispered, \"Cit-Chac-Coh?\" Then a slow smile lit up her face as she nodded to Ambrose. Then she looked at Twitty and Glenna as even more realization struck home. Then she thought of both of their earlier comments about A Queen Niaco? Smiling even bigger she nodded everything was as she'd seen it years ago.\n\n------------------------------------------------------------\n\nIt was only about a toton later when they were coming up on Xendra. Skylos called Ambrose as he started their descent. \"I got an energy trail from another ship. It matched the one that got away from Talandia as we were starting our assault.\"\n\nAmbrose was nodding as he looked at the readings of the ship as it landed. \"Damn it! It has to be my coward uncle. As I thought he's heading for the palace. We need to hurry Skylos!\"\n\nA small look of panic came over Skylos's face then he bent to his task. Both Skylos and Twitty were adjusting as fast as they could, bringing the ship down far faster than they safely should. Screaming through the atmosphere they rapidly landed beside the other ship.\n\nRunning out the hatch Ambrose was disappointed when he saw no sign of his uncle. Roaring out his anger Ambrose took off as fast as his legs would carry him. Closely behind him followed Twitty, Glenna, Adina, and Trilltana.\n\nThe closer to the palace they got the more worried Ambrose became. Then they started to come across several guards that were lying dead or wounded. Cursing Ambrose pushed even harder feeling his lungs burning, his legs like rubber.\n\nUpon entering the palace Ambrose growled as more wounded met his gaze. Roaring out again Ambrose promised to end his treacherous uncle once and for all.\n\nSliding to a stop as he entered the throne room Ambrose growled low as he saw that his uncle had Niaco unconscious. Laughing Conrad sat on the throne as he pointed at him. \"So the bastard of my brother has returned.\" Ambrose took a step then froze as Conrad pressed a knife to Niaco's throat drawing a bead of blood. \"Uh, Uh, uh, my bastard nephew. Any closer we'll have to a right of secession.\"\n\n\"I would say I would gut you uncle, though I know you have none. You bring shame upon the royal house and name of our family!\" Ambrose said watching every move Conrad made.\n\n\"Yes, a royal house. By blood you only possess half of that.\" Tightening his grip on Niaco he snarled at Twitty and Glenna. \"Not another move you whores to the bastard pretender to the throne. I kill her, it's over I become king, though I will have to kill all of you also. Ha, nothing really you will fall as easily as she did.\"\n\nBoth Twitty and Glenna froze also their tails twitching furiously. Both had their teeth and fangs exposed as they growled menacingly. Conrad laughed at them also then went quiet as both Adina and Trilltana rushed into the room. Conrad quickly clamped a shiny metal cap on his head.\n\n\"So you survived you whoring bitch, sister to the bastard's mother. Another whoring bitch, I should have ended so long ago. I won't make the same mistake, this,\" here he tapped the shiny cap. \"is far better than the ones I used before.\"\n\nTrilltana reached out feeling the added protection Conrad had. Then she felt Ambrose's power start to climb far higher than hers was or had ever been. \"It's not me you need to fear.\" Here she pointed to Ambrose,\" my power is nothing compared to his.\" Here she bowed to Ambrose as she started chanting. \"Oh Cit-Chac-Coh! Please spare all of us here. We the faithful, spare us your terrible wrath when you destroy this defiler of your name and ideas.\"\n\nConrad's eyes bulged out as he looked at Trilltana then Ambrose. Then his laughter started almost to the point that he lost his hold on Niaco.\n\n\"You?\" He laughed pointing to Ambrose. \"The little cub who ran when there was the least bit of trouble. No, I cannot, will not believe that such a spineless coward could ever be Cit-Chac-Coh!\"\n\nHe continued to laugh as Trilltana continued to chant with both Twitty and Glenna falling to their knees. Then the both of them started, \"dear Cit-Chac-Coh do not destroy this planet. We are still true followers of you.\"\n\nThis of course made Conrad laugh even harder as he finally tightened up his hold on Niaco. \"Stop this ridiculous make believe as I said...\"\n\nThat's when he looked at Ambrose whose anger had gotten so great that his eyes were staring to glow. All of the tension, anger at himself and his uncle was starting to manifest itself physically.\n\n\"So coward, you of no honor. You feel you are better than all of us? I challenge you for the crown, the throne everything. If as you say you are better than all of us that is. What say you, you spineless, gutless coward?\"\n\n\"Hmmm, interesting proposal. I will warn you this cap protects me from all your and her powers.\" Then he looked at Adina, \"I am guessing that the young whore has them also. Being that she is the old whore's daughter. It's just a shame I never got to use her as I wanted to.\"\n\nTrilltana growled her tail moving to and fro with her anger. Staring at Conrad he only laughed harder at her. Letting out a whoosh of air she hung her head in defeat. \"I can't penetrate it.\"\n\nAmbrose looked back at her nodding his head, and then her eyes opened wide as did Adina, Twitty and Glenna's. Looking back at Conrad, Ambrose stated. \"So coward, what is your answer. Do you really feel you can beat me?\"\n\n\"Yes, I have thought it over.\" Activating a device on his wrist Conrad smiled a deep evil smile. \"There, I think that will allow us to finish this with no interference.\" Looking at the females behind Ambrose he stated. \"I suggest you get comfortable as I will kill you after I finish with this bastard pretender.\"\n\nTwitty and Glenna put a paw forward growling when the felt a small electric zap hit them from the force shield. \"A useful toy, no one in no one out 'til I am dead or I turn it off.\" Here he drew his sword growling. \"I'd bow though you do not deserve the honor.\"\n\nStepping forward far faster than Ambrose expected, Conrad smiled when Ambrose blocked his thrust. \"So you have had training, good then I might even get a decent workout before I gut you.\" With that Conrad make several rapid thrusts that were easily blocked and parried.\n\n\"You will find a great many things about me now to be far different than before.\" Ambrose said as he attacked with blazing speed.\n\n\"Oh ho,\" Conrad said as he blocked all of Ambrose's attacks. \"So the cub does have claws! Good then I won't feel cheated when I gut you!\" Conrad then lunged forward trying to slip past Ambrose's defenses. Ambrose smiled as he easily side stepped Conrad's attack surprising the male.\n\nFrom outside they all heard the sound of several ships landing then the sound of running feet. At the entrance they heard several gasps when they saw Ambrose and Conrad engaged in combat.\n\n\"Ah! Good your knights are here to watch their failure at training you as you fall. I will relish the looks on their faces at their total failure! Conrad stated as he tried to advance then was shocked when Ambrose's sword ripped the sleeve of his shirt. \"You bastard I will cut you to pieces!\"\n\nAmbrose smiled as for a moment Conrad swung wild or appeared to. Then his uncle stopped driving in with sudden speed almost catching Ambrose in his side.\n\nAmbrose heard the cheering of all four of his knights and paladins as he quickly deflected the blow. Smiling even wider Conrad started to move far faster than he has before. Almost amazed Conrad could hardly believe that his bastard nephew was blocking every blow.\n\nStepping back Conrad was about to attack again when he heard a voice that chilled him. \"So, you are finding that he is as good if not better than you.\" A hush fell over the room as an older Cougar Clan male stepped up to the energy screen.\n\nConrad's mouth dropped open as did all that were there. \"No! You are dead, I saw the reports and the body myself. You are a ghost Tonaco, go away, do not haunt this place. I am about to kill this bastard and take my rightful place on the throne.\"\n\nThe older Cougar Clan male started to laugh, \"You are no match for the skill he possesses. I trained him myself. Just so you know, the mind shield that you HAD on him is completely gone. All the knowledge, all the skill he used to possess has returned. You are far below his skill now. I tried to train you at one time, what was it you said. You were better than me so you didn't require it? Too bad.\"\n\n\"Ah! Tonaco I had hoped that you wouldn't be disturbed.\" Ambrose said bowing slightly to the Cougar Clan male.\n\nTonaco smiled as he dismissed what Ambrose had said. \"How could I not? You were one of my best, fastest learning students. Finish this so we can talk about your father.\"\n\nAmbrose smiled largely also as he turned his attention back to a still shocked Conrad. Conrad was thinking back to something the whore female had said when she was his prisoner, {Though I suggest you kill me now as I will kill you later.\" Here a smile crossed her features, \"that is after the true king rips both of your arms and legs off!} That wasn't going to happen, training by Tonaco or not!\n\nChanging his tactics Conrad slowed his attacks a bit gauging the skill that his bastard nephew had. Laughing a bit Conrad nodded to Ambrose, \"so you think you are better than me huh? We shall see. I have been at this for far longer than you have.\"\n\nAmbrose smiled, \"Just because you have been at it longer does not mean that you actually possess any skill. But I am sure that we will find out soon.\"\n\nIt was almost a whole toton later that both males were covered in a fine sheen of sweat. Both had small nicks and cuts though nothing major. Both had managed to block and parry everything that the other had thrown. Both were panting from the extended effort that they had been using to kill the other.\n\nNeither male was about to give as they kept going trying to outlast the other. Conrad smiled as he remembered a move that he'd seen on a battle field once. Shrugging he figured it should work his bastard nephew had only been in a few battles no where as many as he had.\n\nPulling his sword back Conrad threw all his strength into a head cleaving blow. Figuring he was moving far too fast he overestimated the move coming down beside Ambrose.\n\nAmbrose smiled as he whipped his sword up then down taking Conrad's left arm off continuing in an arc at the legs then back up taking the other arm. Now limbless Conrad was screaming at the top of his lungs. Reaching down to one of the severed arms Ambrose switched the force shield off.\n\nWhat was left of Conrad, bleeding, a sudden look of fear crossing his face as Trilltana walked up to him. Leaning down she whispered in his ear, \"I told you I would see you dead at my paws. That I would be the one that killed you after the king ripped your arms and legs off. For all the torture you and your brother gave me I wish I could make this last far longer.\"\n\nAmbrose turned as Trilltana drew a very sharp knife. She then carved the heart out of Conrad, even as he screamed louder then gurgled as he died with a bloody spray from his chest.\n\nAmbrose walked up to Trilltana seeing the blood lust in her eyes then it was gone. Nodding he held his paw pulling her up. \"It is finished; at last peaceful times can return to the realm.\"\n\nTrilltana looked up at Ambrose as she gave the heart of her tormentor to Ambrose. Nodding to her he bowed accepting her blood pledge. Sighing she thought now that the easy is done, here she looked at her daughter, then her son Typree who'd just arrived. She shook her head now the really hard part was about to start. That is if her children accepted her.\n\nTypree was talking to Adina, and then his head snapped up as he stared at the small yellow haired Female. \"WHAT!?\" Many could hear him shout as he started to move toward the small female.\n\nAmbrose stopped him as anger seemed to show on his face. \"Don't go to her in anger cousin. She has been through far more than any of us have had to bear. If you push her she will fade away again. It took all I had to get her to this point. As you did with your sister, go gently she needs it far more than you know, especially from you.\"\n\nTypree sighed then nodded as he walked to Trilltana. A moment later Adina joined him as they both threw their arms around the small female. Ambrose nodded as he walked to Niaco. Picking her up he held her close worried that she was injured worse than she was.\n\nLooking her over he sighed in relief then he felt her shaking a bit. \"Niaco are you alright?\"\n\nOpening her eyes she stared into Ambrose's. What she saw there made her sigh finally she thought I can see love in him! \"I am more than alright my king.\" She said as she shocked him with a deep kiss.\n\nSeveral of the religious leaders appeared a few totons later as per Ambrose's request. \"I have called you here to reveal something that our history has been wrong about. I and my Knights, paladins and two of my mates went into the past where our people came from. We have been told for many galants that we started on Xendra I know this to be a falsehood.\"\n\nThere was a great amount of gasping and yelling from almost all present. The high priest raised his hands to quiet all those there. \"It has been handed down through the ages that Cit-Chac-Coh himself helped our people escape from Tikal. It was said that he told all before he left Xendra in a thunderous voice a message. Only the high priest and a few others know what was said. Can you repeat it?\"\n\nAmbrose smiled as he sat back thinking about what he said. \"Yes, I believe he said, {Good people of the old city of Tikal. For a long time I denied that I was a god to you. That stops as of today we have to leave soon to return. Always remember that I and we are with you always. Though I cannot be here as I am now in the coming times, remember I am with you in all other ways. I wish for you to always continue and prosper. Always watch out for your kin as I hope this will become a place of beauty and justice. I will return again one day; always remember that I love all of you. Be well the people of Xendra live well.}",
        "The priest's eyes were large as he was slowly nodding. \"Two things were also said to the first of the royal line before and after this speech. May I ask if you know what was said?\"\n\nAmbrose nodded as he took a deep breath. \"He was wondering what more he had to do when he noticed Kinda waiting to talk to him. She called him Mister Kitty God, she then asked him if it hurt being a god.\"\n\n\"What was the reply?\" The priest asked.\n\n\"No dear Kindra, It is only lonely. When no one thinks of a god they can grow sad. It is a sad thing when no one remembers what that god did for its people it... He then thanked a shocked Kindra going to make the speech.\" Ambrose related.\n\nAgain the priest nodded, \"The last I ask though it isn't really possible for you to know. As Cit-Chac-Coh was leaving he said something to Kindra that made her sad though in the coming years gave her great strength to continue.\"\n\nAmbrose smiled again then a sad look came to his face. Looking at the priest and the others there Ambrose's eyes started to glow as he stated. \"I told her that I would always love her and would miss her across time. It made me sad to leave her.\"\n\nThe priest and all there suddenly gasp as they all bowed down to Ambrose. \"It is obvious that Cit-Chac-Coh chose you to help save our people. Great Cit-Chac-Coh please forgive us for getting so much wrong.\"\n\nAmbrose nodded as he smiled, \"Good as I told all so long ago, Always watch out for your kin as I hope this will stay a place of beauty and justice. I have returned again always remember that I love all of you. Be well the people of Xendra live well.\" With that his eyes stopped glowing as the priest and the others rapidly left to amend the history.\n\nWell Ambrose thought at least we got that settled. Waving his hand forward both the leaders of the two assassin groups appeared. \"I have returned all the lands that were once were yours and yours.\" He said to both groups. Motioning again a fiery red furred female was brought forward. \"As I promised; about the land and your daughter.\"\n\nThe leader of the Ocicat clan bowed to Ambrose as did the leader of the Jaguar clan. Henna appeared a moment later examining the still non working arm of the Jaguar clan leader's daughter's arm. Nodding she twisted it several ways as the young female showed great pain. Then Henna released it nodding.\n\nThe young female moved her arm astonished there was not only no pain also no stiffness. Thanking Henna, both clans left.\n\nTonaco, standing near Ambrose smiled then nodded. Then he looked over to Ambrose's mates, \"I think we shall have to talk later Sire.\" The male said as he nodded indicating Ambrose's mates. Sighing Ambrose also nodded motioning for Adina.\n\nAdina moved forward a look of surprise on her face. \"Cousin? Is there something wrong?\"\n\nAmbrose smiled slightly as Trilltana and Typree looked on. \"Adina Maxor, I claim you as my first, fourth mate.\" Adina stood there her mouth hanging open. A few moments passed then her brother nudged her. Whirling around she looked lost at him a moment then turned back to Ambrose.\n\nBowing low she then arose taking Ambrose's paw. \"Sire, my king, I accept and claim you as my mate also.\"\n\nWith a wide smile Ambrose nodded then thought as he looked at his three other mates, now if I could just get out of having to have kits. Then he was surprised as Niaco grabbed his paw pulling him to the bed chamber. \"I think it's about time we started making heirs,\" she said, a lustful look in her eyes as she closed the chamber tight.\n\nTypree was just leaving with his newly found mother when a soft voice stopped him. \"I was told by my Queens that you are in need of a mate.\"\n\nTurning to deny the statement, Typree was shocked to see the fiery red furred female daughter of the Ocicat clan. Even as he watched her spots seemed to glow with excitement. Leaning in close she whispered, \"I don't think we should try to go against OUR Queens.\" A big smile started to cross her face. Dropping his head in defeat he knew that the Queens had him.\n\nBehind him he could swear he could hear the giggling of Queen Twitty, Glenna and his sister Adina.\n\nFIN"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "body modification",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cat-fight-ch-30-family-final"
}