{
    "title": "The Pulse Pt. 03",
    "pages": [
        "I slept the sleep of the righteous which is nothing like how I would describe myself.\n\nI had, or at least thought I had, a fairly solid moral compass. I wasn't a Christian but many of those values made sense to me and I had been brought up that way. But it seemed as soon as my dick became involved any moral thoughts flew out of the window.\n\nPart of it, I'm sure, was my lack of dating experience. I had no idea what the rules were. I had no understanding whether dating three girls and fucking one of their mothers on the side was deemed to be acceptable behaviour. Maybe in two countries in the world. I'm guessing not in Basingstoke.\n\nMy love life had gone from nought to sixty faster than a porn stars on fast forward and I had no clue how to deal with four attractive women who all seemed to want to be with me in some form or another. Just thinking of last night left me with a rock hard cock as I tried to get through the shower without masturbating. I failed dismally as I replayed the hot scene with Celia and then the amazing makeout session with Jennifer.\n\nMy emotions were as much of a jumbled mess as the table of threads in my mind. I had no idea if I loved any of these women. In fact I felt slightly differently about all of them. Don't get me wrong I fancied the pants off all of them. But it was more tender with Jennifer. Her mother was using me for her own pleasure and so far that had felt pretty good. Fiona felt closer to being a friend than any of them and I felt weirdly protective about Tina.\n\nWho knew that I'd even be having these thoughts two weeks ago. Two weeks ago I was a virgin nerd at the bottom of the social heap just desperate to make it through school.\n\nNow?\n\nWell now I was no longer a virgin for one thing. I suddenly felt like a man and I wanted to trumpet it from the rooftops. Every pre-programmed fibre of my teenage being wanted to tell the world just how full of testosterone and sperm I was. Reality hit pretty quickly as I realised that I wouldn't be telling anyone about this.\n\nNo, What I needed to do was figure out what to do with my problem. A problem that, let's face it, most guys would kill to have.\n\nIn theory this stuff was quite simple. Tina hadn't actually said anything about us going out. But her body language was saying something else entirely. And those tits! But I could go to the concert, say nice things about staying friends and we should be good.\n\nFiona was a different issue. For one she had a permanent job at the garden centre and while I'd hopefully be heading to university soon I really wanted that job to be there for me over the holidays. So do I cool things off with her before they get going? Do I just date and see how things go? We had a great time when we went out and I didn't feel awkward at all because I already knew her to chat to. Who knows, I may have a whole lot more in common with her than I do with Jennifer.\n\nBut Jennifer had always been my ideal. My dream girl. And she was interested in me without me doing anything to influence her outside of getting the police to arrest the toerag that was breaking into her house. And we had gymnastics in common and she seemed to view me as a friend. That was really meaningful.\n\nBut how much of a friend would she consider me if she found out that I was getting a large helping of Celia Sawyer on the side?\n\nWhy is this relationship stuff so damn complicated?\n\nAnd all of this is without considering the impact of my powers. In theory I could make all the problems go away by influencing them to do whatever the hell I want. In practice I knew that I wouldn't be able to live with myself. I was already suffering from guilt over not releasing the link to Mrs Sawyer but she was so damn hot!\n\nMaybe that was the answer? Remove the link? But what if she somehow blames me for having sex with her once the link is lifted? It didn't seem to affect Fiona but then she didn't have the link in place as long as Fiona. Does that have an effect on the individual?\n\nThere were so many unknowns. So in tried and tested fashion, I pushed them to the back of my mind and went down to get breakfast.\n\nA reminder of my powers was in place even here.\n\n\"Hey, son.\"\n\n\"Morning Dad.\"\n\n\"These property details just arrived in the post. I wanted you to take a look and see what you think.\"\n\n\"Property details?\"\n\n\"Yes, for me to move out.\"\n\n\"But you and mum have been getting on great over the last week or so. Are you sure that you should go ahead with this?\"\n\nThey both looked at each other, then back at me and at the same time said:\n\n\"Yes.\"\n\n\"It is a big step but I know that we'll all be in a better place once we do this. And it's not like I'm moving a long way away. Plus you're off to university soon and will doubtless end up moving out in a few years.\"\n\n\"True.\"\n\n\"Anyway, take a look at the details. I'd like your opinion.\"\n\n\"OK.\"\n\n\"By the way, how have your exams been going? It's a big one today isn't it? Biology?\"\n\n\"They've been OK. Chemistry was tough but I think that I got through it alright. And yes, Biology today. I really need to ace this one as it's the strongest of my subjects.\"\n\n\"You'll be great. All that studying time will pay off. How was Jamie by the way?\"\n\n\"Jamie?\"\n\n\"Yes, Jamie. Weren't you round at his place studying last night?\"\n\n\"Oh Jamie. Yes, Jamie's great thanks. I think he has a date too with one of the girls from school.\"\n\n\"Wow! You're all growing up so fast,\" said his mother, but she had a calculating eye on me as she said it. She knew full well that I'd avoided the question. Dad, however, was never that perceptive.\n\n\"Fantastic for him. He's such a nice lad.\"\n\n\"Oh, and I've been invited to go to a concert in Reading in a couple of weeks.\"\n\n\"Look at you! Quite the social butterfly! Is it after exams?\"\n\n\"Yup, on the 28th.\"\n\n\"That's great. Who is it with?\" my mother asked.\n\n\"Oh, the band are called Muse. I'm not sure if you've heard of them.\"\n\n\"That's not what I asked, young man.\"\n\n\"Err...it's with a girl called Tina.\"\n\n\"Tina? Not Fiona?\"\n\n\"No, Mum. Tina's a big fan of the band and her best friend can't go and when she found out that I was a big fan too she asked me if I wanted to go.\"\n\nI babbled it out.\n\n\"So she asked you?\"\n\n\"Uh huh,\" I grunted through a mouthful of Shreddies.\n\n\"Hmm. And does she know about you and Fiona?\"\n\n\"She does. It's not a date. She gets a lot of attention from guys so I'm going along to help prevent that so that she can have a good time. Plus we both love Muse so it should be fun.\"\n\n\"This isn't Tina Lathan by any chance is it?\"\n\n\"Err...yes.\"\n\n\"Hmm,\" and my mother put a world of meaning into that sound. Within it she somehow managed to sum up all of the moral issues that I'd been thinking through. And this was with only knowing about two of the girls!\n\n\"Mum, it's just a concert and someone else that likes the same sort of music that's all.\"\n\n\"Well just you make sure that you don't lie to any of these girls do you hear me? You're a good looking young man with a decent brain, even if you've only just figured some of that out. Just be upfront with people, they'll appreciate it.\"\n\nI looked down into my cereal and just nodded.\n\n\"Hmm. Is that your second bowl of Shreddies?\"\n\n\"Third.\"\n\n\"What has got into you lately?\"\n\n\"Sorry.\"\n\nI bolted the rest of my breakfast and rode down the hill to meet Jamie.\n\n\"So. Tell me all or I will be madder than Mad Jack McMad, the winner of last year's Mr Madman competition.\"\n\nI flushed and looked a bit embarrassed, totally unused to having to talk about stuff like this.\n\n\"It was good. She's really nice.\"\n\n\"And that's your version of tell all is it?\"\n\n\"Look, we ate too much pizza, chatted a bit and then studied for the exam. She's a really good study partner. And...\"\n\n\"And...\"\n\n\"And we may have kissed a bit.\"\n\n\"DUDE! You couldn't have led with that bit? So are you an item now?\"\n\n\"I'm not sure. I...I think so.\"\n\n\"But what about Fiona? I mean talk about the luck of the Irish. Two super hot girls both want you. I mean, you're not bad to look at but Jennifer and Fiona?\"\n\n\"Keep your voice down Jamie. You absolutely cannot tell anyone about this. If she's ready then she can tell people but this was just one study session OK?\"\n\n\"You're a torturer, you know that? Huge gobs of juicy gossip and I can't tell anyone? Man!\"\n\n\"Well what about you and Susan? Are you guys going out?\"\n\nIt was his turn to look embarrassed.\n\n\"You guys already went out, didn't you? Last night before the exam. And you're having a go at me for withholding information!\"\n\n\"It was just a chance to get to know each other without anyone else around. We went to the old ice cream parlour up on the estate. It's a bit quieter since the new place opened in town and we just, sort of...ah, I don't know. It was nice.\"\n\n\"Hah!\"\n\n\"Oh, OK, you got me alright. We had a good time but I still did my work. Come on or we're going to be late for this thing.\"\n\nI locked up the bike in the bike shed and crossed the playground to the main entrance. The rugby crew were over by the science block, up to who knows what but they were leaving me alone. I checked and the five gossamer threads were still there. For the first time, maybe because there were five of them, I felt...I don't know...some sort of pull in that direction..? It was only very slight but it was definitely there.\n\nI puzzled on that as I made it through to the hall to sit my exam. Jamie was a few people back from me but gave me a wave as he sat down, and Jennifer had already set up her things on her assigned desk in the far corner. I saw her look around, catch my eye and then just very briefly touched her lips with her finger.\n\nIt sent a sensual tingle through me. Trying not to be too obvious I casually touched my lips with a finger too before pulling all of my exam stuff out of my sagging, gaffer taped bag.\n\nThe exam went surprisingly well. Last night's study session was so indelibly ingrained in my brain that I had no trouble with the core parts of the exam, and even thought that I had made a decent run at the more obscure parts of the paper.\n\nAs we exited the hall and started to drift away for lunch Tina bounced up, quite literally.\n\n\"Hey Jake! How did it go?\"\n\n\"Not bad, thanks Tina. A lot of it made sense which is a good sign I think. Did you have an exam this morning?\"\n\n\"Nah. I was doing revision for tomorrow with a couple of friends. Not exciting but, you know...\"\n\nI nodded.\n\n\"So, did you check the date for Muse? Can you come?\"\n\n\"Err...yeah. I had a look and I'll have to run a bit to finish work and then come and pick you up but I can be there.\"\n\n\"That's awesome!\" And she threw her arms around my neck and squeezed me half to death.\n\n\"Mmmfff!\"\n\nBy the time I'd managed to extricate myself from her embrace I just had time to see Jennifer walk past staring daggers at me.\n\nShit.\n\nShe disappeared into the crowd heading for the dining hall and left me with a giggling Tina.\n\n\"So do you want to get some lunch?\" she said.\n\n\"Err...thanks but I brought my own lunch in. Plus I've got some stuff going on at home at the moment so I don't think I'd be the best company.\"\n\n\"That's a shame. Want to talk about it?\"\n\n\"Thanks Tina, maybe sometime but not right now.\"\n\n\"Oh, OK. Well, see you guys.\"\n\nAnd she headed off with most of the male eyes in the playground watching her go. Most of the male eyes then turned to me and wondered what the hell I'd done to get her attention.\n\nAnd then there was me, totally depressed.\n\nI looked around for Jamie but he'd caught up with Susan and was heading for the dining hall. Fuck my luck. I headed for my usual spot and settled on to the grass to wallow in my misfortune.\n\nThe biggest frustration was that I hadn't done anything wrong. Tina might have other ideas but I just wanted to see Jennifer and tell her that last night meant something to me. That she did have a friend, and more if she wanted it. Seeing her walk away from me physically hurt and I'd never been more tempted in my life to reach out with the Pulse.\n\nI looked inside myself, trying to learn more about my powers. The familiar view of a slowly spinning ball of multi-coloured threads appeared in my mind and I looked closer than I'd ever done. I focused in, looking all around the ball of threads. I couldn't continue to call it that, it sounded like a cat toy. My mental toolkit? Yuck. My Sphere of Sensations? No. My Orb of Power? Hmm. Now that had a ring about it.\n\nI looked more closely at the Orb and noticed for the first time some ethereal threads leading up from the orb and fading slightly into nothingness. There were six and they were all blue. I isolated one of them and tried to see where it went.\n\nOne of the purple threads that I'd split was near the top of the Orb. Guessing that I'd need it I reached and Pulsed. I randomly chose one of the faint blue threads and with a blur of purple power I slid up and along the diaphanous blue thread. I found myself leaving my body and almost surfing along the thread. It didn't go far. It ended up linked to Brian Edgerton, one of the rugby guys.\n\nHe was smoking behind the science block with the young janitor and some of the rest of the rugby team.\n\nAnd I could hear him!\n\n\"...you're right she is fucking stacked man.\"\n\n\"What I wouldn't give to get with that! Can you imagine the tit jobs you'd get from breasts that big?\"\n\nAnd it looks like I could hear what the person that I was linked to could hear. Wow!\n\nThis came from the new janitor. I think that he used to go to school here and had bummed around a bit before getting the job here. I think the plan was for him to learn the ropes from the popular old guy before he left next year. He didn't seem to do much though. I think he was called Adam but I couldn't remember.\n\n\"Yeah,\" from Ruben Swift. He was probably going to be repeating the year as he had no chance of getting any qualifications from what I could tell. In theory he was doing Biology but I hadn't seen him in the exam. He was absently squeezing his cock through his trousers.\n\nChris Waite looked at Ruben with disgust before taking a drag on his rollup cigarette.\n\n\"There's nothing stopping us is there?\"\n\nIt went quiet for a while. The ape continued:\n\n\"She's a music geek right? I bet there's all sorts of places where we could have a bit of fun with her. Particularly if the exit door happened to be locked right Adam?\"\n\nThe evil gleam in the janitor's eye made me feel dirty just looking at him.\n\n\"But how would we get her to stay behind?\" said Brian.\n\n\"Isn't your younger brother in her class Adam? Just get him to tell Tina that...\"\n\nAt that moment a hand clapped me on the shoulder, snapping me out of my reverie. It was a deeply unpleasant feeling to suddenly snap back into my own consciousness.\n\n\"Hey, are you alright?\"\n\nIt was the Head of Maths, Mrs Thorne.\n\n\"You looked a bit zoned out there. Everything alright?\"\n\nI'd always liked Mrs Thorne. Her heart was in the right place and I managed not to snap at her for pulling me away from eavesdropping on those arseholes.\n\n\"Yeah, fine thanks, Mrs Thorne. Just lots going on at home. My parents are getting a divorce.\"\n\n\"Oh Jake. I'm really sorry. Tough times, I know having been through it myself.\"\n\nShe flicked an imaginary speck of dust off her skirt, the anger, presumably at her ex-husband, still must have been very near the surface for her.\n\n\"Thanks. It seems to be mostly amicable but it's a bit of a shock.\"\n\n\"Well, you know where I am if you want to chat. Come on, lessons will be starting soon.\"\n\nI pulled myself upright. I tried to respond to Mrs Thorne's reassuring conversation but my brain was going at a thousand miles an hour. Did they mean my Tina? Well, not -my- Tina, but who else could it be? She was studying music and she did have epic tits. Shitshitshitshitshit!\n\nWhat should I do? I didn't even know when they were planning to do this? Today? Next week? And how do I explain how I know?\n\nAs we came up to class and we were about to go our separate ways, I suddenly had a thought.\n\n\"Mrs Thorne? The new janitor Adam, looks vaguely familiar. Did he used to go to school here or something?\"\n\nShe looked slightly surprised by my change of tack.\n\n\"Well, yes.\"\n\nHer lips pursed and that flick of the skirt again. She definitely disapproved.\n\n\"He did attend the school I believe. His brother is here now. A very nice lad. William Keane. He's doing very well.\"\n\nKeane. Adam Keane.\n\n\"Thanks Mrs Thorne. I'll see you later.\"\n\nShe nodded and headed off towards the Maths block. I just made it to my Chemistry class and spent the majority of it trying to figure out what to do. Using my powers was obvious but I really didn't want to announce myself to the world and turn up like fucking Superman or something. In all likelihood they experimented on people like me, that is if there were other people like me..? That was a totally different rabbit hole which I refused to go down.\n\nWhat to do?\n\nI quite literally had the power to stop this but how could I do it without exposing my powers?\n\nThe safest option seemed to be to get Tina out of the way. I'd just have to come up with some excuse as to why she shouldn't be there. Worst case I could hint at some sort of date..?\n\nWay to make things more complicated Jake.\n\nThe afternoon passed uneasily until school finished at 3.30pm. I hung around the school gates looking for Tina and was completely ignored by Jennifer who crossed to the other side of the street to get as far away from me as possible. Thankfully I managed to catch Jamie as he came out of Physics class.\n\n\"Hey Jamie.\"\n\n\"Hey Jake. You not got your bike yet?\"\n\n\"No. I was wondering if you'd seen Tina.\"\n\n\"Nope. Not since lunchtime. She was talking non-stop about some music project that she has going on. I didn't really pay too much attention. Now Susan...\"\n\n\"Jamie. Do you remember if she was doing anything there after school today?\"\n\nHe caught my urgency and looked a bit puzzled.\n\n\"I don't know. Like I say it was all rehearsal this, and choosing songs that. I lost interest. Why? What's the rush?\"\n\n\"Oh...I just need to talk to her about something.\"\n\n\"Jake in-rush-to-talk-to-hot-girl-news-shocker!\"\n\nI laughed in spite of my mood and escalating worry.\n\n\"Well, I'm going to see if I can find her before heading off.\"\n\n\"Do you fancy coming round for a bit of Maths cramming tonight?\"\n\n\"Yeah, that sounds good. See you at about 7pm?\"\n\n\"Perfect.\"\n\nThe flow of other kids started to slow and still with no sign of Tina I couldn't help it.\n\nPulse.\n\nI reached for a thin purple thread and focused on Tina. I immediately shot up and out of myself, high over the school music block. Just before I sank through the roof I saw Adam Keane, the janitor, furtively looking round as he locked one of the emergency doors with a padlock from the outside.\n\nFuckingfuck.\n\nI arrived inside one of the practice rooms in the music block and found Tina with an enormous pair of headphones on, apparently singing along to something. Frustratingly, I couldn't hear anything.\n\nI quickly looked around and everything looked fairly normal. But if Adam was locking the fire exit at the end of the corridor then it wouldn't stay that way for long. A younger kid came into the room and tapped Tina on the shoulder. She turned and smiled, as she obviously knew him. He seemed to stumble over something that he was saying and then she sighed and got up from her chair.\n\n\"Don't go!\" I shouted.\n\nIt had no effect. She headed for the door. I just didn't know enough about what I was doing and what I could and couldn't do.\n\nI was totally torn, unable to decide whether to keep watching in case or to rush in and try and do...what? The need to take action was too much and I detached the thread and dashed for some cover around the side of the bike sheds.",
        "Looking around quickly I made sure that the coast was clear.\n\nPulse.\n\nRed power flowed through me and I half-ran and half-jumped at a ridiculous speed around the back of the school blocks. Thankfully they backed on to woods. I just had to take the chance that most other people had gone. The music block was on the other side of the school and I ran as hard as I could.\n\nAs I came to the science block I realised that some of the classrooms still had people in them. I pushed both feet into the tarmac and jumped for the roof of the three storey block. Not knowing how much power to use I almost undercooked it and just scrambled up onto the brick edge of the flat roofed building.\n\nI was across the science block in seconds and over on to the roof of the music block before skidding to a halt at the edge unsure quite what to do to get down again! I took a deep breath and jumped from the rooftop, down the three stories and used my power to cushion the fall. It felt just like a gymnastics roll as I came up by the padlocked back door.\n\nPulse.\n\nI forced red power through the padlock. It held for two seconds before bursting apart with metal flying in all directions.\n\nI rushed down the corridor towards the music hall and heard a girl scream,\n\n\"Help!\"\n\nI ran to the door which was still shut and forced myself to stop.\n\nPulse.\n\nI reached for the blue threads that linked me to the ape and his cronies. I blended purple and immediately I was in the next room. Two of the oafs were waiting either side of the door, holding chairs as improvised weapons. The noise of the padlock bursting must have alerted them that something was wrong.\n\nWaite had Tina's wrists in a tight grip and was pulling her forwards across a desk. Her face was bruised and tears streamed down her face as she looked in desperation towards the door. Her blouse had been torn off her shoulders and was in rags. Her enormous tits were mashed against the desk and her skirt was thrown up exposing her jiggling arse. Her panties had been used to tie her ankles together.\n\nBehind her stood Adam with his trousers around his ankles and his dick out.\n\nThe two other members of the crew didn't seem quite as into it and seemed unsure about how far things had gone.\n\nPULSE.\n\nI drew all five threads together and forced blue power into the heads of these excuses for human beings and then... pulled.\n\nWaite and his cronies simply fell to the floor.\n\nIn a blaze of anger I pulsed green and put the most nightmarish creation I could imagine right in the face of the janitor. It was mixed parts of the Alien monster, a tentacled monstrosity and a dash of flaming dragon thrown in. I had it dominate all parts of his vision, slashing at his eyes and tentacles crawling into his mouth, nostrils and ears. Every one of them was on fire burning into his skull as my petrifying creation appeared to devour Adam whole.\n\nHe started screaming blue murder. Tina looked back over her shoulders at him and fainted. He soiled himself and with his trousers around his ankles and his cock sticking out he ran headlong into the wall knocking himself out.\n\nI looked around the room at the devastation that I'd caused. I surveyed the mess and staggered slightly under the sheer expenditure of power.\n\nI gritted my teeth against the migraine that was threatening to split my head open and went to go and help Tina. I untied her feet and pulled her panties back up her legs and over her rather beautifully voluptuous rear end. As I did this she stirred and jerked away from me, throwing her fists at me and shouting,\n\n\"NO!!! Please No!\"\n\n\"Tina. You're safe. It's Jake. You're safe.\n\nShe turned her teary eyes towards me. And then looking around the room and seeing all of her torturers flat out on the floor, she threw herself into my arms, shaking and crying with relief.\n\n\"Oh Jake! I was so scared.\"\n\nI held her until the tremors running through her body had calmed down and then I gently sat her down on a nearby chair.\n\n\"You need to wait here Tina. You're in no state to go outside. I need to find a phone and call the police.\"\n\n\"You can't leave me!\"\n\nI went over to a rack of instruments and picked an electric guitar up.\n\n\"Here. If they move a muscle then hit them with this. I'll be two minutes.\"\n\nTina took the guitar and stood there in glorious disarray looking like some Anime character. Her hair was messed up, her makeup streaked down her pretty face. Her school shirt was just rags around her shoulders, her bra snapped and broken on the floor, and her amazing breasts standing proud in front of her as she held the guitar like an axe. She looked like every teenager's idea of the goddess of rock.\n\nI drank in the view for a little too long and then blushing I turned away and ran off to find the phone in the department heads office.\n\n= = = = = = = = = = = = = = = =\n\nThe police sergeant looked at me long and hard. She was understandably skeptical that one person, even with the benefit of surprise, could manage to incapacitate six other people, scaring one of them so badly that he soiled himself.\n\nThe scum happily weren't any help.\n\nWaite and the other would be rapists were struggling to even form words. I had essentially stretched their brains, pulling their thoughts and learning pathways into a jumbled mess. They may or may not recover and to be honest I didn't care. Anyone that was a party to that could go to hell as far as I was concerned.\n\nAdam Keane was a special case. He had quite literally gone mad. He jabbered on and on about the fire and the tentacles and the burning.\n\nIt was the same police woman that I'd seen at the assembly who had investigated the assault on Harry Youle. The headmaster was in the background doubtless worried about the PR disaster that was about to hit the school.\n\nSergeant Tolbert looked at her notebook and read my testimony.\n\n\" 'I heard screams from the music block as I was passing and ran to the door. I ran down the corridor and seeing my friend Tina in serious danger I neutralised the threat.' That's it is it?\"\n\n\"Pretty much yes.\"\n\n\"And how exactly did you 'neutralise the threat' without getting a mark on you from five, first fifteen rugby players?\"\n\nIt was the third time that she'd asked me the question and I simply had no idea what to say. I started to panic and then for the first time in a while it happened without me reaching for it.\n\nPulse.\n\nAnd without stopping what she was doing she began to speak, adding to my testimony in a monotone voice.\n\n\"When I kicked open the double doors, two of the attackers were knocked out by the forceful impact. I used the broom near the door to sweep two of the other attackers off their feet. They banged their heads and were knocked unconscious. The attacker by the desk had got up but tripped and fell over the girls bra, knocking himself out and the attacker in position to rape the victim was so scared that he soiled himself and ran into the nearest wall, also rendering himself unconscious. You then comforted the girl and called the police.\"\n\nI seemed to have tapped into her experience and she had pulled together the only semi-reasonable theory as to how I could have pulled this off.\n\n\"Well, that seems to be in order. Thank you for your cooperation and bravery in saving that poor young girl. You're free to go.\"\n\nShe then got up and moved over to the door of the practice room that she'd been interviewing me in and held it open for me. By now my head was pounding and I badly needed sugar, food and rest in that order. I severed the blue thread to Sergeant Tolbert and my headache receded slightly.\n\nI headed back out through the hall, surreptitiously leaving fingerprints on the broom handle as I went past and headed out of the main door.\n\nThere was an ambulance outside and sitting on the tailgate was Tina. Some kind soul had given her their jumper. She sat with her arms wrapped around herself. She looked quite pale and was unconsciously biting at her lower lip.\n\nAs soon as she saw me she rushed over and threw her arms around my neck, hugging me for all she was worth.\n\n\"Thankyouthankyouthankyouthankyouthankyouthankyouthankyou..\"\n\nShe just kept repeating it over and over. I held her tight and then slowly shushed her.\n\n\"I'm just glad that I was in the right place at the right time, Tina. Aren't you going to let the paramedics make sure you're alright?\"\n\n\"She wouldn't let us do anything until you came out mate. Nice lass that,\" said one of the paramedics.\n\nTina blushed and finally submitted to their checks all the time insisting that she was fine. I waited for her and once we were past the police lines I saw my parents waiting and I assumed other parents of those that had been involved including what looked like a reporter.\n\nMy Mum grabbed me in a huge hug.\n\n\"Thank God you're alright! They said you were OK but it's been such a long wait. We were really worried.\"\n\n\"I'm OK Mum, honestly. The police needed to do their job. I'm just really tired. Can we go home now?\"\n\n\"Of course, love.\"\n\nWe turned to go and found Tina's father standing waiting for us. He thrust a meaty hand forward and through his attempt to break my hand tried to convey how grateful he was.\n\n\"I...we...can't thank you enough. If anything had...\" and he choked up.\n\n\"You're welcome Mr Lathan. I'm just sorry that something like that could happen.\"\n\nHe drew himself up to his full height and cleared his throat as he fought for control.\n\n\"The headmaster will be hearing from us. My older daughter had run in's with that Keane a few years ago. I'm stunned that he made it past any of the checks they have for new employees. My lawyer will be in touch with the school you'll see.\"\n\nTina came over then, very obviously wanting to hug me but restraining herself in front of her parents.\n\n\"I won't be in school tomorrow. I've been told to see a support team. But my music exam is next Tuesday. Will I see you then?\"\n\n\"I'll be here Tina.\"\n\nWe swapped phone numbers and I finally headed home. By the time we got the bike in the back of the car and we arrived home my head felt like it was set to split in two. I forced down a coke, some toast and two paracetamol before collapsing into bed.\n\nI dimly heard the phone ring as I drifted off and heard my mother explaining to Jamie the bare bones of what had happened. Then I heard no more.\n\n= = = = = = = = = = = = = = = =\n\nI woke the next morning feeling surprisingly rested. I lay there with my eyes closed and didn't sense anything like the same pulling feeling. Maybe severing those threads had stopped that draining sensation..?\n\nI stretched and opened my eyes to find bright daylight pouring into the room. My mother was sitting on the end of the bed waiting for the daylight to wake me.\n\n\"You looked so peaceful sleeping, Jake. But, if you're up to it, then it's still an exam day. Do you want us to contact the school to rearrange the paper?\"\n\nI looked at the time but with some relief realised that it was only seven thirty. So long as I ate something I thought I'd be OK. In fact if the daylight hadn't woken me, my stomach would have.\n\n\"Do we have any bacon Mum?\"\n\nShe threw her head back and laughed.\n\n\"One full English coming up.\"\n\nI got through the shower and went through my maths revision cards as I got dressed. When I got downstairs there was a mountain of food on my plate. As ever, my mother had decided to show me how much she loved me by piling my plate high with my favourite things.\n\nDad had got the front wheel back on the bike and it was ready and waiting for me as I headed off to school. Both parents waved me off before getting ready for work themselves. It had been an idyllic start to the morning though I was going to be late if I didn't get a move on.\n\nAs I cycled into school I wished I'd taken up my parents offer of rescheduling the exam.\n\n\"Is that him?\"\n\n\"This one?\"\n\n\"Turn the camera on!\"\n\nThe reporter from the local paper had filed a sensationalised version of the story based on some leaked information. About all he knew was that a final year student had rescued a girl from a very serious assault and there was a long range grainy picture of her hugging me by the ambulance. But the picture told the story by itself.\n\nThat in turn had got the local news stations interested and they had all paid kids to point me out to them as I came into school. It was horrific.\n\nI instantly knew that nothing good could come of this so I ignored the reporters as much as possible, only answering that I didn't want to talk about it and that I had an exam to get to. The kids surrounding me all wanted to know what had happened but rumours that I'd taken out the whole rugby team had begun to circulate so when they didn't get any answers they just let me through.\n\nAs I finally got through the gate and locked my bike up, I noticed the headmaster standing there looking happily at all the coverage that his school was getting. He was in a smart suit and one of the camera crews was getting ready to interview him. And I realised that this was the leak. This was him managing the public relations problem by focusing on \"the hero\".\n\nI saw Jamie waiting for me near the Maths block entrance with an arm around Susan and a wry smile on his face. She started to come towards me.\n\n\"Oh Jake!\"\n\n\"Please, not out here. There are so many cameras pointed at me right now.\"\n\n\"OK, yes. You're right.\"\n\nWe went inside and she hugged me and thanked me over and over for her friend. Jamie waited his turn before looking into my eyes long and hard.\n\n\"You OK? Are you sure you're alright?\"\n\n\"You've tutored me so well for Maths Jamie I can't not take the exam.\"\n\n\"OK, but you need to dish the details because if you don't Jake, while they do say that verbal insults hurt more than physical pain, they are, of course, wrong, as you will discover when I stick this...\"\n\n\"...toasting fork into my head!\" I grinned at him and we set off to the exam hall together.\n\nWhen we arrived there was a round of applause from the other students and I blushed bright red before settling down into my allocated seat.\n\nMrs Thorne gave me my Maths paper personally with a whispered 'good luck'. If positive energy could have passed an exam I would have waltzed my way through this one. As it is I managed to work through the majority of it with only one section that I knew Jamie would tell me I'd messed up. Hopefully it would be enough.\n\nLooking at the mass of people still outside the school gates, we headed around the back of the school to sit in the sun at lunchtime. A number of kids did try and start up conversations about what had happened but were soon warned off by my expression. Word soon got around that I wasn't going to talk about it.\n\nSusan grabbed a sandwich from the dining hall and joined us outside. I went through a pretty seriously edited version of what happened.\n\nI told them that I had overheard Waite in the toilets talking about the assault and that they planned to do something soon. I'd gone over to the music department and heard a scream. The rest of it was pretty much as per the police report to slightly incredulous noises from my audience.\n\n\"A broom? You have to be fucking kidding me!\"\n\n\"Look, the police understood. Maybe you just had to be there to see what happened.\"\n\n\"And then you gave her a guitar as a weapon in case any of them came to, after the hellacious beating that you laid on them?\"\n\n\"Yeah,\" I said dreamily, remembering her standing there, \"she looked like the goddess of rock or something.\"\n\nSusan was drinking in every word, her eyes wide as saucers, doubtless ready to replay the whole thing to Tina. I realised that I didn't know whether I could rely on her to keep her mouth shut.\n\n\"Susan...\"\n\n\"You don't have to worry about me Jake. I'd never do anything to hurt Tina. I just want to make sure that I get everything right for when I see her later. Maybe you should come over too..?\"\n\n\"Thank you. But probably best not for now. I really don't want any of this notoriety.\"\n\nAt the end of the day I was asked to come to the headmasters office. He was there with the deputy head and as he waved me in to the office I heard him saying to her,\n\n\"...I've had some of those boys in my own front room! We were talking about their university plans. They had amazing futures! Now look at them! They were shining examples of the sort of people we want at this school. I don't understand.\"\n\nWith the press leak and now this total misjudgement of the people that had made the last six years of my life at school a misery I couldn't help myself.\n\n\"Well perhaps if you actually listened when people tell you about bullying and then did something about it then none of this would have happened. Waite was the most feared bully in the school and there are even plenty of teachers that he intimidated. And here you are blabbering about not being able to understand? You're not fit to run a school.\"\n\nThe deputy head gained massive points in my mind by not even bothering to smother her laugh. Mr Potter, the headmaster just stood there with his mouth opening and closing in shock.\n\nOut of sight behind the door the local reporter piped up,\n\n\"Any comment Mr Potter about intimidated teachers?\"\n\nI turned on my heel and left them.\n\nAs I stamped my way out of the Heads office and threw open the door heading for the bike shed I nearly knocked Jennifer over.\n\n\"Jennifer! Hey, I'm sorry I didn't see you there.\"\n\n\"Stay the hell away from me, hero!\"\n\nThat last word was drawn out and full of vitriol.\n\n\"Will you please just wait? I just want to talk...\"\n\n\"We have nothing to talk about.\"\n\nAnd with that she was gone, rushing away towards the main gates. I was devastated. Why couldn't she see sense? And just hear me out?\n\nI got my bike out and was about to brave the scrum at the gates when Mrs Thorne pulled up.\n\n\"I can fit your bike in the boot and there's a blanket in the back if you'd like a lift.\"\n\n\"You're a saviour Mrs T!\"\n\nI threw the bike in the back and she ran the gauntlet for me, driving through the press of reporters still hoping for more details about the story.\n\n\"It's safe now. Where should I drop you?\"\n\n\"The top of the hill please. And thank you so much.\"\n\n\"You're very welcome. And if you need anything from me; a reference; tutoring; you name it, then ask away.\"\n\n\"Thank you Mrs T but...\"\n\n\"Let's just say that those rugby lads had more than a few blots on their copy books and leave it at that. Plus Mr Potter's had that coming for a long time. So as I say, you come to me if you need any help at all and I'll be there.\"\n\n\"Thank you Mrs T.\"\n\n\"Valerie.\"\n\n\"V-Valerie, then.\"\n\nShe dropped me off a long way from the furore and I slowly cycled home.\n\nThe next day was a work day and I was glad to be out of sight and away from the spotlight. Sadly rumours had followed even this far but the warehouse guys simply presented me with a Superman badge that I had to wear all day. Their simple acceptance and good humour went a long way to helping me relax.\n\nI caught a brief glimpse of Fiona once or twice during the day but we were run off our feet with a busy day of deliveries and customer support tasks.\n\nTowards the end of a busy day I went upstairs to the finance office to collect my pay packet. All conversation stopped between the three girls as I entered the room. It couldn't have been much more intimidating if they'd tried.\n\n\"Err...hi everyone.\"\n\n\"Hi Jake,\" said Fiona, looking every bit as good as I remembered.\n\n\"I err...just thought I'd come and get my pay,\" I said stupidly to the room in general.\n\nI felt like a piece of meat in the shop window with the other two girls watching my every move. It made me wonder what Fiona had said to them.\n\n\"Well, you'd best come over then,\" said Fiona. She was trying very hard to control a smile. As I went over to get the pay packet she stood and grabbed my head, giving me a smouldering kiss to loud whoops from the other two.",
        "\"Are we still on for tonight?\" she said.\n\n\"Of course. Eight o'clock?\"\n\n\"Perfect,\" and she kissed me again. And to more whoops from the others I got the hell out of there.\n\nBy seven forty-five I was in the mini with a nice shirt on and a new pair of jeans that I'd managed to get on my way back from work. Mum had filled me up with my favourite pasta dish and made sure that I had brushed my teeth, had some flowers as a gift and knew where I was going. Dates had been few and far between so she was determined to make the most of it.\n\nDad being Dad slipped a pack of three condoms in my back pocket when Mum wasn't looking. It was one of the many areas they disagreed on, so he didn't say a word but just winked as I got in the car.\n\nI arrived at the address that Fiona had given me near the centre of town. There wasn't much parking but the mini was great at fitting in the smallest spots, so I parked up and walked up the path to the front door of her semi-detached house.\n\nFiona opened the door looking simply fantastic. Her short bob cut framed her lovely face perfectly and while the lipstick was red it wasn't in your face red. She wore a fitted summer dress that had two tiny straps holding it up. It fitted closely around her chest and waist and then flared out around her hips down to just above the knees.\n\n\"Wow. You look amazing!\"\n\n\"Why thank you kind sir,\" and she curtsied coquettishly. \"Would you like to come in?\"\n\n\"Sure.\"\n\nShe pushed the door open and gave me a peck on the cheek as I gave her the flowers. She walked down the short hall and showed me into their sitting room. Her rear end was doing wonderful things underneath the dress. It was modest but when she moved it was suggesting everything!\n\nThe house had a nice, homely, lived in feel and I sat down on the sofa as she went to get a vase for the flowers.\n\n\"Jake, would you mind if we didn't go out to the pub tonight? Just stayed in?\"\n\n\"No. In fact I'd be quite relieved as the local paper has made quite a meal of this thing at school. The more that we can avoid that the better. What did you want to do?\"\n\n\"Oh, you know. Hang out here. Maybe watch a DVD..?\"\n\nThere was something she wasn't saying. The teasing way that she said it made me look at her more closely. She looked really intense. She reached her hands out for me to stand up and I slowly got to my feet.\n\nShe moved closer. Her breathing came a bit faster as did mine.\n\n\"Won't we be interrupting things with your family here if we watch a DVD?\" She took my hands and moved them around her waist as I said it.\n\n\"Strangely enough my parents decided that they wanted to see that new comedy movie tonight. And my brother is still at university in Hull. So we won't be interrupted...by...anyone..\"\n\nAs she spoke she wrapped her arms around my neck and kissed my face and neck between words.\n\nI was hard as a rock. My hands moved down to her delectable rear and pulled her close to me. I bent slightly to kiss her. Her mouth was at just the right height and we kissed passionately, our lips and tongues fighting for control.\n\nShe broke the kiss and her hands wandered over my torso, while her hips slowly ground her sex against my erection.\n\n\"I only got this dress today. I hope you like it?\"\n\n\"It's lovely.\"\n\n\"The thing is, it creases so easily. I wouldn't want it to get creased.\"\n\n\"Good point. It would be a shame to crease it.\"\n\n\"I might just take it off upstairs. Do you think you could help me with that?\"\n\nAnd she turned over her shoulder and sashayed out of the room. I followed her in a faintly dreamlike state loving her sexy walk. I slowed down slightly to take in the sexy woman in front of me as she walked up the stairs, hips swishing, beautiful leg muscles on display courtesy of some lovely heels.\n\nWe reached the landing and she turned and beckoned me towards her as she slowly walked backwards into what I assume was her room.\n\nIt was a large double room with a bay window facing out to the front of the house. It had swimming trophies on the top of the chest of drawers and a large old wardrobe that fitted the style of the house perfectly. There were various pictures of family, some other art and then near her double bed was a freestanding, full length mirror.\n\nI was completely in her thrall as she stepped back into the room. She turned again, looking over her shoulder, and said,\n\n\"I never can reach the zip by myself. Help me take it off?\"\n\nMy hands were shaking slightly as I found and slowly pulled down the tiny zip until it reached the flare of her hips. Her beautiful skin was revealed as was the fact that she wasn't wearing a bra.\n\nI reached up and held onto the straps of the dress and slowly pulled them off her shoulders, and slowly, oh so slowly revealing her lithe body. She had positioned herself in such a way that I was able to see how hard her nipples were in the mirror even as the dress crested over the arch of her buttocks and down to her feet.\n\nShe stepped out of the dress and I gasped as I realised she was left wearing nothing but stockings, her heels and a lacy black thong. Her swimming kept her trim and her arse was a thing of wonder. She carefully hung up her dress, reaching up as high as she could in the process to show off the swell of her breasts and the flow of her muscles from ankle to wrist.\n\nMy mouth was dry and I was so turned on I couldn't even think straight.\n\nShe looked at me and said,\n\n\"Maybe you need a bit of help getting undressed yourself..?\"\n\nI could only nod as she moved forward and kissed me deeply on the lips before undoing my shirt and running her hands over my stomach and chest muscles. She really seemed to get a kick out of them so I flexed a bit to show them off for her. She licked her lips and kissed down my chest as she took off my shirt.\n\nIt was carefully laid to one side and then her fingers slowly undid my belt. Seeing that the jeans had a button fly she undid the top button and just ripped them apart in one flowing motion. My cock was already straining against my underwear as she slowly sank down my body, her nipples grazing my chest and legs as she pulled my jeans to my ankles.\n\nI kicked off my slip on loafers and stepped out of the jeans, which again, she very deliberately set to one side.\n\nOff came my socks and then she stood up and crushed her lips and her body against me. The slow pace seemed to have gone for a moment as her hands roamed all over my chest, back and arse. Mine found her small breasts which stood proud of her chest and made a delicate filling for my hands. My fingers sought and found her oh-so-sensitive nipples and she moaned as I played with them, kissing her back with as much passion as she was kissing me.\n\nOne hand moved down to her sculpted rear, a perfect handful and pulled her hard against my waiting cock.\n\nShe began to grind against me and then suddenly broke our kiss leaving me standing there panting.\n\nShe turned smiling, and then slowly bent over pulling her thong down as she did it. I nearly came on the spot. It was the most outrageously sexy sight. She turned around again and stood there with her engorged sex and small landing strip on full display, kicking the thong off to one side. She looked at me, a challenge in her eyes.\n\nI followed her lead and turned around before bending over to display my muscular arse. I then turned round and she gasped as she saw my penis for the first time. It was rock hard and every bad girl's dream. Fiona licked her lips and then slowly moved back to the bed.\n\nShe reached out to the bedside table and pulled out a condom. She beckoned me over and I placed my cock in front of her and she used both hands to roll the condom into place. Reaching out to take my hands she then lay back on the bed, pulling me on top of her.\n\nShe wrapped her legs around my arse, my cock trapped between us as we kissed again, less frantically this time. The feel of her stockings on my skin was incredibly sensual and I knew that I had discovered something that would always turn me on.\n\nShe started to move her hips back and forth under me, rubbing her pussy up and down the length of my cock. The tease was indescribable.\n\nAnd then as she was part way up I pulled back on my hips and the tip of my cock became lodged in the entrance of her pussy. She moaned as I began to take charge. I took hold of both her wrists in one hand and held them above her head. Her breasts were put prominently on display and I bent down to lick the sensitive nipples, feeling mini tremours going off inside her body as I did it.\n\nAnd while I feasted on her proud nipples and breasts, I slowly eased my way inside her. She was so wet and hot. I went slowly as she was wonderfully tight, easing back and forth an inch or two at a time.\n\nShe started moaning in earnest now, losing control of herself as my cock reached deeper inside her, stretching her until after a couple of minutes I finally bottomed out inside her tight, wet cunt. She shook slightly underneath me, her breath coming in pants now, her gorgeous breasts shaking slightly as they rose and fell.\n\nI drew my cock all the way out and then drove straight back in. All her breath came out in one strangled gasp. I was in heaven. I moved back and stood at the edge of the bed with my cock impaled in this beauty and reached for her long legs, grabbing her ankles and pulling them wide apart. We both watched my cock start to thrust into her fuck hole, obscenely on display for our viewing pleasure. The sight of my cock disappearing in and out of her is a memory that I treasure.\n\nI could see her lips distending as I forced my cock in and then watched them sucking against it as I pulled out again. I began to thrust faster and she started to moan and writhe underneath the rhythmic pounding. The condom must have reduced my sensitivity considerably as I took enormous pleasure in seeing her orgasm build. She started shouting out at every thrust, her chest flushing red, my hips hammering my cock into her cunt.\n\nI was close to coming now myself and I leaned forward, pushing her ankles back to her shoulders and went deeper than ever before. She exploded underneath me, screaming her pleasure and clawing at my back as I drove my throbbing cock into her depths.\n\nIt was all too much for me and I saw stars as I flooded the condom with my seed. As my cock twitched inside her, small tremours found their way down her pussy walls, pulsing around my hardness, prolonging my ecstasy.\n\nAs I came back to myself, I pulled her now limp legs back down and regretfully slid my penis out of her welcoming embrace, and lay down beside her.\n\nWe both stayed like that panting, looking dreamily at the other basking in the sheer pleasure that we had given each other.\n\n\"That was something else. When you went so deep...\"\n\nI didn't know what to say so I just reached out and held her, kissing her gently.\n\n\"I thought that you said you didn't have a clue what you were doing?\"\n\n\"I don't. I really don't.\"\n\n\"Well keep on not having a clue. I have never come like that before. Ever.\"\n\n\"Well, we'll have to see what we can do about that won't we?\"\n\n\"Mmmm! I like that idea.\"\n\nShe reached down and carefully pulled off the condom. She winked at me and said,\n\n\"I like the flavoured ones.\"\n\nAnd her mouth engulfed my mostly flacid dick. I leaned back and enjoyed the sway of her breasts as she moved up and down my length, alternating sucking and licking me. But the temptation to taste her was too much and she squeaked when I unexpectedly pulled her hips closer to me. She obviously liked the idea and placed her pussy directly over my mouth without ever removing her mouth from my rapidly expanding knob.\n\nI began to lick and taste her juices, trying to note when she seemed to enjoy something and when she didn't. My hands reached round to grab her beautiful arse cheeks and pull her pussy harder on to my mouth. She spasmed slightly as I found her clit and I grunted as she retaliated by focusing on the underneath of my cock head.\n\nShe was soon writhing under my ministrations and I was rock hard again. She grabbed another condom and rolled it into place using her mouth as far as she could.\n\nThen she took charge. She moved round to face me and while she gave me a long lustful kiss she slowly impaled herself on my tent pole. She shuddered as the full length finally found its way inside her, supporting herself with her arms on my chest. Her breasts were deliciously on display, forced together by her arms. Then she started to work the muscles inside her pussy, rippling around me even as she lifted herself on and off my cock.\n\nShe was enjoying being in charge, stopping me from thrusting and just setting her own pace. Short gasps started to come from her and I began to pant.\n\nFaster and faster she went, her breasts bouncing, her surprisingly large nipples rock hard when I sucked them into my mouth.\n\n\"Bite them!\" she gasped.\n\nNot knowing quite how hard she meant I nibbled at them just as she pulled away, with the end result being much more force on her nipple than I'd intended. But it sent her over the edge, so I pinched the other nipple hard and she spasmed again. I then alternated pinches and bites on her nipples while I grabbed her hips to hold her in place like my very own fuck toy while I thrust hard up inside her.\n\nShe was literally wailing at this point and it wasn't long before I emptied another load into the new condom and she collapsed on top of me.\n\nWe drifted for a while both enjoying the closeness of the other's body. My hands began to wander over her luscious backside and my cock twitched inside her. At that she roused herself.\n\n\"Jake, I don't think that I could take any more. It's been so far beyond what I'd hoped for but please not just yet.\"\n\n\"That's OK. I was just being greedy. But you surely can't blame me?\"\n\nShe smiled as she rolled off, allowing me to pull out of her and carefully dispose of the condom.\n\nAn alarm on her watch went off and she suddenly panicked.\n\n\"Oh god, that means the film's ended and the cinema's only a few steps away. Quick!\"\n\nWe ran around like mad things getting dressed, sorting our clothes out and opening windows to try and get the smell of sex out of her room. I went to the bathroom and quickly washed myself off before joining Fiona downstairs.\n\n\"Quickly, which one of these have you seen? They're film buffs so they'll know if you haven't.\"\n\n\"Jurassic Park.\"\n\nShe rapidly turned on the TV, put the DVD in the player and turned off the main lights. We'd skipped ahead to the final scenes when we heard voices and a key in the door.\n\nWe were at opposite ends of the sofa, our clothing smart and unruffled, when Fiona's parents came into the room.\n\n\"You must be Jake.\"\n\nI stood up and shook hands while Fiona paused the film. Her parents were really nice, not overbearing at all. Coffee was offered and the film discussed - they definitely were movie people. Fiona was the prim and proper daughter throughout. Within fifteen minutes I was heading out of the door.\n\nFiona saw me out and her parents gave us some space.\n\nI held her to me and we quickly kissed and broke apart before we began to rouse passions again.\n\n\"Do you still have exams this week?\"\n\n\"I'm afraid so yes. But once Friday comes that's it.\"\n\n\"So a celebration next Friday then?\"\n\n\"It's a date.\"\n\nShe kissed me again and waved me off as I drove away.\n\nSunday dawned bright and warm.\n\nI slowly reached out and fumbled with the alarm until I finally hit the right button to shut off the alarm. I groggily pulled myself upright only to find my thigh muscles protesting like mad.\n\n\"Jeez, it's not like work was that heavy yesterday...\" I thought to myself until I thought back to my evening with Fiona. That train of thought almost had me getting back in bed and summoning a phantom Fiona to re-enact it but I wouldn't be going to work if I did that.\n\nI sighed and stumbled through the bathroom, legs aching and groaning like an old man. A very happy old man though.\n\nAs I was heading downstairs the phone rang and I heard my Mum answer. From the warm tone of her voice it could only be one of my cousins or Jamie. I mentally placed my bet.\n\n\"Jake? Jamie's on the line for you.\"\n\nJake wins ten pounds!\n\n\"Thanks Mum.\"\n\nI got myself down the stairs and walked through to the hall.\n\n\"Hey Jamie.\"\n\n\"Morning hero.\"\n\n\"I hate you.\"\n\n\"Listen, the weather's looking fabulous today so Susan and I thought we'd head down to the Lido. She's asking Tina if she feels up to it too. Do you want to join us?\"\n\n\"Definitely. I can't get there until after four though.\"\n\n\"No problem broom-man. We'll save you a spot.\"\n\n\"Thanks Jamie - see you later.\"\n\nI went back upstairs and had a quick hunt around for my swimming gear, a towel and some factor fifty and stashed it all in a bag to take to work. As I came back down stairs my mouth started to water as I could smell one of my favourites.\n\nDad had spent a bit of time in the US and one of the things that he brought back with him was pancakes for breakfast. And not the thin things that we had on Shrove Tuesday. Thick, sweet and coated in whatever you wanted to put on them. Raspberry jam was a favourite at the moment.\n\nMy stomach rumbled in anticipation.\n\n\"Get 'em while they're hot,\" he shouted.\n\n\"So, how did it go last night?\" asked my Mum.\n\n\"Pretty good thanks. Fiona was a bit tired so we decided to stay in and watch a movie. It was nice.\"\n\n\"That's good that you're getting to know her a bit better.\"\n\n\"Mmmhmmm,\" was all I could manage through a mouthful of pancake laced with golden syrup.\n\n\"What did Jamie want?\"\n\n\"He's going to the Lido today and asked me if I wanted to come along. If it's going to be as hot as that then it'll be a great way to relax after work.\"\n\n\"OK. Don't forget that your aunt is coming to dinner so I need you back and presentable by seven.\"\n\n\"Mmmhmmm.\" My response was considerably less positive this time round.\n\n\"Let's have none of that young man. I know your aunt has her ways but she's still family so try and be civil.\"\n\nI just ate more pancake rather than incriminate myself any further.\n\nThe drive to work was warm and when I arrived I checked for a spare shirt in the boot of the car. It was going to be a sweaty one.\n\nSundays were usually more to do with shifting stock around than customer stuff but today that was not the case. Every pensioner within twenty miles appeared to have decided that today was the day to go to the garden centre. And they all needed help. As the youngest and fittest that meant me.\n\nBy lunchtime I was already a mess.\n\nNick was sitting outside in the sun with a sandwich as I came back from heaving around yet another car load of growbags.\n\n\"Whew! You could use a shower. I've got a bucket of water over here if you like?\"\n\n\"I can't be any wetter than I already am.\"\n\n\"You'd probably smell nicer though!\"\n\n\"Give me a minute.\"\n\nGrabbing the spare shirt from my car I peeled off my sweaty top.\n\n\"OK, do it.\"\n\n\"I was just joking,\" said Nick.\n\n\"No, do it. I'll feel a lot better for it.\"\n\nI bent forward so that he wouldn't get my shorts soaked. He shrugged and then poured the bucket of water over my head and chest. It felt amazing after the morning that I'd had.\n\nIt was also the exact moment that two of the girls from school and their mother (grandmother?) arrived to get some help loading stuff into their car.\n\n\"Jake?\"\n\n\"Err...Christine. Hi.\"\n\nMy heart sank. Christine was Youle's girlfriend and one of the petty bitches that liked to make your life miserable. Her ever present shadow, Ami (\"with an i\") was there too.\n\n\"Oh, you know this nice young man?\" said her, I guessed, older mother.\n\nChristine couldn't take her eyes off my body and I quickly pulled on the dry shirt over the top. That got a bit stuck on my damp skin. That just increased the amount of time that I was standing there shirtless and damp showing the world my abs and arm muscles. Nick took pity on me and helped me get decent, pulling the shirt down my back.",
        "Christine was still staring and licking her lips. I realised that my shorts had got a bit wet and my package was fairly well outlined as well. I flushed red.\n\n\"Christine? I asked you a question.\"\n\n\"Oh,\" she almost had to shake herself out of her reverie, \"Yes, Jake's in the same year as me and Ami at school.\"\n\n\"Nice to meet you Jake. We were told that someone could help us with the growbags that we've bought..?\"\n\nI mentally groaned before putting on my customer service face.\n\n\"That's right. Whereabouts are you?\"\n\nThey directed me over to their big SUV. Christine wasn't her usual snarky self and Ami had never been much of a talker. Maybe the mother was intimidating them. Whatever it was, I was grateful for the respite.\n\nThe mother (grandmother?) chattered away politely and thanked me as I hefted the twenty kilogram bags into the back of the car making the suspension sag. I caught Christine watching me with her teeth biting her bottom lip as I went to pick up the final bag. She quickly looked away when she realised that I'd seen her and blushed a bright red.\n\nThis was certainly not the Christine that I knew from school. She was usually cocky and arrogant, always with a quick comeback. She was one of the popular girls that usually hung around with the rugby players. But she certainly seemed to like what she saw of me.\n\nAmi just looked bored by the whole thing but kept glancing at Christine. I hadn't even considered that there might be an attraction there but that almost made sense. She was always around her and never really had a boyfriend that I knew about. Not that I kept track of these things.\n\nI filed the information away and finished loading the car.\n\n\"You're ever so kind, thank you,\" gushed the mother, maybe grandmother now looking at her. She must be closing on sixty plus.\n\n\"You're welcome. Have a safe drive back - just remember there's a lot of weight in the back now.\"\n\nChristine got in the car quickly and Ami gave me a longer calculating look before she got in the back.\n\nWeird.\n\nI started to consider Christine as I walked back to the warehouse. She was a netball player, quite thin with almost no tits from what I could see. Nice long hair and a pretty enough face when it wasn't in resting bitch mode. She had a nice round arse too with long legs...\n\nI shook my head, unable to believe that I was thinking sexual thoughts about such a cold blooded bitch.\n\nThe rest of the work day passed much as normal but I managed to spend more time in the warehouse and less out in the sun. I asked Nick if I could get away a bit early and he let me off the last thirty minutes of the day saying that I'd earned it.\n\nI jumped in my car and headed down to the Lido. It was just a quick run down the dual carriageway and then past the street full of car dealerships. The car park was packed and I was again thankful I had a small car. I grabbed my bag and headed to the entrance. I headed through the gate and after paying for my ticket entered the Lido.\n\nThe big outdoor pool was full of shouting and screaming people of all ages. Families having fun, kids splashing each other, others queuing for the three different slides that deposited you at different speeds into the pool. The wave machine was on at the moment and people were shouting and cheering.\n\nI shaded my eyes and saw Jamie waving at me from the grass bank. He'd managed to grab some shade and between him, Susan and Tina had managed to save some pace for me.\n\n\"Great spot huh?\"\n\n\"You did good, Jamie. Hey Susan, Tina.\"\n\nSusan smiled up at me and I was shocked to see that her braces were gone. She was an attractive girl and filled out her bikini very nicely.\n\nTina had a wide floppy hat on, sunglasses and a lightweight throw covering her top half. She got up and gave me a huge hug.\n\n\"It's so good to see you.\"\n\n\"You too, Tina. How are you doing?\"\n\n\"A lot better now you're here,\" she smiled warmly at me. \"I don't usually come to these sort of places because of, well, you know. But because of the news coverage it's been worse than normal. I think having me here has ruined Jamie's day.\"\n\n\"Nonsense,\" muttered Jamie. But it must have been bad if my usually positive friend couldn't say more than that.\n\n\"Well, you're officially off duty now Jamie so why don't you and Susan make the most of the wave machine?\"\n\nThey didn't need much urging and I settled down next to Tina. She quickly shuffled next to me and leaned in against my shoulder.\n\n\"You didn't really answer my question earlier. How are you doing?\"\n\nShe sighed, holding my arm and stroking the bicep as she held herself against me.\n\n\"Not so great if I'm honest. I haven't slept all that well since the...you know. I keep getting flashbacks and if anyone catches me unawares then I end up jumping a mile. I've been jittery all day and then with guys coming up all the time today, I'm just tired.\"\n\n\"Well you're safe now.\"\n\nI bent down and kissed the top of her head and she moved herself even closer to me. I put an arm around her shoulders and she sighed contentedly as she finally felt able to relax.\n\n\"I do feel safe. I'm so grateful, Jake. You should have seen the way you came through those doors with fire in your eyes. I think my recollection is a bit scrambled as the other guys just all seemed to drop as you came into the room but that doesn't make sense.\"\n\n\"Don't dwell on it Tina. The main thing is that you're alright.\"\n\n\"I am now.\"\n\nAnd she squashed her assets up against me as she hugged me again, causing my unruly dick to react in an entirely predictable way.\n\nBaldrick in a dress. Baldrick in a dress. Baldrick in a dress.\n\nAfter a while the others came back and we had a nice relaxed chat. Tina didn't leave my side once. We eventually convinced her to come into the pool once it got a bit quieter and she didn't get anything like the normal levels of attention with a \"boyfriend\" in tow.\n\nUnfortunately, I hadn't tried on my swimming shorts since last summer and the bulge had plenty of girls looking. I was so embarrassed that I began to understand how Tina must feel. We both wrapped towels around ourselves as soon as we could and settled down to dry off as Susan and Jamie continued to have fun in the pool.\n\nAs we sat there Tina started to get a bit tongue tied. Conversation got a bit stilted until she finally said.\n\n\"Did you really say that I looked like a goddess of rock?\"\n\n\"Yes. Standing there with the guitar in hand like that you had so much attitude.\"\n\n\"A goddess?\"\n\nI already knew that Tina liked me. The fact that I'd saved her had obviously pushed that into a degree of infatuation. I wish that I'd been a bit more careful with my words. It wasn't that I didn't like her or find her attractive but I didn't want to send out the wrong signals. I obviously wasn't doing very well at that.\n\n\"You're a very attractive girl Tina. You know that.\"\n\nHer lips curled in a wry smile.\n\n\"There's a but coming though isn't there?\"\n\n\"I just don't want you to get the wrong idea is all. We get on well and I enjoy your company but I already told you that I was seeing someone.\"\n\nShe sighed and looked sadly down at her feet.\n\nI was completely torn. Tina was fun, attractive and we had a lot in common. She was a genuinely nice person with it. And while I did fancy her - I was still male after all - she just didn't get my motor running in the same way as Fiona or Jennifer.\n\nOur friends broke the awkward silence when they got back and Tina announced that she wanted to head home. Jamie looked at me questioningly and I shrugged. Susan picked up immediately that something wasn't right and the two of them headed off.\n\n\"Everything alright man?\n\n\"Yeah, I guess so.\"\n\n\"What happened?\"\n\n\"Well, you may have gathered that Tina likes me.\"\n\n\"You'd have to be blinder than a blind thing not to see that.\"\n\n\"Well, while I like her I just don't like her in the same way as she likes me. She's so sweet and I feel really bad not being able to reciprocate but I can't lead her on. I'm not that guy\"\n\n\"You wouldn't be my friend if you were that guy.\"\n\nI smiled at him, glad that he understood.\n\n\"So, Chemistry cram session at my place tomorrow night?\"\n\n\"But Biology is Tuesday and Chemistry is Wednesday.\"\n\n\"Right. But we both know that you don't need to work on Biology. But you do need to work on your Chemistry.\"\n\nI nodded and as I drove home after dropping Jamie off, I reflected that he had pretty much summed up my love life in two sentences."
    ],
    "authorname": "golasgil",
    "tags": [
        "mf",
        "cowgirl"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-pulse-pt-03"
}