{
    "title": "A Stringed Instrument Ch. 13",
    "pages": [
        "I spent the next two days in my pyjamas, red-eyed and sullen. I didn't go outside because it was grey and cold, winter starting to creep in, and I had nothing to go outside for. I surfed the net aimlessly, talking online to friends who were unable to distract me, replaying the last month in my head over and over in the hope of finding a different ending. I stayed up late, unable to switch off and go to sleep; I stayed in bed until mid-afternoon, because there was nothing worth getting up for. I barely ate because I wasn't hungry; there was too much else gnawing away for me to notice the pangs of an empty belly. Aleks tried to cheer me up, in his blunt sort of way, but I just muttered \"She dumped me for a fucking cello\" until he lost patience and found something else to do.\n\n(That's what I told everybody who cared to listen. Somewhere inside I knew it wasn't the whole truth, but I was too weary and heartsick to care; telling it that way got me sympathy, and sympathy blunted the ache a little.)\n\nThe only thing that pulled me back to some sort of routine was work. I went in on Monday morning, red-eyed and sullen, and did my job in a dispirited haze. Nobody seemed to notice; if they did, they didn't care. I made stupid mistakes and stayed late to fix them; it wasn't like I had any reason to hurry home.\n\nIt wasn't so bad when I thought about our break-up head-on. Oh, it hurt, but I'd been through break-ups before. I could tell myself: you've survived before, you will survive this time too, and eventually you'll meet somebody else. I couldn't always make myself believe it, but even so, it reminded me to do the things that needed doing. Eat three times a day, hungry or not. Get up and go to work. Do the laundry.\n\nNo, the worst part was the stuff that crept up on me unexpectedly. Seeing a poster for a new movie and thinking: Phoebe might be interested in that one, I should tell her \u2014 oh. Missing my train because of a bad announcement at the station: Maybe I'll grumble to \u2014 oh, no, that's right. A thousand little broken connections dangling at the edges of the Phoebe-shaped hole in my life. Those were the things that made it hard.\n\nSusan invited me to catch up on Friday night at a caf\u00e9 in town. I wasn't in the mood to see anybody, but I went anyway, and she updated me on her own crisis: Zara sounded a little better, but shut down again whenever her parents suggested she might go back to school. So Susan and Danny were considering whether to persevere, or to find another school for Zara with all the disruption that would entail.\n\nI couldn't give Susan much advice, but I got the impression she mostly wanted somebody to talk to. We were about to pay the bill when she looked at me and frowned. \"You've been awfully quiet. Everything okay?\"\n\n\"Not really... I broke up with Phoebe.\"\n\n\"Oh, I'm sorry to hear that.\"\n\n\"She dumped me for a cello.\"\n\n\"Dumped you for a cello? What do you mean?\"\n\n\"We had an argument about... something. She did something thoughtless and I was angry with her. Then she mailed me, said she couldn't focus on her audition if we weren't going to sort things out, so she was putting things on hold for a month until after the audition. I... um, I told her off, and we haven't spoken since.\"\n\n\"Oh, Yvonne, I'm so sorry. And I know it must be hard to hear that. But perhaps it's better that she made that choice.\"\n\nI scowled at the remains of my chocolate eclair and pushed the crumbs about with a teaspoon. \"Hard to see it that way.\"\n\n\"I don't know what you argued about, but whatever it was... if she puts you ahead of her audition, and she fails the audition, where does that leave you? Debts like that are hard to live with.\"\n\n\"Huh.\" I was far from convinced.\n\nHer phone chimed, and she glanced at it. \"I have to go, we have an appointment with Zara's counsellor. But give me a call some time, let me know you're okay.\" And I promised I would.\n\nOn Wednesday, they fired me.\n\nIt happened like this: Peter called me into his office at two p.m. for what I assumed was going to be another pointless change to the website. Instead he steepled his fingers, the way he did when he had something of great import to deliver.\n\n\"Yvette, as you know \u2014\"\n\n\"Yvonne.\" I shouldn't have corrected him, but I was feeling less than usually diplomatic.\n\n\"Yvonne. I beg your pardon. Yvonne, as you know it's been a challenging time for our industry of late, and that obliges us to re-evaluate our business model on a continual basis. We've come to the decision that for operational reasons, it would be a better fit for our needs to contract our information technology support requirements to an external provider. I hope you understand. This isn't an easy decision to make.\"\n\nHe handed me a formal-looking document prepared with half a dozen little \"sign here\" stickers.\n\n\"Uh.\" It had taken me a moment to make sense of the jargon: they were replacing me with a contractor. Probably the guys who filled in for me when I went on leave. \"I'd like to read it before I sign.\"\n\n\"Certainly.\"\n\nI read through it carefully, small print and large. The gist was simple enough: I, Yvonne Ponting, tender my resignation, effective immediately, and agree not to disclose any confidential information about RJC's business, etc etc. In return I would receive all outstanding salary and an additional eight weeks as a bonus, all payable immediately.\n\nIt didn't make sense. Outsourcing my job, maybe, but in the middle of an important contract? And why offer me eight weeks when my contract only required two?\n\nI shuffled through the pages again, stalling while I tried to figure it out. This wasn't about saving money. No, this was about getting rid of me. Either Peter had a family member looking for an IT support job, or...\n\nIn Victoria it's illegal to fire somebody for their sexual orientation. So nobody ever gets fired for their orientation; they get fired for \"performance issues\" or \"operational reasons\" or some other excuse. Or they get persuaded to resign of their own accord. You can still fight it, but it's a slow and expensive process with no guarantee of success.\n\nSo that was the deal: either we fire you with two weeks' pay in lieu, or you take the money and agree not to contest it. And don't forget you'll need a reference from us if you want to apply for work elsewhere.\n\nI accepted defeat and signed the papers. I had no stomach for a fight. Perhaps I should have made a stand on principle, but even if I'd won, what was the prize? Going back to work for Peter and for my ex's father. Screw that. So I signed.\n\nPeter sent Janelle to help me pack up my desk. I assumed she'd been sent by Peter to make sure I didn't sabotage anything on the way out, but I didn't mind. If the contractors did screw anything up, I would be glad of a witness to confirm that I hadn't even touched my computer since our meeting.\n\nI reminded her that my admin passwords should be changed as soon as possible, and wrote down some instructions on how to do that. And then, less than an hour after I'd walked into Peter's office, I was on the train home with nothing more than a few postcards and books that I'd brought in myself. No farewell party for me, not so much as a card.\n\nOn the train I wondered: was it Peter or RJ? I thought it unlikely that Peter would have fired me on his own initiative, not when RJ would be back in a couple of weeks. But I decided I didn't really want to know; I just wanted to get home, curl up, and forget the whole thing.\n\nAt least I had two months' salary to cover me while I looked for a new job. I decided I was going to approach this like an adult: four hours a day searching job sites and sending off applications. I should be able to manage at least four solid applications a day. Four hours on all the other stuff I'd been neglecting over the last few weeks. I had a pile of laundry waiting to be done, the bathroom tiles needed scrubbing, and there were three pizza boxes in the dining room from nights when I'd been working late and couldn't be bothered cooking. If I couldn't get the important parts of my life in order, at least I'd get on top of the little things.\n\nBut before that, when I got home, I'd switch on the computer and allow myself an hour working off my aggressions killing a few orcs...\n\nOne week later there were five pizza boxes in the dining room. The tiles still needed scrubbing, and I'd only done one load of laundry. But I had killed several thousand orcs, spiders, giants and assorted bandits, and I had a level seventy-three paladin to show for it.\n\nI'd started well enough. The day after I lost my job I got out of bed on time, just as if I was going to work. I'd archived all Phoebe's old emails to reduce the temptation to re-read them, and I'd applied for three jobs. But it had been a depressing experience \u2014 two of them offered less than I'd been earning at RJC, the third was almost certainty out of my league \u2014 and the thought of having to rely on Peter's say-so made me so queasy that I'd ended up listing Susan as a referee instead.\n\nAfter that...\n\nI'd spent a lot of my life telling myself that I didn't care what the rest of the world thought of me, except for a trusted few. It came as a shock to realise how much I cared about the opinion of people I didn't respect, and about being fired from a job I no longer enjoyed. An awful lot of my ego is wrapped up in the idea that I'm good at what I do for a living \u2014 no genius, but conscientious and diligent \u2014 and losing my job stripped me of that.\n\nSusan's words to me at the caf\u00e9 had planted a seed of doubt, and now it began to grow. It was easy enough to say that if Phoebe really had loved me, she should have put our relationship above everything else... but if she'd offered to support me for the rest of my life, living off her father's money, would I have accepted? I doubt it; for all that I loved her, I would have felt imprisoned by that arrangement.\n\nAnd if she'd placed me ahead of her dreams... could I ever have lived up to that sacrifice? Or would we have been gradually devoured by disappointment and resentment, wondering every day whether it had really been worth it?\n\nI was still thinking about all this a week into June, when Susan phoned me.\n\n\"Hi, Yvonne speaking.\" I had my mouth full; she'd caught me eating stir-fry in bed.\n\n\"Hello Yvonne, it's Susan.\"\n\n\"Oh, hi! I'm sorry I haven't called, I've been kinda distracted.\"\n\n\"Indeed. Yvonne, did you apply for a job somewhere else? I got a phone call from somebody who said you'd put me down as a reference.\"\n\n\"Oh, shit, yeah. I meant to tell you, sorry.\"\n\n\"Don't tell me you've given up on RJC? I know you don't get along with Peter, but it's not forever. Did they tell you I'm coming back next week?\"\n\n\"I hadn't heard, but... no, they decided to replace me with a contractor.\"\n\n\"What? No! Why would they do that?\"\n\n\"Peter said 'operational reasons'.\" It was true as far as it went, and I didn't feel like talking about my speculations.\n\n\"Well! I shouldn't say it about a colleague, but that's pretty shabby. Are you going to be all right?\"\n\n\"I guess. I've got a bit saved, should tide me over until I find something. Hey, how's Zara doing?\"\n\n\"Quite well, I think? We decided to change schools. I think it's for the best, we've found a place that looks good, but I hate the feeling of running away. It shouldn't be poor Zara that gets driven out of her school and away from her friends.\"\n\n\"Oh, I know what you mean. But sometimes you have to cut your losses... hey, I have another call coming in, catch you another time?\"\n\n\"Love to. Keep your chin up, I'm sure something better will come along soon enough.\"\n\n\"Bye!\"\n\nIt turned out to be my brother, inviting himself over for an evening of popcorn and television. He'd bought some of the classics of our childhood on DVD and thought I could do with the company. He wasn't wrong; I managed to get through three hours of cartoons without once thinking painful thoughts about Phoebe.\n\nAfter the cartoons we talked, and he asked just enough questions to let me to get things off my chest. I still missed Phoebe, but it had been nearly a month since the last time we talked \u2014 fought \u2014 and I figured that ship had sailed, alas. He reminded me not to go leaping into a rebound relationship (guilty as charged; I had already been starting to wonder what my chances might be with Aleks' friend Renee) and told me he'd keep an ear out for job opportunities.\n\nAs he headed for the door I asked, \"Do me a favour? I want you to ring me up every night and ask me how many applications I've sent in that day. If it's not at least four, tell me off.\"\n\n\"It's a deal. And by the way, little sister? Remember to have some fun.\"\n\n\"I will. Just as soon as I remember how!\"\n\nA few days later, on a whim, I booked myself in for a morning at the hairdresser's. Not the cheap place at the local shops where I get my ends trimmed every few months. No, the place in town where my goth friends go when they want something special.\n\nA tiny lady in black PVC and rainbow dreads asked \"So, what can I do for you?\"\n\n\"I'm not sure. I want something interesting that doesn't look like I've just butchered my hair because I'm getting over a breakup. Maybe not too garish, though.\" I hadn't had any interview offers yet, but I had hopes on a couple of the ones I'd applied for.\n\nShe looked me over and pursed her lip (studded, of course). \"Let's see... yeah, I think I can do something.\"\n\nI sat back with my eyes closed while she did her thing with scissors and clippers and comb, then foil and a variety of noxious-smelling chemicals. I recognised one as ammonia, but couldn't place the others. There was a lot of waiting in between; she brought me tea and we chatted. I ended up telling her a little about my breakup and my job troubles, and she made sympathetic noises before telling me some of her own experiences of being fired from once place and another.\n\nAfter that the foils came off and it was time for her to wash out the chemicals. It felt great, the hot water and her fingers rubbing the shampoo into my scalp, although it got a little weird when I realised it was the first sensual physical contact I'd had since Phoebe. I was just starting to mellow out and enjoy it again when she turned off the tap and began to dry me off.\n\nI thought that was it, but there was still more: another treatment, and another cup of tea, and then at last a rinse. My stomach and bladder were both starting to grumble by the time she declared the job finished and held up a mirror to let me look at the result. \"You said not too garish. Will this do?\"\n\nIt fit the bill. She'd undercut the sides and back and dyed most of it a deep navy blue, with two thick white stripes running down the middle where she'd left it long. It was quite unlike anything I would have selected for myself, but... it was a change, and I was in the mood for a change. Give it a few days, and I could see myself getting used to it.\n\nA week later I got a rather unexpected offer.\n\nIt happened like this: on Thursday morning while I was in the middle of yet another application \u2014 muttering rude words about would-be employers who were too vague for me to know what they wanted \u2014 my phone rang. The number looked familiar but I couldn't quite place it.\n\n\"Hello, Yvonne Ponting here.\"\n\n\"Hello Yvonne, it's Janelle from RJ Churchill.\"\n\n\"Janelle? Hi, what's up?\"\n\n\"I'm calling for RJ. He'd like to know if you're able to come into the office some time for a chat.\"\n\n\"Huh? Any idea what it's about?\"\n\n\"He didn't say.\"\n\n\"Well, um, I guess I can make it... tomorrow? About eleven?\" I wanted to say 'today' \u2014 now I was going to spend all night wondering what on earth it could be \u2014 but I didn't want to give the impression I was at his beck and call.\n\nIt felt odd returning to the offices of R. J. Churchill Real Estate as a visitor, having to wait at reception until RJ was ready to see me. Janelle showed me in and shut the door behind me, leaving the two of us alone.\n\nHe looked tired. Not rumpled-suit and bags-under-the-eyes tired; just weary. He was toying with his fountain pen, rolling it between his fingers, and he didn't look at me when he first spoke.\n\n\"Yvonne. How are you this morning?\"\n\n\"Very well, thanks. And you?\"\n\n\"Oh, getting by.\"\n\nI still didn't know what all this was about. \"RJ, I never got a chance to say to you before, I'm sorry about Helen.\"\n\n\"Yes.\" He flipped the pen to his other hand. \"Thank you. It's not easy.\" Another pause, and then he looked up at me for the first time and raised his eyebrows, but whatever he thought about my hair, he didn't say it. \"Yvonne, I've had a great deal on my mind lately, and it's been suggested to me \u2014 rather forcefully, by somebody whose opinion I value \u2014 that it may have distracted me from running this business the way I ought to be running it. You've done good work here.\"\n\n\"Um, thank you.\"\n\n\"And I've been reminded that my daughter is a grown woman. She has told me more than once that she's old enough to fight her own battles. If you've hurt her \u2014 well, whatever has passed between the two of you, that's a private matter. As is your personal life.\"\n\nI gave a tiny nod, just enough to say I was listening.\n\n\"If you wanted to return to your position here, we could accommodate that.\"\n\n\"Um, thank you. Let me think...\"\n\nIt wasn't quite an apology. Not explicitly. But it was as close as I was likely to get, and there was a lot to be said for a steady income...\n\n\"Two things. I don't work too well with Peter as a supervisor, we just have different... styles.\" Does 'arsehole' count as a style?\n\n\"I think we could find some way to work around that.\"\n\n\"And... do you want me back? I do appreciate the offer, but I don't want to come back somewhere I'm not welcome.\"\n\nHe gave me a thin smile. \"Let's just say that we've noticed the difference in the last three weeks, since you've been gone.\"\n\n\"Well.\" I was inclined to accept, but I hadn't quite forgiven him for firing me yet... \"I have some commitments just now, but I could start back in two weeks' time, if that works for you? July ninth?\" I didn't really have anything booked in the meantime, but I felt like letting him stew a little.\n\n\"It'll have to do. Janelle will send you the paperwork.\"\n\nWe shook on it, and I was on my way out of his office when something occurred to me and I turned. \"So what do I tell people about why I left?\"\n\n\"There was a misunderstanding. Peter acted on what he believed to be my wishes, and when I returned and discovered that a mistake had been made, we corrected that mistake by mutual agreement.\"\n\n\"Works for me.\"\n\nPerhaps I should have angled for a pay rise, but that might have been pushing my luck. And besides, there'd been no mention of me repaying the two months' wages they'd already given me. Well enough.\n\nOn the way home I texted my brother with the good news, and then got to thinking about what had happened. My guess had been correct; Peter had fired me at RJ's bidding, and presumably because Phoebe had told him something about our breakup.\n\nI wondered what had happened there. She must have been pretty upset to tell him, or for him to figure it out. And after that...\n\nI supposed I owed somebody an email.\n\nPhoebe,\n\nThank you very much for... well, you know. It was a generous thing to do, and you didn't have to, but I appreciate it a lot.\n\nI won't bug you further after this, but I thought I should at least say thank you. Wishing you well for your audition (I think it's Monday?) and for everything else. Best always - Yvonne.\n\nI read it over two or three times, made sure the wording said what I meant to say, then took a deep breath and hit send.\n\nThen I called a few other friends to tell them I was back in the land of the gainfully-employed, and made up my mind to enjoy the weekend \u2014 which I did. If I happened to go back and check my email a little more often than usual, well, what of it? And in any case, there was nothing there but the usual spam and notifications. Not on Friday night, not on Saturday morning, not on Saturday afternoon, and not even on Sunday.",
        "On Monday afternoon I went out to buy clothes. I still had plenty of T-shirts, but I thought it might be diplomatic to wear something more respectable to work until people got used to the hair. Since my good shirt had never shown up \u2014 I could only assume it had been eaten by monsters under the bed, or perhaps 'borrowed' by one of Aleks' friends \u2014 I picked up a couple of sober-looking collared shirts and a pair of trousers into the bargain for when the knees gave out on my Old Faithfuls.\n\nWhen I got home, there was an email waiting for me from Phoebe in between two Russian brides and a Syrian dissident looking for help shifting his improbably large fortune.\n\nHi Yvonne, it's good to hear from you. I hope you're doing well. Audition was this morning, I think I did well, but I'll hear back in a week or so after they finish the other auditions. There were a lot of other candidates so may be a second round.\n\nBut I'm confused... not sure what you're thanking me for? I'd like to take credit but I really don't know what it is. Wishing you well - P.\n\nI scratched my head and replied:\n\nGetting my job back?\n\nHalf an hour later my phone rang. I jumped, and it rang twice more before I calmed myself and answered it. \"H-hello? Phoebe?\"\n\n\"Yvonne? What's this about your job?\"\n\n\"It wasn't you, then?\"\n\n\"I have no idea what you're talking about. Honest. You lost your job?\"\n\n\"Yeah... don't take this the wrong way, but your dad fired me. Or got Peter to do it. Three weeks ago. I think he found out about us.\"\n\n\"Fired you? Jesus! I'm sorry, that might have been my fault. I was pretty upset and I told him a few things, but I never thought he'd do anything like that.\"\n\n\"It's okay, he took it back. He said somebody told him off for it, I assumed that was you.\"\n\n\"No, I would've if I'd known, but this is the first I've heard of it. But thanks for the vote of confidence. After the last time we talked... well, I didn't think you had much opinion of me.\"\n\n\"Yeah. Um.\" I took a deep breath, remembering my parting shot of a month ago. \"I was... pretty angry last time I wrote to you. I could have been kinder in how I expressed myself.\"\n\n\"I know you had reason to be angry. Just... listen, I owe you an explanation, but not over the phone. I'm heading down to Ballarat next Monday anyway, meeting up with the aunts at Mum's place to sort out what's happening with her stuff. I'll be coming back Tuesday, we could meet in town on my way to the airport?\"\n\n\"Yeah, that works.\"\n\nWe agreed on a time and place, and then hung up without making further chit-chat. Talking to an ex is nervous business, like revisiting an old battlefield; even if you step around the unexploded shells, it's hard to forget the blood that's been spilt there.\n\nThe thought of seeing her again made me uncomfortable. I wasn't expecting drama, but it'd taken me a month to pull myself back to some sort of emotional equilibrium and I was afraid of losing it again and toppling back into the pit.\n\nThat week I armoured myself. I reminded myself of the facts: I'd called it off myself and it was probably for the best, for both our sakes. On Monday we'd meet and have a civilised talk \u2014 perhaps we'd get a little closure out of that, not that I really needed it at this point \u2014 and then go our separate ways, thinking of one another less and less as time went by. After a decent interval had passed she'd find herself a nice boy, one she didn't have to hide from her family. I'd take my brother's advice, stay single for a while, and then perhaps fall into a relationship quite by accident, the way I usually do.\n\nPerhaps one day I'd see her on TV and tell some new lover about the musician I used to date. But by that stage, all the moments that had once been so overwhelming, so much in the present \u2014 our first angry kiss, the delight in her voice as she rhapsodised about an electric cello, the way she shook as I held her in that hotel in Ballarat \u2014 would be just dry memories with no power to unsettle me.\n\nAnd in the meantime, I wouldn't spend too much of the week worrying about it. I had seven days of leisure \u2014 paid holiday! before I was due to meet her, and that was my time to enjoy myself. There were friends to visit, books to read, films to watch, clothes to wash...\n\n***\n\nShe was taking the train back from Ballarat and then switching to the airport shuttle at Southern Cross, so we'd agreed to meet in a cafe near the bus terminal. I got there early and sat at a corner table, distracting myself with an old newspaper so I wouldn't keep fretting about our meeting.\n\nI'd been staring at the crossword for several minutes, trying to make sense of \"Average lover's still a lover (8)\", when I realised Phoebe was standing in front of my table with a wheelie suitcase, in slacks and a faded T-shirt, waiting for me to notice her.\n\n\"Hello, Yvonne.\"\n\n\"Oh! Hello, Phoebe!\" I put the paper aside and waved her to the empty chair opposite me. \"How are you?\"\n\n\"Oh, not bad. You're looking well \u2014 I like the hair.\"\n\n\"You think?\" I ran my fingers through it. \"I wasn't sure about it.\"\n\n\"No, it suits you.\"\n\nA silence.\n\n\"How'd things go in Ballarat?\" I asked.\n\n\"Oh, not too bad. I was worried the aunts might fight, they're like that sometimes, but they behaved. It's not like Mum had a lot of stuff worth fighting about. She didn't like to own more than she could fit in the car.\"\n\n\"I guess that makes things simpler.\"\n\n\"Uh-huh.\" She looked at me briefly, then away again, and pulled out a small notebook. \"Listen, this might seem odd, but I wrote down notes, what I want to say, so I could get it clear in my head and so I didn't leave out anything important. Let me get through it and then ask whatever you want.\" And she began her story.\n\n***\n\nIt's Sunday morning at RJ's house, four days before the funeral. RJ has gone out to talk with Helen's sisters about the arrangements. Yaya is sitting out in the garden, in a sunny spot near the pool. Her arm's slowly healing from the surgery but it still aches, and the warmth makes her feel better.\n\nShe hasn't been using the wheelchair this last week. She says she's feeling stronger, and that she doesn't need Hamish fussing over her all the time. But it's RJ who pays him to look after her, so he sits in the lounge room where he can keep a watchful eye on her through the window while he surfs the net.\n\nPhoebe's just brewed a pot of herbal tea, the kind her grandmother likes, and now she's headed out to the garden with a cup in one hand. Only one cup; with what she has in mind, she has enough to worry about without looking after a cup of her own.\n\n\"Hello, Yaya.\" They're speaking in a mix of Greek and English, as they usually do when it's just the two of them.\n\n\"Good morning, dear. So thoughtful, just what I wanted.\" Yaya takes the tea with her good arm and rests it beside her. \"How are you feeling?\"\n\n\"Oh, still a little sad.\"\n\nYaya nods. \"Of course you are. Come and sit with me, Bee-Bee.\"\n\nPhoebe sits beside her, and kisses her on the cheek. Yaya's skin feels like warm paper.\n\n\"You wouldn't remember it, but Helen, she used to sing to you every night when you were very small.\" She pats Phoebe's arm. \"I don't think she liked me much, and I'm sorry for that. I know it's hard to bring up children \u2014 God knows it wasn't easy for me, out here with just your Grandpa \u2014 and I tried to help, but it was like it was an insult to her. But she was your mama and she loved you, and I'm very sorry she's gone.\"\n\nPhoebe can feel tears welling in her eyes, and she has to blink to keep them down. She can't talk about that stuff, not just now, because there's another conversation she needs to have and she's been putting it off for days.\n\n\"Yaya, I need to tell you something important. And Dad too, but I wanted to talk to you first.\"\n\n\"What is it, dear?\"\n\nPhoebe swallows, looks out at the pool where the ripples cast mottled shadows on the bottom.\n\n\"You know my friend Yvonne?\"\n\n\"The one who works for your papa? Of course I know her.\"\n\n\"She's, um, she's my girlfriend.\" She's used the English word, and Yaya looks uncertain, so she goes on: \"I love her.\"\n\n\"What are you saying? Like... lesbians?\" There's a hint of distaste in her voice.\n\n\"Yes. Sort of. Yes.\"\n\n\"I don't understand. Why do you think you love this girl? Maybe you're just really good friends?\"\n\n\"I... no, it's not just friends. We kiss. Not like friends.\"\n\nYaya says nothing. The yawning silence demands more, an offering of words.\n\n\"We, um, we sleep together. Sometimes.\"\n\nYaya makes a noise between her tongue and teeth. \"How ever did this happen? You weren't interested like that in girls. Never.\"\n\n\"I'm not. Just her.\" Again, the silence. \"We met at Dad's Christmas party. She kissed me, and... um.\"\n\n\"She knew you were his daughter? When she kissed you?\"\n\n\"Yes, I... no, it's not like that! This isn't about Dad!\"\n\n\"Bee-Bee, do you know they've changed the laws now? If it looks like you're her girlfriend and then you split up, she can take you to court and get some of your money. You have to be careful!\"\n\n\"Yaya, I don't have any money. You know that.\"\n\n\"But you will some day. Who do you think your papa will leave this to? Who does this girl think he's leaving it to?\"\n\n\"Grandma! I was with Luke three years. You never worried about him trying to get Dad's money.\"\n\n\"Well, it's natural for a man and a woman to be together. Your grandpapa and I... he wasn't a good husband, you know? I had to hide money so he wouldn't waste it all. But I had your papa, and little Achilles, God bless him. And from your papa I had you. And you and your papa and your uncle, that was worth all of the trouble your grandpa gave me. Even coming out here, so far from home, leaving my mama and papa behind. And one day you'll understand how wonderful it is. But a woman can't give you that. Women need men, men need women.\"\n\n\"Grandma.\" She's near tears again. \"You know it's not as simple as that. I thought you understood. You remember Ralph who used to teach me cello, you knew he was gay. You didn't mind then.\"\n\n\"Maybe some people are born like that. I don't know, maybe God has reasons for it. But you... I know you like men. We used to watch movies together and argue about who was most handsome. You never looked at girls. Now you can't be happy with a man any more? When did this change?\"\n\n\"I, no, I haven't changed. I still like men. If I wasn't with Yvonne, I think I could be happy with a guy. But I'm happy with her.\"\n\n\"Bee-Bee, if you don't need this, why are you doing it? Maybe you're still sad about Luke and you don't want to see another man for a while, I understand that. But you don't need to do this just because you're lonely.\"\n\nThe worst part is that there's some truth there: she was still angry at Luke when she let Yvonne kiss her (et cetera), and that's where it all started. She is afraid of loneliness. And while she's still trying to find words to explain that she has far better reasons, Yaya has already moved on and the chance to reply is lost.\n\n\"Why don't you take some time and think about this, dear? You have so much on your mind just now, don't drive yourself crazy with this as well.\"\n\n\"Grandma, that's why I need to talk about it now. Yvonne makes it easier for me to cope with everything else. Mum, the audition, you. I want her there with me on Thursday.\"\n\n\"You need her... to cope with me?\" She doesn't sound angry, just hurt.\n\n\"Grandma, grandma, I didn't mean it like that... just that it's been difficult, with you ill...\"\n\n\"Bee-Bee, I'm your Yaya. I love you until the day I die. I know I've been cross lately but I didn't see how hard it was on you, I'm sorry. This sickness, it's hard to think about other things properly. Poor child, you've lost your mother, and here I've been arguing with you and your papa about the funeral. No wonder you're angry with me. No wonder you need somebody else to comfort you.\"\n\nNow Yaya is crying, and Phoebe realises: she has never seen her grandmother cry. She's comforted her, but she's never really comprehended what it must be like to be old, and frail, and to have your very bones become a malignant foe. To bury a child and a daughter-in-law, and wonder whether you failed them.\n\nAnd even now, with the surgery past... Yaya is still seventy-five, and frail, and there's no guarantee the cancer won't come back. If Phoebe hurts her now, this woman who's watched over her all her life, there's no guarantee she will ever get a chance to mend it. She can't take that risk, not now, not when she's about to bury her mother with so much left unsaid. Later, when things are back to normal, she'll find a better way to explain things and answer all Yaya's objections.\n\nShe wants to hug her grandmother, but the arm-brace is in the way and the best she can do is a pat on the back. \"Yaya, I know you love me. I love you too. Listen.\" She already knows she's going to hate herself for this. \"I'll talk to you about this again, some time when things aren't so crazy. Maybe I can explain it better then. But I'm not angry with you.\"\n\nShe thinks: I can't bring Yvonne on Thursday. Give me time, and I can bring Yaya around, but not yet.\n\nBut if I tell Yvonne what just happened, she'll be terribly hurt. She hurts so easily. And I'm not in any shape to comfort her just now. I need time. And then later, I will tell her the truth, and apologise.\n\nShe holds her grandmother's hand tight, fingers bony-thin between her own. When at last Yaya is settled again, Phoebe kisses her on the cheek once more before slipping away to make a call in private.\n\n\"Hello, Yvonne? About Thursday? I didn't realise, but the chapel is quite small, so they need to restrict it to family and Mum's friends...\"\n\n***\n\n\"...I just didn't know how to handle it. Too many things in my head. I didn't expect her to take it that way.\" She'd written down a list, and she started to read off it: \"I was scared of fighting with \u2014\" but she was losing her composure rapidly, and she stopped talking and handed the list to me.\n\nFighting with Yaya when she's sick. Thinking every time \u2014 what if this is the last?\n\nFeel like fraud when people give me sympathy for Mum.\n\nThought I'd have Yaya's support when I told Dad about Yvonne.\n\nCan't remember when Nero last got together, think we've fizzled out. Don't have time or energy anyway.\n\nPlaying funeral music on crappy rental cello with loose pegs. Let alone practice for audition.\n\nYvonne likes Yaya, will be so hurt if I tell her.\n\nShe watched as I read the list, waited until I looked back up at her. Her face was paler than I remembered and when she spoke her hands mirrored her agitation. \"I just couldn't figure out what to do. I remembered how upset you were that weekend in the Hunter, when I laughed at the idea of telling Dad about us. I couldn't deal with that on top of everything else.\"\n\n\"You could have told me. I would have coped.\" Would I? Well, I preferred to think so.\n\n\"Maybe. I wish I had. I just couldn't think straight. I thought I'd come clean to you later, when I'd sorted out the other things. And then it seemed like it was never a good time. I was scared to tell you and the longer it dragged on, well, you know. I can't undo that, and... I am sorry. I really am. Not just because I got caught.\"\n\nI thought: Poor girl. That was a lot of crap to deal with, all at once.\n\nI thought: Reasons or not, she lied to me.\n\n\"And then when you found out... I know you had reason to be angry, but it felt like you'd turned into the Lord High Prosecutor instead of my lover, and I just couldn't cope with that. But you know the really stupid thing? I could have just brought you along as a friend and nobody would have been any the wiser. I told Yaya because I didn't want to pretend. And then look where I ended up. Anyway, that's it. That's what happened.\" At last her hands quieted, and she flattened them on the table.\n\n\"Uh-huh.\" I reached out, where her hand had settled on the table, and rested my fingers on hers. It didn't cost me to give that, at least.\n\n\"So where does that leave us?\" she asked.\n\n\"There's still an 'us', then?\"\n\n\"If you want there to be.\"\n\nI thought about the imperfections of our relationship and ourselves. The distance; the tension of a disapproving family (one of them my boss); my insecurities, and Phoebe's, and the damage already done by what had passed between us.\n\nDamage to me, or to my ego? Were they the same thing?\n\nThen my fingers curled around hers, and hers curled around mine: two hooks linked. \"I would like that,\" I said. \"I've missed you.\"\n\n\"I mi\u2014\"\n\nThe moment was interrupted by her phone. She gave it a bored look, as if about to drop the call, but then raised an eyebrow as she saw the number. \"Sorry, I should take this one.\"\n\nShe picked it up. \"Hello? Yes, speaking. Good to hear from you.\" I felt her fingers tighten on mine as she listened. \"Oh, thank you. Yes, I can... the ninth, next Monday?\" She mouthed to me: 'second round'. \"Yes, eleven is fine. What do you want me to prepare? ...yes, I can do that. I'll think about it and let you know tomorrow. All right, thank you very much, I'll see you on Monday. Bye!\"\n\nShe put the phone away and gave me a half-smile. \"Made it to the second-round audition. I was hoping for better news, but it's still good.\"\n\n\"Well done, you.\" I squeezed her hand. \"So I take it this means I shouldn't ask if you can stay on tonight.\"\n\n\"Sorry. I really would love to, but...\"\n\n\"It's okay. I'm glad. When do you have to go?\"\n\nShe glanced at her watch. \"About ten minutes.\"\n\n\"That soon?\" Then, almost before I'd thought of it, \"In that case, can I come too?\"\n\n\"What, now? To Sydney?\"\n\n\"I've got the rest of the week off, and I've still got most of my severance money. If I wouldn't be in your way.\"\n\n\"You wouldn't be. But \u2014\" she looked me over \"\u2014 you don't have a change of clothes or anything with you.\"\n\n\"I can pick them up at the other end. Or just spend the time nude until you throw me out.\"\n\n\"My, but you're forward.\" She patted my hand. \"I'm sure we can manage something.\"\n\nIt didn't work out quite as neatly as I'd hoped. Phoebe's flight was full, and the best I could get was two hours later. So we hugged at the gate \u2014 I wasn't quite bold enough to kiss her yet \u2014 and parted with a \"see you soon\".\n\nWas I really flying seven hundred kilometres on the spur of the moment, without so much as my laptop or a toothbrush, to visit someone I'd thought was out of my life? Was I kidding myself to think it could be mended so easily? I plagued myself with doubts the whole way there, and when I switched on my phone I was half-expecting to see a message from Phoebe: Sorry, this is a bad idea, hope you haven't left yet.\n\nBut there was no message. I'd told her to go on ahead when she got in \u2014 I could find my way to her place from the airport \u2014 but when I deplaned at Mascot she was there in the lounge, waiting for me.\n\n\"Thought I'd keep you company on the train.\"\n\nWe didn't talk much on the train, mostly just sat side by side enjoying one another's presence. I was happy and yet uneasy; it still seemed too good to be true.\n\nAs we walked back to her place, through the leaf-dappled sunlight of a gentle winter afternoon, Phoebe said: \"I have a confession to make. I pinched one of your shirts, that time when we visited John and Cat.\"\n\n\"Wait, that was you? I've been looking everywhere for that. What...\"\n\n\"I took it home so I could wrap it around a pillow and have something that smelled of you. You were out of the room when I had the idea and then I forgot to ask you... and afterwards I felt silly about it. Then when... you know. I washed it and put it away. But you can have it back now. I hope you don't mind.\"",
        "\"That may be the most adorable thing I've ever heard.\" I hugged her impulsively, and she stopped and hugged me back, leaving her suitcase to fend for itself. Then I kissed her on the cheek, blinking away sudden tears. \"I'm glad to have you back.\"  \n\n\"I'm glad to have you back.\" And she kissed me on the lips, not deep, but lingering. \"Come on, let's get home. I have no idea what we're going to have for dinner.\"\n\nIn the end we sat on the couch, eating Reheated Leftover Surprise and watching the news. By the time they got to the sport I'd finished my meal, and I turned to Phoebe:\n\n\"I haven't told you why Susan was off work, have I? Her daughter was having bullying problems, so she took some time out.\"\n\n\"That bad?\"\n\n\"Yeah.\" I filled her in on the detail.\n\n\"Huh. Poor kid, I hope she'll be all right. By the way, you know Susan and Dad used to have a thing going?\"\n\n\"What? No. Really?\"\n\n\"Just for a year or so, not long after Mum left. I saw her around, didn't think anything of it at the time 'cause I was only eight. Years later I started to put two and two together, and I got her alone one Christmas party and asked her about it. They'd both just come out of messy breakups and they ended up in... well, sort of 'friends with benefits', I suppose. Then Dad got promoted so he was managing Susan, and they decided that would be a sensible time to break things off. She met her husband...\"\n\n\"Danny, I think?\"\n\n\"Yeah, Danny. She met Danny not long after, so that was that. But she and Dad still exchange Christmas cards. She sent us a really sweet letter and flowers after Mum died.\"\n\n\"Well, well. I had no idea it was anything more than a business relationship.\"\n\nThen I paused as I remembered RJ's words. Somebody he respected had spoken to him \u2014 \"rather forcefully\" \u2014 about his decision to fire me. And I remembered Susan's rage: \"I want to kill those girls. They have no right to do that to my daughter. No right.\"\n\nThen I considered what Susan's reaction might have been, supposing that she'd made a few enquiries and found out the real reason why I'd been fired... and I almost felt sorry for RJ. Almost.\n\n\"Whatcha smiling about, love?\" asked Phoebe.\n\n\"Oh... just figuring something out.\" I carried our plates over to the sink.\n\nPhoebe switched off the TV and came up behind me, slipping her arms around my waist. \"So... what did you have in mind for tonight?\"\n\n\"You know... it's been a while since I heard you play. Maybe the Bach?\"\n\nHer lips quirked into a smile. \"As you like.\" She pulled out her stool, tidied her hair back out of the way, and tuned her cello. Then she sat, closed her eyes, and began.\n\nI watched more than heard it, her eyes half-closed, the smile still lingering, as her bow danced over the strings. There was a tightness in my chest, but it was welcome; it was the joy of finding my way back to something I'd thought lost forever.  \n\nAs she played I moved around her, standing behind so I could better see the flex of her shoulders, her whole body absorbed by what she was doing. I knew I'd never have the ear to appreciate her talent (or the cello she played, for that matter), but through her I could share the delight her passion brought.\n\nShe came to the end of the Prelude and spoke softly: \"Shall I continue?\"\n\nI kissed her head lightly. \"Please.\" And as she started the Allemande I rested a fingertip at the base of her neck, and I could feel as well as see the music of her body, the shift and play of her muscles. She didn't flinch, and her posture was such that I barely had to move to maintain that contact as the melody wandered and circled and came to a rest.\n\nThen as she shifted into the Courante, lively and quick, I began to stroke her neck. A touch here, a pause there... and I realised I could hear my fingertips in the music she played, the frisson of my touch translated to a subtle emphasis in volume here, a tiny quickening in pace there.\n\n\"You're trouble,\" she whispered, and even as she slowed again for the Sarabande my hands drifted down to wander her shoulders, rising and falling with her movements... I was following her, and yet I felt I was leading too, my intent mirrored in her actions.\n\nThe Sarabande was over too soon, but the Minuets came next, disciplined and regular... or so they should have been. For now I brought my hands back to Phoebe's neck, drifting around under her hair and exploring the bare skin at either side just under her jaw, and I could tell she was struggling to maintain composure. \"Bad!\" she whispered, and I parted her hair and brushed the back of her neck with my lips; I felt her on the verge of stuttering, and I eased off, and waited, and then started again.\n\nAt last, up-tempo again for the Gigue, and I ran my hands down her back, lingering on her waist, planted at last on her hips. The way Bach wrote it, it races to the finish \u2014 well, the way Phoebe played it that night, it outran Bach and Casals, Rostropovich and du Pr\u00e9, notes tumbling over one another until she ended it with a fierce chord.\n\nPhoebe stood, set the cello safely in its case... then suddenly she wheeled on me, and before I knew it I was in her arms and in her mouth. She broke from the kiss just long enough to get out \"You're incorrigible, you really are!\" and then with another kiss she cut off any reply I might have made.\n\nWe tumbled onto her bed, inextricably twined around one another as we kicked off our shoes. For a while we just lay there and embraced, content to hold and be held; then our hands began to wander, caressing and fondling. On a whim I nudged her over onto her belly and rolled onto her, fingers stroking her sides, legs straddling hers, as I nuzzled the hair aside and began to kiss the nape of her neck.\n\nI growled very softly in the back of my throat \u2014 or was it a purr? \u2014 and she stiffened under me, taut but motionless, as I nipped at her skin and my fingers hardened, catching at her T-shirt, dragging it away from her waistband and then burrowing beneath it to claw stripes across her ribs.\n\n\"Mmm. Nice.\" She had her arms stretched out in front of her; I reached up with my right hand to hold her wrists together, and my left scratched down her side, wriggled underneath her so she could feel my fingernails in her exposed belly. She said nothing, but I felt her exhale, long and slow, and her legs pressed tighter against mine.\n\nI twisted sideways a little to get better purchase on her neck, and gripped her between my teeth, growling again. She said a quiet little \"oh...\" as my hand moved up her front again, halting at the elastic of her bra, pushing under it and sideways, my index finger raking a curve along the underside of her breast.\n\n\"I want you. I want you.\"\n\n\"Want you too.\" She pushed back against me as I rocked my hips against her arse, she grunted softly as I thrust my hand up under the bra-cup, displacing and supplanting it, five fingernails digging into her breast, her nipple rubbing against my palm.\n\nI let go her wrists, jammed my thumb into her waistband. \"These need to come off now.\" I shifted my weight back, letting her lift her hips a little, and she wriggled to assist as I fumbled with the buttons, tugged the zip open, shoved them down to her knees along with her briefs. As I did that I pushed her T-shirt up and popped the catch of her bra open. Then I settled my weight on top of her again, pressing her against the mattress and into my hands: one back at her breasts, the other between her legs.\n\n\"I could lie here all night.\" I pressed my hips against her. \"Whispering how much I love you.\" With my knees I coaxed hers open. My fingers pushed through her curls and found her labia, began to work between them, as my other hand enveloped her breast. \"But I can say it better this way.\"\n\n\"I like that language.\" She reached back behind her, one hand on my hip, the other at the back of my neck, both holding us together. I began stroking in earnest and she responded, grinding against my hand.\n\nWe were doing well for a while, and then I noticed Phoebe was tensing up; not the aroused kind of tense, but the uncomfortable kind that gets in the way. It took me a moment to realise the problem: Phoebe was wearing less than me \u2014 or rather, it was covering less, thanks to my previous efforts \u2014 and the night air was cooling around us.\n\n\"Let's get under the covers.\"\n\n\"I was going to say.\"\n\nWe shed the remainder of our clothes and crawled in together, spooning side by side. At first we just cuddled, and I squeezed Phoebe as tight as I could; after a little while, when our body heat had warmed the bedclothes, I felt her softening again.\n\n\"Now, where were we before?\" she asked.\n\n\"I think I was doing something like this.\" Once again my fingertips drifted down her side, circling on her hip before slipping down between her thighs. She angled her leg to give me better access, and as I established a soft but insistent rhythm \u2014 rub, rub, circle, rub \u2014 she placed her hand on top of mine, as if to say: more pressure.\n\nI took the hint, and although here and there she flinched at the roughness of my touch, her hand stayed firmly on top of mine. She was breathing faster now, and with her other hand she was holding (pinching?) her own breast. She gasped when I slipped down and into her, renewing the lubrication on my fingers, and then again when I came back up to flick her clit, toggling it from side to side, up and down.\n\n\"Don't stop...\"\n\nI would've liked to keep her on the edge, slowing down and drawing it out, but it had been so long; I was ravenous for her, and impatient to feel her come, to consummate our reunion. So I did what she asked, faster, bolder, and as I kissed her back and shoulders she yelped, and her head snapped back, and her thighs squeezed me tight as she came.\n\n\"Oh, darling... oh.\" She held my hand against her, motionless now and snug, surrounded by the heat of her body and the pressure of her thighs and the fading spasms of her muscles. \"Mmm, that's what I needed.\" She twisted around enough to face me and we kissed; then she took my wrist, drew my hand up to her mouth, kissed my fingers and tongued in between them. \"Give me a few minutes, and I'll do something for you.\"\n\n\"No rush.\" Sometimes a vicarious orgasm, experienced through the senses of somebody you love, is as good as the real thing... but that doesn't mean you can't try for both.\n\n\"Hey, I heard a carpentry joke.\" She rolled over again, pressed her back against my chest, pulled my arm around her and hugged it against her chest. \"Want to hear it?\"\n\n\"A carpentry joke?\"\n\n\"How many screws does it take to assemble a lesbian's bed?\"\n\n\"Um... as many as she wants it to?\"\n\n\"None. It's all tongue-in-groove.\"\n\nI groaned. And a few minutes later I was groaning again, and gasping, but not because of her jokes.\n\nAfterwards, somewhere in the hazy land between afterglow and slumber:\n\n\"Yvonne, are you still awake?\"\n\n\"Maybe. A bit.\"\n\n\"Something I need to say to you.\"\n\n\"Yes?\"\n\n\"I don't know... if we'll be together forever.\" She squeezed me tight. \"I mean, I love you a lot. I want it to last. But I can't see the future... if some day we decide we've drifted apart and it doesn't make sense to stay together, sometimes that happens.\"\n\n\"Okay?\" I wasn't sure where this was going.\n\n\"But this is the important bit. I don't want to break up for stupid reasons. Sweetie, I love you, but I'm human. I guarantee that if we stay together long enough, some day I'm going to screw up and hurt you again. I won't mean to, but those things happen. And if that happens... I'll need you to help me with mending things.\"\n\n\"Hmm?\"\n\n\"I don't mean you can't be angry. I expect I'll be angry at you sometimes. But even if you're angry, can you remember that I love you, and I'm trying to fix things even if I'm not sure how to do it? Because I can't fix things if I'm the only one working on it. Even when it's me that broke them.\"\n\nI thought about how I'd reacted, back when I'd first found out about the lie. I could have gone to her and asked: what's going on? Instead I'd chosen to test her, and punish her, without even knowing quite what she'd done or why. And, yeah, if she'd told the truth in the first place I wouldn't have needed to work out how to deal with that situation.\n\nBut what's done is done; if you love one another, the question is what you're going to do next. And I could see myself screwing up some day \u2014 perhaps I'd forget a birthday, or miss a concert, or some other stupid thing \u2014 and I thought: when that happens, do I want to be carrying it forever?\n\nNo. I want to be able to leave that behind, without leaving Phoebe behind.\n\n\"Yeah. That makes sense.\" I wanted to say: sorry I didn't ask, as soon as I found out from Leon. Sorry I got so caught up in my fears that I drove you away when you were trying to apologise and explain. But it's hard to admit such things, and instead I just said: \"Sorry about how I handled stuff before. You know, if your dad hadn't fired me, or if I'd realised it was Susan that changed his mind, I probably wouldn't ever have...\"\n\nShe patted me. \"But you did. And here we are.\"\n\nAfter some thought I said \"Sweetie, can I ask you something?\"\n\n\"Of course.\"\n\n\"Still straight?\"\n\nShe chuckled, then paused before answering. \"I love you. I want to be with you. If people need a label they can decide for themselves what that makes me.\"\n\nAnd not long afterwards, I fell asleep in my lover's arms."
    ],
    "authorname": "Bramblethorn",
    "tags": [
        "lesbian romance",
        "lesbian novella",
        "music"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-stringed-instrument-ch-13"
}