{
    "title": "Friends, Enemies, and Exes Ch. 08",
    "pages": [
        "Charlie \n\nWalking the grounds of Ashley's estate, Charlie took deep breaths and deliberate steps, enjoying the feel of cool wet grass between his toes. In an hour morning would dawn on the house, and not long after the happy little women he owned would wake up in each other's arms, give each other light, delicate kisses, and march downstairs for a nice breakfast. More than a few would straggle in late, too tempted by one another to resist a quickie. Then it would be another day of cumming, and cumming, and cumming, and cumming. \n\nAnd cumming. \n\nHis hours researching with Erica gave him one kind of rest, his late night strolls on the grounds another. In the study, he made phone calls to respected historians around the country, consumed book after book after book and jotted down his notes in frantic shorthand that Erica would later refine. Out here, in the dark and the cool air, he breathed slowly, kept his mind clear. Charlie could no longer remember what it felt like to be tired. \n\nEvery woman who took his seed gave something in return, he knew. And after months of collecting them, old and new, he had a lot of that something inside him. For once, it was out of his control. Charlie made no effort to trim his figure, to live without sleep, to be able to vigorously pleasure these women without even breaking a sweat. They simply happened. Maybe it's them, he posted to himself. If they're sleeping, I get their rest. If they're eating, I get their energy. Maybe that's it. There was certainly no better explanation in his mind. \n\nEven from the deep reaches of the topiary garden, two acres from the nearest bedroom, Charlie could feel the energy of each and every one of his girls. If he focused, he could see and hear their dreams. In his bedroom, Sammy cuddled lovingly with Sarah, dreaming of being the former novitiate's footrest. Sarah was having a more muddled dream, a carnival of pastries and other sweets. \"Ride the cinnamon bun ferris wheel!\" a barker cried. \"Take a walk through the licorice jungle!\" \n\nSome of the new girls - all various women from around the city he was just getting to know - dreamt more in thoughts, still adjusting to their new situation. One of them in particular, the sorority girl Stefanie, was talking to a room full of herself, debating the next step. \n\n\"Do you want to just be another face in the crowd?\" one asked. \"There's so many women here already.\" \n\n\"This is stability,\" another argued. \"This is support and safety. Besides, there's nothing stopping me from pursuing other relationships.\" \n\n\"And I can leave any time I want,\" a third said. \n\nA fourth, a little louder than the rest, sat bristled and said, \"But why would I?\" \n\nAltogether, the Stefanies shivered and wiggled at the memory of Charlie's cum. \"He tastes too good.\" \n\nCharlie smiled at that, leaving her dream and reminding himself to spend a day with her. He already knew that she was a journalism major, with every intention of finishing her degree. In the week that she'd lived in the house, she stood out as one of the more well spoken girls, no doubt attained through her writing experience. And as he Rewired her, he found just how sexually liberated she had always been, experiencing relatively few sexual encounters that did not end in orgasm, rarely suppressing her urges to masturbate or seek a sexual partner. \n\nHe also learned how much more difficult it was to Rewire a woman he'd just met. There were fewer memories he could logically insert himself into, besides the occasional manufactured scenario of bumping into him on the bus or at the library. Instead, he had to dig a little deeper, find the traits that attracted her to someone, and angle them a little more in his direction. Thankfully, he did not have to do too much work in that regard. In a normal scenario, they would have gotten along very well. \n\nAs he started to walk back to the house, Charlie realized that a few of the girls were still awake. Alex and Lauren were up in their studio, apparently drafting new lyrics for their songs. Penny was with them, strap on harnessed around her waist and Lanie's lips closed tightly around the rubber cock. The four mistresses, all getting along. \n\nHis cock twitched as he watched through Penny's eyes. It was always hard when he was not in the study, but still even the slightest thing could set him to throbbing without a moment's hesitation. His libido was no longer a question of turned on or off, now it was hard or harder. \n\n\"I want to see her!\" someone shouted far away. Charlie followed the sounds of a very upset woman at the front gate. The night security was speaking to the woman calmly, though she continued to shout and had her phone out, threatening to call the police. His own appearance in the scene might only make her more hysterical, so Charlie stayed back and waited until she gave up. Her call to the police did her no good, as Charlie knew would happen. \n\nWhen he approached the gate, the guards waved and saved, \"Morning, boss. Hope she didn't wake you.\" \n\n\"No,\" Charlie said. \"I was already up. One of the mothers?\" \n\n\"Stefanie's mother, she said.\" \n\nCharlie sighed, exasperated. \"I suppose it's only a matter of time before the press comes around. That's the tenth one this week.\" \n\n\"I hope I'm not rude to say it, but maybe you could tell the girls to talk to their families a little? Tell them what's going on?\" \n\n\"Oh they do,\" Charlie answered. \"Stefanie was on the phone with her mother just before she went to bed. Doesn't mean they think this is okay.\" \n\n\"It is okay, right boss?\" \n\n\"That I can promise,\" he said. \"I'm going to get a few extra hands on all shifts. I expect media attention is going to draw some bright minds to try a few things.\" \n\n\"Sure thing, boss. Should we keep our mouths shut?\" \n\n\"It isn't imperative. But I would ask that you do. Pretty soon I'm going to open the gates and let the press see what's happening here. I don't want any misconceptions. If anyone points a camera at you, be honest but respectful. Don't talk if you don't want to, but if you want to, just tell the truth.\" \n\n\"Right, yeah. So what is the truth?\" \n\nCharlie smiled at that. \"That you're here to keep everyone safe, and so far everyone is.\" \n\n********** \n\nLauren \n\n\"CityScream?\" she repeated. That couldn't be true. They hadn't even played one gig outside the house. \n\n\"That's what I said,\" Ashley assured her. \"I called in some favors. It isn't a headliner, but it isn't first up either. By the time Fifth Manor goes on, there should be a full crowd.\" \n\n\"It's almost Thanksgiving,\" Lauren said. \n\n\"Yeah, so you've got three weeks.\" \n\nShe sat down on her bed, unable to stand any longer. \"CityScream,\" she echoed. The annual music festival that more than half the city attended. Huge corporations sponsored the event every year, shoving their brand names onto everyone's TV's at the height of the holiday season. The performance check alone would be more money than Lauren had ever earned in her life. The fanbase they could build with one explosive performance could be the first day of the rest of her life. \n\nShe set to work immediately, gluing herself to the work table to revise the lyrics as per Penny's request. When Alex stopped by and heard the news, she sat down as well to help. Her lyrics were normally better anyway. Alex could take the surface thoughts that Lauren put into lyrical composition and whittle them down to the heart of an emotion. But when Penny arrived with Lanie in tow, they both discovered her way with words. \n\nPenny already knew about the gig of course. She seemed to know everything well before Lauren did. While Lanie listened to the latest recordings and started taking notes, Penny stated her offer. \"You can each take on four songs, and when you're finished with yours you can come be my little toy.\" \n\nIt was almost dawn, but Lanie had caught up to them and surpassed them. She wearily sunk to her knees, taking the strap on Penny brought into her mouth, moaning lightly as she gave in to Penny's hold over her. Lauren and Alex squirmed in their seats a little, working slower with the distraction of their fellow Mistresses in the corners of their vision. \n\nBut Alex finished eventually, and Lauren not long after. The sun was just starting to break over the horizon as Penny stood over the three of them, slapping her strap on against their tongues, praising their work. \"Such good little sluts. I love what you've written. I know everyone is going to love it.\" \n\nShe thrusted into Lauren's mouth, pushing against her throat right away. Alex's mouth now free, she asked, \"Do you know how long our set will be, Mistress Penny?\" \n\n\"Thirty minutes. You won't be able to play the whole album, but you can play enough of it.\" \n\nShe grabbed two fistfuls of Lauren's burning red hair, giggling as it gleamed in the early morning sunlight. The sighs to her left indicated to Lauren that the other two were playing with themselves, watching her mouth get fucked. \"Do you still want me to bake for the show?\" Lanie asked. \n\n\"Yes dear,\" Penny said, her eyes never leaving Lauren. \"I'll make sure Master leaves plenty of his cum behind so that you have all you need.\" \n\n\"Won't he be there?\" Alex asked. \n\n\"He might be away,\" Penny admitted. \"We aren't sure yet. But in case he is, I want to be prepared. The scones won't be finished without a nice glaze on them.\" \n\n********** \n\nCharlie \n\nStefanie was another sleep-sucker, Charlie found. She liked to cuddle closely, her head resting on his chest as she dozed off. While Sammy gently stroked him, nuzzling into his neck, he allowed himself to fall asleep. Only an hour later, he awoke to find Sammy's hand still at the base of his cock, and Stefanie's head gently bobbing. \n\nHe wanted to feel some kind of guilt for her poor mother banging on the gates in the early hours of the morning. Guilt for buying the cooperation of the police with generous donations after Lanie's incident in the early summer. Guilt for taking the life of a beautiful young women and holding onto it for his own pleasure. But he just couldn't anymore. They were happy. Laws remained unbroken. Everyone was taking steps closer to their dreams every day. \n\nCharlie pressed into Stefanie and Sammy's minds to keep them sedated as he got up for his walk. Once again Penny had not come to bed, even after staying up all night with the other Mistresses. When he felt her out, he found her in Zoe's bedroom, teasing her with her new favorite strap on. A natural dominator, he thought. Even with me she's very feisty. \n\nSmirking, thinking deviously, Charlie reached into Penny's thoughts and pushed her gradually, carefully, surreptitiously, until she couldn't stand teasing Zoe any longer. \"Your turn,\" she said to the tiny spitfire girl. \n\nZoe didn't know what to say at first, but reluctantly grabbed her own strap on while Penny unfastened hers. Charlie felt the desire flare in his girlfriend's body as she tumbled back onto Zoe's bed, spreading her legs and breathing anxiously. Zoe gently rubbed the head of her plastic cock against Penny's clit, but she shook her head, brows furrowed into a look of pure desperation. \"Use me,\" she begged. \"Please, I need it.\" \n\nZoe tried to fuck her how she'd always seen her strong, handsome master do it. Penny bucked her hips, trying to get the right feel for it, but still it was not what she needed. \"Slap me,\" she begged. \"Call me your whore, make me cry!\" \n\nShe needs it, Charlie said to Zoe, mimicking her inner voice. She deserves it. \n\nZoe's fire had faded only slightly since coming to the house, in part because of how successful Penny's domination had been. Charlie tried to revive that for her, and with just the slightest nudge Zoe remembered herself, pushed Penny's legs up toward her head, and started pounding in and out of her in long strokes. Her hand was small but strong as she slapped Penny's face once, twice, three times on each side. \"Is that what you wanted?\" Zoe asked fiercely. \"To get fucked the way you fuck me?\" \n\n\"Yes,\" Penny cried, \"yes, please!\" \n\nShe bent down, slipping her tongue into Penny's mouth and feeling her own electric wave of pleasure. Just a few mouthfuls of cum had turned her tongue into one of the most sensitive parts in Zoe's body, as per her request. Nobody came quicker than Zoe when something was in her mouth, tongue, nipple, cock, or otherwise. \n\nIn just a few minutes of rough fucking, Penny came hard and loud. Some of the girls in adjacent rooms stirred slightly, though nobody woke up. Charlie was almost tempted to walk over to Zoe's room and fuck the both of them. But I can't fuck Penny yet, he reminded himself. I can wait until she's ready. There were two glistening cunts still in his bed to sate his desires. \n\nIn her sleep, Stefanie's mouth had wandered over to Sammy's nipple, sucking at it gently like a baby with a pacifier. It looked sweet in a way, Sammy's arm draped around Stefanie's shoulder. Charlie admired the image for a moment before rousing them to consciousness with nothing but his mind. They both sat up in bed, smiling as they saw him standing naked before them. He pointed to Sammy, then to the edge of the bed. She obediently inched down, lifted her legs, and presented her smooth, shining pussy. He beckoned Stefanie to sit on her face, which she did gladly. \n\nCharlie pulled Stefanie to him, a hand on the back of her neck, and kissed her deeply as he slowly entered Sammy. For a moment he wondered if this was how Penny felt, such a specific tightness and wetness and warmth. He hadn't been inside her for nearly half a year. But whatever the case, Sammy's womanhood enveloped him with welcoming familiarity. Inside her, he felt happy. \n\nWhen he broke his kiss with Stefanie he asked her, \"What's the best way to talk to a journalist?\" \n\n\"What do you mean, Master?\" She had almond-shaped brown eyes under a head of thick, straight black hair. Charlie started to play with the locks of it while he slid in and out of Sammy. \n\n\"There's going to be a news crew in the house very soon. I was hoping you could help me prepare for that.\" \n\nShe nodded, her face blushing from the pleasure Sammy delivered via her tongue. \"I can do that, Master. Reporters are... oh, fuck... they're easy to work with but... sometimes they can catch you off guard when... when they... when they think they already know the story.\" \n\nHe started to fuck Sammy a little faster. Stefanie looked down to watch his cock as he fucked her, and Charlie took the opportunity to nibble on her ear. He could feel the goosebumps rise on her neck. \n\n\"Thank you, Stefanie,\" he said. Like many of the girls, she always came when he said her name. \n\n******** \n\nPenny \n\nShe wasn't sure why, but this woman seemed familiar. Through the blue hue of the security cameras, she saw a milky white woman, maybe only a year or two older but much more poised and mature. \"What did she say her name was?\" Penny asked through the phone. \n\n\"Emily Kisch,\" the gateman said. \"Says she's from a psych ward somewhere in the midwest. Fine, the Whatever Institute. Yeah, yeah, whatever lady.\" \n\n\"Let her through,\" Penny said. \n\nEmily drove up to the front of the house and Penny stepped out to meet her, wearing nothing but a sundress that had become just a little loose over the months. \"Good morning,\" she said, shaking the strange and unstrange woman's hand. Up close, she felt only more certain that she somehow knew this woman. \n\n\"Aren't you cold?\" Emily asked her. \"We're coming up on December.\" \n\n\"Oh I love it,\" Penny responded. \"Would you like to come inside? I can get you some cocoa.\" \n\n\"That would be lovely,\" Emily responded. \n\nPenny took her through the lavish dining room and into the kitchen. She clapped her hands twice, and the staff member who was about to pour their drinks nodded, adjourned to the pantry, and came out a moment later. She prepared their cocoa and gave a cup to Emily, which she drank gratefully. \"Mmmm,\" she moaned. \"Is that marshmallow?\" \n\n\"Homemade,\" Penny said. \n\n\"My god, that's delicious!\" She drank it all quickly, unbothered by the heat. As she set her mug down she looked around the kitchen, awed by the detail. \"This is a hell of a house.\" \n\n\"It's a lot to handle,\" Penny admitted. \"Sometimes I miss my little apartment downtown.\" \n\n\"I'm so sorry,\" Emily said. \"I'm such a ditz. I haven't introduced myself.\" \n\n\"Emily Kisch,\" Penny answered for her. \"I heard. Have we met before?\" \n\n\"That depends on your name.\" \n\nPenny facepalmed, realizing that Emily was trying to cue her for a proper introduction. \"I'm Penny,\" she said at last, surely blushing by now. \n\n\"So you do exist,\" Emily muttered, not subtly. \"No, I don't know you. But I've heard a lot about you.\" \n\n\"Oh? I didn't know I had a reputation that could precede me.\" \n\nEmily laughed a charming, womanly laugh. \"It's a very complicated story, I'm afraid. Nothing bad for you, I'm sure. I hope you don't think poorly of me if I just get right to the point.\" \n\n\"Please, I admit I'm curious.\" \n\nEmily wore a very professional outfit, the kind of thing a Wall Street woman might wear. But instead of pearls she had a white blouse buttoned just low enough for a hint of cleavage. Instead of a scalp-tearing bun on her head, she let her hair fall in cascading ironed curls. When she spoke, her thin application of red lipstick stayed perfectly in place, smooth and glossy. \"Is there a man who lives here named Charles Ellis?\" \n\nPenny laughed. \"Ah yes, the respectable Mr. Ellis,\" she joked. \"Charlie's the man of the house.\" \n\n\"I see,\" Emily said, becoming very serious. \"He's the reason I'm here. Would I be able to speak to him? I tried to call several times but the line was always busy.\" \n\nMaster, Penny thought, reaching out to him. I know this never happens, but there's a gorgeous woman here to see you. \n\nFunny, he responded from somewhere in the house. Send her to the study in two minutes. I'll make sure Lily is cleaned up by then. \n\n\"Yes, I think he's got a little time left,\" Penny said. \"He has an appointment soon, but hopefully there's enough time to... talk.\" \n\nEmily's head tilted a little when Penny hesitated, but she smiled warmly all the same. \"That's great. I hope I'm not intruding.\" \n\n\"You just happened to come on a big day for us,\" she said. \"But we're trying to be more accommodating here.\" And if you had come on any other day, you would have walked into a house full of horny sex slaves prancing around naked. \n\nToday, the girls were dressed unless told otherwise. Everyone had a calm breakfast together, only pecking one another on the cheek and bidding each other a good morning. When breakfast was cleared from the table, everyone went off to mind their own sexless business. Lily, it seemed, was Master's last fuck for the day. In just a short while, the camera crew would arrive to do their report on Charlie and his harem. \n\nPenny gave Emily a short tour of the house, mostly pointing in certain directions and describing what was where. On their way up the stairs and to the study, they passed a few of the girls, all wearing pretty dresses or casual clothes and smiling. Penny could sense just how horny all of them were, but that was to be expected. \n\nPenny showed her into the study and found Charlie sitting alone in one of the fine leather chairs. He stood, shook Emily's hand and pecked her on the cheek. \"Emily is it?\" he asked. \"Lovely to meet you.\" \n\n\"The pleasure is mine,\" she said. \"You have a lovely home.\" \n\n\"That's kind of you to say,\" Charlie responded. Penny felt her nipples harden at his charm. He'll be fucking her in no time, she thought. \n\n\"Mr. Ellis,\" Emily started. \"I'd like to -\" ",
        "\"Charlie,\" he corrected. \n\nShe pressed her lips together, clearly unsure of it, but pressed on kindly. \"Charlie. I work at the Hecksher Institute in Colorado, and...\" she looked at Penny. \"Maybe this should be a private conversation.\" \n\nPenny bristled, but Charlie looked at her sternly. And don't listen in, he commanded. I won't tolerate it. \n\nYes Master, she conceded. \n\n\"Of course,\" Penny said, faking a smile. \"I'll come back if the crew arrives.\" \n\nAs she walked out the door, she toyed with the idea of listening anyway, but feared that Charlie was still in her head, anticipating her. Disgruntled, Penny went back downstairs and distracted herself with the gentle kisses of Lauren. \n\n********** \n\nCharlie \n\n\"Katie,\" he said. \n\n\"She's not well, Charlie.\" \n\n\"No,\" he agreed. \"Katie...\" \n\n\"The things that she's told me vary from the disturbing to the impossible. I've only been studying her for six months, but I believe I've at least gained her trust. She's consented to tests for the first time, on the condition that I came out to speak with you. You've been the only thing on her mind for ten years, and I thought that speaking with you might give me some insight on her mental state.\" \n\nCharlie did not speak for a long while. \n\n\"I understand these might be upsetting memories I'm digging up, but I'm trying my hardest to help her. But I'm already struggling to comprehend everything.\" \n\n\"We've hardly spoken,\" Charlie defended. \n\nEmily looked down at her hands and thought of what to say. Charlie realized this was one of the first women he'd spoken to in months whose mind he could not read. \"I believed she had severe delusions about her relationship with you since being admitted to the Institute. I believed she created a narrative in her head to justify her continued obsession with you. Every day she had new stories about what you were up to and how you were developing this sort of... sexual psychological power. Her obsession with you is directly linked to sex. And now that I'm here, I'm starting to wonder about a lot of things.\" \n\n\"Like what?\" \n\n\"Like how Katie knew anything about your life. She's been given no contact with the outside world in nearly ten years, and somehow she knew you were living in this house with almost a hundred women.\" Emily pulled a notepad from her pocket and flipped through it, reading off names and details. \"You've had four girlfriends since her. Lauren, Alex, Lanie, and now Penny who I believe I've just met. She tells me you have complete control over almost all of them, that you've organized a system for everyone to pursue their vocations without obstacle, that you yourself are preparing to publish a book.\" She gestured to the finished manuscript that sat on the table beside him. \n\nAgain, Charlie was speechless. Emily was starting to look flushed. \"Are you all right?\" he asked her. \n\n\"This is all very overwhelming,\" she said. \"I'm hoping that you can explain any of this with something perfectly rational.\" \n\nCharlie leaned over, placing his head in his hands. He remembered the last time he saw Katie, and the promise they made, not knowing that she would disappear only a few days later. It's almost been ten years, he realized. \n\n\"She was my first and biggest failure,\" he said quietly. \n\n\"Please, explain what is happening here.\" \n\n\"I'm sorry, Dr. Kisch. I'm very sorry, but this conversation is about to go nowhere.\" \n\n\"What do you mean?\" \n\n\"There is no rational explanation, and I know that nobody in the world will accept that. The truth is very simple and very impossible and yet it is the truth.\" He stood up, anxious and full of nervous energy. As he walked around the room, Emily eyed him with a mixture of fear and wonder. \n\n\"You mean what she's told me is true?\" \n\n\"And that's why the conversation is dead. You won't believe it, and I won't pretend it isn't true.\" \n\nEmily stayed in her seat, her eyes pointed up at him. \"Try. Please, just try to tell me.\" \n\n\"She was my first. And somehow that means something. Because of her I discovered what I could do, but I was young and stupid and I didn't realize that I was causing her harm. Fuck it all... I changed her because I could. And I did a shit job of it too. I left too many loose screws and she just started to fall apart. She couldn't function properly because of me. I lost the real Katie and she became this sex-crazed... addict. I don't know how to put it. But in a way I think I killed her.\" \n\n\"Your semen,\" Emily said. \"You used that to change her?\" \n\n\"I Rewired her,\" he admitted. \"And I was too scared to fix it because I didn't know what I was doing yet. I vowed I would never do it again, but I broke that pretty quickly. So instead I learned how to do it safely. I fucked up plenty, but this time I knew how to fix it, for the most part.\" \n\n\"Your girlfriends.\" \n\n\"I almost did the same thing to Lauren, but fortunately I pulled her back together pretty quickly. I practically erased Alex's mind by accident, but she came back from that without my help. With Lanie I learned to keep safe, but by then I just couldn't take it anymore. I had to stop.\" \n\n\"And then Penny...\" \n\n\"Without my permission. And then it was too late. And I realized I was an adult now, I was mature and I had changed, and I could handle it now. So I do. This time I'm using this... ability... to do good.\" \n\nHe tried not to let his cock rise, but it did anyway. He turned his back to Emily to keep it out of sight, but no matter how he adjusted his pants, it still looked obvious. \n\n\"Katie can see all of this?\" she asked. \n\n\"I wasn't aware of that. But it appears that she can. Even from halfway across the country. I'm sorry, but that's what I have to say. Believe it or don't.\" \n\n\"I wish I could,\" Emily said sadly. \"You understand why I can't.\" \n\n\"The science isn't in,\" he said. \"I know. I've looked through history for half my life trying to learn what the fuck this is. Nothing. Nothing provable, anyway. And not genetic as far as I can tell. Nor am I a religious man. I'm as stumped as you are. Only I know it's true because I have it.\" \n\nHis cock surged with arousal, screaming at him to turn around and fuck the woman sitting in his study. His scrotum tightened as if trying to force the cum out of him. Worse yet, he could hear the familiar sounds of a woman in heat breathing behind him. Or was he just imagining that? \n\nResist, he commanded himself. Now is not the time. \n\nHe turned around, no longer worried about his unstoppable erection. Even when he caught her staring at it, Charlie made no moves. He sat down again and crossed one leg over the other, at least taking it out of her view somewhat. \n\n\"This is very surreal,\" she said, trying to ignore her obvious arousal. \"I let Katie in on my own personal sex life as a means of getting her to open up. I'll admit some of her stories were titillating, but I never considered any of it true.\" \n\n\"And now?\" \n\n\"If it were true...\" she said, trailing off, afraid to finish the sentence. Out of curiosity, Charlie uncrossed his legs and let his cock stand at attention in his pants. \"...I could understand her position,\" Emily finished. \n\n\"It's true.\" \n\n\"If it is, then it would seem there's only one way to help her.\" \n\nMaster, the crew is here, Penny interrupted. \n\nCharlie stood quickly, moving to the door to show her out. \"I'm sorry Dr. Kisch, I have an appointment that I must attend to. If you would like to return tomorrow, I will make myself available.\" \n\nHer face was beet red now, her eyes still drifting down to his crotch, but she managed to leave nonetheless. \"I will,\" she said. \"I don't fly back for a few days.\" \n\n\"Thank you,\" he said. And he wondered, Why is she struggling to take her eyes off it? For god's sake I've never met this woman. Was Katie really that persuasive? \n\nHe wondered what would happen when she returned. \n\n********** \n\nKatie \n\nThank you, Emily! Thank you so much! I know it's hard to pretend like I'm crazy, but it was so smart of you. He's always so eager to help. He'll be here any day now, I know it. \n\nDid you like the taste of his cum? I've never had it in cocoa before. Maybe I should tell Penny to add more next time. \n\n********** \n\nPenny \n\n\"Attention has been drawn to the grounds of Ashley Elmerta's estate, now her legal property after acquiring it from her father. Concerned parents and friends reported scores of missing young women, only to be contacted by their friends and daughters shortly after, telling them they were safe, and living in the Elmerta mansion. Ms. Elmerta approached our network, hoping to clear up the misconceptions already being spread around the city. So why did nearly a hundred young women relocate to the Elmerta mansion? Two names take responsibility: Ashley Elmerta herself, and local MA recipient, Charles Ellis.\" \n\nCharlie looked so confident on camera, like nothing in the world could take him down. And still he gave off coolness, poise, maturity. It wasn't arrogance, it was comfort. At eleven o' clock on the day of the shoot, the report went up. Record time, Penny thought. But too good a story to wait on. \n\n\"It's an unconventional set-up,\" he admitted. \"But when Ashley and I worked out the plan, we decided that if everyone was comfortable in the process, then convention could be set aside.\" \n\nWhile the camera showed the facilities around the house, with a little extra focus on Lauren's studio space, the reporter's voice narrated, \"But Mr. Ellis is not running a charity organization. All the women who live in this house are part of one polyamorous relationship.\" \n\n\"I think of it as a normal, healthy relationship,\" Charlie explained. \"A man should support his partner, and I just happen to have more than one. I would like to support them all, and thanks to Ashley's generosity I've been able to get a business going to do just that.\" \n\nThe camera cut to Ashley in her bedroom, decked out like an office. \"The fact is that we are all compatible, there are different dynamics from person to person, and like any relationship, we have our disagreements. But things are currently set up in a way that allows for us to work these out. There is no hierarchy in the relationship, only in the business.\" \n\nThe narration continued. \"And that business is already producing everything from art to food to adult videos, by women and for women. Mr. Ellis requires very little convincing from his girlfriends before he funds the projects they hope to take on. And in just a few weeks, his all girl music group will be performing at CityScream.\" \n\nLauren, in a leather jacket and and Iron Maiden T-shirt, leaned back comfortably at her mixing station. \"Fifth Manor got together this past summer and just jammed out a great couple of tracks. We've been working on refining them and really polishing them, and Charlie wanted us to just get out there and start sharing out music.\" \n\n\"Although they only played their respective instruments as a hobby, the four girls in Fifth Manor were inspired by amateur producer Lauren Albright to turn their casual skill into a professional one. Drummer Lilian Hapscomb had this to say.\" \n\nLily was tapping her drumsticks against her thighs, covered in black ripped jeans, sitting at her drums. \"We were just jamming for the fun of it, and I remember thinking that this was better stuff than I ever did on my own. But when Lauren recorded it for us and showed us an early mix, that was when we thought, 'Maybe we have something here.'\" \n\nPenny tried not to laugh watching the report. But it was just funny. No one had been this mellow in a long time, and everyone seemed to slip back into that skin so easily. Only an hour before the cameras rolled on her, Penny knew, Lily was getting her tits fucked by Charlie. She could even see the light sheen of sweat still on her cleavage in the video. \n\nMiranda held her bass guitar, almost as big as her, looking cooler than anyone in a trimmed tank top. \"Lauren brought the band together, but Alex put a cherry on top. She's like the lady Bruce Dickinson, and she didn't even know it until we told her.\" \n\nNatalie and Alex sat together in frame, holding hands nervously. \"We were roommates before moving in here,\" Natalie said. \"I used to catch Alex singing along with my guitar sometimes, so I always knew she had a great voice.\" \n\n\"I still don't believe her,\" Alex added. \"I guess the people will have to be the judge of that.\" \n\nFinally the footage ended, and the anchor came back on screen. \"After the cameras stopped rolling, the residents remained very welcoming, and when asked about Mr. Ellis' nature, the words, 'Humble, caring, and thoughtful,' came up many times. An unusual arrangement indeed, but we'll see just what the new Elmerta Corporation produces in the coming months.\" \n\nAll the ladies of the house, Stefanie excepted, clapped their hands when the report ended. The home theater wasn't quite large enough for everyone to have a seat. Some girls sat on the floor while others shared seats. Stefanie knelt beside Master for the whole report, stroking his cock gently while she watched. As everyone applauded, Master leaned down to Stefanie's ear and whispered, \"Thank you.\" \n\nShe beamed, so proud of herself. Penny liked how happy Charlie could make all the girls with just a few words. And I hope he's happy too. This was a smart move. \n\n\"Now girls, I have a favor to ask of you. Tomorrow, I want you all to visit with your loved ones. I know they're still not happy, even after that report, and if you can just assure them on your own that this is where you want to be, I think it will help a lot.\" \n\nSome of the girls felt nervous, Penny sensed. Sluts like Lily and Zoe and Miranda had understanding families, supportive even in their reluctance. Many of them were openly bisexual before meeting Charlie, and showing the colors of polyamory would only be a slightly larger pill to swallow. But girls like Sarah and Lanie and Gina would only succeed in proving their hearts were still pumping. Some might even be in danger. \n\n\"Master,\" Penny said quietly. \"Maybe not all the girls.\" \n\nHe understood her quickly. \"Just if you think you can,\" he amended. \"If you think you're ready.\" \n\nThe tension in the room melted. Oblivious to it all, Stefanie stuck out her tongue and caught a drop of precum that fell from Charlie's cock. She giggled, and all the girls turned their attention to his throbbing cock, the god of their bodies. \"Master,\" said Helen, her hand already down Sammy's shorts. \"Shouldn't Stefanie get a reward for her help?\" \n\n\"I think you're right,\" he said. \"What would you like?\" \n\n\"I'm just happy to serve you, Master,\" Stefanie said, letting another drop of precum fall on her tongue. A few moans escaped from more than a few girls. \n\n\"I know you are,\" Charlie responded. \"Because you're a very good girl. So why don't we play a game?\" \n\nShe smiled, nodded up and down giddily. \"Okay, Master!\" \n\n\"Everyone to the dungeon.\" \n\nJust a few minutes later, everyone was in the dim sex dungeon that Penny had designed, updated, stocked over the summer and into the fall. Hairstyles of all lengths and colors lined the walls, tits from Zoe's sensitive little A's to Lily's gigantic F's started dropping out of shirts, falling out of bras. Stefanie, a few inches taller than little Alex, stood in the center of the room, blindfolded and giggling. \n\nBy the time Charlie stepped behind her, everyone in the room was totally naked, piles of clothes at their feet. The responsibility of the day was at an end. He reached under her arms, gently cupping each of her breasts and massaging them gently. \"Thank you, Master,\" Stefanie sighed. \n\n\"Here's the game,\" he announced. \"If you can guess one of three things correctly, I'll cum anywhere you want for as long as you want.\" \n\nStefanie nodded, nervous but excited. \"What will I have to guess, Master?\" \n\n\"Who's playing with your tits, who's fingering your pussy, or who's riding my cock,\" he said. The rest of the girls lit up, giggled, bounced. He pointed to Lanie, then to some of the ropes hanging from the rafters. She expertly tied each of Stefanie's wrists and then pulled the ropes taut, securing them to pitons on the walls. Charlie put a hand on her thigh, spreading her legs for her. She stood like an X, her freshly waxed pussy already shining with her own dew. \n\n\"Let the games begin,\" Charlie said. He started to circle the room, looking at each one of his sluts, holding a finger to his lips. They did not speak, but giggled quietly amongst themselves and pointed to their own faces, silently begging to be chosen for something. He found Tammy, the pretty blonde from Stefanie's sorority, and guided her over to Stefanie's pretty little pussy. She gently let her fingers slide back and forth along her length, drawing happy sounds of pleasure from Stefanie right away. Next, Charlie pulled Natalie up to grope her tits. Her nipples were already hard, standing brown and pronounced in the open air. \n\nPenny thought for a second that he was about to pick her to be fucked. The thought excited her of course, but her heart shouted No! so loudly that she felt herself frown. She was wrong though, he was looking just over her shoulder at Ashley. Ms. Elmerta herself. \n\nPulling up a chair, facing the prized slut of the evening, Charlie let Ashley stroke him while he watched Stefanie get pleasured. Ms. Elmerta mounted him, leaned forward until her hands touched the floor, and let her ass bounce up and down, up and down, up and down. She moaned quietly, but that only made her sound more desperate. \n\n\"What do you think?\" he asked. \n\n\"Mmmm... I don't know,\" Stefanie said. \n\n\"Let's try. Who's fingering you?\" \n\n\"Hmmmm... Mistress Alex?\" \n\nGiggles. Even Charlie smiled. \"Not Alex,\" he said. He pointed at Tammy, sending her back into the circle with a playfully pouty lip. \"Who's playing with your tits?\" \n\n\"Ashley,\" she said. So close, Penny thought. \n\n\"No. Who's riding my cock?\" \n\n\"Gina!\" \n\n\"Wrong again.\" \n\nFrom the chair he picked new girls. Lanie riding his cock, this time facing him with her milky breasts in his face. Miranda reaching up to play with her nipples. Sammy fingering her, looking so much like Penny. I wonder if he thought she was me. \n\nStefanie got all three wrong again. And again, and again. Penny got a turn with her pussy, making sure to lick the juices off her fingers. A delectable taste, strong and sweet and thick, though not her favorite of all the girls. But she guessed wrong there too. Each time, Penny sensed how much more frustrated and desperate she became. After a long time, there was a puddle of her desperation between her, pooling under her legs. \n\nTorture, Penny thought gleefully. Her reward is torture. How could she possibly guess right with all these girls? \n\nEventually, she started getting spanked for each wrong answer. Her ass was not as cushioned as others, and she turned red quickly. Girls like Sarah didn't spank too hard, but Penny couldn't resist giving her a healthy smack that bounced off the walls. Because after all, Stefanie was her slut as much as Charlie's. \n\n\"Penny,\" Charlie said to her. Her heart still fluttered when he said her name. \"I think our little toy is drooling. Why don't you clean her up?\" And tease her, he thought to her. \n\nPenny walked over, scooping up the saliva oozing past Stefanie's lips and rubbing it on her hard brown nipples. \"What's the matter? Don't you want Master's cum?\" she asked her. \n\n\"Yes, yes, yesssss...\" \n\n\"Then get it. All you have to do is guess right. I know you haven't been here as long, but surely you know enough about us girls by now?\" ",
        "\"Please Mistress, please...\" \n\n\"Please what? You know the rules.\" She felt perfectly wicked, and on her way back to the circle of whores, she kissed her Master's cock, licked the thick coating of pussy left all over it. Thank you, Master, she thought to him. \n\nHow pretty everyone looked on his cock. How happy. How fun it was to be together like this, playing games, feeling sexy. Stefanie was losing her mind, but she loved it. Penny could feel that. Charlie had given her much attention since her arrival. Penny liked her too. She had the makings of a new Mistress. Maybe even a new girlfriend, in the truer sense. Because she knew him. Penny knew that the report was an embellishment. Polyamorous, she thought derisively. Friends with benefits. And me. Still, it didn't sound so bad. If Charlie started to fall for little Stefanie, Penny would be happy. \n\nBut why? \n\nStefanie finally guessed it when Zoe bounced on his cock just a little too fast, and came so hard she let out a guttural growl that lasted almost a minute. She was shaking, trying not to fall on the floor. Charlie held her by the arms to keep her straight, but Stefanie was already shouting, \"Zoe, Zoe! You're fucking Zoe!\" \n\nHe never Rewired me, Penny remembered. All this time, all this work, and she had forgotten. I would have been okay with it. But he never did. Just his cum. Just that. And that means... \n\nIt was all her. The real, raw Penny. The Penny who was jealous of all these girls in high school. The Penny who hated seeing how miserable he was when his exes hurt him. The Penny who once had nightmares about being with someone other than Charlie. This same Penny wanted to see him hold another woman the way he held her. But why? \n\nBecause, a voice said. Was it her own? It makes you wet. \n\nAnd as Charlie let loose a torrent of his cum all over Stefanie's perfectly round little face, spurt after spurt after spurt, Penny realized how true that really was. \n\n********** \n\nLanie \n\nShe forgot to wear a bra when she left the house. If her chest were smaller, it wouldn't matter. But she was well endowed, and that made it much more obvious when all that covered her torso was a thin T-shirt. California in late November had a way of staying warm. It's okay, she told herself. It wouldn't go any better without it. \n\nHer parents meant to move east a few years ago, but never really mustered up the strength to do it. \"The West is just too damn comfortable,\" her father once told her. \"Besides, the Atlantic is overrated. You know, that's where they ran the slave trade?\" He was goofy like that, but only to a point. There was no way he hadn't seen the report. \n\nAnd her mother. Good lord, her mother. \n\nWhen she entered the house, silently let in by her eighteen-year-old brother Thomas, Lanie sat at the kitchen table and waited for her parents to talk first. She called ahead, and they were expecting her. But there were no offers of food or beverage. Nothing welcoming set on the table. If anything, the house looked unkempt. \n\n\"What about Preston?\" her mother finally asked. \n\n\"That ended a long time ago,\" she said. \n\n\"I know that, he told us. But he didn't seem to know why either.\" \n\nYeah, and I'm sure he left out the part about the dozens of guys he let fuck your daughter when she didn't know better. \"Do you remember Charlie, Mom?\" \n\n\"I do.\" \n\n\"You always liked him.\" \n\n\"He left you as I recall.\" \n\n\"Thanks, Mom. Look, I just mean that you know he's a great person. And he still cares about me.\" \n\nShe and her mother looked nothing alike. Lanie had grown to like her pale complexion and her thin line of freckles across her nose. Those clearly came from her father, who had still not spoken. Her mother had greying black hair atop olive skin, a brow that furrowed so often that her face was in a permanent scowl. \"I wonder why,\" she said sarcastically, clearly looking at Lanie's unsupported chest. \n\n\"Don't,\" her father said, curtly. \n\n\"It doesn't bother you that our daughter has become some pompous idiot's whore?\" \n\nLanie's father was not a violent man. But she could see a look in his eyes from time to time that said more than a slap ever could. This was one of those times, but it was not directed at Lanie. \"Name one man who will do better for her.\" \n\nHer mother couldn't respond to that. \n\n\"It's a killer house,\" Thomas said, as usual at the perfectly wrong time. \n\n\"Thank you for your input, dweeb,\" Lanie said, smacking him playfully on the arm. If she acted normal, it would be easier for her parents to accept. Not a guarantee, no. But better than looking sullen and ashamed. Lanie was not ashamed. \n\n\"He's right, Mom,\" Thomas said. \"Preston was a dick anyway. Hey do you think you could get me tickets to CityScream? Maybe a backstage pass?\" \n\nTheir mother slammed an open hand on the table. \"Thomas, out.\" \n\nHe had grown up a lot in recent years, and new not to fight back. He raised his hands, not as apologetic as understanding, and ran upstairs. \n\n\"Mom, Dad,\" Lanie said, smiling. \"I'm here. I'm me. I'm not asking you anything, I'm telling you. I'm so happy over there. And I'm not gone.\" \n\nHer mother was on the verge of tears, she saw. \"Don't you let him use you,\" she said. \"He'll do something wrong, and you'll feel like you can't leave because he's supporting you. Don't you let him do that.\" \n\n\"Never,\" Lanie said. \"As long as I have you, that will never happen. Okay?\" \n\nShe broke at last, grabbing Lanie by the hand and hugging her tightly. Gently, her father came around the table and held the both of them. When they had all calmed down, everyone was smiling warmly, the way they did on a trip to the beach. \"Will you stay awhile?\" her father asked. \n\n\"I'd love to. In fact, I was hoping you might teach me a few baking recipes?\" \n\n\"Really?\" Her mother asked. \"I never knew you were interested.\" \n\n\"Well, I thought I'd try it out. What do you think I could make a couple thousand of in three weeks?\" \n\n********** \n\nCharlie \n\nGod, he had been terrified. The reporters were ravenous with their questions. Lucy Edgehart was her name. Not the anchor, but the narrator. She was almost thirty, with a hard stare and a thin pair of lips that almost disappeared when she wasn't speaking. But as her lips flapped open with bold questions, Charlie could see they were actually quite normal. It was just her intense expression that kept them so tightly pressed together. She only seemed to loosen up near the end of the shoot, when Penny gave her a mug of hot cocoa with marshmallows. \n\nIn bed, Penny whispered to him how sexy he looked on camera, how confident and commanding he was. But even with the energy of all his harem, he could not bury his fear. Not after hearing about Katie. \n\nIt took the whole house to calm him down. He made sure that Stefanie guessed wrong a few times, just to ensure the game would go on a little longer. Not that he needed an excuse to fuck every last one of them. It just made it easier to take Katie off his mind. He didn't think about her for the rest of the night, especially while he buried his cock in Lanie's mouth in bed that night. Charlie could sense the tingling sensation she got when her lips wrapped around his shaft, and that pleased him. Sammy played with her ass while she fellated her Master, and Penny, as was the norm, fucked herself with a well-trained finger. Just for the fun of it, he doused them all with a torrent of cum. Penny had the time of her life licking it off her sister's face. \n\nIn the morning, he felt calm. Even when he remembered that Dr. Emily Kisch was returning soon, Charlie acknowledged that the report went well, and he had done the best he could. As the girls started leaving the house one by one, he felt their presence grow distant, and his power relaxed ever so slightly. Even with two-thirds of the house now empty, he was still remarkably strong, and their energy was nowhere near gone from him. \n\n\"Keep the girls entertained when Emily returns,\" he commanded Helen. \"Preferably without the removal of any clothes.\" \n\n\"Yes, Master.\" \n\nAnd when Emily did come back, Penny was there at the door with another cup of cocoa. \"It's almost Christmas,\" she'd told him. \"You can't do the holidays right without lots of cocoa.\" \n\nThis time, Charlie walked with Emily through the topiary garden, now turning orange in the late Californian fall. Leaves littered the shrinking grass, and the air was so obviously cold. But Charlie couldn't feel it. He walked outside in nothing but jeans and a plain purple T-shirt. \n\n\"Aren't you cold?\" Emily asked, sipping her cocoa. \n\n\"I feel great,\" he said. She touched him, not bothering to ask, and laughed nervously feeling the heat on his arm. Not knowing what to say, she took another sip of cocoa, letting a gooey white marshmallow slip into her mouth. \n\n\"I finished my Doctorate in May,\" she said, unbidden. \"I had no idea what I was going to do with it until I heard about Katie. I had this delusion of grandeur that I could crack an unsolvable case.\" \n\n\"Your mistake,\" Charlie said. \"Turns out you were right.\" \n\nShe laughed, quite jovially. That took Charlie aback. Emily was nervous around him, confused and reluctant. This was the laugh of a familiar friend, not a strange doctor grappling with science fiction coming to life before her eyes. \"Katie said a lot of things about you,\" Emily said. \"A lot of it is just unbelievable. But you are definitely charming.\" \n\n\"Thank you,\" he said. He couldn't tell if her cheeks were blushing from the cold or from him. She had a bright blue peacoat on, fuzzy earmuffs, tall snow boots. \"Colorado native?\" he asked. \n\nShe looked down at her attire. \"A little overkill for sunny California, I guess. It is a lot warmer than I anticipated.\" \n\n\"Weren't you cold a second ago?\" \n\n\"Yeah,\" she said, a little distracted. \"I guess, um... I got used to it quicker.\" \n\n\"Did you see the report last night?\" \n\n\"I did,\" she said, finding a carved stone bench to sit on. She placed her half empty mug next to her, and Charlie sat beside her. In front of them was a swan, its leaves deep red and a little in need of trimming. But the gardener would not return to that until the spring. \n\n\"What did you think?\" he asked. \n\n\"I wish you had just told me that instead,\" Emily sighed. \"But it still wouldn't explain Katie, so I guess... I don't know. Thanks.\" \n\n\"Are you starting to believe me?\" \n\n\"I want to. I really do. But that would still leave me clueless. It's like you said, Mr. Ellis. The science isn't in. Can I call you Charlie?\" \n\n\"Oh. Well, yes of course.\" \n\n\"I just feel so comfortable around you. Mr. Ellis feels too formal. And please, call me Emily.\" \n\n\"I will,\" he agreed. \"What were you hoping for before we spoke yesterday?\" \n\n\"The key to emotionally disturbed patients is discovering their past traumas and helping them work past it. People like Katie get stuck somewhere in the stages of grief, and just can't get out. She stopped right at Denial. I believed that she invented all these stories as a way of telling herself that you would come back into her life and take care of her, and that you could all finally be a family.\" \n\n\"What?\" \n\n\"She always talked about this ten year mark, how...\" \n\n\"Family,\" Charlie interrupted. \"We could all finally be a family?\" \n\n\"Charlie,\" she muttered. \"Didn't they ever tell you? Didn't her parents tell you anything?\" \n\n\"No,\" he said. And he knew the answer already. But it wouldn't be real until she said it. \"When they sent her away, they didn't tell me a god damn thing.\" \n\n\"It's in her file,\" Emily prefaced. \"Not one of her fantasies. Ten years ago, she confronted her parents about you. Said you were in love, you were going to get married. She started talking about the details. All the things you did... sexually. They tried to get her help but she became violent and self-destructive. They sent her away after that.\" \n\n\"And she confronted them because she was pregnant,\" Charlie finished. Emily had been clearly dancing around the subject. \"And she knew she couldn't hide it. And she wanted to keep it.\" \n\n\"Yes,\" Emily admitted. \"I'm so sorry, Charlie. I really thought you knew. Your child was born at the Hecksher Institute and given up for adoption. The doctors should have told you, of course. But probably didn't due to your age. God, Charlie... I'm so sorry you had to hear this from me.\" \n\n\"Boy or girl?\" he asked. \n\n\"Girl. She was adopted in Illinois, but I don't know much more than that.\" \n\n\"Do you know her name?\" \n\nEmily shook her head. Charlie dropped his hands into his own. His inner voice was laughing like a madman. What a rule. One child, and that's it. Kaput for the rest of your life. Congrats to the happy father. Your kid's got a brainless whore for a mother and an unstoppable fuck machine for a father. \n\n\"So you thought maybe I had some insight on that,\" he said. \"Well, I'm sorry that I don't.\" \n\n\"I'm not sure it's even relevant anymore. If this whole crazy story is true.\" \n\n\"And if it is,\" Charlie said, pulling his face up to the clear blue sky, \"I'll just have to fuck her brain back into place. Pick up all the pieces and complete the puzzle.\" \n\n\"I... I suppose...\" \n\nAnger flared inside him. He stood up, towering over her, a fury in his voice like he'd never heard escape his lips. \"Don't get shy now, Doc. Because it's real. And if you want the Nobel Prize you'll need me to fuck her, and then you'll need me to run experiments and shit. But that's a little out of your expertise because you'll need a neurologist too, and a physician and a chemist to test the properties of my fuckin' jizz. Katie's not your patient. I am. I could snap my fuckin' fingers and fix her. It's me you have to worry about. I am the enigma. I am the anomaly. And if I could tell you the secret I would, but I don't know what it is. Shit.\" \n\nEmbarrassed, cowed, Emily drank up the rest of her cocoa, unsure of what else to do. It bought her a little time to think of a response. \"Charlie, I don't want to ask any more of you. I'm a little in over my head here and I just dropped a bomb on you. I should never have come.\" \n\nFuck you, he thought, spitting venom. I could have fixed everything, and this never would have happened. But you just want to publish a book and become the next Freud. The next Jung. The next Doctor-Fuckin'-Lipschitz. You are not in control here, I am. \n\n\"Are you really going to go back to Colorado empty handed?\" he asked her. \"If you don't believe me, then let's do it your way. Go over the story, figure out the root of her trauma, which part really fucked her up. If you do believe me, I will take you inside the house and show you right now.\" \n\n\"Show me?\" \n\nCharlie still stood menacingly over her. Emily's breath huffed with a hint of fear. Foggy puffs of breath curled up toward him, though sweat dripped from her scalp. She was getting too warm, even in the cold of late November. \"I saw you staring at my cock last night,\" he said. \"Or am I mistaken?\" \n\n\"No, sir,\" she said. \n\nSir? Already? \"I'm not your fuckin' professor.\" \n\n\"Charlie,\" she corrected, closing her eyes in fierce embarrassment. \"You are not mistaken, Charlie.\" \n\nBut was it really so bad? He liked the way she said it, No, sir. \"Get the coat off,\" he said, cooling his voice a little. \"You're burning up out here.\" \n\nShe quickly unbuttoned the blue peacoat and tossed it onto the empty spot on the bench. Now he could see just how much she had been sweating. The flowery blouse she wore beneath the coast stuck to her skin, dark spots of perspiration holding it tightly to her. \"That feels better,\" she said. \n\nHe started to pity her then, seeing how out of sorts she was. \"You're right. I'm all wound up. Please, forgive me for that outburst.\" \n\nShe took a few deep breaths and fanned herself with a stiff hand. \"Of course. I'm sorry, too. This isn't me, I promise. It's just...\" \n\n\"The situation, I know. I don't envy you, Emily.\" \n\nShe jolted at the sound of her name, a little like some invisible hand had punched her in the gut. If Charlie hadn't been living with a house full of horny women for half a year, he might have mistake it for a stomach cramp. But that was the reaction of a woman suddenly overcome by insatiable lust. \"Emily?\" he said again, and again she writhed. \n\n\"Yes,\" she said, breathily. \n\n\"You never touched Katie, did you?\" \n\n\"No, just to help her undress.\" \n\n\"Undress?\" \n\n\"The Institute didn't let her masturbate after an early incident. I let her just to gain her trust a little. But I never touched her myself, no.\" \n\n\"Good,\" he said. Then I guess you're just naturally very slutty. \n\n\"Srrrr... uh, Charlie,\" she said between heavy, heaving breaths. \"I really want to believe you. If this whole thing is real, then... it would... you know. Could you really show me?\" \n\n\"I could,\" he said. \"I can get one of the girls and show you what I can do.\" \n\n\"You could,\" she agreed. \"Or you could just fuck me instead. I do love to swallow.\" \n\n********** \n\nKatie \n\nEmily looked so good naked, just like Katie knew she would. She bent over, elbows on the bench, yelping as Master's cock pounded her pretty pink pussy. Katie could feel the friction of their sex, the strong grip of his hands around her waist. And goodness, how she begged. \"Fuck that's so good! Harder, please! I know you can go harderrrrr, ohhhh!!\" \n\nWhat had they talked about before? Katie could scarcely remember. She was looking through Master, and when she did that, Katie had trouble focusing. She felt too warm, too comfortable, too aroused. Thankfully, Emily taught her the trick to getting a wrist loose from her restraints, and she was able to fuck herself all day long. As soon as she looked through Master's mind, she had a finger in each whole, plunging deep as deep could go with her own hand. \n\nBest of all was the perfect white cum as it shot from Master's perfect cock and onto Emily's parched tongue. Her eyes rolled back into her head, tasting a pure dose of what she did not know she had already tasted. But it was like pouring sugar in coffee. It just tasted sweeter straight from the packet. \n\nYou're his now, Emily. You're Master's little cumslut, just like we wanted all summer. You'll be there when we come together again. Soon you can taste me, just like I said you could. Soon you can show me how you worship a cock in person. And not just any cock. THE cock. Four weeks. Four weeks and we'll be together again. \n\nAnd then we can finally meet our daughter."
    ],
    "authorname": "RootOfTheStory",
    "tags": [
        "cum",
        "cum addiction",
        "female submissive",
        "harem",
        "lesbian",
        "male dominant",
        "mind control",
        "sluts",
        "whores"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/friends-enemies-and-exes-ch-08"
}