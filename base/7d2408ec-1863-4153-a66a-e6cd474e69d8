{
    "title": "The Future is in the Air Ch. 04",
    "pages": [
        "Though not at the butt-crack of dawn like the staff did, Eric tended to rise at early hours. He said he'd already been up for about forty-five minutes when we joined him in the kitchen.\n\nEven though Izzie had brought over some of the incredibly delicious-looking migas she'd prepared for the staff breakfast at the ranch-house, Leah and I both opted for something a little lighter. I had some yogurt and granola, and she enjoyed a toasted bagel with some cream cheese and strawberry jam.\n\n\"Everything okay?\" Leah asked me. She must have sensed my distracted state.\n\n\"Sure. Give me just a few minutes. I need to run something by Eric.\"\n\nWe took our coffee out to the back patio.\n\n\"What's up?\" he asked, noticing my dodge.\n\n\"I had a nightmare last night. Leah augured in.\"\n\n\"During her solo?\" he asked with a chuckle.\n\n\"I'm being serious. I'm scared, man. She knows I had a bad dream because I apparently talked in my sleep and woke her up, but I haven't told her about it. I don't know what to do.\"\n\n\"Don't worry about a dream, Lance. I can only imagine the stress you're feeling. It's just your brain trying to process new experiences.\"\n\n\"Come again?\" I asked.\n\n\"She's your first student. You've taken on an immeasurable responsibility, and I can't imagine what that risk feels like. I bet you're feeling more stress than what parents do when they put their child behind the wheel of a car all by themselves. But . . . gut feel. Is she ready?\"\n\n\"She is.\"\n\n\"I can't keep you from feeling like a nervous Nelly, but there you go. When do you think you're going to go up?\"\n\n\"Maybe in a half-hour. We'll repeat the emergency procedures and I'll stay with her for a few landings, then go from there. Everything set for this evening's thing?\"\n\n\"Yep. We've got reservations for four at Arrowhead.\"\n\n\"If my butterflies settle, I'm sure I'll look forward to it,\" I said.\n\nWhen we re-entered the house, Peggy and Leah were chatting. Peg's hair was more than a bit sleep-worn. I found it endearing that she would present herself in such a state, not appearing to be concerned about the superficial around us.\n\n\"You look pretty, Babe,\" Eric said with humorous sarcasm.\n\n\"Hey! Be nice to your wife!\" Leah scolded him with a chuckle.\n\n\"Oops,\" he said, with his own.\n\nPeggy gave him a smooch, then disappeared back down the hallway to the owner's wing with her coffee.\n\n\"How're you feeling? I hear today's the big day,\" Eric asked Leah.\n\n\"Are you kidding me? I'm excited! How'd you feel the day of your first solo?\"\n\n\"I could barely sleep the night before.\"\n\nLeah glanced cautiously at me.\n\n\"It's okay. I already told him I didn't sleep too well and woke you up.\"\n\nLeah shooed the dog off the end of the sofa to sit next to me. She kissed me softly.\n\n\"Are you sure you're up to it?\" Leah asked me.\n\n\"Yeah. And there's no time like the present,\" I said, shooting a nervous glance at Eric.\n\n\"Knock it out of the park, Leah,\" Eric encouraged as we left the house for the walk to the hangar.\n\nForty-five minutes later, I endorsed her logbook then exited the plane.\n\n\"I'm saving a kiss for when you get back,\" I told her, superstitiously hoping to break any similarity to the dream.\n\nI gave her a few more brief instructions, double-checked my handheld radio was truly functioning, and sent her on her way.\n\nIt was just her and me. Then just me. There were no horses, or even Eric or Peggy. They decided to stay behind so as not to crowd Leah as additional observers, though I suspected they would be watching from their own vantage point.\n\nMy heart was racing, and time slowed.\n\nI watched the windsock flutter gently in the light breeze. It pivoted slightly on its bearings, indicating a mildly increasing crosswind at the surface.\n\nI sat cross-legged on the cool asphalt of the ramp.\n\nMy plane leapt into the air with the love of my life at its controls.\n\nHer crosswind turn was well-timed.\n\nHer downwind leg drifted a little, but I saw her turn to correct for the wind aloft.\n\nShe turned base, and the tailwind caught up to her. She started candy-caning the turn to final.\n\nMy nerves rang.\n\nI heard the engine increase in power as she ceased her descent. She overflew the strip a few hundred yards off-center, climbing back to pattern altitude.\n\n\"Good girl,\" I whispered to myself. I had to fiercely squelch the urge to mash my transmit key.\n\n'That didn't work. It's breezier up here and it blew up my tail on base. Should have anticipated that,\" she radioed to me.\n\n\"Roger,\" was my simple reply. I was cheering internally.\n\nShe corrected for the conditions by extending her crosswind about a quarter-mile further. Her next pattern was markedly better.\n\nMy heart began to race again.\n\nDescending. Descending. Turning. Descending.\n\nMy heart leapt in joy when I heard the wheels chirp. I leapt into the air, pumping my fists, then put my hands behind my back hoping she hadn't observed my display from the distance.\n\nShe taxied back. I met her midfield and opened the passenger door.\n\n\"Outstanding,\" I said, fighting my excitement. I needed to appear calm and cool.\n\n\"No, it wasn't. I should have accounted for the winds.\"\n\n\"You made the right choice to go around. Go-arounds are always free. Now you know what you're in for. Go do number two.\"\n\n\"A doody joke?\"\n\n\"Maybe,\" I chuckled.\n\nShe taxied back, and performed the second pattern near-perfectly.\n\n\"Don't come back. That was great, Beautiful. Back-taxi and do it one more time,\" I said over the radio.\n\nAnd she did, then taxied the plane back to the apron. After she completed the entire shutdown checklist, we embraced on the apron.\n\n\"Oh, lord, Leah! I'm so proud of you!\"\n\nShe kissed me, pecking me all over my face, then slowed for a deep, delicious, all-out delightfully passionate tongue-kiss.\n\n\"Lance. Oh. My. Fracking. Word. That was awesome! Your story didn't do it justice!\"\n\n\"Neither will yours,\" I smiled.\n\nSophie was on the back porch, and loped down the stairs to greet us on our return.\n\n\"Heya, pooch!\" Leah acknowledged the dog.\n\n\"Peggy, they're back!\" Eric called out into the house as soon as we walked through the door. \"Well?\"\n\n\"Three solo stop-and-goes going into the logbook!\" Leah said rather happily.\n\n\"Congratulations! Lance, you're falling down on the job. She still has her shirttail.\"\n\n\"Nuh-uh. I'm not going to cut up her clothes.\"\n\n\"Do it!\" Leah hollered. \"Please! It's tradition, right?\"\n\n\"You sure?\" I asked.\n\n\"Of course I am!\" she excitedly answered.\n\nWe followed Eric into his office where he brought out a pair of sharp scissors.\n\nLeah turned her back to me and I started cutting.\n\n\"Oh!\" Peggy yipped, having just walked in. \"I guess congratulations are in order, and I almost missed it!\" she said happily.\n\nUp the right side of her t-shirt I went, being careful not to catch the band of her bra, then under shoulder blades, and down the other side.\n\nI was almost aghast when Leah pulled the rest of her wrecked t-shirt over her head right in front of all of us.\n\nEric turned his back, I reflexively did, too.\n\n\"Jeez. You boys are acting like you've never seen a woman in a sports bra,\" Peggy laughed. \"That is so super-cute on you! Where'd you get it?\" Peggy asked. I think Eric and I both rolled our eyes.\n\nI took the tail of Leah's shirt to the desk, selected a sharpie from the organizer, and drew on the mint green cloth a caricature of her sitting on top of an airplane like it was a bucking bronco.\n\n\"Leah Reynolds's Solo @ Reiter Ranch\", I wrote. I dated it next to my initials, then handed the sharpie to Leah to add whatever fun stuff she wanted.\n\n\"I'm going to put this away and take a shower,\" Leah said, folding up the remnant. \"I actually broke a sweat up there!\"\n\n\"Huh-uh!\" I objected and snatched it back from her. \"Tradition is that it be displayed at the location for a while. What, say, a month?\"\n\n\"Right on the side of our fridge!\" Peggy laughed.\n\nLeah smiled warmly. \"Thank you both so much! I absolutely could not have done this without you both!\" she said. Her face couldn't have looked happier.\n\n\"It really has been our pleasure,\" Peggy said. \"And to carry it on, we've got a bit of a celebration planned for tonight.\"\n\n\"Oh?\"\n\n\"We're going for some of the best barbecue this side of the Mississippi as a celebration. Spins and your first solo in one weekend is pretty impressive,\" Eric said.\n\nLeah laughed. \"That sounds fantastic! Wow. Y'all are too much,\" Leah said.\n\nI looked at Eric nervously. He simply shrugged me off.\n\n\"We'll leave here around 4:30,\" Eric said. \"But, for now, Peg and I have some business to attend to at the ranch house, so y'all have the run of the place.\"\n\nPeggy added, \"The pool is heated, of course, so you can go swimming, go riding, go to the shooting range, or whatever strikes your fancy. Lance knows all about the radios, so y'all can call us or any of the staff on the two-ways if you need anything.\"\n\n\"Thanks, guys,\" I said.\n\nAfter Peggy and Eric left, Leah and I began the celebrations in our guestroom.\n\n\"I cannot imagine a better day,\" Leah panted after I'd spent some quality time between her legs. \"Adrenaline rush from this morning plus you going down on me like there's no tomorrow,\" she chuckled.\n\n\"Yorr purssr is so yummr,\" I said with my tongue nestled between her plump labia.\n\nShe laughed at my awkward pronunciation.\n\n\"You'd better stop. I don't think I can handle any more,\" she groaned in satisfaction.\n\n\"Okay,\" I said.\n\n\"Why are you spoiling me so much?\" she asked so sweetly.\n\n\"I'm not. It's like your body simply demands to be pleased. I'm happy to lick your yum-yum any time you want.\"\n\n\"Oh. Is that so?\" she said, running her fingers through my hair.\n\n\"Yeah,\" I murmured.\n\n\"Well. Let's see if it's the same for you. Lay back.\"\n\nI did as she asked, and she settled between my knees.\n\nShe treated me to wonderfully soft, tender affection. Gentle strokes with tracing fingers, firm strokes with tightened grip. Probing tongue tip, lapping licks, nose-nuzzles, and gentle caresses of my sac and its contents.\n\nShe held me in a wonderful state of pleasure, somehow always sensing my increasing urgency, before letting me cool so she could push me uphill again.\n\n\"Leah,\" I groaned, craving release after a wonderfully long time of suspense.\n\n\"It's okay. Cum for me, my love,\" she sighed sweetly, enveloping my shaft in her hand and my glans in her mouth.\n\nI felt her her tongue against my frenulum and glans in time with her fingers stroking the sensitive underside of my shaft all the way to the root.\n\n\"Leah . . Le&mdash; Stop! I'm gonna cum!\"\n\n\"Hmm-mm,\" she hummed.\n\nI couldn't hold it back, and I unloaded my tension into her mouth.\n\nI felt her tenderly suckling, nursing from my body, squeezing me upward with her fingers. I felt and heard her swallow twice.\n\nMy muscles became less tense as the post-orgasmic pleasure settled fully into me.\n\n\"Ohhh,\" I groaned in relaxation.\n\n\"Yeah?\" she whispered, sliding back up next to me.\n\nI opened my eyes and saw her beautiful browns glinting.\n\n\"You are really something else,\" I grinned.\n\n\"I hope that's a compliment.\"\n\n\"It sure is. I'm just quite simply amazed by everything about you,\" I said, leaving it at that, preferring to kiss her instead.\n\nLeah and I spent the rest of the morning and early afternoon exploring the ranch. We watched some trainers and jockeys exercise a pair of thoroughbreds in a paddock, then visited the stables to feed treats to other horses.\n\nShe wasn't terribly interested in riding, and to be honest, neither was I. It doesn't matter how gentle a walker an equine is, when your bits and pieces are tender from other activities, it's not always a good idea.\n\n\"You said a few days ago that the Reiters have acreage. Just how much do they have?\" Leah asked me after we'd driven the mile and a half back to the house.\n\nI told her the story about how he'd acquired the land.\n\n\"So he bought about thirteen hundred acres from Peggy's father long before he met her. Combined with what she owned before, they now have somewhere around seven thousand. I think. Something like a dozen square miles' worth, though most of it is leased out.\"\n\n\"From tech wizard to a rancher who married a surgeon. That's an interesting story.\"\n\nThough the water in the pool was, indeed, comfortably warm, the air temperature was a bit too cool for swimming, so we simply sat at the edge with our feet in the water, held hands, talked, and loved on each other.\n\nEric and Peggy returned and came out to the pool deck. They sat at a table nearby. We stood from the pool and joined them.\n\n\"How was y'all's day?\" Peggy asked.\n\n\"Very, very, relaxing, thanks,\" Leah answered.\n\n\"Glad to hear it. Hopefully you've recovered from the rush of this morning?\"\n\n\"Sure have. I even caught a quick nap,\" Leah said, looking at me with a slightly cheeky grin.\n\n\"Outstanding. You'll need your energy for tonight.\"\n\n\"Is there any kind of dress code for where we're going?\" Leah asked.\n\n\"Hardly. I'm wearing jeans and a simple button-down.\"\n\n\"Oh, good, because I didn't pack any fancies,\" Leah said in apparent relief.\n\n\"Eric, we should start getting ready,\" Peggy prompted him.\n\nI looked at my watch. It was close to 4:00pm.\n\nBoth of us followed the pair into the house, and went back to our guest room, changed clothes, and met Eric and Peggy as it was time to head out.\n\nAll four of us loaded into Eric's Escalade, and it took about forty minutes to make the drive, occupied by lots of conversation drawing out the exciting experience Leah's morning proved to be.\n\n\"A barbecue restaurant on an airfield? Whodathunk,\" Leah observed, checking her surroundings as we exited the SUV in the parking lot of Air Services Gainesville.\n\nPeggy and Eric both glanced at me knowingly.\n\n\"Right this way,\" I said, escorting Leah through the front doors.\n\n\"Long time no see, Mister Reiter!\" said a face that I'd not seen in years.\n\n\"Hey there, Danny. Good to see you again,\" Eric said to the crisply-dressed crew member and shook his hand.\n\n\"Doctor Reiter, Mister Marlin, always a pleasure,\" he said, shaking our hands in turn. \"And you must be Miss Reynolds,\" he said.\n\n\"Uh, yeah?\" she said, returning the handshake with obvious confusion in her expression.\n\n\"I'm Danny Harper, your host onboard. If you'll please follow me, ma'am. We're set and ready to go as soon as everyone settles in,\" he said.\n\n\"Lance, what the hell is going on?\" Leah whispered before she started walking.\n\n\"We're just going to dinner,\" I chuckled.\n\nI stayed next to her, anxious and a bit nervous to see her reaction when we walked outside to the ramp.\n\nAs soon as the doors opened, Leah's eyes caught sight of the Cessna CJ4. I'm sure she'd seen hundreds if not thousands of similar planes from the cab of the towers she'd stationed. She tentatively climbed the stairs into the cabin, following Danny, then I followed her on board.\n\n\"Where do I sit?\" she asked me.\n\n\"What's your boarding pass say?\" I joked.\n\nShe glared at me a little.\n\n\"Anywhere you want,\" I answered. She chose the forward-facing seat on the starboard side, and I sat in the seat facing her.\n\nEric and Peggy weren't far behind. Peggy sat across the aisle from Leah, and Eric sat across from me.\n\n\"Um, something tells me they're not going to be bringing plates of meat on here,\" Leah said.\n\n\"No. Dinner's waiting for us at our destination.\"\n\n\"And where might that be?\" she asked.\n\n\"Kansas City,\" I answered, \"home of the best barbecue in the country. Don't mean to slight Texas, but it's true.\"\n\nLeah placed her elbow on the armrest, propped her chin atop her fist, and simply stared out the window.\n\n\"You okay, Honey?\" I asked after a minute.\n\n\"I'm feeling very out of place,\" she said.\n\n\"I know. I can tell.\"\n\n\"You're doing all of this because of me?\"\n\n\"Yes . . . and no.\"\n\n\"Don't mince words, Lance, please?\"\n\n\"Yes. This is really a celebration. This is a party to celebrate your major milestone this weekend. Mine, too! You're my first student to chalk up a solo.\"\n\n\"And?\"\n\n\"It's also because I've been holding back from you. I've been hiding a lot of me away . . . I mean . . . my lifestyle. I've been kind of scared of pissing you off or digging up certain emotions in you, or making you think I'm only showing off.\"\n\nShe eyed me warily, and took quick glances at Peggy and Eric who were simply sitting quietly looking at their phones. Though they appeared aloof, they could obviously hear our exchange. I couldn't imagine how uncomfortable they felt wondering what might happen next. They were taking almost as huge a risk as I was.\n\nThe cabin became quiet as Danny drew the air-stairs in and secured the door.\n\n\"I don't want to hide from you, Leah. I don't. I love you more than I could have ever imagined possible. But I don't want to hold back anymore. If this sort of thing is too much for you to accept . . . if it doesn't . . . fit okay with you? . . . well, we can fly you back home right now and you never have to talk to me again if you don't want to.\n\n\"I don't want to see that happen, Baby. I'm really hoping you can let loose of it all for a little while and have some fun so we can all celebrate all of our accomplishments together.\"\n\n\"It's too much, Lance. Just . . . it's too much.\"\n\nMy heart sank under the realization I might have just lost the love of my life.\n\n\"Listen. This was Eric and Peggy's suggestion, and I agreed with it. I want to show you that it's not too much. Not for me. I want you to have an entertaining evening because you deserve it. I deserve it, and Eric and Peggy do, too.\"\n\nI decided to strike the final nail, come what may, because there was no longer any point in avoiding it.\n\n\"This isn't something I do every day. It's a special occasion thing, and it's something I can afford, Leah. It's not too much. Not even close,\" I said, mustering the most honest smile I could manage.\n\nShe stared at me with little expression for a few more moments.\n\n\"What should I do?\" I asked, gently putting my hand on her knee.\n\nShe smiled warily. \"I can't believe I'm saying this, but . . . you'd better get this party started before I change my mind.\"\n\nI grinned at her in return, grasping her hands and giving her a little kiss before I buckled in.\n\n\"Danny, would you let Captain Sanz know we're all set?\" Eric said.\n\n\"Of course, Mister Reiter.\"\n\nTen minutes later, the Citation was airborne, with Leah watching some familiar territory disappear behind us from her window.\n\n\"Whose plane is this?\" she asked.\n\n\"Mark Cuban's,\" I said.\n\nLeah's eyes flew wide open.\n\n\"Don't do that, Lance!\" Peggy barked. \"Jeez. Leah, it's not. It's a service.\"\n\n\"Like ExecJet?\" she asked.\n\n\"Yep, it actually is an ExecJet. Want some champagne?\" Peggy asked her.\n\n\"Uh . . . yeah,\" Leah chuckled. \"Sure. Why the hell not?\"\n\n\"Danny, some champagne, please?\" she requested.\n\n\"Certainly, Doctor Reiter.\"\n\nLeah laughed. \"Okay, I'm sorry, but I have to ask something,\" she said. \"Lance and Eric both have a PhD. Why are you the only one who is addressed as Doctor?\"\n\nEric and I both chuckled, and Peggy deferred to Eric to answer.\n\n\"Outside of academic circles or formal settings, it's just not that common for non-medical doctors to be addressed by that title. It's kinda pretentious to even expect it.\"\n\n\"But that's not fair, is it?\" she challenged.\n\n\"Maybe not, but I don't particularly care. Besides. It even makes me feel weird to be spoken to that way.\"\n\nWe all heard the \"pop\" of a cork. Danny returned with a tray a few minutes later, and we each took a crystal flute.\n\nAfter about another hour, we were on approach to Wheeler Airport, where another Escalade awaited us at the executive terminal.\n\n\"Welcome to Kansas City! Arrowhead Barbecue, right?\" asked the driver.",
        "\"Correct!\" Eric answered happily.\n\nWhen we arrived, we all settled at a table in the massive rustically-appointed dining room which displayed numerous shoulder-mounted moose, deer, elk, caribou, and bison.\n\nThe aroma of the entire place was rich and inviting.\n\nThe waitress brought menus, and Leah's eyes widened when she began surfing hers.\n\n\"Something wrong?\" I whispered into her ear.\n\n\"I don't know what to get! I'm absolutely starving since I didn't eat lunch, and everything on here sounds so freaking delicious.\"\n\n\"Look at this one,\" I suggested, showing a featured menu item.\n\nShe studied the description.\n\n\"Oh, god yes,\" she said aloud, drawing the attention of the Reiters.\n\n\"Whatcha getting?\" Peggy asked.\n\n\"The Pit Master's Sampler sounds incredible,\" she said, referring to the popular specialty which consisted of portions of most of the available meats including beef, pork, bison, turkey, and various sausages. \"But I know I can't eat that much plus all those sides.\"\n\nIt was colloquially known by its acronym.\n\n\"The PMS, huh? Yeah, I hear you. Me, too,\" Peggy laughed. \"That platter is meant to be shared.\"\n\nLeah laughed easily. \"That might also explain my appetite. Want to share with me?\"\n\n\"Absolutely,\" Peggy agreed, setting her menu aside.\n\n\"Lance, move your butt, please,\" she requested so she could sit next to Leah.\n\nIt warmed me to my roots to see the love of my life and my closest friends getting on so well with each other so easily.\n\nWhen our dinners arrived, the conversation carried on as we dined.\n\n\"You want something stronger?\" Eric asked me, swirling the last of his beer in his glass after we'd finished our meals. He also subtly showed me a couple of Padron Churchill cigars held in the inside pocket of his sport jacket.\n\n\"Yeah. I think I might,\" I answered.\n\n\"Peggy, Lance and I are going out to the deck if you need us,\" he said to his wife.\n\n\"Sure, Love,\" she replied.\n\nLeah nodded to me with the most awesome smile.\n\nWe went to the bar on the way and ordered double Johnny Walker Blues.\n\n\"Well? What do you think?\" Eric asked after we stepped outside. \"Success?\"\n\n\"I think she's having a good time. Seems like Leah has a new sister.\"\n\n\"Yeah. I think so, too. Leah and Peggy have a lot in common.\"\n\n\"I can't thank you two enough. I really can't.\"\n\n\"No need. You asked me yesterday to watch my radar screen. She's not even close to a blip. Peg even told me this morning that she thinks she's like the most incredibly wholesome person she's met in a long time.\"\n\n\"Dude. Wholesome describes oatmeal, not people,\" I chuckled.\n\n\"Well, I think she's right. So, if you and Leah find your middle ground, well . . . do you think she could be the one?\"\n\nI puffed at my cigar, watching people on the other side of the massive outdoor venue dancing to some live music. Then, I looked through a window and saw Leah leaning in close to Peggy who was showing her some photos on her iPhone.\n\n\"You know? I think she very well may be,\" I said.\n\n\"I swear, man, I sincerely hope she is. Because I like her.\"\n\n\"You're already married, dude,\" I puffed humorously.\n\n\"You know what I mean,\" he laughed.\n\n\"Yeah. I do.\"\n\nIt was about a half-hour later when our ladies stepped out and dragged us to the dance floor. Leah and I scooted on the peanut shell-littered deck to some up-tempo country-rock music, giving her plenty of opportunities to laugh at my less-than-stellar abilities.\n\nDuring a slow, soft ballad, Leah wrapped her arms around my waist and settled her head on my shoulder.\n\n\"Lance,\" she sighed into my ear. \"This has been an incredible evening. Thank you.\"\n\n\"You're welcome, Sweetheart. I'm glad you're having a good time.\"\n\nShe looked at me with happy eyes and gave me a publicly-inappropriate kiss as we swayed.\n\n\"That's what the song's 'bout, y'all,\" said the vocalist as the band played the outro.\n\nWe both realized she was pointing us out, because a number of folks were watching us as we broke the kiss to a few hoots and catcalls.\n\n\"How embarrassing,\" Leah said as we walked back to our table.\n\n\"Just remember that no one here knows us or will likely ever see us again.\"\n\n\"True!\" she laughed, and gave me another delicious smooch halfway to our seats.\n\nEric and Peggy were already there.\n\n\"I think it's time we head back. I told Monica to expect a midnight departure to McKinney,\" Peggy said.\n\n\"Leah?\" I deferred.\n\n\"That's fine with me,\" she smiled.\n\nLeah's eyes looked rather tired as the plane took off for Texas.\n\n\"Let's go sit over here,\" I suggested, sitting on one end of the couch.\n\nLeah reclined next to me, resting her head on my thigh. Danny offered a blanket, and she covered herself comfortably. The drone of the engines conked us both right out. I was glad Eric and Peggy agreed they'd ferry my plane back a few days later.\n\n<hr>\n\nMid-May.\n\nLeah needed about twenty-five more hours after her solo to meet the minimum time required.\n\nOur flight from OKC to Dallas months earlier was, thus far, the only cross-country time she'd logged.\n\nI'll admit I had pangs of nerves every time Leah flew solos to practice touch and goes, especially when the crosswinds were a bit high, but I worked through that.\n\nTo practice for her solo cross country flights, we flew together to Wylie Post, the place where she began her career.\n\nThe flight served two purposes, one being lots of practical training on dead reckoning and pilotage during cross-country flights.\n\nI also employed some of that flight to introduce her to the dreaded \"View Limiting Device,\" which student and instrument pilots wear to simulate instrument conditions. The contraption prevents the pilot from seeing anything outside the windows, forcing them to use only the instruments as they might need to do if they inadvertently stray into clouds.\n\nThe other goal was to welcome her to my estate in Edmond, Oklahoma. As Eric put it, Leah needed to see it all, to know me for who I was.\n\nThe flight was just under two hours, and the ride to my estate took about thirty minutes.\n\n\"Good lord, Lance! Why does anyone need a place this enormous?\" she asked as I drove through the porte coch\u00e8re, then into the six-car garage.\n\nHer question was certainly reasonable.\n\n\"I don't,\" was my answer. \"No one does.\"\n\n\"Then . . . why?\"\n\n\"Business, and security,\" I answered.\n\n\"Financial security? I don't understand.\"\n\n\"Well, it is an asset that appreciates, but it's more about physical security.\"\n\n\"What? You mean&mdash; Whoa. Like guards and stuff?\" she asked, sounding stricken.\n\n\"No, not usually. But, sometimes, yeah.\"\n\n\"Like . . . like when? Now?\"\n\n\"No, Baby. Not now.\"\n\n\"I don't get it,\" she said as we sat on a couch in my den.\n\n\"I don't want to scare you, okay?\"\n\n\"Okay,\" she said cautiously.\n\n\"Reiter-Marlin specialized in developing uses for and the manufacture of gallium arsenide semiconductors, the type of things that are a big deal in the defense electronics business.\n\n\"There are a lot of people out in the world that don't like anything that has to do with weaponry on that scale. You know what I'm saying?\"\n\n\"I think so,\" she said.\n\n\"So, yeah. There's that. That's kind of a baseline thing, you know? It was always there. After we sold the business, we weren't in that spotlight any longer.\n\n\"Now, on the other hand . . . Put yourself in a hypothetical person's shoes for a minute.\n\n\"Imagine yourself an employee of a successful corporation. You've been married for six years and have two children. The youngest has a genetic disorder. You come home, unplanned, to offer a surprise lunch for your spouse who's been hounding you for attention because of your relentless focus on work.\n\n\"The surprise, however, is on you. You find your spouse intimately engaged with another person in the bed you shared.\n\n\"Your spouse takes your children and disappears. You're served with papers within a week that leaves you in custody of one child, and your spouse in custody of the other.\n\n\"Why? Because you're the primary breadwinner, and, even though you're saddled with premarital debt, the court deems you to be in the better financial position to care for the one that's ailing.\"\n\n\"God. That would be horrible.\"\n\n\"It gets worse.\n\n\"Two weeks after your bitter divorce is settled, you drive to the office on a Monday morning for what should otherwise be an ordinary workday, wondering why the parking lot is almost empty, and you discover your security badge won't open the door.\n\n\"That's when you notice the sign on the inside of the glass which says, 'Sparrow Technologies Corporation of Oklahoma City, Oklahoma, has been acquired by Ardix Incorporated of Durham, North Carolina. All employees of STC will receive formal notice of severance via certified mail within ten days.' et cetera and et cetera.\n\n\"So you return to your car. A coworker has parked next to you and he's listening to the news. He rolls down his window so you can hear about the buyout on the radio.\"\n\n\"Buyout? Every single one of them was laid off? Without any warning at all? That's cold. I'd want the sell-outs' heads to roll,\" Leah said.\n\n\"Toward the end of the segment, the reporter says, 'Neither Lance Marlin nor Eric Reiter could be reached for comment.'\"\n\n\"What?\" she asked, brows deeply furrowed.\n\nI didn't repeat myself.\n\n\"So . . . you&mdash; you did that?!\"\n\n\"Yes. We did. We founded Sparrow and sold it to Ardix years later. Every single Sparrow employee was immediately fired by Ardix.\"\n\nI knew she would be outraged. I couldn't help that, but I wasn't going to try to sugar-coat a certain reality of life.\n\n\"So, that . . . that person was real?\"\n\n\"Yes.\"\n\n\"You . . . you . . . \" she stammered.\n\n\"Say it.\"\n\n\"You and Eric were heartless pricks.\"\n\n\"You're right. We definitely felt like it at that point,\" I agreed, \"and that guy tried to end my life.\"\n\n\"What?!\"\n\n\"He tried to run me down at a grocery store later that week. He stalked me, found out where I lived, which wasn't in this house at that point, and followed me there.\"\n\n\"Lance,\" Leah gasped, \"Please tell me you're lying.\"\n\n\"No, but the guy was shit-faced drunk and missed me by twenty feet and hit one of those concrete pillars the parking lot lights mount on,\" I chuckled.\n\n\"It's not funny!\"\n\n\"No. You're right, it's not. But I laugh about it now because it's the only way I can keep my sanity. If not for his decision to hit a bottle beforehand, I might not be able to tell the story. He told me about his circumstances when he sobered up.\n\n\"Eric and I had already been considering it, but that . . . wake-up call sealed our resolve.\n\n\"We, out of our own suddenly very full pockets, kept the employees' paychecks coming for half a year to try to give them time to find employment somewhere else. We were young, stupid, naive, and impulsive, and when we saw the aftermath, we realized how poorly we'd managed the buy-out of Sparrow.\n\n\"We wanted to do right by our former employees, including that very person. I didn't press any charges, but he did get saddled with a DUI.\"\n\n\"But you sold Reiter-Marlin.\"\n\n\"Yes. We did. But those doors are still open. The entire board of directors, which Eric sat on, wouldn't agree to their terms until they added a multi-year non-severance clause that protected ninety percent of the employees' jobs unless terminated for cause. We really fought for it, but one-hundred percent was a nonstarter for the buyers. We were thrilled to score ninety.\"\n\n\"I didn't know that,\" she said.\n\n\"What I want you to understand is that, even though layoffs or closures are the absolute worst thing anyone at any level of management has to do, it's sometimes necessary if it means protecting the greater good. Otherwise, a business might fold and everyone goes home with nothing.\n\n\"So, when things get . . . dicey? A place like this is easier to, well, I'll just say it. This is a place to sequester away from people that might have malice on their minds. A main gate with manned security and full perimeter fencing with telemetry and all that. Because it does happen. Everyone who lives in this development is some high-level or very visible person of some sort.\"\n\n\"Lance, how can you live like this?\" she asked.\n\n\"I live like this . . . just like this. That's kind of my point.\"\n\n\"Oh,\" she said.\n\n\"I've got one more thing I need to say.\"\n\n\"Oh, boy!\" she barked sarcastically.\n\n\"I'm done.\"\n\n\"Sorry, Baby, I didn't mean to be snarky. Go on.\"\n\n\"I think I'm done with my career.\"\n\nHer face showed immediate shock. \"Lance, what's going on with you?\"\n\n\"I've been thinking about this for a while now, and I've been wanting to talk to you about it, because it sort of affects you. It's a decision I wouldn't make without discussing it with you first.\"\n\n\"Okay,\" she elongated the word, sounding like she was expecting a revelation.\n\n\"Honey, all this crap, all the stuff I just told you about, I'm sort of done with it. I'm tired. Yeah. I'm tired, you know? Eric was a hell of a lot smarter than me, but I thought he'd gone bat-shit crazy when he walked away from Reiter-Marlin before the IPO. But he was smart, too, investing in that land out in Nocona, and look at him now.\n\n\"I mean, he and Peggy still commute back and forth from here to there because she's still practicing medicine and doing all kinds of incredible research at Children's Hospital.\"\n\n\"What are you going to do?\"\n\n\"Who knows? Maybe I'll go work for him.\"\n\nThat made her laugh. \"Yeah, I can't see you as a cowboy.\"\n\n\"I really don't know. But my position at the bigger company has been unfulfilling, especially in these last months. I don't look forward to going into the office there anymore. I like coming back to my office here, but it's only because I get to see and talk to the people that made our company what it became. I respect the crap out of them, and I know each and every one of their names, and many of their spouses' and kids' names, too.\"\n\n\"Didn't you say your CEO said you could be some sort of absentee executive?\"\n\n\"Not so clearly as that, but . . . yeah.\n\n\"The problem is, though, it makes me feel like I'm setting a horrible example. I mean, what kind of leader earns the kind of paycheck I do without doing anything productive, let alone not even showing up for work.\n\n\"So . . . no. I don't like that. The sabbatical I took is not out of the ordinary for executives, so that was okay with me. But not just . . . being gone, you know?\"\n\n\"So. I'll ask you again. If you drop all of that, what are you going to do?\" Leah asked.\n\n\"I don't know. I want to find a project or something. Kind of like Eric did when he worked out the endowment for Children's Hospital a few years ago that Peggy told you about.\"\n\n\"So, something similarly charitable?\"\n\n\"Yeah. Maybe.\"\n\n\"Like me?\" Leah said.\n\n\"Leah! Please don't go there!\"\n\nShe simply chuckled.\n\n\"Seriously, Honey. Don't push that button. It makes me nervous,\" I added.\n\n\"I was just playing with you. So what does any of that have to do with me?\"\n\n\"I just wanted you to know what I was considering to see if you have any objections.\"\n\n\"Would it matter if I do?\"\n\n\"Of course it would. I value your opinion and your advice. You and I think the same way on many things, and very differently on others. You . . . you kind of . . . balance me.\"\n\n\"Dagnabbit, Lance,\" Leah sighed.\n\n\"Sorry. Didn't mean to dump on you.\"\n\n\"Don't be, Lance! It's just that you make me feel like I'm the most important person on Earth,\" she said, wrapping her arms around me. \"How do you do that?\"\n\n\"Because you kinda are?\"\n\nShe smiled tenderly at me.\n\n\"Jeez, you big jerk, you're pretty awesome, too, you know that? Thank you for asking my opinion. But I'm kind of scared to give it, you know?\"\n\n\"Why?\"\n\n\"Because of all this!\" she said, waving her arms, gesturing around the space. \"I don't know how I can possibly counsel you! Your lifestyle is so much different than mine, so I don't have a point of reference to see it like you do. But if I were you? I'd do whatever the hell I wanted to do! I mean, holy crap! Do you even need a paycheck anymore?\"\n\n\"No.\"\n\n\"You should do whatever you want.\"\n\nMy heart damn-near exploded on the spot.\n\n\"But only if I get to watch,\" she added.\n\n\"Alrighty, then,\" I smiled.\n\n\"So?\"\n\n\"Dunno. I'll let you know.\"\n\nShe laughed hard, then gave me an incredibly comforting kiss.\n\n\"I love you, Lance.\"\n\n\"I most certainly love you, too, Leah.\"\n\n\"Now. Can you give me a tour of this incredible place?\"\n\nI enveloped my love in my arms, welcoming the warmth of her form.\n\nI walked her through the entirety of my house. She was rather surprised that a good chunk of it was unfurnished. Only the living spaces, den, office, the master bedroom and two others were fully appointed. The rest sat empty as I'd moved those furnishings to my house in Parker.\n\n\"I think I counted six bedrooms, each with full bathrooms, plus three half-baths. There's a study, a den, a full kitchen plus a kitchenette, then the theater, and a game room, each with their own wet bars.\"\n\n\"Sounds about right. That's in this house,\" I agreed.\n\n\"There's another one?\"\n\n\"Yeah. There's a pool house in the back,\" I said, opening the French doors.\n\n\"You play?\" she asked as we walked the wide flagstone path between the tennis court and the pool.\n\n\"Barely.\"\n\n\"Is the pool heated?\"\n\n\"Yep.\"\n\nShe removed her sandals then dipped her toes in the water. She walked around the perimeter of the pool, carefully observing the surrounding gardens and landscaping.\n\n\"What are you looking for?\" I asked.\n\n\"Any signs of humanity out there.\"\n\n\"You won't find any. The grounds were designed for security and privacy.\"\n\n\"Excellent,\" she said, pulling off her shirt.\n\n\"Um, Leah? Are you sure you want to do that?\" I asked when she shucked her shorts, standing in front of me wearing nothing but her bra and panties.\n\n\"Why not? You said no one could see us,\" she said, reaching for and releasing the clasp at her back.\n\nI waited until she'd dropped her bra on a chaise lounge with her shirt and shorts.\n\n\"Out there, they can't, but the security and surveillance monitoring center can,\" I answered, pointing at one of the pole-mounted IP cameras.\n\nShe instinctively covered her bare breasts with her arm.\n\n\"Lance! You jackass!\" she yelled, blushing all the way down to her chest.\n\nI laughed hard as Leah struggled to turn her shirt right side out without exposing herself further.\n\n\"Gotcha good!\" I sang melodically, pulling my own tee off and losing my shoes and jeans.\n\n\"Oh, crap on a cracker! You are so going to pay for that, Mister!\" she hissed, pulling her panties down her legs.\n\n\"Good. Make me pay,\" I responded lasciviously.\n\nShe wadded them and threw the white cotton ball at me which I easily caught.\n\nI grinned wryly at her, unfolded them, and sniffed at the thick cotton panel in the crotch to smell her scent. I rolled my eyes back and sighed dramatically with a deliberately lewd expression, then deposited them on the lounge next to her other garments and sandals.\n\n\"You're such a perv,\" she giggled then turned toward the pool and jumped in.\n\nWe swam and goofed off for about a half hour, then lounged on the zero entry beach under a shady nipa umbrella, listening to music.\n\nLeah rolled to her side in the shallow water.\n\n\"This is such a paradise.\"\n\n\"I've never thought of it like one,\" I said.\n\n\"Oh? Why not?\"\n\n\"Designed and built to impress, sure. Part of business, you know? I can't tell you the number of events I've hosted out here, wooing, wining, and dining customers or suppliers for contracts. I've even hosted quite a few staff parties. I think most of the RMX employees have been here at some point, though swimming was not on the activity list because of . . . well, you know.\"",
        "\"Yeah. Bikinis aren't the best attire to wear in front of co-workers,\" she said.\n\n\"Exactly. But right now, with you here with me? Yeah. This does seem like a whole different place,\" I said.\n\nShe scooted a little closer in the water and kissed me softly.\n\n\"Like I said. Paradise,\" she whispered, stroking my man-bits with her hand.\n\nI pointed toward her nether-regions, then tapped my lips. I offered my mouth to her genitals, and they accepted.\n\nShe took my penis into hers as she parked herself atop my face. She got a bit carried away as one of her orgasms approached, and her pivoting hips slid forward. My extended tongue encountered her pretty little sphincter.\n\n\"Oops! Didn't mean to do that!\" she grunted, repositioning her folds where she wanted them.\n\nMy mouth was fully occupied, so I couldn't speak. Instead, I moved one of the hands I was using to support her butt, and gently stroked her on that very spot very softly with the pad of my finger.\n\n\"Uhngg!\" she grunted as another orgasm arrived. My finger felt her ring twitching. My nose in her vagina felt her introitus spasming in synchronous rhythm. I softly stroked her anus and tongued inside her vagina for the duration.\n\n\"What are you doing?\" she moaned.\n\nI didn't answer, and I didn't stop. I kept licking into her slit, bringing an aftershock-orgasm within less than a minute.\n\nShe rested her head on my hip, kissing my penis as her climax waned.\n\n\"You touched my butthole,\" she groaned.\n\n\"I did.\"\n\n\"You're naughty.\"\n\n\"I am.\"\n\n\"You licked it.\"\n\nI parted her cheeks and licked her perfectly cute little ring again. Hell. We'd been swimming in chlorinated water for hours, so everything was squeaky clean, and I was having fun exploring something I'd never done. I felt her sigh deeply against my cock when I slowly penetrated her butt with my pinkie.\n\n\"Oh, god, Lance,\" she moaned as I stroked her inside just a knuckle deep while I kept her clitoris between my lips. I gently suckled her until she climaxed yet again.\n\n\"That's how I put a face to a tail,\" I grinned.\n\nShe laughed at that revelation, then turned herself around. Slowly taking me into her wet warmth.\n\n\"Don't rush. Just hold me inside you and kiss me,\" I whispered.\n\nI moved only enough to maintain my erection. We kissed softly and slowly, fully attached, legs interlocked, listening to the softly lapping water and the music. It was an incredibly tender, intimate time.\n\nShe rocked her pelvis back and forth, not in and out. The pleasure at the head of my penis was intense as her cervix slid around it.\n\nI looked down and could see our union clearly when she rocked backwards.\n\n\"I wish you could see what I see,\" I groaned, finding the sight intensely erotic.\n\n\"Tell me,\" she grinned.\n\n\"I see your pussy stretched around me. When you pull me out a little, your flesh follows a bit. It's so pink and stretched so thin I can see a freckle through it. Your moisture has made this little ring at the root of my dick. Your clit is peeking out,\" I said, then stroked it with my thumb.\n\n\"The way your abs flex as you rock is really hot,\" I said, softly stroking her firm tummy with the back of my hand, all the way up to her breasts.\n\n\"You have the most beautiful titties.\"\n\n\"I barely have any.\"\n\n\"They're perfect. Their shape, their size, their softness, and these rock-hard nipples,\" I said, pulling them.\n\n\"Your entire body is perfectly exquisite, and the fact that you let me admire it, touch it, hold it, taste and smell it is so incre&mdash;\"\n\n\"Oh, fuck!\" she yelled with impressive volume.\n\nHer rocking turned into a full gallop as she slid her vagina fully up and down my shaft. Her pussy clenched so tightly at one point, my cock popped out and slid up the cleft of her ass.\n\n\"No! No!\" she yelled, repositioning and entrapping my penis again. She slid back to the root. I felt her orgasm grasping at me, and I tried to rock myself.\n\n\"Cum inside me, Love! Cum inside me!\" she hissed.\n\nI obeyed her command quite willingly.\n\n\"Leah! I love you!\" I shouted as I spilled into her pussy what felt like a month's worth of my semen.\n\n\"I love you, too!\"\n\nMy head went back, somewhat uncomfortably, onto the sanded plaster a few inches below the water's surface. She must have heard the \"clunk.\"\n\n\"Oh, Baby! Ouch!\" she said, insinuating her hand underneath my head to pad it.\n\nIt wasn't a hard enough impact to cause a knot, but it was pretty funny. I laughed out loud.\n\n\"You bonked your noggin,\" she said, kissing me tenderly again.\n\n\"I got an owie,\" I childishly and playfully whined.\n\n\"My poor baby. I love you,\" she whispered before more following kisses.\n\n\"I know,\" I said, trying to mimic Han Solo's voice.\n\nIt made her laugh hard, which ejected me from her body.\n\n\"Oops!\" she said, then climbed off of me, sitting on her heels. \"Watch!\"\n\nShe was pointing toward her crotch, and I saw several globs of my stuff drop into the water.\n\nI laughed, feeling a bit of masculine pride.\n\n\"Now for the rinse!\" she laughed, scuttling to slightly deeper water, settling her pelvis below the surface.\n\nI saw her tummy's muscles move, then she tilted back and gushed a jet of water out of her vagina all over my feet, laughing pretty hard.\n\n\"No. Freaking. Way! Do that again!\"\n\nShe repeated the amazing display of feminine anatomical, mechanical prowess, and muscle control.\n\n\"That's freaking incredible! I'm going to try that!\" I said, sitting in the water and making a tense expression with a grunt.\n\n\"No! Don't!\" she yelled, laughing hard.\n\n\"I love your goofiness,\" Leah sighed, crawling back to me and kissing me sweetly.\n\nI smiled.\n\n\"I'm getting hungry. We going out to dinner?\"\n\n\"We can, but I was thinking I'd grill some Reiter Ranch Prime Angus brisket-burgers.\"\n\n\"Oh, that sounds absolutely amazing. Plus, we don't have to get dressed,\" she said.\n\n\"I don't know about you, but I'm not going to grill totes nekid,\" I chuckled.\n\n\"Come on. I'll help any way I can.\"\n\nI lit the grill on the way into the house where we dried ourselves and re-dressed.\n\nLeah started some crinkle-cut french fries in the air-fryer as I portioned out a pound of ground Angus brisket into two half-pound patties mixed with seasonings.\n\nShe buttered and toasted some brioche buns on the flat-iron griddle as I grilled the patties and slices of sweet vidalia onion.\n\nSmoked Gouda and provolone topped the patties in their final minute on the grill, and the gooey, cheesy delights were deposited on the buns with bibb lettuce, and sliced beefsteak tomato.\n\n\"Yummy?\" she asked between bites.\n\n\"Totally,\" I answered, chewing happily.\n\nWe ate in a few minutes of silence.\n\n\"Where does all this stuff come from?\" Leah asked, referring to the ingredients which were fresh.\n\n\"I use an app for my groceries. The service has been security screened so the delivery folks have access to the house. They even put it away.\"\n\n\"Wow. Super-convenient,\" she said.\n\n\"It really is, but it comes at a premium. Can I ask you a question, too?\"\n\n\"Of course, Baby.\"\n\n\"Is this too much?\"\n\n\"Too much for what?\" she asked.\n\n\"Come on. You know what I'm saying,\" I said.\n\n\"I'm kind of getting used to it,\" she answered.\n\n\"Okay. That makes me feel better,\" I grinned.\n\nWe watched a few episodes of Mando in the theater until the food coma became too much to resist.\n\n<hr>\n\nIn the days at the beginning of Leah's flight training, the daylight hours were seasonally shortened. Then, they were long as summer fully settled in. Both seasons worked against us refusing daylight when we needed it and night skies when we wanted. Legal night landings for training can't happen until almost 10:00pm in north Texas because of the long daylight hours.\n\nBut, we managed.\n\nFor our night 100 nautical mile flight, we departed McKinney at 10:15pm, right after Leah was done with work.\n\nI carefully crafted our circuit to include a stop-and-go at McKinney, then on to Greenville's Majors Airport, then to Rockwall, Mesquite, Commerce, Wills Point, and back to McKinney.\n\nThe point of the pattern was based on the vast differences in the runway dimensions: Long and wide, long and narrow, very short and very narrow, Long and wide again, medium in both, et cetera.\n\nLeah damn-near pranged my plane on the arrival to Rockwall, which was exactly the point of the flight. Well, not so much to force a hard landing, but I wanted to enforce the illusions night flights can induce when arriving at strips of varying sizes.\n\nLeah gasped when she saw the asphalt appear with the illumination from the landing light. I recovered from her too-rapid decent and executed a touch and go.\n\n\"Try again,\" I encouraged. \"Check the altimeter more often. Know that a narrower, shorter field is going to make you think you're high, and a larger one is going to make you want to flare way higher than you would in daylight.\"\n\n\"Crap! I get it now!\" she exclaimed.\n\nThe following weekend, we repeated the course in reverse, with much better results.\n\nShe was ready for her solo cross-country.\n\nI triple-checked the weather, and assigned her to fly via pilotage and dead-reckoning alone a flight from McKinney to Hugo, Oklahoma, then Mount Pleasant, Texas, and back. I asked her to send me photos to identify each airport once on the ground.\n\nHer next ten hours airborne were flown by herself, practicing and hardening her ground reference maneuvers and crosswind landings.\n\nOn the big day, Eric and Peggy texted me earlier that morning and asked if they could wait with me during Leah's check-ride, a question I deferred to Leah.\n\n\"Sure! Why not? They deserve credit, too,\" she said, \"that is, if I pass. If I fail, it's all on you.\"\n\n\"I know you're ready. But it's really your decision. Not too late to back out,\" I said as we climbed into my plane.\n\n\"No way. I've got this. I'm excited!\" she said.\n\nOur last two hours together as student and instructor were our flight to Oklahoma City for her check-ride with Smitty. I grilled her with a boat-load of crap all the way there. Sure, there were plenty of designated examiners in the North Texas region, but I knew Smitty. I knew how he worked, and I understood his processes and procedures since I'd flown with him for four different check-rides. I also trusted him to treat Leah fairly and objectively.\n\nI was able to coach Leah on ways to effectively and efficiently interact with him, and what signs to watch for, and tried to tailor our final assessment flight in much the same way as he would test her.\n\nWe were scheduled to meet him at Mace Aviation at 11:00am, where Leah and Smitty would begin with a sit-down in one of the offices for an hour or so for the oral portion of the exam.\n\nHe arrived forty-five minutes late, but we didn't have anywhere else to be, so it wasn't a problem.\n\nHe seemed harried and rushed. The introductions and small-talk were reduced to the bare minimum as they went into the office and shut the door.\n\nI was surprised when they left that office in less than ten minutes. Smitty made a bee-line for the apron. Leah was left behind, struggling to collect all the paperwork she'd prepared.\n\nI remembered my own private pilot check-ride when Smitty asked me, right out of the gate, \"Okay, Mister Marlin. First, I want you to show me that both you and the aircraft into which I'm about to trust my life are legal for flight.\" That task alone took twenty minutes to review all the paperwork and logs.\n\nLeah scuttled out of the room.\n\n\"That man is an odd duck. He's in a horrible mood, too. I'm nervous now,\" Leah said, then followed him out to the plane.\n\n\"Huh,\" I said to Eric. \"That's unlike him. I wonder if he's doing that just to put a bit of pressure on her and see if she forgets to do something.\"\n\n\"Beats me,\" Eric said. \"I haven't even seen the man in years.\"\n\nKevin joined us in the lounge a few minutes later. I had programmed presets on my portable NAV/COM for the appropriate frequencies for the Will Rogers area.\n\n\"Well?\" Kevin asked.\n\n\"They just went out to the plane,\" I answered, very nervously.\n\n\"Huh? That seams rather fast,\" he observed.\n\nI was nervous for a number of reasons.\n\nOf course, I was nervous for Leah, though I was confident in her abilities.\n\nI was also nervous because I'd planned a very particular way of celebrating her success. It was one that'd put the post-solo trip to Kansas City to shame, or so I hoped.\n\nI heard her voice over the radio after about ten minutes.\n\n\"Oke City clearance, Skylane three four eight lima mike is at Mace Aviation, request VFR departure southwest, with information charlie.\"\n\nShe received the requested clearance and squawk code, and was immediately handed to ground.\n\n\"Skylane eight lima mike, taxi to runway one seven left via november two, november, echo one,\" said that controller.\n\n\"Runway one seven left via november two, november, echo one, eight lima mike.\"\n\nI knew the airport. Though the distance to the runway was short, I knew to expect about five minutes before she'd call ready for departure because she would be talking through every single step of the checklist so Smitty could be certain she knew what she was doing.\n\nSure enough, after about that amount of time, we heard her call the tower.\n\n\"Oke City tower, Skylane three four eight lima mike, holding short one seven left at echo one, ready for departure, VFR southwest.\"\n\n\"Skylane eight lima mike, winds one niner three at nine, runway one seven left, cleared for takeoff.\"\n\n\"Cleared for takeoff one seven left, eight lima mike.\"\n\n\"Eight lima mike, contact departure. Good flight,\" we heard about a minute later.\n\n\"Eight lima mike. Thanks!\"\n\n\"And now, we wait,\" I said after we heard her brief exchange with the departure controller.\n\nKevin said, \"If he follows his normal game-plan, he'll have her fly out to Chickasha for her ground references, probably have her do short and soft-field procedures there, and on the way back, simulate an engine failure to see if she spots any of the private strips. He'll do a few other tricks on the way back. Shouldn't be more than an hour, tops.\"\n\nAll four of us were pilots, which afforded us the opportunity to hangar-fly while we waited. I know for a fact we were all surprised to hear her voice on the radio after only thirty minutes.\n\n\"Mayday mayday mayday! Skylane three four eight lima mike, mayday!\" we all heard.\n\nEric said, \"What the fuck?\"\n\nKevin said, \"Smitty'll be up shit's creek if he's pulling something like this as part of a test.\"\n\n\"Eight Lima Mike, mayday received. Advise your situation.\"\n\n\"I need to land immediately. I'm on my check-ride, and my examiner is ill. He's unconscious.\"\n\n\"Eight Lima Mike, roger, say fuel status and souls on board.\"\n\n\"Three hours. There's two of us.\"\n\nThough professionally calm, I thought her voice sounded so weak, and it made me feel even more so.\n\n\"Eight lima mike, ident if able.\"\n\nTen seconds elapsed before the controller said, \"Eight lima mike, radar contact, eight miles southwest. Do you have Will Rogers in sight at your eleven o'clock?\"\n\n\"Affirmative!\"\n\n\"Descend two-thousand five-hundred. Are you able to switch to Will Rogers tower? That is one one niner pint three five. If unable, just stay with me.\"\n\n\"One niner one three five?\"\n\n\"Negative. One one niner. One one niner decimal three five,\" he said much slower. \"If they don't answer, switch back to me, okay?\"\n\n\"Roger.\"\n\n\"She's a little rattled,\" Eric said.\n\n\"No shit, Eric! I'm kind of freaking out myself,\" I said.\n\nPeggy leaned over and rubbed my back reassuringly.\n\n\"She'll be fine, Lance. She's talking to pros like herself,\" she offered.\n\nI suddenly remembered I needed to change channels on my own receiver.\n\n\"&mdash;the long one closest to me,\" I heard, mid-sentence.\n\n\"Eight lima mike, that is runway three five left. It and every other runway is yours. Break break, Southwest fourteen seventy, emergency opposite-direction approach in progress. Execute missed as published except expedite climb now and maintain four thousand and contact approach.\"\n\n\"Southwest fourteen seventy, going missed, expediting four thousand. Contacting approach. God be with you, eight lima mike,\" encouraged an invisible aviator.\n\n\"Landing to the north, she's got a ten knot tailwind. How much tailwind landing practice did y'all do?\" Kevin asked.\n\n\"I'm wishing we'd done more. None of the ones we did were in anything this strong. She should fly a downwind and land south.\"\n\n\"That'd take a lot longer,\" Peggy said.\n\n\"Eight lima mike, you have a tailwind on your final. That is no problem at all, okay? It's going to make you think your approach is too fast. Just pay attention to your indicated airspeed. That's all that matters. Don't let it catch you by surprise. It's just an ordinary landing with plenty of runway in front of you. You're doing fine. You're almost home. Good . . . good . . . easy does it . . .\"\n\n\"Damn. That controller sounds so calm,\" Peggy observed.\n\n\"That's Vicki Shires. She's a pilot, too. One of my students a few years ago,\" Kevin answered.\n\nThat runway was at the opposite corner of the field and maybe two miles away from Kevin's hangar. We knew we wouldn't be able to visually observe, so we stayed put.\n\n\"Eight lima mike, remain this frequency. Turn right next taxiway. Good. Keep going just a little further. Your plane is just fine, so don't worry about the fire trucks on your flanks. They're there to help. Keep going. Now turn slight left onto golf one. Go about fifty yards further. Stop right there. Set your parking brake now and complete your full shutdown checklist. Do not, repeat, do not exit your airplane until emergency services instructs you to.\"\n\n\"Thank you!\" we heard Leah's final transmission.\n\nKevin was already on the telephone.\n\n\"Yeah. Yes. Understood. Mace Aviation. Right. Okay. Appreciate the help. Thanks,\" he said over the course of about thirty seconds.\n\nHe told us, \"Airport maintenance is sending a tug out there to tow your plane back. There's no way in hell she should be expected to taxi it here.\"\n\n\"I don't give a shit about the plane! How the hell do I find Leah!?\"\n\n\"Easy, Lance,\" he said commandingly. \"They're bringing her here.\"\n\nIt wasn't ten minutes longer before a red SUV pulled up at the high-lift doors of the hangar.\n\nLeah got out of the rear passenger side, walked straight to me, and embraced me. She noticed Peggy, Eric, Kevin and several mechanics watching her, so she took my hand and walked us into the building. I followed her into the office in which she'd begun her day.\n\nThe door closed, and she just stared at me. She stared for maybe five seconds before she broke down into tears with furious, gasping sobs.\n\n\"Baby. Oh, shit, Honey,\" I whispered into her ear as I held her racking body in my arms as she bawled.\n\nI heard a subtle knock on the door.\n\n\"Give us a few!\" I answered.\n\nThe door opened slightly.\n\n\"Leah? Lance? It's Doctor Reiter. Can I come in?\"\n\nShe didn't say \"It's Peggy.\" She'd used her title, which conveyed volumes.\n\nI pulled the door further open, and Peggy entered.\n\n\"Oh, Leah,\" she said, rubbing her shoulder. \"Come sit down. I just want to check you out a little, okay? I want to make sure you're okay.\"\n\nPeggy held Leah's wrist and placed two fingers at her radial artery.\n\n\"Lance, would you see if you can find some juice or a non-diet soda?\"\n\n\"Yeah.\"\n\nI went across the corridor to the lounge and bought a ginger ale from the vending machine.\n\nAs I walked back, Kevin stopped me.\n\n\"Hey,\" he whispered. \"I just heard from the station. Smitty had something called an MI with concomitant arrhythmia. He's on his way to OU Medical Center. At least for now, they think he's on the good side of the fence.\"\n\n\"Thanks.\"\n\nI stepped back in and handed Peggy the can of soda. She cracked open the top.",
        "\"Leah, have a few sips of this. I think the stress has made you hypoglycemic.\"\n\nLeah did as she was asked as Peggy knelt next to her and softly stroked her upper arm.\n\n\"I feel like I'm going to puke,\" Leah said, pointing to a trashcan.\n\n\"It'll pass. It's totally normal. I know it's difficult, but I want you to try to slow your breathing, okay?\"\n\nLeah nodded weakly. She took a few more slow sips.\n\n\"Can you tell me what happened?\" Peggy asked.\n\nLeah scooched more upright in her chair.\n\n\"I had just done s-turns over a fence line, and Smitty asked me to climb another thousand feet and do a steep turn.\n\n\"He was grumpy. I mean, I don't know him, but he was very short with me. We barely talked in here at all. Just a few yes or no questions. Even though I had them out and ready, he didn't even look at my logbook or any of the plane's records.\n\n\"So I start a steep turn, and barely halfway through it, he tells me to stop and fly back here.\"\n\n\"I thought I'd already failed. I'm trying to focus on flying and to understand what I did wrong. Next thing I know, he's grabbing his arm like this,\" she demonstrated, \"then he threw up and slumped sideways against the window. I didn't know what to do!\"\n\n\"You got yourself and your passenger safely on the ground,\" Peggy said.\n\nLeah started crying again, standing from the chair and clutching me fiercely.\n\n\"Oh, Honey. God, I'm so sorry,\" I whispered to her. \"You're safe, Baby. I've got you. I've got you.\"\n\nI said to Peggy, \"Kevin's EMT buddy said it was an acute MI and something called . . . um . . . concomitant arrhythmia?\"\n\n\"Yeah. That means he was probably feeling pretty crappy to begin with which could explain his short temper. We'll just hope for the best, okay?\" Peggy said.\n\n\"Thank you,\" Leah said, requesting and receiving a hug from her.\n\n\"We've all had way too much excitement for one day, right? Come on. Y'all come to the house and try to relax, okay?\"\n\n\"I'm too tired. I don't want to be in another plane today,\" she said.\n\n\"No way. We have a house here in Norman,\" Peggy said.\n\n\"Oh. Okay,\" Leah said.\n\nPeggy lead Leah through the door, and I met Kevin and Eric in the hallway.\n\n\"Is she okay?\" Eric asked me.\n\n\"Yeah. Just very, very shaken up.\"\n\n\"So is your plane,\" Kevin said. \"I can tell by the smell that the brakes got too hot. The discs are probably warped, too.\"\n\n\"I'm not surprised.\"\n\n\"Um, I'll tend to the brakes and tires, and I'll see to getting the interior cleaned up, too,\" Kevin said.\n\n\"Ugh,\" I said when I realized what he was talking about. \"Yeah. Thanks, man. I owe you.\"\n\n\"Nah, you don't. I've been padding your bills for years,\" he chuckled.\n\nWe met the ladies at the Reiter's Escalade and climbed in. Peg drove us to a house which was much like my own in Parker, small and conservative compared to the one they own in Orlando, Florida, or mine in Edmond.\n\n\"Anyone interested in lunch? We could order pizza or something,\" Peggy asked.\n\n\"I'm not,\" Leah answered. \"I only want a nap.\"\n\n\"I'll bet you do. Come on,\" Peggy said, leading Leah to one of the spare rooms.\n\nI followed them, and joined Leah as she sat on the bed.\n\n\"I'm totally wiped, Lance. I feel like I've been through the ringer,\" Leah said, removing her shoes.\n\n\"That's because you have.\"\n\n\"Please stay with me for a while?\" she asked.\n\nI nodded, and settled on the bed with her and held her in my arms.\n\nI remained quiet, running my fingers through her hair across her scalp. I stroked her back and shoulders. I did all of that until she fell asleep. I unfolded the quilt which lay at the foot of the bed and tucked her under it, then left the room, quietly closing the door behind me.\n\n\"How's she feeling?\" Peggy asked.\n\n\"She's sleeping.\"\n\n\"Good,\" she smiled.\n\nWe discussed the events of the day until the pizzas were delivered.\n\nPeggy excused herself to the office right after they arrived.\n\nI cracked open a Dos Equis long-neck and sat at the table across from my friend.\n\nAfter a few minutes, Peggy returned and pulled a few slices onto a plate.\n\n\"Her examiner is okay right now. They're doing a cardiac ultrasound and an angiogram,\" Peggy informed us.\n\n\"How on Earth did you find that out?\" I asked.\n\n\"I have contacts at that hospital, too, you know.\"\n\n\"Are you running afoul of HIPAA?\"\n\n\"Shut up,\" she grinned, fanning her hand dismissively at me.\n\nWe finished our late lunch, and I settled into a recliner.\n\n\"Well, today didn't exactly go according to plan, huh?\" Eric surmised.\n\n\"No,\" I answered.\n\n\"Are you still going to give it to her today?\"\n\n\"Are you kidding me? No way. Not after all of that. Now I need to find another examiner and get her check-ride rescheduled.\"\n\n\"No way what? What are you two talking about?\" Peggy asked, settling on the sofa next to her husband.\n\nEric just looked at me.\n\n\"Okay you two, spill,\" Peggy prodded.\n\nI rose from the recliner, went to the kitchen, and retrieved something from my flight bag which I handed to Peggy.\n\nWhen she saw what it was, her eyes flew wide.\n\n\"Oh, wow!\" she hush-yelled. \"Ohmygosh, Lance!\" she chirped, jumping from the couch to give me a hug.\n\n\"No. No! Huh-uh!\" I warned. \"No, Peggy! I know you! You have to keep this to yourself,\" I said, wagging a finger vigorously at her.\n\n\"You were going to ask her when she got back from her check-ride, weren't you,\" she astutely concluded.\n\n\"That was my plan, but there's no way in hell I would want her to associate this with what she went through today.\"\n\n\"I can understand that,\" she said, studying the glistening item. \"It's just . . . it's fantastic, Lance. It's absolutely perfect. She's going to love it.\"\n\n\"I can only hope. Now gimme,\" I said, taking it from her and secreting it right back where it'd been.\n\n\"Seriously, both of you! Don't spoil it, capeesh?\"\n\n\"Roger,\" Eric said, and Peggy nodded.\n\nIt was about an hour later when Leah awakened.\n\n\"Something smells good,\" she said.\n\n\"There's pizza right here, Hon,\" I said, opening the warming oven to remove the box.\n\n\"Oh, heck yes,\" she said, removing a slice, the end of which went right to her mouth.\n\nI brought her a plate, and she placed the slice plus two more atop it.\n\nShe sat at the table.\n\n\"What?\" she said with a full mouth.\n\nShe finished chewing her mouthful, swallowed, and said, \"Why are y'all staring at me?\"\n\nPeggy's cellphone chimed.\n\n\"Hey! Good news. Mister Smith is out of the cath-lab.\"\n\n\"What's that mean?\" Leah asked.\n\n\"Catheterization lab. Message says they placed three stents, and . . . well, Leah? . . . his doctor tells me his patient has asked to see you. Any time between five and seven o'clock is okay with his doctor.\"\n\n\"Why?\"\n\n\"Doesn't say,\" Peggy shrugged.\n\nI drove Leah to the university's hospital. We arrived around six o'clock.\n\nWe went to the visitors' kiosk where a volunteer directed us to Mr. Felix Smith's room.\n\nI knocked before opening the door for Leah.\n\n\"If it's not my angel of mercy,\" he said in his patently identifiable voice when Leah stepped inside.\n\nHe sounded more energetic than he looked, with tubes hanging all over and monitors beeping and squawking nearby. There was a man a decade or two older than me, dressed in military utilities, sitting in the room with him.\n\n\"Are you feeling okay, Mister Smith?\" Leah asked.\n\n\"Young lady, you've certainly earned the right to call me Smitty. And yes, I am, thanks to you and your nerves of steel.\"\n\n\"I can't tell you how glad I am to hear that,\" Leah smiled warmly.\n\n\"The doctor thinks it was the g-forces from that steep turn you were in the middle of which made bad things start happening. Something I've done thousands and thousands of times, and it's only how many gees?\" he asked the other man.\n\n\"One point four, Dad,\" the other man said.\n\n\"And I used to do four or five all the time in the Navy. But I guess today was the last straw. I think you were doing well, but, quite frankly, I don't remember.\n\n\"If it were legal and all, I'd sign your ticket right this minute. You encountered conditions most pilots will never experience, and you met them.\n\n\"And I also owe you both an apology. Miss Reynolds, I think I treated you unkindly this morning. I had what I thought was only a sour stomach and I just wanted it all over and done. And, Mister Marlin, I am sorry I made a mess of your Cessna.\"\n\n\"It's all been taken care of already,\" I assured him.\n\n\"Oh. That reminds me. Miss Reynolds, there's an envelope over there on that tray. That's the money you gave me this morning.\"\n\n\"Don't worry about that, Sir. I'll come do a retake as soon as you feel up to it. You hang on to it,\" Leah said.\n\n\"I'm afraid not. I have to hang it up. I am grounding myself. Given what just happened, it'll be an uphill battle for me to renew my medical, and I don't think I have the energy left for such a fight. I've had a good sixty-year run, though.\"\n\nHe looked to the other man in the room and said, \"Pat, introduce yourself, would you?\"\n\n\"Ma'am, Sir, I'm Lieutenant Colonel Patrick Smith.\"\n\nLeah shook his hand first, then he offered me a handshake as well.\n\n\"Pat is attached to the Oklahoma Air National Guard, and flies ERJs with the airline for a living,\" Smitty chimed in again.\n\n\"Oh?\" Leah asked.\n\n\"Yes, ma'am,\" the younger said. \"But what my father isn't saying is that I'm also a designated examiner. That's what I plan on doing full-time when I retire in a few years. I do check-rides when my time permits. It would be my absolute honor and privilege to finish yours.\"\n\nLeah looked at me. All I could offer were raised brows and a shrug.\n\n\"I guess this envelope belongs to you, then.\"\n\n\"No, it doesn't. With all due respect, I won't accept it. I'll waive my fee. I won't take a dime.\"\n\n\"Not a dime?\" Leah said.\n\nMy heart skipped three beats.\n\n\"Not one red cent,\" he smiled.\n\n\"That's very generous of you. Thank you, Colonel,\" she smiled back. \"Where are you based?\"\n\n\"The airline has me based at DFW. My wife and I live in Grapevine. My daughter just graduated from SMU with her master's, and my son graduates from UTD this spring. Thankfully, as you can see by my uniform, I'm on guard duty, so I was only a half-hour away when the hospital called me. How about you?\" he asked.\n\n\"I live in Wylie. Lance lives in Parker.\"\n\n\"We're almost neighbors,\" he chuckled.\n\n\"Small world,\" I agreed.\n\n\"If you both live in the Dallas area, why were you doing a check-ride here?\"\n\n\"Because I lived here all my life,\" I began. \"I did my flight training out of Rogers, and your father was the examiner for all four of my check-rides. It was a natural choice for me to sign Leah up with him. I just started working on and off in Richardson about a year ago, and Leah is my first student.\"\n\n\"That makes sense. Dad taught me to fly when I was fifteen. It became a passion in a big way, as you can tell,\" he laughed.\n\n\"When do you think we might be able to meet?\" Leah asked.\n\n\"I'm on duty the rest of the week. I'll be back home on Friday. Saturday or Sunday work for you?\"\n\n\"I'm certain I can make it work,\" she smiled.\n\nThey exchanged contact information, and we said our goodbyes.\n\nNeither Leah nor I felt like traveling that night, so we stayed with the Reiters and flew back to Texas the following morning.\n\n<hr>\n\nLate June.\n\nAt 8:00am, I parked myself in the FBO's lounge while Leah and Colonel Smith conversed for the oral portion of the exam for almost two hours at a table in the pilot briefing room.\n\nAs they passed by me on the way to the apron where my plane was already chocked and waiting, Leah grinned and gave me a subtle thumbs up. I blew her an equally-subtle air kiss.\n\nOf course, I listened in on the radio calls.\n\nThey were airborne for exactly forty-seven minutes.\n\nMy heart was racing as I saw my Skylane taxi back in front of the building, but I forced myself to stay out of the way.\n\nThe expression on Leah's face as she stepped out of the plane indicated her outcome. Her examiner was exhibiting similar ease as he stepped out as well. I watched as she locked up the plane as a marshal chocked its wheels.\n\nShe darn-near sprinted into the building, finding me waiting near the doors. She embraced me tightly.\n\n\"Thank you,\" she whispered into my ear.\n\nI was quite willing to break all conventions of acceptable displays of affection in public, but reasoned that if she was, she'd make the move herself. She gave me a simple warm, tender smooch.\n\n\"Doctor Marlin, I hope you call me when she's ready for her instrument check-ride,\" he smiled.\n\nYeah. He addressed me the same way few people on the \"outside\" would address him. It was an appreciated gesture.\n\n\"She did a hell of a job, thus so did you. Miss Reynolds, give me just a few minutes in IACRA and you'll have your temp license in your hand.\"\n\nHe went back to the briefing room which had a couple of internet-connected PCs and a printer.\n\n\"I'm so happy for you, Leah,\" I said, quite sincerely.\n\n\"You have every reason to take pride in yourself, too. I mean . . . Jeez, Lance! If anyone asked me a year ago if I was a pilot, I'd have said, 'fat chance of that!' You made it all possible.\"\n\n\"I really didn't, Leah. I just gave you my time and the use of a plane. You did the hard work.\"\n\n\"No! Do not sell yourself short! I couldn't have gone on YouTube, Reddit, or Quora to learn what I was tested on today. This was all . . . it was both of us.\"\n\n\"You're right,\" I said as I hugged her tightly. \"Feel like celebrating?\" I asked.\n\n\"Are you kidding me?! Yes!\"\n\n\"Good, because I have a little something-something for you to show the world how I feel about you.\"\n\n\"Oh?\" she said with anticipation showing in her brows. The glints in her brown eyes quickened my pulse. I almost dropped the box as I drew it out of the pocket of my bag.\n\n\"Ohmygosh, ohmygosh, ohmygosh,\" she said, her eyes conveying deep anticipation as I offered her the deep-green velvet box.\n\nShe opened it very slowly, giving the appearance she was extending her anticipation.\n\n\"Oh. Uh . . . Oh! I don't know what to say!\"\n\nShe looked and sounded briefly disappointed, which made my heart flutter even more.\n\n\"It . . . Oh, Lance. It's beautiful. I love it. I absolutely love it, Baby.\"\n\n\"You do?\"\n\n\"Of course!\" she said. \"Why would you ask me that?\"\n\n\"Well, you know. I'm still a little uncertain because it was just a bit spendy.\"\n\nShe embraced me in full view of every individual in the building and quite successfully offered her tasty tongue.\n\nShe smiled and turned her back. \"Put it on me?\"\n\nI lowered the white gold chain to her chest. It held the customized pendant. It entrapped a brilliantly-cut 1.5-carat gem. She held her hair up and away from her neck. I couldn't resist the urge to give her nape a little nibble after I hooked the clasp.\n\nShe giggled and shimmied at the tickle.\n\n\"Oh, wow! That's here, isn't it!\" she said, pointing across the parking lot to her workplace.\n\n\"Yeah. Your birthstone represents you.\"\n\n\"That's so thoughtful, Lance, and it is so, so beautiful.\"\n\nI remained quiet as she studied my gift.\n\n\"By the way, Leah, that's only a gift to commemorate your accomplishment.\"\n\nI took a deep breath and withdrew from the pocket of my pants what I'd shown Peggy and Eric the week before.\n\n\"Leah, I'm done. I can't wait anymore.\"\n\nI showed her what was between my thumb and forefinger.\n\n\"From the first day I met you face-to-face, you grasped onto me. I feel hollow when we're apart and whole when you're near. I can't stand the thought of you not being the best part of my life. Forever.\n\n\"Leah, will you marry me?\"\n\nI watched her for several moments as tears began to form in the corners of her eyes and descend along the crook of her nose to the corners of her mouth.\n\nShe shook her head slowly. More tears began to escape even the outer corners of her yes.\n\nShe stood still and silent for so long that I became woefully uncomfortable, fearing I'd made a horrible error in judgment. I was scared to death that the first woman who I thought truly loved me in whole . . . would decline.\n\n\"From the first day you met me?\" she whispered.\n\n\"Yes.\"\n\nShe cried, \"I can't believe it! Yes, Lance! Yes! Like a thousand times!\" she wept into my shoulder as I held her close to me.\n\n\"Gimme, Babe!\" she cried, holding out her left hand.\n\nI slipped the ring onto her finger and she embraced me again, still weeping.\n\nI would have started shedding tears of joy myself had we not been interrupted.\n\n\"Here you go, Miss Reyn&mdash; Uh? . . . Oh. Um, isn't this supposed to be a happy day?\" Colonel Smith said when he returned, seeing Leah crying and me holding her tightly.\n\nLeah wagged her ring-bearing hand toward him.\n\n\"Oh, my! Would you look at that! That's a new one!\" he laughed. \"Congratulations on both fronts!\" he said, presenting her temporary license.\n\n\"Colonel Smith, please give our regards to your father,\" Leah said.\n\n\"I certainly will. Congratulations, again. Both of you,\" he said, and left the facility.\n\nWe went to Leah's house and celebrated. We celebrated vigorously and amorously.\n\n\"I just now realized something. I've been a moron!\" Leah laughed, lying next to me, spread-eagled and stark naked.\n\n\"Why?\" I asked.\n\n\"Your plane. Lima Mike. Your initials, right?\"\n\n\"You're telling me you just now figured that out?\"\n\n\"Well, I hadn't put any thought to it before because tail numbers are just . . . numbers to me.\"\n\n\"And why's it funny?\"\n\n\"Because it'll be my initials, too!\" she laughed harder.\n\n\"That's true!\" I said. \"But that's assuming you're going to take my name.\"\n\n\"Of course I will, Lance,\" she smiled. \"Leah Marlin. Leah Valerie Marlin. Just . . . wow. In love even more,\" she grinned broadly.\n\n\"Lance David Reynolds. Yeah . . . no.\"\n\n\"You're such a dork,\" she chuckled and smacked me playfully. \"Why is your middle name David? Do you know?\"\n\n\"My mother told me that as soon as she held me in her arms, she thought I'd slay giants. Just with a sword instead of a rock, hence 'Lance'.\"\n\n\"That's so beautiful. Many giants you have slain,\" she whispered.\n\n\"It's not as beautiful as yours. Valerie comes from the Latin root valor, which means strong and courageous.\"\n\n\"Can I ask you a very personal question?\" she asked, studying her ring again.\n\n\"Sweetheart, we're way past those boundaries, right? You can ask me anything.\"\n\n\"Yeah. You're right. Why'd you pick this? I mean . . . it's absolutely beautiful. It's totally . . . perfect.\"\n\n\"Are you asking me why it's not a huge-ass rock?\"\n\nShe chuckled. \"I guess I am. I'm glad it isn't, but I'm only wondering&mdash;\"\n\n\"I figured you wouldn't like something like that. I know you're reserved and conservative, and I picked something . . . well, like you,\" I answered honestly. \"But if you want a boulder, we can go pick one out tomorrow.\"\n\n\"No!\" she yelled. \"No way, dude. This is perfect. You've figured me out.\"\n\nShe looked at me so tenderly and sweetly.\n\n\"We've come a long way, haven't we?\" she asked.\n\n\"We have. And I can't wait to see where we go next.\"\n\n\"I'm wondering what people are going to think when they see me with this awesome ring on my finger instead of that cheap wedding band.\"\n\n\"I wish I could be a fly on the wall for that,\" I laughed.\n\n\"Nah, I'll just say you swept me off my feet before I even met you, and the other ring was just a placeholder.\"\n\nShe made me smile. \"That's awesome, Leah. I love you so very, very much.\"\n\n\"I know,\" she said in her delightfully feminine attempt to mimic the Han Solo-like line.\n\n<hr>\n\nLeah and I flew out for hundred-dollar hamburgers a number of times, exercising her pilot privileges while I was along as a simple passenger.\n\nOne fun-fly was to the Reiter's ranch. It was the first time we'd all gotten together since the big day, and we landed just before six o'clock.",
        "\"Oh my gosh! Show me! Show me!\" Peggy said excitedly as Leah stepped out of the plane.\n\nLeah displayed the ring I'd spent weeks agonizing over the month before.\n\n\"Oh, Leah, it's so beautiful!\" Peggy exclaimed. \"Jeez, Lance! You big galoot! Congratulations, you two!\"\n\n\"Whoa, Peggy! Be nice to my fianc\u00e9!\" Leah laughed.\n\n\"She is being nice! I'm a ginormous galoot!\" I countered.\n\nEric gave me double fist-bumps and a sturdy handshake.\n\n\"Good flight?\" he asked me as we loaded into their truck.\n\n\"Of course it was. I haven't acted as PIC when we're in the air together since she earned her license,\" I chuckled. \"It's been fun to just sit back and relax and enjoy the ride.\"\n\n\"Right? I thought the exact same thing after Peggy earned hers. Just so you know, I was overjoyed to hear the news, man! Tell us everything!\"\n\nAs we drove to the house, Leah related the manner in which I proposed to her.\n\nPeggy said, \"You're such a romantic!\"\n\nI thought about arguing with her for a few seconds, but decided she was right.\n\nAfter we'd taken our bags into our room, we joined the Reiters in their den.\n\n\"Been meaning to ask,\" Eric began. \"How's things at work?\"\n\n\"Haven't been there in a week. I'm on final leave.\"\n\nPeggy coughed, and Eric simply stared at me, mouth agape.\n\n\"What on Earth did you do?\" he asked me.\n\n\"Monday morning two weeks ago, I turned in my resignation.\"\n\nPeggy and Eric both looked over at Leah. I suppose they were expecting the information to be news to her. It wasn't. Leah and I had discussed it at length.\n\n\"Why?\" Eric asked.\n\n\"Does it matter?\" I asked.\n\n\"No, not really. Just curious.\"\n\n\"I'm drawing a paycheck and not getting anywhere. I notified Signore Reggio of my resignation, and he basically told me there was no reason to wait. He told me to write my own press release.\"\n\n\"What a prick!\" Peggy said.\n\nEric looked at Peggy with wide eyes, and all Leah and I did was laugh out loud.\n\n\"You need to be able to say it in Italian,\" I suggested. \"So, yeah, I wrote up a blurb earlier this week. It'll be made public after the closing bell next Friday. I wish I could tell the folks in Oklahoma before then so they don't read it in the papers, but you know how the FTC feels about insider information. I've called an all-hands meeting the following Monday morning at the Oklahoma City campus with a very vague agenda.\"\n\nEric and Peggy were then major stockholders with insider information, but I trusted their sense to not get any of us in trouble by using it.\n\n\"You think that's made everyone nervous when that showed up on their calendars?\" Eric asked.\n\n\"Yeah. Can't be helped.\"\n\nPeggy excused herself for a few minutes then came back with an incredibly nice bottle of white wine and four glasses.\n\n\"Okay, you two. Out with it all. What are your plans?\" Peggy asked after she served us all a glass.\n\n\"Oh, you know. We just want to enjoy the weekend,\" Leah answered, \"And some fine wine.\" She grinned cheekily.\n\n\"Stop it, woman. You know what I'm talking about. Wedding plans,\" she argued.\n\n\"We haven't made very many yet, other than we plan to have it at Lance's place in Edmond,\" Leah answered.\n\n\"Know when?\"\n\n\"We're thinking December. A winter wedding.\"\n\n\"Christmas lights and everything? That'll be so beautiful,\" Peggy sighed dreamily.\n\n\"Eric, I would like you to be my Best Man,\" I said.\n\n\"It'd be my honor, my friend. Count on me.\"\n\nLeah looked at me questioningly. I encouraged her with a little nod.\n\n\"Peggy, my foster sister is going to be my matron of honor, and I'd love it if you would stand with me, too.\"\n\n\"Oh! Of course, Leah!\" Peggy beamed, and rose to give Leah a hug.\n\nAfter chatting over details, and opening another bottle of wine, Eric asked, \"So what are you going to do now that you're not working?\"\n\n\"Oh, believe me. I'm still working. Leah is, too.\"\n\n\"On what?\" Eric asked me.\n\nI deferred to Leah, because it was her idea, and it was a damned interesting one.\n\nShe cleared her throat before she spoke.\n\n\"Lance and I have something we'd like to run by you.\"\n\nShe gave a quick overview.\n\n\"That's no little idea,\" Eric said. \"But . . . what sparked it?\"\n\nShe spent an hour outlining most of the details.\n\n\"Yeah,\" he said after a few moments of silent evaluation.\n\n\"Yeah?\" I asked.\n\n\"Peg?\" Eric asked his wife.\n\n\"You've already got the college on board?\" she asked.\n\n\"Not officially. But we've had lunch with the president a couple of times, and I doubt he's going to turn down a grant that big. It'll allow them to develop a full four-year degree program. Bachelor of Aviation Sciences.\"\n\n\"He told me that if I'm serious about it all, they'll start setting up an ad hoc committee to spearhead the development of the program, do the leg work, and start working with the county to acquire some of the land adjacent to the east side of McKinney airport to build a hangar facility for the planes and maintenance,\" Leah added.\n\n\"That's so exciting!\" Peggy smiled. \"Wow. And they're going to name it what, again?\" Peggy teased her husband.\n\n\"The Marlin School of Aviation Sciences,\" Eric pouted humorously. \"How come he gets his name on a building and I don't?\" he huffed at Peggy with his arms crossed. \"Not fair,\" he grumbled.\n\n\"Well, if you want to plunk down some moolah, they might consider naming one of the hangars 'Eric',\" Leah grinned.\n\n\"That's really going to open up a lot of opportunities for underprivileged kids,\" Eric's mood returned. \"Peggy and I will talk about it first, but we might consider kicking in to the scholarship fund.\"\n\n\"That's exactly what we hoped you might consider,\" I said, raising my glass for another toast. \"To the future Reiter Scholarship!\"\n\n\"And to the future Doctor and Mrs. Marlin!\" Peggy raised hers as well, and we all clinked crystal.\n\n<hr>\n\nEpilogue\n\n\"Gosh, Leah! I still can't believe how gorgeous this all looks!\" Peggy beamed, taking in the surroundings as the band played.\n\n\"Thanks. It really was like a dream working with the designer on all of it,\" Leah grinned.\n\nWe said our vows in front of our seventy or eighty guests the hour before. The entire outdoor space was lit with white crystal-looking LED string-lights. Even the ice sculptures had lighting within and around them. Despite the fact that it was a chilly forty-seven degrees that December evening, the infrared propane-fired heaters distributed about the area kept everyone comfortably warm.\n\nMira Echols (Leah's foster sister) and Peggy looked remarkable in their cabernet colored dresses. Leah looked like a cover model in her figure-fitting lace adorned knee-length dress. She had teased me when I tuned into a show on TV about bridezillas that wanted to spend a fortune on their wedding dresses. Leah hated the whole concept, and found what suited her and probably cost less than a quarter the cost of the cheapest things we saw on TV, plus she looked far better in hers than those self-entitled TV brats did in theirs.\n\n\"So where's the honeymoon?\" Peggy asked.\n\n\"A jet will be waiting at Will Rogers tomorrow morning, all fueled up for Grand Cayman,\" Leah sighed wistfully with her hands clasped at her chest.\n\nI smiled because I knew she was sorely looking forward to it. Work had been extremely stressful on her the month before because a plane went down on the runway. It'd struck what the investigators think was a turkey vulture, causing the right wing to stall, and the airplane to cartwheel into the grass. The single pilot aboard was severely injured, but miraculously survived.\n\nSince Leah was on duty, she'd observed the entire incident, and became a subject to the investigation. Her manager assured her it was all pro forma, but that didn't relieve the worry she felt, nor the sense of personal responsibility she foisted onto her own shoulders. I remember the day she came home from the airport that day ready to receive her in my arms to offer whatever comfort I could.\n\nShe sorely needed the time away, to sit back and not worry about anything at all. I had no intentions of doing anything other than making sure she relaxed and enjoyed our alone time together.\n\nLeah slept a good chunk of the flight the next morning. She was more exhausted than I figured, though we did stay up until almost 1:00am to continue mingling with our guests.\n\nThe remainder of the week, Leah spanked the crap out of me in a round of golf, we had to get rescued by a powerboat when our kayak got too far away from land with winds and the receding tide making it impossible to paddle back. Leah was woefully embarrassed, I thought the whole thing was funny.\n\nWe fished. We sailed. We parasailed. We skied. We jet skied. We surfed (or at least tried). She spanked me again on another golf course. We danced. We wined and dined. We came close to going skydiving, but I chickened out. We chartered a boat to take us to Stingray City. We laughed a lot, and cried once or twice as we shared more of our skeleton secrets with each other.\n\nWe talked about the college's agreement to formalize the program Leah pitched.\n\nWe made love. We gave each other guidance to offer pleasure to each other. I had no idea that one of Leah's most intense pleasure zones (other than the obvious ones, that is) is the skin directly under and behind her ears and her hairline there. She told me that the first time I softly touched her there, which was the first time we kissed, the sensation she felt almost made her pass out in the deli parking lot. I made sure to file that away. No way would I want to desensitize such spots by overusing them, but it is very satisfying to me how her skin erupts in half a second into goose-pimples when I nibble her there. She found spots on me that I didn't even know I had.\n\nWe are in love. We are husband, wife, and mates. We are partners. Powers above willing, we are forever.\n\n<hr>\n\nThanks for reading! We love comments as well as constructive criticisms, and feedback. Your \"favorites\" and stars have continued to encourage us to write together."
    ],
    "authorname": "WillDevo",
    "tags": [
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-future-is-in-the-air-ch-04"
}