{
    "title": "For Her Too",
    "pages": [
        "Author's note:\n\nThis is a sequel of . Read that first for backstory about Melissa and her boyfriend.\n\nThe story concludes in \n\n~~~~\n\nMelissa tugged at her clothes. \"Look, can't we just get naked again? This shirt itches. And these pants are too tight.\" \n\n\"I'm not comfortable either,\" I said, \"but your friend will be here soon. We can put up with it for one evening.\" Then I added, \"And then I get to undress you. I hardly ever get to do that anymore. Taking off your clothes always feels like Christmas.\"\n\nMelissa smiled and shook her head, then went back to tidying up her living room. I turned back to preparing dinner before her best friend arrived.\n\nHearing Melissa complain about wearing clothes was such a remarkable change from the shy, reluctant girl I'd met only three months before. When we first met, I discovered a girl inhibited by years of shame, guilt and fear about sex and men instilled by her extremely strict upbringing. Even at twenty-four, she had barely dated anyone, and had only had sex three times with the same inexperienced guy. \n\nAfter our weekend of nude camping and sexual adventure, she became a changed woman. Melissa still felt some shame when we were together, but the fear was gone and she was rapidly releasing her pent up desires and curiosity about sex. Such a beautiful transformation to witness. I admired her courage and loved that I was the target of Melissa's blossoming sexual freedom.\n\nSurprisingly, the nudity helped. It was new to us both, but whether she was at my place or hers, she insisted we shuck off our clothes the moment we closed the apartment door. Just doing normal things without clothes felt great, and somehow it helped us to be more open with each other. It was more difficult to keep secrets when all your intimate bits are on full display. We were so used to being naked that it wasn't sexual. It was just freeing.\n\nRegardless, I still caught myself staring at her beauty. Melissa had modest boobs with an unusually narrow waist that flared out to womanly hips and an ass that was broad and toned. I could look at her all day and never grow tired.\n\n~~~~\n\nMelissa had invited her best friend Susan for dinner as a thank you, of sorts. I knew Susan a little through one of my close friends, and it was her who suggested Melissa and I should meet.\n\n\"You did actually talk to her before, right?\" asked Melissa as she fussed, straightening up her apartment. \n\nI was at her stove, cooking. I called back, \"Only a few times. It's my friend Doug who really knows her. She was there many times when we went out drinking..\"\n\n\"Did you ever ask her out?\"\n\n\"C'mon, she would have told you that. She's your best friend. No, I never got to know her that well. I thought she was already attached.\"\n\n\"Oh, she's constantly attached. Then unattached. And attached again. She never keeps a guy for long.\"\n\n\"But she's gorgeous,\" I said. And she was. Susan was a classic Nordic beauty: tall with elegant features and prominent cheekbones, light blonde hair to her shoulders, a tight bum, and big boobs. To most guys she was a walking wet dream.\n\n\"You know,\" said Melissa, \"you're not supposed to tell your girlfriend that another woman is gorgeous.\"\n\n\"Oh, right. Sorry. What I meant to say was that I could see how some guys might find her attractive, but she's a pestilent old hag compared to the radiant, heart stopping beauty of my lovely, funny and brilliant Melissa.\"\n\nA couch cushion sailed from the living room and hit me in the back of the head.\n\n\"Hey!\" I exclaimed. \"No disturbing the chef or dinner will be ruined.\" I tossed the cushion back to Melissa.\n\n\"Since it's you cooking, dinner is probably already ruined.\"\n\n\"Oh, ouch. C'mon, you have to admit I do okay for a guy. Of course, I don't have your genetic advantage.\"\n\nMelissa looked puzzled. \"What?\"\n\n\"You know... the cooking and cleaning genes that women possess. No guy can ever compete with that.\"\n\nMelissa opened her mouth to say something but then looked at the can of furniture polish in her hand and at her homemade Hors d'oeuvres laid out on the coffee table.\n\nWe were still laughing and calling each other mean names when the door buzzer sounded.\n\nMelissa let Susan in and she kissed her on the cheek. When I extended my hand to shake hers, Susan pulled me close and kissed my cheek too.\n\n\"So, you're the guy who saved Melissa.\"\n\n\"Nice to see you again, Susan,\" I said. \"Save her? I prefer to think that I'll be the ruin of her. Bet her parents think that already.\"\n\nSusan smiled. \"They would if they knew what you two have been doing.\"\n\nI went back to cooking and let the girls talk. When the food was ready, Susan helped us serve. We opened some cheap wine, then I proposed a toast. \n\n\"To Susan. Who insisted Melissa and I meet and is therefore the cause of her imminent ruin.\" The girls chuckled then we clinked glasses. \n\nFrom the few brief times I had talked to Susan before, I knew she was brash and straightforward, so I was a little anxious. I needed to make a good impression since the pair had been best friends since high school. Susan studying me intensely at the start of dinner didn't help, but soon she was joking and telling embarrassing stories about Melissa as if all of us were old friends.\n\nSusan said, \"I never knew that getting your brains fucked out would have changed you so much, Melissa.\" She eyed me for a reaction.\n\nMelissa gasped, \"Oh my God, Susan! You're so crude.\"\n\n\"Well, it's true,\" said Susan. \"You've changed so much since hooking up with this guy. I've tried so many times to draw you out of your shell. Guess that's what's made us such good friends, huh? Guy troubles.\"\n\nI poured us all more wine and said, \"Okay, Susan, that's what I don't get. You're beautiful and you seem to have your act together, yet Melissa says you have trouble finding good guys. But everyone must be tripping over themselves for you.\"\n\nSusan paused, then said, \"Yeah, that's the problem.\"\n\n\"Uh...\"\n\nMelissa said, \"What she means is, Susan attracts every asshole in the universe. What is it you call your theory?\"\n\n\"The Too Fucking Pretty Syndrome,\" said Susan.\n\n\"Yeah, that,\" said Melissa. \"Arrogant assholes are always trying to get in her pants. And nice guys think they don't stand a chance so they stay away.\"\n\nSusan said, \"Guys have been hitting on me since I was like, eight.\"\n\n\"Well, that's disgusting,\" I said.\n\n\"Welcome to my world. Everywhere its cat-calls on the street and macho dipshits who want to claim me as their trophy.\"\n\nI paused. \"You know... to be honest, I think I'm guilty of that too. I never even considered approaching you when we hung out at the bars with Doug.\"\n\n\"See? Now if you had, maybe it'd be me telling Melissa how happy I am, instead of the other way around.\"\n\nI didn't know how to process that bizarre comment, so I said \"But you can approach guys too. And online it's easy.\"\n\nSusan said, \"Oh, it is. But guys see my pictures and think they're fake, or I'm trolling, or a hooker. But I shouldn't complain. I have found a few good guys.\"\n\nI said, \"Well, that's great.\"\n\n\"One guy moved away, another got tired of macho guys challenging him.\"\n\n\"Challenging him?\"\n\n\"The 'hey baby, drop that loser and come get with a real man' thing. And when the assholes didn't take 'go fuck yourself' for an answer, there was always a fistfight. He got tired of it. So did another guy I saw for a while.\"\n\n\"Well,\" I said. \"Then I guess you're screwed. Either you make yourself ugly, which would take an awful lot of work, or give up and become a nun. I hear there's a big demand for nuns right now.\"\n\nSusan scoffed and Melissa threw a dinner roll at me.\n\nMelissa laughed, \"You're such an asshole.\"\n\nSusan said, \"Are all this guy's jokes this same 'dad joke' level of quality?\"\n\n\"Oh, mostly,\" said Melissa. \"Imagine how bad the jokes would be if he ever did become a dad? I'd have to leave him.\"\n\nSusan cast a catty look. \"From what you told me, you almost did make him a dad.\"\n\nMelissa blushed and lowered her eyes. \"Yeah... that was bad. I'm on the pill now.\"\n\nI interrupted. \"Hold on there. Just how much did Melissa tell you about our camping trip?\"\n\n\"Everything,\" said Susan.\n\n\"Everything!\" said Melissa.\n\n\"Melissa!\" I said, \"what the hell?\"\n\n\"What? She's my best friend. We tell each other everything.\"\n\n\"Well, shit. Now I feel completely exposed.\"\n\n\"Oh yeah, speaking of that,\" said Susan, \"You know, Melissa, at school you never even got naked in the locker room. Always covered up with a towel. Then you spend a whole weekend naked with this guy? Did he hypnotize you or something?\"\n\nI leaned back and rested my hands behind my head. \"It's just my charisma and masculine charm.\"\n\n\"Oh, barf,\" said Susan, wrinkling her nose.\n\nMelissa said, \"You should try it! It was really weird at first but then you feel, well... free. Not a care in the world.\"\n\nSusan eyed me. \"Not with some guy's pecker waggling at me all the time.\"\n\n\"But it's not like that,\" said Melissa. \"Well, okay, maybe at first. But then it becomes normal. Nudity is really only a sexual thing in North America, you know. In Europe they have public saunas where it's normal for strangers to be naked together. Go in with a bathing suit and they'll tell you to leave. And topless beaches everywhere and nude sunbathing in Germany of all places and\u2014\"\n\nSusan interrupted. \"Sounds like you've been reading nudist propaganda or something.\"\n\n\"I don't know,\" Melissa said. \"I just know that we like it.\"\n\n\"We? You mean it wasn't just that weekend? You're still prancing around naked even now?\"\n\nMelissa blushed again. \"Well... yeah. It's just normal for us now. I guess we've kinda become nudists when we're alone.\"\n\n\"So if I wasn't here...\" said Susan.\n\nMelissa shrugged, \"...we'd be naked right now.\"\n\nSusan sat back in her chair and exhaled. \"Holy shit. You crazy kids.\"\n\nThe wine flowed as the conversation progressed. Susan was clearly intrigued, so I said, \"It's not a big deal. Why don't you just try it?\"\n\nShe rolled her eyes. \"Yeah, I bet you'd like that.\"\n\n\"Not now,\" I said. \"No, I mean try going without clothes at home sometime. Like Melissa said, it becomes normal pretty quickly. Even my 'pecker' is used to it.\" I smiled.\n\nIf we hadn't all been a little drunk, we wouldn't have been having such a conversation. But we were all feeling a little loose.\n\nWhen dinner was cleaned up, Melissa and I joined Susan on the couch with a fresh bottle of wine. We chatted and joked, getting to know each other, even getting into arguments about politics and religion. Like Melissa, Susan was funny and sharp on current events. She made some well-considered arguments during the conversations, always with a wry sense of humor. I liked her immediately.\n\nSusan took a gulp of wine then said, \"So how would we do this?\"\n\n\"Do what?\" said Melissa.\n\n\"Get naked. You say it's so great. I want to try.\"\n\n\"What, now? You should just do it at home.\"\n\n\"But that's not the same, is it? I'm naked at home every time I take shower. Doing it around other people is the thing. And to you two it's normal, so... why not?\"\n\nI was shocked, and Melissa, looking at me, seemed equally surprised.\n\n\"Susan, are you really serious?\" asked Melissa.\n\nSusan said, \"We always share everything, right? And where else could I try such a thing with people I know and can trust? So, how do we do this?\"\n\nI said, \"Uh, well, I don't know. If we were to do it, I guess we could turn off the lights and see if you were comfortable.\"\n\n\"Okay.\"\n\nMelissa looked at me, unsure. \"Susan, it's not a big deal for us. But I don't want you to feel uncomfortable.\"\n\nSusan said, \"Oh relax. I'm a big girl. And like you said, it's only skin. Just turn off the lights.\"\n\nSo we turned off every light in the apartment. Only the dim nighttime glow of the city through the windows lit the room. Melissa and I undressed. It felt so good to get everything off. I took the clothes into her bedroom.\n\nWhen I returned, Melissa hugged me, her naked body warm against mine. \n\n\"Think she'll be okay?\" she asked.\n\n\"Who's speaking, please?\" I joked, groping Melissa's face like a blind man. \"I'm more concerned I won't get to see any of her at all. It's so dark in here.\"\n\nWe looked over and Susan was a silhouette at the windows, looking out. Then she took a breath and stripped, putting her clothes on a chair. She went back to the window, her slender body an enticing outline, and stood toying with a gold chain she had kept around her neck.\n\nMelissa and I sat on the couch and sipped our drinks. After a few minutes, Susan came over. There was barely enough light to see even shadows. I expected Susan to sit in one of the chairs on the other side of the coffee table, but she plopped down right beside me on the couch.\n\n\"So,\" she said. \"How's that pecker of yours?\"\n\nWe laughed, then I did my best \"Joey from Friends\" impression and said \"Hey, how YOU doin'?\"\n\n\"Quite a way to spend an evening,\" Susan said. \"Sitting here naked beside my best friend's boyfriend. And Melissa over there... a few months ago she was certain she'd be dragged to hell if she even looked at a guy. Now she's sitting here, tits out, sipping wine like it's nothing.\"\n\nMelissa said, \"I've been pushing my comfort zone, like you always said I should. Anyway, now that's we're all, uh, comfortable, we do have a dessert prepared if you're interested.\"\n\n\"Oh yeah! The best part of every meal.\" said Susan. \"What've you got?\"\n\n\"Chocolate fondue,\" answered Melissa.\n\n\"You two planned all of this, didn't you? What's next, a game of naked Twister?\"\n\nOnce we finished laughing at that, Melissa got the little fondue pot and tray of fruit from the kitchen, setting it on the coffee table. She lit the candle under the pot where it cast enough light for me to see Susan more clearly. Her breasts were beautiful: large for her slender body but perfectly shaped.\n\n\"I've never had this,\" said Susan. \"How do we do this?\"\n\n\"It's easy,\" said Melissa. \"Take a fork, spear some fruit from the tray, dip it in the chocolate. We have pineapple, orange slices, strawberries, grapes and gum drops.\"\n\n\"Gum drops are fruit?\"\n\n\"They are when you've run out of fruit.\"\n\n\"Here you go,\" I said, handing Susan one of the long fondue forks. \"Careful where you aim that thing.\"\n\n\"Same to you, bub. I've got bigger targets than you.\" She glanced towards her boobs.\n\nWe started eating. I turned to Melissa and fed her a chocolate covered strawberry. She fed me a grape in return. Susan dipped some pineapple into chocolate and moved it towards her mouth. I watched as a glob of chocolate dripped onto one breast.\n\nShe saw me looking at her boob. I glanced up at her, then licked my lips like a puppy, giving her a pleading, hopeful look.\n\n\"Oh for fuck's sake,\" she laughed. \"Don't get any ideas. Got a napkin?\"\n\nMelissa had been watching. Suddenly, she leaned across me and licked the chocolate from her friend's boob.\n\nSusan recoiled, covering her breast. \"What the hell, Melissa?\"\n\nMelissa giggled. \"Sorry, we're all out of napkins.\"\n\n\"Oh my God. You really are a changed woman, Melissa.\"\n\nThen Susan noticed I was looking at her expectantly.\n\n\"What?\" she said.\n\n\"I get to do the next one.\"\n\nSusan leaned forward and speared a strawberry. She twirled it in the chocolate then taking very deliberate aim, held it high above my lap and let a dollop of warm chocolate fall right onto the tip of my dick.\n\nWe sat there for a moment, all of us looking down at my chocolate covered dick.\n\nThen Melissa looked at Susan and said, \"Flip a coin?\"\n\nBoth girls thought that was absolutely hilarious. \n\n\"See if I ever get naked with you two again,\" I said. I started to get up to look for a napkin but Susan pulled me back down, grinning wickedly. She lowered her head then licked the chocolate right off the tip of my penis.\n\n\"Susan!\" exclaimed Melissa.\n\nSusan sat back up and said, \"A good guest always cleans up her own messes.\" She looked at me to gauge my reaction.\n\nIt erupted into a war. Melissa stuck two fingers into the chocolate and reached across me to smear it on her friend's boobs. Susan did the same to Melissa, and when she leaned across me, her large chocolate-covered tit slid across my chest and coated me. So I pulled her head to my chest and rubbed her face against it. Susan then sat up, grabbed my head with both hands and pulled me right into her soft messy boobs, rubbing my face all around. \n\nWhen it was over, the three of us had chocolate all over our faces and chests. We sat back laughing like children.\n\nMelissa came to her senses first. \"Okay, everybody stand up! I don't want to get any on the couch.\"\n\nWe stood up and Melissa turned on a table lamp. While she leaned over to examine the couch, Susan and I stood facing each other. It was the first time we were in full light since taking off our clothes. We stood there, inspecting each other's bodies. Even smeared with chocolate, Susan was stunning and judging from the trimmed patch of light-colored fuzz between her legs, a natural blonde. Susan also checked me out in detail, wearing a slightly hungry expression.\n\n\"Well, we're lucky,\" said Melissa. \"None got on the couch.\" She stood up and Susan and I looked away from each other, feeling guilty.\n\n\"A food fight,\" said Melissa. \"Totally childish, you guys\"\n\n\"You started it,\" said Susan. \"But it was fun! I haven't had a food fight in years. And never naked.\"\n\n\"Yes, I can cross that off my bucket list,\" I said.\n\n\"You had 'naked chocolate food fight with two girls' on your bucket list?\" asked Susan.\n\n\"Well, yeah. Every guy does.\"\n\nSusan shook her head and shared a look with Melissa. \"Men,\" they said in unison, shaking their heads.\n\n\"Okay,\" said Melissa. \"Let's get cleaned up.\" When she saw Susan and I glance at each other's chocolate covered bodies, she added \"and no, no one is using their tongue.\" \n\n\"Awww,\" I said.\n\n\"Awww,\" said Susan.\n\n\"Come on, Susan. We'll show you the shower.\"\n\n\"Can you turn that light off?\" Susan asked.\n\n\"Oh, yes. Sorry.\" Melissa switched off the table lamp. Our night vision ruined, each of us were again only shadows.\n\n\"Thanks,\" said Susan. \"I'm still getting used to this nudity thing. It does help to keep the lights off.\"\n\n\"Well,\" I said, \"we're not going to find the bathroom without some light.\" I lit a candle and held in front of me as I led the way to Melissa's bathroom. \n\n~~~~\n\nMelissa started the shower while I set the candle on the counter. While Melissa adjusted the water, I noticed Susan looking at me again, a wistful expression on her face. She was fingering her gold chain.\n\nMelissa said \"Okay, Susan. Go on in.\"\n\nSusan got a mischievous look. \"Let's shower together.\"\n\n\"Are you serious?\"\n\n\"Come on! We've already seen each other. It'll be quicker.\" Susan grabbed my hand and tugged me into the shower behind her. \n\n\"Hang on,\" Melissa said from the other side of the shower curtain, \"I have to get towels.\"\n\nSusan stood under the shower, water streaming down her lovely body in the dim candle light. She pulled me close and looked up at me with a serious expression.\n\n\"Hi,\" she said. It was almost a whisper.\n\n\"Uh, hi, Susan,\" I said, unsure of what she was doing.\n\nMelissa stepped in behind us. \n\n\"Come get wet you two,\" said Susan.\n\nThree people in the apartment's little bathtub shower was a tight fit. It took some awkward maneuvering for each of us to take turns under the water. I was standing under the spray, soaping Melissa's firm breasts as Susan soaped her back. I reached lower and ran my soapy fingers between Melissa's legs. She squirmed a little, and then forced my hand away, shaking her head as she glanced back towards Susan. ",
        "\"We don't want her to feel uncomfortable,\" she whispered.\n\nI spun us around until Melissa was under the spray, my back to Susan. Melissa soaped up my chest while Susan began cleaning my back. Melissa briefly ran her hand over my dick and balls, trying not to excite me. Behind, Susan pressed her breasts against my back and started kneading my ass.\n\n\"No fair, guys,\" said Susan. \"No one is cleaning me.\"\n\nSo I traded places with Susan, putting her between Melissa and me. I looked towards Melissa to see if it was okay, but she was busy washing best friend's back. Susan grabbed my hands and placed them right on her full breasts. She gave a deep sigh then just stood there as I slid my soapy hands all over them, feeling their firmness, their weight, her warmth.\n\nSusan eyes never once left mine.\n\nBehind her, Melissa said, \"Okay, I'm clean. Susan, I'll get out so you can rinse off. She stepped out drew the curtain. Susan backed herself under the water, pulling me with her. Suddenly she reached up and pulled me into a deep kiss. Surprised, I hugged her but then pulled back. She looked at me, her eyes searching mine.\n\nI glanced towards the closed shower curtain and whispered, \"Susan, what are you doing?\"\n\nShe took a deep breath and said \"I... I don't know.\" She hugged me and rested her head against my chest. Then she released me, rinsed off quickly and stepped out. \n\nI was more than half-hard now, so I turned the shower on full cold and willed my dick to relax. When I stepped out, both girls were almost dry. Melissa handed me a towel. She looked down and noticed that I was still a little excited. Again, she shook her head in warning, indicating Susan behind her who was bending over toweling off her hair.\n\n~~~~\n\nBack in the living room, we sat and drank more wine to the light of a candle. Instead of sitting beside me on the couch, this time Susan chose to sit in the chair opposite us. Was she upset by our experience in the shower? I couldn't tell.\n\n\"So this is what two do when you're together,\" said Susan.\n\nMelissa said, \"Well, usually by this time we're in bed.\" Then she covered her mouth when she realized what she had said. \n\n\"Oops. Sorry.\"\n\nSusan shook her head. \"It's so amazing to hear you talk like that, Melissa. It's amazing you're actually... you know, boinking.\"\n\nMelissa snorted. \"Boinking?\"\n\n\"Well, you didn't like it when I said you were fucking each other's brains out.\"\n\nMelissa shook her head in disapproval.\n\n\"See? I'll stick to 'boinking'. Anyway, I'm happy for you. You've held yourself back way too long.\"\n\n\"Thanks, Susan. I'm getting used to it. It's all been pretty wonderful.\"\n\n\"So you've been telling me. In great detail.\"\n\nI said, \"Melissa, you don't actually have to tell Susan everything, you know. I'd like to think we maybe have a few secrets.\"\n\n\"Oh we do,\" said Melissa. \"I still haven't told her you started to... oh, never mind.\"\n\nSusan said, \"Started to...?\"\n\nMelissa looked down sheepishly and said, \"Uh, you know. Use his mouth. Down there.\"\n\n\"Holy shit, Melissa,\" I said. \"Some things you can keep private, you know.\"\n\nSusan said, \"Well, let's see. You run around naked every chance you get, including out in the woods. She likes giving you blowjobs because of how cute you look when you come. Doggy style is your favorite position, girl on top is hers, but she won't do anal. And now you're eating her out. Did I miss anything?\"\n\nMelissa's mouth hung open, mortified.\n\n\"You like it?\" Susan asked.\n\n\"What?\"\n\n\"When he uses his mouth. Down there.\"\n\n\"Uh, well. It's actually pretty fantastic. Almost better than sex. He makes me come every time.\"\n\nSusan looked surprised. \"Bullshit. Not every time.\"\n\n\"Well, yes. So far.\"\n\nSusan sighed. \"Wow. No guy has ever made me come.\"\n\nMelissa exclaimed \"But you've been with lots of guys.\"\n\nSusan wrinkled her nose. \"Not 'lots'. But most have been too interested in getting themselves off to bother much with me.\"\n\n\"But fucking, er, I mean 'boinking'...\"\n\n\"That never does it for me.\"\n\n\"Oh it does for me.\" said Melissa. \"Not every time, of course, but often enough.\"\n\n\"But him eating you out does every time? So come on, tell me. What does he do, exactly? Guys have done that to me and it's just been kind of... meh.\"\n\n\"Uh,\" I said, \"ladies, come on now...\"\n\nIgnoring me, Melissa said, \"Well, I don't really know. It's not like I take notes. He just... does things. Lots of things. And then I'm gone.\"\n\nSusan turned to me, \"So? What's the secret? How can you make her come every time?\"\n\nI sighed. \"Clearly there aren't going to be any secrets with you two. So, okay. How can I explain something like that? I guess I just try to figure out what she likes best. Then I tease a little... you know, get her close, make her want it, take my time.\"\n\n\"And you like doing it?\"\n\n\"Oh yeah.\" I looked at Melissa. \"I could come just watching Melissa when she gets excited.\"\n\nMelissa kissed me on the cheek, eyes gleaming in the candlelight.\n\nMelissa thought for a moment. She leaned against me then whispered, \"We could show her, you know.\"\n\n\"Huh?\"\n\n\"Show her. You can't tell her what you do. So maybe can she just... see for herself?\"\n\n\"Okay, no more wine for you, Melissa.\"\n\nMelissa sat back. \"What? She's already seen us naked, and we've already done some crazy things tonight. She's my best friend.\" She turned to Susan, \"We could show you, then maybe you could teach the next guy you're with.\"\n\nSusan sat, mouth half open. But clearly she was interested.\n\n\"Susan?\" I asked. \"You okay?\"\n\nShe looked at me and blinked. \"Uh, sure. So, uh, you mean make a video or something?\"\n\nI looked at Melissa. She was looking at me with excited eyes. \n\n\"No,\" she said. \"Who would hold the camera? I mean, he could just do it with me and you could, uh, you know... watch?\"\n\n\"Melissa,\" I said, \"I think you might just want to show off for your friend. Or you've discovered a voyeuristic side. Let's not do anything you'll regret later.\"\n\n\"It's just us here,\" she said. She pulled me close and whispered in my ear, \"and I'm so horny I can't stand it. So either we kick Susan out right now, or in three seconds she's going to watch me fuck you right on this couch.\"\n\nI whispered back, \"But that's not what you want her to see, is it?\" Melissa just looked at me, breathing with excitement.\n\nI sighed, then stood and pulled Melissa to her feet. \"Susan, we're going to the bedroom. I think Melissa wants you to follow.\"\n\n\"And you?\" said Susan. \"Would you be okay with that?\"\n\n\"I don't even know. It's not like we've ever done anything even remotely like this. But I'll do anything for Melissa if it makes her happy, and I guess it is just us after all. Guess we'll just have to see.\"\n\n~~~~\n\nI led Melissa down the dark hallway into her bedroom, leaving the door wide. We lit the candles we always kept in her room and stripped the covers off the bed. I hugged her to me and kissed her deeply. She was breathing heavily and looking at me with longing. Her excitement was starting to get me hard.\n\nMelissa lay on the bed and spread her knees. I got on top of her and we embraced and kissed. When I reached down, I discovered she was already completely wet. She ran her hand lovingly over my cheek then said, \"Do it. Please. Eat me. Make me come.\"\n\nI slid down between her legs. Melissa's delightful little pussy was glistening in the candlelight, eager to accept anything I want to do to her.\n\nThen I felt the bed shift and beautiful, naked blonde-headed Susan was right beside me. I was so enraptured with Melissa I'd forgotten she was still with us. Susan looked up at Melissa, and then looked at me. \n\nHer tongue wet her lips. \"Show me,\" she whispered.\n\nI reached out with two fingers and stroked down along the hood of Melissa's clit. Melissa moaned and pushed her hips up off the bed. I stroked her with my thumb then lightly licked her clit with just the tip of my tongue. As always, Melissa responded so beautifully, gasping, writhing, and trying to push my face into her as I teased and licked and massaged. I kept at her for several minutes, playing, doing things I knew she loved, experimenting with other things to see how she would react, bringing her to the edge and trying to keep her there without going over.\n\nSusan had her head propped on one elbow, watching me and occasionally looking up at Melissa squirming and panting. When I paused to keep her from going over, Melissa looked down and reached for Susan.\n\n\"It's so good,\" she breathed, squeezing her friend's hand. \n\nI went back to her. This time I inserted two fingers into her little opening and started finger fucking her as I gently sucked and tongued her clit. When I raked my thumb up along her asshole, Melissa arched her back as her tunnel started squeezing my fingers rhythmically in orgasm.\n\n\"Huuuuh,\" she groaned, mashing my head to her. She never let go of her friend's hand while her breath caught, head flung back and body rigid in orgasm. I watched, enraptured, almost coming myself seeing my wonderful girl in such bliss.\n\nWhen Melissa regained her senses, she looked down and saw Susan and me looking back at her. She turned her head and covered her eyes in embarrassment.\n\n\"Oh God,\" she said. \"Don't look at me.\"\n\n\"That was beautiful,\" said Susan, quietly. She squeezed Melissa's hand. \"I've never seen anything like it.\"\n\nAt this point I was hard and in need of relief. I didn't care if her friend was there\u2014I needed to fuck my Melissa.\n\nI slid up on top of her, my dick easily finding her opening by itself, and pushed into her warmth. Melissa wrapped an arm around me, trapped me with her legs and welcomed me. I rutted and pushed as she clung, urging me on, her snug tunnel surrounding and massaging me, further fueling my hunger. I pulled her legs up with my arms, placing her knees against her ears and started fucking her even deeper. There was no thought or reason then, just blind animal need to possess my woman and satisfy my lust.\n\nMelissa gasped, moaned, and pushed her hips up against me, urging me on. We fucked like hungry beasts, so in love, so in lust. Then finally, I pushed into her as deep as I could and with a growl, flooded her with blast after blast. Melissa ground against me and moaned, eagerly accepting all I could give her.\n\nI collapsed onto her and tried to regain my senses. We kissed and hugged, laughing, caressing, staring into each other's eyes.\n\nFinally, I slipped out of her and rolled off onto my back, right onto Melissa and Susan's outstretched arms. The two had held hands the entire time I was fucking Melissa.\n\nI lifted and they pulled their arms out from under me. I glanced over at Susan. She looked happy, and... hungry. It was my turn to feel embarrassed.\n\n\"Sorry,\" I said. \"Letting you see that wasn't part of the deal.\"\n\nSusan said nothing. She just caressed my cheek and pressed her body against mine as she reached an arm across and hugged Melissa and me.\n\nMelissa lifted her head. Exhausted, she asked, \"So, did you see?\"\n\n\"I saw. Boy did I ever see. It's like some porn movie with you guys.\" She paused. \"Actually it's nothing like porn. You're so... loving. In sync. Tender. Except for that last part. I thought he was going to break you in half.\"\n\nThe three of us lay in silence as the candles cast wavering shadows around the room. Susan clung to my side, arm across my chest, head on my shoulder, while absently pushing her hips against my leg. Melissa cuddled against my other side.\n\nSusan started to get up. \"I'll leave you love birds alone now.\"\n\nMelissa reached over to grasp her arm. \"Stay.\"\n\n\"It's okay, Melissa. You guys need your alone time. Besides, if I don't get out of here right now, I'm going to jump your boyfriend.\"\n\nMelissa gave her friend a sympathetic look then pulled my face to hers. She studied my face for a moment then whispered, \"Do it to her.\"\n\n\"What?\" I whispered back. \"Fuck your friend?\"\n\n\"Lick her. She said no guy has ever made her come. You could do it... I know you could. And I know you like her.\"\n\nMelissa seemed serious, but I said, \"That's going way too far.\"\n\n\"Why? She likes you too, you know. A lot. I see it. But it's okay. She's my best friend.\"\n\nI still couldn't tell if Melissa really meant what she was saying. So I decided to test her.\n\nI turned to face Susan. Then I looked down at her pussy, back up to her face and licked my lips, giving her a pleading, hopeful look like a puppy who'd eyed a forbidden meal.\n\nSusan chucked. \"Oh for fuck's sake,\" she laughed. Then, \"No way. You can't be serious.\" She looked past me to Melissa.\n\nMelissa was still holding Susan's arm. \"It's okay,\" she said. \"Let him really show you. Make you come.\"\n\nSusan looked back to me and saw my expression. I wanted to... I really wanted to, especially now that it was clear that Melissa was okay with it.\n\nI stroked Susan's cheek lovingly. She blinked, and then closed her eyes, pushing her face against my hand. After a long pause, she took a breath and lay back on the bed, pushing my head down.\n\n\"Go. Do it. But it won't work.\"\n\nI could not believe what was happening. I slid down and positioned myself between Susan's legs but it felt surreal. I fully expected Susan or Melissa to change their minds at any moment. But Melissa propped herself up to watch, her excitement visible, then nodded encouragement. \n\nSusan was looking down at me too, mouth half-open, eyes filled with anticipation. I decided then I would try to make her come harder than she had ever come in her life.\n\nSusan's pussy was exquisite, a work of art. From her trimmed light blonde patch of fuzz to her shape, so different from Melissa. It was a beautiful sight, and the heady scent of her arousal excited me more. \n\nI started gently with just fingers and the palm of my hand, teasing, massaging, exploring. Susan gave little gasps and moans, her hips rising and falling. \n\nSusan sighed, \"Okay. Okay. That's... nice. Oh.. oh shit. Good. That's... ohmygod, yes do that. That's... hunngh...\" She stroked my hair and tilted her hips to give me better access as her ability to speak faded. \n\nI started exploring and playing with determination, trying different things, trying to get a sense of what she liked best. But everything seemed to drive Susan on. She was gasping and puffing and groaning, trying to mash my face into her. I kept at her, teasing at first, then diving in insistently.\n\nGlancing up, I saw and Melissa right beside her, watching her friend's face and holding her hand while Susan, eyes closed, grimaced and gasped and sighed and moaned.\n\nI had always been able to read Melissa's reactions well, but Susan was unexplored territory. I played and teased, trying things I knew Melissa loved, trying other things just to see Susan's reactions. When I slid two fingers inside her and curled my fingers to massage her g-spot, within minutes Susan surprised me when she froze, lifting her hips. She came with a strangled grunt, her inner walls squeezing rhythmically as she pushed my face hard into her with one hand and gripped Melissa's with the other. Her breathing paused as her head flung back and she writhed and arched.\n\nI held on until Susan let out an explosive breath and her body grew limp. \n\nWhen I extracted my face from between her thighs and looked up, Susan and Melissa were looking at me\u2014Melissa bright-eyed and proud, Susan looking like she had run a marathon. What a rewarding sight. I lay my head on Susan's tummy, staring up as her breathing was back to normal. \n\nThen I slide lower to start on her again. Susan gasped when I licked her from taint to clit then worked her to orgasm twice more in rapid succession. Finally she pushed me away saying, \"Enough. Oh my god, stop. You're going to kill me.\"\n\nI wiped my mouth and slid up between the two girls. \n\nMelissa was beaming. \"That was wonderful,\" she breathed.\n\nSusan was panting, her skin flushed and eyes glassy. One hand toyed absently with a breast. I was rock hard, of course, and Melissa noticed my distress. But when I indicated I wanted to fuck her again, Melissa pushed me towards her friend.\n\n\"Go ahead,\" she whispered. \"She needs that too.\"\n\nI was beyond arguing the merits of what we were doing. I rolled over onto Susan's side. \n\nShe opened her eyes and looked at me quizzically.\n\n\"Hi,\" I said. \"So was that a little better than doing it yourself?\"\n\nSusan said nothing. She just grabbed my head and kissed me hard. I kissed her back, stroking her hair, her face, a boob, and then her steamy pussy. While we kissed, I worked myself halfway on top of her. When Susan opened her legs, I settled between them, kissing and stroking her the entire time.\n\nDespite having come in Melissa not long ago, I was beyond hard. I was hesitant to push into Susan but then I felt Melissa's hand grasp my dick to slide me up and down her best friend's slit then position me at her entrance.\n\nSusan pushed my head away from hers and said, \"Uh hey, you guys? Listen...\" \n\nMelissa whispered in my ear, \"Push.\"\n\nI pushed. \n\n\"Huuuhh...\" Susan arched her back and spread her legs, taking me halfway inside her. I withdrew, then on the next stroke seated myself in her all the way. Susan pushed back on my chest, her mouth open and eyes wide, gurgling incoherently. I pulled out then stroked into her again.\n\n\"Uuuh! God!\" Susan breathed. She looked in my eyes in wide-eyed wonder then wrapped her arms around me. Her eyes narrowed into an needful expression then she lay back and whispered, \"Oh, fuck it. Fuck me. Just... fuck me.\"\n\nSusan was tighter than Melissa, and felt different in many other little ways. Her passage resisted more each time I pushed in, and clung tighter when withdrew. When I buried myself in her all the way and held myself there, Susan squeezed her inner muscles like she never wanted me to withdraw, then pushed her hips back, levering get me deeper into her.\n\nI fucked her urgently. Not hammering away, but insistently, hungrily. I tried to control the animal part of my brain, wanting it to last. That such a beautiful, delightful woman was letting me fuck her was mind-blowing. That she was Melissa's best friend, and I was fucking her with Melissa's permission was beyond incredible.\n\nWe kept at it, hard and soft, gently fornicating then giving into primal desire and rutting like starved beasts. We kissed, we embraced, we looked into each other's eyes. Was Melissa jealous? No. She held Susan's hand throughout, sometimes stroking my cheek or back as I plowed her best friend. I let go of worry and focused completely on Susan's pleasure.\n\nSoon Susan's movements became more desperate. I fucked her steadily, sometimes pulling out completely then pushing back and forth just inside her opening before sliding in deep. Then Susan inhaled a short gasp, wriggled against me hard and froze, clamping onto my dick as she came once more. I rammed into her once, twice, then was consumed by an eye-rolling, ball-draining orgasm, flooding the gorgeous, needful woman with everything I had left.\n\nI stayed on top of Susan, weakened by the intensity of my orgasm, stroking her face and hair, giving her light kisses as we recovered. Then I slid over onto the bed between the girls, exhausted. \n\nMelissa snuggled to my side and kissed my cheek. \"Thank you,\" she whispered. \"She really needed that.\"\n\nWe rested for a while then I needed to get up to get us all water and find the bathroom. When I slid off the bed and got to my feet, I was treated to a memorable sight: my Melissa and her very best friend flat on their backs, legs spread slightly, their pussies both leaking my come.\n\n~~~~\n\nDuring the night I woke when Melissa climbed on top of me. The candles must have burned down\u2014it was completely dark. I was already rock hard. My sly girl had to have been playing with me while I slept. She lined me up with her opening and slid down carefully until she fully impaled herself on my shaft. She felt tighter than usual and was very wet. Melissa let out a heavy moan of satisfaction and started riding me\u2014her favorite position. I reached up to massage her breasts as she used me for her pleasure. They were warm, firm and way, way too large. It wasn't Melissa. It was Susan.",
        "Susan slid her herself up and down, back and forth, milking my shaft, taking her time. I massaged her incredible breasts, resigned to let her do what she needed. In the utter darkness, it was impossible to tell how long we went at it, but near the end I grabbed her waist and rolled Susan onto her back to take her hard. She held me tight, gasping and rutting against me as I fucked her until once again I pumped her full of come. We kissed tenderly until exhaustion overtook me. \n\nI rolled off Susan and lay between the two girls. I held Susan's hand and reached over to rest my other hand on Melissa's sleeping form. In the morning we would need to come to terms with what we had done. But there in the middle of the night, the three of us lay together as friends and lovers and, for that moment at least, we were content.\n\n~~~~\n\nAuthor's note: The story concludes in "
    ],
    "authorname": "SyleusSnow",
    "tags": [
        "unprotected",
        "nudist",
        "nudity",
        "bareback",
        "creampie",
        "passion",
        "ffm",
        "threesomes",
        "oral sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/for-her-too"
}