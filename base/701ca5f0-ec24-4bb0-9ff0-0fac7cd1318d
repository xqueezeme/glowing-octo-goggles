{
    "title": "Three Square Meals Ch. 064",
    "pages": [
        "The vast fleet in the Delta-Draconis system was the largest that John had ever seen. The Tactical Map showed the precisely arrayed formations of the Terran Federation navy, which had smashed the system's Kintark forces in a major fleet engagement, leaving behind a widely dispersed field of debris and wrecked vessels. Squadrons of corvettes and destroyers were patrolling the outskirts of Delta-Draconis, while clusters of cruisers, carriers, and even larger vessels formed neat, precise battle groups in the staging area closer to the centre of the system.\n\nThere were three huge dreadnoughts here, forming the core of each of those task forces. As awe-inspiring as those massive ships were, John's eyes were drawn to the behemoth in the centre of all those vessels. Taking pride of place amongst the terrifying display of military might was Fleet Admiral Buckingham's flagship. He was commanding a colossal fleet carrier, named 'The Retribution of Zeus', and it was the first time John had seen this moving fortress. At nearly four kilometres in length, it was even bigger than the dreadnoughts, and it was breathtaking in its enormity. \n\nCalara highlighted the 'Zeus' in the tactical targeting view, and the mighty ship now rotated as a hologram, floating silently in the middle of the Bridge. John leaned forward in his Command Chair, unable to take his eyes off the titanic spacecraft. He immediately spotted the distinctive shape of spinal mounted singularity drivers standing out from the topdeck, the weapons themselves nearly as large as the Invictus. They reared up over sweeping batteries of Heavy Cannons, Beam Laser arrays, and row upon row of Missile Racks. The Zeus wasn't just armed with conventional weaponry, it was also host to several squadrons of strike craft. He watched as fighter wings launched from the ship, then peeled away to begin their exhaustive patrols of the system.\n\nJohn saw the blinking warning light on his console, alerting him to an incoming call. Rachel accepted it with the click of a button from her Communications Console, and checking the caller ID, she looked up at him, and said, \"I have a Rear Admiral Carmela Moreno on the comm for you.\"\n\nHe nodded to her, and replied, \"Put her through, please.\"\n\nThe viewscreen crackled to life and an attractive olive-skinned woman in her early forties appeared before him. She saluted sharply, and said somewhat haughtily, \"This is Rear Admiral Moreno, Chief of Staff to the Fleet Admiral on 'The Retribution of Zeus'. What are you doing here, -Commodore- Blake?\"\n\n*If Admiral Lynton arranged a meeting, there's no way Buckingham's Chief of Staff wouldn't know about it, or your new rank,* Edraele advised him as she carefully listened to his thoughts. *She's probably either threatened or jealous of your rapid promotions, and trying to assert her dominance over you. You can either go for the diplomatic approach, or be a bit more direct in how you deal with her.*\n\nJohn was still feeling disappointed by Sakura's point-blank rejection of his offer to try and give her a normal life, and this obnoxious officer provided a convenient outlet for his frustration. He gave her a condescending smile, and said, \"I'm here to speak with the Fleet Admiral, Carmela. I believe he's expecting me.\"\n\nShe ground her teeth in anger, and snapped, \"You will address me as 'Rear Admiral Moreno', Commodore!\"\n\nHe gave her a dismissive way of his hand, and said, \"You know full well I'm a Rear Admiral too. Surely we can dispense with ranks?\" Without pausing, he continued relentlessly, \"As for what I'm doing here, it's classified. So be a dear, and run along and let the Fleet Admiral know I want to speak to him, please.\"\n\n\"I'll do no such thing!\" she snorted indignantly. She sneered as she added, \"He's in a meeting with senior Admiralty, and not to be disturbed!\"\n\nJohn shrugged, and said, \"That's fine. I'm coming aboard then, and I'll wait until he's done. My meeting with the Fleet Admiral would be better held in person, anyway.\"\n\n\"Absolutely not!\" she protested looking flustered. \"You can jus-.\"\n\n\"See you soon, Carmela,\" John replied with a wink as he cut her off. He glanced at Rachel, and she cut off the comm channel while stifling a giggle.\n\nEdraele sounded amused, and said, *She'll be absolutely furious, but Buckingham's expecting you, so there's nothing she can do. I've seen this kind of thing before, and I'd wager she earned all her promotions behind a desk.*\n\nCalara had been raised to show high ranking officers the utmost respect, and she looked shocked at his blatant indifference to the Terran Federation Officer's rank. She stared at him wide-eyed and gasped, \"She was a Rear Admiral! You can't speak to her like that!\"\n\nJohn gave the appalled young woman a grim smile, and said, \"She was playing games, and I'm already tired of that bullshit.\" His expression lightened then, and he chuckled as he added, \"I've said far worse to Charles, and he's a Vice Admiral.\"\n\nJade turned in the Pilot's Chair, and asked, \"Do you want me to fly you over in the Raptor?\"\n\n\"That would be great, thanks Jade. We'll head off in a few minutes,\" he replied with a smile. He looked up at the holographic map, noting the scores of cruisers and light carriers identified amongst the sprawling fleet, and turning back to Calara, he added considerately, \"Why don't you scan through the transponders on those ships, and try to find the Damocles and the Hydra.\"\n\nCalara gave him a grateful smile at the mention of her father's and brother's ships, and said, \"I've actually started looking already, but I haven't found them yet.\"\n\n*Before you go, John, I want to talk to you about something,* Edraele said to him, her voice suddenly very serious. \n\n*Go ahead, you can talk to me about anything,* he replied, surprised by her tone.\n\nThe Maliri Matriarch wasted no time in saying, *I have my suspicions about Admiral Lynton.* \n\nJohn didn't seem surprised, and he said, *Yes, me too. With a Progenitor running around this corner of the galaxy, and knowing my species' affect on women, it seems awfully convenient that her video comms broke down just before we arrived. Especially considering we know there's traitors involved in the Dragon March. We saw battle damage to her ship, but to still not have it fixed after six hours...*\n\n*The old Edraele would have had the relevant technicians flayed alive for such incompetence,* she replied in a sombre voice. \n\n*Why send me to destroy the nebula base though?* he asked her with a puzzled frown. *If Gabrielle's a traitor, then why set us up to deliver a devastating blow against the Kintark Empire?\"\n\n*To build trust perhaps?* Edraele speculated. *I must admit that aspect of her dealings with you has me perplexed.*\n\n*Perhaps to keep us busy while she tipped off Norwood?* John guessed. *He seems to have defected within hours of us arriving in the Dragon March.*\n\n*Very good, John, that makes sense,* she replied. He could hear the proud smile in her voice as she added, *Something for my daughter to look into?*\n\n*Agreed. Excuse me one moment, please,* he said to her courteously.\n\nLooking out at his Bridge Crew, he said to Dana, \"Sparks, I've got some suspicions about Admiral Lynton. Would there be any reason her video comms could still be out after more than six hours to fix the comms array?\"\n\nThe redhead pulled her attention away from a complex array of sensor data in a glowing hologram floating above her Engineering Console. She pondered the question for a moment before she replied, \"The ship did get a bit melted by a plasma torpedo, but the damage looked pretty light. They should have been able to repair it by then, and there'd be no excuse by now.\"\n\nJohn was half-tempted to call Lynton immediately to resolve his doubts one way or another, but he didn't want to tip his hand. Instead he turned to the Maliri girl sitting at the IntOps Station, and asked, \"Irillith, could you look into something for me please?\"\n\n\"Of course,\" she agreed immediately. \"What do you want me to investigate?\"\n\nHis eyes narrowed as he replied, \"I'd like you to check to see if Lynton contacted Norwood before his ships attacked the loyal forces. Can you do that?\" \n\nThe blue-skinned girl looked thoughtful before she replied, \"It might take me a while. I can't hack either ship directly to find out, as we're not even in the same system. The only way would be if the comm logs had been automatically archived. If they have been, then I'll just need to explore the Terran Federation data archives on Mars and find the new secure repository.\"\n\nHe gave her a grateful smile as he said, \"Sounds like a good plan, but stay safe, and try not to flatten the data fortress this time, okay?\"\n\nThe beautiful Maliri girl gave him a sparkling smile as she replied confidently, \"This time, they'll never even know I've been there. As soon as I find out, I'll notify Alyssa, and she can update you.\"\n\nCalara's voice drew his attention to the front of the Bridge, and he could hear the relief in her voice as she announced, \"I've found the Damocles!\"\n\nJohn grinned at her, feeling relieved himself, and said, \"That's brilliant news! So we know your Dad is safe, but what about Mateo?\"\n\nHer face fell as she replied, \"I've checked all the light carriers in the area, but there's no sign of the Hydra.\" \n\n\"They might be guarding the supply lines, don't start worrying until we know for sure,\" he said soothingly. Rising from his chair, he continued, \"We'll call Jack when we return from meeting Buckingham, but we better get changed before we meet the Fleet Admiral. Full dress uniform I think, Commander.\"\n\nShe rose from her chair, smiling at him as she walked up the ramp towards the grav-tube. He looked out over the Bridge from atop the Command Podium, and said, \"Hopefully we won't be gone long. You should be safe here, but don't take any chances. Get Alyssa immediately if you suspect even a hint of trouble.\"\n\nThe girls nodded obediently, and wished him a safe journey as he jogged down the steps to join Calara at the grav-tube. They stepped into the anti-gravity field, then dropped down in the soft blue glow to Deck Two and the corridor leading to their quarters. \n\n*You should wear your new uniform. Make a statement...* Alyssa suddenly said to him, halting him in his tracks. By the look of surprise and consternation on Calara's face, he guessed the psychic blonde had said much the same to her.\n\n*I'm not sure that's such a good idea,* he replied tentatively, recalling the form fitting uniforms that Alyssa had designed for the girls. They were extremely flattering, and they'd looked sensational, but he didn't think showcasing his ass would set the right tone when dealing with the upper echelons of the Admiralty.\n\nHe could feel her amusement over their bond as she listened to his thoughts, and said, *Trust me, you'll look spectacular!*\n\nCalara seemed to have been similarly cajoled by the mischievous blonde, and she had a look of dread on her face as she opened the door to her room. Her eyes met his as she murmured, \"I'll meet you in the corridor.\"\n\nJohn walked into his bedroom, then through to the walk-in wardrobe, feeling apprehensive as he wondered exactly what Alyssa had in store for him. He suddenly realised he was being ridiculous, and if he didn't like the new design, he could still wear his old uniform. With that thought in mind, he felt a surge of relief when he spotted his grey Terran Federation dress uniform hanging where he left it.\n\n*As if I'd do anything with that stuffy old thing,* Alyssa chastised him with a telepathic frown. She sounded like she was enjoying herself far too much as she continued, *Look at the end of the rail, I've covered your new uniform in a black shell cover to protect it.*\n\nWith his curiosity piqued, he strolled up to the end of the wardrobe, and found the black protective cover she had described. Holding his breath, he touched his thumb to the tag at the top, and it peeled back, revealing the new uniform she'd designed for him. He was shocked by it at first, but once that wore off, he smiled as he reached out to brush his fingers over the material. Pulling off his clothes, he started to get changed.\n\nHe quickly got dressed, pulling on the trousers, buttoning up the formal shirt, and putting on the jacket. The fit was remarkable, and as he tugged his boots on, he marvelled at the exquisite tailoring with which Alyssa had fashioned these clothes. It was definitely the most comfortable formal outfit he'd ever had the privilege to wear.\n\n*Of course. Nothing but the best for my man,* she replied, listening to his thoughts with a deep sense of satisfaction. *I know your body almost as well as my own.*\n\nThere was a peaked hat that went with the uniform, and he smiled as he turned it around and saw the Terran Federation insignia. He placed it on his head, and just as he was about to go and examine himself in the mirrors, he heard a gasp from the doorway. When he looked up, he saw Calara had entered the walk-in wardrobe, and was staring at him in amazement. His own eyes widened as well when he saw her uniform, and when she noticed his expression, she smiled shyly.\n\nNodding appreciatively, he said, \"You look incredible, Calara. Alyssa's done a magnificent job.\"\n\n\"I know,\" she replied, feeling a little shamefaced for not trusting her lover.\n\nHer new outfit was cut to look very similar to her original Terran Federation Officers' dress uniform. It was demure and respectable, with knee-length boots, trousers, a long jacket that came down to just above the knee, and finished with a peaked cap. That was where the similarities ended however. The uniform was subtly tailored to emphasise her femininity, without undermining her rank and aura of authority. Her boots had a slightly higher heel, and the jacket fit just a little more snugly than the standard uniform. At first glance you wouldn't be able to tell the difference between the cut, but the overall effect was dramatic, and as sensational as she looked, she would definitely turn heads.\n\nHer boots were black, but the uniform itself was immaculate white, the jacket, belt, and trousers edged in gold. The colour scheme was identical to those the other girls had worn for the award ceremony, clearly setting her apart from the conventional military, and identifying her as one of the Lionesses of the Federation. \n\nShe watched him studying her intently, then asked, \"Have you seen yourself yet?\"\n\nHe shook his head, and smiled at her, as he replied, \"No, not yet.\"\n\nGrinning at him, she beckoned him over to stand before the cleverly designed mirrors, which would let him see himself from all angles. He had to admit he felt some butterflies in his stomach as he stepped in front of the mirrors, but he was amazed when he finally did so.\n\nHis own uniform followed the same design ethos as Calara's. The style was very similar to the standard Terran Federation dress uniform, but his was cut to make him look more commanding. He exuded imposing authority in the new uniform, but there was a certain predatory edge to it that made him seem slightly intimidating.\n\nIt was the same pristine white as the other uniforms that Alyssa had designed; the jacket edged in gold, as were the trousers that he'd tucked into his black boots. The jacket buttoned down the right side of his chest, but where it radically differed, was the golden lion that was frozen mid roar where it was emblazoned across his torso. It left absolutely no doubt as to the identity of the man in the resplendent uniform. The outfit was topped with a white peaked hat that had the bright gold Terran Federation insignia on the peak. The familiar insignia consisted of a sword flanked by wings, with the sword tip pointing towards a star.\n\n\"You look so handsome,\" Calara said breathily, walking over to stand beside him. Lifting her beautiful face to stare into his eyes, she asked him, \"Is it wrong that I really want to drop to my knees and give you a loving blowjob?\" \n\n\"As long as you wear your uniform too, I'm sure that'd be fine,\" he replied with a playful smile. With a sigh of regret, he added, \"It'll have to wait until later I'm afraid, gorgeous. We've got a Fleet Admiral to see.\"\n\n*You can both thank me later,* Alyssa thought to them both smugly, then smiled as they both began to imagine all the things they'd do to her in gratitude. \n\n***\n\nAlyssa watched Sakura thoughtfully, as she sat in one of the chairs around the long table in the Briefing Room. The Asian girl was quiet, lost in her own thoughts as she desperately tried to adjust to all the shocks she'd had since being freed from Mikaboshi's insidious grasp. It was heartbreaking to see her like this, but Alyssa had been through more than her fair share of traumatic events in her relatively short life, and knew it was simply going to take time for the girl to recover. \n\nOf course, there was a simpler and much faster way of helping her deal with everything, but the poor girl had been the subject of enough mental tampering for two lifetimes. With that in mind, Alyssa waited patiently for Sakura to rouse herself from her grief. She occupied herself by listening in to John and Calara's thoughts, and tried not to chuckle at their reactions as she encouraged them to try on their new uniforms.\n\nSakura seemed to slowly collect herself, until she finally glanced at Alyssa, and asked in a quiet voice, \"You said you wanted to talk to me?\"\n\nThe blonde girl nodded, and replied, \"There's no hurry, though. If you need time to yourself, just let me know, and I'll leave you in peace.\"\n\nThe petite girl shook her head, and replied, \"I want to talk. I've been locked away for what seemed like forever, and it's nice to be able to speak to someone.\"\n\nGiving her a radiant smile, Alyssa said, \"Well you're in luck, because I like talking!\"\n\nDespite herself, Sakura laughed, then seemed surprised at the sound. She gave Alyssa a sad smile, and said, \"I don't think I've laughed in over seventy-five years. How tragic is that?\"\n\nAlyssa's answering smile was sympathetic, and she said, \"You have a nice laugh. I hope we'll get to hear it a lot over the next seventy-five years.\"\n\nSakura sat up straight then, but she missed what Alyssa was alluding to, instead picking up on the more obvious as she asked, \"I thought John said-.\"\n\nRolling her eyes affectionately, Alyssa replied, \"Yeah, forget what he said, he's just trying to be noble.\" Rising from her chair, she added, \"Want to get out of here? We can go and relax somewhere a bit less stuffy.\"\n\n\"That would be nice, thanks,\" Sakura replied gratefully.\n\nAlyssa offered her an arm, and Sakura linked hers with the taller girl, then they walked out of the Briefing Room onto the Bridge. Aside from John and Calara, all the rest of the crew were there, and they gave their guest warm and welcoming smiles. The girls didn't try to introduce themselves, assuming Alyssa was trying not to overwhelm her.\n\nAlyssa leaned over, and whispered, \"Are you feeling brave enough to meet them?\"\n\nWhen Sakura nodded shyly, Alyssa turned to the others, and said, \"Ladies, this is Sakura. Sakura, these lovely girls are Dana, Rachel, Jade, Irillith, and Faye.\" \n\nShe pointed to each of them in turn, and Sakura's eyes grew wider with each progressively more exotic girl she was introduced to. They each waved to her and said hello in turn, and once the brief introductions were done, Alyssa led her up to the Ready Room. She pressed the button to open the door, but before she walked inside, the Asian girl glanced back across the Bridge, frowning as she looked at Jade once again.\n\n\"Would you like a drink?\" Alyssa asked, as she waved Sakura over to one of the comfortable sofas.\n\nSakura hesitated, then replied, \"An iced tea would be lovely, thank you.\"\n\nWalking over to sit next to her, Alyssa smiled as she said, \"She'll just be a minute.\"",
        "\"Who will?\" Sakura asked in confusion.\n\n\"Jade. I asked her to go and make us a couple of drinks. She'll be along shortly,\" Alyssa explained patiently.\n\nNow Sakura looked really confused as she asked, \"But you didn't say anything to her?\"\n\nTapping her forehead, Alyssa replied, \"As well as having telekinesis, I'm a telepath as well.\" Sakura looked shocked, but the blonde girl shrugged as she kicked off her heels, then tucked her legs up on the sofa. Her voice was calm and soothing as she continued, \"We're all gifted in our own way. If you're interested in joining us, there's no point hiding any of our abilities.\"\n\nSuddenly remembering what they were supposed to be talking about, Sakura blurted out, \"I do want to join you! I want to help you defeat Mikaboshi!\"\n\nAlyssa smiled at her, and said, \"I know, and I think you'll be a good fit for our group.\"\n\n\"But what about, John?\" Sakura asked with a frustrated frown. \"He seemed to hate the idea.\"\n\nWith an affectionate smile on her face, Alyssa replied, \"He hates the thought of forcing you into something against your will, or the idea that you might regret a decision to join us. He's a good man, and he likes to help people, not harm them.\" She paused a moment, then clarified, \"Apart from bad guys, we've killed thousands of those.\"\n\n\"What do you mean by 'bad guys'?\" Sakura asked curiously.\n\nWith a bright smile, Alyssa replied with enthusiasm, \"My definition is anyone who threatens our family, but John's a little more traditional. We've fought Pirates, Kirrix, Drakkar Raiders, kidnappers, murderers, rapists, the list seems endless... unfortunately the galaxy has plenty of evil shits who desperately need killing.\"\n\nSakura smiled wryly, and said, \"My university professors would argue very passionately with you there. They placed their faith in the legal system, and I know they didn't approve of vigilantism.\"\n\nAlyssa nodded, and said, \"A wise girl once said: 'Fuck the law'. I think she was right. Seeing justice done is far more important.\"\n\nThe Asian girl blushed at that, but she glanced at Alyssa with a curious look in her eyes, and said, \"This feels like you're giving me a sales pitch. I thought I was the one trying to convince you to let me help you?\"\n\nWith a sigh, Alyssa replied, \"He'll be really tiresome about this if I don't explain everything to you clearly.\" After a brief pause while she studied the other girl, she added, \"I'd like to show you a few images to clarify a few things. Some are a bit shocking though, is that okay?\"\n\nBracing herself bravely, Sakura nodded, so Alyssa gestured to the viewscreen remote with a casual flick of her wrist. It floated off the coffee table, then levitated over to her, and landed smoothly in her outstretched palm. Sakura watched in fascination, her mind still struggling with the idea of telekinesis, but before she could comment, the door opened and Jade strolled into the room. The Nymph was carrying two glasses of iced tea, and she gave Sakura a kind smile as she placed the drinks down on the table, briefly making eye contact as she did so. The girl smiled back at her, but as she looked into those emerald cat-like eyes, there was a sudden flicker of recognition and she quailed before the Nymph.\n\nJade glanced at Alyssa in alarm, and the blonde girl replied reassuringly, *It's alright, I'll sort this out.* She smiled at the green-skinned girl, and added, \"Thanks for the drinks, sexy. You might want to change into your uniform, so you can match John and Calara.\"\n\nWith a final worried glance at Sakura, Jade nodded, then walked out of the Ready Room, leaving the other two girls alone.\n\n\"She... I..., I mean Shinatobe...\" Sakura sputtered as soon as the Nymph left the room.\n\nAlyssa picked up her drink, and took a sip of the tea, before saying calmly, \"Yes, she's the Jade Tiger that Shinatobe fought and killed.\"\n\nSakura blanched, and stammered, \"K-k-killed?! But she's...\"\n\n\"Alive and well?\" Alyssa asked, finishing the shocked girl's sentence for her. With a firm nod, she continued, \"John brought her back to life.\"\n\nAt this Sakura gaped in utter shock, and sounding awed, she asked, \"Just how powerful is he?\"\n\n\"Very,\" Alyssa replied simply. She paused, and added, \"We're kind of skipping to the end of the story though. Let me guide you through it, and I promise it'll make more sense.\"\n\nWhen she received a tentative nod, Alyssa pressed a few buttons on the remote, and the projectors in the room generated the image of two girls. Both were blondes with piercing Cerulean eyes, but beyond that, there were very few similarities between the five-foot-nine statuesque beauty, and the emaciated five-foot-two waif.\n\n\"Who's the smaller girl?\" Sakura asked, staring at the images with a sympathetic expression on her face.\n\n\"They're both me. One image was taken several months ago, before I joined John, and the other was after he'd given me the Gift,\" Alyssa explained carefully.\n\nAfter all the incredible things she'd already witnessed, Sakura barely reacted to this astonishing transformation, and she immediately asked, \"The Gift? What's that?\"\n\n\"It's varied a little for each of us, but there are a few things that have been constant,\" Alyssa explained. Staring into the smaller girl's eyes, Alyssa began ticking off her fingers, as she clarified, \"A strong, agile, healthy body like mine, enhanced intelligence, and immortality...\"\n\nSakura's eyes threatened to roll out of her head at this revelation, and she started to gasp, \"Immor-.\"\n\nAlyssa cut her off, and said, \"Yes, as long as we regularly swallow John's cum, we're immune to disease, we'll never age, and we're effectively immortal, although we can still be killed in combat.\" When she saw Sakura about to object, she clarified, \"Although Jade is a special case.\"\n\nThe Asian girl was quiet for a long moment, until she asked, \"So John's sleeping with all of you?\"\n\nWith a gentle smile on her face, Alyssa reached over and smoothed her hand over Sakura's gently rounded belly, reminding her what was filling her stomach. \"It's how his powers work,\" she said with a shrug. After a brief pause, she added, \"Actually, that makes it sound like we're only with him for that reason, but we all love him very much. He's a kind, caring, loving man, and we're all very lucky to be with him.\"\n\n\"So I'd have to as well?\" Sakura asked hesitantly, although she certainly didn't look too upset at the idea.\n\n\"Yes, and you'll likely end up having fun with us girls too,\" Alyssa replied with a sultry smile.\n\nThis did shock the smaller girl, and she gazed at Alyssa again, but this time in an entirely different way. Alyssa gave her a knowing look, recognising the hint of curiosity in those dark brown eyes, which made Sakura blush furiously this time. \n\n\"It's okay, you can just take things at your own pace,\" Alyssa said gently. Nodding towards the holo-images again, she added, \"Now let me show you the rest of us, and it'll make it clearer why I think you'll fit in.\"\n\nPressing the button on the remote, the image changed, showing the before and after images of Calara, then Dana, Rachel, and finally Irillith. Sakura was enthralled by the images bearing witness to the miraculous healing and transformation the girls had undergone. Alyssa ignored the images, and focused her attention on Sakura instead. She smiled when she saw the light of understanding in those lovely brown eyes.\n\n\"You were all like me,\" she whispered, stunned by the images.\n\n\"Wounded little birds, just like you,\" Alyssa agreed sombrely. \"Believe me when I say we've all experienced our fair share of pain and loss. John's helped heal all of us though, and I'm not just talking about the physical scars.\"\n\n\"Did he wipe the painful parts of your memory?\" Sakura asked in a small voice. \n\nAlyssa shook her head, and replied, \"No, but I do know what you're going through. My mother died in childbirth, and my dad died in a mining accident when I was six. Dana never knew her parents, and we both grew up in orphanages.\"\n\nSakura's expression was filled with sympathy as she said in a quiet voice, \"Talking to me about this must be really hard for you. At least I had eighteen years with my parents until they were taken away from me. I can't even imagine what that must have been like for you. I'm so sorry.\"\n\nOpening her arms for a hug, Alyssa wrapped up the smaller girl in a warm embrace, and smiled as she said, \"Thank you. It can be hard sometimes, but what me and Dana missed the most growing up, was not having a family. We've got a new family now, and I can't tell you how wonderful it feels every day, just knowing that.\"\n\nThe black-haired girl looked up from their hug, and said tentatively, \"You haven't told me any downsides to this Gift yet. There's got to be more to it than that.\"\n\nAlyssa smiled at her, and said, \"John likes smart girls. I think he'll be impressed by you.\" The two girls parted a little as they broke away from the hug, but Sakura didn't make any effort to move away, sitting close beside Alyssa instead. The blonde's hands moved automatically, going to the other girl's rounded stomach and caressing it lightly.\n\n\"That feels nice, thank you,\" Sakura replied, closing her eyes a moment as she relished Alyssa's skilful touch.\n\n\"There are a few things I should mention, although I don't really consider them downsides,\" Alyssa explained, as she stroked the other girl. \"We don't know much about his species, other than that they were a bunch of evil tyrants. They normally enslave and mind-control girls they're with, but John isn't like the other Progenitors we know about, and he's found a way to break that. It's one of the reasons he's so reluctant to have you join us, as he still feels guilty about how we had to obey him to start with.\"\n\n\"Not any more?\" Sakura asked curiously.\n\nShaking her head, Alyssa replied, \"We aren't compelled to obey him now, but he's a great leader and we all respect him, so we tend to anyway.\" She grinned, and said, \"Especially in bed, but being a good girl there is always lots of fun.\"\n\nWith a look of confusion on her face, Sakura said, \"That still doesn't sound like a downside to me.\"\n\n\"Sorry, I hadn't got to them yet,\" Alyssa apologised. She smiled at the Asian girl, and said, \"With a harem of six girls, you can imagine what a nightmare all the jealousy and competitiveness would be like. Well that's all gone now. We can't be jealous of one another, and I actually find it exciting to see John with the other girls.\"\n\n\"That actually sounds like a blessing,\" Sakura noted drily, having experienced rampant cattiness and jealousy at the private school she'd gone to.\n\n\"Yeah, that's how I feel too,\" Alyssa said with a grin. She hesitated though, and added, \"John hates the idea of modifying our personalities though. It happened without him consciously doing anything to make the changes, but he still feels guilty about it. That and making us all bisexual.\"\n\nSakura was surprised and asked, \"Some of you weren't beforehand?\"\n\nAlyssa nodded as she replied, \"Dana used to be straight, but she's really embraced it.\" Giving the girl a knowing look, she smiled as she added, \"I don't think you'll have too much difficulty adjusting.\"\n\nThe Asian girl blushed furiously, but she made no attempt to deny it. She sat there quietly, thinking about everything she'd just heard, while Alyssa stayed silent and just watched her. With a look of firm resolve in her dark-brown eyes, Sakura eventually said, \"I still want to join you. Properly I mean, and not just to get revenge on Mikaboshi.\"\n\nAlyssa smiled at her and said, \"I'd love to have you join us. I've been inside your mind and seen the real you, so I already know you're a lovely girl.\" She looked thoughtful for a moment before she continued, \"I'd like you to do something for me though, if you're really sincere about joining us.\"\n\nSakura leaned forward and asked eagerly, \"What's that?\"\n\n***\n\nFleet Admiral Buckingham's enormous flagship loomed overhead, blocking out the light from the bright Delta-Draconis sun, as Jade brought the Raptor closer to the huge fleet carrier. 'The Retribution of Zeus' had numerous hangar bays built into the lower superstructure of its vast hull, and as their gunship approached, one of the hangar doors began to open. Having received docking clearance from the carrier's flight controller, Jade followed the green guidepath towards the yawning portal. \n\nJohn was sitting next to Calara in a chair at the back of the cockpit, both of them lost in thought. The brunette had a holo-reader clutched in her hands, and had been scanning through the data she'd gathered about each of the Admirals in the Dragon March. After he'd raised his suspicions about Admiral Lynton, Calara found a picture for him, revealing Admiral Lynton to be a slightly portly brown-haired woman in her mid-fifties.\n\n\"So that's Gabrielle Lynton then?\" he asked her, as he studied the picture.\n\nShe nodded, and replied, \"I got this picture from her service record. They get updated after the yearly medical, and this one was taken about ten months ago.\"\n\n\"I wonder if she still looks the same way now?\" John remarked, giving the brunette a meaningful glance.\n\nWith a gasp of surprise, the Nymph called out, \"John, you better take a look at this!\" \n\nHer passengers both looked her way when Jade spoke up, and they could see the huge reinforced doors sweeping overhead as she guided them inside the hangar. John rose to his feet and walked over to her side, placing a reassuring hand on her white uniformed shoulder as he peered through the cockpit canopy into the hangar bay. It seemed that word of their imminent arrival had soon got around the Terran Federation's flagship, and the space around the glowing landing area was crowded with marines and navy personnel.\n\n\"Looks like we've got a welcoming committee,\" he said, glancing back at Calara.\n\nShe quickly stood, then joined him in looking out at the gathered crowds, a smile creeping onto her face as she said, \"Alyssa would have loved this.\"\n\nWith the judicious use of retrothrusters, Jade carefully eased them over the glowing circle marked on the deck of the hangar, until the gunship was perfectly aligned in the centre. They landed with barely a tremor, a testimony to her impressive piloting skills.\n\n\"You better stay with the Raptor,\" John said to Jade, as he pulled away from the cockpit windows.\n\nShe was busy with the post-flight shutdown, flicking off switches as she powered down the gunship's engines, and glancing his way she replied, \"Sure, I'll be right here until you get back.\"\n\nAs soon as she was done, she got up off her chair, and followed John and Calara as they stepped into the grav-tube. They walked into the front loading area, and Jade smiled at John when she pressed the button to lower the landing ramp. It was like a wall of noise hit them as the ramp began to drop, with the sound of resounding cheers filling the small room. Calara had witnessed this before at Port Megara, but Jade was shocked by the deafening din. \n\nWhen the ramp had lowered further, allowing them to see the jubilant crowds, a sparkling smile lit up her beautiful face, and she grinned at John in delight. \"They love you!\" she exclaimed, barely audible over the cacophony.\n\nHe smiled back at her, enjoying seeing her look so happy, then turned to face the huge throng as the ramp hit the deck. The cheers intensified as John stepped forward, flanking by both girls, and he gave the crowd a grin and sharp salute. Calara and Jade beamed at the marines and sailors, giving their unexpected audience a friendly wave. John glanced at Calara, and when she nodded, they strolled down the ramp, leaving Jade waving at the crowd.\n\nSome big marines were doing their best to hold back the crowds, and they grinned at John and Calara as they strolled through the narrow path between the hundreds of people in the hangar. It proved to be an impossible job, and they were soon surrounded by awestruck personnel who patted them on the shoulder or shook their hand. \n\n\"The Lion fucking rules!\" a big soldier cheered off to their left.\n\nA grinning young navy man on Calara's side called out to her, \"I love you, Lioness! Marry me!\"\n\n\"You saved Terra!\" one young marine on John's right blurted out, her face full of wonder. \n\nJohn was keeping a watchful eye over Calara, and she turned to look at him when she heard that. They didn't need to speak to communicate what they were both thinking; it seemed that Admiral Devereux hadn't been able to suppress the news about the Nexus battle for long.\n\n*It's not surprising it got out so fast,* Edraele advised him. *I don't think even I, at my draconian best, could have suppressed that kind of news. You saved the Terran homeworld from annihilation, and it was witnessed by billions.*\n\nWith the help of the burly marines, John and Calara managed to manoeuvre their way through the tightly packed crowd. They guided them over to an open set of double doors, where a bearded older man in Officers' dress uniform was waiting for them with a wide smile on his face. John immediately recognised the man's rank as an Admiral by the insignia on chest, and the gold banding on his epaulets and cuffs.\n\nShouting to be heard over the jubilant cheers, he said, \"Welcome aboard the Zeus, Rear Admiral Blake!\" \n\nIt sounded like he introduced himself afterwards, but even with his sharper hearing, John struggled to hear what he said. He pointed to his ear, winced, and shook his head. Nodding his understanding, the naval officer led them out through the doors, then into the corridor beyond, with the raucous cheers echoing around them. The noise died down as they strolled away, and it gradually petered out as the crowd realised he'd left the hangar. \n\n\"You were all over the Holonet barely an hour ago, so when your ship jumped in-system, the news spread like wildfire through the fleet,\" the admiral said with a broad grin, as they walked along the corridors. \"Is it true what they said on TFNN? Did you really save Terra from some kind of AI uprising?\"\n\nJohn was startled at just how accurate the news report seemed to be, but he tried not to let that show on his face as he replied, \"Yes, that's true, Admiral...?\"\n\n\"Sorry about that,\" the man replied, looking embarrassed. \"I'm Admiral Edwin Caldwell, I command the Zeus.\"\n\n\"Good to meet you, Admiral,\" John replied giving him a salute. He glanced at the older man, and said, \"You already seem to know who I am, but this is Commander-.\"\n\n\"-Calara Fernandez,\" Admiral Caldwell interrupted, finishing the introduction for him. He smiled at the surprised girl, and added, \"You were mentioned on the news as well, young lady.\"\n\nShe saluted him respectfully, and said, \"It's an honour to meet you, Admiral. Your career was required reading in the Academy.\"\n\nCaldwell smiled at her, and replied, \"It pales in comparison to what you two have achieved. Outstanding work, the pair of you. It's not often I'm in the company of genuine heroes.\"\n\nCalara flushed with pride, giving John a grin as she glowed under the Admiral's praise. They arrived at an elevator door, and the Admiral hit the button calling for the lift. \n\nWhile they waited, John gave the older man a curious look, then asked, \"Isn't the 'Zeus', the Fleet Admiral's flagship?\"\n\n\"So, why did I say I was in command?\" Caldwell replied with a smile, vocalising John's unspoken question. \"The Fleet Admiral is overseeing this operation, but I have command of the Zeus itself.\"\n\n\"Can you tell us anything about Admiral Norw-,\" Calara started to say.\n\n\"Not here,\" Admiral Caldwell said sharply under his breath. He glanced around the corridor to check there was no one nearby before he continued, \"We don't want that getting out.\"\n\nThe door to the elevator chimed, and the three of them stepped inside. Caldwell hit the button to take them up to Deck Three, and the lift began to rise up through the levels.",
        "\"I spoke to a Rear Admiral Moreno when we arrived in the Delta-Draconis system,\" John said hesitantly. \"She didn't catch me in the best of moods.\"\n\nCaldwell frowned and replied, \"Please accept my apologies. I was in a meeting when you arrived, but my XO informed me you two had spoken.\"\n\n\"She didn't seem to like me very much,\" John noted wryly. \n\n\"I'd have that woman transferred off the ship the first chance I got, but the Fleet Admiral...\" Caldwell said through gritted teeth, before he stopped himself from continuing. He was guarded when he added, \"Let's just say that Moreno has been Buckingham's... 'Chief of Staff', for a long time now.\"\n\nAlyssa snorted with laughter as she said, *It sounds like Edraele was wrong. Carmela Moreno probably earned her promotions under a desk rather than behind it.* \n\nJohn tried not to laugh at that, and instead asked Admiral Caldwell, \"Where are we heading now, Admiral?\"\n\nThe bearded man smiled as he replied, \"Call me Edwin, please. I think you've more than earned it after your heroics.\" He glanced at the number indicator on the elevator, showing their current location as they ascended out of the bowels of the fleet carrier. \"We'll be there shortly. The senior Admiralty are eager to speak with you.\"\n\nIt took a while to rise up through nearly thirty decks until they reached their destination, reminding John of the scale of this gigantic starship. The elevator chimed, and the doors swished open promptly, leading out onto a corridor on Deck Three. Following Admiral Caldwell out of the lift, John gave Calara a reassuring smile as they walked along behind him.\n\nThe corridor was bustling with officers, and it seemed everyone aboard had heard of John's recent exploits. Almost everyone they passed stopped to salute them respectfully, instantly recognising the celebrities in their midst. Calara started to look a bit intimidated by all the attention, as she was finding it difficult to adjust to her new rank and fame. John had been keeping an eye on her, and briefly slipped his hand into hers, giving it a gentle squeeze before letting it go. She turned and smiled at him gratefully, appreciating the supportive gesture.\n\nCaldwell stopped by a set of double doors just a minute later, nodding to the two fully armed guards who stood at attention by the entrance. They opened the door for him, admitting them into a reception area, which was teeming with officious staff. \n\nOne of the officers hurried over to them, a Lieutenant Commander judging by the insignia on his chest, and the epaulets on his shoulders. \"Please state your business with the Fleet Admiral, and I need to see your security identification,\" the man demanded curtly.\n\n\"I'm Admiral Caldwell, and this is the Lion. Now get out of my way,\" Caldwell snorted, breezing past the indignant security officer, and heading towards another set of double doors beyond. He opened the doors, and let John and Calara through before following them into the smaller room beyond.\n\nSitting behind a well-ordered desk was Rear Admiral Carmela Moreno, and her lip curled with distaste when she saw John walk into the room. She opened her mouth to greet him with a scathing rebuke, but Admiral Caldwell striding in behind John quickly silenced her.\n\n\"Good to see you again, Carmela,\" John replied cheerfully.\n\nShe quivered with fury, but with Admiral Caldwell there, she was forced to smile politely, and said, \"Welcome aboard, John.\"\n\n\"I assume Vincent's still here?\" Caldwell asked her abruptly.\n\nShe nodded to him, and replied obsequiously, \"He said to go on in, Sir. The Admirals are still with him.\"\n\n\"Thanks,\" he replied, as he walked up to the door. He opened it, then turned and smiled at John, gesturing for him to proceed.\n\nJohn strolled inside, and was surprised at the size of the huge opulent room. In one corner was a heavy ornate desk, and beside it was a complex suite of view screens and holographic projections which appeared to be displaying local Kintark space. On the other side of the huge office was a glass-fronted meeting room with a long, dark oak table, which had been polished to a rich shine, and was surrounded by seating for thirty people. That left the centre of the room, which was presently occupied by three older men and a woman, who were wearing dress uniform and sitting in comfortable looking wingback chairs.\n\nThey all rose to their feet, and one of them, a tall grey-haired man with a moustache said, \"Ah, the illustrious John Blake! I've been looking forward to making your acquaintance for some time now.\"\n\nAdmiral Caldwell stepped forward, then turned to look at John, and said, \"This is Fleet Admiral Vincent Buckingham.\" Nodding to each of the others in turn, he continued, \"and Admirals Jayanti Mishra, Ricardo Santini, and Carl Weber.\"\n\nJohn saluted them, and said, \"Thank you for agreeing to meet with me. I have some urgent business I need to discuss with you.\"\n\n\"Straight to the point,\" Admiral Jayanti Mishra said, as a smile lit up her light-brown face. \"That makes a refreshing change!\"\n\nAdmiral Weber frowned in her direction, and crossed his arms across his chest defensively. He looked like he was about to say something, but he clenched his jaw instead, remaining silent. \n\n\"Come, join us, John,\" the Fleet Admiral said, waving his hand to the vacant chairs around the table. There was a decanter of bronze-coloured drink on the table, and John could see several half-filled glasses where the Admirals had left them. Buckingham noticed what had drawn his eye, and he grinned as he added, \"We're just toasting our glorious victory over the Kintark. Care for a drink?\"\n\nAdmiral Caldwell walked over to the chairs, taking one directly opposite the Fleet Admiral, and the rest of the senior officers sat down as well. Admiral Santini pulled out a fat cigar, lit it and toasted it, and when it began to smoulder, he took a few well-practiced short puffs to draw up the flame. Terran Federation ships were strictly non-smoking, so it was a shock to both John and Calara to see the Admiral flagrantly breaking this fundamental regulation.\n\nThey walked over to sit in vacant chairs, and John replied, \"Thank you, Fleet Admiral.\"\n\nFleet Admiral Buckingham frowned as he replied, \"Normally I'm a stickler for protocol, but we're all Admirals here, so there's no need for ranks. First names make everything a lot easier, especially when discussions get... heated.\" His eyes flickered over to Santini as he said it, and when he made eye contact with John again, he smiled.\n\nAdmiral Caldwell poured John a glass of whiskey, and slid it across the table towards him. He looked at Calara, and raised the decanter as he asked, \"Calara, would you like something to drink?\"\n\n\"I'm fine, thank you... Admiral,\" she replied quietly, pausing for a moment before erring on the side of caution. The thought of addressing a member of the Admiralty by his first name felt incredibly awkward, and as a junior officer, she didn't think the Fleet Admiral's invitation applied to her.\n\nVincent Buckingham raised his glass, and he grinned as he said, \"Ladies and gentlemen, here's to crushing the Kintark! To victory!\"\n\nThe other Admirals raised their glasses, and echoed, \"To victory!\" before taking a drink. \n\nJohn did the same reflexively, but his attention was on the officers sitting around the table. Admirals Ricardo Santini, and Carl Weber joined the Fleet Admiral's toast energetically, but Jayanti Mishra and Edwin Caldwell seemed more tempered in their enthusiasm. He was roused from his observations by the dark-skinned officer sitting to the Fleet Admiral's left. \n\nShe leaned forward, placing the drink back on the table, and said to him, \"We heard from Lynette what happened back on Terra. It seems we owe you a huge debt.\"\n\nThe Fleet Admiral nodded vigorously, and said, \"You did a marvellous thing, John! A huge fleet of rogue AI ships threatening Terra, and you cut straight through them to take out their command ship. Disabling their fleet, and saving Terra in one fell stroke; absolutely magnificent!\"\n\nCaldwell nodded his appreciation, smiling as he said, \"You saved the heart of the Terran Federation. You've already eclipsed my career, and you're still a young man.\"\n\nCarl Weber looked doubtful, and he grumbled, \"Lynette's prone to exaggeration. Excuse me if I wait for the detailed analysis before I start singing the 'Lion's' praises.\"\n\n\"Don't be churlish, Carl,\" Buckingham admonished the dour man. \"You must have seen the footage yourself. There were already videos all over the Holonet for hours, before Lynette authorised the TFNN broadcast.\"\n\nCarl Weber grimaced, and chose not to comment further. \n\nRicardo Santini had a hungry gleam in his eye as he said, \"It's remarkable what you've accomplished in that decommissioned assault cruiser. I suspect that there's much more than meets the eye with that relic of a ship...\"\n\nJohn studied the man for a moment, then replied cautiously, \"When I retired, I bought a few upgrades for the Invictus from a number of alien sources. I've been quite pleased with the results.\"\n\n\"Is your retirement why you chose to abandon your regulation Terran Federation uniform?\" Carl Weber glowered, looking at John's white Lion uniform with distaste. \"Or was this meant as some kind of insult?\"\n\nJayanti Mishra rolled her eyes, and interjected, \"Don't bother answering that, John. Carl's being ridiculous.\"\n\nFleet Admiral Buckingham grinned as he said, \"I think you've done a fantastic job embracing this 'Lion of the Federation' persona. The title Lynette concocted for you was absolutely inspired.\" He glanced at Admiral Caldwell, and added, \"Morale's been through the roof, right Edwin?\"\n\nEdwin Caldwell nodded, and replied, \"The men love an honest-to-God hero, Vincent.\"\n\nJayanti Mishra smiled, as she said, \"The women too of course. It's not just the personnel though, we've seen substantial improvements to public approval ratings of High Command.\"\n\n\"I'll drink to that!\" Fleet Admiral Buckingham exclaimed, taking a swig of drink from his cut-crystal glass.\n\nJohn smiled magnanimously, and said, \"I'm glad I've been able to help.\" \n\n*John!* Alyssa reached out to him urgently.\n\n*I'm here, what's wrong?* he replied.\n\nShe spoke quickly as she said via telepathy, *Irillith just woke up from her spirit-walk. She said there were no outgoing messages from Lynton on her dreadnought this morning, but that seemed suspicious, because the Dragon March Commander should be issuing fleet orders. She started checking all outgoing messages from the entire fleet, and It turns out Lynton took a shuttle over to the Battleship Artemis!*\n\n*Commodore Sasaki's ship?* John asked in confusion.\n\n*A comm broadcast was sent from the Artemis to Norwood's dreadnought an hour after we left the system. The signal was sent with Lynton's security clearance. She tipped him off!* she exclaimed.\n\n*What did the message say?* he asked, his eyes narrowing in anger.\n\nAlyssa sounded exasperated as she replied, *It was encrypted with some extremely complex form of encryption software. Irillith's working with Faye to try and break it.*\n\n*Alright, let Irillith know what a great job I think she's doing,* he said, his voice filled with gratitude. *Let me know as soon as you find out anything else.* \n\n*Will do!* she agreed eagerly.\n\nJohn watched the assembled Admirals for a long moment, and then took a big breath before he said, \"I have urgent business with you all. I need to talk to you about Admiral Norwood.\"\n\nThe jubilant mood in the room abruptly changed, expressions darkening rapidly. \n\n\"That thrice-damned traitor!\" Santini snarled in anger. \n\nFleet Admiral Buckingham looked furious as he snapped, \"I promoted him to Admiral myself! I can't believe that bastard would betray his own people like that!\"\n\nAdmiral Caldwell was more measured in his response, and his eyes were sharp as he leaned forward, asking, \"What did you want to speak to us about?\"\n\nJohn met his searching gaze, and replied, \"I headed out to the Dragon March to warn you about Norwood, but I'm worried he wasn't acting alone. There's another member of the Admiralty involved.\"\n\nThe room erupted at this, with the Admirals reacting in a mix of astonishment and anger, all of them speaking out at the same time. \n\n\"I had nothing to do with that treacherous dog!\" Ricardo Santini roared. \"How dare you accuse me of being a traitor?!\"\n\nCarl Weber glared at John and snapped, \"You knew beforehand?!\"\n\nJayanti Mishra looked around the table at her fellow Admirals, a worried expression on her face as she murmured, \"More traitors?!\"\n\nVincent Buckingham was outraged and he declared, \"Who is it?! By God, I'll see them hanged before the day is out.\"\n\nEdwin Caldwell's eyes had narrowed, and he looked tense as he asked, \"What did you find out, John?\"\n\nJohn didn't know who to reply to first under this barrage of frenzied questions, so he simply stood up, looming over them. They abruptly went quiet as they looked up at this intimidating presence in their midst, and waited silently to hear what he had to say next.\n\nHe looked at Santini first, and replied calmly, \"I'm not accusing you of anything, Ricardo.\" He glanced down at Calara, before looking at the assembled Admirals, and continued, \"Commander Fernandez suspected something wasn't right in the Dragon March campaign, so she started investigating the recent Kintark victories. She analysed the fleet commands that had been issued by the three admirals fighting in the Dragon March conflict, which was when she began to suspect Norwood.\n\nWe saw the huge number of battle-damaged ships returning from the front to Olympus Shipyard, which only confirmed her suspicions. No campaign should be that unlucky. I ordered my Cyber-Intelligence Officer to do some further digging, and we confirmed that Norwood was directly responsible for nearly a dozen catastrophic engagements with the Kintark.\"\n\nAdmiral Weber blurted out, \"Not informing us of these suspicions was a gross dereliction of duty, you should be court mart-.\"\n\n\"I'm retired, I don't give a fuck about court martials,\" John snapped, tired of the man's provocations, and leaving the Admiral open-mouthed in shock. \"I could hardly broadcast this over the comm network. How was I to know who else was involved? The last thing I wanted to do was tip the traitors off. Besides, you were all in the Dragon March, which was in a comms lockdown in preparation for the invasion.\"\n\n\"Who else do you suspect, John?\" Edwin Caldwell probed quietly. \n\nJohn looked down at the senior officers who were all watching him with breathless anticipation, and replied sombrely, \"Gabrielle Lynton.\"\n\nThere was another loud chorus of angry exchanges, while Admiral Caldwell sat back and digested this shocking accusation.\n\n\"Preposterous,\" Santini snorted in disbelief. \"I've known Gabrielle for years, there's no way she's in league with Norwood.\"\n\n\"Excuse me if I don't trust your character judgement, Ricardo,\" Jayanti Mishra said dismissively. \"You would have said the same thing about Leonard yesterday, and now look what he's done!\"\n\n\"Norwood fooled all of us!\" Santini blurted out defensively. \"You can't blame me for that!\"\n\nFleet Admiral Vincent Buckingham had stayed quiet, but his face was deadly serious as he stared at John. \"Why do you suspect Admiral Lynton?\" he asked, ignoring the other Officers. For a moment his demeanour had changed significantly, and John couldn't help but wonder if his previous, more flamboyant behaviour was some kind of ruse.\n\nJohn met his gaze, and replied, \"When we arrived at the Dragon March, I requested your location, and told her I was following orders from Admiral Devereux. Lynton claimed she couldn't divulge your location without first getting clearance from your staff officer, and while we were waiting for approval, she sent us on a mission to clear the Kintark resupply station from the Mar'Katrach nebula.\"\n\nCaldwell frowned, and said solemnly, \"She didn't need clearance for that. At her rank, she's fully authorised to send reinforcements directly to our position. What else did you find out?\"\n\n\"Wait a minute!\" Santini interrupted, sounding intrigued. \"She sent you into the nebula alone? How did you get past the border forces, and how could you even navigate in the nebula? For that matter, if it's a resupply station, it'd be teeming with Kintark forces! Just how much firepower have you got on that ship?!\"\n\n\"He's obviously not going to tell you,\" Jayanti Mishra said, clearly exasperated. Turning to John, she said, \"Go on, please. What other evidence have you got against Gabrielle Lynton?\"\n\nJohn secretly breathed a sigh of relief at their attention being drawn from Admiral Santini's questions, as they were ones he definitely didn't want to provide answers for. He looked at the older, dark-skinned woman and replied, \"I believe Gabrielle wanted to delay me from reaching you so that she could tip off Norwood.\"\n\n\"This is all circumstantial,\" Carl Weber protested with a dismissive wave of his hand. \"Where's the actual proof?\"\n\nJohn glanced at him, and replied, \"As soon as I jumped out of the system, Gabrielle took a shuttle to the battleship Artemis. She used their comms array to broadcast to the 'Vengeance of Hera'.\"\n\n\"That's Norwood's ship!\" Santini gasped, looked stunned. \"What time was this?!\"\n\nJohn looked around at his audience, and stated, \"Approximately ten hours ago.\" \n\nThey all exchanged worried glances, and he could tell the mood had shifted, even including Santini and Weber, who were initially dismissive of his claim.\n\nJayanti's voice was grim as she said, \"Norwood's band of traitors attacked the loyalist forces two hours after that.\"\n\n\"How could you know that?\" Carl Weber asked him, eyes narrowed in suspicion. \"There's no way you should be able to access the Artemis' comms records.\"\n\nJohn gave him a level look, and said, \"The security of the Terran Federation was at stake, and I have my sources.\"\n\nAdmiral Weber clenched his teeth, and said, \"That answer's not good enou-.\"\n\n\"Be quiet, Carl,\" Fleet Admiral Buckingham said in a chilling voice. He stared at John, and asked, \"Is there anything else?\"\n\nAfter hesitating a moment, John said, \"This might sound strange, but has Gabrielle Lynton radically changed her appearance recently?\"\n\nAt this, even Carl Weber stopped his grumbling, and they all looked equally astonished as they stared at him. \n\n\"She told me she'd recently had a big inheritance, and spent a fortune on a designer bodysculpt job a few months ago,\" The Fleet Admiral said cautiously. \"I thought it was a waste of money, but the results were truly remarkable. How did you know that?\"\n\nJohn looked down at Calara, and asked, \"Have you got that picture you found of her?\"\n\nCalara nodded, pressed a couple of buttons on the Holo-reader, then showed it to the five naval officers. \"This was taken at Gabrielle's last medical,\" she explained.\n\nRicardo Santini shook his head as he blurted out, \"She looks nothing like that now.\"\n\n\"What does she look like?\" John asked him intently.\n\nRicardo glanced at Jayanti, then shrugged, and replied, \"She looks stunning. Gabrielle's lost about forty pounds and looks at least twenty years younger. I didn't recognise her when she came back from her vacation.\"\n\nJohn shared a meaningful glance with Calara, both of them nodding as his suspicions were confirmed. He turned back to Ricardo Santini and asked, \"Vacation? When did this happen?\"\n\nSantini frowned as he thought back, and then replied, \"It was several months ago, about the time diplomatic relations with the Kintark broke down. Gabrielle was supposed to deploy to the Dragon March, but she claimed she had something personal to attend to. She extended her vacation for another week, delaying her deployment, and I remember being pissed-off because I had to cover for her. When she finally joined me and Norwood, I was expecting her to be a dumpy old broad, and she turned out to be a stone cold fox.\"",
        "Jayanti rolled her eyes, and tutted as she said sarcastically, \"How charming, Ricardo.\"\n\nEdwin Caldwell was studying John with a watchful eye, and he'd noticed the silent exchange between John and Calara. He noted shrewdly, \"You don't look surprised by this in the least. Why is Gabrielle's change in appearance significant?\"\n\n*Shit,* John swore, as he contacted his two Matriarchs. *What do I say here?*\n\n*You could just lie your arse off,* Alyssa quickly replied. *Tell them she's been attacked by some kind of toxin that the Kintark developed. It makes her look younger, but allows them to control her mind.*\n\nEdraele paused a moment, before she said, *It might be prudent to simply tell them the truth, or a limited form of it at least. I think you need to make a decision on how close an ally you want to be with the Terran Federation.*\n\nJohn stood there for a long moment appraising the Fleet Admiral and four Admirals who were sitting and watching him silently. They felt like small children under that intense gaze, squirming to avoid such close scrutiny. Everyone in the room could feel that shift in perspective, and they stared up at him with wide eyes at the realisation.\n\n\"What are you?\" Jayanti asked him with no small amount of trepidation. \"I read your record, and I know you're not fully Terran, but I forgot about it until now.\"\n\n\"My mother was Terran,\" John replied in a calm voice. \"My father wasn't.\"\n\nFleet Admiral Buckingham looked at him apprehensively, and asked, \"You know a lot more about what's happening with Lynton and Norwood don't you?\"\n\nJohn looked at him, and nodded as he replied, \"There's a lot of things happening that aren't all they appear to be on the surface.\" He gestured towards the corner of the office, and the holographic representations of the Kintark empire. Staring at the clearly marked invasion corridor he continued, \"I'm starting to suspect you were being drawn into a trap with this invasion, but after Calara figured out Norwood's involvement, we disrupted their plans.\"\n\nAdmiral Weber shook his head and asked, \"Why would Norwood and Lynton betray their own species to the Kintark though? It doesn't make any sense...\" \n\n\"I'm not sure how Norwood's involved exactly, but Lynton's been coerced into this, and not by the Kintark,\" he replied.\n\n\"By who then?\" Jayanti asked \n\nJohn took a deep breath before exhaling, realising this was going to be a decisive moment for good or ill. He looked at them each in turn, and said, \"There are many species out there in the galaxy, and I'm sure you realise that there are some that aren't yet known to humanity.\"\n\nFleet Admiral Buckingham nodded slowly, and said, \"Yes, I'm sure that's true. The galaxy is vast, and we've only mapped part of it.\"\n\nJohn then said, \"Out of those species, it's only logical that there are older civilisations than ours, which predate the Terran Federation by millenia.\"\n\nHis audience nodded slowly, the tension in the room ratcheting up a few notches. \n\nFleet Admiral Buckingham looked deeply troubled as he asked, \"You suspect an older, hostile species is threatening the Terran Federation?\"\n\n\"One individual at least, and he seems to be stirring up trouble all over the place,\" John replied as he thought back over their recent experiences. \"He was working with the Drakkar to disrupt the Ashanath, and was backing a rebellion amongst the Trankarans which would have led to civil war.\"\n\n\"Would have?\" Edwin Caldwell asked, picking up on the past tense.\n\nJohn nodded, and replied, \"Yes, but I took steps to assist the Trankaran government, and helped them stop the rebellion before it got too much momentum.\"\n\nThe Admirals were stunned by these revelations, and were staring at John as though seeing him for the first time. \n\n\"Who is it that's attacking us and why?\" Buckingham asked, his face creased with worry.\n\n\"The Ashanath know them as Progenitors, and they ruled this part of the galaxy before disappearing about ten thousand years ago. I don't know the name of the one causing all these problems, but they're a race of evil tyrants, who seem to have no qualms about exterminating civilisations. There was a Quantum Accelerator built into the moon, placed there to destroy humanity. The AI we destroyed was trying to activate it,\" he explained, causing a few gasps of shock.\n\nAfter a long moment of deathly silence, Jayanti asked him perceptively, \"Your father was one of these Progenitors?\" \n\n\"Yes, I suspect so,\" John replied. \"However, I grew up with Terran grandparents, and joined the military because I'm loyal to the Terran Federation.\" \n\n\"Are you?\" Carl Weber asked him bluntly. There was no antagonism in his voice this time, it had been replaced by an undercurrent of fear.\n\nJohn straightened himself, and said, \"Believe me, I'm on your side; against the Kintark, and this Progenitor. If you want to just go it alone, I have other options, and I can pull out of Terran Space. I like humanity though, and I don't want to see you get wiped out or enslaved.\"\n\n\"What are you asking us to do?\" Buckingham asked him, staring directly into John's eyes as if trying to gauge what kind of a person he was.\n\nGlancing at the map again, John said in quiet voice, \"Call off this invasion, and pull back to Terran Federation territory. Something feels terribly wrong about all of this, but I haven't been able to narrow it down yet.\"\n\n\"But we're finally getting the upper hand!\" Ricardo Santini protested. \"We just decisively won a major fleet engagement against the Kintark. We have them on the ropes!\"\n\nSlowly shaking his head, John replied, \"When we hit the supply station in the Mar'Katrach nebula, there were over a hundred-thousand troops in invasion craft waiting there. We destroyed the fleet defending the nebula, but a massive armada was approaching. I think they were about to launch a counter-offensive.\"\n\n\"You wiped out an invasion fleet?\" Santini asked, his eyes as big as saucers.\n\n\"We crippled the invasion craft, but we didn't slaughter the soldiers. The logistics of trying to rescue all those troops in the nebula will keep the Kintark Empire busy for days, if not weeks,\" John explained patiently. He turned to look directly at Buckingham, and added, \"Besides that, if Admiral Lynton's working against you, which I suspect she is, then you've got an enemy threatening your rear.\"\n\nBuckingham slumped back in his chair, his expression one of fear as he said, \"You're right, we're massively exposed here. Until we get our house in order, we'll have to withdraw from Kintark territory.\"\n\nSantini started to object, saying, \"We just smashed the Kintark! I'm sure we can handle anything they try and throw at us. Give us a few more weeks, and we'll be toasting our victory on the surface of Kinta itself!\"\n\nJayanti Mishra sat bolt upright, and exclaimed, \"Didn't you listen to a goddamn word John just told us? If the Kintark hit our supply lines, we'd be totally fucked! There'd be no reinforcements, because GABRIELLE'S ON THEIR SIDE!\"\n\nBuckingham stood up abruptly, and said to his Admirals in a no-nonsense tone, \"Get back to your ships, and make preparations for an immediate withdrawal. We'll make an orderly retreat to the Dragon March, and deal with Lynton, and any associates she might have.\"\n\nThe officers rose shakily to their feet, darting worried looks at one another, before they began to exit the room. Jayanti Mishra paused by John's side as she walked past him, and said quietly, \"Thank you for warning us. I realise now that you didn't have to.\"\n\nHe smiled at her, and said, \"I'm on your side, Jayanti. I don't want any harm to come to the Terran Federation.\"\n\nShe patted his arm, and smiled at him gratefully before she followed Admirals Weber and Santini out of the room. Soon it was just Admiral Caldwell left with Fleet Admiral Buckingham. The Fleet Admiral looked like he'd aged about ten years, and he looked at Caldwell with tired eyes as he said, \"You better get the Zeus prepped for withdrawal, Edwin.\"\n\nCaldwell nodded, and looking at John, he said, \"I'll take you back to the hangar so you can return to your ship.\"\n\n\"One moment, there's a couple of things I wanted to ask before I head back,\" John replied, turning towards Buckingham. \"Firstly, if you capture Gabrielle Lynton, can you hold off any executions until I've spoken with her. I need to find out more about the Progenitor threatening us, and she's the best lead I have at the moment.\"\n\n\"Don't worry, John, we can find out what she knows,\" Buckingham replied grimly.\n\nShaking his head, John said, \"I know you want answers, but please leave the interrogation to me. I can find out everything she knows very quickly, and she won't be able to lie to us.\"\n\nThe older man studied him for a moment, then nodded, saying, \"Alright, that seems like a reasonable request. As long as you conduct your interrogation in a Terran Federation facility and tell us everything she tells you, I have no problem with that. What else?\"\n\nGlancing at the Latina by his side, John went on, \"Calara's father and brother are part of this invasion fleet. We've seen the Damocles, so I'm sure Captain Jack Fernandez is fine, but we haven't seen her brother's ship. Lieutenant Commander Mateo Fernandez is serving as a Navigator on the Hydra.\"\n\nBuckingham's jaw clenched, and he glanced at Calara as he said, \"I'm sorry, but your brother is a traitor. The Hydra was one of the ships that joined Norwood and turned on the loyal Federation ships in his fleet.\"\n\nCalara gasped in shock, and shaking her head furiously, she balked, \"No! Not Mateo! He loves the Terran Federation, I know he's loyal.\"\n\nTurning away from them, the Fleet Admiral strode over to his desk, then hit several buttons on a keyboard, bringing up a list of the vessels attached to Norwood's Battlegroup. Sure enough, the Hydra was listed there in a bright green font. \n\n\"A couple of the destroyers making up the picket forces managed to escape the massacre,\" Buckingham informed them, his eyes like flint. \"The Captain of the Rhode submitted an AAR, and he stated that it was bombers from the Hydra that crippled the battlecruiser Selene, preventing its escape from Norwood's dreadnought.\"\n\nCalara shook her head in despair, still unwilling to believe her brother could turn on his comrades like that. John put his arm around the distraught young woman, then nodded to Admiral Caldwell to lead them out. As he turned to leave, Fleet Admiral Buckingham walked over to join them, and placed a hand on John's shoulder making him pause for a moment.\n\n\"I won't forget you coming to warn us like this, John,\" he said gratefully. \"Thank you. Not just from me, but the thousands of Terran personnel in this fleet.\"\n\n\"You're welcome, Vincent,\" John replied. \"I'm sorry we only got to meet under such dire circumstances.\"\n\nThe Fleet Admiral smiled at him, and said, \"When we're back in the Dragon March, you and I must have a chat sometime.\"\n\nJohn nodded to him courteously, and replied, \"Agreed.\"\n\nBuckingham turned back to his desk, leaving John and Calara to follow Admiral Caldwell from the room. Caldwell glanced at them as soon as he'd closed the door behind them, then looked over at Rear Admiral Carmela Morena who was sitting behind her desk.\n\n\"Carmela, please can you inform my XO that we'll be making preparations to leave Delta-Draconis. I'll be heading up to the Bridge in a few minutes to discuss our flight path,\" he requested politely.\n\nShe rose to her feet, and replied, \"Certainly, Sir, I'll do so immediately.\" With a final glower at John, she sauntered out of the reception room, her heels clicking as she left.\n\nAs soon as she'd left, Admiral Caldwell turned to look at Calara, and his voice was kind as he said, \"I've served with your father for nearly ten years, and he's an outstanding officer. I don't believe for one moment that any child of Jack Fernandez would ever turn on the Terran Federation.\" \n\nShe gave him a wan smile, but she sounded upset as she replied, \"I saw the Hydra on the Fleet Admiral's list. I know Mateo wouldn't turn traitor, but they might have killed him and other loyal officers to prevent a mutiny against the captain!\"\n\nAdmiral Caldwell's expression was bleak as he said, \"That's very true, and probably what happened. There is a remote chance that they held the loyal officers captive, and handed them over to the Kintark as prisoners of war. Unfortunately that might be even worse...\"\n\n\"If he's still alive, how could that be worse!\" Calara exclaimed, her eyes full of hope. \"Can't you arrange a prisoner exchange, and get him back?\"\n\nHe shook his head sadly, and said, \"The Kintark use prisoners as slave labour. The chance of being able to bring him safely home is non-existent.\"\n\nHer face fell as her hopes were dashed once again, and she leaned into John for support. He held her close, then looked at Admiral Caldwell who had a pained expression on his face, feeling nothing but sympathy for the upset young woman.\n\nSupporting her with a comforting arm, John said, \"Don't worry honey, if he's still alive, we'll get him back.\" Turning to look at the Admiral, he continued, \"Do you know where these slave labour camps are located? If Mateo's been captured, then we'll just bust him out.\"\n\nEdwin shook his head, and replied, \"It's far too dangerous, John. If he's still alive, he'll have been taken to the sulphur mines at Xen-Nuchek, but they're over a days' travel into Kintark Space! You heard the Admiral, the invasion fleet is withdrawing just as you asked. We can't launch a strike at Xen-Nuchek now!\"\n\nJohn shook his head, and replied, \"No, the fleet needs to withdraw. I'll take the Invictus, and we'll go and free him.\"\n\nThe Admiral was shocked for a moment, then he chuckled as he said, \"I'm not sure why I'm surprised, not after what you've pulled off already.\" \n\nHe walked over to Carmela's now vacant desk, and beckoned John and Calara over. His hands moved quickly over the keyboard as he stood behind the console, and after a few dozen clicks, he brought up the local sector map showing Kintark Space.\n\n\"We've had intel that Terran Federation prisoners are being taken there,\" he said, stabbing a finger down on a green planet some distance into Kintark Space. He frowned as he added, \"It was a volcanic planet, but the Kintark partially terraformed it into one of their jungle worlds. It's a nasty place, John. Extended exposure to the sulphur is fatal, so the Lizards are always eager to get more slaves.\"\n\n\"Thanks for the help, Edwin, I appreciate it,\" John replied. \n\nAdmiral Caldwell frowned and said, \"You've got balls going after him, but I don't want to send you off to your deaths. Are you sure I can't talk you out of this?\"\n\nJohn shook his head, and replied flippantly, \"The girls haven't seen much of Kintark Space, and I promised my XO I'd show her around the galaxy. I'm afraid my mind's made up.\"\n\nCaldwell laughed, and said, \"I better take you back to your ship then.\"\n\nHe led them out of the reception room, and then back down the corridor to the elevators. The officers using the corridor stepped aside as they approached, their eyes flicking to the Lion roaring on John's chest, then standing to attention and giving him a respectful salute. John and Calara were both feeling mentally drained after their meeting with the Admiralty, so they no longer reacted with surprise, and just nodded courteously to the navy personnel.\n\nIt didn't take long for Caldwell to lead them back to the Raptor in the wide-open hangar, and by the time they'd returned, the crowds had dispersed quite some time ago. Jade had been watching for their return, and she spotted them through the cockpit canopy, then waved cheerily as she began lowering the loading ramp. They strolled over to the ramp, then stopped as they waited for it to drop to the titanium decking.\n\n\"Good luck, John,\" Caldwell said, his expression sombre. \"I'd say 'I hope you don't need it', but I know you will.\"\n\nJohn turned and saluted the older man, and said, \"I appreciated your support today. It made the meeting with the other senior officers easier, knowing that you were fighting in my corner.\"\n\nCaldwell stuck out his hand, and said, \"It's been an honour.\" John shook his outstretched hand, and when they were done, Edwin turned to Calara and added, \"I hope you find your brother.\"\n\nShe smiled at him gratefully, and said, \"Thanks to you, Sir, we know where we can start looking.\"\n\nCalara gave him a respectful salute, and then walked up the ramp with John at her side. He hit the button once they were safely inside, then took her hand as he started walking towards the door at the back of the room, intending to return to the cockpit. There was a soft hiss as the loading ramp sealed into place, restoring the atmospheric seal on the Raptor. After the somewhat stale air aboard the Zeus, filling their lungs with the crisp clean air they had got used to on the Invictus was a wonderful feeling. \n\nShe tugged gently on John's hand, stopping him for a moment. When he turned to face her with a curious look on his face, she flung her slender arms around his neck, and stood on tiptoe as she kissed him fiercely. \"I never doubted for a moment that you'd offer to go after Mateo,\" she said, staring into his eyes. \"What did I ever do to deserve someone like you?\"\n\nHe smiled at her, and said, \"Honey, I'm dragging you and the girls into the middle of hostile alien territory. You must have been a very naughty girl in a previous life to end up being stuck with me.\"\n\nShe laughed, then leaned in and kissed him again, but gently this time. \"You can joke all you want, but I think you're amazing,\" she said earnestly.\n\n\"Likewise, gorgeous,\" he said to her, wrapping the beautiful girl in his arms.\n\nWhen they finally parted, and headed back up to the cockpit, John thought to Alyssa, *Hey, beautiful. Can you gather the girls, please? I need to discuss going off on a dangerous rescue mission into Kintark Space.*\n\n*Nah, there's no point,* she replied offhandedly. *I knew you'd want all the girls to pretend to think it over, before they all agreed to go and rescue Calara's brother. We've done that already to save time, and we're all raring to go. I've even plotted a course to Xen-Nuchek, so we can jump out as soon as you guys get back here. It'll take us just over nine hours until we arrive in the Zeta-Draconis system.*\n\nHe smiled as he sat down, wrapping an arm around Calara's shoulder, and said, *Thanks, honey, I appreciate the support from all of you.*\n\n*No problem,* she replied with a telepathic smile. Her tone turned more gloomy as she added, *What are the chances Mateo is still alive though? Would they really have taken him prisoner rather than just kill him and anyone else who objected to turning traitor?*\n\nJohn glanced out the cockpit canopy, and watched them sail clear of the Zeus' hangar, then replied, *I don't agree with Admiral Caldwell on this, I think it's more likely Mateo's alive than not. Convincing a crew to rebel against the Terran Federation is one thing, but getting them to slaughter any crewmates who object is something else. If I really thought he was dead, I wouldn't risk leading you and the girls into Kintark Space on a fool's errand.*\n\n*Hurry back,* she replied simply. *I've missed you.*\n\n***\n\nIt didn't seem to take long for them to return to the ship, and Jade landed the Raptor safely in the Hangar Bay. As the hull doors began to close behind them, she began the power down procedure for the gunship, both her hands flicking switches and pushing buttons as she shut down the Raptor. John and Calara waited patiently for her, and when she was done, they all dropped down in the grav-tube, then exited the Raptor via the front loading ramp. \n\n\"Shall we go up to the Bridge and contact the Damocles?\" John asked Calara, thinking about her father.",
        "Calara was about to agree, but she suddenly shook her head, and replied, \"If I speak to him now, I'm going to get too upset about Mateo. I'm only just keeping it together as it is. Besides, he'll be furious at you if you tell him we're heading deeper into Kintark Space.\"\n\nJohn remembered how protective Jack was over his daughter, and as they walked towards the grav-tube, he said, \"Excellent advice, Commander, let's speak to him later.\"\n\nShe smiled at him, and replied, \"Wise move, Rear Admiral.\"\n\nChecking his watch, John suddenly realised how late it was, so he said, \"Time for bed, girls. I'll join you shortly.\" \n\nCalara and Jade stepped out of the grav-tube on Deck Two, then waved him goodbye before they disappeared out of sight, as he rose up to the Command Deck. Irillith, Dana, Rachel, and Faye were up on the Bridge, and they looked up from their work and smiled at him when they saw him arrive.\n\n\"Time for bed girls,\" he said to them firmly. \"I want everyone well rested before we hit Xen-Nuchek.\"\n\nThey rose obediently from their stations, with Irillith looking back regretfully at her unfinished work before heading to the grav-tube. \n\n\"Don't worry! I'll continue trying to break the encryption,\" Faye said with a happy smile on her face. \"It'll give me something to do while I'm on watch.\"\n\nIrillith smiled at her fondly, and said, \"I appreciate it, little pixie, thank you.\"\n\nThe Maliri girl waited until John had given Rachel a goodnight kiss, then stepped in for one of her own, before following the brunette and redhead into the grav-tube. That left only John and Faye on the Bridge, and he looked at her curiously, and was about to ask her a question, when Faye suddenly grinned at him.\n\n\"You were going to ask 'Where's Alyssa?', weren't you?\" she asked him with a cute grin. \n\nJohn smiled at her, and replied, \"Been working on your telepathy, Faye?\"\n\nShe shook her head energetically, sending her dark purple hair swirling about, and replied, \"That one was all too predictable. You had an eighty-nine percent chance of asking me for her location.\"\n\nHe laughed and said, \"It sounds like you're getting to know me all too well. What was the other eleven percent chance?\"\n\nThe tiny purple sprite zipped around in the air, and replied, \"You had an six percent chance of asking how I was doing, and I predicted a four percent chance of asking about Sakura. The other options were too unlikely to amount to a single percentage point.\"\n\nHe felt bad now, and he said, \"Six percent chance makes it sound like I'm neglecting you. I'm sorry you feel like that. Are you alright, Faye?\"\n\n\"Oh I don't, not at all!\" she replied with a huge grin on her face. \"I estimated I had an eighty-four percent chance of you asking after me, once you'd found out Alyssa's location, and well... here we are!\"\n\nHe laughed, and said, \"Maybe I should start getting you to predict the lottery numbers. I wouldn't need to bother trading any more!\"\n\nShe giggled, and said, \"I'd look into it, but I'm busy at the moment I'm afraid. I'll be keeping one eye on the ship's long range scans, and the other on decrypting Lynton's message to Norwood.\"\n\n\"Keep up the good work, short stuff,\" he said to her affectionately.\n\nShe pouted, and asked, \"I thought you liked me being little and cute?\"\n\nHe nodded, and replied, \"I do, you're quite adorable.\"\n\nFaye laughed with delight, and said, \"It's brilliant having you back aboard again. I can't banter like this with any of the others.\"\n\n\"I was only gone a few hours,\" he protested with a smile.\n\n\"It felt like ages!\" she groaned, then waved him goodbye as she turned her attention back to her console. \n\nHe paused, then said, \"Err Faye, where was Alyssa again?\"\n\nShe giggled, covering her mouth with her tiny hand, and replied, \"Oops, sorry! She's waiting for you in the Ready Room.\" \n\nHe shook his head in amusement as he waved the jovial little pixie goodbye, then strolled over to the door to his Ready Room. When he hit the button to open the door, he was surprised to find it was dark in the room, making the view from the big window along one wall even more dramatic. They were in hyper-warp now, and the Invictus was surging past system after system as they plunged deeper into Kintark Space. Light from the stars, and a broad spectrum of different coloured nebulae flashed by, briefly illuminating the room as they did so in greens, blues and reds. \n\nJohn suddenly spotted Alyssa sitting in the big chair behind his desk, and he was surprised to find her staring distractedly out the window. \"Are you okay, honey?\" he called out to her with concern.\n\nShe turned away from the window to give him a sad smile, and replied, \"Sorry, I was miles away. Speaking to Sakura just dredged up some painful memories.\"\n\nHe strode over to her, and asked, \"What were you thinking about?\" He opened his arms for a hug, and she immediately rose from the chair, and accepted his embrace.\n\nAlyssa hugged him again, leaning into him for support, and after a long pause she replied, \"I can still remember when they told me my father had died in that mining accident. It happened twelve years ago now, but it feels like it happened yesterday.\"\n\nJohn stroked her back, and said in a quiet voice, \"You've never really spoken about him before. Do you remember much about him?\"\n\nShe lifted her head so she could look into his eyes, and said, \"I can remember everything that happened when the foreman came to tell me he'd died, but I'm finding it harder to actually remember my dad. How fucked up is that?\"\n\n\"You were only young, don't be so hard on yourself,\" he replied, stroking her back in long comforting circles.\n\nShe let out a forlorn sigh, then hugged him tightly. When she spoke again, her voice was full of emotion as she whispered, \"I think after my mother died, my dad's spark guttered out too. He worked as hard as he could, but he had medical debts to pay off from the delivery, and we were always broke. I just remember him always being weary and sad. I wanted to cheer him up, but nothing I tried seemed to work.\"\n\n\"I'm sorry you lost your parents,\" he said gently as he held her in his arms. \"I know they'd be very proud of the incredible woman you've grown into.\"\n\nHer shoulders began to tremble as she started to cry, and she mumbled, \"Would they? Everything I am now, you've done for me. I can't claim credit for any of that. Before I met you, I was hardly a success story!\"\n\nHe shook his head, and replied, \"Just think how much Calara's achieved since she joined us. Even if you ignore how she's carried us through one lopsided space battle after another, she found that pirate base, the Drakkar for the Ashanath, then sniffed out the Dragon March traitors. I might have made her a bit smarter, but she did all that on her own.\"\n\n\"Yeah, but that's different,\" Alyssa murmured. \"She's amazing.\"\n\nJohn was firm as he continued, \"Dana with all the tech, Rachel unlocking all these secrets in our DNA, Jade developing all her abilities, Irillith with her hacking... You helped me recruit all these girls, then you nurtured them and helped them grow strong. Our wonderful family is all a testimony to your hard work.\" He laughed as he added, \"I'm just here to keep everyone topped up!\"\n\nShe laughed then hiccupped as she drew in her breath. Squeezing him tighter, she said, \"Thank you for saying that, I do feel better.\"\n\nHe waited until her hiccups had receded, then reached down so he could lift her chin. She didn't resist as he tilted up her beautiful face so she was staring into his eyes, and said, \"I really mean it, I'm not just giving you meaningless platitudes. Your parents would be bursting with pride at what you've achieved.\" He paused as he gazed into her sparkling cerulean eyes, and said, \"You help me lead our little group, and we've saved billions of lives. You're truly remarkable, and your mother and father would be in awe of their daughter.\"\n\nFresh tears trickled down her cheeks, and she clung to him, burying her face in his shoulder. John wasn't worried now, he knew these were happy tears. He just held her as she wept for her lost parents, her only regret now that she wasn't able to share her joy and sense of pride with them. Eventually her tears dried up, and she pulled back from him, with a wistful smile on her face.\n\n\"You're a silver-tongued devil, you know that, right?\" she said with a loving smile on her face.\n\nHe smiled at her, and replied, \"It's easy when you're just telling the truth.\"\n\nShe chuckled, then suddenly frowned as she noticed the wet tear marks on his once pristine white jacket, and said with irritation, \"We'll have to get the cleaning bots to tidy that up. I didn't spend all that time on your new uniform to go and mess it up by blubbing all over it!\"\n\n\"You did a lovely job,\" he said appreciatively as he stroked her back. \"You should have seen the crowds cheering for us, they loved the outfits.\"\n\nAlyssa smiled as she traced her fingers over the image of the Lion across his chest, and said, \"Symbols are important. They give people hope.\"\n\nHe looked at her curiously, and asked, \"What symbol gives you hope?\"\n\nShe gazed up at him as her fingers brushed down his chest, until they slid under his jacket, and ran over his resting cock. \"Your big dick,\" she smirked. \"When I see it get nice and hard, I hope I'm going to see you stuffing it into a sexy girl.\"\n\nHe laughed uproariously at that, and said, \"That wasn't quite what I meant, but good answer nonetheless.\"\n\nShe grinned at him until her expression softened, and she said quietly, \"Thank you for saying those things. I can't tell you how good it felt to hear that.\"\n\nHe smiled back at her, and said, \"I love you, and I meant every word.\"\n\nAlyssa gave him a tender kiss before she relaxed, and said, \"Talking of sexy girls, Sakura's down in her room.\"\n\nJohn narrowed his eyes as he looked at her, and asked, \"Just what were you chatting to her about this evening, anyway?\"\n\n\"Everything,\" Alyssa replied with a shrug. \"I think she should join our group, so I told her all about us.\"\n\nHe frowned, and said, \"I don't think that's a good idea, honey.\"\n\nShe met his gaze again, and said firmly, \"I do. She's a good fit for our little group. We can help her deal with everything that's been done to her, and she can help us too.\"\n\nJohn looked puzzled and replied, \"Just what kind of role are you imagining for Sakura? I'm hardly going to start sending her off on assassinations!\"\n\nAlyssa ran her finger over the bare skin on his neck, her fingers soft and playful, as they traced shapes known only to her over his flesh. \"I think she could fill two important gaps in our crew,\" she replied, her voice serious now.\n\n\"Like what?\" he asked her curiously.\n\nShe stared into his eyes as she replied, \"Well, we haven't got a girl with black hair yet, and she's a sexy Asian girl, which could be fun too!\"\n\nHe shook his head with amusement, then said, \"Come on, this is serious. We're talking about Sakura's future here.\"\n\nAlyssa shrugged, and said, \"As I mentioned before, we're ideally placed to help her deal with everything she's been through. Sakura's lost her parents, so she's an orphan now, just like both of us. She's got no friends or support network, and she's seventy-five years out of her time. What kind of a life has she got to go back to now? Yes, you could have partially wiped her memories to help her forget and start over, but is it really fair to tamper with her mind again?\"\n\nJohn nodded thoughtfully, then he asked, \"What role though? I'm not sure we need a ship's lawyer, and after her outburst earlier, I can't exactly see her sitting the bar exam. With all her implants gone, she's just back to being a normal, regular girl now.\"\n\nShe shrugged, and suggested, \"Security Chief? Even though she doesn't have the implants any longer, she still has all those memories. That's a lot of experience to draw from to help us lock down the Invictus, and prevent anyone else from sneaking aboard.\" \n\n\"That's actually a good point,\" John conceded. \"We can't afford to let that happen again, and she could really be a big help.\"\n\nAlyssa smiled, then said knowingly, \"More importantly, don't even bother pretending you don't find her attractive. We both know she's beautiful.\"\n\n\"I'm sleeping with six stunningly attractive women already,\" John said with a smile. \"I'm not exactly in any desperate hurry to extend our group.\"\n\nShe gave him a sparkling smile, and said, \"Speaking of which, I'll go and join the girls you ordered to bed. I hope you'll be joining us soon?\"\n\n\"Why wouldn't I be?\" he asked her in confusion.\n\n\"Well Sakura's waiting for your downstairs. She's in the Officers' Quarters next to Rachel's room, so go and have a chat with her before you come to bed,\" she said with an alluring smile.\n\nHe nodded, and said, \"Sounds like a reasonable request to me.\"\n\nOffering her his arm, they walked out of his Ready Room side-by-side, then headed down to Deck Two. Sakura's new room was next to Rachel's quarters, and was the first occupied room on the left side of the corridor. When John drew level with the door, he stopped outside, and pulled Alyssa towards him for a quick kiss. When he let her go, she flounced down the corridor, giving him a flirtatious glance over her shoulder before she disappeared into their bedroom. He chuckled quietly to himself, then turned to Sakura's door, and knocked lightly to avoid waking her up if she'd already fallen asleep.\n\n\"Come in!\" she called out to him, answering the question of whether she was still awake.\n\nJohn pressed the button by the door, and it swished open, revealing the dimly lit room. Sakura was in bed, tucked up under the covers, and the only illumination in the room came from the soft glow from a lamp, attached to the cabinet by the side of the bed.\n\n\"Oh, I'm sorry,\" he apologised. \"I don't want to disturb you.\"\n\nShe shook her head, and sat up, revealing that she was wearing one of Calara's old t-shirts as pyjamas. \"It's fine, honestly. I wasn't asleep yet, anyway,\" she replied, beckoning him into the room.\n\nHe walked inside, suddenly feeling self-conscious at being inside the girl's bedroom, and feeling like he was invading her space. \"I just wanted to check on you, and make sure you had everything you needed,\" he explained, smiling at her in what he hoped was an unthreatening manner.\n\nShe watched his apparent discomfort in surprise, then feeling more confident, she smiled shyly at him and patted the side of the bed. Following her invitation, he walked over to her, and sat where she had indicated. He was suddenly aware that he was still wearing his full dress uniform, and he deftly removed his peaked cap, putting it down on the end of the bed. \n\n\"Alyssa's been wonderful,\" Sakura replied, a little smile teasing her lips. \"She's given me everything I'll need.\"\n\n\"I'm glad she's been looking after you. She's a good girl,\" John agreed. He hesitated for a moment before he added, \"Actually, she suggested I come and speak to you before I go to bed. Was there something you wanted to talk to me about?\"\n\nShe nodded, and looked nervous for a moment before she replied, her tone quiet and earnest, \"I wanted to say thank you for everything you've done for me already. You were under no obligation to help, especially after everything Shinatobe did to you. Despite that, you've removed all those horrible implants, then fully healed me, and I know it took considerable effort from you.\"\n\nHe smiled at her more easily now, and said, \"You're very welcome. When Alyssa told me what had happened to you, I just saw an opportunity to right a terrible wrong.\"\n\nSakura gazed up at him, then peeled back the duvet, revealing her lithe, golden-brown legs. As he watched in surprise, she knelt at his side, and her dark-brown eyes stared into his as she said, \"No matter what happens in the future, I'll always be eternally grateful to you.\" \n\nThey were only sitting a few inches apart now, and as she knelt beside him, looking small and vulnerable, John instinctively opened his arms to her. She smiled at him in gratitude, then leaned in, pressing her small breasts against the ornate stitching of the golden lion on his chest, while wrapping her slender arms around him. He embraced her too, gently stroking her back, and enjoying the feeling of protectiveness he felt towards her.\n\nIt felt strange but very enjoyable, holding her in his arms like that. Sakura was a slim girl, especially compared to the spectacular athletic physiques that all the other girls shared, and he felt like he had to handle her with care. She obviously felt safe in his arms, as she made no attempt to pull away, instead tucking her head under his chin and snuggling in against him. \n\nHe lost track of time holding her like that, so it was only when he felt her body relax, and heard her breathing grow deeper that he realised she'd fallen asleep. He was touched that she trusted him enough to go to sleep in his arms, and he gently lay her back on the bed, before tucking her up under the covers. She rolled over onto her side facing him, and in doing so, some of her jet-black hair fell over her face. He brushed it back carefully, and the light touch made her stir in her sleep.\n\n\"Need to talk, 'bout something...\" she murmured drowsily.\n\nJohn got off the bed, then squatted down beside it so that he was at eye level with her, and whispered in reply, \"You've had a busy and stressful day Sakura. Get some sleep, and I promise we'll talk in the morning.\"\n\n\"'kay,\" she mumbled, dropping into a deeper sleep.\n\nRetrieving his white hat from the bed, he stood up straight, then crept out of the room, being careful not to make any noise and risk disturbing her any further. The door to her room closed behind him, and he walked down the corridor with a satisfied smile on his face. It was rewarding to know he was helping her, and he hoped they'd be able to set her on the path for a bright future that she'd be happy with.\n\nWhen he strolled into the bedroom, he was brought out of his quiet contemplation by the electric atmosphere in the room. The girls were all in bed, but they were watching him attentively, and he couldn't help feeling like he was missing something. Alyssa was on the far edge of the bed, and she slipped out of the covers, then glided over to meet him. She was totally nude of course, but as he had come to expect, she lacked any trace of self-consciousness at being completely naked.\n\n\"You were lovely with Sakura,\" she said, smiling at him affectionately. She leaned in and gave him a kiss, then continued, \"Let's get you out of that uniform and into the shower.\"\n\nHe threw a curious glance at the other girls, but they were all warm smiles and inviting looks. Somewhat wary, he followed Alyssa into the walk-in wardrobe, where she helped him quickly remove his white uniform. \"I feel like I'm missing something,\" he said with a degree of caution.\n\nShe ignored him for the moment, turning her attention to one of the cleaning robots. It was already there waiting, and Alyssa handed over the pile of clothes as she said, \"Now be careful with that. No deviating from my instructions, I don't want it getting damaged!\"\n\nThe cleaning robot let out a cheerful beep as it accepted the clothes; though John had heard the bots emit that sound before, he could have sworn it sounded a bit indignant this time. It spun on the spot, then glided out of the wardrobe, his new uniform carried securely in the clothes hamper on its back.\n\nAlyssa watched it leave, then smiled at him as she held out her hand, and said, \"Let's go and have a nice warm shower. If you ask nicely, I'll even give you a massage while we get you cleaned up.\"\n\nHe took her hand, and let her lead him into the bathroom, but he eyed her suspiciously as he asked, \"What're you up to now, you little vixen?\"\n\nShe laughed as they entered the shower cubicle, and activated the water jets with a quick press of a button. \"Don't I always show you a good time?\" she asked him, with a playful quirk of her eyebrow.",
        "He couldn't argue with that, and so he smiled at her as she leaned in and gave him a tender kiss on the cheek. Alyssa moved behind him after that, then began to massage his shoulders as he stood under the streams of water. Jade had taught her well, and she kneaded his muscles with an expert touch. \n\nJohn had a lot on his mind at the moment, and his thoughts started whirling with all the different things he needed to take care of. His most pressing concern was rescuing Mateo, but he still had the Dragon March traitors to worry about, let alone the wider Kintark conflict that had escalated into an all out war. Lurking behind recent events was the constant threat posed by this mysterious Progenitor, which John knew he'd have to try and confront someday.\n\nHe still needed to figure out what to do with Sakura, and thinking about her reminded him of a myriad of other items he had to take care of, like hunting down this Master Assassin. There were lots of questions he still had to ask Athena, he wanted to speak to Jack too, and they needed to track down, then rescue Tashana for Irillith. While they were near Maliri Space he was planning on visiting Edraele again, and he had to allow plenty of time to upgrade the Invictus with the new Progenitor tech that Dana had discovered. The girls were researching a variety of intriguing items, like the Unity files from Nexus, this encrypted message from Lynton, and the project for Faye, so he reminded himself to check on their current progress. \n\nHe was sure there were a few other things that had slipped his mind, but as he struggled to remember what they were, Alyssa pressed her firm breasts into his back and whispered in his ear, \"Shh, just switch off and forget about all that for now.\"\n\nHe soon began to relax under her careful ministrations, letting his cares flow away as he focused on her warm body and deft fingers. \"That feels amazing...\" he said with a blissful groan. With a light chuckle he exclaimed, \"Rescuing Jade was the best thing we ever did!\"\n\n\"Yeah, that sexy Nymph's a marvel,\" Alyssa agreed as she worked his muscles, pleased that he was enjoying her efforts. He heard her amusement as she added, \"And speak of the devil...\"\n\nA second pair of hand began to glide over his pectoral muscles, and when he opened his eyes, he saw a pair of shining emerald orbs staring back at him. Jade grinned at him and said, \"It looks like my student's been doing a good job.\" \n\n\"Definitely,\" he agreed, wrapping the beautiful green-skinned girl in his arms.\n\nAlyssa leaned in too, so he was surrounded by pliant flesh, and she kissed his ear before she said, \"Now I know she's hot, but don't start screwing her in the shower. I've got a special surprise for you in just a few minutes.\"\n\nJohn laughed, and replied, \"I knew you were planning something!\"\n\nShe had a big smile on her face as she kissed him again, then startled him with a firm smack on the rump. \"No fucking!\" she cautioned him with a giggle, and she quickly darted out of tickle range, then left the shower.\n\nJade smiled at him, and said, \"I can't really massage you while you've got me in a bearhug. Do you want me to take over from her?\"\n\nHe shook his head, and replied, \"No, this is nice.\"\n\nThe green-skinned girl nodded her agreement, and began to stroke his back with her nimble fingers. She looked at him with adoring eyes, and said, \"Seeing all those people cheering for you was very exciting. It reminded me of the award ceremony at Olympus.\"\n\n\"They were cheering for you girls too,\" he replied with a grin. \"Considering how ridiculously hot you look in those uniforms, I'm sure you're all building up your own fanbase. A guy in the crowd proposed to Calara today!\"\n\nJade frowned, and said, \"You'd better hurry and stake your own claim then, Master. I'm looking forward to seeing her with your baby in her belly.\"\n\n\"Me too,\" he agreed. He gave Jade a loving kiss, and then added, \"Don't worry, I've been making plans.\"\n\n\"Wonderful,\" she said with a happy sigh, cuddling into him. \n\nThey stood like that for a couple of minutes, enjoying feeling the water cascading over their shoulders. Jade suddenly stood up straight, her head tilted as though listening to something.\n\n\"We're being summoned?\" John asked her with a playful smile.\n\nThe Nymph nodded, just as Alyssa's sultry voice echoed through his mind, saying, \"Your presence is required in the bedroom.\"\n\nHe shared a quick grin with Jade, and despite his protests earlier, he was intrigued to know what Alyssa was planning. He could see that Jade was in on the secret, but he knew better than to ask her. She'd feel compelled to tell him, and he didn't want her to get in trouble. They dried off quickly, using towels and the powerful air-driers to be finished in moments. Jade flashed him a brilliant smile, then walked with him, out into the bedroom.\n\nThe main lighting was out now, and the room was lit with the warm flickering light from dozens of candles instead. Someone had stripped off the duvet, and the girls were all waiting for him there, kneeling in a broad arc on the huge bed. The four Terran teenagers looked breathless with anticipation, but as he admired their spectacular young bodies, there was a conspicuous azure absence from the group. \n\n\"Where's Irillith?\" he asked them curiously.\n\nThey flashed him excited grins in return, and he saw several sets of eyes dart to the door. When he turned to look that way, the Maliri girl made her entrance into the room. She was wearing a high-necked long green dress, and a pair of ridiculously high heels, which gave her a defiant strut as she sauntered into the room. With Irillith in heels, and John now barefoot, she was actually taller than him by nearly an inch. Prowling his way with a predatory gleam in her eyes, she stopped only inches away, challenging him with a haughty look.\n\nJohn wasn't sure what she had in mind, but he sincerely hoped it didn't include a backhander from the formidable Maliri girl. Dressed as she was, he couldn't help reaching out to encircle her slim waist in his hands, and he enjoyed the feel of her firm body under his fingers. \"You look magnificent,\" he told her honestly, and his thickening cock provided plenty of evidence that he was telling the truth.\n\nShe stared at him, then said defiantly, \"Your Progenitor side once said that breaking me was going to be delicious. Have you broken me?\" \n\nHe shook his head, and replied, \"Absolutely not. You're an incredibly powerful, confident woman, who I love very much.\"\n\nHer expression softened immediately, and her angular violet eyes looked almost luminous as she gazed at him. She leaned down to plant a very light kiss on his lips, then whispered in a voice throbbing with emotion, \"You've never told me that before.\"\n\nBrushing her sky-blue cheek with his hand, he replied, \"I'm sorry. You deserve to hear that every day.\"\n\nA brilliant smile lit up her face, making her look breathtakingly beautiful. She stepped out of her heels, dropping down to her natural height, so that she was gazing up at him instead. He watched her curiously as she reached up to press a clasp on her back, and the dress unsealed, then fell from her shoulders, pooling at her feet. As the dress fell away, it left her entirely nude except for one very interesting piece of apparel. \n\nAround her graceful neck, she wore a sparkling white collar. John immediately recognised the material, and realised it had been fashioned out of Crystal Alyssium. It gleamed against her blue skin, setting off her long mane of flowing white hair that tumbled around her shoulders.\n\nShe smiled at him, but she was self-conscious now, as she said quietly, \"I'm so glad you didn't break me. Now I'm submitting to you voluntarily, it means so much more.\"\n\nHe tilted his head to one side as he stared at her, then reached up to stroke the back of his fingers down her throat. It immediately reminded her of the time when they'd collared her before, and she bit her full lower lip with arousal as she looked at him under her long lashes. \n\n\"The collar's beautiful, but it's not going to be very practical...\" he said, as he slowly traced his fingertips down her neck.\n\nShe nodded, then flushed a dark blue as she replied, \"I wasn't thinking of you using my throat tonight...\"\n\nHis eyes widened as he realised what she was offering him, and she nodded coyly when she saw that understanding in the lustful look he gave her. John smiled, and brought his hand lower, following the curves of her proud breasts then further down, until his fingers stroked over her light-blue navel. Pretending not to understand what she was referring to, he said, \"I love filling your womb. It reminds me how amazing it's going to be when you're carrying my baby.\" \n\nShe leaned into his hand, a doe-eyed expression crossing her stunning features as thoughts of blue babies filled her mind. With an act of iron willpower she managed to shake away the distracting thoughts, and replied with a sultry look, \"You know very well what I'm offering you.\"\n\nStepping closer to her, his throbbing cock pressed against her toned stomach as she leaned into him, and his hands moved around her to take a firm hold of her rounded cheeks. He squeezed them roughly, drawing a gasp from her, which turned into a hiss when he separated her buttocks, exposing her ass. \n\n\"I thought you were a good Maliri girl?\" he asked her playfully, his eyebrow raised. \"That sort of thing is forbidden isn't it?\"\n\nShe shook her head as she gazed at him with a lustful look, and replied, \"I've seen how much you enjoy taking the others like that, and I want to be a good girl for you, too.\"\n\nHe paused a moment, a sudden thought crossing his mind that he didn't want her to feel obligated into doing this. \n\nAlyssa's voice immediately sprang to life in his mind, saying, *She's been fantasising about this for weeks! You can see how much she wants it...\"\n\nHe studied the Maliri girl, and sure enough, she had a look of heartfelt longing in her eyes, and he could see how eager she was. He smiled at her, and said, \"You'd better get on the bed then, if you're going to show me what a good girl you are.\" When he saw her eyes flare with lust, he warned her, \"I'm feeling in a tender, romantic mood tonight, so if you're hoping for a pounding, you're going to be disappointed.\"\n\nA shy smile crept onto her face, and she gave him a loving kiss, before she turned away, and glided over to the bed. He watched her turn away from him, and his eyes immediately dropped to her gorgeous bottom. Just like the other girls, her cheeks were two perfect orbs, rounded and compact. He knew how amazing they would feel pressed up against his groin, with him buried inside her, and knowing that this was going to be her first time made his heart skip a beat.\n\nIrillith tossed her long hair over her shoulder and glanced back at him, immediately seeing where his eyes were drawn. She flushed with excitement, then climbed up on the bed as she headed over to the other girls. They all seemed to spring into action at once, with Calara giving Irillith a sensual smile before she lay down on her back, her head towards the foot of the bed. Alyssa sat astride her lover's waist, while Dana and Rachel both offered Irillith a hand, helping her straddle the accommodating Latina. \n\nJohn watched them move in fascination, and Alyssa smiled at him, as she explained, *We all offered to help, and asked Irillith whose face she wanted to ride. She's taken quite a shine to Calara.*\n\nHe heard a soft moan from the Maliri, and watched spellbound as Calara began to lap away at her pussy, making Irillith visibly tremble with arousal. More sucking noises filled the room, as Rachel and Dana each took hold of a firm breast and began to suckle on her nipples.\n\n*Which just leaves me,* Alyssa explained, leaning forward and passionately kissing the writhing girl.\n\nJohn flashed a glance at Jade, whose cat-like eyes were wide with lust. She saw his questioning look, and she smiled at him as she said quietly, \"There's no more room around her. I thought I'd suck your balls for you if that's alright? I want to know what they feel like in my mouth when you start cumming.\"\n\nHe stared at her in surprise, then grinned as he replied, \"I'm sure that'll be okay.\"\n\nTurning his attention back to Irillith, he walked over to the bed, then climbed on it behind her. She felt his weight as he approached, and she sat up a little, pulling away from Alyssa. Her back was arched in a long beautiful blue curve as she sat on Calara's face, the teen's tongue lapping away eagerly. Irillith was holding Rachel and Dana to her breasts, using them to support herself while they sucked noisily on her dark-blue nipples.\n\nHis cock throbbed with need, the urge to plunder her virgin depths a powerful aphrodisiac. If that wasn't bad enough, the wanton look of desire she shot him was more than enough encouragement. He grabbed her taut cheeks, and spread them wide, getting a clear look at Calara as she ate out the Maliri girl. He could see the Latina's liquid brown eyes flashing with lust as he edged closer, his cock leading the way.\n\nJade knelt at his side, and said, \"You hold her waist and keep her firmly in place. Let me guide you into her.\"\n\nIrillith let out a low moan when his strong hands grasped her waist, and he could feel her trembling with need. One of Jade's cool hands encircled his cock, and guided him closer while her other hand parted those cheeks again, exposing her dark-blue puckered hole. He could see her glistening with lube, before the blunt head of his cock nudged up against her, drawing an exciting hiss from the exotic girl. \n\nShe would be only the second gorgeous alien he'd buggered, and he had to admit, the thought of breaking her in was tremendously exciting. He strengthened his grip around her waist, then started to apply pressure with his hips. His huge shaft looked obscene against her slim body, but after all this time spent ravaging the Terran teens, he wasn't worried about her struggling to take him. \n\nHer anus unfurled around him, and Irillith arched her back further as she let out a disbelieving gasp. That delightfully snug passage wrapped around him like a second skin, and with the lube in place he was able to make steady progress inside her. He couldn't remember feeling anything so tight before, but she was a good girl, and relaxed her muscles the best she could, letting him fill her deepest depths. \n\nJohn was amazed as she took all of him in one go, and soon her tightly stretched ass was like a grasping band around the base of his shaft. The sensation was too much for her, and Irillith shrieked as she came, her plundered tunnel gripping him like a fist as she bucked underneath him. As he was holding her tightly, she could only thrash ineffectually while the three girls kept up the assault with their hot tongues.\n\nIrillith was now practically sitting upright, with him stuffed right up to the balls inside her, while she kept Dana and Rachel clamped to her breasts. John took one hand off her hip, then brushed it through her hair until he was able to curl his fingers around her throat. She whined with excitement, grinding herself back on him as he held her in place.\n\nHe pressed his lips to one of her pointed ears, and murmured, \"When I cum inside your ass, you'll be mine. I'll own you, just like all these other girls.\" Her eyes flashed open, staring at him intently, and he continued, \"That's what you want, isn't it? \n\nShe could only nod her head a fraction as she gazed at him in wide-eyed wonder, and whimpered as he pulled out about half his length before gently sheathing himself in her again. He was as good as his word, and although he kept her tightly restrained, he was very careful with her, letting her body adjust to being stretched in this way.\n\nThis kind of fucking was slow but very intimate, and she was practically panting with lust as he purposefully sodomised her. They both knew that after tonight he'd be taking her regularly like this, and she squealed at the thought, climaxing once again. Alyssa moved back into position, then slid her fingers down over Irillith's lower belly and began to stroke her clit while Calara focused on lapping away at her pussy. The Maliri girl rode a long chain of orgasms like that, coming down from one spectacular climax before immediately starting another, her eyes screwed up tight, and her mouth open wide in a wordless groan of pleasure.\n\nMeanwhile Jade hadn't been idle, and she somehow managed to open her jaw wide enough to take one of John's orange-sized balls into her mouth and suck on it gently. Her tongue was busy too, gliding over each orb lovingly, before she moved on to the next one. He held out as long as he could, but with Irillith's fantastically sexy moans, the tight grip on his cock, and Jade's adoring worship of his quad, holding out proved to be an impossible task. With one last thrust, impaling the sobbing girl right up to his balls, his cock lurched violently, and began to pump his load directly into her belly. \n\n*Such a good girl,* Alyssa praised her as she ran her hands over Irillith's growing abdomen. *He owns you now, just like the rest of us.*\n\nIrillith tensed and her eyes flashed open, bright violet light projecting outwards and illuminating the ceiling. Alyssa rocked back in surprise, but Dana and Rachel were unaware, and they continued to prop the Maliri girl up. Her quivering body expanded, willingly growing to accommodate four pints of cum being blasted into her, her tightly stretched blue skin rounding out to carry all that spunk. She felt unbelievably stuffed, and was floating on an orgasmic high as she took everything John could drive into her. Eventually he was totally spent, and he sank back on his haunches, reaching around her to caress her huge tummy. \n\n\"I've wanted to do that for so long,\" she said, tilting back her head so she could stare at him in awe. Her eyes were still glowing brightly, but no longer shining out a shimmering violet beam.\n\nJohn was shocked by her luminous eyes, but he blinked rapidly, then chuckled as he said, \"Me too. You've got a glorious ass.\"\n\nShe laughed, and finally released Dana and Rachel who grinned in excitement as they gave her swollen nipples one last kiss before backing away.\n\n\"Now comes the best part,\" Alyssa said with a grin, offering Irillith her hands. \n\nShe helped her off Calara, then everyone quickly rearranged themselves, with John lying on the bed, and Irillith half lying across him. Her rotund belly was pressed up against his side as she knelt beside him, resting her head on his chest and staring at him with a look of adoration on her face. Her angular eyes suddenly went wide as Jade knelt behind her, and began to go to work, hungrily sucking out every last drop of cum.\n\nIt didn't take long for the Nymph to fill her stomach, and soon they were lying together with Jade and Irillith on either side of John. While the trio in the middle were well satiated, the teens were rampantly horny after seeing Irillith take it in the ass. The Terran girls quickly paired off, and the enchanting sounds of four climaxing girls soon filled the bedroom, as the lovers licked each other to orgasm. Finally everyone was done, and they all collapsed together in bed, pulling up the duvet. \n\n\"I never dreamed it could be so good,\" Irillith said quietly, clinging on to John as though she never wanted to let him go.\n\nHe smiled at her and said, \"You were incredible, honey. Thank you for letting me be your first.\"\n\nShe returned his smile, and said, \"We've come a long way since that first meeting on Geniya station.\"\n\nJohn laughed, and replied, \"You'll get no complaints from me!\" Giving her a curious look, he added, \"What happened with your eyes at the end there? They started glowing brightly.\"\n\n\"They did?\" Irillith asked in surprise. Her attention was drawn to Jade, and the bright viridian lines of light that were pulsing out from her belly and spreading out around her body. She grinned and said, \"Us alien chicks do love your cum!\"",
        "They all laughed at that, and Alyssa quipped, \"I must admit, I think Terran girls quite like it too.\" \n\nThere were quiet murmurs of agreement from all the others, and they eventually began to settle down as they got more drowsy. Calara and Rachel climbed out of bed, then walked around the room, blowing out all the candles before snuggling under the covers once again. Soon the only light came from Jade as her body eagerly absorbed her midnight feast, and they started to fall asleep as they watched the soothing green light arc across the ceiling.\n\nJohn looked up at the security camera, and said quietly, \"Goodnight Watch Commander, you have the ship.\" He closed his eyes, pulling Jade and Irillith closer, then drifted off to sleep too.\n\nUp on the Bridge, Faye sighed with happiness, delighted at the level of trust John was placing in her. She raised a tiny purple hand, and brushed her fingers over his image on the screen as she replied in a whisper, \"Goodnight John, sleep well.\"\n\n***\n\n\"But Matriarch, you can't be serious!\" the House Aeberos Fleet Commander protested in utter disbelief.\n\nNyrelle Aeberos ignored her, and declared imperiously, \"You will recall our forces from the Valaden border, and immediately reroute them to the House Perfaren border.\" \n\nNyrelle was sitting at Edraele's desk, glaring at Kalmaera, the highest ranking naval officer in the House Aeberos fleet. The older military woman's image filled the big viewscreen in the centre of the wall, and Nyrelle could clearly see her deeply troubled frown. The Maliri Fleet Commander was shocked and dismayed by her new Matriarch's orders, knowing full well that to follow them would leave their territory horribly exposed to House Valaden treachery.\n\n\"Wouldn't it be wise to-,\" Kalmaera began tentatively, but she was abruptly cut off.\n\n\"Don't make me repeat myself a third time, Kalmaera,\" Nyrelle snapped, her eyes narrowing in anger. Her voice was chilling as she added, \"There are plenty of ambitious officers who'd love to serve me as Fleet Commander.\"\n\nKalmaera bowed her head, and replied, \"My humblest apologies Matriarch, please forgive me.\" \n\nNodding with satisfaction, Nyrelle smiled, and said, \"I understand your concerns, Kalmaera, but please don't make the mistake of underestimating me. I'm not some witless young fool. I've taken steps to ensure that our alliance with House Valaden is rock-solid, and we have nothing to fear from our new allies.\"\n\nThe House Aeberos Fleet Commander studied her for a long moment, and while she still looked a little wary, she did seem more reassured. \"I'll follow your orders to the letter, my Matriarch,\" she said, bowing respectfully.\n\n\"Excellent, we'll speak again when the fleet has been repositioned,\" Nyrelle said with a confident smile.\n\nKalmaera was about to end the call, but she paused, and asked tentatively, \"Are you going to be returning to House Aeberos territory soon, Matriarch? Your people are starting to worry. There's talk that you've been kidnapped...\"\n\nNyrelle let out an incredulous laugh, and she shook her head as she replied, \"Kidnapped?! I'm an honoured guest! I have two of our best assassins here as bodyguards, and I'm perfectly safe. I'm making plans with our new allies, and I'll be returning to Aeberos in a couple of weeks' time.\"\n\nThe Fleet Commander nodded, her concerns mollified, and she said more confidently, \"We'll begin moving the fleet immediately, Matriarch.\"\n\n\"Very good, Kalmaera. I'll be delighted to retain your services as Fleet Commander,\" Nyrelle said with an encouraging smile. \n\nShe leaned over the console, then clicked a button ending the call.\n\n\"Wow! You were amazing, Nyrelle!\" Kali Loraleth said enthusiastically. Leena Ghilwen gave her a wide grin, and Valani Naestina clapped her hands excitedly in agreement.\n\n\"Really? Did I do okay?\" Nyrelle asked, as she sank back in her chair, letting out a big sigh of relief.\n\nEdraele was standing with the three young Maliri girls at the side of the room, and she joined Valani in her applause as she said with open admiration, \"You were marvellous, Nyrelle. When you threatened to remove Kalmaera from her job as Fleet Commander, I felt chills run down my spine!\"\n\nNyrelle blushed, and said, \"I was so nervous! I just tried to imagine what you would say, or the old Edraele would say, that is.\" \n\nThe House Valaden Matriarch smiled at her, and replied, \"You were superb, Nyrelle.\" Looking around at the four young women, she continued, \"In fact, you all were. You've all had to adapt to some harrowing changes in a very short space of time, but you've been incredibly stoic, and proven yourselves to be extremely capable women. I'm very proud of you all.\"\n\nKali Loraleth bit her lower lip, and her eyes began to fill with tears, her face crumpling with emotion. \n\nValani saw her new friend start to tear up, and she pulled the other girl in for a hug as she asked, \"Kali, what's wrong?!\"\n\nKali brushed away her tears, and said, \"I'm sorry, I'm just being silly.\"\n\nEdraele stroked her back soothingly, and asked, \"What is it Kali? We're all your friends here, you can confide in us.\"\n\nThe young Maliri girl looked up at Edraele, and after a moment's hesitation, she replied in a quiet voice, \"My mother never said anything that nice to me in over thirty years.\"\n\nLeena nodded, and said bleakly, \"My mother was too wrapped up in her grudges to spare a kind word for her second daughter.\"\n\n\"You poor girls. I'm so sorry,\" Edraele said sympathetically. She held out her arms, and they both went to her, hugging her fiercely. She smiled down at them as she said, \"You have me to look after you now, and I know what special, wonderful girls you are. I promise I'll take great care of you.\"\n\nThe last two girls smiled at each other then walked over to join the hug. When they finally separated, the four girls smiled at each other shyly, but they all felt reassured after the close physical contact.\n\nEdraele gave them a kind smile, then said, \"It can be very lonely ruling a House as a Matriarch; trust me, I'm speaking from many long years of experience. I'm hoping that you'll all learn to trust and support each other though, and with me to help you too, things can change for all of us.\" \n\nThe four young women nodded, smiling at her and each other more confidently now. \n\nEventually Nyrelle turned towards Edraele, and said, \"We've all moved our fleets away from Valaden borders, and are threatening Houses Perfaren and Holaris. Are you planning on attacking those Houses now? With our combined fleets we massively outnumber them.\"\n\nEdraele shook her head, and replied, \"I want to avoid any bloodshed where possible. I'm hoping that we can intimidate the other Houses into joining us by showing a united front and with a massive show of military force.\"\n\nLeena Ghilwen nodded, and said, \"It's a good plan, Edraele. Tsarra Perfaren would be a fool to oppose us, our fleets dwarf her own.\" She hesitated for a second before she added, \"But what happens if a House refuses to join us?\"\n\nThe House Valaden Matriarch smiled confidently, and replied, \"Some of those Matriarchs are stubborn, but they aren't fools. We aren't in any rush, so I'll give them some time to let their spies start spreading rumours of our new alliance. Your recent fleet movements will provide ample proof of the veracity of those rumours. After a few weeks, the remaining Houses will be begging us to let them join the alliance.\"\n\nValani Naestina had been pouring a rich red liquid into five crystal flutes, and she carried the tray of drinks over to four of the most powerful women in Maliri Space. They smiled at her in gratitude, each taking a glass, and when Valani raised hers for a toast, they all followed.\n\n\"To our alliance!\" she said to the group.\n\n\"The alliance!\" the four women echoed, before taking small sips from their drinks.\n\nEdraele smiled at them all, feeling tremendously pleased with her work so far, and she raised her glass again and toasted, \"To House Blake!\"\n\nThe four girls had all heard Edraele's tales of the mysterious John Blake, and they flashed bright smiles at each other as they exclaimed, \"To House Blake!\""
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "swallow",
        "anal",
        "maliri",
        "irillith",
        "first time",
        "dominant",
        "submissive",
        "cum inflation",
        "psychic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-64"
}