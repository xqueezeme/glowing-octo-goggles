{
    "title": "The Short Happy Life of Island Bill",
    "pages": [
        "This is a shoutout to the folks who say that I can't write a classic \"loving wives\" story. It also lets me reintroduce some characters from another one of my stories. They were characters who I especially liked and didn't want to lose touch with. Also, you might guess the place where my fictional hero works. So I want to state categorically that, \"Even though you might think that - I couldn't possibly comment.\" Enjoy... \n\n*****\n\nCHAPTER ONE: DESCENT\n\nNobody gets rich in academe. But I work a six hour week. And I take home a six figure salary. Plus, DC is a target rich environment for consulting on the side. So I am not complaining.\n\nJanet, my wife of 12 years, works for the University too. She started as an Administrative Assistant. But the girl was way too talented for the minor leagues. So she is the Director of Development now. \n\nFor those of you who don't speak \"academic\" Development is what we eggheads call \"begging.\" In effect, Janet asks the alumni for money. And she can charm the birds down out of the trees.\n\nWho wouldn't want to hand a big check to Janet? At age 37 she is still perfectly gorgeous. Her dark features and curvy figure fit her Italian heritage. She is also a very smart woman, well-read and cultured and wickedly funny. In fact her sense of humor is the thing people remember the most about her. \n\nBut in the world of fund raising the money maker is her chest. \n\nShe has told me that her superb tits are a pain in the ass, mainly because they require extra care and feeding. But she will also freely admit that they open a lot of doors for her. \n\nFor instance, I remember an evening when the two of us were out with a prospect. The guy was in his sixties and filthy rich. The woman he was with was still the starter wife, close to his age and frumpy. \n\nThe prospective donor was ogling Janet like she was that proverbial puppy in the window. That was not a rare state of affairs. The whole point of having somebody like Janet doing the asking is that she is stunningly attractive. \n\nAs the evening got drunker Janet's mark got handsier. The guy couldn't take his eyes off of the half foot of cleavage showing in her little black dress. While he talked, the guy had his hand moving up and down on her arm, right next to her massive left tit. \n\nHis wife who had arrived looking bored, now looked disgusted. At the same time, Janet was ignoring where his hand was and hanging on his every word. \n\nI was sitting across from her. All of the time the guy was copping his pseudo feel a stocking clad foot was making its way up and down my leg. And my wife was cutting me looks that were both surreptitiously amused and shameless enough to melt my fillings. She was clearly saying, \"Can you believe this guy?\" That was my Janet. Working and playing at the same time.\n\nShe left with a big check. I got my reward when we got home. \n\nI didn't marry Janet until the end of my 20s. And I had a lot of female bed-partners before then. But I have never met a woman as totally abandoned in the bedroom as she is. \n\nI know that most women like to have cocks in them. In fact they like to have cocks in them a lot more than we like putting them there. \n\nBut there is a huge qualitative difference between the ones who just lie there with their legs spread going, \"Oh Baby-Baby!\" and a woman like Janet. She puts her heart and soul into every fuck. And each one is a distinct masterpiece.\n\nI never figured out whether she was an Olympic class sexual athlete because her passions overwhelmed her. Or whether she is simply driven to be the absolute best at everything female. But the woman could fuck you in more interesting ways than Catherine the Great.\n\nIn bed, her only aim was to get in touch with every aspect of her sexuality. And it wasn't like she wanted to evolve into that slowly. She wanted to do it all in one night. \n\nShe had no boundaries and endless stamina. Sex is hard physical exercise. And many of the women I have bedded eventually get worn-out. But Janet would just keep going and going, without the slightest loss of enthusiasm. \n\nOn nights like that we would doze off when she couldn't get Old Lucifer out to the starting line for one more lap. \n\nFortunately the next day was a Saturday. Some people garden, or fish, or play golf on the weekend. We like to sail. \n\nWe keep a C&C Cruising 40 at the Washington Marina and we usually take it for weekend trips down the Potomac and out into Chesapeake Bay. \n\nJanet is a great sailing partner and with the power assists we can handle any destination by ourselves. \n\nThere is nothing more romantic than sitting anchored in one of the inlets, watching the summer sun set over the Chesapeake and enjoying blue crab and a cold bottle of Pinot Grigio. \n\nAnd there is nothing cozier than lying cuddled under a blanket in the cockpit of our boat, watching the stars and talking about a million things. \n\nOf course that has always inspired Janet to make the boat rock frantically most of the night. \n\nJanet is not just my wife. She has always been my best friend and closest companion. And to say I loved her would be a gross understatement.\n\n----\n\nThe University started a major fund raising drive that fall. That cut short our sailing. \n\nJanet began to take three day trips to the major population centers. Normally members of her staff would do the wining and dining. And she would do the actual \"asks.\" \n\nBut this campaign was a big deal. So she was expected to go along with her troops in order to communicate the University's commitment to the process. \n\nThat was alright with me since I was also involved in some stuff with NCTC in McLean. All of that was taking up more time than either of us wanted. In fact, the hour requirements for me were almost like I would have with an honest job.\n\nThey were planning to wind up the campaign in New York in mid-March. That was going to be a four day extravaganza because there are so many of our alumni in the greater New York City area. \n\nJanet was standing in our bedroom reviewing the contents of her roller-bag. She looked like she was trying to decide whether she had packed everything. I was checking her out as I was standing in the door. \n\nShe is a beautiful woman. But when she is made-up for public consumption she is something special. \n\nShe is medium height and her long raven hair was tied up in one of those sophisticated pony tails that really stylish women adopt. \n\nIt made her look intimidatingly sleek and business-like and with that gorgeous face, huge boobs and perfect little body she was a sight to behold.\n\nWhen I came up behind her she was chewing on her lower lip, like she was trying to decide something. \n\nI said cheerfully, \"All packed?\"\n\nShe jumped like I had startled her and then relaxed and leaned back into me. Her firm soft buns pushed against my rapidly growing interest. \n\nShe said almost wistfully, \"Have you ever wanted to just chuck the whole thing and become beach bums on St. Lucia?\" \n\nI said lightly, \"The boat's gassed up and ready. Want to leave now?\"\n\nShe turned and put her arms around my neck and looked at me intently. It was like she was trying to memorize my face... Odd reaction. \n\nThen she smiled brightly and said, \"As soon as this campaign is over I am going to take you to some deserted island and ravish you like Henry Morgan sacking Panama. Count on it.\" \n\nAt that point she kissed me with a stunning amount of passion.\n\nI was thinking of starting something but we both had a place to be. She was taking a cab down to Union Station to grab the Acela and I had a meeting over at the NCTC with a couple of gentlemen from a little Company in Langley. \n\nFor a change 66 wasn't at a total dead stop so I got over there and got my business done much sooner than I expected. It was only 1:05 and I knew that Janet's train wasn't scheduled to leave until 2:15. \n\nI had time to surprise her. So I shot down the GW Parkway and across the Potomac on US1 to E Street and over to Union Station. It was the middle of the day and I was parked and crossing the upper gallery promptly at 1:55. \n\nI bought a bouquet from the flower seller next to the escalators. I was planning on giving her a little spontaneous send-off. I just wanted to let her know how special she is to me. \n\nI know that was a silly romantic thing to do. But our jobs had kept us apart far too much over the past six months. \n\nI was coming up to the boarding area for the Acela when I saw her pulling her roller bag along toward the first class car. She was absolutely radiating confident femininity. I thought to myself, \"God! That woman is hot!\" \n\nI couldn't go down the platform without a ticket so I stopped at the gate. \"Damn! Just missed her!!\" \n\nThen an odd thing happened. As I was watching her stride along, she reached out and took the arm of the tall man who was walking next to her. \n\nIt was an intimate gesture, like the two of them were more than just fellow travelers. It made no sense.\n\nWhen they turned to board I saw that it was Todd Breckenridge. Todd is the Vice President for Advancement and Janet's boss. \n\nBasically, he is the University's marketing and sales manager. I thought to myself, \"That's really strange. If he was going up to Manhattan with her you would think that she would have mentioned it?\"\n\nI knew Todd from events that I had gotten dragged to. I found him to be way too slick and arrogant. \n\nHe always seemed to condescend to us faculty types. It was like he thought that we didn't know what the real world was like. Which was only fair because I condescended right back. \n\nHe might be a good looking, and very self-assured preppie, but he wasn't that bright. And I consult in counter-terrorism. So I have a clue. \n\nI knew Janet had to interact with him at work. But I got the impression she thought he was a jerk. \n\nTodd was in the process of helping Janet into the car and handing her the bag. I did not like the way his hands lingered possessively on her as he did it. \n\nI walked back to the parking structure with mice nibbling at my brain stem. I was a little disturbed that she had not mentioned that she was traveling with Todd. \n\nIt made perfect sense that he would accompany Janet on this trip. This was the grand finale of an important campaign. \n\nI just wish she had mentioned it to me. \n\nOf course maybe her forgetfulness was due to the fact that the asshole is a well-known cock-hound. His wife kicked him out for his philandering and he has relentlessly hit on everybody with a dress since then. \n\nMaybe she thought that I would worry less if I didn't know that she would be in a strange town with that predatory fucker. \n\nIn that respect, I could understand why she kept it from me. I was suffering pangs of jealousy just at the thought of what I had seen on the platform. \n\nIt bothered me enough, that I gave my buddy Eddie a call. \n\nEddie; not Edward, or Ed, is the VP for IT at the University. He operates in the same circles as Todd and Janet. I wanted to get his take on their relationship. \n\nWe met for a beer at Martin's Tavern, which is down the street from where I live. In its 75 years, a lot of political deals have been cut and covert information passed at Martin's. This was one of those times. \n\nEddie is a laid-back kind of guy. He is in charge of a big budget at the University and you might expect him to be a cold blooded bureaucrat. But by origin, he is a West Virginia good-old-boy. \n\nAnd he is as country as a misty holler in the morning.\n\nHe is also about six foot seven so he stood out when he came in. I motioned him over. I had a pitcher in front of me and poured him a mug. \n\nHe looked quizzical, sat and drawled, \"John, ain't seen you in a coon's-age. Why now?\" \n\nDid I mention that he plays hillbilly right to the hilt?\n\nI got directly to the point. I said, \"I was wondering about Janet and Todd Breckenridge.\" \n\nHe knew them both very well, because he sat in a lot of meetings with the Advancement side of the organization. \n\nHe stopped and pondered something in his unhurried southern manner. It looked like he was trying to carefully frame the thing he was about to say. \n\nHe drawled, \"Waaaall, they have been a lot friendlier of late. He's a pussy hound fur-sure and it looks to me like he is barking up her tree. She ain't given him anything as far as I can see. But he keeps tryin and he IS her boss.\" \n\nI did my best to not look as stricken as I felt. \n\nI said, \"So let me get this straight. Breckenridge is putting a full court press on Janet. And she can't outright tell him to get lost because he's her direct superior. Is that what you are telling me?\"\n\nHe looked at me with his shrewd salt of the earth expression and said, \"Yep! That's what I'm tellin ya.\"\n\nWe killed the better part of the evening talking about nerd things. \n\nWe all play parts when we are with other people. It's the way we filter how others perceive us. \n\nWhen it comes to playing West Virginia redneck, Eddie might be slightly more over-the-top than Jed Clampett. But his doctorate is from MIT. And his expertise is in my field. So we had a few things to talk about.\n\nI walked back to the house in a beautiful April evening feeling very ill at ease. I had seen them together and Janet didn't look like she was putting up any barriers between her and the dude. \n\nIn fact, if you had seen the two of them walking to the train you would have gotten the impression that she was with him as a couple. \n\nShe had made numerous fund raising trips over the past six months. I wondered how many her boss had made with her. \n\nIt was perfectly reasonable for the most important guy in the Advancement area and his second in command to travel together to the final event in the campaign. \n\nBut the situation was far too convenient if hanky-panky was on the menu.\n\nIt was late enough in the evening that it was time for my call. I dialed Janet's cell and she answered right away. She was as bright and loving as always. \n\nI said, \"Hello my love. Time to tuck you in for the evening.\" \n\nShe giggled and said \"Why don't you come up here to Manhattan and tuck me in properly?\" \n\nI said, \"I would love to but you have work to do. I'll just have to settle for doing that as soon as you get home and for the rest of your life.\" She giggled again.\n\nI was going to mention Breckenridge but it just didn't seem right. I would sound like a jealous weenie whining about her boss being there. \n\nMore importantly, I had reached the point where I wanted to investigate the situation further so I didn't want to tip her off. \n\nSuspicion is an insidious disease. Once you catch it you never really get over of it. Suspicion also makes you do sneaky things. I was suddenly dying from a bad case of misgiving. And I had to find the cure. \n\nAs a first test, I dialed the hotel and asked to be connected to her room. I would make it sound like an afterthought. That is, if she answered. But the phone rang for an eternity. \n\nI tried again an hour later. Same result. It didn't prove anything. She might still be working. But there was another explanation. THAT was sending shivers up my spine.\n\nI was in panic mode. Nevertheless, I am still a little ashamed of what I did next. My only excuse is that I had to find out. And finding out was so ridiculously easy. \n\nThanks to the new generation of malware, you don't need to sneak around to spy on somebody. Malware makes old-fashioned bugging and video cameras just so dreadfully 1990s. \n\nShe was 200 miles away in Manhattan. But, what I planned to do would make me the invisible man in her room. And I would never leave the convenience of my desktop while I was doing it.\n\nI crafted a routine e-mail to Janet. It said, \"Can you take a look at this contract when you get a chance? I need your opinion by tomorrow. What do you think?\" And attached a pdf with a copy of a consulting contract that she knew I was trying to get signed. \n\nJanet is the money person. So she would be the right family member to deal with contracts. She and I had already talked about the terms of the engagement. All she had to do was look the contract over for me. \n\nAnd since Janet is a fundraiser, not a computer geek, she would never notice the extra 20 megabytes of something very nasty that she was downloading. \n\nThose additional lines of code were a piece of mischief that I had picked up from my friends at the George Bush Center. \n\nThe virus is known colloquially as Flame. It has been in the wild for a couple of years but I had the weaponized version. The one that a certain nation state dropped on the Iranians. \n\nFlame is one of about 100,000 reasons why the internet has entirely changed the realities of our world. Especially when it comes to personal privacy. \n\nIn essence I sent my purportedly innocent wife a spy program that would turn her laptop into my own remote surveillance device. \n\nIn essence, I would be standing wherever her laptop was. And I could observe everything that went on within the range of its camera and microphone. That trick took nothing more than a click of my mouse. \n\n------\n\nShe didn't do the download and response until late the following afternoon. \n\nIn that respect, her return email told me that I now owned her computer. \n\nI activated the virus as soon as I saw that it was enabled. The picture and sound came up like I was standing in the room. \n\nMost people staying in a motel room keep their laptop open on the ledge on the wall across from the bed. That ledge is an architectural staple in every hotel room in America, since it also holds the TV. \n\nHer laptop happened to be on, although I could have turned it on if I had to. Its orientation was focused on the bed. \n\nHow wonderfully fortuitous...\n\nI was now watching her room live and in real-time. I could hear the shower running. Then Janet walked past the camera and sat down to dry her hair. \n\nShe was completely nude. As she reached up with the towel those magnificent breasts stood out proudly in 720p high definition. Water was dripping off her big sexy brown nipples. \n\nShe said teasingly, \"Wow!! That was some shower!\"\n\nA male voice out of range of the camera to its left said, \"That only got me started.\" And Breckenridge, walked past the camera. \n\nHe was dripping too. He stopped and stood in front of her naked. The boner he was sporting definitely looked ready. \n\nEvery warning bell and claxon in my brain went off simultaneously!! I actually shouted, \"What the fuck is he doing there??!\" Of course she couldn't hear me.\n\nThe answer was agonizingly obvious. She said in the \"fuck me\" tone of voice that she only uses when she is really turned on, \"Here lover, let me take care of that.\" And she swallowed his sword. \n\nHe groaned loudly, and grabbed the back of her wet head. Up to this point I had thought that I was the sole beneficiary of one of Janet's blow jobs. She is a master of the art and I knew what he was feeling. \n\nHer moaning and bobbing around his cock killed me. It totally blew up my heart. My systems flickered and then came back on line. \n\nI needed to do something. So, I dialed her number. I didn't do it because I wanted to hear her voice. I wanted to see if she would respond to my call. \n\nShe was working on his shaft like it was a hot day and it was a cool Popsicle. \n\nShe stopped the enjoyment noises that she was making and glanced down at the phone when it rang, confirmed it was me and hit the decline button. \n\nThen she went back to fallating the shithead like his cock was the only source of oxygen in the room. \n\nSeriously???!! I was done watching. I set the thing to record.\n\nMost of you have probably had events in your life that are so incredibly shocking that you can't process them. Things like the death of a loved one, or an unexpected firing, or discovering that the woman you loved and expected to grow old with is a cheating whore. ",
        "Some of you might cry. Some of you might hit something. Others of you might get drunk. \n\nIn my case, my vision started to flicker again and I dropped into a fugue state. \n\nI didn't pass out per se. It was more like being in a coma, or just dead. I wasn't aware of what was happening. But to preserve itself my mind had retreated deep within its psychic bomb shelter. \n\nEvery internal system from consciousness, to basic emotion simply went off-line. I was like a zombie.\n\nI came out of it still seated in front of my workstation. I had not slept, or even slumped in the chair. But it was bright sunlight outside. So it was clearly the next day. \n\nI looked at the clock. I had been sitting upright in the chair for close to 9 hours. \n\nMy muscles were killing me and it took several minutes to get stretched out enough to be able to walk. \n\nI was back to being aware of the world around me, but all of my inner structures had burned to the ground. I was hollow inside. \n\nI don't know how other people might react to what I had just witnessed. But I was totally wiped out. You go along in one version of reality. And then when the picture shifts, it is hard to make a quick transition into the new universe. \n\nI mean, give me a break! As far as I knew Janet had been my best friend and loving wife for the past 4,380 days. This alternate reality was not even one day old. \n\nMy thoughts were almost laughably clich\u00e9d. \"How could she do something like that? How often has she done something like that? And every cuckold's favorite question, how many other men has she done that with?\" \n\nDenial is the first stage of grief. You try to spin what you saw. But I had a huge MP4 documenting the facts in glorious high definition and digital sound. \n\nIt was hard to deny THAT!\n\nJanet was not in her room. She and shithead must have been out doing whatever they were getting paid to do. Or maybe they were fucking in another room? Either way it didn't matter.\n\nI sent the kill command to the virus and shut off the link. They would never know how I had done it. \n\nIt would take some time to wade through the entire recording. They tell you to never watch your spouse's infidelity. That is, if you ever plan to reconcile. That wasn't an issue with me since we were finished. The only question left to be answered was how to make the break? \n\nIt isn't the betrayal of trust that impacts you, as much as it is the tangible evidence that your fundamental assumptions about the inevitability of your marriage and even your life are incorrect. \n\nThere are things in everybody's life that we just assume are a given. At the top of that list is the belief that both partners in a marriage will remain faithful. If you are normal, it never crosses your mind to think otherwise. \n\nSo once you see that basic assumption blown up, you begin to question all of the other things that you presumed were true. And that is a very dark and lonely road to travel indeed. I was well on my way down it at that point.\n\nI knew to the core of my soul that reconciliation with Janet was out of the question. So I planned to view whatever fucking and sucking I had captured as nothing more than information. \n\nIt would be ammunition for what I needed now, absoluter scorched earth, unconditional war to the knife.\n\n---- \n\nRevenge is such a purifying emotion. It focuses and carries you through the maelstrom of less practical feelings that swirl around when you are betrayed like I had just been. \n\nRevenge makes you feel less helpless and lost. More importantly it lets you get control back. \n\nI showered and dressed. My rational mind was already formulating a plan.\n\nI was alternating between wild bouts of anger and the lack of any feeling whatsoever. I was a little concerned about the latter state. Since I couldn't laugh, cry, or even feel impatient at the idiots in DC traffic. \n\nIf there was any emotion down there at all it was a feeling of utter ruthlessness. \n\nI was hoping that condition would pass. Being totally ruthless helps you get through the shock but I would have to get on with my life somehow. \n\nAnd spending the rest of my life obsessing about ways to even the score with those two just seemed so totally fucked-up.\n\nI was headed for the bank and then to my lawyer Bernie's office. \n\nFirst I did the usual clich\u00e9d financial protection things. I divided our liquid assets and shared out the bonds and stocks. I put all of my share in another bank and left the rest in our joint account for Janet. \n\nBernie is a college buddy. He was born to be a lawyer and he has always handled all of my legal affairs. \n\nHe is a totally good guy and an aficionado of Jewish humor. So he is also a lot of fun to have a beer with. \n\nI told him what had happened and what evidence I had. I told him that there was no chance that I could stay married to Janet. So I asked him to draw up what he considered to be a fair settlement offer.\n\nHe looked at me sympathetically and said, \"Are you sure that this is what you want to do? This is very hasty. \n\n\"You and Janet are a perfect couple and from everything I have ever been able to see she loves you. I cannot conceive of a circumstance that would make her do what you described. Have you talked to her about it yet?\"\n\nI said, \"I don't need to talk to her. I saw it and I don't care about reasons. The faster I put this behind me the better. I have to get away from my overwhelming feelings of anger, loneliness and distress at her betrayal.\" \n\nThen I broke down. Bernie's office must have caused it. It felt like I had reached a safe harbor after battling a terrible storm.\n\nAnd it was fucking embarrassing! \n\nI have cried exactly once in my life. It was when my mother died. Even then it was something I had anticipated and I acted less like a little baby girl. \n\nThis time it blindsided me and I just couldn't cope. I was totally overcome by my deep personal heartache.\n\nThree days ago I had been a happily married man with a wife who was my best friend, companion and lover. \n\nThat was obviously an illusion. I didn't even know the slut on the video. \n\nIt was like I had lived my life in two parallel universes. There was the one dimension where we were a happy respectful couple and then there was the one where I had always been the hapless fool. \n\nI wondered which life was the real one. I suspected that I knew the answer to that question. \n\nBernie had not anticipated my acting like such a pussy. How could he. I am always so controlled and rational. \n\nHe freaked out when I started caterwauling and began yelling for his secretary. \n\nGladys is a kind and nurturing older woman. She put the picture together in about six nanoseconds. She knows what lawyers do. \n\nShe grabbed a bunch of paper towels from Bernie's bathroom and fed them to me one at a time as she held my head on her ample, matronly bosom making sympathy noises. \n\nI finally stopped my sniveling.\n\nDid I mention how humiliating that was? \n\nBut it DID make me feel better once I had let it out.\n\nI looked at Bernie with apology for my breakdown and said, \"You know what I need you to do.\"\n\nGod! After the exhibition I had just put on he would have had to be totally brain dead to NOT understand what I needed him to do.\n\nI said, \"This is a no-fault jurisdiction so file 'irreconcilable differences' but make it clear to her lawyer that in case she pushes back I have all of the evidence that I need to ruin her personally and professionally. \n\nI want this to be over quick.\"\n\nBernie said, \"Not a problem. I can have the papers for you by tomorrow noon. Is that what you want? Where do you want her served?\"\n\nI said, \"She gets back at 6:00 PM tomorrow. I would like her served at home as soon as possible after that. \n\n\"I am going to leave something that will make the reasons for the divorce self-explanatory.\" \n\nHe nodded and I went home to the hard part.\n\n-----\n\nI had recorded too much fucking-sucking and pillow-talking to make an efficient documentary. \n\nSo I created a \"greatest hits\" version of her night with shithead, just to establish the salient points. \n\nBut in order to do that I had to plow through close to five hours of the most utterly heart-rending shit to distill out fifteen golden minutes. \n\nBernie had asked me if a hasty divorce action was a reasonable response after twelve good years. \n\nI was semi-wondering that too until I actually made the demonstration video. \n\nAfter watching how much she enjoyed her little fuck-fest, all I could think about was getting as far away from the bitch as possible. \n\nJanet is a passionate woman and that was on utter display. I have heard that some men get turned on watching their wife fuck. I was sickened by it. \n\nI have always considered myself a rational and reasonable person. But after what I witnessed, their especially grizzly murder seemed like a viable option. \n\nI packed all of my stuff and loaded it into my car. There was nothing I wanted from that house other than my clothes and a few personal things. \n\nI had left the evidence running in a loop on the workstation. Of course I had my new show and the raw footage on a portable drive that I was taking with me. \n\nThen I closed the door on the past decade of my life.\n\nI left a simple note propped against the monitor. \n\nIt said, \"I am sorry that you chose to do this to me. And I apologize for any failure on my part in our relationship. I loved you with all my heart. \n\n\"I will forever value what we had as husband and wife. But there is no stepping back from this betrayal. \n\n\"If you have not been served before you read this you will be in a few short minutes. I tried to be scrupulously fair in the settlement and I hope that you will not fight this. The sooner I have you out of my life the sooner I can move on. \n\n\"I need time to heal so please respect me enough to NOT communicate with me. If we see each other on campus please have the consideration to head the other way. \n\n\"I will probably never stop loving you and I do not need to be reminded of what I have lost. I wish you had valued it more. \n\n\"Perhaps someday we can get together and you can tell my why - With Love - Billy Joe.\" \n\nI drove down to my new digs. That would be our boat. I had gotten most of my sanity back on-line by then and the space around me was familiar. So I was almost feeling normal. \n\nThat is until I thought about the bitch and her lover. Then I got back in touch with my homicidal side. \n\nI always considered personal revenge a childish emotion, better left to the lesser brains. That is until it happened to me. \n\nNow I was a raving monster. I planned on inflicting maximum pain on shithead and I knew exactly what it would take for me to be fully satisfied. \n\nI wanted a total life extinction event for that mother-fucker. \n\nBut there was one piece of unfinished business I had to get out of the way first.\n\nI called Jill as soon as I was done moving into the boat. Jill has been Janet's best friend and confidant since they were in College. \n\nShe is married to Tom who is definitely my best friend. \n\nUnlike Janet, I am not particularly social. But I have a few people who I naturally gravitate toward. That was Tom and Jill. They are both very good people. \n\nJill was delighted to hear from me. She said, \"Hey eligible bachelor man. How about coming over for dinner so we can keep you out of the dating pool while your wife is gone? We're grilling steaks.\"\n\nShe had no idea how tragic and totally inappropriate that little remark was.\n\nI laughed and said, \"I would love a steak and a little conversation if you could spare the time.\" \n\nAn hour later I was sitting on their back deck drinking a beer and enjoying a perfectly cooked Sirloin. \n\nThey were sitting opposite me at the table. I said, \"I have something very important to tell both of you. So is it okay if we skip the banter?\"\n\nBoth of them looked puzzled and a little concerned. Jill said, \"Sure, fire away!\"\n\nI was looking directly in her eyes when I said, \"Is there anything you need to tell me about Janet?\" \n\nThe blast doors slammed shut. But before that happened I saw the shift in her eyes. It was unmistakable. \n\nJill took her time. It looked like she was carefully thinking through her answer. \n\nShe said, \"Janet is going through a difficult time. She loves you to distraction. But there are powerful, and I might add evil forces at work, which she simply can't disregard and which are confusing her. \n\n\"She has told me about it. But I am guessing from the way you asked the question that you already know what problem she is dealing with. That is as much as I know. \n\n\"But I ALSO know that she is fighting with everything that she has to keep this from upsetting you. Janet is a good person and you are her one true love. She doesn't feel she can talk about it with you without altering your relationship, since she can't get out of the circumstance without quitting her job. \n\n\"But you have to understand that her present state is truly upsetting and embarrassing to her.\" \n\nI could tell from Jill's rationalizations that she was as clueless as I was. \n\nThat would make a big difference in our association going forward. \n\nIf she had known about shithead and not told me, I would have been done with both of them too.\n\nI said, \"Seriously??! Well that's very odd, since she didn't look very embarrassed when I videoed her and her boss fucking in very creative ways for about five straight hours. \n\n\"I just need you two to know that I am divorcing her.\"\n\nThat dropped on them like the meteor that killed off the dinosaurs. \n\nIn fact, it might have actually been a little over the top cruel. They are very nice people and didn't deserve to be hit with that. \n\nBut my judgment was still a bit off. At least, as far as common sense was concerned. \n\nBoth of them turned white. Jill looked like she was going to pass out. She steadied herself and said, \"What did you just say? You're divorcing Janet!!??\"\n\nI said, \"The papers get served tomorrow. I left a video to illustrate the reason why. It is pretty X rated. And don't ask me how I got it. \n\nBoth Jill and Tom probably thought I had hired a Private Investigator. Very 20th Century thinking.\n\nJill spluttered, \"But this will kill her. She loves you to distraction. I can't believe she would betray you. Was it with Todd Breckenridge? He was the one pressuring her to have sex.\"\n\nI said, \"Believe it baby! And she didn't look particularly pressured as she was declining my call in order to concentrate on sucking his cock.\" \n\nI was being intentionally crude to reinforce that the old Billy Joe was dead and that a new avenging angel had risen to take his place.\n\nJill looked appalled. She was speechless. Tom came over and put his arm around my shoulder and gave me a man-squeeze. \n\nThen he sat back down and said, \"Is there anything we can do to help? We love both of you and I want you to know that we are here to support you no matter what.\"\n\nI said, \"Thanks buddy.\" Then I looked at Jill and said, \"Janet is going to need you at about 6:30 tomorrow evening. \n\n\"I still love the bitch even if I can never be married to her and I want you to take good care of her. \n\n\"I will accept rational discussion after I overcome my overwhelming desire to drop her body into the Potomac. But life is too short to hear about what might have been. I particularly don't want to hear about how sorry she is.\"\n\nI told both of them that I valued our relationship. And that all I expected from them was to continue to obey the simple rules of friendship. \n\nI told them that I would be living in the boat until things died down. I asked Jill to make sure Janet did not try to visit me there. \n\nI got up and we did a group hug. \n\nI walked to my car trying hard to not look like a beaten man. The only thing that was keeping me going was the knowledge that Breckenridge and Janet would have an equally bleak outlook on life after tomorrow.\n\n------\n\nI awoke the next day in the cabin of the boat. The world might have come to an end. But it was still a bright and sunny April day in DC. \n\nThe boat was a little cramped but comfortable enough. And it would be home for the foreseeable future. \n\nThe Marina itself is like a village full of boat people. So there was foot traffic busily coming and going on the dock, even that early. It was like I was like living on Main Street of a small town.\n\nMy phone had about 27 voicemails on it. They were all from Janet. I had a feeling that Jill had called her. \n\nI bulk deleted them and went off looking for breakfast. There is a hotel next to the Marina. It's one of those cheap tourist traps but it serves a buffet. I read the Post and eased into my day.\n\nI still had to lecture that morning and so I took the Metro from the Waterfront SEU Station across town to the University. \n\nIt was a long walk from Foggy Bottom but it was one of those gorgeous spring days in DC. The humidity hadn't arrived yet and the City was alive around me.\n\nI began to think about the rest of my life. The first faint rays of hope had started to light up my soul. The brisk exercise of the walk helped. \n\nJanet was history but I was only 42 years old. Maybe I could find somebody and start a family? \n\nI marveled at humans. They are amazingly resilient creatures. This was only Thursday and I had been a vegetable Tuesday night. It is astonishing what two days of perspective will do for you.\n\nI finished my lecture and headed for the President's Office. \n\nThere were 12 more calls on my phone. I deleted them as I was walking. \n\nThe President and I have always gotten along. I bring in a ton of grant money and that gets their attention in the Administration Building. \n\nWhen I was seated he did the usual coffee or tea thing. I politely declined. He said, \"So what brings you here Billy Joe, more funding I hope?\" \n\nAnd he grinned at his little joke.\n\nI said, \"I have a serious case of malfeasance to discuss with you.\" \n\nHis eyes instantly went feral. It is never a good idea to utter the word \"malfeasance\" in the presence of a University President. It strikes at the very heart of their leadership.\n\nI had the proof on the tablet computer that I was clutching. I would use it if need be. I was hoping I wouldn't have to.\n\nHe said, \"That is a very serious charge. Who are you accusing?\" And he began shuffling the papers in front of him. It was a display of pure agitation.\n\nI said, \"The person I am accusing is your Vice President for Marketing and University Advancement.\" I couldn't bring myself to say the fucker's name.\n\nI said, \"I have evidence here,\" and gestured to my tablet, \"That he has been carrying on a clandestine affair with one of his subordinates while representing the University to the donor community.\" \n\nI thought that the President was going to pass out when I said that. Donors are the people who keep University Presidents on their thrones. Any canoodling in front of that group would be a threat to the President's OWN position.\n\nI said, \"The other person is my wife Janet.\" He blanched, \"And that is the reason why I am in possession of this.\" \n\nI handed him two stills. They were extremely compromising. In the one she was swallowing his cock to its root and in the other he was banging her doggy style, a look of utter ecstasy on both of their faces. \n\nThe President looked appalled. \n\nOooops! I had forgotten about his vow of abstinence. \n\nHe started to reach for the phone. Then he remembered that both of them were still in New York. \n\nAs his hand was hovering over the phone I said in as non-threatening a voice as possible, \"I believe that the University owes me recompense. Your failure to properly supervise your two subordinates has cost me my marriage and my happiness.\"\n\nThat was something he could deal with. He withdrew his hand and got that cagy CEO look. You could see that he was asking himself, \"How much will it cost me to make this go away?\"",
        "I said, \"You might think that I am planning a civil action and that could still happen. But all you would have to do to bury this problem forever are two simple things. \n\n\"First, fire Todd Breckenridge for gross malfeasance, which you are going to do anyhow. \n\n\"Second, promote my soon to be ex-wife into his position.\"\n\nHe looked poleaxed. He had no problem honoring the first request. \n\nWe both knew that he was going to make fuck-face disappear with extreme prejudice. It might not be like it was in the good old days of the Inquisition. But the Jesuits are still very good at disappearing people who have become inconvenient. \n\nBut why give Janet a big promotion? It made no sense to him.\n\nIn order to help his decision process I said with all of the fake sincerity that I could muster, \"Of course I am divorcing her. But I don't want to leave her destitute. It was Breckenridge who seduced her so she is in essence a victim here.\" \n\nI didn't believe that for one second. But I had my own reasons to get the guy to accede to my demand. And since he was a priest I thought he might buy-into that particular genetically engineered version of the truth. \n\nIt also underscored my position as a good guy. \n\nMy actual motives were a lot less altruistic. I knew that it would absolutely destroy Breckenridge to be outright canned and then discover that Janet had his job. \n\nHe would detect my fine hand in that, which was exactly what I hoped. \n\nI also knew that Janet would suffer tons of agonizing guilt if she was promoted for shitting on me. \n\nMore to the point, it would mean that she was making more money than I was, hence no alimony. \n\nI was not going to pay the bitch one red cent for her treachery. \n\nFinally, and more deliciously, if she had just aced shithead out of his job it would probably prevent any further getting together between her and him. It might actually make him want to throttle her, which was okay by me.\n\nHow I got this vindictive was a puzzlement. But Janet's betrayal was one of those tectonic shifts that had changed me. And the person who was emerging from that cataclysm was a brand new, not particularly nice version of my former self. \n\nI believe it was the great American philosopher Arnold Schwarzenegger who said, \"That which does not kill you makes you stronger.\" Well that was the case with me. I was Conan the Barbarian himself now.\n\nThe President cogitated for a minute and then he said, \"Okay, we can do that. I don't think that your wife should benefit from her immorality. But I can see where it will make it extremely uncomfortable for both of them. Which is a fitting reward for their sins.\" \n\nThen he gave me a conspiratorial wink. The old boy had it all figured out. He was pretty knowledgeable for a man who had sworn to never take a wife. \n\nAnd after what I was going through, I was beginning to think that he might have the right idea. \n\nI said, \"So we're in agreement. You will fire Breckenridge tomorrow and formally promote Janet?\"\n\nHe said, \"As long as the evidence of their affair never sees the light of day.\"\n\nI said, \"You can count on that. Since, it is too humiliating for me personally. It might be displayed in the Judge's Chambers during the divorce but that is privileged information that cannot be legally shared.\"\n\nThe old guy actually patted me on the back as I left. He seemed almost giddy at how cleverly the two of us had administered justice.\n\nThe rest of the day was uneventful. I bought the bachelor essentials, beer and a few good cigars. \n\nThe real pain hadn't hit full force yet. That would happen when the infinite parade of lonely days started marching past.\n\nI pounded a six pack and smoked a Dominican Cohiba as I was sitting in the aft part of the cockpit. I was savoring the pain that I was about to inflict on Janet. \n\nThat thought was the only thing that was keeping me from tying one of the boat's anchors around my ankles and diving into the river. \n\nShe would be getting home about now. And she would find all of the lovely gifts that I had left for her. \n\nFirst there would be my note, accompanied by her little porn show. \n\nThat would be followed by the divorce petition and then a night of getting used to life without me as her husband. \n\nI hoped she was suffering as much as I was. Anger and retribution are an excellent antidote when your only thoughts are about how badly you miss your wife and how much you still love her. \n\nThen the weight of the injustice landed on me like one of those cartoon safes and I found myself howling at the moon, \"WHY??!!\"\n\nMy God! That was embarrassing!!\n\n----\n\nDay four of the rest of my life promised another nice sunny April day. \n\nI followed the previous day's routine. The buffet was satisfying. The long walk from Foggy Bottom to the University was stimulating. And I absolutely aced my lecture. The students looked appropriately worshipful as they picked up their stuff and filed out.\n\nI was thankful that one part of me was still functioning, which was the academician. I have always been a researcher and an avid teacher. That has led to a successful career. \n\nNow I was ready to double-down and bury myself in my work. It made me look forward to the future. \n\nWhat happened next was probably the Fates giving me back something for fucking me over in the first place. I didn't plan it. It was pure happenstance. But it was delicious.\n\nAs I walked back toward 37th street I passed in front of the Dean's Office. When who should appear but two burly campus policemen and Todd Breckenridge. \n\nThey all seemed to be moving in the general direction of the parking lot. It looked like he was being escorted off campus for the last time.\n\nThe moment he laid eyes on me he started to yell, \"YOU SON OF A BITCH!! I know you did this to me!! You and that lying cunt I had so much fun fucking!!\" \n\nAnd he broke from his escort to run at me.\n\nI saw him coming all the way. And as he approached I turned toward him with a completely self-satisfied smirk on my face. I needed him to know how pleased I was. \n\nI could see what was about to happen and made a split second decision. I could definitely use this. \n\nI deflected the haymaker that he threw with my shoulder. And it bounced off the very top of my head. \n\nIt actually hurt a bit. But the flop I executed was worthy of a Brazilian soccer player in the last minutes of the World Cup. \n\nI let out a loud cry of pain, threw my hands up and almost somersaulted backwards to lie sprawled on my back on the sidewalk. \n\nAs my arm went up I managed to flip my sun glasses spectacularly into the air to land another ten feet behind me. It looked like a devastating blow. \n\nIt was a masterpiece of the art of acting.\n\nShithead was about to follow up with a kick to my ribs when the first campus cop reached him. \n\nThe guy grabbed him around the neck with his beefy forearm and threw a punch to fuckface's kidney that made his eyes glaze over. \n\nThen he threw him face first on the sidewalk and the other one handcuffed him. \n\nWhile that was all going on I arose to my feet selling injured and extremely woozy. \n\nThe other cop picked up my sunglasses and handed them to me. I looked at him gratefully and said in my most humble voice, \"Thank you for saving me officer. I was so frightened\" \n\nAfter I did it I was afraid that I had laid on too much horseshit. But the cop looked stalwart and said with false modesty, \"No need to thank me. Just doing my job.\" \n\nMy little voice was laughing its ass off. But none of that showed in my eyes.\n\nHe said, \"What do you want us to do with this guy Professor Butler? Do you want to press charges?\"\n\nThis was getting a whole lot better than I could have ever imagined. My little voice was rubbing its hands together in glee. A felony ought to look nice on shithead's already tarnished resume.\n\nI said in my most indignant, \"highly civilized\" tone of voice, \"Of course I do officer. That man assaulted me in broad daylight right here on our campus. I will do whatever it takes to ensure orderliness and civility here.\" \n\nI knew I sounded like a total wimp. But it was worth it. I play the long game. And what's a little short term macho sacrificed if I could ruin shithead's life forever. \n\nPlaying the badly injured victim like I was only made his unprovoked assault on me seem all the more heinous - \"hee-hee-hee\". \n\nMy little voice was thinking to itself, \"Shithead ought to enjoy his 90 days in the DC Jail. Then we can talk about the civil suit.\" \n\nI truly believe that karma has a way of making things balance. And this was one of those golden moments. \n\n-----\n\nSunday night I was sitting on the quarterdeck of the boat. It was looking like the six-pack and cigar ritual was going to become a daily event. \n\nThe weather had warmed up and the Cherry Blossoms at the Tidal Basin were in full bloom. \n\nIt had finally hit me that I was totally alone and waves of sorrow just washed over me. The dark desolation set in.\n\nThat was when my phone rang. I have gotten into the habit of checking the caller ID to make sure I didn't accidently answer one of Janet's calls. She had stopped calling as frequently as she had earlier but she still called a couple of times a day. I think that was just to keep on my radar.\n\nIt was Jill so I answered. She said, \"Can we meet for lunch tomorrow?\"\n\nI said, \"Sure babe. As long as your husband doesn't mind having his sexy woman dining with a single guy.\" \n\nShe said with some heat, \"You aren't single yet and that's what I wanted to talk to you about.\" \n\nA bolt of angst shot through me. The last thing I wanted to do was have a conversation about Janet.\n\nI said, \"You aren't going to try to talk to me about getting back together with her are you? And if she is there when I arrive I am going to turn around and walk away.\"\n\nShe said, \"I know better than that and so does she. I just want to update you about her and talk about the way forward. I promise no justifications, or begging.\"\n\nI said, \"Well in that case let's meet at 2:15 at the Tombs. This is exam week but I have to eat.\"\n\nShe said, \"See you there.\" I didn't like her tone of voice. It sounded like she was steeling herself for a confrontation.\n\nThe next day I was sitting in the Tombs with a beer in front of me admiring the d\u00e9cor. The place truly looks like a campus hangout and the lunches aren't half bad. \n\nJill appeared in the door and I waved her over. I forgot how much she looked like a less busty version of Janet. The sight of her sent an arrow through my heart.\n\nShe was wearing a simple black skirt and frilly white top. With her cute face, slim figure and dressed as she was she could easily pass for a coed. \n\nExcept she was 15 years out of school. \n\nShe smiled with her mouth but not her eyes as she came bustling over and sat down.\n\nShe said, \"How are you doing? I heard Todd Breckenridge beat you up on Friday. Are you okay? \n\n\"He is still in the DC Jail. They are making it an aggravated assault charge because the officers witnessed it and they said that he really messed you up. That is a felony you know. He is going to get some prison time for sure. He could get a year for that.\"\n\nAh, the beneficial effects of good acting. \n\nI said, \"The rumors of my demise are a little overstated. And how do you know all of that?\" \n\nI actually knew why she knew it. And it sent a fresh wave of pain through me. But I wanted it confirmed.\n\nShe said, \"Because he called Janet to try to convince her to bail him out. She laughed at him and hung up.\"\n\nI poured Jill a beer from my pitcher and said, \"So let's cut to the chase. I know you are not here because of my overwhelming charm and sex appeal.\"\n\nShe dimpled prettily and said, \"Well, if it wasn't for my love for Tom it could be. But yes, I want to close the loop. I know you won't talk to Janet but it is cruel to just let her dangle. So I am here in her place. \n\n\"She is totally devastated, as I suppose you know. She never expected you to find out. But she also told me that she knew how smart you are and she should have known you would discover a way. \n\n\"By the way, what tipped you off?\"\n\nI said, \"If I had not tried to make a romantic gesture I would still have been the ignorant but happy cuckold. And in some respects I wish I hadn't. I rushed over to Union Station to surprise her with flowers for her trip and I saw her and Breckenridge boarding the train. I didn't like the way they were interacting with each other.\n\n\"I am not going to get into the details of how I caught them. That is too technical and boring. But I can assure you that I was, in effect, standing in the same room for the entire five hour ordeal. I saw everything that they did and I heard it all, including the pillow talk.\"\n\nJill's eyes widened. She said, \"Then you already know what was happening. I don't have to explain it.\"\n\nI said, \"Well, I recognized most of it. You might explain to me how a woman could enjoy anal sex as much as Janet did though. I would think that would really hurt.\"\n\nJill looked disgusted. She said, \"You know what I'm talking about. You know why she did it.\"\n\nI said, and I was actually not trying to play dumb here,\" I really don't know what you are talking about. And it was obvious why she did it. She loved all five hours of it. THAT I know.\"\n\nJill said, \"You couldn't tell from the pillow talk that she was in bed with the guy because he had finally pressured her into having sex with him? It was the only time. And she was doing it because he promised her that if she gave herself to him that one time he would leave her alone.\"\n\nTHAT might have been the most personally insulting statement I had ever heard come out of anybody's mouth. Janet's excuse sounded more like a handy-dandy gambit to avoid personal responsibility than a rational explanation. \n\nNobody could think that I was that excruciatingly simple minded unless they were totally brain dead. \n\nMy little voice said, \"Excuse me?!! Does she think I'm an idiot?!!\" \n\nSeriously!!?? Jill had to be a very loyal indeed if she was willing to truck that wheelbarrow full of horseshit in here. \n\nJanet's explanation was so marvelously self-serving that I almost thought that she believed it herself. And if she truly thought that she could back that cockhound off by fucking him, she was even stupider than her friend. \n\nI wanted to say, \"Let me give you a more likely explanation. In Janet's mind, that asshole's pushing her for sex gave her a convenient 'get out of jail free' card to sample some strange\" \n\nBut Jill was looking at me with sincerity. She really believed the bitch. What a faithful friend! \n\nSo I said, \"That was never mentioned in between the spectacular bouts of jungle sex. Of course most of what I overhead was them catching their breath. \n\n\"He DID tell her that she was the hottest fuck he had ever had. And she DID tell him that he had rocked her world more than any other man she had ever been with. That hurt you know. But I got the impression that they couldn't leave each other alone.\"\n\nJill said, \"She hates the guy. Everything you saw was her trying to document a sexual harassment claim. She was even recording the whole thing to use as evidence. \n\n\"She would never have said anything encouraging because she was trying to trap him.\"\n\nI had to throw the challenge flag on that one. I said, \"There were about ten ways she could have done that without fucking him. That was just an excuse for trying it on with another man.\" \n\nNonetheless, now that I thought about it her tone DID seem to be aimed at establishing that she was there under duress. \n\nBut whatever she was thinking as she was reducing our marriage vows to burnt toilet paper was irrelevant. The fact was she had done it.\n\nJanet was clearly trying to win me back by convincing me that her night of passion was a one shot desperation attempt to set up a guy who was harassing her. \n\nThat actually pissed me off. \n\nI didn't have any thoughts about the premise. But thoroughly fucking somebody five times in a five hour period and clearly enjoying every second of it was not something that I wanted in any wife of mine. \n\nAnd there was nothing either of them could say or do to mitigate that. \n\nJanet always thinks she is smarter than everybody, me included. And in most cases she is. \n\nMy guess was that she had contrived her little plot and felt perfectly comfortable in executing it because she had really persuaded herself it was the way to get fuckface off her back while she had a little harmless fun on the side. That actually seemed perfectly Janet. \n\nShe thought that she would have evidence to hold over the guy and it would never hurt me because I would be none the wiser. \n\nIn fact if I had not seen them together at the Station that would have probably been the case. \n\nI was even willing to buy the premise that is was a one-shot thing and it was never going to happen again, because the prospect was irrelevant. \n\nThe problem was that it DID happen. And I witnessed it. Worse I had watched it several times in high definition. \n\nMy little voice commented mockingly, \"They really should have turned off the lights.\" \n\nI said, \"How does that affect me? It won't change my mind about divorcing her and I am sure the courts will see it my way since adultery is still a valid cause. \n\n\"I couldn't possibly take her back after what I saw. In fact I don't even want to look at her, let alone talk to her.\" \n\nJill said, \"If you don't want to reconcile, why did you arrange for her to be promoted? You got rid of her problem and elevated her to his position. Why would you do something like that if you didn't love her? That makes no sense.\" \n\nI said, \"I beg your pardon?!! I love her with all of my heart, whatever that means. And there is no other woman in the world for me. \n\n\"What I did was to make sure she could lead the rest of her life without me. That was done for love. \n\n\"But she is just going to have to understand and accept that she killed our marriage and blew me up as collateral damage.\"\n\nI didn't want to tell her that the promotion was just my way of ensuring that I didn't have to give the bitch anything. That might have made me sound a little less noble.\n\n\"Tell her to move on with my best wishes. But I never want to see her again. I am going to take a year's sabbatical away from here to reinforce that. The University owes me. And when I get back I am going to pick up my life like she never existed.\"\n\nJill gave me a beaten look. I didn't want to hurt her but I had to get the message across that both Janet and she were killing me by prolonging the agony. \n\nI said as gently as possible, \"You and Tom are my friends. Please don't think that I feel anything but love and admiration for you. \n\n\"But tell Janet to not fight the divorce. She is getting the house and a healthy settlement. And she is a high mucky-muck now. \n\n\"She is a beautiful woman and she will find somebody to replace me. \n\n\"Unfortunately that will not be as easy for me to do. So would all of you please be kind enough to just leave me alone and let me try to start over?\"\n\nJill smiled sympathetically. But she said bitterly, \"I will do that. And I will convince Janet to do it too. But the one thing you are wrong about is the idea that she will replace you. \n\n\"She has never loved anybody but you and she will always love you. Nobody will ever substitute for you in her heart.\"\n\nThen Jill stood up. Smoothed her dress and gave my forearm a squeeze. She said, \"I'll tell her everything you said. But I hope you understand that Janet did not intend for any of this to happen. And she regrets it to the very core of her soul.\"\n\nI said \"I'll take your word for it but it doesn't change anything. There is no possible way we could have a married relationship now.\"\n\nI tossed some money on the table and we left together. I trudged back to the boat with sadness fighting with rage to see who got to steer the ship. ",
        "------\n\nThere are four good reasons for getting into the teaching game, May, June, July and August. Those are the months you are off contract but still getting paid. \n\nIn addition, I had arranged for a year's paid sabbatical which meant that I didn't have to be back at the salt mines until the fall of the following year. \n\nAnd I knew where I was going, St Lucia in the Windward Islands. \n\nYou're absolutely correct. It was her last wish as my wife. So YES, it was an homage to our marriage. \n\nWhat can I say? I'm sentimental.\n\nI actually saw Janet once before I left. \n\nI have a big morning lecture, nearly 300 students. I DO love an adoring throng. \n\nThey were all sitting there listening to me and frantically taking notes, while the Teaching Assistants circulated around amongst the seething mass like herding dogs. \n\nI was in full stride when I looked up to the very top of the auditorium and almost swallowed my tongue. \n\nJanet was standing timorously by the door. She looked destroyed. It was the first time I had seen her in the flesh since I watched her board the train with shithead. Her beauty was incandescent.\n\nI felt like 40,000 volts had just passed through me. It took me totally out of my game.\n\nI stopped talking and just stood there at the lectern like an idiot. I didn't want her to have the satisfaction of seeing how much the sight of her affected me. But my mouth was moving like a fish out of water. Nothing came out of it for a good two minutes. \n\nThe students were all looking puzzled at me. I was almost afraid that one of them was going to raise his hand and ask me if my \"gulping\" was going to be on the test. \n\nI took a drink of water and a deep breath and continued. When I looked up again she was gone.\n\n---\n\nI felt like I needed somebody to love and who would love me back unconditionally. So of course I did the only intelligent thing. I went down to the DC pound and got a dog. \n\nThe one I picked was perfect. He was what people call a \"brown dog\" meaning he had so many breeds in him that his chief characteristic was that he was brown. \n\nHe was big and he looked like he might have some mastiff in the family tree. But he had a Labrador face and the long ears of some kind of hound. He had short hair, a very broad back and his tail was docked. \n\nThe rest of the dogs were barking at the front of the cage trying to get my attention. This guy had his back to me projecting total mortification and misery. \n\nIt was like he was saying, \"Don't look at me boss. I'm too ashamed.\" \n\nMy heart went out to the guy. He and I were a lot alike. \n\nI picked him up the next day after his bath and his veterinary check. \n\nThe delay was mainly so that they could relieve him of his balls. \n\nI was thinking with grim humor, \"Janet did that to me. Now we are COMPLETELY alike.\"\n\nHe had a wonderful temperament. Slow, gentle and loving but not in any pushy kind of small dog way. He just sat there in the passenger seat looking devotedly at me, pant-pant-pant-drool, \"Thanks for getting me out of that place Boss. Anything you need from now on you can count on me.\"\n\nI decided to call him Buddy, because he was my buddy. He spent a couple of days getting acclimated to the boat. We were going on a long trip and I wanted him to feel comfortable. \n\nWe were already packed and fully provisioned so it was just a matter of casting off. A 40 can be a little tricky for one man to sail. But I had the diesels and once we got into the open water I could get the mainsail up from the cockpit with the power assists. \n\nWe made it down the Potomac under engine power and when we got out into the Bay I coasted around to Norfolk and the Intercostal under sail. May is good sailing weather and Buddy and I made good time down the coast toward Miami and the open ocean beyond. \n\nI was leaving a wounded man. But I was going to spend the next 16 months healing. \n\n-----\n\nCHAPTER TWO: ASCENT\n\nWe were tied up at the Rodney Bay Marina. The place is one of those \"full service\" marinas that offers everything from diesel to high end shopping. So, it attracts a lot of tourists. \n\nBuddy and I were sitting in the cockpit in the already blistering midmorning sun. I was having coffee and watching the parade. He was watching whatever dogs watch when they are staring blankly off into space and panting.\n\nIn the ten months since my divorce Buddy had gone from companion dog to best friend. I had let my lawyer Bernie handle all of the details of separating me from Janet. And Bernie ensured that both of us got through that sad event with a modicum of dignity. \n\nMore important, he did it quickly and without bothering me. As a result, I now only thought about Janet twenty times a day. \n\nIn the year since I had shoved off from the Marina in DC, I had totally deconstructed the boring guy I used to be. And I had replaced him with the inner boat bum that I always knew was lurking in there. \n\nI was outside in the tropic sun, doing all the chores that you have to do to keep a boat shipshape. Which gave me a deep water tan. My naturally blond well barbered hair was long and shaggy and it had been bleached almost white. And my sedentary body had been leaned down to the bone. \n\nI even sported a 43 year old's version of a six-pack. \n\nI lived in a pair of boat shorts. I added a t-shirt and sailing cap when I was dressed for public consumption. \n\nLooking in the mirror I would think, \"If Janet could only see me now.\" I didn't recognize myself. \n\nI was supplementing my generous University stipend by doing offshore tours in the boat. I'd take tourists out for a day of sailing and poking around the nearby islands. \n\nI had enough to live on with my regular salary. But I had no luxuries unless I did tours. \n\nIt wasn't making me rich but I could have probably lived down there the rest of my life at a certain level of comfort. Meaning I could afford the REAL Cuban Cohibas.\n\nAnd staying on St. Lucia was getting to be a very tempting prospect. \n\nJean-Claude was my agent. He was a happy rastaman who lived somewhere up near Soufriere and spent his time on the beaches hawking outings for the tourists, among his other products. \n\nActually, tours were one of Jean-Claude's more savory lines of business. \n\nI gave him twenty percent of anything that he brought my way. \n\nI had met him my first week on St. Lucia. I had reserved a slip in Rodney Bay for the duration of my stay and there was a place just off the dock called Spinnakers that had the right insouciance. It was also handy enough that I could crawl back to the boat if I had too much to drink. \n\nThe feature that sold it though, was that they let Buddy sit with me on their outdoor patio. \n\nThe island IS French after all.\n\nI had been in that place every night since my arrival, drinking and trying to figure out the local scene. \n\nBuddy would sit next to me, pant-pant-pant-slobber-slobber-slobber, looking attentively for anything that dropped on the floor. \n\nI had just come down from the States. And I was a pasty-faced tourist back then. But I was quickly getting the lay-of-the-land and I was becoming a whole lot more comfortable in St Lucia.\n\nJean-Claude came over and introduced himself about a week and a half after I had arrived and started to hang out there. \n\nHe was coal-black. And he had one of those animated personalities that would have made Bobby McFerrin seem downright Un-\"happy\".\n\nHe was wearing an ensemble that was a type of ratty island chic. It could be best described as \"weather beaten\". It comprised an old aloha shirt and frayed shorts that looked like they had originally been long pants. \n\nHe was playing cheerful island creole when he came over. I knew he was trying to hustle me. But I asked him to sit down. Any guy who could game that well had to be knowledgeable. \n\nI bought him a drink and told him I had just moved down there and I wanted to learn how to thrive and prosper in the St. Lucia culture. \n\nI told him that I thought he looked like the right guy. So I offered to pay him to teach me all of the things I would need to know to be successful in his society. \n\nHis demeanor changed from happy to sly. I could see he was figuring the angles. I could also see that he was a very smart fellow indeed. \n\nHe switched into perfect French accented English and said, \"How about you hang with me for free Mon. I'll teach you enough that they will think you were born here. And you can buy all of the food and drinks.\"\n\nI laughed and said, \"Why do I have the feeling that I would have been better off if I had just handed you a couple of thousand dollars?\" \n\nHe laughed and said, \"You would have been. You definitely would have been.\" \n\nThat was the beginning of a beautiful friendship. Most evenings he and I and Buddy would sit around Spinnakers all night listening to the music, which was really quite good. \n\nThen Buddy and I would walk back to the boat and Jean-Claude would wander off to find another mark. He never seemed to sleep. \n\nJean-Claude took me everywhere and introduced me to everybody and by the time he was done I felt like I could have run for Mayor of Castries City.\n\n-----\n\nOne of the most disturbing outcomes of my divorce was my total lack of interest in sex. In fact you could even extend that malaise to cover my attitude toward women in general. \n\nI don't know whether the fear of betrayal was keeping my desire for female companionship bottled up. Or it was a case of sexual dysfunction due to my sudden change in fortune. \n\nBut I had no interest in interacting with any woman under any circumstances, no matter how hot she might be. \n\nIn fact it took six months after the day that Bernie informed me that I was single once again, before I began even looking at women in \"that way.\" \n\nI was now at the point where I could appreciate a tight female body in a skimpy outfit. But I was still very aware that every one of their beating hearts was full of duplicity. \n\nAt that time of year there are slightly more cruise ships in Castries Bay than there were vessels offshore during the invasion of Normandy. \n\nIt was still semi-miserable in most cities north of the border. And all of those behemoths were disgorging passengers onto our tiny island. \n\nMost of these people were American and frankly embarrassing. The natives were crowded around them like flies on honey, or another substance. \n\nJean-Claude, must have been in the middle of all of that because he called me and said, \"I've got a family that wants a tour up to Martinique. \n\n\"Pick them up at the Halcyon Sandals at 10:00. Good money for you and me Mon. The name is Wilson\" \n\nHe pronounced it like \"Wheel-sone\" Jean-Claude lived for moments like this, \n\nThe Sandals resort he was talking about was down the coast on the other side of Castries City on the Rodney Bay side. \n\nI said, \"Thanks my friend and you can pick up your share tomorrow.\"\n\nHe laughed and said, \"Slow down, you're acting like a grockle Mon. I'll get it by-and-by.\" And he hung up. \n\nAn hour later I was pulling into the Sandals dock under diesel. Buddy was sitting in his normal position at the prow, looking exactly like a canine figurehead, pant-pant-pant-pant. \n\nI had assumed that the \"family\" would be dad, mom and the kiddies. But what was waiting for me was a \"family\" in the sense of brothers, sisters and spouses. \n\nThere were five of them, two men and three women ranging in age from perhaps the mid-twenties to a guy who looked to be in his mid-thirties. \n\nThere was a woman in her early thirties who was slim and had \"yuppie wife\" written all over her. She was clearly with the oldest guy. \n\nThen there was a woman about the same age as the wife who looked so much like the first guy that she had to be his sister. \n\nShe was tall. And she had one of those aggressive bodies with the huge tits that scream \"hot\". \n\nBut she was dressed in slacks not shorts, like a \"no nonsense\" kind of woman. It was an interesting contrast of messages.\n\nShe was clearly married to the other fellow because she was hanging all over him. Even though he looked to be several years younger.\n\nThe woman who was unattached was in her mid-twenties. She was without a doubt the younger sister. \n\nThat one was a total knockout. Not since I first laid eyes on Janet had I ever seen a complete package like the woman standing expectantly waiting for us to tie up to the dock. \n\nShe was in a pair of white boating shorts and a blue polo shirt with an alligator on it. \n\nShe had thick auburn hair that ran down past her shoulders. It was layered into what has been known as the \"Rachel\" for the past decade and a half. \n\nShe had a golden tan and the most perfectly proportioned facial features I have ever seen on a female. It was like looking at the women in a Vermeer, or a Waterhouse. She was stunningly beautiful. \n\nShe was maybe five six and had gorgeous muscled legs and a killer ass. I know that because she was bending down to pick up a cooler as I docked. \n\nI nearly rammed the docking fenders gawking at that extraordinarily stimulating sight.\n\nWhen she turned to board my first impression was \"athlete.\" She was incredibly balanced and graceful. \n\nShe had big round full boobs. They weren't in Janet's league for size but very few women's are. Nonetheless, they perfectly complemented her nubile shape without looking too out-of-proportion big. \n\nShe had broad shoulders and toned arms for a woman, and extra-long smooth sleek muscled legs. \n\nJanet's hips are full and round. This woman had tight athletic hips that just radiated feminine power. \n\nI had already noted that jutting ass. But when she turned to put the cooler down I could see that her long waist was so narrow that it made her faultless, hip structure look almost voluptuous. \n\nI might have lingered a little too long inventorying her because she caught me staring and looked back at me with total disgust. \n\nThe Cruising 40 has a big comfortable cabin and foredeck but the cockpit is a little tight with six people and a burly dog. \n\nI immediately banished Buddy to the galley. He was happy to go down there since I had laid out some extra rations to keep him occupied. Plus all of those people were making him nervous. \n\nThe six of us were distributed around the upholstered benches as I headed back out under power on a course slightly west of north, headed for Martinique. \n\nAlmost as soon as we hit the open ocean the older sister and her husband disappeared into the cabin. \n\nThey left me with the impression that they were none too thrilled to be out on the ocean in the first place. It was like they expected a visit from Captain Jack Sparrow. \n\nI had every variety of island beer in an iced tub and plenty of rum and tequila down below. The sound of the blender in the galley eased any concern about unhappy customers. \n\nThey would be content sitting in the cabin with their Margaritas. And it looked like they were there for romance anyhow, not seafaring. \n\nSome of my couples are like that. The rolling of the waves makes them horny.\n\nThat only left the older brother and his wife and they were cheerfully sitting on the starboard bench watching the water bubble past as we progressed offshore on the diesels.\n\nMy only thought was. \"Empty headed, over-entitled, and rich.\" I saw a lot of that type among the student body at the place where I used to work. \n\nAs soon as I got into the main ocean swells I raised the mainsail. I could have done it by myself but part of the tour is the opportunity to play with the boat. And so I asked for volunteers to haul sail. \n\nThe brother looked at his wife and they both shook their heads. It was obvious that they thought that raising sail was something that the bought help ought to do, not the masters.\n\nI looked at the goddess and her eagerness was written all over her face. She said, \"I have never sailed before but I would LOVE to learn how.\" \n\nShe rose graceful as a cat and came over to where I was at the wheel bringing the boat directly into the wind. \n\nThings can get very interesting if you hoist the main and you are not aligned with the wind on the nose. That was something that I learned to my initial horror on the way down. \n\nI put it on the auto-sailor and wrapped the line for the mainsail hoist over the power assist. I said, \"We are going to need this to raise the sail. Once I finish unfurling it I want you to pull the line through this winch. Don't stop until you get to the top of the mast. Can you do that?\"\n\nShe said eagerly, \"Aye-aye Captain.\" \n\nHer look was akin to a little girl concentrating on riding her first bike. It was so endearing that I almost forgave her for the \"back off creep\" that she had been radiating all of the time she had been on the boat. \n\nWe got the mainsail and jib up as efficiently as I had ever done with Janet. The woman was undoubtedly a physical specimen, perfectly coordinated and very controlled and precise with her movements. I wondered if she was a pro tennis player or something. Her rare athleticism was hard to miss. \n\nThe sails filled as I turned away from the wind off the nose and we laid over on a glorious port tack making maybe eight knots. \n\nIt was so exhilarating that she actually cried out and clapped her hands in glee. The look of rapture on her face hinted at deeper emotions in other aspects of her soul.\n\nI turned back to take the wheel and reset the course for 350 degrees. I said, \"Enjoy yourself. There is food and drink below and if you want to work on your tan the foredeck is a good place to soak up sun.\" \n\nShe gave me the first friendly look she had given me since she came on board. \n\nShe said, \"I love the sun. We don't get much of that in Ann Arbor this time of year. \n\n\"Can I just sit up front? Will anybody disturb me? How long until we get to our destination?\"\n\nI said, \"If the wind holds we should be there in less than three hours. That will make it around 1:00 in the afternoon. \n\nThen your party can decide what you want to do. You can stay on the island for a couple of days, which I suggest. I will pick you up whenever you want to come back. The other option is to make it a day trip. We can run back around 7:00 tonight. \n\nI am up for doing whatever makes you folks, happy. You are the customer.\"\n\nShe said, \"Can we decide when we get in? What is Martinique like?\"\n\nI said, \"It's the Paris of the Caribbean, 'nuff said. I like to tour the distilleries but I adore rum and they make some of the best in the world. The shopping there is supposed to be exquisite but Buddy and I don't shop.\"'\n\nIn the meantime my canine pal had wandered out of the cabin and was sitting by the wheel. I think the people getting sloshed down there were bothering him. \n\nHe has turned into a seadog which is a long way from his streetdog origins. Of course my transformation from academic geek to boat bum wasn't any less spectacular.\n\nI offered my hand and said, \"By the way, my name is Bill Butler.\" I added to be witty, \"It's alliterative don't you know? Everybody just calls me Billy Joe. May I ask your name?\"\n\nShe said, \"It's Milly Wilson.\" It's short for Millicent. My sister down below is Marigold. Everybody calls her Mary. My Brother is Lance, which is short for Lancelot. \n\n\"My parents had a very strange sense of humor when it came to naming their children. \n\n\"The other guy is somebody Mary picked up at the hotel. I don't know his name.\" \n\nThat was interesting. I had assumed that they were married because Mary and the guy were already getting rambunctious down there. \n\nIn fact, they had gotten to the point where I thought we were going to have to batten the cabin hatch to dampen the noise. \n\nBoth Millicent and Lancelot were completely ignoring that show. Apparently Marigold did that a lot.\n\nI said, \"Which ship are you off of?\"\n\nShe said, we flew into Hewanorra yesterday. My sister Maddie and her husband are going to join us here this evening. I used to baby sit their little boy. His name is Billy too.\" ",
        "Then she realized that she had more-or-less implied that my name was childish and she blushed. \n\nI said, \"Don't worry about it. I'm from Alabama and every William down there is either Billy Bob, or Billy Joe. No offence taken.\" \n\nI gave her an affable smile and went back to steer. She gave me an odd sleepy smile and went up front to sun herself. Buster just sat next to me slobbering. \n\nI was watching the sails for a while, in order to gauge the wind. \n\nWhen I looked back up the foredeck I nearly dumped the whole boat. She had taken off her polo shirt and shorts and was just spreading out a towel to lie down on. \n\nI expected her to be in some kind of sexy bikini. Instead, she was wearing a microfiber one piece swimsuit. \n\nIt passably covered her entire body in black fabric. And if it had been made out of cotton she would have almost looked dowdy. \n\nBut because the polymer material was one-micron thick every nuance and feature of that absolutely superb female body was visible. It was like she was wearing nothing but black paint. \n\nIt was such an erotic sight that I sprang something inappropriate. \n\nThank God her older brother and his wife were watching the wake or I might have been keelhauled on my own boat. \n\nTo say that she had a superb body was an understatement. It looked like an idealized drawing of female anatomy. \n\nJanet has a body to die for. But it is built for sex, huge tits, tiny waist and the kind of ass and hips that you want to grab two handfuls of and ram yourself into. \n\nThis woman was built for function; speed and strength, lithe and sleek. I have never seen any woman so strikingly perfect.\n\nWhen you looked at her, the image of a Cheetah, or a Formula One car, or a supersonic fighter plane came to mind, lethal, forceful and absolutely compelling. \n\nIt was the female form as originally intended by the Designer. But perfectly rendered in flesh. It was awe inspiring.\n\nI changed my assessment from tennis player to dancer. You don't get a body that perfectly tight and yet supple without years of dance training. \n\nIt clearly wasn't ballet though. Ballerinas are flat chested. They have to be in order to keep the straight physical lines of the ballet. \n\nThis woman had two huge round hills perfectly anchored as high as possible on her chest. \n\nJanet's boobs are massive and of necessity float on her ribs. This woman's tits didn't move. It was like comparing a big cantaloupe to a watermelon. \n\nI was actually kind of disillusioned by the faultlessness of her boobs. Since the only conclusion I could draw from their absolute perfection was that she had had bought them. \n\nAnd I am not interested in a woman who would do that to herself. \n\nIt was just that she didn't seem like that kind of woman. She just radiated forthright, open and modest. I felt the first seeds of something growing.\n\n----\n\nI dropped my passengers at the Fort-de-France Marina Dock which is right in the middle of the city. \n\nThe cruise terminal is next door and I was under diesel all of the way across Fort-de-France Bay. That was because I needed the steerage to NOT end up under the keel of one of the monster cruise ships coming and going from there like elephants among chipmunks. \n\nI saw all of my passengers off onto the dock and then pulled back into the harbor and dropped the anchors. \n\nComing into Fort-de-France is a little like the approach to Calais, same waterfront and Norman church tower. But the housing that runs all the way up the surrounding hills is pure island creole. \n\nThey had decided to just spend the day shopping since they were going to meet their older sister and her family that night. \n\nMary and her boy-toy wanted to stay on-board and drink. But I convinced them that the local distilleries had tasting rooms so it was worth the trip. \n\nSeemingly, the prospect of sampling free high grade rum piqued their interest more than sex. Plus, they had already had enough of THAT to tide them over for a while.\n\nMary was a puzzle. She was clearly a first-class, buttoned-down yuppie woman, very much in command. \n\nAt the same time she had spent the three hours it took to get over to Martinique drinking and carousing with a stranger who was about ten years younger than she was. \n\nIn addition, it was obvious that the two of them had gotten quite friendly in my little forward cuddy. It was no skin off my nose. And I had plenty of spare sheets to change the bed. But the contrast between her uptight exterior and her unselective appetites was thought-provoking. \n\nI wondered if deep down inside Milly was as voracious as her sister.\n\nMilly spent the time on the way over to Martinique on the foredeck working on her tan. \n\nShe was alternating lying on her back, and then her front. Whatever side she was on was so distracting that I stopped looking straight off the bow. \n\nShe was comfortable with her family there. And not trying to be exhibitionistic in any way. But the material of the suit was so thin that it was like she was naked. It smoothed out the valleys. So some things were still left to the imagination. But her woman goods were on full display. \n\nAs a result, when she was lying on her stomach her magnificent jutting buns and her powerful hips were giving me a hard-on. \n\nAnd when she was on her back her big round meaty boobs were even more disturbing. Particularly because the sun made her nipples sprout to acorn proportions. \n\nEven covered by the suit those two features looked like stalwart watch towers standing proudly on the magnificent mounds of her chest. \n\nThat vision was making me harder than titanium. \n\nAnd I am not even going to get into what happened to me when she turned over. For a very short period she was on all-fours in that classic doggy position. The suit kept things from being too explicit. But the outline of those big fat lips in between her full muscular legs was giving me thoughts that I hadn't had in well over a year. \n\nIn fact, on the short ride over to Martinique, Milly and that suit appeared to have completely cured me of whatever sexual dysfunctions Janet might have instilled. \n\nIt was a fucking miracle!\n\nFortunately Milly changed back into the polo and shorts to go into the City. She would have set off civil insurrection among the male population if she had appeared in Fort-de-France in that suit. \n\nAs she was stepping up onto the dock she said rather hopefully, \"Would you like to come with us?\"\n\nI said, \"I would love to but I've got to keep an eye on the boat. You guys have a good time. The Rue Victor Hugo is the place where the expensive shops are. And if you want to eat try Chez Carole. The Rum Distillery Tour at Le Diamant is to die for.\"\n\nShe said, \"Thank you\" and shyly squeezed my arm. \n\nWhat a rush!! I knew what THAT meant. \n\nBuddy and I sat in the sun all day and waited. I normally kill the time playing on the internet, or reading. Today I was just thinking. \n\nI had been badly burned by a beautiful woman and I was not interested in revisiting that experience. \n\nBut this girl, and she was still only mid-twenties, seemed different. There was something special about her. It was the sense of rock solid personal integrity that she just exuded. \n\nShe was a giver, not a taker. And in that respect she was poles apart from Janet. \n\nFor one thing she was not a vamp. Janet for all of her intelligence and common sense knew the effect that she had on men and she was always up for using it. \n\nMilly either didn't know that she was smoking hot gorgeous, or it didn't matter to her. \n\nJanet was a professional games player. That is what all sales people do. \n\nMilly was so straightforward in the way that she approached people that she was like the girl next door, almost na\u00efve in her worldview. It was refreshing. \n\nJanet's intelligence was like a guy's, always on display for others to see. You could tell how smart she was just by talking to her. \n\nIn some respects Milly might be smarter. But it was a woman's intelligence, subtle, nuanced and less conspicuously egocentric. \n\nAnd did I mention her innate sexuality? \n\nAt first she had wanted to burn me at the stake, for checking her out. But there was something in the way that she walked and held herself that made me think that once you got her motor running she might be even hotter than Janet. And Janet was like an active volcano. \n\nHer mention of her sister's children also fascinated me. We were childless because Janet wanted a career. Milly seemed to have a special love for children. That fit perfectly with all of the other elements of her personality. And I wanted kids.\n\nUsing the word, \"together\" to describe somebody is so 1960s. But that was Milly in a nutshell. She was comfortable within her own skin. She knew who she was and she had nothing that she needed to prove. \n\nShe was cheerful, open and kind and spontaneously affectionate. And for the first time in almost 14 months I found myself speculating about romance. \n\nThat was the point where my little voice reminded me that I was sixteen years older than she was. So it was unlikely she would even find me attractive. \n\nShe probably had plenty of hot young twenty-seven year old studs to take care of her needs at home. \n\nBut I was wondering if she might like to try an island fling with an older man, just to get me back in the game so to speak. It was something to think about.\n\nThey finally called at 7:00 and told me to pick them up. The women were loaded with bags and boxes from the nearly Parisian shopping experience that Martinique offers. \n\nThe older brother wanted to tell me about the Central Market like I had never been there. Then he and his wife went up forward holding hands. It was kind of innocent and sweet. \n\nMary and her boy-pet were sloshed from the rum tour and they quickly retired to the cabin closing the hatch behind them. Definitely an unsubtle hint.\n\nMilly came and sat with me and Buddy at the wheel. She was doing that woman thing where they start to want to get to know you better. \n\nThe sun setting in the tropics is very romantic and it was off our right shoulders in all of its purple and gold glory. She was sitting on the bench next to the helmsman's chair with her arms wrapped around those fabulous legs solemnly studying me, watching me steer. \n\nI said, \"Do you want to try it?\" \n\nShe looked absolutely delighted and said, \"Can I?\" \n\nI shifted over to let her onto the bench. Her hard flank and leg against mine was doing wonderful things for my libido. \n\nI showed her the compass and said, \"Make sure that little arrow is pointing toward 170 and keep it there. \n\n\"A sailboat is like a living thing. The helmsman, the boat and the wind are all parts of the same entity. So steer by feel.\"\n\nShe gave me a dreamy look and then went back to steering. She was chewing on her lower lip, concentrating furiously. It was totally endearing. \n\nI was aware of that superb female body plastered against my side but it was more like a companionship thing, a bonding experience rather than a sexual moment. \n\nAs she steered she casually said, \"Were you born down here?\" \n\nI knew what she was fishing for. I have not talked to a single person on that island about my former life. I was a boat bum to her and that is the way I was going to keep it. \n\nI said, \"No, I am from the States but this is where I want to be.\" \n\nI didn't add, \"Until my heart heals.\" \n\nShe said, still fishing, \"Do your wife and kids live here with you?\" \n\nI said, \"I have neither. It's just me and Buddy.\" \n\nShe said, \"Aren't you lonely?\" \n\nI said, \"Once in a while.\" \n\nShe had no idea HOW lonely I was and I was never going to enlighten her. \n\nThere was nothing left to say after that. So we just sailed along in comfortable comradeship in the rapidly growing darkness. \n\nI took over when it became full dark. She lay back on the bench with her hands behind her head and said with wonder, \"Look at those stars?\" \n\nI said, \"The Ocean at night kind of puts you in touch with the universe. Reminds you how small and unimportant you are in the great scheme of things.\" \n\nFor the past 400 or so days I had needed the continual reminder that the events in my life meant nothing to anybody else. It kept me sane. \n\nBut sitting here with this woman was thawing me out. I was beginning to think of future rather than past. That fact terrified me.\n\nI dropped them at the Sandals dock. Their tip was generous. \n\nMilly had been getting more and more agitated as we came in on the diesels. \n\nFinally she turned to me and said with anxiety in her voice, \"Can I hire you to show my sister and her family around tomorrow? They could use a good guide.\" \n\nI said, \"Certainly, just call this number\" and I gave her one of my cards. I was disturbed by how happy that made me. \n\nThey all trooped up the dock carrying their booty from pillaging the shops in Martinique. \n\nActually her brother and his wife were strolling along hand in hand. Mary and her beau, who seemed to have fucked several times from the sounds emanating from the cabin, were staggering. And Milly was walking ahead of them in all her pantherish grace. \n\nShe was an absolutely stunning woman. A trophy that any man would be proud of.\n\n----\n\nMy phone woke me up at 8:00 the following morning. It was Milly and she sounded disgustingly chipper. I had gotten the boat docked and done the usual post excursion maintenance and cleaning by midnight. \n\nBut for the first time in a long time I drank myself to sleep. \n\nI always keep the door to the cuddy open so I can use the head at night. And Buddy always sleeps at the foot of the ladder leading down into the cabin for our mutual security. \n\nBut for some reason I had closed the cuddy door and it was already getting hot in there. I think that was an indication of my confused state of mind.\n\nMilly said eagerly, \"My sister and her family want to take an excursion. Can you pick us up at the dock again?\"\n\nI said, \"Where do you want to go?\" \n\nShe said, \"Just around the Island. I told them how wonderful it is to be out on the ocean in your boat.\"\n\nI really didn't need the money but I wanted to see her again. So an hour later I was pulling in to the same landing spot that I had visited the day before. \n\nMy faithful beast was standing at his usual post on the bow looking as nautical as Lord Horatio Nelson himself. All he needed was a tricorn, a waistcoat and a spyglass. \n\nMilly hopped onto the boat before I had actually gotten it tied up. There were seven of them this time, although four of them didn't account for much space. \n\nThere was a woman who was as stunningly attractive as Milly. She was shorter and she had Janet sized boobs. Her face was as perfectly proportioned as Milly's. And she was just gorgeous. \n\nShe was late-thirties and she was holding a 4 year old with one hand and a six year old girl with the other. An older kid, perhaps 12 was helping a girl who looked to be about 8 onto the boat. \n\nThe little girl had her mother's exceptional beauty. And even at age 8 she was starting to grow hips. She also seemed to hero-worship the older boy.\n\nIt was the Dad who worried me. In fact he frightened me so much that I almost backed out and took off. \n\nThat is because the dad was Bill Hughes. He is a hacker extraordinaire who I knew through my work with the alphabet Agencies in Washington. \n\nHe owns a big company in Falls Church that specializes in penetration testing and he would know Professor William Butler if that guy still existed. \n\nFortunately Billy Joe the boat bum didn't look even remotely like that other guy. And I was counting on Hughes not expecting to encounter me on the Island of St. Lucia. But I wished I had grown a beard. \n\nThey all boarded, the kids somewhat gingerly. It was clearly a new experience for all of them. \n\nEverybody was provided a life vest and I dieseled out far enough to hoist the sails. \n\nWhile I was motoring out, the kids were all loving on poor Buddy. He was standing there suffering their attention. But he was cutting me looks like, \"Save me Boss!!\"\n\nI just assumed that Milly and I would do the sail hauling since she was getting to be an old hand. \n\nBut she immediately involved the older boy and girl. She even added the six year old to her deck crew. That girl was obviously an exceptional specimen of female athleticism, just like her aunt.\n\nI unbattened the sail and Milly and her hearty crew took it from there. \n\nThey didn't even use the winch. They just hauled the sail up the mast. It was like. \"Yo-Ho-Ho and a Bottle of Rum.\" \n\nThat particular feat of seamanship was mainly attributable to the fact that the bosun who was supervising the deck crew was in all probability as strong as I was. \n\nOn the other hand it was a wonderful nurturing gesture. It was something that only a woman who loved and understood children would make. \n\nHer older sister was watching all of them work the sails with love burning in her eyes. I was beginning to see what a real caring family looked like. \n\nI was also relieved to see that her husband Bill, who she was wrapped around like a high school girl, clearly had no clue who I was. \n\nWe did a complete circuit off shore from Castries around Vieux-Fort Bay. I anchored off Sandy Beach and ran them in for a picnic. \n\nThat is the best beach on the island. Even if the tranquility is occasionally shattered by the noise of a jet arriving at Hewanorra Airport. Which is located right behind the beach. \n\nI let Milly steer part of the way along the coast. She surprised me by asking, \"Can Billy try it?\" \n\nBilly was the 12 year old. Milly and he seemed to have a special bond. It was almost like she was his \"other\" mother.\n\nI had never met a brighter and more manly and respectful kid. So against my better judgment I said, \"Sure.\" \n\nThe kid took the wheel under Milly's guidance and the two of them steered for several minutes. I could tell by his reaction that the boy would be hooked on the sea for the rest of his life. \n\nMy response to Milly and her sister, whose name was Maddie, was interesting. \n\nMaddie was the oldest and Milly was the youngest, Lance and Mary were in between. \n\nMaddie was Janet all over. She was beautiful and voluptuous beyond belief. She was smart, funny and as clearly sexual as Messalina herself. \n\nLike I said, Janet. \n\nWhen I found out that Maddie was also a Harvard educated lawyer THAT sealed the deal. She WAS Janet incarnate. Hopefully without the sluttiness. \n\nNonetheless Milly topped Maddie in all categories. \n\nMaddie had a certain \"force of nature\" presence about her that made her seem seriously self-assured, almost bossy. \n\nMilly had the same strength of character and was just as confident and forceful. But she was the baby of the family. So she came off lighthearted, clever and focused on others. \n\nAnd of course there was that magnificent body. I almost couldn't look at Milly she was so heartbreakingly hot. But she was totally unselfconscious about how she looked. It was almost like she didn't realize that she was a one-in-a-million beauty.\n\nIn the case of Maddie's children, Milly was like Peter Pan with the Lost Boys. She was the fun one, where Maddie was the parent. \n\nAnd Milly seemed to not think about anything except how to nurture and make each child happy. It spoke volumes about her loving spirit. \n\nMaddie's Harvard Law Degree reminded me that I didn't know anything about Milly's background. \n\nAnd make no mistake. At that point I was beginning to think about Milly in ways that were going to involve a background check. \n\nSo I said, \"What do you do Milly? Are you in college? I never asked.\"\n\nShe said totally offhand, like she was telling me what time it was, \"When we get back from vacation I am starting a residency in Neonatology at the University of Michigan Hospital.\" ",
        "Holy shit! She was an MD? It never crossed my mind that this smoking-hot young woman could be a doctor. \n\nIt fit her personality perfectly in that she was a giver. But that type of accomplishment for somebody so young and beautiful never entered my mind. \n\nTalk about being a condescending geezer. \n\nThank God nobody asked me what I did. They just assumed. \n\nBut husband Bill was beginning to cut me glances like he was trying to decide whether he knew me or not. \n\nI wanted to get to know Milly a lot better. That was before I made any hasty decisions about my return to the reality of the grown-up world. And \n\nI didn't want my cover blown in the meantime. So we packed up the lunch that the people at Spinnakers cater for me. And I took them all back to the boat in the Zodiac. \n\nWhen I dropped them at the dock Hughes hauled out his wallet and asked me, \"How much?\" \n\nI told him that the trip was on the house. I really enjoyed my day with them. \n\nThat set off the usual guy thing about, \"Take it! No YOU take it!\" \n\nFinally I told him that if he and Maddie and Milly would join me for dinner I would call it square. \n\n----\n\nThey met me at Spinnakers at 7:00. \n\nThe two sisters were absolute visions. There was ten years difference in their age but they would have looked like twins if you could ignore the fact that Maddie was four inches shorter. \n\nBoth of them were in light linen dresses with tropical prints. Both of those dresses showed off their magnificent legs and their superb boobs. \n\nThey were absolutely enchanted by the venue. I knew they would be. There were three dudes doing something with steel drums and guitars that was so typically creole that it was like they had been hired to provide the night's Caribbean clich\u00e9. \n\nI liked the aspect in Milly's eyes. They were shining every time she looked at me. \n\nShe was stunning tonight. Both sisters have the kind of perfectly proportioned, even features that just please your eye. You feel drawn to their face every time you look at them. \n\nBut fully made up, Milly's eyes and cheekbones and that wide sensuous mouth just pulled me in like gravity. \n\nEvery warning bell was going off in my mind. I was falling in love with this stunning creature. \n\nI had been shit on by one beautiful woman. I absolutely did NOT want to give one a shot to one who was younger and even hotter than the woman who had burned me. But the attraction was inescapable. \n\nFor the first time in 14 months I was not thinking about my ex-wife. Instead I was thinking about the beautiful woman who was sitting across from me and wondering where a future might lead us.\n\nAnd I was counting on my role as beach bum to save me from doing something ill-advised with Milly Wilson. \n\nAs long as I was one of the local fauna I could get to know this lovely creature. And I could confirm that she was who she appeared to be. \n\nAnd at the same time maybe I could worm my way into her heart. I was afraid that if she knew me without understanding what I could offer her, she would blow me off like the dirty old man I was beginning to feel like. \n\nAfter all, I was contemplating robbing the cradle in a very hot and sweaty fashion.\n\nThat was the exact point where Maddie's husband totally blew up all of my hopes. Naturally!! \n\nBilly Joe Butler has always been some vindictive god's personal speed-bag.\n\nHusband Bill said with sheer astonishment, \"I have been trying to figure out whether I know you. And I have to ask you.\"\n\nOh, Shit! Here it comes.\n\n\"Are you Billy Joe Butler? And you know the Billy Joe Butler I am referring to.\"\n\nI thought about trying to lie my way out of it. But these were good people and I owed them respect. \n\nI said rather shamefaced, \"Yes, I'm THAT Billy Joe Butler.\"\n\nHe said, \"What in the world are you doing down here? I would have never recognized you.\"\n\nI said, \"I hit a bump in the road and when all the pieces hit the ground they landed me in St. Lucia.\"\n\nHe said, \"What about Janet, is she here too?\"\n\nMilly looked like she was going to cry. She said timorously, \"Janet??\"\n\nI said wearily, \"She was the bump. We have been divorced for over a year. I am down here getting myself back together after that life ending event.\"\n\nHe said, \"What about??\" \n\nAnd before he could finish his thought I said, \"I know what you are going to ask. I took a sabbatical. I am going back there in a little under four weeks.\"\n\nMaddie said, \"Wait a minute. We all thought you were some kind of island type. Do you mean to tell us that you are actually a big-time academic in the States?\"\n\nThe cat was so well and truly out of the bag that I figured I might as well just shoot it in the head and be done with it. \n\nI said, \"Yes, I am a Full Professor there. And the reason why your husband knows me is that we both do stuff for the National Counter Terrorism Center.\"\n\nI turned to Milly, who was silently weeping. \n\nI said, \"I'm sorry Milly. I have been living the boat life so long that the guy they are talking about is really another person. \n\n\"I truly hope that you understand that I was not trying to deceive you. \n\n\"It is just that the last 14 months I have been agonizing over what my wife did to me. And for a change, I was beginning to develop real feelings for another person. \n\n\"I know that sounds presumptuous but you have managed to restore my faith in womankind and I simply didn't want to confuse that with the rest of my sad story.\"\n\nShe looked at me and said. \"You should have been honest with me. I was falling in love with you.\" \n\nThen she stood up, turned to her brother-in-law and said with quiet dignity, \"Take me home. The dinner is on him\" and stalked out of the place. \n\nI am used to my relations with women ending in disaster so I didn't follow. \n\nThe sadness descended on me as I walked back to my only true friend. \n\nHe greeted me in his usual snuffling doggy manner, \"Welcome back boss. Struck out again I see.\"\n\n-----\n\nIt was hard to leave my happy life in St. Lucia but my sabbatical was up and I would owe the University a year's salary if I was not back in the classroom on the day after Labor Day. \n\nThe situation with Milly had torn the scab off the deep wound that Janet had inflicted. And I felt like I was bleeding-out again. \n\nIt was kind of embarrassing actually. I have nothing but scorn for any man who continues to play the brokenhearted wimp 16 months after a divorce. But here I was doing exactly that. \n\nWhat was strange was that I was grieving over the loss of Milly, not Janet. \n\nI packed and left. Jean-Claude was there to see me go. I had given him the nest-egg I had stashed in case I decided to stay. We had earned it together. He almost looked like he was going to refuse it. You had to know Jean-Claude to understand how touching that gesture was. Money is a sacrament for him. \n\nHe yelled, \"Bon Chance Mon Ami\" as I motored out, \"Au revoir.\" And then he disappeared from view around the bend in the Bay.\n\nI had a hairy time in the Straits of Florida. The first weather of the hurricane season was blowing in and I just got through it before I ran into any situation actually involving lifeboats. \n\nOnce I got into the inter-costal the sea calmed down. But the journey was still very bleak and overcast, at least as far as my state of mind was concerned. \n\nIsland Bill was dead. And I was going back to reality. But there was no love there.\n\n------\n\nI had gotten my hair whacked back to business professional standards. It was still white blond and people with my kind of tan are rare in DC, so I stood out. \n\nIn addition, I was more-or-less rawhide now, not soft and pudgy like the majority of the people around me. \n\nBut I was back to being Professor William Butler the solitary bachelor.\n\nI came out of my morning lecture the second week of class to find Maddie leaning nonchalantly against the wall. \n\nTo say the least it was a shock! She was absolutely the LAST person I expected to run into in real life. \n\nShe had on the same gear as the rest of the students, short pleated skirt and pullover sweater, bare legs and Topsiders without socks. \n\nBut she was impossible to miss. That was because she was far and away the hottest woman in the hallway, if not the entire campus. Perhaps even Washington DC. \n\nMan she was gorgeous!\n\nI was startled to see her and curious about why she was there. So I walked over. I got the impression that she was used to people coming to her and not the other way around. \n\nI said, \"Hello Maddie. I never thought I would see you again.\"\n\nShe pushed off the wall and stood in front of me. She put her hands on my shoulders at arm's length. \n\nShe just silently studied me. Her expression was unreadable. It wasn't hostile but it wasn't friendly either. It was like I was her four year old and I had just shit myself in public. She didn't know what to do with me.\n\nFinally she said, \"Is there someplace private where we can talk?\" \n\nI thought, \"Oh-oh! Is there a problem?\"\n\nI said, \"My office is just upstairs if you want to go there. Or we can go to the Toombs if you want to talk in a more public place.\"\n\nShe said, \"I could use a cup of coffee\" and walked off in the direction of the parking lot without even looking back to see if I would follow. \n\nShe was unquestionably one confident-assed bitch. \n\nI had come by the Metro so she had to drive me. On the way over we exchanged the general getting-to-know you information. \n\nIt turns out that she lived in the Palisades just up from the University. So coming down to see me was no big deal. \n\nI also didn't need to ask her how she found me. Since my location on every Tuesday and Thursday at 10:00 AM is published on the internet. \n\nIt's one of the handy things about on-line schedules. \n\nApparently husband Bill was watching the kids.\n\nWe found a table and we both ordered coffee. Everybody in the place was trying to figure out who Maddie was. \n\nShe was even hotter looking than Janet in the big-busted exotic looks category, which attracts every male's attention. \n\nThe people in the place who knew my real story were all giving me approving glances.\n\nMaddie is a lawyer and lawyers know how to get to the heart of the matter. Since I didn't think she was there to ask me to attend one of the kids' birthday parties I knew what we were going to talk about. So I thought I would preempt the conversation. \n\nI said, \"If Milly thought I was playing her I want to apologize once more. \n\n\"You can see how different the world down there is. The evidence is all around you here in this room.\" \n\nEverybody in the place was carrying on serious conversations about class, or business.\n\n\"I had only known your sister for two days at that point. And it just didn't seem appropriate to try to explain my convoluted history.\"\n\nShe focused more intently on me. Her eyes were pools of intelligence and rock solid strength. \n\nShe said, \"Okay - then tell ME now.\"\n\nI took a long breath and said, \"I was happily married to a woman who was almost as beautiful as you and Milly are. She was my best friend, lover and life's companion. I never thought my idyllic world would ever change. \n\n\"But I caught her cheating on me with her boss. In her defense I am pretty sure that she would have never betrayed me if the guy had not been so bloody persistent. It was just one of those unfortunate circumstances where all of the conditions required to sell me out clicked into place at one time.\n\n\"Nevertheless, when she did cheat it was a \"perfect storm\". In fact, she cheated with such selfish abandon that she blew up every aspect of our special marriage bond. And all of a sudden nothing in my life seemed certain anymore. \n\n\"If you ask me honestly, I don't think she would ever do it again. But I wouldn't bet on it. Nevertheless, watching her perform all of the slutty acts that she did with that man had the effect of reversing the polarity of our relationship. \n\n\"I was always strongly attracted to her. Then after witnessing what she did in that hotel room I was just as strongly repelled. \n\n\"Worse, she was so contrite and remorseful afterward that I found myself being drawn back into her orbit. And I would have lost all respect for myself as a man if I had allowed that to happen. \n\n\"So I decided to build a firebreak between the two of us by going somewhere different. Someplace where I could get my head back on straight. \n\n\"That other version of me was the person you encountered down there. I was Island Bill, the happy beach bum. \n\n\"I had pretty much decided that a life of celibacy would be preferable to the pain that a woman in your life can cause you. And the simple world down there was very appealing to me. \n\n\"Then I met your sister. There was something about her that cured all of my trust issues. It was a totally inexplicable reaction. It wasn't anything I thought about. It was instantaneous. \n\n\"She is just so real, unpretentious and kind. It was like a miracle. \n\n\"Down there I was acting like a little child, hiding from the facts of my real life. Then I met her. \n\n\"Suddenly I wanted a woman to respect me again. I wanted to live up to the standard that she set for me. I could believe in her and her fundamental integrity and honesty. \n\n\"And for the first time in 14 months my life had direction and purpose. I was strong again. And I could face anything including Janet's betrayal. \n\n\"That all came tumbling down when your husband outed me and she left. \n\n\"I just hope Milly understands that I was not trying to deceive her for any dishonorable reasons. \n\n\"I only wanted some time to try to convince her that even though I am older I could be a good match for her, if she would ever consider letting me into her life.\"\n\nMaddie snorted. She said with sarcasm, \"Seriously??? For such a smart guy you are really dense. \n\n\"I can't believe that you weren't able to see that Milly was totally in love with you.\n\n\"And she has been since the moment she laid eyes on you and that smelly mutt. I am convinced that your gender are ALL totally brain dead. \n\n\"Milly saved my marriage when Bill was suffering from the same kind of dementia. And now it is time for me to save hers. \n\n\"YES, she was a little upset when she found out that you are not what you appeared to be. But she expected you to call the next day and explain it to her. \n\n\"It just destroyed her when you up-and abandoned ship without another word. \n\n\"You must have some very serious confidence issues, Pilgrim. \n\n\"I would not be here if she wasn't suffering so much. But she has been a basket case for the past five weeks. And I am getting tired of waiting for you to get your head out of your ass. \n\n\"So I decided to kick-start this thing. Milly will be in town tomorrow and I expect you to make it right with her.\" \n\nThat was said in a tone of voice that brooked no insubordination from the peanut-gallery.\n\nI said, \"But she is the most stunningly attractive woman I have ever known. She is gorgeous, a perfect specimen of feminine beauty. \n\n\"She is an MD and sixteen years younger than I am. She must have a million better looking and more eligible suitors?\"\n\nMaddie shook her head and laughed bitterly, \"Like I said, DENSE!\"\n\nShe said, \"Women fall in love with men. Men have nothing to do with that decision. None of you have the slightest idea about how intimacy works. If it were up to you, humans would have died out eons ago. \n\n\"It probably has something to do with a woman's responsibility to bear children. But our decision to be with someone is a complex choice. And we make that choice solely on our own. \n\n\"When a woman finds the right person she knows it. It is some atavistic ability that we have. \n\n\"It's a combination of chemistry and probably your upbringing and inclinations. It is also partly instinctual. \n\n\"You just see that you can share your life with this man. And a smart woman recognizes that right away. \n\n\"And the only way a woman can fuck it up is if she doesn't listen to what our instincts are telling her.\n\n\"When a woman like Milly makes the decision to love a man, the only requirement is that the man have the balls to step up and cement the connection. \n\n\"You have been the typical male idiot so far. You are overthinking everything and you have no self-confidence whatsoever. \n\n\"But then again, given your history with women that is understandable. \n\n\"Let me assure you that there is nobody with a greater sense of loyalty and devotion than Milly. \n\n\"She is the baby in the family. I basically raised her. I know that she would NEVER betray you, as that other woman did. It is simply not in her DNA. \n\n\"Milly wants to share her life with you. So, you have to pick her up at DCA tomorrow and take her someplace where you can iron this out. \n\n\"You need her in your life, just as much as she needs you. Just get it done.\"\n\nOkay! Maddie is really bossy! But she is also a true force of nature. Her strength of mind just radiated off of her.\n\nNonetheless, she meant what she said and I believed her. \n\nShe handed me the arrival information. \n\nShe added, \"If I don't see her this weekend it will be perfectly all-right. In fact I would prefer not to see her because it will mean you are getting this fixed.\n\n\"And let me assure you that you will never be sorry that you did, because Milly is the best woman that you, or any other man for that matter, could ever hope for in his life. She will make you happy.\"\n\nWith that she stood up and said. \"I hope to see you at all of the family functions.\" And without another word she turned and left. \n\nI was sitting there flabbergasted. The roller coaster had hit bottom and was now rocketing to the top of some yet unexplored pinnacle. \n\nAnd I was not going to fumble the ball this time.\n\n-----\n\nAccordingly, the following day I was standing at the place where passengers pass through the final TSA check point in Terminal Three at Reagan. \n\nIt would be a gross understatement to say that I was nervous. \n\nI was probably surer of myself going up to Susie Franklin's door the night of my Junior Prom, pimples and all. \n\nThe last time I had seen Milly she was walking out of my life. \n\nSo as far as I knew it was even odds that she might decide to tell me what she thought of me right in front of all of her fellow passengers. Or she might take one look at me and walk right past without acknowledging me. \n\nI frankly didn't know why I was standing there. But as the song says, \"Faint heart never won fair maiden.\"\n\nShe came through the passageway dragging her little roller bag. She was a perfect picture of feminine beauty, wrapped in the lethal grace of a big hunting cat. \n\nEvery male behind her was checking out her ass and legs. All of the ones watching her approach couldn't take their eyes off of her superb chest.\n\nThe image of another beautiful woman dragging her roller bag up the platform to the train flashed through my mind. \n\nI was overcome by searing pain. \n\nMy little voice snickered and said, \"You really are a hopeless pussy.\"\n\nThat pain was blown completely to pieces by the events of the next several seconds. \n\nWhen she saw me standing there the emotions that passed across her lovely face were crystal clear and totally eloquent. \n\nIn approximately five seconds Milly went from bored traveler, to not believing her eyes, to pure unadulterated joy. \n\nShe is just like her sister though, totally confident and self-contained. So she didn't come running to me and throw herself weeping into my arms. Instead she calmly walked up to me and said, \"Where's the car?\" Like she had expected me to be there all along. \n\nI politely offered to take her bag. She declined just as politely. The Wilson women drag their own bags. \n\nIt was a long walk to the car. She strode along next to me in her four inch heels, the ones that show off those marvelous legs. ",
        "She was lightly holding onto my arm. Anybody seeing us would just assume that we had been married for years. Not a word was said. We didn't need words.\n\nWhen we got to the car I said, \"The boat is too cramped, so I have a room at the Madison if that is alright with you. Otherwise you can stay with your sister.\"\n\nShe looked at me like I was a total moron and said, \"Why would I want to stay with my sister?\"\n\nI had reservations at the Old Ebbit for 7:00. We had not talked much on the ride up Massachusetts from 395. Both of us knew that would come over dinner. \n\nI told her a little about my trip back. She told me about the start of her new Residency. Her love for children just bubbled out of her.\n\nWe still had some time to kill so I checked us in first. I had gotten us one of the Madison's suites so I sat in the lounge portion while she went in the bedroom to change out of her travel clothes. \n\nI heard the sound of a shower and then several minutes later she came out of the bedroom dressed in what was obviously nothing but a robe. \n\nThere were forces of unspeakable magnitude moving around beneath that fabric.\n\nI stood as she sashayed utterly unself-consciously up to me. \n\nShe said with some urgency in her voice, \"Let's get this over with.\" And she threw her arms around my neck, molded herself against me and opened her mouth in the hottest kiss I had ever been given by a woman. \n\nIt was our first kiss.\n\nHer mouth was burning. It was literally hot. \n\nHolding Milly was the first time I had held a woman in my arms in over 15 months. I had not kissed anybody since that fateful last day with Janet. \n\nIt was an exquisite sensation, worth the wait. \n\nHer hard body with its dazzling pillow tits was plastered against me. She was searching for my tongue with her full lips while she made little excitement noises. \n\nI grabbed her in a hug that would have broken the ribs of a less powerful female. Then my hands slid down that long supple waist to the incredible sensation of those two big muscular buns. \n\nJanet had a nice rear. It was a classic female butt round soft and pliant. Milly's buns were big too. But they were rock hard, not an ounce of fat on them. And they were presently moving wildly under my hand as she rubbed her mound against my rapidly expanding interest. \n\nI think that she had just meant to give me a fervent kiss. It was to break the ice, so to speak. \n\nIf that was her intention she totally underestimated our attraction. It had been building since I first laid eyes on her on that dock. And it had reached a level of energy that was like the collision of two planets. \n\nWhatever ice there might have been instantly vaporized into steam. I pulled her roughly to me by her butt. She let out an unearthly cry of passion. \n\nThat was it for both of us. She threw off her robe in one motion and dragged me toward the bed. \n\nShe was frantically tugging on my belt and unzipping me as she walked backwards. She was emitting little moaning cries as she did it. \n\nShe shucked my pants and underwear around my ankles in one motion. That tripped me and I fell face first onto the bed knocking her backwards. \n\nShe sprawled on her back on the bed, legs wide apart. I landed between them with my face nearly buried in that perfect pussy. \n\nThat was far too mouthwateringly scrumptious for me to pass up. So while she was trying to get herself re-situated on the bed, I spread her lips with the intention of giving her clit a severe tongue lashing. \n\nI was really just trying to keep her interested while I got my shirt off. But I also have to admit that I like to kick off the game with oral sex. \n\nI suppose it's a power and control thing. It drives women nuts. And I like my women very receptive when we get around to the main event.\n\nJanet used to go crazy when I did that to her. But I had never run into a woman like Milly. \n\nThe minute my tongue touched her clit she exploded. \n\nShe groaned loudly and began 10 seconds of frantic hyperventilating. Her hips went up once and then down and then she came in a wildly bucking frenzy. \n\nI hadn't gotten my shirt completely off yet. \n\nI couldn't imagine how a woman could get to orgasm that quickly. \n\nFemale sexuality is a mystery to every guy. We know what women like. But their responses are all individual and different. \n\nOr, in simple terms some women like pork more than others. \n\nMilly was clearly right at the top of THAT scale. \n\nI have to have a sensual bed partner in order to be satisfied. Her getting off is part of my own sexual satisfaction. Maybe it's a male validation thing? Whatever it is, it is a personal necessity for me to have a multi-orgasmic partner. \n\nI married Janet partly because she was so insanely responsive. But Milly was a whole lot hotter.\n\nHer first orgasm really lit her fire. Her next act was to reach down between her legs and frantically grab me by the side of my head and drag me up her body. \n\nI had to come along or I would have been in two pieces, head one place and body someplace else. \n\nYou would have to be inordinately strong to do that. \n\nMy trip up over her body was lubricated by her sweat. She was writhing intensely as I slid over her. \n\nJanet had a flat stomach but it was not defined like Milly's was. Her stomach was so flat and muscular you could see the underlying structure. \n\nThe expression on her face was wild. She knew that I was there but she couldn't see me because her eyes were rolled completely up in her head. \n\nHer scent was bombarding every hormone I owned. \n\nOnce she got me where she wanted me she was not going to be kept waiting. She reached down, grabbed Old Lucifer and just shoved him into her boiling hot silt. \n\nShe was a Goldilocks fit, not too tight and not too loose, just right! \n\nAs I slid into her. She made a loud \"Ahhhh!!\" of satisfaction. Then she started to buck like a wild-thing. \n\nWe were perhaps five minutes into this and she had reached heights of passion that Janet could only dream about. \n\nWhy I didn't cum then was beyond me. Because I was tightly engulfed in white hot silk. There were flutters going on in the surrounding walls that were like lightning strikes on the distant horizon at sea, powerful yet completely divorced from the frenzy of sexual activity that was going on right around me.\n\nShe was gasping for breath as I hit the end of her passage. Then she began that age old rocking motion. She was emitting little grunts and sharp cries every time I bottomed out and muttering, \"Oh-fuck-oh-fuck-oh-fuck!\" Under her breath. \n\nThen she started to outright scream it. She was just yelling, \"Fuck me Billy Joe, Fuck Me!! Don't Stop!! Don't EVER Stop!\" and then she reached up with her legs and wrapped them so tightly around my ass that the only person who COULD move was Milly. \n\nShe ground herself in ever widening circles on me and started the hyperventilating again. Then she screamed, \"Cumming-cumming-cumming-OH GOD YESSSS!!\" \n\nHer legs released me at that point and as she bucked and groaned with satisfaction I pounded myself to the desired conclusion. \n\nShe was emitting little puffs of air with each thrust, so totally abandoned that drool was actually running out of the sides of her mouth. \n\nThe sight of her stunning face, utterly frenzied and out of control with desire, did it. I practically deposited my entire sexual system in her hungry hole. It was literally painful. \n\nWhile I was painting her womb she was moving her hips back and forth in exaggerated motions trying to milk every drop out of me. \n\nThe whole thing took fifteen minutes at most. But I have to say that I felt more thoroughly fucked and totally fulfilled than if we had been going at it for hours. \n\nI don't know whether it was the effect of true love. Or that Milly was just that superb a lover. But what we had just experienced was the hottest sex I had ever had bar-none. It was so unworldly there was nothing in my past experience to compare it to. The woman was a goddess.\n\nI was lying between her spread legs looking down at her. I saw that she was terrified. I am no smarter than the average man but I knew what that look meant. \n\nShe was afraid that I would interpret her downright Animal Planet behavior as slutty. Instead of what it actually was, which was her gift to me. \n\nI had to tell her that I knew the difference.\n\nI said, \"You are an incredible woman. What we just shared has created a special bond between us that I hope we can keep for the rest of our lives. Or at least until I can't get it up in my old age. I want to spend that life with you. I know that this is premature but we need to talk about our future together.\"\n\nOne possible answer to that statement might be, \"What are you talking about? I was just horny.\" \n\nBut I was counting on what Maddie had told me. As usual Maddie was right. \n\nThe pure joy that spread over that exquisite face was gratifying. She said almost shyly \"I'm yours if you want me.\" \n\nIt was incredible, she was significantly younger than me, an absolute stunning beauty an accomplished professional who had successfully made her way in a man's world and I might add the hottest piece of ass in the Solar System. And here she was humbly offering herself to me like she wasn't everything a man could ever want and desire wrapped in a single remarkable package. \n\nI thanked the Lord for women's insecurities.\n\nI said, \"We have a lot of talking to do but I can't imagine my life without you.\" \n\nWe both adjourned to the shower which led to the most superb blowjob I have ever been given followed by me pounding her senseless against the shower wall. \n\n----\n\nAn hour later the cab dropped us at the Old Ebbit. It was just a short ride down 16th and over on H to 15th. \n\nI chose the place not so much because it was Grover Cleveland's favorite hangout. I chose it because it has quiet and very private booths where you can carry on a meaningful evening's conversation. \n\nI was proud to be seen with her. She was incredible in a simple black dress and pearls, with the patent leather pumps that go along with that ensemble. Her muscular legs look spectacular in heels anyhow. \n\nShe was not going out of her way to show off her breasts but they are so tightly gathered and naturally high on her chest that it would be impossible to wear a scooped dress and not display a lot of cleavage. \n\nDuring our impromptu sexual encounter I had answered one lingering question. I now knew from close and lengthy examination that there was no silicon involved in the making of those magnificent things. They were all Milly Wilson.\n\nWe ordered and then I turned to her and said, \"So can I assume that I am forgiven for not being as clear as I should have been about my status?\" \n\nShe smirked and said, \"You earned your forgiveness after my third orgasm.\"\n\nI said, \"Do you want me to tell you my entire story?\"\n\nShe said, \"Maddie filled me in last night. I cried when I heard it. What a tragic situation. You must have loved her.\"\n\nOkay! All-In!! \n\nI took a deep breath and said, \"I love you a lot more. I have loved you since that first night on the boat under the stars. I love you for your wonderful nurturing spirit and the way that you have with children. I love your humble self-effacing soul. I love your cheerful love of life and I will love you forever if you will have me. \n\n\"I know I am a lot older than you are but I am in good shape. I have a good job and you will never doubt my commitment or my desire for you.\" \n\nHer eyes glistened with tears. She said, \"So what does this mean? What are your telling me?\" \n\nYou could see that she knew exactly what I was telling her but the minx wanted me to say it for the record. \n\nSigh!! Once more unto the breach dear friends.\n\nI said, \"If you would consider marrying me I would swear that you would never regret it.\"\n\nShe reached across the table and grabbed my hands and said, \"Yesss, Yesssss, a thousand times YES!! I will make you the happiest man in the world.\"\n\nThe sun came out, the grass was green, the little blue birds were chirping, the beautiful butterflies were fluttering around and suddenly my future looked nothing but perfect. \n\nBut the Gods love to fuck with me. \n\nAt that precise moment Janet materialized next to the table in a figurative puff of smoke. I could almost smell the hint of brimstone. I hadn't seen her since that moment at the back of the lecture hall 15 months ago. \n\nShe gave me a delighted grin and said, \"How wonderful to see you Billy\". \n\nRunning into her there wasn't exactly a coincidence. Old Ebbit is a hangout for the DC power players and the guy standing possessively behind her looked like one of those. \n\nI should have thought of that, Damn!!\n\nHe was fiftyish and in one of those $4,000 silk suits that the K-Street boys favor. He was tall, wonderfully fit, smooth, handsome and utterly smug. He was not unlike Mr. Todd Breckenridge.\n\nWrapped in a silk evening gown Janet was as alluring and sexual as ever. She is a beautiful woman and when she is firing for effect, as she most obviously was tonight, she is stunning. \n\nShe was ALSO wearing a rock that was slightly larger than the iceberg that sank the Titanic. \n\nThat didn't take long!! So much for never replacing me. \n\nJanet's appearing like Beelzebub at the happiest moment of my life, was one of those curve-balls that the Fates like to throw at my head. \n\nBut, this time I turned on their pitch and knocked it right out of the park.\n\nIf Janet had made the same sort of appearance one day earlier I would have probably thrown up my hands and run screaming out of the place. \n\nBut I had my beautiful, remarkable and steadfast woman sitting with me now. The woman who had just consented to be mine forever. And with her by my side I was invincible. I was Hercules standing on Superman's shoulders.\n\nI rose to my feet and turned unhurriedly to face my former wife. She was looking very hopefully back at me. \n\nIt was like she expected me to leave both Milly and the husband right there at the Old Ebbit and run off with her. \n\nI said with all of the kindness I could muster, \"It is good to see you too Janet.\"\n\nI could tell that my appearance puzzled her. Janet was used to the pudgy pasty me. Since she had last seen me I had turned myself into a bronzed specimen of ripped humanity. \n\nAnd I could see by the sexual interest that flared in her eyes that she appreciated the transformation. \n\nMilly had been sitting there, perhaps as shocked as I was. This could have been a total disaster for both of us. But my girl is a warrior. \n\nAnd of course she had the advantage of good breeding and a few extra IQ points. \n\nShe rose from her seat with her natural unaffected grace. That way Janet and her husband got a full view of the entire package in her tasteful little black dress. \n\nBoth of them looked Milly over from the top of her thick auburn hair down that magnificent dancer's body to the tips of those dainty little feet. \n\nThat sight alone would be intimidating to any woman, given Milly's perfect shape and gorgeous face. But she was also almost four inches taller than Janet. So she was looking down at her. \n\nJanet gave me a confused look like, \"Who the fuck is she??!!\"\n\nMilly extended her hand, totally self-possessed and said, \"I am very pleased to meet you Janet. Billy has said SO many flattering things about you that I feel like I know you. Now that I have met you I can see that he actually understated your beauty. \n\n\"Let me introduce myself, I am Doctor Milly Wilson, Billy's fianc\u00e9e.\" \n\nJanet looked absolutely stupefied. Milly was clearly a decade younger than she was, just as beautiful and several degrees hotter on the woman scale. And she was a doctor?!! \n\nI almost felt a modicum of pity for the adulterous bitch. \n\nMilly turned to Janet's husband and said, \"I am pleased to meet you too sir.\" The \"sir\" must have hurt but he WAS twice her age. \n\nJanet's husband looked at Milly like he was falling in lust right there in the restaurant. What man WOULDN'T want her? A body that hot and a face that striking is hard to resist. My totally remarkable woman was a sight to behold. \n\nJanet got her voice back. She said, with total astonishment, \"Doctor?? Do you teach at the University? I am a Vice President there. I don't believe I have ever heard of you.\" \n\nMilly said, \"No, I'm an MD, not a PhD. I specialize in Neonatology at the University Hospital in Ann Arbor Michigan. Billy has asked me to marry him and I accepted. So I will probably transfer down to George Washington University Hospital for the rest of my residency.\" \n\nPoint, game and match to Milly Wilson.\n\nShe couldn't have been clearer. She had just hung out the \"no trespassing\" sign. And she had the goods to enforce it. \n\nI should have gotten some form of sick pleasure at the defeated look on Janet's face. But I almost felt sorry for her. \n\nShe looked flummoxed then she turned pale. She might be married to some other man. But she had obviously still held out hope. \n\nMilly's declaration was the windshield to the bug of Janet's expectations.\n\nJanet took a second to recover. And then she said brightly, \"Well that is wonderful. Sydney and I have only been married for eight months. We are planning a honeymoon ln Europe as soon as we get the time.\" \n\nThat looked like news to her husband.\n\n\"You will have to send us an invitation to your wedding.\" \n\nI was thinking that I would be dive bombed by flying pigs before that happened. I had already been to one wedding involving Janet. Been there! And done that! \n\nNevertheless, I just smiled and said, \"Certainly Janet and it was a pleasure seeing you.\" \n\nI kissed her on the cheek. It was a social gesture. I felt absolutely nothing doing it. \n\nI had the magnificent woman who I knew I would grow old with standing next to me. Any latent grief or personal agony from the past had evaporated the moment that Milly had said, \"Yes.\" \n\nIn the end any thoughts of vengeance felt cheap. I turned to Janet's husband, who was looking at her like she had lost her mind, and offered my hand.\n\nI said, \"And congratulations to you Sydney. Janet will make you very happy, as she did me. I wish you two the very best.\" \n\nHe looked skeptical. Was there already trouble in Paradise? How delightful!!\n\nWithout another word the two of them turned and Janet walked forever out of my life. \n\nShe was holding the arm of her new husband. She was firmly in the past now. \n\nI turned to my future wife and said. Shall we go back to our room? We have a lot of planning to do.\n\nShe smirked and said, \"You won't be doing much planning tonight. I have other things in mind first. And I don't think you will be getting much sleep. We have a lifetime to plan.\" \n\nEPILOG\n\nMilly and I were standing together at Commissioning Week at the Naval Academy. We had just passed our ninth anniversary and our life seems to just keep getting better. \n\nHer nephew Billy, the one who she had the special bond with, was one of the new Midshipmen. \n\nHe has grown into the manly, respectful kid I first met steering the boat. And he will be leaving tonight for NAS Pensacola and a career as a no-doubt Top-Gun.\n\nThe other kids were standing with Bill and Maddie. I have my own special bond with the next oldest girl, whose name is Chelsea. \n\nShe is 18 now and another one of the Wilson women, truly gorgeous and smoking hot. In fact she might outdo her mother and aunt in the looks category, which is an exceptional achievement. \n\nBut like her mother and aunt, she has a lot more going for her than her stunning beauty. \n\nShe is a true genius in all of the nerdy areas that I am expert in, particularly computational math. Which is why we are so close. \n\nShe has Milly's wonderful self-effacing charm and I love her just like she is my own child. I tried to talk her into coming to my University but she had her heart set on MIT. ",
        "Nonetheless wherever she is she will always have Uncle Billy as a best friend and mentor. \n\nAt 36, Milly is getting out of the window to have children. She has spent the nine years we have been married becoming one of the leading neonatologists in the Country. \n\nBut hospital life is so NOT Milly. Instead, she has traveled to every third world hell-hole on the planet with Doctors without Borders. \n\nMostly she sets up advanced pediatric facilities. But she always finds the time to do direct care of the local children. So every place she has been she is treated like a healing saint. \n\nWhat the rest of her family DOESN'T know is that her travels are over now. because in six short months we expect twin girls. And like her sister, Milly takes motherhood seriously. \n\nSo she will be taking a few years off to raise our daughters. She has frequently told me that her career achievements are nothing compared to the opportunity to nurture our children. And I believe her. She is just that kind of person. \n\nI have no moral to end my story except this. Life is going to dump on you. But it will also hand you the occasional key to your own happiness. So it is important to keep bailing the boat until that lifeline appears. And then grab it and hold on to it for all you are worth. And most of all NEVER question your good fortune."
    ],
    "authorname": "dtiverson",
    "tags": [
        "cheating",
        "hot wife",
        "big tits",
        "revenge"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-short-happy-life-of-island-bill"
}