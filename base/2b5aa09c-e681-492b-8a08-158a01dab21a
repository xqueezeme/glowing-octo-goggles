{
    "title": "Mira Ch. 04",
    "pages": [
        "Hi guys,\n\nI know you've all been waiting for this one. Some more patiently than others. ;) Keep the feedback and comments coming!\n\nI'm gonna try and get some stuff written more quickly again. So keep an eye out. I have a little time.\n\nIf you get a chance go vote in the Reader's Choice Awards! There's tons of good stuff. :D\n\nThanks for the comments, feedback and adding me to your favorites. You have no idea how much I appreciate all the support for my writing! *kiss*\n\nChapter 4\n\nRillan woke to a warm body trying to squirm out of his grasp. He opened his eyes and smiled as he watched Mira attempt to get out of the bed without waking him up. \"Trying to escape?\"\n\nMira flinched, her head swiveled, and she leveled a glare on him that had him laughing. He pulled her, protesting, back into the bed. \"Hey,\" she squealed and fought against his iron grip to no avail.\n\nRillan was having none of it. He was glad she was feeling well enough to put up a fight, but he wasn't ready to get out of bed yet. He still owed her. She had passed out before he could finish feeding and he had been too hungry to enjoy her body before eating. So he had plans for her before letting her go. Rillan moved so that he was propped over her and looked down into her annoyed eyes. \"What,\" he chuckled. \n\n\"You can't let a person find a chamber pot with some dignity,\" she snarled at him.\n\nRillan rolled off of her, still laughing. It felt good. \"Just come back. I'm not done with you yet.\"\n\nMira scooted to the side of the bed. Her stomach turned some. It was nowhere near as bad as it had been the last time. Still, she wondered what he had in mind. \"I don't know if I'm up to whatever you're thinking about. You're not still hungry are you?\"\n\nRillan's good mood fell a bit. He sat up behind her and stroked her back. \"No, not hungry. Are you all right. I guess I should have considered this. You tend to make me think in different directions at the same time though. Do you need help?\"\n\nMira blushed. \"No, just tell me where the chamber pot is.\"\n\nRillan got out of the other side of the bed and grabbed his robe from a chair nearby. He walked around to Mira and placed the robe over her shoulders. \"It's in the stand there,\" he said, pointing. \"I'll get the bath warming. You'll feel better after you get cleaned up and eat.\"\n\nHe watched her stand, making sure that she could, and then left the room, not bothering to dress. Mira watched the naked man retreat into the darkness of the hall and saw some light begin to flood into the gloom. He must be lighting candles. She managed to find the chamber pot and finish with it before he came back. \n\nAs Rillan walked into the room with some things for the rarely used cook pot that was on the floor near the fire, Mira couldn't help but appreciate what she saw. He was all lean and muscled. Firelight danced off his skin and Mira felt heat begin to pool between her legs, even if she wasn't feeling at her best right then.\n\nMira was lost at what to think. The last time she had been in his room he had nearly killed her. Now he was warming her a bath. It was difficult to decide how to behave or think with mixed signals like that. She sat on the edge of the bed. \n\nMira's eyes drifted to the covered shaft that led outside. She hadn't noticed before but the angle of the bed seemed near perfect to allow for someone lying in bed to look out the shaft and see the sky. She wondered if he lay here at night watching the stars. I would, she thought longingly.\n\nStaring at her from the fireplace, Rillan could see what she was looking at. He walked across the room and over to the release for the heavy door covering the shaft. Mira shifted nervously. She hadn't known that he was watching her. \"Fresh air would probably do you some good,\" he said lightly and forced a solid bolt to the side then allowed the door to fall open. \n\nFrom her seat on the bed she could see the moon just off in one corner of the shaft. It was a clear night and stars dotted the sky. After a few moments Mira could smell the night breeze filtering down the shaft and into the room. She never wanted to close her eyes again.\n\n\"I'll leave it open,\" Rillan said. \"You're bath is ready.\"\n\nMira finally tore her eyes away from the sky and looked at Rillan again. \"Thank you.\" She wasn't sure what else to say.\n\nRillan nodded at her and gave her a weak smile. \"Do you need help?\"\n\nShe looked into his hopeful eyes. Mira was getting the distinct impression that Rillan was feeling badly about the way things had gone the last time she had been here. She didn't know what he thought he was going to help with if she was in a bath. The thought had her blushing again as a look of uncertain curiosity over took her soft brown eyes.\n\nRillan smiled. \"Come on,\" he said, offering her his hand to lead her back.\n\nShadows danced around the hallway as Rillen led Mira to a wash room very similar to her own. There was a large tub set into the center of the room with steps up to get in. Mira could smell rose water. When she looked into the tub she found that there were petals floating in the water. Rillan took the robe from her shoulders and helped her into the water. The warmth seeped into her skin as she sunk down into the fragrant bath. Before Mira knew what was happening Rillan had stepped in behind her and water sloshed out of the tub around the sides as he sat down, drawing her back into his arms.\n\nAfter a few moments of surprised, uncomfortable, uncertainty, Mira relaxed. She let her head fall back against Rillan's shoulder and closed her eyes. A soft sigh escaped her lips as the warm water took the chill from her body. Just as she thought she might fall asleep, Rillan moved and reached for something. Mira was too tired. She didn't bother to open her eyes to see what was happening. She figured she would find out soon enough. \n\n\"Sit forward,\" Rillan said softly and gently pressed her forward to prompt her into movement.\n\nMira finally opened her eyes and saw that he had soap and a thick plush cloth in one hand. She leaned forward, bringing her knees up to her chest, and laid her head on her knees, wrapping her arms around her legs and giving Rillan access to her back. She felt the soft cloth slide over her skin and she sighed contently, letting her eyes close again.\n\nRillan put more soap on the cloth and ran it along her arms and down her sides. He took his time, watching the suds slide down her skin and into the water. Once he was satisfied with her back he pulled her into his arms again. Mira felt the soapy cloth skim over her breasts as he began washing her shoulders and chest. The soft cloth tickled over her skin. Her nipples puckered as he spent some time soaping one breast and then the other. Mira arched her back, pushing her breast into the palm of his hand and moaning softly. Arousal and exhaustion warred with each other in her body. Rillan's hand moved down along her stomach, painfully slowly. \n\nMira parted her legs as Rillan's hand moved lower and lower along her stomach. He paused. The strange pain in his chest began again. He couldn't believe that she was so willing and eager to let him touch her. She squirmed wantonly in his arms and lifted her hips, protesting the pause in his caress. Rillan bent his head and placed a lingering kiss on her neck and nuzzled gently along her jaw line, up to her ear, kissing random spots as he went. He purposely held her off longer, wanting her to ask him for more, adoring the way she seemed to need him. He didn't really believe she wanted a monster this way, but what man was left in him was near tears with appreciation of the fact that she was even willing to pretend.\n\nAnother small groan escaped from Mira's mouth. Her hands reached beneath the water, took hold of his hand and pushed his fingers into her slit, delighting in the rolling pleasure that the pressure created in her lower stomach and up her body. Rillan slid his fingers teasingly along her slippery opening, letting her moans and movements guide his touch to where she wanted it. When her body began to tense and tremble in his arms he was more than a little surprised. He pressed his finger inside her so that he could feel her come. Her soft inner walls sucked on his finger hungrily. Her whimpers in his ear told him with a great deal of certainty that it wasn't as satisfying as she would have liked. \n\nMira tried to push down further onto his finger as the fluttering sensations ceased. But the position in the tub and the confined space made it impossible for her to get the leverage she needed. She looked back at him over her shoulder with an almost desperate glow in her eyes. She was too shy to ask him to do anything specific to her. But the need was there as she looked at him. Embarrassment flooded her as she realized how she was behaving. \n\nMira blushed a beautiful shade of crimson and looked away from Rillan again, uncertain how exactly she should be with him. She really didn't know what he wanted. He had been so confusing. Was she a meal or a lover? An intruder in his space or a welcome guest? A friend or a reminder of all the worst parts of his existence? In lieu of knowing what he wanted from her she opted on waiting for him to give her another direction of some kind.\n\nRillan was torn between crying and laughing. He pulled his fingers from her and she whimpered again. \"Shh,\" he whispered against her ear. \"There's more,\" he promised. Rillan kissed her ear lobe then guided her to stand with gentle pressure against her back and sides.\n\nPulling a towel from the rack standing near the tub he wrapped her in it and then stepped out, turning to offer a hand for her to step down as well. Mira's eyes roamed his wet naked body of their own accord. She allowed him to help her out of the tub and then stood in absolute bliss as he proceeded to dry her off with the towel he had wrapped her in. She could feel his hands through the soft material, massaging her shoulders, back, sides. He knelt in front of her and rubbed the soft towel over her hips, down her thighs, inside her thighs. Mira's breath was coming in short gasps as she felt the need for his touch in very specific places building again.\n\nOnce Rillan was satisfied that she was dry, he stood with the towel in his hands and quickly ran it over himself. It was still wet from her body but he was partially dry from the amount of time he had spent on her anyway. When he looked into her eyes again there was intense concentration staring back at him and she was biting her lower lip hard enough to draw blood.\n\nMira watched his eyes bleed to black as he stepped toward her. Her heart raced with fear once she saw the change. But there was no running from him like this. The black sockets were unreadable and she was certain that he was about to feed on her again. To her surprise he only kissed her, sucking her lower lip into his mouth and tasting the sweet, warm, coppery liquid on his tongue.\n\nRillan scooped Mira up into his arms and carried her back to the bedroom. The air had cooled and smelled of the world outside: summer breeze and forest. He laid Mira on the bed so that she could gaze out the shaft at the night sky. With her eyes trained on the stars that she hadn't seen in so long, Rillan's change in demeanor vanished from her thoughts and she nearly missed his movement over her body.\n\nA gasp was forced from Mira's mouth as Rillan pushed her legs apart and leaned down to lick the soft pink folds of her sex. He looked up into her eyes with an accomplished grin. Mira stared back shocked and uncertain what to say or do.\n\n\"So it is possible to get your attention away from dreams of running outside,\" he said impishly.\n\n\"You are a very confusing man,\" she said with a hint of anger in her voice.\n\nAs if testing her Rillan leaned down and licked her again. Mira's eyes widened, watching as his tongue snaked out and stroked the sensitive flesh. He lingered on her clit, sucked it into his mouth, and then sat back, looking into her eyes again. \n\nWith her eyes drilling into him he began to feel guilty again. Releasing her flesh from his lips he sat back, staring down at her exposed pussy distracted as he spoke. His eyes intent on memorizing ever fold. \"I'm sorry for that,\" he said. \"The inconsistency. How badly do you want to see outside?\"\n\nRight now the only thing Mira wanted was the end to the conversation and have something much larger than his finger or tongue inside her. She squirmed before him on the bed, her legs spread wide in a wanton display that she did nothing to correct. If he put her in that position she was willing to stay there. \"Do we have to talk about that?\" She was concerned where this was going and made a mental note to only look out the shaft when he wasn't paying attention.\n\nLicking his lips, Rillan continued to stare at her swollen weeping sex. By all the gods she's beautiful, he thought. \"No,\" he said, never tearing his eyes from her. He reached down and stroked the protruding wet folds teasingly with a feather light finger as he spoke. \"But I will revisit the topic shortly. Just tell me one thing.\"\n\nArching her back, Mira tried to get more from his fingers than the cruelly light touch he was providing. \"What,\" she breathed heatedly.\n\n\"Tell me truthfully,\" he stopped touching her and moved up her body. Pinning her down he let the blackness take his eyes so that he was looking down on her trapped form with the beast. He watched her squirm beneath him, uncertainly, the flushed passion suddenly abated. \"Do you really want this to make love to you,\" he asked in almost a whisper. Rillan decided that he could handle it if she was only pretending for his benefit and her own self preservation. He would live with that. But he wanted to know for certain what it was he was dealing with: a woman insane enough to want him or smart enough to lie to him. \n\nMira stared into the black. She didn't want to answer him. It felt as though he could read her and know if she was lying to him. \"No,\" she finally said.\n\nRillan nodded, the pain in his chest was back. She's smart. The though drifted listlessly through his mind. He shifted back to the task at hand, wishing he hadn't wanted to know so badly. Without looking at her face he moved his mouth to her breast, determined to bring her as much pleasure as her bravery had afforded him.\n\nWhen the wet heat of his tongue began swirling around her nipple it was almost impossible for her to gain enough self control to stop him. She didn't understand the pain on his face when she had answered him. It wasn't as if he was in love with her or even cared about her. Was it? Mira forced Rillan to look at her. His eyes had returned to the deep blue that made her forget what he really was. They were a little glazed and concerned. Rillan was worried that she had decided to stop this now that he had made her admit she didn't want it.\n\n\"I want you to make love to me,\" she whispered timidly.\n\nHe looked into her eyes searching and shook his head. \"That doesn't make sense.\"\n\nMira swallowed. \"You, not the vampire,\" she explained. \"Maybe I'll grow used to that in time. But for now can't it be you?\"\n\nRillan didn't know how to respond to that. She couldn't be real. He was having some kind of dream. Without a word he moved back up her body and kissed her. His lips pressing insistently against hers, his tongue searching her mouth. Mira wrapped her legs around his waist and pulled him down onto her. \n\nMira felt his hard, thick, shaft press against her. She thought she might go crazy if he continued torturing her like this. Rillan's lips moved from her mouth and he kissed and gently bit his way along her jaw to her neck, breathing her scent in and losing himself to her. He felt her hips writhe against him. Rillan's cock began to grow slick with Mira's pleasure as she squirmed beneath him. \n\nIf he hadn't been near giving her what she wanted he would have given in when Mira turned her head, her lips a breath from his ear, and whispered \"please.\"\n\nRillan pulled away from her again so that he could watch her face as he entered her. Her eyes glowed with intense passion. Her breathing was ragged. There was a sheen of sweat beginning to cover her skin. Rillan reached between them, took his cock in hand, and brought it to her entrance. He couldn't keep the soft smile from his lips as his angel looked down to watch him enter her. There was a strange innocent curiosity on her face. \n\nThe thought was matter-of-fact when it solidified in his mind. I'm in love. The smile slid from his lips at the realization. Slowly, watching her, Rillan began to push into her. After only a couple inches Mira let her head fall back, her eyes close, and her breath caught in her chest. Rillan couldn't of anything more beautiful in the whole of his life. \n\nMira moaned as the last of Rillan's cock was buried in her trembling body. When Rillan began to move against her with slow deliberate strokes, soft gasps and whimpers were forced from her lips. Rillan tried to memorize each sound, gauging what she liked best from the different noises that his thrusts rang from her body. She seemed lost to the passion and she was exquisite to see. Nothing else in the world existed beyond that bed. \n\nMira felt the heat and need growing in intensity as he thrust faster and harder into her. Her hands fisted in the sheets, her back arched and her body on fire, Mira felt the passion explode in her like nothing she had ever felt before.\n\nRillan could see how close she was. He fleetingly thought that it was watching her and not the act that was bringing him to the edge. When he felt her cunt tighten and begin to spasm around his cock he fell over the edge as well, releasing into her. \n\nRillan couldn't stop staring at Mira as she calmed from their passion. It was as if blinking was too much time lost. The small pleased, satisfied smile on her face. Her eyes looking back at him with a shy wonder. Her skin hot from exertion, covered in sweat, and blushing red under his gaze. She was perfect. But he couldn't help wonder how long this could possibly last."
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "blood"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-04"
}