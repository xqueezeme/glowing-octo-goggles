{
    "title": "Lost Colony Ch. 13",
    "pages": [
        "Author's note:\n\nThis is chapter thirteen of my series Lost Colony. Most readers should start with chapter one, but if you want to scroll down to the steamy parts, be my guest!\n\nThis is a work of (science) fiction. All characters are over age eighteen. Thanks for reading!\n\nThere are two more things you might want to know:\n\n<ol><li>I published a summary of the first eight chapters, so if you're just joining the story and want to catch up without reading those chapters, you can read the summary. Naturally, it's full of spoilers; as the author I'd rather you read the entire thing!</li><li>To those of you not in love with the flashbacks, there isn't one in this chapter!</li></ol>\n\n------------------------\n\nIt would have been beautiful if he wasn't a prisoner.\n\nThe slavers had dragged Sparr from the valley strapped to the litter, every rock sending a jolt of pain into his lacerated shoulder. The first hour was a grim trial. The second hour, as the men hauling him began to tire, felt an eternity. The little group transitioned from a relatively flat trail following the canyon to one which turned sharply uphill. His captors sweated and swore, dropping him more than once with excruciating results. The wagon, when at last they reached it, seemed like a haven, no matter the implication of the bars enclosing the back.\n\nThe rest of the day was hardly an improvement. Left with little to do but rock uncomfortably in the back of the wagon, Sparr's thoughts turned once again inward. His grief over the loss of Bogg came pouring back, a suffocating blanket of shame which he couldn't throw off. The feeling was more powerful even than the sting of his wounds. Those he might recover from, but he doubted he would ever forgive himself for flying Bogg to his death.\n\nThe scenery, when Sparr could focus on it, provided a distraction. The wagon was heading toward the mountains along a barren road whose serpentine route echoed an energetic stream. The water was milky with silt, a sure sign that its origin was glacial. The more Sparr thought about it, the more he realized how much of the planet showed signs of glacial activity. The parallel mountain ridges near where he had landed in the escape pod an eternity ago had obviously been carved by glaciers. The southern ice was heavily gouged by glaciers both active and dormant. And the mountains on the eastern continent of Yurr were scarred by millennia of ice. The planet's story was written in the advance and retreat of glaciers.\n\nAt day's end they made camp in a glen as seductive as a maiden's smile. Well above Neeva, with a view over the town and surrounding plain, the woodland scene called to mind an impressionist landscape. The same milky stream gurgled to one side, its banks overflowing with wildflowers in more hues than Sparr could name. A clearing of silky grasses and moss called out to cradle bare skin, while gently bowing trees offered protection from the wind. The western sky offered a luxurious sunset.\n\nThe routine his first full day as a captive, and those that followed, was the same. Sparr was allowed out of the wagon in the morning only to stretch his legs and relieve himself. The second day he asked to bathe in the stream.\n\n\"Wagon!\" his captor grunted, gesturing toward Sparr's mobile prison.\n\nSparr had his reply ready. \"If I die from these wounds, the demon machine will know who allowed it.\" Though the slavers knew the drone was controlled by Kevin, their fear of the machines was strong.\n\nFive minutes later Sparr plunged into the numbingly cold water. For as long as he could bear, then a touch longer, he washed away trail dust, sweat, and the worst of the caked blood. Sparr examined his wounds carefully. His shoulder and upper arm would bear a map of new scars, but the cuts didn't show signs of infection. He would heal. If he lived that long.\n\nExactly how long he had was a mystery Sparr wasn't eager to consider. He hadn't kept track of the days during the blur of his first weeks and months on Kaybe, and he had only known peace for short stretches since. Was it almost a year already? Tracee had guessed that she had been held by her own captors almost six months, and that was after having lived in the Odysseus camp for months prior. The timeline might add up. Or it might not matter. Once he was no longer more useful alive than dead, he would be killed.\n\nThe scheme, now that Sparr had time to consider it, was quite simple. Calista and Kevin had set off a false alarm, and in the confusion, had stuffed him into the escape pod bound for the surface. As soon as the pair had joined the Odysseus camp, they had set to work collecting as many DNA samples as they could. That would explain the sub that K2 Mineral had paid a fortune to lug to Kaybe. With it, they would have been able to move covertly, collect samples from seawater, and bring drones to distant shores for the same purpose. They must already have cataloged an enormous slice of the planet's species. As soon as one year had passed, they would be able to send the DNA sequences back for K2 Mineral to exploit. The payout, if they succeeded, would be enormous.\n\nLike the mornings, evenings at the camp were predictable in their routine. Sparr would be escorted from the wagon, given a simple meal, and allowed to stretch his legs. Shackled and under close guard, he was allowed a few limping circuits of the clearing before being prodded back into his cell. After, he would listen as the men drank and quarreled. Like him, the days of idleness pressed upon them, too many men with too little to do. Only the threat of the drone kept them in line. It floated through the camp one evening, a whining menace, clicking and turning. As the men crouched in fear, it circled Sparr's wagon, the camp perimeter, and the slavers themselves. Kevin didn't speak through it this time. He didn't need to. The threat was unmistakable.\n\nEvery day, escape seemed more like a fantasy. He was always shackled when out of the wagon, and followed by at least two of the men. The pins which secured the wagon door were simple, but out of his reach. Nor had attempting to befriend the men worked. They were a humorless bunch who met any greeting with derision. They didn't even seem to like each other, a situation which flared dangerously one evening.\n\n\"The round goes to me!\" cackled one of the younger slavers, an already balding man who went by Yomi. Sparr had watched as the men drank and played at gambling. Now, grinning a broken smile, the man swept a pile of tokens his way.\n\nThe other men only grumbled, but the leader, Denn, grew suspicious. \"Lots of rounds have gone to you.\"\n\nThe younger man wasn't easily cowed. He smiled at Denn, making a show of counting and pocketing the tokens. When the leader abruptly stood, Yomi stood with him, still smiling, hand at his blade. Sparr had seen similar confrontations half a dozen times. Violence was rarely distant on Kaybe, but neither was a desire for self preservation. Denn spat, but looked around for something more pressing. His eyes found Sparr.\n\n\"You!\" he shouted. The slaver strode toward him, chest swelling with confidence at facing an unarmed man. \"How's your luck?\"\n\nPeril hung thick in the air, but Sparr ignored it. \"Oh, it's great,\" he said, gesturing at the barred wagon which had been his home for a week. \"Two delicious meals a day, scintillating conversation, I get to take a shit wearing chains...\"\n\nIf his comment bothered Denn, it didn't show. The man leaned against the bars, his breath fetid with liquor. \"How about,\" he said, leering, \"we throw one round. You win, you go free. I win, I finally get to cut your fucking throat?\"\n\nSparr said nothing, but the men behind Denn shifted nervously. Surely to kill Sparr early would mean not getting paid, or worse. They tried to distract him.\n\n\"Hey,\" said Yomi. \"Isn't it about time to change the perimeter guard?\"\n\n\"Yeah,\" said another slaver, an awkward man almost as tall as Sparr. \"Where are those guys, anyway?\"\n\n\"Find them, then!\" Denn snapped before returning his eyes to Sparr. With exaggerated menace he dragged his blade across the bars, the rasp of metal on metal. \"What do you say, foreigner?\"\n\nWas he crazy, Sparr wondered, for considering it? In another week, perhaps two, he would be dragged to a secluded area and let go. A drone would dart in, photograph him, then transmit the images back to the Odysseus camp. Shortly after, the drone, or one of the slavers, would kill him. Why not take his chance now? The men would never let him go, but they might drop their guard long enough for him to sprint away. If he could reach the stream...\n\nBefore Sparr could respond, the commotion among the other men escalated. \"Yomi, what the fuck?\" The tall man was standing on his own now, staring into the shadows at camp's edge. \"Stop dickin' around!\"\n\n\"You feel like taking your chances, foreigner? You...\" Denn carried on, but he was becoming increasingly distracted. \"Goddammit!\" he bellowed, turning away from Sparr. He was poised to continue his tirade, when he abruptly stopped.\n\nYomi lurched into the clearing, his eyes wide. He looked toward his companions, then back behind him. The young man's arms were wrapped tightly around his midsection as if he was cold. He took another step, opening his mouth to speak, but no words came out. Instead, he took another halting step forward, then pulled his arms free. A gout of blood poured from his belly, soaking his arms, his shirt, and running in ghastly channels to his legs. He gave a final, pleading look, then collapsed.\n\n\"What the hell?\" Denn gasped. With a speed that belied his years, the slaver snatched the blade from his waist and stepped toward the commotion. Just as quickly he dropped to the ground, screaming.\n\nMute with incomprehension, Sparr could only watch as the clearing erupted in violence. Not a meter away, Denn dragged himself along the ground, his face tight with pain, trailing blood from a cut hamstring. A moment later a compact figure flung itself from under the wagon. Denn waved his blade frantically but the figure slashed each of the man's legs before rolling to safety.\n\nThe tall man looked about desperately, but before he could flee, another figure burst from the edge of the clearing, not far from where Yomi had fallen. As compact as Denn's attacker, the figure leapt forward, knife in hand. The man fell back, still in shock, but then rallied, using his reach to first defend himself, then press his attack. The smaller warrior gave ground, fine black hair tossing wildly in the light of the campfire. Before the slaver could press his advantage he stopped suddenly, dropping his blade. He let out a gurgled sound, spit blood, then sagged to his knees. A woman Sparr hadn't noticed earlier yanked her spear from the man's back.\n\nSeconds later another slaver, one of the men who had been on perimeter duty, raced into the clearing, blade in hand, and a wild look in his eyes. His expression grew wilder yet when he spotted the warriors. The man changed course, heading for the stream, but was too slow. One of the warriors caught him before he could escape, delivering a vicious wound to the man's side. He collapsed, adding to the dead and dying men already littering the clearing.\n\n\"You!\" the woman with the spear said, jabbing a finger toward Sparr. \"You're Alain.\" From her bearing, he took her to be the leader.\n\n\"Yes, yes! How did you-\"\n\n\"Come with us,\" she said, cutting him off. \"Quickly. One of them got away.\"\n\nWhile the woman busied herself with the wagon door, Sparr got a good look at her. Like the others in her party, she had black hair and Asian features. He lifted his gaze, taking in the rest of the party. All shared the same heritage.\n\n\"You're Klee,\" Sparr said, remembering the matriarchal hunters he had encountered on the southern tundra. His rescuers weren't from the same clan, but shared other similarities.\n\n\"Yes.\" The hunter freed the door. \"We need to go.\"\n\nIt dawned on Sparr that he was being rescued. \"Wait,\" he said, hopping from the wagon which had been his prison for almost a week. While the Klee pilfered the slavers' bodies for tokens, Sparr upended a supply chest for a warm shirt, pants that weren't shredded and bloody, and, most importantly, a pair of sandals. He changed in the middle of the clearing, uncaring of the stares he drew.\n\n\"I didn't catch your name,\" he said to the lead hunter as the group filed out of the clearing.\n\nShe gave him a cool look. Too late, Sparr remembered how dismissive the Klee could be to those without status. He considered falling back, perhaps taking up the rear as might be considered appropriate, but she surprised him. \"Waii,\" she answered. \"You will show my hunters respect for the chance they took in rescuing you.\"\n\n\"They fought well,\" Sparr said solemnly. The path they were following quickly narrowed, little more than a deer trail. He fell in behind Waii, struggling to keep up while ducking a hundred branches which to reached for him. The bright moon Feta offered their only light. \"Why did you rescue me? Tracee?\"\n\n\"Who?\" Waii didn't break stride, dodging snags and roots with an ease that defied Sparr.\n\n\"I thought maybe my friend Tracee sent you.\"\n\nShe shook her head. \"They sent us.\"\n\nSparr waited, but no clarification of who 'they' were was coming. It had to be the Precipice. Sparr had given Tracee a message to take to them if he hadn't returned. He had thought it a long shot, but a week might have been enough time to arrange a rescue. Plus, on the southern tundra at least, the Precipice had a relationship with the Klee. It would be natural to turn to the hunters for anything that might end in violence.\n\n\"You said one got away?\"\n\n\"Yes,\" Waii said, her face tight with concern, \"one of the slavers fled, the coward. He may bring others.\"\n\nThe band forged ahead, climbing along the stream-carved valley, sometimes next to the bank, sometimes veering away where the trail dodged loose soil or avoided an obstruction. Night was fully upon them now. Cool air slipped from higher slopes to gather and pool, forming unexpected, chilly pockets. Mist from the stream was colder yet, dampening Sparr's skin. An owl signaled its dissatisfaction with their presence.\n\n\"They were your people?\"\n\nIt took Sparr a moment to realize Waii was addressing him. \"The slavers? No, I-\"\n\n\"No, no,\" she said, cutting him off. \"The ones that sent them. You're from the same tribe?\"\n\nThe admission, he realized, was difficult, traced with shame. \"Yes,\" he said with a sigh, \"although I have been on my own for almost a year.\"\n\n\"If one of our tribe fails to obey the code she is exiled. She may not return.\"\n\n\"It's more like I was stranded,\" Sparr said, dodging a low-hanging vine. \"And those that stranded me want me to stay that way.\"\n\nWaii nodded. \"That is without honor.\"\n\n\"I kinda thought so.\" Sparr was beginning to tire. The week spent mostly stuffed into the wagon had left him stiff. \"Where are we going?\"\n\n\"You are aware the old machines are awakening?\" Waii jumped a small stream, its banks slick with moss.\n\nShe could be referring either to the mines or to the drones. \"I've seen them, yes,\" Sparr said, then added, \"and fought them.\"\n\n\"They follow your tribe.\"\n\nThe moment was fraught. \"As you said, not everyone in my tribe is honorable.\"\n\nWaii grunted, either in assent, or with the effort of the climb. She was about to speak again when one of the younger hunters scrambled to catch them.\n\n\"Three of them,\" she panted. \"Gaining on us.\"\n\nWaii cursed. \"Can you run?\" she asked, her eyes on Sparr.\n\n\"No.\" Sparr wasn't just stiff from his imprisonment. He had been fed poorly, and for a week, given little opportunity to keep limber. \"I can fight, though,\" Sparr said.\n\nBy now the rest of the band had caught up with them. Here the trail was hemmed in closely by unscalable rock on one side and the stream on the other. Even in the dim light it was a poor place to set an ambush. Waii considered the situation for a heartbeat, then whispered her instructions.\n\nThere were five of them in total. Two hunters went ahead until they were swallowed by the mist and dark. The swiftest of the party, a young woman named Sianna, doubled back toward their pursuers.\n\n\"Clothes off,\" Waii said, before beginning to tug off her own garments. \"Quickly!\"\n\nConfused, but sensing Waii's urgency, Sparr hastened to comply. He tugged off the shirt and ill-fitting trousers he had scavenged from the slaver camp, while stealing a glance at Waii's compact, but womanly form. Together, they tightly rolled and hid their clothes before crouching by the stream.\n\n\"I hope you're as strong as you look,\" Waii said, her eyes traveling over Sparr's scarred, muscular body. \"This will be a test.\"\n\nSparr would have felt more confident if he had his saber, but the slavers had stripped him of his weapons, his pack, and everything else he had been carrying. Instead, Waii had given him only a plain staff that the band had stripped from one of his captors. Perhaps it was for the best. With his right arm still recovering from the wounds he took during the crash, a two-handed weapon would be more reliable. \"You only have to keep them at a distance,\" Waii had assured him.\n\nThe two waited not half a meter from the tumbling, glacial stream. The winds weren't strong, but the frigid mist was already settling on his skin. Beside Sparr, Waii's skin was pale and inviting. Like the others, she was petite, but fit and toned. However, unlike the Klee Sparr had met on the tundra, Waii and her hunters weren't windburned. Their range must extend to more moderate climates.\n\n\"Remind me again why we need to be naked for this?\"\n\n\"If we live,\" she said, \"you'll be happy for warm clothes afterward.\"\n\n\"I'm already wishing for warm-\"\n\nWaii cut him short with a gesture. Sianna was running up the trail toward them. When the young hunter passed Sparr and Waii, she let out an exaggerated scream, but didn't break stride.\n\n\"Now,\" Waii hissed. Wincing at the cold, she slipped into the stream, surrendering her body to the icy water.\n\nSparr joined her, gasping at the shock as his legs pushed into the current, then almost crying out when his balls went under. The stream tore at him, turning his body half sideways. Like Waii, he clung to a rock, only his arms and head visible. The cold was unimaginable, a jolt which nearly stopped Sparr's breath, followed by a relentless void draining his strength. He wondered how long he could hold onto the rock before numb hands simply slipped free. For what surely less than two minutes, but felt like ten, he shivered in the merciless stream, mist spraying his eyes.\n\nFinally he heard footsteps. Mastering his discomfort, Sparr slid as far into the water as he could, twisting to keep his eyes and nose free. Three men approached, moving quickly while remaining watchful. The lead man peered intently ahead, while his companions swept their eyes to either side. They seemed more disciplined than Sparr's previous captors. One of them looked directly at Waii, but her concealment must have been sufficient. The men passed them by.\n\nShivering and numb, Sparr and Waii dragged themselves from the stream. After the icy dip they had taken, even the chill night air felt like a sauna. Both retrieved their weapons from where they had hidden them beside the stream, then took a moment to dress. The two went in the direction the other hunters, and their pursuers, had taken. Water dripped from their bodies to the leafy trail.\n\n\"Carefully,\" Waii cautioned, \"we don't want to catch them too soon.\" The plan, as she had hastily explained to the band, was for her and Sparr to attack from behind while the other hunters closed in from the front. The problem was that in their haste there had been no opportunity to plan exactly where they would converge. \"Run ahead and wait for us,\" was all Waii had time to say before the two groups had split.",
        "Now, advancing along the trail, they didn't know if the other hunters were fifty meters ahead, or five hundred. They could only jog forward, hoping to get the timing right.\n\nThey didn't. Just as he and Waii got the slavers in their sights, Sparr took an unlucky step, cracking a branch with his foot. The three men spun around and, after gawking for a heartbeat at the man and woman following them, rushed to attack.\n\nWaii strode forward to meet them, Sparr half a step behind. The brief jog had begun to restore a sense of warmth. The staff felt solid in his hands, dangerous. His gladiator training surged, eager to burst forth in violence. Cut and sore, shivering, and weakened by imprisonment, he would still put up a fight.\n\n\"Klee to battle!\" Waii sang out, twirling her spear as the groups crashed together. Two of the men closed on Sparr, thinking him the more dangerous. Swinging and blocking with the staff, Sparr held them off but couldn't press his attack. The staff was too slow to wield. By the time he blocked one man's attack, the other was already upon him.\n\nHer weapon a blur, Waii met her attacker. Like her, the man was a skilled fighter, and plenty fast. He was taller, but Waii's spear gave her an edge. She drove him back, feinting and sweeping the barbed weapon. The hunter slashed at the man's legs,forcing him to hop back. He stumbled free, but the respite gave her an opportunity. Waii flicked her spear, opening a cut in the leg of one of the men attacking Sparr.\n\nFor another few heartbeats the odds were evened. Sparr's attackers still pressed him, but with one already injured and cautious, he held his own. Fatigue crushed him, but the men pursuing them were also tired. It was late at night, the light poor, and the trail uneven. No one was at their best. As the skirmish slowed, Sparr swung the staff in an arc, crunching against the shoulder of the other attacker. The man hissed in pain and stumbled back. Both of his opponents were hurt, and Waii seemed to have the edge over her attacker, having once again driven him back.\n\nSuddenly, the man with the cut leg abandoned his friend to lunge at Waii. She raised her spear in time to block the blow, but his blade stuck in the shaft. Before Waii could free her weapon, the man's weight carried them both to the ground. Panicking, Sparr spun the staff again, this time cracking the knee of his remaining attacker. The man collapsed, writhing in pain.\n\nHe would be too late to help Waii. With one attacker laying on top of her, she was defenseless. Blade raised for the kill, the other attacker moved in.\n\n\"Klee to battle!\" Seemingly from nowhere, Sianna bore down upon the man with the blade. He hastily raised an arm, but the hunter found an opening, planting her knife between his ribs and knocking him from Waii. He staggered back, clutching futilely at the wound while his blood pumped out in a gruesome stream.\n\nThe man who had crashed into Waii rolled to the side, desperate to pull his knife free. His eyes were wild, feral, looking for an escape. There wasn't one. Before he could free his blade, Sparr's staff found his skull.\n\n***\n\nThe Klee camp was as different from the one Sparr had visited on the tundra as a spring day is from winter. A canopy of trees circled the clearing, giving protection both from the wind and sun. The tents were more permanent as well, with foundations dug into the earth and supported with roughly-hewn timbers. The cook circle was well established, with concentric rings which mirrored the tribe hierarchy. This was not the camp of nomads.\n\n\"Eyes down when they pass,\" Hew said. \"You are too bold.\"\n\nSparr had been placed into the young man's care shortly after Waii led them to the camp. Hew had brought him a change of plain but practical clothing, ensured that he was fed, and let him get some sleep during the day. The flight along the stream trail had taken most of the night. Now, as evening approached, the two helped prepare for dinner by fetching wood.\n\n\"You seem to eye them when you wish,\" Sparr replied. His companion had been referring to the tribe's alpha hunters.\n\n\"I am not a threat to them,\" the youth said urgently. \"They say you fought well. You are a foreigner, and a man.\"\n\nIt had been the same on the tundra. Fighting well and sharing his kill had earned Sparr fleeting respect, but hadn't changed his status. \"Will I have to fight again?\" He dropped an armful of firewood at the edge of the cook circle.\n\nHew looked at him quickly, dark eyes catching the firelight. \"I don't know. I thought you were to be turned over tomorrow, but there has been more talk than usual.\"\n\n\"Of course,\" Sparr muttered, more to himself than Hew. Nothing on Kaybe was ever easy, ever simple. He couldn't just be rescued, it had to be fucked-up in some way. He couldn't just fly into the Odysseus camp and land among friends. The way had to be littered with bodies.\n\n\"Those two in particular,\" Hew whispered. With the barest nod he indicated two hunters speaking outside an ornately decorated tent. \"Waii and Mille. One of them will lead when the Mother's time comes.\"\n\nThe two were of an age, no more than thirty. Both had straight, dark hair, but where Waii wore hers in a single braid, Mille's was unbound. And both were fit, but where Waii was compact and taut, Mille was a whisper taller, willowy and slim. Both carried themselves with unquestioned authority.\n\n\"The Mother?\"\n\n\"You will not see her,\" Hew said. \"The Mother is rarely outside lately. The whispers say she is not well.\"\n\nOther men stoked the fire, brought out freshly butchered venison, and began to cook. The meat had been rubbed with spices both familiar and foreign. The scent was exotic, but Sparr's hunger was all too common. He and Hew foraged for one more load of firewood, then, as evening overtook day, found their place at the circle. Woodsmoke swirled around them.\n\n\"Look,\" Hew said softly. \"It is Sianna's first time in the Womb.\" The young hunter who had rushed to the aid of Waii the previous night was stepping from the ornate tent, a shy smile on her face.\n\nIt took Sparr a heartbeat to realize that the Womb was the name given to the tent. He took a guess. \"It is a sacred place?\"\n\n\"Very,\" Hew said somberly. \"For her to be invited was an honor.\"\n\nEvening unfolded around them. Children shrieked and played, game roasted on spits, hunters cared for their weapons, and the stars revealed themselves alongside sparks dancing from the fire. Just as on the tundra, the hunters ate first, followed by the other women, then finally the men. Sparr hardly cared. When at last he tore into the dripping venison it tasted heavenly.\n\nLater, Hew left Sparr while he served an astringent spirit that the men distilled from aromatic roots. Sparr was allowed a small sip, which, as with other spirits he had encountered on Kaybe, proved to be both potent and complex. Bitter and spice notes lingered long after he had finished.\n\nSparr thought the evening might go as the one on the tundra had, with inebriation and boasting. Hew served another round of the spirit, and indeed several of the hunters had a wet gleam in their eyes, grinning with restless energy. But before a more boisterous atmosphere could spread, the crowd became distracted by a scene unfolding in front of the tent known as the Womb.\n\n\"You will,\" Waii was saying to Mille, \"and him, too.\" The two were confronting each other, standing inches apart.\n\n\"I don't need your help interpreting the Mother's words,\" Mille said. She stood just tall enough to look down on Waii.\n\n\"Then do you need help with your hearing? We have no more than fifteen minutes, and you're wasting them!\"\n\n\"Watch your words, sister!\" Mille's tone was sharp, but she shot a telltale glance toward the cook circle, toward Sparr. \"Fuck!\" she said, before storming off to the women's tent. A cluster of other hunters scrambled to follow.\n\nShaking her head with frustration, Waii approached. She drew Hew to the side, whispered in his ear, then herself strode toward the women's tent. \"Explain to him!\" she shouted over her shoulder.\n\nWhen the young man returned to Sparr's side, he looked pale. \"You must bathe,\" he said, \"quickly!\" He half led, half dragged Sparr away from the cook circle. At Hew's word, several other men jumped to follow.\n\n\"What the hell?\" Sparr was being taken beyond the edge of camp, toward the stream.\n\n\"You have to bathe,\" Hew repeated. \"They're taking you into the Womb.\"\n\n\"But I thought you said-\"\n\n\"I know,\" Hew interjected. \"Few men enter. I've never seen a stranger invited. But we mustn't question the Mother's will.\"\n\nFor the second time in less than a day, Sparr found himself stripping at the edge of the milky, glacial stream. The other men caught up, one of them carrying a jar of what looked like fine sand. He showed Sparr the trick of dipping himself into the water, then rubbing his wet skin with the sand. When rinsed away, the abrasive grains left behind smooth skin.\n\nWhile Sparr scrubbed himself, Hew offered a stream of instructions for his coming encounter. \"Say nothing!\" he insisted. \"Do not speak while in the Womb. If you are asked a question, speak as few words as possible in reply. Say nothing else, and never offer an opinion. You are nothing to them.\"\n\n\"I'll keep it zipped. Noted.\"\n\nHew gave Sparr a quizzical look at 'zipped', but pressed on. \"And do not raise your eyes unless asked. I cannot stress this enough, Alain. You aren't a prisoner, but as long as you are in the camp you are property.\"\n\nAs Sparr considered the rising peril of his situation, a third man hastily trimmed his hair and beard. It was nothing like the luxurious, erotically-charged baths he had taken at the temple of the Origin, but when the man finished, Sparr at least felt presentable. At last he rose, and was presented with a light wrap to fasten around his waist.\n\nWaii, along with several of her hunters, was already waiting outside the tent. She had changed into what appeared to be a ceremonial robe stitched from fine cloth and decorated with bits of smooth glass, shells, and metal. To Sparr she looked positively regal. Gathered farther back, the rest of the tribe's women had formed in a half circle, just as curious as Sparr. Hew and the other men slipped away.\n\nA ripple of whispers spread through the crowd. Mille was approaching, head held high. Like Waii, she had changed, but not into a robe. Instead, the slender hunter wore only a silky diamond-shaped top tied around her neck, and behind her back. The clingy fabric did little to conceal her body. Tied low on her hips, accentuating her flat belly, she wore a wrap similar to Sparr's, but cut high on one side. The hunter's skin shone in the torchlight, scrubbed fresh like Sparr's. Gleaming, jet hair spilled across her shoulders. The stern woman who had confronted Waii just fifteen minutes earlier had been replaced by a beguiling, feminine beauty.\n\nBut if Mille was pleased by her transformation, she didn't show it. She stood, brow furrowed, glaring at Waii. \"I assume this pleases you,\" she hissed.\n\n\"It is the Mother you must please, not me,\" Waii said flatly. \"I will say it suits you, though.\"\n\nMille's face reddened, but before she could speak the tent flap opened, pulled back by an unseen hand. Mille mastered herself, exhaled, and stepped within. Waii took a moment longer. She lingered behind Sparr, then unexpectedly lifted his wrap to slip her fingers around his balls. Sparr felt her rubbing on some sort of cream, cool against his skin.\n\n\"Make her work for it,\" she whispered, before following Mille into the tent. Sparr took a deep breath and entered.\n\nSparr remembered to lower his gaze, but not before he took a quick glance around the tent. Though dim, with only several oil lamps for illumination, he could tell it served both as a residence, and a ceremonial area. Tucked in back was a narrow bed, stool, chest, and weapon rack, each piece as utilitarian as the next. But if the Mother's furnishings were spartan, the rest was sumptuous. The walls were hung with tapestries, some portraying the hunt, some landscapes, and others abstract beyond comprehension. The floor of the tent wasn't covered by a single rug, but rather by a pile of them, laying at odd angles, overlapping, and folded against the sides so that it was impossible to say exactly where the floor ended and the walls began. The lamps gave off an exotic scent which called to mind sandalwood.\n\nIn addition to Waii and Mille, Sparr caught a quick glimpse of a greying woman seated toward the back. And it turned out to be Sianna who had pulled back the flap. With his eyes lowered, Sparr could see little more than feet and legs, but the young hunter seemed to be keeping herself pressed against the back wall.\n\n\"You brought him.\" The Mother's voice was thin and strained, weakened by age or illness.\n\n\"As you wished, Mother,\" Waii replied. There was a cautious, subdued note to her voice that Sparr hadn't heard before.\n\n\"Tell me,\" the Mother asked, \"how did he fight?\"\n\n\"Well for a man,\" Waii said, \"bravely.\"\n\n\"Mmm,\" the Mother said. She took in a raspy breath before continuing. \"You are shy with the details, child.\"\n\n\"We submerged ourselves in the stream as the men passed. The stranger made no sound, even when his man parts hit the water. We followed the men, then fought them. The stranger kept two occupied with his staff, while I-\"\n\n\"A staff?\" the Mother broke in. \"Why not a blade?\"\n\nWaii didn't hesitate. \"He is right-handed, but injured in that arm, and weakened from captivity. The staff gave him the best chance to fight without losing his grip.\"\n\n\"Yes,\" the feeble voice said, \"good. And Sianna fought well, too.\"\n\nSparr could picture Waii's proud smile. \"She leapt in without fear, Mother. Her first kill.\"\n\n\"Mmm,\" the Mother repeated. For a moment the tent was quiet, the only sounds were the matriarch's strained breathing and the brush of the evening breeze against the tent's sides. Sparr's thoughts wandered. Why am I here?\n\nHe didn't have to wait long to find out.\n\n\"Tell me, Mille,\" the Mother said, breaking the silence, \"what does he look like?\"\n\nIt seemed an odd question, given they were all in the room, but Sparr could feel Mille's eyes on him.\n\n\"He's tall,\" Mille began, \"almost too tall for the tent.\" She was speaking cautiously, deciding what she would describe, what she would omit. \"He is scarred from recent wounds, but recovering, able to fight.\"\n\nThe Mother made an impatient sound. \"Is he fat? Thin? Old?\"\n\n\"No longer young,\" Mille said, too hastily for Sparr. \"But no, not old. He still has his strength.\"\n\n\"And his looks?\"\n\n\"Dark hair and eyes. Another scar. A strong chin.\"\n\n\"Is he handsome?\"\n\nMille hesitated a second too long. \"Answer!\" the Mother snapped. \"And do not lie to me, child.\"\n\n\"Yes,\" Mille admitted. \"Not in the way our people are, but he is handsome.\" She meant that unlike them, Sparr didn't have Asian features.\n\n\"Raise your head, stranger.\"\n\nSo accustomed to being spoken of as if he wasn't even there, it took Sparr a heartbeat to realize that the Mother meant him. What he saw when he finally looked up almost tore a gasp from his throat. Sparr had expected an older woman, weakened by years, possibly ill with a malady common among the aged. Instead, he saw a woman of no more than middle years, but broken by disease. She sat upright, her bearing still that of a leader, but her flesh was retreating from an already diminutive frame. Where Waii and Mille were blessed with smooth, pale skin, the Mother's was blotched and sallow. Once black hair was heavily streaked with white.\n\nAnd she was blind. The stricken woman's eyes were milky, swollen nearly shut, and weeping. Her gaze, though steady, was unfocused. \"Am I what you expected?\" the Mother asked.\n\nA hundred responses popped into his head, but Sparr remembered Hew's exhortation to be as succinct as possible. \"No.\"\n\n\"So what do you see then?\"\n\n\"A woman whose years are being stolen by illness.\"\n\nThe Mother nodded, her head held at a slight angle. \"Stolen, yes.\" She drew in a labored breath. \"And do you know what the illness took first?\"\n\n\"Your sight?\"\n\n\"The hunt.\"\n\nSparr cringed inwardly. He knew little about the Klee, but enough to know the hunt occupied the center of their existence. \"Your people will carry on.\"\n\n\"We will,\" the Mother concurred, \"starting tonight.\" She turned in the direction of Mille. \"Are you ready?\"\n\nThe hunter shifted uncomfortably, shot a glance at Sparr then back toward the Mother. \"As you asked, Mother, but I have already claimed a man.\"\n\n\"I hear you've claimed two,\" the Mother said, smiling. \"You have an appetite.\"\n\n\"But he is not of our blood,\" Mille said, this time with more urgency.\n\n\"I have ears, child! I hear his foreigner tongue. He is brave and strong, you say. Do as I ask.\"\n\nMille drew in a deep breath, exhaled slowly, then repeated. \"As you command, Mother. I will take him to the-\"\n\n\"No,\" the Mother broke in. \"Here. I can no longer bear a man's touch, but I can still share in the moment. Claim him here.\"\n\nRealization shot through Sparr. He and Mille would fuck in the tent while the others watched or listened. He almost laughed. Only on Kaybe could casual sex be made to feel perilous.\n\n\"Sianna,\" the Mother said, \"have you touched a boy?\"\n\n\"No, Mother.\" The young woman's voice was soft, almost imperceptible.\n\n\"Come forward, child. Tell me what he's wearing.\"\n\n\"A wrap only,\" Sianna said, coming to stand just in front of Sparr.\n\n\"Remove it.\" Once again those in the room were talking about Sparr as if he wasn't there.\n\nSianna fumbled with the simple clasp, clearly nervous. When at last the garment slipped free she seemed reluctant even to look.\n\n\"Is he large? Small? Describe it.\"\n\n\"I don't know,\" the hunter began. \"Not small. Wrinkly. There are some veins.\"\n\n\"Mille,\" the Mother said in her thin voice, \"Sianna is inexperienced. Tell us, is he large?\"\n\n\"He is soft.\" Mille hesitated. \"Yes. When he is ready, yes, he will be bigger than most men.\"\n\n\"Mmm. Touch him, Sianna.\" The Mother leaned back, more of a bystander now than a leader.\n\nThe young woman did as she was told, tentatively slipping her fingers around the base of Sparr's organ. Sianna's skin was calloused from handling weapons, but her grip was delicate. \"It's heavier than I thought.\"\n\n\"Yes. Now, stroke him.\"\n\nSianna complied. Keeping a light grip she slid her fingers away from the base, lifting the soft shaft. When she repeated, Sparr felt a predictable spark of pleasure. By the fifth stroke he was beginning to swell in her hand.\n\n\"Don't spare the details,\" the Mother urged.\n\n\"It's getting fat,\" Sianna offered. \"Still soft but... oh. Yes, he's bigger.\"\n\nHe was getting hard, but more from the oddly erotic scene than Sianna's grip on his flesh, which felt subdued. It occurred to Sparr that the cream Waii had applied was dulling his sensation.\n\n\"Ancestors!\" Sianna was cradling Sparr's cock in her hand, no longer stroking it, but staring with an astounded expression. \"Does it even fit inside?\"\n\nThe Mother chuckled. \"Child, have you claimed a man yet?\"\n\nSianna was still gawking at Sparr's cock, but managed an answer. \"No, Mother.\"\n\n\"Go then,\" the matriarch said. \"Go find a boy you like. Go learn just how nicely it fits inside.\"\n\n\"Yes, Mother!\" Sianna took a final look at Sparr's cock before she left, pressing it down then watching how it bobbed back up, eager for her touch. With a smile, she slipped away into the night.\n\n\"You know she's going to think they're all that big,\" Waii said, a little smile finding its way into her expression.\n\n\"If he is like she described, it will be a relief to learn otherwise. Now,\" the Mother said, turning to Mille, \"you may take him however you like, but you will describe it to me. When you cannot, Waii will.\"\n\nFor a moment the surreal scene crawled almost to a halt. Smoke from the oil lamps still spun and curled into the air and tent walls rippled in the breeze, but no one moved. Sparr stood naked and hard, with Waii to his left and Mille to his right. The Mother reclined expectantly.",
        "At last Mille moved. From the dynamic in the room, including her skimpy attire, Sparr guessed that Mille had walked into the tent knowing what would be asked. Her token resistance had been for show. Now she reached back and unfastened the silky top.\n\n\"Do you like what you see, stranger?\" she asked as the garment slipped away.\n\n\"Yes,\" Sparr said unhesitatingly. Mille's willowy body would have looked beautiful in any light, but in the tent, with the warm glow of the lamps flickering over her pale skin, Sparr found her intoxicating.\n\n\"Mmm.\" Mille didn't sound convinced, but continued to undress. She kicked off the slippers she had worn into the tent, then unfastened her own wrap.\n\n\"Is he still hard?\"\n\n\"Yes, Mother. I believe he did like Sianna's hands on him, but he likes me, too.\"\n\n\"Is that true, stranger? What do you like about my hunter?\"\n\n\"Her body,\" Sparr said. \"Sleek and strong, like a gazelle. Swift.\"\n\nThe words pleased both Mille and the matriarch. \"How will you take him?\" asked the Mother.\n\n\"He will please me first.\" Mille settled herself on the rugs then lay back, spreading her legs. Sparr caught a wet glint of arousal.\n\nSparr should have taken offense at being directed and used. The Precipice surely had paid the Klee to rescue him. Now, before handing him over, he was obligated to pleasure and fuck Mille. But this was Kaybe. How many women had he fucked in the past year? His journey has been a tapestry of lust, exhibitionism, three-ways, role-playing, and tenderness. Another night of bliss would hardly move the needle.\n\nHe would tease her first. Sparr knelt, lifted Mille's leg, and kissed her ankle. When he met her eyes, there was little response, but as he kissed down her calf the hunter's eyes flickered briefly shut. He reached her knee, edging inside to tongue the soft inside at the back.\n\n\"He's kissing up my leg,\" Mille said, not forgetting the Mother's instruction. \"It's nice, but he needs to get to it.\"\n\nSparr pressed his tongue, hard and flat, against Mille's tender flesh. The slightest movement gave her away, a subtle spreading of her legs. He tongued, kissed, and licked, advancing slowly, ignoring Mille's gyrating hips. When he reached her slit, instead of tonguing her nub, he only let out a hot breath. He kissed her other thigh.\n\n\"Fuck!\" Mille panted. \"He's teasing me.\"\n\nThe Mother laughed, thin and reedy. \"He isn't one of our men to be ordered about.\"\n\nHe had named Mille a gazelle, and so she was. Graceful legs curled around his back while supple hips writhed against the rugs. Sparr kissed back toward her dampness, let another lungful of air spill across her, then offered his tongue.\n\n\"Yes.\"\n\nSparr circled her nub and gently sucked her clit. Like him, Mille must have scrubbed herself with the fine sand. Alongside her natural musk, Sparr inhaled hints of spice.\n\n\"Mmm.\" Mille's legs locked tighter around Sparr's back, encouraging him. \"Not teasing me any more,\" she groaned. \"Fuck.\"\n\n\"Is he skilled?\" The matriarch had her head cocked attentively, listening for any nuance.\n\nWhen Mille didn't reply, Waii stepped in. \"He must be, Mother. Her eyes are closed. She likes the foreigner's tongue.\"\n\n\"Yeah, oh,\" Mille groaned, then added, \"Oh, fuck!\" when Sparr carefully guided a digit into her slit. \"His thick finger.\"\n\nProbing and testing, Sparr explored what the hunter did and didn't respond to. Sucking her clit while pumping her with a finger drew an immediate response.\n\n\"Yeah, yeah,\" Mille gasped. \"Like that. Your finger. Your mouth.\" She curled her fingers into his hair. \"I'm holding him in place, Mother, making him pleasure me.\"\n\nHe was happy to oblige. Mille was deliciously responsive, grinding her hips and trembling as he pressed against her g-spot. Like the Mother, Sparr listened intently as Mille's breath quickened, as her thighs squirmed against the rug.\n\n\"What is the scene? Tell me, Waii.\"\n\nFrom somewhere behind him, Waii dutifully chronicled what she saw. \"Mille is lying back, propping her head against a rolled rug, the one I'm always afraid you'll trip over.\"\n\n\"I know the way around my own chambers, child.\"\n\n\"Yes, of course.\" Waii returned to her description. \"The stranger is between her legs. She has her fingers in his hair and her legs draped over his back, but she looks tiny next to him.\"\n\n\"Fuuuck!\" Mille moaned, as if she wanted to object, but was too taken by pleasure to articulate it.\n\n\"Will you take his tongue only, Mille? Is he too big?\" The mother was taunting her now.\n\nFor another moment Mille said nothing, only twisted before him. Sparr didn't know her body well yet, hadn't shared a bed often enough to learn her secret signs. But he knew when a woman was close. It might be fifteen seconds or it might be three minutes, but Mille was going to cum. Except the Mother's taunting caught up with her.\n\n\"No,\" Mille said, gasping. With little warning she pushed Sparr from her, and half raised herself into a seated position. \"No, I want it.\" She was still trembling, little tremors that rippled her belly and thighs.\n\nSparr's face was drenched with Mille's slickness and his own saliva. He wiped it away with the back of his hand, regarding her hungrily. A woman so responsive to oral would welcome him inside her with equal passion.\n\n\"On your back, stranger.\"\n\nIn another situation Sparr might have said Sure, you do the work, or Yeah, ride my cock. Instead, he simply flopped onto his back. There was no need for talk.\n\n\"Is he ready for you?\" The Mother wanted to know.\n\n\"Still hard,\" Mille said. She tossed her hair to one side and vaulted on top of him, every bit the hunter. \"I'm going to rub my pussy on him, get him wet like me.\"\n\nSparr watched as Mille did as she promised, easing her slit forward and backwards along his shaft. When she was ready, the lithe hunter slid to the tip and began to wriggle herself onto him, the first taste of bliss.\n\n\"The head is fat, but I can do it.\"\n\nCould she? Mille pushed herself onto him, brow furrowing in discomfort. Her second attempt drew much the same reaction, but after another five or six tries she was able to take him deeper. \"Fuck,\" she whispered, too soft for anyone but Sparr to hear.\n\n\"She can do it,\" Waii said. She had stepped to the side, giving herself a better view of the action. \"But she's feeling it.\"\n\n\"You want to try?\" Mille panted. \"He's as thick as my wrist.\"\n\n\"I wouldn't mind,\" Waii said. Her eyes swept over Sparr's body. \"I like 'em big.\"\n\nSparr turned to her. Waii was more compact, but just as athletic. It wasn't difficult to picture her in Mille's place, riding him selfishly, taking his cum only once she was sated.\n\n\"Fuuuck,\" Mille gasped, this time loud enough for all to hear. She leaned closer now, her unbound black hair spilling onto Sparr's chest. Her breath was ragged, hot against his skin. She had taken him.\n\nThe tent was quiet for a minute as Mille did little more than press against Sparr, growing accustomed to his manhood, but eventually the Mother grew impatient.\n\n\"How does it feel, child? Tell me!\"\n\n\"He's in me so deep, Mother.\" Mille's voice was a barely audible groan.\n\n\"Does it hurt?\"\n\n\"Yes.\"\n\n\"Does it feel good?\"\n\n\"Yesss,\" Mille moaned. \"It hurts. It feels good. Fuuuck!\"\n\n\"Mmm,\" the Mother said. \"Take what you want from him.\"\n\nMille wriggled on Sparr's rod. \"You're all wet from me now,\" she said, her breath still ragged. \"Means it will be easier.\" She was just above him, peering through the cloud of fine hair. \"I'll conquer you.\"\n\nAgain, Sparr noticed that whatever cream Waii had applied was dulling his sensations. \"The Mother says you have a strong appetite.\"\n\n\"I do,\" Mille said. Her grin was predatory. \"I have two men,\" she said, gauging Sparr's reaction. \"I make one wait while I empty the first.\" Slowly at first, with an occasional sign of discomfort, she slid down, up, then repeated. \"Then I fuck the second.\"\n\n\"You fuck them, not the other way around?\" Sparr rested his hand lightly on Mille's forearm, the merest suggestion of a grip.\n\n\"I know what I like, and I take it.\" She was starting to establish a rhythm.\n\n\"Lucky them.\"\n\n\"Lucky you.\" Mille's gaze was possessive, confident.\n\n\"I'm guessing they don't last long with you on top.\" The numbing cream helped, but the sensation was still sweet.\n\n\"Nnnnope. Enjoy the best minute of your life.\"\n\n\"I was hoping for another minute and a half, at least.\"\n\n\"What are you two whispering?\" The Mother asked. \"I can't hear you.\"\n\n\"I don't think he's been bedded by a Klee before, Mother. Doesn't know how quickly I'll empty him.\"\n\n\"Is it always a conquest, child, or do you also pursue pleasure?\"\n\n\"Both,\" Mille said languidly. She was speaking with the Mother, but her eyes were locked on Sparr. \"The moment I take a man's seed... there's nothing like it.\"\n\nFor a time the two exchanged no more words. Mille slid back and forth, now fully into her rhythm. Her slight body trembled, small breasts on a willowy frame. Her eyes slid shut as her jet hair tossed and swept around him, tickling Sparr's chest and face. Each stroke of her slit eroded his control. Each inch of his cock that Mille devoured dragged her closer to the edge.\n\n\"F-f-f-fuck,\" Mille groaned. Pleasure and fatigue conspired against her. The hunter was tiring, slumping forward in the process. Soon they were skin to skin, Sparr's senses on overload with her slickness on his cock, the spiced scent of her sleek body, and her lips inches from his ear. He raised a hand to rest it on her shoulder.\n\n\"I'm not sure she can finish him, Mother.\" Sparr could hear the hint of satisfaction in Waii's voice.\n\n\"I can,\" Mille insisted. She was still grinding slowly and sweetly against Sparr. \"It's just...\"\n\n\"Here,\" Sparr whispered in her ear. With his hands on her shoulder and upper arm he pushed Mille onto his cock. Once he eased his grip, she slid back up. He repeated the motion with a bit more force.\n\n\"Oh,\" Mille said.\n\n\"Yeah. Together, like this.\"\n\nWith Sparr pushing, and Mille pulling, the two quickly picked up speed. Bliss once again embraced him. Sparr tightened his grip, now undeniably in control. He eyed the Asian beauty, taking in her ecstatic features. Her eyes had slid shut, soft lips parted. Her hair haloed around them like a second tent.\n\nMille let out a long groan. \"Yesss.\"\n\n\"Who's fucking who?\" Sparr whispered.\n\n\"Mmmm.\" Mille was either lost in ecstasy or unwilling to answer.\n\n\"I said who's fucking who?\" he repeated. He slowed his pumping, teasing her.\n\n\"You,\" Mille moaned. \"You are, please.\"\n\n\"Yeah, fuck.\" Mille's confession was powerfully erotic to Sparr, a confirmation of their evolving dynamic. \"Your pussy is sweet.\"\n\n\"Yes,\" she said softly. \"You fill it so good.\"\n\n\"She likes the foreigner,\" Waii said.\n\n\"Is she conquering him?\" the matriarch wanted to know.\n\nWaii chuckled. \"I think they're conquering each other.\"\n\nNeither of them would last much longer. Sparr greedily drove Waii onto his cock ever faster, slapping their bodies together. The hunter panted and trembled, her breath as ragged as his. Their perspiration mingled.\n\n\"Fuuuck,\" Sparr groaned. He was drawing near the abyss. \"You want my seed?\"\n\n\"Yes, yes, fuck! Shoot it in me.\"\n\n\"Unnh,\" he gasped. \"Cum on it. Clench your pussy when I burst.\"\n\nSparr savored one last look at Mille. She was as close to the brink as he was, her body taut, breasts quivering, mouth open in ecstasy. She was like a puppet in his hands, letting him use her, but also drawing her pleasure from his flesh. Sparr tried to hold on, to stretch the moment out. For several delicious seconds he perched on the edge. At last, he tumbled.\n\n\"Nnnn, ahhh,\" Sparr gasped as raw pleasure flooded him. He dug his hands into Mille as his balls first tensed, then ejected a blast of cum into her depths. His entire body was rigid.\n\n\"Ooooh,\" Mille cried out. \"Oh, oh...\" Her pussy went tight, imprisoning his cock as the beauty shuddered and came.\n\nThe couple was bound by ecstasy. Sparr pulsed another thick dollop of cum into Mille as she twisted against him. He held her painfully tight as the hunter returned the favor, digging her fingers into his shoulder. Mille's orgasm was a near convulsion, all clenched pussy, squeezing thighs, and writhing torso.\n\n\"Fuuck!\" Sparr emptied the last of his cum into Mille's welcoming depths. Her slit was awash in an impossibly slick mix of cum and the juice of her arousal. Even Mille's pussy clamping down couldn't stop Sparr from pumping, drawing out every second of bliss. When at last Mille collapsed on him, spent, even Waii had nothing to say.\n\n***\n\n\"We're almost there.\"\n\nAs she had two days prior, Waii easily navigated the reed thin trail higher into the mountains, hopping gracefully over roots and rocks while Sparr did his best to keep up. The pair had started out at dawn after Sparr was given a more suitable set of clothing, boots, and a satchel with several day's worth of dried food. They climbed for an hour as the swiftly-moving moon Feta sank, and the planet's gentle star rose. Now the ground began to flatten, allowing Sparr to catch his breath.\n\n\"What was that all about in the tent last night?\" he asked.\n\n\"What do you think?\" she laughed. \"A little show for the Mother's entertainment.\"\n\nBut Sparr hadn't missed the dynamic in the tent. \"There was more to it than that.\"\n\nWaii ignored him for a moment, seemingly intent only on making progress along the trail. At last she shrugged. \"Mille won't chew the menstrual herb this week.\"\n\nHe had long suspected that women on Kaybe had some natural birth control, but the comment still got Sparr's attention. \"She wants to have my child?\"\n\n\"The Mother wants her to.\" Waii shot a glance over her shoulder, gauging Sparr's reaction. \"She believes it is time for new blood in our tribe.\"\n\n\"Did you ever think to ask me?\" Sparr was dumbfounded.\n\n\"You're a man,\" Waii said, airly. \"We don't ask.\"\n\nSparr shook his head, stunned at the casual way he had been used, but hardly surprised. \"Why not someone else, then? Why not you?\"\n\nAgain Waii favored him with a glance, this one tinged with a smile. \"Would you have liked that?\"\n\n\"Well, apparently my opinion doesn't count. I'm just curious why the Mother chose Mille, not you.\"\n\n\"Our paths, mine and Mille's, are diverging. I will lead the tribe when the Mother passes. Mille had wished for the honor, but her path is even more critical. She is taller and swifter. The child she will bear from your seed will grow the tribe. Others will follow, also from outsiders.\"\n\nSparr was about to inquire further, but finally Waii slowed. The two had reached a level area, an alpine meadow bursting with wildflowers. Here the stream ran slowly, a shadow of the icy torrent it was at lower elevations. When Sparr sought its origin his eyes spotted a cave at the far side of the clearing. As if reading his mind, Waii led him there.\n\n\"We have to get wet,\" Waii said. With no further explanation she waded ankle deep into the stream.\n\nSparr followed, the shock of the frigid water by now a daily occurrence. The pair splashed through the shallow water, the sound echoing off of the low ceiling and walls. The light dimmed before them, but not so much that Sparr couldn't make out a gravel bank with a lone occupant.\n\n\"Chael,\" Waii said, allowing herself a smile.\n\nThe man would on Earth have been called 'stubby'. He stood no more than five foot-six, but was broad shouldered and thick of arm. An imposing nose dominated otherwise plain features, topped with thick, curly hair and an unruly beard. His skin, even in the dim light of the cave, had a warm tone. And despite the chill, the man wore only a pair of short pants, tied at the knees.\n\n\"Waii,\" he said, warmly. \"Of course you're right on schedule.\" He looked at Sparr, his expression still amiable. \"You're Alain.\"\n\nSparr nodded, still unsure what was happening. He had expected to be handed over to the Precipice. Was the stranger just another guide along his path, or had he made a poor guess about who had paid for his rescue?\n\n\"As promised,\" Chael said. He handed Waii a bag clinking with tokens. The Precipice, or whomever, had paid dearly for his freedom.\n\nFor the first time, Sparr noticed a boat pulled up onto the shore. It most closely resembled a rowboat, with the oars set near the back, and a relatively long area up front. Unusual for a rowboat, it also featured a small tiller.\n\n\"Are we going boating?\"\n\n\"You are.\" After conferring briefly with Chael, the hunter turned back to Sparr. \"I have to go back to my people. In any event, it is forbidden for me to go further.\"\n\n\"Wait,\" Sparr said, trying to read both Waii and Chael. \"It's forbidden for you, but okay for me?\"\n\n\"Not exactly,\" Chael said. He was studying Sparr, enjoying the spacefarer's confusion. \"It's completely forbidden. But, sometimes we break the rules. Here, help me with this.\"\n\nSparr helped Chael drag the boat into the water. Behind them Waii turned to go, giving no sign of what they had shared. The hunter had risked her life to free him. They had immersed their naked bodies side by side in the numbing current, then crawled forth to once more do battle. Waii had watched as he and Mille had fucked, calling a play-by-play for the Mother. And all of this in less than forty-eight hours. To Sparr it remained extraordinary what a single day on Kaybe could hold. To Waii it must be mundane.\n\nSparr finished pushing the boat into the stream. When he turned back she was gone.\n\n***\n\n\"You'll get used to it.\"\n\nSparr had only seen glow worms on Earth once, a small colony of the magical creatures kept alive in a researcher's lab at Johns Hopkins. Now the animals, millions of them surely, spread above him in a single sweeping constellation. In the Stygian darkness of the cave they were the only light. Still, there was no horizon, no sense of depth or perspective. The boat might have been turned sideways, going forward, backward, or sinking. Whatever pattern Chael spotted in the tendrils above them was imperceptible to Sparr. Only his companion's unflinching optimism gave him confidence.\n\n\"I can't even tell if we're going in a straight line,\" Sparr admitted.\n\n\"Straight line?\" Chael laughed. \"There's no such thing here, but I can promise you we're on course.\" He seemed to row tirelessly.\n\n\"So how did you learn these waters?\"\n\nThe boat jerked suddenly, as Chael steered them around some unseen obstacle or stray current. \"I was born here,\" he explained. \"Spent more time on these subterranean rivers than those above ground.\"\n\n\"I caught a glimpse of your complexion. You don't look like someone who rarely sees the sun.\"\n\nAgain, Sparr was treated to Chael's easy laugh. \"My parents. I mean, I don't know this part for sure, but I'm told they were olive farmers. Or rather, my dad was. My mom was a Precipice priestess who, ah... converted him.\"\n\nParts began to fall into place. \"So you are with the Precipice?\"\n\n\"Well now, that's complicated. I was raised by the Precipice. I speak some of the language, know a few secrets, but their world is pretty narrow, you understand?\"\n\nSparr understood. The few priests he had met were kept busy with recording history and sharing the sect's austere philosophy. It was a wonder more of the youth didn't choose a different direction. \"So you work for them, but aren't necessarily a believer.\"\n\n\"Oh... oh, I believe. Don't disrupt the natural environment. Hard to argue with that.\" For a moment he was quiet, either lost in his thoughts or attending to navigation. \"Like I said, I wasn't ready to be a priest, dedicating my entire life to the Precipice, but I do like being on the water. It's peaceful.\"\n\nIt was certainly quiet. Their words echoed against the rock of the cave walls and water dripped from the oars, but there were no birds to call or sing, no wind whispering against tree branches. Sparr found it more eerie than peaceful. Nor could he judge the passing of time. Had they been traveling for one hour or half a day?",
        "\"You said it's forbidden for me to be here.\"\n\n\"Oh yeah,\" Chael snorted. \"The Precipice aren't supposed to take anyone else onto these waters, and certainly not to the place I'm taking you.\"\n\n\"And yet here you are, doing just that.\"\n\n\"I believe we've established that I'm not really Precipice.\"\n\nIt sounded like a weak explanation, a way of avoiding something that Chael wasn't allowed to share. Sparr was getting accustomed to the veil of secrecy that shielded whatever nugget of truth the Precipice guarded. They had funded his rescue for some reason. That was enough for now.\n\n\"So what can you tell me? Where are you taking me that's so special?\"\n\n\"Well, right now, I'm taking you through a vortex. Look.\"\n\nSparr heard it before he saw it, at first a faint susurration which grew more defined with the passing of every second. A wave slapped against the side of the boat.\n\n\"Hold on,\" Chael said, raising his voice to be heard. \"It gets bumpy.\"\n\nThe roof of the cave rose, or at least the sprinkling of glow worms did. For most of the journey they had been no more than three or four meters overhead. Now, as they approached the source of the noise, the tiny creatures rose to ten meters, then higher yet. The horizon expanded as well. If the glow worms had presented a constellation before, they now spread to form entire galaxies. The space they were entering must have been hundreds of meters across.\n\nThe sound of water filled the chamber, gurgling and surging, pushing at the boat. What had felt spookily serene just minutes before had turned violent.\n\n\"Hooooo!\" Chael cried out, howling with laughter. \"You wanna go northwest?\" he shouted. He increased the strength of his rowing.\n\n\"What?\" Sparr had no idea what the man meant. Spray began to soak the boat.\n\n\"No? Okay!\" The boat tossed and jerked in the current. Above, the glow worm galaxy spun crazily. \"How about north?\"\n\n\"Chael,\" Sparr shouted, struggling to be heard. \"I don't fucking-\"\n\n\"No? Fine, we won't go north!\" The source of the gurgling was somewhere to their right, some sort of rapids or whirlpool. There was just enough light to make out the glint of something surging and wet. \"How about east?\"\n\nThe man was having a laugh, Sparr realized, enjoying the opportunity to test his strength against the spinning current. Chael repeated the jest once more before finally steering the boat free. \"South it is, the most boring direction.\" He was still laughing, but as they left the roar of the vortex behind them Sparr could hear that Chael's breath had grown labored. The boat settled once again into milder current.\n\n\"The fuck?\" Sparr grumbled.\n\n\"There's a couple of spots like that,\" Chael said, still laughing and winded. \"You just gotta know the trick.\"\n\n\"And what trick is that?\" It was difficult to stay upset with the man.\n\n\"Know where you came in, and count the streams leading away from the center. It helps if you can spot a few landmarks on the ceiling.\"\n\nSparr had a thousand questions, but rapidly growing fatigue was pushing them aside. The last several days had been marked by flight, combat, sex, and trekking. He was once again flagging. With Chael ably steering them, Sparr pulled up a blanket, stretched out as comfortably as possible against the hull of the boat, and found sleep.\n\n***\n\nHe awoke to the crunch of stones. Sparr's first realization was that Chael was pulling the compact vessel ashore on a gravel and sand spit. His next realization was that it was light enough to see.\n\nThey were still underground. The ceiling of the cave soared above them at least thirty meters, an irregular surface of sharp stone broken by crevices. It was from these that the pale, blue light shone. Beyond the spit, the stream continued, plunging once again into darkness.\n\n\"This is kind of difficult with you still in the boat.\"\n\nGroggily, Sparr realized that Chael was addressing him. The compact boatman stood on shore, still shirtless, holding the bow line, and giving Sparr an exaggerated, impatient look. Though stiff and sore, Sparr roused himself and hopped out of the boat. Together, he and Chael dragged the vessel clear of the water.\n\n\"Soooo, we're here?\" Sparr asked. The cave didn't feel particularly welcoming. Lichen grew on a few of the larger boulders, but the spit itself was desolate, little more than a patch of gravel. Then he heard it, the same sibilant, hushed sound he had heard weeks ago while standing at the Portal, a sound like grass blowing in the wind, or mist dripping against shells.\n\n\"Almost,\" Chael said. He was searching Sparr's face for something. \"You hear it, don't you?\"\n\n\"Yes.\" The sound was so elusive that even Chael's few words chased it away. Only after the two stood in silence could Sparr pick it out once more. \"What is it?\"\n\n\"You'll see shortly. Oh, and fetch that, will you?\"\n\nSparr followed Chael's gaze to the back of the boat where a small bundle lay wrapped in cloth. He offered it to Chael.\n\n\"No,\" Chael said. \"It's for you. Open it.\"\n\nSparr unwrapped the cloth. Within, carefully padded, he found the portable DNA sequencer and a packet of collection strips.\n\n\"She thought you'd want it.\"\n\n\"Holy crap!\" Sparr turned the device over in his hands, powered it on and off, and checked for damage. It was still functional. \"She gave it to you? Tracee?\"\n\n\"Yes,\" Chael replied, smiling warmly at Sparr's reaction.\n\n\"Shit!\" He was ecstatic, stunned, and confused. \"Wait, Waii said the Klee weren't sent by Tracee. It sounded like they didn't even know who she was.\"\n\n\"They didn't. When Tracee contacted...,\" Chael said before trailing off. \"Hey, how about we talk as we walk?\"\n\nSparr stashed the sequencer, shouldered his satchel and followed Chael up the spit. It rose from the stream bed, and, at the far side of the cave, entered a much smaller rock and ice tunnel. The floor of the tunnel was rock ground nearly smooth, as was the left wall. The ceiling and the right wall were made up of deep blue, cracked ice. He realized that the ceiling of the outer chamber must be ice as well, close enough to the surface for daylight to push through. He was beneath a glacier.\n\n\"Tracee contacted the Precipice,\" Chael explained. The man was boundlessly energetic, forcing Sparr to scramble to keep up. \"She gave them the box and a drawing of some kind.\"\n\nBy box, Sparr understood Chael to mean the sequencer. The drawing must be the one that he had hastily prepared for Tracee to show to the Precipice. \"So the Precipice contracted with the Klee to rescue me?\"\n\n\"Well, no.\" Chael glanced quickly at Sparr before turning away. \"The Precipice at Neeva didn't do shit. No offense, but they had no idea who you or Tracee were. And I don't know what that drawing was, but they must not have found it terribly interesting.\"\n\nSparr sighed inwardly. He had thought the drawing was so clever. He was just about to ask his next question when the pair came upon an obstruction. Bulging from the ice in the right hand wall, an elongated boulder lay partially exposed, as if the advancing ice had been unable to grind it down. But what Sparr at first took for a smooth surface turned out to be finely textured. He stopped to examine it.\n\nSome kind of grey, feathery plant was growing across the entire surface of the boulder. Each frond was no longer than Sparr's index finger, and consisted of a central stalk hosting a hundred tiny, fine tendrils. Though unfamiliar, it reminded Sparr most of a feather star, an aquatic animal he had shown to Calista a lifetime ago. While Chael waited patiently, Sparr swabbed one of the fronds with a DNA collection strip and fed it into the sequencer.\n\nSequencing, the machine indicated, before seeming to come to a halt. Sparr stared at the screen, unsure what had gone wrong. The sequencer should have already decoded the plant's DNA and found the closest Earth match. Instead, the screen had gone blank except for a spinning icon which indicated that it was busy. He was about to try reading the strip again when finally the screen displayed a status.\n\n1 percent decoded.\n\nMuttering a curse, Sparr returned the sequencer to his satchel. It must be damaged, and he had no tools or diagnostic equipment. There was little to do except check later to see if it had finished the simple task.\n\n\"Ready?\" Chael asked. If he had any curiosity about the sequencer it didn't show. Once again the two resumed their walk.\n\nSparr needed something to take his mind off of the damaged device. \"You were saying the Precipice wasn't going to rescue me.\"\n\n\"The Precipice at Neeva weren't, no. I was sent from the Portal.\"\n\nIf Sparr had been confused before, he was now doubly so. \"Huh? Priests at the Portal sent you to rescue me? How did they-.\"\n\n\"Not exactly,\" Chael said, cutting him off. \"I was sent to fetch you. It wasn't until I got to Neeva that I learned you needed rescuing first.\"\n\nSparr's head swam, filled with competing questions. \"Why did the Portal priests send for me?\"\n\n\"Well, that I don't know. You'll have to ask them yourself.\"\n\n\"And how soon will we get there?\"\n\nChael laughed. \"We're already here.\"\n\nOn cue, the tunnel opened before them. Whereas the section they had just passed through had been at most three meters across, Sparr now found himself entering a chamber at least ten meters wide. Nor were they alone. Throughout the chamber at least ten or twelve Precipice Translators, children with shaved heads, were resting, drawing, or playing. The gentle susurration of the odd Precipice language must have been what Sparr heard earlier.\n\nChael waved over the priestess who seemed to be watching the children. She greeted Chael warmly, but her eyes were on Sparr.\n\n\"This is the one?\" she asked.\n\n\"Yep,\" Chael replied. \"Is Brielle ready?\"\n\nThe priestess regarded Sparr with what might have been mild disapproval. \"Yes,\" she admitted. \"Wait in the next hall,\" she said, before slipping away.\n\nAs Chael led him through the chamber, Sparr noticed several more of the elongated, plant-covered boulders. Each was partially embedded in the ice, and all were roughly the same size. They must, Sparr thought, be from some particularly dense native stone that even the merciless grinding of a glacier couldn't wear down.\n\nAt the end of the chamber they passed through a nook connecting to another chamber of similar size, as well as a ramp leading up. It was obvious that, although the tunnels were largely of natural origins, they had been carved, connected, and enlarged. Chael led him to the far chamber, where they waited for the priestess to return.\n\n\"I can tell you a little,\" Chael said, his eyes shifting nervously between Sparr and the chamber entrance. \"I was told to bring you to Brielle. She's one of the oldest Translators, and one of the best. She'll be a guide of sorts.\"\n\n\"You said you didn't know why the Precipice sent for me.\"\n\n\"They didn't tell me,\" Chael admitted, \"but the fact that they're letting you speak with Brielle says a lot. They'd only send her if it was important, and if whatever it is they want you to do requires the best Translator.\"\n\n\"I don't get it,\" Sparr said. \"I don't understand this language. You said you grew up here, right? Grew up in the Precipice?\"\n\n\"Yes.\"\n\n\"So you learned the language.\"\n\n\"Yes,\" Chael said, \"and now I've lost much of it.\"\n\n\"That's what I don't get. I studied French in high school. That was more than fifteen years ago and I can still parlez-vous a few words. Near as I can tell you've been around this scene your entire life and yet you can't speak the language?\"\n\nThe squat boatman stared at Sparr as if he had two heads. \"Of course not. I don't know what French is, but no one past the age of twenty can speak their language.\"\n\nSparr was about to push the point, but was interrupted. The priestess he had met earlier walked stiffly into the chamber, a young woman in tow. She glared at Chael. \"I hope you realize how precious she is.\"\n\nChael threw his hands up. \"I do as they ask, just like you.\" He sighed, then stood. \"C'mon, I'll buy you a drink.\"\n\nThe priestess delivered her own, heavy sigh, looking accusingly at Sparr. She hugged the young woman, whispered something into her ear, then left with Chael. The boatman grinned back at Sparr. \"I'll see you in a bit.\" The two were gone.\n\nSparr got his first look at Brielle. The young woman appeared to be around age fifteen, with shaved hair, soft features, and a generous body. She wasn't what Sparr considered especially pretty, but carried herself well, and had an open expression.\n\n\"Sooo, I don't know exactly why I'm here,\" Sparr began.\n\n\"I understand,\" she said. Brielle's voice had a high, singsong quality. \"Is there something in particular that you want to know?\"\n\nThere were a million such things. \"Why do only children speak the language of the Precipice?\"\n\nBrielle smiled, an achingly sincere expression of acceptance and understanding. \"Let me show you.\" She took Sparr to the center of the chamber, which, like the previous one, was strewn with several of the elongated boulders. \"Listen,\" she said.\n\nHe did. As Sparr had noticed earlier, the same sibilant sound reached him, coming from all directions. \"Okay...\"\n\n\"Alain,\" she said, smiling with infinite patience, \"what you're hearing isn't the language of the Precipice. It's their language.\"\n\n\"I don't understand.\"\n\n\"Here.\" Brielle led him to one of the boulders. She pressed his hand against the feather-like plant. \"Listen again.\"\n\nSparr's hand resonated, caressed by vibrations almost too swift and delicate to be perceptible. There were gaps, stretches where the feeling either disappeared or became too subtle for his senses, but they were balanced by sounds, by feelings, that he could detect. Awareness pressed in on him, crushing realizations long held at bay.\n\n\"Oh my god!\" Sparr yanked his hand away, staggering back. His world, everything he thought he knew about Kaybe, was collapsing around him. He scrambled for the gene sequencer, punching the display to check its status.\n\n100 percent decoded. Alien DNA sequenced. No Earth match.\n\n\"This is a native species,\" he gasped, gesturing at the plants.\n\n\"No,\" Brielle said softly, \"she is a native species. It's their language, Alain, not ours.\"\n\nToo much was happening too quickly. \"But I can barely hear it. How do you...\"\n\n\"She is one of them, Alain, an Original.\" Brielle's eyes were fixed on him, pale and imploring. \"Of us, only the very young can hear. Even I'm already beginning to lose my ability. In five years I'll be able to hear no more than Chael, no more than any adult.\"\n\nPieces of the puzzle were crashing into place. \"Of course,\" Sparr said. \"High-frequency hearing loss. It starts in your teens and continues through life.\" That was why the Precipice took in children. Without them they would have no way to communicate with... what? He remembered the dark shapes underground in the Precipice drawings. They had reminded him of seeds. \"That's not a rock.\"\n\n\"No,\" Brielle giggled. She brushed her hands over the fronds. They rose up to explore her, curling around Brielle's fingers and tickling her palm. \"She's an Original.\"\n\nIt was overwhelming. The colonists had made first contact with a sentient alien species four hundred years earlier and no one on Earth had a clue. He was bursting with questions but one rose, absurdly, to the top. \"What do they eat?\"\n\nBrielle giggled again. \"I can show you.\" She led him to the far end of the chamber, where the ice narrowed to two meters. \"This is one of their burrows. Do you see the dark streaks?\"\n\n\"Yes.\" The tube was veined with green and red lines, traces of something in the ice.\n\n\"They eat it with their fronds.\"\n\n\"They burrow through the ice?\"\n\n\"Very slowly, yes. Would you like to feed her?\"\n\n\"Yes,\" Sparr said eagerly. \"How?\"\n\nIn response, Brielle cut away a chunk of ice laced with red particles. She handed it to Sparr. \"Just hold it close to her.\"\n\nShaking his head in disbelief, Sparr walked back to the creature, the Original, and gently lowered the chunk of ice toward its fronds. As soon as he was close enough, the fronds rose, caressing the ice and Sparr's hand with equal interest. When he released the ice, the fronds quickly encircled it, rubbing away at the chunk. As water melted and dripped away, the fronds closed around the red particles, no doubt beginning to digest them.\n\nAn idea struck him. Sparr darted back to the burrow, and, using DNA collection strips, swabbed both the red and green particles. He fed one into the sequencer. As before, it took unusually long before the device showed a status.\n\n1 percent decoded.\n\nHe didn't need to wait for the sequencer to finish to know that he had found another alien species. The Originals fed much like feather stars did, collecting and digesting tiny plankton-like creatures. Except feather stars didn't have to burrow through ice for a meal.\n\nSparr sat, rubbing his eyes and trying to clear his head. The discovery explained the Precipice entirely. It was through contact with the Originals that they knew what life had been like on Kaybe before the colonists arrived. The aliens fed them the descriptions that went into the murals used to record and teach the planet's history. And it explained why the Portal, the Precipice's most important site, was located on the ice. The quasi-religion taught the truth, but had few followers.\n\nBut why was he here? If the Precipice only wished to free him, perhaps in thanks for shutting down the mining on Horn Island, they could simply have returned him to Neeva. He raised his head.\n\n\"You didn't bring me here to tell me Precipice secrets.\"\n\n\"No,\" Brielle admitted. The Translator pulled a rolled parchment from the fur she wore to guard against the chill. She spread it onto the floor of the chamber, revealing a scene that Sparr recognized at once.\n\n\"The Translators were drawing this scene when I was last here. The Originals described it to them, didn't they?\"\n\n\"Yes,\" Brielle agreed. The scene depicted a landscape much like the ones the Precipice used to record the early arrival of the colonists. A harsh, vertical line, which Sparr was sure represented mining activity, plunged deep underground. Above, the landscape was blighted and dark, with stunted trees and human figures fleeing while others lay prone, either dead or dying. The underground world wasn't faring any better. A dark blotch spread out from the site of the mine, turning the otherwise pastel scene a charcoal grey.\n\n\"It's like what happened four hundred years ago.\"\n\n\"It will happen again.\" Brielle's good humor had faded.\n\nThe realization settled in on him. \"You want my help stopping it.\"\n\nThe Translator nodded, her eyes assessing his reaction.\n\n\"What happened the first time? Did the Originals stop it somehow?\"\n\nBrielle sat, dropping easily to the floor. She was comfortable in the ice tunnels in a way that only someone who had spent their youth there could be. \"Of course you see how unlike us they are.\" She held up her hands.\n\nSparr got the idea. \"Sure. Not like they can race to the surface waving their arms and saying 'don't drill here!'.\"\n\n\"But they do have some technology.\"\n\nThe word 'technology' had an awkward place in the Kaybe common tongue. The word might as easily mean 'parts', or 'scrap'. With no technological development on the planet, the locals understood machines only as leftovers, or relics from myth.\n\n\"The Originals shut down the mining with their technology?\"\n\n\"They tried. We didn't listen.\"\n\nNot for the first time, it struck Sparr that the Precipice knew perfectly well when the colonists had first arrived on Kaybe, and the complicated legacy that had followed.\n\n\"What did they do? I mean, what did they try that we didn't heed?\"\n\n\"They could stop the old machines.\" Brielle's brow knitted in concentration. \"With a... wave?\" She put her hands together then dramatically swept them apart, fingers spread. \"Like a quickly blooming flower.\"",
        "\"A flower?\"\n\n\"I'm sorry,\" Brielle said. \"I don't know the word for it.\" She repeated the hand gesture. \"In a heartbeat.\"\n\nWhat foundation, Sparr wondered, did he possibly have for imagining what alien technology might look like or how it would behave? He was in a room with the Originals and still had no idea. There was no machinery within sight, no clue how they would even interact with it if there were. And yet something stuck in his brain, something long neglected in the frantic blur of survival that his time on Kaybe had become.\n\n\"EMP,\" Sparr muttered.\n\n\"I'm sorry... what?\"\n\n\"Fuck,\" Sparr said. \"Yes.\" He stood abruptly, charged with new energy. Another piece of the puzzle was falling into place. The colonists had at some point minted tokens, each a physical key for fabricating parts. He had long wondered why. A single memory cartridge could have held all of the part designs. Why bother producing cumbersome physical copies?\n\n\"You said we didn't heed their warning?\"\n\n\"Right,\" Brielle confirmed. \"Not for long.\"\n\nThe Originals had used something resembling an electromagnetic pulse, an EMP, to scramble the colonists' computers. Sparr tried to imagine the panic it must have caused in the colonists. They had no idea they were in the company of the original inhabitants of the planet, sentient beings trying to warn them off of a dangerous course. The colonists must have scrambled to produce tokens as a hedge against future attacks. The mining had continued.\n\n\"Okay,\" Sparr continued, afraid he already knew the answer, \"what happened next?\"\n\nBrielle kept her eyes locked on his, her expression dark with worry. \"Something worse,\" she said. \"Something much, much worse.\"\n\n---------------\n\nAuthor's closing note:\n\nWe're almost to the end. Chapter fourteen, unless it runs much longer than I plan and needs to be split in two, will be the final chapter."
    ],
    "authorname": "AllenWoody",
    "tags": [
        "sci-fi",
        "science fiction",
        "drama"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/lost-colony-ch-13"
}