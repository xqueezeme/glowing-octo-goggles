{
    "title": "Midsummer Weekend Pt. 04",
    "pages": [
        "Edited by Gustavca\n\n*****\n\nThe morning following of our not-quite orgy was pretty silent. Even the usual early risers lingered in bed for a long time. In the end, as usual, I found myself with Eleanor in the kitchen. Lincoln and Kate woke up early as well and shared a cup of coffee with us. Everybody was clothed normally despite everything that had happened. Soon Lincoln and Kate went out for a run. As they left, Eleanor and I shared a look. Kate was in good shape, but we hadn't even known she liked running. We laughed about it, then realized we ourselves had shared something special yesterday. Not only the very intimate moment before breakfast in the glorious morning light, not even the allowed peeping of her shower in the glorious light of dusk, and not even the quick caresses around the fire. \n\nWhile the memory of Eleanor's soft body was still imprinted on my hands, the memory of the long kiss we shared was still predominant in my mind this morning. As we settled alone on the couch, with cups of some herbal infusion nearby, the silence was hard to define. Until, simply, Eleanor placed her cup on the table, smiled at me and asked, \"Can I kiss you again?\" And so we did, sharing a second kiss, much longer than the first. It was completely silent in the lodge, the only sound was the leather of the sofa creaking beneath us. \n\nEleanor ended up leaning with her back against me, in my arms, as another silence was stretching. I was trying my best not to ask the question burning in my head, \"What do these soft, loving kisses mean?\" I was doing my best, knowing it would break the mood. I was wrong about that last part, as it turned out. \n\nEleanor, as if reading my mind, said, \"Oh, I don't know what it means, Will... Are love and sex the only choices we have? And while I certainly would enjoy having sex with you...\" Women have ways of saying the most amazing things in strange contexts. \"...what I really needed right now was these two kisses. And, actually, more than two.\"\n\nWith this she turned around in my arms and kissed me again. Longer. Wetter. By the time we stopped I was breathing hard, and my cock was just as hard. Eyes half-closed, Eleanor smiled at me, \"You really have an easy trigger on that thing!\" \n\nLaughing I replied, \"Well, that was a wonderful kiss.\" \n\nShe nodded, then nestled back in my arms. \"Just so you know, I'm as ready for sex as you are...\" Eleanor, still shy despite last night, \"...but I meant what I said earlier. I don't think... I hope we're not trapped between monogamous romantic love and simple sex.\" After a pause, she went on: \"I don't think either of us are in deep romantic love with each other, Will, and despite what our bodies might say, I know I'm not in your arms just to tease you or myself with a promise of wild passionate sex...\" A pause, a deep breath, and more questions I was also trying to answer. \"What's going to happen once we leave this Midsummer and go back to our usual lives? I have no idea. Will we dare, or even want to, kiss again the next time we see each other? I have no idea. What I know, without a doubt, is that I'm extraordinarily well, right here in your arms. Can we share this without asking what it means?\"\n\nWe sure could. This second, absolutely delicious morning with Eleanor was even more bright than yesterday's. We just found ourselves at the right time and place, in the right mood and needs. We were completely at ease. It turned out we were the only ones who felt so completely at ease with yesterday night's fire. As we heard noises upstairs, Eleanor and I disentangled and allowed ourselves one last kiss. \n\nLooking into her eyes, I whispered, \"I love you, Eleanor. I don't know what it means exactly, but I do.\"\n\nShe grinned, kissed me again and whispered, \"I love you too, Will... Don't you forget it, whatever happens when we leave this place and time.\"\n\nWhen the rest of the group came down, they were dressed just slightly more than yesterday morning. Unconsciously for most of them, the need for some measure of \"normalness\" was stronger this morning. We chatted happily, and even made some funny, although not overtly sexual, references to last night. But even though we were all looking at each other with new eyes, there was an undercurrent of tension. \n\nWe spent the morning and part of the afternoon lazily enjoying the lodge and lake. As a group, we clearly had no idea how to end this weekend. And it looked like the magic was gone. As if we had used it all up yesterday night. Even Hope was quiet this morning despite what she had told me. \n\nIn late afternoon, we somehow all gathered in the biggest jacuzzi. It was designed for eight people but we made do after some of us moved in and out, and switched places. At one point I noticed we were arranged rather peculiarly. Each of us had people of the opposite sex next to us. And nobody was sitting next to their respective lover. Lincoln and Kate were sitting next to each other and Eleanor and I shared a look when she noticed it as well. What had happened on that morning run, we were probably never going to know. \n\nThe late afternoon jacuzzi was pleasant enough but the tension was still there. At least, until Nella spoke from across the jacuzzi. \"So! When are we going to talk about last night?\" Dead silence. Nervous glances followed that question, then some smiles, then Connor and Rinette, at the same time, began laughing. Most of us joined in. But soon enough even those who were most uncomfortable relaxed. It was done anyway, and we had all had a lot of fun. All of us moved a bit, stretched out our legs, less afraid of touching the others. After a while, with shots of whisky finishing the job of making us all very relaxed, we began enjoying and, even starting to regret, that this weekend was nearly over. Oh, how wrong we were. \n\nAfter a while, and more shots, Rinette broke the silence and offered a new game, \"I had the classic game of truth or dare in mind, but after yesterday, I'm not sure we're quite ready to risk the dare side. So I have this in mind. While we did see a lot of things last night, we didn't really learn anything remarkably new. What do you think about this game...\" Rinette then explained her game, and everybody was eager to play. It was essentially, as Hope said when Rinette was done, a version of Truth or Dare without dares. \"Well yes, Hope! That was the point!\" Most of us laughed at her tone. \"But there will be no questions, just secrets voluntarily revealed. \n\nSince I happened to be sitting next to Hope on one side and Eleanor on the other, which had not happened by accident, I thought the game was going to be intense. In the end, strangely enough, I didn't even get to really play that game. The very first time Hope whispered in my ear, she made it very clear we were not going to be playing it. Instead she talked about my letter, not even bothering to explain how and why she had managed to identify me, nor why we were not going to play the game.\n\n\"Were you very serious when you wrote me the letter this year? Or just using hyperbolae to add to the effect?\"\n\n\"I was dead serious, Hope.\"\n\n\"So you believe in nymphs?\" she asked right back, a grin on her face. \n\n\"Ok ok... But I think you understand what I mean... And about that part, I was indeed dead serious. You're absolutely gorgeous.\"\n\n\"Well thank you, Will, my dear future lover...\"\n\nShe then left me there, stunned as I was by this reminder of last night's promise, and turned around to play with Marcus. As I turned around to Eleanor, she greeted me with a wonderful smile, and I leaned close to her and asked, \"I think don't I need to ask you about one of your little fetishes...\" \n\nEleanor reddened quite noticeably. Pale skin was unforgiving. Yet she didn't turn away, and her smile quickly turned into a grin. \"Like you don't have your own fetishes...,\" she replied. \"You want to play that game?\"\n\n\"With you? Not really. I think we went past the need for a game this morning.\"\n\n\"I agree. But let's make sure the others think we are...\"\n\nAs I turned back to Hope, she was still smiling, but her smile had taken on a clearly different aspect. Her whispered words, while some of the others around the jacuzzi were laughing at the answers, were just as direct, \"Do you know what a split crotch bikini is?\"\n\n\"Yep.\" \n\n\"Would you believe me if I told you I was wearing one right now?\"\n\nI pulled my head back to look at her, and while I was pretty sure she was telling the truth, I played along, \"Nah, you wouldn't dare, despite everything...\"\n\n\"Hmmm, in a few seconds I'm going to reach back to get that whisky. There are enough bubbles and, if you do it quickly enough, nobody will notice.\"\n\nAgain, no details or explanations were needed. When she did twist to reach the whisky glass, leaning in the other direction, I didn't stop to think and simply moved my hand downward under her buttock. When she sat back down, my fingers found themselves directly against her crotch. \n\n\"My, that was great timing, my dear Will... Now, wanna check?\"\n\nIt was remarkable enough that I had my hand directly on her ass, but once more my body moved before I could even start to consider the implications. Seeing her naked yesterday was one thing, but feeling my fingers finding the fold and slipping up into her pussy. That was something quite different. Hope was hot and fully lubricated already. Looking at me, she gave her most dazzling smile, then turned around to play her round with Marcus. \n\nWhen I found Eleanor's face waiting for me, even if I couldn't see any evidence she knew what was going on, I was a bit more stressed out. Yet although her question wasn't an easy one, it managed to quiet me down. \n\n\"So, Will, do you think we'll be able to bring something of our Midsummer with us back to the real world?\"\n\n\"I know what you mean by 'real world', Eleanor.\" I replied calmly, despite the fact I was fingering Hope's pussy. \"But this isn't a fantasy world or a dream. What we share since yesterday is as real as anything else.\"\n\n\"I know that! I sure hope I didn't dream this morning's kisses! But do you think we could do that again yet still be with our spouses? Is it even wrong to think about it?\"\n\n\"I don't think it's wrong to think about it, but I have no idea if it's possible to let this wonderful relationship, whatever we can call it, grow outside of this place... I really want to, but I don't know...\"\n\nIn a matter of two seconds my mind had to make the brutal transition between this tender intimacy with Eleanor and the raw sexuality with Hope again. I barely survived the jolt. Trying to slow her down, all the while I was still moving my fingers in and out of her pussy, I asked, \"Don't you think we're crossing a line here?\"\n\n\"Do you know that we're not the only ones crossing a line here, Will?\"\n\n\"What?\"\n\n\"Look at Lincoln and Kate. She's given him at least two kisses on the neck under the cover of whispering for this game. And now, my guess is that he's more than likely getting his cock massaged.\"\n\nAs I noticed that Lincoln's face was indeed revealing that something was going on underwater, Hope whispered, \"Would you like me to do the same?\"\n\n\"Hope, I whisper urgently into her ear, my wife is right there!\"\n\n\"Yes, and Lincoln's wife is right there, and Kate's boyfriend is right there and, most importantly, your fingers are right in my pussy, my future lover.\"\n\nBefore I could reply, Marcus was turning around to Hope, and Eleanor was waiting for me. Trying again to adjust again, I simply blurted out the thought that was screaming in my head, \"Eleanor, forget what I just told you. It's all I can do to refrain from leaning over and kissing you. In front of everybody.\"\n\nEleanor grinned at my comment, and gave me a quick kiss on the cheek, \"Thank you for this, Will. And please don't think I'm jealous, but I have to say that your mind is even quicker than I thought, to be able to do all of this at once...\"\n\n\"What?\"\n\n\"I know what you're doing with your other hand. Don't worry. It's not obvious. But I think everybody noticed how Hope jumped on you during the fire dance, and how you two were looking at each other all weekend long.\"\n\nI really didn't know how to reply. Eleanor leaned closer and added, \"Look... I'd really like to feel your fingers against my pussy too, Will. That was what I was imagining yesterday, in the shower when you saw me. But I think that if we go there, there will be no coming back. And I really want to come back from this weekend with something... I don't know how to name it either, but I don't want us to revert back to regular friends once this weekend is over.\" It really took all I had not to kiss her right there. \n\nLuckily, in a way, Hope chose that exact moment to move just enough so that her own hand had enough room to slip under my swimsuit, pull out my fully erect cock and begin massaging it. She then leaned close and asked, \"Did you imagine yourself under me, last night, when you saw me riding Connor?\"\n\nI hadn't, actually, but I was not about to let her know that. \"What do you think?\" I replied instead with a grin. \n\n\"Oh, you're not as pure and gentlemanly as you let us think...\"\n\n\"Ha! It depends on the subject!\" \n\nI was just about drowning in the sensations of her massage, when she said, \"Do you think anyone would notice if I sat on your lap and impaled myself on that lovely cock of yours?\"\n\n\"Yes! They would!\" \n\nShe laughed, then scared me with her next words, \"I'm going to make it so that nobody will...\" \n\nShe then she interrupted the game by asking everybody if we should put some sort of dare back into the game. By that time I think most of us were just as sexually excited as we were yesterday. This morning's tensions and remorse were gone replaced by a newly refilled charge of Midsummer magic. \n\nVery soon we reverted to a classic game of truth or dare, and we forgot about the secret thing. The questions were asked and answered out loud over the noisy spa. As the previous game had taken care of the easiest questions and, since everybody was clearly in a more sexual mood once again, the first question to come out of Marcus' mouth was clear and direct, \"Nella, truth or dare?\"\n\n\"Truth!\"\n\n\"What's the boldest thing you ever did, sexually?\"\n\n\"Wow! Talk about direct! Hmmm, let me see.\" Suddenly her eyes lit up and she looked at me before answering, \"Maybe it's not the absolute boldest, but I'm pretty sure you guys will like this... Remember Friday night, when we were all six in the other jacuzzi and Will and I went out for a bit? Well, we didn't go all that far. We turned around, sneaked silently into the forest just behind the jacuzzi and had sex right there. About twenty yards from you!\"\n\nEverybody laughed even those who had not been there. Nella, her turn to ask a question, looked around and settled on Rinette, \"Truth or dare?\"\n\n\"Truth!\" \n\n\"What's the one thing you've been afraid to ask of Lincoln in bed?\"\n\n\"Damn! Next time I'll take the dare! Gods... And I'm going to reveal this here, in front of all of you? Damn it, Nella, you probably even know what it is. I think I already told you!\"\n\n\"You did!\" Nella laughed. \n\n\"Ok, ok... Lincoln,\" she turned to her husband, \"I've never told you this but... Oh damn it's not easy! Especially here! Well, here goes... I've never dared to tell you that, one day, I'd like to have a threesome with another woman.\"\n\nWe all laughed at that admission, indeed, especially here. Lincoln, still looking dazed from Kate's massage, looked like a deer caught in headlights. His eyes got round and he couldn't really reply, \"Er... wow, er, well... I don't know...\"\n\n\"Just shut up then!\" Rinette said, laughing nervously. \"Damn you, Nella, for forcing me to say this!\"\n\nBut she was laughing with us even though her face was bright red. \"Now I can't ask a question to Nella, right? Damn you... Ok then, Eleanor. Truth or dare?\"\n\n\"Hmmm... Come to think of it, I also told you quite a few things, Rinette... I think I'm going to risk a dare.\"\n\n\"Really? Wow! I had a question ready for you... Well, what can I make you do.\" \n\nIn the end, Rinette simply asked Eleanor to stand up and take off her bikini top. Simple, yet significant. It was the first, at least the first obvious, move towards the strange place we had found yesterday night around the fire. Never before had we been nude during the previous Midsummers. \n\nAfter laughing at the comments linking Rinette's threesome request and this dare, Eleanor, unnaturally calm, stood up with a gentle smile and took her sweet time to remove her top. Not exactly a strip-tease but not so far from it either. Her wonderful white breasts were there for all to see, her pink nipples already erect and standing proud before nine pairs of eyes. When she sat down, as she was on a raised spot, the water didn't cover much of anything. It was both very strange and perfectly natural. \n\nLooking around as if nothing strange was going on, Eleanor chose Timothy, \"My dear husband...\" \n\nAnd was cut short by Hope, \"Nope! You can't choose your spouse in this game.\" \n\n\"Ok then... Hope, truth or dare?\"\n\n\"Dare!\"\n\n\"My, my, my... Don't we all have secrets to protect!\" After we stopped laughing, she looked at Hope and said, \"Ask Will to remove your own top...\"\n\nAs I quickly removed my hand from under her, Hope seized her chance, \"Here, Will, looks like you have a job to do.\" Quite unnecessarily, she got up and sat on my lap. As soon as she did she jumped up a little and said, \"Wo! What's that thing? Move it away and let me sit!\" Of course everybody exploded into laughter and I understood what her plan was. Reaching down to ostensibly move my hard cock away, I instead pulled it upwards. When Hope sat back down, making the best of the distraction she had created, she pushed open her bikini bottom and, a fraction of a second later, I felt her heat as she impaled herself on my cock. \n\nI did my best not to show anything but, in any case, any facial reaction I could have had would be pretty much normal considering she was sitting on my lap in a tiny bikini. I was in a complete and utter trance as I fumbled at the string of her bikini top. I was actually doing my best, but my mind was just about tearing itself apart, overwhelmed by the deep unreality of this moment. When I finally managed to get the knot untied, I expected Hope to move up and away. She didn't. Instead, \"Do the top part as well.\" As she said it, she rotated her hips and my cock went in deeper yet. It was completely insane. Eventually, taking much too long despite my best efforts, I managed to untie the second knot. \n\n\"So, what are you waiting for... remove it?\" \n\nShe was laughing with the others as they shouted encouragement. Closing my eyes, I reached under her arms, placed my hands above her breasts and whispered a quick \"Fuck it.\" Instead of pulling on the bikini, I slid my hands firmly on, against, around, over, on top, upon... her breasts. I felt her hard nipples against each of my fingers as my hands moved down. Shouts of laughter followed my move, but I could barely register what was going on around me. My hands on her breasts, my cock in her pussy with my wife and closest friends all around me, including Hope's own husband. \n\nApparently it was ok in this strange land of wonders we had all found this weekend. Hope even said, \"Can I stay here? It's quite comfortable!\" Nobody objected, so she stayed right there, impaled on my cock as she looked, innocently I guess, at the others. \"Nella! You dodged a dare earlier but will you attempt one of my questions?\"\n\n\"No way, my dear! Shoot me a dare.\"\n\n\"Come and kiss me. On the mouth.\"\n\nNella closed her eyes shaking her head as a smile gradually appeared on her face. \"Oh dear Gods...\" she said in a long sigh, \"we know way too much about each other!\" I couldn't see much from behind Hope and, in any case, my mind was overheating. My hands were on her hips and I was very slowly starting a rhythm, pushing her down and releasing her. Nevertheless, I bent sideways, towards Eleanor, to look at Nella. ",
        "When my head found hers, Eleanor whispered, \"You're completely crazy, Will!\" She knew. \n\nBefore I could react, Nella knelt down in front of Hope and leaned closer until they kissed. Suddenly, completely taken by surprised, I felt my wife's fingers between my legs, then on my cock, then moving upwards to touch Hope's pussy. I felt Hope freeze in place, but instantly relax as she saw Nella winking at me, then at Hope. \n\n\"Never been kissed like that, have you?\" The normally unflappable Hope had absolutely nothing to say. \"First time with a woman?\" \n\n\"Yes.\" A simple answer but right now as much as she was able to do. \n\n\"Well, not for me, my dear.\" General laughter again. \n\nThrough it, Nella asked Hope, \"Did you really believe that I hadn't noticed?\" I saw Hope's simple nod. Nella's last comment through a large grin surprised both Hope and me, \"Any time you want to do that, my dear. Any time.\"\n\nAs everybody else thought she was talking about the kiss. We knew she was not. While I was failing to regain any sort of composure, Nella looked around again, and settled on Lincoln, \"Truth or dare?\"\n\n\"Well, as scared as I was of the first questions, I don't think I'd be willing to kiss Timothy!\" After the laughter, he answered, \"Truth!\"\n\n\"Think of it as a follow-up question. Have you ever dreamed of a threesome, and if so, with whom?\"\n\nLincoln's blood drained completely from his face, \"Er, yes?\"\n\n\"Don't look so sure, Lin? What's wrong?\" \n\n\"Er, yes I'm sure... Like most guys I have...\"\n\n\"And with anyone we know?\" Nella asked, a naughty smile on her face.\n\n\"Well... what happens if I don't want to answer?\"\n\n\"Oooh!\" said Hope, recovering quickly from her earlier shock and despite the large cock moving slowly in and out of her pussy. \"It *is* one of us! Who? Tell us who, Lin?\"\n\nRinette looked at Lincoln and said, \"Don't worry, my love. I think it's pretty clear now that we've all somehow been drugged by the Midsummer moon... and I really want to know now!\"\n\n\"Well,\" he said, \"there are two, actually. Can I answer for a foursome?\"\n\n\"Of course!\" said Nella.\n\n\"Well, the first is Kate, and the second one is you, Nella.\" Lincoln's face looked like it was trying to figure out if it wanted to be white or red. \"Damn it!\" he continued, \"At the end of the day we're going to know way too much stuff on everybody here!\" \n\nHe was right, of course. When we got out of the jacuzzi later, we knew pretty much who had fantasized about whom, had taken a very well-lit look at everybody's naked body, had seen kisses that were not supposed to happen and, just exactly who, besides Eleanor and Timothy, enjoyed anal. Inside the lodge for dinner, some of us remained naked and everybody was at least topless. It was completely surreal. \n\nEven though the sun was still shining outside, it was now well past the time when we usually left the lodge to go back to our real lives. Nobody talked about it, but one after the other, we found our phones and made a few calls and arranged to be either absent or \"sick\" tomorrow. None of us wanted to leave. We knew something impossible was going to happen tonight, something that had been forbidden since our first Midsummer, even though we hadn't needed to say it. \n\nWe were going to have sex with other people tonight. \n\nIf the mood had been fey since we got here Friday, the atmosphere as we ate this Sunday night dinner was unbelievable. Even though she was right in front of me, my mind both enjoyed and rebelled at the sight of Hope's completely nude body as she went to the kitchen. That was not supposed to happen, my mind kept repeating. Indeed it was not. But as I looked at the thin strip of red hair above her pussy, I couldn't help but try and confront my mind. Shouldn't this be the norm instead of the usual prudish clothing? Shouldn't we always be naked? Some part of my mind knew my reasoning was flawed, but, looking at Rinette's just-as-amazing-as-I-thought ass, I couldn't care less about logic. \n\nI couldn't eat very much. For me, sexual energy and food didn't mix very well. Seeing Kate leaning towards Eleanor to lick a drop of sauce from her friend's breast didn't help at all. I was relieved when dinner was over even though I had to get up with a visible erection. Instead of the shock it would have created in any other circumstance, all I got were a few smiles. I had no idea what was going to happen next as we moved to the living room and its many large couches, but somehow we all ended up naked. \n\nI'll always suspect that the women somehow managed to talk amongst themselves at some point because things sorted themselves out very smoothly. I sat down on a couch with Nella, and a few moments later Hope came and sat on Nella's lap, stretching her legs across mine. When she placed her arm around my wife and started to kiss her, all the while caressing my chest with her free hand, the evening became clearer. \n\nOn the huge bearskin rug, Rinette, Lincoln, Kate and Marcus settled in comfortably in a very tight group. Eleanor, on another sofa, seemed to be glowing between Connor and her husband Timothy. How strange that this reserved, introverted woman had had anal sex in front of us last night, and now was clearly going to live another of her fantasies with two men. Connor had made, perhaps, the most surprising revelation in the jacuzzi, spurred by a question from his wife no less. He had revealed that he too would like to have a threesome but with a man as the third partner. Looks like everybody's going to see their wishes coming true. \n\nIn no time at all the caresses and kisses turned sexual, and while we were all very open-minded right now, some instinct pushed us to find more intimate rooms. We all left the bearskin foursome, a name that would stick for years afterwards, alone in the living room and went up to the bedrooms. \n\nWhen I closed the door behind me and saw Hope and my wife, completely naked, looking at each other across the bed, my heart missed a beat. As one, they turned to me and each extended a hand. My erection in front of me, I walked towards them and grabbed their hands. It was our first time, for all of us, doing a threesome. Kneeling on the bed, there was an awkward pause then shared laughter. We had no idea what we were going to do, yet knew perfectly what we wanted. \n\nSomehow in the back of my head, I expected that either Nella and I would break the ice, or both girls would. But Nella had other ideas. Still kneeling on the bed, she moved behind Hope and beckoned me with a finger. Hope was trapped between us and, as if floodgates had been opened, I felt her arms around me, her lips on mine, her hair on my shoulders, her breasts on my chest, my cock against her smooth belly and, soon, her hands all over my back and ass. Then two more hands appeared, moving all over Hope's and my bodies. I could feel Nella's hands joining Hope's on my back, ass and thighs, then they pulled back and enjoyed the redhead's body for a while, coming up to her breasts as I felt those two mounds coming alive against my chest. \n\nI hadn't kissed another women in years and this weekend I kissed Eleanor and the fiery redhead who had been on my mind for a long time. I felt a hand grabbing my cock and didn't even know whose it was. The thrill was astounding. Nella moved around and appeared right next to us to join in our kiss. A three-way kiss isn't as easy as a regular one, but the feeling of two tongues dancing against my own was delightful. We managed to find a rhythm that allowed us to come even closer together. \n\nIn the end, as nice as that kiss was, we all needed something deeper. Hope suddenly pushed herself back, grinned at us and said, \"I really need your husband's cock now, Nella!\" \n\nWe shivered and shared a breathless laughter as Nella and I watched the unreality of Hope turning around, going down on all four, opening herself to my cock. As I moved behind her, Nella took my cock and guided it right up to Hope's pussy. Somehow her hand amplified the already intense emotions threatening to overwhelm me. The strangest thing was that I had been, only a couple of hours ago, deep in that same pussy. But having my wife guiding me once more into its folds... \n\nI sheathed my cock as far as I could go. When I felt her nice round ass molding itself against my thighs, her insides stretched to their limit as I pushed deeply into her. I felt myself shaking. In a trance once more this weekend, I pulled back slowly before pushing back in. My mind barely able to realize that the ass below and around me wasn't the same it was used to. Torn between a deep desire to fuck Hope's brains out making her lose consciousness with too much pleasure and an equally deep desire to make sure this night never, ever ended, I tried to find a pace that would work. \n\nLooking up suddenly at a moan from Nella, I saw something I'd dreamed about but had only ever seen in porn movies. Nella was lying on her back, her legs wide open as Hope was starting to devour her pussy. I had to slow down, or cum in the next second. Looking at me above the incredibly sexy body of our friend, Nella silently mouthed the words, \"Do it, Will...\" That was, actually, way more than what I needed. Grabbing Hope's hips firmly, I began fucking her a lot harder, a lot faster. The sudden intensity made her stop what she was doing to Nella and turn to look at me. She was crying and moaning yet her eyes never left me. \n\nSeconds later I felt as if my entire body was imploding towards my cock and balls. I felt my cum being dredged up and pulled inexorably up my cock and into her. It was me who came close to losing consciousness as I exploded. As jet after jet of my sperm began overfilling the spasming pussy of a woman who was not my wife, some small part of my mind was screaming, \"This was not supposed to happen, even on a midsummer's night!!!\" Yet it had, yet it had... \n\nSome time later I found myself lying down on the bed, my soft cock being devoured by my wife. Half a blowjob, half a tit job. The night was, obviously, not even close to being finished. I was still relatively soft though having had a huge orgasm minutes before. When I also saw Hope kneeling down across from Nella, my mind began reeling even though I believed I had seen everything. Two mouths, four glorious breasts and lots of loving attention. That was more than enough to bring everything back to life. Reaching behind me to push a couple of pillows under my head, I then settled down to enjoy the barely believable show in front of me. \n\nVery soon my cock was hard once again, blissfully drowned in this mix of soft lips, wet tongues, slick breasts, deep mouths, massaging hands. Thick manes of hair, one brown and soft, the other red and curly, were draped over their backs and my belly as the two women seemed to be playing with me. They were smiling, laughing, sharing a few kisses over or around my cock, letting their free hands roam all over the other's body. I don't know how long we stayed this way, but so soon after a climax, I know I could have enjoyed this moment for a long, long while. \n\nThe words that put an end to my bliss, somehow, didn't sound all that bad. It was Hope saying, \"I want to feel him inside me again.\" \n\nAs Nella smiled and moved back, Hope straddled me, then guided my cock against her pussy and lowered herself all the way. Seeing this goddess upon my cock was wonderful. Then Nella moved up towards my head to straddle me as well offering me her pussy. I closed my eyes and did my best to bring her to orgasm. It didn't take long. My arms under her thighs, my hands on her hip, I guided her above me until I found the perfect angle. She was drowning wet, burning hot. As soon as my tongue touched her clit, which usually doesn't happen before a while, she placed her hand on my head, grabbing two fistfuls of hair, and pulled herself harder against my mouth. \n\nWhen I opened my eyes, looking up, I saw her face already contorted with pleasure. Her breasts were dancing gently up and down and side to side as she focused her entire being around her pussy and the impending climax. Below her, as fascinated as I was by the sight of her beauty above me, I couldn't help but also be conscious of the other woman on me. I couldn't see her at all but her weight, her thighs, her ass, her hands on my belly and, most importantly, her pussy all around my cock, were all distinctly clear in my head. \n\nAs soon as I saw Hope's head appearing from behind and closing upon Nella's breasts, my wife's eyes opened and her whole body began to shake. As if her hands on Nella's breasts reminded her of the crazy situation, Hope pushed Nella over the threshold. Not holding anything back, her moans turned into cries and screams as Nella let her orgasm loose. Everybody else must have heard but, then again, busy as they all were they probably didn't even notice. Nella's hands left my hair as she fell forward slightly, trying to maintain some control over her body. She was shaking, twitching, pulling her too sensitive clit away from my mouth, fighting the urge to leave it there longer. Eventually she moved off falling like a doll on the bed beside us. \n\nGrinning, Hope looked away from Nella and stared at me. Placing her hands on my chest she bent forward and really began to ride me. Once again she looked like a nymph from Celtic stories, or a fury ready to make deadly battle. Luckily for us all, the power burning inside her was only her own climax, and it looked ready to explode any moment now. With her normally pale skin was now red with the blood pulsing in her veins, her reddish nipples and fiery hair, she really looked like she was on fire above me. That sight alone would have been enough to mesmerize me completely, but the facts that another woman was fucking me, and that my wife was just next to me as transfixed by that redhead as I was, were simply too much. \n\nAs Hope started to climax, I began laughing, as much from sheer pleasure as from a sort of Midsummer madness. When she pulled back up, throwing her arms up above her head, Hope seemed to really turn into living fire, twisting and dancing, her hair and breasts like tongues of flame. Her climax was a thing of absolute beauty, transcending the natural world into something that was so much more. \n\nEventually she came back down, drained from that near-magical experience. She fell on my other side, and began crying. Smiling, knowing that Hope's sobs were not sadness, Nella crossed over and lay down behind Hope. We held her in our arms until her sobs turned into laughter. \n\n\"That was unbelievable!\" Hope's whispered words. \n\nAfter a pause, I said, \"You think it's over?\" \n\nBoth women laughed at my comment, until Nella saw I was still fully erect. \"What? You managed not to cum through this, this sexual fire? Wow! I came again, masturbating, just looking at her!\"\n\nAfter some more laughter, I turned and moved over Hope. Despite everything, I felt her arching her back, offering me her pussy again as I slipped over her. But I kept going until I reached Nella. Pushing her fully on her belly, I placed my cock between my wife's ass cheeks. \n\n\"What? You want my ass now?\" A reflex, pure instinct, made me twitch at her words. Surprised, laughing at the response, Nella turned around and looked at me: \"Really? You'd really want to do that?\" Hope, lying on her side right next to us, was watching us, a smile on her lips. \n\n\"Well,\" I said, unsure of what I should say, \"I was not going for it now, but...\" Nella and Hope laughed again. \n\n\"Put that cock into my pussy right now, and I promise you we're going to try it later...\"\n\nAs I pushed my cock into my wife's pussy, as I had done hundreds if not thousands of times before, I realized it was different nonetheless. Despite sharing a kiss with Hope as I was fucking Nella, my mind was still chasing down paths it had never really explored before. Sure I had seen a few anal porn clips, and sure I had enjoyed them. But to really do it? Now, completely overwhelmed by too many sensations, I was ready to try anything. \n\nWhen I felt Hope's hand on my ass pushing me harder against Nella, I grinned into her kiss, before breaking it to say, \"Kiss Nella, now!\" \n\nBoth women laughed, but didn't waste much time. Guiding my own hand to Hope's ass, I slipped it down until I reached her pussy. When she pushed her ass outward and spread her legs slightly, I pushed two of my fingers inside her. Short of having two cocks, I was just about fucking two women at the same time. Looking at them kissing, inches away, with Hope's hand on my ass, my second climax slowly but clearly grew until it bloomed into one of the best climaxes of my life. As I was cumming into my wife, I knew I could easily have switched to Hope's pussy. Without thought, I did, pulling out and moving above her to push my cock and sperm once more into her. Surprise, pleasure and laughter again, one last time before our bodies simply gave up. \n\nAfter a quick shower we came back to bed and dropped like stones. Our bodies twisted and intertwined in what must have been very uncomfortable positions, we fell asleep in one tangled mess. \n\nWhile the following morning should have been, at the very least, extraordinarily awkward, it wasn't. In fact, this strange and unexpected weekend deeply transformed our group of friends. Our Midsummer weekends became exclusive. No more outsiders. \n\nBut more than that, our entire lives were altered by that Celtic experience. While we remained independent couples, the ten of us became a lot closer, and the lines between couples were blurry enough to allow some extra freedom all year long. \n\nAs the first few weeks went by afterwards, I really thought that the Midsummer weekends would remain the only place where we truly let ourselves loose, even if the rest of the year would still be quite fun. That was a big mistake on my part. For instance, I never expected our following Midwinter weekend to be so... dramatic!"
    ],
    "authorname": "MrIllusion",
    "tags": [
        "nella",
        "hope",
        "eleanor",
        "rinette",
        "truth",
        "threesome",
        "ffm",
        "breasts",
        "revelations",
        "consumation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/midsummer-weekend-pt-04"
}