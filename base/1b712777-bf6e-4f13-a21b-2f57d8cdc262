{
    "title": "Play Testers Wanted Pt. 11",
    "pages": [
        "I am sorry this took longer to finish than expected. This began at forty pages and is now over eighty. A few specific passages didn't work for me and it took a while to break them down and rewrite them with more detail and I feel a better flow to them.\n\nJust a word with everything that is going on. Be safe, take care of yourselves, and I wish you health and happiness during these trying times. With that, feel free to vote, comment, or drop me a suggestion. Without further ado part 11.\n\n*****\n\nWhatever Happened to Bobby Drake:\n\nThere was a queue to log back into the game. However, rank has its privileges. I wasn't the first to enter the upgraded game, but I was damn close. I spent ten seconds in the white room ready and eager to see what they had done. The clock hit zero and I found myself on the roof of a skyscraper. The first thing I noticed is that I was naked. The second thing is that dawn was mere seconds away. The third and most alarming thing was that my HUD was screeching warning alarms like crazy. I pulled it down to see what the hell was going on. I found the flashing red indicator that simply read.\n\n'Warning: Dawn alert!! Seek shelter immediately!!'\n\nI yelped as the sun breached the horizon. I felt the burning sensation everywhere. I dove for cover bitching and screaming as I huddled in the shadows of an air conditioning tower. As the sun began to rise, I was losing protection. I dove back into my HUD and nothing was selected. I was a blank character. All my stuff was there just unchecked, points unspent. I desperately clicked into the search bar and sought my daywalker blessing. I found it and activated it. I looked down at my naked foot which was now bathed in sunlight and it wasn't ablaze.\n\n\"Fuck! That was close!\" I cursed loudly.\n\n\"Language!\" Gwen cried out above me. \"Why are you naked up here?\" She asked licking her lips. It was only then after my panic had died down that I noticed the new level of realism that had been introduced. The previous version looked and felt real but this one didn't seem to differentiate between the waking world. I suppose it was the difference between a 1K display and going to 4k or higher. The colors were crisper, the breeze cooler, and her scent more intoxicating. I spied a single rivulet of sweat running from Gwen's hairline down her cheek and between her cleavage. \"I've missed you, wanna bang the shit out of me?\" She asked her musk heavy in the air and driving me crazy.\n\n\"Language,\" I purred as I paused the game and activated skills and abilities, spent my points that I felt that truly fleshed out Ghost Fire. I chose but didn't activate my armor or weapons yet. \"Get over here.\" I said slipping back into the scene. I grabbed her by the hair, pulled her close, and kissed her hungrily. She slipped out of her costume as our tongues dueled. I felt her sweaty body press against mine. My free hand cupped one of her ass cheeks and she moaned in my mouth.\n\n\"Damn Ghost man, that was one hell of a kiss!\" She gasped. \"MMMMM Make me your little slut!\" Gwen begged so different from the shy little thing I had first met so long ago. My hunger had done this, and I'd have it no other way.\n\n\"As you wish,\" I growled. \"On your knees, yeah just like that, open wide and unnnnn yeah... suck it you filthy little... aw shit!\" I cursed. \"We have company.\"\n\n\"Are you kidding me?!\" Gwen snapped angrily. \"Oh... hi guys!\" She changed her tone instantly seeing Nightcrawler and Shadow Cat watching us. \"What's up?\"\n\n\"He is,\" Shadow Cat giggled. \"Man, is he up!\"\n\n\"Lose an eye if you aren't careful Gwen.\" Nightcrawler whimpered as she chewed her lower lip and fought the urge to touch herself. \"Jean and Professor X sent us to find him.\"\n\n\"I have to finish my patrol anyway.\" Gwen frowned. I grabbed her by the back of her head, kissed her, and then whispered in her ear. \"Really! Just me! Ha... in your faces!!\" She picked up her uniform and sniffed it. \"Could you... you know magic it clean?\"\n\nI took it from her and sniffed it. It smelled like a horny nineteen-year-old girl. I conjured up a small storm cloud just above her head and as it rained on her I rummaged through my memory. Oh yeah, I cast a simple cantrip that would launder her costume. As I cast the spell a mystic circle surrounded my wrist and a glow enveloped the uniform. I gave it a test sniff and it smelled minty fresh. I conjured a breeze to dry Gwen off and handed her the costume.\n\n\"Nice! Later guys!\" She cried out after she dressed and fired off a drag line.\n\nThwip!!\n\nShe was gone in seconds. I took my time summoning each piece of my armor as I took in the drastically different beauties waiting for me. Shadowcat, also known as Kitty Pryde, was average height with shoulder length brown hair, hazel eyes, and a slim muscular build. She had that Midwestern girl next door good looks. Nightcrawler on the other hand was taller, with a more filled out build, a great rack, an amazing ass, and a Wonderbra tail for the pulling. Her skin was a deep blue as was the light coat of fur she was sporting. It contrasted nicely with the mane of indigo hair she had in a dramatic undercut that reminded me of Sombra from Overwatch. Top the look off with eerie yellow eyes, noticeable fangs, and prominent pointed ears for an exotic fae look and if you liked your girls over the top, she was perfect.\n\nI finished activating my armor and declared myself ready to travel. I watched Nightcrawler and Shadow Cat interlink fingers and hold on tight. Maybe it was because I was a teleporter that I sensed something different about this mode of travel. When we arrived inside the mansion of Professor X the first few seconds, we were intangible. Somehow these two had learned how to link their abilities. It allowed Nightcrawler to teleport while out of phase making landings perfectly safe. Interesting. \n\n\"Cerebro is this way,\" Shadow Cat said walking in front of me. I stared at her ass the entire time. Nightcrawler hopped onto my shoulders and asked about Gwen and me. Her scent was strong but different from Gwen. Perhaps it was because she was a mutant or her diabolical nature.\n\n\"So, you and Gwen huh?\" Nightcrawler asked in a sexy whisper.\n\n\"Yep.\" I said trying to be a good boy even though her demonic pheromones were quite enticing. \"You smell nice.\"\n\n\"You hear that Kitty, I smell nice.\" She relayed to the other mutant.\n\n\"He means your pussy,\" Kitty Pryde fired back testily. \"Is he staring at my ass still?\"\n\n\"Sure, looks like it,\" Nightcrawler giggled. \"Jiggle... wiggle... aw shit!\" \n\nBAMF!! She vanished in a cloud of brimstone.\n\nI coughed as she teleported away my face and head shrouded in a dank sulfurous fog. The huge metallic door leading to Cerebro was already halfway open and sliding further open.\n\n\"We are here,\" Kitty said as she turned, and her eyes drifted straight down to my erection. \"Nice first impressions dude.\"\n\n\"I met all of you in Latveria,\" I said and did my best to imagine somebody's anybody's grandma naked.\n\n\"Let me,\" Storm said as she dropped the temperature to below freezing. Ororo Munroe was taller than either of her students at nearly six feet in height. She wore her silky white hair long where it nearly hit the middle of her back. Her dark skin contrasted her pale hair and her blue eyes were her most striking feature. They stood out especially when she used her powers like now. There was an unnatural glow to them as the air temperature plummeted. \n\n\"Thanks Storm.\" I said feeling deflated. \"So, what is going on?\" I asked seeing all the serious expressions around me. \n\n\"Bobby Drake is missing, and I can't find him with Cerebro,\" Professor X exclaimed apprehensively.\n\n\"Is he off world?\" I asked trying to eliminate the obvious.\n\n\"Not that we are aware of. He went to a party at a club. Rogue informed us that he met a girl. They were making out in a corner and then poof, he was gone.\" Storm explained.\n\n\"What did this girl look like,\" I asked, and Jean projected one of Rogue's memories into my head. \"Cute, exotic and cute.\" I commented. \"Bobby's power is cold and ice, right?\" I muttered and they nodded. \"Her hair is bone white, maybe she's another mutant or frost mage.\" I said.\n\n\"Not a mutant,\" Xavier declared. \"That is why we called you. Doctor Strange deferred to you.\"\n\n\"She... really?!\" I said surprised. \"Where is this club at? I might be able to scry there.\"\n\n\"I will take him,\" Storm said overruling both Nightcrawler and Shadow Cat. \"You two just want to lose your damn virginities to him.\"\n\n\"Sooooo!!\" Nightcrawler whined and Jean and Xavier laughed. \"I can teleport all of us, it isn't that far! Storm! Aw come on!\"\n\n\"I warned you,\" Kitty snapped at the blue skinned mutant. \"You horny little slut!!\"\n\nI put an arm around either of them. \"I'm sure that Storm would love to turn this into a training mission.\" I suggested and Storm looked over her shoulder at me with a withering gaze. As she watched I checked out her ass. 'Oh damn!' I mouthed. She smiled.\n\n\"I see why she likes you so much.\" Storm laughed. \"Princess Shuri speaks quite highly of you.\"\n\n\"Who speaks about me?\" Shuri's voice whispered in my comm link. \"Is that you sexy Ghost man?\" She purred in that Wakandan accent.\n\n\"Storm says her ass is finer than yours,\" I said, and Storm's eyes narrowed.\n\n\"Blasphemy!\" Shuri roared. \"No ass is as fine as this Wakandan ass! I am sorry my sister!\"\n\n\"No, you aren't,\" Storm fired back. \"I won't argue with you, my sister. My breasts are far nicer than yours.\"\n\n\"I... I'll give you that. I have seen those divine titties of yours. Have you tasted them Ghost man?\" Shuri teased.\n\n\"Not yet,\" I replied, and I saw Storm's cheeks flush with color. \n\n\"TWO!!\" Storm suddenly shouted.\n\n\"They are speaking on a private channel,\" Kitty explained. \"What do you think that means?\"\n\n\"I have an idea,\" I laughed. \"Is that the Blackbird?\" I asked as we entered the flight deck.\n\nStorm and Shuri were going back and forth about something and I reached out to touch the underside of one of the wings. A blast of thunder filled the area and Storm was waggling her finger at me. Storm opened the plane and prepped it for flight. Nightcrawler played copilot while Kittie helped me into my flight harness. \n\n\"Am I a slut?\" Kitty asked as she whispered in my ear.\n\n\"I don't know, yet.\" I whispered back.\n\n\"Oh good,\" she laughed as she buckled up.\n\n'Ghost Fire... this is Director Grey,' Jean's mind touched mine. 'Try not to corrupt and defile Xavier's students.\"\n\n'I... you are joking right?' I sent back. Her malicious laughter her only reply. 'I thought so.'\n\n\"I am going to wreck all three of you.\" I whispered.\n\n\"I heard that.\" Storm shouted over the roar of the engines.\n\n\"Good.\"\n\nThe roof split open and the vertical takeoff engines lifted the Black Bird straight up and once we were at the right altitude Storm transitioned to the standard jets and we were on our way. I closed my eyes and held onto the image of the girl kissing Bobby. Thin build, long white hair, nice butt and a perky pair under her blouse. A lot of detail lost from the bar crowd moving between Rogue and Bobby. It was a short flight and soon the blackbird was descending. You got to love when you land a multimillion-dollar aircraft in a bar's parking lot. We stepped out to a small group staring at us.\n\n\"Hey Storm!\" Fans called out. \"Looking good!\" She waved as a small group of locals formed on the parking lot.\n\n\"Nightcrawler... Shadow Cat...\" A male fan whistled at them.\n\n\"Who the fuck are you?\" Someone hollered at me and I laughed. \"Are you new to the X-Men?\"\n\n\"No.\" I said as I teleported behind the guy. \"I'm the hired help.\" I joined the group as the guy eyeballed me and I watched the tracker I had placed on him. \"Where are you going bud?\" I whispered as he left the area before we were even inside.\n\nThe owner opened the bar for us and handed over the video surveillance. Storm looked over the footage while I went to the corner where Bobby and the mystery girl had been sitting. The psychic signature was a mess but that wasn't a big surprise for a bar. Suddenly I felt Jean's presence in my thoughts.\n\n'Knock-knock,' she sent with a giggle.\n\n'Director?' I replied and she made a rude mental noise. 'Lover?'\n\n'Better!' She sent with a rush of emotion with a heavy dose of lust in it. 'Let me in deeper.'\n\n'I trust you Jean,' I told her as I lowered my defenses. A flash of imagery slipped from me and the image of the Phoenix Force blazed as she slid deep into my consciousness. A pulse of raw power flowed from her to me. It lit me up inside and out. \n\n'Reach out Ghost,' she directed, and our minds worked together like linking two computers to combine their computing power to make the task easier. 'Good, I see what you mean what a mess. Your mind is excellent. Now let's take a hold of just one spot firmly, like so.' She sent I felt her power flow through me again, just a trickle this time. 'See... the table... we are going to focus on the now. Let's peel away the layers a slice at a time. One hour and then another until... there they are. You have excellent control. She is exotic. She looks Norwegian or perhaps Swiss.' Bobby and the unknown girl were holding hands and a small layer of frost formed on the top of the table. We watched as she pulled him close and kissed him. I could feel Bobby's excitement. They left the table and Jean growled.\n\n'Hold on, I've got this.' I said as I drew on my ability to fold time. I pulled back and the ghostly image snapped into full color and in focus. I watched them get up and head out the back door, I followed. They were making out in the alley. I had just reached them when it happened. The girl latched onto Bobby and kissed him so deeply he collapsed. Her blue eyes blazed with power, Bobby's power. She must have stolen it somehow. Maybe she was like Rogue. The girl paused, looked directly at me, and spoke in ancient Norse.\n\n\"I feel your presence Dark One. We are not enemies. Do not stand against me, you will fall. You have been warned.\" She said and my stamina meter zeroed out. I collapsed just as Bobby had done. I felt Jean's distress. I woke with her holding me in her arms.\n\n\"I got you!\" Jean said cupping the side of my face with her hand. \"You pushed yourself too hard, again.\" She said her concern intense as she realized what had happened to her one-time student. \"That is why we can't find Bobby. He is no longer a mutant. She took his gift from him completely. I think I can find him though. Are you going to be okay?\"\n\nI looked up and saw Storm and the others nearby. Jean laughed and told me to be gentle. She helped me to my feet and then teleported away with a flash of red-gold light. \n\n\"I need a drink.\" I said.\n\n\"We don't open until three.\" The owner hollered.\n\n\"I know just the place but uh... you need to be on your best behavior. The food there is pretty good too.\" I said and the trio agreed to follow my lead. \"I am driving this time.\" I said as we linked hands and I used far sight to peer inside the Bar with No Name. I teleported us there and to everyone's surprise our arrival was preceded with a flash of red-gold flame.\n\n\"Ghost?\" One of the patrons asked. \"Oh shit, it is Storm... oh just visiting. Cool... cool.\"\n\n\"I teleported so they don't know where we are.\" I said to sooth any tension the patrons and staff might have about three of the X Men arriving suddenly. \"Right guys, no peeking outside.\" I stated and they agreed. \"Good. Are you serving lunch? I need a few and some food.\" I rambled a bit.\n\n\"Sure Ghost, here's a menu. Do you need a room?\" He asked smiling.\n\n\"I uh...\" I began.\n\n\"He sure as hell does,\" Storm purred. \"A big bed preferably.\"\n\n\"Room one for you guys,\" the man said. \"Sit. Eat. I'll put on the TV. Not much going on though.\"\n\nWe ate and I had a few beers to help settle my nerves. The sexual tension though was tangible. Storm finished her salad and began telling Kitty and Nightcrawler how this was going to go. All her talk about oral sex, kissing, and other things ratcheted up things. I made the mistake of looking at the main bar. Storm's gaze followed mine and she saw the list.\n\n\"What do we have here?\" She said as she got to her feet. I cursed softly. She walked over and read the odds of the women on the black star list. \"Twenty to one against... thirty to one against... wow Kitty you are fifty to one against... all three in one day... Hey! Barkeep! What were his odds of all three of us in one day?\" Storm asked as I pondered teleporting to a distant dimension. \"Three thousand to one against. Damn, I wish I knew about this place before today. Hey... Ghost man... catch!\" She tossed the room key at me. I caught it out of the air. \"Let's get this party started.\"\n\n\"This one is on the house,\" the bartender said.\n\n\"Wakandan Champagne! They do like you Ghost man!\" Storm laughed. \"Let go ladies. It is time to wreck the friendly neighborhood ghost.\"\n\n\"About damn time,\" Nightcrawler growled.\n\nI opened the door to our room and the room was decorated with black and white candles. Anackire! Thank you, goddess! I thought as I let them step in first. I dedicate all the pleasure and climaxes to her and her coven.\n\n'Go get 'em Tiger!' Anackire purred in my thoughts.\n\nPop! Storm poured the champagne and we toasted to the calm before the Storm. We each had two glasses before the bottle was drained.\n\n\"Speaking of draining a bottle. It is time to show you a new lesson. Strip him while I get naked.\" Storm ordered. I moved my armor piece by piece to my inventory as they removed the item. I watched Storm slip out of her uniform. I wasn't surprised to find her naked under the jump suit. She was in her prime and damn she had a smoking body. I loved her pale nipples on her dark breasts. \"Shuri said you had... that's the ticket!\" She gasped as I summoned the double dragon technique. \"I'll work the lower erection, you two can share the top one. Do as I do.\"\n\nI laid on the bed and surrendered to their lust. Kitty wrapped her hand around the base of my cock like someone used to it. Someone has some hidden cock sucking skills. It was both! Nightcrawler stuck out her long blue tongue and it slithered around the shaft like a constrictor snake. Meanwhile Storm was cupping my balls and tracing the underside of that erection eagerly.\n\n\"Flip for who swallows?\" Kitty asked. \n\n\"Nah, it is your turn,\" Nightcrawler moaned. \"He tastes amazing! His precum is delicious.\"\n\n\"Good. I was getting tired of sucking off Logan.\" Kitty declared.\n\n\"I know right,\" Nightcrawler replied as Storm knelt there stunned. \"Six months, before you ask. No more than hand jobs and oral. We were saving ourselves for Ghost.\"\n\n\"I'm glad we did. It was just a rumor but now we know for sure.\" Kitty moaned. \"Two, I can't wait to feel him inside me... all of me.\"\n\n\"He's getting harder,\" Storm mused before opening her mouth and taking most of my cock in one go.\n\nThe talk ended as the three of them worked me to the edge. I was panting and gritting my teeth as I fought the urge to climax. I warned them and both Storm and Kitty clamped their mouths over the tips. I howled as I came and they both swallowed hard. Kitty pulled Nightcrawler into a dick hardening kiss and passed some of my load to her. It didn't take long for my stamina to recharge.\n\n\"Who is first?\" I asked.\n\n\"You two each take one,\" Storm instructed them. \"I want both. He can eat me out while you ride him. Let him do it though. Give him the pleasure.\"\n\n\"Yes Storm!\" They agreed.\n\nNightcrawler wanted the bottom erection. I sat up helped her straddle me and took aim. I watched as her blue flesh parted and her pink pussy interior could be seen as my cock opened her up and slid deep.\n\n\"Gods he's buried in me!\" She whimpered.\n\n\"Me next!\" Kitty begged as she faced me and squatted over my upper erection. \"Hold it still... here I come.\" She said biting her lower lip as she sunk down slowly. \"I see what you mean. So damn thick!\" Her eyes rolled up in her head and her mouth fell open.",
        "\"Start moving,\" Storm urged as her students began riding me. \"Great rhythm you two! You should see your expression Ghost. That is so hot. Lie back, it is time to taste the lightning.\"\n\nI whimpered as the girls slowly rode me and Storm sat on my face. This was being spoiled on a level I never deserved. I used the serpent tongue right off the bat. Storm cried out in surprise as I primed her pussy and ass. I cupped those luscious cheeks of hers and buried my face as close as I could. My tongue split slid into her, and then thickened.\n\n\"You are full of surprises!\" She growled. \"Eat me out Ghost!\" Meanwhile I heard the contrasting voices of Kitty and Nightcrawler. Kitty's was higher pitched as she drove her hips downward harder and harder. The more force she applied the louder she got. Nightcrawler was more of a moaner and her voice lower and subdued but just as intense in her own way.\n\nI felt Kitty climax as her tight little pussy clenched tight around me, but she recuperated quickly. Nightcrawler was next and she came so hard she nearly passed out. Storm was quite happy to let my tongues go at her. She waited until the girls had climaxed twice each. Only then did she take her place. Nightcrawler and Kitty knelt close and watched enthralled as Storm mounted both erections. They winced when my lower erection slid into her ass. Storm cursed a blue streak and the girls laughed hearing that kind of language out of their instructor. Storm's voice was loud and elemental crackling with power.\n\n\"...god damn hammer me... harder motherfucker... do I look fragile to you...\"\n\nI rolled her onto her back and then onto her shoulders. I jackhammered into Storm with complete abandon. Her first orgasm nearly sent me into the ceiling when her entire body discharged a massive electrical charge. I sat on the floor with wisps of smoke floating off my limbs and torso. I exhaled which sent a stream of smoke into the air.\n\n\"Damn woman,\" I laughed.\n\n\"You okay Ghost?\" Storm asked as she hugged me and helped me to my feet. \n\n\"Who is next? Either one of you want to...\"\n\n\"ME!!\" Nightcrawler begged.\n\n\"Fine. You two sit tight. You, ass up head down.\" I growled as I approached the eager mutant and spat on her asshole. \"Let's get you ready.\" I purred as I worked two fingers into her ass and let my stamina bar recharge. \"How is that, you still okay?\"\n\n\"UNNNN!!\" She moaned. \"More.\"\n\n\"Can you take another one?\" I asked and she nodded slowly. \"You can stop at any time, got it.\" I said as I worked another digit into her slowly. I glanced at Kitty. What a hungry expression on her face. \"You want to hold them for me?\"\n\n\"Me?\" Kitty flinched for a second before nodding. \"Let's do this!\"\n\nI withdrew my fingers and Shadow Cat took both erections in hand and aimed them. I pushed slowly and savored the noises Nightcrawler made. I grabbed her forked tail and that brought her head up. Storm placed her face next to Nightcrawler's.\n\n\"You okay kiddo?\" She asked. \"Good. I remember my first DP, it was epic. I got skewered between Logan and Colossus. Man, what a night!\"\n\n\"I am so full.\" Nightcrawler whimpered and I stopped. She nodded after a few minutes. I used her tail for leverage and fucked her nice and slow. \"Best night ever!\"\n\n\"Tell me about it.\" I said. \"I'm going to keep it nice and slow.\"\n\n\"That's fine by me,\" She groaned, and Storm gave me a nod that she was okay. I whimpered and fought the urge to cum, but she was just so damn tight. \"He's getting bigger! Did I do that?\"\n\n\"UH HUH!\" I said through clenched teeth.\n\nI pulled back and slammed into her and cut lose. She climaxed a few seconds later. I lay on top of her panting and gasping for breath. Our sweat mingled as we recuperated. I pulled out and she hit the bathroom to clean up. I washed up once she was done and discovered the second bottle of Wakandan champagne. I looked at Storm and she was as surprised as I was. I opened it and filled glasses. We snuggled on the bed as I let my stamina recharge.\n\n'Trophy Earned: Blue Genes - Mother and Daughter. Trophy Earned: Riding the Storm Out. Trophy Earned: Unphased and Proud of it.'\n\nWhen I read blue genes, I suddenly remember that Mystique was in fact Nightcrawler's mother. That made me a mother fucker. I wondered what mischief the shifter was getting herself and the other members of M3 into. \n\n\"I am sure Xavier and Jean will find Bobby.\" I tried to reassure them and keep on task.\n\n\"Can they help him once they do?\" Kitty asked.\n\n\"I'll be honest with you. I don't know. I hope so.\" I replied and they were used to hard truths. I refilled my glass and sipped it. Two hours later the four of us entered the bar from the stairs that led to the second floor. There were more patrons now and Doc Connors was behind the bar. He gestured urgently at the big screen TV. We rushed forward and there was a shot of Avenger's Tower, you could see the broken window highlighted by a computer graphic, while the banner below read 'Suicide at Stark Industries'. My HUD chimed as it picked up the quest 'Taking its Tohl'. \n\n\"Let me drop you off at the Black Bird. I need to see what is going on with Stark.\" I said and they agreed. We linked hands and I used far sight to find the aircraft, but it was no longer parked by the bar. I told Storm and she said someone must have remote piloted it back to the mansion. I changed my target to the front door of the mansion and folded space there to push the range of that skill. One step later and we were there. \"Okay, I got to go.\"\n\n\"Hold on,\" Nightcrawler exclaimed. \"What was that? That wasn't teleportation I know the feel of that.\"\n\n\"Come here,\" I said, and she followed me out of ear shot of the others. \"I can fold time/space. Instead of using an alternate dimension to teleport. I warp the fabric of space to hop around. That is just between us.\"\n\n\"I'll keep your secret the best I can. There are quite a few telepaths around here.\" She giggled. \"Thanks for trusting me with this.\" She said and kissed my cheek. \"Thanks for everything, it was worth the wait.\"\n\n'Trophy earned: Folding her space. Trophy earned: A new phase for her. Talent gained: Ether Walk-Basic.'\n\nI walked back with Nightcrawler and hugged them goodbye. They promised to keep me in the loop in the search for Bobby. I touched my subdermal comm link and tried to get in touch with Toni Stark. I got Jarvis instead.\n\n\"Ghost Fire, Ms. Stark is inundated now. I'm sure you understand.\" The A.I. shared gently.\n\n\"Absolutely, I want to help if I can.\" I said.\n\n\"Well, one moment... Ghost Fire is offering his help Ms. Stark.\" Pause. \"I will inform him. Mr. Tohl has a sister. Can you go to the home they share and inform her and give her condolences until such time as Ms. Stark can do so in person?\"\n\n\"Sure. I will do my best.\" I said.\n\n\"Ding!\" Address of the Tohl household received.\n\n\"I need a taxi.\" I thought out loud.\n\n\"Hey! Ghost! Need a lift?\" Harry Canyon asked as he pulled up in his armored taxi.\n\n\"Perfect timing Harry,\" I said and gave him the address of the Tohl house.\n\n\"I've been there before,\" he commented in his heavy Brooklyn accent. \"Creepy place, almost as creepy as that brownstone on Bleeker Street. The lady there is nice enough but her brother, wow what a nut job!\"\n\n\"He just committed suicide.\" I said and Harry dismissed it with a wave of his hand.\n\n\"Doesn't surprise me,\" Harry said. \"That guy was always talking about all sorts of crazy shit. The Great Old Ones! Yog something or another. Kuh-Too-Lou and all kinds of insane stuff. The guy was batshit crazy I tell ya.\"\n\n\"I believe you Harry.\" I said. \"I wonder what pushed him over the edge.\"\n\n\"Who knows. It is nice you trying to help his sister though. If you need a lift just stick out your thumb.\" He offered.\n\n\"Hey, is that a suntan you're sporting?\" I asked noticing the noticeable tan lines.\n\n\"Damn straight!\" He beamed. \"I just got back from a month down south. Caribbean and all that. I still have money in the bank to boot!\"\n\n\"Sounds like an interesting story,\" I said seeing if he would share or not. He did.\n\n\"So, no shit... there I was...\" Harry began.\n\nFade In:\n\nI was driving in front of the Met, the Metropolitan for you artsy-fartsy sorts, when all hell broke loose. This luscious thing throws herself against my cab. I looked up at the front of the building and there's this old guy full of holes and three other guys stepping through the shattered glass door they had just shot the living shit out of. Normally I don't get involved in other people's affairs but damn this girl was stacked. I unlocked the back door and let her in, big mistake. I drove off while two of those assholes shot at my cab! I decided at that moment to take her to the cops. That didn't go over at all. There she was passed out in the back of my cab. The police were too busy investigating a break in at the Met to even interview the girl. What's a guy to do? I took her back to my place.\n\n\"You saved my ass,\" she said as she stood up and looked around.\n\n\"What the hell was that all about?\" I asked her.\n\n\"Those assholes broke in and tried to steal something my father discovered in a forgotten tomb.\" She explained looking lost and forlorn.\n\n\"You can sleep on the couch for now until you find some place to lay low.\" I offered. Second big mistake sort of.\n\nI was worn the fuck out and went to bed. I had barely got in bed before the cute little redhead came sniffing around for some good old American cock. In short, I fucked her senseless. After such a great job I fell asleep. The cops finally got around to doing their job. They showed up and asked nicely for the whereabouts of the girl. \n\n\"Girl? Which girl? What's her name?\" I asked and the strange thing is, they never said. Police corruption I tell ya. They left and I knew they were both hiding shit. She was gone and I was okay with that. I got what I wanted. Did I mention she gave up the ass too? Yeah, she did. I went on just like any other day. I hung out by the usual places. The Gate complex is a great place to pick up fares. You can teleport wherever you want, but you still need a taxi at the end of the road. I had just dropped off a fare at a hotel when she messaged me. There's this new system that Stark help fund, MessageCom. They are these flying robots that use the same jet things her suit does to flitter all over. She was so impressed with the night before she wanted another go at me. We snuck up to the torch of Lady Liberty and I fucked her into submission a second time. After that, and I don't know where she got the strength, she pulled out this weird suitcase. That isn't right either, it looked like a big ass cylinder, it was domed on top, with a handle to carry it around. It was about two maybe three feet tall and with a twist of the handle it opened halfway. Two panels on either side folded down revealing a green glowing soccer ball.\n\n\"This is what they are after,\" she said. \"They offered us half a million for it.\"\n\n\"Sweet, I'll cover that sweet ass of yours and we'll get this over with.\" I told her and she kissed me like she would die without me.\n\nSo, we went back to my place until it got dark. We went down to Queens and made the exchange. She was so grateful she handed over the bitcoin purse to me and disappeared. I've never seen her since. Harry said with a forlorn expression on his ruggedly handsome features.\n\nFade to Black:\n\n\"So, there's some kind of glowing rock out there somewhere.\" He said.\n\n\"You killed her, didn't you?\" I asked and he laughed.\n\n\"Would you believe that fucking slut tried to take me out, me... yeah I erased her ass.\" Harry admitted. \"Don't tell May about this. She has been helping me get over that kind of thing.\"\n\n\"I got your back Harry.\" I said and he smiled.\n\n\"Tohl House, on your left. Thanks Ghost, I'm glad to get that off my chest.\" He said smiling.\n\n\"Take care of yourself Harry.\" I said and swiped my card to pay the fare and tipped him well. \"Oh hey, did you ever get her name?\"\n\n\"The archaeologist's daughter,\" he asked, and I nodded. \"Nope and I don't care.\"\n\nI watched him drive off and stood in front of the dark stone building. The exterior appeared to be fashioned from either granite bricks or some other similar material. The wrought iron gate was elegant and done in the fashion of ivy leaves and swirling creepers. I looked around and switched to street clothes before knocking on the front door. I opened the gate, mounted the stone steps, and knocked on the iron bound oaken door. The door opened and a middle-aged woman with long dark hair, bright green eyes, and a charming smile greeted me.\n\n\"Can I help you?\" She asked.\n\n\"I was sent here by Toni Stark,\" I said. \"It is about your brother, can I come in?\" I asked and she did the strangest thing. She reached into her blouse, took out a silver fob watch, and opened it to read the time.\n\n\"You are right on time,\" she replied. \"Come in.\"\n\n\"Okay.\" I said and followed her in. I closed the door behind me and gasped when I saw the interior of her home. \"Whoa!\" I gasped at the beauty and majesty of the items upon display.\n\n\"Look around, coffee is almost ready.\" She said. \"Talia, my name is Talia Tohl. Nice to meet you... Ghost man.\" She chuckled and I felt my jaw drop open. I never felt a hint of telepathic contact. \"Not telepathy,\" she hollered. \"I am a Chronomancer! I can read your history only, not your future.\"\n\n\"Holy shit, the Serpent Ring of Set!\" I exclaimed as I looked under a glass display case. \"Isn't that the Book of Epimetreus?\"\n\n\"You should know,\" she replied to that. \"Take it out and look at it.\"\n\nI reached for the magical tome and the protective runes flared to life for a second and then faded. The book was your typical spell book, large, thick, and bound in metal and leather. I recognized the phoenix sigil on the cover and since there was only one Phoenix Mage in all history it had to have been written by Epimetreus. The interesting part was the straps attached at the top and bottom of the book's spine for easy carry. I held the book close and saw hundreds of small runes etched not only in the metal cage that helped protect the book but into the leather cover, spine, and back as well. \n\n\"It is a rune book!\" I exclaimed. \"Holy... wow!\" I said as I touched the metallic catch and it opened with an audible click.\n\n\"I knew it!\" Talia exclaimed as she carried in an antique silver tray with a matching antique silver coffee service.\n\n\"You changed your look,\" I noticed how her hair was now in a 1950's updo with matching apparel.\n\n\"I thought you'd find it sexier to be dressed more modestly.\" She admitted. \"Open it for me please. Read to me Ghost man.\" She purred.\n\n\"Okay,\" I said licking my lips as she uncrossed and crossed her legs giving me a flash of bright red panties. I focused on the book looked at the cover page. It had an intricate magical seal laid out with runes and an incantation along the exterior of the outer circle. \"It is a summoning spell.\"\n\n\"Can you read it, I mean, is it legible to you?\" She asked practically moaning.\n\n\"Um let's see,\" I said and yeah, the spell was clear to see. \"Yes, it is quite legible. I don't know about this. I could be summoning anything.\" I heard her moving around in her seat and something soft and fragrant struck me. I caught her panties before they fell to the floor. \"Upping the ante, I see.\" I said and then sniffed them.\n\n\"Naughty boy,\" she growled.\n\nI closed my eyes as I felt a critical moment arriving. This was going to change my character on a fundamental level. 'Anackire? What should I do?' \n\n'I hear you Ghost Fire,' a voice said but it wasn't Anackire. It was in fact the goddess Istus, she who rules Time, Space, and Fate. The colorless deity whispered in my thoughts. 'Destiny awaits.'\n\nI remembered how Conan the Barbarian had recognized me as Epimetreus and now Istus says that destiny awaits. I opened my eyes and glanced at Talia. She looked like she was ready to jump my bones. She looked hungry. Was it for me or what was about to happen? Fate awaits. I read the spell and it was surprisingly easy. I adjusted my grip on the book and brought my left hand towards the sigil and the two repelled the other. It felt like two magnets fighting one another. I swapped hands and the sigil didn't mind my right hand. I placed my palm against the design just as the spell directed and I invoked the spell. With each syllable spoken the air grew warmer and warmer until I felt the entire room would burst into flame. I recognized the piercing cry and the room, hell the entire world fell away, and it was just me, the book, and the blazing figure swooping down at me.\n\nI let out a scream as the horizontal column of red-gold flame slammed into my chest. I held onto consciousness as if it were a life preserver. I failed. There is only so much the mind can withstand. When I awoke, I was sprawled on Talia's comfy couch. She was sipping her coffee from the antique teacup. The translucent porcelain let just enough light to pass through it so show her cup was half empty.\n\n\"I feel half full.\" I muttered groggily as I sat up. She had changed her clothing, no, she had changed her entire look. Even her ethnicity had changed since I had last laid eyes upon her. When I first met her, I would have guessed her parents either Germanic stock or perhaps Eastern European. Now, well now, she appeared half Latin or Brazilian and a good portion Celt. Her skin now had a healthy tan with freckles decorating her soft flesh. Her hair hung loose and fell to the seat of the chair she occupied. Even her eye color was different. What had once been bright green like Sunkissed grass now the color of honey or amber. \"You've changed.\"\n\n\"Are you sure?\" She asked smiling and helping me from couch to opposite her on the small serving table. \"Coffee is still warm.\"\n\n\"Thanks, mmm this is tasty.\" I commented on the brew. \"What happened?\"\n\n\"You opened the book and cast the first spell in it.\" She said. \"Quite the light show.\"\n\n\"Yeah, tell me about it. Should have seen it from my point of view.\" I replied. \n\n\"After coffee I'll show you the famous Tohl collection if you want.\" She said completely unphased by the death of her brother.\n\n\"I'd like that,\" I told her. \"About your brother...\"\n\n\"He predicted his death down to the minute. He was a prophet. I can only see people's past. He could view all their possible choices and follow the most likely path they would take.\"\n\n\"So, you can see mine then,\" I said, and she shrugged.\n\n\"Yours is like braided rope. You are a time traveler I take it. That is the only thing that makes sense. Your past and present and future all overlapping one another.\" She said filling her cup and adding sugar and creamer.\n\nAfter coffee she showed me, as she described it, the famed Tohl collection. It was one of if not the largest private collections of occult books and artifacts in the world. It rivalled what I had seen in the New York Sanctum and matched some of what I had seen in Kamar Taj. The artifacts were many and varied while numerous tomes had been procured from the Golden Goblin Press located here in New York. She took a key from around her neck and unlocked a thick iron bound oaken door. \n\n\"What's in here?\" I asked and she just waved me in and let me discover it on my own. The room was dimly lit, but I could easily make out ten free standing tables. Hanging from the ceiling above each table was a small ornate lamp. They weren't big enough to be called a chandelier or simply a bulb. Each of the lamps were hand blown glass sculpture that reflected the thing below it. The nearest of the tables had a mermaid themed lamp. But instead of cute human female the upper torso was monstrous. The strange structure on the table beneath the mermaid hurt my head to look at for too long. \"What the hell?!\"\n\n\"Yeah, after all of these years it hurts me too.\" Talia chuckled. \"My grandfather travelled the world and inspired by unique locations he made these. You will find no other dioramas like these anywhere else.\"",
        "\"I believe you.\" I stated. \"Let's move on and see if... nope! This one is worse than that one.\" I grimace as I approached the cityscape beneath the octopus lamp. It was slimy, dark stones, arranged in a mind-bending configuration that bent perception and geometry on its head. \"I feel like I should know this place.\"\n\n\"It is the sunken city of R'lyeh, home to the Dreamer in the Depths.\" She clarified with a weak grin.\n\n\"I slept on his couch once,\" I said and balked at moving deeper into the room. \"How far have you gone?\"\n\n\"I've seen them all,\" She admitted. \"It isn't for the weak of heart.\"\n\n\"A few more,\" I whimpered. \"What the hell is that?\" I asked as I walked towards the web covered table. \"Haven't you dusted in here?\" \n\n\"That one has always been like that.\" She said. \"It is the lair of one of the Many Angled Ones.\"\n\n\"Yikes! Okay, I'm done!\" I said as I fled the room upon seeing a hundred or so beings snared in the strands of the webbing. While using webbing myself there was something soul chilling seeing the strands wiggle while I stood there watching. It could have just been the wind, but I had felt no breeze in that stifling chamber. Talia closed the door reverently and I suppose I understood why.\n\n\"I ran screaming the first time I dared that room.\" Talia admitted. \"I had nightmares for weeks afterwards. I still have bad dreams. Scotch?\" She offered as we entered the reading room. It was a small comfortably decorated room. It had a snug feeling about it, and I welcomed a good stiff drink. \"My brother knew when he was going to die. He told me years ago. Please don't think me a cold-hearted bitch. I have mourned him many times since then until now.\"\n\n\"We all end but it is disconcerting knowing the day and the hour,\" I muttered, and she refilled the bottom of my tumbler.\n\n\"Exactly,\" she agreed. \"You are one of Strange's students, aren't you?\"\n\n\"More companion than student,\" I corrected. \"Though she has shared some interesting spells.\"\n\n\"I shall do no less,\" Talia declared. \"You have come here to support me emotionally. What sort of magic would like to improve?\" She asked and my HUD dropped down automatically. My spell schools were displayed. They were divided and I had no idea how vast the game's magic system was. Had this been part of the upgrade? I looked at them carefully and my first reaction was to study time magic but my rating in it was already high thanks to Istus. I went alphabetical and when I hit 'N' I spied a school I had never heard of before. \"Negamage?\"\n\n\"Good choice!\" Talia purred or was it more of a moan. \"I've never met one of those before.\"\n\n\"What is a Negamage exactly?\" I asked as she whistled shrilly and the air to her left warped and a cloven-hoofed girl appeared and curtsied. She was dressed in a traditional maid's uniform of dark cloth with white fringe that made her crimson skin stand out even more. Her long mane of hair started out a sapphire color near the scalp but by the time it reached her shapely ass it was the color of polished brass.\n\n\"You rang,\" the succubus moaned. \"Ooh, he's a keeper. Shall I seduce him for you? I won't mind.\"\n\n\"I need your other expertise,\" Talia informed the demon.\n\n\"Other? What other would that be. The only thing you've ever had me do was suck... ow!\" The succubus exclaimed when her mistress elbowed her in the left breast. \"That's my lucky tit you know.\"\n\n\"Please explain to him about the noble art of the Negamage.\" Talia ordered.\n\n\"Please?! When did you start using words like...\" the demon stated as she protected her perfect breasts from attack? \"Fine. I'm not sure you'd classify a Negamage as noble. They are rogues and thieves. They can steal others magics. Whether it is a human sorcerer or even a demon's immortality. They can abscond with it if they are quick and clever enough about it. It often ends poorly for them. I am honor bound to warn you about that. That said, they can dismantle magic wards, traps, and whatnot. They don't have to steal magic. I've known of one that was content on simply robbing wealthy mages of their most prized possessions. They can also handle artifacts normally isolated to certain moral degradations or piety.\"\n\n\"So, they can steal holy and unholy items but not use them.\" I stated and she smiled.\n\n\"You caught that bit, good. Yes, they can touch dread and fearful things without harm. If they try and use them though eh it could end poorly or just corrupt them.\" The demon purred. \"I got a treasure you can touch... ow! Aw come on! He's been staring at my arse this entire time. I am fucking soaked over here.\" She growled as she stuck out a foot-long scarlet tongue. I matched her and used the serpent technique to split it and wiggled it at her. \"OOH! Did you see THAT! One for the pink and one for the stink. Let me at 'em!\"\n\n\"Behave, this isn't a brothel.\" Talia said chewing her lower lip. \"So, is it going to be the path of the Negamage for you?\"\n\n\"Hell yeah,\" I said and winked at the succubus.\n\n\"Go fetch the books on it and return.\" Talia ordered.\n\n\"Huh?! I can teach him hands on though. I won't charge anything but a little sperm.\" The demon wailed in frustration. \"I haven't been fucked in over an earthly month!\"\n\n\"I don't know...\" Talia whimpered. \"The last time you left the poor guy nearly a husk.\"\n\n\"He was a mortal man.\" The demon yowled like a cat in heat. \"This guy isn't even human... nor mortal... he's...\" she stopped when she saw my expression. \"My apologies sir. I got carried away.\"\n\n\"I know his past.\" Talia whimpered. \"All those women. All that sex. Can he make me climax?\"\n\n\"Absolutely oh insatiable one,\" the succubus declared as she whispered in Talia's ear. \"He'll wreck you the way... never mind that yes he can.\"\n\n\"Good. I hate being left out of all the fun.\" Talia said and I felt like the key to her odd behavior and quick costume changes might be revealed. \"Tell you what Svartalfar, you fuck me and little miss sunshine rotten during your training period here and you'll leave here a fully trained Negamage.\"\n\n\"I don't have the time to...\" I began and she smiled. \"Oh, I see. Chronomancer, you can slow or even halt the flow of time outside.\"\n\n\"I can if you make it worth the effort.\" Talia whimpered.\n\n\"Just sex nothing else,\" I said to clarify the arrangement.\n\n\"Just sex,\" the succubus purred.\n\n\"Just sex,\" Talia promised.\n\n\"Let's do it.\" I agreed.\n\nA payment before any training was standard practice apparently. When they learned about the Double Dragon, they were both thrilled to death. My training began the next morning. So, there was quite a bit of a payment if I was being honest. I left demon and Talia semi-conscious in the master bedroom. I smacked my lips after the succubus offered to feed me. I had never tasted demon blood before. It didn't take much because of its innate potency. Talia already knew that little secret, she seemed to know all of them, but wasn't eager to share any of them. Was it part of being a Chronomancer? Could there be an oath of keeping such things to herself? I didn't know. I slipped down to the kitchen and prepared breakfast for the three of us. I almost didn't recognize the succubus when she strolled down naked wearing just a smile. She looked strikingly human save her yellow eyes and forked tongue.\n\n\"Thanks for last night,\" she purred with a kiss on my cheek. \"I needed that.\"\n\n\"We all did, eggs and bacon?\" I asked as I prepped the skillets.\n\n\"I'll get the coffee ready.\" The succubus said as she rinsed out the filter.\n\n\"Look at you two,\" Talia said appearing in an equal state of undress as the demon. She had changed again, and I began to think she was unable to control these subtle and not so subtle changes. Talia was now a stunning redhead with puffy inverted nipples. I remembered quite well suckling on her sensitive nipples last night. We ate, recounted last night's highlights, and then Talia informed me that it was time to enter the training grounds. We washed up and dressed. Talia opened a portal and the three of entered a realm that seemed straight out of an Escher painting. Gravity and reality didn't have anything to do with the laws that ruled this place. \n\n\"Welcome champion.\" A neutral uncaring voice greeted us clinically.\n\n\"The Grey Lady!\" Talia gasped and dropped to her knees.\n\n\"Lady Istus!\" I said and followed suit. \"Of course, it makes sense for a Chronomancer to derive her power from you great lady.\"\n\n\"Astute as always,\" the goddess replied. \"State your business in my realm Talia.\"\n\n\"I have agreed to reveal to him the secrets of the Negamage.\" She said with head still lowered.\n\n\"You would make of him more a rogue than he already is?\" The colorless goddess chuckled showing the first hint of emotion since I had met her. \"My home is yours. Keep that demon on a tight leash though, here!\" A mystical collar appeared in my grasp. \"Put it on her. You can take it off her when you depart. Do it.\" She ordered with a visible grin.\n\n\"Come here you,\" I said as I stood and approached the demon. She extended her neck and was purring as I slid the restraining device around it. Click. \n\n\"Excellent!\" Istus stated. \"Now, Talia and champion step over here,\" She said and pointed as a cave like opening appeared. Three granite steps led into the opening. \"Talia, take your mark and champion I want you to walk into the structure and when you reach the end tell me what you make of this place.\"\n\nThere was a clearly defined path within, on either side of it was volcanic glass and appeared slicker than shit. A bright yellow beryl triangle was where Talia stopped, and I continued forward. Perhaps twenty feet forward the tunnel dipped downward at a forty-five-degree angle. I took it slow and noticed that the walls of the cave were made of translucent glass in this area. The tunnel went on for another hundred feet when it began to slope upward. The angle increased but I wasn't fighting as if I were walking uphill. Eventually the tunnel leveled out for thirty feet before it dipped just a bit and a subtler slope took hold until I found a matching blue beryl square. \n\n\"Huh.\" I said and my voice carried and echoed in that vaulted open space.\n\n\"Ghost?\" Talia called out. \"Is that you?\" Her voice had that same hollow quality to it.\n\nI looked around and then I looked up. I laughed when I spied her above me. I raced forward keeping to the path and once again a severe upward curve to the tunnel and before long I was standing directly above her. I knelt and tapped on the glass surface and she looked up at me.\n\n\"Oh hey,\" she exclaimed. \"What is going on?\"\n\n\"Ha!\" I laughed. \"It is a Klein Bottle! Give me a second and I'll be right there.\" I raced forward as the tunnel dipped and I rose to come face to face with her. \"A four-dimensional object represented in a three-dimensional space. However, in this case, this one is a four-dimensional construct. Amazing!!\" I cried thrill for the experience. \"Thank you, Istus.\"\n\n\"I am thrilled you appreciate my sculpture.\" She said with an extremely rare smile.\n\n\"May I?\" Talia asked and Istus inclined her head in the positive. We walked the sculpture together. I created a sphere of light around us and it became clear when gravity seemed to be defied by the severe turns that formed the neck of the bottle. I had learned about Klein Bottles in college. I dated a gal that wanted to be a topologist. It is a branch of math that looks at the relation of space, geometric shapes, and continuous change of size or shape. We exited the sculpture and found Istus waiting for us.\n\n\"Why here champion,\" Istus asked.\n\n\"I didn't choose our destination. Do you have a better one in mind?\" I asked facing her and taking in her divine aspect.\n\n\"I do actually. My coven sister Manu-Rani. Her domain is energy and matter. What is magic but the manipulation of matter and energy?\" She said as a portal opened, and Manu-Rani appeared.\n\n\"Sister?\" Manu-Rani queried.\n\n\"Tell me of the legacy known as Negamages.\" Istus asked.\n\n\"Ghost Fire?\" Manu-Rani laughed. \"Scoundrel and Rogue. I will take this burden from you sister. Attend me champion... a Chronomancer and a Demon? What strange bedfellows yes?\"\n\nI entered the portal into yet another realm. This was a chaotic domain where energy and matter changed and exchanged constantly and without warning. The runic palace was the eye of the storm and it was disorientating even within the confines of the structure. The demon liked the ever-changing nature of the realm. Talia and I not so much. I had never had an official education when it came to the arcane arts, that would not do. Manu-Rani took over at this point and delegated Talia as simply a sparring partner. The demon she barely noticed as she turned her full attention to me. The goddess explained to me the nature of energy and matter and dropped a bombshell that I wasn't away of.\n\n\"Magic wasn't always a part of the universe. The first few iterations didn't possess it. You might call it a tweak added in the third or fourth cycle. It made things more interesting by adding the planes boiling over with arcane power. It also gave us new threats to deal with. I have the dubious honor of having one of my priests creating the mantle of Negamage. Ooh, he was a scandalous soul, but in his defense, he was a brilliant mage. He had the most delicate touch when it came to picking pockets as he did lifting wards and the like.\" She said with a smile. \"Before I let the two of you clobber each other remember patience, flow, and adaption.\"\n\nManu-Rani called her famed cleric from his perpetual rest. He arrived naked and dripping wet. With a few gestures he clothed himself in the robes of a warrior monk. The bright silver and white uniform were as functional as it was stylish. His species of origin befuddled me. My first thought was that he was an albino of his race, but that wasn't true. His skin was silvery-white and translucent in many areas and transparent in others. I never saw a skeletal structure beneath his flesh, and I wondered how he was able to stand there unassisted. There were also no obvious openings such as a mouth, nostrils, eyes, ears, or other organs. His shape was roughly humanoid, but his fingers were longer and reminded me of short tentacles more than traditional digits.\n\n'Specialized musculature,' he explained touching my thoughts. 'I can harden groups of muscles to do the work of a skeleton, but my people are closer to Terran cephalopods or the Klyntar symbiotes. I have been summoned to instruct you eh. You at least are a worthy student. I have been watching your antics for a while now. Let's get started.'\n\n'Excellent, do you have a name?' I asked and he/she looked at Manu-Rani. She nodded and he replied.\n\n'My people, now extinct, were known to your ancestors and they called us Fluidics or the Nenannon. We possess a very limited form of shapeshifting. As for a personal identity, that is difficult to explain. My race being telepathic by nature shared a hive mentality, so individuality was frowned upon. You can call me Penumbra; it is as good as any other. No, I don't have a designated gender. We reproduce asexually acting in both capacities. I envy monosexual species. It looks like a lot of pleasure.'\n\n'Fascinating.' I replied. 'Where do you want to start?'\n\n'I prefer practicality actually,' Penumbra explained. 'I have a raid planned but I'll give you a crash course in being an Arcane Rogue. It isn't limited to stealing magic, dismantling wards, but a lifestyle.'\n\nI laughed and we walked around the everchanging realm of Manu-Rani. My conversation with him, since I didn't know how else to think of Penumbra, asking me what skills I already possessed and that gave him an understanding of my strengths and weaknesses. I got an ambiguous moral code vibe from him as he felt those with more should be unburdened of all that pesky wealth. As he explained how wards worked, he strongly suggested I take courses or read up on antiquities so that I could recognize value from junk. I liked his hands-on approach to instruction. He started off simply explaining how to create, recognize, and dismantle runes, wards, and arcane based traps. He also bolstered my less savory skills, lock picking, pick pocketing, and stealth techniques. He was a rogue through and through. The casual aspect of my training ended, and I was thrust into the middle of an impromptu mission. My HUD dinged as the side quest activated.\n\n'Training Quest: To succeed acquire either Nth Metal, Father Box, or the Philosopher's Stone.'\n\nCurious to see what each thing did I dug around and researched them. Nth metal was a 'crossover event' object that allowed the craftsman to make an object that was strong, resistant to magic, and capable of flight. The Father Box could create a 'hush tube' or a silent portal among other things. The Philosopher's Stone could be added to a forge and it could convert one element into another for a price. The rarer the desired alloy the more of the base alloy required. That could be of use to me. I think the Philosopher's Stone seemed the best bet for me.\n\nPenumbra opened a portal that led to what was labeled as the Crossover Zone. My HUD informed me that a limited time Crossover Event would begin when I entered the portal. I recognized Nth metal from the DC Universe, and I guessed the Father Box was as well. I switched to street clothes and followed Penumbra through the portal. \n\nThe shroud of night hung over the city. It could have been New York, perhaps Gotham, or any other metropolitan city. While portions of the skyline reminded me of New York, the architecture was reminiscent of the gothic stonework of the other. Wayne Tower dominated this portion of the city, but it wasn't alone. Stark Industry had a presence here as well. How many comics and universes converged here and how long would this Crossover last? Time to get moving. I needed to gather information. The best way to do that was the internet in whatever form it took here. I stood atop one of the taller buildings and I peered off the room and two blocks away I saw the neon sign of an internet caf\u00e9. Perfect. I was about to teleport via shadow when a flying car soared by and I recognized the silhouette as that of a police car from the movie Bladerunner. It was getting better by the minute.\n\nI reached out to the shadows and they embraced me. It took no effort to shift from the top of the building to the alley next to coffee house. I stepped out of the shadows and rounded the corner. I stopped cold and felt my jaw fall open when I saw the three cars parked out front.\n\n\"...Shelby Cobra... Thunderbird... GT40... oh... my... god!!\" I gasped. \"They are gorgeous!\"\n\nWere they all owned by one person or was this just my wet dream come true? I stepped into the coffee house and it was crowded with dozens of overlapping conversations filling the air. I smelled a variety of caffeinated drinks along with fruits and chocolates as well. No one was currently at the counter, so I was able to place my order, sit on one of the stools, and turn around to do a little people watching. The place had a strange interior d\u00e9cor that ranged from classic 50's to 90's neogothic, to a splash of cyberpunk on top of it all. The girls were cute, the guys ruggedly handsome, and then I saw them. The three guys sitting around a large circular table in a corner. I felt myself pulled over watching the intense conversation going on. \n\nOne guy wore a clean white long-sleeved shirt and on top of that a black vest. Next to him a well-dressed middle-aged man in a button up shirt, well-worn jacket, and a fedora on the table in front of him. Last was the man with the short cropped almost spikey brown hair, dark shirt, and intense expression. Hell, they all had a passionate expression. \n\n\"...listen I know you are on the run, but we need your help,\" the gentleman in the middle stated strongly.",
        "\"Shit is about to go sideways and...\" the third man began, and they all fell silent when they noticed me standing nearby. \"Can I help you?\"\n\n\"You look like you could use an extra hand.\" I said offering my help. I looked each of them in the eye and then I laughed. \"Oh my god, that is too funny!\" I laughed remembering the three cars out front and then running into these three iconic characters sitting around this table. \"I get it now, three Fords!!\" I chuckled as I was invited to sit down at the table with Han Solo, Indiana Jones, and Rick Deckard. \"Forgive me, how can I be of help?\"\n\n'Ding' My HUD chimed. 'You have three side quests to choose from.'\n\nI pulled down my HUD and sure enough there was one quest from each of them. Solo: Steal from a heavily guarded safe in a penthouse apartment. Jones: Recover a stolen relic from a black-market dealer. Deckard: Hunt down a Nexus 8 replicant posing as a stripper in the seedier side of New Gotham.\n\nI'd save the stripper for last as a reward for a job well done. I'd just do them order. I accepted all three and headed outside to look around for quest markers. The Solo quest wasn't far and was north and east of my current position. I looked at my gear and as I suspected only a third of it was available in the Crossover Zone. I slipped into the shadows changed into my Vibranium armor, activated my shoulder cannon, tactical mask, and Shatterpoint dagger. I switched on my active camouflage and teleported to the roof of the tallest building in my line of sight. From here I had a clear view of my first target.\n\n\"No fucking way,\" I curse when I saw that it was the headquarters for Lexcorp here in New Gotham. \"This will prove interesting.\"\n\nI let my paranoia fuel my preparations. If I was Lex Luthor and I wanted to protect my prized possessions how far would I go? To the absolute limit, I thought. I needed to do some reconnaissance and spy out my target. Not trusting to physically explore the airspace around the top of the building I would settle on an astral investigation. I didn't want to leave my body vulnerable so, I would summon a watch dog. I tapped into the Shadow Dimension and out popped a grinning demon-kin named Ted.\n\n\"Master.\" Ted said as he prostrated himself. \"How's it hanging?\" He asked with a flash of razor-sharp teeth.\n\n\"I need to take a looky-loo over at that tower there.\" I said. \"I need you to make sure no one mucks about with my body while I'm on the Astral Plane.\"\n\n\"You got it Tiger,\" Ted giggled maniacally in his low gravelly voice. \"Leave it to me.\"\n\nHe might be a three-foot-tall sociopath, but he was my three-foot-tall sociopath. I settled into cross legged position, closed my eyes, and slipped free of my body. The astral here had a cold feeling to it. It truly felt like outer space. I flew free and crossed the distance between my body and Lexcorp. The top of the building lit up like a Christmas tree. On the bad side the security was intense. However, on the good side most of it was technological in nature. I wanted to challenge myself and sneak in and not be discovered until after I was long gone. Trying to take on both tech and magic was foolhardy. Ted of all beings gave me the idea on how to take on this little challenge.\n\nI returned to my body with an attack plan. I opened my eyes and Ted was feasting on a pigeon that had flown too close. He had bitten off its head and was chewing loudly. I winced when I heard the crunch as he mashed the skull between his teeth.\n\n\"MMMMM crunchy!!\" Ted laughed. \"That was quick,\" he commented. \"What's the plan?\"\n\n\"This.\" I said as I opened a massive portal to the Plane of Shadow above the building. I nudged it slowly downward until it had enveloped the top three floors. I fashioned an illusion so that no one looked out their windows and saw the top of Lexcorp missing. \"Time to get to work.\" I shifted to the pocket dimension and as I hoped the top three floors had fallen dark as their connection to the city's power supply had been cut off. On the other hand, the mystical traps were stronger because of the very nature of the realm of shadows. Its mystical power surged the wards to their fullest capacity. If I messed up, I wouldn't feel it when the traps activated. I'd be dead. Ted was right behind me and I ordered him to patrol the perimeter while I went in.\n\nI cast the revelation spell and attacked the wards slowly. I was confident of my skills after training with Penumbra. When I removed the first ward I felt of rush of excitement. If I could remove the two wards adjacent to this one, I'd have a large enough hole to pass into the building unhindered. I blinked the sweat from my eyes as I worked on the second ward. A sudden flash of light within the top floor nearly caused me to fumble. I halted my progress and looked away from my work. It was a flashlight. Damn, someone was in the damn building when I shifted this part of it. I returned to my work and with a gasp of relief I removed the second ward. I felt the field collapse completely in the same way an electrical current would if enough of it were interrupted. Score one for me.\n\nI took on the aspect of shadows and slid up to the roof and into the air conditioning duct. I followed my nose and soon was looking down through a grate at a darkened hallway. I was about to ooze through the grating when the beam of the flashlight appeared. A tall muscular man in a silk bath robe walked down the hall. \n\n'Lex-fucking-Luthor!' I thought as the bald head passed directly beneath me. I passed through the grating with ease and attached myself to his shadow. Let him do all the work. He was cursing like a sailor as he tried to puzzle out what had happened.\n\n\"No power. No backup generator. Nothing outside. What the fuck is going on?\" He rumbled unhappy at his current circumstances. \"Got to check the vault. Superman... no, he'd never do anything like this. Darkseid... no we signed that nonaggression pact. Brainiac... no, he'd just take the whole damn city. Shade? This kind of darkness fits him well enough. Did he find out that I had it?\" Lex Luthor raced down the maze-like hallways and reached the center of the penthouse. He let out a gasp of relief. He opened a panel and behind it a mechanical lever marked manual override. He pumped the level and a larger portion of the wall opened revealing the vault. The gleaming steel door must have weighed tons. Set just above the door a chunk of green kryptonite obviously to keep Superman at bay or weaken him if he tried breaking into the vault.\n\n\"Thoom!\" A sound I felt more than heard crashed into Lex sending him flying.\n\nI slipped out of his shadow and slithered up the wall so I could watch the confrontation. Lex got to his feet. A female figure floated into view as she passed through the walls and into the area illuminated weakly by the flickering kryptonite. She was an alien wearing a charcoal grey body suit with an odd geometrical design on it. She reminded me of the Teen Titan Starfire with her mane of blonde hair running to the back of her knees. Was she a Tamaranean? \n\n\"Who are you?\" The woman asked of Lex as she raised her right hand and wisps of dark shadowy energy formed off it and took on the shape of a giant black gauntlet which grabbed Lex and gripped his entire body.\n\n\"Lex Luthor, why did you do this?\" He fired back and she squeezed her hand tighter. Lex let out a scream of pain.\n\n\"You! You are the one that invaded my domain Lex Luthor!\" She snapped. \"I see. Someone else is responsible for you intruding upon my realm.\"\n\n\"Lovely lady,\" Lex went on the attack using his good looks and charm now. \"I am sure we can work together on this problem.\"\n\n\"Hmmph, I am Sharrand'r of the Shadow Corps and you are my guest for the moment.\" She replied releasing her grip and dispelling the construct she had created.\n\n\"Shadow Corps... is that anything like the Green Lantern Corps?\" Lex asked his voice dripping with disdain.\n\n\"You've heard of them have you,\" Sharrand'r stated unhappily. \"We are not as well-known as them or our sister corps the Yellow Lanterns.\"\n\n\"They represent fear. What do you manifest sweet Sharrand'r?\" Lex asked oozing sensuality.\n\n\"Despair, dear sweet Lex,\" she growled as the floor beneath the supervillain changed to darkness and he slowly began to sink. I'll give him this he mastered his fear fast enough. \"As I suspected, you don't feel despair. You are no fun.\" She pouted and yet he continued to sink. \"I have no need for you however, what is inside of here I wonder?\"\n\n\"Back off bitch,\" Lex snarled.\n\n\"Ha, you show your true face Lex Luthor,\" she chuckled. \"Let's see what you are hiding.\"\n\nShe leveled her power ring at the door to the vault and fired off a bolt of shadow energy. The bolt reflected off the surface of the metal and burnt through one of the other walls leaving a smoking hole. Not to be deterred she fired off energy grapples to try and rip the door from its massive hinges but again the energy could not find a grip and failed. Enraged she took aim at Lex, but he just smiled as he slowly sank into the pool of darkness.\n\n\"Open it!\" She screamed.\n\n\"No. Now who is feeling despair?\" Lex laughed.\n\n\"Fah let you die I will,\" She said changing her tactics.\n\n\"You won't. Your threats are empty when I'm the only one that can open the safe.\" He said and I heard the mental ding in my head.\n\n\"We aren't alone sweet Lex,\" Sharrand'r purred. \"Something is watching us from the shadows. Come out.\" She ordered so I did. I crawled down the wall and the movement was enough for her to spot me. I slid along the floor towards Lex's exposed head. I didn't manifest until I was right next to him. I borrowed the shape of the little shadow demon I had summoned earlier. I made a production of it and stuck my clawed hands out first, made as if I was ripping the darkness apart before I thrust my body through the gap.\n\n\"Tada!!\" I said in the best deep and gravelly voice I could muster. I smiled revealing the brilliant razor-sharp teeth for added pizzazz.\n\n\"See Lex you only rate a paltry third-rate shadow demon,\" Sharrand'r laughed as I ran my hand over his bald head. \"What is your name?\"\n\n\"You can call me ZZZZZZed sweet cheeks,\" I replied as I stuck out a foot-long tongue and wiggled it for her. She in turn fired a blast from her ring which I easily dodge. \"Missed me.\"\n\n\"I forgot how annoying your kind can be,\" she snapped. \"Now... about you opening the vault.\"\n\n\"Not happening,\" Lex said continuing to defy her. I sat and placed a hand in the swirling dark vortex that held the supervillain trapped. I used my newfound Negamage skills and slowly tapped into it and changed its nature and destination. Instead of leading into an abyss it was a portal to the floor just below us. I'll give it to Lex. He never gave the game away.\n\n\"Can I eat his eyes at least?\" I asked playing up the annoying demon role. \"I could pop one out easy as... I can see by your expression that the answer is no.\"\n\n\"Go away, you are annoying me.\" She snapped.\n\n\"Fine...\" I snarled as I leapt to my feet, jumped into the air, and 'accidently' landed on Lex's head and pushed him the rest of the way through the portal. I prepared to dodge her attacks as she snapped and went after me.\n\nI dove into the nearest shadow and the real fun began. I taunted the hell out of her as I teleported from one spot to another. Since I was in the shadow dimension it cost me no stamina or mana to do so. I had her utterly enraged by the time Lex showed up sporting his custom power armor. The real battle commenced now. Sharrand'r and Lex went toe to toe and energy blasts were everywhere. As Lex triggered his boot jets to follow her, I opened a portal back to New Gotham and in a tick had the vault all to myself. I took the sweat I had gotten from Lex's scalp and used it to mimic his form perfectly. I placed my hand on the vault door and a scanner manifested and confirmed my biometrics were in fact those of Lex Luthor. With a hiss of massive pistons, the door slowly opened, and I stared at Lex's most prized possessions. Of course, he had a complete set of the different types of kryptonite. There was enough raw wealth he could run off and live like a king for the rest of his days. My quest marker locked onto a large plain wooden box. I touched it to claim it. It went straight to my inventory and the quest was ready for completion. All I had to do was deliver the box to Han. I cleaned out the vault and closed it. I reverted to my shadow demon form and returned to the real world.\n\nSharrand'r and Lex were still at it. I reversed the large portal returning the top of the building to New Gotham. I teleported to the rooftop where I had summoned Ted the shadow demon only to find the Dark Knight himself watching the battle between Lex and Sharrand'r.\n\n\"HMM,\" Batman harrumphed. \"Is this your doing?\" He asked me without even looking directly at me.\n\n\"Maybe.\" I admitted. \"Her name is Sharrand'r and she is a member of the Shadow Corps. Green Lantern may want to know she exists.\"\n\n\"Yeah. He might.\" Batman grumbled as I eyed one of his batarangs for a trophy. No guts no glory I thought as I shifted to shadow form and slid into his shadow. I felt his intense awareness focused all around him. If I wanted to pull this off, I needed to distract him. \n\n'Ted. You still around?' I sent silently.\n\n'Yeah boss, you never dismissed me. What do you want?' He replied.\n\n'Is there a fancy black car parked nearby?' I asked failing to hide the humor in my voice.\n\n'Yeah. Boy is she a beauty! You want me to mess with it?' Ted the shadow demon asked with an equally mischievous tone in his voice.\n\n'Do it!' I ordered. 'Then run like hell.'\n\n'Got it boss!' Ted gleefully replied. Soon the air was filled with the sound of claxons and an automated voice warning anyone nearby to desist in their activity. \n\n\"What the hell?!\" Batman cursed as his attention was focused on his precious car. He never felt me lift my prize from his utility belt. MINE! I joyfully thought as I teleported back to the alley near the coffee house. I reverted to human form and walked in so that I could deliver the first of the three quest items. I set the box down in front of Han and he opened it for all of us to see. A burnished gold statue that looked remarkably like the Maltese Falcon was within. \n\n\"What is that Han?\" Rick Deckard asked.\n\n\"The stuff that dreams are made of,\" Han replied doing his best Humphrey Bogart. \"It is a statue of pure Nth metal. The artist calls it the... wait for it... the Millennium Falcon.\" We all groaned. One down two to go. \"Hold on, I didn't want the statue I wanted what is inside of it.\" Han said his voice trembling as his eyes welled up with tears. He jabbed his thumb into the left eye of the statue. An opening appeared in the back. Han tipped the statue backward and a honey colored stone tumbled out. It was plain and uncut, but the Force aura around it was potent. \n\n\"Lightsaber crystal?\" I asked and he nodded as he tenderly picked it up and clutched it to his chest. I felt a rush of power and looked behind him. I saw Leia's force ghost standing behind him with her hand on his shoulder.\n\n\"I can almost feel her,\" Han said his voice cracking.\n\n\"She is here Han,\" I stated, and his head swung up.\n\n\"Tell him how much I love him,\" Leia whispered.\n\n\"I know.\" He said before I could tell him.\n\n\"God, I hate it when he does that.\" Leia said with a smile. She stood there a moment longer before fading away.\n\n\"She's gone.\" I said and Han wiped his eyes and thanked me. With one hand he clutched the crystal and with the other he pushed the statue in my direction. I took it and placed it in my inventory. I decided to take on Dr. Jones' quest next. I turned to leave and came face to face with Batman. If I was to judge his mood by the way his jaw was clenched, he wasn't happy with me.\n\n\"Hello detective,\" I greeted him, and his response was to extend his hand.\n\n\"Tracking chip,\" he grumbled as I handed over the batarang. He squeezed the center and I heard a click and he opened the hinged portion of it. He extracted the chip and closed it up again. \"Here. You've earned it. Your little friend didn't do any real damage, but he did run me ragged. Ha. What a great workout that was.\"\n\n\"Thanks.\" I replied. \n\nThe Dark Knight turned and left. He jumped into the batmobile and drove off. I checked my HUD and locked onto the next quest location just as an announcement hit it.\n\n'Trophy Earned: Bested the Bat. Trophy Earned: Falcon in Flight.'\n\nI left the coffee house and headed south towards what Indiana had described as a black-market collector. That was a particularly vague description. New Gotham was in fact three interconnected islands, the northern most island was Uptown, the middle which held the coffee house was Midtown, and the southern island where I was headed was Downtown. I activated my web shooters and was soon swinging from building to building. I reached one of the bridges that crossed the Finger River and entered the Diamond District. A prominent sign welcomed me to Old Gotham. My quest marker hung spinning in the air as if it had malfunctioned.\n\n\"What the hell?\" I cursed as I tried to figure it out. To the right and beyond the whirling icon was the bright blue W of Wayne Tower. To the left was the clock tower for Old Gotham. I got to higher ground by climbing to the top of office building I was clinging to. I sat on the corner facing the icon and looked down. The icon hung over a private park for the wealthy occupants of this district. \n\n\"You too eh?\" A sultry female voice purred behind me. \"I like the view.\" She continued as I turned my head and saw the infamous Catwoman, Selena Kyle. Damn how she filled out her costume.\n\n\"I like the view too.\" I replied and she smiled. \"Sit?\" I patted the spot next to me. I was genuinely surprised when she joined me. \"What can you tell me about the park?\"\n\n\"The Old Gotham Park? If you like ghost stories, rumors abound about it being haunted. The stories go back to the founding. I do love a good ghost story, don't you?\"\n\n\"Absolutely,\" I replied. A peregrine falcon that was nesting near the top of this building took flight. I guessed that it was hunting for food for its chicks. It winged its way directly towards the park and then suddenly banked to the right for no apparent reason. \"Did you see that?\"\n\n\"Yeah, that was weird.\" Catwoman agreed.\n\n\"I wonder.\" I mused. \"Could there be something hidden?\" I thought aloud and gestured. I invoked several spells until I attacked the invisibility curtain itself. I siphoned off its magic and bled it off as fireworks. \n\n\"Ooh! Ahh!\" Selena purred placing her hand on my leg. \"Pretty!! What the hell is that?!\"\n\n\"A wizard's tower I believe.\" I said. \"There is the source for all of your ghost stories.\"\n\n\"Ooh, think of all pretties in there!\" She growled her hand moving more daring now. \"I get all hot and bothered when I think about it. So, how do we get in?\" She asked. \"I don't see any obvious openings.\"\n\n\"We?\" I chuckled as she gave my erection a gentle squeeze. \"Fine. We teleport in of course. Have you ever done that before?\"\n\n\"No, but when we get out of there, I'll show you what I have done before.\" Selena promised. \n\n\"That is what they call incentive,\" I growled. \"Okay, let's go. Listen, we are going to be dealing with magic. If I say to do or don't do something listen to me for your own sake.\" \n\n\"Okay... I don't even know what to call you.\" She purred in my ear.\n\n\"Ghost believe it or not.\" I said. \"I know you by your reputation, Catwoman.\"\n\nWe got to our feet and I attempted to use far sight to pierce the exterior of the tower. I ran into a resisting force. It wasn't a ward, it was a living mind, the mind of the owner of that tower. I pushed to discover his identity.\n\n\"Fe... Felix...\" I gasped as I wrestled with him. \"His name is Felix... Fa... Fau... Faust! Ha! Felix Faust owns yonder tower. Ever hear of him?\"",
        "\"Nope... shit! Get down!\" She cursed as three of those flying police cars arrived and played their spotlights on the tower. \"Well fuck! We won't be getting in now.\"\n\n\"Wrong,\" I whispered in her ear. \"Felix's attention will be on the cops now. Still want to go?\" I asked and she pinched my ass cheek. \"Okay, hold on sweet thing.\" I said as I placed a hand on her shoulder as I pierced the veil inside of the tower. I aimed for as close to the top of the tower as I could. \"Here we go.\"\n\nWe arrived in a brightly lit hallway. Torches set into metal sconces illuminated everything. I used my HUD to track down my target, the Philosopher's Stone. I cloaked my presence in a mixture of magic and tech. Selena used what few shadows were available to hide in. We stalked down the hall until we reached the steps, steps that led up. I touched her shoulder and she stopped instantly. I performed the revelation spell and found the traps set onto the steps. I took out a piece of Vorpalite and using a silver tool and etched a single rune on its polished surface. It would allow me to store mystical energy into it. Who knew I might need it? I disarmed the traps and siphoned the raw magic into the crystal. The blue stone now glowed with a dull sapphire pulse. \n\nWe moved upwards and I kept the revelation spell maintained. This corridor was made of a darker stone and spiraled around the exterior of the tower at a shallow upward angle. By the time I removed all the traps leading to the main chamber the stone was blazing with power. Selena was crouching with her ass thrust in my direction. \n\n\"It is some kind of library,\" She whispered. \"He is in there. I can smell him.\"\n\n\"This has been too easy,\" I growled. \"It is a trap.\"\n\n\"Hey, Ghost... I trust you.\" Selena said her voice low and serious. She crept into the main chamber while I went full stealth mode. I had the plasma caster online and brought up the tactical readout on my mask. I wiggled my fingers in anticipation of a mage duel. Selena went off to the right side sticking to the wall. I kept a watch on her but stayed out of the range of most area effect spells. Faust struck quickly and with a venomous laugh.\n\n\"How dare you,\" he growled his voice coming from all directions. \"A woman invades my sanctum!\"\n\nSelena was sealed away in a diamond stasis spell, impressive. Felix gloated over the pretty bauble he had captured and put on display. She gave him the finger and sat in her expensive prison. I felt his spells looking for me and I suddenly realized just how much he relied upon it. He probably didn't lift a finger if he could conjure it to him.\n\n\"You took the bait,\" I whispered using Kaia-Jutsu sending echoes everywhere.\n\n\"So, you didn't come alone my pet,\" Faust growled angrily. \"Where are you?\" He asked and I passively followed the voices back to their source. There you are!\n\n\"Everywhere!\" I laughed as I locked onto Faust using the plasma caster. His reaction was a knee jerk response. The pulse of magical energy shot out from his body and I put one of his bookcases between me and the wave form. \"Reveal yourself!\" He snapped.\n\n\"Um... No.\" I said and Selena laughed as she lay back and kicked her feet in the air. \"I call upon the demon Ted, to fight my foe and slay him dead.\" I incanted the summoning spell. A portal to the shadow plane opened and not one but dozens of the short squat demons poured through the opening.\n\n\"We are here boss!\" One of the demons called out. \n\nThe perfect distraction came to my rescue. I fought the urge to laugh and sent out a locator spell to find the Philosopher's Stone. I didn't find the stone but what I did find was an incredibly powerful source of magic. It was Faust's version of Lex's vault. Did all bad guys think the same? Faust was blasting the little demons to bits and sending them back to their home plane of existence. I thought about using the Crimson Bands spell, but would it work? Was Cytorrak even here? Instead I went old school. I drew Death Kiss from its sheath, and she was eager to feed. \n\nI left my hiding spot to find the walls teaming with shadow demons and a nearly overwhelmed Faust. If I read his expression right, he was about to cut loose with an area effect spell. I dove back and two sounds quickly followed one another. The first was a loud whoosh or thoom, and the second was the cry of dozens of demons being utterly wrecked. The portal snapped shut and a panting Faust was left for me to tidy up. I had my first look at Faust. He was thin of build, but it was more than that his limbs, fingers, and entire being had a long thin theme going on. He had the classic bad guy look with his black hair, goatee, and expressive eyebrows. His blue robes hung loose on his emaciated frame giving him a gaunt appearance. He reminded me of a Shakespearean actor playing an age worn sorcerer. \n\n\"Still there Faust?\" I called out.\n\n\"No thanks to you,\" he snapped. \"Where are you?\"\n\n\"Here,\" I said and revealed myself.\n\n\"Ah ha,\" he declared cheerily until his eyes settled on the moaning rune sword. \"What in the hell is that?\" He asked his lower lip trembling. That answered that question, no rune swords in this universe.\n\n\"Come here and find out,\" I said, and the color drained from his face.\n\n\"No. Demons Three!! To me!!\" He howled in fear. Three ten-foot-tall demons manifested and looked from him to me and Death Kiss.\n\n\"What in the nine hells is that?\" The tallest of the demon brothers asked his voice faltering.\n\n\"I have no idea,\" the middle brother added which just made Faust's mood all the worse.\n\n\"We are the Demon's Three,\" the youngest brother declared. \"Let's get him and look over the trinket later.\"\n\n\"Right!!\" The other two agreed and the battle was joined.\n\nAs we closed ranks the plasma caster spoke nearly decapitating Faust with its lethal blast. While he healed himself, I dropped a smoke bomb and waited for it to envelope the area. The cloud was technological in nature and beguiled the supernatural beings. While they cursed about not being able to see I used their voices to close in on them. Death Kiss met demon flesh and she drank deep. \n\n\"My soul!!\" The demon struck cried out. His brothers went on the offensive and I was forced to pull Death Kiss from the wound.\n\n\"More!\" She moaned. \"I like demon!\" She purred delivering utter moral devastation. When the cloud of smoke cleared the triplets had fled the battle.\n\n\"Fuck this,\" the youngest called out already halfway to hell. \"You are on your own Faust.\"\n\n\"Cowards!!\" The sorcerer screamed after them. His face burnt but healing from my attack. I on the other hand was fresh and ready for anything he threw at me. \"I yield! What do you want?\"\n\n\"The Philosopher's Stone plus a little something for my female companion.\" I decreed.\n\n\"The stone... I just acquired it. If it will get you out of here... fine.\" Faust grumbled as the healing spell slowly worked to restore him. I kept him in front of me as he led the way to his mystical vault. I brushed against the diamond prison and unceremoniously drained the magic from it freeing Selena. She snarled at Faust, but I urged her to let him repay her for his bad behavior. He walked us right into one of his many traps and I missed it. I was so damn sure he was beaten that I dropped my guard. The intricate spell circle flared to life under our feet. \n\n\"What the hell is this?\" Selena cursed as we looked down at the scintillating golden design.\n\n\"It is a spell circle. I've never seen anything quite... my voice... aw fuck.\" I said as I looked down at my new body. \"A little clich\u00e9 isn't it?\" I asked when I conjured a mirror. \"Marilyn Monroe... really?!\"\n\n\"I had a crush on her a few years back.\" Faust explained.\n\n\"A few years... do you even know what year this is?\" I asked still getting used to the new voice.\n\nI sat down and examined the circle more closely while Faust ranted, raved, and gloated. While I felt my mana diminished, drained away by the circle's enchantment, I still had full access to my other abilities. I folded time slowly to find the heart rune attached to the circle. Faust was still ranting when I isolated the rune and waited for him to do something stupid. I'll give him this he was patient. He conjured up a comfy chair, sat down and waited until my mana bar zeroed out. Faust didn't move until a half hour after that.\n\n\"Just in case,\" he muttered. \"Now that you are properly pacified, we'll let the fun begin.\"\n\n\"What the hell does that mean?\" Selena growled and he just smiled. \"Nope, not going to happen.\"\n\n\"They all say that at the beginning,\" he replied in a creepy tone of voice.\n\nTime to go, I thought. Faust rose from his throne shaped chair and rubbed his hands together. He turned and left. He wasn't gone when Selena spun on me.\n\n\"Get me the fuck out of here... now!\" She snapped nearly hysterical.\n\n\"I can't do anything,\" I said with a wink. \"All of my magic has been drained by the circle.\"\n\n\"Are you kidding me?!\" She screamed playing for our audience. \"Why the hell did I follow you in here?\" She continued as I took out the glowing blue stone. I quickly wrapped both hands around it to conceal its radiance and folded time to the moment the first rune was placed upon the floor. I took power from the stone and carefully unmade the heart rune. The circle collapsed instantly its magic flowing into the stone restoring it. My mana began to regenerate and with a gesture I cast an illusion of the magic circle. Selena and I slipped away while our illusionary selves sat and bitched. I wanted inside his vault and then after that there would be hell to pay.\n\nIt was easy to find the vault now that he thought us helpless. Faust was busy planning his little three-way soiree and I hoped to have enough time to rob him blind and then punish him. The safe that Faust had constructed was the epitome of high magic. It existed in its own dimension just outside of ours. It required me folding space and time to gain access. While Selena watched my back, I bent my full attention to the task at hand and yet in the back of my mind one thought. How the hell did he create something like this? The circle was intricate but nowhere this level of sophistication. Nothing he had done smacked of this power level and yet here it was. Faust was hiding something, and I wanted to find out what it was. The enchantments on the vault proved slippery but nothing a little time and patience couldn't overcome. I brought the safe into our dimension and levitated it to the floor. The rune marked treasury was a six-foot cube on all sides. The second layer of security proved equally daunting. I was about to unlock it when it hit me.\n\n\"Son of a bitch!\" I cursed and stopped what I was doing. I brought up my defenses and vanished from sight.\n\n\"Damn it!\" Faust growled from his hiding spot.\n\n\"Well played,\" I snapped as I sought him out. \"You stole the vault. You couldn't open it, but you had barely enough talent to shift it to your tower. Clever.\"\n\n\"I'm no mere hack. I can summon the Demons Three!\" He shouted.\n\n\"Magic always comes with a price, how much did that little trick cost you Faust?\" I asked and I felt his mood shift. Despair oozed out of him. That kind of despair is like a flame for the moth, a moth named Sharrand'r of the Shadow Corps. The energy beam cut through the roof of the tower sending stony shrapnel in all directions. Faust got the worst of it. He was cut in a dozen places and one fist sized chunk struck him in the head. Faust dropped like a felled tree. Sharrand'r hovered into sight but she wasn't alone. Oh, the two females didn't know one another but they both entered the chamber at the same time. The Shadow Lantern floated down and remained there in the dusty atmosphere caused by her violent entrance. The other, well she manifested in a blast of blue-violet hell fire. The newcomer was tall, slender, and if it weren't for her obvious demonic heritage, I would have been less fearful of the outcome of this encounter.\n\n\"Wake up Faust you filthy thief!\" The demon growled as she gestured, and his injuries vanished. The sorcerer woke and I could tell he wished he hadn't. The demon walked in a circle around Faust facing him the entire time. I spied the bright white line that ran from her neck down to her half-exposed ass cheeks. Her crimson skin made her spine stand out even more. She had pronounced horns that looked like they were fashioned of obsidian. They stood out against her fiery locks. \"You, mortal slut, what are you doing here?\" \n\n\"I was hoping to find something of value to steal.\" Selena said frozen in panic by the sudden appearance of a demon and the floating woman.\n\n\"I like your honesty and your motivations. Feel free to search this area and take whatever you fancy.\" The demon said and Faust flinched but didn't argue.\n\n\"What are you going to do with him?\" Sharrand'r asked the demon. \"I want his despair.\"\n\n\"When his sanity is broken and all that remains of him is despair you may harvest it. I may be a devil, but I am not a greedy one.\" She explained. A devil?! \"I am Glasya, daughter of my lord and father Asmodeus. He stole from me!\"\n\nI looked at the safe and recognized the diabolical characters protecting it. No time like the present. I examined them closely and as I was taught went slow and identified the key runes. As the devil and the Tamaranean haggled I disarmed the web of magic around it. A soft creak indicated I had successfully accomplished my goal. The conversation ended and I glanced up. Both women were looking at the safe. Lucky for me the door to the safe was facing away from them. I tugged the door open and it let out a long drawn out squeak. Shit! Can't be helped now. I grabbed everything in the safe and teleported into the far corner. Sharrand'r used her ring and lifted the safe up and spun it around. When the open door came into view Glasya screamed in a rage.\n\n\"Thief!!\" She shrieked as Faust laughed.\n\n\"Marilyn did it,\" he chuckled half mad at this point.\n\n\"Marilyn...?\" The devil hissed with lethal malice in her voice. \"What is her last name?\"\n\n\"Monroe,\" Faust said and to the devil's astonishment she found that he wasn't lying. \n\n\"She's dead Faust! She is burning in hell! Like you, she sold her soul.\" Glasya raged and yet his mind was clear. Somehow Marilyn Monroe had robbed the safe. \"Our thief is invisible.\"\n\n\"I will find her,\" Sharrand'r declared as she raised her hand with her power ring. A shadowy beam was projected as she passed it all around. I timed my teleportation as close as I could. \"She took and went.\"\n\n\"Leaving her companion behind, how unfortunate for you my dear,\" Glasya threatened but Selena had grabbed her treasure and fled. \"Damn!\" The devil laughed. \"Greedy enough but not stupid. I can't help but like her.\"\n\nIt was time to get the hell out of Dodge. I had gotten the contents of the safe, but I checked my HUD just to make sure. The quest was unfinished, and I bit down the curse fighting to get out. \n\n'Remove the Philosopher's Stone from false bottom in the safe.'\n\nFuck! I felt the rage and so did Glasya. Devils apparently were gifted empaths. She picked up on my anger and laughed. \n\n\"She is a he, and he is still here!\" The devil roared in triumph. I had no choice. I pulled Death Kiss from her sheath and she purred in anticipation. \"Come out come out wherever you are.\"\n\nI tossed one of the standard smoke grenades and teleported inside its confines to make a grand entrance. Glasya and Sharrand'r greeted me with drawn weapons. In the Tamaranean's case it was her power ring and the devil had a smoking barbed whip in her left hand. Glasya's curiosity outweighed her blood lust.\n\n\"I do not know those runes,\" the she-devil purred.\n\n\"Allow me,\" Sharrand'r stated as she played the light of her ring over the flat edge of my blade.\n\n\"Unable to identify. Runes of unknown origin.\" Her ring said sounding almost annoyed.\n\n\"Impossible!\" The Shadow Lantern cried out until the devil placed a hand on her arm. \n\n\"Not impossible... if he isn't from our universe.\" Glasya declared and then continued. \"There are many worlds and he must be from one of those.\"\n\n\"Very astute,\" I said. \"I am just visiting since the window between our worlds is limited.\"\n\n\"How are we going to settle this little dispute?\" Sharrand'r asked.\n\n\"First, before he slips away,\" Glasya snapped as she gestured at Faust. Corpse like hands rose from the floor, gripped him tightly, and drug him screaming downward. \"I can focus on you and your weapon now. Why does it moan like that?\"\n\n\"It feeds off the souls of my enemies. Ask the Demon's Three if you doubt me.\" I said while Death Kiss yearned and shifted in my grasp.\n\n\"I believe him,\" the Tamaranean gasped uneasily.\n\n\"As do I,\" Glasya replied equally unnerved. \"What shall we do?\"\n\n\"I propose a non-violent solution to our disagreement.\" I said and waited for them to puzzle out my offer. Of course, the way I eyed them up and down and the devil's empathy it wasn't long before she purred.\n\n\"He wants to procreate with us,\" Glasya moaned.\n\n\"I don't think so, I am no slut!!\" Sharrand'r snapped.\n\n\"I am. I prefer fucking to fighting a weapon whose enchantment is a danger to me. Leave or stay Tamaranean, I will listen to his offer.\"\n\n\"Fah, I... fine... what is your offer?\" Sharrand'r asked reluctantly.\n\n\"I fuck the two of you senseless and I take my prize and leave. If I can't make you climax say three times each then I will peacefully relinquish what I have taken from the safe.\" I stated watching their reactions. If I were to judge their individual reactions Glasya seemed open to my offer. Sharrand'r wasn't won over so quickly. She had that 'I don't know' expression. \"Two cocks?\" I added and the Tamaranean's mouth fell open.\n\n\"Bullshit!\" Sharrand'r snapped and I called up the Double Dragon and tugged down my armor. \"Whoa!!\"\n\n\"Ha, I accept your challenge!\" Glasya announced as she tugged off her armor and setting her weapon off to the side.\n\n\"I... shit... I can't pass this up.\" The Shadow Lantern admitted as she used her ring to absorb her costume.\n\n\"Okay, how do you want to...\" I asked as I dispelled my armor. They dropped down to their knees and crawled over. \"Okay... show me what you got.\"\n\n\"Challenge accepted,\" Glasya cheerfully purred. \"Ahhhh mmmmm!!\" She snared half the length of the top erection easily.\n\n\"Watch this!!\" Sharrand'r moaned as she pushed her lips against the lower cock and her head moved slowly but unerringly forward until her lips touched the base.\n\n\"Oh damn,\" I whimpered as they competed. Selena's head poked out of the opening in the ceiling. She watched the competition with her long mane of dark hair hanging free. She tugged her goggles from her eyes and watched.\n\n'What the fuck?' She mouthed silently and frowned. \"Harrumph!! Someone is stealing my cock milk!!\" She said as she dropped down lightly and peeled off her body suit. Selena watched the other two suck me off. \"I thought we had something special. I thought you wanted to...\" I kissed her into silence, and she pressed close in response. \n\n\"On your back mortal,\" Glasya ordered. \"It is time to mount you.\"\n\n\"You heard her,\" Sharrand'r moaned. \"I need it... give it to me.\"\n\n\"You heard them, on your back,\" Selena urged.\n\n\"As you wish,\" I surrendered. \"Glasya on top, and whoever wants on the bottom one, and the third can sit on my face if she wishes.\"\n\n\"Me on top, why?\" The she-devil asked her ruby colored eyes smoldering.\n\n\"Simple. I want to watch your faces when you ride me.\" I admitted. \"I like to see if I am doing a good job or not.\"\n\n\"Pride. I love pride.\" She agreed. \"Watch me as I let your cock penetrate me.\" She moaned as she placed a finger on either labium and slowly pulled her pussy lips apart. She was soaked. Glasya took me in her free hand, aimed, and bent her knees. \"UNNNN!! Thick!\" I let out a moan at how damn tight she was as the Tamaranean repeated what Glasya had done. ",
        "\"So, this is what Earth cock feels like,\" Sharrand'r squealed. \"I like Earth cock very much!\" She said rather cheerfully and out of character for a harvester of despair.\n\n\"Hush,\" Glasya urged. \"Just ride him already.\" She said as an overwhelming sense of wrongness caught my attention. \"God damn he is hitting deep. I thought... never mind... Selena shouldn't you be... Selena?\"\n\n\"Right here,\" Selena said as she held up the Philosopher's Stone and winked at me just before mounting my face. \"Eat me out!!\" I did. I used the serpent tongue technique and slid deep into her soaked sex. \"Holy... how are you doing that?! No, don't stop... just... Oh Yeah!! Just like that!!\"\n\nSharrand'r was pounding her hips up and down working up one hell of a head of steam. All the while joyously declaring the love of Earth cock. Then things hit a small snag when Selena flipped around to face Glasya. The two began kissing as they ground against my erection and face respectively. That is when the second clue was dropped in my lap.\n\n\"Careful... your wig is slipping.\" Selena whimpered as I split my tongue and attacked both openings. \"UNNNN... two... his tongue just split in two... he is tonguing my ass now!\"\n\n\"Fuck the wig... I want him to tongue my backside too!\" The Tamaranean jealously whimpered. \"I'm going to...\" She shrieked as she climaxed and at the same time a bright green flash lit up the room. Did all of them have optic blasts like... no way... Selena got off me and I got a look at Sharrand'r without her blonde wig. I whimpered as I saw the long cascading mane of red hair.\n\n\"Starfire!\" I cried out as the Teen Titan spun to face me.\n\n\"Damn it,\" Glasya snapped as the illusion disguising her shattered. The busty pale skinned titan continued to ride me slowly. \n\n\"Raven!\" I moaned as she squeezed her pussy muscles tighter still.\n\n\"He knows us friend Raven,\" Starfire cried out smiling. \"Will he still make us climax the allotted times?\"\n\n\"Oh yeah he will,\" Raven giggled. \"Look at his expression. He wants to wreck us.\"\n\n\"Wrecking with cock is good?\" Starfire asked. \"Ooh, he just got harder and thicker.\"\n\n\"There's your answer,\" Raven moaned as I tweaked the dimensions of my erections for them. Selena took her turn with the lower cock and 'friend' Starfire shoved me down and planted her pussy a few inches from my face. \n\n\"Let me see you... ooh... slowly... my ass has never been... mmmm I like the feel of that.\" She moaned. \"I like it when you do that. By X'Hal his tongue is getting thicker inside of me!\"\n\n\"I can't wait,\" Raven added as she slammed her hips down now. \"Don't fret none of us is what you'd call fragile. Are we?\"\n\nI didn't treat them like porcelain dolls, more like crash test dummies. I pushed their limits and a bond was formed from it. In the end we fucked until damn near midnight. I'll give Faust this he had one hell of a 'harem' entertainment room. It included I huge bathroom. The Japanese style Onsen or hot spring fed bath was a nice spot to soak and chat. \n\n\"Why the disguises?\" I asked once we had settled in.\n\n\"We were attempting to infiltrate an extradimensional gang of demons trafficking in humans.\" Raven explained. \"We got wind of it from a friend of mine, Constantine. He drops by when things get too big for him alone to handle. This was one of those times.\"\n\n\"So, what is Lex Luthor's part in this?\" I asked and Starfire's jaw fell open.\n\n\"How did you... Friend Two Cocks you are amazing!\"\n\n\"Ghost, you can call me Ghost,\" I said but I think she preferred her own nickname for me. \"I was hired to liberate a treasure from Lex's vault.\"\n\n\"Did you? Did you get in?\" Raven asked knowing just how intelligent and paranoid Luthor was.\n\n\"Yep. I gave it to its rightful owner.\" I replied. \"Was Lex connected to the demons?\"\n\n\"No, that proved to be a false rumor.\" Starfire pouted.\n\n\"You had the courage to face him though, that isn't something that many would do.\" I said and she smiled. \"Where is Faust? Not in Hell.\"\n\n\"Well, yes... I used my father's power and sent him to where he belongs. You have no idea the sins hanging on his soul.\" Raven stammered. \"I'll live with it.\"\n\n\"He sold his soul, it was inevitable.\" I said and watched a sense of relief radiate from her.\n\n\"He is right Friend Raven,\" Starfire agreed with me. \"His soul was no longer his own.\"\n\n\"Am I the only one whose ass stings?\" Selena asked giggling. \"I know my butt is tingling.\"\n\n\"I too have a tingly butt Friend Selena!!\" Starfire declared as she sent a wave outward as she rushed to her feet and thrust her bare ass towards the middle of pool so that we could all see her sphincter. \"See!!\" She gleefully grabbed her cheeks and pulled them apart.\n\n\"Cut it out Starfire,\" Raven snapped clearly embarrassed. \"No one wants to see that.\"\n\n\"I do.\" I said and Raven glared at me for encouraging Starfire.\n\n\"Friend Two Cocks loves my butt.\" The Tamaranean laughed as she backed up and sat in my lap. \"Someone is excited.\"\n\n\"Jeez, put her on a leash,\" Selena joked and instantly regretted it.\n\n\"A leash! Ooh, I have seen Nightwing's naughty books about such sensual rituals. Are you going to tie me up now?\" Starfire asked as she wiggled against me.\n\n\"Aw hell,\" I whimpered as my body reacted to hers despite myself. \"Be careful or you are going to... UNNNN... too late.\"\n\n\"Eep!\" Starfire gasped and fell silent as both erections penetrated her for the fifth... sixth... hell I lost count. \"Naughty Starfire.\"\n\n\"How the hell can he get it up again?\" Selena asked as they stared at us.\n\n\"I do not know,\" Raven whimpered as her empathy picked up on our pleasure. \"I will punish you when we get back.\" She threatened Starfire but she seemed too far gone to care.\n\n\"Oh, here is your stone,\" Selena stated as she handed me the Philosopher's Stone. I showed her the contents I had taken from Faust's safe. She picked a few small items as her reward. \"Whose vault was that really?\"\n\n\"A villain who goes by the name of Brother Blood.\" Raven replied as Starfire began rocking her hips slowly. \"Take your time sweetie.\"\n\n\"I am.\" Starfire moaned. \"I have a gift for Friend Two Cocks.\" She added her voice dreamy and soft. \"Here, I found this in Lex's office.\" She said as she handed me a snow globe.\n\n\"How did you get into his office?\" I asked and she squeezed me into silence. \"Never mind.\" I shook the globe and looked as the faux snow fell over the cityscape within. It looked like New York City specifically the harbor. I saw the icebergs, lots of tiny figures coming out of the water, and one huge creature that towered over the warehouses. Starfire's howl as she climaxed made me drop the globe and hold her close.\n\n\"That was intense Friend Two Cocks, shall I get up?\" She asked as I slipped my arms around her waist and slow fucked her in an almost casual manner. \"Foreshadowing. Tell me about the other Titans.\"\n\n\"Well, there is Nightwing, she is our leader most of the time. She trained under the Batman for many years. Cyborg, she was in a terrible accident. Her father saved her life by using alien technology. Last is Friend Beast Girl, she can change her shape into animals and hybrids. She is green.\"\n\n\"Hybrids?\" I asked.\n\n\"She gets that from her Osirian father,\" Raven explained as I absently played with Starfire's tits. \"Beast Girl is half Osirian and so she can blend animal and human traits.\"\n\n\"So, she could be half dog and half girl.\" I moaned as I felt my orgasm getting close.\n\n\"Friend Beast Girl loves doggy style!\" Starfire moaned. \"He is getting bigger! I love it too!\" She added. \"I think he's going to...\" She whimpered as I cried out as my loads splashed her insides. Starfire's body bucked above me, and I held on tight.\n\n\"Damn.\" Selena purred.\n\n\"We need to go Starfire, or we won't ever return to the Titans.\" Raven warned.\n\n\"Can I get a goodbye kiss,\" I asked as Starfire and I disentangled ourselves. Selena shook her head, but Raven dismissed it. She stood and I savored one last look at her luscious body. I gently cupped her cheek and to my surprise she leaned into my touch. I kissed her softly at first. She kissed me back and after that I slid my hand up allowing my fingers to slide into her ebony locks. I made a fist and the kiss deepened. I waited for her to break the kiss, which she did eventually.\n\n\"You are dangerous.\" Raven gasped. \"It is time to go.\"\n\nRaven took a step back, smiled, and then a bird shaped aura enveloped her and the others to leave me standing there alone in the Onsen. Epic level exit I thought as I bent and searched for the fallen snow globe. I couldn't find it. Perhaps it had a time limit for me to examine it or it really was simply foreshadowing. I sat back down and looked at everything I had managed to gather over the last two missions. Most were objects for collections due to the limited time of the event. I did like the full set of kryptonite, that would make a nice display piece. I looked at the Philosopher's Stone and its abilities. It could convert low end materials to rarer at a cost. It would be a great addition to my crafting table, but I had to hand it over to Jones to complete the quest. Maybe I could find something akin to it later.\n\nAfter a nice long soak and savoring the pleasant memories it was time to see if Selena had left anything of value. It was clear that Catwoman was a practiced thief. There was little of value as far as rare metals or gems. There were books aplenty but most of them were of little value. I was feeling tired and saw that my stamina bar was low. Sleep was the only way of recharging it at this point. The master bedroom had cleaned and changed the sheets by itself. I slipped under the covers and dropped off to sleep quickly. I woke after the allotted time had passed. At first light I woke alone with a yellow sticky note stuck to my chest. It read...\n\n'If you play your cards right, we'll see each other again.' It was signed friend Starfire.\n\nI took a nice long shower and as I was drying off, I smelled freshly brewed coffee. I wrapped my towel around my waist and slipped into what passed for a kitchenette. I half expected to find Raven or Starfire or even Selena but instead there was a young woman with green skin at the sink facing away from me. Her verdant pigmentation didn't stop at her flesh, as lovely as that was, no, even the long mane of hair was a deep emerald green. She sniffed the air and wiggled her butt.\n\n\"You are awake. There is coffee!\" She offered. \"They call me Beast Girl,\" She purred as I moved to stand behind her.\n\n\"Quite nice of you to make me coffee,\" I said, and she pushed her ass against me. \"May I?\" I asked as I slid my arms around her waist. She whimpered and I took that as a yes. \n\n\"I heard the four of you had a good time last night.\" She pouted. I brought my hands back until they settled on her hips. \"Mmm?\" I slowly raised my hands letting them slide along her flesh allowing them to slip beneath the apron. \"MMM!!\" She began trembling as my fingers were mere inches from cupping her impressive breasts.\n\n\"Beast Girl?\" A voice said as the necklace she was wearing projected a hologram over the sink. The cute female cyborg, half human half machine, glared at the green skinned shapeshifter. \"Bad girl... naughty girl... where are you?\" Cyborg asked.\n\n\"The sorcerer's tower,\" Beast Girl whimpered as I brazenly cupped her huge tits. The apron hid the action, but it was clear something as going on.\n\n\"Why are you there?\" Cyborg asked but continued before Beast Girl could reply. \"Never mind, you are in heat again, aren't you?\"\n\n\"Maybe,\" Beast Girl replied as my erection dislodged the towel which fell to the floor. Nothing stood between her bare ass and my weapon of choice. \"Eep!\" She yelped as the shaft settled between her ass cheeks and I began kneading and teasing her breasts. \"Hey mister, are you into F...\" and that's when she dropped the F Bomb, Furry. It related to her main power of being able to transform into animals and human animal hybrids akin to the Egyptian pantheon. Raven hinted that she might be related to those ancient beings.\n\n\"Are you in danger?!\" Cyborg asked and then saw Beast Girl's expression. \"You are needed here...\" She declared as Beast Girl's rocking hips teased us both. \"We believe Trigon might be trying to penetrate the earthly realm.\" Cyborg said her voice softening becoming sensuous. \"Don't you understand how hard this situation is? We could find ourselves up against the wall and in 'deep' trouble.\" Precum was oozing out now lubricating her cheeks and making things dangerously close to it sliding into her by 'accident'. \"I wish you could see your face right now... hold on... you can.\" The hologram became a video mirror. I could see how flushed Beast Girl's cheeks were and the dreamy look in her eyes. A new voice came over the comm.\n\n\"Beast Girl... what the hell?!\" The voice accused. \"Get back here right the fuck now! We are looking at a massive breach! Don't you get it, we are looking at getting our asses handed to us.\" \n\n\"Nightwing... just twenty minutes... for the love of...\" Beast Girl begged as I conjured the Double Dragon. \"No shit... you've got two?! You are breaking up... Beast Girl... IRK!! Aw gods... my ass... my poor pussy.\"\n\nI had pulled out and slid into her easily. My HUD dinged but I ignored it. Her instinct took over and she shifted. Her demeanor and voice changed drastically. This new shape was the perfect aspect of the goddess Anubis. My HUD chimed again, and I was sure it had something to do with doggy style.\n\n\"Fuck me Ghost man,\" the avatar of Anubis once Beast Girl demanded.\n\n\"Bend over bitch,\" I said unable to resist the joke. She walked her feet backward until her spine was parallel with the floor. I moved my hands from her tits to her ass cheeks. \"Crash test time,\" I chuckled as I slapped her on the ass and began pounding her. \"Giddy up!\" She let out a strange sound that seemed to be a blend of shock and pleasure. It was her way of saying 'how dare you' when she had lost the power of speech. The hologram vanished and I focused on Beast Girl. \"Still with me?\"\n\n\"UNNN HUHHH!! Harder!\" She demanded as I slammed into her. I adored the way her full round ass rippled when we collided. \n\n\"Ocean motion causing a commotion.\" I sang softly as I picked up speed. \"How's that?\" I asked as I slid my fingers into her hair and pulled her hair back for a kiss. Our tongues dueled as the sound of jet engines could be heard faintly at first but getting louder by the second. \"What the hell?\"\n\n\"Cyborg, greedy bitch... I am getting close... don't stop!\" She said her voice cracking as she pleaded to climax. \"Make me cum!\"\n\n\"Can I shoot inside of you?\" I asked and she squeezed her internal muscles in answer. \"UNNN!! I'll take that as a yes. So damn close... you are trembling... beg me.\"\n\n\"PLEASE!! Make me...\" she howled as I pulled back and slammed into her. My loads pulsed into her and she came with me. I held her close and stroked her throat gently. \n\n\"Good girl... you were amazing...\" I said as I heard the jets cutting off and metal struck stone. \"We have company. I better skedaddle.\" I whispered in her ear as I pulled out. \"I have a delivery to make.\"\n\n\"You just made a delivery silly man.\" Beast Girl purred. \"Call me.\" She said handing me a small jeweled ankh. Ding! My HUD chimed a third time.\n\nI teleported up to the roof just before Cyborg made an appearance. I could hear her cry of frustration from here. Best to cultivate passion with absence I thought. I sought out the shadows near the coffeehouse and slipped away. It wasn't until a cool breeze hit my nether bits that I realized I was still naked. Beast Girl or Anubis had really knocked my socks off. I used the cleaning cantrip and washed up instantly. I donned street clothes and walked in for my first cup of coffee. Apparently my first mug was forgotten and mislaid back at the tower. These things happen.\n\n\"Somebody got lucky,\" Doctor Jones said as he walked up looking disheveled.\n\n\"You or me?\" I asked and he laughed.\n\n\"Both I guess,\" he replied. \"You got that I just got my brains F'd out by a goddess.\"\n\n\"You are a lot closer than you know Doctor.\" I said when the man in front of me wearing a bright red bow tie giggled and bit back whatever he was about to say as he reached up and adjusted said tie. \"I reclaimed your museum piece.\"\n\n\"Excellent work, we'll make a tomb raider out of you in no time,\" Jones stated with a brilliant smile.\n\n\"I think of myself more of as an ARK,\" I replied.\n\n\"What is an ARK?\" Jones asked as we moved up one in the line.\n\n\"It stands for... Archaeologist Researching Knowledge, ARK.\" I explained.\n\n\"Ooh good one young man,\" he laughed. \n\nA few minutes later the two of us sat at another table and sipped out drinks. Jones drank his coffee black. I chose a sweeter concoction with chocolate and whipped cream. My HUD chimed with the quest complete music. I pulled it down and read my messages. Trophies earned Beast Master, doing her Doggy Style, and Enter the Tomb Raider. I wondered if Lara might make an appearance at this point. I won't lie, I had a crush on her when I was younger. The Teen Titans alone were running me ragged in a great way. I opened the quest for Doctor Jones and instead of handing over the Philosopher's Stone he wanted something called the Mysterium Obfuscatus. When I cleaned out the safe, I just smashed and grabbed. I sorted my inventory by date and at the top was the Ankh of Anubis. About midway down screen was an uncut jewel titled the Mysterium Obfuscatus. It had powers but they were question marked out. How had I missed it earlier?\n\n\"Here.\" I said and handed over the gem.\n\n\"Glorious,\" He whispered clearly in awe of the stone. \"This will be at the heart of the Hightower Collection. Nathanial Hightower was a generous soul and a great archaeologist in his own right.\"\n\n\"You admire him,\" I said, and his face became crestfallen. \"I'm sorry.\"\n\n\"No... no, he was one of my mentors. He inspired me to be a better person.\" Jones said with a bitter smile. \"This has been one of my pet projects since he passed.\" He needed little prompting to talk about the great man himself. I split my attention between Jones and the other folks in the coffeehouse. One of the servers slipped out the front door and returned five minutes later with two Styrofoam containers. She brought those over and set them on our table.\n\n\"Professor Jones, I'm sorry to interrupt. Are you hungry? If so, I went down the block to the deli and got you both a nice English breakfast.\" She stammered, faltered, but eventually got the words out as her cheeks turned deep crimson.\n\n\"Thank you, that was very sweet of you,\" Jones replied as he reached for his wallet. \"How much do I... Oh, thank you!\"\n\n\"Yes, thank you...\" I said fishing for her name.\n\n\"Ayanna, Ayanna Dubois,\" she replied with a gentle smile. \"Oh, the police are here.\"\n\nI looked outside and sure enough one of those flying cop cars was settling to the earth in a column of grey smoke and flashing lights. The gull wing door opened, and Rick Deckard climbed out. He gestured to the driver in a back and forth for about a minute. Deckard strode in but instead of heading to our table he placed an order and got that before joining us.\n\n\"Jones.\" He stated in a very official tone in his voice.\n\n\"Deckard,\" Doctor Jones replied.\n\n\"I thought you'd like to know,\" Deckard began as he turned to face me. \"Sorry if this is a little old school,\" he apologized as he reached into his jacket and retrieved a folded piece of paper. \"I printed this out for you. It is the notice that bounty hunters like you are being given by official government sources.\" He explained as I took the paper and unfolded it. If I was expecting a clear image of the replicant I would be hunting I was sadly mistaken. Instead I had a statistic sheet that showed the range of shapes she could assume. I read the entire report and was confused at the corporate logo stamped above her Nexus 8 rating."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "anal",
        "double penetration",
        "fffm",
        "ffm",
        "group",
        "harem",
        "oral",
        "group sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-11"
}