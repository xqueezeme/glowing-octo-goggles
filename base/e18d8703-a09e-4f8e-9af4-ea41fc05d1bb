{
    "title": "Monsters in the Mountains Ch. 04",
    "pages": [
        "This is the fourth chapter in this series. Minimal effort has been made to explain backstory, so it is recommended that chapters one through three be read first.\n\n*****\n\nBy sunset on the fifth of July, the first floor walls were mostly in place of the cabin Jordan was building on the land he had inherited. High stone exterior walls were built, but the cement mortar was still wet. Jordan needed to put in flooring, which meant that he would finally have to finish inspecting the cellar so he could frame the inside and install a floor over the top of it.\n\nJordan had just gotten the ladder out of the shed and climbed down inside when his phone started ringing. It was his father.\n\n\"Hi dad.\" Jordan greeted him.\n\n\"Hey Jordan, your mom and I were talking about coming up to visit you soon. What do you know about the Cattlemen's days rodeo there in Gunnison?\" He asked. \"Your mother and I thought we could come up for the rodeo and visit you. Do you have any plans next weekend?\"\n\nJordan rolled his eyes. They wanted to meet Megan. Kaitlin's parents would be in town too, and he would be expected to play monogamous boyfriend to Kaitlin. \n\n\"Yeah, Dad. I'll be here.\" Jordan answered.\n\n***\n\nThere was a long pause, as Jordan realized the slow-moving disaster that was falling upon him. His girlfriend, Kaitlin would be hosting her parents the same weekend, and neither set of parents were aware of the triad relationship that they formed with Megan.\n\n\"Jordan? You there?\" His father broke the long silence between them.\n\n\"Yeah dad, I'm guessing this is mom's ploy to meet Megan?\" Jordan asked.\n\n\"Not just your mom. I want to meet her too. Our only son has been making a new life for himself. Both your mom and I want to be a part of it still.\" Jordan's dad admitted. \n\n\"I'll have to ask Megan to check her schedule, see if she'll be around those days.\" Jordan finally dodged. \"I'd hate for you to come up and miss her. Maybe another weekend would work better?\" Jordan was pleased with his quick thinking. \n\n\"We'd still like to come see you, regardless.\" Jordan's father replied. \"I'd love to try riding a horse again, and see my Great-grandfather's mining claim land if the offer's still open.\" \n\n\"Um... Yeah. I'll definitely give you a tour.\" Jordan said, realizing how stupid Kaitlin must have felt rolling out the red carpet to her dad as she was making the same offers.\n\n\"Alright, your mom and I can book a hotel room and we'll go ahead and buy admission to the festival. I know your mom enjoys watching the bull riding, so I'll make sure we get rodeo tickets for you and Megan too.\" Jordan's dad offered.\n\n\"Thanks dad, like I said, Megan might not be there.\" Jordan attempted a dodge.\n\n\"Alright, we can buy her a ticket at the gate. What hotels are there up in Gunnison?\" Jordan could tell that his dad was asking to be invited to stay with him, and he realized that it might give him some flexibility.\n\n\"There's a Holiday Inn, but I have a pretty nice sized apartment with an extra guest room.\" Jordan offered. \"Why don't you and mom plan on staying with me while you're in town?\" \n\n\"We wouldn't want to impose.\" Jordan's father half-heartedly offered.\n\n\"Not at all, dad. If you and mom are driving all the way up here, the least I can do is put you up for a few nights and poison you with my cooking.\" \n\nJordan's dad laughed, and accepted. They had little else to say, and ended the phone call with their goodbyes. \n\nJordan began the walk up to the mine where Megan was spending her final day with Kaitlin and the Bigfoot before she began her midwife crash course in the maternity ward in Gunnison. Jordan had seen her reading an e-textbook when he had left the mine where they slept that morning, but as he entered the darkness, he didn't see the shine of her tablet screen.\n\nInstead, he could hear the soft moans and gasps of two women in the throes of passion. As his eyes slowly adjusted to the low-light cast by the LED lamp, he could see their beautiful naked bodies writhing on the straw bedding. They were off to one side, and the sleeping bodies of all five adult Bigfoot were piled up around them, though none woke to observe their play. \n\nTo Jordan's surprise, Kaitlin was on top, the larger redhead had the smaller blonde pinned to the floor. She held her wrists above her head, and the two women rubbed their thighs across one another's pussies, grinding their hips into one another's legs. \n\n\"Are you just going to watch, or are you going to help me get her off?\" Kaitlin asked in a husky voice. \n\nJordan had been so fascinated watching Megan's small perky breasts indenting and being engulfed by Kaitlin's much larger set that he almost missed the question. He looked up to see Kaitlin's green and Megan's blue eyes hooded in lust staring up at him. \n\nJordan wasted no time stripping naked. Kaitlin was clearly the stronger of the two, and she rolled Megan over, presenting Megan's gorgeous butt to Jordan, as she was held up. Jordan could see the smeared arousal of his blonde lover, and her lower lips were open to him. \n\nJordan positioned himself over her opening, rubbing his cock around to gather the flowing moisture to lubricate the head. He pushed gently, easing into Megan's warm passage. She had clearly been riding the crest of an orgasm for a while, because Jordan was barely inside before he felt the rhythmic pulsing of Megan's pelvic muscles. \n\n\"That's it baby.\" He could hear Kaitlin encouraging Megan. \"Come for me. Come for both of us!\" Jordan could feel a hand rubbing the spot where he and Megan connected. Kaitlin was rubbing her clit, and the hand wandered up, cupping and gently massaging Jordan's sac. \n\nJordan gave long strokes, driving through Megan's orgasm, until he could feel her begin to relax, and Megan's counter-movements became less urgent. Underneath them, Jordan could feel Kaitlin's excitement as her hips continued moving. \n\nHe slowly withdrew from Megan's sopping slit, and brought a hand to his cock to probe for Kaitlin's opening. Kaitlin was rubbing herself, and when she felt Jordan's wet member on the back of her hand, she grabbed it greedily, and pulled it to her opening. \n\nJordan slid in with barely any friction. He had to adjust his legs to get a better angle, and his view was of the two beautiful women, locked in an embrace. Megan's light tanned skin contrasted beautifully against Kaitlin's pale pink. The petite Megan had her arms around Kaitlin's neck, and Jordan could see Kaitlin's large breasts spilling out around Megan's sides. \n\nMegan was shorter, and so had slid up Kaitlin's body to kiss. Jordan had a clear view of Kaitlin's soft pink folds where his cock was now buried. Megan repaid the favor, heightening Kaitlin's arousal from her place sandwiched between her two lovers. Jordan began gently fucking, taking his cues from Kaitlin's writhing hips.\n\nLike Megan, Kaitlin had been led to the precipice of a monster of an orgasm, and in the space of a dozen strokes, Jordan pushed her over the edge. \n\nThis time it was Megan's turn to coo and encourage her lover through the heights of bliss. \n\n\"That's it. Come for us!\" Megan breathed into Kaitlin's ear, taking the opportunity to nibble her earlobe, and lick and kiss down the redhead's neck to the spot on her collarbone that Jordan so often lavished with attention.\n\nKaitlin's face grew sweaty, and in the low light Jordan could see blotches of red emerge on her face and down her neck. She was holding her breath, her face twisted in a mask of ecstasy. Megan continued kissing, adding little affirmations of love and beauty in between each kiss. \n\nJordan felt his own climax fast approaching, and didn't hold back. He kept his eyes open, counting his luck as he filled his young lover full of his seed. As he felt his orgasm subside, Jordan realized that Kaitlin was still riding her crest. He had lost track of time, but was starting to worry about Kaitlin. Small, short gasps were all the breath she took, and she seemed to be lost to the world. \n\nFinally, she seemed to relax. Megan looked up and called Kaitlin's name. She put one hand on the redhead's face.\n\n\"Damnit, Jordan! You did it again! What is it with you fucking women unconscious?\" Megan faked outrage. \n\n\"She just stopped breathing!\" Jordan said in wonder. \"Is she breathing now?\" He asked. \n\n\"Yeah, but I should probably get off of her.\" Megan said as she stood. \n\nWith the removed weight, Jordan could see Kaitlin's large breasts begin to rise and fall more evenly. Megan slipped down between Kaitlin's spread legs, and seemed to study the other woman's sex. Jordan leaned forward, wrapping his arms around his petite blonde lover. \n\n\"Whatcha looking at?\" Jordan asked, already knowing the answer.\n\n\"If you told me a week ago that I would be staring at Kaitlin's pussy, considering licking it, I'd tell you you're crazy.\" Megan said, not breaking eye contact with the pink folds, slightly separated, and leaking Jordan's seed. \"But...\" \n\nMegan leaned forward and tentatively licked the combined juices of her two lovers off of Kaitlin. \n\n\"Mm. But here I am, and it's all I want right now.\" With that, Megan leaned in and licked again, firmer this time. On the second stroke she latched on, sucking with her lips. \n\nThe passed out Kaitlin came awake at that. \"AAHHH!\" She sat up suddenly. \"Sensitive!\" She squirmed away from Megan's mouth. \n\nMegan and Jordan both laughed as Kaitlin humped her hips a little, shaking through the new waves of sensation. \n\n\"Welcome back.\" Jordan said with a smile. \n\n\"What happened?\" Kaitlin asked. \n\n\"You passed out. It happens to the best of us.\" Megan answered with a grin. \n\n\"Oh.\" Kaitlin seemed confused. \"We were...\" \n\n\"Fucking.\" Megan confirmed. \n\n\"Megan!\" Kaitlin's eyes came wide open. \"Did you just go down on me?\" \n\nMegan got a sheepish look. \"I was just cleaning you up. You're not upset with me, are you?\" \n\nKaitlin visibly calmed. \"I'm not mad... I... I liked it. I'm just not sure I'll ever be able to reciprocate.\" \n\n\"That's okay.\" Megan said. \"Jordan can ...fill... that role.\" She wagged her eyebrows, and flashed her beautiful smile. \n\nKaitlin smiled at her two lovers then, and looked at Jordan.\n\n\"Aren't you supposed to be working? Inspecting something?\" Kaitlin asked him. \n\n\"The cellar, yeah.\" Jordan replied. \"But I was interrupted by a phone call. Please don't be mad at me, but I pulled a Kaitlin.\"\n\n\"You got off from riding a horse?\" Megan asked playfully. Kaitlin gently smacked her, sitting up, and starting to return to her natural color.\n\n\"No, though I agree that from now on 'pulling a Kaitlin' should be that, and not the stupid thing I just did.\" Jordan admitted. \"My dad called. He and my mom want to meet you, Megan. They asked to come up for the Cattlemen's days rodeo.\"\n\n\"You didn't!\" Kaitlin realized the problem. \n\n\"I couldn't talk him out of it.\" Jordan admitted. \n\n\"Jordan! My parents are going to be here! They're expecting me to have a boyfriend! They can't meet your parents! Especially if your parents think you're dating Megan!\" Kaitlin shouted. Her agitation was beginning to waken the sleeping giants around them. Kaitlin took a deep breath, calming herself as Sarah shifted in her sleep, her toddler son, Bam-Bam crawled from her grasp to find another female to sleep with. \n\n\"Can you introduce me to your parents as Megan and ask them to call me Kaitlin all week?\" Kaitlin asked.\n\n\"No!\" Megan, who had been silent snapped. \"Jordan, you said you were going to stop lying to your parents, hiding one of your girlfriends just to appease their puritanical sensibilities. I let it go because you didn't want to burden them down with too much at once, but this is the perfect opportunity to stop the lies! \n\n\"Invite your parents up a few days early. Let them adjust to the fact that you're in love with two women. Ask them to help us deceive Kaitlin's family.\" Megan pleaded.\n\nJordan looked up at Kaitlin, who nodded. He let out a big sigh, out of better ideas.\n\n\"Alright. I'll see if they can come Thursday.\" Jordan said. \n\n\"Where will they be staying?\" Megan asked. \"Aren't the hotels all booked for the rodeo?\" \n\n\"No, they'll be staying in my guest room.\" Jordan explained. \n\n\"On your futon?\" Megan sounded outraged.\n\n\"Well... yeah.\" Jordan didn't see the problem.\n\n\"Jordan, you're a grownup now. It's time for you to get a real bed for your parents to stay on when they come to visit.\" Megan explained. \"Kaitlin, where are your parents staying?\" \n\n\"Oh, they have an RV with a horse trailer at the back. They'll be bringing that.\" Kaitlin explained. \n\n\"Okay. So we need to do logistics here.\" Megan's mind started working. \"I'll get a new bed ordered tonight when I go back.\" \n\n\"Do you have to go back to town tonight?\" Jordan knew how much better she slept when she wasn't alone. \n\n\"I'm meeting my instructors at eight tomorrow morning. I'm not riding the motorcycle down the hill so early in the morning. I will need to shower and dress up for my lessons. It just makes sense.\" Megan explained. \"Is it alright if I get rid of your futon?\"\n\nJordan wanted to protest, but the look Megan gave him didn't leave room for discussion. \"Sure.\" He said. \"Do you need my credit card for the new furniture?\" \n\n\"Jordan, I told you. My parents left me plenty of money in their will and insurance policy. You bought me a horse, I can buy you a bed.\" Megan said. \"Is it too much to hope that we three might have shared finances one day?\" \n\nJordan smiled. He liked the idea of a future with both women. \"Not too much to hope.\" He confirmed. Kaitlin smiled and nodded in agreement.\n\n\"Okay. That's settled.\" Megan said commandingly. \"I have four days on and four days off for the next two months. I should be done for this week sometime Thursday evening. \n\n\"Jordan, please let your parents know that I would love to meet them this Thursday for a late dinner. Kaitlin, when do your parents arrive?\" \n\n\"Saturday. Probably sometime in the afternoon.\" Kaitlin answered. \n\n\"Okay, so that gives us just one full day to win over Jordan's parents, or drive them screaming back to Denver before your family arrives.\" Megan said, mentally planning out the coming week. \"You two stay here and make sure the Bigfoot stay fed, sexed and safe until Thursday morning. I will cook and clean for you guys' parents. \n\n\"Kaitlin, don't tell your family that Jordan's parents will be here until we know for sure that Mr. and Mrs. White will be onboard with keeping our 'secret.' I'll do some shopping for us... clothes, food, furniture. Kaitlin, let's go for sweet yet sophisticated clothing and makeup. I'm guessing Jordan's dad will be too short-circuited by the thought of his son with two women, so it will be his mother we will have to win over. \n\n\"She's all about the grandbabies, so we have to give off the 'future mothers' vibe.\" Megan was rambling, thinking out loud. Kaitlin had nodded along with her instructions, but her eyes grew large at the scope of Megan's planning. \n\n\"Do you look good in a dress?\" Megan asked. \"Oh, who am I kidding? You look good in anything.\" Megan continued, answering her own question. \"Something green? With a conservative neckline. Jordan, you're wearing pants and a collared shirt. We have to get your parents thinking we've domesticated you.\n\n\"Jordan, do your parents have any allergies?\" Megan continued. Jordan just shook his head. \"Then we're having lasagna and Garlic bread with a Cesar salad for dinner. I'll have the lasagna assembled and in your refrigerator Wednesday night. The rest I can assemble when I arrive, but you'll need to bake the lasagna fresh. 350\u02da for an hour. I can probably get off by six, so start it at five thirty so that it's ready when I get there.\" Megan pulled out her tablet computer and started making notes. \n\n\"Don't worry you two, I'll make sure that both of your families leave next week believing you're both in good hands. We'll have to make some contingencies for whether Jordan's parents are on board with deceiving the Schmidt's. Both of your dads have been promised a tour of the land up here. \n\n\"Maybe Jordan could bring them up here on horseback at the same time, and we could have a girl's afternoon?\" Megan suggested. \n\n\"What about the Bigfoot?\" Kaitlin asked. \"My dad knows, but he doesn't know that's why I'm here.\"\n\n\"My dad doesn't and can't know\" Jordan said.\n\n\"Not that it matters, they're nocturnal and wouldn't approach strange humans anyways.\" Megan said. \"But why not tell your dad?\"\n\n\"You work for BFRO!\" Jordan replied. \"Aren't you supposed to be all about keeping secrets?\" \n\n\"From people who don't need to know, yes. But these are your parents, Jordan. Could you trust them with the secret? Would they tell anyone?\" Megan asked\n\n\"My mom would tell everyone within seconds of getting an internet connection.\" Jordan admitted. \"My dad is trustworthy, but it would be a burden to him, not telling my mother.\"\n\n\"Like I said, it won't matter.\" Megan said. \"Bring them both up in the morning together. Steer clear of the mine, and the Bigfoot should stay hidden.\" \n\n***\n\nJordan dressed and went out to the flat rock outside the entrance. He pulled out his phone and dialed his father. \n\n\"Hi Jordan, is Megan going to avoid us?\" Jordan's father said in greeting. \n\nMegan sat on the rock behind Jordan, and in the calm morning air, she heard the question as she sat down. She wrapped both arms and legs around Jordan as she cuddled his large frame from behind.\n\n\"No Mr. White, I'll be here. I'm looking forward to meeting you!\" Megan said sweetly.\n\n\"She does exist!\" Jordan's dad joked. \"And please, call me Steven! Bev and I are so looking forward to meeting you.\"\n\n\"I can't wait.\" Megan called into the phone over Jordan's shoulder. \n\n\"Dad,\" Jordan interrupted. \"Megan gets off work on Thursday night, and has offered to cook for us. If you can stand me for an extra few days before the rodeo, we'd love to have you and mom up Thursday evening.\"\n\n\"We, huh?\" Jordan's dad caught the invitation.\n\n\"Yes, we would like to make dinner for you and we would be happy to show you around town.\" Megan answered for Jordan. \n\nSteven laughed. \"Alright, it's good to hear that he's got a girlfriend who's going to keep him in line. I'll have to take work off Friday, but we can make that happen. We'll see you both this Thursday. And Megan, Bev can be a little... intense. I'll try to reign her in, but please be prepared for some personal questions.\"\n\n\"Sounds like a fun afternoon of girl-talk.\" Megan said with a smile, undaunted. \n\nJordan and Megan both said goodbye to Jordan's dad, and the call ended. \n\n\"He seems nice.\" Megan said. \n\n\"My dad's a great guy.\" Jordan said. \"I feel so bad for deceiving him, and asking him to help us deceive Kaitlin's parents. \n\nThey were silent for a few moments, with Megan still wrapped around Jordan's back, and her head laying on his broad back. \n\n\"I'd better get going. So much to do before tomorrow morning.\" Megan finally said, and she breezed back through the mine entrance. A few minutes later she emerged with her backpack. \"Here's a notebook and an ASL dictionary.\" Megan handed the books to Jordan. \"I've made notes of who has learned what symbols. It would be great if you and Kaitlin could try to learn the same words, and try communicating them.\n\n\"Something else, Jordan.\" Jordan looked up to see an expression of conflict on Megan's face. \"The Bigfoot are starting to understand English words. They'll never be able to speak them, but they may get to the point that they understand us when we talk. They certainly have the intelligence for it. If you and Megan could just try talking to them. Explain your words like you're talking to children.\"\n\n\"How do you know that they won't learn to speak English?\" Jordan asked. \"I bet they could at least speak some words.\"",
        "Megan frowned. \"There's a gene that all humans have called Foxp2. The few humans that have been studied with mutations to this gene are unable to speak. They can understand words, their tongues and voice box are normal, but they just lack the pathways in the brain to turn thoughts into words. \n\n\"The Bigfoot don't have the same copy of this gene. It mutated for humans sometime after our two species split apart. The Bigfoot have the ability to understand speech, and to make sign language. They might even learn a word or two that they can mimic, but they won't ever be able to speak to us. \n\n\"You and Kaitlin need to learn to understand their sign language.\" Megan said as she shouldered her pack and started walking down to where the motorcycle was parked. \n\n\"And Jordan,\" she said after a dozen paces, turning back to face him. \"You gave them lovely names. See if you can't get them to learn to recognize their own names.\" With that, Megan turned back, and Jordan watched her dirty-blonde hair as she hiked down the mountainside, until he lost her in the dense forest below. A few moments later, he heard his motorcycle start, and listened as the sound of the motor slowly faded to silence.\n\nJordan stretched out on the rock, savoring the warmth of the late morning sun. He was drifting between sleep and awake when a shadow fell across his face, and he opened his eyes to see Kaitlin standing above him.\n\n\"Come on, lazy bones. Let's see if we can't get a presentable cabin put in place before our two dads come up here and start wondering what we do with our time.\" Kaitlin teased.\n\n\"You know that we can't get a cabin built in four days, right?\" Jordan asked.\n\n\"Yes.\" Kaitlin laughed. \"But we can get four days further along in the construction project before we have to leave. Let's at least see if we can't get a floor put down over the cellar. I'm sure you are going to build some fancy little trap door for it or something.\"\n\n\"Do you really think so little of me?\" Jordan joked. \"A trap door to my cellar? What am I, a peasant? I was thinking spiral staircase.\"\n\n\"Ooh. Fancy.\" Kaitlin laughed, and pulled him up into her arms. \n\nJordan kissed her hard, and she started to melt into the kiss before she broke it.\n\n\"Enough of that, or we're never going to get any work done.\" Kaitlin laughed. It was musical, and Jordan again wondered what such a strikingly beautiful woman wanted with him.\n\n***\n\nThey walked down the hill together, holding hands. \n\nKaitlin broke the silence first. \"I'm going to miss Megan tonight.\" \n\n\"Me too.\" Jordan said.\n\n\"I still can't believe this is happening. I've never been interested in girls. I mean... I always thought women are beautiful, but... I never thought I would find myself in a relationship with a woman. Certainly not with a woman AND a man... I never knew that I could be this happy! I've thrown everything I thought I knew about myself and what I wanted out the window, and I can't imagine ever going back.\" \n\nJordan looked over and saw the slight blush, and joyous smile on Kaitlin's face. It was infectious, and he found himself smiling at her enthusiasm.\n\nOnce at the construction site, Jordan opened the shed, and started removing the tools that he needed. He would be framing the floor today, and possibly the walls if they had time. He had an extra set of hands, and wouldn't bore Kaitlin with standing around while he checked each stone in the cellar. He wondered how his grandfathers had built the cabin and dug out the cellar. Then he remembered that they were miners, and came prepared for digging.\n\nKaitlin began hauling 2x4s over, which snapped him out of his daze. He found a tape measure, and began measuring and sawing boards. He laid them out inside the cement floor, making room for the posts that would hold up his load-bearing wall running down the middle of the cabin. Jordan and Kaitlin hammered away the whole day, framing the floor and overlaying OSB on top. \n\nThey took a break for lunch, and a naked dip in the pond up near the small one-room cabin. The horses were grazing in the meadow, and they came over to steal apples from Jordan as he took them out of his bag. \n\nIn the afternoon, the two managed to frame the exterior walls on the first floor out of 2x4s, including the windows and doors. The frame went inside the stone work that they had finished the previous day, and would allow insulation for the interior, and support for the second-story walls. Jordan had carefully planned the length and position of every board, and Kaitlin was a great helper, lifting and hammering wherever she could to keep Jordan from stressing his injured shoulder. \n\nThe shoulder itself was healing up nicely, and only hurt when Jordan moved in a certain way. It would be weeks before he could use it normally, but he no longer needed pain medication to sleep.\n\nKaitlin was cleaning up in the evening when Jordan decided to finish inspecting the cellar stones. He started with one wall, and found all stones in great shape. He couldn't loosen or remove any, and took that as a good sign that the wall behind them wasn't pushing them out.\n\nJordan was starting to inspect a second wall when he heard the first of the Bigfoot call out. He stood and realized that the sun had set. It had been getting harder to see in the low light, and he was hungry, so he called it a night, and would finish later. \n\nJordan made hamburgers, with a few extras for the Bigfoot. They each refused when he offered the food. The steak banquet he had fed them three nights before still seemed to satisfy them. \n\nJordan marveled at how they refused even the fruit and vegetables that he offered, with the exception of grapes, which they loved to eat regardless.\n\n\"That's why their teeth are so clean and white, you know.\" Kaitlin responded when Jordan finally gave up trying to share his meal. \n\n\"Because they don't eat much?\" he asked.\n\n\"Because they don't eat often.\" She replied. \"They get their fill all at once if they can, and then don't eat for days, giving their teeth a break. That was actually Megan's theory. I'm surprised you didn't read about it.\" \n\n\"They do seem pretty hygienic.\" Jordan marveled. \n\n\"Have you noticed no ectoparasites?\" Kaitlin asked. \n\n\"No what?\" \n\n\"Ectoparasites - Ticks, fleas, lice, bedbugs. You know, the creepy crawlies that you'd expect a furry wild animal to carry in their fur and their nests?\" Kaitlin happily educated Jordan.\n\n\"I hadn't really thought about it.\" Jordan admitted.\n\nKaitlin reached down and picked a fluffy plant leaf off the ground outside the old cabin where the group had gathered. The plant was bluish-green, and small. \n\n\"Do you know what this plant is?\" She asked. \n\nJordan racked his brain. \"No.\" He finally admitted. \"But I have seen it in the nest.\"\n\n\"Yup. It's full of the stuff. Megan called it fringed sagebrush.\" Kaitlin crushed it between her thumb and forefinger. \"Smell.\" She commanded, pushing the plant in Jordan's face. It was spicy, and a little bitter. \n\n\"According to Megan, this plant is full of chemicals that repel and kill the bugs that would otherwise live in the Bigfoot's fur. There is some wild mint in the nest too, along with some wild lemon balm. It seems any stinky plant the Bigfoot find, they add it to their nests.\n\n\"Together, it's like we sleep on a mat of herbal bug repellents. I can't even imagine how gross it would get if they didn't add these to their nest.\" Kaitlin said thoughtfully, twisting the leaves between her fingers and smelling the oil they released.  \n\n***\n\nJordan and Kaitlin retired alone to the mine after the sky was truly dark that night. They had Megan's book of sign language, and neither had realized just how much work she had done teaching signs, and making note of which Bigfoot recognized and made each sign.\n\nJordan had noticed a few brief hand signals from Jill and Ginger, but he hadn't realized that they were communicating. Little Bam-Bam was picking it up the fastest, according to Megan's notes. He recognized and could mimic almost every sign that she had shown him. \n\nJordan went through her notes and the dictionary, glancing and learning a dozen or so signs that the little male would recognize. The whole group returned from their run, breathing heavy and looking happy. The females paired up, grooming one another, and playing with stones and twigs.\n\nJordan approached the male toddler, wrestling with the little female, Pebbles on the mine floor. As he approached, the two toddlers broke apart, and wrapped their arms around his neck, clinging on for an extended hug. Jordan returned the hug, and sat with both in his lap.\n\n'You hungry, eat food.' Jordan signed. \n\n'No.' Bam-Bam signed in reply.\n\n'Tickle.' Jordan signed, and both little Bigfoot toddlers sprung off his lap, rolling away, then back to encourage Jordan to chase and tickle them. \n\n\"I think the babies pick it up faster than the adults do.\" Kaitlin observed. \n\nJordan looked up from where he had the babies grunting in laughter, and saw Wilma approaching. 'Tickle' she signed. She was always happy, and always looking for tickles from Jordan.\n\nJordan removed his hands from the babies, and sprung on the giant brown female. She rolled back, grunting her own laughter as she let Jordan pin her to the ground, and start tickling her. \n\nWilma's big brown eyes locked with Jordan's, and she easily rolled him, so that she was on top, straddling his hips. Jordan reached up to tickle Wilma, but she grabbed his wrists and pinned them above his head. The playful look was still in her eyes, but the look was punctuated with lust. \n\nJordan struggled against her grip, but she held him fast, and started wiggling her crotch against the bulge in Jordan's shorts. \n\n\"A little help here?\" Jordan asked Kaitlin who watched with an amused smile.\n\n\"There's an old Joke: Where does an 800 pound gorilla sleep?\" Kaitlin said with a smirk. Jordan rolled his eyes, already knowing the punchline. \"Wherever he wants.\" Kaitlin chuckled. \"And who does a 300 pound Bigfoot have sex with?\" \n\n\"Whoever she wants. I know.\" Jordan said.\n\n\"Actually, she's lower than you in the pecking order.\" Kaitlin said after a moment's pause. \"She's probably used to getting dominated, sexually. She's probably trying to bait you into dominating her, especially now that she trusts you.\" \n\nJordan looked at Kaitlin in the low light from the lantern. Her face and neck had taken on the telltale pink flush that told him she was turned on. \n\n\"She's got a hundred pounds on me. How am I supposed to...\"\n\n\"Just try. Give her everything you've got.\" Kaitlin said, and sat down cross-legged to watch. Jordan watched her face. Kaitlin was biting her lip, and he could see a flush starting to creep up her neck. \n\nJordan looked back up to Wilma. The big female was riding him hard, dry humping with incredible strength. \n\nJordan twisted his wrists suddenly, breaking free of Wilma's grasp. He grabbed her wrists, and pulled to the side, unbalancing her and giving him the opportunity to roll back on top.\n\nJordan rose to his feet and quickly stripped out of his shirt, shorts and boxers. Wilma had risen to her feet as well, and backed up towards the nest. Jordan sprung towards her, tackling her onto the thick mat of vegetation. \n\nWilma struggled, but she had shown her true strength already, and this was just a show of resistance. She clamped her legs together, and Jordan rolled her over, favoring his left shoulder, and shoving hard with his right arm. He rolled her to her stomach.\n\nJordan pinned Wilma to the nest with his body weight, and brought her right arm back into a hammerlock, not painful, but controlling. Several times Wilma broke free, but quickly allowed Jordan to capture her, wrestling her back to the ground. \n\nJordan had not wrestled in high school, but had attended several matches to support his friends. He tried to copy some of the pins that he had seen, crippled as his left shoulder was. Wilma continued to put up token resistance, actually grunting in laughter as she let Jordan dominate her. \n\nLying spread out on Wilma's back, Jordan's cock was achingly hard, and he brought it carefully between her legs, probing her furry pussy from behind. He found copious warm moisture there, and with just a few thrusts, he found himself seated inside her silky folds. His hands explored around and found her breasts, heavy from nursing, and he held them as he began sliding in and out of her.\n\nWilma made a few more plays for resistance, but Jordan held firm, pinning her to the nest, trapping her huge legs with his much smaller knees, and her thick arms with his weaker human hands. In short order, Wilma was screaming out her ecstasy, in a guttural, primal moan of lust. Jordan could feel a gush of additional moisture as she clamped down hard on his cock and began shaking through what must have been a massive orgasm. \n\nThe physical play had turned Jordan on more than he would have thought possible, and Wilma's cries of pleasure pushed his orgasm past the point of no return. He came hard, pounding through each pulse into the large woman beneath him, filling her tight pussy with his seed. \n\nFinally spent, he collapsed on top of Wilma, luxuriating in her soft fur for a few moments before she gently rolled him off and then pulled him to her chest. Jordan's mouth landed on a big nipple, and he pulled it into his mouth, tasting a small trickle of her milk. It was sweeter than he expected, and thinner than the cow's milk he could compare it to. \n\nJordan crawled up her chest to her neck, and nuzzled into the spot where her thick neck met her muscled shoulder. This was the Bigfoot equivalent of a kiss, and Wilma responded with a purr of happiness as he rubbed his entire face into the soft fur and hard muscles below.\n\nHis moment of bliss was interrupted by a squishing sound. He looked up to see five pairs of eyes on him and Wilma. The four adult Bigfoot and Kaitlin all watched intently, and Jill was responsible for the squishing sound as she furiously masturbated, whimpering through her release. \n\nAs always, the two toddlers played, bored by the antics of the adults. Jordan focused on Kaitlin, whose face was awash in lust. \n\n\"You okay?\" Jordan asked, looking at his human girlfriend. \n\nKaitlin bit her lip again and nodded. \"Do... do you think you and I could do that sometime? I mean...\" \n\nJordan stopped her train of thought with a smile. \n\n\"We would have to have a safe word. That's not an issue with the Bigfoot, since Wilma could have thrown you across the cave at any time.\" Kaitlin rolled onto her knees and crawled onto the nest, joining Jordan on Wilma's broad chest. \n\nShe fondled Wilma's heavy breast, before climbing up to kiss Jordan. \"Also, I should have warned you... Megan still thinks at least Missy holds herself above you in rank. She or Ginger may try dominating you sexually, now that you've shown them that kind of trust and play.\n\nKaitlin looked down and grabbed Jordan's still wet cock. Jordan hadn't realized that he had gotten hard again just thinking about it. \"It doesn't look like you would mind that.\" Kaitlin breathed into his ear. She bit down on Jordan's earlobe. \n\nJordan pulled back from the painful nip, and saw a challenging look in Kaitlin's eyes. Without warning, she pushed him hard off Wilma, and onto the nest, swinging her legs off, and jumping on top of Jordan. \n\nJordan caught Kaitlin's wrists, and rolled with her. He almost wound up on top, but they bumped into a furry mass, and lost their momentum. Kaitlin seized the moment, pulling Jordan back and trying to mount him. She was still fully clothed, but for just one moment, she was on top, and started grinding the crotch of her jeans on Jordan's bare cock. \n\nHe was sensitive from his recent climax with Wilma, so it was just painful enough to drive Jordan to sit up and push Kaitlin over backwards. This time he wound up on top. Unlike with Wilma, he could feel Kaitlin putting up true resistance. She was amazingly strong, but Jordan was stronger, and had better leverage with his long arms and legs. He pinned the redhead to the nest, and groped her breast hard with his left hand while his right hand held her wrists. \n\nShe seemed to relax under his grip, so Jordan released his hold on Kaitlin's wrists to get a more secure angle. Kaitlin surprised him with her strength and speed as she shoved him backwards off of her. Jordan had barely landed before Kaitlin was on her feet, unbuttoning her shirt. \n\nShe stripped quickly and efficiently, standing bare to the group just a few seconds later. \n\n\"Safe word is 'really'.\" Kaitlin said breathlessly. \"If I say 'stop' or 'no' or 'enough,' it doesn't count unless I include 'really.' Got it?\" \n\nJordan nodded, and Kaitlin pounced, landing hard on his uninjured right side. \n\nThe two wrestled. Jordan could tell that it was play by how carefully she treated his left shoulder, and how she always seemed at the limit of her strength and skill just before he was. \n\nAs with Wilma, Jordan finally pinned her face down on the straw bedding. \n\n\"No!\" Kaitlin shouted as Jordan found her opening and pushed in carefully. Kaitlin was sopping wet, and couldn't help humping her hips back against his hard invader. \"Stop you bastard!\" \n\nJordan didn't stop. He fucked Kaitlin hard, pulling her back as she faked attempts to escape. He spanked her ass after each one, and could feel a little trembling orgasm after each smack. \n\n\"Stop!\" Kaitlin shouted, even as Jordan could feel the orgasm building. Her breathing grew deeper, and she stopped struggling, humping hard against Jordan's thrusts. \"Fuck you asshole, get off me!\" She shouted in a husky voice. \n\n\"NOOOOO!!\" Katilin screamed as a massive orgasm hit. Jordan just fucked harder, pulling her into him, and maintaining the hard and fast pace that had brought her there. \"STOP, STOP!\" Kaitlin screamed. \"REALLY.\" \n\nLike someone had thrown a switch, Jordan relaxed his grip, and Kaitlin fell forward into the straw, gasping for air. He fell out of her as she fell forward without him, and her hips kept humping, shaking through the aftershocks of a massive orgasm.\n\n\"Oh god Jordan, that was even hotter than I had imagined!\" Kaitlin said through panting breaths. \"Did you finish?\" Jordan shook his head. \"Oh no! I'm sorry! I can't take anymore!\" Jordan leaned forward to kiss her naked back. \"REALLY! I really can't take any more!\" Kaitlin laughed as she rolled out of his grasp. \n\nHe stared at Kaitlin's large breasts, heaving on the ground, still perky, despite their weight. By the low light in the cave, Jordan could see the sheen of sweat covering her face, neck and chest. He could just make out splotches of pink, and could imagine a whole body flush.\n\n\"I don't even think I'll be able to ride my horse for a day, and you know I'm worn out when I say that.\" Kaitlin was beginning to catch her breath, and Jordan's erection was not quitting. \n\n\"Go wave that thing around the cave. Someone's bound to want a ride.\" Kaitlin said when she looked up and saw Jordan's plight. \n\nJordan stood, and approached Jill, who was still rubbing her crotch. A sparkle of hope grew in the Bigfoot's eyes as Jordan approached with his cock still standing proudly erect.\n\nGinger was faster, though, and muscled Jordan to the ground. After two wrestling matches, Jordan didn't have the strength to resist the red-furred Bigfoot. She grabbed both of Jordan's wrists in her massive hand, just like Jordan had done with Kaitlin. \n\nGinger growled threateningly over Jordan's prone body, pinning him under her weight. She leaned down, and her huge head nuzzled into Jordan's neck, as he felt her weight rise off his hips, and then warm wetness engulfed his cock. \n\nThe 'kiss' coupled with the growl was a strange combination. If Ginger wanted Jordan to fight back, she picked the wrong time, as he had no fight left in him. He submitted to her superior size and strength, even as she released his wrists, and wrapped her large hands underneath him. ",
        "Ginger's body was much longer, and in order to ride him and keep her face buried in his neck, Ginger's back was severely arched, lifting her large breasts off of Jordan. \n\nAs she slammed her hips down hard, taking her pleasure from Jordan's reclined body, Jordan brought his hands up, roughly massaging her breasts. His hands roamed down to the bulge of her pregnant belly, and Jordan caressed the little life therein. \n\nGinger's orgasm built quickly as she slammed down hard on Jordan. She growled roughly into his neck, and then screamed as she reached her climax, panting and humping through the crest. \n\nJordan always had trouble reaching orgasm with a second round of sex, but somehow being dominated by Ginger had brought him close. Feeling the big woman's release, he tipped over the edge himself, spilling what was no doubt a small volume of seed into her tight, pulsing canal.\n\nGinger kept moving until Jordan went soft, and then she rolled off, pulling Jordan on top of her. Both of her fur covered arms wrapped tight around Jordan's tired body, and she held him against her breasts, which Jordan absentmindedly caressed and fondled until Ginger's breathing changed, and he could tell she had fallen asleep beneath him. \n\nKaitlin was asleep, lying alone on her back with her eyes closed, and a halo of red hair splayed all around her. It looked wild, full of straw and leaves, but there was a peaceful smile on her face that Jordan found infectious. \n\nWilma also appeared to be sleeping. The other Bigfoot were all awake. Sarah was grooming Missy, the two toddlers were throwing little rocks at a pile of stacked stones, trying to knock the pile over, and Jill still sat at the edge of the nest, rubbing herself. \n\nJordan could see in Jill's eyes and in her posture that she felt rejected. She was so physically sexual, and Jordan had offered himself to her, only to be sidetracked by a more aggressive female. \n\nJordan pushed against Ginger's strong arms that held him tight, and stood up off of the big female, who rolled over and found Kaitlin to cuddle with.\n\nJordan approached Jill, and her eyes lit up. She reached up and touched Jordan's hanging penis, and he flinched at the contact. It was done for the night. \n\nJordan lay beside the big brown female, placing his hand over hers on her mound. She moved her hand aside, and Jordan found himself rubbing swollen and sticky lips through matted fur. He found her opening carefully with two fingers, and eased them inside. \n\nTension in Jill's chest and shoulders seemed to relax as Jordan penetrated her with his fingers. He worked them slowly in and out for a while before curling them up to find the rough patch that indicated her g-spot. He stroked it slowly, gently, and Jill began to whine for him.\n\nHe nuzzled her neck and spoke softly into her ear, encouraging her in a language she couldn't understand, but a tone that was unmistakeable. Jill's hips began humping up against his fingers, and Jordan met the thrusts, his thumb covering her clit and rubbing in circles. \n\nJill squealed finally, and Jordan felt a flood of sticky moisture cover his fingers and fill his hand. She seemed very near sleep, but kept humping her hips slowly. Jordan kept rubbing, gently massaging the pregnant female until he felt her breathing change. He stood up and found his clothes. He was covered in sweat and combined sex juices, so he put on his shoes and bundled his clothes up under his arm. He was going to wash in the stream below before getting dressed.\n\n***\n\nThe cool night air hit his naked skin, and Jordan instantly felt goosebumps rise. The moon was low in a cloudless sky, and the whole valley looked quiet and deserted in the early morning. \n\nJordan made it a dozen steps before his pants started vibrating under his arm. He pulled out his phone to see that he had missed three calls from Megan. He texted her, hoping she was still up, even though it was after 3 in the morning. \n\nWithin seconds, the phone started ringing. Jordan answered it as he walked down the hill. \n\n\"Good morning gorgeous. Are you just waking up or couldn't sleep?\" He asked.\n\n\"A little of both.\" Megan admitted. \"There's so much to do getting ready for both of your parents and I want to make a good impression.\"\n\n\"You don't need to do much for my parents.\" Jordan reassured Megan. \"They're going to love you.\" \n\n\"Right. But only until they find out about Kaitlin.\" Megan worried. \n\n\"They want me happy. When they see how happy both of you make me, they'll get over their shock.\" Jordan said.\n\n\"I hope so, which brings us to Kaitlin's parents, and making a good impression for them. Jordan, are there any things in your apartment that you're really attached to?\" Megan asked.\n\n\"Um, my grandfather built the dresser that I use, and I really like my TV.\" He said, not sure where Megan was going with it.\n\n\"Dresser, dresser... Okay, I can work with that.\" Megan said.\n\n\"Wait, are you in my apartment right now?\" He asked. \n\n\"Yeah, I told you before, you got the unit with the better bathtub. I got the bigger shower. I needed a bath.\"\n\n\"So you're naked in my apartment?\" Jordan smiled at the mental image.\n\n\"Of course.\" Megan said innocently. \"So no attachment to the mismatching couches or dented and scratched kitchen table?\" \n\n\"Megan, what are you planning?\" Jordan asked. \n\n\"Jordan, you're 26 years old, and probably a multimillionaire with all the gold in your mine. Your apartment screams 'second hand Ikea bachelor pad.' I want Kaitlin's parents, and yours too to walk in and think that you're a thoughtful and sophisticated man who deserves Kaitlin.\n\n\"I have something of an eye for interior design. I'll make sure it fits your style and the aesthetic we're going for.\" Megan promised.\n\n\"Alright. I'm still not sure about you buying me all new furniture, but I trust you.\" Jordan said with resignation.\n\n\"Thanks, stud. I tried calling earlier, but no one picked up. I hope you were up to something fun.\" Jordan could hear Megan's smile in the tone of her voice.\n\n\"Lots of fun. You want a blow-by-blow?\" Jordan asked.\n\n\"No, I'll get it from Kaitlin. Girl talk is just more fun, no offense.\"\n\n\"None taken. Please try to get some sleep. You have a long day ahead of you.\" Jordan encouraged her. \n\n\"It's not really worth it at this point. The most I could get is about 2 hours before I have to wake up. I want to get some stuff ordered online before I have to shower and get dressed.\" Megan replied.\n\n\"I thought you just took a bath?\" \n\n\"Jordan, I love you, but you can be such a clueless man sometimes. Baths are relaxing, but you have to shower afterwards to get clean and wash off the bath salts.\" Megan laughed.\n\n\"Alright, I... I have bath salts?\" Jordan asked.\n\n\"You do now. And a package of bath bombs.\" Megan laughed. \n\n\"Are my parents going to know that a woman is living in my apartment?\" \n\n\"No. By the time I'm done, it's going to be pure Jordan. Don't worry.\" Megan said.\n\n\"Alright. Try to get some rest. Can you call us when you get off tomorrow? Before you go to bed and crash hard?\" Jordan asked.\n\n\"I promise. I'm sure I'll have a lot to tell both of you about.\" Megan said. \"Oh, I'm buying you new sheets too. This flannel set is looking pretty old.\"\n\nJordan imagined Megan sprawled out naked on his bed, phone in hand and dirty blonde hair spread out.\n\n\"Fine.\" He said. \"Good luck today. I love you.\"\n\n\"I love you too.\" Megan replied, and they disconnected the call. \n\n***\n\nJordan reached the rocky, fast-moving stream, then walked the extra distance upstream to the pond. The stream was too shallow to submerge his whole body, and he needed to feel clean. The still pond water was also slightly warmer.\n\nHe stripped off his shoes and waded into the deep water, before laying down to submerge himself completely. It was so cold that he could barely breathe in short, sharp gasps, but he scrubbed his skin, washing away the day's sweat, dust and sex. \n\nHe lost track of time as his body slowly adjusted to the cold, inky black water. The moon was hidden behind the trees, and he floated on his back for a time, taking in the stars that were his only source of light. \n\nFinally, the cold began to cramp his muscles, so he stood and waded out of the water. He fumbled for his clothes with stiff, numb fingers. \n\nHe was surprised by a deep grunt, followed by an otherworldly bellow. Jordan spun and saw an enormous shape moving towards him across the pond, through the water. It wasn't a Bigfoot, and Jordan stared, frozen by fear and the cold for several long moments. \n\nIn the moonlight that now filtered through the trees, he could finally see that it was a bull moose. It stopped and stood in the deep water, it's head and shoulders above the surface.\n\nJordan dropped his clothes, and began to back away from the large animal. A sharp grunt told him that he had been spotted. He knew that these animals had terrible eyesight and feared nothing, but attacked anything that moved when startled.\n\nWithout warning, the bull exploded from the water, closing the distance between itself and Jordan. He just had time to throw himself to the ground sideways as the bull swung its antlers through the air that Jordan had occupied seconds before. \n\nThe bull thrashed in the dark, swinging its antlers and searching for the threat that it was sure was out there. Jordan stayed still on the ground, silently praying that the huge moose would just leave. He heard it crashing around, stomping its big hooves and searching for the perceived threat.\n\nSuddenly there was a massive scream, and Jordan looked up to see a humanoid shape slam into the animal. The bull stumbled sideways and swung back with its broad antlers.\n\nThe Bigfoot was thrown to the ground, and suddenly a second Bigfoot had the animal by the antlers. They wrestled for a long moment, each animal pushing the other back a few steps. \n\nFinally, the two separated, and Jordan could make out Missy's massive form and bulging shoulder muscles in a shaft of moonlight shining between two trees. The bull lowered its head and bellowed a sound that could only be a warning. \n\nMissy lowered her shoulders, bracing for an attack. She roared. The sound vibrated through Jordan's body, and he felt fear. As terrified as he had been when the moose charged, Missy's roar shook him to his core. The fear felt like it came from outside his body, and he felt a flood of adrenaline shoot through him. In that moment, he would have rather faced the moose than Missy.\n\nThe moose was trying to decide whether to attack again when the first female approached and took Missy's stance by her side. Jordan could see that it was Sarah. She repeated Missy's roar, slightly less deep and loud, but it reignited the same fear in Jordan's stomach, and he felt another flush of adrenaline surge through his body.\n\nA third female appeared beside the first two, panting from what Jordan guessed might have been a fast run. It was Jill. Facing three roaring Bigfoot, the moose began backing up, shaking its antlers. It was still bellowing, but retreating. When it was thirty yards from the three females, it turned tail and ran, grunting as it fled downstream. \n\nMissy abandoned her aggressive stance, standing up straight. Jill and Sarah followed. \n\nJordan felt that thrill of fear as the three turned to face him. His body was screaming at him to run, to flee, to use the adrenaline in his muscles to try to escape the three monsters that could stand against a bull moose. What choice did he have? \n\nFor a brief moment his mind switched to defense, and he felt the urge to look for a weapon to defend himself, and then it was gone. This was Missy, Jill and Sarah. His lovers, his friends... his family. They had saved his life. \n\nJordan took several deep breaths as the three approached, and took a shaky step towards them. All trace of cold from the water had left his body, and despite the chill air, he actually felt hot. His muscles were burning with the adrenaline and he felt strong, like he could climb a tree, or sprint faster than he ever had.\n\nMissy reached him first, hugging him and nuzzling his neck. Her hands were sticky, and she left bloody handprints on his shoulders where she had embraced him. \n\nJordan immediately regained the last of his mental facilities, and was worried for her. He ran for his pile of clothes, where he found his cellphone and turned on the flashlight app. \n\nMissy's dark hands were dripping red with dark blood, and Jordan looked for the source of the wound. He found scraps of velvety flesh between her fingers, and finally realized that it wasn't hers. Missy had actually torn the velvet from the moose's antlers during the moments when the two were locked in combat. The living flesh had bled all over her hands.\n\nHe turned the flashlight on Sarah. She was dirty on the shoulder where she had been thrown to the ground, but otherwise unhurt. Jill had caught her breath, and seemed fine. Jordan was most worried about her, since she was beginning to show with her pregnancy. Luckily she had arrived at the end of the action, and except for the run, hadn't exerted herself.\n\nThe three females were touching and fawning over Jordan like he was their baby who had been in trouble. Once he turned the light off, they took turns nuzzling and embracing Jordan. He felt ridiculous. That was three times that Missy had come to his rescue and saved his life. Twice against male Bigfoot, and now against a moose.\n\n'Thank you.' Jordan signed to each of the three Bigfoot, touching his fingers to his lips with a flat hand and rotating the hand away. \n\nJill and Sarah both signed 'Thank you.' In return. Jordan remembered reading in Megan's notes that 'You're welcome' was the same sign as 'thank you,' and he wondered if they were copying him or replying.\n\nMissy gave the slightest nod and made a sign for which Jordan couldn't remember the meaning, pinched fingers at the corner of her mouth. She turned, and started walking back to the mine, watching Jordan over her shoulder.\n\nHe bundled his clothes, slipping on his shoes, so he didn't cut his feet on the sharp rocks, and followed the three females back to the mine and into the nest. Jordan wanted to get dressed and look up the sign that he couldn't remember, but Missy had other plans. She pulled him naked into the nest, and wrapped both of her arms around Jordan.\n\nHe could feel her shaking, and her hands were still sticky with the blood and velvet off the moose's antlers. She held Jordan tight, protectively. She was spooned behind him, and he could feel her hot breath on his head and neck. She obviously wasn't sleeping. \n\nJill lay on his other side. They lay facing each other, and Jordan watched her wide eyes in the dim LED lantern light of the cave. There was worry and love for him communicated in those big brown eyes, and Jordan felt guilty for having left the mine alone, and for having made the three females leave to rescue him.\n\nJordan could hear the buzzing of his phone across the cavern, but Missy held him tight in an iron grip. She was dominant, his protector, and the leader of the pack. There was no resisting her, so Jordan relaxed in her arms. He wondered who might be calling at this hour. If it was an emergency, he hoped that they would try Kaitlin's cell phone.\n\nKaitlin snored quietly in the nest nearby, and Jordan could hear Ginger's heavy breathing, telling him that the two were still cuddling, blissfully unaware of the battle that had been fought and the danger he had faced. \n\nIt was all over now. He would have to tell her all about it in the morning. \n\nWithin minutes, Jordan could feel the adrenaline receding from his body. A deep tiredness was left in its wake, and it swept Jordan into unconsciousness. \n\n***\n\n\"Oh my god!\" Jordan woke up to Kaitlin's scream. \"Whose blood is that?\" \n\nJordan lifted his head. Missy still held him in her grasp, but her deep and steady breathing told him that she was asleep. He could see faint light coming from the mouth of the cave, it must be morning.\n\nJordan struggled against the massive furry arms holding him tight against Missy's body. She didn't wake, but held on tighter, seeming to pull him against her even harder.\n\n\"Not mine. It's from a moose.\" Jordan whispered, when he realized that he couldn't get up.\n\n\"They killed a moose?\" Kaitlin said a little too loud. Several big bodies stirred. \n\n\"No.\" Jordan struggled again to free himself. Missy finally released him, but she was awake, and sat up as he did. \"They didn't kill it. It attacked me and they saved me.\"\n\n\"From a moose?\" Kaitlin was at the edge of hysterical, and she was waking the sleepers. \n\n\"Shh.\" Jordan said, standing and looking for his pile of clothes. He could see the smeared bloody Bigfoot handprints all over shoulders and thighs, but pulled his clothes on anyway.\n\nJordan nodded his head towards the entrance, and Kaitlin followed, out into the morning sun and onto the flat rock where he was spending so much of his time these days. \n\nJordan told Kaitlin the story, from his phone call with Megan to his midnight swim to his encounter with the moose and how they had saved him. He left out the fear that he had felt. The terror when Missy had roared.\n\n\"Thank god.\" Megan said as he got to the part where Missy had held him all night. \"We have moose in Montana, where I grew up, too. They're dangerous. My dad almost got killed by one once. It killed his dog while he escaped.\n\n\"So the Bigfoot are really as strong as a moose?\" Kaitlin asked in wonder. \"Megan's going to kill you for seeing that and not telling her right away. I wonder what Dr. Stein's going to say?\"\n\nJordan remembered the missed phone call from the middle of the night. He pulled out his phone as Missy came out of the cave to sit with the two humans on their rock. \n\nSure enough, Jim Stein had called at 3:32 in the morning. Jordan tapped the missed phone call, and hit dial. The phone rang several times. \n\n\"Jordan.\" A sleepy voice greeted him.\n\n\"I'm sorry to wake you.\" Jordan said. \"Should I call back later?\" \n\n\"Um... no. No, we received an alert last night that something was amiss. Three heart rates were through the roof and only one of them was exercising enough to cause that. We triangulated their signals and found everyone was home and calming down, so we didn't push the matter, but I'd love to know what happened.\" Dr. Stein said, waking up and sounding more professional by the word.\n\nJordan told him the story of his midnight swim, the moose attack and the rescue by Missy, Sarah and Jill. \n\n\"Wow, that's... unprecedented.\" Dr. Stein said as Jordan finished. \n\n\"I remember you saying that they hunt moose.\" Jordan recalled.\n\n\"Small moose, and as a pack they can bring a young one down.\" Jim Stein said. \"I know Missy's strong, but I've never heard of a Bigfoot taking on a Bull Moose singlehandedly. I wish we had video of that.\"\n\n\"She's still got the antler velvet between her fingers if you want some.\" Jordan offered.\n\n\"No, thank you.\" Jim laughed. \"But when you get the chance, I'd love it if you could write down a blow-by-blow of the fight as you remember it. Every detail in your head while it's still fresh.\"\n\n\"Okay, I can do that.\" Jordan promised. \"Jim... Do you remember that first conversation that we had? About humans and our instinctual fear of the species?\"\n\n\"Vividly.\"\n\n\"Last night, I was cowering on the ground after the moose attacked, and Missy had just jumped into the fray, wrestling that moose back. There was a moment where they were having a staring contest. Missy roared.\" Jordan paused, collecting his thoughts.\n\n\"You were afraid?\" Jim asked.\n\n\"I've never felt anything like that.\" Jordan admitted. \"I actually wanted to run, to fight. I thought she might kill me, even though I knew she was there to save me.\"\n\n\"Very few people alive today have ever heard an unbridled Bigfoot battle cry, and even fewer have been close enough to feel the full effect.\" Jim explained. \"A rattlesnake's rattle, a moose or bear's, or lion's roar - we are programed to feel fear when we hear these. Fear kept our ancestors alive when they faced real danger. An angry Bigfoot's roar is something that we don't learn to fear, it comes pre-programmed. ",
        "\"If your great-great grandfather Enoch had heard that battle cry before he went into the mine, he may have survived to meet his son. Just be thankful that Missy loves you. She would die for you. She's proven that enough now. I think any one of the Bigfoot in the mine feel that way about you.\"\n\n\"Why?\" Jordan wondered. He felt Kaitlin hug him, and Missy put a protective arm around his waist. \"I'm not strong enough to be their alpha. If they keep having to protect me, to rescue me, how am I supposed to protect them?\" Jordan felt a tear form in his eye at his own self-doubt.\n\n\"You do more for them than you know. We knew that the Bigfoot had complex social structures, but we never could have guessed the depth of their... of your relationships, just how human they are. You're special, Jordan. Never doubt your value to each and every one of the women in your life. Human and Bigfoot alike.\" \n\n\"Thanks Doctor.\" Jordan said.\n\n\"That's advice as a friend. Please call me Jim.\" Jim responded. \"And I'm going to move up the timetable on getting you some self-defense lessons. Nothing that would help against a moose, but something to put the female Bigfoots' mind at ease if you get into another situation.\n\n\"I'm going to see if I can get back to sleep now Jordan. I look forward to reading your report as soon as you can get it to me.\"\n\n\"Alright.\" Jordan said, and the two said goodbye. \n\nKaitlin and Missy clung to Jordan in the morning light. Jordan was surprised that Missy was out right now. The Bigfoot would come out sometimes around dawn and dusk, but the sun was well into the sky. \n\n\"Are you hungry?\" Kaitlin asked over his shoulder.\n\n\"Actually, I am. Starved.\" Jordan admitted.\n\n\"Come on. I think Megan left us some eggs in the old cabin.\" Kaitlin said, and led Jordan down towards the cabin where they kept most of their food. To their surprise, Missy left the rest of the Bigfoot behind sleeping in the cave and followed the two humans out into full daylight.\n\n***\n\nBreakfast was freeze dried scrambled eggs, which Kaitlin reconstituted with boiling water. They tasted nothing like the real thing, but Jordan was so hungry that he didn't care. \n\nMissy surprised them both by entering the musty old cabin. The giant had to crouch to fit through the doorway, and once inside, she sat on the wood floor, watching Jordan closely.\n\n\"Why do you think she's acting like that?\" Jordan asked Kaitlin. \"This is her first time inside the cabin.\"\n\n\"She's worried about you. You're family now, and she's been losing a lot of family the last few years. It's only natural that she wants to keep an eye on you.\" Kaitlin replied.\n\nJordan nodded. He didn't feel like he needed the protection, but he was grateful for the loving gesture that he was getting from the matriarch. \n\nJordan stood to wash his bowl once the eggs were gone, and Missy stood too. She made the same sign that she had the previous night: pinched fingers at the corner of her mouth. \n\n\"I meant to look up what that sign means.\" Jordan told Kaitlin. \n\nKaitlin looked to Missy, who repeated the sign. \"Home. She's telling us she wants us to go home with her.\" \n\nJordan rolled his eyes. \"We're not going to get much done on the cabin today if we're holed up in the mine.\"\n\n\"She's worried about you. Let's take a day off. Write your report, check your email and take a nap. We can try to get some work done this afternoon.\" Kaitlin said cheerfully. \"You're not supposed to be working on that shoulder anyways.\"\n\nJordan nodded. He was tired, and could use a rest after the short night of sleep.\n\n\"And let's get that blood washed off of you.\" Kaitlin said, wrinkling her nose at the sight of the sticky brown patches on Jordan's arms.\n\nThe three walked down to the pond. In the daylight, Jordan could see the torn-up earth where Missy and the moose had battled. Jordan was surprised at all the blood on the ground, and even found a few patches of bloody antler velvet. \n\nHe stripped and splashed the cold water on himself, rubbing to remove the blood. Missy copied him, washing the blood off her hands and fur. \n\n\"Can those Fitbits get wet?\" Jordan asked. Pointing at the elastic band on her wrist as she dunked her arms in the water.\n\n\"I think so. They're specially made for the abuse, so they should be water-proof.\" Kaitlin replied. \"They have extra-large batteries, but I know Megan has had to swap them out to charge them at least once now. Everyone but Pebbles and Bam-Bam have been pretty good about wearing them.\"\n\nJordan nodded and got dressed. He allowed Missy to escort him back to the mine. Everyone was asleep, the toddlers tucked into their mothers' arms. Missy crawled into the nest and cuddled up to her sister, Ginger. \n\nJordan took out his laptop. He had an email from the university. He had been assigned an advisor, who wanted to meet to discuss his master's program curriculum. Kaitlin had received a similar email, and they had the same graduate advisor. \n\nJordan responded to the email. There was an available slot Thursday late morning, and Jordan asked to meet with her at that time. Kaitlin asked for the slot immediately following Jordan's appointment.\n\nNext, Jordan pulled up the email from his old job. They had additional projects for him to look over. Two were straightforward, and he found small corrections to his replacement's work. A third project took a little more time, and he had to email a few old coworkers for clarification. In all, he spent about two hours working on his part time job.\n\nHe wrote a complete report of the Bigfoot's fight with the moose, and how they saved him. He even included the details about his gut reaction to their 'battle cry' as Dr. Stein had called it. When it was finished, he emailed it to Jim Stein.\n\nAround noon, Jordan was feeling drowsy, and he crawled into the nest. He found a spot in the nest between Missy and Sarah, and both women seemed to shift unconsciously in their sleep to move closer to him. \n\n***\n\nKaitlin woke Jordan sometime in the late afternoon. She was talking on the phone.\n\n\"It looks like he's coming around.\" Kaitlin said, smiling at the blinking Jordan as he roused from sleep. 'Megan.' Kaitlin mouthed to Jordan when he looked up at her.\n\nHe was back to back with Sarah, and face to face with Missy. As he stood, Sarah woke, and sat up too. \n\nBy unspoken agreement, the Bigfoot seemed to be on protective detail of Jordan. Sarah left Bam-Bam with Missy, and followed the two humans back out of the mine, sitting on the rock with them in the afternoon sun. \n\nJordan expected her to disappear back into the mine, but she stayed, squinting in the daytime sun, her pupils little pinpricks in her big brown irises. \n\nMegan switched her phone to speaker phone. \n\n\"Hey beautiful!\" Jordan greeted Megan.\n\n\"Hi guys.\" Megan sounded worn out and just a little down. \n\n\"Is everything okay? Did you get some sleep after we talked last night?\"\n\n\"No, I'm running on adrenaline and caffeine right now.\" Megan said sleepily. \"I got a call from Jim. I want to hear every detail Jordan. From the moment you and I hung up until you were back in the mine.\"\n\nJordan told the story again. He told Megan about Missy's protective behavior that morning, and finished telling her how Sarah was sitting outside in the evening sun with him.\n\nMegan was quiet for what seemed like too long when Jordan finished his story. \"Megan, are you there?\" He asked.\n\n\"Huh? Yeah. I'm...\" She trailed off. \n\n\"Go to sleep sweetie.\" Kaitlin said, and Jordan agreed.\n\nWhen they had hung up, Kaitlin stood. \"Do you want to work on the cabin now?\" She asked. \n\n\"Kind of. I'm still tired from yesterday, but it's July already, and classes start in a month.\" Jordan said. \n\n\"Come on.\" Kaitlin said. \"You tell me what to do, and I'll be your hands. Let's get a little done before the sun sets on us again.\"\n\nThey stopped at the old cabin for a quick lunch of old bananas and granola bars, and with Sarah in tow, they went to the construction site. \n\n\"Should we work on the cellar so that we can get flooring in place?\" Kaitlin asked.\n\n\"Actually, I kind of forgot about this, but the floor boards I want to use are still living trees right now. We need to cut them so that we can start them drying.\" Jordan admitted. \n\nKaitlin went to the shed and pulled out the chainsaw and protective gear. \"You just tell me which trees, and I'll start cutting them.\" She said with a smile.\n\nJordan spent the afternoon helping Kaitlin cut trees, and remove all branches. They cut dozens of lodgepole pines for the floor boards and exterior siding, and Jordan had her cut aspen for paneling the interior walls and ceiling. \n\nSarah was a big help with dragging trees over to the construction site, easily carrying logs that Jordan and Kaitlin struggled to drag. The Bigfoot barely seemed to exert herself. \n\nBy the time the sun was starting to set, both humans had sweat, dust and sawdust sticking to their skin. They cleaned up tools and stripped naked, skinny-dipping in the chilly pond where Jordan had been attacked just the previous night. Sarah joined them, swimming out to the deepest part, where the water was deeper than she was tall. \n\nShe was a strong swimmer, and Kaitlin and Jordan took turns chasing and racing her across the pond. Sarah was faster than both. Jordan was normally a faster swimmer, but he had to breaststroke to save his shoulder.\n\nThey were soon joined by the rest of the group, even the little toddlers jumped into the pond. They could swim, but had more fun splashing and wrestling in the shallow water along the bank. \n\nJordan was the first out of the water, and the rest of the group soon followed. Wilma came out of the water carrying a large Rainbow trout with its head dangling from its body by a thread, bitten nearly in half. She ate it raw, and Jordan guessed that their appetites were starting to return. \n\nDinner was once again freeze-dried stew, eaten outside of the old cabin. All the females seemed to stick closer to Jordan, and touch him often. He caught little motions of sign language tossed around among the group. Bam-Bam especially loved this new form of communication, and seemed frustrated when anyone didn't understand what he was trying to tell them. Jordan reminded himself that he needed to get up to date with the words that Megan had been teaching.\n\nJordan found a bag of apples, and the Bigfoot passed them around. Even Brutus came over from where he had been grazing nearby and pushed his way through the crowd, looking for a sweet handout. Jordan gave him two, and after eating them, the big silver horse lay down at Jordan's feet where he sat in a folding camp chair. \n\nJordan was a tall man, used to looking over heads when he was among humans. Sitting here with a giant horse laying at his feet, and five huge Bigfoot, he was starting to get a complex about his size. \n\n\"I've seriously never seen a horse act that way.\" Kaitlin said. \"I'm not convinced he isn't the world's biggest dog.\" \n\nJordan reached down to scratch behind Brutus's ears, and he tossed his tail twice, almost reminiscent of a dog's wagging tail. That brought a laugh from Kaitlin. \n\nMissy stood, sucking the last of the juice from her apple off her fingers, and called out with a whistle. The rest of the group stood, and started to run, following their leader downstream, through the trees, and Jordan could hear their calls as they started running up the hillside. \n\nPebbles and Bam-Bam stayed behind, wrestling at first, but then they approached the horse laying at Jordan's feet. They climbed up on his side. Jordan stood ready to catch them if Brutus stood up and knocked them off, but he simply raised his head and let the little bigfoot climb all over him. \n\n\"Aww, he even makes a good family dog.\" Kaitlin joked. \"Ooh. Wait here. I have a surprise.\" She said, and jumped up, running into the cabin. She came back out with two cans of cola.\n\n\"That's your surprise?\" Jordan asked, disappointed.\n\n\"Part of it.\" Kaitlin smiled, and took a hip flask out of her pocket, sloshing the liquid at Jordan. \n\n\"Whiskey?\" Jordan asked, smiling.\n\n\"Moonshine. The foreman on my family ranch makes it. The guys drink it straight, but I always preferred it mixed with a little soda.\" Kaitlin said, opening each can, taking a sip from each to make room, and then pouring from the flask into the cans. She handed one to Jordan, and sat sipping the other.\n\n\"We worked hard today, cutting and dragging trees. We earned this.\" Kaitlin said. \n\n\"Sarah worked hard too. Should we save her some?\" Jordan asked.\n\nKaitlin frowned. \"I asked Megan about bringing beer, and apparently BFRO has a 'no alcohol' policy up here, so this is our secret.\"\n\n\"Why?\" Asked Jordan.\n\n\"Apparently, almost all animals are naturally alcoholics, human included. Megan was telling me that archaeologists have found pieces of the oldest pottery from permanent settlements in caves in Turkey. Do you know what they found on the sherds? Wine residue.\" Kaitlin answered her own question.\n\n\"They also have analyzed skeletons from those regions around the times when humans were first settling down and growing plants. The bodies were wracked with chronic malnutrition. The theory is that the first humans to make permanent settlements didn't settle down to grow crops or herd animals, they settled near grape vines to make wine. \n\n\"Apparently there is a gene which gave some of those early farmers resistance to alcoholism. It was heavily selected for, and may have been the final evolution for the human species. You and I can drink this moonshine, and not crave it tomorrow and the next day, but one or two beers for a Bigfoot, and Dr. Stein is worried that they'll be hooked, doing whatever it takes to get their fix of booze.\" Kaitlin took a little sip of her drink. \n\n\"Wow. Alcoholism runs in my family.\" Jordan said. \"My dad's uncle Ira.\" He looked behind him at the little building. \"The one that built this cabin and left me this land in his will, he was an alcoholic. I wonder if that's genetic, or if that was just from his experience up here?\"\n\n\"How long ago was that?\" Kaitlin asked.\n\n\"That he was up here?\" Jordan thought. \"1973. That was 43 years ago.\"\n\n\"Megan thinks Missy is in her late 40's.\" Kaitlin said. \"I bet she was here when your uncle was here. Maybe it was her father that beat him up. Either him or Ginger's father.\"\n\n\"Don't they have the same father?\" Jordan asked. \n\nKaitlin looked at him. \"You really don't read those reports, do you?\" \n\n\"I read Megan's summary reports, the scientific papers are so dry. I didn't see anything about family trees of my girls.\" Jordan responded.\n\n\"It was in there.\" Kaitlin replied. \"One of the weekly newsletters.\" She looked at Jordan, and had to smile at his expression of embarrassment. \"Okay, so Missy and Ginger are sisters. Jane is Missy's daughter. All the females except for Sarah are related. \n\n\"But no, Missy is older, and her father was not Ginger's father. They actually both have a lot of the markers for the Pacific population of Bigfoot, which they think is where Missy gets her size and Ginger gets her red fur. Jim thinks that their mother was at least partially of the Pacific subspecies of Bigfoot, and that each of their fathers were pure central Bigfoot. Wilma and Jill are pure central Bigfoot subspecies.\" Kaitlin took another sip from her can.\n\n\"Wow. It's amazing that they can tell that much from their DNA. All those family relationships and population stuff.\" Jordan said. He looked down into his can, lost in thought.\n\n\"You're thinking about Jane again, aren't you?\" Kaitlin asked. Jordan just nodded. \"She's going to be fine once they get her back here to us.\"\n\n\"What if the baby's mine?\" Jordan asked.\n\n\"What if it is?\" Kaitlin asked. \n\n\"What kind of life could the little thing have?\" Jordan asked, looking down at the two toddlers pulling on Brutus's mane, and throwing sign language at each other. \"It won't be able to pass for a human; my parents will never get to meet it. \n\n\"It will be half human, maybe nocturnal maybe not. What if it can't keep up with the pack, or needs to eat more often than they do? What if it can't hibernate with them? - If that's even what they do. What if it's furless and they take it out in the cold? What if it's sterile? Unable to ever have a family of its own?\" Jordan could feel the alcohol in his system, and it just added to his emotional state.\n\nKaitlin set her can on the ground, and knelt on the ground. She crawled over to Jordan past the silver horse, and lay her head on Jordan's lap.\n\n\"I know that whatever that baby is, that it's going to be just fine.\" She squeezed Jordan's hand as he started to protest. \"It will be just fine because it has you for a father. It will have Jane for a mother, and Missy will be a grandmother, and it will have more aunts doting on it that it knows what to do with.\n\n\"Whether it's pure Bigfoot or a hybrid, its place is here with its family. All of us.\" \n\nJordan let out a huge sigh, trying not to let the weight of the situation overwhelm him. He understood his responsibility, and he accepted it, but the price of his potential failure was... unacceptable. He would do right by Jane, and by her baby, regardless of its paternity. For a brief moment, he hoped that it wasn't his. That it was pure Bigfoot. That it's place in the world was black and white, not the muddled-gray between human and animal.\n\nJordan held Kaitlin's head, stroking her still-damp locks, gingerly running his fingers through, easing tangles out. \n\n\"Hmm. I love the effect my hair has on you.\" Kaitlin whispered, her head still on his lap. \n\nJordan had been so focused on her long red hair that he hadn't even noticed the sudden tightness in his shorts. His erection was pushing into Kaitlin's cheek, and she was smiling against it.\n\nHer hand came up, rubbing Jordan's bare knee. Slowly, she walked her fingers up Jordan's thigh, under his shorts and boxers until she reached the head of his cock. \n\nFor several minutes, she stroked it, drawing her finger along the top and bottom until she could feel Jordan shaking in anticipation.\n\n\"Mm. I need these shorts off, now.\" She said. \n\n\"What about the kids?\" Jordan asked, looking down at Pebbles and Bam-Bam, who were sitting next to Brutus's head now, trying to feed him leaves and grass.\n\n\"I don't think we've been intimate up here yet when they haven't been present.\" Kaitlin laughed. \"No reason to break that streak.\"\n\n\"But we're babysitting.\" Jordan said.\n\n\"Haven't you ever wanted to fool around on a babysitting job?\" Kaitlin asked, pulling the fabric back enough to expose the head of Jordan's cock. She sucked it into her mouth, and swirled her tongue around the sensitive skin.\n\nJordan gasped, and lifted his hips enough to allow Kaitlin to remove the garment. She pulled hard, taking his shorts and boxers down to his knees in one motion. Jordan's cock sprung free, and she was on it, sucking it deep into her mouth, while one hand held the base.\n\nJordan kicked to get the fabric off his legs, and he lifted his shirt over his head. He resumed running his fingers through Kaitlin's red hair, focusing on the feel of it between his fingers. \n\nKaitlin was a master at blowjobs, not better or worse than Megan, just pleasantly different. She worked her hand and mouth against each other, stretching and compressing Jordan's cock. She toyed with him, racing fast to take him close to the edge before backing him off, slowly stroking him to ease him away. \n\n\"Kaitlin!\" He cried out the third time she teased him away from the precipice of an orgasm. \n\nKaitlin smiled around a mouthful, and stroked him furiously, her hand a blur, and her mouth sucking hard. Jordan came with a deep groan that he couldn't have held back if he tried. His head spun as he filled her mouth, and she accepted every drop, sucking hard to milk the last of it from him. ",
        "As his cock deflated, Kaitlin once again lay her head back on Jordan's now naked lap. \n\n\"Feel better?\" Kaitlin asked. \n\n\"Mmm. Definitely.\" Jordan sighed. \"You're amazing.\" \n\n\"So are you.\" Kaitlin said with a smile. \n\nThe moment was broken when Brutus rolled to his belly with his legs under him, and surged to a standing position. The toddlers, who had been sitting on his neck at the time clung on, and were now hanging from his mane. \n\nJordan and Megan watched as Pebbles dropped to the ground, startled, and Bam-Bam kicked a foot up and seated himself riding bareback on the big horse. He maintained a grasp on the mane, and squealed for joy as Brutus started slowly walking away. \n\nPebbles seemed to decide that she was upset with being left out, and started a pitiful wailing sound. Kaitlin rose off Jordan's lap and scooped the little girl up in her arms, comforting her. \n\nKaitlin watched the silver horse carrying the little Bigfoot boy off into the darkness. \"Sure, he'll let a toddler ride him bareback, but won't even let me on!\" She said in mock frustration. \n\nJordan scrambled to get his clothes back on, and called out \"Brutus!\" \n\nThe horse came back with the squealing boy on his back. Jordan held out his hand and Brutus walked to greet his master. Kaitlin carried the crying Pebbles over to the horse, and set her on Brutus's back behind Bam-Bam.\n\nJordan led the horse around the cabin, up and down a few hills, and finally back to the swath of light from the lantern in front of the old cabin. \n\n\"All done.\" Kaitlin said, and waved her hands in the ASL sign.\n\n'No. More.' Bam-Bam signed, pinching three fingers of each hand together, then bringing the fingertips of both hands together.\n\nKaitlin reached to pull the boy down, and Bam-Bam got a death grip on Brutus's mane.\n\n\"All done. Come on.\" Kaitlin said.\n\nBam-Bam looked up at her with defiance.\n\n\"Bam-Bam. Aunt Kaitlin said 'all done.' Come on.\" Jordan did the sign. The little boy looked up at Jordan with defiance, which quickly melted in Jordan's stern glare. He held his arms out, and Jordan lifted him off the horse. Kaitlin carried Pebbles, and they returned to their seats and their drinks in front of the cabin.\n\nBam-Bam was trying to sign with Pebbles, but she was too young to understand much of it. \n\n\"I wonder what he's saying?\" Kaitlin asked. \"I feel bad that Megan has taught him so much, and that we haven't learned it yet.\"\n\n\"Let's get it on video.\" Jordan said. \"I'm sure Dr. Stein would love to have a sample, and he could probably have someone translate it.\"\n\nJordan pulled out his cell phone and took a five-minute video of the little boy's signs. He had to add the video to his Dropbox account, and emailed the link to Dr. Stein. \n\nMissy and the adult Bigfoot stayed out late for their run. They finally came back sweaty and winded. Missy, Sarah and Wilma collected the two humans and two toddlers and returned to the mine while the other two pregnant females stayed out. \n\nMissy pulled Jordan into the nest again, and held him tight as he fell asleep. Sarah lay down facing him, with little Bam-Bam between them. Both females had spent hours outside the mine in daylight with Jordan and Kaitlin, and they fell asleep early.\n\nJordan was tired from an afternoon of physical labor, and he fell asleep shortly after his bedmates.\n\n***\n\nThe next day was Tuesday. Jordan woke to the sound of Kaitlin talking, and he just caught her leaving the mine as he sat up. He untangled himself from Missy's grasp and walked outside. \n\n\"I'm sorry you missed it.\" Kaitlin was saying. She looked at Jordan's questioning expression and mouthed the name 'Megan' again.\n\nJordan came to sit by her, and was surprised to once again have Missy Join them. It was early morning, and the rock was wet with dew. Kaitlin put the phone on speaker so that they could both talk to Megan.\n\n\"...but fighting a bull moose is more than we would have expected.\" Megan said.\n\n\"Hi Megan!\" Jordan greeted her.\n\n\"Hey Jordan!\" Megan said. \"Sorry to wake you guys. I think I slept almost ten hours last night. I just woke up and realized I fell asleep on the phone last night. I hope I didn't leave you hanging.\"\n\n\"You were fine. We knew you were tired.\" Kaitlin answered.\n\n\"I think I missed the end of your story. Dr. Stein sent me the report this morning. It's pretty amazing stuff. He wrote his own notes and background in the report. \n\n\"The subspecies of Moose we have in Colorado is the smallest in North America. They top out around 750 pounds. We estimate Missy is around 400 pounds. \n\n\"Jim thinks the Moose wasn't trying to push her, but to get under her. If he had, he easily could have lifted her off her feet. Missy must have known that. It was pure luck that his antlers were in velvet this time of year. The velvet is full of blood vessels, and it must have been painful for the moose when she tore that off. \n\n\"Those antlers won't grow anymore above where she tore the velvet, so if we see a bull moose this fall with malformed headgear, that's your attacker. Jim thinks he will find new territory, though, since he lost a fight in your valley.\n\n\"Sorry, I'm rambling. I want to hear how you guys are doing before I need to go to the hospital for today's lesson.\" Megan was talking fast.\n\n\"And we want to hear about your first day!\" Kaitlin said.\n\n\"Not much to tell. The day was mostly paperwork, meeting my preceptors, and watching a bunch of instructional videos. Today I will actually be meeting my first patients, and hopefully see some babies being born.\" Megan sounded excited. \n\nJordan looked at Kaitlin who had a look of disgust on her face. He had to smile at how cute she looked.\n\n\"Sounds like a full day, and you're learning a lot.\" Jordan said. \"Good luck today.\" \n\n\"Oh, I don't need luck. I'm just shadowing and observing.\" Megan said.\n\n\"How's the apartment coming along?\" Jordan asked. \n\n\"Great. I got everything I wanted for you ordered. I really think you're going to like it.\" Megan said with pride.\n\n\"I'm sure I will.\" Jordan said. \"Do you have time to tell me what to expect?\"\n\n\"I really should go. I need to shower, shave, and do hair and makeup. Can I talk to you two tonight?\" Megan asked.\n\n\"Of course. We miss you.\" Jordan said.\n\n\"I miss you guys too. I can't wait for Thursday. I love you both.\"\n\nKaitlin hugged Jordan a little tighter. \"I love you too.\" They both said at the same time. They said their goodbyes and hung up.\n\n\"Hm.\" Kaitlin sighed, leaning into the hug, and then relaxing against Missy who was also sitting on the rock. \"Breakfast?\" \n\n\"I'm a little hungry, but no more freeze-dried meals.\" Jordan said. \"Those things don't taste good enough for that kind of salt, fat and sugar they have.\"\n\n\"Alright. Let's go see what fresh food we have left. Maybe we can make a shopping run today if we're running low.\" Kaitlin offered. \n\n***\n\nIn the cabin, the food stores were indeed running low. They currently did not have enough to feed a Bigfoot feast, and Jordan could tell that a feeding frenzy was brewing. \n\n\"If we go down tonight when Megan gets off work, we can surprise her.\" Jordan suggested, and Kaitlin liked the idea. \n\n\"Let's work up a shopping list.\" Kaitlin suggested. \"My parent's housekeeper, Ileana makes these chicken skewers, where she marinates them overnight in a honey mustard marinade, and my dad grills them up. She taught me how to make them.\" Kaitlin was excited about cooking something fancy, since Megan usually was the chef. \"I can make the skewers if you grill them.\" She offered. Jordan agreed.\n\nJordan pulled out a notebook, and they started a list. \n\nKaitlin found a bottle of dry pancake mix, and added water, making the pancakes on a griddle over a fire. She also found a jar of Jam to eat with them.\n\n\"When do you think we will have a refrigerator up here?\" She asked. \n\n\"I could probably run one on the generator, but that would use up a lot of gas. I'd prefer to wait until we have the solar panels installed.\" Jordan said.\n\n\"Are you going to put the panels on the cabin's roof?\" She asked. \n\nJordan hadn't really thought hard about it. \"No, there's no good reason to put them up there, now that I don't have to worry about the alpha Bigfoot wrecking them. It will be a lot easier to clear snow off the panels or fix them if they're at ground level. I guess I don't need to wait to put those up.\" \n\nMissy sat on the floor of the cabin as Megan cooked, cleaning out a bag of almonds and a bag of potato chips. Her appetite was definitely back, and she was looking through boxes and bags for more, eating a brown banana and a wrinkly apple. She licked the last of the strawberry jam out of the jar when Jordan put it down.\n\nThe morning was spent cutting trees and feeding them into the gas-powered lumber mill. Jordan stacked the cut boards carefully in stacks that would allow them to dry flat and straight, while allowing airflow to dry them. Kaitlin kept cutting trees and removing branches. When Missy refused to leave Jordan's side to join her in dragging the heavy tree trunks, Kaitlin put a harness on Rose and led the horse up and down the hill, dragging her morning's work to where Jordan was carefully feeding the trunks through the mill.\n\nKaitlin put a second harness on Dixie, and used both horses to drag Jordan's enormous Douglas fir trunk over to the construction site. Both horses were sweating and exhausted from the effort, and Kaitlin removed their gear to allow them to rest afterwards. \n\nBy mid- afternoon, the two humans were exhausted and ready to go get food. The timing was perfect, as storm clouds were building over the mountains. \n\n\"How do we get back to the truck?\" Kaitlin asked as Jordan was covering the stacked lumber with a tarp. \n\n\"Horses?\" Jordan stated the only solution. He wasn't up for a six-mile hike to get back to his truck from where they now stood, and Megan had taken the motorcycle back to town.\n\n\"We can't leave them at the trailhead.\" Kaitlin worried. \n\n\"I guess we'll have to take them to town with us in the trailer then.\" Jordan stated the only solution. \n\nKaitlin sighed. \"It seems like a lot of stress on the horses just to take them along for a grocery run. Maybe we should buy another motorcycle or two? So that we don't have to do this again in the future?\" \n\nJordan nodded. \"An ATV might even be better, since we could use it to haul stuff for the cabin.\"\n\n\"Oh, Megan would love that.\" Kaitlin said.\n\n***\n\nJordan called the horses while Kaitlin got the tack from the cabin. Jordan was starting to get the hang of putting the bridle and saddle on Brutus, but Kaitlin tightened several straps, and adjusted the bridle placement in Brutus's mouth when he thought he had finished.\n\nKaitlin suggested that the drive would be less stressful on Brutus if she rode Rose instead, since the two horses had such a close bond. She saddled the black Morgan mare instead of her chestnut.\n\nAn hour later, the horses were settled in the trailer and they were on the road just as the rain turned from a cold drizzle to a heavy downpour. Jordan drove while Kaitlin texted with Dr. Stein about the ATV. \n\nJordan's phone rang. The caller ID showed that it was Dr. Stein. \"Hi Jim!\" Jordan put the call on the truck's Bluetooth system.\n\n\"Hi Jordan. Kaitlin tells me that you're going to buy an ATV?\" Dr. Stein asked.\n\n\"Yes. And I can afford to buy this myself.\" Jordan offered, knowing that Dr. Stein would argue.\n\n\"Actually, I'm afraid you're going to have to.\" Dr. Stein said in a low voice, just above a whisper. \"We're under the microscope here at the moment. Has Megan told you much about the board of directors here at BFRO?\"\n\nJordan remembered Megan's warning, that Jim Stein's job was mostly political, and that if Jane's baby turned out to be half-human, that it would make everyone look unprofessional for Jordan having sex with their research subjects. \n\n\"She mentioned that you've been covering for me over allegations that we're being unprofessional.\" Jordan remembered. \"Thank you for that.\"\n\n\"Jordan, these people are politicians. They'd throw their own mother under the bus for any advantage it gave them. They don't understand the incredible job you've been doing, and they don't seem to care about the relationships that you're building. \n\n\"They are obsessed with the fact that you have a physical relationship with Jane. Some of them aren't waiting for the paternity test. They're already drafting secret legislation that would declare the Bigfoot to be legally human. They want to give them citizenship, hold them legally responsible for their actions under human laws. \n\n\"They believe that if you could pierce the veil of secrecy, we should be able to send in BFRO teams, infiltrate, change and improve all Bigfoot social groups. Jordan, these people aren't scientists. They don't understand. They see a politically expedient maneuver, and they think they should save the Bigfoot by changing and modernizing them.\" \n\nDr. Stein was silent for a long moment, and Jordan wasn't sure what to say. \n\n\"Look, Jordan. There's a good place in Gunnison on Highway 50 called Sun sports. They'll give you a fair price on whatever you need.\" He said. \"Have you sold any of your gold yet?\"\n\n\"No.\" Jordan said. \"I haven't needed to.\"\n\n\"Good. Don't sell any of it.\" Dr. Stein said in a low whisper. \"Who else knows about the gold in your mine?\" \n\n\"I told my parents.\" Jordan told him.\n\n\"Do you trust them?\" Dr. Stein asked cryptically.\n\n\"Of course.\" Jordan said, suddenly worried about where he was going with this line of questioning. \n\n\"Keep it quiet, and save it for a rainy day.\" Dr. Stein said. \"Sun Sports. I'm sorry I can't do more for you right now.\"\n\nThey hung up and Jordan looked at Kaitlin for her reaction. She was just as confused as he was.\n\n***\n\nKaitlin navigated, and they found the place without a problem, parking the long trailer in the gravel lot out front.\n\nAs Jordan got out of the truck, a salesman stepped outside, and his face lit up. \"Good afternoon! How can I help you?\" He asked.\n\nJordan held out his hand to shake, and the salesman took it in a firm handshake. \"Gabe Davidson.\" He introduced himself.\n\n\"Jordan White.\" Jordan returned the introduction. \"We're looking for an ATV.\" \n\n\"We?\" The salesman asked, and Kaitlin came walking around the back of the trailer. She had just checked on the horses. Gabe's voice caught in his throat, and he stared open mouthed at Kaitlin as she came up to where the two men stood. \n\n\"Gabe, this is Kaitlin. Kaitlin, Gabe.\" Jordan introduced them.\n\nJordan was getting a little satisfaction at Gabe's reaction to his beautiful girlfriend, but Kaitlin didn't seem to notice. \n\n\"According to online reviews...\" Kaitlin said, waving her phone. \"... a Polaris Sportsman 570 or 850 would probably serve our needs best.\" \n\nGabe seemed to snap out of his trance, and Jordan noticed with satisfaction that he was blushing a little. \n\n\"Yeah.\" Gabe squeaked, and then cleared his throat. \"Good choice, please follow me.\" \n\nThey test drove several ATVs. They were wider than Jordan had expected, and a lot easier to drive. He would have to widen a few spots of the trail to get the ATV through. They chose a black sportsman 850, and just had room in the horse trailer with only two horses inside. \n\nGabe fawned over them, stealing glances at Kaitlin as he helped them with the paperwork and payment.\n\nAs they drove away, Kaitlin laughed. \"I think Gabe was gay for you.\" \n\n\"What?\" Jordan asked. \"I'm positive it wasn't me he was into.\"\n\n\"While you were test driving the ATV, he was staring at you. He kept asking about you: how we knew each other, if you were my boyfriend, and how serious it was.\" Kaitlin giggled.\n\n\"He was just scoping out the competition.\" Jordan said. \"Did you see his jaw drop when you came around the trailer?\" Jordan asked. \n\nKaitlin continued arguing that Gabe must have been into Jordan. Jordan couldn't understand how she couldn't see the effect that she had on men. \n\nThey kept arguing all the way into the Safeway grocery store. Jordan had to park at the far side of the lot and took up two spaces with his trailer, so they had a long walk to keep arguing. Kaitlin still insisted that Gabe had viewed her as his competition, but Jordan noticed that she walked a little taller, strutting a little. It was a beautiful sight, and drew plenty of stares.\n\nThey split up in the store with two different carts. Kaitlin bought meat while Jordan filled his cart with fruits and vegetables. Kaitlin joined him in the fresh produce section with butcher paper parcels full of meat. \n\n\"I cleaned them out of chicken tenders, so I also bought some beef roasts.\" Kaitlin said a little sadly. \"Maybe once we have a freezer running at the new cabin, we should look into buying a whole cow from a butcher. \n\nJordan pulled out his phone and found several butchers in the area selling whole and half cows, as well as sheep and pigs. The few that had prices seemed very reasonable. He laughed at himself for still being in the habit of watching his money. He was no longer the poor college student, though he still lived that way. \n\nNext they went to the snacks section and bought all the bags of trail mix, dry fruit and nuts that the store had stocked on the shelves. \n\n\"Next time we clean out the other grocery store in town.\" Jordan said when an employee gave them a look over the piles of food he had selected. \"We may not be welcome back at Safeway in the future.\"\n\nFinally, they went up and down the aisles, buying normal sized portions of what they might need for themselves.\n\nThey took their haul through the checkout line. The clerk and bagger's faces both dropped when Jordan and Kaitlin chose their line. \n\n\"You two planning a barbecue?\" The tired woman asked as she started scanning the parcels of meat and sending them down the conveyor belt.\n\n\"No, we're just really hungry.\" Jordan joked. Kaitlin hit his shoulder.\n\n\"We have guests in town, and want to stock up to make sure they've got plenty to eat.\" Kaitlin said sweetly. \n\n\"With a thousand chicken tenders?\" The woman asked, scanning the packages faster now. \"You must be getting ready for the rodeo.\"\n\n\"Oh, I forgot the plastic bags.\" Kaitlin said, and ran off, coming back several minutes later with two boxes of gallon sized Ziploc bags to the clerk's rolling eyes.\n\n\"We're going to need ice too.\" Jordan said. \"Three twenty pound bags should do it.\"\n\n\"Why not.\" The clerk said flatly and scanned something from behind the register.\n\nJordan and Kaitlin took nearly ten minutes filling coolers with meat and ice, and situating the rest of the groceries in the horse trailer and bed of his truck.\n\nNext they went to Ace hardware to buy a second small grill and propane. Jordan found some PVC pipe, and bought all they had along with several connectors. It just barely fit in the trailer, and he felt bad for how crowded the horses were becoming in the small space with the new ATV, groceries and pipes. \n\nFinally they returned to their apartment complex, having to park on the street because of the trailer.\n\n\"What time does Megan get off?\" Jordan asked Kaitlin.\n\nKaitlin gave Jordan a sly grin. \"She should be here around 7. I think we can get her off within 5 minutes of her arrival.\" \n\nJordan laughed at Kaitlin's joke, and the two filled their arms with groceries so that Kaitlin could start marinating the chicken skewers in Jordan's kitchen.\n\nThey arrived at Jordan's door with their arms full to find the door open, and a team of painters inside. Jordan set his cooler and bag down on the front porch and walked inside. All of his furniture was gone, including the TV, and couches. \n\nThe painters were just finishing painting a bold, dark gray color, with white accents on the doorframes. The kitchen they left alone, and Jordan wandered through the apartment, noting the new browns in his bedroom and blues in his bathroom. ",
        "\"Megan...\" Jordan growled under his breath.\n\n\"You did give her free reign on the apartment.\" Kaitlin reminded him. \"Come on. Let's go get the food prep done in my apartment. I never gave Megan permission to redecorate. Hopefully she left mine alone.\"\n\nJordan hefted his groceries into his arms and followed Kaitlin into her apartment. He had only been in here a few times before, since Kaitlin always seemed to come to Jordan and Megan's homes. \n\nIt was sparse but warm, with pillows on the couch and curtains over the window shades. Kaitlin had several framed photos of her parents and her brother, along with his wife and kids. \n\nKaitlin got her red hair from her father. He wore a cowboy hat in several of the photos, and had a long, red handlebar mustache. He had a masculine face with a square jaw, and always seemed to be scowling. Jordan scanned the photos looking for a softer facial expression and decided that he must not have one.\n\nJordan felt arms around his waist, and warm lips on the back of his neck as he studied the pictures.\n\n\"They're going to love you.\" Kaitlin breathed into his ear. \n\nJordan spun around in her arms, and pulled Kaitlin into a powerful kiss. She began to melt into his passion, but then suddenly pulled herself out of it.\n\n\"We have food to prepare, and Megan will be here in... two hours.\" Kaitlin checked her clock. \"Save it for when it's the three of us?\" \n\nJordan nodded, and followed Kaitlin into the kitchen. They mixed marinade, and filled bags with chicken tenders and the yellow honey mustard sauce for the next hour, and then sat on the couch to talk. \n\n\"We should go be waiting in Megan's apartment to surprise her when she arrives.\" Jordan suggested. \"She just hasn't given me a key to get in.\"\n\n\"That's okay.\" Kaitlin said proudly. \"I've got one.\" \n\nThey let themselves into Megan's apartment, and found Jordan's television, dresser and wardrobe in Megan's living room. Everything else was gone. \n\nThey had time to shower together, soaping each other's bodies in Megan's large shower. Jordan tried to kiss Kaitlin, but she kept them focused on getting clean. \n\nAfterwards, they dressed in clean clothes, and sat down with glasses of water. They had only a few minutes to talk before Megan came in. \n\nThey could instantly tell that she had been crying. \"Thank god you two are here!\" She wailed. \"I saw the truck and horse trailer, and thought the universe was playing a cruel joke on me!\"\n\nBoth Jordan and Kaitlin rushed forward and wrapped their arms around her.\n\n\"What's wrong sweetie, talk to us.\" Kaitlin urged. \n\n\"I started my period!\" Megan wailed. \n\n\"That's... horrible?\" Jordan was confused.\n\n\"I... no. I mean normally, it's not.\" Megan was crying, and struggling to find the right words. \"Did you know that I've never held a baby? Before today, that is. I racked my brain, and the only other baby I held was a one-year old that I babysat for when I was in college. \n\n\"I watched a mother give birth today. At first I was horrified, I thought she was going to be in so much pain, but she was so happy, so at peace. Just an hour after pushing it out, she had this smile on her face... I was so jealous. She let me hold her baby. It smelled like... It was just so... I wanted it. I've never wanted anything that bad. \n\n\"I mean... I wanted you both, but I needed that baby. I got hopeful then. I haven't been on birth control lately, I couldn't remember if I was late for my period, but when I went to the bathroom and... I knew that I wasn't pregnant, I've never felt that empty before!\" Megan started crying again. \n\nJordan knew that she was experiencing a rush of hormones, but the intensity with which she was expressing her emotions gave him pause. They had talked about this before; talked about a future together; talked about starting a family.\n\nSeeing Megan's emotions on the matter was something else entirely. Jordan was ready for fatherhood, as ready as he could be. But something about consciously trying to get his girlfriend pregnant still seemed... wrong. \n\n\"Megan...\" He started. \n\n\"Don't!\" Megan interrupted him. \"Don't promise me something you're not ready to deliver, and don't tell me that we're not ready. Just... just let me cry. I know I'm being crazy!\" \n\nKaitlin helped Megan to the couch, and Jordan got her a glass of water and a box of Kleenex. \"Do you have something stronger?\" Megan asked, accepting the water.\n\n\"I might, in my apartment...\" Jordan said with a smile.\n\n\"Oh! Crap! I almost forgot!\" Megan stopped crying. \"You weren't supposed to be back for another day and a half!\"\n\n\"Megan, where's all my furniture?\" Jordan asked. Megan waved to the dresser and television. \"And the rest?\" \n\n\"You said that those were the only important things!\" Megan said meekly, hoping he wasn't angry. \n\n\"And did I give you permission to paint?\" Jordan faked an angry look.\n\n\"The walls were beige!\" Megan argued. \"You want your parents and Kaitlin's to see you as a sophisticated adult! Adults paint their walls!\" \n\n\"Relax babe!\" Jordan hugged her. \"I like the paint.\" He laughed at her softening expression, slowly turning into a smile.\n\n\"Just wait until you see the rest of it. All the furniture will be here tomorrow. Are you guys staying?\" Megan asked.\n\n\"Only for a few more hours, we need to get back to the horses. We needed food, and wanted to see you.\" Kaitlin said.\n\n\"You were going to seduce me, weren't you?\" Megan asked with a smile. \"Oh, I'm sorry guys, I just don't feel sexy right now! But you have no idea how good it felt to not come home to an empty house. I feel so much better.\"\n\nJordan and Kaitlin were on either side of her, and they both hugged their girlfriend.\n\n\"How about dinner?\" Kaitlin suggested. \"You can tell us about the rest of your day.\" \n\n\"Sounds great. Can we eat out?\" Megan requested. \"I'm too tired to cook.\" \n\nJordan nodded. \"Go get a shower, and we'll find a place. Any requests?\" \n\nMegan stood, stripping her shirt off slowly for her two lovers as she disappeared into the bathroom. \"Mexican? Chinese? No, Pizza!\" \n\nJordan pulled out his phone, and was busy finding a place when Megan's phone rang. She came out of the bathroom naked except for a pair of panties. \n\n\"Oh, it's Dr. Stein.\" Megan accepted the call. \"Hey Jim... Actually they're right here with me. They decided to surprise me... no, we haven't had time to catch up. Hold on.\" Megan put the phone on speaker, and knelt on the floor across from where Jordan and Kaitlin sat on the couch.\n\n\"Hi Jordan, Hi Kaitlin.\" Dr. Stein greeted. \"I've had several people working on Bam-Bam's sign language video that you sent us. Overall he shows an incredible understanding of language for a beginner. At first glance, it actually looked like his hand symbols were almost half gibberish, but he repeated certain signs so much. We actually were able to decipher most of them. \n\n\"He was really excited about the horse. That palm out gesture must mean horse. 'Pebbles' is the pinched finger gesture, like he's saying she's small. \n\n\"Megan, I wanted to tell you first. This is beyond anything we expected of you when we asked you to teach sign language to the pack. We are looking forward to you getting back up there and teaching more. I would encourage all three of you to brush up on your sign language. We're going to push some ASL programs onto your tablets to help you learn.\" Dr. Stein was excited, but Jordan could still hear the weary stress in his voice. It sounded like this had been the highlight of his day.\n\nThey all thanked him. Megan promised that once human family left town that she would return to pick up lessons once again. Dr. Stein promised to send them a copy of the video with subtitles, including the correct signs, and the ones Bam-Bam was making up, with their presumed meanings. \n\nMegan showered, while Jordan and Kaitlin sat on the edge of the sink and talked with her. \n\n\"Oh, Jordan has a new admirer!\" Kaitlin teased. \n\n\"Really?\" Megan smiled through the glass shower door, water running through her hair. \"Who is she?\" \n\n\"He!\" Kaitlin laughed.\n\n\"Kaitlin has it backwards.\" Jordan laughed. \"The salesman at the power sports store was awestruck by her beauty, and couldn't come up with a better pickup line than to ask about her boyfriend. Kaitlin, one of the things I love about you is that you don't even know how beautiful you are.\"\n\nMegan nodded as she lathered shampoo into her hair. \"Wait, power sports!?\" \n\n\"Yeah, we bought an ATV.\" Kaitlin said. \"And tons of food.\" Megan let out a little squeal of excitement.\n\n\"But seriously, though. You don't know the effect you have on men, and certain women.\" Jordan said, tossing his head towards Megan. \n\n\"You flatterer!\" Kaitlin grew a little pink. \"I could say the same about you. Jordan, would you even know if someone was hitting on you?\"\n\n\"Yeah, it happened last week.\" Jordan said confidently.\n\n\"When!?\" Both women asked at the same time.\n\n\"When I was in the hospital, visiting Jane. The nurse on duty was trying to seduce me over the unconscious body of my Bigfoot girlfriend.\" Jordan said.\n\n\"Wait, why are we only hearing about this now?\" Megan was trying to rub the shampoo out of her eyes to look at Jordan.\n\n\"I didn't think it was relevant.\" Jordan said.\n\n\"How do you know she was hitting on you?\" Kaitlin asked. \n\n\"She kept asking if I had a girlfriend, and when I said yes, she asked if I had an open relationship.\" Jordan remembered.\n\n\"What did you tell her?\" Megan asked seriously. \n\n\"I told her that I had two girlfriends, and our relationship wasn't open.\" Jordan was beginning to sense anger coming from Megan.\n\n\"Okay, so why didn't you tell us about this before?\" Megan asked.\n\n\"Would it have mattered? Nothing happened... Well, she did come into the bathroom while I was showering, but I covered up with a towel.\" Jordan knew he was digging the hole deeper, but hoped that honesty was the best policy. Megan cracked a smile, and then forced it off her face.\n\n\"Jordan, I wouldn't have minded if you fucked her right there on Jane's hospital bed. I don't speak for Kaitlin on this, but the same goes for you, lady. What I mind is when something happens, and you don't feel like you can or should tell me about it.\" Megan looked serious. \"Thank you for being honest finally. Is there any more to the story we should know?\"\n\n\"Um... no. Well, I think she might have stolen my underwear.\" Jordan remembered.\n\nBoth women burst out laughing. \"What was her name?\" Megan asked.\n\n\"Nicole.\" Jordan answered. \n\n\"Was Nicole hot?\" Megan asked. Jordan nodded. \n\n\"Would you... give in to her seductions the next time you visit Jane?\" She asked.\n\n\"No!\" Jordan said. \"I have two girlfriends. You two are enough for me. All I need.\" Kaitlin smiled a little at that. She had been quiet, not taking either lover's side.\n\n\"Something you want to add Kaitlin?\" Megan asked. \n\n\"I... I'm so happy with both of you, but I'm still adjusting to the idea.\" Kaitlin said, frowning. \"I'm not saying never, but for now, can it just be the three of us? No strange women... or men hooking up?\" \n\nMegan's smile faded and she looked serious. \"Not a problem for me. Jordan?\" \n\n\"No. Wait, Bigfoot don't count as hooking up with strange women?\" Jordan asked.\n\n\"Of course not, we've been over this. I love seeing you with them, especially my girl Ginger. She totally dominated you.\" Kaitlin laughed.\n\n\"Only after I dominated you.\" Jordan said with a smile.\n\nMegan made a frustrated sound. \"Guys! If you're going to have fun without me, at least get it on video or something! I leave for a few days and miss out on all the best stuff!\"\n\n\"Oh, we're definitely doing that again!\" Kaitlin said, sliding her hand along the counter until she grabbed Jordan's butt. \"And again.\" She squeezed. \"And again.\" She squeezed again. Jordan pulled her into a kiss, his hands winding up on Kaitlin's beautiful ass.\n\nShe melted into the kiss, breathing heavily through her nose as her lips pressed into his, warm and full of love. \n\nThey broke away when they heard Megan let out a little whine, both looking at her in the shower. She was rubbing her pussy, eyes locked on the two. She quickly dropped her hand when she realized she had been caught staring. \"All clean!\" Megan said, and turned off the water. \n\n***\n\nKaitlin and Jordan checked on the horses in their trailer before joining Megan in her jeep. Dinner was pizza at a local restaurant called Pie-Zan's. The atmosphere was quiet and casual. Megan and Kaitlin both partook of a bottle of wine, though Jordan had a long drive back ahead of him, and abstained from drinking. \n\nMegan said nothing more about her day beyond the description of watching a baby being delivered, and the postnatal care she observed. She was supposed to witness a second birth, but the labor was still ongoing when her day ended, and she left without seeing it through. She felt guilty for hoping that the labor would last through the night, and that she would get there in time to witness the birth in the morning. \n\nJordan and Kaitlin filled her in on the progress on the cabin. Jordan re-told the story about the moose attack, speaking quietly on the details about the Bigfoot, so that none of the other patrons would overhear. Kaitlin shared the details of Jordan dominating first Wilma, and then her, and then being dominated by Ginger. Jordan felt like he was intruding on something special as the two women giggled about sexual details and fantasies.\n\nJordan drove the two tipsy women back to Megan's apartment, where they shared a long and tearful goodbye. Megan was in much better spirits as they left than when she had arrived. She made no more mention of wanting a baby, and Jordan was grateful to put off that discussion.\n\nKaitlin was quiet on the drive back up the mountain. After twenty minutes, Jordan broke the silence. \n\n\"Penny for your thoughts?\" \n\n\"Oh, I'm just...\" Kaitlin frowned. \"Our conversation in the bathroom was... different. I never thought I'd be in a relationship with a woman. It felt so natural asking for fidelity from you, but asking Megan felt... old fashioned.\"\n\n\"Do you think Megan should be allowed to sleep with other people?\" Jordan asked.\n\n\"NO! I mean... It's making me think why I want you to be faithful. I love watching you and Megan together, and watching you wrestle Wilma and Ginger... So hot!\" Kaitlin gave a little involuntary shudder. \"I don't want an open relationship, where anyone can sleep with everyone they want, but why is it so much more important to me that you stay faithful than Megan? \n\n\"I think on some level, I still haven't accepted Megan as a full romantic partner the way I have with you.\" Kaitlin answered her own question. \"And when she started talking about having a baby with you... That's such a major bond. \n\n\"I love you Jordan. I'm serious about our relationship, but that's not a leap I'm ready for. I have two years of school, and I want to get myself established in a career. I'm not ready to be pregnant or be a mother.\"\n\n\"I'll be honest, the idea of having a baby with Megan scares me a little too.\" Jordan said.\n\n\"But you're having a baby with Jane.\" Kaitlin riposted.\n\n\"I don't know it's mine for sure.\" \n\n\"But you promised you are going to raise it as its father. Regardless of whether it's yours or pure Bigfoot, you're going to be its dad.\" Kaitlin said.\n\n\"I know. And I will. That doesn't mean it's not going to scare me, though.\" Jordan said soberly. \"It's a huge commitment. A lifelong commitment. To be responsible for that little life...\"\n\n\"But it's one that Megan's ready for. She's ready for it with you.\" Kaitlin was silent a moment longer. \"Can we do this? Can the three of us stay together? Become a family? With the Bigfoot included?\" \n\nJordan took his right hand off the steering wheel and took Kaitlin's \"We already are. One big crazy, mixed species family. What are you really worried about? That if Megan and I have a kid together that she'll become my one and only and you'll be second string?\" \n\nKaitlin slowly nodded. \"Something like that, I guess.\" She said sadly.\n\nJordan brought her knuckles up to his lips and kissed Kaitlin's hand. \"I will always love you. We each have our roles in this family that we're building. I'm not the only one that needs you, either. Megan loves you. Ginger loves you. In time, I promise you will find a relationship with each of the Bigfoot.\" Jordan took his eyes off the road for just a moment to see that Kaitlin was smiling despite the wet streaks running down her cheeks.\n\n\"You always have the right things to say.\" She said with a chuckle. Jordan just smiled at her.\n\n***\n\nThe sun was low when the two parked the trailer. The rain had long since stopped, but the road was muddy and wet. Jordan unloaded the ATV first, and Kaitlin saddled the horses. He loaded it down with coolers, bags and finally slung the PVC pipes across the front and rear racks. They hung off the front and back by several feet. \n\nA mile down, the trail narrowed up a steep incline, and Jordan was forced to park the ATV where he could go no further. Two trees left just enough room for a rider on horseback, but one would have to be cut down to maneuver the ATV through. He climbed onto Brutus's back, and followed Kaitlin back to the construction site of the new cabin. \n\n\"If you can gather stones and wood,\" Jordan suggested \"I can go get the ATV unstuck. Get a large bonfire going, and by the time I get back, the coals should be ready for cooking.\" \n\nKaitlin nodded, and began building a large stone fire circle. Jordan pulled the chainsaw out of the shed and climbed back on Brutus's back. \n\nIt was over an hour by the time he returned on the ATV with Brutus following obediently behind. Jordan pulled up and immediately began unloading the coolers full of meat off of the ATV. Kaitlin's bonfire was red hot, and starting to die down to coals in places. \n\nIt was pitch black, but once Jordan turned off the ATV's headlights and let his eyes adjust to the low firelight, he saw seven pairs of eyes twinkling at him from a distance. \n\nJane had gotten over her fear of fire. When she was injured and alone, cowering in the cabin alongside Jordan, riding out the rage from the Alpha, she had found comfort in its warm glow. She wasn't here now, and none of the other Bigfoot seemed to accept the open blaze that Kaitlin had started. \n\nJordan and Kaitlin worked together to wrap the big roasts in aluminum foil, spraying each with cooking oil. They nestled them carefully in the hot coals, burying the meat in the glowing ashes. Once all the meat was cooking, Jordan pulled out both grills and began working on Kaitlin's marinated chicken as she pushed bamboo skewers through the meat. \n\nDespite the small cooking surface, the chicken tenders cooked fast, and Jordan piled an aluminum baking pan high with the white meat. \n\nThe smell of the cooked chicken was enough for Missy to overcome her fear, and she approached slowly, never taking her eyes off the fire pit, now glowing low red. She tentatively picked a juicy skewer of chicken off the pile and popped it whole into her large mouth, taking a few chews before she removed the stick. \n\nIt was quickly followed by a second and then a third, and then a handful. The rest of the Bigfoot saw their matriarch stuffing her mouth, and approached. Kaitlin pulled out plates, and divided the pile, making sure that each female got her share as they came off the grills.\n\nOnce the chicken was gone, Jordan checked one of the roasts in the fire. It was still raw inside, but he turned to wipe off his knife, and the meat was gone when he turned back around.\n\nSarah was the thief. She only had the chance to eat one bite before Wilma took it from her by force. Wilma got one bite before Ginger took it, and not even Missy seemed interested in fighting her for it. "
    ],
    "authorname": "bobalous",
    "tags": [
        "bigfoot",
        "colorado",
        "jordan",
        "mountains",
        "monster"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/monsters-in-the-mountains-ch-04"
}