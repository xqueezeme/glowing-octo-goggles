{
    "title": "Reflections on Ice Ch. 03",
    "pages": [
        "Cassia wanted to whither up and die.\n\n\"Jesus, Cass. You're white as a sheet.\"\n\n\"The black is doing nothing for your complexion.\"\n\n\"Maybe the wrap will make it better?\"\n\n\"Have you got the shoes on?\"\n\nEach of her friends shifted around her, straightening the black dress and fussing over her. She hated it. She wanted her jeans, a sweatshirt, and flat shoes. Heels were the enemy but she knew Vivian would never let her get away with wearing flip flops to the wedding, even if they were black.\n\nThe bride-to-be stepped up on the little podium with her and brushed Cassia's hair back from her face. Vivian lifted the sheer wrap and pulled it around Cassia's shoulders, arranging it in some kind of wide knot in the middle of her chest. She stood back and studied the result.\n\n\"Are we done yet?\" Cassia couldn't hide her annoyance.\n\n\"Come on, it's not that bad.\" Vivian smiled at her and stepped down, joining their other friends in their scrutiny. \"Although, you might want to consider some tanning before the wedding.\"\n\n\"You could get a spray tan the week before.\" This suggestion from Janis, the ever-helpful maid of honor.\n\n\"I'm not going to fake tan or spray tan or any tan.\" Cassia crossed her arms over her chest and glared at her friends. \"I love you, Viv, but I have to draw the line somewhere.\"\n\nVivian waved a hand. \"Fine. We can get the make-up lady to do something with your d\u00e9colletage, maybe make the contrast less severe.\"\n\nOr, you could let me be a guest instead of an attendant. But Cassia didn't say it out loud. She knew it meant a lot to her friend to have her and the other three standing up with her at the wedding. So she stood there, shivering a little in the flimsy dress and wishing the fitting was over.\n\nIt had been two weeks since the last fitting, and the shop had finished with two of their dresses, Cassia's and Olivia's. Olivia's had fit perfectly, her naturally darker complexion a beautiful match to the black dress.\n\n\"Turn around, Cass. Let's see what it looks like now.\" Carol lifted a hand, twirling a finger at Cassia.\n\nWith a frown, Cassia turned, keeping her balance with no little effort. She gave them her back and eyed herself in the three-way mirror. She had to admit the dress wasn't all that bad. It was a flattering shape, with a cinched, tight waist, and a long, flowing skirt that swished around her long legs whenever she moved. The bodice was snug from bosom to just above her hips, and after being fitted to her measurements, didn't gape over her less-than-average bust as it had during the first fitting. Wide straps held everything up, wider at the top and tapering over her shoulders in the back to narrower strips where they met just below her shoulder blades. It was a good thing everything was so tight up top, as she wouldn't be able to get away with wearing a bra. The dress showed too much skin in the back, and swooped way too low in the front.\n\nCassia glanced down at her bust and sighed. She hadn't shown this much skin in her entire life. Prom, Olivia's wedding, every special occasion in between, she'd been able to get away with higher necklines than this black dress had. She didn't do evening attire. She wore coveralls and jeans, and that made her happy even if it did make her stand out from her friends.\n\n\"It looks really good.\"\n\nCassia turned again, facing her friends as Vivian spoke. The bride-to-be was smiling and clasped her hands together under her chin.\n\n\"It's going to be amazing,\" she went on. \"Me in my dress with the black lace at the bottom and you all in black with me.\"\n\nCassia smiled at last, glad her friend was happy. It was an agony to try the dress on, and totter around in heels, but Vivian was one of her oldest friends and she would do anything for her friends.\n\n\"Can I change now?\"\n\nVivian nodded, and Cassia eased off the little platform, heading for the change room after Janis unzipped the dress in the back. She listened to her friends chattering away outside the room and sighed.\n\n\"How's Troy doing with the groomsmen?\" Carol asked.\n\n\"Great. He told me they found great suits with white ties that match the swatch I gave him.\"\n\n\"You're really going to stand out, with all the wedding party in black, and you in your white dress.\"\n\n\"That's the idea.\"\n\nThe girls shared a laugh as Cassia hung the dress on the hanger. She turned and pulled on her regular, relaxed, comfortable clothes with a happy smile.\n\n\"Who are all the groomsmen, again?\" Janis asked.\n\n\"Well, you know Howie is the best man. Then there's Troy's brother Adam, his cousin Zach and a friend of his from college, Tyler.\"\n\n\"Who are we paired with?\"\n\n\"I haven't decided yet.\"\n\nCassia finished dressing and walked out of the change room. Her friends turned to her with smiles and she handed the black dress off to the lingering bridal shop employee.\n\nVivian turned to the woman. \"We'll be back next week sometime for the other two, and take them all together then.\"\n\n\"Sounds good, miss. Have a good night.\"\n\n\"Thank you.\"\n\nTogether, the bride-to-be and her bridesmaids, gathered up their coats and purses, and headed for the door.\n\n\"Where should we eat?\"\n\n\"I feel like Italian. How about Chianti's?\"\n\nCassia trailed a half-step behind her friends as they discussed where to go for dinner. She zipped her jacket, her mind half on dinner and half on the wedding. She was running out of time. How was she going to meet someone and get to know him well enough to ask him to the wedding without seeming like a total basket-case?\n\n\"Cass? You all right?\"\n\nCassia looked up as Janis fell into step beside her. She smiled at her friend and shook her head. \"I'm fine. Just tired, I guess.\"\n\n\"You're working too hard.\"\n\nCassia let out a short laugh. \"Hardly. My dad makes all of us go home before we put in too many hours and threatens our lives if we try to work on our days off.\"\n\nJanis nodded with a smile. She'd known Cassia and her family long enough to understand. \"Well, maybe you just need to get laid.\"\n\nCassia stumbled a step, making Janis laugh and grasp her arm to help straighten her.\n\n\"Why else do you think I told you about Tapley's First Impressions?\"\n\n\"You wanted me to find someone to sleep with?\"\n\n\"Well, you're not going to find anyone at the garage with your dad and brothers looking over your shoulder every minute of the day.\"\n\nCassia shook her head. \"I can't believe you.\"\n\n\"Oh, please.\" Janis took her arm as they continued to follow their friends up the street. Chianti's, Olivia's suggestion, was only three blocks ahead. \"I know you haven't been with anyone since Alex.\"\n\n\"That doesn't mean anything.\"\n\n\"I see the way your face scrunches up whenever we talk about the wedding.\" Janis squeezed her arm. \"You're worried about going alone, aren't you?\"\n\nCassia tried to deny it, but Janis was her closest friend out of all of them, and more observant than the others. \"Fine. Of course I am. Who wants to be alone at a wedding?\"\n\n\"Some people think it's the perfect place to meet someone.\"\n\n\"Yeah, except I've known most of Vivian's and Troy's families and friends my whole life. Some of them are even related to me.\" Cassia turned a wry smile on her friend. \"Not exactly ideal conditions for meeting someone.\"\n\n\"Good point.\" Janis sighed and they walked in silence for a few minutes. \"You never did tell me how it went at Tapley's that night.\"\n\nAn image of Dylan's crooked smile and cute blushes immediately came to mind. She refused to meet her friend's eyes as heat washed over her cheeks.\n\n\"Oh my God.\" Janis pulled her to a stop. \"Did you meet someone?\"\n\nOf course, the other three overheard and spun around.\n\n\"What?\" Vivian rushed back to Cassia's side. \"You've met someone?\"\n\nCassia went hot all over with embarrassment. How was she going to spin this now? \"Not exactly.\"\n\nCarol and Olivia hurried over. \"What's his name?\" Olivia asked.\n\nCassia looked between all four faces and wanted to disappear. She'd never been good at lying, especially not to her four closest and oldest friends. \"Dylan,\" she heard herself saying, thinking she was making a mistake telling them anything at all.\n\nThe other four exchanged a look before squealing and jumping around. Cassia couldn't help but laugh as they all pulled her forward, continuing on to the restaurant. They peppered her with questions, only half of which she heard, the rest of the way to Chianti's. After they were seated at a table, the women faced Cassia with expectant looks.\n\n\"OK, so we know his name is Dylan.\" Vivian leaned forward, her eyes avid. \"What else?\"\n\n\"Is he cute?\"\n\n\"What does he do?\"\n\n\"How did you two meet?\"\n\nCassia exchanged a look with Janis, who came to her rescue, explaining about Tapley's.\n\n\"Oh wow.\" Carol grinned. \"I never would have thought you'd give something like that a chance.\"\n\n\"Why not?\"\n\nCarol shrugged. \"You're just more comfortable talking to men across the engine block, not a table in a bar.\"\n\nCassia rolled her eyes. \"Yeah, well, I figured I didn't have anything to lose.\"\n\n\"OK, OK.\" Olivia waved a hand. \"Back to this Dylan. You met at Tapley's and you've been seeing him since?\"\n\nCassia lifted one shoulder and shook her head. \"Not really. I mean, we've spoken a few times but haven't really gone out.\" None of which was a lie. She had spoken to Dylan a few times since they'd met, and they hadn't gone out. Somehow though, she knew it sounded like there was more to it.\n\n\"Well, this is incredible.\" Olivia reached across the table to clasp Cassia's hand. \"I knew you'd meet someone if you just put yourself out there.\"\n\n\"Totally. You needed to get out of the garage and meet people.\"\n\nCassia scowled, not enjoying the way the conversation had turned.\n\n\"I mean, it's not like you had the college experience, which is how we all met our men.\" Carol exchanged looks with their nodding friends.\n\nCassia turned to Vivian. \"You met Troy in high school.\"\n\n\"Yeah, but we didn't really connect until I came home after my third year.\" Vivian smiled. \"And I ended up breaking up with my college boyfriend to be with Troy, but I never would have known how great Troy is without having gone through what I did at Auburn.\"\n\nThe others nodded at Vivian's assessment. They'd all discussed it often enough. Cassia sighed and sat back in her seat, saved from having to make any other comment when the waiter appeared to take their drink orders.\n\nAfter he was gone, they turned their attentions to the menu, and Cassia was relieved at the change in conversation. She disliked discussing her romantic life as much as she disliked talking about her 'lack of college experience.' Most days, she didn't care that she'd never gone somewhere, since she'd never seen the point in going to school, just to go, accruing whatever amount in debt, and never know what she wanted out of it. But there were times, usually when someone else pointed it out, well-meaning or not, that she wished she'd made a different choice.\n\nI can't go back and change it now. Cassia turned her focus to the menu, trying to pick something to eat.\n\nHer reprieve was short-lived. After they'd eaten most of their dinners a short while later, Carol turned to Cassia and asked again about Dylan.\n\n\"You still haven't told us much about him.\"\n\nCassia shrugged. \"There isn't much to tell. I don't know him that well yet.\"\n\n\"We know his name is Dylan, and he was desperate enough to try speed dating.\"\n\nCarol's tone was teasing but Cassia was tired and annoyed.\n\n\"Desperate like me?\"\n\n\"No, you were never desperate, Cass.\" Janis patted her hand, while shooting Carol a pointed look.\n\nCarol shrugged. \"I just want to know more about this guy, especially if she's going to be bringing him to the wedding.\"\n\n\"I haven't said anything about taking him to the wedding.\"\n\n\"Well, you can't go alone.\"\n\nA silence fell over the table at Carol's pronouncement. To her other friends' credit, they seemed as unhappy with Carol's words as Cassia.\n\nVivian shot Carol a dirty look before leaning her elbows on the table. \"Listen, Cass, you don't have to bring a date. I hope you don't think I was trying to force that on you for my wedding.\"\n\n\"You didn't.\" Cassia sighed and brushed her hair off her face. \"Can we please talk about something else?\"\n\nAfter a moment's hesitation, they agreed and conversation turned to scheduling for the bachelorette party and the bridal shower. Dinner ended a short while later, and they filed out of the restaurant, lingering on the sidewalk for a few minutes before they headed to their vehicles.\n\nCarol and Olivia headed in one direction, arm-in-arm, and Janis got a call before waving and crossing the street towards her own car. Left alone with Cassia, Vivian smiled and reached out to give her a hug.\n\n\"I'm sorry for what Carol said before.\"\n\nCassia patted her friend on the back. \"Don't worry about it, Viv. I know you don't want me bringing some random guy to the wedding.\"\n\nVivian pulled back. \"It's not that. Not unless some random guy turned out to be totally hot and worthy of you.\"\n\nCassia laughed. \"Thanks.\"\n\nThey turned and started to walk down the sidewalk, heading for the parking lot they'd both parked in, closer to the bridal shop.\n\n\"Is Dylan totally hot?\"\n\nCassia grinned at her friend's hesitant question. \"He's very nice-looking, yes.\"\n\nBeside her, Vivian squealed and smacked her arm a couple times in her enthusiasm. \"I knew it. What else?\"\n\nCassia hesitated, still not liking that she wasn't telling the whole truth. For all she knew, she'd never see Dylan again. And yet, she found herself telling Vivian about him, his shy and quiet manner, his politeness and sense of humor, understated as it was.\n\n\"I think he sounds sweet.\" Vivian stopped at the intersection before the parking lot and turned to Cassia with an excited expression. \"I know. Why don't you ask if he can come to the cookout?\"\n\n\"What cookout?\"\n\n\"The meet-and-greet we're having at our place.\"\n\nCassia recalled now that Vivian had planned to have both sides of the wedding party meet up prior to the big day, so everyone could be introduced and get to know each other, or get reacquainted.\n\n\"I don't know.\"\n\n\"It'll be really relaxed, no families, just the wedding party and boyfriends and girlfriends and all.\"\n\nThey started walking as the light changed and Cassia agreed that it would be a laid back affair, and a good opportunity to introduce a potential boyfriend. Except... Dylan wasn't even that.\n\nWith a sigh, Cassia shook her head. \"I don't know, Viv. I mean, I just met Dylan. The whole wedding thing might be too much, too soon.\"\n\nVivian's expression fell but she nodded. \"Well, think about it. Maybe run it by him and see what he says.\"\n\nCassia didn't know if she'd ever have the opportunity to, especially after the way she'd acted last time they'd spoken, but she nodded anyway.\n\nThey arrived at the parking lot, exchanged a hug, and waved as they made their way to their vehicles.\n\nAs soon as Cassia slid into the driver's seat, she decided she needed pie. Pie and a good cup of coffee. Maybe even some advice, if Sally wasn't busy. At this point, she might even take advice from Kyle.\n\nWith a smile on her face, she turned the key in the ignition and headed off. She parked her car at home and walked the short distance to the Lone Star Diner. As the bell rang overhead when she walked in, she looked around. It wasn't late, but there weren't that many people sitting at the tables, or along the counter. However, there was one familiar face down at the end.\n\nWhat the hell? It was as if all that talk of him at dinner had summoned him.\n\nCassia walked down the aisle and slid onto the stool next to Dylan Samuels. He looked up from his half-eaten slice of pie and his eyes widened at the sight of her.\n\nCassia gave him a narrow look, even as her heart pattered into a quicker rhythm. \"This is starting to get weird.\"\n\nDylan smiled. \"It's your fault. I can't get enough of this pie.\"\n\nCassia pulled her jacket off and smiled at Sally as she came to pour her coffee.\n\n\"Be right back with your pie.\"\n\n\"Thanks, Sall.\" Cassia wrapped her hands around her mug and eyed Dylan out of the corner of her eye.\n\nDylan resumed eating his pie, ignoring her for the moment. She watched his jaw working as he ate, saw the way the tips of his ear had turned pink at her appearance. It made her smile and she hid it behind her mug as he glanced her way.\n\n\"Rough night?\"\n\nHis question startled her and she set her mug down, shaking her head. \"No, why?\"\n\nHe shrugged, scraping up the last bite of his pie. \"You seem to come here whenever you need a pick-me-up.\"\n\nCassia hadn't really thought about it, but she supposed it would seem that way to Dylan. While she normally visited the diner at least three times a week, she had always run into him after some episode that required a pick-me-up, as he'd put it.\n\n\"Here you go, darlin'.\" Sally set a plate in front of Cassia. \"It's pecan today.\"\n\n\"Sall, I could kiss you.\"\n\nSally laughed and walked away, leaving her to the pie. And Dylan. She dug in, only growing self-conscious after the first few bites. Dylan didn't speak, just sipped his coffee, and he kept his eyes on the television in the corner.\n\nAfter she was done, Cassia pushed the plate away and looked up to see what he was watching. It was an educational show of some kind, with two men talking while they stood inside an ancient building of some kind, that had mosaics all over the wall and ceiling overhead.\n\n\"What is this?\"\n\nDylan shrugged. \"Not sure. It was Wheel of Fortune before.\"\n\nCassia smiled. \"I enjoy the Wheel every now and then.\"\n\n\"I suck at Wheel of Fortune.\" Dylan's eyes dropped to her face. \"I much prefer watching Jeopardy.\"\n\nHer eyebrows rose. \"Jeopardy? A hockey player who likes a quiz show?\"\n\n\"Well, there's a lot of down time on away trips.\" Dylan smiled. \"And I can only pack so many books in my bag.\"\n\nCassia sipped her coffee. \"I've never been a big reader.\"\n\n\"I've always loved reading.\" Dylan shifted on his stool and set his mug on the counter. \"My mom read to us all as kids, and it stuck with me through school, college, traveling with the team, all of it\"\n\n\"What do you read?\"\n\n\"A bit of everything.\"\n\n\"Romance?\"\n\nDylan laughed. \"Not my first choice, but I have read some. I met a writer when I played with Colorado. She was dating one of the other players on the team, so of course, I had to read her stuff, which was primarily romance.\"\n\n\"What's her name?\"\n\n\"She uses a pseudonym, Dorie Saunders, but her name is Vanessa Bertrand.\"\n\n\"Bertrand.\" Cassia's brow wrinkled as she thought about it. \"She's married to Sean Bertrand?\"\n\n\"That's the one. They were married last year, I think. I lost touch with him after my trade to Dallas.\"\n\nCassia nodded. \"And he was traded to Montreal, too.\"\n\n\"Yeah.\"\n\n\"Do you stay in touch with anyone else from Colorado?\" As far as Cassia could recall, Dylan had only played for Colorado and Dallas in his career.\n\nHe shook his head. \"Not really. It's hard to, with different schedules and all.\"\n\n\"Makes dating difficult, too.\"\n\nHis ears turned pink again but he nodded with a smile. \"Yes, it certainly does.\"\n\nCassia recalled the evening she'd had and her smile faded.\n\nDylan noticed, his own smile disappearing and he leaned closer. \"Are you all right?\"\n\n\"I'm fine.\" She sighed. \"I had another fun night with my girlfriends.\"\n\n\"Ah. More wedding stuff?\"\n\nShe nodded.\n\n\"Do you want to talk about it?\"\n\nCould she talk about it without mentioning the whole dating thing? \"It was another fitting. My dress was done and Olivia's too.\"\n\n\"Was it not good? Did they mess something up?\"\n\n\"No. It fit perfectly.\"\n\nA beat of silence passed.\n\n\"So, what's the problem?\"\n\nShe shot him a narrow look. \"You weren't this chatty the first time we met.\"",
        "His expression was chagrined but he smiled at her. \"I'm not as intimidated.\"\n\n\"You're intimidated by me?\"\n\n\"Of course.\" He looked embarrassed for a moment and cleared his throat as Sally approached, pot of coffee in hand. She filled their mugs and cleared their plates.\n\nAfter she was gone, Cassia turned her face to Dylan again. \"Why am I intimidating?\"\n\nHe shrugged. \"It doesn't matter.\"\n\n\"Come on.\"\n\nHe shook his head.\n\n\"Is it because I was drunk and you had to walk me home last time we saw each other?\" She felt heat creep up her neck as she asked, and wished, not for the first time, that she'd figured out a way to keep some thoughts to herself.\n\nHis face relaxed into a smile. \"No. If anything, that made you less so.\"\n\n\"Oh great. Stumbling drunk is a great impression to make.\" And her night's humiliation was complete.\n\n\"It doesn't matter what I think.\" Dylan leaned closer for a second. \"And anyway, I meant that I find most women intimidating, mostly because I can't talk to them.\"\n\nShe lifted her eyebrows. \"And I have to point out again, that you're talking to me.\"\n\nHe nodded, not looking away from her face. For once, he didn't look embarrassed. His eyes stayed on hers, so dark and blue, and Cassia was the one who looked away first.\n\n\"Now you have to tell me what happened with your friends.\"\n\nShe glanced up again. \"Why?\"\n\nHis smile turned impish. \"Curiosity.\"\n\nShe laughed. \"Curiosity killed the cat.\"\n\n\"I'll take my chances.\"\n\nCassia didn't answer. For a long moment, she studied his face, not sure what she was looking for. \"All right.\"\n\nShe recapped the evening's conversation, skipping over her lies about 'meeting a guy' and describing him to her friends, and ending with Vivian encouraging her to bring someone to the cookout the next weekend.\n\n\"It must be awkward being the only single person in your group of friends.\"\n\nCassia nodded. \"Most of the time it means nothing, because we're just hanging out with each other.\" She sighed and propped her chin in her hands, elbows on the counter. \"And then things like Vivian's wedding come up and I feel like such a loser.\"\n\n\"Being single doesn't make you a loser.\"\n\n\"Said the guy I met at speed dating.\"\n\nHe chuckled, not offended. \"I guess we're two of a kind.\"\n\nThey fell silent for a minute. Cassia liked that it didn't feel strained, and that she didn't feel the need to fill the space with conversation. Dylan may profess to be bad with women, but he had a knack for putting her at ease.\n\n\"I can't judge you for feeling like the odd man out.\"\n\nShe lifted her head. \"What do you mean?\"\n\nHe rubbed his chin, his smile thin. \"Well, I see my teammates hooking up with women at bars or team events and I get jealous. Not of the women specifically, but that they can do it so easily.\"\n\nCassia nodded. \"I get it.\"\n\n\"And they don't ever let me forget my bad luck with women either. Tristen is relentless. Since Jake mentioned meeting you, Tristen keeps grilling me about it, and says he can't wait until casino night on Friday when he can met you.\"\n\n\"Oh man. I'm sorry.\"\n\n\"Why? It's not your fault.\"\n\n\"Well, I could have made up a story when I saw you and Jake the other night.\"\n\nDylan laughed and shook his head. \"How could you have known?\"\n\nCassia shrugged. She felt bad for piling on. Being self-conscious with women and having his teammates harp on him about it over and over wasn't a pleasant combination.\n\n\"I do wish they'd give it a rest sometimes, but there's nothing I can do, short of requesting a trade to New York or something.\"\n\n\"Well, let's hope it doesn't come to that.\"\n\nAnother silence passed between them, but they stared at each other. For a moment, Cassia thought he was going to say something but he looked away first. At his expression, something clicked in the back of her mind and the rush of words came out before she could stop them.\n\n\"Why don't we do it?\"\n\nHe looked back, startled. \"What?\"\n\nHer cheeks flamed as she realized how it must have sounded. \"I mean, not do it. I mean, go out.\"\n\nHe gaped at her. \"You're asking me out?\"\n\n\"Well, not exactly.\" She squirmed under his gaze. \"You need someone to go with you to team events, like this casino thing you mentioned, and I could sure use someone to bring with me to all the wedding stuff, so I don't feel like such a fifth wheel.\"\n\nHe didn't say a word. She couldn't read his expression and with each passing second, she wanted to suck back the words and turn back time.\n\nCassia shoved off of the stool. \"Forget it. It was stupid.\" Fumbling with her money, she dropped something on the counter for her pie and coffee and bolted from the diner.\n\nShe only made it half a block before Dylan called her name and caught up to her but she couldn't turn and face him.\n\n\"Cassia, wait.\"\n\n\"It's fine. Forget I said anything, Dylan.\"\n\nHe put a hand on her arm. She spun around but couldn't bring herself to look at him.\n\n\"You didn't give me a chance to answer you.\"\n\nShe shifted from foot-to-foot, staring hard at his shoes. \"OK. I get it. It was a weird suggestion anyway.\"\n\nWhen Dylan didn't say anything, she finally dragged her eyes up to his. He had a strange look on his face, and Cassia didn't know what to say.\n\n\"Let me get this straight. You want to... pretend to date?\" He hesitated as he spoke, as if trying to solve a riddle. \"So we can each have someone to take to these events?\"\n\nShe nodded, a short jerk of her head. When he still didn't speak, Cassia did. \"I mean, we've already told other people we met at the Tapley's thing.\"\n\n\"But we're not actually dating.\" His response was short, his words clipped.\n\nCassia's face flamed. \"No. But no one else knows that.\"\n\nHe nodded. \"You're right. No one would know.\"\n\nHer heart leapt within her chest and she sucked in a breath.\n\nDylan's face relaxed a fraction and he slid his hands into his pockets. \"And you'd be all right with that?\"\n\n\"With you being my pretend boyfriend so I don't have to go to the wedding alone?\" Cassia let out a short laugh. \"Uh, yeah. I'd be fine with that.\"\n\n\"You want me to go to the wedding?\"\n\nCassia started to nod but stopped as a thought occurred to her. \"Oh, but you might not be able to.\"\n\nHe pulled his phone out of his pocket. \"What's the date of the wedding?\"\n\n\"March eighteenth.\"\n\nHe scrolled on his phone for a second before smiling. \"I don't have a game that night. We're in Western Canada right before that, but I'll be back late on the Friday, I think.\"\n\nCassia breathed a sigh of relief.\n\n\"So I can still take you to the wedding.\"\n\nHer heart flip-flopped again and she had to take a deep breath, telling herself to calm the hell down. \"Does this mean you'll do it?\"\n\nHe slid his phone back in his pocket. \"Of course. It's a great idea.\"\n\n\"Really?\"\n\nHe nodded. \"I think so.\"\n\nCassia faced him, wondering if he was messing with her, and then feeling bad for thinking it. Dylan had been nothing but kind and friendly to her since they'd met. Although, there had been that one moment last time, in the hallway outside her apartment when there'd been something else in his eyes.\n\nShaking her head, Cassia stepped closer to Dylan and extended her hand. \"All right. Deal.\"\n\nDylan looked at her hand for a moment before clasping it in his and shaking once. \"Deal.\"\n\nThey faced each other and Cassia felt awkward, not knowing if she should turn to go or say something else.\n\n\"You should probably give me your number.\"\n\nShe nodded. \"Right. You're right. That's a good idea.\" She recited it for him and he entered it into his phone.\n\n\"And when is this cookout that your friend is having?\"\n\n\"Uh, next weekend. Sunday.\"\n\nHe looked up from his phone with a smile. \"I'm off Sunday.\"\n\n\"Great. And when is the casino thing you mentioned?\"\n\n\"It's the seventeenth. Friday.\"\n\n\"OK, great. That's great.\"\n\nThey stood, facing each other on the sidewalk, not saying anything. Cassia wasn't sure if she should shake his hand again or run away.\n\n\"Can I walk you home?\"\n\nHis question made her smile, easing some of her nervous energy. \"You don't have to.\"\n\n\"I'd like to.\" He stepped closer and held his elbow out at an angle, his hand still tucked in his pocket. \"It's what a boyfriend would do.\"\n\nFeeling warm all over again, Cassia hesitated a moment before slipping her hand through the crook of his arm. They walked towards her home in silence for several minutes, the sounds of traffic fading as they moved further away from the main road.\n\n\"This is weird.\"\n\nDylan chuckled. \"Weirder than me showing up at the diner?\"\n\n\"No. Well, yeah. Kind of.\" She glanced at him. \"Why were you there?\"\n\n\"I told you. I wanted pie.\"\n\n\"And there's no pie in your end of town?\"\n\n\"There might be, but not as good as Sally's.\"\n\nCassia couldn't argue with that logic. \"I wasn't sure I'd see you again.\"\n\n\"Why?\"\n\n\"I made such a fool of myself at Tapley's when we saw each other last time.\"\n\n\"No, you didn't.\"\n\n\"I was literally falling down drunk.\"\n\n\"You made it home.\"\n\n\"With your help.\"\n\nThey exchanged a look and Dylan was smiling. \"I didn't mind.\"\n\nCassia looked away and pulled her arm from his. She made a big deal out of fishing in her pockets for keys, even though they were still a block away from her apartment.\n\nThey didn't say anything else as they approached her building. Cassia turned and faced him at the entrance to the apartments upstairs.\n\n\"I leave after the game tomorrow night. We've got a three-game road trip.\"\n\nCassia nodded.\n\n\"Can I call you while I'm gone?\"\n\n\"Sure.\" The thought of Dylan Samuels calling her made her giddy. She smiled and turned to unlock the door. \"Good night, Dylan.\"\n\n\"Good night.\"\n\nShe went inside and hurried up the stairs. Kyle was already in his room with the door closed when she got inside and she was grateful for that. She probably looked flushed and harried. Quickly, she washed up, brushed her teeth and locked herself in her room, where she sat on her bed and stared at the far wall.\n\nOh God, what had she done?\n\n****\n\nThe game was going well when Kyle came home from work to find Cassia in sweatpants and sweatshirt, watching Dallas and Carolina battle it out. He didn't say anything at first, and Cassia ignored him, until he came out of his room again, changed out of his work uniform.\n\n\"You're watching hockey?\"\n\nCassia nodded, not taking her eyes away from the screen.\n\n\"God, I hate winter.\"\n\n\"Why? Because there's no football?\"\n\n\"No, because you hog the TV for all your weird sports fetishes.\"\n\nCassia had to laugh at that. \"Sports fetish? You're one to talk.\"\n\n\"I don't sit here biting my nails and yelling when my team gets a penalty.\"\n\nCassia turned to him, one eyebrow raised.\n\nHe grinned and shrugged. \"Fine, I don't bite my nails.\" He wandered into the kitchen and Cassia heard him banging things around as he presumably made something to eat.\n\nTurning back to the screen, Cassia watched as Dylan skated on for a shift. She eyed the big, white number sixteen on his back and let out a breath as he took his position near the blue dot on the ice.\n\nKyle plunked down on the couch beside her, sandwich in hand. \"Is this at least a Dallas game you're watching?\"\n\n\"Yes. Shut up.\"\n\n\"Touchy, touchy. Are they losing?\"\n\nThe puck dropped and Cassia watched the players scrabble for it before the black dot shot out to one side, where it was scooped up by a Dallas player. The players moved off after it, scrambling through the neutral zone and into the Hurricanes end, then the whistle blew.\n\n\"Why are they stopped?\"\n\n\"Stars were offside.\"\n\nKyle took a big bite of his sandwich. \"Didn't look offside.\"\n\nCassia shot him a dirty look. She hated listening to him talk while chewing and he knew it. \"This isn't football, OK? Offside is different.\"\n\nKyle shrugged and resumed devouring his sandwich.\n\nWhen the horn sounded, signaling the end of the second period, Cassia sat back on the couch, satisfied with how the team was doing. She'd always been a fan of hockey, and the Stars, but something about watching Dylan now, and knowing him on a personal level, gave the games a new sense of urgency. She was more invested, which was ridiculous, because they were just friends.\n\n\"Why do you watch hockey?\"\n\nCassia glanced at her brother as he picked up the remote and started to browse for something else during intermission. \"I like it. And it always makes me think of the nights Mom and I would watch games when you guys were off doing whatever during football season.\"\n\n\"Does Mom even still watch?\"\n\nCassia shrugged. \"I don't know. Can't remember the last time we watched one together.\" The thought made her feel bad, like she was neglecting her mother. They'd always been close, but after the episode with Alex, she'd been in no mood to speak to her mother, or anyone in the family, aside from Kyle.\n\nWhen Kyle couldn't find anything interesting to watch, he let the screen go back to the intermission talk of the hockey game, where the reporter was standing with a player outside the locker room.\n\nCassia's heart jumped when she recognized Dylan, red-faced and sweaty, shoulders still heaving with exertion. Of course they'd talk to him. He'd scored the only goal in the second period, doubly impressive as he was a defenseman. Beside her, Kyle squinted and pointed a finger.\n\n\"That guy looks familiar.\"\n\nOn screen, the short interview wrapped up, and the reporter turned to the camera. \"That was Dylan Samuels, with two points in the game. Back to you, Gord.\"\n\nKyle turned to Cassia. \"Wasn't that guy who brought you home the other night named Dylan?\"\n\nCassia rolled her eyes, even as embarrassment prickled over her skin. \"He didn't bring me home.\"\n\n\"But that was him?\" He pointed at the TV again. \"Dylan Samuels?\"\n\nCassia couldn't think of a response or lie fast enough, and Kyle gaped at her.\n\n\"Are you seriously dating him? Another pro athlete?\"\n\n\"We're not dating.\" Which wasn't exactly true, not anymore.\n\nKyle narrowed his eyes. \"Please don't tell me you're just hooking up with him?\"\n\n\"Kyle, we're home alone together here every night. When would I be dating or hooking up with anyone?\"\n\n\"You managed fine that night when I saw you two making out in the hallway.\"\n\n\"We were not making out.\"\n\nKyle's expression was incredulous.\n\n\"We weren't.\" Cassia jumped to her feet at Kyle's continued knowing look. She stalked to the kitchen and opened the fridge. She didn't want anything, she just needed to do something since she'd stormed out of the living room. She pulled a bottle of juice out and closed the door. When she straightened, her brother stood in the doorway, arms crossed over his chest. \"What?\"\n\n\"I don't think it's a good idea for you to get involved with someone like that again.\"\n\nCassia knew her brother's concern was coming from his heart, since he'd seen how hurt she'd been the year before when Alex had cheated. \"Dylan is nothing like Alex.\"\n\n\"I'm sure you thought Alex was nothing like Alex in the beginning.\"\n\nShe nodded. \"I guess. But in Dylan's case, it's true. He's not a womanizing creep and he's definitely not the type to cheat.\" She had no way of knowing for sure, but every interaction she'd had, and the way he was so awkward with women, told her that he wasn't that type of guy.\n\n\"How long have you known him?\"\n\n\"A few weeks.\"\n\n\"And you think that's long enough to know for sure?\"\n\nCassia sighed and moved past her brother to the cupboard. She pulled down a cup, offered him one and he shook his head. She poured her juice, put the bottle away and walked out to the living room. All the while, Kyle watched her, as if expecting her to break apart at any moment.\n\n\"Look, Kyle, you need to give it a rest.\" Cassia looked up as her brother hovered instead of sitting next to her. \"Dylan is not an asshole like Alex, I promise.\"\n\n\"If you say so.\" He turned and walked away, heading for his room.\n\n\"I love you too!\" she called after him.\n\n\"Shut up!\" was the response right before his door slammed.\n\nSmiling, Cassia sipped her juice and settled back to watch the end of the game.\n\n****\n\nOn the plane, somewhere over Arkansas on the their way to Nashville, Dylan couldn't focus on the book in his hand. He looked at the front cover, not sure why he'd packed such a dry history of the Ottoman Empire. Sighing, he shoved it in the back seat pocket before him and turned his face to the window. It was dark outside, the only light coming from the periodic blink at the end of the plane's wing.\n\nHe wondered if Cassia had watched the game earlier. He hoped so. It had been a win, something that wasn't easy to come by for the team this year. He'd wanted to call Cassia almost the minute he'd walked away from her apartment the night before. Then he'd wanted to call after the game ended, but there'd been no time before the team had to be at the airport.\n\nStop it, Sams. He shook his head and looked away from the window. He was acting like a lovesick teenager, not a pretend boyfriend.\n\nHe pulled out his boring history book and flipped it open again. Somehow, he managed to get through a chapter before feeling the plane beginning to descend. The team continued on to their hotel in Nashville, and suffered through a humiliating third period breakdown the next night against the Predators.\n\nIn between the travel to their next game in Winnipeg, and practice the morning before the game, Dylan didn't summon the courage to call Cassia until the morning after the loss in Winnipeg.\n\nAs he pulled his phone out and searched for her name, he paced through his room, heading towards the window and back again. He looked at the clock on the bedside table and frowned, wondering if she'd be working or not, and wondering about the time difference. He was about to hang up after a few rings, when she answered.\n\n\"Hello?\"\n\n\"Hi, Cassia. It's Dylan.\"\n\nThere was a moment's hesitation before she spoke again. \"Hi. What a surprise.\"\n\nHe smiled, sitting down at the desk. \"I told you I'd call.\"\n\n\"Yeah, you did. Hold on one minute?\"\n\n\"Sure.\"\n\nThere was a rustling sound, as if she'd put her phone in her pocket. He heard muffled voices, something metallic clanging and then more rustling before Cassia returned.\n\n\"Hi, sorry. I just needed to come outside.\"\n\n\"Where are you?\"\n\n\"At work, at the garage.\"\n\n\"Oh, I'm sorry. Should I let you go?\"\n\n\"No, it's fine. I was due for a break anyway.\"\n\n\"Are you sure? I don't want to get you in trouble.\"\n\nShe laughed. \"It's fine. My dad won't fire me.\"\n\n\"Oh, your dad runs the garage?\"\n\n\"Yeah, haven't I ever told you that?\"\n\n\"I guess not.\" Dylan ran a hand through his hair and leaned forward, resting one elbow on the desktop. \"That's why I wanted to call.\"\n\n\"To ask about my dad?\"\n\nDylan laughed. \"No. Well, maybe.\"\n\n\"I don't understand.\"\n\nHe took a deep breath. \"So we're supposed to be dating, right?\"\n\n\"Yeah.\"\n\n\"And we've talked a few times, but I don't really know anything about you, except that you're a mechanic, you have a friend getting married, and you can't hold your liquor.\"\n\nShe laughed, a sound that made Dylan smile. \"Man, I'm so boring.\"\n\n\"You're really not, but I don't know anything else about you.\"\n\n\"All I know about you is that you play hockey and can't talk to women.\"\n\n\"Right.\" Dylan stood up and started pacing again. He couldn't believe he was talking to her at all sometimes. In person, on the phone, it was all very new to him. \"So I thought we should get some basic facts straight.\"\n\n\"You're right. That's a great idea.\"\n\n\"Why do you sound so surprised?\"\n\nShe laughed again. \"I'm not, I promise.\"\n\nDylan smiled and leaned on the window frame, staring down at the street below. \"Should I start?\"\n\n\"Start what?\"\n\n\"Well, tell me your whole name.\"\n\nShe hesitated. \"Uh. It's Cassia Laurel Morgan.\"\n\n\"Laurel?\"\n\n\"It's a family name.\" She sighed. All in all, not the most embarrassing thing about herself. \"What's yours?\"",
        "\"You know my name.\"\n\n\"All of it, Sams.\"\n\nHe groaned. \"Dylan Theodore Samuels.\"\n\n\"Oh, right. That's where Teddy came from.\"\n\n\"Yeah, but let's not tell anyone about all that.\"\n\nShe laughed. \"Deal.\"\n\n\"How old are you?\"\n\n\"You can't just ask a woman that question.\"\n\nHe smiled at her playful tone. \"Fine, when's your birthday?\"\n\n\"March.\"\n\n\"March what?\"\n\nThere was a heavy sigh and the distant sound of a horn in the background. \"The first.\"\n\n\"OK.\" He filed that information away, counting the days. It was only two weeks away. \"Mine's December twelfth.\"\n\n\"Duly noted.\"\n\nDylan paused, looking down for a second. He wondered if they'd still be friends in ten months, when his birthday rolled around. Shoving the thought away, he started to pace again. \"What's your favorite color?\"\n\n\"Really? Are these really the things we need to know about each other?\"\n\n\"Yes. It's typical first date discussion, isn't it?\"\n\n\"How would you know? Been on many first dates lately?\"\n\n\"Well, there was this night at Tapley's that felt like thirty first dates crammed into three hours.\"\n\n\"Oh God, let's never bring up that night again.\"\n\nHe chuckled. \"Deal.\" A pause. \"So, color?\"\n\n\"Oh, I don't know.\" He heard what sounded like the crunch of feet on gravel and pictured her walking around. \"Copper, I guess.\"\n\n\"Copper?\"\n\n\"Yeah. A nice copper mica, that shines almost red in some light, or burnt orange other times.\"\n\nHe laughed. He should have known a mechanic would give him that kind of color. \"All right. What about your favorite food?\"\n\n\"Like, what kind? Or something more specific?\"\n\nHe shrugged, his pace slowing as he circled his room. \"Whatever.\"\n\n\"Tough one... there are so many things to choose from.\" She blew out a breath. \"I suppose, if I had to pick, I'd go with good ol' southern cooking, like my mom does. But I love pie most of all.\"\n\nHe laughed. \"Of course you do. And what are the names of all your brothers? And your mom and dad.\"\n\n\"My brother that's staying with me, that's Kyle, but you met him.\"\n\nDylan remembered little about Kyle. His memories of that night were mostly of the way Cassia had pulled him close and the way her eyes had bored into his.\n\n\"My older brothers are twins, Kurt and Kent. My dad is Keith, and my mom is Katherine.\"\n\n\"Where did you go to college?\"\n\nShe hesitated. \"I never went to college.\"\n\n\"Oh.\"\n\n\"I mean, I took some classes at the community college here, just to get certified, but I've been working on cars with my dad and brothers all my life.\"\n\n\"That makes sense. Do you like it?\"\n\nShe hesitated. \"It's... all I've known.\"\n\n\"What would you do if you weren't a mechanic?\"\n\n\"You mean, if I had gone to college?\"\n\nDylan shrugged, stopping at the window again. \"Not necessarily. I went to college and didn't become a history professor.\"\n\n\"That's what your major was?\"\n\n\"I had a double major.\" Dylan felt his ears heating up, hoping he didn't sound like he was bragging. \"History and English literature.\"\n\n\"Wow.\"\n\nDylan cleared his throat and then Cassia let out a laugh.\n\n\"No wonder you can't talk to women.\"\n\n\"What?\"\n\nShe laughed harder at his tone. \"You spent all your time in college, reading, studying and writing essays, I bet. No time for women. Man, probably barely time for hockey. How did you manage?\"\n\nDylan rubbed the back of his neck, uncomfortable talking about himself. \"I don't know, I just did.\"\n\n\"Why did you even go to college? When you were drafted, it was in the second round, right? You could have started playing hockey way earlier, if you'd wanted.\"\n\nIt was a familiar question, one he'd heard many times over the years. \"My mom insisted I go to college. She said that hockey was all well and good, but I could be injured or get traded out without warning, and that I'd need something other than 'played a game' on my resume if that happened.\"\n\n\"Your mom sounds like a smart lady.\"\n\n\"She is.\" Dylan turned his back to the window and leaned his backside on the ledge. \"She teaches English at a local high school back home.\"\n\n\"Ah, and she's why you love to read, which explains the literature thing.\"\n\n\"Yeah.\"\n\n\"I like it. A hockey player and a scholar.\"\n\nDylan felt warm again, but for a whole new reason. After a long moment, he shook his head to rise himself of the thoughts that had sprung to the forefront of his mind at her words. \"So, what do you do in your spare time?\"\n\n\"Oh, not much. I'm pretty boring. I watch movies, listen to music, go out with my friends. The usual.\"\n\n\"What kinds of movies?\"\n\n\"All kinds. Action, horror, romance.\"\n\n\"We'll go see something when I get back.\"\n\nShe didn't respond.\n\n\"Cassia?\"\n\n\"You don't need to do that.\"\n\n\"Do what?\"\n\nShe made a sound and there was more of that crunching gravel sound, like she was walking again. In the distance, he thought he heard someone call her name. \"I have to go.\"\n\n\"All right.\" Dylan straightened. \"It was nice getting to know you, Cassia.\"\n\nShe let out a short laugh. \"You too, Sams.\"\n\n\"I'll call you later.\"\n\n\"You will?\"\n\nHe smiled at her incredulous tone. \"It's what a boyfriend would do.\"\n\n\"Even a pretend one?\"\n\nHis smile faded. \"Yeah.\"\n\nA pause. \"OK. I'll talk to you later.\"\n\nThey ended the call and Dylan rubbed his thumb over the screen on his phone for a few seconds. Well, that had gone as well as he could have hoped. All he knew for sure was that he wanted to know more.\n\nTossing his phone on the bed, he walked into the bathroom to clean up before the team meeting.\n\n****\n\nCassia eyed her phone for a long minute after their call ended. When her brother, Kent, called her name, she shoved it in her pocket and turned around.\n\n\"What?\"\n\n\"You done messing around?\"\n\nShe rolled her eyes. \"I was on a break, dumbass. Can you not handle one engine without me for ten minutes?\"\n\n\"Whatever.\" Kent turned back to the garage, waving a hand over his shoulder. \"James needs a hand on that Chevy.\"\n\n\"On it.\" Cassia walked over the Chevy half-ton, up on the lift, and asked James what he needed.\n\nThe next four hours flew by. It was the busiest the shop had been in a long time. Cassia was grateful for the busy work. It kept her mind off Dylan and that mystifying call. She didn't know why she was so amazed that he'd called. He'd said he'd call, and he was a nice guy, not the kind to leave her hanging for no reason. Maybe she was a little thrown by the fact that Dylan was turning out to be a far different man than she'd expected, with his two degrees and all. She had never felt that she wasn't good enough for a man before, if that was what she was even feeling right now.\n\nShe stayed in the office for an hour after they'd closed, helping her dad finish the tickets for the day and organizing the next day's work.\n\n\"All right, that's enough for tonight.\" Keith pushed away from his desk and stood up.\n\nCassia looked over from her corner and set down the stack of receipts she'd been organizing. She rose to her feet, stifling a groan at the way her back popped in two places. She felt like she'd been bent over engines for ages.\n\n\"You go on and go, sweetie. I'll lock up.\"\n\n\"OK. See you tomorrow, Dad.\"\n\nKeith waved her off as she grabbed her jacket and walked out through the garage.\n\nShe walked home, huddled in her jacket against the cold wind, and stopped at a sandwich shop to grab something for dinner. She was in no mood to cook her own dinner. As she walked into the apartment, she didn't hear anything from Kyle and breathed a sigh of relief. She wanted nothing more than to eat, have a hot shower, and fall into bed.\n\nTwo hours later, she lay wide awake, staring at her ceiling. She listened to the sounds of Kyle coming in, moving around and settling down for the night, and still, she couldn't sleep.\n\nShe kept replaying her conversation with Dylan over and over. What was she doing, getting herself involved in this weird deal with him? It wasn't fair to either of them. She knew he had a hard enough time with women, and now she was going to be monopolizing his time for the next month and a half. And she already liked him more than she should. Every passing moment, everything he said to her, she liked him more and more. It was a slippery slope, one she'd been on before, and it terrified her that she was going to become attached only to have him wave good-bye after the wedding, as if nothing had happened.\n\nRolling over, she pressed her hot cheek to the cool pillow and squeezed her eyes shut. Worrying about it wouldn't do any good. She could fake it for the next five weeks. Except she knew she was no good at that.\n\n****\n\nThe end of the week, and the first of their 'dates' approached. Dylan called her the morning after his final road trip game in Minnesota, a loss that she could tell he was down about when they spoke.\n\nShe sat at her dad's desk in the office, as standing outside in the pouring rain wasn't an option. She turned around in the chair, turning her back to the rest of the garage.\n\n\"Did you watch the game?\"\n\n\"I did.\"\n\nDylan blew out an annoyed breath and Cassia pictured him running a hand through his hair, like she'd seen him do once or twice, messing up his hair. \"I wish I could say it was a good effort.\"\n\n\"I thought it was.\" Cassia honestly couldn't recall much about the game. She remembered seeing Dylan take a rough hit in the first, after which he didn't play a whole lot until later in the second period.\n\n\"You're just being a supportive girlfriend.\"\n\n\"Pretend girlfriend.\" He fell silent at her quick correction and Cassia squeezed her eyes shut. \"So, listen, I'm a little worried about this casino thing tonight.\"\n\n\"What are you worried about?\"\n\n\"Is it fancy? Because if it is, I have absolutely nothing to wear.\" Add that to her growing list of inadequacies.\n\nHe laughed. \"You're worried about what to wear?\"\n\n\"Yes.\" She bristled, even as her cheeks warmed. \"I don't want to embarrass you.\"\n\n\"You won't, trust me. And it's not fancy dress. The whole theme is some kind of Old West casino-slash-saloon thing. Everyone's going to be wearing boots, cowboy hats and Wranglers.\"\n\nCassia's mind stalled out at the thought of Dylan wearing Wranglers. She swallowed and tried to focus. \"OK. Old West. I can do that.\"\n\n\"I'm sure you can.\"\n\nCassia smiled at his tone. \"And what time does it start?\"\n\n\"Five, I think, but if you can't get away from work, we'll go later. It goes until midnight or something.\"\n\n\"That's fine. I came in early so I could leave before four.\"\n\n\"Great. I'll swing by to pick you up at five then. Does that give you enough time?\"\n\n\"You don't have to pick me up.\"\n\nHe chuckled. \"Would you rather walk in there alone and have to look for me?\"\n\nCassia blinked. \"No. Good point. I'll see you at five.\"\n\n\"OK, see you then.\"\n\n\"Bye.\" Cassia ended the call and swung around in the chair to see her brother, Kurt, standing in the doorway, a frown on his face. \"Jesus, don't sneak up on a person like that.\"\n\n\"Who was that?\"\n\nCassia scowled. \"None of your business.\"\n\n\"Sounds like you've got a date.\"\n\n\"How long were you eavesdropping on my private call?\"\n\n\"Long enough.\" Kurt took a few steps into the office. \"Who was it, Cass?\"\n\nCassia stood and strode over to stand right in front of her brother. She had to tip her head back to look him in the eye - all the Morgan men were bigger than they needed to be. \"None. Of. Your. Business.\" Without another word, she swept around him and out into the garage, heading for the car she'd been working on when Dylan had called.\n\n\"Kent, did you know Cass has a date tonight?\"\n\nCassia pinched the bridge of her nose and reminded herself that Dylan wouldn't be able to take her to the wedding if she was in prison for fratricide.\n\nKent scoffed. \"No, she doesn't.\"\n\n\"I just heard her on the phone.\"\n\nCassia ignored them as they discussed her dating life as if they knew anything about it. She reached in with a wrench and worked on the engine before her. A minute later, Fernando joined her to help.\n\n\"Hope she knows that putting out on the first date isn't a good thing.\"\n\nEveryone in the shop froze. Fernando lifted his eyes to meet hers, his comically wide, before he backed out of the engine and disappeared around the side of the car.\n\nThat's it.\n\nCassia slammed a hand on the side of the car and straightened. She spun around to see her twin brothers wearing twin idiotic grins. \"You really want to start comparing dating etiquette?\"\n\nTheir smiles slipped, as if they were just now remembering she was their sister and had been privy to most, if not all, of their moronic dating episodes while growing up.\n\n\"I seem to recall the time you hooked up with Jolene Hastings in the back of Dad's Cadillac when you were supposed to be changing the oil.\" Cassia planted her hands on her hips as she turned first to her brother, Kent. \"And instead, you forgot to set the e-brake and the car rolled down a hill into a tree. Something about the rocking motion of the car set it off.\"\n\nKurt guffawed as Kent's expression turned sour. Then Cassia turned to Kurt, and he clamped his mouth shut.\n\n\"And do we really need to go over the time you asked us to lie for you when you snuck out to that Fourth of July party on the coast for three days? All because you wanted to get inside Marie Collins' pants?\"\n\nKurt gasped and pointed a finger. \"You swore you'd never tell!\"\n\n\"You were seventeen, Kurt. Get over yourself. And both Mom and Dad figured it out when Mr. Collins called to let them know you'd all arrived safe in Galveston.\"\n\nShe heard a laugh and looked over her shoulder to see her father standing by the office door, listening to everything. She didn't care. She'd had enough of her family's meddling, well-meaning or not.\n\n\"You two need to realize that I'm a grown-ass woman and I can date or sleep with anyone I want, even if it's the entire line-up of the Cowboys.\"\n\nAnother chuckle, this time from James, quickly choked off at Kent's dirty look.\n\n\"The point is, I don't answer to you, and if I date someone, I don't need to tell you a damn thing about it until you get the wedding invitation. Got it?\"\n\nKurt opened his mouth to reply but Cassia cut him off.\n\n\"No. There is only one response to that, Kurt, and it doesn't start with 'but'.\"\n\nHe clamped his mouth shut, shooting her a mutinous glare. She returned it in full measure and when the twins each gave a jerky nod of agreement, she turned back to the car beside her. Fernando reappeared in another minute, and they finished up what needed work.\n\nThe tense silence only lasted a few minutes. Then a customer arrived to pick up their car, told a joke, and everyone laughed. Cassia didn't. She was still pissed and not a little embarrassed that her brother had heard any of her conversation with Dylan. She liked to keep her dating life quiet. With so many brothers, she had a hard time introducing anyone to the family. Never mind that her situation with Dylan wasn't something she could ever explain to her family.\n\nAn hour later, she wiped her hands on a rag, checked the line-up of tickets and shrugged. She'd been there since seven in the morning. She'd had enough. She packed up without saying a word to anyone, and left.\n\nOn the short walk home, the rain had eased so she didn't get soaked on the way. As she walked in her apartment, she was relieved that Kyle was out. She was still in enough of a mood that she'd have taken his head off even if he said 'hello.'\n\nShe checked the time as she walked into her bedroom. She had a little over an hour to get ready. Stripping down, she glanced in her closet to make sure she had a clean pair of jeans. She tossed the dark denim on her bed and turned back to the closet to dig out her boots. When she couldn't pick a shirt right away, she shook her head and walked across the hall to have her shower first.\n\nAfter, she stood in a towel before her open closet, her hair drying around her shoulders and still couldn't decide on a shirt. Sure, she had some western-style shirts but even they were a bit dated. When she pulled one on and tried to button it, she realized they were also old, and didn't fit the same way they used to. Shoving the hangers to one side, she groaned in frustration. Dylan was going to be arriving in fifteen minutes and she hadn't even done her make-up yet.\n\n\"Are you all right, Cass?\"\n\nShe turned as her brother appeared in the doorway. He took in her appearance and scowled. \"Kurt told me you were going on a date tonight.\"\n\nHer eyes narrowed. \"I told him to mind his own damn business.\"\n\n\"Is it that Dylan guy?\"\n\nCassia sighed and turned from the closet. \"Yes, OK. I'm going on a date with Dylan and there's nothing any of you can say to stop me.\"\n\nKyle returned her glare for a moment before shrugging. \"Fine. So what's the problem here?\"\n\nShe blinked at his quick change in demeanor but lifted a hand to her selection of shirts. \"I can't decide what to wear.\"\n\nKyle came into the room and walked over to rifle through her clothes. He chuckled at a couple of her older shirts and then pulled out a plain black, button-up, sleeveless shirt with silver thread. \"When did you get this?\"\n\nShe shook her head. \"No idea.\"\n\nHe handed it to her and grabbed a belt, something classic with a big buckle. \"Here you go.\" And then he reached up and pulled her black cowboy hat from the top shelf. \"And you have to wear this one.\"\n\nCassia took the items from Kyle and gave him a narrow look. \"When did you become a fashion expert?\"\n\nHe shrugged. \"I took a design course when I was still in Austin.\"\n\n\"I thought your major was architectural design?\"\n\n\"I was branching out.\" Kyle crossed his arms as she moved to throw the clothes on the bed with the dark jeans she'd pulled out before. \"I know you don't want to hear this, but be careful.\"\n\nCassia laughed. \"What?\"\n\n\"I don't want to see you get hurt again.\"\n\nTurning to him, Cassia couldn't help but smile. \"I know, Kyle. Thanks.\"\n\nHe nodded and left her to finish getting ready, closing the door behind him.\n\nShe pulled all the clothes on, leaving the hat off for now. In fact, she might just leave the hat off for the night. The event would be inside, and there'd be enough cowboy hats floating around without her adding hers into the mix. Fluffing her hair a bit, she leaned close to her mirror and applied mascara, and a touch of color to her cheeks, finishing with some dark lipstick.\n\nShe was just tucking her shirt in again, making sure it didn't bunch anywhere, when there was a knock at the front door. With a gasp, she tried to hurry, but Kyle answered the door.\n\n\"Hi. Kyle, right?\"\n\n\"And you're Dylan. Come on in.\"\n\n\"Thanks.\"\n\nThe front door closed again and Cassia heard them moving further into the apartment.\n\n\"So where are you going tonight?\"\n\n\"There's a team charity event, a sort of Old West casino night.\"\n\n\"I see. Will there be alcohol?\"\n\nDylan chuckled. \"Probably.\"\n\nCassia smiled at their exchange.\n\n\"Don't let Cassia have too much, she can't hold her liquor.\"\n\nOK, that's enough. She yanked open the bedroom door and shot down the hall to the living room before her brother could offer any other useful tips.\n\n\"Hi.\" Oh, damn, Dylan looked good. He had on a plaid button-up shirt and loose-fitting jeans instead of the snug Wranglers she'd been expecting. He had on proper boots though, scuffed and marked up like a real cowboy's. Then again, he had grown up in rural cattle country in Alberta. He held his hat in his hand, taken off at the sound of her greeting, like a proper gentleman.\n\nDylan's face turned to her, his smile at Kyle's comment fading when he saw her. For a moment, she thought she'd forgotten to button her shirt or something.\n\n\"You look...\"\n\nShe glanced down at herself, one hand rising to her chest to check the buttons. No, all good. When she looked up again, Dylan was shaking his head. \"Is this all right?\"",
        "\"Yeah.\" His voice was husky. He cleared his throat, taking a step towards her. \"Yeah, you look incredible.\"\n\nShe smiled and looked down, her fingers falling to the gaudy silver buckle her brother had picked out for her. OK, she needed to get a grip, and possibly remind him that compliments weren't required for their little arrangement.\n\n\"It's a little cool outside though. Have you got a jacket?\"\n\n\"Yeah. One second.\" She hurried back to her room and picked up her black jacket that matched the ensemble. Returning to the front room, she smiled at Dylan as she pulled it on. \"OK, let's go.\"\n\nKyle saw them to the door. \"Have fun.\"\n\nCassia waved and grabbed her keys before leaving, pulling the door closed behind her. When she looked up, Dylan was sliding his hat back on his head and her breath caught. The cowboy look really worked for him. She felt her heartbeat pick up and she swallowed, trying to calm down.\n\nNot a real date, not a real date, not a real date.\n\nWith that thought on repeat in her head, she offered Dylan a smile before they started to walk down the hall to the stairs.\n\n\"How was work?\"\n\nCassia shrugged. \"It was fine, until my brothers decided to try and lecture me on my dating habits.\"\n\nHe held the door at the bottom of the stairs for her. \"I bet that went over well.\"\n\nThey walked around the block to where he'd parked his truck and Cassia slid into the passenger side, feeling nervous again.\n\n\"Are there going to be a lot of people there?\"\n\n\"Probably.\" Dylan started the car and they slipped into traffic on the main road a few minutes later.\n\n\"How do you handle these events?\"\n\n\"What do you mean?\"\n\n\"Well, you can't talk to women. There must be a ton of women at these things.\"\n\nDylan smiled as he glanced her way. \"Usually. Most of them are spouses of teammates or Stars staff. There's less pressure in those cases.\"\n\n\"But there must be other women, single women or friends of friends, or something.\"\n\nHe shrugged. \"I suppose. Most of the time, I hang out with Tristen and the other single guys.\"\n\nCassia nodded, turning her face to the windshield. They didn't say much for the rest of the drive to the downtown hotel that was hosting the event. There was a long string of vehicles lined up out front, with valet service. As they pulled up and stopped, Dylan hurried around to open her door for her.\n\nThey stood on the sidewalk outside the hotel for a moment, staring up at the building. Then Dylan touched her arm, startling Cassia. She turned to him, her heart flipping at his crooked smile. He was too damn sexy for his own good.\n\n\"Ready?\"\n\nShe took his hand, smiling at the way his eyes widened. \"Let's do it.\"\n\nThey walked inside, hand-in-hand, checked her coat near the entrance, and followed the crowd of cowboys, cowgirls, and saloon workers to the big ballroom that had been converted to an Old West saloon and casino.\n\n\"Wow.\" Cassia looked around in amazement.\n\nThey'd done the entire room to the western theme, even covering the walls in fake wood paneling. There was an old-timey piano in the corner, and scattered throughout the crowd were dancing girls in big, ruffly, red skirts, men with big cowboy hats and thick mustaches, and just about everyone had a gun strapped to their hip.\n\n\"Sams!\" Someone yelled and the two of them turned to see Jake Brown hurrying towards them. \"Well, hello again.\"\n\nCassia smiled. \"Hello, Jake.\"\n\nHe grinned and shook her hand. \"You look great.\"\n\n\"She's my date, Brown.\"\n\nJake chuckled. \"I can't believe you actually brought her. Tristen is going to shit a brick.\"\n\nCassia grinned. \"Well, by all means. Let's go find Tristen.\"\n\n\"Right this way, ma'am.\"\n\nDylan and Cassia followed Jake through the crowd to a tall table surrounded by Tristen, John Brown and a couple other people who Cassia didn't recognize.\n\nConversation halted when Dylan and Cassia arrived. Cassia sidled closer to Dylan's side, unnerved by the way everyone's eyes turned to her.\n\n\"Well, shit.\" John laughed and slapped a hand on the table. \"I just lost twenty bucks.\"\n\nJake stuck his hand out. \"Pay up, bro.\"\n\nThere was a round of laughter.\n\n\"They bet each other that you were making her up.\" Tristen approached and held a hand out, his smile wide as he greeted Cassia. \"Hi, I'm Tristen Sturgess.\"\n\nShe shook his hand. \"I know who you are.\"\n\n\"A hockey fan?\" His eyebrows lifted and he glanced sideways at Dylan. \"How did you manage to find her?\"\n\nWhen Dylan didn't respond right away, Cassia looked over to see his smile was tense, his jaw clenched. She squeezed his fingers before turning back to Tristen. \"I'm pretty sure he's already told you. And anyway, it doesn't matter how we met. We just did.\" When she looked up again, Dylan was looking down at her and his smile relaxed when their eyes met. \"So where are the blackjack tables?\"\n\nLaughing, Tristen pointed them out and Cassia pulled Dylan in that direction. Once they were out of earshot of his teammates, Cassia stopped and faced him.\n\n\"Are you all right?\"\n\n\"I'm fine.\"\n\nShe squinted at him.\n\nHe sighed and rubbed his chin. \"I guess I'm just really tired of the jokes. More than I thought I was.\"\n\n\"Sure.\" Cassia looked around. \"Do you want to get a drink? Or play one of the games? I see a half-empty poker table over there.\"\n\n\"Yeah. Let's get a drink.\"\n\nShe nodded and they made their way through the crowd to one of the bars. Drinks in hand, they moved around the room, checking out the games and occasionally running into more of Dylan's teammates. The more he introduced her, the more Dylan seemed to relax. Not everyone made a joke or comment about him bringing a woman, and Cassia spent most of the time gushing over meeting these players she'd watched for years.\n\nAfter another circuit of the room, they paused at an empty table.\n\n\"I can't believe I just met Paul Scott.\" Cassia looked over her shoulder where Paul Scott had disappeared with his wife. \"I've been a fan since he was with the Blackhawks. He's such a classy guy.\"\n\nDylan smiled as he finished his drink and set the glass on the table. \"Yeah, Paul's great.\"\n\nCassia turned back to him and leaned her elbows on the table. \"This is all a bit surreal to me.\"\n\n\"You didn't seem this starstruck when you met me.\"\n\nShe laughed at his mock-wounded expression. \"I was in a mood when I met you. If I'd met you under different circumstances, I might have reacted the same.\"\n\n\"Would you have?\"\n\nCassia paused, considering. Dylan wasn't the biggest or most well-known name on the Stars, but he was a solid, consistent player. He didn't put up a ton of points, but he had a great plus-minus rating and he was a regular part of setting up plays for everyone else. More than anything though, she'd thought he was more attractive than anyone else on the team, even if he wasn't a stereotypical pin-up, like Tristen Sturgess. Had that been the difference in how she viewed him? She didn't know. She did know she liked him, more than she should, at this point.\n\nAt the look on his face, she knew she had to respond. He looked so uncertain and self-conscious again. She moved around the table, getting closer, and enjoyed the way his eyes widened at her approach. \"Should I pretend like I'm starstruck?\"\n\n\"Wh-what?\"\n\nShe touched his arm and opened her eyes wide, fluttering her lashes a little. \"Dylan Samuels? I'm a huge fan.\"\n\nHe laughed, but Cassia could see the tips of his ears turning pink. She grinned, leaning more, and lifted her face closer so she could speak softer.\n\n\"You're so much more handsome in person than on TV.\" Lowering her lashes, she pressed against his side. \"And you're so tall and... big.\"\n\nShe raised a hand and fiddled with the top button on his shirt until it popped loose.\n\nOops.\n\nBiting her lip, she tried to fix it, but Dylan's hand came up to close around her wrist. When she lifted her eyes again, his had darkened. Her breath caught as he leaned down, bringing their faces so close together that she could feel his exhalation on her lips. His next breath was warm, and his lips brushed hers once, before he jerked back.\n\nA moment later, someone called his name and they both looked over to see Tristen approaching. He took in their positions and his grin turned teasing. \"Sorry to interrupt.\"\n\nDylan shook his head, and let go of her hand, but neither he or Cassia moved apart. She counted to ten in her head, trying to slow her breathing. She hadn't meant to do... whatever that was.\n\n\"What's up?\"\n\n\"Coach wants us all on stage. They're doing the speeches and all that.\"\n\n\"Right.\" Dylan met Cassia's eyes. \"Be right back.\"\n\nShe nodded, incapable of speech, not entirely sure what had just happened. Dylan gave her that crooked smile before walking away with Tristen.\n\nShe listened with only half an ear to the general manager and the team owners talking about the charity this event was being held for. She clapped her hands when other people did and couldn't tear her eyes away from Dylan.\n\nHe had a relaxed smile on his face as he stood on stage with his teammates, listening to the speeches and acknowledgments. He had his thumbs hooked in his belt, behind the gold and silver buckle that drew her attention far too close to certain parts of him. Every once in a while, his eyes turned towards her and Cassia's temperature spiked.\n\nDamn, she was in big trouble."
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey",
        "hockey player",
        "hockey team",
        "hockey romance",
        "sports",
        "sports romance",
        "athlete",
        "sports team",
        "romance novella"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/reflections-on-ice-ch-03"
}