{
    "title": "I Thought I Hated Him Ch. 10",
    "pages": [
        "Daniel closed his eyes, hiding from me the quick flicker of emotion I thought I glimpsed within them. I tried not to be hurt as I watched his handsome face become stoically composed once more. I pushed back the dark wave of hair which slipped over his forehead, tugging playfully at the grey strands woven throughout.\n\n\"Are you okay?\" I asked after his silence stretched on for a little too long. Daniel opened his eyes, and the intensity of his silver gaze made me gasp. And then Daniel \"the Dragon\" Sutcliffe opened his attractive mouth and said five words I never thought I'd ever hear in my life.\n\n\"Clara, will you marry me?\" \n\nI jumped up from the floor and pulled on my panties and jeans in one quick motion, leaving Daniel lying open-mouthed in disbelief beneath me.\n\n\"That's not funny,\" I cried, trying to recapture my curls into some semblance of order. \"You can't joke about things like that.\" I pulled my abandoned bra off with a frustrated growl and let it drop to the floor.\n\n\"I wasn't joking,\" Daniel snapped, sitting upright and sending me a cold glare. \"I was being perfectly serious. I want you to be my wife, Clara.\"\n\n\"Why?\" I blurted out as I stepped away from Daniel's outstretched hand.\n\nHe shook his dark head, his expression fierce: the Dragon was ready to do battle. \"Because I'm in love with you and want to spend the rest of my life with you - why the hell else?\" Daniel rose gracefully to his feet before righting himself and zipping up his fly; the intimate moment between us was lost.\n\n\"Were you ever going to tell me that?\" I cried as I stepped around a pile of boxes, desperate to put some distance between the two of us and give my still-whirling mind a moment to comprehend what was happening. \"Or were you just going to assume I'd figure it out on my own?\"\n\n\"What's your problem, Clara? I just proposed to you for Chrissake, and you're fighting with me? This is supposed to be the happiest moment of your life!\"\n\n\"Was it the happiest moment of your other wives lives too?\" I shot back, instantly regretting the words as Daniel's steely eyes narrowed dangerously. I clamped a hand over my mouth, but it was too late to take the words back.\n\nThe Dragon loomed large over me, his mouth twisted into an ugly grimace. \"Maybe I've made a mistake then, in thinking that you loved me back. Pardon me if I've gotten that impression over the past few weeks. I must be an idiot.\"\n\nIt was my turn to reach for him, but Daniel moved away from my straining fingers as easily as I had evaded his moments earlier. \"I'm sorry,\" I said quickly, feeling the prick of tears spring up behind my eyes. \"You just surprised me - that's all. You have to admit this is all moving a little quickly.\"\n\nDaniel regarded me coldly for a moment before his grim expression melted into an awkward, lopsided smile. \"I guess that was a little out of left field, I'm sorry.\"\n\n\"This is not how I pictured being proposed to,\" I admitted, blushing hotly as a tear escaped to trickle down my cheek. I ducked my head, allowing the curtain of my hair to hide my face from Daniel's questing gaze. \"I think I just ruined the whole thing.\"\n\n\"No, it's my fault.\" Daniel moved towards me and cupped my chin in his large hand, tilting my head until I looked him in the eye. \"You deserve better than a cold, bare floor in an empty room. Next time I'll do better, I promise Sweetheart.\"\n\nSix months earlier I wouldn't have been able to imagine the Dragon apologizing to me in my wildest dreams. Now he stood before me with a boyish, self-conscious expression and rueful eyes. I smiled encouragingly at him. \"That sounds fair. And the next time I'll react a little bit better, I promise.\"\n\nDaniel's answered smile was so beautiful my heart ached. \"I know you think I'm a fuck-up Clara, and I have the ex-wives to prove it. But I never felt for them what I feel for you. You say you trust me - please trust me in that too.\"\n\nI nodded as Daniel's hand slid from my chin to the crook of my neck, pulling me close. His kiss was sweet and honest and said more to me than he probably realized. \n\n\"I love you too,\" I whispered as we parted. The flicker in his silver eyes made me smile. \n\n-------\n\nMy feet were cold in my slippers and my neck ached from being hunched over my drafting table for so long, but I didn't feel compelled to stop. The quiet slide of the straight-edge and the scratch of my pencil over the vellum were the remedy for my frantic mind. I threw myself entirely into the Kendall plans, finding comfort in the ability of my work to chase almost all else from my brain.\n\nLife with Daniel had settled quickly into a routine. We worked together all day, in silence mostly, until something needed to be said. Then we retired upstairs to cook and eat dinner before curling up on our perspective ends of the couch with our books, our feet entwined comfortably, our new cat asleep between us. When we went to bed we usually made love, sometimes with the frantic, roof-raising passion of old, other times with the slow, secret intimacy I treasured beyond words. We never spoke of Daniel's proposal or the future; it just seemed safer that way. We couldn't argue about it if we didn't talk about it.\n\nIt was nice to have work to throw myself into. Since starting his own firm three months ago, Daniel's client roster had grown steadily, and the newly christened Sutcliffe and Associates had expanded quickly to include an Administrative Assistant and two co-op students from the university in addition to Daniel and myself. During the day the fire hall could be a busy place, but I preferred the dusky, coolness of early evening when everyone had gone home and Daniel had slipped upstairs to the apartment to cook dinner.\n\nThe Kendall project had hit the wall, with the city refusing us a building permit and Mrs. Kendall refusing to sell. The land developers were starting to realize the old lady wasn't going to back down, and had switched instead to putting pressure on City Hall themselves to declare the building unsafe so it could be demolished. All-in-all it had turned quite nasty, but I couldn't quit my obsession with the project, and even though we had no need for any more plans, I couldn't stop drawing and redrawing every little detail of the house.\n\nI sketched out the now-familiar foundations, not even needing my notes to remember the measurements or the photos to picture the shape of the simple structure. It was all imprinted in my head and probably always would be. My pencil flew, creating the familiar shape of the building yet again, finding a strange sort of comfort in the unchanging, stable foundation of the house I inexplicably loved.\n\n\"Clara?\" Daniel's voice was husky and surprised me from my work. My head snapped up to see him standing beside my drafting table, two mugs of tea in hand. I hadn't heard him come downstairs.\n\nHe passed me my tea and studied the drawing tacked to my table. He shook his dark head. \"The foundations again? I don't know why you're torturing yourself, Sweetheart. You know as well as I that this project is going nowhere.\"\n\nI took a sip of the scalding Earl Grey, letting it warm my cold insides. Around the hot mug my fingers ached and tingled as they came back to life. \n\n\"I know,\" I conceded with a sigh. \"But for some reason I can't let it go. I dream about it at night, think about it all day. It haunts me.\"\n\nDaniel leaned over me and traced the foundation line I'd just drawn, inadvertently smudging the pencil. \"You draw it so well; it seems a crime these plans will never be used. It's just the foundation, but you breathe life into every line; it's held this house up for more than a hundred years but even that isn't going to be enough to save it.\"\n\nMy mind whirled, making me gasp for breath as my tea trembled in my mug. Alarmed, Daniel crouched beside my chair and took the hot vessel from my hands. \"Clara? What's wrong?\"\n\n\"Nothing's wrong,\" I said slowly, feeling the possibilities open up before me in an endless vista. \"The foundation...\"\n\n\"Okay,\" Daniel murmured, putting down my tea and taking both my hands. \"You're losing your mind. Think clearly Clara, and then speak. Please.\"\n\n\"You said the foundations have held this house up for more than a hundred years,\" I muttered, looking at Daniel but not really seeing him. \"But what if they don't have to anymore?\"\n\nHe shook his dark head again, his silver-blue eyes concerned. \"You're not making sense, Sweetheart.\"\n\nI squeezed Daniel's hands as excitement coursed through my veins. The words couldn't come fast enough. \"Think of it Daniel. The house belongs to Mrs. Kendall, but the land doesn't, right?\"\n\nHe nodded slowly, but the look in eyes said he wasn't getting my meaning.\n\n\"The building is hers to do with what she likes. And the only thing connecting the house to the land is the foundation. What if we don't need that foundation any more, Daniel? What if we move the house?\"\n\nThe concept dawned on Daniel's handsome face in a wave of understanding. \"You mean, dig it up and move it to another location?\"\n\n\"Sure, people do it all the time. It'll be a delicate process since the house is so old, but I'm sure it can be done. And I'm sure Mrs. Kendall can afford to buy some land in a suitable, nearby location. We can save the building and the city can do whatever the hell it wants to with the land.\" I had to restrain myself from jumping from my chair and flinging myself at Daniel. Instead I squeezed his hands harder, trying to convey my excitement. \"It's not ideal, since really keeping the house in its original location would be the most historically responsible thing to do, but if we can't do that -- well, we'll just move it!\"\n\nDaniel regarded me in silence for a time before shaking his dark head with a harsh laugh. \"You're something else, Sweetheart, you know that? Why didn't I think of that?\"\n\n\"It's a simple solution,\" I chided, smiling as Daniel raised one of my hands to kiss my knuckles. \"The simplest solution is often the hardest to come by.\"\n\n\"Are we really talking about the Kendall house, here?\" Daniel asked as his voice caught thickly in his throat. His remarkable eyes were intense and the single-minded look on his face robbed me of breath.\n\n\"I don't know,\" I admitted. \"Aren't we?\"\n\n\"So we dig it up and move it. Then what? Everything needs a foundation, Clara. Surely you learned that in architectural school?\" The low timbre of Daniel's voice skated over my spine and made me shiver.\n\n\"We'll build a new one, Daniel. The old one was falling apart anyway.\" I said softly.\n\n\"A new foundation for an old house?\" \n\n\"Are we really talking about the Kendall house, here?\" I echoed Daniel's earlier question, my stomach tied in knots.\n\n\"I don't know,\" Daniel admitted. \"Are we?\"\n\nI kissed him. I had to. He tasted like Earl Grey and smiled against my lips.\n\n\"Ask me again,\" I whispered, hoping he knew the right question.\n\nThe silver in Daniel's eyes deepened to a smoky, grey-blue. His grip on my hands tightened as my heart stopped.\n\n\"Marry me, Clara.\"\n\nIt wasn't a question, but it didn't need to be. I nodded.\n\n-------\n\nWe lay in bed, legs entwined, my head resting against Daniel's stomach, his hands buried in my hair. I traced the path of dark hair downwards from Daniel's navel. As my fingers approached his softening cock, it twitched, leaking the last few traces of his pleasure. \"You're going to be the death of me yet, Sweetheart,\" he gasped as I cleaned up the evidence with my tongue and smiled to myself.\n\n\"At least you'll die happy,\" I teased. \"But not before tomorrow, okay? We're going to need you.\"\n\n\"Moving day,\" Daniel groaned, tugging at one of my ringlets. He chuckled as I squealed in protest. \"That damn house better not fall apart or it really will be the death of me.\"\n\nI giggled before snuggling up against the warm solidity of Daniel. \"Mrs. Kendall will kill us both if anything happens to that house.\"\n\n\"Nothing will happen,\" Daniel reminded me. His touch wandered down my spine, tracing some invisible line only he could see. \"We've put together the best team that Mrs. Kendall's ridiculous sums of money can buy. It'll go off without a hitch, I promise you.\"\n\nI nodded, feeling a confidence about the move which I could completely attribute to the man lying beside me. \"I can't wait.\"\n\n\"Best sleep now, Sweetheart,\" Daniel murmured, drawing me up to settle into the crook of his arm. My head fit perfectly into warm space between his neck and the pillow. \"It's a long day tomorrow.\"\n\n\"Mmmm...\" I sighed. My own contentment had settled into my bones and the last thing I was aware of was the musky smell of Daniel's skin as I fell asleep against him.\n\n-------\n\nThe sun was bright but the day was cool. The white hardhat I'd been forced to don did little to keep me warm, and I shivered at the work site as the wind blew through me. \n\nFurther along Daniel stood talking with the Head Engineer for the structural moving company. How was it that he managed to make a hardhat look sexy? I sighed, and beside me Mrs. Kendall laughed. Her own hardhat was bright blue and made a striking contrast to her white hair.\n\n\"Don't be nervous, dear. It'll all be over soon.\" \n\nThe two of us stood at held out breaths every moment it took the moving team to hoist the house off its foundations and on to the monster flat-bed truck. That it managed to get up there in one piece amazed me completely. The engineers and movers handled the procedure with clock-work like efficiency. It took them almost three agonizing hours just to get it on the truck; it would take them another four to drive it a kilometre down the road to Mrs. Kendall's property and another three more to settle the house on its new foundations.\n\nDaniel was in the thick of it all and I could hear his laughter and shouts of encouragement from where I stood. Occasionally he'd look back to see if Mrs. Kendall and I still watched. We both waved cheerfully at him, although the cold bit me fiercely and my body ached.\n\n\"What's wrong, Clara?\" Mrs. Kendall asked after my third or fourth heavy sigh. \"Is something wrong?\"\n\n\"I don't know,\" I confessed, rubbing at the ache in the small of my back from standing in one spot for so long. \"I've been so tired lately, dizzy sometimes, and nauseous too. I think I'm coming down with the flu. Daniel thinks I've been working too hard, but I don't think so. I don't know - it's weird.\"\n\nMrs. Kendall chuckled knowingly and led me to a nearby parked truck to sit me down on the tailgate. \"Have you been to the doctor?\" Mrs. Kendall asked. Her kind face was painted with a strange combination of delight and concern.\n\nI shook my head and removed my hardhat. \"I haven't had time, and to be honest, we don't have coverage at work yet, so I've been hesitant to. It'll pass,\" I smiled, trying to convince myself more than her.\n\n\"I'm sure it will, Dear,\" Mrs. Kendall patted me knee and chuckled. \"In about nine months.\"\n\nI couldn't have been more stunned if she'd hit me. \"Y- you think I'm pregnant?\" I whispered the word as if afraid of it, making Mrs. Kendall laugh a little harder.\n\n\"When a man and a woman do what you and your Daniel have been doing with what I'm sure is alarming frequency, my dear, it's bound to happen eventually. Take it from me, Leo and I had four children.\"\n\nPregnant? I sat numbly, completely oblivious to anything around me. The sounds of the work site faded away. I didn't even feel the cold any more. Daniel and I were going to have a baby?\n\n\"I'm going to venture another guess,\" Mrs. Kendall interrupted my thoughts with her usual dry chuckle. \"And say that your Daniel's never been a father before.\"\n\nI shook my head. \"His other wives didn't want kids. Why?\"\n\n\"Well, if he had he'd probably have recognized your symptoms, Clara. As it is, it's just as well. You two can have this adventure together. You'll be an amazing mother, of that I have no doubt.\" Mrs. Kendall laughed once more and gave my knee a final squeeze. \"I think I'll wander down and get a closer look at the move. Shall I send your Daniel up?\"\n\nI nodded automatically, my brain still trying to wrap itself around the possibility Mrs. Kendall had brought to my attention. A baby? Children? With Daniel? Little Daniel Sutcliffe's running about? Lord help me -- I'd never have a moment's peace.\n\nMy mind raced frantically. When was my last period? Two months ago? Three? I couldn't remember, I realized in a panic. We'd been so busy with setting up the firm, working with new clients, organizing the move for Mrs. Kendall's house. If I'd thought about any missed periods in amongst all that I couldn't remember.\n\nMy hand settled on my abdomen. Nothing felt different. Everything felt different. I closed my eyes against the dizziness and tried to keep breathing. A baby. I was going to have Daniel's baby. I hadn't been to the doctor, hadn't taken any tests, but I knew it as surely as I knew I loved him. I loved them both.\n\nI smiled and opened my eyes to watch Daniel approach. He removed his hardhat and ran a hand through his hair. \n\n\"What did I do to deserve a smile like that?\" he teased as he perched on the truck's tailgate beside me.\n\nI laughed to myself but didn't answer. I wasn't sure it was the time or place.\n\n\"I was starting to think the old Battle-axe would never leave,\" Daniel drawled with faked contempt. \"I want you all to myself for a little while - I've got something for you.\"\n\nI watched wordlessly as Daniel reached into his pocket with one hand and took my left hand with the other. \n\n\"It's not fancy, and I know I've made you wait more than long enough for it. If you don't like it, we can buy you something different.\" I looked down at our clasped hands just as Daniel slipped a ring on my finger. It was a delicate diamond, nestled in a circle of amethysts. It was beautiful.\n\n\"It was my Mother's. I wanted to have it cleaned and resized, which is why this took so long,\" he looked up at me from under his fringe of dark lashes. He was so handsome it took my breath away. The look in his blue-grey eyes was intense, yet warm. \"It's been worn by five generations of Sutcliffe women, but for some reason I never gave it to either of my exes. I guess I was keeping it for someone better, even if I didn't know it at the time. But like I said, if you don't like it, I'll buy you something else, something more modern perhaps, something bigger...\"\n\nI shook my head, unable to force words past the lump in my throat. On my finger the small diamond glinted perfectly in the sun, surrounded by its purple sisters. \"I- it's beautiful,\" I whispered when I could. \"It's perfect.\"\n\nDaniel leaned down to kiss me. \"Good. I thought you'd like it. I wanted to wait for today, for the move. It seemed symbolic, in a way. Now what the hell is going on? What were you and the Battle-Axe discussing with such intent?\"\n\nI could feel my heart rate soar as I teetered on the edge of indecision. But Daniel looked so honest and so earnest that I couldn't lie. \"Mrs. Kendall thinks the reason why I haven't been feeling well lately is that I'm, well... I'm pregnant.\"\n\nAll expression fell away from Daniel's face for a moment, causing my heart to clench painfully. He turned towards me more fully and cupped my cheek, searching my face with his remarkable eyes. \"Are you serious?\"\n\nI nodded. I could feel my chin wobble a little as the tears threatened to come. \"Yes,\" I whispered. \"I'm certain of it. I don't know how I'm so sure, but I am.\"\n\n\"A baby,\" Daniel breathed out huskily. \"My baby.\"\n\nI nodded again, letting a tear or two escape. I'd never cried in front of Daniel, but I didn't seem capable of stopping it from happening. Around my finger Daniel's mother's ring felt cold and alien.\n\n\"A baby,\" Daniel echoed. His voice was almost as blank as his expression. The silence stretched between us for what felt like an eternity. My insides fluttered and I couldn't help but wonder if it was nerves or something else.",
        "He stood up abruptly, pulling me to my feet with him. \"We're going to have a baby?\"\n\nI said nothing in response. Again, no words would come and besides, what could I say? When comprehension dawned on Daniel's face it was like the sun emerging from behind a cloud. His smile split his face and he picked me up, whirling me around until I was dizzy. His cry of joy could be heard down at the work site; heads turned. Mrs. Kendall's satisfied laughter travelled to us on the wind.\n\nI couldn't stop crying, the tears coursed unchecked down my cheeks. Around me Daniel's arms were solid yet gentle as he leaned down to kiss me again.\n\n\"Thank you,\" he said. I couldn't read his expression or his tone.\n\nI froze in Daniel's embrace. \"For what? I didn't plan this, if that's what you're implying.\" I could feel my defences spring up and a little tickle of temper rise in the back of my throat. Daniel smiled down at me with reassurance.\n\n\"I know. Not for that, although that's well... amazing. I don't know. Thank you for not giving up on me. And for not hating me anymore.\"\n\n\"I never hated you,\" I said, my voice catching in my chest. On my finger Daniel's ring sparkled. \"Not even for a moment.\"\n\n\"Thank God,\" Daniel whispered. His kiss began sweetly but ended with his usual fierce passion which made me cling weakly to him.\n\nAt the work site below us the monster flat-bed truck roared to life, interrupting our interlude. We turned our heads towards the sound and together we watched as the old house began to inch slowly towards its new foundation.\n\n-------\n\n[I wanted to take this opportunity to thank you all for your unfailing support over the past few months. I've really come to love the home I've found here at Lit, and the friends I've made as well. It's been a pleasure to write for you all and I know I have many more stories to tell - I hope you'll stick around for the ride.\n\nI don't know why, but Daniel and Clara are very dear to me, perhaps because their relationship hasn't been an easy one, for me or for them. Writing this story was a challenge -- I didn't intend for it to end this way, but my characters have a habit of taking over and making the story their own. It makes me smile to know that they finally have the happy ending they deserve.\n\nA special thanks should go out to a number of people who've helped me grow as an author here -- my husband, of course, for being my real-life Daniel and for accepting what I write without question. Daniellekitten and L.E.N. for the writerly advice and encouragement. Diatikan for the short-term, much appreciated editing stint. And my darling readers for every email and vote - you made me believe I could do this. Thank you. ~firstkiss~] "
    ],
    "authorname": "firstkiss",
    "tags": [
        "co-workers",
        "older man",
        "younger woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/i-thought-i-hated-him-ch-10"
}