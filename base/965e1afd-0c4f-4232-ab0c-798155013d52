{
    "title": "My Math Problem",
    "pages": [
        "Standing with Mrs. Rauschenberg in front of the supermarket shelf, I was looking at a problem. With my background, I could have explained it to her in terms of supply and demand, the pricing aspects, and uncertainty factors, but it might have put her to sleep, or more likely, caused her to use her handbag on me. \n\nShe'd already threatened the latter so I sighed and shrugged my shoulders. \"Sorry, ma'am, but we're all out.\"\n\n\"Well, is there any more in the back?\" she demanded as she stared at the empty slot on the shelf. \"I just need one jar, young man. Can you stop just standing there like an idiot and go check?\"\n\n\"Uhh...I'm sorry, ma'am,\" I replied, still surprised at her demeanor. Mrs. Rauschenberg was a rather severe-looking lady\u2014somewhere between 70 and 80, I guessed\u2014and not known for having a sunny disposition, but in our few interactions, she'd never before been threatening or insulting. \"I've already checked; there's not a single jar in the store.\"\n\nMrs. Rauschenberg huffed in frustration. \"I buy it here every Christmas and you've always got plenty. So what's different this year? It's you, isn't it. I don't remember you from before a few months ago. You didn't bother to order any, did you?\"\n\nI shook my head, wishing I could tell her what I really thought of her outburst. Instead, I held my tongue and said, \"Ma'am, I'm just a stocker, a grocery clerk. I'm not in charge of ordering so I have no idea why we're out. Like you said, though, I've only been here for a few months and I've never seen us run out of it before.\"\n\nShe frowned at me. \"Phhfff. Likely story. And no idea, eh? That just shows what happens when a man your age doesn't get a good education or have any drive and ambition. He ends up as a lowly stock boy at a fucking supermarket instead of doing something important with his life.\" \n\nShe added a few more demeaning curses and stomped off, a real feat for someone her age, leaving me to sigh again in frustration as I failed in my attempt to keep from wishing bad things on her. Her insult hurt, for I had all of what she'd accused me of lacking except for the good job at the moment.\n\nThinking about that and my upcoming birthday, I wished, once again, that I was somewhere else, far, far away.\n\n***\n\nIt had started a little over eight months before when Monte Wiederhoff asked me to stay for a moment after a meeting in his office with the company's senior execs. \n\nMonte had taken over Pelton Wiederhoff almost two years before following the passing of his elderly father, Montgomery, Senior, a great leader who'd actually died at his desk at nearly 85. Unfortunately, his son was cut from a different cloth, and the firm just hadn't been the same since. As the private company's chief financial officer, I'd done my best to help keep it on track despite Monte's apparent rudderlessness at the helm.\n\n\"Clark, thanks for staying. Tell me, where do you see our firm headed in the next two years?\"\n\nWhile Monte had the title, I'd been making most of the major decisions for the firm since Montgomery's death, with Monte usually giving a nod, often without a thought. I paused for a few moments, fighting the desire to keep from asking why, like in so many cases before, he hadn't read my report that answered that in considerable detail. \n\nOr maybe, just maybe, he had and wanted a personal explanation of the changes needed. \n\nI took that tact. \n\n\"Well, sir, we're in very good condition at the moment, but with the economic turndown combined with some issues here, I see the potential for trouble ahead in the next six to twelve months, with very serious downside over the next 24 months if we aren't more proactive in the near term. Our supply chain has been really affected\u2014did you ever get to read the report I gave you a few weeks ago?\" \n\nI'd asked him at least four times already and had, to date, always received the same response. The report answered his question and detailed specific recommendations for helping us avoid most of the likely problems. \"If so, we can focus on the parts that may be confusing if you'd like rather than going through the whole thing.\" \n\n\"Uh, not yet,\" he replied, making it five for five. \"That's okay, though. We don't need to get into the nitty gritty. From what you've said, it sounds like I've timed it just right. Clark, don't tell anyone, but I've been in negotiations with another firm for the past couple of months. I didn't read your report so I wouldn't have to answer any questions about it if they asked. Delete all copies from the server and backups, and shred any hard copies you might have printed.\" \n\nHe smiled as he added, \"We sign the paperwork tomorrow and they'll be taking over on Monday.\" He was still looking pleased with himself as he looked out the window, even as my world came crashing down around me. \n\n\"But, Monte\u2014\"\n\nHe held up his hand sharply as he looked around at me with a strange expression. \"Yeah, it becomes their problem on Monday and we won't have to worry about it. Oh, and remember, like I said, you can't tell anyone about this. Any of it.\"\n\nAnd just like that, Monte Wiederhoff, just a few years older than me, was set for life as he ruined mine, with me and the rest of the top management of Pelton Wiederhoff becoming surplus staff while he walked away with millions. The new boss showed up on Monday morning and our senior leadership team was escorted out of the building well before the end of the day.\n\nDespite having an undergrad degree in economics from Princeton, an MBA from Wharton, and almost 26 years of experience using them, suitable jobs were in short supply due to the economic downturn, which worsened about that time. My marriage, which had long been on the rocks, went down the tubes just weeks later, too, and I found myself in the basement efficiency owned by Mrs. Edna Katchekamp, an elderly woman who lived a short distance from my former home. It was tiny but relatively cheap with utilities and wifi included.\n\nAfter a long and grueling job search, I landed a great new position, but due to the company's contracts and the retirement date of the person I'd be replacing, it didn't start until the end of January. Despite my request, they couldn't take me on early, even at a reduced rate. \n\nUnfortunately, all that made it even more difficult to find something that would pay my bills and offer health insurance to cover the interim. With bills, spousal support, and college payments due, I was forced to take the only near-term job offering I had that offered medical insurance: full-time as a stock clerk at the local supermarket. With that and a bit of part-time work from local accountants, I figured I'd be able to make ends meet until my new job started. \n\n***\n\nSo, four nights before Christmas, it seemed that Mrs. Rauschenberg and practically half of the rest of the customers in the grocery store were looking for it. With people baking and cooking for the big day, I was restocking shelves like crazy on Aisle 9, the baking goods section, and had already answered the same question at least a dozen times. Each such customer was disappointed to learn that there wasn't a single jar of it in the entire store. \n\nSome, like Mrs.Rauschenberg, asked if I could check the storeroom to see if there wasn't just one more jar hiding back there, and a couple of people even asked if I could call one of our sister stores to see if they had any in stock. I sent the last two to the front desk for assistance and never heard the outcome. While they may have said it in different ways, they all claimed that they really needed it. \n\nWhat, you ask, was sought after with such fervor, was wanted with such great desire that it caused a shortage?\n\nMolasses, known in some parts as black treacle, that dark syrup obtained from refining sugar cane or sugar beets into sugar. \n\nMolasses? \n\nWhat? \n\nWhy?\n\nGood question, and, having only worked in the store for a few months, I didn't have a clue to the answer. Therefore, I walked toward the front of the store, determined to find out. \n\nI knew from my restocking work over the past four months that molasses would sit on the shelf for weeks or even months without needing to be restocked. Oh, a jar would disappear periodically, sold to some gray-haired lady or another, but for the most part, it was rare for more than two or three jars to be sold per month. \n\nThen suddenly, just days before Christmas, there's practically a stampede for the damn stuff, which gets us back to the question: why?\n\n\"Excuse me, Mr. Manetti, do you have a moment, sir?\"\n\n\"Sure, Clark, what's up?\" asked our store manager.\n\n\"Molasses, sir. There's a run on them. Do you have any idea why?\"\n\n\"Oh shit! I forgot!\" he exclaimed, looking genuinely upset with himself. He wore a pained expression for a few moments while he chastised himself inwardly before retaking control and turning back to me. \n\n\"Clark, molasses are used in some cakes, pies, and other recipes, but the biggest use at Christmas time is probably in gingerbread for cookies and houses. I always order a few extra cases on December 1st, but it slipped my mind this year. How's our supply holding out?\"\n\n\"Gone, sir. We're out.\"\n\n\"Fuck!\" he said, completely losing his usual cool, but then looking around, almost in panic that a customer or one of his senior managers might have heard him. Leaning close to me, he whispered, \"Every blue-hair in the store is going to be upset now and the backstabbers will have it in for me. This needs to be our little secret, understood?\"\n\nI was trying to keep from smiling as his quiet little conspiracy unfolded. \"I'm going to my office now to see if I can still get a case on tomorrow's truck. You keep stocking and, if anyone asks, you tell them we should be receiving some from the warehouse any time. Got that? Any time! And not a word!\"\n\n\"Yes, sir,\" I said as I walked away, wondering if Mr. Manetti and Monte Wiederhoff might be relatives.\n\n***\n\nThe number of people asking for molasses continued to climb as the evening progressed, with the male customers, few of whom would be doing the actual cookie making, being even more upset than the women since each would be disappointing his wife or significant other who was looking forward to making their own little army of gingerbread men or village of gingerbread houses. \n\nA couple of them hinted that their evening's extracurricular activities would be sadly lacking if they failed to deliver. I felt sorry for them in a way, but considering my months without sex following several years of practically no affection from Greta, my ex, I didn't dwell on their misfortune too much since I had more than enough of my own. \n\nIn addition, Keith Donaldson, the evening manager, walked by Mr. Manetti's office several times, trying to figure out why the store manager would be staying so late. Mr. Donaldson was rumored among the staff to be after Mr. Manetti's job, so I suspected that he was Brutus No. 1 in Mr. Manetti's eyes. I made it a point to avoid running into him; if we didn't talk, I wouldn't have to answer any potentially uncomfortable questions. By doing so, the evening passed, and the light went out in Mr. Manetti's office around 8:30 PM. \n\nHowever, it was just after 11 PM, only about an hour before my shift ended, when things changed. \n\nA drop-dead gorgeous woman in her early to mid-forties went beyond disappointment when I told her that there weren't any molasses available. With the baking aisle finally deserted except for the two of us, she stepped in close to me and touched my nametag with an almost loving caress before sweeping her long blonde hair behind her shoulders and unzipping her jacket. \n\nThis gave me a spectacular view of her impressive breasts barely contained in a lace bra under a sheer white shirt. The bra wasn't padded, making her erect nipples be displayed quite prominently through the thin fabrics. With the shirt unbuttoned down to her sternum, those sizable and quite delectable mounds did a wonderful job casting a shadow into the Great Valley of Cleavage between them. \n\nIn a rather deep, sultry voice, she whispered, \"Clark, you're a rather good-looking guy; I'll make it well worth your while if you'll go back to the stockroom and find me a jar. Just one, Clark, just one little jar is all I need.\" \n\nMy heart was in my throat as this beautiful woman, with her jacket opened wide, swayed slightly, brushing the projecting tip of one breast and then the other against the stocker apron that covered my chest. My blood raced and I felt myself swelling in response, but I quickly tried to force myself to relax, focusing on her eyes rather than her wondrous display. \n\n\"Ma'am, ahem, I'm so sorry, but we really are completely out at the moment,\" I told her in a low voice that almost quivered. \"You could be offering me the moon and the stars and I still wouldn't be able to help you tonight. There's a possibility we might get a new shipment tomorrow or the next day but\u2014.\"\n\n\"Well, the moon might come out to play and I might help you see stars if a jar turns up,\" she whispered with a smile, running her fingers up the front of my apron at my crotch level, just brushing my hardening member. Pulling away, she handed me her card as if drawn out of the air. \"My number's on the bottom. If you get some in, give me a call, Clark, and we'll draw straws for who's on bottom\u2014or top?\u2014first to celebrate.\" Seeing my obvious discomfort, she touched two fingers to her lips before touching them to my cheek.\n\nI must have looked like the proverbial deer in the deadlights at that point for it was the first time I'd been seemingly propositioned in my few months working at the grocery store. I tucked that card away in my wallet so she could see I wasn't losing it, but my face reddened when I saw her staring at the foil wrapper I'd recently started carrying in it.\n\nIt was an amused little smile that crossed her face before she added, \"If you find that jar, you might want to think about picking up a few more of those. Ciao.\" \n\nHer eyebrow went up suggestively, and then, with her jacket rezipped as if by magic, she turned and walked away. Wearing high heels and tight jeans with her butt cheeks doing a dance of their own below her jacket as she walked, I could only return her stare of moments earlier. \n\n\"Holy shit!\" I breathed at barely a whisper. \"Please, God, please! Send molasses on that truck tomorrow!\"\n\n***\n\nPerhaps God had my best interests at heart, saving me from either embarrassment at the great joke she'd just played on me or possibly death by fucking if she was actually serious, for the truck arrived the next day with nary a jar of molasses. Or maybe He was punishing me for my devilish thoughts of the evening before. \n\nWhatever the case, Mr. Manetti spent part of his day locked in the office away from our customers while trying his best to get us a crate of molasses. During that time, I kept dealing with customer inquiries into what some store employees were now jokingly calling the Great Molasses Shortage. \n\nFollowing my discussion with, according to her card, one Madeline Rector, she of the beautiful blonde hair, superb tits, and incredible ass of the evening before, I gave it a lot of thought. Perhaps, if we were to get a new shipment, I could have an enjoyable time with Madeline. Maybe I could even use the promise of jars of that much desired treat to improve my love life. \n\nGrowing up, I was always a nerd. I was extremely smart but even more uncool, with few friends and, in high school, fewer dates. Mathematics made sense to me, but people didn't, so I gravitated toward accounting. The problem with that is that numbers in accounting have to do with people, so I was eventually forced to deal with my issues, at least to some extent. I still had few close friends, but it got to the point where dealing with normal acquaintances and coworkers no longer felt like nails on a chalkboard. \n\nOne way I dealt with my issue was serving as a math tutor in college and grad school. The joy of seeing the light come on in another's eyes as they learned some previously elusive concept made me want to help them, and I think some of the girls eventually felt similarly about me. As a result, I had sometimes, strictly at their suggestion, accepted payment in kind rather than cash from a few of these friendly young nymphomaniacs. I'd never been naturally comfortable around girls so between the tutoring, those encounters, and a couple of girlfriends who were as socially awkward as me, my higher education had opened my eyes to new perspectives, desires, and opportunities. \n\nNow being older and somewhat more certain with regards to the moral aspects, I would never trade molasses directly for sex, but by offering to help them, I'd be getting names and phone numbers for the start of what might be a little black book to help with new opportunities over time. If I helped a woman get what she needed, perhaps I'd make a new friend that I could call a short time later? What if that call led to a date? What if that date led to sex or maybe even, in the long run, more?\n\nYes, it was admittedly a long shot, but given the possibilities and my long drought, maybe I could leverage the lack of molasses into something beneficial. In the end, I came up with a plan and a new method of dealing with customers looking for a jar.\n\n\"No,\" I told the men and most of the women. \"I'm sorry, but we don't have a single jar in the store. It's possible we might receive some tomorrow or Christmas Eve.\" To the men, I added, \"but I'm not counting on it. You might try some of our other local stores.\" For the women, I offered a bit more hope, encouraging them to check again, but this was primarily because females, particularly in relationships, tend to shop and spend much more on groceries than men. \n\nFor women that attracted me in some manner or another, I used a different tactic I learned from my encounter with Madeline. \"No, ma'am,\" I'd say, \"we're out at the moment but there's a really good chance we'll get some on the truck tomorrow or possibly Christmas Eve. If you'll just leave me your name and number, I'll be glad to give you a call to let you know if any comes in.\"\n\nBy doing this, I'd collected the names and telephone numbers of six women plus the delectable Madeline's before the end of my shift on December 22nd. That's not a lot, but considering I didn't even have a little black book to write them in, it was a start. In fact, in my current state, I'd have taken any of them to bed...or to a private corner in the stockroom, if such a place actually existed. No, I knew I wouldn't be directly trading molasses for sex, but I had obtained valuable information that I might use over time when my circumstances were improved after my new job started and I had a real place again. \n\nWith those thoughts in mind, I took my cart to the storeroom as the loudspeaker was asking people to make their final purchases since the store was closing in five minutes. On my way out, I was walking back down Aisle 9 to make sure I hadn't left anything out of place or any cardboard on the shelves when I saw her looking at the open slot on the bottom shelf where, at most any other time of year, jars of molasses would be gathering dust.\n\n\"Excuse me, miss? Can I help you?\" I asked.\n\nShe turned to me with a pout-like expression on her face that immediately turned to a warm smile when she saw me. \"Hi! Thank you! I'm looking for molasses, but I don't see any on the shelf. Do you have any elsewhere or in the back?\"\n\nShe wasn't a walking sexpot like Madeline or maybe even as pretty as some of the other women whose names were currently in my wallet. Wearing nurses' scrubs, she looked quite tired and wasn't wearing makeup, but she had a pretty face and was actually what I would have considered my \"type\" before I met Greta. She stood about five or maybe six inches over 5-feet tall, was well built, and had reddish-blonde hair that hung a bit below her shoulders. She appeared to be in her mid to late 20s, and had the body of someone who runs or exercises regularly. Most of all, it was her bright, friendly smile and those pleading blue eyes that melted my heart. ",
        "\"I'm sorry, miss\u2014\"\n\n\"Melanie,\" she said, extending a hand. I took it, shook it, and, feeling as if it belonged in mine, didn't let go for a few seconds longer than I should have. Melanie didn't seem to mind, though, as she smiled and said, \"You're Clark? It's very nice to meet you, Clark.\"\n\n\"You, too, Melanie. I'm really sorry, but we're completely out of molasses at the moment. There's a chance we might get some in on the truck tomorrow if you'd like to check back.\"\n\n\"Oh, that's too bad. I have to work again tomorrow and, even though I won't be this late, it would be long gone before I could get here. I guess I'll just skip\u2014\"\n\nI'm not sure what it was about her because I wouldn't have done this just seconds earlier. She was way too young for my little black book project but I suddenly wanted to help her so I made a snap decision. \"Tell you what, give me your name and number and if any arrives, I'll be sure to save you a jar and will give you a call.\"\n\n\"Thank you so much, Clark! You're such a sweetheart!\" She surprised me even more when she hooked her arm in mine and we walked toward the front of the store together. When we got to the front, she gave my arm a squeeze before letting go and telling me goodnight. \"And if I don't hear from you, Clark, I hope you have a very merry Christmas and happy holidays.\" \n\nThat smile and those eyes did a number on me again, causing my toes to curl, before she turned and went to pay for a couple of other items she'd had in her basket that I hadn't even noticed. From wondering why I was doing it to being really glad I'd asked for her number had taken less than a minute.\n\n\"Whoa, Clark! Got a hot date?\" asked Keith, the evening manager, coming up behind me. \n\n\"Oh, no, sir. I tried to help her find molasses, but no luck.\"\n\n\"Got it,\" he replied with a laugh. \"Mr. Manetti's Major Molasses Mess; I'm guessing corporate will demote or maybe even fire him over this.\" Whispering, he added, \"I've heard they've received a number of phone calls from disgruntled shoppers.\" \n\nWith his laugh and his smirk, it appeared to me that the rumors of his designs on Mr. Manetti's position were true. I even guessed that some of those calls of complaint might have originated from him. Keith drew a deep breath and looked over what he was hoping would soon be his domain. He added, \"Yeah, Manetti's hoping to get some in tomorrow...but I'm not holding my breath.\"\n\nI laughed as I nodded, for a lot more reasons than he thought. \"Yeah, hopefully.\"\n\n***\n\nDecember 23rd arrived, crisp and cold, but the molasses didn't. Three more names and numbers went in my wallet, but I'd begun to give up hope that I'd be able to help any of them or myself. The clock seemed to crawl toward our midnight closing, and I dreaded getting up early the next morning for one last effort before Christmas. \n\nWhen I got home late that night, it was a mixture of all the disappointments of recent months and the lack of companionship that had been brought front and center with my molasses experience. It was ridiculous to think that someone like Madeline would actually go through with her playful suggestiveness, but it gave me some sense of hope that my sexual drought wouldn't last forever. \n\nAs I showered just minutes later, these thoughts continued and I found myself hardening and becoming aroused at the thought of Madeline, her breasts with large pink areolas and those hard, prominent nipples pressed against me and then enveloping my hardness as I slid up and down within their fullness.\n\nI rinsed my hair as the hot water sprayed over me and I could almost feel Madeline wrapping her long, strong legs around me, taking me deep within her velvety tunnel before we rocked together for ages. \n\nTurning with my eyes still closed, the scene changed as I found myself increasing my stroke, full and long. I could see Madeline's breasts swaying magnificently below her as she was on all fours slamming that incredible ass back against me, her lucious softness engulfing me and working me with well-toned muscles that Greta had forgotten as soon as Andrea, our younger child, was born. Or maybe it was Chad, our elder? Whichever, my hands gripped Madeline's unnaturally tiny waist in my mind as I continued to pound against her big, warm behind, my desire and the fire within me building as I did, as my balls slapped against her smooth, well-padded labia.\n\nThe buildup reached the tipping point and I groaned lightly as I opened my eyes with the water streaming over me. I fired off one, two, three ropes as I continued pumping my member, the vision of Madeline now gone. Small spurts followed as the last of the spasms ended. \n\nAfter cleaning myself and the shower, I went to bed in the pleasant, light cloud of what might have been post-coital bliss but was actually the only stress relief I was likely to get for quite some time. It was almost sad when I laughed that I'd allowed myself, for whatever brief period, to imagine that there might be something between Madeline and me. \n\nSinking down on my bed, I arranged my pillows just so and put Madeline out of my mind. As I did, a vision of Melanie briefly passed before my eyes; unlike Madeline, who I could imagine nude in such exquisite detail, all I could see of Melanie was her pretty young face with that beautiful smile and those pretty blue eyes...\n\n***\n\nThe store was closing at 4 PM on Christmas Eve, so my usual 3 to midnight shift became a 7 to 4. That was a good thing since I was there at 8 AM when the truck pulled in from the warehouse. Pallets came off and the other stockers and I immediately started breaking down those directed to our assigned aisles, sending what we could to the shelves and the rest for restocking over the next few days after Christmas.\n\nWith the last minute cooking and baking rush before the holiday, my pallet was jam-packed with things that needed to go on the shelves. For the next three hours, I worked it down, with frequent breaks needed to help customers find uncommon Christmas needs, from meringue powder to chocolate bark, from cooking twine to the right decorative sugar crystals. I was down to the last few boxes on the bottom layer of my pallet when I found it: a whole case of Noughton & Galdoff's Unsulfured Molasses! \n\nMy heart raced as I slit the tape and pulled open the top flaps. Inside, separated by a cardboard grid, were twelve 16-fluid ounce jars of tart, ooey, gooey, heavenly sweetness. Two cups each, 1/3rd more than the other leading brand (at least according to the note that N&G had emblazoned across the label). \n\nI looked at the jar I was holding, making sure it was unbroken, before sliding it back down into its slot. Seconds later, I'd confirmed that they were all safe. Trying to calm my breathing, I folded the top flaps to close it, and then moved that oh-so valuable box to my aisle cart before dealing with the last few items on my pallet.\n\nThe lunch crowd arrived and I spent most of the next hour helping customers find more of the usual, the unusual, and the downright obscure. It was almost 1 PM when I got back to the stockroom and pulled out my wallet. My initial excitement had waned as I worked, realizing that my plan would likely result in me not getting sex but getting fired instead. \n\nI counted out ten slips of paper and Madeline's card. Pulling one of the slips from the stack, I dialed the number. \n\n\"Hello, this is Clark Delahoya at the grocery store. May I speak to Amy Sedecker?\"\n\nIt was Amy and she immediately knew the exact reason for my call. \"Clark! You got the molasses?\"\n\n\"Yes, ma'am! We got a shipment a little while ago. I'll be glad to hold the jar for you if you still want\u2014\"\n\n\"Yes! Yes! Please do! I've always said you folks have the best customer service in the business and now you've proven it today! My husband will be there in a little while! What time do you close today?\"\n\nMrs. Sedecker and one other married lady promised to send their husbands to the store to pick up the molasses. I tossed their names and numbers in the trash after learning of their marital state. I might be horny and need sex terribly, but if anything were to happen, it definitely wouldn't be with a married woman.\n\nA couple of the women promised to come personally to receive their prizes; their slips went back in my wallet. \n\nOne lady had found a jar at another store, so, not remembering who she was, I tossed her paper as well. \n\nAnother woman, Renee, had tried substituting dark corn syrup with mixed results; she went on about the lack of tartness and how she couldn't believe we didn't have molasses at Christmas time. With her voice and attitude grating at me, her paper went in the trash, too, and I deleted the call, being sure I wouldn't accidentally ring her in the future.\n\nI don't remember the rest of the details, but at least one other had decided to skip gingerbread cookies in favor of making something else, and I left messages for the rest. When I came to Melanie's number, that call went to voicemail, too, but unlike the others, I hesitated and hung up, deciding to try her again in a little while. \n\nWhen all the calls were made except Melanie and Madeline, I tried Melanie again, saving Madeline until last. Melanie's phone kicked over to voicemail again, so, disappointed, I almost sighed when the little beep told me to start. \n\n\"Hello, Melanie? This is Clark, Clark Delahoya, from the grocery store. We met the other night when you were looking for molasses. Well, we received a case of them on the truck this morning so I'm holding a jar for you in case you still want it. If you do, we're open until 4 today, so give me a call on this number or just come on by as soon as you can. I'll be on Aisle 9 or you can have me paged at the service counter. I hope to see you this afternoon, but if not, have a really wonderful Christmas and I hope that I'll see you again in the New Year.\"\n\nI only realized what I said about hoping to see her again as I hung up. I'd be leaving the store about three weeks after the start of the new year. \"Maybe she'll come in before then,\" I grumbled to myself before pulling out Madeline's card. \n\nI dialed the number and Madeline picked up on the second ring. \"Hello, this is Madeline. Who's this?\"\n\n\"Hi, Madeline, this is Clark Dela\u2014\"\n\n\"Clark! You have my molasses!\"\n\n\"Yes, ma'am\u2014\"\n\n\"Clark, if you don't stop calling me ma'am, I'm going to spank you until you scream. Or maybe let you spank me until we both do?\"'\n\nMy voice hung and I wasn't able to say anything as I thought of the possibilities. I'd never been into spanking with Greta beyond the occasional love swat, but I could imagine doing some barehanded spanking across Madeline's behind, feeling the firm flesh of her buttocks, the soft sponginess of her sweet, delicious peach, and watching them quiver\u2014\n\n\"Clark? Clark! Are you still there? Do you have a pen?\"\n\n\"Ahem...ah, yeah, Madeline. Go ahead.\"\n\nShe gave me an address. \"Bring them and be here at 6 PM sharp. Don't be late!\"\n\nShe rang off before I could say anything. \n\n***\n\nI left the store at closing time with two jars of N&G molasses and a bottle of good cabernet sauvignon that was on sale for Christmas. Sandie, the cashier, frowned at me for making her keep her register open until 4:02 PM, but since one last customer came running up behind me with a cart that would take at least five minutes to ring up, I gave her a wry smile with a cock of my head in reply, but relented and wished her \"Merry Christmas\" as I went on my way.\n\nBack at the little apartment, I shaved, manscaped, showered, and dressed before spending too much of the next half hour pacing nervously. Even if it was a prank on Madeline's part, it was the most excited, both physically and emotionally, that I'd been in ages. If anything were to happen between us, I was concerned about my body's reaction after such a long period without feminine attention or sexual intimacy.\n\n\"Stay calm, Clark,\" I said to myself. \"Relax and it will be fine.\"\n\nI don't know how many times I repeated that on the drive to Madeline's house. Dark clouds were rolling in, promising rain, when I pulled into an upscale, gated community. I scrolled through the list of names on the screen and hit the buzzer. \n\n\"Who is it?\"\n\n\"Clark Delahoya.\"\n\n\"Clark! Come on in! First street on the right, first on the left after that, eighth house down on the right. Looks like it's going to rain so pull right on up in the garage; the door is open. See you in a couple!\"\n\nWith the clouds continuing to roll in and with the probability of rain arriving shortly, I appreciated the offer on the garage. However, it also struck me that a simple delivery wouldn't take more than a minute or two; perhaps she really had something more in mind as she'd playfully suggested.\n\nThe first raindrops hit my windshield as I turned onto Madeline's street. Being too warm, we'd be having a soggy-rather-than-white Christmas. On turning into the driveway, I pulled to the side of the house and backed up to line up to enter the garage. The light was on inside and the garage door started closing as soon as I stopped the car. If Madeline was a serial killer....\n\nSerial killer or not, she was dressed to kill as she stood by the door into the house in a long, Christmas-green dress with a deep cut at both the neckline and bottom. \"Clark, dear! Come in! Did you bring it?\"\n\nI pulled a Christmas gift bag out of the car and handed it to her as she ushered me into the house. \"Merry Christmas, Madeline.\"\n\nShe bit her lower lip in anticipation as she peeked into the bag. There was a squeal as she pulled the molasses out and kissed them. \"Excellent! And you brought a bottle of wine! Aren't you just the sweetest thing?\"\n\nTo have cared so much about the molasses, she rather unceremoniously placed them and the bag on the counter before stepping into my arms. \"Wine can wait; I can't.\"\n\nEvidently, some type of wine hadn't waited for I could taste it on her lips as they pressed against mine. She was a tiger, kissing me furiously, making my heart race and head spin after so many years of Greta's chaste little pecks that she erroneously called kisses. Her breasts pressed against me, soft pillows that plumped and pressed firmly against each other, promising great delights if things continued on the current track. \n\nI felt an instant response downstairs in response to Madeline's attentions, and she must have felt it, too, as she started a little dance, rubbing her pelvis against me, rocking to one side and then the other over my hardness. Her entire body joined in with those fabulous boobs really pushing my buttons, sending me a stronger signal than an SOS.\n\n\"Madeline, I want you,\" I breathed, a barely audible gasp that was cut off when her lips recaptured my own. She did respond, though, by sliding her fingers inside my waistband. \n\nFinding what she was seeking, she rubbed me over my briefs as her tongue invaded my mouth, tangling with my own before withdrawing just as suddenly. \"Upstairs! Hurry!\"\n\nShe tried pulling me by the waistband as we went, but she quickly saw the problems with that and switched to my hand. To her bedroom we flew, as fast as Santa's coursers over the new fallen snow in Moore's famous poem.\n\nMadeline lost her dress in an instant, and my shirt and pants were only a couple of seconds behind. I was pushing down my undershorts as she released the front clasp on her bra, allowing her breasts to spring forth in all their magnificence. Her areolas were even larger than I'd imagined.\n\nMy dick pulsed, getting harder still, at the scene and Madeline must have liked it for she pushed me back where I sat on the very edge of the bed. She grabbed me with both hands and brought her mouth down, engulfing me.\n\nHaving been years since Greta had even considered doing anything of the sort, I almost came at once, but I made a face that would have put Popeye to shame as I fought off the urge.\n\nMadeline's head was riding up and down on me as she shoved my shorts down the rest of the way with her hands. She had a great technique, alternating her motions, concentrating on the head and frenulum for a bit before going back full bore for a few strokes, with the tickle of her hair only stimulating me further. \n\nMy hands ran over her, caressing her hair, her shoulders, and finally her breasts while she continued her most pleasurable assault. Without the bra, they sagged a bit due to their size, but I was delighted to give them what help I could, gently squeezing her nipples between the bases of my fingers, using the tips below to massage and squeeze.\n\nShe surprised me a few seconds later when she left off my member and started rolling a condom down my shaft. I have no idea where she got it unless it was tucked in the waistband of her thong that dropped to her feet as she moved. She pushed me back and climbed atop, not even giving me a chance to enjoy the taste of her flower. Her sex practically danced over me as she held her hands on my chest to support part of her weight. After a few swipes, she let go with one hand, positioned me at her opening, and then sank down on me in one smooth, oh-so-delicious motion. \n\nBeginning at my tip and running all the way to my toes, it was like a rolling wave of pure pleasure as she took me within herself, bottoming out against the base of my cock, her ass pressed against my balls. She rested her thighs atop me, still wearing her black high heels, as her pussy clenched and started to massage me, rocking forward and back before she raised up a bit and slammed back down on me. \n\nOver and over she crashed against me as I matched and opposed her motions, bringing even more force to our coupling. Her moans were loud and nearly constant, while I could only hold on, trying to delay my inevitable release until she was ready. I held her breasts, supporting them from below, both for the pleasure and to keep them from smacking her due to her violent ride. \n\nI gave a playful pinch to each nipple that caused her to almost roar, \"Pinch harder. Squeeze them, damn you!\"\n\nShe asked for it and she got it, with me pinching her nipples and squeezing her breasts as she continued slamming into me and drawing back, only to do it again, over and over. I saw movement in the background and realized there was a full-length mirror in view, so I enjoyed taking peeks at her well-defined ass doing its own up and down dance in time with her ride.\n\nIt was sudden when her head flew back and she cried out, a long wail of what I hoped was sheer pleasure rather than some type of horrible attack, but she collapsed on me then, kissing my neck and shoulders as I thrust into her a few more times before filling that condom practically to overflowing. Her sucking at my neck would probably leave a hickey, I realized, but there was no time to worry about that. I quickly pulled out, hoping that there hadn't been any leaks, for if she was fertile at the moment, I could see having the potential for fertilizing a whole carton of her eggs, if she chose to package them that way, from my part of the contribution. \n\n\"My God, Clark, that was like Superman,\" she gasped, still breathing hard. \"Are you sure your last name's not Kent?\"\n\nI didn't laugh at her joke, considering that my grandmother, who's surname had been Clark before marrying my grandfather and after whom I was named, wouldn't have appreciated it, but I didn't let it bother me either, continuing to kiss her head. She'd had enough of that, though, rolling off and drawing her knees up high, spreading herself wide open. \n\n\"Now, eat me!\" she demanded. \"Do it!\"\n\nNot having had the chance to enjoy such a delicacy in many years, I jumped at the chance to sample her freshly fucked pussy, sinking my tongue into her depths to experience her aroma and taste before moving to her clit. It was a large dot, already well stimulated, and I started working it more, trying to give her at least one more orgasm in this round of our evening. Her climax was building and when I thought she was close, I slid two fingers into her to send her over the edge. Her hands, entwined in my hair, pulled me tight against her and held me there as even more of her delicious juices entered my mouth.",
        "I raised up, grinning like a wet-mouthed Cheshire Cat to see the enraptured look on Madeline's face. \"Any time you want to do that again, Clark, you call me, you hear? Send me a text and we'll get together, okay? I'll even take off from work.\"\n\nWow! My luck had changed! This incredible woman wanted to be my lover, if not in love, at least on the physical, friends-with-benefits fucking side, and I couldn't have been happier.\n\nFor all of maybe ten seconds, anyway, for that was when she added, \"You better get dressed and go. My husband will be home in a little while.\"\n\n***\n\nI parked in an empty parking lot out on the main road; being almost 7 PM on Christmas Eve, it was dark and all the stores and businesses were closed or closing. I'm not sure how far I was from Madeline's house or even how I got there. The burning embarrassment I felt so soon after such incredible sex almost tinged my eyes blood red. \n\nWhen in college, in grad school, and in the following time before I met Greta, I'd been happy to screw any of my tutees who suggested it and any of the nerdy girls willing to have me. Being so geeky myself, I gravitated to them and had several of them, short or tall, skinny or heavyset, pretty or\u2014well, maybe not too ugly\u2014before finally trying for a beautiful Betty somewhat similar to Lewis Skolnick's in one of my favorite movies.\n\nWhile that didn't turn out well, it encouraged me to date beyond my usual crowd and I came to enjoy the results. During all that time, though, I always drew the line at married women or even those seriously involved with someone else. Not wanting them to do it to me, I didn't want to hurt someone else in such a relationship. \n\nBeing older and free for the first time in so long, my sights were more focused on my specific \"type,\" but married women, even if they were a 100% match for that, were still strictly off limits. \n\nNow, unknowingly, I'd violated that sacred tenet on my first such encounter. \n\nMy breathing calmed as I sat there watching the raindrops falling. I honestly thought Madeline had me pull into the garage because of rain, not to hide what turned out to be our illicit affair. How wrong I'd been!\n\nI wiped the remaining glisten from my forehead and cheeks before rubbing my nose and mouth. As I did, I detected the smell of sweat and sex, Madeline's delicious sex, calling to me to do it all over again. She'd said she wanted it again, so maybe\u2014\n\n\"No!\" I said aloud as I set the GPS on my phone for home. \"I can't see her again. Ever.\"\n\nThe app showed I wasn't far from an area I knew, so I followed the route, heading home. I'd get a shower and then try not to dwell on the sad state of my Christmas holiday.\n\nOur college-aged kids were going with Greta to her parents' house, so I'd mailed their presents there. I'd also included a box of candy for Alvin and Berta, since I'd always gotten along so well with them, even through the divorce. Greta's present was, in my mind, as lost and missing as our marriage.\n\nI was turning onto my street just seconds from Mrs. Katchekamp's home and my little apartment when my phone rang. Thinking it was one of my kids, or maybe both, I pulled to a stop on the side of the street and looked at the number. No, it wasn't Chad or Andrea, but it looked vaguely familiar so I answered.\n\n\"Hello?\"\n\n\"Hi! Is this Clark? This is Melanie Watkins. We met at the grocery store.\"\n\nMy heart was racing in an instant. \"Melanie, of course! Hi! You got my message?\"\n\n\"Yes, thank you so much, Clark. I've been so busy today; I just got off work and found your message. I know the store is already closed and it's too late to go get the molasses, but I wanted to call and thank you for following up with me. Jenna, my daughter, will be disappointed that we won't be making gingerbread cookies, but I'll tell her we'll make sugar cookies instead and that can be fun, too.\"\n\nMelanie said something about cookies but I really missed most of what she said after she said \"my daughter.\" I'd be crossing her off my list, too\u2014if she'd ever truly been on it\u2014as soon as I went inside my apartment. Considering I might be as much as twice her age, I was surprised at how sad that made me as I pulled into my assigned spot in Mrs. Katchekamp's driveway and killed the engine.\n\n\"Well, Merry Christmas, Clark. I hope you and yours have a great time.\"\n\nShe was on the verge of hanging up when I saw the bag on the floorboard of the passenger seat. \"Melanie! Wait!\"\n\n\"Clark? What's wrong?\"\n\n\"Ahem, Melanie, when I didn't hear back from you before closing time, I went ahead and got the molasses. If you still want them, text me your address and I'll drop them off for you. You said your daughter wants to make cookies? There's no reason to disappoint her.\"\n\n\"Really? Oh, Clark! I can't believe you did that for us!\" \n\n\"It's nothing, really,\" I said. \"I just got through, ah, working out, so I've got to get a shower to get this stink off of me and clean up, but I can come by and drop them off either a little later this evening, or even anytime tomorrow, depending on when you're available, if that works better for you.\"\n\n\"Clark, you're such a sweetheart! How about 8 or 8:30 this evening?\" \n\n\"Sounds great. Text me your address and I'll see you then.\"\n\nI tried to steam Madeline's essence off of me but Mrs. Katchekamp's water heater wasn't big enough or hot enough to do the job, so I scrubbed and scrubbed again, brushed my teeth and tongue for ages, and then dressed in khakis and a sweater that looked somewhat Christmassy. In fact, it was the only slightly Christmassy-looking thing I owned, so it would have to do. I had a bit of ribbon left over from wrapping and sending the gifts to the kids and their grandparents, so I took a length of it and tied it around the neck of the jar with a decent bow. I couldn't remember Melanie's daughter's name and didn't think she'd mentioned her husband's name in our overwhelming conversation, so the little card I taped to the top read \n\nTo Melanie and Family. Merry Christmas! From your friend, Clark\n\nI didn't have an extra gift bag, so the flimsy plastic shopping bag from the grocery would have to do. Umbrella in one hand and the bag with the molasses in the other, I headed back out to the car, my heart heavy that my friendship with Melanie would be so short lived. \n\n***\n\nMelanie and her family lived in a small bungalow-style home with similarly sized houses on either side of it. Being an older home probably built in the late 40s or 50s, it had a covered front porch with a few steps leading up. With no streetlights, the only way I could see all of this was that Melanie, or maybe her husband, had pulled a Tom Bodett and left the light on for me. \n\nThe rain had stopped so I parked on the street and hurried up the walk to the house. An old Honda Civic sat in the driveway, but with the limited light from the porch, I couldn't see if there was another car on the other side or in front of it. \n\nStepping up on the porch, I raised my hand to knock when the door opened and there stood Melanie with a little girl somewhere around five or six years old dressed in her one-piece pajamas standing next to her. Melanie smiled at me, a genuine, friendly smile before she said, \"Hi, Clark! Come in, please. This is my daughter, Jenna. Jenna, this is Mr. Clark.\"\n\n\"Hi, Mr. Clark,\" she said, extending her hand matter-of-factly to shake mine as her mom closed the front door. \n\nI did, dropping to one knee in front of her, before taking her little hand in my own and giving it a firm but gentle shake. \"It's nice to meet you, Jenna. You're such a big girl and have such a great grip. How old are you?\"\n\nShe giggled and looked rather sheepishly at Melanie before turning back to me. \"I'm six, Mr. Clark. How old are you?\"\n\nHaving been quite some time since Andrea had been that age, I wasn't expecting that, but Melanie, with an embarrassed look on her face, shushed her. \"We don't ask adults that, Jenna,\" she explained. \n\nStill on a knee in front of her, I grinned. \"It's okay, Jenna. I'm 50, but what's important is that I have a little Christmas present for you and your parents.\"\n\nA look\u2014surprise? shock, maybe?\u2014flashed across Melanie's face as I said this, but for only a second before her smile returned. She didn't have time to say anything, though, since Jenna squealed and asked, \"What's the present, Mr. Clark?\"\n\n\"I'll tell you what, sweetheart, I'm going to give it to your mommy since it's fragile and might break, okay?\" \n\nThe little girl nodded so I stood up and handed the bag to Melanie, who took it with a thankful smile. Melanie pulled the jar of molasses out of the sack. \"Jenna, look! It's molasses! We'll be able to make gingerbread cookies and a gingerbread house after all!\" Turning to me she added, \"Oh, thank you, Clark,\" before giving me a soft brush of her lips on my cheek. \"Thank you so much!\"\n\nSurprised at the gesture, I nodded, unsure what to do or say, but Jenna broke the impasse by yawning wide with a cute little sound as she cut it off, causing Melanie and me both to smile. \n\n\"Jenna, honey, go get in bed and I'll be in to tuck you in shortly. But tell Mr. Clark 'thank you' first, okay?\" \n\n\"Thank you, Mr. Clark,\" she said before surprising me with a hug.\n\n\"Good night, Jenna,\" I said. \n\nShe gave her mother a big hug, too. While she did, I glanced around the little living room. It was cozy, with the couch, a loveseat, and a chair surrounding a coffee table. Family photos graced the table below the TV mounted on the wall. My eyes were immediately drawn to the family portrait, with Melanie, a man dressed in an army uniform, and Jenna, about three or four years of age, with them. \n\nJenna took off toward the back hall to her bedroom at run, leading her mom to speak with a force and authority I hadn't witnessed before. \"No running!\"\n\n\"Sor-ry!\" came the call from a back room.\n\nMelanie caught my eyes looking at the photos, causing me to be embarrassed. \"I'm sorry, I didn't mean to snoop,\" I told her. \n\nShe shook her head at me. \"You weren't. Snooping is looking when they're hidden; these are in plain sight for people to see. That's my husband, Mitch, in the photo with us.\"\n\n\"He's in the army? What does he do?\" I asked, trying to be polite and overcome my disappointment. \n\nHer eyes clouded suddenly. \"He was a helicopter pilot. He went back on duty a few days after this was taken and was killed in a crash a few weeks later. That was about two and a half years ago.\" A tear slipped down her cheek.\n\nI felt horrible, having brought up the painful memory and leading her to tears.\n\n\"I'm so sorry for your loss, Melanie, and for prying. I didn't mean to\u2014\"\n\nShe held up a hand and shook her head. \"Thank you, Clark, but, again, you didn't do anything wrong to be sorry about. There's nothing we can do about the past but remember the good times and try to move on.\"\n\nMelanie was right, of course, so I nodded and then nodded my head toward the back where a little girl was waiting patiently to be tucked in. \"I better get going so you can do what you need to do back there,\" I said. \n\nWe took the two or three steps to the front door where I turned to her. \"Goodnight, Melanie, and Merry Christmas. I hope you and Jenna have a lovely time making your gingerbread cookies.\"\n\nShe thanked me and was opening the front door to see me out when she paused, looking a bit uncomfortable as she said, \"Clark, you said you could come by tonight or any time tomorrow. Don't you have plans for Christmas day?\"\n\n\"No, not really. I'll do a video call with my kids sometime tomorrow. They're 18 and 20 and are at their grandparents' house...with my ex.\"\n\n\"I'm sorry you can't spend part of the day with them. Say...would you like to come to Christmas dinner with us? We're going to have our little feast around noon and then make the cookies later in the afternoon. We'd love to have you join us.\"\n\nIt was such a sweet invitation, nothing like Madeline's vamp, and I so wanted to say yes, but the sadness was probably obvious when I replied, \"Melanie, I really appreciate the offer, but I don't want to impose.\"\n\nShe cocked her head and gave me a little scowl. \"Clark, it's kind of like apologizing when you didn't do anything to apologize for. It's not imposing if you're invited and the person inviting you wants you there. Noon, okay?\"\n\nMy sad expression melted under the brightness of her smile that followed. \"Noon sounds great, Melanie. I look forward to seeing you then.\"\n\n***\n\nI had trouble sleeping that night, angry that Madeline would have ruined such a great time by being married, and telling myself over and over that I should call Melanie and politely decline, using the old \"something-suddenly-came-up\" routine. She was far too young for me to be interested in her and way too young for her to possibly be interested in me. \n\nMy mind mentally calculated half plus seven equals 32, which was at least several years past Melanie's age, and the disappointment weighed heavily on me. My dad had taught me that rule when I was growing up, and although I'd never needed it since that one time, I'd never forgotten it, either. At least, I hadn't needed it again until now when I was practically 51. \n\nHalf, plus seven. Half plus seven. Thirty-two. Too, too old. And that wasn't even considering my upcoming birthday. \n\nYes, avoiding the situation would be best for both of us, I told myself over and over, before finally falling asleep. \n\n*** \n\nThe phone rang at 9 AM. It was Melanie.\n\n\"Hi, Clark! Merry Christmas!\"\n\n\"Merry Christmas, Mr. Clark!\" came Jenna's voice from in the background.\n\n\"Merry Christmas to both of you,\" I replied. \"I was just about to call you.\"\n\n\"Well, good. I saved you a call,\" she said cheerily. \"You think you can be here around 11:30? We'd love to have you help with setting things up.\"\n\n\"Ah, Melanie, about that...\"\n\n\"Clark, we've already been through that and resolved it, right? We want you to come so we'll see you at 11:30, okay?\"\n\n\"Melanie, I really appreciate it, but it doesn't feel right and I don't want to interfere with your Christmas. I'm very sorry and I've got to go. Goodbye.\"\n\nI was surprised at how much it hurt to do that, but I really didn't want to interfere or to get too close to a girl half my age. Even worse would be getting close to little Jenna and then not being able to see her anymore when Melanie's eyes opened and she recognized the difference in our ages. \n\nOh, I'm sure she was just being Melanie, nice and sweet, not even thinking of me in a romantic light, but once she thought about that age difference, she'd apologize and say she couldn't see me any more. I surprised myself, realizing I liked her too much as a friend to even risk stepping across the line between friendship and romance. \n\nIt was a very lonely day, not unlike many since my divorce, but stores and shops were closed so there was nothing to do. The normally tight confines of efficiency seemed even worse than usual, so I went for a long run between rain showers, trying to put Madeline, Melanie, and the events of recent months (and especially the night before) out of my mind. Jenna's hug, though, made me think of my Andrea, now a college freshman, who had little interest in me beyond making sure that her present arrived on time and that her bills were paid. \n\nI was almost back to Mrs. Katchekamp's house when my phone vibrated. Thinking it was a thank you note from Chad or Andrea for their presents, I checked my messages only to find a photo of a gingerbread man. The note that followed read:\n\nJenna really missed you today and wants you to see the Gingy she made for you. It would make her very happy if you'd come pick it up.\n\nI started to reply but paused, wondering why the little girl would be so interested in seeing me again. Could it really be Melanie putting Jenna up to it? \n\nAnother buzz. We're home all evening if you'd like to stop by to get it.\n\nDespite our ages and all the arguments I'd made against it, I was surprised to feel my blood rush at the thought of spending time with Melanie. Perhaps it was only that she saw me as a grandfatherly figure for her daughter, but it felt like something more. \n\nOr maybe, just maybe, I was hoping it was.\n\n***\n\nLoneliness and boredom can get to a person, particularly on a holiday when all is supposed to be merry and bright. I'd left a message for Chad and another for Andrea, but neither of my kids had bothered returning my call. My father and I spoke briefly; we hadn't had a good relationship in years since he'd left my mother, who'd passed away several years earlier. In fact, I hadn't spoken to anyone all day except for Melanie over the phone that morning and my dad, so my boredom and frustration were building up like a snowball rolling down a mountain as the afternoon turned to evening. Those little contemplative thoughts of earlier in the day had become huge by nightfall. A walk didn't help so I decided to do laundry on returning home.\n\n\"Clark! What on Earth are you doing?\" demanded Mrs. Katchekamp, making me jump as I was pouring the detergent. \"It's Christmas and you're in here doing laundry?\"\n\n\"Merry Christmas, Mrs. Katchekamp,\" I said, sopping up the spilled liquid with my towel. \"Nothing to do tonight, so I figured I'd at least do something useful.\"\n\n\"I'm sorry, Clark. Did you see your kids today?\"\n\n\"No, ma'am. They're out of town and have more important things to do, I guess.\"\n\n\"Well, come on upstairs when you get this set up and I'll fix you a cup of hot chocolate.\"\n\n\"Oh, no, Mrs. Katchekamp. I don't want to be a bother.\"\n\n\"Clark,\" she said with a huff, \"I could use the company, too.\"\n\nA few minutes later, we were sitting together in her living room holding cups of hot chocolate with marshmallows. It smelled so good but I'd already burned my tongue when I tried to take a sip.\n\n\"Let it cool, silly. That's why coffee and hot chocolate are such good social drinks. You have time to talk while they're cooling down.\" She blew lightly on the surface of her cup and looked at me expectantly.\n\n\"Ah...thanks for the hot chocolate.\"\n\nShe gave me a little frown. \"Okay. You said your kids are gone, but why didn't you make other plans instead of being here with an old lady drinking cocoa.\" \n\n\"Actually, someone invited me over, but I didn't want to interfere.\"\n\n\"'I don't want to be a bother. I don't want to interfere,'\" she parroted. \"Clark, when are you going to learn that people invite you to do things because they want you to do them, to be able to spend time with you? You've always seemed a little shy, but don't you get that?\"\n\n\"Uh...yes, ma'am. I do, but things are complicated...sometimes.\"\n\nHer frown was deeper this time. \"Okay, so...what's so complicated?\"\n\nI blew the marshmallow foam on top of the hot chocolate again, moving it out of the way to cool the liquid below. I was almost hoping that the drink would have cooled enough for me to gulp it down so I could say goodbye and flee, but it still felt as hot as before when I took a sip.\n\n\"I met a...a lady, name of Melanie. She's nice. She's sweet. She's pretty. I helped her with something at the store and she invited me over. I wanted to go but...but Melanie's young, way too young for me. I'm afraid that I'd find that I like her a lot but that she'd realize how old I was and\u2014\"\n\n\"Wait! Were you in disguise when you helped her? Makeup? Mask? Didn't she see how old you are?\"\n\n\"No, she saw, but I don't think she thought about that and probably didn't even think of me in a romantic light. If I tried to push the situation, to see if there might be anything between us, then she'd have plenty of time to think about it and send me packing. I just don't want to go through that, through the inevitable hurt.\"\n\nShe shook her head. \"You don't know if there's anything between you beyond friendship and you're already thinking about breaking up? My granny used to tell me that's called getting your buggy before your horse. Give it a chance and you may find out it's not even an issue. Or, you may find out that you and this Melanie are head over heels for each other and can't live without each other no matter how much difference in age there is. So how much is there anyway?\"",
        "I stared at the fire in her fireplace, watching it flicker as the flames danced, the logs fizzed, and an ember popped. It was soothing, calming, almost sedating.\n\n\"Clark? How much?\"\n\nI sighed. \"Not sure. Twenty-something years?\"\n\n\"Woah,\" she said before realizing it. When she did, she made a polite adjustment. \"Well, that is a lot, but I'm old enough to have seen larger gaps.\"\n\n\"Yeah, sugar daddies and golddiggers?\"\n\nShe laughed. \"Yeah, there is that...but my oldest aunt married a guy who was almost twenty years older than her.\"\n\n\"Hmm, how'd it work out for them?\"\n\n\"Mmmm...maybe that's a bad example. Anyway\u2014\"\n\nShe rambled a bit but I was only half listening as I blew on the chocolate and watched those flames. I realized she was winding down and I heard the last few words.\n\n\"\u2014unless you try. So...are you going to call Melanie?\" \n\n\"Ahem, maybe?\"\n\nMrs. Katchekamp gave a little groan as she rolled her eyes. \"Well, don't ever say I didn't try.\n\n***\n\nWith my laundry in the dryer, I went out to Mrs. Katchekamp's storage shed and found a box. Having had some time according to the divorce agreement, I'd had time to go through my things carefully, discarding everything I didn't want or think I'd need, and carefully cataloguing what was left, with the contents taped to each end of each box. \n\nAs a result, I remembered that a box of camping supplies had some paracord that could be used in a camp setting; that it was brightly colored and left over from little bracelet projects with Andrea several years didn't matter. With my printouts on the boxes, it didn't take too long to find the right box and dig it out from under the stack of boxes atop it. There were a few buckles in addition to the paracord, so I went to work after estimating their sizes. \n\nIt was almost 7:45 when I called Melanie.\n\n\"Hello?\"\n\n\"Hi, Melanie. It's Clark.\" \n\nInstead of her usual happy exuberance, there was silence on the line. \n\n\"I've called to apologize,\" I added. \"I'm sorry. I really appreciated your invitation, but I was really uncomfortable with the thought of spending so much time with you considering that we'd just met. I felt like I'd be intruding. I didn't think how declining might insult you and disappoint Jenna.\"\n\n\"Clark, you didn't insult me. To tell the truth, I was actually surprised to realize that I was disappointed, too, but I'm an adult and can deal with disappointment. Jenna, though, isn't and she can't. She kept thinking that you'd change your mind and come see her, even after I told her you weren't coming. She asked if we could take the cookie she made for you to your house, but I told her I didn't know where you live.\"\n\n\"Oo-ooh,\" I groaned. \"I'm so sorry, Melanie. I know it's getting late, but do you think she'd mind if I were to stop by and surprise her before she goes to bed?\"\n\n\"Oh, she'd love it!\" The happy Melanie voice was back and I was smiling. \"Do you think you could? Even for just a few minutes, it would make her Christmas.\"\n\n\"Be there in twenty minutes, okay?\"\n\n\"Thanks, Clark. We'll see you then.\"\n\n***\n\nJenna answered the door in her Christmas pjs. \"Mr. Clark! You came! Come look at your gingerbread cookie!\"\n\nShe took me by the hand and was dragging me toward the kitchen while I mouthed \"Sorry!\" over my shoulder to Melanie, who was standing to the side chuckling.\n\nI knelt down next to her as she gave me my cookie. \"We had fun making them and decorating them. I'm sorry you couldn't be here with us to have fun, too.\"\n\n\"Thank you for the cookie, Jenna, and for thinking of me. That makes me feel very special.\"\n\nShe threw her arms around me and gave me a hug, and I hugged back, remembering when my Andrea was that age. Then she was done, letting go and taking my hand. \"Come see my Christmas presents.\"\n\n\"Hmm, speaking of presents, I think I have a little something here for you.\"\n\nI saw Melanie shake her head just as I pulled the little bracelet out of my pocket, but when she saw it, she smiled even as Jenna squealed as if it was the best present ever. \n\n\"Thank you, Mr. Clark! Thank you!\" she said, throwing her arms around me again. \n\n\"Here, sweetheart, let me help you with that.\" She held up her little wrist and I snapped it in place. Bright red and blue with a white buckle, it looked more like Independence Day than Christmas, but Jenna didn't care. It was a bit large, but didn't fall off and I knew she'd grow into it eventually anyway, if she hadn't lost it or got tired of it before then.\n\n\"Mommy! Look at my bracelet!\"\n\nMelanie smiled and nodded admiringly, making Jenna beam even brighter. I got Jenna's attention back with a tap on her shoulder and gave a conspiratorial \"come here\" with my finger. I reached in my pocket again and whispered to her as Melanie frowned at me, but she laughed when Jenna turned and shoved another bracelet, a little bigger, toward her. \n\n\"Look, Mommy! Mr. Clark made you one, too!\"\n\nMelanie laughed again, and I thought I saw a tear in her eye before she looked down to help Jenna put it on her wrist.\n\n\"Thanks, Clark. That's very sweet,\" she said, giving me a big smile that warmed my heart. \"You didn't have to\u2014\"\n\n\"I know, but I wanted to,\" I said, waving her off. \"Sorry if yours is a bit small. I didn't know your size and was running out of cord anyway.\" \n\nShe held it up, smiling at me. \"No, it's just right. Snug, but not tight. Thank you.\" \n\n***\n\nFor the second time that evening, I was sitting on a couch drinking hot chocolate, but this time, there wasn't a fire. Melanie had invited me to stay for a bit before she put Jenna to bed and we were sitting together on the couch, close together but not quite touching. I looked at her observing me, and I looked away rather nervously. The lights on Melanie's tree were fading and brightening, so I made a show of watching them for a few moments until she spoke.\n\n\"Clark, thank you for coming over. I may never get that bracelet off Jenna's wrist.\"\n\n\"I'm sorry I didn't think to ask if I could give it to her. By the time I saw you shake your head, she'd already seen it and it was too late to back out.\"\n\n\"It's okay. If it had been something expensive or inappropriate, we'd have had words, but that probably didn't cost too much and that you made it for her, for us, makes it special.\"\n\n\"I'm glad.\"\n\n\"Clark, are you okay? You look, well, a little, uncomfortable, maybe?\"\n\nI exhaled slowly. \"I've always been naturally shy in a personal setting. I'm good in a business setting, for I know what needs to be done, but when it comes to people and emotions...well, not so much.\"\n\n\"Yeah, I think I can believe that. I've seen you at your work, remember? Tell me, are you nervous now?\"\n\n\"A little, yeah. Melanie, I'm older, I'm recently divorced after being married for a long time, and I'm currently stuck in a job I hate\u2014\"\n\nI noticed she hadn't grimaced or even winced when I mentioned age, but I was still surprised when her interruption wasn't about that or asking how old. \n\n\"Don't be hating on your job,\" she said. \"You're really good at it, and I can tell you from personal experience that your customer service is top notch. You ought to be proud of what you do and how you help people.\"\n\nI smiled and decided to skip mentioning my new job at the moment. I'd leave her to think good thoughts about my current one for now. Therefore, I asked a question and we took turns answering and asking as we got to know each other better. I felt more comfortable with her as time passed and it was something of a surprise when neither of us asked another question. She closed the last of the gap, leaning against me and putting her head against my chest. \n\nI put my arm around her to hold and comfort her as I breathed in the flowery scent of her hair. It was almost a hypnotic feel to be together like that, and lightly I stroked her back, reveling in the touch. \n\n\"This is...nice,\" she whispered. \"It's the first time anyone's held me like this since Mitch died.\"\n\nShe shifted, tilting her head up as if to kiss me, but suspecting what she was doing and not feeling comfortable with it, I looked away at the blinking lights of the tree.\n\n***\n\nThere'd been no goodnight kiss a few minutes later, just a heartwarming hug that felt so right. When we parted, Melanie had thanked me again and asked if I'd like to come to dinner on Saturday night, just a couple of nights later. \n\n\"I'd like that,\" I told her despite my doubts. \n\nI spent a lot of time thinking of Melanie in those two days, wondering if I liked her as much as I thought or if it was my Madeline-rekindled sex drive playing tricks on me, wanting to see her for convenience and the chance of nooky rather than because I really liked her. \n\n\"I do like her,\" I said aloud, as if to reassure myself, as I dressed for work on Friday, \"but...\"\n\nThere was that \"but,\" the little word that so symbolizes doubts and troubles. I didn't know Melanie well enough to know how much I liked her, whether it was just the initial attraction or the chance of something more. And all the while, I was thinking about her age, wondering how old she really was and all the time thinking that she was too young.\n\nDespite all the doubts, I showed up, arriving at Melanie's a little before dark on Saturday evening with a bottle of wine. Since it was the first time I'd been there with enough light to see, I saw that she had only the little Civic in the driveway. It looked to have seen better days. Peeling paint on the porch rail and a loose shutter told me that home maintenance either wasn't Melanie's forte or she didn't have the money for it. As neat as the interior of the house had been in my visits on Christmas Eve and Christmas night, I suspected the latter.\n\nThe door opened seconds after the doorbell rang to Melanie wearing a v-neck sweater dress, low heels, and a welcoming smile. She was beautiful and surprisingly sexy, revealing hints of curves I hadn't suspected. \n\n\"Welcome, Clark. Come in.\"\n\nMy searching look gave away my question and Melanie grinned as she answered it. \"Jenna's spending the night at a friend's house. I figured that might be a good idea, to help keep the pressure down a bit.\"\n\n\"What do you mean?\"\n\n\"Ahem...well, Jenna has...certain ideas. She likes you a lot, but I think she's getting way ahead of herself and ahead of us. \"\n\n\"Hmmm. She misses her father, but...she'd like a...new one?\" \n\nMelanie nodded sheepishly. \"The mind of a six year old sees the world from her perspective, with her own needs...and wants...at the forefront. She sees this week's opportunity and it becomes the center of her world, at least, until the next opportunity comes along. Long-term planning isn't really on her radar. Anyway, if she'd been here, I suspect it would have been like a one-girl full court press.\"\n\nHaving once had six-year-olds, I recalled the issue and nodded. I didn't have time to give it further thought, though, since, at that point, Melanie seemed to take up her daughter's mantle, stepping into my arms and encircling me with her own. Her face tipped up and our lips met. The world stopped as I held her close and she was the whole universe to me.\n\nHer sweater dress was so soft, as was what was beneath it. Our embrace grew tighter, warmer, and more sensual, but when I realized the effect it was having on me, I shifted, trying to keep it from her. From the look she gave me with the biting of her lower lip, I realized I was too late. Embarrassment swept through me, even more so when I realized the bottle of wine was still in my hand.\n\n\"Ah...sorry.\"\n\nI was surprised when she blushed, too. \"Don't be, Clark. It's actually, well, nice, to feel wanted.\"\n\nShe took my hand and turned, leading me into her little living room. \"Please, have a seat. Dinner's almost ready but we can talk for a bit and drink a glass of wine, if that's okay?\"\n\nWe sat on the couch, side-by-side, turned slightly, with her knee touching mine. With her legs crossed just below her knee, the front of her foot slid in behind my calf and rested familiarly against me. I would have welcomed it under most circumstances, but my concerns about our relative ages rushed to the forefront and made me a bit uncomfortable. Still, I didn't attempt to move away as I poured the wine and offered her a glass.\n\n\"Cheers,\" I said as we touched our glasses together.\n\nWe talked for a few minutes, with me all the while feeling as if I was staring at her, barely able to take my eyes off her baby blues. She was watching, though, matching me with both the intensity and interest of her look, smiling all the while. When she stopped speaking, I said nothing, leading her to give a little shake of her head before she leaned in for our second kiss of the evening. My eyes closed and all of my doubts slowly faded away, surrendering myself to Melanie and the moment.\n\nThe buzzer in the kitchen startled us, bringing us back to reality and the present with a laugh. \n\n\"I better get that or it will burn,\" she said rather reluctantly. I believe we both wanted to return to what we were doing rather than eating, but she'd worked hard on the meal so I nodded, helping her up and with her work in the kitchen.\n\nAll through dinner that evening and in our phone calls in the few days that followed, I could feel it, that strange link that forms, bit by bit, tendril by tendril, over time between two people getting to know each other and falling in love. It's such a great feeling to care about someone and to feel their care in return, to know there's a chance to build something, a future, together. And, unfortunately, as much as it hurt, I knew it had to be stopped before it went too far.\n\n***\n\nJenna met me at the front door the next Saturday night.\n\n\"Hi, Mister Clark! I've missed you!\"\n\n\"I've missed you, too, sweetheart! And I think you've grown an inch while I have!\" \n\nShe grinned at me and gave me a hug as Melanie came to the door. \n\n\"Hi, Clark,\" she said, giving me a quick kiss, before turning to Jenna. \"Young lady, what have I told you about opening the front door?\"\n\n\"But it was Mister Clark,\" replied Jenna with a pouty expression.\n\n\"Well, it was okay this time, but it could have been someone else. Let me open the door, okay?\"\n\n\"Yes, Mama.\" Jenna gave me a frown about her mother's rules that almost made me laugh before Melanie sent her scampering.\n\n\"Sorry, I didn't mean to cause problems,\" I told Melanie when Jenna was in the other room.\n\n\"It wasn't your fault, Clark. You knocked on the door like a normal visitor, and Jenna opened it instead of asking me if it was okay.\"\n\nAnother knock followed before I had a chance to say more. Melanie peeked out before opening the door and a high school girl, Jenna's sitter for the evening, entered. She gave the girl her instructions, we hugged and kissed Jenna goodbye, and we were off to Grafelli's for dinner.\n\nI tried to hide my emotions during our meal, but Melanie noticed. \n\n\"Clark, are you okay? Something seems wrong tonight. Talk to me. I'd like to help if I can.\"\n\nWe'd know each other for less than two weeks, but she'd become very special to me in that time. The calendar doesn't lie, though, and I knew what I had to do before it went too far.\n\n\"Melanie, may I ask you a personal question?\"\n\n\"Sure, Clark. What?\"\n\n\"How old are you?'\n\nShe smiled. \"I'm 28 now and will be 29 in April. On April 10th. Why?\"\n\nI thought sure she'd say something silly like \"Age doesn't matter\" or something else to defend the huge gap in age between us, but not even recognizing it\u2014or at least acknowledging it, anway\u2014surprised me.\n\n\"Melanie, my birthday is in a couple of weeks. I'll be 51 years old.\"\n\nAgain, she didn't seem to get the point. She smiled, leaning across the table to give me a kiss on my cheek before whispering, \"Happy Birthday, Clark! Why didn't you tell me earlier? I would have suggested we change our plans if I'd know that!\" \n\nHolding my hands up defensively, I shook my head. \"No, Melanie, that's not the point.\"\n\n\"Okay, I'll bite. What is?\"\n\nAs much as I loved looking in her eyes, I couldn't do it now. I was looking down at the table where the server had just taken my plate away, as if I was a teenager again. The words didn't want to come out, but I forced them and they tumbled forth. \n\n\"When I turned eighteen, I was a geek and none of the girls in my town would go out with me. I tried and tried to get a date for prom, but, even though I was a senior, I was striking out with everyone I tried. Now, being somewhat shy, it's not like I was asking hundreds of girls. It was a small school in a small town so there weren't even a hundred girls in my class,\" I said with a laugh. \n\n\"So what did you do?\"\n\n\"Well, I finally decided to try one of the time-honored traditions of geeky guys everywhere.\" \n\nShe grinned. \"You asked a younger girl?\"\n\n\"Ah, so you've heard this story? Probably not my version of it though. When I talked to my dad about it, he said \"no\" and explained why. There's a rule, well, an equation anyway, called 'Half Plus Seven' that is a good guideline for whether a relationship will work. If the older person takes their age, divides it by two, and then adds seven years, it gives a minimum age that is seen as appropriate by society at large and which generally has a decent chance of working in a long-term relationship.\" \n\n\"Sounds like a lot of wishy-washy, weaselly words in there if you ask me. 'Seen as appropriate,' 'generally,' and 'decent chance?' One word like that makes an argument questionable, two make it silly, and three?\" She laughed. \"You know, like the lottery; I've never played so I've never won, but I could have if I'd tried...even though most never do.\"\n\nI nodded, for she was correct on at least part of it. \"Well, Dad told me that relationships that don't meet that rarely work and that he wasn't going to have his son robbing the cradle with a freshman who didn't meet it.\" I sighed, remembering that time. \"I ended up going to the prom alone.\"\n\n\"Oh, Clark! I'm so sorry! I wish you'd been able to ask me. I'd have gone with you.\"\n\nShe didn't realize it but she'd just proved my point. \"Melanie, you hadn't been born then. You don't meet Half Plus Seven for me, and I don't meet the reverse of it for you. We may like each other a lot, a whole in my case, but the chance of it working out for us in the long term is...\"\n\nI held up my finger and thumb, pressed tightly together, with my elbow on the table. I couldn't even look at her, staring down at the table in front of me as my head fell forward to rest against my hand. \n\nShe put her hand on mine and held it, giving a gentle nudge to make me look up. \n\n\"Clark, look at me. I'm 28 years old. I've been married and been an army wife. We had a wonderful daughter together before I lost him to the army, so I'm raising Jenna on my own. I went back to school when she was a baby and finished my nursing degree, and now I have a job that makes me walk a very fine line to keep everything going and spend enough time with her. I own a house, with the bank, and only have a few payments left before I'll own the car outright. Neither one of those last two are anything to brag about, but I've never missed a payment on either one. Now tell me, am I a responsible adult?\"\n\n\"Melanie, of course. You're one of the most responsible people I know.\"\n\n\"Then why, damn you, are you trying to impose an artificial constraint instead of letting each of us make up our own mind? If you don't care about me, I'll be disappointed and I'll hurt and cry 'til I eventually get over it, but if you won't see me again because of a stupid equation...\"\n\nTears were streaming down her face as she shook her head fiercely, unable to go on. \n\nI drove her home in silence and walked her to her door, all the while trying to think of the right words. They didn't come, but something did. ",
        "\"Melanie, I'm so sorry. I like you so much, but I just think there's too much difference in our ages and that you'd realize it eventually. Better to do it now, before we waste a lot of time, rather than wait until then.\"\n\nI was walking away down the little sidewalk when she said her final words. \"For someone I thought was so smart...\"\n\nHer pause was long so I turned away again after looking back, defeat plastered on my face, but she forced out her frustration. \"Oh! Whatever! You're not nearly as smart as I thought.\"\n\n***\n\nI don't know if it was by chance or if she deliberately avoided shopping during my hours at the store, but I didn't run into Melanie again before I worked my last day. I started work at my new firm on January 26 to have some overlap with the man I was replacing so I could learn the ropes. He retired that Friday, and I took over as CFO the following Monday. The hours were long as, in addition to my usual duties, I actually learned the company, working my way through the books, and writing reports on conditions with suggestions for improvements. \n\nWeeks earlier, my biggest goals had been to see Melanie and to get out of Mrs. Katchekamp's basement, but I'd burned the bridge on the first and no longer saw the second as critical. I'd grown reasonably comfortable in Mrs. K's efficiency, so I decided to stay and save money for a while to get in a better position financially before trying to find something better. The part about my room not being nice enough to bring anyone home no longer mattered since there was no one I wished to bring home. I'd tossed the names from my molasses scheme while spending time with Melanie.\n\nA little over two months into the job, my financial situation had improved drastically and I finally felt as if I'd learned enough at work to take off a Saturday. I finished my taxes in the morning while doing the laundry, went shopping for the first time in ages after lunch, and stopped at the grocery store on the way home. \n\n\"Clark!\"\n\nI looked in response, only realizing then that I shouldn't have. \n\nMadeline of the large breasts and even more prominent wedding band was frowning at me from only inches away. She scolded me at a whisper. \n\n\"Clark, where have you been? I've looked for you every time I've come to the store and I can never reach you on your number. If I didn't know better, I'd think you were avoiding me!\"\n\nBlocking callers generally has the effect of looking like that, but she was close to me, very close, and her breath was hot against my ear, making it hard to concentrate. Her hands were on my arms and her tips were hard against me, doing a number on me that I'd hoped to avoid and sworn to resist.\n\n\"Madeline, please, I...ah...I can't see you anymore. I...ahem...met someone.\"\n\nOkay, it wasn't the whole truth, but it wasn't exactly a lie either. She backed off, by at least an inch or two, so her blouse was just almost touching my chest. \n\n\"Well, that's very disappointing, Clark. I thought we had something...special.\" Her nails raked lightly across my cheek, causing me to shiver. \n\n\"Madeline, I'm sorry, but we didn't. I'd have never seen you if I'd known you were married.\"\n\nShe chuckled. \"So you don't date married women? Hmmm, I noticed that you were careful not to ask.\"\n\n\"No, it was that I didn't think you'd have invited me if you were married.\"\n\n\"Psssh. Married, smarried,\" she said with a grimace. \"Someday maybe you'll grow up, Clark, and you'll realize you go for what you want if you really want it, because no one else is going to get it for you.\"\n\nThe disappointment was clear on her face before she gave a single shake of her head. \"Then I guess this is goodbye, Clark. I won't forget you for a while...but I won't mourn over you either.\" \n\nShe took my chin in her hand, fingers on one side and thumb on the other, and gently steered me to meet her incoming lips. The kiss was warm and soft and unwelcome; I did nothing to encourage her and she pulled away, biting her lower lip as she stroked my jaw with her fingers. Another shake of the head followed, and she turned away, going back down the aisle in the direction from which she'd come.\n\nI shook my head, too, and looked down at my feet, but only for a second, for a little girl's voice said, \"But why, Mommy? Why can't we see\u2014\"\n\n\"SHHH!\"\n\nI turned to see Melanie scooping up Jenna, abandoning her cart, and moving away. She glanced back at me as she turned at the end of the aisle, but, in shock and embarrassment, all I could do was stand and watch.\n\n***\n\nAn hour later, I pulled to a stop in front of Melanie's house. Opening the trunk, I pulled out the shopping bags with her groceries and carried them up the walk to her little front porch. The peeling paint I'd noticed at Christmas was still there and I felt a pang of sadness that she was unable to do anything about it. \n\nI rang the doorbell and knocked but no one answered despite her old Civic being parked in the driveway. I tried again a bit later, and then a third time following that, but when there was no response, I set the bags down in front of the door, rang the doorbell rapidly several times, and walked away. The door never opened before I got in my car and pulled away.\n\nMy frustration level was high that afternoon, and I didn't know what to do. Seeing Madeline and experiencing her kiss had excited me in spite of myself, and realizing Melanie had witnessed that display cut me all too deeply. Still, something about what Madeline said kept coming to mind: you go for what you want if you really want it because no one else will do it for you.\n\nWhat did I really want? Was it Melanie? Was it to be Jenna's father? Maybe her granddad? Was it...\n\nThere were too many questions and no answers. All I could think about was Melanie, our ages (and the difference between them), and that damn equation. It was early evening when, at wits end, I picked up my cell and called my father.\n\nDad and I hadn't been close since he walked out on my mother after over 30 years of marriage. After going through my divorce with Greta, I understood a little better and had finally come to accept that he wasn't trying to hurt her by leaving but that they'd grown apart and needed to move on.\n\n\"I never cheated on her, Son,\" he'd told me, \"but when the love was gone and there was so little left between us, no intimacy, I wasn't going to stay until I did.\" Now, he was 75 and doing the retired thing in Florida and I spoke with him occasionally, but I didn't share with him as much as I once had. \n\nWe spoke for a few minutes, catching up on our time since Christmas. I told him that I'd taken a new job, but didn't mention that I'd left Pelton Wiederhoff almost a year earlier. He knew that Greta and I had split, but didn't need to know of my other problems. Then I came to the real reason behind the call.\n\n\"Dad, do you remember the prom back when I was in high school?\"\n\n\"Ahhh...no?\"\n\n\"I couldn't get a date so I wanted to ask Lisa Hill.\"\n\n\"Ah, yes. I remember now! Little Lisa Hill, Tom and...oh, I can't remember his wife's name. Anyway, their daughter, she was like eight or something, right?\" He chuckled at his humor, but I didn't.\n\n\"Jesus, Dad. She was 14, almost 15.\"\n\n\"That old, eh?\"\n\n\"You wouldn't let me go with her because you said she was too young, but Dad, she was almost 15.\"\n\n\"Yeah, son, you were 18 and she was 14. Think about it. Would you want Andrea going out with a guy that old when she was that young?\"\n\nWell, when he put it that way, I understood. Greta had let our daughter start dating too young, in my opinion, but we'd been careful to make sure she wasn't going out with someone much older. \"Yeah, way too young at that age,\" I agreed. \"Say, do you remember telling me about Half Plus Seven?\"\n\nHe chuckled. \"Did I tell you about that? It's a great go-by for young people until they're old enough to understand better and make adult decisions about relationships. Of course, once we're old enough to make our own decisions, most adults still fuck it up like we did, but\u2014\"\n\n\"Dad, wait! For young people? I thought you meant....\" I trailed off as I fully understood what he said. \"So you meant it's for kids who don't understand maturity levels?\"\n\n\"Of course. An 18-year-old shouldn't be going out with someone who's too young and immature to have experienced things and to understand consequences. You try to protect them until they're old enough to understand and to make informed decisions on their own. That Half Plus Seven's an old wives' tale but it works. Believe me, if more people followed it these days, this country would be better off instead of going to hell in a handbasket. Did you hear about\u2014\"\n\nHe was starting into one of his increasingly frequent rants so I interrupted. \"Dad, so it works so an 18-year-old wouldn't go out with someone too young at the time, but as you get older...\"\n\n\"Yeah, of course. It works for dating age and up, say 14 if you're stupid enough to allow your kids to date that young. You know, 14 divided by two is seven, plus seven, is 14, so both members of the couple are at least 14. Of course, anyone who lets their child date at 14's a complete jackass\u2014\"\n\n\"DAD! So when I wanted to ask Lisa Hill to prom, you were trying to protect me?\"\n\n\"Yeah, you and, just as importantly, her. You were 18 at the time, so half plus seven was 16, and she was, what did you say, 10?\" \n\nHe laughed again as I growled at him. \"Okay, so it's a bit artificial, but if it helps keep kids from falling in lust, or from a statutory standpoint, in bed or prison, then what's the harm? Nobody ever thinks about it again after they mature a bit. Say, why are you asking about that anyway? You havin' to explain it to your kids?\"\n\n\"Uh, yeah. Hasn't been a problem so far, but just trying to remember in case it comes up,\" I agreed, not reminding him that they were both over 18 and not wanting to admit how, in my math nerdiness, I'd misinterpreted his advice for all those years.\n\nWe switched gears then and talked for a few more minutes before we ended the call. When we did, I sat down with my head in my hands. I had a lot to think about.\n\n***\n\nYou go for what you want if you really want it because no one else will do it for you.\n\nMadeline's words\u2014at least as close as I could remember them\u2014seemed to be at the forefront of my thoughts over the next week. I wrote them down and posted them on front of the little frig in my efficiency and looked at them far too many times. \n\nJust what did I want? To be perfectly honest, I wasn't really sure, but there was something unfinished with Melanie, something that made me wonder if there could be more or if we just needed to end on a better note and move on. Something...\n\nOnce I quantified the problem and the potential outcomes, it was like an issue at work and I understood what needed to be done. Unlike the typical problem at work, though, I wasn't sure how to do it. On Sunday afternoon, after a great deal of undecidedness, I reached a decision and typed a text.\n\nHi, Melanie,\n\nIt's Clark Delahoya, from the store. Can we talk? I need to apologize and would like to speak with you. Please? \n\nThanks,\n\nClark\n\nI was pretty nervous as I typed out each and every word and corrected the typos. After sending, I realized that she must have remembered me considering her recent reaction and that my \"from the store\" remark was pretty stupid. Everything I'd done was pretty stupid, though, so it was par for the course.\n\nThe wait was long and frustrating, with no response from Melanie, not even a read receipt on the text. Had she turned that function off or had she blocked me entirely? I didn't know, so I fretted as I waited. \n\nMonday came but her reply didn't, and Tuesday and Wednesday followed in like manner. By Wednesday evening, I was about to give up but decided to try one more time, sending her another message.\n\nPlease?\n\nTwo minutes later, my phone vibrated. She'd responded!\n\nCall me\n\nSeconds later, the phone was ringing. \n\n\"Hi, Clark,\" she replied, leading me to think that I was still in her contacts list. \n\n\"Hi, Melanie, thanks for speaking with me,\" I said in reply. \"How've you been?\"\n\n\"Why do you care? And how much do I owe you for the groceries? I don't accept charity.\"\n\n\"Melanie, I've been wrong. I'm sorry. Please, hear me out.\"\n\n\"Right. Why? You've obviously found what you want.\"\n\n\"No! I saw Madeline once, but then found out she was married\u2014\"\n\n\"Married, too?\"\n\n\"\u2014so I refused to see her again. She caught me at the store and kissed me, trying to change my mind\u2014\"\n\n\"Yeah, right.\"\n\n\"\u2014but I didn't kiss her back and told her I wouldn't see her again. That I'd met someone else\u2014\"\n\n\"Well good for you.\" Sarcasm dripped from her words, but I was almost done.\n\n\"\u2014I thought I might care about. I didn't tell her, but I'd pushed my new friend away and now that I finally realize my mistake, how stupid I was, I'm hoping it's not too late, that you'll give me another chance.\"\n\nThere was silence on the line. \n\n\"Melanie? Melanie, are you still there?\"\n\nA shallow breath told me she was, so I waited, clinging to hope that she wouldn't hang up or worse. When she continued to hold, I finally decided to say what I needed.\n\n\"I asked to speak to you because I've missed you, much more than I expected. I don't know you well enough to know how much I care about you, but I know there's something there\u2014whether it's friendship or more, I don't know. What I do know is that I didn't give you the respect you deserved when you told me to let you make your own decision.\"\n\nI'd spent a lot of time thinking about this, my big transgression against her. When only the gentle sound of her continued breathing was heard, I continued.\n\n\"Melanie, you were an accomplished, beautiful young woman in front of me, but, in my goofiness, my sole focus was on the young part, that one word. Instead of praising God for sending you my way, whether for a moment or for a lifetime, I thought it was wrong, a big mistake, and I let a juvenile equation and stupid misunderstanding of it dictate my actions rather than listening to you and to my heart.\"\n\n\"Mmm-huh.\"\n\nHer agreement was such a surprise that I stuttered in confusion.\n\n\"Ahem...It was wrong\u2014\"\n\n\"True.\"\n\n\"\u2014no, even worse, I was wrong\u2014\"\n\n\"That, too.\"\n\n\"\u2014and I'm so sorry. If it's not too late and if you still have any interest at all, I hope you'll let me have another chance and that we can see if this is going anywhere or if it really is the end of the road for us.\"\n\n\"Us? You think there might be an 'us' after all you said?\"\n\n\"If you have it in your heart to forgive me, then we'll only know if we give it a chance. If not or if you forgive me but have no interest, then I'll leave you in peace but with a great deal of regret at being such an idiot.\"\n\nShe laughed and I could almost hear her smile through the phone. \"Idiot, yes, but a very sweet one, I think. I'll need to get to know you a lot better before I can be sure.\"\n\n\"Wait. Does that mean you forgive me? That you'll give us a chance?\"\n\n\"Ummm, maybe?\" I think there was a little chuckle, telling me she was enjoying holding my feet to the fire a lot more than I was enjoying my well-deserved roasting. \n\n\"I hope,\" I agreed. \"I'd really like to get to know you better.\"\n\n\"That'll be good, Clark, but I really want you to be yourself. I want to get to know the real you, to see if I like you as much as I think I might, and for you to do the same with me. And yes, I know there's a big age gap between us\u2014I'm not blind or stupid, you know\u2014but I also know that if two people grow to really love each other, an age gap is an obstacle to overcome, not an insurmountable barrier.\"\n\nIt probably wasn't the best time, but she'd opened the door so I decided to get to part of what bothered me about it. \"But...but...if we were to fall in love and get together...well, I'd probably, ahem, die a long time before you and leave you alone.\"\n\n\"Like Mitch? Dying while I might still have another 40, 50, or maybe even 60 years left? I loved him and still do, Clark, and I still miss him sometimes, but I know he's gone and won't be coming back. I'm so sorry he won't be able to see his little girl grow up, graduate, get married, and maybe have children of her own, or to share any of those precious moments with her...or with me.\" She was probably wiping a tear during pause, for my eyes were cloudy, too. Moments later, she added, \"Sorry, I didn't mean to get so emotional, particularly when I'm trying to make a point.\" \n\nShe sniffled and blew her nose lightly to regain her composure. \"That made me sad for a long time\u2014and still does occasionally. Sorry\u2014I know that life goes on and that we all have to live if we don't want to crawl in a hole and pull the dirt in on top of us. It's been years and I know that I have to move on. I don't know if it's with you, Clark, but I'm willing to give it a try if you are.\"\n\nWhile I still had concerns and doubts, I didn't want this incredible woman to slip through my fingers without learning more about her, to see if she might be the one. Taking her offer, I was nodding energetically to myself when I replied, \"Melanie, I'd really like to try.\"\n\n\"Okay. First things first...how much do I owe you for the groceries? I know you can't make that much working at the grocery store.\"\n\n\"True, I didn't, but don't worry about it. I have a new job.\"\n\n\"Oh, Clark! That's great news! Where?\"\n\nI told her the name of the firm and I think I heard the recognition in her voice when she said, \"Oh! That's wonderful! What are you doing there?\"\n\nI smiled to myself. \"I deal with all the money.\"\n\n***\n\nOver our next few dates, we began a very careful process of getting to know each other better in public settings while little Jenna spent the evening with a sitter or at a friend's. We didn't want her getting her hopes up that it might work out between us or to let her unduly influence the situation. \n\nIt was a Friday evening when we got deep into backgrounds and education. I saw a flash of concern cross Melanie's face when I mentioned my MBA and earlier experience. I paused and asked, \"Is something wrong, Melanie?\"\n\n\"Clark, we agreed to be open and honest with each other. Please don't exaggerate to try to impress me. If you can't tell me the truth, this will never work between us.\"\n\n\"Melanie, it is the truth. I'd never lie to you. Or exaggerate...at least too much.\" I grinned at the end trying to be playful, but she didn't bite. \n\n\"Okay,\" she said with more reservation than I'd hoped. Maybe she believed me but I felt that her impression of me from our early encounters was tainting her belief.\n\n\"How about if we take a drive? Ten minutes tops, each way. I want to show you something.\"\n\nShe hesitated, as if scared that the chameleon was showing his true colors, but curiosity and the wish to believe in me got the better of her. She nodded slowly. \n\nWe pulled into the parking lot at my firm a few minutes later. Melanie was apprehensive as I unlocked the front door and we approached the security desk.\n\n\"Good evening, Mr. Delahoya,\" said the guard at the desk. He looked quite attentive and was checking Melanie out as his eyes glanced back and forth between us. \n\n\"Good evening, Willie,\" I replied. \"This is my friend Melanie. I'm running up to my office to grab something I forgot so I want to show her my office. She may be helping me decorate it. I'm tired of staring at blank walls.\"\n\nWillie laughed. \"Yes, sir, I understand. I go stir crazy looking at these monitors. Go right on up, sir.\"\n\nA couple of minutes later, Melanie, wide-eyed, looked at the placard by my door with my title as Chief Financial Officer. Inside, she looked around my office, with its blank walls, while I quickly logged in on my computer. I downloaded a file to a flash drive while she thumbed through a box containing my framed diplomas and a number of registrations and certificates. There were tears in her eyes as she noticed the frames sitting on the bookcase near my desk. A double frame had 3 x 5 prints of my Chad and Amanda, and the other, a 5 x 7, had a photo of Melanie that I'd downloaded from a social media site.",
        "\"Hope you don't mind about the photo,\" I said as she stared at it. \"Seeing you sometimes during the day makes me smile.\"\n\nShe nodded, turning away. \n\nOn the elevator, Melanie held my arm and was looking into my eyes. \"Clark, I'm sorry. I really thought you were a grocery clerk and I was happy with that. I thought you were trying to impress me with\u2014\"\n\n\"Shhh. It's okay, sweetheart,\" I said, calling her by that term for the first time. She leaned into me and I put my arms around her, holding her and stroking her hair for the rest of the short ride down.\n\n\"Good night, Willie,\" I called as we walked past the desk.\n\n\"Good night, Mr. Delahoya,\" he replied. \"Have a good weekend, sir.\"\n\nWe walked in silence to the car, with Melanie holding my arm as if she didn't want to let go. When we reached the car, I opened the door to help her in, but she turned into my arms and entwined her own about me.\n\n\"Clark, forgive me, please, for doubting you.\"\n\nI hugged her more tightly for a moment, before whispering. \"There's nothing to forgive, sweetheart. I lived the nightmare that was last year and I still find it hard to believe sometimes. In fact, I'm still living in a tiny little efficiency apartment for now until I decide where I'm going with my life. It's cheap and clean, though it isn't exactly set up for entertaining.\"\n\n\"You're teasing me,\" she accused, but I shook my head. \n\n\"Nope. Tiny. Embarrassingly so.\"\n\n\"I'd like to see it.\"\n\nI laughed. \"Not much to see, but maybe sometime soon.\"\n\n\"How about tonight, Clark? I'd like to see it now.\"\n\nMaybe she thought I needed convincing for her lips met mine and all of the bad memories of the past year blurred and were forgotten, at least temporarily, as Melanie became my world, my universe. My blood rushed as the hunger consumed us and our kiss smouldered and grew, so it was with great disappointment when we had to break it off. \n\nI helped her in the car and we were on our way, only to realize that Willie was probably watching us on the security monitor as we drove by one of the cameras..\n\n***\n\nWe were like two pretend cat burglars sneaking up the back walk to the basement entrance to my little room at Mrs. Katchekamp's. Our tiptoed movements were exaggerated and the frequent finger to our lips telling the other to be quiet was met by a quiet giggle or even \"Shhh!\" in reply. I unlocked the door and helped Melanie inside before flipping on the light, all the while hoping that I'd put the dishes away and hadn't left it too cluttered.\n\nIf there was anything significant out of place, Melanie didn't notice it for she spotted the couch, pushed me down on it, and sank down on my lap facing me, with her legs straddling my own. Our lips met again as her hand clutched at the front of my shirt, trying to pull us together. I slid my hands around her and helped pull us closer as my excitement built and my penis became harder and harder. \n\nIt being a cool, early spring night, Melanie was wearing a light sweater over her silky top. I took the hint of her movement and eased it off of her shoulders before her hands went to my shirt and started undoing buttons. She seemed to fumble with them, having trouble, leading her to say the first curse word I'd ever heard from her lips.\n\n\"Ow, fuck it!\" \n\nShe grabbed the bottom of my shirt and pulled upward, peeling it up my torso and yanking one side and then the other repeatedly until it finally slipped free. I undid the buttons on the sleeve as she was doing it, getting them undone just in time before the shirt went flying.\n\nHer breath was hot against my neck as she used her lips and teeth to take what she wanted, nibbling down my neck, shoulder, and collar bone before finding just the spot she wanted and began to suck as her hands slid over my chest, shoulders, and arms. I'd avoided a hickey with Madeline at Christmas and hadn't had one since college but Melanie moved about, either yielding just in time or giving me a real monster. I didn't know which, but knew I'd wear it with pride if it showed. \n\nI was rubbing Melanie's back through the thin fabric when my fingers found the button at her neckline. It was undone in a moment as she started to squirm below, rubbing herself against my hardness with her skirt spread around us. Feeling her movements, I started moving in time with her, leading to soft moans.\n\nMy hands slipped under the bottom of her blouse and I felt the delicious warmth and smoothness of her skin as I eased it off of her. She was well defined, confirming in my mind that she worked out regularly. I followed the curve of her sides, upward until reaching her bra band. Unable to wait, I moved forward and took her lace-covered breasts in my hands.\n\n\"Don't be mad at me,\" she whispered, \"please?\"\n\n\"Never,\" I agreed.\n\n\"Unhook me.\" \n\nI did and then helped ease her blouse over head and her bra off to reveal small but well formed breasts. \n\n\"It's a push-up,\" she told me as she tried to hide herself against me. \"My boobies are too small, Bs, even after breastfeeding Jenna, so I wear push-up bras to make them look better.\"\n\nMoving her back so I could see better, I cupped both breasts giving a gentle squeeze, before kissing a nipple and running my tongue around it. She sighed softly so I gave equal attention to the other before shaking my head. \n\n\"Melanie, your breasts aren't too small. They're perfect for you, and I love them both.\" I kissed the first one again before sucking it into my mouth.\n\nShe squealed lightly in surprise and I squeezed the other in return, not too hard, before finding the nipple and rolling it between my finger and thumb. She moaned this time, before resuming her slow grind against my crotch.\n\nMelanie's breathing was shallower, faster, as she humped against me. I leaned against the back of the couch where I could see her, watching her face, her eyes looking at me as she bit her lower lip in rapt concentration. I let go of her breasts and slid down to her buttocks, helping support her as she rocked herself with me rubbing back against her.\n\nHer pretty face contorted, becoming a vision of rapture as she came with a low, soft grunt that told me she was trying to keep from waking Mrs. Katchekamp upstairs. Her back arched, thrusting her breasts forward, so I took the opportunity to kiss and suckle a nipple for a few seconds before she collapsed back against me.\n\n\"Oh, my God!\" she breathed in my ear. Her breathing was a rapid pant so I just held her, trying to comfort her as she enjoyed her moment.\n\nShe relaxed a minute or so later but then the thought struck her. \"Oh, no, Clark! I didn't mean to...to do it without you! It had just been so long and it felt so good, I couldn't\u2014\"\n\n\"Shhhhh. You didn't do anything without me. It was the most sensual thing I've ever seen and I'll help you again\u2014and again\u2014in a heartbeat if I have the opportunity. That's assuming, of course, that you're not done. If you are, it's okay but\u2014\"\n\n\"No, Clark, not done by a long shot, assuming you aren't. Help me get the rest of these things off, please.\"\n\nShe was a bit unsteady when she rose to stand right in front of me. I held her hand with my left hand and undid the button and the zipper with my right, allowing her skirt to slide down and fall around her feet. Her panties matched her bra, a pale pink with lace, with a full back rather than a thong. When I hesitated, she glanced down at them and then back at me, waiting.\n\nWhereas she was unsteady on rising, I was afraid I'd collapse as I moved to the edge of the couch, my face only inches from her crotch. The bottom of the panties were darker, wet, I realized. I drew close, and took a long breath as my nose just brushed up the front of them. The aroma was light but tantalizing; when I reached the low-cut band, I moved on up, planting a series of small kisses up the curve of her belly to her navel.\n\nMy thumbs caught the elastic at the sides, and I slowly pulled them down in time with my kisses toward her treasure. When I could kiss no further, I pushed the panties on down, slid my hands behind her thighs, and pulled her toward and up on me. \n\nMrs. Katchekamp probably did hear this little squeal of surprise and delight as I helped spread her legs and I buried my mouth into her mound. She was bare except a little strip above and I attacked with a gusto, with kisses and my tongue soon finding her hood. She was standing on the couch in front of me, so she widened her stance and I lapped into her crevice before sweeping forward and catching her clit in my lips. \n\nI pleasured her and pleased myself for a minute or two, but she was visibly weakening, standing straddle-legged as she was. Therefore, I helped her around so she was over the back of the couch and then eased her down. There was a smile on her face as she relaxed in that position, pulling her legs up and allowing me to really do my work. \n\nLicking her clit, I started rubbing her slit with two fingers before sliding them in, sawing in and out at first and then shifting to her G-spot, where I did the \"come hither' motion to finally help bring her over the top once more.\n\nHer breath was ragged and her hair was mussed, but she wore a smile that made me proud. She leaned in and whispered \"Thank you, thank you, thank you,\" before kissing me again. When we broke for air, she added, \"Tell me this: why are your pants still on?\"\n\nI chuckled on realizing she was right and helped her with the belt so she could pull them off of me. A moment later she was curled on the couch next to me, stroking me, her sandy hair tickling me as she took me in her mouth and started driving me wild.\n\n\"Melanie, this feels like heaven, but, please, stop.\" \n\n\"Later?\" she asked, looking up at me playfully, still stroking me slowly.\n\n\"Yes, by all means, but if you keep going now, I don't know...\"\n\n\"I don't know,\" she repeated with a different inflection, meaning it completely differently than I had in my doubt. Grinning, she added, \"After seeing this, I think you might have a second and maybe even a third go in you. Maybe?\"\n\nHaving tipped over the edge, from doubt to dedication, I was smiling back at her as I answered, \"God, I hope so.\"\n\nMelanie looked determined to find out as she rolled the condom down me. Retaking her place on my lap facing me there on the couch, she moved her pelvis around before positioning me and sinking down in one smooth motion. She was wet and ready and I almost came right there.\n\n\"Stop stop!\" I said holding her still as she started to slide up. \"Just give me a minute, okay? It's been too long and you feel so fucking good I'm going to blow if you move a muscle.\"\n\nThe little minx grinned and started doing kegals on me, pulsing in a way I'd never experienced. Worried that I only had seconds, I picked her up off of me, probably making a horrible concentration face all the while as Melanie laughed. \n\n\"God that felt good!\" she said. \"Let me back on and I'll be a good girl. I promise.\"\n\n\"After experiencing that, I really don't know if I can trust you.\"\n\nShe didn't answer, kissing me instead, so I lowered away, but made sure I didn't go back in. She pulled away moments later before whispering in my ear. \"Please, Clark. I need you in me so bad. I always loved sex with Mitch, but haven't done anything except a vibrator since...well, since with him. Please, Clark, do it, fuck me. And do it hard, please?\"\n\nKneading both of her breasts in front of me, I pinched her nipples causing her to moan, so I kissed her because I wanted to and to quiet her for a bit, hoping we weren't waking Mrs. Ketchekamp upstairs. That gave me a few seconds to allow that delicious tingle to subside. \n\nIt was only for a matter of seconds but feeling I was back in control and wouldn't ruin it for Melanie, I whispered, \"Ready to try this again.\"\n\n\"I've been ready. Just do it, please. Fuck me.\"\n\nHelping her up and back on my shaft, I lowered her slowly and then started using the edge of the couch as a pivot point and started rocking myself in her tunnel. She threw her arms around me but soon it was too much and she grasped the back of the couch above my shoulders to hold on. \n\nIt was a wonderful feeling making love to someone who was so into it and, better still, so into you. Melanie's eyes looked into my own, trying to maintain contact throughout as our bodies moved together as one. Her soft moans increased as she continued to ride me, while I tried to love her and fill her completely.\n\n\"Don't stop, Clark, please. Keep going, just a little more,\" she gasped, biting her lip, trying desperately to take us both over the edge to a state of nirvana. She grabbed my shoulders again and then slid her hands down on my chest where my heart, racing, threatened to beat right through my ribcage. \n\nWith my limited motion on that couch, I did what she asked, rocking harder and harder into her as the tingle returned, with the pressure building steadily. When we finally came just moments later, Melanie was moaning, I was grunting, and Mrs. Katchekamp upstairs had to have either been shaking her head or grinning for I was certain there was no way she could have slept through it.\n\nWhen I was done, Melanie collapsed against me and I held her tight, running my hands over her back. She was panting, with her lungs gasping for air and her heart pounding between my hands behind her and my chest in front. I didn't know where we were going but I knew then that I didn't want to ever let her go.\n\n***\n\nThe room was dark but I awoke to find my erotic dream was quite real and that it was the most delightful feeling.\n\nMy morning wood was getting a workout as Melanie sought to complete the task I'd had her stop the night before. Her tongue licked and swirled, alternating with a few up and down bobs before repeating her pattern.\n\n\"Sweetheart, if you keep this up, I'm gonna'\u2014\"\n\n\"Shhhh!\" she said, not even breaking her stride. \"That's...\"\n\nBob bob bob...\n\n\"The whole...\"\n\nLick lick lick...\n\n\"Idea.\"\n\nWhat the hell? I lay back and spread my legs wider so she could do what she wanted. Her next series of bobs felt deeper as she caressed my balls with one hand and slowly pumped the base of my shaft with the other. \n\n\"Mmmm,\" I groaned. \"I really like...your idea.\" \n\nHer giggle tickled and the pressure building told me it wasn't going to be long. Her eyes were looking into mine as she drove me closer and closer, switching to massage my length with both hands as she went up and down on me with short, fast strokes that pushed me ever nearer, with me fighting the whole time to delay as long as I could.\n\nI think she could tell how close I was, for in the seconds before I reached my peak, she switched to even shorter, quicker strokes, working just my knob and frenulum with her mouth as her hands pumped me even faster. \n\n\"Sweetheart, I'm about to come,\" I blurted, but she didn't pull away as I expected. Instead, her cheeks puckered as she sucked hard and I had no choice but to let go, shooting jet after jet into her mouth. She was smiling with her eyes as she gave me a few final strokes before swallowing and smiling for real.\n\n\"Oh, that was fun!\" she whispered as she fell back on the bed beside me. Rolling forward, she placed her chin on my chest, just looking at me, leading me to tip her face up so I could kiss her. Over and over, I kissed her as I slid my hand down and rubbed the front of her panties that she'd put back on sometime during the night. She gave a little sigh when I found the right spot and focused there, leading the gusset of the panties to dampen in seconds. \n\n\"Wow! Fun indeed,\" I agreed, continuing my little assault on her clit. She opened her legs to give me more access before shoving the cloth to the side so I could circle her directly. I dipped my finger below into her slit to wet it before continuing, leading Melanie to moan.\n\nWithin just a few more moments, I think I'd have been hard enough again to make love to her one more time before we had to go to pick up Jenna, but a rap at the door caused us both to jump. Melanie looked frightened as she straightened up and pulled the cover around her, making me lose my focus and her pussy. I gritted my teeth as there was another knock, louder and longer this time.\n\n\"Coming!\" I called as I climbed out of bed and slipped on my boxer briefs. \"Who is it and what do you want?\" I griped as I looked out the peephole.\n\n\"It's Mrs. Katchekamp,\" came the call from outside just as I saw her there with something next to her. Opening the door, I found she had a tray of food and a pot of coffee on a rolling trolley. \n\n\"Thought you two might need nourishment after last night,\" she said, grinning. \"Though based on what I just heard, maybe I was wrong. Oh, and good morning,\" she added, looking over at Melanie, mostly hidden under the cover\n\nMelanie looked rather sheepish as she stuck her head out and said, \"Hi, I'm Melanie.\"\n\nMrs. Katchekamp nodded with a knowing smile, seeing the bare shoulder above the sheet and probably a hint of nipple through it. \"Glad to finally meet you, Melanie, and to see that this lunk finally came to his senses. He really is a good one, if you haven't figured it out already, though he's a little slow on the uptake sometimes.\"\n\n\"Hey!\" I complained but Melanie giggled as she nodded in agreement.\n\n\"Now, I'll go so you two can enjoy this in peace...and then get back to, well, whatever it was you were doing.\"\n\nAs if she didn't know! She walked past me as she went out the door, giving my bare chest a rather appreciative look before patting my cheek and then putting a hand over my heart and leaning in toward me. Whispering she said, \"Clark, she really is a doll. Don't be an idiot and don't blow it! Oh, and go shave before you...well, you know.\" \n\nShe glanced back at Melanie with a grin and a little wave and then she was gone. \n\n***\n\nI took Mrs. Katchekamp's advice and, somehow or another, didn't blow it, working through the issues between us while Jenna, who'd figured things out far more quickly than we expected, cheered us on. Fortunately, I didn't need her help, for I put stupid math equations out of my mind and told Melanie I loved her a short time later. Then, just a few months after that, I asked her to marry me.. \n\n\"Yes, Clark! Of course I'll marry you!\" \n\nWe told Mrs. Katchekamp later that evening when we returned to my little place for a night of celebration, and the elderly lady was all smiles the next morning when she delivered our surprise, post-coital breakfast for the second time. \n\nWhen we married, I moved from Mrs. Katchekamp's to Melanie's house for a few months while we did renovations and prepared it for sale even as we searched for and then purchased a new, larger home that would be our own. Finally, we traded Melanie's old Civic and got her a larger, roomier SUV. \n\nMelanie and I were very happy together, but Jenna may have been even more excited, for her mommy was getting a new husband, she was getting a new daddy, and she got to be the flower girl in our wedding. She loved her new bedroom and backyard swing set at our new house and she really liked our roomier, new vehicle, too. \n\nNow, almost 16 months after Melanie and I married, Jenna's even more excited about one other thing. I call out to her. \"Jenna? Are you ready, sweetie? It's almost time to go!\"\n\n\"Be there in a minute, Daddy!\"\n\nI save this file on my computer and get ready to close it out before we head to the hospital to pick up Marcus Delahoya, her little brother, to bring him home for the first time. I'm so looking forward to seeing my Melanie again, too. It's only been twelve hours since Jenna and I left them there to come home last night, but that can seem like forever when you love and miss someone.\n\nAnd, thinking of all that's happened over the past few years, how Melanie and I overcame a math problem to love each other and be together, and what may lie before us as a family, I smile.",
        "The End\n\n____________________________\n\nAuthor's Notes:\n\nThanks for reading. Follows, favorites, and comments are encouraged and appreciated, too!\n\nThis story, written for the , is a work of fiction actually inspired by a trip to the grocery store to buy the item noted in the story for use in a Christmas recipe. The clerk told me there hadn't been any in the store in days and, laughingly, said that some people seemed practically willing to offer their firstborn in return if he could just come up with some. Such is an erotic author's humorous inspiration...."
    ],
    "authorname": "SouthernCrossfire",
    "tags": [
        "romance",
        "mature",
        "humor",
        "happy ending",
        "geek pride",
        "2021 geek pride",
        "sex",
        "oral sex",
        "slow burn"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/my-math-problem"
}