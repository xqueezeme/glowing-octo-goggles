{
    "title": "Room Wanted Ch. 03",
    "pages": [
        "Sorry USAF Vet, I come of the line of Shakespeare, Dickens, D H Lawrence, Adrian Mole, Mills and Boon...\n\nErr...\n\nThanks for the compliment, I'll get their one day honest.\n\nAaaaanyway...\n\n*****\n\n\"What's inappropriate about it?\" she said, thinking of the last lovemaking session she'd had with Rob just two nights ago.\n\n\"Well if you can't see it Miss Williams, it's a good job we're having this chat with you.\"\n\n\"I'm sorry but both Rob and I are over eighteen, and we take great care not to even let the children know we are having a relationship.\"\n\n\"So you are having a sexual relationship with Mr Stanley?\" The woman sounded shocked but the tiniest bit triumphant.\n\n\"Yes.\"\n\n\"Since when?\"\n\n\"What difference does it make, we're adults. Is it against the law all of a sudden?\"\n\n\"Please answer the question Miss Williams,\" said the woman with a sigh.\n\nNaomi was a little surprised at this line of questioning. So far she hadn't actually been told what she was supposed to have done, and the large woman across from her didn't sound quite right. Almost like she was trying but just a bit too hard. \n\nHer interrogator didn't look much like a social worker, not like the dozens that had come to the special school she worked in previously. They were general smiley, happy people that struggled to be hard on anyone and all wore jeans, floral print dresses, or long tops over leggings. This one was very large, her pudgy face almost resting its double chin on her bosom that appeared to stretch out from her shoulders at 20 degrees, and the large red and white printed dress hung from it straight down over her stomach and hips in a straight line downwards. There was no wedding ring on her pudgy hands and she could see that she bit her nails to the quick. Walking in she had noticed that the tall woman wore flat beige shoes that were to tight, so much so the plasters on her heels from previous blisters were evident.\n\nThe man whispered something into his colleague's ear and she did not like what he had said, and let him know. She snapped her head back to Naomi.\n\n\"Answer the question Miss Williams!\" said the woman again now with a tone, the man looked askance at his colleague.\n\n\"Why?\" said Naomi, \"We are consenting adults in the privacy of a locked room an entire floor away from the next nearest human being.\"\n\nThe social worker pursed her lips in real annoyance, and she thought for a moment,\n\n\"Well that's where our stories differ Miss Williams,\" said the woman shuffling white sheets of foolscap paper and looking rather smug, \"we have it on authority that you regularly allow Mr Stanley's children to come into your bedroom and you allow them to sleep in your room with you.\"\n\n\"What?\" said Naomi in disbelief, \"of course they come into my room, we live in the same house for heaven's sake.\"\n\n\"A grown and, by your own admission, a promiscuous woman and you let impressionable young children, some with disabilities come into your bedroom, to sleep in the same bed that you share with your landlord? That hardly sounds like the kind of thing a normal Nanny would do does it?\" Naomi was about to remonstrate with 'promiscuous' but stopped when she heard the second description.\n\n\"Nanny?\" said Naomi, \"Who told you I was a nanny?\" Her brain began to calculate.\n\nThe social worker stopped herself for a moment,\n\n\"Errr... nanny... maid... lodger... whatever,\" the woman recovered as quickly as she could, \"Miss Williams the truth is you have made some very unwise choices about your behaviour since you moved in with the Stanley family.\" She withdrew a notebook, \"you stripped down to your panties in the bathroom while with your lover and his nephew looked on - that doesn't sound much like day to day living to me.\"\n\n\"What?\" she felt temporarily flustered, \"Mattie had fallen and I got wet lifting him out of the bath, anyway I wasn't sleeping with Rob then.\" She looked down and realised that she had folded her arms defensively. Her chubby tormentor saw and carried on her attack.\n\n\"So you admit you were half naked in a bathroom with your 'lover',\" she made the word sound filthy and Naomi winced, \"and a sensitive young boy with Autism...\"\n\n\"Matt doesn't have autism, he has cerebral palsy,\" said Naomi recovering some ground, \"just where are you getting this shi...\"\n\n\"And that makes such difference does it? Autism, cerebral palsy, bubonic plague?\" The lady social worker's voice dripped with disbelief and disappointed derision, way too much Naomi thought, \"You still stripped half naked in a bathroom with Mr Stanley and one of his two disabled sons. Next you have a rather inappropriate dress no better than lingerie made up by one of his adopted daughters; were you naked in front of her as well?\"\n\nNaomi thought about what answer she should give, the social worker interpreted the delay to her own ends. \"And NEXT you're naked with Elizabeth and the black adopted one...\" even Naomi could see tell the pause was calculated, \"Coral?\"\n\n\"Carla,\" snapped Naomi, \"And yes I was, in the local leisure centre swimming pool changing rooms,\" she paused, \"don't tell me, do I have to answer for the four other naked women and their children in the room as well?\"\n\n\"Don't get fucking flippant with me Miss Williams,\" snarled the social worker. \n\nHer male colleague was starting to go extremely red and was back whispering in his colleague's ear again.\n\n\"Yes it is Raymond,\" she growled at him, \"if you don't have the stones to carry out this kind of investigation then go back to your old people for Christ's sake.\"\n\nHe whispered something else behind his hand, and she turned and did the same, both of them obviously cross with their colleague. He stood; Naomi stood too and looked at the woman.\n\n\"If Raymond goes, I go,\" she said, \"something stinks in this so-called investigation and if he doesn't like it neither do I.\"\n\nThe woman stood, rolled her top lip in anger and started to press buttons on the recording machine snatching both of the CD's. Raymond left the room and Naomi felt vulnerable.\n\n\"I'll think you'll find one of those is mine,\" said Naomi holding out a slightly shaky hand. She didn't know either way but thought she'd try and gave it 100% confident, 'hand it over'.\n\n\"You'll have it when I say so Miss Williams, and not before.\" Said the woman, her confidence perhaps knocked by the departure of her colleague. \"This investigation is currently informal and you don't have right of access...\"\n\n\"Well you know what Miss... what is your name?\" she realised that at no stage had the woman identified herself to anyone other than Dave Darnell. The man was outside and talking to a uniformed officer police officer, running a hand through his thin hair.\n\n\"My name is Bridges Miss Williams, Annabel Bridges,\" she held up her ID card hanging from a floral printed lanyard for Naomi to read the words herself, \"and I'm starting to get a bit bored with your rather lackadaisical attitude to your landlords children and what freedoms you believe you are able to take with them just because their father happens to be shagging you.\" \n\nSeeing the police officer talking to her colleagues the large lady social worker pulled the interview room door shut and got right into Naomi's face, \"The reason my spineless colleague has run away is that he want's to throw the book at you; me? Believe it or not Miss Williams today I'm actually playing 'good cop' and I want to give you a break. So,\" she took a deep breath, \"You say nothing, you do nothing, you do NOT discuss this with Dr Stanley because he's one of the good guys and we don't want him to go down with your sinking ship,\" Annabel Bridges leaned in close, \"you so much as kiss one of those kids on the cheek without my say-so and so fucking help me I'll have you remanded in custody with all the of the fucking shoplifters and the drug dealers that will take great delight in beating the shit out of the child molester and then fisting you so hard you won't be able to sit down for a week or fuck a nice man like Dr Stanley. You so much as sniff at breaking the confidentiality of this meeting and I'll split that sweet little family into five directions at once and it'll be your fault, except for that druggie half-chat brat that seems to like you so much, she can go back into care...\"\n\nCarla going back into care, Naomi froze at just the thought.\n\n\"You leave them...\"\n\nShe stepped right into Naomi's personal space and pushed a finger into her left cheek causing her to wince and try to take a pace back, but there was nowhere to go. \n\nAnnabel Bridges dropped her tone and with a look all teeth and attitude hissed, \"That's it Miss fucking Williams, I am soooo fucking bored with you now. I STRONGLY suggest you find somewhere else to live A.S.A.F.P - and by that I mean you move out; tonight, you leave Mr Stanley and those children and move out...\" She grinned a most hateful grin Naomi had ever seen, \"and I don't mean move down the road, I STRONGLY suggest you move out of my whole - fucking - county... you fucking whore...\" she growled right at the threshold of Naomi's hearing and so close she could smell her breath, \"You fuck off right now and I'll make all of this shit go away.\" She waved her hands birdlike in the air, \"All gone!\" she trilled, \"free and mostly clear, BUT If I find you are still living there or even worse still teaching sweet, good, honest children and infecting them with your sick fucking perversity in my country I promise that I will rescind your teaching certificate and have you sent down so fucking far and so fucking fast your feet won't touch; and once they let you out of prison and you can walk straight, you won't be able to get a job working with people that work with people that WORK with children - comprende? Bitch?\"\n\n\"But...\" said Naomi in a gasped whisper, tears streaming down her face, evidently to the delight of her torturer.\n\n\"Listen stupid,\" sighed Annabel Bridges, \"I'll spell it out nice and simple for ya,\" She held out a hand touching each finger as she spoke, \"GET... OUT... OF... MY COUNTY!\" and then moved to the other hand, \"AND... STAY... OUT... got it?\" In studied hate the woman patted Naomi's cheek with no tenderness, \"Well done!\" \n\nShe collected her large red book and pages of loose notes and left the room, pushing Naomi back out of the way adding, \"fucking school teachers, no wonder our education system is going down the fucking toilet...\" as she left.\n\nNaomi was at a loss for words. While she was stood dumbly trying to take on the threats from the social worker, both of them had disappeared from the front of the police station leaving her short of a lift back to with just her handbag and just enough change for a bus back to the school. She dried her cheeks and followed a police officer out of the station to stand on the brick steps, alone.\n\nIn a state of confused shock she somehow got back to the school with no real remembrance of the journey. The building was still open because of all the evening usage it received and she used her ID card to open her room. She had no idea how she got back to her the house or what time it was.\n\nBack in familiar surroundings the fear hit home and she sat on the end of her bed and shook, hugging herself; and for the first time since she moved there she locked the door. She felt a slight rattle that was probably Carla trying the door, she heard a faint call and stuck her fingers in her ears.\n\nShe fell back on the bed, the social services DID know everything about her and Rob and they didn't like it. She knew she was innocent but the venom, the hateful threats scared her. The thought of those children she loved so much being spilt up tore her very soul and she couldn't move for the fear of it. Even with her mind ablaze she cried herself to sleep but after a while she felt the bed move, and she sprung up in shock.\n\n\"Well that sorts that at least,\" he said.\n\n\"What?\" she looked at him through teary eyes.\n\n\"At least I know that you aren't pregnant,\" he held out his arms to her, and for once she didn't fall into them. \"What's up honey?\" he said, eyes narrowed.\n\n'...Get out of my county' - those words wouldn't leave her head.\n\n\"Nothing,\" she said, \"it's just...\" she sniffed, thinking of what she now had to do to save this family, \"I think it's time I moved on,\" she tried to grin but couldn't.\n\n\"What?\" he said, \"What... you mean...\"\n\n\"Sorry Rob,\" she was just about in control of her emotions, \"It's been great and all but I have to... you know...\"\n\n\"No baby I don't... Look, tell me what's happened,\" he put a hand to her shoulder and she wriggled away from it.\n\n\"I've got to go Rob, I'm sorry... but...\"\n\n\"You can't leave Naomi, you can't.\"\n\nNaomi stood and walked to kitchen and looked through her cupboard for a glass hiding her pinched face struggling to hide her despair from Rob.\n\n\"Sorry Rob,\" she smiled but without much conviction.\n\n\"But... Nomes, Darling please,\" he carried on, \"Carolyn is just getting used to being a kid again, Mattie is so much more alive than he's ever been, if Lizzie has to tell me to marry you one more time, she'll beat me with a stick,\" he paused, \"You are the single best thing that has happened to Paul in his life, end of story. And Carla... well,\" he gulped, \"if you go you'll either break Carla's heart or end up taking her with you which would break mine.\"\n\nShe burst into tears and this time she did fall into his arms. He guessed this was different, \n\n\"Tell me what's wrong,\" he said and she almost did.\n\n\"No!\" she said, then calmed herself, \"No, I'll be fine; I'll make myself some tea and then have an early night.\"\n\n\"Early night? Nomes, it's quarter past midnight honey, what has been going on with you?\"\n\n\"Nothing...\" she said, making it obvious that it was far from nothing.\n\n\"You didn't get home before half eight, and by the looks of you, you've been crying most of the night, you have to tell me Darling, I can't help you unless...\"\n\nAnd that was it; it struck her then, what the problem was. It was all going so well, now for some reason or another it was fucked up, all blown away and this particular problem had to the ability to see her drummed out of teaching - the one thing she'd trained for, most of her adult life. But worse, she couldn't take Rob or his wonderful family down with her.\n\nShe would get rid of Rob, pack what she could and contact Brother Pete and have him come collect her tomorrow morning once everyone had left for the day. Drive to Priors Park, resign and ask if she couldn't sleep on Pete's sofa, it was still in the county but if she kept quiet...\n\nThen it was one long wait to see if the social services came after her.\n\nShe overslept; Rob must have put her to bed, and she hadn't put her mobile on to charge so didn't get her usual alarm call from it. Nor did she get the text message or phone calls from Lizzie, Carolyn or Rob, all really worried about her not appearing for breakfast or her walk to school.\n\nShe started to repack her stuff into her few bags, her heart breaking as she did so. Everywhere she looked there were reminders of this wonderful family she had to leave behind. She plugged her phone in and rang the school and spoke with Dave Darnell.\n\n\"Dave,\" she said trying to sound in control, barely. \"It's Naomi, I have to err... resign...\"\n\n\"Why!?!\" he called out, \"Why? What did they say? Naomi... what the hell have they said you did, what...\"\n\n\"I'm sorry Dave, I don't have a choice it's... all a bit complicated...\"\n\n\"Naomi listen...\"\n\n\"Sorry Dave, when I get settled into my new digs, I'll write to you formally.\"\n\n\"New digs? What!?! What about Rob... Naomi, I want to see you before you do anything. No moving, no resigning, nothing. You stay there...\"\n\n\"Dave, I can't...\"\n\n\"Stay there!\" he commanded.\n\nIt wasn't Dave Darnell that called to see her but Rob. He opened her bedroom door using the combination, and stood at the end of her bed looking at her things all over the place.\n\n\"Nomes,\" he said using a strong parental voice, \"You have to tell me what's going on; I get a phone call from Darnell telling me that you've resigned after being taken away by social services yesterday, what's the matter?\"\n\n\"I'm not allowed to discuss...\"\n\n\"Nomes please, tell me. I trust you baby. Please.\"\n\n\"She told me...\" Noami burst out, \"She said If I talked to you about it, she'd have me remanded in custody and...\" she shuddered, \"and lots of horrible things. Police station, fingerprints, DNA, I've never been so scared in my life.\"\n\n\"Police station? What? What did they charge you with?\"\n\n\"I don't know,\" she said, fat tears rolling down her face, \"I don't think they charged me with anything.\"\n\n\"But they took you to the police station and took your DNA and fingerprints.\"\n\n\"Yes,\" she broke down, \"I never did anything Rob,\" she pleaded, \"you have to believe me.\"\n\n\"I...\" he looked in shock as well now.\n\n\"You... you don't believe me either do you...\"\n\n\"Nomes, I don't know anything, what are you supposed to have done for the police to have taken your DNA and fingerprints?\"\n\n\"They had complaints that I'd been inappropriate with you and the children, I haven't Rob swear, I'd cut off my own hand before I did...\"\n\nHe pulled her into a hug and she hung on him, relieved to feel his strong arms around her at last.\n\n\"Of course you didn't. I know that Darling,\" he pushed some of her clothes onto the floor and sat down, pulling her down with him, \"Tell me everything that happened baby.\"\n\n\"But...\"\n\n\"Darling, I have a Masters in Criminal Law and I'm on first name terms with the Chief Constable and extremely well acquainted with most of the Police senior officers in the county, and something about this stinks. Tell me everything.\" She did.\n\nAfter a half hour of pain wracked discussion, he made her a cup of tea and insisted she lay down and rest. He would be back in an hour or so.\n\nThere was a loud thump at the door. She went down and it was the same lady social worker in another all covering print dress. Naomi didn't open the door and hid.\n\n\"I can see you! Out you co-ooome!\" sang the woman, \"You can open the door or so help me, I'll have the police here in ten minutes and they'll drag you out... No!\" Naomi could hear the lift in the woman's voice, \"I'll wait until the kids start to get back from school THEN we'll have you taken out - in handcuffs.\" She could hear the deep breath, \"What's it going to be Naomi - I can drive you to the police station or they can drag you, there's always two ways of doing everything.\"\n\nNaomi ran upstairs to the flat and locked herself in, the snatched up her phone and called Rob. He answered straight away.\n\n\"She's here,\" hissed Naomi.\n\n\"I'm at the police station Darling,\" he said, \"do you trust me?\"\n\n\"Y...yes.\" \n\n\"Go with her...\"\n\nThe journey back to the police station was uneventful, and silent. She had walked out to the small scruffy car driven by the social worker, different to the one they'd gone in yesterday. Annabel Bridges wasn't the most confident of drivers, and while Naomi guessed she must have passed her test years ago, she still drove like she had just passed her test, without any of the bad habits most drivers have. \n\nAt the police station Naomi was interested to see not only Rob's people carrier, but Dave Darnell's rather scruffy looking racing green MG with the unmistakable taped together light cluster on the off-side rear.\n\nShe was taken into the front desk. The smiling duty officer seeing both lifted the flap and allowed them both through to the same interview room from the day before just along the corridor.\n\n\"Same room as yesterday Miss Bridges, door's open!\"\n\nNaomi walked in and Annabel Bridges slammed the door behind her, and it looked like she had locked it.\n\n\"Sit down,\" she snarled, then took a deep breath. After a few moments of pursed lips and folded arms Annabel Bridges spoke'",
        "\"Soooooooo,\" said the now pissed off social worker, \"You haven't moved out yet,\" she leaned across the table, \"What the fuck did I tell you yesterday bitch?\"\n\n\"I want someone else in here,\" said Naomi, her raw emotions had started to get the better of her.\n\n\"I don't care what the fuck you want whore,\" she said coldly, \"currently I am the only thing keeping your arse out of the can. We made a deal didn't we?\" Her face changed, \"DIDN'T WE?\" She leaned forward again, \"You were going to jump on your fucking dyke's motorbike and fuck off; bus, train, hitch-hike, whatever but we decided you were going to leave didn't we?\" Naomi didn't make eye contact, staring at the table top instead, \"Well Miss Williams, you remember all those drug dealing prostitutes I told you about? They are all warming up their fists and getting the fabric conditioner ready to rape you down in the laundry room;\" the woman chuckled, \"The warders won't do much to rescue the child molester, at least when I tell them not to.\"\n\n\"I've spoken with Rob and he said...\" The woman seemed slowed for a second and despite Naomi's extreme distraction she noticed it, and remembered it.\n\n\"I thought I told you... this was our special secret,\" the woman exhaled deeply and stood up, leaning across the table looking quite angry and scary, \"Don't you WANT me to keep you out of jail?\"\n\n\"Rob knows all about the law, he's...\"\n\nThe woman's bottom jaw flapped a few times and Naomi added this to the previous chink in Annabel Bridges well-presented armour as another sign that she might not be all the social worker she thought she was.\n\n\"I... I don't care about your... your bullshit school teacher lover's opinion,\" she stuttered shaking her head in disdain. \"Right...\" she took a breath and nodded, \"right, the only way out of this... for you I mean, is to leave right now.\"\n\n\"What?\"\n\n\"I'll drive you to the railway station and you buy a ticket to Birmingham, or Manchester, or wherever the fuck you like so long as it's a long way from here.\"\n\n\"Manchester? What the fuck are you talking about, I'm not going to Manchester!\" snapped Naomi. She had planned on going the ten or so miles north to Pete's house, no way was she going that far.\n\n\"OK then Miss Williams,\" she folded her arms and shook her head in disappointed closure, \"I'll just have one of those nice policemen out there lock you in a cell here.\" There was a just detectable break in her voice that suggested to the schoolteacher in Naomi that she was being lied to.\n\nRob's words came back to her,\n\n\"So she never ACTUALLY told you what you had done, or what crime you had committed? The law doesn't work like that Honey...\"\n\n\"Go on then...\" said Naomi.\n\nAnnabel Bridges leaped to her feet, her bottom lip wobbling and she slapped Naomi across the face.\n\n\"Don't you 'dare' me, you... you fucking bitch!\" Naomi's eye's watered as she tried not to cry, \"Awww widdel No'mee twying not cwy? Aww poor baby!\" she mocked.\n\nThe fat social worker touched Naomi's reddening cheek and she flinched back. Her tormentor laughed and the fake shoulder shakes scared Naomi more than the fear of any physical pain she might impart. Annabel Bridges saw this and acted on it, taking back some of the moral ground she had lost with her violent temper tantrum. She sat and leaned back and folded her arms, settling back into her 'good cop', 'I'm just trying to help you' role. \"Naomi, what part of this shit do you still not get? You time in this town is OVER!\" She leaned towards Naomi, her hands prayerfully folded, \"Screwing the landlord, messing around with his kids? All finished, get your bag, we're going to the railway station, come on,\" she smiled and wrinkled her nose nodding towards the door in a scary change of personality. \n\n\"I've had enough of this,\" Naomi said now weeping and at the end of her string, \"Either bring a police officer in here and charge me or fuck off!\" she shouted.\n\nWith lightning speed the other woman was up and took a handful of her hair and pulled her to her feet with it.\n\n\"Listen blondie, I'll tell you what you'll fucking do...\" the woman screeched.\n\nThe door opened and there was Dave Darnell, a few policemen, the duty officer that let them in and at the back of the crowd wonderful Rob standing with arms folded and smiling. The social worker dropped Naomi's hair and stepped back, shocked and stunned by the police officers in their black T-shirts with bulging muscles and cold stares.\n\n\"Sorry to put you through that honey,\" said Rob, \"only I came straight here and spoke with my friend Chief Inspector Murphy here and asked him about the interview under caution that went on here yesterday. But you know what?\" Rob moved out further into the room, \"they didn't have an interview under caution booked here.\" He looked long and hard at the social worker, \"Chief Inspector Murphy checked with duty officer Malc here and it turned out what they did have booked was a training session in 'interviews under caution' - booked by Social Services of all people. But,\" said Rob, \"When we checked with Social Services it turns out they don't have a social worker called Annabel Bridges. What they do have is have an accountant called Annabel Bridges, care to explain the misunderstanding Annabel?\" \n\nThe older woman flustered a bit then obviously having come up with a story took a deep breath.\n\n\"It was just a joke,\" she said, trying to add a rather wobbly smile to the proceedings, \"just a bit of a giggle between teams, education and children's services, l you know how it is!\" she giggled a nervous and wholly unbelievable chuckle. \n\n\"No,\" said Rob, \"I don't, why don't you tell me.\"\n\n\"I was put up to it, it was...\"\n\n\"That's enough,\" said the Chief Inspector placing a hand on the trembling fraudster's shoulder, \"Annabel Bridges I am arresting you for false imprisonment, assault and impersonation of a public official. You do not have to say anything but...\"\n\n\"But...\" she tried to cut in but to no avail.\n\n\"...it may harm your defence if you do not mention when questioned something you later rely on in court - anything you do say may be given in evidence; you were saying?\"\n\nAnnabel slumped back in her chair and began to fall to pieces. She had been put up to it, it seemed by of all people Hilary. They were first cousins, and after a few moments Rob remembered that he'd met her once at Lizzie's Christening.\n\n\"Why?\" he said with exasperation, \"Why would Hilary do something that fucking evil to someone she'd only ever met once or twice?\"\n\n\"She HATES her!\" snarled Annabel, \"she came into your life just when she was thinking of getting back with you! The fucking help! A fucking babysitter! The skinny, blonde, sexy fucking NANNY!\"\n\n\"That's why you said I was the Nanny,\" threw in Naomi, \"Hilary called me the Nanny at Christmas - bitch.\"\n\n\"How fucking...\" snarled Rob, \"How fucking dare she!\"\n\n\"People thought that this blonde bimbo was Elizabeth's Mum for fuck's sake!\" growled Annabel Bridges.\n\n\"Easy now,\" said the chief inspector, \"this is all being recorded so can you all mind your language please.\"\n\n\"Recorded?\" said Annabel, \"what... how...\"\n\n\"Well we noticed that for your training session yesterday you struggled getting the CD's out of the machine, your colleague Mr Hobbs told us on the phone as soon as we described him to another colleague and they put us straight through to him. I understand you had a bit of an argument with him today. Refused to come with you did he?\"\n\n\"Yes,\" she sniffed, \"yes he did.\"\n\n\"Good for him,\" said the senior policeman, \"he might just have kept himself out of prison by doing that, he still should have rung us mind you and the county will know best whether he gets to keep his job. When you arrived this afternoon young Malc here set the machines and pressed record before he came and got you. Good thinking Malc.\"\n\n\"Thank you sir, I do like to be helpful to social services.\"\n\n\"Right Mr Darnell, Mr Stanley and Miss Williams, if you can go with these officers and write me some statements, Miss Bridges and I can have a little chat. Can't we... Annabel...\"\n\nOne officer remained in the room with the Chief Inspector and everyone else was led away to complete written statements about the peculiar goings on over the last 36 hours.\n\nAfter a hug from Dave Darnell, Rob took Naomi home and to her bedroom and gave her a large cup of tea, wrapped a blanket around her feet, and left to get the kids from school. She was asleep in moments.\n\nIt took more time than usual and there was no sign of Lizzie; not even for the tea and cake they often had prior to the evening meal.\n\nRob indicated to Naomi that she should follow him, and she did. They sat on the sofa in her loft room with instant coffee this time.\n\n\"I had a call from Pat Murphy,\" he said sniffing and looking pale, \"It seems that that skinny little runt Kyle has been pumping my Lizzie for information about you ever since you moved here. Lizzie was mad about you of course, and just kept singing your praises. One minute you're lifting Matt out of the bath, next you're Cinderella, then working Christmas miracles with Paul, keeping Carla out of Carolyn's hair, every lovely thing you did made her hate you more. And Hilary can't do with anyone that does anything better than her. It seems that when you went swimming, someone asked Lizzie where her Mum, you, got that fantastic costume from; Lizzie just laughed and told Kyle. He reported it straight back to his Mum - that was the final straw.\n\nHe was ordered to find out about the dress Carolyn made for you, apparently Hilary wanted Lizzie to try and get the picture from the shelf 'out of interest' because she was so keen on Carolyn's latest creation but Lizzie said no, bless her. That little gem of inflammatory spite came from none other than Jen Harvey I might add.\n\nWe understand from Annabel that the mad bitch does have a mobile phone snapshot of it though, which is part of how she managed to convince Annabel to go after you. You were a nasty little gold digger apparently. You're everything that Annabel wasn't - pretty, curvy, blonde and most importantly nice, that was enough to push her over the edge apparently.\"\n\nNaomi took a deep breath, \"Fuck.\"\n\n\"Exactly; Hilary now knows that you and I sleep together and I think that Lizzie might by now, but the police have told her not to answer her mobile or emails from her mother for the time being. Lizzie and Carolyn share everything in the way of sisters of course so I expect Carolyn knows as well now. My Lizzie didn't have the wherewithal to spot that young Kyle was playing detective with her.\n\nHe knew that she cared about him so he played on it; 'your family is so much nicer than mine, No'mee is so lovely, I wish I had her for a mummy, Mummy and Daddy row all the time'. So she told him about how we live, and what we do, that Carla worships you and creeps up to your room, Carolyn comes up to room and has a glass of wine every now and again, and our days and evenings out. Carolyn and Lizzie already think we are (their words) 'boyfriend and girlfriend'.\"\n\n\"Jesus!\" hissed Naomi, \"How's Lizzie?\"\n\n\"Not good; thinks it's her fault and that she's let everyone down, she won't listen to me and Carolyn isn't back yet; could you...\"\n\n\"I'll go see her right now,\" she stood up. \"Some No'mee TLC, I'll bring her downstairs for tea.\"\n\n\"Thanks Darling,\" he stood up and squeezed her tight. \"Nomes,\" he said, \"I...\"\n\n\"Don't worry Rob,\" it'll all be over in a jiffy.\"\n\n\"But...\"\n\n\"Lizzie? Back in a mo' Rob, honest.\" She patted his face, then kissed his cheek.\n\nShe padded downstairs in just her slippers. Lizzie's door was shut, something it hardly ever was. Naomi turned the handle and quietly pushed the door open. Lizzie was sat on her bay window seat and turned a red-eyed, tear stained and now shocked face on Naomi. She made to open her mouth but instead she tried to run past her.\n\nNaomi had needed to stop various children running away quite a few times when she worked in special needs and she caught Lizzie quite easily and lifted her slight frame up and into a hug. Once Lizzie realised what she was doing she put her arms around Naomi's neck and gripped her with her legs, the same way tiny Carla did.\n\nNaomi cooed soft words into her ear and stroked her lustrous wild blonde hair.\n\n\"Hey baby, it's all OK. Nomes is here honey pie, I've got you.\"\n\nLizzie squeezed her even tighter around the neck so she backed up to the bed and sat down on it. Lizzie leaned back so Naomi could see her face. She stroked her hair again and smiled. Lizzie burst back into tears again.\n\n\"OK honey, it's OK, you get it out of your system, you cry until you're ready to stop.\" Years in teaching had taught her this was the best way to stop emotional children from crying.\n\n\"I'm... I'm... s... s... so sorry Nomes,\" she managed to burst out among her tears.\n\nNaomi put a soft and gentle reassuring hand to her cheek, almost nose to nose,\n\n\"You honey pie have NOTHING to be sorry for, honestly. You are the kindest sweetest girl it has ever been my pleasure to know, and you were taken advantage of by some very nasty people.\"\n\n\"But... the police station... what Annabel did to you... it was because of me.\"\n\n\"Not your fault sugar,\" she said, \"they were grown-ups that played on your wonderful sweet and caring nature, and you aren't to worry about it anymore.\"\n\nNaomi swung her feet onto the bed and leant back on the headboard keeping Lizzie on her lap and in her arms the whole time.\n\n\"Bloody Kyle, I always wondered why he put the baby voice on so often, because I fell for it obviously.\" She sniffed and dabbed her eyes with the short sleeve of her white school blouse. \"I will never speak to him again, I might punch him next time I see him, but...\"\n\nNaomi pulled her into a hug,\n\n\"No you won't honey, you'll stay my special sweet girl that you have always been. And you'll go on and grow up and be the best darned piano playing, school teaching, horse riding, Doctor and Vet this town has ever seen.\"\n\n\"Thank you Nomes,\" she grinned, \"I am really sorry...\"\n\n\"If you keep saying you're sorry missus, I may just have to tickle you.\"\n\nLizzie laughed and looked mischievously at Naomi, who pursed her lips and took one of her hands from the teenagers back.\n\n\"Sorr...\"\n\nNaomi struck straight away within seconds had a giggling, wriggling blonde teenager helpless in her arms, and she even went so far as to blow a raspberry on her neck. \n\nConcerned at what the commotion could be Carolyn was in the door and checking on her much loved sister. She saw straight away, and came over to the bed and sat near Naomi's feet.\n\n\"Glad everyone's OK here!\" she grinned.\n\n\"Yeah,\" said Naomi giving Lizzie the occasional tickle, \"it's because every time she says she's sorry I have to tickle her.\"\n\n\"Sorry?\" \n\n\"Yes,\" said Naomi and she tickled Lizzie again.\n\n\"So sorry is the word that Lizzie can't say?\" \n\n\"Yes.\"\n\n\"Sorry.\"\n\n\"Yep.\" Naomi took the hint, three or four times over until they headed downstairs and the splendid tea that Rob had created.\n\nCarla, Paul and Mattie remained unaware of what had happened. Sat in Carolyn's room later, Lizzie announced that she would never speak to her mother, Annabel or Kyle ever again, and no amount of apologies would ever make up for what the three of them had done to her and Naomi. It was decided that nothing more need be said about it; the police had said that they were considering charges against Hilary and Annabel and they might be needed in court. Rob said that they'd cross that bridge when they came to it.\n\nIt later emerged that although Kyle was very much the junior partner, he had taken a full part in the planning. He treated Lizzie with contempt and told his mother that his step sibling was so stupid she'd give him tonnes of information on 'that woman'.\n\nHilary was taken to the police station to 'help with enquiries'. It also turned out that she'd got the initial idea to involve social services from a discussion that she had with her old 'friend' and Rob's Boss Jen Harvey who had asked her what she thought of her ex-husband going out with someone that looked like a slut. \n\nHilary had yet to meet the new lodger, and didn't at that stage know that the lodger and the slut were one and the same. The children's desire to get the great photo of Naomi and Dad on the shelf in pride of place and the rave reviews she had from Lizzie and Carolyn was the start of the matter and the Christmas Day choice followed by the suggestion she was Lizzie's Mum was the final nail in the coffin for Hilary. \n\nShe had been drunkenly waxing lyrical to her cousin Annabel at a family funeral about how her new husband wasn't all she supposed he was. Yes, he had been great in the sack, and the thrill of their secret affair was the best thing that had ever happened to her; Rob was great in bed, on the understanding she could fucking get him there. \n\nMatt was a sweet boy but the last thing she was going to do was throw her life away looking after someone else's crippled kid. Even his mother Anna, who Hilary had really liked, had seen sense and had run away leaving the poor little sod and his nappies for someone else to sort out.\n\nRob seemed always to be doing something with the girls or Matt, they made love occasionally and it was really nice. But when she leapt into bed with her neighbour Steve while Rob and the kids were at school it was fantastic, even better when they were all in the house next door. \n\nShe still remembered with a tingle a time a Saturday when everyone had been running around in the garden jumping around and through a lawn sprinkler Rob had brought out from the garden shed. Carolyn, little Lizzie and Steve and Tammy's son giggling and shouting as they leapt through the fan of water that would rise and fall in slow motion.\n\nThe tingle wasn't from the simple parental pleasure of English summers and innocent childish play, it was the way the Steve had pushed her against Rob's desk in the study, raised her blue cambric skirt and thrown it over her back, pulled down her knickers, smacked her behind and fucked her as she peered through the slightly dusty smelling net curtain, watching 'her' husband and 'his' wife playing with 'their' children. He pulled her large tits free from her bra and squeezed and mauled them, dragging at her nipples with his nails. It was probably one of the strongest orgasms she'd ever had.\n\nBut now that rush was gone. There were no more secret sexual acts to had, Kyle had seen to that in his strange desire to crawl around the place at all times of the day and night fancying himself as a bit of a detective, and seemed to delight in walking in on his parents whenever he thought they least wanted him to. Again, something else she put to her advantage.\n\nSteve was made redundant and while his wages were never that good, the whole process to a man in his mid-forties had a bit of an emasculating effect on him and he struggled to maintain his erections and Hilary's criticism didn't help.\n\nFrom the time of their split she had lorded it over her ex husband; however her life went she always had Rob to look down on. Despite what she felt about Steve and Kyle, Rob just went from bad to worse. Her friend Jen Harvey kept her up to date and seemed to delight in doing so, talking about the latest goings on at the Stanley house she'd lost in the divorce settlement even though she had wanted to move out and live with Steve; storm damage, leaks, walls kicked down by drunken yobs and even an attempted break in, and Hilary could take great delight in the expense it all must be for him and his limited income.\n\nThen his brother died and he was given that huge house in the village mortgage free - he'd even given her half of the profit from selling their old house. Add to that his brother's considerable investment portfolio so long as he lived within his means he was set up for life as was his nephew Matt. ",
        "He moved his furniture into Tom's old place, settled and started to collect more children, and seemed happy. That wasn't such a bad thing; she paid minimal maintenance just for Lizzie seeing as Carolyn wasn't her child and Matthew wasn't her problem either. \n\nNot having Lizzie around to ruin her and Steve's new love nest was great. They'd rented a flat and their new love was really exciting. But she soon realised that it was that initial excitement and secrecy that had been what drew them together. Steve was a good lover, but not a great one. She soon realised that her orgasm wasn't high on his list during their love making. They had sex quite often, but the spark of running around each other's houses with no underwear, hiding from their spouses and making love was gone and now it was just a fuck. \n\nSex with Rob had been guaranteed orgasms, Steve would get her in the mood, fuck her, come and then roll over and go to sleep leaving her to her fingers and vibrator.\n\nThe flat was cool and funky but really small and impractical, so they bought a house. They had a housewarming party but few people came to it; coming from the same group of friends, many of whom had contact with their ex's and children, it was left pretty much to work colleagues and some family members as most felt that she and Steve had really done the dirty on their former partners.\n\nHer mother had really liked Rob and didn't much care for football fan Steve who would go to all home games and many away matches returning slightly pissed and reeking of cheap fast food. When she announced to Mum she was pregnant again she didn't get the look she got when she first spoke of the arrival of Lizzie, but a disappointed glower and, \"at your age?\"\n\nKyle was born and Steve spoke about how great it was to have another son to take to football seeing as his son from his first marriage showed no interest in his father or his favourite sport. \n\nShe had sex with Steve still right up to the point when he lost his job and she had criticised his technique, that was the end of the sex. \n\nTo make it worse across the county Rob went from strength to strength. Despite her mate Jen's best efforts he was made head of department and his pay increased. He picked up some little drug addict's bastard child and Lizzie was all over her, more so than she was with young Kyle who was at least a step sibling. Lizzie talked about her all the time and almost as if in punishment she pulled and tugged at Lizzie's hair checking for head lice until her daughter cried and pulled away from her knowing that this inspection wasn't about head lice at all.\n\nLizzie let her mother know that if she was going to do that again she wouldn't come back. Hilary said that she bloody well would, and she was just making sure that she wasn't going to infect Kyle with the diseases Rob was exposing her to.\n\nLizzie screamed across the room,\n\n\"He's not Rob, he's not 'him' or 'your father', he's my Dad, call him THAT!\"\n\nKyle started to whine his distress, doing his usual crying without tears. Lizzie ran up to the spare room, phoned her Dad and asked him to come and get her. He did and that was the real reasons that the weekly visits became monthly. She argued with Rob about Carla but he just smiled and tried to convince her it was fine. Carla had been blood tested following the death of her mother and she was free from many of the diseases common to those that shared needles in dark rooms.\n\nAfter Carla it was looney Paul who started to stay more often and eventually became a permanent resident. This time Hilary suggested that the quiet and withdrawn autistic boy was a danger to Lizzie and the rest of the children and she would again have to speak with Social Services. Rob didn't panic much because Paul had come via Social Services and told his ex-wife so and to do her worst. \n\nThat summer he'd had a grant from them to buy a large people carrier to transport the big family around, and for the first time ever they had a short holiday in a caravan specially fitted out for wheelchairs. Hilary followed the family joy via Lizzie and Carolyn's Facebook pages and fumed. \n\nShe and Steve had taken Kyle for a fortnight in Southern France and it had been good, but didn't seem to touch their four day break in a Holiday Park in Weston Super Mare. She had offered to take Lizzie to France but the girl hadn't wanted to go, so Rob refused to make her, or for that matter pay for a ticket she wouldn't use.\n\nThe holiday camp family photograph of Rob surrounded by his beaming kids actually brought a tear to her eye. She remembered that smile, it was a smile that he used to save just for her and Lizzie; now he'd moved on and it struck her that this all might actually have been her fault and a huge mistake.\n\nThe final straw was this absolutely gorgeous 30 something that was renting the top floor flat and had all the kids under her spell. The summer ball picture was too much and it was obvious from her discussions with Lizzie and Carolyn that Rob was under her magic as well - his smile in that photo told her as much. Lizzie laughing about some fucking woman admiring that blonde slut's swimming costume at the pool and calling her 'your Mum' because of their blonde hair drove her to a tearful, angry distraction increased when Lizzie asked if she could stay 'at home' for Christmas because it was the first one with Naomi.\n\nSo it began. She figured that she needed to get back into Rob's life. It wasn't going to be easy with the sex kitten around. Kyle could be brought round to this kind of living, so long as she could get rid of the loony Paul and that grubby little infant Carla. Perhaps the blonde bitch might take them with her, she might even take Matthew.\n\nNah; no fucking chance of that happening, it was his nephew that called him Daddy. \n\nMake her a nanny! That would do it, she could cluck and gloat over the freaks and sicko's while her and Rob got on with raising Lizzie and Kyle, and Carolyn she supposed. Or perhaps Carolyn could be sent on her way now she was almost twenty one.\n\nSo she thought on how this could be done. The longer it took the more she found out about how well everyone was getting on.\n\nShe spoke with Jen Harvey, not realising that Jen had herself been thwarted in her plans for love with Rob, but the idea of kicking the hot blonde out seemed good to both of them jealous of her youth and looks.\n\n\"Take back what's yours Hils,\" said Jen, \"he's way better than that blonde slut that lives there.\"\n\n\"I have an idea already,\" said Hilary, \"I think that Social Services are going to start to take more of an interest in that little family.\n\nBut the first complaint she made didn't even get a response. In truth the family social worker had met Naomi already and was aware of her profession and how well everyone spoke of her. The children were all much more animated, even Carolyn who was slightly too mature for her years, but especially Paul, Matt and Carla.\n\nThe second complaint, thanks to Lizzie's fortnightly bulletin, was delivered the Friday before Rob's regular social worker went on her fortnight's holiday and typed, printed and unsigned.\n\n\"To whom it may concern,\n\nIt appears to me and all the right minded people I know that something extremely wrong is taking place in the household of Rob Stanley and his children. As you will undoubtedly be aware the new woman known as Naomi that lives there is taking advantage of Mr Stanley's good nature and that of his children. Paul the recent adopted male, is not as many suggest inscrutable, he is a 'sooner'; he'd sooner live with Mr Stanley and be waited on hand and foot than live with his real family that saw past his laziness and treated him as he deserves. Sadly the youngest female Carla is a liar and a thief and a danger to the rest of the family and should be removed to secure children services accommodation for the good of the rest of the family...\"\n\nOn and on went the bile and hatred. The duty social worker was new and spent a few days reading the file including the previous complaint and figured that there might not be smoke without fire and read the notes more closely.\n\nA home visit was necessary she figured and booked one the next evening. She arrived to find that Rob was still at work, Carolyn was late at University preparing for a fashion show, Lizzie was at her mother's and it was just Naomi, Mattie, Paul and Carla. All the people in question.\n\nThe social worker called in, and said it was just a routine visit to check everyone was OK after the new bathroom hoist had been fitted. Carla made tea for everyone and the social worker sat down, apologising that she hadn't checked with Mr Stanley before she came. \n\n\"That's no problem,\" insisted Naomi.\n\nThe social worker sipped her tea and thought about the notes that her colleague had written about the strange situation at this house. Naomi introduced the gang, strangely enough in the order that the poisonous letter had introduced them.\n\nMatt was holding his own cup and sipping from it and thanking Carla for making it for him. Paul made a cursory check of the social worker and sat in the adjacent front room with his laptop and a mess of thick science books, and wrote pages of notes for the degree level work he was involved in with the brighter sixth formers at his school.\n\n\"He's just checking I'm OK,\" whispered the blonde over her mug, \"I think the little Darling worries about me with strangers!\"\n\nAfter a short while the tiny little tea maker jumped onto the blonde's lap while she held the hand of the boy in the wheelchair.\n\nThe social worker finished her tea, and said she would let herself out insisting that was all was fine. She wrote in her notes that she wished that many of the families she dealt with were as happy as this one and she wrote across the anonymous complaint letter 'NFA'. 'No further action' for the lovely family of misfits, thrown together from a mix of illness misery and loss.\n\nHilary tried one more time, now complaining as Lizzie's Mum, saying that she was upset that her daughter was being side lined by all of these other children that seemed to be filling up her house, most of them being dumped there by social services it seemed to her. The worker wrote back saying that everyone in the house was happy, well balanced and Mr Stanley had even taken on a new lodger that helped with childcare and was making a real difference, while she understood Hilary's concerns there was no suggestion that... blah blah blah.\n\nPretty soon Hilary realised that the social services department was not going to help her get back into that house and those lives. She went to the wake of an uncle that had recently passed away. She'd asked Lizzie to come with her but Lizzie had honestly never met the man or anyone on that part of her family.\n\nPissed off, she stood around the large hall used for the wake and tried to remember the names of these people she was related to. Her tubby cousin appeared and asked where Steve was. \n\nShe grumbled that he was looking after Kyle and he was struggling to find a new job. They both drank more wine that was good for them, eventually moving out of the hall into the bar once the event came to a close.\n\nHilary asked what her tubby cousin was doing these days, and did she still work for the council. Yes, she'd said, she had finished in the ratings department and she very proudly announced that she was responsible for almost the entire social services budgeting for the county. She wasn't but being so keen to impress said it anyway and showed her teacher cousin her ID badge that identified her as part of the management team of the childrens' services department.\n\nSocial Services? Did she get involved in cases?\n\nFrustrated tough girl Annabel indicated that she was occasionally involved in this kind of work. Another outright lie, she worked out of the administration department and rarely even met front line staff.\n\nBut she had seen lots of TV detective programmes and talked of the department's successes and how tough the work was. Hilary told her of how she felt she had been let down by her department. She watched as her tipsy cousin rose to the challenge.\n\nOver two more bottles of Prosecco they started to plan, a plan that had more holes than a tea strainer, but seemed to them both quite simple. Annabel had a badge that said she worked for Social Services - that was all that mattered.\n\nHilary's encouragement of Annabel's fantasy world and her interpretation of social work procedure was doomed to failure and the legal action would soon follow, passed them both by.\n\nA few weeks after the police station debacle, Annabel resigned before she was sacked and didn't lose her pension as she would have done if she'd undergone a gross misconduct hearing. She was prosecuted along with her cousin and both were sentenced to one year imprisonment suspended for two years. Both were recommended for psychiatric reports.\n\nThe mostly innocent Raymond Hobbs, a real social work assistant, was given a severe reprimand by his employer for agreeing to go along with it in the first place and not reporting what had happened straight away. He told the Human Resources Officer investigating the matter that Annabel had initially promised him extra budgets that weren't actually within her gift and then threatened to tell his line manager that he had defrauded his mileage and expenses payments; after all, she was a senior manager and they'd believe her for sure.\n\nRaymond, not the strongest of characters, went along with the strong willed, high-busted senior manager for the sake of an easy life, but as soon as he got a whiff of what Annabel Bridges had planned, he stepped away and on the steps of the police station told her to do what she wanted, he'd have no more to do with it.\n\nLizzie visited her still much loved maternal grandma and met Hilary there occasionally. She remained unapologetic and hard done by, and Rob swore he would never speak to her again, telling her to stuff her maintenance payment where the sun shineth not.\n\nAs calm was restored, the other problem that Naomi had resurfaced. She came in from school a few weeks later feeling 'Friday tired', it had been a long week. She trudged up the stairs, followed by Carla who sat on her bed in the usual way and watched as Naomi, slipped out of her school clothes and pulled on her jeans, feeling them starting to pull tight across her waist. She figured she'd need to start buying bigger clothes and wondered how long she could get away with the subterfuge. \n\nIt wasn't that she felt any differently towards Carla, but she wanted desperately to open her handbag and look at the tiny printed pictures she had been given that afternoon. She'd gone for her first scan and had that evening taken a glimpse of the tiny person growing in her womb that she'd waited so long for.\n\nShe'd kept her secret for so long now she couldn't even begin to think how she was going to tell everyone. They would all just think she was either stupid for not knowing or nasty for not sharing. And what would Rob say?\n\nThey'd carried on making love and they'd just carried on using condoms even though there was no further need for them; she couldn't get more pregnant after all. The green calendar ticks appeared as usual.\n\nShe sat on the bed and feeling like she could sleep for a week.\n\n\"Can you give me an hour baby girl,\" said Naomi, \"I'm really tired.\"\n\n\"Then I'll lay down with you Mo'mee,\" she beamed.\n\n\"Not this evening darling,\" she said, \"please Carla, I just need some alone time.\"\n\n\"We can be alone Mo'mee, just you and me.\"\n\n\"Carla!\" groaned Naomi in a voice she'd hardly ever had to use before. She regretted it instantly but as Carla stood up and made big eyes at her hero, her bottom lip protruding at this rejection. \"Baby I just...\"\n\nBut Carla was running down the stairs, and she could hear the short sobs. The pictures didn't seem anywhere near as exciting as they had before. No one came to see her until Paul came up to tell her tea was ready.\n\nShe came down and sat in the kitchen that was quieter than usual. Carla was red-eyed and not making eye contact with Naomi. The rest of the room picked up on the tension, and almost as soon as the meal was finished, she excused herself and headed for her room.\n\nThe next morning and Naomi couldn't face going down to that happy kitchen and dragging it down. She didn't want to leave but knew that she had to. Time for 'the plan' again, and to pack her bags and head out into the world, again.\n\nRob knocked at her door.\n\n\"Hey honey,\" he grinned, \"we're all going shopping, you...\" he took one look at her face, \"Wassup baby?\"\n\nIt had to be now.\n\n\"I'm all fucked up Rob,\" she said, \"I think you're all going to hate me.\"\n\n\"I could never hate you Nomes; trust me baby, there's nothing you can say to me that would ever make me hate you.\"\n\nHer face flushed and she felt her eyes brim with tears. OK, while she hadn't had the usual gut wrenching once a month sobs she'd known since her teens, this was totally new. Here she was, thirty three years of age, living in a great house with a wonderful bunch of people, one of who she was having passionate sex with, so much so she was carrying his baby. How the fuck was she going to walk away from this.\n\nBut the thing she knew, the one sure fact above and beyond all of her other feelings was that she didn't want to walk away from it. She wanted to stay here with her new family, and her new baby and be in love with the baby's father. The thing was that the baby's father seemed to be happy to make love to her and hold her and go out to dinner and secret boyfriend and girlfriend, OK he'd mentioned the kids wanting him to marry her but what then?\n\n\"I should go.\"\n\n\"Where?\"\n\n\"I don't know, it's...\" she took a deep breath and tried to control her breathing, \"it's just time I moved on.\"\n\nHe looked shocked and stunned,\n\n\"But...\" his face went from concern to fear, to exasperation. Naomi could read his expression and fat tears were pouring down her face. She tried to speak, waving a hand in front of her.\n\n\"Naomi Williams, will you just fucking talk to me!\" he said. She put a hand to her mouth, \"is this about babies Nomes?\" he said.\n\n\"What makes you say that?\" she said.\n\n\"You haven't been crying,\" he said sitting her down on her bed.\n\n\"What?\"\n\n\"You should have been bawling into one of our shoulders two nights ago. This is the first time you've been crying. Even Carla mentioned it.\"\n\n\"Well...\" her fuddled brain struggled to come up with an answer. The three times it had happened before, she'd been with one of the girls each time, and he knew it.\n\n\"Look, Naomi Darling, it's just...\"\n\n\"What?\" she said, \"You want to know if you're going to be a Daddy again?\"\n\n\"Well, yes actually.\"\n\n\"Why?\"\n\n\"What do you mean why, Naomi, do you still not get it? I love you. We all love you; but I'm in love with you.\"\n\n\"You... love me?\" She sniffed; he nodded with a grin.\n\n\"Couldn't you see it in my face?\"\n\n\"I think so, but... you see, I...\" she wiped a tear from her cheek.\n\n\"Don't you feel the same way Nomes?\"\n\n\"I...\" She stopped talking to catch her breath, breaking their eye contact.\n\n\"I take it that's a no then.\"\n\n\"No!\" she managed to spit out eventually, \"I mean it's not 'No I don't love you'...\"\n\nShe could see that he was beginning to run out of patience, and started to cry again, fearful that her standoffishness and non-committal responses to her lover could have blown her last chance for happiness and love.\n\nFortunately, he read that in her face too.\n\n\"Talk to me lover,\" he said taking both of her hands in his, \"Take a deep breath and start again, we have all the time in the world.\"\n\n\"I saw a look in your face Rob,\" she said with a genuine smile and he returned it, \"I desperately hoped that was what it meant, but... but I was never sure what real love in someone's eyes actually looked like,\" she giggled, and there was almost no mirth in it. \"You once described your perfect brood as waif's and strays, well... I'm a waif and stray as well,\" she said. \"My whole life, all the love I've ever encountered had an expiry date. To start with my birth mother left me at a children's home.\"",
        "\"What?\" said Rob in amazement. \n\n\"I was baggage left over from an unhappy love affair, put out and sent on my way by parents whose only real connection was as lovers. When my Dad's wife found out about my Mum and me, I was put up for adoption.\" She looked wistfully out of the window. \"I don't remember my real Dad that much; he was only around every now and again, the occasional weekend. I thought that was normal, thought that was what Daddies did. I remember going on a boat trip, it was on the Norfolk Broads, I still have a tiny snow shaker thing that he bought me. I was just getting ready to go to school after that summer, Mum took me out and bought me some green Gingham dresses, I was so proud of them!\n\nThen she was really sad and I didn't see my Dad again after that. About a year later we went for a drive in the country, least that's what I thought it was. It was somewhere in Surrey...\" her face went pale, \"we walked in, she gave my hand to one of the staff and went out to the car, I thought she was just going to get a bag or lock the car or something; no eye contact, no kiss goodbye, no 'see you later', no explanation, no apology, nothing. I was Carla's age when you adopted her. Four year olds understand stuff, especially when they are being dumped.\"\n\nThe tears poured down her face, she was finally freeing herself of the grief.\n\n\"I waited for days Rob,\" she wept, \"I kept telling the ladies that Mummy would come back, I kept repacking my bag for when she came for me, it was a pink rucksack,\" she tried to smile but couldn't, \"had ponies on it. But she never did come back. I remember crying and telling them she had to come back, my school dresses were still at home and I wouldn't be able to go to school without them.\"\n\nRob was holding her, letting her get it out of system, even he had tears in his eyes.\n\n\"My Nanny came to see me in the home a few times. She was lovely and the image of Mum. Older, always beautifully turned out, grey, really sad eyes. The last time came she took me to a big expensive shop in London in a taxi, think it was Harrods, and bought me a dress like my dolly had; said it was nicer than the school dresses I'd had. I expect she thought it would make people want to adopt me. Then we went for ice cream at this really expensive shop and she apologised for my Mum not being everything she should be; I begged her to take me back to Mummy, not back to the ladies in the home. She cried in the taxi with me, and they had to carry me out of the car. I never saw her again either.\"\n\nShe told of long nights crying for her lost family and numerous people coming to see her, and for some reason she was constantly passed over for fostering or adoption. After seven months she found a new family, and not via Social Services.\n\n\"Eventually I was fostered by the Williams family, it was strange. I can remember sitting on my Dad's lap for the first time, Mum was so loving to me, but...\" She wiped her face again and stared at the ceiling, \"That fucking Will! It was the words,\" she burst out, \"They said that I wasn't their child and I was basically a house guest, they didn't love me Rob, I was a task, a challenge... a fucking burden!\"\n\nShe told him about meeting Pete at school and his parent's only finding out she was in care when the carer said she couldn't come round on a play date because it would clash with her sitting for tea. His Mum said she would arrange tea for her, and asked about 'sittings'. It was announced that she lived in the local children's home as they were having trouble getting her fostered because of her age.\n\nMum had offered to foster the jolly bright little blonde five year old there and then, two years later she was formally adopted and part of their family. Or so she'd thought.\n\nThey read the will; and it all came crashing down again. Somehow it was never real; she had been a mercy mission, something that the religious parents felt they 'should do' out of duty rather than love. She'd not known any different, and had loved them all. Right up to the time when the will was read and it was all but announced to her relatives, a room full of people she'd known as a close loving family that she was part of the furniture and had the same position in the household as a family pet that without the loving owners was now a problem and needed to be disposed of. It was like being dumped by her birth mother again.\n\n\"I wasn't angry because I didn't get anything,\" she told Rob, casually swiping a tear from her lovely face, \"it was the sudden realisation, such coldness; the 'we raised you, so that should be enough; we loved our real children' about it.\"\n\nShe added venom to the word, \"it wasn't until I came to your house that I realised that I'd been cheated. Not out of money or 'things' but they stole my happy childhood from me, I went from being the baby of the family to being one down from the fucking Labrador,\" she chuckled. \"Naomi, too much trouble, and dumped again.\n\nJust before I moved here I asked the Salvation Army to look into my history and find out who my real parents are, it didn't end well...\"\n\nHer heart was beating in her chest, the lady from the Salvation Army had arranged everything. She'd assumed that her birth mother must still be alive, she would only be in her sixties after all. The meeting was to be in the Tea Rooms at a large country house, not far from where her mother lived now. Naomi had borrowed a friend's car to get her there, and had put on her little black dress and a floral scarf.\n\nShe had arrived early and had sat in the shade at the front of the tea rooms with a pot of Earl Grey tea. She couldn't settle at home so had left to get there early and was now so nervous that she never noticed when the older woman and another woman younger than her walked past. It was the smell of perfume, light, flowery and utterly unmistakable. Her hands started to shake, and she turned in her chair looking into the tea rooms to the central table she was going to head for in a few minutes.\n\nThe smell of that perfume, the look of the other lady she hadn't seen since she'd walked out of that children's home over 25 years before. \n\nShe had aged well, some lines at the edge of her mouth and her eyes, hair tinted without removing all of the grey. Her mother looked more like her grandmother had that day in Harrods, except she had none of the remorse that the older lady had carried that warm, sad afternoon. This lady had a hunted guilty look about her, at least that was what Naomi saw.\n\nThe younger woman spoke with a passing waitress and headed off the restrooms before their 2.30 appointment arrived.\n\nNaomi drank the last of her tea, and picked up her black bag, holding it in front of her as if in defence. She moved through the large double doors and stopped level with her mother. Her perfume, that smell, she could hear the blood rushing in her veins.\n\nNaomi was glad the other younger woman wasn't there, this would just be her and her Mother.\n\n\"Excuse me,\" said Naomi with a bright but nervous smile. \n\nThe lady looked angrily across at Naomi's waist, not raising her head to make eye contact.\n\n\"My daughter has just told your colleague!\" snapped the older woman, \"we don't want anything thank you, we're just here to meet... someone, IF she bothers to turn up! We won't be staying long, oh no!\" She spat out venomously, \"don't you worry about that!\"\n\nNaomi thought she would faint; she didn't know what she'd expected from this reconciliation but it certainly wasn't that; the Salvation Army lady had told her to be prepared for a cold welcome. Parents that give their children up often have guilty feelings and do occasionally react badly to their long lost families.\n\nAnd her mother had another child after her! Her heart sank, the mental visions of her mother she had created in the last few months slowly disintegrating; a sad old lady broken at the loss of her beloved daughter. She obviously didn't expect Naomi to even turn up, and wasn't planning on staying long to talk to her.\n\n\"Don't you have other people to serve young lady,\" she growled angrily at Naomi's silence, \"or are you intent on poking your damned nose into other people's miseries and misfortu...\" said her mother her voice failing as she looked up into the pale features of a face made familiar because it looked so much like her daughter, now returned from the restroom and staring equally pale faced - at her half-sister. \n\nFor Naomi it was like looking in the mirror, some facial features, hair colour, body shape, even dress sense. \n\nHer sister came to her senses first realising from Naomi's shocked expression and the last part of the conversation that some inappropriate words has been said.\n\n\"Naomi?\" said the other woman with a slight tremble in her voice. She was so much like Naomi in voice it was amazing. She came to her senses, \"Mother!\" she hissed \"what have you bloody said now?!\" The busy tea room went silent and her mother looked then turned away from her, a hand across her mouth.\n\nThe silence in the room was tangible.\n\n\"I... I'm sorry,\" said Naomi hurt by the abrupt closure of their discussion and the loss of eye contact, \"I...\" she made to reach out to the woman and tried to smile at the woman's back, which moved closer to the table shrugging her shoulder from the coming touch. \n\nNaomi chose not to reach out and with a suppressed sob put a hand to her tear-wet face and turned on her heels and left. She could hear the conversation carrying on behind her and the moving of furniture.\n\n\"Well it's not my fault she's dressed like a damned waitress is it?\" said a pained voice, \"Oh just let her go Roselind!\"\n\n\"Oh Mother!\" she growled, \"I just cannot bloody believe you sometimes!\" and Naomi could hear the sound of feet crunching on the gravel path behind her, \"Two minutes,\" she snarled trying to move tables and chairs in her way, \"I can't leave you alone for two bloody minutes!\"\n\nNaomi had slipped into one of the greenhouses, upset, hurt, embarrassed beyond belief, where she waited hidden among vines for half an hour, hearing a desperate then more distant voice, \"Naomi! Naomi!\" it called. It wasn't her mother's voice however.\n\n\"My half-sister's name is Rosie, she emailed me to apologise about that day and we've emailed each other since through the Salvation Army - completely against our Mother's direct instructions of course and the 'Sally Ann' censor our messages and won't put us in touch until Mother agrees to it.\n\nIt seems my Mum met someone a year after giving me up, a Don at some Oxford College, and Rosalind and her sister Celia came along a year and two years after that. Mum hadn't told her husband or my two half-sisters about me and my grandparents were sworn to secrecy. That lovely lady that took me shopping for a dress and bought me ice cream only died two years ago apparently.\" Naomi sniffed, \"She was so nice...\"\n\n\"It only came out one morning when the husband opened the letter from the Salvation Army that he'd found dumped in with the recycling. My Mum insisted she'd not read it and binned it because thought it was a charity request letter, while he opened to see what it was; of course he confronted my Mum about it. She was thrown into the deep end about me of course and was really on the spot. \n\nMy Mum now refuses to talk to anyone about me, hardly leaves her room apparently but has written me a letter that explains it all, apparently. It's in my dressing table drawer,\" She looked across the room at the offending piece of furniture, \"I've not had the balls to open it if I'm honest; but then I moved here and I don't think I wanted to open it...\" Naomi stood up and walked across the room to the dresser, stopped, then walked back, \"Like I said Rob, fucked up.\"\n\nHe stood and took her in his arms and held her.\n\n\"Why didn't you tell me all this Darling,\" he whispered in her ear, \"it's all so clear to me now.\"\n\n\"I didn't want to come across as another troubled child you had to take on, I loved being with you, I loved finally being the grown-up, the problem solver, not the problem.\"\n\n\"You're a thousand times more important than that Nomes,\" he took her chin in his hand and tilted her face up to meet his. \"You aren't a problem child, and I love being with you. I love you as a man loves a woman, not a child. I want you to...\" he stopped, \"I can't imagine not having you in my life.\"\n\n\"What?\"\n\n\"I'm crazy in love with you Naomi, have been since I first saw you. The fact that the kids love you too is just perfect for me.\" Her face erupted in smiles, \"that's the Naomi I fell in love with,\" he said.\n\n\"You, and Carolyn and Mattie, Lizzie, Carla, Paul, I came to your house and I got another happy family.\"\n\n\"It's not our house,\" said Rob, wiping a tear from her cheek.\n\n\"Well Tom's house,\" she said.\n\n\"No, you're not listening, it's your house as well now.\"\n\n\"What?\"\n\n\"You're part of this family now whether you like it or not, so it's our house, our family; not mine.\"\n\n\"But...\"\n\n\"No buts,\" he said, \"whether you decide to stay with me or not, it's still 'our boys', 'our girls', he paused and kissed her, \"It's your home now, and it always will be.\"\n\nShe laughed, and wiped her face.\n\n\"Thank you Rob, I think I was just convinced that it would all be taken away from me again.\" Naomi closed her eyes and smiled.\n\n\"What?\"\n\n\"Twice before Rob, not had a lot of luck with families wanting me around,\"\n\n\"Third time lucky,\" he said, \"No way am I ever letting you out of my life, ever. You're mine Naomi, get used to it.\" She beamed a smile at him and kissed him, \"You've been mine since that first night when we went out to dinner, when we made love...\" \n\nTheir kissing became more passionate, and eventually Naomi had to stop for breath.\n\n\"Do you know when I first knew?\" she asked, comforted by his holding her. He shook his head. \"I used to sit on my stairs with a cup of tea and listen to you and Matt in the bathroom,\" she said almost laughing, \"it was so special, I wanted to come in, join in the fun, be part of everything. That's why I came in so quickly when the hoist broke, I was outside the door.\"\n\n\"Well you are part of everything,\" he said. \"The whole family loves you, and it's not because you were waif or a stray or adopted; it's because you love them. Easy as that.\" He stopped talking suddenly, Naomi looked at him concerned, until he knelt before her. She took a deep breath.\n\n\"Darling Naomi, will you marry me?\"\n\n\"Yes,\" she mouthed to him, unable to get the words out. He stood up and they hugged, then broke to stare into each-others face, before kissing long and hard.\n\n\"And err...\" he smiled when they broke for air, \"the baby?\"\n\n\"Our baby,\" she grinned, \"here,\" she reached into her bedside table drawer and handed him the scan pictures. His face lit up and she knew that any fears she may have had about his love for her and her pregnancy were groundless.\n\n\"Oh Nomes, I'm so happy,\" he pulled her to him and lifted her and swung her around, she squealed with joy.\n\n\"Me too.\" She said, \"Can I tell the kids?\"\n\n\"Course,\" he said, \"they've been your kids since you arrived.\"\n\n\"Come on then,\" she said and they headed down her stairs, holding hands.\n\nIn that huge kitchen she leaned against the worktop and turned to face everyone, still in 'going shopping' mode. The tension in the house had been tangible for the last few days and it was obvious that everyone had been picking up on it. Carla was sat watching TV and stared across her folded arms at her former hero. Lizzie had been sat next to her and had obviously been trying to cheer her up or calm her down. \n\nCarolyn looked cool but couldn't hide her concern but was chatting to Matt, and Paul was pacing, head down and talking to himself nodding as if to confirm something, a sure sign that all was not well with him. \n\nAll of them at one stage had known tension in their lives, but never in this house. This was the one place that it shouldn't be, this was the house that was safe above all others and Naomi realised with a huge lump in her throat that she'd been responsible for it.\n\nShe had to turn it around and quick,\n\n\"Gang,\" she said, \"I have a favour to ask,\" she said looking around at all of them her face flushed. \"We, that's your Dad and I, well, we'd like to get married... if that's OK with all of you?\"\n\nThe kitchen erupted, with Carolyn and Lizzie trying to hug her, and get around little Carla who had leapt from the sofa almost into her arms, all sins forgiven while Mattie beamed one of his hugest smiles across to her as Rob put an arm around him.\n\n\"Is it OK Paul,\" said Naomi explaining the change very matter of factly, \"The only difference is I'll sleep in Daddy's room. AND it also means that we all stay living as a family and I won't have to go and start another one.\"\n\nHe'd stopped pacing, and put his fingers in his ears at the sudden noise. Naomi's loud voice in speaking to him reminded the rest of the family that this kind of thing wasn't a good state of affairs for their youngest brother.\n\n\"You're staying,\" he said in confirmation.\n\n\"Yes honey,\" she said back to him.\n\nHe smiled back for way longer than he ever did. For Paul this was akin to running around the room shouting 'YEEEES' at the top of his voice. \n\nCarolyn looked at Lizzie and her Dad and did the tiniest air-punch mouthing, 'Yes!' to the room. She looked at Lizzie and nodded.\n\n\"You are, aren't you...\" said Carolyn, \"Lizzie and I have said you were for weeks.\"\n\nNaomi grinned and nodded and put a hand to her belly, and the screaming started again, stopped while Paul put his fingers in his ears again. When Rob produced the scan pictures from his shirt pocket a far quieter 'awwwww' was voiced and Carolyn and Lizzie gave up Naomi for their Dad and the picture that spoke of the next chapter in their family lives.\n\nNaomi hugged Carla and gently rocked her from side to side. She calmed her down, buzzing with the shared excitement of the moment, they touched foreheads and kissed, something made Naomi close her eyes and hug her tighter,\n\n\"Will you help me look after your baby brother or sister?\" she whispered. Carla nodded hugging her around the neck again.\n\nThey all went shopping, and were a wonderfully happy bunch. Finally she was able to show the world that her and Rob were in love, and she enjoyed holding his hand as they walked around the superstore.\n\nThe happy feeling lasted for the rest of the day and dinner was pizza again and everyone helped that night. They sat in the living room, strewn across sofas and chairs, TV on but not watched, just happy people chatting about life and the future and weddings.\n\nCarolyn was looking at Naomi with a gentle grin,\n\n\"You're designing my wedding dress in your head aren't you?\" said Naomi looking at her soon to be daughter.\n\n\"No,\" said Carolyn dismissively, \"designed that weeks ago, I might let you look at it before the big day, I have allowed for your pregnancy so long as the pair of you don't wait too long.\"\n\n\"You really guessed weeks ago?\" said Rob, surprised.\n\n\"Yeah,\" said Carolyn nodding across at Lizzie, \"it's a girl thing Dad,\" she waved a hand.\n\n\"Can I...\" started Naomi, only to be cut short by Carolyn, making a lip-zipping movement across her mouth.\n\nNaomi giggled, and wriggled into Rob's arm that was around her.\n\n\"Sorry Nomes,\" said Carolyn, \"until you've married my Dad you're still a 'work in progress'. Have I let you down so far?\"\n\n\"No Darling, far from it.\"\n\n\"Can't argue with that,\" said Rob.\n\n\"What about my dress Carolyn,\" beamed a bouncing Carla who had barely sat down all evening.\n\nCarolyn grinned at her little sister, and pulled her onto her lap and squeezed her,\n\n\"Your dress will be prettiest of the lot my sweet baby sister!\" Carolyn hugged Carla and kissed her cheek loudly and she giggled.\n\nThere was no question as to who was putting an exhausted Carla to bed that night, it was of course Naomi and Carla asked her what kind of ring she was going to have.",
        "\"That's up to Daddy Darling,\" she saw Carla struggling with a thought and spoke, \"Carla baby girl...\"\n\n\"Yes?\" She was lying back with her head on the pillows, her face surrounded by her dark locks. Naomi stroked them back from her face and stroked her hair.\n\n\"Would you like to call me Mummy? You don't have to, it's just no one ever has before and I... well... I thought it might be quite nice...\"\n\nCarla lost the look of confusion and grinned; Naomi had done it again.\n\n\"Yes please... Mummy,\" said Carla.\n\nWith Carla in bed, Naomi suddenly realised that tonight she could finally sleep with Rob and not have to get up at five in the morning to go back to her bed. She ambled across to his room and looked around at the scene she was going to get to know so well. It would be their room now. She walked up to her flat and retrieved her T-shirt Nightdress and trotted back down stairs, thinking about whether it would be sexy enough wear to bed and figured tonight she probably wouldn't wear anything; she grinned as she slowly came into the hallway. \n\nShe could finally make love, no condoms, no worry about pregnancy; they could make love and fall asleep being held by him just as she had always wanted to. She folded her nightie and lay it on the pillow next to his and his PJ shorts and T-shirt. That would do for the time being.\n\nShe thought about Rob's room and where she would put her clothes, seeing as she would be moving in to that room. Love, family, children, their baby, home; it all slotted into place and by the time she got to the bottom of the stairs her cheeks ached from the huge smile on her face.\n\nThat evening she sat with Rob conscious of the smiles she was getting from Carolyn and Lizzie. When Matt showed signs of tiredness both Rob an Naomi took him to bed and he wished them both a good night, and Naomi hugged him.\n\nThey slowly walked downstairs stopping to kiss halfway down. When they arrived still flushed from their embrace there was bound to be comments. \n\n\"Oh get a room you two,\" said Carolyn, giggling along with her sister.\n\n\"Thank you Carolyn,\" said Rob, reappearing with mugs of tea and the biscuit tin.\n\n\"You have to thank Carolyn for a lot of things Rob,\" said Naomi sitting in her now accustomed place on the sofa, \"she decided we were getting married back when we went to Suzi's wedding last autumn.\"\n\n\"Oh it was way before that even,\" said Carolyn grinning at Naomi. Rob and Naomi leaned forward, interested at what she had to say. \"Remember when Dave and Sue came over for that barbecue in the spring and Dave said that we had to find you a good woman and get you married off Dad. Sue told me that Dave had this really nice girl that had just started teaching at Priors that had chaperoned at the year eleven prom. She said you were gorgeous and just a tiny bit lonely, and she was going to find some way of getting you two together! Fortunately for us the summer ball came along, I whispered to Carla that Daddy should take No'mee to the ball and you all went with it. I emailed Sue and suddenly she and her husband were interested in going again after thinking of all sorts of reasons not to, mostly because they hated that bitch Jen Harvey. Barbara was in on the plot too of course.\" \n\nRob looked wide-eyed, \"well from that moment on, neither of you stood a chance, what with Sue's planning, my styling and fashion sense, it was only going to be a matter of time. Then Nanny met you and that was it, job done.\"\n\n\"Thank you Carolyn,\" she beamed back at her friend, \"just wait until I see Darnell next week,\" she chuckled.\n\n\"No need,\" said Lizzie, \"they'll both be here for your engagement party tomorrow.\"\n\n\"Engagement Party?\" both Rob and Naomi asked together.\n\n\"Yes,\" said Carolyn, \"We've had it planned for weeks, we've got everyone on 12 hours' notice, they weather forecast says it's going to be dry and warm tomorrow so we sent the Facebook invite our an hour ago. Nanny should be here early to help us set up.\" \n\n\"We'd better all get to bed then,\" said Rob with look all surprise. They all stood and Naomi kissed and hugged Lizzie, then put her arms around Carolyn,\n\n\"Thanks Darling,\" she said, \"Thanks for everything.\"\n\n\"You're welcome Nomes,\" said Carolyn with a tiny choke in her normally cool exterior, \"you're the best and so is my Daddy; you both deserve each other.\"\n\nRob kissed both his daughters goodnight and taking Naomi's hand they went to bed - together. \n\nThat night their lovemaking was wonderful and he brought her to orgasm several times and she had to keep her noise to a minimum! She cried when she felt his heat splash into her, and thought about the dozens of times they'd done this and she hadn't been able to enjoy it this fully.\n\nShe woke naked and in his arms at five; OK, she hadn't switched off her alarm on her phone. They came together again and smooched, him spooning her back to sleep again. They had just started to think about making love at 8.30 when there was a knock on the door and Carolyn, Lizzie and Carla all brought Mum and Dad breakfast in bed. Naomi had just enough time to slip on her nightie before Mattie was brought in his chair by Lizzie. Breakfast in bed was a concept that Paul was happy not to have to consider.\n\nThe caterers arrived an hour later, closely followed by Mum.\n\n\"Darlings!\" she squealed seeing her son and soon to be daughter in law bringing chairs from the garage and putting up a large gazebo.\n\nNaomi ran to her,\n\n\"Mum,\" she said, hugging her, and quietly half chuckling and half weeping into her shoulder.\n\n\"Thank you Darling,\" said Mum hugging her and patting her back, a crack in her voice, \"thank you so much Naomi!\" They separated both grinning, \"What's the other news Carolyn says you have for me?\"\n\nNaomi grinned, and with her arm around Mum's waist put her other hand to her as yet flat belly.\n\n\"Due September,\" Naomi whispered.\n\n\"Darling girl!\" she squealed, grabbing Naomi again and Rob came over to investigate what the noise was.\n\nBy this stage Carla had arrived, leaping up to tell Nanny the good news that Mo'mee was her Mummy now, and she was going to have a baby brother or sister to help look after.\n\nCarolyn and Lizzie were next rolling out a pre-prepared banner \"Congratulations Rob and Naomi.\"\n\nBy twelve o'clock everything was ready and tables were spread with covered over food, a barbecue was heating up and Naomi and Rob banished while the guests arrived.\n\nNaomi and Rob came out of the conservatory to see Dave Darnell and his lovely wife Sue laughing with Carolyn, Pete and Julie and the kids, Suzi and her husband and lots of friends and colleagues. \n\nPete and Julie were delighted when Naomi announced that he was going to be giving her away, and that they were looking at options on bridesmaids and pageboys. Their children beamed, neither of them had done such a thing before.\n\nNext it was the turn of the Darnells, and there were hugs and handshakes as necessary. Sue and Carolyn were joined by Mum and Barbara and they admitted their plans to get the lovebirds together. Even Suzi had arranged a spare seat at her wedding weeks before just in case, once Carolyn had shared the secret.\n\nIt was the best party she'd been to and felt the love would keep her warm for ever.\n\nNaomi had three bridesmaids, Lizzie, Carla and Pete's daughter Bella, all in matching cream dresses and one page boy, Pete's son Simon in a very smart suit. She would also have a very special maid of honour, carrying her usual wedding dress repair kit.\n\nMiss Williams became Mrs Stanley over the Easter Holidays six weeks later just as Carolyn had predicted and to some extent planned. Naomi married Rob wearing a pale ivory lace and silk gown her daughter made for her that looked romantic, stylish and sexy all at the same time with a veil that Pete raised once he'd walked her down the aisle. He pecked her on the cheek,\n\n\"Congratulations Lil' Sis,\" he whispered and turned to Rob and smiled. \n\nFortunately for the groom, the next bit was scripted and his tongue didn't trip when he took his first look at his bride. Stood to one side was Carolyn looking across at the only man she'd ever called Daddy lost for words as the veil came up, and she couldn't hide her look of pride and triumph in her work.\n\nHer friend and soon to be Mum Naomi was dressed in the simplest of wedding gowns carefully cut so those in the know could tell that the bride was in her fourth month of pregnancy. The make-up she had selected and the hairstyle, headdress and veil all complimented the natural bloom of a healthy pregnant woman and even Carolyn glowed and shed a tear, getting a hug from someone she'd started calling Uncle Pete just a few days before.\n\nThe vicar looked at the happy couple, smiled and commenced the service telling the congregation that they had all come together in the presence of God to witness the marriage of Robin and Naomi; as usual there was the short holding of breath while he asked if there was anyone there present who knew a reason why they should not be married. Bride and Groom smiled at each other and soon they were declared Husband and Wife and walking down aisle to the joy of everyone there.\n\nFor the first time ever the maid of honour had brought something else with her, a rather nice post-graduate student called Mark who she'd known from Uni and who she'd been on a few dates with. \n\nRob's best man was wearing a suit the same as his Dad, and was carrying the ring in his inside jacket pocket with the speech he'd been learning with Chrissie and Nanny to support him. No one minded that he didn't stand up from his wheelchair to hand over the ring. Paul was with his Nanny just behind Matt, to make sure he was OK of course. \n\nNaomi's older brother John and sister Ruth and their immediate families were invited out of spite by Carolyn and Julie. Carolyn had heard about Nomes' obnoxious brother and sister during one of their wine and fashion evenings and although she'd never met them, she already hated them. Seeing as they had both loudly proclaimed that Naomi was just a 'friend that lived with them for a time', they were third or fourth row back on the bride's side behind Naomi's college and work friends and then seated way back in the function room that held the very grand reception with all of the other 'friends'.\n\nAs the photos were taken it was with great delight that she heard about them and their partners bitching quietly that they should have been closer to the front and it should have been John that gave Naomi away and just as they started to throw nasty looks towards the glamorous wedding party they were joined by a rather batty old dear called 'Jean' who'd been stood with the weird looking dark haired boy in glasses.\n\nShe told the Williams' group in hushed tones that she was so pleased the lovely young boy Pete was giving the bride away;\n\n\"Because her other brother and sister were so unchristian they chucked the poor kid out of the only home she'd ever known days after her mum died and virtually abandoned her own devices without so much as a ha'peny to her name - disgraceful! Can you believe it? They hadn't even had the funeral!\" The mad old lady tutted loudly and the Williams' considered moving away, but she wouldn't let them, laying a conspiratorial hand on Ruth's, \"That was just downright evil!\" She snarled. \"Ooooh, it's a good job Naomi didn't invite them heartless bastards because I'd give them so called Christians a real piece of my mind and remind them what the Bible has to say about looking after your family!\" She folded her arms in parenthesis\n\nThe Williams' all kept quiet, except for Pete's wife Julie holding hands of the two smallest bridesmaids and giggling to herself some feet away, silently promising to buy Nanny Jean the largest gin and tonic the bar would sell her.\n\nThe reason they weren't at the front of the not overly populated 'Brides side' of the church was that some other relatives of Naomi were there.\n\nShe had desperately wanted to invite her half-sister Rosie, but still the Salvation Army respected Mum's orders, censored their emails and wouldn't put them in touch. \n\n\"I don't even know her surname Rob,\" said Naomi. In an effort to find out more she had finally opened the letter from her mother.\n\nThe letter smelt of Mum's perfume but that was almost all of the comfort she could draw from the thing.\n\n\"Naomi,\" Not \"My Darling Naomi\", \"My Daughter Naomi\" or even \"My Dear Naomi,\"\n\n\"This is the hardest letter I've ever had to write and I hope you never find yourself in my situation.\" She wants sympathy? \"Your father and I were once in love and you were the best thing to come out of it. Sadly, your father left us for his wife and his other family, after promising me that we were his future. \n\nI found myself hating him and eventually you. It is to my shame that I reached a point where I began to blame you for what were my and his choices. One evening when you asked for the tenth time when Daddy was coming to see us I was on the verge of hitting you for it. That I could never allow.\n\nSo, coward that I am, I took the decision that you would be better off with a new family, one that wouldn't forever hold grudges about how you had changed their life and despite your Grandmothers pleadings I handed you over to the Social Services because of my mental state and the stress that you and your father had caused me.\" \n\nNaomi wanted to spit and was half minded to throw this delusional self-pitying crap on the fire, \n\n\"So I looked into several charities and found a home that eventually took you on. I hoped that your new life would start and you'd soon move on from my unhappy situation.\n\nI confess that I still find myself angry that you are back in my life, but I realise that's my fault not yours, I hope someday I can find enough peace to allow you back into my life.\n\nD Carter-Howell (Mrs).\"\n\nRob put the letter down,\n\n\"Glad I never bothered to read the thing before,\" said Naomi looking somewhere between sad and angry.\n\nThe Salvation Army were still insistent that no contact could be made with her sisters until Mum agreed.\n\nRob has said that there must be some way they could find the girl and happened to discuss it over breakfast while Paul was sat there. Paul picked up his tablet computer.\n\n\"Did you say Rosalind and Celia?\" said Paul.\n\n\"Yes,\" said Naomi.\n\n\"And they come from the Oxford area?\"\n\n\"I think so,\" said Naomi, \"my previous surname was Carmichael, not sure if that was Mum or my Dad.\"\n\nNaomi packed more lunchboxes and forgot what Paul was doing, until he raised his head and asked, \"Is this Rosalind?\" and holding up the tablet.\n\nNaomi looked at a Facebook page.\n\n\"Yes,\" she said, \"How...\"\n\n\"Search engines; Rosalind and Celia don't have the correct security protocols on their Facebook pages Mummy.\" he said happy with that particular change in his life. Naomi knelt next to him and gently put her arms around him and looked again.\n\n\"You're my clever, wonderful Paulie,\" she whispered and pecked a tiny kiss on his cheek, and he smiled. Still a rare thing in itself.\n\nAnd so her half-sisters Rosie and Celia became 'Facebook friends', messaged and came to her wedding and they were really close friends now, 'Mum' never knowing.\n\nIn the second week in August the Stanley family was delivered of its sixth child, a boy named Peter Thomas for his soon to be favourite uncle and Matt's Dad. \n\nBecause Naomi was, in the terminology of the maternity ward, a geriatric mother and Peter was almost three weeks early, they were kept in under observation for a few days while she recovered and he put on weight.\n\nBecause she'd had the good sense to give birth during the school holiday, that evening the entire family came in to visit including Matt in his wheelchair; at Naomi's mention that the entire family was coming in she was moved into a side room, and she was very pleased about it.\n\nThe whole family didn't do any of that step-brother/step-sister thing, so Matt was first to have his new baby brother placed onto his lap and into his arms. \n\nHis face erupted in smiles, and Naomi was just too far to reach for his hand, he looked at her and smiled, and fat tears ran down her face. Carolyn was stood behind Mattie's chair and was looking down at her latest sibling with real pride on her face.\n\nSince Naomi and Rob had married and moved into the same room, the flat was finally given up as her room, so she could finish her degree in some kind of peace. Naomi's wages had added to the family income so even though Rob had always been reasonably well off, they could all now live very comfortably without the \u00a3400 per month the flat could bring in.\n\nNext, Carolyn held her new brother and rocked him gently murmuring sweetly and ducking down level to where Lizzie was sat, and handed him over, still watching his sleepy face.\n\nLizzie couldn't stop smiling; she'd admitted one day to Naomi that they'd never had a baby in the house and she was really looking forward to it. Carla, overjoyed to see her mummy after even the briefest separation had sat patiently in the chair beside the bed waiting for her turn to meet her new brother. She was finally not the baby of the house and at last her Daddy lowered her new brother in her arms.\n\nShe hugged him to her and beamed at Naomi,\n\n\"Thank you for my new brother Mummy,\" she said. \n\nNaomi leaned across and kissed her, and with her eyes closed remembered her own childhood and foster parents. She opened her eyes, gave a slight shake and looked again at Carla, her daughter.\n\n\"You'll always be my baby girl,\" she whispered in her ear, \"always\".\n\nPaul polished his glasses with the end of the T-shirt and, seeing his look, Naomi asked him if he'd like to 'get used' to holding his new brother. Paul looked quizzically at the tiny person, and saw the sense in Naomi's suggestion; he'd have to do it sometime, best to start now.\n\nRob bent to his wife,\n\n\"Paul is so lucky to have you,\" he kissed her cheek looking across to their son holding their new son, \"Not half as lucky as I am though.\"\n\nHe kissed her on the lips.\n\nA nurse stopped and spoke,\n\n\"Doctor says you can go home this evening Mrs Stanley.\"\n\nHer bag was packed in moments and she walked downstairs and climbed into the new Torneo van that they'd bought prior to the baby's arrival. He was strapped into a baby seat next to Naomi in the front, and as she checked his temperature she looked back at the family, her family, and knew that life could not get any more perfect.\n\nIt could of course and did; two years later their daughter Claire was born, it was a nine seater after all...\n\nThe End."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/room-wanted-ch-03"
}