{
    "title": "Mo'tul of Clan Fire-Eagle",
    "pages": [
        "Author note: So in this world it's kind of a given that if you fuck an orc, there's like a 90% chance you'll get pregnant (if you can get pregnant), that chance does go down with contraceptives but like only to 60%. Why don't orcs rule the earth? IDK, I'm just here to write porn. Also, no, not all orcs have dicks...just the ones in this particular hunting group do.\n\n*\n\nMo'tul Ironbreaker was a singular orc of singular taste. At least that's what she liked to think. While her fellow green fleshed brothers and sisters prefered to empty their potent seed into the likes of elves and humans, Mo'tul prefered dwarves and halflings.\n\nThere was just something breathtaking and awe inspiring about watching her big orc cock plunge into the needy cunts of the women she had chosen to bed. It was beautiful watching them mewl and writhe as her cock reached deeper than any of the maggot sized dicks of their own kind. It gave her a sense of pride and accomplishment to know that they were ruined for dwarves and halflings ever again; these hungry women would have to seek out her brethren to feel like that once more.\n\n\"We will stop at this town for food, drinks, and beds\" her tribe-sister and hunt-leader Re'esh grunted in orcish. Mo'tul nodded, she'd be glad to wash the week's worth of blood, sweat, and dirt from her body; a desire that, again, set her apart from her brethren but it was far easier to entice a bedmate after one had bathed rather than reeking of death and dead things.\n\nThe local inn, The Graceful Goat, was of a decent size, Mo'tul had seen bigger in her travels, but she wasn't complaining. After a hard week of hunting and trapping, she would have been glad for even a cup of weak elf wine and a bed of hay. Here, they might even have something strong enough for an orc and a real bed, another weakness of hers.\n\nMany different races mingled inside of inn, all eating or drinking and sharing tales. All of which stopped as soon as the orc hunting party walked in. Re'esh walked to the human nervously cleaning mugs behind the bar, leaving Mo'tul and her other two tribe-sisters to take in their surroundings.\n\nThat's when Mo'tul saw her.\n\nA buxom halfling woman. Her red hair fell in long ringlets around her face, some sticking up and frazzled from what sure had been a long day's work. She carried a tray piled with food and went from table to table, giving the patrons what they had ordered. For the fools who dared get her way on her mission to feed the hungry masses, a quick elbow jab or shoulder shove were their reward, not once spilling a single bit of food or drink.\n\nMo'tul's cock twitched as the halfling woman slammed the tray down and began threatening a nearby human for pinching her ass. Not that Mo'tul could blame him from what she could see, it was large and beautifully fleshy. A wonderful cushion for fucking this tantalizing creature from behind.\n\nThe halfling turned to face the she-orcs at the door and an immediate look of anger and annoyance found its way to her face. Before Mo'tul knew it, the woman was marching over to her group, looking from orc to orc before finally settling on Mo'tul as she was at the front and center of the group.\n\n\"Do you speak common?\" The halfling bluntly asked, her voice was raspy and deep, just how Mo'tul liked.\n\n\"We do.\" Mo'tul replied, \"we are a hunting party. We do not come for war. Only trading. We wish to eat and sleep here.\" She added. The halfling gave the group a once over before nodding and pointing to a nearby, empty table.<br >\n\n\"That one is yours if any of you want food and have the coin to buy it.\" she said, \"As for beds, it looks like your companion is speaking with the innkeeper so it'll be up to him if you're staying here tonight.\" At this, the halfling lady looked over at the bar and towards the human male and she-orc chatting at the counter, \"though, Marcus is a good man and if your coin is good, I don't see why you wouldn't be able to stay.\"\n\nMo'tul nodded, observing the two at the counter. Her hunt-leader was excitedly talking to the man, probably telling him of their success on this hunt. He was enthusiastically responding, his eyes even flitting down to observe Re'esh's muscled and toned body. At this Mo'tul snorted in exasperation but she was proud that a human man was interested in Re'esh. If only she could get the same look from this halfling woman, her week, nay, her month would be made!\n\nShe grunted to her tribe-sisters and gestured towards the table. No sooner than they had sat down did the halfling woman return to their side, \"We have meat pies tonight so if you'd like to eat something else then tough. Drinks?\"\n\n'I'd like to eat you,' the thought came unbidden into Mo'tul's mind, a salacious smile coming to her face at the mental image of her head between the halfling woman's thighs. Her tribe-sisters looked to her and she nodded.\n\n\"Meat pies will be fine. Do you have good strong ale?\" Mo'tul asked. The woman nodded and looked towards Marcus who was still chatting with Re'esh. The woman rolled her eyes and turned back to the seated orcs, \"Will that be all?\" She asked, annoyance creeping its way into her voice.\n\nMo'tul saw this as her chance and took it, \"Your name?\" She asked, a confident smirk on her lips. The woman quirked an eyebrow and rolled her eyes at the rather obvious flirtation.\n\n\"My name is not on the menu.\" She said. Motul's tribe-sisters chuckled , perturbing the she-orc but she shrugged it off with another smile and a relaxed stretch,\n\n\"Too bad, I'm sure it would be the most beautiful item on the menu. And you never said no.\" Mo'tul said. To her credit, the halfling woman only nodded in agreement. She stared at Mo'tul for a moment before finally letting her cherry-red lips spread into a smile,\n\n\"Jarva.\" She said. Mo'tul returned the smile and bowed her head in respect,\n\n\"I'm Mo'tul Ironbreaker of clan Fire-Eagle.\" She grunted, puffing her chest out in pride. Jarva giggled and returned Mo'tul's earlier bow with one of her own.\n\n\"Well, Mo'tul Ironbreaker of clan Fire-Eagle, I will fetch your food and ale.\" She said. And with that, Jarva was off towards what Mo'tul assumed was the kitchen.\n\n\"Do you plan to bed the halfling?\" Mo'tul's tribe-sister, Urugresh, asked in orcish. Mo'tul smirked and nodded earning her rough and proud smacks on her back.\n\n\"May your children have hair as red as the Fire-Eagle!\" Her other tribe-sister, Tulon said while slamming her large fist on the table.\n\n\"Whose children will have red hair?\" Re'esh asked as she made her way over to the table. Tul'on and Urugresh began chuckling as Mo'tul's cheeks darkened. Joking about bedding someone with her tribe-sisters was one thing, but her hunt-leader could shut down any notion Mo'tul had about fucking Jarva.\n\n\"Mo'tul wishes to bed the serving wench.\" Tulon replied. Mo'tul shot the orc a glare but said nothing. She sat quietly but strongly, her eyes challenging Re'esh to forbid her from bedding Jarva, her hand went to her dagger. Re'esh's eyes followed this action and did the same to her own.\n\nA tray of food and drinks were slammed on the table, startling the she-orcs.\n\n\"There will be none of that!\" Jarva growled, wagging her finger angrily at both Re'esh and Mo'tul, \"I just cleaned these floors and I won't have you two making a mess of them again!\" Jarva begin placing plates of food and pitchers of ale on the table in front of the she-orcs. She shot them one final glare before turning away and going to take care of the other patrons.\n\nUrugresh let out a low chuckle as she began digging into her meat pie, breaking the spell Jarva had seemingly put on the group. Re'esh pulled her hand from her dagger and Mo'tul gratefully did the same. She didn't really want to fight Re'esh but she had to at least challenge her or be deemed weak by the others.\n\nSilence fell on the group, the only sounds were their chewing and slurping as they took in their food and drink. Once all the food and drink was gone a new sound began emanating from Urugresh, sot groans and moans. Mo'tul leaned back and looked into Urugresh's lap to see that Tulon's hand had fished out Urugresh's cock and was stroking it under the table, the soft green organ hardening with every stroke of Tulon's hand. Mo'tul watched as Urugresh reached and began massaging the crotch of Tulon's breeches, the fabric beginning to tent as her own cock hardened.\n\nMo'tul looked around the tavern, hoping that no one was looking at the she-orcs. She didn't really care about Tulon or Urugresh getting familiar with each other, but the other species, especially elves, were far more judgemental about public sexual relations and looked down upon the orcs for engaging in public acts.\n\nNo one was paying attention to them, though, Mo'tul knew that the two would soon retire to their room to actually fuck each other. Hopefully that would be sooner rather than later before they went even farther and someone saw them.\n\nAs if on cue, Jarva appeared, a pitcher of ale to refill their empty mugs. Re'esh met her eyes as Jarva saw Tulon and Urugresh groping at each other's crotches, their grunts of pleasure the only noises emanating from the group.\n\n\"You should take that up to your room. As I told your friends, I just cleaned this floor. And I will cut off your orc-cocks and feed them to you if you cum on my floor.\" Jarva growled as she poured ale into the empty mugs. Re'esh chuckled and placed a metal key on the table in front of the two she-orcs.\n\n\"Here is the key to your room. Go fuck each other there.\" Re'esh said. Urugresh put her cock away, smirking. Both she-orcs stood, not caring if anyone saw their tented breeches. Tulon took the key and the two left, each one threatening the other how hard they'll fuck tonight in orcish.\n\nRe'esh smirked and downed her own ale, \"I plan on fucking Marcus tonight, Mo'tul. He was was very obvious in how much he desired me. He has his own room so I will be staying there. Sleep in the room with Urugresh or Tulon or where ever you wish, even fucking the dwarf if you want.\" She said, standing up.\n\n\"May I breed her?\" Mo'tul asked, her cock twitching at the prospect of fucking that beautiful halfling specimen. Re'esh let out a hard bark of laughter and turned her gaze between Jarva and Mo'tul.\n\n\"You know, why not. If she lets you breed her then go ahead. Put your seed in her belly and let it grow. A child with fiery hair would bring honor to our clan and appease the Fire-Eagle.\" Re'esh replied. Mo'tul nodded and bid Re'esh a good night in the common tongue. The hunt-leader walked to the counter and began speaking to Marcus who immediately put down his glass and went to walk upstairs. Jarva followed this exchange intently, growling in annoyance as the two disappeared into what Mo'tul guessed was Marcus's private quarters.\n\n\"Does Marcus do that often?\" She asked, hoping to start a lengthy conversation with Jarva.\n\n\"No, generally he's a dedicated worker. This place is his pride and joy. He's impulsive, though.\" Jarva said, turning back to face Mo'tul, \"so now I'm stuck with taking care of the customers for the rest of the evening.\"\n\n\"I guess requesting a bath is out of the question then,\" Mo'tul replied, smirking so Jarva could see she was joking. Jarva shook her head and did a cursory glance around the room to see if anyone else needed refills or was trying to get her attention.\n\n\"Sadly, no. You do stink to the high heavens, though.\" Jarva replied, winking. Mo'tul laughed. It was true. She certainly agreed. A weird look began to spread across Jarva's face, Mo'tul wasn't exactly sure what it could be but then a large grin broke across Jarva's face.\n\n\"You could help me, though. You help me take care of the customers and I'll draw you a bath in my quarters. That sound fair?\" She asked. Mo'tul grabbed her mug and quickly drained the contents before slamming it back on the table,\n\n\"That seems fair. I definitely could use the bath.\" She replied, not to mention that an opportunity to be naked in the halfling woman's presence meant she might be able to bed Jarva.\n\nJarva began to quickly spout out what she wanted Mo'tul to do. None of it was particularly hard or technical, for which Mo'tul was grateful. She didn't know the intricacies of what went into baking a meat pie but she could certainly give patrons more ale, clean tables, and clean some of the dishes when she could.\n\nIt was definitely not the work she was used to being an orc huntress but she enjoyed it nonetheless. Especially because she got to unabashedly flirt with Jarva every chance she got. The halfling was fairly receptive to the she-orc's innuendos and double entendres. Though, Mo'tul also guessed it could have been that Jarva was used to it working in this establishment. And that mean that she often had to deal with flirtatious customers.\n\nIt made Mo'tul's head hurt, to be honest. She might have been \"more civilized\" than her other tribe-sisters but that didn't mean that she knew everything that went behind courting one of the other species. It was certainly a headache. But what she did know was that attempting to breed with someone wasn't exactly courting.\n\nThe evening passed by quickly and all the customers were easily taken care of and no one was left in the tavern. Mo'tul helped Jarva finish washing the final dishes before they locked the front doors.\n\n\"All right, Mo'tul Ironbreaker,\" Jarva said, smirking, \"I am a woman of my word. Please follow me. Come on now.\" And she began walking up the stairs to her private quarters. Mo'tul's cock jumped at the word \"come\", almost certain that Jarva had put extra emphasis on it.\n\nJarva's quarters were modest but still filled with personal touches that the halfling woman had added herself. The walls must have been thick or somehow dampened with magic as Mo'tul could just barely hear the groans and moans of her fellow orcs and that's if she listened very very hard.\n\nJarva began fiddling with the wooden tub in the corner before water began flowing out of the faucet and into the tub, somehow already steaming hot. Mo'tul was surprised and looked to Jarva for an explanation.\n\n\"Magic.\" Jarva replied with a shrug. Mo'tul accepted the explanation and stuck her hand in the water ensuring it was a good temperature. It was. Mo'tul waited for the tub to fill and didn't even notice that Jarva had poured them both mugs of mulled wine. They both drank deeply, maybe a little too deeply, and Mo'tul had to stop herself from licking the droplets from Jarva's neck as the halfling chugged her wine.\n\nJarva wiped her mouth with the back of her hand and smacked her lips. She was an extremely attractive woman, Mo'tul couldn't help but think. Jarva took the time to get out some of her personal soaps and oils for Mo'tul to use and then gestured to the bath.\n\n\"It's getting full enough, I think. Don't want the water spilling out when you get in it.\" She said, sitting in a nearby chair. Mo'tul assumed that the halfling woman would turn around and hide her eyes when the she-orc began undressing. She assumed wrong. Mo'tul paused wondering if she should continue but the twinkle in Jarva's eyes said to continue. So she did. Mo'tul stripped off her various hunting trophies and talismans she had accumulated over the years and then her filthy tunic.\n\nJarva's eyes quickly devoured her hard abs and bound breasts. Her cock began to tent her breeches, Mo'tul was definitely enjoying this attention. She removed her breast bindings and let them bounce free, enjoying the freeing sensation as her nipples hardened at the contact of cooler air. Jarva licked her lips and sucked down more wine and Mo'tul smirked. With little pretense or show, she quickly kicked off her boots and socks and then in one fell swoop, pulled down her breeches and underclothes, letting her half-hard cock spring free. Jarva let out a small noise from the confines of her throat and coughed trying to cover it, Mo'tul was not so easily fooled.\n\nShe climbed into the hot water and enjoyed the soaking for a few moments. But that's not why she was here, not really. Jarva walked over and peered into the tub and at Mo'tul,\n\n\"How is the water, Mo'tul?\" Jarva asked, her voice even huskier than it was before.\n\n\"Excellent. I can feel all my stress and worry melting away.\" She admitted. Jarva hummed in agreement and grabbed some of her soap. Mo'tul quirked an eyebrow at the action but leaned forward and began groaning as Jarva lathered up her naked back and scrubbed the lather with her hands.\n\n\"My my, Jarva, this tub isn't the only magical thing here. Your hands are divine.\" Mo'tul said as the halfling woman massaged the lather, probably a little more than was necessary Mo'tul figured. But it was sexy. Jarva chuckled and began rinsing off the she-orc's back, cupping water in her hands and letting it fall over Mo'tul's back.\n\nJarva pulled her hands away and Mo'tul sat back again, wondering what would come next. Jarva once more lathered her hands with soap and began to scrub at Mo'tul's impressive biceps and then her chest, taking much care to avoid touching her nipples. Mo'tul gave her a questioning look but Jarva just smirked. Oh, so it was like that.\n\n\"You washing me would be far easier if you joined me.\" Mo'tul growled as Jarva massaged her.\n\n\"Hmm. True. But then we might get water all over my floor. And that won't do.\" She teased, winking at Mo'tul. Jarva rinsed off Mo'tul's chest and then a frown came across her face.\n\n\"Is everything alright, Jarva?\" Mo'tul asked, concerned she had somehow done something wrong.\n\n\"No. I just realized I'd have to reach down inside the tub to continue washing you. Which means I'd get my clothes soaking wet. Not exactly how I planned this seduction.\" Jarva replied, her brow knit in concentration. Mo'tul let out a loud bark of laughter and grabbed the soap from Jarva's hands, lathering her own hands with it.\n\n\"No need to worry, I can wash my dick fine by myself. I'll be out of here quicker than you can blink and then the real fun can begin.\" Mo'tul replied, scrubbing the rest of her body at lightning speed. Jarva frowned but nodded and dried her hands off on a nearby towel before sitting on the bed and waiting for Mo'tul to finish.\n\nShe did, quickly, and began draining the soapy water from the tub with a quick tug of the stopper. The she-orc stepped out and onto the rug in front of the tub and began toweling off. When Mo'tul decided she was dry enough, she threw the towel to the side and began to slowly run her hands across her dark green flesh, feeling herself hardening at the self-ministrations.\n\nJarva licked her lips as she stared at the she-orc's muscular body and hardening cock.\n\n\"You're wearing far too many clothes, little one.\" Mo'tul said, taking her cock in hand and giving a few tugs towards her quarry. Jarva's pretty mouth split into a grin as she quickly divested herself of her dress and underclothes. There was no pretense here, not for tonight.\n\n\"Against the pillows.\" Mo'tul ordered, stroking herself to her full hardness. Jarva licked her lips in anticipation while Mo'tul drank in the sight of the beautiful halfling woman. She was soft in all the right places, her breasts delightful handfuls capped with dusky areola and hardened nipples. She was beginning to flush, a red hue making its way across her face and chest. Jarva ducked her head slightly, shyly smiling as Mo'tul hungrily devoured her.\n\n\"What do you plan on doing now that you have me where you want me?\" Jarva asked, her thick thighs rubbing together. Mo'tul smirked, licking her lips as the mental image from earlier once again made itself known.\n\n\"I have an idea.\" She said, climbing onto the bed and crawling towards her prey, \"but that will come in a bit. Right now, I want to enjoy you.\" Jarva blushed even deeper and Mo'tul held back a groan at how fucking perfect she looked. Mo'tul positioned herself over Jarva, easily holding herself up with her powerful muscles. They locked eyes for just a moment before Mo'tul dipped her head down to gently capture Jarva's perfect lips with her own. Mo'tul moved gently and slowly, letting the halfling get used to kissing an orc...even one with tusks as small as Mo'tul's own. She let Jarva dictate the kiss, kissing her deeper when Jarva nipped at her lips and silently asking for entry. Mo'tul granted it, letting their tongues dance as they kissed deeply and passionately.",
        "Mo'tul began to gently palm Jarva's breasts, lightly holding the heft in her hand as she moved her mouth downward, kissing her way down Jarva's neck and chest. She began to lightly rub and pinch one of Jarva's perfect nipples and lightly kissed the other, earning her a moan of appreciation. Mo'tul looked up, her eyes meeting Jarva's, smiling before going to take the nipple into her mouth and lightly suck while pinching the other between her thumb and forefinger. Jarva arched her back, crying out quietly. Mo'tul switched her arms, holding her weight with the other now, and began to pinch the nipple she had previously sucked before taking the other into her mouth and doing the same. Jarva squirmed beneath her as Mo'tul switched back and forth between each breast, never spending too long on either one.\n\n\"Mo'tul, please.\" She begged. Mo'tul smirked and began to kiss her way lower to her true destination. Jarva still held her thighs together tightly but Mo'tul gently pried them open and was rewarded with a most beautiful sight to behold. Jarva's glistening pussy lay spread out before Mo'tul and it took all her willpower not to just plunge her cock into the halfling's cunt right then and there. With one final look at Jarva's eyes and a nod of consent, Mo'tul licked a long stripe from Jarva's cunt to her clit, earning Mo'tul another moan. She hummed with delight and licked a few more long stripes, enjoying each little sound Jarva made as Mo'tul slowly made her way up to Jarva's clit.\n\nMo'tul took the little button into her mouth and gently sucked, Jarva violently bucking her hips and moaning louder than before. Mo'tul did it again, interchanging it with strong swipes of her tongue.\n\n\"More, Mo'tul, more.\" Jarva cried, her hips bucking stronger. Mo'tul took one of her thick fingers and gently inserted it into Jarva's cunt, slowly letting her get used to the large intrusion. Mo'tul slowly humped the bed, rubbing her pre-cum into the covers at the sight of her large finger entering Jarva.\n\n\"So big.\" Jarva mumbled, bucking her hips in time with Mo'tul's thrusts. Mo'tul smirked as she took Jarva's clit into her mouth once more. Her favorite part was coming, soon Jarva would be ruined for the dicks of any other species out there except for orc. She'd have to beg more and more orcs to put more babies in her womb to ever feel this satisfied again. Mo'tul growled and redoubled her efforts, determined more than ever to rip this orgasm from Jarva's small body and show her what she had been missing all these years of not fucking orcs.\n\nJarva's cries became even more frantic and louder than before, her body moving in time with Mo'tul's thrusts of her hand and tongue. Mo'tul worked harder and faster, culminating in Jarva's body tensing like a bow pulled taut, her walls gripping Mo'tul's fingers tightly and refusing to let go, Jarva's pretty mouth wide open in a wordless scream. Mo'tul slowed, gently bringing her lover down from her orgasm, enjoying the whine of loss when she removed her fingers all together from Jarva's greedy cunt. Mo'tul smiled and wiped her mouth with the back of her hand and began to lightly stroke her cock, coating herself with a mixture of her own pre-cum and Jarva's wetness.\n\n\"Are you ready for more?\" Mo'tul gruffly asked, her own strokes becoming harder and faster as she stared at Jarva's dreamy gaze, her heaving chest, and her glistening pussy. Jarva shot her a lazy smile and nodded, sitting up and stretching her arms.\n\n\"Your turn.\" Jarva said, her small hands reaching over and gently beginning to position Mo'tul so she would rest against the pillows. She shot Jarva a curious look that quickly morphed into a look of pure lust as she realized that Jarva was now straddling her hips, coating Mo'tul's cock with her wetness as she slowly began to rub her pussy up and down her length.\n\n\"You don't...\" Mo'tul trailed off as Jarva slipped the very tip of her cock inside, Mo'tul's head falling back to rest against the wall as she enjoyed the feeling of Jarva's velvet walls just barely beginning to envelop her. \"You don't trust me to hold myself up?\" She teased as Jarva began to slowly raise her body up and down, barely keeping the head of her cock inside. Jarva let out a quiet chuckle that turned into a moan as she let herself slip a little further down Mo'tul's length.\n\n\"I do. But it's my first time with something this big. Need to control it.\" Jarva sputtered as she began to slowly start a rhythm, her fingers reaching down to slowly stroke her clit. Mo'tul hummed in acknowledgement, bucking her hips just the slightest amount as Jarva slipped down more and more, becoming used to the large intrusion. She gripped at the bedsheets, desperate to grab Jarva's hips and slam them together but no, not tonight. She needed Jarva's first time with an orc to be a pleasant experience, months later, that is when Mo'tul would come back and slam the halfling onto whatever sturdy surface there was and fuck another orc pup into her womb.\n\nMo'tul squeezed her eyes shut as Jarva's velvet walls enveloped her completely, the only sound in the room their rough breathing and quiet moans.\n\n\"So big.\" Jarva whispered, rolling her hips as she placed her hands on Mo'tul's chest to brace herself. Jarva lifted herself off Mo'tul's cock, letting out a keening noise before lowering herself back onto it, moaning the whole way down.\n\n\"You're doing great.\" Mo'tul said, groaning.\n\n\"I'm glad you think so.\" Jarva chuckled. Mo'tul chanced at grabbing one side of the halfling's hips with one of her hands, slowly guiding her up and down at a faster pace. Jarva's response was to flex, squeezing Mo'tul's cock.\n\n\"Damn, woman.\" Mo'tul reached up and palmed one of Jarva's breasts, pinching and rolling hte nipple as they increased their pace, rocking back and forth until the rhythm they had set for themselves became undone, falling into favor of erratic thrusts and hard movements. Sweat poured off their bodies from exertion. Loud moans became their battle cries as they slammed into each other, sometimes swallowing moans with their mouths, trying to find even more of a connection, a way to be together with more intensity.\n\nMo'tul could feel she was close. So close to spilling her seed into this woman's cunt and letting it take root in her womb. More importantly she saw that Jarva was close. Her fingers were frantically hitting at her clit with every frantic thrust. With a low growl, Mo'tul replaced Jarva's hand with one of her own, moving even faster and more frantic than Jarva had.\n\n\"Oh fuck!\" Was Mo'tul's only warning before Jarva went tense again, her body tensing and trembling, her keening cry echoing through the room. And her cunt, her cunt squeezed and hugged Mo'tul, practically begging her and her cock for her sweet cum. Mo'tul obliged. She slammed her hips up once more, impaling Jarva fully on her length, her own orgasm ripping through her as hot ropes of cum released into her lover.\n\nMo'tul smiled as Jarva collapse onto her chest, Mo'tul more than happy to hold her in her strong arms, savoring the feeling of the woman's body pressed against her own.\n\n\"Hmmm. That was nice.\" Jarva murmured, lifting her head up to look Mo'tul in the eyes. Mo'tul smirked and brushed some of the sweat ringlets of hair that had stuck to Jarva's face, placing a gentle kiss on her forehead.\n\n\"Do you want to go again?\" Mo'tul asked, her body's strength already returning. Jarva looked at her aghast, eyes bulging as she looked down at the orc's already rehardening cock.\n\n\"Give me a minute.\" Jarva said, resting her head against Mo'tul's shoulder. \"I guess the rumors of orc virility is not an exaggeration.\" Mo'tul let out a bark of laughter, lightly slapping Jarva's ass.\n\n\"You don't know the half of it, little one.\"\n\nXxXxXxX\n\nIt had been six months since she had fucked Jarva of the Graceful Goat. Her hunting party had made the rounds to the various grounds and now they were back here again. Mo'tul's cock strained against her breeches at the thought of bedding the woman again.\n\nRe'esh signaled the group to enter the inn, smiling from what Mo'tul was certain were her own memories of the tavern owner. They entered a pretty half-elf woman greeted them and seated them immediately, causing Mo'tul's heart to sink. A thousand questions flashed in her head and then out of the corner of her eye she saw a flash of red.\n\nThere she was. In all her beauty and glory, Jarva. The pretty half-elf girl helped her carry a tray ladened with food and drink and pointed her into the direction of their table. Mo'tul couldn't help the smile that came to her face as Jarva turned towards them, Mo'tul's eyes immediately flashing to Jarva's round stomach heavy with what Mo'tul just knew was her pup or pups. Jarva smiled back and began to walk towards the group. Mo'tul rubbed herself through her trousers, her body aching in anticipation for the long night she would spend with her chosen mate."
    ],
    "authorname": "GriffonRyder",
    "tags": [
        "breeding",
        "orc",
        "futanari",
        "impreg",
        "impregnation"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/motul-of-clan-fire-eagle"
}