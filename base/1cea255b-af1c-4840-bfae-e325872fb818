{
    "title": "Barbie + Ken Ch. 02",
    "pages": [
        "I am thrown, not kindly, into my new prison. My knees take a harsh impact as they strike the soft floor. As I hear a door lock behind me I take in my surroundings. A small room, padded walls. A heavy metal door with a small latched opening for a viewing window. The sound of footsteps receding. I'm not going anywhere. \n\nJust to be sure, I scrutinize every corner, checking for any avenues of escape. My efforts are fruitless. I listen at the door and hear nothing. I am isolated and alone, and I don't know if or how I'm being guarded. I have no energy left to use magic, and I doubt I would get far anyway. I decide to conserve my energy and take a rest while I have the opportunity. I've only slept once since I slipped away from Jareth and the Circle. I need to stay alert if I'm going to stay gone.\n\nI sit cross-legged against a wall, the door in my periphery, and I lean back. I align myself, close my eyes, and focus my breath. Soon I have coaxed myself into a healing trance and see only the colors that dance in the absence of light. I feel the rejuvenating effects on my body and I let them work, soothing my body and nerves. I picture myself floating away, high above my place of capture. I look down and See the compound. It is a disorganized patchwork of roads, buildings, and acres of rolling land decorated in lush, green nature. They sky above invites me to run and fly. I See a small town center directly below. The sun is just beginning to set- it will be night soon. And the second night of the full moon, a good night to replenish my magic. \n\nI catch the first of the moon's rays. They envelop me, push through me, and the well of magic deep within me fills. My energy returns, my fatigue clears. The noise of my third capture in two days quiets in my mind. I am filled with moonlight, bursting with radiance. My vision goes white and I am Shown a large building in the center of the compound. I See the man who sentenced me, without trial, to my newest prison. A deep power emanates from him, and I sense heaviness in his heart. His head hangs as he leans against the wall. I am drawn to him. I reach out. He flinches, and whirls around. His eyes go wide as he sees me, and he stops breathing. He murmurs something I don't understand. He falls to his knees. The Vision changes.\n\nKen lies before me in a room similar to mine. He is unmuzzled and does not blink. I feel the black rage in his heart. It roils and sloughs off him. I have seen blackness like that before, during Jareth's rituals. Instinctively, I know I can neutralize it. I connect to the dark energy. It feels like oil. I fill it with moonlight. Ken gasps, mouth open in a soundless scream, paralyzed by shock. His hair fades, the rich color paling to white as the dark energy evaporates. The moonlight fills his heart and I kiss him, unable to resist. Then the Vision ends.\n\nI come back to myself suspended in moonlight. I open my eyes. The padded room stares back. There are no windows, only a bare bulb hanging from the ceiling. What time is it? How long have I been here? I have to get out. There don't appear to be any weak spots in the room. I am fairly sure I am underground. The only way out is through that door. With the full moon waning, and the 'wyrd' spell finished, I won't be able to work up enough magic to teleport. So I'll have to wait for my chance.\n\nA knock at the door. \"Alright pup,\" calls the voice of my now-twice captor, \"I'm coming in. Try anything funny and I'll split you open.\" \n\nI think for a moment that wouldn't be so bad. Sounds of a key, the lock turning, and the heavy door groans as it opens. My captor leaves it open, standing between me and my escape. He knows I am not stupid enough to rush him. He knows I am dangerous enough to keep a sharp eye on me. I eye him warily, fighting my internal reactions of distaste and lust. I would just as soon set him on fire as I would allow his hands to set my body ablaze. I blink, attempt to clear the lust haze in my mind.\n\n\"The Alpha is expecting you,\" he says, and I know it's not a suggestion. I rise, fluidly standing from my cross-legged position. Despite my every instinct screaming at me to get out, I remain the picture of calm. Never show hesitation or vulnerability before a foe. That is what Jareth taught me, and I have seen many a more dangerous enemy than this man.\n\n\"Let's go, princess,\" he gruffs, and slaps my ass I pass him. I choose not to dignify him with a response, though I am aroused a little. I refuse to give him the satisfaction of acknowledging his effect on me. He chuckles under his breath and leads me down a dark, narrow hall. \"I can smell everything you're thinking, you know,\" he says, and I roll my eyes. What a dick. \"You've got the most powerful scent I've ever smelled. I could pick you out from miles away.\" He leans in close to me, stopping me from advancing. He locks his eyes on mine. Is he threatening me... or seducing me? I'm not sure and I don't like it.\n\n\"Sorry you have to deal with that,\" I sneer, \"It must be a real inconvenience.\"\n\nHe laughs. \"I like it,\" he hisses, and he invades my personal space, making full contact with my body and pinning me against the wall. \"You're delicious.\"\n\nI feel his thick bulge against me, and I harden in response. I hate myself but I can't help it. I hold his gaze until he rest his head against my neck, lips grazing that sensitive spot against my collarbone.\n\nHe growls low in my ear. \"I know how bad you want it. The pheromones are rolling off of you.\" I can't deny it. I'd lay down and open my legs for him if he commanded me to. More than his powerful physique, more than his intoxicating smell, more than his feral beauty... it's his presence. I can't explain it. I want to obey him. I want to please him. I want to submit to his power. \n\nBut I am also defiant. I did not escape one sexual prison for another. I refuse to be subjected to anyone's control, no matter how bad my body fights me. And I don't like the uneasy feeling his presence gives me. \n\nHe sighs into my neck, his large, rough hands running over my body. \"What is it that he's got that I don't, huh?\" he breathes. I flinch and stiffen. \"What is it about Junior? It's not like he Marked you. He's got no claim. And he's only a Beta. I always get the first taste,\" and he licks where my neck and shoulders meet. I shudder and sigh, harder than before. I know I'm leaking. I think of Ken and feel a distant pang, a hurt somewhere I can't place. It is far away and so close at the same time. I can't help it, I buck against the man. This excites him and he grinds into me.\n\n\"I knew you wanted it. You're panting,\" and he cups my crotch. He squeezes, hard. I hear myself take in a sharp breath. I am rapidly losing control. The fog of lust is taking over. \n\n\"I...\" and I trail off, unable to think as he drags his tongue lazily along the side of my neck. He nibbles on my earlobe. I put my hands against his chest, thinking to push him away but instead I find myself turned on by the feel of his hard muscles. He chuckles and renews his attack on my body.\n\nHe pins my hands against the wall and I hear a distinct metallic thud. Am I up against a door? Is there a way out behind me? Suddenly I am able to cut through the fog and my senses return. I decide in an instant how best to escape.\n\n\"I want this,\" I whisper, and I grind against his prominent bulge. Truly, it is a monster, thick and long and clear against the inside of his jeans. \"I need it,\" I pant, and I throw one leg on his waist. He growls, and soon he is supporting me against the door, my wrists shaking in his grasp. I can tell he's nearly lost to lust. His breathing increases, he moves as if to unzip his fly, and this is my chance. I reach inside the well of magic deep within, I find the word I need, and I bring the magic I need to the surface.\n\n\"Open,\" I command, the door behind me bursts open. The man loses his balance and we start to fall. I put my feet to his hips and push off, expelling myself from him and propelling me into the room. He crashes into the room, just a hair's breadth from me, only just beginning to comprehend what's happening. I hit the ground, I roll, and just as I am about to recover on my feet I crash into another warm body.\n\n\"Oof,\" it says, and it is also knocked flat. I hear a loud \"fuck!\" from behind me, I know the big bruiser has landed. I attempt to disentangle myself from the arms of the body with which I am not entwined, but it is hopeless. Fuck indeed. Finally I manage to extricate myself and jump to a corner close by the exit, crouching low. The big man finally recovers and whirls toward me, snarling. I watch in fascination and horror, guard up, as fangs release from his teeth. His eyes glow- deep, murky gold. He growls low, this time a real growl, and I can see his body ripple. What the fuck am I seeing? Even during my time with Jareth and the Circle, I never saw anything like this.\n\n\"Barbie, go!\" and I snap my attention to the voice. It's Ken, looking disheleved and surprised, fangs unsheathed also, body rippling. I note with interest that his hair is now snow white. Both men are sprouting fur, bones shifting in most gruesome fashion, hands becoming paws, tails appearing, ears elongating, faces rearranging. Suddenly I know- lycans. I was warned about them by Jareth. The antithesis to witches, the mortal enemy to sorcerers, the eternal hunters of the magical community. Now I fully comprehend what danger I have been in. Every muscles screams out go go GO, and I obey. Before the men finish transforming, I bolt out of the door. \n\nI run the direction the big man was leading me in initially. The hall is long and dark, up ahead I see a light. I desperately run toward it. My escape it close at hand. I smell fresh air, see the staircase leading to an open door, I know my freedom is so close! I hear the sounds of howling, snarling, fighting behind me. I hear the padding of large paws. One mistake and I am fucked. I feel the magic rise within me. I know what I need. At precisely the right moment, I leap out of the door, shout \"Close!\" and the door slams shut behind me. Two unmistakable thuds, one much louder than the other, immediately follow. I hear clawing and scratching and howling. The lycans are angry. Is Ken one of them? How could I be so stupid!? From one prison to another, by my own stupidity! Mixed up with lycans! I lean back against the door and take a deep breath.\n\nI'm surprised that I'm not immediately apprehended. Where are the door guards? Surely there's a sentry posted somewhere. Unless perhaps these lycans are so confident in their abilities that they wouldn't bother with a guard. And the big one said my smell is distinct. If he can smell me, I bet the others can too. I've got to be careful. \n\nI take in my surroundings. The building I'm in is right next to the big building where I met the Alpha. Other smaller buildings line a street, a collection of odd rounded tin shapes. I try to remember the bird's-eye view I was Shown earlier. The big gate lies east, and the street conveniently runs east-west. I turn the right way and take off, jogging carefully, alert for any possible lycan authority.\n\nStrangely, I run into none. The compound, bustling the last time I saw it, is deserted. Uneasiness pervades the air. My skin pricks and the hairs on my arms stand up. I am nervous. Something is up. I shouldn't be freely escaping. The last time I was here, I was pursued by several lycans. Why am I encountering no resistance? Then I spot it.\n\nA hooded figure by a tree. I almost don't see it. I glance again, expecting it to be a trick of light, but still the figure menaces me from about a hundred feet away. It stands before me and the gate. I trot to a stop, uneasy. Best not to approach an unknown foe. I look for alternate routes, but I can clearly see the gate behind the figure. I reach for the well of magic within me, ready just in case. I sense no energy, no aura, no presence at all from the figure. It puts me on edge. I crouch low, not bothering to hide. It's already seen me, I am ready to defend.\n\nIt raises a hand. The skin is drawn tight and pale, leathery and worn. Spots decorate the appendage, more claw than fingers. I Listen for any incantation, Look for any hint of magic power, still unable to detect anything. If I can't tell what kind of magic the cantor is using, I will have a harder time countering it. I think maybe attacking first is a better idea. I ready the spell, picturing the figure dissolving in flames. I open my mouth to speak the Word, but before I can produce it, the figure vanishes. Its hood drops to the ground, heavy and rolling in the fall. \n\nEvery sense is at max. Every nerve screams. I still can't sense the figure, can't tell what's happening. It's maddening! \n\nOut of pure instinct I duck to the right and roll away, narrowly avoiding a green fireball hissing by. I know better than to stay. I run to the gate, knowing the figure could be anywhere. I feel another fireball crash inches behind me. Another lands just feet in front of me. What direction are they coming from? The gate is within my sights. One good jump and I could clear it. The next fireball almost hits me, I feel the heat roasting me. I narrowly avoid it. This is fire magic. I know fire magic. I can counter this. These fireballs are coming from... above? \n\nI look up, skidding to a halt just before the gate. I search the skies for something, anything that resembles the mysterious figure. I see a quick flash of light, an ignition, and a fireball materializes from the same spot and launches toward me. I put my open palm face-up in its path. The fireball connects with my hand. I feel the heat. I feel the Intent to harm. I use my own magic to absorb the sender's Intent, infuse the spell with my own, and send it back with double the force. The well of magic barely takes a dent. The fireball, now white, launches from my palm as if shot from a cannon. It connects with the ignition point, bursting into a stunning green, white, and orange flame. I hear a shriek. The air about the ignition point shimmers, sigils appear. \n\nI recognize the origin language immediately. It's a special language, ancient and forbidden. Some of the sigils appear on my own body. This foe has been sent for me by Jareth. This foe is a member of the Circle. They have found me. I didn't get far enough, and they have come to take me back. Fear bubbles up from my gut, panic rises too. I will not be taken by them again. I will not return to the Circle. I will not get back on that stone!\n\nThe sigils glitter in the air, a spell of invisibility and protection. There are phrases for the concealment of mana. Standard Circle inscriptions. Striking the field with my flames has damaged the layer of invisibility, though not entirely- the enchanter is still concealed. I spot a phrase in the sigils that is poorly worded- a weak point in the enchantment. I've got this guy now. I put one hand before me and draw the other across it and back, creating an arrow of white flame. I take a deep breath, activate my third eye. With it, I See the exact way the arrow must strike to null the enchantment and vanquish my foe. I allow it the right amount of magic power. I imbue with the Intent to kill. The arrow blazes, the flames licking my face and body but not harming me. Seeing my foe ignite another fireball, I concentrate my energy and take aim. \n\n\"Fire!\" I scream. The arrow explodes forward, rushing with uncanny speed towards my victim. The fireball he launches is too slow, too weak, the arrow consumes it without any ado, absorbs its power, and pierces the protection enchantment. The sigils immediately go dark. I See in the intense burning of my white flames a shadowy figure, run through by my arrow. It falls to the ground in a blaze. \n\nI run up to check my mark, ready to finish the job. The charred corpse of my attacker greets me with a ghastly grimace. Instant death. His body is tattooed with the strange, twisted marks of the forbidden language. For a moment, I am safe.\n\nBut one can never outrun the Circle, as Jareth said many times. If there is one, there are surely more. I will vaporize every last one. No more running. \n\nI sit and cross my legs beside the corpse, no longer worried about the danger. I enter the lucid dreaming state, cast my consciousness about the compound, and search for any members of the Circle. I compose the forbidden language spell that allows me to see enchantments, especially those that attempt to hide mana. I find three. One to the west, at the edge of the compound's town. A lone magician. Surely just a footman. One at the center of town, in the building where I was sentenced. I sense the Alpha and several magicians. I know he is in danger. The third is powerful, strange, and feels different than the others. It lies in the woods at the compound's north area. It bristles as I make contact, and I shirk away. I could probably overpower it, but since it is clearly not of the Circle, I leave it be. It can be investigated later.\n\nI return to my body, take a last glance at my victim, and run as fast as I can back to town. I quickly approach the area where the first enchanter is. As I suspected, it is a lone magician. Without wasting time, I call a spear of fire and cast it at the enchantment's weak point. The pitiful magicians they sent are no match for my command of the craft and the forbidden language. Their Intent to live is less than my Intent to kill. The magician is instantly charred. Rather than feel drained by my use of magic, I am empowered. My reserves have barely been touched- probably a last gift from the full moon- and I know I must release the lycans if I am to overpower the magicians in the big building.\n\nI approach the door with caution, unsure of what I may find. It is buckled in a few places, but hanging on. When I am within feet of the door, the lycans catch my scent. One of them snarls and slams against the door. \"You little bitch! Open this fucking door!\" Definitely the big one. \n\n\"Ken?\" I call, tentatively. I hear a morose whimper. I reach out with my mind to Sense his presence and it is weak. He must be injured.\n\n\"You're gonna fucking get it when I get out of here! You're gonna feel the punishment of an Alpha!\"\n\nSo Ken was unable to subdue the bigger man. It's up to me. I reach within the well of magic, prepare the necessary spells. I hold my hand to the door. \"Open,\" I command. The door creaks open, crying out on its hinges. As I expected, the big man flies out the door, fangs bared, back to human, fully nude. \"Stay,\" I call. He stops midair, inches from my palm, levitating mid-pounce. His huge, well-defined muscles bulge and quiver as he fights uselessly to move against my spell. \n\n\"What the fuck is this?\" he snarls. I walk past him, ignoring his taunts. I find Ken just beyond the door, badly wounded. He has not resumed human form. His wolf, a shocking snow white, is bruised in several places. The jaw is misaligned, and he looks to be missing several chunks of flesh. The wolf weakly raises his head, pitifully wags his tail. I kneel beside him.\n\n\"Please forgive me,\" I say. \"I will right this.\" I pull again from the well of magic and I picture Ken's body healed and whole. He is enveloped in a soft white-blue light, and as I watch, the wolf regenerates. He yips as a bone snaps back in place and itches at the seams of wounds as they close. Before long the wolf stands before me, as if he hadn't just had the shit beat out of him by the bigger man.\n\nThe wolf pads over to me and gazes levelly. His eyes are exactly like Ken's. His presence feels the same. I reach my hand out and he shoves his head under it, so I scratch his ears. The wolf makes a curious rooing sound and licks my hand. Perhaps these lycans aren't all bad. I could get used to having a big, friendly wolf around.\n\nI feel a slight drain on my magic energy as the big man fights against my spell. \"You little fucker!\" he cries, \"I'm going to fucking kill you! Release this witch shit now!\" I step to him, the wolf on my heels. I meet the big, struggling man's furious eyes. Before, when he captured me outside the homeless shelter, I didn't have the energy to restrain him. I could do it all day with what I currently have, even with his struggling, but the Alpha is in danger next door. I need the big idiot functional and compliant if I am to defeat my visitors and escape this situation once and for all.",
        "\"What is your name?\" I ask. The wolf beside me makes a snickering sound.\n\n\"Let me go, you wik fuck!\" he screams. Wik is not a kind word to use when referring to people like me. I do not like slurs. My eyes narrow and I threaten the man with a small shock. Not much, just a bit of pain. He snarls.\n\n\"Tell me your name,\" I say, calm and even. For a moment, he looks about ready to spit in my face. If he is an Alpha as he claims, then being at the mercy of a wik fuck must enrage him to no end. But an anger-clouded lycan is one I can't make use of. I need him to be rational. \"Your name,\" I insist again.\n\nFinally, he checks his rage, though he does not drop his gaze. A dominance thing, I assume. \"Marius,\" he says through gritted teeth.\n\n\"Marius, huh?\" and I can't resist the urge to dominate the Alpha. \"I'll call you Mari for short.\" He snarls again but does not struggle. A vein bulges in his forehead.\n\n\"Well, Mari,\" I say, and the wolf beside me makes that curious snickering sound again, \"I'll cut it short. Your Alpha is in danger next door. A group of 'wik fucks' is holding him hostage or likely worse. I don't think I can defeat them all. I need your help.\" I look to the wolf beside me, his eyes meet mine and there is a question I cannot answer in them. \"I need both of you, Ken,\" I say. The wolf licks my hand.\n\n\"It is my duty to the Family to protect my Alpha. I will murder every single last wik in there,\" mutters Marius. \n\n\"Good,\" I say, which seems to surprise him. \"I want them dead too. But you need to promise that when I let you down, you won't attempt to do the same to me.\"\n\nWe stare at each other for a long while. He seems to have difficulty choosing his words, frozen as he is in midair. \"Fine,\" he says. \"I won't try to kill you. You say you want to help the Alpha. That's what I want too. We can settle our differences later,\" and with that, I snap my fingers. Marius abruptly falls to the ground, but his reflexes are quick, and he lands in a crouch. He stands and rolls his shoulders.\n\n\"How do you know they're in the great hall?\" he asks. \n\n\"I Saw it,\" I say plainly. \n\n\"Sure,\" mutters Marius. Next to me, Ken's wolf stamps the ground impatiently. \"You're right,\" Marius says, \"I can't go in there like this. But we can't just barge in. We don't know what magic those witches are using.\"\n\n\"Actually, I'm quite familiar with their magic,\" I say. Both Marius and Ken's wolf turn to look at me. \"I don't have the time to explain. But I'm sure I can counter it. There are no high level magicians here. This is just an advance party.\"\n\nBoth of them give me the same strange look. Marius steps into my space. \"And you know this because you 'Saw it', right?\"\n\n\"Yes,\" I say simply. I'm sure I'm raising more questions than I'm answering, but since I don't plan on staying long I don't bother with more details. I know my best chance to escape is right after we beat the group sent here for me. I will slip away quietly in the battle's aftermath, leaving this place and these lycans far behind. I feel a twinge at the thought of leaving Ken, but I can't let myself be bogged down by feelings now. Lycans and magicians do not coexist. This I know. \n\nMarius shrugs. \"Then off we go. I will coordinate our attack,\" he says, and I nod. \"What do you know about their enchantment?\" he asks.\n\n\"There are limitations to their defense. It's a standard spell combining invisibility, energy masking, and defense. I've encountered it twice today. All I need to do is find the weak point and I can eliminate it. Finishing the magicians off will be quick after that.\" I explain.\n\nMarius grins and puts his hands together. \"I have the perfect strategy...\" \n\n* * * * * * * * * * *\n\nMarius finishes tying the ropes around my wrists. I feel uneasy with this, though it's part of the plan. His hot breath on my neck sends shivers down my spine. Despite my will, I feel my pants get tighter. This is so not the appropriate time. I hope Marius doesn't notice.\n\n\"You little tease, you like this, don't you?\" he says. I do not answer. I know he can smell it. Ken's wolf sits just feet away, watching without revealing any reaction. I can't deny that I'm turned on. If Marius can smell my pheromones in his human form, then I know Ken's wolf is well aware. Though I am not attached to Ken, I feel a little pang of guilt. I find myself wishing it were Ken tying these ropes. \n\n\"We can pick this up after we clear the rest,\" Marius whispers in my ear. I shiver. Ken's wolf growls quietly, which makes Marius laugh. \"You know I always get what I want, boy,\" he says, and the wolf looks to the ground.\n\n\"Now it's time for action,\" he says. He pulls me up roughly, and pushes me forward. We begin walking towards the Great Hall as Ken's wolf stalks into the bushes beyond. I don't need Marius to guide me but he does, his big, rough hands on my lower back. Occasionally a finger sneaks just beneath the waistband of my pants, grazing the skin. \"Just a preview,\" he says, and I can hear the smirk in his voice.\n\n\"Stick to the plan,\" I say, and he jabs me low with the same finger. \n\n\"I will give the orders, wik,\" he says, voice low and threatening. I chuckle at the idea of him in control, and he tightens his grip on my ropes.\n\nWe are before the great door. I remember the last time I went through these doors, a captive. It doesn't seem like much has changed. But this time I will change it to my advantage. I will not be caught again. After I finish this, I will be free.\n\n\"You sure they won't explode or something?\" he asks. I nod.\n\n\"They know we're here. We shouldn't linger.\" With that, Marius kicks open the doors and calls into the dark chamber.\n\n\"I have what you want. Allow us entrance and he will remain unharmed!\" he calls. He takes careful steps forward, shoving me before him. Some brave warrior. As we pass through the doorway the giant doors swing shut and we are enveloped in darkness. I know it's not a problem for a lycan, and I have excellent night vision, so I don't worry. When my eyes adjust, I find what I was expecting.\n\nThe bodies of several lycans are strewn about the room. None appear to be dead, just unconscious. I check each of them for a life pulse and instead find the traces of a spell that renders a trancelike sleep. In the center of the room is a circle of magicians. They chant in the forbidden language, a prayer to the unholy gods who give them power. The circle itself is made up of the same glowing sigils of the forbidden language. They don't bother to conceal it. I can see from the wording that it is a circle of sacrifice. At the center of the circle is the Alpha, not human but in some half-human, half-wolf form. He is bound to the floor by silver stakes and chains. His breathing is labored and his presence is dim. He does not have much time left. I search the runes on the circle for some clue as to what exactly they are attempting to summon but am unable to ascertain it. \n\nA slippery voice calls out from the circle. \"Ah, Oracle. You have arrived. The summoning may begin.\" The chanting changes in rhythm, and I hear the beginning of a dark call. I have a better idea of what they are trying to do now. This chant is for a particular demon- a shape shifter that consumes the essence of lycans. The community here stands no chance if the Alpha is sacrificed. It is much worse than I assumed.\n\nMarius bristles and continues moving me forward. \"Don't stray from the plan,\" I mutter, and he squeezes my wrist in response. If anyone but me enters the circle, the disrupting energy will be consumed by the spell and hasten the entrance of the demon. Especially if Marius, a lycan, were to enter... the demon would be that much stronger. I hope to only have to kill these seven magicians.\n\nThe voice calls again. \"Jareth would be pleased to know you came so willingly, Oracle. Perhaps he will abate his punishment for you. Won't you enter the circle and complete the incantation?\" Of course. These low-level idiots don't have the power to call forth such a high ranking demon. They must be exhausting all their energy just to keep this circle going. This is the weak point I am looking for. If I can drag this out, they will be much easier to take down. It's not part of the plan, but playing along is our best shot.\n\nWe reach the edge of the circle. The summoners give me a space to enter. Marius roughly pushes me in. The circle flares as I enter- a recognition of my power. The only sorcerer with any real ability here. I was afraid that Jareth himself would have come, but apparently he didn't think to bother with the lowly lycans. Good for me. From my position, standing at the center of the circle before the laboring Alpha, surrounded by the seven magicians, I am able to perceive the whole spell. The written inscription is pitifully simple and misspelled in many places. I can't believe my luck. The weak spots are so numerous that I doubt the called-upon demon would even have a portal strong enough to enter from. The demon will probably be offended by this circle and turn on the idiots. This is going to be easier than I thought.\n\nAll I have to do is break the circle in a way that won't endanger the Alpha's life. I reach down deep into the well of magic. I call it forth. I feel it rushing through me, feel the magic course through my spirit. On my right, a magician hands me a crystal chalice. On my left, another hands me a diamond athame, the long silver blade gleaming in the light of the circle. I take both and cross them over my head. I step over the Alpha and straddle him, ready to make the mark. His powerful, muscular body flexes and jolts beneath mine as he struggles helplessly against his chains, but like a true Alpha, he does not beg. Drunk on power and drunk on the feeling of the powerful body beneath me, I feel myself harder than I have ever been. It would be so easy to do as Jareth wills. It would be so easy to end this whole thing, to obliterate the whole place and all of my captors with it. The chanting increases and I feel the power of the cantors joining mine, their Intent attempting to influence mine. This is something I have done many times before as Jareth's Oracle. I know what he wants. I hear the call of the demon, lying just beyond the gate, entreating me to allow it entry. Its call is strong... its desire is strong. It whispers promises in my ear, I feel its hands running over my body, inviting me to pleasures unknown. Its dark energy pervades the atmosphere, it begs me to allow it just one drop of blood, just a taste... the will of the demon and the circle are strong. I am tempted to give in, to flip the switch and drink of the dark, limitless power.\n\nBut my will is stronger. \"Invert!\" I cry, and I laugh wildly as the energy rushes through me. I babble phrases in the ancient language, and the inscription of the circle rearranges rune by rune. I feel the shock and surprise of the circle magicians, I feel them react in slow-motion, and I know they are reaching for their magic. I drag the blade across my arm and let the blood pour into the chalice, I feel the fire of the enemy's magic as they attempt to attack but I am too powerful, too much for them, and instead I absorb their energy and pour it into my spell. I raise the chalice to my lips and knock my own blood back, drinking deeply. At once, the demon cries, its screams splitting the air. Shadows burst forth from my body and I open the portal within myself to allow the demon entry.\n\nA shade, darker than darkness itself and no more substance than smoke, it passes from magician to magician and each falls with a sigh, the rattle of death. They have no time to react, they fall like dominoes. Soon all seven are dead and the demon materializes before me. It begs for a new target, it looks to the Alpha lying beneath me and promises me sweet rewards for his power. In the demon's own tongue I curse it. I command it return to the dark dimension and it shrieks, fighting me as I force it back inside myself with my magic power. I send it back through the portal in my own body, slamming the gate closed on dark curses and hellish omens. The circle explodes in flames as I release the spell, and I come to my senses.\n\nThe Alpha is barely alive. The silver leaches his life force and he struggles no more against the chains. The summoning has left me so weak, but I exhaust the last of my well of magic to snap the Alpha's bonds. The chains cleanly break from his wrists and I slump over, atop the Alpha's body. I have no energy left even to move. The flames blaze out of control, white and blue, they encroach upon me. This isn't how I meant to go. This was not the plan. But how was I to know the demon's voice would be so sweet? How could I not have Seen the foe's true plan? I don't want to accept that this is as far I go. I have not given up on my freedom! \n\nI try to move but have no energy. I feel myself roughly shoved aside, a large figure picks up the Alpha and they are both gone. The flames lick at my feet. I feel the burning and cannot scream. Will I die here?\n\nSuddenly, I feel a tug on my sleeve. The burning at my feet stops. I am being repositioned. The tugging resumes at my shirt's collar, and I am dragged through the flames, too quick to feel any real pain. The last thing I see before I black out are strange, familiar golden eyes...\n\n* * * * * * * * * * *\n\n\"Welcome home, Oracle,\" Jareth says.\n\nI do not respond. I can't- his long, thin cock invades my throat, so far down I can practically feel it in my lungs. I am used to this, and I open my throat in acceptance. This is how he controls me, part of his nefarious sex magic. I do my best not to cough and sputter as he keeps his dick in, not allowing me space to breathe. I take in as much through my nose as I can. Jareth laughs, eyes glittering.\n\n\"You can't run forever, my pet,\" he menaces, hands holding me down. \"I will find you. I will always find you,\" and he fucks my throat with languid strokes.\n\n\"Soon you will be mine again. I have claimed you as my own. You bear my marks on your body. They are binding,\" and he punctuates that with his cock so far down my gullet that my nose is mashed into his crotch. He leaves it there and I can't help but cough, which only gets him off more.\n\n\"I am coming for you. I will find you. And make no mistake, I will punish you when I do...\" and he begins to cum as I lose consciousness, the world blacking out...\n\n* * * * * * * * *\n\nI wake slowly, groggily, the sun in my eyes. I raise my arm to shield my face. My arm is bandaged. Someone has tended my burns. I sit up slowly, head full and thick. I am in a simple room. A small, low table beside me, I perch cross-legged on a rolled-out mat. A light sheet covers my legs. I am nude. The scars and tattoos covering my body stand out in stark contrast to the simple pink sheet. I feel a warm breeze, I see pale yellow curtains softly flutter before a window. There is a door across the room. Flowers in a vase on the table, a glass of water. Not much else.\n\nI carefully hold the water and gratefully gulp it down. I am so thirsty. The cup is ceramic, with a nice weight to it. It rings with a hollow tone as I set it down on the table. I run my hands through my hair and take a deep breath. I can still smell the fire in my nostrils. My well of magic is not empty, but it is still depleted. I'm not sure where I am but I might as well be a prisoner. I think of Ken. I realize that because I didn't follow the plan, he never got the signal to enter. I was supposed to disable to circle and distract the magicians while Marius went in for the kill. I was supposed to send a fireball out a window as Ken's signal. He was to enter from the opposite direction to catch any who might escape. It was a good plan, but I wasn't counting on the magicians using the Alpha to summon the demon. And I wasn't expecting to be the key for their summon, and I didn't expect to be momentarily clouded by the influx of power. Damn Jareth! I don't know how those low-level magicians managed to subdue the Alpha, but I'm sure Jareth had a hand in it. I'm sure he knew how I would react to it, too. He trained me so well in so many summoning ceremonies that my natural habits just took over! I'm a failure of a magician. I only barely managed to subvert the situation. I hope Ken wasn't harmed because of my actions. \n\nI lower myself back onto the mat and turn from the door. I gaze at the wall and give in to the feelings of shame and hopelessness. Curiously, I discover that I'm missing Ken. I remember the way I felt with him in the shelter, so safe snuggled up between him and the wall. I had no idea how strongly I felt it at the time. I find myself wishing for his present, for his comfort... for his body. I chide myself for feeling this way. I should be thinking of escape, yet all I can think about is Ken. Ken's golden eyes, his rippling muscles, his hands roaming my scars, his bulge against my ass, his hands around my length...\n\nI give in to the feelings and reach down to touch myself. I am half hard and getting harder, leaking a little. What a strange effect Ken has on me. This kind of hold is surely dangerous. I wrap my fingers around my shaft, tugging slowly. I wish it was Ken's hand. I imagine his body next to mine, his heat keeping me warm, his voice in my ear whispering sweet things. My breathing increases. My hand tugs harder. I flip over onto my back and taste a finger. I get it wet and reach down between my legs, inserting it easily. I dig around for my spot, searching for the button that lights up my body. Frustrated, I can't seem to find it. I bet Ken wouldn't have any trouble. Where is he? I wish he was here...\n\nThe door opens and in bursts Marius, shirtless. He wears only shorts. I can tell immediately he's not wearing underwear. His pupils dilate as he registers what I'm doing, I can see his bulge plumping up. He chuckles, low, and slowly closes the door. \n\n\"I was told to check on the patient and see if his bandage needs to be changed. I see the patient has other needs.\" His words make me groan. He kneels by my bedroll, watching me jerk and finger myself with hungry eyes. The outline of his cock is inches from my face. I wish it was Ken's, but I guess his will do. I add two more fingers and they slide right in. I want him to know what I need. He slides his hand along the length of his thick meat, I watch with interest. \n\n\"Is it this you want?\" he asks, and puts a hand in between my legs. His fingers tickle my taint, they rub the fingers I'm pushing in and out of my hole. I whimper and try to get it closer. He rubs around my hole lightly, letting my fingers slide against his. \"Or maybe it's this?\" he murmurs, and I feel his bulge rubbing against my face. I turn my head and let it slide against my lips, mimicking the slow fucking movements I'm so desperate for. Between his fingers and his crotch I'm in a sex daze. I want so badly for him to do something, to stop teasing me. But I remember how much I dislike his personality, even though his body is incredible. He fixes me with his gaze, the erotic look of a man looking down at his prey. I graze his incredible tool with my teeth. I won't just give it to him, though I'm practically begging. I want him to know he can't just take what he wants.\n\n\"Look at you,\" he says, \"You're fighting so hard,\" his replaces one of my fingers with his. I gasp and he shoves his covered bulge harder against my face. \"You can't stand yourself. Whore,\" he says, and I know he's right. I hate myself for taking my pleasure this way, especially after jacking off to images of Ken. But his finger immediately finds my spot. He removes the rest of my fingers and I clamp down on his. I can taste his precum through his shorts. I want to be filled with cock so bad. I need more than a finger. Marius pushes his finger in even deeper and it slides without resistance. I'm getting lost in the sex haze. It was the same way with Jareth. Those long fingers, longer cock, and cruel attitude remind me so much of him. It's a habit I'm falling into again, accepting the dominance of a powerful man. A familiar feeling of being trapped.",
        "It's that realization, that I am yet again a sex slave to a man who would use me for his own gain, that snaps me out of my reverie. I grab his big hand with both of my own and remove his finger from me. My ass misses the filler, but I must be strong. I do not want to submit to another master. This is not escape. I push his crotch from my face, immediately missing the feel of a thick cock between my lips, glad I hadn't yet learned how it feels without cloth. \n\n\"No more,\" I say softly. Marius' eyes flash in anger.\n\n\"We're not done,\" he menaces.\n\n\"No more,\" I say again, stronger.\n\n\"You'll finish,\" he says, and he straddles my face. With one hand he holds down my throat, with another he takes out his monster cock. Thick, long, veiny, it pops out and lands with a heavy thud against my face. I fight every instinct I have to take it in my mouth. Marius' hand tighten around my throat. \"Open up,\" he commands, but I refuse. \"I know you want it,\" he says, eyes glittering down at me, \"Your pheromones are screaming. You want to feel this dick as far as it can go. And I want to see how far that is,\" he says, pushing insistently at my lips. He holds my nostrils closed, I feel my air going. My panic mounting. I don't think I have enough magic to shove him off, and honestly, I would take his plump, fat monster in my throat before I would resort to magic. But I don't want it like this. I want Ken. \n\n\"Get the fuck off him!\" I hear a crack, and the weight of Marius is ripped from my chest before I can react. Ken stands before me, eyes blazing. Marius lies to my side, hollering. Ken kneels down to me, wipes my lips off with his hand. Without thinking, I wrap my arms around him. I hate how badly I need him. I love the way he feels against me, the way he smells. I'm still so horny and I know he can feel against his leg. I look up at him, eyes full of need.\n\n\"Get the fuck out!\" Ken screams, and kicks Marius. He yelps and stands, ready to fight.\n\n\"The little bitch wants it! He's begging for it!\" he says.\n\n\"Then why were you holding his airways closed?\" Ken retorts, voice raw.\n\n\"He was flaking. He just needed a little persuading.\"\n\n\"Get out!\" Ken yells.\n\nMarius puffs up. \"How many times do I have to teach this lesson, little cousin? I am an Alpha. You're a Beta. You don't give orders about my prey!\"\n\nKen's eyes flash. He whirls around and backhands Marius, sending him stumbling. \"Fuck your lesson. This isn't your home. You are a guest. He is a guest,\" he says, gesturing to me. \"You broke pack law when you tried to rape him. Do you think the shaman will like that?\" \n\nMarius glares at Ken, ready to fight. Ken speaks again. \"How do you think the Alpha will react when he learns how you've treated the guest who saved his life?\"\n\nMarius snarls. He turns to me. \"Can you deny that you wanted it?\"\n\nI stare defiantly back, unable to deny it. I wanted him. I wanted his cock. But I want Ken more. And I do not want to be taken as property.\n\n\"If you know what's good for you, LEAVE.\" Ken says. The word has a powerful tone to it, it feels like a command. It feels similar to the power I felt from the Alpha during my sentencing. Marius' eyes widen in shock, and seemingly as surprised as I am, he turns on his heel and exits without further argument. He slams the door.\n\nKen stands for a moment, breathing raggedly. He seems just as surprised as anyone else. Then he faces me, eyes a combination of concern, rage, and hurt. I reach for him. He doesn't need me to speak. He understands.\n\nHe falls to his knees atop me, straddling me much the same way Marius was a few moments earlier. Hard as I was for Marius, I can't believe I'm harder still for Ken. My hands immediately find his body, hook under his shoulders and pull him on top of me. I need to feel his full weight. I need Ken so bad. I pull his face to mine and meet his lips. He kisses me fiercely, aggressively. I try to tell him everything, try to apologize with my lips. His lips assure me that he understands. I whimper as his tongue asks for entry and I part my lips to allow it. I suck his tongue as far into my mouth as I can and Ken inhales sharply. I feel his hardness through his jeans. He grinds it into me and I grind back. I love the feel of his body on mine. I need to feel it without clothes. \n\nI pull his shirt up and we break our feverish kissing long enough to allow it to slide off. He tosses it to the side and undoes his belt, my hands fluttering over his bulge, begging him to hurry up. He shrugs out of his jeans and his underwear, and his big, furry body is on full display. Curiously, all his body hair is white, like ice. Before he can drop back down to me I've got his dick in my hands, running down his length, squeezing and tugging and rubbing circles at his head. I feel the slickness under my fingers and I have to taste it. I bring my fingers to my lips and suck them in, loving the taste of his precum. Ken's eyes watch with feral interest and I pull on his balls, they're perfect and he groans as I pleasure them with my hands. \n\nHe drops back down to kiss me, smiling as our lips meet again. This time the kissing is softer, still fevered but less urgent, and in his kisses I feel the promise of all the salacious things he wants to do to me. He positions himself so his legs are under mine, they spread my thighs and I lock my feet above his round butt. His dick drags over mine, frotting it and coating it with his generous precum. I'm so slick. He's got so much pre. I'm so turned on by it and I reach down to hold both our cocks in my hand. He's average length and pretty thick, a bulbous head and a shaft that gets wider as it goes down. It's perfect. It feels divine in my hand and against my cock. His lips travel down my jaw, trailing kisses that flutter to my neck. His teeth graze my neck and I moan out loud. He bites down harder and I can't believe the sensation. I buck against him and he holds me down with his body, biting all over my neck and chest, his tongue is everywhere and I'm going insane. I need him. I need him inside me. I need to feel him.\n\n\"Ken, please...\" I manage to say. The sound is strangled, choked. \n\n\"What, baby... I'll do anything,\" he says in between bites.\n\n\"Ken... inside... get inside,\" I plead and I feel a shiver ripple down his spine.\n\n\"I wanted to do this slower,\" he says, and I shake my head.\n\n\"Now!\" I command, and he is happy to oblige. I roll my hips up to give him access, spread my legs for an open landing. \"Do it!\" I yell.\n\nHe presses his leaking cock against my quivering hole. He's leaking so much that my hole is wet. I would've taken him dry, damn the consequences, but I don't think I'll need any help with all Ken's precum. He rubs his cock in circles on my hole and I moan, I push against it, I want it in me so fucking bad. \n\n\"Ken, please baby... I need to feel you in me,\" I beg.\n\n\"I don't want to hurt you,\" he says, \"I want you to feel good,\"\n\n\"I don't care!\" I say, \"Put it in!\" I reach down and push his dick past my sphincter, it slides in with no trouble. I'm already loose from my fingers, and I'm so slick from his precum that it goes all the way in without trouble. \n\nHe feels so good. His pelvis grinds against mine, it feels so good that I can't help but move around it. I brace myself on his arms, his large, defined arms feel so big and hot in my hands, I'm so fucking turned on, I can't believe he's finally in me, Ken is finally fucking me and it feels so fucking good. Ken is gasping for breath, fucking me with long strokes, I can feel his arms shaking, and I'm thrusting back, trying to get him deeper, trying to get his dick lost in my ass. I've never felt so fucking good. Never been so fucking turned on. I'm beyond lost as he glides in and out of my ass with skillful strokes. I can't even speak, the only sounds that escape my mouth are helpless babbling and moans sprinkled with Ken's name. It's the only word I can remember.\n\nI'm so out of my mind with pleasure. I love the way his thick cock feels in me, it hits all the right spots. Ken's arms give out and he gives me full body contact, his arms wrap around me and he puts his head in my neck and bites down hard. My vision explodes in stars. I can feel every tooth in his bite and I feel my orgasm building. My heels are digging into his back and I'm squeezing his dick with every muscle in my ass, rippling it over his hard length, lost to the pleasure he's giving me. Our bodies sheen with sweat, his hard stomach rubs against my cock and his fur increases the tactile pleasure, I can't stand it anymore and I ride his dick as hard as I can. \n\n\"I'm gonna cum I'm gonna cum I'm gonna cum I'm gonna-\" and I release my seed with a long, low moan, and he fucks me through the wildest orgasm I've ever had, beating my prostate with his thick dick and it feels like ages before I'm done. Every nerve is on fire and I need to feel his cum inside me. \n\n\"Barbie, babe, I'm-\" he gasps.\n\n\"Do it, cum in me, I need it, I need your cum, fucking let it go-\" and he growls and bites down hard on my neck, I think he breaks some skin and it's even fucking hotter, and his entire body tenses up as he dumps shot after shot of hot cum inside me. I cum again, surprised, and my second orgasm is even stronger and I'm cumming so hard that I'm crying. Ken is still pumping me, still cumming, and I'm thrashing as I take it all. I can feel it leaking out of me as Ken fucks my ass, finally finishing. He lays on top of me, spent, and I feel his dick slowly soften in my ass full of his scalding cum.\n\nWe breathe hard, calming down. He kisses me all over, he meets my lips and with my kiss I try to tell him everything I'm feeling, how incredible he made me feel, how badly I want him. He responds in kind. Our kisses get softer and finally we break apart. He lays his head against my neck as our heartbeats resume their normal rhythm.\n\n\"Fuck,\" he murmurs, and licks the spot where he bit me. I shiver, I feel his cock jump inside me. \n\n\"Fuck,\" I agree, and we both laugh. He pulls out, though I wish he didn't, and he moves beside me. I roll into him and he wraps his arms around me. I bury my face in his chest and I feel his dick resting between my legs. One of his hands moves down to rest on my hole and he rubs it softly, playing gently with my battered ass. I listen to him breathe as we come down.\n\n\"I'm sorry,\" I say after a while. \n\n\"Why do you say that?\" he asks, fingers lazily still playing with my hole.\n\n\"I wanted Marius. I wanted to fuck him.\"\n\nKen doesn't say anything for a minute. \"I know,\" he finally sighs.\n\n\"I wanted you more. Want you more,\" I correct.\n\n\"I know that too,\" he says.\n\n\"I'm glad you came in when you did,\" I say.\n\n\"I've been taking care of you here. I stepped out for a minute to speak with the Alpha. On my way back, I don't know how to explain it, I just felt you. It was like you were calling me. And you felt so sad. Then I felt your panic as I got here, and I walked in and saw Marius over you... \" he stops talking for a second. \"I saw red,\" he says quietly.\n\nI wiggle my ass against his hand. \"I'm sorry I made you seed red.\"\n\nHe chuckles and kisses my head. It gives me a weird feeling in the pit of my stomach. \"I couldn't stand the thought of Marius having you. He always gets what he wants. I wasn't going to let it happen this time.\"\n\n\"Always? Do you compete for partners?\" I asked. Was this a regular occurrence?\n\n\"He's my cousin,\" Ken says flatly. \"He likes to win. And his favorite kind of winning is taking what I want.\"\n\nI nuzzle into his furry chest. \"I'm sorry,\" I say again, feeling ashamed.\n\n\"Don't be. Marius didn't win. I did,\" he says, and before I can process that he says, \"Not that I think you're an object I can win or anything,\" and I laugh.\n\nI run my hand up his side and he moves his hand from my ass. He laces his fingers with mine. His hand is furry, that curious white hair covering it. It used to be auburn, didn't it? I'm sure. It is stark contrast to my own hand, covered in ancient sigils and burns. Yet there are a few scars, like mine. He must have been a fighter.\n\n\"Thank you,\" I say.\n\n\"For what?\" \n\n\"...I've never made love before,\" I quietly admit to his chest. He brings me up to look at him. \n\n\"What does that mean?\"\n\nI am quiet as he searches my face. His hands trail my scars. I can't possibly tell him everything. All the ceremonies. All the years of sex torture I endured at the bidding of Jareth and the Circle. The deep, powerful, forbidden magic that stems from the generative force of sex, the basis of the kind of forbidden magic perfected by Jareth... that's not something I can broach in a day. I decide to tell some of the truth and save the rest for later.\n\n\"I've had a lot of sex. This is the only time it felt like... more,\" I say.\n\nI close my eyes and put my head down. Ken's touch is so comforting. It's exactly what I wanted.\n\n\"I've never had it like this, either,\" he says. It feels good to hear him say that. \"And I've definitely never fucked anyone like you,\" he laughs. I push myself off him and sit up, stretching. He wraps his arms around my stomach and kisses my back. \"Someday,\" he says low, in my ear, \"I want to hear about every tattoo. Every scar. I want to know everything about you,\" I tense, old fears bubbling up. He runs his hands along my body, soothing me. \"But that's for when you're ready,\" he says, \"and assuming you stay.\" I snort and push him back onto the bed.\n\nI climb on top of him and straddle him, positioning my ass, hungry again, on his dick, now getting harder. \"I think I'm ready to go again, would you mind helping me?\" Ken smiles and I meet his lips, feeling happier and safer than I've ever dared.\n\n* * * * * * * * * * *\n\nI lay in bed, dozing after Ken has ravished my body again. We didn't bother to clean up- that can be done later. For now, my only priority is reveling in the safety of Ken's arms. His fingers trail my tattoos and scars, runes of the forbidden language carved into my body, images burned in permanence on my skin. To his credit, he does not ask about their origins. I suppose some day I will have to tell him, but now is not the time. I am quite content to do what we're doing.\n\nA soft knock on the door. \"Alvin,\" calls the voice. It is light and feathery. \"It's time,\" and then I hear quiet footsteps slowly recede. \n\nKen sighs. \"Who is Alvin?\" I ask him.\n\n\"Me,\" he says, and then I remember our sentencing, when the Alpha used Ken's full name, Alvin Tyler Bravepaw Jr. Yikes.\n\n\"I forget you have a real name,\" I say, and he laughs.\n\nKen rises from the bedroll and helps me to my feet. \"I still don't know your real name,\" he says.\n\nI drop my gaze. \"I don't either,\" and Ken looks at me, questions in his eyes. \"I know I had a name once,\" I explain, \"before Jareth, before the Circle. But I wasn't allowed to keep those memories. Oracle is the only name I have ever known,\" I cast my eyes to the floor.\n\n\"To me, you'll always be Barbie,\" he says, and I smile. I think he can stay.\n\n\"Who was at the door just now?\" I ask.\n\n\"My grandmother,\" he says. \"This is her house.\"\n\n\"Oh,\" I say. \"What was she talking about?\"\n\n\"She is also our shaman,\" he says, \"and she wants to speak with you.\"\n\n\"A shaman, huh? I didn't know lycans allowed magic users in the ranks,\" I say.\n\n\"She is more than a magician. She is the spiritual leader of our people, and the steward of our traditions. She's also our healer, and the reason why you received any medical care.\" \n\nI nod. \"I am eager to thank her.\"\n\nKen laughs. \"Not looking like that, you aren't.\"\n\nI am about to object when I feel a trickle of Ken's cum slide down my legs. I blush. \"Is there any place to clean up?\"\n\n\"Let me take you to the bathroom first,\" he chuckles.\n\n*****\n\nAfter a short, but thorough cleaning, I step into fresh clothes provided me by Ken. He leads me through a narrow hallway that opens into a kitchen. There, a short, old woman stands before the range. Her face is leathery and worn, but kind; and her long, wild hair springs out in every direction. I recognize her presence immediately. She is who I sensed when all the trouble started earlier. Her powers must be immense, for her presence is overwhelming. Her fingers are quick and agile as she cuts what looks to be herbs and puts them in handmade wooden tea cups. She pours boiling water over three cups, but leaves a fourth unfilled.\n\n\"Have a seat, dear,\" she says quietly. \"We have much to discuss.\"\n\nI take a seat at the kitchen table. Ken sits next to me. His hand rests on my thigh and I take it. The woman notices this but does not remark on it. She seems the type to not miss anything.\n\n\"My dear, I am Elmira Jean Bravepaw, Alvin's grandmother,\" she says. \"It is good you have finally come.\"\n\nShe must be able to read the question on my face because she answers before I can ask. \"I Saw your coming many years ago. I have been preparing for it. The Moon looks after her children. She sends them to each other at various phases in their lives. She works in long stretches of time, across many cycles. I am a Moonchild, and you are as well.\"\n\nThat doesn't surprise me. I've known for a long time that the Moon is on my side. I just didn't know that there are others like me. \n\nElmira continues. \"Every few hundred millennia, a grand time cycle comes to an end. As one cycle ends, a new one must begin. Whether the new cycle ushers in an era of peace or chaos is determined by the actors in the transition's events. We are currently living through such a shift. And you, dear, are a key player in it.\"\n\nAgain, I am not surprised. I was told similar things by Jareth. In fact, it was the whole reason they took me in the first place.\n\n\"I believe the Moon led you here for a reason. You are to find the key to a peaceful cycle. I am sure of it. I believe my duty is to guide you as you seek the key.\"\n\n\"Forgive me Elmira, but I think you have it wrong,\" I say. She does not speak, but allows me to continue. \"I am not a harbinger of peace. I am just an Oracle,\" I say. \"I was raised to put the one true inheritor of the world into power. That is why I escaped from my captors and left- I want no part in these old legends.\"\n\nElmira betrays no emotion. \"So you're somewhat aware of your destiny. I must admit, I am surprised. I figured you would need convincing.\"\n\nMy gaze falls to my lap. I forgot I am holding Ken's hand. He squeezes it, and I am somewhat reassured. It takes some courage, but I have to admit the truth. \"I'm sorry to have deceived you, Shaman; but I am actually the herald of chaos.\"\n\nElmira squints. \"How do you mean?\"\n\nI shift uncomfortably. \"It is how I was raised. Trained. The inscriptions on my body are proof of my calling. I am the shadow on the moon, a shade unto the world. A child of darkness meant to extinguish the last light from the earth.\" I recite the words without thinking, memories of Jareth clouding my thoughts.\n\n\"Why is it you think this?\" she asks. I squeeze Ken's hand again and let it go. I stand, turn my back to Elmira, and remove my shirt. She gasps as my scars and tattoos are revealed. Of all people, she must know the significance of the iconography on my back. A demon, a dark demon whose name was expressly destroyed in all records long ago, features prominently on my back. A circle composed of the runes of the ancient, forbidden language details the prophecy the demon gave as it was banished from the earth, many thousands of years ago. The prophecy details the demon's resurrection and the dark fate of the world it promised to raze.\n\nAlso on my back are images depicting the history of the demon's reign on earth in the previous cycle. Scenes of torture, famine, pestilence, and chaos peppered with the ancient runes describe horror after horror. They are punctuated with scarification and burn tattoos, some of them runes and some images, that tell similar stories. Elmira murmurs in a language I don't know as she lays her hands on my back, feeling the work herself. It sounds like a prayer. For his part, Ken keeps silent. To him, these images would be frightening, or possibly even badass, but they would not mean anything beyond that. I know that Elmira recognizes the severity of this work.",
        "\"My, my, you're a walking curse,\" she says, turning me with her hands to inspect the tattoos and scars that decorate my torso. She is particularly interested in the two blank spaces, patches of unmarred skin that Jareth has not yet covered. One over my sternum, and one over my heart. \n\n\"You truly are the child of the prophecy,\" she says, tears in her eyes. I can't tell why. I pull my shirt back on, embarrassed, and sit down. I taste the tea. It's not hot anymore, but it is delicious- smoky, heavy, and warming. \n\n\"Grandmother,\" Ken says, \"I gotta be honest, I'm totally lost.\"\n\nShe turns to him, a grave tone to her voice. \"You have been assigned a great duty. You are tasked with the protection of this moonchild. You must be up to it. There can be no mistakes.\"\n\nKen nods, readily accepting it. \"I will do whatever he needs. I will protect Barbie with my life.\"\n\n\"Excuse me,\" I say, \"I am capable of protecting myself.\" \n\nElmira laughs then, a sharp, barking sound. Her sunken eyes glimmer. \"Oh, my dear,\" she says, \"Let me tell you what I have Seen. I have a Seen a world in chaos. A world ruined by a demon of unspeakable origin. I have Seen misery brought to the people of the world on such a grand scale as to end it several times over. And I have seen the pains that must be taken to prevent this. I have seen the One who will end it. And many years ago, I Saw that the Oracle would be brought to me by a child of my blood. My dear, you have inherited wyrda magna.\"\n\nThere it is. What the Moon told me. I remembered what else it said. \"Trust,\" I murmur, \"Believe.\"\n\n\"Yes, child,\" says Elmira. \"You have a long journey ahead of you. There will seem to be no end to your struggles. But you will not do it alone. Ken will walk with you, and I will walk with you as far as I can. In the end, you must take the final steps alone. Do not forget, child.\" Then her face goes blank. I am worried for her, because she is very old, but her mind returns. \"I will pour another cup of tea. My guest is arriving,\" and she gets up from the table.\n\nAt that moment, I sense a powerful presence. The Alpha enters the kitchen. Ken stands for him, and I get the feeling that I should too. I make to stand, but the Alpha speaks. \"No need,\" and his voice is deep and commanding, \"You may sit,\" and Ken and I sit together. Ken is visibly tense with the Alpha in the room, though Elmira could not be less bothered. She hands him his cup of tea, which looks comically small in the big man's hands.\n\nThe Alpha takes a long draught from his cup. He seems to carefully weigh his words. \"First, I would like to thank you for saving my life, stranger,\" he says, his voice quiet and low. \"We were waylaid in the middle of of our council meeting. Those dirty wiks-\" Elmira makes an indignant noise, and the Alpha bows his head in deference. \"My pardon,\" he says, \"those witches caught us off guard. We were unprepared for their assault.\"\n\nI'll say they were unprepared! Those lowlife idiots from the Circle wouldn't have been able to pull such a simple sleep spell on me. But it appears the Alpha has more to say.\n\nHe clears his throat. \"Second, I would like to thank you for defending our community. You had no reason to, and could have easily used the distraction to escape. As Alpha of this pack, I am extremely grateful.\" He bows his head low to me, eliciting a murmur of surprise from Ken. \"As a gesture of my gratitude, I want you to know that I have decided to waive any charges against you. While you are here, you stay as our honored guest.\" \n\nElmira nods at these words, and Ken's hand loosens its grip on me. I wasn't even aware he was so nervous. \n\nThe Alpha speaks again. \"However, I have questions for you. Forgive my rudeness, but these questions concern the security of the pack, so I must be blunt.\"\n\nI nod. I understand that Jareth sent his minions solely to recapture me. I am a danger to this pack. I'm a danger to Ken. I hate this feeling.\n\n\"What do you know of the group who attacked us?\" asks the Alpha.\n\nI exhale. I'm not sure I have the time to recount the whole history of the Circle. I decide to give him the truth in brevity. \"They are called the Circle. Their high priest is a sorcerer called Jareth. They operate in the shadows, and their ultimate goal is to summon the First Ones from their eternal banishment.\" I take a breath. This next part is still hard to admit. For his part, the Alpha waits with patience. Ken squeezes my hand.\n\n\"I am the key to their plan. They call me Oracle. My full title is Spero Interfectorem, Oracle of Chaos and Darkness. I am the one who is to awaken the First Ones so they may begin a new cycle of pain and torment. I escaped from this group a few days ago, and was shortly captured by your pack.\" My words hang in the air, heavy. No one speaks for a few minutes.\n\nThe Alpha absorbs my words before he speaks again. \"How did they infiltrate our complex?\"\n\nI sigh. \"They used a simple sleep spell which puts the victims into a trance, rendering them unconscious. Your camp has no wards against such magic, so it was relatively easy for that many magicians to cast a spell on so many of your lycans.\"\n\nThe Alpha nods. He turns to Elmira. \"What about the protections placed on our land by the ancestors?\"\n\nHer lips press together, displeased. \"They were not enough,\" she says simply. There is no room for argument in her words.\n\n\"I see,\" the Alpha says. His brows knit together, thinking. Then he says, \"I feel certain this... Circle will come for you again. That makes a security liability for our pack.\"\n\nI know where this is going. I was going to leave anyway, I guess. \"I understand,\" I say, \"I will depart as soon as possible.\" \n\nThe Alpha's jaw tightens. \"Hold on,\" he says, and the authority in his voice quells mine. \"I cannot allow you to leave the pack. Expelling a guest is a violation of our customs, and I will not turn away anyone in need.\" My anxiety quiets, just a little.\n\n\"However,\" he says, and I am expecting something terrible. \"I cannot, in good conscience, expel my son's mate.\"\n\nI am confused. I look to Ken, hoping for an answer. His eyes meet mine, and they are pleading me to understand something. I look to Elmira, a ghost of a smile on her grizzled features. I learned about the lycans during my time with the Circle. As our people's natural hunters, Jareth made it his business to be thoroughly informed about the threat. Lycans take mates, usually for life. The Circle's research demonstrates that the bond between lycan and mate is very deep, nearly impossible to break. The lycan and its mate are connected for life. Jareth and the Circle conducted extensive torture on many lycans and their mates to glean this information. But for all the Circle's research, they were never able to understand exactly how the mark works.\n\n\"I don't understand,\" I say slowly. \"You are implying that I am Ken's mate, yet we have not completed any ceremony.\" Elmira laughs, and the Alpha growls. I'm not sure what to make of those reactions.\n\n\"My dear, you are most assuredly Ken's mate,\" Elmira says. \"I can smell the bond between you. Any lycan could... and the mark on your neck is evidence plenty.\"\n\nMy fingers fly to the place on my neck where Ken bit me. The spot that caused the two most powerful orgasms of my life. I snatch my hand from Ken, his face says everything I need to know. Shame, sorrow, and... a hint of pride? My stomach turns over. I may be sick!\n\n\"This brings us to my last point,\" the Alpha says. \"Junior... you know the rules about marking non-lycans.\"\n\n\"Alpha,\" Ken says, hackles instantly raising, \"I knew from the second I met Barbie that he is my mate. I couldn't control myself any more than you did when you marked your mate!\"\n\n\"Enough!\" the Alpha growls. The malice in his voice sets me alight with fear. The power radiating off this man is incredible. If he were a magic user, he would be quite a force.\n\n\"Junior, you marked a human. A witch, no less. There is no precedent!\" the Alpha yells. Ken, though still defiant, flinches. He bows his head. Elmira just smiles her weird, mystical smile.\n\nThe Alpha hangs his head in his hands. \"Where do I begin? The council will have a field day. The inter-pack circle will convene. What a headache! I'll be in meetings for weeks,\" he sighs. He raises his head and looks directly at Ken and I. \"But I can smell it. You are mates. And the mark is the clearest I've seen.\"\n\nElmira grunts something about \"tangled webs\".\n\nThe Alpha laughs, which surprises me. I didn't think this massive man was capable of laughter. \"So it seems,\" he says, and he rises. \"Junior, you stand before council at dawn. We have much to speak about.\" Ken nods and takes my hand again. It feels good to have his hand back.\n\n\"And you, honored Oracle,\" the Alpha says. I swallow nervously. \"I would also like you to appear. As a guest, I can't make you. But you are a security risk, and we need a plan.\" \n\n\"I accept your invitation, Alpha,\" I say. He nods and turns to Elmira.\n\n\"Mother, would you please join me in my quarters? The Alpha has many questions for the Shaman.\"\n\nElmira nods. \"Certainly,\" she says. \"Boys, you clean up the tea things. I trust you can make dinner for yourselves. I will likely be gone the whole night,\" she says, and as she reaches the door with the Alpha, she turns back to me. \"And make sure to change your bandage before you sleep, dear, I don't want the burns getting infected. When I get back, I want to talk about Junior's new hair...\" And they are gone.\n\nFor a long moment Ken and I do not look at each other. We say nothing. So many emotions roll in my head.\n\nFinally Ken breaks the silence. \"So...,\" he says, \"You're like the antichrist or something, huh?\" he finishes lamely.\n\nI narrow my eyes at him, fingers rubbing the spot on my neck where he bit me. It stings a little but feels really good. \"Your grandmother seems to think differently.\"\n\nHe chuckles. \"Gram usually gets what she wants,\" he says. \n\n\"So do I,\" I say, and his eyes get dark and serious.\n\n\"What do you want?\" he asks. The tension is thick between us. What I really want is to push him down on this table and mount him like a bull. I have a hard time taming my urge to jump him even though I was totally sated a few minutes ago. It's weird, I feel like I can smell better. It's almost like I can smell his... desire? \n\nI lean in to him, put my other hand on his thigh. I slowly slide it up and his breath hitches. \"I want...\" and before I can say what, my stomach gurgles so obscenely loud that it rattles the teacups on the table. I am aghast but Ken is amused. \n\n\"I want dinner!\" I proclaim. Ken laughs and takes me in his arms, kisses me softly.\n\n\"Dinner it is,\" he says, when he comes back up for air. I stare into his eyes, those golden spheres. There's something he wants to say but isn't ready to voice. I won't rush him.\n\nKen gets up and moves about the kitchen, preparing to make us some food. I would help him but I have never cooked before. When I wasn't being ritually starved by the Circle they would prepare my meals for me. I watch as Ken chops vegetables. My mark twitches again.\n\n\"What did they mean by marking me?\" I ask, though I have a pretty good idea. But since my knowledge is limited and one-sided, I think it best to ask the source.\n\nKen pales. \"A mark is a soul bond between a lycan and its mate. It never goes away. Once you mark someone, you are bound to them for life,\" he studiously avoids eye contact with me, seemingly fixed on cooking.\n\n\"So we're bound for life?\" I ask, quiet. He nods.\n\nMy brows knit together. \"What if I didn't want to be marked?\" I ask, and he stops chopping. He looks at me with that same stare, the one that says so much more than he can allow himself to say.\n\n\"I'm sorry,\" he breathes, and his eyes shimmer. \"I couldn't control it. My wolf had to do it. Had to mark you. He took over and...\" Ken turns away, unable to look at me.\n\nI don't know anything about this mark. I didn't ask to be brought here, to meet Ken, or to be soul-bound for life by a lycan, of all creatures. Seems like I just go from one state of bondage to another. But this mark... I should be angry. I should be furious. Maybe it's the strange magic of the mark, but I'm not mad at all. Instead, I feel a weird peace about it. \n\n\"Hey,\" I call, moving to him. I lean into him and wrap his arms around me. His breath is soft against my hair. \"I'm not upset. I don't understand everything yet, but I'm not mad at you. I actually kind of like it. And it did feel really good when you marked me,\" I say, and I can feel him getting hard. \"At least it wasn't Mari,\" I say, eliciting a growl from Ken. I giggle. \"And I'm pretty sure I can find a spell to take this mark off if I wanted to,\" earning another growl from Ken, and he grabs me a little tighter. \n\nHe lowers his lips to my ear. \"I would mark you again,\" he says, and my breathing quickens. He kisses slowly down my ear, traveling down my neck until his lips hit that mark. \"I might mark you again right now,\" he says, and I tip my neck to him to give him full access. His teeth lightly graze over my mark and I am instantly hard again. I rock against him, trying to give him as much of my neck as I possibly can. His teeth on my neck feel amazing, the pleasure surely intensified by grazing that mark. I moan, and he breaks away.\n\n\"More,\"I whimper, and my stomach growls again. I don't even care, my stomach can eat itself if I can just get my hands on Ken again.\n\nKen laughs. \"How 'bout after dinner?\"\n\n* * * * * * * * *"
    ],
    "authorname": "haydentwaters",
    "tags": [
        "gay",
        "gay male",
        "gay sex",
        "magic",
        "werewolf",
        "long"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/barbie-ken-ch-02"
}