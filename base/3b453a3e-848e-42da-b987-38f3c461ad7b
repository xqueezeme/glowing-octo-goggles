{
    "title": "The Creators Ch. 15",
    "pages": [
        "Chapter Fifteen: The Huntress\n\nPrelude: Scavenger \n\nTERA\n\nI had once seen a painting of Hektinar in the Drastin Gallery. The steel spires stood like needles that pierced the sky, their heights breaching the clouds to defy the sun. The stadiums were so large that their steel canopies made their own atmospheres, the bridges were so long that their ends could not be seen, and the university at its center was the grandest display of architecture ever conceived. The entire city glared in the sunlight as if perpetually aflame, a foreboding symbol for its fate. The painting had captivated me, and I remembered feeling a great sense of loss that such a treasure had been torn from the world. But as I looked upon Hektinar now, I was even more dazzled by its corpse. \n\nThe spires were like melted candles, the stadiums were deflated hills, and the bridges were twisted causeways leading to nowhere. The twice-tempered steel still shined in the light, never to be rusted, only to be blanketed and reclaimed by the desert. The sand filled the gaps where streets used to be, and climbed the bases of the drooping towers. The steel effigies now stood as islands in the vast desert ocean, but the university was a mountain. \n\nIt was obvious that Arbitrus had directed most of his hate at the great melted dome. I could see the concentrated points where his flame struck, and I could see his frustration that the building would not fall. He'd tried to take out the supports, he'd tried to compromise the superstructure, he'd even tried collapsing other buildings atop it, but all his attempts had been in vain. The structure still stood\u2014deformed and mutilated\u2014but still there. I looked back over my shoulder at the vast promenade of orcs, and saw Julia impatiently waiting for me at their front. She could wait a little longer; I was here to get rich. \n\nThere had been thousands of scavengers here before me. I could see the evidence all across the derelict city in the form of outturned houses and blown-out vaults. Maybe the lucky ones had stumbled across something, but most of Hektinar's wealth had melted with its steel. Fortunately, the treasure I sought would never have been scavenged by the likes of orcs or goblins. I could only hope that it hadn't been stolen by fire or time. \n\nI aimed my crossbow at the high tower of the university, and pulled the trigger. The line of rope oscillated behind the arcing grappling hook, then went taut. Perfect shot, as always. I staked my end of the rope, hooked my hook around it, then began my ascent. If I hadn't been so well-fed, the climb would've exhausted me, but I had vast stores of energy in my muscles now. I scaled the five-hundred-foot height, taking breaks here and there by dangling on my metal appendage. I missed my hand, but I had to admit, there was a great advantage in not having to worry about grip strength when climbing. After half an hour, I was atop the dome, and jogging to the moonroof. \n\nI imagined that there was once a vast planetarium beneath the dome. Likely, the sun would've filled the hole come noon, and illuminated great gyroscopic solar systems that boasted planets the size of rooms. During the night, I imagined an enormous telescope would've been brought through the hole, and that astronomers would've marveled upon the heavens. I could only imagine these things, for it was obvious that Arbitrus Gen had used this hole to hollow the entire building out. \n\n\"Well, shit,\" I grunted. \"I'm already up here; might as well find out.\" \n\nI slid down my rope into the vast atrium, passing floor after collapsed floor until I reached the bottom. Once there, I looked around, and frowned. Absolutely nothing had survived. There wasn't even debris in here; just melted steel floors stacked atop each other like pancakes, and piles of accumulated sand below the moonroof. There wasn't even a... hey, what's that?\n\nSomething round and black protruded from a mass of melted steel. Upon closer inspection, I saw that it was an obsidian vase. Well, it was worth something. I tried to pry it from its steel parent, but it would not budge. After another minute of struggling, I realized that hundreds of scavengers had probably attempted this feat\u2014for the vase was rather obvious\u2014and none of them had succeeded. Of course, none of them had a hand-forged hook made by the Heat Bringer herself. I hacked at the parent metal for an hour, chopping around the base as sparks flew past my eyes. When I finally managed to free the damnable thing, it was so fucking heavy that I had no hope of getting it out. I knew I should've brought one of the Breytans with me.\n\n\"Hmm....\" I mused, looking at the priceless ancient artifact. \"I'll be damned if I'm going to let some other fucker get rich off my hard work.\" And I smashed it to pieces with my metal hook. \n\nAnd there it was. Beneath the shattered shards of obsidian, entombed within a vase that had survived the apocalypse, was the very thing I'd come here to find. I grinned as I picked it up. It was heavy for what it was, but it weighed a mere fraction of what it was worth in gold. I just had to find the right buyer, and fortunately, I happened to know someone who would pay through the fangs to get it. I tucked it in my satchel, took a swig of orc-protein from my flask, and began my ascent. I didn't know if I'd ever get the opportunity to capitalize on my hard work, but it was worth the effort. If shit went south with Julia, I needed as many escape routes as possible, and this treasure was worth at least an oceanic crossing on a luxury ship. If I was going to flee for my life from an enraged psychotic god, I sure as shit wasn't going to do it in coach. \n\nPart One: Dreamscape\n\nWILLOWBUD\n\nI knew that I was asleep. It wasn't lucid dreaming, for my subconscious offered no nightmares to torment me, but an odd state of awareness. I was floating in blissful blackness, detached from myself, but not separate. I could feel the blankets wadded around my fetal-curved body, the pillow pressed wetly against my matted hair, and the chill that wracked my form as my mind blazed with fever. I wasn't sure if I was dying, but I hoped I was. If death was simply walking into the blackness, then it was a merciful finale. Then the brightness came, and I knew that such mercy would not be afforded. My crusted eyes peeled open to reveal a blurred white face with crimson eyes staring down. I recognized it, but I couldn't remember from where. I groaned, and felt a dull pain in my arm. There was a bamboo needle in the vein, connected to tubing that led to a hanging blood bag. \n\n\"No,\" I murmured, \"just let me go.\" \n\nMy savior didn't respond. She laid a hand on my forehead, and it was an oasis of cold against my infernal brow. The small comfort pushed me back into sweet blackness, and I left the world with a smile curving my face. This time, I did dream. I was a little girl racing through the treetops of Arbortus, ducking oncoming branches as my soles slid expertly along the bark. I leapt from one tree to the next, my body flailing in the air, a thousand feet of nothing between me and the forested earth below. It didn't matter. I'd catch the oncoming branch as surely as I'd caught the last thousand. My hands closed around the column of wood, and I swung myself forward, my feet aimed for the next wrung of the great natural ladder. I missed. I overestimated my trajectory, and felt a moment of pure disbelief as the branch passed below me. \n\nThen, I was falling. Falling and screaming, flailing stupidly for refuge that wasn't there. The ground rose to me with terrible speed, but every second was an eternity. A pair of arms wrapped around me, and I was hoisted into the air. I let out a cry of pure joy, and turned to see Astrid smiling down at me. Her hair was gone, her scalp was cooked, and her wings were sliced off. She stared at me from dead eyes, looking at the distant light high above. I was in a cavern of my own making. Mother was watching me from the corner, a questioning look in her green eyes. \n\n\"Why, Willow?\" she asked. She held up her hands, or what was left of them. The fingers were gone, the palms pierced, the flesh stripped away. \"Why?\" she asked again. \"Why, why, why, why...\" she disappeared, the grotesque remains of her body fading away, only her untouched face glowing in the void, asking its tortuous question. \n\n\"Why?\" another voice asked. I turned around to see Lucilla, a hole between her sapphire eyes. Her voice harmonized with Mom's, then a third completed the chord. \"Why?\" my father asked, his throat slashed open. \"Why, why, why, why, why....\" \n\n\"I know why,\" a fourth voice cut through it all. It was a drawling voice, a voice I hated and loved in equal parts. Corruption stepped up to me, her white eyes burning in their black depths. \"Because she wanted to, that's why,\" Corruption said, running her hand across my cheek. \"She'll blame me to convince herself, but deep down, she knows the truth.\" \n\n\"No,\" I whispered, voice choked with tears. \"No, I didn't! You made me do it!\" \n\n\"I just took the pain away,\" Corruption smiled sadly. \n\n\"You took me away!\" I screamed back. \n\n\"I was just the mask, Willowbud,\" Corruption said softly. She was fading, they were all fading. Blackness swallowed the world, leaving me blissfully alone. \"Give someone a mask, and they will show you their true nature,\" her final words hissed from the void, then she was gone with the rest. I sighed, and dropped to my knees. Nothing. Wonderous, silent, nothing. Drip, drip, drip, drip. \n\n\"No,\" I whispered, the fear creeping up my spine. Drip, drip, drip, drip, drip, sizzle. I looked up, and there she was. Julia Gendian stared at me with cold, merciless eyes, her body encased in smoldering blue flame. \n\n\"I am the Holy Mother,\" Julia proclaimed, her voice dead. She raised her hand, and the world was consumed in fire. I burned ceaselessly, my flesh scorching but not peeling away, my fat melting but not dripping off me. I contorted and wrenched, dancing in agony, but I did not lose my mind. I stayed horrifically aware, knowing without a doubt that this was eternity. I heard laughter. It was a sardonic chuckle, and it came from within. Night Eyes watched me from the recesses of my consciousness, and she laughed and laughed as I shrieked and shrieked, and shrieked. \n\nMy eyes blinked open. I was in a one-room cottage, the roof made of wood rafters and straw, the walls made of wooden planks that matched the floor. It was night out, and the cozy abode was lit with a warm hearth that radiated against me. I was aware that I was wet. Beneath the numerous blankets piled atop me, I was lying in a pool of sweat and god-knew what else.\n\n\"Soup?\" a familiar voice asked beside me. I turned, and there was Gloria Titus. Pale-faced, red-eyed and ruby-lipped, with a frame of black hair and cheekbones that seemed impossible. She was supposed to be dead.\n\n\"How?\" I asked, barely any sound coming from me. \n\n\"Eat,\" Gloria answered, and placed the spoon to my chapped and split lips. I didn't have the strength to close my mouth and turn away, so I dumbly let the soup dribble down my chin instead. Gloria gave me a disapproving look, then tried again. \"I know it's not great; I haven't had to cook for thousands of years, but it is sustenance, Your Holiness, and you need it.\" \n\n\"Your Holiness,\" I laughed weakly, and that laugh turned into a violent cough. I hacked and sputtered, and sprayed the blankets with blood. Gloria blotted my chin and lips with a napkin, then she tucked that napkin away. She'd save it for a later snack, I was sure. \n\n\"You're not dying,\" Gloria assured me, reloading her spoon. \"Your throat is just raw from coughing so much. You need something to soothe it. Eat.\" \n\n\"Why didn't you just let me die?\" I asked hoarsely. \n\n\"I couldn't do that, Your Holiness,\" Gloria answered, stubbornly bringing the spoon to my lips. \n\n\"I did it to you.\"\n\n\"That wasn't you,\" Gloria placed the spoon to my lips and tilted it, and once again, I let it spill down my chin. \n\n\"It was me,\" I whispered, angered by her persistence. \"Corruption is just a mask that shows us our true selves.\" \n\n\"Corruption removes your true self,\" Gloria said, trying at a third spoonful. \"The basic animal in me wants to suck your blood to the marrow, but I choose not to. Primal instincts are ubiquitous and the same for almost everyone; eat, drink, fight, fuck, kill, run, hide. It is our higher selves that make us who we are.\" \n\n\"What the fuck do you know?\" I hacked blood through my words. \n\n\"I'm three-thousand years old. I've picked up some wisdom along the way,\" Gloria smiled to me, fangs poking her bottom lip. \"One great nugget of wisdom is this: hungry people are not pleasant people. Now, eat.\" \n\nI relented this time, and took the soup down my throat. The moment it touched my stomach, my guts churned, and I felt near to vomiting. The feeling passed, and in its wake came a hunger I had not known since I was a starving urchin on the streets of Drastin. I tore the bowl from Gloria's hands, and upturned it down my gullet. She had a whole pot bubbling by my bed, and I dipped my bowl again and again, feeling my strength return to me with each mouthful. When my belly was distended and my insides were pleasantly warm to the esophagus, I let the bowl clatter to the floor, and let out a belch. \n\n\"I guess my cooking's not as bad as I thought,\" Gloria mused with a smile.\n\n\"That was the worst fucking soup I've ever had,\" I grumbled, and turned to my side. I hated her for her kindness. There was a silence where I hoped she'd admonish me, but she just filled the moment with the sound of a poker against the fire. Fresh warmth from the hearth swept over me, and I felt myself become drowsy in it. My eyes closed, and there was Julia. The warmth around me was scorching heat, the blankets were sheets of flame, and I was burning, burning and blackening in my subterranean hell. I bolted upright, bedding and pillows flying off me, my naked body exposed to the cold. I didn't know what to do. Run away; it had always been Willowbud's first instinct. Run as far as I could. \n\nI leapt from the bed, snagged my ankles in the sheets, and tumbled to the floor. My knees and elbows sang with pain, and when I tried to right myself, I realized I was still too weak. I crawled to the door, fingernails scraping into the floorboards, splinters stabbing beneath them. I felt soft hands on my shoulders, and warm breath on my neck. Strong arms encased me, pulling me into a pillowing bosom. A soft voice whispered gently, and I melted into the maternal lap. \n\n\"I'm sorry,\" I whimpered. \"I'm a coward.\" \n\n\"So am I, Your Holiness,\" Gloria cooed, and rocked me back and forth. I fell back into dreamless sleep, and found bliss in the void. \n\nFor the next three days, Gloria tended to me. I'd spent myself near to death during my flight from Julia, and I was paying for it dearly. I suffered through fevered sweats during the night, and aching weakness during the day. Gloria would close the shutters from the sun, though she did leave one window open for me to look out. I was somewhere in Drastinar I reckoned, though far away from Drastin proper. The plains and flat arboreal woodlands that made up eastern Drastinar were gone, giving way to rolling hills that ascended to mountains in the distance. Those were the dwarven princedoms, and a few hundred miles behind them was the Gratoran Wall. I didn't tell Gloria that I planned to go there; I didn't tell Gloria much of anything. Our talk was sparse, mostly beginning and ending with offers for food and the need to change my bedding. She bathed me in hot water every morning, and I was relieved to be rid of the grime of the previous night. During the day, I'd spend most of the time staring out the window, ignoring the pile of books Gloria left me. I wasn't much of a reader anyway. Time passed tortuously, and though I rarely spoke to my caregiver, I was glad for her presence. Being alone with just my thoughts was a terrifying prospect. \n\nOn the fourth day, I found the strength to step out of bed. I placed my hand against the wall, and took three trepid steps to the tub. Gloria reached out to support me, and I waved her away. I stumbled through the fourth step and caught myself on the tub's lip. Gloria was of course right behind me, her lightning reflexes propelling her. She held me by the armpits, and I eased myself in, shuddering contentedly as the warm sudsy foam encased me to the neck. \n\n\"I see you're feeling better,\" Gloria mused softly as she began to pour water over my hair. \n\n\"It's not like I was paralyzed,\" I muttered. \n\n\"Your blood pressure is clearly back to where it should be,\" Gloria replied slyly. \n\n\"Why do you say that....\" I trailed off, and noticed the morning wood I was sporting, sticking defiantly from the foam. \n\n\"Huh,\" I grunted. \"I always thought you were a dyke.\" \n\n\"What?\" Gloria asked, amusement in her voice. \n\n\"If I don't pay attention, this thing will adjust itself to the signals of nearby potential mates,\" I yawned. \"So you're not gay.\" \n\n\"Not entirely, no. I didn't know I was putting out those signals,\" Gloria chuckled to herself. \"Surely, Brandon told you about....\" Gloria didn't finish that sentence, but instead gulped, and continued to lather suds into my hair. \n\n\"I'm sorry,\" I said quietly. \"I miss him too.\" \n\n\"I left him because I was afraid of you,\" she hissed, trying to mask her tears. \"I should've stayed, but I lost faith. If I had just stayed and helped then... maybe... just maybe...\" Gloria's hands were shaking against my head. I reached up, and clasped my hand over hers, squeezing it until the trembling stopped. \n\n\"What were you doing out there?\" I asked softly. \n\n\"Looking for redemption.\" \n\n\"You didn't find it.\" \n\n\"I found you.\" \n\n\"Don't make a project out of me. You saw what happened the last time someone tried.\" \n\n\"I am but a servant, Your Holiness.\" \n\nI closed my eyes, and let out a long slow breath. \"Don't call me that anymore.\" \n\n\"Don't run from it,\" Gloria whispered. \"I know it's tempting to hide in obscurity, but the world needs\u2014\" \n\n\"The world needs me to die like the others,\" I hissed. \"I'm not the woman you want, Gloria. Julia was that woman, and I destroyed her.\" \n\nGloria stayed silent. She recommenced washing me, blotting my shoulders and kneading her soapy fingers into my hair. \"Where ever you go, Willowbud, I will go,\" she whispered. \"I am your servant until death do us part, I swear it.\" \n\n\"What if I tell you to leave me the fuck alone?\" \n\n\"I'll tell you to go fuck yourself,\" Gloria muttered, and planted a kiss atop my head. \n\nWhen Gloria extracted me from the bathwater and toweled me off, I felt as loose as a noodle, but there was one part of me that was still very rigid. She pretended to ignore it as it poked and prodded her while she dried me, but when she laid me on the bed, there was no denying the pulsating bronze organ that stood like an obelisk from my crotch. \n\n\"Great Creators, Willowbud, it's been over an hour,\" she muttered, eyeing me with a little too much curiosity. \n\n\"Just pull the covers over me.\" \n\nShe glanced from my crotch, to my eyes. \"I can\u2014\" \n\n\"No.\" \n\nShe cocked her head, and a little smile formed across her lush red lips. \"You have incubus blood in you. If you don't relieve yourself, you'll be up all night\u2014quite literally.\" \n\nI narrowed my eyes at her, wrapped my hand around my cock, and began to stroke it. \"Is this what you wanted to see?\" I growled. \n\n\"Yes,\" she answered without shame, a glint of wicked amusement in her red eyes. She sat back in her chair, poured herself a glass of wine, and watched me with acute interest as I sloppily fondled myself with my uncoordinated numb fingers. After five minutes, all I'd managed to do was tire my forearm. Gloria sneered as she crossed one leg over the other, revealing what she wanted me to see. I glared at her, spit on my nondominant hand, and went right back to work. After doing nothing but giving myself a painful burn, I let out a groan of frustration, and rolled over. ",
        "\"What a show,\" Gloria tittered from her chair. \n\n\"Eat my ass,\" I grumbled. \n\n\"If that is what you\u2014\" \n\n\"Go fuck yourself.\" \n\n\"With pleasure,\" Gloria cooed huskily, opened her pale thighs, and sank her fingers deep inside her hairless slit. \n\nI whipped my head around with a snarl, stubbornly shut my eyes, and realized with despair that the image of Gloria's masturbation was burned right behind my eyelids. My erection pressed between my belly and the bedding, but I refused to touch it. After a few minutes of enduring her sonorous moaning, Gloria finally let out an orgasmic sigh. I kept my eyes fixed shut like a petulant child pretending to sleep, and tangled myself into the bedding until I couldn't move. Trapped in my self-made cocoon of celibacy, I found some measure of peace in the idea that I could not exacerbate my problem.\n\nGloria's heels clicked against the floorboards, and she strolled into my vision, now fully-clothed in her black robe. She knelt beside me so that her face rested on the bed, and she stared into my eyes. \"Why do you punish yourself?\" she asked. \n\n\"Maybe I just don't want to fuck you.\" \n\nShe grinned with her blood-red lips. \"That would be a lie from anyone's mouth.\" \n\n\"What the fuck do you know?!\" \n\n\"About you? Not much at all, but I've become very perceptive with people during my long time on this earth. Every predator makes a study on the behavior of its prey.\" \n\nGloria climbed onto the bed, and nestled herself next to me. I grumbled and rolled away from her in my snarled tube of bedding until I nearly toppled off the other side. Gloria persisted after me and snuggled against my back, trapping me between her body and the three-foot drop to the hard floor. \n\n\"No means no!\" I growled. \n\n\"It always does at first, but I have a way of making it mean quite the opposite.\" \n\n\"Why are you trying so fucking hard?!\" \n\n\"Because you need\u2014\" \n\n\"I DON'T NEED A FUCKING THING FROM YOU!\" I shrieked. Outside, I heard the wings of a startled bat flap away from the roof, leaving only the echoing silence in my voice's wake. \n\nGloria nurtured the silence for a moment, then whispered, \"I'm sorry, Willowbud. I... I misread you.\" \n\n\"And you said you knew everything about people,\" I hissed. \n\n\"It's easy to forget that you're not prey,\" Gloria said, and placed a gentle kiss against the nape of my neck. \"You're not a wolf in sheep's clothing; you're a wolf with a sheep-complex.\" \n\n\"Stop trying to know me.\" \n\nGloria chuckled ruefully. \"And that's the heart of it all, isn't it, Willowbud? Stop trying to know me. That right there is you at your very essence.\" \n\n\"Fuck you.\" \n\nGloria wrapped her arms around my blanket bundle, and scooped me into her embrace. I wiggled helplessly in my bondage of blankets, but surrendered with a whimper when the exhaustion took me. It always ended with a whimper. But Gloria didn't try anything. She didn't hold me down and take me like so many had before. She just ran her elegant fingers through my hair, and rocked me gently back and forth in her warm secure hold. Then, she began to sing. It wasn't in a language I understood, but its tenor was mournful and gentle, a feeling of loss tinging her voice. She had such a beautiful voice. It leaked into my ear, and calmed the maelstrom in my mind. Blissful darkness took me, and my sleep was blessedly dreamless. \n\nTHE HUNTRESS\n\nI didn't have a name. My mother once gave me one, but it was in my infancy, and I had forgotten it. How long ago was that? I couldn't really know. I knew that I had been born into this world in agony, as all children are, and while my mother nurtured me to the best of her ability, she didn't offer me any kind of love. It was an important lesson for me to learn at a young age, but then again, I didn't know if I was yet removed from the ignorance of youth. Perhaps I was an old woman; I couldn't really say. Time was such a strange thing to me. Had I seen that moon before? It looked so familiar. I must've hunted beneath it a thousand times, swooping down through the trees, burying my fangs into flesh and sucking my victim dry. Mother had been more particular about her tastes, but Mother had been gone for such a long time. I didn't even remember her face. I just ate what was available to me. A huntress couldn't be too picky when the pickings were too few. \n\nI gnawed on the neck of a fox, and stared up at the cold blue moon. It was the very depths of the night, and I was feeling my liveliest. My insides were crawling with hunger, but not just that of my belly. I needed to find a mate. I'd had many mates in the past. Tall, short, fat, skinny, hairy, bald. I'd even had women before. I ran my hand through the wisps atop my head, and felt the coarse flesh of my patchy pate. I plucked one of the few black strands left on my head, and frowned at it. I doubted any sane mate would ever desire me anymore. When did I lose my hair? Ages ago, probably. I must've been a very old woman, for my memory was awful, and the fractured remains of it were like a fever-dream of absurdity. The blessing of being a huntress was to simply be a beast of instinct. Anything but the eternal now was irrelevant. The wind was cool on my pallid flesh, the air was sensual through my wisps of black hair, the blood was hot in my mouth, and the hunger stirred in my nethers. These were the only things I needed to concern myself with. \n\n\"What do you think, Mrs. Fox?\" I asked the dead shriveled ball of orange fur in my hands. \"Shall I find myself a man?\" \n\nThe fox, of course, did not answer. \n\n\"You found yourself a man,\" I muttered, and recommenced gnawing on her. \"You had a whole litter of little suckling pups in that den. Don't worry; I left one alive. If he survives, then you're life was not in vain. If he dies, well...\" I tossed her carcass to the ground. \"...he was weak and didn't deserve to live, and removing your weak genes from the fox pool was a favor to the rest!\" \n\nThe fox stared blankly up at me. \n\nI sighed, and folded my arms in my lap. \"That was all terribly callous of me, Mrs. Fox, I am sorry, but when you put your mind to eating babies, you basically have to go full-villain. I'm sure you understand, one predator to another. Speaking of which....\" I glanced down at the little cottage at the edge of the forest, and frowned. That other predator was staring right at me. I didn't like her one bit. Mostly because she was infringing upon my territory, but also because she had captured a plump little treat and wouldn't share. The nymph was like veal; tender and succulent, too weak to even stand on her own two legs. Oh, she looked so scrumptious! But alas, the other predator always guarded her, and though I was immensely powerful, I could sense that she was even more so. This one was so dangerous that she wasn't even a predator anymore; just a carnivore raising her own livestock. I licked my lips and grinned. I guessed that made me the bad little fox ready to raid the chicken's coop. Any day now; the farmer couldn't watch her hen forever. \n\nWILLOWBUD\n\nThe next morning, I awoke feeling lightheaded. Well, one of my heads felt light; the other was so full it was near to bursting. I managed to unroll myself from the blanket burrito I'd made, and my cock sprang up so fast that it slapped my belly hard enough to hurt. \n\n\"Good morning, Willowbud,\" Gloria called from her kitchenet, and glanced at me. \"What a good morning indeed.\" \n\nI grumbled, and tried to get out of bed on my own. No use. I needed to piss like a racehorse, but my masculine organ was only going to let one kind of fluid out of it this morning. With a low growl, I wrapped my clumsy fingers around my throbbing shaft, and began to masturbate once again. Gloria just smiled to herself, and turned back to the wood stove. She whistled and hummed, being overly casual as I awkwardly beat my meat. Goddamn, it was taking a long time. The need and the sensation were there, but the act was void of desire, and without that critical ingredient, I might as well have been stroking my foot. \n\nI closed my eyes, and Astrid's face swam into view. She was as she had first been when I met her; innocent and brave, exuberant and brazenly curious. I remembered the way she blushed so furiously when I caught her masturbating in her winged-shell. She was so uncomfortable in that moment, but it was the wonderful kind of discomfort; that discomfort of growth and maturation into something beautiful. I remembered the way she cautiously mounted my face, and I remembered the way she tepidly lowered her pelvis until her succulent cheeks enveloped my world in sweet musky darkness. In truth, I had been nearly as scared as she had been. I was playing a character, an idea of Willowbud, a fantasy of what I wanted her to see me as. Anything but the weak little coward I truly was. \n\nSo I played the cool and collected douchebag, the mysterious woman with know-how and street-smarts, the levelheaded easy-goer who took everything in stride. Who the hell was I pretending to be? Night Eyes without the psychopathy. An idea of what I was supposed to be, but wasn't; an adult Willowbud. But that woman was a lie, for in truth, I was a broken little girl no older than six, and I carried the experiences and memories of another woman like baggage on my psyche. Only a woman as na\u00efve as Astrid wouldn't be able to see through the thin veil of bullshit I wore. I should've let her go. I should never have tried to impress her. Why the hell didn't I just keep on going through the Gratoran Desert? Why the fuck did I change course to Tentigo?! Why did I think I deserved anything but hell?! That's all I've ever known! NOW SHE'S DEAD BECAUSE OF ME! WHY DID YOU TRY TO SAVE ME, ASTRID?! WHY?! WHY?! WHY?! \n\n\"...Willowbud!\" someone screamed. \n\nI opened my eyes, and realized I had been sobbing hysterically. Through my blurred vision, I made out Gloria's pallid profile hovering over me. I glanced down, and saw that my hand was still wrapped around my raging erection. \"I need a cold bath,\" I mumbled.\n\nWhen Gloria was done filling the tub, the steam from the water had fogged all the glass in the house. I frowned at her as she helped me to my feet, and I scowled all the way to the tub as I used her arm for support. Though the heat was heaven on my flesh, it did nothing to reduce the painful swelling in my loins. As Gloria moved behind me to wash my hair, I once again began the arduous process of trying to reach orgasm. I didn't even notice that Gloria had slipped into the tub behind me until a second pair of feet breached the surface on the outsides of mine. \n\n\"What the fuck did I\u2014\" \n\n\"Shhh,\" she whispered, and placed a gentle kiss upon the nape of my neck. \"I'm not going to hurt you, Willowbud.\" \n\nHer arms emerged from the suds around me, and carefully embraced me. I didn't protest. Her forearms came around me, lifting me slightly from the water, causing my small breasts to bob buoyantly from the surface, the domes soapy, the nipples so hard. She nestled me into her body, my head rested between her wet pillowing breasts, my back molded to her soft tummy, and my buttocks squished into her crotch. Gloria's fangs entered my neck, and though I felt the puncture deeply, there was no pain with her invasion. I only felt a pleasant weakness that slowly permeated outward from my poisoned chest, making my body even more gelatinous. My tired limbs and aching muscles succumbed so easily to the suffusion of our succulent forms, and I groaned in pathetic surrender as Gloria kissed me so delicately down my throat. My body was completely submerged between my nipples and feet, all save for one part of me that stood proudly from the water's surface like a defiant lighthouse in a flood. \n\n\"You don't want to feel my lust; that is fine,\" Gloria whispered in my ear. \"I can offer you release beyond that of carnality.\" \n\n\"Stop!\" \n\n\"Shhh, baby,\" Gloria cooed. \"Don't think about me; I'm not here. I'm just hands and fingers.\"\n\nHer hands slid down my belly, the fingers brushing my navel before caressing me along the converging lines of my pelvis. I twisted dispiritedly in the water, making one last vain attempt to show Gloria I was unwilling and not wanting. At least the former was true.\n\n\"I'm just a warm body and a gentle whisper, Willowbud,\" Gloria's musical voice dripped like poisoned honey, her lips forming the shape of my name so lushly against my receptive ear. \"Melt into me.\" \n\nOne of her hands wrapped long elegant fingers around my throbbing shaft, and my entire being rushed to the point of such loving sensation. She caressed my raging column all the way to the tip, and then lingered there, kneading the spongey tender flesh with her thumb until it was red and swollen, and I was groaning with need. Her other hand slid past my shaft, and deftly scooped my floating balls into her palm to squeeze and roll them ever-so tenderly. I let out a defeated moan, and rested my head between her glistening wet breasts, encasing myself all the way to the ears in her pillowing warmth, muting the world with her steady heartbeat. She hummed musically as she began to stroke me, but I did not hear it from her mouth; I heard it resonating in her chest, and for some strange reason, that gave me comfort. That was all she gave me. Though our naked bodies were pressed together, and though she was caressing and squeezing my throbbing loins, there was nothing in our interaction that bespoke anything lustful. She doted upon me, groomed and cleaned me, encased me in her soft warm love and nurtured me with her hands. She was like a... a... a....\n\n\"I know what you're doing,\" I croaked.\n\n\"Shush, baby,\" Gloria muttered, and planted a placating kiss atop my head. \n\n\"Julia tried to psychoanalyze me for three days, and where did that get her?\" \n\n\"I'm just giving you what you need.\" \n\n\"You don't know what I need!\" \n\n\"Oh, but I do,\" Gloria crooned with a melodic chuckle, and recommenced her work on me. I watched with a strange detachment as her pale fingers milked me so tenderly, kneaded the taut flesh, massaged the thick ropes of cartilage that structured me. My head grew heavier, and I sank ever further into the deafening comfort of Gloria's bosom, deepening the trance as her venom took full effect. Her heart was beating a little faster now; a hint of excitement tinging her calming cadence. I could only blubber out some unintelligible plea, though for what, I did not know. The sounds that came from my lips weren't groans and moans, but whines and whimpers. I was a helpless babe in her arms, docile and supplicant, and my pleading tenors were no longer objections, but the goading squeaks of prey to cajole the predator. It was so natural for Willowbud\u2014for me\u2014to be so submissive. Submission was the only action I'd ever taken. Gloria collected the soapy film from the steaming water's surface, and used it to lubricate her sensual milking. The suds spilled from her grip, cascaded down my gleaming shaft in thick rivulets, sheening me in nectarous oils. \n\n\"You have such a pretty cock,\" Gloria whispered.\n\n\"Don't say that,\" I whimpered. \n\n\"Why not?\" Gloria chuckled lowly in my ear, her beautiful voice echoing so sweetly into the annals of my mind. \"A pretty cock like yours should never be cleaned by your hand. Your hands are rough and calloused, but mine are soft and pliant. I bathe in milk to keep my skin supple; can you feel it?\"\n\n\"Fuck you!\" I cried out. \n\n\"Oh, you have such need....\" Gloria crooned with a smile against the top of my head. \"A goddess should never have to fulfill her own need. In fact, it is selfish for her to do so. She should reward her worshipers by allowing them the privilege and pleasure of doing all that she desires.\" Gloria moaned lowly as she twisted her hand around my curved-back shaft. \"Such pleasure I gain from pleasing you, Willowbud. There is nothing I won't do. Whatever your darkest desires are, I will gladly let you indulge upon them with my flesh.\" \n\n\"I just want to be left alone!\" I blubbered. \n\nGloria tittered sweetly. \"I'll do anything but that.\" The hand that cradled my rolling testicles extended a finger against my taint, and then slowly rubbed its way down.\n\n\"What are you doing?\" I hissed. \n\n\"You know what I'm doing,\" she cooed back, amusement in her voice. \"If you don't want me to do it, then I'll stop.\" Her finger paused, and caressed the length of taint, brushing against the coarse stubble that had grown since my last waxing. My anus relaxed upon its own accord, and Gloria chuckled when she felt the lassitude take my pelvic floor. \"A woman after my own heart,\" she whispered, and pushed her finger into my ass. \n\nI cried out in glee, enraptured by the exploratory digit that pushed through my sucking rim, opened my uncoiling rectum, and found the organ within. She pressed and rubbed it, her knuckles popping in and out of my winking aperture, never allowing it to relax about a constant girth. I writhed helplessly in her hold, my pathetic voice exalting from my lips as I stared down at my imprisoned cock, watching the shaft throb and pulsate in reaction to Gloria's wonderful torture. Water sloshed and spilled from the sides of the tub, and Gloria gently subdued me with her strong arms, sinking my body back below the sudsy surface, making me accept my imprisonment. With my resistance quelled, she went to work on me, numbing my mind with her venom, euphorically tormenting my sex, turning my body into fluid so that the knots in my back unwound, the sinew relaxed, and everything floated within me. \n\n\"You're prostate is so full,\" Gloria cooed with maternal concern. \"God, it's near to bursting, Willowbud. I can't imagine how uncomfortable it must've been. I can't imagine how good this must feel.\"\n\n\"You have such long fingers,\" I moaned mindlessly, drool cascading from my lips. \n\nGloria chuckled, then retracted her stroking hand for only a moment before she slid it back over my shaft, covering just the head of my cock with a condom. \n\n\"What the fuck?\" I mumbled, unsure if I was seeing things in my fugue state of lust. \n\n\"Waste naught, want naught,\" Gloria sung, and recommenced her draining of me. \n\nHer strokes became more impassioned, squeezing me harder, pulling the tension up my curved shaft until it was at the precipice. Her finger rotated and stretched my gripping membranous sheath, twisting to open my sucking anus. Though my insides were a torrent of ecstasy, my body was enslaved by relaxation, unable to react to the sensations building beneath the flesh, paralyzed in the hot water and forced to endure the ecstatic torment. Gloria's breath became heated in my ear, each one punctuated with covetous little laughs and giggles as her excitement boiled over. She grinded her crotch against my ass beneath the water, and she wrapped her legs about mine, pulling my feet back, making me curve bodily so that my pelvis thrusted forth, exposed and open for her sensual onslaught. I could only cry out and blubber as she manipulated my body to her liking, playing my rectum like a puppeteer, milking my organ like I was naught but livestock with no say in the matter. \n\nThe pressure built within my loins, bubbling until I was sobbing in ecstasy, begging for mercy. The sensation suddenly erupted, lanced from my convulsing prostate and balls, and shot through my flexing cock until it burst from my head. Gloria let out a delighted cry, and writhed beneath me, rubbing her slick body against mine beneath the water, releasing her orgasm in a jet of hot fluid. My own tip expelled gouts of viscous nectar, filling the condom until it was overflowing with thick rivulets. Gloria made sure to collect my orgasmic milk in her palm, and then she stroked me with the hot lubrication, coercing every last volume from my loins until the finger prodding my anal organ had depressed noticeably with the emptiness therein. ",
        "\"Fuck...\" I groaned, watching my cock deflate as Gloria extracted the condom. The moment the tension of my arousal left me, my packed-full bladder released, and a fountain of urine sprayed from my member and cascaded upon my belly and breasts. \"Sorry,\" I muttered.\n\n\"Everyone pees in the tub,\" Gloria said, and began emptying her bladder between my legs beneath the water. \n\n\"I wasn't inviting you to join me, you fucking degenerate.\" \n\n\"It's my house, Willowbud, and I'll be damned if I'm going to let an ungrateful guest tell me I can't piss in my own bathtub,\" she giggled, and rested her chin atop my head. \"The warmth feels nice, doesn't it?\" \n\n\"It's going to get cold soon. We should get out.\" \n\n\"Stay a while. I quite enjoy the idea of our comingled urine soaking into our entwined flesh.\" \n\n\"What the fuck is wrong with you?\" \n\n\"So very much,\" Gloria sighed, and held me against her, cuddling our melded bodies beneath the warming liquid. Truth be told, I kind of liked it too. \n\nIt was around midmorning when Gloria finished dressing me in one of her gowns. She didn't have any pants for me to wear, and she only had the one cloak for herself, but she had a full closet of extravagant eveningwear and bondage gear, and since I didn't feel like wearing leather chaps and a ball-gag, her silken gown would have to do. The bust size was several cups larger than my own, and the garment was meant to be form-fitting, which meant my tits were always exposed. Still, it was better than lying around naked all day just so that my libidinous hostess could eye-fuck me from every which angle. \n\n\"You know, you look even sexier in that outfit than with your clothes off,\" Gloria mused. \n\n\"Great...\" I groaned. \n\n\"Come now, Willowbud, was I so bad?\" she tittered. Gloria wasn't wearing her cloak, but she wouldn't let me have it, insisting that she needed it for... whatever fucking reason. She instead elected to walk about the cottage in fishnet stockings, leather boots, and a dress that looked like it was painted to her. I closed my eyes and purposefully pictured my mutilated mother just to kill the boner that was threatening me beneath the dress. When I opened them, Gloria was standing beside my bed with a plate full of eggs and a cup of tea. \n\nI declined the eggs but begrudgingly accepted the tea, and began sipping as I eyed her suspiciously. She just smiled back at me, sat in the chair beside my bed, and began sipping from her own mug. \n\n\"You're going through your blood stores really fast,\" I said, glancing at the empty bottles above her sink.\n\n\"I'm a hungry girl.\" \n\n\"Those bottles were full just a few days ago.\" \n\nShe eyed me from above her mug. \"What's your point?\" \n\n\"Shouldn't you go out hunting?\" \n\nShe smiled, exposing her fangs. \"Trying to get me out of the house?\" \n\n\"I could use some fucking alone time.\" \n\nShe shook her head.\n\n\"Why the fuck not?\" \n\n\"Because you're clinically suicidal, and I don't feel like coming home just to find you swinging from the rafters.\" \n\nI snorted. \"I'm too much of a coward to kill myself, Gloria.\" \n\n\"Cowardice has nothing to do with it; it's about pain tolerance, and you're in agony.\" She set her mug down on the table beside her. \"I'm not leaving your side until you're better.\" \n\nI rolled my eyes. \"I couldn't even stand up long enough to get my neck through the noose anyway. I could probably strangle myself in this dress though.\" \n\n\"Or I could just choke you, if that's what you're into,\" Gloria grinned crookedly behind her mug. \n\nI narrowed my eyes at her. \"How old are you, exactly?\" \n\nShe inclined her head, and shrugged. \"I'm actually not quite sure what the exact number is. Why?\" \n\n\"Because I'm pretty sure you're old enough to be my great-great-great... you know, it might make more sense to put an exponent after the prefix 'great'... grandma.\" \n\n\"I didn't know a sloven street urchin knew mathematics.\" \n\n\"You're a fucking pedophile.\" \n\n\"You're over eighteen.\" \n\n\"It's the age difference, not the age. Find someone who was at least born in the same millennium, and fuck them instead.\" \n\n\"It would be pretty hard to find someone my own age. The only one I know is a gay dwarf, so that just leaves... ah, I see. You're telling me in a roundabout way to go fuck myself.\"\n\n\"Preferably where I don't have to watch.\" \n\nGloria giggled. \"Do you know why I'm not out hunting right now, Willowbud?\" \n\n\"Because you're not just annoying, but also lazy.\" \n\nGloria swirled her mug, and took an indulgent sip. She made a loud slurping noise, then withdrew her mug, and licked the milky glaze from her lips with a wicked grin. \n\n\"Good god, woman,\" I growled. \n\n\"I can't digest it as well as a succubus can, but it is much more nutritious than blood. Only a few ounces a day should tide me over. Most nymph males can only expel a tablespoon or less, but since you've got incubus blood in you\u2014\" \n\n\"No.\" \n\nGloria slurped loudly again, licked her lips, and winked at me. She pulled down her neckline, popped out her jiggling milky tits, then pulled on the nipples and moaned lecherously. My cock sprang to attention beneath my gown, creating a ludicrous tent in the silk. Gloria put her tits back into her dress, picked up her mug, and recommenced her meal as though nothing had happened. I glared at her from behind my skin-splitting erection. \n\n\"That was dirty pool, Gloria,\" I growled. \n\n\"You know me, Night Eyes. When did I ever play fair?\" Her crimson eyes swam with amusement behind her mug. \"You look like a little girl in that oversized dress. So fucking hot.\"\n\n\"Pedophile bitch.\"\n\n\"I never said I didn't like 'em young,\" Gloria snickered back. \"Veal and lamb are just so much more... succulent.\" She upended her mug, then smacked her lips contentedly. \"Now, you can either let my lunch stew in those balls of yours, or you can feed me brunch right now.\" \n\n\"You keep those sharp little fangs away from my dick!\" I growled as she climbed onto the bed. \n\n\"If that's what you wish,\" she grinned, licking her impossibly lush red lips and continuing her journey between my legs. \n\n\"What did I just\u2014\" \n\n\"I'm not going to suck your cock, Willowbud,\" Gloria hissed, her pink tongue snaking out. \"I believe you gave me a very specific request just yesterday.\" \n\n\"What the f... oh. Oh my...\" I muttered. Gloria had slid her hands into my dress, taken two firm grips of my buttocks, and spread them wide so that she could push her tongue between them. Her red eyes twinkled with amusement as her plush ruby lips formed a seal around my anus, and sucked the puckered aperture into a swollen throbbing ring of sensation. \n\nShe had me bent over a minute later, sobbing delightedly into the pillow with my ass perched high above my shaking knees so that she could feed upon my vile hole. The cheeks of my rear consumed the cheeks of her face, and she kept her tongue pressed against my prostate as she reached between my quivering thighs to slowly milk my shaft like it was an udder. She injected her fangs into my swollen rim, and I cried out with the euphoria of it, feeling her venom seep deep into my rectum, turning everything to jelly, opening me, making me receptive for her heinous violation. \n\n\"I love it when you eat my little boy-pussy,\" I mumbled into the bedding, hoping she didn't hear such a pathetic confessional. She did, of course, and she rewarded my shameful admittance with an impassion anal kiss that ruined me. I let out a pathetic orgasmic whimper, and my rectum seized in ecstatic contractions around her tongue as the pleasure lanced through me. She collected the thick gouts of semen into a mug between my legs, then gently guided me down from my prostration. \n\n\"Why are you doing this to me?\" I mumbled into the pillow. \"How is this helping me at all?\"\n\nGloria rested her head next to mine, her breath pungent with my flavor. \"You enjoyed it quite a bit.\" \n\nI snorted. \"Do you have some kind of psycho-bitch fantasy about winning me over while I'm too weak to resist you?\" \n\n\"I have no delusions about where we stand,\" Gloria snuggled next to me. \"But I'd like you to like me.\" \n\n\"There are other ways to make friends.\" \n\nShe brushed my hair behind my horn, and smiled warmly at me. \"Maybe someday we'll be friends, Willowbud; I'd like that. But I'm not trying to be your friend right now.\" \n\n\"You're trying to control me.\" \n\n\"I'm trying to heal you. Sometimes, healing hurts.\" She ran her cool palm upon my cheek, and contemplated my eyes. \"Did Brandon ever tell you about me and Halok?\" \n\n\"Who?\" \n\n\"Don't concern yourself with it,\" Gloria frowned, the lines on her face becoming very clear for a moment. \"I lost my love to the astral plane, and since then, I've made myself an expert on the mind. I know things that most people don't; things about the astral plane, and things about how our minds work. I've delved into some very dark arts to find these secrets. I developed a technique from that knowledge. It allows me to penetrate the mind of another, and guide their thoughts.\" \n\n\"Stay the fuck out of my head.\" \n\nGloria just smiled. \"Brandon tried to resist me too, and he was much less helpless than you are now.\" \n\n\"What did you do to him?\" \n\n\"I made him want to fuck his sister.\" \n\nI burst into laughter. \"What, as a joke?!\" \n\n\"You know damn-well why.\" \n\n\"If sex was all it took to bind a god, I would've been claimed when I was six,\" I sneered at Gloria, and gained some measurement of satisfaction at her horrified face. \n\n\"Willowbud, I\u2014\" \n\n\"Don't tell me you're fucking sorry, Gloria,\" I snarled at her. \"I never asked for anyone's apology.\"\n\nShe slid her fingers down my shoulder, took my hand in hers, and guided it to rest upon her cheek. \"And I never ask for anyone's permission,\" she whispered, and sank her fangs into my wrist. The euphoric venom numbed the objection I had ready on my lips, and turned me once again into a ragdoll for her pleasure. She inched closer to me, moving until our brows were touching, and my entire field of vision was naught but the depthless red of her eyes. They were so beautiful. I was transfixed by the black centers of the ruby wells, staring as the irises seemed to shift like smokeless flames wreathed in blood. \n\n\"You're OK, Willowbud,\" Gloria whispered, and her soft voice seemed to come from inside my head. \"Everything is fine. You have suffered so much, but it's all over now. Speak your scars to me, and I will heal them.\" \n\n\"You can't heal me, Gloria.\"\n\n\"Don't resist me.\" \n\n\"I'm not,\" I just smiled at her. \"Maybe my mind's been shattered into a million pieces, but it also cast out Corruption twice. On the totem pole of manipulative cunts I've had to deal with, you rank very, very low.\" \n\nGloria sighed, and her eyes lost their depthless luster. \n\n\"What now?\" I asked her. \n\nShe chewed on her lip, her fangs pressing into the ruby flesh. Finally she looked at me, and shrugged. \"I could really use some fresh air, how about you?\"\n\nGloria donned her veiled cloak, then let me use her as a crutch as we walked out into the morning light. The sun was concealed behind an overcast sky, which was likely why Gloria felt comfortable enough to walk in the open, but she still stayed clear of the vast open fields to our west, and elected to instead take a stroll in the snarled woodlands to our east. They looked like something out of a fairytale, though I knew it was just old-growth oak. Likely the only monster that inhabited this path of the wilds was the one I was using as a crutch. Come to think of it, Gloria was quite literally a horror from a children's tale. I glanced back at the cottage, and nearly laughed. It was without a doubt, the most ominous looking piece of architecture I'd ever seen. The chimney was twisted, the shingles were black and in disrepair, the grass was overgrown and the windows were all blacked out. A derelict barn stood behind it, nestled into the trees in such a way that it looked like the forest was consuming it. Its doors were ajar, its fa\u00e7ade was black with rot, and the roof had a massive hole in it. \n\n\"You really cultivate a welcoming atmosphere,\" I sneered at her. \n\n\"I actually think it has a lot of charm.\" \n\n\"This looks like the kind of place that has meat-hooks hanging in the basement.\" \n\n\"I do have meat-hooks hanging in the basement, Willowbud,\" Gloria chuckled as we plodded along. \"Stocking up for the winter means I have to section pieces off and dry the meat for jerky, though sometimes I'll just keep one of the elves alive and cut away fresh meat when I so desire it.\" \n\n\"You're joking, right?\" \n\nShe just smiled, and continued down the path into the woods. \n\nAfter only three paces, I lost my strength, and Gloria had to pick me up and hoist me upon her shoulder like I was a toddler. I was frustrated not to have made any progress from the last time I tried to walk, and I took out my frustration on Gloria's hair, making sure to take a firm grip of her black mane to keep balance like I was pulling on her reins, but she didn't mind. Without so much as a gimp in her step, Gloria walked along the treacherous path. I had to duck and dodge the hazardous branches that threatened to slice my face, and on more than one occasion, I got her dress snagged in a twig. These weren't the arboreal woodlands nymphs were used to, but a snarling mess of overgrown thorns and dense branches all creating a tunnel of wood about the path. It would be impossible for me to navigate the canopy with so many treacherous limbs ready to tear my flesh and entangle my clothes. Though it was summer, there wasn't a leaf on any of the trees, and the ground beneath us was of barren soil and garish fungus. The only signs of life I saw were a few rats scuttling in the underbrush, a toad splashing in a pool, and a pair of glowing red eyes burning from the shadows. I blinked, and the figure was gone. \n\n\"Something wrong, Willowbud?\" Gloria asked me. \"Your blood pressure and adrenaline just shot through the roof.\" \n\n\"You've got a neighbor, huh?\" I gulped. \n\n\"What do you... oh, yes,\" Gloria stopped, and looked at where I had been looking. \"She just moved in, actually.\" \n\n\"Is she... friendly?\" \n\n\"Vampires are natural introverts; or did you think I live in a run-down cottage on the outskirts of a dead forest to start a bed and breakfast?\" Gloria continued walking. \"She won't bother us if that's what you're wondering.\" \n\nGloria continued her trek through the dense woodlands until we came upon a bog. There was a shack at very edge of it that looked like it was inhabited by at least one ghost, so that was of course where we went. I expected to see a shelf full of decapitated heads in jars, maybe a couple of rusty saws with blood crusted to the teeth and a bucket full of limbs, but I was instead greeted by a room filled with bioluminescent fungi. \n\n\"Psychedelics?\" I mused. \n\n\"Some of them are,\" Gloria said, setting me down upon the head of a massive mushroom. \n\n\"Is this edible?\" I asked, poking at the spongey head I'd made a bed of.\n\n\"Anything's edible once,\" Gloria chuckled sardonically, and made her way through the room. \"What you're sitting on is a Corpseflower, so you can imagine what I used to grow it. It can be extracted for a painkiller stronger than opium with none of the narcotic or numbing effects. It just blocks pain.\" She frowned as she ran her eyes along the various shelves, each one containing some glowing mushroom. \"The burns on your back were made by the Heat Bringer, and though they will scar, they will still pain you for the rest of your life.\" She crouched low, and inspected something at the bottom shelf. \"If Brandon were still alive, perhaps he could've healed you, but without him, Corpseflower will have to suffice. I've been giving it to you since I brought you back.\" \n\nI reached behind myself, and shuddered when my fingers caressed the scabbed flesh. The little droplet-shaped burns ran all the way down my spine, ending in the crescent symbol Julia had branded me with. \n\n\"I have some ointments that will accelerate the healing process,\" Gloria said, plucking a mushroom from the bottom shelf and examining it carefully, \"but the scars will never fade. Do you know what this is?\" she asked, holding up the blue-glowing mushroom. \n\n\"No.\" \n\n\"It's a very rare breed of fungus; extremely hard to cultivate,\" she turned it over in her hand, the blue light casting her eyes in violet. \"I had to find a pregnant pixy, dissect it with a platinum knife, take out its living organs, and plant them in the soil with the connective tissue all still intact so that the organs worked properly even as she died. At the moment of her expiration, I had to push the spores into her belly without rupturing it, then leave her in darkness for an Orange-fanged Arachnid to lay eggs into her womb, and pray that the child within still lived. Then, I had to\u2014\" \n\n\"You can stop anytime now.\" \n\nGloria frowned at me. \"The point is, this particular mushroom is exquisitely difficult to grow because it is extremely potent. Consuming this will take the user to the astral plane.\" \n\n\"Why the hell would you want to go there?\" \n\n\"Someone needs to confirm that Corruption is dead,\" Gloria said. \"If she is, then Drastin's sacrifice was worth it.\" \n\n\"Cool,\" I said. \"Well, tell me how it is.\" \n\nGloria shook her head. \"I would be lost up there. Your mind held Corruption, so you can follow her trail. How soon after she left you did Julia launch her fireball?\" \n\n\"A few seconds.\" \n\n\"Then she couldn't have gotten very far before she was fried. You won't need to be up there for very long.\" \n\nI glanced from the mushroom, to Gloria. \"You want to do this now?!\" \n\nGloria laughed. \"Heavens, no! A trip to the astral plane from someone not tethered requires a very strong mind or it will break your psyche to pieces. You are in nowhere near the right mental condition!\" \n\n\"I don't think I'll ever be in the right mental condition,\" I said soberly. \n\n\"As you are, probably not,\" Gloria said, and searched her shelf once more. \"You've experienced intense trauma and lifelong suffering. Not only that, but you've been using a Sentient as a mental crutch for the most formative years of your development. It's actually quite amazing that you're as sane as you are. Contrary to popular wisdom, what doesn't kill us actually does not make us stronger\u2014it generally leaves us crippled and broken forever. Fortunately,\" she said, selecting another glowing mushroom from the middle shelf, \"the brain isn't so complex that it is beyond understanding. Mental illness is just that; an illness, and it can be cured. Your brain is laden with crippling depression, and all that means is an idea or set of ideas is causing your cerebellum to misfire. We just need to remake those connections.\" \n\n\"...with mushrooms.\" \n\n\"What do you think is occurring in your mind when you take psychedelics? Your framework is being rewired and rerouted. New pathways are formed, and old connections are severed. With a mind as old as mine, it's often necessary to...\" she rolled her finger beside her temple, \"...mix things up a bit.\" \n\n\"I'd rather fucking not, thank you.\" \n\nGloria eyed me. \"You scream in your sleep, you know.\" \n\n\"And I'm sure psychoactive drugs will make the terrors so much better.\" \n\n\"If you never confront your demons, they will forever gatekeep your future,\" Gloria said, placing the mushrooms in her pouch and scooping me into her arms. \"You will grow older, but you won't grow up. You will stay exactly as you are; this scared little girl that you pretend so much not to be.\" \n\n\"Fuck you.\" \n\n\"You can fake it until you make it in a lot of things, Willowbud, but not with yourself. At some point, you're going to have to stop pretending to be Night Eyes, and just be you. It all stems from your relationship with your mother\u2014\" \n\n\"I really wish people would stop trying to be my fucking therapist!\" ",
        "\"Am I wrong?\" \n\nI narrowed my eyes at her. \"You're either the most perceptive woman in the world, or I talk in my sleep too.\" \n\nGloria smiled toothily at me. \n\n\"Kind of contradicts that whole spiel about pretending to be someone you're not, doesn't it?\" I grumbled. \n\n\"Oh, I know I'm full of shit,\" Gloria giggled. \"But at least I'm honest with myself.\"\n\nAs we walked through the snarled woodlands, I spotted the other vampire once more. She didn't vanish like last time, but followed me with her crimson gaze, her entire figure shrouded in darkness. \n\n\"There she is again,\" I muttered. \"She's probably wondering why you're letting your lunch ride on your shoulders.\" \n\nGloria turned and frowned at the figure, and the red eyes faded into the shadows. \n\n\"Hand me a rock, and I'll brain the bitch,\" I said. \n\n\"She's already gone, and that would be rude,\" Gloria said, though she did bend down to pick up a rock. She handed it to me, and the weight of it broke my weak grip and sent it tumbling from my hands.\n\n\"Goddamn!\" I gasped, \"What the fuck is wrong with me?!\" \n\nGloria caught the stone, and examined it. \"You expended yourself past your lethal limit when you fought Julia. Only adrenaline kept you going for as long as you did.\" Gloria crushed the rock in her hand, and the dust floated from her fingers. \"Unbound power is borrowed power, and you borrowed deep into your future. That's why you're so weak right now. That's why you're not getting any better. You almost died, Willowbud.\"\n\nI felt a cold fear crawl through me. \"Gloria, how long am I going to be like this?\" \n\n\"Maybe a few months.\" \n\n\"A FEW MONTHS?!\" \n\nShe looked up at me through her veil, and frowned ruefully. \"I'm sorry.\" \n\nA few days of this, I could handle\u2014maybe a week\u2014but the idea of spending months in Gloria's bed as she fed me mushrooms and milked my cock was nearly enough to drive me mad right there. Gone were any hopes of hopping caravans to the Gratoran Desert, of finding bliss in the freedom of slavery. Now I was just a prisoner in my own flesh, stuck with a woman I'd murdered barely a fortnight ago. It was too much; it was way too fucking much! The world spun around me, my stomach turned over, and clammy sweat secreted from my pores. I pitched forward, vomited on Gloria's head, and blacked out. \n\nMother's face appeared in the void. She was smiling down at me as tears of blood cascaded along her cheeks. \"You were an idea,\" she said. \"You cannot know how much joy that idea brought me, Willow. After the dark one told me that you would be my child, I spent every night imagining you. I would bundle blankets together and cradle them in my arms. I'd put pillows beneath my tunic and walk around the bedroom with you in my pretend belly.\" Her eyeballs melted out of her head, leaving deep black pits. The pits brightened, and then rolled forward as black eyeballs ringing white sclera, Corruption's horrible gaze staring down at me from Mother's face. You were supposed to be my joy, Mother and Corruption said as one, their voices created a terrible harmony, but you were the blight upon my life. If I knew what you'd become, I would've drowned you in the river the moment after I birthed you. \n\nMom's head fell to the side, then toppled from her shoulders, and rolled to my feet. Only now it wasn't Mom's head, but Julia's. She grinned up at me, her mouth peeled in a horrific grimace, the cheeks pulled so far back that her molars were exposed, a skeleton's smile. Her eyes were as black as coal. You killed her, Night Eyes, she giggled. You killed her with your love. That's what you do, isn't it? Diamond, Lucilla, God. Diamond, Lucilla, God. Diamond, Lucilla, God. Mother, Astrid, Father. Mother, Astrid, Father. Mother, Astrid, Father. MOTHER, ASTRID, FATHER! \n\nI looked up, and there was my father. He was staring at me with eyes wide in horror, but his cock stood rigid between his legs. \"Love me, Willow,\" he said. \"Love me like I know you want to.\" He ripped off his hand, and tossed it to my feet. \"Is that the part you love the most?\" He ripped off his cock, and tossed it after. \"Or was that what you needed from me? You took everything, after all, so why not take it bit by bit. Keep me alive. Keep me fresh. Eat it. Eat it. Eat it.\" \n\nEat it, Willowbud, Astrid's decapitated head whispered at my feet, her eyes black with Corruption. It will make you stronger. What doesn't kill you, cripples you, so you must kill and cripple to become stronger. Eat it. Eat it. Eat it. EAT IT! EAT IT! EAT IT! \n\nTHE HUNTRESS\n\nThe nymph rolled off the predator's shoulders and sprawled onto the ground. The predator battled with her vomit-soaked face and hair, blinded by bile and stomach acid. I wouldn't get a better chance than this. I opened my bat-like wings, and launched myself from the treetop. It was a risky move; it was barely midday, but the overcast sky provided the cover I needed. I swooped down between the snarling tunnel of trees, gliding carefully through the hooking branches and ensnaring thorns. It was almost like I floated down, and I adjusted my trajectory through the unnatural shifts of my body. The torpid nature of my descent was a farce, for at any moment, I could attack with such blinding speed and ferocity that it would leave the prey stunned at the suddenness of it. That was my game. How many poor creatures had stared at my silhouette against the moon, unsure of what they were looking at? Just a floating paper crane enslaved by the whims of the wind, and then I was atop them the next second. That was what I did to the nymph. With the predator's back turned and a clear path through the tunnel of trees, I closed my wings with a great flap, and launched myself. I was as accurate as ever. I barely brushed the top of the predator's head as I made my way over her, and snatched her quarry from the earth. \n\nA strong hand took me by the ankle, and I was driven into the ground. Great blood, she was fast! I whipped around with my claws retracted, and swiped the air where her face once was, but of course, she was already behind me, and the points of her talon-like fingers were digging into my neck.\n\n\"Give her back,\" she growled in my ear.\n\n\"We can share, yes we can,\" I hissed. \n\n\"I don't share,\" the predator said evenly, her claws puncturing my flesh.\n\n\"Just give me a taste!\" \n\n\"This one's not for eating.\"\n\nI sniffed the wrist of the woman, and glared at her from the tops of my red eyes. \"She is deep in your blood. Do not lie to me.\"\n\n\"You're in no position to bargain.\" \n\n\"Am I not?\" I asked, securing my claws beneath the nymph's chin, ready to rip her head off. Her eyes narrowed and her claws dug deeper, but the pain meant little to me. Pain and I were so well acquainted that the puncturing of my throat was but a tickle. I tilted back the nymph's chin, and slowly began prying her head from her neck.\n\n\"Stop!\" the predator screamed. \n\nI ceased my prying, and inclined my head with a smile. \"Does this one mean something to you? Didn't your mother tell you not to play with your food?\" \n\n\"I know for a fact your mother did,\" the predator snarled. \n\nI giggled. \"Do you know her? Next time you see her, could you do me a favor and rip her guts out? I'd like to make sausage out of them.\"\n\nThe predator scowled down at me. \"So, we're at an impasse then.\" \n\n\"I'd say we are.\" \n\nShe chewed on her lower lip, her fangs poking out. \"We can make a deal.\"\n\n\"I'm all ears.\"\n\n\"I'll give you two casks of vintage virgin dawn-elf.\" \n\nI narrowed my eyes at her. \"That's a hefty price for one half-dead nymph, yes it is. I'm inclined to believe you're just saying whatever you think will make me let go of this prize.\" \n\n\"The price isn't just for you to let go; it's for you to leave these woods entirely.\" \n\n\"I've hunted these woods since the day I was born. You're the trespasser here.\" \n\n\"My offer is final.\" \n\nI searched her eyes, and slowly shook my head. \"I have a counteroffer.\" \n\n\"Speak it then.\" \n\n\"You're faster than I am; you let go of me, take one step back, and I'll let go of her.\" \n\n\"You must think I'm stupid.\" \n\nMy lips curled into a cruel smile. \"And you must think the same of me. This nymph is precious to you, yes she is, but you are trying to play coy. She has a secret, and I will know it.\" I slowly retracted my claws. \"I will not stop hunting her, but I will let her go, for now. Do you believe the sincerity of my offer now?\" \n\nThe predator's red lips curled into something akin to a snarl, and she retracted her claws. \"You've met the limits of my mercy, girl. If I see you again, I'll feed you your beating heart.\" \n\n\"Then we shall meet again for the last time, one way or another,\" I giggled, took one step forward, then laid the nymph down. I launched myself into the air with a great beat of my batwings, and shot just beneath the canopy of the snarled oak branches. Behind me, the predator delicately took the nymph girl into her arms, and cradled her like a babe. Like a wee little succulent. \n\nInterlude: Peace and Piece of Mind\n\nDIAMOND \n\nThe bodies floated below me. Black-eyed corpses grinning with horrific smiles, their bloated faces upturned to the heavens as they slowly ascended. Their living brethren swam between them, following the same path to the flickering sunlight so far above us. I had let the bloodbath continue for weeks before I opened the gates to Voda and released the survivors. These few thousand would be the very worst of the lot. I freed them into the wild like they were my hatched children, and bid them to wreak havoc wherever they went. Ships would be raided, island kingdoms would be massacred, and shorelines would become hunting grounds. I waved to them, and they sneered back at me, an unspoken understanding passing between us. They only respected me because I was worse than all of them. \n\nI took one last look at the two cubes beneath me, then was carried away by the beast I rode. The megalodon had been attracted by the great volume of blood that had been expelled upon Voda's opening, and had taken his fill of the buffet. He had jaws big enough to swallow a mammoth in one mouthful, so I was small enough that he didn't even consider me as food, and so I rode free of charge on his dorsal fin, and let the water around me keep me snuggly secured to his immense muscular frame. As I marveled upon the creature, I felt a pang of regret that Brandon was dead. If he were alive, I would've asked him to make me a ten-headed megalodon with diamond-studded teeth and big girly eyelashes. Then me and Aunt Lucilla could play all... well, me and Angela could... how about me and Justina? \n\n\"Shucks,\" I muttered to myself, \"I'm all out of friends.\" I glanced down at the megalodon. \"Hey Bruce,\" (I named him Bruce) \"you got any funny stories for me? I'm feeling kinda lonely.\" \n\nThe megalodon continued to swim as though I was just one of the many urchins taking refuge on his sleek dorsal. I sighed, letting out a bubble of air, and relaxed back on the beast's flank. It was at that moment that I felt a tug on my mind. It wasn't a headache, nor a pop of air in my submerged eardrum. It wasn't a physical feeling at all. \n\n\"I don't wanna go!\" I grumbled. \n\nThe tug became more persistent. \n\n\"I said I don't wanna!\" I glowered down at the cubes below me. \"Did you hear me?!\"\n\nThe tug became uncomfortable. \n\n\"Hey!\" I screamed. \"I said I don't wanna fricken go back to the astral\u2014\" \n\nI was lying on my back beneath the eclipsed astral sun. Palm trees swayed overhead. An eagle's silhouette moved across the sky. I was a torturer. I was a rapist. I was a murderer. These realizations came upon me in waves, and as each one crashed upon me, I became sicker. A moment later, I was on my knees and retching into the grass, my fists balled with white-knuckled intensity as my astral projection tried to expel all the evil that I had done. But there was no expelling it, for the memories were permanent fixtures in my mind\u2014this mind\u2014this jungle of chaos that had been invaded by an interloper. There was no escaping it. I had killed those valkyries. I had ripped Tera away before Justina's eyes. All the things I had done in the chaotic bowels of Voda, laughing over the shrieks as the blood rained from the ceiling... oh my god, the things I had done. I had taken one of the world's most ancient beautiful minds, and I had poured poison into it at the behest of my master, my slaver who did not give me orders or even make requests, but simply played with the compulsions that had already been in my mind. I had made every choice. I had made every choice. I HAD MADE EVERY CHOICE!\n\n\"No!\" I screamed into the grass, and sobbed. I sobbed until my breath was gone, and my body was wracked with spasms of anguish. Through my weeping tears, I raised my head, and stared at her from beneath my bangs. There she was, standing in the entrance. Her body was as black as her eyes, but her patterns were brighter than the sun overhead. \"You did this,\" I snarled at her. \"It was you. IT WAS YOU! COME BACK HERE AND FACE ME!\" \n\nCorruption just looked away, and closed the gate behind her. My head shot to the left, then to the right. There was no one there. I looked straight ahead. The iron box stood unguarded, and the forbidden memories were there. Carefully, quietly, I got to my hands and feet, then stood upright. The whistle of wind carried through the tropical trees, and the caw of birds echoed in the distance. There was no sign of my jailor. I was only twenty paces away from the box, and I was fast. Without another moment's hesitation, I rushed it. I made it ten paces before Xaya dropped on my back from the treetops, and sent me sprawling on the ground. \n\n\"No!\" I shrieked. \"No, no, no, no!\" \n\nThe reptilian woman paid me no heed. The more I struggled, the more she subdued me, and I struggled. I struggled with every ounce of my astral being to free myself, but there was no universe in which I could escape her clutches. She toyed with me, giggling all the while like it was a game, and when I finally lost the last bit of my strength, she dragged me away. Through the brush and foliage, she hauled me like some dead carcass. We reached a clearing in the dense jungle where she'd set up a nest of straw, and that was where she tossed me. Without ceremony or reservation, she flipped me on my back, stuck her fingers in my holes, and compelled my manhood to unbidden arousal. I tried to fight her, and my resolve lasted far longer than my muscles did, but in the end, even that faded. Xaya was relentless, untameable, and beautiful, and when exhaustion took hold of me, and the pain of my situation began to settle, I sought a numbing outlet to surrender to. She smiled victoriously against my lips, and took what she wanted. \n\nPart Two: Depression\n\nWILLOWBUD \n\nMy eyes fluttered open. I was staring at the ceiling of Gloria's cottage. I turned to my left, and there was Gloria, sitting in her chair and watching me. \n\n\"Was I screaming again?\" I croaked. My throat was knotted and dry. \n\nShe nodded.\n\n\"How long was I out?\" I muttered to the ceiling. \n\n\"Two days.\" \n\n\"TWO DAYS?!\" \n\nGloria nodded again, looking even paler than usual. \"I thought... I thought you were getting better, Willowbud, but you're getting worse. You're getting much worse.\" \n\nI closed my eyes, and let out a long breath. \"Gloria, I don't think you're supposed to tell a mental patient that.\" \n\n\"I don't know what to tell you.\" She folded her hands uncomfortably in her lap. \"The last time you separated from Corruption, what happened? Night Eyes left for a year and then came back. Where did she go?\" \n\n\"I just hopped from caravan to caravan for a while,\" I muttered. \"Sometimes I'd wake up, and everyone in the caravan was dead.\" \n\n\"When did the terrors stop?\" \n\nI smiled ruefully at her. \"They never stopped, Gloria.\" I tapped my head. \"Once she gets in, she burrows a nice hole for herself that only she can fill. I guess she dug even deeper this time.\" \n\n\"Where were you going on these caravans?\" \n\n\"Anywhere. Everywhere. I don't know. I got this idea in my head of going to the far west, deep in the Gratoran Desert where the map ends. Find some desolate place that might as well be on another planet, and let some orc warlord take me.\" \n\n\"Uh-huh,\" Gloria said, \"and where did Corruption find you again?\" \n\n\"She spoke to me on the Gratoran Wall, next to a mountaintop pool.\" \n\nGloria tapped her hands against the arm of the chair. \"You want to go west again, don't you?\" \n\n\"Did I say that in my sleep?\" \n\n\"You didn't have to. I can see it every time you woefully look out the window.\" Gloria sighed, and sat back. She pulled out a file beside her, and thumbed through the notes. \"Tera, Justina, Angela, Lucilla and Diamond were all working to save you. Diamond even traveled the astral plane.\" \n\n\"What the fuck?\" I muttered, too exhausted to be shocked by the revelation. \n\n\"Tera sent me her notes before her last gladiatorial fight. It was fortunate that her eagle escaped the city before it went up in flames, for these insights are priceless. Diamond traveled through several astral realms, including Halok's\u2014\" Gloria caught herself, and for a moment, I wondered if I saw tears in her red eyes. \"...including Wrath's, Sorrow's, Greed's, Hatred's, Guilt's and Corruption's.\" \n\nI just blinked at Gloria, unsure if I was still dreaming or not. \"Who the fuck are Greed, Hatred and Guilt?\" \n\n\"It doesn't matter now. Tera's team was on the cusp of something amazing, but their work was unfinished. And they were so close!\" Gloria stopped on the last page of notes, and pulled it out. \"There are rumors of a book called 'The Broken Bridge.' If I had it, I could cross-reference some of these findings and prove their validations. Most of this last page is just speculation on the origin of Corruption and Hatred, but there are facts on here. One such fact is that Corruption always emerges from the water.\" Gloria looked at me. \"Now, why do think it is that you have the compulsion to run off to the desert?\" \n\n\"Not a lot of water in the desert,\" I muttered.\n\n\"Really narrows down her options, doesn't it?\" Gloria sighed, and rubbed at her forehead. \"Corruption found you in that pool on the Gratoran Wall, and she compelled you to Tentigo, forced you to commit a soul-breaking atrocity, then merged with you while you were weak.\" \n\n\"I guess that makes sense.\" \n\n\"No, it doesn't, Willowbud,\" Gloria said. \"If you were compelled westward to find some way to numb the pain and forget, then you were already low. These terrors you feel and that compulsion that drives you westward are both engineered to bring you right back into Corruption's arms. And you were going willingly; riding some slave cart to nowhere.\"\n\n\"Yes.\" \n\n\"So why did she make you go to Tentigo then? Why not just take you in that pool on the Gratoran Wall?\" \n\n\"I don't fucking know,\" I grumbled. \n\n\"Yes, you do.\" \n\n\"Fuck off.\" \n\n\"Say it.\" \n\n\"I said fuck off! How many times do I need to tell you to go fuck yourself?!\" \n\nGloria just stared at me, not even blinking at my outburst. \"She was waiting for you, Willowbud, but someone else got you first, and that someone made you strong.\" \n\n\"So what?\" I growled, tears running down my cheeks. \"What's your fucking point?! They're dead now; both of them! I don't need to go to the astral plane to know that Corruption's gone! She was hanging on by a thread as it was!\" I ground my fist into the bedding, feeling hot tears pour down my nose. \"She couldn't take all the pain away, Gloria. She tried so hard, but even she couldn't fix me. No one can.\" \n\n\"Astrid did.\" \n\n\"What the fuck do you know about her?!\" I snapped. \"To you, she was just one of my thugs. You never knew her!\" ",
        "\"But I knew what she did,\" Gloria answered softly. \"I found her in that hole with you. I saw what had happened. Only love makes someone do something like that.\" She rested her hand upon an old book, and I realized that it was a very old edition of the Maternal Path. \"Maybe I didn't know Astrid, but I know love. When we walk the earth alone, we walk with armor over ourselves, for we know intimately the open wounds that life has made in our souls, and we must protect them. When we find someone else, we are forced to take off the armor. It's terrifying, for we have to trust the other one not to ravage us where we are wounded.\" She chewed on her lip. \"Love does not heal those wounds beneath our armor, but it makes them bearable. It makes it so that we can grow through the pain, and become stronger.\" \n\n\"I didn't love her,\" I hissed. \"If I loved her, then we would have bound.\" \n\n\"You just hadn't let your armor down yet,\" Gloria sighed, and wiped a tear from her eye. \"I can't love you, and I know you can't love me, but I can't help you until you rip that armor off and show me your wounds.\" She took out a glowing mushroom. \"I can't take your armor off for you, Willowbud.\"\n\n\"I'm not fucking doing it!\" \n\nGloria just smiled pitiably at me. \"In case you haven't realized it by now, you don't really have a choice with me.\"\n\nGloria climbed up my body, subduing my vain thrashes and kicks with ease. She grabbed hold of my face, pried open my mouth, and pushed her finger and thumb along my cheeks, securing them in place between my molars. No matter how hard I tried to bite the bitch's fingers off, my teeth wouldn't break her flesh. \n\n\"You're supposed to meditate and find a sense of peace before this,\" Gloria said as she slid the mushroom into my mouth. \"The tone of your psychedelic trip depends greatly on your mood before it, but I guess there's no making you happy.\" She pushed the mushroom into the back of my throat, and forced it down my gullet. I gagged and hacked, but her finger slid ceaselessly down my clenching throat until it was sucked down my esophagus. She pulled her fingers out of my mouth, and rested back in the chair. \n\n\"I hate you,\" I hissed at her. \n\n\"You only hate yourself,\" she answered coldly, and checked the clock. \"You'll begin to feel the effects within five minutes of ingestion.\" \n\n\"I'm going to kill you when I get the chance.\" \n\n\"If that is what you wish.\" \n\n\"I just wish you'd go away.\"\n\nGloria didn't even register that I'd spoken. She just watched the clock, and periodically checked out the window. After two minutes of silence, she said, \"I'm with you, Willowbud. Remember that when you think you're alone.\" \n\n\"I am alone, Gloria,\" I muttered, and stared up at the ceiling. \"You should have left me to die with Astrid.\"\n\n\"I did,\" she whispered back. Her voice echoed against the stone tunnel. Darkness surrounded me, only broken by the thin column of pale light filtering from the hole in the ceiling. Drip, drip, drip. The water chimed in a slow cadence; a clock more accurate than the most intricate timepiece made the by the greatest master. For the water that dripped from these rocks would always drip from these rocks. Until the aquifer ran dry or the ponderous effects of corrosion wore the stone away, the water would continue to drip with the same perfect rhythm for thousands and thousands of years. \n\nI could practically see the hydrogeological machination; the little dribbling stream crawling from the subterranean lake, moving through tight cracks and crevasses, an impossible knotwork of openings that by chance and circumstance, had made a path through thousands of feet until it came to this spot. And there, at the very top of my tunnel, I could practically see the tiny little aperture the water had to push through to reach this final spot. I could almost see the way it bulged about the hole, the surface tension keeping it from just pouring out, making the droplet grow with the mass of water moving behind it until it finally reached that critical mass where the hydrogen bonds no longer held it to the rock around it, and it was set into freefall. Perfection. A clock whose fastest hand was timed down to the atom. It was the world's clock. It was the very heartbeat of the earth. And down, down, down the little droplet went, plummeting inevitably towards death. Drip. \n\nI watched the water splash onto Astrid's dead face. The rivulets ran down her cheek like tears, and pooled upon her lips. Somehow, her face was the only part of her still intact. I wished it wasn't. I wished with all my heart that Julia had burned it into an unrecognizing crisp, but there it was. Perfect. Dead. Her steely blue eyes simply stared up at the hole she'd emerged from like some savior angel, the remnants of her hacked-off wings reflecting resplendently one last time so that she could deliver the fatal blow to Julia's back. It was the ultimate sacrilege for her to kill a god, and yet she'd done it without hesitation for me. Even after I'd tortured her, raped her, mutilated her, made her abandon all she held dear, she still dove through that hole right into the very pit of hell. \n\nShe must've known what awaited her down here. Nothing. Not death, just... nothing. There was no love down here for her to save, no hope for her to rekindle. Had she speared Julia through the heart and killed the god in an instant, Astrid would've found nothing in this hole but a sniveling little rat stuck in her self-made sewer. With her wings cut right off, the only way out was up, for I didn't have the strength in me to move an inch. She would've starved down here, and in the end, before the hunger finally took her, she would've hated me like I deserved. \n\n\"Why then, you fool?\" I hissed at her, my tears splashing her face. She just stared blankly at the hole in the ceiling. It was like staring through the wrong end of a telescope, for the hole Julia had made through the rock was a perfect cylinder of molten shale. It would've been a fitting tomb for me, but I knew I would not die here. None of this was real, but this was not some fever-dream trip. The psychedelic fungi had taken me to a place more real than reality. Everything was so vivid. The stone on my feet was solid, the air on my face was cold, and the water that splashed me was wet. I peered into the darkness and searched for my demons, but their horrific grins didn't shine from the black. I was alone here. I was alone in a way I had never been before. For when I touched my hand to the rock, I felt nothing but its surface. I could not feel the great depths of crystalline stone, nor the billions of contours and edges, nor the multitude of layers all stacked so perfectly atop each other like a calendar for the eons. It was just rock to me.\n\nI stood up, and realized in doing so, that I was strong again. I jumped just to make certain, and found that I was as spry as I'd ever been. I paced about the small cell I'd made beneath the earth, and contemplated the meaning of this vision. Inevitably, my attention was drawn to the burnt and mutilated husk of Astrid Skyborne. I tried to pretend she wasn't there. \n\nI attempted to climb into Julia's hole, but the rock was smoother than an iron pipe, and I could not gain any purchase. I tried to find another stone to hack at the rock around me, but there was nothing small or loose this far beneath the earth. My cell was a perfect cave, and there wasn't so much as a jagged edge to use. I glanced down at the katana sticking out of Astrid's back, then back at the wall before me. I turned back to the katana, and sighed. The hardest material down here would be iron, and that blade was steel. I turned her over and closed my eyes, but it was too late; I'd seen it. Her entire back was burnt away, turned to crisped meat that hung from her spine and ribs. I wrapped my hand around the handle, and shuddered at how easily the blade came out of her. When I turned my face skyward, I opened my eyes, and plotted my course. \n\nThe Breytan blade was sharp, and it cut through the rock easily. I carved a foothold in only a matter of minutes, then I carved a second. I secured my feet in the holds, and elevated myself through Julia's hole. Once there, I carved two more footholds into the well she'd made, and carefully climbed into it. It was narrow enough that I could press my back against one side while I planted my feet on the other, and at first, I attempted to shimmy my way up the well, but I slid back down to the bottom, and had to stab the wall just to avoid falling into my cell. I secured my footing once more, and let out a sigh. I would have to cut my way up. I looked up at the pinhole of light so high above me, and recalled how terrible my flight from Julia had been. I'd burrowed deeper than I'd ever gone before just to escape her heat. Thousands and thousands of feet down.\n\n\"How many minutes have I been in my head?\" I mused out loud, wondering if I spoke with my real mouth. I awaited Gloria's response from the waking world, but there was nothing. Contrary to her promise, I was truly alone here. I gripped the katana, gritted my teeth, and began to cut. \n\nAfter thirty minutes, I had made it up about two-hundred feet. The pinhole of light at the top didn't look any smaller, but the darkness below certainly did. I was stuck somewhere between claustrophobia and acrophobia, which seemed like contradicting phobias except for this exact situation. Of course my mind would put me through something like this. I truly did hate myself. \n\nAfter another thirty minutes, I was a sweaty mess. My legs were searing with the pain of pushing constantly against the wall, and my back was aching so much that it felt like my spine was being ground into dust. Sweat dripped from my face and pooled onto my belly, and I wiped it with my forearm, and recommenced cutting away at the rock. The moisture ran down my hands as I cut, and made my grip slippery. The blade caught on a jagged piece of stone and twisted out of my hand, and I had to lurch to the side in a gut-wrenching reaction. One of my feet lost its footing, my back slid down the tunnel, and I caught the blade. Only now, I was stuck. My body made a bridge between both sides of the well, but my neck secured one end while only my one foot secured the other. I tried to shimmy my torso up with my shoulders, but my shoulders had fallen beneath my point of contact. As my sword-hand swung below me, I felt a sickening wave crawl through me at the thought of all that space beneath me. One slip of my foot, one twist of my abdomen, one tiny loss of balance, and I would fold in half and tumble all the way down. Every part of me that wasn't touching the walls suddenly felt incredibly exposed, and that was every part of me save for my one foot, my neck, and the back of my head. My chin was forced into my chest, making me look at the precarious bridge of my body. My legs were so tired, my abdomen was screaming in pain, and my back was just hanging out over the void below me. \n\nThe sweat from my scalp began to creep down my neck, and slid between my point of contact with the wall. I lurched suddenly with the loss of friction, and dropped a sickening inch. My head was forced even more forward as the point of contact became the base of my skull, and my chin drove into my chest, making me look at my footing, which was now horrifically above me. Once again, with the utmost care, I reached across from me, and stabbed the point of the katana into the rock. I applied increasing force to the point, and cursed silently when it began to quiver and shake, threatening to slip suddenly against the curved walls. As I placed more and more force, by body began to slowly rise. My head slid upward, then my neck, then my upper back. Once I got my shoulders secured to the wall, I buckled my one locked-in leg, and pushed myself upright. The point of the blade skidded from its security point, and I pressed as hard as I could between my contact points. After the adrenaline had left my body, I pushed my other foot into the foothold, and let out a sigh. Only a few more thousand feet to go. \n\nAfter three hours, I was about halfway. I'd cut multiple little outcroppings along the way where I could sit down and let everything rest. The only thing I couldn't put to rest was my vertigo, for the outcroppings were barely deep enough to perch my ass on, and since I couldn't cut a space out for my entire back to fit into, I was forced to look down at the pit beneath me. My hands were blistered and bloody, but I'd wrapped one of them in such a way that it was impossible to let go of the sword. When I was done resting, I stabbed into the rock, swung out, locked my feet into the footholds, and recommenced my climb. \n\nAfter six hours, I was almost there. My shoulders and back were raw and bloody, my feet were sleuthed of their calluses, and my muscles were so stiff that they locked and cramped at a moment's notice. There were several times during my ascent when I'd broken down and cried, but the terror of falling and the horror of being stuck pervaded, and like a scared little rat, I climbed up through my hole. My blade was worn down near to the cross-guard, and sparked every time I drove it into the rock. I had to cut the spaces closest to me, then rotate around the wall and secure my feet where my arms had been. \n\nIt took another two hours just to make the same progress I'd done in twenty minutes when I started, but still, I persevered. A dangerous emotion was beginning to bubble within me: hope. I had watched the pinhole above me grow gradually larger as I made my way up. At first, it seemed an illusion, for the changes were so miniscule, but there was no doubt about it now. The hole was so big that I could see its lip, and above me glared the brilliant pale light of the sky. So close. So fucking close. I twisted my way up the hole like an auger, moving with such torpidity that it seemed I was walking in place at times. I didn't dare waste anymore of my blade on an outcropping to rest, and so I endured the terrible burn of lactic acid in my muscles as I moved ploddingly upward, inch by inch, foot by foot, yard by yard. The lip was so close now. It was like I could reach out and grasp it, but I dared not. Even as my toes came over the very edge of it, I dared not change my motion. I just kept cutting, stabbing twisting, moving with the same automatic motions that had gotten me this far until I could nearly see over the lip. I craned my neck to look, and my feet slipped. \n\nI fell. My legs dropped beneath me, my stomach lurched, and I plummeted. I flailed out for purchase, and jammed both my hands into one of my footholds. There was a sickening crack, and I lurched forward. My body smacked into the wall, my face pounded into the rock, and my nose caved. Pain burst into my head, stars erupted behind my eyeballs, and the stench of iron suffused my sinuses. As the agony of my face radiated, I became dimly aware that both my wrists were broken. I swung from my ruined hands as if they were made of rope, and my wedged fingers and thumbs signaled their pain into my mind. \n\n\"Shit,\" I whispered to myself. Blood poured into my mouth, and I spit it out onto the wall before me. Shaking my head clear of the pain, I looked up, and saw the glaring white light of freedom just three feet above me. My hands were beyond useless, my sword was clanging against the walls a thousand feet below me, and I was trapped. Freeing myself meant falling, and staying meant... I didn't know what it meant. I had to constantly remind myself that this was all in my head, but nothing about what I was experiencing felt imaginary. I was beginning to wonder if everything I'd experienced in Gloria's cottage had been a lie, for this felt so much more visceral than that. \n\n\"Fuck it,\" I muttered, and planted my feet against the wall. I walked my way up until my wedged hands were in line with my extended arms, then I pushed with all my might. I shot backward, smacked into the wall, and bridged desperately. I barely caught myself before I plummeted headfirst into the abyss, and I let out a breath. I was staring straight up now. My useless hands dangled at my side, and my crushed nose poured blood down my cheeks, the pain causing my eyes to well in the glaring pale light. There was only one thing I could do. I raised my dangling hands from their limp wrists until they hung above me. I took a steeling breath as my legs began to fail me, and lurched. \n\nFor a moment, I was suspended in air. My body rotated in a tortuous front-flip, then righted itself. My hands came up and over me, and latched onto the lip of the hole. Before my body could fall beneath me, I used what little momentum I had left to swing back, secure my feet where my shoulders had been, and drive the crown of my head into the rock. It worked. A concussive bell rang in my head when I smashed my horns against the wall, but I did not lose consciousness. Now I was staring straight down, and the vertigo was nauseating. I closed my eyes, felt around the lip with my broken fingers, and began to step backward.\n\nI dragged my head up the wall with each step, and had to secure my forearms to the lip and bring myself up lest I topple forward. Sweat poured down my brow and dripped with blood down the well, and the delayed pattering of its droplets informed me just how long it would take me to fall. That was the final thought that went through my head as I came over the top of the lid. My feet suddenly slipped backward, and I forced my ankles into rigidity to keep my legs from bending. I locked my knees, clenched my cramping abdomen, and straightened myself out over the hole. I rolled to the side, and let out a sob of pure ecstasy. \n\nEvery muscle, joint and tendon screamed in agony. My back was shredded, my hands and feet were worn to the fibers, my nose was crushed and my wrists were shattered, but I had never felt such pure relief in all my life. The cool air caressed my flesh, the light filtered behind my eyelids. I took in a sweet breath, and opened my eyes. \n\nAbove me, was a pinhole of light. Beside me, was the mutilated body of Astrid Skyborne. Drip, drip, drip, went the water, that interminable clock of geology. There was no hole beside me. My nose wasn't broken, my wrists were fine, my flesh was without wear. \n\n\"Of course,\" I whispered, feeling my heart sink low in my chest. \"I haven't gone insane from the mushrooms. I haven't even gone back in time. I'm dead. I'm in hell.\" \n\n\"It was actually supposed to be heaven,\" a horribly familiar voice mused. \n\nI slowly turned my head, and saw a shadow in the corner. Her profile was inky black, and so was her flesh. Her pits of eyes stared at me curiously, the white pupils alight. \n\n\"Of course you're here,\" I croaked. \n\nShe inclined her head. \"Have we met before? Ah, no\u2014you're mistaking me for my memory. I get that quite a lot.\" \n\n\"I know who you are!\" I snarled, then took a deep breath, and closed my eyes. \"This is a nightmare,\" I muttered. \"I'm high as a fucking kite right now. I'm lying in Gloria's bed, probably pissing and shitting myself, but I'm OK.\" I opened my eyes, and stared my nightmare in the face. \"You're not real.\" \n\nCorruption rolled her eyes. \"Relativism is such a farce. I found the remnants of that ridiculous ideology in one of Wisdom's felled trees. There may be infinite perspectives from which to view the world, but there is only one constant truth. Do you enjoy philosophy? I don't. It's just the prattle of a bunch of old men trying to reason-out why they never lost their virginity. Metaphysics, epistemology, axiology, and logic. Bleh!\" \n\nI blinked. How the hell had my preschool-level education concocted that idea? \n\nCorruption fiddled with her fingernails, and smiled up at me. \"As much as I loathe education, I can't help but absorb knowledge when I go on these excursions. I suppose it's my mother's academic rapaciousness that compels me to soak up as much of it as I do. What a clever creature she is.\" Corruption leaned in as though to whisper conspiratorially to me. \"Though between me and you, let's just say she got all her smarts from her mother's side of her family. Not to say her father's stupid\u2014far from it, but in the few seconds I spent in that tortured mind, I saw that all the critical thinking skills had been purposefully dulled in favor of 'faith,' which is just ridiculous. Ah, but to use an idiom of the theologists, I'm clearly preaching to the choir.\" She gestured broadly to my hovel. \"You obviously have no faith in a higher a power, for my ghost never placed her book inside your center. Where is your center, by the way?\" ",
        "\"What?\" I croaked. \n\nShe frowned, and knocked against the walls of the hollow. \"Jeepers, there's no structure to this place at all! What in the heck are... ah, I see. It's a temporary conduit. You're not a true astral traveler, and yet you're burrowing this abstraction right into my jungle. So much for all my hard work! Perhaps I can calm the astral plane, but I can't stop mankind's frivolous abstraction from popping up here and there like pesky weeds. Take this realm you're building for yourself, for instance.\" Corruption gestured around the hovel. \"This is Depression. You obviously understand it intimately, you poor wretch. Did you know that you're digging this conduit right into my old realm? Keep going, and you'll pop right into the abyss of Guilt. You don't want to end up there, believe me.\" \n\nI stared at Corruption, and she stared back at me. For tortuous seconds, I watched her expectant smile, recognizing her face, but not understanding the expression upon it. It was curious, almost welcoming, almost... happy. Where was the sardonic curl to her lip? Where was the depthless hunger in her infernal eyes? The longer we stared at each other, the less ethereal she seemed. She shifted awkwardly, rubbed her shoulder insecurely, and even feigned a cough just to break the silence. \n\n\"So... I take it you're not much of a talker, huh?\" Corruption laughed anxiously. \"Makes sense, since you're... you know... suicidally depressed. I guess I'm being insensitive. I'm not really good at reading people, which is strange. I give my host limitless perception, but I myself am quite daft when it comes to socialization. The desire is there\u2014I'm actually quite the gregarious individual, if you can believe that\u2014but... it's like I'm a child. Sometimes when I talk to Tethered Ones, I feel so out of depth. Have you met Bravery before? Quite the stern individual. The old geezer almost shamed me into a timeout before I remembered my omnipotence. And Curiosity, gosh, she asked so many questions! I felt like I was being interrogated! Call me a social dullard all you want, but that lady didn't have any decorum at all! And don't get me started on\u2014\" \n\n\"WHAT THE FUCK IS GOING ON?!\" I screamed, then closed my eyes, and collected myself once more. There was no need to panic. I was dead, and I was in hell. Nothing mattered. There was nothing to worry about. I was going to suffer, but that was OK. I'd suffered my whole life. There was a sweetness to suffering if I just surrendered to it. I opened my eyes, and Corruption was standing above me, studying me curiously. White patterns thrummed from her flesh. Lucilla's white patterns, of course. This black creature was my demon.\n\n\"Well,\" I whispered, \"do what you do. Take the pain away.\" \n\nCorruption cocked her head, and smiled. She dropped to her knees beside me, and ran her eyes up my body before resting them upon my parted lips. She opened her legs and straddled me about the crotch, pressing my cock down against my abdomen, her delicate netherlips salivating upon my shaft's underside. As her succulent thighs clamped around my waist, she made her way up my body, stooping low so that her nipples grazed my tummy and breasts. My vision was veiled in a curtain of her black hair, and she centered her black and white eyes upon me. In the darkness, all I could see were those infinite blazing white irises. I was in hell, and she was the devil. She had been the devil the whole time. I smiled up at the bane of my existence, and opened my mouth. She smiled back, her teeth starkly contrasting her inky complexion, and she pressed our lips together.\n\nShe froze. \n\nShe jolted upright. \n\nShe shrieked. \n\nShe clutched her face and screeched to the tunnel above, and the patterns upon her strobed with such violence that the world became naught but the flashing of white and black, her negative image burning behind my battered lenses until I saw her only in profile. Her scream grew higher and higher, her body twisted in agony, and with a burst of black smoke, she was gone. \n\nTHE HUNTRESS \n\nThe predator was distracted. She flitted around her cottage frantically, searching cupboards and drawers, bending and leaping to canvas every inch of her abode. I wondered idly what she was looking for. Some kind of medicine, perhaps? For her pet was on the bed, convulsing and writhing with foam coming from her mouth. She was in the midst of a seizure. The predator had secured a bit in the nymph's mouth so that the nymph wouldn't grind her teeth or swallow her own tongue, and while she'd done the right thing by rolling the nymph on her side, she hadn't taken into consideration how close to the edge of the bed the nymph was. The nymph rolled off the side, and hit the floorboards with an audible thump. \n\n\"Willowbud!\" the predator cried, and rushed to the nymph's aid. I wouldn't get a better chance. I unfurled my great batwings, and glided silently from the treetops. My wings cut through the air without even a whistle, unmoving and rigid, floating me down, down, down toward the square of warm luminance that contrasted the desolate monochromatic world of lunar light. The predator pulled the nymph back onto the bed, and looked up. I closed my wings, and shot through the window.\n\nMy feet smashed into her chest, and she was hurled backward. She crashed into the wall and crumpled to the floor, and I plucked the unconscious nymph from the bed, and shot out into the night. I felt the whisper of her fingers graze against my heel as I left the window, barely a hair's breadth from snagging me and dragging me to a horrific end, but that breadth was all I needed. I unfurled my wings, and flapped away into the night.\n\nI flew until dawn. For miles and miles, I went; soaring over the dark landscape beneath me, moving past the planes of Drastinar, past the snarled dying woodlands, and deep into the rolling hills of the dwarves. The predator would hunt me ceaselessly, I knew she would, and there was no hiding from a creature such as she. She would pluck my scent from the very wind, and follow me to the edges of the earth to regain her precious prize, or at least to act vengeance upon her pet's killing. It mattered little to me. I was not one to stay in a single spot for long, nor was I too worried about the prospect of death creeping ever toward me. Death was always following us, as this little Willowbud would soon find out. \n\nWILLOWBUD \n\nMy eyes opened, and I was staring at a thatch roof. No, it wasn't thatch; it was a complex interweaving of thorny sticks. It was a nest. Like a wren, this bird built its nest in a spherical shape, completely enclosing it save for the hole that was opened at the side and facing the ground. That hole revealed a sickening plummet to the earth below, showing me that the nest was built into the side of the Gratoran Wall. Much like my visit with Corruption, everything felt too real to be a dream. The air I breathed was as sharp as the air that had been in the cottage and as stiff as the air that had been in that cave, the wood that I rested upon felt as tangible as the bed I'd slept upon and the rock I'd climbed through, and the vampiric horror watching me from the darkness of the corner was as vivid as Gloria and Corruption. It felt like perfect lucidity, all of it had, and I knew for certain that this was the afterlife, for I now understood unequivocally that Gloria and Corruption were both dead, and so was I. As I looked upon this creature, I knew without a shadow of doubt that I was indeed, in hell. \n\n\"What are you, Pet?\" the creature croaked, her voice a horrific rasp. Black hair hung in strands from her bald pate, black wings sprouted from her mutilated back, and her pallid vampiric flesh was knotted and scored with such torture that I didn't know how she moved in it. Her red eyes stared at me, lidless and bulging from beneath a severe brow without any eyebrows. \n\n\"What are you?\" I hissed back. \n\nShe cocked her head like a bird, and clicked her tongue. \"I am a huntress.\" \n\n\"Who are you?\" \n\nShe clicked her tongue again. \"I have answered your questions, now you will answer mine. What are you?\" \n\n\"I'm nobody.\"\n\nShe cackled horrifically. \"You are clearly somebody, Pet, for why else would the predator keep you?\" \n\n\"I don't know,\" I muttered. \n\n\"You are nobody and you know nothing,\" the huntress mused, cocking her head in a strange avian manner. \"Methinks you are a liar, Pet.\" She scuttled toward me on her hands and feet, her arms and legs spread out wide so that her motions were more like an arachnid than a human. I cringed, but I could do nothing else. She dipped her face and sniffed me, then cocked her head once more. \"Strange smell for a nymph, I think. There's more to you than meets the eye. Secrets, secrets, secrets; so many silly little secrets.\" She contemplated me for a moment, then her eyes rested upon my crotch. There was a noticeable bulge in my dress, and I felt my throat close when her eyes lit up at the sight. \n\n\"Don't!\" I croaked. \n\n\"Do not?\" the huntress giggled. \"You are my pet, Pet; you do not get to say what I can and cannot do!\" \n\nShe produced one jagged thumbnail, and sliced my dress from the bodice to the skirt, unwrapping me like a present. She stared at my manhood with confusion and wonder, turning her head every-which way to gain the perspective she needed to understand it. \n\n\"I see why the predator kept you,\" the huntress crooned. \"A masculine organ on a supple treat such as yourself? Tasty, tasty, tasty...\" she grinned horrifically at me, all of her teeth missing except the long fangs. \n\n\"Don't!\" I cried; my voice ragged. \n\n\"Do not, do not, do not!\" the huntress cackled. \"Such commands from such a helpless creature. Did you cry 'do not' when the predator milked you?\" She tittered to herself. \"I daresay I heard your moans throughout the forest, little pet. Shall I make you moan?\" She slid her tongue over her gums, and raised her hairless brow lecherously. \"Yummy cummy in my tummy!\" She cackled again, high and broken. \n\n\"Please, Astrid,\" I whimpered. \n\nThe creature who wore Astrid's face cocked her head, and for a second, I saw the barest glimmer of recognition in her eyes. But of course I was just imagining it, for that glimmer was but the glint of avarice as she lowered her mouth to my crotch. Her lips were as good as Astrid's, her tongue was just as heavenly, and her throat was just as welcoming as she took me deep into her gullet. Despite my horror, despite my disgust, I could not deny the sensations in my loins. I became hard for her, and she feasted upon me with all the sweet gluttony Astrid had so many times. But the look in her eyes was cruel, and there was nothing that bespoke love in the way she pleasured me. And when I orgasmed into her swallowing throat, and I moaned just like she promised I would, there was nothing but a mindless hunger in her expression, looking down at me like I was a suckling pig ripe for the butcher's blade. \n\nAstrid. \n\nAstrid. \n\nI thought I'd stared into the devil's face before. Now I knew what face the devil would truly wear for me. Tears poured out of my eyes and ran down my cheeks, but she didn't care. She just grinned her horrific gummy smile, and went back to work. \n\nTHE HUNTRESS \n\nI tossed a dead squirrel onto Pet's chest. \"Eat,\" I commanded. \n\nPet just looked at it, then looked up at me. \n\n\"Eat,\" I commanded again, prodding her shoulder. \n\nShe continued to just stare at me. \n\nI sighed. \"I had to fly from this cliffside to catch that squirrel for you, Pet. I had to stalk it from above, swoop down at the precise time, and catch it, then I had to fly all the way back up this cliff to give it to you. Now that you understand the hard work that went into acquiring you this meal, perhaps you shall eat it, no?\"\n\n\"I'm a nymph,\" Pet said. \"I can't eat meat.\" \n\nI cocked my head, and narrowed my eyes. \"Then perhaps you should just eat the fur.\" \n\nShe turned away from me, looking out through the hole in the nest. \n\nI crawled over to her, and sat beside her head. She had such white hair, and when I ran my fingers through it, each strand felt like silk. She shuddered and winced as my claws gently grazed her scalp, finding no pleasure in my touch. I frowned. \"Do you not like it when I touch you, Pet?\" \n\nShe shut her eyes tightly, and a tear leaked down her cheek. \n\n\"Pets are supposed to like it when their master strokes them,\" I mused, gently sliding her hair behind her ivory horns. \"You will learn to be pleased by my touch. I shall train you.\" \n\n\"Just kill me,\" she whimpered. \n\n\"Why would I do that?\"\n\nI enjoyed the texture of her fine white hair for a while longer, then I slid my fingers down her throat. She shivered all over when my claws dragged caressingly along her collar, then across the subtle swell of her breast. She was so young, so unblemished and ripe; like a juicy little pear that would burst with flavor from a single bite. \n\n\"Do you truly want me to kill you?\" I asked her. \n\nShe nodded. \n\n\"You must understand, Pet, that I will keep you alive for as long as I can if I decide to eat you,\" I whispered. She opened her eyes then, and looked at me with a gaze filled with horror. \"Yes,\" I giggled, \"I will start with the white meat,\" I caressed her breasts, \"then I will enjoy some of the dark meat,\" I slid my hands down her arms, \"but first, of course, I will have to have the tasty little bits,\" I tickled her fingers, and cackled when she whimpered. \"No, no, no, it will not be an enjoyable end for you, but I must preserve your life to savor every bit of you.\" I touched her throat, \"I am not one to waste a delicate treat in one meal. Now, do you wish to be my pet, or my dessert?\" \n\n\"Your pet,\" she croaked. \n\n\"An excellent choice!\" I exclaimed, and tousled her white mane. Her hair became disheveled, forming a veil across her face. When I stroked the strands away, she was staring at me with scrutinizing eyes. \n\n\"The Pit,\" she said. \n\nI cocked my head. \"What was that, Pet?\" \n\n\"Drastin,\" she said. \n\n\"What gibberish do you speak?\" \n\nShe worked her jaw, and whispered, \"Iona.\" \n\nI poked her nose, and giggled when she scrunched it. \"My little pet likes to make up words, does she? What else does she do?\" \n\n\"She asks questions,\" Pet replied. \n\n\"A curious pet, hmm? Well, Pet, what questions do you have?\" \n\n\"Do you remember anything?\"\n\n\"What a silly question.\" \n\n\"What's your oldest memory?\" she asked, unable to hide the desperation in her voice. It seemed this question was of some urgency to her, though I couldn't fathom as to why. \n\nI hummed contemplatively, and tapped my lips. \"I was born in agony. Burns everywhere. Pain everywhere. I was screaming, screeching, shrieking like a banshee, yes I was, and my mother offered me no relief.\" I scratched at my bald pate. \"I was in a barn, yes I was, staring through a hole in the roof. Mother would feed me from bags and bottles, and I got stronger every day. When I was strong enough, I flew away, and I never saw her again. It must've been hundreds of years ago.\" \n\n\"It was two weeks ago,\" Pet whispered. \n\nI howled with laughter, and poked her cute little nose again. \"You are such a silly pet.\" \n\n\"Gloria is your blood-mother.\" \n\n\"Who?\" \n\n\"She pulled you out of that hole with me,\" Pet whispered. The tears fell freely down her cheeks now. \"She tried to save you the only way she could, but you were too far gone. She let you go. She didn't want me to see you.\" \n\nI sighed, and cradled my pet's head in my arms. She wept silently, finding no comfort in my touch. \"I am sorry that you have gone mad, little pet,\" I cooed into her ear, \"but do not worry; I do not care for your sanity.\" I planted a kiss upon her brow, and she whimpered. \"You are like a lamb kept weak by the farmer to sustain the tenderness of the meat. I will do the same for you, Pet. I will keep you tender and soft, and feast from your spout when I desire, and all your worries will wash away.\" \n\nThe little pet sobbed in my arms, and I hummed a little song that had somehow latched itself to my memory. \"The wings of war are out the door; they've left their feathers on the floor. Keep your eyes on the horizon, and you may see Iona soar.\" Ah, so I did know of Iona. What strange gibberish. \n\nFor the next three days, I nurtured my pet, and she plied me with ridiculous questions and claims. She went so far as to say I was a warrior princess, and then burst into tears and claimed everything was her fault. Silly little thing. I had to collect various grasses for her from the mountainside, for she not only refused to eat squirrels, but also rabbits, birds, mice, chipmunks, and even hogs. I was beginning to think she had much in common with the weak things I hunted for her; perhaps she was saddened by their loss, and so refused to eat them. She claimed to be unable to, yet she had canine teeth in her mouth meant for the rending of flesh. It vexed me. Still, I did as she bid, for the nectar from her spout was sweet and decadent, and tasted less-so when she was famished. \n\nIt was strange to me that she was so frail, and yet her muscles were strong and toned beneath her youthful caramel flesh. I did not taste any disease in her, nor was she paralyzed. She made strange claims of being a divine being sapped of her power, but these were but the ramblings of the insane, and it was very clear to me that she was mad. It made her all the more endearing to me; she was like a sick puppy. I doted upon her ceaselessly, yet she never warmed to my touch. Every attempt at asserting my affections was met with her sorrow, disgust or fear\u2014generally all three in varying degrees. When I felt lusting, I rode her, and when I felt hungry, I suckled from her, and though she moaned and cried out such enticing tones of pleasure, she did so with her eyes shut tightly, and sobbed the name 'Astrid' over and over.\n\nAstrid was the source of much of my vexation. My pet seemed to see Astrid in every waking moment, and even called for her in her sleep. If I ever found this Astrid, I would tear off her stupid little head and give it to my pet as a gift. Then maybe her suffering would end. \n\nWILLOWBUD \n\nIt was the fifth day of my captivity, and I was beginning to notice things. Things like the great mass of rock the nest was built into. Things like the hundreds of little pebbles that were strewn about the twigs of the thatching. I couldn't manipulate them, but I could feel them. That sensation of earthly connection severely rattled the comfortable idea that I was in hell. Without that connection it was very easy for me to believe my spirit had gone to the unforgiving afterlife, but now that I felt it, I began to get the creeping notion that all of this was real. I just didn't know where reality started or ended anymore. Had Gloria given me the wrong mushroom? Had I actually gone to the astral plane? Had I.... but no... no, I couldn't have. It was a dream, as vivid, strange and horrific as all the other fever dreams I'd suffered for so long. Astrid mutilated and dead; Corruption wreathed in the patterns of a woman I'd murdered. My guilt manifesting itself in ethereal flesh to torture me. Like in all my other dreams, I was helpless. I was a slave to the rock I had once commanded, and had to scrape my way to the heavens just to find myself back in hell. I rested my hand against a pebble, and felt the connection. This was real. Perhaps everything since that day in Drastin was just an apparition, but this moment was real. She was real. \n\nI spent most of my days lying on my back staring at the ceiling while the huntress slept in the corner, cocooned in her batwings. She didn't know that was how she used to sleep in my bed, all wrapped in her own feathers. When the evening came she would get lusty, feed upon me, groom me, then fly out to hunt. I hated to admit it, but in the blackness of the night when I was all alone with just my thoughts, I missed her. Even though her presence tortured me, my own company was much worse. She would always come back an hour before the dawn\u2014usually covered in the blood of some kill\u2014and she would toss a piece of vegetation on my chest and watch me eat it. Then she would pleasure herself with me, groom me, and go back to sleep as the sun rose. ",
        "\"Look what I got for you, Pet!\" the huntress exclaimed after flying into the nest. She dropped a massive watermelon right onto my chest, and beamed proudly. \"You like it very much, yes? So much food that you will get fatter than a suckling pig! I want you to be fat and happy. A fat pet is a happy pet, oh yes, a fat pet is a happy pet!\" She sang and hopped happily about me. \"There is a whole field of these just a few miles off. Melons and melons as far as the eye can see. I will gorge you until you're pregnant with food! I will make you so fat that your navel pops out!\" she poked my belly-button, and cackled delightedly, then sat back, and observed me. \"Well? Aren't you going to eat it?\" \n\n\"How?\" I grumbled. \n\nShe narrowed her eyes. \"With your mouth, I would assume.\" \n\n\"I can't bite through the rind.\" \n\nThe huntress puzzled over the fruit, then picked it up, and crushed it between her hands. Sugar-filled gore splattered me from head to toe, leaving me blinking through a mask of seed and juice. The huntress looked at me, and then burst into laughter. \n\n\"Oh, you poor thing, Pet!\" she cackled, scooping great hunks of watermelon and plopping them on my chest. \"The flies will feast on you tonight! I will have to clean you up, yes I will! Lick you all up!\" \n\n\"Don't,\" I groaned. \n\nThe huntress tittered. \"You always pretend not to like it, but you moan and moan and moan, and spurt milk with such force that it nearly chokes me!\" She collected the rest of the watermelon gore, and piled it just below my chin. \"And when evening comes, your manhood is roused before I am, so do not pretend with me, little pet!\" She poked my nose, and tittered. \"I have conditioned you. That is the first step in training a pet. Next, I will teach you tricks!\" \n\n\"You don't want to see the tricks I can do,\" I growled. \n\nThe huntress cackled. \"Oh no! Is the Earth Former going to finally rear her ferocious head, and punish me for all the free food and sex I gave her?\" She poked my nose again, and laughed uproariously when I crinkled it. \"You are just the cutest little thing, yes you are!\" \n\n\"I mean it! You better let go before\u2014\" \n\n\"Before what?\" the huntress climbed down my body, grabbed me by the ankles, and hoisted my legs up. \"Pet, how many times have I told you to alert me before you need to defecate? Gah! What a mess!\" \n\n\"I've killed foes a thousand times worse than you, you decrepit dyke! I am the god of earth and rock!\"\n\n\"You are at best the god of mud,\" the huntress wrinkled her nose, and pulled out some leaves. \"Hold still, Pet! You're smearing it!\" \n\n\"I'm not going to take this anymore, you crazy bitch!\" I snarled. \"I'm not your fucking pet!\" \n\n\"You are precisely my 'fucking pet,' and if you do not want to end up like this stuff between your cheeks, then you'll hold still!\" the huntress growled back, and delivered a sharp swat to my rear. My cock shot right up, and the huntress gawked at it. \"Pet, now is hardly the time.\" \n\nI farted, and sneered. \"I thought you liked it nasty, Astrid?\" \n\n\"Stop calling me that!\" \n\n\"Astrid, Astrid, Astrid, Astrid!\" I wiggled my little ass, and farted again. \"Didn't you say you were gonna clean me with your tongue?\" \n\n\"You are being a very bad pet!\"\n\n\"I thought I was your tasty little treat? Eat me up, Master. Eat me all up!\" I farted again, and the huntress gagged. \"Come on, Master, I'm just as tasty on the inside as that watermelon!\" \n\n\"Enough!\" the huntress growled. She marched across the nest, grabbed a terracotta pot, lifted my legs once more, and drenched me in freezing water. I howled, everything between my legs clenching puckering, shrinking and contracting. \"That is what bad little pets get!\"\n\n\"You're gonna pay for that!\" I screamed. \n\n\"Oh, I will?\" the huntress mocked, and began lathering my nethers with soap. \n\n\"You're gonna beg me to stop,\" I cackled, \"and I'm... I'm just gonna keep going!\" \n\n\"You're truly terrifying, yes you are,\" the huntress laughed back as she toweled off my ass and balls. \n\n\"Do you know what I used to do to vampire sluts like you? I used to stake their hands and feet into the ground, then watch them burn with the sunrise!\" \n\n\"No more talking, Pet,\" the huntress said calmly as she replaced my bedding, and threw the soiled stuff through the hole. \n\n\"Oh, just you wait until I\u2014\" \n\n\"Shut, your, bratty, little, mouth!\" the huntress growled, smacking my ass with each punctuation. Smack, smack, smack; the raw and cold flesh stung with her fingers, the fat rippled up my backside, and my cock engorged in defiance of the cold, growing in a thick column above my shriveled testicles. The huntress just stared at it with a look of disbelief in her eyes. \n\n\"Well, you burned bald bitch?\" I snarled. \"Are you gonna suck it, or are you gonna stare at it?\" \n\n\"Perhaps I will leave it unattended. See how you like it then, Pet! Then perhaps you will be the one who begs me, yes you will!\" \n\n\"I'd rather roll through that fucking hole than spend one more second in yours!\" \n\n\"Then perhaps I will spend some time in yours!\" she growled, and shoved two fingers all the way up my ass. I wasn't ready for it. The soap and water lubricated her invasion, allowing her to push right through my anal cuff without resistance. I yelped, and my cock curved backwards. The huntress's red eyes turned from wrathful to wicked in a moment. \"Oh, does my little pet like it here?\" \n\n\"Get your fingers out of my shitter!\" I tried to snarl, but only managed to moan.\n\n\"Oh, she likes it very much,\" she giggled, and curled her evil fingers inside me, pressing them firmly against my prostate. \n\n\"Fuck!\" I screamed, my cock throbbing and wagging violently. \n\n\"Does my pet have apologies for me?\" she asked, watching my organ with rapt interest as she controlled the way it twitched from inside me. \n\n\"Fuck you, you dead old whore!\" \n\n\"No, fuck you, Pet!\" she snarled, rubbing against my convulsing center, making me toss my head side to side in a fit of screaming pleasure. \"Fuck you, little pet. Yes, you like it when I do this, don't you? You wish I had a cock to fuck you with, don't you?\" \n\n\"Maybe you could just fuck yourself with it!\" I gasped, appalled that the scant strength in my body was now being compelled to wind my hips, stirring my clenching rim around the huntress's bony bottom knuckles. \n\n\"Yes, Pet, yessss,\" she hissed. \"I can fuck you,\" she retracted her finger to the tips, letting my anus coalesce before she forced them all the way back in, and my head flung back to exalt a note of pure joy. \"I can fuck you in your dirty little mud-hole.\" \n\nIn and out, in and out; she popped free, let me close, then she slid back in, making me feel the wonderful penetration, ravaging me, reaming me, making my little faggot hole pulse and clench to suck about her knuckles as they ran such a sweet contour through my fleshy cuff. Her fingertips pressed and massaged my anal organ, rubbing with malice, raping the pleasure right from me and forcing me to whine and mewl just for her.\n\n\"What does my pet say to me?\" the huntress purred evilly. \"Come now, you stubborn little dachshund; speak!\"\n\nI sealed my lips and hummed my desperate moans as her knuckles squelched through my sucking lubricated rim. Her fingertips maliciously massaged my battered prostate, her other hand came down to gently squeeze my roiling balls, rolling them in her cool palm, one finger extended to caress the back of my taut sack. \n\n\"Oh, you want to say it so badly....\" the huntress cooed, her voice rich with a malevolence. \"You want to submit and be my good little puppy, don't you? I'll give you what you want every night, little puppy. I'll open this dirty little hole up and ravage the squishy little button within. Just surrender to me. No more fighting. No more pain.\" Her red eyes glinted with something akin to compassion. \"I will protect you, Pet. I swear I will. Just tell me you want it.\" \n\nIt was no use. I was as helpless as a chained calf, and as tender as its veal. Surrender and submission were such tantalizing pleasures. No more worries. No more guilt. No more Willowbud. I didn't have to go to the Gratoran Desert to find some orc lord to make a slave of me. I could be the huntress's little pet right here. \n\n\"Say it, Pet,\" the huntress whispered, almost a pleading tone in her voice. Almost. \n\nI tried to keep my lips tight around my confession, but I never had much pride. It burst from me in a terrible and ecstatic scream, filled with my submission, my sweet tender surrender. \"I want you to fuck my little asshole, Master!\" I sobbed. \"Please fuck me! Please, oh please, oh please!\" \n\nThe huntress's eyes lit up, and she grinned from ear to ear in something almost like affection. Almost. As her hands did such wonderful damage to my insides, her lush mouth sought my raging spout, and she wrapped her red lips around it. And though her fangs grazed me, and though her tongue was rougher than it had been before, she still consumed me with all the gluttony and sensuality she had before, pulling those lips up my pole to sheen me, plunging my spear deep into her neck so that she could nestle me so perfectly into her throat. That night, I didn't look away from the horror raping me. That night, I stared her right in her red eyes as she fed from me, as she milked me, as she did the closest thing she could do to love me. When I came with a scream down her swallowing throat, and writhed in the prison of my euphoric flesh, I did so with a smile, and the words 'Master' on my lips. \n\nTHE HUNTRESS \n\nTime was a strange thing. To me, it seemed as though months had passed since I had secured Pet, but she seemed to believe it was a mere two weeks. But Pet was crazy, so what did it matter? I had gone through this ritual at least a hundred times, maybe even more. In fact, it had probably been years\u2014maybe even decades. After sucking a rabbit down to its marrow, I secured a few ears of corn from the field, outmaneuvered the pesky traps the farmer put in place, and flew back up the sheer cliffside. It took me a long time to get to my nest, and I was exhausted by the time I got there, but seeing Pet's radiant smile when I flew through the hole made it all worth it. \n\n\"What did you get me this time, Master?\" she asked me. Pet wasn't as helpless as she'd been before. She walked about the nest and tidied it, and busied herself with her rocks. She'd secured all of the little pebbles from the thatching and placed them in a pile in the corner, and I'd sometimes find them assorted in odd patterns or structures. \n\n\"Does my pet like golden grain?\" I asked her, procuring the ears of corn. \n\n\"She does,\" Pet giggled, and motioned for them greedily like a child. \n\n\"Ah-ah-ah...\" I tutted, holding the ears up where she couldn't reach them. \"What does a good pet say?\" \n\nPet got to her knees, folded her hands in her lap, and looked up at me with those adorable green eyes of hers. \"Pretty please, Master,\" she said in the cutest little voice, \"can I pretty please have a treat, pretty please?\" \n\nI grinned down at her adoring face. \"Only if I get mine first.\" \n\nPet smirked shyly, then opened her pressed thighs. Her cock sprang forth, bronze and delectable, a pretty little bow made of maple leaves wrapped just below its head. \"Do you like it?\" she tittered, shrugging her shoulders in a play of childlike coyness. \n\n\"It's the prettiest thing I've ever seen, yes it is,\" I snickered back, and dropped to my knees to begin my meal. \n\n\"Ah-ah-ah...\" Pet giggled, placing her foot against my face, stopping me. \"I have conditions this time, Master.\" \n\n\"My pet likes to play such ponderous games.\" \n\n\"She does,\" she grinned impishly. How could I deny that face? \n\n\"What conditions have you?\" I asked. \n\nShe batted her lashes. \"I want to call you 'Astrid.'\" \n\nI rolled my eyes. \"Why always this?\"\n\n\"Why does it matter?\" she pouted her pouty little lips. \"It'll make me happy, and that's all that should matter to my master.\" \n\n\"You're my pet; it's your job to make me happy.\" \n\n\"My happiness is your happiness,\" Pet whispered, and began stroking her beautiful spout, moaning through little hums. \"I've been teasing myself all day for you,\" she groaned. \"Bringing myself to the very edge over and over, filling my balls until they're ready to burst!\" She whimpered so enticingly, and bit her lip. \"I want my master to know how much I appreciate her, but I can't find the energy unless I know I'll get something back.\" \n\nI gazed upon her taut orbs, each one tucked so pristinely in her smooth little sack. Oh, so much delicious nectar was in there for me, yes there was. I could smell it. \n\n\"Fine,\" I muttered, \"you can call me 'Astrid.'\" \n\nPet's eyes glistened with happiness. \"Thank you,\" she whispered. \n\nAfter I had sated myself with her and emptied the rage that roiled in her nethers, Pet snuggled into my arms, and allowed me to groom her. She had begun bathing regularly with the pots of water I brought up from the stream, and her pure white hair smelled of lavender and was so soft my hands couldn't comprehend it. I spent indulgent hours raking and petting her hair, and Pet moaned and groaned with the pleasure of it, no longer cringing at my touch. \n\n\"What do you do with your little rocks while I'm away?\" I asked her.\n\n\"Just... tricks and stuff,\" she mumbled sleepily. \n\n\"Show me a trick.\" \n\n\"No.\" \n\n\"You are my pet, and you will show me a trick!\" \n\nShe stuck her tongue out at me. \"You can tame me, but you can't train me.\" \n\n\"I thought you were the god of earth and rock?\" I teased, prodding her soft little breast. \"You can't even show me one little measly trick?\" \n\nPet's eyes topped her brow, and she smirked. \"Coerce me.\" \n\n\"Ahh...\" I sighed, and pinched Pet's little nipples as she lounged in my lap, rolling them until they were hard, \"...my pet is such a lusty creature, yes she is. Always wanting to play these lusty little games.\" \n\n\"Twist them more,\" she moaned. \n\nI torqued her nipple until her breasts were spiraled with succulent flesh, and she moaned delectably, licking her lips. \n\n\"Show me your little trick, Pet,\" I whispered into her ear. \n\n\"Watch carefully,\" she whispered back. She presented a pile of pebbles in her palm and flattened her hand so that it faced the ceiling. For a moment, they were still in her hand, and a hushed gravity fell between us. Then she tossed the pebbles into my face, and cackled uproariously. I twirled my squealing pet in the air, laid her across my knee, and spanked her bare bottom. Again and again, my hand flattened against her succulent little rump, and again and again, she yelped and giggled, cajoling me all the way with nasty little jokes until the both of us were in a pile on the floor, and she'd somehow managed to wrestle her way atop me. \n\n\"You are a wretched little thing, yes you are!\" I exclaimed. \n\n\"Am I bad doggy?\" Pet grinned impishly. \"What'cha gonna do about it, Astrid?\" \n\nI could feel Pet's excitement pressing hard against my belly, and the desire alight in her mischievous green eyes. It felt wrong for my pet to be atop me, and yet, I quite enjoyed the weight of her body. She ran her little hands across my scarred and rough flesh, and in the scant places where I still had feeling, I enjoyed her caress. Pet's expression changed slowly to one of contemplative sorrow as she studied the paths of her fingers across my ruined skin. My torso was a horrific knotwork of scarified tissue, the occasional black ink of some tortured tattoo left upon a swath of me. She grazed her fingers along the places where my breasts might've once been, then drew it up my collar. \n\n\"Does it hurt?\" she asked softly.\n\n\"It doesn't feel like anything.\" \n\n\"I'm sorry this happened to you,\" she whispered, and sniffed away a tear. \n\n\"What does it matter, Pet?\" I asked her. \"I was born into the world like this. I've known nothing else.\" \n\nShe nodded, concealing her weeping with her white hair. After wiping her eyes with the back of her hand, she looked up at me. The expression upon her face was so strange. She seemed to search me for something, though I knew not what, and as she searched, she seemed to slowly convince herself that she had found it. \n\n\"What?\" I whispered. \n\nShe kept her gaze locked with mine, and she moved further up my body. Her white hair drew a curtain around us, and the world was nothing but her forest-green eyes staring down at me. She closed those eyes. She kissed me. I lay there, unsure and anxious, my eyes wide open. Her lips were so soft, her tongue was so curious, and her breath was so sweet in my mouth. She licked the sharp points of my fangs, caressed my toothless gums, and playfully enticed my tongue to join hers. She moaned softly into my mouth, and beckoned me with the points of her fingers as they slid alongside my face, touching the little sensitive flesh I had left. Her hands moved about my bald and scarred head, and she tilted my face to receive her. I slowly closed my eyes, and followed her lead. \n\nWILLOWBUD \n\nI was flying. The night wind whipped through my hair as I stared down at the earth far below me. It didn't feel at all like it used to. First and foremost, Astrid's great pillowing tits were gone, so there was nothing to secure my head between, but the nature of our flight was also changed. I wasn't propelled on an exhilarating ride like a missile, but instead floated eerily through the night. Still, it was better than being cooped up in the nest all day\u2014though in truth, I was beginning to think of it as home. \n\nAstrid suddenly folded her batwings around us, and we dropped like a stone. Before I could find the breath within me to scream, she unfurled them, and I was presented with a view of rapidly-approaching wheat whipping beneath me. Astrid pulled up with a lurch, swung her feet out from beneath us, and the wheat cleared before me to reveal a buck drinking from a puddle. Astrid's feet punched into the deer's flank, smashed through its ribs, and sprayed me with blood and guts. The deer let out a startled honk right before it was crushed from the inside by Astrid's feet as they made contact with the ground. \n\n\"WHAT THE FUCK?!\" I yelled, my heart thundering in my throat. \n\n\"You said you wanted to hunt with me, yes you did,\" Astrid tittered, and undid the belt that looped me to her. \n\n\"Couldn't you have given me some fucking warning?\" I growled, and wiped the gore from my front. \n\n\"What, so that you could've shouted a warning to my quarry?\" \n\n\"Why would I do that?\" \n\nAstrid tapped my horns, then the deer's antlers. \"You are much more like him than you are like me, Pet. As a bird will caw when it sees a snake approach a rabbit's den, so will you.\"\n\n\"Bitch, I've put more bodies in the ground than you can count!\" \n\nAstrid poked my nose, and giggled when I wrinkled it. \"You are so cute when you are mad, yes you are!\" \n\nShe pulled her feet out of the felled deer with a sickening squelch, leaving two hollow footprints in its carcass. Wasting no time, she went about breaking the dead beast into quarters. I cringed and winced to the symphony of bones snapping, and had to close my eyes when she began feasting. \n\n\"Why don't you just suck the blood out?\" I groaned. \n\nAstrid ripped a hunk of muscle out of the deer, strings of tendons snapping and hanging from her grinning chin. \"Because all the blood's on you.\" \n\nI looked down at myself, and sighed. I was painted from head to toe with the deer's burst heart.\n\n\"I must say, Pet,\" Astrid said between mouthfuls, \"you look so very beautiful like that.\" \n\n\"D'aw, you're making me blush.\" \n\n\"Perhaps I will bathe you in deer's blood, then make love to you all night beneath the full moon,\" she twerked her brows. \"Would that be to your liking?\" \n\n\"No,\" I grumbled, \"but I'd do it for you, Astrid.\" ",
        "\"Wonderful,\" she grinned with a mouth full of fangs and gore. \n\nI washed myself off in the puddle as she finished her meal, then we went to the nearby farm and raided it for vegetables. Astrid pointed out all the sadistic traps the farmer had placed in his patch, and I cringed to think of stepping in one. Metal couldn't pierce my flesh, but it wouldn't be exactly comfortable either. We came upon an orchard with Ofan trees\u2014those trees who bore fruit of many varieties, and I let out excited squeal when I saw the size of the fruits. I picked up a nearby bushel basket, and began making my selection. \n\n\"Hurry up, Pet!\" Astrid hissed. \"He will bring his dogs out soon, and then they will come with sun-torches!\" \n\n\"Hold on!\" I hissed back, and selected a grapefruit from the tree.\n\nA loud bark sounded from across the field, and astral lights illuminated a nearby barn.\n\n\"Hurry!\" Astrid growled urgently. \n\n\"One second,\" I grinned back at her, \"I still need some lemons.\" \n\n\"Don't you have enough useless feedstock?!\" Astrid whispered as the hounds became louder, and the lights began to dance in the field. \n\n\"Let them come a little closer, Astrid,\" I giggled. \"Where's the fun in running off before they see us?\" \n\n\"Fun?!\" \n\n\"Do you know what it is?\" I teased, and slowly selected the juiciest lemon on the tree. The hounds became louder, and the lights became brighter. Soon, they were shining right through the foliage, painting a silhouette around me. \n\n\"It will burn me, Pet!\" Astrid hissed urgently. \"We must go now!\" \n\n\"One more second...\" I said, and plucked an apple. The hounds were only twenty yards away, and the shouts behind them told me that the men could see me. I tucked the basket beneath my arm, and sprinted over to the quailing vampire just as the dogs burst into the mangrove. Astrid wrapped me in her arms and launched into the air. The dogs barked like mad, the farmers rushed into the clearing below us, and we flapped silently overhead, and toward the monolithic blackness that indicated the Gratoran Wall. \n\n\"See?\" I laughed. \"Fun!\" \n\n\"What were you thinking?!\" Astrid panted heavily, her protective arms holding me against her in a steel vice. \n\n\"I just wanted to see if you'd stay with me.\" \n\n\"You play these ponderous games, yes you do,\" Astrid growled. \"That is the last time I ever take you hunting with me!\" \n\n\"So, same time tomorrow then?\" \n\n\"I said, it is the last\u2014\" \n\n\"Yeah, you said that yesterday,\" I took a victorious bite of the apple, and grinned up at Astrid with the juice dribbling down my chin. \"But I always seem to convince you otherwise.\" \n\nWhen we got back to the nest, Astrid rolled exhaustedly upon the thatch floor, and I uncinched the belt that held us together. She had an admonishment poised on her lips, but I stopped it with a press of my mouth, and enjoyed her kiss for serene seconds. I had convinced her to shave the strands of hair that had still clung to her head, and now my fingers could run smoothly over her head, though the pate was horribly rough with scars. It didn't bother me. Her kiss was such a sweet thing, and with it fresh upon my lips, I was capable of loving every inch of her. \n\n\"What are you doing?\" Astrid grumbled sleepily as I kissed my way down her chest. \n\n\"You know what I'm doing,\" I snickered, moving lower, and lower. \n\n\"This will change nothing; you're still not going hunting with me!\" \n\n\"Mm-hmm,\" I said, \"that's what you said last night, and the night before, and the night before, and the night before....\" \n\n\"For years you have manipulated me!\" Astrid bemoaned with a moan as I licked past her pelvis. It had been twenty-two days since my capture, actually, but she always struggled with time. There were nights when she'd awake, and think the evening before had taken place months ago. It didn't bother me. Time didn't really mean much anyway. I licked my way to the apex of her thighs, and grinned up at her. Her red eyes glowed in the dark, smiling affectionately down at me. I used to find them terrifying, but now they were a great source of comfort. But the eyes that glowed behind Astrid were far from comforting. I didn't even have time to open my mouth before Gloria grabbed Astrid by the chin, and ripped her back.\n\nI was thrown off Astrid and into the wall. There was a shriek, a scuffle, the flap of wings and the beating of flesh. I couldn't see anything in the moonlit nest; just flashes of snarling mouths, claws digging into skin, blood splattering and running down pallid limbs. There was a fraction of a second where I saw Gloria's forearm wrapped around Astrid's neck, and Astrid's eyes bulging, then the visage passed with a flash of movement. \n\n\"Gloria, stop!\" I screeched, but was not heeded. There was the sound of something rending, then a terrible shriek, and a batwing floated freely from its bearer, and down through the hole in the nest. Frantic movement came after, legs kicking wildly, the sound of desperation in someone's combative snarl. I searched blindly for my rocks, but they'd been scattered. I dropped to my hands and knees just to find one fucking pebble, but there was nothing. Another ear-splitting screech, and the sound of bones cracking. \n\nAstrid's voice broke horribly, and the fervency of the battle grew. I felt around for anything at all, but there was nothing\u2014fucking nothing\u2014in the thatching but twigs and thorns! I finally just began punching my fist through the wall over and over again until my knuckles were scraped raw, and the sounds of Astrid's shrieks became so high and terrified that they rang in my head. I punched and punched and punched until my fist connected with solid rock, and my entire hand sank into the side of the Gratoran Wall. I was still so weak. I tugged, and tugged, and tugged, but despite my gritted teeth and sweat, I could do nothing! Another bone cracked, and Astrid's gurgling shriek cut through the nest. With a roar, I spent every ounce of energy I had, and I ripped a blade of stone from the Gratoran Wall, and cut the top off the nest. \n\nThe moon shown overhead, illuminating Gloria Titus as she dug her nails into Astrid's neck. One of Astrid's wings was gone, one of her arms was broken several times, and her body was covered in her own blood, but she still stared at me with clarity in her red eyes. So did Gloria. \n\n\"Let her go, Gloria,\" I whispered, leveling my blade against her neck. \"If you kill her, I will bring this whole fucking mountain down onto you, I swear I will.\" \n\n\"She's not your Astrid!\" Gloria snarled. \n\n\"Pet?\" Astrid croaked, staring confusedly at me, at the miracle I had just performed.\n\n\"Let her go, Gloria,\" I said as calmly as I could. \n\n\"What, so you can go west with her? Hide behind the mountains with your zombified master?\" Gloria glowered at me. \"This thing is incapable of loving you! I would know; I'm its mother!\" \n\n\"What?\" Astrid asked, her eyes dulling. \n\n\"It's no business of yours what I do,\" I hissed at Gloria. \"I choose my master; it's the only choice I've ever been given in this life! So for the final-fucking-time, let her go!\" \n\n\"No,\" Gloria hissed, shaking her head, \"no, no, no, no; you don't get to run off into the desert this time, Willowbud! Do you know what awaits you on the other side of that wall?\" \n\n\"Freedom.\" \n\n\"Death!\" \n\n\"What's the difference, huh?\" I growled. \"I've been trying to find a good place to die since I was five years old! You think you know everything? You know nothing about me, do you understand? NOTHING! I'm not your goddamned god, and I'm not your goddamned daughter, so stop trying to FUCKING HELP ME!\" \n\n\"You blind, petulant little child!\" Gloria screamed at me. \"Do you know how long it took me to find you?! I had to climb up the fucking Gratoran Wall to get here, and I'm not leaving without you!\" She thrusted her finger at the mountains above us. \"You don't even know what's going on, do you? You've been so wrapped up in your twisted fucking fairytale that you haven't heard that Julia Gendian and her daughter are assembling a horde of ten million in the Gratoran Desert! Oh, and let's not forget that Diamond somehow emerged as the god of water\u2014and oh, am I leaving a special detail out? Oh yeah, THEY'RE BOTH CORRUPTED AND BOUND TO EACH OTHER!\" \n\nGloria's voice echoed off the infinite wall behind us, and the two of us stared at each other in its dimming wake. The revelation crashed into me, and washed over me just as easily. Julia, Diamond, Corruption; these were names from another life. Just another abstract fever dream haunting my sleeping hours. \n\n\"I don't care,\" I said softly. \n\nGloria blinked at me. \"What?\" \n\n\"I said I don't care.\" I angled my blade against her neck. \"What do you expect me to do? Go face two gods on my own and die so that you can sleep easy knowing you at least tried to save the world? No, fuck that. Fuck you. Fuck the world.\" \n\n\"You don't get to say that,\" Gloria hissed, \"you don't get to give up! You haven't even started to try yet!\" \n\n\"You had your chance before, and you ran away from me, Gloria. You don't get to be my savior now.\" \n\n\"Oh, so it's my fault then? Or is it the world's fault?!\" \n\n\"It's my fault. Only mine.\" \n\n\"That's fucking peachy, Your Holiness, but there's a difference between taking blame and taking responsibility! One of them allows you to be a victim of your own faults, and the other makes you own them! Now are you going to grow up, or are you going to stay this pathetic little girl forever? What's it gonna be, Pet?\" \n\n\"Let go of her,\" I whispered. \n\n\"Heed your own words!\" \n\n\"Let go of her!\" \n\nGloria narrowed her eyes at me. \"Fine.\" And she tossed Astrid off the cliff. I didn't even think. I raced past Gloria, and jumped after her. \n\nGloria's horrified scream died in my ears almost as fast as it came, replaced but the deafening rush of wind as I plunged down, down, down into the darkness. Astrid spiraled below me, vainly trying to flap one wing as the world came rushing up toward her. Toward me. Somewhere in my primal brain, the realization came to me that I was going to die, but it didn't seem to matter. I just needed to get to her. I just needed to hold her. I angled my body toward the ground, and dove headfirst. The ground came surging up at terrifying speeds, but my heart remained calm. It thudded resoundingly in my chest, giving cadence to the whistling symphony that rushed through my ears. My only focus was on her. Even as she plummeted, she flapped frantically with her one wing, and though she did little but lengthen her terror, she gave me a chance. I tucked my shoulders in, and dropped like a spear through the air until the whistling rush was accompanied by a horrible manic scream.\n\nThe realization of her end was wide on Astrid's face. She flailed in the air with her arms and legs, trying to catch the wind that rushed past us, clawing at it as though to drag herself down its medium to slow her descent. \n\n\"Astrid!\" I screamed. \n\nHer manic eyes looked up at me. In that moment, she didn't see her Pet; she just saw something to grab onto. She latched onto me, sunk her nails into my back, and screeched in my ear. I wrapped my arms lovingly around her as she gouged desperate holes in my flesh, and I tilted backward. There would be no last kiss, no parting words, no revelation in the end. All there would be was her panicked bulging eyes and horrified screeches, and that was OK. I whispered sweet love into her ear to quell the whistle of the wind, and I counted down the seconds, knowing how close we were to the ground by the pitch of Astrid's shriek. Just as the treetops rushed past me, I felt the impending connection with the rock. I let out a shriek, and hurled myself into it. \n\nTHE HUNTRESS \n\nWhen I opened my eyes, I was lying in a massive crater. The rim was hundreds of feet above me, and the rock around me was pulverized. I was dumbly aware that my arms and legs were shattered, my ribs were all broken, and my pelvis was snapped. I was only dumbly aware of this because my spine was severed, and I could feel nothing below the neck. Still, I was alive, if only for a few more minutes. Blood ran continuously from my nose and mouth, but it didn't bother me. The night was cool and pleasant upon my face, the only part of me I could ever really feel. I took a shuddering inhale of the world, and smiled up at the moon. It had been a grand journey, I supposed, though I wish I remembered most of it. I was surely thousands of years old, but the time that stretched over so many years was vacant. There was only one thing that stuck out. \n\nI looked down at the broken creature beneath me. She was hardly more than the dust that covered her, she was so broken. Pet blinked at the moon. Her eyes were filled with blood, but they could still see, for they focused on my face. Her bloodied lips formed a hideous little smile, and she tried to open them, but she didn't have the strength. She just stared at me until her pupils unfocused, and she looked into the void beyond. With the utmost effort, I nestled my face atop hers, and planted my lips against her mouth. There was no breath in her anymore. There was only the residual heat of what was left of her body, and that was becoming cool. I rested my eyes, and found my last bit of comfort in the last bit of warmth that lay upon her lips. Then the world exploded. \n\nWILLOWBUD \n\nI blinked my eyes open, and stared at the ceiling. Gloria was leaning over me, tending to me as she always had. \n\n\"I just had the weirdest dream,\" I muttered. \"Goddamn, that mushroom you gave me is no fucking joke.\" \n\nGloria paused blotting my brow, and narrowed her eyes at me. \"What the hell are you talking about?\" \n\n\"Very funny,\" I croaked, and snuggled further into my covers. \"But I think you were right about the mushrooms. I think they helped... you know...\" I made a motion with my finger, \"...rewire things up there. I feel a lot better.\" \n\nShe raised an eyebrow. \"I'm... glad,\" she said at length. \n\nI laughed. \"Goddamn craziest dream I've ever had. The kind of shit only my fucked up mind would think of.\" \n\n\"Shit like... going to the astral plane because I gave you the wrong mushroom, seeing an abstract vision of Corruption with Lucilla's patterns, then being kidnapped by the reanimated corpse of your beloved Astrid, then falling in love with your captor only to have her cruelly taken from you, and in the last minute, you sacrificed yourself just to be with her for one more moment?\" \n\n\"Yeah, all that shit,\" I snorted. \"God, I really do scream in my sleep, don't I? You know, you were a real cunt in my dream.\" \n\n\"Was I?\" \n\n\"Yeah! You threw Astrid off the Gratoran Wall, you bitch!\" \n\n\"Probably because you were shirking your holy responsibilities in favor of a guilt-ridden slave fantasy.\" \n\n\"That's exactly what you said in my dream,\" I narrowed my eyes at her. \"What are you, some kind of fucking telepath or something? I know vampires can fuck with people's heads, but...\" I trailed off. The ceiling above me was not that of Gloria's cottage. It was short and cobwebbed, like that of a dwarven barn. And I wasn't in a bed at all. I was lying in a stack of hay. I could feel the coarse sticks poking into my back, scraping at the renewed flesh that had once been burnt away by the Heat Bringer. Out the window, I could see the imposing figure of the Gratoran Wall, its snowcapped top slowly being illuminated by the morning sun while the rest of the world clung to darkness. There was a robed figure standing in the field outside. Her great black wings were feathered and mighty like some nighthawk, her hair was thick and darker than a raven's, her steely blue eyes stared at me, the pupils slit like those of a reptile, the irises glowing in the dark. \n\nI rolled off my bed, forgetting that Gloria was even there. When my feet touched the floor, I felt the tremendous weight of rock beneath the hay. There was an unbroken plane of shale from me to the Gratoran Wall, and I could see every crevasse, crack and fissure, every break in continuity for miles and miles. I could see the roots of trees that scraped against the bedrock, the aquifers that held their reservoirs deep in the earth, the tunnels and caves the dwarves had dug so many thousands of years ago beneath the Gratoran Wall. With one touch of my toe, every secret of the earth within fifty miles was revealed to me, but there was one mystery I couldn't glean with all the power in the world. Upon shaking legs, I walked from the barn. I walked toward the silhouette in the field, and every step toward those blue eyes made my legs weaker until I dropped to my knees ten paces away from her. In the twilight darkness, we stared at each other across the meager breadth between us, but to me, it felt like an infinity of distance. \n\n\"Do you remember me?\" I whispered. \n\nShe nodded slowly. \"You are Pet,\" she said with such a beautiful voice.\n\n\"Do you remember me?\" I asked pleadingly, tears running down my face. \n\nShe cocked her head. \"You are... Mistress.\" \n\n\"No, no, no,\" I whimpered, \"do you remember me?\" \n\nHer blue eyes stared coldly in the darkness; the reptilian pupils dilated to extract my visage. Her black feathered span was wrapped around her like a cloak, so rich that it shimmered iridescently with the meager dawn light. With her bountiful raven hair catching the wind to reveal the magnificent stoic portrait beneath, she walked toward me, every step an impossibility of grace, her predatory gaze assessing me with the utmost trepidation. She was a wild creature now, a nighthawk of the northern skies, some untamable and unobtainable wonder so rare and so exquisite that her very presence was a blessing. I was a wretch, a worm hardly fit for the soil beneath her feet, and when she loomed over me with her towering blue gaze, I felt so small that I seemed to shrink into the very earth I commanded. Who was I to this? Nothing at all, and yet I held her gaze even though it felt like I was staring into the sun, something so radiant and deadly that it was impossible to behold, impossible to look away. \n\n\"I remember you, Willowbud,\" Astrid said softly. Her voice cut right through the wind, and died in the billowing of her feathers, the rustling of the wheat that undulated in great waves across the amber fields beneath the mauve sky, the sun drawing a golden line across the mountaintops. There was nothing in her eyes that bespoke forgiveness or affection. Nothing but the steely blue depths, and my unworthy visage reflected in them. \n\n\"I'm sorry, Astrid,\" I hissed through my tears, \"I'm so, so sorry.\" \n\nShe didn't respond to me. She just looked upon me, then opened her wings. Her body was covered from foot to chin in glowing white patterns. They thrummed from her silken white flesh, now perfect and unblemished, canvasing a statuesque form of such curves and lithe muscle that it felt like I was staring at some marble-rendered god. The patterns were of mountains, hills, plateaus, canyons and fjords, and they drew across her body without the lines ever touching, moving with such intricacy to contour to her bows and bends that it nearly painted her like a map. She dropped to a crouch before me, and took my dainty hand into her long fingers. \n\n\"You are so small,\" she mused, her fangs showing behind her lush lips. \"I used to think of you as a towering figure, but you're shorter than most children.\" \n\n\"I'm nothing,\" I whimpered, and watched my tears fall to the soil. Astrid's other hand touched my chin, and raised it.\n\n\"Nothing?\" she asked softly. Her blue eyes were awash with tears, and they streamed down her face in great rivulets. \"Willowbud, you are everything.\" \n\nShe forced her face to mine, and drove me backwards into the ground. I wrapped my arms and legs around her, and kissed her with the same fierceness with which she kissed me. It wasn't a kiss of celebration, nor of sorrow, nor of lust. It was an action like that of a drowning woman desperately gulping for air. We kissed like life's reservoir was within the other's mouth, our tears comingling and smearing upon our pressing cheeks, our urgent hums and moans filtering between our consuming lips. The world tried to drown us in its depthless ocean, but we gave each other breath in this tiny sanctuary. ",
        "Postlude: Fear\n\nCORRUPTION \n\nI raced through the threshold of Diamond's realm, and slammed the gate behind me. Diamond's astral projection vanished in an instant, and Xaya looked confusedly down at the space where her unwilling lover had just been. Her reptilian gaze focused on me, and she cocked her head curiously. I had never shown her weakness before, but now I was huddled in my own arms, and shaking from head to toe. The predator slinked over to me, then adopted a submissive posture, and snuggled like a comforting canine into my side. I held her tightly, and raked my fingers through the serpentine tendrils that crowned her head, trying to find some source of reassurance to stay my mortal terror. \n\nI had been hurt. I had been hurt badly. I touched a shaking finger to my lips, and felt the raw flesh there. Perhaps it was superficial, but it would scar. I looked down at my ribs, where another scar lined me from abdomen to armpit. It was something I had been born with. Petranumen had lived for countless years, and through all those epochs, she'd only managed one lasting mark. It was a burn scar, and I didn't have to wonder at how it had come. But the flaming patterns on my flesh marked me as immune to the Heat Bringer's fire, so why then did I feel such excruciating pain upon the lips of the nymph girl? WHO WAS SHE?! \n\nI sifted through the rubble of Wisdom's and Passion's combined minds, looking for anything that would help me. I was manic in my search, and I tore through the mausoleums and libraries of memory, but I could find nothing in the lexicon of tethered beings that would tell me why an astral god could be touched so. The nymph's astral projection was so weak that it could not even create its own realm, and yet, she had dealt me such damage that my very self-perception was shaken. That pain I had felt was not normal pain\u2014it was lethal. The nymph was possessed of a thought so powerful that it could kill me. \n\n\"Not a thought,\" I muttered, \"an idea....\" \n\nI had thought myself immune. I had thought that all the weakness Petranumen once carried had died with her, but it was not so. The realm of Depression had been forming a beeline right to its source, and that source was Guilt. My flesh was made from this realm, and this realm had sharp edges that could cut me. I touched the blisters on my lips, and frowned when I saw that my fingers were still shaking. I turned my hand into a fist, but still, it shook. \n\nExcerpt from Dr. Siam's thesis, The Broken Bridge, page two-hundred-five:\n\nRecipe for kale soup: \n\nOne pound of kale.\n\nThree tablespoons of iodized salt.\n\nTwo pounds of self-loathing.\n\nOne cup of body dysmorphia.\n\nFive teaspoons of attention seeking.\n\nA pinch of poorly-masked insecurity.\n\nFifteen cups of oh-my-god-I'm-almost-forty.\n\nJust a dash of suicidal contemplation before realizing you're too old to die young.\n\nTwo tablespoons of pepper.\n\nBoil until your family loses the last bit of respect they had for you.\n\nServe in one bowl. Take one spoonful, then store the rest in the icebox under the guise that it needs to set for a while.\n\nLeave in the icebox for a decade until the frost obscures it completely.\n\n \n"
    ],
    "authorname": "White_Walls",
    "tags": [
        "rimming",
        "vampire",
        "teen",
        "handjob",
        "monster",
        "nymph",
        "futanari",
        "bath",
        "captive",
        "cum swallowing"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-creators-ch-15"
}