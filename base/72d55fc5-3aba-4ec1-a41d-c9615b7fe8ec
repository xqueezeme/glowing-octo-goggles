{
    "title": "The Boys Next Door Ch. 04",
    "pages": [
        "Warm grass pressed against Diana's cheek. The sun had already set, but the ground still held heat from the ninety-degree May day. Not just any day \u2014 her last-ever day of high school, the day before graduation.\n\n She was done. Done with finals, done with APs, done with pep rallies and limited class options and high school bathrooms. It hadn't really sunk in yet.\n\n Rolling onto her back, she lifted her arms over her head, stretching from head to toe and ignoring the grass stains smudging her white skirt. On either side, her friends reminisced lazily about the past four years. Overhead, pinpoints of stars dotted the navy blue sky. Lit embers glowed red in the night air, and earthy smoke curled over the circle of people in her friend Marissa's backyard.\n\n At any other party, Diana would have left an hour ago. The minute any kind of substance came out, she'd always fled for home. Illegal, sure, but above all: scary. Who knew what could happen when everyone around her lost control? Or worse \u2014 when she lost control?\n\n But tonight, sprawled on the warm lawn with all her friends, she hadn't mumbled an excuse and rushed out the door when someone lit up a joint. She'd just stayed. And when the joint made it to her, she'd accepted it gingerly, taken a hit, and immediately embarrassed herself with a fit of mortified coughing.\n\n \"Diana? You okay?\" Marissa giggled. \n\n \"Fine,\" she choked. God, that smoke tasted disgusting. Worse than the hangover cure Ian had cooked up the morning after she'd given him her virginity \u2014 and taken Brendan right afterwards. The memory made her thighs clench. Suddenly, she saw Ian's challenging expression \u2014 one eyebrow raised and that mocking little grin, turning her insides over in a slow curl. She practically felt Brendan's hand on her back, reassuring her and making her unbearably hot at the same time. She took another hit. The second one was easier, once she got used to the unfamiliar feeling of smoke filling her lungs.\n\n \"Diana's smoking up?\" Janelle, across the circle, scrambled toward her. \"This I have to see. This is, like, a watershed event. This doesn't happen every day.\"\n\n Every day? More like never. \n\n In fact, she'd planned to be home right around now, Diana thought, finishing her stretch and rolling onto her stomach to play with the dandelions sprouting from Marissa's lawn. She'd planned to be back home, alone and sober, practicing the speech for tomorrow's graduation that she'd written weeks ago and then done her best to forget about, because public speaking held a place of honor in her worst nightmares. All those eyes, everyone focused on her \u2014 When she'd been told she was valedictorian and would have the \"distinction\" of speaking at graduation, she'd almost asked that the school just pass that distinction on to the next-best person. Then, annoyed with herself, she'd accepted. And by all rights she should be pacing her bedroom right now, rehearsing every word of her already-memorized speech, just in case.\n\n But she couldn't bring herself to worry about it. Having a thousand eyes on her didn't seem so terrifying anymore. Not after exposing every inch of her smooth curves to the eager hazel gazes of the boys next door while they lounged, fully dressed, against her desk. And definitely not after letting them pull her thighs open wider and wider while she worked her dildo into her moist pussy...\n\n A bowl nudged her hand, bringing her back to Marissa's backyard. Pretzels, being passed around. Diana scooped up a handful and scarfed them down. Someone was singing, and someone else was singing a different song, and a third person had pulled out a guitar, and in the meantime she was consumed with a total desire to eat everything in the world.\n\n \"I'm getting us more food,\" she announced vaguely to the circle. \n\n But once she was alone in Marissa's quiet kitchen, leaning against the humming fridge and spooning peanut butter straight out of the jar, she had to admit the truth: she wasn't just craving food. Her whole body felt warm and loose and relaxed. The brush of her skirt against her bare legs made her tingle with excitement. Warm night air, wafting through the open window, caressed her skin and teased her nipples into hard points against her bra. And being up against the humming fridge... Jesus, she was actually wondering whether she could sneak into Marissa's room for some time alone \u2014 or casually call Brendan and ask what he and Ian were up to without risking her dignity. \n\n Of course, she'd already done exactly that, three very long nights ago, right when she should have been one hundred per cent focused on finals.\n\n She'd been in a state of disbelief last Wednesday night, doing her best to study and all too aware of the scrap of paper she'd found on her desk after the twins left: a scrap scrawled with Brendan's name, his cell number, and the words Call us. Had she really stripped in front of both the twins? Masturbated for them with the best-kept secret in her underwear drawer? Taken both Brendan and Ian inside her at the same time? Yes. Yes, she most certainly had. And she managed to stop thinking about the two of them in her bed just long enough to focus on the last days of class. But as soon as she'd headed out into the sunshine to meet her friends on Friday afternoon, she heard Ian's lust-soaked voice in her head, begging her to suck his cock.\n\n She was busy, she'd told herself firmly. Very busy. So were the twins. She had her life, they had theirs. \n\n But Sunday evening, right before finals \u2014 perched at her desk again, slogging through her AP chemistry notes, and desperately trying to ignore the temptation of the dildo under her pillow that she'd already used twice that day \u2014 she'd pulled out her phone and impulsively texted Brendan: I need a study break.\n\n Oh God. She practically slammed her head into her desk as soon as she'd hit send. Had she really just texted him like that? He'd be out somewhere, doing something, and she'd just thrown herself in his direction. But two minutes later, her phone buzzed: Come over.\n\n When Brendan led her into the O'Brians' den, his warm hand on her back, three smiling faces greeted her. Well, two smiling faces and one smirk from Ian. The twins were watching baseball \u2014 with their parents? How wholesome. She settled down on the couch next to Brendan, tensing with excitement when he draped an arm around her right in front of his parents, unsure where this was going and accepting a handful of chips when a bowl was passed around. At least Brendan was the kind of guy who was affectionate with everybody. He was always putting his arm around girls and clapping guys on the back and hugging his mom.\n\n Mr. and Mrs. O'Brian had been thrilled to see her, and asked her more questions about Yale, her high school career, and her upcoming summer job then she would have liked to answer in front of Ian, who shot her occasional glances from where he was lying on the floor in front of the giant TV. By the ninth inning, it occurred to her that he was looking up her bicycle-printed skirt. She hadn't even noticed that her legs had slipped open. Her nipples tightened, and heat flooded her cheeks.\n\n \"Are you all right?\" Brendan asked sympathetically. He rubbed her shoulder. \"You look warm. It's pretty hot in here.\"\n\n Thanks, Brendan, she thought. Now Mrs. O'Brian was offering to turn up the AC, and Ian was looking back at the TV screen with that innocent expression she knew all too well. \n\n \"I'm fine,\" she said quickly. \"Don't worry about the AC.\"\n\n She crossed her legs tightly, half-tempted to open them and give Ian a show but knowing she didn't have the guts to do it with his parents anywhere in the vicinity. Her stomach was turning somersaults now, and Brendan was playing with her hair, idly, like he didn't even notice he was doing it. Every movement of his fingers sent a current of excitement down Diana's shoulders and straight to her nipples.\n\n \"I like your skirt, Diana,\" Ian drawled from the floor. \"Makes me want to go for a ride.\"\n\n Jesus. She bit her lip hard to keep from laughing, her whole body hot and prickly now. Brendan squeezed her shoulder reassuringly, while Mr. O'Brian pointed out that the twins' bikes were gathering dust in the garage, and Mrs. O'Brian launched into a fond reminiscence about the three of them riding through the neighborhood as kids: Ian speeding ahead, Brendan behind him keeping an eye on Diana, and Diana pedaling extra fast to keep up with both of them.\n\n Once the game was over, Brendan had ushered her out to the patio, chips in hand. Ian followed like he didn't have anything better to do. Mrs. O'Brian brought them a watermelon, beaming like seeing the three of them together was the highlight of her weekend. And for the next half hour, sitting outside getting college advice from Brendan and bickering with Ian while they spit watermelon seeds at each other and finished off the chips felt...normal. It felt nice. Familiar, even comfortable, if she just ignored the ache between her legs. \n\n But when the last of the strawberry lemonade had been drunk and the last crumbs of chips had been argued over, the conversation died down. Diana looked up to find two pairs of hazel eyes on her, waiting. A knee pressed against hers, a foot rested on her ankle. Ian reached over and took her glasses off, dropping them on the table without a word. \n\n As soon as the O'Brians had poked their heads outside to say goodnight, the three of them had gone back to the treehouse. The things they'd done there, and whose mouths and fingers and cocks had been where, and the noises she'd made \u2014 it all blurred together in a hot sensual haze.\n\n \"Hey, Diana!\" The kitchen door swung open. \"Everything okay in there? Did you eat all the food?\"\n\n Rubbing her warm cheeks, Diana put the peanut butter back in the fridge, scooped up some snacks at random, and carried them outside to her friends. The food disappeared as soon as she set it down.\n\n \"Let's toast that fine hall of academic excellence.\" Someone raised a red plastic cup.\n\n \"Hall of academic bullshit, you mean.\"\n\n \"Things I learned in high school: boys drool.\"\n\n \"Because they didn't drool before that?\"\n\n Things she'd learned Sunday night: that frantically pulling the twins' clothes off while Brendan helped her out of her skirt and Ian tossed her bra aside somehow got everyone naked. That trading watermelon mouth to mouth, juice running down her chin, was sexier than she ever would have guessed. That Ian crushing chunks of cold fruit over the swells of her breasts and and pinching her juice-slicked nipples, while Brendan licked a slow sure path toward her needy cunt, was even sexier.\n\n \"Total freedom,\" said one of her friends said dreamily. \"This is what summer feels like.\"\n\n Yes, thought Diana, feeling the ground press against her back. This is what summer feels like. Brendan's hot mouth between her legs, tonguing her dripping pussy, keeping her on the edge of an orgasm while she moaned and pleaded around Ian's cock; Ian looking down at her, his eyes half-closed, as she sucked his thick rod \u2014 not teasing, not talking dirty, not saying please, just staring at her movements in the darkness of the treehouse; warm cum splashing onto her full breasts, her gasp of surprise, and Ian's low chuckle; Brendan filling her tingling cunt, fucking her firmly under his brother's gaze, then pulling out and spurting more streams of cum across her smooth belly, because she'd asked \u2014 asked! \u2014 him to...\n\n And oh God, then they'd switched.\n\n \"I'm proud of you, Di,\" Brendan had murmured above her as he rubbed his hardening cock over her lips. \"You started this tonight. We're here because of you. You've already come such a long way.\"\n\n She could only moan in response, flicking out her tongue to taste the smooth skin, as Ian's fingers found her swollen clit.\n\n Afterward, she'd sprawled on the blankets heaped in the treehouse, exhausted. Her skin was completely sticky with watermelon juice, the twins' warm fluids, and her own cream. Brendan swung himself down the tree to get towels from the dark house, while Ian's tongue played in her mouth, one hand wrapped in her hair and the other resting on her ass. She'd expected him to make some crack about what a hot mess she was, and with the little corner of her mind that could still think straight, she started to get a retort ready. But neither of them had said anything at all.\n\n Diana rolled over in the grass, her whole body throbbing at the memory. She was hearing her friend's voice. Her name. \n\n \"What? What did you say?\" she giggled. It was suddenly completely hilarious that she had to ask.\n\n \"Your neighbors. The hot ones. Are they around this summer? Diana lives next door to the O'Brian twins,\" Marissa announced to the circle, fanning herself to demonstrate the level of hotness.\n\n\"Oh, I remember them.\"\n\n\"Who doesn't?\"\n\n\"Jocks,\" someone said dismissively.\n\n\"How do you even concentrate with them next door to you?\"\n\n\"I'm used to them.\" Diana couldn't hold back her laughter. She kicked her legs in the grass. \"They're basically just like my big brothers. We grew up with each other.\" Everyone was looking at her like they expected more. \"When I see them, you know, I just think about \u2014 about \u2014\" she fished around for a random innocent memory \u2014 \"them being eight years old and racing around the neighborhood in superhero costumes on Halloween.\" She'd raced around with them too, dressed like a mashup of Snow White and a cat. Ian had swiped all her Snickers bars, she remembered, and Brendan had worked out a deal with him to give them back \u2014 except the two Ian had already eaten. \n\nIn fact, now that she thought about it, the twins had been busy with a lot of deals when they were kids. Agreements \u2014 that was it. They never fought; they came to agreements.\n\n\"Whatever.\" Janelle's voice broke in. \"I'd do either of them in a heartbeat, and I don't even care which one. How sick is that?\"\n\n\"I'd go for them both at the same time,\" Marissa said dramatically. \"I'm not even kidding.\"\n\nShrieks bounced around the circle. \"Marissa, you are so dirty!\"\n\n\"Could you even tell them apart once they've taken their clothes off?\"\n\nOh, I can, Diana thought. Naked or not. \n\n\"Diana can hook us up, right, Diana? Just tell them no strings attached. Either guy. One's as good as the other.\"\n\nShe pressed her face into the grass. It was so nice and cool. Grassy. She couldn't stop giggling. \"I think they're done with high school girls,\" she spluttered. \"They're all busy with college stuff. Basketball. And I heard they've taken a vow of celibacy. You know, to perform better on the court. They told me themselves.\"\n\n\"That would be such a tragedy.\"\n\nDiana rolled over. And over again, a few times, until she was on the other side of the yard, nice and quiet. Leaves rustled overhead. Grass whispered by her ear. The moon was starting to rise -- just a crescent. She'd rolled away from the clusters of candles Marissa had lit, to a dark corner of the lawn.\n\nSomeone was stretching out next to her, almost close enough to touch. Tilting her head to the side, she focused on a pair of brown eyes. Boy eyes.\n\n\"Alex?\" she asked. \"Alex Noriega. You're lying next to me in the grass.\"\n\n\"Yep. I am.\" He smiled at her like the two of them lying on Marissa's lawn together was the most normal thing in the world.\n\nDiana blinked at him a few times. What was she remembering about him? Oh, yes. He'd checked out her breasts in AP World History last week, and she'd stared him down. He hadn't looked too embarrassed either -- just a little. And then she'd fantasized about him in the school bathroom right afterwards, licking her throbbing pussy before the twins took his place. \n\nOther than that little episode? He'd been in a lot of her classes. He'd dated her friend Lin junior year. And she'd never really gotten to know him, because how much had she let herself get to know most people in high school?\n\nAlex was saying something. A monologue about the vastness of the universe and the intensity of the stars and blah blah blah...she let it wash over her until he ended on a question. \n\n\"Sorry?\" She glanced his way. Alex was just cute enough that a couple of weeks ago, she would have had trouble meeting his eyes. Now, it didn't seem difficult.\n\n\"I was saying, we've had all these classes together the past four years, but I feel like I've never really gotten to know you. You're pretty unapproachable, you know?\"\n\n\"I am?\" Diana rolled her head all the way towards him, startled. Unapproachable? No. She was shy. She was the one who had trouble approaching people. Alex's comment struck her as funny. Hysterical, actually. \"You're lying right next to me in the grass.\" She was giggling again, her whole body shaking. \"Because I'm soooo unapproachable. Guys have all kinds of trouble approaching me, you know?\" She could feel the twins' hands all over her, massaging her bare skin, slipping between her\u2014 \n\nWait. That was an actual hand. Alex had wrapped his fingers around hers. Okay. That was nice. Warm and pleasant. \n\n\"I bet they do,\" he whispered. \"I know I have.\"\n\nHe leaned toward her. What? Lips \u2014 on hers. He was kissing her. Half-laughing, half-surprised, her mouth opened, and his tongue slipped in.\n\nOh God. Excitement rushed down her body, pointing straight between her legs. This was what she'd been afraid of. She could barely handle the twins. Alex Noriega did not need to complicate things, and \u2014 oh shit, he was brushing her dark bangs off her forehead, nibbling her lips, cupping her cheek, and all she wanted to do was pull him on top of her.\n\nShe put one hand on his chest and pushed him back a few inches.\n\n\"I should go,\" she whispered, laughing in little gulps. This was so crazy. \"I'm not, uh, I'm not really in any condition to do this.\"\n\n\"Then let me take you home.\"\n\n\"No, no, I'm okay. I have a ride,\" Diana hiccuped. Alex was still leaning over her like he expected to kiss her again. God, if they got in a car together -- there's no telling what she would do. \"I just want to, uh, focus on school right now.\"\n\nHe peered at her. \"We're done with school, Diana. We're graduating tomorrow.\"\n\n\"Well, college.\" She dissolved into giggles again. Alex was laughing too, shaking his head. She managed to get up. \"I'll see you around tomorrow.\"\n\n*******\n\nA sliver of moonlight shone into Diana's open bedroom window, filtered through the branches of the huge old tree outside. She'd gone to bed an hour ago, after she'd raided the dark kitchen for chips, salsa, and a tube of chocolate chip cookie dough, but she was still lying awake. Warm pleasant relaxation lingered through her body, but sleep hadn't come. Her graduation cap and gown, hanging on her closet door for tomorrow, kept pulling her attention. Her folded speech rustled on her desk. Her book could only distract her so much. Throwing it down, she tiptoed to her underwear drawer and quietly took out her dildo. \n\nThe night was warm, but a breeze cooled her room. Her window screen still leaned against the wall, next to her desk. After the twins had caught her by surprise a week ago, swinging their way up the tree, she hadn't bothered to put the screen back on. It felt good to sleep with the window open every night, enjoying the wind on her skin, no barrier between her and the world outside. \n\nShe decided to keep her nightgown on \u2014 short, silky, purple, and the kind of lingerie she'd bought in the hope that someone besides her would see it, someday. Stretching out in bed, she slipped one hand in the lacy cups to fondle her generous uptilted breasts. Recently, she'd been stroking and squeezing her breasts a lot more when she masturbated, now that she knew how good someone else's hands felt on them. Two someones.\n\nShe was already aroused, and the dildo slipped easily into her juice-slicked pussy. Shivers of excitement tightened her body, but she didn't feel any rush towards orgasm. Life looked wide open. She felt wide open, for the first time, and it felt so good. And she wanted to come, stroking her clit in teasing little circles, but she was so sleepy now... ",
        "As she drifted in and out of soft darkness, her hand dropped to her side, still wrapped around the dildo.\n\nA scraping sound made her start awake. A sudden dark shape blocked the moonlight. Someone was climbing into her room.\n\n\"You shouldn't leave the window open at night, Diana,\" whispered a low, familiar voice. A voice that belonged to only two people. \"You don't know who's going to come in.\"\n\nShe recognized the silhouette of the profile against the window. One of the twins, his muscular body outlined in the faint moonlight. Alone.\n\n\"Brendan?\" she whispered. \"Ian?\"\n\nHe didn't answer, just walked the two steps to her bed. \n\nDiana reached for him, only half-awake. Her palms found the soft cotton of his t-shirt, sliding over faded letters on the front. She couldn't help burying her sleepy face in the well-worn fabric, breathing in the same clean detergent scent she remembered from the O'Brians' sheets. Was this happening? Blinking, she pressed her cheek against a solid chest. Powerful arms circled her tightly. A firm bulge pressed against her thigh through his boxers.\n\nWhen she lifted her head, hot lips met hers. Hands closed gently over her breasts.\n\n\"Wake up, baby,\" that low male voice said in her ear. \n\n\"Wait,\" she whispered around the tongue flicking hers. He just pulled back, tugged his t-shirt over his head, and teased her mouth again until she melted into the kiss. One hand left her heavy breast, sliding down her nightgown. His palm, slipping over the fabric, sent shivers through Diana's body. Her nipples were so hard now, rubbing against the lace cups. \n\nShe was breathing faster, wanting the warmth of his hands around her firm globes, and she shuddered with frustration when he just kept teasing her belly, rubbing the slight curve of softness that was so different from his own rippling abs, warm and alive under her fingers. She could barely see his face in the shadows. How could she not know which twin was in her bed? But the palm caressing her belly didn't tell her anything, except that she was starting to need his touch more and more. \n\n\"Look\u2014\" She broke off when he eased both her breasts out of their cups. A firm tongue met her large nipple, sucking the sensitive bud until she grabbed his hair, pulling harder than she normally would have for Brendan, but every bit as hard as she would for Ian.\n\nHe just laughed softly. Dammit, she'd heard both of them chuckle that way \u2014 knowing, quiet, like they knew a secret no one else did. His hand roamed over her silky nightgown again, finding its way under the hem and up her creamy thighs. When he finally cupped her bare mound, stroking the dark curls between her legs, her breath caught. Fingers slipped between her lush lips, finding her wetness. Her legs spread of their own accord, giving him more access to her body. Another hand wrapped around hers, finding the dildo. He took it out of her grasp.\n\n\"You've been touching yourself, baby,\" he whispered. She wriggled as he spread her juices firmly over every crevice of soft flesh. Nothing about his voice gave her a clue about which twin was exploring her quivering pussy with thick fingers. His tone wasn't teasing. It wasn't reassuring. It was just low and very aroused.\n\nWho are you, she wanted to whisper, but how could she? They had to be so sick of being asked that, both of them. Even if they used it to their advantage. \n\nShe ran her hands over his sleek shoulders, squeezing their bulk, trying to find some clue, and gasped when the dildo probed her warmth. It felt so different for someone else to be using it on her. So much more personal. The round end pressed against her pussy, meeting soft resistance. She wriggled as he worked the tip in and out, just barely. \n\nOh \u2014 she couldn't stand it anymore \u2014 her hand slipped down over her smooth stomach to stroke her own swollen clit. A soft male groan met her ears. Half-closed eyes, barely visible in the darkness, roved over her pleading face. His gaze sent a shudder of arousal through Diana's body. A sudden rush of juices from her pussy slicked the dildo, and it penetrated her easily, opening her tight cunt. Immediately, a large palm cupped her mound, holding the dildo firmly in place.\n\n\"Please,\" she whispered, her palms finding his muscled chest. His nipples hardened against her fingers. He twitched under her hands, but it didn't give anything away. Pressing her face into his shoulder, she licked salty skin, and he moaned. Did the twins taste different? God, she should have been paying attention. All she could say was that they both tasted musky and male and intense. \n\nFingers were playing gently in her wet folds, tickling her aroused pussy as it stretched around the dildo. Another hand cupped her chin, lifting her face. Lips sucked softly on hers. A warm tongue snaked sensuously in and out of her mouth. Brendan, she thought, wriggling against his touch. Has to be. \n\nAs his hand slid to her back, massaging her muscles deeply, her thighs slipped open, spreading her pussy wide to his sure fingers. She was about to whisper Brendan's name when a sudden pinch on her clit made her jump. Digging her fingers into the broad back under her hands, she stifled her cry of excitement in her pillow. The dildo swiftly penetrated her pussy, stretching her tightness and massaging her insides firmly as it twisted in and out. No, Ian. But\u2014\n\nDiana wriggled under his touch, moaning as he fucked her with her own toy. Just as quickly, his free hand slipped inside her nightgown to cup her tender breast. His thumb and finger softly rolled her nipple, caressing her so understandingly that she shuddered with hot need.\n\n\"Tell me,\" she panted. \"Tell me who you are.\"\n\nNo response. A warm male mouth met hers again, and she pulled away from the hot soft tongue she wanted to suck on \u2014 so badly \u2014 and bit his shoulder. He grunted, driving the dildo deeper into her soaked pussy and squeezing her ripe breast hard. She buried a squeal in his neck. Oh God, Ian. Definitely Ian. But when her hand dove inside his boxers to wrap around his velvet cock and grip the thick shaft, the \"Oh, baby, yeah\" he let out, on a long delighted sigh, sounded exactly like Brendan.\n\nHer breath was coming faster, panting. Her pussy pulsed around the firm rod as he handled her dildo. Her hips bucked up against the large hand pleasuring her. Fingers wrapped around her own hand, pulling it away from his back and pushing it between her legs. What\u2014 suddenly, she realized: he was molding her hand over her pussy to take the place of his. \n\nHe moved over her, pulling off his boxers. The faint moonlight outlined his cock \u2014 thick and so hard. Then his hand was back between her legs, holding the dildo in place deep inside her cunt, her juices were being rubbed all over her dripping pussy, firm touch glided downward over her soaked and sensitive skin \u2014 \n\nShocked pleasure tightened her full cunt as a large finger slipped between the soft curves of her ass to tease the rosebud nestled there. She wasn't a stranger to that kind of touch \u2014 she'd tried stroking her own ass recently out of curiosity while masturbating, and had been amazed by just how good it felt and how hard she came \u2014 but she grabbed his wrist. It took all her self-control.\n\n\"Not until I know who you are.\"\n\n\"Does it matter?\" \n\n\"Yes,\" she whispered fiercely. \"It matters.\"\n\nOh God, she was so close to coming, but she couldn't come, not yet, not when she had no idea which twin was driving her crazy with lust and need. Her fingers still gripped his wrist. His other hand still caressed her quivering pussy. She could barely see the masculine face above hers, eyes half-closed and fixed on her. All she could hear was his breathing, getting faster, and her own breathing, which was turning into panting. \n\n\"Tell me,\" she whispered desperately, furious with herself that she couldn't guess and furious with him for making her do it. \"Tell me,\" she begged, kissing him hard and trying to suck the answer out of him. \"Tell me.\" She squeezed his cock, rubbing his slippery warm fluid all over the satiny head, sliding her hand down to cradle his soft hanging balls. But all she got was a low grunt of pure desire.\n\nWith a deft twist, he freed his wrist from her grip. Her pussy clung to the dildo as he eased it out. Thumbs pulled apart her soaked lips with tantalizing slowness, separating her lush folds. Bluntness pressed against her opening, poised to fill her.\n\nDiana grasped the muscled hips above her, straining to keep his meaty cock from sinking into her wet cunt. Jesus, she wanted to feel him so badly \u2014 \n\n\"I have to know,\" she panted. \n\nHe just rocked slightly, his head easing the tiniest bit further inside her tight pussy. She squeezed his hips hard, trying to hold him in place. Tension coiled through his long body. In the faint moonlight, his eyes were narrow. His handsome face contracted into total need. And he wasn't looking away from her face.\n\n\"Ian,\" she whispered, breaking into a smile. She loosened her hold, urging his hips toward her. \n\nHis face relaxed into a surprised answering smile. \"You got it,\" he whispered. As she opened her legs, his thick cock surged suddenly into her pussy.\n\nSilky fabric slid over her skin as her nightgown was pulled upwards. Diana grasped the hem, tugging it the rest of the way over her head, and gasped when Ian's hand slid to her rounded ass, cupping her supple cheek firmly and angling her naked body against his. His cock sank deeper into her tight cunt. Winding her arms and legs around the hard body on top of hers, she squeezed as hard as she could, and he groaned into her neck.\n\n\"Ian\u2014 oh God\u2014\" She was about to demand an explanation, but he was sucking her soft skin now, increasing the pressure, scraping her neck with his teeth. It was so hot and so uncomfortable at the same time. And she was so horny, and she'd been so horny all night, and she needed Ian inside her so badly... She squirmed, pinned underneath him. \"Ooh\u2014\" she cried out softly, trying to keep her voice down. \"Ow, Ian.\"\n\nHe pulled back, and the next second his warm tongue soothed her neck, licking a teasing trail over her throat. Diana arched her back instinctively, exposing her neck to his busy lips and tongue. She felt so vulnerable suddenly, wrapped in Ian's arms, his cock spearing her deeply, while she trusted him to use his mouth gently on her neck and throat. Her pussy spasmed around him, bathing his shaft in steamy heat and wetness. Juices trickled out around the base of his cock, soaking her ass.\n\n\"Fuck, Diana,\" Ian whispered.\n\nWhen he ran his tongue over her collarbone, Diana shuddered and buried a moan in his shoulder. His cock massaged her tingling cunt as he slowly fucked her. Impulsively, she licked his neck in return, peppering the slope with tiny bites. His skin tasted warm and salty, like a hot summer night, and she just wanted more and more in her mouth, sucking harder and harder... Oh yes. He liked that. His low moans made it obvious. God, she was so close. Her crotch was all liquid heat, melting around the hard rod moving sensuously inside her warm pussy.\n\nHis thrusts were getting longer now. And the sounds she was hearing were her own voice, whimpering. She lifted her hips desperately, trying to rise up to meet him, but Ian just kept fucking her and fucking her. Sharp pleasure radiated through her soaked pussy and out to her quivering thighs. When his tongue sank into her mouth again, she gasped, raking her fingers down his broad sweaty back.\n\n\"Oh, yeah,\" Ian hissed, moving faster now. \"Take me, baby. Take it all.\" He wrapped his arms around her, pulling her to him tightly. His breath was hot on her neck. All Diana could do was dig her nails into his skin, panting with him as he released jet after jet of cum into her tingling pussy.\n\nToo soon, he withdrew his slick cock and sat up, his eyes roving over her naked curves. Dazed and aroused, still on the edge of coming, she looked up at him imploringly. Her whole body vibrated with need.\n\n\"Ian,\" she moaned softly, reaching for him.\n\n\"What is it, baby?\" Knowing fingers found her large nipple. \n\nShe tried to pull his other hand to her throbbing mound, but he just pushed her own hand back in one easy movement and pinned it against her pillow. Diana squeezed his fingers, so close to coming that Ian's pinches on her tight bud were almost enough to put her over the edge. \n\n\"I need you, Ian,\" she pleaded. \"I need to come.\"\n\n\"You were doing so well when I got here.\" His voice was husky against her ear. His warm male body pressed against her soft curves. He rubbed his thumb over her wrist and rolled her puckered nipple between his fingers, and she groaned. Her pussy was a pool of juices, desperate for his touch. \"You had everything you needed, didn't you, Diana? Why don't you just go on. Play with your little pussy for me the way you like it.\"\n\n\"No, I want you.\" God, she was begging, shamelessly, and he was making her do it. \"Please, Ian, please...I just want you.\"\n\nIn the dim light, she could barely see his smile. \n\nThen she muffled a yelp in his shoulder as fingers met her eager pussy, finding her wetness again. Something was different \u2014 \n\n\"Uhhh,\" she groaned, her cunt spasming around thickness. His thumb, she realized. His thumb was filling her pussy, massaging her sensitive entrance, and his fingers were following the river of cream down between her cheeks.\n\n\"Oh fuck,\" she said out loud, forgetting to keep her voice down. \"Ian\u2014\"\n\nHer ass clenched and fluttered around the tip of his finger. More fingers found her clit, teasing the hard little pearl. One arm surrounded her, holding her securely against him, as both his hands pleasured her. Was that shriek hers? She couldn't\u2014 Her parents would wake up\u2014 Swiftly, Ian covered her lips with his, swallowing her cries, working his hot tongue into her mouth as his finger penetrated her ass.\n\n\"Ian,\" she gasped into his mouth. \"That's far enough\u2014\"\n\nHer rosebud clamped down, trapping his finger. Ian kept his hand in place, caressing her melting clit and twisting his thumb firmly inside her cunt. Her whole body tingled. She felt totally open to him, totally filled and totally in the palm of Ian's hand. \n\n\"It's okay, Diana.\" His voice was so comforting, so lulling, it could have been his brother's. \"It's okay, baby. You can do this. Let me into your hot little ass.\"\n\nShe moaned softly, tense and excited, then let out a long sigh and relaxed against him. Without warning, her narrow channel relaxed too, opening to Ian's finger, and he slipped deeper into her tight warmth.\n\n\"Yesssss. That's right.\" He kissed her hotly. Diana arched her back, needing more now. \"That's so good. That's perfect. You love this, baby,\" he rasped, sounding like Ian again, but his tone was hypnotic. \"I knew you would. You want to be fucked everywhere, don't you? You need it so badly, you dirty girl.\"\n\n\"Yes,\" she whispered, dazed. \n\nIan's finger in her ass was setting her aflame, stroking nerve endings she didn't know she had. God, having his touch there felt shockingly intimate and somehow familiar and safe at the same time. Diana squeezed his hand between her thighs as his thumb and finger moved together inside her, massaging her pussy and ass, stretching her tightness. Her pussy was tingling, but her ass gripped his finger with a different kind of strength altogether. Her juices were soaking his hand. \n\n\"Fuck, you're tight and hot, baby,\" he grunted softly.\n\nShe buried her face in Ian's warm neck again, tasting his sweat. His fingers on her clit sent jolts of need through her swollen cunt, and God, her ass \u2014 it felt so pleasurable, it was almost painful. So much...so good...so full.\n\n\"Ian,\" she panted. \"Iaaan...\"\n\nEverything swam in front of her eyes. The bed dropped away. It was just Ian, all around her, filling her completely. Oh God. It was more pleasure than she could take, and he just didn't stop. All she could do was relax into his hands and open to him, more and more. She cried out into his neck, whimpering, as her orgasm washed over her in slow warm waves. Her juice-slicked cunt and ass rippled around his thick fingers, contracting again and again with glorious tightness. \n\nFinally, the sensations subsided. Slowly, even gently, Ian eased his fingers out of her. Panting for breath, she rested her head on his chest, feeling it rise and fall. \n\nThe moon had risen, outlining her bookshelves and desk and dresser. Diana moved her head back onto the pillow to get a better look at Ian, although there wasn't much light to go by. From this angle, she could just see the dark freckle under his left eye. She touched it lightly with a fingertip to make sure it was there, and that little smile tugged at his mouth. \n\n\"What were you thinking?\" she whispered, too relaxed right now to be irritated with him.\n\n\"Who said I was thinking?\" His grin widened. \n\nShe tried to tug one of the pillows out from under his head so she could throw it at him, but Ian's hand closed over the plump cotton, and anyway, it felt like too much effort right now. \"Coming in here, making me guess like that.\"\n\n\"Just checking. To see if you were paying attention.\" Now his dimples were showing. \n\nBy all rights she should be blushing, but the effects of the joint still lingered through her body. This had been another one of Ian's pranks, that's all. \"And what if I thought you were Brendan?\" \n\nIan just nipped her neck, wedging his heavy leg firmly between her soft thighs. \"Someone's been a bad girl tonight,\" he whispered. He cupped the swell of Diana's breast, rubbing it underneath where it felt especially good, and she sighed, enjoying it too much to drag the conversation backward. \"I can smell the weed on you. First time?\"\n\nShe tried to shrug casually. \"How'd you guess?\" A sudden tickle of panic curled through her stomach. \"Do you think\u2014 My parents\u2014\"\n\n\"Just take a shower in the morning. And put your fan in the window. I'll do it.\"\n\nHe rolled out of bed. Diana watched him, naked in the sliver of moonlight, as he went to get her box fan from the corner. She couldn't drag her eyes away from his easy movements, the play of light and shadows over his long body and sleek muscles. Jeez, he was so gorgeous, it hurt. The question she really wanted to ask was, What are you doing here \u2014 alone? But she had no idea what kind of answer she'd get.\n\nShe cleared her throat. \"What's Brendan up to tonight?\"\n\nIan shrugged, maddeningly. \"Stuff. We don't keep tabs on each other all the time. We just give each other the rundown afterwards.\"\n\n\"I thought you were inseparable.\"\n\n\"Usually.\" The slow grin he gave her made her insides turn over. He bent to plug the box fan in.\n\n\"Have you guys ever had a fight?\" she asked, suddenly curious. \"Or do you just make agreements?\" \n\nIan looked over his shoulder, startled. He put the box fan in the window, turned it on, and climbed back into bed next to her.\n\n\"Our last fight was when we were seven.\" He lay back against the pillow. \"I don't remember what the hell it was about. We got mad about something and we started whaling on each other. Neither of us was winning. We just kept trying to beat the crap out of each other.\" As he turned to her, Diana felt his breath stir her cheek. The box fan whirred, making lazy waves through the air. \"In the end, we knew we couldn't win that way. We'd just keep fighting forever. So we made an agreement to never get in a fight again, and we never have.\" A warm hand rested on her stomach. Ian's voice was soothing. She leaned her head against his shoulder. \"I couldn't make it without Brendan. He knows I always have his back, and I know he always has mine.\"\n\n\"What do you mean, you couldn't make it?\" she murmured. He was rubbing her stomach now in slow circles, teasing just below her belly button, and her nipples were beginning to pucker.\n",
        "Ian shrugged. \"Brendan's the smart one.\"\n\n\"You're smart too.\" Surprised, Diana pushed herself up on her elbows. \"He's just more conscientious than you are.\" Her voice was so indignant that Ian began to laugh.\n\n\"It's really okay, Diana,\" he whispered into her neck, easing her back down to him. \"There's more to life than kissing academic ass. Maybe someday you'll find out.\"\n\nThat's not the same thing\u2014 she wanted to say, but what came out was, \"At least I'm good at that.\" \n\nIan gave her a withering look, but his scornful expression faded as she stared back at him, then dropped her eyes.\n\n\"What?\" He pinched her hip, and she reflexively smacked his hand away.\n\n\"I'm nervous, Ian.\" Shit. Had she really said that? She had. \n\nHe glanced down at her sharply, his hand stopping its journey roaming over her body. \"About what?\"\n\nShe let out a long breath. \"College,\" she mumbled into his chest.\n\n\"Jesus, Diana.\" He started laughing. Surprised, she laughed too. \"You haven't even graduated high school yet. A week ago you were all tied up over finals. Now you're on to worrying about the next thing. Take a break.\"\n\nHeat washed over her skin. Sure, she'd been anxious about finals when the twins had climbed in her window a week ago. She'd also put on a strip-tease, squirmed and pleasured herself in front of both of them, and asked Brendan to take her from behind while she sucked Ian's cock and ordered him to ask for it nicely. She'd figured that's all he'd remember about that particular evening. \n\n\"Change is scary,\" she whispered. What was she really saying? \"I'm scared.\" Ian's fingers tightened in her hair. Unable to look at him, she trailed her fingers along the curve of his pecs, stroking his tiny dark nipples and the patch of brown chest hair that narrowed to a soft line. His hard stomach pulled in under her touch. His skin was so smooth. He sighed, a low sigh. \"At least in high school I knew who I was.\" Was she really confiding in Ian, rubbing her cheek against his chest while he tugged lightly on her hair? \"I didn't always like being that person, but I knew what it involved. You know?\"\n\n\"Yeah.\" Ian's voice was quiet. \"I know.\"\n\nDiana's eyes met his. There wasn't a trace of teasing on his face.\n\n\"What's it like being the bad twin?\" she asked softly.\n\nSilence. Then lips closed over hers. \n\nBefore she could ask him more, his palm was moving all over her body again, fondling and squeezing her soft curves. And suddenly, she needed to touch him too. Of its own accord, her hand found his cock, half-hard and slippery with both their juices. \n\nShe didn't miss Ian's startled expression when she brushed her lips against his chest. But his hard body was so warm, and his smooth skin tasted so delicious as she lightly kissed and licked her way over his stomach, that she had no intention of stopping. Somewhere, some part of her was absolutely certain that Ian needed this right now. Her tongue explored the ripples of his abs, swirling closer and closer to his musky crotch. When his hips bucked toward her mouth, her nipples puckered in response, hardening in the night air as her breasts swung over his body. She squeezed his muscled thighs, doing her best to hold them down against her rumpled sheets the way he'd held her thighs down when he licked her cunt. God, she couldn't stop looking at his cock, so tempting and so close to her face. When Ian made a strained sound, she blew a soft stream of air over his engorged erection. He grunted, but held still. \n\nShe'd meant to take her time, but she just wanted to taste him too badly. Leaning down, she wrapped her lips around his cock. \n\nOh yes \u2014 he was completely hard now, his glossy head filling her mouth. The tang of her own juices met her tongue, and she licked them up eagerly. Ian grunted softly, his body tightening when she caressed his warm sac. Curious, she stopped licking the underside of his cock, just for a moment, to take one of his balls in her mouth. Soft textured skin met her tongue, the hairs tickling her lips. She licked gently, exploring the wrinkled surface. Ian was groaning over and over now, quiet but deep, sounds of need coming from somewhere inside him.\n\nQuickly, Diana lifted her head and engulfed his warm shaft in her mouth, sinking down as far as she could manage. It was a little uncomfortable, having her jaw open so wide and Ian's thick cock filling her mouth, but God, it was so good, too. \n\n\"Don't stop,\" Ian grated, his voice raw.\n\nOnce he'd said it, she just couldn't resist. She pulled her mouth off Ian's cock and leaned over him, panting, looking right at him. His eyes went wide, glazed with desire, and the animal expression on his face sent prickles of want through her heavy breasts. \n\n\"Tease,\" he whispered. \"You little\u2014\"\n\nWith one swift movement, she climbed on top of him. His whole body jerked, and oh jesus yes, he was panting, and the only thing that made sense was to rock her creamy cunt against his cock, letting it push into her sensitive entrance.\n\n\"Uhhh...\" she groaned, bracing her hands on his broad shoulders for support. \"You feel bigger.\"\n\n\"Mm-hm.\" The lust on his face made her shiver. Her silken pussy flexed around his smooth head as she slowly sank down on his shaft, settling her thighs against his hips.\n\n\"You're so deep inside me, Ian.\" It came out as a whisper.\n\n\"Mm-hm,\" he said again. His hazel eyes were locked on her face, and the look in them...the way he was looking at her...she couldn't give it a name, but it forced a sudden grunt of excitement out of her. \"You're on top now, you hot slut. Go ahead and ride me.\"\n\nShe tried lifting her hips upward and lowering her wet cunt down onto his cock, lifting and lowering, but it wasn't easy. Sweat beaded on her forehead and trickled under her arms. Ian's cock kept jerking inside her tight core, feeling inescapably huge. \n\n\"This is a lot of work,\" she said in surprise.\n\nFor half a second, Ian stared at her. Then he smashed his face in her pillow, guffawing. His whole body shook. Diana had to hang onto his shoulders to keep her balance. When he was able to breathe again, he gasped, \"Damn right, it's a lot of work. Why do you think I go to the gym every day?\"\n\nDiana gave him a murderous glare. \"To stay in shape for basketball season?\"\n\n\"That too. Here.\" He moved his hands firmly up her back, pressing her forward. Oooh \u2014 her pussy squeezed his cock involuntarily as Ian guided her to a new angle, his cock rubbing against her aroused walls and sliding even deeper inside her. \n\n\"Ian\u2014\"\n\n\"I know, baby. You can really feel me now.\" He began thrusting upwards, spearing her tender pussy. Diana clutched his shoulders, feeling the muscles ripple under her fingers. He'd told her to ride him, but all she could do was bounce, her breath coming out of her in little gasps, as Ian fucked her rhythmically, one hand finding her full swaying breast. Her nipple hardened under his touch as he fondled the ripe bud. She began to moan.\n\n\"Come on, Diana.\" His voice was soft, but rough. \"Don't make me do all the work. Unless you want me to roll you over and fuck the hell out of you.\"\n\n\"Do it,\" she gasped.\n\nHe laughed softly. \"Earn it.\"\n\n\"Jerk,\" she muttered, and he chuckled again. God, every movement of his hips sent his thick cock rubbing against a sensitive spot at the front of her pussy and she just wanted more...and more... Diana began to lift her ass, sliding her juicy cunt up and down Ian's cock over and over again. He slowed his plunges to match her speed, his hands roaming everywhere \u2014 her heavy breasts, her smooth belly, her quivering thighs, her round ass. The little smile curling his lips sent a hard shudder of need through her body. Her own hips jerked at his sudden touch on her clit, so much more gentle than she'd expect from Ian.\n\n\"You like that?\" he murmured teasingly. \n\n\"Yes,\" she gasped. His fingers slipped over her swollen folds, encouraging the hot juices flowing from her eager cunt to soak his cock, making the place where their bodies joined slicker and slicker.\n\n\"Such a nice little pussy,\" he murmured. \n\n\"Just nice?\" she managed. Determined to drive him crazy, she squeezed Ian's cock as hard as she could, doing her best to milk him, and his grin twisted into a look of pained need. Oh \u2014 it was getting easier to move now. She was getting the hang of it, matching Ian's thrusts, and he was noticing and fucking her faster.\n\n\"A fucking amazing pussy,\" he grunted. \"That I want to cum in all night long.\"\n\nDiana moaned, and as her swollen pussy tightened around Ian's shaft, he rubbed the hard bead of her clit faster, teasing the exposed tip again and again. She clutched his shoulders, her arms trembling as she tried to hold herself upright on his engorged cock. \n\n\"Ian, slow down,\" she pleaded. \"It's\u2014\"\n\nToo late. Sharp pleasure rushed over her. She couldn't breathe. She could only pant, helplessly, totally out of control, squeezing Ian as hard as she could with her hands and thighs. Her cunt was rippling on his cock, and words were streaming from her mouth, total babbling, and she could only hear herself rasping out \"Oh fuck, oh fuck, oh fuck,\" in a voice that didn't even sound like hers\u2014\n\nAnd before she knew it, she was flat on her back, Ian's heavy body on top, his hot tongue wriggling deep in her mouth, his meaty cock plunging again and again into her tingling pussy. She gasped for breath, trying to push back as she hugged his hard waist with her creamy thighs.\n\n\"You want me to talk dirty, Diana?\" he muttered into her mouth. \"You want more?\" Diana quivered as he ground against her clit. She was so sensitive after coming, way too sensitive for him to do that, but her whole body was saying yes. He was using longer and longer strokes, driving into her harder and harder. \n\n\"What the hell have you been doing before this?\" she asked, breathless, barely able to think. \"Talking clean?\"\n\nHe laughed softly, but his voice was strained with need. \"I want to fuck you everywhere, baby,\" he growled. \"I want to fuck your whole body. I want to fuck your sweet ass, and your hot little pussy, and your sexy mouth. I want to soak you in my cum. I want to see it running out of you while you lie there, fucking worn out and completely satisfied. 'Cause you know what? I don't think you've ever been completely satisfied. No matter how much I fuck you, no matter how much Brendan fucks you\u2014\" Diana moaned, her dripping pussy clasping Ian's swiftly moving cock, her back bouncing against the bed \u2014 \"you're always going to want more, because you're an insatiable little slut who can never\u2014 get\u2014 enough.\"\n\nGod, she was in a fog, everything was hazy and hot and hard and oh so real. His thrusts were forcing the air out of her now. Ian's tongue dove into her mouth again, and Diana opened her lips to take him in. \"Tell the truth,\" he grunted, pulling back. \"Am I right?\"\n\nShe could barely answer. Was he? Was he right? \"Yes.\" The word flew out of her. \"Yes. You're right.\"\n\n\"Fuck,\" Ian groaned, pulling her tight against him. Diana's hands found his ass, squeezing his muscled cheeks hard, urging his cock as deep as it could go. God \u2014 it was so sexy to feel him coming. She couldn't help moaning along with him, breathing together until his deep groans slowed into sighs.\n\nThey lay entwined together for a few minutes. Then Diana stirred, trying to stretch under Ian's long body. He was totally relaxed, lying on top of her, his cock still hard and buried in her soaked pussy. When she wriggled her hips, he eased out of her and rolled onto his side, pulling her close.\n\n\"Was that okay?\" The face close to hers, usually cocky or mocking, actually looked a little worried. \n\n\"Yeah.\" She squeezed his shoulder. \"Very okay.\"\n\nHe barked a laugh, shaking his head. \"I keep thinking you're part priss.\" His voice was a little hoarse, and there was no question \u2014 he looked tired. Diana couldn't hold back her smile. She'd worn him out. \"But you aren't, are you? You're a dirty girl. And you like that the world doesn't know. I bet deep down, you're dirtier than I am.\"\n\n\"Maybe someday you'll find out,\" she heard herself say.\n\n\"Hope so.\"\n\nDiana realized she was relaxed in Ian's powerful arms, his fingers idly stroking her hair. Her body was still coming down from being fiercely fucked. Too soon, he began to let go. \n\n\"I'm gonna leave now,\" he whispered. \"Bet you need some recovery time.\"\n\nShe reached out to him. \"Stay.\" \n\nA pause. \"What are you going to tell your mommy when she finds us in the morning?\" Ian asked finally. But his arms tightened around her.\n\n\"She won't.\" \n\nHe gave her a long look. \"Okay. I'll go clean up.\"\n\n\"What?\" Diana grabbed his elbow as he sat up and reached for his clothes. \"My parents\u2014\"\n\n\"Parents don't hear me, baby.\" She could just make out Ian's grin in the dim light. Sooner than she could argue, he shrugged into his t-shirt, tugged his boxers on, and crept noiselessly out of her room. \n\nHe hadn't been kidding, Diana thought as she stretched, unkinking the soreness in her legs. Ian must be heading for the bathroom down the hall -- he knew where it was, of course -- but other than the very faint sound of water running, she never would have guessed anyone was up and about. \n\nOf course, Ian had been the champion of sneaking around when they were kids: onto the roof while his mom cooked dinner, out of the classroom while the teacher's back was turned, up behind Diana with a water pistol to try to scare her senseless. She could only imagine what he used his powers for now. Shaking her head, she pulled her nightgown back on and smoothed the silky purple fabric over her body. \n\nA minute later, the mattress sank and a hard male body pressed against hers, spooning her back. She turned to face him, snuggling into his warmth, sure that she could never fall asleep with Ian of all people in her bed, but she felt so relaxed... \n\nKnocking. Someone was knocking. Bright sunlight met her squinting eyes, streaming in the open window through the rustling branches of the tree outside. And she was wrapped in a strong embrace...in her bed? Ian. Ian, still fast asleep, his warm body tangled up with hers, between her and the door. She kicked unthinkingly, and he stirred.\n\n\"Diana, honey?\" Her mother's voice came from the other side of the door, followed by the squeak of the door being pushed open. \"You overslept, you'll be late for graduation practice\u2014\"\n\n\"Oh my God.\" Her mother's hand flew to her mouth. Ian rolled over, and her jaw dropped. \"Brendan? ...Ian?\"\n\n\"Brendan,\" Ian answered smoothly, sitting up. Diana sat up too, grateful beyond belief that Ian had put his t-shirt and boxers back on and she was wearing her nightgown. Somehow, Ian had managed to wake up completely in the space of about fifteen seconds, while she was still rubbing her eyes. \"I'm so sorry, Mrs. Cooper. Would you believe me if I said this isn't what it looks like?\"\n\nDiana stared at him. She'd never seen Ian turn on the charm the way Brendan did, but now he'd opened the spigot full force, giving her mother an unbelievably disarming smile that could have come straight off his brother's face. The dimples deepened in his cheeks. Somehow, he managed to look irresistible and penitent at the same time.\n\nDiana's mother blinked a few times. Amazingly, her cheeks had a tinge of pink in them. \"What happened?\" she asked grudgingly.\n\nIan got out of bed and stood to face her mother, his hands spread. \"Diana and I were talking on the phone last night, and she asked me to come over. We should have told you, but she didn't want to wake you up.\" Ian's eyes were locked on her mother's, giving her the most gorgeous impression of a mournful puppy dog Diana had ever seen. \"She's been so stressed, nervous about graduating and leaving home, and she said she's been having nightmares. She asked me to stay the night.\"\n\n\"Diana!\" her mother scolded.\n\n\"Sorry, Mom.\" Diana hung her head. Nerves were humming through her body, and her pussy was sticky under her nightgown, Her ass tingled, still feeling Ian's finger inside it from the night before.\n\n\"Nothing happened, Mrs. Cooper.\" Ian's voice couldn't have been more reassuring. \"She just wanted me to be here for her. And, you know\u2014\" he shrugged his shoulders self-deprecatingly. \"I don't see Diana that way. She'll always be a little sister to me. Sorry, Di,\" he added quickly. She rolled her eyes, doing her best to play along.\n\n\"Well...I understand, Brendan,\" her mother said. \"But Diana, we need to discuss the rules of having boys over, especially in your room. We've never had to talk about this,\" she added to Ian, conversationally, as if he were her peer instead of a college student two years older than her daughter. \"You know how it is. It just hasn't been a problem.\"\n\n\"And I'm sure it won't be,\" Ian agreed. \"She told me she's putting all her energy into studying. Now if Ian had been here...it would have been another story.\" He shook his head. Diana bit down hard on her lip, widening her eyes at him as she did her best to keep a straight face.\n\n\"Let's not think about that,\" she managed to say. Good thing it was her mom who'd walked in on them, and not her dad.\n\n\"Do you want to stay for breakfast, Brendan?\" Mrs. Cooper smiled at Ian.\n\nDiana tried not to goggle in shock. Sure, Ian had been charming, and he'd relied on Brendan's reputation, but she couldn't believe her mother was actually inviting him to sit in their kitchen and eat cornflakes after she'd discovered him in her daughter's bed. She'd been wondering for a while what Ian got out of the good twin/bad twin arrangement. Now she was starting to see.\n\n\"Thanks, Mrs. Cooper. I'd better get back home. Ian needs a lot of help waking up in the morning.\" The wink he gave her was all Brendan. He waved as he headed out \u2014 through the door this time. \"See you, Di.\""
    ],
    "authorname": "SilverMuse",
    "tags": [
        "twins",
        "brothers",
        "threesome",
        "mfm",
        "weed",
        "dildo",
        "anal play",
        "high school",
        "student",
        "18-year-old"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-boys-next-door-ch-04"
}