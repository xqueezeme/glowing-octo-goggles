{
    "title": "Brain Games Ch. 15",
    "pages": [
        "\"Hi Vicky,\" Zach said glumly.\n\n\"So you know me.\"\n\n\"I do.\"\n\n\"Well, Zachary, in case you don't already know, let me tell you a little bit about my day today...\n\n\"I was in the student center, reading in one of the lounges while waiting for my husband to show up after he was done grading papers for the afternoon. We were going to have a bite to eat, maybe a pint, and go watch some tv. That would be a typical, or even a pleasant evening for us.\n\n\"Instead, I don't know exactly what happened, but I was at home, stark naked, more aroused than I've ever been in my life. And I came to this realization just as Ron was walking up the stairs, angry at being stood up.\n\n\"Fortunately, I was in a position to change his mood, which is why I probably don't have an inconvenient bruise right now. You see what I'm saying?\"\n\n\"Ok, I'm listening,\" Zach offered, keeping himself totally neutral. Even as she spoke, he tuned in, and found that there was a wild mix of emotions going on inside her, including arousal, curiosity, guilt, anger, fear.\n\n\"I don't love Ron, and he doesn't love me. That's not our thing, we're a perfect team, intellectually. We have a career planned. We don't bother with sex anymore, it's just a distraction. We haven't had sex like that... ever. We haven't even had bad sex in a year. So, what I need to know from you, Zachary, is this. What did you do to me?\"\n\n\"How do you know it was me?\"\n\n\"Well if I didn't before, I do now. You could hardly look guiltier. But I had flashes of memory. What you looked like. Your name.\"\n\n\"Which is Zach, by the way.\"\n\n\"It wasn't hard to track you down. The University has all kinds of useful student indexes. You can opt out if you are on the run from the mafia, but for most of you, you're in there.\"\n\n\"Well, ok, good to know,\" Zach said. \"But I can't really tell you what happened.\"\n\n\"I would have thought for sure you had roofied me, but it magically wore off the second Ron came home. So I don't think you drugged me.\"\n\n\"No. You could call it hypnosis, I guess.\"\n\nVicky nodded as if he was confirming her theory.\n\n\"Go on, tell me more,\" she said.\n\nZach considered telling the truth, but he had the firm conviction it would not go over well.\n\n\"We got talking,\" he said. \"Your book. Ritual prostitution in the ancient temples. We were talking about Crete, how the palace there was actually a temple. I... I saw how it turned you on, Vicky, and I got carried away. I even asked you if you had a boyfriend, and you said no. I didn't imagine you were married. So, I have been trained in hypnosis. My uncle is a stage hypnotist, Vegas, that kind of thing. And I learned it. So we were having this sexy conversation and I suggested something... inappropriate. You turned me down, but I saw that you wanted to. Here's the thing about hypnosis, Vicky, you can't make someone do something they don't want to do, so I just thought I would lower your inhibitions a little, and we would do a little goddess worship back at your place. It was lovely, you were really into it! Then Ron came home, and, I'm not proud of myself, I ran. My clothes are in the hamper there, soaked from climbing down your wet ivy.\"\n\n\"You were right to run, Ron would probably have killed you.\"\n\n\"Why are you with that asshole then? He hits you?\"\n\n\"Almost never. He's a genius. A very, very brilliant man. He's a linguist, with a completely new analysis of the evolution and significance of the ancient near-east languages. We work together, and we are going to change the world's understanding of Mesopotamia and ancient Israel. It's important work. More important than getting your rocks off with an undergraduate.\"\n\n\"And yet here you are. You came back for more, didn't you?\"\n\nHe pushed the intention into her even as he said the words, keeping his energy presence very constrained, not getting cocky. Just a quiet confidence that he put into his words and into the action of his will.\n\nHe wasn't wrong, either, he could feel her lifting to meet his energy. He was surprised to find that he was responding. He thought for sure he was going to lie down and pass out, but he found himself twitching and pulsing with the thought of her bountiful breasts, and the swollen pink lips welcoming him inside her.\n\nBut she denied it.\n\n\"No!\" she said vehemently. \"I came here to understand what happened, and to warn you. I'm not going to press charges because it would ruin everything. But I should, and if you keep this up, someone will. You may or may not be a na\u00efve young man with a talent he's not mature enough to handle, but I'm going to assume that you are, and I'm going to tell you to your face, just once, that if you ever do something like this to a woman again, to me or to anyone else, I will find a way to make sure you...\"\n\nHer rant had given Zach the opportunity to really align to her sparking desire. It was intermixed with the righteous anger.\n\n\"Stop,\" he said firmly. He looked her in the eye. \"Sit.\" He gestured to his bed.\n\nShe sat.\n\nHe wrote a note for Jacob, taped it to the door.\n\n\"Vicky.\" She looked at him expectantly. All the emotions were still churning inside her, but the excitement was ascendent.\n\n\"You have studied the ancient temples. The goddess cults. The priestesses and their powers.\"\n\nShe nodded.\n\n\"And you have wanted to be exactly such a priestess haven't you. You have gone to sleep thinking about those temples, and how a voluptuous woman such as yourself would be desired.\"\n\nShe nodded again, confusion clouding her from her words.\n\nFor his part, Zach didn't quite know where this was coming from. He was seeing it in her, piece by piece as he spoke. He knew his words were true. But it wasn't the stone-cold will of Enkins.\n\n\"Show me,\" he said, delicately easing the invitation to her, show him her true self, the voluptuous priestess, show him her delectable and desirable body, show him her healing powers. This was not the instruction he had learned from Enkins, but it came to him as natural as breathing. This was the right approach for Vicky. Not to command, but to invite, to open the doorway and let her walk through it herself.\n\nAnd she did. She twisted on the bed, letting him look at her from all angles.\n\nHe gently aligned his arousal to hers, letting her feel their excitement rising together.\n\n\"Doesn't it feel good?\" he asked, letting the question become suggestion, letting it sink in.\n\n\"You're full of shit aren't you,\" she said. \"There's no hypnotist uncle.\"\n\nZach shrugged. \"Does it matter now?\"\n\nVicky lay back on his bed, her hands roaming over her own body.\n\n\"That's right,\" Zach said. \"You can undress now.\"\n\nAnd she did, slowly, sensually. Her perfect cleavage took his breath away, and he gasped audibly when she let unhooked her bra, letting her breasts roll free. She wriggled out of her pants and panties in one writhing tug of war with the cloth.\n\nFilling himself with reverence for a priestess of an ancient faith, Zach brought his hands to touch her thighs with love and with all of his attention focused on the contact of their skin.\n\nHe brought his breath between her legs, first breathing out, with all the energy of his arousal, into her sex, and then inhaling, drawing in the flowing scent of her desire.\n\nHe kissed her. He softly pressed his lips to her labia, and held the contact, feeling all the life within them both flowing together through the kiss. She quivered and made a sound he had never heard before. A sound of perfect joy, or perhaps of joy perfected.\n\nHe kissed her slowly, first just with his lips and then with his tongue, exploring her.\n\nShe tasted clean; but with a delicate flavor that was at once earthy, and floral, and salty.\n\nZach felt himself straining at his pajamas, his erection back in its fullness.\n\nBut he let it be. He let all desire fall by the wayside as he pursued the deep kiss, parting her lips, and rolling her clit, and delving into the juicy center of her pleasure.\n\nShe moved her hips, whimpering, moaning. He continued to keep his arousal aligned to hers, and remembered to weave an egg about them. It was his most elegantly formed egg yet, nearly smooth.\n\nA sudden sadness rose in her. He didn't know where it came from, but he felt her shudder as tears began to flow. In a moment she was sobbing.\n\n\"This,\" she said. \"This is who I am. I've always known it. I always have.\"\n\nHe lay himself down over her, resting his hard cock along her labia. He felt them slide open, as if to kiss the length of him pressed between their hips. His belly to her belly, his heart to her heart, he looked into her eyes.\n\n\"Yes,\" he said. \"This is who you are. And this is who I am, but I have never known it. Not until this very moment.\"\n\nEven as the words left his lips, he saw into himself for the first time. He realized he had never even tried!\n\nHe too had innumerable lines, and thousands of layers and folds and twists of this bright energy. He saw with perfect clarity where Enkins was, within him, a hard, dark shadow at the base of his neck. Not so unlike the parasite that had been consuming Lisa.\n\nHe let it be, this was not the time.\n\n\"This is so beautiful,\" Vicky said, tears still streaming down her cheeks.\n\nHe looked into her eyes, brown in this light, but he knew there was green there too.\n\n\"This is so beautiful,\" he said, feeling it for the first time.\n\nShe tilted her hips, catching the head of his cock at her entrance.\n\n\"Fill me slowly, as slowly as you can,\" she said. He hadn't set any intention at all. He felt that press, that pressure, and that sudden relaxing as he was in her.\n\nSlowly, over the course of many breaths, he eased more deeply into her. He felt her shudder, all the muscles of her pelvis grip him and hold him.\n\nA soft wave of orgasm washed through her, lifting a long, sweet moan of pleasure. She wrapped him tightly in her arms, and hooked her heels over his thighs, pulling him more tightly too her, more deeply within her. She found the perfect angle for herself, rocking her hips up to meet him, stirring him within her. Another gentle rise of pleasure lifted her further from her thoughts and concerns.\n\nSoon they were rocking their hips together with a luxurious and slow motion, staring into each other's eyes.\n\n\"Who sent you to me?\" she asked, as if she knew more than he did himself.\n\nHe smiled. \"It is still a mystery to me,\" he said. \"It's impossible to be random, and yet I know of nothing.\"\n\nThey rolled together, Vicky on top, rolling her hips more joyfully against him, bringing her breasts to his mouth. He went from one to the other, taking his time with each.\n\nIn a moment's inspiration, he tucked her nipples together, bringing them both into his mouth at once. She lifted her head, groaning and cumming again. With each of her broad and beautiful climaxes, Zach rode it with her, feeling the beauty of it race through the both of them. He joined his voice to hers, carefully maintaining the protection of his egg.\n\nAnd then she was rocking herself more urgently against him, pressing her clit hard against the root of his cock, against the bones of his pelvis. She grunted with guttural power, clenching his cock with the tightness of her sex, churning around him. He felt a new climax, different, bigger approaching.\n\nHe remembered his dreams and began to offer his climax up into Vicky, through her, giving to the divine, filling their egg to the bursting point. And there was something else to it as well... that joyfulness. Laughter and tears mingled as she rode him more quickly and with a swelling need.\n\nZach pressed himself up to her, licking as if through her nipples to feed her heart; thrusting into her as if to send his climax all the way through her, filling and flooding every cell with his light. He felt himself ready to burst; he felt himself releasing everything, letting everything go.\n\nVicky cried out, sharply arching herself up to a vertical position, trembling around him. Zach couldn't tell if he had ejaculated or not, it was irrelevant.\n\nThey held the position in stillness as their trembling subsided, and she brought herself down to rest on him. They floated there for a century or more, bobbing together on the gentle, warm swell of the oceans of love.\n\nEventually, she lifted herself off him. He was no longer rock hard, but neither was he soft.\n\nWithout any words, she put her clothes on.\n\nHe watched her, feeling the extraordinary beauty of her every motion. The radiance. He fed everything loose in their bubble back to her, filling her with all the power they had shared, and even as he did so, he felt his own body alive to each individual hair follicle, to every touch of every fiber of cloth, every whisper of air stirring from her motions of dressing.\n\nContained again in their skin, he let the bubble fall away. There was enough ambient flickering of life energy for him to feed his pets as well.\n\nVicky bent to him.\n\n\"Zach, I don't know what you are, but this changes everything. Ron's translation... it's all wrong. I don't know why, yet, but I will. Thank you.\"\n\nShe kissed him and left.\n\nZach didn't bother to dress. He reached his arm out through the cracked open door to tug off his note, and then flopped back down.\n\nAt long last, Zach had the freedom of relaxing alone in his own bed.\n\n<p align=\"center\">* * *</p>\n\nShe came to him in dream.\n\nThe goddess in billowing gauze and gold clasps with eyes like violet fire. She was tall, magnificent, powerful, her form desirable in every way, but somehow terrifying also.\n\nIn his dream, he placed himself on his belly, on the ground, at her feet.\n\n\"You have come through trials, and are learning well, Zechariah.\"\n\nHe felt so bold as to crawl forward and kiss the tops of her feet. Her skin was rich, the color of expensive antiques. She smelled of incense and spices he couldn't name, but which would haunt him throughout his days.\n\n\"You are not ready, but the time has come, your greatest trial is ahead of you. I will be with you at every step, and also every mis-step. Don't be ashamed of your mistakes, they are necessary also. But you will not see me again until it is accomplished. You won't see Victoria again, I am sorry to tell you. I have need of her elsewhere. But Ava is still yours, and she is fully recovered, and has forgiven you everything. You have another, whom you have bound, as well as your two sprites. Use them all wisely, and as much as you can, remember this evening. Vicky gave you everything you need. Do not lose it.\"\n\nZach started out of sleep, unsure whether it had been sleep at all.\n\nHe heard rain against the window, and felt the weight of darkness draw him back into sleep.\n\n<p align=\"center\"># # #</p>"
    ],
    "authorname": "PriestOfIshtar",
    "tags": [
        "mind-control",
        "hypnosis",
        "goddess",
        "supernatural",
        "love"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/brain-games-ch-15"
}