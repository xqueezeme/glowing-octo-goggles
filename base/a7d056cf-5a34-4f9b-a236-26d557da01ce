{
    "title": "It's Too Clich\u00e9...Right? Ch. 12",
    "pages": [
        "\"Evan Trevorrow is gay.\"\n\nAfraid that it was probably a trick of my eye, I read the line again, and again, and again. The words didn't change. I looked up only to see Sam looking to me with a look of equal shock on her face. Somehow it took that long for my brain to finally piece together what I had just read and the implications of it. Evan had just been outed.\n\n\"What?\" Brian voiced from the driver's seat, eyes still focused on the road although getting slightly antsy at our silence.\n\n\"Someone outed Evan,\" Sam said, her tone conveying that she was still having difficulty understanding the situation.\n\n\"Not someone. Kirstie,\" Tim clarified.\n\n\"Well, technically she only spread the text she received,\" Sam countered before realizing what she had just said made little sense. \"Which, I guess, meant she outed Evan.\"\n\nI ignored them, shaking my head as I turned back to my phone looking to the screenshot once again. Kirstie may have had a part to play in this but I was more interested in finding out who sent the initial text to her. Typing the unknown number into my search bar, it came back empty, which meant I didn't know who sent the first text to begin with.\n\n\"Either of you know whose number it is?\" I asked. They both did the same search I just completed before looking up at me with apologetic faces. \n\nSighing, I dropped my head. \"Let's just get to school, I need to think for a minute.\"\n\n\"We're almost there,\" Brian added.\n\nSure enough, it wasn't five minutes later that we were pulling into the school parking lot, a small crowd gathered near the entrance. Even from my spot in the car, I could recognize a few of the kids from the GSA, and a distraught looking Kirstie. \n\nOh, great. What now?\"\n\nThe second Brian brought the vehicle to a stop, I grabbed my bag and swiftly made my way over to the congregation of students.\n\n\"Just calm down, Kirstie,\" I heard one of the girls from GSA, Michelle, saying as she patted Kirstie on the back. \n\n\"Hey,\" I said, drawing the attention of everyone to my arrival. \n\n\"Brad,\" Kirstie cried, pushing past the other students to cling to my arm. \"I didn't mean to out him. I wasn't thinking when I forwarded that message. Oh, god. I'm a horrible person.\"\n\n\"Whoa, whoa, calm down,\" I said, grabbing her shoulder and giving her a light shake, probably hoping that it would snap some composure back into her. \"Just explain to me what happened.\"\n\n\"Um...I uh...\" she stuttered as she took breaths to try regaining some of her composure. \"I was on my way to school when I received a text from an unknown number. I don't know, when I saw the text, my first thought was to send it out to everyone. Shit, I'm such an idiot.\"\n\nI couldn't disagree, though I didn't voice this, instead opting of patting her on the shoulder. \"So, you have no idea who it is?\"\n\nShe shook her head. \"I texted back asking who it was but I didn't get a reply. It wasn't until Michelle texted me saying that I had outed Evan that I realized what I had done. I didn't mean to do it. Just because this is Cornway doesn't mean that I could have just outed someone like that.\"\n\nAs much as I wanted someone to blame, I could tell that Kirstie was telling the truth. Kirstie was a gossip, yes, but she was no liar. \"It's fine. Just...try asking around if anyone knows who the number belongs to. If anyone can find it, it would be you.\"\n\nShe swallowed like she was on the verge of tears but nodded anyway. I gave her a weak smile but waved her away, leaving me alone with the other GSA kids. I could sense Brian, Sam, and Tim nearby, listening in, partly to satiate their curiosity but also to find out the truth.\n\n\"What are we going to do about this? Shouldn't we be doing something about this? We're the GSA for crying out loud. If kids can't feel like we're people who they can count on, we're as good as useless.\" Michelle said, pacing back and forth. Michelle was a very...spirited member of the GSA, if you couldn't tell.\n\n\"Michelle, calm down. Breathe,\" I said, stopping her pacing which was making me more tense than I needed to be, which was already pretty fucking tense. I was the president of the group and it felt like it was my responsibility to get to the root of this, especially seeing that I cared for Evan on a personal level. \"For now, we just need to remain calm. Until we can find out who started the rumor, there's nothing we can do.\" I stood there watching the rest of them, waiting for some argument, but they all just slumped their shoulders in defeat. \"Anyone seen Evan today?\"\n\nI saw shaking heads in every direction and I sighed. \"Okay guys, there's nothing you can do so just get to class for now,\" Brian chimed in. Vice-president to the rescue, I guess. Nods of approval followed as the group dispersed, leaving me alone with the trio again. \n\n\"So, if nobody knows who sent that first text, do we have any suspects in mind?\" Sam asked.\n\n\"No one other than us know about Evan's sexuality and I seriously doubt that either the twins or Jake sent it,\" I muttered, lifting my gaze to the other three. \"It's none of you, right?\" Brian decked me in the shoulder at that, probably offended that I had even thought to ask. \"Just making sure. Geez,\" I said, rubbing the sore spot he had left.\n\n\"So, if it's not us, then who? No one else in the school knows, right?\" Tim voiced. I thought about it, thinking that maybe someone had seen us together or something, even with how careful Evan had been when we were together. That was always a possibility. But of course, that didn't explain why that person would have wanted to reveal this only now, seeing that whatever evidence he or she had gotten, had to be at least three weeks old. So, why now? Blackmail?\n\nThen I realized what Tim had said. 'No one else in school knows'. While that may be true, there were other people in the world that knew of Evan's supposed sexuality. He had, after all, come out all those years back in Florida. Had one of his old 'friends' come to Bakersfield, only to find out his old gay friend was here and decided to just ruin his life one more time?\n\nI wanted to dismiss the idea because I really didn't want Evan's past to catch up with him, but it seemed the most logical thing and at that point, the only lead I had. With that said, however, I couldn't voice any of this to the guys because, of course, they still didn't know about Evan's baggage.\n\n\"Uh-oh,\" I heard Sam murmur, bringing my attention to her. I saw her looking toward the school entrance so I darted my eyes in that direction, only to see a clearly pissed off Evan trudging towards me, fire in his eyes which were focused directly on me. \n\nI got why he could be angry. Heck, if I had been outed to the entire school before I was ready, I would have been angry too, but his anger seemed to be directed at me. Why, though? \n\nThen it hit me. From Evan's point of view, only a select few people in school knew about his sexual preference and out of all of them, I was the one with the biggest motive to out him. After all, what better suspect than the ex-boyfriend who broke up with him because he wasn't out. That anger was directed at me because he thought that I had been the one to out him. Fuck.\n\n\"Evan,\" I said when he was at arm's length but my sentence was cut short when strong fingers wrapped around my bicep, pulling me back as he made our way to a secluded corner of school. I looked up to the worried eyes of Brian, Sam, and Tim, trying my best to wordlessly tell them to stay back. If Evan was angry with me, I'll deal with him on my own. \n\nOf course, those weren't the only eyes on us. Being the hottest new gossip in school, Evan's appearance would have drawn some form of a crowd, many of whom were now watching as I was dragged off. I could already see the assumptions people were coming up with, thinking that I was indeed the person that had leaked the news. \n\nIt was no secret that Evan had gotten close to me over the past few months and then one day, we just acted like we didn't know each other. To us, we knew the reason for that, obviously, but to the rest of the school, it could have seemed like any other fall out between friends. Again, motive for me to out Evan out of spite.\n\nThe sound of hushed whispers slowly faded as we rounded the corner of the school. The area wasn't exactly the most private of places, but it was far enough from the general school population that we couldn't be seen or heard.\n\nBefore I could even get the chance to say a word, perhaps in an attempt to defend myself from something that I didn't do, I felt Evan's grip on my arm relax. For a split second, I thought I was going to get the chance to explain before his hand moved to my chest, bunching my t-shirt in his fist. I was forcefully pushed against the brick wall of the school behind me, seeing Evan's eyes staring intently into mine, that same fire still burning behind them.\n\nThe five seconds that he stared at me felt like hours, the intensity in his eyes making me feel the need to curl in on myself. \"Evan, I swear I didn't send the text,\" I said, his unwavering gaze making me involuntarily spew words without thought, like some fight-or-flight response. \n\nBefore I could continue with my babbling, I was cut short by the pressed of lips against my own. His lips were the same softness that I remembered, though the hard pressure of his mouth on mine was something I hadn't gotten to experience often. Memories flooded me, reminding me of the countless afternoons we had spent together, the feelings I had for this man bubbling to the surface once again after trying to bury them these past three weeks.\n\nInvoluntarily, my eyelids fell shut as I savored the feel of his lips on mine, my hands instinctively traveling up to wrap around his shoulders. I've missed this, so much. I've missed him. The fist that was gripping my shirt slowly relaxed, now a palm pressed against my chest, pinning me to the wall. His lips moved quickly against mine, a sense of urgency to his actions that made me feel wanted. Something I hadn't felt in a long time, especially coming from Evan. So caught up in the kiss, was I, that I had almost forgotten how we'd gotten to be in that position.\n\nAlmost.\n\nSummoning all the strength in me, I pushed him away, breaking the kiss even though my body wanted to do anything but. Panting, I searched his eyes, his gaze still locked intensely on mine, though I could now see that the intensity wasn't anger, as I had previously thought, but determination. The same determination that I had seen in him countless times before.\n\n\"I've missed doing that,\" he said, also panting as he caught his breath. God, how I've missed hearing his voice.\n\nI chuckled but knew that there were things that we needed to talk about first. Important things. \"I was telling the truth when I said I didn't send the text. I still don't know who did,\" I said, taking a short pause, gauging his reaction before speaking again. \"I'm sorry that this is happening to you.\"\n\n\"I know you didn't,\" he sighed, running the back of his hand across my cheek. \"And don't be. Sorry, that is.\"\n\n\"But this isn't fair to you. We still have to find out who sent that text.\"\n\n\"No, we don't.\"\n\n\"Yes, we do,\" I argued. This couldn't be swept under the carpet like it wasn't a big deal. Outing someone, under any circumstance, is not okay. \"You don't understand. I thought that maybe it could be one of those jerks from Florida or...\" I trailed off, realizing what I had just said. Evan didn't know that I knew most of his past and I had just stupidly revealed that I did.\n\n\"How did you know about that?\" Evan asked, his eyebrows shooting up in surprise.\n\n\"Fuck! I should not have said that,\" I scolded myself, looking anywhere but at Evan, embarrassment filling me. Evan turned my head to face him, though, giving me a look that said 'spill it.' I bit my bottom lip, for a second wondering if I should remain silent, but the way Evan was looking at me made me crack. \"Your father told me, but only because he was worried about you and cares for you a whole lot and\u2014\"\n\nI was abruptly cut off by a finger to my lips. I looked at Evan to see the smallest of smiles grace his lips, my confusion growing by the second. Why should he be happy? I just told him that I was told about his troubled past without his permission, someone was out there trying to ruin his life, and here he was smiling?\n\n\"It's okay,\" he whispered, bringing his lips as close to mine without actually touching me, letting his breath caress my skin instead. \"I'm not mad, at either you or my father. I just wish I could have been the one to tell you, you know?\"\n\nI nodded, still feeling the press of his finger on my lips and I had to force myself not to dart a tongue out to lick it. Talk about creepy.\n\n\"And about the text, you don't have to worry about it.\" I was about to argue but Evan pressed his finger harder against my lips to silence my retort. \"You don't have to worry about it because I sent it.\" Wait, what? I raised an eyebrow at him, showing him my confusion. \n\n\"What do you mean you sent the text?\" I voiced, a stupid question considering that the answer was right in the question itself.\n\n\"That's what you wanted, right? For me to come out?\"\n\n\"No. I mean, yes, that's what I wanted, but...it wasn't your number,\" I said, still trying to wrap my brain around this piece of information.\n\n\"There are apps that mask my number,\" he said, his face dropping in a way that told me he was starting to question what he'd done. \"Did I do something wrong?\"\n\n\"No,\" I reassured, patting him on the shoulder for added effect. \"It's certainly not wrong for you to come out but...did you actually want to do that?\" I wanted to ask if I had pressured him into doing it but I didn't want to sound conceited because, as I frequently remind myself, the world doesn't revolve around me.\n\n\"I want to say yes so badly but I'm not gonna lie, I'm still wondering if I had made a huge mistake by sending that text.\" \n\n\"Then why did you do it?\"\n\n\"I wanted to be with you. I don't want to hide but I'm still scared. That's why I used a fake number, so I could pretend it's just some rumor if I decide to take it back. I figured that would have been easier than taking it back if it came from me personally.\"\n\nTrust Evan to come up with a full-blown plan on coming out. I could understand his fear, though. I mean, from what I could tell, Evan had no intentions of ever letting anyone know that he was gay before he had met me, and four months is quite a short time to go from denial to coming out to the school. \n\n\"You still can, you know? You can just pretend that it's a horrible lie and most people would believe you. The GSA is already readying their pitchforks for this fake person you've put in everyone's mind. People will take your side,\" I said, rubbing my hand up and down his arm affectionately. I had said that and I would have respected whatever decision he would make, but I can't pretend that a part of me wished he wouldn't do that. \n\n\"But I don't want to,\" he said, looking back into my eyes again. I swear, it felt like I had grown wings at that point, suddenly feeling lighter than I had in a long time. \"I really fucking missed you and I think I recall saying that you deserve some happiness too.\"\n\nHe rested his forehead against mine, moving his arms around my waist, hugging me to him like he was scared that I was going to disappear. I wasn't going to, not anywhere in the near future at least. \"Are you sure?\" I asked again, wanting to make sure that he was absolutely ready to come out. To be open with me.\n\n\"You'll be there with me, right?\" he asked. I could tell that he already knew the answer to that but simply needed the confirmation from me. It was stupid because he already knew I loved him so, of course, I'll be with him. \n\nI replied by planting my lips firmly on his again, wrapping my arms tightly around his neck. I guess it's true. You never really appreciate something till you've lost it. I hadn't really felt it these past weeks but feeling Evan in my arms again made me realize just how much I needed the man. Almost like the missing puzzle piece was back in it's place, as clich\u00e9 as that sounds.\n\n\"What made you change your mind? It didn't seem like you were even close to ready before,\" I asked, pulling our lips apart.\n\n\"I may have had someone talk some sense into me. You played a huge role in that too, I guess. You don't even know how lonely I've been these past few weeks. I just want to see you, every freaking day.\"\n\nI smiled, moving in to connect our lips once again in a sweet kiss. \"Do you wanna skip school today?\" Evan asked, breaking the kiss. \n\n\"You? Skip school?\" I asked incredulously. \n\n\"Well, if I'm trying to be a different person, might as well go all out,\" he said, a smirk on his face.\n\n\"Then I accept the offer,\" I said, giving him a quick kiss on the lips before pushing him away from me. \"Don't change too much, though. I quite liked the old Evan.\" \n\n\"Like? I seem to recall someone saying they loved me,\" Evan shot back.\n\n\"I think your memory's failing you,\" I said, walking away and heading back to the parking lot and in turn, back to the possible eyes of the student body. I had brushed off his comment like it wasn't anything, but I can't help but suddenly feel that confessing my feelings for him was a bad idea, especially if he didn't feel the same way.\n\n\"That's too bad,\" Evan called, jogging to catch up with me, standing to my right. \"Because I thought that I might love you too.\" \n\nI stopped in my tracks, looking to Evan as he too stopped, turning to face me. His expression wasn't joking, though, a warm smile on his lips. He had meant it. My earlier regret was washed away in an instant, instead replaced by hope. \"What did you say?\"\n\n\"Well if you don't love me, then I guess I hate you,\" he said, the mischievous glint back in his eyes. My lips slowly curled into a smile as I watched him. I realized then that it didn't matter if I had said it first, or whether he said it at all. It wasn't the words that mattered.\n\n\"I hate you too,\" I replied but continued walking again. Making our way back to the front of the school, I noticed the area devoid of life. I guess the bell had gone off while Evan and I were talking, meaning that most students would already be in class.  \n\nIt wasn't often I'd seen the school look quite so peaceful, and it was satisfying in a way. While I was distracted, I noticed something weave into my hand. Looking down, I saw that it wasn't a something, but someone. Evan had his hand in mine...in public. Sure, there wasn't anyone around, but that didn't mean that a stray pair of eyes couldn't be watching. \n\nMy eyes darted from our interconnected hands back up to Evan, seeing him smiling reassuringly at me. He was really doing this. I returned a smile of my own, squeezing his hand to show him just how much I appreciated what he was doing for me. For us.\n\nI was floating in some strange happiness, my focus solely on Evan. Getting into his car and watching as he drove out of the school parking lot, I was willing to go anywhere with the man. I didn't know where we were going, nor did I care at that point. All that mattered was that I was with Evan.\n\n\"You should probably inform the guys that you won't be in school,\" Evan spoke, breaking me from my reverie.\n\nBlinking a couple times, I nodded, pulling out my phone and shooting a quick text to the gang. \"In case any of you are wondering, I won't be in school today. Brian, could you help me inform the GSA that they don't have to worry about the text anymore. I'll see you guys tomorrow.\"\n\nIt wasn't a second later when I saw the speech bubble with three blinking dots appear on the screen. It stayed there for a couple seconds before a new text showed up, this one from Brian. \"You found out who sent it? Dude, you can't confront him alone. We can be backup.\"",
        "\"What? You found the guy already?\" That one was Mitch.\n\n\"What makes you think it's a guy?\" Melissa said, attacking her twin brother.\n\n\"Shut up, Mel.\" Mitch\n\n\"Dude, Brian's right. We can be backup.\" Jake.\n\n\"Mom's gonna kill me if you don't come home alive.\" Tim.\n\n\"What happened with Evan? You both walked off just now before the bell rang.\" Sam\n\nI shook my head at my friends. It was obvious from the speed of their replies that they were anxiously waiting for a text from me, probably neglecting class in the process, but then again, they probably didn't even need a reason not to pay attention in class.\n\n\"It's a long story. I'll fill you in tomorrow,\" I replied, leaving them hanging. \n\nI pocketed my phone, the little device vibrating with every new text that assaulted it, no doubt protests against my last message. I smirked but otherwise ignored the cell phone. Returning my gaze to Evan, I saw a small grin on his lips, though his eyes were still trained on the road. \n\n\"Why are you smirking?\" I asked, my own smile creeping onto my lips.\n\n\"I'm smirking because you were literally chuckling at your phone just seconds ago,\" he said. At first, I thought it was kinda sweet that my laughter caused him to smile, but Evan quickly put that idea to rest. \"And no, I wasn't being sweet. You looked insane as you fought your smile, all while staring at your phone.\"\n\n\"It was the gang getting all up in my business, as usual,\" I said, slapping him lightly on the arm.\n\n\"Did you tell them?\"\n\n\"Tell them what?\" It wasn't that I didn't know what he was referring to, but what specifically. To be honest, there were a lot of things to tell the gang. \n\n\"That we're...together again?\" he said, though it was worded more like a question than a statement. I could understand his uncertainty, maybe wondering if I was going to change my mind, but I wasn't going anywhere, anytime soon. \"We are back together, right?\"\n\n\"We'll see how tonight goes first,\" I said, winking at him. \n\nEvan groaned just as I realized we had pulled into his garage. It seemed so long ago, even though it had only been three weeks. Cutting off the engine, Evan turned in his seat to face me with what I could tell were his bedroom eyes. My own lust skyrocketed, the way he was looking at me making me hunger for him.\n\n\"We're not doing it in the car,\" I said, although I honestly couldn't tell if it was a warning to Evan, or to myself because god did I want him. \n\n\"Are you sure? We've never done that before,\" he cooed, voice seductive and sultry, leaning over the center console to bring our bodies closer.\n\nI stopped his advance with a hand to his chest, the action itself taking most of the self-control in me. \"How about we head to your bedroom?\" \n\nThat was all it took for Evan to be out of the car, coming over to the passenger side. I just barely got the door open before I was yanked out of my seat and directly into his strong arms. I wasn't used to Evan being so forward and it just made him hotter than I thought possible.\n\nHe grunted before planting a fiery kiss on my lips, the sensation sending my toes curling from the pleasure that shot through my body. Our bodies were pressed together, his arms wrapped protectively around me like he was afraid I would run away. \n\nBreaking the kiss, we shared a brief glance into each other's eyes before I was being pulled into the house, heading in the direction of his room. I was more than willing to follow, so blinded by lust and love that I became oblivious to everything around me. At least, until a feminine voice interrupted us.\n\n\"Evan?\" Carla asked as she rounded the corner. \"Why aren't you in school?\" The second the question left her lips, her eyes trailed down Evan's hand which was intertwined with mine before traveling up to my face. \"Brad?\"\n\nI tried to jerk my hand away, an almost involuntary action after all the months of sneaking around the Trevorrow household, only this time, Evan's hand gripped mine tighter instead of letting go.\n\n\"Sorry, Carla, but can we please keep this between us? My dad will kill me if he finds out I skipped school,\" Evan said. Just a few weeks ago, if we had been caught in such a position, his question would have been fear of telling his father about our relationship. Was this even the same Evan anymore?\n\n\"Oh, no, no, no,\" Carla said, waving her finger at us. For a moment, I feared that this woman who Evan cared deeply for, would be offended by his orientation. That would crush him, especially for someone who just 'came out' not even a day ago. \n\n\"What?\" Evan asked while I braced myself for the fallout.\n\n\"Mijo, you know I can't lie to your father. I get all nervous and he'll know something is up. I'm sure your father would understand if you told him you wanted to spend the day with your boyfriend,\" she said, waving her hands in the air. Well, I guess I was wrong then.\n\n\"Um...okay?\" Evan said, clearly confused as well.\n\n\"Should I give you two some privacy?\" she asked, wiggling her eyebrows at us. She apparently took our silence as consent, because she announced that she was going grocery shopping and conveniently added that she should be gone around two hours. She gave a wink before she quickly hurried off, not even giving us a chance to say anything. \n\nI turned back to Evan, he too unable to comprehend the weirdness of what just happened. \"Your family is full of surprises,\" I said.\n\n\"You're telling me.\" With that, he pulled me along till we were standing in his bedroom. Locking the door behind us, Evan leaned against the panel of wood, hands behind his back as he looked me up and down. \n\nI stood there, letting his eyes wander over me as I did the same to him. He was wearing a white muscle T, the fabric pulled over his pecs that left little to the imagination. Of course, I didn't really need to imagine because I've seen my fair share of that chest. Trailing my eyes down his body, I could almost picture the abs behind the cotton fabric, his torso tapering down to his waist. \n\nHis jeans hung low on his hips, the crotch area looking a little tighter than what should be normal. Evan was aroused, no doubt about that, and I could feel my own erection growing in my pants. Still, my eyes couldn't stray from his package, admiring what I was about to enjoy pleasuring. From the corner of my vision, I saw one veiny hand travel forward, cupping his bulge before he tugged at himself.\n\nFinally, I brought my eyes back up, only to find Evan staring at me with intense eyes, an almost animalistic urge hidden behind them. I gulped, suddenly feeling a lot like a prey in the eyes of a predator. Perhaps he felt it too, because he slowly stalked over to me, eyes never leaving mine. I could only stand rooted to my spot as I anticipated what was to come.\n\nWith each step, Evan closed the distance between our bodies, the air almost pulsating with the tension between us. The way he walked over, eyes never leaving me, almost as if he was prowling, sent my heartbeat racing. The distance closed between us till he was standing right in front of me, feeling his breath caressing my skin, sending little sparks dancing across my body. \n\nA finger traced my lips, so gentle it felt like a feather ghosting across the surface, traveling across my jawline to the back of my neck. Making circles on my neck caused goosebumps to erupt across my skin, radiating from his fingers down to my toes. I moaned, closing my eyes as I relaxed into the feeling, savoring every moment of it.\n\nThe press of soft lips on mine caused more sparks to shoot through my body. I swear, I might as well have been the Energizer bunny with the amount of electricity flowing through me. Evan's tongue brushed against my lower lips, gentle but at the same time, held an authoritative undertone that I hadn't experience from him before. \n\nGladly parting my lips, I allowed him entrance. Having Evan take control was new and like a drug, a taste of it has gotten me addicted. My arms instinctually wrapped themselves around his waist, pulling our lower halves together, our rock-hard erections rubbing against one another through denim. \n\nLeading me backward, I was thrown down onto the mattress, bouncing slightly as I landed on the thick cushions. I looked up to see Evan crawling up my torso, hands running underneath my t-shirt as he ascended, revealing my abs, to which he ran a tongue from my navel all the way up to the base of my neck.\n\nLifting my arms, I allowed Evan to remove the intrusive piece of clothing, tossing it carelessly onto the floor. \"Fuck, you're so hot,\" I moaned, reaching around him to grab his ass, pulling our groins together once again. The sweet friction of our rubbing bulges made my breath shaky, hitching with every brush of our fabric clad cocks.\n\n\"I'm gonna make you scream,\" he whispered, biting down on my earlobe for just a moment before he soothed the pain with gentle caresses of his tongue. By this time, his hands were clawing at my chest, fingertips rubbing against my nipples sending my hips bucking. \n\nMy hands traveled up his back, digging into the skin, making sure to leave my mark. My mark to tell anyone who dared that this man was mine. He hissed as my nails left indentations on his skin, fueling his animalistic desires as he ravaged my mouth once again.\n\nBreaking the kiss, he sat up, allowing me to remove his shirt. Straddling my waist, his hands worked on my belt buckle, fingers moving with dexterity as he easily undid the clasp. \"Fuck. This needs to go,\" he growled, pulling the belt completely from the loops. I had assumed that it would have joined the growing pile of clothes on the floor but instead, Evan looped it around behind my neck, using it to pull me up as he connected our lips once again.\n\nAs our tongues fought for dominance, I took the opportunity to dip my finger under hem of his jeans, past the waistband of his underwear to feel the perfect globes of his tight butt. Remembering how he had enjoyed me playing with his hole the day of the pool party, I ran a tentative finger across his rosebud, feeling muscles twitching in anticipation.\n\n\"Hmmm,\" he moaned, the vibration traveling from his chest into my own. He broke the kiss, tossing the belt to the floor, apparently bored with it already. \"Fuck me,\" he cried, moving to undo his pants. \n\nI grabbed his hands to still him, causing him to look at me in frustration, probably wondering why I was stopping him. I hadn't meant to, but his words hit me like a wave of emotion. Did he just ask me to fuck him? \n\n\"What did you say?\" I asked, trying to confirm if what I heard hadn't been some mistake.\n\n\"I want to feel you inside me,\" he said, repeating the answer albeit in different words. \n\n\"Are you sure?\" I asked. I know that I mentioned that I was a bottom the first time we fucked but I wouldn't complain to switching things up every now and again. I had never told Evan this, though, and he hadn't seemed interested to bottom in the past, so I tried not to think about it. But now, he was asking me to top him. \n\n\"I want to be yours, in every way,\" he said, cupping my face with his hands. \"Make love to me, Brad.\" As if he needed to further convince me that this was what he wanted, he kissed me. Not a passionate make out like before, but a sweet peck that only made my heart swell even further.\n\nIf he wanted me to do this, I needed to take charge. I flipped us over, lying him down on his back as I hovered over him. \"I'll take care of you,\" I whispered, trailing a finger down between his pecs, pass the ridges of his abs and through the treasure trail that led into his jeans. \n\nI didn't break eye contact with him, staring into his brown eyes with my own, trying to show him how much I loved him. I tried to show him how much he meant to me with every action that I took. \n\nUnbuttoning his pants, I pulled away the denim, revealing an engorged dick encased behind tight briefs. I ran my hand over him, stroking the shaft through the cotton, circling the head with light fingers causing him to take in shaky breaths. Sliding down his body, I dipped my fingers into the waistband, pulling his jeans and briefs down in one motion, his dick slapping against his stomach as it was released from its confines.\n\nSoon, Evan lay before me completely naked and I had to take a second to admire him once again, knowing that this man was mine. This hunk of a man was all mine. Looking up to him again, I saw his eyes dart down to my jeans, wordlessly asking me to shed the last of my clothing as well. I was more than happy to oblige.\n\nShucking the last pieces of fabric that separated us, I bent down, breathing hot air onto his throbbing cock. I was just about to lick the pre-cum off his slit when I was pulled upwards. To say I was disappointed was kind of an understatement. \n\n\"No. I won't last if you do that,\" he choked out, explaining why he had rejected my offer of a blowjob. I was surprised but flattered at the same time. I had made him that turned on that a single touch would have made him release?\n\nA mischievous idea popped into my head at that information. \"If you're gonna enjoy what I'm going to do to your ass later, you have to be able to not cum at the slightest touch.\"\n\nHe gave me a confused look, but I gave him no time to ponder my words, immediately dropping down his body and taking him into my mouth. \"Oh, fuck!\" he cursed, his fist grabbing the bed sheets like he would die if he didn't.\n\nI chuckled, the vibrations only making it harder for him to keep his orgasm at bay. \"Hmmm,\" I hummed, causing him to shiver more. I wasn't planning on keeping him on edge and I was going to do everything it took to get him to cum as soon as possible, which wasn't a lot because a few flicks of my tongue across his head and he was screaming my name.\n\n\"Oh, fuck, Brad!\" he shouted, hands moving to my head as he gripped my hair, his dick pulsing in my mouth as he filled me with his load. Keeping my mouth on him the entire time, I swallowed every last bit of his seed, waiting for his shaking to stop before pulling my mouth off. \"God, how are you going to top that,\" he laughed, rubbing the sweat from his eyes.\n\n\"Oh, I'll top that, no problem,\" I said, the double meaning in my words not lost on Evan because he laughed. \"At least now you won't cum the second I touch you.\"\n\n\"Fuck, I'm not even sure if I can cum again tonight,\"\n\n\"Don't worry, you will,\" I said, giving him a sly smile. \"Now, hand me the lube and condoms.\"\n\nAs skeptical as he was, he didn't argue, reaching over to the bedside table to retrieve the bottle of lube as well as a condom. I took the lube first, leaving the condom by the side of the bed, squirting a generous amount onto my fingers.\n\nRubbing my fingers together to warm up the gel, I looked up at Evan. Following the release of some of his pent up sexual tension, I could see the trepidation in his eyes as he watched my fingers, a dread that wasn't there when he was in the troughs of lust. I was sure it wasn't the fingers that scared him because I'd fingered him before and he seemed to enjoy it. That being said, however, it wasn't a prelude to the main event of my dick the last time, so I could understand his fear. \"It's okay if you don't want to do this, you know? I'm perfectly happy to pleasure you in other ways.\"\n\n\"No, I can do this,\" he said, swallowing the saliva in his mouth before meeting my eyes. \"I want to do this.\"\n\n\"Just relax,\" I told him, lowering my fingers to his ass. \"You've done this before.\" He took a deep breath and I slid a finger in, the digit slipping past the sphincter easily. His dick was already starting to harden again so I knew that this felt at least a little bit good to him. \"See, that isn't so bad.\" He glared at me for that comment, though. Okay, noted. Don't talk to him like a child.\n\nTwisting my fingers around, I felt him loosening around me, moving to push in a second one. This time he winced a little, his ass clenching slightly as his body fought to remove the foreign object. I stayed still, letting him adjust to the feeling, occasionally feeling for his prostate. \n\n\"You okay?\" I asked, knowing that the most he had ever taken was one finger. He nodded his head and I took that as a sign that I could make this feel a little better. I search for the spot that would make him writhe in pleasure. It wasn't hard to know when I found it because Evan cursed out when I did. I smiled, continuing to pleasure him while scissoring him open, getting him ready for the real MVP. \n\nThe third finger entered with less resistance, his increased arousal from having his button massaged relaxing him further. I was basically fucking him with three fingers when I decided that he was as ready as he'll ever be.\n\nPulling my fingers from him, I thought I heard a whimper from him although I said nothing about it. I put on the condom, making sure that I thoroughly coated the hard member with lube. Once prepped, I looked up at Evan one last time, giving him the last opportunity to back out of this. His lusty eyes told me he wasn't going to do that.\n\nNow, it was my turn to be nervous. I'd topped my fair share of people in the past, but most of them weren't first-time bottoms. Plus, none of them was someone I was in love with. What if I didn't do it right, or if I hurt him? \n\nAs if sensing my fears, Evan's hand came up to cup my cheek, bringing my eyes up to his. \"It's okay,\" he said.\n\nI nodded, swallowing my nerves and positioning myself at his entrance. Pushing in slowly, I felt the pressure surrounding me as his body tried to take me in. I could tell that Evan was in pain although he was forcing himself not to wince. Try as he might, though, his grimace wasn't easily hidden.\n\nI eased up, pulling away slightly as I allowed Evan to catch his breath. I tried again when he nodded, pushing forward. This time, I slipped past, a gasp following as I breached his hole. I stayed completely still, not wanting to hurt Evan while at the same time enduring the excruciating torture of having his tight ass constricting around me and being unable to move.\n\nI am ashamed to say that I couldn't wait till Evan fully recovered before moving again, pushing slowly in even though he was still adjusting, though I did move extremely slowly. If Evan thought anything about this, he didn't say. \n\nSoon, I was in all the way to the hilt, my thighs touching the back of his. I took a few quick breaths, steadying myself. Underneath me, however, Evan was panting profusely. I reach a hand out to weave it with his. \"Are you okay?\"\n\n\"Yeah, just really full right now,\" he muttered, still not completely comfortable just yet.\n\n\"Yeah, that's how it usually goes,\" I chuckled.\n\n\"Does it always hurt like this?\"\n\n\"No. It's your first time and I'm not exactly a beginner's model,\" I said.\n\nEvan chuckled, although it was slightly strained. \"Now is not the time for dick jokes,\" \n\n\"It's always the time for dick jokes,\" I said, causing Evan to chuckle again. I leaned down, careful not to move my lower body, bringing my lips to his. I hoped that kissing him was helping take his mind off the pain. After all, it helped for my first time. \n\nIt was apparently working because I slowly felt Evan loosen around me. He was still fucking tight, but less so than before. \"You can move,\" Evan said, telling me what I was waiting to hear.\n\nPulling out, I tried holding back the moan that wanted to come out, his ass like a vice on my dick. With only the head left inside, I pushed back in, producing a rhythm of slow pushes and pulls. Angling myself, I tried to brush his prostate with each thrust, wanting to bring Evan as much pleasure as physically possible.\n\n\"Oh, yeah,\" Evan cried out, telling me that I had found his spot. \n\n\"You like that?\" I asked, increasing my speed just a little.\n\n\"Yeah. Faster,\" he commanded. I smirked, once again increasing the speed of my thrusts. Bending forward, I sucked at his neck, planting light bites and kisses on his neck, sure that I was going to leave some marks that would be difficult to hide. That wasn't something I was concerned about at the time, though.",
        "Reaching down, I gripped his dick in my hands, pumping him in time to my thrusts. \"Oh, fuck yeah.\" he cried.\n\n\"You like that, baby?\"\n\n\"Yes. Don't stop, babe.\"\n\nFor a first timer, Evan was definitely a natural. He knew all the ways to squeeze me that made it very difficult to keep my orgasm at bay. With every thrust, I could feel the feeling building in my balls, reaching for the edge to the point of no return.\n\n\"I'm close,\" I choked out.\n\n\"Me too.\"\n\nI increased my speed, jabbing at his prostate over and over again, his passage squeezing me with each thrust. My hands pumped at his cock, bringing him closer to his orgasm as well. With one final thrust, I came, filling the condom with my seed. At the exact same moment, Evan's orgasm hit him, his ass clenching down hard around me, his cum spilling from his dick as he coated his chest with his semen. \n\nWith an orgasm so intense, strength left my muscles as I collapsed forward, having just enough strength to not crush Evan underneath me. We were both panting hard like we'd just run marathons, though I can say that what we just did was more fun than any marathon. \n\nI looked into Evan's eyes, seeing contentment in them, a reflection of my own satisfaction. I cracked a side smile at him, bringing my hand up, seeing his seed coating the back of it. \"I'd say you definitely came again tonight,\"\n\n\"Holy shit,\" he panted. \"I've never came twice like that before.\"\n\n\"Well, the pleasures of bottoming,\" I laughed. Evan joined me, wrapping his arms around my neck to pull me down to him, resting my head in the crook of his neck. We stayed like that, my dick still in his ass as we just lay there, listening to the sound of each other's heartbeat and breaths.\n\n\"I love you,\" he said, causing me to look up at him. \"In case it wasn't clear earlier today.\"\n\n\"It was,\" I replied, returning my head to its spot by his neck. \"I love you, too.\"\n\nIn the end, I guess maybe my story was a little clich\u00e9. Sure, it wasn't the perfect boring romance but maybe that's a good thing. It was a difficult journey, sure, but the end is so worth it. \n\nBesides, who wants a boring romance anyway.\n\n\u2014\u2014\u2014THE END\u2014\u2014\u2014\n\nA/N: That's it I guess. I hope you guys enjoyed reading this story as much as I enjoyed writing it. I am planning to write a sequel to this story which would be Evan's POV. It would occur at the same time as this story, though not all scenes would be mirrors of each other. Is that something you guys would be keen on?\n\nOnce again, I'd like to thank my editor Y0rite for helping me iron out the kinks in this story. \n\nAs always, I would love to hear your feedback. Love it? Hate it? Till next time. Peace out."
    ],
    "authorname": "musicfreak",
    "tags": [
        "gay romance",
        "high school",
        "football player",
        "jock",
        "nerd",
        "coming out",
        "young love",
        "friends",
        "love",
        "hunk"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/its-too-cliche-right-ch-12"
}