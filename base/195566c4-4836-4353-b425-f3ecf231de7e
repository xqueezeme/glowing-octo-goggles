{
    "title": "The Doctor's Casebook Pt. 02 Ch. 03",
    "pages": [
        "The Case Files of Dr. Randall Herringwick\n\nThe Case of the Melting Sister\n\nChapter Three - Two for the Price of One\n\nCASE FILES - PERSONAL NOTES - PATIENTS 53 & 54 - DAY 1 (CONTINUED)\n\nAs I drove toward Joe's apartment, I took Sherrie even deeper into trance, and twice more, I had her envision an encounter in which he tried so impotently to wrest control away from me. In each case, she reacted by laughing louder and longer than she had before. For many minutes during that drive, however, I was silent, as I tried to imagine how I would play my own part in this little production. (Isn't it odd how far astray our carefully rehearsed plans can go when they encouter reality?) By sheer luck, I found a parking space right in front of the building, and I led her inside and up the stairs. I had timed it to perfection. Joe had evidently just gotten home to an empty apartment, and he was purple with rage as he jerked open the door to my firm knock.\n\nLooking back at what transpired, with the exception of Sherrie's part in my little scheme, absolutely nothing went as I had imagined it would. As for good old Joe himself, I had assumed a sort of gangling, geeky sort of fellow that was a bit of a bumbling idiot, at least where hypnosis was concerned. In point of fact, however, was just about everything I despise in a human being. He was a gruff, swaggering bully that relied on his tall, muscular body and his abrasive personality to intimidate those around him. He was still dressed in a white shirt and a black tie that had the logo of a downtown department store embossed on it. He had a \"high and tight\" haircut that sort of gave him a military look, but his demeanor would never have allowed him the ability to exist in a regimented environment. His green eyes flared as he used the back of his right forearm to shove me roughly aside and grab Sherrie by the forearm. I hit the doorframe hard, then stumbled awkwardly into the living room as the girl's body was pulled past me and inside.\n\n\"You goddamned slut!\" he screeched. \"Where have you been? Where's the other one? Who the hell is this bozo?\" He slapped her hard across her left cheek, making her sway back in his grasp. He glared at me, but then gave me the small satisfaction of exhibiting a little confusion at Sherrie's expression. Despite the flaming red cheek, she was smiling up at him, almost expectantly. \"What the fuck is the matter with you, bitch?\" he screamed. \"Answer me!\" He raised his hand to strike her again.\n\nI don't really remember advancing toward him. I mean, the guy had at least four or five inches on me, and probably fifty pounds. I reached up and grabbed his wrist. \"That's enough of that, Mr. Cromp,\" I said louder than I had wanted.\n\nHe turned his attention to me with a glare of pure hate, obviously believing that sheer malevolence would be enough to deal with me. When that didn't work, he wrenched his arm free with little effort, balling his hand into a fist, but unable to bring that weapon to bear because of the proximity of the girl between us. \"Who the fuck are you?\" he growled. \"What did you do to her?\"\n\n\"I'm her doctor,\" I responded, trying to make it sound offhand. \"Now, let the girl go, and we'll talk about this.\"\n\n\"Fuck off!\" he responded. Since he wasn't in a position to take a swing at me, he put a palm on my chest and pushed hard, sending me staggering backwards. Then he turned his attention back to Sherrie. She, in turn, simply smiled up at him, obviously hoping that he'd say or do something further. \"Listen ... bitch!\" he snarled, and it dawned on me that he had wanted to use her name, but hadn't know which one she was. \"What the shit's gotten into you?\" Again, he seemed flustered that she wasn't cowering or begging. In fact, she was actually leaning forward in obvious anticipation. \"Rocky Mountain oysters!\" he said distinctly.\n\nAnd Sherrie dissolved into utter, uncontrollable, uproarious peals of laughter. So shocked was Joe by this reaction, that he let go of her arm, and she sank to her knees amid peels of hysterical mirth.\n\n\"What the goddamned fuck did you do to her?\" Joe hissed above the ringing giggles. He glared at me for long seconds, then purposefully began backing up, away from me. He pointed a threatening finger. \"You are trespassing!\" he said, his rage barely contained. It took me a second to see where this was all about to go. Hanging on the wall behind him was a large plaque displaying a Boston Red Sox logo. A baseball was perched on a stubby Formica stand, and it was autographed by somebody in a scrawl of blue ink. Below the plaque hung a baseball bat between two hooks.\n\n\"Sherrie!\" I cried. \"Stop! Come to me now!\" In less than five seconds, she had stopped her laughter and stood next to me expectantly. \"Go down to the car. Wait for me there. Go now!\"\n\n\"Yes, doctor,\" she said clearly, and she immediately walked to the still-open door.\n\n\"Don't you fuckin' dare, you bitch!\" Joe screamed. \"Stop, dammit!\" But she was already gone. The door made a decisive sound of finality as it slammed. The bat was in his hands now, and he advanced toward me. \"I am going to fucking kill you!\"\n\nI stood my ground. \"You dumbshit,\" I told him flatly, and he paused, regarding me. \"Don't you know your two hypnotic slaves' names?\"\n\nHe stood about eight feet away from me, regarding me with a sneer. \"What the fuck do I care?\" He started slapping the end of the bat into his open palm and looked tough, though I could tell that I'd flustered him a little.\n\n\"The one that's not here; her name's Merrie Russo. Ring any bells?\"\n\n\"No. Should it?\"\n\n\"Russo. You can find it in the dictionary somewhere between 'L' and 'M.' That's 'L\" for La Cosa Nostra; and 'M' for Mafia. She's Bryon Russo's wife, and she's in the hospital. She tried to kill herself with sleeping pills.\"\n\n\"What?\" He stopped playing with the bat and let it hang at his side. \"Now, wait a minute. I didn't do that. I only gave the broad what she wanted. I swear, I only treated her with respect.\"\n\n\"Yes,\" I said levelly. \"Respect. I saw the bruises.\"\n\n\"No,\" he protested. \" Honest. I have this talent, see? I hypnotize girls, and they love it, I swear. They beg me to do it. No kidding.\"\n\n\"Damn amateur,\" I grumbled. It wasn't worth my time to explain. I looked at him, and I realized that I truly hated this man. What he had done to those two girls could not go unpunished. \"I promised Mr. Russo that I'd eliminate the treat,\" I continued. \"It's time to do that now.\" His eyes went wide.\n\nI had practiced just once earlier, outside my office, after I had gotten back from my little errand, just before I returned to Sherrie while she was listening to my recorded hypnosis session. And now, in that apartment, it almost seemed nature. I reached under my left lapel with my right hand and I unsnapped the holster strap with the back of my thumb; then I drew the Ruger Security 9 and pointed it at the center of Joe's chest. Oddly, Joe wasn't really looking at the gun at all, except for a brief glance. His eyes were fixed firmly on mine. With a loud clatter, the bat hit the tiled floor, and both of his hands were extended in front of him, palms forward.\n\n\"Wait!\" he said. There was a look in his eyes unlike anything I'd ever witnessed. I would like to have studied it. Professionally, that is. But instead, I pulled the trigger.\n\nNow, when a person loses consciousness, he will fall in whichever direction he happens to be leaning at the moment. Most people fall forward, simply because when we are standing upright, we balance close to our heels, but maintain control by leaning toward the balls of our feet. But in this particular case, Joe fell straight down. His knees sort of splayed apart, and his legs twisted him around half a turn. His butt hit his heels, he bounced back up a little, and he toppled left onto his back, his head hitting the floor hard. I looked down on him dispassionately, observing the puddle growing steadily underneath his sprawled, limp body; and several disturbing thoughts ran through my head. I'm not sure why, but as I thought them, I walked calmly toward the bathroom, the gun clutched in my right hand.\n\nOne: Why the hell had I pulled the trigger? I hadn't meant to, certainly. Had I? I mean, I couldn't deny the amount of hatred I had toward the man ... probably more than I'd ever felt toward any other person. And, don't get me wrong ... I have hated before. There was a man who, five or six years before, had stolen a woman away that I loved dearly. Well ... that's not quite accurate. Actually, it was I who was trying to steal the woman away from him. But that's rather beside the point. The truth of the matter is, I had hated him. But not as much as I hated dear old Joe, who was now lying there in the living room. But I hadn't meant to, I swear. And that brings us to number:\n\nTwo: If that was the case ... if I was so impulsive as to do something like that, how far gone was I into the maw of madness? I mean, let's face it: all of this falderal about being a mad evil doctor ... do you think I've just been kidding about that? Did you think I was really sane? And if I was, indeed, mad: it must be an observable phenomenon. He had certainly seen something, hadn't he? By the startled expression he had when he'd looked into my eyes, he'd seen something that scared the bejesus out of him. I mean, it had been so compelling that he couldn't even look into the barrel of that loaded gun. I gazed into the bathroom mirror now, but the eyes that were looking back at me appeared just as they always had. So ... the action had been calculated ... it must have been. Otherwise:\n\nThree: Why had I purchased the gun? I looked down at it now, lying pointed toward my left, in the palm of my right hand. All it had taken was a quick web search on my computer, followed by a phone call and then writing a check for seven hundred dollars. Easy. Simple. For you readers out there who live beyond the boundaries of the United States (and some who do live here), that might not seem quite ... right. I mean, there are laws that restrict access to guns (registration, background checks and whatnot). But those only apply when you purchase something through retail gun stores. Go beyond that venue, and there are no restrictions. None. Zippo. And that pertains to madmen purchasing guns. All very legal. Oh yes, I was in violation of concealed carry laws by wearing the holster and handgun beneath my jacket; but, of course, if no officer of the law stopped me and asked to see a permit, I had no problem. Of course, all of that is neither here nor there. It's all superfluous. The question remains: if I hadn't figured on USING the gun, why the hell had I bought it? And if I had planned to use it, it was only logical that I would pull the trigger. I mean, I had never owned a gun before ... and I had never used one. But everybody knows the principal of the thing. If you want the bullet to kill somebody, you point it and you pull the trigger. And that brought us to our final question:\n\nFour: Why hadn't the gun fired? I'd done everything the guy that sold it to me said I should do, right? I'd even practiced drawing it from the holster. But when I pulled it, the trigger hadn't even budged. Not one little bit. It was as if it had been jammed mechanically in the forward position, and no amount of pull was going to make it move, not even a smidgeon.\n\nAnd then I figured it out. It was that little flippy lever thingy above of the rear part of the trigger guard. Oh, yes ... the guy had specifically pointed that out. The safety switch thing. He'd even had a little something to say about it. Flip it down, so the red dot shows, and it fires. Flip it up, the gun was safe. Huh. It even had a little \"S\" showing, now that I looked at it. I used my right thumb and flipped the switch up and down a couple times. It all made perfect sense. There was no need to fire it now, of course; so, I put the switch back down again.\n\n(You know ... I think I might have misled the reader about something earlier. Back there about four or five paragraphs ago ... when I told you about pulling that trigger. I think I might have left out the part about the gun not firing. Sorry about that. I was accurate in my description, though. Good old Joe had seen something in my eyes; and whatever it was, it had caused him to faint dead away (if you'll pardon the pun). Ah ... and that growing puddle beneath him? He'd lost control of his bladder. Once again, sorry about not being more specific; but it simply wasn't germane to what I was feeling at the moment ... that being numbers one through three, above. Those were the real problems here. Number four was just sort of an add-on conundrum. And I STILL hadn't figured all of it out. Oh well.)\n\nI filled a glass with water from the sink, and I went back to the living room, where Joe remained stretched out on the cold floor. Slowly, I poured the contents of the glass onto his face from an altitude of four feet; and after about ten ounces, he came to sputtering consciousness. He blinked several times before his eyes locked onto my face and he regained that strange scared-as-shit countenance. Rather than passing out again, however, he jerked himself into a sitting position, then used the heels of both feet to scoot himself backwards, away from me, before coming to a thudding stop against the wall, directly below the plaque, where the baseball bat had once been. The baseball fell and hit him perfectly in the center of the top of his head, which, looking back on it, probably should have been classified as one of the funniest things I'd ever seen in my life; but he didn't even crack a smile, and neither did I. I walked quietly toward him while he continued to work his feet ineffectually in an attempt to escape me, but he finally fell still, shivering, while I squatted in front of him, facing him.\n\nI used the gun offhandedly for emphasis, gesturing with it, as if I'd forgotten that it was even there. \"Joe,\" I told him sincerely, \"we need to talk. I think that maybe you misinterpreted me. You see, when I said that I intended to eliminate the threat, I meant to give you a choice. In two hours, you will no longer live in Providence, Rhode Island. And by that, I mean that if you are still IN Providence, Rhode Island, you will no longer be alive. And also, by that, I mean that if you ARE still alive, it is only because you are outside the city limits. And, if you ever ... ever ... come back to this city ... or, of course, anywhere else near either of those two women, ever again ... I will make certain that your life ends. Do you understand these options as I've explained them to you, Joe?\"\n\nJoe's mouth opened and closed a few times. \"Yes,\" he croaked, finally.\n\n\"Any questions?\"\n\n\"No,\" he said as I stood up. \"I mean ... yes ... sir,\" he spoke up quickly. I graced him with a questioning expression. \"Um ... where else might the girls be?\" he stuttered. Now, I let my expression change. He held up his hands, defensively. \"I mean ... if I'm going to avoid them ... where shouldn't I go?\"\n\n\"Ah.\" I nodded. \"I'd avoid Chicago, New York, Boston and the entirety of New Jersey,\" I told him. \"The Russo family has ... um ... business interests there. Any other questions?\"\n\n\"No sir,\" he said distinctly. Then, for the first time, he seemed to notice the dampness between his legs. He touched himself there, raised his hand and sniffed his fingers. \"Oh no,\" he mumbled. \"Oh shit.\"\n\nI turned toward the door. \"When you leave, you might get the impression that you're being followed. There will be a very good reason for that feeling. The sensation might stick with you for a while. But ... as long as you're travelling away from here, you won't be harmed.\" I paused and turned back to him. \"You do own a car, don't you?\"\n\n\"Y ... yes.\"\n\nAs nonchalantly as I knew how, I holstered the automatic and hoped that I looked at least a little like I knew what I was doing. I opened the door, then paused to look back over my shoulder at him. \"I won't have your bank accounts suspended for twenty-four hours. Draw out what money you have quickly.\" I tried to give him a look of hatred; but suddenly, I found him only pathetic. \"Do you have any idea just how lucky you are, Joe?\"\n\nHe responded to that, but I didn't hear it ... only the slam of the door behind me. As I walked down the stairs, I looked at my hands. Funny ... a few minutes ago, they had been shaking, but when I started talking to Joe, they'd steadied right out. I shrugged it off and continued to my car. Sherrie looked up at me as I opened my driver's side door, and she started to ask me something, but I held up a finger to hush her; then I took out my cell phone and hit the number for a contact. I knew it would be answered, despite the lateness of the afternoon.\n\n\"Yes, doctor, what can I do for you?\" a man answered. Of course, they would have their caller ID personalized for their business contacts.\n\n\"Do you know that apartment you found for me yesterday?\" I asked.\n\n\"Mr. Cromp on Spruce Street?\"\n\n\"Yes, that's the one. Mr. Cromp will not be remaining long in our fair city. In point of fact, he will be leaving in about an hour. I would like to have him followed ... just to make sure he makes the trip safely.\"\n\n\"Hmm. I assume that he will be driving his ...\" I heard the tapping of a computer keyboard in the background. \"... green 1995 Lincoln.\"\n\nI smiled. \"I don't know the make of car, but that ... sounds about right. I would also appreciate it if Mr. Cromp knew he was being followed. Could you arrange that?\"\n\nThere was a long pause. \"Doctor, you haven't been a client of ours for very long. May I ask why you have pressured this man to leave Providence?\"\n\nI considered this. \"He harassed two patients of mine. One is the wife of a friend.\"\n\n\"And this friend, doctor ... would it happen to be Bryon Russo?\"\n\nI took a breath. \"Holy shit. You guys really are on top of things.\"\n\n\"It is ... um ... healthy to keep track of one's competitors, doctor. Bryon Russo is not deeply involved in his family's businesses, but we wouldn't want it to appear that we were ... interfering in their affairs.\"\n\n\"I guarantee you that I am authorized to act on Mr. Russo's behalf,\" I told the man.\n\nThere was another pause. \"Very well, doctor. We will make sure that Mr. Cromp is properly escorted out of the city. Further, we will let you know where his travels take him. After awhile, he will discover that tracking devices have been planted in his car and personal effects.\"\n\n\"That sounds ... um ... more than adequate. Please send me a bill for your services.\"\n\n\"This one's on the house, doctor. We will contact Mr. Russo and let him know that we have acted on your behalf. We find it ... advantageous to perform mutual professional services from time to time. Oh, and doctor ... we have the final report on the woman in Washington for you. We'll send it to your office tomorrow by messenger.\"\n\n\"Thank you,\" I told him. \"Goodbye.\"\n\nI turned toward the girl and was a little surprised to notice that her level of trance appeared as deep as it had been during our lunch date. \"Sherrie, I'd like you to close your eyes for me again, please. Thank you. And now, take a deep breath and go even deeper than you are now. Yes, that's it. Very good. Now, tell me please, how deep are you?\"\n\n\"I am deeper than I've ever been before, doctor. I think I am as deep as I can go.\"\n\n\"Very good. And now, Sherrie, I am going to tell you something that you must accept as absolute truth. It is the truth, and you must realize that. I have taken all control that Joe Cromp has over you and Merrie, and I have completely eliminated it. It no longer exists. He has no hold over you, and he will be unable to hypnotize you, ever again. His control has vanished ... now and forever. Do you understand this? Do you know it to be true?\"\n",
        "\"Yes, doctor. Joe will never hypnotize me again. He has no control over me.\"\n\n\"I am going to count to three, Sherrie. And when you hear me say three, you will awaken, feeling better than you have in a long, long time. You will feel wonderful, and you will remember everything that has happened to you while you have been under my control ... everything you have said, and everything that I have told you. You will remember and understand what I've done to you, and what I've made you do. You will remember everything. But above all else, you will know, absolutely and with total certainty, that Joe Cromp's hold over you has been broken forever. Do you understand?\"\n\nShe was smiling now. \"Yes, doctor.\"\n\n\"One two three. Fully awake, now. Happy and content.\"\n\nShe threw herself at me, hugging me around the neck, despite the obstacles between us, including the car's emergency brake. I felt tears on the side of my neck. \"Oh, doctor! Oh, thank you, doctor!\" She suddenly stiffened and drew away. \"We have to tell Merrie! We have to go to her, and you have to make her understand, too! You have to tell her that it's all over!\"\n\nI reached over and took her hand. \"She'll be alright for tonight,\" I told her. I gave her hand a little squeeze, then let go and started the car. \"Bryon will protect her. It will give him a chance to feel that he's is once again in charge of her safety.\" I checked traffic and pulled away from the curb. \"And ... it will give our friend, Mr. Cromp, the time he needs to get away. I suppose I owe him that.\"\n\nShe reached over and put a hand on my arm. \"Doctor, what's wrong?\"\n\nI shrugged. \"Nothing. I'm fine.\"\n\nNow she was gripping my arm with her hand. \"That's the first lie you've told me today. Something is wrong! Something happened while you were in there! Did he do something to you?\"\n\n\"No ... he didn't do anything to me! I did it to myself!\" I took a deep breath. My hands were shaking again. \"I ... I think I need to talk to someone about it.\" I stole a peek at her. \"I don't think you can fully comprehend.\"\n\nShe sat back and smiled. \"I think you'd be surprised by how much I can comprehend. And ... I know how to make you tell me. You won't believe how much a man tells a melted woman after she makes him melt, as well. Whatever has caused you this pain, we can find it. And ... once you know what it is, you can get rid of it.\"\n\nI suddenly perked up. \"Get rid of it,\" I muttered, nodding. I checked behind me, changed lanes, turned right, then right again, heading back toward the east. Sherrie didn't comment further, but settled back into the bucket seat, fastened her seat belt, and regarded me as I guided the car down West Exchange to Memorial Boulevard. I worked my coat off at a stop light, then untangled myself from the unfamiliar shoulder holster, and I laid it and the weapon in Sherrie's lap. She recoiled slightly, but said nothing.\n\nMemorial runs along the Providence River, and there's a little park there where lovers go to walk hand in hand and watch the ducks. This time of year, it often sports a thick layer of ice. But this had been an almost unparalleled warm winter; and while the wind across the water could be biting, there was no ice. I parked, snatched the gun from Sherrie's unresisting fingers, got out and walked toward the water. Holding the thing by the end of the leather strap, uncaring who saw me, I spun around like an Olympic hammer-thrower; once, twice, then let it go and watched it sail out, out over the cold water in a gentle parabolic path that ended in a satisfying splash. I didn't wait for the ripples to ebb, but spun on my heel and returned to the car, where I sat and looked earnestly into the pretty girl's eyes.\n\n\"You would not believe what I almost did with that thing,\" I told her. Somehow, I got the impression that I was pleading with her.\n\n\"It's gone now,\" she said softly.\n\nI took a ragged breath. \"I just wasted seven hundred dollars.\"\n\n\"Do you think, maybe, it was a small price to pay for the lesson you learned?\"\n\n\"Sherrie, I ...\"\n\nShe laid a hand on my arm again. \"Yes, doctor. Please take me to your place now.\"\n\nShe didn't say another word all the way there; nor did she say anything as she followed me to my door, nor as she waited for me to unlock it. But after we were inside, she stepped closer to me, until we were almost touching. I stood, looking down at her questioningly, achingly; and when I had let too many seconds go by, she stepped closer still, until her breasts were pressing into my lower chest, her thighs were touching mine, her belly was brushing against the overly-sensitive bulge in the front of my trousers. I let my arms snake around her, and she made a strange little sound as I pulled her in tight, her face gazing up at me expectantly. The sound came again, the pitch higher, as I slowly, slowly lowered my lips toward hers; and she was like a small dog, longing to be petted, whining softly.\n\nWell, I guess this is where I'm supposed to describe her as she melted. All I can say definitively is that that is the word which most appropriately depicts exactly what happened. Her arms came up and around my neck, clutching me furiously; but then they seemed to lose their strength, and after almost a full minute, they were hanging limply at her sides while I supported her entire weight in my arms, her back arched, her body limp in complete surrender to the kiss. This was not an entirely pleasing turn of events, since one of my hands had busied itself with her sides, her back, her hair, her neck, and finally her breasts and the nipples that had hardened into prominently protruding extensions thereof.\n\nI had to quit my groping in order to keep her from dribbling into a puddle of desire at my feet, and I had to use both hands to hold onto her. Fed up with this, I hoisted her into my arms, carried her down the hall to my apartment, and then into the bedroom, where I tossed her onto the bed and started undoing her clothing. She offered no resistance, but little help, either; and when I stood back to take care of my own clothes, she watched through almost dopey eyes, interested, but resigned to the overwhelming influence of both my passion and her own. I decided to draw it out a bit, taking my time with my tie, my coat, my shirt; and she finally sat up, impatient; watching me, and especially my crotch.\n\n\"No one respects me for my mind,\" I grumbled. \"They only want me for my body!\" And she burst into a fit of giggles, jumped up and started tearing at my remaining clothing. Finally, completely nude, I took her again in my arms and kissed her. Her body felt heavenly against my own. This time, she kept her arms around my neck, and when I came up for air, she panted for several seconds, then sighed deeply and laughed again.\n\n\"I've never kissed a man with a mustache,\" she confessed in a whisper. \"It's actually sort of wonderful.\" And to illustrate the point, she proceeded to explore my mouth with hers. Finally, she started sinking again; but rather than put up with further physical support issues, I lowered her onto the surface of the bed and began making an explorer out of my own mouth. Her skin tasted very faintly of salt and body powder, especially just under her breasts and down her sides and tummy, which I discovered were sensitive and ticklish. Her vagina was secreting heavily, but she tasted surprisingly clean, though her aroma was strong. Almost at once, she was on the verge of orgasm, and her body was straining up at me, like an overly taught spring. But I denied her the satisfaction of easy release, and I spun her over using one of her spread legs, so that she was face down. Using my left arm below her, under her waist, I pulled her upward onto her hands and knees; then I grabbed two pillows from the top of the bed with my right hand and stuffed them under her. Finally, working my way between her knees, I used the palm of my hand to push her head down, which elevated her ass toward me.\n\nShe seemed completely resigned to this, though she had whined shrilly when I had removed my lips and tongue from her lower regions before she could reach her peak. I got the impression that she was used to men taking their pleasures from her body without the trouble of reciprocation. \"Reach back and guide me into you,\" I ordered sternly, and she did so without hesitation. It was the first time she had touched me there, and I was more than ready for the contact, groaning deeply as she did so.\n\nBut as soon as the tip was in, I moved her hand away and leaned forward heavily so that the side of her face was pressed against the surface of the bed. She raised her forearms up beside her head to relieve the pressure of my weight, while I pushed as far into her as I could, eliciting an \"OH!\" on her part, followed by a loud moan. I pounded fast and hard into her, once, twice, three times, and then I paused, holding still while she panted. Next, I snaked my left arm back under her waist and slowly slid it down until my hand was cupping the top of her sex. At the same time, I took her right breast in my right hand and mauled it with my palm, pulling her up toward me off of the surface of the bed so that I could reach her nipple with my grasping, pinching fingers. Again she cried out, but now she also shivered uncontrollably.\n\nIt had been a long, long time since I had done this with a woman (though ... I must confess ... the girl who was my last \"mad doctor\" patient had satisfied me orally on several occasions). I very quickly realized that I was right on the cusp of orgasm. Still, I'm a relatively decent judge of what's happening to a girl physically while in the throes of sexual fervor, and so I was able to control the reactions of both bodies ... hers and mine ... as I progressed; thrusting quick and hard for several strokes, then petting her clitoris, pinching her nipples, squeezing her breast, thrusting again. And then, at the precise moment I felt her body snap in orgasm, like a twig in a strong wind, I released my own control and joined her in panting, shuddering, screaming bliss.\n\nWe toppled over onto our sides, but she rolled back toward me, holding me, still shaking and groaning, and we were a gasping tangle of quivering arms and legs. Somehow, she was crying softly, which made me self conscious and uneasy, though she seemed to be trying to get closer to me, rather than farther away. \"I ... I've never cum during sex before,\" she said quietly. \"I mean, not with a man. I mean, not with a man inside me. Do you know what I mean?\"\n\n\"Yes,\" said, and I rolled onto my back and drew her closer, so that her head was on my shoulder. We were quiet then for a long time. Outside, the sky had grown dark and we could hear the wind picking up. \"Sherrie ...\" I sought the right words.\n\n\"I know,\" she said softly. She put a hand on my chest tenderly. \"I know. And ... I want you to tell me. I'm listening. I'll listen for as long as you need me to.\"\n\nAnd so ... I told her. I told her everything ... from the beginning all the way up until that moment. I told her about my previous life in Seattle. I told her about Loretta. Oh God, I told her all about Loretta. I told her about how I had built a new life, rising like a phoenix from the ashes, only to slip into the weird profession provided by my madness. And, I told her about all my uncertainties and the perceived horrors that I now worried I might be capable of perpetrating. I unburdened myself completely ... the classic \"psychiatrist on the couch talking to the patient\" caricature. After the first hour of this, we paused and ordered a pizza, then ate it at the kitchen table in bathrobes; me talking ... her listening. And, after awhile, she took my hand and led me back to bed.\n\nI was able to last longer this time, and there was no urgent need for rutting or pounding. We kissed and cuddled, touched and petted, stroked and pinched and caressed, tasted and nibbled and sucked. I took her from above, missionary style; then rolled us over so that she could sit, impaled, above me. And, once again, I was able to touch her and finger her nipples and clitoris, guiding her steadily upward until we both peaked. She slept in my arms, and we coupled again in the morning.\n\nCASE FILES - PERSONAL NOTES - PATIENTS 53 & 54 - DAY 2\n\n\"You've done this to me,\" she accused, snuggling into me afterwards. \"You used me, then you controlled me, then you kissed me until I melted, and then you made me fall in love with you. What's going to happen to me now, doctor?\"\n\nI smiled and pet her smooth back and buttocks. \"That is what you were made for, Sherrie,\" I told her. Hopefully, she would be able to detect the lack of any moral judgment in my statement. \"Any man ... or woman, for that matter ... can take you and use you. They can make you melt, and they can make you love them for it. I cannot ... add you to my life. I think you know that.\" Her head was on my chest, looking away from me toward the rain-streaked window. I felt her nod, and I felt her tears. \"Will you trust me?\" I urged. \"Will you believe me when I tell you that there will be happiness and love in your life?\"\n\nShe sniffed and nodded, her cheek slippery on my chest. \"You are the doctor. I believe you.\"\n\nWe finally rousted ourselves out of bed, and I made omelets while she hogged the bathroom for twenty-five minutes. A phone call informed me that Merrie Russo had checked out of the hospital. Another let me know that Joe Cromp was in a motel on Interstate 70 between Pittsburgh and Columbus. He evidently had family in St. Louis. Yet another call resulted in an immediate invitation to the Russo estate, northeast of the city. Sherrie helped me with the dishes, then followed meekly along as I led her out to the car. She provided the directions I needed to drive to the Russo place, but she had no enthusiasm, and she reminded me a little of a prisoner going docilely to her own execution.\n\nMerrie met us at the door and, ignoring me completely, engulfed her sister in her arms, rocking her gently and eventually led her inside to the kitchen while I followed self-consciously behind. Russo shook my hand enthusiastically and poured me a cup of coffee while waving me to a spot at a round table between Merrie and himself, Sherrie sitting across from me. \"I got a call from a private detective agency this morning, doctor. They refused to tell me where this ... fiend is, but they assured me that you had the matter in hand ... that they were operating on your instructions. Care to tell me about it?\"\n\n\"I promised to eliminate your threat, Mr. Russo. I've done that. The ... uh ... fiend will never bother these ladies again. Further, assuming Merrie will allow me half an hour ... with you present, if she wishes ... I will remove any psychological cravings or desires that he implanted. She will be completely free of his influence, now and forever.\" I turned to the slim beauty sitting next to me. \"Is that what you want?\"\n\nShe regarded me seriously. \"Would it entail pinching me?\" Then she threw back her head and laughed at my expression. I tried not to stare. She was as desirable as Sherrie, but subtly different in so many ways; confident instead of subservient, openly excitable instead of shy and meek. As she laughed, she seemed unaware (or uncaring) that the thick white bathrobe she wore was gaping open; and for a moment, her left breast was bared in its entirety, exposing a nipple that had obviously been rubbed (or in my mind sucked) to the point of redness very recently. I blushed, despite myself, and averted my eyes. I guess she noticed, because she laughed again and adjusted the robe. \"If your hypnotizing me would mean safety for Sherrie, then yes, of course I'll do it, doctor.\" She laid a hand on my arm. \"And, I never thanked you for saving me ... for giving me my life back.\"\n\nI tipped an imaginary hat. \"Always at milady's service,\" I told her lightly. But then I turned to Russo. \"I find myself in the odd position of renegotiating our little deal.\"\n\nHis eyes narrowed. \"I suppose I'm at a disadvantage,\" he said coldly. \"I already owe you too much.\"\n\nI smiled at that. \"You misunderstand me. You see, I'm having a two-for-the-price-of-one sale today.\"\n\nHe studied me carefully, then glanced quickly at Sherrie (who was suddenly blushing) before directing his gaze across the table at his wife. \"If I'm understanding you correctly,\" he announced, \"I think one is all the women I can handle now.\"\n\n\"I'm afraid I must insist. Sorry, Mr. ...\" I hesitated a moment. \"... Bryon ... they're a package deal. They always have been. You ...\" I spread my arms to include everyone, \"all of you ... have been deluding yourselves if you ever thought otherwise.\" I faced Russo again. \"You came to me accusing Sherrie of manipulating your wife ... when, in fact, it has always been the other way around. They are just about as opposite as two people can get. I'm willing to bet that for as long as either can remember, Merrie has guided and Sherrie has followed. They led a pretty repressed life during their formative years; but even so, by the time they started college, it was Merrie who made all the decisions, who gave the okay or refusal for every single action. But most importantly of all: Merrie was the protector.\n\n\"She tried, during their first year away from home, to shrug off her responsibilities to her sister and live some kind of independent existence. But it didn't take long for her to understand that Sherrie was a boat without a rudder, a complete slave to whatever wind blew her. She tried it again, after she met you ... playing matchmaker, assuming that a sex slave would be the perfect mate that no man would ever give up.\"\n\nI turned to the girl in the bathrobe. \"But now you know, don't you, Merrie. Now you realize that you can never be free of this responsibility.\" She gazed up at me, and I had seen the look in those eyes before ... every teacher had. She was the student that sat in class, listening patiently, though she knew as much about the subject as the prof. Oh, yes. She knew, alright.\n\n\"Just what are you suggesting?\" Russo grumbled testily.\n\nI turned back to him. \"Sherrie is the ultimate submissive. As such, she is literally helpless in this world. She needs your guidance, your strength, your protection ... everything that your wife has provided for the last twenty-one years. Give her that strength and your home to stay in; and in exchange, she'll give you everything she has, everything she is. Make her your cook ... a housecleaner ... hell, buy her French maid's uniform, if you want. Spank her when she's bad, screw her when she's good. Make her bear you a child or two, if you want.\"\n\n\"Christ, doc! You're talking as if she wasn't sitting right there across from you!\"\n\nMerrie's chair scraped on the hardwood floor as she pushed it back and stood. Ignoring Sherrie completely, she walked around behind her sister's chair and stood before her husband. Russo scooted his chair back, as well, in preparation for standing with her, but she reached out and pushed him back; then she walked beside him and settled her pert little ass onto his lap, snaking her arms around his neck. She began kissing his earlobe. \"Please, Bryon? Can we keep her? If you don't want her, can I have her? Please?\"\n\nHe put his hands on her shoulders and pushed her away enough to look into her eyes. \"What are you talking about, Merrie? You two are discussing her as if she was a pet or something!\"\n\nShe shrugged free, and put her face next to his again. \"But she is, darling,\" she purred. \"That's exactly what she is ... a pet that I've had to take care of my entire life. But she's so sweet ... and obedient. She's everything a good pet should be. I'll show you, if you'll let me.\" She put her lips to his ear and whispered loudly enough for me (and Sherrie) to hear. \"If you kiss her, she'll do an-y-thing.\" She nibbled his ear teasingly. \"And I bet she'd suck you dry ... whenever you wanted.\" She wriggled herself even closer to him. \"Oh, Bryon, just wait until you hear her when she's about to cum. She makes this little sound ... sort of like a baby kitten wanting a bowl of milk. Please, Bryon? Please, can we keep her?\"",
        "He couldn't keep his gaze away from the sister, who was blushing beet red and staring down at her clenched hands in her lap, shivering slightly. Then, finally, he glanced across at me, his frantic eyes seeking some sort of answer.\n\nI laughed aloud, pushed back my own chair and stood, then walked around the table. \"Let me show you how this is going to work,\" I told them. I stopped behind Sherrie, who continued to sit with averted eyes. I reached into my pocket and pulled out my phone, then I launched an app, pulled up spiral number 2163 and set it down on the table in front of her. The movement captured her attention, and she looked up at the device and gasped audibly. I leaned down, putting my hands on her shoulders. \"Watch the spiral, Sherrie. That's it. Now, relax, please. Relax and sleep. Sleep, now. Sleep. That's it. Surrender, and sleep.\"\n\nShe sighed softly, and I had to use my hands on her shoulders to keep her from dropping all the way to the table's surface and hitting her head. Her hands were still in her lap, and I used my right fingertips to turn her head so that her cheek settled against the tabletop. \"What do you hear when I speak to you, Sherrie? Tell me.\"\n\n\"Your words are the truth,\" she intoned at once, sleepily. \"You tell me only the truth.\"\n\n\"Any person who brings you into your deep, deep trance, will always tell the truth, Sherrie. You can ... and will ... believe them, completely and totally. Whenever Merrie makes you sleep ... whenever Bryon makes you sleep ... you will believe and trust and obey them. Always. Every time. Isn't that so?\"\n\nShe made sort of humming sound. \"Yes,\" she mumbled.\n\n\"Sit up, Sherrie.\" She did so immediately. \"Tell me again. Who can you trust? Who will you obey?\"\n\n\"You, doctor. Always you. And now, Merrie and Bryon. Always. I will believe. Trust. Obey.\"\n\n\"Very good, Sherrie. I will count to three, and you will wake up, happy and refreshed and aroused. You will be aroused because you will remember being hypnotized, and you will remember everything I've said to you while you were in your wonderful trance. But most of all, you will know that everything I've told you has been absolutely true. Both Merrie and Bryon have the power to hypnotize you whenever they want. All they have to do is show you the spiral, and you will be unable to resist. You will surrender, and you will go into your trance, whenever they wish to take you there. Knowing this, you will also know, absolutely and without a doubt, that they can control you. They can make you do ... anything. Isn't that so, Sherrie?\"\n\nShe was breathing deeply. \"Yes, doctor.\"\n\n\"And knowing that arouses you, doesn't it?\"\n\n\"Oh, yes, doctor.\"\n\n\"It will always be like that. Obedience in trance. Obedience when you are awake. Obedience ... always. And how does that make you feel?\"\n\n\"Aroused, doctor.\"\n\n\"And you will know that. Always. One two three.\"\n\nI reached past her and picked up my phone. \"I'll email you with links and attachments for running the spiral that controls her,\" I said to the astounded couple in the chair to my right. \"If the man who tried to harm your women ever returns to Providence, I'll inform you and let you handle him yourself. As to suggestions for finding happiness in a dom/sub relationship, there are plenty of websites that address that topic; but you shouldn't ignore the satisfaction of exploring through your own imaginations and experimentation. I was happy to be of service.\"\n\nI made it all the way to the front door before Sherrie grabbed my arm, spun me around and threw herself into my arms. \"Thank you, doctor,\" she said softly, trying her best to crush me in her arms.\n\n\"It is I who thank you, Sherrie,\" I said softly. \"It's been so long since I needed someone to confide in ... and my demons had become overpowering. You saved me. But this is the best way ... this is where you belong. Here, you will be loved and dominated and protected. Here, you will be happy.\"\n\nAnd I kissed her goodbye. But I broke the kiss and left before she melted.\n\nTHE END - CASE FILES - PERSONAL NOTES - PATIENTS 53 & 54"
    ],
    "authorname": "blacknight99",
    "tags": [
        "humiliation",
        "hypnosis",
        "reluctance",
        "romance",
        "submission",
        "wife",
        "romantic",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-doctors-casebook-pt-02-ch-03"
}