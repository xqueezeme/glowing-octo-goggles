{
    "title": "Centre of Attention",
    "pages": [
        "1.\n\nI was in so much trouble. I'd always been in trouble but this was something else. This was suspended for three days, almost expelled, put in counselling, parents brought into school for a two hour chat trouble. \n\nI'd been caught wagging, not for the first time. I'd been caught tagging- that was the first time I'd been caught and not the most wholesome way to stretch my creative endeavours, I know. And- just to hit the trifecta- I was caught outside the school, spray can in hand, at the exact moment I took a hit from a handmade bong. There was just no getting out of that. That had tipped me from stoner dropout but who cares to potential baby criminal. \n\n\"This is really serious.\" Miriam, the school counsellor was saying. \"Is this getting through to you?\"\n\n\"Oh yeah.\" I said. \"Yeah I totally get it.\" They all exchanged a look that suggested I did not, in fact, get it. Miriam looked over my head and up at my parents. \n\n\"I have an idea to get him engaged.\" She said over my head. \"Also means he'd be supervised after school for a couple of hours a couple of days a week.\" They looked at each other and shrugged. I could read the exhaustion in their eyes. They would try anything. Miriam looked at me over her glasses with a bit of a smile. \n\n\"You've got quite a voice on you don't you?\" She said. I felt my face grow red. \n\n\"No.\" I lied. I do, in fact, have quite a voice. A powerful tenor. I took singing lessons once a week but I kept that pretty under wraps, because, you know, it was fucking lame. \n\nShe smiled at me. \n\n\"School musical is coming up.\" She informed my parents. Oh my god.\n\n\"No.\" I said quickly. \"I'll take detention everyday.\" \n\n\"Hector, just an audition.\" She said firmly. \n\n\"You can drug test me. Every day. You can check my bag and locker and shit for spray paint...\"\n\n\"That will be happening regardless.\" My mother said.\n\nI whined and stamped my foot and begged and pleaded for anything other than this form of cruel and unusual punishment- but I didn't get my way. \n\n\u2014-/\u2014-\n\n\"What will you be singing?\" Ms Sayers smiled warmly at me as I stood with my hands shoved deep in my pockets in front of her and Mr Marsh. Ms Sayers was the head of the music department, but really more invested in the orchestra. Mr Marsh would be leading the musical...fucking shocker. He was practically a walking musical himself. \n\n\"I cannot see the city.\" I muttered. I hadn't loved any of the choices, I'm not really a musical theatre kinda guy. Mr Marsh smiled at me and gave me a bar on the piano. I sighed and began. \n\nAs I finished the two looked at each other. \n\n\"That's something.\" Ms Sayers said slowly. \"Can you do that with anything?\" She turned to Mr Marsh. \"Try something contemporary.\" He started to play 'Let it Be' which, um, not exactly contemporary, but I obediently opened my mouth and sang a few bars. \n\n\"Excellent party trick.\" Mr Marsh muttered. \"Alright. Thanks Hector.\" I grinned as I left the room, satisfied I'd totally fucked that up. \n\n--/--\n\nMr Marsh caught up with me later. I was in the library, reading. He sat next to me and folded his arms. \n\n\"Next time you try to throw an audition you should know it's virtually impossible to sing that consistently off key unless you know what you're doing.\" I looked up at him. \"And you should work on all that lovely vibrato. It's a dead giveaway that you're very talented.\" Dammit. I sighed. \n\n\"Please don't put me in the musical.\"\n\n\"Why not?\"\n\n\"It's super lame?\" I winced as I realised I was talking with someone who probably studied Musical Theatre and still starred in shows occasionally. \n\n\"If it's so lame why do you take singing lessons? Why are you in the choir?\" \n\n\"That's just singing. It's not...\" I threw my hands up in a grandiose gesture. Mr Marsh laughed and mimicked me. \"Look.\" I sighed. \"You remember High School right? I'm sure it sucked just as much for you as it does for me. I've somehow managed to stay under the radar for four years and I really don't want to paint a giant target on my back for the last one.\" Mr Marsh sighed and pressed his fingertips together.\n\n\"You already painted a target on your back by getting suspended.\" He said frankly. \"People might not have known who Hector Raleigh was before, but they do now.\" I sighed. I had noticed more people were saying hi to me. And more people were turning away from me and whispering. \n\nI might have made the tiniest bit of a name for myself. \n\n\"Manaia does the musical every year and he seems to be doing ok.\" He pointed to a guy just outside the library, Manaia, one assumed. He was dressed in a sports uniform- I didn't pay attention to sports so it could have been any team, but it was one of the fancy gold and black ones so he must have been representing the school in something. He was massive, one of those lucky guys who was already over 6 feet and probably still growing. I was still hoping for a growth spurt. Spoiler- it wasn't coming. His hair was curly and just above his shoulders. I frowned at him. \n\n\"That guy does musicals?\" Mr Marsh laughed.\n\n\"See? I don't know where you're getting your stereotypes from.\" I rolled my eyes.\n\n\"Netflix I guess.\" I looked at Mr Marsh and sighed. \"Please. Just don't put me as the lead. I'll do the chorus or something. If I have to.\" \n\n\"Alright. Not the lead. On ya Hector, I think you're gonna enjoy this.\" He leapt up and marched away before I had a chance to change my mind.\n\n--\n\nI know how it is in American TV shows but in Wellington, NZ, in my year it was definitely cool to be involved with the school musicals. I mean, kids like me didn't think it was cool, and a few of the tougher guys from the wrong side of the track clearly agreed. But those big glowing kids, the ones with the attractive personalities and usually photogenic genes- the popular kids- they were all over it. Something about being the centre of attention, maybe. \n\nSo that's why they announced the leads in Assembly on Friday morning, in front of everyone. \n\nI was at the back with my mates. Well, I was with some art students I knew ok. My mates skipped this, every Friday. Unfortunately I had my very own personal escort in my home room teacher who was eyeing me right this second. So I stuck around. Not like I had a choice.\n\n\"Morning.\" Mr Marsh yawned as he stepped on stage. He always was a little rough around the edges until after lunch and his 4 or 5 black coffees. He glanced at the restless crowd of teenage boys in front of him and I could actively see him trying to shake himself into giving a little pep. He grinned. \"Thanks to all who auditioned. So much talent in this hall alone. Unfortunately I have limited parts to give out and one of them is going to Meg from Wellington Girls since none of you can consistently hit those notes...\" I mentally checked out. There was a smattering of applause after each name and, as tradition, the boys whose names were announced stood in their seats so we could admire them, I guess. \"And finally we have our two leading men- Hector Raleigh will be our Judas this year and Manaia Tuhoe will be Jesus.\" My head jerked up. What? Oh for fuck's sake. \n\nThe guys around me exploded with laughter and I turned bright red. I wasn't gonna act like it phased me though- the only thing lamer than being cast in the musical was being lame about being cast in a musical- so I threw my arms in the air as though I'd won an Olympic Gold. I encouraged the guys to start a chant.\n\n\"Hector, Hector!\" I bowed. I glanced across the aisle where Manaia was getting similar treatment, only unironically. I didn't remember his name but I definitely remembered the six foot whatever guy currently standing up with a huge grin on his face. He looked so cocky, and so damn happy. I wanted to bring him down a peg. I decided to grab his hand across the aisle. He looked surprised but he was good at playing along. I led him up to the stage, encouraging people to cheer for us as we got there. I thrust our hands into the air as I frowned at Mr Marsh. He smiled benignly. Fuck you, I mouthed. He looked away, pretending not to see. \n\nWe were quickly ushered off stage by our Vice Principal and the crowd calmed down. I realised my hand was still entwined and Manaia's and I was leading him to my seat. \n\n\"Coming with?\" I enquired. He blushed and dropped my hand. \n\n\"Uh- hey...\" He muttered. I looked at him, but he didn't seem to have anything to add so I raised my eyebrows. \n\n\"Hey?\" I shrugged him off and joined my friends. \n\n\u2014/\u2014\n\n\"That's just straight up bad casting.\" I slouched into Mr Marsh's office and threw myself on a chair. \"And you promised I wouldn't be a lead.\" I folded my arms petulantly. He slowly put his laptop down and took his glasses off.\n\n\"I promised you wouldn't be the lead. And you're not. Manaia is.\" He folded his arms, reflecting me somewhat mockingly. \"As for the casting I think you two could have great chemistry. I think you proved that today.\" \n\n\"I don't even know Manaia! And isn't Judas meant to be some... badass, manly dude?\"\n\n\"Maybe actually watch Jesus Christ Superstar and tell me who Judas is meant to be after that. And then tell me why you think we cast you.\" I frowned at him and sighed. \n\n\"This is the Worst Thing that's Ever Happened to Me.\" I said. Mr Marsh laughed. \n\n\"Ok, Hector. If that's true then I'm happy your life has been so stable.\" \n\n\"It's just so much... dancing and... glitter.\" \n\n\"We can hold the glitter.\" I bit my thumbnail as I looked at him. His face was so calm. \n\n\"What can I do to make up for it? Please? Anything?\"\n\n\"Why are you this anxious about it?\"\n\n\"It's not my thing! I don't like being the centre of attention!\" \n\n\"Yes you do. You're always causing scenes. That's the fifth assembly you've attended this year and the fifth assembly you've disrupted this year.\" I grinned a tiny bit at that. Huh. Five for five, nice.\n\n\"That's different.\"\n\n\"Because you're in control of that.\" I frowned. \n\n\"Uhhh...\"\n\n\"I think getting you up on stage is going to be really good for you Hector.\" \n\n\"Fuck you.\"\n\n\"Watch your language.\"\n\n\"Sorry.\" I bit my tongue. I really couldn't afford to get in any more trouble and I think he knew that. I groaned as I looked at Mr Marsh. I could see I wasn't winning this one. \n\n2.\n\nWe started rehearsals. Everyone seemed to know all their parts and had seen the musical several times over. I... showed up. Obviously I didn't normally do this sort of thing so I didn't know anyone there. \n\nManaia did. He knew fucking everyone. He was cracking jokes and telling stories... he was kind of magnetic, people were drawn to him. They wanted to be part of that warmth. They wanted him to see them, call them out. Exalt them. \n\nI didn't like him at all. I thought he was loud and a show off and full of it. I sat quietly on the side, reading a book. I was good at reading. I used to be good at melting into the shadows. That's why I got away with skipping class to smoke for so long. But Manaia wouldn't let me do that, would he? His eyes sought me out for some reason. I could feel them. Everyone could. He has that kind of gaze. He's the worst person I've ever met for hiding emotion- it's probably why he's such a good actor. Everything is at the surface, ready to go. \n\nI glanced up and caught him staring. He looked away. I glanced over his group who were all also surreptitiously stealing glances. I wondered what I'd done wrong. Maybe it was how I was dressed. I tried not to play it up in school but I know my jeans are always a little tighter than anyone else's. My shirts are always ironed. My shoes are polished and usually Italian leather. \n\nWe sat in a circle and started discussing how we felt about the show. What it meant to us politically, what we drew from it. Everyone seemed to have long winded answers and a lot of thoughts. Everyone seemed to find a little bit that they held dear, that reflected their own life. I didn't know the musical so I kept my mouth shut. \n\n\"What about you Manaia?\" Ms Sayers was leading this session. \"You always see a lot of subtext, what's your take?\" Everyone turned to Manaia. He'd been quiet since we started. He was blushing a little. \n\n\"Nothing no one else has said.\" He said. Ms Sayers wasn't having a bar of that. \n\n\"Come on, what's the hot take?\" He shrugged and grinned. His whole body seemed to shift a little as he relaxed. \n\n\"You don't want to know, Ms Sayers.\" She rolled her eyes. \n\n\"Try me.\"\n\n\"Well Jesus and Judas... they were totally... you know... with each other.\" Everyone laughed as Manaia grinned and sat back. He wriggled his eyebrows at Ms Sayers and she shrugged. \n\n\"You're not the first person to think that. What do you think Hector?\" Oh shit. I hadn't seen the musical. I had no idea. I looked at Manaia and he stuck his chin out just a little. Defensively. I glanced around. I knew my crowd.\n\n\"Oh yeah.\" I said, staring Manaia down. Two can play at this game. \"Convert me, daddy.\" \n\n\"Enough.\" Ms Sayers said as the group hooted and laughed at me. I grinned and winked at Manaia and he turned away, frowning. I was really good at gay chicken. \n\nWe continued to talk and I realised I was going to have to catch up at some point, because I had nothing to add. I just sat there feeling stupid and trying to read my book under the table. We split into groups, to work through the text and discuss subtext and motivations and stuff. Obviously I was with Manaia. He sat next to me and pulled the book off my lap. Bold and kind of dickish move. He looked at it thoughtfully. \n\n\"John Waters?\" I grabbed it back.\n\n\"Fuck off.\"\n\n\"Sorry, man.\" He seemed a bit taken aback by my iciness. I sighed. No need to be a dick, it wasn't his fault I was here. I rested my head on my arm and looked at him. \n\n\"Sorry.\" I sighed. I looked half heartedly at the score on the table and up at him. \"You seem to know a bit more about this than me. Why don't you tell me my motivations?\" Manaia laughed.\n\n\"Well I don't think you're gonna like my interpretation, Hector. I wasn't joking before. I think Jesus was buggering Judas something criminal.\" He grinned at me. Goddamn his teeth were white. \n\nI blinked at him from where my arm was resting over the table. I shrugged. \n\n\"Musicals are already gay. Lets roll with it.\" Manaia frowned at me. \n\n\"You know I am right?\"\n\n\"What?\"\n\n\"Gay.\" I sat up a little and looked him over. \n\n\"Oh.\" I said with a small smile. \"You got me.\" He shook his head. \n\n\"For real.\" I looked him over. \n\n\"Yeah, ok.\" Manaia rolled his eyes. \n\n\"You know, I think you're more narrow minded than you look.\" He said. \n\n\"Whatever, Mr. Prom King.\" I sat up properly and pulled the score towards us. \"Come on. Lets get through this.\" He sighed and brought his chair in close, and started explaining the plot to me. I was so far out of the loop I didn't really get the Christianity stuff or the musical theatre stuff. He knew enough for both of us though. \n\nI noticed halfway through his thigh was resting against mine. For some reason I didn't move. For some reason I almost leant into it. For some reason my hand fell down to my lap and almost spilled on to him, just barely resting between us. \n\n\u2014/\u2014-\n\nI was sitting on the benches near the netball courts doodling and trying to pretend I hadn't heard the bell when I felt someone gently tug on my ponytail. I don't think I've ever been so offended in my entire life. I whirled around to see Manaia grinning at me. \n\n\"Come on pint glass, that was the bell.\" I glared at him. I wasn't sure what made me madder- the hair pull, or the demeaning new nickname- and having to choose was rendering me speechless. He laughed at my expression. \"Come on.\" He offered me his hand. \"English.\" I took his hand wordlessly and let him pull me up. Had we really been in the same English class all year? I'm sure I would have noticed... although maybe I'd notice more if I actually went to class. \n\nHe walked beside me, thankfully in silence, and I started thinking about an idea I had for some photography when I realised he was tugging my ponytail for attention again. That unwelcome touch was so jarring I managed to find my voice again. \n\n\"Do that one more time, I dare you.\" Manaia grinned. \n\n\"Don't tie it up like that then. It's way too tempting.\" Asshole. \n\n\"Your honour, the defendant had their hair up and it was 'tempting'. Accused should be cleared of all charges.\" I was trying to hurt him with my glare but he was totally immune. He just laughed again and pulled me into class. \n\nWe were paired together for the second time this week and it was Manaia's turn to be in way over his head. \n\n\"You haven't actually read The Handmaid's Tale have you?\" I realised slowly as his points made less and less sense. He looked really tired all of a sudden. \n\n\"I saw the TV show.\" He joked. His tone was a little flatter than usual though, and his eyes weren't twinkling. I stared at him. \n\n\"You good?\" I asked after a beat. He blushed.\n\n\"Yeah. Ah. Just with Rugby, and Netball, and Chess and Debate and the Musical I guess... I just sort of don't have a lot of time for reading.\" \n\n\"Jesus, dude. You need to prioritise.\"\n\n\"I do. That's why English is last. Figure I can cheat off you.\" I rolled my eyes. \n\n\"I actually meant prioritise as in get some sleep but thank you so much for choosing me as your patsy, honoured.\" \n\n\"Hey man, something tells me I'm going to be carrying this musical alone, it's the least you can do.\" \n\n\"Just because I think musicals are the gayest thing ever doesn't mean I'm going to suck.\" Manaia frowned at me.\n\n\"Don't use gay in that way.\"\n\n\"In what way?\"\n\n\"Like 'lame'. That's not on.\" I blushed in spite of myself, being called out on my language by a jock. \n\n\"I actually meant it as in gay, men loving men and all that but I take your point.\"\n\n\"Why do you think musicals are gay?\" Manaia stared at me. \"Try to answer without flicking your wrist.\" I swallowed. Oops. Totally called out. \n\nI noticed as I was thinking that his hand was dangling dangerously close to my hair again. \n\n\"Hey, John Key, watch it.\" I swung my head away. He laughed and it broke the tension. \"Alright.\" I leant over the desk. \"Let me help you with that essay.\" \n\n\u2014-\n\nHe walked me to my next class, Art History, all the way down in the basement, and he leant against the wall chatting to me about his upcoming netball game. I asked to be polite but he really could ramble on. I was nodding and pretending I cared when the sun lit him up from behind, filtering through us curls and making his dark skin glow. I could practically hear my heart beat faster. \n\nOh no. \n\n\"Hey what's up?\" Man, I need a new face. One without emotions written across it. I blinked and turned away from Manaia. \n\n\"Sorry, just gotta be on time...\" I started to head downstairs when he caught my shoulder. \n\n\"See ya tomorrow, pint glass.\" \n\n\u2014\u2014\n\nI thumped down in my seat and banged my head on the desk. \n\n\"Hey Hector. It's Art History. Not Drama. You want to save it?\" I glanced up at our teacher. \n\n\"Sorry.\" I mumbled, sitting up straight. I tried to focus on Futurism and Boccioni but my mind was wandering. Wandering way too far in a direction I didn't like. \n\n\"Hey, you know that guy Manaia?\" I asked my mate Connor. He blinked at me. Yeah, we were meant to be discussing our thoughts on Italian facism but I had something on the brain. \n\n\"Manaia, THE Manaia? First 11? Rugby, Soccer, and Netball? Lead in all the school plays? Leader of the GSA? Head of Seddon House? Probably going to be Dux this year? That Manaia?\" \n\n\"Jesus Christ.\" \n\n\"And that, in your musical yeah.\" I rolled my eyes at him. Such a comedian. \"I know.\" He said, watching my face carefully. \"But hey, you might pass all your classes this year so you have that going for you.\"\n\n\"When did he transfer here?\"\n\n\"What do you mean? He's been here since Year 9, same as us.\" I frowned at Connor. There was no way. I would have noticed him.",
        "\"Did he have like... a growth spurt or something...?\" Connor sighed and put down his pen thoughtfully. \n\n\"What's this about Hector?\" I leant over my book to hide the fact that I was starting to turn red. \n\n\"He... uh. He pulled my hair.\" I said, avoiding his eyes. Connor winced. \n\n\"Oh.\" He bit his lip. \"So how does he look without his front teeth?\" I rolled my eyes.\n\n\"He's fine. I'm not gonna start picking fights with some fucking Goliath. He'd eat me for breakfast.\"\n\n\"Never stopped you before.\" True. \n\n\"I'm pretty close to being expelled.\" I deflected. \"Mum will... no ones gonna be happy if I start getting into fights.\" Connor sighed. \n\n\"Yeah I guess. Well I'm nowhere near being expelled, so if you need backup sorting out your co-star give me a heads up.\" I laughed. Connor is even smaller than me, and unlike me he doesn't get any exercise so he's pretty soft all over. I was about to tease him for his bravado but Mr Christie drifted over and we fell back into our study again.\n\n--\n\nManaia sat next to me in English again the next day, even though I could see he had other friends in the class. I raised my eyebrow at him. \n\n\"Sup.\"\n\n\"Sup, pint glass.\" I rolled my eyes, but for some reason I didn't tell him to take it back or he'd regret it. He sat back in his chair and looked at me. \"God you look like shit today. Thought you were lecturing me about getting sleep?\" What a dick, truly. \n\n\"I look great, Manaia, you're just upset because you cant pull my hair.\" I'd put it in a plait- it was getting greasy and I didn't have time to wash it. He was right though. I hadn't slept last night. It was all the school. And the drug tests. I think I might have gotten a little too familiar with having a sesh before bed because I was really struggling to sleep at the moment. He grinned. \n\n\"Mildly upset, but I'm sure I'll find some other way to annoy you.\"\n\n\"No need to try too hard, you're exceptionally annoying.\" He grinned. He had such a nice glow about him when he smiled like that, I couldn't help but smile back at him. I noticed yet again his wide stance meant our knees were touching. I almost decided I liked it. \n\n--\n\nManaia had been on at me to actually watch the musical, since rehearsals proper started next week and I was meant to, you know, know my part, and the general plot and stuff. I was lying on my bed and googling. My hand drifted to my phone. \n\nAll the cast had each other's phone numbers, for emergencies or whatever. I glanced at Manaia in my contacts. Would it be too much to text him? Would he see right through me? I mean, I had a feeling he already saw right through me but at least I had my dignity. Sort of. \n\nSo... if I was going to like, watch this thing... which one should I watch?\n\nJohn Legend as Jesus. \n\nHe texted back immediately which was weird because he had so many extra curricular activities I had assumed I would have a few hours to come up with a response. \n\nAre you really going to watch it? You should come over to mine. I have a projector set up. And I can make sure you don't watch the Tim Minchin version of Judas because I fucking hate it. \n\nMy stupid heart. It was lucky I was lying down because I felt weak. \n\nSure. In between any sport the school offers including chess, debate... whatever else you do... I'm sure we can find the time \n\nTuesday night? \n\nI bit my lip. Fuck I really wanted to. And I also really, didn't want to. Because I suspected I'd embarrass myself something awful. And besides... \n\nTuesday's aren't good for me. \n\nWhich was true. Manaia took that in his stride. \n\nWell, you watch it anyway. If another time comes up I'll let you know.\n\nI didn't reply. I wanted to be at least a little cool. Even if I wasn't very, at all, really. \n\n\u2014-\n\n\"I can't do the musical.\" I said, thumping opposite Mr Marsh. He sighed and I could almost feel him restraining himself from rolling his eyes. \n\n\"Oh no.\" He said flatly. \"Strep throat?\" I didn't know teachers were allowed to be so sarcastic.\n\n\"I saw it. There's a lot of dancing.\"\n\n\"You won't have to dance. One of the reasons you're better off as Judas than in the chorus actually.\" \n\n\"But...\"\n\n\"That's the bell. Get to class.\" \n\n\"B...\"\n\n\"Hector.\"\n\nI slunk away. But I was still concerned about the dancing. \n\n--\n\nManaia waved at me between classes. I flipped him off in return. Edgar, one of my best friends, one of the few people that had figured out I was gay even though I never said anything, looked at me. \n\n\"You guys friends?\" \n\n\"I don't really know him. We're in the musical together.\"\n\n\"That's right. Forgot you were roped into that.\" \n\n\"Fucking tell me about it.\" Edgar looked over at Manaia, who was heading to the South building with his mates. \n\n\"Oh well.\" He said. \"Some benefits right?\" I rolled my eyes. \"Come on.\" He said. \"Manaia is...\" I didn't let him finish his sentence. \n\n\"Did you study for the test today?\"\n\n\"We have a test?!\"\n\n\"Yeah dipshit.\" We didn't. But it took his mind off telling me exactly what he thought of Manaia which, quite honestly, I didn't want to hear. I still didn't believe Manaia was gay. Honestly, at that moment, I still didn't want to believe I was gay. \n\nI mean I was a 5 foot almost nothing at an all boys high school, how do you think that was gonna play out for me?\n\n\u2014\u2014\n\nI was running to make the bus on time. Dammit. Made it but I was the last to get on which meant I was basically shoulder to shoulder with the driver. \n\n\"Hey!\" I heard a voice. \"Pint glass!\" Dammit. My stomach twisted as I sought Manaia out. He'd actually saved me a seat. I wrestled my way through the crowd and tucked myself next to him.\n\n\"You don't take this bus usually?\" \n\n\"Sometimes.\" He said. Man he really was everywhere wasn't he? How in God's name had I never noticed him? \"I usually drive in.\" He said. That's right. Manaia had his shit together and could drive. \"But Mum needs the car on Tuesdays.\" \n\nHe pulled my book out of my hands, I really hated it when he did that.\n\n\"Carrie Fisher?\" He inspected the back. \"Huh. Didn't know she wrote.\" \n\n\"Yeah turns out she's more than a gold bikini.\" Manaia rolled his eyes. \n\n\"Was too busy watching Han to really notice.\" I elbowed him in the ribs. He smiled as he looked down at me. \"You really don't believe I'm gay do you?\" He said. \n\n\"No, I really don't.\" \n\n\"Well, I'll just have to convince you.\" He stood up as the bus slowed down and I was about to say goodbye when he practically bowled me off the bus with him. He didn't actually pick me up but he somehow manipulated me and I found myself standing on the pavement, watching the bus roar away. \n\n\"Come on.\" He said, starting to walk.\n\n\"Asshole!\" I said. \"I told you I'm busy on Tuesdays! Where the fuck are we? I have a class!\" \n\n\"Oh.\" Manaia bit his lip. \"Really?\"\n\n\"Yes, really!\" Manaia hung his head. \n\n\"Oh. Sorry Hector.\" \n\n\"Fuck.\" I swore. \"If I don't show up my mum will be called and she's so stressed at the moment anyway...\" I trailed off. No need to overshare. \n\n\"It's ok.\" Manaia nodded. \"I'll borrow Dad's car and drop you off.\" He grinned at me. \"Ok?\" I breathed in slowly. \n\n\"Ok.\"\n\n--\n\nHe dropped me off dubiously outside an Indian restaurant. \n\n\"Here?\" He looked up and down the street at a couple of empty buildings and a second hand store. \n\n\"Yeah. Thanks. Sorry, running late.\" I waved to him and tried to disappear down an alleyway. \n\nI had to run to get to class on time, in the next block- there was no way I was letting Manaia know about this. I shimmied into my leotard and strapped up my shoes just in time to slip in. \n\nThere are two of us guys but it's mostly women. Ralph and I take turns to solo but I'm definitely a little sharper than he is. I think it's because he's so tall and he hadn't quite grown into his limbs yet. We warmed up at the barre and started working on our exam prep. I was really hoping to get honours. \n\nNot that I would ever pretend to care to anyone, but Contemporary Dance was one of the few things that made me happy. My Tuesday classes were for Tap and I reckoned I'd die if anyone ever found out. There was nothing more lame and embarrassing in my eyes than being exposed as the tap dancing queer I really was. \n\nBut you can see where this is going. The class was two hours and we were finishing up and Mums were slipping in to watch the last bit of class and wait for their kids. And I glanced down the back and there he fucking was. Hands in his pockets, leaning against a wall, smiling at me. Had he followed me? Had he seen the whole fucking thing? \n\n\"Figured the least I could do was give you a lift home.\" He said as I brushed past him to grab my stuff. I didn't speak to him, just locked myself in the bathroom to get changed. \n\nHave you ever tried really hard not to cry? You take a shaky breath in and hold it as tears roll down your cheeks and your chest heaves silently? I think I got away with it in the bathroom, And I tucked my head into my chest and hoped he wasn't going to insist. \n\n\"Hey-\" He tried to stop me but I pushed past him. \n\n\"Bus.\" I mumbled. He didn't let me go and kept pace beside me. \n\n\"Woah, woah, you okay?\" I couldn't speak so I just nodded. As convincing as my performance was, he didn't fall for it. \"Hector!\" He sighed grumpily. \"What...\" He trailed off as I looked up and he saw my puffy tear stained face. His face fell.\n\nHe didn't say anything. He just pulled me into a hug and held me tightly. I wriggled a bit but he wouldn't let me go, and I started to sob in earnest against his chest. His kindness was only making this a million times worse. We held each other in the corridor, my shoulders shaking, his hands stroking my head, until I must have run out of tears and I was starting to feel like maybe I could look him in the eye again. \n\n\"You tell anyone and I'll fucking kill you.\" I said as I straightened up. Manaia nodded solemnly. \n\n\"Got it.\" \n\n\u2014-\n\nHe tried to get me to come over to his. I rolled my eyes. \n\n\"You don't get it do you? I'm super grounded. For the rest of my life.\"\n\n\"So- I come over to yours?\" \n\n\"I don't have a projector.\" \n\n\"So?\" I sighed and shook my head. \n\n\"Manaia...\"\n\n\"Yeah sorry. Forget it.\" He cleared his throat as he pulled into my driveway. \"Hey uh. I know you don't want to hear it but you were amazing. It's a crime that you aren't going to dance in the musical.\" \n\n\"Thanks.\" I said quietly. \"See ya.\" He looked at me and my stomach fluttered as he leant towards me... \n\nWas... was he...?\n\nHe looked me in the eye and I almost felt myself about to react when I realised he was reaching for the lock to let me out. Oh. Oops.\n\n\"See ya.\" He said. \n\n3.\n\nI was early to rehearsal and I went to pester Mr Marsh again. He sighed as I approached him and shuffled some papers.\n\n\"Hector. Whats up?\" \n\n\"I can't do the musical.\"\n\n\"Ingrown toenail?\" I rolled my eyes.\n\n\"I'm serious.\" I hung my head. \"I think its gonna read real... gay.\" I choked out. \n\n\"Yeah it's a school musical.\" Mr Marsh laughed. \"You've made it very clear you think its gay.\" I cleared my throat. He'd misunderstood. \n\n\"I meant gay as in homo-fucking-sexual.\" \n\n\"Swearing.\" He looked over at me. I could see he was regretting ever letting me open up to him- his eyes were flickering to the door, and avoiding my eye. \"Hey, uh, Hector, you know I could give you the afternoon off, I know Miriam has a free session.\" \n\n\"Miriam cant help me. I think you can though.\" I took a deep breath and looked him in the eye. \"You seem like the type who had a crush on your co-star in a musical.\" He sighed. \n\n\"Not for a very long time Hector.\" He said with a half smile. \"You know what I did?\"\n\n\"What?\"\n\n\"Asked him out.\" I rolled my eyes. \n\n\"Yeah. Ok. You do know I'm talking about the world's jockiest jock right?\" Mr Marsh frowned at me. \n\n\"You watch too much TV.\" He said. \"The world isn't jocks and nerds. High school isn't even jocks and nerds.\" He started setting the stage up. \"Which I thought you might know because it's not like you're exactly either.\"\n\n\"I'm invisible.\" He laughed. \n\n\"You're an idiot.\" He said affectionately. I didn't know teachers were allowed to call students idiots. I opened my mouth to argue but Manaia and a couple of his friends were shuffling in. \n\nManaia wandered over to me and before he could pull the book out of my hands I handed it to him. \n\n\"Patti Smith.\" I said. He grinned. \n\n\"Any good?\" \n\n\"Probably not good enough to skip Chess.\" He shrugged. \"Did you win?\" I asked. I heard there was an Inter-School competition going on. \n\n\"Uh...\" He said. \"Na.\" Huh. For some reason I assumed he won everything. \n\nI opened my mouth to console him and noticed his bag was half open.\n\n\"So that's just a giant participation trophy?\" I pulled it out of his bag as he half heartedly tried to stop me. \"Weird, this says first place.\" I inspected it. He blushed and I handed it back to him. \"You're such a nerd.\" I rolled my eyes. \n\n\"I'm not!\" He protested, shoving the award back in his bag. \"I'm...\" He paused and I looked at him with my eyebrows raised. He was really blushing. \n\n\"So you're good at everything, what else is new?\" I interrupted. \n\n\"I'm bad at some stuff.\" He muttered. I was going to ask him what, but we had to stop chatting because rehearsal was starting. I noticed he was hanging back a bit, like me. He wasn't offering advice and taking the lead with blocking like he usually did. People kept looking to him for direction but he wasn't giving it. Strange. \n\nWe broke for smoko and Mr Marsh called him over. You ever get the feeling you're being talked about? Mr Marsh had his hand on Manaia's shoulder and was giving him one of those firm talking to's that teachers do so well. And Manaia was blushing and nodding and glancing at me. I tried not to notice, although I was straining my ears. \n\n\"Just be yourself, Manaia.\" Mr Marsh was saying. I rolled my eyes internally. What fucking fairyland did the school find Mr Marsh in? He was just way too much. I tuned out again. I got enough pep talks these days without getting one meant for Manaia as well. \n\nManaia was back to his normal cocky self after the chat. I guess the pep talk worked on him, at least. He offered me a lift home after rehearsal which I accepted gratefully. \n\n\"You have one hell of a voice.\" He said in the car. \n\n\"Thanks. You too.\" He grinned. \n\n\"Yeah, me too.\" He drummed his fingers against the steering wheel as I laughed at him. \"You ready for the next rehearsal?\" I knew what he meant. The next rehearsal was all dance. I shrugged. \n\n\"Maybe I'll sprain my ankle.\" \n\n\"Mr Marsh will see right through that.\" I nodded. He totally would. He was an annoyingly insightful teacher. \n\n--//--\n\nEdgar and I were in the art rooms by ourselves during our study period. He'd offered me a joint but I was still taking regular drug tests so I had to decline and he said smoking alone was never fun. I completely disagreed with that but I liked the company while I worked on my end of year project. \n\n\"So here's something you don't want to know but I should probably tell you.\" He said. I glanced up at him. He was steeling himself to say something. I gestured at him to continue. \"I overheard some guys talking after PE. They were talking about you.\" My head jerked up. No one talked about me. \"Someone wants to know if you're gay or not.\" He mumbled. \n\n\"Ugh, that fucking musical.\" I moaned. No one would have given a shit if it weren't for the musical. I could have moved up to Auckland and gone to work in a clothing store and been as gay as I wanted, with no one from High School ever knowing. That was always the plan. \n\n\"They asked me.\" He said. I looked at him. \n\n\"You didn't...\" He rolled his eyes. \n\n\"I told them you've never said one way or the other, which is true. I didn't tell them you have a picture of a shirtless Jason Momoa on your ceiling.\" I thumped him playfully. \n\n\"Thanks.\" I said. \"Fuck this is so annoying. You reckon I can make it to the end of the year?\" Edgar shook his head. \n\n\"Not the way you're headed. School Musical is one thing, but attaching yourself to Manaia is a dead fucking giveaway.\" I looked up. \n\n\"Manaia? So like, he really is gay then?\" Edgar looked at me like I was an absolute idiot. \n\n\"Sometimes it feels like you missed the last four years of high school.\" He said. Which, I sort of did. I shrugged. \"Yeah, he does like motivational talks for young teens and everything. He's like the face of gay youth. You really didn't know that?\" I shook my head. Edgar cleared his throat. \"He's ah... I mean I don't know him but I can read body language. He's kind of into you.\" I clutched my chest dramatically. \n\n\"Don't fucking do that to me Ed. Don't you dare tell me the hot jock who's smart and kind and good at everything is into me. I can't take it.\" He rolled his eyes. \n\n\"You are so dumb.\" He said. \"I think the whole school knows he's into you. I think the teachers know. I bet people's Mums and Dads know.\" \n\n\"You know, nerd likes jock is a cliche for a reason, and it never goes well for the nerd.\" \n\n\"Agreed, but you're not a nerd. Actually Manaia is a nerd. And a jock. You're the class clown. Or maybe the basket case, like in Breakfast Club.\" \n\n\"The point of Breakfast Club was that no one is really any of those things.\"\n\n\"Ok, so date Manaia then.\" I sighed. \n\n\"I really thought I could finish this year with only you and Connor knowing my name.\" Edgar shrugged.\n\n\"Well. You ballsed that up royally.\" He grinned at me. \"I have a good feeling about this year. Don't worry ok?\" \n\n4.\n\nI literally have no idea how I ended up at a rugby game. I mean, Manaia invited me, and I politely told him to fuck off, and then I was talking to Connor about it and somehow he convinced me and fuck, there I was, front shitting row, watching a bunch of muscled sweaty dudes throw a ball around.\n\nOk so it wasn't all bad. And Manaia in particular was kind of cute with his hair pulled back in short French Plait. \n\nHe waved at me across the field and, as always, I flipped him off. Connor raised his eyebrows. \n\n\"You're such a sweet boyfriend.\" He said sarcastically and it took every ounce of willpower not to actually thump him. \n\n\"I don't even fucking know him.\" I said. \"He just likes to wind me up.\" Connor rolled his eyes but shut his mouth.\n\nHe kept it shut until Manaia threw himself on the ground with the ball in what was probably a game winning move, and I found myself cheering as Manaia kicked that same ball between two poles... and I don't know, I guess that meant something great, because everyone in black and gold was standing and cheering. Manaia threw his hands up and made a beeline for me. For me? Oh fuck. \n\n\"Well done?\" I tried as he approached me. Manaia leant on the railing and nodded. \n\n\"Yeah. I mean.. we could have kept it tighter in the middle there...\" I glanced at Connor who rolled his eyes as Manaia talked.\n\n\"You know I don't speak rugby.\" I interjected before he was too far gone rambling about trys and shit. Manaia rolled his eyes at me. He ran his fingers through his hair, shaking out his plait and I swear to god he was flexing. Or maybe his muscles just naturally bulged like that. \n\nHis teammates were yelling at him from across the field and he waved at them half heartedly but he didn't seem in any hurry to join them. \n\n\"You're wanted.\" I prompted, nodding to them. He sighed and leant against the railing.\n\n\"Yeah, yeah. So Saturday night right? My place.\" That's right. There was a party. He'd invited me, but he'd invited everyone on Superstar so I figured I could get away with not showing easily. I stammered, unable to explain I couldn't. \n\n\"Sure.\" He grinned and stretched before joining his team again. \n\n\"I'll text you.\" He shouted out.\n\nI looked at Connor.\n\n\"Let me know if I'm fucking delusional...\"\n\n\"Moron maybe but not delusional.\"",
        "\"Shut up. Is he...like... really into me?\" Connor rolled his eyes. \n\n\"You're delusional if you think he is anything other than totally into you. That was Showing Off 101.\"\n\n\"What do I do?\"\n\n\"What do you want to do?\" I hunched over with a sigh. I shrugged. \n\n\"He's very... out.\" I mumbled. I glanced at Connor and he nodded thoughtfully. \n\n\"Very out.\" He agreed. \"But you're not exactly...\" He stumbled on his words.\n\n\"Wait, not what? Do people know...?\" Connor bit his lip and waved his hand around vaguely.\n\n\"You just have, you know, main character energy.\" \n\n\"Uh, I don't think so. Background character.\" Connor laughed.\n\n\"Ok, sure. Agree to disagree.\"\n\n\"It's just... Manaia- the whole fucking world pays him attention.\" \n\n\"You didn't until this musical.\" I blinked. Huh. True. I had no idea he existed until he started singing in my face and pulling my ponytail. Maybe I only thought the whole world saw him because I finally did. I looked at Connor. \n\n\"I think I'm going to go to that party.\" I said. \n\n--\n\nOf course, there was the not so small hurdle of being absolutely, permanently grounded. I could sneak out but I didn't want to freak my parents out. Despite how lame it is- I did actually like my parents and I knew I was on thin fucking ice with them. I sat down that night and looked at Mum and Dad over my broccoli. They exchanged a look. I sighed. \n\n\"I know I haven't exactly earned any trust or anything, and I know I'm really going to struggle to sell this to you... but... there's a party...\"\n\n\"No.\" They spoke in unison. I sighed. \n\n\"But-\"\n\n\"No.\" \n\n\"There's a boy.\" I blurted out. \"He's really nice, and really smart, and he doesn't do drugs or anything and I think he's into me too and he wanted me to go to this party and I...\" I trailed off because Mum and Dad were looking at each other. They were having a silent conversation with their eyes. Mum glanced at me first. \n\n\"Boy?\" My cheeks burned red. Oh. How had I missed that? I nodded slowly. \n\n\"Uh. Yeah. Boy.\" I stammered. Mum smiled. \"Sorry. Yeah. Yeah- Mum, Dad, um I think I'm gay but also theres this party and I really want to go and I swear I won't even drink, I...\" I trailed off again because I could see Dad was trying not to laugh. \"What?\" He swallowed.\n\n\"Nothing Hector. I think your Mum and I are just really proud of you for coming out to us. It means a lot that you can trust us and we want you to know we love and support you.\" Which was what every queer kid wants to hear, almost the perfect response. I suspect they had rehearsed it, actually.\n\n\"So this party...\" They smiled at each other. \n\n\"No.\" Fuck. \n\n--\n\nI managed to convince them, kind of. Dad would drop me off at 8pm and Mum would pick me up at 10.30pm. We negotiated a pick up and drop off spot because I think they could understand the absolute horror of being picked up by one's parents in front of the house at 10.30pm would be too much for me to bear. They didn't ban me from drinking, but they did remind me I had a drug test coming up. We had a bit of a fight about that because I knew for a fact they both smoked from time to time and I thought it was ridiculous that I was still getting this treatment. They pointed out that smoking weed when I was meant to be in class twice a week was different to their recreational habits, and besides my brain was still developing blah blah blah...\n\nAnyway. I was going. \n\nMaybe I dressed up a little, but it was still a High School party. I had to be a little discreet. I thanked Dad and he told me to be careful. \n\nI quickly met up with Edgar- Ed did PE and played Soccer really well, so he was always at these things and we had a drink to take the edge off. He looked me over. \n\n\"Ugh.\"\n\n\"What?\"\n\n\"Ugh, you clearly want someone to rip that off you.\" I rolled my eyes and smiled at him. \"Anyone in particular?\" He teased, looking to the doorway and nodding for me to turn around. Manaia waved at me. I grinned. \n\n\"Excuse me.\" I smiled at Edgar and made my way across the room where Manaia picked me up in an embrace. He was a little chopped, his face was kind of red and I could smell the alcohol on him. \n\n\"You came.\" He said, letting me sit on the arm of the couch before my knees gave way with how weak he was making me.\n\n\"Yeah but I have a curfew.\" I shrugged. \"I'm all yours for the next two and a bit hours.\" Manaia leant in next to me and pressed his cheek against mine so I could hear him against the din. His stubble grazed my chin. My palms grew sweaty and I tried to wipe them on my jeans surreptitiously. \n\n\"All mine?\" He growled. \"I like the sound of that.\" Oh my god, I was going to get a fucking erection if he didn't move away. Luckily for me he did, standing up straight and grinning. \"I'll get you another drink.\" He said, and disappeared. I tried to catch my breath. \n\n\"Who are you?\" An accusing voice said. I looked for the source. Some chick I'd never seen in my life had her arms folded and was staring me down. \n\n\"Who's asking?\" I fired back. \n\n\"Minne. I'm a friend of Manaia's. Who are you?\"\n\n\"Hector. A friend of Manaia's.\" She raised her eyebrow at me. \n\n\"Never heard of you.\" I glanced around to see if there was anyone I could get to save me. Nope. I sighed and shrugged at her. \n\n\"I don't know why you would have.\" I spotted Manaia returning and took the beer with relief. He sat next to me and sort of put his arm around me. I leant into him a fraction and he looked down at me with a goofy grin. \n\n\"I was just introducing myself to Henry.\" Minnie said. I rolled my eyes. I know she did that on purpose.\n\n\"Who?\" Manaia frowned at her and she gestured to me. I don't know what the hell I'd done but she was very unimpressed by me. Manaia rolled his eyes as he realised Minnie meant me and sighed. \n\n\"Give it a rest, Min.\" He swept me up- I couldn't work out how he did that- and I found myself escorted to his room. He sat me on the bed and locked the door behind us.\n\nMy heart started to beat really, really fast. I gulped as he sat next to me. \"I was meant to marry her.\" He said. \"Family friends, the whole thing... she was my first girlfriend- well, my only girlfriend. She had it all planned.\" I let him speak, although I was silently willing him to shut the fuck up about his ex, whatever gender, and start making out with me. \n\nHis hand slipped on to my knee and I glanced up at him. \n\n\"Hey pint glass.\" He whispered. \n\n\"You know I hate it when you call me that.\" I murmured. He pushed a strand of hair off my face and tucked it behind my ear. \n\n\"Good. I'll keep calling you that forever then.\" He smiled. \"You're really pretty when you're annoyed.\" He said. I rolled my eyes but he was smiling which meant I couldn't help but smile back. I was so hot, my mouth was so dry... and Manaia's eyes flicked to my lips. Oh god. Ok. \n\nI think I parted them, an invitation I didn't know I was giving. He moaned a little. I think I might have too, I'm not sure. \n\nAnd he pressed his lips to mine. So softly. So chastely. Just pressed them and moved away with a sigh. I opened my eyes, unaware that I'd closed them. \n\n\"That ok?\" He said. \n\n\"I'm not sure.\" I said slowly. \"Do it again.\" He wrapped his hands around my neck softly and leant in again. I definitely moaned that time, and as I parted my lips I felt his tongue gently probe them. I opened my mouth a little wider and he moved a little deeper. But just a little. He pulled away again. \n\n\"I've wanted to do that for so long.\" He said, sitting back. \"Years.\" \n\n\"Years?\" He chuckled. \n\n\"Since Year 10. We had PE together and you were a little shit to Ms Benson.\" I shrugged. I was always a little shit in PE. I fucking hate PE. \"You were the best at high jump and she was gonna make you go to regionals but you wore your hair in a bun and knocked the bar on purpose. I think I've wanted to kiss you ever since.\"\n\n\"You never...\"\n\n\"What? Said anything? You were straight. So was I. Easier for me to come out, apparently.\" \n\n\"Does everyone know about me?\"\n\n\"I think...\" He bit his lip. \"I think some people suspect.\" He said it gently but I knew what he meant. He meant yeah, you fucking queer, everyone knows. I sighed. My whole plan to blend in now, come out later, looked like it had gone sideways. Very sideways.\n\nManaia studied my face. \n\n\"Hec- it's not bad. You know that right?\"\n\n\"Obviously it's not bad. It's just... eye catching.\" Manaia rolled his eyes.\n\n\"You can't wear pink silk shirts to parties and tell me you have a problem with being eye catching.\" He played with my lapels and I cleared my throat. \n\n\"Well...that's different.\" Because I was only trying to catch one person's eye with the shirt. And it worked. \"I'm not gonna stay in the closet forever Manaia, I just hate being the centre of attention.\" \n\n\"You love being the centre of attention, you just think it's lame to admit that.\" Ouch. He was very perceptive. I frowned at him.\n\n\"I think I like you better when you shut the fuck up.\" He grinned. \n\n\"I can think of a way to occupy my mouth.\" \n\n--\n\nHe pressed me back against the bed and straddled me. He held me down with one hand and kissed me, his mouth so warm and desperate against mine. He was unbuttoning my shirt and running his hands over my chest, gently teasing my nipples.\n\n\"Fuck.\" He murmured and broke away for a second, admiring my chest. \"What the hell Hector? You're built.\"\n\n\"Dancer.\" I reminded him, pulling him back to me. He chuckled and ran his hands through my chest hair. \n\n\"You are so hot.\" He sighed, wrapping his hands around me. \"I can't believe what a hot little queen you are.\"\n\n\"Queen?\" I pulled away. \"Fuck you I'm a king.\" Manaia laughed and held me pinned down. \n\n\"Oh you're so wrong baby. You're my damn. Hot. Little. Queen.\" He punctuated each word with a kiss, so I couldn't be too mad. \"You and your ponytail. And your stupid stovepipes.\" I rolled my eyes.\n\n\"Just because I like to look nice.\" \n\n\"Exactly. Because you like to look nice. And you do look nice. You look fucking sexy.\" He started to undo my jeans as I writhed beneath him. \"Lift your hips.\" I obeyed and he shuffled my jeans down and suddenly his hands were in my underwear and he was dragging that down too... \n\n\"Oh my god, Manaia...\" He wrapped his hand around my dick and I sighed and he pressed his fingers into my chest. \n\n\"Oh holy shit Hector... you're hung.\" I chuckled and ran my hands through his hair. \n\n\"Um... thanks? Grew it myself...\" Manaia rolled his eyes and started kissing my chest, interlocking his hands in mine.\n\nMy stomach clenched as he started kissing a trail down my abs. \n\n\"Fuck...Manaia.\" I moaned. \n\n\"Oh fuck Hector.\" He glanced up at me. My hands rested in his hair and I gazed at him, awestruck. \"May I?\" He whispered. I laughed. \n\n\"Uh... yeah.\" \n\nHe clasped my hips between his hands and he gently grazed my dick with his nose as he lowered his head into my crotch.\n\n\"Wait!\" I whimpered. Manaia looked up at me. \n\n\"Everything ok?\" \n\n\"Any chance... you could do... whatever you're about to do with your shirt off?\" Manaia grinned and sat up. \n\n\"You want to see my chest?\" He teased. \n\n\"Obviously.\" I grinned at him. \"I'm not trying to hook up with you for your brains, impressive as they may be.\" \n\n\"Fuck you.\" He laughed and peeled his shirt off. He was exquisite. His muscles rippled with every move he made. \n\n\"Everything you hoped for?\" He glanced at me shyly. \n\nI lifted my hand up to feel him, and I ran my fingers down his hard chest. \n\n\"Um.\" I said. He was turning me stupid with how hot he was. \n\n\"How's this?\" He struck a pose, thrusting his hips forward and wrapping his arms around his head, flexing every muscle in his body. \n\n\"Fuck. Too much Manaia.\" I groaned. He smirked and ran his fingers up my thighs as he leant over me again. \n\nHe kissed the side of my dick softly. I moaned and my hand fell to his neck. He tentatively started to lick me, swapping between kissing and licking... he swirled his tongue around me and I gasped as he gently enveloped the tip in his mouth. \n\n\"Oh god.\" I whispered, my hand clenching in the hair at the nape of his neck. His hand made its way between my legs and fondled my balls. \"Oh fuck.\" I whimpered. He reached up with his free hand and started playing with my nipple as he lowered his head further on my dick. How the hell was he so good at this? \n\nI quickly put that out of my mind and let him manipulate my body, stroking me and sucking me, swapping to his hand from time to time and telling me how hot I was. I didn't last long, I couldn't. He knew what he was doing and I was just putty in his hands. \n\n\"Manaia I'm...\" He moaned and kept doing what he was doing and my abs clenched. I came in his mouth with a grunt, my hands clenching in his hair. He slid off me and kept kissing my abs, and back up to my mouth. \n\n\"You taste incredible.\" He whispered. \"I don't ever want to stop kissing you.\" I rolled my eyes. \n\n\"What a line.\" I whispered as I pressed my body up against his. He chuckled and held me tight against him. He rolled us over so I was on top and stroked up and down my arms. \n\n\"My turn?\" I suggested. Manaia shrugged. \n\n\"I mean... I wouldn't say no.\" He smiled. He sat up and kissed me again, pushing my shirt off my shoulders. He had one hand on the back of my neck and it was slowly drifting up. I sighed. \n\n\"Go on.\" \n\n\"Huh?\"\n\n\"I know you want to.\" I raised my eyebrows at him. He grinned. His hand snaked up the back of my head and slowly wrapped around the base of my ponytail.\n\nI guess maybe I didn't mind that so much, under the right circumstances. Actually, my body seemed to like it quite a lot. I let out a moan as he yanked my head back. \n\n\"Oh you like that.\" He grinned, holding my head back. \n\n\"Yeah.\" I panted. I couldn't even think of something witty to say... I was so turned on. He grinned and tightened his grip. \n\n\"Oh you really like this.\" He stroked my face. \"You like it a little rough don't you?\" \n\n\"I guess so.\" I muttered. \n\n\"Hey, Hector.\" \n\n\"Mmm?\"\n\n\"You want to suck my dick baby?\" I moaned. \n\n\"Uh... yeah.\"\n\nHe tugged on my hair again, harder than last time, and pushed me down. I fumbled with his jeans and pulled them off. I grinned and looked up at him. \n\n\"Commando? Always?\" He laughed. \n\n\"Had a feeling I was getting lucky tonight.\" \n\n\"That's fucking hot.\" I looked down at him. \"This is fucking hot.\" His dick was so hard, and dripping pre cum. I leant forward and experimentally licked it up. He moaned and thrust up. I bit my lip and looked at him. \n\n\"Everything ok?\" His hand drifted to my cheek. \n\n\"I... ummm... I've never done this before.\" I admitted. Manaia sat up. \n\n\"Oh shit I didn't...\" I pushed him back down. \n\n\"Don't do that. Don't act like you need to go slow or anything. Just, if I'm shit at this maybe give me some pointers.\"\n\n\"Well get to it then.\" I jerked my head up to tell him to shut the fuck up but he was smirking. Oh. Teasing. Ok. \n\nI lowered my head again and tried what he's done to me. Kind of making out with his dick, French kissing it and licking it. He moaned and I moaned back, encouraged by his enthusiasm. \n\nI sucked on his balls and he started breathing heavier.\n\n\"Fuck that's nice.\" He muttered. I stayed there until he shifted. \"Hands where your mouth is.\" He muttered. \"Mouth back on my dick.\" I obeyed him. His directness was such a turn on. \n\nHis hand sought out my head and he cupped it. He pushed me gently further down his shaft, as far as I could go... I choked a little and he eased off but I didn't mind. I kind of liked it. His other hand snaked in my hair and he held my head firmly as he started to thrust in my mouth. \n\n\"Fuck Hector.\" He moaned. His breathing was erratic and his abs were shaking. He moaned and everything clenched and then relaxed as he started to cum in my mouth, in hot, short bursts. I moaned around him. \n\nHe pulled me up and into another kiss. His skin was so hot against mine, softly burning to the touch. He reached for my hair again, this time pulling out my hair tie and shaking it loose around my shoulders. He ran his fingers through it. \n\n\"That's gorgeous.\" He said. \"You should wear it out.\"\n\n\"It's annoying.\" \n\n\"So why do you grow it long?\"\n\n\"To put in a ponytail so you can play with it.\" He grinned. \n\n\"Good. Wear it up for me everyday.\" \n\n\"Yes, sir.\" He laughed. \n\n\"Don't start something you can't finish.\" He warned me. \"I might like that a bit too much.\" I opened my mouth to retort with something witty when someone started knocking on the door. \n\nWe looked at each other and he sighed. \n\n\"I guess you're meant to be hosting this.\" I said. \"We should probably get out of here.\" He stroked my hair and bit his lip. \n\n\"But I still have an hour with you...\" He whined. Someone thumped on the door again and I heard his name being called. \n\n\"An hour of that sounds really annoying.\" He sighed. \n\n\"Hector... will you... after this... can I maybe take you to coffee or something?\" I smiled. \n\n\"Grounded Manaia. But maybe you could come over. If you wanted.\" \n\n\"I do want.\" \n\n\"Ok then.\"\n\n\"And... maybe I could... hold your hand. Just sometimes.\" I looked at him. \n\n\"Ok.\" I said slowly. \"We could do that.\" He nodded and sat up. I got off the bed and we started dressing ourselves. \n\nHe hesitated at the door and looked back at me. We were both fully clothed again, although my shirt was looking a little rumpled and I hadn't tied my hair up quite as tight as before. \n\n\"Hector?\"\n\n\"Yeah?\" He closed his eyes.\n\n\"Do you think... would you want to be my boyfriend?\" He mumbled. I blinked. \n\n\"Can we... start with the handholding and see where that goes?\" His face crumpled and I felt my stomach drop. Ah fuck. I didn't want to hurt his feelings. It wasn't like that.\n\nI grabbed his hand. \n\n\"That wasn't a no, Manaia.\" I pressed my lips to his fingers. \"I only came out to my parents this week. I wasn't planning on coming out until way after High School, you know that. Can you see why I might want to take things a bit slow?\" Manaia nodded. He was blushing a bit. \n\n\"Yeah, I get that. Sorry. We'll take this at your pace.\" I squeezed his hand and held on to it as he opened the door. He glanced at our hands and at me. He raised his eyebrows. I nodded and he grinned. \n\nHe might have thought I was being sweet but the reality was we were walking out of his room together either way. It's not like people would have thought anything else if we weren't holding hands. He grinned and led me out into the crowd and I tried not to care too much. \n\n--\n\n\"Good party?\" Mum asked as I slipped in the car an hour later. I shrugged. \n\n\"Yeah.\" She smiled. \n\n\"Get a chance to talk to that boy?\"\n\n\"Yeah.\" Mum nodded. She was used to my monosyllabic answers. I was the youngest of three boys, she knew we didn't always have a lot to say. \n\n\"Is it trendy at the moment to put your shirt on inside out like that?\" Mum asked mildly. I checked myself and almost died with embarrassment. How on earth had I not noticed that? \n\n\"Um.\" I said. She laughed and turned the radio up. \n\nWe pulled into the driveway and to my surprise Dad was up. He and Mum sat me down as I walked in and I glanced between them anxiously. \n\n\"Hector.\" Mum said. \"We just wanted you to know we notice you've been working harder this year. It was rough for all of us with your suspension but we can see you took it seriously and it's been nice to see you get your school work up to par. It's nice to see you going to parties and not coming home reeking of tequila.\"\n\n\"We're really proud of you.\" Dad said. \"You're a good kid.\" I blushed insanely red and waited for the floor to swallow me up. That was the lamest thing that had ever happened to me. \n\nI rolled my eyes and told them to go fuck themselves. \n\nI definitely didn't bawl my eyes out and tell them that I loved them and I was sorry for all the shit I put them through. ",
        "That would have been so fucking lame of me. \n\n\u2014-\n\nI looked for Manaia at school on Monday but I didn't see him. He wasn't in English class which was more disappointing than it had any right to be. \n\nI heard a whistle as I was heading for the bus after school and ignored it.\n\n\"Oi, pint glass.\" I heard him yell across the netball courts. I glanced up. He was leaning on his car with his hands in his pockets and motioned that I should join him. I found myself walking towards him in spite of myself.\n\n\"If you ever whistle at me again I'll cut you.\"\n\n\"No you won't. You like me too much.\"\n\n\"I'll cut my hair.\" I threatened. Manaia gripped his chest dramatically and fell against the hood of his car. \n\n\"No whistling. Got it.\" He nodded to the car. \"Lift home?\" I shrugged and climbed in. \n\n\"You weren't in class today?\" Manaia shrugged. \n\n\"Na.\" I raised my eyebrows. \n\n\"Na? What, had the sudden urge to skip a period after years on the honour roll?\"\n\n\"Maybe.\" I rolled my eyes. \"Or I had a Model UN debate.\" He glanced at me over the steering wheel. \"Fill in the blank with whatever you find sexier.\"\n\n\"Definitely Model UN.\" He laughed and placed his hand on my thigh as he drove. I tensed up for a second before relaxing. He looked at me sideways. \n\n\"Sorry. Is that ok?\" \n\n\"Yeah, yeah. Nice actually. Just unexpected.\" He squeezed my thigh. \n\nHe pulled up outside my house and sighed. \n\n\"I think I know the answer but...\" I held up my hand to shush him as I called my mother. \n\n\"Hey Mum. No, everything's fine. Look um, could Manaia come over? We're in the musical together and there's a scene we wanted- yeah. Yes. Ok. Ok Thanks Mum, love you.\" I shrugged at him. \"You can come over.\" He grinned. \n\n\"Didn't think you were the kind of person to check if a play date was ok?\" I shrugged. \n\n\"You wouldn't know because you're a goody two shoes but turns out trust is really hard to get back.\" Manaia reached out and gently stroked my hair.\n\n\"You're such a bad boy.\"\n\n\"I'm not! I'm just not...\"\n\n\"Good.\"\n\n\"I'm not smart and I like weed, fucking sue me.\" He shrugged.\n\n\"You are smart. You always have your nose in a book. And you're good at singing and dancing and like, art and fashion and stuff.\" \n\n\"Please, try and make me sound more gay- I think theres someone in the back row who doesn't get the picture.\" I quickly hopped out of the car and started marching up the path before he could drag me in with his eyes and say nice things about me. I could only take so much. \n\n\u2014-\n\n\"Nice place.\" He said. I raised my eyebrows at him and he looked away. Yeah, it is a nice place. But Manaia lives in a fucking mansion on the nice side of Karori so it sounds a little demeaning. \n\n\"Tea or coffee... or...\" I looked half heartedly through the pantry. \"Tinned tomatoes?\" He shrugged.\n\n\"What time are your parents home?\" He asked, trying to sound innocent. I glanced at him over my shoulder.\n\n\"Not till 6.\" He grinned at me over the kitchen counter and raised his eyebrows. \n\n--\n\n\"Well you have a type.\" He looked up at the poster above the bed as we lay next to each other.\n\n\"You can't compare yourself to Jason Momoa, Manaia, that's heretical.\" He grunted.\n\n\"You're right. My hair is too short.\" He grinned as I punched him. \"Ouch!\" He rubbed his side. \"Stronger than you look.\" \n\n\"I'll kiss it better.\"\n\n\"Please do.\"\n\nI grinned and rolled on top of him. He sat up so my legs wrapped around his thighs and he leant against my headboard. \n\n\"Hmmm.\" He said, looking at me thoughtfully. \n\n\"Oh no.\" I said. \"What does that look mean?\" He shrugged. \n\n\"I don't know.\" He said. \"I wondered...\" He shook his head. \"Nothing.\" \n\n\"Don't look at me like that and tell me it's nothing.\" Manaia grinned. \n\n\"It's just... it kind of turns me on how...you... how you're so... \" He was half smiling and looking off into the distance as he struggled for the word. \n\n\"Hot?\" I suggested. He looked at me slyly.\n\n\"Bad.\" He said, looking me dead in the eye. There was something in the way he said that, with a long vowel and emphasis on the 'd'. It sounded really sinful. I felt myself grow hot all over and start to get hard. \n\n\"Oh.\" Hmm. I'm never my wittiest around him. \n\nHe grinned and slowly untucked my shirt. He started to peel it off me and I obediently lifted my arms. \n\n\"Here's the thing about bad boys.\" He whispered. \"Bad boys like you.\" I bit back a moan. \"They'll be really fucking good boys if you treat them right.\" He growled as he discarded my shirt and kissed my neck. I couldn't help but smile. \n\n\"Manaia.\" I sighed. \"You don't know any bad boys.\" He ran his fingers over my abs and chuckled. \n\n\"I'm getting to know one right now.\" His hand found the back of my head and I heard myself moan as he pulled my head back. \"You're a bad boy aren't you Hector?\"\n\n\"Yeah.\" I mumbled. \n\n\"You think you need some punishment?\" \n\nThe hand that wasn't holding me at his mercy by my apparently erogenous hair was gently toying with my nipples. He was so distracting I could barely form a response. \n\n\"What does that mean?\" I managed to pant out. \"You gonna ground me? Because I have bad news...\" He chuckled. \n\n\"I'm not gonna ground you.\" He sat up suddenly, moving me with one hand in my hair and the other on my hips. Before I knew it I was on all fours, my back arched and my ass sticking out. Manaia rubbed my cheeks. \n\nI moaned into his touch, scared as hell about what was going to come next but willing. He leant over me and I tilted my head so I could feel his stubble against me.\n\n\"Gonna spank you.\" He whispered. \n\nI don't think I'd ever been so red, but for some reason my body encouraged him, because I moaned and stuck my ass out further. \n\n\"Would you like that?\" He whispered. \n\n\"Yeah.\" I mumbled. He moaned. \n\n\"Just ten.\" He said. \"Because it's your first time.\"\n\nHe peeled my jeans down to my thighs and ran his hands over my ass. His hand wrapped around my dick as he leant back. I'm not small down there but his hand was so big compared to mine I felt totally dwarfed. I moaned as he slowly stroked me. \n\n\"Count them.\" He demanded, and he leant back. \n\nHis hand was firm but not sore against me. The smack echoed around the room, only swallowed up by my moan as my head fell forward. Manaia jerked my head back and placed a firm hand on my back, a silent direction to keep it arched. \n\n\"What did I say?\" He growled.\n\n\"One.\" I whimpered. He stroked down the length of my spine. \n\n\"Good boy.\" He said. Oh no. I started to leak precum. That was just too much. \n\nI was a mess by the time he'd finished, I could barely hold myself up on my knees as he pulled me into him. \n\n\"Ten.\" I whispered shakily. He held me tight. \n\n\"Was that ok?\" He asked, stroking my hair. I managed to pull myself together just enough to roll my eyes. \n\n\"Believe me, you would know if it wasn't ok.\" His eyes flashed as he ran his eyes over my torso. \n\nI reached for him. I don't know how I'd left him fully clothed. I pulled his shirt off and pressed myself into his chest, feeling his warmth. He held me for a fraction of a second, his arms wrapping around me before we both broke apart and discarded the rest of our clothes. He ran his hands over me gently as I climbed back on top of him, circling my nipples, lightly dancing his fingers across an old scar. I cleared my throat. \n\n\"So...\" There was no way to say this that wasn't going to come out really awkward. I reached over him and into my nightstand rather than trying to say it out loud. I shrugged as I handed him the lube and condoms. \n\n\"Oh.\" He blushed. Amazing that I can make him blush. \"Oh fuck Hector.\" He groaned. \"Yes, god, please.\" He squeezed my hips and slowly reached for a condom. He bit his lip as he fumbled with the foil and I shuffled off him as he wrapped up. He glanced at me. \n\n\"Is it ok like this?\" I asked, meaning me riding him. I was so nervous as it was, I was scared that if he set the pace he might tear me in two and I could never face him again. \n\n\"Unhh. Yeah.\" He grunted. Hmm, maybe we both made each other stupid. He was so hard. So was I. He blushed as he looked at me. \"Fuck, I'm dumb. I jumped the gun.\" He glanced at the lube. \"I should have... \" He giggled. \"I'm really nervous.\" He admitted. \n\n\"It's ok.\" I touched his chest and reached for the lube. \"I think I can work this out.\" \n\nI squirted some in my hands and I used both hands on his dick, lubing him up. I bit my lip as I reached one hand behind me. Manaia was lying back, watching me intensely, like he was trying to commit the sight to memory. I cleared my throat. \n\n\"Feeling a bit um... exposed.\" I muttered. \n\n\"I'm not closing my eyes.\" He said huskily. Fair enough. I avoided his eye as I gently fingered myself to make sure the tension I felt wasn't going to mean my body was suddenly an impenetrable fortress. I could feel myself relax a little and I sighed and knelt over Manaia. He held my waist and I gripped his shoulder and he lay back and let me direct.\n\nHe moaned as I grazed my ass with his dick. I swallowed, and closed my eyes, working my way down his shaft. Oh. Oh fuck. I paused. This was... so much bigger than my fingers. He was barely touching me though. I worked my way further down and my eyes flew open as I was almost halfway there. His forehead was scrunched up and he was biting his lip hard. I breathed slowly.\n\n\"Um... I thought it was only meant to hurt on my end.\" He blinked his eyes open.\n\n\"Trying not to cum.\" He grunted. He frowned. \"Does it hurt? Are you oka...?\"\n\n\"Shut the fuck up.\" I growled. I closed my eyes and continued my descent until I found my ass was brushing against his thighs, and he was groaning. He stroked my thighs and ran his fingers over my hips as I caught my breath. Holy shit. I was losing my virginity to the most popular guy in school, not to mention whatever I said, the closest I'd ever get to Jason Momoa in my ass. \n\nI leant forward and gripped his shoulders as I started to move my ass. \n\n\"Oh god.\" He moaned. His eyes rolled back in his head and he clutched at the sheets. I moaned, my hard dick rubbing against his stomach- I was so scared I'd been going to go soft. I gripped him tighter and he responded, gripping my hips as I moved against him. I couldn't believe the whimpering and soft gasps I was making. \n\n\"You can... uh... fuck me.\" I was really gonna need to work on the dirty talk. Seemed to do it for Manaia though, he groaned and started thrusting into me gently. Oh. That was how it was meant to feel. Jesus fucking Christ why didn't I do this sooner. I moaned and he growled as he felt me relax on top of him. \"That... don't stop...that...\". He grunted in agreement. \n\nHe moved his hands to my ass and started squeezing it. He held me tight and started biting down on my shoulder- asshole. I tried to squirm away from him but he was intent on bruising me. Great. I was distracted by his hand drifting from my ass to my dick... oh no. I wasn't going to last.\n\n\"Manaia I...\" He grunted.\n\n\"I'm way too close\" He moaned. \"Don't say my name like that.\" \n\n\"Manaia...\" I gasped as I tensed up against him. My whole body went rigid and I swear time and everything stopped around me as I clenched his shoulders and threw my head back. He grunted. \n\n\"Shit, Hec...\" He gasped and I could feel him throbbing in me. He grunted and pinned me against him. \n\nWe panted and held each other tight. His hand drifted to my head and pulled my hair tie out, shaking my hair around my shoulders. \n\n\"Come to the School Ball with me?\" He asked. He had a really bad habit of asking me awkward things after we'd been fooling around. \n\n\"Uhh...\" We were interrupted by the front door slamming. Manaia sat up. \n\n\"Thought your parents weren't home till 6?\" \n\n\"Yeah, me too.\" I froze as there were two firm knocks on my door. Oh that's right. Hamish. My older brother was coming home on Uni break for a week. Oops.\n\n\"Don't come in!\" I yelled desperately. I hadn't locked the door, because I'm an idiot. I heard him laugh on the other side of the door. \n\n\"Gross.\" I glanced at Manaia. \n\n\"My brother.\" I muttered. \"I forgot, I totally forgot.\" Manaia stroked my hair. \n\n\"Totally thought you were an only child. I always wanted brothers.\"\n\n\"Have mine, they're arseholes.\" \n\n\"More than one?\"\n\n\"Two. Henry and Hamish.\" I could see that ticking over and his mouth curled up. \"Don't fucking say it. It's not my fault my parents apparently have a hard on for alliteration.\"\n\n\"It's cute.\" I laughed. \n\n\"I'd like to see you tell them that.\"\n\n--\n\nI slunk into the living room and cleared my throat. Hamish turned to me and grinned.\n\n\"Did you get shorter?\"\n\n\"Did you get uglier?\" \n\n\"Hope I didn't interrupt your wank too bad.\" I winced as the toilet flushed. Hamish widened his eyes. \n\n\"Don't be an ass. Don't tell Mum and Dad.\" I growled. \n\n\"Is that a real life living, breathing boy?\" Hamish was the only person I'd ever really intentionally come out to. He knew my plans were to stay a virgin until I could move cities and download Grindr and become the whore I suspected I was deep down. I shrugged as Manaia entered the room. \n\n\"This is Manaia.\" I nodded at him. \"Manaia, this is Hamish, my older brother.\"\n\n\"No shit.\" He said. Yah. We're all basically identical except Hamish and Henry ended up being stupidly tall, like 6'4, and I'm a midget. Life isn't fair. They shook hands and I could see Hamish looking him over carefully. Ugh he was such an older brother sometimes. \n\n\"How did you meet?\" Hamish asked, pretending to sound casual.\n\n\"Just school.\" I said as Manaia spoke over me.\n\n\"We're in the musical together.\" Hamish raised his eyebrow and turned to me with a giant grin.\n\n\"Musical, huh?\" \n\n\"Fuck off.\" I glared at Manaia. \"Fuck you.\" \n\n\"Get over yourself.\" Manaia laughed. \"You're so talented.\" Hamish mimed vomiting but I could see him smiling. \n\n\"I was gonna make dinner.\" Hamish stretched out. \"Treat for the folks. You staying for dinner Manaia?\" I narrowed my eyes at Hamish. Manaia would definitely be staying for dinner if he could. I glanced at him and he was already nodding, delighted.\n\nI sighed. I was so gonna be dragged out of the closet this year. Kicking and screaming. \n\n5.\n\n\"So you and Manaia huh?\" I turned to the guy sitting next to me. Some Year 12 Photography student I barely knew. \n\nI sighed- only it was totally, totally my own fault.\n\nWe had three performances, and obviously things were a little charged between Manaia and I, but nothing anyone had commented on. I'd managed to keep the fact that I could dance as well as sing a secret so no last minute embarrassing tap dance solos for me, and the fact that I couldn't actually act was sort of irrelevant because the framing was basically me singing to and about Manaia and I could do that with ease. \n\nA few people knew we'd hooked up, including, naturally Connor and Edgar and all Manaia's close friends- so the Rugby, Netball, Soccer and Debate teams... and god knew who else. \n\nNo one knew we were dating... although by dating I really mean he came over a few days a week and we had an afternoon snack and fucked. I would have gone out for coffee, or to a movie with him, and I think Mum and Dad would have let me even- they liked Manaia. He was a good influence. I didn't want to start it though. \n\nA coffee date would mean he would start going on about the School Ball again, eventually. He thought we would be cute, that people would love us. He said that even if there were some jerks we were the brave ones and history would applaud us. Nice in theory but realistically he wasn't the one who was going to be pushed around and mocked for the rest of the year.\n\nHe was kind enough to listen to me at least, and he never told his friends exactly how much we meant to each other. Unfortunately he wasn't subtle enough. He was always staring at me. He would make excuses to be near me. When I told him off for being too obvious he went too far in the opposite direction and everyone assumed we'd had a fight. They all knew he loved me. I knew he loved me. I could see it in his eyes. \n\nAnd it overwhelmed me on the last night of Jesus Christ Superstar. The final curtain fell. Everyone clapped. I turned to Manaia and he grinned and before I knew it my tongue was down his throat and my legs were wrapped around his waist. My cast mates groaned. \n\n\"About time.\" Someone muttered. I didn't care. \n\nI did care when I realised the curtain was rising again. I jumped out of his arms- but not fast enough, and I think my heart stopped beating as I heard the wolf whistles and nervous laughter from the crowd. Manaia, show off, took my hand and pulled us into another bow. \n\nSo now literally the whole fucking school knew. And Hamish and Henry and Mum and Dad- and Manaia's Mum and Dad and his Step-Mum. And Mr Marsh. And whoever this guy was. I glared at him.\n\n\"What about me and Manaia?\" I grunted. He shrugged. \n\n\"Just. I dunno. I wanted to say thanks I guess. It kind of made it easier for me when two of the coolest guys in school started making out.\" I looked at him sideways. He seemed sincere. \n\n\"Uh...\"\n\n\"I thought I'd have to wait till Uni to come out but I told my parents. They were cool about it.\"\n\n\"Uh...\"\n\n\"So um yeah. Thanks. See ya.\" He slipped away and my mouth dropped open. I sat there, slack jawed with my book dangling from my hand until I felt a touch on my shoulder. \n\n\"Hey pint glass.\" I passed him my book wordlessly. \"The Odyssey? Thought you would have read this already.\"\n\n\"New translation.\" I muttered. \n\n\"You ok?\" I shook myself back to life and wrapped my arm around Manaia. He seemed surprised but leant into it. \n\n\"Yeah mate.\" I took my book off him and pointed to the cover. \"That blue.\" I tapped it. Manaia frowned. \n\n\"What about it?\"\n\n\"For my corsage.\"\n\n\"For your what?\" He frowned at me, confused. \n\n\"You're an idiot. My corsage.\" I gestured to my wrist. \"You show up to my house in a nice suit and give me a small flower thing for my wrist. If you want to look really cute together you wear a matching one on your pocket.\" Manaias face slowly broke into a smile. \n\n\"We're official?\"\n\n\"Yeah I think I fucked up that 'playing it discreet' thing pretty monumentally.\" I looked at him and bit my lip. \"It's kind of a dumb fantasy of mine, going to the Ball. If you still want to, I mean. I understand if you found another date...\"\n\n\"So, blue?\" He confirmed, touching my wrist. \n\n\"That blue.\" I reiterated. \"Take a picture maybe.\"\n\n--\n\n\"You have never looked gayer.\" Edgar said as we arrived. I shrugged and looked around. \n\n\"At least you can spot us.\" Manaia grinned. We looked great, definitely the best dressed and that included all the girlfriends of all the guys in our year. My suit was powder blue and old fashioned, with slightly flared pants. His, to my surprise, was pale pink. I definitely saw him as a classic penguin suit kind of guy but my god if he wasn't disarming in pink. \n\nI had my hair up in a bun and I could see he was itching to pull it out from the minute he showed up. He'd ignored my advice about the corsage and got me one that was soft pink, to match him. \n\n\"So everyone knows you're mine.\" He said. As if anyone could mistake us for anything else right now. He wore a boutonni\u00e8re- the exact shade of blue I'd told him. He'd been paying attention. We were a perfect pair. \n\nThe dance was ok. I mean, I was used to drinking and smoking so it was pretty tame. I guess it was a little fun, taking stupid photos and dancing to god awful music. I even got a little carried away and ended up swing dancing with one of the guys from the chorus. I caught Mr Marsh's eye and grinned at him as his jaw fell open. \n\nHe sidled up to me as I took a break.\n\n\"You bastard.\" He said. I didn't know teachers were allowed to call students bastards. \"And I specifically designed choreography where you wouldn't have to dance.\" I shrugged. ",
        "\"Have I not been through enough this year?\" I muttered. \n\nApparently not. \n\nThe night was drawing to a close and awards were being handed out. Best dressed, which went to some jock and his girlfriend who I begrudgingly admitted looked pretty fetching in gold sequinned outfits. There was a Breakfast Club themed series of awards and Connor, to my shame, won the Criminal which should have by rights been mine since I was definitely the closest to being expelled. He'd pulled the most outrageous senior prank though. No one knew how he had gotten a sheep. Let alone onto the 6th floor of Tower Block.\n\nManaia was called out as the Athlete and then again as the Brain and I rolled my eyes at his popularity, secretly proud of him and by extension of myself for being the one he wanted. And finally Lucas, the chair of the dance committee stood up.\n\n\"Special award this year.\" He said. \"We don't normally do this because we're Kiwi, not American, but I liked the ring of it. Tonight it gives me great pleasure to announce or very first Prom King. A lad who inspires us on the field, in the classroom and sometimes even on stage. In fact some of us might find him a bit too inspirational on stage, eh Hector...\" I covered my face with my hands as Lucas continued to wax lyrical about my boyfriend and I ignored it. Of course he would be fucking Prom King. He's so disgusting. \n\nManaia rolled his eyes with faux modestly as his name was announced and he stood up as the crowd erupted. I suddenly saw exactly how this was going to play out and turned to Edgar with a groan. \n\n\"Oh no.\" I said, already turning bright red. For someone who had every intention of finishing High School under the radar, this was really not what I had planned. He grinned at me. \n\n\"And this year's Prom Queen... Not exactly outstanding in sports or studies but I think we can agree our time here has been more entertaining with this fella causing trouble. I think you'll all be completely unsurprised when I announce... Hector Raleigh.\" I hung my head. \n\n\"Go on.\" Edgar nudged me in the ribs. \"Get up there and own it.\" Reluctantly I stood up and tried to waltz up the stairs with a bit of decorum. Manaia pulled me into his arms and kissed my forehead. \n\n\"Told you you're a queen.\" He whispered in my ear. \"My over dramatic bad boy queen.\" I rolled my eyes as we bowed. I grinned at the crowd and I had to admit, as absolutely unbearably lame as it was, I did kind of like being the centre of attention."
    ],
    "authorname": "DrHenderson",
    "tags": [
        "anal",
        "gay male",
        "gay romance",
        "highschool",
        "jock",
        "virgin",
        "romance",
        "romantic",
        "first time"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/centre-of-attention-1"
}