{
    "title": "Life after the Lottery Ch. 74",
    "pages": [
        "Thanks, everyone, for hanging in there. I had a delay because my laptop bricked, and that took three weeks to recover. I am moving to wrap up everything. A few things I have moved into the last several chapters because you need to know about them. I think four more chapters until the end...it depends. Copyright LATL 2021 (Dec. 2021)\n\nLife after the Lottery, CH 74\n\nThings begin to slow down\n\nWe slept in Saturday since we didn't get home until well after 2:00. My cell phone rang and woke me up. I reached over and picked it up off the night table.\n\n\"Hello...\"\n\n\"Hey, it's Bob. James, that photo of Ms. Williams is fantastic!\"\n\n\"They are ready? What time is it?\"\n\n\"7:00. They are finishing up the 8 X 10's. I am having 200 made of the one where she is winking at you.\"\n\n\"I hope that is enough.\"\n\n\"I also had them make two 24 X 36-inch prints and mount them. I thought we could set those up at the media table.\"\n\n\"Good idea.\"\n\n\"They will be finished about 9:30. I'll grab all the prints and go home and clean up. What time do you want to meet at the store?\" Bob asked.\n\n\"We told them noon. They are opening the store at 10:00 for an exclusive sale. Can you be there by 11:30?\"\n\n\"I will be there. I'll grab the prints when they finish and head home. I have been here all night helping.\"\n\n\"Thanks, Bob. I owe you.\"\n\nI hung up.\n\n\"What did he want?\" Dawn asked.\n\n\"He said the photo of Linda looked great. He has been at the lab all night helping them make prints. He'll be at the store at 11:30.\"\n\n\"I guess we better get up and get ready,\" Dawn said. \"Sam, Amy...time to get up.\"\n\n\"....emm...\"\n\nWe were all supposed to be at the store when it opened to meet all the invited guests.\n\nI showered with Dawn, then shaved before I went down to fix breakfast while they finished showering. When they came down about 8:00, everyone else was helping me with breakfast.\n\n\"Are you three modeling tonight?\" Mom asked.\n\n\"Not tonight. Linda has professionals,\" Amy replied.\n\n\"You three looked very professional last night...and hot,\" dad said.\n\n\"That was fun!\" Samantha exclaimed.\n\n\"Yes, you three did look very hot!\" Charlie added.\n\n\"Wait until you see the store today,\" Samantha said and giggled.\n\n\"We have to be there this morning,\" I told them. \"You all can come before the fashion show and do some shopping,\" Dawn told them.\n\n\"We will stop by and see what you have. Then we will go out to dinner, then come back,\" dad said.\n\n\"Good idea.\"\n\nThey finished, and I cleaned up while my girls went back upstairs. When I finished, I went up.\n\n\"What are you all wearing?\" I asked.\n\n\"Our nice suits this morning. We are taking other outfits for tonight,\" Dawn replied.\n\n\"What jewelry are you wearing?\"\n\n\"I am wearing my diamond choker and bracelet Linda gave me and my diamond earrings. The girls are wearing some of my other diamonds.\"\n\n\"I'll get my briefcase, and you can put all of that in it. What dresses are you all wearing tonight?\"\n\n\"You'll see.\"\n\nI knew that wasn't a good answer. I put on an Armani suit and put my tux in a bag, and took it out to the Escalade with some other things. After an hour or so, Dawn came out wearing a nice suit. It was white with a sequin jacket, and she looked hot in it. She was carrying a garment bag.\n\n\"Let me take that to the truck.\"\n\n\"I got it,\" she said.\n\nThe girls came down carrying their garment bags. Samantha had on a dark green dress that was a little short. Amy was wearing a blue dress. It was short too.\n\n\"Are we ready to go?\" I asked.\n\n\"We are ready,\" Dawn said.\n\n\"We'll see all of you later,\" I told our parents.\n\nI grabbed my briefcase with their jewelry in it, and they followed me to the Escalade and hung up the garment bags in the back. We all got in and headed off.\n\n\"You three look very nice.\"\n\n\"Thank you,\" Dawn replied. \"You always look good in your Armani suits.\"\n\n\"Maybe I can get them a little cheaper now. I didn't think our parents would want to stand around all day,\" I said.\n\n\"They're good. They'll probably fuck each other the rest of the day,\" Dawn said, and we heard Amy and Samantha laughing in the back.\n\nWe pulled up to the front of the store at 9:45. The valets were there, and they took the SUV after we got everything out. A guard unlocked the door and let us in.\n\n\"Where will you be changing?\" I asked.\n\n\"On the third floor,\" Dawn replied.\n\nI took the garment bags and my briefcase and headed up to the third floor. When I got off the elevator, I saw Walt.\n\n\"Hey, Walt.\"\n\n\"Hi, James. Let me help.\"\n\n\"I know why I am here. Why are you here?\" I said as he grabbed the garment bags.\n\n\"Checking on things. Ms. Williams asked me last week to find some guys to model some of the expensive suits. They are going to escort some of her models.\"\n\n\"Great. I need to hang those up in the back.\"\n\nWalt followed me to the back of the store.\n\n\"The show last night went well,\" he said.\n\n\"It almost killed me. The press was all over me wanting a picture of Linda.\"\n\n\"She did look hot.\"\n\nI hung up the garment bags and went to the office and opened the safe, and put their jewelry in it.\n\n\"I am guessing it will be well after midnight before this floor clears out again tonight,\" Walt said.\n\n\"More than likely.\"\n\n\"I have men arriving at midnight to start tearing the stage down. I hope by morning, we have the place cleared out.\"\n\n\"Don't kill yourself. We have all week. I'll need to pack all my camera gear up in the morning if that is okay.\"\n\n\"I'll make sure they don't mess with your gear. It will take all week to get things set up,\" Walt said.\n\nWe walked back to where all my camera gear was, and I picked up my 35mm and flash.\n\n\"I'm going down to the second floor to take some photos. You will want to come, Walt.\"\n\nI looked at my watch, and it was after 10:00. We got on the elevator and went down to the second floor.\n\n\"Damn,\" came from Walt when he saw all the young ladies walking around in lingerie and skimpy swimsuits.\n\n\"Like our uniforms?\" I asked.\n\n\"Hell yes!\"\n\nThere were already around 30 people walking around shopping. The ladies were looking at lingerie. The men were looking at the salesladies. It appeared that Brenda had decided the ladies wearing the see-thru stuff would be okay for today. All the ones wearing swimwear had on skimpy thongs. I walked around and took some photos for a while and had a few laughs, then went down to the first floor.\n\nThere were about 40 people looking around. I saw Linda and Rachel standing and talking to someone. I walked over to them and took their picture.\n\n\"Good morning, James,\" Linda said and walked to me and kissed me.\n\n\"Good morning.\"\n\n\"Things are going well. The limos are bringing people from the hotel.\"\n\n\"I'm sure the locals will come in after lunch,\" I said.\n\n\"Did I surprise you last night?\"\n\n\"A little. The press covered me up, wanting to know when they could get a photo. Poor Bob worked all night with the processors to get them made. You owe him. They will be released at noon.\"\n\n\"How did the picture look?\"\n\n\"I haven't seen it, but Bob called me at 7:00 this morning and said it looked hot. You should be a big hit with the press. You made a big splash last night.\"\n\n\"I must have. We have been fielding calls all morning wanting a print.\"\n\n\"They will be here at 11:30.\"\n\n\"I hope I don't regret it!\" Linda said and laughed.\n\n\"I hope not because I have an idea,\" I said.\n\n\"What?\"\n\n\"I want a photo of you in that outfit from last night sitting on the hood of the Ferrari. I'll put it on the main page of the website to advertise our give-away.\"\n\n\"Maybe!\"\n\n\"No maybe...\"\n\n\"I think I am starting to regret it...\"\n\nBy 11:00, there were about 100 people in the store. I was walking around taking photos as they talked and shopped. We had waiters walking around with glasses of champagne for all the customers. About 11:30, I headed toward the front doors to meet Bob. He was just coming in with some boxes. There was a crowd of about two dozen people standing around the media table. I pulled him past them.\n\n\"This is a zoo,\" he said.\n\nHe handed me a box that had 8 X 10's in it. I opened one and looked at the print.\n\n\"Wow,\" I said.\n\n\"Do they want to put the big prints up?\" Bob asked.\n\n\"Let's ask.\"\n\nLinda was standing in front of the table with her people, talking to the reporters. I walked up behind her.\n\n\"I need to ask you something,\" I said.\n\nShe turned, and I pulled her away.\n\n\"Bob had them make several large prints from your exhibition last night. Do you want to put them up on the easels?\"\n\n\"May as well do it. Wait until noon when you hand out the 8 X 10's,\" Linda said.\n\n\"Okay.\"\n\nShe turned to go back to the crowd.\n\n\"Ms. Williams! Are you going to model any more lingerie!\" I heard someone yell.\n\nI grabbed one of her marketing people at the table and explained things to her, and gave her the big box Bob of prints.\n\nAt noon, they were all yelling and asking when the prints would be ready. Two of the marketing people set the large photos on the easels, and they all looked and took photos with Linda standing next to them.\n\n\"We need a copy!!\" They were all screaming.\n\nThree marketing people at the table began handing them out. I stood and watched the feeding frenzy. Some of them were stuffing the prints into FedEx envelopes and running out the door. One lady walked up to me after she grabbed several prints.\n\n\"I saw you taking the photos last night. What is your name?\" She asked.\n\n\"James Smith. With Allure Photography,\" I added as she wrote.\n\n\"Thanks. I have to get on a plane,\" she said and left.\n\nAfter things died down, I got a chance to look at the photo of Linda. She was winking and looked hot. I looked closer at the 8 X 10 and could see Linda's huge nipples through the sheer bra.\n\n\"Oh, boy,\" I said.\n\nI looked at the tiny triangle of thin lace covering her pussy. It didn't cover much, and it was obvious she was shaved bare. Linda looked amazing in all the black lingerie, the fur, diamonds, and the stilettos. I knew this photo would be all over the press.\n\n\"I think I showed more than I meant to,\" Linda said when she walked up.\n\n\"Too late now. You look very hot and sexy.\"\n\nI had my camera and was walking around taking more photos. A few people had picked up leftover photos of Linda, and they were asking her to autograph them. I walked over to her.\n\n\"Come with me a minute,\" I said.\n\nI walked Linda over to the large photos of her. I had her stand next to one, and I took several shots.\n\n\"You are going to be a big hit,\" I said.\n\n\"Emmm...\"\n\n\"Will you model some lingerie for me? Something we can put up in the store?\"\n\n\"I guess. And some in the ladies' clothes too.\"\n\n*****\n\nAbout 5:00, the store was starting to fill up with well-dressed people for the cocktail party and fashion show. I saw Dawn talking to Linda in her area of the store and walked over.\n\n\"People are showing up early,\" I said.\n\n\"Word got out about the ladies in lingerie!\" Linda said and laughed.\n\n\"Looks like many are looking at your nice clothes too.\"\n\n\"They are. We have already sold a lot.\"\n\n\"I need to find the girls so we can go and get dressed for the cocktail party and the show,\" Dawn said.\n\n\"Okay. I'll wait a bit. You three can sit and enjoy the show tonight,\" Linda said.\n\nDawn walked away.\n\n\"Get plenty of pictures during the cocktail party,\" Linda said. \"They will want them for the newspapers.\"\n\n\"Will do.\"\n\n\"How are sales going for you?\" Linda asked.\n\n\"Brenda said great.\"\n\n\"Any problems with the men looking?\"\n\n\"No, she said it was going well. The salesladies are convincing the men how nice their wives will look.\"\n\nLinda and I talked for a bit. Then I walked around to take more pictures. About 5:30, I went and put on my tux and returned to taking pictures.\n\n*******\n\nAt 6:30, people were still shopping, so they let them until almost 7:00 when the cocktail party started on the third floor. I made my way up there to grab some wine. I was at the bar getting a glass when I heard Dawn.\n\n\"Get us a glass, please,\" she said.\n\nI turned to look. Dawn was standing with Samantha and Amy. All three of them had on identical black silk suits with tux jackets. But none of them had on tops under the jackets. The jackets only had two buttons, and they were well below their tits. All three of them were showing a lot of skin. I ordered three more glasses of wine.\n\n\"You three look nice,\" I said.\n\n\"Linda's people ordered these suits from her line of merchandise,\" Dawn said. \"Have you eaten today?\"\n\n\"Not yet.\"\n\n\"There are some sandwiches back in the office.\"\n\nDawn was wearing the diamond choker and bracelet that Linda had given her, along with diamond earrings. She looked very elegant. Amy and Samantha had on diamonds also and looked great. I handed them the glasses of wine.\n\n\"Oh, my! You three look gorgeous,\" Linda said as she walked up with Rachel.\n\nLinda had on a long black gown that exposed a lot of her cleavage. Rachel had on a long white gown that was also split down the front. I turned and ordered her and Rachel some wine.\n\n\"You two look hot,\" I told them.\n\n\"My clothes look good, don't they,\" Linda said.\n\n\"Are these all from your store?\" I asked.\n\n\"Yes. Don't they look nice,\" she said, looking at Dawn. \"Maybe you three should model these outfits tonight.\"\n\n\"All of you do. Let me get a picture of the owners,\" I told them.\n\nThey all lined up, and I took several photos.\n\n\"I thought you three would look good in that black tux. I have one just like it,\" Linda said.\n\n\"They do look hot,\" I added.\n\n\"James...I want you to get a photo of the four of us wearing this black tux,\" Linda said. \"That is something we should put up in the store.\"\n\n\"I like that idea,\" I said.\n\n\"James, if Walt is here, we need a picture of all of us,\" Linda said. \"Sam and Olivia too.\"\n\n\"I saw Walt changing into his tux while I was putting mine on.\"\n\n\"Find him and Sam and Olivia and get someone to take the picture.\"\n\nI walked around to look for Walt. I finally found him and his wife talking to some people.\n\n\"When you are free, walk over toward the bar. We want a picture of all of the owners,\" I told him.\n\n\"Is Sam here?\" He asked.\n\n\"I know where to find him.\"\n\nI called Sam, knowing he was on the 2nd floor looking at the ladies. I told him to come up to the third-floor bar.\n\nI made my way back to the bar area and waited. Our parents and Amelia were talking to Linda and Rachel. Once Walt and his wife and Sam and Olivia showed up, I had my dad take pictures of all of us.\n\nWe all mingled until it was time to find a seat. My girls sat, and I got up on my perch to take the photos.\n\n\"Are you ready?\" I asked Bob.\n\n\"Ready to go.\"\n\nThe lights went down, and Linda walked out to applause.\n\n\"Welcome again, everyone! We hope you took advantage of our preopening sale. So far, what do you think?\"\n\nEveryone applauded.\n\n\"Tonight, you will get to the see the lines of high-fashion ladies wear we will be carrying. There is nothing like our store in this region. We are planning on the entire group of stores becoming a lifestyle center for everyone.\"\n\nMore applause.\n\n\"I want to introduce you to one more of our owners.\"\n\nLinda turned, and Walt came out on stage.\n\n\"Meet Walt Marcum. He is the majority owner of the future men's store that will be located where we are now. Dr. Smith poached him from Saks Fifth Avenue in New York. He is the driving force behind what will be an exclusive men's store that carries all the best fashions suits for men. Once he has things up and running in a week, there will be custom tailoring available from New York tailors he brought with him. You will get to see some of the designer men's suits tonight as some nice-looking men escort the ladies on the runway.\"\n\nThere was some applause.\n\n\"Dawn, Samantha, and Amy, please stand up. The three of them and their husband, Dr. James Smith, are the owners of the lingerie and swimsuit parts of this store. All three of them are wearing clothes from the high-fashion area. Don't they look hot!\"\n\nThere was a lot of applause.\n\n\"Now, sit back and enjoy the show!\"\n\nThey walked off stage, and for the next two hours, Bob and I went through our routine. When the show was over at 10:00, I climbed back down and sat.\n\n\"I'm tired,\" I said to Bob.\n\n\"This has been a lot of work.\"\n\n\"Who has been running your store?\"\n\n\"My wife and son.\"\n\nWe sat while everyone got up and mingled. I finally grabbed my 35mm and went to take more photos.\n\n*****\n\nAbout 12:30, things were winding down some. Dawn and the girls were talking to some press, and Linda and Rachel were laughing with the brothers from France that designed the exclusive swimwear and lingerie.\n\nI saw Sherri and Brenda talking to a group of people and walked over to them.\n\n\"Are things going well?\" I asked.\n\n\"Great!\" Brenda replied.\n\n\"I need to get a picture of you two with the designers from France.\"\n\nI followed Sherri and Brenda over to the brothers.\n\n\"Let me get a photo of everyone,\" I said.\n\nSherri and Brenda stood with the two guys. Then I had Linda stand with all of them.\n\n\"Please send us a copy of the photo,\" one of the brothers ask.\n\n\"No problem.\"\n\nThey all went back to talking and laughing. I saw Walt and his wife talking to a couple and went to check on him.\n\n\"James. I would like for you to meet Chuck Winston. He represents many of the designers of menswear we will be carrying. I know him from New York.\"\n\n\"Hello, Mr. Winston,\" I said and shook his hand.\n\n\"Just call me Chuck.\"\n\n\"He is the owner of the men's designer activewear store that is opening in our group of stores,\" Walt said.\n\n\"I have been so busy I am not sure what all the other stores are going to be,\" I said.\n\n\"Ms. Williams contacted me several months ago on Walt's recommendation. I know Walt from New York. After talking to Ms. Williams, I talked to Walt. I think what you are doing here is a good idea and will attract buyers from the entire region,\" Chuck said. \"I decided instead of just being a buyer, I would open a store. I could never do that in New York.\"\n\n\"We hope we attract buyers from all over the region,\" I replied. \"We are happy you are here.\"\n\n\"You will. After talking to Ms. Williams' people and Walt, I decided to open a store and invest in my retirement. I have the store next to the fur store. We will be carrying fashion activewear and sportswear for men. We will be opening next weekend.\"\n\n\"That sounds great. Will that store be large enough?\" I asked.b\n\n\"Yes, it will. Walt and I were just discussing showcasing each other's clothing in our stores.\"\n\n\"If Walt thinks that is a good idea, I am glad we can do it.\"\n\n\"It will be a good mix,\" Walt said. \"We can show some of his items and recommend them to our customers, and he will show some of our wonderful suits and recommend them.\"\n\n\"Sounds great. Let me get a shot of all of you.\"\n\nWalt pulled his wife in, and I got a photo of the four of them.\n\n\"Chuck, I will send you a copy of the photo,\" Walt said.\n\n\"Thanks. Walt, I think you are much happier now that you are out of New York.\"\n\n\"I am going to enjoy my retirement here!\" Walt exclaimed.\n\n\"In ten more years, I may move here with you!\" Chuck said.\n\n\"Chuck? How long will you be in town?\" I asked.\n\n\"I am staying the week and working until after the Grand Opening Saturday.\"\n\n\"Good. I'll come by and get some more photos for the website.\"\n\nI left them talking and walked around. There were still small groups of people talking and drinking.\n\nAbout 1:00, Dawn found me.\n\n\"They are about to close everything down,\" she said. \"Our parents have already left.\"\n\n\"Good, it has been a long day.\"\n\nLinda's marketing people began walking around to everyone still there, telling them things were closing down. Everyone began to leave slowly. By 1:30, the only people still there were Sherri, Brenda, and my girls. Linda and Rachel were still talking to the guys from France.",
        "I gathered up all the film from the evening and put it in my camera bag to take with me. I would have to come back early in the morning and get all my camera gear out of Walt's way.\n\n\"We are ready to go,\" Samantha said as she walked up.\n\n\"I have to come back early to get all my camera gear. Are you going to help me?\"\n\n\"Sure.\"\n\nI ran my finger down her chest and between her tits and pulled a little on the edge of the jacket.\n\n\"I like the jacket.\"\n\nI wrapped an arm around Samantha, and we headed toward the others.\n\n\"You looked like a high fashion business owner tonight,\" I said to Samantha.\n\n\"I hope this works out great. You shouldn't have given Amy and me part of the business.\"\n\n\"I want you two to learn about finances and business. I think it is going to work out well.\"\n\nWe stopped at the group.\n\n\"Are we ready to go?\" Dawn asked.\n\n\"I am,\" Samantha replied.\n\n\"I guess it is all over,\" Linda said.\n\n\"Walt has a crew that is starting to take down the stage,\" I said. \"They will be here all night.\"\n\n\"I guess we can go then,\" Linda replied.\n\nMy girls went with me to get their clothes and my briefcase. Linda and Rachel came with us to grab a few things.\n\n\"Things went very well,\" Linda said.\n\n\"They did,\" Dawn replied.\n\n\"James, when will you have photos for the press?\" Linda asked.\n\n\"When do you need them?\"\n\n\"Monday...morning.\" Linda smiled at me.\n\n\"I'll have them.\"\n\nWe all made our way to the elevator and went down to the first floor. When we got off, I stopped and talked to one of the security guards we had hired to keep an eye on things while Walt's crew went in and out. After that, we headed to the front door.\n\n\"We will see you all tomorrow,\" Sherri said.\n\n\"Okay,\" Linda replied.\n\nBrenda and Sherri left and headed toward their cars.\n\n\"Let me go get the truck,\" I said.\n\nI went out the front door and walked to the Escalade, and got in. I started it so it would heat up. I sat for a few minutes before I drove up to the front door. One of Linda's Tahoes was waiting behind her limo. I watched as Linda and Rachel came out with the two guys from France and got in her limo, and drove off.\n\nThe security guard opened the door for Dawn and the girls. I helped them load everything.\n\n\"Is Linda taking them over to the hotel?\" I asked after we got in.\n\n\"Nope,\" Samantha said and giggled.\n\nWe drove to the house. I pulled up to the front door, and we all got out and went inside.\n\n\"I'm tired,\" Samantha said.\n\n\"I think we all are,\" I replied.\n\n\"Are we going back tomorrow?\" Amy asked.\n\n\"I have to go back early to pick up all my camera gear,\" I said.\n\n\"What is early?\" Dawn asked.\n\n\"By 8:00. I need to get it all back to the house, then go to the film processor in town to drop off the color film. Samantha is going to help me.\"\n\n\"Then you two sleep in her room. Amy and I are going to sleep late,\" Dawn said. \"We will be going back about 10:30.\"\n\n\"What time do they close tomorrow night?\"\n\n\"7:00 or 8:00. Whenever it empties out.\"\n\n\"...of fuck!...\" we heard Ann yell.\n\n\"I guess they are still up,\" Dawn said.\n\nWe all went upstairs. I went with Samantha to her room.\n\n\"Are you sure you will be able to get up and go with me?\" I asked.\n\n\"Just wake me in time.\"\n\nI took off my tux and carried it to my bedroom to hang up. Dawn and Amy were getting undressed.\n\n\"Good night, you two,\" I said and kissed them.\n\nSamantha was getting into bed when I got back to her room. I got in bed with her.\n\n\"Good night,\" I said and kissed her.\n\n\"I wish Grace hadn't left to stay with a new friend this weekend,\" Samantha said.\n\n\"Dawn said she felt like she would be imposing with our parents here. She tried to get her to stay, but I think she has found a new boyfriend.\"\n\n\"Maybe she will bring him by.\"\n\n\"Go to sleep...\"\n\nWe held each other's naked bodies and went to sleep.\n\n*****\n\nAfter a few hours of sleep, I was up at 6:00. I took a shower and went to the kitchen to start the coffee. Just before 7:00, I went back upstairs and woke Samantha up.\n\n\"Hey, I let you sleep late. Get up and put some clothes on. I have coffee ready.\"\n\n\"Do we have time to fuck?\"\n\n\"No. When we get back.\"\n\nSamantha got up and went to her bathroom. I went back to the kitchen and made some toast for us. My dad came out and got some coffee.\n\n\"Were you all up late?\" I asked him.\n\n\"Well...yes...\"\n\nSamantha came down a few minutes later. She had on sweats, and all her long red hair was still damp.\n\n\"Eat something, and we will go,\" I told her. \"Grab a coat since your hair is wet.\"\n\nWe left a little after 7:45.\n\n\"Tired?\" I asked as we drove.\n\n\"A little.\"\n\n\"Once we get everything loaded, I will drop the film off.\"\n\nSamantha and I got to the store and began breaking down all my camera gear. We gathered up some and loaded it on the freight elevator and went down to the first floor.\n\nWe saw Linda and Rachel at the backdoor.\n\n\"What are you two doing here?\" I asked.\n\n\"Unloading a Ferrari,\" Linda said. \"I told you I would have it here before the store opened.\"\n\nSamantha and I carried my gear out the back door, and they were unloading the red Ferrari. We loaded my gear into the Escalade as they moved the Ferrari inside. We watched as they rolled it out to the first floor, where they had made room upfront.\n\n\"Are you going to announce the giveaway today?\" Samantha asked.\n\n\"You bet. We need more press!\" Linda exclaimed and laughed. \"We started a rumor last night there would be a big surprise today.\"\n\nSamantha and I went back to the third floor to load up more of my camera gear. We took another load down the freight elevator. Linda and Rachel were talking to one of the guys that helped with the Ferrari. We took my gear out to the SUV and loaded it.\n\nLinda and Rachel came out and stopped at my truck.\n\n\"Are you coming back to the store today?\" Linda asked.\n\n\"No. I have to drop off the color film when we leave here. I will be making prints all day. I think Dawn and Amy are coming.\"\n\n\"I wanted a picture of people looking at the Ferrari when I announce the giveaway.\"\n\n\"Hang on.\"\n\nI got my 35mm and flash from the Escalade and made sure it had film.\n\n\"Give this to Dawn. She can take the photos.\"\n\n\"Okay.\"\n\nLinda pulled an envelope out of the back pocket of her blue jeans.\n\n\"Give this to Bob,\" she said and handed me the envelope. \"I will talk to you later.\"\n\nLinda and Rachel got in her Diablo. They drove off with a black Tahoe following them.\n\n\"I bet they didn't get any sleep,\" Samantha said as we headed back inside.\n\n\"Why?\"\n\n\"They took the two guys from France back to her place last night!\"\n\n\"Oh. Good for them.\"\n\nSamantha and I finally got everything loaded by 10:00. I drove across town to the processor. I called them so they would come to the door.\n\n\"Hello, Dr. Smith,\" one of the guys said as he let us in.\n\n\"Good morning. I have a bunch of color film for you. I need it proofed too. Can you get it done quickly today?\"\n\n\"Sure.\"\n\nWe went in, and he wrote it all up.\n\n\"It should be ready by 4:30,\" he said. \"I'll call you.\"\n\n\"I'll be here to pick it up. Tell the guys thanks for working long hours recently.\"\n\n\"They can always use the overtime.\"\n\n\"If you will have my bill ready for all the work when I come back, I'll pay you.\"\n\n\"I'll have it ready. Thank you, Dr. Smith.\"\n\nSamantha and I left and headed home.\n\n\"You need to get some sleep,\" Samantha said.\n\n\"I'll grab a few hours after we unload, then I will have to come back and pick up the film and proofs. After that, I need to process a bunch of black and white film. I expect you to help me.\"\n\n\"If I get some sleep.\"\n\n\"I'll walk you through processing the black and white film while I work on color prints.\"\n\nOnce we were back at the house, it took us about 30 minutes to unload everything with dad and Charlie's help. After that, Samantha and I went up to her room and got back in bed.\n\n\"I need sex before I can get any sleep,\" Samantha said as she kissed me.\n\nShe kissed her way down and worked on my cock until it was nice and hard. Then she climbed on top of me and worked my cock into her pussy, and slid down.\n\n\"Emmmm...this will help me sleep...\"\n\nI watched Samantha as she slowly worked her pussy on my cock.\n\n\"I saw all the salesladies. The ones wearing lingerie were wearing the see-thru items,\" I said.\n\n\"Brenda and Sherri thought they would let them do what they wanted this weekend.\"\n\n\"I'm surprised you didn't want to go and work today.\"\n\n\"Emm...\"\n\nI ran my hands over Samantha as she took her time until she got off.\n\n\"Emmmm, that felt good.\"\n\nShe moved off my cock and went to work sucking on it until I filled her mouth full of cum. She kissed her way up and snuggled up next to me.\n\n******\n\nI woke up when I smelled lunch cooking. I looked, and it was almost 1:30.\n\n\"Sam...\"\n\n\"...emmm...\"\n\n\"Are you ready to get up and help me? They are cooking lunch.\"\n\n\"I guess...\"\n\nI sat up on the side of the bed. Samantha headed to the bathroom. I walked down to my bedroom and grabbed some sweats. Samantha was coming down the hall in a long sweatshirt.\n\n\"Come on, sleepyhead,\" I said.\n\nWhen we went downstairs, Ann and my mom were making lunch while the others talked at the bar.\n\n\"Did Dawn and Amy go to the store?\" I asked.\n\n\"Yes, they left about 11:00,\" Amelia told me.\n\nSamantha and I sat and ate.\n\n\"Samantha and I have to process a lot of film and make some prints,\" I said as we finished. \"We will be downstairs.\"\n\n\"Okay. We'll clean up from lunch,\" mom said.\n\nWe went down to the darkroom to get started. I loaded the black and white film on the reels and put them in the tanks. Once the lights were back on, I explained to Samantha how to set the timer and when to dump chemicals out and put more in. We worked for several hours to get all the black and white film finished. They had called and said the color film would be ready about 4:45.\n\nWe finished in the darkroom a little after 4:00 and headed up the stairs. Samantha giggled when we walked into the kitchen. My dad was behind Amelia as she held herself up on the sofa and was jamming his cock in her.\n\nWe walked over and stood and watched. I heard my mom scream from the big bedroom. We had not seen her and Charlie.\n\n\"Let's go shower. Then we can go pick up the film,\" I said to Samantha.\n\nThe two of us went up to our bedroom and got in the shower.\n\n\"You need to remember when you fuck anyone this weekend, they need to be wearing a condom,\" I said.\n\n\"I know. Your dad can use some of yours!\" Samantha said.\n\nWe had dried off and were sitting on the edge of the bed.\n\n\"If I tell them they have to use a condom, they will want to know why?\" Samantha said.\n\n\"Just tell them you are off the pill. I told my mom.\"\n\n\"What did she say?\"\n\n\"She was a bit surprised.\"\n\n\"James? Are you going to fuck your mom again this weekend?\"\n\n\"I don't know.\"\n\nWe put our sweats on.\n\n\"Are you ready to go?\" I asked.\n\n\"Yes.\"\n\n\"I need to get something out of the safe.\"\n\nAfter I had what I needed, we went out and got in the Escalade and headed to town. I parked in front of the processor and called them. We waited until they unlocked the door.\n\n\"Is it all ready?\" I asked.\n\n\"Yes, sir. They just finished the proofs.\"\n\nWe waited a few minutes until they brought everything out. I wrote them a big check.\n\n\"How many of you worked this weekend on my stuff?\" I asked.\n\n\"There were five of us.\"\n\nI pulled an envelope with $5,000 in it out of my coat.\n\n\"Hand this out, and tell everyone thanks.\"\n\n\"Thank you, Dr. Smith.\"\n\nWe grabbed everything and headed back to the house.\n\n\"How long will it take to make all the color prints?\" Samantha asked.\n\n\"A few hours.\"\n\nWhen we walked into the house, everyone was sitting around in robes.\n\n\"We have to make some prints for the newspaper and magazines,\" I told them.\n\nSamantha had gone to the kitchen to get us some sodas. Then we headed down the stairs.\n\nI walked Samantha through making the black and white prints and let her print all of the copies and put them in the chemicals as I instructed her. That took us over an hour.\n\n\"We can start the color prints while those wash,\" I told her.\n\nWe put all the black and white chemicals and trays up and looked over the color proofs.\n\n\"You two come up and get some pizza,\" we heard over the intercom.\n\n\"Let's take a break.\"\n\n\"What are these prints for?\" She asked.\n\n\"Some are for the media. I'll make some bigger prints another day to put up in the store.\"\n\nWe went up and grabbed some pizza before heading back down to the darkroom after 8:00.\n\nWe selected about 30 different shots and went to work making multiple copies of them. Once we had the first few correct, we knocked out the rest in a few hours. Samantha had spread out the black and whites in the basement to dry.\n\n\"I think we are finished,\" I said.\n\n\"Are the color prints for the newspaper?\" Samantha asked.\n\n\"That and probably magazines.\"\n\n\"Hmmm. You printed ones of the three of us.\"\n\n\"You three looked sexy and gorgeous.\"\n\n\"I'm going to get some sleep.\"\n\nWe went upstairs, and Samantha headed up to her room as she pulled off her top. It was almost 10:30.\n\n\"Did you two finish?\" My dad asked.\n\n\"Yes. I'll have to take all the prints to Linda in the morning. Samantha went up to get some sleep.\"\n\nI sat down next to Ann.\n\n\"Are you going to be busy all week, son?\" Mom asked.\n\n\"I'm done for a few days.\"\n\n\"Good.\"\n\nDad got up and headed toward the kitchen.\n\n\"When will Dawn and Amy be back?\" Mom asked. \"It's late.\"\n\n\"I don't know. They were having a sale for all the people that came to the fashion show this weekend. If they are not back by now, they must be hanging out with Linda, Sherri, and Brenda.\"\n\nCharlie walked up.\n\n\"Hey, James, can I borrow a car in the morning? I need to run out and get something.\"\n\n\"Sure. The keys to the Escalade are over there.\"\n\n\"How long are you three going to stay?\" I asked Ann.\n\n\"We'll fly out Wednesday.\"\n\n\"Good. We haven't had time to visit.\"\n\nI heard Dawn and Amy coming in the door from the garage. They came to the den.\n\n\"How did things go?\" I asked.\n\n\"It was pretty busy, especially the ladies selling lingerie. Everyone didn't leave the store until after 9:00,\" Dawn said. \"We stayed and talked to Sherri and Brenda and helped restock the store.\"\n\n\"I'm sure it was busy,\" dad said and laughed.\n\n\"Amy even helped sale some,\" Dawn said and giggled.\n\n\"Oh?\"\n\n\"Show them,\" Dawn said.\n\nAmy pulled off her long winter coat. She only had on a white teddy. One that was completely see-thru.\n\n\"Did you sell much?\" I asked her.\n\n\"Oh, yes!\" Amy said and laughed.\n\n\"Is Sam asleep?\" Dawn asked.\n\n\"She must be,\" I replied.\n\nAmy hung her coat up and came and sat with us.\n\n\"I'm going up to check on her,\" Dawn said.\n\n\"Honey, did you have any problems with the men?\" I asked.\n\n\"Not really.\"\n\n\"What does that mean?\"\n\n\"Well...I had more than one lady that ran her hand over my tits and said I looked nice. One man ran his hand over my tits after his wife did, but most of the men rubbed my ass when their wives weren't looking.\"\n\n\"Emmm...\" I groaned.\n\n\"Don't worry about it. I made them pay for it. Every time they rubbed my ass, I handed their wife something else to buy.\" We all laughed.\n\n\"Good girl,\" I said.\n\n\"Hey, I had an idea. Brenda said she was going to get the staff business cards. What if we had trading cards made?\" Amy said.\n\n\"What do you mean?\" I asked.\n\n\"I mean trading cards...like baseball cards. If they would let you take some pictures of them in the swimsuits and lingerie, we could have trading cards printed. On the back, we could have all their stats.\"\n\n\"You mean measurements?\"\n\n\"Yes!\"\n\n\"I like that idea,\" mom said.\n\n\"The customers could collect them each time they came in the store. We could make them look like real baseball cards.\"\n\n\"Hmmm...\"\n\n\"I think that is a good idea,\" dad said.\n\n\"Run it by Brenda and Sherri,\" I said.\n\nWe talked about Amy's idea and how things had gone for a while.\n\n\"Where did Dawn go?\" Ann asked.\n\n\"She fell asleep in my bed,\" we heard Samantha say.\n\nI turned to look, and she was coming down the stairs naked. She walked to the kitchen and grabbed some wine, and came and sat next to me.\n\n\"Were you working in the store?\" She asked her sister.\n\n\"A little.\"\n\n\"Couldn't you sleep?\" I asked Samantha.\n\n\"I'm a little wired.\"\n\n\"You have classes tomorrow.\"\n\n\"I know. I'll go back to bed after my wine.\"\n\n\"Well, I think it is time we all went to bed,\" mom said.\n\nEveryone got up and headed to bed. I found Dawn on Samantha's bed. She had fallen asleep. Samantha got in bed with her.\n\n*****\n\nMonday morning, I was up by 6:00 to get everything ready. Mom sat next to me while I drank some coffee.\n\n\"Did you get some rest?\" Mom asked.\n\n\"Some. Things will slow down now. I have to run the prints to Linda. I'll be back soon.\"\n\nAfter I finished eating by 7:30, I grabbed all the prints and got in my Vette, and headed to Linda's office. I parked under the building and rode the elevator up to her floor.\n\n\"Hello, Dr. Smith,\" her receptionist said.\n\n\"Hello, Virginia. Is she free? I am dropping off some photos.\"\n\n\"Yes. Go on in.\"\n\nI opened her office door and walked into her big office.\n\n\"I hope you have prints,\" she said.\n\n\"Big box full.\"\n\nLinda looked through the photos for a few minutes.\n\n\"These are perfect.\"\n\nLinda picked up her desk phone and pushed a button.\n\n\"I need you to take something over to marketing for me, please,\" she said into the phone.\n\nLinda hung up, and her receptionist came into the office.\n\n\"Virginia, please take this box over to marketing and hand it to Ed. Nobody else, just him.\"\n\n\"Got it.\"\n\nShe left the office.\n\n\"I hope that gets the press off our back,\" Linda said as she sat behind her desk.\n\nI sat in a big chair across from her desk.\n\n\"I think that should be enough copies, but if you need more, let me know. How did the announcement go?\"\n\n\"There were about 60 people in the store, and we made an announcement for everyone to come to the 1st floor. We told the press they could have their cameras there, so they all gathered around the Ferrari while I waited. I made the announcement that we would give the Ferrari away on New Year's Eve to a customer. The press ate it up. They took plenty of photos of me and the car.\"\n\n\"Let's hope it pulls in plenty of people.\"\n\n\"I'm sure it will. James...I was showing your mom and Dawn's mom some clothes when they were there...did I hear her correctly when she was telling Ann about you fucking her?\"\n\n\"Yes.\"\n\n\"Wow. How was it?\"\n\n\"Great.\"\n\n\"She was talking, and it sounds like all of you are fucking each other.\"\n\n\"Our parents are doing each other and the girls.\"\n\n\"What about Dawn?\"\n\n\"She does her mom.\"\n\n\"Damn! You all are kinky!\"\n\n\"Come by for a while, and we will show you kinky!\" I said and laughed.\n\n\"I'm sure you would!\"\n\n\"I know my dad and Dawn's would enjoy doing you and Rachel.\"\n\n\"They would?\"\n\n\"Linda, my dad thinks you are incredible. Also, everyone decided we would all go to Hawaii for June. Are you and Rachel going to come for a while?\"\n\n\"Will you have room?\"\n\n\"The house has ten bedrooms. I think so!\"\n\n\"I am going to try for two weeks so Rachel and I can have a vacation,\" Linda said.\n\n\"Let me know when you plan on being there. Can you bring Patricia if her husband is gone, as always?\"\n\n\"Well, that won't be a problem for her anymore.\"\n\n\"Why?\"\n\n\"The CIA wanted Gregg to move to some country, he wouldn't say where, for a year. Pat told me that the two of them didn't think it would be a safe thing for him to do. The CIA told him he had to move or else.\"\n\n\"And?\"\n\n\"Starting next week, he will start working as my new personal security. I finally talked Rachel into letting someone take over for her.\"",
        "\"That's great. So, your new personal security will need to come to Hawaii with you and bring his wife?\"\n\n\"You got it!\"\n\n\"You'll be okay with all the men in my family having sex with you and Rachel if you want?\"\n\n\"Sounds like fun!\"\n\n\"It should be.\"\n\n\"I am going to take care of a hotel and the expenses for Jeanine and Stan so they can have a nice two-week vacation too.\"\n\n\"I wish we could get them to join us. Jeanine is hot.\"\n\n\"Yes, she is. Maybe one day.\"\n\n\"Make sure you reserve something for all of you to get around Hawaii. I have got to call and start the ball rolling for all of us,\" I said.\n\n\"How long are your and Dawn's parents going to stay?\"\n\n\"They are going at the same time we are and staying for the month.\"\n\n\"You all should have a great time.\"\n\nLinda looked down at her desk calendar for a minute.\n\n\"We'll fly out the night of the 12th of June,\" she said. \"We could stay until the last day, and all of you fly back with me?\"\n\n\"Well...I have some plans for when we fly out on the 30th.\"\n\n\"Are all of you going somewhere else?\"\n\n\"I have a surprise for Dawn. There is going to be a reason that the four of us need to take a different flight from everyone else.\"\n\n\"Okay. When are all of you flying out?\"\n\n\"I am hoping I can get our parents into town by May 30th. That should give me the choice of flying out early or a little later on Sunday.\"\n\n\"You'll be busy making plans. I need to call and book a room for Jeanine and Stan in Maui.\"\n\n\"How nice of a room?\" I asked.\n\n\"Why?\"\n\n\"I have been in the penthouse of the Hilton on Black Rock Point. It is incredible. It even comes with a 24-hour butler.\"\n\n\"Oh! That would be perfect! Hilton at Black Rock Point. Got it.\"\n\n\"Let me know if you need more prints. I'm heading home.\"\n\n\"Okay. I'll talk to you later.\"\n\n\"Oh. One more thing. I will be taking photos of the outside of the stores night Friday. I also need to get some shots of the Ferrari. Bring that outfit you modeled to the store about 9:00. Bye,\" I told Linda.\n\n\"James!\" Linda exclaimed as I walked out her door.\n\n*****\n\nI drove back to the house. Everyone was in the den talking when I walked in.\n\n\"Did she like the photos?\" Samantha asked.\n\n\"Yes, she did.\"\n\n\"I have got to get ready for school.\"\n\n\"Me too,\" Amy said.\n\nThe two of them got up and headed upstairs.\n\n\"What do all of you have planned for the day?\" I asked.\n\n\"We are going back to visit all the new stores,\" mom said.\n\n*****\n\nAfter everyone got ready and headed out, Dawn and I were alone in the house.\n\n\"Well, we have that project wrapped up and off the ground,\" I said to Dawn.\n\n\"What else do you have to do?\"\n\n\"I need to make a handful of prints, but I am finished for now.\"\n\n\"Good. You need to take a break,\" Dawn said.\n\n\"You do too.\"\n\n\"I have to start working on my research plans.\"\n\n\"Finish your outline, and let me look it over. Linda said the two of them and Patricia and Gregg are going to join us in Hawaii for the last two weeks.\"\n\n\"How is Gregg getting that much time free?\"\n\n\"Linda hired Gregg to become her personal security. Rachel finally agreed.\"\n\n\"Good.\"\n\n*****\n\nWhen our parents came back about 2:30, they had plenty of packages. Charlie and Dad went into my studio later. We all sat and talked for a little bit, and then mom went to get some wine.\n\n\"Where did your dad and Charlie go?\" Mom asked as she walked back to the den.\n\n\"They are in his studio looking at his video camera,\" Amelia said.\n\n\"I hope they don't get any ideas,\" mom replied.\n\n\"It's probably too late,\" Amelia said.\n\n\"Why?\" I asked.\n\n\"Charlie has already said he wants to record Ann and me.\"\n\n\"Doing each other?\" I asked.\n\n\"That, and some friends,\" Amelia added.\n\n\"I better go and check on them,\" I said and got up and went to the studio.\n\nDad and Charlie were looking over my video camera.\n\n\"Is this hard to operate?\" Dad asked.\n\n\"No, it is pretty easy. Just turn it on and look into the viewfinder. You turn this to focus.\"\n\n\"I may have to get me one,\" dad said.\n\n\"That was pretty expensive, dad. Dawn bought it for me.\"\n\n\"How much?\"\n\n\"A bunch. What do you want a video camera for?\"\n\n\"Same reason you want one...so I can record your mom.\"\n\n\"Doing what?\"\n\n\"Fucking...\"\n\n\"I am thinking of getting a new one also,\" Charlie said.\n\n\"The newer ones are pretty high quality now,\" I replied.\n\n\"Why was this one so expensive, son?\"\n\n\"It is professional-grade, and Dawn bought all the accessories and lenses to go with it.\"\n\n\"I'll look at some that are not so costly.\"\n\n\"If you two want one, let me check with the guy we got this one from. I am sure he can get something high-end without spending so much money.\"\n\n\"Don't you two get any ideas,\" mom said when she walked in.\n\n\"Why not?\" Dad asked. \"You haven't said anything about the cameras all over the house here.\"\n\n\"It's not my house.\"\n\n\"You wouldn't care,\" dad said.\n\n\"Well...as long as you record something...I want to watch...\"\n\n\"Like what?\" Dad asked.\n\nMom came to me and rubbed my cock through my sweats.\n\n\"I would just like to have some special videos,\" mom added as she rubbed.\n\nMom got on the floor on her knees and pulled my sweats down wrapped her hand around my cock.\n\n\"Wait!\" Dad said as he messed with the camera. \"Okay.\"\n\nHe held the video camera up and pointed it at mom. She smiled at him, then turned and slowly slid her mouth over the end of my cock.\n\nMom was taking her time. She would suck and deep throat me, then slide her mouth to the end and lick slowly. Ann and Amelia came in and were watching.\n\n\"Ann, you want to help?\" Mom asked.\n\nAnn laughed and got down on her knees next to mom.\n\nDad and Charlie were laughing as dad got close-ups of them sucking my cock. The two of them took turns for a long time.\n\nMom was working her mouth fast on my cock now. She would suck and stroke it with her hand. Ann was just watching. Over and over, she would suck and deep throat me. My mom did know how to suck a big cock. She was working her mouth faster on my cock as I watched. She slid her mouth off and stroked a minute.\n\n\"Come for me, son.\"\n\nMom slid her mouth back on my cock and went to work hard. I held back as long as I could.\n\n\"Ahhhh!\" I let out and let go.\n\nMom slid her mouth on my cock as I pumped her mouth full of cum.\n\n\"Emmm...emmm...emmmmm!!\"\n\nMom kept working her mouth on my cock as it jerked.\n\n\"Emmmmmm!!\"\n\nI just watched as mom kept sucking my still hard cock.\n\nShe slid her mouth off and stood in front of me as she held my cock.\n\n\"Are you going to fuck me again, son?\"\n\n\"Of course, I will. Do you want dad to record it?\"\n\nShe smiled at me. \"Sure!\"\n\nMom kissed me and walked out of the studio.\n\n\"Ann...let me record you and James having sex,\" Charlie said.\n\n\"Okay.\"\n\n\"Not in here. Dawn would kill us if we got her white bed messy,\" I said.\n\n\"Yes, I will!\" Dawn said from the doorway.\n\nI took Ann's hand and led her to one of the bedrooms. She crawled onto the bed and pulled her legs up, and spread them.\n\n\"Hang on!\" Charlie said as he got next to the bed with the camera.\n\nI crawled over Ann and grabbed my cock, and slid it into her pussy.\n\n\"Emmmmmm...you always feel so good inside me,\" Ann said.\n\nI kissed her and held myself up, and slowly worked my cock in her.\n\n\"This zoom is nice,\" Charlie said.\n\nCharlie stood at the head of the bed so he could get a better shot.\n\nAnn smiled at me as I slowly worked my cock in her pussy.\n\n\"Charlie...\"\n\n\"Yes, honey?\"\n\n\"Make sure you record everything...maybe you can learn something!\"\n\nMom and dad laughed.\n\nI looked at Ann's still hot body. She lifted her legs up and wrapped them around my back.\n\n\"Nice and slow,\" she said.\n\nCharlie was moving around and recording. He leaned in and got some close-ups of my cock working in Ann's pussy. Ann didn't say anything. She just smiled at me.\n\n\"It is so nice to feel you inside of me and not just feeling you inside of Dawn.\"\n\n\"I hope this is better.\"\n\n\"Much better!\"\n\nAnn closed her eyes, and I kept slowly working my cock in her. Ann was so much like Dawn. I could feel her energy, but didn't push her, just felt her.\n\nAfter a while, I sped up.\n\n\"Emmmm...yes...\"\n\nAnn just savored the feelings as I took my time for a while. When I felt her getting aroused, I sped up. She looked into my eyes and smiled.\n\n\"You know just what to do.\"\n\nAnn tensed up a few minutes later and came.\n\n\"Ohhhhhh...yes...\"\n\nI pushed my cock in deep and held it there.\n\n\"What can I do for you now?\" I asked her.\n\n\"Fuck me...fuck me hard...\"\n\nI gave Ann what she wanted for a long time. I thrust into her hard and deep as she moaned. Charlie kept recording.\n\n\"Oh, yes, James!! Fuck me!! Fuck me hard!!\"\n\nI jammed into her harder. Charlie was recording her tits bouncing around as I drove into her.\n\n\"Ohh...yes...you feel so good inside me!!\"\n\nAnn was using her legs to pull me in hard each time I thrust into her.\n\n\"Ohhh...ohhh...ohhh!...ohhh!!...OHHH!!!\"\n\nAnn started jerking as she came.\n\n\"Ohhh...fuck!!!\"\n\nAnn kept jerking as she came over and over. She thrust her pussy up and screamed. I let go and filled her full of cum. When we were finished, she just looked up at me.\n\n\"Ohhhh...wow...\"\n\nI kissed her again.\n\n\"Oh, that is so good.\"\n\nCharlie turned the camera off and sat on the edge of the bed.\n\n\"You definitely enjoyed that,\" Charlie said.\n\n\"Oh....I did!\" Everyone laughed. \"Wow...that was great.\"\n\n\"It looked like it,\" mom said.\n\nI slid my cock out of Ann and leaned down and kissed on her tits, and licked her nipples for a few minutes. She rubbed my head as I started kissing my way toward her stomach. I kissed her stomach and kissed my way down to her mound and licked and kissed her there for a few minutes. She had a nice smooth mound like Dawn's.\n\n\"Emmm...that feels so good...\"\n\nI moved a little and kissed the top of her slit.\n\n\"Ohhhhhhhh...\"\n\nI worked my tongue between her pussy lips until I found her clit.\n\n\"Ohh nooo!!\"\n\nI circled her clit with my tongue.\n\n\"James!!\"\n\nI kept circling her clit for several minutes.\n\n\"Oh fuck!! Ahhhhh!!!\" Ann screamed and thrust her hips up as she came hard.\n\n\"Fuuuck!!!\"\n\nI placed my mouth over her pussy and worked my tongue into her cum filled pussy.\n\n\"James!!!\"\n\nAnn thrust her hips up repeatedly as I tongued her pussy.\n\n\"Ohhh...fuuuuuuuuuuck!!!\" She screamed and gushed.\n\n\"James!! Stoooop!!\"\n\nI grabbed her legs and drove my tongue in deeper.\n\n\"Ohhhhhhhhh!!!\"\n\nAnn jerked and thrust her pussy up as she came several more times.\n\n\"Jaaaammmmesssss!!! Stooooop!!! Pleeeeease!!!\"\n\nI took my mouth off her pussy and moved back up, and placed it over hers. Ann slid her tongue into my mouth and pulled my head to her, and held it there for a few minutes.\n\n\"Oh...fuck...Dawn told me about you doing that to her...wow...that was incredible.\"\n\n\"That is only for the women I love,\" I told her.\n\nAnn smiled again, then pulled me back down and kissed me for a minute. I laid next to her.\n\nIt was quiet for a minute.\n\n\"Charlie...you have something to live up to now,\" Ann said.\n\n\"Don't get any ideas,\" Charlie said.\n\n\"Why not?\" Ann asked him. \"It wouldn't kill you!\"\n\nI laid next to Ann for a few minutes.\n\n\"I need to get cleaned up,\" Ann said.\n\nI got off the bed and helped her up, and we went to the shower.\n\nI was soaping up Ann's tits as she washed me.\n\n\"Ann....don't push Charlie to do that.\"\n\n\"James...that was so sexy...and arousing. Dawn told me she just asked you to do it, and you did.\"\n\n\"It's just for the ladies I love.\"\n\nAfter we rinsed off, Ann grabbed my hard cock.\n\n\"Do you like my long wet hair too?\" She asked.\n\n\"Yes, I do.\"\n\n\"Dawn told me about that too.\"\n\nAnn moved to her knees and took her time sucking my cock until I filled her mouth full. She stood up, and I kissed her.\n\nWe got out of the shower, and I asked her to let me dry her off. Once we were done, we walked back into the bedroom. Everyone had left, so we walked out to the den. Mom was sitting with dad and Charlie as they sipped some wine. I went to the kitchen to get Ann some wine, and we went and sat with the others. We sat and talked until Samantha and Amy came in.\n\n\"I guess we could start dinner,\" mom said.\n\nMom and Ann got up with Dawn and headed to the kitchen. Amy told Samantha about her trading card idea.\n\n\"Hmmmm...\" came from Samantha.\n\n\"What?\" Amy asked.\n\n\"I think they each need a card wearing different ingerie and swimsuits.\"\n\n\"That would work,\" Amy replied.\n\n\"I wonder if any of them would pose naked?\" Samantha asked.\n\n\"I think that would be too much,\" I said.\n\n\"No...what I was thinking...if they would...they could only give that card out if a customer bought so much, say $10,000 worth of swimsuits and lingerie.\"\n\n\"You might have a good idea,\" Amy replied.\n\n\"I'm sure we could do that. Not all...or any of them may pose naked,\" I said.\n\n\"I'll talk to Sherri,\" Samantha said.\n\n\"You can talk to Sherri, but unless all of them will do it, no.\"\n\nAmy and Samantha talked and laughed about the idea.\n\nWe all talked until dinner was ready. I helped them set everything on the bar for the others to come and get it.\n\n\"Hey, Sue?\" Ann asked.\n\n\"Yes?\"\n\n\"I would really like to watch you and James.\"\n\n\"Okay.\"\n\nWe all got some food and sat down someplace. I was sitting at the bar with Dawn, Ann, and my mom.\n\n\"Sue? Have you and James had sex?\" Ann asked.\n\n\"Well...he fucked me for the first time the last time we were here.\"\n\n\"How was it?\"\n\n\"Fantastic!\"\n\n\"You would be okay if I watched?\"\n\n\"Sure, Ann, but...is Dawn going to fuck Charlie?\" Mom asked.\n\n\"I don't know.\"\n\n\"Would you be okay if she did?\"\n\n\"If that is what she wants to do,\" Ann replied.\n\n\"I would want to watch that,\" mom said.\n\nThe four of us talked and ate for a while.\n\n\"Dawn, those diamonds on your stomach looked great when you were modeling lingerie,\" mom said.\n\n\"Make Larry get you some,\" Dawn replied.\n\n\"I think I am a little old for that.\"\n\n\"No, you're not,\" Dawn said.\n\n\"Honey...do you think you would ever let your dad do that?\" Ann asked.\n\n\"If he wants to, sure.\"\n\n\"I think he would...if you talk to him.\"\n\n\"I'll talk to him...but he has to go down on me first,\" Dawn said, and we all laughed.\n\n\"I think he would like that!\" Ann exclaimed and laughed.\n\n*****\n\nLater, everyone was bringing their dishes back to the kitchen.\n\n\"Honey? Dawn said I should get some diamonds for my belly button and pussy like hers,\" mom said.\n\n\"You should! They look hot.\"\n\n\"And my belly button?\"\n\n\"That too! You too, Ann and Amelia!\"\n\n\"Don't give them any ideas,\" Charlie replied.\n\n\"Why not!\" Ann exclaimed.\n\n\"Because I don't think I can afford diamonds like Dawn's!\" We laughed.\n\n\"I'll make you a deal,\" I said. \"Mom, Ann, and Amelia...you three get your belly buttons and pussies pierced, and I will have our jeweler fit you with jewelry, and I will pay for it,\" I said.\n\n\"Deal!\" Ann and Amelia exclaimed.\n\nThey all wanted to look closer at Dawn's now. She turned and spread her legs, and they looked.\n\n\"Did it hurt?\" Ann asked.\n\n\"Not really,\" Dawn said.\n\n\"James, do they get in the way when you...go down her?\" Charlie asked.\n\n\"I am learning to deal with them!\" We all laughed.\n\n\"You'll just have to try, dad,\" Dawn said.\n\nCharlie looked at Dawn a moment, and Dawn winked at him.\n\n\"Come on, dad. You can find out,\" Dawn said as she got up and took her dad's hand.\n\nShe led her dad over to the Tantra Chair at the other end of the den and sat on the high end, and spread her legs as her dad looked. All of us were watching.\n\n\"Just try it,\" Dawn said.\n\nCharlie looked a moment and hesitated.\n\n\"Are you sure, honey?\" Charlie asked.\n\n\"Only one way to find out.\"\n\nCharlie slowly sat in front of Dawn. He looked at her pussy then ran his fingers over the diamonds. He looked up at Dawn as she looked down at him. Charlie leaned forward and placed his mouth over Dawn's pussy.\n\n\"Oh...my...\" came from mom.\n\nWe all sat quietly and watched Charlie go down on Dawn. After a few minutes, he got more into it. Dawn watched him for a while, then put her hands on the back of his head and pushed.\n\n\"Emmmmmmm...that's it dad...\"\n\nIt was quiet for a long time until Dawn started moaning.\n\n\"Ohhhh...yes...just like that...\"\n\nDawn watched and moaned for a few more minutes.\n\n\"Ahhhhh!! Fuuuck!!\" Dawn screamed and jerked several times.\n\nCharlie was getting into it now. I watched him move a hand up and slide several fingers into his daughter.\n\n\"Oh, yes!! Just like that, dad!!\"\n\nCharlie worked his fingers in Dawn harder as she moaned. She was pulling his head in hard to her pussy as we all watched.\n\n\"Ohhh!!! Fuuck!!!\" Dawn screamed.\n\nWe all heard her pussy gush several times.\n\nCharlie started to sit up.\n\n\"Don't stop!!\"\n\nWe all just watched as Dawn got off several more times. I could feel that she was really enjoying her dad going down on her. Dawn was now squeezing and twisting her tits as Charlie worked. She screamed through another huge orgasm, and Charlie stopped eating her. Dawn smiled at her dad and leaned over, and kissed him.\n\n\"Damn...\" came from Ann. I looked at her and knew she was feeling what Dawn had felt.\n\nI walked to the den with mom, Ann, and Amelia, and we sat.\n\nCharlie stood, and his cock was sticking straight out. He started to step away, but Dawn wrapped her hand around his cock. He stood and watched Dawn slowly stroke his cock for a few minutes. Dawn finally looked up at him and smiled, then moved to her knees and slid her mouth over his cock.\n\nWe all watched for a long time as Dawn gave her dad one of her expert blowjobs. Charlie finally shoved his cock down her throat and came hard as he groaned. Once Dawn had sucked all the cum out, she stood and wrapped her arms around her dad. They held each other for a minute.\n\n\"Did you enjoy that?\" Ann asked Charlie.\n\n\"Yes, I did. Very much.\"\n\n\"Are you still planning on sending us to NLP training this summer?\" Amy asked.\n\n\"We may need to think about that,\" Dawn replied. \"It would have to be in July, and we should all be three months pregnant at that time.\"\n\n\"That shouldn't be a problem,\" Samantha said.\n\n\"Maybe just two weeks instead of all month,\" I added.\n\n\"Where is it?\" Mom asked.\n\n\"Canada...probably,\" I replied.\n\n\"You two should be okay then,\" my mom added.\n\n\"Hey, dad?\" I said.\n\n\"Yes?\"\n\n\"Linda and Rachel are going to join us in Hawaii for a few weeks. I asked them to join us this morning.\"\n\n\"What?\" Came from dad and Charlie.\n\nI didn't say anymore as I heard Dawn giggle.\n\n\"Are you serious, son?\"\n\n\"I told her that you two probably wouldn't want to fuck her.\"\n\n\"What! Yes, we would!\" Dawn and I laughed.\n\n\"I hope mom doesn't care,\" Dawn said.\n\n\"I don't care.\"\n\n\"Dawn, you and James are going to have to tell me more about your relationship with Linda,\" Amelia said.\n\nWe told them more about things that had transpired with Linda.\n\n\"I still think that is wild,\" mom said.\n\n\"I understand why you are all close to her,\" Ann added. \"Is that a problem for you, Dawn?\"\n\n\"Of course not.\"\n\nEveryone finally went to bed late.\n\n*****\n\nTuesday, Amy and Samantha left for school before noon. After the rest of us had lunch, Amelia went out to the pool with Charlie and my dad. Ann and mom were helping Dawn clean up the kitchen while I cleaned up the den.\n\n\"Come with us,\" mom said as she and Ann walked up to me.\n\nMom took my hand and led me to the bedroom, and we got on the bed.\n\n\"Son, are you and Dawn good with all of this?\" Mom asked.\n\n\"Of course we are.\"\n\nWe sat and talked for a while. Ann started playing with mom's tits and soon was on her hands and knees as she went down on mom. Watching the two of them was hot. I lay there and watched until mom came hard. Ann kept going. I got up behind Ann and slid my cock into her pussy.",
        "\"Emmmmm...\" came from Ann as she worked on mom's pussy.\n\nI slowly worked my cock in her as mom moaned. The three of us took our time and just enjoyed.\n\n\"Oh fuck! I'm going to come!\" Ann cried out.\n\nShe jerked and bucked as she came hard.\n\n\"Oh my. Your cock feels so good, James.\"\n\n\"It does,\" mom said.\n\n\"Sue, will you let me watch you two fuck?\" Ann asked.\n\n\"Sure.\"\n\nAnn pulled forward and lay next to mom. Mom looked up at me and smiled, and spread her legs further apart. I got between them and slid my cock into her.\n\n\"Emmmm...make me come, son.\"\n\nAnn had sat next to us to watch as I slowly slid my cock in and out of my mom. It didn't take long before Ann was working her fingers in her pussy.\n\n\"That is so hot,\" Ann said.\n\nDawn came in and sat on the edge of the other side of the bed. Dawn and Ann watched as I fucked my mom harder. Mom moaned and thrust her pussy up as I worked my cock in her.\n\n\"Oh, fuck!! I'm coming!!\"\n\nI jammed into mom harder as she kept screaming she was coming. She thrust her pussy up hard, and I let go and filled her full of cum as she cried out.\n\n\"Oh...fuck...\" mom moaned as I held my cock in her.\n\nAnn had come several times and was now sitting and watching. I slid my cock out and laid next to her. Dawn smiled at me.\n\nMom finally sat up on the bed.\n\n\"Dawn, I hope you are okay with that...because I want to keep doing it,\" mom said.\n\nThe three of them laughed.\n\n\"I am fine with it, Sue.\"\n\nDawn moved and got on her knees and straddled my head, and lowered her pussy down. I listened to the three of them talk and laugh while I worked my tongue in Dawn. Soon, Dawn laid on me and started sucking my cock. After a few minutes, the three of them were taking turns as they sucked my cock.\n\nDawn got off several times as they had some fun. She was sitting up and working her pussy on my mouth as someone sucked my cock.\n\n\"Make him come,\" I heard Ann say.\n\nMom worked on my cock harder, and Dawn got off again. She sat on my mouth as I erupted in mom's mouth. Dawn got off my head, and I watched as mom slowly finished. When she slid her mouth off my cock, Ann pulled her up and placed her mouth over mom's. She pushed my cum into Ann's mouth. They kissed a minute, then separated and laughed.\n\n\"James. What does it mean when you fuck your mom and your mother-in-law?!\" Ann asked, and they laughed.\n\n\"It means you two are really fucked up!\" I exclaimed, and we all laughed.\n\n*****\n\nDad and Charlie had spent the afternoon in the pool fucking Amelia before they finally came in. Dawn and I had showered while mom and Ann went and showered. We were all back in the den when they came in from outside and headed upstairs to shower.\n\nAmy and Samantha came in about 3:30.\n\n\"You two are late,\" I said.\n\n\"We had to do some catching up in the library,\" Samantha said.\n\n\"Don't forget your boxing lessons tonight,\" I said.\n\n\"We haven't,\" they said as they headed upstairs.\n\n\"Boxing lessons?\" Amelia asked.\n\n\"They are taking lessons so they can defend themselves,\" I said.\n\n\"They are also studying Krav Mega,\" Dawn added.\n\n\"That will be good for them to know,\" dad replied.\n\nWhen Amy and Samantha came back down after changing clothes, they helped Dawn get dinner started early.\n\nWe had eaten, and about 7:00, their boxing teacher had arrived. Charlie and dad went down to the basement to watch them.\n\nDawn and I sat and talked to Ann, Amelia, and my mom until the girls came back up.\n\n\"What time is your flight tomorrow?\" Dawn asked.\n\n\"We better be at the airport by 1:30,\" Ann said.\n\nAmy and Samantha sat down, and we all talked until about 10:30, then headed to bed. I was in bed with Dawn while Amy and Samantha showered. Once the girls came out, they got in bed with us, and we turned off the lights.\n\n*****\n\nWe were all eating breakfast late Wednesday morning. It was about 9:00, and Ann was telling my mom about how she could feel Dawn and me having sex when we were at her house while in college.\n\n\"Are you serious?\" Amelia asked.\n\n\"Amelia...\" Dawn said. \"My mom can feel me being fucked.\"\n\n\"What?\" Came from Amelia, and Ann laughed. \"How?\"\n\n\"It is hard to explain, but...it has always been that way.\"\n\n\"I don't believe that,\" Amelia responded.\n\n\"I'll give you the short version,\" Dawn said. \"My great-grandparents are the tribe's medicine people.\"\n\n\"I know. What does that have to do with it?\"\n\n\"They are very spiritual and powerful people. Their abilities were passed down to my grandmother, then to my mom, and finally to me.\"\n\n\"What kind of abilities?\" Amelia asked.\n\n\"Many. Mom never cultivated all of hers. I did. But, mom and I have always been able to feel what the other was feeling and even know what we are thinking.\"\n\n\"And she feels you having sex?\"\n\n\"Yes.\"\n\n\"Oh yes! I had sex with James by proxy many times!\" Ann said and laughed.\n\n\"Mom was terrible. She would let James come to the house and fuck me. She would be in her room getting off.\"\n\n\"Seriously?\"\n\n\"Oh, yes,\" Ann said.\n\n\"What did your dad say about it?\"\n\n\"He got used to it.\"\n\n\"He got the benefits of it too!\" Ann exclaimed.\n\n\"What other abilities do you have, Ann?\" Amelia asked.\n\n\"That's about it. Dawn has many more. She always loved her great-grandparents, and I let her spend her summers on the reservation. They taught her a lot. Just recently, she was honored as the new medicine woman.\"\n\n\"Hmm. So, what else do you do?\" Amelia asked.\n\n\"I have always been able to do certain things,\" Dawn said. \"With mom, she feels my energy, and I feel hers.\"\n\n\"Did you feel your dad fucking her?\" Amelia asked.\n\n\"Oh, yes, unless I block it out.\"\n\n\"Amelia, Dawn is very special. My grandparents knew it, and they taught her all the ways of the old people,\" Ann said. \"I knew Dawn was special, so I let her work with them.\"\n\n\"What about you?\"\n\n\"I...didn't follow the old ways,\" Ann said.\n\n\"How can she feel your...energy?\" Amelia asked.\n\n\"I can feel most people's energy,\" Dawn said.\n\n\"You mean read their minds?\"\n\n\"No. I just feel what they are feeling.\"\n\n\"You may as well tell her all of it, honey,\" Ann said.\n\n\"I can also manipulate others' energy.\"\n\n\"What does that mean?\"\n\n\"I can make people feel certain things in their body.\"\n\n\"No way,\" Amelia said.\n\nDawn sat her glass down and walked over to Amelia as she sat on a barstool.\n\n\"Give me your hand,\" Dawn told Amelia.\n\nAmelia hesitated but held out her hand, and Dawn took it in both of hers. I saw Amy smile and giggle.\n\nDawn looked into Amelia's eyes for a minute.\n\n\"What are you doing!\" Amelia asked.\n\n\"Just let her do it,\" Ann said.\n\nAmelia began to squirm on the stool. Dawn closed her eyes, and I knew Amelia was in trouble.\n\n\"Stop!\" Amelia cried out and pulled on her hand. Dawn held it tight.\n\n\"What! No! Stop! Ahhhhhhh!!\" Ann cried out and jerked as she came hard. \"Dawn, stop!\"\n\nDawn opened her eyes and smiled at Amelia. She yanked her hand from Dawn's.\n\n\"Now, do you understand?\" Dawn asked.\n\n\"I guess...\"\n\nDawn picked up her glass as Amelia checked her out.\n\n\"Have you always been able to do that?\" Amelia asked.\n\n\"Sort of. It was something I could do mostly between James and me. But...things have changed.\"\n\n\"What changed?\" Amelia asked.\n\nDawn took some time and explained how things changed when Amy and Samantha moved in.\n\n\"Are they like that too?\" Dad asked.\n\n\"We showed you all the genealogy tree,\" Dawn said. \"Great-grandfather said that our blood runs together. Because of that, he said we would know things about each other.\"\n\n\"That's wild,\" Amelia said.\n\n\"Oh, that is not half of it,\" I added.\n\nDawn and I were telling them the visions of Linda. Even Ann listened closely when I told her about the dream I had of Linda. Then Dawn told them about taking me to see everything.\n\n\"My god! You can do that?\" Amelia asked.\n\n\"I can with James.\"\n\n\"Son, do you think all this is why you felt so drawn to Dawn the first time you saw her?\" Mom asked.\n\n\"It must be.\"\n\n\"Dawn, the first time James saw you in that class, he told me that for some reason, he felt drawn to you. I had always told him he would know when he met the right person,\" mom said. Dawn smiled.\n\n\"What else can you do?\" Amelia asked.\n\n\"Honestly, since the ceremony...I am not sure.\"\n\n\"What about the deer?\" Samantha said.\n\n\"What deer?\" Dad asked.\n\n\"Nothing really. We have seen Dawn out in the back with various animals in the past. She has this huge male deer that Samantha calls her deer,\" I said.\n\n\"Does he just come up to you?\" Mom asked.\n\n\"More or less,\" Dawn said.\n\n\"Why?\"\n\n\"My grandparents always told me that the animals would protect us when we needed them,\" Ann said. \"Dawn has always been able to have animals come up to her.\"\n\n\"Wow,\" came from mom.\n\n\"My grandfather used to tell me stories about the other spiritual people of the tribe even turning themselves into animals,\" Ann said. \"He was always telling us stories like that.\"\n\nSamantha looked at Dawn and smiled.\n\n\"Can you do that?\" Dad asked.\n\n\"Of course not,\" Dawn replied.\n\n\"Show them, Dawn,\" Samantha said.\n\nDawn smiled, and we watched her walk across the den and go out the backdoor naked. They followed her and watched out the windows. Dawn was standing on the edge of the patio.\n\n\"What is she doing?\" Mom asked.\n\n\"Just wait,\" I said.\n\nAbout five minutes later, we saw a huge male deer come out of the trees. He had a big rack of horns.\n\n\"Damn...\" came from my father.\n\nThe deer slowly walked up to Dawn. He lowered his head, and she reached out and rubbed his head for a minute. I saw Dawn say something, and the deer turned and ran off.\n\n\"I'll be,\" came from Amelia.\n\nDawn walked back inside.\n\n\"Just deer?\" Mom asked.\n\n\"Around here, yes,\" Dawn said and walked toward the kitchen as we all stood at the windows.\n\nWe all went to the den and sat.\n\n\"Ann, are the three of you going to be able to go to Hawaii with us?\" Mom asked.\n\n\"What's the plan?\" Ann asked.\n\n\"Four weeks in June,\" I said.\n\n\"We should be able to do that.\"\n\n\"Son, have you talked to Angie and Deb?\"\n\n\"Angie said she and Brian are planning on being there for two weeks. Deb said they would be there but didn't know if it would be one or two weeks.\"\n\n\"Great.\"\n\n\"How was your trip to Paris?\" Ann asked.\n\n\"We had a great time. The young lady that was our housekeeper in Hawaii was visiting for Christmas and went with us too.\"\n\n\"It was a great trip,\" Samantha said.\n\nWe all sat and talked until we grabbed something for lunch. After we ate, our parents started packing.\n\n*****\n\nI was driving Ann, Charlie, and Amelia to the airport.\n\n\"You three plan on flying in here before the 30th of May. I want all of us to fly out together on Sunday,\" I told them.\n\n\"We'll do that,\" Charlie said.\n\n\"I'll take care of all the tickets and the arrangements in Hawaii. I'll get you all a car so you can drive around and see everything. Don't pack a lot of extra clothes. It will be mostly shorts and bathing suits. You'll buy a lot while you are there. Take something nice for when we go out to dinner.\"\n\n\"Okay. I'll talk to Dawn about what all we need to take,\" Ann said.\n\n\"Keep it a secret, but Dawn and the girls and I won't be flying back with all of you.\"\n\n\"Why?\"\n\n\"I have a surprise for Dawn.\"\n\nWe drove on to the airport. I helped unload all their bags at the drop-off and kissed them all bye, and headed back to the house.\n\nMom and dad had their car packed and ready to go when I arrived. After a few minutes, they headed out.\n\n\"Maybe things will settle down now,\" Dawn said.\n\n*****\n\nWhile Amy and Samantha went to their Krav Mega class Wednesday night, Dawn and I were sitting in the den.\n\n\"Did your mom enjoy having sex with you again?\"\n\n\"I think she did. Are you ever going to have sex with your dad?\"\n\n\"I'll save it for Hawaii.\"\n\nShe wrapped her arms around me and looked up into my eyes.\n\n\"Did you enjoy doing your mom?\" Dawn asked.\n\n\"Yes, I did. Very much.\"\n\n\"Why?\" Dawn asked.\n\n\"What do you mean?\"\n\n\"Why did you enjoy it so much?\"\n\n\"I...don't know.\"\n\n\"Yes, you do.\"\n\n\"I don't know...I just enjoyed it very much, honey.\"\n\n\"You need to think about it,\" Dawn said.\n\n\"Is there a problem with it?\" I asked.\n\n\"Of course not, honey. I just think you need to understand why?\"\n\nI didn't know why I enjoyed it so much...I just did, I thought.\n\n*****\n\nThursday evening, after Samantha came in from her lab, we headed into town to have some pizza and a little time together. Amy was upfront in our Escalade while Dawn and Samantha were in the back talking.\n\n\"When did we get this Escalade?\" Dawn asked.\n\n\"It was the first year of the 2nd generation...about six years ago,\" I replied.\n\n\"Why didn't you get a new one?\" Amy asked.\n\n\"We just like this one,\" I said.\n\n\"I bought my Jag, and James bought the Corvette when we won. We weren't driving it that much, so we just kept it,\" Dawn said.\n\n\"You know...by the end of the year, we are going to need something to seat seven,\" Samantha added.\n\n\"We may need a bus if we all go someplace at the same time!\" Dawn said and giggled.\n\n\"That will be three car seats,\" Amy added.\n\n\"I guess we will need something bigger. This one doesn't have the third-row seats like the new ones,\" I said. \"Since you brought it up, you two get to deal with it.\"\n\n\"I was just saying...\"\n\n\"You two can go to the Cadillac dealer and start looking,\" I said, and Dawn laughed.\n\n\"Will a new Escalade be big enough?\" Samantha asked.\n\n\"That is what youy will be figuring out.\"\n\n\"Maybe we should get a custom van,\" Samantha giggled.\n\n\"You two can figure it out.\"\n\n\"Can we order a new Escalade?\" Samantha said.\n\n\"Only if it has everything on it!\" Dawn exclaimed.\n\n\"Okay. We'll take care of it,\" Samantha said.\n\nWe got to the pizza place and enjoyed some downtime, and had dinner. I had to get the girls not to talk so loud about having sex with everyone while we ate.\n\nWe headed back to the house and had some wine, then went to bed early. We all needed some time together to just be with each other.\n\n*****\n\nFriday, things were back to normal. Dawn and I cleaned up the house while Amy and Samantha were at school.\n\n\"I am going to the stores tonight to take some pictures outside at night.\"\n\n\"Is that all?\"\n\n\"I am going to try and get Linda to let me take some of her with the Ferrari wearing that skimpy black outfit she wore.\"\n\n\"Good luck.\"\n\nAmy and Samantha came in about 3:00. Amy and Dawn went upstairs, and I didn't see them again until about 5:00. Samantha and I sat in the den and worked on our computers.\n\nLater, Dawn and I were in the kitchen starting dinner.\n\n\"Did you two have something to talk about?\" I asked.\n\n\"Maybe...\"\n\n*****\n\nSamantha and Amy went to class Friday evening to catch up on their training. Dawn helped me load the camera gear I needed.\n\n\"Do you want to go with me?\" I asked\n\n\"If you don't need me, I have something to do.\"\n\n\"Okay. I'll be back around midnight, probably.\"\n\nI drove to the stores and had my camera set up outside right at sundown when all the store lights were on. I took several pictures, then moved everything inside and set up to take some shots of the Ferrari. Linda and Rachel came in about 9:30.\n\n\"Are you ready?\" I asked Linda.\n\n\"I guess. I don't know how you talked me into this.\"\n\n\"This will be the promo shot for the Ferrari giveaway for the customers.\"\n\n\"Okay.\"\n\nI had set up my big 8 X 10-inch camera and all my strobes around the red Ferrari. Rachel was watching and laughing. Linda was standing around in the back lingerie.\n\n\"Get up on the hood, and I will pose you,\" I told Linda.\n\nI worked with her about an hour. I had taken some hot photos of Linda in the sheer black lingerie on the hood of the car. She looked very hot in the long black embroidered stockings. The way the big camera worked, only she and the front of the car would be lit. Everything around the car would be dark.\n\n\"Don't you have enough yet?\" Linda asked.\n\n\"I just need a few more. Take off everything but the stockings,\" I told her.\n\n\"What?\"\n\n\"You heard me.\"\n\n\"I'm not posing nude!\"\n\nRachel was laughing.\n\n\"It's just for me...and posterity.\"\n\n\"What do you mean?\"\n\n\"Maybe one day the world would like to see you naked.\"\n\n\"James!\"\n\n\"I'm waiting...\"\n\n\"No!\"\n\nI stood and looked at Linda as she sat on the hood of the Ferrari.\n\n\"James...\"\n\nI waited.\n\n\"Just for you?\"\n\n\"Yes.\"\n\nLinda stood and began taking off the lingerie. When she was down to the black stockings, I helped her get back up on the hood. She humored me, and I took six photos.\n\n\"I could get some big bucks for these!\" I teased her.\n\n\"That's enough,\" she said.\n\n\"One more.\"\n\nI helped Linda sit up on the hood.\n\n\"Now, lean back on your arms and spread your legs.\"\n\n\"James!\"\n\n\"Just do it!\" Rachel teased her as she laughed.\n\n\"Oh, boy...\"\n\nLinda leaned back and spread her legs. Just like all the other photos of hot women sitting on a sports car hood.\n\nI took several more photos.\n\n\"That's enough.\"\n\n\"Not yet,\" I said. \"Turn around and lay on your stomach.\"\n\n\"James!\"\n\nI finally got her to do it. She looked hot with her legs spread while she looked back at me as I took a few more.\n\n\"That's it,\" she said and got up.\n\nRachel was laughing.\n\n\"You want to be up here!\" She asked Rachel, and she kept laughing.\n\n\"James, you make damn sure no one sees those!\"\n\n\"I will.\"\n\n\"I get to see the others before you do anything with them!\" Linda exclaimed.\n\n\"I'll bring the proofs by your office. I want one on the main page of the website.\"\n\n\"Geez...\"\n\nLinda grabbed her lingerie and went to get dressed.\n\n\"Make sure I get copies of those,\" Rachel said.\n\n\"I am going to make a huge one of her in the lingerie for the store.\"\n\n\"She'll kill you.\"\n\nRachel helped me pack up until Linda came back.\n\n\"Why don't I trust you with those photos?\" Linda asked.\n\n\"What are you worried about?\" I said, and Rachel giggled.\n\nWe got everything loaded and headed out a little after midnight.\n\n*****\n\nSaturday evening, Dawn was getting dressed for a dinner at the university.\n\n\"Remind me the next time the school does this to leave town,\" Dawn said as she grabbed her things to head to the university.\n\n\"What is it?\" Samantha asked.\n\n\"Some kind of thing where they have all the big donors coming in.\"\n\n\"We didn't get invited,\" I said to tease Dawn.\n\n\"Honey,\" she turned and looked at me, \"these are the big guys. The men and women with ALL the money. These are people the university is trying to talk into leaving them all their money when they croak because they don't have kids. They have had them touring the entire campus this afternoon, and now a big dinner. I have to talk to them about the new nursing program.\"\n\n\"Oh, those people...\" I said and laughed.\n\n\"Hey! I'll make you come with me!\"\n\n\"I don't work there anymore,\" I teased Dawn.\n\n\"Asshole! I need to go. They want me there when they show them the plans for the new building.\"\n\n\"What time will you be home?\" I asked.\n\n\"I don't know...late...maybe. You and the girls just eat without me.\"\n\n\"Amy is going to Brian and Angie's this weekend,\" Samantha reminded Dawn.\n\n\"Oh, yeah. You two find something to eat...I gotta go.\"\n\nDawn rushed out the door to the garage.\n\n\"I don't know if she will be able to be a Dean if she doesn't like shmuzzing the rich folks!\" I exclaimed, and Samantha and Amy laughed.\n\n\"She seemed to be dressed nice enough to shmuzz some old guys!\" Samantha said as we laughed.\n\nDawn had left the house in a little black dress that did show a bit of her cleavage.\n\nSam looked over at me.\n\n\"Uhhh...she wouldn't...to get some money...would she?\" Samantha asked.\n\n\"Probably!\" We laughed some more.\n\nAmy headed over to Brian's house about 6:00. Samantha and I were deciding if we were going to go out and get dinner.",
        "About 6:30, my phone rang. It was Dawn.\n\n\"Hey.\"\n\n\"I won't be home until late,\" Dawn said.\n\n\"Why?\"\n\n\"Well, the President thought it would just be a great fucking idea to have me be the escort to guide this group from one place to another!\"\n\nI laughed.\n\n\"You better not be laughing, James!\"\n\n\"Sorry.\"\n\n\"It is about a dozen men and a few wives. Every time we go from one building to another, one or more of them hit on me. I just walked them over to the hall for dinner. I had to excuse myself from a table full of guys so I could call you.\"\n\n\"Were they hitting on you, honey?\"\n\n\"Fuck, yes! One of them even grabbed my thigh under the table.\"\n\n\"Samantha asked me if you might use your womanly charms to score some donations.\"\n\n\"Tell Samantha that next time I'll give her the job. After this banquet ends at 8:30, I have to escort them over to the nurses' building to discuss the new building.\"\n\n\"I'll tell her you said you might.\"\n\n\"Well, there are a couple of nice-looking old guys...\"\n\n\"Well, be a good girl and help the school out, honey.\"\n\n\"James!\"\n\n\"Bye, honey...\"\n\n\"What is she doing?\" Samantha asked.\n\n\"Fighting off old guys, it sounds like.\"\n\n\"She shouldn't have worn that dress...\"\n\n\"I told her what you asked me.\"\n\n\"Don't get me in trouble, James!\"\n\n\"She said there were a couple of cute older guys...\"\n\n\"She wouldn't!\"\n\n\"Don't hold your breath, Samantha!\"\n\nWe laughed some more.\n\n\"She said she had to leave the table at the banquet because one of them was feeling up her leg.\"\n\n\"She wouldn't leave for that.\"\n\n\"I know. She said it would be late...\"\n\n\"Oh, boy. What time is the banquet over?\" Samantha asked.\n\n\"She said 8:30, but after that, the President wants her to escort the group over to the nurses' building to discuss the new building.\"\n\n\"How big is the group?\"\n\n\"She didn't say. Probably not very big, they are having the dinner at the hall. It won't hold many plus the faculty.\"\n\n\"Maybe I will go next year,\" Samantha said.\n\n\"They only do this every few years. Besides, you will be a mother then.\"\n\n\"So!\"\n\nSamantha jumped in my lap and kissed me.\n\n\"Dawn may decide to have some fun,\" she said.\n\n\"She probably will.\"\n\n\"She'll probably get plenty of money!\" Samantha exclaimed and laughed.\n\n\"We should spy on her,\" I teased.\n\n\"We should! They will have to walk right by the parking lot on the way to the nursing building.\"\n\n\"She would see us,\" I said.\n\n\"She would...there wouldn't be anyone else in the parking lot.\"\n\n\"We should spy on her, though! I bet she ends up banging at least one of them!\" I said and laughed.\n\n\"You really think she would?\"\n\n\"Sam?\"\n\n\"Your right. She'll fuck at least one or more of them. Probably at the same time!\"\n\nWe had gotten the giggles, but we were probably right. I figured we wouldn't see Dawn until morning.\n\n\"Well, the President would let someone bang his young wife if the price was right!\" Samantha exclaimed as she laughed.\n\nI had met his new wife. He had remarried a bit younger woman. Then I thought about all the shit he had given Dawn and me.\n\nWe finally calmed down and stopped laughing as Samantha sat in my lap.\n\n\"I bet we could spy on Dawn,\" Samantha said. \"You want to do it?\"\n\n\"We need to figure how to keep her from seeing us if we are close,\" I said.\n\n\"I have an idea!\" Samantha exclaimed and grabbed my cell phone, and dialed.\n\n\"Hey, Sam! It's Sam! Did you get that old van of yours running?\"\n\n\"You did! Great! Can I borrow it tonight?\"\n\n\"Right now!\"\n\n\"Okay. We'll be over soon!\"\n\nSamantha hung up.\n\n\"Sam has this old custom van he is trying to restore. It looks old, and the last time I saw it, it was half painted and half in primer. We could use it!\"\n\n\"You want to?\" I asked.\n\n\"Yes! She wouldn't notice it in the parking lot.\"\n\n\"Okay! Let's go.\"\n\nWe got up and headed to my car. We got in and drove over to Sam and Olivia's house and went to the door.\n\n\"Hey, you two. Come on in,\" Olivia said. \"Sam, you should have a coat on.\"\n\n\"We'll be in the van.\"\n\nWe went into their house.\n\n\"What do you want to use the van for?\" Sam asked.\n\n\"Some surveillance work,\" I said.\n\n\"Really?\"\n\n\"We are just goofing off,\" I told Sam.\n\n\"I'll get the keys.\" Sam walked off.\n\n\"Sam, you want me to get you a coat?\" Olivia asked.\n\n\"I'm fine.\"\n\nWe had run out of the house the way were dressed. I had on some worn-out jeans and a sweatshirt. I hadn't even shaved today. Samantha was in her tight blue jeans as usual and just a college T-shirt...minus a bra.\n\nWe grabbed the keys to the van and got it, and headed off. We stopped at a drive-thru and grabbed a couple of large drinks, then drove over to the university. We drove around and pulled into the parking lot by the nursing building.\n\n\"Park up by the sidewalk,\" Samantha said.\n\nI pulled up and parked next to the sidewalk about halfway between buildings and turned off the van. We sat and talked and laughed about Dawn for a while.\n\n\"Is that them?\" Samantha asked.\n\nWe looked over at the hall, and people were slowly walking out. They gathered in groups for a few minutes. We saw some of the couples walking off. We saw Dawn finally come out with four or five guys following her. She stopped and talked to a few groups, then started walking our way with a group of about eight. Samantha and I leaned back in the seats so the sreet lights wouldn't hit us. We had rolled the windows down a little so we could hear.\n\nIt took several minutes for the group to make it to us. Mainly because Dawn kept having to stop and talk to one or more of the guys that were flirting with her.\n\n\"Oh, shit...\" came from Samantha as they walked in front of us and stopped.\n\n\"No, really...I'm fine, Jim,\" Dawn said to a middle-aged guy that was trying to put his coat over her shoulders.\n\nShe stood and let him put his coat over her shoulders. We watched as he ran his hands down Dawn's arms and over the sides of her tits. Dawn smiled at him.\n\nWhen they walked away, the guy that put his coat on Dawn was walking on one side of her while another guy walked on the other.\n\n\"That's funny!\" Samantha exclaimed. \"You want to stay and see if she leaves with anyone...or two?\"\n\n\"No. There is no telling how long she will be in there.\"\n\n\"Okay.\"\n\nI hit the key to start the van, and it just clicked. I tried again with the same results.\n\n\"Oh, shit...\" Samantha moaned.\n\nI tried again.\n\n\"Are we stuck here?\" Samantha asked.\n\n\"It started fine before. It may be a lose battery cable.\"\n\nI got out and popped the short hood and held it up. I could hardly see the battery, but I felt for it and tried to see if the cables were loose.\n\n\"Samantha, turn the light in your phone on and help me a minute.\"\n\nSamantha jumped out and held her phone under the hood. I wiggled the battery cable and tried to turn it until it was tight.\n\n\"Problem?\" We hear.\n\nI figured it was security.\n\n\"I think we have a loose battery cable,\" I said.\n\n\"Anything I can help with?\"\n\nI thought I had the cable tight, so we stood up. It wasn't security. It was a middle-aged guy in a suit and an overcoat.\n\nI noticed, and Samantha noticed the guy was checking out her cold nipples sticking through the thin shirt.\n\n\"I think I got it,\" I said.\n\n\"I hope so, daddy,\" Samantha said. \"You need to get me something better than this beat-up old van. It keeps breaking down.\" Samantha winked at me.\n\n\"Well...honey...I'll see if I can get more overtime and get this one fixed,\" I said, and Samantha smiled.\n\n\"You should get your cute daughter something more reliable,\" the guy said with a big smile.\n\n\"I would if I could, but things are a bit tight right now...you know,\" I said.\n\n\"I hope it starts. I have been here all day waiting for you,\" Samantha said. \"I have to get to my job tonight.\"\n\n\"Where do you work?\" The guy asked Samantha.\n\n\"Probably nowhere now. I am already over an hour late again because of this piece of junk,\" Samantha said.\n\n\"Have you eaten this evening?\" He asked.\n\n\"Not yet.\"\n\n\"If you're not going to work, I'll make us some dinner,\" I said. \"Let me see if it will start.\"\n\nI got in the van while Samantha talked to the guy. I turned the key, and the van started. I got out to close the hood.\n\n\"If you two haven't eaten, follow me over to the hotel, and we can have dinner,\" the guy said.\n\n\"That's okay,\" I said.\n\n\"I insist. I've been here for hours with them, trying to talk me into giving them more money. I can't handle anymore, and I skipped the rubber chicken,\" he said.\n\n\"Well, I guess we could...\" Samantha said and turned to look at me.\n\n\"I guess you are skipping work then,\" I said.\n\n\"May as well,\" Samantha replied.\n\n\"Come on, follow me over to the hotel.\"\n\n\"Well...okay...\" I said.\n\n\"Let me get my car.\"\n\nSamantha and I got in the van.\n\n\"What are you up to?\" I asked Samantha.\n\n\"Just goofing off!\"\n\nWe watched the guy walk over next to the building and get in a big Benz. I backed up and waited. When he pulled off, I followed him to the big hotel just down the road from the university. He stopped to valet his car, and we found a place to park and got out and walked to the front door where he was waiting.\n\nWe walked in with him and followed him to the restaurant, and he got a table.\n\n\"This place is nice,\" Samantha said, looking around.\n\n\"It is, and the food is great,\" he replied.\n\nSamantha had been teasing him and flirting with him while we ate. I was sure he was playing with her leg under the table.\n\n\"What are you studying?\" He asked Samantha.\n\n\"I'm going to be a nurse.\"\n\n\"Very good.\"\n\n\"I hope so. I'll be paying off student loans for years,\" Samantha said.\n\n\"I'm sure you will find a well-paying job as a nurse. Where do you work now?\"\n\n\"Since I am 18 now, I can work in the bar down the road.\"\n\n\"You probably get pretty good tips.\"\n\n\"Sometimes, but it usually from some guy grabbing my ass...sorry, dad.\"\n\n\"He should tip well for that!\"\n\n\"Sometimes they do.\"\n\n\"Samantha, as pretty as you are, you should look into modeling.\"\n\n\"I tried once, but they said my...chest was too big.\"\n\n\"No such thing!\" The guy teased, and Samantha laughed.\n\n\"You can probably find other ways to make more money...if you tried,\" he added.\n\n\"I don't know. I have to study a lot. I don't have much time.\"\n\n\"You need to find a job that pays well for a few hours.\"\n\n\"Like what?\" Samantha hammed it up. \"Dad would have to okay with whatever it was.\"\n\n\"Well, Samantha, a young lady with your looks could find something that pays well. And, if your dad approves, you wouldn't have as many student loans.\"\n\n\"That would be great. But, what could I do for that kind of money?\"\n\nThe guy looked at Samantha, then looked at me to size me up.\n\n\"Oh, I think someone with your looks and body could find something.\"\n\n\"Like what?\"\n\n\"Well, I can think of one.\"\n\n\"What?\"\n\n\"Some young ladies make very good money as escorts.\"\n\n\"You mean hookers?\" Samantha asked.\n\n\"No, nothing like that. Some young women just enjoy spending time with men and don't have to worry about a relationship.\"\n\n\"Oh...I don't have time for guys anyway.\"\n\n\"Really. Some of these ladies I have met...don't have time for guys either...but I think they like the job because of the money.\"\n\n\"Really?\" Samantha asked. \"What do they make?\"\n\n\"Well, when I have been out of town, I have paid some of these young ladies to spend an evening with me.\"\n\n\"For dinner?\" Samantha asked.\n\n\"Sure...most of the time.\"\n\n\"What else do they do?\" Samantha asked.\n\n\"Well, sometimes they want to have more fun than just dinner.\"\n\n\"They do?\"\n\n\"Yes. I have had a few of them want to stay the night with me.\"\n\n\"Oh?\"\n\n\"But, I pay them very well when they do.\"\n\n\"You mean they stay the night with you...and have sex?\"\n\n\"Usually.\"\n\n\"Oh...I see...\"\n\nSamantha was letting him know that the idea didn't appeal to her.\n\n\"But, those ladies stay mainly to have fun.\"\n\n\"Sam, we better head out,\" I said.\n\n\"Oh, don't go. Stay awhile.\"\n\nThe guy turned to me.\n\n\"I'm sure you know that these young girls get to have all the fun.\"\n\n\"I...wouldn't know,\" I replied.\n\n\"I bet Samantha likes having fun...don't you?\" He said as he looked over at Samantha.\n\n\"She better be studying,\" I said.\n\n\"Oh, let her have some fun, James.\"\n\nHe turned back to Samantha.\n\n\"Would you like to have some fun, Samantha?\"\n\n\"I don't know about that kind of fun.\"\n\n\"Oh, I am sure you have had that kind of fun, Samantha.\"\n\n\"Well...I just turned eighteen.\"\n\n\"So young and so hot.\"\n\nSamantha giggled.\n\n\"Sam, we need to go,\" I said.\n\n\"Oh, James. You wouldn't be averse to letting your sexy daughter make a little extra spending money.\"\n\n\"I don't know about that, mister.\"\n\n\"Samantha...what do you think?\" The guy asked her.\n\n\"I would have to make a lot of money for that.\"\n\n\"What would you consider a lot of money?\"\n\n\"I don't know. How much did you pay the other...escorts that spent the night with you?\" Samantha said a little defensively.\n\n\"Hmmm. Well, I paid a very hot blonde $25,000 last weekend...but she wasn't as hot and sexy...and young as you are. I love your red hair. Is it yours?\"\n\n\"The carpet would match the drapes...if I had any carpet!\" Samantha said, and he laughed.\n\n\"Oh, my! Is that true, dad!\"\n\n\"Emm.\"\n\n\"Oh, Samantha, for you, I would definitely be happy to spend more than I did last weekend.\"\n\n\"Oh, really,\" Samantha said sarcastically. \"How much more?\"\n\n\"Well, it has been a good week for me....how about $50,000.\"\n\n\"For sex?\" Samantha asked.\n\n\"For the night.\"\n\n\"Sam, we should go,\" I said again.\n\n\"Wait, dad. You would give me $50,000 to stay and fuck you tonight?\"\n\n\"I sure would.\"\n\n\"Wooow...\"\n\nSamantha looked over at me like she was so surprised.\n\n\"Dad? What do you think?\"\n\n\"No, honey. Let's go.\"\n\n\"I could get a good car.\"\n\n\"You could get a new car,\" he said.\n\n\"Samantha, let's go.\"\n\n\"Dad, for that kind of money...I should think about it.\"\n\n\"Samantha, what have you had? Sex, maybe once or twice...other than when I caught you and your boyfriend last weekend?\" I said.\n\n\"I know enough!\"\n\n\"It looked like it last weekend!\"\n\nSamantha huffed up and crossed her arms, and sat back.\n\n\"Besides, that is a good way to end up kidnapped or worse,\" I said.\n\n\"Now now, James,\" he said with a smile.\n\nHe turned to Samantha.\n\n\"Nothing would happen to you, honey. We would just fuck for a while, and you stay the night...and maybe we would fuck again in the morning before I need to leave.\"\n\n\"That's it?\" Samantha asked.\n\n\"Yes...and you wouldn't have to worry about your dad watching. I bet he watched for a while last weekend, didn't he?\"\n\n\"Yes!\"\n\n\"Oh. James...did you like watching?\"\n\n\"I didn't watch.\"\n\n\"Sure you did! Samantha is so sexy and hot...I'm sure you watched for a long time before you said anything.\"\n\n\"He did...\" Samantha grumbled.\n\n\"What do you say, Samantha?\"\n\n\"I should do it!\" She pouted at me.\n\n\"You'll end up dead!\" I charged back.\n\nHe turned to look at me.\n\n\"Well, James...if you like to watch...you can stay tonight and watch all you want.\"\n\n\"I'm not part of this deal!\"\n\n\"I know you want to watch,\" he said.\n\nI crossed my arms over my chest and sat.\n\n\"Samantha, would you mind if your dad watched?\"\n\n\"He already has!\"\n\nHe laughed.\n\n\"I tell you what, James. I'll pay your daughter $50,000 to stay tonight and let me have some fun. And...I'll give you $10,000 to stay and watch.\"\n\nI thought we were fucked up.\n\n\"I'm...I'm not going to watch my daughter have sex!\"\n\n\"She said you have already watched. You know you want to do it.\"\n\n\"You're a pervert!\" I exclaimed.\n\n\"Probably! How about I pay her $60,000 and you $10,000, and you stay all night and watch, James. That way, you can make sure she is okay.\"\n\n\"Dang!\" Came from Samantha.\n\n\"I guess you would do it!\" I said to Samantha.\n\n\"Hell yes, for that kind of money! You don't have to stay!\"\n\n\"If he doesn't stay, you only get $50,000.\"\n\n\"That's okay!\"\n\n\"But, I am sure your father wants to watch...don't you?\"\n\nI looked at Samantha as he looked at me, and she was about to burst out laughing.\n\n\"It better be cash!\" I exclaimed.\n\n\"No problem. Are you ready?\" He said as he turned to Samantha.\n\n\"Oh! I guess!\"\n\nHe stood, and Samantha stood.\n\n\"Come on, James,\" he said.\n\nI followed behind them as they walked to the elevator. We got on and rode up to the Penthouse.\n\n\"Wow!\" Came from Samantha as she walked into the penthouse. \"This is so pretty!\"\n\nSamantha walked around and looked, then came to me.\n\n\"Don't let him come,\" I said, and she giggled.\n\nI sat, and he took his time pulling off Samantha's clothes. As she stood topless, he ran his hands over her big tits.\n\n\"You are so hot, Samantha.\"\n\n\"You think so?\"\n\n\"Oh, yes!\"\n\nHe got her out of the rest of her clothes, and he got naked, and they got on the bed as I sat and tried to act disgusted.\n\nI watched her as she was on her hands and knees, sucking his cock slowly. She was torturing him as she sucked for a long time.\n\nHe groaned loudly as he thrust his cock up into Samantha's mouth and filled it with cum.\n\n\"Oh my, Sam! You are good at that!\"\n\n\"I have had some practice...oh shit! Sorry, dad.\"\n\n\"Move up here so I can eat your young pussy.\"\n\nSamantha moved up and straddled his mouth, and lowered her pussy down. I watched her have a good time for about 30 minutes before she came hard and gushed.\n\n\"Oh, wow! My boyfriend doesn't eat me that well!\"\n\n\"I have had some experience,\" he said, and they laughed. \"Now you get to earn your money.\"\n\nSamantha moved back down over his cock. She played with it and stroked it for a few minutes before,\n\n\"Make sure you don't come in me,\" Samantha said.\n\nShe straddled him and grabbed his cock and worked it into her pussy, and slid down.\n\n\"Like this?\" Samantha asked.\n\n\"Just like that, honey!\"\n\nI sat looking pissed off as Samantha worked her pussy on his cock for a long time.\n\nIt had been almost an hour, and she had not let him come. He was hurting.\n\n\"Oh, you are so young and hot,\" he said as Samantha sat after she had come hard.\n\nI watched as he rolled her off his cock onto her back. He picked her legs up and spread them, then slid his cock into her.\n\n\"Do you like fucking like this?\" He asked.\n\n\"I guess...\"\n\nI was enjoying watching Samantha being fucked because she was having a good time. She would talk and act so innocent as he fucked her. I had been watching him drive his cock into Samantha for at least 30 minutes. He was struggling to keep going.\n\n\"Oh, fuck! This is so good!\" He exclaimed.\n\nSamantha built to another orgasm and came hard. He just struggled to keep thrusting into her.\n\n\"Oh, my! I didn't know older men could fuck for so long!\" Samantha exclaimed.\n\n\"It's because you are so hot and sexy!!\"\n\nHe managed to keep going.\n\n\"Ohhhh!! I'm going to come again!!\" Samantha screamed.\n\nI saw Samantha close her eyes before she started coming.\n\n\"Ahhhhh!!\" He screamed.\n\nI watched as he pulled his cock out of Samantha's pussy, and pointed it at her, and started shooting cum all over her tits. He groaned over and over as he kept shooting cum on her.\n\n\"Ahhhh!\" He let out, and he fell back on the bed.\n\nSamantha looked over at me and smiled, and winked.\n\nSamantha pushed herself up to sit and look at the cum dripping off her tits. She rubbed it on her tits and both her nipples, then moved over to him.\n\n\"That was so much better than Gregg. He can only fuck about 30 minutes,\" Samantha said.\n\n\"My pleasure. It really was because you are so hot and sexy.\"\n\n\"And young?\" Samantha asked.\n\n\"Oh, that too!\"\n\nSamantha leaned over him and let her nipples rub against his chest.\n\n\"Gregg has to wait about 30 minutes before he can fuck me again. How about you?\"\n\n\"Oh, my...\"\n\nSamantha smiled at him, then eased up and placed a nipple on his mouth. He hesitated but finally started licking and sucking on it. Samantha eventually made him suck both of her cum covered nipples.",
        "\"Are you ready yet?\" Samatha asked.\n\n\"Oh, my, honey. I'll have to rest,\" he said.\n\n\"Okay...but not too long.\"\n\nSamantha sat up on her legs, and he reached out and rubbed her cum covered tits.\n\n\"How long do you need to rest?\" Samantha asked.\n\n\"Let me just look at your hot little body.\"\n\nSamantha pushed up onto her knees and ran her fingers over her mound.\n\n\"Emmm, you would look so good with a small red patch,\" he said as he ran his fingers over her mound.\n\n\"I have been told that,\" and Samantha deliberately looked up at me and gave me a dirty look.\n\nHe looked over at me.\n\n\"Does the wife have a nice red bush?\" He asked me.\n\n\"Yes,\" Samantha said.\n\nHe looked back at Samantha and kept running his fingers over her mound. He finally ran them down to her pussy and slipped several into her. She let him finger her pussy for a while. I watched as she moved and straddled his mouth again.\n\nI knew he was enjoying her pussy and did for a long time as Samantha worked it on his mouth. Samantha finally laid on him, and the two of them came together as Samantha tortured him in a 69.\n\n\"You and I need to shower,\" he said.\n\nThe two of them headed to the big bathroom. I got my phone out and sent Dawn and text and told her we wouldn't be home until really late.\n\n*****\n\nSamantha came out of the bathroom laughing as she ran a towel through all that wet red hair.\n\n\"Oh, I'm ready to go again!\" Samantha said as she jumped on the bed.\n\n\"Oh, to be so young again...right, James!\"\n\n\"Hmmp!\"\n\n\"Give me some time, honey!\"\n\n\"Bummer...\"\n\n\"Well, if you are ready to go again...and your hot little motor is running, I have an idea.\"\n\n\"What!\" Samantha exclaimed enthusiastically.\n\nHe looked over at me.\n\n\"Maybe your daddy can keep you warmed up.\"\n\n\"What?\" Came from Samantha.\n\n\"You said he likes to watch...maybe he would also like to have you.\"\n\n\"Ewwwww!\" Came from Samantha. I almost laughed.\n\n\"Would you, James?\"\n\nI just sat with my arms crossed.\n\n\"Your hot little daughter needs to get off again. I don't want to disappoint her. James, why don't you come over here and go down on her.\"\n\n\"Ewwwww!\"\n\n\"Pervert!\"\n\n\"Maybe. My daughter was very hot at eighteen. I sure wanted to do her.\"\n\n\"You probably did, you pervert!\" I exclaimed, acting disgusted.\n\n\"Oh, I did...finally.\"\n\n\"Pervert.\"\n\n\"You would find it more enjoyable than you think, James.\"\n\nI just sat there.\n\n\"How about I sweeten the deal. James, you come over here and go down on Samantha until she comes, then fuck her, and I'll add $20,000 to what I am going to give you.\"\n\n\"What?\" I asked.\n\n\"You want to, and I'll pay you to let me watch.\"\n\n\"Ewwww!\"\n\n\"You'll give me $20,000 to do her?\"\n\n\"Yes.\"\n\nI got up and started moving to the bed.\n\n\"Dad! You can't!!\"\n\n\"For 20 grand, I can...and you'll like it!!\"\n\n\"No, Daddy!\"\n\nSamantha began pushing herself back onto the bed. I grabbed her feet and pulled her back down.\n\n\"Daddy! Stop!\"\n\nI pulled her to me and laid on the bed.\n\n\"No! Don't!!\"\n\nI held her legs down and planted my mouth over her pussy.\n\n\"No! Daddy! Stop!!\"\n\nI went to work on Samantha's pussy. She was already dripping wet.\n\nSamantha protested for a long time until she came the first time. I kept working on her pussy, and she came two more times.\n\n\"Oh...daddy...\" Samantha whimpered.\n\n\"You enjoyed that, didn't you,\" he said. \"Now fuck her!\"\n\nI started pulling my clothes off.\n\n\"Oh, daddy!! Nooo!!\"\n\nI kicked my pants and underwear off and climbed on the bed between Samantha's legs.\n\n\"Daddy! No!\"\n\nI pushed Samantha's legs apart hard as she kept saying no. I grabbed my cock and slid into her pussy.\n\n\"No! No! No!\"\n\nI made a big deal out of holding myself up and working my cock in Samantha for a very long time. She was so horny, and she came twice.\n\n\"Oh...daddy.......more...\"\n\nI had to keep from laughing.\n\nI sped up and jammed my cock into her harder. Samantha moaned and screamed each time she came.\n\n\"Oh, yes! Oh, yes! Fuck me, daddy!!\"\n\nI jammed into Samantha until she screamed through another orgasm.\n\n\"Oh..wow! I need to rest!\" Samantha exclaimed.\n\nI pulled my cock out and pushed myself up on my knees, and looked at Samantha. She wanted to smile.\n\nSamantha jumped up and pushed me onto my back, then got on her hands and knees and started sucking my cock hard as he watched.\n\n\"Wow, that's a good daughter!\" He said.\n\nHe pulled Samantha's hair away so he could watch her.\n\nSamantha sucked and deep throated my cock for about 30 minutes.\n\n\"That's enough!\" Samantha exclaimed.\n\nShe straddled my cock quickly and worked it into her pussy.\n\n\"You want to fuck your daughter! Well, I am going to fuck you, daddy!\"\n\nSamantha was coming again after about 20 minutes.\n\n\"Come on, dad! Fuck me!!\"\n\nSamantha got frantic and fucked my cock as hard as she could.\n\n\"Yes! Yes! Yes! Fuck my pussy, daddy!\"\n\nShe kept going.\n\n\"I'm going to come!\" I yelled.\n\nSamantha slid my cock out of her and started stroking it hard. She smiled at me as she kept going until I started shooting cum all over her.\n\nWhen I stopped coming, Samantha collapsed on top of me for a minute before she sat up on my legs.\n\n\"I want you to fuck me again, daddy! You loved it!\"\n\nSamantha moved, licked, and sucked on my cock until it got hard again. That only took about ten minutes.\n\n\"I'm going to make you come in my mouth! I'm sure you want to come in my mouth! Don't you, daddy!\"\n\nSamantha went back to work on my cock hard. Then she got on her hands and knees to suck. The guy was watching with an amazed look on his face. Samantha kept sucking, and he got behind Samantha and worked his cock back into her.\n\nSamantha came for the third time after about 30 minutes. She was hungrily sucking my cock as he fucked her.\n\n\"Emmmmmm!!\" Came from Samantha as she started jerking again.\n\nI felt her let him go.\n\n\"Ahhhh!!\" He screamed as he jerked his cock out and shot cum all over Samantha's back.\n\nI thrust into Samantha's mouth and more than filled it full of cum. He sat down hard behind her. Samantha got up on her knees and opened her mouth, and let the cum run out onto her tits.\n\n\"See, daddy! You wanted to come in my mouth! Didn't you!! I should tell mom!!\"\n\nSamantha took her hands and rubbed cum all over her tits and stomach.\n\n\"I should make you lick it all off! But, not this time!\"\n\nSamantha turned around and looked at him lying back on the bed.\n\nI got off the bed and slipped my clothes back on, and sat back in the chair.\n\n\"Can you go again?\" Samantha asked him.\n\n\"Oh, my! Not tonight!\"\n\nI was trying to stay smug as I watched Samantha tease him as he looked over her body for a while.\n\n\"You're right! This is fun! I could do this for money!\"\n\n\"You are wild!\" He said.\n\n\"Is that good?\"\n\n\"Oh my, yes! Samantha, did you enjoy your dad fucking you?\"\n\nShe turned and looked at me.\n\n\"It was pretty good.\"\n\n\"You want him to do it again?\"\n\n\"Hmmm...maybe...\"\n\n\"Maybe you should have him fuck you and your mom at the same time.\"\n\n\"Emmmm...I don't know. If I let him do that...he might find out mom let my boyfriend fuck her.\"\n\n\"What!\" I exclaimed and sat up.\n\n\"Surprise, dad!\"\n\n\"She did not!\"\n\n\"Oh, she did. The weekend before you watched us. You had to work all day Saturday.\"\n\n\"You're lying!\"\n\n\"Really? If you will fuck the two of us at the same time...I'll get her tell you.\"\n\n\"That tramp!\"\n\n\"Now, now, James. This could be a good thing. You could fuck your wife and your daughter. Not a bad deal!\"\n\n\"Hmmp!\"\n\n\"You would probably even like watching Samantha's boyfriend fuck your wife. I enjoy my daughter's husband fucking my wife.\"\n\n\"You are a pervert!\" I exclaimed.\n\n\"Oh, you should really think about James. My wife loves me watching. And the good thing about it is that she has brought a few of her friends home to spend the night with us on and off.\"\n\n\"She has?\" Samantha asked as she looked at him.\n\n\"Oh, yes. My wife and I have quite a hot sex life. I fuck her and my daughter, and my daughter's husband fucks her now. I even take guys home to fuck my wife.\"\n\n\"You do?\" Samantha asked.\n\n\"Oh, yes. I figure it is the least I can do for her letting me watch her eat pussy. Samantha, have you ever eaten pussy?\"\n\n\"No!\"\n\n\"You would enjoy it.\"\n\n\"Ewww!\"\n\n\"You would, I am sure of it. My wife does.\"\n\nHe reached up and rubbed Samantha's tits.\n\n\"My wife would sure like eating you.\"\n\n\"Ewwww.\"\n\n\"I wish I could watch her do you. But I left her home this trip, or she would be here doing it. James, wouldn't you like to watch Samantha and your wife eat pussy? Maybe even each other?\"\n\n\"Hmmp!\"\n\n\"That is pretty hot. I really enjoy watching my daughter and wife go down on each other.\"\n\n\"Pervert.\"\n\n\"Just think about it, James.\"\n\nSamantha turned back to him again.\n\n\"You like watching your daughter go down on your wife?\"\n\n\"Oh, yes...\"\n\n\"Dang!\"\n\n\"Oh, my. It is 3:00. I need to get some sleep. I have an early flight.\"\n\n\"What do I do?\" Samantha asked.\n\n\"Oh, you are going to sleep with me. James, you can take the bed in the other bedroom.\"\n\nSamantha climbed off him and laid beside him.\n\nI got up and stomped away to the other bedroom. I left the door open, so I could listen.\n\nI was about to get in bed when my phone beeped. I looked, and it was a text from Dawn.\n\n\"Getting some extra donations. I'll be home in the morning.\"\n\nI laughed.\n\n*****\n\nI was lying in bed early the next morning. I heard the two of them laughing, so I got up and put my clothes on and went into the other bedroom. Samantha was on top fucking him really slow.\n\n\"Hmmp!\" I sat down in a chair to watch.\n\nOver the next hour or so, Samantha screamed through several orgasms.\n\n\"Oh, my, Samantha! You are so fucking hot I can just keep fucking you!\" He exclaimed as he pulled his cock from her and sat up.\n\n\"Is that good?\" Samantha asked.\n\n\"It is for me! Was it for you, James?\"\n\n\"Never mind...\" I moaned.\n\n\"Is that all?\" Samantha asked as she lay there.\n\n\"Maybe. Sam, have you been fucked in the ass yet?\" He asked.\n\n\"Noo!!\"\n\n\"I think you would enjoy it.\"\n\n\"I don't know about that, mister.\"\n\n\"You want to try it?\" He asked.\n\n\"I...don't know...\"\n\n\"You should learn to like it, Sam. That way, if you don't want a guy coming in that sweet pussy of yours, you can let him fuck your ass.\"\n\n\"And you want to do that?\" Samantha asked, hamming it up.\n\n\"I sure do.\"\n\n\"I guess I could try it.\"\n\n\"Up on your hands and knees then!\"\n\nSamantha got up and got on her hands and knees as she smiled at me. He moved behind her and grabbed his cock, and pressed into her ass.\n\n\"Ouch!\" Came from Samantha.\n\nShe groaned as he slid into her ass.\n\n\"How about that, Samantha?\" He asked her.\n\n\"It's okay...I guess.\"\n\n\"I think you will enjoy it.\"\n\nI watched as he held her ass and slowly worked his cock in her ass.\n\n\"Is that better?\" He asked.\n\n\"Emmm...not too bad.\"\n\nHe sped up as Samantha smiled at me.\n\n\"Is this better?\" He asked.\n\n\"I think so!\"\n\nHe worked his cock in her ass for a long time. Samantha was holding back, trying not to have an orgasm but did anyway.\n\n\"Oh, fuck!\" Samantha cried out when she came.\n\n\"That's it! Come for me, Sam!\"\n\nSamantha came hard again in a few minutes.\n\n\"Ahhhhhh!!\" Samantha cried out.\n\n\"Oh, you like this! Don't you!\"\n\n\"It feels good!\" Samantha replied.\n\n\"Yes, it does!\"\n\nHe kept jamming his cock in her ass until she came again.\n\n\"James, does your wife let you fuck her ass?\"\n\n\"Hmmmp!\"\n\n\"Was that what I saw you doing the other night?\" Samantha asked.\n\n\"Oh, James. You will have to try your daughter's ass! I am sure you are enjoying watching me fuck her!\"\n\nHe slowly worked his cock in and out for a few more minutes.\n\n\"Sam, you are so lucky you enjoy this.\"\n\n\"Why?\"\n\n\"A lot of women don't, and guys love doing it.\"\n\n\"They do?\"\n\n\"Sure they do! Don't they, James?\"\n\nI just sat and stared at them.\n\n\"Daddy? Do you like fucking mom's butt?\"\n\n\"I guess...\"\n\n\"I'll have to let Gregg try it.\"\n\n\"Sam, you should make your boyfriends pay for doing your ass!\"\n\nSamantha giggled.\n\n\"My daughter loves it when I fuck her ass. She will suck her husband's cock while I do.\"\n\n\"Oh? That could be hot,\" Samantha said.\n\n\"You would like doing that, Sam.\"\n\n\"Maybe!\" She said and giggled.\n\n\"You need to try it. James, get up here and let her suck your cock while I fuck her ass.\"\n\n\"Last night was enough,\" I said.\n\n\"Oh, go ahead and do it, James.\"\n\nI got up slowly and took off my clothes. Samantha smiled at me. I got on the bed in front of her and held my cock out. She slid her mouth over my cock.\n\n\"That's a good girl, Sam,\" he said.\n\nHe sped up as Samantha sucked on my cock for a while.\n\nSamantha was coming hard as I pulled her head onto my cock. He jammed his cock in hard and cried out.\n\n\"Oh, fuck!\" He exclaimed as he jerked and pumped cum into Samantha's ass.\n\nI let go, and Samantha slid my cock down her throat as I came.\n\n\"Oh, my...\" he moaned as she fell back and pulled his cock from Samantha's ass.\n\nI slid my cock from her mouth, and she laid on the bed and rolled onto her back.\n\n\"That was fun!\" Samantha exclaimed. He laughed.\n\n\"I wish I could stay here the rest of the day and fuck you, but I have to get ready to leave,\" he said. \"Let's get cleaned up.\"\n\nHe pulled her up and led her to the bathroom.\n\n*****\n\nSamantha finally came out laughing as she pulled on her T-shirt.\n\n\"Samantha, you have been a lot of fun.\"\n\n\"Just pay us for the fun!\" I exclaimed.\n\nHe went to a safe in the room and opened it, and got out a briefcase. He opened it and pulled out two envelopes. He handed them to Samantha. She looked through them.\n\n\"Oh, this is $100,000. That is more than you said.\"\n\n\"You were worth it, Samantha.\" She giggled.\n\nI wanted to laugh because Samantha was worth that kind of money.\n\n\"Samantha, what are you doing on the weekends?\" He asked.\n\n\"I work and study on the weekends.\"\n\n\"Well, you don't need to work for a while, now. How would you like to fly down to St. Barts with my wife and me?\"\n\n\"Oh? What?\"\n\n\"You could fly down there with us for a weekend. St. Barts has a great nude beach.\"\n\n\"Oh, I couldn't do that.\"\n\n\"Sure, you could! Take a weekend off from studying. I will make it worth your time.\"\n\n\"Really?\"\n\n\"Sure. My jet can stop at your airport, and we'll pick you up. We could be there on a Friday evening, and you'll be back by Sunday evening.\"\n\n\"Oh, I couldn't do something like that.\"\n\n\"Oh, you could. You would have a great time with my wife. I could even bring my daughter and her husband.\"\n\n\"That would be a little too much for me.\"\n\n\"Even for another $100,000?\"\n\n\"What? You are kidding?\"\n\n\"Nope. You would be worth it.\"\n\nSamantha giggled. \"I could pay for school!\"\n\n\"Don't even think about it! I would never see you again!\" I exclaimed.\n\n\"Oh, James, she would be fine. We would just have some more fun.\"\n\nSamantha turned and looked at me and winked.\n\n\"No way!\" I told her.\n\n\"If you are still worried about her, why don't you and your wife come too?\"\n\n\"No way!\"\n\n\"James, your wife is fucking her boyfriends. You shouldn't mind if I fuck your wife a few times.\"\n\n\"No fucking way!\"\n\n\"Dad...if you tell mom you fucked me, she might be cool with it. She can tell you about fucking my boyfriend.\"\n\n\"No way!\"\n\n\"Well, you think about it, Samantha. Here is my number. Call me before a Friday if you want to go.\"\n\n\"Oh...okay...\"\n\n\"Let's go!\" I said and stood up.\n\n\"Well, thanks for the money! And the good time!\" Samantha said.\n\n\"No problem.\"\n\nI grabbed Samantha, and we left.\n\nWhen I got her to the hall, she started to laugh.\n\n\"Don't!\" I exclaimed.\n\nOnce we were on the elevator alone, we both cracked up.\n\n*****\n\nAfter we dropped off the van and got back to the house, it was about 8:30. We walked in, and Dawn was in the kitchen. Her hair was wet.\n\n\"Where have you two been?\" Dawn asked.\n\nWe both laughed, and Samantha told Dawn what we had done.\n\n\"And I thought I was tramp!\" Dawn said and laughed. \"You have to give the money to the university, though.\"\n\n\"What did you do?\" I asked.\n\nDawn told us after she had talked two of the men into donating a lot of money, she went back to the hotel with them.\n\n\"You were in the same hotel!\" Samantha exclaimed.\n\n\"Who was the guy you fucked?\" Dawn asked.\n\nSamantha dug his card out of her tight jeans and looked.\n\n\"It says Jack Crawford,\" Samatha said.\n\n\"You fucked Jack Crawford!\"\n\n\"Several times...why?\"\n\n\"I can't believe that! He is a huge donor! He stopped me at the bar to talk,\" Dawn said.\n\n\"I bet he did,\" I said.\n\n\"No, he is a cool guy. We talked for a few minutes, and he asked me if I wanted to fly to St. Barts with him and his wife.\"\n\n\"What did you tell him?\" I asked.\n\n\"I told him I would need to ask my husband!\" Dawn said and laughed.\n\nWe all had a good laugh then got some rest.\n\n*****\n\nThat afternoon I was in my study working when the house phone rang. I picked it up.\n\n\"Hello?\"\n\n\"Dr. Smith?\"\n\n\"Yes.\"\n\n\"This is Jack Crawford.\"\n\n\"Hey, Jack.\"\n\n\"After I did a little research, I discovered that Dawn is your wife.\"\n\n\"One of them.\"\n\n\"I hope you and Samantha had some fun at my expense.\"\n\n\"Jack, I don't think you minded having some fun with Samantha.\"\n\n\"Is she really your daughter?\"\n\n\"No, she is one of our wives.\"\n\n\"I see.\"\n\n\"Don't worry. We gave the money to the university.\"\n\n\"That's okay. I had asked Dawn if she would like to fly down to St. Barts with my wife and me.\"\n\n\"She said you did.\"\n\n\"She said she would have to ask her husband. What about the three of you joining us?\"\n\n\"There are four of us. Dawn and I have two wives.\"\n\n\"All of you then. I think you all would have a good time, from what I experienced.\"\n\n\"I am sure we would. When are you planning on going?\"\n\n\"The following weekend.\"\n\n\"Let me check with everyone, and I'll get back to you.\"\n\n\"Great.\"\n\n\"No hard feelings, Jack?\"\n\n\"Oh, no! You two put on quite a show for me!\" He said and laughed.\n\n\"I'll let Dawn know you called.\"\n\n\"Good. And Dr. Smith, please tell Dawn that I'll owe her a big donation.\"\n\n\"Yes, you will!\"\n\nWe laughed.\n\n\"I'll look forward to hearing from all of you,\" he said.\n\n\"I'll let you know.\"\n\n*****\n\nThe four of us were eating about 6:00.\n\n\"Oh, Jack Crawford called this afternoon,\" I said.\n\n\"He did?\" Dawn asked.\n\n\"He did. He did some research and discovered who Samantha and I were. We had a couple of laughs. We wanted to know if we would like to join them in St. Barts next weekend.\"\n\n\"He wasn't mad, was he?\" Samantha asked.\n\n\"No.\"\n\n\"Can we go then?\" Samantha asked.\n\n\"What do you think, honey?\" I asked Dawn.\n\n\"I don't see why we can't go.\"\n\n\"Great!\" Samantha exclaimed.\n\n*****\n\nMonday morning after breakfast, Amy and Samantha said they were heading to school.\n\n\"Okay. See you later,\" I said.\n\n\"I am going into town. I'll be back about 3:00,\" Dawn said.\n\n\"Okay. I need to get caught up on some work outside.\"\n\nDawn left after we finished cleaning up from breakfast.\n\nI had been working on cleaning leaves out of the pool when I heard a helicopter fly over sort of low. I looked up, and it was a red helicopter. It flew off, and I kept working.\n\nAbout 30 minutes, later I heard it again and looked up. It was the same helicopter that had flown over two other times already. I went back to working on the pool.\n\nThe helicopter got louder, and I looked up to see it coming in low toward the front of the house like it was going to land. It got closer and closer. I ran into the house headed for the front door. When I opened the front door, the helicopter was landing in the front yard.\n\n\"What the fuck?\"\n\nI stood and watched for a few minutes as it shut down. Once the rotors stopped, the two front doors opened. I saw Jeanine get out of one side and looked closer, and saw Dawn getting out of the other front seat. The two of them walked up to me."
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "redheads",
        "james",
        "dawn"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-74"
}