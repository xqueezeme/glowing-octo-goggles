{
    "title": "Havencaller",
    "pages": [
        "Welcome back! For those of you who read chapter 5, you'll remember that it was a little sparse on the sex scenes. Rejoice, my friends! We're now at the good stuff! I'll admit I'm not an expert at writing intense sex scenes, but I gave it my best shot. Hope you like it!\n\nAlso, for the fans writing the wonderful, uplifting comments at the end of my stories...I love you, too.\n\n\"Claire...\"\n\nThe voice whispered through her mind, making her stir in her sleep. She rolled over, her body unconsciously seeking a cooler spot in the bed.\n\nClawed fingers slipped over her hip, dragging gently down her stomach. The sharp tips of the nails tickled her skin, making her giggle quietly. Her sleeping mind moved her own hand, making an attempt to slap the invading appendage away, but only succeeded in brushing warm skin. A quiet laugh whispered past her ear, and the hand continued its playful touch.\n\nClaire groaned and smiled in her sleep. Her lover's touch was calming and necessary since her encounter with Tarrin. The caress made her feel safe and warm, a feeling she hadn't experienced for a very long time. She squirmed against his hard body, the feel of his warm flesh against hers making her feel more at home.\n\nThe hand traveled down her abdomen, the fingers brushing the tops of her thighs. She groaned again and softened her body, loosening her limbs to welcome her lover's touch. The hand took advantage of her openness and slid between her thighs. The pointed fingertips gently raked against the folds of her sex, making her jump as a spark of pleasure raced up her spine.\n\n\"So warm,\" the voice whispered.\n\nOne clawed finger slipped between her labia, slowly pushing into her pussy. It massaged her body gently while another finger made feather-light circles around her clit. Her body twitched slightly, a soft moan escaping her throat.\n\n\"And so soft. I'll bet you're tighter than vice.\"\n\n\"Maybe,\" she mumbled sleepily into her pillow.\n\nDarrow laughed again, his finger lightly stroking the inside of her pussy as he continued to tease her flesh. He drew his fingers back, pushing them in again to draw a groan form her throat. His free arm wrapped around her waist, pulling her flush to his body. His hand reached up to cup her breast, massaging the soft flesh with his fingers. She moaned louder, slowly being coaxed out of her sleep.\n\n\"More...\" she whispered.\n\nHot breath tickled her neck as his warm lips dolled out tender kisses on her skin. Another thick finger slid into her warm sex, making her bite her lip in anticipation. He pushed them in deep, stopping just before brushing against the thin film of flesh that secured her virginity.\n\n\"So tight. So warm. You're perfect.\" He ran his tongue along the curve of her neck, making her shiver.\n\n\"Don't stop.\" She writhed at his touch, her body begging for more.\n\nHis arm pulled her tighter against him, his hand squeezing her breast and his fingers pulsed in and out of her.\n\n\"Mmmm, yes.\" She squeezed her legs together, pressing his finger harder against her clit. \"More.\"\n\nHe pumped his fingers faster, massaged her breast harder. Her body roared to life, her climax building at an incredible rate. She buried her face in her pillow to hide her cries of pleasure. The last thing she needed was Darrow getting chewed out by Thaltos for teasing her again. His fingers felt so good, his warm palm melting the flesh of her breast. She moaned again, so close to release she could taste it.\n\n\"Such a beautiful, playful creature. He doesn't deserve you.\" The voice growled the words into her ear. \"None but I deserve you.\"\n\nShe froze, fear now replacing pleasure. \"What?\"\n\nIt finally hit her, her gut twisting in terror: The voice that had teased her, the voice that had promised her more pleasure, didn't belong to Darrow.\n\nHis arm tightened painfully around her waist. \"I deserve you, not him. Come with me, girl, and I'll show you pleasure you couldn't even dream of.\"\n\nShe screamed, clawing at the sheets to escape. He held her tight, never ceasing his delicious teasing. She cried as she fought his strength, desperate to find a way to avoid his touch. She inhaled deeply, letting out one last frantic plea for help.\n\n\"DARROW!\"\n\nClaire bolted upright in bed, the layers of blankets pooling around her waist. She whipped her head around, searching for any sign of Tarrin or his menacing strands of shadow. The room stood empty, the table still piled with food and the wreaths of flame burning softly. Nothing moved; the only sounds she heard came from her own panicked breathing.\n\nShe settled back into bed, placing a hand over her chest to calm herself. Her nightmare had been so real, so believable. She felt his hands, heard his whispers. Tears welled in her eyes. Being ravaged by him in the hallway was awful enough; now he had found a way to torment her in her sleep. She pulled her knees to her chest, burying her face in her hands as she whimpered softly.\n\nShe turned to look at Darrow, still fast asleep next to her. His breathing was deep and even, his fingers twitching now and then as he slept. Thaltos and Silthos remained deep in slumber. None of them had left her, even for a moment. She was still surrounded by her three lovers, well protected from the dark that Tarrin brought with him.\n\nShaking out of fear, Claire slipped back under the blankets, pulling them tight around her. She rolled over, lifting one of Darrow's arms so she could slide under it. She curled up against his body, looping her arms around his neck to hold him close. Burying her face in his neck, she wept softly against his skin, horrified that she would dream about someone so sinister and painful.\n\nShe remained awake for another hour, her eyes flicking around the room at each tiny noise. Her nightmare had drained her, leaving her exhausted and terrified. Against her will, her eyelids slid closed. She tightened her grip of Darrow's neck, clinging to him as she fell asleep in case Tarrin was fool enough to find her here. If he did, at least he'd have one hell of an obstacle to get through.\n\nIn her sleep, Claire swore she could hear Tarrin's menacing laughter seeping in from the shadows.\n\n* * *\n\n\"Wakey, wakey, sleepyhead.\" Darrow's deep rumble shook her body awake, making her groan and roll over to cover her ears.\n\nMumbling to herself, Claire pushed herself up, rubbing the sleep from her eyes. She yawned, stretching her arms high enough to crack her spine back into place. She rolled her neck, working out the kinks and soothing the muscles. Her stomach rumbled impatiently, hunger coursing painfully through her veins.\n\n\"I second that opinion.\" Darrow walked over to the bed, her plate of rice and beef in his hand. In his other, he managed to juggle two goblets of wine. He balanced a platter of roasted pork on his arm, the plate dangerously close to falling to the ground.\n\nHe sat down beside her on the bed, his weight making the mattress dip sharply. She smiled and reached out to grab his plate of food and one of the glasses, letting him organize himself and the rest of breakfast. Darrow smiled back, placing her plate of food in his lap and taking his own back. He settled into the bedding, taking a long sip from his cup and starting to devour his food. She followed suit, stuffing her face with the delicious meat to satisfy her own hunger.\n\n\"How did you sleep?\" He asked, his mouth full of food.\n\nThe question caught her off guard, nearly making her choke of her breakfast. She swallowed quickly, staring down at her own plate, her heart starting to pound in her ears. Should she tell him? It wasn't that she was afraid of him raging at the though of her dreaming about Tarrin. She was more frightened of possibly hurting him by admitting it. The last thing she wanted was for Darrow to think she didn't love him just because she'd dreamt about that disgusting piece of garbage.\n\n\"Not good,\" she said solemnly.\n\n\"Oh?\" Darrow turned his head to look at her. \"What kept you up?\"\n\nShe chewed her lip nervously. \"Can we talk without you getting mad?\"\n\nHis face turned stern. \"Perhaps. What happened?\"\n\nShe swallowed loudly, dreading the act of coming clean. \"I dreamt about Tarrin last night.\"\n\nDarrow went still, his eyes completely focused on her. His face was devoid of expression, though a small flame began to burn in his eyes. She avoided his gaze, shame and fright starting to swirl in her gut. She questioned dropping the subject there, saving them both an unimaginable amount of pain and anger.\n\nJust say it. It'll be a lot easier if you tell him now. Keeping it a secret will only hurt you later.\n\nShe rubbed her arms, suddenly cold. \"He was touching me, kissing me, rubbing against me. It...it felt so good.\" She blushed at the last part, fear and shame coiling in her gut. \"I actually asked him not to stop.\"\n\n\"It felt good?\" His voice, like his face, was emotionless.\n\nShe nodded guiltily. \"I thought he was you, so I begged him for more.\"\n\nHe scoffed slightly. \"Well that doesn't do him much good if you think he's me.\"\n\nShe whipped her head around to stare at him, fear blazing in her eyes. \"I'm sorry! I didn't mean to-\"\n\nHe waved a hand, silencing her. \"I'm not angry at you, Claire. I couldn't be. None of this is your fault. That bastard has been stealing girls from other demons for centuries.\"\n\nShe pulled back slightly, confused. \"You mean you're not the only one he's screwed over?\"\n\nHe barked out a laugh. \"Fuck, no. I was just the one who got him caught. That's why he hates me.\"\n\nShe rubbed her arms again, staring at her food. \"So, you're not mad at me?\"\n\nOne clawed finger stroked her cheek. \"Not at all. Tarrin's been a bad seed for as long as I've known him. The only reason he's coming after you is because he desires you and wants to get back at me. None of this mess is your doing.\"\n\nShe smiled weakly, relieved to know he didn't think of her as a harlot or a heartbreaker. He saw her for what she was: an innocent pawn in some fucked-up demon's game of revenge.\n\nWhat an exciting role to play. I hope I win an Oscar for this.\n\nShe picked up another strip of beef, chewing on it slowly as she tried to wipe away the memory of her nightmare. \"Where are Silthos and Thaltos?\"\n\nDarrow took another drink from his goblet. \"Off to inform the Counsil of Tarrin's return. They're probably going to lockdown this place for a day or two while they search for him.\"\n\nShe scowled at her plate. \"So we're locked in here until they find him?\"\n\n\"Yep. Trust me, they'll tear this place apart to look for that piece of shit.\"\n\nClaire shook her head slowly, memories she'd tried to push down bubbling up again. \"The place he took me to...he said you wouldn't find it.\"\n\nHe grunted. \"Probably one of his hiding places. Unless you know exactly where it is, you're shit out of luck finding it again.\"\n\n\"I wasn't paying attention.\" Guilt started to rise in her belly again.\n\n\"I don't blame you. After being dragged off by him, my thoughts wouldn't be on where I was, either.\" He swallowed another mouthful of food. \"Don't worry. They'll be patrolling the halls for a while, so I doubt he'll come sneaking out.\"\n\nShe nodded. \"Will Thaltos and Silthos make it back in time?\" She turned to watch for his answer.\n\nHe swallowed a gulp of wine, wiping his mouth on his arm. \"Yes. They Counsil won't start the lockdown until everyone has reported to their rooms. They don't want anyone wandering around and accidentally getting mistaken for Tarrin.\"\n\nShe sighed in relief. Even if they didn't find him, at least they'd be safe for a while. And if Tarrin was stupid enough to come looking for her, she had three strong demons to defend her and help her escape. If things got really bad, Kerion and his family would offer some much needed help. She smiled, happy to know she was protected for now.\n\nA new though crossed her mind. Two days was a long time to be locked in a room with three horny demons. Since her first sexual encounter with them, her hormones had been going haywire, her body demanding more stimulation each time they pleasured her. It was becoming evident to Claire that oral sex simply wouldn't do anymore. Her body craved something stronger, something far more potent than soft lips and warm tongues.\n\n\"You said all four of us would be locked in here for a couple of day, right?\" She traced the rim of her glass absentmindedly.\n\n\"Yes. Until the Counsil calls off the search, we're trapped here together.\" He stuffed his face with more food.\n\nShe shifted uncomfortably, nervous about the question she was dying to ask. \"You also said I get you pick when I lose my virginity, right?\"\n\nHe nodded. \"That's one of the perks of being a virgin.\"\n\nShe bit her lip again, inhaling a long breath to steady herself. \"What if I said...while the three of us are stuck here...that I might be ready?\"\n\nDarrow paused, turning his head to stare at her. His eyes were wide, a spark of uncertainty and elation shining in their black depths. \"Claire, you don't have to. Not unless you're ready. None of us have meant to push you-\"\n\nShe shook her head, rubbing her thighs together nervously. \"No, you haven't. It's just...I think I'm ready.\"\n\nHe eyes her carefully, joy slowly seeping into his expression. \"Are you sure?\"\n\nShe turned to smile at him. \"No offence. All three of you...your oral sex is amazing, but I don't think that's going to satisfy me much longer.\"\n\nFinally, a smile cracked on his lips. He nodded and inhaled deeply, a desperate attempt to calm himself and keep from tackling her. \"When Thaltos and Silthos come back, we'll tell them.\"\n\n\"Are you three going to share me?\" She smiled playfully.\n\n\"It's only fair that we do. Once we break you in, we'll each have a turn at you.\" He winked at her. \"At you leisure, of course.\"\n\nShe smiled back, her playfulness coming out again. \"Do I get to pick who goes first?\"\n\nHe bowed his head. \"My dear, you can choose whatever you want.\"\n\n\"Good.\" She leaned forward and kissed his forehead, pulling back to smile innocently at him. \"You'd better rock my world, you hear me?\"\n\nHe laughed and pressed his fist to his heart. \"I will do my best to leave you breathless.\"\n\nShe pulled away and giggled, scooping up a handful of flavored rice and stuffing her mouth. Darrow did the same, still grinning at her while satisfying his own hunger. She chewed slowly, her gaze drifting down from Darrow's chiseled features. Her eyes traveled lower, past his sculpted abdomen to his strong thighs. Nestled between his muscular legs, his cock pointed straight out, thick and proud as always.\n\nSomething in her gut stirred, a small flame of lust slowly building into a roaring blaze. Her belly twitched instinctively, a warning that her body needed something to quell its hunger. She moaned softly, pressing her thighs together to quiet the burn. But her body would not be ignored, instead intensifying her hunger to near frenzied levels. Claire growled at herself, chastising her body for making her delicate relationship with Darrow even more treacherous. Her body responded by cranking up the pressure, her pussy now begging for any kind of relief.\n\nShe grunted angrily, setting her plate and glass down on the floor. Exasperated, she leaned back and rested on the bed, her hand reaching down automatically to relieve herself.\n\nDarrow turned to look at her, concern in his eyes. \"Are you alright?\"\n\nClosing her eyes, she nodded hastily. \"I'm...a little uncomfortable right now.\" She cracked her eyes open to look at him. \"Would you mind if I...\"\n\nHe snorted at her, humored by her question. \"Do I look like a person who would be offended watching you get off?\"\n\nShe let out a relieved sigh, leaning her head back and closing her eyes. \"Thanks.\"\n\n\"Would you mind if I watched?\" he questioned. \"It's been quite a while since I gotten a show like this.\"\n\nShe smiled slightly, shaking her head. \"Just be quiet. I can't do it if there's noise.\"\n\n\"You won't even know I'm here.\" She could hear the smile in his voice.\n\nShe nodded again, settling into the bed to get comfortable. Her hand drifted lower, finally reaching her burning pussy, the first gentle stroke of her fingers lighting the fire in her belly. She bit her lip as the first sparks of pleasure slipped into her veins. She moaned slightly, her fingers now tracing delicious circles around her clit. Her back arched an inch, her body reacting to her masterful manipulations with joyous greed.\n\nStill focused on quenching her body's thirst, Claire felt the bed dip beside her, felt Darrow's hot breath on her neck as he watched. She giggled at the feel of warm air on her skin, slightly enthused that he got off while watching her. Something about being under his gaze made her stomach clench, exciting her. She'd never had anyone watch her masturbate before, but her body was carving release so much she didn't mind his stares.\n\nShe put more pressure on her clit, trying to ease the burn of her body. One of her fingers toyed with the slit of her sex before sinking in deep, making her back arch. She sighed, biting her lip harder as she worked herself into a slow frenzy. Her free hand reached up to cup a breast, massaging it gently and squeezing the flesh in her hand. She tweaked her nipple lightly, drawing out a gasp. She squirmed in the bed, excitement and anticipation mixing in her veins.\n\nShe creased her brow in frustration. As much as her body reveled in her own teasing, it wasn't enough to stifle the burning. Her body still craved more, begging for a new sensation to break the monotony.\n\nTaking a deep breath but never slowing her touch, she turned her head and stared into Darrow's dark eyes. The look on his face was of pure fascination, his eyes locked on the soft curves of her body and the quick movements of her hand.\n\n\"Darrow,' she whispered.\n\nHis eyes snapped up to hers, startled out of his admiration of her body. She squeezed her breast in her hand, lifting it so his eyes drifted down to the supple mound of flesh.\n\nClaire sucked in a shaky breath. \"Can I have some help?\"\n\nHe stared at her in shock, his mouth hanging open for an instant. He recovered and nodded, sliding closer until his breath scorched her skin. He reached out a hand, gently brushing her hand away from her breast to make room for his own. He gripped her breast lightly, testing her flesh to see how far he could take her. She moaned at his touch, the warmth of his skin melting away her fears and inhibitions.\n\nDarrow growled his approval, leaning forward and blowing a hot puff of air against her skin. She groaned at the sensation, her fingers sinking in an inch deeper into her sex. Her thumb had taken the place of her other finger, twisting quick circles around her clit. She groaned at his hesitancy, wanting him to use more pressure to bring her to release.\n\nHis tongue flicked out, painting her nipple with a lightening-fast brush. Her belly tightened, her thumb moving faster. He licked her again, this time running his tongue along the entire curve of her breast. He twirled his tongue around her nipple, finally wrapping his lips around the tight nub and sucking gently. Her back arched as she sucked in a harsh gasp, her body finally on course to finding release.\n\nShe pumped her fingers in and out of her pussy, her thumb now spinning furiously around her clit. Her moans grew louder as Darrow's tongue twisted around her breast. His hand cupped her other mound, rubbing and squeezing gently to ensure no part of her was devoid of attention. He sucked harder at her breast, scraping his teeth lightly against her flesh, making goosebumps rise of her skin.\n\nClaire sighed. This was exactly what she needed. The dual pleasure allowed her body to go wild, every nerve ending exploding as she climbed higher and higher. Darrow's loving touch soothed her soul, wiping away the horrific nightmare of Tarrin at the vicious torture her inflicted on her body. She tensed, her muscles tightening in anticipation of her climax. She was close, so close she swore she could taste her release on her tongue.",
        "She worked her hand harder, twisted her thumb faster, her body on the very brink of sanity. Darrow's skilful manipulations left her dangling over the edge of a vast crevice, a dark, frightening place where reality and fantasy collided. They worked together in perfect unison, holding her above the abyss with the tiniest thread. One more lick, one more twist of her fingers and...\n\n\"Darrow! We're back. The Counsil's just about to set up the lockdown and...oh.\"\n\nShe climaxed just as Thaltos' voice broke through her haze-filled mind. Her hips bucked as she threw her head back, her mouth open in a silent cry. Darrow never abandoned her body, instead giving her breasts gentle licks as she came down form her high, massaging her flesh to ease her decent.\n\nClaire settled slowly back into the bed, her breath coming in short, harsh gasps. Closing her eyes, she removed her hand from her pussy, wrapping her other arm around Darrow's head to hold him close. She leaned over, kissing him on the cheek before collapsing into the sheets. A thin sheen of sweat coated her body, evidence of their shared escapade.\n\nThaltos cleared his throat, snapping her eyes awake. She was still too exhausted to get up, but awake enough to feel blood rushing to her cheeks. She pulled her legs up to her chest, rolling over onto her side to recover from her explosion.\n\n\"As I was saying...\"\n\nDarrow sat up on the bed, his gaze warm and welcoming. A tiny smile lay on his lips. \"She needed help getting off. Are you going to chew me out for that?\"\n\n\"No, but you could have invited us in on the fun,\" Silthos griped. \"We would have been glad to help her.\"\n\nShe smiled. Of course they would. None of them would forego on a chance to watch her orgasm. Missing out on that would earn them a lifetime of taunting.\n\n\"As I was saying...\"Thaltos spoke through clenched teeth, annoyed that his news feed had been interrupted. \"The Counsil has been informed of Tarrin's return, and needless to say, they're pissed. The lockdown should start momentarily, and the guards will be patrolling for about three days.\"\n\n\"Good. Even if they don't find him, at least they'll scare him enough that he won't come looking for her.\" Darrow shifted on the bed, reaching out an arm to stroke her back. \"Claire's got a bit of good news, too.\"\n\n\"Oh?\" Silthos' voice perked up in interest. \"And what is said good news?\"\n\nDarrow caressed her back, running his claws gently along her skin. \"Do you want to tell them or should I?\"\n\n\"I will.\" Groaning, Claire pushed herself up, turning so she could dangle her legs over the edge of the bed. She folded her hands in her lap, taking a deep breath before raising her head to look at her lovers. \"I think...I'm ready to let you have me.\"\n\nThaltos' brows went up in surprised delight. Silthos, on the other hand, nearly rocketed off the floor. Darrow's eyes slid to the side, avoiding her gaze as a mischievous smile crossed his lips.\n\nShe giggled at their elation. She'd never seen anyone so happy, even if it was for her finally surrendering her virginity. Their excitement warmed her. Her grandmother had never been this happy, even when she'd aced her exams or won a track race. Being around such warm, caring people -- demons though they were -- made her feel special.\n\n\"And when would you like this to happen?\" Thaltos crossed the room to sit on the edge of the next bed, his steel eyes burning with excitement.\n\nShe chewed her lip for a moment, contemplating the best course. \"During the lockdown. When Tarrin kidnapped me, he said he would take my virginity and make me his. Losing it to you while he can't run around and grab me again might make things harder on him.\"\n\n\"So soon? Are you sure?\" Thaltos leaned forward, interested.\n\n\"She has a point.\" Silthos joined them, taking a seat next to Thaltos. His eyes flicked to her. \"What Tarrin said has a thread of truth to it. Even though you technically belong to us because of your parent's deal, if Tarrin were to take your virginity, he could dispute us for your ownership. Losing your virginity while he's too busy being chased could diminish his chance of trying to claim you.\"\n\n\"And even if he did try to stake a claim on you, he'd have a hell of a time trying to prove it if you weren't a virgin.\" Darrow joined in, his voice excited at the prospect of thwarting his rival.\n\nShe turned to him, cocking her head in confusion. \"Why is that?\"\n\n\"It's a bit like the insignia on your clothing,\" he explained. \"Each demon or group of demons has a specific scent that they leave behind on the souls they own. If all there of us did break your virginity tonight, we'd leave behind a distinct scent that all other demons could identify. Just one of us would leave behind a smell. If Tarrin tried to claim you while you smelled like us, the Counsil would know that he's lying.\"\n\nShe nodded in agreement. Another thought burst into her mind, making her nervous all over again. \"But if a demon leaves behind a scent once the have sex, couldn't he rape me after the lockdown and leave his scent one me and claim me then?\"\n\n\"Smart girl,\" Silthos' brows went up in surprise. \"Thank god we didn't get stuck with a brainless one.\"\n\nDarrow waved his hand. \"Once our scent is on you, it's there for life. Even if another demon did try to rape you, our scent would overpower his. Nothing can change that, not even if you wanted to.\"\n\nShe shook her head vigorously. \"I wouldn't want to. I don't want anyone but you three touching me. I trust you.\"\n\nThey grinned at her. She smiled back, a strange sensation of power crossing through her mind. With that one admission, she'd solidified their bond and secured her safety. At the same time, Claire felt like she had staked her claim on them, marking them as her own the same way their brand marked her as theirs. The four of them had marked their territory on each other. She just hoped others would take notice of the invisible 'Off Limits' signs they wore on their hearts.\n\n\"So...exactly how soon until your sex drive fires up enough to finally sleep with us?\" Silthos leaned forward excitedly.\n\nThaltos glared at him, smashing his elbow into his ribs. \"Clam down. She's just made the decision.\"\n\nSilthos nudged him back. \"I'm just curious. I want to know how long we have until she's ready.\"\n\n\"I think she'll give us plenty of notice, won't you, Claire?\" His eyes shifted to her.\n\nShe smiled and nodded. \"I'll try to call out a warning before I jump you.\"\n\n\"Wouldn't that be the day?\" Darrow rested back on the bed, folding his hands under his head and closing his eyes. \"A sweet little thing like you coming around the corner naked and tackling me. That would certainly be a surprise.\"\n\nShe turned to him, a small flicker of annoyance in her eyes. \"Are you saying that I couldn't do that?\"\n\nHe grinned. \"No, I'm saying you wouldn't.\"\n\nShe punched his arm playfully. \"I would! Just not now! Give me a little time and I might do more than just that.\"\n\nA pounding echoed through the room, startling her enough to make her fall back on the bed. Thaltos stood, curiously calm, and walked over to the far wall. He waved his hand across the wall, a motion that made the shadows quiver and shake. Seconds later, an enormous demon with skin the color of fire and eyes like deep oceans entered through the shadows. He stood just inside the shadows, his eyes flicking around to scan the room. Those sapphire orbs settled on her, narrowing with interest.\n\nFrightened by their new guest, Claire scrambled behind Darrow, attempting to hide from his gaze. Darrow's tail looped itself around her leg, holding her tight as he shifted his body to shield her.\n\n\"Yes?\" Thaltos straightened his spine, showing respect to someone who was clearly far higher in the demon ranks.<br> The demon turned its attention back to Thaltos. \"The Counsil has requested that the three of you help secure the corridor.\"\n\n\"All three of us?\" Thaltos questioned. \"Why?\"\n\nThe demon snorted impatiently. \"The matter at hand is closer to you than anyone else, especially Darrow. You've been requested to run a full sweep of the corridor before the lockdown begins in case the maggot is fool enough to risk coming out.\"\n\n\"We all can't go!\" Silthos shot up. \"Someone has to stay here and guard Claire. She's his target. We can't leave her here alone.\"\n\nThe demon turned his head to glare at Silthos. \"We will have two soldiers guarding the entrance while you begin your search. All of you can return once the lockdown begins.\"\n\nSilthos growled in disapproval. \"I will not leave her alone. She's far too vulnerable, even with guards at the door. She-\"\n\nThaltos raised his hand, silencing his friend. \"This is no time to argue. We'll do the sweep and come straight back. This is something we need to do. Darrow would be the best chance we have at sniffing him out if he decides to rick it. Besides, with Tarrin running around, I'm not in the mood for defying the Counsil's orders.\"\n\nSilthos crossed his arms and looked away, defeated.\n\nThaltos offered a small smile. \"She'll be fine. I trust the guards with her, and we'll only be gone a few minutes.\"\n\nSilthos scowled and mumbled to himself, his eyes flicking to her to show his concern. Darrow unwound his tail from her leg and stood up, turning to hug her tightly. She wrapped her arms around his neck, pulling him close.\n\n\"You come back to me,\" she whispered.\n\n\"I swear.\" He pulled away gently, turning to the others. \"Thaltos, do you think you could carve a window into the wall. It's maddening enough in here for us. She might like something to look out of while she waits.\"\n\nThaltos nodded, turning his attention back to the new demon. \"We'll be out in a moment. Silthos, go with Dalgor and wait outside.\"\n\nStill grumbling, Silthos made his way to the demon, casting one last concerned glance at her before they both disappeared into the shadows. Thaltos made his way over to the wall closest to the bed, motioning for Darrow to follow the others. He hesitated for an instant, then turned to leave, stroking her cheek with his hand before leaving her. She watched him vanish into the darkness, a sinking, lonely feeling beginning to blossom in her belly.\n\nThaltos flicked out on of his clawed fingers, tracing a monstrous circle into the rock. Where he touched, the wall seemed to melt, revealing the soft, dim glow of the soul marsh. As much as the place made her skin crawl, Claire did appreciate the idea of being able to look at something besides four walls and the beds. A fresh view of the outside might keep her from going insane and calm her nerves a bit.\n\nThaltos turned and walked over to her, kneeling next to her bed. He cupped her face in his hands, smiling gently at her. \"We won't be any longer than a half an hour, I promise. There will be guards posted outside the door, so you should be safe until we return.\" He leaned forward, kissing her lightly on the cheek.\n\nShe nodded, tears starting to well in her eyes. \"You be safe.\"\n\nHe chuckled, brushing a strand of hair from her face. \"I swear.\"\n\nHe stood and walked toward the pool of shadow, glancing back to smile one last time before her vanished into the dark.\n\nShe sat on the bed, not moving a muscle for several minutes. Silently, she wished one of them would change their mind and come back to her, but the room remained still and empty. Lonely and frightened, Claire slid off the bed and walked over to the window, placing her hands on the smooth surface to peer out.\n\nBelow her, millions of human souls swirled around in the mist, searching for a relief that didn't exist and a silence that could never be found. She pitied them, saddened that their normal, uneventful lives had led them to this dreary fate. They were neither kings nor murderers, neither glorious nor terrible. They, ordinary people, were condemned to a life of loneliness and misery beyond comprehension. And they had done nothing, literally nothing, to deserve it.\n\nSeeking some way to ease their grief and her own, Claire walked over to the bed and picked up her plate of food, walking over to the table and gathering more plates. She carried them over to the window, carefully placing them on the ledge. She hopped up onto the cool rock, resting her plate of beef and rice in her lap. She picked at her food, watching the souls wander aimlessly.\n\nCurious, she plucked a ripe grape from a bowl and dropped it down into the mass of bodies. It landed softly in the hand of an old withered grandmother. The soul looked at the fruit in amazement before devouring it greedily. She snapped her head up, seeking the giver of the food.\n\nClaire smiled and dropped another grape, watching the woman catch it and swallow it whole. She stared up at Claire, holding her hands out for more food.\n\n\"One more,\" Claire called down. \"I don't know if I'm even allowed to do this.\"\n\nThe old woman nodded, watching as Claire rifled through the bowl to find an acceptable piece. She dropped the last grape down, a smile crossing her face was the old woman gulped it down. She looked up at Claire a final time, her withered lips forming words of gratitude.\n\nShe smiled back, watching the old woman hobble along in the mist. There was nothing she could do to save the woman from her torment, but at least she could ease the pain of endless nothingness. She tossed another handful of grapes down, staring out into the misty distance as the souls scrambled for her tiny hints of kindness. They looked up at her, throwing their hands up in silent cries for more. Smiling back, she tossed another clump down, her attention now turning to the swirling mists that surrounded the poor souls.\n\nThe mist curled and whipped around them, the mix of silver-grey and hints of cobalt catching her eye. The soft curves and cool hues drew her in, so inviting and intoxicating she almost thought it was calling to her. She leaned over the balcony, lost in the swirls of icy wind. She wanted to be closer to that mist, wanted to feel the cool air wrap around her skin and caress her cheeks. She leaned out farther, extending an arm to touch the swirls of cold.\n\nThe souls noticed her fascination with the mist. They waved their hands frantically, opening their mouths in silent screams. She looked at them, confused. She wanted to be near that mist so badly. It looked so cool and inviting. Why would they be so anxious for her to avoid it?\n\n\"What's wrong?\" Her voice was slow, almost tired, as if the mist was draining her energy.\n\nA thin tendril of the silvery mist lashed out, spearing through the air, barely missing her fingers. Claire cried out and jerked her hand back, leaning back into the room and scampering off the wall. She scrambled backwards, not stopping until her back was pressed against the hard wood of the bed. Gasping for air she closed her eyes and leaned her head back, trying to catch herself.\n\nA cry of frustration pierced her ears, as if the mist was in a rage for missing its target. She understood now why the souls were so frightened for her. The mist they lived in was nowhere near as soft and inviting as it looked. The fog itself was a predator, one that didn't care if she already had owners. It would have taken her anyway, possibly turning her into one of the innumerable, nameless masses that wandered in its icy winds.\n\nSobbing quietly, Claire hauled herself onto the bed and crawled towards the masses of pillows and sheets. She pulled the blankets back, settling into the warmth of the mattress and pulling the covers tightly around herself. She closed her eyes, frightened that another tendril of mist would creep into the room and pull in.\n\nBut no whip of silver ever came. Instead, the mist gave one last screech of anger, then quieted. She stayed in bed for a long time, her eyes flicking at every tiny sound. Between the evil mist and Tarrin, she struggled to decide which fate she'd found was worse.\n\n\"Claire! We're back!\" Thaltos' voice boomed around the room an instant before he slipped through the shadows.\n\nShe perked up, tossing the covers back and sitting up to watch them enter. Darrow and Silthos followed behind him, clearly relieved to be through with their rounds. Darrow smiled warmly at her, then frowned in confusion.\n\n\"Why are you in bed? You aren't tired, are you?\" He sounded disappointed. Without a doubt, all three of them had been talking about the prospect of finally claiming her body. Her sudden hesitancy cracked his excitement.\n\nShe shook her head, pointing a finger towards the window. \"The mist, it-\"\n\n\"Oh, that.\" He sighed in relief. \"Yes. A bit hungry, that damned stuff. Be careful. It will pull you in if you give it a chance.\"\n\nShe shivered slightly. \"It almost did.\" She looked back at them, curious. \"Are we allowed to feed the souls down there?\"\n\nThaltos shrugged his shoulders. \"It's advised that you don't, since they get clingy once they find a person who gives them something. But no one really minds if you do. If you try to save the, then we have an issue.\"\n\nShe relaxed. \"I was tossing them grapes earlier.\"\n\nHe smiled at her. \"That's no issue. As long as you don't try to help them out of that mist, no one will care.\"\n\nShe nodded, her eyes still darting to the window just in case.\n\nDarrow let out an exasperated sigh and collapsed down on the bed beside her. He folded his hands under his had and closed his eyes. \"Thirty minutes of searching for the scumbag was more tedious than I thought it would be.\"\n\nShe looked at him worriedly. \"Did you find anything?\"\n\nHe cracked an eye open, smiling as he reached out and stoked her cheek. \"Nothing. I guess that bastard isn't as stupid as we'd thought.\"\n\n\"Well, I suppose that's a good thing.\" She shrugged her shoulders. \"If you didn't see any sign of him, that must mean he's too freaked out by the lockdown to risk anything. At least he'll leave us alone for a while.\"\n\n\"Well, for about three days, at least.\" Thaltos joined them on the bed. \"The lockdown started once we cleared the hallway. We'll be notified when it's safe to come out again.\"\n\n\"Good.\" Claire leaned over and rested her head against his shoulder. She closed her eyes and breathed in his strong, smoky scent.\n\nHis arm wrapped around her waist, pulling her tight against him. She nuzzled his flesh, rubbing her cheek against the supple snow-white skin of his chest. Curled up into his embrace, she wanted nothing more than to stay there and fall asleep. When his hand traveled low to rest on her thigh, she twitched away, too absorbed in the comfortable feelings to be bothered by his sexual advances.\n\n\"Claire? Are you having second thoughts?\"\n\nShe shook her head. \"Just comfortable.\"\n\nHe laughed and held her close. She settled into his embrace, her mind drifting to things beyond Tarrin and the predatory mist. Subconsciously, she imagined what it would be like to finally lose her virginity to them. Would they be gentle and take their time with her delicate body? Or would they take turns pummeling her mercilessly? The thoughts made her shiver with anticipation.\n\nIf not now, then when? We've got three days. Might as well get it over with.\n\nShe pulled away gently, taking a deep breath and folding her hands in her lap. Her stomach twisted into a tight knot. She swallowed loudly, trying to calm the torrent of anxiety and excitement in her belly.\n\nThaltos noticed her apprehension, placing a hand on her shoulder. \"Are you alright?\"\n\nShe nodded. \"Just nervous.\"\n\n\"About what?\" he paused, his steel eyes widening in understanding. \"Now? Are you sure?\"\n\nTaking another deep breath, she nodded. \"Why not? We're stuck in here for three days. Doing it now will give me a little time to recover and put us one step ahead of Tarrin.\"\n\nA smile broke onto his lips. Thaltos reached over and jabbed Darrow in the ribs. He shot up, turning to glare at his friend. The old demon's eyes flicked to her, then back to Darrow, a look of excited knowledge in the silvery depths.",
        "Darrow's mouth twitched, a tiny smile breaking on his lips. He eyed her with devilish intent, a move she responded to by giving her most innocent smile.\n\nThaltos turned to Silthos, snapping his fingers to get his attention. The young demon's head snapped up, his mouth full of fresh pork and wine. Thaltos snapped his head towards Claire, indicating the urgency. Silthos' eyes flicked to her, then widened. He swallowed his food in one gulp then raced over to the bed, kneeling at the edge and staring up at her excitedly.\n\n\"So, my dear,\" Thaltos pulled her close, \"how shall we proceed?\"\n\nShe paused for a moment, taking the time to evaluate her position. She scanned over each of them, compartmentalizing their individual attributes and sorting through the flurry of emotions her mind whipped up. She closed her eyes and inhaled slowly, selecting her fate silently.\n\nOpening her eyes, Claire turned to Thaltos. Her fingers trembled slightly, her nerves not quite as calmed as she would like. \"I want you to be first.\"\n\nThaltos held back a grin, trying to suppress his excitement. Instead, he smiled softly and bowed his head. She understood his reasoning behind his stoic expression. The last thing Thaltos wanted was to make his companions jealous of his position.  \n\nTaking another breath, she turned to look at Darrow and Silthos. Both wore warm congratulatory smiles, but their eyes showed jealousy and disappointment. She smiled at her, reaching out the stroked both of their faces.\n\n\"Don't worry. I have something in mind for you, too.\"\n\nTheir expressions lifted, relieved to have some involvement with her breaking. She giggled at their smiles, relieved that none of the started a sex-based food fight over their position.\n\nThaltos' lips pressed against her temple, his hot breath spilling down the side of her neck. \"Are you ready now?\"\n\nShe nodded, the knot in her stomach twisting tighter in eagerness. Her hormones, sensing a change in the atmosphere, went haywire. They charged through her body, setting her skin on fire and making her sex clench tightly. Turning her head, she looked up at Thaltos and smiled softly, signaling her readiness and excitement.\n\nThaltos nodded and smiled back, then shifted his gaze to Darrow and Silthos. He ushered them away from the bed, giving them room to maneuver. They stood and stepped back, watching with bright eyes and hushed breath. She nearly asked why they must stay, then clamped her mouth shut. Of course they had to stay. Thaltos had explained why days ago. Watching their brethren as the carnal acts unfolded eliminated the chance of false stories and made sure no harm came to either side. It was an insurance plan for both her and Thaltos.\n\nShe felt hot breath on her neck an instant before his lips pressed against her throat. She closed her eyes and groaned softly, loving the fell of his mouth teasing her skin. His tongue lightly flicked against her flesh, making shivers race up her spine. Gently, he pressed a hand against her belly and began to push her backwards onto the bed. She went willingly, lost in the small pleasure of his kiss.\n\nHer body sunk into the warm bedding, relaxing even further as Thaltos' lips moved from her neck to her shoulder. She giggled as he kissed her lower, his warm mouth tickling across her collar. A slick tongue traced the curve of her breast, drawing delicious circles until finally flicking her hardened nipple. Her back arched slightly, bringing her breast closer to his mouth.\n\nShe sighed against his touch, the pressure in her belly beginning to build. He suckled her breast harder, one hand slowly drifting down her belly as he teased her with his mouth. His warm palm slipped between her thighs, nimble fingers playing with the lips of her pussy. They sank in slowly, bringing a fresh burst of heat and pleasure rushing into her veins.\n\nShe whispered his name, a move that drove his fingers in further. She moaned louder, his fingers pulsing faster. Her mouth drew harder on her breast, his free hand slipping under her back to pull her close. She lay limp in his arms, full of his body yet craving more. Gathering her senses, she writhed against him, trying to break free of his grasp.\n\n\"Stop,\" she whispered.\n\nHe pulled away immediately, fingers slipping easily from her drenched sex. The haze of lust and excitement still colored his eyes. His smile faded, worried that she had changed her mind.\n\nShe shook her head, trying to catch her breath. \"That's enough. No more teasing.\"\n\nHe grinned, relieved to know she was still determined to have them tonight. Carefully, Thaltos shifted her body to lie across the bed, her legs dangling over the sides. He stepped between her thighs, tenderly gripping her ankles to lift her legs from the bed. He inched closer, draping her knees over his hips as he leaned forward, his thick cock rubbing against her thigh. The tip nudged the lips of her pussy, making her squirm.\n\nHe moved forward carefully, his cock inching closer to her sex. He placed his hands beside her head to support his massive frame. His broad shoulders blocked out the light from the torches, covering her in shadow. He smiled down at her, pure joy and excitement running through his eyes. Taking a final deep breath, she reached up and looped her arms around his neck.\n\n\"Gentle, okay?\" she whispered.\n\nThaltos leaned forward and kissed her lips. \"I promise.\"\n\nHe pulled back, shifting his hips to find a good angle. She shivered as his body pressed against hers, the heat of his flesh melting her own into pliable clay. He gave her once last warm smile, then eased his hips forward, the thick head of his penis slipping between the folds of her sex.\n\nClaire gasped softly and gripped his shoulders. Slowly, gently, he pushed forward, keeping his word to go easy on her. Inch by inch he slipped in, letting out a low groan as her body instinctively squeezed him tight. Her back arched an inch as he moved forward, trembling under his weight as she let out a soft sight.\n\nHe paused, the head of his cock pressing against her hymen. She inhaled shakily and nodded, urging him forward. He smiled and leaned his hips in, gently pushing past the thin film. Claire rolled her head to the side and gritted her teeth, cursing the pain that a simple piece of flesh could cause. Tears stung her eyes as he continued forward. She chanted silently, reminding herself that this was the only time she would ever have to endure this unnecessary pain. After this, it would be smooth sailing.\n\nAfter several painful seconds, he broke through her barrier, his cock sliding easily into her body. She exhaled loudly, her body pulsing with gentle waves of pain. Thaltos held completely still, giving her time to rest and adjust to his size. And thank god he did. She'd admired his cock from afar, tracing the dark veins and heavy girth with her eyes. But now buried inside her, he felt like a tree log.\n\n\"How are you?\" He pressed his lips to her cheek.\n\n\"Fine,\" she whispered. \"I'm fine.\"\n\n\"Good.\" He smiled back at her. \"Hang on. I'll start slow.\"\n\nLeisurely, he pulled his hips back, relieving her body of his thickness. The movements were easier this time, the pain having faded away completely. He pressed forward again, sliding in all the way until the head of his cock pressed against her womb. He kept the motions slow and thorough, making sure she received the full amount of pleasure he could provide.\n\nHer breathing had become more rapid, her heart had begun to race. Despite the pain and her childhood fears, the sex had started to feel good. Incredibly good. Unconsciously, she tightened her legs around his waist and tossed her head back, biting her lip as he rocked against her. Her fingertips dug into the skin of his back, silently begging him for more.\n\n\"More,\" she begged, \"Harder. Move faster.\"\n\n\"If you're sure,\" his breath brushed her ear.\n\n\"Please.\" She clawed at his back, urging him on.\n\nHe obliged to her request, pumping his hips faster against her own. She groaned at the pressure building inside of her, gasped at the waves of fire coursing through her veins. She held onto him, gripping his flesh as he rode her like a champion.\n\nTo her dismay, Thaltos pulled away from her embrace, making her whimper for his presence. Standing up and rising to his full height, he reached his hands down to cup her ass, lifting her hips up and pulling her tight to his body. The angle made sparks rocket up her spine, the pleasure making her head spin. Blindly, her hands gripped the sheets for something to hold onto, her back arching to push her closer to his body.\n\nLaughing at her eagerness, Thaltos pumped his hips faster, driving into her like a jackhammer on concrete. Her tender body, unaccustomed to such a rigorous workout, twitched and jerked with every thrust. One hand slipped under her spine, supporting her as he moved his other hand to her belly. Reaching down between her thighs, he twirled a clawed finger in tender circles around her clit, making her cry out and arch her back.\n\n\"Ohhhh,\" she moaned softly, the pleasure pummeling her from all sides. \"Don't stop. Please, don't stop.\"\n\n\"I'm not sure I could.\" he laughed. His voice was tight and gritty, affected by his own torrents of pleasure.\n\nHe spun his finger faster, drawing another harsh gasp from the throat. Her thoughts became jumbled and incoherent. Her body twitched of it own accord. She had lost all control of her senses, finally closing her eyes to revel in the incredible pressure of his body against hers.\n\nOne last thrust, one final twist of his fingers and she was lost. Gripping the sheets hard enough to crack her knuckles, Claire threw her head back, her mouth open in a silent scream. Thaltos held back his own cry, holding onto his pleasure until her body was spent. She collapsed back into bed, sweat beading on her skin and lungs burning.\n\nWarm lips pressed against her temple. \"You did very good. I'm so proud of you.\"\n\nHe pulled away, his cock slipping easily from her body, leaving her empty but oh-so-satisfied. She dragged in harsh gasps as her body fought to recover. A single claw dragged down her belly, tickling her skin. She giggled breathlessly, opening her eyes to see him grinning at her. His slate eyes shined in the light, making them look like glass.\n\n\"You didn't...come,\" she gasped.\n\nThaltos shook his head. \"Not tonight. Not until all of us have had a chance at you. Whatever you have planned for Darrow and Silthos, the same rule goes for them. Once they've had their fun, we can go wild with you all we like.\"\n\nSwallowing slowly, she nodded and rolled onto her side. She closed her eyes for a minute, letting her body cool down and recover from her climax. She questioned for a moment whether or not her body could handle what she had planned for the others. Thaltos alone had nearly exhausted her. She considered having them wait until tomorrow when she would be more alert to play the game\n\nNo. I have to do it tonight. It's not fair if I don't.\n\nNodding to her conscience, Claire slowly struggled to push herself up onto the knees, her body screaming at her from the effort. She rested another moment, looking up to watch her lovers. Thaltos had joined Darrow and Silthos at the table, all three gazing at her for instruction. Taking long, deep breaths, she slowly regained her strength long enough to point to Darrow and Silthos, crooking her finger to beckon them.\n\nBoth demons shot up from their seats and rushed over to the bed. They stared at her in anticipation, waiting anxiously for her orders.\n\nShe shook her head slightly, clearing away the haze of lust from her mind. \"Silthos. Lay down on your back, please.\"\n\nHe nodded and moved over to the side of the bed, spinning around and laying bock so her rested on the sheets.\n\nHer body still aching from Thaltos' initiation, Claire turned around and crawled over to him. Gingerly, she crept on top of him and spun around, leaning back so her shoulders pressed against his chest. His hands gripped her thighs, holding them steady until she was secure. With his strong chest pressing against her back, Claire lifted her legs and draped the over the edge of the bed between his.\n\nShe turned to Darrow, pointing to her thighs. \"Stand there.\"\n\nHis black eyes lit up. \"Ah, I see.\" He moved quickly, positioning himself so he mirrored Thaltos. \"Getting a little adventurous are we?\" He gave her a quick wink.\n\nShe shrugged playfully, tilting her head to smile innocently.\n\nHe grinned back, lifting her hips higher than Thaltos had. He wrapped her calves around his waist, moving close to sink his cock inside her. He, too, moved slowly, not wanting to catch her by surprise or cause any damage. Finally nestled fully against her, he watched her eagerly for instruction.\n\nTaking a deep, cleansing breath, Claire reached down under her thigh to grasp Silthos' cock. Gently, she guided it up between the cheeks of her ass, the hard tip pressing lightly against the tight hole.\n\nSilthos reach out and gripped her arm, stopping her movement. \"Claire?\"\n\n\"I'll be fine. I promise.\" She whispered.\n\n\"What?\" Darrow questioned. \"What's she doing?\"\n\n\"Something she's not ready for.\" He shifted his focus away from her. \"Thaltos! Tell her she's not ready.\"\n\nThe old demon sighed. \"It's her choice, Silthos. If she wants to, she can.\"\n\nDarrow's' eyes flicked down to her, understanding and concern mixing in the onyx orbs. \"Claire.\"\n\n\"I'll be okay.\" She turned her head to look at Silthos. \"Just be careful.\"\n\nHe opened his mouth to protest, then clamed it shut and nodded. His eyes were still filled with concern, but he wasn't about to deny her the experience she wanted. Releasing her arms, he reached one hand down to grab his cock, gently brushing hers out of the way. His other hand reached up, hovering just under Darrow's chin.\n\n\"Spit,\" he commanded.\n\nDarrow made a face of disgusted confusion. \"What for?\"\n\nSilthos sighed in frustration. \"She's dry as sand back there. If I move now, I'm going to tear her apart. Now spit.\"\n\nLooking down at her one last time to confirm her decision, Darrow cleared his throat and spit a hefty glob of silvery saliva into Silthos' hand. The young demon reached down and gripped his cock with his slippery hand, coating it with the slippery substance. Gently, he rubbed the remainder of the lubricant against her tight hole, making her jump in surprise.\n\n\"You have one last chance to stop this,\" he whispered in her ear.\n\nShe shook her head. She'd made her choice and was determined to stick with it, no matter how uncomfortable it was. Silthos gave one last sigh before shifting under her. His cock pressed firmly against her tight anus, now slick and ready. His free hand gripped her hip, holding her steady.\n\n\"Darrow, lift her up a bit. I don't have a good angle from here.\"\n\nShe watched Darrow nod and lifted her body. The cheeks of her ass were now spread wide. Silthos arched his own hips up, the head of his cock a heartbeat away from sliding in. His breath cascaded down her shoulder, making shivers race across her skin.\n\n\"Relax your body,\" he whispered. \"You're too tense.\"\n\nShe nodded and closed her eyes, concentrating on loosening up her limbs.\n\n\"There we go. Much better.\"\n\nShe smiled and held her breath, bracing for the shock and pain of having her ass stretched open.\n\n\"Claire,\" he whispered into her ear. \"This is your last chance.\"\n\n\"No.\" Her voice, though soft, was firm and strong\n\nWithout answering her, he lifted his hips the last inch, finally forcing the head of his cock through the tight hole. She winced and clamped her teeth shut. He inched forward, her back arching as he slowly pushed in. his hands shot up to cup her hips, holding her still as he entered her. He continued forward, moving as slow as he could into her tight body. Her hands twisted in the sheets, trying desperately to hold onto something through the ordeal.\n\nShe groaned softly, not expecting this kind of pain. Her friends had told her it would hurt. They never said anything about her ass being set on fire and torn open. Damn them for not warning her. She'd kill them for this if she could.\n\nSeconds later, Silthos slipped the last inch of his cock inside. She heard his sharp exhale as he, too, finally relaxed. Stuffed full of his cock, her body slowly began to adjust to his girth, loosening around his thick shaft enough to unwind the muscles in her back. She settled in against him, loving the feel of his hot flesh against her shoulders. His hands reached up to cup her breasts, massaging them gently to calm her down.\n\n\"How are you doing?\" Darrow looked at her, concerned.\n\nClaire paused for a moment, taking inventory of the sensations. The feel of Silthos' hands on her breasts was wonderful, a sensation she'd come to enjoy completely. As for everything else, it was indescribable.\n\n\"Um...interesting,\" she responded. \"I don't quite know how to explain it.\"\n\n\"Are you okay?\"\n\nShe nodded. \"A bit startled, but I'm alright.\"\n\nHe smiled down at her, relieved to know no major damage had been done.\n\n\"Darrow, you move first. I want to give her some time before I start.\" Silthos' lips traced the curve of her neck, trailing to her shoulder.\n\nDarrow nodded and began to move his hips forward. Faster than Thaltos, his movements were quick and precise, his cock rubbing her sweet spot almost instantly. She sucked in a quick breath, rolling her head back so she could rest against Silthos' shoulder. She closed her eyes, inhaling the warm scents of smoke and demon musk as Darrow continued to stroked her expertly. Moaning softly, she gripped the bed sheets in her hands, waiting for the inevitable.\n\nSqueezing her breasts gently, Silthos inhaled deeply and began to slide his hips back. Inch by inch, his cock began to slip out of her ass. Taking in a slow, deep breath, Claire arched her back, her body instinctively trying to fight the new discomfort. Silthos' hands stroked her breasts gently, relaxing her against him. Darrow never slowed his pace, intent on making sure she felt pleasure despite the new feeling of Silthos invading her body.\n\nSilently, she whispered encouraging words to herself, trying to calm her body down. She groaned quietly, lifting her chest so his hands pressed harder against her breasts. She groaned again when he began to slide his cock back into the tight ring of her ass. He growled in her ear, the lust and pleasure clearly getting to him\n\nClaire winced, while he continued to work her. The discomfort hadn't faded at all, no matter how slowly he moved. Her body still felt painfully stretched and uncomfortably stuffed. For her slender frame, it was too much pressure.\n\nSlowly, she shook her head, reaching out to grip Darrow's shoulder. He stopped instantly, staring down at her worriedly.\n\n\"What is it?\"\n\nShe sighed. \"I'm sorry, Silthos. I can't. It's too-\"\n\n\"I said you weren't ready.\" He shifted below her. \"It was a good try, though. I'll give you points for having the guts to do it.\"\n\nGently, he arched his hips away, sliding his cock free from her body. She exhaled softly, her body relieved to be free of its burden. He squirmed underneath her, trying to move his body out from under her. Unfortunately, her weight, combined with the fact that Darrow was still holding her down, made that nearly impossible.\n\n\"The two of you are too heavy,\" he grunted. \"Darrow, pick her up so I can slide out.\"\n\nBefore Darrow could move, Claire reached back and gripped one of his wrists, holding him gently yet denying his escape.\n\n\"No, I don't want you to go.\" She turned her head, craning her neck to look at him. \"You don't have to do anything. Just stay here.\"\n\nHis twilight eyes stared into hers. \"You're sure? I can move if you're uncomfortable.\"\n\nShe smiled and shook her head. \"I'm fine.\"\n\n\"Alright.\" He slid back into position, his chest pressing against her shoulder blades. His hands slid up to cup her breasts again, holding completely still. \"While I'm here, may I?\"",
        "She giggled and squirmed against him, settling against his body. \"Please do.\"\n\n\"Are we good now?\" Darrow's voice was tight. \"I'm dying here.\"\n\nShe smiled, reaching up to wrap one hand around his neck. She pulled his head down, pressing her lips against his and gifting him with a scorching kiss. She pulled away, smiling innocently into his black eyes. \"You may continue.\"\n\nDarrow grinned and pulled back, adjusting his grip on her hips. \"Yes, ma'am.\"\n\nHe shifted into his previous motions seamlessly, his strokes and teasing immediately drawing out small gasps of pleasure from her throat. Her eyes fluttered closed, soft moans for more passed through her lips. Silthos' hands worked magic on her breasts, gently massaging her flesh and pulling out more soft moans from her throat.\n\nClaire relaxed into Silthos, biting her lip in pleasure as Darrow continued his delicious assault on her body. Thanks to all three of her lovers, her virginity was gone. A good thing, since Tarrin's main threat was to take it himself and mark her as his own. With her body now broken, she hoped his quest for her would be slowed a bit.\n\nShe was snapped out of her musings by Darrow, who delivered a crushing blow to her control by scraping his cock against her clit. Her back arched, her hips pressing hard to his body. Darrow never lost his pacing; he kept his motions consistent, continuing to force more gasps and groans from her lips.\n\nHe leaned forward over her, bracing his hands on the bedding as he pressed his lips to her own. The movement brought his body flush to hers, his pelvis grinding against her clit. She dissolved instantly, craning her neck to kiss him back. Their mouths melded together, teasing and twisting in a frenzy of lust and passion. The fire in her belly blazed to life, roaring through her veins and racing up her spine.\n\nHer orgasm came without warning, nearly knocking her backwards. Her lips still fused to Darrow's, she screamed into his mouth. Silthos held her close, keeping her from rocketing off the bed. Her eyes squeezed shut, her muscles tightened in her belly. The walls of her pussy constricted around Darrow's cock, and she caught his groan of surprise in her throat. Her bucked hard against her, his body shaking as his own orgasm appeared. At the last second -- remembering the oath that none of them could climax inside her until they'd each had their chance - he slipped free of her body, spilling his seed onto the floor. His body stiffened, then relaxed as he collapsed onto her chest. His breath seared her skin, the weight of him nearly forcing the air from her lungs.\n\nThey lay there for a moment, catching their breath. Claire, caught between two impossibly strong male demons, closed her eyes and leaned her head back against Silthos' shoulder. She inhaled deeply, struggling to breath against Darrow's crushing weight. She squirmed uncomfortably, trying to find an open spot between them that would allow her more room to breathe.\n\nSilthos, recognizing her struggles, moved his hands from her breasts and placed them against Darrow's strong shoulders to shove him away.\n\n\"Get off, you big lummox. You're going to crush her.\"\n\nDarrow's dark eyes snapped open immediately. He scrambled for a handhold, pushing his body away from hers. She sucked in a deep, soothing breath while he found a seat on the smaller bed.\n\n\"God damn, woman. You're tighter than a vice.\" He grinned at her. \"No offense my dear, but I can see why Tarrin's been so eager to have you.\"\n\nShe giggled slightly, silencing his worry of insulting her.\n\n\"Speak for yourself. Her pussy has nothing on her ass. That was nearly painful.\" One of Silthos' claws stroked her hip. \"We'll need to have a few more tries before you're ready for that.\"\n\nShe nodded. The burning in her bottom had faded to a dull throb, though she reasoned a bag of frozen peas would be necessary if she ever wanted to sit down again.\n\nHandling her as if she were made of glass, Silthos rolled her off his body and onto the bed. She closed her eyes and curled into herself, trying to enjoy the last fading nuances of pleasure as the faded away.\n\nHe rolled her over, brushing a strand of hair from her face as he stared at her. \"Let me guess...you're exhausted.\"\n\nShe nodded. \"Totally. I don't know if I'll be able to stand.\"\n\nHe raised his eyebrows. \"Then I guess it's time we get you to bed.\"\n\nSliding off the bed, he scooped her up in his arms, cradling her against the ebony skin his chest. Flipping the sheets back, he gently placed her into the warm bed, adjusting her so she could lie comfortably.\n\nShe bit her lip, looking apologetically at Silthos. \"I'm sorry you and I didn't get a chance tonight.\"\n\nHe smiled at her and waved his hand, offering a small wink. \"Don't worry about it. You and I will deal with that tomorrow.\"\n\nShe nodded, then reached out to grab his wrist. \"You're the only one who hasn't slept with me yet.\"<br> \"Would you like me to stay with you tonight?\" He waited patiently for her answer.\n\nShe nodded again. \"Please.\"\n\n\"Lucky bastard,\" Darrow growly playfully. \"I was planning to wake her up tomorrow with her ankles by her ears if she'd picked me.\"\n\nShe giggled and shifted under the sheets. \"Maybe tomorrow, Darrow.\"\n\n\"Here's hoping,\" he muttered teasingly.\n\nShe tugged at Silthos' arm, coaxing him closer to the bed. \"Come on. I'm exhausted. Tomorrow I'll let you have whatever you want. I promise.\"\n\nHis brows shot up. \"Whatever I want? Even if that means swinging from a chandelier a hundred feet above a pit of spikes while I pound your sweet body without mercy?\"\n\nShe jerked his arm again. \"Even that.\"\n\nHe gave her a warm smile and gently pulled away from her grasp, moving around to the opposite side of the bed and slipping under the blankets. He wrapped his arms around her waist and pulled her backwards, pressing her body flush to his. She settled into his embrace, watching as Darrow and Thaltos also made their way to bed. Thaltos took the smaller bed directly in front of her, giving her a warm, congratulatory smile and he slipped into the blankets. Darrow claimed the bed behind her, intentionally muttering his plans for her body too loudly.\n\nShe smiled and closed her eyes, letting her exhaustion finally claim her body. She felt safe and warm, secure in her own skin and free from any fears of shadows or Tarrin. She fell asleep in Silthos' arms, pleased that her three lovers had finally claimed what belonged to them and happy that she had finally broken the last suffocating barrier of her freedom.\n\n* * *\n\nOutside, the silvery mist twisted and swirled below Thaltos' makeshift window, silently screaming to itself in rage for its lost prey. Fury stained the mist a dark burgundy streaked with slashes of black. Curse the girl for pulling away! Another few inches and it would have claimed her. It seethed, promising itself the girl would be claimed in time. It would find that luscious piece of meat again. Not today, not tomorrow, but soon.\n\nThere was good news, however. She'd already shown an intense curiosity for it, which left a fair amount of room to plan her capture. It would only take a little more prodding; another tempting curl of silver, a soft whisper in her ear to drive her close enough for capture. And when that child was finally in its grasp, it would corrupt her beyond the imaginations of the foolish mortals it trapped and consumed.\n\nThe idiot Tarrin was no issue. Boorish and easily enraged, he would prove useful in the days to come. He could find her quickly, following her delicious scent, and with a little coaxing, he could drive her into its tempting coils of silver and blue. Beyond that, he was a useless creature. But for now, he needed to be treated as a valuable tool for capturing its prey.\n\nThe mist swirled and screeched in delight. The humans in its grasp scattered to the edges of the marsh, terrified of the hypnotic shimmers of gold and crimson. They knew its seductive malice all to well and had warned the girl not to reach too close. It had raged at them, nearly obliterating the worst offenders. They would not interfere again, it made sure of that.\n\nThe mist swirled lazily, reveling in the wickedness of its plan. Just a few more days of waiting and with a little help from a demon, it could finally claim that delectable creature for itself. Patience and a little manipulation and it would have its prize.\n\nThe girl would belong to it soon, very soon.\n\nCan you just feel the excitement? I hope you liked this chapter because it took me weeks to write the damn sex scene. I'm far from a master when it comes to writing good descriptions of sex, so go easy on me. There will be more, I promise. Patience, my loves, patience.\n\nComing soon...Chapter 7 -- Shadowrunner"
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "female virgin"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/havencaller"
}