{
    "title": "Coming Home: Davis Brothers Ch. 06",
    "pages": [
        "Ben flexed his right arm at the elbow, glad to finally have the cast gone. He was over the moon at being able to use both of his hands now. He was finally back to work, driving a truck at Ace. Even though he was temporarily off the rotation for long hauls, that was fine with Ben. He could do the local transports just fine, and it kept him home with Benji. All was right in the universe as far as he was concerned.\n\nIt was a sunny Saturday afternoon and he had arranged for Lonnie to take Benji out to lunch and shopping or a movie to keep him busy for a few hours. There wasn't anything strange about that request. Benji and Lonnie had quickly become best friends over the past few weeks. The two little guys talked on the phone every day and hung out all the time. It was nice that Benji had a 'BFF' now, as Lonnie called him. It also meant that he saw more of his older brother.\n\nBrandon had always been his best friend since they were kids. Ben couldn't recall ever seeing Brandon like this, laid-back and carefree. Ben liked hanging out with the new, happy Brandon.\n\nAs part of his plans for the big surprise, he had something he needed to take care of first, something that he didn't want Benji to know about yet. This was not a task he was looking forward to.\n\nHe put his truck into park and shut the engine off. He shifted in the seat as he reached down between his legs and adjusted his flaccid cock, pushing it down into a more comfortable angle. The head of his cock was a little sore pressing against his jeans. Ben snickered. If his cock was sore, he imagined that Benji was definitely feeling it in his ass, and that made him puff his chest out a little, and he smirked cockily. He had fucked Benji twice this morning, and twice the night before. Since he got the casts removed earlier in the week, his sex drive had kicked into high gear. Oh yeah, everything was right in the universe: Benji writhing underneath him, getting his ass pounded into the mattress on a regular basis. Just the the way it should be.\n\nAfter double-checking the address against the piece of scrap paper, he let out a deep breath and got out of his truck. He walked up to the door and rang the doorbell.\n\nThe door opened and a curvy, middle-aged, bleach-blond woman with blue eye shadow and too much rouge on her cheeks answered. Before she could speak, a pudgy man pushed past her. At first sight, Ben knew it was the man he was looking for. He had Benji's height, along with his blond hair and hazel eyes, but that's where the similarities ended. He looked like he hadn't shaved in days and Ben could smell stale beer on his breath.\n\n\"Yeah?\" he asked, looking up at Ben with a suspicious eye.\n\n\"Chester Carter?\"\n\n\"Who wants to know?\" the man asked.\n\n\"I'm Ben Davis,\" Ben answered, extending his hand. \"I'm--\"\n\nBenji's father ignored Ben's hand as his eyes grew wide and his lip curled into a snarl. \"I know who you are. What the fuck do you want?\"\n\nBen dropped his hand and decided to get right to the point. He didn't want to play nice with the man anyway. \"I need Benji's birth certificate and social security card. I don't have time to wait for the county--\"\n\nChester snorted. \"Fuck off. And tell that little faggot to do the same.\"\n\nHe started to slam the door in Ben's face, but Ben reached out and his big hand stopped the door cold. He was proud of himself for the restraint he had used so far, but the man was already beyond trying his patience and begging for an ass kicking. If he didn't need something from him, he wouldn't have tolerated that word used against his Benji.\n\n\"Look, I need that birth certificate. Just give it to me and I give you my word you won't have to worry about me or Benji bothering you ever again.\"\n\n\"I don't got it. Now go fuck yourself. Or do I need to call the cops and have you thrown off my property?\"\n\nChester slammed the door in his face and Ben growled and flexed his fists. It was taking everything in him to not kick the door open and go caveman on his ass and beat the shit out of him, tear apart the house and take what he came for. As much as he'd like to do that, it would probably make Benji upset.\n\nFuck. He didn't want to wait, but it looked like he didn't have a choice. He'd probably have to ruin the surprise as well since he'd need Benji to request the official documents from the government. God damn it. There went his plans.\n\n***\n\nBrandon heard the chime of the outer door and looked up from his paperwork towards his open office door. He heard the quiet voices and giggles and didn't have to get up from his chair to know who it was. He cocked his head and tried to listen in.\n\nAfter spending the day shopping, Benji and Lonnie had just arrived at the Davis & Adams Remodeling office. While Lonnie was out riding around town with Benji in Benji's little red Focus, Brandon had gone in to get caught up on some paperwork and take care of the bills.\n\nBrandon easily recognized Lonnie's whisper. \"So, if I swallow when the head starts to gag me, it'll slide in easier?\"\n\nBrandon's pen flew out of his hand and he lost his balance as he tried to grab for it and almost fell out of his chair. Surely they weren't talking about...\n\nBrandon uprighted himself in the chair as Lonnie and Benji walked into his office. Lonnie's cheeks were flushed red, the same as Benji's. When they saw Brandon, both of them laughed nervously as if they were embarrassed. Brandon couldn't help but smile. Fuck, if Lonnie wanted to practice deep-throating cock, Brandon would be the first in line. No, he'd be the only one in line. Not that Lonnie needed practice as far as Brandon was concerned; his skills were already first rate.\n\nLonnie set down his shopping bags and gave Brandon a dimpled smile that almost stopped his heart. Damn, he liked seeing his Lonnie happy.\n\nBrandon stood as Lonnie came around the desk. \"You have a good time today, cupcake?\" he asked.\n\n\"Yeah,\" Lonnie said as he put his hands on Brandon's bulky waist and pushed up onto his toes. Brandon leaned down and gave him a quick kiss on the lips. \"We had fun.\" Lonnie brought both hands up to Brandon's face and scratched his fingers through his thick beard. \"Missed you,\" he whispered only for Brandon's ears. Lonnie's words simultaneously warmed Brandon's core and sent his blood pumping south. Brandon gave him another longer kiss, making Lonnie moan softly against his lips.\n\n\"Hi, Brandon,\" Benji said from the doorway. He had a little smirk on his face as he watched Brandon and Lonnie kissing. \"Aren't you guys sweet?\" he said with a snicker.\n\nBrandon didn't care that Benji was poking fun at him. He'd steal kisses from Lonnie any chance he got. If that made him 'sweet', then fuck it, he was sweet. He pulled Lonnie against his body and rested his chin on top of Lonnie's head as he looked over at Benji. \"Hey, little bro. Thanks for keeping Lonnie company for me while I was at work.\"\n\n\"Of course. Anytime. We had a blast,\" he said. He turned to Lonnie. \"I better go. Ben should be home by now. I'll call you later, okay? Let me know how that... thing... works out.\"\n\nLonnie's eyes widened. \"Okay. Bye, Benji,\" Lonnie said with a nervous giggle.\n\nBenji gave the men a quick wave and left the office.\n\n\"Did you get a lot of work done?\" Lonnie asked Brandon, looking down at the papers and envelopes on Brandon's desk.\n\n\"Yup. What was that 'thing' Benji was talking about?\"\n\nLonnie cleared his throat and his eyes darted away from Brandon's. \"Nothing.\"\n\nBrandon smirked. Right. \"I'm all set to go.\"\n\n\"You know, I can help you with that stuff if you want,\" Lonnie said, nodding towards Brandon's desk. \"I want to be able to help you, make things easier for you.\"\n\n\"Yeah. I'll probably hand off some of this stuff to you.\"\n\n\"Good. Oh,\" he said with a snap of his fingers as he remembered something. \"We saw a really nice bedroom set today. It was on sale. Maybe we could go look at it together?\"\n\n\"Sure,\" Brandon said as he picked up Lonnie's shopping bags. \"When I asked you to look for a bedroom suit, I didn't mean you had to find something on sale. I want you to get something nice, something we'll both like. As long as the bed is big and really sturdy.\" Brandon gave Lonnie a quick wink.\n\n\"Oh my god,\" Lonnie muttered as he rolled his eyes. \"Subtle.\"\n\n\"While we're there, I'd like to look for living room furniture, too. We need a couch. So did you find some good stuff?\" he asked as he peeked into the bags.\n\n\"Just a few things for the house, some curtains for the bedroom, a doggy bed for Ricky, and a pair of pants and a shirt that were on clearance.\"\n\nBrandon locked up the office, put his arm around Lonnie and walked to the truck. Brandon opened the passenger door and helped Lonnie up into the cab. After he put Lonnie's purchases into the back seat, he walked around to the driver's side.\n\nLonnie looked over at his man as he got into the truck. After Brandon backed the truck out and pulled onto the street, he reached over and laced his fingers with Lonnie's, holding his hand while he drove.\n\nThey had been together for almost two months now. Lonnie was madly in love with Brandon and things were so great between them, better than Lonnie ever could have imagined. He was still amazed at how Brandon's 'coming out' was a non-event. He had expected the macho guy to want to hide in the closet, but not Brandon. Brandon didn't hesitate to tell anyone who asked that Lonnie was his boyfriend. He was even 'touchy-feely' in public. Once Lonnie got used to the PDA, he found that he liked it. He had once accused Brandon of being a coward, scared of what others thought. Knowing Brandon better, he realized that wasn't true at all. Brandon couldn't care less what other people thought of him. Lonnie strived to be more like Brandon in that regard.\n\nIt was about a week after Lonnie moved in that Brandon took him on what he considered a 'real date'. They decided to go simple and easy. They went out to dinner together at a local Japanese steakhouse, then caught a movie.\n\nThe hibachi style restaurant wasn't exactly authentic Japanese like his Mom used to take him to, but it was fun watching the chef cook at their table and the food was good. And Lonnie even got Brandon to try sushi, something the big man swore up and down that he'd never eat. Lonnie knew that Brandon was loathe to admit it, simply because it would be bad for his image, but Brandon actually enjoyed it.\n\nOn that day, the older man had on that ever-present beat-up Browning ball cap and a pair of Oakley knockoff sunglasses, a flannel shirt over a wifebeater, worn-out jeans and his big-as-hell work boots. He looked so comfortable, so macho that it made Lonnie feel a little bit self-conscious. He had worn a black fitted shirt and a pair of jeans. Standing next to each other, they must have looked like an odd couple, total opposites.\n\nDespite his redneck image, Brandon was quite the gentleman. He opened doors for Lonnie and helped him into his chair. It was weird since they were both guys, but Lonnie found that it was kind of nice, too. After dinner, Brandon put his hand on his back as they walked out of the restaurant. Brandon seemed oblivious to the looks that people were giving the pair.\n\nAs they stood in front of the movie theater box office, Brandon's hand slid down the small of Lonnie's back, resting just on the swell of his ass. Brandon leaned down and spoke softly towards his ear, while they discussed which movie they wanted to see. Lonnie knew that this time Brandon didn't miss the muttered comments and nasty looks from a group of men walking past them. Brandon didn't flinch and he didn't back off. The heated look he gave them just dared them to say something. Given Brandon's size and appearance, they would have to be damned fools to say anything to their face.\n\nLonnie looked up at Brandon and met his eyes with a smile. The way Brandon looked down at him, his eyes were filled with such affection, Lonnie thought that Brandon was going to actually kiss him right then and there. Lonnie's cheeks pinkened at the thought and Brandon's mouth turned up in a smirk as he watched him. Feeling safe and treasured, Lonnie cuddled in closer to Brandon, and happily agreed to Brandon's choice of a big-budget action movie.\n\nThat was when Lonnie realized that Brandon knew exactly what he was doing. He knew that people were watching or whispering about them. Brandon was trying to make a point to Lonnie. He wanted to be in a relationship with Lonnie and he just didn't care what other people thought. It was only him and Lonnie that mattered. Lonnie admired him for that and it inspired him to be a little braver himself. It also helped him to be more confident in their relationship.\n\nLonnie smiled at the memory and gave Brandon's hand a little squeeze. Brandon looked over at Lonnie and smiled. He pulled Lonnie's hand up to his mouth and gave the back of his knuckles two quick kisses.\n\nOnce they got into the house, Brandon tossed his keys and cap onto the table at the door. He scratched his fingers over his short hair.\n\n\"Gotta pee!\" Lonnie groaned as he raced through the house.\n\nRicky yapped at him as he ran past, then ran up to Brandon and bounced around in circles, yipping happily that his daddies were home. Brandon scooped the little dog up and gave him a kiss on the top of his head. Ricky squirmed around until Brandon nearly dropped him.\n\nHe set the little dog down with a laugh. After petting and loving on him a little more, Brandon took him out into the yard to do his business.\n\nNo sooner had Brandon stepped inside, when Lonnie yawned and stretched his arms over his head. \"I think I could use a nap.\"\n\nA smile crept over Brandon's mouth. That was Lonnie's way of getting Brandon into the bedroom. And that meant that Lonnie wanted to fool around. \"Me, too.\"\n\nBrandon shut the bedroom door behind him, leaving a highly annoyed Ricky in the hallway.\n\nLonnie quickly got naked and pushed back the covers and climbed onto the bed. \"C'mere, stud,\" he whispered.\n\nBrandon didn't need to be told twice. He shucked his clothes in record time, tossed his cell phone on the night table, and pounced on Lonnie, making the flimsy bed frame creak in protest. Damn, they needed a new bed.\n\nLonnie managed to roll Brandon onto his back, and then slid down his body.\n\n\"Fuck,\" Brandon groaned as Lonnie's hot mouth surrounded his cock. He quickly stiffened to full bone as Lonnie proceeded to relentlessly suck him dry, expertly milking him with his mouth and hand.\n\nWhen Brandon felt an extra inch slide into Lonnie's throat, deeper than he'd ever gone before, he gripped Lonnie's hair in his fist and shouted his name as he pumped his mouth full of come. He felt Lonnie's jerking hand movements against his leg and then warm splashes of liquid soaked the hairs on his leg, accompanied by Lonnie's soft moans around his cock.\n\nLonnie let Brandon's spent dick fall out of his mouth with a plop. He crawled up to the head of the bed and flopped onto his back, with his head on his pillows. \"Whew.\"\n\nYeah, whew. Brandon was so sated, he didn't even care that his leg was covered in Lonnie's rapidly cooling spunk.\n\n\"You came quick,\" Lonnie said.\n\n\"Yeah. You're just too fucking good at that.\"\n\nBrandon rolled onto his side. He rested his head on his hand and looked down at Lonnie. He rubbed his finger down the middle of Lonnie's chest to his belly button. \"So, what was all that for?\"\n\n\"No special reason,\" he replied with a shrug. \"Just missed you is all.\"\n\nDamn, his cupcake was a sweetheart. Brandon dipped his head down and kissed Lonnie, sweeping his tongue into Lonnie's mouth. He tasted the remnants of his own semen and pulled away, licking and smacking his lips with an unhappy frown. Lonnie looked back at him and snickered as Brandon wiped his mouth with the back of his hand.\n\n\"Hey, you don't see me complaining when you shoot my mouth full of the stuff. A little bit won't hurt you.\"\n\nBrandon licked his lips once more. \"I guess it's not that bad. It's more the thought of it.\"\n\nLonnie reached over and began rubbing Brandon's belly with his hand, letting his fingertips brush through the hair and run over the warm skin.\n\nBrandon stared down at Lonnie for a moment. \"You know I was thinking... You need to call your mom, cupcake.\"\n\nThat was not what Lonnie was expecting Brandon to say at this particular moment. He sat up and looked at Brandon like he was crazy. \"Wha-huh?\"\n\n\"Yeah. I think you should start calling her once a week at least, to talk for as long as you want, no matter the cost.\"\n\nLonnie started to argue how expensive international calls were, but then Brandon said, \"She's your mom, cupcake. You'll regret it for the rest of your life if you don't take this opportunity to keep in contact with her.\"\n\nKnowing Brandon's situation with his own mother, there was no way he could argue with him. Lonnie pressed his hand to Brandon's bearded cheek and leaned in and kissed the big man. He took the offered cell phone and sat back on their bed to make the call.\n\nHe hadn't realized how much he missed his mom until he heard her voice. When he started to get emotional, Brandon moved around the bed and moved up behind him. Brandon sat with his back against the wall and moved Lonnie so that he was sitting between his thighs, resting back against his chest.\n\nLonnie didn't tell his mom about the situation with his dad because he didn't want her to worry. But he told her all about Brandon, how much he loved him and how happy he was living with him. He told her about his new job, and she gushed on and on, making it sound like he ran the office, when all he did was answer the phones and did the computer work. And all the while, Brandon held him tight, comforting him and pressing gentle kisses to his head.\n\nShe even talked to Brandon for a few minutes, telling him embarrassing stories about when he was little, like the time when he was a toddler and he pulled off all of his clothes and his diaper and ran stark naked through the aisles at Target. It moved Lonnie to hear the two of them laughing together on the phone.\n\nAfter Lonnie promised to call again in a week and hung up, he and Brandon sat in silence for a while until Brandon said, \"We should go to Japan and visit someday. I bet it would be nice there. Maybe this winter, you think, after Christmas?\"\n\nLonnie turned around and sat back on his knees and looked at Brandon in amazement. He leaned in and placed tender kisses on his lips, making sure that Brandon knew that he was loved. \"I love you,\" Lonnie told him, whispered against his lips. \"My big teddy bear.\"\n\nBrandon slid his tongue into Lonnie's mouth and slowly, deeply loved him back.\n\nThe pair settled into the bed and Lonnie pulled the blankets up around them. He settled onto Brandon's chest. He softly stroked Brandon's chest fur as he listened to the man's soft snores.\n\nIt was all so perfect.\n\nAlmost.\n\nThe only thing that was missing were those three little words. In all this time, Brandon still hadn't said that he loved Lonnie. Lonnie promised to be patient and didn't want to push, but still... He told Brandon he loved him all the time. He was sure that Brandon was in love with him, but it would be nice to hear it back at least once.\n\n***\n\nWhen he heard the clomping of heavy cowboy boots step into his office, Benji lifted his head from his computer and smiled at his partner. He looked over at the clock and saw that it was after 5:00. \"Oh, wow. I've been so swamped, I didn't even realize what time it was. Mondays suck.\"\n\n\"No problem,\" Ben said. \"I was running a little late. I had a big load to deliver.\"\n\nBenji smiled and lowered his voice. \"Oh, too bad. I was kinda hoping that I'd get your big load delivery tonight.\"\n\n\"You little dirty-mouthed slut,\" Ben laughed out loud. \"I might just have to wash your mouth out... with one of my big loads.\"",
        "Benji laughed. \"Gimme a second, and I'll be ready to go.\"\n\nBen stood by and chuckled as his boy shut down his PC and locked up. He loved when Benji got playful. He hated that his surprise was going to be ruined by his boy's asshole sperm donor. Chester Carter wasn't man enough to be called a 'father'. God damn that man. He should have beat the shit out of him two days ago when he had the chance.\n\n\"Why so serious, big guy?\" Benji asked him, while squeezing Ben's big bicep to get his attention.\n\nBenji pushed his fingers into the waistband of Ben's jeans and locked his fist around Ben's belt. He used that as leverage to push up on his tip-toes and give Ben a kiss on his chin, melting away the frown and furrowed brows on Ben's face. He leaned in and sniffed Ben, getting light-headed at the musky smell coming from his big, sexy man.\n\nBen bent down and kissed Benji properly. \"Just thinking about stupid shit.\"\n\n\"Oh? Well, come on, let's go. When we get home, I'll help you relax.\"\n\n\"Yeah? How you gonna do that?\"\n\n\"I guess I could rub your shoulders for you. Or I could draw you a bubble bath. Or maybe I'll just give you a blowjob.\"\n\nBen looked down at Benji wide-eyed and nearly tripped over his own boots. Ben and Benji were still flirting and laughing when they exited the building to the parking lot.\n\nBenji nearly jumped out of his skin when he saw a woman walking towards them. The woman with the bad dye-job, blue eye shadow, red lips, and way too much cleavage for a woman her age, had clearly been waiting outside. When she saw them, she came stalking up to them like a crazy person. She handed Ben an envelope, giving Benji a quick side-glance. She pursed her lips together and looked at Ben. \"Here. Now, you keep your promise and never bother us again.\"\n\nBenji furrowed his brows and looked at Ben as he stuffed the envelope into his back pocket. \"Ben? What is that? What's going on?\" He turned back to the woman. \"Who are you?\"\n\nShe looked Benji up and down, not bothering to hide the displeasure on her face. \"I'm Edith. Chester's fianc\u00e9e.\"\n\nBenji's mouth dropped open. Chester? As in his father Chester? Not having spoken to his father in years, he didn't even know he was dating, let alone engaged.\n\nOh my god gross, this crazy looking woman was going to be his stepmom!\n\nWait a minute. \n\nBen somehow knew this woman. He turned back to Ben to ask him what the heck was going on, but a car pulled up and stopped in the middle of the parking lot. He gasped as he watched his father get out and storm up to the woman.\n\n\"I knew this was where you were going,\" his father snapped at the woman. \"I told you no!\"\n\n\"I don't want them hangin' over us,\" she sniped back. \"Give 'em the papers and let them be gone!\"\n\nBenji stepped forward. \"Dad--\"\n\nThe back of Chester's hand flew so fast Benji couldn't duck. He slapped Benji so hard, he stumbled backwards. \"Don't you dare call me that! Ain't no fag a son of mine!\"\n\nNo sooner were the hateful words out of his mouth than Ben raised his fist and slammed it straight into Chester's face, knocking the man right onto his fat ass.\n\nBen cowered over the chubby man, spit flying from his mouth as he spoke. \"You touch Benji again and I will kill you!\" Ben's face was beet red, angrier than Benji had ever seen him.\n\n\"You can't threaten me!\" Chester protested. There was a slight quiver in his voice that gave away the brave front he was trying to put on. He ran the back of his hand across his nose, smearing the trickle of blood across his face and hand.\n\n\"I'm calling the police!\" Edith cried as she pulled Chester to his feet.\n\n\"I'll have the both of you arrested for assault,\" Chester spat. He looked at Benji and added snidely, \"You'd probably enjoy a little jail time, being bitch to a gang of--\"\n\nBen stepped forward and looked down at the hateful man, his right fist raised. \"Don't you fucking talk to him like that,\" Ben snarled. \"Don't even fucking look at him, so help me...\"\n\nBenji snapped out of his daze and hurried to Ben's side. Now was not the time for Ben to go all captain caveman. He grabbed Ben's raised arm and tried to keep him from going after his dad again. \"Ben, please. Don't. He's not worth it.\"\n\nBen was seething with rage. He was pissed at the man and even more pissed at himself. He should have been faster. He should have known that the man would hit Benji. It wasn't the first time he raised his fists to Benji. He should have known. He should have protected his boy better. When Benji tugged at him, it took everything in him to let his fists drop, but he still maintained a tense posture, moving slightly in front of Benji to protect him. No way in hell was the asshole going to get another shot in.\n\nBen was hugely intimidating and Chester tried to show a brave face, but you didn't need to be a psychic to see that he was scared to death of the big man, and rightfully so. Ben was just seconds from doing major damage to the man's face.\n\nChester shrugged his arm out of Edith's grasp and muttered, \"Just get in the goddamn car, woman.\" He looked at Ben and Benji and spat a wad of snotty blood onto the ground in front of Ben.\n\nAs soon as they pulled away, Ben shook his right hand and groaned. \"Motherfucker!\" he swore as he flexed his arm at the elbow, working through the painful throb.\n\n\"Are you okay?\" Benji grabbed Ben's hand and wrist and examined it. He pushed his fingers into the hair on Ben's forearm, tracing the surgery scar, then rubbed his arm and elbow, trying to massage the pain away.\n\nBen patted the hand on his elbow. \"I'm fine, baby. Are you okay?\"\n\nBenji nodded and stood there staring at the road. He hadn't seen his dad in so long. He never imagined that his dad would accept him or his 'lifestyle', but he certainly didn't envision their 'reunion' turning out this way. The one thing that he didn't anticipate was that his dad apparently had a life... one that didn't include his son. It hurt, but Benji would have to accept that and move on. Crying about it wouldn't do anyone any good. It certainly wouldn't make his dad love him.\n\nBesides, Benji had a new family now. Ben, Toby, Brandon and their mother, and now he had Lonnie too. He took a deep breath and let it out slowly. He didn't need Chester Carter or what's-her-name.\n\nBut there was one thing he didn't understand. What did Ben have to do with any of this? What did he know? What was in that envelope? He looked up at Ben, who was still grinding his jaw. \"Ben, what's going on?\"\n\nBen looked down at Benji, his face softening. He let out a quiet breath and reached up and rubbed his thumb over the red mark on Benji's cheek. \"I'll try to explain on the way home, baby. Let's get out of here.\"\n\n***\n\n\"You ready to go, cupcake?\" Brandon asked his boyfriend as he stepped into the office after a long, tiring day of work. Brandon and Walker were each supervising two different basement remodels. Both men liked to get in and work with their crews, while at the same time checking the work and helping out their guys.\n\nBrandon leaned on his elbows against the reception desk. \"Sorry I'm running late.\"\n\nEven after two months, it was strange to think of the younger man as his 'boyfriend'. Brandon's coming out was kind of a non-event, at least to the people that mattered. Brandon was always the kind of guy who normally didn't give a rat's ass what people thought of him. Why change now that he was dating Lonnie? If people didn't like it, then fuck 'em. Lonnie made him happy. He made his life stress-free. He loved Brandon for who he was. What anyone else but the two of them thought didn't matter. It was that simple. It took him a long time to figure it out, but it was a lesson he'd never forget.\n\nLonnie looked up from his computer and smiled at his man. \"It's okay. I got caught up on all the proposals and schedules. I started the supply room inventory, too.\"\n\n\"Damn, you're good.\"\n\n\"I'm trying, Brandon, really hard.\"\n\nBrandon moved around the counter and pulled Lonnie up out of his chair and pulled him into his arms. \"You don't have to try to impress me, baby. You're doing a great job. Me and Walker appreciate all the work you do. Saves us from having to do it. In fact, we're talking about giving you some more responsibilities around the office.\"\n\n\"I want to earn my keep, Brandon.\"\n\n\"You earn it every night, cupcake,\" Brandon said with a growl as he bit the side of Lonnie's neck and squeezed his perky little ass while grinding his crotch into Lonnie's stomach. \"Mmm, every night and then some.\"\n\n\"Brandon, I'm being serious.\"\n\nBrandon pulled back and looked down at his boy. Lonnie looked on the verge of falling apart into tears as he worked over his bottom lip with his teeth, avoiding eye contact with Brandon.\n\nBrandon walked over to the front door and turned the deadbolt. He took Lonnie by the hand and led him back to his office.\n\nThey sat down in the chairs in front of Brandon's desk and Brandon leaned in close to Lonnie, holding his hand tightly. He tapped under Lonnie's chin, forcing the man to look up. \"Look at me. Every penny on your paycheck is earned fair and square with the work you put in at the office. And you probably deserve a lot more than you take home. You don't have anything to worry about, cupcake, you hear me?\" Brandon reached up and softly stroked Lonnie's cheek with the back of his hand. \"Not here, and not at home.\"\n\n\"You sure, Brandon?\" Lonnie whispered.\n\nBrandon got out of his chair and squatted down in front of Lonnie. He took both of his boy's hands in his own, stroking the amazingly soft skin with his thumbs. \"I'm one hundred percent sure, Lonnie. You mean so much to me, cupcake. I couldn't imagine my life without you in it. I've even grown fond of that ugly little dog of yours.\"\n\nLonnie sniffled and let out a soft laugh and squeezed Brandon's fingers. \"Ricky's our dog. And you love him, and you know it,\" he teased.\n\n\"Yeah, God help me, I do,\" Brandon laughed. His expression grew serious. \"But I love you, too, Lonnie. You know that, right? I'm not good with talking about feelings, but you have to know that I love you. It would kill me if you thought I didn't care about you.\"\n\n\"I do know, Brandon. It's just nice to hear you finally say it.\" Lonnie couldn't hold it in anymore. His eyes overflowed and tears fell down his face. \"I love you so much.\"\n\nBrandon reached up and wiped Lonnie's cheeks dry. \"Aw, cupcake...\"\n\nLonnie grabbed Brandon's face in his hands and leaned forward and kissed him. Brandon took the younger man into his arms and kissed him back. Their passion ignited and Brandon gripped a handful of Lonnie's silky black hair, holding him tight in place as he ravished his boy's mouth with his tongue.\n\n\"Mmm,\" Lonnie moaned softly as Brandon started kissing on his neck. \"You're so hot.\"\n\n\"You're so fucking sexy, baby. You make my cock so fucking hard.\"\n\nAs if he didn't believe Brandon's words, Lonnie reached between Brandon's legs. His fingers easily found Brandon's large erection, painfully pushing at the fabric of his tight jeans.\n\nWith an animal grunt, Brandon gripped Lonnie tight and picked him up, causing Lonnie to squeak in surprise and grip Brandon tight around his neck. Brandon carried him and dropped his ass on the edge of his desk. Lonnie gasped and wrapped his legs around Brandon, pulling him closer.\n\n\"Gonna fuck you, baby,\" Brandon growled. \"Right here, right now. Gonna pound you into the fucking desk.\"\n\nLonnie's whole body shuddered at Brandon's pledge. \"Oh, yeah, give it to me. Gimme that big daddy dick.\"\n\n\"Fuck, boy,\" Brandon groaned, his knees going weak at hearing Lonnie call him 'daddy.'\n\nBrandon crushed his lips against Lonnie, taking his mouth hard and deep, thrusting his tongue into his boy's mouth. Lonnie's hands were all over Brandon's husky body, touching and pulling, trying to unbutton the man's flannel shirt. Brandon's own hands were busy at Lonnie's pants, unbuckling and unzipping. He tugged them down hard with his underwear. He pulled off one of Lonnie's shoes and tossed it aside, then yanked his pant leg off so that he could get between his boy's legs, where he belonged.\n\nHe broke the kiss long enough to spit onto his fingers. While he pressed his slicked fingers between Lonnie's legs, he pushed his mouth back onto Lonnie's.\n\nLonnie moaned around Brandon's tongue as the bigger man's fat finger breached his hole. Brandon was so passionate and rough and he was going to take what he wanted. He knew Lonnie would submit eagerly. Brandon was so hot right now, Lonnie felt like he might just burst into flames.\n\nWhen Brandon pulled back, Lonnie moaned at the sudden lack of contact. \"No, don't stop.\"\n\nBrandon shrugged off his flannel shirt, leaving behind a tight wifebeater. Lonnie tried to grab at Brandon to pull his sexy bear closer, but his man squatted down out of reach. Lonnie gripped the sides of Brandon's desk in anticipation. When Lonnie felt him spread his cheeks and shove his face into his crack, he thought he had died and gone to heaven. No one else had ever done that to him before, but Brandon loved to eat his ass. It got him wet and relaxed, and made it so much easier to take that third leg his man had hanging between his legs.\n\n\"Brandon,\" Lonnie whimpered. He leaned forward and wrapped his hands around Brandon's head.\n\nIt drove Lonnie out his mind with pleasure when Brandon rimmed him. Half the time he ended up shooting all over himself before Brandon could even put that monster cock inside him. He watched the top of Brandon's head move back and forth, up and down. His beard scratched at his sensitive skin, sending Lonnie into orbit. Brandon's tongue pushed into his ass and swirled and licked and probed. The grunting noises Brandon was making while he ate him out were so manly and sexy and it turned him on even more.\n\nBrandon pulled back and stood up. Lonnie looked between Brandon's legs and moaned at the sight of that thick cock that jutted from an overgrown bush. Lonnie wrapped his fist around it, squeezing it tight, trying in vain to make his fingers touch his thumb. He slowly slid his hand up and down, covering and uncovering the helmet-shaped head with the thick foreskin. A clear drop of pre-come oozed out of the slit and Lonnie scooped it up with his finger and brought it to his mouth and sucked it clean.\n\nFuck. Brandon was past the point of ready. He needed to be buried inside Lonnie's ass right fucking now. He yanked open a desk drawer and rifled around, hoping to find some slick. He pulled a single disposable packet of lube from the drawer, made a mental note to buy some more, then unbuckled and unzipped his jeans, giving them a push until they fell to the floor and pooled around his boots. He skinned back his foreskin and tore open the lube pack with his teeth. He squirted it all over his cock, then squeezed the rest onto Lonnie's twitching asshole.\n\nHe held onto Lonnie's shoulder for leverage as he pushed the tip forward, breaching Lonnie's sphincter.\n\nLonnie's eyes rolled back into his head. \"Oh, god, you're so damn big!\"\n\nBrandon looked down at Lonnie's dick, purple and wet, already throbbing, ready for release. He watched his girthy length disappear inch by inch into Lonnie's stretched sphincter. How the little man took all of his ten inches he would never know. He was just grateful that not only did he take it all, but he fucking loved it.\n\n\"You're so motherfuckin' tight, baby,\" Brandon groaned as he bottomed out. \"Gonna fuck you now. I'm gonna ruin all other cock for you.\"\n\n\"You already did,\" Lonnie panted as he clung to Brandon. \"The first time I had you, I knew I'd never be satisfied with anyone else.\"\n\nLonnie's words made Brandon feel like a god. Christ, he was going to fuck his boy good! Brandon growled and pressed his hand to the middle of Lonnie's chest and pushed Lonnie flat on his back onto the desk.\n\nLonnie screamed in pain and Brandon froze in a panic. \"Lonnie? Baby?\"\n\nLonnie arched his back and reached under and pulled out a stapler. He tossed it onto the floor and gripped his hands on Brandon's soft waist and lifted his legs and wrapped them around Brandon's ass. \"Fuck me, daddy. Fuck me like only you know how.\"\n\nBrandon released a relieved breath as his cock swelled and hardened even further inside his boy. He gripped Lonnie's hips and locked onto his brown eyes. \"Get ready, boy, 'cause I'm gonna fuck the come right outta ya.\"\n\nHis words caused Lonnie's eyes to flutter shut. He let out a whimper and tugged Brandon's waist, urging him to move.\n\nBrandon pulled back until the crown of his cock head was about to slip out, then shoved back in, hard. As the head of his cock stabbed Lonnie's gland, the boy cried out in ecstasy, arching his back and tightening his fingers around Brandon's waist.\n\nBrandon leaned over Lonnie and braced himself on the desk. Lonnie reached a hand up and gripped Brandon's tattooed bicep for leverage. His other hand tugged up the front of Brandon's wifebeater so he could get access to all that fur on Brandon's belly and chest.\n\nBrandon pounded roughly into Lonnie's ass, battering his poor little prostate with each thrust. For a second he worried that he was being too rough, but Lonnie was clearly not in pain. The boy was writhing under Brandon, his head thrashed from side to side, his back arched up and relaxed over and over while his hips bucked up against Brandon's assault. High-pitched whimpers fell from his lips. God, Brandon loved the sounds Lonnie made when he was being fucked. His boy looked so fucking sexy underneath him, Brandon felt himself close to coming way too quickly.\n\n\"Fuck me,\" Lonnie begged. \"Harder, daddy, harder...\"\n\n\"You are so fucking sexy, baby. Whimper for me. Yeah, that's it, push back on my cock. Take it, boy.\"\n\nBrandon slammed into Lonnie, giving it to him as hard as he could. His heavy, low-hanging balls slapped against Lonnie's skin. His body slapped against Lonnie's, his knees banged into the side of his desk. The sounds echoed through the room, drowning out Lonnie's whimpers and his own grunts.\n\nWhen Lonnie put his hand behind Brandon's neck and tugged down, Brandon dipped his head down, and sucked hard on Lonnie's neck, bringing a bright hickey to the surface. He slid his tongue down to his nipple. He flicked his tongue back and forth across the hard nub, then gave the other one the same treatment.\n\nLonnie threw his head back, banging it against the surface of Brandon's desk. His muscles tensed and he arched his back up and gripped Brandon's biceps in a white-knuckle grip. He pushed his aching dick against Brandon's hairy belly, letting the friction push him over the edge. His moaning raised in pitch and volume, and his entire body went tight and started to shake uncontrollably.\n\n\"Fuck, yeah!\" Brandon shouted triumphantly, feeling ten feet tall and proud as hell that he was about to make his boy come, and come hard.\n\n\"Brandon! I'm-- Oh! Oh god, daddy, I'm coming!\"\n\nAnd then he exploded. Brandon stared down at Lonnie, watching the amazing array of expressions on his beautiful face as he came. Brandon felt the warm bursts of liquid on his belly at the same time as Lonnie's ass muscles clamped down on his cock and started milking. Lonnie gasped and groaned underneath him and Brandon lost control.\n\n\"Oh, fuck, I'm about to come, baby. Fuck, Lonnie!\"\n\nBrandon could hear himself grunting like a pig with each thrust, but he was unable to hold back the noises. He lost control and slammed into his boy over and over as he rode out the most intense orgasm of his entire life. His cock felt like it swelled to twice its size as it jerked and pulsed, sending huge bursts of hot spunk so far up into Lonnie he was afraid the boy would choke on his come.\n\nHis arms gave out and he collapsed onto Lonnie with a long groan. He tried to get up, but Lonnie's arms and legs tightened around him and held him down. Brandon was a sweaty mess, but apparently Lonnie didn't care.",
        "\"No, please,\" Lonnie whispered. \"Don't pull out yet.\"\n\nBrandon pressed his lips to the side of Lonnie's head. He lifted his head up so that he could see Lonnie properly. The expression of love on the younger man's face nearly brought him down.\n\nLonnie looked up at Brandon, panting and struggling to catch his breath. \"I love you, big daddy, I love you so much.\"\n\nBrandon struggled to catch his own breath, due to Lonnie's declaration of love as much as the massively intensive orgasm he just experienced. \"I love you, too, cupcake.\"\n\nBrandon let his head drop next to Lonnie's. He held Lonnie close, mindful to keep his full weight off the smaller man, gently kissing and caressing him. The tenderness contrasted sharply to the roughness of just a few minutes earlier.\n\nHe could tell Lonnie was very emotional right now, trying to hold it together to keep from crying tears of joy. It amazed Brandon how powerful those three simple words were. He wanted to kick his own ass for not saying them sooner.\n\nTheir breathing slowed as they held each other. Lonnie let out a soft sigh and his legs relaxed from around Brandon and dropped against the side of the desk. His arms remained wrapped around Brandon's broad back, holding him close. Brandon's spent cock softened enough to slip out of Lonnie's body. He could feel the wetness between Lonnie's legs and knew he'd have a mess running down the side of his desk that would need to be cleaned up.\n\nIn the past, Brandon was never a cuddler. Hell, he used to always fuck doggy style, so he wouldn't have to look his partner in the face. But something about Lonnie made him throw all that bullshit out the window.\n\nHe fucked -- made love -- to Lonnie facing him, wanting to see his eyes and his facial expressions. God, the way Lonnie's face looked as he came was enough to take his breath away.\n\nBrandon didn't mind cuddling with Lonnie. His cupcake was a little snuggle bunny. Maybe he didn't mind because Lonnie seemed to really need the closeness. It made his cupcake so happy, and that made Brandon want to do it all the more. No, that wasn't the only reason. Brandon had to admit to himself that he loved the closeness just as much.\n\nBrandon lifted his head and looked down at Lonnie. His boy was sprawled on his desk, eyes closed, lips parted, looking as if he was nearly asleep. His pouty lips were red and swollen, and wet and juicy from their kisses. He had a vivid hickey on the side of his whisker-burned neck, marking him as taken. He looked completely debauched and totally fucked, but at the same time, there was a vulnerability about him. He was utterly adorable.\n\nBrandon leaned down and kissed the tip of his nose. Lonnie opened his eyes halfway and gave Brandon a happy and sated smile.\n\nThe thought that Lonnie might not know how much he was loved by Brandon made him feel sick to his stomach.\n\nBrandon already had a plan in the works. It was something big and Lonnie would know then how much Brandon loved him.\n\nAs far as Brandon was concerned, actions spoke louder than words.\n\n***\n\nBenji stood outside Ben's shiny red semi-truck cab. He craned his neck up at the open driver's side door and frowned. \"I don't know, Ben. I have so much work to catch up on. This is crazy.\"\n\n\"It's my first long haul since I came back to work, baby. Is it crazy that I want you to come with me? After the past couple of months we've had, it'll be like a little vacation, and we could both use a break.\"\n\n\"I suppose... not that a distribution warehouse in Cedar Rapids would be my ideal vacation spot,\" Benji said with a snicker.\n\n\"It'll be fun. I promise.\"\n\n\"I just can't believe that Cole agreed to it.\"\n\nBen was acting so weird lately. There was that crazy business with his dad and that woman last week. Ben never explained what he got from them, he just said it was important and was part of a surprise. For the life of him, he couldn't imagine what his dad had that Ben would need. Benji had complete trust in Ben, but the insistence that he go on one of Ben's long hauls was just odd. 'Part of the surprise,' he had said.\n\nWell, Benji had to admit that he was curious about what Ben did when he was gone on the road, what it was like to sleep in the truck. And he missed Ben fiercely when he was away. He wasn't ready to be separated from him just yet. Maybe it would be like a little vacation...\n\nBen helped Benji up into the truck -- making sure to grope his ass as he did -- and Benji moved into the passenger seat and buckled up. He watched Ben go through his checklist and note his log. As Ben wrote on his sheets, the tip of his tongue poked out and tickled the ends of the bristled hairs that made up his sexy horseshoe mustache.\n\nYum. Ben looked so rugged and manly behind the big wheel.\n\nBen looked back towards the sleeper mattress and smiled to himself. He couldn't wait to try out the bed. And he wasn't talking about sleeping.\n\nBenji looked out the passenger window as Ben easily maneuvered the fully loaded semi-truck off Ace property and onto the road towards the highway. He looked back over at his big guy and smiled. \"You're right. This is gonna be fun.\"\n\n***\n\n\"I'll transfer you right away. Please hold.\" Lonnie tapped the 'hold' button, then pressed the 'intercom' button. \"Brandon, you have a call on line one, Ralph from Floor and Tile Surplus.\"\n\nLonnie watched the blinking light for a few seconds and frowned when it hadn't been picked up. He got up from his desk and walked over to Brandon's office. The office was empty. He looked over at the bathroom door to see that it was open. He shook his head and picked up Brandon's phone and pressed 'Line 1'.\n\n\"I'm sorry, Ralph. Brandon stepped away from his desk. Can I have him call you back? Okay, thank you.\"\n\nLonnie hung up the phone and went in search of his man. He had a pretty good idea where he was. He pushed through the back door exit, stepping into the back parking lot. The sudden bright sunlight had him shielding his eyes with his hand. He looked over and sure enough, there was Brandon.\n\nBrandon stood by the dumpster smoking a cigarette, talking to a guy who was wearing a green 'Bug Zappers' polo shirt, the name and logo of the company next door.\n\nLonnie couldn't help but check his man out. Brandon was wearing his ball cap backwards on top of his head and a pair of sunglasses. His beard was looking a little scraggly around the edges. Even though Brandon was talking to the bug guy, with his eyes hidden behind the Oakley knockoffs, Lonnie knew that Brandon was watching him. Brandon's hand discreetly reached down and his fingers cupped and pushed his bulging package, shifting his dick into a more comfortable position.\n\nWoof.\n\nAs Lonnie approached, Brandon took one final drag, dropped his cigarette butt and stomped it out using his work boot, exhaling his smoke upwards away from his friend. The bug guy did the same.\n\n\"Brandon, Ralph called again. He wants you to call him back as soon as possible.\"\n\n\"Thanks.\" He turned to the bug guy. \"Corey, this is Lonnie, our new office manager.\"\n\nCorey was a handsome man, in good shape, and his salt and pepper hair gave him a distinguished look, but he wasn't really Lonnie's type. Lonnie gave Corey a friendly smile and held out his hand. \"Hi. Nice to meet you.\"\n\nCorey shook Lonnie's hand. \"Corey Lawrence. I own Bug Zappers next door. It's very nice to meet you.\" Corey held onto Lonnie's hand as his eyes slid up and down Lonnie's body. \"Very nice.\"\n\nAs Corey pulled his hand back, his fingers lightly stroked the inside of Lonnie's palm.\n\nLonnie felt embarrassed at the older man's obvious attention. It wasn't that he was interested, not at all, but the man was shameless. Lonnie heard a grunt from Brandon and turned his way. The sunglasses and blank expression didn't really give away what Brandon was thinking. Didn't Brandon know the man was hitting on him? Didn't he care?\n\n\"How long have you been working at D and A?\"\n\nLonnie heard the question and looked back at Corey. It took a second to process what the man was asking since he had been concentrating on Brandon. \"Uh, I've been working here almost two months now.\"\n\nBrandon looked back and forth between the two men.\n\nWhat. The. Fuck! \n\nWas Corey hitting on Lonnie right in front of him? And why wasn't Lonnie getting pissed off? Did that motherfucker Corey just wet his lips while looking at his cupcake? And now he's making a stupid lame-ass joke about some god-damned bugs? Wait. Did Lonnie just fucking giggle?\n\n\"So, if you ever need anything, you give me a call,\" Corey said as he pressed a business card into Lonnie's hand. \"My cell phone number's listed there.\"\n\nOh, hell no!\n\nBrandon snatched the business card and crumpled it up and tossed it at Corey. It smacked his forehead and bounced onto the pavement. Lonnie gasped and looked up at Brandon, his jaw dropped in shock.\n\nCorey looked at Brandon like he had lost his mind. \"What the hell, man!\" He furrowed his brow at Brandon and rubbed the middle of his forehead.\n\nBrandon grabbed Lonnie's hand and yanked the smaller man to his side. He spoke calmly and clearly, trying to keep the rage from his voice. \"Lonnie's not just my office manager. He's my partner.\"\n\nBrandon glanced down at Lonnie, expecting his boy to be majorly pissed off at his caveman-like behavior. But, goddammit, Lonnie was his! He didn't know what the hell to think when he saw that Lonnie had a huge grin on his face.\n\n\"Oh.\" The shock of the whole situation was clearly written all over Corey's face. He held up his hands palms out, in a gesture meant to try to calm Brandon. \"Oh, I'm sorry, man, I didn't... Hell, I didn't even know you were gay.\"\n\n\"Yeah,\" Brandon said. \"I am.\"\n\nCorey turned to Lonnie. \"I apologize.\"\n\nLonnie shrugged a shoulder. \"It's okay. You didn't know.\"\n\n\"You wouldn't happen to have any brothers, do you?\" Corey asked with a wink.\n\n\"No,\" Lonnie said with a laugh.\n\n\"All right,\" Corey said with a exaggerated sigh. He looked down at his watch. \"I'd better get back inside. Talk to you later, Brandon. Nice meeting you, Lonnie. Gimme a call if this one doesn't treat you right.\"\n\n\"You don't have to worry about that,\" Brandon growled.\n\nBrandon and Lonnie walked back into the D and A offices, still holding hands, neither of them speaking. When they stepped into Brandon's office, Lonnie shut the door behind them.\n\nBrandon sat down in his chair and pulled out his phone to look for Ralph's contact information. Lonnie dropped onto his knees in front of Brandon's chair and pushed his thick thighs apart.\n\nBrandon looked down at Lonnie, eyes wide open, jaw dropped to his chest. \"Lonnie?\"\n\nBrandon swore that Lonnie's eyes went glassy. \"You got jealous and you claimed me. You said you were gay. You said I was your partner.\" He took in a deep breath and it stuttered as he exhaled. \"For all those things, you're about to get the blowjob of your life.\"\n\n\"Oh, fuck,\" Brandon groaned. As Lonnie lowered his zipper, Brandon leaned his head back and closed his eyes.\n\n***\n\nBen helped Benji down from the truck cab and they walked together towards the rest stop bathrooms. Ben was done driving for the night and they'd spend the night here before continuing on in the morning.\n\nBenji covered his mouth and yawned. He looked around the darkened parking lot and noted the semi-trucks parked there, apparently stopping for the night as well.\n\nHe followed Ben into the restroom, the door opening with a loud creak that echoed through the empty bathroom.\n\nAfter they brushed their teeth at one of the sinks, they both took a stall to do their business. Ben moved into the first stall, and Benji left an empty buffer stall between them. He just had to pee, but he was pretty sure Ben had to do more. And he sure as heck didn't want to hear -- or smell -- Ben going to the bathroom. He had more than enough of that. And thank god Ben had the use of both of his hands now!\n\nWhen Benji finished, he went to the sink and washed his hands. He moved to the side to wait for Ben. He leaned over and peeked under the stall and saw jeans pooled around a familiar pair of size fourteen cowboy boots and knew that Ben was still there.\n\nWhen the outer door creaked open, Benji quickly stood upright and leaned back against the wall. A burly man in a Pete trucker cap walked into the restroom and he eyed Benji up and down as he approached. Benji gave him a nervous smile and looked away, wishing that Ben would hurry up. The man walked into the stall previously occupied by Benji.\n\nBenji tapped his fingers against his thigh, nervously waiting. He glanced back over to Ben's feet and was relieved to see him starting to move around. His eyes slid to the stall he came out of and he drew in a sharp gasp. The trucker had the stall door partially open and was openly jerking off while staring at him.\n\n\"C'mere, boy,\" he grunted through his teeth. \"Suck me off. Make it quick.\" He wagged his fat dick at Benji.\n\nBenji gasped again and pushed himself off the wall as Ben exited his stall.\n\n\"Let's go,\" Benji hissed quietly to Ben, trying to pull him away.\n\nBen frowned at Benji as he went to the sink and washed his hands. \"What's wrong?\"\n\nBenji nodded his head over to the other guy, who was standing in the stall door. He had put his dick back in his jeans, but he had his hand cupped over it.\n\n\"He your boy?\" he asked Ben, tipping his chin towards Benji. \"You share?\" He squeezed his dick through his jeans, making sure Ben knew what he wanted from Benji.\n\nBen growled and his face went red with anger. Seeing that the situation could get out of control real quick, Benji grabbed his arm. \"Ben. Don't.\"\n\nGiving the man one last scowl, Ben put his hand on the small of Benji's back and quickly led him out of the building to the parking lot.\n\nAs they walked back to the truck, Ben was muttering and cursing under his breath. Benji grabbed his hand and squeezed it. \"Ben, it's okay. Let it go.\"\n\nBen stopped and let out a sigh. He looked down at Benji. \"I'm sorry. I just get so fucking jealous, I see red. The thought of that motherfucker looking at you like that while groping himself... It's so fucking disrespectful.\"\n\n\"He didn't know that I was with someone. And you know I'm not interested in anyone but you. I'm yours, Ben.\"\n\nBen looked down at Benji, his eyes still burning with rage. He repeated Benji's words, for Benji's benefit as much as his own. \"You're mine, Benji.\"\n\n\"Only yours, Ben.\"\n\nBen took a deep breath and forced himself to calm down. Benji was right. The man didn't know that Benji wasn't available. Ben was going to take care of that very soon. In a few days, everyone would know that Benji was taken.\n\nEither way, Ben would be more careful with his Benji at the truck stops and rest areas. No way in hell was he going to let anyone look at his baby like he was some kind of 'good buddy' looking for tricks. No fucking way.\n\nOnce they got back into the truck, Ben moved between the seats and opened the curtain and crawled into the sleeper. Benji followed him in, closing the curtain behind him. They got undressed in the dark, cramped space. Benji helped Ben yank off his cowboy boots, then the two of them dropped their clothes onto the floor.\n\n\"Are you sure there's enough room?\" Benji asked as he crawled over Ben's huge body and tried to get comfortable on the sleeper mattress. He pulled the sheet up and settled down on his side facing the back wall. Benji wasn't sure how Ben slept in his truck cab at night. It seemed like it would be too cramped for his big man. Ben was super tall at six-foot-six and he weighed a hefty 300 pounds.\n\n\"Yup. We'll be in close quarters, but you'll be fine. Hell, when we sleep in our king-size bed at home, you're always all up on my side anyways.\"\n\nBenji turned and gave Ben a playful scowl over his shoulder. \"Oh, well, I'll just make sure to stay on my side of the bed from now on.\"\n\n\"Did I say I didn't like it?\" Ben asked as he moved his body across the mattress on a diagonal and spooned up behind Benji's smaller form, adjusting him so that they were both somewhat comfortable.\n\nHe pulled Benji back to his brawny body and Benji snuggled back against his hairy chest. Ben pressed his hips forward, pushing his hard cock against Benji's hot little ass. He smiled when he heard Benji's breathing hitch.\n\n\"This is usually about the time when I'd be calling you,\" Ben said in his baby's ear. \"Trying to get you to have phone sex with me.\"\n\n\"Oh god,\" Benji said as he covered his eyes and blushed. \"You know that weirds me out.\"\n\n\"I know. One of these days, I'm gonna get you to do it, though,\" Ben husked into Benji's ear. Knowing how much Benji liked his facial hair, he rubbed the thick whiskers of his mustache along Benji's neck and his outer ear, while planting small kisses and flicks of his tongue. \"I wanna hear you jerk off for me, hear those little sounds you make, hear you come for me. You know that every time after I hang up with you, I have to jerk off, don't you? Oh yeah,\" he whispered as he licked along Benji's ear. \"Just hearing your voice makes me so damn hard, I have to pound one out as soon as we hang up. I fill up a sock with one of my big loads, wishing it was your mouth or your ass I was pumping full of my jizz.\"\n\nBenji drew in a breath, shuddered and let out a soft moan, \"Oh my god, Ben...\"\n\nBen chuckled in Benji's ear, loving how easy it was to turn his baby on. Benji's hand slid on top of Ben's, which was resting against his chest, holding him tight. Benji gave the hand a firm push, sliding it down his chest and stomach. When Ben's hand came in contact with Benji's hard-on, Benji moaned and pressed Ben's hand onto it. Ben wrapped his fingers around the slender shaft and gave it a gentle squeeze, feeling it throb in his fist.\n\n\"Ben,\" he whispered. \"Please.\"\n\n\"What do you want baby? Tell me.\"\n\n\"Make love to me, Ben.\"\n\nBen reached behind his head into the cubby hole along the side of the truck and pulled out a full bottle of lube. He bought the bottle especially for this trip. He jerked off a lot on the road, but he didn't need lube. All he needed was a little pre-come and his fist and foreskin took care of the rest.\n\nBen snapped open the purple cap and slicked up his fingers. \"I got you. I'm gonna take care of you, baby,\" he whispered seductively into Benji's ear. \"Don't I always take care of you? You're mine. I love you so fucking much. Let me show you how much I love you.\"\n\nBen slid his fingers into Benji's crease and stroked a circle around Benji's tight little hole. He stroked and fondled the pink pucker with the tip of his finger, then pushed inside. Benji moaned, gripping the beefy arm around his chest with one hand. The other grabbed onto Ben's hip and held tight.\n\nBen stretched his baby out slowly and gently with a pair of fingers before pushing in three fingers. He used a steady motion to open and relax Benji's hole.\n\n\"Ben... Need you, Ben. Now. Please. I can't... I can't wait.\"\n\nBenji's voice cracked, and Ben could hear the wanton desire in it. He slicked up his cock with the lube and rubbed the bare head back and forth across his Benji's entrance, teasing and toying with him.\n\n\"Ben,\" Benji moaned. \"Put it in.\" He pushed his ass back against Ben while pulling at his hip with his hand.\n\nBen pushed his hips forward allowing the tip to barely breach the muscle, then pulled back.\n\n\"No,\" Benji moaned. \"Don't tease me, please! I want you so bad.\"\n\nBen snickered. \"I got what you need, Benji. Don't I?\"\n\n\"Yes! I need it, Ben.\"\n\nBen rubbed his cock head along Benji's crack, stopping when it found its target. He paused then backed up again. Benji whimpered in frustration and Ben just smiled.\n\n\"Put your big dick in me. Fuck me!\"\n\nGod damn. With that, Ben couldn't resist anymore, teasing time was over. Holding Benji steady on his side, Ben spooned up behind him. He pushed forward and in one smooth motion, buried his cock to the hilt inside Benji. He pushed his forehead into Benji's neck and held on tight, holding him back against his body. Benji trembled in his arms as he willed himself to relax against Ben.",
        "When Ben felt Benji's sphincter relax and open, he began to move. He rocked his hips back and forth, slow and steady. He slicked up a hand and gripped Benji's cock.\n\nBenji moaned and bucked his hips into Ben's slick fist, then pushed back against him. \"Oh god, oh god, Ben!\"\n\nBen's mouth clamped onto the side of Benji's neck. He sucked hard, bringing a large angry bruise to the surface. There would be no doubt that Benji was taken now.\n\n\"You're mine, baby,\" he growled into Benji's ear. \"No one else touches you, ever.\" He sucked another hickey in the soft hollow below that ear. His hand moved up and down Benji's dick as he pumped his cock into Benji's ass. He rubbed his mustache against Benji's neck, then slid his mouth down to claim another spot on Benji's neck.\n\n\"Yes, Ben, yes. I'm yours, only yours. Ben, you're gonna make me come, please don't stop!\"\n\nBen growled against Benji's neck and sucked harder. His fist moved on Benji's dick in rhythm with the snap of his hips. Benji's body went stiff in Ben's arms. With a sob, he released hard. His body shuddered and Ben felt warm spunk coating his hand, shooting out onto the bed in front of Benji.\n\nBenji's ass contracted rhythmically around Ben's cock, like it was trying to suck him deeper into his body. Ben thrust hard and with a cry of his baby's name, he came inside Benji's quivering channel, filling his tight ass to overflowing with a huge load of hot come.\n\nBen planted gentle kisses all over his baby, anywhere his lips could reach.\n\nWhen Ben's cock softened enough for Benji's body to push him out, Benji rolled over and kissed his man deeply. Benji fell asleep in that same position. Laying his head down, softly breathing into Ben's neck while Ben rubbed a big hand up and down his back.\n\nHe laid quietly for a while holding Benji while he went over in his mind all of the things he needed to do.\n\n***\n\nLonnie found Brandon in the garage. He was leaning against his workbench, having a smoke.\n\n\"There you are.\"\n\nBrandon squinted his eyes as he drew in the heated smoke. He held it a second while he looked over at Lonnie's disapproving face. He exhaled. \"Yup,\" he said simply as he looked away from Lonnie.\n\nLonnie walked up to Brandon and pushed his hands into the front of Brandon's jeans, and linked his hands around his belt. \"I thought we were supposed to be getting ready to go? Not sneaking off for a cigarette.\"\n\n\"I needed a smoke.\"\n\nLonnie didn't have to be a mind reader to tell that Brandon was nervous about today. He was too, so he couldn't blame the guy for wanting a cigarette to calm his nerves. He tried to make a joke to lighten the mood. \"Smoking is bad for you, you know.\"\n\n\"Really? I hadn't heard that,\" he said dryly.\n\n\"I'll make you a deal. Next time you want a cigarette, come find me. I'll give you something else to do.\"\n\n\"Like what?\"\n\n\"Well, like a neck massage. You seem to like those. Or maybe...\"\n\nLonnie's nimble fingers unbuckled Brandon's belt and he dropped down to his knees as he unzipped. Brandon's semi-hard dick flopped out into the open and Lonnie couldn't help but moan and start to drool at the sight of that slab of uncut meat.\n\nHe gripped Brandon's thighs and took him into his mouth. He pushed his foreskin back with his lips, then took the whole thing into his mouth while he still could. Once it started to grow to its full size, he'd never get the whole thing into his mouth, but sure as hell was going to try. He loved to feel Brandon's dick grow from soft to hard in his mouth. He lifted his eyes and stared up at Brandon while he blew him.\n\nBrandon stared down at Lonnie, watching his boy suck his cock. He took a drag of his cigarette, holding it in his right-hand fingers, while his left guided Lonnie's head up and down. He had a feeling that this was going to be his last smoke. Taking a long, final drag, he tossed the butt into the coffee can on the workbench.\n\nHe grabbed Lonnie's head with both of his hands. \"Yeah, baby, suck my cock.\"\n\nThe head of Brandon's cock tapped the back of Lonnie's throat. Lonnie choked a bit the first time. The second time, he gulped and the head of Brandon's cock slipped into Lonnie's throat. He breathed through his nose, remaining calm. He was moaning and slobbering all over Brandon's shaft. The big man was cursing and groaning loudly, bucking his hips. The drool dripped down, spilling onto Brandon's tightening sack.\n\n\"Deep throat me, boy.\"\n\nLonnie was getting about eight of Brandon's inches into his mouth and throat now. A little more practice and he'd get it all. The thought made him speed up his motions and increase his suction. He hummed happily, sending vibrations through Brandon's prick right into his core.\n\n\"Oh fuck,\" Brandon grunted, overwhelmed by the sensations of being sucked so fucking deep. \"I'm gonna fucking come in your mouth, baby.\"\n\nWith a shout, he bucked forward and unleashed a torrent of spunk into his boy's greedy throat. Lonnie backed off, wanting to savor the taste of Brandon's come as the head spurted jet after jet into his mouth. Lonnie let it pool on his tongue before having to swallow. Once Brandon finally stopped coming, Lonnie used his tongue clean up his balls, and all around the shaft. He took the head back into his mouth and swirled his tongue all around the foreskin.\n\n\"God damn, cupcake,\" Brandon panted.\n\nBrandon helped Lonnie to his feet, pulling him off his cock with a pop. He squatted down in front of the smaller man while undoing his pants. Lonnie was already trembling, and he held onto Brandon's shoulders for support. Brandon spit into his hand and wrapped his fingers around Lonnie's dick. He watched a drop of pre-come ooze out and Brandon swiped his thumb across the head. For a second he wondered what it would be like to taste Lonnie. He moved his hand slowly and steadily. He gave his fist a twist, then flicked his thumb across the head.\n\nLonnie moaned loudly. Oh god, there was no way he could hold back. Brandon's hand was just too good. Within a minute, he was crying out, pumping his load all over. He splashed Brandon's lips and chin with the first shot, then his shirt, then spurted and oozed all over his hand. Brandon held onto Lonnie's hip with his free hand, trapping him in place and kept teasing the sensitive head with his thumb and fingers, making Lonnie buck and squirm. \"Brandon! Oh god, no more!\"\n\nBrandon let Lonnie go with a laugh and stood up. After sharing a sloppy kiss, the pair hiked their pants back up. Brandon grabbed Lonnie's hand and led him back towards the house.\n\nHe looked down at Lonnie with a smirk. \"You should know I smoke a pack a day, so you better buy some knee pads.\"\n\nThey both laughed and Lonnie pushed against his big bear with his shoulder.\n\n***\n\nLonnie chewed his thumbnail as he followed Brandon down the white, sterile hallway. He felt like his body was going to shake apart from nerves. This was a really big deal, no matter how much Brandon tried to downplay it. Lonnie had avoided going for the past couple of months, but this time Brandon wouldn't take 'no' for an answer. He knew Brandon was right. It was time.\n\nBrandon pulled Lonnie's hand away from his mouth. \"It'll be okay, Lonnie.\"\n\n\"Can't help it,\" he muttered.\n\n\"Hey, if I gotta give up smokes, then you gotta give up chewing your thumbnails. If you need something in your mouth, that can be arranged.\" He groped his crotch in case the innuendo was lost on Lonnie.\n\n\"Brandon!\" Lonnie hissed, looking around to make sure that they weren't seen or heard. Brandon just laughed. Lonnie didn't think it was possible to embarrass the big man.\n\nBrandon stopped in front of a doorway and took a deep breath. With a smile on his face, he entered the room.\n\nAs soon as Lonnie saw the woman seated by the window, he knew that she was Brandon's mom. Though she was frail and thin, he could tell that back in the day she must have been quite the looker. Her auburn hair was mostly gray now, but she had the same beautiful green eyes that Brandon had.\n\n\"Hey, mom,\" Brandon said with a grin.\n\n\"My Brandon, you came,\" Bonnie Davis said as her eyes teared up.\n\nBrandon leaned down and gave her a kiss and hugged her tight. \"I come every week, mom.\" He started to pull back, but then hugged her again. \"I love you,\" he whispered. He let go and stood up, feeling proud of himself for expressing his feelings. Lonnie taught him how important that was. \"Ben and Benji are really sorry they couldn't come this week, but they had to go out of town for work.\"\n\n\"Oh, well, my Bennie is so busy. He's very important, you know. Both my boys are.\"\n\n\"Yup, I know. He will be back next week, with a surprise that I know you will love.\"\n\nShe looked over at Lonnie and grinned. \"Benji, you came.\"\n\nShe held out her arms for a hug and Lonnie looked at Brandon, unsure of what to do. He moved forward and let himself be pulled down into a warm embrace.\n\n\"Mom, that's not Benji,\" Brandon said. \"His name's Lonnie.\"\n\n\"Nice to meet you, ma'am,\" Lonnie said as he moved back to stand upright. \"I'm Lonnie O'Reilly.\"\n\nBrandon stood beside Lonnie, rubbing circles on his back. \"Lonnie's my cupcake, mom. I'm sorry I haven't brought him by sooner. I've been wanting you to meet him since we've moved in together.\"\n\n\"O'Reilly is a good Irish name.\"\n\n\"His daddy's Irish,\" Brandon said with a smile. \"Lonnie's got that Irish spunk in him.\"\n\nBrandon reached out and rubbed Lonnie's belly and shot him a wink.\n\nLonnie choked and coughed and looked at Brandon wide-eyed. He didn't miss Brandon's filthy innuendo and he prayed that his mom didn't know what Brandon was joking about.\n\nHe was still a little surprised at how Brandon just spoke so comfortably and openly. Brandon had a big grin on his face. He took Lonnie's hand and pulled him closer. He pulled Lonnie's hand up to his mouth and gave it a kiss on the back of his knuckles.\n\n\"I love Lonnie, momma.\"\n\nBonnie covered her mouth in surprise, then held out her hands. Lonnie hesitantly reached out and took her hands in his as Bonnie looked him up and down, a giddy smile on her face. \"Oh, Brandon, I'm so happy for you. I just knew you would find someone. Both of my boys deserve to be happy.\" Bonnie brushed a hand across Lonnie's cheek. \"And she is so, so pretty.\"\n\nLonnie's cheeks flushed pink and Brandon tried to suppress a snicker. \"Lonnie's a man, momma.\"\n\n\"Oh. I wondered where her boobies were.\"\n\n\"Oh my god,\" Lonnie groaned under his breath while Brandon laughed out loud.\n\n\"Come sit with me, sweetie,\" she said as she patted the chair next to her.\n\nLonnie picked up the book of crossword puzzles from the seat and put it on the table and sat down next to Bonnie, who held his hand tightly.\n\n\"Your hair is so pretty.\" She reached up and touched the locks of raven hair that were starting to curl at the base of his neck.\n\n\"Thank you, ma'am.\"\n\n\"How did you meet Brandon? Tell me all about it.\"\n\nBrandon sat down and watched his mom and Lonnie. He was so happy she was having a good day today. And she accepted Lonnie without even batting an eye. As he watched Lonnie and his mom talk about how Lonnie and Brandon met, he never felt happier. He should have brought Lonnie here weeks ago.\n\n\"So when are you going to give me grandchildren?\" Bonnie asked. She looked Lonnie up and down and frowned. \"We might have to get some more meat on your bones. There's no way you're going to push a baby out of those tiny little hips.\"\n\nLonnie looked at Brandon helplessly, but Brandon was too busy bent over, clutching his stomach, slapping his foot on the ground and wiping tears from his eyes as he laughed his ass off.\n\n***\n\nWhen they pulled into the distribution center's warehouse lot, Ben backed the semi-truck into the designated unloading dock. Benji was still amazed at how deftly Ben handled the big tractor trailer. He operated it like it was part of him, so comfortable and effortless.\n\nBen got out of the truck cab, and then helped Benji down. Benji gave Ben the manifest and the pair walked inside to the receiving office.\n\n\"Hey, Ben!\" the clerk said cheerfully. \"I haven't seen you in a couple of months, right? You training a newbie?\"\n\nThe guy at the receiving clerk's window was grinning like an idiot, clearly happy to see Ben. Benji felt a rush of jealously go through him. Who did this cute little twink think he was, smiling at his man like that?\n\nBen smiled back at the twink. \"No, this is Benji.\"\n\nHe looked at Benji and gasped. \"Benji! It's Chris.\"\n\n\"Oh, hi, Chris.\" Benji smiled as he reached out and shook his hand. \"We used to talk all the time on the phone and email. It's nice to finally put a face to the name.\"\n\nWhen Benji was a dispatcher, he used to talk to Chris about once every two weeks. Transfers between their two warehouses were one of Ace's regular long haul routes. Now, Steve handled Chris's account. Duh. Benji should have known that it would be Chris they'd be seeing today. He hadn't been off the job that long to forget.\n\nBen gave Chris the manifest and they sat down in the trucker's lounge, grabbed a couple of sodas and waited for the truck manifest to be verified.\n\nOnce they were all set, they went back to the truck cab and Ben drove the bobtail to a nearby motel off the interstate. As much fun as Benji had in the truck with Ben, he was more than ready to sleep in a real bed.\n\nAfter checking in, Ben had Benji order room service while he took a quick shower.\n\nWhen Benji came out of the bathroom after his shower, Ben had dinner all set up at the little table. He had the lights turned down and even had a taper candle lit. Benji smiled and joined Ben at the table, touched by Ben's attempt at being romantic.\n\nTheir steak dinner was pretty good for a small town motel, but Benji could tell that Ben was nervous and distracted about something. He asked a couple of times, but Ben just claimed that he was tired after the long drive. Benji thought back to the cute twink at the warehouse.\n\n\"How well do you know Chris?\"\n\nBen choked on his bite of potato. He coughed into his napkin and swallowed. \"Benji.\" Shit. This wasn't what this trip was supposed to be about.\n\n\"I can tell you're nervous about this trip. Be honest, Ben.\"\n\n\"It's got nothing to do with Chris, baby.\"\n\nBenji pushed his veggies around with his fork while he stared at his plate. \"But you... and him... you fucked him.\"\n\n\"No! I never fucked Chris. A long time ago, we hooked up once. He blew me. That was all. That was before you even started working at Ace. I swear, Benji.\"\n\n\"I'm sorry, Ben. I guess I'm just jealous.\" Benji's eyes started to get a little misty. \"He's cute.\" Benji sniffled and then turned up his nose. \"But he's a slut. I can tell by the way he was flirting with you.\"\n\nBen reached across the table and squeezed Benji's hand. \"There's no reason to be jealous. I don't want anyone but you. Not now, not ever. Besides, Chris can't hold a candle to you. You're fucking adorable. And you keep me more than satisfied in the bedroom.\"\n\nBenji blushed and rolled his eyes. \"Well, he better keep his hands and eyes off you.\"\n\n\"You don't have anything to worry about.\"\n\nBenji picked up his fork and started to eat, dropping the subject. Ben let out a sigh of relief.\n\nAs they finished up their dinner, Ben tried his best to stay calm and relaxed. He wanted the rest of the evening to be perfect for Benji.\n\n\"This is super good,\" Benji said as he took another bite of the dessert they were sharing. The buttery cake had a layer of pudding and sliced fruit in the middle, topped with whipped cream and a chocolate covered strawberry.\n\n\"Mm-hmm,\" Ben grunted as he stared down at the plate.\n\nBen scooped a bite and chewed it, swallowing loudly. His relaxation techniques weren't working. He couldn't get his nerves under control. Benji probably thought he was completely nuts.\n\nHe looked up when he heard Benji softly laughing. His eyes widened as Benji leaned over the table and licked his chin.\n\n\"Mmm. Whipped cream.\"\n\nBen's mouth fell open and his cock stiffened in his jeans, pushing painfully against his zipper. He looked down at the cake. \"Hurry up and eat, baby,\" he husked.\n\nBenji smiled and scooped another big spoonful. Ben watched the spoon as it went into Benji's mouth. When he saw a glint of metal, he reached out and tried to stop Benji, but it was too late.\n\n\"Ow!\" Benji cried out as he cupped his hand over his mouth.\n\nHis eyes widened as he looked at Ben in shock. He cupped his hand under his mouth and pursed his lips and spit out a small piece of metal. \"What the--\"\n\nBenji looked down at the gold ring he held in the palm of his hand. He picked up the ring with his fingers and stared at it. The gold domed style band was heavy, wide and masculine.\n\nBen watched Benji stare at the ring, holding it in his shaking hand. Shit. His stomach started to churn when Benji didn't respond. This was the worst idea ever. What the hell was he thinking hiding it in the dessert? Then Benji looked up at him. Benji's jaw quivered and tears welled up in his eyes.\n\nBen swiftly moved in front of Benji, turning his chair as he did. He got down on one knee and gripped his baby's hands tightly. \"I know I'm supposed to give a big speech here, but I'm not good with words, baby, but... You're mine and I want everyone to know it. In sickness and in health, right? Will you marry me, Benji?\"\n\nBenji nodded frantically and the tears finally spilled over. Ben slid the ring onto Benji's finger and kissed him. Benji held Ben's face in his hands and returned his kiss with equal passion. \"I love you.\"\n\n\"I love you, too.\"\n\nBen lifted his new fianc\u00e9 up, tossed him over his shoulder and carried him to the bed, where he proceeded to ravish him.\n\nAll night long.\n\nThree times."
    ],
    "authorname": "robcub32",
    "tags": [
        "gay",
        "gay romance",
        "gay bear",
        "gay interracial",
        "bear",
        "twink",
        "interracial",
        "trucker",
        "bareback"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/coming-home-davis-brothers-ch-06"
}