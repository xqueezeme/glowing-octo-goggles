{
    "title": "Anything I Want?",
    "pages": [
        "The Usual Disclaimer: This is a work of fantasy. All characters featured in sexual situations are over 18. The characters in these stories are fictional. Any resemblance to actual persons living, dead or undead is purely coincidental. Do not try this at home.\n\nAuthor's note: This story describes a game of Texas Hold 'em poker. The rules of the game of poker are often twisted in movies for dramatic effect. The most that a player may risk on a given hand are the remaining chips that they have. They cannot be forced out of a hand by another player betting more chips than they have. However, gamblers often create side bets, and those can bring into play far greater stakes than the chips at the table...\n\n*****\n\nJake pushed all of his chips into the middle of the poker table.\n\n\"Anything I want?\" he asked, letting the words hang in the air.\n\nEverybody knew what was implied, and they were all looking at Jackie. She looked down at her cards one more time. She had a full house, aces over tens. The only hand that was out there that could beat her was a straight flush\u2014Jake could only win the hand if he was holding the seven and eight of hearts. The way he had bet, she was fairly certain he had a flush, which she had covered.\n\nShe looked at Phil, sitting to her left. His raised eyebrows said that he wouldn't make that bet, but of course he wasn't in this hand. He didn't know how good her hand was. It wasn't like they were still dating, but she still whispered, \"You wouldn't mind, would you?\"\n\nHe shrugged. \"Hey, it's your ass if you lose.\"\n\nAnd there it was.\n\nThe six friends had played cards almost every weekend since they were sophomores in college. At first, they had been three couples. Over the years, they had broken up, dated other people, and even dated other friends from their tight knit group. The poker nights remained, as did the friendship. Jake and Jackie had never dated, but she knew from Andrea and Sally that he had an enormous dick. Heck, even Phil had mentioned it when she had dated him.\n\nJake had a really big, thick dick. He had never gotten to enjoy anal sex as a result, even though it was the one thing that turned him on the most. He loved watching anal porn, particularly when a gorgeous porn star would take a big porn star dick in her ass. Jake had dated lots of girls back when they had been in college. Some of those girls had sought him out because they had heard he was so well-endowed.\n\nSome of them even loved anal sex, but when they were faced with that massive trouser python, they invariably had the same response.\n\n\"There is no way in hell you are putting that monster in my ass.\"\n\nJake even joked that the one thing he really needed was penis-reduction surgery. Andrea had been dating Jake on a rather casual basis over the past year or so. She had let Jackie know that the rumors about Jake's dick size were no joke. She had breathlessly recounted over drinks how intimidated she was the first time she actually saw it hard and throbbing in front of her.\n\n\"Oh, I had heard it was big,\" she said. \"Sally confirmed that years ago, of course. I just figured it was maybe a little bigger than the guys I had been with before. But when he actually got hard and it was right there in front of my face...Jesus. I thought there was no way it was ever going to fit in my pussy.\n\n\"As surprised as I was by his size, though, I was even more surprised just how gentle he was. You know what a big jerk he can be. When he was with me in bed, though, it was like an entirely different guy was there with me. Jake was so tender. He touched me so softly. It was just intoxicating. By the time that big dick was filling me up, I knew he was not going to hurt me.\"\n\nAndrea had drained the rest of her drink with a shudder, \"But there's still no way that huge dick will ever fit in my ass.\"\n\nJackie had actually enjoyed having a cock in her ass, going all the way back to high school. She was careful not to be the one to instigate anal with any of her boyfriends\u2014she did not want to have that sort of reputation or the kind of attention it would bring. Once a guy was bold enough to take her asshole for the first time, though, she was happy to let him have it whenever he wanted.\n\nPhil had never been so bold when they had dated a couple of years back. He had admired Jackie's shapely little bottom and had even spanked it, but he had never been forward enough to bury his cock in it. Jackie's eyes flitted across the table to where Tommy sat. He had been that bold, back when they dated in college. There was a twinkle in his eyes as he regarded her.\n\nTommy was getting turned on, and she could tell. Even though they had broken up eight years ago, he could still picture the lovely Jackie groaning in orgasm as his cock pounded her horny little asshole.\n\nAll of that flashed through her mind in mere moments as she sat at the table and tried to shake that off. Jake always beat her at cards, and she wanted so badly to rub his nose in it just this once. After all of these years playing together, they had gotten good at it. They could read each other to a certain degree, but they could also hide a lot of the more obvious tells from each other. Jake had to know she had a good hand. This might just be a ploy to scare her off of it.\n\nThe problem was she was so short-stacked in the game that she couldn't take advantage of her killer hand. For once, she was convinced that she had Jake in a bind, but she needed more chips to really hurt him. She had breathed it as a rueful\u2014and completely idle\u2014comment to Phil, sitting next to her.\n\n\"Oh, I just wish I had your chip stack,\" she had murmured, \"I would give you anything you want to be able to force Jake all-in.\"\n\nBut Jake had heard it. He had theatrically pushed his chips to the middle of the table, and said it loudly enough for everyone to hear.\n\nNow it was up to her to make a decision. She was really trying to ignore what they all knew the stakes were, to make the correct poker read. She could still fold. She had about twelve dollars left in chips, and could still play for the rest of the night, but it would put her in a bind. They only played for a fifty-dollar stake on these poker nights.\n\nCertainly, her ass was worth more than the seventy dollars that was currently in the pot.\n\nJackie narrowed her eyes as she regarded Jake. He still had that cocky smile he always wore at the poker table, the one that had tormented her for years when he took her chips. They both knew that was part of the act. It would goad her into overplaying when she had a good hand. In recent months, she had managed to ignore that cocky smile, and had held onto more of her chips than normal.\n\nShe had even been the overall winner twice in the past two months, but she hadn't taken Jake's chips from him directly. Jake's eyes gave him away, then. Jackie's narrowed eyes opened just a fraction when she caught the look of primal hunger that slipped through. He knew she had a full house. He was holding that seven and eight of hearts. He wanted her ass.\n\nJackie tried not to shake when that ran through her. She had done it! She had gotten the correct read, and now she could get away from this hand. Only...\n\nHer hands played idly with her chips as she looked at the ceiling, as if she were calculating her odds one more time. Her peripheral vision took in everyone at the table. She was watching Andrea, to see what her reaction was. Jackie had not looked at her directly, and did not want to take for granted that Andrea would allow her boyfriend\u2014casual though they might be\u2014to fuck her friend in the ass.\n\nThe friendships at this table were far more valuable than satisfying any sexual itch she might have. That had always been the case with the six of them. Even though she and Tommy had been wild in college, Tommy's wife was fine with him holding these poker games in their home, despite Jackie being part of it. They both understood that there would be no shenanigans between Tommy and his now ex-girlfriend.\n\nAndrea's face was flushed, her pupils slightly dilated, and her breathing was a little ragged. She was actually turned on by the thought of Jake's massive tool opening Jackie's ass. When she saw that, Jackie's itchy bottom gave an involuntary twitch. She had been alone for too long. She was also alone among the three women at the table in that she was the only one who had not had the pleasure of meeting Jake's legendary dick in person.\n\nHer eyes met Jake's then, and his eyes opened when he saw the look in her eyes. She was going to call him. They both knew that she was going to do it, and they both knew that he was going to win. Jackie grinned and narrowed her eyes again before she started the familiar trash talk that covered what they both knew this was about.\n\n\"Oh, I'm taking your bet, and all your chips,\" she started. \"You have had this coming for a long time, Jake. Sorry, Andrea, but I am taking your boyfriend down!\"\n\nShe stood up and theatrically slapped her ace-ten on the poker table. There were whistles and an \"Ooh!\" from Phil when they saw her full house revealed. Jake's eyes were wide as he looked at Jackie, knowing what she was doing. Only Sally caught on, and her breath caught briefly as she looked back and forth between them.\n\nJake recovered, and the obnoxious grin was back in place.\n\n\"Wow, that is a really good hand, Jackie,\" he said. He was a dick about it, waiting until she reached to gather the pot before he dropped his cards face-up on the table. \"Just not quite good enough.\"\n\nJackie made a really good show of looking crestfallen, slumping back into her chair and reaching to drain the last of her mixed drink.\n\n\"I guess I'm out,\" she finally said softly, before getting out of her chair to refill her drink.\n\nSally caught her eye as she rose to join Jackie at the bar. They didn't have to say anything. Jackie's show might have fooled Andrea, Tommy and Phil, but Jake and Sally knew.\n\n\"I can't believe you did that,\" Sally said.\n\nThe petite brunette shook her head and her eyes were wide. It made Jackie second-guess her decision.\n\nWhy did I do that? she wondered. I had it figured out. I should have just folded the hand. Why did I just agree to let that arrogant prick have me like that?\n\nShe had known Sally and Andrea for almost a decade, and they had shared some really intimate stories over the years. Between the three of them, they had dated a lot of guys. Jake had always seemed like the kind of guy that Jackie would never consider dating; he was just so arrogant and cocky, and it infuriated her. She had wondered how her friends could date such an annoying guy.\n\nSally was one of the sweetest, nicest people you could ever meet. It always seemed incongruous to Jackie that she would date a guy like Jake. As they regarded each other and mixed their drinks, Jackie once again recalled how Sally had explained it to her all those years ago.\n\n\"Oh, he's not like that at all when we're alone,\" Sally had protested. \"Really, that whole bravado thing he puts on is just a front. Those Business majors are all a bunch of sharks, and he has to act like that to protect himself. I'm telling you, Jake is one of the sweetest guys you will ever meet.\"\n\nJackie had to hope that was true. She had bet her ass and lost, and she had no doubt that Jake would collect his favorite fantasy. Now she had to wonder if her horny bottom would be up to the challenge. She sat at the bar and sipped her drink, watching as her friends continued the poker game. She had to wonder, then, if her act had really fooled anyone at that table.\n\nThey had all been friends and shared these poker nights for such a long time. Jackie had felt like she had played it correctly, but now she had to wonder as each of her them looked at her over the remaining hour of that game.\n\nAndrea was so turned on that she had trouble focusing on the game. She came over three times to get another drink, which was more than she normally had in an entire poker night. Each time she approached Jackie, she was breathing heavily and looking her over in a way that made Jackie moist. It had not occurred to her that Andrea might insist on being present when she paid up on that bet, and now it was something else for her to contemplate.\n\nTommy was noticeably hard when he grabbed another beer. This was not the first time their eyes met in a horny exchange over poker nights in his home. They had agreed that nothing could ever happen between them, and Tommy's wife, Linda, kept him satisfied in the bedroom. Jackie had to admit that they made an excellent couple, far better than she and Tommy would have been.\n\n\"I can't believe you did that either,\" Phil breathed out softly when he finally came over to get another drink. The look on his face said that he thought she was playing to win. \"That was a really bad beat,\" he sighed.\n\nUnlike Tommy, he did not seem to be turned on at the prospect of what was sure to happen to his ex-girlfriend's sweet ass.\n\nJake was the last to approach her at the bar. He had practically stopped drinking after that sensational hand. He had been so preoccupied that he had surrendered a substantial chunk of his chip stack to Sally and Phil, and he was struggling to win some of it back. Jake whispered briefly into Andrea's ear before he stood and made his way to the bar.\n\nJackie had to admit that his poker face now was the best she had ever seen. She had no idea what he would say to her. It just made her more anxious, and her pussy wetter. Jake was a tall guy, and she found herself looking up at his face as he mixed a rum and coke.\n\n\"You were serious, weren't you?\" he finally whispered.\n\n\"Yes,\" she croaked after a moment's pause.\n\n\"Andrea said it was okay,\" he whispered again. \"I'll call you later tonight.\"\n\nJackie looked down at the drink in her hand. The ripples on the pale surface of that White Russian let her know how much her hand was shaking. She turned back to the bar, setting down the drink and taking a deep breath.\n\n* * *\n\nNobody had said anything else about the bet as they ended the card game and gave each other their usual hugs and good-byes. Jackie drove to her condo and let out a huge breath that she had been holding all night. She shook her head and mixed a really strong drink. Now that she didn't have to worry about driving anywhere, she could get a good buzz and try to work through what she had been thinking.\n\nShe stripped and put on a lightweight robe, sipping her drink as she sat on her couch and waited for Jake to call her. She knew she would be playing with herself before she went to sleep, imagining what was going to happen. It had been three months since she had been laid, and that was certainly part of it. She would never have made that bet if she was getting any lately.\n\nI don't even like Jake, she thought once again. She shook her head. Is it just that I have fantasized about his big dick?\n\nShe didn't think that was the case. If that had been it, she certainly could have had him years ago. Jake had made no secret that he found her attractive. She considered him a friend, but more as one of the friends in her group than a friend to her personally. They had only had a handful of personal conversations over the years, and those were teasing at best.\n\nThey had never gotten into a fight or anything like that. Jake had tormented her at the poker table, but it never carried over. He had given her some sound financial advice over the years, but that was usually financial advice he was giving to the group rather than anything personal for her. Following his advice had paid for this place, she reflected as she looked around at her comfortable condo.\n\nWhen her phone finally rang, she jumped in her seat. She spilled a bit of her mixed drink on her robe, and she muttered to herself as she set the drink on the coffee table and picked up her phone.\n\n\"Hello?\" she said.\n\n\"Hey.\" The man's voice on her phone was unrecognizable. Surely this couldn't be Jake?\n\nJackie held her phone in front of her and looked at it. Nope, it was Jake. He just sounded nothing like the arrogant bastard from the poker table. She put the phone back to her face.\n\n\"Are you alright?\" she asked.\n\n\"Um,\" he replied, \"I think so. You really shook me up with that play, Jackie.\"\n\nHis voice actually sounded shaky to her. In losing that bet, she had gotten her long-standing wish: she had really gotten to that cocky bastard for once. Jackie grinned to herself when she realized it. Then she bit her lip. There was still the matter of paying off that bet.\n\n\"Is Andrea mad?\" she asked.\n\n\"Sort of,\" Jake replied. He sounded like he was being very careful as he chose his words. \"I think she wants to be there, but I told her that was not going to happen. She asked if we should break up, since you would be giving me what I've always wanted. I really hope that was just the alcohol talking.\"\n\nJackie could practically see Andrea making a speech like that, after she'd had a few too many drinks. She nodded into the phone. \"That sounds like Andrea. I...I don't think I could go through with it with anyone watching.\"\n\nThere was an uncomfortably long silence.\n\n\"But you think you can go through with it if we're alone?\" Jake finally breathed into the phone.\n\nThe hunger in his voice had her dripping with anticipation. \"Yes,\" she breathed in response.\n\n\"When should we...?\" Jake had never sounded so tentative, so unsure of himself. It just turned her on more.\n\n\"Tomorrow night, here at my place,\" she said firmly. \"If we wait any longer than that, I will chicken out for sure.\"\n\n\"Okay,\" Jake replied through dry lips. He cleared his throat, and Jackie heard him lick his lips before he continued. \"Should I bring anything?\"\n\n\"Nope,\" she replied. \"Just bring your self. I will take care of the rest.\"\n\n\"Okay,\" he said again. He wrestled with himself, thinking of and discarding a dozen things before he settled for, \"Good night, then. I can't wait.\"\n\n\"Good night,\" Jackie replied, hanging up.\n\nIn his apartment, Jake sat and stared at his phone for three minutes. He still could not believe this was really happening. His dick was as hard as he could ever remember it being, bulging obscenely in his slacks. It was entirely possible that she would still back down when she saw it, he reflected. It would not be the first time. He got his labored breathing under control, trying to temper his expectations. He had to prepare himself, to accept it when Jackie changed her mind.\n\nJackie had cleaned the stain from her robe and dropped it into the washer. Now, she was lying in her bed and was pushing her biggest, thickest dildo into her horny and lubricated ass. It was only the third time she had taken this monster back there, and it had her pussy on fire to think that she could be getting the real thing tomorrow night. It was a little painful, the way that thick phallus stretched her open. On the other hand, once the bulbous head was in her channel, it felt absolutely wonderful. \n\nJackie's pussy exploded in orgasm, and she shook and took the time to catch her breath. She just hoped that Jake would be as gentle as her friends had assured her he could be.\n\n* * *\n\nJake's knock was firm on her front door the next evening. It was still light outside. Even though she had told him not to bring anything, he still held a lovely bouquet of flowers and a nice bottle of wine. He was dressed in a sharp pair of slacks with a dress shirt and a tie. He looked like he was arriving for a first date, Jackie realized as she looked at him through the peephole in her door.\n\nShe, on the other hand, was dressed in garters and stockings, with a matching lace demi-bra that emphasized her breasts. A lace gown was draped over the ensemble, but it wasn't something she would want her neighbors to see her wearing. She worried for a moment that she had made herself look too eager. Certainly, her outfit was completely at odds with the 'first date' attire that Jake was wearing.",
        "They were both nervous as she opened the door and let him in. His eyes wandered over her body for a lovely minute before he caught himself and forced his eyes back to meet hers. Jackie was terribly nervous, and could not help but to wisecrack.\n\n\"I expected you to knock at the back door,\" she said with an arched eyebrow and a grin.\n\nJake laughed too hard at the jibe, clearly as nervous as she was. She took the offered flowers and sniffed them approvingly. Once again she raised an eyebrow when she read the label on the wine. Neither of them were really oenophiles, but this was a serious bottle of wine by almost anyone's standards. Jake was really pulling out all the stops on this, Jackie realized.\n\nShe took the time then to really look him over. Oh, he was a good-looking guy. That had never been a question in her mind. Despite how annoying he could be, she had always known he was a handsome man. He wasn't out-of-her-league gorgeous, but he was very attractive. He was almost a foot taller than she was. She reached up and began unfastening his tie after she had set the flowers and wine on her kitchen counter.\n\n\"You, sir, are overdressed,\" she said softly.\n\n\"Sorry,\" he croaked. He was far too nervous to make an attempt at humor.\n\n\"Kiss me, Jake,\" she ordered in that same soft tone, her hands deftly removing his tie and tossing it to the floor.\n\nHe complied, his lips gently seeking hers as she continued to undress him. Jake was a far better kisser than she had imagined. Jackie was on fire with lust as she removed his shirt and cast it aside. Jake managed to maintain the kiss as he kicked off his shoes. Jackie unbuckled his belt and trousers and let them drop to the floor.\n\nOh, boy, she thought, that is bigger than I thought. That is one huge dick.\n\nThe massive pillar of cock meat protruding from the front of those boxers was worthy of a porn star. One of the better-endowed porn stars, at that. Jackie had lubricated her asshole and prepared it with her biggest dildo, but even that monster was still not quite as big as the real thing.\n\nThis is really going to stretch my ass wide open, she thought. That thought made her pussy drool in anticipation.\n\nJake was completely at a loss for words when Jackie reached out to squeeze his erect cock in her small hand. Her nipples looked incredible as they poked against the lace of her sexy gown. He followed automatically when she pulled him along by his dick. Jake had never been to her place before, and felt like he should say something complimentary about her condo. He just couldn't take his eyes off of her mesmerizing ass or form a coherent thought.\n\nThis had been his fantasy forever, and he just expected that it would end as it always had, with him disappointed but trying to be a nice guy about it. That sweet ass looked like the stuff of his wet dreams, close enough to touch. He did reach out and gently squeezed Jackie's taught cheeks when she stopped at the side of her bed and looked over her shoulder at him.\n\n\"Oh, god,\" he moaned. Her asshole was glistening when her cheeks spread slightly. She had lubricated it for him. She was completely serious about letting him fuck her in the ass.\n\nShe turned and slid his boxers down his thighs, opening her lips to take the tip of his bloated cock head into her mouth. She moaned around that salty mouthful as Jake carefully stepped out of his underpants. Jackie licked her way around his head and shaft, until the length of his cock was wet with her saliva. It was all a delicious preamble, not intended as proper lubrication. She gave the tip one final kiss before rising to her feet.\n\nJackie reached over to her nightstand and handed him the bottle of lubricant. \"Do you know what to do?\" she asked. Her face was completely serious, as was his response.\n\n\"I have been waiting for this my whole life,\" he breathed. \"I know what to do.\"\n\n\"Good,\" she replied simply, turning and sliding onto the bed. Her shapely bottom was pointed directly at him, and her hands reached back to spread her cheeks open invitingly.\n\nJake carefully lubricated the length of his cock before setting the lube down within easy reach. Thanks to his height advantage, he was able to pull Jackie's hips toward him, lining up the bulbous head with her tight little pucker as he stood by the bed. Jackie looked over her shoulder at his lust-contorted face. She felt the heat of his mushroom head as it pressed against her tight little ring.\n\nShe carefully controlled her breathing and her fear. She focused instead on the obvious, naked hunger on her longtime friend's face instead. God, he looks so hot, she thought. She could not help but gasp, though, when she felt her sphincter being spread open by that massive cock head.\n\nJake jerked reflexively when he heard her sharp intake of breath. He stopped trying to press forward and held still. \"Am I hurting you?\" he asked in a pained voice. Years of rejection showed on his face, and it was clear to Jackie that he expected this to be the end of it.\n\n\"Don't you dare fucking stop,\" she hissed at him, meeting his eyes with a determined horniness that matched his. \"We didn't get this far just to quit now. Stop teasing me with that dick, and start giving it to me!\"\n\nJake's hands shook on her hips. It took all of his self-control to make sure he did this right\u2014the way he had practiced it in his mind, just in case he ever got the chance to actually do it. His eyes flitted back and forth from Jackie's face to her asshole as his thick cock head stretched her wide open. They both gasped out loud in disbelief when the ridge finally slipped inside that maddeningly tight little ring.\n\n\"The...the head is inside,\" Jake groaned, licking his dry lips to form the words.\n\nJackie was breathing heavily and just nodded in response. Her tortured little asshole felt impossibly stretched by that thick cock. It was all she could do not to cry out. She knew, though, that if she did he would likely pull it out. That would hurt more, and she desperately wanted to feel that massive member deeper inside her. She dropped her forehead to the sheets and managed to speak.\n\n\"Keep going,\" she croaked out. She hoped she didn't sound like she was in pain. \n\nIt did hurt, but it also sent shivers of sensation the likes of which she had never imagined. She saw stars, fireworks, and other flashes of light as she nearly blacked out. Oh, it hurt like hell! At the same time, the pleasure was already almost orgasmic. That rubbery little ring of muscle was stretched further than she had ever thought it could be, but it was starting to grudgingly relax around the thickness of that massive shaft.\n\nJake held still with the head and the first inch of his shaft buried in the impossible tightness of a woman's ass for the first time. He carefully controlled his breathing as his eyes feasted on the vision. Even if this was as far as it went, he would savor that image for the rest of his life. He held still and felt the muscles of Jackie's bottom squeezing him delightfully. Oh, he wouldn't come from this. Still, it felt amazing.\n\nIt was a real shock when she started pushing back, slowly forcing more of him inside. He stopped breathing entirely and watched his cock disappearing little by little. After three minutes, he took a ragged, noisy breath of air.\n\n\"Jesus,\" he groaned. Half of his massive dick was now inside Jackie's ass! This is really happening! his mind screamed. You are fucking Jackie IN HER ASS!\n\nHe suddenly remembered his 'training' from reading all those books and watching all those instructional videos. He reached over and grabbed the lube, dribbling a bit more of the stuff around the juncture of his shaft and her sphincter.\n\n\"Damn, that's cold,\" Jackie grunted.\n\n\"Sorry,\" he replied in a whisper.\n\nShe groaned again as he pulled back slightly, working the slippery stuff around his shaft before sliding it slowly deeper into her clutching bowels.\n\n\"Oh, fuck!\" she gasped out. The thick ridge of his cock head had just mashed her g-spot through the thin walls separating her hungry holes. Her body shook as a mini-orgasm shook her to the core.\n\nJake read her reaction correctly for once, and he held still and savored the tightness gripping his cock. He waited for her to relax again, and then he slowly slid another inch in before pulling back and applying more lube. He set the bottle down and leaned over her back, reaching his hands up under her gown to find and fondle her aching breasts.\n\n\"Jackie,\" he murmured, \"your ass is fantastic. I still can't believe I'm fucking you in the ass.\"\n\nShe groaned as she felt his thick glans once again pressing deep inside her. He slid in and out, very slowly, three more times. She let out a gasp when she felt his balls touch her soaked pussy lips. Her head came up off of the bed, and she turned her wide-eyed face to his.\n\n\"It's all the way in!\" she whispered in disbelief. He nodded, but his wide eyes let her know that he couldn't believe it either.\n\nTheir panting began to synchronize as Jake slid in and out of her with full-length strokes. Those were almost painfully slow...at first. A glance at her bedside clock revealed that they had taken almost half an hour to get to this point. However, the hard part\u2014the 'work'\u2014was done. Jackie's asshole was now comfortable with the girth that was sliding in and out of it.\n\n\"Faster!\" she hissed.\n\nJake released her hanging breasts and rose to grab her hips. He shook his head in disbelief once again as he watched his glistening shaft drive in and out of that sexy little butthole. Her shapely little bottom shook and the muscles rippled each time he thrust his hips forward to slap against her.\n\n\"Oh, fuck. Oh, fuck! Oh, fuck!\" she muttered as he built up speed and fucked her ass. \"Coming!\" she let out as a strangled cry.\n\nHe stopped thrusting, but only for a moment.\n\n\"No! Keep going!\" she howled.\n\nShe didn't have to ask twice. Jake was reveling in the amazing feel of her tight ass as he pounded his full length in and out of her. He did slow down briefly to reach over and add more lube, but he was being overly safe at that point. Jackie was delirious as he pounded her horny asshole.\n\n\"Yes! Yes! Fuck my ass!\" she cried out.\n\nAll too soon, he felt his balls clenching up. \"Oh, fuck!\" he bellowed, \"I'm going to come!\"\n\n\"YESS!\" she cried out loud, \"Do it! Come in my ass!\"\n\nJake's cry was strangled, and his whole body shook as he erupted inside her. Jackie once again saw a light show as her own orgasm exploded through her body. They shared what looked like an epileptic fit as they jerked out of control with the intensity of that shared climax. After his cock slowed to gentle pulses of cream inside Jackie's ass, they both collapsed forward onto the bed.\n\nThey panted together, and Jake's lips found her earlobe and nibbled on it while he struggled for breath.\n\n\"That...was amazing,\" he panted into her ear, \"Thank you...so much, Jackie.\"\n\nShe turned her head and her lips found his. She kissed him back, and then softly bit down on his bottom lip.\n\n\"I hope you don't think we're done,\" she said.\n\nJake's dick lurched and started to harden again inside her stretched and well-fucked asshole.\n\n\"Mmm. That's better,\" she said, kissing him again. He pulled back and thrust his renewed erection into her ass with a wet smack! \"MUCH better!\" she gasped.\n\nRound two was just getting started. His knees got between hers and forced her legs wide apart as his dick pounded her. Jackie gasped and came over and over as her body was pinned, helplessly wide open beneath his. The angle of penetration was unbelievable\u2014it felt like that fat cock was just thumping directly into her sensitive g-spot every time it drove into her ass.\n\nThe sheets beneath her hips were drenched with her juices and the massive load from Jake's first orgasm as his cock forced it out of her. She did black out, briefly, following a particularly intense orgasm. When she came to, he was still relentlessly fucking her ass.\n\n\"Wait,\" she managed to gasp out. After two more thrusts, Jake held still. He was breathing heavily into her ear.\n\n\"Do you need to stop?\" he asked softly.\n\n\"Just for a bit,\" she said, \"I'm having trouble breathing like this.\"\n\n\"Oh! Sorry!\" he said, quickly rolling off of her.\n\nThey both shivered as his impossibly long shaft slid out of the tightness of her bottom. Jackie rolled onto her side, facing him in her bed. She cradled his face in her hand and kissed him softly while looking into his eyes.\n\n\"I wasn't sure I would be able to go through with it,\" she said softly after that kiss.\n\n\"To be honest, I really didn't expect you to,\" he grinned in reply, shaking his head sympathetically. \"That couldn't have been easy for you.\"\n\nShe reached over and found his cock, stroking it gently. \"No, it was not,\" she replied. \"But it was totally worth it.\"\n\nShe kissed him again, pushing her tongue into his mouth and letting him know they were not done before pushing him onto his back. His eyes lit up as she reached for the lube. She squatted above him, looking impossibly sexy as she slid his freshly-lubricated cock back into the welcoming heat of her tight ass.\n\n\"Oh, god,\" she groaned as she sank down on him.\n\nJake reached up to squeeze her breasts as she rode him, and she whipped the gown over her head to give him better access to them. He sat up as best he could to worship her nipples with his mouth. His hands reached around to cup and squeeze her bottom as she bounced up and down. She was taking him like a champ, and her orgasmic cries just made it that much more intense for both of them.\n\nJackie shook through one final, crazy orgasm before she had to stop. They were both awfully shaky as they walked out to the kitchen. She poured them each a tall glass of ice water, and sat on his lap at her dining room table. He was still fully erect, and his shaft protruded between their bellies as she faced him and sipped her water. She swallowed the water in her mouth, and reached down to touch the huge dick once again in disbelief.\n\n\"Still can't believe it fit inside you?\" he asked.\n\n\"That, and I can't believe how much I want it in there again,\" she replied.\n\nTen minutes later, she was pressed against the wall in her shower as that gigantic cock once again pounded into her horny asshole. She shook as she felt him thicken inside her, and they both cried out when he filled her ass with a second massive load of cum. Once again, she was struck at just how gentle he could be. Her legs failed after that intense orgasm, but he caught her and held her carefully until she regained her strength. Afterward, he was tender as he cleaned the sloppy mess out of her well-used bottom.\n\nHe was every bit as thorough and careful as he gently sponged the rest of her sensitive body clean beneath the warm spray. He dried her body and her hair, and even brushed her hair as he stood behind her in front of the bathroom mirror. She felt him touch her right buttock, and reached down to find his cock. Once again, he was getting hard. Jackie looked at his handsome face in the mirror as her hand closed on the fat shaft of his dick.\n\nShe was wondering how many times that amazing dick could come in one night. She smiled softly when she realized it had become her goal to find out.\n\n\"What's so amusing?\" Jake asked her when he saw that smile.\n\n\"I just realized we're not done yet,\" she replied, \"and I am surprisingly happy about it.\"\n\n\"Good,\" he said, \"because there is something I have always wanted to try.\"\n\nThey made their way to the living room, and once he had thoroughly lubricated her ass, she found herself bent over the back of her couch. Jake was careful, once again, but it took only a minute before she was ready for another vigorous pounding. Jake stood behind her and feasted his eyes on the incredible sight of that sexy bottom once again surrendering to his thick cock.\n\nHis phone started going off in the pocket of his discarded dress slacks, just a few feet behind them.\n\n\"Who could that be?\" he gasped, still driving into her sexy backside.\n\nJackie started to warn him not to stop, but then she thought better of it. \"You should probably unh! see who it is,\" she grunted.\n\nOnce again, they both groaned as his slick cock slowly withdrew from her tight embrace. He grabbed his phone and answered it without bothering to see who it was, feeding his cock back into her hungry sphincter as he spoke.\n\n\"Hello?\" he said.\n\n\"Well?\" Andrea's voice came over the line, \"Did she actually go through with it?\"\n\n\"Not yet,\" he lied, as his cock slowly pistoned in and out of Jackie's tight and welcoming asshole. \"I think we are both way too nervous for it to actually happen. Maybe if we had a second or third date, it could.\"\n\nJackie bit her lip to hold back her groan as she listened to Jake and felt his massive dick fucking her ass again. She was already coming. She understood what he was doing with this phone call\u2014paving the way for more sessions like the one she was currently relishing, while at the same time keeping it secret.\n\n\"Well, I have to tell you,\" Andrea said, \"I can not believe how turned on it got me, just thinking about it.\"\n\n\"You know she's right here?\" Jake said, cutting her off, \"She can probably hear what you're saying right now, Andrea.\"\n\n\"Oh!\" Andrea gulped, \"Sorry! I'll let you get back to your 'date' then. Will you be over tonight?\"\n\n\"Maybe,\" Jake replied, really thrusting hard into Jackie's eager asshole, \"depends on how long I'm here. I'll call and let you know, okay?\"\n\n\"Okay.\"\n\nJake hung up and dropped the phone. His hands seized Jackie's hips and he gave her a series of really strong and deep thrusts. She once again cried out loud as one orgasm gave way to a more powerful second one. \"OHMYFUCKINGGOD!\" she screamed.\n\nJake had been right on the verge of his own orgasm, but he held back and slowed his pace. He wanted to continue, and feared that the third load from his balls might drain them for the night. Jackie's phone started to ring, then. Jake pulled out and she waddled over to her counter to pick up her phone.\n\n\"Hey, Sally,\" she said, settling onto a bar stool. She swiveled her hips from side to side, her ass hanging invitingly off of the back of the stool facing Jake. His cock wagged in front of him as he stalked up behind her to take that inviting ass.\n\nJackie shivered when he entered her, but she managed to control her voice on the phone. \"He's still here, actually. I'm not sure I can go through with it, you know? Oh, here he is. Mind if I call you back later?\"\n\nOnce again, she bit her lip. She threw her head back and sucked in air as her ass was filled. This had been a fantasy of hers, ever since she had seen it on a video online. After Sally hung up, Jackie switched her phone to video mode and handed it to Jake.\n\n\"Make a movie for me,\" she gasped, \"I want to see you fucking my ass from behind like this!\"\n\n* * *\n\nAn hour later, they lay in her bed and watched that video together. It was shaky, of course. That made it no less arousing to watch.\n\n\"God, I still can't believe that huge thing fits in my ass,\" Jackie sighed, stroking the cock in question with her right hand while holding her phone in her left.\n\nAt the end of the video, Jake had pulled his rampant erection out of her and stroked it, shooting his load all over her upturned bottom. One rope of the stuff had shot right into her wide-open little hole. When he had finished firing off those five impressive shots, he thrust his dick back into her ass and held it there. The camera showed half of his pulsing length as her tight asshole drained the rest of his cum.\n\n\"That was so fucking hot,\" she breathed. The hard dick throbbing in her hand clearly agreed with her. She looked into Jake's flushed face. \"Nobody else ever gets to see this, got it?\"",
        "\"Of course,\" he replied, looking a little confused, \"but it's on your phone. Unless you show it to someone...\"\n\n\"Oh, I'm sending a copy to you,\" she breathed, stroking his dick faster, \"I want you to look at it, and I want you to be rock hard when you look forward to our next 'date'. Got it?\"\n\n\"Yes, ma'am,\" he breathed.\n\nNot that he needed a video. He would be replaying every second of this evening over and over in his mind.\n\n* * *\n\nNeither of them could wait for the next weekend and their next date. Tuesday night, Jake was back at her condo. Unlike the laborious half hour required for their first anal coupling, he was pounding her sweet asshole twelve minutes after he walked in her front door this time. Jackie was completely naked, lying on her back with her legs thrown over Jake's muscular shoulders. She was wide-eyed as that first intense orgasm ripped through her body. It happened so fast!\n\nIt took her breath away, and she feared she would pass out from the force of her orgasm. She felt like Jake's voice was calling her away from the edge of that abyss. His voice was ragged, nearly a sob as he got a single word out with each thrust of his magnificent rod into her achingly tight little hole. \n\n\"So...fucking...good!\" he gasped.\n\nJackie's eyes locked onto his, and she shuddered through a second spectacular orgasm as he swelled and exploded deep inside her. He stopped thrusting and held his pulsing dick all the way inside her to the hilt. At the same time, he reached down to lightly stroke her forehead and cheek. There was loving disbelief in his eyes as he looked at her face and gently touched her. That scared her a little bit.\n\n\"What's got you so worked up tonight,\" she managed to get out, \"were you watching that video?\"\n\n\"No,\" he sighed. \"I couldn't stop thinking about it, but it was Andrea who made it unbearable.\"\n\nJackie cocked her head and her brow furrowed. \"What do you mean? Does she know?\"\n\n\"No,\" he replied, shaking his head. \"She has been teasing me about it though. She was teasing me with her ass, if that makes any sense.\"\n\nAndrea had a nice, ample backside. It was the kind of voluptuous bottom that an ass-man would love to spend a few decades worshipping. Jackie could just picture her friend waving that sweet, pear-shaped ass in front of Jake. It gave her a start to realize how she now considered such a move. Jake was such a sweetheart, and made an obvious target for teasing. It was Andrea who now seemed like the obnoxious one in her mind, and Jackie could imagine turning the tables on her long-time friend to give her what she deserved.\n\n\"What on earth are you thinking?\" Jake breathed, seeing the evil grin that spread across her face.\n\n\"I'm thinking it's high time you got to fuck Andrea in her teasing little asshole,\" Jackie purred up at him.\n\nUnable to help it, Jake groaned at the thought and his cock gave a delicious lurch inside Jackie's bottom.\n\n\"Oh, you like that idea too, don't you?\" she continued. \"Can you imagine what will happen to poor Andrea when I set her up for you? You can practically see it now, can't you, Jake. Andrea just helpless to resist as you take that nice, fat dick and start filling her tight little ass with it.\"\n\nHer words became an incoherent jumble. Their blazing eyes locked and Jake resumed driving into her hungry asshole with his suddenly renewed and throbbing erection. She was a dream come true for him. Not only was she happily taking every thrust of his cock in her ass, but she was going to help him get into Andrea's delectable backside as well. In the afterglow of that second energetic ass-fucking, they lay in her bed and plotted Andrea's downfall.\n\n* * *\n\nAndrea was surprised to get that phone call from Jackie the next afternoon. Jackie had sounded a little nervous over the phone, as if she could not talk freely. Andrea was intrigued, of course, but did not suspect a thing. When Jackie asked if she was free for drinks later, Andrea was happy to oblige.\n\n\"That sounds great,\" she said, \"I'd love to meet you for drinks.\"\n\n\"Not out in public,\" Jackie hastily added, \"We need to be someplace we won't be overheard.\"\n\nThat got Andrea's undivided attention. She did not know if it involved Jake, but that smacked of a really juicy story and she was hooked. \"My place okay, or would you prefer for me to come over there?\" Andrea whispered breathlessly into her phone.\n\n\"Your place is fine,\" Jackie said, \"I'll see you at six, okay?\"\n\n\"Okay.\" Andrea looked at her phone as she returned it to her desk. The last three hours of work dragged by as she looked forward to this evening with Jackie. Her imagination ran wild as she contemplated all sorts of possibilities. What would Jackie have to reveal?\n\n* * *\n\nJackie had practiced her part the night before. She knew that she could keep that dreamy expression on her face when she described in delicious detail how incredible it felt to have Jake's massive cock buried in her ass. There was more\u2014much more\u2014that she had prepared to plant the seed in Andrea's mind. It all started with an apology, though. Jackie sat at her friend's dining room table and took a long sip of the cool drink before she blurted it out.\n\n\"I am so, so sorry, Andrea,\" she said. The rest followed all in a rush, \"I know I should have checked with you first, but there he was. And then it just...happened.\"\n\nAndrea froze. She stared at the dreamy expression on Jackie's face, as her own expression turned to wide-eyed disbelief.\n\n\"What just happe\u2014whoa!\" she leaned forward in her chair, \"Are you saying you and Jake...you actually let him...?\"\n\nJackie nodded. That dreamy smile never left her lips. \"Jake came over last night. He was upset because you had been teasing him. He said you were 'teasing him with your ass' and he was all worked up. I felt bad for the guy, but I still wasn't sure I could actually take him like that. And then we were in my bedroom, and he was so nice and irresistible. I couldn't believe it was happening when he started\u2014to be fair, I don't think he could believe it either.\"\n\n\"Oh, god,\" Andrea gasped excitedly. \"Didn't it hurt?\"\n\n\"At first,\" Jackie nodded, \"it hurt like hell for the first couple of minutes. But even then I knew it was going to be amazing. You were absolutely right, Andrea, he was so gentle and nice. He was like a completely different Jake than the guy I have known for years.\"\n\nAndrea moaned and nodded. She knew exactly how Jake could be. It was the reason she loved having him in her bed. The massive pussy-pleaser between his legs was amazing, but it was more of a perk. Jake would have been an incredible lover even if he wasn't so well-endowed.\n\nJackie completely changed course, then. It was so abrupt that Andrea shook her head trying to figure out where this was going.\n\n\"You remember Oscar, from back when we were in college, right?\"\n\nOscar was a guy they had both dated. Andrea had been with him their junior year, and Jackie had dated him a year or so later.\n\n\"Um, yeah,\" Andrea mumbled. \"I remember Oscar.\"\n\n\"He had the thickest cock I ever had in my ass before Jake,\" Jackie said dreamily, \"You know how that felt. Having that thick cock head driving into your ass, and the way it pressed your g-spot with every stroke. That was why I knew Jake was going to give me the most intense orgasms once I could take him in my ass.\"\n\n\"You let Oscar fuck your ass?\" Andrea blurted out. She hadn't even considered taking Oscar in her asshole, but that thick shaft had felt remarkable in her pussy.\n\n\"You didn't? Oh, Andrea,\" Jackie feigned surprise and shook her head. \"You really missed out on a treat.\"\n\nAndrea was unaware that she was gulping her mixed drink until she went to take a sip and it was empty. Without even thinking about it, she got up and started mixing another. She was hanging on every word coming out of Jackie's mouth. Andrea was no anal virgin. She simply had not enjoyed it nearly as much as Jackie had. To hear Jackie describe it, though, made it sound far more enjoyable than Andrea recalled from her limited experience.\n\nPart of that, though, sounded like she had simply not allowed the right guys to have access to her tender backdoor. Andrea had just assumed that guys with thick cocks like Oscar would be worse than the smaller-dicked guys that she had allowed to fuck her ass. She had never considered what Jackie was now describing: the intense pleasure of a thick cock head deep in her ass. Andrea was soaking wet by the time she drained that second mixed drink.\n\nHer legs were shaky as Andrea made her way back to the kitchen to mix another drink, but not from the alcohol she had consumed. Her pussy was on fire with arousal, and her asshole was practically twitching at the detailed erotic images Jackie had conjured up. There was still that part of her mind that refused the idea of Jake's massive cock going into her asshole. She could not help but imagine her little sphincter being ripped by such a severe stretching. However, that part of her mind now had to contend with something new.\n\nShe could actually imagine intense pleasure from having a nice, thick cock deep inside her bottom. The dreamy look on Jackie's face when she described the intense orgasms she had experienced forced Andrea to rethink her entire stance. It wasn't just Jake, either. There was Oscar, and there were a handful of other guys that Jackie described. Some of those were men that Andrea knew. She was beginning to feel like she had just missed out on something spectacular.\n\nShe was halfway through that third mixed drink, and was beginning to feel the effects of the alcohol. Jackie's next words made her blood run cold.\n\n\"Well, I've gone on far too long about all that,\" Jackie said quietly, \"I really came here to apologize. I didn't mean to steal Jake from you, Andrea.\"\n\n\"What!?\" Andrea was once again thrown by this sudden change of direction. \"What are you talking about, Jackie?\"\n\n\"Jake said you were going to break up. He said you were the one who mentioned it first. Didn't you say that he should date me, since I would be giving him what he wanted?\"\n\n\"Well, I did say that, but I was kidding! I can't believe he told you that. I can't believe he thought I was serious! Dammit!\" Andrea slurped down half of her third mixed drink in one long gulp.\n\n\"Whoa, slow down there, Andrea!\" Jackie cautioned. \"I'm sorry. The way Jake said it, I thought you were serious about breaking things off with him. I just assumed you guys had never been that serious, and you were ready to move on anyway. I take it, from your response, that you were more interested in him than you let on?\"\n\nAndrea really had to think about it before she could answer. A montage of wonderful moments with Jake played through her tipsy mind. Worse, she now had intense images that Jackie had planted as well, of Jake pounding her friend's sexy ass. Jake's massive cock overlaid images of his loving face looking down at her.\n\n\"I don't want to lose him,\" she sobbed. Jackie got up and hustled around the table to comfort her friend. \"What am I going to do, Jackie?\"\n\n\"Oh, that's easy,\" Jackie smiled reassuringly, \"You know what he really wants. All you have to do is give it to him.\"\n\nAndrea blinked as she looked at her friend's warm smile. It really was that simple, wasn't it? All she had to do was\u2014whoa! Wait, was she seriously considering this?\n\n\"I don't know if I can do that,\" she gasped weakly.\n\n\"Sure you can,\" Jackie said, squeezing her shoulders reassuringly, \"and you're going to love it! Trust me.\"\n\n\"How can you be so sure?\"\n\n\"Because I'm going to help you,\" Jackie smiled, and then she went over to pick up her purse. She had come prepared to help Andrea with this very thing.\n\nThe two of them had, back in their college days, done some wild things together. It was those memories that made Andrea want to watch when Jackie originally lost that bet to her hung boyfriend. The two women were a study in contrasts. Andrea had long blonde hair and was voluptuous, with larger breasts and hips. Jackie kept her auburn hair cut to shoulder length, and she had a tight, toned body. Each of them thought the other woman was sexy, but the truth is that both of them were.\n\nAndrea drained her third mixed drink, and allowed Jackie to lead her to her bedroom. She had drunk enough alcohol, and she was so turned on from Jackie's erotic stories, that she was incredibly aroused as Jackie stripped off her clothing. Her eyes widened when she watched Jackie lay out a trio of increasingly large dildos, as well as a bottle of anal lubricant.\n\n\"You may have to tie me up for this to work,\" she blurted out.\n\n\"That may be a good idea,\" Jackie replied, nodding thoughtfully.\n\nAndrea couldn't believe she had said it. She was just drunk enough that she didn't realize Jackie had subtly coaxed her into saying it. Ten minutes later, though, she was tied spread-eagled on her bed, and she gasped as Jackie worked the first thick dildo into her well-lubricated backdoor.\n\nThis had been part of the scheme Jake had suggested the night before. Although Jackie was vaguely aware of it, Jake knew that Andrea really got a thrill out of being tied up and used. She just would never allow Jake to do anything with her sexy bottom. This time, she was tied to her bed specifically to allow Jackie to work over her tight asshole.\n\nAndrea was shocked when that thick artificial cock forced an amazing orgasm from her. \"Oh my god!\" she gasped in disbelief, \"I had no idea...\" Her words trailed off as her eyeballs rolled up in her head. Jackie smiled in satisfaction as she watched her friend's entire body tremble through that first intense orgasm. Within minutes, Andrea was eagerly pushing her shapely bottom back to force more of the dildo into her stretched rectum.\n\nIt was all an incredible blur of sensual delights for Andrea. She was not even aware of it when Jackie switched to the second and third dildo. She was only aware of how much more intense the pleasure became. Jackie had not shown her friend the largest dildo, the monster that was just slightly smaller than Jake's massive dick. She reached into her purse for it when Andrea was gasping through her fifth anal orgasm.\n\n\"Ohhh, that is big,\" Andrea groaned when that thick tool was sliding into her. It wasn't a complaint.\n\nJackie was completely right! Andrea thought as that thick dildo picked up speed, driving in and out of her ass. I never knew how much pleasure I could get from having my asshole fucked. This is amazing!\n\nShe shook and babbled as she had her most intense orgasm of the night. As she lay panting in the afterglow of that orgasm, she completely missed hearing the soft knock at her door. Jackie leaned down and planted a soft kiss on her cheek.\n\n\"I'll be right back,\" she whispered.\n\n\"Okay,\" Andrea gasped, nodding her head.\n\nJake could not believe his eyes when Jackie led him into Andrea's bedroom. Oh, Jackie had described this exact scene, but he still couldn't believe he was seeing it. He was almost numb, stripping off his clothes quietly as Jackie resumed driving her biggest dildo in and out of Andrea's eager backdoor. When he was naked, Jackie handed him the lube and had him prepare his cock.\n\n\"Are you ready for the big one?\" Jackie growled into Andrea's ear, just loudly enough for Jake to hear it.\n\n\"Yes!\" Andrea gasped out, \"Yes! Fuck me with that big dick!\"\n\nAndrea felt Jackie shifting on the bed after she had withdrawn the thick dildo from her ass. She felt empty and ached to be filled again. Jackie licked her lips and grinned at Jake as she took hold of his shaft and guided it to Andrea's waiting asshole. \n\nAt first, Andrea thought that it was Jackie's legs that were touching hers, and she wondered if this was a strap-on. It really stretched her asshole, and she groaned out loud.\n\n\"Isn't it amazing?\" Jackie asked when half of Jake's cock was buried in Andrea's ass.\n\n\"Yes!\" Andrea practically sobbed, \"I never imagined it could be like this.\"\n\nBy the time she realized that she now had a real, live cock in her ass, it was buried in her to the hilt.\n\n\"What...?\" she gasped, turning her head to see who it was.\n\nJake leaned onto her back and kissed her passionately. Then he started to fuck his girlfriend's sexy ass the way he had always dreamed. The orgasms she had enjoyed from those dildos could not hold a candle to what she now experienced. She saw fireworks as her pussy juices soaked her sheets. Jackie was in front of her, then.\n\n\"I knew you could do it,\" she said, leaning in to kiss Andrea on her gasping mouth.\n\nAndrea kissed her back weakly, but she was far too focused on the amazing sensations coming from her ravaged asshole as Jake began to give it the serious fucking it needed.\n\nJackie gently untied Andrea's wrists and ankles before she stood and stripped where both of her friends could see her. She began working two lubricated fingers in and out of her asshole as she joined them in the bed. She kissed Jake as he pounded Andrea's eager ass from behind. Andrea was delirious as she came yet again.\n\n\"I promised you could have anything you wanted,\" Jackie said huskily into Jake's ear. \"You got to fuck my ass, and now you're getting Andrea's sweet ass as well. Was it everything you hoped it would be?\"\n\n\"Oh, god!\" Jake gasped, losing it at her words.\n\nHis body shook as he filled Andrea's tight ass with that first, massive load of cum. Jackie licked his earlobe and bit it softly. Jake never got the chance to go soft. Jackie's next statement had him raring to go even after the intensity of that incredible climax.\n\n\"Now you have to give Andrea what she wanted, Jake. You have to let her watch while you fuck me in my tight little asshole. Do you think you can do that for us, Jake?\"\n\nJackie knelt on the bed next to Andrea, reaching back to spread her ass cheeks and expose her own horny asshole. Jake pulled his still-throbbing boner from Andrea's clutching ass and moved over to press it against Jackie's eager little flower.\n\n\"I will do my best,\" he groaned."
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "bet",
        "huge cock",
        "big cock",
        "first time anal",
        "tied up",
        "anal sex",
        "poker game",
        "first time"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/anything-i-want"
}