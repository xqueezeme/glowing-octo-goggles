{
    "title": "Politics & Prejudice Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 1 - Prologue \n\nTuesday, May 17th. It was a second straight beautiful Spring day: cool in the morning, warm but not too hot in the afternoon, sunshine with just a few clouds in the sky. At 9:30am, I was driving to the University campus in my Police SUV, having just come out of a meeting with John Colby and Dagmar Schoen, both of the Town & County Council.\n\n\"They're going to do it tonight.\" said Colby, as we met in his business office on the north side of Town. \"They're going to use eminent domain to condemn the Junction Station Depot, then sell it to Thomas P. Cook's company so he can put a hotel on the property.\"\n\n\"We've gone to the Press.\" said Schoen, \"and they openly told us they won't cover the story, nor anything that might hurt Thomas P. Cook politically. I can understand KSTD doing that, but not KXTC.\"\n\n\"Did you talk to the owner of KXTC, one Todd Burke?\" I asked.\n\n\"Yes, I did.\" said Colby. \"Todd was polite, but he said he didn't want to dictate to KXTC what news to cover and not cover. Right now the Federal Government is really throwing their weight around, pushing against news outlets and trying to dictate what the Media can and cannot cover. To an extent, they can't stop the Media completely, but when you watch how the Media, even Fox Cable, won't cover certain scandals, won't ask certain very obvious questions publicly, and do this for both political parties that are in bed with each other, you see what the issue is. They tried to shut down The Drudge Report, and that was the Establishment Republicans doing it. So I can understand Mr. Burke's reticence to get involved.\"\n\n\"I see. The usual suspects at work, here.\" I said. \"Okay, I'll see if I can unleash the nuclear bomb against Thomas P. Cook, at least about the Junction Station Depot.\"\n\nAs I drove down College Avenue, the dispatcher on Police radio said something about vandals at First Baptist Church. I headed on over. \n\nFirst Baptist Church's main front doors face south and face College Avenue. The building then stretches north, the old Chapel part facing north and Elm Street, which becomes the northern line of the Courthouse Square (College Avenue is the southern line, and Riverside Drive the western border). I came up along Elm towards the Bus Station, seeing a Police cruiser already parked in the Church's back parking lot.\n\n\"Well, hello, Commander.\" said Sergeant Rudistan with great joviality. He and Sr. Patrolman Morton had just apprehended two ten year old boys, Davie Marsdon, and Timmy Austin. Davie was something of a troublemaker, and Timmy was a follower. \"We just found these two boys trying to get under First Baptist Church.\"\n\n\"I'd say you caught them coming out, from the looks of the dirt on their pants.\" I said. the boys grew wide-eyed as they realized who they were now dealing with. \"And I see that Davie Marsdon is one of the boys.\"\n\n\"The usual suspect in a case like this.\" said Rudistan jovially. He'd 'handled' cases involving Marsdon a few times before.\n\n\"Okay, guys,\" I said, \"I'll handle this one. Y'all can hang loose in your car while I talk with these guys on this bench here.\" I had the boys sit down on a bench on the church lawn.\n\n\"Okay, boys,\" I said, \"less than one week out of school, and you're already in trouble with me. So why are you prowling around inside a church? It's a good thing Pastor Westboro is out of Town. God Himself might be watching you, though.\"\n\n\"We weren't going to hurt anything, Mr. Crowbar. Honest!\" said Davie Marsdon. \"We weren't going to steal anything, either.\"\n\n\"So why were you in there?\" I asked.\n\n\"We were just looking around, exploring.\" said Timmy Austin. He had blonde hair, sort of ash-blonde like Henry Wargrave's hair had been. No facial resemblance, though.\n\n\"So how did you get in there?\" I asked.\n\n\"There's a secret passage.\" said Davie in a conspiratorial voice.\n\n\"Okay, show me.\" I said. We went to the west side wall of the church, where the Fellowship Hall was the 2nd floor, and offices underneath. Davie showed me where what looked like a panel of the foundational wall was really a concealed door. The plank moved back enough to let them through.\n\nI peered inside with my flashlight and saw where some ground was dug out. Just above was the floor with pipes coming through.\n\n\"Okay, I see what this is.\" I said. \"The main heating unit is just above there. They used this door to get to it when they installed it, and left it in case they had to go under there and fix it.\"\n\n\"Yes sir.\" said Timmy. \"There's a hole that we climbed through, up into the Utility Room. Then we just went out the door to the hallway.\"\n\n\"Okay.\" I said. \"Boys, I want you to do me two favors. First, promise me you will not trespass this way into the church again. If you make that promise, I won't have to say anything to your parents.\" The boys promised.\n\n\"Second,\" I said, \"don't tell anyone else about this... unless I ask you to. Okay?\"\n\n\"Yes sir.\" both boys said simultaneously.\n\n\"Okay, you two move along, and don't give my officers any more trouble, y'hear?\" The boys got out of there as fast as their legs would carry them.\n\n* * * * * * * * * * * * * * *\n\nMy next stop was the office of my favorite University Professor, and the most beautiful woman in the world, at least to my biased opinion. I had called ahead, and Laura was expecting me. The kids were in the back room.\n\nI explained the situation with the Junction Station Depot. \"I think I have an idea how to stop Thomas P. Cook cold on that one.\" I said. \"That is, if you wouldn't mind pulling a few strings really hard for me.\"\n\n\"Oh, that will be no problem, Darling.\" Laura said. She made a few phone calls...\n\nPart 2 - First Salvo \n\nThe public session of the Town & County Council meeting was going on at City Hall, with Pastor Westboro's absence excused. First the lawsuits against the County were served and processed; this was usually just a formality. Then citizens would address the Council on certain issues. Then the Council would take up certain bills, with some debate. Everyone who was anyone knew that the real debates had already occurred.\n\nSo when a very tall redheaded man in a suit and tie approached the podium to address the Council publicly, there was more than a few surprised people.\n\n\"My name is Donald Troy.\" I said. \"I am here--\"\n\n\"With respect, Commander Troy,\" said the Mayor, \"as the Police Commander, you hardly need to approach the Council this way. I would gladly have taken your phone call...\"\n\n\"Thank you, Mr. Mayor.\" I said. \"I am here simply as a Citizen today, and also as a representative of the Town & County Historical Society, as Mrs. Myrtle James's stand-in. Unfortunately, Mrs. James is feeling a bit under the weather.\n\n\"We're sorry to hear that.\" said Jack Colby. \"So what do you have for us, Commander?\"\n\nI said \" I am here to formally serve this notice from the National Park Service of the Federal Government. They are formally considering placing the Junction Station Depot on the National Register of Historic Places. As such, it will have to be preserved, and so any plans to sell it, or condemn it under eminent domain would be met with a Federal Court issuing a stay enjoining such action, until the Park Service has made its determination.\" The formal paper was served.\n\nI could see out of the corner of my eye that Thomas P. Cook and Kelly Carnes were both looking at me with faces that betrayed their pure hatred. By way of contrast, Dagmar Schoen could hardly keep from laughing, and she could not hide a huge grin.\n\n\"Well, that's very interesting.\" said the Mayor, also with something of a grin on his face. \"It would be of great historical import for our County if the Depot were indeed so honored. Thank you for bringing this to us, Commander.\"\n\nWith that, I left. Interestingly enough, the scheduled vote on the Junction Station Depot was not brought up.\n\n\"Let us retire now into executive session,\" said the Mayor, \"to hear other business involving County personnel...\"\n\n* * * * * * * * * * * * * * *\n\n\"How in the world...\" he said as he sipped his drink.\n\n\"Sir?\" asked the lovely Sinon, also sipping the rare and expensive sherry that he had shared with her.\n\n\"How in the world was that man able to not only find out about the takeover of the Depot, but to stop it that quickly by having the Federal Government put it on the National Register of Historic Places?\"\n\n\"They're just considering it, sir.\"\n\n\"No, no, they're pretending to take time with it, but I happen to know it's going to happen.\" he said. He shook his head. \"He's starting to get ahead of us now, to anticipate us. That's very, very bad.\"\n\n\"Maybe he was just lucky this time.\" the lovely Sinon said. \"Colby and Schoen told him about it; he has plenty of contacts in the Federal Government, including the one he sleeps with every night; so he stops us in our tracks before we could move on it.\"\n\n\"Maybe.\" he said. \"And then there's what happened to Sharples. My God, what a brilliantly neat trap. Sharples headed to possible execution, Dick Ferrell needing my help to avoid being prosecuted himself, and Jack Lewis on the verge of being annihilated in the Election in November.\"\n\n\"You won't hear me complaining about that one. About Sharples, that is.\" said the lovely Sinon.\n\n\"No, he was a fat buffoon, and it's good he's out of our way.\" he said.\n\n\"Do you not fear what Sharples might say about you?\" she asked.\n\n\"Harrumph.\" he said. \"Sharples knows little. He can't harm me. In fact, it would almost be better if he did say something. Then all of the work done by the Iron Crowbar to put me in the dock... will be for nothing. I'll slip out of his nets, and *POOF!* be gone...\"\n\n* * * * * * * * * * * * * * *\n\nLater that night, my personal cellphone rang. Bowser barked angrily, despite my reassurances that it was not an intruder alert at the Cabin.\n\n\"Troy.\" I said as I answered it.\n\n\"This is Jack Colby.\" said Colby. \"I wanted to give you a heads-up. The Junction Station Depot might've been a feint. They pulled a surprise on us in the executive session... they voted to sell the property the Community Center is on...\"\n\nPart 3 - Pushback \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely reporter from in front of City Hall at 7:00am, Wednesday, May 18th. \"Channel Two News has learned that a plan by the Town & County Council to condemn the historic Junction Station Depot by eminent domain, and sell it to Northwest Properties Development Corporation, was stymied when the National Park Service served notice that the Depot is a candidate to be placed on the National Register of Historic Places. With that knowledge, the Council took no action last night. However, they did vote to consider selling the Community Center property.\"\n\n\"In other news, our competitor KSTD filed a lawsuit against the Police Department after their credentials were pulled and they were denied access to Police Headquarters and all Police properties. Legal experts are evenly divided on who will prevail in this matter.\"\n\n\"And in political news,\" said Bettina, her smile fading somewhat, \"with the news of the attempted murder of a Police Officer by SBI Agent 'Sergeant' Sharples, the overall trust of the People in the SBI has fallen to a low of 27%, according to Karl Frazier of Public Policy Polling. This is beginning to affect the race for Governor, as Val Jared has taken a 50-42 lead over SBI Director Jack Lewis. In local races, District Attorney Gil Krasney holds a 51-47 lead over challenger Jenna Stiles.\"\n\n\"Wow,\" said Cindy as she and I headed back to my office after the newscast, \"an SBI Agent tries to murder you, and Jack Lewis is still even alive in this race?\"\n\n\"I'll make a prediction.\" I said. \"As people forget about this in the next month, Lewis's numbers will go back up. He may even win the race.\"\n\n\"Well,\" Cindy said, \"at least Jenna is still holding on, so far.\" Her eyes showed that she was mentally far away from here.\n\n\"Have you seen her or talked to her lately?\" I asked. Cindy shook her head 'no'.\n\n\"She's either in her campaign office, or meeting with potential donors, or giving speeches.\" Cindy said. \"I took her some of your mom's medicinal soup, as she looked like she was not eating well. I think it helped; her next speech was pretty fiery. But we didn't get to talk... and I don't think she really wanted to.\"\n\n* * * * * * * * * * * * * * *\n\nAs Dagmar Schoen walked across Courthouse Square, she saw Thomas P. Cook coming seemingly out of nowhere and essentially chase her down.\n\n\"I want to talk to you.\" Cook snarled.\n\n\"Make an appointment with my office.\" said Schoen. She attempted to walk around Cook, but he moved to block her path.\n\n\"I'm going to tell you something, bitch.\" he said. \"You keep fucking with my plans, and something ugly is going to happen to you.\"\n\n\"Is that a threat?\" Dagmar asked.\n\n\"You damn straight it is.\" Cook said, his face ugly, his voice filled with menace. \"I'm tired of little whores like you trying to stop my good and legal business ventures. You think you're playing it straight, you think you're playing it high and mighty like the Iron Crowbar, but you're going to find out what's real.\"\n\n\"We're done here.\" Schoen said, again trying to move past Cook. He again blocked her path, and all but pushed her back.\n\n\"We're done when *I* say we're done, you little whore.\" Cook hissed. \"Let me tell you something; I've got the goods on you and Colby. All the neat pictures of you and him fucking around on your spouses. Now you better start behaving, or your husband will get a copy of those pictures...\"\n\nDagmar tried again to move around Cook. When he moved to block her, she yelled at the top of her lungs \"GET OUT OF MY WAY! THIS MAN IS BLOCKING MY PATH! CALL THE POLICE!\"\n\n\"You fucking idiot bitch---\" Cook started, but he noticed that twelve old people had suddenly appeared out of nowhere and were beginning to surround him and Dagmar.\n\n\"Is there a problem here, Mrs. Schoen?\" asked Mrs. Williams.\n\n\"Yes, this man is accosting me and won't let me through.\" said Schoen.\n\n\"I would suggest, Mr. Cook, that you stop harassing Mrs. Schoen,\" ordered Mrs. Veasley, wheeling up at high speed in her wheelchair, \"or there will be serious trouble.\"\n\n\"And what are you going to do from that wheelchair, you old bitch?\" snarled Cook. He seemed ready for physical violence.\n\nSuddenly everything seemed to get quiet. Cook turned around to see someone who was not wheelchair-bound, was well-armed with a red crowbar, and had a badge to back it up.\n\n\"Is there a problem here, Colonel Veasley?\" I asked, using Mrs. Veasley's old Army rank; she'd had to retire as a Lieutenant Colonel with her war wounds.\n\n\"No, there's no problem here, Troy.\" said Cook, trying to wrest control of the situation away from me. \"Shouldn't you be at work catching criminals instead of hanging around the Square with these old farts?\"\n\n\"I *am* at work, catching one criminal right now.\" I said. \"Physically assaulting Ms. Schoen is bad enough. Using your Council seat and eminent domain to get sweetheart deals to enrich your own pockets... that's corruption, and really bad. I don't like corrupt politicians, Mr. Cook.\"\n\n\"You tell him, Iron Crowbar!\" shouted one old man that had come up in a wheelchair. He was a war veteran, and he looked like he could use that cane of his as a weapon as formidable as a crowbar.\n\n\"Are you accusing me of a crime?\" growled Cook. \"You better have some damn solid proof of that, or I will barbecue your ass!\"\n\n\"Believe me, Mr. Cook.\" I said. \"Your day of reckoning is near. And if I hear even a whisper of something happening to Ms. Schoen, then I'm going to beat you down with this crowbar and ask questions about it later. Ohhhhh, I almost forgot... yesssss... there's that little trick you pulled in executive session, voting to put up the Community Center property for sale.\"\n\n\"What?!?!\" came a chorus of old people.\n\n\"Oh yeah, tell them about that, Cook.\" I said. \"And how you tried to do it secretly, too. Ms. Schoen voted against it, but you pushed it hard and the others voted for it.\"\n\n\"If you know about that, you and someone have broken the law.\" said Cook. \"What's in executive session is secret.\"\n\n\"Bullshit.\" said Dagmar Schoen. \"It's part of the public record; only personnel names are redacted. And that should not have been in executive session, anyway.\"\n\n\"We'll see.\" said Cook. \"As for you, Troy, you mind your own fucking business, or you won't be employed here any longer.\"\n\n\"Is that a promise for me to hold you to, or a threat to be ignored?\" I asked. The red crowbar was tapping in my hand. Cook was stymied, and he walked away from me, towards City Hall. The old people were laughing as Dagmar thanked me.\n\n\"Keep your eyes peeled and your head on a swivel.\" I told her. \"Tell Colby that, too; Cook is like a cornered, wounded tiger. There is no telling what he will permit himself to do.\"\n\n\"And thank you, ladies and gentlemen.\" said Dagmar.\n\n\"Think nothing of it.\" said Mrs. Veasley. \"We are always ready to help young ladies from bad men. But is it true about the Community Center property?\"\n\n\"Yes.\" I said. \"But don't worry, I have ideas for stopping that. And I do think you for standing up for Councilwoman Schoen.\" I was looking at the old man who had wheeled, up, seeing his American Legion hat.\n\n\"Mr. Davis,\" I said to the ancient man in the wheelchair, \"weren't you one of the Paratroopers that jumped behind the lines on D-Day?\"\n\n\"Aw, that's nothing.\" he growled dismissively. \"I've forgotten about all that stuff.\"\n\n\"I haven't.\" I said. I brought my hand up to the brim of my hat in a crisp salute. \"All the way and then some, Paratrooper Davis!\" \n\nThe parakeets fluttered as Mr. Davis returned the salute. \"Airborne, Paratrooper Troy!\" he said. \"I can tell you are a man who respects what soldiers do.\" He then extended his hand and I shook it.\n\n\"I was one, once. \" I said. \"Didn't have to do what you did, though. Why don't we go to the Community Center. I want to hear about that day.\"\n\n\"Well, I'll tell you about it.\" said Mr. Davis. We went to the Community Center, Dagmar Schoen making sure to come and hear this, as well as all of Mr. Davis's elderly friends. He never talked about his war experiences, but for the next two hours we listened with avid attention to some serious history from the perspective of one of its participants...\n\n* * * * * * * * * * * * * * *\n\n\"There sure are a lot of old people out there.\" he said as he finished his salad at a bistro on the south side of Courthouse Square.\n\n\"Yes, there are.\" said Katherine Woodburn, sitting with him, looking through the glass of the shop. \"The weather's getting better, so they come out of their little Community Center and hang out on the Square.\"\n\n\"There were a lot this morning, too.\" he said. \"Sprang out of nowhere at the first sign of an altercation, had it surrounded in no time. Do you not find that interesting, Senator?\"\n\n\"I was more interested in knowing that the Iron Crowbar showed up with amazing speed.\" said Katherine. \"Seemed to be very ready to start some trouble, too.\"\n\n\"Yezzzz...\" he said. \"Well, I shall take even greater delight in kicking their ancient arses out of the Community Center, and selling that property for a lot of money... or developing it for even more money.\"",
        "\"The Iron Crowbar has been all over that.\" warned Woodburn. \"The Council had better use an open bidding process, or he'll be screaming his redheaded face off about it.\"\n\n\"Oh, my dear,\" he said, \"you will so enjoy what I am going to do there.\" he said. \"Let the Iron Crowbar have his open bidding process. What will happen next... will absolutely devastate him... as well as all of those old pieces of shit out there... oh yes...\"\n\nPart 4 - Helping Hand \n\n\"So where did all the EMTs go?\" asked Detective Joanne Warner at 2:00pm that same Wednesday, May 18th, as the MCD Detectives were talking at their desks.\n\n\"Some of them were homeless.\" said Theo Washington. \"Some bank in the City bought up their delinquent mortgages, then colluded with the Courts to get them kicked out of their homes. Then Fire Department assholes kept calling the Police to come arrest them for being homeless on the streets. Then Commander Troy put out an order for him to be called personally, so he could handle those situations himself, and the EMTs started disappearing.\"\n\n\"Maybe he did away with them.\" said Julie Newton, who had come into the MCD room from Vice.\n\n\"Noooo! He wouldn't do that!\" exclaimed Joanne.\n\n\"Well, they've disappeared.\" said Julie. \"Anyway, I came in to ask if any of you have had a problem with a company called 'Three Brothers Trucking'.\"\n\nJoanne looked it up on her computer. \"They're located off Jefferson Avenue. Moving company, mostly move people from one house to another. No issues with them on record. Why?\"\n\n\"The Commander asked me to look into them.\" said Julie. \"They've had some unusual money transactions. Some of their employees are ex-cons, and suddenly get flush with cash from time to time.\"\n\n\"Is it enough to cross over into MCD from Vice?\" asked a voice. Julie turned around to see Captain Cindy Ross standing behind her.\n\n\"Not from my research, ma'am.\" said Julie. \"But I thought I'd ask if MCD had come across them in any way.\"\n\n\"Cool beans, as the Iron Crowbar would say.\" Cindy said. She looked at the file folder of information that Julie handed her. \"Not much here. Someone pays them in cash, they might just pay out in cash, keep the employees's taxes down.\"\n\n\"By the way, Captain,\" said Joanne, \"we were just talking about the former EMTs. They've all disappeared, and the conspiracy theory is that the Iron Crowbar made them vanish.\"\n\nCindy barked a little laugh. \"Well, in a manner of speaking, that's true. Dr. Eckhart asked him, and me, to take them down to 'The Vision' if and when we find them. My father has been finding them jobs all around the country, sometimes EMT work, sometimes other things. Helping their families with moving expenses. And most importantly, getting them out of the Fire Department's reach.\"\n\n\"That's very nice of Dr. Eckhart to do that.\" said Julie Newton.\n\n\"My father is a great man... a much greater man than I ever knew at first.\" Cindy said. \"The more I learn about him, the more I see how great he truly is.\"\n\n\"With respect, though, ma'am,\" said Julie, \"he's not a man of God.\"\n\n\"That's true.\" Joanne said. \"The only way to true salvation is through Jesus Christ.\"\n\n\"You know, ladies,\" Cindy said, her ice-blue eyes a little brighter than normal, \"there are a lot of preachers out there, like the late Jonas Oldeeds, like Vicki Oldeeds, and Robert Patterson, that talk the talk but do not walk the walk. I'll take my father's good deeds over their false piety any day.\"\n\nCindy handed Julie the folder back and walked out of the room. Julie and Joanne just looked at each other, then got back to their work...\n\n* * * * * * * * * * * * * * *\n\nSBI Agent Richard 'Dick' Ferrell came to the door and knocked upon it. Upon being admitted to SBI Director Jack Lewis's office, he saw that SBI Deputy Director Robert Gaston was also in the room, as well as State Senators Jimmy 'Coffin' Cerone, Katherine Woodburn, and Richard Langdon... and Chaplain Steven Ikea.\n\n\"I came as soon as you called, Director.\" said Ferrell to Lewis.\n\n\"I appreciate it, Dick.\" Lewis said affably. \"Get some coffee or water and have a seat.\" Ferrell did so, and sat down next to his buddy Ikea.\n\n\"So 'Operation Point Hollow' did not work out so well.\" said Lewis. \"You are lucky, Dick... very lucky. Sharples... not so much. He might even get the death penalty.\"\n\n\"Yes sir.\" said Ferrell, chagrined. He'd left Sharples behind, and he himself was fortunate to have gotten out of the Iron Crowbar's County with his own scalp attached to his head.\n\n\"Fortunately,\" said Katherine Woodburn, \"a good friend of mine thought you were worth saving, Mr. Ferrell. Sharples will keep his mouth shut, and there will be no further investigation into that incident. The Iron Crowbar has his fat suspect in custody, and his attention is elsewhere right now. We must use that to our advantage.\"\n\n\"Eventually.\" said Senator Cerone in his soft, smooth voice... a voice that belied his heartlessness and his willingness to kill for his personal gain. \"Right now, Mr. Ferrell, you are going to take what amounts to a vacation. You and Chaplain Ikea will be sitting in your offices at your desks, evaluating personnel, cleaning up paperwork, and strengthening the Narcotics Task Force for future missions.\"\n\n\"Which will not be happening any time soon.\" said Director Lewis. \"We absolutely need to get you and the NTF out of the news. Despite the efforts of our good friends in the partisan Media, my poll numbers are slipping.\"\n\n\"I understand, sir.\" said Ferrell. \"What would you like for me to do?\"\n\n\"We'd like for you and Chaplain Ikea to go into that room, where you'll meet some men you are going to be working with for the next month.\"\n\nIkea stood up, guiding Ferrell towards the door. It led to a small side room with a table. They went in and closed the door behind them.\n\n\"Have a seat, Agent Ferrell, Chaplain Ikea.\" said one of the men sitting at the table. \"We look forward to working closely with you. And in the end, the two of you will have the honor of personally arresting Donald Troy, and bringing him to our custody to face Justice.\"\n\n\"Sounds good.\" said Ferrell. \"And you are?\"\n\n\"Ah, this is FBI Special Agent Ernst Staffeld.\" said the man, introducing his partner. \"I am also with the FBI. My name is Bond... James Bond.\"\n\n\"You're kidding.\" said Ferrell. Ikea just grinned.\n\n\"I get that a lot.\" said Special Agent Bond. \"No, I am not kidding. And I'm definitely not kidding about what you are going to help us do to put the Iron Crowbar behind bars for the rest of his filthy life...\"\n\nPart 5 - Murder In Coltrane County \n\n\"Thank you for coming, Commander.\" drawled Sheriff Sorrells. It was late in the day, the sun working its way over the horizon to the west, as Wednesday May 18th came to a close.\n\n\"No problem.\" I said. Cindy and I were there as SBI Reservists. SBI Reserve Director Tom Conlan was on his way up from Midtown, and there were a number of State Troopers present. I suspected the Governor really, really did not want to hear of any altercations between myself and the regular SBI.\n\n\"Hi, Captain Ross!\" said Deputy Strait enthusiastically. \"It's good to see you again.\"\n\n\"You too, Deputy Strait.\" Cindy said. \"So what do we have here?\"\n\n\"Two males, both black, both Town & County Fire Department firefighters.\" said Sheriff Sorrells. \"Neither of them live here nor have relatives that live here.\"\n\nIndeed, I was looking at two dead TCFD Firefighters. We were on County Road 98, which goes east-west along the upper part of the County. It connected on its west end to the Midtown-University Highway near the road to The Vision, and on its east end to State 142 that ran from Buford in Coltrane County to Hillside in Nextdoor County. The bodies were just lying on the side of the road, one on his back, one contorted on his side with his leg in an \"L\".\n\nThey were in their TCFD uniforms. Their wallets were still on their persons, though any cash had been removed. I wore latex gloves to handle the wallets, examined them, and bagged them as evidence.\n\n\"Who called it in?\" I asked as I observed that their hands had been tied behind them and their mouths gagged at some point in time before their deaths.\n\n\"Motorist coming over from Hillside.\" said the Sheriff. \"He lives in Nextdoor County. When I asked why he was on County Road 98 and not State 142, he seemed confused and said he must've taken the wrong road. Name is Stevens.\"\n\n\"Chad Stevens? Lou's son?\" I asked, remembering the case of the murder of Michael Campbell Fulton.\n\n\"No, not him.\" said Sorrells. \"Dwight Stevens. Youngish looking, and seems like he's a bright kid until he realizes he was on the wrong road in the first place.\"\n\n\"I'll have to check up on him.\" I said. \"Looks like these two guys were shot in the chest and head areas at fairly close range. They were tied up when that happened. Then they were obviously driven here and dumped.\"\n\n\"Why do you say that, Commander?\" asked Deputy Strait.\n\n\"The way their bodies are lying here.\" I said. \"Not all that common to find someone dead on their back, at least not on the floor or a road. They usually fall forward or sideways, through lack of impediments. The other guy landed on the ground and essentially bounced, and his legs and arms just went every which-a-way.\"\n\n\"Why here?\" asked the Sheriff. \"They could just as easily have dumped them on one of your County roads. Jurisdiction isn't going to matter much.\"\n\n\"True.\" I said. \"Well, I'll call the Town & County morgue to come get these guys... and I'll have to call Chief Quinlin.\"\n\n\"Think this was line of duty?\" asked Cindy.\n\n\"I don't know.\" I said.\n\n* * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg with the Channel Two Magazine!\" said Bettina at 8:00pm. \"Tonight, we're bringing you the story of the people of the Community Center, and also the story of those who want to sell it for development.\"\n\nBettina told the war stories of Mr. Davis and Mrs. Veasley, of their heroics and their wounds in combat. She interviewed them, and they told of how the Community Center was their second homes, where they spent time with their friends, the elderly of the Town.\n\nThen Bettina outlined how Thomas P. Cook and his business entities were behind several sweetheart land deals, many that came from Council actions. Bettina pointedly implied that corruption was involved in the removal of old war veterans from their Community Center, though careful not to say so explicitly...\n\n* * * * * * * * * * * * * * *\n\nIt was a somber autopsy room as we watched Martha the M.E. at work. Coroner John Quincey Kelly was with us, as was Police Chief Sean Moynahan, Fire Chief Patrick Quinlin, Fire Marshal Zoe Singer, and Sheriff Daniel Allgood.\n\n\"Got two bullets. It looks like they're nine millimeter rounds.\" said Martha as she finished. \"Fired from about two feet away, with closer shots to the head to make sure they were dead.\"\n\n\"Think a former EMT did this?\" asked Fire Chief Quinlin.\n\n\"No.\" I said, and rather emphatically. \"Martha, can you give me a time of death for these men?\"\n\n\"They were killed right about the same time.\" said Martha. \"I'm estimating five to six hours ago. Neither had much food in their stomachs, suggesting they hadn't eaten in a while, so I'd say sometime in the mid- to late afternoon today.\"\n\n\"Chief Quinlin, what can you tell me about these two Firemen?\" I asked.\n\n\"The older one is Johnny Jackson.\" said Quinlin. \"He was up for Engineer, which is the same as Sergeant stripes in the Police Force. He was going to be in charge of a Fire Truck. Solid, dependable. The other is DeSean Malcolm. With us for about a year. Had some attitude problems early on, but settled down.\"\n\n\"What kind of attitude problems?\" I asked.\n\n\"Racial ones.\" said Quinlin. \"Always talking about the white man keeping the black man down, always singing rap songs in the Firehouse he was assigned to. They were both assigned to Station Two, by the way. Southern areas of the County.\"\n\n\"And you say he worked his way out of the racial stuff?\" I asked.\n\n\"I think some of the older guys talked to him. He wasn't a bad guy, good fireman, did his job, so they talked to him, got him to tone it down, and he responded. Some guys don't, and they're not in the Fire Department much longer. Probably the same as the Police, isn't it Commander?\"\n\n\"Not quite.\" I said. \"Any Police Officer doing the rap and talking shit would be gone immediately. I can't have Police Officers carrying guns and authorized to use lethal force saying that stuff, and we don't have time for them to be asked to tone it down. We try to screen them out before we hire them, and that's both white and black Officers. It's not black and white, but Police Blue with us.\"\n\nEveryone had been listening, and nodded at my words. It was Sheriff Allgood that broke the silence by saying \"So what's the timeline for these guys?\"\n\n\"They were off duty.\" said Quinlin. \"As you know, we have three shifts and a 24/48 schedule... 24 hours on duty, 48 hours off, 6:00am to 6:00am. They'd just come off duty, weren't due back until Friday morning.\"\n\n\"Were they personal friends?\" I asked. \"Did they hang out together?\"\n\n\"I don't know.\" said Quinlin. \"You'll have to ask their Station 2 co-workers.\"\n\n* * * * * * * * * * * * * * *\n\n\"Okay,\" I said at 1:00am, Thursday, May 19th, sitting in my office with Cindy, \"neither man was married. Jackson's wife left him three years ago, Malcolm never was married. Neither formally complained of any racial bias against them by the Fire Department leadership, though as Quinlin said, Malcolm had some attitude about shift assignments early on.\"\n\n\"In what way?\" asked Cindy.\n\n\"He was saying they were dispersing blacks in a way that made them hard to stick up for each other when they were racially abused.\" I said. \"This comes from a report filed by his Engineer at the time. It wasn't a reprimand, but considered a suggestion to the leadership. It was at this time he was talked to about toning it down, but they did heed his suggestion, and Stations 2 and 5 in the southern areas, read 'predominantly black' areas, were assigned a larger percentage of black Firemen and given more black leaders.\"\n\n\"But they wouldn't lift a finger when a female EMT was being raped.\" Cindy said.\n\n\"Which brings up an interesting point.\" I said. \"Station 1 near Downtown, where the rape occurred, was almost all white. Station 3 in the northern part of the Town & County, that serves the wealthier areas, is all White and Asian. The overall numbers seem balanced and reasonable, but assignments are skewed.\"\n\n\"We're guilty of that, too.\" Cindy said. \"We have more blacks in Precinct 2, relatively speaking. But Precinct 3 is not all white.\"\n\n\"True, and we're not overly skewed like the Fire Department is.\" I said. \"Anyway, these guys were off duty. Sergeant Rudistan and Patrolman Hicks went to their homes with warrants. Nothing out of place, though Malcolm's dirty laundry was piling up... and I mean his actual, literal laundry.\"\n\n\"Sergeant Irwin and Patrolman Goodwright put on some civilian clothes and went around to the bars these guys were known to frequent. DeSean Malcolm often went to T-Square's clubs in the Tenderloin District. He was not seen last night, though.\"\n\n\"And Jackson?\" Cindy asked.\n\n\"Bit older and therefore a bit quieter.\" I said. \"Often went to the Southside Chess Club on MLK Jr. Drive. Yep, the US Chess Federation site here shows that he played chess tournaments, had a rating of 1780. Irwin went by there; Jackson had not come in at all, but the place doesn't open until 6:00pm.\"\n\nCindy yawned hard, so I asked \"Before I tell you to go home... what do you make of this, so far?\"\n\n\"Not a shred of data yet, Mr. Holmes.\" Cindy replied.\n\n\"Oh, I wouldn't say that.\" I said. \"We do have some features that stand out.\"\n\n\"Don't ask me to guess, just tell me.\" Cindy said tiredly.\n\n\"Sure.\" I said. \"First, they died right about the same time, which is instructive. They died by bullets fired from the same gun, if I don't miss my guess. Ballistics will confirm that, and if I'm wrong I'll admit it, but with that 'totally shocked' look on my face while doing so.\" Cindy giggled at that.\n\n\"They're both black, and I suspect that has something to do with this.\" I said. \"Their wallets were found on their persons, sans cash, but bank and credit cards still in the wallets. Cellphones still on them. Jackson was wearing a wristwatch; it was still on his wrist. Malcolm was wearing bling: a gold necklace. This all points to robbery not being the motive.\"\n\nI looked over. Cindy had fallen asleep. I wondered what had been keeping her up, why she was so tired. Nevertheless, I locked my computer, got out a blanket and covered her, then turned out the lights as I left for the night.\n\nWhen I got home to the Mountain Nest, I was a bit surprised to see two handsome dogs waiting for me at the door. I spoke to them and petted them, then they led me to the den. I saw why they were up and about: my mother was sitting there, reading a book; she was waiting for me.\n\n\"Hello, son.\" she said. \"I heard you've had an interesting day.\"\n\n\"No doubt about that.\" I said. \"The Party never stops in our Town & County.\"\n\n\"So sad about those two Firemen.\" my mom said. \"What did you make of that?\"\n\n\"Well,\" I said, sitting down next to my mom and petting Bowser as he jumped up to sit next to me, \"I haven't decided if it's more important that they were found near 'The Vision', or that they were both black.\"\n\n\"Those could be equally important, don't you think?\" my mom said. \"But what I really wanted to ask you about was this morning's little altercation on Courthouse Square. My, how the people at the Community Center were carrying on about Mr. Davis's war experiences, and how you got him to talk about them... and very respectful of you to salute him that way. He won't admit it, but that meant so much to him.\"\n\n\"That's good.\" I said. \"I loved hearing his stories, as well. We're losing our World War 2 veterans, and people are forgetting the cost of Freedom. It's a whole new world now...\"\n\n\"Very true.\" said my mom. \"By the way, I saw Bettina's special on TV tonight. That was a very helpful thing. But tell me, son... why did Mr. Cook make such an ugly scene with Ms. Schoen? You really could have arrested him, you know.\"\n\n\"Maybe. And more and more I'm thinking I should.\" I said. \"So Mom... you think that was important?\"\n\n\"Oh, I would say that that was of the very highest importance, son.\" said my mom. \"Very telling.\"\n\n\"I'll figure it out when the sun comes up.\" I said. \"I need to get a few hours of sleep before my run with the cadets in the morning.\"\n\n\"Oh, are you still doing those?\" said my mom.\n\n\"Of course.\" I said. \"Why wouldn't I?\"\n\nMy mom just turned to stare at me. Nope, there had never been, and never would be, any getting past her...\n\nPart 6 - Explosive Consequences \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted Bettina at 7:00am, Thursday, May 19th, from in front of Fire Department Headquarters, which was near the Fire Department range north of Town. \"Channel Two News has learned that two Town & County Firefighters were found dead yesterday in Coltrane County. The Police Department issued a statement that the men were murdered, but have no other details at this time. Names have not been released pending notification of next of kin. We at Channel Two News join in the condolences for these Firefighters and their families.\"\n\n\"In other news, Channel Two News has learned that the Town & County Council have discussed the matter of putting the property where the Community Center now sits up for sale. The senior citizens have been offered space in the new Civic Center as well as other possible arrangements, but they are angrily saying they won't leave their beloved Center. ",
        "\"Speaking for the Council, businessman Thomas P. Cook stated that the elderly citizens had no choice, that the property would be sold and the building on it destroyed to make way for new developments. When asked if there would be a fair and aboveboard open bidding process, Mr. Cook smiled brightly and said 'Of course.'.\"\n\n\"How does he know what they're going to do with the property?\" Cindy asked, a great deal of sarcasm in her voice. She had spent the night here, on my sofa in my office, but looked a great deal more rested than the day before. I chastised myself for not noticing her fatigue much sooner.\n\n\"Oh, he already has the plans drawn for when he buys the property.\" I said.\n\n\"That's just so dirty.\" said Joanne Cummings. \"I saw that special on TV last night. Kicking those poor people out of there, especially the old war veterans, then rigging the process to buy the property... just disgusting.\"\n\n\"Yep.\" I said. \"And if it's a rigged process, I'll be right there... and someone will go to jail, whether he's a Council member or not...\"\n\n* * * * * * * * * * * * * * *\n\nThe Community Center was crowded at 9:00am. The Senior Citizens were meeting to try to find a way to save their Center.\n\n\"What is that smell?\" Mrs. Myrtle L. James said to Mrs. Veasley as people gathered.\n\n\"I don't know, my friend.\" said Mrs. Veasley.\n\n\"It smells like some kind of insecticide solvent.\" said Mrs. James. \"Maybe they sprayed for bugs yesterday.\"\n\n\"Why bother, if they're going to tear the building down?\" replied Mrs. Veasley.\n\nAs the meeting progressed, there was a lot of rancor in the room, most of it at Thomas P. Cook. \"He's a dirty dealer.\" shouted Mr. Davis, shaking his fist to the air. \"He's using his Council position for his personal gain!\" There was much agreement.\n\n\"But what can we do about him?\" asked one of the old ladies. \"He was threatening Mrs. Schoen yesterday; I saw it myself. He means to kick us out, and I think he'd hurt us if he could... physically hurt us.\"\n\n\"We can bid against him.\" said someone. \"We can buy this place ourselves.\"\n\n\"We don't have that kind of money!\" shouted someone.\n\nSuddenly, the chatter and voices stopped. Into the room walked Cindy Ross, wearing civilian clothes: a navy blue skirt and jacket, and white blouse with blue stripes running across. Her badge was on her belt, and her gun in a shoulder holster underneath.\n\nWith her was the Widow Athena Jones, dressed in her trademark shawl. She stayed near the door as Cindy walked forward to the stage area, which was in the back of the building.\n\n\"Ladies and gentlemen,\" Cindy said, \"I want to tell you two things. First, the process will not be rigged. You know who my boss is. The Iron Crowbar is on our side, and he will not brook any criminal actions by Thomas P. Cook. Second, when that open bidding process happens, just remember that we have friends... friends with the resources to help us, to stop Thomas Cook and his plans cold---\" She stopped short, looking around and sniffing.\n\n\"What's that smell?\" she said. As she concentrated, a memory came to her, a memory associated with that smell. Oh my God! she thought to herself in horror.\n\n\"Gas leak!\" she shouted. \"Everyone, please get out, NOW! Go! Let's go! Everyone out! Get away from the building!\"\n\nAs people left in a quickly but orderly fashion, helped by the Widow Jones, Cindy came up to Mrs. Veasley, who was trying to manually push the wheels of her motorized wheelchair.\n\n\"Drive out of here, Mrs. Veasley!\" Cindy ordered.\n\n\"It might set off a spark, Child.\" Mrs. Veasley replied.\n\nCindy leaned over and whispered \"It's not gas, it's a bomb. The smell is plastique. Now drive!\" Mrs. Veasley drove right on out of there. Cindy was right behind her, the last to leave the building.\n\nCindy had everyone get clear of the building, with Mrs. Veasley and the Widow Jones helping to get people 300 feet back. Cindy also began blocking traffic as she got out her cellphone to call the Police and Fire Departments. \"Don!\" she said as the Commander answered. \"We've got a problem at the Community Center! It's a---\"\n\n*KA-BOOM!*\n\n* * * * * * * * * * * * * * *\n\n\"Cindy! Cindy!\" I called out into my phone. \"Oh shit.\" I muttered as I ran out the door. I ran into MCD.\n\n\"Explosion at the Community Center!\" I yelled. \"Call for the Fire Department and ambulances! Move, people!\" As the Detectives scrambled, I ran on out and to my SUV. Just as I reached it, I heard a voice in my phone.\n\n\"Don, are you there?\"\n\n\"Cindy!\" I shouted, relief in my voice. \"What happened?\"\n\n\"The Community Center exploded.\" Cindy said. \"No one seriously hurt. Send people to control the scene...\"\n\n* * * * * * * * * * * * * * *\n\n\"We are lucky.\" I stated. \"We are exceptionally fortunate.\" I was at what used to be the front of the Community Center. It was now a pile of rubble.\n\n\"It was your Captain that got everyone out in time, Commander.\" said Mrs. Veasley. \"She saved all our lives.\"\n\n\"How did you know, Captain?\" I asked.\n\n\"She used her mind. She felt it.\" said Mrs. Veasley.\n\n\"Yes, ma'am.\" I replied to Mrs. Veasley. To Cindy I said \"I would like to hear more specifics, though, Captain.\"\n\n\"I'll tell you in private.\" Cindy whispered. I had her come with me a distance away, near City Hall, as we watched Police Officers securing the scene, Fire Department people checking for fires and gas leaks, the Media trying to get in and being held back, but filming everything.\n\n\"Okay.\" I said. \"What happened?\"\n\n\"Don,\" Cindy said, \"do you remember right before the Cabin was burned down, how we smelled something in your old SUV?\"\n\n\"Oh my God.\" I said, understanding.\n\n\"Yes.\" Cindy said. \"I smelled that exact same smell, and I knew it was plastique like what exploded in your car that night.\"\n\n\"You remembered.\" I said. \"And acted. Thank God. And thank you.\"\n\n\"Do you think Thomas Cook was behind this?\" Cindy asked.\n\n\"Depends.\" I said. \"If you think he's the Consultant of Crime, then no doubt about it. It was the Consultant who used that plastique in my car when he burned down my home. It was the Consultant that used explosives to take down the Standard Tools building, almost killing one of my Detectives.\"\n\n\"Whether he is or isn't the Consultant... did he do this to remove the opposition to selling the property?\" Cindy persisted.\n\nI looked around. \"Where is the Widow Athena Jones?\" I asked abruptly. \"It's high time I met her.\"\n\n\"Uh, I don't see her anywhere around.\" Cindy replied truthfully.\n\n\"She was here earlier, Commander.\" said Mrs. Veasley, driving up. \"But I do not see her now. I hope she is okay.\"\n\n\"Looks like we were fortunate, Mrs. Veasley.\" I said. \"And thank you for your help getting everyone away from the building.\"\n\n\"You are quite welcome, Commander.\" said Mrs. Veasley. \"And as I am a Nurse, my services are available if they are needed.\"\n\n\"I appreciate that, ma'am. Fortunately, it seems we have no casualties.\" I said. \"Captain Ross, call up the Police Auxiliary to help with crowd control. And you bring Auxiliary Detective Troy to my office immediately.\"\n\n\"Uh... yes sir.\"\n\n\"Do it today, Captain, do it today.\" I said brusquely as I strode off. Cindy knew what that really meant. She and Mrs. Veasley looked at each other, then went their ways to fulfill their missions.\n\nPart 7 - The Widow Athena Jones \n\nAn hour later, Cindy and my mother came into my office, my mom in her Auxiliary uniform, Cindy in her uniform as well.\n\n\"Have a seat, ladies.\" I said. They sat down as I began speaking. \"I do not think that bomb was set because of the property dispute. I believe it was an attempt by the Consultant of Crime to kill everyone in the place. He wanted to wipe out as many Senior Citizens as he could.\"\n\nI continued: \"I believe the reason was because the Consultant figured out that the Senior Citizens of this Town & County have been organized into something of a Neighborhood Watch Unit, and they've been watching the Consultant for many months. When they interdicted Thomas P. Cook's assault on Dagmar Schoen, their actions were recognized, and they nearly died for it.\"\n\n\"Sir...\" said Cindy, but I held up my hand.\n\n\"No.\" I said, standing up. \"I do not want to hear from you right now, Captain Ross.\" I leaned over my desk, my weight on my arms and hands. \"I want to hear this...\" I said, my eyes boring into my mother's, \"...from the Widow Athena Jones herself...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/politics-and-prejudice-ch-01"
}