{
    "title": "Naked Attraction",
    "pages": [
        "I cannot believe how stupid I had been to make the bet, but I was now paying the ultimate price. It had been a few weeks earlier when I was convinced I was right and made a bet with my best friend Ben. Both of us being Star-wars fans meant we often discussed the movies and plot lines. I don't know how it happened but, I was wrong and now here I was, entering a TV studio with a bunch of other guys.\n\nIn the past, our wagers had always been relatively harmless but this time we decided to up the stakes. We're both geeks and at 20 years of age have zero experience with girls, and when I say zero, I mean ZERO! Not a single kiss or feel, not even a single date. It's not that we're especially bad to look at, it's just that we're both useless once in the presence of a female. Barely able to make a coherent sentence means it's impossible to make any headway and added to that we're both painfully shy.\n\nWhenever we even attempted to talk to a girl it was always a disaster. Either they laughed at us, ignored us or were mean. It affected every aspect of our lives and our confidence in ourselves and our ability was as low as it could be.\n\nI'm Patrick by the way and I can only speak for myself when I say my body is pretty average for a young Englishman. Since puberty, no one else has ever seen me in anything less than a pair of swimming trunks and I've never seen a real female (or male!) adult naked. My comparisons are all based on the internet and the only area that caused me some concern was the fact that when erect, my penis had a distinct downward curve, just like a banana.\n\nBen, on the other hand, is slightly pudgy and according to his own declaration, less than well-endowed in the penis department. That, and the fact that I was 100% sure I was correct, was the reason I pushed to make our bet more extreme.\n\nWe agreed that the loser would have to enter a rather strange dating show. It involves the participants revealing their naked bodies before one is chosen to go on a date. Ben and I had watched the show many times and were always stunned by the bravery of the contestants. Can you imagine standing in a glass box while a woman makes comments as your nude body is slowly revealed from the bottom up!\n\nAfter losing the bet I downloaded the application form and filled in the questionnaire. A few weeks later I received notice that I'd been selected to take part. Ben couldn't believe I was really going to go through with it, but I was taught never to welch on a bet. I was sweating profusely as I followed the five other guys into the building. We were met by a pretty girl called Caroline who took us to a communal changing room and asked us to strip naked. There were lockers for our belongings as well as towels and a robe.\n\nShe recommended we take a shower and, to avoid any embarrassing erections during filming, suggested releasing any pent-up excitement at the same time! There was nervous laughter amongst the boys with none of us sure if she was serious or not. She gave us a wink and left us to it.\n\nWe stood around nervously for a while until the bolder ones began to undress. I waited a bit and then very slowly followed suit. I'd never been in a situation like this before, at school I'd always managed to get changed in a cubicle and had never been forced to strip around others. By the time I'd removed all my clothes except my undies, three of the others were already totally nude. It was with some relief that I saw their bodies were not much different to mine.\n\nI took a deep breath and pulled down the last of my clothing, revealing my cock and balls to others for the first time. There was no reaction whatsoever! I saw a couple of them take glances at my crotch, just as I'd done to them, but that was it. We placed our clothes in the lockers and grabbed our towels before making our way to the showers. I noticed that I was the only circumcised one in the group, which made me feel more exposed and, not for the first time, I wished I still had my foreskin.\n\nThe shower area was just a big tiled room with 3 shower heads on each wall. I took a free space and enjoyed the feeling of the warm water hitting my body. It felt slightly strange washing myself so publicly but it 1was nowhere near as bad as I had expected.\n\nI suddenly remembered Caroline's words about taking care of things during the shower, but I couldn't imagine doing that with no privacy. Looking around no one else seemed to be taking her advice!\n\nI turned off the tap and got my towel. As I dried myself, I was grateful to Ben for advising some grooming. I kept the small amount of hair on my chest, arms and legs but had taken scissors and a razor to my pubic area, keeping only a small patch of hair above my cock, and removing all else. It felt good and I saw that only two of the others looked untrimmed.\n\nOnce dry, I slipped on my robe and the six of us sat waiting. We made small talk and it was clear that quite a few of them were just as nervous, if not more so than me. It helped me calm down slightly and by the time Caroline returned I was sure I would get through this.\n\nShe led us along some corridors to what she called the \"green room\" and told us to wait before once again disappearing. A few minutes later, there was a knock on the door and another attractive woman entered. She was in her late forties and the presenter of the show. She smiled and introduced herself as Anne to each of us before telling us all to relax and have fun.\n\nAfter introductions were made, she asked if we had any questions. We looked at each other but no one responded. Anne laughed and said, \"No one ever asks the thing that's on all your minds!\"\n\nAfter a brief pause, she continued, \"OK, well I'm going to answer the unasked question anyway. If any of you find yourselves getting aroused don't worry about it. It's perfectly normal and we'll just edit it out if it's too obvious. If you just grow and lift a bit, it's not an issue but if your glans ends up pointing towards the ceiling it's a no go!\"\n\nShe laughed and the rest of us joined in nervously. In my mind, I pictured my cock erected with its tip pointing at the floor!\n\n\"So, if you have a proper erection, we'll take a break and you can go and take care of it before we continue. It happens far more often than you might imagine so really don't worry about it.\"\n\nWith a cheeky grin, she added, \"in fact, in my experience the guy that has some control problems when he sees the girl is most often the one, she ends up picking!\"\n\nThere was more nervous laughter and she then said, \"OK, well I presume you've all seen the show before?\"\n\nEach one of us nodded and mumbled our agreement.\n\n\"Good, that saves me having to explain how things work. So, if there are no other questions, we'll start in about 10 minutes.\"\n\nWith that and a brief wave, she left.\n\nAs we waited, Paul, one of the other participants struck up a conversation with me.\n\n\"So, what kind of bird are you hoping for?\", he asked.\n\n\"Um, I don't know, I'm kind of only here because I lost a bet.\"\n\n\"Bloody hell mate!\", he laughed then continued. \"I'm into big tits and arse, so if she's anything like that I'm going to be in trouble.\"\n\nI chuckled, \"OK, well I'm more of a petite breast, big nipple and tight bottom guy. Maybe someone Asian.\"\n\nHe whistled and grinned at my rather detailed list. \"Got anyone specific in mind?\"\n\nI blushed, \"Um, no not really.\"\n\nMy answer was not totally truthful, as I'd always had a penchant for Asian girls and one, in particular, gave me many nights of self-pleasure during my school days. Her name was Jenny and we shared a few classes. She never took any notice of me, but I was secretly in love with her.\n\nMy mind returned to the present as Caroline entered and told us all to leave our robes and follow her into the studio.\n\nThis was it! I gulped as we once again disrobed, this time in full view of Caroline. She didn't hold back and gave each of us a thorough inspection. Despite my nervousness, I felt my cock swell slightly as she gazed at it for what seemed like a long time.\n\nI started to panic and wondered what would happen if I had an erection before the show even started! I began to recite capital cities in my mind and was grateful that the distraction seemed to help. Things got a bit better as we walked into the studio even though there were now many more people around. I counted at least 20, all busy with something but still finding the time to glance at us.\n\nSix glass boxes in various colours were arranged in a semicircle. Caroline grabbed a clipboard and then said \"OK guys, I'm going to read out a name and colour. You then enter the matching cubicle and face forwards.\n\nShe began to go through the names, and I was assigned to the blue box, which also happens to be my favourite colour, not that that matters in any way!\n\nIt felt very strange to be enclosed in a coloured glass box and all though it was impossible to see in or out I felt somehow more exposed than before.\n\nA speaker in the ceiling crackled for a moment and then I could hear a soundcheck before a male voice said \"We're going to calibrate the boxes, boys. Just stand still.\n\nI heard some mechanical sounds, but nothing happened for a couple of minutes. Presumably, they were doing each box individually. Suddenly, the coloured glass before me began to lift. It stopped just below my belly button and there was a beep before it continued up to my shoulders followed by another beep. I could see underneath it and numerous pairs of legs were visible before another beep and the glass began to lower again.\n\nA short time later the voice returned, \"OK, all done boys. We're ready to go in three, two, one...\"\n\nWith that, the lights in the cubicle extinguished and Anne began to introduce the show and the female contestant. Her name was Jenny and I smiled at the coincidence. According to Anne, Jenny was 20 years old and worked at a coffee shop in London. She'd had bad experiences with men before and was looking for someone for a serious relationship who would overlook her body issues.\n\nFor the first time, I actually thought about winning! It would mean I'd finally have the chance to go out with a girl on a proper date and as long as she wasn't a total zero, I'd be happy. It struck me then that this show might help me find a girlfriend! If she picked me after seeing me in all my glory, there would be no unpleasant or embarrassing revelations later.\n\nI shook my head and concentrated on listening.\n\n\"Jenny, tell us a bit about yourself.\"\n\n\"Well, there's not much to say, Anne. I've always had body issues and have been shy and unsure of myself. At school most of the boys ignored me and when one did approach me I always thought they were just teasing or playing a prank so I ignored them or was quite rude. All I want is a nice guy that loves me for who I am and maybe letting them see all of me will help avoid them being disappointed later on.\"\n\nIt was quite a sad story to which I could very well relate. Pathetic as it may sound I was already falling for her and was now desperate to win.\n\nAnne said, \"Well Jenny, looking at you I just can't understand it, let's hope today is the start of a new chapter in your life! Are you ready to play?\"\n\n\"Um, I suppose so.\" Came the rather timid sounding reply.\n\n\"OK, let's show the bottom half of the bodies please\", Anne announced.\n\nAlmost instantly a whirring sound began and the glass panel began to lift.\n\nI heard a gasp followed by, \"Oh my gosh!\" and some extremely cute giggles.\n\nI glanced down and was pleased to see my cock behaving itself. It was maybe even a touch smaller than usual due to my nerves and the cool air that was flowing into the box.\n\n\"So, what do you think Jenny?\" Anne asked.\n\n\"I can't believe it! I've never seen so many willies before!\"\n\nAnne chuckled, \"Any particular one you'd like to start with?\"\n\nThere was a pause and I pictured Jenny looking into each box. What would she think of me?\n\n\"Um, I think yellow.\"\n\nThe yellow box was to my right and I could hear Anne and Jenny approach. I could only see the very bottom part of their legs and their feet. Anne was wearing black pants and high heels, but whatever Jenny had on was shorter and I could see slim ankles and quite small feet encased in a pair of trainers.\n\nAt first, I was slightly disappointed that she hadn't chosen blue, but this quickly changed when I heard her say, \"He's very hairy down there. I'm not so keen on that!\"\n\nAnne chuckled, \"So you don't like hairy men?\"\n\n\"Um, I quite like some hair but not too much and not down there.\"\n\nIn my mind, I recalled the images from earlier and smiled as I thought two of my competitors would be eliminated.\n\n\"Who would you like to look at next?\"\n\n\"Green, I think.\"\n\nThey moved further away and from this perspective, I could see slightly more. Jenny's legs were slim and perfect, and I could imagine Paul being disappointed. My pulse increased as I tried to picture the girl attached to those legs and I felt my penis swell. Oh god, don't let this happen now!\n\nI began to recite the alphabet backwards in another attempt to quell my oncoming erection. It seemed to be working as I heard Ann asking Jenny what she thought about the guy they were inspecting.\n\n\"He looks quite big and athletic\", she replied.\n\n\"Is that a good thing?\"\n\n\"It's OK. I'm more into slim guys that prefer a good book or movie than going to the gym!\"\n\nThey both laughed as Anne asked the \"green\" contestant, \"Do you work out a lot?\"\n\nAs we are not allowed to speak, I can only guess he gave a thumbs-up or some other gesture to indicate he did. I thought back to the contestant assigned to the green box and recalled thinking that he was probably the best built of the lot of us. If Jenny was not into muscles it was another plus point for me!\n\n\"Well if his muscles don't appeal, what do you think of his other equipment.\"\n\nThere was quite a long pause and I imagined Jenny leaning closer and taking a good look before she answered.\n\n\"It's OK. He's fully shaved and that's not bad but it does make him look a bit like a little boy.\"\n\n\"Do you prefer a bit of hair down there?\"\n\n\"Yes, not much but just something to show he's past puberty.\"\n\n\"How about the size?\"\n\nIt's fine but maybe a bit on the large side. I'm such a small girl and I'm not sure I could handle something like that!\"\n\n\"Well, we don't know if he's a shower or a grower! What are you \"green\", give us a thumbs up if you get much bigger when you're erect?\"\n\nI heard Jenny gasp and Anne chuckled as she said \"Well, there's your answer Jenny! Who's next?\"\n\n\"Purple.\"\n\nI watched them move to the next box and again there was silence for a while.\n\n\"So? Does he meet with your approval?\" Anne prompted.\n\n\"His testicles seem a bit small.\"\n\nAnne laughed, \"You like a big set of balls then?\"\n\n\"Oh, I don't know! His just seem smaller than the others and kind of tight looking.\"\n\n\"That sometimes happens in the cold or shortly before ejaculation. Are your balls usually looser, purple?\"\n\nAgain, I couldn't see what his response was and nervously waited for Jenny to pick her next victim.\n\n\"Let's go-to red.\"\n\nAfter a pause, \"I don't have much experience, but his penis looks a bit funny at the front.\"\n\n\"You mean his foreskin?\", Anne asked.\n\n\"Yes.\"\n\n\"Why do you think it's a bit funny?\"\n\n\"Well, it's kind of long and wrinkly at the tip, none of the others is like that.\"\n\nI pictured them looking around at the cocks on display and prayed Jenny wasn't into foreskins at all.\n\n\"Well we have a wide variety on show here but you're right, red's is probably the longest. Is that something you like?\"\n\nI held my breath as I waited for her reply.\n\n\"Um, not really. I prefer something a bit neater\".\n\nThis was sounding positive but did having no foreskin qualify as neater?\n\n\"Ah, so you like a tight foreskin, something like orange?\"\n\nThey walked past my box on the way to orange.\n\n\"Yes, that's better, I can see the tip peeking out. It's a pity he's rather hairy.\"\n\n\"Well, that leaves blue. Did you save the best for last?\"\n\nMy heart was beating furiously, and I felt my cock swell more than before but Jenny just giggled and didn't confirm or deny the question.\n\nI could see them standing close to my cubicle now and knew they were inspecting my most private parts. My cock kept growing and Anne said, \"Well someone is happy to meet you!\"\n\nI closed my eyes and took a deep breath, trying to do sums in my head.\n\nJenny said, \"I like the look of him. His feet and toes are nice, he has a bit of hair on his legs but not too much and everything is neat and tidy.\"\n\nThe dam broke and I felt myself lose control. My cock expanded and then began to twitch as it rose into the air.\n\nThere was a gasp that I guessed came from Jenny and a chuckle from Anne.\n\n\"Blue seems to like your compliments.\", Anne said and then asked, \"Are you going to be able to get things under control there, blue?\"\n\nAs I wasn't supposed to speak all I could do was rotate my hand back and forth to indicate I wasn't sure.\n\n\"OK, well just relax and don't worry. Like I told you all this is a normal reaction and it happens all the time.\"\n\nRelax -- how the hell was I supposed to do that! I was sure my face was as red as a tomato and I tried everything in my repertoire, but my cock refused to go down.\n\nAnne made things worse by continuing her conversation with Jenny as if nothing unusual was going on.\n\n\"So, what do you think about blue now?\"\n\n\"Um, I um...\" Jenny stuttered.\n\n\"Don't look so shocked dear, I'm sure this isn't the first erect penis you've seen!\"\n\nJenny didn't answer so Anne continued, \"Don't look away, this is an opportunity to see exactly what you're getting.\"\n\nI saw Anne step closer, \"He's got quite a bend, is that something you like?\"\n\n\"I, um, I...\" Jenny again spluttered.\n\n\"You're so sweet, dear. I quite enjoy a curve myself; it seems to hit more of my magic spots than a straight cock.\"\n\nJenny gasped and I was also quite shocked at how explicit Anne was being. Hearing her talk about my erection in this way did nothing to ease its excitement and caused it to throb and jerk noticeably.\n\n\"Oh, my,\" Anne chuckled, \"he's quite the lively one!\"\n\nAfter a brief pause Anne said \"Ok, we'll have to take a break. Since blue is the last box, we can't finish up the first round.\"\n\nMy embarrassment increased and I was ashamed that I was disrupting the recording of the show and causing a delay.\n\n\"Jenny, follow me while Caroline takes care of the boys. Once everything's ready again we'll just continue from where we left off.\"\n\nI saw both pairs of feet disappear and then a moment later Caroline announced we could leave our boxes. As I stepped through the door, Caroline was waiting for me with a smirk on her face.\n\n\"I'm sorry\", I muttered apologetically.\n\n\"Yeah, well these things happen. Follow me.\"\n\nI looked around and saw the other guys looking at me with amusement. Most of the crew were also staring but with less mirth.\n\nCaroline led the way and I walked behind her, acutely aware of my bouncing cock. You would think the whole situation would have caused a rapid deflation, but I had no such luck. She let me to a toilet and said, \"Take care of it as quick as you can then come back to the set.\"\n\nI nodded and stepped inside. Once the door was closed, I stared at my reflection in the mirror. What an idiot I was. I was pretty sure Jenny would have been put off by my immature display and lack of control. She must think I'm a total pervert that gets a stiffy at the slightest glance at a female.\n\nI took hold of my cock and began the familiar stroking that I had performed a million times before. Closing my eyes I pictured her feet and legs and tried to imagine what the rest of her looked like. Her skin was pale so she wasn't into tanning and from her comments I guessed she would have a slim figure and a small bust.",
        "Just as I was getting close to release there was a knock on the door, and I heard Caroline asking \"Are you going to be done soon? Time is money you know.\"\n\nShit! Hearing her complain just bought back the humiliating memories and my approaching orgasm instantly dissipated. I'd missed out on the pleasure but on the plus side, my cock was rapidly shrinking.\n\n\"Um, yeah, I'll be done in a sec.\"\n\nOnce things were almost back to normal, I opened the door and stepped outside. Caroline did a quick inspection and with another smirk led the way back to the set.\n\nThe other guys were milling about and when Paul caught sight of me, he cheered and started clapping. My face once again turned bright red as the rest of the gang joined in.\n\n\"OK, OK, let's all calm down and get back to work!\" Caroline ordered.\n\nWe returned to our boxes and soon after, Anne and Jenny resumed their position before me.\n\nAnne said, \"OK, we were talking about what you liked about blue.\"\n\n\"Yes, I like the look of him.\"\n\n\"How do you feel about a circumcised penis? His is the only one here today.\"\n\n\"I've never really thought about it. Now that I see one for real, it looks better than I expected!\"\n\nThis was music to my ears but almost instantly my cock again began to grow. Shit!!\n\nI heard Jenny giggle sweetly again and then Anne said, \"Judging by the big smile on your face you like what you're seeing!\"\n\n\"It just looks so lovely when it's getting bigger and jumping around like that!\"\n\n\"Well I know you'd like to stand here all day and look at it, but we have to move on.\"\n\nThey walked back to the centre of the set and Anne said, \"Jenny, it's decision time, which colour would you like to eliminate?\"\n\nAfter a short pause, Jenny said, \"I'm sorry but I think it'll have to be green.\"\n\n\"Why green?\"\n\n\"Um, he's just too muscular and big for me.\"\n\n\"OK, well, this is James. He's twenty-two, a student from Surrey.\"\n\nI could see James's feet as he walked out of his box, towards Jenny and Anne. He stopped briefly and Anne asked, \"Sorry James but it's a no for today. Is Jenny the type of girl you find attractive?\"\n\nJames cleared his throat before answering, \"Not so much I'm afraid, I'm more into bigger, athletic girls.\"\n\n\"Well, it's a good thing she picked you then!\"\n\nThere was some brief laughter and then goodbyes were said, and James left the set.\n\n\"Jenny, you've got five boys remaining, now you're going to see the middle of their bodies!\"\n\nThe glass panel again rose, this time stopping just above my shoulders. I could see a bit more of Anne and Jenny and I liked what I saw. Jenny was wearing a short skirt that showed off those beautiful legs and the erection I was still sporting intensified.\n\n\"It looks like Blue is still in a spot of bother.\"\n\nJenny giggled and Anne said, \"Let's take a quick break and see if we can get things settled. Jenny, go with Caroline while I have a quick chat to blue.\"\n\nShe walked over to my box and said, \"Do you think you're going to be able to get your penis to relax?\"\n\nI wasn't sure if I could speak so I just did quick thumbs down.\n\n\"It's OK to speak, Jenny's off the set.\"\n\n\"Oh, um, I'm so sorry but I just can't help it.\"\n\n\"This puts us in a bit of a dilemma. We can't hold up the entire show each time and there's no way to edit around your problem.\"\n\nCaroline returned to join Anne and said, \"This is ridiculous. \"\n\n\"Now, now, Caroline. Don't be so hard on blue!\"\n\nThere was laughter all-around at her choice of words.\n\n\"Well if he doesn't control himself the entire show is screwed.\"\n\nAnne was silent for a moment and then said, \"Let's talk to Ted.\"\n\nThe two of them walked away and I heard the guys in the other boxes complaining about me saying, \"thanks' a lot blue -- you're screwing up everything.\"\n\nI didn't know what to say so I just remained silent. After what seemed like ages Anne returned and said \"OK, we've talked to Ted our production manager and he agrees that we can continue filming despite blue's problem. According to our contract, we can continue to record if the glans of the penis is not pointing upwards! As blue has a downward curve this is not the case.\"\n\nI couldn't believe what I was hearing. Were they really going to show me with a boner on national TV?\n\n\"Blue, of course, it's up to you. If you don't agree we'll have to call it a day.\"\n\nTalk about pressure! I wanted nothing more than to leave and forget this day ever happened but at the same time I just couldn't miss the chance of winning and going on a date with Jenny. I gulped and made an instant decision that I hoped I would not regret.\n\n\"Um, it's OK for me.\"\n\n\"Well done lad, I'm glad you're taking the hard route!\"\n\nThere was much laughter again and even I had to smile at her choice of words.\n\n\"OK, get Jenny back and let's roll.\"\n\nJenny was quickly returned to the set and Anne explained how things would proceed.\n\n\"We've checked the legal side of things and blue has agreed to continue despite his erection so there's nothing to stop us continuing.\"\n\n\"Wow, OK!\" Jenny responded.\n\nThings went ahead and Jenny was again asked which box she'd like to study in detail.\n\n\"Um, blue!\"\n\n\"Good choice\", responded Anne, \"let's get the elephant in the room out of the way first!\"\n\nThey approached my box and I was treated to a close-up view of Jenny's skirt and legs. She looked just as stunning closeup and my cock jerked in appreciation.\n\n\"He seems to like the little he can see of you Jenny, what do you think?\"\n\n\"If I'm the cause, it's a compliment! I've never had a man respond to me quite like this.\"\n\nAnne laughed, \"Well what do you think of the rest of blue?\"\n\n\"He looks very nice. He has a slim build and a bit of hair on his chest that looks cute.\"\n\nMy cock responded by jumping up and down and a small amount of precum seeped from its tip.\n\n\"Oh, look at that, he's leaking!\" Jenny exclaimed.\n\n\"I'm not surprised by that, but I am surprised by his stamina. He's been erect for so long without any manual stimulation! So, who would you like to look at next?\"\n\n\"Um, orange please.\"\n\nThey moved to the orange box and Anne asked, \"So, what do you think?\"\n\n\"He's well-built but I'm not sure about the hairless chest. He's so hairy everywhere else it looks a bit odd.\"\n\nThey moved on to yellow and then red. I caught a few glimpses of Jenny's thighs and surprisingly shapely bottom as I waited nervously for her next decision.\n\nTo my great relief, she selected \"orange\" and another rival was sent packing. This left just four of us.\n\n\"It's time for you to see everything, how are you feeling Jenny?\"\n\n\"I'm extremely nervous. I think it's going to be more difficult when I can see their faces and they can see me!\"\n\n\"Well, that's how the game works, remember the final two will see you naked as well!\"\n\nMy penis jumped as I prayed I would make it to the final round.\n\nJenny giggled nervously as Anne said, \"Reveal the boys!\"\n\nThe glass panel began its final journey upwards and I could not resist dipping my head to get my first view of Jenny.\n\nShe was wearing a Disney themed T-shirt and I could see the small swell of her bra encased breasts. To my delight, I could even discern two prominent bumps where her erect nipples protruded. As I raised my head our eyes met, and my jaw dropped.\n\nIt was Jenny Chen, my school crush! Our eyes locked and hers widened in response. Did she even remember me? It had been many years and I'd changed quite a bit. I took in her exotic eyes, long black hair tied up in a bun and the beautiful features of her face. She was even more beautiful than I remembered.\n\n\"Everything OK Jenny?\" Anne asked.\n\nJenny shook her head, \"Um, yes, fine, um...\"\n\nAnne chuckled, \"It's always a surprise when you see the faces to match the bodies.\"\n\nJenny just nodded as we still stared at each other.\n\n\"You might want to look at the others as well dear!\"\n\nJenny reluctantly (in my opinion) turned to look at the other contestants and I took the opportunity to study her in more detail. She was perfectly proportioned, and I just hoped that us knowing each other would not be to my detriment.\n\nAs they returned to the centre of the set Jenny took a last look at each of us and then made her choice. My heart resumed beating once I heard the word \"yellow\".\n\nI watched as another of my opponents was sent packing and felt a foolish flash of jealousy as he hugged Jenny before leaving.\n\nThis left me, Paul and another guy.\n\n\"OK, we're down to the final three! Next, you're going to have the chance to ask a question and hear their voices as they answer. Are you ready?\"\n\nJenny gulped and gave me a quick look before she said, \"I think so. This is so overwhelming!\"\n\n\"Take a deep breath and then choose a colour.\"\n\nJenny did as she was told and said \"Red\".\n\nThey walked to the red box which contained Paul and Anne said, \"Red, tell us which part of your body you dislike the most.\"\n\nPaul responded with \"Um, I hate my feet.\"\n\nJenny and Anne instantly took a closer look and Anne asked, \"What don't you like about them?\"\n\n\"I just think my toes are too big in proportion to my feet.\"\n\nHe had a northern accent and quite a deep voice.\n\nAnne turned to Jenny as she asked, \"So, what do you think?\"\n\nJenny blushed and I found she looked fantastic as her pale skin changed to pink.\n\nMy shoulders slumped slightly as she said, \"He sounds nice. I quite like a deep voice.\"\n\nPaul grinned and wiggled his eyebrows. I saw Jenny frown slightly and hoped she was put off by his reaction.\n\n\"Let's move on, who next?\"\n\n\"Blue\".\n\nI gulped and cleared my throat as they approached.\n\n\"Well, we know blue's opinion of you hasn't changed since he saw you!\" Anne said as they stared at my still rigid penis.\n\nJenny giggled and covered her mouth with her hand as she turned a deeper shade of red.\n\n\"So blue, what do you dislike the most about your body?\"\n\nI cleared my throat and resisted the urge to speak in a deeper voice as I said, \"Um, I, um, usually I don't like my arms but today I have an issue with something else!\"\n\nThere was laughter all around and Jenny once again covered her mouth as she joined in.\n\n\"Well, we all think your penis is the star of the show but tell us what you don't like about your arms?\"\n\n\"Well it's my wrists mainly, they are just too thin, and I can't wear any large watches.\"\n\nJenny and Anne stared at my hands and Anne said, \"Do you agree with that and what do you think of blue's voice?\"\n\nJenny stared into my eyes as she said, \"I think he sounds very nice. His voice matches his face and body and I know what he means about having thin wrists!\"\n\nShe extended her arms and I studied her delicate hands and fingers.\n\nI gave her my best smile and hoped I didn't come across creepy.\n\n\"Well that leaves purple\", Anne said as they walked towards his box.\n\nPurple spoke with a surprisingly high-pitched voice and Jenny did not seem very impressed as she said he sounded OK.\n\nIt was decision time -- I forced myself to stand still as Jenny make her choice. Whoever left now would not get to see her naked and I would be devastated if it were me.\n\n\"You've got to make your choice now Jenny and the final two boys will get to see you as nature intended.\"\n\nJenny slowly scanned each of us and I willed her to select one of the others.\n\n\"Purple!\"\n\nI hadn't realised I was holding my breath and gasped loudly. Purple exited his box and bade his farewell to Anne and Jenny.\n\n\"Congratulations! Please step out of your boxes and join us.\n\nWe did as we were told, and I saw Jenny glance at my cock as it bounced up and down while I walked towards them.\n\nHer face was still flushed as Anne introduced us.\n\n\"This is Patrick from London; he's studying economics and is 20 years old.\"\n\nI thought I saw a flash of recognition in Jenny's eyes, but I could have been mistaken as she turned to face Paul as he was introduced.\n\n\"Well, the time has come Jenny. Would you please go and undress and then join us to pick Paul or Patrick as your date.\"\n\nJenny nodded nervously and then turned and left the set. I couldn't help but watch the short skirt bounce slightly on her curvaceous bottom.\n\n\"So boys, well done! Are you looking forwards to seeing Jenny naked?\"\n\nWe both nodded our assent and Anne said, \"I want you both to size up the competition, Paul, what do you envy?\"\n\nPaul took a look at me and said: \"Well apart from the obvious I like his hair!\"\n\nAnne laughed and turned to me, \"What about you Patrick?\"\n\nI glanced at Paul and said, \"I like his wrists!\"\n\nAnne and Paul laughed.\n\n\"Last time you saw Jenny she had her clothes on, are you looking forward to seeing her naked?\"\n\nBoth of us muttered our approval and Anne turned slightly and loudly said, \"Come on then Jenny, out you come!\"\n\nThe lights turned towards a gap between the boxes and we looked over our shoulders and waited for Jenny to appear.\n\nA moment later it happened. She slowly walked towards us with her head held high.\n\nI muttered an oath under my breath as I took in her naked form. I'd never seen anything like it! If I'd had the opportunity to create my perfect woman, I wouldn't have been able to make any improvements!\n\nThe flawless skin of her face was still slightly flushed, and the pink shade reached down to her breasts. They were slightly bigger than half an orange and capped by the most perfect nipples I had ever seen. Slightly brown, they rose majestically from areolas of the same shade and were at least the size of my thumb tips.\n\nI tore my eyes away from these slightly bouncing mounds and dropped them to her narrow waist. She had a delightful belly button and her shapely hips perfectly framed her pubic mound. A narrow landing strip of black hair led to two prominent outer lips in the same shade as her nipples.\n\nMy cock was twitching incessantly, a fact not missed by either Anne or Jenny as she came to a stop in front of us.\n\n\"So what do you think boys?\"\n\nPaul was first to reply with a rather generic \"Nice\". I knew Jenny wasn't his type and I hope she could tell from his reaction.\n\nI cleared my throat and knew what I said next could be crucial. \"She looks incredible. By far the most beautiful woman I've ever seen.\"\n\nAnne smiled and said, \"How are you feeling Jenny?\"\n\n\"OK, I guess, better now that it's done.\"\n\n\"Well, you certainly have nothing to be ashamed of. Can you give the boys a twirl?\"\n\nJenny nodded and proceeded to slowly rotate on the spot. The view from behind was no less stunning I was in danger of losing control. I doubted they would be able to include any footage of a spurting cock and Jenny would probably find me pathetic, so I did all in my power to resist.\n\nAfter she completed her pirouette it was the moment of truth.\n\n\"So Jenny, you now need to pick either Paul or Patrick, who is it going to be?\"\n\nJenny took her time looking back and forth between the two of us.\n\n\"Um, this is difficult.\"\n\nMy heart sank, as I waited.\n\n\"You have to choose dear!\"\n\n\"I know, I know!\"\n\nAfter another brief pause, she said: \"I pick Patrick!\".\n\nI couldn't believe it! Despite the extreme embarrassment and the thought of me and my erection being on national TV for all to see, this was easily the best day of my life.\n\nI must have looked like a complete idiot with a huge grin on my face as Paul turned towards me and shook my hand. \"Well done mate!\"\n\nHe then turned to Jenny and gave her an awkward hug saying, \"You made the right choice!\"\n\nAnne thanked him for taking part and we watched as he walked away.\n\n\"Congratulations Patrick, you've won\", she said and then turned to Jenny \"You've made your choice, now please move next to Patrick.\"\n\nOur eyes met as Jenny complied and I felt her arm brush against mine as she stood next to me.\n\n\"What was it about Patrick that made you choose him?\", Anne said with a cheeky smile.\n\nI watched her as she responded. She glanced at my cock and then back at Anne before answering. \"Um, he seems like a genuinely nice guy and I think he finds me attractive.\"\n\nAnny laughed, \"I would agree with that assessment! Anyway, you two are off on a date where you'll be wearing clothes, I hope you have a great time!\"\n\nShe gestured for us to leave.\n\nJenny took my hand Jenny and I felt a spark as our skin touched. Her tiny hand felt so delicate as I held it tightly and we walked off towards Caroline. We could hear Anne wrapping things up with a comment about what a lovely couple we made.\n\nWhen we reached Caroline, she was all business. \"We have to do the final 360-degree shots of you on a pedestal and then I'll let you know about the venue and time of your date.\n\nI was still in a state of shock as we followed her into another room. Paul was just wrapping up his shoot and gave us a wave as he left.\n\n\"Patrick, get up on the pedestal and give us a nice pose.\"\n\nI gingerly stepped up and tried to look cool, probably failing miserably as my still extended cock bobbed up and down. The lights in the room dimmed with just a spotlight on me as a camera rotated around me. Once it was done, Jenny took my place and I watched as she did a far better job than I had.\n\nWithin minutes it was done, and Caroline told us to get changed and meet up with her when we were ready.\n\nIt was strange leaving Jenny without having a chance to talk but the changing rooms for males and females were in opposite directions. I watched her longingly as she turned down the corridor and was relieved to see her glance back before disappearing into the changing rooms.\n\nPaul was getting dressed as I walked in and laughed as he saw my tumescent state. \"Bloody hell mate, you better take care of that before it falls off!\"\n\nAs I walked towards the showers he added, \"See you around!\"\n\nI was alone in the shower and enjoyed the feeling of the warm water as it poured over me. Was this a dream or had it actually happened? I grabbed the shower gel and applied a generous quantity on my cock, stroking it slowly as I recalled Jenny's body. Would she enjoy our date and want to take things further?\n\nI'd seen enough episodes of this show to know that the majority of the couples didn't stay together and I hoped we would be the exception. Doubt began to creep in, but I suppressed it and enjoyed the sensations from my cock. It didn't take long before I was spraying an unusually large quantity of ejaculate against the tiles. I washed everything off and was glad to feel a lessening of the pressure in my crotch as I dried off and got dressed.\n\nWhen I left the changing area, Caroline was waiting with Jenny. \"Here's a list of possible date locations, you two can choose which you prefer.\"\n\nJenny took the sheet of paper and moved next to me. I inhaled her fresh scent and felt a tingle in my pants as I recalled what she looked like underneath her clothing.\n\n\"Where would you like to go Patrick?\" she asked.\n\nI didn't care, all that was important was that I would be with her, but I still took a look at the list. There were four choices in total, two caf\u00e9s and two pubs, all of them in London.\n\n\"I don't drink but I don't mind a pub, you can pick whatever is most practical for you.\"\n\n\"I don't drink either so maybe a caf\u00e9 would be more pleasant.\"\n\nI nodded in agreement and Jenny, looked back at the list. She pointed to a caf\u00e9 near Waterloo station which was great as that's where my train arrived.\n\n\"Perfect for me.\"\n\nJenny handed the list back to Caroline pointing out our selection.\n\n\"Great, well we'll meet you there at around 7 pm. I suggest you separate now and get to know each other later. I'm guessing you both followed the instructions and brought along some date clothes?\"\n\nJenny nodded and I followed suit but in fact, I had never in a million years thought I was going to win, so I had no change of clothes.\n\nI was disappointed by having to separate from Jenny, but it would allow me to go out and buy some clothes before we met up at the caf\u00e9.",
        "As we parted I wasn't sure what to do, shaking hands seemed weird as we'd already seen each other nude and held hands when we let the set. Instead, I was bold and leant forwards to give her a European style kiss on each cheek. Thankfully, she reciprocated in kind and it wasn't awkward at all. Her skin felt so soft under my lips and I again inhaled her scent.\n\n\"Can't wait to see you again!\", I said and quickly turned to leave, hoping she hadn't noticed the growing bulge in my pants. Before turning a corner, I glanced back and saw her watching me with what I interpreted as a wistful expression.\n\nI caught a tube to Oxford street and began to think about what I could buy to wear. Based on Jenny's clothing, I wouldn't go too formal. As I stepped into the first shop that looked like they might have things within my budget my mobile vibrated.\n\nIt was from Ben. I answered his call and his first words were, \"HOW WAS IT?\"\n\nI smiled as I responded, \"Um, OK I guess. Pretty embarrassing though.\"\n\n\"And, was she hot?\"\n\n\"Hell yes!\", I contemplated telling him it was Jenny from School but decided to save that bit of information.\n\n\"Tell me more! I don't suppose you saw her naked did you?\"\n\n\"I did!\"\n\n\"You're shitting me? Did you get into the final two?\"\n\n\"Yup, in fact, I'm just buying clothes for our date tonight!\"\n\n\"Bloody hell man, do you mean to tell me you won?\"\n\n\"Yes!\"\n\n\"I don't believe it! What kind of losers were you up against?\"\n\n\"Hey, I'll have you know they were all pretty normal.\"\n\n\"But how could you win if they were normal?\"\n\nI laughed but wasn't about to tell him that I was erect for most of the show, \"You'll be able to see when they air the show.\"\n\n\"Fuck -- now I wish I'd lost the bloody bet! So, what was seeing a naked woman in the flesh like?\"\n\n\"Unbelievable!\"\n\n\"Tell me about her!\"\n\n\"Well, you know the kind of girls I find attractive and if I could have created the perfect match it would be her!\"\n\n\"So, small and Asian I'm guessing?\"\n\n\"Right again!\"\n\n\"You think things will go any further?\"\n\n\"I'm praying they will.\"\n\n\"Well don't get your hopes up too much, you know what it's like on that show.\"\n\n\"I know but this time it might be different. Anyway, I've got to buy something to wear for the date, any recommendations?\"\n\nBen made a few useless suggestions and we ended the call with a promise from me to let him know how the date went.\n\nAs I was browsing a salesgirl approached and asked if I needed any help. In the past, I would have said I was just looking but this time I nodded.\n\n\"Actually yes. I've got an unexpected date tonight and need something better to wear. Maybe you can give me some advice.\"\n\nShe smiled and stepped back to take a look at me. \"What look are you going for, casual or formal?\"\n\n\"Um, casual I think?\"\n\n\"OK, well follow me.\"\n\nAs I did so I noticed she was rather attractive. Her bottom was nicely showcased in a pair of leggings and wiggled pleasingly as she walked ahead of me selecting a few pairs of trousers and a couple of shirts as she went.\n\n\"That'll do for a first try,\" she said as she led me to the changing rooms.\n\n\"Um, thanks!\"\n\nI took the proffered clothes and stepped into the cubicle.\n\nThey were not the sort of things I would usually wear but I thought I'd give them a try. I slipped on a beige pair of pants and a white shirt. I thought I looked quite smart as I checked out my reflection in the mirror.\n\n\"So, anything good?\" she asked.\n\nI hadn't expected her to wait for me but was glad for a second opinion.\n\nPulling back the curtain I presented myself.\n\n\"The sizes are OK and you look OK. What does your date like?\"\n\nI blushed slightly as I had no idea about Jenny's taste in clothes. \"Um, I don't know. I only just met her today and didn't think we'd be going out together!\"\n\nThe girl laughed, \"that's so romantic, you buying new clothes and all.\"\n\n\"I suppose so, but I didn't have a choice.\"\n\nShe seemed confused so I elaborated a bit, \"It was a TV dating show and I ended up being selected!\"\n\n\"OMG! Was it 'First dates' or \"Take me out?\" she said excitedly.\n\nMy blush got deeper, and I now regretted having mentioned it. \"Um, no not really. It's another one.\"\n\nShe looked at me closely and thought for a moment before saying, \"I can only think of one other show that I watch... but...\"\n\nI gulped, which she noticed. \"What were you wearing during the show and why don't you just wear the same thing?\"\n\nI was pretty sure she knew which show I was on and although I was embarrassed, I decided to tell her. In0 a few weeks thousands of people would see me naked anyway.\n\nI smiled and said, \"I think I might get arrested if I did that!\"\n\nHer jaw dropped in surprise before she exclaimed, \"I knew it! OMG, that's so cool!\"\n\nShe stepped back and took another look at me and I was sure she was imagining what I looked like naked. \"Well I can see why she picked you, most of the guys on that show are kind of mangy!\"\n\n\"Well, thanks.\"\n\n\"No really, I think it's so brave to do that. I don't think I could bear the thought of everyone seeing me naked on the telly.\"\n\nI decided to return the compliment, \"from what I can see you have nothing to be ashamed of!\"\n\nShe smiled and it was her turn to blush. \"Thanks, ah, are you really interested in this girl?\"\n\n\"Oh yeah!\" I said.\n\n\"Well, what was she wearing?\"\n\nI described Jenny's attire in detail.\n\n\"Golly, you really must like what you saw! From what you're saying I think you should go a bit bolder with your shirt. Maybe something matching the colours she was wearing.\"\n\nIt sounded like a sensible suggestion. \"Yeah, that makes sense.\"\n\n\"Wait here, I'll grab a few things.\"\n\nWhen the girl rushed off, I thought about our conversation and realised that I'd never spoken as much or as long with any female outside of my family! Somehow, being on the show had given me the confidence to interact normally with members of the opposite sex!\n\nA few minutes later she returned and handed me two shirts. One a light shade of pink and the other a darker red. \"Try these.\"\n\nI took the shirts and quickly slipped into the red one first.\n\n\"What do you think?\"\n\n\"Better, but maybe the pink would be best.\"\n\nI would never have selected a pink shirt myself but after putting it on I was surprised to see how good it looked on me.\n\n\"YES! That's the one\", she said, clapping her hands in excitement as I stepped out.\n\n\"Yeah, I thought it looked alright.\"\n\n\"Better than alright, you look very handsome and suave.\"\n\n\"Thanks! I'll just keep them on if that's OK, my date is in about an hour.\"\n\n\"OK, let me just get the tags off.\"\n\nShe reached into her pocket and extracted small scissors to cut off the price labels. I collected my old clothes from the cubicle and followed her to the till.\n\n\"That'll be 73 pounds 50.\"\n\nI paid and she gave me a paper bag. As I turned to leave, she said, \"Hang on, what's your name?\"\n\n\"Um, Patrick.\"\n\n\"And your date?\"\n\n\"Jenny\".\n\n\"Ok, I'll be sure to be watching for you. Buy her some flowers or something and good luck with your date!\"\n\n\"Thanks a lot!\"\n\nI left the store with a spring in my step feeling more confident in myself than ever before. If things don't work out with Jenny, maybe I would return to this store and ask her out!\n\nI came across a small flower shop as I wandered the streets, willing time to pass faster. They had red roses and I selected one, which was then wrapped nicely. Looking at my mobile I saw I had about 30 minutes left so I started to follow the directions given to me by my mapping app. I reached the caf\u00e9 about 5 minutes early and was delighted to see Jenny waiting there already.\n\nShe smiled and waved as she saw me approaching. She looked incredible, dressed in a light pink figure-hugging dress that ended a couple of inches above her knees. It was like a second skin and so perfectly moulded to her body that I was sure she wasn't wearing any underwear. I could clearly see the shape of her tiny breasts and the twin bumps of her nipples. I felt my cock twitch as it began to grow.\n\n\"I hope you haven't been waiting long?\" I asked after we again kissed each other on the cheeks.\n\n\"No, I was early.\"\n\nI kicked myself for not being here sooner. \"You look incredible!\"\n\nShe blushed slightly, \"You really think so?\"\n\n\"Absolutely!\"\n\n\"I don't usually wear clothes like this!\"\n\n\"Well, you should!\"\n\nShe covered her giggle with her hand, a gesture I was quickly learning to love.\n\n\"You also look very nice, your shirt matches my skirt!\"\n\nI laughed, \"This isn't my usual attire, but I wanted to make a good impression. A salesgirl helped me pick out my pants and shirt based on my description of what you were wearing earlier.\"\n\n\"Oh wow, that's impressive!\"\n\nBefore we could continue, we were interrupted by Caroline and a camera crew.\n\n\"Good you're both here, we can get rolling right away. We'll find a table and then Patrick can be waiting for you when you arrive.\"\n\nThings progressed from there and almost an hour later it was over. Only a few minutes of the entire event would make it into the show. It hadn't been a date at all, and I was relieved when Caroline and the crew finally left. In a few weeks, they would contact us for another brief interview on how things were going.\n\n\"God I'm glad that's over!\" Jenny exclaimed.\n\nI was hoping she only meant the filming and not our evening.\n\n\"Um, yeah. It wasn't a romantic date like I'd been expecting.\"\n\nTo my relief, she seemed to agree.\n\nWe sat in silence for a moment and then I said, \"Um, would you like to go to have a meal or something?\"\n\nShe smiled and my breathing returned to normal.\n\n\"I'm so glad you asked and I'm starving!\"\n\nI grinned like an idiot, \"Um, do you know somewhere close by?\"\n\n\"How do you feel about Chinese?\"\n\nFor a moment I thought she was referring to the people and only narrowly avoided embarrassing myself. \"Um, great, um, I love it.\"\n\nShe jumped to her feet making her breasts bounce under the tight fabric and reached for my hand, pulling me to my feet. Despite the atmosphere during the \"date,\" my cock had remained rigid throughout and now formed a distinct bulge.\n\nJenny didn't fail to notice and gave me a big smile. I was glad she took it as a compliment and didn't care about the looks I got as we left the caf\u00e9. As I held the door for Jenny, I noticed that the lumps in her dress were far more pronounced than earlier and was thrilled by her reaction.\n\nWe held hands and walked close together as she led us to the restaurant that was only a few steps from the caf\u00e9. It was quite busy, and the smells were amazing. We were getting quite a few looks from the mainly Asian patrons when there was a loud squeal and one of the staff rushed towards us.\n\nShe was smaller than Jenny and had a very different figure. She gave Jenny a big hug then stepped back, looking her up and down before launching into a stream of mandarin. After a rapid conversation, she gave me a brief inspection, lingering slightly on my crotch before saying something else I didn't understand and leading us to a table.\n\nIt was a quiet spot near the back, and I pulled out a chair for Jenny to sit before taking my place opposite. The server left to get us our menus.\n\n\"Sorry about that!\"\n\n\"No problem!\"\n\n\"June is my best friend and she's so excited for me.\"\n\nI smiled and nodded as June returned with our menus.\n\n\"What would you like to drink?\" she asked.\n\nJenny said, \"I'll have some green tea please.\"\n\n\"Same for me.\"\n\nJune nodded and disappeared again. I'd been waiting to ask Jenny if she remembered me from school and couldn't hold back any longer.\n\n\"Jenny, can I ask you something?\"\n\n\"Of course,\" she said suddenly looking a bit worried.\n\n\"Do you remember me?\"\n\nHer brow wrinkled in confusion.\n\n\"What do you mean?\"\n\nIt was clear she didn't. \"We used to be in the same class at school!\"\n\nHer eyes widened and I could see her mind racing as she thought.\n\n\"OMG! Are you that Patrick?\"\n\nI gulped, fearing the worst. \"Um yeah. Sorry.\"\n\n\"Don't be sorry! I used to have such a crush on you!\"\n\nMy ears must be deceiving me! \"WHAT?\" I said too loudly, \"I mean, how um, no, um, I had a crush on you!\"\n\nWe stared at each other and then burst out laughing.\n\n\"I can't believe this!\", she said. \"All those years I was too shy to even say a word to you and now we meet like this!\"\n\n\"Once the screen came up, I instantly recognized you. You haven't changed a bit, apart from being even more beautiful!\"\n\nShe blushed and then, placing her hands under her breasts, cupping them and lifting them slightly, said, \"I know, I'm just as well-endowed as I was when I was 12!\"\n\nI knew she meant it in a self-disparaging way, and I couldn't let that stand.\n\n\"No, you're just perfect!\"\n\nI saw a flicker of doubt in her eyes, so I added, \"Before the show started Paul asked me about the type of girl I liked. I described you and even thought back to our time at school. When I heard your name, I thought it was an amazing coincidence!\"\n\n\"Is that true?\"\n\n\"Of course, anyway, after what happened to me during the show, I'd think you know I find you very attractive.\"\n\nShe giggled, \"that was so amazing! One of the reasons I picked you was because you were so brave about it!\"\n\nI laughed, \"I don't think bravery had anything to do with it. The one in a million chance that I might get to see you naked was enough to make me do anything!\"\n\n\"Really? No one has ever said anything like that to me.\"\n\n\"Well, it was a dream coming true for me.\"\n\nOur conversation was interrupted by June asking us if we'd decided on what to eat.\n\n\"I suppose we better choose something!\" she said, picking up her menu.\n\n\"You decide, anything you like will be fine.\"\n\nShe smiled and spoke to June in Chinese. June grinned at us and after collecting the menus left.\n\n\"How long have you been single?\" Jenny asked, taking a sip of her tea.\n\nI blushed and hesitated before saying, \"Um, I'd say probably, um, since about, um birth.\"\n\nShe spluttered and choked slightly as she laughed. \"That can't be true!\"\n\n\"I'm sorry but it is. I've never had a girlfriend or anything.\"\n\nJenny raised her eyebrows, \"anything?\"\n\nI looked around to make sure we weren't being overheard and leaned closer to her as I whispered, \"nothing, zero, null, nada.\"\n\nShe sat back looking incredibly surprised before also leaning forward, \"so you're still a virgin?\"\n\nI sighed and my face must have been as red as the tablecloth. \"Um, yes.\"\n\nInstead of disgust or (even worse) pity, Jenny sat back and looked thrilled. \"So what made a 20-year-old virgin get naked for a TV show?\"\n\n\"It was a stupid bet I made with my best friend. I lost.\"\n\nJenny laughed and clapped her hands, \"That's almost the same as what happened to me. June and I were playing truth or dare with some other friends and she dared me to apply for the show!\"\n\nIt was my turn to laugh.\n\n\"I was so terrified I wasn't sure I could go through with it. I've never even been naked in front of anyone except my doctor!\" she added.\n\nAfter her words sunk in, I said, \"You mean you're also...\"\n\nShe smiled and nodded, \"yup, pure as the winter snow and also single since birth!\"\n\nI couldn't believe it, \"but how, why, I mean, you're so incredible...\"\n\nShe shrugged, \"I had such body issues and low confidence that I probably put anyone off. It's quite amazing what a difference being on that stupid show and your reaction to me has made. I would never in a million years have worn anything this revealing before.\"\n\nI nodded in understanding. \"The same is true for me. I mean, not even a doctor has seen me naked since I was a baby and I couldn't even talk to a girl without messing it up. But after the show things were different.\"\n\nWe paused as the first dish was served by June. She smiled at us, \"You both look so cute together.\" Then, squeezed Jenny's shoulder and said something in Chinese before leaving.\n\n\"What was that about?\"\n\n\"She just said I shouldn't let you get away.\"\n\nI laughed, \"The last thing you have to worry about is me getting away! If I could, I'd never leave your side.\"\n\nHer expression suddenly changed, and I thought I'd gone too far. \"I'm sorry Jenny. I didn't want to upset you or come across as some kind of creepy stalker. It's just hard for me to contain my feelings.\"\n\nShe shook her head. \"You didn't upset me, I feel the same way!\"\n\nI reached over and took her hand, squeezing it. We stared into each other's eyes for what was probably a very long time before starting to eat. The food was delicious, but I can't even remember what it was. Time flew as we spoke about our lives past and present and we only noticed how late it was when June interrupted to apologize that they had to close up for the night.\n\nIt was past midnight and all the other guests had already left. After settling the bill we left and stood outside watching the still quite busy streets. I didn't want this night to end but I also didn't want to push Jenny into anything she wasn't comfortable with.\n\nTo my relief, she took the initiative. \"Patrick, how would you feel about spending the night with me?\"\n\nI felt a rush of desire and love as I took her into my arms. \"Oh god, Jenny, nothing would make me happier!\"\n\nShe grinned and then placing her hands on either side of my head, we kissed for the first time.\n\nI pulled her body closer and felt the bumps of her nipples as they pressed against me. Her mouth opened and our tongues began to explore each other's mouths. I could feel the heat of her small body as it pressed against mine and my cock prodded against her.\n\nMy hands slid down her body until I was cupping her firm cheeks and pulling her even closer, only breaking apart when we heard a passer-by mutter \"Get a room!\".\n\nAs I stared at the beautiful girl in my arms, I couldn't believe the sensations coursing through me. It wasn't just the physical aspects but also an unbelievably deep feeling of love.\n\nWe looked at each other and Jenny gasped, \"Wow, look at you!\"\n\nI knew she was referring to the unmissable tenting of my pants and I reciprocated with \"You're not much better!\", referring to the inch-long bumps on her chest.\n\nWe both laughed. \"Where shall we go?\" Jenny asked.\n\n\"Um, we could go to my place, but I still live at home with my parents,\" I said.\n\n\"How would they feel about that?\"\n\n\"I think they'd probably be relieved!\" I said as I knew my father and mother worried about me.\n\n\"I share a single bedroom flat with a roommate, she'd probably be OK with it, but I don't know if I'd be comfortable having our first time with an audience!\"\n\nMy heart stuttered as I realized this was actually happening. \"Ok, so let's go to Guildford!\"\n\nWe kissed again and then holding hands walked to the station. People were staring at the obvious displays of our arousal, but we didn't care. The thought of what was to come and friction of my boxer shorts on my boner was enough to keep me rock hard and I was worried it would be too much! Jenny mentioned that she was suffering from the same problem as the fabric rubbed against her extremely sensitive nipples.\n\nAfter getting her a ticket we were able to board the largely deserted train. Ignoring the other passengers, we continued our make-out session and I placed my hands on her breasts for the first time. The thin fabric didn't hinder me much and I could feel the warmth and sponginess of her tits. The twin points of her nipples felt as hard as my cock and Jenny gasped as I gently squeezed and pulled them.\n\n\"Oh, Patrick...\" she moaned. This encouraged me and I placed one hand on her knee before slowly sliding it higher. It was my first touch of skin and I was amazed by how soft and smooth it was. Jenny seemed to like what I was doing and kissed me with even more vigour. Her dress had bunched up somewhat when she sat and, by the time I reached the hem, I was almost halfway up her thigh.",
        "I paused, unsure if I should continue but our lips parted for a moment and she whispered, \"Don't stop!\".\n\nI could feel the heat radiating from her body and it intensified the further up I got. Jenny shifted slightly and parted her legs to make it easier for me to proceed. I didn't wait for permission this time and boldly slid further until the tips of my fingers encountered the small tuft of pubic hair I'd seen earlier.\n\nMy cock throbbed and was sure it was harder than ever and on the brink of bursting. Our lips parted and we were both panting with lust. I couldn't believe I was actually touching her there and when I moved my hand just a bit lower, I felt a rigid protrusion about the size of the tip of my pinkie. Jenny cried out loudly and I froze looking around the wagon to see if anyone had noticed. It was then that I realised the train had already left the platform and we were on our way.\n\nJenny was wiggling about, breathing deeply, and making the most erotic sounds I'd ever heard. I gently stroked what was obviously her clitoris, amazed at how big it was. From all the sex manuals I'd read and from the porn, I'd seen I knew of its existence but had never thought it would be so big!\n\nNot caring anymore if anyone knew what we were doing, I continued until Jenny suddenly went rigid and buried her face in my neck as she squealed in pleasure. Despite being muffled the sound was loud and I was sure everyone would know that she'd just had an orgasm. When her breathing returned to a more normal level and I felt her body relax I continued my probing. Just below her clit I encountered a pool of liquid heat.\n\nShe was soaked and it felt amazing as I ran my fingers through the slippery juices. I could feel those lips I'd admired when I first saw her naked. I ran my fingertips up and down their length going somewhat deeper each time until I felt her opening. Jenny groaned into my neck and I gently pushed a single-digit deeper into her.\n\nShe felt incredible as my finger was squeezed by a wall of warm and very wet flesh. I'd never imagined a pussy would feel this good and had to fight back my orgasm as I imagined what it would feel like to slide my cock into this tight tunnel. When my finger bumped into an obstruction, I stopped and began to make a come here gesture.\n\nJenny's body began to shake, and she moaned, again burying her face into my neck before screaming once more. At the same moment, I felt a gush of hot liquid cover my finger and force its way past before spraying my hand and wrist. It continued for a bit and I wondered if she'd lost control of her bladder.\n\nJenny was still clutching onto me tightly and her body spasmed a few more times before she once again relaxed and slumped against me. She was almost panting as she looked up at me and I saw her face covered by a sheen of sweat. The moisture continued down her neck and I saw the front of her dress was discoloured from the sweat it had absorbed.\n\nHer breasts looked even more spectacular and were now even more visible with her areolas swollen and her nipples huge. I slowly extracted my finger from its silky gateway and felt the sodden fabric of her dress as I withdrew my hand. The most wonderful earthy scent hit my nose and intensified the further I moved my hand. Once back at the hem I lifted it and we both stared in amazement.\n\nIt was literally dripping, with strands of transparent fluids coating my fingers down to my wrist.\n\n\"Oh god, I'm so sorry!\" Jenny whispered.\n\n\"Don't talk rubbish, you are just incredible!\"\n\nI couldn't resist any longer and moved my hand to my nose, deeply inhaling the heady fragrance before licking it.\n\nJenny gasped as I licked and sucked as much of her juices as I could. \"God, you taste fantastic!\"\n\nAs I was about to take my final lick, she grasped my arm and pulled it towards her face, licking the last remnants. I found it incredibly hot watching her do this and it seemed like she quite liked her flavour as she smiled at me and said, \"It's true, I do taste good!\"\n\nWe both laughed but the sound caught in my throat as her hand dropped to my crotch.\n\nIt was the first time anyone had ever touched me there and despite the layers of clothing, it felt wonderful.\n\n\"Looks like you also leaked!\" she said happily.\n\nI hadn't come in my pants, but it looked like it! The front was drenched in precum forming a large brown stain.\n\n\"Did you have an orgasm?\"\n\nI shook my head, \"No, it was close but I managed to control myself!\"\n\n\"Wow, I can't wait to see how much stuff you produce when you do!\"\n\nShe squeezed my cock and I moaned in pleasure, \"Don't do that anymore or you'll find out right now!\"\n\nShe giggled and despite my pleading still squeezed and tugged a bit but then stopped, saying \"Oh, that would be a waste!\"\n\nInstead, we resumed kissing and cuddling. \"I can taste myself on you!\" Jenny giggled during a break.\n\nI was about to comment when the train slowed noticeably. I glanced out the window and recognized my station.\n\n\"We're here!\"\n\nI looked around the carriage, taking note of the other occupants for the first time. Two young couples also snogging and an elderly pair that did not look happy. I gave them a small smile in apology but only received an unfriendly look in response.\n\nI stood up, helping Jenny to her feet and we both laughed as we looked at each other. Her dress had two very obvious stains, around her chest and crotch, her breasts still looked incredibly sexy. My situation wasn't much better with the large stain around the tent formed by my cock.\n\nIt looked like we were the only ones disembarking and I chose to go past the younger couples rather than the appalled oldies. Jenny went ahead and I saw that the back of her dress was equally soiled. It was rather thrilling to see the others stare at us and I even got a wink from one of the girls as we walked along the aisle.\n\nThe fresh air felt good as we stepped onto the platform. It was nearly one in the morning, so it was no surprise it was deserted.\n\nI took Jenny's hand and led her through the station. \"It's about a fifteen-minute walk, I hope you don't mind.\"\n\n\"No, the fresh air feels good and maybe my clothes will dry on the way!\"\n\nWe walked in silence as I thought back to the events of this most monumental of days. OK, technically it was the next day but let's not get stuck in semantics! Here I was walking home with the girl of my dreams and about to have sex for the first time. I suddenly stopped, jerking Jenny to a halt.\n\n\"What's wrong?\" she asked.\n\n\"I've just bloody realised that I don't have any condoms, and everything is closed!\"\n\nHer response was not at all what I expected. She laughed loudly and said, \"don't look so worried. We don't need any!\"\n\n\"Huh?\"\n\n\"I'm on the pill silly and since we've both never been with anyone else there's no chance of catching any STD's!\"\n\nI was still somewhat in a daze as we continued walking and was wondering why she would be using contraceptives.\n\n\"If you're wondering why, my period is just very irregular, and the pill helps.\"\n\nThis was an area well outside my comfort zone, so I just nodded stupidly.\n\n\"Our house is just around this corner,\" I said.\n\nWe stopped before the wooden gate and Jenny pulled down her skirt slightly and adjusted her hair. \"Do I still look like I've just been ravaged by a stud?\"\n\nI gazed at her amazing figure and noted that the fabric had dried but her breasts and nipples were still just as prominent.\n\n\"You look incredible, don't worry. Anyway, chances are my parents are asleep.\"\n\n\"I hope so, I wouldn't want them to get the wrong impression.\"\n\nI looked down at my still straining cock and said, \"Um, what about this!\"\n\nShe giggled, \"I'm sure they'll be proud of you! Anyway, in a few weeks, they're going to see everything when the show airs on TV.\"\n\n\"Oh god, don't remind me!\"\n\nI opened the gate a Jenny went ahead of me. Trying to be as quiet as possible, I unlocked the front door and ushered her inside.\n\n\"Do you want a drink or something before we go upstairs?\", I whispered.\n\n\"Yes, maybe bring some water.\"\n\nWithout turning on the lights I used the illumination provided by streetlights to lead Jenny to the kitchen where I grabbed two glasses and a bottle of water.\n\n\"My room's upstairs.\"\n\nWe crept up the slightly creaking staircase and were suddenly blinded by bright lights.\n\nI blinked rapidly until I could make out a figure at the top of the stairs. It was my father, wearing a pair of pyjamas and holding a golf club in a threatening way.\n\n\"It's me, dad!\" I said.\n\n\"I can see that now! I heard some noises and thought we were being burgled!\"\n\n\"Sorry about that.\"\n\n\"It's alright, but you should tell us when you're planning to come home so late.\"\n\nHe seemed to notice the figure behind me for the first time. \"Who's that with you?\"\n\nI moved to the side and Jenny gave him a small wave. \"Hello, I'm Jenny.\"\n\n\"She's an old classmate of mine\", I added without thinking.\n\nI saw my dad glance at my tented and stained pants before taking another good look at Jenny.\n\n\"I see, well I'm off to bed. Don't worry about your mum and me, we're both sound sleepers!\"\n\n\"Um, thanks dad, um see you tomorrow.\"\n\nHe gave me a big grin a with a wave of the club walked towards his bedroom.\n\n\"Well that was awkward!\", I said.\n\n\"Why, I thought he was very understanding! I doubt my parents would have been quite as cool.\"\n\n\"I suppose you're right.\"\n\nWe continued up the stairs and I led Jenny into my bedroom at the other end of the corridor from my parents' room.\n\nJenny took a look around my room before saying, \"It's tidier than I expected.\"\n\nI laughed, \"You can thank my mother for that, she makes me give it a regular clean.\"\n\n\"That's good!\"\n\nI placed the glasses and water on my desk and took Jenny into my arms. We kissed and then moved towards the bed.\n\n\"Um, Patrick, I feel a bit sticky. Could I have a quick shower before we go to bed?\"\n\n\"Of course, um I'm also not as fresh as I could be!\"\n\n\"You can join me if you want?\"\n\n\"I very much want to!\"\n\nShe laughed, again and grabbed my hand. \"Lead the way.\"\n\n\"We only have one proper bathroom; I hope that's OK?\"\n\n\"Of course, it's the same at my parents' house.\"\n\nThe bathroom separated my room from my parents. I closed the door and hoped the noise of the water wouldn't disturb them too much.\n\nSuddenly nervous we stood on the bathmat before the tub and stared at each other. I broke the ice by saying, \"Um, can I help you get out of your dress?\"\n\nJenny smiled and we both relaxed. \"Please do.\" She said before turning around and lifting her incredible hair to allow me to get to her zip.\n\nAs I pulled it down slowly the dress parted, revealing more and more of her skin. It was incredibly sexy and when the zip reached her bottom, she shimmied her shoulders slightly and the dress dropped to her waist. I'd seen her naked back before, but it still took my breath away.\n\n\"God, you're beautiful!\"\n\nShe turned to face me, and my eyes dropped to those gorgeous tits. My mouth went dry and I had to lick my lips which made her giggle. Without pausing she put her hands on her hips and pushed the tight skirt down until gravity took over and it pooled at her feet.\n\nHere she was in all her naked glory once more. I drank in the sight of her as I began to unbutton my shirt. Jenny didn't remain inactive and quickly opened my pants and let them fall. She giggled as my sodden boxers twitched and my cock was able to expand further.\n\nShe grabbed the top of my boxers and slowly pulled them down, having to stretch the elastic to its maximum to allow my penis to escape. Going down onto her knees as she pulled my underwear down to my feet brought her face dangerously close to my pulsing organ.\n\nShe stayed where she was and moved her hands slowly up my legs. Staring up at me with those dark, exotic eyes she said, \"Can I touch it?\"\n\nI nodded and she moved both her hands until they were grasping the root.\n\nHer touch felt incredible and she slowly slid her fingers along the shaft, coming to a stop before my glans.\n\n\"It's so hard but soft at the same time!\" she said in wonder.\n\nI was still speechless as she moved closer until I could feel her breath on my tip. With her eyes locked on mine, she opened her mouth and extended her small tongue until it made contact. I gasped and felt a small squirt of precum dribble land on the pink surface. Her tongue disappeared back into her mouth and a moment later she engulfed my head.\n\nThe pleasure was intense, and I groaned loudly, forgetting that my parents were in the room next door. I felt her tongue swipe all around my glans as her head moved back and forth slightly. It was unbelievable and I felt the beginnings of an orgasm just as she stopped.\n\nThis time the groan was one of frustration but as Jenny slid her body up against mine when she stood all was forgotten. My cock left a slimy trail down her neck and chest and once she was fully upright it prodded and poked her abdomen.\n\n\"You better turn the water on if we're going to shower!\"\n\nI did as she asked and while we waited for the temperature to rise, I took the opportunity to get a taste of her breast. I bent forwards and began to lick and suck one of those nubs.\n\nJenny groaned and pulled my head even closer, forcing every last bit of her nipple into my mouth. I could feel it getting longer as I sucked and flicked it with my tongue.\n\n\"Oh god yes, Patrick! That's so good.\"\n\nI could feel she was getting close to another release, so I pulled back, letting it pop from my lips. It was swollen and much bigger than its yet unstimulated twin. I latched onto that one and repeated the process until I felt Jenny was once again close.\n\nWe'd both teased each other enough and needed to get under the water. I helped her into the tub before following and pulling the curtain closed. I've always enjoyed the sensation of water hitting my naked body but this time the shower was better than ever. We couldn't keep our hands to ourselves and soon were washing each other while getting to know every inch of our bodies.\n\nJenny seemed fascinated by my cock and balls and I was equally intrigued by her nipples and her amazingly large clit. As I first cleaned and then took it into my mouth, sucking it like you would a tiny cock she exploded and covered my face and body with more of her juices. I was sure my parents could not have slept through those screams of pleasure, but I no longer cared.\n\nA sudden drop in water temperature forced us to stop and it was then that I realised I didn't have a second towel. We dried each other as best we could, and I offered the towel to Jenny for the trip back to my room.\n\n\"You can use it if you want, I don't need it. Everyone is going to see my naked body soon so why bother!\"\n\nI liked this attitude and hung up the towel before we both left the bathroom and walked to my room. As I was closing the door behind us, I noticed that the door to my parent's room wasn't fully closed. I was sure it had been when we went into the bathroom earlier.\n\nAll thoughts about this flew from my mind as I turned around and found Jenny lying on my bed. I'd never expected a naked girl to grace these walls but there she was!\n\nAs I approached the bed, my cock leading the way, Jenny's legs moved further and further apart, exposing her swollen and moist pussy.\n\n\"I need you now Patrick!\" she said with a lust-filled voice.\n\nI crawled onto the bed and approached Jenny. Her eyes followed my every move and when my shoulders were between her knees, I slowly lowered my face towards her dripping sex. Her scent was intoxicating and when my lips met hers, I tasted her slightly salty but also sweet essence.\n\nShe moaned and her legs closed, trapping my head between them. I did my best to use my mouth and tongue to give her pleasure, not being sure about what I was doing. She seemed to be enjoying it and despite the soft flesh of her thighs covering my ears, I could hear her moaning loudly.\n\nAs I'd discovered on the journey home, Jenny was very vocal during sex and even though my parents were nearby she wasn't holding back in expressing her pleasure. I loved her attitude and strangely found myself hoping they were awake and could hear us!\n\nI concentrated on the task at hand and moved my attention to her prominent clit. Jenny's body spasmed as I took the protruding and extremely sensitive organ between my lips and gently squeezed. When I added some tongue action she flipped out, and I was hit by a gush of fluids as she screamed loud enough to wake the neighbours!\n\nHer legs flopped apart, and I felt her hands pushing me. I raised my head, looking into her eyes. She looked incredible as she said, \"COCK. IN. NOW!\"\n\nI grinned and slid up over her sweat covered chest, taking a moment to give each huge nipple some attention before kissing her deeply. I felt her hand slide down my side until it gripped my penis and tugged it towards her entrance. My downward curve made it difficult and uncomfortable, so I raised my upper body.\n\nWe could both now see her tiny hand wrapped around my throbbing cock and as I watched she slid the tip up and down her well-prepared slit, gathering more fluid on each pass. It felt incredible and, when she was ready, she slotted my glans into her tunnel and let go. I could feel incredible heat and pulsing tissue as I gently probed further.\n\n\"Yes, that's it!\" she panted and wrapped her legs around my waist, locking me into position. I had the strong urge to just thrust forwards but held back for fear of causing her any pain, so I pushed slowly, amazed at the sensations as my glans sank deeper into her.\n\n\"Oh, so good!\" she moaned.\n\n\"You feel amazing Jenny!\" I gasped, struggling to hold on.\n\n\"So do you!\"\n\nMy tip was no longer visible as I looked at our joined bodies. Her lips were tightly stretched around my cock and it looked like we were one. As I pushed further, I nudged against a spongy wall and stopped.\n\n\"I'm afraid to hurt you!\"\n\n\"It's OK, just go slowly. I'll tell you if it's too painful.\"\n\nI gulped and felt bad that she had to endure this. Her legs tightened indicating I should proceed and with a mixture of trepidation and desire, I pushed. Nothing happened at first and then I felt a strange sensation at my tip before it suddenly slipped in another inch or so.\n\nJenny cried out and I saw tears leaking from her clenched eyes. I froze, not knowing if I should pull back or if that would make it worse. After what seemed like a long time, she slowly opened her eyes.\n\n\"It's OK Patrick, I think the worst is over.\"\n\nInstinctively I pulled back slightly and then pushed forwards once more. Jenny winced slightly but I felt her legs pulling me closer again.\n\nI felt guilty at how good my cock was feeling, enveloped in more and more wet heat. With each thrust, I felt myself sink deeper into her incredibly tight channel until I was all the way in. We stared in wonder as our pubic hair mingled.\n\n\"Well it's official now, we're no longer virgins!\" she said.\n\nI felt her squeeze my already tightly gripped cock with her pelvic muscles and groaned in response.\n\nShe smiled, \"You like that do you?\"\n\nI could only nod.\n\n\"I've been doing Kegel exercises since I was a teen, finally I can see it was worth it!\"\n\nI groaned again as she gave me another powerful squeeze.\n\n\"Oh, Patrick, I'm getting close again, MOVE!\"\n\nIt was the signal I was waiting for and I pulled back watching her nether lips grudgingly allowing my glistening shaft to withdraw until I could see the ridge below my glans. Lifting my eyes to watch Jenny's I then pushed forwards with more force than ever and sank all the way back inside. Her eyes widened, it looked like her pupils were rolling back into her skull as our pelvises collided and my balls slapped against her cheeks.\n\nI couldn't wait for further instructions and repeated what I'd just done. I could feel her pussy loosening slightly as more and more lubrication was provided. Apart from Jenny's increasingly loud groans and cries, a wonderful wet sloshing sound and the slap of flesh on flesh filled the room.",
        "I wanted this to last forever but, all too soon, I felt my balls tighten and that unstoppable sensation of an impending orgasm. I pounded into her even faster, losing all control until I knew that the last thrust was upon me. Burying my cock as far as I could, I raised my head and cried out, feeling my cock expand before shooting a volley of semen.\n\nMy cry was overshadowed by Jenny's and despite dad's assurances that they were sound sleepers, I was sure they would have heard us. Perversely it was satisfying that they would know I'd managed to please a girl. As I came down from my high, I gently lowered myself and rolled off her. We were both panting from exertion as we lay side by side.\n\n\"Oh my god Patrick, that was incredible!\"\n\n\"Yes, it was!\"\n\n\"I think our first time couldn't have been any better.\"\n\n\"Well, it's only the beginning!\"\n\nShe laughed and rolled onto her side, \"Wow, you're still hard!\"\n\nIt was true, despite just coming, my cock was as hard as ever.\n\n\"What can I say? It just can't relax with you around!\"\n\nShe giggled and then yawned.\n\n\"Sorry -- it's been a long and wonderful day.\"\n\nYawns being catching meant mine followed.\n\n\"At least we don't have to get up early tomorrow\", I said and then glanced at my watch and added, \"God, it's already past three!\"\n\n\"Could you get a towel so we can clean up a bit?\"\n\n\"Of course.\"\n\nI got up and only hesitated a moment before leaving my room naked and walking the short distance to the bathroom. The door to my parents' room was still open and it gave me a thrill to imagine they had listened to us. I grabbed a washcloth and wet it with warm water and took another towel for drying. As I left the bathroom, I caught a movement behind the partially open door of the other bedroom.\n\nThis confirmed what I'd thought, and I smiled to myself as I stepped into my room. Jenny was lying on her back, naked and fast asleep. She looked incredibly sexy and I felt my still rigid penis jerk in response. I could see my ejaculate leaking from between her legs, beneath which it was already forming a small puddle. I closed the door and then, feeling daring, opened it again slightly so that anyone looking inside would have a view of the bed.\n\nI silently approached the bed and gently wiped the spillage as best I could without waking her up. Using the other towel, I dabbed her dry and then wiped my cock with the washcloth. I crawled into bed and was grateful it was a hot night as there was no way to get the sheets out from under her. As I lay on my back staring at the ceiling and willing sleep to take me, I thought back at the momentous events of the past day.\n\nI was woken up by the first rays of sunlight shining into my face. We'd forgotten to close the curtains and when I glanced at my watch, I saw it was just before 7 am. We must have moved around some during the night as Jenny was half lying on me. One glance at her sexy behind was enough to reinvigorate my penis and it rapidly grew to full size.\n\nThere was no way for me to get up and close the curtains without disturbing her, so I remained where I was. A few minutes later I heard movement outside. The door was as I'd left it last night and still ajar. I closed my eyes and feigned sleep as I listened to the sounds of someone approaching my room.\n\nThe footsteps stopped as I heard a sharp intake of breath. After a lengthy pause, the steps retreated once more, and I heard my father's voice as he whispered to someone, presumably mum. Moments later footsteps again approached. There was more whispering, closer this time and then the creak of my door. I thought it was being closed but then I heard someone walking into my room.\n\nI couldn't resist and very slightly opened my eyes to take a peek. Mum was walking past the foot of my bed towards the window. She had a full-on, close-up view of my balls and rigid cock as well as Jenny's arse and pussy. Mum pulled the curtains closed and the bright light instantly faded to darkness. I listened as she made her way back to the door and this time caught the odd word and some giggles as she spoke to dad before the door was fully closed.\n\nI was intrigued by the snippets of conversation I'd heard. Dad had said something about me 'hitting the jackpot' and mum had countered with something about 'taking after his dad' and 'she'll be satisfied'.\n\nI'd never really thought of my parents as sexual beings and now wondered how well I knew them in this regard. I'd sometimes heard noises from their bedroom late at night and a few times I'd caught a glimpse of mum or dad returning from the bathroom at odd hours and in only a towel.\n\nYou might think my fear of nudity and lack of confidence with girls was because of a strict or religious upbringing, but you would be wrong. Although I'd never seen either of my parents naked, they were not prudish at all. I thought back to my childhood holidays when we would visit the beach and rent a tiny apartment. Mum and dad would start to strip off their clothes and I would immediately retreat to the bathroom to do the same.\n\nI was always uncomfortable with the concept of nudity, but it wasn't their fault. I now realized that they had tried to be open but had seen how I reacted and changed their behaviour accordingly. The same was true when it came to sex, dad had taken me aside and given me the 'birds and the bees' talk and had been willing to answer any questions I had but I didn't take up the offer.\n\nAs I lay here thinking about it, I suddenly felt guilty that my behaviour had caused them to change their lifestyle and had taken away some of their freedoms. But it was in the past and there was no point crying over spilt milk. At least they'd had me early and were now only just in their forties so there was still time. I vowed to make it up to them in whatever way I could.\n\nJenny stirred in her sleep and muttered some words in Chinese before rolling onto her back. It was too dark to see anything and I suddenly realised I was desperate for a piss. I left the bed and headed for the bathroom, not bothering with any cover despite my erect cock wagging as I walked. To my disappointment, the corridor was deserted, and no one saw me as I entered the bathroom.\n\nI'd never tried to pee with an erection and found it quite difficult but thankfully not impossible. I shook off the last drops and then washed my hands. On the way back to my room I overheard my parents talking downstairs. I pictured myself going down in the nude and saying good morning. Would they be disgusted and upset? If I knew they wouldn't mind I would have done it, but I didn't want to push things too soon.\n\nI returned to my room, closed the door, and then pulled the curtain open slightly to allow in some light. Jenny looked stunning, lying on her back with her legs slightly parted. Her breasts were almost flat in this position but clearly marked by the beacons of her nipples. Despite being in a relaxed state they were almost an inch long.\n\nI slid into bed next to her and stared at her beauty, still in wonder at my good fortune. She must have sensed something as her eyes fluttered open and she blinked a few times before focusing on my face.\n\nShe smiled and my heart melted.\n\n\"What are you doing Patrick?\", she asked in a sleepy voice.\n\n\"Just looking at your amazing body and wondering how I got to be so lucky!\"\n\nHer smile widened and she reached up and pulled me in for a kiss.\n\n\"What time is it?\"\n\nI checked my watch, \"7:40\"\n\n\"Why are you up so early?\"\n\n\"We forgot to close the curtains last night and the sun woke me up!\"\n\n\"Oh, poor you!\"\n\n\"Something else also happened!\"\n\nShe giggled and glanced at my erection, \"You mean that?\"\n\nI laughed, \"Well that and something else. When I woke up, I noticed our door wasn't fully closed. I left it slightly open after I went to get the towel you asked for.\"\n\n\"Oh gosh, I remember now. I must have fallen asleep before you got back!\"\n\n\"You did, but don't worry, I cleaned you up.\"\n\nShe blushed slightly and I continued, \"anyway, I was about to get up and close the curtains and the door when I heard someone coming.\"\n\n\"Oh god, don't tell me it was your parents?\"\n\nI nodded, \"But don't worry, everything is cool.\"\n\n\"What happened?\"\n\n\"Well I couldn't move because you were lying on top of me, so I faked being asleep. I heard someone at the door, but they didn't come in and walked away. A moment later I heard dad whispering something to mum and then they both came to the door again.\"\n\nJenny's blush deepened, \"So both your parents saw us naked?\"\n\n\"Yup. You were lying on your front, so they only saw your back and um, bottom. It was worse for me as my penis was just it is now!\"\n\nDespite her obvious embarrassment she giggled and asked, \"what happened next?\"\n\n\"I thought they'd just close the door and leave but then I heard footsteps entering the room. I peeked and saw mum walk to the window and close the curtains.\"\n\nShe looked suddenly worried, \"What are they going to think of me? They'll think I'm a slut.\"\n\nI reached out and caressed her hair and face. \"Don't be silly, in fact, I heard my dad say something about me hitting the jackpot and mom agreed.\"\n\nIt wasn't entirely accurate, but I didn't want her to worry.\n\nShe seemed to relax somewhat, \"It's still pretty embarrassing but it won't be long before they see us on TV anyway.\"\n\nI nodded and she continued, \"I can't imagine my parents reacting like that! I think my dad would have dragged you out of bed and threatened to kill you and would probably have disowned me at the same time.\"\n\n\"Just as well we came here then!\"\n\nJenny giggled and then moaned as my hand dropped to her breast and began to play with her nipple.\n\n\"Oh god Patrick, that feels so good but I'm feeling kind of sore and my bladder is full!\"\n\nI was slightly disappointed, \"I understand as long as you promise we can do it again sometime.\"\n\nShe laughed and pulled me in for another kiss, \"Of course silly. I'm not a one-night-stand girl and I have no intention of letting you escape!\"\n\n\"What a relief!\"\n\nJenny sat up and stretched and my eyes dropped to those incredible breasts and nipples that were much larger than before.\n\nShe noticed me staring and must have felt pity. \"You can kiss them if you want.\"\n\n\"I want!\", I said sitting up and taking a nipple into my mouth. I sucked and licked, enjoying her reaction as I did so.\n\n\"Oh, let me go now before I reconsider!\", she gasped.\n\nWhen I released the swollen nub, Jenny jumped off the bed.\n\n\"Are you coming to the bathroom with me?\"\n\nI hadn't considered this but was on my feet instantly. The opportunity to watch her pee was too good to miss.\n\nAs I headed for the door she said, \"Um, aren't you forgetting something?\"\n\nI was confused for a moment but then realised we were both naked.\n\n\"It's OK, they've seen us anyway and we have nothing to wear.\"\n\nShe only hesitated for a moment before smiling and following me. I opened the door and we stepped into the corridor. I could still hear mum and dad talking downstairs.\n\n\"They're still downstairs so you don't have to worry.\"\n\nJenny smiled and followed me to the bathroom. As soon as I closed the door, she ran for the loo and sat down. I heard her pee hitting the porcelain bowl and was surprised by how strong a stream it was. Jenny saw me looking and parted her legs to give me a better view. I stepped closer and watched as the powerful jet of urine gushed from her. It was incredibly sexy to watch and my cock jerked up and down in response.\n\nJenny giggled and reached for my pulsing organ. Her small fingers gripped the shaft and stroked it gently. Her bladder must have been very full as she was still going strong when I was already feeling close to having a climax.\n\n\"Um, you better watch out, I'm getting close!\" I gasped.\n\nInstead of slowing down or letting me go, my words seemed to spurn her on and she increased the pressure and speed of her tugs.\n\n\"Ah, oh, YES!\" I groaned as the first volley of come shot from my cock. It hit her on the cheek and Jenny opened her mouth and adjusted her aim. The next show hit her tongue and she then aimed lower and watched in delight as my final few blasts coated her neck and breasts.\n\n\"Wow, that's a lot and it still tastes good!\" she said as she licked her lips.\n\nI stared at the sexy vision of my come dripping down her body as she sat before me. \"You're just amazing Jenny.\"\n\nShe grinned as her stream finally slowed before stopping. She released my cock that was only slightly wilting, and I watched as she dabbed between her legs with some toilet paper before standing and flushing.\n\n\"I had no idea how sexy it is to watch a girl pee!\" I exclaimed.\n\n\"We've both got a lot to learn and experience, I never would have believed being ejaculated on could be so rewarding!\"\n\nWe both laughed. \"Well, I can't wait to try everything and anything with you.\"\n\n\"Same here, but I think I need another shower before we go and meet your parents.\"\n\nI agreed and we shared the shower and washed each other again before drying off.\n\n\"Can I use your toothbrush?\"\n\n\"Of course, everything of mine is yours.\"\n\nMy penis had relaxed somewhat but seeing Jenny bend over the sink as she brushed her teeth, the motions of which made her small breasts jiggle delightfully soon had me rock solid once again. She must have seen my condition in the mirror and wiggled her bottom in an obvious invitation.\n\nI moved behind her and my cock slotted neatly between her firm globes. It felt fantastic and I leaned forwards to grab her tits. This was a position I wanted to try sometime, and I was reluctant to let go when she finished brushing.\n\n\"Enough of that you naughty boy!\" she said with a grin and handed me my toothbrush.\n\nI took it from her and began my oral hygiene routine. Jenny slid up behind me and I felt her body press against me as she reached around and began to stroke my cock. I'd never done this while brushing teeth and it was rather distracting!\n\nWhen I was finished, we returned to my room in the buff with my erection leading the way. I began to wonder if my cock would ever be flaccid in her company.\n\nI don't know where my parents were, but we remained unobserved as I closed the door behind us. Jenny picked up her discarded dress and looked at it in dismay.\n\n\"I can't wear this, it's full of stains!\"\n\nI could see she was getting upset. \"Don't worry, you can borrow a shirt or something of mine and we can do the laundry.\"\n\nI went to my cupboard and hunted around for something suitable. All my clothes were far too big, but she could wear a shirt or T-shirt and it should cover enough. I extracted two possibilities and handed them to her.\n\n\"Try these.\"\n\nShe looked sceptical as she slipped on the t-shirt first. It was long enough to reach an inch or two past her bottom and I thought she looked great. Jenny didn't look convinced and checked herself out in the mirror mounted on my cupboard door.\n\n\"You look hot!\" I said.\n\nShe smiled, \"I suppose it'll be OK, let me try the other one.\"\n\nStepping over to the bed, she bent slightly to pick up the shirt. I noticed two things instantly. In the mirror, I could see the lower half of her perfect bum and a sliver of her pussy. At the front, the rather large collar gaped, and I could see her nipples atop her sexy little titties.\n\nJenny didn't seem to notice, and I said nothing. She slipped off the T and put on the shirt. It was slightly longer, and she was able to button it up so that the top was also less revealing. However, the fabric was much thinner, and I could make out the darker colour of her nipples through the slightly transparent fabric.\n\nI would be happy with either choice as she looked incredible in both. Jenney checked herself out in the mirror and seemed more satisfied with this option.\n\n\"Do you think this is OK?\" she asked facing me.\n\n\"Um, yeah. You look great in both, just take what you're most comfortable in.\"\n\nShe checked the mirror once more and then said, \"I think you can see my nipples.\"\n\n\"Barely... and anyway, as you said before, they're going to see all of us soon anyway.\"\n\nThis seemed to convince her, and she smiled. \"OK, well what are you waiting for. Get dressed and let's go downstairs.\"\n\nI grabbed a pair of shorts and the T-shirt she had rejected. I didn't bother with underwear and there was a very obvious tent in my trousers.\n\nJenny giggled, \"Well that should distract them from my nipples!\"\n\nWe both laughed and headed downstairs.\n\n***\n\nMum and dad were in the kitchen finishing up with their breakfast as we entered.\n\n\"Good Morning, um, I'd like you to meet Jenny\", I said.\n\nJenny gave a small wave and I could see she was blushing as my parents looked at us.\n\nDad was the first to respond, \"We met briefly last night.\"\n\nHe stood and extended his hand \"I'm John\", gesturing towards mum he added, and this is \"Beth\".\n\nJenny shook his hand, \"Nice to meet you both.\"\n\nI saw dad trying not to look at Jenny's chest where her brownish nipples were easily visible.\n\nMum cleared her throat and smiled as she stood. They shook hands and mum said, \"It's nice to meet you, Jenny. Please sit and have some breakfast.\"\n\nAs Jenny nervously settled in a chair mum looked at me and I saw her glance at my crotch. Her smile remained so I relaxed slightly. \"What would you like to drink dear, tea or coffee?\"\n\n\"Um, tea would be fine, thank you.\"\n\n\"Patrick, make your guest some tea.\"\n\nI nodded and headed for the kettle. Dad caught my eye and wiggled his eyebrows. I wasn't quite sure what the gesture meant but he seemed happy.\n\nI heard my parents retake their seats and felt sorry for Jenny as she was about to get the third degree.\n\n\"So, Jenny, where did you and Patrick meet?\", mum asked.\n\nI listened with interest as I prepared the tea.\n\n\"We know each other from school and met by chance yesterday.\"\n\n\"Oh, that's nice! Were you in his class?\", dad interjected.\n\n\"Yes.\"\n\nThe kettle beeped and I poured the boiling water into the teapot and added two teabags.\n\n\"I can't remember Patrick ever mentioning you during school\", mum said.\n\nI watched Jenny blush slightly and decided to help her out.\n\n\"Mum, what kind of question is that! If you must know, I had a crush on Jenny but was too damn stupid to ever say or do anything about it.\"\n\n\"I was just the same. I liked him, but I was just too shy\", Jenny added.\n\nDad turned to me, \"so how did you end up meeting yesterday?\"\n\nI placed the teapot on the table and said, \"let me just get breakfast ready then I'll answer all your questions.\"\n\nDad nodded, \"Jenny, what would you like to eat?\"\n\n\"Um, anything is fine.\"\n\n\"Toast or cereal?\"\n\nShe considered a moment and then said, \"Toast please.\"\n\nI busied myself with the toaster and got butter and jam from the fridge as mum took over the interrogation again. \"What do you do Jenny?\"\n\n\"I'm studying law and work part-time at a coffee shop in London to pay for uni.\"\n\nI had no idea Jenny was studying law and looked at her in surprise. She hadn't mentioned it and I'd been too busy thinking about other things to ask.\n\n\"That's very impressive.\", dad said.\n\n\"Thanks. It's difficult but I enjoy it.\"\n\n\"Where do you live?\"\n\n\"I share a flat in the city. On weekends I usually go home and stay with my parents.\"\n\n\"Whereabouts?\"\n\n\"They still live in Chobham.\"\n\nI placed everything on the table and took my seat. Mum looked at my still prominent tent with surprise and I think she was trying to suppress a smile.\n\nAs Jenny buttered her toast dad returned to his previous question. \"So, where did you meet yesterday?\"\n\nI frowned at him, but he just smiled and waited. \"It's kind of a long story.\"\n\n\"We've got plenty of time, don't we Beth?\"\n\n\"Yes, we do!\", mum replied looking at me with interest.\n\nJenny did a good job of keeping busy preparing her toast, so it was up to me to answer.",
        "\"Well if you must know it was at a TV studio.\"\n\nThis got their interest. \"What? Why? Where?\", mum blurted out.\n\n\"A while back I made a stupid bet with Ben and lost. The agreement had been that the loser would have to take part in a dating show.\"\n\nMum and dad laughed. \"You must have been mortified!\" mum exclaimed.\n\nI frowned at her, \"I was, but you don't know the half of it yet!\"\n\nBefore I had a chance to elaborate, mum turned to Jenny and said, \"So you were also taking part in the show?\"\n\nJenny had just taken a bit of her toast and her mouth was full, so she just nodded.\n\n\"That's wonderful, isn't it funny how life works! You two shy kids not daring to express your feelings and then fate intervenes and brings you together. It's so romantic.\"\n\nJenny almost choked on her toast and mum frowned and looked slightly confused.\n\n\"Did I say something wrong?\" she asked.\n\n\"No, no. It's just that the show we were on is not your usual dating show.\"\n\nHer look of confusion remained. \"So which show was it? I watch most of them!\"\n\nI glanced at Jenny and her face was red as she slowly chewed on her toast.\n\nIt was the moment of truth. I took a deep breath and said, \"I don't think this is one of the ones you watch. It's different because the contestants are naked and chosen based on their physical attributes.\"\n\nThere -- I'd done it. Jenny stopped chewing and was watching my parents intently. I was doing the same and for a while, they didn't react and then both of them burst out laughing. It was the last reaction I'd expected, and Jenny and I looked at each other in surprise.\n\nWhen mum and dad had regained control of themselves, dad said, \"Good one Patrick -- but what's the truth?\"\n\n\"That is the truth! Ben and I have been making bets for ages and the last time we decided we had to make it more interesting. I was so sure I'd win that I readily agreed to strip off on national television.\"\n\nMum and dad looked at each other in surprise. They were still grinning when mum said, \"Are you talking about that show with Anne what's her name?\"\n\nI was stunned that mum knew the show and just nodded.\n\nMum looked at Dad and said, \"You know dear, it's the one with those coloured boxes that reveal the naked contestant's bit by bit!\"\n\nDad nodded and grinned. \"Of course, I know it, it's the only one I bother to watch!\"\n\n\"I just can't believe you were brave enough to take part, Patrick!\"\n\n\"Neither can I!\" I said.\n\nThings were going far better than expected and I saw Jenny finally swallow her mouthful and wash it down with a sip of tea.\n\nAttention turned to her, \"What made you take part in that show?\" mum asked.\n\n\"It's similar to Patrick's reason. My best friend June and I were playing truth-or-dare and I picked a dare.\"\n\nMum grinned, \"This is just so wonderful! When will it be on TV?\"\n\n\"Probably in a couple of weeks.\"\n\nShe clapped her hands in glee, \"I can't wait to see it! Tell me, Patrick, how did you feel about being naked in a setting like that?\"\n\n\"At first I was bloody terrified but when I saw glimpses of Jenny I relaxed and actually began to enjoy it.\"\n\n\"I'm just still trying to get my head around the fact that you of all people would even consider doing something like that!\", dad said.\n\n\"As I said, I lost a bet and had no choice. Now I'm so glad it happened as it's changed my life.\"\n\nI looked at Jenny and I hoped she could tell how much she meant to me. Mum was almost in tears as she watched the interaction between us. \"How was it for you, Jenny?\"\n\n\"At first I was terrified, and it was only when I saw Patrick that I began to relax a bit. I didn't recognize him and only found out later that we'd been in school together!\"\n\n\"So you also didn't have any experience with public nudity?\" dad asked.\n\nShe shook her head. \"Absolutely not! I've always had issues with my body and no one except my doctor had seen me naked since I was a child.\"\n\n\"Well talk about jumping in at the deep end!\" dad exclaimed.\n\nWe all laughed, and Jenny added, \"It made me realise how foolish I'd been most of my life and that I should be happy with my body as it is.\"\n\n\"I agree with Jenny, and I feel very different about myself since then.\"\n\nMum clapped her hands in delight. \"This is such a wonderful story! I can't wait to tell your aunt Judy and all my friends!\"\n\n\"MUM!\" I said.\n\n\"What? They are going to find out anyway once the show airs. You're the first one in our family that's ever been on TV, of course, I'm going to tell everyone!\"\n\nI pictured all my relatives and mum's acquaintances watching me naked with a boner and wondered if mum would still be as proud of me as she seemed to be now.\n\n\"Well I think it's fantastic that this show has let both of you break out of those self-imposed shells you were in.\" dad said.\n\n\"I agree!\", mum said and then added \"and from what we've seen, you both have absolutely nothing to be ashamed of.\"\n\nI gave mum a surprised look although I already knew they'd seen us. She blushed slightly and said, \"I'm sorry, but your door wasn't closed this morning and I went into your room to close the curtains. You were both still asleep and looked so beautiful.\"\n\nJenny and I both blushed and there was a moment of uncomfortable silence.\n\n\"From what've you've said, can I take it that you'd be OK if we loosened the dress code at home a bit?\" dad asked.\n\nMum glanced at him, \"John, maybe it's a bit soon for that?\"\n\nI stared at my parents in confusion. Then dad continued, \"Look since we're all being honest, I think it's only right that we tell them, Beth.\"\n\nMum still looked slightly unsure but nodded in agreement.\n\n\"Patrick, what I'm trying to say is that your mother and I have been nudists for most of our lives. We never wanted to force our lifestyle on you. You were always extremely shy and body-conscious from a young age and things only got worse as you got older.\"\n\n\"But..., I..., you..., I mean, you never said anything!\" I stammered.\n\n\"As your father said, we didn't want to pressure you and whenever there was an opportunity for you to see us undressed you would disappear.\"\n\nWhat she said was true, but I was still trying to get my head around the fact that my parents were actual nudists. \"So where, do you um, you know, get naked?\"\n\nMum smiled, \"Whenever we can. We both enjoy the freedom and we're usually naked at home whenever you're out.\"\n\nI couldn't believe they'd managed to keep this from me!\n\n\"We're also members of a nudist association so we can visit clubs all around the country and abroad.\", dad added.\n\nI stared at Jenny to see how she was responding to my parent's revelations. She was sipping her tea and rather than looking shocked she looked intrigued.\n\nMum noticed me looking at Jenny and said, \"I hope you don't mind all the family secrets being aired, dear.\"\n\n\"No! I think it's wonderful.\"\n\nBoth mum and dad beamed at her. \"I wish my parents were as open-minded and relaxed as you.\"\n\nMum looked at me and said, \"You've found a wonderful girlfriend and I hope you both plan on taking this relationship further.\"\n\nI blushed slightly and noticed Jenny was looking at me expectantly. \"I know, mum, and yes, I'm very serious about Jenny and if she'll have me, I want to make her a permanent part of my life.\"\n\nAll eyes moved to Jenny and she blushed slightly but smiled. \"The same is true for me and I know it's soon, but I think I'm in love with Patrick.\"\n\nHer words melted my heart and I couldn't help but stand and lean over to kiss her.\n\n\"This is so romantic\", mum gushed, \"and don't worry about it being too soon. I knew the moment I set eyes on John that he was the one for me.\"\n\nMum and dad also exchanged a kiss and then dad said, \"Welcome to the family Jenny!\"\n\nJenny was so overcome with emotion that she was almost crying. \"Thank you all so much,\" she stammered.\n\n\"Look, if you two want to try your newly found freedom we could all go to one of the clubs this weekend. The closest one is about an hour by car and has a wonderful park and a pool.\"\n\nI wasn't sure I was quite ready to go to a nudist resort with my parents but if Jenny wanted to go, I wouldn't object. She looked at me and I shrugged, \"It's up to you.\"\n\nShe considered it for a moment and then said, \"I think it's a bit too soon for that...\"\n\nI was relieved but also a bit disappointed by her answer and wondered if she hadn't yet fully overcome her fear of nudity, however, her next words proved me wrong.\n\n\"...but if we could be naked at home with you first to get used to it, maybe next weekend we could try the club.\"\n\n\"That's a wonderful idea Jenny!\" mum exclaimed enthusiastically and then looked at me questioningly.\n\n\"How do you feel about that Patrick?\"\n\n\"I..., um, yes, I suppose it's OK.\"\n\nMy parents both smiled. \"Well you two finish up your breakfast and your father and I'll go upstairs and get ready.\"\n\nI could tell they were really happy, and I felt good that they no longer had to keep their nudist activities hidden from me. Once they were out of earshot, Jenny said, \"I hope you're not mad at me, but your parents are so nice, and I would like to give nudism a try.\"\n\n\"Of course I'm not mad at you and I'll do anything you want, I love you, Jenny!\"\n\nShe looked so happy at my words that it made my heart melt. We quickly finished our meal and cleaned up the kitchen. I took every opportunity to grope and tease her and she did the same to me. By the time we headed upstairs we were very aroused and excited at the prospect of being naked with my parents. They'd already seen us naked but it would be different this time.\n\nOnce in the bedroom, we quickly stripped off the few clothes we were wearing. My penis was of course fully erect and throbbing in time with my heartbeat. Jenny's arousal was almost as obvious with her nipples fully extended and her lower lips moist.\n\nAs we stepped out of my bedroom holding hands, we found my parents doing the same. We froze and stood in the corridor looking at each other.\n\nMy eyes were first drawn to mum, which isn't surprising as she was only the second female, I'd ever seen naked. I was astonished by how sexy she looked. Her breasts were quite large and drooped slightly. They were capped with large areolas and a pair of pink nipples that only protruded slightly. She had a slight belly and wide hips that gave her very well-proportioned womanly curves. Interestingly she was fully shaved and unlike Jenny, her outer lips were barely visible. Her skin was lightly tanned without a tan line in sight.\n\nMy eyes moved to dad and took in his naked form. He had a typical dad-bod with a slightly large tummy and just like mum he was tanned all over. His pubes were also shaved and his cock hung over a good-sized set of balls. All in all, his equipment looked like mine apart from the fact that he was uncut. As I watched, his cock twitched slightly and I saw the tip begin to emerge from its cover. I glanced at his face and saw him staring at Jenny.\n\nMum broke the impasse by saying, \"Now that we've all seen each other, let's go downstairs.\"\n\nShe gently tugged dad's hand and the two of them headed downstairs. I looked at Jenny. She was slightly flushed but smiled at me. \"Let's go,\" I said.\n\nWe followed my parents and I got the first look at them from behind. Mum's bottom matched the rest of her body and wiggled nicely as she descended. Dad's rear was surprisingly tight and looked like that of a younger man.\n\nAt the foot of the stairs, they turned and went through into the living room. By the time we entered, mum was already sitting on the sofa and dad was standing.\n\n\"Would you like something to drink?\" he asked.\n\nWe both declined as we'd only just had breakfast. He pointed to the second sofa as he sat down next to mum. \"Make yourselves comfortable.\"\n\nI let Jenny sit first and then lowered myself next to her. It was a scene I had never imagined I would see.\n\n\"You both look lovely!\", mum said.\n\n\"So do you!\" Jenny exclaimed. \"I wish I had breasts like yours!\"\n\nMum smiled, \"Don't say that dear, they're more a burden than a pleasure!\" she said as she used both hands to heft the mounds of flesh. \"The older I get the lower they hang but John still seems to like them!\"\n\nJenny giggled and copied mum, cupping her tiny bumps, and pushing them upwards. We all laughed, and mum said, \"You're nipples look amazing! I don't think I've ever seen any that large.\"\n\n\"I used to hate them but after seeing how much Patrick likes them, I've changed my mind.\"\n\nMy parents both looked at me, both of them focusing on my erection. \"I'd say he likes everything about you dear!\" mum said.\n\nJenny giggled and hers were the third pair of eyes to focus on my cock. \"How did you manage to keep things under control during the show?\" dad asked.\n\nI blushed as I replied. \"Um, it started alright and whenever I felt a twitch I began to try and distract myself with things like reciting the alphabet backwards but the more of Jenny that I saw the fewer things worked and I ended up being erect for most of the programme!\"\n\nDad laughed out loud, \"I remember using the alphabet thing the first time I felt an oncoming erection at a nudist resort!\"\n\nMum giggled, \"If I remember correctly it didn't work for you either!\"\n\nDad chuckled and then asked, \"What did you do? I can't remember seeing an erection on the show before.\"\n\n\"The first time it happened they sent me off to take care of it, but it was no use and I was stiff again a few minutes later. They interrupted recording and had some internal discussions before saying it was OK as the contract states they only can't use the footage if the glans is pointing upwards.\"\n\n\"Goodness! So was that the first time someone had an erection on the show?\"\n\n\"No, apparently it happens quite often but they stop filming and the guy takes care of things before they resume.\"\n\n\"But because of your penis shape they didn't do that?\" mum queried.\n\n\"Well they tried that, but it didn't work! So now you might want to reconsider telling everyone to watch the show.\"\n\n\"Why would I do that? I think it is wonderful and you have a very nice penis. I've always hated the fact that they hardly ever show erections on TV and that some nudists think they should be covered up. An erection is something natural and no different than a woman having erect nipples, no one should ever be ashamed of it.\"\n\nI was surprised by her attitude, but she made a valid point.\n\n\"What did you think of Patrick's arousal?\" dad asked Jenny.\n\n\"I was shocked at first but then realised it was a real compliment. I'd never expected a man to find me attractive and the fact he couldn't stop it meant a lot. It's part of the reason I picked him.\"\n\n\"I can see why!\", mum quipped.\n\n\"How about some drinks now?\" dad asked again.\n\nThis time there were a few takers and he asked me to help him in the kitchen. We left mum and Jenny to chat. As I helped dad with the drinks he said, \"She's a very lovely girl, you've done well.\"\n\n\"Thanks, and I know how lucky I am.\"\n\n\"So last night was the first time having sex for both of you?\"\n\nI blushed and nodded.\n\n\"From what I heard things went very well.\"\n\n\"Sorry about that, I didn't know girls were that loud.\"\n\nDad laughed, \"Don't apologize, it was rather nice to hear you at it and your mother is just as vocal.\"\n\nHe looked at my erection and said, \"That downward curve must run in the family. Your grandfather had the same bend and so do I!\"\n\nI looked at his cock which was still flaccid but with the tip somewhat exposed.\n\nHe saw me looking and said, \"I've been using all my techniques to keep it down but don't be offended if it happens at some point. Jenny's a really beautiful girl and nudist Asians are a rarity.\"\n\n\"Dad, don't worry about it! I'm not going to be offended if you get a boner. In fact, I'm, surprised it hasn't happened yet.\"\n\n\"What about Jenny, won't she mind?\"\n\n\"No, you heard her before, she'll take it as a compliment.\"\n\nHe nodded and smiled.\n\n\"But won't mum be upset?\"\n\n\"She's fine with it, it's not like it hasn't happened before!\"\n\nI wanted to ask what he meant but the drinks were done, and dad seemed eager to return to the ladies. As we stepped into the living room, we both froze as we were presented with an exceptional view.\n\nMum and Jenny were both bent over and seemed to be looking for something at the bottom of a chest of draws. Two quite different but equally incredible arses were facing us and exposing the most intimate details of their owners. Mum's bigger bottom revealed a pink puckered opening above a very neat cleft that was now somewhat parted and revealing her tiny pink lips. As we had a slightly sideways view, I could also see her large breasts hanging down and swinging slightly as she moved.\n\nI glanced at dad long enough to see he was also appreciating the display and that his penis was jerking as it swelled to a full erection. As he'd stated, it was just like mine in size and shape and now that his foreskin was fully retracted, looked almost identical!\n\nMy attention returned to the ladies, this time focusing on Jenny. Her surprisingly generous bottom was as pale as the rest of her skin and the two firm globes were smooth and flawless. Just like mum, her current position meant they were parted and showing her anus and pussy. Jenny's puckered opening was the same brownish shade as her longish pussy lips which had unfurled slightly, showing a glimpse of her moist pink insides.\n\nThe urge to drop my tray, rush up behind and bury my cock within her was almost too great to resist and I wondered if dad was feeling the same desires for mum.\n\nI don't know how long we stood there and stared but it was probably less than a minute before mum found what she was looking for and straightened up. Jenny did the same and it was then that they became aware of our presence.\n\nWe must have made quite a spectacle! Father and son standing naked, holding trays of drinks below which near-identical cocks stood proudly erect.\n\nThe ladies looked at each other then broke into a fit of giggles.\n\n\"Now that's the proper way to serve drinks!\", mum exclaimed in glee.\n\n\"Where do you want them?\" dad asked.\n\nMum and Jenny looked at each other before bursting into another fit of laughter.\n\nIt took us a moment to get the joke before we also joined in laughing.\n\n\"Now, now, ladies! Let's try and keep this civilized.\" dad said as he struggled to keep a straight face.\n\nOnce everyone was back under control mum said, \"How would you feel about taking this outside?\"\n\nHer question was addressed to Jenny and me. I knew our garden was quite private, with only one house overlooking the back garden so for me, there was no issue. Jenny surprised me by immediately agreeing without knowing this. She really did seem to be completely embracing nudism.\n\n\"Wonderful!\" mum said, grabbing Jenny's hand and leading her outdoors.\n\nDad and I were happy to follow and once again enjoyed the view of their amazing asses. Both seemed to add an extra wiggle as they walked and it was very appreciated.\n\nThe garden furniture, consisting of two large loungers and a couple of chairs were all in the sun so mum and Jenny began to rearrange things to let us sit in the shade. It was a pleasure to watch them doing this and I would happily have stood here all day. Once everything was to their satisfaction, dad and I placed our trays on the small table between the loungers.\n\n\"I want to show Jenny some family snaps, so you two can sit over there.\", mum said as she gestured towards one of the loungers.\n\nShe and Jenny sat next to each other as dad and I took our seats. The thing they'd been looking for earlier was a photo album. Dad and I sipped our drinks and watched them in silence.\n\n\"Oh, Patrick you look so sweet as a baby!\", Jenny gushed.\n\nThey continued through the album until mum said, \"Look, here he is at two years old. This was taken at a nudist resort in France.\""
    ],
    "authorname": "shygeek",
    "tags": [
        "gameshow",
        "virgin",
        "nudist",
        "family",
        "exhibitionism",
        "asian",
        "tiny-tits",
        "nipples",
        "naked",
        "attraction"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/naked-attraction"
}