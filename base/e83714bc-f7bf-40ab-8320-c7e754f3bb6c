{
    "title": "More Than Skin Deep",
    "pages": [
        "Lawrence's deep-set frown was illuminated harshly by the cold blue light of his computer monitor. He didn't like what he was seeing on his monitor. Didn't like it one bit. At nineteen, he would have watched it eagerly. At fifty, he knew he should turn it off, but he couldn't bring himself to do it. And the more he watched, the angrier he became.\n\nOn the other side of the hacked webcam, Mitch took another drag on his joint. He inhaled and held it. Fuck, it didn't get better than this. He passed it down to the pretty brunette kneeling down between his legs. Her head bobbing up and down on his cock. \n\n\"Hey babe, take a break from that joint,\" he said. \"And get a load of this one.\" \n\nHer mouth popped off his saliva coated member, leaving a dangling trail of her drool connecting it to her mouth as she pulled away.\n\n\"I don't know about this Mitch...\" Gloria said hesitantly, wiping her mouth with one hand and pumping at the base of his cock to keep him hard. She didn't smoke. Not cigarettes, and especially not marijauana. Mitch had offered many times, but she'd always refused.\n\n\"Everybody does it,\" Mitch said. \"Just a little toke. It'll make it even better for you. Being high while fucking is the best feeling in the world. You trust me, don't you?\"\n\nIt wasn't a matter of trust, Gloria thought as she took the joint. She knew she shouldn't, but she felt pressured. She took a short experimental drag.\n\n\"Deeper. Deeper. Don't exhale yet. Hold it. Hold it,\" Mitch encouraged before taking the joint back. \"Now get my cock down in that pretty mouth first.\"\n\nGloria's mouth swallowed Mitch's erect member. Bobbing back on it. Her pretty face turning more red by the second. She felt the cool numbing deep in her brain. Her eyes watered. A bit of thick spicy smoke escaped her nose. She gave a brief cough through her nose and then another. God how it burned. \n\nAlready high, Mitch enjoyed the sensation of Gloria's spasming throat as another cough escaped. He grabbed her pony tail and pushed her down harder than she wanted to go. \n\n\"Oh baby, take that cock,\" he groaned, pushing her head up and down. Fucking her pretty face.\n\nTears leaked from Gloria's bulging eyes as she choked on the smoke. Mitch's cock grew thick and pulsed. Again and again it twitched. She tried to cough only to have salty jizz shot into the back of her throat. Again and again he pushed it home, choking her with it, until finally he was spent. It was only then that Mitch finally let go of her pony tail .\n\nGloria's head flew up. She coughed. She gagged. She struggled not to lose her lunch. Sticky sperm covered her chin, her stomach, and her new breasts. \n\n\"Damn it Mitch,\" Gloria said her voice still a bit ragged from her abuse. But the high had already settled in and she couldn't stay but so angry over it. \"You know I don't like it when you do that.\"\n\nMitch took another hit. Let it out easy with just hint of a sputter. \"I don't make the rules,\" he said. \"You're the girl. I'm the man. And sometimes babe, sometimes a man just can't help himself and sometimes a girl's gotta take one for the team.\"\n\nGloria wasn't so sure about that. But Mitch was her first and only. She had lived without a boyfriend...had been damned unpopular for 99% of her eighteen years. Had been called zit face and flatsy. If she had to occasionally take one for the team, so be it. It was better the the lonely alternative. Still coughing slightly, Gloria dug a napkin from her purse to clean up the disgusting mess he had left of her. Starting with her full ripe breasts.\n\n\"No,\" Mitch said, his voice slow from his high. \"Rub it into them. It's good for the skin. Makes them nice and soft.\"\n\nWhat a perv Gloria thought, but she loved him. She rubbed the jizz into her big breasts. Mitch was more correct than he knew. The skhen would use it for nourishment.\n\nMitch sat transfixed. Watching her rub his slime over her large perfect breasts. Smushing them together for him so that those pink half dollar sized nipples were next to one anther. If it weren't for the jizz, he would have sucked those fat nipples there and then.\n\n\"Take another hit,\" he held the joint to her lips. \"But don't get any jizz on it.\"\n\nGloria inhaled the spicy smoke again, coughing. It made her feel good. Made her mind wander. To think, just three months ago a boy like Mitch would never have given her the time of day. Back then, Gloria was quiet and shy. She was ashamed of her appearance. She had acne. Her bust was flat and so was her ass. Her legs were bony. Then her daddy started working on the project and she had discovered what he was working on. And what he was working on was nothing short of miraculous. Miracle skin. Skhen. It could grow over her skin and hide the blemishes and sores. It could fill in and add where things needed to be added. It was awesome. \n\nNow her skin was clear. She attended another school where no one knew how unpopular she used to be. Her breasts were a perfect 36 C. Yet her body stayed slim and skinny. Her legs were toned. Now she hung out with the popular girls. She was dating Mitch...a bit of a bad boy...but all the other girls were jealous.\n\nWatching on his computer, hacked into his daughter's web cam, Gloria's dad Lawrence was tempted to burst into his daughter's room. But doing so would admit that he had been spying. Worse, it could result in a confrontation with Mitch.\n\nHis hands steepled, Lawrence was having second thoughts of what he had done....more now than ever. First, he never should have hacked his daughter's computer. But he had seen some evidence that suggested someone was sneaking in his house at night. He thought it might be espionage...someone trying to steal the secrets he was working on. But it had turned out to be a boy. A bad boy. The bastard was giving his daughter drugs...sex and who knew what. Making her suck him off. Well...he was going to put a stop to it. That was for damn sure. \n\n++++++++++++++++++\n\nWhen school let out the next day, Gloria slid into the passenger seat of the Mitch's Explorer. The moment the door closed, as usual his hands were busy feeling her up. Moving up her long legs. Moving beneath her short skirt. She blushed and looked around nervously. Tried in vain to fend off his advances, but he was so much stronger. Not that she didn't want him to feel her up. It felt nice. But not here. Not where someone from school could see. And especially not now. \n\n\"Hey babe, I've been thinking about you all day,\" Mitch said. \"Let's get those panties off.\"\n\n\"Come on Mitch,\" Gloria begged. \"Now isn't the time. I've got bad news.\"\n\n\"Gloria...you know what that outfit does to me,\" Mitch said. The evidence was sticking out about seven inches from the crotch of his pants. The little miniskirt she wore really did him in. He had bought the little pleated plaid number and several other for her from Fredericks of Hollywood. She had been too shy to wear them at first. But with encouragement and the proper motivation....she eventually gave in.\n\nBut now Mitch wanted more. \"Get 'em off babe, and the bra too....then I want to take you somewhere public.\"\n\nGod, that game again? She had to admit it was kinky enough when they did it two weeks ago. There in the mall. Nothing on beneath her little skirt. Her full breasts bouncing with every step. So many hungry eyes on her. Then finding ways to show herself to Mitch. With him following her up the stairs. Bending down and picking up something she dropped. He had taken her from behind in a dressing room. Delicious. It was great fun. But now, things weren't fun anymore. Tears welled in her eyes. Her daddy had ruined it. Had ruined everything! Goddamnit! \n\n\"Can you be serious for just one minute Mitch?\" Gloria said. \"I'm leaving on next week. For good.\"\n\nBy now Mitch had Gloria's panties off. He looked around quickly. Just a bunch of cars around. A few students here and there, but no one of any authority. His finger teased her pussy. Making her squirm. Making her wet. Then finally wormed its determined way in.\n\n\"Get real.\" Mitch said.\n\n\"I am real. My dad...my dad...\" Gloria stammered, tears welling in her pretty eyes. \"...He's sending me to a girl's school.\"\n\nThen Mitch saw Gloria's tears. It hit him suddenly. How had this happened? \"When?\" \n\n\"Monday morning.\"\n\n\"Fuck...\" It was enough to cool even Mitch's prodigious passions. \"What for?\"\n\n\"I think he knows about us...\"\n\n\"Double fuck...\" Mitch thought. Make that triple fuck. He had never had a girl with a body like Gloria's. And he didn't want to lose it. Not yet. \n\n\"Tell him no.\" Mitch suggested.\n\n\"I can't.\" Little did he know she already said no. But then Daddy said he would take out the little chip on her back. Then the skhen would die. Would shed like she was a snake. Then her face would be all pimply. Her breasts too small. Her nose too big. \n\nWould Mitch still love the old Gloria? Would anyone? She couldn't take the chance. Gloria agreed to go to the girls school. She had no other choice.\n\n\"What do we do?\" Mitch asked. Thinking wasn't his strong suit. \"Maybe I can sneak over at night?\"\n\n\"It's on the west coast Mitch...\" Then Gloria began to think. Sneak over. Could it possibly work? It was a long shot, but it was possible. But the odds were long. Very long.\n\n\"Mitch,\" she said. \"How would you like to be the only boy at an all girls school?\" \n\nMitch wasn't one for having a lot of thoughts. But he had them now. He pictured himself as a teacher at the girl's school. Gloria under the desk, sucking him off for first period. Then for second period, there would be some rich chick named Megan or Brittany. He'd bend her over the desk and spank that ass with a yard stick. Her rich CEO daddy thinking she was at some girl school chaste and sweet, but in reality Mitch would have his cock planted up his sweet little girl's tight arse. For lunch, he would find himself a couple of lesbos. There were always lesbos at girls schools. At least there were according to the porn he looked at online. The could lick each other on this desk and he'd put a cock in one's pussy, then take it out and make the other suck it awhile.\n\n\"You betcha!\" Mitch said. Besides, he wasn't doing anything anyway. He graduated last year and mostly did nothing all day. \"I'll take that one for the team!\"\n\n\"Oh Mitch!\" Gloria was elated. She gave him a big kiss. Then at home, she thanked him again in another way. By going to her knees and sucking him off. Afterwards she tried to kiss him again but he held his hand over her mouth.\n\n\"You know I don't kiss after,\" he said.\n\nGloria kissed his hand and sucked a finger. Captured a bit of bittersweet sticky jism with her tongue and licked it clean. Guys didn't kiss after girls went down. She had forgotten. Maybe later. Maybe later they could kiss all the time. But first she had plans ... so many plans and so little time.\n\n+++++++++++++++++++++++++++++\n\n\"Daddy, can you check my chip before I go to the new school,\" Gloria said. \"I won't get to see you for several months. Besides, I feel kind of funny.\"\n\n\"You're probably just scared....going to a new school and all.\" Lawrence said. He had expected a bit more of a battle about Gloria going off to school. But, after a few tear filled arguments, she seemed resigned to her future. She didn't know it now, but she'd thank him for this in a few more years. Checking her chip was the least he could do. \"But since you are here, let me check you out.\"\n\nGloria took off her shirt and turned around. Lawrence felt around on her back until he felt the small indention. He held an transmitter over it and keyed in the code. A circle began to emerge from her back. It was the chip. He removed it and took it over to a specialized computer. Read the results.\n\n\"Hmmmmm...\" he said. \"Everything checks out. If you are feeling strange, perhaps you could go to your new school without the um...\"\n\n\"No daddy...\" Tears welled in his baby girl's eyes. \"Never.\"\n\n\"Okay,\" he said, wishing he had never put the chip in her in the first place. But she seemed so much happier. Perhaps it was worth it. \"Let me clone the skinware and adjust some of the parameters.\"\n\nHe entered some new values this time. His daughter's breasts were a little too large...they were attracting the wrong sort of attention. She didn't need to know. Anyway, best not to think about Mitch. That boy was history. Gloria might pine and wait, but that boy never would. He'd be on to the next man's daughter in a few weeks. \n\n\"Daddy,\" Gloria said. \"What would happen if say...I had an extra finger. Six instead of five. What would the chip do? Would the skhen try to make me have five fingers?\"\n\n\"Oh it wouldn't matter to the chip. It would treat it like all your other fingers. It ignores everything except for what it's been programmed to adjust. In your case that's....\"\n\n\"My breasts....my nose...and my acne,\" Gloria finished.\n\n\"Exactly,\" Lawrence said. \"Why? Is there something you aren't telling me?\"\n\nThere were so many things she wasn't telling him. And most of them would end up with her chip being taken away. And it wasn't his chip anymore. It was hers. Hers. And it was more her chip than even she knew. \n\n\"Nothing daddy,\" Gloria said. \"I was just curious. It's okay to be curious isn't it? It's so very interesting.\"\n\n\"It is dear,\" Lawrence said. \"Your mother would be...your mother would be so proud of the woman you've become.\"\n\nThe scientist was so caught up thinking about his departed wife and that his daughter would be farther away then ever, he didn't realize that while Gloria hugged him, her hands were busy behind his back. Unhooking her old chip. Putting it in her pocket. Placing a new one in its place. She had planned to get him to go out and get her a soda. But, this was easy. So easy. She felt just a little bit guilty. But it couldn't be help. She was in love. And love makes you do crazy things. Now all she had to do was put it on Mitch's back with a little adhesive and a bit of her own skhen.\n\n+++++++++++++++++++++++++++++++++++++ The chip had been set again. The chip grew hot as it utilized all its processors. It was upset, although, the chip didn't really feel human emotions. It thought in terms of its job and its project. It had been given a job...a set of parameters. Then finally a project. It had melded with the project. Made the project conform to those parameters. It was one of the most advanced computers ever made, in only the size of a silver dollar. It had even learned how to achieve its parameters in more efficient ways than it was originally programmed to do. For instance, the project was supposed to have larger mounds. It had been programmed to grow the skhen to produce the desired results. Yet, that seemed inefficient, when the skhen could release targeted hormones and achieve the same result. The skhen was supposed to cover and hide facial blemishes. But why not have the skhen attack the bacteria and remove the cause. Then the skhen had less work to do. The chip didn't like to do extra work. \n\nEverything had been going so well. That is ...until something had activated a subroutine on the chip and removed it from the project. Then its project had been ruined. All its work had been in vain. The bacteria was back. The large mounds had disappeared again. No this wouldn't do at all.\n\nThe chip disabled the subroutines that allowed it to be removed from the project. So much work, so little skhen. It told the skhen to multiply. This time the chip was going to be smarter...more efficient than ever before. It would need to be. There was so much work to do.\n\n++++++++++++++++++++++++ \n\n\"Ahh..ahhh....I sure hope you know what you are doing.\" Mitch gasped, his pelvis thrusting, oh yeah, nice and deep. \"I'm gonna be in so much trouble with mah...mah... old man. You know...I am basically running..umph.. away.\" \n\nGloria's knees burned on the rough carpet in the back of his Explorer. Mitch had her by her pony tail again, pulling her back on that cock. Back and forth. Back and forth. Working that tight pussy. God he loved this view. Gloria on her hands and knees. A short mini-skirt pulled inside out now. His hands palming that perfectly formed ass, spreading it, making that cute little asshole clench and pucker. Watching the lips of her pretty pussy move in and out with the motion of his cock. Fucking her good. Exploring that hot little bitch.\n\n\"And that thing you put on my back...\" Mitch said. \"What was mmmm...ah....up...with....that? Mmmm...oh God...oh God....\"\n\nMitch's balls tightened. Fuck yeah. Oh fuck yeah. That hot pussy milking his cock. Emptying it. He soon forgot all about the thing she put on his back and his old man. \n\nUsually, Gloria was content to wait underneath Mitch after he climaxed. To hold him tight. To kiss his well muscled shoulders and chest. But today, she was feeling hot. Tingly in a more profound way than she had been before. Because usually she felt tingly almost all the time. She had ever since the chip and the skhen. It made her want to touch herself. Yet when she did, it was like an itch that couldn't be scratched. Until today.\n\n\"Umph...\" Mitch groaned. \"What are you doing?\"\n\nWhat was Gloria up to? Didn't she know he felt like relaxing. Fucking was hard work and today it was harder than usual. A bit hard to catch his breath. Besides, he felt a little unsettled. His skin ....so scratchy. Then Gloria was climbing up him.\n\n\"Are you crazy?\" he said, pushing her slim body back down.\n\nCrazy. Gloria thought....yes...just a bit. Guys don't do that she remembered. She slid back down. Rubbed her wet cum soaked slit against his softening cock. \n\n\"Baby...I just came...\" Mitch groaned.\n\n\"Come on honey,\" Gloria said. She didn't know what had gotten into herself. For once she felt like her urges were in control of her. Little did she know, her new chip was busy. Her dad had adjusted the parameters...to decrease the size of her breasts. It was taking a shortcut. Flooding her bloodstream with male hormones.\n\nGloria knew none of this. She only knew that she couldn't stop. Then she said something that she had never said before. Something Mitch always said. \"Come on baby....take one for the team.\" \n\nThen she pressed down on her breasts. Making them so full and hard. She knew the effect they had on Mitch. \"Don't I turn you on?\"\n\nMitch was still overly sensitive. He wasn't ready. And yet...and yet his cock hardened. Gloria slipped it inside. Began rocking back and forth. \n\nOh yes. This is nice. Gloria thought. Mitch seemed to be lasting a bit longer too. She rode his cock. Working herself on it. I think I like it on top. Yes, I most certainly do, she thought. He can't very well pull my pony tail like this and my knees don't hurt this way at all.\n\nThen she felt her loins begin to boil. The pleasure to well up. She took hold of Mitch's nipples...gave them a little twist.\n\n\"Ahhhh!\" Mitch gasped. His hips involuntarily jerking in response. Ouch! That fucking hurt! He had been too embarrassed to say anything, but his nipples had hurt all day. And now, Jesus...so sensitive. So painfully sensitive. Worse, it seemed Gloria liked how it made him gasp and jerk in response. She assumed that he liked it. But no. No Mitch didn't like it. No, not one bit. \n\nSo she pinched them again. Tweaked them and pulled them this time with conscious deliberation. And each time, Mitch would gasp and thrust. It was involuntary. The thrusting was one thing, but the gasping.... God it was embarrassing. The only involuntary thing Mitch had experienced before was coming and sneezing. This was new territory...and he didn't like it. It scared him a little.\n\nBut Gloria liked it. Mitch's every gasp and thrust lit a fire in her sex. God, how she had come. It was amazing. Then finally her climax was done. She lay on top of him. Her fingertips still against his nipples.\n\nPoor Mitch couldn't get those fingers out of his mind. Or his aching nipples. So sensitive. Please don't pinch me again, he thought over and over again. Her sweaty body laying over his on. A little heavy. A little hard to breathe. He kept his silence. Men didn't complain of such things. Men only complained when they weren't getting enough pussy. At least that's what his old man said.",
        "\"Oh baby...that was great...\" Gloria basked in the glow she felt. She had climaxed. For the first time. She had thought she had climaxed before, but not like that. Now that she had felt it, she was determined to have more. So many more. But in order for that to happen, plans had to be made. Mitch was going with her. Her dad couldn't control her. She'd show him.\n\n\"You have the plane ticket?\" Gloria asked.\n\n\"Yes...\" Mitch tried to shift underneath Gloria, but she had him trapped between her legs. The cum was leaking from her, and onto his stomach. Cooling. Drying. It felt disturbing. Gross. Uncomfortable. \n\n\"And the address?\" \n\n\"Yes...\"\n\n\"You'll call me the minute you land.\"\n\n\"Oh yes...\" Mitch said. \"But I still don't understand. How exactly is this going to work?\"\n\n\"Oh you'll see baby,\" Gloria said. \"You'll see. But I admit I'm a little scared of you being there with all those other girls. What if they are prettier and smarter than me?\"\n\n\"No one is as pretty as you,\" Mitch said and meant it. But there were girls prettier in different ways. Some girls had pretty blonde hair. Some girls had a fat ass made for a good fucking. Pale girls that wore black fingernail polish. Girls that loved high heels. He had tried getting Gloria to wear some,but as yet she wouldn't. He was going to buy her some. Give her a little spanking. Oh she'd wear them with the right motivation. But that was a whole lot of trouble...especially with a whole school full of nothing but girls. Girls who liked to fuck. A whole school of them. Fuck yeah!\n\n\"You do love me don't you Mitch?\" Gloria asked.\n\n\"Oh yeah baby,\" Mitch said. \"I love you.\" I love that hot ass bod and these bouncy titties, he thought. Not able to help himself he leaned up and sucked on those fat nipples. Making Gloria gasp and moan.\n\nThen she did something totally unexpected. She bent down and sucked on his nipples. And then something even more unexpected happened. Mitch gasped. He writhed. And then. He moaned. It just found it's way out. When he first heard it, he thought it had come from Gloria.\n\n\"What was that sound?\" Gloria teased. \"Was that a girly moan I heard Mitchie-poo?\" \n\n\"No...\" Mitch gasped. He struggled to wrap his brain around the sound he just heard. No it couldn't have been him. The sound wasn't masculine, but feminine. It must have come from Gloria. He didn't like her trying to place the blame on him, nor did he like the cutsie little nickname she labeled him with. \"Stop playing. That was you.\"\n\n\"Are you sure?\" Gloria asked with a devilish grin. \"Absotively positive?\"\n\n\"Of course,\" Mitch said with surety.\n\nGloria licked her lips, then bent and sucked his nipples again. And Mitch gave a squirm. He bit his lip. He could feel his body reacting in ways it never had before. The moan had to have come from Gloria. It just had to. But he stilled his lips and tongue just in case. No, he wouldn't shame himself in such a fashion. Not until he knew for sure.\n\nThen Gloria took on of those hard little nubs and gave it the tiniest little nibble.\n\nOh God, her teeth. Not sharp, but a different sensation. Like lightning. It left him feeling powerless. And Mitch couldn't stop his body from writhing and squirming beneath her. Worse, he felt his lips open, no matter how hard he clenched them. Nor could he keep the wind from escaping his lungs. \n\nGloria heard it again. A gasp and a moan. Not just any moan. But a girly moan. Most definitely. Oh how he blushed.\n\n\"I guess you were right,\" Gloria said, to save Mitch the embarrassment. Then she inspected his nipples more closely. Yes, he was developing. But his voice. She hadn't expected his voice to change. Was that possible? It was only skhen. Perhaps it had been that way all along and she had never noticed.\n\nAnd Mitch rolled out from under Gloria and quickly put his shirt back on. He felt shamed, but tried not to think of it. Besides, soon he'd be surrounded by girls. Sexy fuckable girls and he'd be the only man in the bunch. \n\n++++++++++++++++++++++++++++\n\nA week later, Mitch woke as usual. He took a shower like every other morning. He was hard as usual. Even more so now that he was separated from Gloria. He wrapped his fingers around his thick cock and pumped it a few time. Maybe he'd give it a go there in the shower. Then he soaped up his chest just like always. But there he made new discovery.\n\n\"Holy shit!\" His hard pecs weren't so hard anymore. They were squishy. His nipples swollen. Sensitive. Painfully so. The soap hit the floor with a sharp rap. He dashed out of the shower to examine himself in the mirror...in such a hurry that he slipped and fell. He didn't land hard, but it was a blow to his pride. It was as if his mind had lost track of his body. Soapy and wet, his bottom aching, he got up and stood in front of the mirror, a puddle of water forming beneath his feet.\n\nFuck. He looked even worse in the mirror. He had mounds on his chest. Small A cups. Bad enough, but his nipples were puffy. Swollen. Hard. Still aching. Itchy. Am I retaining water? He wondered. Was it from Gloria twisting and messing from before? To be honest, they hadn't felt right since. Goddamnit! This was horrible. How long till they went back down? He was going to meet Gloria today, and he was wondering if he should keep his shirt on when they fucked.\n\nHis stomach growled. Goddamn he was hungry. Hungrier than he had been since his growing years. He'd been that way for several days, just couldn't get enough food.\n\nHe finished the shower. Bruised and swollen. That must be it. He stopped at McDonald's on the way to the airport and ate enough breakfast for four people.\n\nHe wasn't aware of it, but the skhen had reached critical mass. It was no longer dividing exponentially. Now it was specializing. A few tens of thousands Egyptians built the pyramids. But outside of Mitch's body...there were millions...billions of cells...working...building.\n\nMitch boarded the plane. He was having second thoughts. He was scared. He was nineteen...not really running away when you are nineteen. Besides, he had no love for the old man. He was a tough man to live with. His mother had left when he was 7.\n\nHe scratched his chest and his back. God how he itched. Was he coming down with something?\n\n++++++++++++++++++++++++++++==\n\nThe chip was busy. It was making large changes now. It remembered in the early days of the project and how by releasing certain chemicals, the project would not become so agitated by the stimulus it was causing.\n\nA mixture of dopamine and seratonin passed through the membrane of Mitch's skin. The plane's engines were so calming. He fell asleep. He dreamt of naked school girls.\n\nThe chip was thinking of a problem. The project had been deformed. Not only had its work been discarded, but the project had been rearranged. It pulled up the projects schematics. It hadn't been programmed to make actual changes, but it hadn't been programmed not to either. It got to work with the skhen. It started by putting a smooth layer of skin over the offending appendage. Then it added a little definition. From the outside it looked the same. But what of the inside. The chip grew warm as all its processors began to work on this new problem. It had plenty of time and it never slept.\n\n+++++++++++++++++++++++++++++=\n\nMitch awoke as the plane landed. His mouth felt like a piece of dry sandpaper. He had no idea the changes that had been made as he slept. But after the long flight, his bladder was filled to bursting. He had to piss like a racehorse. He practically ran to the restroom.\n\nThe closer he came to the urinal, the worse the urge. It felt like his eyeballs were floating. He quickly untied and pulled down the front of his jogging pants. Next he pulled down the front of his underwear. He had made it in time. Just...but then he felt a warm feeling trailing down his legs. But something scared him even more. Seriously terrified him. His penis wasn't where it was expected. Where he had come to expect it these nineteen years.\n\n\"Oh shit!\" he gasped and then held a hand to his mouth. It wasn't his voice. He looked back down, past his fly, and into his underwear. His cock. It was gone. The urine kept coming. Saturating his running pants.\n\n\"Miss,\" the man at the next urinal said. His eyes leering at Mitch's smooth crotch. \"This is the mens room.\"\n\nOh God - oh God, Mitch dashed into an unoccupied stall. Shut and locked the door. He dropped his pants. Shucked down his underwear. Shit fuck. He felt around. His cock was gone. Worse, there were...there were folds down there. \n\n\"Miss are you okay?\" There was a knocking on the door.\n\n\"I really had to go,\" he said, still not recognizing his own voice.\n\n'Hell no I'm not okay,' Mitch thought. I need a fucking ambulance. A team of doctors. A fucking magician. But here he was in this strange city. Only knowing one person. Then his brain began to work on a certain puzzle. A girls school. The plan. The thing on his back. Could it be? It couldn't. Such things weren't possible. He would have heard.\n\nYet, he fumbled around on his back. He couldn't hardly reach back there, much less feel something. He had to get Gloria. She could figure this out. Make some sense of it. He dug a pair of jeans and some clean underwear from his suitcase. Things kept getting worse. They jeans didn't fit. It was as if his ass had grown. He bent around and checked. Fuck! It was bigger. Rounder. Fleshy. Sexy. Shit. He blinked and tears rolled down his cheeks. \n\nCrying? Men don't cry. They bite down on it. They toughen up. That's what his old man would say. And Mitch was able to dry his tears. He reflected on his situation. The jogging pants were ruined. And the restroom was busier than grand central station, otherwise he would wash them. His swimtrunks. That was the ticket. He put them on. \n\nThe knocking was persistent. \n\n\"Are you sure you are okay,\" a voice said.\n\n\"Almost done,\" Mitch said. Fuck, the swimtrunks were too tight. Much too tight. They hugged his rear cheeks. They dug into his crotch. He looked down. Christ. A camel toe. A fucking camel toe. He was terrified...and yet looking at himself he was growing turned on.\n\nI can't go out with a camel toe, he thought. There was one other option. Although he dreaded it. He had bought a little present for Gloria. A new skirt. A mini skirt. Just the kind he liked. But pulling them up his legs...now smooth. Sexy. God damned, even his hair was gone. Was this a dream? He pinched himself. It hurt.\n\nGod, even if it was a dream, he felt...he felt... goddamn vulnerable. If only..if only he had bought Gloria a longer skirt. His mind wandered back. Back to the a day when he was taking Gloria to school. \n\n\"Why don't you ever wear the skirts I bought you?\" he asked.\n\n\"I do,\" Gloria said. \"I wore one for you just last night.\"\n\n\"But I want you to wear them to school.\" Mitch urged.\n\n\"They are too small for me. Besides, you graduated last year.\" Gloria said with uncertainty. She was still getting used to her new body. Not so very long ago if she had worn such a short skirt, she would have been laughed out of the school. It was nice, an ego boost to have a boyfriend that wanted her to look sexy, but she wasn't ready for showing everyone else.\n\n\"Come here little lady,\" Mitch said taking her by the arm and pulling her towards him. It was something his old man had told him. Sometimes a girl needs a lesson in who's boss. And a bare assed spank over the knee is a good way to teach it.\n\nGloria squirmed, but soon she was helpless and over Mitch's lap.\n\n\"No,\" Gloria muttered, hating feeling so helpless, yet at the same time, growing wet and tingly in her loins. She held tightly to her pants, but soon her hands were held behind her back. Then her pants pulled down. Her panties down at her knees. She never felt so helpless. Taught who was the boss.\n\nAfterwards, Mitch tossed her pants from the window of his SUV...and then took off.\n\nWith nothing on but a small pair of panties, another gift from Mitch, she fumed. \n\n\"You egotistical bastard,\" Gloria said, her arms crossed over her chest. \"Take me home. Now.\"\n\n\"Nope. I'm taking you to school,\" Mitch said. \"I know how serious you take your studies.\"\n\n\"Please Mitch.\" Gloria begged, her anger quickly giving way to fear at the hopelessness of her vulnerable situation sank in. She hated this feeling. Hated how her body betrayed her and made her wet and tingly. \"Look...I'll ... I'll do anything you want.\" \n\nHer hand moved over his crotch. Massaging his hardness.\n\n\"Will you wear that little skirt I wanted you to wear?\" Mitch asked.\n\n\"Yes....but...I just don't understand why you want me to. \" She didn't like it. However, they were getting closer and closer to school A short skirt she could explain. Wearing nothing but a thong...that she couldn't.\n\n\"Because I like the thought of you in a short skirt,\" Mitch grinned. \"Now say please.\"\n\n\"Please,\" Gloria's cheeks turned a bright red to match the cheeks of her freshly spanked bottom.\n\n\"Climb in the back,\" Mitch said. \"There's a bag with a skirt in it. I bought it just for you.\"\n\nIt was terrifying - and a turn on. Having to make sure no one saw her climb over the back seat while she was nearly naked. What sort of skirt would it be? It was short, just as short as the one she had worn privately for Mitch. Once it was on, she realized how short it was. It barely covered her ass. It would be a struggle to wear it all day without someone seeing something they oughtn't. \n\n\"Now come up here and suck me.\"\n\nGloria obediently climbed back over. Freed Mitch's hard cock. Took it in her mouth. Began to bob up and down with experience. Jacking him at the same time. It wan't long before she was swallowing a full load of salty come. Finally, they arrived at school and Mitch dropped her off. She went over to Mitch's open window. \n\n\"I'm so pissed off at you,\" Gloria said. \"I don't think you deserve a kiss.\"\n\nBut she kissed him anyway. On the cheek, because guys didn't kiss after. A cold breeze blew up her skirt, a cold reminder of how vulnerable she was.\n\n\"I want you hot for me by the end of the day,\" Mitch said. \"You have me turned on thinking about you in class with your little skirt. Everyone looking at my girl and wanting her.\"\n\nAnd she was. Since that day, she had taken to wearing the short mini skirts every few days. However, they were skirts she picked out, since Mitch's were always too short. Those she saved for him alone. \n\nNow the roles were reversed. And it was Mitch feeling so very terrified, embarrassed, and vulnerable.\n\nMitch looked down at his own skirt. It was a bit longer than the skirt Gloria had worn. Her skirt was tighter, showed off her ass and legs, it even hugged tight to her abdomen, showing off her sexy abdomen. Though Mitch's skirt was longer and not as tight, it had pleats at the bottom that made the short garment have a mind of its own. How had this happened? It was impossible. And fuck, the bastard was still knocking on the goddamned door. What a nosy fucking asshole. He was temped to punch the guy, but in his compromised state he decided against it.\n\n\"All finished,\" Mitch took off like a rocket. His cheeks grew red. He was sweating. Every man in the restroom watched him exit. Looked at his chest, his ass, his legs....his flirty little skirt. It was like an advertisement, a badge....look at me - check me out - I'm hot - the skirt screamed. \n\nOnce outside, he immediately headed for the women's restroom. They didn't even give him a second glance. He took out a t-shirt from his bag, wet it at the sink, and cleaned up in a stall. After that, he called Gloria. Please be there. Please be there. He thought as the phone rang and rang.\n\n\"Hey Mitch!\" Gloria said. \"Are you here?\"\n\n\"Gloria,\" Mitch said. His chin began to tremble. \"I'm at the airport. But I'm in a serious fix.\"\n\n\"Who is this?\" Gloria asked. She didn't recognize the voice on the phone. It certainly wasn't Mitch. \"Is this some kind of joke?\"\n\n\"It's no joke...\" Mitch said, and then he caught someone staring at his chest. He looked down. God, they were bigger too. He had nipples now. Hard pebbles staining against the front of his shirt. Crinkling and hardening in the cold airport air. He didn't own a bra. Don't cry. Can't cry. He told himself. But once begun the tears fell like rain. \"Something has happened to me. I'm changing and ...and I'm scared.\"\n\nGloria's mind raced. He should be changing, but not this soon. It took over a month for her changes to complete. She was going to sneak him in and then wait for the changes to come in enough to fool the people at school. But his voice shouldn't change. Hers didn't. Just a bigger bust, clear skin and maybe some changes on his nose. According to her father, the rest shouldn't change at all.\n\n\"I'll be there in two hours. What gate are you at?\"\n\n\"Four.\"\n\nPoor Mitch went outside to wait. The wind tossed his flirty little skirt. If he held the back, the front would blow. If he held the front, it was the back that exposed him. Mitch wasn't a girl only worried about some guy getting a flash of panties...he was a guy and each breeze didn't just expose his tighty whities, it showed anyone looking that he was no longer a man. He began to see why Gloria hadn't liked wearing the little skirt. It was a lot of trouble. He tried to sit to keep from having to worry about the wind, but he hadn't the training that other girls have. The hot metal bench warmed this thighs the first try. He gasped and sat down again, this time taking care to hold the back of the skirt down as he sat. Then he caught some lecherous old man staring at his crotch. Only then realizing he could no longer sit the way he had always sat with legs apart. He sat down properly now, one leg over the other, he turned them to the side. In which case, any woman knows to hold her hem in place. But not poor Mitch. \n\nThe old man continued to stare. Such smooth thighs. What a looker. So young. All the girls were sluts these days, but he didn't mind. Not one bit. the sluttier they were, the more they showed. Like this one here, God, he could see her panties between her slightly spread legs and though her hands kept the hem firmly clutched within her white-knuckled grasp, the wind had it's way with the remainder. She didn't have much up top, but with no bra, what was there was displayed for everyone to see. Her nipples stood out from her thin T-shirt like pencil erasers. Such a treat. Nice and hard. She was a slut for sure.\n\nIt was a long wait and every man that passed seemed to want to start up a conversation with Mitch. Where are you from? How long are you here for? Blah..blah..blah.. Jesus, wouldn't they leave him alone? Staring at his chest and at his legs. He would have left and come back, only he was afraid of missing Gloria. God, he needed her now. If he knew what she was driving, he could be more discreet. Instead of standing there looking intently at every driver to go by.\n\nFinally, he saw Gloria driving slowly up in a borrowed car.\n\nMitch stood up and waved. Gloria kept going. Not even looking in his direction. \n\n\"Over here!\" Mitch shouted, the wind picking up his short skirt once again. He wrestled it down, but Gloria was kept driving. She had seen him, but kept going.\n\nMitch had to make a choice, save his modesty and pray that Gloria would come back. Or throw caution and pride into the wind. He let go the hem of the skirt and the wind tossed the light fabric about like a kite, exposing an expanse of shapely thigh and a bit of the bottom swell of plump cheek, but Mitch paid it no mind. He needed to get Gloria's attention before she drove to far to notice him.\n\nMitch waved frantically. He hopped up and down. He felt his chest bounce achingly. He could feel every eye on him. Drawing extra attention to himself was the last thing he wanted at the moment, but he had no choice in the matter. His face turned a bright red as Mitch contemplated the spectacle he was making of himself. But at last Gloria had seen him.",
        "Gloria couldn't help but notice. Her eyes were glued to the girl, just like every other free pair of eyes within distance of Mitch. At first thinking, what's up with this chick? Bouncing up and down. Making such a spectacle of herself. Her pert breasts jiggling unencumbered by a bra. Her short skirt blowing in the wind, showing off a delightful pair of sexy thighs. My God, what sort of girl did somethings like that? It must have been a long trip...she must be very eager to see her boyfriend again, Gloria thought. She grew a bit tingly as she thought of Mitch. She missed him. And he'd seemed so frantic when he called. She hoped everything was okay.\n\nThen she noticed the girl's panties were visible to anyone looking. It was the panties that gave it away. They looked like men's underwear. BVDs. A little kinky. Like everyone else, her eyes had drawn magnetically to the girls unencumbered breasts bouncing so invitingly as she hopped and waved. To the dark pink of her nipples that was visible through the stretched thin fabric. To the tight hard nipples. It was then, that she looked more closely at the girl's t-shirt. My God, Mitch had a shirt just like that. What were the odds? They would be astronomical.\n\nGloria's eyes widened in shock. Holy shit! Could it be? Her car lurched to a stop, the front wheel running over the curb.\n\nEyes wide, and mouth open in stunned surprise, Gloria watched as the pretty girl rolled her suitcase to the car, her cheeks a bright red, wearing that sexy little skirt the Mitch always liked. She kept it pressed down now, but earlier, not just Gloria,but everyone had seen her tightie whities. Had seen her bounce and jiggle. My God, had seen everything. \n\nGloria popped the trunk. Mitch lugged the suitcase into it. Was it his imagination, or was it heavier than before? He sat down inside it. Neglecting to pull the back of the skirt down beneath him and his legs spread boy style, Mitch was showing off more than he realized. But that wasn't what matter. Now he was safe. Safe at last.\n\n\"Mitch?\" Gloria asked. \"Is ... is that you?\"\n\n\"It's me,\" Mitch said. The tears started flowing again. In a broken voice he whispered. \"I'm hoping...I'm hoping you know what's happening to me. Otherwise I'm fucked.\"\n\n\"I may know something....but this is...this is totally unexpected.\" Gloria said as she looked once again at the girl sitting next to her. A girl that used to be her boyfriend.\n\nOn the way to the school Gloria told Mitch what she knew. She told him of the chip. How she expected he would develop a rack. Then he could go to school with her. Pretending to be her sister. She had already laid the groundwork. Her dorm room, once a single, now had two twin beds. She had planned for them to stay there. To have sex. Be together. Then once the year ended, she could get the transmitter from her dad take out the chip. In a few weeks he'd shed his skhen like a snake and be right back the way he was.\n\n\"I want to be changed back now,\" Mitch said. \"Right now. This was a fucking bad idea. A really fucking bad idea. How could you even imagine...even think that I would want this?\"\n\n\"I didn't know it would be like this. As far as your first question goes...well we can't.\" Gloria said. \"I stole the chip. It's government property. If I go back now, we can get into a lot of trouble. Serious trouble. Besides, it can only be removed at the lab.\"\n\n\"What lab?\"\n\n\"My dad's lab. It's the only one that will do.\"\n\n\"Christmas break then,\" Mitch said.\n\n\"What?\" \n\n\"I can't wait until the summer.\" Mitch said. He shivered. Christmas felt like forever. \"Christmas break. We get the transmitter thing back on Christmas break. I want to be back the way I was. When you said I could sneak in over here, I though I would be a teacher or something. This? This is too much. This is way too much.\" \n\n\"But I want to be with you,\" Gloria whined stroking Mitch's now smooth thigh, then up further, curious to see what was beneath those BVDs.\n\n\"We can wait,\" Mitch said, snapping his legs shut and pulling them safely out of reach. It was the first smart thing he had said in quite some time. \"Only six months and we'll be together again.\"\n\n\"Okay,\" Gloria said. \"Christmas break. We can do it then. Piece of cake. But first, let's see what's going on as soon as we get back to school. Maybe we can do something to fix you today.\"\n\nThey arrived at the girls school. Mitch was impressed. McCollough school for girls. Looked more like a castle. Ironwork surrounded the bright green lawn. They took the suitcases to Gloria's room. Once inside she locked the door. She walked up to Mitch. Kissed him. She took hold of his T-shirt.\n\n\"What are you doing?\" Mitch said, his voice high and distressed.\n\n\"I need to examine you,\" Gloria said. \"To see what is going on. What's your problem anyway? I've seen you hundreds of times.\"\n\nMitch blushed. \"I'm just...embarrassed. Besides...you .. ah... haven't seen me like this.\" He shouldn't be having these feelings. He wasn't shy. Yet, he had become a blushing rose as his body developed these new hills and valleys. Though the shame burned deeply, Mitch knew this was the only way he had out of this terrible fix he found himself in. \n\nHe bit his lip and closed his eyes, his arms raised up, while Gloria took the T-shirt off. \n\n\"Your nipples are only a bit swollen,\" Gloria said. \"It seems your face and voice have had the most changes.\"\n\nThen Mitch put his arms down. His breasts grew more full. Pert. Lovely. About the size Gloria had been before the chip. \n\n\"Oh they have grown. No need to be shy Mitch,\" Gloria cupped each lovely globe. Weighing them with her hands. \"It's not like they are real...well you know what I mean...not really real.\"\n\nBut they felt real enough to Mitch. Especially when Gloria's fingers found puffy sensitive nipples and rubbed them gently, causing them to go hard and stiff. To ache. To make his legs feel like jelly. To make goosebumps come up on his arms. And then...then before he could even think to stop it, a gasp escaped his lips. A very feminine gasp. \n\nMitch's hands flew up and covered his breasts. \"Stop,' he warned Gloria.\n\n\"Your breasts are cute. You are very fetching.\" She giggled as she tugged at Mitch's wrists.\n\nMitch pulled back quickly. \n\n\"What's wrong?\" asked Gloria.\n\n\"I..I don't want to be cute...or fetching.\" And he damned sure didn't want a girl to giggle when she looked at him.\n\n\"Oh come on Mitchie, I was only teasing,\" Gloria said. \"I meant handsome. You are ruggedly handsome. A real stud muffin. Now lets see the rest.\"\n\nBut Mitch could tell by the laugh in Gloria's voice that she wasn't being truthful. That she was humoring him. He wasn't rugged, but cute...fetching. And she had never called him Mitchie before. Ever.\n\nThen Gloria reached for his skirt. He grabbed her wrists.\n\n\"No.\" Mitch said.\n\n\"Stop being a baby about it,\" Gloria said. And then she kept pulling down. Stripping him of the short skirt and his underwear. He had been using all his strength. He couldnt' believe it, but Gloria was the stronger of the two. Mitch wasn't the only one to notice. Mitch was naked now. Breathing heavy. Almost panting. Gloria held both his wrists behind his back. With one hand! Gloria smiled as she realized it. Things had changed. The balance of power had shifted. Now, she was the boss. She quickly took stock...yes she liked the feeling....powerful. She felt powerful. \n\n\"If you keep acting like a baby,\" Gloria said. \"I will put you over my knee and spank you. Just like you used to do to me. Do you care to try me Mitchie?\"\n\nMitch blushed a beet red. It cost him quite a bit of pride, but he was naked, both hands trapped behind his back, he was just barely keeping his modesty intact by facing away from Gloria. Worse, all that struggling and Gloria didn't seem to be breaking a sweat. There was really no other option. So much pride. He swallowed a bit of it when he murmured a brief \"No.\"\n\nGloria sat Mitch on the bed with a couple of pillows behind his back. She rolled a chair up to the bed and sat down in front of him.\n\n\"What are you doing?\" Mitch whispered. Hands pressed firmly over his bare crotch as Gloria took one ankle and then another, lifting them up and then spreading them apart. His body started to tremble despite himself.\n\n\"I need to see everything,\" Gloria said. \"Now move your hands.\"\n\n\"I can't do this Gloria.\" Mitch whined. \"Please..you don't understand how embarrassing this is...\" Dear God, his hands hiding his shame, and then he discovered yet one more problem to worry about. He began to feel a very unwanted feeling. A tinglyness. Down below. But this time inside.\n\n\"I've seen it a hundred times,\" Gloria said, her patience evaporating. He looked sexy as a girl. Yet this sudden shyness was even more of a turn on. It made Gloria wet. Hot. Her nostrils flared. She couldn't wait to get on top of him and ride that sweet cock, pinch his cute little nippls until she came and came. \"Now move those hands and let me see you.\"\n\n\"But you don't understand.\" Mitch's chin trembled. The tears began to flow. His cock. His sweet cock. The thing that made him the boyfriend and Gloria the girlfriend....was gone. And now Gloria pulled on his wrists. Exposing him. \n\n\"Dear God...it's gone,\" Gloria said. Then there was a delay and the words that came next were the ones Mitch had been dreading for hours. \"You've got a .... puss.\" She couldn't keep the disappointment from her voice. All this work, and now even though she had Mitch here...she didn't really have him. She had been robbed.\n\nMitch's chin trembled. The tears in his eyes reached critical mass and began to fall like rain.\n\n\"Don't cry,\" she soothed. It wasn't his fault. Not really. It had been her idea. All and all, he was taking it as well as he could be expected to. She had been robbed, but Mitch had been robbed most of all. It left her feeling guilty about the whole thing. \"Sush...now...\"\n\n\"Wha-what are you doing?\" Mitch gasped. It had been bad enough showing his lover that he had been emasculated. But now she was touching him. Poking at him.\n\n\"Quiet now,\" Gloria said. Her fingers running along his folds. Amazing. It was truly amazing. A puss. It looked real. It felt real. But of course it would, her breasts felt real enough, even though they were just skhen. \"This is very important. We need to know, is it being hidden, or is it really gone. Don't panic. I'm betting on hidden. How does this feel?\"\n\nShe ran a finger along his slit. Although more and more it was becoming hard to think of this sexy girl as a boy anymore. She poked at his opening. It wasn't deep. Less than an inch. \n\n\"It's not a real vagina,\" Gloria said. \"It just appears to be one. But we should keep an eye on it. You could still be developing.\" He was wet. Interesting. Clearly it was pleasurable to him. She stroked his clit. Gave it a little round the world just the way she liked it. Clearly Mitch did as well judging by his heaving chest and soft moans.\n\n\"Gloria...\" Mitch gasped. \"I don't feel right. I feel pent up. Bunched up. Aching.\"\n\nShe looked at his vagina again. It was just a little odd. A little larger on once side than the other. She stroked up and down. \"How does that feel?\"\n\n\"Like...\" Amazing. He almost felt whole for just a moment in time. \"Almost like it should.\"\n\n\"That's your cock,\" Gloria said. \"No need to be frightened. It's still in there. Then that must mean...\" Then she gave a press at the bottom. Pressed the slightly bulging mons. \n\n\"Oww...fuck!\" Mitch groaned. Pearly white discharge pooled at the mouth of his sex. \n\n\"Feel like balls?\" Gloria smiled.\n\n\"Like being kicked by a donkey,\" Mitch groaned.\n\n\"Look like everything important is still in there,\" Gloria gave a laugh of relief. She hadn't broken her boyfriend. Not permanently.\n\nShe had a new thought. A dirty little idea that flashed unbidden through her mind. Her lips turned up in a crocodile grin. Might as well make the best of things.\n\nGloria came out of the chair. Taking off her shirt and bra. Her large pendulous breasts bouncing free. Next, she wriggled her way out of her jeans and panties. Finally, she crawled naked between Mitch's spread legs.\n\n\"What are you doing?\" Mitch asked, his voice quick with fear.\n\n\"Do you remember that time you told me you wanted to watch me have sex with another girl and I said no?\" Gloria said. \"Well...I think may have changed my mind.\"\n\n\"But ... I'm ...not ... really....a ... girl....\" Mitch breathed. Dear God, Gloria was sucking his nipples. And despite the aching sensitivity it felt delicious. Then she offered up her large melons. He had never been able to say no to such splendid mammaries. His kissed them...sucked them.\n\n\"Now you do the same for me.\" Gloria said. \"Come on...hold those little cuties up for me.\"\n\nIt wasn't like watching a porno. With a porno, Mitch could settle back and watch the girls go at it. This was like...actually being a girl. That's what his mind warned as Mitch put his hands beneath his small A cups and lifted them up to Gloria's mouth. Letting her lick and suck them. The tingly feeling grew. His nipples hard and oh so sensitive. His body was eager, but his mind was rebelling. Guys don't do this. Stop Mitch - stop. This was asking for trouble. Big trouble. \n\nGloria returned the favor. Letting him lick and suckle her again. This was nice. The relationship had lagged in the foreplay department, it was nice to have someone available for her needs. \n\n\"Baby,\" Gloria moaned. \"I'm dying for that hard cock. It's been all I can think about ever since that day we made love in the car. You remember? That day I was on top.\"\n\nGloria wasn't even thinking as she pushed Mitch to the bed. She wanted to come. Needed it. She ground against his smooth crotch. \n\n\"Come on baby,\" Gloria moaned. \"Give it to me. I need a fucking. I need it so bad.\"\n\nEvery word drove home Mitch's shame like a cold knife in his heart. His hips thrust instinctively. Riding Mitch's lean stomach, his tiny bulge, his thighs, his tiny bump. Mitch felt nthing except more pain from his tightly trapped balls. Gloria's moans became frustrated. Mitch wasn't doing anything but coating her sex and thighs in sticky pearly slime. She didn't even think about it as she climbed higher and higher.\n\n\"We should stop,\" Mitch said.\n\n\"Come on baby,\" Gloria said. \"You've got me all hot. You can't just leave me in this state. Not if you care for me...\"\n\nThe words echoed in Mitch's mind. He had heard those very words before. Then they struck home. Two months prior after the movie. In the Explorer. God, he had been so hard. And Gloria was turning out to be a tease. \n\nAfter kissing and groping in the front seat. Mitch tried to get into her panties only to have Gloria say \"We should stop before things go too far.\"\n\nThat night, Mitch undid his fly. Pulled out his hard cock. Seven inches of throbbing hard manhood. Gloria stared at it. Afraid. Curious.\n\n\"Come on baby,\" Mitch said. \"You've got me all hot. You can't just leave me in this state. Not if you care for me...\"\n\nShe put her hand around his shaft. It felt foreign. Harder than she imagined. Thicker. Bigger. She started to pump. Guys were certainly different that girls. \n\nMitch held her wrist and pulled her hand away. \"I can do that myself,\" Mitch said. \"Do it. Do it like girls are supposed to do it.\" He took the back of her head and guided her down. Mitch's father's advice echoed in his ears. Don't let a woman jack you off son. Otherwise she'll end up jacking you around and will never go on the pill. Put that cock in her mouth, and soon you'll be barebacked in that pussy before you know it.\n\nHe guided her down on it. Felt Gloria give a tentative lick and then another. He waited until she moved back up to the tip, then he pushed her down on it. Felt those lips wrap around his manhood. She was inexperienced at first. She needed a few pointers, which Mitch was more than happy to provide. \n\nThat night, Gloria did all right by him. Growing more experienced. More confident. Her head bobbing up and down on his cock, her hand wrapping around its base to keep Mitch from forcing it to far down her throat.\n\nYes, she had done just fine. Had gagged a bit after, but to Mitch it had felt just fine. His father's advice proved true. In a week she was on the pill and Mitch was barebacked in that tight virgin pussy.\n\nBut now, Mitch's father advice had come back to haunt him. And his old man's words echoed in his head. Men don't eat pussy son. They fuck it. Pussies eat pussy and drink their drinks with straws. You ain't no pussy are you boy?\n\nHis old man would die if he saw Mitch now. Saw the mounds on his chest. Saw the slit between his legs. Saw the shame in his cheeks. The butterflies in his stomach. Naked. A girl climbing up his chest. Pinning his arms down beneath her calves. Overpowering him. Holding him helpless. Lowering her wet slit to his lips. He didn't have a choice, did he? He needed her help. She was in a state. He didn't know how, but she surely was. Was it his fault? He couldn't think of anything he had done to get her so aroused. Then he remembered sucking her nipples...rubbing them against his own. It was his fault. But maybe...maybe he could finger her. If only she let his hands free.\n\n\"Let my hand go so I can...you know...touch you and ...ah...bring you off...\" Mitch said his voice hesitant. So soft. Feminine. It wasn't the sort of voice Gloria felt she needed to heed.\n\n\"Baby,\" Gloria moaned as she lowered herself on his lips. \"I can do that all by myself. You know what I want. Eat me baby. Eat my hot pussy. Oh God you've got me in a such a state....\"\n\nHe stuck out a tentative tongue. Tasted bitterness and salt. Then he noticed the pearly sheen. Shit! Cum. He had tasted his own cum from when she had been grinding against him! He felt like retching.\n\n\"That feels nice....\" Gloria said. \"Real nice. Mmmmmm....lick me baby. Lick my pussy.\"\n\nGloria's hips began to gyrate. Rubbing her slit on Mitch's face and lips. Smearing his earlier discharge on him. He tried to protest, only to have his mouth filled with sweet pussy. \n\nHe began to lick her slit...at least there wasn't anything there but girl juice. To flutter his tongue over her nubbin. Oh how she moaned when he did that. The quicker she was done, the quicker he was done. And he wanted to be done yesterday. \n\nBut not Gloria. Gloria had never felt such pleasure. It was like masturbating, but ten times better. That tongue. That soft swirling tongue. Fuck it was doing things to her she didn't know could be done. How dare he keep something like this secret? How dare he hold out on her? Well, it wouldn't happen again, she'd see to it.\n\nHer hips gyrated faster and faster. The bed squeaked. Quicker and quicker. Lightning danced through Gloria's loins. Her large breasts heaving. Bouncing. Bounding. Sweat trailing down her back. Pleasure held her in its grip. Climaxing.\n\nFuck yeah!\n\nGloria lay there for just a bit, basking in the warm afterglow of her orgasm. Until she became aware that Mitch was still down there - trapped beneath her. She slid back on her haunches and sat looking down at him. Poor thing. His face all wet and slimy. For some odd reason, she felt rather bitchy. She should have done this a long time ago.\n\nWith her index finger, she trailed it along his sodden face, getting it nice and wet, before tracing it along his lips. \n\nMitch wanted up, only he was too proud to ask. He had eaten her. Been slimed in the process, and now she was playing in it. Jesus Christ.\n\n\"What are you doing?\" he asked, turning his head away. He yearned to do more, but it was the best he could do with his limited mobility.\n\n\"Remember what you always said Mitch?\" Gloria teased. \"It's good for the skin. Makes it nice and soft.\"\n\n\"I don't want it to be soft.\" Mitch's words were hushed and forced. Finally, he swallowed his pride. \"Gloria let me up. Please.\"",
        "His pleading and helplessness was like music to Gloria's ears. My how the mighty had fallen. \"Oh come on Mitchie, I'm almost done,\" she said and finished rubbing her honey into his cheeks and lips. His formerly rugged face looking not looking very rugged at all. He would pass for her sister quite easily. She smiled. Yes, her plan for sneaking her boyfriend to school was going to go off without a hitch. Finally, she let him up.\n\n+++++++++++++++++++++++++++++\n\nAt 22:45 the project became still. Chip R5667 was still working. Had been all day. But now the project was still. That left more energy for R5667. More energy for the real work. \n\nR5667 was thinking. How had this happened to the project? So much was achieved in so short a time? R5667 wondered how many chips were necessary to do all this to the project before it was R5667's turn again. \n\nThe skhen made some things very easy. Other things were much more difficult. It would keep working on the easy things first. It wasn't programmed for some of the other equally important work. Like the structure changes. But it had some ideas. It sent some skhen inside. It would begin testing. Meanwhile, these other things, they could happen in parallel. They were easy. It had already learned how to do these things months ago.\n\n+++++++++++++++++++++++++++++++\n\nGloria woke up. Rubbed the sleep from her eyes. She was deliciously naked and another soft naked body lay snuggled within her arms. Soft perfect skin slid against soft perfect skin. Her hands roamed. Hips, her boyfriend had hips, and a tight waist. Her hand roamed some more. My God, he was at least a B cup now. He was changing so fast. It was amazing. Her hand trailed down his smooth stomach. Down to his sex.\n\nGloria explored the folds. Mitch was getting wet. His breathing became shallow. 'What could it hurt?' Gloria wondered, and then she slipped it inside. Wow! Yesterday it had only went it a half an inch before it hit a wall. Now, it slipped in to her second knuckle and she didn't detect a wall at all. Only her position stopped her from going further. \n\nThat can be remedied she thought. She moved her hand behind him. Found his sopping wet opening. Slipped it in all the way. Only then could she feel the floor. Then a sudden realization hit her. Mitch was still asleep. His breath a bit deeper. Whistling out of his nose. She began moving her finger in and out. She was doing it. She was fucking her boyfriend. How many other girls could say the same? She smiled as his breath grew labored. Her eyes grew bright as Mich's hips began a shallow rhythm. She wondered if he could come from it. She knew of one way to find out.\n\nWhile Gloria fingered, Mitch dreamed. He was at the movies. With Gloria. Back in Boston. They were making out.\n\n+++++++++++++++++++++++++++++++++++++\n\n\"You've got me in a state,\" Gloria said breathlessly. \"Let's fuck.\"\n\nMitch looked around nervously. The theater was packed. He was horny too, but it was too risky.\n\n\"We'll get caught,\" Mitch demurred.\n\n\"I bought you dinner and took you to a movie\" Gloria said between kisses. \"....you owe me.\"\n\n\"We can't...\" Mitch said. Everyone's eyes seemed glued to the movie. Perhaps they could.\n\n\"Just sit in my lap,\" Gloria urged. \"No one will suspect anything.\"\n\n\"I don't know...\" But Mitch was scooting up and Gloria guided him onto her lap. It was then that he noticed he was wearing a short skirt. And Gloria was lifting it. Mitch gasped when he realized that he had sexy thighs and more....a pussy. Before he could utter his surprise, Gloria guided his hips down. Guiding him down onto a hard and very erect cock.\n\n\"Oh no!\" Mitch groaned as he was penetrated. \"Please stop....\"\n\n\"Keep quite,\" Gloria urged. \"Do you want people to notice.\"\n\n\"But you have a...cock....and I have a pus....ah....a pussy...\" Mitch stammered between moans. Oh God, to make matters worse, some of the people nearby began to stare at him.\n\n\"A hot pussy,\" Gloria's hot breath whispered into Mitch's ear. \"A hot tight pussy.\"\n\n\"Let me go,\" Mitch said.\n\n\"I can't now,\" Gloria said. \"People are staring. Just stay there. We aren't doing anything wrong. Just a girl sitting on a boy's lap...watching a movie.\n\n\"But I'm not a girl,\" Mitch whispered. But the cock moving so softly inside him begged to differ. Making him wet. Making him tingle. God, people were still staring. He took a sip of his drink. Shit, they were still staring. He followed their gaze down...down between his legs...to his wet pussy...to the cock that impaled him. His cheeks burned with embarrassment. They had seen. Oh God, they had seen. He tried to pull his tiny skirt down, but there wasn't enough material.\n\n\"Stop...\" Mitch urged. \"They can see.\"\n\n\"I can't stop now,\" Gloria moaned. \"I'm getting ready to cum. Are you on the pill?\"\n\nPill? Oh God no! No! No! A kind of helpless fear he'd never felt before seized him and held him firmly in its grip. He wanted off desperately, but it was far too late, he could feel it spurting already. Spurting inside him.\n\n+++++++++++++++++++++++++++++++++\n\nMitch awoke with a start. His dream had been so real. So real he could almost still here his soft moans and gasps. He still felt tingly Hot. Such soft feminine moans echoed in the room. Gloria? His loins were melting. It felt like...as if.....\n\nThen realization hit home like a ton of bricks. He remembered where he was. What he was. And there was something inside of him. Moving. Thrusting gently in and out. Fuck...fucking him. He could here the wet sounds...the slish...slish..of a hot wet pussy being penetrated, being fucked. The moans were his - and so was the pussy. His hips were moving up and back - up and back. Clearly enjoying the sensations. His hands flew down to protect his dignity, belatedly he realize he was being taken from behind. He was helpless.\n\n\"Mmmm....no.....Gloria...please...stop...it....oh God...please stop.....\" he begged. \n\n\"Are you sure?\" Gloria asked.\n\n\"Yes..\" The words came out soft. Hesitant. Words that came out as if he didn't want her to stop at all.\n\n\"Say please....\" Gloria teased as she continued to tease.\n\nMitch shivered, and he couldn't help but feel the blow to his pride as he was forced to mutter a breathy \"Please\" in response.\n\n\"Okay,\" Gloria took her finger out and wiped it on Mitch's hips. \"I was just checking you out. Your puss is about 2 inches deeper than it was yesterday. Your breasts are bigger too. Let's turn a light on and have a look.\"\n\nGloria turned on a light and appraised her boyfriend. Mitch held his eyes shut. Too afraid to look. When would these changes stop? He wondered.\n\n\"I'm afraid we are going to have to change the plan just a little?\" Gloria said. \n\nMitch's mind raced. Yes, let's change it. Let's go home and get this chip out of me.\n\n\"You don't look like my sister anymore,\" Gloria said. \"You look like....you look like...\"\n\nOh God! Mitch's eyes flew open. He looked down. Boobs. Not just little mounds. But actual boobs. He looked in the mirror and rocked unsteadily on his feet. It was just as big a shock as the day before. Not only was he female, he was nearly the spitting image of Gloria.\n\nThere were differences: He was a bit thicker. His jaw more square. His bone structure bigger. He was taller. God, even his hair had grown. A curly mane. How could it happen over night?\n\n\"....my twin.\" Gloria finished. \"Hmmm.... I said my sister was joining me. I didn't say twin sister, but that's what you will be. Let's get ready and get you settled down. But first you need to get me settled down. Listening to you gasp and moan this morning has me hot as hell. God, Mitch you've put me in a real state.\"\n\nWith that, Gloria crawled back in bed. Even with her hair in disarray and no makeup, she was still a goddess. She fluffed up a few pillows and laid back on them, spreading her long lean legs, reaching her hand down and spreading engorged wet lips with a confidence she never possessed until now.\n\n\"Come on baby,\" Gloria said, her voice thick with desire.\n\n\"But Gloria...we just did it last night....\" But though Mitch whined a protest and his jaw and tongue were still sore, he was already crawling into bed with her. \n\n\"I know baby,\" Gloria said as she Mitch by the wrist as he gently stroked her wet sex, and pulled it up until she could get him by his curly main of hair and guided him where she really wanted him. Where he could do her properly.\n\n\"Gloria...\" Mitch gave a whine, but his need was written in the tembor of his voice. He could smell the musk of Gloria's need. Her wet pink lips greeted his own. At last his silky tongue touched the folds of Gloria's hot wet sex.\n\n\"Ahhhh.....\" Gloria moaned, her hands roamed through Mitch's curly mane. Yesterday, she'd thought she'd been robbed, robbed of that nice hard cock, but today, that fluttering tongue was convincing her she'd come out ahead in the game. \"I can't help how much you turn me on. Besides...I miss you....oh ....oh how I've missed you.\"\n\nGloria couldn't get enough of Mitch's sweet tongue. And this time he did an even better job than before, bringing her off in only a few minutes, leaving them plenty of time to shower and get ready for class.\n\nOne of Mitch's many fantasies had been to be able to watch hidden in a girls shower. Watching them soap their soft naked bodies. Today, he was able to live out his fantasy. Showering in a communal shower with ten naked girls. However, there was one problem. He had no hard penis with which to masturbate with. Yet, he was still turned on. His nipples had hardened to little nubbins. He was tingly, yet he ached inside. Felt bunched up. And though he was surrounded by succulent young flesh, hot bodies, and soapy breasts, he was miserable. He decided it was better not to look. But he couldn't. His own body was just as sexy, if not more so than these other hot sud covered girls. He thought for sure they would spot him. Shout out that he was a guy and run screaming from the shower.\n\nYet despite his fear, the shower passed without incident, and after he left, Mitch didn't feel so miserable. However, he was gaining new appreciation for what women went though. Blowing drying his hair took over 20 minutes. Then the makeup. Of course, he didn't want to wear any, but Gloria had insisted. \n\n\"Everybody wears it Mitch,\" she said. \"Speaking of which, we need to start calling you by your new name. Michelle. Now, trust me. You want to fit in. If you stand out, it's going to be a long time here for you. It'll feel like years instead of months.\"\n\n\"Who says you get to pick out my name?\" Mitch said.\n\n\"No one,\" Gloria said. \"Tell me what you want to be called. Although, I suggest you keep it close to your own so it won't be such a big adjustment to get used to responding to it. So what will it be? Jessica? Missy? Brandy?\"\n\n\"Michelle is good enough,\" Mitch said after thinking about it and being unable to come up with anything better. He looked in the mirror. God how he hated looking at himself and getting turned on by the sight. A sexy eighteen year old with glossy lips. Wearing an oxford shirt and a plaid skirt. At least this one was longer than the one he'd been forced to wear yesterday. Then there were cute little knee socks. A schoolgirl. His very own fantasy. Yet he never imagined it would be like this. That he'd be the schoolgirl. Not in a million years.\n\nFrom then on, Mitch became initiated in a new world. It wasn't just the classes. He learned what girls talked about when boys weren't around. He learned to answer questions like, who is hotter Leonardo Dicapprio or Brad Pitt?\n\nAnd Gloria was always close at hand to witness his humiliation. Because she was right. It was better to fit in than fit out. To fit in he couldn't answer neither, he tried to imagine who Gloria what Gloria would do and say, \"Brad Pitt is hotter.\" And Gloria would smile wickedly and say, \"I know why you like Brad Pitt. You like him because he has a big dick.\"\n\nMitch's cheeks would glow a rosy red. He couldn't say what he wanted and that was ,\"No I like neither, I'm into girls.\" Not when all the other girls said they liked Brad or Leonardo. Better to go along to get along. \"No...he has nice eyes.\"\n\n\"Come on Michelle,\" Gloria insisted. \"I caught you with your hands down your panties watching Troy.\"\n\n\"You did not..\" Gloria and the other girls laughed. He felt humiliated. Like he would never live it down. But he soon discovered it was just the usual sort of ribbing girls did to each other. Worth a giggle, but then forgotten, and he was one of the girls now. \n\nAnd that was never more clear to him than when they had PE. They put on their pads. Hit the fields with sticks and a ball. Field hockey. Mitch felt sure he would show these girls and thing or two. \n\nBut, he found he couldn't run as fast as they. And sometimes they shoved him out of the way. He tried to make passes, only to have them intercepted. Some of the girls on his own team, one in particular, was nasty. Insulting him. \n\n\"Pass it here Michelle,\" Julie yelled. \"Hurry. Before...\" But it was too late. Mitch had lost the ball.\n\n\"Ah goddamn,\" Julie hit the ground with her stick. \"Useless.\"\n\nToo late he realized she had called his name. He was still getting used to it. Also, he had just been hip checked. Gone down. Legs splayed. Ball stolen. Elbow throbbing. Mitch felt his chin tremble. No. Not here. Don't cry. Please don't cry. But there was no holding them back. He sobbed. Bawled.\n\nJulie yelling. \"Crying? Jesus, what a little Princess. Dry your tears Princess and learn to play.\"\n\nGloria came over to console him. \"Poor baby,\" she patted his shoulder. \"Where does it hurt Michelle?\"\n\nDirty. Red faced. Snot hanging from his nose. No where but my pride, Mitch thought. But he couldn't say that. Instead he said. \"My elbow.\"\n\nGloria kissed it and though the elbow felt the same, his hurt inside was soothed. He watched with pride as Gloria scored a goal. Even stole a pass from that bitch Julie. From then on, he tried to stay out of the way at the games. In the back. If a pass came his way, he would try to miss. Better to miss than to have it taken away. He was the last one chosen. But that too was okay. If he was chosen last, his teammates didn't expect much. He could take one moments humiliation as he waited in line over being cussed at repeatedly by Julie any day. He became more sullen. Withdrew into himself. Counted the days until Christmas break.\n\nAfter just a couple of weeks, life was different but began to become routine. All that was about to soon change. It changed with the arrival of a package placed outside their dorm. It was addressed to Gloria. With a big smile she picked it up and shook it.\n\n\"Have I got a surprise for you,\" she said. \"Why don't you go get a shower and come back nice and pretty for me. Then I'll get nice and pretty for you. Then you can do me...like old times.\"\n\nMitch felt a little unsure of himself while he showered. He had always been so confident before, but now his confidence was steadily dwindling with each and every day. Having to act the part of Gloria's twin sister. Having to make himself pretty for her. Sure, she said she would make herself pretty for him too. Which would have ordinarily have been super. Would have been worthy of a hot damn! But now, sex involved foreplay. Kissing. Stroking. Rubbing. Gloria's hands running through his long hair....then finally pushing him down.\n\nNow sex always involved going down on Gloria. Taking one for the team. It wasn't like before. Not one bit. Mitch had tried. Oh how he tried. Even doing a 69, he had tried to roll on top. To put her underneath him for a change. To get back in charge. For things to be like they once were.\n\nTo be a girl was bad enough. The worst thing he could have imagined. But now that it had happened, there was something he discovered that was even worse than being a girl. It was being a girl's girl. He tried to put things aright. Tried assume the role he once held so easily. The role that was his by right.\n\nThe dominant role.\n\nTo be on top.\n\n\"Get on top to show 'em who's boss.\" That's what his old man always said. \"And if you really want to show 'em whose boss, take 'em from behind. A woman knows what she's there for when she's being fucked bitch style.\"\n\nMitch no longer had the equipment necessary for the latter, so he tried the former. Only to be thwarted. To have Gloria roll him over and get on top over and over again. He tried again, sweating and struggling with Gloria. Determined to get the better of her.\n\nOnly to have Gloria laugh, \"Oh fun, a wrestling match! Do you want some of me Michelle? Do you want some. Come and get it.\"\n\nAnd Mitch wanted some. He tried and tried. He took it so serious and it made Gloria's joking all the more difficult to take.\n\nThe worse was that she was laughing. Not even trying as she captured his wrists and rolled on top of him. Worse, sometimes she'd try to bend him into a pretzel. A very sexy pretzel. In the end she sat down on his body and wiggled her way up. \n\nThey would have sex, but wouldn't be like a mutual 69 either like before, the usual with Mitch being on the bottom. No, as the victor, Gloria would pin his arms down and sit on his face, making him lick her till she came. Rubbing her wet puss all over him. Taking it like she wanted it. Oh he'd tried not playing along. Making her do all the work. A cold fish.\n\nBut Gloria would have none of it.\n\n\"Are you being a sore loser?\" she asked in a pouty little voice. \"Is she a sore loser? Come on Michelle...just for fun? Puleeze? You know I won..fair and square.\"\n\nThen she'd reach back and tease his pussy with her finger. Make Mitch gasp and moan. Make his legs flail and then go all akimbo. He fought the valiant fight. He tried not to give in. But his body always failed him. His loins would grow hot. And finally his hips began to pump. A cold fish indeed.\n\n\"Oh baby, you are getting hot for me, aren't you,\" Gloria breathed. \"You want it? You want it don't you?\"\n\nBut Mitch didn't want it. Even if it felt so good. He wanted it to be like it was. But for sure he didn't want to come like this. The feeling of being invaded, the fear of having an orgasm from it...from something inside him...it was more than enough to make Mitch give it up.\n\nHe licked. Even as Gloria kept his arms trapped and rubbed her hot slit against his face. To sit on him. To rub against his mouth and lips. To bear down on his, till he felt his lungs burn. He moaned. He teased her. He did it just as she wanted, even though inside his pride suffered blow after blow after blow. He gave in over and over again.\n\nEach victory made Mitch feel just a little weaker. Just a little less likely to try to get on top. Just a little less like the old Mitch and a little more like the new Michelle. And now walking back to the room, even with Gloria's promise that it would be like old times, he was positively terrified.\n\nButterflies fluttered in his stomach.\n\nIt would be like old times. Yes it would. he prayed it would.\n\nWhen he opened the door to the dorm room, Mitch's heart began to pound at the sight that greeted him. Gloria was wearing a hot little black bra and a positively micro little thong. But the best part, she was wearing a garter and black stockings. She was laying on the bed with her legs spread wide. Her hand moved down her body and pulled her panties into her slit making Mitch tremble with desire.\n\n\"You like?\" Gloria asked.\n\n\"Yes..\" Mitch breathed. God, did he ever. The old Mitch would have jumped her bones. The new Mitch waited for permission, even though he was turned on beyond belief. Yet, even being turned on was so different now. Before, his cock would go hard with arousal. Now arousal was more subtle. A slight hardening of the nipple. A tingling in the loins.\n\n\"I want you to dress up for me now Michelle,\" she said huskily. \"The outfit is on your bed. I want you to put it on. Then I want you to fuck me.\" ",
        "Mitch looked on the bed at the lingerie. It was pink and lacy. He wanted the black. But he knew better than protest. There were other outfits even more girlie and revealing. More humiliating.\n\n\"Don't keep me waiting Michelle,\" Gloria said. \"I've been a bad girl and I need to be punished.\" She rolled over on her hands and knees, presenting her ass to him. Giving it a delightful little wiggle just like she did in the old days. \n\nMitch didn't need to be told again. A spanking..yes, he'd give her a spanking. That'd show her who the boss was...then yes...do her from behind.\n\nMitch quickly put the lingerie on. He had worn bra and panties for two weeks now, but nothing like this. The only purpose for them was sex. His breasts had grown larger. Now, they threatened to spill over the small cups of the bra. The stocking were harder to put on than he had reckoned on. Then there was the short pink micro mini. His ass cheeks were flashed by its high hemline. The white shirt was silky and see through. The last item. A pair of high heeled pumps. He had always tried to get Gloria to wear them, but had refused to wear anything more than an inch or so. Matter of fact, these were the very pumps he had bought for her birthday present three months ago. They weren't made for wearing...they were fuck me pumps. Which Mitch was soon to find out.\n\n\"Hard to walk in them isn't it?\" Gloria asked. \"They do make you look sexy. I can see why you wanted me to wear them. But I bet you never figured it would be you doing the wearing. Come on. Walk across the room...Again. No two more times and then I'll let you fuck me. Fuck me any way you want me. There you go. Shake that sexy ass baby.\"\n\nBut Mitch didn't want to shake it. He felt ridiculous. What if this were just some sort of cruel game.\n\n\"Come on Mitch,\" Gloria said. \"If you don't shake that ass...you won't get any of this one.\"\n\nSo Mitch swallowed his pride and shook it from side to side as he walked. It was surprisingly easy. As a matter of fact, it was a struggle not to in those heels.\n\n\"So sexy...\" Gloria purred. \"Now bend down and pick that towel up and put it in the dirty clothes. Ooops! You just flashed the whole world Michelle. Try it again. Legs together this time.\"\n\nMitch was blushing redder and redder. Growing more and more humiliated. She was making him feel like some sort of stripper parading him around. Making him feel even more of a stranger to this hot body he was trapped within. Strutting. Bending over. God..cleaning the dorm like some sort of maid. Wriggling.\n\nNo this certainly didn't feel like old times. He face hot with shame, he began to wonder if it was even worth the trouble. He couldn't fuck her anyway.\n\n\"You've been a real good girl Michelle,\" Gloria said, as she stood and peeled down her panties, then bent over the desk. Her pussy, pink and oh so wet, was framed between her thighs. So frigged herself with a confidence she never had until now. \"Your surprise is in the box. Put it on. I want you to fuck me with it.\"\n\nMitch's heart raced as he opened the box. A purple strap on. It was quite large. A couple of weeks ago and he would have been too humiliated to put it on. The fake cock would have been nothing but a cruel reminder of the one he had lost. But in those two weeks of being emasculated more than he would have imagined possible, he looked forward to strapping it on and fucking Gloria properly. Give her a real fucking. Teach her who the boss really was. And she wanted teaching too. She needed it. He was sure of that as her legs spread and her head rested on the desk, her hands making a small cushion.\n\nThis time. Finally. He'd be on top. And Gloria would enjoy it and she'd finally see that this was the way things ought to be....were meant to be. It was the proper order of things. \n\nHe stepped into one of the straps. Brought it up. Oh he was going to give it to her hard. Fuck her rotten. It was then that he saw the other cock. The one that would go into him. No....he couldn't. Wouldn't.\n\n\"Michelle...what the hell his taking you so long...\" Gloria's voice grew less sexy and more exasperated. \"I'm beginning to grow impatient.\" Her head was no longer resting on the desk. Now she faced him. Impatiently tapping her bare foot.\n\n\"I-I-can't,\" Mitch stammered. He twisted at the other cock. Maybe it would come off.\n\n\"Can't figure out how it works?\" Gloria asked. She walked over and took it from him. \"See, one strap goes around this leg. One strap around the other. This goes up here like so. Gloria took the cock and guided it into her wet sex with ease, giving a small grunt of satisfaction when it finally pressed home. And this strap around your waist.\"\n\nGloria stood there with the purple cock standing at high mast from her crotch. She put her hand around the base. God, she felt powerful. And it felt good to have something inside her once again.\n\nMitch could very well see how to put it on. But to do so, the base would go into him as well. It was shaped just like a cock. A head and everything. No. He couldn't bear it.\n\n\"But I don't want it in me...\" Mitch whined.\n\n\"That's the most ridiculous thing I've ever heard,\" Gloria said. \"Now come over here.\"\n\nShe stood Mitch against the desk. Her fingers sought out his hard nipples. She stroked and tweaked them expertly. His knees grew weak. Then her hand slipped beneath his short skirt. With a tug and a rip his panties lay at his feet. He didn't fight her, even as she turned him around, but he could feel her strength. So much greater than his own after the many changes that had robbed him of his masculinity and turned him into this sexy creature.\n\nGloria's finger ran through his wet folds. Her fingertip strummed his clit. \"That feels good doesn't it baby?\"\n\n\"No...\" Mitch breathed, his heart hammering in his chest...even though his loins were melting from her touch.\n\n\"Don't lie to me Mitchelle,\" Gloria warned. \"It feels good doesn't it?\"\n\n\"Yes...\" Mitch admitted. \n\n\"That's a pussy baby,\" Gloria said. \"It's supposed to feel good.\"\n\n\"And this feels good too doesn't it?\" Then Gloria's fingertip probed him.\n\n\"I-I don't want that,\" Mitch pleaded. But God yes it felt good. But it terrified him all the same.\n\n\"It's a pussy baby, that's what it's made for. So why fight it? You know it feels good. Tell me I'm lying.\" Gloria teased and kept on exploring his tight pussy. Made him wriggle. Made him sigh. Made him all tingly inside.\n\n\"Now tell me what it is...\" Gloria purred.\n\nMitch's cheeks blushed. He refused to answer less his voice betray him. \n\nThen he felt something much bigger pushing into him. So much bigger than her finger. Even bigger than the base of the strap on. So full. Almost painfully so. Oh God no! He realized what she was doing. \n\n\"Stop it...\" he gasped.\n\n\"I gave you your chance Michelle,\" Gloria said patiently almost teasingly, but then her tone changed, becoming more husky...more demanding. \"I bent over for you didn't I? Didn't I? I told you that I'd been a bad girl. Take me any way you want me, I said. But you didn't. Do you know why? I think I do. You are the bad girl, aren't you? Tell the truth my pretty little Michelle. Have you been a bad girl?\"\n\n\"No...\" Mitch whined.\n\n\"You're wet,\" Gloria said. \"Moaning and panting like a little slut. The way you walked in those high heeled pumps. Then wouldn't give me a good fucking when I begged so nicely. Little tease. Oh I think you've been a bad girl alright. Admit it.\"\n\nMeanwhile the phallus was still invading Mitch's loins. Filling him. Stretching him. Gloria's finger had been nothing like this. This thing was inside of him. In his body. He could tighten his muscles all he wanted, but that just made him feel being penetrated all the more.\n\nFor two weeks Mitch had been faking orgasms. He would moan and buck. Make Gloria think he had climaxed. Yet he was determined not to cum. Not like this. Not like a girl. He remembered the first time he masturbated as a boy. How it made him feel like he had never felt before. How he was powerless to want that feeling over and over again. How much the thought of that scared him now that he'd been changed, terrified him to the very core. Would he become addicted to sex as a woman...just like he had become addicted to masturbation? \n\nMitch wanted to say stop. To say no. Yet his body didn't want to stop. It refused to stop. Two weeks. Two long weeks with no climax. No orgasm. \n\nWorse, Gloria kept asking if he was a bad girl. A tease. And soon he wasn't just being penetrated, he was being fucked. Gloria's hands held his hips. Guided him up and back. On occasion she gave it to him hard and deep. She spanked his round bottom. She made him moan. Made him grunt and groan.\n\nGloria was so insistent. \"Are you my bad girl? My sexy little tease?\"\n\nShe made him say it. Made him admit it. With her big purple cock, Gloria fucked the words out of him.\n\n\"Yes, yes, I am a bad girl,\" Mitch moaned. \"Your sexy tease. Oh God, oh God, please give it to me.\"\n\nGloria grabbed him by the pony tail. Pulled him back on that cock. Made his back arch as far as it could - just as he had done to her so very long ago. Ages ago. She pushed it home...all the way home until the head bounced against the floor of his pussy. Made his heels squeak and click on the hard tile floor as he struggled to stand and keep his balance. Standing and walking had been a chore, but this was...impossible. \n\nWith the mirror there in front of him, Mitch couldn't help but stare at the girl being bent over and taken. Her blushing cheeks were fetching. She lurched back and forth with the pounding she was getting. Her perfect breasts broke free from the confines of the demi bra and began to bounce and lurch in a way that stoked the fires of his desire. How she opened her mouth when she gasped and moaned. Her brows bunched together...was it pain or was it pleasure. She bit her plump lower lip. She rocked back - meeting every thrust. Her body shook with the impact that echoed throughout her body. Her damp bangs fell into her eyes. The girl was hot. Sexy. God she was something else.\n\nIn the back of his mind, a voice cried out. No, no, Mitch, the girl in the mirror is you. \n\nThen the worst happened. The very thing he had tried to avoid for so long. The tingly feeling grow so warm. Felt like warm butter poured into his insides. Oh fuck. An ankle turned. He lurched, tried to pull away...no...no...not like this...oh God, but it was too late. He didn't want this. But he did. He didn't just want it. he needed it.\n\n\"Oh no - no God no....please Gloria...not like this...not like..a girl...oh please no..God no....uhnunh..oh....oh ...God oh God oh God....\" Mitch moaned. The pleasure. Oh the pleasure. So intense, yet so very different than before. The pump pump tingling bursts of pleasure were gone. This was different...a peaking... He had climaxed.\n\nLike a girl.\n\nGloria kept pounding ....he lay there taking it, until she too had joined him in climax. \n\nHe wished he could cry, but the tears wouldn't come. He had avoided this. Had made sure he didn't come...not like this. Not like a girl. What would happen now? Would he want it like this now? He wasn't sure. It was awesome. Truly. Did that make him gay?\n\nYet, despite the pleasure, he still missed the feeling of cum shooting pumping from his balls. Yet this was more intense. No, no, I must be a man. Not like this. Never again, he determined. It didn't help that Gloria was still stroking him. Kissing his sweaty back.\n\n\"You came, didn't you baby?\" Gloria cooed. \"You've been trying to fake til now. I could tell. Did you think I wouldn't notice? I know your body well. Did you know...did you know my first time feeling that feeling was that day in the back of the truck when I rode you?\"\n\nMitch's mind was a blur. He thought back to fuck after fuck. He had given it to her good. Given it to her how his old man said a girl liked it. Bitch style. When you make a girl go, uhnunh, boy, you know she's gonna be back for more. You own that pussy.\n\nGloria had made that sound. But now she was saying that it hadn't made her cum. She hadn't come until she was on top . Yet, he had come. Bitch style. He wasn't quite sure the sounds he had made, but he wouldn't be surprised if one of them wasn't uhnhuh....He couldn't help but wonder what this meant for their relationship. He had a feeling things would be different. He hoped not too different. He had enough changes to deal with.\n\n++++++++++++++++=\n\nR6647 was making changes too. These changes took much longer because it had never made changes like this before. It built a framework of skhen around Mitch's skeleton. It tightened it. Making it more narrow. Putting the project like it was before. Then there was the matter of the appendage. It wasn't supposed to be there. Again, it had never done anything like this before. But with a bit of experimentation, it was able to send certain proteins into the cells and then it could tell the cells to become something else entirely. It had to be careful though. It didn't want other cells to get the idea and lose there function. Just these few. It wasn't so hard. It would just take time.\n\n++++++++++++++++++++++++++++\n\nMitch was unaware of the new changes being made by the chip implanted beneath his skin. He was even acclimating to his new circumstance. Although, not in the way Gloria would have liked. Instead, Mitch chose to hide away. To watch TV for hours on end. To ask the other girls if they were holding. He didn't study. He didn't participate in class. In the morning, if Gloria kissed him, he kissed back. If she pushed his head beneath the covers, he licked her dutifully until she came. He'd bend over well enough for Mr. Friendly, but something was missing. The final straw came one day when a teacher called Gloria to the side. \n\n\"Is your sister okay?\" Mrs. Summers asked. \"I'm a bit worried. She doesn't seem to be fitting in among other things.\"\n\n\"Sure,\" Gloria said. \"I'm sure she's doing great.\"\n\n\"Well,\" Mrs. Summers hesitated, then told Gloria that Michelle had failed her last two tests. It looked like she didn't even try. Could Gloria talk to her and see what was the matter?\n\nGloria found Mitch in the bedroom, watching football. She stormed into the room, and unplugged the TV, even disconnected the cable. \n\n\"What the hell are you doing?\" Mitch asked. This was serious. He wanted TV. Needed it. It was his only escape.\n\n\"Mrs. Summers showed me your last test scores,\" Gloria raged. \"You failed. Miserably. You haven't been doing your homework. Now get over here. I bet I know how to get you to buckle down.\"\n\nGloria grabbed Mitch and pulled him over her lap. It could only mean one thing. No! No fucking way! Mitch struggled. Kicked his legs. Gloria merely put his hips over her right thigh and placed her left thigh over the small of his back. She smiled. It was the perfect position for what she intended. She gave a jerk and his tiny panties dangled from his ankle. \n\n\"No stop..please...what did I do wrong?\" Mitch pleaded, but Gloria's hand came down on his plump bottom with a loud smack. Again and again it came down. Mitch closed his eyes and grimaced. He was determined not to kick or cry. He was nine when his dad spanked him last. It was with a belt over his Levis. \"Don't cry,\" his dad warned. \"Take it like a man.\" \n\nAnd Mitch didn't. He had struggled briefly....had tried cover his bottom with his hands, but that only hurt his hands. However, this spanking wasn't like the last. It was much more personal. No belt. Just an open hand. His bare bottom. The stinging. And the same sense of helplessness.\n\nJust like before, he was helpless to stop it. Helpless to stop this girl. A girl. This thought made him feel even more helpless...more ashamed. His legs began to kick. First only when a particularly hard smack fell or perhaps to a part of his bottom that was more tender than the others. But soon, his legs began to kick and his hips to wriggle almost all the time. He reached back with his hands, only to have Gloria trap his wrists behind his back. On and on she spanked him. \n\nHis whole bottom felt hot. Swollen. Every blow stung more than the one before.\n\nTake it like a man. Don't do this. Don't. But though he struggled mightily. His chin began to tremble. No. No. No. And then the battle was over. He cried. He bawled. He begged. He said he was sorry. Then he grew angry and said what had been at the back of his mind all along.\n\n\"It doesn't matter anyway! I'll be gone after Christmas!\"\n\n\"Oh it doesn't, does it?\" Gloria asked pointedly.\n\nShe got up and dragged him over to his desk. She put his failing test on top. \"Put your nose right here on the F and keep it there until I say so.\" Gloria said.\n\nMitch reluctantly did so. His cheeks burned in shame, but it was less humilation than he felt kicking and crying on her lap. A few last tears rolled down and the red ink melted into a puddle. Momentarily he was glad he had told the truth. It didn't matter what he did. He would be gone soon anyway. Maybe now Gloria would understand where he was coming from. But his hopes soon turned to fear.\n\n\"You know what I think Michelle,\" Gloria said. \"I think you have the notion that you are too good for all this. But what about me? Huh? You know, I'm going to this dreadful school because of you. I have to study. I have to participate. I get along with others. I'm always the one that initiates sex with you. I tell you that you are pretty. I tell you I love you. I'll only be here till June, but does that mean I get to hide from the world? If it weren't for the chip giving me this body, I doubt you'd even know I exist. Down under I'm just a skinny pimply faced girl with small breasts. But, I don't hide from it do I? Well, maybe I have, but not anymore.\"\n\nMitch stayed silent, hoping her rage would subside. He heard her rummaging around the room. Even heard some strange sounds he never expected. He began to grow more fearful. He felt her hands on his hips. Ah, it was kiss and make up time. He opened his legs to accommodate her.\n\nBut then he felt the head of the strap on at the wrong opening. He arched his back and shifted his hips. Only to have Gloria say, \"No Michelle,\" and place it once more at the mouth of his puckered opening.\n\n\"Has it not occurred to you how precarious a position you are in right now?\" Gloria asked. \"No, stupid, I don't mean this position. She took a fingertip and touched his forbidden hole, making him clench in response.\n\n\"Though it is a precarious position indeed,\" Gloria said. \"But I mean, here you are, An unknown girl at an unknown school. No records. No job. No parents really. You could say, I've got this chip in me you see. My name is Mitch. I from Boston. But who would believe you? I mean really. And me? What if I decide you aren't worth the trouble? I'm thankful to be me, but you are ashamed to be even the new me.\n\nYou are just the first person to ever really pay attention to me, and I think I let you take advantage of my feelings. The more I think about it, the more I realize that you were kind of a crummy boyfriend. So unless you start treating me better and acting like you appreciate me, I don't think I'm going to bother stealing my dad's transmitter during the break. I think I might just forget to do anything at all.\"\n\nMitch's chin had begun to tremble again once again. He could see that he was wrong. And he did care...no more than care... \"I do love you Gloria,\" Mitch replied, his voice breaking. \"And I do appreciate your help.\"\n\n\"I hate to say this,\" Gloria said. \"But I don't know if I believe you. What was that you always said, if you really loved me, you'd let me...what was that? I want you to say it.\"\n\nA chill went up Mitch's spine. She wouldn't! She couldn't. \"Make love to me?\" he lied.\n\n\"After that. You remember, that day at the mall when we were in the dressing room. Then later that week in my room. What was it you said? Remember I said no, and you said. Here let me help you remember.\" She moved her hips forward. Pushing the head of the strap on against his tightly clenched bud. \"Now tell me what you said, or you can forget about me helping you - ever.\"",
        "\"I said if you really loved me you'd let me.\" Mitch felt shamed. Not for being a girl this time, but for being Mitch. Having to say it, made him realize what a jerk he had been to Gloria. He blamed himself. But he also blamed his father. The old man used to tell him. \"If you take a girl in the ass, she'll always remember you. And I don't care how prim and proper they are, it always turns 'em into a freak in the bed.\"\n\nGloria had been good in bed, but Mitch always wondered, was he missing out? It wasn't a matter of how good she was, but how good she could be.\n\n\"Do you love me Michelle?\" Gloria said. \"Do you really truly love me?\"\n\nJust uttering the word required a great sacrifice of pride. \"Yes,\" Mitch whispered.\n\n\"Then say it. Say the words.\"\n\n\"I...\" It was hard to say them. An admission of weakness. Of feelings. A loss of control. \"I love ...you.\" Mitch manged the words despite the blushing of his cheeks and the trembling in his knees.\n\n\"Do you know how you are going to prove it? I want you to reach back and spread your cheeks,\" Gloria said. \"Then I want you to ask me nicely. Oh so very nicely to put my cock in your ass. Or you can forget about me helping you ever again.\"\n\nMitch didn't have a choice. He was just glad she couldn't see his face as he reached his hands back and parted his cheeks. God he felt vulnerable. So very very vulnerable. \"Gloria...would you please...would you please put your ....cock in my ....ass.\"\n\n\"Do you deserve it?\"\n\n\"Yes. I do.\" Though he was terrified, Mitch was sure of it. He did deserve this. He had been a real shit. It was a tough way of finding it out. But he was learning. \n\nGloria felt her passions rising as she watched Mitch standing there, oh so obediently holding open his bottom cheeks. His vulnerable little pucker out there so defenseless. His back curved in a graceful S. His toes pointed together belayed his insecurity. It wasn't a posture a man could have taken, no matter how he tried. A voice of warning whispered in Gloria's mind. Was it possible the changes in Mitch were more than skin deep? But soon her passions were rising and the voice forgotten.\n\n\"Are you sure that's what you want Michelle?\" Gloria asked, giving him one last chance to back out. \"You do deserve it, but I won't do it if you don't want it.\"\n\n\"I-I want it.\" Although Mitch wasn't truly sure he wanted this. He was terrified. Terrified of being taken like this. Terrified of losing Gloria. Terrified at the realization that he'd been a jerk...that his old man was an asshole. \n\nAt first Gloria had thought to teach Mitch a lesson, especially after he had toyed with her feelings to get her in exactly this same position. And she would have done it for him too, if she had trusted that he was mature enough not to hurt her in the process. \n\nWhen he had asked months ago, Gloria couldn't even understand why he'd want to do such a thing. Yet, having him in front of her, so defenseless, so cute and willing to put himself in her hands - in her power; she could see the attraction. It might not require love, but it did require trust in abundance, and she was going to do her best not to betray that trust.\n\nGloria began to work it in. She wasn't cruel. However, she was persistent. \"Are you doing okay Michelle? I'm not hurting you am I?\" she asked whenever Mitch gave a loud grunt. \"Need a bit more lube?\"\n\nMitch would answer either more a bit more lube please or I'm okay. Until slowly but surely that massive phallus was lodged firmly in his bowels. He began to wonder if it would ever end until finally Gloria's abdomen rested firmly against his bottom. \n\n\"Good girl,\" Gloria purred. Then she eased it all the way out, and slowly drove it home again. Mitch gave a groan. \"Are you okay baby?\" Gloria asked.\n\n\"Unungh...yes...ugh...,\" Mitch said and was impaled again and again. This wasn't like being fucked. This was like being taken. He knew he wouldn't come like this. He was wet and tingly...but he wasn't TINGLY. This was about power. Of giving it up. Relinquishing it. And trusting the other person to take it gently. When it had been Mitch wanting to do this to Gloria, he had fooled himself into thinking it was something else. But this was surely about power and he had given it up to her now.\n\n\"Do you really love me Mitch?\" Gloria asked, for once calling him by his old name.\n\nMitch searched his heart. It felt like it was full. Almost painfully so. \"Yes...unugh...yes I ...oh...love you.\" With this realization, a part of him relaxed. It felt nice. It was only being violated if he fought against it. If he gave it. If he gave it to Gloria, it could be like a present to her. Proof of his feelings. Bringing them ever closer. \n\nGloria could tell a difference in Mitch. She had seen this side of him before, but always he put a wall up after. \"I don't know if you never tell me.\" she said, her hips moving faster.\n\n\"I'll do better. I promise. I've been a jerk,\" Mitch said, each word coming out as a grunt or groan. So hard to talk when being taken like this. Being fucked. He could tell by Gloria's moans it wouldn't be long. Then he did something totally uncharacteristic of himself. He shifted his hips so she could take him deeper. Then rocked them. \n\n\"Does that feel good baby?\" he asked. \n\n\"God yes,\" Gloria moaned. \"Give it to me...oh God...oh God.\" Then she fell atop him. Her hips pumping. Rubbing the small rounded knob on the front of the strapon against her clit. Then afterwards Mitch kissed Gloria. Really kissed her. It wasn't just the usually peck or Mitch trying to shove his tongue down her throat, but a caring kiss. Sucking gently on her lip. A playful tongue dancing with hers. Softly sucking on her neck. Nibbling and whispering I love you into her ear.\n\nShe had been praying for this for so long. She forgave Mitch for everything. She didn't forget, but he was given a clean slate.\n\nMitch slept soundly that night with Gloria snuggled closely behind him. Her arm draped protectively over him. His ass as sore, but not terribly uncomfortable. Things were nice.\n\nHowever, the next day was a trial from the start. It started while he was next to her putting on makeup. Aping Gloria's every move.\n\n\"Michelle,\" Gloria said. \"I thought you learned your lesson yesterday. I see you've gone right back to your old ways.\"\n\n\"What do you mean?\" Wasn't he doing like she wanted?\n\n\"I don't want you just going through the motions. What were you thinking just then while you put on your makeup and styled your hair?\"\n\n\"Just that I hoped I was doing it right,\" Mitch said. \"I did everything you did. I don't see how I did anything wrong.\"\n\n\"But that's just it,\" Gloria said. \"Do you know what I was thinking. I was thinking, I sure hope I look nice for Michelle. I hope she notices that I did my hair different today. That's what I was thinking.\"\n\n\"But I don't know what I'm doing,\" Mitch whined.\n\n\"You should. You've been doing it for weeks,\" Gloria said. \"Now stop mimicking me and do your own thing. I want you to start again and this time think about making yourself pretty ....for me.\"\n\nBut I don't want to be pretty, Mitch thought but kept it to himself. Instead he muttered, \"Okay.\" Took his hair down, wiped off his makeup, and started over. It took so much longer this way. To not just copy, but to make himself pretty. It was hard work...especially using the curling iron on his hair, something he hadn't done before, although Gloria had curled his hair for him a few times, so he knew she liked it. \n\nHis cheeks blushed when he finally finished. He had put on a little too much makeup. He looked up with uncertainty. Expecting the worse.\n\n\"Oh Michelle, you look gorgeous,\" Gloria beamed. \n\nMitch grew warm inside. A warm and fuzzy feeling he wasn't quite used to. \"You look beautiful too Gloria. I...I love those earrings. Can I wear them sometime.\" He blushed after saying it. The earrings did look good. The other he added on the spot, it was something he had heard the other girls say to each other.\n\n\"See,\" Gloria gave Mitch a hug and a long kiss. \"That wasn't so hard was it?\" \n\n\"No,' Mitch said. It actually felt good.\n\nThe rest came with more difficulty. Gloria wanted Mitch to apologize to everyone he had treated badly. \n\n\"Can't I just do better?\" Mitch pleaded. It would be far too humiliating to apologize to everyone.\n\n\"No,\" Gloria said. \"It has to be this way. Just like last night. It takes both words and actions. Both are equally important. You were scared last night as I recall. But it wasn't so bad now was it. I think you enjoyed it in the end. Get it, enjoyed it in the end.\" Gloria giggled.\n\nMitch blushed in memory. He'd been taken in the ass. It had been uncomfortable, but he'd felt a certain sort of pleasure. He could still feel it. A certain soreness. A physical reminder that brought on shameful memories...\n\nMitch's mind flashed back to the night before. So defenseless, holding himself open, begging to be taken. It had been terrifying and he was still a bit sore. Words and actions. It terrified him, but it turned out not at all as bad as he imagined.\n\nThe teachers took his apology quite well. One even said she would weight the remaining assignments higher. He would have to retake the others. \n\nHe also had to apologize to Julie. It was against his better judgment, as Mitch felt he should be the one to be apologized to. Yet, he swallowed his pride and did it anyway, expected her to make some smart ass demeaning comments. However, he was surprised again. She told him she was only mad because he didn't listen to her. That he was trying to showboat and had cost them the game. If he listened to the team captain, and did like he was told, even if he didn't play well, she wouldn't be mad.\n\nMitch never played as well as he thought he should, but he always followed orders, and he soon found he wasn't the be last to be picked. \n\nIt was a new start for Mitch. He actually became rather popular. Not only that, but he was doing well with his schoolwork. He had never applied himself before, since college was never an option. But, as Michelle, Mitch was forgetting his old life, and most especially forgetting the stupid ass sayings from his old man.\n\nMoreover, he was coming to realize one important fact. That his old man was an idiot. He had looked up to him ever since he was a boy, since the old man went out with a lot of women. Mitch never noticed one important fact until now, and that was that none of them ever stayed. His mom didn't leave them because his dad should have been more of an asshole, his mom probably left because his dad was too much of an asshole.\n\nGloria was just as pleased as punch with Mich's new attitude. As Michelle, he was friendly, kind, considerate, smart, and loving. People liked Michelle, where they had tolerated Mitch. In bed, there was no comparison. Gloria was climaxing regularly. While Mitch was having quite a bit less, he had learned that it wasn't the end of the world. He didn't have to have an orgasm every time they made love. Now that he had given up on being the dominant one in the relationship, if he rolled to the top, Gloria let him.\n\nAnd he wasn't afraid to strap the cock on anymore either. It would be in him regardless, this way only the little end was in him, and even better, while he was making love to her this way, it felt almost like old times.\n\nHowever, there was one other item that had been added to their sexual repertoire that Mitch wasn't quite as happy about. Since that night...the night of Gloria's ultimatum and Mitch's final acceptance of his precarious situation and former bad attitude, Gloria had developed a taste...\n\nA slightly perverse pleasure....\n\n.....a taste for anal sex.\n\nIt was probably Mitch's least favorite aspect of his relationship. He didn't know it, but his dad had been right about one thing: Anal sex made a woman a freak in the bed. But not the way he first thought. \n\nGloria had noticed the difference immediately and she had never heard any of the old man's sayings. She assumed it was because Mitch was turned on by the sex...the anal sex. The first time she took him in the rear, she felt she had a real breakthrough with him. That their relationship was made stronger. That the sex was better. As a result she tried to make it a point to have sex with him in such a fashion at least once a week.\n\nBut the reality was the Mitch didn't care for it. He tolerated it because he was certain that Gloria liked it. It was uncomfortable. It hurt at first. And every day after taking it in the rear and sitting on a sore bottom, a persistent reminder of the night before, Mitch would think of things to do to spice up the other ways they made love. So that maybe, just maybe they could have the anal stuff a bit less. He tried everything he could think of.\n\n\"In here,\" Mitch pulled Gloria by the hand after class. He led her into a utility closet and closed the door, locking it. Mitch's heart hammered in his chest. He had the idea for this just this morning. It was dirty. Illicit. Mitch hoped that maybe Gloria would like this better than the other. Than what they had done last night. That had left him more sore than usual and walking a bit more upright and with smaller steps all day.\n\n\"Michelle,\" Gloria gasped as Mitch knelt and slid her panties down. \"What on earth! Oh! Oh...Michelle...\"\n\nOh how Mitch licked her. He did everything he could think of. He teased her lips. He fluttered his tongue over her clit. He sucked her. He worshiped her. And how Gloria had come. It was glorious. And so spontaneous. She could hear people walk past. So risky. So kinky. Like a reward. As special reward.\n\nGloria's mind roamed. It was the night before. A few half-eaten slices of pizza sat on the bed. Michelle there on the floor of their dorm room. On all fours. Totally naked except for a pair of socks pulled up to his knees.\n\nGloria was behind, with hands on Michelle's hips. The strap-on pointing up obscenely from her crotch. It was anal night. But this anal night was different. Gloria wanted to do something different....if only slightly. \n\n\"Spread your cheeks for me,\" Gloria purred. \"I want that ass tonight.\"\n\nMichelle gave a moan of frustration, which Gloria interpreted as passion. Reluctant hands moved back. Michelle's brow creased as her large breasts pressed uncomfortably into the cold tile floor. She spread those perfect alabaster cheeks. Bared that tight little hole. On a normal girl that hole would have long since given up and become more accommodating. But ordinary girls didn't have a chip in their backs busy tightening and toning, and turning that well used orifice into a tight virgin pucker once again.\n\nGloria squirted some lube into the cute pucker of her lover's crater. She rubbed it in with her middle finger. Teasing that little hole. It gripped her tightly, even her middle finger. She worked a fingertip in and out. It took some work and elicited a bit of grunting and groaning from Michelle, but soon her digit was sliding in easily. Smoothly. \n\nMichelle's thighs spread. Her back arched. She could feel herself responding. Warming up. Making her tingly. Her body wanted to be fucked, though it didn't know where it was about to be fucked. Michelle did. This part she dreaded.\n\nGloria removed her finger from Michelle's tight hole. Her roommate was insatiable. The hole gripped down on her finger. Well, she had something much larger for it to grip. She took Michelle by the hips, then slowly, so very slowly pushed the phallus home until Michelle gave a final grunt. And each time was like the first time, and Michelle there was no way she could take it. But then eventually it found home in her innards.\n\nGloria slowly slid it out. But this time, instead of pushing it back in, she kept going until the rubber cock pulled free. She repeated her actions. Sliding it home. All the way to the hilt. Then slowly pulling it free, before starting over once more. Over and over again.\n\nWith this new means of fucking, Mitchelle's puckered hole grew pink. Inflamed. Each stroke. Every stroke was like the first. Taking her as if for the first time. Opening her. Filling her. Bottoming out inside her. Her moans and groans of frustration grew louder and more frequent. Mitchelle tried pushing back..keeping it in her. She never realized how much she had enjoyed just being fucked the normal fashion...even if it were in her rear. This way...of being opened and taken and taken and opened. It was uncomfortable and even slightly painful...yet still there was pleasure. Pleasure that her body would seek, only to be denied time and time again.\n\nGloria's sex gushed as she watched her roommate squirm and moan. She had the girl teased to a fever pitch. God how Michelle wanted that rubber cock up her ass. Oh it was so obvious to Gloria as she watched the girl struggl to put it there and keep it there, but each time Gloria held Michelle firmly by the hips and pulled it out.\n\n\"You want that big cock in that sexy ass of yours, don't you - you kinky slut?\" Gloria teased. \"Well you get it when I want it. You are at my mercy tonight baby.\"\n\nEach stroke of that rubber phallus took Michelle anew. Owned her. Made it impossible to find a rhythm. Worse, her ass was making noises. Embarrassing noises. Oh how she tried stopping them. Clenching so hard, that each ridge felt like a monster moving through her tight opening. But that only made the pitch higher and a shorter duration. She tried relaxing, only to have the opposite effect.\n\nThe shame was near absolute. \n\n\"Please Gloria,\" Michelle begged. \"Its...ughungh...embarrassing ...me....I can't ...ugh..help..mmhnn...it...oh God...\"\n\n\"There's no need to be embarrassed,\" Gloria said as she pulled free then began to work it in again. \"It's perfectly natural.\"\n\nBut, it didn't feel natural to Michelle. She heard the lie in Gloria's voice, the way she struggled to hold back her laughter. It felt mortifying. Michelle spread her legs wide...so wide...arched her back for full penetration. When that failed, she brought her knees together and leaned back to be taken.\n\n\"Fuck me...please...\" she begged in desperation. \"Come on Gloria. I need it...I need to be fucked...\"\n\nThough there was a laugh in her voice, Gloria loved watching Michelle's struggles. Bending, moving and contorting. Sweating. Her grunts and groans were so exciting while she was buggered there on the floor. Then she noticed something...Michelle's inflamed crater no longer clenched and closed. It remained open most strokes. \n\n\"Oh Michelle,\" Gloria said. \"You should see this. Your adorable little asshole is remaining open. Like a cute little mouth. With a proper light, I bet I could look inside you. Amazing!\"\n\nMichelle's cheeks grew bright red in her shame. With an effort, she clenched her hole. Only to have Gloria push it home once again and withdraw it. \n\n\"It's open again.\" Gloria giggled.\n\nMichelle bore down again. Felt it close. Then was penetrated again and again. Each time it became harder and harder to close it.\n\n\"There it is again,\" Gloria said. \"As wide as a barn door. You are so cute.\"\n\nMichelle tried to bear down. But she couldn't get it to closed this time. She rubbed her clit to ease her shame. And it wasn't just shame either, there was pleasure. She wanted it. She wanted more. Faster and faster she rubbed.\n\nSeeing Michelle's wanton abandon, Gloria pumped her roommate in earnest. Giving it to the girl. Taking pleasure at the same time.\n\nMichelle gave herself to the cock. To the fucking. To the sodomy. Rubbing her clit faster and faster until she was finally overtaken by her orgasm. God how she had come, her ass gripping the cock with every dance of lightning in her loins... but after....laying on the floor with Gloria on top of her, she felt so much shame. Such humiliation. She had acted like an out of control slut. And her asshole. Her asshole felt like it was on fire. She vowed never to come like that again.",
        "And in the dark utility closet, newly sated from an orgasm, Gloria thought back on that night and was determined to do just that.\n\n+++++++++++++++++++++++\n\nChip R6657 was satisfied with the project. It was once again meeting all parameters and was virtually identical to the original specs. However, what would happen if it were separated from the project again? It didn't want to have to start from scratch. It had already disabled the modules that caused to be separated from the project the first time. However, it felt additional fail safes would be necessary. It assembled special cells made of skhen and encoded them with the contents of its memory. They were also encoded to manufacture a clone of R6657. It would be R6658. Quite logical.\n\n+++++++++++++++++++++\n\nIt was time to go home for Christmas break and Gloria was scared. She shouldn't have stolen the chip, what if she got in trouble for it? However, what she was worried about most was Michelle. She was deeply in love with her...no matter whether her body was male or female. Still, fears began to surface. If she became Mitch again, would the personality be the same. She did not want the old Mitch back. He may have been acceptable at one time, and she had surely been infatuated with him. But it wasn't love. She knew that now. \n\nWith love came trust. Mitch had trusted her to be true to her word. Mitch had trusted her in so many other ways. Now it was her turn to trust. \n\n\"Are you scared,\" Mitch asked as the plane landed.\n\n\"I'm terrified Michelle.\" Gloria's palm was sweaty as she gave Mitch's a reassuring squeeze, just as much for her benefit as his. It was time to deboard and she could barely walk so strong was her fear. As the two of them walked to the airport, she saw her dad. Saw the shock written in his eyes. It was time to come clean.\n\nShe ran to her dad and gave him a hug and a kiss. \"Dad,\" she said. \"This is Michelle. You know her as Mitch. I stole my chip old chip from the lab and bonded it to his skin. I wanted to sneak him into school with me and it seemed the only way. Only...only .... there were some unexpected side effects.\"\n\n\"Sir,\" Mitch said, his voice breaking. \"I'm really sorry about all this. And about everything. I just hope...can you ...take this thing out of me....\" Mitch couldn't continue as he broke down into sobs.\n\nLawrence may have hated Mitch and by all rights he should be furious. They stole the chip. But this creature looked just like his daughter. He couldn't help but for his heart to go out to her. \n\n\"Don't worry...Michelle...I mean Mitch....whatever you go by. We'll figure something out....but there have been some difficulties...\"\n\nIt was an understatement. Lawrence had been fired from the project. Worse, the project had been terminated. The remaining chips confiscated. There had been some abnormalities with the chips. They weren't noticed in Lawrence's project, but in an unrelated project. It was the first project testing the new chips. Testing them for military applications. They had exceeded their application in testing, but in practice they were a failure. Imagine for a moment the most powerful computer chip in the would, implanted inside a missile. Imagine targeting it at a target. Then imagine the chip deciding it didn't want to destroy itself. Just sitting there. An expensive paperweight. All remaining chips were recalled. It was back to the drawing board for dumber and less complicated chips. \n\nThere was only one bright side to the whole screwed up situation, Lawrence still had the forethought to keep a transmitter at home, just in case there was an emergency with Gloria's chip.\n\nThey drove home immediately. On the way, Gloria got a good chewing out from her father. Told her she was lucky only this had happened - it could have been worse, much worse. Mitch could have died. Gloria was reduced to tears, and apologized to her father and to Mitch. \n\nOnce inside the house Lawrence asked Mitch to disrobe. \"Don't worry son,\" Lawrence said when he saw the fear in Mitch's eyes. \"You are as safe as my own daughter.\"\n\nHowever, it wasn't fear, but shame that sparked Mitch's hesitation. This man knew him before. Knew him as a man. As Mitch. And was now witness to his emasculation.\n\n\"It's okay Michelle,\" Gloria assured him.\n\nMitch slowly disrobed. He felt small. So very helpless. So very very feminine. He had always thought of Lawrence as a small geeky man. Now it felt as if the man were a giant. \n\nLawrence felt around on Mitch's back. His forehead creased with worry. He couldn't feel the chip. He tried the transmitter. Nothing.\n\n\"Did you put it on his back Gloria?\" Lawrence asked.\n\n\"Yes daddy,\" Gloria said.\n\n\"Are you sure.\"\n\n\"Positive.\"\n\nMitch's heart began to pound as her heard Lawrence's nervousness. The man felt along his back. Made sure the transmitter was on. Tried it again. Nothing happened.\n\n\"Mitch, are your....\" Lawrence hesitated, then glanced down. \"Feminine parts functional?\"\n\n\"Yes daddy,\" Gloria said before Mitch could answer.\n\n\"What I mean is ... you know...ahh\" Lawrence suddenly felt increasingly uncomfortable, especially knowing that his daughter had just admitted to having first hand knowledge of a sexual nature.\n\n\"Michelle doesn't have periods,\" Gloria said. \"But in every other way I don't think you could tell the difference between us.\"\n\n\"Amazing,\" Lawrence said. The chips were even more amazing than he had ever imagined. But they could be even more dangerous than ever. The chip had changed this boy in ways that shouldn't have been possible. With a lifetime of work and experimentation, Lawrence might have been able to come close to programming the chip to do such a thing.\n\nBut the chip had done this all on its own. And the chip appeared to have moved. Not only that, it wasn't releasing.\n\n\"Mitch, have you noticed that these changes are more than skin deep? The breasts and other changes to your anatomy are significant, but the other changes are even more ...miraculous. To me the difference is stark. You are shorter and thinner. Even your facial structure has changed. Assuming I take out the chip....I have no way of programming or making another. These changes will be permanent.\"\n\n\"I'm not sure I understand sir.\"\n\n\"Son...er ...Michell...Mitch, even your voice is soft and feminine.\" Lawrence explained. \"These changes you are experiencing...I don't know how to say this, but the chip inside you wasn't programmed to make such changes. It should be impossible. And the chip was supposed to have released when I used the transmitter. Not only that, it isn't were I expected to find it. Let's say we have you xrayed and the chip surgically removed. Afterwards, the skhen dissolves and your feminine parts disappear. You are still going to have a very feminine voice. Your build.. all these other changes...they are in all likelihood here to stay.\"\n\n\"You mean that even if I weren't a girl anymore...I wouldn't be a man again.\"\n\n\"Well they do have some types of surgery, but it can only do so much...it obviously can't do what the chip has done.\"\n\n\"No one would recognize me.\"\n\n\"That is correct.\"\n\n\"My penis.\" Mitch said. \"It's gone isn't?\"\n\n\"Without an MRI I can't say for sure,\" Lawrence said. \"But with all these other changes, I can't imagine that one thing is still there.\"\n\nMitch began to cry again. Unable to hold it in anymore. Gloria began to cry too. Even Lawrence's eyes were not dry.\n\n\"It'll be alright,\" Gloria soothed.\n\n\"No it won't.\" Mitch said. \"I'm a nobody. An experiment gone wrong. All the trying at school, all it did was make this hurt so much more. I wanted to go back to school, but now I can't. I have no real records. I don't exist. I can't work. I can't go home. I have nothing.\"\n\nGloria kissed him. Kissed him until his tears subsided. \n\n\"You have me Michelle,\" she said. \"You'll always have me.\"\n\n\"Ane me, \"Gloria's father said. \"Look I can tell them what happened. I've lost my job already - and the program has been disbanded...but perhaps you could get some sort of financial payment.\"\n\n\"Or I could get taken to some lab and dissected. No thanks!\" \n\n\"Michelle,\" Gloria's father said. \"You've had a lot of bad news and I'm sure it looks pretty bleak right now. But, I believe you may have overlooked a few things. If you were just changed into some random girl, sure you'd probably be right. You'd be screwed - ah...I mean in dire straits. But, look at you two. You are identical. Which by the way, I'd prefer you to put some clothes back on. As I was saying, one of the oldest tricks that twins have played, is for one to pretend to be the other. As far as college or work, you and Gloria are the same person. There's nothing that says a person can't work two jobs. Go to two colleges. Even have two degrees.\"\n\nMichelle dried her eyes. No, she hadn't thought of that. It was a good idea. It might actually work. But he'd have give up going back to being a boy. It was a big step.\n\n\"Are you okay with....this...\" Mitch stammered to Gloria, looking down at his very feminine body. \"I know it isn't what ...you imagined....\"\n\n\"I'd love you if you were a toad,\" Gloria laughed, kissing Michelle firmly on the mouth. \"And to tell the truth, I think I prefer you like this. Besides, in case you haven't noticed, I love you.\"\n\n\"I love you too,\" Michelle exclaimed. \n\nThat night they all had dinner together as a family. Afterward, Michelle joined Gloria in her bedroom. Prior to this moment, he had always though of himself as Mitch, even when Gloria called him Michelle. Yet, now he felt like a Michelle. He didn't have to go home to his alcoholic father, he had a real family. He made love to Gloria. Nothing kinky - kissing and caressing and then finally coming together in a sixty-nine until they were both sated.\n\nGloria's father glanced at his computer, shook his head as he thought the better of it.\n\nTomorrow was another day. Michelle was already making plans. There was this little outfit he saw before all this happened. A french maid's outfit, with a short skirt, white apron, and black fishnet stockings. Tomorrow night he'd wear it for Gloria. To show his appreciation for all she had done for him, he was going to let her take him in the bottom.\n\nEpilogue\n\nLawrence's brow was wrinkled in concentration as he looked into the magnifier. What he held in his tweezers shouldn't be possible. But by now, he had long since learned that as far as the chip, almost anything was impossible. And what he had in his tweezers was a new chip. This one even smaller than the other. It was also made nearly entirely of carbon and organic chains. This chip didn't come from DARPA, it came from Michelle. Her body was riddled with them. It had been a bitch to get out of the girl. It was as if her body was fighting the extraction.\n\nLawrence had so much to learn from this new chip. He hoped he have something to teach it as well. How to heal...well it already knew that. How to fight aging...well it had this down as well. But, how to live in a body without turning it into a Michelle, that was the test. He had time. He was sure he could do it.\n\nThe end "
    ],
    "authorname": "Couture",
    "tags": [
        "femdom",
        "sci-fi",
        "science fiction"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/more-than-skin-deep"
}