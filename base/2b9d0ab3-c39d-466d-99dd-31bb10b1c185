{
    "title": "The Halloween Skits",
    "pages": [
        "Paul soaked in the moment as he took to his makeshift stage to announce the contest. He had been planning this party for months. His annual Halloween parties had become legendary in certain circles in Los Angeles, spoken about in hushed whispers over stiff drinks.\n\nHalloween was Paul's favorite holiday because it gave license for typically reserved people to unleash their unbridled sexuality. It was by far the sluttiest holiday, he thought.\n\nSecuring an invitation on his carefully curated guest list was not easy. He eschewed the celebrity class. He disliked actors and preferred to surround himself with people who had other careers in the entertainment industry. After a couple of decades in California he had finally found his crowd. People who were fit and healthy and beautiful but also down to earth and comfortable in their own skin. People he genuinely enjoyed.\n\nPaul had the means to throw a truly extravagant celebration, having achieved real success in his career as a film producer. Every year he pulled out all the stops, trying to outdo himself. This year, his estate had been transformed inside and out with dance floors, elaborate decorations and numerous surprises for his guests. He had hired several performers including an aerialist, a pole dancer, and go-go dancers. They were all costumed, of course, along with the wait staff and bartenders.\n\nHe looked out over the gathering crowd and was impressed by the intricate and provocative costumes. He thought back on last year's party. By the end of the sexiest costume contest, there was not a soft cock in the house. This year he planned to up the stakes significantly.\n\nPaul welcomed the crowd and announced the rules of the contest. At the stroke of midnight, contestants would take to the stage, one group at a time, and perform a skit of their own invention. Each participant would play the character dictated by their costume.\n\n\"If you're dressed as a sexy vampire, you play a sexy vampire,\" he explained. \"You'll have use of some simple props, a table, some chairs, but mostly your creativity will make the difference. I know this is an artistic crowd and I expect great things.\" \n\nThe sexiest performance, in his sole judgement, would win the grand prize. The prize was an all-expenses paid trip to Cabo to spend a week at Paul's private villa with full use of his house manager and personal chef.\n\nAt this announcement, his guests began to chatter excitedly. Paul spoke up over the din. \"The only rule is that photography is strictly prohibited, for the sake of our contestants. Anyone caught with their phone out during the performances will have it confiscated by my staff.\" He looked around at his guests to make sure they knew he was serious.\n\n\"Okay, come on up here and put your group on the list any time before midnight. In the meantime, eat up, drink up and enjoy yourself!\"\n\n* * *\n\nTHE ARREST\n\n\"So's this how you thought we'd be spending our third date?\" Emily asked.\n\n\"Not quite!\" Adam laughed. \"Figured we'd be watching some Netflix, maybe getting ready to 'Chill'.\" He raised his eyebrows, making it clear that he was joking. Kind of.\n\n\"Just didn't expect to be 'chilling' in front of an audience for the first time, huh?\"\n\n\"I told you we didn't have to enter the contest,\" he said.\n\n\"It'll be fun! I don't even care about winning.\"\n\n\"Wouldn't it be more fun to watch everyone else make a fool of themselves?\"\n\n\"You're not chickening out on me.\"\n\n\"A lot of my friends are here, Emily.\"\n\n\"C'mon Adam. I thought you were 'willing to try anything once',\" she said tossing a quote from his Tinder profile back at him.\n\n\"Babe.\"\n\n\"I won't embarrass you. Don't you trust me?\" She brushed a lock of strawberry blonde hair out of her face and looked up at him with soft green eyes. Her smile curved mischievously at the edges. That face gutted him. He knew it would always make him give in.\n\n\"I do, I think.\" He grinned. \"Anyway, it's not my hot little ass that everyone is going to be staring at up there.\"\n\n\"Don't be so sure. I gotta show all those lady friends of yours who you belong to now.\" She winked as she smacked his ass.\n\n\"Up first,\" Paul's voice shouted over the chatter, \"we have Emily and Adam! Please come to the stage!\"\n\nEmily grabbed his hand and pulled him towards the front of the room.\n\n\"Shit.\" Adam's heart was racing. \"So, what's our plan again?\"\n\n\"I'm going to arrest your ass.\"\n\n\"Okay. I'll follow your lead.\"\n\n\"Don't worry, I've watched a lot of Law and Order.\"\n\nThey were greeted with clapping and catcalls from the crowd as they stepped onto the stage.\n\n\"Emily, it's a real pleasure to meet you,\" Paul said. \"You look fetching in your uniform. I see you're an FBI agent?\" He pointed to the bold letters on one side of her large chest.\n\n\"Federal Body Inspector, actually.\" Emily turned around and pointed to the text on her back. Her black uniform jumpsuit wore more like a long-sleeved one-piece bathing suit. It was skintight and was cut high, exposing the bottom half of her tan butt cheeks.\n\n\"Lucky for us!\" Paul said, pausing to admire Emily's petite figure. \"And Adam, I see you're still doing CrossFit.\"\n\nAdam shrugged an acknowledgement. His convict uniform consisted of orange spandex briefs that were barely larger than a speedo. Black suspenders ran up his otherwise bare torso, showing off his muscular chest and rippling six pack abs.\n\n\"Thank you guys for going first.\" Paul turned to the crowd. \"They will be performing a skit called 'The Arrest'. Let's give them a warm round of applause and help them break the ice up here.\"\n\nThe crowd got loud. \"Take it away guys!\" Paul exited the stage and after a moment the crowd quieted down.\n\nEmily wasted no time, startling Adam and the crowd by shouting \"Hold it right there, mister!\" She pointed at him. \"I'm a Federal Body Inspector and I need to inspect you because you may be in violation of Regulation 69 - being too hot in a public place.\"\n\nA few good-natured laughs let them know the crowd was game and not critical of the cheesy beginning.\n\n\"Well, hello officer.\" Adam replied in a smooth voice, belying his nerves. \"I like the way you wear your uniform.\"\n\n\"I have to warn you that anything you say can and will be held against you.\"\n\n\"Your tits!\" Adam called out while pointing at her chest and laughing at his own joke. The audience laughed with him and someone let out a whoop. The zipper on the front of Emily's uniform was open to the base of her sternum, flaunting her gravity defying cleavage.\n\n\"Cute.\" She gave a fake smile before reaching out and grabbing his outstretched hand. She twisted it hard in a move she'd learn in Krav Maga. It caught Adam off guard and spun him around.\n\nAdam made an exaggerated face and mouthed \"Ow\" to the audience as Emily held him in an arm lock from behind. \"Spread your legs,\" she commanded as she kicked his feet past shoulder width apart.\n\n\"Yes ma'am,\" Adam said as he complied.\n\n\"I'm going to frisk you. Are you carrying any concealed weapons?\"\n\n\"No, officer.\"\n\n\"Arms out.\" He spread his powerful arms and she stood on her tippy toes to run her hands along each one. Her petite form looked even smaller next to his bulk. Then, she ran her fingers through his hair, down his neck and onto his back.\n\nHer frisk turned briefly into a sensual back rub before her hands continued down. She cupped both of his ass cheeks in her hand, smiling for the benefit of the audience and then squeezed hard. Adam jumped.\n\n\"Don't move, buddy! Unless I say so.\" She groped his butt again.\n\nHer hands reached around and caressed his torso as she pressed her body against his back. She paused to tweak both of his nipples, which got another chuckle out of the audience. She continued and traced her fingertips over his tight abs.\n\nAdam was starting to get turned on by all the touching. He was worried that if he got an erection in his tight bottoms it would be very obvious to everyone at the party.\n\nEmily dropped into a squat, her face near his butt. She grabbed his ankle and ran her hands up his leg to his upper thighs, stopping just short of his orange bottoms. Then she repeated the process on the other leg.\n\nPoking her head around the side of his body, Emily looked directly at the audience. She gave her best evil grin and winked. She slithered her hand between his thighs and reached up to cup his now semi-hard penis.\n\nShe clamped her hand and gripped his bulge tightly. Adam jumped and when he did, she slapped his butt with her other hand, reminding him to stay still. Then Emily began to feel around the length of his shaft, exploring all of his parts from the outside of his spandex underwear. He was rapidly becoming aroused. His erection grew sideways, following the elastic band of his briefs.\n\nWithout letting go, she looked up. \"Well, well. What do we have here? You said you didn't have any concealed weapons. You lied. Do you have a license to carry this?\"\n\nAdam couldn't believe she was being so bold! He had to play along. \"Well not exactly officer, you see-\"\n\n\"Enough excuses.\" she cut him off. \"This is a clear violation of the Penal Code. I'm going to have to cuff you.\" She stood and unhooked a pair of handcuffs from the belt on her waist. Adam let her pull his arms behind his back and felt the cold handcuffs close around his wrists. He now felt very vulnerable.\n\nEmily walked to the side of the stage and grabbed a chair, dragging it back to the center. She sat Adam down and came around to kneel between his legs.\n\nHer voice softened. \"That's a pretty big gun you're packing there.\" She firmly grabbed his erection through the tight orange material as she spoke.\n\nAdam was embarrassed that his friends in the crowd were getting such an intimate view of his package. At the same time, he was proud of his body. All of it. And he was turned on by this side of Emily which he had not yet seen.\n\nEmily began to stroke his length back and forth and Adam involuntarily let out a moan. \"I can't allow you to leave with this thing cocked. You may end up hurting someone.\"\n\n\"What do you suggest we do about it?\" He wasn't sure where she wanted to go with this.\n\nShe let go and stood up, coming around beside him. \"I can let you keep the gun, but I'll have to confiscate all your ammunition.\" The crowd, which had grown silent, gasped a collective breath.\n\nHis now fully engorged erection was pushing against the confines of his briefs, causing the waistband to gap. She looked down at it and licked her lips.\n\nShe grabbed the zipper on the front of her uniform and slowly lowered until it was about four inches below her belly button. As she did, the fabric spread and exposed the middle half of her breasts. She was dangerously close to exposing her areola, maybe even the top of her pubic hair.\n\n\"At this point,\" she said, \"your gun is cocked and there is a round in the chamber. I think it's best for all involved if we shoot the gun in a controlled manner.\"\n\nAdam couldn't believe this was happening. Did she plan for him to ejaculate on stage in front of all these people? The thought made him lightheaded.\n\n\"For my safety,\" she continued, \"I'm going to leave you handcuffed until the threat is neutralized. So, I will be in charge of firing the pistol.\" Adam stared at her intently, unsure of what to say.\n\n\"I can see the concern on your face,\" she said. \"Don't worry, I've had extensive training for just this circumstance. First, I'm going to unholster the weapon. Then, I'll begin a thorough hand inspection of the barrel and ammunition chamber to ensure everything is in good working order.\" She mimed holding a shaft with one hand and cupping balls with the other.\n\n\"Then I'll aim the weapon at a soft target.\" She grabbed her large breasts and pushed them together and the edge of her areola slipped into view. \"Finally, I will remove the safety and pull the trigger.\"\n\nEmily dropped back to her knees, her hand once again encircling his bulging shaft. \"As we both know, when it goes off, there will be a strong kick and a residue discharge. I'm prepared to thoroughly clean the weapon before re-holstering it and uncuffing you.\" She looked right into his eyes and licked her lips.\n\nAdam wanted to end the skit, but he was also turned on. He ached to feel her warm lips around his hard cock. She continued stroking his length up and down over his thin spandex as she looked into his eyes with that impossibly beautiful face.\n\nShe looked down at his crotch and saw that drops of precum were forming a wet spot. \"I'm glad to see your weapon is properly lubricated. You've taken excellent care of your equipment so this should be a smooth process.\"\n\nShe bit her lip and looked up at him. \"Before I begin, do you have any concerns you'd like to raise?\"\n\nAdam was glad she was giving him an out. \"Well, uh yes,\" he responded. \"Are you going to discharge the weapon in front of all these people?\" He tilted his head towards the audience. \"It seems unsafe. Maybe can we find a private place to finish the job?\"\n\nEmily smiled knowingly. \"I think these people would appreciate a public demonstration on how to safely discharge a loaded weapon. You never know, it might prevent an accident down the road.\" The crowd roared their approval.\n\n\"Well, it's just that I've only ever fired my weapon on a private range before.\"\n\n\"Are you being uncooperative?\" Emily's tone grew stern. \"You know, you are in big trouble mister. Carrying an unlicensed concealed weapon and failure to cooperate with the arresting officer. I might need to perform a full cavity search to see if you have any contraband. Would you like me to do that instead?\"\n\n\"Uh, no! No. That won't be necessary.\" Adam said quickly. \"I am in your hands, miss, and happy to cooperate.\" He resigned himself to what was clearly the lesser of two evils.\n\n\"Good. I'm glad to hear that. I promise I will be gentle and will leave your weapon in perfect condition. Now stand up so we can get started.\" Adam stood awkwardly, finding it difficult with his hands cuffed behind his back. Emily remained on her knees before him. His erection made an obscene tent in the front of his small shorts.\n\n\"How hard do you have to squeeze the trigger to shoot this pistol?\" she asked. \"Is it sensitive? I don't want it going off in my hands before I'm ready to handle the discharge.\"\n\n\"You have to squeeze pretty hard before it pops. I can give you a heads up when it's close if you like.\"\n\n\"Yes, please,\" Emily said, and she hooked the fingers of both hands in the top of his waistband. She looked up at him and scrunched her nose. \"The demonstration will begin now.\" Adam and the audience held their breath, but Emily froze in place.\n\nAbruptly, she stood, winked at Adam and slapped him on the butt. She turned towards the audience. \"The end,\" she said with a smirk and gave a bow. The audience erupted in a mix of cheers and boos. Adam stood there with his mouth open, dumbfounded.\n\nEmily laughed as the crowd would not quiet down. A chant of \"Shoot the gun! Shoot the gun!\" broke out. Paul stepped up from the side of the stage and raised his hand to silence the audience, which worked after a few moments.\n\n\"Thank you so much to the first participants! It was a very entertaining and sexy first act. Perhaps we'll see more of your act at a later time?\" Paul glanced towards the couple. \"For now, we'll let them off the hook. Let's give them a warm round of applause. Emily and Adam!\"\n\nThe crowd cheered unanimously this time while they both bowed. Adam's bulging briefs showed no sign of letting up as he stood in front of the cheering audience.\n\n\"And now,\" Paul interrupted the clapping, \"it is time for our second performance of the night. Please welcome Jim, Kendra and Vicky to the stage.\" \n\n* * *\n\nDETENTION\n\n\"Kendra, we have enough sex phrases. It's time to go!\" hissed Vicky as she pulled her friend towards the stage. Kendra stashed her phone in her purse. She grabbed her boyfriend's wrist and the three marched towards the front of the room.\n\nVicky was a petite, busty Asian. A significant contrast to Kendra's fair complexion, taller frame and smaller breasts. Both girls were knockouts.\n\nThey were dressed in matching cheerleader uniforms. Their blue and gold tops weren't much bigger than sports bras, showing off their tight midriffs. The matching skirts were scandalously short. And their pom-pom accessories finished the outfit.\n\nJim followed in tacky, retro short-shorts, knee-high three stripe socks, a wife beater and a sweatband on every limb. He was tall with dark curly hair and wore a perennial smile, usually because he'd just made everyone around him laugh.\n\nAfter they were introduced and arranged some furniture, Jim began. \"Okay ladies you both know why you've been sent here for detention,\" he said in a gruff voice. \"Since I'm your gym teacher, it means I'm qualified to tech Sex Ed. And since we're supposed to do something academic during this detention, we're going to work on some extra credit.\"\n\nJim stood up and put one foot on the desk. He did an exaggerated stretch of his leg, giving the audience an eyeful of his hairy thigh. \"We're going to start with vocabulary. Has anyone ever heard of the Rusty Trombone?\"\n\nBoth girls looked at each other blankly.\n\n\"No? Okay. It describes a sex act where you give your partner a hand job while also performing anilingus on him.\" Jim's interpretation of the move in the air drew guffaws from the crowd.\n\nKendra raised her hand. \"Um, like, what's anilingus?\" She tried to act extra ditzy as she admired her boyfriend's ability to keep a straight face.\n\nJim rolled his eyes. \"A rim job.\" He paused for a response but got none. \"Tossing the salad?\" Both girls stared back, expressionless. \"Ass eating season?\"\n\nLightbulbs went off and the girls nodded their heads. \"Oh yeah. I love that.\"\n\nJim then launched into a lecture covering the finer points of a number of sex acts including the Cincinnati Bowtie, the Hot Carl, the Donkey Punch and the Dirty Sanchez. The audience was roaring with laughter by the end of it.\n\n\"And that is why it's called the Missouri Compromise when you're a virgin, but you let him in the back door.\"\n\nThe girls nodded enthusiastically. Throughout the lecture, both girls had been hamming it up. As they fidgeted in their seats, they had been accentuating their cleavage and flashing their panties to the audience.\n\nAlthough Jim was able to keep his cool, Kendra could tell that her boyfriend was enjoying the show that Vicky was putting on, too. Instead of making her jealous, for some reason that turned her on.\n\nVicky raised her hand. \"Um, do we need to take notes?\"\n\n\"No,\" Jim dismissed. \"Let's talk about female masturbation. Do you masturbate, Vicky?\"\n\n\"Yes of course.\" Vicky replied as she bit her lip.\n\n\"What are some terms for that?\"\n\nThe girls began a rapid fire response, shouting out as many of the phrases as they could remember from their skit planning cram session. \"Polish the pearl! Diddle the Skittle! Double-click the mouse. Trip the switch! The three-knuckle-shuffle. Buff the muffin! Go finger painting. Part the red sea. Circle the wagon!\"\n\n\"Very good, girls,\" Jim said once they were done. \"This is obviously a subject that you both know a lot about. I see you've been doing your homework. Okay, moving on from vocabulary. For our next topic, I'm going to need one of you to come up here for a demonstration.\"\n\nWhen they planned their skit, they had decided that both girls would enthusiastically volunteer, and Jim would pick his girlfriend Kendra. But when Vicky started waving her hand in the air, Kendra sat back with a smirk on her face. This should be fun, she thought, as she felt the growing wetness between her legs.\n\nJim gave Kendra a quizzical look before picking Vicky and instructing her to sit on the makeshift desk. Vicky was happy to roll with the change. She spread her legs as she sat on the desk and her short skirt bunched around her waist, exposing her panties for all to see. She made no effort to cover them up.",
        "\"We're going to discuss erogenous zones,\" Jim said as he stepped towards Vicky. He hesitated a moment and glanced towards Kendra before continuing. \"Many people know a few of these, but there are some less common ones.\"\n\nJim reached his hands into Vicky's hair and started massaging her scalp. \"The scalp is an example,\" Jim said as Vicky let out a soft moan. \"Stimulation of an erogenous zone should make you feel aroused.\" Vicky moaned louder. \"Is it working?\"\n\n\"Oh yeah,\" she replied. Jim continued to rub her scalp with one hand and slid the fingertips of his other across her earlobe and down her neck.\n\n\"Ears, neck, and lips are other effective zones.\" He traced his thumb along her lips as Vicky looked up into his eyes. Jim stepped back and placed both hands atop her bare thighs.\n\n\"At the other end of the body are the feet and toes.\" He slid his fingers down her leg and removed her shoe and sock. He began massaging the sole of her foot. \"Many people find stimulation here quite arousing.\"\n\nKendra spoke up from her chair. \"Oh, that's the best isn't it, Vicky?\" She knew that Jim was skilled at foot massages.\n\n\"Damn, I fucking love that.\" Vicky said.\n\n\"Watch your language or I'll have to extend your detention,\" Jim warned. He slid his hands slowly back up her legs, stopping just short of her underwear. Vicky was breathing heavily and starting to blush as he traced small circles along her inner thighs.\n\n\"Then of course, there's your well-known zones. Your vagina and clitoris.\" Jim's hands moved within a centimeter of Vicky's panties. Close enough that he could feel the heat between her legs. His hands continued up. \"And your breasts and nipples.\" His hands hovered just over the fabric of her crop top.\n\nVicky grabbed his hands and pressed them onto her chest. \"They're right here,\" she said. Jim felt her glorious tits for the first time, enjoying them for a moment before guilt took over.\n\n\"Sorry,\" he said as he pulled his hands away. \"I don't want to lose my job.\" He looked at Kendra.\n\n\"Excuse me!\" Kendra called out. \"What's that called?\" She pointed to the bulge in his short shorts.\n\nJim regained his composure and deadpanned, \"That's my lap rocket darling. Want a ride?\"\n\nHe wasn't sure where to take this skit now. They'd planned to have him and Kendra fool around a bit while Vicky got horny looking on. He'd grope and make out with Kendra, Vicky would get jealous and intervene, putting an end to the skit. Despite his attraction to Vicky, Jim knew that if he did that with her, Kendra would murder him.\n\nFortunately, Kendra spoke up. \"Can I join the demonstration?\" she asked. She was horny now and ready to return to the original plan so she could get felt up by her boyfriend.\n\n\"Of course,\" Jim said as Kendra sat next to Vicky on the desk. But he had another idea brewing in his head.\n\n\"Now we're going to review the 'bases'. Do you know what the bases are?\" Both girls nodded.\n\n\"Good. What I'd like you to do is demonstrate first base for me. On each other.\" The words hung in the air for a second. Then the audience cheered.\n\nThey hadn't discussed this ahead of time. The truth was, Kendra had never kissed another girl. Not even in college.\n\nKendra was turned on, though, and she knew it would make Jim hot. She knew the audience would love it, too. The thought of kissing her long-time friend while they were dressed like sluts in front of her boyfriend and a large crowd made her pussy drip.\n\nShe turned towards Vicky, who looked back at her with a horny, wry smile. A moment later, their lips met. Kendra's eyes closed and her ears filled with the loud roar from the crowd.\n\nVicky's lips were soft and inviting and tasted like apricot. She felt Vicky's tongue and she parted her lips to allow it access. She replied with her own tongue and tasted Vicky's mouth.\n\nIt was unlike any kiss she'd experienced before. It was more supple, with both women intuitively responding to the movements of the other. Kendra felt a rush of wet heat in her pelvis. She was keenly aware of the feel of her breasts in her bra. She wasn't sure how long the kiss lasted, but eventually they slowly pulled their lips apart.\n\n\"Wow.\" Jim was slow to find his words while the audience continued to whistle their approval. \"You guys get an A on that one.\"\n\nThe girls grinned at each other. \"Do you want to show us second base?\" Jim asked hopefully. The encouragement from the crowd was unmistakable.\n\nKendra wasn't sure how far she wanted to take this, but she wasn't done yet. She scooted herself up on the desk and wrapped one leg around Vicky. She moved close, pressing her pussy against her girlfriend's hip. This caused her small skirt to flip up, revealing her thighs and panties to the audience.\n\nShe hugged Vicky from behind and they turned towards each other to resume their kiss. Kendra's hands wandered up her friend's torso and began kneading her breasts through the uniform top. Jim involuntarily rubbed the lump in his shorts as he stared at his girlfriend making out with her gorgeous companion.\n\nThe uniform top was stiff and unsatisfying, and Kendra wanted to touch skin. She slid her hands up the bottom of her friend's crop top and soon her fingers found the hard nipples that were waiting. Vicky moaned into Kendra's mouth as her engorged nipples were played with.\n\nThe elastic band of the top was constraining. Vicky reached up and shrugged it off, freeing her round breasts for the crowd to see. Both girls heard clearly the wild cheers from the crowd.\n\nKendra now openly fondled Vicky's unencumbered breasts and stiff nipples. She couldn't help but grind her pussy up and down against her girlfriend's hip. Vicky, for her part, had dropped one hand to her lap and was rubbing her clit over her panties in full view of the crowd. The cheers were constant and loud.\n\nKendra focused on the sensation of Vicky's tongue in her mouth but needed more. She pulled back, earning a hungry glare from her friend. Then she leaned forward and took Vicky's nipple in her mouth, moistening all around it with her tongue. She lapped the soft breast skin and dragged her lips over the puffy nipple, marveling at her first taste of boob.\n\nAfter a moment, she sat up and looked towards her boyfriend. Jim's eyes were glazed with arousal as he practically drooled over the scene in front of him. Kendra was quite pleased that her performance was having such an effect on him.\n\nThis whole experience was such a turn on for her. Her pussy yearned to be filled with Jim's thick cock. After the skit she would have to take him into the bathroom and let him bend her over. Maybe she would even invite Vicky along to watch.\n\nThe crowd had quieted a bit, waiting to see what would happen next. Jim spoke up. \"You girls are really excellent students. I am so pleased with your work so far.\" He paused and Kendra sensed that he was debating whether to end the skit so he could find a place to fuck her or push his luck and see how far they were willing to go. \"Shall we continue with a demonstration of third base?\"\n\nVicky's aroused glance at Kendra told her she was game for a bit more. Kendra slid around to fully straddle her friend from behind. She kissed Vicky on the neck and whispered, \"Tell me if you want me to stop.\" Then she made eye contact with Jim as she cupped both of Vicky's breasts.\n\nShe dropped a hand down to her friend's panties and found Vicky's hand already touching herself. Vicky grasped Kendra's hand and pressed it against her crotch. She could feel the damp heat of her friend's arousal through the underwear. She began to rub up and down, exploring the contours of Vicky's pussy through the thin material. She found her clit and applied pressure, slowly circling the hard nub. Vicky groaned her approval and reached up to pinch her own nipples.\n\nKendra stared at Jim who was rubbing his hard cock through his shorts. Then she slid her hand inside Vicky's underwear, across her smooth shaved skin until she reached her pussy. Her middle finger parted her friend's slick lips, then dragged up and circled her clit. Vicky shuddered and Jim let out a long \"Fuuuuuuck\" as he stood frozen in place.\n\nVicky whispered to Kendra, \"I feel like such a slut, but I need you to get me off.\" She began to buck her hips as Kendra traced circles around her swollen bud. The crowd had grown silent, holding their breath as the scene unfolded. Vicky pulled hard on her own nipples as she rocked back and forth against Kendra's fingers.\n\nAfter a few moments, her pace quickened. \"Cum for me,\" Kendra urged. \"Cum on my fingers in front of all these people. Cum for Jim as he watches me get you off.\" Vicky cried out and began to convulse. She shuddered and her thighs clamped around Kendra's fingers.\n\nWhen she came down, the audience burst into cheers, shouting and clapping. Jim turned to face the crowd and gave an exaggerated bow, then held his hands towards the girls who still sat entwined on the desk.\n\nPaul stepped to the stage. \"Now, that will be hard to top! Let's have another round of applause for Jim, Kendra and Vicky!\"\n\nKendra unwound herself from the desk, grabbed Vicky by the hand and Jim by the wrist and dragged them both off stage towards the nearest bathroom.\n\n* * *\n\nUNIFORM VIOLATION\n\nTwo hours ago, David would have never thought he'd be walking towards the stage to compete in this contest. It looked like his night was headed towards another early exit after apologizing for his drunk wife. As had become the norm, she'd made a scene, loudly berating David after she dropped her glass of chardonnay. The sad thing was that her blatant flirting with the waitstaff bothered him more than the drinking.\n\nTonight, her girlfriend had insisted on taking care of her, giving David a sympathetic look as they both left in an Uber. So that was how he found himself hanging out with acquaintances of a co-worker he hardly knew, trying to make the best of the night and take his mind off his marriage.\n\nIt's also how he came to meet Emma, the pretty young girl who was now walking with him towards the stage. She seemed to be everything his wife was not - vivacious, easygoing, and actually interested in David. In fact, she was unmistakably flirting with him. Her constant smile was a rejuvenation.\n\nShe wore a schoolgirl outfit that would get her suspended from any school in the country. The plaid skirt was maybe a foot long and stopped well short of the white fishnet thigh-highs that highlighted her lean legs. The white, button-up top was made of less fabric than the bottoms and was tied in a knot at the base of her ample cleavage. Her high ponytail complemented her frisky personality. A wide expanse of her flat, tanned tummy was on display, accentuated by a belly button ring that David couldn't stop staring at.\n\nUnsurprisingly, David and his wife couldn't agree on a theme, so they hadn't dressed in costume. Instead David wore a perfectly fitted dark grey suit that complemented his salt and pepper hair along with a tie that set off his blue eyes.\n\nWhen Emma had suggested that he act as principal to her schoolgirl, he just couldn't refuse. They had discussed a general direction for the skit, but mostly planned to wing it.\n\nAfter they were introduced by Paul, David began. \"Do you know why you've been sent to my office?\"\n\n\"My teacher says I broke the school uniform code. But I'm wearing the uniform!\" Emma protested.\n\n\"Miss, as you know the code requires not only that you wear the uniform, but that you wear it correctly. I'll have to evaluate whether you are in violation. Please stand up.\"\n\nShe stood from her chair and did a slow spin inviting David and the audience to ogle her freely.\n\nDavid stepped close, their height difference noticeable as her big eyes gazed up at him through fake, thick-rimmed glasses. He placed a finger at the base of her neck and traced it down into the valley of her cleavage, surprising himself with his boldness. Her skin was a jolt of electricity on his fingertip.\n\n\"Miss, your shirt is not buttoned up and the edge of your bra is visible.\" He ran his finger along the exposed lace of the bra and saw her suppress a smile. His tone was stern. \"This is the first infraction of our uniform code. At no point is your bra or bra strap allowed to show.\" He pulled her bra strap, almost causing her breast to spill out and then released it so it snapped back against her shoulder.\n\n\"Ouch! I'm sorry Mister Principal,\" she pleaded, \"I lost my buttons this morning. I bent down to pick up a book and they just popped off.\" She leaned over to demonstrate. \"I guess my breasts have grown since I got this shirt. I had to tie it in a knot to keep it closed. It was the best I could do.\"\n\n\"Regardless of the bra, we may have issues with your skirt as well, young lady.\" He took the ruler she carried as a prop and squatted in front of her, placing a hand on her knee. Her smooth, taut skin was warm to his touch.\n\n\"As you know, your skirt must not stop more than six inches above your knee.\" He placed the ruler at her knee and the skirt didn't even reach the top of the ruler. \"Hmmm\" he said, shaking his head.\n\nHe circled around behind her and bent down again. \"This skirt doesn't even cover the bottom of your butt cheeks!\" He traced a finger from her knee up the back of her thigh. Then he grasped the bottom of her skirt and lifted it above her waist, exposing her lace underwear to the entire party.\n\nHe didn't want to push Emma beyond her comfort level. When he'd asked about boundaries before their skit, she had looked him directly in the eyes and said softly, \"I'll do whatever you want.\"\n\nDavid assumed she was more comfortable because she knew he was married. She'd witnessed the incident with his wife along with the rest of the party.\n\nFor now, Emma made no move to cover up her behind. David found the proximity and youthful perfection of her exposed butt stimulating.\n\n\"What kind of underwear is this?\" he demanded.\n\n\"A thong.\"\n\n\"A thong,\" he repeated. \"Another clear infraction of our uniform code. Our schoolgirls are not allowed to wear thongs, are they, Miss?\"\n\n\"No, sir.\"\n\n\"What are we going to do about this?\" he clucked. He let the skirt fall back into place but remained kneeling behind her. Slowly he slid his hands up the sides of her thighs and up under her short skirt. She didn't move but he could hear her breathing intensify.\n\nDavid grasped her thong and gently slid it down her legs. She stood perfectly quiet until the underwear was below the bottom of her skirt.\n\n\"Sir!\" she exclaimed, sounding truly shocked. David debated whether he was taking this too far. He stood to look in her eyes, leaving her thong bunched at the top of her stockings. What he saw in her face was not discomfort but arousal.\n\n\"Miss!\" he snapped, eliciting a flinch. \"I've made it quite clear that students are forbidden to wear thongs. So, we'll need to take this off.\"\n\nHer lip bite and subtle change in body language told him that Emma was enjoying his assertiveness. \"Yes, sir,\" she breathed.\n\nHe slid the thong down to her feet, leaving her naked underneath the scandalously short skirt. If she moved incorrectly, her pussy would be exposed to the crowd. As he knelt in front of her, David's eyes followed the flawless skin of her thighs up to where the details were just barely lost in the shadows.\n\nEmma carefully stepped out of her underwear and David brought them to his nose for a brief sniff before tucking them into his pocket. He might keep these as a souvenir of the night.\n\n\"I'm afraid there are too many violations of the dress code. We are going to have to suspend you and inform your parents.\"\n\n\"No please! Don't tell my parents. They will kill me.\" Emma began to beg. \"Isn't there another way? Please, can we work something out, sir?\"\n\n\"I don't know, Miss. We have a serious problem on our hands. Your outfit has three infractions - bra showing, skirt too short and a thong.\" David was willing to end the skit here. But he was also happy to keep going if she was game. \"Do you have any ideas about how we can solve this?\"\n\nEmma hesitated. \"We've already solved the thong. I'm not wearing it anymore.\" She bit her lip. \"If I could fix the visible bra strap would you be willing to overlook the skirt length? I promise not to wear this skirt again.\"\n\n\"Perhaps. But you lost your buttons. How will you hide your bra strap?\"\n\nEmma locked eyes with him, gave a sexy smirk and untied the knot in her shirt. His heart began to race. She shrugged it off her shoulders and dropped it to the floor. She was now standing in front of the entire party clad only in a black lace bra and a very short plaid skirt with no panties.\n\n\"Miss, you just made the problem much worse.\" Not that David was complaining. He was trying to memorize the sight of this nubile coed standing before him before the moment was gone.\n\nShe moved closer, making sure her back was to the audience, then unclasped her bra. His eyes bugged out as she slid her arms out of the bra straps, still holding the bra in front of her breasts with both hands.\n\n\"Miss.\" he said, at a loss for words. He wanted her so badly.\n\nEmma dropped the bra to the floor and revealed her breasts to him. They were flawless. Perky and full with hard pink nipples.\n\nWhistles and cheers came from the crowd. A lucky few saw her ample side boob. She stood still for a bit, letting David stare. Then she bent down and grabbed the shirt, briefly flashing her nipples to the audience.\n\nShe slipped her arms in and tied it in a loose knot. The shirt gaped open, threatening to reveal her hard nipples with every motion. \"Will this do, sir?\" she asked coyly.\n\n\"You are a creative problem solver.\" David nodded his approval. \"Please turn around so I can see the full outfit.\"\n\nThis forced Emma to face the audience for the first time without a bra. She turned slowly, swaying her hips as she did so. The skirt was so short that the motion might have exposed a glimpse of her pussy lips to the crowd.\n\n\"Can I go back to class now, sir?\"\n\nDavid hesitated, a moment of indecision. He felt so energized by Emma. He dreaded the return to his boring existence. He knew she was turned on. Could he push her further? He didn't want to take advantage of her trust.\n\n\"Okay, Miss, I think that will do quite nicely.\" Emma began to bow but David interrupted her. \"However, it does not excuse the fact that you did violate the uniform code and I feel you need to receive some punishment for your careless behavior.\"\n\n\"Okay,\" Emma offered. She turned to face him, curious of what he had in mind. \"Just please don't tell my parents. Do you want me to clean the chalk boards?\"\n\n\"No. You need to be punished more severely. Something you won't soon forget.\" David took off his suit jacket and rolled up his sleeves. Emma looked at him quizzically.\n\n\"You may or may not know,\" he continued, \"but corporal punishment is still permitted in catholic schools in this state. I'm going to invoke my right as Schoolmaster to give you five swats on your behind with this ruler.\"\n\nEmma grinned. \"Oh no! Sir, please be gentle. I didn't mean any harm.\" She gave him a flirty wink.\n\nHe sat on the chair. \"Come here and lay over my lap and I will administer your punishment.\"\n\nShe glanced nervously at him, then leaned over onto his crotch. Her breasts rested on one leg and her skirt on the other. David was sure she could feel his hardness against her hip.\n\nLeaning over caused her short skirt to ride higher, exposing the curve of her ass where it met her thighs. David lightly rested his hand against the back of her thigh, relishing the feel of her smooth skin.\n\n\"Now, Miss, are you sorry for violating the school dress code?\" His palm gently rubbed back and forth across her thigh.\n\n\"Yes, sir. I'm very sorry and I won't do it again.\"\n\n\"Good.\" He slid his hand up her thigh and let it rest on her bare ass cheek. Then he grabbed the hem of her skirt and flipped it up so it lay on her back. She gasped but remained still.",
        "Her bare ass was now fully exposed to David and the audience. He returned his palm to her ass cheek and lightly rubbed. Her ass was firm with pale, flawless skin. Emma's thighs were clamped together, no doubt trying to prevent the audience from seeing her private parts.\n\nDavid picked up the ruler. \"Are you ready?\"\n\n\"Yes, sir,\" she said with a slight tremble in her voice.\n\nDavid reared back and gave a light smack with the ruler right across both cheeks. She yelped.\n\n\"Now, Miss, that was just a warmup swat. It's going to have to get much harder in order to ensure you learn your lesson. Are you sure you still want to do this or would you rather I just tell your parents?\" He wanted to give her an out.\n\n\"No, sir. I'll take my punishment.\" She replied, the arousal obvious in her voice. She squirmed in his lap and pressed her hip against his erection.\n\n\"Okay\" he said. He reared back again. The anticipation of the next smack was palpable, and the audience was silent.\n\nHe didn't hold back this time and gave her a hard whack on her cheek. She jumped and cried out. David was sure it stung and watched as a red welt emerged on her perfect butt. She was breathing deeply and began to rock her hips, slowly grinding her pussy into his thigh.\n\n\"Miss?\" he asked.\n\n\"Please, sir, keep going,\" she begged.\n\nHe reared back and gave her two more hard smacks in quick succession. She groaned a deep guttural sound and her eyes welled with water. Her hips squirmed, rhythmically rubbing her crotch into his leg. Her thighs had parted, and a few members of the audience could now see her unobstructed pussy lips.\n\nDavid set down the ruler and placed his hand on her ass. He rubbed softly. \"There, there,\" he said. \"You are doing great. We're almost done, and you'll be back to class in no time.\"\n\nHe caressed her butt before grabbing a cheek with his full hand. \"You really are quite a specimen, Emma.\" He sighed as he continued to fondle her ass.\n\nHe was intoxicated by her supple body. He gripped her ass cheek and slowly pulled it towards him, spreading her apart. David moaned as he looked down at her immaculate asshole and hairless pussy lips. He was exposing her to the audience as well, letting them enjoy her intimate treasures. He knew from the sight of her wet, swollen lips that she was as aroused as he was. She was putty in his lap.\n\nEmma's breathing quickened and her hips rocked against his lap with more urgency. She whimpered. \"Please...\"\n\n\"Please what, Miss?\"\n\n\"Please, sir, finish me.\"\n\n\"Very well.\" He gripped the base of her ponytail and pulled her head back. Then he raised his other hand for the final slap. His palm landed on her ass with a ringing clap and Emma yelped. David immediately soothed her behind with his palm.\n\nHe moved his hand into the crease of her ass, and she parted her legs to allow him more access. He slid his fingers down and touched the warm, wet folds of her pussy. She was dripping with arousal and he was overwhelmed by lust for her.\n\nAs he began to rub her slick cunt, she moaned. \"Ungg. David. Yes.\"\n\nHis thumb parted her lips and slipped inside. He curled it forward to rub the ridges of her g-spot while his index finger found her clit.\n\nHer breath caught in her throat. \"Oh, David. Sir.\" She started bucking her hips aggressively against his hand. He was fingering her hard and fast as the silent crowd looked on in amazement at the wanton display.\n\nHe could tell by her pulsing exhalations that she was close to orgasm. He continued his steady rhythm, synchronized to the gyrations of her athletic body. Then she came. Hard. Her body convulsed and she screamed out as an explosive climax tore through her body.\n\nThe party was completely silent for a long moment, then burst into rousing cheers. Emma unfolded herself from David's lap and they both stood to bow. Before leaving the stage, Emma stopped to give David a soft kiss on his lips.\n\n\"Thank you, sir.\"\n\n* * *\n\nDIRRTY DANCING\n\nAn hour earlier, Zack had left the dance floor to refill his drink when he felt a tap on his shoulder.\n\n\"Hi, I'm Sara.\" She thrust out her hand. \"You've got some good moves out there.\"\n\nZack took her hand and smiled. In truth, he wasn't a great dancer, but he'd learned an important lesson early in life. Most guys don't dance because they're afraid of making a fool out of themselves. Girls love to dance. Being one of the few guys on the dance floor meant you had your pick of the girls. Over time, he'd gained enough practice to avoid embarrassing himself.\n\n\"Thanks. I don't know about that.\" He said, laughing off the compliment. \"But, you! You have incredible moves.\"\n\nIn fact, his eyes had been glued to Sara. She floated on the dance floor with a graceful ease that was completely alluring. Everyone was watching her to see what she would do next.\n\n\"Well, I dance for a living,\" she shrugged. That explained how she made it all look so casual and effortless.\n\nHe'd also been admiring her body, which looked stunning in a French maid's costume.\n\nHer fishnet clad legs were incredibly toned, and Zack couldn't stop staring at them. Everything about her was compact, tight and flexible. Sexy as hell.\n\nZack was dressed as Hef. It was an easy costume, consisting of a red robe, a pipe and a captain's hat. Ideal for another lesson he'd learned: never go to a party wearing anything uncomfortable.\n\nBefore he could inquire about her job, she asked, \"Do you want to join the contest with me?\"\n\nHe hadn't expected that at all. Another life lesson came to the front of his brain: when faced with an intimidating invitation, always say yes. \"Yes,\" he replied. \"What are we doing? Do you want to be my Playboy bunny?\"\n\n\"No. I'm your maid. And you're a guy in his robe who just woke up.\"\n\n\"I'm not Hef?\"\n\n\"Oh, you're Hef,\" she realized, and Zack wondered if his costume wasn't as good as he thought. \"Whatever, it doesn't really matter. You can be Hef if you want.\" She flashed him a radiant smile.\n\n\"So, what is the skit about?\" he asked.\n\n\"It's not a skit. It's, like, dirty dancing with the stars,\" she explained as Zack cocked his head. \"We'll improvise dancing to a song. But we have to make it, you know..\" she raised her eyebrows.\n\n\"What?\"\n\n\"Sexy. Really sexy. I want to win.\"\n\nThis was maybe the best thing Zack had ever heard. Although he worried if he was getting in over his head trying to keep up with her. \"I'm in.\" He smiled. \"I'll follow your lead.\"\n\n\"No. Be aggressive. And let's lose some of these clothes along the way.\" It was Zack's turn to raise his eyebrows. She continued, \"I've got the perfect song for a maid to dance to.\"\n\nAfter they were introduced, Zack waited off stage and Sara posed, frozen in place at the front. She was bent at the waist with straight legs, touching her feather duster to a chair at center stage. Over the party speakers, Christina Aguilera's \"Dirrty\" started blaring:\n\nIf you ain't dirty<br/> You ain't here to party!\n\nSara bolted upright. Her hand covered her mouth in an exaggerated surprised expression. Zack walked onto the stage, stretching and finishing a yawn like he'd just woken up.\n\nLadies, move, gentlemen, move<br/> Somebody ring the alarm, a fire on the roof\n\nShe raised her feather duster in the air and rocked her hips side to side with the beat. Then she locked eyes with Zack and gave him a come-hither finger motion.\n\nHe grinned as he approached her, strutting to the beat. Awkwardly, he reached around to pull her in for a close dance. Sara pushed him back and wagged her finger at him. She lip synced the next verse.\n\nOh, I'm overdue <br/>Give me some room, I'm coming through <br/>Paid my dues, In the mood <br/>Me and the girls gonna shake the room\n\nSara leaned back and placed a hand on the chair behind her. Zack marveled at her flexibility as she arched her back and thrust her hips to the rhythm.\n\nHer other hand slid up along her inner thigh, pulled her ultra mini maid's skirt back and rubbed her panty covered pussy. Zack was treated to a view of her black lace underwear before her skirt fell back into place. It looked sheer, but he couldn't be certain with a quick glance.\n\nHe was surprised she was off to such a nasty start already. Pleasantly surprised. Fuck, she was sexy.\n\nDJ's spinning, show your hands <br/>Let's get dirty, that's my jam\n\nHe decided to get aggressive, so he fell to his knees in front of her and grasped her ankles. The fishnets felt amazing over her smooth, defined legs as he slowly slid his hands up her calves.\n\nAs Sara gyrated her hips to the music, Zack gripped her upper thighs and leaned in towards their junction. Her short skirt just barely covered her underwear as it bobbed up and down towards his face. Zack was aroused by her scent of musk and flowers.\n\nSara grabbed his head by the hair and pressed it into her mons, grinding against his face to the beat of the song.\n\nI need that, uh, to get me off <br/>Sweat until my clothes come off\n\nShe pushed him back and stood up. He watched in awe as she gracefully whisked her costume top up and over her head. This exposed her lacy black bra that hinted at the dark nipples underneath. Zack was astounded by her tight abs and toned figure. Her entire body was a work of art.\n\nShe wiped the blouse from her knee to her pussy as if sopping up her dripping juices, then tossed it hard at him. He caught it and brought it to his nose, inhaling deeply before throwing it to the side.\n\nZack strode to her, clutched her face and planted a kiss on her lips. He tasted sweet fruit as she kissed him back before pulling away.\n\nTable dancing, glasses are crashing <br/>No question, time for some action\n\nShe spun around in a practiced dance move, stopping by the nearby table. There, she picked up his beer and poured it into her open mouth, letting it overflow down her cheeks into her cleavage.\n\nIn tempo, she struck a pose, arching her back, sticking her tits out and spreading her legs. With a flick of her hair, she threw her head back and groped her boob.\n\nShe was one-upping him on the sex factor at every turn. Zack loved it and thought that pose looked like an invitation. He skidded towards her, leaned down and licked from the top of her cleavage up her neck.\n\nWhen he nibbled her ear, she took hold of his face and her mouth found its way to his. Their tongues danced together for a moment before she pulled back, right on cue with the beat.\n\nTemperature's up <br/>'Bout to erupt <br/>Gonna get my girls, get your boys <br/>Gonna make some noise\n\nSara spun him around by the shoulders and pushed him down into the chair. She untied his robe and flung it open, exposing his bare chest and tight boxer briefs. He kept in shape playing sports and she made it clear she liked what she saw.\n\nShe bent at the waist and slid her hands sensually down his chest to his toned abs while wiggling her butt to the music. Her awareness of her body position on stage was impressive and she was always providing the audience with a juicy view.\n\nWant to get ROWDY <br/>Gonna get a little un-RULY <br/>Get it fired up in a HURRY\n\nShe stood and placed the high heel of her dance shoe against his stomach. He knew what she wanted. Fortunately, the clasp was simple and he was able to take it off her foot without incident. They repeated the process with the other shoe.\n\nShe kicked her foot high and held it. She had the pointed toes of a practiced dancer and aimed them straight at the ceiling. Every dramatic motion she made was perfectly timed with the pulsing of the song.\n\nHer mid-air split allowed Zack to see her panties again. They were definitely sheer. He saw the edge of a small tattoo, something written in script, but he couldn't make out the word. He was also sure she was shaved. Only a small panel of fabric blocked his view of her pussy.\n\nAh, heat is up <br/>So ladies, fellas, drop your cups\n\nShe lowered her fishnet covered foot towards his face and dragged her toe against his lip. She continued, wiggling and teasing her toes down his chest and abs before coming to rest on his crotch. He groaned and held her foot against his rapidly growing bulge with both hands. She smiled devilishly at him.\n\nHe was turned on by her boldness and excited by the opportunity to return the favor.\n\nBody's hot, front to back <br/>Now move your ass, I like that\n\nShe stood and turned away from him, then folded at the waist and touched the floor. Her easy flexibility was so sexy and Zack wondered, not for the first time, what it would be like to have her in bed.\n\nHe realized her underwear was a thong. The thin strip of fabric was barely wide enough to cover her pussy as it was presented to him.\n\nHe reached out and took hold of her ass cheeks. Leaning close, he dragged his tongue over her glutes. The crowd let out whistles of approval.\n\nZack stood, never letting go of her buns, then flipped the small skirt over her ass. This exposed her entire butt, the wrinkles of her asshole visible on either side of the narrow thong.\n\nHe pressed the firmness of his erection against her pussy, pulling her against him by the waist. To the cadence of the music, she began to grind her ass into his groin.\n\nTight hip-huggers, low for sure <br/>Shake a little somethin' on the floor\n\nSara pressed her palms together and began to slither upright, her hands snaking back and forth while her ass writhed against his cock. When she was standing, she brought her hands over her head and undulated her hips like a belly dancer.\n\nZack moved with her, keeping his cock nestled between her succulent globes. He brought his hands from her hips to her tight abs, feeling a slight sheen of sweat. Then he moved to her breasts, cupping and fondling them through the lace bra as a roar of encouragement came from the audience.\n\nSara seemed to enjoy the attention. She turned her head back to him and they kissed in a lusty exchange of saliva. They continued to wriggle their bodies together in time to the music.\n\nI need that, uh, to get me off <br/>Sweatin' till my clothes come off\n\nShe broke the kiss and nimbly unclasped her bra and freed her arms. With a flair, she tossed the bra to the side and replaced Zack's hands on her breasts. He could feel her hard nipples in his fingers as he continued to hump her ass.\n\nGonna get a little unruly <br/>Get it fired up in a hurry\n\nTurning to face him, she pressed her breasts against his bare chest and resumed kissing him hungrily. Sara pushed the robe off his shoulders and it puddled to the floor, leaving him in only his boxer briefs.\n\nHis hands strayed towards her butt and found her skirt in the way. He broke the kiss and dropped into a squat, grabbing her skirt and yanked it to the floor as he went. The skirt caught her thong on one side and almost pulled it off along the way.\n\nThe crowd roared their appreciation as her topless tits were now fully exposed for all to see and her thong sat extremely low revealing most of her pubic mound.\n\nOoh, sweat dripping over my body <br/>Dancing gettin' just a little naughty\n\nRather than using her hands to cover her tits, she spread her arms to the side. Her body oscillated to the music as she stepped out of the skirt.\n\nZack's face was right in front of her crotch. He licked her exposed mound just above the edge of the thong and tasted her sweat. She grabbed his hair, mashing her pussy into his face while her other hand grabbed her breast and pinched her nipple.\n\nShe bucked her pussy against his face in rhythm with the song, letting out an animalistic groan as she moved against him.\n\nWant to get dirty <br/>It's about time for my arrival\n\nZack lost his balance and rolled onto his back. Without missing a beat, Sara twirled away and pirouetted, naked except for her thigh-high fishnets and the thong that was barely hanging on.\n\nHe got to his knees as she twirled back and sank to the floor in front of him. Sara was breathing heavily and staring at the obscene bulge in his underwear.\n\nShe placed a hand on his thigh and leaned in to lick his abs. Then she grabbed his rock-hard package with a full squeeze. He knew he had her now. She was incredibly turned on and she wanted him.\n\nToying with her, Zack crab walked backwards before settling into a seated position with his legs spread. It surprised her and the fire in her eyes said it all. She began to crawl towards him on her hands and knees, slinking like a cat with her ass swaying from side to side.\n\nWhen she reached him, she pushed him onto his back, gripping his thighs hard. Then she leaned down and playfully bit the hard cock straining through his underwear, looking up at him with sinful eyes.\n\nHere it comes, it's the one you've been waiting on <br/>Get up, get it up, yup, that's what's up <br/>You can just put your butt to the maximum <br/>Uh-oh, here we go\n\nSara jumped on top of him cowgirl-style and began to grind her crotch into his. She grabbed her boobs with both hands and leaned down to lick her own nipple. She continued to dry hump him to the music.\n\nZack couldn't believe how good she felt against his cock. He was so turned on that this smokeshow was into him. He was beginning to worry he might come if she kept up her motions.\n\nGonna get dirty <br/>I came to start the party <br/>Sweat dripping over my body <br/>Wanna get a little naughty\n\nSara continued to grind rhythmically and aggressively up and down the length of his rigid cock. The tiny strip of underwear, drenched from her arousal, was pushed up inside her pussy. Her escaped labia hugged the thong on either side. With every stroke, her bare pussy lips glided along his briefs.\n\nZack stared in lust at the perfect specimen atop him. He watched the muscles of her tight abs flex every time she slid forward. And her glistening breasts heave with every deep breath.\n\nHis hands gripped her hips, assisting her gyrations and also pulling her down to increase the pressure between her clit and his cock.\n\nHe was having an out of body experience, drinking in the sight of this nearly naked sex goddess working herself towards orgasm, humping him in front of a crowd, using him for her own frenzied pleasure.\n\nHe rocked his hips against her motions, pushing up into her clit with each slide. All of the sudden, Zack passed the point of no return and realized he was going to come in front of all these people. There was no way to avoid it.\n\nHe gripped her harder, grinding up into her aggressively and quickening the pace. She cried out in pleasure as her chest flushed red. Her body twitched and she began her climactic shudder, exploding into a deep orgasm.\n\nAt the same time, he crossed the threshold and spurts of cum shot from his cock. He screamed, as he unloaded into his boxers, momentarily forgetting any self-consciousness.\n\nAs the song came to its final crescendo, Sara dropped down on top of him, squeezed her bare breasts into his chest and tongued him with deep, reckless abandon.\n\nWant to get dirty <br/>It's about time for my arrival <br>(end)\n\n* * *\n\nTHE CHECKUP\n\nNext up was a married couple, dressed as a sexy nurse and patient, who performed a mock checkup as their skit. She was a curvy redhead with freckles and large boobs. Her cleavage was accentuated by a low-cut white nurses dress with red trim. He was tall and lean with dark features and wore an authentic hospital gown. His costume was played for laughs. As he walked to the front of the stage, the audience howled as the backless gown left his bare ass on full display.\n\nThe checkup consisted of some witty banter back and forth until the nurse told him it was time to turn his head and cough. Here she reached up under his short gown and squeezed his bare nuts tight, if the look on his face was any indication.\n\nThen she said she needed to take some measurements and began using both hands to massage his balls and stroke his dick under the gown. It was out of view of the audience but left no doubt about its authenticity.",
        "Once he was fully hard, she brought her hands out from under the gown and grabbed his erection from the outside, wrapping the cloth around it. The audience gasped as they were treated to a view of one of the largest cocks they had seen. The nurse waved the thick shaft back and forth, showing it off to the crowd. Some wondered if this was a magic trick, but it was clear from the proud and smug look on the nurse's face that her hubby was just that well hung.\n\n* * *\n\nEDEN\n\nPaul's personal assistant Brooke and her husband Mark took the stage next. They were wearing matching Adam and Eve costumes. Both outfits were essentially green plastic leaves glued onto skin colored underwear. They had a stuffed snake and an apple as props.\n\nThe revealing outfit was a striking difference from the conservative pencil skirt and heels Paul was used to seeing her in. Her body was stunning. Like everything Brooke did, her gym routine and diet was regimented. Mark's torso showed echoes of his once powerful physique, but years behind a desk had turned it decidedly softer.\n\nThey began their skit in the Garden of Eden, acting cute and innocent. Brooke saw the apple and wanted to eat it, but Mark reminded her that it was forbidden. Paul could tell by Mark's unenthusiastic acting that he didn't want to be up on the stage. He was sure Brooke had dragged him up there. She didn't take no for an answer.\n\nThe pair curled up on the floor to take a nap, but Eve awoke and went back to the apple. She put on a bit of a show, debating whether to eat it and eventually chomped into it.\n\nThis transformed her from innocent to slutty. She started feeling herself all over, touching her breasts and pussy. Then she stripped off her bra, revealing marijuana leaf pasties covering her nipples. After playing with herself some more it was clear she was getting horny, so she decided to wake up \"Adam\".\n\nWhen he awoke, he didn't understand what had gotten into Eve. She spent the next five minutes trying to seduce him, acting incredibly slutty. She kissed and massaged him, stroked and fondled all over his body but he was not interested.\n\nPaul thought it was a strange echo of their real relationship. He remembered Brooke confiding in him over drinks that her once passionate romance had turned stale. Mark only talked of work and politics now and didn't seem to notice her, no matter what she did to try to entice him.\n\nMark's current disinterest wasn't just the role he was playing. And Paul could sense his legitimate discomfort at how slutty his wife was acting and how little she was wearing. But Brooke was undeterred and continued her bid to try to corrupt him.\n\nAt one point, she maneuvered him into a hug with their arms around each other. She wiggled against his body and grabbed his butt. With a swift and unexpected move, she hooked her thumbs in his underwear and dropped them to the floor. Mark's flaccid dick was out for all to see before he quickly covered himself with his hands.\n\nWhile he was voicing his objections, she flung his underwear off the stage, so he was left without any recourse. Paul suspected this had not been planned and wondered if Mark would storm off, but to his credit he continued to play along, covering his penis with one hand.\n\nBrooke stepped back and dropped her own panties, showing off her tight ass to an enthusiastic audience. When she turned around, they realized she wore another marijuana leaf pastie over her pussy.\n\nThen she continued her seduction attempt. She danced for Mark, rubbed her tits against him and caressed him everywhere. She was acting so sexy. Three small stickers were the only thing preserving her modesty and it left an incredible amount of flesh on display.\n\nMark eventually gave up trying to cover himself, letting his smaller than average penis flop around as he and Brooke cut about the stage.\n\nPaul's cock was throbbing at the sight of his sexy assistant pulling out all the stops. To his amazement, Mark remained flaccid the whole time.\n\nThen Brooke sat Mark down in a chair and began a strip club quality lapdance on him. Since Mark was naked it involved a lot of contact directly on his dick.\n\nShe played with his cock using her feet, rolling it around with her toes, stroking the length of it with her soles. All but giving him a proper footjob on stage. She rubbed her tits against it, then turned around and ground her bare ass into his cock. She even grabbed his soft cock in her fist and planted a kiss on the head.\n\nPaul wasn't sure if it was stage fright or impotence, but he was sure that no other man would remain soft under the kind of assault Brooke was putting on.\n\nThe lapdance culminated with Brooke's ankles hooked around Mark's neck, her pussy against his cock and her head near the floor. She stroked her pussy and looked into his eyes while tempting him with her words.\n\n\"This is all here for you, Adam. Don't you want it? Doesn't it turn you on? It turns me on.\" She moaned and continued to writhe on his lap. \"It's so risky and against the rules. It's just the kind of spice we've been missing. Come on live a little. Break a rule. Get your cock hard and fuck me right here.\"\n\nBut there was no response from Mark. He eventually pushed her off his lap, stood and said \"The end.\" Brooke sighed, collected her things and left the stage with him.\n\n* * *\n\nTILL DEATH DO US PART\n\nPaul was so pleased to be introducing the next performance. Galina was a friend of a friend and had come to a party he'd hosted last year. He was instantly smitten and couldn't take his eyes off her.\n\nShe was quiet and reserved, but he was able to learn a few things about her. She was born in the Ukraine and had moved to LA as a teenager without her parents. Now she worked for the Cirque as a multi-disciplinary performer. He had found and followed her on Instagram, drooling more than once over posts showing her calisthenics workouts, handstand acrobatics, and the occasional bikini pic.\n\nKnowing their mutual friend couldn't come this year, Paul had taken a chance and invited her directly over social media, hoping he wouldn't come across as a creep.\n\nHis heart skipped a beat when she'd arrived wearing a zombie bride costume. She stunned in a two-piece white lingerie outfit that showed off her lean, feminine figure. A veil, garter and flower bouquet sold the bride costume. Dark eye makeup and fake blood completed the look.\n\nHe introduced her as a solo act performing something called \"Till Death Do Us Part.\"\n\n\"Hello, I am Galina. My friends call me Galya. This is my husband Roger.\" She gestured towards an empty part of the stage. \"Unfortunately, Roger is ghost. Today we were married. And then killed.\" She frowned.\n\n\"But we are together in afterlife. Lucky for you, we are now going to have wedding night.\" She put her arm around her imaginary partner, smiling at the audience.\n\n\"Eeek,\" she screamed, jumping in place. She mimed slapping Roger and then turned to the audience. \"He pinch my ass.\" The audience chuckled.\n\n\"Well, here is our sex.\" Galya turned and wrapped her arms around her ghost groom. She got onto her toes and tilted her head up to lock lips with him. Her body began to squirm, and her hands wandered over his back as she pretended to make out. She began tonguing the air in a comedic deep French kiss.\n\nMoving her hands down towards his ass, Galya began to knead and squeeze his imaginary cheeks. She moaned loudly as the audience laughed.\n\nShe was quite an effective mime, skilled in respecting the physical space of her nonexistent surroundings. Adept at using big movements and expressions to draw the audience in.\n\nShe dropped to her knees and with exaggerated hand motions slowly grasped his zipper and pulled it down. While doing so, she turned to the audience and repeatedly raised her eyebrows, keeping up the schtick. Then she carefully slid Roger's ghost pants to the floor.\n\nHer eyes grew wide with shock and she began a variation of a classic mime move. Instead of miming a wall, this could best be described as miming a shaft. Her fingers encircled the base of the imaginary cock, demonstrating its girth. Her other hand grasped above her first and she walked her hands up the length of the ghost cock.\n\nIt was easily two feet long as she stepped her grip slowly up and down it. Her face showed the terror she must feel at the prospect of that cock impaling her insides. She had the audience eating out of her hands now. They were hooting and hollering with laughter.\n\nTurning to the audience Galya said, \"Now you see why I chose Roger for husband.\" She smiled. \"But I must pay husband attention now and ignore you all. I hope you understand.\"\n\nShe turned to her fictitious partner. \"Oh Roger, baby. I call you big daddy. You have beautiful cock. Let me worship it.\" And with that, her skit which had been played for laughs was now played for eroticism.\n\nShe began a sensual blow job, licking from the base of his enormous member to the top. Her hands stroked up and down while twisting, remarkably not violating the place in space occupied by the pretend cock. She ran her tongue in circles around the tip. \n\nWith effort, she simulated taking the shaft into her mouth and slurped loudly as she fellated the air. Drool dripped from her mouth to the floor as she attacked it with abandon.\n\nPaul's own cock was rapidly swelling as he watched her evident talent at giving head. He couldn't help but imagine himself as a stand-in for Roger.\n\nShe pulled off and looked up. \"Oh Daddy, I am slut for your cock. You can do anything to me. How do you want to fuck me?\"\n\nGalya laid face down, ass up on the floor with her butt facing away from the crowd. She reached back and pulled her white lace underwear down over her hips to the top of her thighs.\n\nPaul had a better view than most from his position close to the side of the stage. He was able to see her entire ass cheek and the top of her crack. But he wished he was behind the stage, getting an explicit view of Galya's goods.\n\n\"Is this how you want your little slut?\" She reached both hands behind and pulled her ass cheeks apart. Her face flushed red.\n\n\"You like when I present my holes, Daddy? Now we are married. These holes are your holes. Use them for anything.\" She threaded a hand between her legs and appeared to rub her pussy. \"For you, my cunt is always wet. Use it anytime.\"\n\nShe smacked her ass hard, and a gasp was heard from the audience. \"I am good girl, Daddy. I am good slut.\" She moaned and continued rubbing between her legs. \"Please. Put big cock in my cunt. I need your big cock.\"\n\nHer body jolted forward and she screamed, simulating being entered from behind. \"Yes! Fuck. Fill me up so good, Daddy.\"\n\nGalya proceeded to get fucked doggy style, rocking back and forth on all fours with her panties around her thighs. She was being rammed aggressively and had to catch herself a number of times to keep from falling over. She alternated between using a hand to rub her pussy and using it to brace herself against the fictional onslaught.\n\nPaul watched in a trance. Her sex noises and facial expressions were incredibly arousing. He knew this was an authentic glimpse of what it was like to fuck her.\n\nAbruptly, Galya's head snapped back and she gasped. \"Oh yes! Pull my hair Daddy!\" She let out a series of squeaks as she rubbed her pussy faster, rocking back and forth.\n\n\"Oh, ruin my cunt. Slam me with your massive cock.\" She slapped her pussy, making an audible clap. \"Ah! Yes, fuck me hard.\" She slapped her cunt hard a dozen more times before resuming her intense rubbing.\n\n\"I am your whore. Use me like fuck toy.\" She stopped touching herself momentarily, raised up and brought her hand down hard on her ass. \"Ay! Smack my ass!\" Another three swats followed, hard enough to leave a mark.\n\nWith the last slap she fell forward onto the floor, then rolled over onto her back. She pulled one leg out of her lingerie bottoms, leaving them hanging around her other thigh. From Paul's side-on vantage point, he could see her thin, dark landing strip of pubic hair. He was so glad to be standing where he was since most of the audience didn't have a clear view.\n\nGalya placed her feet on the floor, spread her knees and resumed touching her pussy. \"Yes, Daddy. Fuck me like this,\" she said. \"Split me open with big cock.\"\n\nShe screamed again when her imaginary husband entered her. \"Ay! So big, so big.\"\n\nGalya alternated between frantically rubbing and rapidly slapping her pussy. From Paul's view, it was clear that she was not simulating. The audience had grown silent and Paul could make out a faint sloshing sound as she worked her wet pussy lips.\n\n\"Oh fuck yes. Rail me big boy. Degrade me like slut.\" Paul was rock hard listening to her filthy dirty talk and sex noises.\n\nGalya was getting more and more worked up. She pulled down the top of her bustier, freeing her left tit. She grabbed her nipple, twisted it hard and screamed out. \"Do you like tight cunt around your thick cock?\"\n\nShe groaned and began vigorously slapping her clit. \"Oh baby, you got me so close.\"\n\nGalya started squeaking again. \"Fuck. Fuck. Going to come all over your cock.\" Her back arched and she held her breath.\n\nThen she shattered into a million pieces on stage in front of everyone. Her torso tensed and her legs twitched as she came while waves of pleasure coursed through her body.\n\nPaul's erection throbbed and his heart thumped at the sight of his crush spasming with the aftershocks of her climax. He'd thought she was a reserved, enigmatic beauty but she had proven herself to be anything but reserved. He wanted her more than he could comprehend.\n\nThe audience watched in stunned silence for a moment and then erupted into cheers. Galya laid still, catching her breath. Then she replaced her top and slipped her leg back into her bottoms. She stood up slowly and faced the audience. Her hair was disheveled, and she'd worked up a sweat, but she seemed entirely unselfconscious as she smiled at the crowd.\n\nShe gave a performer's bow and the crowd clamored with as much volume as they had all evening. She gestured to an empty spot next to her, as if giving credit to her fictitious husband and the cheers mixed with laughter. Then she looked directly at Paul and gave him a sultry wink.\n\n* * *\n\nA STAR IS BORN\n\nWhen Kate heard about the contest, she immediately cursed her choice of costume. But despite her reluctance, her friend had signed them up and they were now the next act. There was no backing out now.\n\nKate's path to LA was typical, she supposed, but unlike many others she refused to be corrupted by its trappings. She was the quintessential \"All American\" midwestern girl - homecoming queen, star track athlete, excellent student, involved in her church.\n\nHer high school sweetheart, Tom, decided to move to LA to pursue an acting career. Kate didn't know what else to do, so she followed him. She'd done a bit of modeling in high school but didn't have any desire to pursue it as a career. Instead, she enrolled at USC in a communications program and devoted herself to her studies.\n\nTom busied himself with auditions and the occasional gig and they saw each other most weekends. Kate knew their relationship of four years was strong enough to weather this busy period in their lives and she looked forward to their happily married suburban family future.\n\nThat was until last month, when she'd discovered that the asshole had been cheating on her. And not just a little. Apparently, his collapsed web of deceit included numerous lovers, as one of his jilted paramours was very happy to tell her.\n\nKate was not a party girl. But her friend Nick refused to let her spend another depressed evening moping around. He said it was the perfect party to take her mind off \"that fuckboy.\"\n\nTom had been suspicious of her platonic relationship with Nick, ever since they met at orientation. Now she realized Tom had just been projecting.\n\nFor the party, Nick had convinced her to wear something totally out of character. In fact, he'd purchased it himself, brought it to her apartment and demanded she try it on.\n\nIt was a pornstar costume. It was clearly a pornstar costume because the very short crop top said \"Pornstar\" on it. The top was a size too small and her bra spilled out of it. The rest of the outfit was a bedazzled g-string that was visible above a barely there skirt and high heels.\n\nAt first she had refused to come out of the bathroom to show Nick the ensemble, but he gave her a compelling speech about how staying in her comfort zone had gotten her into this situation with \"that fuckwit\" Tom and \"it was time to be daring\". So, against her better judgement, here she was.\n\nNick had accompanied her as a filmmaker. Or porn director. Basically, he was dressed normally except he had a matching \"Pornstar\" logo t-shirt and carried a camcorder. He said it was a great way to convince drunk girls to flash their tits.\n\nAs the night went on, Kate had become more comfortable with the stares and compliments. She even started enjoying the attention. But when the contest was announced, she was mortified and lamented not having worn her go-to cat costume.\n\nShe wanted to sit it out, but Nick had other plans. \"I know how we can win this thing,\" he'd said.\n\n\"Yeah right, I am not filming a porno.\"\n\n\"Ha ha. The question is, can you handle a sexy skit or are you too much of a prude?\"\n\n\"Prude?\"' She couldn't believe it. Being faithful to a long-term boyfriend and not dressing like a slut did not make someone a prude. \"I'm not prude!\"\n\n\"Great. I'll play a pervy porn filmmaker. You're a first timer coming in for an audition. Just follow my lead. We'll make it hot like you're about to get fucked on camera and then we'll end the skit once we've secured the prize!\"\n\n\"So it's more like an interview?\"\n\n\"Yeah we'll just make it up as we go. Do you know how to act sexy?\"\n\n\"Do I know how to act sexy?\" She was incredulous. \"Do you?\"\n\n\"Don't worry about me. Just don't chicken out on me.\"\n\n\"Don't worry about me,\" she retorted. \"So, do we need a backstory?\"\n\n\"Just stick to the truth so you don't have to keep track of lies. Unless you're too uptight.\"\n\nKate's stomach was in knots as they were introduced and went to the stage. Nick had suggested they start with a gag to loosen up the audience, so she was sitting in their improvised \"waiting room\" with two tequila shots.\n\nShe looked into the audience and said, \"Here we go,\" before downing the shots, one after the other. It got a good laugh out of the audience, which calmed her nerves a bit. She already had a solid buzz, but she thought a little extra liquid courage could only help.\n\n\"Okay, I'm ready to see you now,\" Nick called out from the other side of the stage. Kate approached and they shook hands. \"Welcome to the casting couch. I understand you're here to audition for a porno?\"\n\n\"That's right.\"\n\n\"First time you've done this, yeah?\"\n\n\"Yes.\"\n\n\"Good. I'm going to start with some basic questions, then we'll move on to a body inspection and finally we'll shoot a test scene.\"\n\nKate nodded. She was definitely feeling stage fright but tried to remain composed. There were a lot of people looking at her.\n\n\"Remember, you can end the interview at any time. Some people realize they aren't brave enough for it. Understood?\"\n\nShe knew Nick was trying to be nice, but it annoyed her that he thought she couldn't handle it. \"I'm fine.\"\n\n\"Good, let's begin. First of all, what's your name?\"\n\n\"Kate.\"\n\n\"And how old are you, Kate?\"\n\n\"21\"\n\n\"Great. So, Kate, you're obviously very beautiful. Why do you want to be a porn star?\"\n\nShe was flattered by the compliment, even if this was an act. \"Thanks. I guess I'm a closet exhibitionist. It turns me on to think about people seeing me naked and acting sexy.\" How's that for prude, she thought.\n\n\"So it makes you hot to think of thousands of strangers jerking their cocks, watching you get fucked on camera?\"",
        "The mental image made Kate blush. \"Yes. It's embarrassing, but it turns me on at the same time.\"\n\n\"Tight. Have you ever been nude in public before?\"\n\n\"Not exactly. I went skinny dipping once, but just with a few close friends.\"\n\n\"Never anything where you were the center of attention? All eyes on you, eagerly waiting to see you get naked and fucked?\"\n\n\"That's right. Never like this.\" She was keenly aware of all the people in the audience. They were staring at her in her miniscule porn star costume and probably undressing her with their eyes.\n\n\"And does it turn you on?\"\n\n\"Yes.\"\n\n\"Great. Do you have a boyfriend?\"\n\n\"Not anymore.\"\n\n\"That's good. Most boyfriends can't handle it when their girlfriends do porn. Believe me.\" Nick shook his head. \"Is this a recent change? What happened?\"\n\n\"He cheated on me.\"\n\n\"That fucker. Why would anyone cheat on a dime piece like you?\" Nick stared right into her eyes. \"Let's make that cock-knocker regret losing you. I'll help you make him jealous as fuck. It's the best revenge.\"\n\nKate smiled genuinely for the first time in a while. \"Great! I'd like to make him sorry. Can we send him a copy of the test shoot?\"\n\n\"You bet your ass we can!\" Nick smiled. \"Okay, shifting gears. Describe your pubic hair for me. Do you shave?\"\n\nThe question caught her by surprise, but she answered truthfully. \"I shave my labia and keep a trimmed bush.\" She figured everyone in the crowd was now picturing her personal grooming habits. The thought made her wet.\n\n\"Yum. Okay, I'm going to ask you about your sex life to figure out the kinds of roles we could use you for. For starters, do you masturbate?\"\n\n\"Oh. Um, yes.\"\n\n\"Tight. How often?\"\n\n\"Probably about once a week.\"\n\n\"Okay good. Do you use your hands or toys?\"\n\nShe knew she was being terse and felt bad that Nick was having to draw these answers out of her. She took a deep breath and tried to calm her nerves. \"I use my fingers sometimes. I also have a bullet. And sometimes I use the detachable shower head.\"\n\n\"That's hot!\" Nick said. \"I bet you look really fucking hot getting yourself off in the shower. Would you masturbate on camera for a role?\"\n\n\"Oh yeah, baby. I'd love to.\" She smiled seductively, trying to get into the character.\n\n\"Will you finger yourself in front of me for your screen test later?\"\n\nShe noticed he'd dropped the hypotheticals. This sounded less like sexy banter and more like a direct question to her. There was no way in hell she was going to do a sex act in front of this party. \"Um, maybe,\" she said, not wanting to ruin the momentum of the sketch.\n\n\"Listen, Kate. The job of a porn star requires absolute commitment and no inhibitions. You're required to do much more than masturbate. You'll be asked to fuck people on command. Sometimes people you aren't even attracted to.\" Nick gave her a challenging glare. \"I sense your hesitation. Are you sure you're cut out for this?\"\n\nKelt felt the accusation. Prude. She was not going to let him win this one. Obviously, she wasn't going to masturbate in front of all these people. But she could sure be a hot little tease. She could make it sexy and maybe they even could win the prize. Besides, if she chickened out too early, he would never let her live it down.\n\n\"Yes, sorry, I'll do it. I've just never done it in front of a stranger before. It takes some getting used to the idea but that's why I'm here.\" Make it sexy, she thought. \"I'd love to spread my pussy lips for you and jam a big fat toy inside myself until I cum sooo hard. Is that what you want to see? Watch me shudder as I climax?\"\n\nNick grinned and nodded enthusiastically. \"Fuck yes, that's what I want to see.\"\n\n\"Good,\" she said. \"I'll spread myself open for you and play with my clit. I'll make you so hot you can't stand it.\" She smiled, satisfied with her performance.\n\n\"Right on. Now, have you ever been with another girl?\"\n\nShe bit her lip and thought about her friend Julie. \"Once at college I got drunk and messed around with my friend, but we didn't go all the way.\"\n\n\"Really? How far did you go? Describe what happened.\"\n\n\"We were at a party and these guys were really into it. They were hounding us to kiss all night and eventually we broke down and gave them a bit of a show. We started making out with each other. The guys were loving it and kept pressuring us to do more. So I took off Julie's shirt and sucked on her nipples. They went crazy and then one of them took Julie back to his room and they had sex.\"\n\nThinking back on this experience was a turn on for Kate. She had been surrounded by all these horny guys who wanted them so badly. She could have slept with any one of those guys if she wanted to. They were practically begging her. But she was faithful to Tom. That bastard, she thought.\n\n\"Fuck, I would have loved to see that. You know some of our films include girl-on-girl. Would you be willing to do those scenes?\"\n\n\"Definitely with the right girl.\"\n\n\"Maybe we can find a hot chick for your screen test later. If so, would you make out with her?\"\n\n\"Oh yeah. I'd suck on her tongue and give you a hot show.\" Kate felt the tequila starting to hit her. She had a warm glow in her head that was matched by one in her pussy.\n\n\"Would you let her go down on you?\"\n\n\"Yes.\"\n\n\"Would you go down on her?\"\n\n\"Maybe. I'm not sure.\"\n\n\"That's a good start. I'd fucking love to see you in a 69 with another hot chick. Or you bent over while she rimmed your sweet star pucker.\" Nick adjusted his erection. \"Ever had anal sex?\"\n\n\"Yes.\"\n\n\"Do you enjoy it?\"\n\n\"Only when I'm drunk.\"\n\nNick turned towards the bar and shouted. \"Can we get another shot of tequila over here?\" The audience laughed.\n\nKate knew she could make stuff up, but it was easier being honest. Fuck it, she thought. It was also turning her on, if she was being honest with herself. She'd never shared some of these things before.\n\n\"What's your sexual fantasy?\"\n\nKate thought for a moment. \"Two guys at the same time.\" Nick looked surprised and she enjoyed catching him off guard. \"I love the thought of four strong hands touching my body. Two sets of lips on my nipples. Two big hard dicks filling my holes at once.\"\n\nNick was hanging on her every word. \"Finger cuffs or DP?\" he asked.\n\n\"What does that mean?\"\n\n\"Cunt and mouth or cunt and ass?\"\n\nKate was stunned by his use of the c-word but didn't want to give Nick the satisfaction of showing her surprise. \"Oh. Finger cuffs.\"\n\nSomeone walked on stage and discreetly deposited two tequila shots on the table. Nick picked them up and handed one to Kate. She wasn't sure she needed another shot. But she wasn't sure she didn't. He raised his, \"To finger cuffs.\"\n\n\"Finger cuffs,\" she returned and they both downed their shots. \n\n\"Ever receive a facial?\" Nick continued.\n\n\"Yeah. I let my boyfriend, I mean ex, come in my mouth sometimes.\"\n\n\"Was his cock in your mouth when he came?\"\n\n\"Yeah, I was giving him a blowjob.\"\n\n\"That's not a facial,\" Nick said. She looked at him, puzzled. \"When we film porn, the visuals are critical. Cumshots and facials are one of the most important parts of the craft. We want the viewers to see the cum spewing from his cock and painting your face. Your facial expressions before and during the cumshot are essential.\"\n\n\"I have to act like I can't wait for his penis to explode, right?\"\n\n\"Cock.\"\n\n\"Excuse me?\"\n\n\"Porn stars don't use the word 'penis'. It's not sexy.\"\n\n\"Right, got it. So I act like I can't wait for his cock to douse me in cum.\"\n\n\"Exactly. We'll practice one during the film test later.\" Nick grinned at her. \"Do you swallow?\"\n\n\"Sometimes.\"\n\n\"Do you like the taste?\"\n\n\"I actually don't mind it.\" She prodded herself to be more provocative. \"I'll be a good little slut for your movies, though, and I won't let one little drop of cum hit the ground. If I have cum all over my face or tits I'll scoop it up with my fingers and swallow it all down. Would you like that?\"\n\n\"Fuck yes. I want you to be a good little cumslut. What about deepthroat? Can you do it?\"\n\n\"No, I've never tried that.\"\n\nNick paused like he was mulling something over in his head. \"Do you dirty talk? You seem like a good girl that is maybe too shy to tell her lover what she wants.\"\n\n\"Bullshit!\" Kate responded defiantly. \"My ex says I'm great at dirty talk.\"\n\n\"Okay. We're going to try a test. It's pass / fail. You have to dirty talk me into an erection.\" His smug look said he was proud of his idea. \"Think you can do it? I've had a few drinks.\"\n\nKate knew he was trying to get her to talk and act slutty. But she had a brilliant idea of her own. There were at least as many girls as there were guys at this party. The focus didn't need to be all on her.\n\n\"Challenge accepted. But,\" she smiled at him with a twinkle in her eye. \"You have to whip out your cock, so I see if I pass.\"\n\nNick's eyes went wide. \"What?\"\n\n\"Oh. I thought you had no inhibitions?\" She was relishing turning the tables on him.\n\n\"Well, I'm just the director.\" Nick's voice trailed off as he searched for a way out.\n\n\"You never star in your movies? That's too bad.\" She made a pouty face. \"I was hoping I could get your cock nice and hard and then you could fuck me with it during my screen test. But if you're too much of a prude-\"\n\n\"Fine!\" Nick interrupted. \"It's no problem. No fucking problem.\"\n\nHe stood and she wondered if he was really going to go through with it. He hesitated with a hand on his zipper and looked into the audience. Then, he slowly unzipped his pants. He let them fall to the floor and stepped out of them. He stood in his boxers and looked at Kate. She stared back, daring him to proceed.\n\nTo her astonishment, he slowly dropped his boxers and out flopped his flaccid penis in front of the entire party. A few whistles and catcalls came from the crowd. She was impressed with his bravery. And frankly, even more impressed with his penis.\n\n\"Wow. Nice cock, dude. Better than I expected.\"\n\nNick's face was slightly red, but he smiled at her comment.\n\n\"Nice and meaty,\" she continued. \"Well trimmed pubes, too. I like that.\"\n\nShe got up from her chair and sat on the floor, eye level with his dick and about a foot away. Her eyes glazed. \"Makes me want to plant little kisses up and down your shaft.\" She licked her lips. \"Take one of your balls into my mouth and suck, rolling it around on my tongue.\"\n\nHis cock twitched. \"Ooh yeah,\" she continued. \"Look, it's starting to grow.\" She looked up into his eyes. \"I wish I could touch it right now, but I'm afraid that would break the rules. Dirty talk only for now.\"\n\nShe returned her gaze to his cock and scooted forward until her mouth was inches from his head. \"But if I could, I would massage your balls with one hand and your shaft with the other while I take your cock head into my mouth and suck.\"\n\nHis cock was now rising steadily like a mast hoisting a sail. \"Are you thinking about me?\" she asked. \"About putting your thick cock in my hot little mouth? Are you thinking about rubbing your cock head against my fat dick sucking lips?\" She licked and puckered her lips an inch from his rising cock.\n\n\"Do you want to slap your cock against my cheek?\" She turned her head, coming dangerously close to brushing against his stiffening member. She was entranced by the size of his cock as it grew. He was definitely larger than Tom, both in length and girth.\n\nKate leaned in close and exhaled her hot breath directly onto his cock. It jumped and now pointed towards the ceiling. \"Are you thinking about fucking my mouth? Jamming your cock into the back of my throat until my eyes water?\"\n\nShe looked up into his eyes, opened her mouth wide and stuck her tongue out as far as she could. Her perfectly clean, pink tongue made his hard cock bounce. If he leaned forward just a bit he could make contact with her wet mouth. He could even claim it was an accident.\n\n\"Do you want to take control of me and turn me into a fuck slut that you can use however you want? Slide that rock-hard cock into any of my holes?\" Now precum was leaking out of the top of his throbbing dick.\n\nShe leaned forward and extended her tongue to lick his shaft. Just before she touched it, she abruptly pulled back and stood up. \"Well. I guess I passed the test.\"\n\nThe audience cheered enthusiastically. Nick looked like he'd forgotten to breathe. His cheeks were flushed, and his brow was coated with a thin sheen of sweat.\n\nWhen he collected himself, he replied. \"Yes. I guess you did.\" He pulled up his boxers and tucked his stiff member back inside. It created a ludicrous tent in the front that did nothing to hide his arousal.\n\nHe turned his head and shouted, \"Another tequila shot, please!\" This drew laughs from the audience and the tension left the room.\n\nNick composed himself and collected his camcorder from the nearby table. \"It's time to move on to the body inspection.\" Kate was fully aware of the subtext. Your turn.\n\n\"I'm going to start filming,\" Nick said as he pushed a button and a red light came on. \"This will just be some test shots for now. Your first scene will come later.\"\n\n\"Is there actually film in there?\" Kate asked. She had assumed the old school camcorder was just a prop.\n\n\"No, baby, it's digital.\" Damn. The thought of this being recorded made her feel somehow more vulnerable, even though she was standing in this tiny pornstar costume in front of over a hundred people.\n\n\"So, what do you want to say to your insignificant cumbubble of an ex-boyfriend when he sees this tape? Look into the camera and tell him.\" Nick pointed the camera at her face.\n\nKate looked into the lens and made a sexy pouty face. \"Oh, Tom, are you missing these?\" She hefted her tits in her hand \"Was this not good enough for you?\" Kate spun around, giving the camera a full tour of her body in the sexy costume.\n\nNick spoke up, \"It seems to be good enough for everyone here. I don't think there's a soft cock in the room. Make some noise if she's got you hard.\" With that the crowd erupted in a thunderous roar.\n\nKate wasn't conceited but she knew her body was very desirable. She had been blessed with good genetics and she worked hard to take care of herself. Still, hearing all the men in the audience cheering so loudly for her made her wet. The thought that right now there were dozens of cocks in the audience that were hard for her was an incredible turn on.\n\n\"Hear that, Tom?\" Kate asked into the camcorder. \"All these horny men want to stick their cocks in me. I'm getting pretty horny myself. I might just let them all do it. Maybe I'll suck and fuck every guy here until there's no more cum left.\" The audience response was deafening.\n\nSomeone brought up another two shots, leaving them quietly on the table along with the remaining half bottle of tequila. Nick once again handed Kate her shot and raised his glass. \"To better sex without your ex.\"\n\n\"I'd better drink to that,\" she said, and downed hers.\n\nNick turned the camcorder to his own face. \"Tom, you fucking twatwaffle. I can't wait to see your shitpouch mouth hanging open when you see this. Fuck you, you fucking chode monger!\"\n\nKate was amused at the colorful insults Nick was slinging at the camera. He was a good friend and she appreciated that he had her back.\n\n\"Now, where were we?\" Nick said. \"Why don't you lose that shirt and skirt so we can get a better look at you.\" He panned the camera up Kate's body.\n\nShe was nervous to do it, but it was a fair request. After all, she had just made Nick whip out his dick in front of everyone. An encouraging cheer from the crowd helped. She pulled her small top over her head and slipped the skirt off her hips. She also kicked off her heels.\n\nIt left her standing in just her bra and the tiny g-string that Nick had picked for her. Truth be told, she had never worn a g-string before and was amazed at how little it covered. The front was just a small triangle that barely contained her pubic hair. Thin straps ran around her waist and into the crack of her ass. \n\nShe was acutely aware that her entire ass was on display. And so was the crowd, judging by the wolf whistles.\n\n\"Perfect,\" Nick soothed as he scanned the camcorder up and down her body. \"Turn around and let's have a look at that ass.\"\n\nShe complied and was startled when she felt Nick reach out and touch her ass. He grabbed and fondled each cheek. \"Fucking beautiful. Really sexy, babe.\" He tugged on her g-string and she felt the narrow strap wiggle between her booty. Then he gave her butt a few light swats.\n\n\"Your legs are very toned. Do you work out?\"\n\n\"Yes. I go to the gym three times a week. I also run and do yoga.\" She was very dedicated to her fitness routine.\n\n\"It sure as shit shows. The leg and ass men out there are going to be all over you.\" Nick traced a hand down the back of her leg. \"Nice and smooth. And tan.\" He let out an approving murmur and kneeled down to feel one of her bare feet.\n\n\"Really pretty feet. You take good care of them. Great arches. Trimmed nails. I like the pink polish.\"\n\n\"I get a pedicure every month.\" She was glad he noticed. Tom had never paid much attention to her feet.\n\n\"Anyone ever cum on your feet before?\"\n\n\"Ew, no.\"\n\n\"You've never given a footjob?\"\n\n\"Um, no. I wouldn't even know how to do that.\"\n\n\"We do some fetish videos,\" he said. Kate had almost forgotten they were acting out a skit. \"You have a leg man's dream body. We'll get you jerking off some cocks with those feet and dump a few loads of cum on those soles.\"\n\n\"Umm, sounds fun?\"\n\n\"Turn around and let's get a look at your front.\"\n\nKate did so and was conscious of all the eyes in the room inspecting every inch of her. She was self-conscious to be on display in this way. But she was proud of the way she looked. And she was flattered by the reaction of Nick and the response from the crowd.\n\n\"What's your height and weight?\"\n\n\"I'm five feet, eight inches and I'm not telling my weight.\"\n\n\"Fine, what size are your tits?\"\n\n\"32B. My ex called them the Killer Bees.\"\n\n\"Are they real?\"\n\n\"Of course!\"\n\n\"I need to verify that.\" Nick reached out and grabbed her boobs over her bra, squeezing each one in turn. Kate was taken aback by his boldness but made no move to stop him. He nodded, \"Definitely real. Incredible tits. Describe your nipples.\"\n\n\"Pink.\" Nick raised his eyebrows at the lame answer. \"Maybe like pencil erasers? I think they're a bit longer than average. They get hard all the time. I have a tough time not showing my nips in a lot of tops. They're hard as pebbles right now.\"\n\n\"Let me see.\"\n\n\"My nipples?\"\n\n\"Yeah. I showed my cock, remember? Just a quick flash and you can put them back.\"\n\nShe'd never even sent a nude selfie to Tom, much to his disappointment. What if this video made it onto the internet, she thought? What if her classmates or her professors or her pastor ended up seeing it? For some reason that thought flooded her pussy with arousal. She hesitated and then pulled her bra down, freeing her boobs. The crowd clapped their appreciation and Nick zoomed in on her nipples.\n\nNick groaned. \"Oh yeah. I've always wanted to see those.\"\n\nKate was horny and wanted her nipples to be touched, but it was time to put them away. She slipped her bra back in place, running her fingers over her stiff buds as she did.\n\nNick stepped forward and held her chin. \"Plump lips.\" He ran his thumb over her soft lips.\n\n\"Do you think I have good dick sucking lips? Big and soft for sliding up and down a cock?\"\n\nNick pushed his thumb into her mouth, and she sucked on it. She rolled her tongue around the end like it was a little cock. Nick moaned. He pulled out and traced a finger down between her cleavage to her abs. He pinched her skin and felt around her tummy.\n\n\"You are so fucking tight. Your body is literally perfect.\"\n\nKate smiled at the compliment. It made her feel good that Nick was attracted to her. Even though she'd never thought of him in that way. It was making her hot to be desired.",
        "\"You say you keep a trimmed bush? Pull down your underwear a bit so we can just see the top of it. I want to see how trimmed we are talking about.\"\n\nFuck it, she thought, it was practically spilling out anyway. She grabbed the corners of the triangle of fabric and pulled them down a couple inches. Most of her bush was now on display. She bit her lip and looked up to Nick, who was capturing it on video.\n\n\"Fuck yes, I'm going to jerk off to this video for the rest of my life,\" he said.\n\n\"You're going to jerk off to me?\"\n\n\"Have done it a thousand times, babe.\"\n\nKate was surprised. She didn't know that Nick thought about her like that. She wanted to act sexy for him. She pulled at her pubic hair with her thumb and finger, playing with it. \"Do you like this? Is it sexy when a girl has a bush? I could grow it out for you. Or I could shave it off if the role called for it. Maybe you could help me with that?\"\n\nNick leaned in close and felt her pubic hair for himself. \"Fuck. And your lips?\"\n\n\"Bare as a whistle. But you don't get to see that,\" she teased. \"Yet.\"\n\n\"I can't wait.\" Nick sighed. \"Well you pass the body inspection. With flying fucking colors. Am I right?\" Nick looked at the audience who cheered their response energetically.\n\nKate smiled. She was growing more comfortable standing here in just her bra and g-string and she was beyond horny. All the attention, sexy innuendo, and of course tequila, had her craving a nice cock. She kept thinking about how good Nick's cock looked. She figured the skit was almost finished and was debating how she would get her release later that night.\n\nHe continued. \"Sometimes during filming you'll have to fake an orgasm. I wish I could say the male talent will get you off every time, but it doesn't happen. Have you ever faked an orgasm before?\"\n\n\"Yes.\" Unfortunately, the sex with Tom often left her unsatisfied. His ego would be so bruised if he thought she didn't climax. She would sometimes fake it to avoid the pouting.\n\n\"Ok. Please fake an orgasm now. Make it realistic.\" He pointed the camcorder at her face and gave her a thumbs up.\n\nKate was a bit apprehensive, but she knew she could make it incredibly sexy and it would help them win the contest. Nick had come up with some clever ideas for the sketch and she didn't want to let him down by putting on a lame performance. So she gave it her all.\n\nShe started slow, using Nick's name in her dirty talk as she simulated getting more and more worked up. \"Oh Nick, right there baby. Oooh that big cock feels so good inside me.\" Over the course of a few minutes her performance intensified, reaching a pinnacle that many would have sworn under oath was authentic.\n\nWhen she was finished, the crowd rewarded her efforts with extended cheers. The throbbing tent in Nick's boxers told her that he approved as well. Kate was beginning to think they were winning over the audience and had a chance to earn the top prize.\n\n\"Yes, so fucking hot babe. I bet every single person in that crowd, guy or girl, would fuck you right now.\" Kate saw in the aroused eyes staring back at her that Nick was probably right.\n\nIt made her overwhelmingly horny to be desired by so many, to be responsible for so many hard cocks. Her cunt flushed with the thought of all these men jerking off to the image of her body later that night. It made her feel powerful and in control of her sexuality and gave her an unflappable sense of confidence that overpowered her nerves.\n\n\"You said it turned you on to act sexy in front of strangers. Are you wet now?\"\n\n\"Yes.\" Her sopping pussy was on fire. \"Do you want to see?\"\n\nIn answer, Nick bent down towards her crotch while Kate rubbed her fingers against the small triangle of cloth preserving her modesty. The material had a noticeable wet spot and Kate traced her fingers along it, pressing against her clit. Nick held the camcorder inches away for a close-up shot. The outline of her swollen pussy lips was evident through the thin, damp underwear.\n\nNick surprised her by reaching out and pressing his fingers against the wet spot. He rubbed his thumb up and down the contours of her lips as Kate removed her own hand to allow him better access. Soon he moved up, finding the hard nub of her clit and squeezed it lightly. A shudder ran through Kate's body and she was submerged in a feeling of pleasure. She knew it was slutty to let him do this in front of all these people, but she wanted it. But before she was satisfied, he pulled away.\n\n\"Put your fingers in your panties and feel your wetness,\" he commanded. She slipped two fingers into the tiny underwear and spread her slippery lips. The top of her bush came into view again as her g-string shifted. Kate's eyes were half closed and she could only focus on the sensation of her fingers touching her pussy.\n\nNick grasped her wrist and slowly pulled her hand out. He brought her fingers into his mouth and sucked on them. \"Sweet and pure. Perfect like the rest of you. Taste yourself.\"\n\nKate brought her fingers into her own mouth as instructed. She had never tasted herself before. It was a bit metallic, a bit like a salty apple pie. But not unpleasant.\n\n\"Good,\" Nick said. \"Now we'll block out our test scene. We always do a quick run-through and I'll coach you through the positions before you actually get fucked.\"\n\nEvery time she thought the skit was over, he found a way to extend it. That was fine by her, though. She was enjoying this, riding high on the attention.\n\nHe carefully set the camera down, pointing it at Kate. \"We'll start in missionary. Lay down on your back and spread your legs.\"\n\nShe did so, placing her bare feet on the floor and spreading her thighs. \"Get rid of your shirt, stud,\" she suggested.\n\nNick smiled and pulled off his shirt. Then he knelt down between her legs, the flagpole in his boxers leading the way. He gingerly lowered himself until his member rested on top of her g-string. \"Keys to this position,\" he said. \"We are face to face, so a lot of interaction. Kissing.\" With that he leaned forward until their mouths met and kissed her.\n\nAfter everything else, Kate thought the kiss was appropriate to the sketch. But he was the first guy she'd kissed other than Tom in over four years. Nick was a different kisser than Tom. His lips were firm and aggressive in a way that she liked. She opened her mouth and let him French her.\n\nNick began to slide his shaft up and down the length of her pussy, simulating sex. Their underwear was in the way, but she felt the thickness of his dick on her lips and the friction against her clit. He eventually pulled back from the kiss.\n\n\"This position lets me pay attention to your tits.\" He groped her breasts through her bra. Kate enjoyed being touched. \"I'll be sucking your nipples and licking you all over.\"\n\nKate moaned at the thought. \"I can't wait,\" she said.\n\n\"This is where you want to grab my ass and pull me in deeper. Let the camera see that you're into it.\" Nick continued to slide his cock against her. Kate reached back and grabbed his ass with both hands, pulling him against her. The pressure on her clit felt amazing.\n\nNick leaned down to kiss her again. She began to move her hips in the opposite direction of his thrusts, pushing up against him. Her clit was ablaze as his tongue invaded her mouth.\n\nKate was concentrating on the feeling of pleasure and working herself into the rhythm. She was dismayed when Nick pulled off her and got to his knees.\n\n\"Turn over,\" he said. \"Time for doggy.\"\n\nShe wasted no time in getting onto her hands and knees. Nick nestled his hard cock in the cleft of her ass and gripped her cheeks. He slid his cock up and down the length of her crack, moaning as he did so. \"Point your toes,\" he said. \"Foot guys will want to see your sexy soles.\"\n\nHe held her hips tightly, pushed her ass away and slammed it back into his groin. He repeated this a number of times. \"Key to this position - need to see your tits bounce as I slam into you. Loose the bra so we can see how they move.\"\n\nKate hesitated. She hadn't intended to go topless. Not in front of all these strangers, and especially not on video. But she felt like they were so close to winning the contest. And girls in many of the other acts had gone topless. Maybe that was table stakes for winning at this point. She didn't want to disappoint Nick. Plus, she had already flashed her nipples. As if reading her mind, the crowd roared their support.\n\nNick stopped thrusting as she reached back to unfasten her bra. Her face and chest were flushed with embarrassment and arousal as she let the bra fall to the floor. She resisted the urge to cover herself and instead let everyone stare.\n\nHer Killer Bees were now on full display for everyone at the party as she knelt there wearing only a few square inches of fabric over her pussy. She could feel her nipples harden even more under their gaze.\n\nNick grunted. \"Perky, Fuck. Perfect.\"\n\nShe looked back at Nick and realized he'd taken his cock out through the fly in his boxers and was stroking himself. God, his cock was beautiful. Bigger than Tom's but not obscenely big. Girthy and smooth. She was not going to actually film a porno on stage, but she was warming to the idea of fucking Nick later.\n\n\"Back in doggy,\" he said, and she obeyed. Nick's finger traced along the strap of her g-string, over her asshole and then onto her lips. He rubbed against the drenched fabric and then pressed against her clit. It sent shockwaves through her body and her skin tingled. His fingers were soon replaced with his hard cock as he threaded it between her thighs and rested it against the small triangle of cloth.\n\nHe hooked his thumb under the strap of her g-string and she felt it shift. His hands gripped her cheeks and spread them apart. She knew Nick could now see her unobstructed asshole. The fact that he could leer at her most private hole made her cunt flood. She squeezed her thighs together around his cock and moaned.\n\nNick began thrusting again, repeatedly slamming into her ass. The impact caused her tits to bounce, just as he had predicted. \"Most girls can't come in this position,\" he said. \"So it's a good idea to rub your own clit.\"\n\nKate moved her hand between her legs, but instead of finding her clit, she found his bare cock. She loved how hard he was for her. She cupped his shaft in her fingers, pressing it against her aching clit as he continued to slide back and forth. Only the thin wet material was in the way.\n\nShe needed to feel him without the barrier. She pulled the g-string to the side and his cock slipped easily into the groove of her lips. The feeling was electric and sent pulses of pleasure through her body.\n\nHis cock slid easily now, lubricated by her juices. She leaned down, resting her cheek against the floor so she could have both hands free. One held her underwear to the side while the other cupped his cock as it slid along her cunt lips. The ridge of his swollen cock head was massive and every time it dragged across her bare clit, she felt explosions of bliss.\n\n\"Fuck, yes. You perfect little porn slut.\" Nick leaned in and grabbed her breast. His hungry fingers groped and mauled her tit. He groaned when he found her nipple. He was so frantic and lusty for her in a way that Tom hadn't been in as long as she could remember.\n\nHe continued pistoning between her lips. With each stroke, she was building closer to an orgasm. Her cunt craved his thick meaty cock. Her mind was clouded by her intense arousal and she was frenzied with desire.\n\nWithout thinking, she pushed his cock up and leaned forward. On his next thrust, Nick's cock slid smoothly into her waiting cunt. She was so wet he sunk to the hilt in one thrust. He growled in satisfaction as her tight pussy gripped his throbbing cock. He stopped thrusting, concerned it was an accident.\n\nShe couldn't believe how full she felt. Nick's fat dick stretched her tight pussy in a way she'd never experienced. She relished the unique mix of pain and ecstasy. She began to rock her hips back into him, fucking herself with his cock. Nick got the message and resumed thrusting at a steady pace.\n\nKate's finger found her clit and she rubbed herself in time with his thrusts. With every plunge, his cock mopped across her g-spot and extended deep into a virgin part of her cunt.\n\nIt wasn't long before her climax announced its arrival. The awareness that she was being fucked like a porn star on stage, on video, by her friend in front of a hundred horny strangers put her over the top. An earthquake started deep within her cunt and simultaneously sparks erupted from her clit. She lost all awareness of her surroundings as shockwaves surged through her body. \n\nWhen she regained her senses, she realized Nick had stopped moving. She looked back at him, catching her breath. \"You okay?\" he asked.\n\n\"Never better,\" she laughed.\n\n\"Thought I lost you for a second. I'm so fucking close. Will you suck my dick?\"\n\nShe debated with herself before making up her mind. She knew Nick needed to come. He deserved to come after the orgasm he just gave her. But her pussy needed a break. Plus, she'd just been fucked bareback in front of all these people. What difference would a blowjob make in preserving her modesty at this point?\n\nShe leaned forward and his cock slid out of her. She turned around, placing her hands on his thighs and looked into his eyes. \"Is this what you want?\" she asked, before sinking down and taking the head of his cock into her mouth.\n\nNick moaned in response. She tried hard to take his shaft into her mouth, his girth proving a formidable obstacle. But she refused to give up as she tasted herself for the second time in her life.\n\n\"My God, you're fucking gorgeous,\" he said, unbothered by her struggles. She relaxed into a rhythm, skimming her lips along his smooth shaft as her fist stroked from the base of his rod to her lips and back. He lightly held her cheeks and began gently pushing into her mouth in time with her movements. Soon his cock was touching the entrance to her throat on every thrust.\n\nShe looked up at him, her eyes beginning to water. Kate could tell he was almost there. She grabbed his balls and squeezed. Seeing that it was sending him over the edge, she prepared to receive his cum in her mouth. But Nick pulled back. He used his thumb to hold her mouth open and began stroking himself with his other hand.\n\nKate knew what he wanted. She maintained a firm grip on his balls as he began to empty them. His first rope of cum shot directly into her mouth, coating the back of her throat and her outstretched tongue. The second covered her cheek, splashing up to the bottom of her eye. The third rope splashed off her chin and lips. Nick pointed lower and the next ones hit her chest. She leaned back and presented her tits for his use. She lost count of how many spurts of cum covered her, but she had never seen so much semen.\n\nNick managed to say, \"Now that's a facial,\" before collapsing into a spent pile on the floor. The crowd roared their approval, erupting in deafening applause.\n\n* * *\n\nEPILOGUE\n\nKate enjoyed her week-long stay at the Mexican villa. She decided not to pursue anything long-term with Nick, but she didn't regret their crazy performance. It had unlocked something inside her that was both liberating and empowering. She wanted to explore it on her own terms, unencumbered by a boyfriend.\n\nShe enjoyed teasing the staff at the villa, showing off in a series of increasingly revealing outfits that she had purchased for the trip. She took great pleasure in planning her exposures. They culminated with her being \"caught\" pleasuring herself nude on the private beach by the maintenance man she'd grown smitten with.\n\nNick was more than happy to let Kate enjoy the prize by herself. He was especially grateful after she told him he could keep the video of their skit.\n\nPaul invited Galya to the villa for a separate, extended vacation with him. It was the beginning of a wild relationship, with her red-hot passion taking Paul to places he had never imagined.\n\nHis assistant Brooke joined them for the last week of the trip. She needed to relieve some stress, having just separated from her husband. That goal was exceeded as the three of them pleasured each other in a scorching orgy of flesh. But that is another story.\n\n* * *\n\nAuthor's Note: This is my first attempt at erotic fiction. Please leave me some constructive criticism or encouragement and let me know how I did. I'd love to hear in the comments which of the skits was your favorite. It will help me as I contemplate writing more stories. Thank you!"
    ],
    "authorname": "spyralout",
    "tags": [
        "acting",
        "costume",
        "halloween",
        "nude in public",
        "party",
        "public masturbation",
        "role play",
        "slut",
        "spanking",
        "tease"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-halloween-skits"
}