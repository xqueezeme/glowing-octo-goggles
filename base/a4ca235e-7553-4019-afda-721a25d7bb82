{
    "title": "Adventures of Hollywood Jim Ch. 46",
    "pages": [
        "It was well after midnight, and my condo was beautifully quiet. Even Smokie the cat was asleep. Lying in my king-size bed, a lovely lady curled up beside me. The curve of the bed sheets showed she was naked underneath, as was I. \n\nThe lady was Blake Lively, she looked so beautiful in slumber. The evening had been special, but then any evening with her was always special.\n\nThe days leading up to this night were a story in themselves. I was still trying to keep all the players and their actions straight... \n\n\"You'll never believe who called.\" Chris said as I arrived at East Coast Image one morning\n\n\"Gee, let me guess...Paris? Lindsay? Your mother?\" I replied\n\n\"Ha-ha, Chuck Tyler.\"\n\n\"You're kidding?\"\n\n\"I took the call myself. He's back in town.\"\n\nEarly in our business, we'd made an important contact in Chuck Tyler. He was the one who brought Tigress to our firm via a debut show in Las Vegas that was quite nice for me in particular, as it reunited me with Ms. Paris. As Tigress' popularity grew though, he was quickly overwhelmed with the demands of the group and his management company. So he boldly sold his interest in the group as well as his company, which begat us recording software tycoon Marty O'Brien whom I'd met in Hawaii. And while Marty was a good, if sometimes obnoxious, presence in our lives, we had to admit that Chuck's style was more to our liking. Chuck landed on his feet in record time as he was immediately grabbed by a New York PR firm we'd had contact with during the Triple Threat Tour. \n\nAnd Chuck never forgot his friends.\n\n\"So, what's he doing out here?\"\n\n\"He...has a new job for us.\" Chris replied, I could see the dollar signs already spinning in his eyes.\n\nChuck arranged a dinner at Morton's Steakhouse (now I knew he was really moving up in the world, when we first met him, his pockets seems to be loaded with coupons from Subway restaurants). I'd never been there before, so a place with cushy booths, classic red leather seats and endless racks of ribs was amazing. Chuck told us of a new photo campaign he wanted us to do. \n\n\"We landed Rachel Ray's production company as a client and she wants some new photos, you guys interested?\"\n\n\"Sure! I just read she signed some big production deal.\" Chris quickly replied.\n\n\"Great! That ends the first part of this meeting.\" Chuck said as he took a big sip of his wine\n\n\"The first part?\" I asked\n\nChuck then laid out for us some very ambitious plans he had.\n\n\"You two have quite the operation, you did Paris' campaign, then album photos for Rihanna...Marty signs you on with Tigress, you went around the world and then some. Oh, you did that movie with Blake Lively, too. Plus there's that Jennifer Aniston movie, I'm hearing a lot of buzz about that film.\" He now paused to take a sip of his wine \"I'd call that big stuff for two guys who were unknowns in this town a year ago.\"\n\nThe way he was recapping our history was intriguing, I knew something big was coming.\n\n\"Maybe it's time you moved up in the world a little further. I want to make you guys the staff photo company for us.\"\n\n\"What does that mean?\" Chris asked with a mouthful of sirloin.\n\n\"Just what I said, you'd be working for us exclusively. You'd be on all our photo shoots, do all press photos, the works. Setup your own operations, graphics, you name it.\"\n\nMy mouth was coated with a glaze of barbecue sauce, so giving any kind of answer looked pretty silly right now. But it sure was a mind-boggling prospect.\n\nChris looked more thoughtful than I'd ever seen him before. It was his company after all. Even though I had only a small stake in the company that provided a generous salary, I still considered myself part of the business. \n\n\"When do you need an answer?\" he finally said.\n\n\"Give it all the time you need. For now though...let's toast to good times tonight, and future good times tomorrow.\" He said as we all raised our wine glasses.\n\nThe idea of working exclusively for one company was enticing, but we'd been independent for so long. Is this what we really wanted?\n\n\"What do you think?\" I asked Chris the next day.\n\nHe looked at me and exhaled slowly.\n\n\"It sure is an attractive offer, we'd always have a guaranteed gig, but I gotta tell you, it's been fun jetting off to some exotic locale as a hired gun...even if it is with Marty.\"\n\n\"Sometimes we have to take the bad with the good.\" I replied with a smile.\n\nChris' eyes narrowed somewhat.\n\n\"Let's see if we can sweeten this deal a little.\"\n\n\"How would that happen?\"\n\n\"You let me take care of that.\" He said with a confident smile.\n\nUntil we decided one way or the other, we had the photo assignment on Rachel's TV show. Rachel's people wanted to do a preliminary meeting before we did our actual photo shoot. The day we arrived, the studio was a hubbub of activity, with assistants going back and forth with food, utensils, pots and pans and it was like being in a mega-kitchen. But oddly, we didn't see Rachel anywhere. Once her producer arrived, we found out she wouldn't be there because she was taping one of her other shows back in New York before coming out for several weeks of shows on the west coast as part of a \"Rachel Goes West\" series. As usual, Chris did all the negotiating while I stood around and watched the crew at work. But I got the feeling that things weren't going very smoothly. Chris and the Producer were in a very tense conversation and neither wanted to give an inch. Before I knew it, we were out of there.\n\n\"What happened?\" I nervously asked as Chris walked hurriedly to his truck. I could tell he was mad.\n\n\"Oh, the usual! Try to be creative, try to be unique! What do I get? A real hard-ass bitch, that's what I get!\" he growled. \"They want it done one way, their way!\"\n\n\"Uh-oh....\" I said\n\n\"Exactly! They don't wanna hear anything I have in mind, some production deal we get! I think she's just pissed they can't use their own people. If we did these photos, they'd be so cheap-looking, no style! I ain't working this way, Hollywood! No fuckin' way!\"\n\nChris got in the truck and his door slam said it all.\n\n\"You know what Chuck can do with this great deal of his!\" he said as he started it up and roared off. \n\nI took a deep breath, went to my car, and headed home.\n\n\"Well, so much for being part of Chuck's family.\" I said to myself.\n\nAfter seeing Chris go ballistic and watching a big money deal dissolve, I needed some distractions.\n\nAnd once again, it was Marty who provided the distractions.\n\n\"Hey Hollywood, come on down to the Eagle tonight, big show here with your name on it.\" \n\nWhen I arrived at the Eagle, it was loaded with paparazzi guys outside and a stern looking bouncer at the door. I hesitantly gave my name and with a toothy smile, he let me inside.\n\nTo my surprise I saw Chris at a back table talking to Marty. When they saw me, I was beckoned over.\n\n\"Sounds like you and Chuck had a little disagreement?\" Marty said.\n\n\"Well, Chris could tell you better than I could, I was just a bystander.\"\n\nMarty put up a hand.\n\n\"Say no more, it'll all work out. But for now, let the dust clear and I'll make some calls, get you guys busy. My girls will be doing some TV work soon so that'll be good.\"\n\n\"I gotta hit the road, see you tomorrow.\" Chris said as he got up and left.\n\n\"You're leaving? Now?\" I said, stunned.\n\n\"Behave yourself, Hollywood.\" He said with a smile.\n\nMarty quickly pulled up a chair and sat me down.\n\n\"Don't worry about a thing, my friend. I can handle Chuck.\" He said.\n\n\"I'm not sure how I feel about his offer.\" I said nervously \"It's a great deal and all, but...um...\"\n\n\"Jim...it'll be OK, you have my word. Go get yourself a drink, kid.\" He said with a reassuring tone.\n\nI headed for the bar like he said. As I waited for a beer, I felt a very soft touch on my shoulder. I turned and had a nice surprise standing in front of me.\n\n\"Hi, baby.\" It was Vanessa Hudgens, looking as lovely as ever in a tight striped polo shirt and equally tight black jeans. Her long black hair looked as gorgeous as ever.\n\n\"Well, this is a great surprise.\" I said as she gave me a soft kiss on the cheek.\n\nI wasn't sure if I should be happy or disappointed but with her was tall boyish kid with causally tousled brown hair and wearing a black blazer with matching pants.\n\n\"Zac, this is Jim. He did all my photos for the magazine cover.\" She said as she gripped his arm.\n\nNow I knew, she was with her boyfriend Zac Efron.\n\n\"Oh, yeah. Thanks a lot, pal. Those photos were great!\" he said with gee-whiz charm as he shook my hand.\n\n\"Just doing my job.\" I said with a smile and a shrug of my shoulders.\n\n\"Babe, there's a guy over there we should meet.\" He said as he guided her away.\n\nVanessa looked over her shoulder and winked at me. I think she even made the hand signal for \"call me.\"\n\nI smiled to myself as she walked away, then turned back to grab my beer, and proceeded to bump into a denim clad ass that belonged to a blonde woman standing at the bar.\n\n\"Whoa! Sorry about that!\" I said\n\n\"Oh that's okay.\" The blonde said as she turned around holding an empty bottle of her own, coincidentally same brand as mine, Corona.\n\nThe blonde was quite pretty and wore a vintage Led Zeppelin jersey with a black leather blazer over it. She had an easy smile and very pretty eyes.\n\n\"It's not very often someone gets that close to my ass!\" she said with a laugh.\n\n\"Oh, it wasn't intentional...\" I quickly said.\n\n\"Dude...it's a joke.\" She said with her eyebrows raised. \"Hi, I'm Ashley.\" She said as she extended her hand\n\n\"Jim.\" I replied.\n\n\"I know you now, I saw you with Vanessa and Zac. I guess she likes you.\"\n\n\"Oh, she's just a...\" I began.\n\n\"...a friend. Yeah, I've heard that many times. She's had a few friends when we've worked together.\"\n\n\"Oh, I didn't know you worked with her.\"\n\nAshley looked at me with confusion.\n\n\"You don't know me, do you?\"\n\nI looked harder at this blonde beauty, she did look a little familiar.\n\n\"I'm Ashley Tisdale.\" She now said.\n\n\"Oh! Right! I get it now!\"\n\n\"Took a little while, huh?\"\n\n\"Yes, I know you now.\"\n\n\"Bright boy.\" She said with a playful punch to my shoulder \"now how about buying me a drink?\"\n\n\"Good idea.\"\n\nTwo Corona's were in our hands as we headed for a table.\n\n\"So you and Vanessa know each other, professionally?\" she said with an emphasis on 'professionally'.\n\n\"Yes, it goes with the job.\" I said as I took a sip of my beer.\n\n\"You do good work...think you'd like to do me?\"\n\n\"Uh, that depends...\" I said hesitantly\n\n\"On what?\" she replied leaning in close and smiling.\n\n\"Uh...on weather or not I can think of an answer at this moment.\" \n\nAshley and I both laughed.\n\n\"Seriously, I know Vanessa and she said you took great photos and I trust her, so let's get together sometime.\" She said with an easy smile.\n\n\"OK, here's my card.\" I said as I gave her our business card.\n\n\"Great, could I use your cellphone for a sec?\"\n\n\"Sure.\" \n\nShe quickly punched some numbers on my phone and looked like she might be checking her voicemail.\n\n\"Jim from East Coast Image.\" She said reading my business card before flipping the phone shut.\n\n\"What was that for?\" I asked.\n\n\"Oh, a little trick I learned...I just called my phone and now I have your phone number.\" She said with a sly smile.\n\n\"Very clever, Miss Ashley.\"\n\n\"Thanks. I'll uh, call you soon.\" She said as she got up to leave.\n\nMarty called me back over to his table where Vanessa and Zac had joined him. As I sat down, Vanessa was on my right and Zac was between her and Marty. As the night wore on, Marty went into his usual spiel about plans he had for Tigress and how Vanessa fit into those plans. I had to wonder if he was gonna put the moves on Vanessa the way he did with his other prot\u00e9g\u00e9s`. \n\nTo my surprise, the moves were being put on me!\n\nI felt a hand on my knee, then the hand slowly crept up my leg. I had a flashback to when I was in Vegas with Bridget and Laura. But this time, it was Vanessa who was letting her hand do the walking! And she kept a sly smile the whole time, listening to Marty, and smiling at Zac. This girl was a better actress than I thought!\n\nVanessa had her hand on my crotch now and it softly gripped my \"package\". And I was getting hard, very fast. God, I hoped Marty didn't ask my opinion about anything!\n\n\"So, Jim...what do you think?\" he now asked\n\nAw, crap!\n\n\"Um, I-I-I think it's a good idea.\" I said.\n\n\"What's a good idea?\" Zac asked\n\n\"Uh, what was the question?\"\n\n\"What?'\n\n\"Yes, I agree.\" I said.\n\n\"Exactly! Like I said...\" Marty replied and continued.\n\nThank God he didn't ask me \"who's on first?\"\n\nVanessa was giggling at my predicament, she knew she had me right where she wanted. She then leaned in toward my ear.\n\n\"Unzip it for me...\" she whispered.\n\n\"Not here!\" I whispered back.\n\nShe smiled and giggled in response.\n\n\"Tell them you're getting another drink.\" She said.\n\n\"Uh, I'm gonna get another beer.\" I said\n\n\"Why get up Jim, I'll get a waitress over here.\" Marty said as he raised his hand.\n\n\"Oh, no, no I'll be back.\" I said quickly.\n\n\"I'm gonna go powder my nose, babe.\" Vanessa said as she gave Zac a quick kiss on the cheek.\n\nVanessa and I got up and she followed me to the bar, then took my arm and pulled me toward a dark corner of the back stairs leading up to the club owner's office. She turned and checked all around her, making sure we couldn't be seen. I was petrified to be in a situation like this, but Vanessa's soft hands were far from petrified. I felt my zipper slide down and her hand go inside as she began to kiss me.\n\n\"Oh, Jim...thought about this all night long.\" She said as I kissed her neck. \"Wish...wish we could fuck again...so gooooood.\" She said breathlessly as she caressed my dick and let it slide through her fingers.\n\nI was still looking around, wondering if we'd get caught.\n\n\"Oh Vanessa...\" I finally said, acknowledging her graceful handjob that made me feel so good. \n\n\"Oh Jim...so nice...so hard...make you feel good, baby.\"\n\nVanessa's hand slid up and down my dick, she watched her progress with a big smile. I wonder if Zac got the same treatment I was getting here?\n\nI tried to work up the courage to touch her in the same way but I was getting very close to my point of no return, and hoped I wouldn't cum on the floor.\n\nSuddenly I heard footsteps behind me. It was Derek Adams, the club's owner.\n\n\"Gotta stop!\" I said to Vanessa and we quickly reassembled ourselves as Derek came down the steps.\n\n\"Vanessa! Good to see you again, where's Zac?\" he said as he held his glass of Scotch. \"James...you're looking rather...happy I see.\"\n\nI was still trying to stuff my dick back into my jeans.\n\n\"Oh, yeah Derek...great night, you know.\" I said, sounding like I'd just run a marathon.\n\nVanessa's hand was covering her mouth and she was laughing uncontrollably.\n\n\"You take care of that baby...\" she said as she walked away, still laughing. This whole evening was getting too weird for me.\n\n\"OK, I've had enough.\" I said to myself.\n\nI said my good night's to Marty and everyone else and headed home. Vanessa's naughty smile as I left told me we'd be meeting again very soon.\n\nWhen I arrived back home, it was after midnight and there was a surprise phone message for me.\n\n\"Hi, Jim it's Blake! Um...I'm gonna be in town the day after tomorrow, and we should have that dinner you promised...so gimme a call, honey, bye!\"\n\nI couldn't help but smile, Blake Lively's back in town. Nice.\n\nI remembered when I saw her last, I promised I'd make her dinner in the pressure cooker she gave me as a memento of our time in San Francisco while she was making \"Dreamer\". And she promised to wear the vintage Fillmore West t-shirt she had filled out so nicely. I still had it in the Ziploc bag she sent it in, I wondered if the scent of her Chanel` perfume was still on it. But then I suddenly realized that I hadn't a clue what to make for her. And I never bothered to read the manual on how to use the damn thing! I dug out the machine and the recipe book, figuring while at the store I'd suddenly be inspired. \n\nI now dashed out again into the night looking for an open grocery store. Luckily, my usual one was open late and it was pretty empty for this time of night so I could probably think what culinary delights I could prepare.\n\nYeah, right!\n\nI was fumbling through the book and found something that seemed easy enough.\n\nOK, I can do this.\n\nAs I cruised the aisles, my cart started to fill up with ingredients. OK, pretty good so far. \n\nLast ingredient, olive oil.\n\nI never realized how many varieties there were. I suppose I could just pick the one with the most artistic label. Or I could just go for the celebrity version.\n\nI turned to a woman standing nearby reading the label on a spaghetti sauce jar. She had on a grey fleece jacket and matching sweatpants. Her black hair was in a loose ponytail.\n\n\"Uh, 'scuse me... do you know if this is any good?\"\n\nShe turned, looked at the bottle I was holding, and snickered.\n\n\"Well, it better be. It's got my picture on it.\" She said.\n\nI looked at the bottle and realized it was \"Rachel Ray's EVOO Olive Oil\".\n\nAnd the creator of it was in front of me.\n\n\"Oh, my...\" I said, stumbling for something witty.\n\n\"It's good stuff, believe me.\" She said.\n\n\"Yes, like you said, your, uh, name's on it.\"\n\n\"What's your name?\"\n\n\"Jim, I guess yours would be Rachel?\"\n\n\"You got it!\" she said with that perky tone she was famous for. \"So, I would guess you're a single guy?\"\n\n\"What makes you think that?\"\n\n\"Well, I don't see a lot of guys here this time of night. And... judging from what you've got there\" she said looking at my cart \"You seem to eat more than just microwave junk.\"\n\n\"I guess you're right, I'm gonna try out a pressure cooker so I wanna do it right.\"\n\n\"Oh, cool! Mind if I see the recipe?\" she asked.\n\n\"Yeah, sure, might as well get the opinion of an expert.\"\n\n\"Hah! Far from it, pal!\" she laughed with that sexy rasp of a voice as she looked over it.\n\n\"This is pretty good, I should try this on my show while I'm out here.\"\n\nHey! That's right! \n\n\"Really? I didn't know that.\"\n\n\"Yup, I got in this afternoon and we were supposed to get some photos done. Apparently there was a problem with the photographers. I heard they were really great I wonder what happened?\"\n\n\"Yes, that is rather strange...\"\n\nShe looked over the recipe book some more.\n\n\"Think you can do this yourself? Usually guys aren't the best cooks.\"\n\n\"Well, I figure if I have this stuff\" I said as I held up the olive oil bottle \"I can't go wrong.\"\n\n\"That's for sure! Uh, what are you doing tomorrow? What am I saying, it's tomorrow already!\" she said laughing as she realized the hour.\n\n\"Well, working. Why?\"\n\n\"Come down and see us tape the first show. Give the security guys this.\"\n\nRachel handed me a colorful business card with the production company name on it.\n\n\"Come down at like 10.\"\n\n\"Well, OK, I'll be there.\"\n\n\"Great! I'll see you then, nice meeting you Jim.\"\n\nAnd she headed on her way.\n\nI guess I can consider this an encouragement of my culinary pursuits.\n\n\"We are in luck!\" Chris said excitedly the next morning.\n\n\"How's that?\"\n\n\"The CW Network had a new series coming and we just got the photo gig.\"\n\n\"Awesome!\"\n\n\"Hellcats\" was a new series following a college cheerleading squad captained by Ashley Tisdale.\n\nThis is encouraging, I thought.\n\nOnce we got to the set we were met by Amy Adamson, our old contact from the Rihanna photo shoot we did in Palm Springs. Amy had us shooting photos as they filmed several routines for the series. It was like every high school fantasy as several girls showed up in royal blue cheerleader outfits with yellow striping and began a whole series of moves to the song \"Misirlou\" as we snapped away. But I didn't see Ashley anywhere, there was one tall blonde with long curly hair who seemed to be a team leader and probably the star of the series but she didn't make me look twice. I found out later it was the show's star Aly Michalka. Finally I saw a cute brown haired girl wave to me and smile and I realized Ashley had gone from golden blonde to her natural chestnut brown since we last met. ",
        "\"Hey Jim!\" she said as she bounced over to me and gave me a hug.\n\n\"You know her?\" Chris asked, stunned.\n\n\"Sure he does, bought me a beer and everything!\" she replied\n\nI could only nod a reply.\n\nAmy came over too.\n\n\"Hi, Ash! Looking good out there, director really says you're a natural at this.\"\n\n\"Oh, great! Been a long time since I did moves like that.\"\n\n\"You were a cheerleader?\" I asked\n\n\"No, just a High School Musical cast member.\" She laughed\n\nThe director called a wrap for the day and everybody began to disperse to their dressing rooms. \n\n\"Hey, stick around. I owe you one.\" Ashley said as she headed for her trailer.\n\n\"OK, I'll be around.\" I said.\n\nAshley trotted off like the cute cheerleader she was playing.\n\n\"I'm really glad you guys are doing the photos.\" Amy said to me\n\n\"Oh, thanks. Just doing our job, you know.\" Chris said\n\n\"Just out of curiosity, how come the network didn't use their people on this?\" I asked\n\n\"I wondered about that too, I think somebody at the network got a call from somebody else.\" Amy said \"I'm just as confused as you. But hey, you do good work so in the end you're here, right?\"\n\n\"Can't argue there.\" Chris said as he turned away to take a call on his cell.\n\nMy phone rang suddenly too, that's strange.\n\n\"So did you like being around the Hellcats?\" the voice on the other end said.\n\nIt was Blake.\n\n\"Um...yes, but how did you...?\"\n\n\"Hey, I've got friends in high places.\" I could tell she was smiling as she spoke. \"how do you think you got this gig?\"\n\n\"Ah, I see!\" I replied \"I always thought you were a crafty one Miss Blake.\"\n\n\"Oh, I'm a lot of things, baby.\" she said in a tone that was so sly and so sexy at the same time.\n\n\"Absolutely, are you in town now?\"\n\n\"I'll be home day after tomorrow, just finishing up some stuff for the Dreamer DVD. Then I have to re-shoot some scenes for Green Lantern.\"\n\n\"Great, I owe you a dinner you know.\"\n\n\"Mmmm, can't wait!\" she replied \"I'll call you tomorrow.\"\n\n\"OK\" I said as we hung up\n\nI turned to see Ashley had changed into loose running pants and a pink Ed Hardy t-shirt. Her hair was in a loose ponytail.\n\n\"Hey, think you could do me a favor?\" she asked\n\n\"Sure, what?\"\n\n\"I need a ride home, my car is getting its yearly service and won't be ready 'til later.\"\n\n\"OK, let's go.\" \n\nAmazing how things move so fast sometimes.\n\n3 AM, my bedroom...\n\nBlake turned over and breathed in, her beautiful eyes opening a little. She saw me and smiled.\n\n\"Hey gorgeous...\" she whispered.\n\n\"Hey, sleepy girl.\"\n\n\"Mmmmm...It's so quiet...\"\n\n\"I like it this way.\"\n\n\"Me too...\" her voice drifted off as she went back to sleep \"Me too...\"\n\nBut not before I softly kissed her cheek.\n\nLike I said, amazing how things move so fast sometimes.\n\nAshley and I headed for her house in my SLK convertible. \n\n\"This is an awesome car!\" she said excitedly\n\n\"Thanks, I still can't believe it's mine.\" I said as we headed onto the highway.\n\n\"I've got a BMW convertible, pretty sweet.\"\n\n\"Oh, that's an awesome car too.\"\n\nAshley was a sweet girl, she had such a nice personality. She wasn't on her cell the whole time, she was curious about my work, places we'd been. \n\n\"Probably comes from my background.\" She said\n\n\"How so?\"\n\n\"Well, I'm not from here originally, I'm a Jersey girl. So I guess I've got that Jersey work ethic.\"\n\n\"No kidding?\"\n\n\"Oh yes, I didn't want to mooch off my parents, so I worked in a Gap store for awhile. I learned a lot there.\"\n\n\"Me too, I used to work at a Burger King\"\n\n\"I almost worked there.\"\n\n\"The money wasn't too bad, I'll say that.\"\n\nWe soon pulled up to Ashley's home in what seemed like a gated community. It was very elegant and I could tell she was very proud of it. She explained how she'd worked with her dad to design it. There were lots of marble and white surfaces throughout. Outside one window I could see what looked like a cabana house.\n\n\"I got the idea for that from this hotel I love in Cabo.\" She said \"You've gotta see this room.\" \n\nShe led me down the hallway to an enormous white room that was lined floor to ceiling with shoes and clothes. Equally large mirrors covered one wall and there was a big pink ottoman in the center.\n\n\"I'm a bit of a clotheshorse as you can see.\" She said\n\n\"You, a clotheshorse? Impossible!\"\n\nAshley stood near me and smiled warmly.\n\n\"And you're not, I suppose?\" she finally said\n\n\"Well, no I'm not.\" I said as I examined a pair of pink cowboy boots \"Pink cowboy boots just aren't my style. But I will admit I always wanted a pair of snakeskin boots\" I said as I held a pair she had. \"Very rock and roll.\"\n\nWe were staring at one another now, like something big was about to happen. We just didn't know what it would be.\n\nAshley finally broke the tension.\n\n\"Um...let me get you something to drink.\"\n\n\"Good idea.\" I was somewhat relieved she'd said that.\n\nAshley's kitchen was large and off-white in color with marble surfaces throughout.\n\n\"Like it? My dad's a contractor so he did all the work. We fought like cats and dogs on this room, but hey, it's my house, right?\" She said proudly as she took out a frozen vanilla ice drink and handed one to me. \n\n\"These are sooo decadent!\" she said as she sipped hers.\n\n\"Whoa!\" I said after the first sip \"you're right.\"\n\n\"They are great.\" She said with that smile of hers.\n\nEven with dark brown hair she was still a knockout as she hopped up on the counter.\n\n\"So Jim...what do you think of me as a cheerleader?\"\n\n\"Well, if you keep your kicks up the team might stand a chance in the state championship...rah-rah.\" I replied with a sheepish grin. \n\n\"You always have a good answer, don't you?\"\n\n\"I try.\"\n\n\"I think you're trying pretty good...to charm me.\"\n\n\"You think so?\"\n\nAshley nodded in response as she slurped her drink and slowly licked her lips, very provocatively too.\n\n\"I wonder what Vanessa knows that I don't?\" she said in a voice that grew softer.\n\nI could only look at her equally brown eyes and pink lips\n\n\"Uh, I wonder about that too.\" I said in the same way.\n\nI had somehow moved in closer to her and her eyes closed slightly as we kissed. Her lips were slightly cold from the drink, but sweet from the drink too.\n\n\"I probably taste like vanilla.\" She said.\n\n\"That makes two of us.\" I said as I kissed her again \"but I don't mind.\"\n\nAshley kissed me again.\n\n\"Neither do I.\" she said\n\nI was leaning in and kissing Ashley deeper now as she sat on her marble counter, her legs spread so I could be close to her as we continued to kiss. Then I felt her shapely legs wrap around my waist and her arms around my neck as she tried to have me hold her up. I was surprised how light she felt in this position. \n\n\"Oh!\" she said in wonder as she felt herself being held by me \"Strongman, huh?\"\n\n\"I guess so!\" I replied as I kissed her again.\n\n\"Bedroom, baby.\" She breathlessly said as I carried her down the hallway to her bedroom.\n\nAshley's bedroom had sunlight streaming in everywhere, but she immediately pushed a button by her bed that closed the drapes, giving the room a soft glow.\n\n\"Sorry...I'm still a little self-conscious sometimes.\" She said as she walked back and kissed me.\n\n\"Don't be sorry, you're a lady.\" I said softly \"nothing wrong with that.\"\n\n\"Thanks, Jim...\" she said\n\nAshley slowly loosened her shirt and drew it up over a very toned belly and off. I did the same and we were topless in front of each other.\n\nAshley Tisdale had a very nice chest, maybe a B size. She seemed bashful with me looking at her like this.\n\n\"Sorry, it's still kinda weird for me.\" She said\n\n\"Me, too.\" I said\n\n\"I don't have like, mega-boobs.\" She said looking down at her tits\n\n\"Doesn't bother me, come here.\" I said softly as we hugged. She had a beautiful scent about her and her hair felt incredible as it slipped through my fingers while we kissed.\n\nHer eyes were a cool shade of brown, like mine. My finger softly traced her cheek and she breathed in softly as she felt my touch.\n\n\"Ohhh...you feel so nice Jim.\"\n\n\"You do, too.\"\n\n\"Please touch me...\" she said in soft, but pleading voice.\n\nI cupped her breast and she breathed again in a soft tone that was so sexy to hear. Her nipples were penny-sized and were quickly erect the more I touched them.\n\n\"Yes...that feels so nice...I'm pretty sensitive there aren't I?\" she said with a slight giggle.\n\nI continued to play with her breasts, they were so soft.\n\n\"I like it...I guess I'm making you feel good.\"\n\n\"Oh yes...yes you are...\" she said with a kiss \"Don't stop.\"\n\nAshley's hands now roamed to my pants, mine roamed to hers.\n\nWe looked at one another, Ashley nodded.\n\nI felt her hands go to my belt and loosen it. \n\nThe belt slipped through her hands now, and then my khaki pants were unbuckled. She slowly pulled the zipper down and the bulge in my underwear was definitely there.\n\nAshley let out a small gasp when she saw it.\n\n\"Oh my...\" she said softly\n\nWe kissed again\n\n\"You can take my pants off too.\" She whispered\n\n\"OK, you're sure?\"\n\nShe nodded.\n\nHer running pants had only a thin ribbon to undo, I loosened it and her pants fell to the floor. She had on flesh colored panties that seemed to blend into her skin tone. My hands caressed her ass through the material and they felt so smooth and soft. Ashley moaned with my every touch. I slowly slipped my hand under the waistline and felt the bare skin of her ass, it was as soft as the rest of her was and Ashley continued to softly moan with my touches. Now she felt the front of my underwear and the hardness within.\n\n\"Can I see it?\" she whispered.\n\nI nodded.\n\nAshley now pulled my underwear down and my dick popped up, fully hard thanks to our desire. She jumped slightly then her mouth stayed open the more she saw my dick as it twitched slightly.\n\n\"Oh my...\" she said with a cute laugh \"You've got a nice one, honey.\" She said looking up at me.\n\nI sheepishly nodded as we kissed again.\n\n\"Take mine off now.\" She said\n\nI knelt down and slowly slid her panties down, exposing an ultra smooth pussy. \n\n\"Ashley...it's beautiful.\" I whispered as I looked up at her.\n\n\"Thank you...please...touch me there.\"\n\nShe didn't need to ask me twice.\n\nMy hand began to make its way to her love nest. She was super wet, my finger easily slid just slightly inside her and she inhaled sharply and moaned. I loved the slick, moist feeling of my fingers inside this beauty. \n\n\"Oh yes...uh-huh...yessss...oh god...oh yes...\" she said breathlessly as my finger probed her. I now slid two fingers inside.\n\n\"Oh my....oh yes...yesss baby...\"\n\nThe pink folds of her womanhood looked so inviting. \n\n\"Are you okay with what I'm doing?\" I asked\n\nAshley could only nod, her breaths grew more rapid.\n\nI moved in closer and softly blew on her pussy.\n\nMore rapid breaths from her. As if she knew what was coming and she was anticipating something nice.\n\nMy lips and tongue softly touched her pussy. My tongue licked the outer folds of her pussy. Ashley let out a slow gasp.\n\n\"Oh Jim...\" she now shuddered as she felt my tongue enter her. The warmth of her pussy engulfed my tongue and I was eagerly licking her, teasing her with the tip of my tongue as it probed her. When I looked up at her, she was clearly in a dream. Her head was thrust backwards and her back arched.\n\n\"YYYYESSSS!!\" she cried out. Then her breaths become choppy and rapid as her body relaxed. Her legs buckled and she began to kneel down to my level.\n\nI hugged her and we kissed.\n\n\"Oh...my...my god...\" she gasped \"I forgot how that felt.\"\n\nAshley rested her head on my shoulder.\n\n\"Let's lie on the bed.\" I whispered\n\nShe nodded.\n\nAshley looked so sexy as she slowly slid under the covers. It felt great as we lay in it. She lay on my chest and rubbed it softly. She sat up and looked at me. I couldn't help but look at her nicely shaped tits\n\n\"I should return the favor, baby.\" She said with that smile we all knew from TV. She pulled back the covers and slowly reached down to feel my dick. It had softened with all my \"lip service\" on her. But she knew what she wanted, she wanted me hard.\n\n\"I like your, um, I like your dick\" she said with a snicker, almost embarrassed by what she was saying, so un-Disney for her. \"I like it a lot.\"\n\nI only smiled.\n\nAshley's hand felt my dick, and as she began to stroke it, I could feel the blood pulsing through it and it was getting super-hard again, thanks to her touch.\n\n\"Wow...look at that.\" She said softly with a naughty smile.\n\n\"Kiss it.\" I said, very un-Hollywood for me now that I think of it.\n\nShe looked at me and flashed another naughty smile.\n\n\"Really?\" she said looking at me.\n\nI nodded.\n\n\"Okay...\" she said with an 'I'll show you' look on her face.\n\nAshley leaned down and softly kissed the head, then kissed it again. Then her tongue began to tease the tip. Now her mouth started to envelop the head. She turned and looked at me as she slowly lifted her mouth off my dick.\n\n\"How's that?\" she said.\n\n\"Nice.\" I said as I breathed in deeply \"Very nice.\"\n\n\"I haven't done that very much. I know guys like it, but I don't.\"\n\n\"Oh, okay. I understand.\" I said\n\n\"Nothing against you, but, um, I like receiving rather than giving. If you know what I mean.\"\n\n\"Yes, I know exactly what you mean.\"\n\n\"Thanks, Jim.\" She said as she came back up and kissed my cheek. I embraced her and slowly turned over so she was on her back. She knew just what I was doing as I sat up. She opened her legs wide and had a look of excitement on her face. I took my still hard dick and lightly rubbed it over her pussy, then slid it into her. She was very tight, very wet, and very sexy. Her eyes were closed; she bit her lip and breathed in sharply as I entered her. Then she exhaled slowly.\n\nI started to fuck Ashley Tisdale.\n\nI slowly wrapped my arms around her and held her close as I went in and out of her hot pussy. When we kissed it was like we were joined even closer than before. Her arms were tight around me too.\n\n\"Baby...uh-huh...uh-huh...oh yesssss...\" she cooed as we fucked.\n\nI fucked her harder now, I could feel all my energy going into this beauty. She started to cry out, not in words, but in hot gasps and quick moans. When I slowed for a second, she could actually speak.\n\n\"God, yeah! Fuck me! Fuck me, baby! Fuck me!\" she said quickly and passionately.\n\nI slowed down and let her catch her breath. I was the one gasping now. She quickly leaned up and kissed me.\n\n\"Come on, baby...fuck me...\" she said in a slightly breathless voice.\n\nI did her slowly now, making the feeling last. Ashley's eyes were closed slightly and there was a satisfied smile coming over her face the more I pushed into her.\n\n\"Uh-yeah...uh-yeah...oh baby...yes...\" she sighed as I did her slowly and lovingly.\n\n\"You feel...feel great...\"I said in my own breathless voice\n\n\"So do you, Jim...so good...so good.\"\n\nHer words made me go faster now.\n\n\"Oh god! Huh-yeah! Oh yeah! Oh god Jim....YESSSSSSSSS!!!!\" she cried out.\n\nI could feel my explosion coming from deep down.\n\n\"Gonna cum Ash! Gonna cum...!\" I said as I exploded into her pussy.\n\nWith a series of grunts and sighs we both climaxed.\n\nI fell into her loving arms and she held me, giving me a soft kiss on my cheek.\n\n\"Feels so good...so nice.\" She whispered in my ear.\n\nI rolled off Ashley and lay in her bed. She pulled the covers back up, then turned and rested her head on my chest like before.\n\n\"You're nice.\" She said with a smile\n\n\"So are you.\" I replied. \n\nShe reached down and tapped the bed sheet where my dick was underneath.\n\n\"So is this.\" She said with a big smile.\n\nWe lay in bed, arms intertwined.\n\nSoon, we were asleep.\n\n\"Chris, Jim, it's always been a dream of mine to get into the film business.\" Marty began \"and this is my first project, not much, but it's a start. And I want you two to be in on it.\"\n\nMarty showed us the script for a thriller called \"The Dark Hills\". \n\n\"I've tied this in to the photo work on Ashley's TV series, she'll be starring in it and we need to start shooting ASAP. The Sci-Fi channel wants to pick it up.\"\n\n\"Gee, this is kinda last minute, Marty.\" Chris said \"I'll have to juggle some things around.\"\n\n\"So? Do your juggling, I want my guys there.\" He replied.\n\n\"Where are we shooting?\" I asked Marty\n\n\"Hurricane, West Virginia.\" He replied.\n\n\"WEST VIRGINIA??\" Chris yelled\n\n\"Location is everything, Chris! You know that!\"\n\n\"Look out the window Marty! There's a zillion locations here you could shoot at!\"\n\n\"Location is everything, Chris!\" he repeated.\n\n\"You're crazy, Marty!\" Chris yelled \"You want us out there? That's insane!\"\n\n\"Look, this is a big deal for me. I've done a hell of a lot for you guys!\" he yelled back\n\n\"Would it help, if I went on my own?\" I said\n\nChris whirled around\n\n\"Stay out of this, Jim!\" he growled, it was rare when he used my real name.\n\n\"Marty...\" he began in a calm, but firm tone \"We've run all over the world for you, you gave us a lot of work...but this time I'm drawing the line.\"\n\nI didn't like where this was going. It was just like when he stormed out of the Rachael Ray studios the other day. The silence now was not good.\n\n\"Look, I agree with Marty.\" I calmly began \"I'll go by myself. You probably don't have a large budget, right?\"\n\n\"Yes, I was hoping maybe a percentage of the gross might be attractive to you.\" Marty said.\n\n\"OK, that's fine with me. What about you?\" I said to Chris.\n\nChris sat there for the longest time before he bit his lower lip and nodded his head.\n\n\"All right...\" he mumbled\n\n\"Good...now what's the transportation gonna be like?\" I said\n\nMarty explained how he had a private jet booked for himself and certain members of the cast and crew.\n\nChris was more silent than I ever remembered as we left.\n\n\"I'm getting tired of this business, Jim.\" He said as he got into his Porsche. \"Aren't you?\"\n\nI thought for a long time.\n\n\"Actually, no.\" I replied\n\nChris shook his head\n\n\"Hollywood Jim...I'll never figure you out.\" He said as he started up the Porsche and drove away.\n\nWith a lot of regret, I dialed Blake's cellphone number when I got home. I hoped I'd get her voicemail, nope, no luck.\n\n\"Hey, Miss Blake.\" I said hesitatingly\n\n\"Hey honey!\" she replied, I could sense that she was smiling that \"Blake smile\" she showed the world in photos.\n\n\"Uh, I got some bad news...\"\n\n\"Uh-oh, what?\"\n\n\"We got a photo gig and I have to leave in the morning.\"\n\n\"Awww...where are you going?\"\n\n\"West Virginia, of all places. Marty's producing a film and he wants us to do the photos.\"\n\n\"That's okay, the more work you have the better. I learned that from my Dad.\" She said.\n\nMy silence and her encouraging words only made me regret leaving even more.\n\n\"I'll make this up to you, Blake. I promise.\"\n\n\"Hey, make me a breakfast as good as the last one and we'll call it even.\"\n\nNow I was smiling as I remembered that morning at her San Francisco loft.\n\n\"Okay, I'll call you from the location too. How 'bout that?\"\n\n\"Deal, baby.\" She said firmly \"I'll talk to you soon.\"\n\n\"OK, bye.\" I said as I hung up. \"Hurricane, West Virginia, here I come...\" I muttered to myself.\n\nThe private jet Marty rented would take off at 4 AM so with sleepy eyes I rolled up to Burbank Airport as the sun was rising. Ashley was already on the plane wearing brightly colored sweats. She had her IPod on and was covering herself up in a fleece blanket and even had a teddy bear to use as a pillow. She looked like she could sleep the entire flight when she looked up and saw me coming on board. Her eyes lit up.\n\n\"Hey, sweetie.\" She said as she tapped the seat next to her \"I need a traveling companion.\"\n\n\"Gee, so do I.\" I said as I sat down and she gave me a quick kiss.\n\n\"I'm so sleepy...hope you don't mind.\"\n\n\"I feel the same way, this was all so last minute. My partner wanted to back out of this but I...\"",
        "I turned and Ashley's head was on my shoulder, she was asleep.\n\nStill a little sleepy, we landed at the regional airport outside Hurricane a few hours later. Marty had a van waiting to take us all to the hotel. He met with me later to discuss the film. \"The Dark Hills\" would be unlike any other project we'd done before and it seemed like Ashley's portion of the film would be done first as she had to be back to resume work on \"Hellcats\". The remainder would be done on a soundstage back in LA so the CGI effects could be added. Marty seemed to have his usual knack for getting the most bang for the buck, I learned this when we went to the location the next day.\n\nMost of the film's exteriors would be done on what looked like a decrepit ghost town in the hills outside of town. This place looked so creepy it's no surprise we'd be doing a scary film there. There were the remnants of a Mobil gas station, a shuttered grocery store and a bar. Ashley was far from the California glamour girl when she emerged from a rented camper that served as her dressing room, she looked dirty and poor for her character. The flashy sweats were replaced by worn gingham dresses and flat shoes. Marty kept a relatively small crew working and the director did a minimum of takes. In watching him though, I couldn't help but notice a resemblance.\n\n\"Marty, who's the director on this?\" I asked\n\n\"Oh, my brother Barry.\"\n\n\"Ah, right.\" That figures, I thought.\n\n\"My other brother Garry owns the property here.\" He said as he waved his arm.\n\n\"Barry and Garry?\"\n\n\"Sure, kinda catchy, huh? My sister co-wrote the script, too.\"\n\n\"What's her name?\" I asked, knowing what the answer might be.\n\n\"Mary.\"\n\n\"Right, got it.\" I said as I went off to get some extra gear.\n\nMarty's director really did work fast. After just 3 days, we were halfway done with Ashley's portion of the film. Looks like my time in Hurricane might be shorter than expected. But I had to admit I hadn't the foggiest notion what this film was about! It seemed like she did a lot of screaming at the camera. \n\nWell, at least she made a convincing scream queen, I'll say that.\n\nThe weather had been on our side and we had plenty of gray, gloomy days, perfect for filming. But when we finished for the day we were all stuck in our hotel rooms, with no room service to speak of. Like I said, Marty knew how to get the most from his money. Maybe keeping us half-starved was his way of making us work harder and more efficiently. Strangely, Ashley was nowhere to be found. I think she was staying at the upscale hotel down the road.\n\nBefore I knew it, her portion of the film was done and we could head back to sunny LA. I'll be curious what Chris' reaction to this will be, probably something along the lines of how I came all the way out here for nothing. \n\nAs we finished a scene, Marty pulled me aside.\n\n\"Interested in a bit of fun tonight?\"\n\n\"What kind of fun?\"\n\n\"The good kind.\" He said with smile.\n\n\"OK, that says a lot.\" I replied\n\n\"Trust me, you'll like it. I'll meet you at the hotel when we wrap.\" He said as he pulled out his cellphone and dialed a number.\n\nI wonder what he's got in mind.\n\nBarry decided to wrap for the day, he'd wanted to get one more scene in, but the Union guys on set said otherwise. \n\nIn other words, we were done for the day.\n\nAshley was spirited away to her trailer, and probably back to her cushy hotel spa for all we knew. I hadn't gotten to chat much with her, she probably wanted to put all her focus on the film and not the guy she'd been fooling around with back in LA. I can live with that.\n\nAn hour later a black 70's-era Cadillac limo pulled up outside my hotel and honked the horn.\n\n\"Let's go, Hollywood!\" Marty called.\n\nI got in and saw Marty and Barry.\n\n\"OK, where are we headed?\" I asked again.\n\n\"Well, it's a fun place outside of town, we know the proprietor quite well.\" Barry said as Marty chuckled.\n\n\"Uh-huh.\" I said \"Maybe I better just enjoy the ride?\"\n\n\"Good idea.\" Marty said \"Oh, by the way, this is our driver, Moose. He works there.\"\n\n\"Moose\" seemed to take up most of the front seat and grunted a hello.\n\n\"Moose played for the Mountaineers, right?\" Marty continued\n\n\"Uh-huh...\" he said in a deep rumble of a voice\n\n\"Second team All American, too.\" Said Barry\n\nAnother deep \"uh-huh\"\n\n\"And there was a stint in the CFL too, right?\" added Garry\n\nYet another deep \"uh-huh\"\n\nMoose seemed to be a fountain of conversation.\n\nThe Caddy smoothly traveled the road out of town and then onto a side road that went deeper and deeper into the hills. Now I knew where they got the inspiration for the movie. I could see moonlight through the thick trees.\n\n\"Marty, I hate to bother you with this, but where are we going?\" I asked again.\n\n\"I told you, it's a fun place...you worry too much Jim.\"\n\nWe finally pulled up to a thick iron gate with a callbox. Moose hit a button and the gates opened. The Caddy slowly drove up a dirt road until we finally came upon a brightly lit house that looked straight out of the Civil War. \n\n\"OK, boys...you're here.\" Moose said\n\n\"Alright!\" Barry said as he jumped out.\n\nI got out slowly and looked around. There were 2-3 other cars out front, very expensive ones too, it seemed. I turned and saw Moose standing behind me. He had to be 6' 6\" and about 300 pounds, how he fit in that Caddy I'll never know.\n\n\"Swanky place, huh, Hollywood?\" Marty said with his arm on my shoulder.\n\n\"Yes, sure is.\"\n\n\"Wait 'til you see the inside.\" Barry said as he led me up the steps.\n\nThe elegant door was opened by an equally elegant doorman.\n\n\"Good evening, Mr. O'Brien...good to see you again, it's been a long time.\"\n\n\"Hiya, Tommy. Good to see you too.\"\n\n\"Miss Mona is expecting you.\" He said.\n\nMiss Mona? OK, this is getting weird.\n\nThe inside of the house was definitely from another time. The walls had elegant wallpaper with velvet accents. Lace curtains decorated the windows. The lights looked like old time lanterns and there was a piano player off to the side of one room playing what seemed like old time boogie-woogie music. We passed what seemed like a well-stocked barroom complete with a poker table and jukebox.\n\nAnd wandering throughout this elegant home, were many girls. Blondes, brunettes, redheads, you name it. Tall, short, busty, lingerie-clad, you name it. They were at the bar chatting with people, or at the piano. Two were on a big leather couch chatting with each other.\n\nOh my, now I know why Marty was so elusive about where we were going.\n\nIn a parlor room, we came upon a somewhat older woman with thick blonde hair done up high who was sipping on what seemed like bourbon. Her eyes lit up when she saw us enter the parlor.\n\n\"Why, Marty O'Brien! How are you darlin'? Barry! I didn't know you were in town.\" She said as she kissed them on the cheek.\n\n\"Hi, Miss Mona...you're lookin' fine as usual.\" Barry said\n\n\"Oh, you two!\" then she turned to me \"And who is this fine young man?\" \n\n\"Ah, Mona...this here's a friend of ours from LA. Meet Mister Jimmy.\" Barry said\n\n\"Well, Mister Jimmy, what a pleasure to meet you.\" she said as she kissed me, she had a lavender-like smell about her and I could feel some huge tits press into me.\n\n\"But his friends call him 'Hollywood'.\" Marty said\n\n\"Hollywood Jim! Oh what a fine name!\" she said excitedly \"I'll make sure he gets the star treatment tonight. I'll just be a minute.\"\n\nMiss Mona left the room and I heard her call \"Ladies, we have guests!\"\n\n\"The star treatment? Guests? What the hell does that mean\" I thought.\n\nMy eyes were darting back and forth, this had to be some kind of elaborate gag!\n\n\"Marty, is this place what I think it is?\" I hissed to him.\n\n\"It's the finest sportin' house in the state if that's what you mean.\" He replied.\n\n\"Sportin' house, uh-huh. You mean bordello?\"\n\n\"Little louder, pal. The Sheriff didn't hear you.\" Barry said\n\n\"This is not what I had in mind, I mean...\" \n\nJust then Mona returned with several young ladies that looked like they walked out of Playboy magazine. \n\n\"Huh boy...\" I mumbled to myself. No turning back now.\n\nMiss Mona introduced each girl to us, I couldn't remember their names unfortunately. But they were all beauties, as one would expect. Some wore elegant lingerie or simple satin pajamas that generously showed off their endowments.\n\n\"Now, if you boys see someone else you like, don't be bashful. Have them join you.\" Miss Mona took Marty's arm and began to lead him to the bar area \"Marty, how's your Mama been lately?\" she said as they wandered off, leaving me with Barry, who was chatting up a nubile brunette and a busty blonde. Two other girls came over to me.\n\n\"Hi, I'm Ashley\" she said \"This is Vanessa. Your friend is with Blake and Serena.\"\n\nUh-uh! No way! Those are names I did NOT want to be reminded of at this moment! \n\n\"Uh, yes, thank you ladies, excuse me, I-I-I think I'll get myself a drink!\" I stammered as I made a beeline for the bar. \n\n\"I'll take another shot of courage, please.\" I quickly said to the bartender, who looked at me like I just arrived from Mars. Then I regained my composure, and realized I'd just quoted the Eagles song \"Tequila Sunrise\". It had been playing on the Cadillac's radio as we'd driven up here, wherever \"here\" was. \n\n\"Sorry, uh, a Jack and water, please\" I said\n\nHe nodded and turned to the well stocked bar.\n\nThis was an experience I had no idea how to process. What is the etiquette in a place like this? How do I know what to say? Oh man, the things I get myself into! As the bartender brought my drink I reached into my pocket.\n\n\"That's all taken care of, sir.\" He said\n\n\"Oh! Thanks.\" I said as I quickly took a long sip after placing a few dollars in what looked like a tip jar.\n\nSneaking out of here wasn't an option as I had no idea where we were. I guess I might as well keep an eye on Marty and Barry. One thing's for sure, this would certainly go into my diary of memorable experiences. Maybe I should see what the rest of this place is like? No, not a good idea, might get me into a more confusing situation. I didn't realize it, but I'd downed my drink faster than I thought.\n\n\"Uh, another Jack and water, please.\" I said to the bartender.\n\nAs I waited for my drink, I sensed someone come up and sit next to me.\n\n\"Hi, there\" she said \"I'm Shiann.\"\n\n\"Hi, I'm Jim.\" I said uneasily.\n\nShiann was dressed much differently than the other girls. Her short blonde hair was accompanied by a baby blue see-thru teddy combo. I suddenly realized that, save for a matching miniscule g-string, she was naked beneath the outfit. She had nice large tits that looked incredibly sexy against the material.\n\n\"You like the outfit?\" she asked\n\n\"Uh, yes...I've never seen anything like that.\"\n\n\"I like it, I feel sexy in it.\"\n\n\"I can imagine you do.\"\n\n\"This your first time?\" she asked\n\n\"Uh, yes. I mean, I've done, I mean...I've had, no that's not right.\" I was in ultra-stammer mode now, great timing. \n\nShiann placed her hand on mine.\n\n\"I meant...is this your first time here?\" she said with a calming smile.\n\nThis time I just nodded.\n\n\"OK, got it.\" She said \"I know how you're feeling. I've been here awhile.\"\n\n\"Really, uh, how long?\"\n\n\"Hmmm, couple of years. I like it. I've never been busted, Miss Mona likes me, the other girls like me, the customers too.\"\n\n\"This is certainly a unique place, I'll say that.\"\n\n\"I came here by accident. I came here when I was younger just to wash the windows for a few bucks.\"\n\n\"That's how you started here?\"\n\n\"Well, there's more to it than that.\" She giggled.\n\n\"Ah, well, um continue.\" I replied. Perhaps the whiskey had eased my nerves, she seemed a little easier to converse with than the other girls, as nice as they were.\n\n\"Well, this guy came down here, saw me and asked Miss Mona if I was working too. He was like a regular customer. She said I was just cleaning and he wanted to have me, said he'd pay like $300 to have me.\" She started \"and if he couldn't he'd take his business elsewhere.\"\n\n\"There's other places like this?\"\n\n\"Not anymore, they all got busted, Miss Mona never has.\"\n\nI was intrigued by her story, and getting turned on by her body, too.\n\n\"So, the guy wants me. And I'd never done a guy for money. But, um, I really liked sex.\" She said leaning in close, like it was a big secret.\n\n\"Uh-huh.\"\n\n\"Kinda goes back a-ways with me, must be these things here.\" She said as she cupped her tits. \"I was already like a 34C in high school, can you believe it?\"\n\n\"Uh, I guess so.\" I replied, oh brother what a dumb thing to say.\n\n\"So, Miss Mona convinced me to go with him because she didn't want to lose him as a customer.\"\n\n\"Man, this is some story.\"\n\n\"It's all true, baby.\" She said as she sat closer to me.\n\n\"Before I knew it, I was making a lot of money.\" She paused to sip her drink and then leaned in closer \"And my Dad thought I was just washing windows here, I gave him a little bit of what I made and kept the rest. He never knew a thing! My cousin was already working here and she said Mona treated everyone really nice.\"\n\n\"It seems like it, I met her a minute ago. She seems like a nice lady.\"\n\n\"Oh, yeah...she knows everything that goes on here. She's kinda related to me.\"\n\n\"So what happened with this guy? That is, if you don't mind my asking.\"\n\n\"No, I love to tell the story. Miss Mona took me to buy some nice lingerie, man I felt so pretty with it on.\"\n\nShiann was very close to me now and whispered \"She even trimmed my pussy.\" \n\nI felt her hand on my knee. \n\n\"Maybe you'd like to hear the rest where we can be more comfortable?\" she said\n\n\"Um, I don't know. Uh, I have to confess...I-I-I've never been to a place like this before, like I said. I don't know what the guidebook says and all.\"\n\n\"Oh, don't worry about that.\" She said\n\n\"Huh?\"\n\n\"No, don't worry about it.\" She said as she leaned in close and whispered in my ear \"...it's all taken care of.\"\n\n\"Oh! Uh, right.\" I said, still confused.\n\nShiann sat back a little and smiled.\n\n\"Come with me.\" She said with a big smile as she took my hand.\n\nI've had some wild experiences so far in my time in La-la-land but this was the strangest. I've never paid for something like this, and always thought I never would. If it came to this, I'd rather walk away. But now I'm being told (twice now) that \"everything is taken care of\". A million thoughts were rushing through my head now. I'm starting to wonder what \"everything is taken care of\" meant.\n\nShiann led me up a flight of stairs decorated in the same red velvet-accented wallpaper but with framed paintings on its walls. I actually recognized some of them as Monet` copies. Down a short hallway where I could hear bits of laughter in other rooms, she led me into a smaller, softly lit, room with a brass canopy bed against the wall. She softly closed the door and looked at me with a broad smile.\n\n\"This is your room?\" I asked standing by the bed and looking around. \"Looks almost like a little apartment.\"\n\n\"Yes, it's very quiet, isn't it? I think it makes things a little easier for someone like you.\" She said as she slowly walked toward me and held me around my waist.\n\n\"I guess you're, uh, right.\"\n\nShiann softly kissed me on the cheek.\n\n\"So, would you like to take your clothes off?\" she said in a slow sexy voice. \n\n\"I-I guess that's the idea, huh?\" I replied, still unsure what I was supposed to do here.\n\n\"You can hang them up there\" she pointed to an antique wooden clothes rack. \"And if you'd like, you can take a quick shower too.\" she offered as she pointed to a bathroom that looked to have a small tub/shower combo. I was looking at both wondering what my next move should be. Shiann softly touched my chin and turned my head so I was looking at her.\n\n\"Just relax, baby.\" She said softly as she kissed me again \"gonna make you feel real good. We can talk some more.\" She said slowly.\n\nShiann began to softly caress my chest and slowly unbutton my shirt. Her hands drifted down to my jeans and she felt around the crotch.\n\n\"Mmmm, I think this'll be nice.\" She said as she unzipped them.\n\nHer hands now slid inside and I felt them on my underwear.\n\n\"Oh, yes! This will be nice!\"\n\nShe slipped my jeans down 'til they were around my ankles and I stepped out of them.\n\n\"Oh, you look really fine, Jim. You're gonna be just fine, babe.\" She said with a nod as she looked me over. \"Want me to get naked now?\"\n\n\"Uh, yes, I guess that's how it works.\" I said hesitantly.\n\n\"It sure does, honey. I like being naked too.\"\n\nShiann slid the straps of her teddy down off her shoulders and arms. Then her breasts were exposed. They were large alright.\n\n\"Wow, you definitely have, um...\"\n\n\"Big boobs? You betcha honey!\" she said with a smile \"They got bigger, I'm a 36D now. I guess you like big boobs, huh?\" she said as she caressed them for me. \"Go ahead... you can touch 'em. I love it when guys do that.\"\n\nI reached out and felt her tits. Man, they did feel nice as they filled my hands with their softness. Her nipples grew hard in my fingers.\n\n\"Mmmm...you've got nice hands, baby.\" She said in a sexy tone. \"Get those undies off, baby...I wanna do some fucking.\" She said in a comically pleading tone.\n\nI was still a little hesitant.\n\nShiann smiled, then kissed me softly.\n\n\"I'll tell you more storrreees.\" She said teasingly in a singsong voice.\n\n\"Well, now that you put it that way.\" I said with a smirk.\n\nShiann still had her g-string on and was about to take it off.\n\n\"No, wait. I-I'd like to do something else.\" I said\n\n\"Oh, you like to see me in my little panties, huh?\"\n\n\"Uh, something like that.\" I said, still feeling bashful\n\nI finally slid my underwear down and was naked in front of her.\n\nShe smiled as she looked at my dick, then at me.\n\n\"You look really nice.\" She said as she held me close, then whispered \"Very...very...nice.\"\n\nI reached down to feel her panties, they weren't sheer like her top, but I wanted to feel them anyway. Her panties felt warm to my touch.\n\n\"Oh, I see now.\" She said with a giggle \"You like that, huh?\"\n\nI nodded as I began to rub them, they grew warmer.\n\n\"You're making me feel really good, you know. Shall I return the favor?\"\n\n\"I guess it's only fair.\"\n\nShiann held my dick in her hands and we were now feeling one another. I could hear her breathing become more rapid.\n\n\"Oh yes...Jimmy that feels nice...\" she said slowly \"am I making you feel good too?\"\n\nMy eyes were closed slightly but I heard myself hum something resembling approval as she began to stroke my dick, making it harder.\n\n\"You like having your dick stroked, baby?\" she said\n\nI just nodded.\n\n\"All the boys I know loving having this done too...they love to jerk off...they love a pretty girl to jerk them off.\"\n\nHer hands had managed to get me very hard, and hearing her voice, combined with her tits was like a fantasy come to life.\n\nWhere was I again?\n\n\"Like what I'm doing, Jim?\"\n\nAgain, I could only nod my response.\n\n\"I like doing it too, you have a very nice dick...can't wait to see what it can really do.\"\n\nAs she said that, she knelt down and I felt a rush of warmth and wetness as my dick slid into her mouth. I felt her tongue slide all over my dick, around the tip I shuddered with the touch of her tongue.\n\nShiann looked up at me.\n\n\"How's that feel, baby?\" she asked with a sly smile.\n\n\"Great.\" I finally said.\n\n\"I knew you'd like it.\" She said with a giggle. \"This is what I did with my first guy here, he liked it a lot.\"\n\nAgain, my dick disappeared into her mouth and it was enveloped in her lips and tongue. I loved how she made me feel. Seeing her take my dick and slowly lick its entire length from balls to tip, all with a sexy smile on her face, was unreal. If she kept it up I might explode right there. It took a lot to get her off my dick, but I wanted to hear more of her stories.",
        "\"Hey, I don't want this to end too fast, you know.\"\n\nShiann smiled.\n\n\"Good idea, baby.\" She said as she stood up \"Besides, there's more for you to see.\"\n\nShe teasingly pulled her g-string down slightly giving me a flash of her pussy. It was just as blonde as her hair, but trimmed so that just the top was seen.\n\n\"Oh, very nice!\" I said\n\nShe giggled at my expression.\n\n\"Take them off me.\" She now said\n\nI reached for the sides and they easily slid down her shapely legs, leaving her as naked as me.\n\n\"Come on, let's sit on the bed.\" She said\n\nI joined her on the brass bed and she sat close to me. Her hand again went for my dick and continued to softly touch it.\n\n\"So tell me more about this guy who wanted you.\" I said as I caressed her tits.\n\n\"Well, he came back and I was all nice and pretty for him. I was super nervous too.\" She said with a laugh as she continued to softly caress my dick.\n\n\"I can imagine.\"\n\n\"We went into a room, kinda like this one. I was just as nervous as you are now. He had me strip then hold my arms up and turn around so he could see me...all nice an' pretty. He liked that.\"\n\n\"I can see why.\" I said with a small smile.\n\nShiann giggled.\n\n\"Aw, you're a real sweetie, you know that?\" she said\n\n\"Thanks. So what happened next?\"\n\n\"He played with my nipples...\" she began\n\n\"Like this?\" I began to touch and play with them.\n\n\"Oh yes, just like that.\" She said slowly. \n\nShe began to sway a little back and forth. \n\n\"You're making me feel really good, baby. He also rubbed my pussy.\"\n\nAs if on cue, I reached down and touched her pussy, it was soft and wet, and nice!\n\n\"I also rubbed his cock too.\"\n\nI moved my legs so she could do the same to me. I was getting super hard as she did this.\n\n\"Your dick feels so nice, Jim...how's my pussy?\" she said with an excited look on her face.\n\n\"Hot.\" I said \"So, did you suck him too?\"\n\nShiann leaned in very close. \n\n\"Of course, you know how good that made you feel.\"\n\nWe both giggled.\n\n\"And from then on, I liked what I was doing. Even my first time was super hot.\"\n\n\"Tell me about it...\" I said, her hand felt so good as it massaged my dick\n\n\"It was at a party...my cousin was fooling around with her boyfriend and I was nearby. It was hot to watch them, and she let her boyfriend lick my pussy, and I really liked it.\" She said as she leaned back and opened her legs and slid a finger across her pussy \"I liked it a lot.\"\n\nI crouched down and my tongue was quickly on her love nest, it was very wet and tasted very sweet. I licked all around her pussy and when it went inside, she let out a slow, sexy moan followed by an \"ooooooh\" that made her seem so innocent. I let my tongue do all the work on her now, her pussy was super wet. Then I kissed my way up her stomach until I was at those beautiful twin peaks of hers. I eagerly sucked her tits as she rubbed my head and cooed her pleasure\n\n\"Oh yesss...kiss mah boobs Jimmy...mmmmm can't wait for your dick.\"\n\n\"What else happened at that party?\"\n\n\"Mmmm...her boyfriend licked me so good...she liked watching me with him and said 'wait 'til he puts his dick in you, you'll love it.' So I let him...\"\n\nI took that as my cue\n\nI sat up and Shiann's legs were open wide and I easily slid into her pussy. I never realized how hot it looked seeing the head of my dick slid inside her and hearing Shiann's reaction.\n\n\"Oh yesssssss...that's sooo good baby...\" she said as she felt me inside her.\n\nShiann felt so hot as we fucked. I felt so strange with her, she wasn't a Hollywood starlet, but well, a professional for one of a better word. But she apparently had no qualms about this, she loved what she did and apparently what I was doing.\n\nI had no complaints either!\n\nShiann smiled at me as we fucked, her smile urged me on.\n\n\"Oh yeah, Jim...mmmmmmyeahhh.\"\n\n\"Am I...doing...okay?\"\n\n\"Yeah, baby you sure are!\" she said as she caressed her tits.\n\nI slowed down and lay atop her kissing her lips and her tits.\n\n\"So what else happened?\" I asked\n\nShe smiled, knowing how much I was turned hearing her stories\n\n\"Mmmmm...there was this father who came in with his son, wanted to give him his first fuck for his birthday...so he got me...it was nice.\"\n\n\"Did he do you good?\"\n\n\"The son came in like 30 seconds but the father...oh, he was somethin'.\"\n\n\"How so?\"\n\n\"He knew how to fuck my ass good...said his wife wouldn't let him...so he got mine...let's see if you can too.\"\n\nI pulled out of her and she rolled over raising her cute ass up for me and wiggling it a little.\n\nShiann looked over her shoulder at me.\n\n\"Come on, baby...show me what you got.\" She said with a giggle.\n\nI moved up behind her and caressed her very soft ass.\n\n\"Nice ass.\"\n\n\"I learned anal here too, fuck me now and I'll tell you how I learned it.\"\n\nMy dick slid into her pussy and she let out a satisfied \"Ahhhhhh...\" as I went in.\n\n\"Oh bayyyyyyy-be...that's nice! God, you've got a great cock.\"\n\nShe had a great ass too, I was giving her a good one that's for sure. I held her hips close to me and her head was resting on the pillows, sounds of pleasure coming from her, little moans that sounded so hot!\n\nShe sat up so I could hold her tits, caress the nipples, and kiss her neck. All the while, my dick was pushing into her.\n\n\"Mmmm...baby...want you in my ass now...wanna show you what a good whore does.\"\n\nI pulled out and she turned around, still on her knees and we kissed. She was caressing my dick with her soft hands.\n\n\"I learned that from Miss Mona and another girl.\"\n\n\"How'd they show you?\"\n\n\"Well...they gave me something called a butt plug...and they put it in my ass, told me to keep it in while I slept.\"\n\n\"Didn't that hurt?\"\n\n\"Not much, I kinda knew what it would do.\"\n\n\"Then what?\" I said with another kiss and caress of her tits.\n\n\"They put a bigger one in me, then an even bigger one.\"\n\n\"Wow.\"\n\n\"Yeah...wow. Anyway, a day later, one of the girls came into my room and told me it was time for me to get fucked in the ass...so she brought in her boyfriend...he had a huge cock.\"\n\n\"Uh-huh\" \n\nI was getting so turned on by her storytelling. Between her voice, tits, the way she held my dick, and the stories, I was super hard. \n\nShiann whispered into my ear\n\n\"...and he fucked me with it...just like you will.\"\n\nShe went over to the nightstand and in a drawer she had a small tube of cr\u00e8me. She dabbed some on her hand and lovingly smeared it on my dick as she smiled at me.\n\n\"You ever done a girl in the ass?\"\n\n\"Y-yes...it was, um, interesting.\"\n\nIf she only knew whose ass I'd done!\n\n\"Oh, just interesting?\"\n\nShe had a beautiful scent about her too, such an innocent and pretty smell too.\n\nShe turned and bent over, pulling her ass cheeks apart. A beautiful pink asshole presented itself to me.\n\n\"Go ahead baby...\" she said with a smile.\n\nI took my now slick cock and placed the head at her hole, then pushed into her. Her initial groan became a soft \"Mmmmmm....\"\n\n\"Wow, you feel...good.\" I said\n\n\"So do you...fuck me baby...fuck my ass, honey...fuck my ass.\"\n\nWhatever she'd put on my dick made it slick enough that I went in and out of her with ease. The slurping sound we made together was sexy too along with her little moans.\n\n\"Oh yeah baby...fuck my ass...YES! OH GOD YES!\" she cried \"Oh fuck yeah! You got it baby!\"\n\nShe was completely bent forward on the bed, screaming into her pillow. When I slowed down, she sat up like before.\n\n\"Rub my pussy Jim...really turns me on...that's what...what we did first time.\"\n\n\"He rubbed you?\"\n\n\"No...girl...girlfriend did...super...super hot. Just like what you're doing.\"\n\nMy hand reached around to her pussy and she was still super wet as I caressed it and slid a finger partway in.\n\n\"Ohhhhhhhyyyeaahhhh!\" she cried out \"That's it!! Oh my fuckin' godddd!\"\n\nShe had her head cocked back and I kissed her neck and cheek, her mouth was open and eyes closed.\n\nShe was in ecstasy from what I could see.\n\nWe were joined so closely now, I didn't need to be fucking her like a demon, my slow steady method was getting us off.\n\nLittle cries were coming from her, then a short breath and louder cry.\n\n\"Ohhhhhh...GODYEEEEAHHHHH!\" and a series of \"HUH-YEAH! HUH-YEAH!! OH YOU'RE MAKIN'ME CUM BABY!!!\"\n\nI slowed down and pulled out of her to let her catch her breath.\n\n\"Whooo, boy! You sure know how to fuck baby!\" she said looking over her shoulder at me before lying down on the bed.\n\n\"You do, too...Um, I'd kinda like to do it the way we were before.\"\n\n\"I'll do whatever you want, honey.\" She said as she sat up and faced me. \"Like me to jerk you off?\"\n\n\"Uh, yes, OK.\"\n\n\"Nice.\" She said as she sat facing me \"Why don't I clean you up a little?\"\n\n\"OK.\"\n\n\"Come with me, babe.\"\n\nWe got off her bed and she led me into her bathroom. It was bright white, probably could be called clinical in its look and furnishings. But I saw she had a variety of liquid soaps neatly lined up inside the tub and large white towels were neatly stacked too. \n\nShiann took a washcloth and dabbed a little soap on it, quickly getting a good lather as she ran it under the hot water in the sink, then turning to me.\n\n\"Let me clean you up, honey.\" She said\n\nShe ran the cloth over my waist and then over my dick, still excited but not rock hard like before. The warm water felt good, combined with her soft touch as she slowly ran it over my dick, then underneath to do my balls. \n\n\"That feel nice?\" she said softly with a smile \"You have such a beautiful dick, and you know how to use it too.\"\n\nI could feel myself getting hard again as she spoke.\n\n\"I felt soooo good...we had fun...didn't we?\"\n\n\"Oh yes...yes we did.\"\n\n\"You made me cum a few times, not many guys do that, you know.\"\n\n\"I did?\"\n\n\"Uh-huh...and you know what?\"\n\n\"What?\"\n\nShe leaned in and whispered in my ear\n\n\"I...loved...it...\" followed by a childish giggle.\n\nI chuckled too as her hands continued to massage my dick.\n\n\"That feels really good.\" I said\n\nI didn't know weather to just let go or try and make the feeling she gave me last.\n\nI reached over and tried to touch her pussy again.\n\n\"Ohhhh...yes, honey...touch me there...can you tell...I'm getting excited too.\"\n\nShe was, her pussy was wet again. And her smile told me she loved it.\n\n\"Yes, baby...rub me...rub my pussy...do it good...I'm doing you good too.\"\n\nShe was. \n\nI felt so good as the warmth and softness of her hands made me harder and harder.\n\nI could hold out no more.\n\n\"Shiann....wanna cum...wanna cum...cum on your tits.\"\n\n\"Yes, baby YES!\"\n\nShe quickly crouched down and pushed her tits together so they were right under my dick as she jerked it.\n\n\"Cum for me Jim! Cum for me! Come on! Cum on my big boobs!\"\n\nI unloaded with a gut-level groan onto her tits as she excitedly cheered.\n\n\"YEAH! Oh, WOW BABY! ALL OVER ME!\"\n\nShe jerked me dry, I looked down and saw her dab some on her fingers and then suck them dry in her hot mouth.\n\n\"So beautiful...wow, Jim...you did, it baby!\"\n\nShe stood and we kissed, I could feel my sticky cum on her naked tits.\n\n\"That...was somethin!\" she said with a laugh. \"Your turn to clean me up, hon.\"\n\nI took the same washcloth and gently cleaned my cum off her tits. She smiled as she was cleaned by my soft and warm hands.\n\nOnce we were done, we kissed again.\n\nShe helped me dress. Then slid open a closet door revealing a closet that had different outfits. Among the sheer teddies and nightgowns, were costumes of some kind, among them a plaid schoolgirl skirt and a nurse uniform.\n\n\"What are those?\" I asked\n\n\"Oh! Some of my regulars like me dress up. It's kinda fun. Now, which outfit would you like me to wear?\" she said as she showed me an array of sheer teddies like what she had on when we met. They were in shades of green, black and red with matching panties.\n\n\"Uh, the green one looks good.\"\n\n\"You got good eyes, Jim. I like that one too.\"\n\nShe put on the green one I chose.\n\n\"Like it?\" she asked as she twirled around a little.\n\n\"Yes, very nice!\"\n\n\"Thanks, baby.\" She said with a quick kiss.\n\nI reached into my pocket, but Shiann stopped me.\n\n\"No, no, that's all taken care of.\" She said\n\n\"Yes, I was just giving you...\" I said \"...my card.\"\n\nShe smiled as she looked at it and read my name.\n\n\"If you ever get out to L.A., give me a call. Um, would be nice to see you again.\"\n\n\"I'll do that.\"\n\nShe took my arm and we walked out of her room. We passed a set of double doors to what seemed like a larger room.\n\n\"That's Miss Mona's room, she entertains the high class customers.\" Shiann said as we walked past it. I had to stop and take a step backwards. One door was slightly opened. I saw Marty lying in bed smoking a large cigar, he gave me a wave. Then we saw a clearly naked Miss Mona putting on a silver satin robe and loosely tying it. She had enormous breasts, a generously coiffed pussy and her blonde hair was down and hung loosely atop her shoulders. She smiled as she came to the doorway.\n\n\"Well, Mister Jimmy. Have you been enjoying yourself?\" she said in her friendly tone as she leaned against the doorframe.\n\n\"Oh, uh, yes, Ma'am. I sure have.\"\n\n\"Like to join me in my room?\" she offered.\n\n\"Oh, thank you, that's very tempting, but Miss Shiann here took good care of me.\" I said as I pulled her close to me, making her smile.\n\n\"That's good! Shiann always keeps everyone happy.\"\n\n\"Mona! Come on in here, girl!\" I heard Marty call from the bed.\n\n\"Looks like your friend's ready for another round! You enjoy yourself, Jimmy, any friend of Marty's is always a friend of mine.\" Mona said as she went back to the bed and I saw her robe drop, exposing a pretty ass.\n\nShiann giggled as we watched her get back into bed with Marty.\n\n\"I think we should leave them to their fun.\" I said\n\n\"I think so, too!\" Shiann said with a giggle as I closed the double doors.\n\nWe were both giggling at what we'd seen. I think Shiann thought it was funny how flustered I got talking to Miss Mona.\n\n\"It's a good thing you didn't take her up on her offer.\" She said\n\n\"Why?\n\n\"Because I would've wanted to join you too, I'd do her in a minute she's so fucking hot.\"\n\nWhile I was certainly glad things went well for me, I wanted to get out of there. It had to be one the most surreal moments in my time out west. And this moment didn't even happen in California, but in West Virginia. \n\nShiann and I went back downstairs and found Barry at the bar chatting with another girl.\n\n\"Hey! Hollywood! Had enough for one night?\"\n\n\"Oh yeah, I've had enough.\" I said as I grabbed another Jack and water and quickly downed it.\n\n\"OK, let's hit the road.\"\n\n\"What about Marty?\"\n\n\"Ha! Are you kidding? He's just getting revved up, he'll be here all night. We've got a film to work on, remember?\"\n\n\"Yes, how could I forget?\" I said as we headed towards the front door.\n\nThen remembered something important I should do.\n\nI went back to where Shiann was at the bar.\n\n\"Thank you for a wonderful evening.\" I said before I kissed her.\n\n\"You take care of yourself, darlin'.\" She said with a sweet smile.\n\nYeah, she probably said that to every guy there, but some people are just suckers for things like that, people like me.\n\nBarry and I both felt a little unsteady as we walked out to the Caddy. All the booze and sex had caught up with us.\n\n\"Hey, mind if I ask you something?\" \n\n\"Shoot.\" Barry replied\n\n\"Uh, I kept hearing that everything was taken care of in there. What did that mean?\"\n\n\"Oh, that! Well, there's a little thing in Hollywood called 'location expenses'.\"\n\n\"Location expenses, uh-huh. And that means...?\"\n\n\"It means that the studio will just see this as an expense incurred on location. We don't have to be specific about it.\"\n\n\"On location at whatever this place is called?\" I said as we drove away.\n\n\"Exactly, my friend, exactly. That's how it works in Tinseltown, you know, creative bookkeeping and all.\"\n\n\"And location is everything?\" I said repeating his brother's film philosophy\n\n\"Bingo. You're starting to sound like a certain producer I know.\"\n\nI rolled my eyes at the thought of that.\n\n\"Hell, I'll betcha half of Hollywood was built with places like this\" He casually replied as he stretched out in the big seats of the Caddy\n\nAs Moose drove us back to town, Barry was asleep. I watched the moonlight as it flashed through the trees and the neon signs as they appeared and disappeared on the roads. It was calming after all we saw tonight.\n\nBut I thought about who was back in Los Angeles.\n\nI reached for my cellphone and dialed Blake's number. This time I got her voicemail.\n\n\"Hey, it's me. Been a long day and night here, and I'm really beat. And...I was just thinking about you. I think I might be done here in the next day or so. I'll call you as soon as I know for sure, take care darlin'.\" \n\nWe were back on the set that morning, Ashley had to shoot several more scenes before she headed back to Los Angeles, more screaming and running from her. This time the weather wasn't cooperating and the sun was out, not what Barry had wanted. While I waited around for whatever the game plan was, I felt my cellphone buzz with the alert a text message was received.\n\n\"Miss n u\" it said with a smiley face done in text characters.\n\nIt was signed with a capital \"B\" and another heart.\n\nI wonder if Blake used her own phone or \"borrowed\" someone else's like before. \n\nI smiled.\n\n\"Hey, whatcha got babe?\" Ashley said as she came up to me and embraced me from behind.\n\nI turned around and was shocked to see her face and shirt bloodied.\n\n\"Jesus! What happened to you?\" I said.\n\n\"Oh, come on! It's called movie makeup.\" She said with a laugh, and then added \"You should see the other guy.\" \n\n\"Right, geez it's just weird to see you like this.\"\n\n\"Hey, price of fame, pal. What's on your phone?\"\n\n\"Oh, text message from headquarters.\" I said in my best James Bond tone.\n\n\"For your eyes only, huh?\"\n\n\"Exactly, Miss Moneypenny...Secret plans are being made back home.\"\n\n\"So secret I can't know about them?\"\n\n\"Yes.\"\n\n\"Headquarters just contacted me too, said we should wait in my trailer and await further instructions.\" She said with that sly smile and wink.\n\n\"What's the password?\" I replied\n\nAshley thought for a minute then leaned into my ear.\n\nShe moaned slowly.\n\n\"Uh, yeah, that's the password alright.\" I said\n\nAshley giggled and we walked towards the camper that served as her dressing room, hoping nobody saw us.\n\nAs we got inside he camper, she immediately hugged me.\n\n\"Missed this the whole time we've been here.\" She said as she covered me with kisses.\n\n\"That's because you got...the cushy hotel room and the rest of us got...the Motel 6.\"\n\nAshley started to quickly unbutton her flannel shirt as we kissed and I could now see her black bra underneath. My hands quickly went for her tits and she immediately moaned as I touched her, the silky material felt so nice. She was unsnapping my jeans and trying to pull them down as we kissed.\n\nJust then there was a knock at the camper's door.\n\n\"Ashley, they're ready for you now.\" One of the crew said from outside.\n\n\"Oh! Uh, okay...be right there!\" she said as she tried to compose herself, running her fingers through her hair. \n\nWe both looked at each other.\n\n\"Well, duty calls.\" She said with a shrug.\n\n\"Right, like you said; the price of fame.\" I replied.\n\nWork continued on the film, I shot photos where I could. Marty showed up later that day, looking completely worn out. Secretly, I was laughing to myself. I didn't bring up our trip to Mona's, though it sure would've been funny if I said the things going through my mind. It was a one time trip. If Shiann came out west, that would've been another story.\n\nLike Ashley said, price of fame.\n\nAt the end of the week, Barry proudly announced that we were done with principal photography and we'd be back in LA for post-production. I was relieved, already I could feel the chill of the season setting in and I just wanted to get back home. Ashley, on the other hand, left early on a commercial flight as she had to be back at work on \"Hellcats\".",
        "When I got home, Chris said exactly what I thought he'd say when told how long the shoot had been. \n\n\"I still think it was a lousy idea going all the way out there.\" He said.\n\n\"Yeah, well it was creepy as hell out there, I'll tell you that.\"\n\n(Well, except for the evening at Miss Mona's)\n\n\"Tell you what,\" he started \"since you had to do the field work, I'll take care of the post production work.\"\n\n\"You?\" I was shocked \"I can't remember the last time you picked up a camera.\"\n\n\"Ha-Ha, I started this business. I can do photos, too, you know.\"\n\nJust as I was about to use a snappy comeback line, the phone rang. It was Amy Adamson. Chris put it on speakerphone\n\n\"Hey, how's my favorite shutterbugs?\" she said in her bouncy tone \"Which one of you maniacs wants to shoot location photos for Hellcats?\"\n\n\"I'll take it!\" I yelled before Chris could open his mouth \"...my partner insisted on spending the next few days in a CGI studio with Marty's brother.\"\n\nChris looked at me with an \"if looks could kill expression\" on his face while I had a wiseguy smile on my face.\n\n\"Terrific! See you at UCLA tomorrow afternoon.\"\n\n\"See you then!\" I said as I hung up the phone\n\n\"One of these days, Hollywood...\" Chris said in his best Ralph Kramden voice.\n\n\"...POW! Right in the kisser!\" \n\n\"Obviously you didn't watch the Honeymooners as much as I did, or else you'd do that line with a little more gusto.\" I replied with a smile as I went to gather my gear\n\nThe newest batch of photos for Ashley's TV series would be shot on a soccer field at UCLA and were meant to depict action during a game. Ashley and her cast mates were in full royal blue cheerleader regalia as they filmed several sequences for the show. Several thousand fans filled the stadium too as extras. When they took a break for camera setups, the cast dispersed. I saw Aly Michalka walk over to me, her blonde hair looked great with its gentle curls. And she definitely had a cheerleaders' body with all the right curves in all the right places.\n\n\"Hey, you were around last time.\" She said as she recognized me.\n\n\"Oh, um, yes...I'm Jim.\" I said as we shook hands\n\n\"I'm Aly.\" She said with a smile \"I saw you talking to Ashley before.\"\n\n\"Right, I just did the photos for her film.\"\n\n\"Ah, yeah. You think she'll be the next scream queen?\"\n\n\"You never know.\" I said with a shrug.\n\n\"Hey Aly! You tryin' to steal my guy?\" Ashley said as she bounded over.\n\n\"No way! I got enough troubles with the one I'm with now!\" she laughed\n\nAshley gave me a quick kiss on the cheek.\n\n\"So, what'd you think of this?\" she asked \"this is so cool being here.\"\n\n\"You bet.\"\n\n\"It'll look even better when it's finished.\" Aly added \"So, where'd you two meet?\"\n\nAshley was standing close to me with her intertwined with mine.\n\n\"Oh, at the Eagle, Vanessa invited me.\" Ashley said\n\n\"Oh, yeah, that's such a cool place. I've been meaning to check it out. Hey, good to meet you Jim.\" She said as she went off to her trailer.\n\n\"So, are you done for the day or is there more to film?\"\n\n\"Um, good question.\" She said as she looked around for any of the production people. \"Let's go find out.\"\n\nWe soon found one of the producers, busy on his cellphone.\n\n\"Charlie? Charlie?\" she asked repeatedly \"CHARLIE!!!\" she now yelled.\n\nHe suddenly realized who was talking to him.\n\n\"Are we done for the day?\"\n\n\"Uh, go ask Bobby.\" He replied, barely noticing her.\n\nShe heaved a sigh of frustration as we now had to find this mysterious \"Bobby\".\n\n\"Oh, there she is!\" she said as she spotted her across the field.\n\n\"Hey, what's next on the schedule?\" she asked.\n\n\"Well, for you...I guess dinner.\" She said looking at her watch.\n\n\"Meaning...?\" \n\n\"Meaning, see you tomorrow.\"\n\n\"Cool!\" she replied excitedly \"Let me get changed and we can take off.\"\n\n\"What do you mean, we?\" I was confused\n\nAshley's smile said it all.\n\n\"I guess someone needs a ride home, huh?\"\n\n\"Bright boy!\" she said with a little punch on the shoulder \"Come on.\"\n\nAshley led me to her trailer, but not before looking around to see if anyone saw me going inside with her.\n\n\"Never hurts to check around, you know.\" She said once inside.\n\nHer trailer was different from the one she had on the movie set. It had a spacious couch and chairs and a large screen TV. \n\nAshley went into the kitchen area.\n\n\"Catch!\" she said as she tossed me a bottle of vitamin water.\n\nI caught it just before it hit the TV.\n\n\"Good catch, Ace! Gimme a minute and we can take off.\" She said as she went into the back and returned with an Addidas gym bag. \n\n\"So...whatcha think?\" she said with her trademark smile as she put her hand on her hips and struck the same pose in her Hellcats outfit that I'd seen it in TV promos.\n\n\"I like it.\" I said with a smile and nod. \n\nShe looked hot!\n\n\"You do, huh?\" she said with that sexy smile only she had.\n\n\"Ohhh...yes.\" I said with a smile of my own.\n\n\"Good!\" she giggled \n\nWe kissed.\n\nHer toned body felt great as I held her.\n\nAshley released herself then began to strip out of her Hellcats outfit. Underneath she had on a grey sports bra with matching grey thong panties.\n\n\"Nice pom-poms.\" I said as I saw her breasts\n\n\"Oh, very funny!\" she replied with a touch of sarcasm \"How long have you been waiting to use THAT line?\" she said as she rummaged through the gym bag for sweats.\n\n\"All my life.\" \n\nShe looked so hot in just her undies, it seemed a shame for her to cover them with loose sweats. Even if they were likely designer sweats.\n\n\"OK, let's roll, baby.\" She said as she finished putting her hair in a ponytail.\n\nAs we exited the trailer, she again looked around.\n\n\"Is someone after you?\" I asked half-jokingly\n\n\"Yeah, TMZ, who else?\" she replied, referring to the celebrity gossip site as we walked to my car.\n\nOnce we were safely on our way, she lightened up again.\n\n\"Home, James.\" She said in a jaunty tone.\n\n\"Splendid idea, Miss Ashley.\" I replied in my best British butler voice.\n\n\"I'm starving!\" she said as we got in her house \"How 'bout you?\"\n\n\"Man, you read my mind.\"\n\n\"Cool, let's see what I've got.\" She said as she began looking through her refrigerator. \"I've got this food guru I've been working with. He's the one who got me in shape for the show. Did wonders for me, that's for sure. Oh! You've got to try these!\" she said as she pulled out 2 containers\n\n\"She makes these awesome chicken salads.\" She said as she handed me one\n\n\"Ah, looks perfect.\" I said as I dug into mine. I was right, they were delicious. \n\nAs I stood against the counter, Ashley sat opposite me, her lovely legs stretched out next to me.\n\n\"I wonder how the film's gonna turn out?\" I asked\n\n\"Well, good I hope!\" she said with a laugh \"Actually I talked to Marty yesterday. Supposedly he'll have a rough cut for us to see next week.\"\n\n\"That sounds good.\"\n\n\"Oh, trust me I have no interest in being a scream queen.\" She said between bites \"I'll let you in on a secret though, I've got an audition next week for the 'Dreamer' sequel.\"\n\n\"Sequel? What sequel? I didn't know there was one in the works.\" \n\nI was shocked. This was big time news to me!\n\n\"Uh-huh. I guess it's a big secret...well, not anymore.\" She said\n\nMan, a \"Dreamer\" sequel? \n\n\"What are they calling it? \"Dreamer 2\"?\n\n\"I'm not sure, something like that. But whatever they call it,\" She said firmly \"I really want the part.\"\n\n\"Never tell the Tiz she can't do something, huh?\" \n\nShe giggled.\n\n\"You know what else I want?\" she said looking at me.\n\n\"What?\"\n\n\"You.\"\n\nWe both smiled at one another\n\n\"Well, that's something I can certainly provide.\"\n\nI put my arms around her and we kissed, man, did she feel nice! Our tongues touched and hers felt lovely.\n\n\"Missed how you feel, baby.\" She whispered in my ear.\n\nShe unzipped her jacket and I immediately went for her tits, even through the sports bra, they felt great. The closer I got to her, the harder I felt myself getting. It was, as the old saying goes, d\u00e9j\u00e0` vu all over again. \n\nAnd I had no problem with that!\n\nI could still hear her saying \"bedroom, baby\" like last time. And just like last time, I moved my hands under her ass to pick her up.\n\nJust as I lifted her completely off the counter we heard her doorbell ring. As if in a screwball comedy we both looked towards the sound and hissed;\n\n\"Who's that?\" \n\nThen we looked back at one another.\n\n\"I don't know.\" We said in unison.\n\nI let Ashley down and she quickly went to the door.\n\n\"Hey girl...\" I heard someone say to her and it sounded like she knew the person as their voices became closer. The voice sounded familiar.\n\n\"Oh no...is it...?\" I mumbled to myself.\n\n\"Hey Jim...I knew I'd find you here eventually.\"\n\nIt was Vanessa.\n\n\"Yes, uh, hi again...\" I replied as I gave her a quick kiss on the cheek.\n\n\"Showing off the place, Ash?\" she said\n\n\"You show yours off a lot too, you know.\" She replied.\n\n\"She never showed me.\" I said\n\n\"Oh yes, I did!\" Vanessa said with that slight giggle in her voice.\n\nAshley put her hand over her mouth, looking somewhat embarrassed at what Vanessa had implied.\n\n\"You have such a dirty mind, Van!\" she said\n\n\"I don't mind.\" \n\n\"I don't mind either.\" I said with a shrug.\n\nVanessa grabbed a vanilla drink and leaned against the counter. She looked so cute in a white sundress and the gray floppy hat that seemed to be her trademark look now. She took it off and shook loose her thick black hair\n\n\"So whatcha doing?\" she said\n\n\"Hanging out, just got off the set today.\" Ashley said.\n\n\"Hanging with Jim, huh?\"\n\n\"Noooo! He's just a friend.\" She said firmly \"I met him at the Eagle the other night.\"\n\nAshley's smile at me said a lot\n\n\"I was there too, you know!\" she added \"Me and Zac.\"\n\n\"Uh-huh.\" She replied \"I'll bet.\"\n\n\"We were! Zac's been meeting with that guy Marty O'Brien about a film project.\"\n\n\"OK, I know Marty too. I just came back from doing 'Dark Hills' with him.\"\n\n\"New film?\" I asked\n\n\"Yeah, scary film. I've never done one of those.\" \n\n\"Me, neither.\" Vanessa said \"I could never do one of those anyway, I'm too much of a scaredy-cat.\"\n\nVanessa then took my arm\n\n\"But I'm sure Jim would protect me!\" she said\n\n\"Oh yes!\" Ashley said in a mock-heroine voice \"Save me Jim! Save me!\"\n\n\"Save us Jim! We need your help!\" Vanessa said in the same voice as her hands held me tight.\n\n\"You are our only hope!\" Ashley said as she grabbed me the same way\n\n\"OK! OK! I'll save you!\" I said as we all laughed hysterically\n\n\"Yes Jim! Save us from this horrible film!\" Ashley said complete with fake sobs\n\n\"We'll do anything you ask!\" Vanessa said.\n\nI felt Vanessa's hand rubbing my crotch like she did the other night\n\n\"Anything at all!\" she added\n\n\"Vanessa!\" Ashley exclaimed in a shocked voice. \"What are you doing?\" \n\n\"Jim's a fun guy!\" Vanessa said as she held me. \"He knows what I mean.\"\n\nAshley still looked surprised at how forward her friend was being with me, Vanessa stayed close, then looked up at me.\n\n\"He's a really fun guy.\" She said, her voice slowly dropping in tone\n\nAshley still laughed, then her face had a look of realization.\n\n\"Ashley, did I ever tell you what happened after my photo shoot?\"\n\n\"No...but I gotta feeling you will.\"\n\n\"Well...\" Vanessa began \"Jim did the photos at my managers' house, but then I conned him into coming back, when I had my bikini on, right Jim?\"\n\nVanessa was softly caressing my crotch and I could feel my dick straining against my khaki pants. Their thin material was making that rather obvious, so was my hesitation to respond to Vanessa.\n\n\"And then, what?\" Ashley said\n\n\"Guess?\" \n\n\"Uh, you did something that Zac cannot find out about, right?\"\n\n\"Uh-huh.\"\n\n\"...Something that stays in the vault?\"\n\n\"Exactly. Especially because of what I'm gonna do now.\"\n\nVanessa reached over and the zipper came down as she kissed me. She had such soft lips, and she had a perfumed smell about her.\n\nI looked over at Ashley and she was shaking her head, like she'd seen this routine many times before. But she also looked fascinated too.\n\nVanessa's hand now slid inside my pants.\n\n\"Take it out, Jim.\" Vanessa said\n\n\"You do it.\" I said\n\nShe giggled and said \"Okay.\"\n\nVanessa reached inside my pants and I felt her soft hand search around inside until she found my dick. She breathed in very deeply.\n\n\"Oh my...\" she said \"Ash...you gotta see this...it's so beautiful.\"\n\n\"Um...okay.\" She said, hesitatingly as she walked over to us.\n\nVanessa's hands pulled my dick out and I was now exposed to these two ladies.\n\nAshley breathed in the same way Vanessa did.\n\n\"Wow...you're right.\" She said softly.\n\nThroughout all this, I was speechless. Vanessa was far from the sweet girl we saw on the Disney channel, that's for sure. And Ashley seemed like the sidekick we never knew she had, she seemed more na\u00efve` than anything, but Vanessa loved having her along for the fun. And they were sure having it now.\n\nVanessa caressed my dick and Ashley began to do the same.\n\n\"It's nice...\" she said\n\n\"I was right, wasn't I?\" Vanessa said \"It's not too big, not too small.\"\n\n\"But it's better than Zac's, right?\"\n\n\"Way better.\" Vanessa said as she kissed me again. \"Jim shouldn't feel left out.\" She said as she stepped back a little and began to pull her dress up, and then over her head.\n\nVanessa Hudgens had no underwear on. Nor anything else, this whole time she'd been naked underneath her dress.\n\n\"Oh my god! Vanessa are you crazy?\" Ashley exclaimed again.\n\nVanessa only giggled, knowing she could always shock her friend at times like this.\n\nVanessa's body looked great, her skin was a light chocolate brown with equally dark nipples. Her pussy was totally bare skin and she immediately moved my right hand to it. \n\n\"Feel me Jim...so nice...so nice.\"\n\nMy hand slowly stroked the skin around her pussy, my actions made her breathing more rapid. She looked up into my eyes and they closed slightly as she was lost in the feel of my hand. Ashley watched this and I felt her body against mine. She kissed me softly on the neck, as if to get my attention (like that would be a problem!) and as I looked over at her she whispered;\n\n\"Undress me...please...\"\n\nI hesitantly reached for the sides of her bra and pulled it off her. Though she had slightly smaller tits than Vanessa, her nipples were already very pointed. I now went for the string on her pants and as those loosened, they dropped to the floor. I softly rubbed the front of her grey thongs, they felt warm to the touch. As I kissed her, I reached for the sides to slide them down.\n\n\"Let me do those.\" Vanessa said\n\n\"No way!\" Ashley corrected \"I want Jim to do it.\" She said as she smiled at me.\n\nVanessa had the same look on her face.\n\n\"He should be like us, you know.\" She said\n\n\"Yeah, you get to see us naked.\" Ashley said with her arms crossed defiantly.\n\n\"You better listen to her, honey.\" Vanessa said with mock-seriousness \"she's a Jersey girl, you know.\"\n\n\"Uh, yes, Right.\"\n\nI pulled off my blue polo shirt and my khaki pants.\n\nMy dick was at \"full-staff\" as it were. Ashley had her hand on her mouth, Vanessa seductively licked her lips.\n\n\"Nice, huh?\" she said to Ashley, who could only nod her head.\n\nVanessa held my dick in her soft hands.\n\n\"It's very nice.\" She said looking at Ashley, who still had her panties on. \n\nI reached over to her and she stood close to me, I reached for the sides of her panties, slowly pulling them down as she stepped out of them. Ashley's beautiful bare pussy revealed itself to me again. She smiled shyly at me.\n\n\"You're beautiful, both of you.\" I stammered\n\n\"Oh, thank you Jim.\" Ashley said.\n\nAshley and I kissed deeply now, Vanessa watched us smiling before kissing me on my cheek.\n\n\"You look good together.\" She said\n\n\"We should go somewhere comfortable, shouldn't we?\" Ashley said\n\n\"How 'bout your cabana house?\" Vanessa said looking outside.\n\n\"No way! I'm not gonna be naked outside, Vanessa!\" Ashley said firmly \"besides, there's no place comfortable there anyway.\"\n\n\"Uh, what about your bedroom?\" I said\n\n\"See? Jim knows how to think in these situations.\" Ashley said, adding a kiss.\n\nWe were now in Ashley's bedroom. She'd already closed the shades like last time\n\n\"Ever been in a threesome, Jim?\" Vanessa asked as her hands caressed my body.\n\n\"Yeah, Jim, have you?\" Ashley said as she climbed on the bed and got close to me.\n\nWhat should I say? \n\n\"Jim's a good guy, he doesn't kiss and tell.\" Ashley quickly said\n\nYes! Saved by the blonde, or former blonde in this case.\n\nI reached over to Ashley and pulled her close to me and we kissed. My hands now went to her tits. Vanessa sat back on her legs watching us as she slowly caressed my chest, working her way down to my dick. Her tits looked great too, slightly larger than Ashley's.\n\n\"Oooooh...forgot how nice this is...\" she said in a breathy voice.\n\nAshley and I were kissing deeply.\n\n\"This is nice, too.\" Vanessa said as she held my dick to her lips and slowly began to lick the head. I heard myself breathe in as she gradually enveloped my dick. Ashley could be heard doing the same. She must have sensed what was happening even with her eyes closed. When our eyes were open, my hand reached down between her legs, she was already wet. Her face had a kind of crying ecstasy on it. Vanessa had me fully engulfed in her mouth now and she was sliding up and down me.\n\n\"You like that, Jim?\" she said looking up at me.\n\nI closed my eyes slightly and nodded.\n\n\"Good.\" She said with a smile as she slid my dick back in her mouth.\n\nAshley was breathing deeply as she felt my fingers softly touch between her legs, then as my finger slowly went inside her pussy.\n\n\"Baby...ohhhhhh...\" she exhaled.\n\n\"She must like what I'm doing.\" Vanessa said as she came off my dick for a moment. \"I love what I'm doing too.\"\n\n\"Jim...don't...don't...don't stop...don't stop baby...\" she gasped.\n\nMy fingers were softly probing Ashley's pussy as we continued to kiss. She was so wet and slippery. \n\nI was leaning back on my knees, watching Vanessa's dark hair move up and down on me. Ashley leaned in close to me and buried her face in my chest, I could hear a muted cry coming from her as my finger was still inside her.\n\n\"I love your cock, Jim.\" Vanessa said with that giggly smile she was famous for as she slowly sat up and kissed my cheek. We all looked at each other, and wondered what the other would do next.\n\nVanessa leaned back on the bed and slowly spread her legs.\n\n\"Time for you to return the favor.\" She said as her beautiful pussy with its ultra-smooth surrounding skin was revealed in all its glory. Her slightly dark skin made it even more alluring.\n\n\"Go for it, honey.\" Ashley said to me as she ran her fingers through her hair, trying to regain her composure. \"I've never watched someone do it.\"\n\n\"Come on, Jim...you know you want to.\" Vanessa added\n\nHer dark skin looked so nice, the folds of her pussy a bright pink as there was no hair there either. She was propped up on pillows and lightly touching her nipples. I took a deep breath and crouched down. She looked so pink and pretty down there. My lips gently kissed her skin then moved ever so slowly towards her folds. They were wet and glistening as my tongue began to lick all around them before finally sliding inside her womanhood. No matter how many times I'd been in this situation I still wondered if I was really there. \n\nVanessa's reactions confirmed that. Her breaths came soft and sexy as she felt my tongue. It seemed like an eternity before she said anything. And even then, it was only a burst of gasps and 'ohhhh's. Ashley lay beside us, watching and gently touching herself in different places. My lips and tongue continued their work on Vanessa, going inside her, adding my fingers to rub her clit softly. Her hands caressed my head all the while, until I felt her ease me off her.",
        "\"Fuck me Jim...I want you...please...\" she said as we kissed and she tasted herself on my lips.\n\nShe repeated this, and nodded her head.\n\n\"Let me help...\" Ashley said as she turned to her nightstand and pulled open a drawer for a Trojan.\n\n\"Thank you, Ash...\" Vanessa said softly\n\n\"Want me to do the honors?\" she said with a sly smile as she tore open the wrapper.\n\nVanessa giggled her response.\n\nAshley gently slid the condom on me\n\n\"I think you're good to go.\" She said looking at me\n\n\"I guess so.\" I replied\n\n\"She's all yours, babe...\" Ashley said\n\nVanessa had this look of eager anticipation on her face as I rubbed my dick on her pussy. She inhaled slightly before I slowly pushed into her. Then she gasped.\n\n\"Oh god...oh god...oh god!\" she gasped as I pushed further and further into her cute pussy.\n\n\"Uh-huh...do her...do her...\" Ashley said with quiet excitement as my dick was now fully inside Vanessa.\n\nI immediately began fucking her. Just enough to feel her, feel how hot and tight she was. Vanessa's eyes were closed and her tits were swaying up and down rhythmically with my every push. Her arms were braced against the bed's headboard before she wrapped them around me and drew me in closer to kiss her. Ashley watched us with a look of pleasure as she saw her friend getting fucked by her own friend. I slowed down and lay atop her, her breaths in my ear said it all.\n\n\"Wow...so good...oh my god...\" she said softly in my ear.\n\nAshley leaned over and kissed me on the cheek.\n\n\"Feel good, Van?\" she said\n\n\"Uh-huh...\" she replied with a nod \"Really good...keep doing it Jim.\"\n\nI slowly fucked her again, holding her close to me and listening for her sexy breaths and moans in my ear. \n\n\"Oh...oh my god...oh god...baby...bay-beeeeeeeeeyyyyesssssssss!\" she cried out amidst gasps and even heavier breathing. I could feel her fingers dig into my back as she climaxed. \"So good...so good...\" she said over and over as she relaxed.\n\nAshley had been close to us all the while watching everything. \n\nI could feel Ashley lean in close to my ear\n\n\"Do me next...\" she whispered with a kiss added for effect.\n\nI pulled out from Vanessa and she slowly moved over and Ashley lay back. She had the same eager smile of anticipation as she looked at me and what was to come next. Vanessa sat up and looked at her friend.\n\n\"He's awesome.\" She said as she ran her fingers through her brunette hair just as Ashley had.\n\nI eased into Ashley's small and tight pussy. Her eyes slowly closed and she smiled as I was fully inside her. A long, slow, moan came from her. I was really turned on.\n\n\"Oh yeah, baby that's it!\" she gasped \"Do me baby...fuck me baby\"\n\nVanessa was laying beside us, rubbing her pussy and watching as I fucked Ashley. She felt just as hot as Vanessa and her arms were wrapped around me and we kissed as we fucked. Just hearing her breaths was so sexy. I sat up and pulled her up with me. I was leaning back on my knees, my hands under her cute ass, her legs wrapped around me and her body completely off the bed except for her shoulders. \n\n\"The strongman's back!\" she giggled\n\nVanessa laughed too, her fingers eagerly rubbing her pussy and breaths coming rapidly.\n\nAnd they loved every minute of it.\n\n\"Oh god Jim! Oh my god...baby...baby...BABY!!\" Blake cried out as she was on top of me, moving up and down and caressing her thick blonde hair. She knew how much it turned me on, and her smile said it all. Even in the dim light of my bedroom I could see her smile.\n\nMy hands were on her hips, they felt ultra-smooth as I moved her up and down on my dick, her back was arched and her head thrown back, mouth open.\n\nA cry of ecstasy was about to come from her any second.\n\n\"Fuck me Jimmy!! Oh god! Oh god!\" Ashley cried out\n\n\"Do her...do her...do it...\" Vanessa said breathlessly as her finger was inside her pussy.\n\nMy dick was buried in Ashley Tisdale.\n\nAnd I was about to explode within her.\n\n\"Gonna cum Ash...gonna cum!\" I quickly said\n\n\"Ohhhhhhgodddddd...\" Blake moaned as she felt me explode within her \"I feel it...oh god I feel it, baby...\"\n\nI felt the explosion all through my body and now I was the one with my head thrown back and barely any sound escaping. Once I caught my breath, I looked up at Blake. She had a smile of gratification on her lovely face and she leaned down and kissed me softly.\n\n\"Beautiful, baby...beautiful.\" She whispered.\n\nAshley and Vanessa both kissed me. Ashley rolled off me and lay back, still breathing heavily.\n\n\"Wow...\" was all she could say as she stared up at the ceiling.\n\nVanessa had wrapped herself against my side, her head on my chest. She looked up at me. \n\n\"Mmmmm...this was fun.\" She said with that TV smile we'd seen everywhere.\n\nAshley finally sat up.\n\n\"Now you know how I got my Hellcats body.\" She said\n\nWe all laughed.\n\nSomehow, I found the energy to get out of bed.\n\nI had a breakfast to make.\n\nAnd Blake Lively was standing in my kitchen, leaning against my counter, her long lovely legs prominently displayed, wearing that green satin Fillmore West football shirt, just as she promised. Blonde hair casually tousled.\n\nShe just happened to have freshly sprayed on some of her Chanel` perfume too.\n\nSmiling as only she could.\n\n\"I wanted to watch Mr. Breakfast at work...and figured I'd dress for the occasion.\"\n\n\"I guess I always work better with an audience\" I said with a bit of sleepiness still in my voice as I stared to gather things together.\n\nBlake came up from behind and held me.\n\n\"Morning, honey.\" she said.\n\nNot to brag, but I think I outdid myself this time in the breakfast department. Blake couldn't stop raving about my kitchen prowess.\n\n\"Man, you are such a good cook, simple and perfect. Who taught you anyway? Rachael Ray?\" she joked.\n\n\"Ha! Nope, self-taught I guess.\"\n\n\"You could've fooled me.\" She said as she got up and refilled my Red Sox coffee mug.\n\n\"Now, I wanna hear all about this movie you blew me off to do.\" She said as she handed me my cup and sat back down opposite me \"Was it worth it?\"\n\n\"Well, was the movie you did in Paris worth it?\"\n\n\"Of course!\" she quickly replied\n\n\"Then so was my movie, even with the lousy conditions.\" I said.\n\n\"Price of fame, babe.\" She said as she looked at me and sipped her coffee. \"You were probably one lonely boy out there in West Virginia. Not a lovely lady to be found.\" She said with a touch of sarcasm as she casually twirled her hair \"And here I was...all alone\" Adding a far-off look with her eyes.\n\n\"Well...I made the best of a bad situation.\" I replied with a weary smile.\n\nHer elbows were on the table as she balanced her coffee mug in both hands and stared at me\n\n\"Oh, I'm sure you did...\" she said with a sly smile and a slightly raised eyebrow."
    ],
    "authorname": "hollywoodjim",
    "tags": [
        "blondes",
        "brunettes",
        "threesome",
        "bordello",
        "totally shaved",
        "anal",
        "missionary",
        "oral sex",
        "lingerie"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/adventures-of-hollywood-jim-ch-46"
}