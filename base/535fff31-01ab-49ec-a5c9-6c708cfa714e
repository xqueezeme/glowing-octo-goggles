{
    "title": "Back To Your Nap Buddy",
    "pages": [
        "This is an update on \"We Met In Kindergarten.\" WMIK ended as Jeffrey was about to marry someone else. Inspired by Troye Sivan's beautiful but haunting video, I thought the nap buddies should wind up together. They had loved each other for too long to wind up with others.\n\n*****\n\nPart One\n\nMy mom walked me to my first day of kindergarten at Powell Gardens Elementary and introduced me to Mrs. Joyce, the teacher. Hair piled high on her head in a tight bun, Mrs. Joyce changed my life forever that very first day, at nap time. We were a crowded kindergarten, so we all had to have \"nap buddies\" with whom we shared a nap mat. Mrs. Joyce paired me with Eddie Estes, the youngest of the five Estes boys and the only kid in our class who did not actually live in Powell Gardens, a cinderblock multi-family compound looked down upon by the rest our town (it had been built as inexpensive housing for soldiers returning from WWII, but - in the intervening generation - had become a sort of \"project\" for our town's poor families). The only people lower on the totem pole than \"PGs\" were the \"river rats\" who lived on the river side of the train tracks in shacks on stilts.\" We were \"river rats\" who had \"moved on up\" to PGs.\n\nEddie came from what people in our town called a \"good family,\" which meant his parents were not divorced (mine were) and owned their own home. Eddie was also Mrs. Joyce's favorite kid, probably because he was clean, well-mannered, and adorably happy. Where I was a shaggy, stern white-haired waif, Eddie was a smiling, tight little 5 year old, brown hair cut tight above his ears and off his neck.\n\nEddie has been my best friend since our first day sharing a nap mat. It was unlikely to turn out that way. After we spent the 1972-1973 school year together the way only 5-6 year old boys can (playing kick the can, climbing trees, catching crawfish, and spending hours bringing Hot Wheels to life), Eddie headed to St. Thomas's, the Catholic grade school for the south, wealthy end of town. I stayed at Powell Gardens. Not because I was not Catholic. I was. Everyone in our town was, at least as far as I knew. If you could afford to tithe, then you went to one of the Catholic grade schools. If you could not, then you went to one of the public schools. We could barely afford to live, much less tithe, so I stayed at Powell Gardens. Since Eddie and I were at different schools and at different ends of our town's social spectrum, it was unlikely our friendship would endure.\n\nIllness intervened. During second grade, I got the measles, the mumps, and the chicken pox. Needless to say, I missed a lot of school. In fact, I missed so much school they refused to pass me to third grade, even though I was well-ahead of where a second-grader should be. The younger brother to a domineering older sister who liked to play teacher, I knew how to read even before I started kindergarten. So, while other kids were learning the alphabet through the Letter People, I was reading, doing simple math, and otherwise moving ahead. I was so far ahead that my first grade teacher, Mrs. Littlefield, suggested I skip from first to third grade. My mother refused, if for no other reason than to be obstinate, as was her nature\n\nBecause of my illnesses, the school that did not want me in the second grade in the first place was now insisting that I repeat it. Public school bureaucracy stood athwart common sense. My mother would have none of it. Bullheaded, she marched me down to St. Thomas's, told them my birth date, and asked if I could enroll in the third grade there. When they said yes, I was taken to Sister Susan's third grade class and put in a desk directly behind none other than Eddie Estes. By the time they found out we could not tithe, it was too late.\n\nEddie and I beamed at each other. And, we picked up right where we had left off, the way children do so easily. Mostly, that was because Eddie was one of the most genuine humans I would ever meet. Raised well, he did not look down upon the \"PGs\" like most everyone else at St. Thomas's did. \n\nSister Mary looked like a giant, wizened penguin. She seemed ancient, and she wore the full habit. The only visible parts of her body were her fat hands and her chunky, wrinkled face. \n\nShe was also a tough old broad. She put up with little of the bullshit third graders dish out.\n\nI was still ahead of my classmates, so I was an ongoing distraction for my classmates and source of frustration for Sister Mary. One day, she grabbed me by my right ear, \"led\" me to the hallway, and forced me down on a bench. Taking my chin in her right hand, she raised my face so I was look her directly in her horn rimmed eyes.\n\n\"Jeffrey Redding, you're the smartest kid in that classroom,\" she admonished me. \"Start acting like it.\"\n\nI stared at her, dumbstruck and scared. She seemed to expect an answer, but I had none to givej.\n\n\"If you aren't going to say anything, then I will,\" she continued. \"When we go back in there, you move your desk to the front of the room. And, you raise your hand every single time you know the answer. I'll bet you an ice cream cone you know the answer every time. If you do, then I'll buy you an ice cream cone.\"\n\nI did. When school was out, Sister Mary walked me down the street to the Corner Dairy. I was surprised when she got an ice cream cone. St. Thomas's nuns were mythic figures to all of us. I couldn't imagine one could eat an ice cream cone.\n\nWhile we walked back, Sister Mary gave me a pep talk, reiterating that I was the smartest kid in the class and encouraging me to act like it. I got little positive feedback at home. I became addicted to the positive feedback I got in school. Sister Mary had set me on a path. I may have found my way on my own, but I may not have. \n\n*****\n\nThe summer after third grade, I biked the six blocks to Eddie's house every day. We played outside all day, every day, shirtless and barefooted. There was no such thing as sun screen, and we turned dark brown. We looked dirty, even when we weren't.\n\nOn the Fourth of July, I had my first sleepover. At Eddie's, of course. We put up a small tent in his backyard, and we shared a sleeping bag. We awoke wrapped in each other. We were little boys, and it was no big deal. \n\nWe went on like that, moving through fourth, fifth, and sixth grades. I was embarrassed about where I lived, so I never had Eddie over. I was always at his house. His mother joked that I was her sixth son. \n\nWhen I stayed at the Estes's, Eddie and I either shared his full bed or the living room floor. We always slept in our little white underwear. We almost always awoke wrapped in each other. We were best friends, and we acted and loved each other like identical twin brothers. \n\n*****\n\nIn middle school, we were friendly rivals. I was smartest boy in our class, and I won most of the academic awards. Eddie was the most athletic boy, and he won most of the athletic awards. He was the pitcher on our baseball team (I played shortstop), the striker on our soccer team (I played fullback), and the point guard on our basketball team (I played \"last person off the bench when the game was completely out of hand\"). He was also the first person picked at recess, whether for kickball, dodge ball, or whatever we would spend those breaks playing. He was a star.\n\nHe also always got the girl. In seventh grade, we each wanted Diane Austin, who was the female \"Eddie\" of our school. He got her first. I got her only after he decided he didn't want to \"go steady\" with her anymore. I lost her when I tried to french kiss her at the end of year party, which was in Eddie's basement.\n\nThroughout middle school, Eddie and I were the ying and yang of our class. The male social circle surrounded us. Others moved in and out, but we were the center. We arrived at school together, sat next to each other, and left school together. We did our homework together. We spent our weekends together. We were \"the boys.\" When anyone said \"the boys,\" everyone knew who they were talking about.\n\nAs we moved into high school, Eddie and I got split up for the first time. I tested into advanced classes. Eddie tested into average classes. For the first time since third grade, we didn't get to spend the day together and next to each other.\n\nI got my driver's license first. Once I did, I went out of my way to pick Eddie up for school every day and to drop him off after. I liked starting and end each school day with him.\n\nEddie was by far the best looking kid in our class. He had dark hair, dark eyes, and an electric smile that made him sexy, and he knew it. He looked a little like Tom Cruise in Risky Business, but he had a better smile.\n\nHe carried himself with the confidence that came with the knowledge he was hot. Our senior year, he was voted Best Looking and Best Personality. Me, Most Intelligent. I was not bad looking, but I was also not good looking. From a white haired waif, puberty turned me into a \"dishwater blond\" teenager. And, I was still little, easily the smallest boy in our class. While Eddie grew to 6 feet, I stopped growing at 5'6\", a full half foot shorter. And, while Eddie developed his lean frame with the muscles of an athlete, I remained mostly shapeless. It's tough to build muscle with your nose in a book.\n\nBy our Senior year, I knew I was gay. While my friends fixated on getting laid, I fixated on their developing chests, butts, legs, and, of course, crotches. But, gay was not something you could be in a backward town, much less at our conservative, conformist High School. I was so deep in the closet that I was friendly with whatever monsters hid there.\n\nI also knew I was in love with Eddie. At least, once I figured out that love was the source of the euphoria I felt when I was around him and the heartache I felt when I was not.\n\nWhen I slept over, we still often awoke wrapped in each other, but nothing ever happened between us. I stole looks, especially when he changed in front of me. And, I stole touches whenever I could. Like when we were at the movies, and it was not too obvious for me to rest my arm against his on the arm rest. Or, when we were in the backseat of his parents' car, and it was not too obvious for me to rest my leg against his. \n\nEddie was definitely not gay. He never stole looks. And, he never stole touches.\n\nAnd, I do not think he had any idea I was gay. After all, we both had girlfriends through most of high school.\n\nI crossed the line with him a couple of times. The first was the night we celebrated his 18th birthday (I was exactly one week older). I was staying at his house and we were sharing his full bed. He was asleep on his back in boxers and without a shirt, and I was watching him breathe, unable to sleep or to take my eyes off him. Eddie had a small patch of hair in the middle of his sinewy chest and a \"path to paradise\" that disappeared into his boxers. He also had small, hairless nipples. That night, I could not stop staring at them. And, I could not resist the impulse to lick his right one. So, I did. It was an overwhelming impulse. So, I did it. And, it was awesome, sending a little jolt through me all the way to my toes. Luckily, it did not wake him up.\n\nOnce golf season started that Spring, we were practicing putting in his basement, and he was standing right in front of the chair I was sitting in, getting ready to putt. He was wearing jeans, and they beautifully outlined his bubble butt. As he crouched over the putt, his ass was inches from my face. Unthinkingly, I leaned forward and licked the crack of his jeans. Startled, he asked me \"what the hell was that?\" Panicked, I could only choke out \"keep your ass out of my face.\"\n\nAs I said, I never thought anything would happen with Eddie (with his mother, I was one of two people who continued to call him Eddie; upon starting high school, he became \"Ed\" to the rest of the world). However, there was one occasion in high school where there seemed to be at least the hint of a possibility. It was New Year's Eve of our freshmen year of college. We were both home for break, and Eddie and I had gotten a hotel room in Indy to further our plan of picking up two girls and sexing them up to welcome in 1987.\n\nOur plan failed, although not for a lack of trying. I suspect I cock-blocked Eddie, as he was far more talented at the pick-up than I was. He came across as the confident, sexy guy he was. I came across as the bookish nerd I was.\n\nAfter striking out, we drove to the hotel and tried to decide whether to stay in Indy or head back to our respective homes. As we sat in the hotel parking lot, Eddie said \"we could go in and just sex each other.\" Stunned silent, I just sat there like a dumbass, wondering if I had just heard what I thought I had, and, if so, what I should do. If there was a chance, my indecision foreclosed it. Eddie put his car into drive and headed back toward our town. \n\nPart Two\n\nAfter high school, Eddie headed off to Purdue to study engineering, and I headed to Notre Dame. Like most high school friends, we kept in touch, but less and less as more and more time passed. While I was in law school, Eddie started his engineering career in Indianapolis.\n\nAfter law school at Stanford, I stayed west to clerk on the Ninth Circuit Court of Appeals. Once the clerkship was over, I planned to spend 6 weeks backpacking from Rome to Lisbon, the last two of which I would spend going from Madrid to Lisbon with my girlfriend Caroline (unable to deal with being Catholic and gay, I was still pretending to be Catholic and straight, and Caroline wound up collateral damage in my delusion).\n\nWhen visiting home during the summer before the trip, I stopped by the Estes house. I still considered myself part of their family. So, it was not unusual during a visit to home for me to stop by and at least say hello to David and Susan, \"Wardo's\" mom and dad [After graduation, I felt increasingly silly using \"Eddie,\" especially for someone so much bigger. But I also did not want to use the \"Ed\" that everyone else did; as college wore on, I started calling Eddie \"Ward\" instead, using the last four letters of his formal \"Edward.\" Quickly, Ward became Wardo.].\n\nDuring that visit, I told David and Susan of my plans to backpack from Rome to Lisbon starting Labor Day Saturday. Susan responded, \"You are not going to believe this, but Eddie is flying to Rome the Saturday of Labor Day weekend to backpack to Paris. How is that for a coincidence?\"\n\nI laughed. Wardo and I had not talked for months, but here the two nap buddies were - 20 years on from kindergarten - traveling by coincidence to Rome on the same day and on same flight. I would be in Europe six weeks; Eddie would be there the first two. \n\nSusan gave me Wardo's updated contact information, and I immediately reached out to him. In short order, we had plans to go from cheap hotel to cheap hotel in Rome, Florence, Venice, Cap d'Ai, Nice, and Paris. Our separate solo trips had turned into a Crosby/Hope road movie starring the nap buddies from Ms. Joyce's kindergarten class.\n\nAnd, we had a blast, eating and drinking our way through Europe. We were constantly in motion. When possible, I stole looks. And touches.\n\nWe settled easily back into our friendship. For me, Eddie was like a favorite book. Not matter how long I had neglected it, I always found happiness when I picked him back up.\n\nThe looks were not tough. We shared rooms the whole trip, and most of them were so low-end they did not have private bathrooms. So, we bathed together in locker room style showers. Wardo looked terrific in the shower. His brown hair was longer than usual, and he kept it tucked behind his ears, even in the shower. Backpacking, he stopped shaving, so he had a developing beard under his roman nose. With long hair and stubble, he looked like a hipster musician. He was Michael Huissman.\n\nHis chest hair had thickened since high school, but was still concentrated mostly in the middle of his muscled chest. He was still lean. His path to paradise was framed by a perfect V and led to a thick bush of straight pubic hair. His soft dick was pretty, thick, and hung against large, balls, framed by thick, soccer thighs. His bubble butt was almost hairless. And, he had great arm pits and feet. I had developed over time a fetish for both; Wardo's arm pits were thick with the same dark, straight hair as the rest of his body, and his feet were athletic and arched well cared for.\n\nThe touches were tougher. Every night, we were in separate twin beds, and all day we were on the go, walking miles and miles to avoid missing anything we were \"supposed\" to see. So, I had to be satisfied with an occasional clap on the shoulder or a grab of the arm.\n\nThat is, until the last night of our trip. That night, the hotel we chose in Paris put us in a room with a full bed, a fact we did not discover until we had paid for and checked into our room. We had shared his full bed our whole lives, so it did not seem like a big deal to either of us. \n\nAfter a great \"end of trip\" meal and two bottles of wine, we headed back to our room to sleep before Wardo's early morning flight home the next day. Once there, Wardo stripped to his boxers and climbed into bed. I did the same, although I left my undershirt on. I wore a crucifix, so I had to sleep with a shirt on.\n\nAs always, I was on the left side, and Wardo was on the right. Just like we had slept when we napped in kindergarten and, after that, all those nights I stayed at his house.\n\nQuickly, Wardo's breathing changed, signaling he was asleep. He was on his back, with his arms tucked behind his head. So, I could see his arm pits. Since our room was not air conditioned, the window was open. And, we were uncovered.\n\nI was not in the mood to sleep. I was too keyed up, having Wardo shirtless - with armpits exposed - next to me.\n\nWithout touching him, I leaned over and sniffed his arm pit. It smelled the way a man is supposed to smell at the end of the day. Not stinky, but also not clean. Musky. A hint of odor. It was intoxicating.\n\nI remembered licking his nipple all those years before. I thought about doing it again. But, I did not want to wake him and ruin my fun. So, I sniffed his arm pit some more. And stared at his chest, as it rose and fell with each breath.\n\nBefore long, I noticed that his boxers were tenting a little. He was hard, pointed up and to the left. \n\nI had seen Wardo soft, but never hard. He was definitely a grower. I wanted very much to know how long and thick his hard dick was. Leaning on my left elbow, I reached my right hand over. Trying not to touch him, I formed a backward C with my hand and tried to estimate his girth. He was thick. Definitely thicker than me.\n\nUsing my thumb and pinky, I then tried to estimate his length. He was almost exactly as long as my handbreadth, which is just about 8 inches. Definitely longer than me.\n\nI was not careful enough. As I was \"measuring\" his length, my thumb touched the head of his dick through his boxers. I froze as his dick twitched. I could not tell if he was awake, and I did not dare lift my head to look at his face. Instead, I started slowly to pull my hand away. As I did, he grabbed my right wrist with his left hand. Dread and panic flooded through me. I feared I was about to be held accountable. I also feared curiosity had just killed the cat, ending twenty years of friendship.\n\nRather than yank my hand away, Wardo pressed it to his hard dick and held it there. I was not sure what to do. I thought he wanted me to take it, so I did. I gripped him through his boxers. He was rock hard. \n\nI was still frozen. I was completely still, my right hand wrapped around my nap buddy's hard dick. I couldn't help myself, so I gently squeezed it.\n\nWardo responded by raising his hips, slipping his hands into the band of his boxers, and pushing them down to his knees. Raising his knees toward his face, he pulled them completely off, laid back flat, spread his legs, and tucked his arms back behind his head.",
        "I lay there, dumbfounded and helpless. I couldn't or wouldn't believe what was happening. Before my indecision foreclosed another opportunity, Wardo reached down, took my right wrist again, and moved my hand back to his dick.\n\nAs I gripped him again, he slowly moved my hand on his dick. I was high as a kite. I felt like I had just done a line.\n\nWhen he let go of my wrist, I continued stroking him. As his breathing slowly picked up, so did my pace.\n\nI moved my head toward his arm pit and sniffed. Between his smell and the feel of his dick filling my hand, I almost came. As his breathing deepened and became more ragged, I gripped tighter and jerked him harder. Soon, he was bucking his hips in rhythm with my hand.\n\nI leaned over and took his nipple into my mouth, licking and sucking as hard as I could. His moan told me he felt it this time. As I sucked his nipple and jerked his dick, I felt his body tense. He was getting close. I sucked and jerked harder. He exhaled loudly and moaned as cum moved through his dick and shot out in arcs on his chest and stomach. As I kept sucking and jerking, I came in my boxers without touching myself. Wardo stayed hard in my hand. I kept jerking, and he came a second time. Spent once, his second load ran down his dick onto my hand. He grabbed my right wrist with his left hand, which told me it was time to stop. I let go of his dick and abandoned his nipple, moving my right hand to my mouth so I could eat his cum. It tasted better than I dreamed it would, and I ate every drop I could. As I did, he used the sheet to clean his chest and stomach. This disappointed me, as I had hoped to lick the cum off him. Once cleaned, he tossed the sheet away and closed his eyes. Before long, he was back asleep, not having uttered a word. \n\nI tried to sleep but could not. I had jerked my nap buddy's dick, devoured his nipple, and eaten his cum. I was floating as I relived it over and over in my mind.\n\nPart Three\n\nI fell asleep at some point. When I awoke, the sun was streaming into our room, I was on my right side, Wardo was pressed up against my back, and his left hand was hooked under my chest. I had started lifting weights after high school, so he was holding onto more than loose skin.\n\nHis dick was hard and pressed against my ass. He was still naked, having neglected to replace his boxers after I jerked him the night before. I was still wearing my boxers, the front of which was now crusty from my spontaneous orgasm.\n\nWithout saying a word, Wardo pressed his body hard into mine, driving his dick into my ass cheeks as hard as he could. The force of the press moved me onto my stomach. He was quickly on my back. He raised up, grabbed my boxers by the band, and tugged them down to my knees. He then moved back up, pressing his hard dick into my bare crack. He was trying to fuck me. Actually, he was trying to dry fuck me. I had been fucked before, but there was no way I could take him dry, even if I wanted to.\n\nHe realized the same thing. He moved off me, grabbed something off the sink, and hopped back on the bed. He squirted something in my ass crack (I later found out it was hair conditioner) and then used his dick to smear it around. He started to push into me again. He should have loosened me, but I'm sure he didn't know that, and I didn't tell him.\n\nI wanted so much to open up for him. But, I had not been fucked for awhile, and I was having trouble. Wardo's size made taking him a challenge. \n\nI didn't want him to stop trying, and he didn't. I took a deep breath, he pressed in, and I gave enough that the head of his dick slipped inside me. He pushed again, and I started to yield to him. My body was immediately covered in a cool, soft sweat. As he pushed more of himself in, I may have whimpered. I am too proud to say I did, and too honest to say I didn't. \n\nEddie was needy and not to be deterred. He pushed in deeper and deeper until I could feel his pubic hair against my ass. My ass was on fire, and it felt like his dick was in my chest. \n\nI asked him to hold still while I relaxed. I took deep breaths. While I did, Eddie laid flat on my back, intertwined his hands in mine, and lowered his head to mine. \"I really want this,\" he whispered in my ear.\n\nI turned my face to his. \"Go as slow as you can,\" I said. \n\nEddie slowly pulled out and pushed all the way back in. My chest seemed full again. But, I was also thrilled.\n\nHe did not go slow. He quickened his pace and started pushing into me harder and faster. I was helpless against him. Even if I had wanted him to stop, I could not have forced him to.\n\nI did not want him to stop. One of my lifetime fantasies was coming true. I had spilled most of my teen seed in my own hand imagining what was happening at this moment, in this Parisian hotel room, in the bright light of a beautiful morning. But for the physical sensations overwhelming me, it would have been difficult to convince me that I was not dreaming.\n\nWardo started breathing faster and harder, panting in rhythm with his strokes. As he continued to pound into me, a pleasurable sensation emerged. His dick was sliding against what I would later discover was my prostate. I relaxed, turning my head toward his face so I could catch his breath. \n\nThe moment was too much for me. His smell, his sweat, and the feeling of his dick filling me overwhelmed me. I came again without touching myself, grunting as I did.\n\nWardo whispered \"oh, God\" as his body stiffened and he buried his load deep inside me. He pushed into me as far as he could and pulled my body against him as tightly as he could. We were both covered in sweat, my stomach was covered in my own cum, and my ass was full of his. \n\nHis breathing slowed, and he relaxed on top of me, still covering me with his sweat and his breath. Neither of us moved or spoke. His dick went limp, and he slipped out of me. Then, he moved off me and the bed, wrapped himself in a towel, and headed out the door and down the hall to the bathroom. \n\nWhile he showered, I tried to decompress and figure out the last eight hours. I was worried a friendship had come undone, yet I could not stop smiling. I was elated. Again, I felt like I had just done a line.\n\nWhen Wardo got back to the room, I was still sprawled on the bed, my boxers still halfway down my legs. Without saying a word or even looking in my direction, he packed his backpack, and headed toward the door. \"Great trip,\" he said as he left for the airport. \n\nWith him gone, I showered, packed my own backpack, and headed to the train station. I needed to get to Madrid in time to meet my girlfriend, Caroline. \n\nPart Four\n\nWardo and I did not speak of Paris for the next ten years. But, we remained best friends. While he coached me to stop acting twice my age, I coached him to stop being the youngest child, always waiting or everyone else to take care of him. \n\nSix weeks before Wardo's wedding, I organized a bachelor's party for him in Vegas, as best men do. On Saturday, we went on a pub crawl. Wardo and I were the last two standing. We decided to have a final final in the hotel bar.\n\nOver scotch, I finally raised Paris. \"Other than me, have you ever been with another guy?\"\n\n\"No. Just you. Just that once. Just that night.\"\n\n\"Twice. Night and morning.\"\n\nWardo blushed and added quietly, \"Right. Twice. Night and morning.\"\n\nWe sat quietly and sipped our scotch. I looked directly at him. He returned my look. It was as intimate as a look can be.\n\n\"I never expected that,\" I said. \"I had fantasized about it since I was old enough to realize sex was a thing, but I never expected that fantasy to come true.\"\n\n\"Me, either. I did not even know you were gay. When you touched my dick, something just came over me. When you finished jerking me off, I expected to feel shitty and dirty. I didn't. I felt happy, and I slept so soundly and so peacefully and so . . . joyfully. The next morning, I had no idea what I was doing. I woke up wrapped around you, and desire just took over. It just seemed like I was supposed to do what I did. It seemed natural. And, then I went back to my life, you went back to yours, and here we are. It's been ten years, and we have pretended for ten years it never happened.\"\n\n\"I never pretended. It was the best eight hours of my life. I have reveled in it.\"\n\n\"I'm not gay.\"\n\n\"I know.\"\n\n\"But, I do love you.\"\n\n\"I love you, too. So, so much.\"\n\n\"Your friendship has meant the world to me,\" he said. \"I am closer to you than anyone else, and I love you more than anyone else.\"\n\n\"Your friendship has meant the world to me. I took a lot of pride from the fact you were my best friend growing up. You were Eddie Estes, and you were my best friend. I had to be someone or something, or you would have had better sense.\"\n\nThe conversation ended. We drank another scotch and headed back to the hotel. It was past two. We were both drunk, and we both needed to get some sleep.\n\nWhen we got back to our suite, Wardo went directly to his room without saying goodnight. I was surprised and disappointed until he returned in his boxers with a bottle of vodka. \n\nWardo's body looked as it had ten years before. He had a small mat of hair in the middle of chest, small nipples, and a delicious path from his navel into his boxers. He was still lean and muscled. He had not let himself go.\n\n\"Let's have a final 'final final',\" Wardo said, dropping ice into two tumblers and adding vodka.\n\n\"Let me change first,\" I said as I headed to my room. I stepped out of my jeans, pulled my sweater over my head, and pulled a pair of gym shorts on. I had transformed my body in the last ten years. As many gay men do, I had spent a lot of time lifting weights and otherwise \"honing the temple.\"\n\nWhen I returned to the common area, Wardo was seated on the coach, with a tumbler in one hand and the other resting on his crotch. I picked my tumbler off the table and sat down next to him, pressing my leg to his as I used to do in the backseat of his parents' Buick. He did not pull his leg away. Instead, he looked at me and smiled. I smiled back. It seemed like the most natural thing when he leaned over and lowered his mouth to mine. I pushed my tongue into his mouth, and he pushed his into mine. There was no urgency in the kiss, just intimacy. It robbed me of my breath.\n\nWhen he finally pulled away, he smiled at me. \"I have wondered for ten years what it would feel like to kiss you.\"\n\n\"Well?\"\n\n\"It's definitely different than kissing a woman. Firmer. More powerful. Aggressive.\"\n\n\"Women are mushier.\"\n\n\"That they are.\"\n\nWe finished our drinks in silence, still leg to leg on the couch. The atmosphere was charged, fraught with possibility, at least for me. Neither of us spoke. Neither of us moved.\n\nWardo finally broke the silence.\n\n\"I have also wondered what it would be like for you to blow me.\"\n\nMy dick twitched. I was pretty sure his statement meant he wanted me to satisfy that wonder.\n\nI took the bait. \"I have blown a few straight guys, and they all agreed getting blown by a guy was way better than getting blown by a girl. They said most girls do not like giving blow jobs, so they do not try very hard to do it well. I like doing it. I try hard to do it well. And, I do.\"\n\n\"Jenny hardly ever blows me,\" he said. \"When she does, it's not very good. And, I have never come in her mouth. She says it's disgusting.\"\n\n\"It's definitely not.\"\n\n\"You want to show me?\" he asked.\n\nOf course I did. I answered him with actions, not words. I reached between his legs and took hold of his dick. He immediately stood up, stepped out of his boxers, and stepped in front of me. Sitting, I took his dick into my mouth and his ass in my hands. I opened my throat and swallowed him until my nose was buried in his musky bush. As he inhaled sharply, his hands went to my head, and he started to fuck my mouth. As he sped up, his legs started to shake. \n\n\"Hold on a second,\" he said. \"I think I need to sit down for this.\" He lowered himself to the floor, putting his hands behind his back as a brace. I kneeled in front of him and lowered myself to his throbbing dick. \n\nAs I used my left hand to extend my mouth and suck his dick, I moved my right hand to his balls and gripped them. Then, I moved it past his taint and toward his asshole. \n\nHis \"don't do that\" stopped me. I moved my right hand back to his balls as I accelerated my pace with my mouth and my left hand. He started to pant and buck back against my mouth. When I felt his balls start to clench, I backed off. I suspected this was the only time I was going to have his dick in my mouth, and I was going to savor it. I edged him. \n\nWhen I thought it was safe, I started circling the head of his dick with my tongue. Then, I licked the shaft.\n\n\"I need to come,\" he urged.\n\nI pulled my mouth off his dick. \"You need to be patient.\"\n\nI returned to my work. I worked his dick like I had never worked another. He was leaking a lot of precum, and I drank it all. \n\nHis dick twitched. His balls clenched. I felt bad for teasing him, so I started sucking him in earnest. My mouth and hand worked in perfect unison. He bucked his hips. When I felt his balls clench again, I removed my hand and swallowed the length of his dick. I felt the first blast of Wardo's load smash into the back of my throat. As I sucked him harder, Wardo shot over and over into my mouth. I swallowed it all and kept sucking until Wardo could not take it anymore and grabbed my head with both hands.\n\nHe flopped back flat on the floor. \"Jesus Christ, that was unbelievable. I think that is the biggest orgasm I've ever had. I could feel it in my feet.\"\n\nI sat up and looked into his face. \"So, better than Jenny?\"\n\n\"Miles. Thank you.\"\n\n\"Thank you.\"\n\n\"For what? I'm the one who just got a great blow job.\"\n\n\"For fulfilling another fantasy I've had since I first realized sex was a thing.\"\n\n\"You fantasized about sucking my dick?\"\n\n\"I did.\"\n\n\"Seems like an odd fantasy.\"\n\n\"It's not. I like sucking dick. A lot.\"\n\n\"It seems like an odd thing to like.\"\n\n\"It's not.\"\n\nAfter a few moments of staring into each other's faces, Wardo broke the silence by pulling me toward him, and planting his mouth on mine. I am sure he tasted himself on my tongue, as the kiss was just as deep and long as the one we had shared earlier. When we broke, he said \"We better get to bed. We have another long day ahead of us tomorrow.\"\n\nI got up and walked toward my room. To my surprise, Wardo followed and climbed into bed beside me. As always, he fell asleep on his back with his arms behind his head. I fell asleep right next to him, just as I had in Mrs. Joyce's kindergarten class thirty or so years before. When I woke up, I was on my right side, and he was wrapped around me, clutching my chest, just like that morning in Paris ten years before. I pulled his hand to my mouth and kissed it. He responded by kissing the back of my neck. \n\nPart Five\n\nThe room was bright, the sun bouncing off the water and into it. I rolled over to face Wardo, my anxiety about what had happened the night before quelled by the kiss to the back of my neck. I said good morning and moved my lips to his, testing whether sobriety would influence his response. Wardo kissed me back, briefly. I moved my lips back to his, and pushed my tongue into his mouth. He pulled back a little, but then slowly opened his mouth to mine. As we kissed, I moved my hand to his ass and pulled his hard dick to mine. Releasing his ass, I grabbed them, his dick on top of mine, and started slowly stroking them together. Wardo broke the kiss.\n\n\"I'm not sure about this,\" he said.\n\n\"I am,\" I insisted, kissing him again. His response confirmed, at least to me, that his diffidence was feigned. I opened my eyes to find him staring at me. I stared back at him as I continued to work our dicks together. Our noses were touching, and our breath was mixed. \n\n\"I want you to fuck me again,\" I said.\n\nThe stroking had had the desired effect, breaking down whatever resistance might otherwise have been. Once you start a straight guy toward an orgasm, it's hard for them to back down.\n\n\"Are you sure?\"\n\n\"Yes. I didn't enjoy the last time as much as I could have.\"\n\nWardo tried to move me onto my back. \n\n\"Not like that . . . . like this,\" I said as I moved him onto his back and hovered over him, bringing our dicks together again. I braced myself with my arms and lowered my lips to Wardo's. I kissed him as deeply as I could. Our tongues danced. I hoped Wardo would resume the stroking I had started, but he did not. He still had never touched my dick.\n\nI moved to his neck. I smelled his armpit. I sucked his nipple. I licked his chest and his side. I tongued his navel. I covered his dick with my mouth. I had intended only to soak his dick so I could sit on it, but the thrill of again having Wardo in my mouth was too much. I flicked at his head and then swallowed him until my face was in his sweaty bush. I slowly worked his dick with my throat. I could tell from the twitching that he was enjoying being deep throated. I worked him until he panted \"I'm getting close.\" I did not want him to come yet, so I pulled off and moved my mouth to where his groin met his thigh. He adjusted his hips and spread his legs wider. I pressed the issue, pushing his legs up, exposing his taint to my tongue. Cognizant of his reluctance from the night before, I decided not to give him a choice. I pushed his legs up a little farther and moved my tongue quickly to his asshole. \n\nHe tensed. \"Hold on.\"\n\nI ignored him, pushing his legs up a little farther and licking as deeply as I could. He remained tense, so I pulled back and whispered, \"Just relax and enjoy this.\"\n\n\"I'm not sure I want you to do that.\"\n\n\"You do,\" I said as I resumed the rim job. After a bit, I suspected from the squirming that Wardo, in fact, wanted me to continue. The fact he grabbed his legs and pulled them to his chest confirmed my suspicion.\n\nI loved eating ass, and I let him know it, both with my enthusiasm and my skill. I went at him as hard as I could. As he relaxed, I pushed my tongue into him. He moaned from his chest. I decided to go for the kill, bringing my hand to his hole and pressing a finger into him to the first knuckle. He was too far gone to stop me, so I pressed the rest of the way in as I moved my mouth back to his dick. As I swirled a finger in his ass, I swirled my tongue around the head of his dick again. As I felt his balls clench, I pushed a second finger into his ass. As I did, he bucked and filled my mouth with a load of thick cum. I eagerly swallowed it and then took him as deep into my gullet as I could. His dick twitched. He let go of his legs, arched his back, threw his head back, and grunted. I worked my fingers in his ass as I continued to work every drop I could out of his twitching dick. I was not going to stop until he could not take any more. He finally signaled he was there by pulling me off him. \n\nI looked up at him, my fingers still in his ass. Sweat was pooled on his stomach, his eyes were closed, and his eyebrows were arched. As I pulled my fingers out of his ass, he went limp. I licked sweat off his stomach and his chest. As he exhaled, I grabbed his legs under my arms and moved my dick to his ass. He opened his eyes wide, but he did not say anything. I stared into his eyes as I tried to enter him. When he opened his mouth, I pressed mine to his so he could not to tell me to \"stop.\"\n\nWhen I pulled my mouth off of his, I whispered, \"Guide me in.\" \n\nHe touched my dick for the first time, using his right hand to direct me to his opening. I pressed my way in as slowly as I could. It took work, but I got all the way in and then held perfectly still. Wardo had winced a few times, but had not uttered a word of resistance. When I thought he was ready, I slowed pulled out. He moved his hands to my hips so he could control the rhythm. I let him dictate the pace as I slid back and forth. Overwhelmed by the events, I was not going to last long. I lowered my mouth to his as I felt my orgasm build in my balls. I sucked Wardo's tongue hard into my mouth as I erupted in his ass. I almost passed out from the pleasure of the orgasm. I broke out into a crisp sweat as I filled him. I kept sucking his tongue until I went limp, letting lose of his legs, slipping out of him, and collapsing onto his chest. ",
        "I was spent. But, Wardo had obviously enjoyed what had happened, I could feel his hard dick against my stomach. \n\nI raised up, spit in my hand, and smeared as much of it as I could on his dick. Before he knew what I was doing, I moved over him and pressed myself down on him. I had been fucked a lot since Paris, so his entry was much easier and far more pleasurable. With one smooth glide, he was buried in me. I clenched his dick with my ass muscles as I rocked back and forth on it. I put my hands on his chest, both for leverage and because I loved the feel of his muscles. \n\nI got hard as I rocked back and forth. I took my dick in my hand. Doing so, I lost some of my rhythm and leverage. To my surprise, Wardo said \"let me do that\" and took over. I put my hand back on his chest and matched my pace to his as he jacked me. We were staring into each other's eyes as our pace and breath quickened. We were in perfect rhythm, and I knew we were going to come together. It was not long before we did. I felt Wardo's dick expand in my ass as I shot an arc of cum over him and onto the headboard. Wardo grunted and raised his head as he came. My second shot hit him in the face, and the rest landed on his chest and stomach. I was exhausted as I lay on him, mixing my sweat and cum, catching my breath. He clamped his arms around me and held me and we just laid there, soaking each other in.\n\nHe broke the spell. \"I need to clean my face.\"\n\nI raised up and looked at him. My second shot was thinning and running down his cheek. Instinctively, I lowered my face and licked it off of him. He started to laugh.\n\n\"Why are you laughing?\" I asked, my head still next to his.\n\n\"I was thinking 'I think I just got my cherry popped' and Neil Diamond's 'Cherry Cherry' popped into my head, and it all just struck me as surreal and laughable. I mean, I just let a guy fuck me, for Chrissake.\"\n\n\"Not a guy,\" I said. \"Your nap buddy.\" Then I started laughing, too. \n\n\"Why are you laughing?\" he asked, hitting the \"you.\"\n\n\"Because, I just took your cherry, and you're thinking of Neil Diamond, and it is surreal and laughable. You just let me fuck you.\"\n\nPart Six\n\nAs we waited for our flights in the airport (I was headed to Chicago and Wardo was headed to Indy), we shared a drink. We were at a small table, and I pressed my leg to his. He pressed back and smiled. When it was time to go to our gates, we embraced. \n\n\"If I don't see you before, I'll see you at the wedding,\" I said.\n\n\"Let's try to get together before that,\" he said. \"Just you and me, two nap buddies having one last weekend together as bachelors.\"\n\n\"Sounds great,\" I said. \"How about this weekend? I can drive down or you can drive up.\"\n\n\"I'll drive up,\" Wardo offered.\n\nWardo rolled into Wrigleyville about 8 p.m. on Friday night. After we stowed his bag in my second bedroom, we headed out for dinner and drinks. We ate at a local joint, then headed to my favorite neighborhood bar. We bought a bottle of vodka and filled our own glasses while we watched the Cubs and Pirates spar and talked.\n\n\"So, are you excited for the wedding?\" I asked.\n\n\"I guess. I think I'm more excited for it to be over. It's a lot of cost, effort, and time for a single day.\"\n\n\"I've never understood that.\"\n\n\"Me, either. But, Jenny's been dreaming of this day for years.\"\n\nChanging the subject, I asked \"What do you want to do this weekend?\"\n\n\"Anything you want,\" he said. \"I'm here to see you, not Chicago.\" \n\nI wondered if his answer was loaded. I am not a naturally patient person, but I decided that patience was a virtue at that point.\n\nAfter another vodka, Wardo asked me about my personal life. He wanted to know if I was dating anyone (I wasn't) and if I had ever seriously dated anyone (I had). He also wanted to know about when I \"turned gay.\"\n\n\"You're such a rube,\" I said, a little disappointed. \"I didn't 'turn gay,' Dipshit. I was born gay. No one would 'turn gay.' It's not fun being different from most everyone else, especially when you grow up Catholic and are told over and over that what you are is against God's will and will lead to eternal damnation.\"\n\n\"Were you gay in high school?\"\n\n\"Yes, Dipshit. As I just indicated, I was born gay. So, I had to be gay in high school.\"\n\n\"I mean, did you know you were gay in high school?\" he clarified.\n\n\"Yes.\"\n\n\"Why didn't you tell me? I was your best friend. You could have trusted me.\" He seemed wounded as he talked.\n\n\"I didn't trust anyone. Being gay in our high school would have been the end of me. Can you imagine how Jim and Matt and Bill would have treated me? It was bad enough I was a brain. I'd have been run out on a rail, if I was a gay brain.\"\n\n\"Still, I wish I had known,\" Wardo offered.\n\n\"Why?\" \n\n\"I don't know. It's weird. It wouldn't have mattered, but I guess it might have mattered.\"\n\nI didn't understand his answer then. I did eventually. \n\n\"Can I tell you something?\" I asked.\n\n\"Sure.\"\n\n\"When we were in high school, I licked your nipple. I was staying at your house. You were asleep. I couldn't help myself.\" I paused, realizing I sounded creepy. \"I'm sorry.\"\n\n\"So, you wanted me in high school?\"\n\n\"Wanted you? I more than wanted you, Wardo. I was madly in love with you.\"\n\n\"Why didn't you tell me?\" he asked.\n\n\"What would have been the point? Other than to ruin our friendship? How would you have reacted if I had pledged my love for you? You'd have run, leaving us in ruins.\"\n\n\"Well, you're telling me now, and I'm not running.\" \n\n\"That was then, this is now,\" I offered.\n\n\"I wish I had known.\"\n\n\"Why?\" I asked. \"So you could have asked me to the prom? Or asked me to go steady?\"\n\n\"I don't know. I just wish I had known.\"\n\nWe drank on, as I wondered why. We talked and talked, talking endlessly about nothing. We were six again, playing long past the time reasonable people would have gotten bored. As we walked back to my condo, Wardo put his arm around me and pulled me into him. A passerby would have taken us for lovers.\n\nHome, we clumsily said good night and headed to our separate rooms. I stripped down and climbed into my bed, a little frustrated and wondering if I should have invited Wardo to share a bed with me, as we had so many times before. As I wondered, Eddie appeared in my door, wearing only boxers.\n\n\"Are you awake?\" he asked.\n\n\"Sure.\"\n\nHe moved to the edge of the bed and sat down. \"Can I sleep in here?\"\n\n\"Sure. But, I'm naked.\"\n\n\"I'll get naked, too,\" he said, sliding his boxers off and sliding in next to me. His mouth was immediately on mine. \"I didn't drive three hours to sleep alone,\" he whispered in my ear when our kiss ended. \"I drove here to be with you.\"\n\nWe made out as we rolled back and forth on the bed, each of us trying to get the upper hand. Eddie won and pinned me down. \"I want to fuck you,\" he said. \n\n\"There are condoms and lube in the drawer,\" I said.\n\n\"Do I need a condom?\" he asked.\n\n\"To be safe.\"\n\n\"We didn't use them last weekend.\"\n\n\"We didn't have any.\"\n\n\"I don't like them. If you're sick, then it's already too late for me.\"\n\nHe pulled the lube out of the drawer and coated himself. I raised my legs and guided him into me. Wardo closed his eyes as he fucked me. I wanted him to slow down and make it last, but he seemed too lost in it already. I focused on his face as I jacked myself to the brink. I held off until I felt him swell inside me. We came together, noisily.\n\nAfter we cleaned up, Wardo settled on his back, and I laid with my head on his shoulder, his arm around me while I played with his chest hair and traced his collarbone. \n\n\"I like fucking you,\" he said.\n\n\"I like when you fuck me.\"\n\n\"I'm not surprised by that,\" he responded. \"You're gay. But, I'm surprised I like it. I'm not gay.\"\n\nI almost responded \"the evidence suggests otherwise,\" but I thought better of it. I kissed his nipple instead.\n\n\"When did you figure out you were gay?\" he asked.\n\n\"I don't know. I think I always knew. I always liked looking at men more than women. When we were little, I really liked watching Mike work out.\" Mike was Eddie's oldest brother, and he lifted weights long before it became a thing to do so. When he was in high school, he had a sculpted body, and he used to lift weights shirtless in the Estes basement while Eddie and I played with his Hot Wheels. I had stared at him while he did.\n\n\"Can I ask you something?\" I asked.\n\n\"Sure.\"\n\n\"Do you remember the New Year's Eve when we got the hotel room in Indy in hopes of getting laid?\"\n\n\"Sure.\"\n\n\"When we struck out, you drove to the hotel, and said 'we could go in and just sex each other.' If I had said 'okay,' would you have gone through with it?\"\n\n\"I dunno. I was horny. I might've. But, I probably would have gotten off and then left you hanging.\"\n\n\"Did you think I was gay?\"\n\n\"Not at all.\"\n\n\"Then why did you say it?\"\n\n\"I dunno. I was horny. And, you were my best friend. If I was ever going to sex a guy, I'd have wanted it to be you. . . . Why didn't you say anything?\"\n\n\"Are you kidding? I was paralyzed with fear. I worried that you were joking and, if I said 'okay, let's go,' you'd have freaked out.\"\n\n\"I might've. I definitely would have freaked out if we had gone in and gone through with it. It's probably best we didn't.\"\n\n\"You haven't freaked out since.\"\n\n\"I have. I totally freaked out in Paris. I scrubbed myself raw in the shower and tried to figure out a way to get my stuff without seeing you again. It took me a long time to get over the fact that I had fucked you. I tried for a long time to blame you, but honesty won out. It wasn't your fault. But, I couldn't accept that I had done it.\"\n\nI moved my hand to his crotch as he played with my hair. I tickled his dick and his balls. He opened his legs for access.\n\n\"Did you have last weekend planned?\"\n\n\"It was in the back of my head. I suspect I'd have let it pass if it weren't for all the vodka. I'm not very bold, left to myself.\" \n\n\"Did you like it when I took your cherry?\"\n\n\"I'm not sure I liked it. I was more surprised than anything else. I was surprised you were trying to do it. I was more surprised I wanted to let you. And, I was even more surprised it didn't hurt more than it did.\"\n\n\"I liked it.\"\n\n\"I could tell. And, I liked that you liked it. I usually fuck with my eyes closed. I liked that you fucked with your eyes open.\"\n\n\"The next time you fuck me, assuming there is a next time, you should do it with your eyes open.\"\n\n\"Oh, there'll be a next time,\" Wardo promised. \"In the meantime, how about a blow job?\" he asked, pushing my head toward his dick.\n\nI needed little encouragement. I took him in my mouth as my head rested on his stomach. I stroked him as I swirled his head in my mouth. I swallowed all he had when he came.\n\nWhen we were done, we laid face to face and talked some more. I wish I could tell you about what. Likely, we talked about nothing. But, we talked and talked, neither of us wanting the day to end. \n\nPart Seven\n\nWardo fucked me with his eyes open the next morning. I was on my back, and I overcame my timidity and talked him through it, slowing him down so he could fuck me properly. We stared at each other as I held his sides and hips. I came before he did. I was surprised when, after he came, he lowered himself onto me, smearing my cum and our sweat between us and kissing me. I wrapped my arms around him and squeezed him into me. He dozed off as I tickled his back. I dozed off after he did.\n\nWhen we woke up, we showered together. I washed him first, barehanded. I wanted to feel every inch of him. \n\nHe washed me when I had finished washing him. I wasn't sure what he would do when he got to my crotch, but he didn't hesitate, soaping me completely. I got hard as he did.\n\n\"Come up here,\" I said. \"Let's jack each other off while we make out.\"\n\nWardo took me in his hand and lowered his mouth to mine. We came as we kissed, spraying each other.\n\n\"That was hot, Jeffrey,\" he said. Wardo had always used my full Christian name.\n\n\"It was,\" I said, before I lowered myself to his dick to lick some of my cum off of him.\n\n\"That was not,\" he said, when I raised back up.\n\n\"Don't knock it until you try it,\" I warned.\n\n*****\n\nWe spent the day at Wrigley Field, watching the Cubs get trounced by the Bucs. We were drunk on Miller Lite by the time we wandered home for a nap. Without talking, we both stripped naked and climbed into bed. We slept with Eddie wrapped around me, holding hands. As I dozed off, I thought \"this is more than sex.\"\n\nWhen I woke up, Eddie was sitting up reading my book.\n\n\"Hey, sleepy,\" he said.\n\n\"How long have you been awake?\" I asked.\n\n\"About half an hour. I watched you sleep for awhile and then grabbed your book.\" I was reading \"1964,\" the story of racial integration through the Cardinals/Yankees World Series.\n\n\"What do you want to do tonight?\" I asked.\n\n\"You,\" he responded, smiling.\n\n\"I think I'm going to do you tonight,\" I answered, smiling back.\n\nEddie rolled toward me and pulled me into him. \"Oh, you do, do you?\"\n\n\"I do.\"\n\n\"Why don't you do me right now?\"\n\nI pulled my face back. \"Are you sure?\"\n\n\"I am.\"\n\nI took my time getting him ready. By the time I was ready to enter him, I was as hard as a rock and knew I would not last long. I took him face down, thinking it would be easiest on him. I came too fast, before I could find his prostate and show him that being fucked could be pleasurable. I felt like a teenager with no dick control.\n\n\"Sorry. That was too quick.\"\n\n\"You'll go slower next time.\"\n\nI was intoxicated by the promise of next time as I took Eddie's dick into my mouth and gave him the longest, slowest blow job I could. I worked my finger in and out of his ass as I sucked him, searching for his button. When I found it, he flinched and came, filling my mouth.\n\n\"What the hell was that?\" he asked when I was done and next to him, nuzzling my head into his neck.\n\n\"Your prostate. If I could find it while I'm fucking you, you'd see why gay men like getting fucked.\"\n\n\"I don't mind it. But, I can't imagine liking it.\"\n\n\"That's because I haven't found your prostate yet. When I do, you'll go nuts.\" As I laid there, it occurred to me that we were talking like lovers, not friends. It also occurred to me it was the easiest love affair I had ever started. We already knew everything about each other. We had already seen each other through deaths and tragedies. And, we already loved each other, like only best friends for years and years could. All we had to work out was the sex, and the evidence suggested that would not be a problem.\n\n*****\n\nChicago and all it has to offer were just outside my door, but we stayed in that night, eating pizza on the living room floor and talking like a couple. I wanted to ask what was going on, but I feared doing so would break the spell.\n\nEddie leaned against the couch with my head in his lap, playing with my hair. My hand was under his legs. Something was on television, but I don't think either of us was watching whatever it was.\n\n\"I should probably give you a blow job,\" he said, out of the blue and very matter of factly. I turned my face to his and raised my eyebrows.\n\n\"I mean, we've done everything else. So, we should probably do that.\"\n\n\"You don't have to.\"\n\n\"I know. But I kind of want to. I love when you blow me. I'd kind of like to make you feel the way you make me feel. . . . Is it hard?\"\n\n\"No, but it's getting there.\"\n\n\"That's not what I meant.\"\n\n\"I know. I was being funny. . . . It's not hard for me. It's one of my favorite things.\"\n\n\"Does it taste bad?\"\n\n\"It depends on what you're talking about. A dick itself does not really have a taste. It's maybe a little salty. But, it's just skin. Like a finger, only smoother. And softer. Cum has a taste. It can be bitter. It can be sweet. It depends on what you've eaten.\"\n\n\"I'm not sure I'll be able to let you come in my mouth,\" he said.\n\n\"You don't have to.\"\n\n\"Is it bad if I don't?\"\n\n\"You've been blown, so you know it feels better if you do. A lot. But, you don't have to. If you do, you don't have to swallow it. You can spit it out.\"\n\n\"Okay,\" he said. \"I'm ready. Let's do this.\"\n\nI stood up and stepped out of my shorts. I was hard from the talk of him blowing me. I moved in front of him and put my dick in front of his face. He looked at it from both sides, like he was inspecting it. He dabbed the precum off with his forefinger and wiped it on my leg. Just when I thought he might chicken out, he opened his mouth and took my head in. His mouth was wet and warm and I wanted to push the rest of my dick in as far as I could. I resisted, but it was tough.\n\nHe took me in a little farther. I felt him gag a little.\n\n\"You really don't have to do this, Eddie.\" \n\nHe looked up at me, my dick still in his mouth. He pulled back a little and then went back down. Our eyes locked, he started moving back and forth on my dick. I couldn't believe what I was seeing as my dick disappeared and then reappeared, over and over. It was not a great blow job, but the visual was magical. I warned him that I was about to come. He pulled off, and I jacked a load onto his chest. I almost fell down when he dabbed his finger into it and tasted it. I used my shorts to clean the rest of me off of him, and then settled back into him. He put his arms around me, and I intertwined my hands in his.\n\n\"What did you think?\" I asked.\n\n\"It wasn't horrible. After yesterday and today, I thought it might taste like vodka.\"\n\n\"Not about that. About the blow job.\"\n\n\"Oh. It was about how you described it. I'll get used to it.\"\n\nThere it was again. Talk like this was the start of something, not an interlude. It was all I could do not to explore the issue. I am not Job. I want to know right now all there is to know. I do not like allowing things to play out.\n\nI resisted the urge to explore. Instead, I reached my hand back and held his cheek. He folded his head into my hand. \"Eddie, you're my best friend,\" I said, adopting the voice of Jessica Tandy from Driving Miss Daisy.\n\n\"I'm glad,\" Eddie offered back. \"I'm really, really glad.\" \n\nEddie wrapped his legs around mine. We sat like that for a long time, inhaling and exhaling together. I must have dozed off. Eddie woke me up, echoing Top Gun by whispering \"Jeffrey, you big stud, take me to bed or lose me forever\" in my ear.\n\nEddie fucked me missionary style once we were in bed. When he was finished, he blew me again. I should have warned him that I was going to come, but I got lost in it. I came in his mouth. He gagged, but he didn't stop. When he was done, he raced to the bathroom and spit my cum in the sink.\n\nWhen he was settled back beside me, I apologized for not warning him. \n\n\"Don't worry about it,\" he said. \"I've never warned you.\"\n\nAs we laid there waiting for sleep to settle over us, I felt like I was on the edge of a cliff. I decided to dangle one foot off.\n\n\"I love you, Edward.\" \n\n\"I love you, too, Jeffrey.\"\n\nI wanted to jump, but I didn't. Instead, I leaned over and kissed him good-night.\n\nPart Eight\n\nWhen I woke up, Eddie was in the kitchen making breakfast and listening to his iPod. I poured myself coffee and watched him work. He really was a beautiful man. His back was hairless. His calves were rippled. His hands and feet were strong and thick and hairy. I made a note to suck his fingers and toes the next time I sexed him.\n\n\"What time are you leaving today?\" I asked, once he had slid my plate in front of me.\n\n\"As late as possible.\"\n\nWe ate in silence. A very comfortable silence.\n\nAfter we cleaned up, Eddie led me by the hand back to bed. After he took me on my back and finished me with his mouth, he leaned on his elbow and tickled my hairless chest and stomach. \n\n\"What are you thinking?\" I asked.\n\n\"That I was right about two guys.\"\n\n\"How so?\"\n",
        "\"That there'd be a lot of touching. I've never been touched so much. And, that there's be a lot of sex. We've had more sex this weekend than Jenny and I have had this year. Is it always like this?\"\n\n\"I've only had two relationships,\" I said. \"In both, the sex trailed off a little. And, I mean only a little. There was still a lot of it. There's no one to say no. I assume I've been told no, but I don't remember it.\"\n\n\"I'm not going to tell you no.\"\n\n\"So, I can fuck you?\" I asked.\n\n\"You can.\"\n\nI did. Slowly, on his back, so I could stare into his eyes while I gave myself to him. He jacked himself as I fucked him. We came at the same time. I licked his cum off his chest and stomach when I was finished. I continued down his body, licking his hip bone, his thighs, his calves, and his feet. I sucked his toes. He cringed as I did.\n\n\"My feet are really ticklish.\"\n\nHe should not have shared that. I chewed on the ball of his foot. He tried to pull his foot away, but I wouldn't let him.\n\nWe spent the day in bed. Around noon, I went to the kitchen and returned with syrup. I drizzled it all over Wardo and then licked him clean. Around four, he swallowed my cum for the first time, using a finger of syrup to dilute the taste. Around five, he decided he needed to get on the road.\n\n\"I don't want to leave,\" he said.\n\n\"I don't want you to leave.\"\n\n\"Can I come back next weekend?\"\n\n\"Sure. But, isn't Jenny going to pissed?\"\n\n\"I'll take care of Jenny,\" he said, emotionlessly.\n\n*****\n\nWe talked every night that week, usually long into the night. Neither of us broached the subject of what we were doing and where we were headed, but I expected it to come up over the weekend.\n\nIt did, but not immediately. I greeted Eddie at the door and kissed him. \"Let's go to bed,\" he said, as soon as he could break the kiss. We did, and Eddie fucked me greedily as soon as we were naked. When he finished, he stayed on top of me, kissing my mouth and nose.\n\n\"I'm going to cancel the wedding.\"\n\n\"Why?\" I asked.\n\n\"You . . . . This . . . . Us.\"\n\n\"Eddie, you need to think about this. You're not gay.\"\n\n\"I'm not sure how you can say that so certainly. We're doing a lot of gay stuff together, Jeffrey. And I like it. A lot. Maybe that's why I've avoided marriage for so long.\"\n\n\"Or, maybe you're just taking a final walk on the wild side, in the safety of an old friend, before you get married and settle down\"\n\n\"Look,\" he said. \"You're my best friend. Ever. And, now, my lover. It's the best of everything. I've never felt the way I felt last weekend and this week. Something's flipped for me. I missed you so much. You're all I thought about all week. I didn't want to see Jenny. I definitely didn't want to fuck her. I can't marry her. It wouldn't be fair to her. It would be an awful thing to do to her, actually.\"\n\n\"Eddie, are you sure this isn't just a phase?\"\n\n\"Come on, Jeffrey. We've been best friends for thirty years. Did Vegas feel like a phase to you? Did last weekend feel like a phase to you?\"\n\n\"No.\"\n\n\"Well, it doesn't feel like a phase to me, either. It feels like forever. And, I'm ready for forever to start right now.\"\n\nI walked to him, took his hands in mine, and kissed him. We stood in the middle of the room, making out, thirty years of love pouring out and into each other.\n\nWe spent the weekend in bed. We sexed a lot. Wardo told me he liked it best when I straddled his chest and jacked off. He liked the view from below me as I came.\n\nWhen we weren't sexing, we plotted a future together. For awhile, we'd have to commute back and forth. As soon as we could, we were going to settle on a city and start a life together. \n\nAfter breakfast on Sunday, we laid face to face on the sofa, kissing.\n\n\"What are you thinking?\" I asked.\n\n\"I wish you had told me in high school. Or that I wouldn't have gotten freaked out after Paris. We've lost a lot of time.\"\n\n\"Life works out,\" I philosophized. \"We may not have been ready for this then. We might've fucked it up and missed it.\"\n\n\"Maybe. But, I doubt it. Best friends since kindergarten seems like a pretty solid foundation on which to build a life together.\"\n\n\"It does,\" I agreed, kissing his mouth and then his nose and then his forehead.\n\n\"Do you think we'll run out of things to talk about?\" he asked.\n\n\"I doubt it. If we haven't already, I doubt we ever will.\"\n\n*****\n\nEddie and I have been best friends for forty years and lovers the last ten. We settled easily and quickly into us. I expected Eddie to have doubts or to want to experiment with others, if in fact he was gay. He didn't.\n\nI'm still not sure he's gay. I know he's in love with me. Deeply and madly so. \n\nBut, he doesn't seem interested at all in other men. He turns his head to follow her when a beautiful woman walks by, but not when a beautiful man does. I'm the opposite.\n\nHe doesn't gawk at the hot men at the gym. I do. \n\nOur sex life is great. It is frequent and passionate. I get lost in it. It makes me young again.\n\nOur relationship is better. I'm a \"physical touch\" guy, and Eddie lets my hands wander over him whenever. I touch him more than he touches me, which is fine. He's not a \"physical touch\" guy. He's a \"quality time\" guy, so he's happiest when we're hanging out. \n\nWe settled in Denver, mostly for the sunshine, the golf, and the skiing. We are both doing well, and we live in the city, right on Washington Park. We have a great old house and two awesome retrievers, both golden. We call them Uno and Dos.\n\nWe belong to Cherry Hills. Every time we drive in, we sing Neil Diamond's \"Cherry Cherry\" and laugh. We laugh a lot. We have more fun than any couple we know. We do almost everything together, and we have yet to grow tired of each other. It's like we were when we were little boys.\n\nWardo's family did not take the cancellation of the wedding well. They loved Jenny, and he couldn't tell them why he had decided he couldn't marry her. For all they know, we are just roommates, lifelong friends who settled in the same city and are still looking for the right women to marry.\n\nMy mother took our coupling way better than I expected. Whether she'd admit it or not, she knew it was coming. \"You've always been in love with each other,\" she observed. \"Even when you were little boys. You were soul mates from the first day of kindergarten.\"\n\nAs we look back, we agree with her. We've loved each other since that first nap that first day of school. We owe that love to Mrs. Joyce, who first paired us up. And, that love has been an excellent foundation on which to build our life together."
    ],
    "authorname": "DavidPatrick",
    "tags": [
        "friends & lovers",
        "gay male"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/back-to-your-nap-buddy"
}