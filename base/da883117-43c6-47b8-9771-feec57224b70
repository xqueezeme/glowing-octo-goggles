{
    "title": "The Nuclear Option Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 21 - Nuclear War Engaged\n\n\"No, don't do it!\"\n\nAs Cindy raised her arms to kill Bettina, the redheaded reporterette saw a pair of hands grab Cindy's and and hold them in place.\n\nIt was Teresa Croyle, wearing all black, having appeared out of nowhere. Her words got through, and she felt the raw power in Cindy's arms leave her. Together they lowered the green crowbar slowly. Cindy's face showed shock now, shock at what she realized she'd almost done, and the near-miracle that had just saved Bettina's life.\n\n\"Come on, let's go.\" Teresa said, putting her arms around Cindy in a bear hug.. \"This cunt is not worth it. She's not worth it.\" Teresa began leading her BFF to the west door.\n\n\"You should've let her do it, Teresa Cunt!\" Bettina yelled as she got up. \"She's going down for it anyway!\" Teresa just looked back at Bettina with a smirk, then led Cindy out the west door, into the blinding yellow light of the setting sun.\n\n\"Did you get all that?\" Bettina called out, coming around the pallet. And then she got a huge shock.\n\nAmber was lying face down on the ground, her hands zip-tied behind her, and a woman in all black and wearing a black full mask sitting on top of her back. Also trussed up, and with eyeless black masks over their heads, were cub reporter Keith Madden and the four cameramen. Six men in all black, fully masked, were surrounding them. And in front of them, facing Bettina, was a tall, broad-shouldered man, also wearing black. He was also wearing a black cape... and a black Darth Vader mask and helmet. It was actually a modified chemical mask.\n\n\"Is that you, Don?\" Bettina asked, trying to show bravado, though she had just nearly been killed, and still faced death.\n\n\"You have failed me for the last time, Wurtzburg.\" said the masked man, his voice made deep and metallic, like the real Vader's, by the mask's electronics. \"And you have attacked my family for the last time.\" \n\n'Vader' turned and pointed, and Bettina watched in horror as the four videocameras and all the sound equipment were thrown onto the floor in a pile. The masked men brought out black tire irons (not crowbars), and proceeded to smash the equipment to bits. When they were done, nothing but shards of metal, plastic and glass remained.\n\n\"Show your face, you coward.\" Bettina challenged.\n\n\"Take them outside.\" said 'Vader'. The trussed up, masked crew were made to stand up. A black mask was put over Amber's head and face, and they were all marched out the north door.\n\nAnd then the Darth Vader mask came off. Yes, of course it was me. Your Iron Crowbar is a drama queen. Who knew?\n\nI looked malignantly at Bettina. \"I'm not kidding.\" I said, keeping my voice low. \"It's over. I'm going to destroy you. Completely and utterly.\"\n\n\"Going to kill me?\" Bettina snarled.\n\n\"Harrumph. You wish.\" I said. \"Oh, by the way... you recognize this place, don't you? You remember what Ned and his henchmen did to you here?\" Bettina paled; she had remembered from the start that this was the warehouse where she had been brutally beaten and gang-raped. (Author's note: 'Case of the Murdered Lovers', Ch. 04-05.) \"Excellent choice of locale to have this... final... discussion, don't you think?\"\n\n\"God damn you to hell, Don Troy!\"\n\nI stepped up to Bettina and said \"Don't worry. I'm not going to do that to you. And I'm not going to kill you, either, like Cindy was very much just about to do. Wow, I've never seen her that angry before. Amazing what becoming a mother does, how it changes a woman. Amazing what a mother will do to protect her child, n'est pas?.\" Bettina just glared hatefully at me.\n\n\"No, I'm not going to kill you, though I should.\" I whispered. Then I leaned over, like a vulture towering over her, and said: \"I'm going to do much, much worse to you. I'm going to humiliate you, before your colleagues of the God-cursed Press. And why? Just because I can.\" \n\nWith that, and with a movement so fast that she could not hope to counter it, I grabbed Bettina and forced her to the floor on her belly. I zip-tied her hands behind her, and also zip-tied her legs so that she couldn't walk. I secured her cell phone; it was destined for the bottom of the River.\n\n\"Now you stay here.\" I said. \"Maybe, if you're lucky, the Police will come and rescue you. Or maybe not.\" With that, I got up and walked to the west door, putting my Vader mask back on in case someone had eyes on the building...\n\n* * * * * * * * * * * * * * *\n\nBettina found that the zip-tie that bound her hands was not all that tight. After a few minutes of effort, she was able to slip out of her bonds. She was then able to take her shoes off to get the bindings off her legs.\n\nShe got up and went to the north door, where everyone else had been taken. The sight that greeted her stunned her. All of the others were lying on their bellies in a neat row, their wrists and ankles tightly manacled. Further down the road she could see the four KXTC vans. They were all flaming wrecks, worthless hunks of metal burning fiercely out of control.\n\nPart 22 - Regrets\n\n8:30pm, Sunday, March 10th. The meeting at KXTC was a somber one.\n\n\"So all we have is Bettina and Amber's word that Cindy Ross and Teresa Croyle were at the site.\" said Burt West. \"And they can just deny it, it's the word of two Medal-of-Valor-winning Police Officers versus yours, and we don't have a shred of proof that they were there.\"\n\nBy curious coincidence, all cell phones had failed to record anything at the warehouse; all the cameras had been rendered inoperable before Cindy Ross had shown up; and the vans's signals retransmitting from the cameras and audio to KXTC's headquarters has been jammed, and then put totally out of commission.\n\n\"And no one else saw nor heard the voice of Commander Donald Troy.\" continued West. \"Just a bunch of masked people in black clothing that easily snuck up on every one of you without being seen nor heard, that subdued you without a sound, much less a fight.\"\n\n\"And drugged us.\" said Scott Turnbull, Bettina's cameraman, still feeling groggy.\n\nYes, for some strange reason, when Uniformed Officers arrived with the Fire Department at the scene, no one was able to tell the Officers that they'd heard or seen anything. Bettina said that everyone was masked, and she couldn't identify anyone. She knew that there was no point mentioning to the Police that both their Police Commanders and their Captain of Operations had been there. They'd been left with no proof. Their equipment was destroyed, their cellphones taken and likely now in the River...\n\nWest said: \"And those bastards left us with over three quarters of a million dollars in destroyed equipment, from the cameras to the vans and their electronic contents. Yeah, we have insurance, but it won't cover it all, and I have to explain it to the insurance company. This was... Jesus Christ, this is bad. And I haven't even mentioned that Cindy Ross could've killed you, Bettina and Amber.\"\n\n\"She would have,\" said Bettina, \"if Teresa Cunt hadn't've stopped her.\"\n\n\"All right, everyone except Bettina and Amber can go\" said West. \"Go home, get some rest, go to the Hospital Emergency Room if you start getting really sick.\" Everyone scrambled to get out while the getting was good.\n\nOnce they were alone, West sat down at the end of the table, the women sitting on each side of him. \"Well, ladies,\" he said, \"it didn't work... yet again. Tell me once again what happened, and this time tell me what you weren't willing to say in front of everyone else.\"\n\nThe women told the story again, and Bettina said \"The Iron Crowbar said that he wasn't going to kill me, that he was going to humiliate me in front of my Press colleagues.\"\n\n\"How?\" asked West. \"What does he have on you, Bettina? What is his nuclear option on you? I need to know.\"\n\n\"I have no idea.\" said Bettina. \"There's not much he can do, without admitting being there tonight, or complicity in something himself, or breaking the law himself in some way.\"\n\n\"And you, Amber?\" asked West. \"Does he have anything left on you? I need the truth on this.\"\n\n\"Nothing I know of.\" said Amber. \"The baby is born, and it doesn't matter now if the whole world knows it's Nick Eastwood's. They can't try me twice for the same crimes; all the legal stuff is behind me now.\"\n\n\"He must have something.\" said West, mostly to himself. \"What? What could it be?\"\n\n\"We still have one trump card.\" said Bettina. \"We can reveal the name of Betsy's biological father to the world. Or we can withhold it, in exchange for Troy calling off the war.\"\n\n\"Oh, we're wayyyy beyond that now.\" said Amber. \"We might as well put it out there.\"\n\n\"And you have proof of it?\" West asked.\n\n\"Yes, Burt.\" said Bettina. \"We have those photos of the dossier Laura Fredricson compiled. We verified the test data with sources at University Hospital, though they didn't know the names involved, but it's the same tests, so that's confirmed.\"\n\n\"Who sent you those photos from the dossier?\" West asked. \"And don't tell me 'a source'.\" he said, making air quotes.\n\n\"We're not totally sure.\" said Bettina. \"It was sent to us, we didn't ask for it. It could be someone in Fredricson's office, or one of her students. And we're don't know why it was sent to us.\"\n\n\"And even when, not if but when, we run with this,\" said West, \"what next?\"\n\n\"Then we're out of bullets.\" said Amber. \"We have nothing left on Troy, except to keep calling him the white nationalist he is, and keep accusing him of Police brutality.\"\n\nWest nodded thoughtfully. \"Okay. Ladies, I'm pulling you both back from this. We'll let Lester Holder continue the racism angle against Troy. That's why I agreed to hire him back; Lester can go all-in on the racism accusations, and he'll have a lot of help from Eldrick X. Weaver, who was robbed of his rightful Mayoral win by a dirty 'Uncle Tom' judge.\"\n\n\"You two, though, need to scale back.\" West admonished. \"Troy said he was going to go after you. Let's hold back until he lays his cards on the table. Then we'll deal with it, and then we can look for new avenues of attack. Okay, let's go home. Get some sleep, and we'll start again tomorrow morning.\"\n\nAmber got up and left. Bettina did not. She was in a 'reverie', lost in thought. West said \"Bettina, you okay?\"\n\nBettina said \"I almost wish that Ross had split my head in two, or the Iron Crowbar had killed me on the spot. This... the waiting, the wondering... is worse. Much worse.\"\n\n\"Yeah, I know.\" said West. \"And I know his wife has the Psychology degrees, but she's not the best master of it in that family, may God damn him...\"\n\n* * * * * * * * * * * * * * *\n\nMeanwhile...\n\nThe last glimmer of the setting sun could be seen on the western horizon as Laura turned on the gas to the fire pot on the back deck. She heard the cars drive up and saw the headlights come up the driveway to the front.\n\nA moment later, Teresa brought Cindy inside. Callie Carrington was holding Betsy, who let out a squeal of happiness at the sight of Cindy, who took her baby into her arms for a long hug.\n\n\"Rough day at the office?\" Callie said, meaning it humorously. The look on Teresa's face conveyed the appropriate warning.\n\n\"Worse.\" said Cindy. She handed Betsy off to Teresa for a hug, then received one from Callie, who realized that Cindy was crying as she held her.\n\n\"We've got supper cooking.\" Callie said. \"You'll feel better after you eat.\"\n\n\"Thanks.\" said Cindy. \"If you guys don't mind, I need a moment alone on the deck.\" As she turned for the back door, she found Carole Troy in front of her, holding one of her dad's trenchcoats.\n\n\"Here, Aunt Cindy.\" Carole said. \"Better wrap up warm. There's an east wind blowing. And it's cold out there, even with the fire in the pot. \"\n\n\"Aw, thank you, Sweetie.\" Cindy said. She hugged Carole, then put the trenchcoat on, finding it way too tall, but not too big in the shoulders and chest. She went outside and sat down on the metal mesh loveseat, and turned her thoughts inward... deeply inward.\n\nWhat seemed like a long time later, but was only moments, she came back to find Callie coming up to her, with two drinks in her hands. She gave one to Cindy, then sat down by her in the loveseat.\n\n\"Canadian.\" Cindy said as she downed most of the drink in two gulps. \"I needed that.\"\n\n\"What happened?\" Callie asked.\n\n\"I almost murdered two reporters. In cold blood.\" Cindy said, looking at the flames in the fire pot in front of them. \"They're doing everything they can to take Betsy from us. And do you want to know why? They said they're doing it just to show they can. They want to ruin that child's life, and ours, just to prove some alpha-male point... even though they're two women.\"\n\n\"Is Betsy in danger?\" Callie asked.\n\n\"She's very much in danger of being taken from us.\" Cindy said. \"They'll put her in a foster home, and we can only hope and pray that it's a good family. And I'll never see her... again...\" She began sobbing.\n\n\"Maybe Don can help us.\" Callie said as she put her arm around her fianc\u00e9e to comfort her.\n\n\"Even my dad can't help, if DFACS comes for Betsy.\" Cindy said forlornly.\n\n\"Well, we're staying here tonight.\" Callie said. \"If they do come before tomorrow, they'll find our condo empty. And if they come up here, they'd better bring an Army battalion with them. But... I think it'll be okay.\" \n\nSeeing as she was not getting through, she said \"I'm going to go back in and feed Betsy before we all eat.\" She got up and left, leaving Cindy with the night, and the sparkling light of a train coming out of the western horizon towards Town...\n\n* * * * * * * * * * * * * * *\n\nThe night air was growing colder when Cindy heard footsteps behind her. Thinking it was Callie coming to get her for dinner, she turned around. It was not Callie.\n\n\"You are sitting on my side of the seat.\" I said as I came around. \"Scoot over.\" Cindy scooted to the left side, and I sat down on the right side, as I normally do. I was wearing a trenchcoat also, courtesy of Carole's raiding of the coat closet.\n\n\"We should put a plaque on that side, saying it's yours only.\" Cindy quipped, though showing no humor in her face nor voice.\n\n\"Bowser might not approve.\" I replied. \"And if I have my choice, I'll die sitting right here, in my old age, watching over my Town.\" I felt Cindy's eyes moving to peer at me as I watched over my Town.\n\nAfter a moment, I looked at her and said \"Nice fashion statement in outerwear, there.\"\n\nCindy smiled for the first time. \"Carole brought it to me, said to 'bundle up warm, there's an east wind blowing'. She doesn't know how right she really is.\"\n\n\"Oh, I think she does.\" I said. \"She bears watching. Five years old, and she bears watching already.\"\n\n\"Don...\" Cindy started, then said \"Did you kill them?\"\n\n\"No, they're not dead.\" I said, understanding. \"But when I'm done with them, they will wish... they... were.\"\n\n\"How did you know?\" Cindy asked. \"How did you know I'd called them there? I never told you, nor Teresa, nor even my father.\"\n\n\"You will have to work much harder if you wish to deceive me.\" I said. \"I do admit that it was an excellent touch to call Bettina to the same place she was brutalized all those years ago. But it also made it easier to find you.\"\n\n\"Don...\" Cindy said, her voice sounding miserable, \"I almost murdered two people today. In cold blood. They were goading me about taking Betsy from me, and all I could think about was that precious baby...\" She struggled to regain control, and not break down crying. \"I guess... I guess I know how you must've felt when Carole was chained to that chair in that warehouse.\"\n\n\"Yes.\" I said. \"Becoming a parent changes one's perspectives.\"\n\n\"How do you deal with it?\" Cindy asked. \"How do you deal with the fear that your enemies might come against you through your children? Like they have... several times already.\"\n\n\"It's my greatest fear, and Laura's.\" I said. \"As to how I deal with it...\" I turned and looked Cindy straight in the eyes as I said: \"Fear is a luxury... that I cannot afford.\"\n\nCindy nodded, then said \"You know what's the worst thing about all this? I actually took up for those bitches, and their colleagues of the Press. Against you. And you were right, all along, and I was wrong. You were right to curse me out, you've been right to wage war on those bastards all along. They not only are trying to harm me and my baby, they drove a wedge between me and the one person who has been there for me all this time, who has had my back, who brought me the truth of my family... who is my family. And I went against you... for them! Oh God, I'm so ashamed!\"\n\nCindy's face fell into her hands as she began crying, sobs racking her body as Chief Griswold had cried in grief over the loss of his son. I put my arm around Cindy and pulled her to me.\n\n\"It's okay.\" I said. \"Nothing to be ashamed about. Now you know. Now you have seen the depths of their unappeasable hatred. And now, we will work together to annihilate them, Crowbars united and unstoppable.\"\n\nCindy recovered, then said \"You and your dramatic speeches. You're as bad as Sheriff Griswold was when he was Police Chief, always quoting Klingon scripture to us.\" That made me laugh, partly because Cindy was right about both me and Griswold and our dramatics.\n\n\"So... what about Betsy?\" Cindy asked. \"They're going to come after her harder than ever now.\"\n\n\"Now that offends me.\" I said. \"I can understand you taking the Press's side, though I never agreed with your position. But haven't you figured out by now... that I always take care of my people?\"\n\nCindy just nodded. After a moment, I said \"Let's go back in, and eat. I'm starving. It's been a... busy weekend, wouldn't you say?\" \n\nCindy laughed. \"Yeah, except for that Captain of Operations of yours, just twiddling her thumbs all day.\" That made me laugh as we got up and went back inside...\n\nPart 23 - Your Iron Crowbar At Work\n\nAt 6:55am, Monday, March 11th, Sheriff Antonio Griswold came into the Chief's Conference Room at Police Headquarters. His eyes lit up as he saw his Police Commander and Deputy Chief already there, sitting and talking amiably. He was an excellent Detective himself, and he made the proper deductions.\n\n\"Now that is what I like to see!\" he growled happily. \"You two young whippersnappers finally made up.\"\n\n\"Yes sir.\" I said. \"And may the living God have mercy on KXTC's worthless souls.\" Cindy nodded vigorously in agreement.\n\nWe were soon joined by my other Angels and the Police Chief. \"As you like to say, Commanderrrr...\" said Chief Moynahan, \"let's watch some TV.\" We turned on the monitor...\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said the redheaded MILF reporterette at 7:00am, from the anchor desk at the KXTC studios. They were a wee bit short of mobile vans and cameras at the moment, I surmised.\n\nBettina began: \"Channel Two News has learned multiple lawsuits will be filed against the Department of Family and Children Services, or DFACS, and the State Legislature will make harsh inquires about DFACS, after KXTC's hard-hitting investigative reporting on the abuse of the normal adoption process that allowed Town & County Deputy Chief Cindy Ross to break in line and be awarded custody of a baby.\"",
        "As we listened to Bettina re-hash the news------ er, her agenda, I was expecting, and dreading, the possibility that she knew who Betsy's biological father was, and would tell the world. This was her last chance to do so... but she did not.\n\n\"And in State news,\" Bettina said, \"The Judiciary Committee of the State House, chaired by State Rep. Justin Madoff, is holding hearings to continue the investigation of Governor Val Jared and Commander Troy. Representative Madoff said this. Roll tape.\" \n\nTape rolled, showing Madoff saying \"The Mullen Report was not the end of our investigation of the crimes of Governor Jared, but only the beginning. We will continue the work Robert Mullen began, and we will begin by subpoenaing Commander Donald Troy to testify, under oath, about his role in Governor Jared's abuse of power. If Commander Troy does not testify and answer our questions, he will be cited for Contempt of the Legislature. If he takes the Fifth, he will be given immunity, but he will be forced to answer our questions under oath.\"\n\nMore tape rolled, showing State Attorney General Karl Handel saying \"If the Legislature refers a Contempt of the Legislature citation against Police Commander Donald Troy, I am ready and eager to act upon it immediately to arrest Commander Troy and throw him in prison.\"\n\nBack to Bettina live: \"As usual, Commander Troy has not responded to KXTC's repeated requests for comment. Meanwhile, the Army and the FBI are refusing to comment on what they called a 'training exercise' held in this County over the last few days. The Army has refused to give any information on the nature of the exercise, where people were stopped and their cars unlawfully searched by military authorities. FOIA requests have been refused, and several lawsuits by citizens have been moved to Federal Court, where they were summarily dismissed with prejudice. Sources tell Channel Two news that an actual serious incident occurred several days ago, but the exact nature of that incident has not been disclosed...\"\n\n* * * * * * * * * * * * * * *\n\n\"Hello and welcome to Fox University Sunrise.\" said Catrina Pierce. \"Good morning, Meredith.\"\n\n\"Good morning, Catrina.\" said Meredith Peller. \"Here's the news headlines for today. Multiple lawsuits are being filed by many Citizens of the Town & County after what were called illegal searches of their cars over the weekend. The Army conducted what they are calling a 'training exercise', and in the process closed off all road routes out of the County. No one could leave without having their cars searched, and many Citizens refused to submit to the searches. Neither the military nor the FBI would comment on the searches nor the reason for the so-called 'emergency exercise'.\"\n\n\"And in other news,\" Catrina said, \"some Social Justice groups expressed outrage at the comments of the State Right to Life Committee's chairman, the Reverend Steven Ikea, who said that TCPD Commander Cindy Ross should have been denied foster parenthood of a baby child, and that her petition to adopt the child should be turned down, because she is a lesbian.\"\n\nCatrina continued: \"Town & County Police Chief Sean Moynahan issued a blistering statement accusing the Reverend Ikea of 'hate speech'. The Reverend Ikea is a former TCPD Detective and current SBI Chaplain, and Chief Moynahan demanded Ikea's resignation from the SBI for his insensitive comments. Here with us is our reporter Priya Ajmani. Priya, what about these statements, and the very strong rhetoric on both sides?\"\n\nPriya said \"All I am going to say is that I have known Cindy Ross for many years, as a reporter covering the TCPD, and as a personal friend. Cindy Ross is a woman of great accomplishment, and also of great integrity. Cindy Ross is going to be a wonderful mother, and that child is very lucky to be part of Cindy Ross's family, which includes her own mother, and her sister, the Police Chief of Nextdoor County...\"\n\n* * * * * * * * * * * * * * *\n\n\"Looks like KFXU wants to do business with us.\" I said. \"Certainly a... different... attitude than that of KXTC.\"\n\n\"No doubt.\" said Sheriff Griswold.\n\n\"Wow, Priya has sure changed.\" Tanya Perlman said. \"There was a time she was the bad reporter, and Bettina was the good reporter.\"\n\n\"Ultimately, they're all bad.\" I said. \"But we'll take what we can get. Not to tell you your job, Commander Ross, but if KFXU gets exclusive access to us, that would not hurt my feelings. As to my own public comments, if I make any at all, I insist they be through KFXU, and KXTC be excluded from them.\"\n\n\"For the record,\" said Chief Moynahan, \"that was a personal statement by the Iron Crowbar, not one in his official capacity as Police Commander.\" When I turned to look at him, he said \"I don't want any legal troubles to befall you nor anyone else in the TCPD.\"\n\n\"Har.\" said Griswold, and I could not tell exactly to whom the comment was directed, nor exactly what it was he trying to convey...\n\n* * * * * * * * * * * * * * *\n\nAs we continued to watch, Cindy's personal cellphone rang and she answered it. Her eyes widened as she listened. When she disconnected, she said \"I've been told to be in Judge Rodney K. Watts's Courtroom at 8:30am sharp... with Betsy.\" Her face was a mask of worry, as were Teresa's, Tanya's, and Chief Moynahan's. It was Tanya who first noticed Sheriff Griswold and me, and that our faces were untroubled.\n\n\"The Clan of the Crowbar is up to something.\" Tanya said, her eyes sparkling and her cheeks rosy.\n\n\"I wish they'd share with their Clan-mates.\" Teresa said, not smiling as much.\n\n\"Well, Commander Ross,\" I said, \"you are about to have your day in Court. May I suggest a Duty Dress jacket to cover that poorly-pressed Uniform shirt of yours?\" I was teasing; Cindy's shirt creases were so sharp, someone could cut their fingers on them. I still bore the brunt of a hard stare from ice-blue eyes...\n\n* * * * * * * * * * * * * * *\n\n\"Oyez! Oyez! Oyez!\" called out the Bailiff. \"All rise! Court is now in session, the honorable Judge Rodney K. Watts presiding.\" \n\nEveryone stood. Cindy was in the front row, holding Betsy. Next to her was Callie Carrington, then Cindy's mother Maggie, then Nextdoor County Police Chief Molly Evans, also in a Duty Dress jacket. \n\nBehind them were Sheriff Griswold, Police Chief Moynahan, me, Laura, and Captain Teresa Croyle. And in other rows were subhuman creatures that called themselves 'journalists'. They looked rabid, and smelled blood.\n\n\"Be seated, please.\" said Judge Watts as he came in and took his place in his chair. \"First case, please.\" The adoption case of Betsy Ross was announced. Cindy and her family came forward, as did her attorneys Cy Hart and Mike G. Todd.\n\n\"I am pleased to announce,\" said Judge Watts, \"that the final obstacle regarding this adoption has been cleared. The biological father of the child has been found, and has yielded his claims to the child. I have placed that document under Court seal; it will not become public knowledge.\"\n\n\"Let me also give everyone, especially the Press, a warning.\" said Judge Watts. \"This case is governed by the laws regarding adoptions, which means the information of this case is not public information, and is protected by privacy laws. Any attempt by anyone, particularly by members of the Press, to learn this information and to subsequently report it publicly, will generate immediate warrants for the arrests of those leakers, which I am sure the Town & County Police Department will eagerly execute.\"\n\nThe Press looked at Watts with growing hatred in their eyes. Watts ignored them; he was looking down at Cindy. \"Is this Betsy, Commander Ross?\"\n\n\"Yes, Your Honor.\" Cindy said happily.\n\n\"Congratulations, Commander,\" said Watts, \"she is now your daughter. The petition to adopt is granted by this Court.\" He banged his gavel. So let it be written, so let it be done, as Yul Brenner would say...\n\n\"Thank you, Your Honor!\" Cindy gasped, tears of absolute joy running down her face. She and Callie hugged, something of a 'group hug' with Betsy, and Maggie and Molly hugged them as well.\n\nBehind them, Laura and I hugged, then we both hugged Sheriff Griswold. Yes, the day before, during that Sunday meeting, Laura and I convinced Judge Watts to go ahead and grant the adoption petition. And the Judge had not been hard to convince. That was one plan of Your Iron Crowbar that had come together, one of the things I'd told Dr. Eckhart we could do...\n\nAs everyone, including the Press, filed out of the Courtroom, Sheriff Griswold and I stayed back for a moment. The next cases on the docket were lawsuits filed by the State Life to Right Committee and the Committee of Concerned Citizens. They were dismissed with prejudice by Judge Watts, who said it was a moot point since the adoption was complete, and added that those two groups had no standing to file lawsuits against DFACS.\n\nBut it was what came next that we were interested in hearing... the requests of the Town & County District Attorney's Office for arrest warrants...\n\n* * * * * * * * * * * * * * *\n\n*Whirrrrrrrr*\n\n\"Turn on the TV!\" Captain Tanya Perlman practically shouted as she drove into MCD at a high rate of speed. Julia Rodriguez had the remote, and turned the monitors on to KFXU.\n\n\"And it's official!\" said Priya Ajmani, reporting from the Courthouse. \"Judge Rodney K. Watts has granted the adoption petition to Cindy Ross, and dismissed with prejudice the lawsuits against DFACS by the State Right to Life Committee and other Social Justice groups!\"\n\nMCD broke out into a loud cheer, then settled down as Priya continued: \"I have with me the new mother, Cindy Ross. Commander, how do you feel right now?\"\n\n\"It... it's wonderful!\" said Cindy, still emotional. Betsy was not with her; Cindy had not wanted Betsy's face to be broadcast to the world, as a security measure, so Callie and Laura were taking Betsy out the 'back way', and back to Laura's office and the nursery behind it, escorted by TCPD Officers that were intolerant of Press antics.\n\n\"I'm just so happy right now.\" Cindy continued. \"And I want to thank everyone who helped make this day possible, and everyone who has supported us with their thoughts and well wishes.\"\n\n\"What do you think about those who wanted to deny you this adoption because of your sexual orientation?\" Priya asked.\n\n\"There are people out there who need to join the rest of us in this century.\" Cindy said. \"Their hatred is to be treated for what it is, and ignored------\"\n\n\"I'm sorry to interrupt.\" Priya said to Cindy, then turned to the camera and said \"We're getting word that District Attorney Miriam Walters is speaking at City Hall! Let's go to our political reporter Greg Wallace. Greg!\"\n\n\"Thank you, Priya.\" Wallace said quietly in the City Hall atrium as the feed switched over to him. \"District Attorney Miriam Walters is coming to the podium now. Let's listen in.\"\n\n\"Thank you for coming.\" said D.A. Walters. \"The Town & County District Attorney's Office has re-opened the case of the criminal conspiracy to slander now-Mayor Daniel Allgood. We have sworn out warrants for the arrests of Gayle Tunnin... and Della Harlow.\"\n\nAnother cheer broke out in MCD...\n\n* * * * * * * * * * * * * * *\n\nSheriff Griswold and I came up to the Press frenzy that had been surrounding Cindy. Lieutenant Rudistan came up to us well within their hearing, and Rudistan could not hide his extremely jovial attitude as he said \"Commander, the Court issued the warrants for Tunnin and Harlow.\"\n\n\"Well, what are you waiting for, Mr. Rudistan?\" I asked loudly. \"Go execute those warrants and make those arrests!\" I turned to the Press and said loudly: \"If you want to film a perp walk or two, you better get your mobile units moving!\" As the reporters scattered and scurried about, I saw a redhead glaring at me. Bettina had understood my comment about 'mobile units', and if looks could kill, I'd be dead and she'd be getting arrested for it...\n\n* * * * * * * * * * * * * * *\n\nPolice Corporal Inga Gunddottar led Gayle Tunnin through booking. Patrol Office Lydia Green was waiting to escort Della Harlow through, but was interdicted.\n\n\"Return to your duties, Patrol Officer Green.\" said Captain Teresa Croyle. \"I'll be handling this one myself.\" There was no way she was allowing Lydia Green to be alone with Della Harlow for any length of time. And besides, after her own clashes with Harlow in the past, Teresa was going to enjoy taking this one personally...\n\n* * * * * * * * * * * * * * *\n\nGayle Tunnin was in Interrogation-2, with her lawyer H.J. Lynch. She'd always been 'big boned', but now was getting more seriously overweight, and the orange jumper she was wearing did not help her appearance. D.A. Miriam Walters went into I-2 with Detective Julia Rodriguez.\n\n\"What the hell is this about?\" snarled Lynch as the two female Officers of the Court came in and sat down on their side of the table.\n\n\"If you'll keep your mouth shut long enough to let the District Attorney speak,\" said Detective Rodriguez, \"you'll find out.\"\n\n\"Yes.\" said Miriam Walters, her beady black eyes staring coldly at Gayle Tunnin. \"Ms. Tunnin, we have you cold, ice cold, for these charges, and Lt. Holloway is all ready to testify against you. But I am prepared to offer you a plea deal, and you will avoid prison time if you just answer this question and a few follow ups: Was Amber Harris at the meeting where you discussed the plan to slander Daniel Allgood?...\"\n\n* * * * * * * * * * * * * * *\n\nHalf an hour later, Sheriff Griswold and I stood alone in the anteroom to Interrogation-1. Inside were Della Harlow and her attorney, the sleazy Max Chambliss of Gresham & Mason, P.C.\n\n\"I really hate this.\" said Griswold. \"After what she did, using that photo of my son in her political campaign...\"\n\n\"Yes sir.\" I said. \"I agree with you. But what Amber and Bettina tried to do to Betsy, have her taken away from Cindy and be put into the black hole of the foster care system... to me, that's as bad as what Hardwood did, putting Carole in a warehouse full of explosives.\"\n\n\"I know. I know. We're doing the right thing.\" said Griswold. \"I still hate it.\" \n\nAt that moment, Miriam Walters came into the anteroom. \"Are you ready, Commander?\" she asked.\n\n\"Yes ma'am.\" I said, very ready. \"Let's do this.\" I followed her into I-1, and we sat down on the other side of the table from the perp and her lawyer. I noticed that the sleazy lawyer had become worried when Your Iron Crowbar entered the room. Good! I thought. You damn well better fear me...\n\n\"Gayle Tunnin has taken a plea deal.\" said District Attorney Walters. \"As part of that, she has named you, Della Harlow, as one of the conspirators at the meeting where you planned to slander Daniel Allgood with a false charge of sexual harassment. And with Lt. Holloway's testimony to come, we have you ice cold for your crimes.\"\n\n\"Then we'll see you in Court.\" snarled Chambliss. \"Ms. Harlow, invoke now.\"\n\n\"Before you do, Ms. Harlow,\" I said, \"you should listen to what we have to say. As much as I absolutely hate it, the District Attorney is very generously willing to make you an offer of a plea deal, with no prison time. If you listen to this slug that purports to be your legal representation, you risk being convicted by a Jury and sentenced to ten years or more doing hard time at Madison County Women's Prison.\"\n\n\"Invoke, Ms. Harlow, and we'll have your bail hearing within the hour.\" said Chambliss, seemingly almost desperate to get Della to stay silent.\n\n\"What are your terms?\" Harlow asked, obviously a lot smarter than the piece of crap lawyer. After all, she was once a TCPD Deputy Chief, dontcha know...\n\nMiriam Walters named the terms, then said \"All you have to do is truthfully testify that Amber Harris was a participant at that meeting, that she actively participated in the plot to slander Mr. Allgood...\"\n\n* * * * * * * * * * * * * * *\n\n11:40am, Monday, March 11th. A heavily armed and armored detail of Town & County Police Officers entered the offices of KXTC, led by Captain Teresa Croyle. They marched through the 'City Room' and to the office of Burt West. Teresa did not bother to knock as she opened the door, seeing West, Bettina Wurtzburg, Amber Harris, and Lester Holder at the round table in front of West's desk.\n\n\"What the hell are you doing, barging into my office like this?\" roared West as he rose to his feet.\n\n\"Stay where you are, West.\" ordered Captain Croyle. \"Keep your hands where I can see them.\" She extended a piece of paper to him. \"This is a warrant for the arrest of Amber Harris, on charges of conspiracy to criminally slander Daniel Allgood for the purposes of swaying a political election. Stand up, Harris, or resisting arrest will be added to the charges.\"\n\nAmber slowly stood up, her lack of speed and effort not suiting Teresa very well at all. She grabbed Amber and threw her against the wall, then violently pulled the reporterette's arms behind her as she recited to Amber her considerable legal rights.\n\n\"What the hell is this about?\" screamed Burt West. \"I demand you tell me what's going on!\" For that demand, Burt West got to experience the full 'Teresa Cunt' look.\n\n\"You goddamn Press bastards can shove your fucking 'demands' up your asses.\" Teresa snarled at West. West said nothing more as the Police left with their prisoner.\n\n\"Oh my God.\" Bettina gasped as pandemonium broke out in the newsroom.\n\n\"Are those charges legit?\" asked West.\n\n\"Why didn't they arrest me?\" asked Lester Holder. \"I was in that meeting, too.\"\n\n\"Don't ever say another word, to anyone, admitting that.\" said West. \"Bettina, if this is what they're doing to Amber... what are they going to do to you?\"\n\n\"I... I have no idea.\" said Bettina, shock and worry on her MILF reporterette face...\n\n* * * * * * * * * * * * * * *\n\nThe arraignment was completed by the late afternoon. Amber Harris was considered by Judge Rodney K. Watts to be a considerable flight risk, and bail was set at one million dollars. It was met, partly by KXTC, and partly by funds from persons unknown. Harris was ordered to wear an ankle monitor, and she could travel only to her home and to KXTCs studios; she was forbidden to go on field assignments for KXTC, and if she left the borders of the County for any reason at all, her bail would be revoked and she would be jailed... and Judge Watts took great delight in warning Amber that DFACS would take her baby away from her if her bail was revoked.\n\n\"Great job, Rogue 2.\" I told Teresa as we sat on the deck of the Cop Bar in the fading light of evening, having beef nachos and beer with Sheriff Griswold, Chief Moynahan, Captain Perlman, ADA Paulina Patterson, and FBI Special Agent in Charge Jack Muscone.\n\n\"Most fun I've had in a long time.\" Teresa said. \"I'd have loved it more if Cindy had personally made that arrest, though. Where was she, by the way?\"\n\nChief Moynahan said \"I told her to go and celebrate with her new family.\"\n\n\"You're just an old softy, aren't ya?\" Jack Muscone said, making everyone laugh.\n\n\"Heh heh heh heh.\" said Moynahan. \"Yeah, I guess I am. And yezzz, it was wonderful seeing her face when Judge Watts granted that petition and banged his gavel.\" We all agreed. But Sheriff Griswold looked a little down.\n\n\"You okay, Sheriff?\" I asked.\n\n\"Yeah.\" barked the Sheriff. \"I just wish... Della Harlow would've paid a heavier price.\"\n\n\"Look at it this way, Sheriff.\" I said. \"By taking the plea deal, Harlow confessed to her crimes. She's now officially pled guilty to those charges, which she never would've done otherwise. She now has a felony record, and she is now disgraced. And we're going to roast Amber Harris on a spit, as well.\"\n\n\"God, I'm glad I'm not Amber Harris.\" said Paulina. \"You really are intense about it, Don, aren't you?\" I nodded, then Paulina said: \"By the way, Lester Holder, who called our daughter that racial slur, was at that meeting, as well. You going after him?\"",
        "\"I dunno.\" I said. \"We've got Bettina's payback to deliver first.\"\n\n\"Ooooo-weeee...\" said Tanya with a grin and sparkling eyes, \"how are you going to do that?\" She noticed me glance at Jack, and she looked over at him.\n\n\"Stay tuned for further announcements.\" said Muscone...\n\nPart 24 - Back To The Grind, and 'Meetings'\n\n\"This is Keith Madden, KXTC Channel Two News!\" said the cub reporter at 7:00am, Tuesday, March 12th, from behind the anchor desk of the KXTC studios. \"Bettina Wurtzburg is on assignment. Channel Two News has learned that the State House Judiciary Committee will issue subpoenas for TCPD Commander Donald Troy and SBI Lieutenant Norm Chow to testify before their committee's ongoing probe of Governor Val Jared.\"\n\n\"State Democrats say that Robert Mullen's Independent State Counsel report was not the end of the investigations into Governor Jared's alleged crimes for abuse of power, but merely the beginning.\" continued Madden. \"Judiciary Chairman Justin Madoff has said he intends to keep digging until he finds proof of crimes by Jared, and that he fully expects Commander Troy to comply with their subpoenas and truthfully answer questions about allegations that he exercised Police brutality against two women who made credible claims of sexual harassment against the Governor.\"\n\n\"In other news,\" continued Madden, \"FBI Special Agent in Charge Jack Muscone answered questions at a Press Conference in the City yesterday regarding what is being called an 'exercise' by the military in several counties in this part of the State over the weekend. Mr. Muscone gave no new information on the incidents, referring questions about the incident to the U.S. Army, but when asked about the abuse of Citizens's rights in having their cars searched at gunpoint without warrants by military personnel, he said that the orders of the military leaders were 'misinterpreted' by the soldiers at the checkpoints, and that the personnel involved were being given refresher training...\"\n\n* * * * * * * * * * * * * * *\n\n\"Wow.\" Sheriff Griswold said as we watched in the Chief's Conference Room. \"What's that about, Tanya? Poor Jack having to take all the arrows for the military's fuck-ups.\"\n\n\"I dunno, Sheriff.\" said Tanya. \"But Jack told me last night that the military actually suggested he say that, and that they preferred that near-admission of violating people's rights to having the truth about the nuke getting out.\"\n\nThe Sheriff replied \"I was asking more along the lines of him giving that Press Conference at all... and letting the military brass blame the little guys for the problems and making the FBI guy take the Press arrows.\"\n\n\"I'm more curious about why Bettina is not making the morning broadcast.\" Cindy said. \"Why is that gutless coward bitch in hiding now?\" Sheriff Griswold's mustaches were twitching merrily at just how far Cindy had come over to our side against the Press.\n\n\"And if not Bettina,\" I added, \"why not Amber? After all, she's confined to the studios and can't do anything else, anyway.\" \n\nThe Sheriff noticed the slight gleam in my gray eyes. As the broadcast ended, he said \"Crowbar, can I see you in your office for a moment?\"\n\n\"Yes sir.\" I said.\n\n* * * * * * * * * * * * * * *\n\nOnce seated in my office and fortified with cups of Navy coffee, the Sheriff peered at me and said \"So, Crowbar... why didn't Bettina make that broadcast?\"\n\n\"Just between us and the crowbars, sir,\" I said, \"rumor has it that Bettina really wanted to name the biological father of Betsy in her broadcast. She missed her opportunity to do it yesterday, and doing it today would be illegal because Judge Watts sealed it as part of the adoption papers. So Burt West, who is shitting his pants as he waits for my next move against KXTC, kept Bettina off the air to keep her from doing something stupid and going to jail for it.\"\n\n\"Har!\" barked Sheriff Griswold happily. Then he peered at me again, and asked \"And how did you hear of that? I wouldn't expect Bettina nor West to just call you and tell you.\"\n\n\"Oh, people hear things, and want to repeat those things.\" I said. \"We have leaks in the TCPD here, as you well know. Well, so does KXTC. And one person talks to another, and so on and so on, until we have six degrees of separation, where everything comes... to me.\"\n\n\"I'm glad I'm on your side.\" said the Sheriff. \"So... will you tell your Clan Senior Advisor what you are going to do about Bettina? Or to her?\"\n\nI just smiled. \"By this time tomorrow, Sheriff... you will know.\" The Sheriff nodded, and I could see he was trying to figure it out. \n\n(Author's note: dear readers, you have the clues, too. Can you tell what the I.C. is going to do to Bettina?)\n\n\"Well, Crowbar,\" said the Sheriff, \"all I'll say is that you've done very well handling that. Very well.\"\n\n\"Thank you, sir.\" I said, the praise making me feel like a son who has received the blessings of his father...\n\n* * * * * * * * * * * * * * *\n\n\"Hello and welcome!\" said Catrina Pierce at 7:30am, Tuesday, March 12th. \"Thank you for joining us for the Fox Eight Sunrise Show! I'm Catrina Pierce, and with me as always is Meredith Peller.\"\n\n\"Good morning, Catrina. Good morning, everyone.\" said Meredith. \"Here's what's going on this morning. Many in the Media were shocked when our competitor's reporter Amber Harris was arrested on conspiracy charges in connection with Gayle Tunnin's false charges against Daniel Allgood before last November's election!\"\n\n\"Both Gayle Tunnin and Della Harlow were charged with conspiracy to slander Daniel Allgood, who eventually won the Mayor's race despite the false charges and despite an attempt to steal the election with fraudulent votes.\" said Meredith. \"Tunnin and Harlow both accepted plea deals in exchange for turning State's evidence against Amber Harris, who was also at meetings planning the smear attacks upon now-Mayor Allgood. Harris was arrested by Town & County Police, and made the one million dollar bail set by Superior Court Judge Rodney K. Watts.\"\n\n\"And in State news,\" said Meredith, \"attorney for Commander Donald Troy Mike G. Todd said that his client was willing and prepared to testify before the State House Judiciary Committee in connection with the ongoing probe into alleged abuse of power charges against Governor Val Jared, provided that the scope of the questions are limited strictly to that investigation itself. This shocked many legal experts, who expected Commander Troy to fight against the expected subpoena for his testimony.\"\n\n\"That Committee better be careful.\" Catrina warned. \"Things get exciting around here when Commander Troy does something that surprises the so-called 'experts'. Let's go to our beat reporter Priya Ajmani in Midtown for another breaking story. Priya!\"\n\n\"Thank you, Catrina!\" Priya said. \"Fox Eight News has just learned that the State Right to Life Committee has appealed the squashing of their lawsuit by Judge Rodney K. Watts of the Superior Court. Additionally, the Republican-dominated State Senate Committee for Health and Human Services will begin an investigation into the Department of Family and Children's Services, known as DFACS. State Senate HHS Committee Chairman Pence Richards, who has close ties to the State Right to Life Committee, said this. Roll tape.\"\n\nTape rolled, showing Pence Richards, who was short and stocky, and whose hair was dyed silver white and cut short, saying \"The processes that allowed some to jump the line ahead of others, as well as giving a lesbian custody of a baby child, has to be thoroughly examined, especially after the State Right to Life's legitimate lawsuit was crushed in a local court.\"\n\nMore tape rolled, showing Ralph Corkle, once leader of the State Republican Office and now the spokesman for the State Right to Life Committee, saying \"We believe our lawsuit was wrongfully dismissed, and we are appealing that ruling. We will have our day in Court on behalf of good Christian families that were passed over for adoption while lesbians living in sin are allowed to jump the line and adopt children.\"\n\nBack to Priya live: \"Neither the State Right to Life Committee nor Chairman Richards would comment on Judge Watts granting TCPD Deputy Chief Cindy Ross's adoption of a baby girl. And in other news, the Town & County Council meets tonight, and reports are that many Citizens will be demanding action after the abuse of their rights during the recent military training exercise. And the first meeting of the Town & County Commission to re-write the Charter will take place Wednesday. It will be a closed-door meeting, but Commander Donald Troy told Fox Eight News that the Commission will have open hearings in the near future. Back to you, Catrina!...\" \n\n* * * * * * * * * * * * * * *\n\n\"Who are you, and what have you done with Commander Troy?\" Tanya asked as we watched the broadcast in my office. \"Agreeing to testify before that lynch mob?\"\n\n\"It's pretty much unavoidable.\" I said. \"I might refuse, but AG Karl Handel is gathering the Republican Establishment Elite support for his run for Governor, and they're really after my ass. So to get their financial support, he'd bring those criminal contempt charges against me.\" Teresa and Cindy nodded as they began to understand.\n\n\"As it is,\" I continued, \"the Legislature's trap is going to backfire after I truthfully testify on the matter. So as long as Mike Todd can force them to limit the scope of their questions, it'll be all right.\"\n\n\"How is it that Ralph Corkle is out of jail and with the SRLC?\" asked Cindy. \"I distinctly remember arresting that bastard after the Republican Caucus fraud.\" (Author's note: 'The Guardians of Justice', Ch. 02-03.)\n\n\"Yes, so do I.\" I said. \"He got out of it... on technicalities. The FBI and others, including Martin Nash, tried to question him after he invoked, and Appellate Judge Leahy dropped all charges. The State Supreme Court refused to take up the case, so Corkle walked. On everything, including the kidnapping charges.\"\n\n\"That sucks.\" Tanya said. \"By the way, where's Teresa? It's not an Angels meeting without her.\"\n\n\"She went to Randy Smith's funeral, which is today.\" I said. \"She asked to go, and I told her to represent the TCPD well. Admiral Cordell went with her, and he is furious about the lack of help Sheri Smith and her one-year-old baby have been given.\"\n\n\"Teresa called last night,\" I said, \"and said that the Army is doing the funeral and will give him the hero's burial he deserves, but the Office of Secure Transportation has not done a damn thing. Teresa called her lawyer Agnes T. Spires to help Sheri get the pension and insurance she's supposed to get; the OST would not return Sheri's phone calls. And with a full-blown retired Admiral breathing down their necks, they'd better get their shit straight------\"\n\nAt that moment there was a knock on the door. Helena said \"Guys, turn to KSTD.\" Tanya expertly used the remote to change the channel.\n\n\"And let's go to the State Capitol.\" said Cynthia Freeman at the SNN desk. The feed switched to a podium outside the State Capitol, where State House Minority Leader Wilson Hammonds was speaking for a group of Republican Legislators.\"\n\n\"We demand that Governor Val Jared appoint Robert Mullen as the Director of the new SBI-IDE.\" said Hammonds. \"Only Robert Mullen has the integrity to lead the IDE forward in the War on Drugs.\"\n\n\"Will Robert Mullen enforce immigration laws like the SBI-IDE is supposed to?\" asked a reporterette.\n\n\"Immigration is a Federal issue.\" said Hammonds. \"Robert Mullen has the integrity to follow laws correctly, and also the courage to stand up to the racism of Governor Val Jared, and stand up to Jared's persecution of undocumented workers!\"\n\n*CLICK!*\n\nI expertly used the remote to turn off the television monitor. \"Enough of that.\" I growled. \"Ladies, did you mess with my calendar? I didn't think April 1st was for a few more weeks.\" My Angels politely chuckled.\n\n\"I really want to hear what the Iron Crowbar thinks of that.\" said Cindy. \"I can't figure it out.\"\n\n\"I dunno.\" I said. \"It's just nuts on every level. First, there's no way the Governor would ever appoint Mullen, nor would SBI Director Goodwin. Second, they all but advertised that Mullen would not enforce immigration laws, which the IDE was partly created to do.\"\n\n\"Sir, they let the cat out of the bag on that one.\" Tanya said flatly. \"They never intended for the SBI-IDE to help with immigration issues. That was all just to get the Budget passed. My only question is if the Governor knew they were going to backstab him on this, and so quickly, or if he genuinely, and stupidly, thought the IDE really would do any immigration enforcement?\"\n\n\"Vee shall see.\" I said in my 'German' accent. \"Time will tell on that. Time will tell...\"\n\n*BRING!* *BRING!* *BRING!* *BRING!* \n\n\"Bet it's the Governor.\" Cindy said. I picked up the phone.\n\n\"Yes, Governor...\" I said, with a raise of my eyebrows in Cindy's general direction, causing her to grin as I said \"A meeting? Today?... Yes sir, I'll be there...\"\n\n* * * * * * * * * * * * * * *\n\nSgt. Andrew Prince flew me to Midtown in the TCPD's Bell 206 chopper. I was met at the helipad by SBI-OER Director Britt Maxwell and SBI-OER Lieutenant Norm Chow.\n\n\"I've already gotten my subpoena to testify before the State House Judiciary Committee.\" said Chow as we walked inside the State Capitol Office Building and to the elevators. \"I don't know why they're making us go through this. My testimony will be exactly the same as what I told the Special Grand Jury and the Mullen Investigation.\"\n\n\"That may be part of it.\" I said. \"They cannot release the Grand Jury testimony, and they probably don't have it. By asking you the same questions publicly, they can get your answers on record, even if the answers are not helpful to their cause.\" \n\n\"Again,\" said the beautiful Britt Maxwell, \"why go through these hoops?\"\n\n\"To keep the issue alive.\" I said. \"The Mullen Report did not give them what they want, so they have to make it seem like the scandal is ongoing, that Jared is still guilty even though the millions spent on the ISC investigation yielded less than nothing for them. So, is that what this meeting is about?\"\n\n\"No.\" said Britt as we got off the elevator and went down the hall to the office used by the Lieutenant Governor of the State. As we went inside, several people rose to greet us, including Lieutenant Governor Sharon Marshall, State Rep. Marsha Collins (R - Eastphalia), SBI Director James 'Curly' Goodwin, Lieutenant Gordon Grigsby of the SBI-BFE, and DEA Special Agent Dwight Stevens.\n\n\"Ah, thank you for coming, Inspector Troy.\" said Sharon Marshall as she came up and shook my hand, acting as hostess for the meeting. I shook hands with everyone else, and we sat down in an arrangement of chairs and the sofa that formed a circle.\n\n\"I'm representing the Governor in this meeting. He is unfortunately unable to be here.\" Lieutenant Governor Marshall said, her words fooling no one present: this was her meeting. She continued: \"My friend Marsha Collins is here for the Legislative and Republican Party interests, Inspector Troy is the de facto head of the SBI Reserve, Lt. Grigsby is the BFE representative, and of course Director Goodwin heads the SBI. We've also asked Special Agent Stevens of the DEA to join us, as we hope the SBI-IDE and the DEA will be able to work much more closely together than the old NTF was able or willing to.\"\n\nThat was an understatement, I thought to myself. Lt. Gov. Marshall then said \"I've asked you all to come to help Director Goodwin and Governor Jared choose who the leader of the SBI-IDE will be. We were not going to push this so quickly, but Wilson Hammonds is up to his dirty tricks again. His demand to make Robert Mullen the IDE Director was an absolute joke, but Hammonds's real intent is to simply stir up trouble with the IDE, which he hates with a deep and abiding passion.\"\n\n\"The Democrats are also going to announce their choice for the IDE position, and that choice is going to be Robert Gaston.\" said Marshall. Seeing my face, she said \"I don't think Commander Troy is very fond of that choice any more than he is of Robert Mullen.\"\n\n\"No ma'am.\" I said. \"If you thought Jack Lewis was dirty as the SBI Director, and Richard Ferrell in NTF...\" I shook my head vigorously. \"Sheesh... Gaston would simply uphold that less-than-fine tradition.\"\n\n\"So, just to hear myself say it,\" said Sharon Marshall, \"would you like the job yourself, Inspector Troy?\"\n\n\"No ma'am, I would not.\" I said firmly. \"I am very happy where I am, doing what I'm doing now.\"\n\n\"Yezzz,\" mused Marshall, \"even after that incident this past weekend, that we're not supposed to discuss, but everyone here knows what you did. And you did an outstanding job neutralizing that threat.\" Everyone applauded me for narrowly avoiding being vaporized by a nuclear weapon. Okay, for stopping the threat, too.\n\n\"What about you, Inspector Maxwell?\" said Marsha Collins. \"If you took the IDE job, Lt. Chow could succeed you in the SBI-OER.\"\n\n\"I'm happy where I am, too.\" said Britt Maxwell. \"And while I'd hate to lose Lt. Chow, he would be an excellent choice for the IDE job.\"\n\n\"No ma'am.\" said Norm Chow, in his level, calm way of talking. \"That job is too political for me. Politicians... irritate me.\" I couldn't help but smile at that one.\n\n\"Okay, then.\" said Sharon Marshall, expertly steering the meeting along. \"Director Goodwin will make the choice, and it'll have to be ratified by the Governor. Does anyone have any names to suggest to them?\"\n\n\"And 'Steven Ikea' is a wrong answer.\" Britt Maxwell said brightly, her eyes sparkling. Everyone but me laughed.\n\n\"Good Lord, you people are trying to give me a heart attack.\" I said. \"But seriously, I think your answer is right here in this room.\" With that, I raised my right arm and then clapped the shoulder of Lt. Grigsby, who was seated to my right.\n\n\"Sir?\" asked a stunned Grigsby. \"Er, I'm not sure I'm ready for this.\"\n\n\"I am sure.\" I said. \"You're clean as a whistle, honest, you'll do a good job, and most importantly, you won't let the politicians try to dissuade you from doing the 'I' part of the IDE job... Immigration Enforcement. And you'll be acceptable to everyone for the Drug Enforcement part of the job. And I won't have to worry about the SBI-IDE messing with my Town & County, either.\"\n\n\"Ah, I knew you had an ulterior motive.\" Britt Maxwell said teasingly, her eyes sparkling as she looked flirtatiously at me.\n\n\"Sounds like you better get ready to be promoted, Mr. Grigsby.\" said SBI Director Curly Goodwin. \"The Iron Crowbar has spoken.\"\n\n\"I appreciate your trust in me, sir.\" said Grigsby, more to me than to Goodwin.\n\n\"Okay, then.\" I said. \"You all can interview Lt. Grigsby while Special Agent Stevens and I fly up to the City to make sure the FBI has adult supervision.\" Stevens chuckled and we made our goodbyes and left.\n\n* * * * * * * * * * * * * * *\n\nDEA Special Agent Dwight Stevens and I were flown by Sgt. Prince to the Federal Building in the City. Sgt. Prince then went to City Airport to refuel for the flight home while Stevens and I went to the FBI Offices.\n\nWe went into the large room, where Sandra Speer, Lindy Linares, Martin Nash, and Julius Jefferson greeted us enthusiastically. Sandra showed me the latest Greta photos; my daughter was growing up fast... and without me, I thought sadly as I looked at them.\n\nThen Jefferson announced to all the other Special Agents there who I was and that I was the one that had successfully recovered the nuke. I may have blushed a little bit at the strength of the standing ovation I received.\n\n\"I'll take you to Jack.\" said Martin Nash. \"He told me to come in with you, and he'll brief me on the aftermath of the incident at the same time.\"",
        "\"Good.\" I said, not at all fooled at what was going on: Nash was being groomed for leadership, and was responding well to it.\n\nWe followed Nash to Jack's office. I mischievously just went right on in. \"Ah, there you two are.\" said Jack Muscone when he saw us. \"Come on in, have a seat. You too, Martin.\" Nash had been a little bit surprised at my bravado. What, had he forgotten his time with the TCPD? I wondered with amusement.\n\nOnce we were seated, Jack said \"Obviously there is a huge manhunt on for Shimono, Barsbane, Ridge, and Starr. We have a photo at the Coltrane County line showing Shimono and Barsbane in military uniforms crossing the border. You'd told us that they'd switched to military uniforms, Don, so we gave the military vehicles a fresh look.\" I nodded.\n\nJack continued: \"Coltrane County is very backward in how few surveillance cameras they have operating. There are a couple near 'The Vision' compound, and please don't tell Commander Ross that... and there are a couple in Buford and on the bridge of the exit to that town. The Shimono vehicle was not seen on those cameras nor any further south, so we think they took one of the county roads to State 142 and into Nextdoor County, and then east to the City.\"\n\n\"Makes a lot of sense, especially if they knew where the cameras were, and could avoid them.\" I said. \"What about Dick Granger?\"\n\n\"We went to his home, but he wasn't there, and he wasn't at State Parcel Service, either.\" Muscone said. \"I personally spoke to their CEO, Edward Blassingame, and he said that Mr. Grainger was out west, working on a project for SPS expansion, but said he didn't know exactly where. We sent Agents to the areas around Teresa's hometown, but no sign of him, there.\"\n\n\"Wait...\" said Dwight Stevens. \"I thought Blassingame himself was involved in this, or so you guys were saying. So why speak to him like that, when all he'll do is give you a runaround?\"\n\n\"Yes, he might do that.\" I said. \"But he already knows we know about Granger, so we haven't given away a state secret there. And it'd be nice if we could catch Blassingame lying to a Federal Agent.\"\n\n\"And I was watching his facial expressions.\" Muscone said. \"Either he's telling the truth, or he is very, very good at hiding his true emotions. Anyway, we checked out the old Federal facility, Millwakee, the old Sanitarium, all those places related to you, Don. But there was nothing.\"\n\n\"Everyone from the locals to the Feds are watching for Granger.\" said Martin Nash. \"We think that if we find him, we'll find Barsbane. As to Keiko Shimono... some of our guys are enjoying their undercover missions to the BDSM clubs, but other than that, there's no sign of her. It might take a Crowbar to pry her out of wherever she's hiding.\"\n\n\"What about Trent and Quint?\" I asked. \"They're my priority, even over Shimono.\"\n\n\"No sign of them, either.\" said Jack. \"The two survivors of the truck crew barely made it, and that was mostly because Dr. Cordell was at the Hospital to treat them. We haven't had much chance to talk to them, but from what little we got, they got into a vicious firefight with Trent and Quint, but they didn't have much ammo... never thought they'd really need it... and were captured once they ran out. We don't know if Trent and Quint were wounded, or even killed. But if they did survive, they didn't stay with Barsbane, Shimono, and that freak Raji. Don, you deserve a medal just for breaking his worthless neck. He was a truly bad actor on the cyber-warfare scene.\"\n\n\"Glad I could help.\" I said, a bit drily, making Muscone and Stevens chuckle. Martin Nash never chuckles, of course.\n\nNash said \"Trent and Quint were highly trained in the military, the best of the best. If they lived, they'd be very expert at hiding, and would fight like hell if we ever cornered them. We're consulting with Delta Force to get ideas on where they might be and what they might do.\"\n\n\"What, didn't ask the BAU?\" I said, very sarcastically. \"Okay, okay, just kidding.\" I said, seeing Jack's reproving look in my general direction. \"Seriously, Delta Force is truly the best of the best. I hope they'll find them. Trent and Quint may be the most dangerous of this bunch, at least to me and my family.\"\n\n\"Which includes my family.\" said Jack. \"Anyway, that's it: a whole lotta 'nuthin'. We'll let you know if we get any breaks, and of course we'd appreciate any help you can give us.\" \n\nAs the meeting was ending, we all got up, everyone shook hands, and we made like trees to leave. As I got to the door, Muscone said \"So it's Grigsby for the SBI-IDE Director post?\"\n\nI gave a thumbs-up and said \"How'd you know?\"\n\n\"You take care of your people.\" Muscone replied.\n\n\"And speaking of that,\" I said, \"it's 'awn'?\"\n\nJack gave what was for him a big smile and said \"Yes. Tomorrow morning we announce it.\" I smiled and left.\n\nWhen the SBI-SIS had been formed, I had brought in four State Agents that I thought I could trust: Ted Crenshaw, Ted Orosco, Norm Chow, and Gordon Grigsby. They had been good at their jobs, they were honest... and they'd been loyal to me. I had not forgotten their loyalty, and I had reciprocated it: Crenshaw was now with the FBI in Southport, where he was needed and where he deserved to be. Ted Orosco was head of Internal Affairs for the TCPD, bringing stability to that unit, and a steady paycheck to himself. Norm Chow was essentially Internal Affairs for the SBI, and working with the smoking hot Britt Maxwell, dontcha know. \n\nAnd now I was taking care of the last of my SIS agents, putting Grigsby in the important role of the SBI-IDE. He would not be bribed by criminal elements. He would not be pressured and pulled in multiple directions by agenda-driven politicians. And Katherine Woodburn would be very upset, which did not hurt my feelings. I love it when a plan comes together.\n\nAnd another one was about to...\n\n* * * * * * * * * * * * * * *\n\n8:30pm, Tuesday, March 12th. I was in my office, wrapping up paperwork, when a huge vibe hit me. It was followed by the sound of an office door being opened down the hall.\n\nI walked down the hallway to the Captain of Operations's office, and entered as I knocked on the door. Teresa Croyle was inside, looking exhausted, and something more.\n\n\"Oh, sir!\" Teresa gasped upon seeing me standing in front of her desk. She rose to her feet.\n\n\"At ease, sit back down.\" I said. \"How did it go?\"\n\n\"It was... very sad.\" Teresa said, still seemingly lost in thought. The vibe I was getting was getting stronger.\n\nI said \"Father Romano is in his office. Why don't you go talk to him? You can tell me about it tomorrow.\"\n\n\"Yes sir.\" Teresa said, fully understanding me. \"Thank you, sir.\" I went back to my office and secured everything to go home. Teresa went to Father Romano's office, and they were in there talking for a long, long time...\n\nPart 25 - Betsy Ross Avenged\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said the redheaded MILF reporterette at 7:00am, Wednesday, March 13th, from in front of the Courthouse Complex. \"Channel Two News has learned that Social Justice groups are demanding an investigation of Superior Court Judge Rodney K. Watts!\"\n\nBettina began: \"The State Right to Life Committee has called for the investigation after Judge Watts not only dismissed their lawsuit against the Department of Family and Children's Services with prejudice, but also expedited the adoption petition of TCPD Deputy Chief Cindy Ross, and approved it yesterday. The SRLC is asserting that Judge Watts took bribes from the founder of 'The Vision', Dr. P. Harvey Eckhart, who is Cindy Ross's biological father, to expedite the adoption.\"\n\nBettina continued: \"The demands for an investigation were joined by former Town Assemblyman Eldrick X. Weaver, who lost the race for Mayor last fall after Judge Watts threw out disputed ballots, tipping the election to Daniel Allgood. Mr. Weaver says that Judge Watts's poor rulings, which disenfranchised voters as well as endangering the child awarded to Deputy Chief Ross, needs to be investigated thoroughly...\"\n\n* * * * * * * * * * * * * * *\n\n\"Keep calm and carry on, Ms. Ross.\" said Sheriff Griswold to Cindy as we drank coffee in the Chief's Conference Room. \"She's just getting her last shots in.\"\n\n\"Yeah.\" I said, my voice barely above a whisper. Cindy peered at me and the Sheriff.\n\n\"You guys know something.\" the Green Crowbar stated, and most very astutely. \"What is it?\"\n\n\"You'll see. Soon.\" I said. To change the subject, I said \"So, Captain Croyle, how was the Smith funeral?\"\n\nTeresa nodded. \"It was... well, there was good and bad. The Army sent a Special Forces team to conduct the funeral, since Smith was a Green Beret. They had a choir there, that sang 'The Ballad of the Green Berets', and that was really moving. After they took the Flag off the coffin and presented it to Sheri Smith, they took their metal 'Special Forces' tabs off their dress uniforms and pressed them into the wood of the casket. I knew the Navy SEALs did that, but in this case the Green Berets did it, too.\"\n\nTeresa continued: \"The worst for me was when Sheri Smith was holding her little baby, and asked what she should tell her daughter about her dad. I said...\" Teresa paused, regaining control of her emotions, then said \"I told her to tell her daughter that her father had served his country bravely, and had died trying to save a lot of people's lives, and that she could hold her head high being the daughter of such a great man.\" I nodded vigorously in agreement.\n\n\"Wow, Teresa, I'm getting a huge vibe from you about that.\" Cindy said sympathetically. \"Anyone else we know who that could apply to? Like someone in this room now with a hero father?\"\n\n\"I knew my father.\" Teresa said. \"That little girl will not remember hers.\"\n\nTanya Perlman's eyes were a little brighter than normal when she said \"Pete wasn't even born when his father died. And what you told Sheri is what I'm going to tell Pete about his father, when he's old enough.\" I nodded vigorously in agreement.\n\n\"All this reminds me of something that I'm going to have to deal with.\" Cindy said. \"One day in the future, Betsy is going to ask me who her father is. She'll also learn she's adopted and want to know who her blood mother is. What do I tell her?\"\n\n\"The truth.\" said Sheriff Griswold. \"But don't stress on it. Burn that bridge when you get to it.\"\n\nI nodded vigorously in agreement.\n\n* * * * * * * * * * * * * * *\n\n\"Why don't you and I take a little walk this morning?\" I said to Cindy at 8:45am as I stood in the doorway of her office.\n\n\"O-kayyy.\" Cindy replied. We put on our 'field' uniform jackets, which were black leather with embroidered TCPD badges over the heart, and our metal ranks pinned onto the epaulettes. The jackets were armor-lined, and also very warm to keep the morning chill out.\n\n\"Where are we going?\" Cindy asked as we walked out the front lobby doors and began walking to Courthouse Square. \n\n\"Federal Building.\" I said. \"The FBI is giving a Press conference.\"\n\n\"Speaking of that,\" Cindy said as we crossed Riverside Drive and walked towards Courthouse Square, \"I noticed Bettina was 'mobile' again.\"\n\n\"KSTD doesn't do much local reporting anymore since they now carry the SNN feed.\" I said. \"So they sold some of their equipment as well as two mobile vans to KXTC at a deep discount.\"\n\n\"Fuck 'em.\" Cindy said. \"I just want to make Bettina pay, some way. And by the way, Priya has been more than helpful to me. She deserves a reward. A long, thick iron-hard reward, if you get my drift.\"\n\n\"Yes. Yes she does.\" I said agreeably. \"Just set it up.\" Cindy smiled wickedly at that. Uh oh, I thought to myself...\n\n* * * * * * * * * * * * * * *\n\nAt 9:00am, FBI Special Agent in Charge Jack Muscone came out of the front of the Federal Building to the podium set up at the edge of Courthouse Square along Elm Street (the e-w street that is the north border of the Square). He looked at the gaggle of reporters, making sure that they were broadcasting live to the televisions of the Town & County.\n\n\"Thank you for coming.\" Muscone said. \"I know you want answers about that military exercise, but I have nothing new for you. So please don't ask me; direct all your questions to the Army. What I want to talk about today is that the FBI is opening a case of conspiracy to commit treason.\"\n\nThe reporters suddenly got quiet as Muscone said: \"As you know, former FBI Agent Les Craig turned traitor and attempted to murder the then-Deputy Director of the FBI. Les Craig was also part of an extremist group that was responsible for several murders, and also sought to damage the Government and the People of the United States.\"\n\n\"Les Craig had assistance in his treasonous actions.\" Muscone continued. \"We have obtained new evidence that he was having a sexual relationship with a local reporter, who may have given Craig information that could be used to damage the FBI. We have photographic proof of the sexual liaisons between Les Craig and this reporter as well as some of the damaging information that changed hands. And so, we have obtained a Federal warrant for the arrest of KXTC reporter Bettina Wurtzburg, and will be making the arrest forthwith.\"\n\nAt that moment, several FBI Special Agents in suits and ties, among them Special Agents Martin Nash and Julius Jefferson, went into the throng of reporters and approached Bettina. Nash ordered her to put her hands behind her, and Lindy Linares effected the arrest. Bettina was then taken to a black SUV that had pulled up on the otherwise-closed Elm Street. It whisked the suspect away, the various Press cameras eagerly filming Bettina's humiliating perp walk.\n\n\"Wowwww...\" Cindy whispered as we watched from a distance. \"Just wowwww. You brought the nukes against Bettina.\"\n\n\"Yes.\" I said. \"The investigation is for real, but no matter what happens, the other reporters will see Bettina as a whore that sleeps with men to get stories, and maybe they'll consider her a traitor, too, though I suspect they're on the side of anyone who would be a traitor to America. Anyhoo, it was the best I could do... short of outright killing her.\"\n\nCindy looked up at me, then back to the increasingly chaotic crowd at the podium, the Press shouting questions at Muscone. \"I don't deserve this.\" she said, near tears. \"Thank you... Thank you.\"\n\n\"You're welcome, but thanks are not necessary, and this is absolutely deserved.\" I said. \"It's a matter of family... and your family is my family.\"\n\nAs we turned to go back to Police Headquarters, we saw someone standing several yards behind us. It was the Town & County Sheriff, his mustaches twitching with absolute delight. Cindy gave Sheriff Griswold a warm hug along with her words of thanks, a hug that he returned as if he were hugging his daughter. Then we all walked back to Police Headquarters before the Press realized we had been on the Square. It would not be long before Captain Thompson's phone began ringing off the hook...\n\nPart 26 - Reward For Good Behavior\n\nWednesday, March 13th. It was very late when I drove up to Cindy and Callie's condo after the meeting of the Charter Commission. I knocked quietly on the door and Callie opened it, wearing only a bathrobe, her finger over her mouth in the 'hush' sign. I came into the darkened living room.\n\nBetsy was asleep in her crib in the main bedroom. There was only one lamp on in the guest bedroom, its warm glow giving just enough light to see the couple on the bed. Cindy was on her belly, naked, face-deep in the pussy of a beautiful brown-skinned woman. I recognized her as Priya Ajmani.\n\nI got a bit of a shock when I realized that Priya was blindfolded. Her legs were pulled up and back, and her right ankle was tied to her right wrist, her left ankle and wrist also bound together! The beautiful Indian woman was trussed up and ready for delivery into sexual bliss.\n\n\"Ohhh... ohhhh...\" Priya was softly moaning as Cindy ate her out with gusto. Having taken a 'gray viagra' before coming in, my cock was iron-hard, throbbing with desire as I watched the nasty scene in front of me.\n\n\"You're overdressed.\" Callie said as the bathrobe slipped to the floor, exposing her gloriously naked body. I began undressing as I watched, and soon I was naked, my cock standing out like a crowbar.\n\nCindy looked back at the door, and saw that we were ready. \"You're gonna get it now.\" she said to Priya. She got off the bed as I approached it and climbed on, then eased between Priya's legs, mounting her.\n\n\"Ohhhh...\" she whispered. \"Is that you, Don?\"\n\n\"Yeah, baby.\" I said hoarsely.\n\n\"Ohhh, fuck me.\" Priya begged. \"Please, fuck me! I can't take it any more.\"\n\n\"Have you been a good girl?\" I asked as I slid my cockshaft up and down Priya's sopping wet labes.\n\n\"Yes!\" Priya gasped. \"Put it in!\" I fit the head of my cock into her slit and pressed into her cunt hole. Then I shoved forward with all the raw, physical power that I could muster.\n\n\"AAAUGH! OH MY GOD!\" Priya screamed out. I withdrew and slammed my cock into her again, then again, and soon I was fucking her with a hard, deep, steady rhythm.\n\nAs I fucked her, I reached up and took her blindfold off. Priya's eyes were sparkling with lust. She raised her head and I smashed my mouth on to hers in a hard kiss.\n\n\"UHHH!\" Priya cried out as I felt her cunt clamp down around my cock. I buried my meat as deep as I could in her clutching cunt as she gasped through her powerful orgasm. When her pussy relaxed enough, I began pumping into her again.\n\n\"Ohhh, that was so good.\" Priya gasped. I kissed her again, our tongues twining as I raised up into a pushup position over her.\n\n\"Have you been a good girl, Priya?\" I asked.\n\n\"Oh yes, yes.\" Priya said pleadingly.\n\n\"Good girls get fucked, Priya.\" I growled. \"And I am going to fuck your good girl brains out now.\" With that I began plowing Priya's pussy with hard thrusts, piledriving into her with relentless power. Unable to resist, Priya lay there and took it. Her moans deepened again, and her pussy clamped down like a vise around my pistoning meat again.\n\n\"Good God, shut her up.\" Callie warned. She was watching from behind us. \"You'll have the whole neighborhood calling the cops on us.\"\n\n\"Let me show this good girl how we do law enforcement in this County. I grunted, slamming my cock in and out of Priya's pussy again and again, until my back began aching in protest. Fortunately, I also felt my own climax approaching.\n\n\"You feel that nut rising, baby?\" I snarled. \"You feel me getting ready to come in you?\"\n\n\"Yes, yes!\" Priya gasped. \"Come in me! Yes!\" It took less than a dozen strokes, and then I grunted as the gray mists swirled behind my eyes, and my cock began spurting semen into the well-fucked depths of Priya's steaming snatch.\n\nI began slowing down, keeping my cock in Priya's cum-filled cunt until I was just laying on top of her, balls-deep in post-coital bliss. I kissed Priya's upturned mouth, letting the kiss grow deeper as we relaxed.\n\nAfter a few minutes, I slid my cock out of Priya's pussy, then stood on my knees, straddling the beautiful Indian woman's body. I fed her my slime-covered cock, and she eagerly sucked it as my hips slowly thrust forward and back. I felt myself hardening again as I untied her, letting her stretch her legs out flat on the bed. She began fellating me with gusto, moaning around my cock as I slid my hand to the back of her head and guided her forward to meet my gentle thrusts as I fucked her beautiful face.\n\n\"I'm ready for round two.\" I announced. \"How about you?\"\n\n\"Oh yes!\" Priya said happily as she spread her legs. I eased back down on her and my cock unerringly found her honey hole and slid back in, making her moan. This time we took our time, fucking slow and deep like longtime lovers, with Priya orgasming several times before I finally dropped another massive load into the depths of her womanhood...",
        "Part 27 - Epilogue\n\n12:00 high noon, Thursday, March 14th. Dr. Laura Fredricson's secretary announced that she had a visitor. It was General Alexander McFarland. He was wearing a civilian suit and tie, which told Laura he was about to travel on a civilian aircraft to Washington, D.C.\n\n\"Hello, Laura.\" McFarland said. \"Sorry to barge in uninvited, but I wanted to say goodbye before leaving.\"\n\n\"Have a seat.\" Laura said, indicating a chair in front of her desk, which she remained behind, and not having stood at the entrance of her guest. \n\nMcFarland sat down, and looked at Laura's desk, seeing the photos of her husband and children. \"You have a daughter, too. My daughter is all grown up now... and I basically missed her entire childhood for the sake of my career. Please don't make that mistake with your children.\"\n\n\"I won't.\" Laura said. \"That's a big reason I retired from the Company. Politicians say they're resigning to 'spend more time with my family' as an excuse. For me, it was for real.\"\n\n\"Good.\" said McFarland. \"And your husband... he's a very impressive man. It's too bad he turned down the Company when they tried to recruit him. And speaking of that... I'm a bit surprised: he doesn't seem to be your type.\"\n\n\"What do you consider my type to be?\" Laura asked, more out of curiosity than of being offended.\n\n\"Less flamboyant, more the quiet type of leader.\" said McFarland. \"The tireless worker behind the scenes rather than the guy out front. More like your first husband. Commander Troy doesn't fit that mold.\"\n\n\"No, he doesn't.\" said Laura. And whatever my type is, I fell head-over-heels in love with Don the moment I first saw him. He's something rare in this country and this world these days: he's a real man.\"\n\n\"In that respect, I guess he is your type, then.\" said the General.\n\n\"Yes\" said Laura. \"And yes, he really is as good as you saw this weekend... and I'll do whatever I have to to protect him, especially when he goes after bad people... like U.S. Senator Samuel Russell.\"\n\nThe General got the message. \"Of course.\" he said. \"Russell thinks he's hot stuff, but he's nothing anymore.\" \n\nThen he peered at Laura across the desk. \"You've changed, Laura. You're not the Agent I knew in Europe. And you're not the same woman anymore.\"\n\n\"No, I'm not, General.\" Laura said. \"Motherhood changes a woman. Hell hath no fury like a mother protecting her children.\"\n\nMcFarland nodded, then got up. \"Okay, then. Your current husband is the talk of Washington, and in a good way. I'm sure a medal will be heading his way soon. In the meantime, it was good to see you again, Laura. You take care now.\"\n\n\"Take care, General.\" Laura said, getting to her feet but still maintaining the solid formality that he could not break through. He left the office. Laura checked for listening devices in his wake...\n\n* * * * * * * * * * * * * * *\n\nThe sun was setting on this Thursday evening. I sitting on the metal mesh seat behind the Mountain Nest. Carole was sitting next to me, and Bowser and Buddy were inspecting their domains and doing their business. I heard more than saw a train rumble out of the west and then south along the River and County Road 5.\n\n\"Daddy,\" Carole said, \"why are Press people so mean?\"\n\n\"What do you mean?\" I asked, wondering where this was coming from.\n\n\"They're saying bad things about Aunt Cindy.\" said Carole. \"Everyone at school was asking why the Media people were so mad and full of hate. Are they mad at Marie, too, because she's adopted?\"\n\n\"No.\" I said, amused at the links children make about things.\n\n\"Oh.\" said Carole, realizing some things that she was in the unique position to know. \"It's because Aunt Cindy is a Pol-eece Officer. They don't like you either, do they Daddy?\"\n\n\"No, no they don't.\" I said, no longer amused. \"And that's why I tell you to be careful if you see any reporters around.\"\n\n\"It was a reporter that put me in that building that blew up, wasn't it?\" Carole asked as Bowser and Buddy came back, eager for skritchins.\n\n\"Yes, it was.\" I said, giving Buddy those skritchins as Carole petted Bowser. \"How did you know that?\"\n\n\"I heard Mommy and Grandma talking about it.\" Carole said. Then she dropped another knowledge bomb on me: \"Our teacher said that reporters are necessary for us to have Freedom, but if they don't like Police Officers who keep us safe, what good are they doing?\" Outstanding question, I thought to myself. Simply outstanding.\n\n\"It's a long story, one of those grownup stories you'll learn about when you become a grownup.\" I said. I didn't care to discuss that the Press had totally abused their First Amendment rights and the responsibilities that went with those rights, and that the American Mainstream Media, its biases and its dishonesty, was actually the greatest threat to our Freedom. Even more than a nuclear bomb. Much more than a nuclear bomb.\n\n\"You tell me that a lot, Daddy.\" Carole said. \"But I'm big now. I'm five years old!\"\n\n\"Yes, yes you are.\" I said. \"But you're trying to grow up too fast. You're fortunate that you live here in America, where you can go to school and learn a lot, and you can play with Marie and Bowser and your school friends. Enjoy your childhood, kid. You'll be grown up before you know it, and then you'll wish you could be a kid again.\"\n\n\"That's what Uncle Harvey told me, too.\" said Carole. And then another bomb: \"Daddy, how do I learn how to be brave, and save the world like you did?\"\n\nFive years old, she is, I thought to myself. Five years old.\n\n\"You don't.\" I said, knowing she would remember every single word I told her for the rest of her life. \"You either have it, or you don't. And if you have it, you'll become a leader of others, as well as a brave person. But that's another thing that you'll find out about when you get older. Right now... let's take these extremely cool dogs inside, and get ready for bed.\"\n\n\"Awww.\" Carole said, not wanting to go to bed. \"I'm not tired, Daddy.\"\n\n\"That's makes one of us, Fussbudget.\" I replied. \"I'm tired enough for both of us. Let's go.\" We got up and followed the dogs to the steps leading to the backdoor, my mind ablaze after that wide-ranging discussion of philosophical issues.\n\nAnd yes, Carole had it. And she would show it.\n\nThe Greatness was coming. Just not too fast, I hoped...\n\nFinish"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "novel",
        "hot wife",
        "iron crowbar",
        "police drama",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-nuclear-option-ch-04"
}