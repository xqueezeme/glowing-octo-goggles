{
    "title": "Cooper Family Pride Pt. 02",
    "pages": [
        "Apologies for the delay on this chapter. I'm posting this before I'm technically ready but I haven't had time to work on it and I don't want to make everyone wait longer. So better this than nothing. I'll clean it up in the future. I'm working on chapter 3.\n\nAuthor's Note: Please Read!\n\nThis story contains themes of revenge, incest, Dominance &amp; submission, lesbianism, gay/bi-curious and, of course, mind control. If they offend you, please stop reading now.\n\nThis is a departure from my normal writing style. This story is meant to be a bit absurd. It is over-the-top, bordering on parody/comedy at times. It's intended to be fun. I realize that this may not be for everyone.\n\nLastly, all characters are over 18 years old. This is purely a work of fiction, and any resemblance to real people is purely coincidental. I encourage everyone to comment and vote. A heartfelt thank you to all my beta readers! You're all invaluable.\n\nThis doesn't make sense without reading part 1! I strongly encourage you to read or reread Part 1 as it picks up right where it left off and there is no context for new readers!\n\nEnjoy the ride!\n\n\"If something is going to happen to me, I want to be there.\" - Albert Camus, The Stranger\n\n\"I'd rather smoke crack than eat cheese from a can.\" - Gwyneth Paltrow (\uf0df She's an idiot)\n\n******\n\nCooper Family Pride, Part 2\n\nor, How The Coopers Learned To Stop Worrying And Love The Dick\n\nor, Danny Dugan Saves The World And Does Some Titty Shit To Some Fine Ass Bitches\n\n******\n\nPART: 2\n\nHeavy bass thumped out of Mandy's car speakers. A Caribbean, Cuban pop beat blared. She sat in her passenger seat in a tiny suede micro mini skirt with a loose white cotton blouse and light brown strappy open toed heels. She was sexier than ever.\n\n\"Havana, ohh na-na! Half of my heart is in Havana, ooh-na-na! He took me back to east Atlanta, na-na-na!\" Mandy sang along.\n\nJason tried to change the radio station. Mandy held out her finger threatening to touch him. He relented and left the dial alone. He wasn't sure how he'd get through the day. They pulled up to Danny's house.\n\n******\n\nDanny opened the bathroom door. Steamed rolled out into the hallway. He stepped out wearing fitted, plaid-houndstooth linen trousers from Brooks Brothers. He had grey Bice crocodile-print loafers, and a custom printed white t-shirt that read: I Am The Man From Nantucket. He put on his mirrored aviator sunglasses, and then for maybe the first time ever, he put some product in his hair and left it messy.\n\nLori was drinking coffee in the kitchen when he walked around the corner. She nearly dropped her cup. Despite the ridiculous nature of his trim t-shirt, Danny looked kinda hot. He had a brand new soft leather messenger bag, instead of his beaten up old backpack.\n\n\"Danny...\" She said in a shocked whisper. \"You look... um... I'm not sure that's appropriate.... But...\"\n\n\"Thanks!\" He flashed his crooked smile and gave her a finger gun. \"Mandy's here. Gotta run. I think I'll be late tonight.\"\n\n\"Okay, sweetheart. Not too late though.\" She replied.\n\n\"Love you.\" He gave her a kiss on the forehead and walked out the door.\n\n******\n\nDanny sat in the backseat while Mandy bobbed on his cock. Jason pulled the car into the senior parking lot. Danny never had the opportunity to park here for lack of a vehicle. He pulled out his brand new smartphone and streamed his music through the car speakers. Beastie Boys' Sabotage pumped out the car windows. The SUV crawled through the parking lot as seniors gossiped around their vehicles. They pointed as Jason Cooper rolled in. They gave him thumbs up and applauded. Everyone was still pumped from his party.\n\n\"Fuuuck!\" Danny cried from the back seat as he filled Mandy's mouth. \"You suck my cock so well!\"\n\nShe pulled her head back wiping her mouth. \"Only the best for my man!'\n\n\"I'll fucking kill you, Fuckface!\" Jason scowled. \"Mandy, please! Whatever happened over the weekend is done! No one ever has to know! No one! Don't do this! Don't walk in with Fuckface!\"\n\n\"Danny and I are a thing now, Jase. I love him. Get over it.\" She leaned between the driver and passenger seat. \"He just put two loads in me. One in my mouth and one in my fuckhole. Bet you wish you could do that.\" She playfully rubbed his chest.\n\n\"No! Ohfuck! Fuck!\" Jason screamed as he came. \"I said don't touch me. Don't fucking touch me. Fuck!\" He huffed looking down at his pants. \"Fuck!\"\n\nJason pulled into his parking space. Brett Dereckson was waiting with a couple other guys. The engine cut out. The back door kicked open and Danny slipped out. He slid his bag around his chest and held out his hand. Mandy slid out after him. He pulled her close and kissed her long and hard.\n\n\"Dugan?\" Brett said, confused. \"Jase! What the fuck?\"\n\nJason walked around the front of the car. \"I'm not talking about it! Seriously, dude! Shut your fucking mouth!\"\n\nHe heard the snickers.\n\nDanny tapped his phone. Beastie Boys' Brass Monkey played as he walked with Mandy up to the school.\n\n\"I think we're a scene.\" He said amused.\n\n\"Who cares?\" She replied smitten holding onto him tightly. \"My panties are soaked in your cum. You should've cum in mouth first.\"\n\nThe bustling high school hallway parted like the Red Sea as Danny Dugan walked through the front door with Mandy Cooper on his arm. All of the noise turned to whispers. Even the teachers stopped and stared. He tried his best to act normal but that crooked smile was plastered on his face.\n\n\"I'll see you in a bit. Alright?\" He said.\n\n\"Yeah. Save me a seat at lunch. I love you.\" She leaned in and kissed him on the lips.\n\nA collective gasp rippled down the hall. Danny went to his locker loving every minute of it. Save her a seat at lunch? That sounded funny to him. He'd eaten alone every day.\n\nJason walked into the hallway a moment later. Students perked up. His party still fresh in their minds.\n\n\"Cooper! Cooper!\" He heard a familiar chant.\n\nGuys and girls came up to thank him or give him a high-five or a fist bump. So many hands reached out to touch him. So many of them female. His face contorted as he walked. He tried to push through like he was pushing through a defensive line. His cock was bursting. He'd begged Mandy for his cage back this morning. The pain was better than this embarrassment. He ran into the bathroom and hid in a stall.\n\nJason slowly unbuttoned his pants and slid them down. He'd done the only thing he could think of this morning. He had a sandwich bag around his cock with a rubber band holding it closed at the base of his shaft. The bag was nearly full now. He carefully pulled it off thankful he didn't spill any on himself. Then he looked at it all. He had the strangest urge. His mom and sister's voices were in his head urging him to clean it up. He tilted the bag to his mouth and started drinking it down.\n\nJason had tears in his eyes. He wondered why he enjoyed that as much as he did. He did like it though. He loved how it tasted. He also had that urge to fuck Mandy all morning. Fucking Fuckface fucked her in the car on the way to school. How would he explain it? He heard those whispers on his way inside. He looked around at the stall. Wasn't this where he used to dunk Fuckface in the toilet? Now he couldn't touch the fucker or Mandy would punish him.\n\nJason secured the bag back on his cock and gathered his things already late for his first class. Mrs. Morris was walking down the mostly empty hallway when he poked his head out of the bathroom. She taught Spanish. She was a sweet, old lady but terribly annoying and as a big as a house.\n\n\"Hola, Jason! Como estas?\" She always tried to say a couple things in Spanish. \"Aren't you supposed to be in first period?\" She asked coming up alongside him. \"Are you feeling okay? You like unwell.\" She placed her hand on his shoulder, concerned, as she looked at him.\n\n\"Ohhgod! I... ohh... don't touch me!\" He croaked. \"Fuuuck!\" His face contorted again as his cock unloaded. \"Don't fucking touch me!\" He shouted.\n\n\"Jason Cooper!\" She exclaimed. \"What kind of language is that? You don't talk to...\"\n\nJason ran off of before she could finish speaking. He wanted to go back in the bathroom. But he ran to his first class instead. His bag was half full already.\n\n******\n\nMr. Hutchins stood at the front of the classroom. He was that teacher everyone loved. His class wasn't easy, but he was so fucking cool. It was hard not to like him.\n\n\"Your AP finals are finished, people. A lot of you needed to get that credit toward your first semester of college. We've got less than two weeks until the end of the school year. I'm obligated to teach up to the last day. I'm counting the days until summer more than you fuckers, believe me! Let's just call it. Use this as a study hall for your other classes. No more biology. You all did well. I'm proud of all of you.\"\n\nThe class erupted in cheers from their various lab stations.\n\n\"Danny's been getting into Mandy Cooper's biology! That's what I heard!\" Rory Carmichael joked.\n\nGiggles and whispers started filling the room again.\n\n\"Alright! Everyone calm down! Let's not start rumors. Crack your books or talk quietly.\" Mr. Hutchins tried to temper the excitement. \"Just because we found out that Mr. Dugan is the man from Nantucket, doesn't mean we need to discuss his biological anomaly!\" He gave Danny a little smile. \"I like your sudden sense of style, Mr. Dugan!\"\n\nThe class broke into laughter again.\n\n\"I don't get it.\" Vanessa Wong said quietly to Rory.\n\n\"The man from Nantucket!\" Rory laughed. \"There once was a man from Nantucket. His dick was so long he could suck it. He said with a grin as he wiped of his chin, 'if my ear was a cunt I would fuck it.' you know?\"\n\nVanessa's face flushed. She'd never heard it before. \"Oh.\"\n\nDanny sat at his lab station quietly. He let everyone have their fun. For once in his life, the rumors about him were true. For once, they weren't mean-spirited. He watched as people looked at him differently for the first time. That included Beth Fleming. The perfect little blonde cheerleader sat across from him at their lab station. She was wearing tight jeans and an off-the-shoulder crop top that laced up the front like a bodice.\n\n\"Is it true?\" She finally asked. \"Are you and Mandy together?\"\n\nDanny was fiddling with his phone. He glanced up. She never talked to him if they didn't have to for class. Never small talk.\n\n\"Yeah. Why?\"\n\n\"Really?\" She looked confused and amazed. \"I... I don't know. Mr. Cooper doesn't let her date. And I didn't know you were her type, I guess.\"\n\nDanny shrugged. \"Mr. Cooper loves me. We're tight.\" He responded casually. He kept tinkering in her head, pushing in some thoughts. \"And what type am I? Look, Beth. You're a nice girl. I've always liked you. Jason's a fucking dick. We don't talk because he doesn't like me. But let's be honest, you don't really know shit about me, do you?\"\n\nBeth huffed. No one ever really talked to her that way. She was dating Jason Cooper. She was a cheerleader. She commanded respect. The only one that could touch her in this school was Mandy, and she didn't date. Everyone knew it was hands off when it came to Mandy Cooper. She couldn't figure out how Danny Dugan did the impossible. She worked long and hard to lock down Jason and secure her place with the Coopers. Danny had done it in a matter of days.\n\n\"I... I don't know. I just figured you were...\" She wasn't sure what she thought. She looked at him in those pants with those alligator shoes. It was all a bit shocking. \"... it's really true?\"\n\nDanny set his phone down, annoyed. \"Yeah, it's really true. I'm fucking Mandy Cooper. I fucked her for most of the weekend. I fucked her once before we got to school. I'm planning on fucking her again later today.\" He snipped. \"But don't sit here all shocked. You don't have to be my friend all of sudden. Mr. and Mrs. Cooper love me. Do they love you? If you don't believe me, go ask Mandy. Or why don't you find Jason. Where's he been? He didn't even bother to see you at his own party.\"\n\nBeth got suddenly worried. He hadn't bothered to see her at his party. She hadn't spoken to him since they left school on Friday. What the fuck was that about? And what did Danny Dugan mean when he said he fucked Mandy? She knew that Mandy was a virgin. They'd talked about it before. Dating was one thing. But fucking? This kid took Mandy's cherry? Not possible.\n\n\"You slept with her?\"\n\n\"Uh huh.\"\n\n\"Like sex?\"\n\n\"That's what fucking is, Beth.\"\n\nShe sat that there in silence staring at him. He didn't seem like his normal aloof, nervous self. Danny was finally able to give up that charade. He'd gotten past that months and months ago, but he kept up his appearance until it was time.\n\nThe bell rang.\n\n\"Mr. Dugan?\" Mr. Hutchins called out as he walked by the front of the classroom.\n\n\"Yes, sir?\"\n\n\"Mandy Cooper, huh?\" Mr. Hutchins said grinning. \"Well shit...\" He gave him a pat on the back. \"Way to finish the year strong, Mr. Dugan. Well done.\"\n\nDanny smiled and gave him a wink.\n\n******\n\n\"Somebody's gotta ask him!\" Brett said, holding court at the lunch table. \"It's fucking mayhem today! First, he disappeared from his own kickass party. Now he's acting fucking weird.\"\n\n\"I'll do it.\" Garret replied. \"It's fine. I'm sure he's just pissed off.\"\n\n\"We should be shoving that fucking nerd's head in the fucking toilet!\" Brett was really losing it over Danny's behavior. \"He can't just roll into school after being a fucking cockknocker his whole life and be...\" He pointed at Danny sitting alone. \"... well this! Look how he's fucking dressed!\"\n\nDani Stevens glanced at him. \"I don't know... I totally love the gator shoes. He's kinda hot. Maybe you're upset because you've had a thing for Mandy for like ever!\"\n\n\"Shut up, Dani!\" Brett snapped. \"Mandy doesn't date! How does Danny fucking Dugan end up with Mandy Cooper! It makes no fucking sense!\"\n\nBeth spoke up. \"I think he slept with her.\"\n\n\"Fuck off!\" Garret yawped. \"No way! How do you know?\"\n\n\"He told me.\" She said quietly.\n\n\"He fucking told you that!\" Brett snapped again.\n\n\"Yeah. Like it was no big deal. He said he fucked her all weekend. That he planned on fucking her later today.\" She said. \"Listen, has Jason said anything about me recently? Is he upset with me or something?\"\n\nNo one had time to answer her. Mandy walked in holding her tray. She didn't even glance at their table\u2014her table. She walked over to Danny and sat next to him. The entire cafeteria was abuzz with gossip.\n\n\"This is not fucking happening.\" Brett uttered with contempt.\n\nMandy leaned in and kissed Danny. It was a rather deep kiss and not school appropriate.\n\n\"Oh geez! What a day! People are like flipping out over us!\" She said amused. \"I missed you, by the way. Every second I didn't see you. Every time I felt my soggy panties.\"\n\n\"I missed you too.\" Danny smiled back at her. \"I had to sit through AP Bio with Beth. That was crazy. She did not understand it. She's gonna have questions for you. I don't think she believed me when I said it was true we were dating.\"\n\nMandy glanced at her old table. She waved. \"Well I bet she believes it now. She'd understand if she saw your fuckstick. My poor brother couldn't possibly satisfy her. I feel bad for her. I wonder if she knows Jason has a thing for me and my mom.\"\n\n\"I bet she doesn't. How could she? They've been together for how long?\"\n\n\"Three years. She thinks she's gonna marry him.\" Mandy's phone buzzed. She tapped on the screen. \"Shit. My mom is texting me. She's asking if I got a Danny load.\" She giggled. \"She'll be so upset that I've had this in me all day.\"\n\n\"Do me a favor, give her my mobile number, okay? You know your dad drove her to my house at 4am so I could cum down her throat?\"\n\n\"He didn't! Really?\"\n\n\"She's a cum junky, Mandy. She's got a really bad addiction to my spunk. It's okay. I didn't mind helping.\"\n\n\"You're so good to her. It's sweet.\" Mandy nuzzled into him. \"It's so nice to be with someone that's sensitive and thoughtful... and knows how to fuck!\"\n\nJason walked into the cafeteria and everything got suddenly quiet. He stared at his sister ashamed. Fuckface was ruining his life. Fucking ruining it. He walked over to his table and didn't even get to sit before he was barraged with questions.\n\n\"Dude! What the fuck is going on?!\" Garret asked first.\n\n\"With fuckface?\" He nodded toward Danny. \"I don't want to fucking talk about it. My fucking sister is apparently in love with him.\"\n\n\"Goddamnit! That is not okay! Jase? What are we gonna do?\" Brett said, feeling like he might lose it.\n\n\"Are you not even going to say hi to me?\" Beth finally spoke up, worried and hurt.\n\nJason felt like an idiot. The hottest girl in school is waiting for him and he can't seem to remember to think about her.\n\n\"Hey! Sorry! Hi, Beth.\"\n\nShe smiled relieved. Danny had gotten all up in her head. She'd show him everything was fine. She walked over to give Jason an even sexier kiss than the one Mandy gave him. If he wanted to compete for the Cooper's attention, she could easily win.\n\n\"I've missed you, baby!\" She cooed as she tilted her head and leaned in to kiss him.\n\nJason dropped his tray jumping back. \"Don't touch me! Don't fucking touch me!\" He shouted in fear of cumming in front of all his friends. His lunch tray landed on his shoes splattering his pants and making a huge mess.\n\nThe cafeteria erupted in laughter. People pointed and laughed. Jason Cooper turned and walked out holding his head down.\n\n\"Jase! What's wrong? What did I do?!\" Beth called after him.\n\nDanny watched with a satisfied grin. He didn't laugh or clap like the others. After all, he knew what it felt like to walk out of the cafeteria covered in food and embarrassed. But it certainly made him happy to see it happen to Jason Cooper.\n\n******\n\nLibby bawled on the phone to her husband. She was sitting on the Rodeo Ryder again cumming in a continuous stream of orgasms.\n\n\"It's bad! It's sooo bad, babe!\" She had tears pouring down her face. \"I need it! I need it now!\"\n\nGreg was sitting at his desk in his office. \"Well I can't do anything about it, Hun! The kid is in school! You can't take some other person's kid out of school!\"\n\n\"Well then it needs to be right after!\" She bawled. \"I'm dying!\"\n\nGreg sighed. \"How long has it been? Like eight hours? Not even? We can't expect Danny to show up every eight hours! He'll be stopping by three times a day!\"\n\nLibby sobbed harder. \"What am I gonna do?\"\n\nGreg tried to calm her. \"Relax, hun. I'll figure it out. I'll get your Danny load. You just keep training your cunt. Okay?\"\n\n\"Okay.\" She bawled as she came again. \"I'm c-c-cumming.\" She eked out between sobs.\n\n******\n\nJason slammed the door to the house. Worst fucking day ever! Libby came flying down the stairs in the rotunda. She was wearing her dog collar. It was the only thing keeping her from breaking down into an inconsolable, sobbing mess. Her cravings were beyond peak levels. She was dying for her next load.\n\n\"Danny?\" She called out. \"Is that you?\"\n\n\"What?\" Jason asked. \"No! It's not Fuckface! What the fuck! That kid ruined my life today! Ruined it! It was the worst day ever! Do you know everyone in school is talking about Mandy and Danny fucking Dugan? It's like I don't exist! And this!\" He pointed at his cock. \"What the fuck is wrong with my dick?! Do you how much yummy cummy I had to swallow today?\" He pulled down his pants and showed her the bag contraption. \"I've swallowed three full bags! This is my fourth!\"\n\n\"Oh god!\" Libby groaned hearing him talk about it. \"I need yummies! I need yummies!\"\n\n\"Wait. Why are you wearing a dog collar?\" Jason asked.\n\n\"It's 'cause I'm a thirsty bitch! I'm so thirsty!\" She cried. \"Where are Danny and Mandy?\"",
        "\"I dropped them off at his house.\" Jason noticed her snap crotch, see-through one-piece lingerie for the first time. His cock reacted by sticking straight up with the half-filled bag hanging from the tip.\n\n\"No!\" Libby cried. \"He needs to be here! I need my yummies!\"\n\n\"Ugh!\" Jason cried frustrated. \"You mean it's not just the bet anymore? You're fucking Fuckface whenever now too? That is so fucked up!\"\n\n\"I can't help it! I need it!\"\n\n\"I need you too! I want to fuck you and Mandy too! It's not fair!\"\n\n\"Jasey! That's a naughty thing to say.\" Libby scolded him between her sobbing. \"You want to suck mommy's fuckhole until Mandy and Danny get back with mommy's yummies?\" She needed anything to distract her.\n\n\"Yes!\" He said, excitedly. \"Wait! No! I can't! I can't touch you!\"\n\nThey both looked unhappy.\n\n******\n\nDanny pulled Mandy into his house. They were making out heavily. They stopped when they heard the noise down the hall.\n\n\"Is that...\" Mandy paused. \"... is your mom pumping her fuckhole?\"\n\nDanny listened. \"I... yep... it certainly sounds like it.\"\n\nMandy giggled. \"Does she do that a lot?\"\n\n\"Nope. This is new.\"\n\nMandy rubbed his fuckstick through his pants. \"I want to go listen! Can we be naughty?\" She took his hand and followed the noise. They saw the packaging for a brand new fat dildo torn open on the floor. Mandy pointed with a surprised look. \"She bought a big one.\"\n\nThey crept closer, the noises getting louder and more excited.\n\n\"Pound me! Pound me!\" Lori begged. \"Come on, baby! Split me open! Mommy needs it! Mommy needs it so bad!\" She was moaning loudly. \"Pump that monster into me! Ohfuck! Danny! Danny! I'm gonna cum so hard on your cock! Yes! Fuck yes!\"\n\nDanny's mouth nearly hit the floor. He tried to turn the other way. But Mandy had a huge grin on her face and held him back.\n\n\"No way!\" She whispered. \"This is so hot! She's begging for it! Are you and your mom fucking?\"\n\n\"No!\" Danny stated adamantly. \"Never. I had no idea!\"\n\n\"Well it looks like someone enjoyed watching you plow my holes! You should totally do her!\" Mandy fondled his pants feeling his cock. \"You're really hard, Danny! I think you like it.\"\n\n\"Oh! Oh! Yes! FUCK! FUCK ME! OH FUUUCK! I'm cumming!\" Lori screamed. \"Oh god! Yes! Yes!\"\n\nDanny pulled Mandy harder, unsure what else to do. They walked back to the front door and he opened it and slammed it shut. The moaning stopped immediately. Mandy still had that naughty glint in her eye. She took Danny to his living room and pushed him down on the couch. She pulled his cock out and started sucking it.\n\nLori poked her head out of the bedroom a few minutes later. \"Danny? Are you home?\" She saw the packaging for the dildo and picked it up quickly hiding it in her room.\n\n\"Yeah, mom! In the living room.\" He called back. \"Mandy stopped by.\"\n\nLori made her way out to the living room. \"I thought you were going to be late. I wasn't expecting you.\" She said turning the corner. \"Oh! Oh my! Okay! So this is happening.\"\n\nMandy looked up. \"Hi, Mrs. Dugan! Sorry. I've been dying to get this fuckstick in my mouth all day.\" She kept stroking it while she spoke. Her hand was gliding up and down that fat, veiny shaft. \"You don't mind do you?\"\n\nLori thought she should mind. Was she just going to let Danny get his cock sucked all over the house? Last night it was Libby Cooper. Today, it's her daughter. Who would it be the next time? He was full of surprises lately. She was just thankful they didn't come home a minute earlier.\n\n\"It's... it's fine.\" She finally stated.\n\nMandy sucked on it some more. \"Did you know that Danny just popped my cherry on Friday? If I had known how good fucking feels I would've lost it a long time ago. I haven't even seen many cocks. Just Danny's and my dad's and my brother's and one kid at school whipped his out to show me once.\" She shook Danny's. \"It's pretty big, right? Like bigger than normal?\"\n\nLori stared at it lustfully. \"Yeah, it's huge.\"\n\n\"I thought so!\" She giggled. \"I guess I'm lucky. Have you ever had one this big, Mrs. Dugan?\"\n\n\"Me?\" Lori wasn't sure the question was appropriate, but Mandy didn't think anything was inappropriate anymore. She sort of admired that about the girl. She had a stupid, aloof blindness to how hot and naughty she acted. \"I... well... Danny's dad was pretty big...\" She replied thinking of her husband. \"But not that big... Danny is definitely bigger... so... I guess not...\"\n\n\"Oh, Mrs Dugan! You are missing out! This is the best fuckstick! I'm not sure if it's because of the size or that it's Danny's... but believe me! It's the best!\"\n\n\"Um... yeah...\" Lori said. \"I'll take your word for it. I can't try Danny's fuckstick.\"\n\n\"Suit yourself.\" Mandy said giving it a long hard suck. \"Danny would share. And I don't mind. I already know my mom took his load last night. I'm not bothered. As long as he saves enough for me!\"\n\nLori looked at Danny like she didn't know what to do with this girl.\n\nDanny shrugged and smiled. \"Mandy, it's okay. I think my mom knows my fuckstick is here if she ever wants to use it.\"\n\nMandy smiled. She liked that answer. Danny hadn't put any thoughts in her head. She was just naughty and horny and now he was playing her game.\n\n\"You see!\" She giggled. \"He's the best! He's sooo thoughtful!\" She jerked him faster and gave him another suck. \"Do you wanna try? My mom and I like to take turns on his balls and his meat, but you could just tug while I chug!\"\n\n\"I don't think so.\" Lori said watching her hand slide up and down, hypnotically. \"I... I... just don't think it's a good idea. Right, Danny?\" She hoped for some back up.\n\n\"She's kind of relentless.\" He noted.\n\n\"But you could fix that, right?\" She said, knowingly. \"I mean being someone that knows the mind so well.\" Her hint was not so subtle.\n\n\"I could.\" Danny shrugged.\n\nLori suddenly understood what he meant. Not that he couldn't. He didn't want to. And so what did that mean? Did it mean he liked watching Mandy tease her? Or did it mean that he wanted her to stroke his cock? She wasn't sure what game he was playing.\n\n\"Danny, you really should.\" Lori encouraged him. \"I can only take so much.\"\n\nHe was ignoring her now. Lori didn't know what was wrong with her. She was certain that he didn't do anything to her. She really felt like she was just a bad person having very bad thoughts. Mandy's hand kept moving rhythmically up and down. If only they knew what she had been fantasizing about ten minutes ago.\n\n\"Come on, Mrs. Dugan! It feels so good! It's like the hardest thing you've ever felt. You could really hurt someone with this.\" She slapped it on her face. It smacked loudly over and over. \"I mean really hurt someone!\"\n\nLori walked over and knelt down. \"I shouldn't.\" She whispered. \"It wouldn't be right.\"\n\nMandy sucked on it some more. \"Look at it. I'm squeezing it with all my strength.\" She gripped it hard. \"It's just solid. Rock solid fuckmeat.\"\n\nLori reached out and touched it. The giggly brunette was so right. Her hand wrapped around the shaft. She felt its veiny contour. It made her gasp.\n\n\"I'm supposed to bring that load home to my mom.\" Mandy said. \"But you can have it. I think you're the best, Mrs. Dugan!\"\n\nLori's hand felt paralyzed as Mandy gave her a great big hug. \"I... I... really shouldn't...\" She whispered as her hand started to move. It felt so fucking good. \"Danny?\" She looked up at him.\n\n\"I haven't done anything!\" He held his hands up. \"This is all you.\" He grinned. \"I'm not stopping you.\"\n\n\"Oh god!\" She groaned when she got his approval. Her hand really started to work.\n\nDanny closed his eyes and moaned at the pleasure. His mom jacked him off while Mandy sucked the head of his cock. This was quite unexpected. His little slut was a bad girl.\n\nThe doorbell rang. Lori jumped up to go get it, looking for any excuse to leave. Mandy seemed disappointed.\n\n\"Did you like that, Danny?\" She asked with a sly smile. \"I told you she wanted it.\"\n\n\"You did great! Thank you.\"\n\nLori came back a moment later looking confused. \"Danny, there's a delivery for you.\"\n\nHe pulled up his pants. It was right on time.\n\nThe BMW sales representative stood on his doorstep. \"Danny Dugan?\"\n\n\"That's me.\"\n\n\"Fuck, man! You're one lucky kid. I've got a gift delivery if you could sign this.\" He handed him a clipboard with a bunch of paperwork. Then he held up a key. \"So, you're the proud owner of one BMW X6 M with limited exterior Azurite Black Metallic paint and the Taupe leather interior package with carbon fiber interior trim.\" He took a breath. \"It also has the Merino leather dashboard option. The 21\" M-double spoke wheels with performance run-flat tires. It's also got the executive package, which includes heated seats, heated steering wheel, surround view cameras, wireless charging, wifi hotspot capability, auto high beams, lane departure warning, parking assist... wait... I'm forgetting something... well... I'll take a look at the paperwork in a minute. Also, rear seat entertainment on the driver and passenger side... and... Oh yeah! A Bang and Olufsen sound system, Apple car play, the satin aluminum line exterior trim... and of course... the BMW Ultimate Care Package.\"\n\n\"Sweet!\" Danny put up his hand and bumped fists with sales rep. \"That's nice, right!\"\n\n\"It's the nicest car on the lot as far as I'm concerned. I mean if you want a sport utility vehicle that is top of the line.\" He looked sad giving it up. \"We've been dealing with Mr. Cooper for a long time. I don't ever remember him gifting a car to anyone. What did you do to get this? I've got to know!\"\n\nDanny shrugged. \"I'm banging his daughter.\"\n\n\"Mandy?\" The rep asked. \"No way! That's his princess. He'd never...\"\n\nMandy stepped out on the doorstep. \"What's going on, Danny?\" She looked over. \"Oh, hi, Mr. Rassmussen! What are you doing here?\"\n\n\"Your dad bought me a car.\" Danny said. \"Pretty sweet, right? You don't have to pick me up anymore.\"\n\nMr. Rassmussen just stared in disbelief. \"Yeah... I'm dropping it off... that's all.\"\n\n\"Danny, that's a nice car!\"\n\n\"I should drive you home. We'll test it out! Let me go tell my mom.\" Danny walked back inside while Mandy went to look at the car. He found his mom looking very conflicted in the kitchen. \"Mr. Cooper bought me a car. I'm gonna drive Mandy home.\"\n\n\"He what?\" Lori said, stunned. \"What do you mean?\"\n\n\"With Mrs. Cooper's new cum addiction, I guess he thought I needed to be able to get over there in case she's having withdrawals.\"\n\nNow it made perfect sense. She was beginning to see how intricate his manipulation of the Coopers really was. \"So you mean last night was part of a bigger plan? You made that happen so that he would think he needed to buy you a car to help?\"\n\n\"Yeah. I told you... months of layering and conditioning his thoughts. And it gives me a reason to keep fucking his wife.\"\n\n\"You're unbelievable! You're devious! You're incorrigible! This is all so terrible, Danny!\" She declared. Then she asked excitedly. \"What kind of car did we get?\"\n\nDanny laughed. \"It's a fancy BMW X6 M with every bell and whistle they had to offer.\"\n\n\"Whoa! How much is that? Like $70K?\"\n\n\"It's about $108K all in.\" Danny replied. \"I had the guy at the dealership special order it three months ago. He doesn't remember me. And it sat there waiting for Mr. Cooper's call. I made sure they wouldn't sell it beforehand.\"\n\n\"My god, Danny! I know they're rich, but you've bled Mr. Cooper of over $140,000 in three days! You'll make him broke at this rate.\" She gasped.\n\n\"It was always the point to put a big fucking dent in his wealth. This doesn't do anything. He's mega rich. Anyway, I've gotta go put a load in Mrs. Cooper. It's my duty.\" He sighed. \"By the way...\" He leaned in conspiratorially. \"... if you need a load... well... I love you most of all... remember that. You'd only have to ask.\"\n\n\"Danny!\" She choked. \"I... I...\"\n\n\"Gotta run!\"\n\n******\n\nDanny's car flew down the backroads towards the Cooper estate. He pumped the Pixies 1988 classic Where Is My Mind? as his own personal tribute to Mr. Cooper for the car. He found it amusing. Everything was finally coming up roses. Mandy's brunette hair was blowing in the breeze from the open windows. Danny thought he might actually be happy. He reached his hand over and slid it up her little suede skirt feeling her slick slit. She didn't say anything stupid. She just smiled back at him and spread her legs further. He rubbed her clit slow and steady. She came just as they approached the gate at the edge of her property.\n\nJason stared in horror at the car in the driveway. \"What do you mean my dad bought it for you?\"\n\n\"He just did. It showed up at my house.\" Danny said dismissively.\n\nJason couldn't believe it. It was way fucking nicer than his car. He looked around and then it occurred to him. \"Wait. What happened to my car?\"\n\n\"I don't know. I heard him talking about trading it in.\" Danny said. \"That sucks by the way. And you had a tough day at school too. I'm sorry. Those bullies can be rough.\"\n\n\"Fuck you, Fuckface!\" He cursed before storming off. \"Mommy!\" He called out like a petulant child.\n\nDanny watched with amusement as Jason's perfect life unraveled. Mandy ran in ahead of him already. Presumably they were all looking for the same person.\n\n******\n\nMandy sat on her bed and slid off her crusty panties. They had so much cum dried on them they were practically stiff. She waited as she heard her mother rushing down the hall. Her bedroom door flew open so hard she thought it might fall off its hinges.\n\n\"Yummies?\" Libby asked breathlessly.\n\nMandy tossed her the soiled panties. \"Cum soaked panties with dried up yummies all over them!\" She said.\n\nLibby snatched them out of the air and brought them to her nose inhaling before she started sucking on the gusset. \"Mmmmm.\" She groaned.\n\nMandy gave her a mischievous smile. \"And all of that yummy dripped out of here.\" She added, spreading her legs and then holding her cunt lips open with two fingers. \"You might not find anything left. I can't be sure.\"\n\nLibby dropped the underwear and crawled up on the bed collapsing between her daughter's legs. Her tongue lashed out and dragged along her slit.\n\n\"Mmmm. Mmmhmmm.\" She groaned.\n\n\"You'll need to make it cum, mom. If you want to get anything out of it.\"\n\nLibby grabbed her thighs and pulled her face into her daughter's pussy even harder. She really wanted her to cum. Mandy grasped her head and held her there, moaning like a whore and wiping her pussy up and down her mom's face.\n\n\"Fuck! You're sooo good at that!\" Mandy giggled.\n\nJason watched from the doorway stroking himself. And then Fuckface showed up and put his arm around him. He nearly threw up.\n\n\"Mandy said you've been eating a ton of cum lately.\" Danny quietly whispered. \"That's sounds pretty gay to me.\"\n\nJason wanted to deck him. He wanted to knock him the fuck out. But he was more horrified that his sister told Fuckface what she made him do. He thought about all the cum he swallowed today at school. It made him sick for a minute. He wasn't sure if it was the fact he did it, the fact he enjoyed it, or the fact someone else knew.\n\n\"Don't tell anyone.\" He said pathetically.\n\n\"Why would I? I think the bigger question is how long until you start trying butt stuff and then anal? It's a slippery slope, isn't it? You do have a thing for women's underwear already. Now you're guzzling cum. I dunno, Jase...\"\n\n\"No!\" He exclaimed defensively. \"They made me!\"\n\n\"Even at school?\" Danny asked rhetorically. \"Yeah, I heard about that too. Your mom was texting with me. I think you like it. I think that's why you look so ashamed. It's nothing to be ashamed of really. So you're gay or maybe just bi-curious. It's the twenty-first century. That's fine. Maybe not among the macho football players. But I thought you gave up football.\"\n\n\"I... I was thinking about it.\" He mumbled. Why was he talking to Fuckface? He fucking hated this kid. He was the reason his whole day had gone to shit. \"Just fuck off, alright? Nobody wants you around here. Leave my fucking mom and sister alone or I'll fucking torture you tomorrow at school.\"\n\nDanny squeezed him a little harder. \"Alright, Jase! I'll leave you alone. I need to go fuck your mom now anyway. It looks like she's just finished munching your sister's whorehole.\"\n\nJason was fuming. It was not a slippery slope! Fuckface didn't know what the fuck he was talking about. Stretching his butt sounded horrible. Didn't it? I mean, technically he'd never done it, so he wasn't entirely sure. Swallowing cum sounded horrible too, but then he tried it and found it delicious. He was about to leave but decided to watch Fuckface defile his mommy's holes.\n\nDanny walked up and climbed on the bed behind Mrs. Cooper. She looked back and lit up.\n\n\"Danny! Yummies!\" She squealed.\n\nDanny unsnapped the crotch on her lingerie. He dropped his pants, kicking them off one leg at a time. And then he pounded his cock into her needy pussy.\n\n\"Ooomph. Fuck!\" She gasped.\n\n\"There you go.\" He said reassuringly. \"I'll make it all better. I promise. Tell me what you are, Mrs. Cooper?\"\n\n\"I'm your whore!\" She cried out as her cunt stretched around his fat fuckstick. \"I'm a Dugan whore! Danny's whore! Please give me yummies!\"\n\nDanny grabbed her hair and pulled her neck back awkwardly. \"You're not done with Mandy's fuckhole yet, Mrs. Cooper. You're an insatiable little spunk addict. You need to get cum from both ends.\"\n\nMandy pulled her mom's head down to her cunt, while Danny pounded her from behind. Libby's name tag jingled on her dog caller while she got plowed by his huge fuckmeat. She was so happy! She lapped her daughter's cumdump cleaning it out as she howled in ecstasy. Mandy came first. Libby second. And then Danny put an absolutely massive load deep inside Mrs. Cooper's furburger.\n\n******\n\nLori Dugan wrestled with her emotions. How could she have allowed things to get so out of hand? At what point did things turn? She'd been a decent mom. She thought so at least. And she loved her son. That was an absolute. So, how had things gone from normal to extraordinary so quickly. She'd never considered him in a sexual way in her entire life. Not even for an instant. And now? She was mushing up her own mind trying to figure out when it all went off the rails.\n\nDiscovering your son can control minds was certainly a turning point! Danny forced her to watch the events at the Cooper's house. She'd gotten lost in it. She'd gotten carried away and took advantage of Libby Cooper. But she had tried to give him motherly advice before he fucked them and then out by the pool. She tried to be a good person in between her lapses in judgment.\n\nShe considered her reaction when they got home that evening. She'd admitted it was fun. It was fun, she thought. She'd been desperate for any kind of excitement in her life. And sure, she teased him a little by commenting on how good Libby and Mandy looked, and how tough it must have been to choose fucking them as Jason's punishment. It wasn't an overtly sexual comment even if she had been thinking about his cock.\n\nIt was when that call came in at 3am and she got upset with Danny when things really took a turn. She was letting him explain things too much. He kept talking about fucking these women. Other women too apparently! How many others? It kept reminding her how long it had been since she'd been fucked properly. Had she ever been fucked like that? And his little demonstration only made things worse. Making his cock hard and shooting off without stimulation! Could he really fuck for hours? Or at least long enough to let any woman have time to enjoy herself? That was something.\n\nMaybe it started when he explained his mind control and she hadn't believed him. He chose to prove it with an orgasm. An intense one at that. Could he just make a woman cum whenever? That was something too. It excited her. Thrilled her.",
        "His little game had spilled into their house now. He was getting sucked off whenever it pleased him. That huge cock choking those girls so good. Today, Mandy Cooper made her cross a line. That little slut was persuasive. She shouldn't have caved. But all she could think about was that big, fat meat hammer pounding her poor, unused pussy. She'd bought that new dildo thinking of her son. Well, that and she kept thinking of it in her ex-husband's asshole and that grossed her out. She pondered that thought. Was he her ex-husband? They weren't divorced. Not technically. Though she doubted she'd see him again.\n\nDanny had essentially given her permission to fuck him. Did she need his permission? Did she want it? Had she been waiting for it? She let him get away with so much. He had called those women whores and cumdumps and cock junkies. She didn't chastise him once over it. Why not? And now she got his permission before he left to go fuck who knows how many sluts. He told her to remember he loved her most. She could have that load if she needed it. She did need it! She craved it! But it wasn't right!\n\nShe fantasized briefly about having him mush up her mind. Then it wouldn't be her fault. Maybe he could make her a slutty cumdump too! Then she'd be like Mandy! Oh, Mandy! That aloof, hot little whore! She didn't care about anything except pleasing him and filling her holes! Imagine that, she thought. What a nice life that must be! To be rich and ditsy and only concerned about fuckmeat filling her up!\n\n******\n\nJason hid in his room. What was happening to his life? It started with that fucking bet! Somehow it'd gotten out of control. Fuckface had already fucked his mom and sister. That was bad enough! But now he was dating Mandy and fucking his mom whenever! Everyone had lost their goddamned minds!\n\nHis reputation at school was ruined. His friends thought he'd lost it. Beth looked so freaked out that he thought she'd never forgive him. And now Fuckface, the one that fucked it all up in the first place, was in his house telling him about intimate personal things in his own life! Things his own family shared with the fucking kid! Was it a threat? Did they all hate him now?\n\nJason couldn't figure out what happened. He remembered Friday being a normal day. He threw that party. And then what? Fuckface showed up. Fuckface made that fucking bet. Today, he was getting made fun of at school. He was swallowing his yummies by the bagful! His dad was buying Fuckface a fucking car. And Fuckface said he was on a slippery slope! Fuck him!\n\nJason was dizzy with all the craziness. Slippery slope? He'd never once considered putting anything in his bum bum. That was not going to happen. His man-pussy was a virgin hole! A tight, sweet virgin hole! He stopped to consider it. Virgin holes were meant to be opened up, weren't they? Weren't they? No! He shook it off. What was he thinking? You can't pop your own cherry! Can you?\n\nUgh! Jason paced back and forth. He saw his cheer costume hanging on his closet door. Why would he wear it? His friends would lambaste him if they ever knew. He played football! But, if he was being honest with himself, he didn't really want to play anymore. He liked cheering. And if his friends made fun of that were they really his friends? Maybe the reason he never tried to pop his bum bum was because of what they would say.\n\nJason hated his stupid fuzzy thoughts! He could end this once and for all. All he needed to do was go in the next room and get one of those delicious plugs and try his bum bum hole. If his man-pussy liked it then he'd know, right? It was simple enough.\n\nFuck it! He got up and walked into the training room and looked at the selection of sizes. He was big. Did that mean his bum bum was big? Maybe he'd try a medium one. He took a bottle of lube from the vast selection and walked back to his bedroom, shutting the door.\n\nJason pulled off his clothes and reached behind him touching his virgin bum. It sent shockwaves through him. Whoa! He lubed the toy and pressed the conical nub to his little puckered no-no place and tried to push it in.\n\n\"Oh god!\" He gasped as a wave of pleasure coursed through him. Maybe this was what he liked! He tried pushing it in again and it shot thunderbolts through his body. \"Oh yes! That's... wow!\"\n\nJason got lost in the act, pushing it harder and deeper. He worked it back and forth and twisted it this way and that way. He groaned lost in the incredible pleasure. And then plug pushed past its widest girth and sucked into his bum. His hips bucked and he came harder than he'd ever cum before. It was truly a blinding experience and his cock fired a load all over him in a long, hot sticky stream of yummy goodness.\n\nWhen he stopped writhing, he got suddenly still. \"Oh my god!\" He cried out softly to himself. \"Am I gay?\"\n\nHe snorted derisively. Of course not! He wasn't gay! He wanted to fuck his mom and sister more than ever. He liked pussy! He mindlessly shoveled the mess into his mouth. He totally dug chicks. Maybe Fuckface was right. He was only bi-curious. There's nothing wrong with that!\n\n******\n\n\"Danny!\" Greg greeted him boisterously. \"I saw your car in the drive! It's a gorgeous piece of machinery! Am I right?\"\n\nDanny looked back over his shoulder. \"Hey, Mr. Cooper!\" He slapped Libby's ass over and over. \"It's amazing, sir! I mean above and beyond really!\" He stated. \"Hang on! Let me just finish up. I filled all three holes for you, Mr. Cooper! I got one down her throat for the immediate relief... but I stored one in her dumb cunt and one in that mashed up roast beef that used to be her asshole!\"\n\n\"I knew you'd come through for me, son! It's just the kind of guy you are. Honorable! True to your word!\"\n\n\"Don't you worry, Mr. Cooper! I've got one more load in me. I'm gonna fill a water bottle for later. In case she needs a midnight snack, you know?\" Danny noted thoughtfully.\n\n\"Look at you! You're always thinking ahead. You're a real problem solver! You know if you ever wanted to intern and get a little business experience I'd love to have you down at the mothership!\"\n\n\"The mothership?\" Danny asked, despite knowing what he meant.\n\n\"Yeah! Cooper Enterprises! Where we're rebuilding a better, more prosperous world!\" He fired off the company slogan as he explained it.\n\nDanny finished wiping his cock off on Libby. He walked over and shook Mr. Cooper's hand.\n\n\"Mr. Cooper it would be an honor! And the car is simply a work of art in the form of an automobile! I'm forever grateful.\"\n\n\"Awww. Come on! It's nothing!\" Greg blushed and tried to play it off. \"Maybe you'll be a Cooper one day! Well I mean I know you're a Dugan and you'll always have your name, but I mean join the family! And I've gotta say being tied to the Dugans... not such a bad thing. You're a tenacious bunch!\"\n\n\"Thank you, sir! I'm sure my mom would be pleased to hear it.\" Danny noted. \"Sir... would it be okay if I let my mom use the car once in a while? I can use hers when she does. It's just that I saw how much she was ogling it. I felt a little embarrassed.\"\n\n\"Of course! Yes, Danny! Sure!\" Greg exclaimed. \"God, I hadn't even considered it! I hope I didn't upset her. Is she mad I gave it to you? I know she doesn't make as much as I do. I never intended for her to be envious or upset. I love that woman! Tell her I said hello and extend my deepest apologies.\"\n\nDanny slid on his t-shirt. \"Sure, Mr. Cooper. She's not mad. Just surprised and maybe jealous.\"\n\n\"Fuck me!\" He bellowed out, laughing. \"Have you considered starting a t-shirt company? All your shit is hilarious! I could back you if you wanted to give it a go!\"\n\n\"Maybe! That sounds like fun!\" He said. \"You know, I made one for you! It says: I defeated the Dugan horse cock and I'll got was this lousy t-shirt.\" He chuckled. \"Of course, I'll never be able to give it to you.\"\n\n\"The fuck you won't!\" Greg hooted. \"I'm getting my fucking t-shirt! As a matter of fact... no offense to you... but the Coopers need to train tonight! Can't have you sitting around doing opposition research. You already three-holed Lib!\"\n\n\"Alright, Mr. Cooper! I can take a hint!\"\n\nLibby was still sitting on the bed shoveling boy batter in her mouth like cum junky. Danny gathered his things and left. He didn't say goodbye to anyone. He stopped in the training room, amused with the elaborate nature of it, and filled a water bottle with his jizz. Then he just strolled down the stairs. Mission accomplished.\n\nHe ran into Beth in the driveway. She was looking at the new car. She saw everyone else's cars and realized that Jason had gotten an upgrade. She couldn't wait to go for a ride.\n\n\"Danny?\" She asked confused when she saw him. Some part of her still didn't believe it was true. \"What are you doing here?\"\n\n\"Hey, Beth!\" He said nonchalantly. \"Just dumping some cum in a Cooper! All in a day's work!\"\n\n\"What?! But Mr. Cooper is home! You couldn't have!\"\n\n\"Sure I could.\" He said hitting his keychain and unlocking his car.\n\n\"Wait! This is yours?\" She asked.\n\n\"Yep! It's sweet, right? Mr. Cooper bought it for me today. It just showed up at my house! What a surprise! That guy is awesome.\"\n\n\"He bought you a car?\" She'd never gotten a car! She hardly got anything! She was just biding her time until she could marry Jason. \"I don't believe it.\"\n\n\"Alright. Don't believe it. I've gotta get going.\" He opened the car door and turned back. \"Did you call first? I'm not sure they want to see you right now.\"\n\n\"I always come over whenever I want. They love me too! Jason and I have been together for three years!\"\n\n\"Okay.\" Danny shrugged. He climbed in his car and took off.\n\n******\n\nBeth Fleming was simply beside herself! She couldn't believe it was happening! What the fuck was going on?!\n\n\"But... but... Mr. Cooper...\" She stuttered in shock. \"I always stop by! You know that!\"\n\n\"Well not tonight, Beth! It's not a good goddamned night! How many times do I have to say it?\" Greg was really getting annoyed.\n\n\"Can I just talk to Jason? Did he tell you to do this?\" She had tears in her eyes.\n\n\"Jason is busy. It's a family night! Are you family?\" He asked.\n\n\"But... Danny was here... he's not family...\"\n\nGreg smiled. \"Yeah! That' a fine young man! I like that kid! I really do!\"\n\nBeth was horrified. Was Danny telling the truth? Did the Coopers really like him? Was he really fucking Mandy Cooper? What the fuck had she been doing for the last three years? She never got that kind of treatment! Mr. Cooper always treated her okay, but he never spoke about her like that. He never bought her a fucking car!\n\n\"Danny told me he stopped by to... and I quote... 'Just dump some cum in a Cooper.' And! And! He said it was... and I quote... 'all in a day's work.'\" She huffed, waiting for Mr. Cooper to explode. \"Can you believe that? He's gross. He's a pervert.\"\n\n\"No, no! Beth! You've got him all wrong. He's fantastic. The kid cracks me up! All in a day's work? That boy should be a comedian!\" Greg laughed to himself.\n\n\"He's fucking Mandy, Mr. Cooper!\" She gasped. \"Aren't you upset?\"\n\n\"What the hell else would he be doing with her? He's not a puff! He's not knocking on bathroom stalls looking for a guy to blow him! He's a red-blooded American male! If he wants to plow my princess, that's okay with me. He's a solid, young man! That's all a father hopes for.\" Greg exclaimed. \"But I don't know... I get the feeling you're trying to get me to dislike him? That kind of pisses me off. It's not your job to tell me who to like and dislike! Right now, I don't like you very much. You're a bratty, tattle-tale! If Danny wants to dump his cum in a Cooper it's none of your goddamned business!\"\n\nBeth stared at him in utter shock. She was reevaluating everything she knew. Danny somehow connected with him in a way she never discovered. How was that possible? She'd dreamed of marrying the Cooper wealth and living a prosperous, easy life. She was fucking it up! And Danny Dugan managed to weasel into their life in a matter of days! Mr. Cooper didn't just allow him to date Mandy, he'd also given him permission to defile her! It seemed wrong. All fucking wrong!\n\n\"I... I... I'm sorry, Mr. Cooper! That's not what I meant! Danny is great! He should fuck your daughter as much as he wants. It's none of my business...\"\n\n\"She's not a whore, Beth!\" Greg said, insulted. \"Jesus, what's wrong with you? I think you should just leave.\"\n\n\"Wait! I... I didn't mean it like that! I'm sorry if it came out wrong. I mean if they're happy then... then...\"\n\nHe walked her back to the door and showed her out while she tried desperately to apologize.\n\n******\n\nDanny flopped back on his bed. It was another good day! He could get used to this. All his planning. All his biding his time. All the abuse he took when he could've fought back. It was completely fucking worth it!\n\nHe hadn't been home more than five minutes when he heard his mother start moaning in her bedroom. It's almost as if she waited for him to get home before she started. He'd gotten so caught up with the new car and then fucking Mrs. Cooper that he hadn't had a chance to think about what happened earlier. Listening to her call out his name while she pumped her pussy. And then Mandy goading her into tugging on his cock. It was a little unbelievable to him. Sure, he had lots of unbelievable things going on, but he'd manipulated those events. He hadn't done anything to his mother. It was natural.\n\nThe noises got louder. And then she got more vocal, saying naughty things. Danny stared at his ceiling. She was teasing him. He was sure of it. She was trying to get him to come down there. Maybe she wanted him to make the first move. That crooked smile crept slowly across his face. He didn't want to make a move. He told her if she wanted his load all she had to do was ask. Besides he was tired. He laid his head back and fell asleep.\n\n******\n\nDanny ran as fast as he could, his brown mop of hair blowing in the wind, holding a wrapped-up cloth close to his chest. The Himalayan valley was reflected in his mirrored sunglasses, massive mountain peaks rose up all around him. His bright red, Hawaiian shirt hung open while he patted his chest, checking for holes or gashes. The only hole to be found was the large missing patch of fabric on his brown checkered pants where the napalm had singed through the cotton back in Peru. \n\nA monk appeared in front of him from seemingly nowhere. He swung two curved blades. Danny jumped back just in time as they crisscrossed his pants slicing an x across the front. The crotch flapped open as the minced garment fell apart. His cock slipped through the new opening. He jumped on a rock and then somersaulted over the warrior, his flaccid member slapping the monk in the face on the way, stunning him temporarily.\n\n\"Go!\" He cried as he approached the old, beat up yellow Matador. The mini-bus had seen better days as it rattled to life. \"Go! Go!\"\n\nA blow dart missed his neck by a quarter of an inch, striking Lori in the right leg inside the bus. \n\n\"Ow!\" She screeched looking at the long, thin needle in her leg. \"Wha... what's happening? Where is the Taj Majal?\" \n\n\"We're not going to Taj Majal, Mrs. Dugan! Danny and I are...\" Mandy ducked as a blow dart nearly hit her. It struck Lori in her left thigh instead. \"Damnit! You've gotta watch out!\" \n\n\"But... wait... you're what...?\" Lori asked.\n\nDanny dove through open door on the back of the tiny bus, rolling out of the way. A team of acrobatic, warrior monks charged after them, jumping and bouncing off trees and boulders doing impossible flips and rolls. They were fast.\n\n\"... treasure hunters! They're treasure hunters!\" Libby called out as she finally got the bus in gear and it lumbered forward. Her chest was bare save for a set of tiny propeller pasties on her nipples. Her titties bounced wildly as the bus lurched over the rocky terrain, the propellers spinning. \"... and occasionally mercenaries!\"\n\nDanny popped up looking frazzled. \"Those fuckers are squirrely!\" He peered over the seat, looking out the back window. \"Faster! Faster!\" He cried. \"They're gaining on us! Who picked this bus? I said a truck! A truck, not a bus!\"\n\n\"I don't understand!\" Lori cried. \"You don't sell hummels?\"\n\nDanny looked at her. \"Jesus! They got you! Get those out!\" He grabbed the needles and ripped them from her thighs throwing them out the rear of the minibus. He licked his finger. \"Damn! It's a paralytic!\"\n\nLori realized she couldn't move her legs. \"I'm going to die!\" She screamed.\n\n\"You're not woowing a wie!\" Danny called back reassuringly. He realized that his lips and tongue were numb where he tasted the poison agent. \n\n\"What?\" Mandy said, pulling out a high powered rifle. \"I can't understand you.\"\n\n\"Weer.\" Danny tossed her the velvet cloth. \"Why wot woisen in why wouth! Wide wose!\" \n\nMandy grabbed the package out of the air as the bus nearly got stuck navigating a rocky section of the valley road. She unraveled the cloth and held up a long string of the most pristine beautiful giant pearls. The largest one was nearly three inches in diameter and they got gradually smaller. Each was inlayed with sapphires. The string was made of the finest braided gold. \n\n\"The mythical pearl anal beads crafted by the warrior monks of the lost Himalayan Bumbumghala Kingdom! They're magnificent, Danny!\"\n\nDanny gave her a thumbs up! \"Why wot wa wroll woo!\" He said holding up an ancient piece of rolled up parchment.\n\nLori stared at pearls with wide eyes. \"They're... they're... beautiful...\" She didn't finish before Mandy flipped up her dress and started feeding them into her ass. \"Oh god! Mandy! What are you doing...\"\n\n\"Sorry, Mrs. Dugan. It's for safe keeping.\" She replied as she forced them into her butt.\n\nThe bus struggled over the rocky terrain and Lori bounced forward toward the open door in the back. Her legs were useless to stop her. Mandy grabbed the end of the string as Lori teetered out the door, the pearls were popping out of her ass one at time. \n\n\"Oh fuck!\" Lori groaned at the pleasure.\n\n\"Squeeze those cheeks.\" Mandy cried. \"Hold it in or you're gonna fall!\"\n\nLori clenched her butthole holding the largest pearl inside as it desperately tried to open her up. It was the only thing that kept her from tumbling out.\n\nDanny aimed the weapon out the back window. He fired a few rounds hitting nothing. \"Why waim wis woff! Wandy! Welp!\" \n\nHe saw his mom hanging out the door. He jumped down off the seat getting behind her and pulled her waist back. If she fell out they'd surely capture her. Lori's ass lifted and Danny pulled her right onto his cock. \n\n\"Ohgod! Danny!\" She had a crooked smile on her face. The largest pearl was stretching her open. It was almost free, and his cock stretched her other hole. \"Oh god! Oh god! Fuck!\"\n\n\"Hold it steady, Mrs. Dugan! Clench!' Mandy called out. \n\n\"Why didn't she drive? I'm better at helping Danny aim! I'm a great cock holster!\" Libby cried.\n\nDanny fired off a series of shots. Warrior monks dropped one at a time until they were safe.\n\nLori couldn't clench anymore. The last pearl popped free. \"Holy fuck! Danny!\" She cried out as she came.\n\nDanny grabbed her hip with one hand keeping her in the bus. He smacked his lips together. The feeling was coming back. \"You mean Holy monks! And we just tore 'em a new asshole!\" He declared with the rifle still perched against his shoulder and his mom's ruined rear entrance gaping back at him.\n\n",
        "\n\nA rhythmic knocking disrupted an otherwise perfect movie trailer.\n\nDanny rolled over trying to pry open his sleepy eyes. He rolled right off the edge of the bed and hit the floor with a thud. His hand reached up to his night stand searching for his alarm clock. He found the cord and tugged it causing the clock to slide off and land on his head.\n\n\"Ow!\" He groaned and then lifted the clock up and read the upside-down numbers. \"7am? Damnit.\" The knocking continued and he glanced at the door. \"What?\" He called out.\n\nLori opened the door and poked her head inside tentatively. \"Morning.\" She said nervously. \"Can we talk for a minute?\"\n\nDanny lifted himself from the floor. His morning wood sprung out from between his legs. He rubbed the back of his head where the alarm clock hit him, and then laid back on the bed, waving her inside.\n\n\"It's about everything that's been happening...\" Lori said quietly. \"...I shouldn't have let you do any of it... or I should have said I didn't approve. I know I can't make you do anything.\" She stared at his towering manmeat. It made this harder. \"I shouldn't have touched your... your...\"\n\n\"Cock?\" He asked.\n\n\"Yes!\" She said relieved. \"It's not right. You're my son. But... I also can't deny that while I should disapprove of everything, it's got me really turned on lately. And I haven't been thinking clearly. I'd be lying if I said I didn't want to touch it. I'd be lying if I said I hadn't been fantasizing about it.\"\n\n\"What's the problem?\" He yawned, annoyed. \"I didn't complain about it.\"\n\n\"That's the problem!\" She said getting a little more worked up. \"You didn't! And you just walk around here with your cock out all the time now. And you get your cock sucked in the living room whenever you feel like it. It's hard not to stare at it!\"\n\n\"So you want me to wear clothes and not fuck in the house? Got it.\"\n\n\"No! That's not the problem!\" She said exasperated. It seemed impossible to talk to him lately. He was completely different than the son she knew only a few days ago. And in turn, she felt different. Their relationship felt different. \"I... I... don't want you to put it away! I just don't want to feel guilty for liking it. Any of it! For wanting you. For liking what you're doing to the Coopers. I want to feel like I'm not a bad person.\"\n\n\"You want me to change your thoughts?\" He asked confused. \"Like you want me to make you not want me? Or you want me to erase your memories of what I've been doing?\"\n\nLori wasn't sure. That seemed like it would solve her problem. But she didn't want that at all.\n\n\"Could you... maybe... just... make me not feel guilty about it?\"\n\n\"So you want to want my cock but you want to not feel guilty about wanting my cock? Is that it?\"\n\nHer face was a deep crimson. \"Well... y-y-yes...\" She squeaked out softly. \"I'm terrible! I know it. But I'm having bad thoughts... unmotherly thoughts... and you made me cum so hard the other day when you first told me about your power. You didn't have to do anything to make it happen. And I've been watching you use those women... I want to be okay with all of it. I want you to make me think it's okay.\"\n\nDanny thought about it. \"So you really want my cock?\" He fixated on that central detail with a stupid grin. \"It must be hard looking at me with this big morning wood.\"\n\n\"Come on, Danny! Don't tease me. Do you think it was easy to ask this?\" She implored. \"I'm confused. And I know you could do all kinds of things to me. You could even disappear me like you did your father. So I'm trying to be honest... I like the version of us that's honest with each other.\"\n\n\"What if instead of making you think it was okay, I just made it so that every time you thought about my big hard fuckstick you got the sensation of being fucked by it? What if thinking about me makes you so wet and horny that you just want to explode!\"\n\n\"No! That's not what I'm...\" Lori stopped as she felt that big, fat cock sliding inside her. \"Oh god! Yes!\" She groaned. \"Wait! I... this isn't what I asked...\"\n\nIt didn't matter. Danny had done his will. She looked down at her nightgown and knew that he wasn't fucking her, but it felt like it. It felt like she was being pumped slowly. Danny stroked his cock, which only made it worse.\n\n\"Oh fuck! Danny!\" She gasped. \"Make it stop! Make it...\" She felt her pussy flooding with wetness. It was unreal. \"Ohfuck. Yes! Yes! Ohmyfuckinggod! I haven't felt this good in... in.... wha... what's happening?!\"\n\nLori was already on the edge of her climax but it wouldn't come.\n\n\"I said you'd want to explode. I didn't say you would.\" He grinned.\n\n\"No! Please! Make me cum!\" She gasped.\n\n\"You wanted me inside your head. I told you already that I've purposely avoided it. I'm not going to make you feel like it's okay to want me. If you want me you can tell me.\" He said watching her struggle. \"You know what I've learned since I got my ability? What I've learned over the last so many years? People are horrible. Winners win. Losers lose. And the world is filled with shit. The world makes all these rules on what's right and what's wrong and good, well intentioned people have to work ten times as hard to get anywhere in life. But on rare occasions a loser like me gets to right all the wrongs. I say fuck the rules! Fuck life's playbook! Take what you want! Other people do. And if you want me then you can tell me. You make peace with it. This...\" He gestured her frazzled state. \"...only happens when you think about me. Stop wanting me and it stops. Or want me and be okay with it. I don't care.\"\n\nLori had the fabric from her nightgown pushed deep between her thighs as she tried to rub her clit without exposing herself. She was frantic.\n\n\"Please! I'm sorry! I can't handle this. I take it back, okay?\" She begged him to make it stop. Or maybe she wanted him to let her finish.\n\n\"It's time for school. I've gotta get ready.\" He stood up and walked out of his room to go shower.\n\n\"Please! Danny! Let me cum!\" His mom called out in desperation.\n\n******\n\nGreg Cooper marched down the hall with a brand new intensity. He had his coaching outfit on and he was fired up! He grabbed the whistle from around his neck and blew it three times.\n\n\"Coopers! Get the fuck out of bed! School is cancelled! We're all calling in sick. Today is training day! Everyone get in the goddamned training room in ten!\" He bellowed out with an authoritative bass.\n\nHe walked back in his bedroom where Libby was rubbing her fuckhole.\n\n\"What's going on?\" She asked. \"You're calling in sick?\"\n\n\"We are going to win this goddamned bet once and for all! Look at us, Lib! You're a cum junky and a Dugan whore. Jason is a fucking retard that blows his load if he sees a girl! Mandy's getting plowed every chance she can get, but when it comes time for the competition her fuckhole spouts like an open fire hydrant! We're ending this! We're restoring our family pride!\"\n\n\"So, we're doing the bet again? Danny is gonna fuck me?\" She asked hopefully.\n\n\"Don't look so happy! Damnit, Lib! We used to fuck all the time. My cock needs some good pussy too!\" He marched off without waiting for a response.\n\nMandy was already in the training room when he arrived. \"Daddy! I need to go to school! Danny will be there! Don't make me stay home. I need to see him!\"\n\nGreg was furious and annoyed. \"You need to get your fuckhole trained goddamnit!\" He grabbed her and bent her over the bed. \"You will do this for the Cooper pride! Do you hear me?\" He spanked her bare ass hard. \"God! You're already soaked just thinking about him!\"\n\n\"Sorry, daddy!\" She whimpered.\n\n\"You want fuck practice?\" He asked, staring at her round, perfect ass and tight wet snatch. \"I'll give you fuck practice!\" He began unzipping his shorts. His cock was so hard and dying to cum. \"I'll test this fuckhole and see what all the fuss is about!\"\n\n\"Really, daddy?!\" Mandy chirped excitedly.\n\nGreg knew that he shouldn't. But he was desperate for a good fuck and his wife was addicted to Danny's load. Maybe this new pussy was what he needed to get his head right. His little princess had been teasing him lately. She was practically begging for it. He had to admit she was fucking hot. Ever since Danny lined her up next to Libby on the bed, he'd been thinking about her more and more. He dragged his cock along Mandy's wet slit. It was an electric feeling.\n\n\"Fuck, princess! Your little fuckhole is magnificent!\" He pressed it into her cunt and groaned as it gripped him tight. \"Jesus! It's a like a velvet glove! How could he not blow inside this?\"\n\nMandy looked back at him. \"You really like it, daddy?\" She asked with a naughty smile. \"You're fuckstick is nice too!\" She liked the feeling of a cock inside her, but she had to admit that it didn't get her worked up the same way Danny did. \"Come on, daddy! Fuck my cumdump!\"\n\nGreg started pounding her hard and fast. \"I fucking love it! It's better than your mom's cunt! So much better!\"\n\nLibby walked in a few minutes later, completely unconcerned that her husband was fucking their daughter. She needed yummies. That's all she cared about. She sat and watched as Mandy got pumped. She wondered why she didn't lust for her husband's cock anymore. It was a nice cock. And he looked hot pumping it into Mandy. She used to love it, but that was before Danny fucked her.\n\nShe laid across the bed, face to face with her little girl. \"How is it?\" She asked. \"Doesn't your dad have a nice cock?\"\n\n\"Oh god!\" She groaned. \"He's so strong, mom! He's pounding it really hard!\"\n\n\"You like that, Princess? You like your daddy's cock in your cunt?\" Greg huffed out.\n\n\"Yes, daddy.\" She replied as her body jolted against the bed with each thrust. \"I... I... I don't think it'll make me cum though. It's not like Danny's fuckstick. His stretches me out so much...\"\n\nGreg was immediately deflated. He couldn't hold back his climax, and she wasn't even close. Her hole was just so damn tight! Fucking Danny! He pulled out quickly and shot a hot stream of cum down Mandy's back.\n\n\"Oh, daddy!\" Mandy cooed feeling the sticky mess on her back. She loved feeling fresh cum on her.\n\n\"Fuck!\" He cried, annoyed. \"Goddamn that horse cock! How are we supposed to train? We can't even do fuck practice! I just don't measure up!\"\n\n\"It's not you, babe!\" Libby said sympathetically. \"Your cock is wonderful. It's just not the same.\"\n\n\"I'm taking a time out! I need to think. You two get in the next room and get your goddamn holes trained! I'll be back in five.\" He walked out feeling more frustrated than ever.\n\nJason strolled into the training room feeling pretty happy. No school! He wouldn't have to face his friends or Beth or deal with Fuckface's fucking bullshit. He'd spent most of the night stuffing his bum bum and cumming so fucking hard.\n\n\"Jason!\" Libby gasped when she saw him. His cock was immediately rock hard at the sight of them naked. \"What is that?!\"\n\n\"What's what?\" He asked rubbing the sleep from his eyes.\n\n\"In your ass!\" She yelped. \"Is that a... a...\"\n\nShit! He completely forgot that he fell asleep with the plug in his bum. How had he not realized it when he woke up? He reached back feeling the end of it. It shot that amazing pleasure through his body.\n\n\"Oh. It's... um... it's a... you know....\" He held his eyes down feeling embarrassed.\n\nLibby got off the bed. She walked over and knelt down staring at his ass. She touched the end of it and then tried to pull it out. The second she placed her hand on him he started to cum, shooting a thick load onto Mandy.\n\n\"Ohgawd! Don't touch me! Fuuuuck!\" He croaked.\n\n\"What the fuck, Jase!\" Mandy scoffed. \"I don't want your gross cum on me!\" She looked back at her mom. \"What's going on? Do you see what he did to me?\"\n\n\"Your brother has a butt plug in his ass!\" She said flatly.\n\n\"Eww! You're so disgusting!\" Mandy gasped. \"Why would you do that?!\"\n\n\"I... uh... I dunno...\" He said with a crimson blush. \"...it felt good...?\"\n\n\"Go clean your sister!\" Libby ordered in a motherly tone. \"I don't know what's happened to you lately! You have problems.\"\n\n\"But... but... I can't! You know what happens!\" He pleaded.\n\nLibby got up and emptied the bowl of condoms on the dresser. She handed it to him.\n\n\"Don't make a mess!\" She said.\n\n\"But mom!\"\n\n\"Now!\" Libby snapped. \"Or you won't be able to see me or your sister naked!\"\n\nJason hung his head and took the bowl. He climbed on the bed and placed the receptacle between his legs. Then he lowered his head and began licking the mess he made on her back. His cock started spewing immediately.\n\n\"Ohfuuuck!\" He cried as he dragged his tongue across her ass. \"Ohgod! Fuck! Fuck!\"\n\n\"That's it, Jase!\" Mandy laughed. \"Get all of dad's cum too!\"\n\nJason paused. He licked his lips realizing that the taste was different. \"Dad came on you?\" He asked. \"But...\"\n\nThe flavor in his mouth was so yummy. He couldn't understand why he craved it. Was that his dad's yummies? It should have made him gag, but instead he felt the urge to go back for more. It tasted way better than his own.\n\n\"You're as bad as mom!\" Mandy chuckled. \"You like dad's cum, don't you? Oh god! Look at you! You're even grosser than I thought!\"\n\nJason felt so strange. His head was all foggy again. What was wrong with him? His sister laughed at him and he felt so small. But he wanted more. All that yummy streaked up her back in a trail of tasty goodness. He brought his head back down and started lapping it up. His cock spewed an endless amount of yummy into the bowl. If his dad tasted this good, he wondered what other yummies must taste like. Were they all delicious?\n\nHe finally lifted his head when her ass and back were clean. He looked down at the bowl. It had a white soupy mess in the bottom. Nobody told him to do anything. He just lifted it up and tilted it until all that yummy cummy poured down his throat.\n\n\"You're so gay!\" Mandy giggled.\n\n\"I'm not gay! Fuck you, Mandy! I'M NOT FUCKING GAY!\" Jason fumed. A bit of cum trickled down his chin. He gathered it with his finger and licked it clean.\n\n\"Of course you're not, sweetie.\" His mother reassured him. \"You're just curious.\"\n\n\"You see!\" Jason spat back at his sister. \"I'm just curious!\"\n\nGreg walked back in the room. \"Alright! Sorry about that. I'm feeling better.\" He stopped seeing his son kneeling next to Mandy on the bed. \"Jesus fucking Christ, Jason! You're a puff! Get that shit out of your asshole!\"\n\n\"I'M NOT A PUFF!\" He screamed in a tantrum. \"I'M NOT!\" He stormed out of the room. \"I hate all of you!\"\n\n******\n\nDanny rolled through the senior parking lot and pulled his car into Jason Cooper's spot. He saw all the stares as people ogled his new vehicle. He felt like a golden god! He killed the engine and then hopped out of the car. He was wearing a navy blue suit with a white button down shirt and a pair of shiny black wingtips. His collar was open and he had his aviators on. He looked debonair. He slung his messenger bag over his chest and walked toward school while everyone watched in disbelief.\n\n\"Wait!\" Beth called after him. \"Danny! Stop! I need to talk to you!\"\n\nDanny waited as she caught up to him. \"What's up, Beth?\"\n\n\"What happened last night? Do you know something I don't know? Mr. Cooper kicked me out. Jason isn't talking to me.\" She said distressed. \"I don't understand. Why would he buy you a car? How did you get him to like you?\"\n\n\"That's a lot of questions.\" He remarked.\n\n\"Sorry. I'm sorry, okay? I admit that you've got some connection with Mr. Cooper. How? How is he okay with you cumming in Mandy? I was upset and I told him what you said to me about dumping your cum in a Cooper. I'm sorry. It was stupid and I shouldn't have said anything. But he didn't care. How is that possible? Please! I need you to help me!\"\n\n\"I didn't cum in Mandy last night.\" Danny answered.\n\n\"But you said that you dumped your cum in her!\"\n\n\"Not Mandy! In Mrs. Cooper.\" He corrected her.\n\n\"What?!\" She screeched.\n\n\"Look, Beth, I don't expect you to understand. That old whore loves the dick. Well... she loves mine at least. So I told Coop I'd come over and fill her up for him.\"\n\n\"That's not true. You're lying.\" She huffed.\n\n\"Why would I lie? You can't tell anyone. I'm only telling you because I kinda feel bad about what's happening with Jason.\" He pushed some more thoughts out as he spoke.\n\n\"But... how? Mr. Cooper would never allow it. And what's happening with me and Jason? What do you know?\" She looked so confused.\n\n\"You really don't get it. I could try and explain it to you, but I'm not sure you'd believe me.\" Danny said sympathetically. \"As far as Jason... he's got some issues. I'm not sure you really know anything about him.\"\n\n\"What do you mean?! Please explain it! I need to know!\"\n\n\"Beth, you really don't understand. You can't tell anyone. You can't.\" He looked her up and down. \"You poor thing. I don't know how you couldn't have realized it. You should probably move on and forget about him. Go out and get fucked. You look like you could use a good fucking.\" He drove that thought deep and reinforced it.\n\nBeth stared at Danny more confused than ever. Why had she never paid attention to him? How did he seem so different all of sudden? He knew what was happening. She was certain of it. She needed to know.\n\n\"I'll do anything!\" She pleaded. \"Just tell me what's happening! Tell me how you made Mr. Cooper like you!\"\n\n\"I've gotta get to class.\" Danny said dismissively. \"Sorry, Beth.\"\n\nShe watched him walk away. \"Danny! Please!\" She shouted.\n\nHe didn't stop.\n\n******\n\nLibby Cooper was on the bang bench. It was adjusted so her body was on a slight incline. Greg attached the optional stirrups, keeping her legs open and bent at the knees. The bench had two piston arms with a dildo attached to each. They were pumping rhythmically pounding her fuckhole and her ass simultaneously. She looked frenzied.\n\n\"Please! I can't hold it!\" She whined as the machine fucked her at an incredible pace. \"Let me cum!\"\n\n\"No!\" Greg stated adamantly. He held a water bottle swirling it around. \"You want your Danny load?\"\n\n\"Yes! Ohgod! I need it! Let me have it!\" She begged.\n\n\"Hold that orgasm or I'll never let you have it.\" He demanded before turning up the speed on the motor causing the machine to fuck her faster. \"Hold it!\"\n\nLibby gripped the side of the bench as the two silicone cocks tore up her holes. Her legs were shaking badly as she tried to hold it.\n\n\"Oh fuck! I can't! I can't! It's p-pounding me too h-h-hard! OH FUCK! FUCK! FUCK!\" She screamed. \"I'm not gonna be able to do it! Please give me yu-yummies!\"\n\nGreg taunted her holding the plastic straw so close to her mouth. \"If you cum, I'm pouring this down the drain.\"\n\nLibby's eyes looked horrified at the thought. \"NO! Please!\" She heaved and hyperventilated doing everything possible to hold it. \"OHMYFUCKINGGAAAWD! FUCK IT'S SO GOOD!\" Her entire body was tensed up while her legs shook and her toes curled.\n\nGreg checked his watch. \"Thirty more seconds. Then you get a taste.\"\n\nLibby puffed her cheeks and huffed like she was giving birth. Her eyes started to roll back in her head. \"I... I... I c-c-can't!\"\n\nGreg checked the time and then leaned the straw to her lips. \"Okay.\" He said.\n\nShe caught the straw between her lips and started to suck. Boy batter hit her tongue and she lost it.\n\n\"OHMYFUCKINGGAAAWD! I...I...I'M C-C-CUMMING SO FUCKING GOOD! SO FUCKING GOOD!\"\n\nGreg slowed the motor until it stopped. He slid the dildos out of her holes while she squirmed on the bench.\n\n\"Look at that!\" He hooted, pointing at the thick cream covering the one from her pussy. \"Danny's never made you cream like that!\" He seemed pleased at the thought. \"You did so well, hun! You held that for forever! I've gotta get Mandy on this thing! It's the best training we've had yet!\"",
        "Libby sucked the straw on her water bottle like an infant on a pacifier. \"Mmmmm. Mmmhmmm.\" She cooed happily. She barely heard a thing he said.\n\n*******\n\n\"What's wrong with you today?\" Larry asked with a curious expression. \"Are you sick? I don't want you getting the whole office sick. Do you need to go home?\"\n\nLori sat in her desk chair gripping the arm rests for dear life. She had beads of perspiration along her brow line. That sensation wouldn't stop. It was going on six hours of feeling like she was being pumped by a fat cock and she couldn't cum. No matter what she did, it wouldn't happen. She was desperate for a release. She tried not to think about him, but she realized that it's all she'd thought about since Sunday night. It was impossible to focus on anything else.\n\n\"I'm sorry, sir!\" She replied to her supervisor. \"I'm feeling a little under the weather. Maybe... ohgod... maybe I should go.\"\n\n\"Go!\" He stated emphatically. \"Get out of here before the whole office catches whatever you have.\" He covered his mouth and then pressed a dollop of hand sanitizer into his palm.\n\nLori gathered her purse and headed for the door, shuffling as quickly as she could. Her panties were soaked, literally soaked through completely, and she could feel the wetness on her inner thighs. She got to the car and breathed a sigh of relief, happy to be away from coworkers. There was no point in staying. She hadn't gotten any work done anyway.\n\nShe did spend a lot of time thinking about her conversation with Danny this morning. And, in turn, that caused her to recount the last few days in vivid detail. Essentially, she asked Danny's permission to fuck him and partake in his little game of retaliation. That was the point of the conversation. But she didn't want to feel like she was complicit. She didn't want to feel the guilt over something she knew was so wrong and so terrible. But she'd admitted she wanted it, so she resigned herself to the fact that she'd already made up her mind.\n\nIt really didn't matter anymore. She didn't care if she felt guilty. The sensations that tortured her all day weren't remotely the same as feeling the real thing. She wanted it. She needed it. And she didn't care what the emotional cost might be down the road. Maybe there wouldn't be any. She really wasn't sure. This was all new territory. The only thing she knew for sure was that she needed to cum.\n\nShe parked her car in the driveway. A few minutes later she was naked on her bed with her new dildo pushed deep in her soaking wet pussy. Her soiled panties lay beside her, drenched.\n\n******\n\nBrett Dereckson pushed open the bathroom door. He had a menacing grin on his face.\n\n\"Dugan!\" He said, watching Danny wash his hands in the sink. \"You're a fucking dead man! You know the drill! Get in the fucking stall. It's bath time.\"\n\nDanny glanced up at the reflection of the football player standing behind him. \"Hey, Brett. What's up?\"\n\n\"What? What the fuck do you mean? You heard me, you stupid fuck! Get in the stall! I don't know what the fuck you're doing, but you're gonna learn to stay away from Mandy!\"\n\n\"Oh. Yeah. About that...\" He said with an easy smile. \"... not gonna happen. I'm sorry. I like fucking her too much.\"\n\nBrett shoved him forward, getting close as he fumed. \"Don't talk about her like that! You're dumber than I thought!\"\n\n\"Wait. Before you do your thing... can I show you something?\" Danny had layered thoughts into him already.\n\n\"What?\" He asked. \"I said get in the stall! Why aren't you moving? What do you have that I want to see?\"\n\n\"Some pictures. I thought you might like to see some pictures.\" Danny replied pulling out his phone. He tapped on the screen. \"So... this one is Mandy's cunt after I finished blowing my nut inside her.\" He tilted the screen so Brett could see. \"And this one... I took this right after I fucked her ass for the first time. Her anal cherry was such a treat. She cried at first. Oooh! And this one is after I gave her a facial! Look at my load dripping down onto her titties! She's got a nice set! Am I right?\"\n\nBrett's heart felt crushed. It was all true. Danny did fuck her. His Mandy. He had tears in his eyes as the reality struck him. He was paralyzed with sorrow.\n\n\"Noooo!\" He whispered, staring at the screen. \"You didn't really...\"\n\n\"Sorry, man.\" Danny patted his shoulder. \"You snooze, you lose. She's a great fuck too! Very energetic and flexible.\"\n\nAll that anger flooded back into him. Brett pulled his arm back to throw a punch, but Danny drove his knee into his crotch before he knew what happened. The football player collapsed to the floor, holding his dick as he cried.\n\n\"Come on, Brett.\" Danny pointed. \"Into the stall.\"\n\nBrett didn't understand why he was crawling toward him. He wanted to stop but he couldn't. He crawled into the bathroom stall and stared at the urine filled toilet.\n\n\"It's bath time!\" Danny said like it was a treat. \"Get your head in there.\"\n\n\"No way! You're not fucking serious. I'll fucking kill you before that happens!\" Brett seethed as he pushed his face into the yellow, piss-filled toilet water on his own. He started to panic when he realized what he was doing. And once his head was submerged he couldn't seem to pull it back out.\n\nDanny seemed amused. He leaned forward after twenty seconds and flushed the toilet. The water drained around Brett's head.\n\n\"Good talk, Brett. I'm glad we got that all squared away.\"\n\nBrett pulled his head back out terrified. He wasn't sure what came over him.\n\n\"What did you do to me?\" He asked, frightened.\n\n\"Nothing. You did that on your own. I think you felt bad about bullying me.\" Danny said. \"I'll make it up to you. I'll tell you where you can get your balls drained with no effort. This chick is an amazing cocksucker! First rate! You can tell the guys too if you want. Tell them it was all your idea. Since it totally is your idea.\"\n\nDanny spoke as he pushed in new thoughts. Brett stared back with a blank expression as he absorbed everything that was being said. After a few minutes, he blinked and looked around unsure what had happened. He was sitting on the floor of the stall. His head smelled like piss. It didn't make any sense. He couldn't remember coming into the bathroom at all. He was thankful no one else was around.\n\n******\n\nJason snuck into the training room after Mandy and his dad finished a round on the bang bench. His mom was passed out on the bed in the middle of the room. Her water bottle sat on the night stand. Jason stared at it. What could be so good about Fuckface's spunk that his mom acted like a total addict?\n\nHe tiptoed closer and lifted the water bottle, careful not to wake her. He opened the top and sniffed the contents. It was the most amazing scent. He wasn't sure what it was exactly but he got hints of honey and lavender and maybe vanilla. Was that vanilla? He shoved his nose in the wide mouth opening as if he was rating a fine wine. God! He'd never smelled something so delicious!\n\nWould it be wrong to taste it? He fucking detested Fuckface. He hated him more than anything! But what if his mom was right? What if fuckface produced the best yummies? A little taste wouldn't hurt, would it? Just a tiny little sip. He lifted the water bottle and watched that thick, white liquid pour down the inside of the plastic until it dripped out and landed on his tongue.\n\n\"Oh my god!\" Jason gasped.\n\nIt felt like he was high. Every molecule on his body felt like it was vibrating and his cock was instantly hard. It was throbbing hard! The taste was glorious! He poured more into his mouth and then his cock shot off in the most intense orgasm of his life, better than when he filled his bum bum!\n\n\"OH JESUS! FUCK!\" He cried as the cum spurted from him like a volcanic explosion of hot sticky yummies.\n\nLibby opened her eyes. Her mouth dropped when she saw Jason guzzling from her water bottle.\n\n\"Noooo! Jason! Stop it! Stop it right now!\" She cried out horrified and lurched forward grabbing the bottle. \"My yummies!\" She croaked in despair as she held the bottle upside down realizing nothing was left. \"How could you?! What is wrong with you?\" She started to cry.\n\n\"I'm sorry.\" He held his head down feeling guilty. \"I just wanted a taste. It's so good! I couldn't stop myself!\"\n\n\"Maybe you are gay!\" She cried. \"That was all I had left! I was saving it!\"\n\n\"I'm sorry, mom!\" He profusely apologized. \"I didn't mean to swallow all that yummy down. I promise!\"\n\nLibby wiped her tears. She was angry. \"You want to be a puff so badly! I'll teach you!\" She seethed.\n\nShe grabbed the bowl and handed it to Jason. Then she grabbed his arm and pulled him into the sitting room. His cock was spurting uncontrollably.\n\n\"On your hands and knees!\" She pointed to the Jaxx Hammer.\n\n\"But... but...\"\n\n\"Now!\" Her words were sharp.\n\nJason got on his hands and knees and then she locked the restraints on his ankles and just below his knees on his upper calves. She set his bowl underneath him. She pulled his forearms flat and strapped them to the base as well. He was locked in place, unable to move.\n\n\"Please, mom!\" He begged. \"I'm sorry!\"\n\nShe moved the base closer and adjusted the piston arm until the fat dildo pressed into his asshole.\n\n\"Oh god! Fuuuck!\" He was cumming from her touch and then the sensation in his ass. \"Nooohfuck! Fuuuuck! Please! Please, mommy! I'm sorry!\"\n\nNo matter how much he squirmed that dildo was still lodged his bum bum. Libby grabbed the controller and turned it on. The piston came to life, driving that cock deep in his anus.\n\n\"OH FUUUUCK! PLEASE!\" His cock was firing huge ropes of cum into the bowl beneath him. \"OH GOD! OHMYGOD!\"\n\nLibby was so angry. She jacked up the speed. Jason's bum bum was being torn to pieces and his whole body convulsed. His cock twitched and spurted beneath him. She poured some lube on his ass coating the offending object.\n\n\"Is that what you wanted?\" She spat. \"You're a good little puff now!\"\n\n\"OHGOD! OHGOD!\" He mumbled as his body was wracked by orgasms. \"FUUUCK! PLEASE!\"\n\nLibby stood up and left the room. She found her cell phone in the bedroom. She started texting immediately, desperate for more yummies.\n\n******\n\nDanny walked to his next class. It was AP Bio. He figured Beth should be completely frazzled by now. He walked in getting his usual stares as his classmates gossiped about his newfound persona.\n\n\"Mr. Dugan, keeping up with the new style. I like it.\" Mr. Hutchins remarked.\n\nDanny gave him a wink and continued to his lab station. Beth was waiting for him.\n\n\"Look, Danny...\" She started before he even set his bag down. \"... I don't want this to be a competition between us, okay? Mr. Cooper loves you. I admit it. All I'm asking is that you tell me how to get him to like me too. I'm begging. I'll do anything.\"\n\nDanny smiled. \"I mean... I'm not really sure, Beth. He just likes me. I don't know how to help you.\"\n\n\"You're sleeping with Mrs. Cooper!\" She whispered. \"He doesn't just like you! You should have heard him talk about you last night! I don't get it. All I want is to find out what happened with Jason! To save our relationship! We've been together for three years and now he's barely talking to me. I'm begging, Danny! Please! What's happening?\"\n\nDanny tapped a pen on the side of the lab table, thinking. \"Hmmm. What if you gave me your panties? I could maybe brainstorm a few ideas for that.\"\n\n\"What?!\" She screeched and then whispered quietly. \"You're not serious! I'm not giving them to you!\"\n\n\"Okay.\" Danny replied. \"Good luck then.\"\n\nBeth couldn't believe he'd ask her for that. Who did he think he was? But then she felt that nagging in the back of her mind. What if he really was the only one that could help her? What if he really was fucking Mrs. Cooper? She wasn't sure what might be true anymore. She didn't want to give him her used panties though. It seemed like too much.\n\n\"I'm... I'm not wearing any...\" She said quietly. \"Okay? I can't give you what I don't have. So is there something else?\"\n\n\"A blowjob.\" He said.\n\n\"What?! No way! What the fuck!\"\n\n\"A handjob then. My final offer.\"\n\n\"Ugh! Are you serious? No!\" She huffed. \"What's with you? Do you think you're some sex god now just 'cause you're fucking Mandy?\"\n\n\"Doesn't matter, does it? Anyway... that was my offer. Good luck.\" He turned his attention back to his phone.\n\nBeth was about to lose it. Did he really think he could strong arm her into a handjob? She was so annoyed. And she was horny. She really could use a good fuck, she thought. Danny's conditioning was eating away at her judgment. Jason certainly wasn't fucking her. Maybe a handjob wouldn't be too bad.\n\nShe leaned over the table. \"Fine. A handjob. But promise you won't tell anyone.\"\n\nDanny smiled. \"Hey, Mr. Hutchins.\" He said to the teacher. \"Beth and I have an important phone call. We're gonna step out for a minute.\" He pushed some thoughts along with it.\n\n\"Sure thing, Mr. Dugan. Take your time.\" Mr. Hutchins responded.\n\nDanny walked out with Beth following close behind.\n\n\"How did you do that?\" She asked. \"He just let us leave.\"\n\nDanny stopped suddenly. \"Let me ask you a question. If you're wearing panties then why not agree to give them to me instead of accepting my handjob offer?\"\n\nBeth stared at him blankly. She was wearing panties. And when she thought about it, she wasn't sure why she didn't go back to the original offer. She lied because she thought he was being too bold. She didn't want to give him the satisfaction. But why would she accept a more demeaning offer in lieu of it?\n\n\"How did you know I was wearing panties?\" She looked flummoxed. \"I... I... don't know... I thought...\"\n\nDanny didn't let her finish. \"I'm gonna have to take the handjob and the panties now though. You realize that, right?\"\n\n\"But wait! You can't have both!\"\n\n\"Fine.\" Danny replied. \"I guess getting both is unfair. So we'll just have to settle on the blowjob. Then it's just the one thing.\"\n\n\"Okay. That seems fair.\" She agreed. \"Where are we going?\"\n\nDanny was busy texting on his phone. \"Hang on.\" He said as he tapped on the screen. \"Sorry. Mrs. Cooper was bothering me. We're all good now. I thought we'd go to my car. I haven't even fucked Mandy in there yet. I flicked her clit until she came, but I didn't fuck her. So we'll christen it. You can be the first to get fucked in there.\"\n\n\"Really?\" Beth said, intrigued. She was always competing with Mandy. It sounded nice to take that away from her. \"Alright! I like that idea. I'd like her to know that you fucked me first.\"\n\nDanny smirked. She was devolving into a slut faster than she realized. Beth hadn't even noticed that she'd gone from a handjob to a blowjob to fucking over the course of their negotiation. It all seemed reasonable to her. And she really was feeling increasingly horny.\n\n\"Danny Dugan!\" A voice called as he approached the front door of the school. \"Where do you think you're going?\"\n\nDanny glanced back at Principal Garcia. She always looked so serious. \"Beth and I need to grab some stuff from my car. We'll be back in a couple minutes.\"\n\nShe narrowed her eyes. Her lips were drawn tight and her hair was in a tight bun with her eye glasses perched on her nose. She was no nonsense.\n\n\"Okay. Be quick, alright?\" She finally said.\n\n\"Sure thing, Principal Garcia! I'll be as fast as possible. I just need to drop a load in Beth's trunk.\" He replied.\n\nBeth gasped at his subtle play on words.\n\n\"Well get to it! I can't have you playing around in her trunk all afternoon.\" She waved them off.\n\nBeth stared at Danny with her bright blue eyes as they walked through the parking lot. \"How do you do that?!\" She asked. \"I can't believe you just told her you were going to cum in my butt and she didn't even get it!\"\n\nDanny gave her a sly smile. \"It's all in how you intonate and the words you choose.\" He lied. \"I read a book about it.\" He opened the rear passenger door on his car. \"After you.\" He gestured. \"It's time to fuck your ass.\"\n\nBeth climbed in and he followed. She looked around at the car. It was really nice. Danny pulled down the privacy screens on the windows. It was an added touch.\n\n\"Panties.\" He said holding out his hand.\n\n\"Oh yeah.\" She dropped her tight shorts and then slid off her panties. \"Here you go!\"\n\nDanny undid his belt and slid his suit pants down to the floor. He slipped his jacket off. And then he peeled off his boxer briefs. He was just wearing his button down white shirt.\n\n\"Danny!\" Beth gasped when she saw his cock. \"You're massive! Holy shit!\" She reached over and touched it. \"My god! That thing is crazy!\"\n\nHe focused inward and his cock rose to its full, throbbing size in seconds. \"Jason isn't this big?\"\n\n\"Not even close!\" She blurted.\n\nHe grabbed her head and pulled it down to his cock. \"Let's start with that blowjob before I ass fuck you.\" Her mouth opened and swallowed him. \"Oh damn! That's nice. Jason doesn't deserve that mouth. I promise I'll let you fuck me whenever you want. You couldn't be happy with him.\"\n\nBeth came up for a breath. \"Really? That's so nice of you!\" She smiled with saliva dripping off her chin already. \"I really need to get fucked. Can you believe he's not even talking to me? I'm dying for a fuck and he won't even call! He's not even at school today!\"\n\n\"It's shocking!\" Danny replied. \"Look at you! A petite, smoking hot blonde, with great titties and a sweet ass! I mean you're a perfect little fuck toy! You should be getting drilled all day long!\"\n\n\"Right?!\" She agreed emphatically. \"I should totally be getting fucked like constantly! You totally get it!\" She added before looking back at the log of meat in her hand. \"This cock is crazy, Danny! I'm not even sure it'll fit inside me.\"\n\n******\n\nMandy wandered back into the training room. Jason's pleas had turned into a dull whimper. He wasn't sure how long that thing had been fucking his bum bum. It must have been thirty minutes already. He'd cum so many times. He was exhausted. His body would've collapsed if he wasn't strapped down.\n\n\"Jase!\" Mandy laughed. \"You've decided to go full gay!\"\n\n\"I... I'm not... gay...\" He didn't have the strength to deny it. \"... help me...\"\n\nMandy pulled a stool up in front of him and put her pussy in front of his face. \"Mmmm. I want to cum while you watch. I'd let you lick me, but you like dick.\" She looked down at the bowl. \"God! How much have you cum? That bowl is filled with disgusting cum. I bet you can't wait to swallow it down.\"\n\nJason couldn't see the bowl. He wondered how much was really in there. He'd cum until he had nothing left. That didn't stop his orgasms. They continued to wrack his body and his hips bucked. Every so often he'd feel his cock spurt a little bit more.\n\n\"What did you do anyway? Did mom tie you down to this butt fucking machine?\"\n\n\"I... I... finished her yummies...\"\n\n\"Her water bottle?!\" Mandy asked with amazement. \"You drank Danny's cum?\"\n\nJason couldn't look at her. He kept his eyes on her perfect pink pussy while she rubbed her clit. That scent filled his nostrils. He loved that scent\u2014her scent.\n\n\"Yes.\" He replied dejectedly. His body trembled and his cock dribbled a little more cum into the bowl. \"Fuuuck.\" He moaned.\n\n\"You are so fucking gay, Jason. I don't know how you can deny it!\" She rubbed her clit faster. \"Well... I guess you do want to fuck me and mom. Maybe you are confused. But you are a cum guzzler for sure!\"\n\n\"It... it tastes so good...\" He finally admitted out loud.\n\n\"Oh, Jase! You're so pathetic. I'll let you off. You probably want that big bowl of yummies.\"\n\nMandy stopped the motor and unhooked the straps. She pulled the bowl out from underneath him. Jason eased forward while the dildo slid out of his ass. He collapsed flat on his stomach. His asshole was gaping.\n\n\"Damn.\" Mandy laughed. \"You got the shit fucked out of your ass!\"",
        "\"So good.\" He mumbled.\n\nShe set the bowl in front of him.\n\nJason looked at the immense amount of yummies. He lifted his head off the floor and put his lips on the rim and tilted it back slurping down his reward.\n\n\"Mmmmm.\" He groaned. \"Mmmmhmmm.\"\n\n******\n\nBeth really found her stride. She lodged that fat cock head in the back of her throat until she choked and her eyes watered. Then she took a breath and used both hands to rub her saliva up and down his impossibly hard pole, jerking him with twisting movements. She had a very good technique.\n\n\"God! I love this fucking thing!\" She groaned as she watched her hands gliding up and down. \"I'm not sure if we'll be able to get it in my ass... but... my pussy wants it! I need it so badly! I really need to get fucked!\"\n\nThe car door flew open. Libby found Danny exactly where he said he'd be except for one small detail. Beth Fleming wasn't supposed to be there. Beth fucking Fleming wasn't supposed to be stealing her fucking load of yummies!\n\n\"Beth!\" Libby said in a cold tone as she stared daggers into her. \"What the fuck do you think you're doing? How dare you!\"\n\nBeth looked up shocked at the intrusion, but even more shocked to see it was Mrs. Cooper. She felt so guilty! Here she was trying to find a way to mend things with the Coopers and now Jason's mom caught her cheating! It was the worst possible thing! What had she been thinking? Seriously! What had she been thinking? She was just so fucking horny! And Danny promised to help her! One thing lead to another! She didn't mean it!\n\n\"Mrs. Cooper! It's... it's not what it looks like!\" She tried to explain.\n\n\"The hell it isn't! It's exactly what it looks like!\" Libby shot back.\n\n\"Please! You can't tell Jason! It was a mistake! I don't know what I was thinking!\" She pleaded.\n\n\"Fuck Jason!\" Libby scoffed at the thought. \"That little fag has an ass full of dildo. He's got so many issues I don't know where to start! But you! You little tramp! You are not allowed to steal my yummy cummy!\"\n\n\"Wha... what?\" Beth choked out. It didn't make any sense. \"Jason has a dildo in his ass? What are you talking about?\"\n\n\"Move over, slut!\" Libby pushed her to the far side of the back seat and climbed in next to Danny, pinning him between them. \"Jason ate my yummies, Danny! Can you believe that?! I need more! I'm dying!\"\n\nDanny was amused with the designs of his plan. He'd spent so much time planning and imagining each day. It never once failed to satisfy him as he watched it come to fruition. It was the little things he enjoyed the most. Sometimes he painted the events with a broad brush, so seeing the Coopers fill in the details with their own colorful language or expressions or intonation was always surprising. The end result was always what he'd intended, but getting there was such an unexpected adventure as they found ways to justify their actions. Other times it was like watching them read the lines of a play he'd written. Where they recited his absurd words verbatim.\n\n\"Shhh. Don't worry, Mrs. Cooper. I got your text. I answered. You're here now.\" He said grabbing her hair roughly. \"Now put that whore mouth on my cock and hoover my fuckstick!\"\n\n\"Yes! Yes, Danny! Anything!\" She mewled.\n\nDanny pushed her head down on his cock. \"Fuck! That's good! Beth got it started for you, so you'll have your yummies faster. Are you gonna say thank you? You know, she just saw my cock for the first time today.\"\n\nBeth wasn't sure if she should run or stay or what the fuck was happening. This was certainly not the woman she recognized.\n\nLibby lifted her head. \"I'm sorry, Beth!\" She whined. \"I thought you were trying to take my yummies! Thanks for getting Danny's fuckmeat ready for me! It's the best piece of fuckmeat, isn't it? It's amazing!\"\n\nBeth thought she might faint. She tried to gather her thoughts. \"You... uh... you aren't mad, Mrs. Cooper? You aren't gonna tell Jason?\"\n\n\"Jason?\" Libby scoffed in between sucks. \"Who gives a shit about Jason? That kid has been jerking off to me and Mandy for days. He can't seem to help himself. And now he's developed a taste for his own cum! Did you know he started wearing my panties? He's got issues! Mandy and I are trying to help him, but I think he's beyond help.\"\n\n\"What are you talking about?\" Beth gasped. \"You aren't being serious! Jason? My Jason?\"\n\nLibby didn't answer. She was back on Danny's cock sucking it like whore. She gurgled and gagged and choked and slurped. Whatever she thought might get her boy batter out.\n\n\"I tried to tell you, Beth.\" Danny said sympathetically.\n\nBeth had tears in her eyes. \"He's gay?\" She asked. \"I need to talk to him! It can't be true! He took my fucking virginity!\"\n\nDanny held up a finger signaling her to wait. \"Here it comes, Mrs. Cooper! Don't miss a drop!\" He unloaded in her mouth and she gulped it down, swallowing as fast as she could. \"Fuck! You are such a filthy whore!\"\n\nLibby sat back up feeling instantly better. \"God, Danny! That was a big load of yummies!\"\n\n\"I saved it for you, Mrs. Cooper. I wouldn't deprive my second favorite cumdump!\"\n\n\"Would someone tell me what the fuck is going on?!\" Beth cried.\n\nLibby tilted Danny's cock toward her. \"I'm sorry, Beth. I've got this bad spunk addiction. Sometimes I'm just not myself. Would you like a turn on Danny's fuckstick?\"\n\n\"What? What are you talking about? I mean with Jason!\" She had tears running down her cheeks.\n\nDanny placed a hand on Libby's knee. \"I'll take this one.\" He said turning toward Beth. \"I made a bet with Mr. Cooper on Friday at the party. Jason was there. I challenged the Cooper family pride. Now everyone was willing to play the game, except Jason. He snapped. I don't know how else to describe it.\"\n\n\"What do you mean? What bet?\" She asked.\n\n\"Well that's more complicated.\" Danny said. \"It's sensitive. I can tell you but you have to promise to keep it a secret. You can't tell anyone. You can't tell anyone about what happened just now either. Mrs. Cooper's addiction is serious. You don't want to hurt the Coopers, do you?\"\n\nDanny was pushing out an intricate set of thoughts. He'd spent the entire morning going over them to make sure he got it just right.\n\n\"No...\" She sniffled.\n\n\"Good. Well if you can keep it a secret then I'll make sure you see Jason soon. Okay?\"\n\n\"Okay...\"\n\n\"Good. That's good, Beth. I'm sure everything will work out just fine. You're just frustrated, that's all. I've never seen someone that needs to be fucked as much as you do. Your hormones must be all over the place. It's probably playing with your emotions.\"\n\n\"You think?\" She sniffled again. \"I really do need to be fucked. Really bad!\"\n\n\"I know.\" Danny said. \"Trust me. I'll make sure it all works out.\"\n\n******\n\nJason walked into his dad's study. He didn't want to face his old man, but he had to. He felt strange standing there. His bum bum felt open and loose. It felt empty. He knew that his mom meant that as a punishment, but he'd cum so hard, so many times. It just added to his confusion. Nothing seemed right anymore. Maybe Fuckface was right all along. Maybe it was a slippery slope. He hated that fucker so much, but Fuckface seemed to understand him. It made Jason bristle. How could Fuckface from school know anything about him? How could he end up fucking his family? Why did he have the tastiest yummies? Jason shook off the thoughts. He needed to have this discussion before he lost his nerve. He had so much trouble staying focused. His thoughts were always fuzzy.\n\nGreg was sitting behind his desk trying to get a bit of work done. He couldn't take the entire day off without doing something. He had a big skyrise in development and he needed to grease some wheels to make sure the permits went through. It took a lot of backroom deals and political donations to get the big projects under way. He knew how to handle it.\n\n\"Dad.\" Jason said timidly.\n\nGreg looked up at his son. \"What is it, Jason? I don't have time right now.\"\n\n\"It's important. You're gonna be mad at me.\"\n\nGreg sighed and set down the building plans. \"What is it?\"\n\n\"Well... I've been thinking a lot lately...\" Jason started nervously. \"... and I've decided I don't want to play football anymore.\"\n\n\"What?!\" Greg gasped. \"What the fuck are you talking about? You have a scholarship to Stanford! You start training in August! What do you mean you don't want to play ball anymore? It's what you've always wanted!\"\n\n\"It's not fun anymore.\" Jason said with his head down. \"I want to cheer. I like cheering.\"\n\n\"My god! You really are a puff!\" Greg could barely stand to look at him.\n\n\"I'm not! I'm just a little confused... and curious. I want to take a year off and maybe reapply to some schools for their cheer programs.\"\n\n\"Look at me, son!\" Greg said sternly. Jason slowly raised his eyes to meet his father's. \"You could not possibly be a bigger disappointment. I can't make you go to Stanford. So, do you what you want. But when I look at you I feel nothing but shame. Remember that. You can't even support your own family in a simple pride competition.\"\n\nJason had tears in his eyes. \"I'm sorry. I'll show you how good I can be! I promise! We'll win that fucking bet!\"\n\n\"I don't think I want you to be a part of it any longer. I don't like the idea of you sharing the Cooper name. And if you skip out on Stanford, don't think for a fucking minute that I'm going to fund your lifestyle. You'll get a fucking job!\"\n\n\"Dad!\" Jason whined pathetically. \"Please! Don't disown me! I'm just a little confused. That's all. Let me have a little time to figure things out! I'll show you that I deserve the Cooper name. Maybe not as a football player... but... I'm still a Cooper!\"\n\n\"I wish Danny were my son, not you. At least he has pride in his namesake. At least he has some integrity and honor. He has everything I've spent my life trying to instill in you. He's the reason I decided to keep you in public school. I could've sent you to private school with all the other entitled rich brats. But I wanted you to see the losers. And then every so often there's one or two kids in public school who have nothing... who come from nothing... and they make the decision to grab every opportunity and make something of themselves. Those are the ones I wanted you to see because you didn't work for you expect to inherit. Danny Dugan will always be better than you, smarter than you, more driven and more passionate than you. You don't know what it's like to have nothing, so you'll never appreciate the things you do have.\" Greg sighed. \"Please leave. I don't want to look at you anymore.\" He picked back up his papers, ignoring his son.\n\nJason walked out his dad's study feeling awful. He didn't know why his life was so fucked up. He wanted to prove to his father that he meant well. He just didn't know how. Fucking Fuckface kept fucking up everything in his fucking life! His entire family loved Fuckface more than they loved him. His mom ran out to suck the yummy cummy out of Fuckface at school for fuck's sake! How did that kid continue to be a thorn in his side? When did he get to taste his yummies again? It wasn't fair!\n\n******\n\n\"Gahhhh!\" Lori cried out in complete and total frustration.\n\nShe threw her dildo across the room and collapsed back on her bed. Her ass was sitting on a massive wet spot on the sheets where her pussy had leaked in her attempt to orgasm. This was absolutely the worst torture she'd ever endured!\n\nShe got up and grabbed her cell phone from the dresser. This had to stop now! She would demand it!\n\n******\n\nGarret Evans couldn't believe his eyes. It was absolutely incomprehensible. It was a nightmare. He was willing to call it a fluke when Danny Dugan walked into school with Mandy yesterday. He was willing to chalk up Jason's behavior to a blind rage over his sister's choices. But this? What the fuck!\n\n\"I don't fucking get it! I mean what's happening? We are so close to finishing high school and we've ended up in the fucking twilight zone!\"\n\nBrett Dereckson still had the faint smell of urine in his hair. No one had said anything to him but everyone had given him a wide berth. Something about Danny frightened him. He didn't want to admit it. He wasn't even sure what it was. But there was something.\n\n\"I don't know, man. I don't get it either. He's a fucking freak.\"\n\nThey both stared at Danny sitting at his table with Beth. Beth Fucking Fleming! Jason's girlfriend!\n\n\"Well aren't you going to say something? I mean... how could she? It's a fucking betrayal! Jason's gonna shit! Where the fuck is he anyway?\" Garret asked.\n\nBrett shrugged. \"I dunno. Mandy's not here either. Fuck Beth. Let Jason deal with it. I just can't, dude. I can't. I've got better things to think about.\"\n\n\"Fucking Dugan! He thinks he's James Bond or some shit! Who comes to school in a fucking suit?\" Garret was unable to think about anything else. \"What could be more important than this?\"\n\n\"How about an actual gloryhole in our boring as fuck town, dude?!\" Brett smiled mischievously.\n\n\"Shut the fuck up!\" This got Garret's attention. \"For real? You're not fucking with me?\"\n\n\"For real, dude! I have it on very good authority that some thirsty whore sucks off dudes a few times a week and she's supposed to be sublime!\"\n\n\"No way! She'll just swallow cock for free? She's not like a hooker or anything? I just stick my dick in a hole and like some bored housewife is gonna suck in dry? We've gotta go, dude! Can you imagine who it is? What if it's someone we know? Like what if it ends up being Mrs. Morris? Maybe that fat cow loves the dick. She could be like the best cocksucker ever!\"\n\nBrett threw a french fry at him. \"Maybe it's your fucking mom, dipshit!\"\n\nThe other guys started to arrive with their trays, nearly stumbling over each other as they saw Beth at that forbidden table. She was talking in low whispers with Danny Dugan as if they'd been besties forever!\n\n\"I don't get it.\" Beth whispered. \"You... you called Mrs. Cooper some terrible names! And the way you grabbed her hair and shoved her down on your...\" She looked around to be sure no one could hear them. \"... cock! It was bananas! I honestly thought you were lying when you like said that this morning. Like you were trying to fuck with me or something. Does Mr. Cooper know?\"\n\n\"That I'm fucking Mrs. Cooper?\" Danny asked. \"Sure. He paid me to fuck her.\"\n\n\"Are you kidding me! This is totally ridic!\" She had to catch herself and lower her voice again. \"He's like so protective of her and Mandy. I can't believe it! I mean if I hadn't seen it with my own eyes!\"\n\n\"Relax, Beth! If you trust me then I'll make sure everything works out with you and the Coopers. Okay? We can salvage this thing with Jason. I'm sure of it.\"\n\n\"But... if Jason's gay...\" She whispered so quietly. \"... I mean... what is there to like... salvage?\"\n\n\"More than anything Mr. Cooper wants Jason to not be gay... a puff, as he calls it. Jason is going through some weird experimental phase or something. I think at most he's bisexual. You want to marry him, don't you? You've spent three years doting on him and catering to him, trying to be perfect. Are you going to let a little bi-curious phase screw that up for you?\"\n\n\"What am I supposed to do?\" She asked.\n\n\"Well... I think it's time to step up. If Jason is acting like bottom, then you need to be a top! You can still marry him. But you need to show him who's boss. No more doting, good girl! I promise, Mr. Cooper will be thrilled. We just need to play it right?\"\n\n\"Really?\" Beth asked. \"How do you know so much?\" She thought for a second. \"How is it that I didn't even like know how smart you were? Or that you were like some super dick sexpert?\"\n\nDanny laughed openly. \"Let's be honest with each other. Do you love Jason more than heaven and earth? Or do you really love the idea of being married to the Cooper's wealth? Jason is a good-looking guy. He's popular. But he's not the sharpest tool in the shed. You could have anyone you want. But the idea of being rich and having an easy life... maybe that's the real appeal.\"\n\nBeth blushed a little. \"I'm not sleeping around. I've been faithful!\" She said defensively. \"So what if having money is like a good motivator... I've earned it!\"\n\n\"I'm not judging.\" Danny said. \"But maybe you need to reevaluate the situation. You can't let Jason act like a puff! How will that reflect on you? If that's what he wants then you should be the one to give it to him! Dominate him. Tell him what he can and can't do. And then who cares if you fuck around. He won't complain. He's not the same anymore. He lost his marbles. You can keep him around like a toy. Train him like a puppy. Whatever. Mr. Cooper will be happy he's with a woman at all. He'll love you for it. You'll get Jason, the Cooper wealth, and whatever side cock you want.\"\n\nBeth had a dazed smile. \"I really could use a good fuck!\" She said wistfully. \"I thought we were gonna fuck until Mrs. Cooper interrupted. I'm so horny.\"\n\n\"Patience, Beth! I promise I'll destroy your fuckhole. But first you need to do everything I tell you. No more trying to get in touch with Jason. No more stopping at the Coopers and pining over him. I have a rematch coming up on our bet. I need you on my team. Team Dugan, not Team Cooper. Besides that prick hasn't even called you. Instead he's at home trying to fuck Mandy and Mrs. Cooper and eating his own jizz by the handful! He's wearing panties! He's stuffing his bum bum! That's your man! It's disgusting!\"\n\n\"I know! It's gross!\"\n\n\"We'll teach him a lesson. We'll make him sorry he didn't pay attention to you!\"\n\n\"You bet we will! Fuck Jason!\" She said with a confident, determined voice. \"And you'll fuck my kitty!\"\n\n\"Fuck yeah!\" Danny said. \"I'll drill it good! I'll drill it right in front of his stupid face!\"\n\n\"Yes! That'll teach him!\" Beth whooped. \"He can see a huge dick split me open!\"\n\n\"Damn right! And when I'm done you can tell that little puff to suck my load out of that kitty!\"\n\n\"For sure! He might as well be good for something!\"\n\nDanny gave her a fist bump. She was so layered with conditioning now that she couldn't tell what was normal anymore.\n\nDanny's phone buzzed with a text from his mom. He glanced it over having almost totally forgotten about their little conversation this morning. He had that crooked smile on his face.\n\n******\n\nLori could hardly control her emotions. She felt like a bomb that was ready to blow at any moment. She was tired of thinking through it all. It was fucking pointless. She knew what she wanted, and she understood the cost. Danny wasn't going to let her off easy. He wasn't going to mush up her thoughts and let her be a carefree slut.\n\nShe wondered what he'd think of her. There was so much he didn't know. Things about her marriage to his father that he didn't know. There were reasons that she hadn't divorced him. Namely his big cock. They'd certainly had their fun. Maybe it was more in their early relationship. Toward the end when he started drinking everything went to shit.\n\nLori dug through her closet into the very back and found a couple of boxes that she hadn't been through in years. She opened them up. She figured if she were going to take the leap then why not dive into the deep end of this shit storm. She rummaged through the old items and pulled out some things that brought back memories. Then she took a handful of stuff to the bathroom and turned on the shower.\n\nAn hour later she emerged with her frumpy old bathrobe wrapped around her tight. Her hair long brown hair was curled a little. She wore a bit of makeup but nothing crazy. And then she sat on her bed and waited as that imaginary cock pumped her repeatedly, reminding her why she'd made this decision.\n\n******\n\nDanny opened the front door and tossed his messenger bag on the floor. Another successful day, he thought."
    ],
    "authorname": "Nicequip",
    "tags": [
        "revenge",
        "big cock",
        "gay",
        "bi-curious",
        "lesbian",
        "mom",
        "cum guzzling",
        "mind control",
        "incest"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/cooper-family-pride-pt-02"
}