{
    "title": "M Club Ch. 14",
    "pages": [
        "The first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n* * *\n\nLisa parked her car along the curb beside the now-familiar park where M Club had met on several occasions in the secret clearing deep in the woods. She felt a little nervous, all alone, and carefully surveyed up and down the street. An old man was walking a toy dog about a block away, but otherwise there was no one to be seen. She hurried down the main walking trail, footsteps almost silent on the chipped bark, until reaching the nearly invisible side trail.\n\nWith one last look in each direction to be sure she was unseen, she slipped into the undergrowth. She checked the time on her phone and saw she was just a couple minutes ahead of the four o'clock rendezvous Denby had arranged. Lisa didn't know exactly what her friend hand in mind, since this was supposed to be Den and Sean's private \"date\" afternoon - some quality one on one time after all the M Club activities - but she was eager to find out.\n\nAfter a couple minutes hiking deep into the thick woods, she saw the cracks in the trees that indicated the clearing just ahead. She slowed and watched her step carefully, not wanting to startle them. Denby might be expecting her, but she was almost certain Sean had no idea. \n\nRounding the last bend, she caught her first glimpse of her friends. On a blanket in the middle of the lush grass, Sean was sprawled out on his back. He wore nothing but his boxers and Lisa happily took in that long, lean figure she'd explored in detail last weekend. Denby was similarly stripped down to nothing but her panties - a thong that scarcely even counted - and was straddling his waist while bent over in a lip-locked embrace. Their bodies moved in time, clearly dry humping.\n\nLisa felt a tingle in her pussy at the sight. Yes, she had very fond memories of doing just that with him not long ago. There was something extra special about watching this private and very intimate moment between her friends. She could read their passion in every undulation, kiss, and moan.\n\nShe briefly wondered if anyone else had ever stumbled upon their club activities here. It wouldn't be hard for someone to sneak up close and watch without being seen. Even now, if one of them looked her way, she might not be seen through the brush. As the voyeur, a small part of her hoped someone had - and cherished the experience. Assuming they hadn't recorded it, of course.\n\nShe watched in silence a little longer, fondling a breast outside her shirt and rubbing her legs together, before finally deciding to make her presence known. She wouldn't be able to take much more watching, knowing Denby most likely intended for her to join.\n\nJust as Lisa entered the clearing, Sean snapped his head in her direction and a moment of panic crossed his face before he groaned and dropped his head back on the ground. Denby looked up and grinned, unperturbed by the interruption.\n\n\"Hi Lisa,\" Sean said.\n\n\"Hi guys,\" Lisa said, stepping forward until she was near the edge of the blanket. All that nearly naked flesh further fueling her arousal. \"Fancy bumping into you two here.\"\n\n\"You just happened along?\" Sean looked from Lisa to his girlfriend.\n\nDenby shrugged innocently, sitting upright. \"I might have invited her to join us.\"\n\n\"Oh really?\"\n\n\"Was that okay?\"\n\nSean looked between them again and Lisa saw the glint in his eye. \"I guess we'll manage.\"\n\n\"There's a good sport,\" Denby said, running her hands across his chest.\n\n\"Is anyone else invited? Andy?\"\n\nDenby shook her head no. \"Just the three of us. This isn't an officially sanctioned club activity.\"\n\n\"Oh, so we can talk about it then?\" Lisa grinned.\n\nDenby rolled her eyes and Sean said, \"Actually, that might not be the best idea. Not sure how Andy would take it.\"\n\nLisa nodded. She already felt a bit guilt about this, playing behind Andy's back, despite their not-exactly-a-couple dating status. It did feel somewhat like club activity, with him being excluded. On the other hand, they were having an official M Club gathering tomorrow with everyone, and she'd tentatively agreed to go out with him over the weekend - just the two of them.\n\n\"Yeah, best to just keep this to ourselves,\" Denby said. \"And, I was thinking there might be a bit more...contact involved.\"\n\nLisa purred. \"Now that sounds like fun. Only, I feel a bit overdressed.\"\n\nDenby gave her a come-hither gesture with her finger, which Lisa heeded by kneeling on the edge of the blanket. Denby dismounted from Sean, revealing the heavily tented boxers which were significantly dampened by Den's arousal. Sean sat up and soon both were kneeling, one on either side of her.\n\nDenby leaned forward and kissed Lisa full on the lips. Lisa happily accepted and returned the kiss, her lips parting to accept her friend's probing tongue. In their previous \"experimenting,\" Denby had been tentative initially. Today, she already very turned on.\n\nDenby broke off the kiss and looked to Sean. With a subtle bob of the head, she gave her boyfriend permission to take over. Sean leaned forward, grinning, and kissed her. It was cautious at first, but soon grew to be as heated as Denby's. Lisa wondered what her friend was thinking, seeing the two of them kiss for the first time.\n\n\"God, that's so hot,\" Denby said, answering the unspoken question.\n\nAt Denby's comment, Sean leaned back and looked a little embarrassed. \"You really wanted this?\"\n\nDenby said, \"You have no idea. It's been all I could think about all week.\"\n\n\"Well, I'd hate to disappoint you.\"\n\nLisa said, \"And apparently I'm just a convenient prop for my best friend's sexual fantasies.\"\n\n\"Is that a problem?\" Denby raised a challenging eyebrow.\n\n\"Nope. Not one bit.\" Lisa leaned forward and gave her friend another quick, fierce kiss.\n\n\"Good. Now away with these clothes.\"\n\nDenby lifted Lisa's shirt up and off, leaving Sean to make quick work of her bra. Lisa found it amusing how self-conscious she'd felt fully clothed in front of these two. Having the girls free and breathing in the cool spring air made a world of difference in putting her at ease.\n\nDen and Sean, in tandem, each took one of her breasts in hand. They massaged and tweaked her nipples and she just leaned back on her heels and enjoyed the novelty of watching two people fondling her simultaneously.\n\n\"Good thing I have enough to share,\" she said, giggling.\n\nDenby gave her a wink and then leaned forward, wrapping her lips around one hard nipple and suckling gently. Sean was only moments behind her, and soon they were bumping heads as they worked over her nipples. The sensation was heavenly and she absently ran her fingers through their hair.\n\nAfter stimulating her enough to get painfully aroused, Denby broke off and instructed Lisa to lay on her back. Before she was even settled, Denby was unzipping her shorts and pulling them down. Sean just watched on in amusement. To Lisa's surprise, Denby didn't stop at the shorts - removing Lisa's panties as well and making her the only naked one among the three. She had no problem with that arrangement.\n\nSean fondled one of Lisa's breasts while Denby boldly ran a hand up her inner thigh until tracing it across the folds of her pussy. Her friend clearly had every intention of taking this further than they'd previously done in Sean's presence.\n\n\"Not that I mind, but am I the only one getting naked today?\"\n\nDenby sighed. \"I'd love to, but I don't think I could without breaking my promise to mom. Sean, on the other hand, should definitely lose those boxers.\"\n\nSean raised a curious eyebrow. \"Yeah?\"\n\n\"Unless Lisa objects, of course,\" Denby added.\n\nLisa looked at the bulge in Sean's shorts and licked her lips. \"No objections here. And this time you'll be naked before you make a mess.\"\n\nSean's cheeks reddened slightly, but he wasted no time in losing his boxers. His long cock popped free and pointed almost straight at Lisa's face. The tip glistened and Lisa desperately wanted a taste. That, however, remained out of bounds.\n\n\"Alright,\" Lisa said. \"The big boy has been released. Now what, pray tell, did you have planned for us?\"\n\nDenby gave them a sly grin. \"I'm glad you asked. Now, since Sean here has been such a sweetheart in helping me keep my promise, while I've been fooling around with you and getting some wonderful...relief...I only figured it was fair that to make it up to him. And, for that, I need a volunteer stand in.\"\n\nLisa laughed. \"So I'm, what, your stunt double?\"\n\nDenby reached out and grabbed both of Lisa's tits. \"Yeah, only your tits are too big. But for lack of any other volunteers, you'll have to do.\"\n\n\"I'm sure Sean is heartbroken,\" Lisa said.\n\nDenby looked down at Sean's bobbing erection. \"Yeah, sure he is.\"\n\nDenby crawled across the blanket, giving both of the others a fine view of her thong-clad ass. She dug into her backpack and rooted around for a minute before finally producing a life-size and realistically colored rubber cock. Lisa chuckled, now beginning to realize what her friend had bought that particular toy for.\n\n\"New toy?\" Sean said.\n\nDenby nodded. \"Picked it up this weekend when I took Lisa shopping.\"\n\n\"Oh really?\" Sean looked between the two and Lisa gave him her best innocent expression. \"I don't recall you mentioning that.\"\n\n\"No?\" Denby looked equally innocent. \"Must have slipped my mind. Just a quick stop after our sleepover.\"\n\n\"Uh huh.\" Sean turned to Lisa. \"And did you buy anything?\"\n\nLisa gave him a wide grin. \"Yes, but I didn't bring it along. Guess you'll have to wait until next time.\"\n\nThose terms seemed to have met with his approval. He turned back to Denby. \"So, toy and stunt double?\"\n\nDenby scooted back over so she was kneeling beside Lisa, opposite Sean. \"Here's how this is going to work,\" she said. \"Junior here is a stand in for your cock.\" She gave it a couple playful strokes, which Sean mirrored with his own hand.\n\n\"Okay,\" he said.\n\n\"You've got the idea already, I see,\" Denby said. \"Whatever I do to Junior, though, it'll be Lisa's job to do it to you.\"\n\nLisa felt her body quiver in eager anticipation at that idea. Finally, she would be able to have direct contact with Sean's cock. But what did Den have in mind? Handjob? Blowjob? Sex? She was more than okay with the first two. And, while she would love for Sean to take her virginity, she knew it would be awkward for her to get to go all the way with him before Denby. He was Den's boyfriend, after all.\n\n\"I think I'm going to like being a stunt double,\" Lisa said, propping herself up on her elbows.\n\n\"I'd ask if you were sure about this,\" Sean said to Denby, \"but that seems like a pointless question.\"\n\n\"Pointless, indeed,\" she said. \"Now, Sean, lay on your back. Lisa, between his legs.\"\n\nLisa quickly got up while ceding the middle of the blanket to Sean. She enjoyed the quick look at his cute butt as it flexed, followed by the playful bobbing of his erection as he laid down. He wrapped his hands behind his head and watched on in eager anticipation.\n\nOnce Lisa was comfortably situated on her knees between Sean's legs, Denby joined her just to Sean's side. Junior, as she'd affectionately named her new dildo, did look remarkably like Sean's cock. Den had spent considerably effort in picking out one that best matched her boyfriend in size, length, and general appearance. Its base was wide and stiff, vaguely shaped like a scrotum, and this she planted firmly into the blanket.\n\n\"It's time I gave my loving boyfriend some much needed attention,\" Denby said.\n\nLisa looked down at Sean's cock, taking in each bulging vein from the short-trimmed hair at his balls up to the bulbous head. Denby, on Junior, used her free hand and ran the back of her fingertips up the length of the stand in cock. Lisa reached forward and mirrored the action on Sean, savoring the thrill of first contact. Sean's cock twitched in response and he sighed heavily.\n\nAfter Den's fingers reached the tip, she dragged them back down the length. Lisa continued to mirror the action, her attention flitting back and forth between her friend and Sean. Despite everything they'd done together, she still felt like she needed to pinch herself. She was touching a real, live cock. Her best friend's boyfriend's cock, no less.\n\n\"Touch his balls,\" Denby said, doing so on Junior but with less realistic results.\n\nLisa tentatively cupped Sean's scrotum and rolled her fingers around until she made out his balls. They were bigger and firmer than she'd expected and she was very gentle for fear of causing him pain.\n\n\"What do they feel like?\" \n\n\"Heavy,\" Lisa told her friend. \"Firm. No wonder he can shoot such loads.\"\n\n\"That feel nice?\" Denby asked Sean.\n\n\"Very,\" he said, grinning.\n\n\"I'm not being too rough?\"\n\nSean shook his head at Lisa. \"Nope, not remotely. I'll let you know.\"\n\nRelieved, Lisa became a bit more assertive in rolling them between her fingers. She wondered how stimulating that was to a guy compared with stroking his cock. Sean frequently played with his balls while jerking off, but Andy rarely seemed to touch his. Maybe it varied from guy to guy.\n\nDenby wrapped a hand around Junior's shaft and began to slowly slide it up and down. Lisa used one hand to hold Sean's cock vertical at the base and then copied Den's action with her other. His cock was hard, yet there was still a softness to the surface. His skin moved to some degree along with her hand and she experimented with varying amounts of pressure - sometimes so light that her hand slid along the skin without hardly moving it and then with a firm grip that dragged the skin along with it. Sean seemed to enjoy it all.\n\n\"How hard is it?\" Denby asked as she continued to stroke Junior.\n\nLisa paused enough to try to bend it ever so slightly. It didn't flex at all and Sean merely smiled.\n\n\"Very,\" she said. \"It's kinda what I expected, but still a little different. I can see why guys play with them all the time. If I had one, I know I would.\"\n\n\"And you should feel it from this side,\" Sean said.\n\n\"Are you close?\" Denby said.\n\n\"Nothing imminent, but if Lisa really went at it, I wouldn't last long.\"\n\nDenby nodded and continued stroking, now at a slightly faster pace. \"Good. I don't want you to cum yet. Tell me if you get too close.\"\n\n\"Yes ma'am.\"\n\nLisa was perfectly content to keep rubbing Sean's cock. While there was a certain thrill in masturbating, taking direct responsibility for another's pleasure was a whole different animal. She'd enjoyed pleasing Denby and she was more than happy to be involved in getting Sean off.\n\n\"Let's try something a little different,\" Denby said, laying Junior down on the blanket, the head facing away from her. Lisa let go of Sean, letting his cock slap against his stomach.\n\nDenby leaned forward until her breasts contacted the dildo. Lisa grinned as she scooted back just enough to give her space to do the same. She had already teased Sean's cock with her tits in her bedroom, but on that occasion he's still been in boxers. This was going to be so much better.\n\n\"I'm thinking my stunt double might be a little better equipped for this one,\" Denby said, not with any regret.\n\nLisa let her dangling breasts drag along the length of Sean's cock. The stimulation to her breasts paled in comparison with having her nipples pinched or sucked, but the sight of his cock vanishing into that valley was more than worth it. She felt Sean thrust his hips up into her, increasing the contact between them. She imagined she was the one on her back, with him straddling her and fucking her cleavage while she held her breasts together. Yes, this was one area where she had a distinct advantage over Den, and perhaps she'd get to try it.\n\nDenby was watching intently, but had shifted from rubbing the dildo between her breasts to running one of her hard nipples along its length. Lisa gave Sean a couple more \"strokes\" through the valley before holding one of her breasts in place and dragging her nipple along his cock. Sean shuddered at the contact and as she reached the head of his cock a new drop of pre-cum emerged.\n\n\"Someone's leaking,\" she teased.\n\n\"Let me see!\" Denby leaned in close and licked her lips. \"Mmmm.\"\n\n\"Want a taste?\" Lisa said. \"I could get a little on my tit and let you take it from there.\"\n\nDenby shook her head no. \"How about this?\"\n\nDenby gently nudged Lisa back and reached out with Junior. The tip of the dildo contacted the head of Sean's cock, dipping into the drop just as it grew large enough to begin running. She rubbed it around the tip for a moment and then pulled it back, creating a long string between the two that finally snapped back between both cocks.\n\n\"This is gonna taste so good,\" Denby said with a wicked glint in her eye.\n\nLisa was elated. She knew exactly where this was going and couldn't wait. She lifted Sean's cock back to vertical by the base and leaned in close. Denby lifted Junior to her mouth and paused just an inch away. Lisa matched her, now able to smell the pungent musk of Sean's semen. Den then extended her tongue, just short of its goal, and wiggled it playfully. Lisa did the same and marveled at Sean's self-restraint, as he would only have to move his hips a fraction of an inch to make contact.\n\nFinally, Denby flicked her tongue across the tip of the dildo, lapping up some of the shared pre-cum. Lisa did likewise and soaked in every aspect of the moment of first contact between her mouth and a cock - the now-familiar taste, the heat, the soft and firm texture against her tongue. She was in heaven.\n\n\"Licking my boyfriend's cock.\" Denby purred, then licked again, slowly and with considerably more tongue. Lisa mirrored, collecting the last of the leakage.\n\nBefore long, Denby was taking more of the dildo's length into her mouth. Lisa opened wide and wrapped her lips around the entirety of Sean's cock head. With it nearly filling her mouth, she rubbed it with her tongue and teased at the hole on the tip. He pressed into her and she allowed more of his shaft inside, careful to avoid scraping him with her teeth.\n\nA glance at Denby found her friend enthusiastically fellating Junior, bobbing up and down on at least half of the length. Den's eyes were entirely on Lisa and Sean, though, brimming with lust. Lisa broke with the blow-for-blow imitation of her friend and alternated between base-to-tip licking and full on sucking, doing her best to put on a good show. Denby now started to mirror what she was doing.\n\n\"That feels sooo good,\" Sean said between heavy breaths. \"I'm not gonna last much longer, though.\"\n\nLisa paused to seek guidance from Denby, who said, \"Better finish him off, then.\"\n\nDropping all pretense at trying to mimic Denby's actions, Lisa took in as much of Sean's cock as she could without hitting her gag reflex. She sucked firmly, then began bobbing up and down, using her saliva to keep a firm yet slippery seal. Her tongue slid along the underside of his cock and he thrust gently in time with her bobbing. His hands snaked through her hair, further helping direct the pace of their action.\n\n\"Almost, almost,\" he said, his voice hoarse.\n\nLisa increased her speed while stroking his cock near the base, right up until she felt him give one strong thrust that almost went too deep. A moment later, she felt his cum fill what little space was left in her mouth. Even knowing it was imminent, it came as a shock and took all her concentration to keep her mouth in place and relaxed enough to take all he could give her.\n\nAfter a couple follow-up twitches, Lisa slowly slid up his cock until he fell out with a soft plop. She closed her lips, savored the salty taste, and swallowed dramatically for her audience. She then licked her lips and licked clean his softening member, finishing with a dainty kiss on the tip.",
        "\"That was, like, the hottest thing ever,\" Denby said, taking both Lisa and Sean by the hand.\n\n\"Yeah, wow,\" Sean said. He quickly turned to Denby. \"Not to say we haven't done some crazy hot things, but damn. I can't wait to do that with you.\"\n\n\"Good answer,\" she said, leaning down to give him a kiss.\n\nLisa looked on, glowing in their love for one another. This could have been the point where things got incredibly awkward and regret set in. Fortunately, that didn't appear to be the case. Not yet, anyway.\n\n\"You know,\" she said, \"I think I like giving blowjobs. Who knew?\"\n\n\"I had a hunch you might,\" Denby said. Then, to Sean, \"I hope that makes up a bit for my messing around with Lisa.\"\n\nSean nodded. \"Not that I'm keeping score, but sure, I'd say we're all square.\"\n\nDenby grinned. \"Square, maybe, but you're the only one who's had an orgasm so far today. What ever shall we do about that?\"\n\n\"I can think of a few things,\" Lisa said.\n\n\"Does one of them involve teaching my boyfriend how to properly lick a pussy?\"\n\nLisa grinned and found Sean looking equally pleased at the prospect. \"Why yes it does. And since he can't touch yours yet, I guess I'm gonna have to take another for the team.\"\n\n\"Sean?\" Denby looked at him.\n\nHe sat up, still a bit woozy with delirium, but clearly ready to go. \"Oh, whatever you ladies think best. I'm game.\"\n\n\"Well,\" Denby said, \"since you're new to this and all, maybe I should show you the ropes first, then let you have a go.\"\n\nIf possible, Sean's grin widened. Lisa felt the same way - having both of them lick her? Yes, please!\n\n\"Back on your back, lover,\" Denby said, patting Lisa on the butt. Lisa obeyed, taking Sean's spot on the blanket, still warm with his body heat, and wiggled around until comfortable.\n\nDenby made her way between Lisa's legs, then Lisa had to spread even wider as her friend dragged Sean in beside her. She felt slutty and powerful, desired and alluring, so intimately exposed to her best friends. She was all theirs for the taking.\n\n\"Now,\" Denby said, \"first the nickel tour. Obviously, this is the pussy. Luckily, we have a very pretty and tasty one to work with.\"\n\nLisa rolled her eyes. Her body, however, fluttered in response to Denby's fingers sliding up along the length of her slit.\n\n\"The most obvious features are the labia - outer and inner - which are all sensitive in their own way.\" Denby continued to point out the various features, using her fingers liberally. \"Part the labia and you'll see the vagina. Obviously, good for cocks, but fingers and dildos work pretty well in a pinch.\"\n\nLisa felt Denby slide one and then two fingers inside her. She was so wet there was little resistance.\n\n\"Hook your fingers up like this, at about this depth, and you'll find the g-spot.\" Denby gave a full demonstration and Lisa felt the heat rising deep within her core. \"It's probably a little hard to pick out, but it's a general area. Not as intense as the clit, but still quite effective on most women. Care to feel?\"\n\nLisa watched on as Denby removed her fingers and Sean tentatively ran his fingers up and down her labia, feeling her up directly for the first time. No, she reminded herself, feeling up any girl for the first time if he'd been honest with them. Andy was the only one who'd done this much with a partner before. After gaining some confidence, Sean slid a finger inside her and rubbed around. Following Den's guidance, he began seeking out her g-spot.\n\n\"Up just a little bit,\" she advised. He moved a little and she moaned appreciatively as the pad of his finger reached the spot.\n\n\"Good,\" Denby said. \"I think you've got it. Now, just above all that, tucked away in here but doing its best to poke out, is the clit. The magic button. Some girls like direct stimulation there, others find that too intense and like to be stimulated anywhere around but not right on it.\"\n\nDenby ran her finger in a circle just around the nub, causing Lisa to gasp. Denby chuckled. \"Sorry. Lisa's a bit more of an indirect stimulation sort.\"\n\n\"Unless it's a tongue and I'm really horny,\" Lisa added. \"Like now.\"\n\nDenby shrugged. \"I stand corrected.\" She bent down and ran her tongue across Lisa's clit, all while Sean continued to rub her g-spot. Lisa shuddered, desperate for more.\n\n\"Got all that?\" Den asked Sean, sitting back to give him space.\n\n\"Think so,\" Sean said. \n\nHe kept his finger inside her and crouched down to get his mouth within reach. Lisa knew her smell could be strong and had a slight fear he'd be put off. He didn't hesitate for a moment, however, and ran his tongue slowly up the length of her until the flat pad dragged deliciously across her clit.\n\n\"Maybe next time you can go slow and explore,\" Lisa said, panting. \"Not now. Just, go. Go, go, go.\"\n\nSean leaned back in and soon his tongue was making quick, firm licks up from where his finger disappeared into her up and over her clit. It was rougher action than Denby had used on her, but it was exactly what she craved at this moment. She thrust her hips into his face, eager for more contact.\n\nAfter a minute or so of that, Sean wrapped his lips around her clit and began a quick side to side flicker with the tip of his tongue. The stimulation was so intense she whimpered and tried to clamp her legs together. With her two friends being between them, however, she couldn't stop the overwhelming intensity. No matter how hard she bucked, his tongue continued its relentless lashing.\n\nA hand groped her breast and pinched the nipple. Denby, Lisa assumed, but could no longer could she stand to open her eyes to see for certain. She was completely lost in the building feelings.\n\n\"Keep going,\" Denby whispered. \"She's almost there.\"\n\nSean heeded her and kept licking, never pausing for even a moment. At times, it felt like he'd only just started, and others like he'd been licking her for a quarter hour or more. Her orgasm, for all the intensity, was curiously slow in coming. But when it finally arrived, it was as all-consuming as any she'd ever experienced before and then some.\n\nShe moaned and grabbed his head firmly. Rather than hold still when it hit, he'd continued licking and rubbing - the stimulation simply too much to bear. He got the hint, though, and froze as the fourth and fifth and subsequent waves washed over her. She held him in place until the last subsided and then gently pushed him away.\n\n\"I think I like licking pussy,\" Sean said, grinning up at Lisa, his cheeks glistening with her juices.\n\n\"Good man,\" Lisa said, letting her entire body go limp.\n\n\"Well done,\" Denby said, giving him a lusty kiss as he rose to his knees beside her. \"You should know what you're doing when it's time to do me.\"\n\n\"I can hardly wait.\"\n\nDenby laid on one side of Lisa and Sean on the other, all cuddled in tight. Both draped a leg over hers and she savored the sensation of their fingers gently stroking her tummy and thigh and breasts. She just stared straight up into the blue sky where it broke through the lush, green canopy, and couldn't imagine a more perfect way to spend an afternoon.\n\nThey chatted idly about nothing at all. Just holding one another was enough. She trusted them like no others, cherished them as if family, and lamented that it couldn't last forever.\n\n\"Are you humping my best friend?\"\n\nLisa broke from her reverie at Denby's mock indignation. She hadn't even noticed it, but Sean was again fully erect, and his cock was pressed into her hip. Sure enough, he'd been rocking ever so gently into her.\n\n\"I can't help what he does,\" Sean said, not bothering to stop.\n\n\"You wanna fuck her?\" \n\nDenby's voice and expression were an impossible to decipher mix of signals. Why had she asked the question? Did she want them to go all the way? Was she testing them, or simply teasing?\n\nSean measured his words before responding. \"I would be happy to make love to Lisa, yes,\" he said. \"But not until after I've done it with you, and not without both your blessings.\"\n\nLisa could tell her friend was fighting to hold back tears. Den leaned across Lisa to kiss Sean fiercely. Lisa felt like a third wheel at that moment, but it soon passed when Denby retreated enough to give her a quick kiss.\n\n\"I can't take any more of this,\" Denby said, the hand resting on Lisa's tummy balling into a fist. \"I want you to touch me, lick me, fuck me. Make love to me over and over. I want to watch you two fuck each other's brains out. I want it all and I'm so fucking sick of waiting.\"\n\nLisa felt the hurt, the genuine anguish and frustrating in her friend and realized all their efforts to soften that wait were only making it worse. Perhaps it was time to put an end to it, at least until after graduation. She didn't want to be responsible for Denby breaking her promise.\n\n\"So what do we do?\" Lisa asked in a whisper.\n\n\"Fuck me, Sean,\" Denby said, her eyes burning with passion. \"Just do it. Screw my promise. I almost made it and what's to be gained by waiting just a couple more weeks? We all know it's going to be you and me on graduation night.\"\n\nLisa looked to Sean and could read in him the same conflict she felt. He wanted to, but he also had pledged to help her wait. Which impulse would win out?\n\nSean got up and walked around to Denby's side of the blanket. She looked up at him in ragged desperation. He looked so strong, so manly - lean physique, cock jutting straight out, confident posture. He knelt beside her and gently lowered her onto her back so she laid beside Lisa. Lisa scooted aside to give them space.\n\n\"I want you so badly,\" he said, eyes locked on Denby with a love that induced a wave of jealousy in Lisa. She'd seen his lust directed at her before, but never quite that look.\n\nHe peeled Denby's thong off and set it aside. Still, eyes locked, he ran a hand up along her leg and almost but not quite across her pubic mound. The hand continued up and cupped a breast, massaging it lovingly.\n\n\"Our first time will be perfect,\" he said, his voice impossibly soft and controlled. \"Which is why it won't be today.\"\n\nLisa felt the jab to the heart that surely delivered to Denby. He quickly placed a finger across Den's lips before she could protest, though.\n\n\"There would always be that hint of regret, of looking back and knowing we could have waited. Could have kept your promise. And that's why it wouldn't be perfect. However...\"\n\nDenby's eyes were pained but hopeful. \"What?\"\n\nSean reached over to the grass and retrieved Junior. He hefted the new dildo, giving its length an expert appraisal. He held it beside his own erection and the similarity was, indeed, remarkable.\n\n\"I'm thinking we can get pretty damn close,\" he said, grinning.\n\nLisa felt a wave of relief as Denby's smile returned. Both watched on as Sean positioned the dildo underneath his own cock, resting his balls atop the base. At a glance, it looked like he had two stacked cocks, which itself offered plenty of fuel for the imagination.\n\nHe repositioned himself between Denby's legs, on his knees with ass nearly on the blanket, and she eagerly spread wide for him. He scooted in close such that both cocks were directly above her crotch. She glowed in anticipation.\n\n\"Ready?\" he said.\n\nDenby nodded. \"Take me.\"\n\nDenby rotated her hips up to meet the dildo. Sean firmly held the base against his crotch, just below his scrotum. His cock rested upon the back of his thumb, \"safely\" held aloft above the action so as not to violate the no genital contact rule. He positioned Junior's tip against Denby's pussy and nudged it just inside.\n\nDenby purred. \"More.\"\n\nSean pushed in a bit further, then pulled back before going deeper still. With each thrust, more of Junior disappeared, and Lisa couldn't help but imagine that penetration deep within herself. Sure, it wasn't quite the real thing, but it had to feel close - being able to feel stretched and full while looking up and seeing Sean thrust into her.\n\n\"God, that feels good,\" Den said. \"Take me. Own me.\"\n\nSean began a nice, slow pace, each thrust about half the length of the dildo. It was utterly fascinating to watch and Lisa was grateful to bear witness. She respected his improvisation, but realized they would be pretty well limited to this position without risking additional contact. Would Denby be able to climax from just this?\n\nDenby's eyes grew heavy and finally closed. She absently pinched her own nipples and quietly rode Sean's methodical thrusting. Sean glanced over at Lisa and smiled when their eyes met. Lisa nodded in admiration and support. He then gave a subtle nod toward Denby. Me? Lisa mouthed, to which he shook his head affirmatively.\n\nLisa got to her knees and bent over her best friend. Never had Denby looked so content. Never had Lisa been so happy for her.\n\nShe leaned in closer and planted a gentle kiss just below one of Denby's breasts. Den responded with short gasp of surprise, but immediately moved her own hand away to give Lisa free access. Lisa kissed her way up and around Denby's small breast, circling in closer until reaching the achingly hard nipple. She licked it, ran her tongue around it several times, and then took it entirely within her mouth and sucked firmly. Denby moaned in appreciation, prompting Lisa to suck harder still.\n\nTime became meaningless as Lisa focused on pleasuring her friend. A hand placed on Denby's tummy kept her in tune with Sean's steady thrusting. Den just moaned and whimpered and sighed under their combined attention, giving herself over completely.\n\nLisa's hand slowly crept down toward Den's pelvis until she could feel the thrusting of the dildo through her skin. Sean's cock then brushed against the back of her hand. She paused in her nipple play to look up. He grinned down at her and gave her a wink, never breaking stride. Lisa smiled in return and resumed suckling Denby while moving her hand down even further. Soon, her fingers worked under his swinging scrotum and found Denby's clit. Den gasped as Lisa began massaging in small circles around it.\n\nSean, taking advantage of Lisa's intervention, lowered his erection until it was sliding fully across the back of her knuckles and hand. She had the urge to give him a handjob while he was thrusting, but from this position she could only do one thing or the other and it was Den's turn to get off. Lisa focused on stimulating and overstimulating her friend, content in the knowledge that Sean was using her to get some stimulation from the simulated fucking.\n\nThe clitoral stimulation must have been what Denby needed, because she was soon losing control under the multiple sources of attention. Her body was shaking so much it became a challenge to keep lips latched around her nipple. Sean responded by thrusting even faster.\n\n\"Oh, oh, oh,\" Denby mumbled incoherently between moans.\n\nWhen the orgasm finally hit, Lisa stopped moving her fingers and simply pressed them firmly into her friend's clit. Sean gave another deep thrust and held it there as well. Denby lifted her hips pressing into them both for several seconds before collapsing under ragged breaths.\n\nLisa leaned forward and kissed Den on the lips.\n\n\"You're so pretty when you cum,\" she whispered.\n\n\"Uh huh,\" Denby said, dropping her head back on the blanket and letting out a contented sigh. \"I'm sure.\"\n\n\"She's right,\" Sean said. He carefully withdrew the dildo, cognizant of Den's heightened sensitivity. \"That was incredible.\"\n\n\"Still just rubber, or plastic, though,\" Den said, though she didn't sound too disappointed. \"I still want the real deal. To feel you cum inside me.\"\n\n\"Soon,\" he said.\n\nLisa's hand was still underneath his erection. She reached up and took him fully in her hand now, while he lifted himself up a bit on his knees. Without a word, she began stroking him, mimicking the techniques she'd seen him use on himself, all with the intention of getting him off a second time.\n\nDenby watched quietly, her only response being to wrap her legs around his butt and pull him in a bit closer. Lisa pumped him faster and faster, afraid she might be holding him too hard. Sean just closed his eyes, though, and thrust his hips into her hand.\n\n\"Almost,\" he said, wiping a sheen of sweat from his brow. \"Almost...\"\n\nLisa felt him quiver and then clearly felt the pulse in his cock as he ejaculated across Denby's torso, most of it landing in a line between her belly button and the bottom of her breasts. It was far less than she'd seen most of the times he'd jerked off in front of her, but that was probably normal for having orgasmed less than half an hour earlier. She gave him a couple more tugs for good measure, draining a few more drops, before he slipped out of her grip and sat back on his butt. He looked every bit as satisfied as Den.\n\nLisa looked down at the mess and felt the urge come over her. \"May I?\" she asked Den.\n\n\"Only if you share.\" Denby gave her a mischievous smile.\n\nLisa bent over and licked up the bulk of Sean's semen, savoring the familiar taste that would forever be tied to these happy memories. Without swallowing, she crawled up and gave Denby an open-mouthed kiss. Denby's tongue met hers and they shared him in the most intimate of ways. Time to check another box off the list of things she'd have never, ever believed possible in her lifetime as of a few short weeks ago.\n\nTheir kiss lingered until Sean worked his way up to close enough to get a good look. Lisa broke off first and said, \"I think it's mostly gone, if you want a turn.\"\n\nTo his credit, Sean leaned in and gave Denby a long, loving kiss that also involved a fair bit of tongue.\n\n\"Hottest. Thing. Ever.\" He leaned back, smiling at both girls.\n\nLisa said, \"Well, that's only until you get to watch me lick your stuff out of her pussy.\"\n\n\"Lisa!\" Denby, for all they'd been through, looked scandalized. \"Seriously?\"\n\nLisa rolled her eyes. \"I'm sorry. What exactly, in these last few weeks, or in the last couple minutes, would lead you to think I wouldn't want to do that?\"\n\nDenby pondered for a moment and shook her head, smiling. \"Okay, you're right. Nothing.\"\n\n\"Good. Then we're all clear on that.\"\n\nThey both looked at Sean who seemed positively pleased and mortified at the turn of the conversation. He shrugged. \"Whatever you two want.\"\n\n\"Like you'd complain,\" Denby said. \"But, if Lisa gets to clean me up after we fuck, then I get to clean her up after you two do it.\"\n\nLisa gave Sean a playful punch in the shoulder. \"Looks like you're gonna have to be a two-girl kind of guy. Think you can handle us?\"\n\n\"I will, or I'll die happy trying.\"\n\nLisa couldn't wait to explore these new avenues. In the back of her mind, though, she still had the dual nagging concerns - where did she stand with Andy and were her feelings for Sean potentially too strong not to interfere in their relationship? Things couldn't be this easy, this perfect, for long. Was there a safe exit strategy or would they all end up getting hurt?"
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "first time",
        "blowjob",
        "oral",
        "friends",
        "threesome",
        "dildo",
        "toys",
        "simulated sex",
        "best friend",
        "ffm"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-14"
}