{
    "title": "The Ultimate Sacrifice Pt. 03",
    "pages": [
        "First off, I want to apologize for taking so long with part three.I was struggling with the direction I wanted to take.This could have gone several ways.I get into something that, based on one's specific religious beliefs, could find offensive.I'm not trying to offend anyone, this is just a fictional story.Ifyou are offended, I'm sorry, maybe another story would be more suited for you.\n\nAlso, I had some formatting problems.My apologies to the administrators at Literotica.\n\nFor those who haven't read part one or two, I would strongly suggest it.\n\nAlso, I've had a strong debate, with myself, with how much attention I should pay to Bob and Josephine's relationship.I think I found a reasonable balance.\n\nMy intent is to finish the story in part four.I'll try to get it out sooner than part three.\n\nAs always, thanks for reading and for the kind comments.\n\n \n\nThe Ultimate Sacrifice - Part 02 -- Where we left off...\n\nShe led the group to another part of the lab with a viewing window. On the other side of the window was a sarcophagus and inside laid the body of a naked human man. He looked like he was asleep and in perfect condition. He was taller than me, maybe six feet four inches. He looked to be in his late twenties or early thirties. Brown hair, clean shaven face, but \"Hollywood\" handsome. Physically, the\n\nonly description that worked... he was ripped. Sculptured six pack and perfectly formed muscles. His \"personal equipment\" was impressive, but not obscenely large.\n\nI asked Aphrodite the obvious question, \"Who is that?\"\n\nHer answer, \"Hopefully...you.\"\n\nTo be continued...\n\n \n\nAnd Now... The Ultimate Sacrifice -- Part 03 \n\n \n\nChapter twelve -- The Offer\n\n \n\n\"Would you care to elaborate?\" I asked Aphrodite.\n\nZeus interjected, \"Maybe we should all discuss this in a more secure location.\"\n\nAs I've said before, Zeus' suggestions were more edicts.\n\nWe adjourned to a room adjacent to the laboratory. There was nothing in the room. No chairs, no hologram stages, none of the comforts I had become accustomed too while on the Olympus. Apollo, Artemis, Hephaestus and Hades also joined us. Zeus eventually announced the room was secure.\n\nI stood there waiting for someone to explain how that body, out there, was \"hopefully\" going to become me. Josephine stood by my side. I looked at her to see if she knew what was going on. She looked as clueless as I did.\n\nZeus finally spoke up, \"We come by our extremely long lifespans naturally. We've always assumed we were immortal. Painfully, very painfully, we now know we can be killed. It may be very difficult to kill us, but Ares' death means we are, in fact, mortal beings. That realization has had a profound impact on how I look at life. I can only surmise it has affected each of us. No matter how long we live, we will either continue to grow, become complacent or wither away. We must fight to live. From that perspective, we are no different from you or any human. It's the type of life we choose to live that defines us. We can aspire to be good, succumb to evil or wallow somewhere in between.\"\n\nHe paused, like he was struggling to find the exact words.\n\n\"Character is the most under valued trait of all advanced civilizations. Science and technology does not truly separate us from other civilizations, character does. The best societies are honorable, honest, responsible, accountable, trustworthy, compassionate, humble, willing to help those who are in need and admit when they're wrong. They do not take advantage of those who are weaker, they help to make them stronger. It does not matter how advanced a society is, character is the defining trait. Of course, almost all intelligent beings only possess some but not all of these attributes. We, Olympians, have fallen very short of the mark, in the past. You, on the other hand, hold all these positive character traits and even one more. You're willingness to put everyone you care about before your own self interest. These traits are imbedded in your soul.\"\n\nI started to disagree, but Zeus stopped me.\n\n\"We know you are too modest to accept how I am describing you. But know, all Olympians share in my assessment.\"\n\nI looked around and saw each and every one nodding their agreement. That was a bit overwhelming.\n\nApollo spoke, \"Bob, your disadvantage is from having to start over all the time because of your body's relatively short life expectancy. Aphrodite has found a potential solution. The vessel you just viewed will last forever. In addition, it is enhanced both physically and mentally. We believe it is completely indestructible. That vessel will allow you to achieve your full potential and beyond.\"\n\nI asked an obvious question, \"Just how do y'all propose to get me into that..how did you describe it...vessel?\n\nAthena responded, \"We want to transfer your soul into that body and bring it to life. It is the perfect body Bob. You will feel young, healthy and strong again. You'll never get sick, or feel physical pain. You will live forever to experience all that the universe holds in front of you.\"\n\nJosephine asked what I was thinking, \"What will happen to his current body?\"\n\nAphrodite answered clinically, \"We will transfuse all of Bob's blood into the new body, effectively encoding the new body with his DNA. Additionally we'll transfer the current information in your brain to his. This will be necessary for his soul to think this was the body it left. Bob's current body will immediately be destroyed, removing any confusion in the transfer process.\"\n\nI looked horrified and Athena recognized this was probably not the best approach.\n\nAthena spoke up, \"Bob, I'm so sorry, Aphrodite should have never described it the way she just did.\" She shot Aphrodite a look that could kill the entire Persian army.\n\nThat didn't pacify me, \"Was she wrong in her description of the process?\"\n\nAthena was visibly uncomfortable, \"No she wasn't.\"\n\nI was getting understandably upset, \"So let me get this straight. Y'all want to kill me; put my soul in limbo, preventing it from reaching the light; while you transfer my blood from my current body to that thing in the other room. Then perform a backup of my brain like I was changing cell phone carriers. Once that's done, destroy my current body. Then Hades returns my soul, hopefully to the new and fucking improved me. If that doesn't work, then I'm really dead and reach the light, or get stuck in limbo for eternity. If it does work, I become Olympus' goddamn Frankenstein! Does that about fucking sum it up?\"\n\nAphrodite looked really worried, \"No...No, it's not like that at all! I am so very sorry you misunderstood my intentions.\"\n\nThen Zeus started laughing. Everyone looked at him like he had finally lost his mind.\n\nWhen he calmed down, \"We have indeed found the right person. Any other, in the universe, would have jumped at the chance to be a powerful being, not to mention truly immortal. But not our Bob Davis. He accuses us of trying to turn him into a monster or at the very least... kill him.\"\n\nI guess curiosity was eating at me, \"So Dr. Frankenstein, what are the odds of success?\" Apparently smart ass comes out when I'm pissed.\n\nNow Aphrodite was visibly uncomfortable. She nervously rubbed her hands while she did some calculations in her mind. Interestingly, although it should have, this did not in any way detract from her sensuality.\n\nFinally with her head down, \"I can make the vessel match your DNA, I don't know if your soul will enter it.\"\n\nHades spoke, \"I feel confident I can direct your soul to this body. Aphrodite will have to jump start his heart at the precise moment you enter. Whether the body or your soul accepts the new union, is the big question. You asked for odds of success, I give it 50/50, at best.\"\n\nAphrodite looked at Zeus, \"Maybe this was a terrible idea.\"\n\nI confessed to the group, \"I've only loved three women, in this life. The first two were taken from me. I just found the third. I'm not ready to give up Josephine yet.\" I reached for her hand. She held it and gave it a little squeeze.\n\nHephaestus gave me a thumbs up.\n\nZeus provided another suggestion and we all know what that means. \"Bob, you need time to think and also discuss with my youngest. We are here to answer any questions you have. No one will force you to do this. But understand, our intention is not to create a monster, but to welcome you into our community as one who greatly deserves to live as an Olympian. I will be available, anytime, if you wish to talk.\"\n\nIn the next instant Josephine and I were standing in her villa. Just us, no committee of Olympians to accompany us. She hugged me expressing her intensity, uncertainty, fear and love. I hugged her back with equal emotion.\n\nChapter thirteen - Deliberation \n\nOnce we separated, Josephine kissed me passionately. Still holding each other she asked, \"How are you doing?\"\n\nI responded, \"Well up until about five minutes ago, I was bewildered, angry, and horrified. Now, I think I'm a bit horny.\" Then I gave her my best smile.\n\nShe rolled her eyes and said, \"Men.\"\n\nThen I added, \"But maybe we should talk. What do you think about all of this?\"\n\nJosephine disengaged and walked over the the wine cabinet, \"I'll fix us a glass of wine while we talk. I didn't know this was what they were planning when I asked you to have dinner with me.\"\n\nI walked over to her and wrapped my arms around her, \"I know that. I saw the look on your face when they started explaining what they wanted to do. You looked as clueless as I felt.\" Then I kissed her.\n\n\"So now that you've heard the offer, what do you think?\"\n\nShe looked deep into my eyes, \"Part of me thinks it could solve a big problem. We wouldn't have to worry about you getting old and dying. However, I don't like Hades' odds. The other part of me is deathly afraid it won't work and I'll lose you forever. I know all of my reasons are selfish, but it's how I feel.\"\n\nLooking just as deeply into her eyes, \"When Apollo and Athena described...uh...the guy's potential, Lord Acton's famous saying popped into my head, \"Power tends to corrupt, and absolute power corrupts absolutely.\" What makes them think I would be the exception to that axiom? Also, why do I have the feeling this is all tied to the Annunnaki threat?\"\n\nJill went back to fixing a glass of wine for us, \"Maybe it's time to have a private chat with my father.\"\n\nI was still getting use to the idea that these people weren't real gods, \"I know he's not anything I imagined him to be, but can I just have a private sit down with him?\"\n\nShe handed me my wine and then talked into the air, \"Father? Bob needs to talk with you privately. Haha...I'll tell him. We're having a glass of wine right now, I'll send him over as soon as we're done.\"\n\n\"What did he say that made you laugh?\"\n\n\"He said it took you long enough.\"\n\nWe talked a bit more and finished our wine. I then asked Josephine how to find Zeus. Next thing I knew I was standing in a rather large foyer, surrounded by white marble columns. Damn, I wish they'd give me some notice before zapping me around. I looked around and in one direction, I could see that the villa was on a hillside with a breathtakingly gorgeous view of an immense waterfall. I walked over to the edge and observed that the waterfall filled a beautiful lake below. Other directions either led to other parts of the villa or additional breathtaking outdoor views.\n\nFrom behind me, I heard the thunderous deep voice say, \"I never tire of the view. Hephaestus outdid himself when he designed it.\"\n\nFor a moment I had forgotten I was on a spaceship. I turned around and once again was face to face with the one of the most powerful beings in human history. I guess more accurately, I should say face to waist instead.\n\nZeus added, \"I'm glad we finally have a chance to talk.\"\n\nI said, looking way up, \"I assume you want to know what my intentions are towards your daughter.\"\n\nZeus laughed, \"Not at all! She a grown woman who has a mind of her own. I just want the two of you to be happy for as long as possible.\"\n\nI changed course, but was deadly serious, \"Ok, then let's talk about why I'm really here. No dancing around and no bullshit.\"\n\nZeus looked at me. I could tell he wasn't used to hearing someone be so direct with him. \"Fair enough, as you say no bullshit. I need you to save Earth from Anu.\"\n\nI think I was finally getting the picture, \"So that vessel you want me to live in can defeat the Annunnaki. And thus by defeating them, I also save the Olympus.\"\n\nWe walked to a room with various seating, tables filled with fruits and nuts and of course wine. I'd kill for a Diet Coke about now. I passed on the food and drink for the moment and sat down. The furniture adjusted to my size.\n\nZeus sat and then continued, \"Yes and no. We believe the vessel Aphrodite created, brought alive by the right soul, can defeat the Annunnaki. However, we know we will have to wage our own battle with them. The outcome of that battle is less certain. I only hope you'll save Earth. Heracles, Perseus and Josephine will assist, but they cannot win alone.\"\n\nThat statement surprised me, \"Why is Earth so important to you? You even said you've traveled the galaxy saving other civilizations who have been ravaged by Anu and his crew. Why not just bring your children to the Olympus and then have it out with Anu?\"\n\nZeus thought for a moment, \"Bob, I've connected with humans on a level that has never happened before or since. Earth is the only planet I've procreated. Perseus, Heracles, Theseus and Josephine are the only children that I had with human females, regardless what the myths say. The stories talk about how I deceived Perseus' mother into believing I was her husband, but that is not what happened. She wasn't married when I found her. I will admit to being unfaithful to Hera, but neither one of us was pure. She tolerated Perseus and his mother and I cared for them. She despised Heracles from birth. To this day I'm not exactly sure why, but I miscalculated her hatred for him and anyone connected to him. She was long sent away, back to our home world when Theseus came along. We learned my children were mortal when Theseus succumbed to his injuries as a result of his battle with Anu's Minotaur.\"\n\nHe was lost in his thoughts. Finally, almost talking to himself, \"I had been away from Earth for so long. I only intended to see how the human race was progressing. Then I met a beautiful human female, fell in love and Josephine was the result. She knew I couldn't stay and insisted she could raise the child alone. But her untimely death, of the plague, left Josephine very vulnerable and so I raised her here.\"\n\n\"What I didn't know until five years ago, on her dying bed, a young peasant boy promised Josephine's mother he would protect her. When she died he took the child into the forest. There had been rumors that her mother had conceived Josephine as a result of witchcraft. The religious authorities were convinced the child was a demon and had to be destroyed. They hunted the boy and Josephine until they finally surrounded them in a small abandoned cottage. The boy stood outside the front door, with a pitchfork, preparing to defend my daughter with his very life, from an attack by a dozen heavily armed horsemen. The boy was slaughtered and the cottage set ablaze, just as I took Josephine away. That boy sacrificed himself for my child. My only regret is I was too late to save him as well.\"\n\nZeus paused before continuing. I was wondering what this story had to do with anything.\n\nFinally, \"That boy was you, Bob. Hades saw it when he encountered your soul five years ago. Even if you had never been Hector, I owe your soul everything for saving my daughter.\"\n\nWe sat and let his comments stew for a bit. Neither one of us eager to continue.\n\nThen he continued, \"Most humans are very flawed. They're driven by their own personal interests. Almost all the leaders are corrupt and many of those that follow, do not care or are to afraid to oppose them. They are like sheep, following whoever is leading the flock. It has been that way since the beginning. I began to believe the human race would never evolve beyond their own greed. But, there are a number who are honorable, trustworthy and want to do what is right. It is those who give me hope that humans can overcome themselves. You exemplify those qualities and more.\"\n\nI interrupted, \"Zeus, please stop making me sound like a freaking saint. I too am flawed, like all humans. And it's that flawed human that is worried if I accept your offer and the union is successful. I'm worried that such power and knowledge will corrupt me. After all it is the nature of my species.\"\n\nZeus smiled, \"Bob, I know you're flawed, but you are exceptional, whether you believe it or not. I've watched you and can attest that if any human can handle this \"new life\" it is most definitely you.\"\n\nHe may have jumped over the first hurdle, \"How long have you been developing this plan?\"\n\nZeus responded, \"The Annunnaki killed Ares a little more than 1,600 of your years ago but to us it was only a short time ago. I was there when he took his last breath. He told me Anu said he was going to annihilate the Olympus and everyone on board. Then he was going to destroy Earth. Ares' soul said farewell to Hades as he watched it pass to the light. We don't know if his soul was reborn. Afterwards, I asked all Olympians to find a way to protect our ship and Earth.\"\n\nSomething dawned on me, \"Zeus, Josephine was born 1,600 years ago, is it even remotely possible she is Ares reborn?\"\n\nI think it's safe to say, Zeus doesn't get shaken very often. He stood up and started pacing.\n\n\"Hades, please join us in my study.\" Boom, Hades was standing beside him.\n\n\"Brother, Bob made an interesting observation while we were discussing Ares' death. He noted Josephine was born soon thereafter. Can you determine if Josephine is Ares reborn?\"\n\nHades was in deep thought, \"I've just begun to see the past lives of the living, but not with complete success or clarity. Normally, I see the past as a soul passes to the light. But I've always felt a deep bond with her and that might explain why. I will visit with her and see what I can do.\" And just like that he was gone.\n\nZeus was still pacing and said to himself, \"How could I have missed something so obvious?\"\n\nI interjected, \"Us flawed beings tend to miss things that are very close to us.\"\n\nZeus stopped and looked at me, \"But I can't miss things that are important, everyone on the Olympus is relying on me to see everything. I can't defeat Anu if I make even one mistake or miscalculation. If he destroys us, not only will Earth be in peril, but also the entire galaxy.\"\n\nI looked back at the the great and powerful and strangely vulnerable Zeus, \"Wow, I would have never imagined the great Zeus, King of the Gods, would feel the immense pressures of leadership. I've liked you from the moment I met you. Now, I not only like you, but have the deepest respect for you.\"\n\nHe knelt in front of me and put his large hands on my shoulders, \"You have no idea how much I appreciate what you've just said. Whether you join us for eternity or live your natural human life here, you will always be considered my respected friend.\"\n\nThink about that for a second, BFF with Zeus. More than way cool.\n\nZeus stood back up and went over to the beverage table and poured two glasses of water. He brought one back for me, then sat down opposite me.\n\n\"Zeus, you described my...surrogate as indestructible, physically and mentally enhanced and even truly immortal. You've discovered that you and your people are not immortal and can be killed. If I become this indestructible and truly immortal being, will I be more powerful than even you? Or did Aphrodite build a \"kill switch\" into it?\"",
        "Zeus had a questioning look on his face, \"What is a \"kill switch?\"\n\n\"It's a mechanism that is built into the body to allows the creator to terminated it, if it becomes a threat.\"\n\nZeus understood, \"That is a human reaction, not ours. I can see where your inherent lack of trust would want to build in a \"kill switch\" to protect the masses. I trust you can handle the power this, what did you call it? Oh yes, surrogate will possess. And yes, you could very possibly become the most powerful being in the universe.\"\n\n\"That's the part I'm very uncomfortable with. I don't want to be the most powerful being in the universe. Is there any way to \"dumb\" it down a bit? At least put in on parity with all Olympians?\"\n\nZeus considered my request and then responded, \"Bob if we did that, Earth would still be vulnerable to an Annunnaki threat. We need for you to be able to protect it and my children\". Then he did something unimaginable, Zeus dipped his head and almost at a whisper said, \"Please.\"\n\nHoly shit, did the great god Zeus almost beg me to do this, to save his family and my planet? How the fuck do you say no to that?\n\nI said, \"I'd like to observe it for a while and think things over. Would that be possible?\"\n\nZeus responded, \"Would you like some company, or alone with your thoughts?\"\n\n\"I'd like to initially be alone, if you don't mind.\"\n\n\"Of course not. Just call out if you need any of us.\"\n\nAnd with that I found myself back in the laboratory, looking in the window at the sarcophagus containing what could be the future me. There was no one else in the laboratory, just me and maybe future me. I assumed it was contained in a sterile environment. I didn't see a door leading into the room, but heck, these folks don't use doors much.\n\nI just stood there, for I don't know how long, staring at the lifeless body, thinking random thoughts. I looked for defects, a mole, a birthmark, anything, but it was flawless. I tried to picture it being me. At sixty and after the life I've led, I hurt everywhere, all the time. In that body, I would never feel any pain, ache joints or even arthritis. Would I have unlimited strength or speed? Would I be able to fly? What about heat vision or X-ray vision. Fuck...I'm describing Superman, a comic book character! That's not reality. I needed to get a grip.\n\nBut what is reality? Zeus wants me to protect Earth from the Annunnaki. Doesn't that mean he wants to turn me into a weapon? So what happens after I save Earth? What would be my purpose? Could I hide in the shadows like Heracles, just watching as humanity bumbles through its future? Is there a middle ground somewhere? I decided I did need to talk to someone.\n\n\"Aphrodite, if you can hear me, could we speak for a moment?\" And just like that the goddess of Love was standing before me.\n\n\"Bob, I just want to apologize...\"\n\nI interrupted, \"No need to apologize. It was a lot to take in. I'm sorry I called you Dr. Frankenstein.\"\n\nShe responded with a smirk, \"Apology accepted. What did you wish to speak about?\"\n\n\"I want to talk about Bob 2.0. But before we start would you mind if Josephine joined us?\"\n\n\"Not at all, I just requested her presence.\" At that moment Josephine appeared.\n\nJosephine asked, \"So what's going on?\"\n\nI responded, \"I wanted to talk with Aphrodite about maybe-me and I wanted you to hear the conversation.\"\n\nJosephine responded, \"Ok.\"\n\n\"Aphrodite, why did you create this body? I guess more specifically, why was it created and how did I become part of the plan?\"\n\n\"Zeus took Are's death so hard, some of us thought he would go off, irrationally, and seek revenge. If he had, he surely would have been killed as well. We couldn't let that happen. I believe on Earth they call it an intervention. We eventually talked Zeus out of going. In return we promised to develop a weapon so powerful that it would destroy all of the Annunnaki. I'm the goddess of Love because of a lucky set of genes, my ability to influence others and I really love sex..a lot. But I never understood why. I spent so much time and energy trying to understand myself that I became an expert in genetics.\"\n\nI think I was starting to understand, \"And since your strengths lay in genetics, creating a living weapon was more logical that a mechanical one.\"\n\nAphrodite responded, \"Yes; however, Hephaestus has been working the mechanical side of the equation. I knew I could create the perfect weapon that was also a potentially living being. The main obstacle was bringing it to life. That's when Hades came up with the idea of joining Hector's soul with this perfect body. Zeus agreed, so he charged Hades to keep watch for when Hector's soul again made its journey to the light. You know the rest of the story.\"\n\nAphrodite suddenly became very sad, \"I am so sorry you lost your wife and daughter and you were not allowed to join them in the afterlife. But you would have been reborn again and we would not have had an opportunity to ask for your help for another lifetime. We risked our entire future...and Earth's waiting as long as we did.\"\n\nI was once again very humbled by the accolades these people directed towards me. I really didn't deserve them. I was just a man who tried hard to be a good person. I doubt that squad of Iraqi insurgents would agree with that assessment. I had slaughtered every last one. Yea, I did it to save my Marines, but that didn't make them any less dead, or me any less responsible.\"\n\nJosephine brought me into a loving hug, \"Saving your entire planet is a lot to take in.\"\n\nI begrudgingly released myself from her hug, \"Strangely enough its not becoming this super being and saving my planet that bothers me. Nor is it utterly destroying the Annunnaki. It's what happens afterwards. If I develop a \"god complex\" who's going to stop me? You? Hank? Zeus? According to what Aphrodite has described, none of you would be able to stop me. So my greatest fear is, my love, at the end of the day, the Annunnaki win out...Earth and the Olympus are destroyed. Except it's by my hands not theirs.\"\n\nAphrodite spoke up, \"I've built in contingencies for that very implausible possibility.\"\n\nI looked at her, \"So you did build in a kill switch. And you didn't tell Zeus about it.\"\n\nShe looked worried, \"Are you going to tell him?\"\n\nI just smiled, \"No I'm not. In fact my respect for you has increased immensely. But someone needs to help me understand what my eternal purpose will be, once the Annunnaki threat is abolished.\"\n\nMaybe Athena and Apollo can help in that regard.\n\nI called out, \"Athena...Apollo, would you please join us in Aphrodite's laboratory?\"\n\nIn the next instant, they were standing beside me.\n\nAthena was first to speak, \"I see you and Dr. Frankenstein have made up.\" She looked annoyingly at Aphrodite.\n\nI responded, \"Yes, we have. Aphrodite and I are all good. I need your help to discover my purpose after the Annunnaki are defeated.\"\n\nAthena asked, \"Did Aphrodite tell you about your role in defending Earth?\" Apparently this was a state secret of sorts. I thought these people wanted me to trust them.\n\nI responded, \"No, that would be Zeus. If you have a problem with it, you can take it up with him. I have to be honest here, I'm not sure I appreciate secrets, concerning my future. It makes me feel like you're manipulating me.\"\n\nNow Aphrodite was shooting daggers at Athena. Athena looked embarrassed and guilty.\n\nFinally, her shoulders dropped and her head hung low, \"You are right Bob. We only intended to first educate you on the threat that faces us, before we presented our proposal. I can see where that could be seen as manipulation. That was never our intent, please believe me.\"\n\nI really didn't think they were trying to manipulate me, I just wanted Athena to step down from that righteous pedestal she was standing on.\n\nApollo spoke, \"What did you mean by your purpose after the threat is eliminated?\"\n\nI said, \"If this crazy idea works and I'm successful in destroying the Annunnaki threat, what then? Zeus informs me that I might be more powerful than any Olympian, to include him. I'm afraid that much power will eventually corrupt me. But if I knew what my purpose, after the threat is eliminated, could be, maybe I could focus on something positive.\"\n\nAthena and Apollo were silent for a moment. It was Athena who spoke first, \"Bob, Earth is going to be in shock, regardless of your decision. If Anu carries out his threat, Earth will find out soon enough that they are not alone. If the battle ensues like we believe, and we are victorious, Earth will need a great deal of help to adjust in the aftermath.\"\n\nApollo added, \"They will try to worship you, Perseus, Heracles and Josephine, or whoever survives. Your purpose will be to not let them, but show them there is a much larger universe out there and they are part of it. Your challenge will be to educate them on how to live in peace and global cooperation.\"\n\nI interjected, \"Yea, that New World Order idea didn't go over that well, for the masses. It was fine for the elite, but the common man was the biggest loser.\"\n\nAthena again, \"That's why they will need you. You understand what true peaceful coexistence means. Teach them, until they are ready to join the other advanced societies in the galaxy. We will be the first to welcome them.\"\n\nApollo then added soberly, \"If we prevail in our fight with the Annunnaki.\"\n\nSomething struck me, \"Do you know how they managed to kill Ares?\"\n\nAphrodite responded, \"They have a weapon that has the capability to penetrate our skin and shut down our organs. They killed him from the inside, without leaving a visible mark. Ares died as a result of massive organ failure, all at one time. The weapon is a type of neurotoxin introduced into the body. We thought we were immune to all poisons and diseases. However, this one targets the specific DNA of the host and then modifies its structure to inflict maximum damage. What we don't know is how they were able to introduce the neurotoxin into Ares. That would not have been easy to accomplish. Being the god of war, Ares was probably the most cautious being among us. Some would even say he was paranoid.\"\n\nI asked, \"How are you so sure that body is immune to that type of poison?\"\n\nAphrodite, \"Because I designed it to adapt to any condition and correct itself for maximum efficiency. You will even be able to live in the vacuum of space because of your ability to adapt. The Annunnaki might be able to introduce the neurotoxin into your system, but you will immediately adapt and neutralize it's impact on your body.\"\n\n\"I think I now understand why Zeus said Perseus, Heracles and Josephine couldn't defeat them on their own. I also get it that any active conflict between Anu and Zeus has an uncertain outcome.\"\n\nAll of a sudden, I was just plain wore out. Might be because of the stress or not eating regularly or not getting enough rest or probably all three. I became lightheaded, dizzy and very weak. The next thing I remember is Josephine over me with this very worried look.\n\nI asked, \"What happened?\"\n\nApollo responded, \"You fainted. We've been pushing you to hard. You need to eat and rest.\"\n\nAnd just like that, Josephine and I were back in her villa. I was in her bed and she was telling me to rest. She then walked out of the room. I heard Zeus' voice asking how I was. He seemed very concerned. That would have blown me away if I hadn't been so tired.\n\nChapter fourteen -- The Decision\n\n \n\nI have no earthly idea how long I slept. I don't even remember dreaming. Well at least there weren't any nightmares. I'll take it as a win. Then I felt her next to me. I rolled onto my back and slipped my arm under her neck and around her back. She slid onto of my chest and draped her arm around my body. She was still asleep, but with a smile on her face. I could have laid like that for hours, but in reality it was probably only 30 minutes. She lifted her head and smiled at me. Then she scooted up my body until we were eye to eye. Josephine leaned in and kissed me passionately.\n\nAfter she tried to suck the life blood from me, she smiled and said, \"Good morning sleepy head. I love you.\"\n\nI placed my hands on either side of her face and kissed her just as passionately as she had me. I looked at her and said, \"I love you too.\"\n\nShe started kissing my neck, then my chest, lightly sucking on my nipples. She moved down to my stomach and finally to my pubic region. Josephine wrapped her hand around my now engorged manhood, and lovingly caressed it. I felt her tongue licking the head of my cock and then her mouth engulfed about half of it into her throat.\n\n\"Oh my god!\" was all I was able to muster. She then proceeded to give me the best blowjob I have ever had. As I said before, I'm gifted in length and girth, but she had no issues handling me. I was pleasantly shocked when I felt my entire cock deep in her throat and she licked my balls. No one had ever managed to get even more than half of it in their mouth. My wife excelled at oral sex, but I have to admit she couldn't hold a candle to Josephine. I realized I had my hands on her head as I was face fucking her mouth. Josephine then went deep again and I lost it. I came harder than any time I can remember. She took it all, with gusto. Once I was spent and began to soften, she lifted her head off my cock with a \"pop.\"\n\n\"Holy shit, where did you learn to do that?\"\n\n\"I have been around for 1,600 years and I didn't live in a monastery. Besides, I am related to the goddess of Love.\"\n\n\"Remind me to thank her later. One side effect though...I'm famished.\"\n\nJosephine smiled, \"Well then let's solve that little problem\"\n\nI responded, \"Nope, my turn to cook for you. Have you ever had my galaxy famous omelets?\"\n\nShe replied, \"They are renowned far and wide, but I have yet to sample their essence.\"\n\n\"That cannot stand. We must resolve this immediately\". I announced with authority. I leaped out of bed, stopped off to take care of some personal business and then got busy in the kitchen.\n\n\"One Bob's famous Western omelets for the beautiful lady.\" I slid her plate onto the table. Josephine took her first bite and sighed, \"Oh my! That is the best omelet I have ever had...ever!\"\n\n\"Thank you...but I did tell they were famous.\" I replied.\n\nJosephine, all of a sudden, got serious, \"Have you thought anymore about what you want to do?\"\n\nI looked at her with love in my eyes, \"I have and I believe I'm going to accept their offer. If there is even a remote chance I can help protect Earth and the Olympians, it's worth the risks. I'll worry about the consequences, afterwards.\"\n\nShe nodded her understanding, \"It is who you are.\"\n\nI then said, \"Zeus, would you care to join Josephine and I for breakfast?\"\n\nInstantly he was standing in the kitchen. Thank goodness her villa was built to accommodate his size.\n\n\"I would very much enjoy breakfast with my daughter and my favorite human.\"\n\nI asked, \"This may sound stupid, but have you ever had a Western omelet?\"\n\nHe replied, \"I don't believe I have.\"\n\nJosephine answered, \"Then you're in for a big treat father. Bob, could I have another?\"\n\nI laughed, \"Two Bob Davis galaxy famous Western omelets coming right up.\"\n\nThen instead of the furniture adapting to Zeus' size, Zeus shrank to our size.\n\nHe said, \"I thought this might be easier than rearranging the furniture.\"\n\nJosephine leaned over and gave him a big hug. It was very obvious to anyone that they loved each other very much.\n\nWhile waiting for me to cook, Josephine said, \"So father, Hades thinks I might be Ares reborn. But after we talked he couldn't confirm conclusively.\"\n\nZeus answered, \"There is much about the life process we still do not understand. I'm very happy you're my daughter. If you were also my son reborn, that would just be a bonus.\"\n\nI interrupted, \"Ok, here you go, two Western omelets\"\n\nZeus took a bite and made a face like he had just discovered another wonder in the universe. He finished the omelet without saying a word. When his plate was empty, \"Is there even the slightest chance I could have another?\"\n\nI chuckled, \"I guess that means you like it. Of course you can. One omelet on its way.\"\n\nI placed the second omelet down in front of him. I also had one for me. I sat down opposite Zeus, took a sip of coffee (in my opinion, the true nectar of the gods), \"Zeus, I've made my decision. I accept your offer, to have my soul, blood and brain transferred into the surrogate. If successful, I will do everything in my power to help protect, not only Earth, but Olympus as well.\"\n\nZeus responded, not how I expected, \"What about your concerns of the aftermath? You becoming too powerful?\"\n\nI really didn't have an answer, \"Let's work on saving our lives and the lives on Earth first and then worry about what happens afterwards.\"\n\nZeus knew that was about as good an answer as he could expect, \"Very well. I'll inform Aphrodite and Hades to prepare for the transfer.\"\n\nZeus finished his second omelet and thanked me profusely for expanding his palate. Told ya...galaxy famous. Before he left he told me and Josephine to wait until we heard from Aphrodite or Hades.\n\nWe cleaned up the kitchen and then showered together. Her shower was big enough to have a small party and the water came from all directions. There had to be something in the water because it totally revitalized me. Josephine thoroughly washed every inch of my body, especially my hardened cock. She knelt down to initiate another blowjob, but I pulled her back up and washed her luscious body. Strangely, the more I washed her pussy, the wetter she became. Go figure. I then turned her around so she was facing away from me, knelt down and buried my face in her butt. I licked her from her bunghole to her clit. She squirmed and moaned loudly.\n\nI wanted to be inside her, I desperately needed to make love to her. I stood, bent her forward and entered her from behind. God...How tight and wet and hot! I slid into her slowly, relishing how she felt with each inch forward. I reached around and cupped her breasts, finding her nipples. I squeezed and pulled on each nipple. She moved her butt in every direction, touching every centimeter of my cock. Each move provided new stimulation. Her moaning was constant and getting louder with each passing second. I tried to find a rhythm with her gyrations, but honestly, she was doing all the work. I realized she needed this as much as I did. Suddenly she tensed up, push her rear hard against my pubic bone and screamed something unintelligible. It didn't matter, I was immediately there and began shooting my load deep into her womb. I heard another unintelligible scream and realized it came from my mouth. That had to be the most intense orgasm I had ever had.\n\nWhen she calmed down some she exclaimed, \"Oh my god! Did that really just happened? That was so intense, I thought I would lose my mind! Where did you learn to make love like that?\"\n\nI was still breathing hard, \"I was going to ask you the same thing. I guess this is what happens when two are meant to be together.\"\n\nWe disengaged, she stood up, turned around, put her arms around me and kissed me more passionately than anything I had ever felt, in my life. \"I better not lose that part of you during the transfer.\"\n\nThe water ran down our bodies as we held each other. Both wondering, not vocalizing, if this is the last time.\n\nFinally I answered her, \"Not if I have anything to do with it.\"\n\nShe buried her head into my shoulder, \"Oh Bob, I'm so afraid this won't work and I'll lose you forever.\"\n\nI just held her, I didn't have a clue of what to say.\n\nChapter fifteen -- Rebirth\n\n \n\nApollo was chosen to escort us to the OR. Why we needed an escort, I'm not sure.\n\n\"Afraid I'd change my mind?\" I inquired.",
        "Apollo looked at me... dead serious, \"Bob, we understand the sacrifice you're making for Earth and us. We also understand the risks. We wanted you to know, without any doubt, you're not alone. We're here for you and my sister. If you change your mind, no one will think less of you.\"\n\nI looked equally as serious back, \"Apollo, I appreciate the support. I would never have even considered doing this if I thought y'all weren't behind me. I also expect a great deal of help adapting to my new life.\"\n\n\"You have my word and I'm speaking for all Olympians, we will be with you every step of the way. Are you ready?\"\n\nI looked at Josephine, took her hand in mine, \"To quote Larry the Cable Guy let's \"get-er-done.\"\"\n\nJosephine laughed, Apollo looked confused, then just shook his head.\n\nIn an instant we were standing, not in the laboratory, but a different room. A crowded one I might add. Surrounding me was Zeus, Athena, Artemis, Hephaestus, Aristaeus and three others I didn't recognize.\n\nZeus provided the introductions, \"Bob, I want you to meet Demeter, Herm\u00e8s and Poseidon.\"\n\nI walked over to each one and shook their hands. Demeter wasn't as...oh what's the word I'm looking for...glamorous, that's it, as Aphrodite. She didn't have the eternal youthful look of Artemis nor the wisdom of Athena. She wasn't plain, she had that kinda \"country girl\" beauty. She also possessed one of most engaging smiles of any Olympian. Her greeting felt sincere. I like her immediately.\n\nHerm\u00e8s was almost identical to Apollo's size and body structure. Herm\u00e8s stood out only because of his short red hair.\n\nPoseidon was...well there's only one way to describe him...intimidating. He was enormous, even by Olympian standards. Coal black long flowing hair and equally flowing beard. Steel blue eyes framed by black bushy eyebrows. Honestly, Heracles looked more like a miniature (haha miniature, I crack myself up) Poseidon than the son of Zeus.\n\nWhen I shook his hand, he said in a deep, but quiet, voice, \"The universe is counting on you. You have no idea what your sacrifice means to not only Olympians, but all the known civilized worlds. Trillions of beings are with you this day.\"\n\nNo pressure.\n\nIt's shaping up to be a \"walk in the park\" kinda day. This day will either end with me dead or something else entirely. And once I submit to Aphrodite, I'll have absolutely zero control over the outcome.\n\nSo what could I say, but, \"I'll try not to disappoint.\"\n\nZeus escorted me into a room with numerous pieces of what I assume to be medical equipment. He then pats me on the shoulder and leaves. Aphrodite and several Grays join me. She asks me to remove my robe and sandals. Once naked, she requests I stand within a circle at the center of the room. I did as requested. Next thing I knew I was vertical to the floor, floating in the air.\n\n\"Are you comfortable?\" She asked.\n\n\"Yes I am. It feels a little weird, by very comfortable.\" I respond.\n\n\"I'm going to give you a sedative which will put you asleep. I can't wait to hear about your experience. Thank you for doing this. I know you have serious reservations and your decision wasn't an easy one.\" She was honest and heartfelt.\n\n\"Let's do this.\" Was the last thing I remember saying.\n\nThen I was above my body, again. I remembered the feeling from five years ago. Strangely, I actually paid attention this time. I was in a different room laying right next to the sarcophagus containing the other body. I could see tubes and other connections attached between me and the other guy. Aphrodite and the Grays were busy working. I wasn't concerned with what was going on. In fact, I felt detached from the whole scene. It was like casually watching a movie that I wasn't that interested in.\n\nI didn't hear my daughter calling this time, but felt a tug from behind. I turned and saw the light again. It was vitality important that I reach it. I don't know how or why, but I knew it was a good place and I would be happy there. I began moving towards it. The light was getting closer and brighter. I could feel love emanating from the light. I couldn't wait to be there.\n\nAll of a sudden it was like a barrier was blocking my ascent. It was somehow preventing me from reaching where I must go. I fought to get past it, to reach the light, but to no avail. I was losing the battle and panic was beginning to set in. Then I heard Hades' voice, \"It's time to begin a new life.\" Slowly I was returning to the operating room. I opened my eyes and screamed, \"No!! Not again!!\"\n\nNext thing I know, I'm looking down on the OR again. I faintly hear Aphrodite yell, \"We're losing him!!\" Then I could hear Josephine pleading, \"Please don't leave me!\" A very strange thing happened next... I had a conscious thought. I remembered that I was badly needed. I couldn't remember why, but it was out of desperation. Then I remembered I didn't want to lose Josephine. I turned and saw the light, the feeling beckoned me to it. But somehow, someway I resisted it. I turned back to the operating room and willed my way back to the land of the living.\n\nI opened my eyes and Aphrodite exclaimed, \"We got him back! He's a fighter!\"\n\nJosephine leaned into me, \"Stay with me Bob, please don't leave me!\"\n\nMy breathing was labored but I remained conscious. Eventually I got my breathing under control and saw Josephine standing over me. We just looked at each other.\n\nFinally I said to her, \"Don't worry baby, I'm not that easy to get rid of.\"\n\nTears streamed down her face, \"I don't want to ever be rid of you.\"\n\nI just gave her a smile.\n\nShe asked, \"How are you?\"\n\nI didn't feel any different, \"I'm ok, I'm so sorry it didn't work.\"\n\nAphrodite appeared by my other side, \"Oh, but it did.\"\n\nI then noticed I was laying inside the sarcophagus. I grabbed the sides and sat up. Normally after laying in one position for awhile, I'm stiff and sore. You would think after dying and being brought back to life, I'd be on life support. After all, last time it put me into a coma. Not now, I felt limber and free of any pain. I felt...young.\n\nAphrodite touched my arm, \"Don't get in too much of a hurry. Take things slowly. You died on us twice. Even the new you is going to take a little time to recover.\"\n\nI looked around, then down at my new body. Wow, was all I could think. I stood up and stepped out of the sarcophagus. I was standing in front of Josephine and a little uneasy on my feet. She steadied me. When did she get shorter? I looked down my body. Gone was the middle age stomach. I felt my chest and abs...solid as a rock. Then I felt my biceps...large and strong. I even look at my penis...eh roughly the same. I wondered if it worked the same way. My thighs and calfs were sculptured limbs. Even my hands felt great. I had a touch of arthritis...totally gone.\n\nAphrodite must have been reading my mind. \"There's a mirror other there.\" She pointed to the other side of the room.\n\nI walked over to the full length mirror...Olympian full length. It was the strangest feeling I've ever experienced. Think about standing there, looking at someone else, knowing that it is in fact... you. It took a few moments to wrap my head around it. I was the absolute perfect specimen of the human male body. After a bit, I notice Josephine was still standing next to me, holding my arm.\n\nI turned and looked at her, \"So...what do you think of the new me?\"\n\nShe thought for a moment. \"I loved the old you, but the physical you was only part of it. I fell in love with the inner you, has that changed as well?\"\n\nI gave her question serious consideration. If I didn't look in the mirror, I felt the same, albeit no pain. I had even initially thought the procedure failed, which is kinda funny when you think about. If it had failed, I wouldn't be here at all. My old body was destroyed, so there wouldn't have been anything to come back too. But, at least from my perspective, my personality felt the same. I was eerily calm, considering what just happened. I was killed and then resurrected into a body that was not made by the union of a male sperm and a female egg. Does that make me an artificial life form? Or was I now a cyborg of sorts? Then I smiled. I may be in a fabricated body, but the \"real\" me is the same. I still have the tendency to over analyze things and I still feel that smart ass sense of humor.\n\nFinally, \"I don't think so, but you'll have to be the judge.\" I then faced her and hugged her.\n\n\"Wow...your hugs are a lot stronger,\" she said still holding me. \"Good thing I'm stronger than the average human.\"\n\nZeus appeared in the OR and approached me. I thought he was taller? He looked very anxious.\n\n\"How is he Aphrodite?\" He asked. I was in the process of getting dressed.\n\nAphrodite responded, \"Ask him yourself.\"\n\nI beat him to it, \"I feel very good. In fact...I feel great.\"\n\n\"You took a great deal out of Hades. I've never seen him even remotely exhausted before.\" Zeus added, \"At one point I thought the procedure was going to kill him.\"\n\n\"When he recovers, I'd like to talk with him.\" I responded.\n\nZeus turning to Aphrodite, \"So how do we proceed now? Does Bob just naturally discover his new potential, or do you have a protocol to help him?\"\n\nBefore Aphrodite could answer, \"Zeus, before we get into all that, I think we need to acknowledge that Bob Davis is dead. I would like to go by one of my former names. From now on call me Hector.\"\n\nZeus was surprised, \"I can think of no better tribute to your vast history. It's good to have you back Hector.\"\n\nAphrodite interjected, \"Bob...sorry, I mean Hector will have to discover a great deal about himself, but we can aid him.\"\n\nI asked, \"Does anyone know how long we have until the Annunnaki attack either Earth or the Olympus?\"\n\nPoseidon entered the room, \"The intelligence I gained while in the Andromeda galaxy says an attack could happen at any time.\"\n\nI looked at Aphrodite and asked, \"Can you give me a crash course concerning my new capabilities?\"\n\nShe responded, \"I can tell you what I designed, but you'll have to discover each on your own. Also, there may be others that will develop naturally. We won't know those until they reveal themselves.\"\n\nZeus interjected, \"Right now, you need to rest and recover before you begin...training.\"\n\nZeus and suggestions...right?\n\nI took Josephine by the hand and said, \"Please, allow me.\" Instantly we were standing, alone, in her villa.\n\nShe looked at me astonished, \"How did you do that?\"\n\nI shrugged my shoulders, \"I don't know, I just knew I could do it. It was second nature.\"\n\nShe hugged me again. It was the type of hug one gives to a loved one who just survived a near death experience. The hug acknowledged that she almost lost me. The hug also acknowledged that life is precious and every moment together should not be taken for granted. I wholeheartedly welcomed her hug. I felt exactly the same way. Then we looked at each other and shared the most passionate kiss I had ever experienced. In one way it was our first kiss.\n\n\"Do my lips feel different?\" I asked.\n\n\"They do, but I can still tell it's you. The emotional connection is still there.\" She smiled.\n\n\"Thank goodness. Maybe this was a good decision after all.\" I smiled back.\n\nSuddenly I felt my arousal. We both felt my cock beginning to harden, pressing against her abdomen.\n\n\"Interested in seeing if this thing works?\" I asked.\n\nShe looked down, \"I think it's off to a good start.\"\n\nShe reached down and touched my ever growing penis. I nuzzled her neck, laying light kisses gently on her. She let out a soft moan. She reached up and unhooked my robe, it fell to the ground. I unclasped hers as well, slowly revealing her beauty as it fell away from her body. We stood nude facing each other.\n\n\"It feels like the first time all over again. I need to discover what you enjoy and how you'll feel and everything.\" She said with a twinge of nervousness.\n\nI wrapped her into a warm embrace, \"I guess I'll do whatever is necessary to keep things fresh and exciting.\"\n\nShe simply responded, \"Smart ass. I was just beginning to know your previous body.\"\n\n\"If things work out well, you'll have centuries to figure this one out.\" Then I leaned down and gave her my best kiss, communicating my love and want for her and her alone.\n\nWe spent the rest of the day and night making passionate love. Sometimes it was slow and loving. At other times it was fast and hard. We both seemed very intent on finding out what my new body was sexually capable of. I seemed to have an unending reservoir of semen, whether it contained any sperm was yet to be determined. With Josephine being a demigod and me being...whatever I was, we weren't able to wear each other out. I lost track of time, but we made love for hours and hours.\n\n\"I guess I shouldn't be surprised the goddess of Love built a sex machine.\" I final announced.\n\n\"I for one am very happy that she added that particular feature.\" Josephine laid back with a satisfied smile and responded.\n\n\"Oh well, as they say, all good things must come to an end. Hungry?\" I asked.\n\n\"Yes, but I'll cook, you rest.\" Josephine answered. She got out of bed and walked to the bathroom. I watched her naked butt swaying as she goes. Damn...I'm a lucky guy.\n\nOnce we finished eating we got dressed, short chitons and sandals of course.\n\n\"So where are we off to?\" I asked.\n\n\"Aphrodite wants to do some tests before your training begins.\"\n\nIn the next moment we're standing in another villa. Aphrodite approaches and warmly hugs Josephine.\n\n\"I'm so sorry we haven't been able to spend much time together, since you've returned. I've miss you so much.\" Aphrodite said to Josephine.\n\n\"Me too, but you have been a tad busy. I've missed you as well.\" Josephine responds.\n\nAphrodite looks at both of us and with a knowing smile says, \"You two look very sexually satisfied. I'm happy to see that part of him works as designed.\"\n\nWanting to change subjects I asked, \"Has Hades recovered enough to talk with me?\"\n\nA moment later Hades appeared next to Aphrodite, \"I'm much better now, thank you.\"\n\nAphrodite asked, \"Would you like to go somewhere private to have your discussion with Hades?\"\n\nI answer, \"No, you and Josephine are welcome to join us. I think you'll find it very interesting.\"\n\nAphrodite escorts us to another room in the villa. The seating was more like lounges. The colors were very neutral and comforting. We took a seat. Aphrodite offered Hades and Josephine a glass of wine. She handed me a cup of a dark liquid. I took a suspicious sip. My eyes went wide.\n\n\"Where did you manage to find a Diet Coke?\" I asked.\n\n\"You can find anything you want here.\" She responded.\n\nI turned to Hades and said, \"Before I tell you what I experienced during the transfer, how many times did you push my soul to this body?\"\n\nHades responded, \"Your soul fought so hard to reach the afterlife, I could only manage the energy to send you back once.\"\n\nI said, \"I thought so. The second time I willed myself back to life. That would indicate, in my soul state, I had a conscious thought and the ability, or free will to act on it. Have you every experienced that before?\"\n\nHades looked surprised and I guessed that didn't happen very often. \"I have always thought a being's soul was just a repository of its cumulative lives. I never considered it an intelligent being with conscious thought and free will.\"\n\n\"Well if you find that interesting, please allow me to blow your mind. Apparently Aphrodite built in a way for me to see the soul within a living being. Additionally, I can see if the soul in inherently good or evil. I am also able to view the soul's past lives.\" I turn to look at Josephine, \"You are indeed Ares reborn. Ares is the only soul who has ever, in all of history, selected which body to be reborn in. How he was able to pull that off, I have no idea, neither does your soul.\"\n\nAphrodite looked stunned, \"I didn't build that gift into your body. I wouldn't begin to know how.\"\n\nJosephine look through me, \"I was Ares, the god of war?\" she said to herself. I nodded.\n\nAphrodite, \"Anything else you discovered?\"\n\nI replied, \"Yes, but I would need a secure room and Zeus' presence.\"\n\nAt that moment Zeus appeared, \"I secured this room, it is safe for us to talk.\" He looked at Josephine and brought her into a loving hug, \"My son and daughter in the same person. That is the happiest information I've had in a long time.\"\n\nI said, \"eavesdrop much?\"\n\nZeus looked at me and smiled, \"Hector, please continue.\"\n\n\"I know how to kill the Aannunnaki and the being who poisoned Ares. I assume you overheard the conversation we were just having concerning my ability to interact with a living being's soul.\"\n\nZeus simply nodded.\n\n\"Well I can direct any soul to leave any living being as well. By removing Anu's soul from his current body, I effectively remove the threat.\"\n\nZeus asks, \"But he will just be reborn and at some point in the future become a threat again. Can you destroy the soul?\"\n\nI responded, \"The soul is pure energy and cannot be destroyed, but only transferred to a different state. We have established that it is possible for a soul to have a conscious thought and the free will to act on it and also to direct itself to a new fetus of its choosing. I have to assume Ares had both a conscious thought and free will to act on it in order to enter Josephine's fetus at the moment of impregnation. That would make two known cases of conscious thought and free will. We don't know how many others have occurred; however, they appear to be remote, and thus highly improbable.\n\nHades added, \"If Anu's soul is evil, reborn he could reek havoc on another planet's society. His damage would be limited. If Hector could identify what body Anu's soul enters, we could monitor his or her life and further mitigate any future threat.\"\n\nJosephine asks, \"Could you do the same with his weapon?\"\n\nI looked at her, \"As long as his weapon has a soul, I should. But if not, we'll figure out another solution.\"\n\nAphrodite, \"You need a complete orientation to what I did design into your body, before you start sending souls into the afterlife.\"\n\n\"Yes Dr. Frankenstein\" I said with a smile.\n\nJosephine asked, \"Do you have an idea how to get close enough to the Annunnaki to accomplish this?\"\n\nI respond, \"Zeus mentioned earlier there is a spy among us. I know who it is and how to use him to get me close to the Annunnaki.\"\n\nTo be continued...\n\n \n\n \n\n \n"
    ],
    "authorname": "Homer21stC",
    "tags": [
        "family",
        "sacrifice",
        "sci-fi",
        "spiritual"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-ultimate-sacrifice-pt-03"
}