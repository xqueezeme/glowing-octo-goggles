{
    "title": "The Only Constant is Change Ch. 14",
    "pages": [
        "Author's Note: \n\nWelcome back readers. This chapter closes the book, so to speak. When I started writing the series that became \"The Only Constant is Change,\" my idea was that it would be a series of conversations between a dying man and his coming-of-age son. The stories the man would tell about his life would surprise his son, and along the way, the young man would be sent on adventures of his own in a kind of mentoring. I was having difficult writing it, because the memory interludes were kind of long. It didn't flow right, and so I decided to tell the man's story in real-time, to bring the timeline up to the start of that planned series. \n\nI'd still like to come back to my original concept at some point in the future, so if you've enjoyed the story of Jeremy's life, you might be on the lookout. That series is still in the planning stages, but it will probably fit some episodes from the gaps in \"Change\" into some of the conversation. Don't know when that will happen, though. My other series, \"Carson Evolved,\" has been going great and is really flowing out. The response has been so positive that I may need to extend that one past the planned 8 chapters. If you like sci-fi, come check it out. \n\nFinally, thank you for continuing to come back to read what I've written. When I posted my first chapter in July 2018, I really had no idea what to expect. Like a lot of readers, I'm sure, I simply wanted to see if I could do better than some of the stuff that I didn't like or emulate those that I did. The response along the way has been encouraging, and if you've written a comment to my chapters or taken the time to send me feedback along the way, you are part of why I've continued to post. So, again, thank you. \n\nAbout the story: This series covers the entirety of a man's life, with gaps thrown in along the way to keep it moving. I set out to see how my protagonist changes over his life as his experiences shape him. If you haven't read earlier chapters, you probably won't recognize some characters or references that are made, so I recommend you begin in chapter 1 and go from there. Most of the chapters are only 4-5 pages long on the screen, so they don't take forever to get through. \n\n-MB \n\nAs always, any sexual activity takes place between adults. \n\n***** \n\nThe last two years had been a time of great change in Jeremy's life. Professionally, things could not be going better. All of the time that Jeremy had put in ahead of assuming his position had borne lucrative fruit. His team had quickly developed a reputation for being able to quickly deduce and rectify network issues, often suggesting architecture improvements that greatly improved reliability and security. The workload had increased to the point that Jeremy was now making plans to promote one of his team members to lead and hire a replacement, just so that he could form a second team and build them up in the same way the first team had begun. It was incredibly rewarding. \n\nPersonally, Jeremy was experiencing something of a rebirth. He would always love and miss his first wife and their son, but memories of their life together were more wistful than painful these days. True to her word, Cat had taken her place at his side, and she had done everything in her power to help him move on as they built a new life together. Jeremy was incredibly grateful for the respectful way that Cat referred to his previous life. Curious, he'd asked her once how she felt about being his second wife and knowing that he'd had a family before her. Her answer was enlightening. \n\n\"Jeremy, you are a wonderful man, and I'm incredibly blessed to have you in my life. But I know that 'we' wouldn't be, if their lives hadn't been cut short. I can't be anything but envious that she had the first chance to share your life. But I don't begrudge her a thing, because I fell in love with the man you are now, not the man you were when Ava was alive. And I think that she probably had a lot to do with that. I said it before, but I'll be forever grateful to her for the man I'm going to spend the rest of my life with.\" \n\nSomehow, they'd managed to last a year before tying the knot. Jeremy felt like they owed it to each other to begin fresh, as if they hadn't gotten everything backwards and messed up in the beginning. So, they'd dated, and they'd talked, and eventually, he'd introduced her to his parents. Jeremy had been almost as nervous as Cat as they made the journey to his home. He needn't have been so concerned. His parents had welcomed Cat with open arms. Two conversations, one between him and his father, and the other between his mother and Cat, had erased all doubt that his parents were in complete support. One of the conversations, he knew the content of; the other remained a mystery, but he witnessed it from afar. \n\nJeremy was sharing a beer with his dad, lounging in a deck chair on the patio while his dad tended the grill. He was enjoying the peace of being at home, but his eyes strayed occasionally to where Cat was sitting in deep discussion with his mother in their gazebo. Unbeknownst to Jeremy, his father had turned to say something when he saw the look on Jeremy's face and followed his gaze to where the women were seated. He smiled to himself, pleased to see his son alive again. It had been touch-and-go for a while. \n\n\"She's something special, son,\" he quietly said. Jeremy managed to drag his eyes away from Cat. His father made his way over to sit next to him. Quietly, he said, \"Your mother and I were heartbroken along with you when Ava and Joshua died, but it hurt us in a different way, because for a long time it was like you had died, too. We weren't sure how to help, especially with you so far away.\" \n\nHe fell silent, and the two men sat there for some time, sipping beer and quietly contemplating the state of things. His father cleared his throat and said, \"I've never been good at all the emotional stuff. We men don't do a great job of showing our emotions, and I didn't know how to help you. Maybe you don't need my advice, but I wanted to tell you two things. First, it's okay to love again. Ava wouldn't want you to be alone. That girl loved you fiercely, and I think it would kill her to know how miserable you've been since she's been gone.\" \n\nJeremy had no way of knowing how much he'd needed to hear something along those lines from the man he admired more than any other in his life. A dam that held back a flood of emotions burst within him, and with it came a sense of peace that had eluded him. \"Thanks, Dad,\" he softly said. \n\nSamuel nodded, and then he said, \"The other thing you should know is that no one's going to hold it against you. Not your mom and I, and not Ava's family. You should mourn the dead, Jeremy, but you should also celebrate the living. And, from what I can tell, Cat is the perfect woman to help you remember that moving forward. So, if you feel like you're holding back because you need some blessing from us, know that you have it without reservation.\" \n\nA single tear leaked from Jeremy's eye. With a little grin, he said, \"You're not as bad at this emotional stuff as you think, Dad. Until this moment, I didn't realize what it was I was waiting for. I think that might have been it.\" \n\nHis father winked at him and took a sip of his beer, as they resumed their observation of the conversation the women were having. \n\nIn the gazebo, Cat nervously sat across from the woman she hoped would one day be her mother-in-law. \"You have a lovely home, Mrs. Halperin, and your gardens are just stunning.\" \n\n\"Please, call me Helen, or maybe you prefer 'Mom?'\" At the younger woman's surprised expression, she chuckled and said, \"Jeremy may like to think he keeps his feelings secret, but I'm his mother, and I can read him like a book. My son is infatuated with you my dear. So, my question is, do you love him?\" \n\nWith a demure look on her face, Cat nevertheless grinned and said, \"With all my heart. He's not like anyone I've ever met before. You must be very proud of him.\" \n\nHelen's heart was warmed by the shining love on display in Cat's face. It was reassuring to see that her son's affections were returned so strongly. \n\nThe ladies were sipping tea, and when Cat replaced her glass on the table, she asked, \"Can I ask you something?\" \n\n\"Of course, my dear,\" replied Helen. \n\n\"How do feel about...? I mean, I've been feeling...guilty. I know you must have loved Ava very much...\" Helen watched as the younger woman struggled to put her feelings into words, and she suddenly realized what Cat was trying to say. She reached over and took her hand. \n\n\"Sweetie, we loved Ava, that's true. When we first moved here, Jeremy didn't date for a while. He was kind of shy, if you can believe it.\" Cat laughed, but Helen assured her it was true. \"Somehow, he and Ava started dating, and in the beginning, it wasn't even supposed to be anything serious. They weren't exclusive, for crying out loud. But his father and I could see that there was something special growing between them; her family saw it too. We all worried because they were going to be apart when Jeremy left for the Navy while Ava was in school. But we supported them because it was obvious that they belonged together.\" \n\nShe slid closer to Cat and said, \"I've only just met you, but I sense the same connection between you and Jeremy. In a perfect world, his bond with Ava and Joshua would not have been severed. But that isn't the hand he's been dealt, and Ava's death almost destroyed him. Since he's been seeing you, though, I've sensed him beginning to return to life, and I'm so grateful for your love and support for my son. And I'm very much hoping that he is smart enough to invite you to share his life.\" \n\nAt her words, the tears that Cat had been holding back flowed freely. She didn't want anyone to think she was trying to replace his first love, least of all his parents. \n\n\"Thank you,\" she sobbed. \"That means so much. I'm hoping for the same thing, and I want you to know that I'll never hurt him. I love him more than I ever thought possible.\" \n\nThe women embraced, a new bond forming between them. That was the only thing that Jeremy knew of their conversation, as Cat refused to divulge the contents later. \n\nA week after that conversation, Jeremy was surprised to receive a letter from Bonnie Powell, Ava's mother. \n\nJeremy, \n\nI have longed to write this letter for so long, but wasn't sure how it would be received. After speaking with your mother this week, I felt that the time was right. \n\nFrom almost the day that I met you, I could see that you were a special young man. There was never a doubt or fear in my mind about trusting my only daughter to you. As the days went by, it was obvious to anyone with eyes to see that you two were destined to be together. And it was one of the happiest days of my life when I watched the two of you become man and wife. Holding my grandson, Joshua, for the first time was another. \n\nBut life can be fleeting, and tragedy struck. Edward and I were heartbroken when Ava and Joshua were killed, not just because of what we'd lost, but also for what you lost. You became our son when you wed Ava, and my heart aches for you even now. I know the depth of the love you carried for my daughter, and we watched helplessly as your grief at her loss strangled you. So many times I wanted to reach out to you. In my own grief, I'm ashamed to say that I didn't know if I had the strength to lend you. \n\nYour mother tells me that there's a new woman in your life. That news prompted this letter. I want you to know that we are genuinely happy for you. Never fear that we would resent you for moving on. Life is for the living, Jeremy, and you deserve to live as happy and free as you can be. Edward and I, and our other sons, will always consider you a part of our family. We wish you the very best in the future. If you don't think it would be too awkward, we would be honored if we could share in your life moving forward. You will always be welcome in our home, Jeremy, along with anyone you choose to share your life with. \n\nWith all the love I can give, \n\nMomma Powell \n\nEven more than the conversation with his father, that letter released Jeremy from the anchor chain that had held him back. And so, four months later, he'd taken Cat to be his wife. \n\n***** \n\nHis first thought was that it was dark and quiet under the mask. There was one tiny sliver of light at the edge of his vision on one side, but it barely made a dent in the blackness. His earmuffs prevented him from hearing what was happening around him. As he lay there, deaf and blind, Jeremy wondered again at what he was doing and why he was doing this. \n\nWhat he was doing was lying in the middle of his bed, buck naked except for the mask that Cat had used to playfully cover his eyes after fastening the last of the restraints to his ankles and wrists. Whatever possessed me to make that bet in the first place? he wondered. He got cocky, that's how that happened. \n\nHis life with Cat was different in many ways from that he'd shared with Ava. One area that was somewhat similar, though, was that they shared a healthy sex life. Cat had different tastes than Ava, but the same adventurous spirit. Frequently, Cat played the Sub to Jeremy's Dom. They had not invited anyone to play with them, and since Cat was not interested in women, it seemed unlikely that they would. They experimented between themselves often, however, trying different things that one of them had wondered about. He'd done some study on different rope bondage techniques to satisfy a curiosity of hers, and the restraints that he now wore were in frequent use; this was his first time wearing them, however. \n\nThe story of how he came to be in his current predicament was actually kind of stupid. With work going so well and their finances in a comfortable spot, they saw no reason to hold off on starting a family. She was coming up on 36-years old, and they didn't want to wait too long. \n\nWhen they began trying, Jeremy had put Cat in a condition very much like the one he was in now, though she'd been able to hear. He started by murmuring in her ear all the nasty things he wanted to do to her. Then he tortured her alternately with a feather, a dildo, a vibrator, and even a butt plug, in addition to his own body parts. She never knew what was coming next. When he edged her to exasperation, when she finally begged him to fuck her hard, he said these words into her ear: \"I'm going to fuck a baby into that sexy body of yours. I'm not letting you out until I'm sure you're pregnant.\" \n\nShe'd groaned and said, \"You'd better. After all this, if I'm not pregnant, I'm putting you in the restraints next time.\" \n\nHis fateful response: \"You're on.\" \n\nHe'd been sure that she was at peak fertility, and they had quite a bit of sex that week. Unfortunately for Jeremy, sometimes it just doesn't take. So when she'd come back around to him this earlier this week and told him how much she was looking forward to having him at her mercy, he'd groaned in frustration. His pride hadn't let him back out, though, despite his reservations about giving up control. \n\nAnd that brings us to the present. \n\n\"Are you sure about this, Cat?\" asked Monica. They were standing in the doorway to the bedroom that Jeremy and Cat shared. Despite Jeremy's earmuffs and blindfold, Monica still spoke in an urgent whisper. \"We can't go back from this. I don't want you to get jealous. What if Jeremy gets mad?\" \n\n\"Relax,\" her friend said. \"I've thought about this for a long time, and I trust you. You've wanted Jeremy for forever; he's wanted you for forever, too. This is just a little fun between friends. Trust me. He's not going to be mad, but if he is, it will be with me, not you.\" \n\nDespite her nerves, it had been a long, long time since Monica had been this excited. She was dripping wet, and it was taking a lot of willpower not to leap on Jeremy and slam herself down on him. \"If you're sure...\" Cat chuckled and pushed her towards the bed. \n\n\"Have fun,\" she whispered as she quietly closed the door. \n\nSuddenly unsure of herself, Monica merely stood at Jeremy's bedside for a few minutes, calming herself and relishing the moment. Before her lay the longtime object of her desires. A high school crush grown to adulthood, into a man who titillated her fantasies and dreams. She looked him over, almost wishing she could see his beautiful green eyes, but knowing she wouldn't have the courage to do what she was about to if he could see her now. \n\nGazing at his naked flesh, she once again admired his smooth, tanned skin. She'd never been with a white man before, and she was fascinated at the difference from the black skin she was used to. Jeremy's hard, muscular body had inspired more than one naughty fantasy, and it wasn't just his muscles that were hard. Her eyes tracked down from his well-muscled chest, across his flat stomach, until finally coming to rest on the manhood nestled between his thighs. She was surprised to see that, while he wasn't shaved, Jeremy had trimmed his pubes close to his groin, making his cock seem even bigger. Even flaccid, she thought he was probably at least as big as her husband had been, but she was looking forward to finding out for sure. \n\nJeremy's first indication that he was no longer alone was when he felt a slight pressure on the bed near his feet. He felt warm drips of what smelled like coconut massage oil on his legs. He often used the oil on Cat's body as a way to heighten her sensitivity. He'd massage her legs and feet, arms and hands, and eventually work over her entire torso, carefully avoiding her erogenous zones. Inevitably, she would beg him to stop teasing her; he supposed turnabout was fair play. \n\nHe felt her hands begin to slowly massage his calf and thigh muscles, long, sweeping strokes that firmly pressed against him and eased the tension they held. \"Mmmm,\" he groaned. \"That feels great, babe.\" Monica smiled to herself, knowing that he was picturing Cat's hands on him. The closer that her hands got to his groin, Jeremy began to respond. His cock began to lengthen and thicken in preparation for his lover's touch. As he expected, her hands massaged oh-so-close, but never quite made contact. \n\nHe smiled under his mask. \"You're teasing me, naughty girl.\" \n\nJust having her hands in contact with Jeremy's body was doing interesting things to her own. Monica's nipples were hard, and she was beginning to feel the tingles that let her know she was readying for penetration. She continued to massage his body, moving up to work on his chest and arms. She decided to tease him just a little when she reached his hands. There wasn't a lot of slack in the restraints, but there was enough room for her to lift his hand slightly. She kissed the back, then flipped it to palm-up. Starting at the wrist, she placed light kisses across his palm to his fingertips. Isolating just his index finger, she traced her lips with his fingertip, her tongue occasionally darting out to taste his skin. Then she slid the pad of his finger across her flattened tongue, taking the digit entirely into her mouth before closing her lips and slowly sliding it from her mouth. Reaching the end, she reversed the process, fellating his finger. Working it in and out, Monica began to get excited and her tongue got more involved, as she alternated fingers, and even licked the skin between his fingers. \n\nJeremy groaned in appreciation, and the sensation went straight to his crotch; suddenly he was hard as a rock. That thick extension caught Monica's eye, and she knew where she was headed next. Moving to kneel between his legs, she gently reached out to grasp his erection. Leaning in, she began to tease him by lightly running her lips and cheeks over his hard flesh. Now that he was fully erect, Monica could see that Jeremy was slightly longer than her ex-husband, but he was a whole lot thicker. It had been some time since she'd been intimate with a man, and she realized it was a good thing Jeremy was on his back; she'd need to control his entry, or it would hurt. ",
        "She could feel Jeremy's desire for more growing, and she began to run the tip of her tongue over his balls and up his shaft. As she reached the head, she squeezed his shaft and big drop of pre-cum emerged. She kissed the spot, licking the fluid into her mouth. The taste sent her into a bit of a frenzy, and she began alternately swirling her tongue around the head, plunging her mouth over the first half of his cock, and then sliding her pursed lips down the underside of his cock. Rapidly cycling between these actions, her efforts were driving Jeremy crazy. \n\n\"That's new, babe,\" he said with a smile. \"If you're not careful, you're going to make me cum pretty quick.\" \n\nMonica wanted to taste him badly, and his words only encouraged her to move faster. She began lightly pumping his cock from the base with one hand while massaging the back side of his balls, pressing in to reach the large muscle responsible for strong ejaculation that stretched across the floor of his pelvis. The combination of her ministrations caused Jeremy's hips to begin to pump along with her. After only a minute, he came harder than he had in a long time. Monica swallowed as quickly as she could, but she wasn't able to keep up with the flood he released. When his contractions stopped, she hungrily sucked up the leakage that had collected around his base. \n\nJeremy was surprised at how quickly he came. Wherever Cat had learned whatever she'd done, he needed to encourage her to keep researching. He lay there waiting for his heart rate and breathing to return to normal as he enjoyed the way she tenderly cleaned him. \"That was fantastic, honey,\" he said. \"Are you going to make me return the favor? You have me at your mercy, after all.\" \n\nDoing her best to avoid speaking, Monica said, \"Mmhmm,\" soft enough that her voice would be indistinguishable from Cat's through his earmuffs. She began kissing her way up his body, reveling in the delicious sensation of her nipples dragging across his skin. She reached his neck and jawline, and as she kissed his sensitive skin, she inhaled his masculine scent. Women have been proven to have better olfactory senses than men; like many women, she identified certain aromas with manliness. Jeremy's scent was a balance of sweet and spicy, a blend of citrus and mint, with hints of apple and wood. It reminded Monica of the warmth of a late spring or early summer day, and it was exactly the kind of thing she associated with manhood. It triggered images of a rugged man working in the outdoors, and she loved it. \n\nMonica continued teasing Jeremy by brushing his lips with hers, her tongue darting out to swipe his lips, but always backing away when he moved to engage her more fully. Sitting astride his chest, she leaned over and gathered a breast into her hand. She traced the outline of his mouth with her nipple, the stubble on his face rough against her tender skin. She watched as Jeremy, like a baby bird seeking a worm, chased her nipple, trying to draw it in. As his frustration grew, she finally took pity on him and allowed him to catch her. In his aroused state, Jeremy hungrily suckled at her teat, his tongue flickering across her hardened nipple, and his mouth opening wide to capture as much of her tit as he could. \n\nAs he suckled at the offered breast, it began to dawn on Jeremy that Cat's nipples felt different on his tongue tonight. Her breasts did not seem quite as full. But when her hands buried themselves in his hair, drawing his head into her bosom, and his efforts elicited a groan that vibrated against his lips, he chalked it up to the awkwardness of his position and not being able to see. \n\nIt wasn't until he felt her move to straddle his face that it occurred to Jeremy that this might not be Cat after all. As the woman's leg cleared his face, he got a whiff of vanilla. That alone wouldn't be definitive, but when the presented pussy settled against his lips, he knew for sure. Cat had fairly small outer lips, and a relatively small clit. Even when excited, it didn't protrude much. \n\nThis pussy, on the other hand, had meaty lips that were almost literally dripping in excitement. The clit, when he reached it, was prominent. Not especially large, but it was larger than Cat's for sure and more exposed. The idea that he was pleasuring a strange woman, presumably with his wife's blessing, was very exciting. Jeremy wasted no time, bending to his task with passion, noisily and hungrily sucking at the proffered flesh. Monica gasped when his tongue first grazed her clit. As he devoured her pussy, she rapidly built towards her first orgasm, and she couldn't stop her hips as she rode against his mouth and chin. \n\nShe braced one hand against the wall, the other buried in Jeremy's hair, holding him tightly against her cunt as she ground against him. In short order, her body went stiff and her pussy began to pour honey across his tongue. She gasped as she spasmed again and again while Jeremy pleasured her nonstop through her orgasm. Though he could barely hear, her cries of \"Oh Jeremy!\" and \"Yes!\" stroked his ego. He no longer cared who it was, only that he could continue to pleasure her. Knowing that he could do this, even while restrained, swelled his pride and...well, his pride. \n\nAs she came down from her first orgasm, the sensitivity of her nether region caused her to disengage. She slid her body down Jeremy's, only stopping when her face was even with his. She took his face in her hands, and for a moment, simply looked at the part that was exposed. Long ago, before she'd even known about sex, she'd wanted to kiss these lips. More than two years ago, seeing Jeremy again for the first time in years, she'd longed for him to take her in his arms again. And since then, she'd dreamed of being in his bed on more than one occasion. It was a dream that she thought had died when it became clear that his heart belonged to Cat. And yet, here she was. \n\nShe bent and tenderly kissed his lips, this time allowing the passion to build as his tongue began to explore her lips and mouth. Her arms slid around his head and she pulled herself tightly against him as she felt his hunger to consume her building. She could feel his thick cock lying stiffly between them. It wasn't long before she broke off the kiss, needing to feel him within her. \n\nShe reached down between her legs and lifted him slightly as she backed towards his feet. When the wide head of his cock was pressed against her wet opening, she paused. This moment was literally years in the making, and she was determined to enjoy every second. She rubbed the head against her lips a few times to lubricate his entry, and then, with a deep breath, she began to press against him, forcing that thick cock into her hungry pussy. It felt so good entering her, stretching her, that she longed to plunge down and sheath him fully within her. She restrained herself, a final tease after waiting so long. Inch by inch, she eased Jeremy's cock inside, until he was fully inserted. The lips of her pussy were stretched tightly around the thick base of his cock, and the head was pressed up against her cervix. She felt deliciously full, and she luxuriated in the sensation for a moment, enjoying the hot, hard length deep within her. Eventually, she began to make small motions, less up and down than back and forth, as her body moved parallel to Jeremy's. She started small, moving only a couple of inches at a time, each return punctuated by her grinding her clit against his trim pubes. As her excitement built, however, she began to take longer trips; Jeremy began to move his hips, timing his thrusts to meet hers. \n\nJeremy didn't have a wide range of motion, but he contributed what he could to the operation. He was doing enough, though, because before long, Monica was rapidly approaching another orgasm. Despite having come not long before, from his heavy breathing, she could tell that Jeremy was getting close, too. The recurring fantasy that Monica had had more than any other was to have Jeremy staring into her eyes as he pumped a baby into her womb. She knew that was unlikely to happen, but she wanted to experience as close to that as possible. \n\nRaising up slightly, she braced herself against his chest with both hands and began grinding her hips against his in a rocking motion. As she crept closer to her orgasm, she reached down with first one hand and then the other to pluck the earmuffs from his head and mask from his face. \n\nThe look of surprise on Jeremy's face was quickly replaced, first by a grin, and then a seriousness that belied his impending orgasm. Monica leaned forward to press her hands against his chest again and, staring into his eyes, she began to speak as she rode him into ecstasy. \n\n\"I've dreamed of this for so long, Jeremy. I want to cum as you fill my pussy with your cream. I want to dream that you put a baby in me.\" \n\nIn response, Jeremy began bucking even harder, causing Monica to gasp anew. The image she painted was so hot. As he thrust up, Monica was panting out her progress. \"I'm so close, baby. Please! I need it. Fill me up. Give me your baby! Right there, right there...Yeeessss!\" she screamed as her pussy constricted around him and began to convulse. \n\nJeremy was right there with her and arched his back to raise his hips as much as possible, burying himself deeply before unloading jet after jet of his cream into her pussy. \n\nThe lovers collapsed in exhaustion as they recovered from their respective orgasms. Jeremy was still buried within her, even as he softened. It wouldn't be long before he slipped from her. Monica was not moving, savoring a warmth in her body that had nothing to do with his cock remaining inside. Her dreams had fallen far short of reality, and as she lay with her head on his shoulder, she hoped that he'd enjoyed this as much as she had. Part of her was afraid to look at him, given the deception. Once he finally fell from her body, she slid down enough to rest her head on her arms across his chest, looking at him. \n\n\"Hey,\" he softly said with a smile. \n\n\"Hey,\" she replied, quietly. \n\n\"So...that happened,\" he observed. \n\n\"Yes, yes it did,\" she agreed. Concerned, she asked, \"Are you okay? Are we okay? Are you mad?\" \n\n\"I'm fine,\" he said with a smile. \"It's a big surprise, of course, but are you really asking me if I'm mad about a beautiful woman spending time in my bed? Clearly a rhetorical question. I'm assuming that Cat set this up?\" \n\nMonica smiled and nodded. \"She wanted to do something that she knew you wanted, like you did for her the very first time you met. She thought this might be the thing. Was she right?\" \n\n\"If you'll let me out of these restraints, I'll tell you,\" he replied. She chuckled and moved to unfasten the various buckles that held him in place. As soon as the last restraint was open, he surprised her by grabbing her around the waist and throwing her to the bed before quickly pouncing and pinning her to the mattress. The surprise caused her to squeal and she giggled when she realized that he'd essentially reversed their roles. \n\nJeremy smiled as he shook himself out of his reverie. That night with Monica had been something special. The plan that week had been for him to impregnate Cat. Jeremy and his wife still made plenty of time for themselves, and their first daughter, Gabriela, was born later that year. Monica's time with Jeremy, however, fanned the flames of her fantasy of carrying his baby into a burning desire. She approached them shortly after Cat announced her pregnancy to see how they'd feel about Jeremy fathering a child with her. \n\nJeremy and Cat discussed it at length, and Cat assured him that she was fine with it, supportive even. Eventually, though, Jeremy had been the one to decide against it. As much as he cared for Monica and wanted to help her out, he just couldn't bring himself to give her a baby. He didn't relish the idea of knowing his child was out there without its father around. Fortunately, about a year after Gabby was born, Monica married her second husband, Desmond; they had fraternal twins, a boy and a girl, delivered only six weeks after Gabby's second birthday. \n\nCat delivered Katelyn the next year, three years after Gabby, and Daniel followed the year after. \n\nDaniel was the baby of the family, now a few months past his 18<sup>th</sup> birthday. Jeremy couldn't be prouder of the young man he'd become. His love for his son, his earnest desire to guide and mentor him as much as possible in the time he had remaining was what had prompted his trips down memory lane these past few weeks. \n\nAt 59 years of age, Jeremy Halperin was dying. \n\nCat knew, but Jeremy still needed to break the news to his children. Those were not conversations he was looking forward to. His affinity for his son, the way he saw himself in the young man, had prompted him to speak to Daniel first. \n\nHe looked over at the young man and said, \"Danny, let's go sit on the porch. There's something I need to speak with you about.\" \n\nWith a smile to himself, Daniel nodded and headed outside. His dad was the only one that ever called him Danny; he wouldn't allow it for anyone else. Daniel enjoyed the time he got to spend with his dad. In his 18 years on earth, he'd come to appreciate the connection they'd forged simply sitting together, quietly rocking and sipping cold iced tea or lemonade as they watched the sun hide behind the distant hilltops on a warm summer evening. He'd never really understood his buddies' complaints about their fathers or their rules. His relationship with his father had never been contentious, and he didn't have a problem following the rules of the house. His friends didn't believe him when he said that his dad was one of his best friends. \n\nDaniel had always attributed his comfort level with the quiet confidence that was so evident in his father's demeanor. Unlike Jason's dad, who spent most nights drinking himself into a stupor and rarely missed an opportunity to tell his son what a disappointment he was, or Nate's dad, who had little time for family activities between his long hours at the bank and even longer hours with his mistress du jour, his father was a man who loved his wife, doted on Daniel's two older sisters, and set the standard by which other men were measured. At least, that's how Daniel had always seen him. \n\nBirthdays and holidays were times of celebration in the Halperin household. But where some men would be happy to leave social activities to their wives, Jeremy had always taken an active role in planning events, choosing the right gifts at the right moments in his children's lives, and making sure that when he was home, he was present with his family and not distracted by work or sports. Daniel's father had insisted that every evening, even if it was for drive-thru take out or frozen pizza, the members of the Halperin family would reconnect and share the happenings in their lives over a meal. Daniel had seen how different it could be during sleepovers at friends' houses, marked by dinners eaten in front of the TV or the strained conversations that took place. His family life just wasn't like that. He loved his parents, loved his sisters\u2014he took pride, though, in upholding the long tradition of younger brothers teasing and tormenting older sisters\u2014and he felt that love returned. \n\nA few years ago, a teacher had assigned Daniel and his classmates to interview a parent and write a short biography to be read aloud to the class. It seemed only natural that he'd interview the man he'd looked up to, even aspired to become. But over the course of their interview, he'd become fascinated by the story of his father's life. \n\nDaniel wasn't surprised to find that like himself, his father had shown an uncommon aptitude for numbers and problem-solving. They both merely tolerated boring classes like English as they progressed through school, but found a world of intrigue in mathematics and hard sciences like chemistry and physics. Daniel never tired of hearing the stories from his father's younger days, mainly because it all sounded like so much fun. Even hearing about how his parents had come together, bringing new life to the company she'd founded as it transitioned to new ownership, was fascinating. Daniel's sisters had never seemed to have the time or patience to listen, but he ate it all up. \n\nDaniel hoped that he could live up to his father's legacy. Sure, he was a successful businessman, but that wasn't the kind of legacy he thought about. Instead, he saw the looks his parents shared, how they were never shy about holding hands or touching shoulders just because. Even as young as he was, Daniel could see that while they'd always seek out Mom's advice about dating and other stuff, it was Dad's opinion that determined the outcome of any potential relationship with his sisters. Instinctively, they measured boyfriends against the standard they saw at home; so far, no one had met the standard. \n\nOne event had engraved in Daniel's mind the image of the kind of man he wanted to be. A couple of years ago, the family had hosted a private dance to celebrate Katelyn's high school graduation. Daniel had come across his father standing to the side, quietly sipping his favorite Scotch and watching his wife and daughters as they laughed and danced with their friends. Maybe more than any other conversation he'd had with his father to that point, what followed gave Daniel a sense of purpose moving forward. \n\n\"Do you know what's important in life, Danny?\" He didn't even look at him; somehow, he'd just sensed his presence. He gestured with his drink at the crowd and said, \"This right here. I've made more money than I would ever have dreamed possible growing up, but I'd throw it all away in a second if keeping it meant I'd lose nights like this. Look over there at Katelyn. I remember bringing her home from the hospital. She was brand new and I saw her mother in her eyes. Even though we already had Gabby, I was scared all over again at the responsibility we had. I was holding her hand just before she took her first tentative steps on her own. But I blinked and she was in kindergarten and dance classes. Then I looked away for just a second and your mom was taking her shopping for her first bra. And now I'm watching with wonder at the young lady she's become and feeling such pride in the part I had to play in it.\" Daniel was watching his sister and listening to his Dad, and suddenly he was caught up in being proud of her too. When he saw his Dad wipe away a tear, he was moved. \n\nJeremy turned to his son and placed a hand on his shoulder. \"You're still too young to really get what I'm saying right now. But you're my only son and if I ever teach you any lesson at all, I want it to be this one. These things,\" he gestured around them, \"are not the true measure of a man. A man's true worth can only be found in the way he nurtures and protects his loved ones. As men, we are called to duty so often\u2014duty to our country, duty to our community, duty to our employers\u2014but none of them is a higher calling than our duty to family. Always remember that, son.\" With that, he ruffled Daniel's hair, kissed his forehead, and made his way over to where his wife was standing. \n\nWith his father's words still tumbling in his mind, Daniel watched as his father took his mother's hand, kissed her knuckles and pulled her close to kiss her cheek, before suddenly spinning her towards the dance floor. She laughed and beamed as they came back together, and Daniel saw the look of adoration on his mother's face. That sequence of events would be imprinted in his mind's eye for years to come. That was the legacy to live up to. \n\nThus, when his father said he needed to talk to him, he approached the conversation with more excitement than trepidation. Settling into the rocking chair next to his father, Daniel took a sip of his lemonade and waited. When he noted that his dad was struggling with getting started, he became concerned. Quietly, he said, \"Whatever it is, Dad, you can tell me.\" ",
        "A few minutes passed before his father softly spoke. \"I guess there's really no easy way to say this. Danny, I'm dying.\" \n\nWith those words, Daniel's world stopped. How could this man, this mentor, this friend, be dying? There was still so much to learn, so many things they needed to do together. There had to be some mistake. After a few moments of stunned silence, with tears in his eyes, Daniel quietly asked, \"How long do we have?\" Not \"How long do you have?\" Daniel intended to share as much as possible whatever time remained of his father's life. \n\nJeremy couldn't help but feel a sense of pride at his son's reaction. He was upset, of course, but he moved quickly onto to planning for the future. His son had always been the most serious of his children, a trait that Jeremy was going to be counting on moving forward. \"Well, it started a few weeks ago. I'd been feeling kind of run-down for a while, but I chalked it up to working too many hours. I'm not getting any younger, you know.\" Jeremy couldn't help himself, but he could see that Daniel didn't appreciate the joke. \"But I was also having headaches. When I woke up one morning with blurred vision, your mother finally had had enough. She said I was going to see a doctor one way or another, and that if I didn't make the appointment myself, she'd cause me quote, 'great bodily harm,' end quote, and have the ambulance drive me.\" He paused and quietly said, \"I think she feels guilty about threatening me, but she couldn't have known...\" \n\nShaking himself, he sipped his lemonade and continued. \"Once I met with the doctor, he wanted to run a few blood tests. When the results came back a few days later, he asked us to come in and see him. That's when I knew things weren't looking good. When we got there, he told us that his preliminary diagnosis was cancer, but he wanted me to see a specialist for confirmation. That quick little getaway that your mother and I took last week? That's where we were. When the oncologist heard about the headaches and blurred vision, he ordered me to undergo an MRI.\" Jeremy took a deep breath before continuing, \"They found a golf ball sized tumor in my brain. We did a few more tests to locate it, hoping that it might be operable. But it's not. If they went in, they'd have to take so much surrounding tissue to make sure they got it all that they're convinced I either wouldn't survive the operation at all, or I'd come out too damaged to live without assistance. I'm starting chemo and radiation therapy this week, but the prognosis isn't good. The doctors believe with the treatments I'll last maybe 6 months, certainly less than a year.\" With that he broke down and Daniel saw his father lose himself for the first time in his life. It tore him up inside, but all he could do was go and wrap his arms around his dad and tell him how much he loved him. \n\nThey sat like that for a while before his father seemed to gather himself a little bit. He put his hand on Daniel's shoulder and looked him in the eye. \"I need you to listen to me, Danny. We haven't told the girls yet, but I wanted to tell you now since you're still here every day; you would have known something was up before too long anyway. You're going to have to be strong until we can speak with your sisters. Until that happens, I can't have you dwelling on this when they're around. You haven't realized it, but your sisters follow your lead. It's not in your nature to take advantage of it, but it's been that way for years. You're the youngest, but you're also the leader. They're going to need your strength by the time this is over. Can you do that for me son?\" \n\nHis emotions were too raw to vocalize his assent, so Daniel just nodded. \n\n\"With the time that I have left, Danny, I want to lay my life bare for you. I see so much of myself in you, things you aren't even aware of. But I can't go to my grave knowing that I could've smoothed your path somehow and didn't. I needed the help of a lot of people over the years, or I wouldn't have walked the path of my life. And I would have missed so many things that made my life special if they hadn't been there for me. My hope is that I can put you on a lifelong journey filled with love and adventure, if you're willing to take some risks along the way. You're almost grown now, but I'm going to ask you to grow up even faster. Your role in this family is going to change as my time passes. I'm going to push your boundaries a little bit, and I'm going to have to rely on the trust we've built to help you overcome some doubts.\" \n\n\"I'd like to start meeting with you a couple of times a week to talk about some of the pivotal events in my life, how they happened, and what I learned from them. Some of it you know a little about, but for reasons that will become clear, I've shielded you from a lot of the details. In some cases, the story is not just mine or there are things that even I don't know about. When that happens, I'm going to invite some others into our conversations; I might even occasionally send you on a little bit of a field trip. I've always intended to do these things, but I thought we had more time. Unfortunately, it doesn't look like that's the case.\" \n\nStill reeling from the shock of learning that his father was terminally ill, Daniel wasn't completely in synch with his father's words. Nevertheless, he'd looked up to his father for so long, hoping to one day be like him, it didn't matter what words were said. He wanted to learn as much as he could before it was too late; so much the better if his dad wanted to tell him about his life. Daniel trusted him implicitly and was prepared to devote himself to whatever course his father suggested. \n\nThe two men relaxed in each other's presence as the sun slowly faded from view and day turned to night. \n\n***** \n\nThe first \"porch chat,\" as they came to refer to their father-son discussions, took place a few days later. The first thing Jeremy said was this: \"Danny, some of the things I'm going to talk about when we meet are deeply personal. There are going to be things that make you uncomfortable, might even make you change your opinions about a lot of things and people. And some things you'll learn will be secrets to be protected. But you're a young man now, and I'm willing to treat you as one. All I ask is that you trust me.\" \n\nDaniel was curious about his father's life, and even more so with the thought that there were deep secrets about to be revealed. He was proud that his father trusted him enough and loved him enough to share this part of himself, and he'd already promised himself that he would follow through on whatever guidance he got. So that's what he told his dad. \n\nOver the next few months, Jeremy poured out the story of his life. Eventually, Daniel understood why his father had been so cautious in his preparation for these talks. Apparently, these weren't going to be monologues on the importance of education and finding the right job, necessarily. He talked about learning what a deep and abiding love between two people looks like from watching how his parents interacted with one another. He learned about the difference between 'sex,' 'love,' and 'passion.' His father gave him some pointers on what to look for in a lover, in a partner, and the difference between the two. They also talked about demonstrating love, rather than telling love. \n\nDaniel wasn't put off by the sexual nature of the discussion; he knew exactly where his father was coming from. By the time he'd reached high school, Daniel had been fascinated with girls. Living in a house with two sisters and his mother, he'd had to endure teasing for years from his friends about how attractive they were. And as close as he and Katelyn were in age, growing up he'd inevitably been roped into all the games she and her friends played on sleepovers; what's more entertaining than teasing a boy who's obviously flustered by the attention, after all? He'd watched as his sisters and all their friends changed from girls into women. He'd \"accidentally\" walked in on each of his sisters when he knew they'd be partially unclothed, hoping to catch a glimpse of something interesting. \n\nOne of the more useful things they talked about what something that his father almost seemed reluctant to mention. He said, \"This is going to sound egotistical, but it can't be helped. There's something about the men of our family\u2014I call it the 'Halperin Magnetism'\u2014that draws women to us. I know, I know, it sounds completely fanciful and made up. But your Aunt Amanda was the one who first described it to me that way, so I don't feel too bad about it.\" \n\nDaniel's mind was immediately sidetracked as images of 'Aunt Amanda' began to appear. Amanda Sutton was one of Cat's oldest friends. She was also a frequent character in Daniel's fantasies. A statuesque blonde with an hourglass figure and large bosom, she and her husband had been unable to conceive children of their own. The result was that they'd unofficially adopted the Halperin children, showering them with gifts on birthdays and holidays. \n\nShe was also quite proud of her body and the work she put in to maintain it. In fact, before his sisters and their friends began to mature, it was Aunt Amanda who'd turned his bedroom into a torture chamber. The problem was, Daniel's room was at the back of the house, looking down from the second story on the family's swimming pool. As soon as temperatures were warm enough for swimming in the spring, and lasting until the bitter end of summer, the Halperin house was the gathering place for the neighborhood teens. But before that, it was Aunt Amanda laying out in miniscule bikinis. \n\nBikinis and bare flesh did cruel things to a horny boy's anatomy. And so, it was not unusual for Daniel to find himself hanging out in his room and gawking at the swimmers and sunbathers each day. It was masochistic, but he couldn't stop himself from watching either. \n\nDaniel snapped out of his reverie as his father continued. \"The thing is, even when I don't feel in control of a situation, there's something in me that makes me say things a certain way or change course at the last second. I've never been on the receiving end of it of course, but my understanding is that, at least for women, it's like I'm speaking passphrases or turning a key to unlock something within them. The point is, that intuition is part of me. And it's a part of you. I may not have recognized it in myself, but I can see it in action.\" \n\n\"I'm not sure I understand, Dad. What does that even mean?\" \n\nJeremy scratched his chin in thought. \"Let me give you an example. Maybe that will make it clearer. \"You know Mrs. Santini down the street, right?\" \n\n\"Of course. She's the one whose husband had the heart attack and died the year before last.\" \n\n\"And do you remember how you responded after he passed away? Not long after the funeral, you saw her trying to mow her lawn herself. A lot of guys your age would have ignored a struggling old woman trying to start a lawn mower, but not you. You went up there in 95 degree heat and just took over. You came back here and got the weed eater and took care of the edging as well. When she tried to pay you, what did you say?\" \n\n\"I told her that I was very sorry to hear about her husband's death, and mowing the lawn was the least I could do. I also told her that she had better things to do with her money, so she should keep it.\" \n\n\"And how often since then have you mowed her lawn?\" \n\nDaniel shifted a little in his seat, because he was starting to see where this was headed. \"Well, I mow the lawn weekly, and I try to do the edging every couple of weeks at least.\" \n\nJeremy was grinning, because he could see that Daniel was getting the point. \"Have you ever taken a dime from Mrs. Santini for all that work? Or for clearing her driveway in the winter?\" \n\n\"You know I haven't.\" \n\nJeremy changed gears. \"Did you know that Isabella Montez is Mrs. Santini's granddaughter?\" \n\nDaniel was shocked. \"Izzy is her granddaughter? I had no idea. Why didn't she mention it?\" \n\n\"Well, you guys weren't together that long; it probably never came up. But I seem to recall that you were a little surprised when she showed interest in you, since you didn't really know each other that well. I wasn't surprised, though. She was spending a lot of time at her grandmother's house that first summer after her grandfather passed. She saw what you were doing, but probably wouldn't have pursued you except that her grandmother was putting heavy pressure on her to go out with that 'nice boy from down the street.' Mrs. Santini even brought it up to your mother and I one night in passing, how proud we must be of you and how much she admired you, and how she had this granddaughter that was just perfect for you. It was a little sickening how she went on and on, actually.\" Jeremy winked at Daniel so that he knew he was kidding. \n\n\"I really had no idea. I kind of feel bad that things didn't work out better between me and Izzy; Mrs. Santini must have been a little disappointed. But we didn't really share anything in common.\" \n\n\"That's exactly what I'm talking about, son. You did something out of your nature that others might not attempt, you got an unexpected relationship, and, in Mrs. Santini's case, an admirer for life. And now that I'm telling you about Izzy, you feel bad that things didn't work out. You care for others almost effortlessly. You don't see it as anything special, but I'm telling you, I've learned that it's actually pretty unusual for someone to behave like you do, especially one so young. That makes me so proud to be your dad. But that's the skill set that we're going to maximize moving forward.\" \n\n***** \n\nIn the years that followed, Daniel would look back on the talks that he had with his father in the months before his death as instrumental in shaping the course of his life. True to his word, Jeremy challenged his assumptions. He shared his own fears and failures from along the path of his life. The way his father spoke about his first wife and their son brought tears to Daniel's eyes. He could feel the depth of his father's pain, even so many years after their deaths. \n\nHis father also pushed him to take some risks. One time, he gave Daniel the assignment to approach the first girl at a mall that he thought was completely out of his league, just to see what happened. To his surprise, he'd walked away with a phone number and a date. That was one of the mildest assignments he got. \n\nOne of the more challenging ones was when Jeremy explained to his son that there were different skills necessary to seduce different women, and some of that depended on where the woman was in her life, but also how she saw the man in pursuit. That assignment was how he learned that a lonely older woman could be flattered into bed by a confident, handsome, younger man. His affair with a 47-year old divorcee named Heather Tompkins was short, but torrid. She wasn't his first sexual experience overall, but she was the first woman who was deep enough to take him completely, a fact that she exploited as often as she could for a couple of months. Eventually, when the novelty of their physicality wore off, they mutually agreed that they were at different stages of their lives and called a halt to things. He would always remember her fondly, though. \n\nThe confidence that Daniel gained from his successes allowed him to bring his own story back to his father. It tickled his dad to no end when Daniel described how he'd managed to seduce and sleep with a pair of sisters that were each friends of his own sisters. Apparently, they each knew about the other. But, like his father before him, they appreciated Daniel's openness in saying he was not looking for exclusivity, and so they agreed to share him whenever they were back on break from school. The way his father has shaken his head and laughed as Daniel relayed the story would remain with him for years to come. His father had said, \"I'll never understand how that works, but it's either something exclusive to us, or there are just more girls out there that want casual relationships than most people know.\" \n\nThere were other assignments, things that had nothing to do with his love life. And they were every bit as instrumental, if not more, in shaping his character and life than the other ones were. And through it all, Daniel appreciated the chance to spend so much time with his father. \n\nJeremy didn't neglect his daughters. Despite the distance between home and school, they came home as often as possible. In between visits, he was able to video chat with them. He left their sexual education up to their mother. Nevertheless, he gave them other assignments, much like those he'd given to his son, but with a slightly different purpose. \n\nOne of his biggest regrets, something that plagued his sleep, was that he wouldn't be around to walk his daughters down the aisle at their weddings. Neither of them was involved in a serious relationship, and he knew he wouldn't have a chance to meet their future husbands or task them with the protection of his daughters' hearts. Thus, he did his best to help them to understand their own value, the treasures that he considered them to be, hoping to impress on them the importance of guarding their hearts until the right moment came. \n\n***** \n\nJeremy looked around the room at those gathered there. He knew very well that the end was near. He was in hospice after all, if he was remembering things right. That was something he doubted more and more each time he opened his eyes. Yesterday, for example, he was playing pool against his best friend, A.J., for three hours before remembering that neither he nor his friend were na\u00efve 18-year old boys anymore. These days, A.J. didn't get around much. He'd lost a leg in a severe car accident that left the rest of his body broken and hobbled as well. He could still walk, but it was more of a shuffling, stumbling gait. \n\nLying there, he was surprised at the number of people who had shown up to say goodbye. I wouldn't have thought the room could hold so many people, he thought. There were people from all the many phases of his life. There was little Teresa Marquez, his little 'Jalapeno.' He was amazed at how well she'd aged until he recalled that she was now a 51-year old mother of three who worked as a social worker in her hometown in Texas. \n\nHe closed his eyes for a second to clear the phantoms, but when he opened them again, Serena Chase was sitting there holding his hand. Damn, she stills takes my breath away, he thought. \n\n\"Hey, Jeremy,\" she said, softly. \n\n\"Hi Serena. How's Paris these days?\" \n\nShe looked at him sadly. \"I wouldn't know. Don't you remember? The nightclub bombing?\" \n\n\"Oh. Yeah. Sorry about that. Things are kind of muddled up for me these days,\" he said, apologetically. \n\nSerena smiled. \"It's okay, Jeremy. Everything's going to be okay. I just wanted to stop by and say that I never stopped loving you. My priorities weren't always where they probably should have been, but you were the first man I ever loved.\" \n\n\"That's very kind of you to say,\" said Jeremy. \"I loved you too, but mostly I was just in awe that an angel like you ever saw anything in a guy like me.\" \n\nShe placed her hand on his cheek and smiled down at him sadly. \"You're still just as sweet as ever. And that's why I loved you. I have to go now, but I'll see you soon. Okay?\" With that, she leaned down and gently kissed his cheek. Jeremy blinked and she was no longer there. \n\n\"Are you doing okay? Do you need anything?\" asked Cat. \"You were kind of mumbling there.\" \n\nHe smiled at her in gratitude. \"No. I'm fine. Just having a hard time keeping it straight what's real and what's not. You are real, aren't you?\" \n\nCat laughed and teased him. \"I'm as real as it gets, baby.\" ",
        "\"How did Gabby's date with that new guy go? What's his name, Mark?\" \n\n\"She said he was nice enough, but there wasn't a spark there. She's not inclined to go out with him again.\" \n\n\"Oh. That's too bad,\" he said. And he meant it. Gabby had seemed excited to receive the invitation to dinner. \n\nThen he said, \"While I'm still lucid, I just want you to know how much I love you. You brought a light into my life when I was surrounded by darkness. After Ava and Joshua, I didn't know how I would move on. But you changed all that, and I'm so grateful to have had you in my life.\" As he finished, Jeremy closed his eyes and fell asleep again. \n\nShe couldn't help the tears that came to her eyes. Every day now was a repeat of the one before. In a moment of clarity, Jeremy would give her the same message he'd just delivered. He didn't seem to recall that he'd said the same thing the previous day. It was beautiful that he wanted to tell her that he loved her so much, but it was heart-wrenching as well, seeing how much of her beloved husband was no longer there. \n\nWhen Jeremy opened his eyes again, he was surprised to see Ava and Joshua at his bedside. He couldn't help but smile. \"Ava! What a nice surprise! I thought you and Joshua were going to see your brother today.\" \n\nAva smiled at him and reminded him that she had gone to see her brother, more than 25 years earlier. Joshua climbed up onto the bed with him and threw his arms around Jeremy's neck. \"I missed you, Daddy!\" \n\nJeremy hugged him back tightly, saying, \"I missed you too, big guy. I missed both of you sooo much.\" \n\nTaking Jeremy's hand, Ava said, \"I've missed you, my love. But it's time to come home. Are you ready?\" \n\nA tear leaked from Jeremy's eye. He had so much worry and regret about the family he was leaving behind. At the same time, he was so very tired of hurting and being weak. He asked, \"Will they be okay?\" \n\nSoftly, Ava said, \"You've raised your children well, and they're as prepared as they can be. They're going to be fine. You'll see.\" \n\nAt his bedside, Cat watched as Jeremy raised his hand slowly, seeming to reach out for something. She took his hand and held it, but his eyes were on something she couldn't see. In a barely audible voice, Jeremy said, \"Okay Ava, I'm ready.\" A moment later, she felt the life leave his body as he relaxed into death. \n\nAs the monitors began to alarm, she reached over and smoothed his hair one last time. Then she kissed his hand and said, \"Go to her, my love. Tell Ava how thankful I am for the love she gave you. And hug your little boy's neck. But don't forget about me. I'll join you in a while, and I'll fill you in on everything that's happened since you've been gone. I love you, Jeremy, and I'm going to miss you every day until we meet again.\" Then she gently laid his hand at his side as the tears streamed down her face. \n\n***** \n\nAuthor's Notes: \n\nSo there it is. This is the end of the first story I've ever written, and it's been a strange and wonderful journey. Nearly 190,000 words, all together, it's quite a bit longer than most modern novels. I'm sure there's fat that an editor would want to trim. And there are better ways to tell the story, I'm quite certain. \n\nThe tale I set out to tell is not exactly the one I ended up writing, and like many authors I'm sure, there are places I would make different choices, smooth some rough edges, and otherwise polish the product. But, at the end of the day, I'm happy with what I've produced and proud to have carried it through to the end. \n\nHopefully, you've enjoyed watching as Jeremy's life unfolded. His story is not a fairy tale, and I know that's probably not what most of the readers here are looking for. But I set out to tell a story about a boy becoming a man, and how his experiences would shape him; I think that happened. I hope you'll agree. \n\nFinally, I wanted to say thank you to the readers who've stuck it out through this journey with me. Many of you have favorited this story, some have commented, and a few have even sent me messages of encouragement. To all of you, I wish to express my sincere gratitude. I would not describe myself as an artist, so I've never really understood the importance of the audience as a source of inspiration and motivation; I get it now. \n\n-MB"
    ],
    "authorname": "Minstrel_Blue",
    "tags": [
        "novel",
        "novella"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-only-constant-is-change-ch-14"
}