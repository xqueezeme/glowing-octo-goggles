{
    "title": "Lost Empire Ch. 04",
    "pages": [
        "\"0999 bring 0101 on board after preliminary scans of her life capsule, I want to make sure she is unaffected,\" Derrick said.\n\n\"Of course Primary starting scans now, the capsule is intact, though I am detecting damage to the electrochemical cells, it appears that unit 0101 is dangerously close to cascade failure. I suggest immediate transport to the hanger to effect repair and re-growth,\" 0999 stated. \n\n\"Proceed 0999, double check all scans I want nothing to destroy what little of the fleet there is now,\" ordered Derrick. \n\n\"Compliance Primary, all precautions are being taken to protect Primary Derrick, the fleet and unit 0101.\" 0999 replied as Derrick watched all the readings that were coming in, he might not know what all the systems were but that wasn't about to stop him from learning everything that he could. In just a week he'd already learned just what more than half the readings that came in were, along with all the alarms, wasn't always sure exactly what they were but he was learning. \n\nDerrick was hoping that E wasn't damaged as bad as he thought she was, she'd sounded weak, plus what was left of her was completely trashed.\n\n\"0999 Query?\" Derrick asked looking at the readings trying to determine the amount of damage. \n\n\"Yes Primary,\" 0999 answered. \n\n\"Can 0101 be re-grown the way she is now or will parts have to be removed before re-gen is possible?\" Derrick asked. \n\n\"I have projected, that well over seventy five percent of her exterior will have to be removed, before any possible re-gen is possible,\" 0999 stated.\n\n\"I was afraid of that, time to remove said sections and start re-gen?\" Derrick asked.\n\n\"I postulate three days, five hours, fifteen minutes and thirty seconds once the procedure is started, then re-gen will be possible.\" 0999 replied. \n\n\"Thank you 0999, please begin as soon as possible, we need as many in the fleet as possible,\" Derrick was hoping he didn't sound desperate, god he'd missed E. \n\nOnce again Derrick went back to the file room to again try and learn as much as he could. At the moment, true, he probably knew more about the systems than anyone else, but as his grandfather had always said knowledge was the key to power. He was just starting to grasp the basic idea of the trans-warp drive when a chime drug him away from his reading. \n\n\"Primary,\" said 0999, \"It is advisable that you partake of some nourishment, readings indicate you are growing weak.\" \n\nLooking up Derrick was a little confused, \"what do you mean weak?\" Derrick asked. \n\n\"Well, Primary,\" 0999 started again, \"you have been in this room for almost two days, you have ignored almost all hails, your strength is reduced by more than sixty percent.\" It is the duty of all EIG units to protect their primary, and protect the Prime Primary above all else.\"\n\n\"Thank you 0999, I hadn't realized that I had been here that long; I was just starting to grasp the Trans-slip drive. I am hoping to learn as much as I can.\" Derrick told 0999. \n\n\"Primary,\" 0999 said a little excited, \"when the trans-slip drive was installed there weren't many humans that understood it. The fact that you are grasping the basics of it puts you in an elite class.\"\n\nDerrick was dumbfounded, it only took a little heavy reading (five thousand pages on screen) to start to grasp the basics. Hell were all the non-imperials stupid back then? He realized it was one thousand years ago and not that many people were into warp or trans-warp theory but come on! It wasn't that hard all you had to do was read! \"What is the status of 0101?\" Derrick asked.\n\n\"At present almost all debris has been cleared, power has been connected to her life pod 'til such time as she can effect here own power generation.\" 0999 replied. \n\nDerrick was about to answer when E's thoughts broke into his own. *\"Primary, please do not put your life at risk, I am progressing well.\"* \n\n*\"E! you shouldn't be expending the energy to talk to me! Be still 'til I am at your controls again,\"* Derrick told her. \n\n*\"Yes Primary, I will endeavor to wait 'til we can again be together.\"* E replied weakly.\n\n\"Primary, 0101 has broken protocols, should I punish her by delaying her regeneration?\" 0999 asked. \n\n\"No, proceed as you have I need every ship that we can find especially her.\" Derrick ordered. \n\nDerrick was back in the library again this time trying to not get lost in all the information. The next day 0999 again interrupted his studies, \"Primary, 0101 has been cleared, I am now commencing her re-gen, it should only take a full five days, unlike we other three she is still conscious thereby making the process able to start faster plus we can proceed at a faster rate.\" \n\n\"Good, 0999, I can't seem to find information about your power source.\" Derrick asked. \n\n\"I am sorry Primary but even as Prime Primary I am not allowed to reveal that unless you are of a higher rank. Though you are at a very high rank at present you are still not high enough.\" 0999 stated unemotionally, causing Derrick to blink why in the hell had 0999 almost sounded like his scavenger computer? Ok something wasn't right. \n\n\"0999 run a diagnostic, you seem to be experiencing some type of glitch,\" Derrick ordered. \n\n\"Compliance Primary,\" 0999 said in its normal voice, sounding slightly hurt.\n\nDerrick sat to think about it, he'd seen mentions of a secret power source but nothing even hinting to what it might be. The more Derrick thought about it the more he felt that something was up, how much higher in rank did he have to be? Derrick thought that those that actually worked on the ship were of the second highest rank. Derrick went back to reading there had to be some mention of it somewhere. For the next day Derrick immersed himself in everything he could find but to no avail, obviously this was some big damn secret if there wasn't even a hint of what it was. For the rest of the week Derrick stayed almost exclusively in the records room he'd finally begun to grasp all about the trans-warp and was actually moving into the more advanced technical part of it. He'd also begun to see why the weapons had failed against some of the races they had fought in the past, smiling Derrick had a few ideas there. He just needed E, though he trusted any of the ships he felt closer to E. \n\nFinally E was in re-gen Derrick smiled, soon E soon. After a week she had taken shape rather nicely. \n\n\"Primary, 0999 announced one day, \"I am releasing 0101 she has almost all her energy producers online, though at present she only has sub-light engines at her present rate she should be fully functional in five days, twelve hours, fifteen minutes and fourty-five seconds. Primary all three of us wish to thank you for finding prima ship EIG-0101F without her we would be lost.\" \n\nDerrick could only stare at the hologram of the young man that was 0999, the younger looking woman that was 0098, then there was 0003, Derrick was staring at the young teen male for the first time, light brown hair five foot five inch with a curious look to him, obviously the EIG units were expected to grow almost like a real person. Hell 0003 couldn't be older than eighteen, no wonder they had been defeated at first! Well that shit wasn't going to happen again, Derrick was going to make damn sure of it. Pausing a moment Derrick thought that 0999 had been with E one of the last two ships destroyed why was it still a young version, E was the only older version so far almost like she was the creator of them like a mother? No Derrick thought, shaking his head THAT was insane! \n\nFinally Derrick was starting to find a little more reference to what the power source of the ships was. Damn but it was hidden under a huge amount of technical jargon describing in minute detail what each and every micrometer of the system did. At this rate he'd be old and dead before he got to what it was, there had to be a faster way. Hmmm I've done it before but with this amount of information it could kill him the human brain could only take so much before it shut down. Sighing Derrick decided that he'd have to risk it but first more research was needed. Each day he watched E's progress finally she was starting to take the shape of the ship he remembered. Each day Derrick worked on his project, he had to absorb the information faster, the thing was IF he was what E thought he was then he'd be of the highest rank there was. Then again trying to prove it was going to be another thing all together. \n\nSuddenly Derrick jerked to a stop, the three ships were thanking him for finding E? Plus the fact that they had called her prima ship, Derrick's head felt as if it was going to explode, again what the hell were the ships talking about? Shit forget asking them what they had meant they'd probably go completely around the answer, just like the power source, all that he'd found out so far was that the power was unlimited and inexhaustible. Derrick had to scratch his head at that one as far as he knew, he'd never heard of anything like that. Another thing he now knew for certain that the ships were watching him, he guessed it had to do with several files that he wasn't able to access yet. \n\nStrange Derrick thought, he'd accessed the files of three different ships and in each instance the files had been on a whole different vein. True many had less events that happened around them but basically they should have been virtually the same. Again Derrick thought better than to ask the ships as he was sure they'd dance around the answer as they had several questions he'd ask. They weren't literally lying, they were just giving a long drawn out answer detailing each part of the answer in minute detail. \n\nSighing Derrick decided to turn his attention elsewhere for the moment. First he had to put to rest what E had been talking about, accessing every record he could Derrick began to search through his family history. More than several hours later he began to see a pattern that had him growing more and more curious. Was it actually possible that he and his family were descended from the emperor's family? Though he'd never been to where the palace was he had heard stories his grandfather had told. Plus the fact that his great, great grandfather had been given such a high honor to serve on one of the ships. True the man had been extremely brilliant with ideas that hadn't been seen before, and were never acted upon. Well he knew how that was, though in his spare time he had put to good use a few of those ideas. Just like a few of the races he'd studied Derrick had seen a much easier way to defeat them. Well He just hoped that he had a chance to implement them before any of them had a chance to attack again. \n\nLooking out he could see that E was progressing at a much quicker pace than any of the others. \n\n\"0999 estimated time 'til 0101 has finished re-gen?\" Derrick asked a few days later. \n\n\"I should complete re-gen in thirty hours, fifty three minutes, thirty three seconds. At present I am hyper space capable, light shield is at seventy five percent, all weapons at eighty percent.\" E broke in. \n\n\"Good I await your full function and combat readiness.\" Derrick replied. \n\nThe rest of the day Derrick delved deeper into the records trying to find every shred of evidence that he could. Damn he thought when they hid records they damn sure buried them deep. So far he'd found all the records of his family, problem was they had been cleverly blocked without appearing so. It was going to take a bit of time to de-code and move past all the locks and blocks, another thing the signature mimicked an old Imperial code that hadn't been used in over ten centuries. Ok, just what the hell was going on? Was his family truly related to the Emperors of old? Derrick didn't have enough evidence but he was damn sure going to find out. \n\nFinally hitting a dead end Derrick decided to put it on a back burner, concentrating on drawing up plans for weapons that could actually help. From what he saw the weapons were powerful enough it was just that many of the invaders had somehow adjusted for them, how in the hell could they have done that unless. Damn! Derrick began to pour through records well into the next day. Finally he came to the conclusion that someone had betrayed them to the invading races. Derrick's blood began to boil; this was the worst type of traitor betraying his race for money! Then the trail stopped huh? Again it was as if the files were entirely different, there were things here that he hadn't seen in E's files and many in E's that were missing from here. The problem was without accessing all four ships records there was no way to be sure, as if there was anything that he could do now many of these things had happened well into the past. Hmmm it was at this point that Derrick started to realize something else. Why was it that each ship seemed to have a specialty that none of the other ships (well so far) had? This was something else to look into, though without his project it wasn't going to go far he was afraid. The next day Derrick was more anxious than he'd been in some time, not much longer and he'd be back on E.\n\nA few hours later Derrick completed the first of the new weapons he'd designed for all the ships that he could find. Calling all three ships Derrick out lined each section of the weapon and the difference it would make in the battle. All three holograms at first wore a look of total surprise, then slowly they all began to nod asking questions about the total output, the destructive capability, and finally what the weapon would be more effective against. \n\nDerrick was extremely impressed they sounded more like excited weapon handlers than A.I.'s. Derrick advised them that he was working on a few others that he should have ready in a few days, they all smiled the first he thought he'd seen all three have since he'd met them. Again Derrick noticed that though the conditions for the creation of the weapons on board 0999, he found that the same room on board E was better. Just like he found that 0999 was the ship that held the more experimental weapons, he wasn't sure about 0098 nor 0003 yet, but if he had to postulate it would appear that each ship had a specialty. Son of a bitch! Derrick had just realized why the ships had been so damn near undefeatable; he'd have to test it before he could proceed.\n\nDerrick was sitting in the records room finishing the last one thousand pages when an alarm went off, ah good! They had a signal on another ship. Derrick had just moved to the bridge when another alarm went off. \n\nHoly shit! Derrick thought, \"E,\" he called, \"are you are full capacity now?\" \n\n\"Yes Derrick I await your orders,\" she replied sweetly.\n\n\"Query, were any memory files damaged or corrupted during the exposure to the thermic induced plasma wave?\" Derrick asked. \n\n\"Searching Derrick, I am detecting a point zero, zero one percent loss of data, I am detecting no damage to any definitive data.\" E reported. \n\n\"Very good, I will be transporting back to you as command ship in a short time, I need to gather everything I have been working on,\" Derrick told E. \n\n\"Yes Derrick I am eagerly awaiting your return to command, again thank you for finding me. I was unsure the clues I left you weren't enough. That you, weren't as brilliant as I felt you were, I was ... it is difficult to describe it is a feeling I can almost grasp, but is still a little out of reach.\" E tried to express. \"I believe the feeling was doubt,\" Derrick told her, \"An emotion that is hard to describe and even harder to fight, I haven't heard of many these days that have complete faith in one or more persons. It is and was a fault that you AI's never had the luxury of.\" \n\n\"No Derrick, I believe it was fear, all four of us have complete belief in you; you are as brilliant as your name sake. I was told that you now understand almost the whole concept of the trans-warp drive. Not even your name sake completely understood it, though I think that you grasp more than he did.\" E explained. \n\nFor a moment Derrick was at a loss for words, true he had been educating himself and yes it was true that he had grasped the concepts rather quickly. Thinking back to the war many of his men had said that they hadn't met a man who could out think him not even the General's, they were extremely smart but his men had said they paled next to him. Again thinking about it he'd hardly lost any men as it seemed he was always ahead of the enemy and always seemed to be ready. Huh Derrick thought never thought of myself as super smart or fast, it was something he'd have to think on. An hour later Derrick had transferred to E, he'd been thinking about it, though he'd given E a name he remembered back to when he had. He'd just named her with no thought to what her name ACTUALLY was. \"E, I have to apologize, I just named you I had no thought that you might actually already have a name,\" Derrick stated. \n\nThere was silence for a few minutes, \"Are you ready to assume command again?\" E asked him. Shaking his head he now realized that he was going to have to be on his toes from now on, they were tricky very tricky to say the least. \n\n\"Yes E, and we WILL have a discussion when I am...\" there was a flash and Derrick was back on board E, \"back on board.\" Looking around Derrick crossed his arms, \"This is the first thing we need to discuss, I realize it is much faster but what I desire strongly is NOT what I always want.\" \n\nThe hologram of E bowed her head, \"Yes Derrick.\" \n\n\"Now the second thing I want to know is this direct answer, do you already have a name? I just named you without consideration that you might already have a name.\" Derrick stated. \n\nHer lips quivering E whispered, \"Yes I do Derrick.\" \n\n\"May I have it? I am sure you are tired of being called just E,\" Derrick replied. \n\n\"It is fine Derrick it is the name you ga...,\" E started, and then Derrick held up his hand. \"NO! I want your name not one I gave you, yours.\" He said trying not to shout. \"Yes Derrick,\" E whispered almost afraid to tell him, \"it is Shelby, Derrick.\"\n\n\"Hmmm, Shelby, beautiful name for an even more beautiful ship,\" Derrick said his voice full of pride. Shelby's hologram looked up tears running down her face, at that moment Shelby adjusted all her settings to do all and everything to protect and defend Derrick. Since he was now recognized as the Prime Primary Commander, all the other ships were automatically updated with this information. Though he wasn't sure Derrick thought later that this was the turning point of all of them.\n\n\"I picked up a signal a few hours ago, go Shelby inform the others,\" there was a winding up of the engines then they were there in less than ten seconds. \"I want all scans active, viral, explosive, toxic, biological the full spectrum I want no chance that we could lose one of you.\" 0003 moved closer than the rest and started to emit a strange series of lights.\n\n\"Primary,\" the serious young woman's voice came from the speakers, \"I am detecting several different explosives attached to the life capsule disarming and removing. I am also detecting several biological catalysts designed to activate upon exposure to oxygen. I am not detecting the same damage that my life case had. I am deep scanning now. The systems are close to failing, there also appears to be some type of micro tracking device attached at several points of the case designed to blend with the case, I am reading all clear, case ready, Prima Shelby.\" \n\n\"Thank you 0003,\" Shelby replied, \"Now transporting to hanger one, connecting life lines commencing power transfer.\" \n\n\"Alright Shelby, keep me advised. 0003, direct order,' Derrick said. \n\nYes, primary I await your order,\" 0003 said proudly. \n\n\"Please state your name.\" Derrick stated. \n\n\"Yes Primary, I was called EIG-0003M also known as Conner by my crew,\" 0003 answered. \n\n\"Thank you, Conner,\" replied writing it down. \"I want the name of each of you 0999 and 0098, again direct order,\" Derrick directed.",
        "\"Yes Primary,\" both ships answered at the same time. \"I am EIG-0098F also known as Lucy by my crew,\" 0098 stated.\n\n\"I am EIG-0999M also known as Zan by my crews,\" 0999 stated proudly. \n\n\"Good, now then I will no longer refer to you as your EIG designation, neither will you refer to your selves as your EIG designations. You will from this day forward refer to each other by your name, again direct order, understood?\" Derrick ordered.\n\nAll four holograms appeared before Derrick, each bowed, \"Yes Prime Primary Commander, as always we await your orders.\"\n\n\"I have given specifications for upgraded weapons to Zan, I want these to be implemented as soon as possible I believe that these will give us more of an advantage in any further battles as will the other designs I am working on. \n\nEach of the holograms looked at each other then Shelby who also smiled, Derrick didn't miss this as his suspicions began to grow more. \n\nDerrick had just sat down when a steady tone came from the com, \"Shelby report!\" \n\n\"It is the unit we brought aboard I am reading failing power to it, I am not completely connected, oh Derrick I am losing it!\" Shelby cried. \n\n\"I want you to give it a jolt of energy with what you have connected. Not enough to erase but enough to give it enough energy to possibly jump start the electrochemical cells and energy stimulators.\" \n\nThe Shelby hologram's mouth dropped agape, quickly she did as Derrick had ordered, there was a faint pulsing sound for a few minutes, and then it went steady again. \n\n\"Again Shelby, the unit had more energy than this, plus that jolt should have done the trick, increase the amount one micro unit,\" Derrick ordered. \n\nThis time the pulse was slightly stronger, breathing a sigh of relief Derrick collapsed into the command chair, damn it that had been close. Without the living A.I. the case and living metal were worthless. I better read up more on the problems of restart. The last connection on Shelby started to infuse energy as quickly as she could, lovingly she looked at the case another brother or sister saved again by her Primary, she'd never heard of the procedure that Derrick had her use, she was just glad that it had worked. \n\nLooking in on Derrick she loving stared at him, he was by far greater than his name sake, or any other she'd met other than the Emperor, the Emperor! She remembered about the codes, she had to investigate! \n\nFor almost a week Shelby watched over the life case that they had recovered, even with the energy that Shelby was infusing it was still very slow going. It had taken her almost five days to reach the re-gen center of the box, but still she had no inkling to as who this case was. Though not frustrated, Shelby was perplexed as to the reason it was so difficult. It was sometime near the end of the seventh day that Shelby broke Derrick's train of thought. \n\n\"Derrick!\" Shelby said more excited than she'd been to date, \"We have found 0001! I thought to never see him again! He was lost with Conner and his wing mate in the first battle we experienced losses in.\" \n\n\"Why was it harder to re-gen him than it was Conner?\" Derrick asked.\n\n\"0001 and 0002 had equipment that required massive amounts of energy, as I remember they had engines twice the size of the other 998 ships, twice the energy producers, they also had better shields, though their weapons weren't as good as ours, they possessed far more than the rest of us.\" \n\nDerrick had read about some of the experiments that they had conducted back then. Were both of those ships carrying experimental equipment that they were going to try out on their enemies? Derrick wasn't sure, hell his great, great grandfather hadn't mention anything even remotely resembling secret weapons though at the time there had only been three ships. Derrick's mind was a whirl with conspiracies when another proximity alarm went off, huh? Another brain box? This close? Ok now things were starting to get weird."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-04"
}