{
    "title": "Everybody Needs a Hobby Ch. 28",
    "pages": [
        "I awoke in my usual position, nestled firmly in the backside of my blonde lover and business partner, Britt. Her long blonde hair tickled my nose and I brushed it away before reclaiming her right breast. I nibbled at her neck while teasing her butt crack with my morning wood. She mumbled something undecipherable and put her hand over mine and we both gave her tit a loving squeeze. Her butt cheeks did the same as she clinched my cock with her talented ass. As much as I would have loved to just lie here, I did need to take a piss, and badly. I rolled to my back to disengage, or at least I tried to, but my backside was pressing against something much more unforgiving that another warm body, and it was a bit scratchy to boot. I raised my head and forced my eyes to open. \n\nIt took a couple seconds to do a bit of reconnoitering; hells, bells, I was in the new company motor home, and to make it even more confusing, as President and CFO of said company, Britt and I were in one of the spare beds in the front of the coach. We surely ranked the use of the queen size bed located in a private room at the rear of the house-on-wheels. I groused and grumbled and made my way, very un-gracefully over the top of my sleepy bed-mate. It only took me two tries to remember where the bathroom door was and I made it just in time. After the mandatory three shakes, I washed my hands in the mini-sink and then, like a grumpy old bear, made my way to the bedroom to see who was sleeping in my bed. I already knew, but as foggy as my memory was of all that went on last night, I needed to be sure. \n\nThere, snugly intertwined were Gina, Becky and Kate, in that order from left to right. With enough body heat to keep them warm, the blankets and sheet had been cast off onto the floor. My cock and I stood there for a minute and just admired the view. Gina, the brunette of Amazonian proportions was spooning Becky, the red-headed cowgirl whose Aunt's ranch we were currently camping at. She was nose to nose with Kate, our long, black-haired pixie; and, oh yeah, they were all dressed in their birthday suits. They softly snored in three-part harmony.\n\nAs much as I wanted to roust them and reclaim the much more comfortable bed, I remembered my very comfortable blonde was waiting up front. I quietly made my way to the kitchen and found a carton of orange juice and took a big swig right from the carton; no witnesses in sight. Britt had rolled around until she was in my spot, her back against the less-than-soft couch back. I lay down beside her on my back and she automatically rolled over beside me, resting her head on my chest in the crook of my arm. Her right hand stretched across my lower belly and her right leg wrapped over mine. She hugged me tight and lightly kissed the side of my chest before drifting back into a blissful sleep and I quickly followed suit. \n\nI woke sometime later to soft whispering and squelched giggling. I kept my eyes closed; hoping to hear what was so entertaining this early in the morning. My bat-like hearing placed them at the dining area across from the couch/bed where Britt and I spent the night. I reflected briefly that I didn't wake up with a backache, so the sleeping areas I'd earlier been apprehensive of turned out to be acceptable after all. \n\n\"So he wakes up like this every morning?\" one of them said softly. It didn't take Sherlock Holmes to deduce that the question came from Becky as she was the only one of the four lovelies in our little family who hadn't shared my bed overnight, at least not yet. As soon as I made this deduction, I probed my foggy brain to verify my conclusion, but I clearly wasn't awake enough yet.\n\n\"Yeah, cool huh?\" I heard little Kate respond with a giggle. \"It also means he needs to take a leak, so he'll probably wake up in a minute.'\n\n\"Nah,\" Gina replied, discounting that prognosis; \"He was up earlier; it sounded like he was emptying a five gallon bucket in there.\" The other two snickered at Gina's vivid description.\n\n\"Well I sure didn't hear it, I was out like a light,\" Becky whispered.\n\n\"Yeah, I know, you and Katie were doing duel-snoring when he came in to check up on us. I just pretended to be asleep; I was too comfortable snuggled up to your sweet butt.\" I assume she tickled Becky as I heard a muffled yelp. \n\n\"Quit it,\" Becky hissed, \"We'll wake them.\"\n\n\"Aaah, they need to get up anyway, I'm starving,\" Gina replied. \"I assume that that beautiful, horny Aunt of yours has the makings for breakfast in the house?\"\n\n\"Yeah,\" Becky giggled; \"and I want to thank you guys again for putting on that little show for Virginia last night. I didn't tell you last night, but when we were up in the loft, I'm pretty sure she was watching us live, cuz when it was quiet, I could hear the camera in the dome rotating.\"\n\n\"So that's why you drug us over to the middle of the floor for the money shot,\" Kate said excitedly. \"I heard some kind of funny noise earlier, but figured it was some kind of bug or something.\"\n\n\"Yeah, I wondered what the hell that was all about,\" Gina jumped in. \"That was really fun and if you'd have asked me a couple months to do that, I'd have told you where to put it.\" Kate stifled a laugh and I could imagine Gina scowling at her. \"So you think your Aunt really liked it?\"\n\n\"I have absolutely no doubts that she got off about the same time George did. It's kind of twisted, but I really love him for doing that for her, err, well for us...anyway, I doubt she's seen a dick like that in a long time.\" Becky's comment got to me a little and my cock did a little lurch. \"Oh my gosh,\" Becky half screamed in surprise, muffling herself with one hand and the other probably pointing my way; \"He heard, his cock moved, he heard us.\"\n\n\"Don't be silly,\" Kate said, with a straight face, I know; \"Dicks don't have ears!\"\n\nGina laughed out loud, unable to contain herself. That was my cue to stretch and yawn. I went through all the motions of trying to get my eyes open and focused and I turned my head to see the three lovelies, still naked, sitting at the table and looking my way. Britt was still snuggled up, breathing softly; she could sleep through a nuclear blast; \"Morning ladies,\" I said quietly. \n\n\"Morning, George,\" Gina and Kate said in harmony. \n\nBecky was somewhere else, her attention locked on my cock, still hard and proud. \"Becky...Becky,\" I whispered a little louder. Still focused elsewhere, Gina looked at me and shrugged her shoulders, in a 'Got me,' manner. I winked and then flexed my cock, nearly bouncing it off my lower belly. Becky jumped and the others giggled at her. \"Good morning, Becky.\"\n\n\"Uh, yeah,\" said the flustered redhead, \"Good morning George...are you hungry? I think I'll go get breakfast started,\" she said hurriedly, standing up quickly and turning toward the bedroom.\n\n\"What, no good morning kiss?\" I asked, bringing her to a halt. \"As a family, we always give each other good morning and good night kisses, though I don't remember last night to well,\" giving a disapproving glance at my make-shift bed. \n\nBecky turned with a big smile on her face and stepped over to me, leaning down and planting a big kiss on my lips. Turning her head, she gave Britt a kiss on the forehead and then turned and skipped back to the bedroom. Katie giggled and then jumped up and planted a kiss on me, her tongue working its way inside my mouth. She too gave Britt a kiss on the forehead and bounded after Becky. Gina now stood, but then dropped to her knees beside me and looked into my eyes. \"Thank you,\" she whispered, before giving me a deep, passionate kiss. Her eyes glistened as she moved to kiss her friends forehead.\n\nI wrapped my arm around her waist to keep her from getting up on her feet; \"Thank you for what?\" I asked. \n\n\"Oh,\" she said, puddling up, \"you know, just everything.\"\n\n\"Well,\" I said, running my hand up and down her strong back,\" I guess I don't know, but you're welcome, \"and I drew her down for another kiss. She smiled and sniffled as she stood. Turning to make her way to the bedroom, she stopped, leaned at the waist and gave my cock a kiss on the head, \"Thanks for that too,\" she winked before sashaying to the rear, her own rear undulating as she walked. \n\n\"That was sweet,\" Britt murmured, startling me.\n\n\"Uh, yeah,\" I responded, wondering how long Britt had been playing possum. \n\n\"Yeah, I'm gonna have to watch that one, I think she has a crush on you,\" she said softly, her hand now on my cock, only making matters worse. \n\nI tried to turn the tables, Rolling to my side and taking her mouth with mine. Our tongues danced, but her hand never retreated. We made out like teenagers, writhing around on each other. Given a couple more minutes, I would have pinned my voracious lover to the bed and made love to her till we both screamed out each others name. Timing though really is everything and our three fellow camper mates emerged, somewhat dressed and ready to start the day.\n\n\"Hey you two,\" Becky giggled as she gave my butt a swat before resting her hand there and rubbing it lightly; \"We're going to go get breakfast started, so get it together and we'll see you inside.\" She gave me another playful pat and they all paraded out the door. \n\n\"Well I guess we better get up,\" Britt said as she pushed up on my chest. \n\n\"Do you feel this?\" I asked, rotating my hips, my cock wedged between her muscular thighs.\n\n\"Yeah,\" she said, smiling as she tried to capture my hard-on; \"What about it?\" \n\nI stared into those deep blue eyes and just waited, waited until she busted up laughing, and it didn't take long. She laughed and screamed as I held her tight and nibbled at her neck and ears. She tried mightily to kick me off of her, but I had her confined to the small couch-like bed and she had nowhere to go. Recognizing my advantage, a thought raced through my mind and I suddenly stopped my attack, pushing myself up on my arms.\n\n\"What?\" Britt asked, looking at me with concern.\n\n\"It just dawned on me that the motor home hasn't been properly christened yet; it's our coach and we haven't even been able to use the bedroom yet.\"\n\nThe revelation caused her to gasp and this time she easily pushed me aside and stood upright. \"C'mon,\" she said, reaching her hand out, \"We need to go make that bed ours.\" I was on my feet and right on her ass, literally as she raced to the bed. We threw ourselves on the un-made mattress and quickly began marking our territory. \n\nGrabbing her by the waist, I flopped down on my back, dragging her on top of me. With little resistance, I had her legs on either side of my head and her ass cheeks in my hands and was enjoying my first course; sweet, warm pussy with a side of pink, puckered ass. Britt opted for the full serving of sausage with a side of testicles. We were both enjoying our meal, no talking, just eating. My tongue began to tire and I had a crick in my neck, so I let my fingers do the walking. With practiced precision, I soon had her on the ropes and she released her hold on me and bailed off, landing beside me on her knees. Her eyes were like coal and without a word, she straddled me, never losing her ocular grip. She licked her lips, staring, daring me, and without hesitation and with laser-guided precision, she took me deep. \n\n\"Oh my god!\" I moaned as her pussy wrapped itself around my hardness and hugged me tight. I grabbed her hips, holding her in place so that I could regain a little control. Her pussy rippled on my cock and it wouldn't have taken much to surrender to her.\n\n\"I was getting a little jealous last night of Kate getting to ride this mighty bronco,\" her pussy hugging my cock. \"Now it's my turn to ride and I'm not stopping until I've broken him,\" she said with a smile. I didn't smile back; the word 'broken' made me cringe. \"Oh shit, I'm sorry babe; I could have worded that better.\" I winked at her with a knowing smirk and gave her a little buck. \"Oh you little shit,\" she exclaimed as she willed her pussy to pull up on the reins and get my attention; \"Now I am going to ride you hard, buster!\" and she began to bounce in the saddle. \n\nThe feeling was exquisite and the view was even better. Her perfect C-cups bounced as she rode. She chewed on her lower lips as her eyes bore down on me. I broke eye contact and looked down, watching my cock disappear and then reappear, growing wetter and harder with each bounce. Her gaze followed mine and she slowed, hypnotized by the sight of her hungry pussy consuming my cock. She kept up the slow pace for a bit and then reacquired my attention; \"I could watch your cock fucking my pussy all day long, but I need to cum baby; I need to cum hard... grab my tits!\"\n\nI happily obeyed, taking a firm breast in each hand, her nipples stiff and poking into my palms. I squeezed them as she grabbed my wrists; \"Uh, Uh, Uh,\" she grunted as she rode me, gyrating, looking for just the right spot, the right motion. \"Fuck...right there baby...don't move...Uh, Uh...Yes, fuck, right there...so fuckin' good baby!\" I chanced a glance downward again and her milky white nectar dribbled down my length, her pussy lips sucking my cock tight with each stroke. The visual was more than I could take and my cock swelled. \"Yeah baby,\" she moaned, picking up the base. Her fingernails dug into my wrists, a sweet pain, tempered by the feeling of the rippling walls of her pussy as her climax began. \"Shii...I'm cummm...baby, please... cum...meee,\" she moaned and then gasped, her eyes big. She looked at me, unable to speak as her pussy convulsed, her stomach muscles rippling; she could only nod, giving me permission...no...begging me to cum, cum now. \n\nMy lover lost her grip as her body gave in to her orgasm. I released my hold on her tits and pulled her to me as I bucked one last time, my ass off the bed, driving myself home and cumming hard. Britt groaned her pleasure in my ear as I held her tight and let her pussy claim all my cock could give. The heat of her sex was intense, our juices seemingly boiling inside her, mixing and marinating my cock. Her breathing evened out and she sighed and nibbled on my ear before pushing herself up enough to lay her head on my chest. I kissed the top of her head and ran my hands over her back and shoulders; \"I think we properly christened our ship here,\" kissing her head again and playing with her long, blonde hair. \n\nShe purred, her fingers playing with my chest hair as I petted her; \"Yeah,\" she said softly, \"this has been an incredible couple of days. I've never felt so comfortable and so loved as I do right now.\" She paused to kiss my nipple and nibbled playfully. \"I just want it to be like this always, you and me, making love every chance we get, no matter where we are; and the girls...I love them all, and I love that you love me and them and that we...\" She paused again and then twisted and looked up at me; \"Do you suppose,\" running her hand through my hair and then down the side of my face; \"Do you think it could still be like this, I mean you and me, all of us still together when we get to be Becky's aunt's age?\"\n\nMy mind tried to conjure up a visual but it refused. Thinking about it, I replied, \"Well, that would be an interesting scenario, wouldn't it. I hope I can keep up with you in thirty or forty years, let alone two or three more of you.\" I pulled her up for a kiss and continued, \"As long as I have you, I'll be happy. I've thought a little about what may happen when you girls graduate, but that's a ways off and a lot can happen between now and then, so I'm content to just live in the moment and see what tomorrow brings.\"\n\n\"Yeah,\" she sighed, stealing another kiss; \"I'd like to think that we can go on like this forever, but I know things will probably change and that it will be for the better, whatever it is.\" She shifted around until she was completely on top of me and she wiggled around like a cat settling in for a nap; \"the one thing I do know,\" kissing me lightly on the lips, \"is that you are stuck with me for the long haul; I don't have any intentions of being anywhere but with you.\" \n\nThere was a hopeful, questioning look in her eyes after that statement that begged for a response. I ran my hands down her sides until I was cupping her butt and I pulled her tight; \"I feel the same and I'll never give you a reason to think otherwise...I love you so much Brittany!\"\n\nHer eyes began to tear, \"Oh god, I love you more! \"And we kissed until our bellies rumbled in two-part harmony. Laughing, we kissed once more; \"Well, I guess we better get up and join the others for breakfast. I'll bet we have to do the dishes cuz we're so late,\" she giggled. \n\n\"It was worth it,\" I said as I goosed her sweet butt; \"Now where the hell are our clothes?\"\n\nBritt found her favorite satin running shorts and it didn't go un-noticed as she slipped them on over those long legs that she had neglected to put any panties on underneath. She pulled out another of my purloined t-shirts and knotted it under her tits and slipped into her flip-flops. She was about to throw me a clean pair of boxers, and then stopped; \"You want to go commando, babe?\" pulling the leg of her shorts to the side and flashing me a little slit, giggling.\n\n\"Gimme those,\" I said, holding out my hand; \"the seams and zipper in my shorts are a little rough for your favorite toy.\"\n\n\"Oh yeah,\" she said, throwing me a pair of Yosemite Sam boxers,\" we don't want George Jr. getting chafed,\" she giggled again. I shook head in wonder and finished up with about the only shirt I still had that the girls hadn't stolen; \"I guess I'm going to have to go shirt shopping soon, I seem to be running out of them,\" raising an eyebrow.\n\n\"Good idea,\" she replied without missing a beat; \"I'll go with you; you need some that have a little deeper 'V' \", lifting her tits up to show off some more cleavage.\n\n\"Heaven help me,\" I said as I slipped into my flip-flops. \"Let's go eat,\" and we walked to the house hand-in-hand, enjoying the sun and the sounds.\n\n\"Good timing,\" Gina said as we made our way into the kitchen. She walked up and gave us both a kiss and I felt her damp hair in my hand. \"We knew we had time,\" she winked, \"so we took a shower before we made breakfast.\"\n\n\"Yeah,\" said Kate as she set out the silverware, \"the shower here is a little snug for three, but we made it work,\" she giggled. \n\nBecky blushed a little as she was standing at the stove, tending the scrambled eggs. I stepped up next to her and gave her a kiss on the cheek and my hand lingered on her butt; \"Did you check for cameras in the bathroom?\" \n\nShe gasped and then turned to me, her blush even deeper; \"You don't suppose?\" and then she caught my smile. \"You ass,\" she said before wrapping her hand behind my neck and kissing me hard.\n\n\"Hey sis, don't burn my breakfast,\" Britt said from behind her. Becky dropped me like a hot potato, handed me the spatula and grabbed Britt's head with both hands and kissed her until they both had to come up for air. I perved for a couple seconds; two women making out is a sight I'll never tire of. I heard a deep sigh behind me and looked over my shoulder at Gina and Kate, arms around each others bare waists, love in their eyes, as they watched their adopted siblings kiss.\n\n\"Okay, let's eat,\" I said, breaking up the moment...for the moment. I turned off the stove and pulled off the pan of eggs. Britt and Becky remained nose to nose, sniffling and wiping each others tears off their cheeks. \"Are we serving up here or are we taking it all to the table?\"\n\n\"Oh, oh,\" a flustered redhead answered before giving Britt another quick peck on the lips. \"Here,\" she said, turning and hip checking me out of in front of the stove; \"everything else is staying warm in the oven. We'll just serve everyone up here. Katie, would you grab the plates and Gina, would you see what everyone wants to drink?\"\n\n\"Yes, sister dear,\" they said, laughing and high-fiving. Becky looked at me and another tear ran down her cheek. I kissed it away and whispered, \"Welcome to the family.\" ",
        "We had a pleasant breakfast with more than enough to eat. The girls bantered back and forth about the yesterday's shoot and all the sexual antics that went along with it. Becky's formal adoption into what we like to call our family sparked more sniffles and hugs. \n\nBritt and my relationship is strong and unwavering, but Britt brings with her a love of life and life experiences that has consumed us all. Before I entered the picture, the three girls, Britt, Gina and Kate shared a house while they attended the local university. They all had varied upbringings and life experiences and it was those that brought the three to love and therefore make love with each other freely. I entered the picture and sort of muddied the waters. Britt was positive from day one that I was the one, some sort of pre-ordained soul-mate. So sure of herself and us as a couple, Britt introduced me into the group and for lack of a better way to put it, used me to help her friends deal with some of their past demons. Britt possesses abilities that evil cult leaders would love to have. She has the ability to read people better than they can themselves and inherently know what will make their lives happier and more fulfilled. She constantly amazes me.\n\nAnyway, breakfast was over and as she predicted, Britt and I ended up on clean-up detail while the other three went out and tended to the livestock. We quickly got the kitchen in order and Britt was grumbling about getting all sweaty doing the dishes as we hung up the final dishtowel. Without warning, I picked her up and threw her over my shoulder and made my way upstairs to the aforementioned shower. Being it was only the two of us, it was plenty big and even though we'd fooled around earlier, it didn't keep us from playing some more. I nearly drowned, but I managed to get my lover off; on my knees with her straddling my face. \n\n\"I love your tongue baby,\" she gurgled under the unrelenting shower head. My tongue and mouth lapped at her creamy center while my soapy fingers invaded her tight puckered ass. \"God yes, finger my ass, god that feels so good baby.\" Multi-orgasmic and always ready, Britt climaxed quickly with the two-front assault. \n\nDetermined to reciprocate, she switched places and with her talented mouth and tongue had me hard but questionably able. \"C'mon baby,\" she said, looking up at me with those deep blue eyes, water raining down as she pumped my cock with both hands, \"You've got some more for me, don't you Daddy? Your little girl wants some more of your cum. I want to feel your cock swell up and cum...\" and her eyes got big; \"I know,\" she said in a confusing, sultry, little girl tone. On her feet, she gave me a quick tongue-tangling kiss before turning her back to me and bending over. She reached back with both hands and spread her ass cheeks. Looking over her shoulder; \"I want you to fuck your little girl in the ass Daddy, I want to feel your big Daddy cock cum deep inside my ass.\" My cock bobbed in acceptance of the plan and she smiled; \"You can fuck my pussy for a minute to get your cock wet, but I really want you to fuck my tight little butt Daddy. Please, oh please, won't you cum in my ass Daddy?\"\n\nMy only response was a guttural groan and a growl as I grabbed Britt's un-girlish hips and slid my hard-on headlong into her slick, hot pussy. She moaned as I slid my cock deep inside her, two, three times. There was more than enough of her sweet nectar to soon be dripping off the bottom of my cock. With my back to the shower head, I pulled my cock from her pussy; \"Okay baby, spread those ass cheeks of mine and show me where you want Daddy to put his cock.\" \n\nEver obedient, Britt spread her ass cheeks wide and slipped a finger from each hand into her waiting ass and spread the hole slightly. \"There Daddy,\" she grunted as she contorted herself for me; \"Can you see it Daddy, see where I want you to put your big cock?\"\n\n\"Yeah baby, I see it. I see your pretty pink asshole. Here,\" I said, moving in and placing the tip of my cock between her intruding fingers; \"do you feel it, baby? Do you feel Daddy's cock?\"\n\n\"Oh yes Daddy, that's right. Here, let me help you.\" One little hand reached up and took my cock and with the other finger still in place, she slowly parked my cock head at her rear door. \"There Daddy, now push a little, not too much, just a little.\" She was pushing back as I was pushing forward and my cock head audibly popped inside her ass. \"Ooo,\" she squealed, her hand strangling my cock. Taking a second to relax she said softly,\" Okay Daddy, just a little at a time. My little ass isn't used to your big dick.\"\n\nI played along as she let go of my cock and I watched it slowly disappear inside her. \"Your ass is so fuckin' tight Britt. Fuck, I'm not sure I can even get it back out.\"\n\nMy Britt came back to life, the little girl gone; \"Maybe the little girl thing wasn't such a good idea; this must be how tight my ass was when I was a little girl.\" I felt her working her inner muscles, trying to loosen up. Slowly I managed to back nearly out of her ass when she clinched back down. \"It feels too good to stop now,\" she said; \"Spit on it, spit on your cock, we just need some more lubrication.\" We'd learned earlier that saliva was actually a pretty good substitute for a store-bought lube. I managed to work up a goodly amount and I felt her reach from down below and contribute, her slick hand wrapped around my cock. \"That ought to do it lover,\" she said, looking over her shoulder at me. I slid in easily and I ground against her when I reached bottom. \"Oh yeah, that's it.\" Dropping her head down, she braced herself with both hands on the tile wall; \"Okay baby, fuck my ass now. Fuck me like you mean it!\"\n\nMy baby's ass was so tight and warm. I held her hips and watched my cock appear and then disappear, time and again. Having cum earlier, I wasn't in any hurry and I made it my mission to make sure that the one I love climaxed once again. \"Britt baby,\" I said haltingly, \"your ass looks so good with my cock in it.\" She moaned in reply as I continued to work my hard shaft; \"Everything about you makes me love you; makes my cock hard.\" I stalled at the bottom and rotated my hips, stirring her insides. Her moaning got louder and I felt her fingers brush my balls as she began playing with her pussy. I resumed my fucking, adding some lubrication with an expertly spit load. More moaning; \"Yeah baby, play with my favorite pussy. We're gonna cum again baby, aren't we?\" More moaning and I could feel her fingers in her pussy through the thin wall separating us. \"I'm gonna fuck your tight little ass until you cum for me again; what is that three times this morning?\" Britt grunted some kind of acknowledgement as she leaned down further, giving her better access to her own pussy. I could feel the beginnings of another ripping orgasm, her ass gripping me tighter and her hand pummeling her pussy. Somehow I felt my own orgasm building and I fucked her ass with abandon.\n\n\"Uhhh,fuck babe...oh shit, I can feel your cock getting bigger...fuck I love your cock in my ass...c'mon babe, fuck me, fuck me...I'm almost there...AHHHH!\" Her entire backend went into overdrive; her asshole constricted and squeezed what little cum I had left to give as my orgasm took over. I could feel her pussy walls rippling beneath, the sloppy sounds of her fingering was even audible over the sound of the shower. I held her hips tight, her ass cheeks firmly planted against me; \"Jesus H.,\" she moaned as her body began to return to normal.\n\nI laughed softly as I pulled her upright, my cock still being held hostage. I hugged her from behind and slowly spun to direct the cooling spray onto my hot lover. \"So are you good for awhile?\" I asked teasing as I nibbled on her ear and worked my hands up to her tits. My fingers brushed over her rigid nipples and she shivered and my cock made a slow withdrawal.\n\n\"Ahh,\" she moaned in disappointment, suddenly empty. She turned in my embrace and gave me a thorough kiss; \"Have I told you 'I love you' yet this morning?\"\n\n\"I think so, but I never tire of hearing it,\" I replied, running my fingers through her long, wet hair. We kissed again and like iron to a magnet, my hands went to her perfect butt and I squeezed her cheeks.\n\n\"Easy there, lover,\" she sighed with her head against my chest; \"Between your cock and yesterday's horse ride, well, I'm a little sore back there.\"\n\n\"Oh baby,\" letting go of her butt and hugging her tighter, \"I'm sorry, I wasn't...\"\n\n\"No, it was my idea, I mean having you stick your beautiful cock in my butt. I loved that, I'll always love that, but,\" pausing to look up at me with those deep blue eyes; \"I guess I can kind of blame you for the horse ride.\"\n\nShe smiled as I tilted my head to kiss her, \"Yeah, but it was your idea to emulate Lady Godiva.\" \n\n\"Yeah, that wasn't too bright, but it only rubbed my pussy the wrong way; but admit it, you liked the Godiva look, didn't you?\" she smiled.\n\n\"You look sexy, no matter what you're doing or wearing, you know that,\" I said before kissing her once more.\n\n\"And that Mister is just one more reason that I love you.\" She had just leaned in for another smoldering kiss when she squealed, \"Shit, we're out of hot water!\" I laughed as I reached behind her and quickly shut off the shower.\n\n\"I guess that means we're done,\" I said, finishing our kiss before stepping out and gathering a couple of towels. We toweled dry and Britt opted to let the sun finish drying her hair. She doesn't do it often, but when left to dry on its own, her hair seems fuller, probably because it has a natural wave to it that disappears when she blow dry's it. I've told her that I like the look, but she isn't a fan; says it makes her look like a soap opera star from the 80's.\n\nDressed, we made our way outside and I ducked in to the motor home to grab my camera, cuz you just never know when a shot will present itself. We followed the sound of laughter to the corrals and I was glad that I grabbed the Nikon. Gina, Kate and Becky had hopped the fence and were in Don the Donkey's area. I hoisted Britt up until she was seated on the top rail of fence and then I handed her my camera and joined her.\n\nGina saw us as we climbed up and joined us at the fence; \"You're just in time, Kate is going to ride Don here in his pen; this should be good,\" she laughed. With the grace that only her long legs would allow, Gina hopped up beside me, ready for the show.\n\nBecky had placed a rope lead around the little pack animals neck and had tied him to one of the fence rails. On his back, he had a small blanket to protect Kate's delicate skin; short shorts were probably not the wisest choice for riding, but I doubted that the ride would last long. Don stood there calmly as Becky helped the little one up onto her might steed, getting her centered. \"Okay Don,\" Becky addressed the donkey as she moved in front of him to untie the lead; \"Are you going to be a good boy? You know how much Kate likes you, so just give her a nice ride around your corral, okay?\" Don was looking at the redhead like he understood every word she said and then turned his head back and looked at his diminutive rider. If donkeys can smile, then that is exactly what Don did when Katie leaned forward and rubbed his nose when he turned toward her. \n\nGina giggled, poking me in the ribs and then pointing. I looked across the way and sure enough, Don, the horniest burro ever, was showing his fervor once more. Katie looked up at us and we all just smiled and gave her a wave. Becky, reaching over to untie the lead caught sight of Don's condition and just shook her head in disbelief and led the love-struck donkey toward the center of the area before handing the lead to our cowgirl.\n\n\"Okay sweetie, just keep the rein tight and your legs hugging our boy here. Don,\" she said as she bent over, giving us a great view of her ass cheeks poking out of her daisy dukes; \"Behave yourself and just go where Katie points you, okay?\" Don didn't utter a word; \"Are you listening to me?\" Swear to God, Don looked up at her and his big ears wiggled to and fro. Becky smiled and gave him a scratch between the ears, \"Okay boy,\" stepping out of the way.\n\nI managed to snap a couple shots of our petite wrangler atop her miniature mount being coached by our gorgeous redhead with the impeccable posterior. \"Nice shot,\" Britt said, squeezing my knee as she looked at the shot on the back of the camera.\n\nBecky stepped to the side and Don and Katie took off at a snail's pace; I don't think he hurried anywhere except maybe to the feed bucket. Distracted now, Don's ardor had waned and it was now safe to take some shots of our happy horsewoman. \n\nBecky joined us and jumped up on the fence next to Gina; \"Well, she sure looks happy;\" and she did, smiling big as the little donkey trotted around the corral.\n\n\"Yeah,\" said Gina, \"the only time I've seen her happier was when George was burying his bone in her backyard in the back of a Hearse.\" She said it straight faced, without emotion, just matter-of-factly. Becky sputtered while Britt laughed so hard she nearly fell off the fence. I just fidgeted on the fence as Becky leaned forward, trying to make eye contact with either Gina or I; \"I'll tell you later,\" she said, her eyes still focused on her little lover.\n\nKatie and Don pranced around for another fifteen minutes or so and I think they both decided that they had had enough fun. Don brought her over to us and Becky and I jumped down, Becky grabbing the lead and me, grabbing Kate by her bare waist and lifting her easily off Don's back. Sitting her on her feet, she stepped over in front of her favorite animal, scratching him between his ears and then giving him a kiss above his nose. Meanwhile Becky had wandered a little further down the fence line and snagged a bucket from the ground on the other side. Turning back, she watched as Kate affectionately thanked Don for the ride and then spotted his mighty member begin to reappear from its sheath.\n\nBecky shook her head once more and then made eye-contact with Britt; Britt shrugged and said \"I don't know, lover-boy here does the same thing when she scratches him between the ears.\" Gina did fall off the fence in a fit of laughter this time, landing awkwardly on her feet. Becky rushed up to grab her and they hugged each other, laughing. Both Don and Katie stared at them like they must have been slightly off-kilter or something. Britt bailed off the fence and hugged her littlest roommate and they chattered on about her ride. I happily snapped candids, one after the other.\n\n\"So, what's on the agenda for the rest of the day?\" I asked as we watched Don happily munch carrots and apples offered up by his new-found best friend.\n\n\"Well,\" offered Becky, \"You've pretty much seen the whole place and the way Britt here,\" giving her a big side hug,\" was walking when she came out of the house, I don't think we need to do any more riding.\"\n\n\"I've seen that walk before,\" snickered the Amazon princess Gina, \"and it wasn't from horseback riding.\"\n\n\"Gina!\" Britt yelped and started chasing the brunette around the corral. \n\nBecky jumped back up on the fence beside me and leaned her head on my shoulder and sighed, \"God, I love my family.\"\n\nI wrapped an arm around her bare waist and gave her a big kiss, \"and we love you too.\"\n\nGina and Britt returned to our spot on the fence, winded but smiling and Kate joined us as she had run out of snacks and Don wandered off, uninterested in us now. \"So,\" I reiterated, \"is there anything else you girls want to do while we're here?\"\n\nBritt pulled her cell phone out a pocket I didn't know she had in her running shorts and looked at the time. \"Well classes do start tomorrow, so I guess we should get home sometime before dark. I know I have a few things to gather up for tomorrow.\"\n\n\"Oh pooh,\" Katie pouted like a six year-old, \"I'm not ready for summer to be over. This is the best summer I've ever had.\"\n\n\"I'll second that,\" Gina replied, hugging her girl to her side, looking over at Britt and Becky and I; \"this has been a great summer.\"\n\n\"I don't think anyone will argue that point, but the reason we're out west here is to go to school. George and Becky have just been gigantic bonuses.\"\n\n\"Just?\" I said, trying to sound hurt.\n\n\"Oh baby,\"' she said, cozying up to me, \"I did say gigantic,\" running her hand down my front and resting it on my crotch.\n\nOnce more the laughter erupted and once again, I could only shake my head in wonder. Actually, it was wonderful as I snatched another picture of four beautiful women laughing uproariously, hugging one another while an un-amused donkey looked on from the background; I am indeed the luckiest mother-fucker in the world.\n\nFinally laughed out, wiping tears from their eyes, Becky said, \"Well, I guess we really need to do a load of towels and straighten up the house; I'd like to leave it like we found it.\"\n\n\"God, yes,\" Britt exclaimed; \"anything else?\"\n\n\"Well, I want to straighten up the barn too. We left blankets spread all over the place and we need to put Katie's other ride back in the back room,\" referring to the wooden stand and giant saddle that Katie rode me on last night.\n\n\"Well, you and George take care of the barn,\" Britt said, handing out work assignments, \"while the rest of us take care of the house. I saw the laundry room next to the kitchen.\"\n\n\"Sounds like a plan,\" Becky said, taking my hand. \"C'mon cowboy, let's clean up our mess,\" giggling and smiling big as we walked to the barn. The others turned tail and headed for the house, laughing and yakking as they always do. \n\nIn the barn, we both automatically looked up at one of cameras; \"Do you suppose she's watching us now?\" she whispered.\n\n\"No way to tell, I guess. I was thinking about it though and she could easily have installed a sensor that let her know when someone came through the door here, you know like an infrared beam or something.\"\n\nBecky stared at me with those big green eyes; \"Well if she thought about it, I'm sure she did, but regardless, if she doesn't see it live, she's got it recorded.\"\n\n\"Yeah, your aunt is pretty bright,\" I said as we walked over to our first play area near the tack room; \"I wouldn't be surprised at all if she was watching us right now.\"Becky grabbed a couple of bottles of water out of the fridge and we leaned against the bench and drank them before going to work.\n\n\"Yeah, she is one smart cookie,\" she said, taking a long draw off the bottle; \"and I think I love her even more now that I know about her, well, her sexual proclivities.\"\n\nI turned to look at her,\" Proclivities, pretty big word for a country girl,\" I kidded. She poked me in the ribs with her elbow and then stood up and started to work. We shook out the first blanket we used, folding it up and then putting it back on the shelf. Next we wound the hose up that we used to cool ourselves down with last night and then with a sigh of resignation, we walked over to the gigantic saddle and the wooden horse it sat on. With a mighty heave we grabbed the mountain of cowhide and engaged in more grumbling and cussing as we stumbled into the store room and got it back up on the highest shelf in the room. Assuring ourselves that it would stay put, we went back out and grabbed both ends of the wooden stand and drug it back into its corner.\n\n\"Jeez,\" Becky blustered as we exited the room, \"that was fun last night, but I'd think that one through before I did it again.\" \n\n\"Well it made Katie's night and I had a good time too,\" I admitted; \"But I'm still a little saddle-sore this morning.\"\n\n\"Yeah, you guys don't have to spread your legs as wide as we girls do,\" she winked and smiled.\n\n\"And we appreciate it,\" I laughed, pulling her to me and kissing her on top of the head. I stared at stairs to the loft and exhaled,\" well, I guess we better go straighten up the loft.\"",
        "\"Yeah\" she giggled; \"whose idea was it to mess up that area too?\" hugging me tighter yet.\n\nAwkwardly, we made it up the stairs, never parting. We took a second to lean on the rail and look out over the barn and stables; \"Remind me to check their feed and make sure the auto-waterers on their troughs are working.\"\n\n\"Auto-waterers?\" I kidded.\n\n\"It's a word,\" she said defensively, but laughing at the same time, poking me in the ribs once more. \"C'mon, let's get this mess cleaned up.\"\n\nWe walked to the middle of the loft and picked up the blanket where I delivered last night's money shot, a porn classic with four beautiful naked women sucking the leading man's cock till he could deliver copious amounts of jizz on the bountiful collection of breasts. Picking up the blanket to shake the bits of hay off of it, we heard the tell-tale sound of the spy camera above us being remotely adjusted. Becky's eyes grew big, staring at me and mouthing 'She's watching.'\n\nWe paused long enough to make a telepathic connection and then we exchanged ideas. Together, we nodded imperceptibly. Bunching up the blanket instead of properly folding it, we approached the bed of hay we'd constructed the night before. We judiciously laid the blanket next to the one still there and straightened them both out; making the bed. Without a word, we began to undress one another, intent on giving Aunt Ginny one last performance before we left. \n\nBoth stark naked, I picked up the ravishing redhead and gently laid her on the bed, positioning her for optimum viewing. I stood before her and took her left leg in my hand and starting at her foot, I kissed my way down till I could easily smell her excitement. Straightening back up, I worked my way down her right leg, finishing again where her long legs intersect next to heaven; Becky squirmed and moaned. Both her legs now on the bed, I spread them a bit more and crawled up between them. On my hands and knees, my cock dangling down, I started kissing once more from where I left off. I worked my way up, over her hip bones and across to her lower belly, firm and toned. From there, it was on to her belly button where I lingered and she managed to giggle and moan simultaneously. Onward and upward, I stalled at each breast and suckled at her teat, drawing her nipples in between my lips until they throbbed. \n\nSad to move on, I scattered kisses across her chest and breastbone, over to each shoulder. Knowing what came next, Becky tilted her head back, exposing as much of her long, sensitive neck and throat as she could. Her moaning transmitted through my lips as I traversed then from one ear and then cross-county to the other. Her hips were in constant motion now and I rested my hips on her, my semi-erect penis knocking gently at her door. \n\n\"Jesus,\" she groaned loudly just before my lips met hers. Soft and warm, her lips nursed on mine as I felt the tip of her tongue dancing on my teeth, looking for admittance. I gladly submitted and we groaned together, our tongues writhing in each others mouths, our lips drawing on one another's passion.\n\nAbruptly, Becky broke our oral bond, her eyes on fire as she looked into mine; \"You've got me so turned on, I need to cum, I need to cum now!\" She pushed on my chest and then pushed on my side, directing me. I moved to work my way down and settle in between her toned thighs, but she had other ideas, grabbing my calf and pulling me back. It didn't take this cowboy more than a second to catch on, so I straddled her till my cock hung down, teasing like some kind of cat toy. Having already cum twice this morning I didn't hold much hope of delivering much, but true to form, there was no lack of blood-flow and she had my attention quickly. I dipped my head down and inhaled her intoxicating aroma. Her inner lips bloomed and her excitement literally flowed from within. I've never really mastered eating pussy from the topside down. The clit is within easy reach, but I can't bend my neck enough, and my tongue certainly isn't long enough to probe where I would like to. \n\nAs worked up as she already was, it didn't take more than a few lingering draws of her clit between my lips and drawing my tongue gently across the tippy-top. \"Oh My God,\" she cried out, spitting my cock out before she bit down on it. \"Fuucckkkk,\" she moaned, digging her nails into my ass cheeks, bucking her hips. \"There...there...there...ahhhhhhhhhhh!\" and we have lift off. I licked around her pussy as she quaked repeatedly. Having had enough, she gave my butt a swat and then pushed on my hip. I took the hind and rolled off and onto my back beside her. \n\nNeeding to cool down, Becky spread her legs wide, her right leg across my chest. I massaged her calf and thigh as she reached her right hand out and grabbed my cock and lovingly caressed it back into stiffness. \"This is quite the show your aunts getting right now,\" I whispered, envisioning the bore shot the camera had of Becky's happy pussy, red and dripping.\n\n\"Good...I'm glad,\" she mumbled, her hand still in slow motion.\n\n\"Yeah, if she's got a good zoom on that camera, she can see into next week,\" I said trying to be funny.\n\n\"What? Oh yeah; glad I shaved,\" and then giggling.\n\n\"Me too,\" which got me a gentle squeeze.\n\nWe lay there a minute and she had me good and hard,\" So can we give her one more scene?\" she asked.\n\n\"Well it won't be anything like last night's finale,\" I said; \"I've already cum twice this morning.\"\n\n\"Twice?\" she said, lifting her head enough to look over at my erection.\n\n\"Yeah, once in the coach after you guys left this morning and then again in the shower after breakfast.\"\n\n\"Lucky girl,\" she said, easing up and reclaiming her leg. On her side, she watched herself slowly working my cock. \"Sooo\" she said smiling, thinking about her aunt watching her niece with this beautiful cock in her hand, \"that means that you may not be able to cum again, but you should be able to fuck me until I can?\"\n\n\"I can almost guarantee it,\" I replied as I pushed myself up and pulled her on top of me. We kissed and talked, well aware of prying eyes. \"So how do you want it?\"\n\n\"Well,\" she paused like she was perusing a menu, \"let's start with doggy cuz that's my favorite and you can play with my ass and then we'll finish up on my back with you standing so we can give her a good shot of your big cock ramming my poor, innocent pussy!\"\n\n\"You are a dirty little girl,\" I growled, kissing her hard as my hands grabbed hold of her ass and held her tight. Becky was groaning as we wrestled on the bed of hay bales until she broke free and got up on her hands and knees, conveniently positioned for optimum camera viewing. She wiggled her ass at me as I approached.\n\nUp on my knees, I stroked my cock slowly and then nestled the tip against Becky's inviting slit. Her inner lips were spread and I easily collected her juices before slowly making my way inside. \"So good,\" she moaned as I inched my way inward. Stopping at intervals, I slowly fucked her, two or three strokes to that point before advancing further. She looked back at me, and the camera, as I made my way to the bottom of her tight pussy. She growled,\" So fucking big...I'm so full of cock,\" rotating her hips, grinding on me as I was buried to the hilt.\n\n\"Just fuck me a couple times,\" she whispered, a ventriloquist she isn't; \"I'm ready to cum already.\"\n\n\"Oh yeah?\" I barked, grabbing her hips and giving her a couple deep, slow strokes.\n\nShe looked back at me through strands of wild red hair and her eyes said, 'You wouldn't dare!' \n\nI just smiled and then began; long, slow, deliberate strokes. My cock was hard, but her undulating pussy had no effect. I remembered her mentioning her ass, so I gathered a bit of her essence on my thumb as my cock reappeared. I rested my thumb on her pink pucker and applied pressure, her pussy responded in kind.\n\n\"Unh, unh, unh,\" she grunted with each stroke, my thumb threatening to enter her ass, until I felt her inner walls constrict, choking my cock, drawing it inward, begging for my cum. \n\n\"I'm cumming goddamnit!\" and her pussy juices flooded over my cock. Her body shook as I reached underneath her belly to hold her upright. Her arms gave out and she lay there panting, her butt in the air with my cock still feeling the rumblings within. Her face, covered by strands of sweat-soaked hair faced the camera and I hoped her aunt could see the blissful look in her eyes. \n\nI slowly extricated myself and she moaned, feeling the emptiness, as I let her hips collapse to the blanket. I crawled to her side and she spread her legs wide, letting what cool breeze there was waft over her. \n\nI lay down beside her and she cracked her eyes open to look at me. I smiled devilishly; \"You fucker.\"\n\n\"Guilty as charged,\" I replied, brushing the hair out of eyes. \n\n\"I thought we were going to finish up with me on my back,\" she whispered softly.\n\n\"Who says we're done?\" Seeing my shoulders move, she craned her neck to look down at me stroking my still rigid tool.\n\n\"Fuck me,\" she moaned.\n\n\"My thoughts, exactly.\"\n\nWith surprising speed, Becky sprang to life, pinning me on my back and kissing me for all she was worth. My hands were all over her ass again and she squirmed when I began to play with her asshole again. I'm sure her Aunt Ginny sat upright in her office chair when she saw my finger slip deep into her young niece's precious ass. That move interrupted the kissing, Becky rolling away from me and then slipping off the bed and then standing upright.\n\nThe voluptuous redhead bent at the waist and shook her long hair, running her fingers through it before standing back upright, whipping her red mane back over her head. With legs spread wide, she beckoned me with a crooked finger. Ever obedient, (sorta) I made my way to the edge of the hay bale bed and stood up before her. \n\n\"You're a very naughty boy,\" she said smiling, my cock in her hands. She glanced up at the camera, getting her bearings and used my cock like a tiller on a boat and turned me ninety degrees. She locked eyes with me and slowly made her descent. Never losing eye contact, she laid kisses up and down my length, pausing to take my balls in her mouth. Her slow motion consumption of my cock caused me to stiffen even more and I could only wonder what the reaction was on the other end of the video feed. \n\nI started to get a little tingle, one I wasn't expecting, and I put my hands on both sides of her head to bring her to a halt. With dramatic flair, she slowly released me, inch by slobbery inch until I popped free from between her full lips. Giving my cock a quick parting kiss, she crawled back up until we were both upright. I leaned down and kissed her lightly, and then began to nuzzle her neck.\n\n\"I think we're ready for the finale; you ready?\" I whispered between kisses.\n\n\"I'll gladly take you and this cock anytime it's offered,\" she whispered back, my slippery cock in her hand. We parted and she took her place, seated on the edge of the bed, slightly off-angle to the camera. Resting on her elbows, she licked her lips as I approached her, her eyes moving from mine and then to my cock and then back again. Her pussy waited patiently between her widespread legs, too inviting to not take a little taste. I bent at the waist, putting my hands on her thighs and sampled her offerings. She squealed and then moaned as I tickled her clit with the tip of my tongue.\n\nI played long enough to get her juices flowing once more; \"Please, please,\" she moaned.\n\nI lifted my head and stared into her dark green eyes; \"Have you got any more for me baby? I want to watch your cock...I wanna watch you fuck me until we both cum. Can we do that baby; can we watch your cock and my pussy fuck each other till we can't take it anymore? Can we?\"\n\nMy cock visibly throbbed at her request knowing that the 'we' included her aunt who undoubtedly was glued to her monitor. I imagined the frisky cougar leaning back with her fingers furiously abusing her own pussy, imagining herself in her niece's place. \n\nSnapping back to reality, I stood straight, with cock in hand and brushed the length of her slippery slit. I grabbed her left leg and drew it up, her foot over my shoulder, her left ass cheek slightly off the bed, her pussy at optimum fucking level. Her right leg remained draped over the edge of the blanket covered bales, my cock resting at her opening, both of us obscenely exposed. Still propped up on her elbows she stared at our intersection while she chewed on her lower lip, impatiently waiting. \n\nShe drew in a big breath as I slowly re-introduced my hard-on. Our eyes were riveted on our joining; Aunt Ginny's were surely there too. Bottomed out once again, Becky blew out a big breath and looked up at me long enough to say, \"Fuck me baby, fuck me till I scream!\"\n\n\"You've got it baby,\" I said, grabbing her leg with both hands, drawing it in to my chest. We watched intently as my cock repeatedly drove deep before withdrawing, pulling her inner lips out, her pussy hugging my cock tightly. I grunted with each down stroke, reaching deeper each round; \"You're so fucking tight,\" I groaned as I struggled to back out.\n\n\"So fuckin' big,\" her eyes hooded but still focused; \"So fuckin' sexy baby, your cock, my pussy...Fuck, my pussy's so full...I love your cock...I love fucking you baby...I love you George!\" Her pussy tightened as she spoke those last words and my cock responded, expanding, stretching her.\n\n\"Jesus Christ George,\" she cried, bucking her hips, pushing with her elbows; \"I'm cumming baby, Fuck, I'm gonna cream all over your big, beautiful cock...Oh God George, I'm cumming!\" her pussy choking my cock. \"Cum with me baby, cum in my pussy...Oh shit...Give it to me...Give me your fucking cum now!!\"\n\nOn command, my cock swelled and somehow drawing deep from the reserves, I came inside her once again. I felt her juices on my cock head, the hydraulic pressure trying to push me out. Not willing to move, our combined offerings worked their way out until I felt the wetness on my balls, pressed tightly against her. My orgasm was strong, my thighs quivering. I doubt that I deposited a porn-worthy amount inside the ravenous red-head, but the climax was real as I'll bet Ginny's was at that very same moment.\n\nBecky collapsed onto the bed and I massaged the leg I'd never let go of until her pussy was done with me and let me go. \"Come here,\" she said with a raspy voice. Crawling up beside her, she threw her arm around my neck and kissed me lightly, too tired for much more than that. \"That was amazing,\" she said softly, playing with my hair. \"I came so hard; I thought I hurt myself, like I pulled a muscle or something.\"\n\n\"Well I'd never want you to hurt yourself, but yeah, that was amazing. I hate to say it, but I think I may be a bit of an exhibitionist after all. Knowing that your Aunt was watching us just made it different somehow. I imagined her watching us while she sat in her office, the blinds closed and the door locked; customers and staff just outside her door while she pleasured herself watching us.\"\n\n\"I was thinking the same thing,\" she said, giving me another soft kiss. \"And you know she'll watch it over and over; I know I would. When she's not around, I'm gonna see if I can find where she files our little home movies and make myself a copy.\" She looked up at me with those beautiful green eyes, now a little misty, \"If I can't have you, I'll at least have the video to get off on,\" and she sniffled.\n\n\"Hey,\" I said as I intercepted a tear that was making its way down her cheek; \"You're part of the family now, so we'll definitely be together again. Only problem I see is that the girls are going to want to keep you to themselves, so I may be the one outside looking in.\" \n\nShe smiled when I mentioned the girls; \"Yeah I love the girls; I love all of you. I've always had a pretty positive attitude, so I know that everything is going to work out. I'm still amazed that there doesn't seem to be any jealousy or anything like that with you guys.\"\n\n\"Well, that all goes back to Britt. She's the one that seems to keep it all together. She is an amazing woman and I count my lucky stars every day, thankful that she found me; literally picked me out of the crowd as it were.\"\n\n\"Yeah, it's like the best fairy tale ever,\" she sighed. We lay there silently for a minute before she let out another big sigh; \"Well, I guess we better get up and get this show back on the road.\"\n\n\"I suppose,\" I half pouted; \"Anyway, I'm pretty sure that I am out of commission for the rest of the day.\"\n\n\"Oh, I don't know about that,\" she said, crawling up over me, straddling me, her ass once again pointing directly at the camera in the rafters. She ran her tongue around my lips before kissing me; \"Your tongue still works, doesn't it?\" back to the kiss, her tongue checking in with mine. We kissed like horny teens for a couple more minutes and then gave in to reality. Her head propped up in her hand, her elbow slightly digging into my chest; \"Thank you for this morning,\" she said, \"Ginny and I will treasure it forever,\" she giggled and then sprang up and ran for the stairs, naked as can be.\n\n\"Hey,\" I yelled at the brazen redhead as she skipped across the concrete floor toward the wash area; \"you forgot your clothes,\" holding the bit of cloth and boots in the air.\n\n\"Would you be a dear and bring them down with you? You can just throw the blankets down and we'll shake them and fold them down here.\"\n\nOnce again, I could only shake my head in disbelief, and you'd think by now that nothing should surprise me with the bevy of beauties I was so lucky to be surrounded by. I gathered the blankets and gave them a cursory shake before launching them off the balcony. Becky was now in the wash area, hosing herself down, the horses looking on, probably wondering what came over all these people lately. \n\nI thought briefly about slipping back into my shorts, but the sight and sounds from below changed my mind; the cool water would feel real nice about now. I gathered up Becky's clothes once more and then mine and as I turned to walk to the stairs, I heard once again, the tell-tale whine of the motorized camera above. I probably shouldn't have done it, but I paused under the dome, looked up and winked before making my way to the stairs.\n\n**Meanwhile, back at the store**\n\nMiles away, Ginny was sitting in her darkened office, still bare-assed on her leather desk chair, recovering from the private show she had just watched. Sipping from a cool bottle of water, she was intently watching the well built stud who had just ravished her young niece cleaning up after themselves. While she was watching him begin to walk away, he looked her straight in the eye and winked. Ginny spewed water across the desk before turning the camera to watch his fine ass make its way out of view. She sat back and smiled, her finger again strumming her tired clit as she closed her eyes, imagining that big cock working its magic on her.\n\n**Back on the ranch**\n\nI made it down the stairs and sat our clothes on the bench and made my way to the wash area. \"Do my back please;\" handing me the hose. \n\n\"Anytime,\" I smiled. Realizing I was too tired to get too silly, I dutifully rinsed her backside, paying extra attention to the lower region.\n\n\"Oh, that feels good,\" she purred before turning around to let me give the flip side the once over. She giggled as the gentle spray massaged her. \"Okay,\" she said, stepping toward me, reaching out; \"Now I'll do you.\" I just smirked at her unintentional play on words, earning me a slap on the ass as I walked to the center of the sloped floor. Also tired from our romp in the hay, Becky was very polite as she rinsed the sweat off my tired body.\n\n\"There, that should do you,\" she said as she stopped and then drug the hose over to turn of the spigot. I went over and helped her wind the hose once more on the rack. She turned and wrapped herself around me once more and we kissed. ",
        "\"You're all wet again,\" I teased, rubbing my front to hers. \n\n\"I couldn't care less,\" as she squirmed against me in reply\n\n\"Do you want me to get a towel?\" I asked, still bundled in her arms.\n\n\"Nah, I'd rather just dry off on you,\" she laughed, rubbing around like a cat marking her territory. \n\n\"Works for me,\" I said, as I ran my hands through her long, wet red hair and down until I hand held both her ass cheeks and pulled them apart, letting the breeze coming through the big open doors do their thing. \n\n\"Oh god,\" she moaned as I passed my fingers over her tight little asshole. \"Okay,\" she said, pushing away,\" We better just finish up, or I'm gonna try and get one more round out of you.\"\n\n\"Party poop,\" I laughed as I did a little hip gyration, my cock doing its best imitation of a helicopter...well a helicopter on its side; anyway I got the desired laugh and we walked hand in hand to the other end of the barn to retrieve the blankets I'd thrown off the loft above. \n\nWe grabbed the first blanket and were standing opposite each other, flailing it around, knocking off the errant bits of hay; \"Oh, by the way,\" I said, as I brought my two corners together, \"I winked at Ginny as I left the loft.\"\n\nHer eyes nearly popped out of her skull and she dropped her end of the blanket; \"You what?\"\n\n\"Yeah, probably not one of my smarter moves, but as I was gathering up our clothes, I heard the camera moving again, so I figured she was checking out,\" and I did a couple silly poses, the blanket still in my hands, \"you know, the goods, so just as I was leaving, I looked right up at the camera and gave her a big ol' wink and a smile.\"\n\n\"Holy shit,\" she proclaimed as she bent down to retrieve the blanket and she began to laugh; \"Well I guess the cat's out of the bag, she knows that we know.\"\n\n\"Au contraire, mon amour\" I said in a terrible French accent, \"She knows that I know, but I don't know that she knows that the rest of you know. She may suspect that we all do, but anyway, at the time, it just seemed like the thing to do.\"\n\n\"Well, it will be interesting to see if she brings anything up, \" Becky said as she walked her half up to me and leaned in for a kiss; \"You're a real trouble-maker, aren't you?\" stealing another kiss.\n\n\"Takes one to know one,\" I smiled as I took the blanket from her, folded it once more and set it aside and grabbed the next one. \n\nWe finished up with the blankets and checked the horses feed and water and then headed back to the house after we begrudgingly put our clothes back on. The girls had finished straightening up and washing and drying the towels that we'd used. \"The house looks great guys,\" Becky blustered; \"Thanks for doing it; Aunt Ginny will be very happy.\"\n\nBritt sidled up to Becky and whispered, \"I'll bet she's real happy; took you guys a while to fold a few blankets.\" She gave the blushing Becky a knowing wink and then a kiss on the cheek.\n\n\"I'll fill you in later,\" Becky whispered back before turning to the rest of us; \"So I think we have everything in order. Do you want to hang out here some more or are we ready to head for the barn?\" giggling at her own joke.\n\n\"Well, I don't know about the others,\" Gina answered, \"but I think I've had all the great outdoors that I need for a while.\" The others nodded in agreement, so we did one more check around the house and locked it up and headed to the motor home.\n\nKate broke into a trot and sped past the coach, yelling over her shoulder,\" I just want to say good-bye to Don once more.\"\n\nThe girls all laughed; \"Good thing we don't have any open space at home,\" Britt said as she opened the motor home door, \"or we find ourselves with a pet donkey.\"\n\nBecky laughed and then goosed Britt as she stepped up to get in the coach, \"You guys can visit anytime you want; I'm sure Ginny would be more than happy to have you come up. I know she feels a little guilty that she doesn't spend as much time up here as she'd like.\" \n\nShe was right on Britt's tail as she went up the stairs and Gina was on hers. The redhead squealed as Gina leaned in and gave her a little nip on one butt cheek as she ascended the stairs. I was fourth in line and Gina stalled in front of me at the entry. Pausing, she turned to look down at me and then wiggled her nearly covered ass. \n\nFinally catching on, I kissed both cheeks and then gave her a little slap; \"Get this sweet ass on the bus.\" Satisfied, she growled at me softly and joined Britt and Becky on the couch. I stepped into the command chair and turned the key and the beast roared to life. Looking up at the dash to check the gauges, Kate caught my eye out the windshield. Standing at the corral fence, she and Don seemed to be carrying on a conversation. Kate was leaning down, giving Don a good look down the front of cropped muscle-T she wore. She was chattering away, scratching him between his ears and once again, the horny little burro was sporting an impressive woody; Kate was a regular donkey-whispering tease.\n\nAll the gauges looked good and Britt did a quick walk-thru and told me that all the hatches were battened down and we were good to go. The little one was still in deep conversation with the donkey so I hit the air horn. All the girls jumped, inside and out when the triple horns on the roof sounded. Don skittered away and Kate turned and gave me a dirty look. I just put up my hands and shrugged my shoulders like I didn't know they would be that loud. \n\n\"Holy cow,\" Becky laughed, \"Are those turbo horns?\"\n\n\"Yeah,\" I said, kind of embarrassed; \"I forgot how loud they were. I hope I didn't spook the animals.\"\n\n\"Nah, you're fine,\" and then Katie came flying through the door.\n\n\"You scared the crap out of Don and me too; that wasn't very funny!\" she fumed.\n\n\"Hey, I'm sorry sweetie,\" I said, \"I didn't do it to scare you. I really forgot how loud the horn was.\"\n\nBecky pulled Kate into her lap and hugged her; \"Don's okay baby, they spook easily. I'm really glad Don made such a good friend this weekend. We'll have to make sure that you come up whenever you can to see him.\"\n\n\"I'd like that,\" our little one said before turning and catching Becky off-guard with a toe-curling kiss. \"That's for a great weekend,\" she told the flustered ginger.\n\n\"Any time,\" she said, hugging her tighter.\n\n\"Well, let's get this show on the road,\" so I threw it in gear and see-sawed around until I had us headed to the gate.\n\n\"Here,\" Gina said as we pulled up to the locked gate, \"You've got your lap full; give me the key and I'll get it.\"\n\n\"I think my purse is in the back somewhere; the key is in it.\"\n\n\"If you don't mind me digging around in your purse, I'll get it,\" Gina said on her way to the back.\n\n\"I don't have any secrets, at least not anymore,\" she giggled. Britt leaned over and gave her a quick kiss and a smile.\n\nWe got through the gate routine and were back on the road. I had the front to myself as the girls were clustered together on the couches. There was a lot of giggling and laughing and whispering and I heard my name a couple times but it was clear that this was a 'girls only' confab. At one point I heard a loud 'What?' followed by a 'He what?' \n\nA couple minutes later, Britt came up front with a bottle of water and knelt beside me on the floor; \"So, two more times in the barn huh?\" I didn't really respond as I was 'concentrating on the road'. She ran her hand over my thigh and then into my crotch; \"This little guy must be all tuckered out.\" She continued to run her hand over my awakening cock until she had me about three-quarters of the way there. \"And that little stunt, looking up at the camera and winking...well I thought that was great; we should have all done that last night.\"\n\n\"Yeah, well,\" putting my hand on hers to slow her down; \"last night I wasn't really clear on what Becky had in mind. I think originally, her idea was to make it look like Ginny really had pulled one over on us and was truly a voyeur, you know, watching our little orgy without us knowing. But then, I don't know; I don't really think Ginny would think we wouldn't notice the new cameras and she may have found out that Becky had seen our first visit to the hay loft. I think it was kind of an admission and an invitation for us and we could choose to do what we wanted; God knows there were plenty of places to fool around where there weren't any cameras.\"\n\n\"Yeah,\" she said, squeezing my hard-on, \"I wouldn't mind going back and making love on the back lawn down by the creek. That was gorgeous, under the trees and all.\" She sighed and lay her head on my leg; \"You and me, naked all day, making love under the trees, playing in the creek, making love again and again...yeah, I could do that.\" \n\nMy cock throbbed in her grip and she looked up at me and smiled, \"I love you,\" she said softly.\n\nI ran my hand through her hair before caressing her cheek; \"I love you more.\"\n\n**Monday morning early, real early**\n\nWe dropped Becky at her car behind the store yesterday in the early afternoon. She was so tired that she wanted to just sneak home for the rest of the weekend and she said she'd come by and pick up the clothes and such later in the week. The girls and I didn't realize how tired we really were either, so we just pulled the coach up to the house, shut her down and called it a week. Gina and Kate disappeared into their room and Britt and I went directly to ours, stripped off our clothes and headed to the shower.\n\nAs showers go, it was pretty uneventful, although I still had my hair washing duties to perform and she couldn't help trying to get a rise out of me, grinding her soap-slick butt on my junk. We toweled off and did a half-ass drying job on her long blonde hair and then we collapsed on the top of the bed and were out for the count in mere minutes. \n\nI woke up and it took a second to get my bearings as something wasn't normal. Most mornings, hell, every morning that I can remember since the girls entered my life, I have awoken spooning one luscious body or another, my morning wood nestled in the warm crack of her ass and my arm draped over her with the nearest available breast in my hand. This morning though, I felt the warmth of a body on my back, soft breathing on my neck, and a delicate hand wrapped around my dick; role reversal I could get used to. \n\nI had no clue what time it was because I was facing the wrong way this morning and it really didn't matter as I really needed to take a leak. I carefully pried the slender fingers off my cock and slipped out from under her arm. Sleepy grumbling ensued but was over by the time I made it to my feet. I turned to see the love of my life sleeping soundly, her arm having wadded up the sheets as my replacement. \n\nAfter making my way to the head, peeing, shaking and then a cold rinse on my face, I padded back to the bedroom and looked over at the red glowing numbers on the bedside clock, just after three a.m., and I'm wide awake and refreshed. I didn't try to calculate how long we'd been asleep, but it was a while and evidently we needed it. I could have crawled back in bed and claimed my rightful spot, snuggled up to her backside, tit in hand, but I knew I'd just lie there, or get myself in some kind of trouble.\n\nI pulled a pair of boxers on and quietly made my way to the kitchen. The lights were on and Gina, wearing only the tiniest of thongs was standing at the counter setting up the coffee maker. I wasn't my stealthiest in the morning and she turned and whispered, \"Good morning.\"\n\n\"Morning to you,\" I whispered back as I walked up behind her and hugged her from behind. \"What are you doing up at this ungodly hour?\" moving her long brunette aside and kissing her neck.\n\nShe purred and rubbed her round ass into my crotch, still futzing with the coffee; \"I guess I had enough sleep and I was just lying there, thinking about starting back to school today and,\" accentuating her grinding, \"this weekend.\"\n\nI was getting harder by the second and Gina was moaning softly, coffee making forgotten. I moved my hands slowly up over her belly and took her d-cups in hand. Her nipples were stiff and proud as I toyed with them. Reaching back, she grabbed my hips and pulled me tighter to her. \"You know, I didn't get much of this,\" she said, moving one hand between us, latching on to my stiffness, \"this weekend.\"\n\nGina turned in my arms, now face to face, crotch to crotch. Her deep brown eyes pierced mine, sending a signal to my nether region; she smiled and worked her barely-clad sex against me, smiling bigger as she felt my cock respond. \"You know,\" she said, lightly kissing me, her lips soft and warm; \"the first day of classes is always so stressful, running around campus, finding the right room, taking notes and then worrying about whether you should have signed up for the class or not.\" She landed a bigger kiss this time, her tongue working its way to mine. My hands were appropriately grasping her bountiful butt and we ground against one another. \n\n\"And now,\" breathing hard, catching her breath, \"now I have to think about this,\" reaching between us, slipping her hand between me and my boxers, \"this big, beautiful cock.\" She kissed me again, hard; my cock now equally as hard as she ran her hand softly up and down. \"I had a great time this weekend, but I'd have liked a little more one-on-one time with this,\" squeezing tight, \"and you.\" \n\n\"So, what do you propose?\" I asked, slipping my fingers deep into the crack of her ass; \"I'd hate to think about you stressing all day.\" Her moaning grew louder as I grazed my fingers across her tight rosebud, easing by, my destination; her anxious pussy. \n\n\"I think you know,\" spreading her legs a little further, giving me clear access, my finger sipping within the wet folds of her pussy, \"Fuck...what I want,\" settling down on my slippery digit. \n\nI stroked her hungry slit a few times before drawing my finger out. I held my sex-slickened finger before her eyes. She licked her lips and we each reached out with our tongues and sampled her. She grabbed my wrist and claimed my finger for herself, taking it between her lips and sucking gently. Her eyes glistened as she sucked, my cock grew envious and she released my clean finger; \"Living room,\" she panted.\n\nI followed close behind, my hand never leaving one butt cheek or another. \"Sit,\" she commanded, pointing to the overstuffed leather couch. I obeyed, settling in; she nudged my knees apart and leaned in and grabbed the waist band of my boxer; \"Lift,\" the next mono-syllabic command. Once again, I did as I was told. My cock sprung free, waving in the wind as she worked the under-garment over my legs and feet. I made to stand with the intent of relieving her of what little she wore; \"Stay,\" pushing my chest as she sunk to her knees. \n\nShe took my hardness in her hand and admired it, running one finger up from my balls along the underside. Stopping just below the crown, she flattened her finger out and stroked it in place. The feeling sent shivers up from my toes and she smiled before leaning up and taking the tip between her lips. I felt her tongue dance around the head, flicking at the opening at the very tip. I wanted to take her head in my hands and direct her but something inside told me no. \n\nReleasing her hold, her hands slid up my thighs and onward as her mouth descended. As her hands reached my pecs, her lips met my balls. My cock throbbed as I felt her swallow, her throat clutching my cock. Gagging slightly, Gina made her way back to the top and released me, long strands of thick mucus stretching from my tip to her lips. \n\nI reached out for her, but she stood and took a step back. Slowly she turned, her back to me; she bent at the waist before reaching back and slowly sliding her bit of panties down, letting them slip to her feet. Reaching back, she opened herself to me, her anus, pink and puckered, winking. Her pussy lips blossomed, revealing her bright pink core, wet and inviting. She looked over her shoulder and glanced at my hard-on; I flexed, eliciting a giggle. \n\nTurning once more, she easily stepped up onto the couch, straddling me and not stopping until her pussy was parked square in my face. She adjusted as I latched onto the back of her thighs; \"Eat.\"\n\nHer pussy was wet and sweet, like an over-ripe peach. My tongue frolicked in one of my favorite playgrounds, slipping between the folds, dipping deep inside, gathering her plentiful nectar. Gina was pushing on the wall behind me, working her sloppy puss on my tongue until it strayed, coming in contact with her sensitive bud. I lapped at it furiously until she pushed back, denying me.\n\nMy hands slid up to take control of her ass while she reached down and place hers on my shoulders. She squatted slowly, pausing to give me time to kiss and admire what passed before me. Pausing to let me suckle, she reached back and took my still wet cock in hand and expertly guided me in. Throwing her head back, groaning as she took me deeper, I drew her nipple into my mouth and sucked like a new-born. \n\nShe rode me until doing the squats began to burn. She shifted until she was on her knees and settled in, taking all of me. My hands still had a firm grasp of her ass, but we were now eye to eye. I gave her posterior a squeeze and she willed her pussy to reciprocate. We started a rhythm, slow and steady, watching one-another. She was chewing on her lower lip, occasionally slipping the tip of her tongue out. I playfully nibbled at her lips, waiting to catch her tongue. Giving in, she surrendered, my tongue wrapped around hers. We exchanged breaths as my cock and her pussy played the same game. \n\nThe end was near and we broke our kiss, needing fresh air. Her forehead rested on mine and she arched her back, giving her a view of our connection. Her body reacted to the visual and her eyes returned to mine; \"Love me,\" she said breathlessly. \n\nMy cock responded to her plea and I held her tight and we fucked like ravenous rabbits. The leather beneath us protested, pushing back as we drove each other to a crashing crescendo. Heads on each others shoulders, we grunted as her pussy strangled my cock as it tried to drown her from within. The rumblings slowly subsided as both sides surrendered. Still breathing heavy, we nuzzled one another, kissing and nipping playfully. I ran my hands up and down from her beautiful butt to her sturdy shoulders.\n\n\"Hot,\" she said softly as she leaned back, her tits reluctantly parting from my chest. She blew a cooling breeze. I contributed but it wasn't enough and with a sad sigh, Gina sat up slowly, gazing down as my semi-rigid self was revealed. Anticipating a flood, she quickly slipped her hand between us and we both watched as our gift to one another dribbled out from within. It was an impressive amount, nearly overwhelming her cupped palm. Bringing her hand up, she sampled it with the tip of her tongue before bring her lips to hand and sucking up our shared blend. \n\nSmiling, she showed me her empty hand and then took my head in her hands and locked her lips to mine. Her tongue led the way and not surprisingly, I tasted her gift, sharing ourselves. She jumped, not expecting my cock to react, slapping her sex in mock retaliation. The kissing continued until our gift was consumed.\n\nGina slid back on her knees, letting the air circulate. Her butt still on my knees, she smiled at me; \"That makes today a good day no matter what happens now; thanks lover.\" She slid off to the side and kissed me once more before leaning down and taking my cock in her mouth, giving it the once over. \"There,\" she giggled, \"nice and clean.\" She gave me another quick kiss and then scampered back to the bedroom as I watched her bubble butt bounce happily behind her.\n\nI retrieved my coffee, snuck quietly into the bedroom and got dressed. I gave sleeping beauty a kiss on the cheek and then headed out to work. It was way too early for anyone else to be up and around, so I spent a few productive hours at the office before hitting the road to visit the couple remaining jobsites we had.",
        "**Monday, High Noon**\n\nI was sitting in my truck under a large tree that reminded me of the sprawling oaks at Ginny's ranch. This one wasn't an oak, and it wasn't full of noisy squirrels, but it provided plenty of shade in this park's otherwise barren parking lot. I'd stopped at one of my favorite deli's and was about to lay into my Deluxe Italian sub when the Bluetooth busted in.\n\nPoking the little button on the side of the device, \"This is George.\"\n\n\"Hey, cowboy,\" Britt said in a passable Texas twang.\n\n\"Well howdy, Darlin',\" I replied, doing my best John Wayne...Sorry Mr. Wayne.\n\n\"So how's your Monday been so far,\" she giggled; my Britt was back.\n\n\"It's been okay I guess.\"\n\n\"Yeah, better than okay I'd guess. Gina left here for school whistling, happy as a clam and Kate was a nervous wreck.\"\n\n\"Yeah, well...\"\n\n\"You don't need to tell me anything. Gina didn't either, but I know my girls,\" she said, implying, but not.\n\n\"So,\" trying to change the subject; \"Don't you have classes today?\"\n\n\"Yeah, mine are later in the afternoon. I think Gina and Katie have them scattered throughout the day, and with Katie auditing most of hers, it will take a couple days before we get our schedules all hammered out.\"\n\n\"Good,\" I continued; \"Like I said before, school is your guy's number one priority. Anything else we'll work around your schedule.\"\n\n\"I know, baby,\" she mewed, \"and we all appreciate it more than you know. I do know that all my classes are Monday thru Thursday. I think that professors like their three-day weekends when they set up these classes,\" giggling some more. \"Anyway, the real reason I called, other than to hear your voice is to let you know that Becky is coming by tonight after she gets off work at eight. I assume she's coming to pick up the clothes and all and I told her we could probably have some proofs on a flash drive for her to show Ginny.\"\n\n\"Yeah, that's no problem,\" I said. \"Hey, did she mention anything about her aunt and our little show?\"\n\n\"No,\" Britt laughed; \"Ginny called in just before Becky called me. Evidently Ginny is feeling a little under-the-weather this morning and told Becky she'd try to make it in later. Becky's guessing that she probably wore herself out watching her private porn over and over last night. She was laughing and still seemed real happy about what we did.\"\n\n\"Well I'm glad and I'll bet you dinner out that Becky will spend some part of her morning trying to access the camera feeds on Ginny's office computer. She really wanted a copy of yesterday for herself.\"\n\n\"Yeah,\" Britt said excitedly; \"I'd like to see how we looked on video too...or maybe not; I'll bet my ass looks ginormous on video,\" now pouting.\n\n\"Your ass could never look anything but perfect,\" I assured her, \"but I'm not too sure I want to see myself...that can't be pretty.\"\n\n\"Don't kid yourself there, Stud,\" she responded. \"I'm not the porn authority Katie is but she's always saying that you could make a fortune doing pornos. According to her, none of those guys that do it are near as handsome and built as you are; her words exactly.\"\n\n\"Yeah well, that was kind of fun this weekend, but I don't think I'd be comfortable doing it for just anyone to see and I sure as hell don't need it for the sex; you guys wore me out this weekend.\"\n\n\"Yeah, well the way Gina walked out of here this morning with a smile on her face and a bounce in her step; I'm betting you found a little in the old reserve tank.\" \n\n\"Well, she was already stressing about school at three in the morning, so...\"\n\n\"Hey, like I said,\" she interrupted, \"You don't need to say a word, I'm just glad that you were able to help out. Anyway lover, I've gotta jet, so I'll see you later; Love you!\"\n\n\"Love you more baby,\" and we disconnected.\n\n**Mid Afternoon**\n\nWith the construction company work winding down, I found myself with a couple extra hours left over at the end of the day. Granted, I started at least that many hours early this morning, it still felt odd to be able to just head for home before all the rush hour traffic set in. \n\nI punched my remote and waited until the massive sliding door opened enough to let me into the warehouse/studio/home. Mine was the only vehicle in the place, except for those from last week's shoot and our massive home on wheels. I was taken back briefly to when I did this everyday; arriving to an empty warehouse and home. I was thankful that I overbuilt my home with the extra bedroom and such, but I never in my wildest dreams would have guessed who would be sharing the house with me.\n\nI thought that it would be kind of nice, you know, to have some peace and quiet. I walked through the kitchen, grabbing a beer before I shucked my clothes and stepped into the shower to wash off the day's collection of dust and car exhaust. It didn't go un-noticed how quickly I was done with my shower, no long heads of hair to wash or legs or pussies to shave; damn boring shower.\n\n\"Oh well, \"I said to no one as I dried off. I ran a list of things through my head that I'd try and accomplish before the girls came back from school. I started to dig around for a fresh pair of boxers and then it just hit me; \"Fuck it,\" again to no one, \"I declare this a Naked Day.\" \n\nIt was my first time proclaiming a 'Naked Day', a tradition imposed by my girls where upon proclamation, all those within the designated area were to go about their day sans clothing. I looked at myself in the mirror, smiling at myself, congratulating me for declaring this day of freedom. Sadly, it was a small celebratory crowd, a crowd of one, at least for the moment.\n\n\"Silly shit,\" I said once again to the empty room, \"But fuck it, it feels good to be naked.\" \n\nConvincing myself that I wasn't really a silly shit, and damn it, it is my house, my warehouse; if I want to wander about with my dick wagging like a happy dog's tail, then why not. I downed the rest of my beer and grabbed another before going out into the motor home and gathering up my camera, laptop and the numerous memory cards we'd filled this weekend. On up the stairs to the office/studio that looked out over the cavernous warehouse. I booted up the computer and sat my ass down on the cold leather seat and opened a new file and began my download. \n\nDownload complete, I opened the new file and created a couple of sub-files and then began sorting the shots from the screen of thumbnails. Most were pretty obvious as to which folder they belonged; as small as they were, it didn't take much to discern naked from clothed. I polished off the second beer and switched to water from the mini-fridge here in the office.\n\nNow that we were sorted, the next order of business was to pull a few shots out for Becky to show her aunt, our client on this shoot. It was pretty easy to pick out a dozen or so representative shots, making sure that the models and the backgrounds varied. Overall, I was pretty pleased; the shots I looked at weren't going to need much in the way of touching up.\n\nThat done, curiosity got the better of me and I opened the folder that had the private 'playtime' photos of the girls and me. Some of them, those specifically in the barn, also existed in video form. Becky's Aunt Ginny had been watching the going's on remotely through her newly up-graded video surveillance system. They all clearly fell into the X-rated category, although some were quite artful I thought. My cock however didn't care if they were artsy or not and I was soon absentmindedly stroking a hard-on as I scrolled through the shots.\n\nMuch more and I'd have made a mess on the floor, but was interrupted by the sound of the main warehouse door grinding open. Like a teenager with something to hide, I closed the file and gathered myself up, as it were. Without looking over the short walls of the office, the sounds of squealing tires on the concrete floor told me that Gina had arrived. \n\nThe big sliding door was closing as she stepped out of her car and then reached in and pulled out a couple of heavy looking bags; looks like someone had been to the campus bookstore. She gave the car door a hip check and turned to walk to the house.\n\n\"Hey good lookin',\" I shouted from above.\n\n\"Shit,\" Gina said as she jumped, looking for where the greeting came from; \"You scared the crap out of me,\" after spotting me high above. \n\n\"Sorry 'bout that,\" I replied as I stepped over to the stairwell. She could see one side of me, from head to toe with the important parts still sequestered behind the partition.\n\n\"Do you have any clothes on?\" she asked with an evil grin.\n\n\"No,\" answering proudly; \"I came home early, took a shower and decided that I just wouldn't get dressed, so I declared it a 'Naked Day'.\"\n\n\"You declared it a 'Naked Day' and you were the only one here?\" she laughed.\n\n\"Yeah, well...well, it made sense at the time and now,\" pausing for effect, hands on my bare hips,\" all those who enter must abide and be naked too!\" I tried to say it with a bit of majestic flair and it only caused Gina to laugh that much louder. I love to hear my girls laugh...and moan too, but a woman laughing is just the greatest thing.\n\n\"Well, you won't get any argument out of me,\" she said, setting her book bags on the floor and peeling her State t-shirt of over her head. Her perfect D's were nicely settled in a lacy bra, a necessity at times. Stuffing the shirt in one of the bags, she picked them back up; \"The shower sounds like a good idea too; I'll join you in a few, can I bring you anything?\"\n\n\"Just grab yourself something to drink if you want anything but water.\"\n\n\"Sounds like a plan,\" she laughed again and lugged her heavy load into the house.\n\nI sat back at the desk and began to go through the G-rated photos, touching up here and there, a little cropping; that kind of thing. It wasn't long before Gina came bounding up the stairs, her long brunette hair pulled back in pony tail, hanging halfway to the crack of her ass. Her breasts looked relieved to be free once more. A bottle of some sort of juice in one hand, she wrapped her other arm around my neck and sat in my lap, giving me a big kiss before offering me a sip. She wiggled around in my lap, teasing; \"This seems familiar,\" she smiled. \"Seems like only this morning I was sitting in your lap.\"\n\n\"Yeah,\" I answered, my arm around her, playing with a stiffening nipple; \"But you weren't doing as much sitting as you were bouncing, if I remember right.\"\n\n\"Yeah,\" she purred as I ran my other hand over her belly and down the side of her long, muscular leg; \"I want to thank you again for this morning. You don't know how much easier you made my day except for one professor who decided to actually start lecturing today and I kinda zoned out, thinking of you and your gorgeous big cock sliding up and down inside my wet pussy.\"\n\nShe said it for effect and was rewarded as my cock poked her, trying to find its way. Giggling along with a little moan, she squirmed until the head of my cock was captured between her thighs, close but not quite home. \"So what are we looking at?\" she asked, swiveling to look at the monitor.\n\n\"Well,\" I said, spinning the chair with my foot till we were both facing the big screen; \"I was just beginning to go over Saturdays shots.\" I reached, having to detach myself from her firm tit, for the mouse.\n\n\"Here,\" she said, grabbing my hand and putting it back and then reaching for the mouse,\" I'll get it. Are we just scrolling through them?\"\n\n\"Yeah,\" I said, pinching her nipple between two fingers and nibbling on her shoulder; \"Go ahead and see what you think.\"\n\nWe actually did scroll thru a number of the shots and she would make comments and ask questions as we went. I continued to caress and play, not really trying to start anything, just enjoying the moment. \"So how were your classes?\" I asked as she continued to scroll.\n\n\"Okay I guess. This semester is a lot more of the G.E. stuff, you know the stuff we thought we'd already learned in high school, but I have a couple classes that are intro's to my major, so those are interesting.\"\n\nWe sat for a few more minutes when the sound of the big door echoed through the building. \"That's probably Katie,\" she said. \"I don't think we'll see Britt for another couple of hours,\" she said suggestively, then twisting around for another kiss before bounding out of my lap and making for the outside wall. I joined her, my hand resting on her butt cheek, causing her to reach down and latch onto my member. We waited until the little one was out of her car and her arms full before we shouted down at her.\n\n\"Hey lover,\" Gina yelled, having the desired effect. Kate screamed and dropped her load before turning to glare at us, then doing a double-take seeing Gina's bare breasts and my bare chest above her. \n\n\"Lover-boy declared it a 'Naked Day',\" Gina said before Kate could utter a word. \n\n\"That's great, but you still scared the snot out of me,\" looking for a little sympathy but Gina wasn't falling for it.\n\n\"Well, get that sweet little ass of yours inside, take a quick shower and come join us, we're looking at Saturday's pictures.\"\n\nKate's eyes widened and she broke out into a big smile. \"Okay, give me a minute and don't start on the dirty ones until I get up there,\" she commanded before picking up her bundles and sprinting to the door.\n\nGina pulled up another chair and watched as I touched up a couple of the shots. Her long legs were crossed and she ran her bare toes up and down my calf, seemingly unaware. Again, the girl asked questions and made comments on what she thought were the better pictures for print and which would work better for an on-line catalog. \n\nWe heard the front door slam shut and then the quiet footsteps as our diminutive roomy made her way up the stairs. As always, she looked stunning naked; perfectly proportioned for her height with long black hair that reached the back of her knees. Tied up in a pony-tail like her bedmate, she sauntered over to us, wine cooler in hand. She stopped at Gina's side first and leaned slightly and gave her girlfriend a deep kiss, playing with the Amazon's tits with her free hand. That greeting complete, she stepped over in front of me, sat her bottle on the desk and grabbing my shoulders, she put her lips to mine and kissed me hard. Her tongue slipped between my lips and found mine. Meanwhile, my hands found her perfect B-cups and played as she moaned into our kiss. \n\nThat greeting complete, she turned and sat square in my lap, facing the monitor; \"So how do they look?\" I turned us enough to re-acquire the mouse and scrolled through some of the customer photos. \"They turned out nice,\" she said, taking another pull off her drink; \"I think Becky's aunt will be happy with those.\" \n\n\"And now,\" she giggled, squirming her bare butt on my lap; \"Let's look at the good stuff!\"\n\nGina rolled her chair up against ours and took control of the mouse. She clicked around instinctively until she found the folder she wanted, clicked on the first image and then set it in slideshow mode and sat back in her chair, throwing one long leg up on the desk. The show began and the girls giggled and commented on each shot as they popped up on the screen. Glancing over, I watched as Gina's hand strayed between her legs and she rocked slowly in her seat. \n\nKate twisted in my lap and threw one leg over the arm our chair. She grabbed my hand which had been contentedly playing with her tits and moved it down until it rested on her pussy which radiated her excited state. The girls continued to narrate each frame as it appeared, turning it into a game as each picture only stayed on the screen for about five seconds. \n\nMy fingers teased Katie's sex, occasionally slipping inside her, gathering her juices and then back to her stiff clit. Their play-by-play became choppy and stuttered as their excitement mounted. Kate now held my wrist, making certain that I didn't leave her high and dry. Gina's lower arm was now a blur as she fingered herself, the visuals of themselves on the 24\" monitor driving them to climax. \n\nWith uncharacteristic silence they both shuttered to body shaking orgasms. Kate's tight pussy strangled my middle finger, drawing me inward, her juices washing over my digit. They both sat silent, the slideshow still flipping through frame after frame until Kate finally broke the silence.\n\n\"Fuck that was good,\" she sighed, allowing me to withdraw. I moved my hand up and offered her my wet finger. Happily, she sucked on it, enjoying her own essence. Beside us, Gina mimicked her girlfriend, taking two of her own fingers and lapping up her inner goodness. My cock was overwhelmed and Kate giggled again as she felt a familiar prodding at her butt. She squirmed a bit more and then slid off my lap. \"Well,\" turning to face me and looking down at my stiff cock; \"I don't know about you Gina, but I'm kinda getting hungry.\" \n\nGina stood up beside her and looked down into my lap. They both licked their lips and I began to push my chair back, making room for my two lovelies at my feet. They looked at each other and smiled and as I was preparing myself mentally for what I was sure would be a nut-busting b.j., the girls burst out in laughter and scampered toward the stairs. Kate paused at the top and turned to me; \"Britt'll be home in a bit and it is dinner time, so we'll go get something thrown together. You can come help if you want,\" and then she busted up again and sprinted down the stairs, her busty companion right on her tail.\n\nI couldn't help but laugh at their antics; like a couple of little kids. I stood up and looked down at my hard-on, ready to play, but no one to play with; \"Maybe later little buddy,\" I said out loud. Wandering to the stairs, I told myself that it may be time to grab a little vacation; talking to one's dick cannot be a sign of good mental health.\n\nThe girls were busy in the kitchen, chattering away about the classes they'd had that day. It sounded like Kate was having no problem getting into the classes she wanted. Those big brown eyes probably didn't hurt the effort. A big bowl of pasta with fresh tomatoes and parmesan grated on top and a little salad on the side. With impeccable timing, we heard the big door once again rumbling as it opened.\n\n\"Good timing,\" Kate said as she poured the hot pasta onto the cold tomato concoction and stirred it together; \"I'm starving. Gina, baby, will you grate the cheese in here while I stir?\"\n\nOnce again, I longed for a camera. The two of them side by side, their bare backsides and long hair, shapely legs and grabable butts; it was every man's domestic wet-dream. Standing there admiring the view, I didn't hear Britt approach from the rear. She leaned in from behind and wrapped her arms around me and nibbled at my ear; \"Nice view,\" she said as her hands snaked down over my belly until she found my cock. \"So why is everyone but me naked?\" She whispered, slowly stroking my hard-on.\n\n\"Well,\" I whispered back, wondering when the chef's would realized that Britt had arrived; \"I got home early and no one was here, so after my shower, I decided that I didn't want to get dressed, so I declared it a 'Naked Day'.\"\n\n\"Makes perfect sense,\" she purred, nibbled on my neck before releasing me and spinning me around; \"So how 'bout a hand?\" She held her hands over her head and I grabbed the bottom of her t-shirt and worked my way up. Her lace bra tagged along with her tight shirt and I paused to sample her ample breasts. Her nipples stiffened as my tongue toyed with her. I worked my way up until her clothes had her handcuffed above her head. Her blue eyes darkened and I thought we'd break each others front teeth as we went in for the kiss. Britt groaned with frustration as I held both her hands above her, pushing her tits against my bare chest and trying to hook her leg around mine to draw us nearer. \n\nAs we kissed, stray hands danced over us. Her moaning intensified as unseen hands pulled her pants down to over her perky ass. Other lips placed kisses on us as we continued our own oral assault on each other. Soft warm bodies wrapped around us in a group hug and grope until Kate's hunger got the best of her and her little belly growled like a lion. Gina laughed out loud and Britt and I giggled in our kiss until we had to break.",
        "\"I think we better feed Katie,\" I said, \"that was a pretty angry sounding growl.\"\n\nKate's face blushed with embarrassment that only lasted a second; \"Yeah, so let's get with it. Gina, you get the dishes, Britt, you get the drinks and George baby; you just sit your fine butt down and stay out of the way,\" giving said butt a swat.\n\n\"Yes sir,\" I saluted and obediently took my seat. The others kidded the little dictator as they set about their tasks as Kate served up the pasta and salad in big bowls and put them on the table. \n\nWe sat around and ate and drank; the girls talking non-stop about their classes and what the upcoming semester was looking like. Time flew on by and Britt glanced up at the clock; \"Oh hey girls, I didn't tell you but Becky's coming by in about a half hour to pick up the clothes and gear from this weekend and pick up a flash drive of some shots for Ginny to look at.\" She gave me a questioning look for confirmation.\n\n\"Yep, I have a dozen shots or so that are representative of what we shot. They look real nice if I do say so myself.\"\n\n\"Well, I should hope so,\" Britt replied, standing up and grabbing her and my plates, \"considering what you had to work with,\" turning her back and shaking her fabulous ass. I unsuccessfully took a swat at her, missing by a mile. \n\n\"Okay,\" Gina said, grabbing more dishes; \"we'll get cleaned up in here. Britt, you can go grab a quick shower if you want.\"\n\nMy blonde put her hands on her hips and pouted;\" Are you saying I stink?\"\n\n\"No,\" Gina laughed; \"We all had showers when we got home. It felt good after being in class all day, and well, Becky is coming over and it is 'Naked Day' so I just figured...\"\n\nBritt's eyes lit up; \"Ooo, that's right; this could be fun. Alright, thanks for dinner and cleaning up; I'll be quick.\" She turned to head to the bedroom and turned,\" You can come help, baby,\" she said, reaching her hand out to me.\n\n\"Oh no,\" Katie said, stepping behind me and putting both her hands on my butt and pushing me into the kitchen; \"Showering with George only takes longer; you go get cleaned up and we'll keep him busy in here.\"\n\n\"Party poop,\" little-girl Britt replied and turned and stomped into the bedroom. We watched her butt cheeks jiggle and snickered as she made her exit.\n\nWe got the kitchen back in order without too much playing around, but I still managed to have a stiffy by the time we got done and Britt made her return. \"Well,\" she said, looking directly at my hard-on and then at both of her roommates who wore innocent looks on their faces; \"we may as well get a head-start and get the clothes and things out of the coach before Becky gets here.\"\n\nWe all nodded in agreement and she led the way to the motor home. The rig was plugged in so she soon had it lit like a casino; I hadn't realized how many lights were in the thing. The girls started piling all the clothes on the bed when Gina got the bright idea to grab one of the rolling racks from the girl's swimsuit shop and we could put it outside the motor home and hang the clothes as we took them out. I offered to help as I was just getting in the way. We started across the vast expanse of the warehouse, the only light provided by moonlight through the industrial glass skylights high overhead.\n\nGina took my hand as we walked, squeezing it gently. I squeezed back and looked at her in the muted light; \"Everything okay?\" I asked with a bit of apprehension.\n\n\"Oh yeah,\" she replied, releasing my hand and putting her arm around my waist, naked hip to hip. \"I was sitting in the cafeteria today, having lunch between classes and I was people watching, you know. It's actually one of my favorite past times, watching people, wondering who they really are, what they're about, what their lives are like. Anyway, then I started thinking; what if they are looking at me and asking the same questions? It was funny because as I thought about it, I knew that if I told most anyone, they'd never believe me. Suddenly I was so happy, just thinking about telling a complete stranger about all of us and this, this life I lead now; I don't know, I just don't think anyone would believe it. I know some mornings I wake up and I have to convince myself that it all really real.\"\n\n\"Yeah,\" I said, hugging her tighter, \"I have to pinch myself every morning just to make sure I'm not dreaming. So it sounds like this semester will be a busy one for you girls.\"\n\n\"Yeah and I caught myself looking at the school calendar to see when the winter break is. Isn't that terrible? First day of class and I'm already looking at when the semester will be over.\"\n\n\"Yeah, well don't rush it. It'll be over before you know it.\" About then we made it to the girl's world-wide swimsuit empire area and we groped around until we found an unused rack and headed back to the other side of the building. \n\nWe wheeled it up close to the door and Gina grabbed my hand and pulled me back into the shadows before we went back inside. \"I just want to thank you again for this morning;\" at which point she took my face in her hands and kissed me hard. Her tongue sought out mine as she gave me a vertical lap dance. I could feel her wet pussy lips slide over the top of my thick cock and she moaned as she worked her clit against my stiff dick. Much more of this and I was going to have to turn her around and bend her over. The ring of a cell phone broke the moment and we stopped and just held each other, catching our breath.\n\n\"Oh hey, Becks,\" I heard Britt through the open window above. \"Yeah, we're in the motor home gathering up your clothes. I'll open the door and you can come on in.\" \n\nGina and I had ourselves back together as it were and stepped into the coach as Britt grabbed the house remote from the dashboard and triggered the big door open. She listened until she heard Becky make her way in before punching the button once more, locking the world outside our brick fortress. \"Everyone in the back,\" she laughed, herding Gina and I that way, but not before spying my hard cock. With Gina in front of me, Britt hugged me from the back and pushed us toward the bedroom. She gave my cock a couple of tugs before turning and pulling the pocket door closed behind us. I ended up on the side the bed with Kate in front of me and she turned and looked down at my cock and back up, smiling.\n\n\"Okay everybody, quiet,\" Britt whispered as she joined Gina on her side of the bed. We all stood there naked and waiting. \n\n\"Hello...where is everybody?\" Becky said as she stepped inside. \n\n\"Back in the bedroom,\" Britt yelled in reply. \n\nBecky was suspicious that something was afoot and cautiously approached the closed door. The door rattled in the frame and Britt reached over and slid it open; \"Surprise!\" she shouted.\n\n\"Yeah, well not really,\" Becky replied with a suspicious look; \"I'm not surprised to see you all naked again,\" taking in each of us, her tongue peeking out, lick her lips; \"But then, why are you all naked again?\"\n\nBritt mashed her naked form to Becky and kissed her before answering; \"Well evidently, George came home early and there was no one around, so he took it upon himself to declare it a 'Naked Day'.\"\n\nBecky looked at me, starting at the top and working her gaze down. My hard-on jumped and she gasped slightly and her cheeks reddened. The girls laughed as Kate stepped up to her and stretched up to give her a welcoming buss and a hug; \"So the rules are that when it's 'Naked Day', well everyone has to be, well naked, sooo...\" grabbing the hem of Becky's shirt, \"let's get you naked!\"\n\n\"Ooookay...\" Becky moaned as the little one ran her hands up over Becky's lace clad tits as she lifted the redhead's shirt upward. \n\n\"Ooo, nice bra,\" Kate cooed as she expertly reached behind Becky with one hand and released her freckled C's. Kate can't resist a stiff nipple when it's looking her in the eye and Becky held her head in place as the little one nursed.\n\n\"C'mon Katie, there'll be time for that later,\" Gina said as she pulled her bedmate off the teat. \"Let's get the rest of her clothes off so we can get back to work; it's getting warm in here with all these naked bodies.\"\n\nBecky smiled and gave Gina a deep kiss, pulling at her nipples causing busty brunette to squirm and groan; \"God I love to kiss you,\" Gina panted, trying to catch her breath.\n\n\"Thanks,\" Becky blushed. \"Kissing another woman is about my favorite thing to do.\" She paused as she felt four sets of questioning eyes on her; \"Of course it's better if we're naked and...\" backpedaling...\"and having sex...and there's also a handsome guy with a big dick...\" She paused again, cringing until we couldn't hold back the laughter anymore.\n\n\"Jesus guys,\" she said nearly in tears as she was gathered up in a group hug. The kissing and groping didn't last long as we were soon all slick with sweat. \n\n\"Damn, it is hot in here,\" I said pulling away and moving toward the front of the coach. \"Let's turn some of these bloody lights off; you could bake a cake on the counter in here.\"\n\nThe girls all giggled as they swapped kisses once more. \"Okay girls,\" Britt back in charge, \"Let's set up like a bucket brigade and we'll just hand clothes to each other until get them outside.\"\n\n\"I'll go outside,\" wanting to get into the cool of the warehouse. I pulled the rack close to the door and it was all I could do to keep up with the never-ending armfuls of western wear that came flying out of the coach. I soon had the rack absolutely packed tight and there were a couple of arm loads of boots and accessories stacked inside the motor home.\n\n\"Good lord, Becky, did we really wear all these on the shoot?\" I asked, sweating once again.\n\nBecky stepped down out of the coach and eyeballed the full rolling rack before turning and taking me in her arms and landing her lips on mine. My hands naturally gravitated to her ass, slick with perspiration and she writhed against me as my hands explored the nether region. I sensed eyes upon us and managed to break the suction between us and allowed the sweaty occupants to step out into the cool outdoors.\n\n\"Shit, it was hot in there,\" Kate groused as she padded barefoot and bare-assed to the front of the coach. \"I'm gonna go get us some water.\"\n\n\"And ice,\" Gina yelled as we all watched Kate's perfect little ass bouncing toward the front door.\n\n\"Damn, she does have the perfect butt,\" Becky said in an admiring whisper. Britt and Gina nodded in agreement.\n\nI was conveniently standing behind the other three and was admiring their posteriors as well; such a stunningly beautiful collection of shapely legs and asses and toned backs with long, lustrous hair of blonde, brunette and red. \"Yeah, well I don't see anything wrong from where I'm standing.\"\n\nThe girls giggled and then put their arms around each others waists and gave me a little synchronous shimmy. Tight, shiny butts, shimmering under dim lights streaming out of the motor home; it was enough to make a grown man's cock take notice.\n\n\"Hey, gimme a hand here,\" Kate hollered out as she wrangled with five bottles of ice cold water and a gallon bag of ice. I'm sure the coolness was welcome as she hugged the bag under her left arm, the bag mashed against her breasts. She had one bottle of water wedged under her chin, pressed against her throat and the other four in her hands; I'm not sure how she managed to open the door. The girls all laughed as they ran to the little one's rescue.\n\nOnce again, I just shook my head in wonder as I stepped back into the coach and searched around until I managed to turn off all the lights. I closed the door and the girls were not in sight but I could hear their chattering and laughter in the distance. Grabbing one end of the heavy rolling rack, I pushed it around the front of the motor home and then looked at what Becky had driven in. The compact car was way too small to get even half of these clothes into and then I remembered all the other things that were still on the couch up front.\n\nI spotted the girls on the other side of the warehouse and once again, I longed for a camera. They stood in a shaft of moonlight that filtered through the glass skylight high above. Stray light gathered on the brick wall behind them making a beautiful soft background. \"Hey Becky,\" I shouted across the great expanse; \"There's no way we're getting all of this in this tiny little car of yours.\"\n\n\"Hey, don't pick on my car,\" she said. \"I've got it handled; now get your sweet ass over here; we found a cool breeze.\"\n\n\"How in the hell do you find a cool breeze inside a building?\" I muttered to myself as I trundled across the floor. I became aware of my cock flopping around as I walked and became oddly self-conscious as I made my way to the ladies. Britt let out with a raucous wolf whistle as I got nearer and the others hooted and hollered as I dropped my hands in front of me.\n\n\"Since when did you get all shy,\" Britt asked as she held up a bottle of water, forcing me to reveal at least a part of the goods.\n\nI shook my head,\" Shit, I don't know. I just had this weird feeling as I was walking...Hey!\" turning to see where the cold air I felt on my ass was coming from. \"Damn it!\" spying a large patch of starlight showing through the roof; \"One of the roof vents must have blown off this weekend while we were gone. Guess I know what I'm doing tomorrow.\" I took a long pull off the bottle of water and then turned to face the hole. The cool air felt good on my not-so-private parts; \"This may have been one of those happy accidents. I'll have to look at putting in a reversible fan up there instead of the vent. That should help make this end of the warehouse a little more comfortable.\" \n\nI turned and found I was talking to myself, a more common occurrence lately than I was comfortable with. The girls were standing in a circle and passing around the now nearly melted bag of ice, rubbing it over each other. Damn it, no camera again.\n\nI joined the circle and was soon rewarded with the cooling rub-down; \"So Becky, as I was saying earlier,\" jumping when Kate applied the cold bag to crotch. I gave the pixie an evil stare and she just looked up at me and smiled big and then stuck her little tongue out at me; the others laughed out loud.\n\nI turned my attention back to the redhead who now stood beside me and was running her cool hand over my ass; \"About the clothes, there's no way we're getting them all in your car. You'll have to take a half dozen trips unless you want to just shove them all in every little nook and cranny.\"\n\n\"Not to worry, \"she purred as she leaned into me, splitting her breasts on my upper arm, her tongue stirring up mischief in my ear. I closed my eyes, enjoying her playful tongue when I felt the temperature of my cock begin to rise and the moisture level too. I reached down and felt little Kate's head bobbing, her lips wrapped around my cock, her tiny tongue teasing the underside.\n\nThe slurping sounds caught the attention of the others: \"Geez Katie, can't leave it alone can you?\"\n\nKate gave it one last long suck and then stood up smiling, drool running down her chin; \"He just looked so lonely down there,\" trying unsuccessfully to pout.\n\n\"Dicks and donkeys...I don't know girl,\" Gina smirked.\n\nKate looked a little flustered so I came to her rescue and changed the subject;\" Becky, about the clothes...\"\n\nShe put a long slender finger against my lips; \"Shush stud, I said I had it handled.\" She turned and started walking away, back toward the house. The girls giggled and followed and I just sort of stood there kind of dumbfounded; \"Did I just get shushed?\" Again, there was nobody there to hear me. \n\nThe foursome had gathered at the rack of clothes when I caught up with them. \"About the clothes,\" Becky started, \"I had an odd conversation with my aunt before I came here. She came out her office just as I was about to leave and I told her as we were locking up that I was on my way to see you guys and pick up the clothes and everything from the shoot. I asked her if I could borrow the company van to pick them up and she seemed to be thinking about it and then she told me that you guys did such a good job on the shoot that you should just go ahead and keep the clothes. She rambled on about how she'd have to sell them as used, or donate them or write them off. I've never seen her like that, like she was kind of flustered.\"\n\n\"Wait, how does Ginny know how the shoot went? She hasn't seen any proofs yet,\" I said.\n\n\"I know!\" the naked redhead exclaimed, bouncing up and down on the balls of her feet. Her tits bounced happily as she grinned; \"As soon as she said you should keep the clothes for doing such a good job, I knew she'd slipped up and she did too. That's why she went on and on, trying to cover her tracks, hoping I didn't catch her slip-up.\" \n\n\"Oh my god, that's so funny,\" Britt laughed; \"So what happened next?\"\n\n\"Well it all happened so fast, I just let it be and thanked her and gave her a kiss and a hug and she held me for the longest time; she was kind of rocking and I would swear I heard her purr. I told her how generous she was and that you guys would be overwhelmed. \n\n\"To say the least,\" I said, staring at all the clothes and wondering where we were going to put them all. \"So did you talk to Ginny at all about the shoot?\"\n\n\"No, we were so busy today, I didn't even know she was there until just before I left; I was out back the biggest part of the day. She did say she would be late, so I don't know when she came in.\"\n\n\"Well it is more than generous of her,\" I said. \"I guess you girls are going to have to channel your inner cowgirl, what with all the jeans and tops you have now.\"\n\n\"Yeah, and I'm sure we will use some of them for other photo shoots. We'll just add them to our ever-growing wardrobe department,\" Britt smiled proudly. She certainly was taking hold of the business with both hands.\n\n\"Hey,\" Kate chimed in; \"You know what we should do?\" Before we could reply she continued, \"We should do a real sexy shot of all of us, dressed up in Ginny's clothes as kind of a 'Thank you'.\"\n\n\"Now that is a hell of an idea,\" I told her, giving her a hug and a kiss on top of the head.\n\n\"Yeah, and maybe one that isn't too sexy that she can hang out front at the check-out counter,\" Becky threw in excitedly.\n\n\"It's too bad we didn't think of this while we were at the ranch,\" Gina added; \"That would have been perfect.\"\n\n\"Well nothing says we can't make another quick trip out there,\" I said. \"We'll all think about it a couple days. Meanwhile, let me get some plastic and we'll just cover up the rack and figure out what we do with the clothes later. I see another building project in my future.\"\n\nI found a large piece of plastic sheeting and Becky helped me cover the rack of western wear. Inspecting our work, she came up beside me and I turned and gave her a big hug and a kiss. \"This was really too much,\" I said as she leaned her head on my chest and purred as I petted her backside.\n\n\"Well, she really wanted to do it and I think it's her way of sort of paying for the extra work we did for her, if you catch my drift.\" Her hand wheedled its way between us until she had matters at hand and purred louder as I grew under her caress. \n\n\"Well we should at least give her a break on the real work we did,\" I whispered to her as my hands slipped down and spread her ass cheeks wide, allowing a middle finger to stray and rest on her puckered star.\n\nThe purrs turned to low growls as she wriggled her ass in my grasp; \"You could try, but Britt already sent her your rates on proofs and such, so let's just see how everything looks and we'll go from there.\" She leaned back and looked up at me with those sparkling green eyes, chewing on her lower lip as we teased one another; \"Speaking of pictures, do I get to see them,\" pausing to squeeze me tighter...\"all of them?\"\n\nBritt and the others walked around the front of the motor home, all wearing hats and boots and nothing more and carrying more of the same. I looked over Becky's shoulder as the girls stared at the redhead's exposed backside; \"Hey, Becky wants to see the shots from Saturday and I just had an idea; I don't know what you girls are going to do with all that now that you have your arms full, but I guess stash it in the living room. I need to run upstairs and grab the flash drive for Ginny and then I'll be back down and explain.\" Tired of standing there laden with leather boots and felt hats, they obediently shuffled to the front door. Becky gave me one more quick kiss and then sprinted ahead of the girls to open the door for them.",
        "I took the stairs two at a time and grabbed the flash drive and then futzed with the computer for a second; \"That should do it:\" again to an empty room.\n\nThe girls were all gathered in the front room; another Kodak moment missed with four bare butts pointing my way as they bent over to sort out the various boots and hats sitting on the couch and floor. My turn to whistle appreciatively and they never looked up, just giggled and accentuated their pose by spreading their legs a little further apart. \n\nSatisfied that they had taunted me enough they stood back up and turned to face me; \"So what's this big idea you just had?\" Britt asked, cocking her hip and resting her hand there, challenging me.\n\n\"Well missy, first thing, I think we all need a quick pass through the shower to rinse the sweat off.\" You'd have thought I just told a gaggle of four year-olds that there was all the ice cream they could eat waiting for them in the next room. They squealed and bounced up and down before sprinting past me on the way to the bathroom. Various hands swatted and grabbed at me, like the brass ring on a merry-go-round. I sat the flash drive on the kitchen island and followed close behind.\n\nMy bevy of beauties stood in the center of the big shower, waiting, anticipation in their eyes. \"So what's your pleasure ladies?\"\n\n\"Make it rain, baby,\" Britt said in her low, sultry Mae West voice.\n\nSmiling, I turned to the control panel and the room went dark. Gasps of surprise and then ooo's and ahh's as the night sky sparkled above. \"Oh my god,\" Becky gushed as she looked up and spun around.\n\n\"I never get tired of this,\" Britt said quietly, waiting for the rain.\n\nI started the rain, a gentle rain, just warm enough to be comfortable. All four of my lovelies bent their heads back and let the gentle droplets wash over them. Again, another photo moment lost, but easily replicated; better to just stand there and enjoy. \n\n\"This is so beautiful,\" the redhead sang out; \"You should have lounge chairs in here so that you could just lay back and look at the night sky and let the warm rain relax you, I could spend hours in here.\"\n\n\"I'm glad you like it,\" as I joined them in the tight knot of flesh. Gentle caresses and kisses were shared as we rinsed. \n\nKate lifted a foot and looked at the bottom and wrinkled her little nose; \"You need to clean the warehouse floor,\" she squeaked.\n\n\"It's easier to just wash your feet,\" I said; \"Set your little butt on the bench and I'll take care of that for you.\" I turned to grab a wash cloth and a bottle of body wash and then turned back to see four naked women all perched on the built-in bench, smiling with one leg each sticking out straight; yet another moment I'll just have to keep filed away in the personal file located between my ears.\n\nI grabbed a towel to kneel on and approached the bench. Dutifully, I went down the line, taking each offered foot and gently washed and massaged it along with running my hands up and down the attached leg, stopping just short of getting myself into more trouble. Luckily all limbs were stubble free and the entire scrubbing took less than an hour. About that time the water heater began to protest and the girls jumped up squealing trying to dodge the cold rain as they made their exit.\n\nWe bundled up in our big fluffy bath sheets and then did a round-robin of hair drying; not the full treatment, but enough to keep the shivers down to a minimum. Refreshed and invigorated, we made our way into the bedroom; \"So can we go up and look at the photos now?\" the naked ginger inquired. Her ivory skin glowed and a scattering of freckles peppered her chest, her green eyes sparkled in anticipation.\n\n\"Actually, we can just stay in here and look at them on the big screen,\" nodding toward the giant LCD monitor on the bedroom wall opposite the bed. I had nearly forgotten that I had wired everything together when I built the place, but I had never had a need to do over-sized computer work from my bed.\n\n\"Brilliant,\" Gina blustered; \"can we have popcorn too?\"\n\n\"I don't know,\" turning to my number one; \"should we allow the girls to eat popcorn in our bed?\"\n\nBritt attempted a stern motherly look, failing badly as she stood there naked, with nipples erect and her charges nuzzling and scattering soft kisses all about. \"Well if they're careful,\" she said, \"and no butter\" she shouted out as the other three skipped out of the bedroom, giggling all the way to the kitchen.\n\nWe stood there, all alone in the bedroom, the little ones busy in the kitchen; \"Alone at last,\" I said with a smile as I took her in my arms and we kissed. I had my hands where they belonged, firmly holding the finest butt God ever made. My lover ground on me until I was hard and proud, wrapped her arms tight around my neck and threw her legs around my waist. With practiced precision, we found each other and we both groaned into the kiss as her perfect pussy swallowed me whole. Breaking our kiss, she leaned back and we both looked down, watching my slick cock piston in and out of her hungry puss.\n\n\"Nothing turns me on more than watching your beautiful cock sliding in and out of my pussy,\" she moaned, her eyes glued to our connection. I easily stroked my cock with her body; her pussy slurping obscenely as her excitement coated my dick. \n\nThe smell of popcorn wafted into the room; \"What do you guys want to drink?\" Gina bellowed from the kitchen.\n\n\"Well shit,\" Britt groaned, pulling herself tight to me once more; \"Probably shouldn't let the kids catch us doing the nasty,\" she said, teasing.\n\n\"Yeah, I guess not,\" pulling her down until my cock kissed her cervix and she shuddered. \"I'll have orange juice if we have any,\" I yelled toward the bedroom door.\n\n\"Jeez, you're loud,\" Britt hissed before taking my earlobe between her teeth. I gave her butt a swat and turned around until she was facing the door; \"I'll have the same,\" she yelled, deliberately trying to deafen me. I gave her another swat and a deep thrust and then turned again and launched her onto the bed. Britt screamed like a little girl and Becky came into the room catching her in mid-flight, arms and legs flailing in the air before her sweet ass hit the mattress.\n\n\"Well that was attractive,\" the redhead laughed as she jumped up onto the mattress and pounced on the blonde. \n\n\"Get off me,\" Britt laughed as they tickled each other. Becky had her opponent pinned, her long legs straddling the blonde, hands full of tanned tits. Becky rode the bucking filly, her pussy leaving a slick trail on the blonde's tummy. Conveniently ignored, I went to the bedside table and dug through the lower compartment until I came up with the keyless keyboard that I had long forgotten. \n\n\"We've got snacks,\" Gina proclaimed as she came in with a tray full of glasses followed by little Kate with a giant bowl of popcorn. Britt finally called 'Uncle' and Becky slid off to the side and they both laid there panting, trying to catch their breath. \n\n\"Alright, let's get this show on the road,\" I said, grabbing the remote and the keyboard and taking my place in the center of the bed, leaning up against the headboard. I turned on the flat screen and started punching buttons trying to figure out how to get the computer connected. Meanwhile Becky and Britt lay at the foot of the bed, wound around each other kissing and petting. Gina sat the tray of drinks on the dresser and grabbed mine and another and placed them on one bedside table and then handed one across the bed to Kate who struggled with the giant bowl.\n\nGina took her place to my right and snuggled up, kissing my cheek as I continued to cuss the remote. Kate handed the bowl across me to Gina and crawled up on the other side. I was concentrating on the big screen when I felt the familiar lips on my dick. Glancing down, she was looking me in the eye and broke suction long enough to giggle; \"I thought you were still wet and I was just going to dry you off, but I'd know this sweet taste anywhere,\" dropping her head back down to finish the job she'd started.\n\nMeanwhile Gina took the remote from me, huffing with impatience and magically made the computer screen from upstairs appear before us. Bending over, she batted Kate; \"Hey, show time!\" She smiled at her bedmate as she came up for air, her face wet but with a grin from ear to ear; \"dicks and donkeys, donkeys and dicks,\" Gina grumbled before stretching out and poking the other pair with her toes. Britt and Becky were still at the end of the bed making out like it was the first time.\n\n\"Okay, okay; geez, can't a girl have some fun?\" Britt protested. They rearranged themselves so that they lay across the end of the bed, Britt spooning the redhead. They both face the screen; \"So get on with it already,\" Britt blustered impatiently.\n\nWe three at the head of the bed snickered as Gina hit one last key and the slideshow began. We cycled through the client shots, making comments and snacking and drinking as we went. There were a lot of shots to be considered for Ginny's store and Gina and Kate had already seen most of them, so to pass the time, they played with each other and of course me, stuck in the middle. We'd smartly passed the big bowl to the foot of the bed, leaving hands and mouths free. They each had a handful of my cock and I bounced from breast to breast until we settled in with them slowly jacking my hard-on as hands played between their wide-spread legs. \n\nIn no hurry, we teased and lingered, still participating in the slideshow critique. Britt and Becky were doing their own playing, unaware of what was happening behind them until I put a little too much pressure on Kate's stiff clit and she moaned loud as a quick orgasm rolled through her. Britt answered, as though challenged and within seconds, Becky yelped as Britt evidently found the magic spot between the redhead's legs. \n\nThe slideshow stalled, indicating that we'd rifled through that file, so Gina expertly opened the 'private' file and then sat the keyboard aside as the show began. There was a stunning silence as the photos began to cycle through. There was a nice mix of what I would call 'tasteful' nudes and the more explicit, or plain old pornographic shots. Before long, the silence in the room became a low rumble of female moans and gasps, interlaced with the liquid squelching sounds of fingers in pussies. Gina and Kate each had a hand wrapped around my hard-on while their other hands were occupied between their legs. I managed to work my arms around them both and harassed stiff nipples with each hand. \n\nIn front of us at the foot of the bed, both Becky and Britt had their eyes glued to the big screen while nimbly fingering each other. For all the photos we'd shot, the slide show cycled through quickly, and the girls attention quickly strayed as the show began to repeat itself.\n\nThe blonde and the redhead rolled over and looked up at us at the head of the bed. \"That was so hot,\" Becky groaned out loud as her eyes rolled back in her head and her body quaked; Britt had found 'the spot' and Becky lost it. Britt continued to chase the redhead's orgasm as she stared at my cock, her other roomies hands still slowly tormenting me. Her lips formed an 'O' as she brought her newest love to the summit and pushed her over the side; \"Ohhhhhh!!,\" Becky cried out. She arched her back, her butt off the bed as Britt leaned over and took Becky's tender nipple and sucked it between her lips, triggering another explosion deep with inside her. \n\nGina couldn't resist the sight of Britt's ass in the air, her pussy lips pouting and her asshole winking as she concentrated on giving Becky an orgasm she wouldn't soon forget. Gina leaned over and gave me a tongue-strangling kiss before relinquishing sole possession of my cock to Kate. On all fours, Gina approached her prey and spreading the blonde's cheeks wide, she attacked Britt's sex with a fervor that nearly caused the redhead to lose a nipple.\n\n\"Ahhh, Gina,\" Britt growled, looking over her shoulder at the brunette tormenting her. Gina's tongue worked back and forth, from ass to pussy and back again. \"Yesss,\" Britt hissed, \"Tongue my ass baby...yeah, like that, just like that,\" moaning with her eyes shut tight. \n\nRecovered from a series of orgasms expertly delivered by our favorite blonde, Becky squirmed around until she worked her way under Britt, her head between my love's perfect thighs, looking up at the perfect pussy, slick with excitement. Britt squirmed above as Gina continued to tongue-fuck her roommates ass. Reaching up, Becky ran her fingers around the swollen lips above. Encouraged by increased moaning, she slowly introduced a finger into Britt's pulsing pussy. Warm and wet, the talented twat sucked at the redhead's digit, drawing her deeper. Becky hooked her finger downward and felt the spongy spot she sought and slowly massaged it. \n\n\"Ohhh Fuuck!\" Britt cried, nearly bucking Gina off the bed. The strong brunette grabbed Britt's hips and glanced down to see the cause of all the commotion. Becky smiled up at Gina as she sipped her thumb over the blonde's sensitive clit, causing Britt to jump once more. Gina smiled down, up for the challenge and grabbed hold tighter and attacked Britt's backdoor once more. Within seconds, my favorite girl was in a constant state of orgasm, her two tormentors unrelenting.\n\nThroughout this show, Kate sat beside me, one hand unconsciously stroking my cock, spreading pre-cum over ht head as it perked out. Her other hand was busy between her luscious thighs, two fingers slowly working in and out of her tight pussy. Tearing myself away from the scene in front of us, I leaned in and took a stiff nipple between my lips and sucked, my tongue tickling the very tip. \n\n\"Oh fuck this,\" the little one moaned, \"I need this fucking cock now!\" \n\nBefore you could count to three, the nimble pixie was on her knees and had straddled me, her pert little ass facing me. With laser-guided precision, she glanced down between her legs and skewered herself on my stiff cock. \"Fuck yeah,\" she moaned as her butt came in contact with my groin, my full length buried deep inside of one of the tightest pussies known to man. I grabbed her hips and held her there, afraid that too much motion would bring about a quick conclusion. Getting used to my new environment, the little tease rocked and squeezed my cock from within. I gave her a quick slap on the ass; \"Knock it off!\"\n\nI doubt that she heard me as she groaned loud, her pussy clinching my cock, nearly causing my intentions to backfire. I strained to keep from cumming inside her anxious sex, pulling her down tight with a death-grip on her girlish hips. Giving in, Kate straightened her back and whipped her excessively long hair over her shoulder, giving me an unobstructed view of her petite sculpted backside. Turning her head, she looked over her shoulder at me and smiled an mischievous smile, flex internally as she licked her lips.\n\nI snarled at her, pulling her down tighter till my cock head tickled her cervix. Her eyes rolled back in her head as she moaned into submission, leaning forward slightly, her hands resting on my knees. Her pussy gave up a bit of my hardness as she leaned. It glistened with her wetness and just above, her pink pucker winked at me, mocking me. I retaliated, flex my cock within and she utter another deep moan. \n\nA loud \"FUCK MEEEE...\" broke our fixation. The end of the bed was now a pile of succulent female flesh. The redheaded Becky was still on her back, but Britt had collapsed on top of her. Smothered in Britt's loins, her hands gripped the convulsing blondes butt cheeks as her Amazonian cohort still had her face buried in Britt's backside, refusing to back down until Britt either physically broke free or passed out. Slurping sounds could now be heard as Becky, having to give up on her digital dealings, resorted to an oral assault on Britt's spasmodic snatch. \n\nAfter an interminable amount of time, the rumblings slowed and three exhausted beauties sighed contentedly as the rolled off one another and laid back, panting to catch their breaths. Show over, Kate turned to me again and replayed that evil grin, hugging my cock from within; \"Ready to be fucked?\"\n\n\"Bring it,\" I answered, pulling her back down until my balls ticked her clit. She groaned once more before getting a biting grip on my lower thighs and starting rocking. I lent a hand while watching her cock-hungry pussy consume my cock and then slip back up. Her pussy lips clung to my dick, spreading her juices. I caught glimpses of her sweet asshole on the upstroke and my cock twitched as my brain relayed a message. \n\nI placed my hand on the small of Kate's back and pushed lightly. Relenting, she moaned as she slid her hands down my legs until she could bury her nose in the sheets. Never loosing cadence, she rocked on my cock, the new position offering new sensations. From my perspective, I was offered a new opportunity. Her ass was now spread wide and her pucker beckoned. My fingers dabbled at the base of my cock, gathering her contribution to the coming endeavor. My slick middle finger lightly grazed her winking star and she groaned an approving groan. I played at her backdoor as she squirmed to let me in. \n\nShe nipped at the inside of my left calf, telling me to get on with it. I replied, slipping my middle finger in to the first knuckle. Kate sucked in her breath and I heard quiet tittering from the girls who now, partially recovered, rested on their sides, taking in the new show. Concentrating at the task at hand, as it were, I worked my middle finger in concert with my cock, sheathed in her constricting cunt. The little one grunted as she worked herself on my cock.\n\n\"More,\" she moaned as she paused to swivel her hips, stirring her insides with my dick; \"More in my ass,\" she begged; \"I want you to fill my asshole!\"\n\nThis brought the others to their knees and they crawled up the bed. Becky stopped to lie on her side, her head on my leg and grabbing Kate by the hair on the back of her head, she drew her up and then slipped her own underneath. Using my lower leg as a questionably comfortable neck support, she pulled the little one to her and they kissed hard, lips and tongues locked. Britt and Gina meanwhile made their way back to where the action was. On their knees on both sides of the little one's hips, they looked down at our intersection. Gina ran her tongue over her lips as she stared. Britt took a peak and then looked at me; \"Having a good time, lover?\" she asked. She leaned over and gave me a long kiss before turning her attention back to the action.\n\nKate's pussy was rippling over the length of my cock in response to the oral ministrations Becky was applying further south. Britt looked over at her cohort and whispered, \"I think we can help.\" Gina nodded knowingly and they both turned to me like they were looking for my acceptance of their proposition. It was nice of them and all, but they both knew that I was just the kite on the end of the string at this point and they were the ones that were now under control. Britt winked and then turned her attention back to Kate's butt. \n\nBoth women kissed and caressed the little one's firm cheeks, running their hands up and around, tickling my cock when it emerged. Warmed up, Britt said, \"Take your finger out.\" Kate moaned at the empty feeling and I just stared at her gaping opening as my two helpers pulled her cheeks apart. Working up an impressive amount of saliva, both anointed the young girl's open ass. \"Put your thumb in, \"Gina directed. Obediently, I slid my right thumb easily into her open portal. I could still feel my cock sliding in and out of her strangling pussy through the thin wall of membrane.\n\n\"Stroke it,\" Britt commanded; I obeyed. Working up another load of spit, she gurgled, \"Now the other one.\" She and Gina applied another round of natural lubricant to Kate's ass as they pulled her cheeks apart even more. I worked the second large digit inside her tight ass and she moaned into Becky's kiss. I noticed then that Kate had acquired one of the redhead's tits and was working hard at twisting her nipple off. Becky was working on her own snatch, her fingers buried deep within. Four hands now spread Kate's ass wide and the sight was almost more than I could handle. I closed my eyes, dealing only with the physical sensations going on down there, trying to block the mental mind-fuck I had going on between my ears. ",
        "Soon, another sensation forced my eyes open and I watched as both Britt and Gina worked an index finger into the rectal equation and the results didn't get past the recipient as Kate broke Becky's lip-lock and howled. \"Oh Fuck Yes!\" she bellowed as all four digits now stroked in concert, stretching the little one's asshole to new dimensions. Becky reacquired Kate's lips along with one breast and little Kate's body shook. I could feel her climax rock through her little frame, strangling my cock, pushing to expel our invading fingers. \n\nAs before with their earlier performance on Becky, one great climax was not enough and it was time to up the ante. Struggling to keep my cock in motion, the girls move their un-occupied hands down to assist and they pushed down on my groin, just above my cock and then with surprising quickness and skill they both joined me in my upstroke, each adding a finger alongside my cock. Again, the additions did not go un-noticed and Becky wrestled to keep Kate from rocketing across the room as her body responded.\n\n\"FUCK,FUCK,FUCK!!\" Kate screamed in Becky's ear as her body erupted. Becky quickly released her captive and Kate shot up on both hands, back bowed up as her body continued to convulse. She managed to turn her head and look back, tears running down her cheeks, her mouth open, gasping for air. Reading the little ones face, Gina and Kate slowed the pace and then just as Kate thought it was over, and me, well I was just somewhere else all together, two pairs of hands slid between Kate and I, grabbed the twins and I lost it. \n\n\"HOLY SHIIIIITTTT!!,\" I bellowed, eyes wide as soft hands caressed my balls. I lifted my ass off the bed, driving my cock further up Kate's overworked pussy and I pumped round after round of hot seed deep inside her, triggering another orgasm in her that pushed our fingers out of her ass which gaped red and angry. My head throbbed, I came so hard and Becky was on her knees and held Kate tight until all the aftershocks were done.\n\nWe all collapsed in place, Kate face down, head between my feet and her legs obscenely spread across my hips. Becky lay beside me, her head on the other side of my leg and she petted the little one, running her fingers through her long black hair. Gina and Britt's heads rested on Kate's butt-pillows, their fingers still held captive along with my cock inside Katie's tired but satisfied pussy. \n\nWith a sigh, we three felt Kate finally set us free, my cock and their fingers were jettisoned, wet and worn. I closed my eyes and then startled, opened them wide once more as two sets of lips and tongues tended to my cock. Giving it the old college try, they just couldn't muster another hard-on out of me, so they let out a pair of disappointed sighs and then smiled and giggled at me before moving up and each giving me a generous kiss. I took them both in my arms and they rested their heads on my chest and we all drifted off to sleep."
    ],
    "authorname": "GeorgeDaBuilder",
    "tags": [
        "group sex",
        "anal",
        "barn",
        "shower",
        "fingering"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/everybody-needs-a-hobby-ch-28"
}