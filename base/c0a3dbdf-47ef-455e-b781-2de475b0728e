{
    "title": "Lilith's Emporium - Cock of Koldak",
    "pages": [
        "Peter was walking into Lilith's Erotic Emporium like he did every day despite the fact there was almost never any mail for them but he would still walk in seeing if they had anything to ship out. He was a mailman and most of what he delivered or mailed for them was between the shop and a club in the city and despite all the strange artifacts he saw in the store he always got along with Nessira.\n\nHe opened the door and walked in seeing the beautiful redheaded woman behind the counter before he said: \"Well hello Ms. Ravenhill, how are you today?\"\n\n\"Good afternoon Peter, anything for me today?\"\n\n\"Just a few adds and other junk mail, anything going out?\"\n\n\"Just this box.\" She said handing him a package with a delivery address for the club Safari. \"The Safari huh, you've been doing a lot of business with them, I've never been there, is it even open yet?\"\n\n\"They had a soft opening but I don't think it is fully done yet.\"\n\n\"I see, maybe I'll have to check it out.\"\n\n\"Yeah, might not be your kind of place, but if you do just let me know, I am friends with the owner and I'll make sure she takes good care of you.\"\n\n\"I'll have to remember that, so you've been closed the last few days, everything alright?\"\n\n\"Yeah, just a personal matter I needed to take care of, but we should be back to normal hours now.\"\n\n\"Sounds good, well see you in a week, finally taking a vacation.\"\n\n\"Oh really, wait is that old guy covering your route again, what's his name, Frank?\"\n\n\"I'm afraid so, hopefully, it won't be a heavy mail week.\"\n\n\"God I hope so, every time he comes in here I'm afraid he's gonna have a heart attack.\"\n\n\"Well, maybe stick to the business casual dresses, and leave the normal attire for the young guys like myself.\"\n\n\"That's no fun.\" She said with a pouting look.\n\n\"Yeah, but as much as I may enjoy it, I would hate to see Frank die.\"\n\n\"He would die with a smile on his face though,\" Nessira said teasing him a little.\n\n\"Wow, ahem, well say hi to that lucky bastard you're marrying for me.\"\n\n\"Ha, I will, you have any company for your little vacation?\"\n\n\"Afraid not, I guess the good ones are all taken.\"\n\n\"Well, if you want maybe I have a friend for you, if you don't mind blind dating.\"\n\n\"As tempting as that is Ms. Ravenhill, I have heard rumors about the people you consider friends.\"\n\n\"Now what is that supposed to mean?\"\n\n\"Just rumors, people in the woods disappearing near this store, items people purchase coming to life and such, I'll stick to the bar scene thanks.\"\n\n\"Suit yourself, but just remember, my offer still stands.\"\n\n\"Thanks, well have a lovely day, and see you when I get back.\" He said placing the small package in his bag noticing when he suddenly noticed it seemed heavier than it usually was this time of day before he turned and left.\n\nNessira watched him leave smiling at him when she looked over at one of the shelves noticing that something was missing. She tried to remember what was there when she realized what it was and got a little worried.\n\n\"Shadow!\" She called out as she came out of the back room.\n\n\"Yeah, Mom?\"\n\n\"Do you remember seeing a large demon cock statue here?\"\n\n\"Um, yeah, yesterday I think, got a weird vibe from it.\"\n\n\"Did you move it?\"\n\n\"Nope didn't touch it.\"\n\n\"What about Kevin?\"\n\n\"He's been with me since the last time I saw it.\"\n\n\"Uh oh.\"\n\n--------\n\nPeter had gotten home late but was so happy he was off for the next week. He dropped his backpack on the chair in his living room before going to order some dinner and relax. He had not noticed the strange statue that had gotten into his mailbag earlier that day at the Emporium and had been sneaking around before finding it's way into his backpack as well now sitting in his home.\n\nHis evening routine was pretty uneventful as he ordered a pizza and watched TV for a few hours. There was not much on but he suddenly got a text message from his friend Lauren as he heard his phone buzz in his pocket. He opened the message and began to reply as she had told him to enjoy his vacation and they should hang out soon.\n\nLauren had been a friend of his for years. They were extremely close but never romantically involved. He had always been tempted to bring their relationship to a romantic level but often times she had a boyfriend and he always was very concerned it would ruin the one good friendship her had so he often decided not to try when she was single.\n\nHe chatted back and forth with her for a little while until it started to get late. After about 10:00 pm he finally decided to head to bed turning off the TV in the living room and turning on the TV in his bedroom as he laid there watching a few shows for a while. It wasn't long before he finally fell asleep\n\nOut in the living room, his backpack slowly began to unzip itself. Peter had no idea what was going on as this strange looking stone penis began to extend out from the opening in his bag. The tip suddenly turned from a stone gray color to a more flesh looking black color as it began to pulse a little making a sickening squishing noise. This went on for a few moments before a black smoke began to belch from the tip forming a cloud in his living room that that grew until it sprouted two arms and two glowing yellow eyes. \n\nIt looked around the room for a moment before it flows towards Peter's bedroom. It examined the sleeping man in his bed as it pulled off his blanket seeing the outline of his average size penis in his shorts. It reached out and slid them off as well before it began to stroke it with its misty fingers getting it erect to better examine it.\n\nPeter had no idea what was going on but let out a little moan in his sleep as he seemed to be enjoying the sensation. The creature paid little attention to his moans and continued to caress him wanting to see his penis fully erect so it could prepare for possession. \n\nThe creature examined his cock seemingly unimpressed by his size but still saw it as a suitable and easily transformable organ. While Peter laid there on his back with his erect cock sticking straight up in the air the black cloud began to circle his member making what looked like a little black tornado that seemed to spin faster and faster before its tail touched his tip and began to enter through his urethra sliding down inside until the cloud was gone.\n\nHis erection remained there as he slept not moving but after a few minutes, it began to pulse. A red light flowed through his cock as it began to swell and pulse as it started to grow a little becoming more suitable for the demon Koldak as Peter continued to sleep while having very erotic dreams while his rock continued to pulse sending an oddly pleasurable sensation through him before his cock erupted squirting what looked like normal looking cum out from his tip shooting it up into the air before it came splashing back down on him. \n\nThis continued for the next hour every few minutes his cock would cum almost as if Koldak was emptying his balls. Peter's mind was filled with vivid erotic dreams only adding to his pleasure as he grabbed his bed sheets squeezing it in his hands as he blew his load again. The last time he orgasmed instead if a milky white semen there was a mix of what looked like a black slimy liquid within it. Once he blew his load this time his cock finally seemed to stop and lower back down until it was resting against his thigh.\n\n----\n\nThe next morning Peter awoke covered in sweat thinking about all those amazing sexual dreams he had experienced in his sleep. He was in a fairly good mood as he sat up before he noticed some stains in his sheets as he was not wearing his boxer shorts and his comforter was on the floor. What was even stranger was his penis which was soft but seemed bigger than it should be as it rested between his legs. \n\nStaring at it for a moment and even reaching out to hold it for a moment feeling it's thickness which shocked him. It was about 7 inches long soft which he could only imagine what that meant when it was erect. He jumped out of bed feeling this new penis hanging between his legs as he was confused and a little disturbed by everything that was happening. It seemed like his erotic dreams are what had caused the mess in his bed but it still didn't explain his enlarged cock and why the bottom half of him was naked.\n\nSuddenly he heard his doorbell go off followed by a knock at the door. \"Who the hell?\" He said out loud before he grabbed a pair of jogging pants sliding them on before he headed to his door.\n\nAs he looked through the hole he saw his downstairs neighbor Tammy which always complained about the slightest noise he made. Her apartment was identical to his but one floor down so she would often bitch about him walking around with his shoes on. She was actually very cute but she was such a bitch that it just ruined it for him. He dreaded opening the door worried about what she was going to complain about now.\n\n\"Good Morning Tammy, what's up?\"\n\n\"I hate having to come here this much Peter, I am tired of having such a noisy neighbor right above me!\"\n\n\"Tammy what do you want me to say, this is my home, I don't go out of my way to make noise but I am not going to tiptoe around my own apartment!\"\n\n\"Well, maybe we should take it up with the landlord then? Is the girl still here?\"\n\n\"Girl, what girl?\"\n\n\"Oh come on, it sounded like there was a fucking orgy happening in your room last night, I hope it was fun because when I am done talking to the landlord you won't be...\"\n\n\"Won't be what?\" Peter said surprised by her sudden silence.\n\n\"Won't be...\" She said as she seemed to be getting light headed.\n\n\"Tammy, are you alright?\" He asked as she began fanning herself.\n\nHe was about to ask her again when he suddenly noticed something happening in his pants. He looked down and saw his penis starting to get hard pressing against his jogging pants as Tammy was still seemingly having some sort of an issue. She began to start touching herself as she looked down at the tent forming in his pants as Peter was suddenly confused at what was going on. Before he could say anything she pushed him back stepping into his apartment and shutting the door.\n\n\"Tammy, what the hell?\" He asked as she suddenly dropped to her knees pulling off his pants to see the large erect cock before her that seemed to be about 14 inches long.\n\nTammy stared at it for a moment seemingly entranced by it before she grabbed it and began sucking on the tip. She tried to take it as deep into her mouth as she could which wasn't very deep but it still felt amazing as she worked on his member attacking it with her tongue the best she could. She was like a woman possessed all of a sudden taking her hands and stroking his cock as hard as she could before finally pulling him down to the floor and sliding off her pants before climbing on top of him.\n\nPeter still was confused as to what was happening but then she suddenly impaled herself on his cock letting out a scream. She began riding him which he was amazed he fit inside her without causing her physical harm but she seemed to be enjoying it immensely. She pulled off her shirt and bra grabbing his hands and placing them on her breasts as he started to get into it enjoying the sensation.\n\n\"Oh God, Oh Fuck! Fuck me, Peter, oh yeah, Fuck me!\" She yelled out as she grunted and moaned over and over again sliding her pussy up and down on his enlarged member. \n\nPeter couldn't believe how amazing this felt. He should have been concerned with his cock suddenly getting that much bigger overnight and everything else that was going on but at the moment none of it mattered as this sexy petite blonde girl who usually annoyed the crap out of him was suddenly riding him like a crazed cowgirl and it was amazing.\n\n\"Oh shit! FUCK!\" She screamed out as he felt his cock suddenly erupt inside her making her squirm as she also seemed to orgasm at the same time. \n\nThe feeling seemed to go on for a while and was more intense than any orgasm he had ever felt before making his legs shake as he continued to fill her with his cum. Eventually, she finally stopped and so did his cock as she sat there straddled on him with a satisfied look in her eye's. Biting her bottom lips she slid herself off of him almost seemingly cumming again as she did before she grabbed the edge of the couch holding herself up.\n\n\"Oh fuck, that was amazing!\" She said grabbing her clothes seemingly having trouble walking as she headed for the door. \"I'll um, oh fuck, I'll see you later.\" She said with a smile as she slid her pants and shirt back on before leaving his apartment.\n\nPeter felt great as he laid on the floor still reeling from the experience. He sat up and saw something a little disturbing as his erect cock was dripping with some sort of black oozy liquid. A little shocked and concerned he got up and ran to the bathroom turning on the shower to get cleaned off. He jumped in and started to try to figure out what to do. He began to think maybe he should call his doctor and have his dick checked out because he knew something was wrong here.\n\n\"No, do not do that!\" A deep voice suddenly said breaking the silence.\n\n\"What the fuck! Who said that?\"\n\n\"Do not call a doctor, or tell anyone!\" The voice continued to say.\n\n\"Who are you, where are you?\"\n\n\"I am here.\" The voice said as Peter noticed a dim red flash under his eye's as he looked down at his cock. \"I am the demon Koldak!\" The voice said as his cock seemed to glow red every time the voice spoke.\n\n\"Aaahhhhhhhhh!\" He screamed out as the voice he was hearing seemed to be coming from his penis.\n\n\"Stop screaming and calm yourself!\" The penis said glowing still.\n\n\"Holy shit, holy shit! I've lost it fucking mind!\"\n\n\"I said enough!\" Koldak said as his cock suddenly erect itself fully before he began to cum uncontrollably squirt black ooze all over the shower wall making his knee's buckle before he collapsed to the floor. \n\n\"Oh, shit...\" He continued to whisper to himself as he was suddenly tired as his cock still dripped black ooze from its tip after that intense orgasm.\n\n\"That is better.\"\n\n\"What are you?\"\n\n\"I am the demon Koldak.\"\n\n\"Why are you inside my penis?\"\n\n\"I was a sex demon centuries ago until I was cursed and list my body except for my cock. I was then used as a sex toy to pleasure the god's who had a use for me.\"\n\n\"That didn't answer my question.\"\n\n\"My most recent master left me at Lilith's Erotic Emporium, that is where I jumped into your bag and came home with you, once you were asleep I possessed your reproductive organ changing it physically and emptying you of your reproductive fluids only to replace them with my own.\"\n\n\"What do you want from me?\"\n\n\"For now, I want sexual pleasure.\"\n\n\"Well, you don't seem to need my help to make me cum.\"\n\n\"You don't understand, what just happened with that female you were physically attracted to, I can make any woman want to have sex with you.\"\n\nPeter sat there for a moment processing what he had just heard before he said: \"Wait, really?\"\n\n\"Yes, any sexually attractive female you desire I can make them lust for you.\"\n\nPeter was sure he was going crazy as he sat there on the shower floor having a conversation with a supposed demon possessing his penis at the moment.\n\n\"What's in this for you, and what happens to them?\"\n\n\"They will not be physically harmed.\"\n\n\"Yeah but, what about this black sludge of yours, I don't want to impregnate a bunch of women with demon babies.\"\n\n\"That black fluid is not reproductive in nature.\"\n\n\"Oh, so what does it do?\"\n\n\"Do not concern yourself with things like that, all that matters is your sexual satisfaction.\"\n\n\"It is tempting,\" he said as he was still trying to wrap his head around what was happening. \"But this just seems a little strange and almost too good to be true.\"\n\n\"I have possessed your sexual organ, if I wanted to hurt you I could.\"\n\n\"True.\"\n\n\"Go and find a female, and she is yours for as long as you would like to have sex with her.\"\n\n\"Okay Koldak, I think we have a deal.\"\n\n\"Very well, however, I know what you are going to ask and I have no power over Nessira Ravenhill.\"\n\n\"How did you know I was going to ask that?\"\n\n\"I know what you desire, The Red Witch is beyond my control.\"\n\n\"The Red Witch? What do you mean by that?\"\n\n\"Nessira is the Red Witch of Raven Hill and the daughter of the Succubus Queen Lilith.\"\n\n\"Wow, really? I just thought she was a super hot woman who ran a sex toy shop.\"\n\n\"Nessira is very physically attractive, I was employed by her mother Lilith most recently and have served their family well, though I have never tasted the red witch.\"\n\n\"Bummer, well, I am sure you have had some amazing women.\"\n\n\"I have tasted of the Goddess Lilith herself and many others, so yes, I have tasted many beautiful creatures going back to my true love.\"\n\n\"Nice, what was her name?\" Koldak remained silent for a moment as Peter waited. Assuming he did not want to answer he asked: \"so what now?\"\n\n\"That is your choice, once you find a woman you wish to have sex with I will do the rest.\"\n\n\"Well, I've already cum twice today so...\"\n\n\"That does not matter, you can have sex as many times as you want, I will make each time pleasurable.\"\n\n\"Oh shit, okay Koldak, let's see what you got,\" Peter said standing back up and finishing his shower before he dried off and got dressed. He noticed a small stone looking thing sticking out from his backpack as he walked over and slid out the penis statue. \"I assume this is how you got here?\"\n\n\"Yes, it was my transport.\"\n\n\"I see, this doesn't look human, you aren't gonna make my penis look like this are you?\"\n\n\"I can if you would like,\" Koldak said while Peter fell to the floor as penis began to feel strange. \n\n\"Wait wait, I like my penis the way it is, oh fuck... That feels good though.\"\n\n\"While I am inside you the pleasure you will feel may be different than what you are used to as a human.\"\n\n\"Oh fuck, that was kind of amazing.\"\n\n\"Go and find a suitable female, and I will show you more pleasures.\"\n\n\"Sounds like a plan.\" He said pulling himself up. \"Just um, try to keep a low profile if you know what I mean, I don't want to scare anyone or walk around with a giant erection that everyone can see.\"\n\n\"I will do as you ask.\"\n\n\"Awesome, let's go.\" He said grabbing his keys before heading out.\n\n\"Hold the elevator!\" A woman's voices said as Peter stopped the door from closing letting her in. \"Thanks, Peter!\" She said.\n\nIt was his neighbor Heather who lived a few doors down from him. She was very friendly and was in her mid-forties but she was a very attractive woman and he couldn't help but notice how nice she looked wearing a sundress that showed off her very nice and smooth looking legs. He smiled at her before the elevator door closed and stood there waiting for it to drop. \n\nAs he stood there he suddenly got an idea but wasn't sure how to ask Koldak to do it without her hearing him but he suddenly felt his cock twitch a little. He thought it was a little weird but then he noticed Heather start to sweat a little before she turned to him. She reached out and grabbed the emergency stop switch stopping the elevator before she pushed him aga8nst the wall and started kissing him.\n\nPeter was shocked that it was literally that easy and Koldak could basically read his mind. She reached for his belt pulling it off and pulling his pants down before she stood up and slid her panties off. She backed against the wall smiling as she lifted up her skirt and lifted her leg showing off her pussy for him to see. Without hesitation, he stepped forward shoving Koldak in between her legs and thrusting his hips.\n\nHeather let out a moan of satisfaction as Peter put his hand around her waist as he continued to fuck her. She slid down her shoulder straps showing off her breasts as he noticed she was not wearing a bra. She was a bit of a hippy so it didn't surprise him as he leaned down and began sucking on her nipples a little as her moans grew louder and louder.",
        "A little while later there were a few people waiting for the elevator on the bottom floor. When the door finally opened Heather walked out seemingly as if nothing had happened as Peter stumbled out behind her buttoning his pants. A few of the neighbors looked at him weird as they stopped on and headed up to their apartments. The scent of sex was strong in the elevator as the doors closed.\n\nHe was a little confused that she just walked away almost like they didn't just have sex which he thought was strange. She walked out the front door and headed on her way as Peter walked out behind her and headed in the opposite direction.\n\nPeter walked around the city seeing many attractive women all over the place. The problem he was running into was how to chose as it seemed like for every beautiful woman he saw there was always someone hotter. As he walked his phone suddenly went off in his pocket. As he took it out he saw another text from Lauren asking if he wanted to hang out today.\n\n\"Shit, of all days.\" He said to himself texting her back. \"I actually have some things to do today but will let you know a good day to hang out.\"\n\n\"Who was that?\" Koldak suddenly said.\n\n\"Shh, I don't want anyone to hear you.\"\n\n\"They cannot, only you can.\"\n\n\"Oh, alright good.\"\n\n\"Is this Lauren someone you wish to have sex with?\"\n\n\"What, no... I mean yes but...\"\n\n\"You can have her right now if you wish?\"\n\n\"No, no please don't, she is more special than that, look I don't expect you to understand.\"\n\n\"I understand,\" Koldak said as he began to ponder a few things. \"She would be perfect.\"\n\n\"What's that?\" Peter asked.\n\n\"Nothing you need to concern yourself with, for now, we must find you a sexual mate though.\"\n\n\"Yeah, I'm working on that.\" He said as he looked all around before he got an idea. \"Wait a minute, what about her?\" He said seeing an amazingly hot brunette walking towards him talking on her cell phone.\n\nShe was wearing a business skirt with a button up and a blazer and black framed glasses. She had a very naughty librarian look to her or at least that was how Peter saw her as she seemed to ignore everyone around her still talking on the phone. From the sound of it, she seemed to be talking to a client or something as Peter just stared at her checking out her curvy looking body.\n\nAs she walked past him she almost smirked at him like he was in her way as she walked past him. She stepped a few feet away when he suddenly felt his cock twitch a little. It was a strange sensation as he stood there but suddenly the woman stopped and turned back towards him. She dropped her phone on the ground grabbing Peter by the shirt and pushing him against the wall before pressing her lips to his.\n\n\"Oh shit!\" He said between kisses. \"Um, hello there.\"\n\n\"I need to fuck you right now.\" She said reaching for his belt.\n\n\"Woah, we are in the middle of the street.\"\n\n\"You're right, come with me.\" She said grabbing his hand and pulling him along.\n\nPeter wasn't sure where they were going before she walked into a small coffee shop dragging him towards one of the restrooms. Luckily they were the single person restrooms and had locking doors even though they got some odd looks as she dragged him through the dining area.\n\nOnce inside she pushed him down on to the toilet seat before straddling him and pressing her lips to his. He thought about how strange and almost gross it was doing it in a public bathroom like this but the more he taught about it the more turned on he got. She opened up his pants releasing Koldak as his cock stuck straight up in the air. The woman had a wide-eyed look on her face seeing it as she quickly lifted up her skirt and slid off her panties before lowering herself on to it.\n\nPeter couldn't believe what was happening. This woman was gorgeous and he was having sex with her right here and now. She moved her hips milking his cock before grabbing her shirt and ripping it open sending buttons flying. He looked up at the black lacy bra which told him she liked looking sexy as she grabbed it and slid it down showing him her larger shapely breasts.\n\nPeter reached up and grabbed them squeezing them gently as she let out a moan of approval. He leaned forward and began teasing her nipples with his tongue making her whine out as her hips continued to milk his possessed member. She grabbed his head pushing it into his chest holding him tightly.\n\nA few moments later he could feel himself ready to cum. He could swear he heard Koldak moan a little before his cock erupted inside this woman making her scream out her lust as Koldak's black oozy cum sprayed into her causing her to orgasm harder than she was used to. She writhed on top of him for a few minutes still enjoying the sensation before collapsing against him for a moment.\n\nShe finally pulled herself up taking a deep breath as she slid off him. His cock was still dripping with little bits of black ooze as she looked around and grabbed her panties sliding them back on. She wobbled a little as her knees seemed a little shaky but she freshened up the best she could before smiling at him and unlocking the door.\n\nPeter quickly pulled his pants back up and washed his hands. He didn't make eye contact with anyone in the coffee shop and just headed out the door and down the street. The woman headed in the opposite direction picking up her phone where she had dropped it and calling her client back as if nothing had just happened.\n\n\"Dude, that was awesome,\" Peter said watching her walk away.\n\n\"She was a very good human specimen.\"\n\n\"Oddly accurate I guess, but does she even remember it happening?\"\n\n\"The effect I use to get them turned on is temporary, she will go about her day with no memory of what happened.\"\n\n\"Huh, that explains Heather, well that's probably for the best anyway.\"\n\n\"Is there anyone else you desire?\"\n\n\"I dunno, let me look around a bit.\"\n\n\"Just remember Peter, any woman you desire is yours for the taking.\"\n\n\"I know, honestly that's what makes it so hard.\"\n\n\"Well, why don't you think big?\"\n\n\"What do you mean?\"\n\n\"What is a sexual fantasy you have always wanted fulfilled?\"\n\nPeter thought for a moment about some of the strangest things he had ever thought of. As he thought mire an idea suddenly popped into his head that put a smile on his face.\n\n\"Koldak, what about protection!\"\n\n\"What do you mean?\"\n\n\"Well, I don't want to end the day with crabs or something worse.\"\n\n\"Sexual diseases or no problem, you are immune to them as long as I am here.\"\n\n\"Good to know.\" He said hailing a taxi and getting inside.\n\n-----\n\nA little while later he was out front of a strip club called Charlie's which he had been once or twice before. He knew this idea was a crazy one but he knew what Koldak could do and it was the best idea he could come up with. He finally opened the cab door and headed inside.\n\nAs he approached the front door he found himself getting a little nervous about this plan if his when he heard Koldak say, \"what is wrong?\"\n\n\"I dunno, just seems a bit crazy, and I am nervous.\"\n\n\"I may be able to help with that.\" \n\n\"How so?\" Peter asked before he began to feel a little strange.\n\nEverything that had happened after the moment he stepped inside seemed to be a blur. He suddenly found himself with a private room with 5 of the hottest strippers there and a very cute bartender he had spoken to one of the last time he was here. His cock was being squeezed between amazing looking breasts both fake and real. Koldak seemed to be enjoying himself as well as one by one each of them was straddling him as Koldak squirted his black ooze into them.\n\nThe first stripper he fucked got up and left the room after which he thought was a little odd at first but was soon lost in a sea of pleasure again. Before he could acknowledge the stripper that left other one was on top of him riding Koldak with passion and fury.\n\nHe didn't know how many time he orgasmed but there were hands all over his body massaging him and pleasuring him. One woman was riding his cock while two others were licking his balls. The other three were rubbing his chest or pouring champagne in his mouth or kissing his neck. Everything was amazing as blurry orgy continued for god only knows how long.\n\nHe saw one of them rubbing the black cum he squirted out all over her chest. At one point he could have sworn he saw her eyes flash red but as he blinked a few times and focused they looked normal. He didn't think much of it as the pleasure continued. He honestly didn't know how many times he had fucked each of them as every time he finished another one was on his demonic cock followed by another and then again like an endless circle. \n\nThe bartender actually had a better-looking body than some of the strippers as she was all natural and just hot as hell as she jumped on his cock again letting out cute little moans as Koldak pleasured her. At one point he felt s9mething very strange like something inside his cock was massaging him before sticking out of the tip and tickling her insides as well. Koldak put an image in his head and he suddenly realized it was Koldak's tongue both making his pleasure better on top of hers.\n\n----\n\nAs the sun had gone down and he exited the club Koldak twitched a little. Peter didn't think much of it at first but it happened a few more times making Peter wobble a little as it felt strange and also good every time he did it.\n\n\"What's up Koldak?\"\n\n\"There was someone in there, someone powerful.\"\n\n\"Um, okay?\"\n\n\"It feels strange, I may need to investigate this further.\"\n\n\"What like right now?\"\n\n\"No, we have other things to do first.\"\n\n\"We do, I was planning on going home.\"\n\n\"Precisely!\" Koldak said as Peter hailed another taxi and got inside.\n\n----\n\n\"I am so sorry you didn't get to see as much of the talent as you wanted, there was a private party and...\"\n\n\"No need to apologize,\" the blonde woman said holding her drink. \"I came here looking for potential employees but I may have found something much more intriguing.\"\n\n\"Is there anything else you need Madame Sasha?\" The manager said as his eyes seemed glazed over as if he was under her control.\n\n\"That will be all for now Mr. Dunne, pretty soon you will be out of business anyway and I will just take what I want, the Safari will be the only club people will want to visit,\" she said with a sick grin.\n\n,\"Yes Madam Sasha.\" He said standing there like a zombie almost \n\nShe suddenly saw the cute bartender who had a look of confusion on her face as she walked out of the back room as if she wasn't sure what had just happened. \"Actually, send her over here, I wish to have a chat with her.\" She said licking the fangs that had just grown in her mouth as she wanted to learn a little about the recent guest and also taste of this young woman herself.\n\n----\n\nIt was late so Peter headed home thinking they could have more fun tomorrow. As he opened the door and turned on the lights he was shocked to see Lauren in there but she was strapped to a large wooden table with a gag over her mouth.\n\n\"Lauren, what the hell?\" He looked over and saw his downstairs neighbor Tammy, the sexy businesswoman from earlier that day and the Stripper who had left the party early. They both seemed to have a strange look in their eyes as they were pitch black like they weren't themselves. \"Koldak, what is going on?\"\n\n\"Lauren has been chosen as the vessel I will use to resurrect my love, Felora, it has been 100 years and it is time for us to be together again.\"\n\n\"Woah, wait a minute, you didn't tell me any of this.\"\n\n\"It was not your place to know, you got what you wanted, now it is time for me to get what I want.\"\n\nPeter suddenly fell to the floor as his cock began to twitch uncontrollably. Koldak suddenly became erect ripping through his pants and sticking straight up in the air pulsing as Lauren looked over confused and trying to scream but was gagged by the other two ladies.\n\nPeter began to feel an intense orgasm start as the there ladies came over placing their hands on his cock before the started chanting \"Arise Koldak!\" Over and over again.\n\nThe black ooze started to squirt out of his cock and drip down towards him. As it dripped he noticed it starting to coat his cock almost sticking to it before traveling up the rest of his body. He felt strange ad the black ooze spread all over him covering every inch of his skin before reaching his face and sliding across it.\n\nPeter felt himself fading away as Koldak took over his body and mind before he was engulfed him and stood up. Lauren looked overseeing this man before her with black skin. He had ripped off Peters clothing and she couldn't help but admit he was very toned and attractive despite the two large horns in his head and long black hair. His eyes were more of a gold color as he examined himself before walking over to her.\n\n\"That will be all ladies, I will take it from here,\" he said as they all left the apartment returning to their lives unaware of what had just happened before Koldak walked over to Lauren. \"Fear not, you have been chosen for this night.\"\n\nLauren tried to talk but her voice was muffled by her gad before he finally slid it down to let her speak. \"What did you do to Peter, what do you want from me?\"\n\n\"You care for him do you?\"\n\n\"What?\"\n\n\"He has great feelings for you, I knew that the moment I possessed him, which made you perfect for what I needed.\"\n\n\"What are you talking about, please let me go!\"\n\n\"I can't do that, I must resurrect my love, my Felora, even if it only for one night.\"\n\n\"Please don't do this, please just...\" She stopped when he slid the gag back over her mouth. \n\nLauren was frightened as Koldak began to chant a strange language as he placed his hand on her head. \"Redi Mea Felora.\" He repeated over and over again as Lauren struggled to get free.\n\nAfter a few moments, she began to feel a little strange as his words began to echo in her head. She felt a strange warm feeling in her body before her eyes rolled into the back of her head. Her skin began to turn a pale white color and her brunette hair began to turn a darker black color as her body writhed on the table. She suddenly opened her eyes which were now black as she stared up at Koldak before easily breaking free of her binds and placing her hand on Koldak's face.\n\n\"Koldak, my love, has it been 100 years already?\"\n\n\"Yes my love, we have out time again.\" Felora smiled pulling him down for a kiss before she pulled away. A strange sadness came over her face which confused him as he placed his hand under her chin luring it to look into her eyes. \"What is it, my love?\"\n\n\"Koldak, this will be my last visit to this world.\"\n\n\"What, no, the deal was every hundred years...\"\n\n\"Yes, but every time you pull me back from the afterlife my soul becomes damaged, I didn't notice at first but if we keep this up, it will destroy me.\"\n\nKoldak heard these words and it crushed him a little. Everything he did was to see her again every hundred years and now he had just learned that this would be the last time he would ever see the love of his life again. A tear began to trail down his cheek as she reached up and wiped it away.\n\n\"Koldak, it is time for you to move on.\"\n\n\"I can not, you are my heart and soul, what will I do?\"\n\n\"You will live, and live for yourself, not for me, do you remember our time together?\"\n\n\"Of course I do.\"\n\n\"We had many wonderful years together, we lived a long and happy life in each others embrace.\"\n\n\"We did, it's just... It's not fair.\"\n\n\"No, it isn't.\"\n\n\"But this was my doing,\" Koldak said: \"I made this bargain with Heloris, and I got what I wanted.\"\n\n\"Nothing lasts forever my love, no you cannot die but this world will not last forever and one day, after all is gone, we will be together again.\"\n\n\"I hope so my love.\"\n\n\"But if this is to be our last night together, then we should not waste time.\" She said pulling herself up and pressing her lips to his again.\n\nKoldak held his lover in his arms holding her close as their lips touched. He wanted to savor every moment of this which gave him an idea. There was a spell he had learned long ago during his times with the gods and also since. He was never sure if it would work but if this was to be their last night together he knew it was worth trying.\n\n\"diebus tarde,\" he spoke as this strange bubble began to form around them both. \n\nThe clock in the wall suddenly began to slow down until it appeared as if it was not moving at all. Koldak smiled as his spell had worked and the passage of time had been slowed to a crawl as he tore the clothing from Felora's borrowed body as he began exploring it with her tongue tracing it along her skin. \n\nNeither Peter or Lauren were aware of what was going on. At best they would remember a hazy dream-like state of pure ecstasy as these two demonic lovers have their way with each other which was now going to last much longer than they had originally planned.\n\nKoldak lifted Felora up before sliding her down in his cock making her whimper at the sensation. She placed her hands on his shoulders as she held on feeling his warmth inside her. She remembered what it was like the first time she laid with him being the famous demon of sexual gratification that he was and he was all hers.\n\nHis taste, his scent, the feeling if his skin pressed against hers was just as incredible as she had remembered it being all those centuries ago. She knew what he had done and what spell he had cast. This was going to their last time together and now it was going to last a very long time.\n\nThey moved from the table to the couch. Followed by heading to Peters bedroom laying in the bed. After that, they were on the floor rolling all over. Koldak made her cum over and over again as his rock erupted inside her. The black ooze cum he injected into those women Peter had laid with gave him control over them when he needed which is how he was able to capture Lauren.\n\nNone of that mattered to Koldak now as his lover was in his arms in a cycle of pleasure that seemed to go on forever. It was the exact night they both needed before Felora would return to the afterlife and even though Koldak did not know when he would see her again the spell that he cast for their last night together had slowed time down so much that the 8 hours they were together felt more like 10 years.\n\nWhen the end finally came and they laid on the floor together as Felora traced her finger along his chest he did not want to let her go. He held her tightly as they laid there in silence for a long time just enjoying the feeling of each other for as long as they could but she knew her time was coming.\n\n\"It's almost time.\" She said in a soft voice.\n\n\"I'm not ready to let you go.\"\n\n\"I know, but thank you for tonight, I could not have asked for a better last meeting with you.\"\n\n\"Don't say that, I will see you again someday.\"\n\n\"I know you will, and I look forward to that day, but promise me something.\"\n\n\"Anything Felora.\"\n\n\"Find purpose, find happiness, find love if you can.\"\n\n\"I... Can't promise I will ever love anyone else.\"\n\n\"But promise me you will try.\"\n\n\"I... I promise.\"\n\n\"Thank you, you know my heart will always belong to you, but don't be afraid to share it.\" She said pressing her lips to his again.\n\n------\n\nPeter awoke on the floor of his living room with Lauren asleep against him. He looked down and saw they were both naked which had him very confused as he sat up quickly. Lauren also opened her eyes wondering what was going on as she noticed they were both naked as well as she grabbed a blanket off the couch covering herself up.\n\n\"Peter, what the fuck just happened?\"\n\n\"I um... I don't know!\"\n\n\"Well two crazy bitches kidnapped me and dragged me here before tying me to that table, then you walk in and become possessed by some creature that I am pretty sure came out of your dick.\"",
        "\"Yeah, I um...\" He said confused as his cock seemed a little bigger than he remembered but there was no sign of Koldak.\n\nHe looked over on the table and saw a statue of a demonic penis and suddenly realized Koldak was no longer inside him but had returned to his prison. As he looked down at his penis he thought it was a little strange it was bigger than it had been originally.\n\n\"Peter, what is going on?\"\n\nBefore he could answer he heard a strange voice in his head that he recognized as Koldak before he said: \"I am sorry for everything, enjoy my going away present,\" he said referring to Peters new larger sex organ. \"Also I know how you feel about Lauren, don't let her go, in fact here is something to get you started.\"\n\n\"Koldak, what do you mean?\" He asked as he looked over and saw Lauren suddenly starting to sweat as she was fanning herself.\n\n\"Oh shit,\" she said with a confused look on her face. \"Oh fuck, come here.\" She said getting up and grabbing Peter kissing him before falling back on the couch with him on top of her.\n\n-----\n\nThe next day Peter walked up to the front door of Lilith's Erotic Emporium with a bag in his hand. He saw Nessira behind the counter looking at a magazine as he stepped closer and placed the bag down. Nessira looked up with a confused look on her face before she finally smiled.\n\n\"Peter, I didn't recognize you without your mailman uniform.\"\n\n\"Hi Ms. Ravenhill, um, this fell into my Mailbag the last time I was here apparently.\" He said taking out the large stone demonic penis statue from the bag.\n\n\"So that's where he went.\"\n\n\"Yeah.\"\n\n\"Oh my, so how did it all turn out?\"\n\n\"What do you mean?\"\n\n\"He didn't cause a problem did he?\"\n\n\"Well, it was an interesting experience.\"\n\n\"I am so sorry, sometimes things in here have a mind of their own.\"\n\n\"It's fine,\" he said adjusting his pants a little.\n\n\"I see he left you with a little present, well maybe little isn't the best word for it.\"\n\n\"Yeah, well my girlfriend isn't complaining.\"\n\n\"You have a girlfriend now? Oh, this is so juicy, when you started your vacation you said you were spending it alone.\" Nessira said placing the statue of Koldak in a box and taping it up before placing a prepaid label on it.\n\n\"What are you... I am still on vacation.\"\n\n\"I know, but it would mean a whole lot to me if you could bring this to the Safari for me.\"\n\n\"I dunno, I have plans today and...\"\n\n\"Please, I promise you won't regret it, besides would you rather I give this to Frank?\"\n\n\"Oh shit, that's a good point, alright, for you Ms. Ravenhill, I will.\"\n\n\"There's a good boy.\" She said handing him the box with a smile on her face. \"Oh before you go, which dress do you think would make my boobs look better?\" She said holding up a bridal gown magazine showing him two different dresses.\n\nPeter looked at the dresses that didn't look at all like normal wedding dresses. He began to imagine her in either which was making him sweat a little thinking about it. Before he could answer he felt his resized sex organ starting to react as he began thinking about what an amazing wedding night her fiance was going to have.\n\n\"Uh oh!\" He said out loud."
    ],
    "authorname": "maestro84",
    "tags": [
        "demon",
        "possessed penis",
        "penis possession",
        "blowjob",
        "mind control",
        "possessed",
        "blow job",
        "forced cum",
        "demon cock"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-cock-of-koldak"
}