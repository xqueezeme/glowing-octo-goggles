{
    "title": "War Games",
    "pages": [
        "The first thing I need to tell you is that this really happened. I know it's all very unlikely but remember one in a million chances happen nine times out of ten.\n\nFirst let me describe myself. My name is Martin.\n\nI'm not exactly what you'd call attractive but then nor am I hideous. My complexion isn't what I'd want it to be but I'm not repugnant as such. Pretty much normal really. Average height but maybe a little short for my weight, if you know what I mean. Oh, and I'm eighteen and, well, a bit geeky if I'm really honest.\n\nWhen I say geeky, I mean that I spend my time with like-minded peers playing computer games, discussing new technology, the latest episode of Heroes or a comic. What I don't do is anything athletic or anything related to girls.\n\nGirls are completely out-of-bounds. Don't get me wrong, I love girls. I love looking at their pretty radiant faces and their gorgeous beckoning curves. I spend as much time as I can tossing off to my fine collection of pornographic magazines or surfing the most excellent content of the interweb. I am immensely intimately familiar with the anatomy of the female sexual organs, or at least their two-dimensional representations on paper and screen.\n\nBut I don't talk to actual real girls because they are terrifying. When a girl talks to me, I get tongue-tied and anxious; I blush like a neon sign and mumble incoherently like an idiot. And, of course, then they laugh at me, not always in an unkind way but alarmingly all the same. Which makes it even worse.\n\nSo although I go to a large mixed school with a lot of girls, I stick to my own kind as much as I humanly can, only talking to the opposite sex when absolutely unavoidably forced to do so.\n\nI said I don't do anything athletic which is a bit of a lie. There's one thing I have to do. You see the school I go to is an old-fashioned English public school, although there's no boarding, so we all have to do some extra-curricular stuff such as a sport or, in my case, CCF.\n\nCCF stands for Combined Cadet Force, which is basically a bunch of school-kids playing at being soldiers and the like. I took the CCF option because it was better than a mandatory sport such as Rugby (brutally physical), Cricket (I have no hand-to-eye coordination) or Rowing (just not fit enough).\n\nInstead we get to prance around in a uniform, playing with ancient (unloaded) weapons and pretending we're Rambo. Or in my case perhaps more Rimbaud. Anyway, I'll be honest, I do kind of enjoy the drilling, the shoe polishing and the range shooting. Maybe because you don't have to a physical behemoth to do them so I can compete if that's the right term.\n\nI chose the Army over the RAF because, as far as could see, the RAF cadets don't actually get to go flying; they just talk about it a lot. And anyway their uniform just looks a bit camp. At least as an Army cadet we get a beret and a shiny badge and access to WW2 rifles and big short wave radios.\n\nThe bit that really isn't any fun at all though is the exercises. I don't mean press-ups or squat-thrusts, I mean all of us going away for the weekend to some god-forsaken part of Hampshire or Berkshire to run around in the woods firing blanks like we're real soldiers. That's not so bad by itself; what I do object to though is the fact that these exciting episodes are punctuated by hiking for miles lugging around a ridiculously heavy radio pack or a virtually antique yet preposterously weighty .303 rifle which all seems pointless in a world where Land Rovers have been invented and work very well. After all we're only pretending to be soldiers.\n\nBut worst of all is the effect of the lack of supervision on my schoolmates. It's not quite Lord of the Flies but there is without a doubt a level of feral regression when you send out a bunch of school-kids and tell them to walk a few miles until they find this other bunch of school-kids and then pretend to fight them. And what's even worse is when you impose a formal command structure.\n\nYou see I've been doing this for a good five years now, getting by with the minimum I can in order to satisfy requirements and I've been promoted to Lance-Corporal. For those you not familiar with the ranks of the British Army this is just one step above a Private who are the lowest of the low. All my peers are at least Sergeants if not higher which shows that life really is a popularity contest, I guess.\n\nBut what that means is that I've got sixteen-year old kids who outrank me and can order me around when we're on exercise. And of course they do, incessantly, gratuitously and unpleasantly. Little bastards one and all.\n\nOf course there are some teachers who are ex-forces and officers from the Territorial Army involved but they can't cover a hundred cadets over a ten mile by ten mile area, so abuses of power happen.\n\nWhich brings me to the exercise I've just been on, the last of the school year and therefore my life.\n\nIt was called Operation Bulldog. No idea why, but I suppose you need a macho name for these things. Operation Dahlia just doesn't have the same ring to it.\n\nAnyway, it was in the spring. The weather was dry and reasonably warm, an important consideration when you're sleeping on the ground under an outstretched supposedly waterproof poncho.\n\nIt was the last day of the exercise so I couldn't wait to get back home. I was dirty and smelly and tired. Tired as in exhausted but also tired of eating non-specific canned meat and oddly tasteless biscuits, tired of drinking water from streams and tired of, quite literally, shitting in the woods.\n\nAnyway I was in the Green platoon and our mission was to capture the colours of the other two platoons, cleverly named Red and Blue respectively. They were of course trying to do the same thing to us. Cue lots of trekking around trying to find their camp and sitting in the bushes in the vain hope of ambushing someone.\n\nI was lucky in terms of the squad I was in. It was led by Staff Sergeant Andrews and Sergeant McRoss, both of whom were in my year at school and neither of whom felt the particular need to exert their authority by treating anyone like shit. Also we had three cadets, all fourth years, so of around fourteen or fifteen years old.\n\nThe other reason I was lucky was because in real life Andrews and McRoss were Jenny Andrews and Chloe McRoss, and they were both breathtakingly lovely. Jenny was tall, blonde and slender, with sparkling blue eyes, endless legs and a stupendous arse. Chloe was darker and a touch shorter but much curvier too, with large boobs, big brown eyes and a generous smile. When she looked at you, it was like she was seeing right into you. She could make me blush just by being in the same room. They were best friends and both were stunning and so spent a lot of time populating my varied and detailed erotic fantasies as objects of the utmost desire.\n\nNow, it was nice to spend time with Jenny and Chloe, but in reality they pretty much ignored me as I didn't seem to be able to talk in their presence which, as you can imagine, precluded much conversation. I, along with the rest of the squad, just followed along as the two of them made all the decisions.\n\nAs one of three squads in the Green platoon, we had been assigned with the task of attacking Red's base and capturing their colours, which was basically just a flag. For once, an ambush actually worked. Unfortunately, we were the ambushees rather than the ambushers.\n\nIt happened very quickly; all I can really remember is some sort of war-cry being bellowed from my left before two huge blokes tackled me. I didn't put up much of a fight.\n\nWithin a few minutes, I was sitting with my back to a tree in a small clearing, my arms tied around the back of it with some blue plastic rope. It wasn't a big tree but it still felt very sturdy. When no-one was looking I tried to move but I couldn't.\n\nI was worried. I had been really glad I hadn't been a member of the Red Platoon as all the senior ranks seemed to be composed of ignorant slow-witted bullies. The only thing imaginable that was any worse than being in the platoon was being their prisoner.\n\nNot that they would physically torture me in any permanently harmful way. But, in my role as a natural victim, I didn't think I would be enjoying the next few hours much.\n\nThe two oafs who had so triumphantly captured me were actually a couple of years younger than me but they didn't hold back with their insults and empty, I hoped, promises of brutality.\n\nWe were interrupted a few minutes after my ignominious detainment when another four meat-headed morons turned up, dragging the struggling Chloe and Jenny between them. It looked like the rest of the squad had managed to get away, the cowards.\n\nI have to say they put up a real fight of it, much more than I did. Maybe it was because they didn't think they would be struck in return, but they kicked and screamed and punched heroically until their hands were finally tied behind them. They even had to hold Chloe down until she realised that she couldn't get away.\n\nWhen I saw who was in charge of the Red squad, I realised why they had struggled so much.\n\nKenny Carter was captain of the school rugby and cricket teams; he was preposterously handsome and outlandishly muscular; he was head of the Army section of the CCF, ranked as a Sergeant-Major. And he was a complete twat.\n\nDon't get me wrong, this isn't about jealousy, although I'd be lying if I said I wasn't jealous of his good looks and popularity. It's just that Kenny was an unpleasant bully, someone who enjoyed a bit of casual cruelty, verbal or physical. He wasn't stupid either which just made him better at being a wanker.\n\nAnd for some reason girls weren't able to see past his impossibly good-looking exterior to the ugliness inside. In fact the lovely flawless Jenny and he had been going out for a couple of years. They were the perfect couple, successful and attractive, the Posh & Becks of the school.\n\nHowever, it was rumoured that they'd had a big fight and had split up acrimoniously only days before. Which was why, I guessed, Jenny looked so pissed off to have been caught, beyond any of the more obvious reasons.\n\nIf Kenny had had a moustache, he'd have been twirling it fiendishly. \"Hello, Jenny. What a lucky surprise,\" he said.\n\n\"Get off, you bastard!\" Jenny kicked at one the grunts who were holding her.\n\n\"It's all right, let go of her,\" Kenny ordered smoothly. The two girls were surrounded by them now.\n\n\"What do you want, Kenny?\" Chloe asked, her voice steady.\n\n\"Oh, I don't know, Chloe,\" Kenny teased unpleasantly. He stepped behind her and put his arms around her slim waist before beginning to unbutton her camouflage jacket.\n\nChloe flinched but still looked relatively composed. \"Stop that,\" she said tensely.\n\nJenny wasn't as calm. \"Leave her alone!\" she screeched before trying unsuccessfully to kick him.\n\n\"Tie her legs together,\" Kenny instructed and she was immediately hobbled by his henchmen, using more of the blue plastic rope.\n\nKenny had now pulled Chloe's jacket open to reveal a green vest, snugly enclosing her remarkably big tits. His hands slid up her body to fondle her breasts, causing her to scream involuntarily.\n\n\"Kenny, leave her alone. She's never done anything to you,\" Jenny begged once more.\n\nKenny gave Chloe's boobs a final squeeze before turning to Jenny.\n\n\"No, she hasn't. I just thought she might be a bit more up for it than you, you frigid bitch,\" he hissed at her as he moved towards her.\n\nJenny tried to step back but her legs were tied together above the ankle leaving only a few inches between them. She fell back on her delicious bum causing the boys to laugh spitefully.\n\nKenny was down on her in an instant, again unbuttoning her jacket to reveal a tight green t-shirt. Jenny's boobs weren't as abundant as Chloe's fine bosom but were still a good handful. This time his fondling appeared more forceful and cruel as he pinched her nipples unkindly.\n\n\"I'm going to have some fun with you, Jenny,\" he promised her.\n\nNow you might wonder what I'd been doing while this unpleasant scene unfolded.\n\nIt seemed that everyone had forgotten I was there and, not being the most forthcoming, I hadn't done anything to remind them of my presence. I was caught between two overwhelming feelings: disgust at this cruel spectacle and excitement at seeing two beautiful girls' boobs being groped.\n\nYes, I know how wrong it was but I couldn't help it. I'm not proud about how I felt but at least I then tried to do something to improve the situation\n\nI could feel a righteous anger building in me as Kenny slid a hand down around Jenny's hips to squeeze her bottom. But I had no idea what to do. I took a deep breath and then another as I furiously tried to think of a solution, some way to stop things turning even more nasty.\n\nIn the end, going for a simple direct resolution, I blurted out, \"Stop that.\" Please don't underestimate how difficult it was do that, no matter how inane an option it was. But at least I had made an effort to say how I felt.\n\nSo I was little upset that no-one seemed to have heard me. I tried it again this time with some force behind my voice.\n\n\"Fucking stop that!\" I screamed at the top of my voice.\n\nThey all turned to look at me. Jenny looked wide-eyed and terrified. Chloe gave me the ghost of a smile. Kenny sneered at me contemptuously,\n\n\"Or what?\" he said, striding over to tower above me.\n\nI'm not sure where I got the courage from but I managed to splutter an ineffectual answer. \"Or you'll be in trouble, you, you, you bastard,\" I threatened.\n\nKenny stepped back with a puzzled expression as if he'd just met a talking labrador. He looked around briefly before kicking me in the stomach.\n\nIt hurt.\n\nLet me say that again with the proper emphasis; it really really really fucking hurt!\n\nHis goons laughed as he strode back to the girls.\n\n\"Right tie her legs up too,\" he ordered gesturing to the admirably lovely Chloe. \"We're going to go and get the Blue flag and then the Green one. And when we're back, we're going to continue our discussion in private,\" he warned Jenny pointedly, stroking her hair menacingly.\n\nThe Red squad gathered their gear and loped off in the direction of the Blue camp, boasting about what they would do when they were back. Listening to their comments, it seemed that Chloe was as much at threat as Jenny.\n\nOnce they were gone the girls tried to stand but found that they could only stagger a few tiny steps before falling again.\n\n\"Oh shit, shit, shit,\" Jenny cursed as she tried to pull her wrists out their bindings. \"It's no bloody use, there's no way I can get my fucking hands out.\" You could tell she was maybe a touch stressed.\n\nChloe was calmer but I could tell she was angry. \"Those arseholes,\" she said, rolling her head from side-to-side in obvious discomfort. \"They really hurt my neck.\"\n\n\"Are you all right?\" Jenny asked.\n\n\"Yeah, I'm OK. It's just a bit sore. Right, it'll take half an hour to get to the Blue camp and back. And then another half an hour and back to our camp. Let's just think about what we can do to get away.\"\n\n\"It's all right for you,\" Jenny replied acerbically. \"You're going to get away with a bit of a groping. Kenny's going to rape me when he gets back. I could see it in his eyes!\" Jenny tried to crawl along the floor but struggled to a halt, sobbing uncontrollably.\n\nChloe sighed. \"Jenny, it's OK. Come on, there's no point in panicking. We just need to think. Perhaps we can wait for a few minutes and then shout for help.\"\n\n\"You don't understand, Chloe,\" Jenny whined. \"You know why we broke up. He wanted to have full sex and for me to, you know, give him head; but I didn't want to. So he dumped me and went off with that slag Katy Beckford!\" Interesting gossip, I thought. \"But he always gets what he wants. I wouldn't be surprised if he's been planning this ever since we broke up,\" she continued pathetically.\n\nThey prattled on for a while in a similar vein.\n\nWhile all this was going on, I was recovering from being winded by Kenny's boot. Despite my heroic, crucial and painful intervention they seemed to have overlooked me once more.\n\nI cleared my throat causing them to jump.\n\n\"Oh shit, Martin. I forgot you were there,\" Jenny said. Told you so.\n\nChloe was a little more sympathetic. She tottered over to me before collapsing down next to me. \"Sorry, Martin, are you OK? Thanks for stepping in earlier. If you hadn't interrupted, I think they might have got carried away,\" she breathed. Her eyes were soft and brown and warm. God, she was hot.\n\nI immediately blushed and began to stutter incomprehensively.\n\nChloe just smiled at me. It wasn't an oh-my-god-what-a-nerdy-idiot kind of smile more of an it's-ok-calm-down-we're-all-friends-here-I-promise-not-to-bite type of smile. At least it had the immediate effect of making me feel better.\n\n\"It's fine, I'm OK,\" I replied bravely.\n\n\"Oh, good. He really gave you a whack, didn't he?\" she asked concernedly.\n\n\"Yes, but it's all right,\" I said, soldiering on, quite literally.\n\nJenny interrupted. \"What the fuck are you talking to him for? Don't you understand, we need to get away! He's going to be no fucking help!\" she ranted.\n\nYou can really go off people, can't you?\n\n\"Jenny, please. If he hadn't distracted Kenny, you might already have lost your precious virginity!\" Chloe replied with sterling judgement.\n\n\"Oh, for fuck's sake, Chloe. Let's just get away, you stupid slut. You might like to shag around, but I'm not going to wait around here to be used by that git!\" she cried.\n\nChloe looked at her evenly, stonily silent, but I could tell she was furious. Obviously, so could Jenny.\n\n\"Sorry, Chloe. I didn't mean that. I'm just terrified...\" she started but was interrupted.\n\n\"Stupid Slut? Shag around?\" Chloe's look was as frosty as a really really frosty thing.\n\n\"I'm sorry. I didn't mean it like that. It's just that I'm not as experienced as you. The whole thing just petrifies me,\" Jenny apologised.\n\nWow. So Jenny was a virgin and Chloe was 'experienced'. Fantastic, I thought, already reordering my fantasies, ready for when I was alone with my right hand.\n\nI decided to interject.\n\n\"Um, if it helps, I might be able to help us escape,\" I said.\n\nThey both looked at me.\n\n\"What do you mean?\" Jenny asked.\n\n\"Um, it's just that, I've got a knife,\" I said.\n\n\"Oh, Martin! I could kiss you!\" Chloe said her eyes bright, with perhaps just a touch of worship in them.\n\n\"Really?\" I squeaked, stunned by the thought of kissing this soft-lipped perfect-figured stunner.\n\n\"Really,\" she laughed. \"In fact get us out of this and I'll do a damn sight more!\"\n\n\"Where is it?\" said Jenny, rudely interrupting my reverie.\n\n\"Oh, um, it's here, strapped to the inside of my left thigh. It's a steak knife.\" Now, you might ask why I had a steak knife strapped to the inside of my thigh. First of all, if I'd had access to a proper hunting knife then I'd have used that. However such things aren't so easy to come by for middle-class schoolboys in the Home Counties of England so I'd made do with stealing a steak knife from home.\n\nAnd the reason I'd strapped it there wasn't because I'd really thought I'd ever need it but you just never know, do you? And anyway it made me feel big and manly and dangerous.\n\n\"Your thigh, why your thigh?\" Jenny asked ungratefully.\n\n\"So that it wouldn't be found in a search. And it wasn't!\" I replied, amazed at my lack of temerity. Maybe this talking-to-girls lark wasn't as difficult as I'd imagined.\n\nChloe was a lot more positive. \"Who cares why? The question is how do we get to it?\"\n\nThis was a fair question. My arms were tied behind the tree. The girls could hardly walk and their hands were tied at the wrists behind their backs. This wouldn't be easy or, indeed, allow much personal space.",
        "They shuffled closer on their knees and had a good look at my crotch. I had often dreamt of such moments but these weren't quite the circumstances I'd imagined.\n\nAfter an embarrassing inspection, Chloe spoke. \"Well, we're just going to have pull his trousers down to get the knife.\"\n\nIt's funny but if you'd asked me how I would have felt to hear Chloe McRoss say she wanted to pull my trousers down then I don't think my reply would have been absolute terror. But it was.\n\nBecause I knew exactly what would happen if these two young goddesses started to fumble at my crotch. I would get an erection. And then surely my life would be over in a storm of humiliation. I could see it now as word spread across the school about Martin's hard-on. Oh, the shame.\n\n\"No, you can't!\" I said, pulling my knees up to my chest defensively.\n\nThe girls looked at each other before some unspoken agreement saw Jenny shuffling a touch closer so that her face was a foot away from mine. Her eyes were ever so blue.\n\n\"Please, Martin. I'm really sorry I was rude to you. I'm just very frightened. But I really need you to be my hero,\" she said. I noticed Chloe raise an eyebrow sardonically at this shameless attempt to manipulate me.\n\nEven so, I blushed once more and smiled inanely. \"Um, OK,\" I agreed because right at that very moment I would have done anything for her.\n\n\"Thanks, Martin,\" Jenny said before turning on the spot laboriously on her knees to face away from me.\n\n\"Chloe, help me\" she said as I opened and extended my legs.\n\nChloe sighed, \"OK, back a bit, bit more right, you're there.\"\n\nJenny shuffled back a touch more until her hands they were groping at my lower stomach. She could move them reasonably freely as they were bound at the wrist. \"Where're the laces?\" she asked, groping a few inches above my genitals. My cock twitched at her touch. I tried to think of something other than her lovely bottom only inches away from genitals.\n\n\"There! You've got it!\" Chloe said as Jenny deftly pulled at the loose ends of the drawstring to undo the bow holding up my green lightweight trousers.\n\nIt took a lot longer to undo the button though and, by the time she eventually managed to do so, I was feeling pretty uncomfortable. It wasn't just Jenny's fiddling with my trousers or her peachy bottom enclosed so cosily in her khakis either. Chloe was leaning in close guiding Jenny's scrabbling and her jacket was open giving me a wonderful view of her magnificent bosom under her green vest. Considering her trim waist and slender legs, she really did have enormous tits.\n\n\"Jenny, please, I think you should stop,\" I warned.\n\n\"It's OK, I'm nearly done,\" she replied obliviously.\n\nMy cock had got harder and harder even though I was doing my best to distract myself by thinking about Mrs. Thatcher nude and trying to recite the Arsenal first XI.\n\nLuckily it wasn't too obvious as it was pointing down my left leg, trapped by my boxer shorts.\n\nHowever as Jenny managed to get hold of my flies to tug them down, I could tell that Chloe had noticed my predicament.\n\nI looked into her big brown eyes in a panic knowing that any second now my erection would be fairly obvious to both of them even if it were inside my underwear.\n\nAnd then Chloe made everything worse. She glanced at the bulge down my leg and smiled, before pushing her chest out and deliberately and lasciviously licking her lips. My hard-on reached its maximum dimensions instantly.\n\n\"Oh fuck,\" I said just as Jenny grabbed hold of my trousers and pulled them down hard.\n\nUnfortunately she grabbed a handful of my boxers with it and, although the lightweights came down enough to expose the top of the knife, my cock exploded out of my shorts like a startled pheasant.\n\nChloe's eyes widened as Jenny, still unaware of my exposure, fumbled around behind her. \"Where is it?\" she asked, trying to find the knife.\n\nIt took a few seconds for her to realise what she was holding as her hands came down around my straining stiffy. I didn't disabuse her as her soft fingers felt divine as they gently and quizzically clasped my cock, squeezing perplexedly.\n\n\"Oh, fuck!\" I sighed.\n\nWhen she did finally comprehend that she was holding my dick, she shot forward in a panic. \"Oh my god!\" she screeched as she fell unceremoniously flat on her face.\n\nChloe giggled maniacally as Jenny turned to gaze at my cock in utter disgust. Then she looked up at me like I'd shat in her porridge.\n\n\"You animal,\" she said emotionally.\n\n\"I'm sorry! I couldn't help it. I told you to stop. I'm not used to anyone touching me there!\" I said.\n\nJenny shook her head incredulously as she stared at my erection.\n\nShe turned to the hysterical Chloe. \"And you! You could have warned me. This just isn't funny!\"\n\nHowever, Chloe obviously thought that it was as she rolled around in uninhibited mirth.\n\n\"You, you, should have seen your face when you got hold of it\" she eventually gasped. Jenny didn't crack a smile.\n\nI was feeling highly embarrassed as my erect penis stood proudly exposed but at the same time elated. After all Jenny Andrews, the gorgeous willowy blonde babe Jenny Andrews had just held my cock. In her actual real hands. Still the situation was awkward to say the least.\n\n\"What do we do now?\" Jenny asked after Chloe had eventually composed herself.\n\n\"I suppose we get the knife,\" Chloe said, leaning in close to have a look at how it was strapped to my thigh. \"Wow, Martin, you've got a big one.\"\n\n\"Really?\" I asked incredulously.\n\n\"Yeah. It's the biggest I've ever seen,\" she said with perhaps a touch of enthusiasm in her voice. For the first time ever, I felt proud of part of my body. Chloe McRoss had said I had a big cock!\n\n\"She should know,\" Jenny said bitchily. \"And I'm going anywhere near that,\" she added firmly.\n\nChloe raised her eyebrow again. Fuck, she was beautiful. \"In which case it looks like Kenny will be back in ten minutes to find you here and Martin's cock waving around in the wind. I, for one, am not keen on that situation.\" She gave me a surreptitious wink. My cock twitched in response.\n\nJenny looked defeated. \"It's just that I don't want to touch...\" she spluttered to a halt.\n\n\"Come on, Jenny,\" Chloe said. \"It's just a cock. You gave Kenny handjobs didn't you?\"\n\n\"Yes, but I fancied Kenny. This is different. Anyway, why don't you get it? You've felt loads more than me,\" Jenny challenged, unwisely in my opinion.\n\nChloe's eyes flashed briefly in annoyance. I decided that I would never want to get on the wrong side of her.\n\n\"Let's do it together,\" Chloe suggested after a moment. Jenny nodded.\n\nThey actually managed to get the knife off my thigh disappointingly quickly, although Chloe gave my cock a little friendly squeeze as they did so. I couldn't see her face but I think it might have been deliberate. In any case it certainly had the result of keeping me hard and proud.\n\n\"Ow!\" I squawked as they ripped the surgical tape off my leg to release the knife, taking half my leg hair with it.\n\n\"Oops! Sorry, Martin, I'll kiss it better later,\" Chloe teased, unnecessarily but with an affectionate smile.\n\n\"What do we do now?\" Jenny asked, looking at the slightly blunt and somewhat pathetic steak knife.\n\nChloe thought briefly. \"It depends. If they're going to our camp directly then they'll be back in about thirty-five minutes.  But if they go via here they could be here in five minutes.\"\n\nJenny shook her head. \"It's on the way. They'll come back here first,\" she said resignedly.\n\nChloe agreed, \"I think so too. And I think it's going to take more than five minutes to cut through these ropes even if we free only one of us. Which means we need to hide the knife and put Martin back into his pants and do him up before they get back. And then when they go off to our camp we can get away.\"\n\nJenny stared aghast at my erection but nodded.\n\nChloe looked me in the eye. \"Martin, be honest, is it going to go soft by itself?\"\n\n\"No,\" I answered honestly.\n\n\"Right, Jenny, we're going to have to help him because there's no way we'll be able to get it back in like that,\" Chloe said.\n\n\"Oh, my god,\" Jenny cursed. \"Chloe, please will you do it?\"\n\nChloe frowned at her but said, \"I'll start it off but you might have to help, Jenny. After all this is all your ex-boyfriend's fault,\" she chastised. I thought that this was a little disingenuous as Chloe had seemed to have gone out of her way to make and keep me hard but I decided not to contradict her as my heart was in my mouth.\n\nThey weren't they really talking about tossing me off, were they?\n\nMy question was answered as Chloe shuffled around and grabbed my cock between her two delightful elegant hands. They felt cool and soft and divine.\n\n\"Let me know when you're going to come,\" she warned before beginning to bounce awkwardly on her knees to move her bound hands up and down my shaft.\n\nIt's difficult to describe how I felt. It was a mixture of disbelief, pleasure and frustration. It was amazing that I was being masturbated by one of the most beautiful girls in existence but it was also immensely irritating that she couldn't really get hold of me to do it properly.\n\nChloe rapidly came to the same conclusion. \"It's not working, Jenny. I can't get into a proper rhythm. Martin, do you think you'll come if I keep going like this?\"\n\nNow, the honest answer was yes. It might not have been as wonderful as it could have been but it was by far the most fabulous feeling I had ever experienced. But I decided to play along and see what would happen if I said no.\n\nJenny groaned in annoyance at me. \"Let me have a go,\" she said.\n\nJenny's hands felt just as good and to be fair she put a lot more effort into it even though it was still stilted and clumsy. I could feel myself building up to orgasm but then Chloe leant in towards me behind Jenny's back and mouthed, \"Hold on,\" and then licked her lips slowly.\n\nAlthough the sight of her long pink tongue sliding over her moist full lips made me even more excited I managed to blurt a lie out to Jenny. \"Jenny, it's not working.\"\n\nShe pulled away from me just in time and swore. \"Well what the fuck do we do now? They'll be here in a few minutes!\" she cried in a panic.\n\nChloe glanced up at me briefly before saying, \"There's one more thing we can try. We could use our mouths.\"\n\nJenny looked at her in absolute revulsion. \"You have got to be kidding. I'm never ever going to put that thing in my mouth. You can do it if you want to.\"\n\nChloe finally allowed her annoyance to show. \"Well, fine. I'd be happy to do it but my neck hurts from when your ex's goons attacked me so I can't do it by myself. Let's just sit here and wait for them to come back and find Martin with his cock sticking out. I can't wait to see how Kenny reacts. I wonder what position he's going to take you in? I'd guess from behind as he seems to love your arse.\" she finished acerbically. What a girl.\n\nJenny looked extremely distressed and I almost felt sorry for her. I was about to say something when she nodded. \"Chloe, show me what to do.\"\n\nOh fuck, I thought. She wasn't really going to, was she?\n\nChloe gave me a quick satisfied smile before bringing her head down so that she was a few inches from my cock. \"I'll start him off, Jenny. I know you've never done it before but it's really easy.\" Her breath tickled me as she spoke.\n\nAs Jenny watched on, Chloe looked up at me and slowly, deliberately slid her mouth down over my cock, pulling my foreskin down with her lips. She swirled her tongue around my knob, grimacing slightly at the taste - after all I'd not had shower for two days. Despite this she unhurriedly moved her mouth up and down, smiling at me around her mouthful of cock.\n\nIt felt better than I had ever imagined. I mean I'd always thought it would feel good but this really was way way beyond anything I could have dreamt. Her mouth was hot and wet and tight around me.\n\nWhen she broke off suddenly, I groaned in frustration.\n\n\"Go on, Jenny,\" Chloe said. \"I've started it off for you but my neck hurts...\"\n\nJenny's eyes were wide with apprehension but as her mouth enclosed me, for some reason, my sympathy for her disappeared to be replaced by unmitigated bliss.\n\n\"That's it, move up and down and lick him with your tongue,\" Chloe directed with a smug smirk.\n\nJenny did as advised and it blew my mind. \"Oh fuck, oh fuck yes,\" I moaned as she closed her eyes tight and bobbed her head frantically,\n\nYou could tell she wasn't as experienced as Chloe but it still felt astonishingly marvellous.\n\n\"That's it keep sucking hard. He's getting close,\" Chloe offered helpfully and she was right.\n\n\"When he comes, make sure none of it escapes. It'll be obvious if any spunk drops on his trousers,\" Chloe warned causing Jenny to moan in alarm, probably at the thought of a mouthful of my gunk. However probably because she didn't have much of an option, she kept going.\n\nUnfortunately for Jenny, when I did come it was the most explosive orgasm of my life. I spurted and spunked repeatedly, filling her pretty virgin mouth with my jism. Rather sportingly she kept bobbing her head gently until I had completely finished after which she spat it all onto the ground in disgust.\n\n\"Oh, my god, that was horrible,\" she complained. I have to say I disagreed with her.\n\nChloe gave me a huge smug smile before the two of them tried to get me back into a presentable state.\n\nThey weren't able to lace or button up my trousers but as they managed to pull the top of my jacket down enough so it wasn't obvious. The knife was hidden underneath my bottom and we were ready a good five minutes before anyone came back, more than enough time for us to have cut through at least one set of ropes if we'd started right at the beginning. I decided not to mention this.\n\nKenny and his thugs came back in triumph with the captured Blue standard. They seemed to be excited about the prospect of getting the Green flag but Kenny still had time to abuse Jenny a little more. This time she didn't particularly struggle.\n\nIn fact when he squeezed her tits, she just looked him in the eye challengingly. And when he tried to kiss her, she just opened her mouth for a long lingering snog. Kenny gave a mild grimace at Jenny's bad breath but I guess he just thought it was a consequence of being on exercise for two days rather than the slightly more remote possibility that she'd just sucked me off.\n\n\"You evil cow!\" Chloe exclaimed after the Red squad had left for their next acquisition.\n\nJenny burst into a fit of giggles. \"I know! He always used to go on at me so much to suck his cock, I just thought he should find out what it tasted like,\" she sniggered wickedly.\n\nAnd really that's the tale apart from a few loose ends, I suppose.\n\nJenny managed to saw through Chloe's ropes pretty quickly and we were all free very soon afterwards. We even managed to win the exercise because we'd seen where Kenny had stashed the Blue flag and we were able to find the Red one too, so we were the heroes of the platoon.\n\nNot that I really cared. All I could think about were those big brown smiling eyes. Apart from when I was thinking about those sparkling blue ones. Oh and those hot wet mouths. And those big firm tits. In any case, I had a lot of nice things to think about and I did it incessantly.\n\nJenny extracted a promise from both Chloe and I that we would never tell anyone about what had happened but she seemed a lot more relaxed as soon as she was out of Kenny's power. When I saw her at school that week, she even made a few jokes about what happened.\n\nHowever, in the end, despite having come in Jenny's perfect mouth it was Chloe with whom I became friends. In fact we actually went out for a few months or at least we had a private series of casual sexual encounters as, if truth be told, she didn't really seem too keen to be seen out with me in public.\n\nNot that I was complaining. It was nice to be wanted even if it was only for my body. I decided not to feel cheap or offended. In any case, she taught me an awful lot and gave me real enduring confidence.\n\nSo now although I'm still a nerd, I'm a confident one.\n\nAnd that's my story. Every word absolutely true even if it might all be very unlikely. Believe me. "
    ],
    "authorname": "seth_perm",
    "tags": [
        "army",
        "geek"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/war-games"
}