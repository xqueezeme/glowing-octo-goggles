{
    "title": "Ingrams & Assoc 3: American Life 04",
    "pages": [
        "I hired my first employee today! Mark Glasso. Nice kid. He seems smart and driven. He's got a great pedigree and he's all up in the biz. Knows the buzzwords and knows the right people to talk to. Good looking Italian guy, which for a salesman is a great look. I suspect he's a lady-killer too, but we aren't close enough to talk about that yet.\n\nFirst employee! This time next year, there'll be ten of us! Finally, I feel like life is back on track!\n\n*****\n\nIt had rained all night and the morning brought no signs of it stopping. Charles Town was awash with water and mud from cars driving in from the surrounding land. Hillier was seriously glad he'd bought his boots with him \u2013 a last minute impulse grab, right before heading off to McDonald's for a breakfast on the move. He'd also remembered his umbrella and coat, but at this time of year, those were a must anyway. Given the way it had rained during the night, he was expecting to need them.\n\nThe stakeout the day before had been a bust, but he wasn't too cut up about it.\n\nAs it was, he was just enjoying the driving, with the windows open, smelling the freshness of the land after a major rainstorm.\n\nThat was right up until he sat in crawling traffic for an hour, passing by a three-car accident caused by the wetness, which snarled everything on the two-lane road.\n\nWhen he finally pulled into Charles Town, his temper was not the best.\n\nHe went straight to the local cop shop, and flashed his badge at the desk sergeant, who straightened up when he saw it. He made a call and a minute later, an equally harassed-looking detective in an equally rumpled suit came out, with a plastic cup of what Hillier was sure was terrible coffee in it.\n\nHe gestured to Hillier to head back and held the door open for him.\n\n\"Detective Hillier? I'm detective David Hanson. What can we do for our cosmopolitan brethren today?\" Hanson's voice was tired but clipped and precise and his use of language was enough to raise an eyebrow. His voice just didn't fit coming from the face it did.\n\n\"Nice to meet you, Detective Hanson. So, yeah, not strictly on the books here. I'm here on a more personal mission, checking out a hunch. I'm hoping you can help.\"\n\nHillier was guided to a seat next to a neat desk, with computer and phone, and almost nothing else. He raised his eyebrow at that, too. A cop's desk is NEVER clean.\n\nHanson noticed him looking and said, \"All digital out here now, chief. Paper stays in trees. So what can we do for you?\"\n\n\"Joe Sullivan,\" replied Hillier, with no preamble.\n\nHanson winced. \"And what has Charles Town's finest Boy Scout done now?\" he asked.\n\n\"So he's from here then? Score one for the hunch,\" smiled Hillier.\n\n\"Oh yeah, he's from here. The locals around here think he's some kind of wood fairy, and protect him from everything. He was involved in something a while back which got a kid killed. He got vilified by one of the kids, but then somehow he still ended up smelling of roses around here. \n\n\"I've had to pull him stinking drunk out of a bar one night \u2013 pure luck I happened to be there and see him take on a couple of redneck assholes that where harassing one of the girls in there to do karaoke. He absolutely decked those guys, although in the most clumsy way possible and I had to get him out of their before he did real damage to himself. He even had a pop at me, so I put him in the cells to sober up. He was extremely apologetic the next day.\"\n\n\"Sounds like our boy,\" said Hillier.\n\n\"So what's your need?\" inquired Hanson.\n\n\"Just trying to track him down is all. He turned up dead on our turf. Was killed defending a woman from a mugging.\"\n\nHanson put down his drink. \"Shit. That sucks. People around here are not going to like that very much. You get the killer?\"\n\nHillier scowled. \"No. Fucker got away. We know who he is and we got his two accomplices \u2013 the woman was doing a good job of defending herself and had put two down, but the other scum bag was behind her, pulled a knife, and that's when Joe got involved. He took him on, got stabbed, that's all she wrote.\"\n\n\"Oh shit. What a clusterfuck,\" sighed Hanson.\n\n\"So yeah, just trying to see where he came from. Looking to see if anyone needs to be notified, and because, well, I'm just really curious about this guy. He just seems a good guy, with a lot of shit poured on him. You know where the man laid his head?\"\n\n\"Yeah, we had to drop him back there after the drunk tank that one time. He lives out in one of the cabins at Trolley Fields. It's just out of town. I'll give you the address.\"\n\nHillier sat back as Hanson busied himself on the computer, thinking to himself, 'It's always nice when a hunch pans out.' He considered texting April to let her know he'd found where Joe lived, but thought he'd wait till he'd actually been there. He owed it to any survivors first.\n\n*****\n\nWell, I did it again. Unto the breach, dear friends. I'm a married man again. And it feels GREAT. This time I got it right. The perfect woman, I can finally trust again. Penny looked stunning today. Manny even came into town to be best man. I haven't seen him since the Cambridge Event. I'm glad he's still kicking \u2013 he looks great, working as a Harley salesman in Wisconsin. It was so good to see him \u2013 last time we spoke I was a mess and he did say how much better I was doing.\n\nWe are at the airport right now, bound for a week in Bermuda. I cannot wait to see what Penny has packed for the honeymoon. I felt like sending a pic of the two of us to Tara, but that would just be petty and she'd not care anyway. She made it clear she was done with me.\n\nWell fuck her. The best revenge is living well, and by god I'm going to do that.\n\nEven Marianne showed up at the wedding, which blew my mind. She scrubs up well, does that one. Very surprised to see her there, with her husband. She was watching me very intently, but I don't care. This is my day. Well, mine and Penny's.\n\n*****\n\nHillier pulled into the mud lot of Trolleys Fields and parked in exactly the same spot that April had the day before. He was wearing heavy boots and as such didn't have to pick through the mud as April had, which was just as well since the rain had left the ground sodden and churned up.\n\nHe ran into the guest services cottage and found almost the same set up as April had the day before, only this time, the wizened fat man, was sound asleep in one of the easy chairs in front of the fire, hands linked over his belly and a half full bottle of Johnny Walker and empty glass on the table next to it. Hillier could smell the man's breath from the door, and it wasn't pretty.\n\nHe deliberately banged the door to try and wake the man up, and when that didn't work, he walked over the desk and banged the bell several times. That had the same effect. Hillier waited a couple of moments, just in case this amazing specimen of man hood was not the desk clerk and when no one came, he went over the man and just shook him until the man came out of his alcoholic slumber.\n\nThe man fell off the chair, landed on the floor, swore and started to lever himself up. He got up and looked around with the bleary eyes of someone not yet completely awake or aware, mumbled something and shuffled off to the desk, ignoring Hillier's presence.\n\nOnce he was behind the desk, looking a little more awake, and using both hands spread out to keep himself up right, he slurred, \"What can I do for you, sir? Do you need a cabin for the weekend?\"\n\nHillier just looked at him, went straight into it and said, \"Joe Sullivan. Which cabin is his?\"\n\n\"And why should I tell you?\" said the man, trying to look haughty and just looking sad.\n\nHillier flipped open his badge. The man could barely focus on it, but said, \"Fine. Cabin 37. Sure is one popular guy recently. Two people looking for him in two days?\"\n\nHillier had been on his way out when he stopped and turned. \"Two?\"\n\n\"Yeah, the hooker the other day. Pretty girl. Would have liked some of that myself. She might even still be there. Apparently Joe is quite the man, if you know what I mean.\" The man was making gyrations with his hips that made Hillier sick to his throat.\n\nThen Hillier's eyes narrowed. \"Blond? Well put together? Driving a convertible?\"\n\n\"Yeah, sure sounds like her. Veeery cute. I can just imagine...\"\n\nHillier snorted and walked out of the cabin. April Carlisle was here! She'd found him, and before Hillier had too! Cheeky cow. Oh, words would be had, no question.\n\n*****\n\nHillier pulled in next to April's Nissan Z, meaning she was still here. He trudged up to the front door of the cabin, kicking his boots on the porch to dislodge mud and then went straight in, without bothering to knock.\n\nApril was sitting in front of the fireplace, where there was a low fire going \u2013 just embers. There was the smell of coffee in the cabin and she was wrapped in a blanket. There was a black Labrador dog at her feet, who was now on his, barking for all he was worth.\n\nHillier stopped in the doorway, wondering what to do. Should he get his piece? Was the dog dangerous? He just looked for a second, and while the dog was going nuts yelling at him, it was only walking back and forth.\n\nHillier looked at April, who looked back at him, a weak smile on her face. He noticed her makeup was extremely smeared, with streaks of mascara down her face. She'd evidently been crying.\n\nShe looked down at the dog and said, sharply, \"Max, can it.\"\n\nThe dog stopped barking and turned and looked at her, questioning. \"On your bed Max. Off you go,\" she said, just as hard.\n\nThe dog turned and ambled off to a large cushion on the floor by the stairs to the upstairs loft. He curled up on it and laid his head down, not taking his eyes off Hillier.\n\nHillier held up his hands and said, \"Ok to approach the bench?\"\n\nApril gave him another weak smile and said, \"It took me hours to hit on the right phrase for him. Got it in the end though. Joe would never have a dog he hadn't trained.\"\n\nHillier walked in and sat down on the small couch next to the easy chair and studied her. \"So, you found this place first? Clever girl. I'd love to know how you did it.\"\n\nApril put got up abruptly, throwing down the blanket and walked over to Hillier. She bent down, took his face in both hands and kissed him hard.\n\nIt was completely unexpected for Hillier. She was a very attractive woman, out of his league and it was shocking. It didn't stop him from kissing her back, but it was so out of left field he didn't feel he did a good job.\n\nShe finished the kiss and stood back, looking down at him. He didn't voice any of the number of question that were running around his head.\n\n\"Ambrose, I know this is unexpected, but I need you to take me to bed. Right now. Please. I need to feel something other than I feel right now. What I've read, it breaks my heart and I can't keep feeling that. Take me upstairs right now and do it. Please.\"\n\nThere was a quiver in April's voice, like she was really close to breaking, and Hillier had to weigh up this unexpected request. Should he do this, and give her short-term relief, but then have to deal with the fact that it happened, and she might be pissed at him for 'taking advantage', or should he respectfully refuse, hope to take the moral high ground and hope she understood down the line? Choices choices...\n\nScrew it, he was a guy and he'd not gotten laid in months. He stood up, and she took his hand and took him upstairs to the small bedroom loft. There was a queen-sized bed, with a fake animal skin bedspread on it. It was comfortable and looked clean.\n\nThey didn't waste any time \u2013 April didn't even bother taking her clothes off, she just hitched up her skirt and pulled off her panties. She had Hillier's belt unbuckled and his pants unzipped \u2013 and noticed he lived dangerously, going commando \u2013 in seconds. Even Hillier was surprised at her agility with the removal of clothes. \n\nHillier wasn't hard yet, so she looked at him with a gleam in her eye, licked her lips and crouched down, taking his expanding member in her mouth. He tasted clean and was cut, which was a blessing, but at that moment, April would not have cared. \n\nShe needed him hard and she needed him in her and she needed to feel something more than the desperate emptiness she felt after reading Julian Sullivan's Journal. That so much shit could come down on one person. So many bad things \u2013 so many betrayals, all at the hands of those he trusted and loved. And every time he tried, something else crashed down. He couldn't even save another's life without being made the villain. It was so desperately unfair and wrong. And then he'd died, saving her life.\n\nOn top of her survivor's guilt, it was too much. And she needed Hillier now. More than ever in her life, she needed a cock inside her, - any cock, - that could make her feel something.\n\nHillier was still dazed. Here he was, in the cabin of a dead man he'd been tracking down, with a beautiful woman at least ten years his junior, with her mouth on his cock, doing wonderful things to it \u2013 her mouth was like velvet, no hint of teeth, and what her tongue was doing was just amazing. She had his cock grasped firmly at the hilt, forcing more blood into it, and his erection was happening extremely fast, yet it didn't seem to stop her deep throating it. Whatever else April might be, she was one HELL of a cocksucker.\n\nIn the end, he had to physically pull her off, not that he wanted to. But he also wanted to give a good accounting of himself, and blowing his load in her mouth in the first ten minutes was not going to do that.\n\nShe looked up at him, and he was surprised at the pure lust in her eyes.\n\n\"Fuck me,\" she said, and pushed herself down on the bed, on all fours, pulling her skirt up around her waist.\n\nSo Hillier did. No preamble, he got behind her, held the tip of his rock-hard cock, and positioned it so it was in front of her opening and slid in, right to the hilt.\n\nHe couldn't believe how hot it was inside April. She was wet and he just slid in, no fuss and no hitches.\n\nApril sighed and arched her back, so the angle was even more acute and he was even deeper in her. He started thrusting, in and out, trying to work up a rhythm she would accept. He was pounding her for almost ten minutes, when he slapped her ass, hard, and heard her yip \"ow\", but in a \"give it to me again\" way. So he did it again. And she reacted again. \n\n\"Harder,\" she said. This was raw fucking and feeling. There was no emotion, just Hillier ramming it home and holding on to April and spanking her, and her accepting and offering it up.\n\nSo for the next ten minutes, he spanked April, while fucking her as hard as he could. Eventually, he just had to change positions \u2013 his thighs were on fire, since this was not something he expected and he was out of shape for this.\n\nThey tried several more positions \u2013 missionary, which Hillier really liked because he got to watch April's face, as she bit her lip, face all scrunched up, with the look of someone on their way to coming but not there yet. On her side, her on top, reverse cowgirl, everything he knew to try. And she knew two that he'd never done before. The Wheelbarrow was a new one on him.\n\nShe didn't meet his eyes at any point, but that was ok. He also noticed that he was doing all the work, but that was ok too. She needed this, not him. Although, no, he did need it. Big time.\n\nShe murmured and groaned and occasionally gave him direction with timing, until both of them where sweating, and she made him stop, just so she could shuck her clothes, that were now writing wet and sloppy. He did the same. Then they resumed, back with her on all fours, but with him standing next to the bed, pounding at her for all he was worth.\n\nBy his count she had come twice, and was on her way to a third.\n\nEventually, though, he could hold off no longer and he exploded in her, filling her with his jizz, with an almost five-month load. He could feel it blow, when he was at his fullest extension, that most awesome of feelings. Knowing it was deep in a willing woman.\n\nHe stumbled backwards, then fell on the bed next to April, who also collapsed sideways.\n\nSuddenly he realized what he'd done \u2013 unprotected sex\u2013 that was a no no! and his eyes widened. April was looking at him enough to see it and said, quietly, \"Don't worry. I'm safe. I'm sure you are too.\"\n\nHillier relaxed and laid back on the bed and just tried to catch his breath, while April watched him, through lidded eyes.\n\n*****\n\nWhen they were done later that afternoon, after a second, lazier and slower lovemaking session, April had gotten up, wrapped herself in a sheet and gone downstairs to make more coffee. She'd found Max, halfway up the stairs, looking at her and whining softly. From the lack of dog hairs upstairs, April guess he wasn't allowed up there in the bedroom, but he was curious and testing boundaries with the new people. She sent him back down stairs and he went, tail down.\n\nShe got the coffee on and Hillier appeared, tucking his shirt into his pants.\n\n\"We gonna talk about this?\" he asked hesitantly, dropping into one of the two chairs at the very small breakfast table.\n\nApril smiled and handed him a cup of hot coffee. \"No. It was a one time thing. I hope you understand that. There is no relationship here. I just...needed you. And you were there. I hope you aren't upset? We aren't in love because we fucked one time.\"\n\n\"Twice,\" murmured Hillier as he took a sip of scaldingly hot coffee, \"it was twice.\"\n\nApril smiled gently and sat down opposite him.\n\n\"I'm sorry. Big day for you?\" she teased.\n\n\"Shut up,\" replied Hillier in a flat voice, but his smile belied his tone.\n\nApril's chuckled. \"Well, speaking as someone with experience, you aren't half bad. If you aren't doing it twice in an afternoon very often, then you need to get back in the saddle, my boy. You can make a woman quite happy, you know.\"\n\nHillier arched his eyebrow at that, but didn't ask the obvious question. He didn't think he wanted to know the answer.\n\n\"So what now? What got you so upset?\" he enquired, trying to put concern into his voice. He didn't want to return April to the condition she'd been in when he got there, but he wanted the answers.\n\n\"Joe wrote a journal. It was something he picked up as a task from his therapist. It's... horrible reading. The man was so abused by everyone he trusted and loved, Ambrose. I don't honestly know how he didn't just put a gun to his head and end it all. He was fucked by the Military, by two wives \u2013 both of whom cheated on him, in the worst possible way \u2013 and then by the family of kids he saved from drowning. And what did he do? He tried to help other people instead. And he's killed saving me from being stabbed. The guy wasn't a boy scout, he was Jesus Christ himself returned to earth. I came here looking for answers and what I got was an ocean of guilt to add to the pool of it I already had.\"\n\nApril ran her hands through her hair.\n\n\"I just can't get over what these women put him through. The second one is even worse than the first \u2013 she knew what he'd already been through and did it anyway.\"\n\n\"Can I read this? I think this might be evidence, April. I may have to take this. If there is wrong doing detailed in there...\"\n\nApril was good. Her eyes didn't flicker to where the book lay, on the side table. She just simply said, \"No.\"\n\nHillier's eyebrows went up. \"No?\" he repeated. \"April, this is almost a crime scene.\"\n\n\"But it's not one. And you are out of your jurisdiction anyway, so don't be so high and mighty.\"\n\nHillier shrugged. \"Sure, but one phone call...\" He left that hanging.\n\n\"Ambrose, I'm fine with you taking the journal. But not yet. There are things I need to do with it first. I have plans. If you feel anything for this man, let me have it. I can do things you can't. Things that need to happen. There needs to be retribution and restitution and I can make that happen. Legally.\" She added that last word. \"Let me do this.\"",
        "\"Legally. You sure about that?\"\n\n\"Oh yes. Completely. Ethically up the wazzo, - although you could say it's extremely moral \u2013 these bitches need a lesson in humility and hurting people - but legally? Of course. I need this. I need to do this. Joe needs this.\"\n\nApril could already see that Hillier was wavering. She imagined that her entreaties along with the way they'd spent the afternoon were getting to him.\n\nHe opened his mouth, and closed it again, thinking. Then he said, abruptly, \"What the hell. It's not official anyway. Sure, go ahead. Get it out of your system. But I want to read this soon, ok? I want to know this guy too.\"\n\nApril smiled, jumped up and ran around to Hillier to hug him. As she did so, she felt his now stiffening erection.\n\n\"Again? You stud you!\" she said, admiringly. \"For an old guy, you keep up!\"\n\n\"Fuck you,\" he said, laughing. He knew that the rest of the afternoon could go several ways depending on what he did next, but he decided not to push it. He'd had fun \u2013 twice \u2013 and now it was time to be a nice guy. \"Go on, sit down. I can't let you rape me again. I've got carpet burns already.\"\n\nApril raised her eyebrows at him, and but went and sat where bidden.\n\n\"So what next?\" he asked her.\n\n\"Well, firstly, I'm buying this place.\"\n\n\"You are what?\" said Hillier, surprised.\n\n\"Yeah, Joe got it for a song. It was in such disrepair that the guy at the front \u2013 that lovely human being, Ted, you met him yet?\" Hillier nodded. \"Yeah, him. He sold it to Joe for ten thousand, for exclusive use for life. On the condition that Joe fix it up and also act as maintenance engineer for this place. You wouldn't know it, but all of the cabins are in excellent shape because of Joe. So he did. He got somewhere to live where his ex-wives could never find him. I figure if I offer fifteen k, well Ted got paid twice and he's not out anything that he already wasn't.\"\n\nHillier laughed at that. \"Smart man. Wish I'd done something like that.\"\n\n\"I don't think you quite understand Ambrose. He wasn't hiding from them because they wanted something. He was hiding because they wouldn't leave him alone. Tara \u2013 his first \u2013 finally came to her senses and understood what she'd done to him and kept trying to find ways to make it up to him, not at all understanding that there IS no way to make up something like that. Her desperate need to forgive herself lead to her hounding Joe. \n\n\"And, nice guy that he was, he couldn't make her leave him alone. The fact that he was still in love with her made it especially difficult. Add to all that the fact that he just didn't know why she'd done it \u2013 her explanations are in a different realm of existence from his, he simply had no frame of reference to understand them. He blamed himself, but didn't even know what he was supposed to change. He needed to leave, crawl away and lick his wounds forever. So he found this place, where he could be anonymous and be alone.\"\n\n\"Jesus. This guy's life...\" \n\n\"It's all in the Journal, and from what I've gathered from finding this place. I've met both the wives \u2013 both pieces of work, let me tell you \u2013 his therapist, his old landlord, the whole shebang.\"\n\n\"Yeah, I was going to ask how you got here before me, Miss Therapist? Therapist my ass. What is it you really do?\"\n\n\"Let's just say I work for an 'agency', and leave it at that, ok? No questions, no lies.\"\n\nHillier snorted, but left it alone. It wasn't worth the aggravation.\n\n\"So you've got yourself a new weekend cottage. Then what. What about the wonder dog down there?\"\n\nApril's eyes gleamed. She looked over at Max and whose head jumped up off his cushion at seeing her glance at him.\n\n\"Max and I are sticking it out. He's my new boyfriend.\"\n\n\"Does your apartment building allow dogs?\"\n\n\"What a strange question to ask. But no, they don't. But you know what?\" April cocked her head at him. \"I think I just decided to buy a house. My lease is up next month anyway and I've considered it a couple of times. Yes, time to settle down. Time to buy a house. Fuck it.\"\n\n\"You'd buy a house just so you could have a dog?\"\n\nApril's eyes flashed dangerously. \"No, I'd buy a house to have JOE's dog,\" she said, in a low voice.\n\nHillier backed off. \"Ok, so what next?\"\n\nApril smiled, danger averted. \"Well, first, a shower, then time to make Mr. Universe an offer, then I have some people to see. And a funeral to organize.\"\n\n*****\n\nI think I might have met someone. I wasn't expecting this. I still feel...damaged. It's been two years but I still haven't really met anyone. Marianne encouraged me to date, but honestly, nothing has clicked. Most of the women I meet are either married or looking for something that is not me. That much is obvious within the first ten minutes. I dunno, maybe it's been me. Hard to tell when you are on the inside looking out.\n\nAnyway, I'm on a cruise around Alaska, whale watching. I was at the bar making some snide remarks that judging by the size of some of the women on the ship, we didn't need to go to Alaska, we could have just sat by the pool. A little bitter, but still funny. There was this really cute blond, sitting there laughing and chewing on a stirrer and by god, she made eyes at me. I mean me. Mr. Loser! She is hot as hell, all petite and tight and boobs and ass and her name is Penny and we just sat and talked all day in the bar. I didn't even feel any of the drinks I had.\n\nShe's lying next to me on the bed now, snoring gently. One thing is for sure, next time I get a stateroom, I get one with a king size bed. But the sex. Oh My God, the sex. This woman is so uninhibited, it blows my mind. Or something. I've never gotten off like that before. Three times in one night. I think this girl must be a keeper. Or a hooker. Either way, I think she needs to stay in my room from now on.\n\nThis was an unexpected turn up for the books, that's for sure. Not looking this gift horse in the mouth though.\n\n*****\n\nApril had a busy couple of days. The negotiation for the cabin took longer than she anticipated, and the disgusting owner of the cabins wanted more than she was willing to give. He kept hinting about \"Get-togethers\" and she kept wanting to vomit.\n\nIn the end, it cost her seventeen thousand dollars, but she now had exclusive use of the cabin for life. The only two regrets that Ted had were that he didn't get to fuck April, and that he was out a maintenance guy.\n\nShe took Max home with her, and even though the apartment complex did not allow pets, she bribed the doorman to look the other way for the next month.\n\nShe stopped in at work and had a few words with the R&amp;D department, who confirmed what she had already suspected \u2013 that Aaron Glasso was not Mark Glasso's son. That he was, in fact, Joe Sullivan's son. The DNA sample she'd gotten, coupled with a sample from Joe's body \u2013 being the one paying for the funeral home had its uses \u2013 had spoken. There was no doubt, not that there had been the moment April had seen both Aaron and Mark in the same room. If she has seen it then she idly wondered how no one had commented on it to Mark?\n\nAt the end of the day, she knocked on the door of Penny and Mark Galsso's apartment. She had timed it so Mark would already be home \u2013 or should be \u2013 and she was greeted by Penny at the door, who recognized her immediately.\n\n\"Mark! It's that legal lady, the one about the will!\" Penny smiled at her and gestured for her to come in.\n\nApril pushed open the door and in doing so, made Penny stumble back. \n\n\"Hey, you didn't have to push so hard.\" Penny glared at her.\n\n\"And you don't have to be quite as much of a disgusting whore slut either, Penny, but you are and so there we are.\"\n\nThere was a stunned silence.\n\n\"Wh...what? What did you say?\"\n\n\"I called you a disgusting slut Penny. Now sit down before I make you sit down.\"\n\n\"I think.. I think you'd better get out...\" stammered Penny, looking very distressed.\n\n\"What's going on here?\" demanded Mark, stepping into the room and looking from April to Penny.\n\n\"She's.. she's insulting me, Mark. Calling me a whore.\"\n\nMark looked at April angrily, who just shrugged and said, \"Well, she is. You know that. You married her. And fucked her for almost a year while working for her husband, who had no clue. You are quite the douchebag yourself. Let's be honest. The pair of you do deserve each other.\"\n\nMark's eyes went wide and he stepped up to April, clearly very angry and squared off.\n\n\"What the FUCK makes you think you have the right to come in my home and say things like that? I'll fucking...\"\n\n\"You'll what?\" interrupted April, not in the least bit intimidated. \"What will you do Mark? Hit me? You're a fucking wife-stealing pussy, who is too much of a chicken shit to even find his own woman. No, you just get in the middle of someone else's marriage and fuck that up, and take someone's business with them. What kind of man does that? Oh wait, a man like you. A small-minded pissant with a winning smile and a malicious mind. Christ, what a prize you are. You must be so proud, Penny.\"\n\nMark lost his temper and lunged at April. She saw it coming and let one his hands land on her breast, and as he did so, so used her left hand as a knife edge, to hold his hand there, and with her other hand, she grabbed his little finger and yanked back. It didn't break, but Mark buckled under her, trying to keep his hand up, so she didn't break his finger.\n\nApril manipulated his finger so Mark was on the ground and then smashed his face into the coffee table. He was lucky it wasn't glass, but she did see a splash of blood erupt from his nose. She let him go and he climbed to his feet, breathing heavy, blood dripping out of his nose.\n\n\"Penny, you might want to get some tissue to mop up some of wonder boy's blood. Get lots, there might be more if your asshole husband tries that again.\"\n\n\"Who the hell ARE you?\" said Mark, breathing through his mouth, while Penny tried to mop up his face.\n\nApril dropped into the couch and smiled at them, then launched into what she had come to say.\n\n\"I'm the fucking angel of retribution. I am the black wings of righteous, come to rain down fire on you fuckers for what you did to Joe Sullivan. It's always been coming, and now it's here. I am here and you need to sit down and shut the fuck up while your little worlds come to an end. \n\n\"You offer me violence and I'll fuck you up, as we've already established. So sit down and listen. Or not. Either way, it doesn't matter. I'm here in lieu of Joe Sullivan, and while he may have just let you get on with your sordid little tale of betrayal, I am not so forgiving, so listen up kids; your lives as you know it just ended.\"\n\nPenny's mouth just opened and closed and she glanced at Mark, who was still trying to deal with his nose bleeding. Both just stood there not knowing what to do.\n\n\"I said SIT DOWN.\"\n\nPenny just sat, while Mark stood there, rage in his eyes, flexing his hands into fists, impotently. Eventually he sat down next to Penny, still gingerly touching his nose.\n\n\"Right, where shall we start? Penny. You are a worthless gold-digging whore. No, don't argue. We all know you are. Let's start there. So you decided to cheat on Joe with this equally worthless piece of shit? How did it start? Why did it start? What did Joe not give you?\"\n\nPenny looked back at Mark and then at Penny, in clear consternation. \"Stop looking at him Penny, you'll see in a second why you need to stop listening to what Mark says. Answer the question.\"\n\n\"I...I..I needed more.\"\n\n\"Of what?\"\n\n\"Everything. Joe was great and nice and he had a business, but it was clear that it wasn't going the way he had hoped. He wouldn't take business from Mercano's and they own the market around here. He just...was making ends meet. \n\n\"I met Mark and it was clear that he was on the way up. He doubled Joe's business in a month. A month! Mark was where it was at. He liked to party \u2013 Joe never did, he hated even weed, let alone a bit of charley. He liked to fuck \u2013 I found that out quite quickly. He treated me like I wanted to be treated. Joe put me on a pedestal. Mark fucked me on the pedestal. \n\n\"Do you have any idea of how great it was to get both? Being loved by Joe and fucked by Mark? But I knew I'd have to make a choice. I'm sorry about Joe, really I am. He was a good guy. But he was never going anywhere. He sold me a bill of goods, and I took it back because it wasn't what it said on the tin.\"\n\nPenny started to get belligerent, in the way people do who have been caught out and are fighting back with very thin self-justifications.\n\nApril considered her and said, \"Well, as a whore \u2013 and let's be clear, that's what you are \u2013 I'd have to say you didn't do that well. Selling yourself and your marriage for this?\" she gestured around at the cluttered apartment.\n\n\" 'Making ends meet'? Fuck that. It doesn't look to me like there's much more here than you had with Joe. Does Mark have a big cock? Was that the draw? Why haven't you moved up again Penny? That's your thing right? Not got enough, move on to the next. Something must keep you here.\"\n\nPenny's eyes flickered to the bedroom door.\n\n\"Oh yes, Aaron! Of course, what was I thinking. Gotta stay for the kid. For dear old 'daddy' here. Tell me Penny, because I'd really like to know. Does Mark know that Aaron is not his? That he's actually Joe's? That you are such an evil human being that you'd actually lie to his real father and tell him he's not \u2013 a last act of betrayal that just gives away with a malicious and frankly evil person you really are. Did Mark know, or have you successfully lied to him too?\"\n\nPenny turned to Mark, who was now staring at her, horrified.\n\n\"It's not true, honey. You know I had the test done. I told you. I sent the letter to Joe! Aaron's yours!\" she said, desperately, searching Marks face for understanding. He just stared at her.\n\n\"Of course it's not true. What a crock of shit. You really going to trust her Mark? Once a liar, always a liar. Here, you can check this out.\"\n\nApril threw out a stapled document onto the coffee table. She nodded at it. \"There you go, full DNA analysis from a sample from Aaron and one from Joe. 99.99% probability of paternity. Don't believe me? Get one yourself, you'll see. How anyone can't see it is beyond me. Surely you remember what Joe looked like? Aaron looks nothing like you Mark. I can see that, why can't you?\"\n\nMark looked back and forth from Penny to April, and started to reach for the document.\n\nPenny broke in, whining, \"Mark, no, it's not what you think. Honestly babe. It's not. Aaron is YOUR son. You raised him.\"\n\n\"So you did know. You....fucking whore. I thought he was mine. I thought that was part of the whole reason we got hitched. Jesus...\" Mark just seemed to collapse into himself as he examined the document.\n\n\"Well, it's out there now Penny. Want to explain yourself? Go ahead girl. Now is as good a time as any...\"\n\n\"I had to say it. I needed Joe gone. We needed to start alone. Mark, he's your kid. Don't you see that? Who cares who his sperm donor was? We are a family. We are together. We are for each other. Can't you see that?\"\n\nApril laughed. \"Oh yes. A family that lies to each other....wait, what's the rest of that saying?\"\n\nPenny flashed a look of pure fury at April.\n\n\"Oh don't get all pouty. We aren't done here, not at all. I honestly don't know how you could do that to Joe though. I mean, that's just...fucking evil. What did he ever do to you that you would do that to him? Lie to him like that? Take away the only thing he could have always claimed was his? Do you understand what you did?\"\n\nPenny looked away and said, \"What he didn't have, he would never have missed. I had to do it. Mark and I needed it. I wasn't even sure it wasn't Marks, anyway. What was the point in making a fuss about it. He accepted it wasn't his and we were all fine.\"\n\n\"Wow. Just wow. You truly deserve what is coming your way. Your turn though first, Mark. Firstly, this.\"\n\nApril pulled out her phone and made a call. She waited two rings be connected, and then said \"Dermot? How you doing? No, almost done. Need a favor though, so thanks for waiting and letting me call your personal line. Who do we know at Treasury? Oh, David Johnson! Oh yes, I remember him. He does owe us, doesn't he? Deanna is completely what he needs, no question. But here's what I need. I need a forensic IRS audit. Yes, the Crawl-Up-Your-ass kind. We need it to happen on Glasso Design. Yes, G-L-A-S-S-O. Based in Aspen Hill. Yeah. That's great. Thanks Dermot. \"\n\nShe was looking at Mark the whole time. He just looked back at her, expressionlessly. When she was done, he said, \"Haven't you done enough? First I find out my kid isn't mine, thanks to super whore here, and now I get an IRS audit?\"\n\n\"Ohh, is my lickle baby all upset? Oh dear, can't have that, can we? We need to make you REALLY upset. So, let's do this.\"\n\nApril dug around in her purse and produced another file of documents in a manila folder. She threw it onto the coffee table, after the first document. As she did, several photographs spilled out and as Penny started to reach for one, Mark saw what they were and yelled, \"NO\" and tried to reach for them.\n\nPenny got there first, and uncomprehendingly picked up a picture depicting Mark, standing, with a slim brunette woman on her knees, with his cock in her mouth. She dropped the picture and picked up another one. This one had the girl on her knees with Mark thrust deep in her. The quality of the pictures was grainy but the content clear.\n\nShe looked up in shock at April, then at Mark. \"What...what is this Mark? What are these? Is that Melissa?\"\n\n\"That is indeed Melissa, Marks personal assistant. As far as we can tell, it's been going on a while there Penny. Not been taking care of things at home have we? Tsch tsch. Not a good idea with a man who thinks nothing of taking someone else's wife. Oh, she is married by the way. In case you didn't know. With a child too. And another one on the way. SAY! You don't think that perhaps this might be a real child for Mark, do you? One he actually sired? What do you think Penny?\"\n\n\"It's lies, Penny. All Lies. These are photoshopped. This bitch is just trying to cause trouble, split us up.\"\n\nPenny just looked at him, still uncomprehending.\n\n\"Well, you might say that. It's not true though. The file is full of times and dates, and a couple of videos my guys got from the cheap little motel they use when there are people at the office. It's grainy, but I think you'll get the picture. So, let's recap. Marks business is going to have serious trouble because he's going to have the IRS up his butthole for weeks, you didn't tell him his own son is not his, and Mark has been having an affair with his personal assistant and you had no clue. Now you truly have an idea of what you fucking assholes did to Joe.\"\n\nThere was silence for a second, then a sob from Penny.\n\n\"So let's ensure that we all understand the situation here. I can make more happen if I choose to \u2013 I just don't right now. Enough bombs for one day I think. The only thing you are going to do, Penny, is tell Aaron the truth about his parentage. He'll be confused, but he's young and he'll adjust. Mark, you are pretty much his dad, and much as it pains me to admit, even you, asshole as you are, will do a better job than none at all. So you'll be around, and you'll continue to love him, or I'll know the reason why, do I make myself clear?\"\n\nBoth Penny and Mark looked over at April, with unabashed loathing in their eyes. April smiled back and stood up. \"Good. Is no one going to see me out?\"\n\nMark didn't get up, but Penny did. She threw herself at April shouting, \"Bitch\", a move which shocked Mark, never having seen this side of Penny before, but which did not shock April at all.",
        "She sidestepped and let Penny run into the wall. The she stepped forward, lightly but firmly, and pulled Penny's shoulder, so she spun around. She gripped her left hand and pinned her against the wall and with her right, she grabbed Penny around the throat. She yelled, \"Mark, sit down\" glancing back at Mark who had stood and looked ready to join the fray. He looked pretty scary, blood all down the front of his shirt and on his face, but his expression was radiating indecision.\n\n\"Penny and I are only going to have a conversation, Mark. Sit down.\" April said again, hissing it into Penny's face. Penny was pushed up against the wall, her eyes looking down at April, wide with fear.\n\n\"Right, bitch. So here it is. I am Joe's retribution. I've been a long time coming. Frankly, you are lucky I didn't just raze the place to the ground. You are lucky you have a son I care about, or Really Bad Things would have happened here today. I am fucking angry on behalf of a man you abused and lied to, and the payback starts now. You make me any more angry and you'll be in hospital, eating through a tube. Do I make myself clear?\"\n\nPenny couldn't nod, so she tried to say, \"Ye...Yes...\"\n\n\"Good. I'm going to let you down now. You try anything else and you go out through the front window. You understand?\"\n\nApril released her grip and Penny nodded when she was able. Her hands went to her throat, were Aprils handprint was clearly visible.\n\n\"Glad to hear it. Now, fucktards, have a shit day. I'm outta here. Oh and no, you aren't in the will, I am glad to say.\"\n\nAnd April gathered up her bag and walked out, the door slamming behind her, leaving Mark and Penny staring at each other, breathing heavily.\n\n*****\n\nToday I started my own business. It's all part of the five-year plan. Marianne helped me put it together. Honestly, that woman is a godsend. She's like my therapist and life planner and best friend all wrapped up in one.\n\nSo yeah started up for myself. Doing what I did at Mercanos, but now the boss is me! I was hoping I could possibly pick up some of the clients I had at Mercanos, but we'll see how that goes.\n\nI don't want any contact with any one from old place. God knows, most of them knew what was going on and not one fucker told me. I don't think I have any real friends there, and I don't need the stress.\n\nWe \u2013 well, I say we, but it's just me - moved into a small office on the west side. It's small and its not particularly flashy \u2013 it's going to need work and a paint job, but it's cheap and it's mine and it's my new home, so better get used to it. \n\nSetting up a business takes a while, that's for sure. So many things to sign. But Sullivan Services is a go. Now to make it work. Never been afraid of hard work and not going to be now!\n\nThis time next year, I'll be sailing. Have a staff of 20 people! You wait. Life part two starts now.\n\nNot going to think about Tara and fuckface at all. Fuck them. Fuck all of them at Mercanos. One day they'll come to _me_ for a job! And then I can laugh at them.\n\nI've been reading some stories online about people in my situation. Apparently people go out and write a best selling story, or work out and get buff or write songs, or discover some other way of becoming mega successful now they aren't held back by their cheating spouse. I don't think that's going to happen for me. But maybe I can do ok by just working for myself. Fuck Mercanos. Who needs them?\n\n*****\n\nTara Western put down the phone and sighed. It had been a shitty week all round. Her committee work was running into issues of infighting among the bored socialite women who were on it \u2013 they had money and all of them wanted to be in charge. The boards of the three companies she worked as an officer for were also in chaos \u2013 one company was fighting for its life against a hostile take over, another was being roundly trounced by a new startup, offering the same services but almost for free and the third was just stagnant. It needed new leadership and to be bold and the fifty-eight-year-old CEO they currently had was just Not It.\n\nIt was all very stressful, and the news of Joe's demise had also given her more than a little pause for thought. She'd been looking for him for so long, so desperate to make amends, as much as she could. She could quite understand his reluctance; she'd given him no choices and just done whatever she had thought was best, never really considering the long term implications for him, beyond \"He'll get over it. Better fast and quick than long and drawn out.\"\n\nNow he was gone. Her chance at any kind of absolution was gone. It weighed on her, and she'd had some pretty awful dreams in the last two nights.\n\nShe'd spent one night just sitting with a bottle of wine, going over her life's choices and realizing how screwed up and one sided most of them had been. She was tired, she was beaten down and she had no idea how bad it was about to get.\n\nThe phone call had been from the front desk. That investigator woman was back and saying she needed to see Tara. They'd put her in the conference room on the second floor, the one with the view of the golf course.\n\nTara grabbed a coffee and breezed into the conference room, to find April seated on one side. She noticed she didn't rise when Tara entered the room, and that didn't feel appropriate, but Tara let it go. Her day was bad enough as it was without jumping on issues for someone she'd never see again.\n\nShe sat down quickly, put down her coffee and tried her best to smile. \"Yes...April is it? What can I do for you today? Any luck with your investigation?\"\n\nApril just looked back at her. She seemed to be weighing up the whole situation \u2013 Tara, the room, even the color of her hair. There was silence for a full minute that stretched out. Tara was about to say something when April said, \"Yes, actually. I found where he lived. I found a lot of things. And I have to say, Mrs. Western, I don't much like of any of them. I had no idea Joe had such unbelievable sluts for wives. All the morals and ethics of a drugged out whore.\"\n\nThere was a stunned silence as Tara struggled to understand what had just been said to her. Had this woman just called her a whore...?\n\n\"I'm sorry...did you just...?\" she stammered out.\n\n\"Call you a whore? Yes. Although I have a lot more respect for whores than I have for you, I have to say. Most of the whores I know are hardworking girls who make no bones about what they do for a living. Good luck to them, I say. You? You are a sneaky, backstabbing bitch who makes all of us look bad. You fucked someone to get a leg up and have the gall to say you are 'in love'. Fucking career whore. That's all you are Tara. A career whore, in every sense of the phrase. Have you ever cared about anyone? Beside yourself I mean? I'm curious.\" April's tone was even and the question was asked in a genuinely curious tone. \n\n\"I... I think I need to call security.\" Tara managed to get that out and reach for the phone.\n\n\"You do that Tara. You call security. I'll go easily, no question. But before you do, let me explain a few things to you. What's going to happen next.\"\n\nTara had the phone in her hand and a finger poised to dial but for some reason, she just didn't press the buttons. The women in front of her, saying these things, was nonchalant about it. There was no rancor. She might have been discussing the color of the wallpaper. There was something utterly terrifying yet mundane about the whole thing. It was terrifying because it was mundane to this woman.\n\n\"Good. I have your attention. Ok, so lets get it all out there. Firstly, I know everything that you did to Joe. Everything. How he felt about it, what you did, how he tried to pick himself up, everything. I even know about the business you tried to throw his way. Pretty nasty little high-powered version of a mercy fuck, don't you think? Did you know Joe moved to a shack in the woods to get away from you? You and that other bitch. Yeah, just because of what you did to him. I hope you're proud of yourself, I hope what you gained was worth it. Although, looking around here, and seeing your nice new Mercedes, I'm sure it was. To you. \n\n\"Too bad someone else paid for that eh? Still, that's been how your whole life has been, hasn't it? Always someone else paying. Right up till your politically expedient marriage dissolved. How did it feel to have someone do to you what you did to Joe? Painful much, was it? I'll bet to someone like you, someone who needs control so desperately, it must have really hit home. That's why you pushed that work Joe's way, wasn't it? Clumsy move on your part, but I can see why you did it.\"\n\nApril was just so conversational that Tara just sat there listening, fascinated in some deeply terrible way.\n\nApril smiled at her. And slid something across the table.\n\n\"So, retribution time. Time for you to pay the piper. That there is Joes journal.\"\n\nTara caught the notebook and picked it up. On the back page there was a CD taped on. She picked it up and opened a page at random, - desperately playing for time to get herself together, - while noting Joe's neat spider crawl hand writing. He never wrote in cursive \u2013 he had claimed that it was 'beyond his jarhead abilities.' The fact was that his normal handwriting looked great, almost printed.\n\n\"That has everything in it. Names, dates, everything,\" said April.\n\n\"What do you expect me to do with it? Read it? Look, I'll level with you. I feel beyond shitty about all this. But what can I do now? He's gone. I can never make it up to him. I'll have to live with what I did and it's becoming more and more apparent to me that it's going to get harder and harder. Reading this,\" she said, indicating the book, \"isn't going to help or suddenly make me more able to fix anything.\"\n\n\"On the contrary,\" replied April, smiling a particularly nasty grimace, \"it's going to do all that and more. Here's what's going to happen. I know you are on the board of Garin Publishing. They have a crappy CEO you want out, right?\"\n\nTara found herself nodding and marveling at where this girl was getting her information. This was known only to the board at this time.\n\n\"Well, you are going to publish this. Word for word. That's what the CD is. I had someone type this up. I thought you'd like to see the original. I thought it might be published to look like this, you know, like a written journal?\"\n\nTara just sat there, not moving. Eventually she said, \"Did you say this named names? I can't publish this. It would end me.\"\n\nApril leaned forward, and her tone changed drastically \u2013 what she had to say was now even, low and delivered with intent. \"Let me be clear, Mrs. Western, very clear. You are already ended, you just haven't realized it yet. You are going to publish this. And you aren't going to change one word in it. I have lots of copies of the original, and if one fucking word is changed, your life will be even more shitty than it's going to be. In fact, lets just clear up one thing right now...\"\n\nApril picked up her bag, pulled out her phone and made a call.\n\n\"Hey Jessie. Put me through to Dermott please? Thanks.\"\n\nThey both waited for a moment, Tara leafing through the book, looking for instances of her name and April watching her, with the phone pressed against her ear.\n\n\"Dermott! Me again. Yes, another one. No, this is required too. Another forensic one. Yes, full on IRS audit. Yes, a lesson needs to be taught. This'll be it though. Name of Tara Western. Sits on the boards of a bunch of companies here in D.C. Yes. Forensic. The one where they crawl up your ass. Sure thing. Yeah, I understand. Make it happen sir!\"\n\nThroughout the whole brief phone conversation, April kept her gaze on Tara, who once she understood what was being said, looked back shocked.\n\nShe ended the call and Tara felt she had to do or say something. She was on the board of several companies and she was to be feared. She was handing nothing back and so she said, \"Look, April or whatever your name is, I don't know what game is being played here, but I'm not playing ball. Anyone can make phone calls and pretend to know people at the IRS. Why don't you find a more deserving target to try and intimidate?\"\n\nThere was silence for a few minutes longer, then April, now well and truly angry and eyes blazing with the fury of the righteous, said \"Ok Tara. I was trying not to get pissed, but I can see how you drag it out of people. Now be aware, I work for a government agency. I'm not going to tell you which one, because it really doesn't matter. All that does matter is that I have you in my sights. I'm about to become the god emperor of your little world. To you, I'm the Angel of Fucking Death, like that lawyer in Florida, but far less forgiving. I have within me the ability to fuck up your life to the point where you'll put a gun in your mouth three months from now and end it yourself. Trust me on this. I'm so pissed at you for what you did to Joe, and what I'm telling you to do now is nothing compared to what I will do to you if you don't. This isn't a threat. It's a fact.\"\n\nThere was another silence. Tara was on the defensive, and when you are on the defensive, you play for time.\n\n\"I can't publish this. If it has my name in it, it'll ruin me. It's not like I would have the chance at reply. My career...\"\n\n\"Your career has been on life support ever since you dumped Joe. It just didn't know it yet. It was just waiting for me to show up. Well, I'm here now, and you are done. The only question now is to what degree you are done. Your cushy little jobs are now over. Finished. So start getting used to that fact, because it's done. You don't publish this? Fine, I'll take over to Robson publishing. I suspect they'd love to do it. I'm giving it to you because it's better that you do it yourself. You can publish this and retire from public life, or I'll fucking destroy you. All legally too. Your choice. Don't want to believe me? That's fine too. Wait three days and lets see what happens with the IRS.\"\n\nMore silence. April waited a beat, then followed up with the appeal. In all good beat downs, there is a place where you point out to the victim the folly of their ways, and give them a way out. If you do it right, you can even get them to apologize to you for the way you have treated them. April didn't expect to get that here \u2013 Tara was too well grounded for that \u2013 but it would introduce a note of self-examination that would probably prove mineable in the future.\n\n\"The thing is, I think you'll do this anyway. I think you'll do this because even you know what an unbelievable shit you were to that man. He only wanted to make you happy, but what did you do? Move up on the chain as soon as you could. What was Joe, a 'starter husband'? He loved you. He had no idea you were as cold are you were. Are you still that cold Tara? Or are you starting to see what you did, what you are responsible for? I think you are. I think you know that this is one of the only ways you can start making up for what you did. You know it. I know it. You don't need the money from these jobs, for gods sake. Lets face it, dumping Joe and marrying that VP schmuck did wonders for the income. You are fine for life.\"\n\nTara just sat there, leafing through the book but not seeing any of the pages. She was desperately trying hard to not tear up. She heard what April was saying and her own conscience \u2013 that voice that of late would not let her think without chiming in \u2013 was agreeing.\n\n\"Lets say, for the sake of argument, that I did get this published. Then what? Are we done?\"\n\nApril laughed a very humorless laugh. \"Oh we are far from done Tara. So very far. I have a few more tasks for you yet.\"\n\nTara looked at April with a mixture of dread and expectancy.\n\n\"You are going to take up a new hobby. You are going to collect blankets and clothes from dry cleaners who have onsite lost and found and then donate them to the homeless shelters. You are going to do that yourself, personally. That's what Joe was doing the night he...\" April faltered for a second, then rallied, \"...saved my life. Someone needs to keep doing that. You are going to do it. In that nice Mercedes of yours. \n\n\"You, Tara Western, are going to volunteer your own time at a homeless shelter \u2013 ladle food into the tins of the people who need it and get shit all over your nice clothes. You aren't going to sit on a committee of society matrons who are bored and who aren't going to get within a mile of someone who actually needs their help, you are going to get right in there, stuck in. And I'll be watching. All the fucking time.\"\n\nTara swallowed.\n\n\"Lets see, what else? Oh yes, you are going to set up a scholarship, in Joe's name. With your money. And you are going to put over three hundred grand in it. It'll be awarded to the most deserving case of the breadline families who have the opportunity to send a son or daughter to college, but can't afford it.\"\n\nTara put down the book on the table and lent on it, to stop her hands from shaking.\n\n\"Oh and you are going to set up a college fund for a specific young man. Joe didn't know he had a son \u2013 the bitch he had it with kept it from him and lied to him. There's been some damage done there \u2013 damage that was long overdue \u2013 but if you ever cared about Joe, if you ever loved him, - and I have my doubts, - you'll do this. Ensure that kid has a future.\"\n\nThere was a stunned silence, which Tara broke and said, tremblingly, \"He has a son? What's his name? Where is he? Is he with that Penny Bitch? I'll fucking strangle her with her own hair. He has a kid? He never knew? Oh fuck...oh my god...\"\n\nTara broke down crying. She just sat there, sobbing. April's normal tendency to help was kept in check \u2013 she knew this is what Tara needed; some heavy reality. It was what would put her back on the track to being part of society again.\n\nApril let her cry for three minutes, and then said sharply, \"Tara. That kid needs you to be looking out for him, ok? Knock the tears off. You can do that later. Now, do you hear what I said? Did you comprehend it?\"\n\nTara nodded miserably, looking around for a tissue. April saw her do it and tossed her one from her own bag.\n\nAs Tara dabbed her eyes and wondered what she looked like \u2013 her mascara must be running, April continued.\n\n\"Make no mistake. You ARE going to do these things. Not just because I tell you, although that's reason enough, but because you know this is the right thing to do. You know it's time for you to fess up and deal with the implications of what you've done. It's time to pay, Tara, and you know it.\"\n\nThere was silence as the two women stared at each other for a moment. Then Tara blinked. She nodded and just said, simply, \"OK.\"\n\n\"Oh and one last thing. Your ex. We are going to need to deal with him. Quite apart from what he's done to you \u2013 which you richly deserve by the way \u2013 what he did to Joe, that needs to be paid back. You were married and he went for you anyway. Quite apart from you being a faithless slut, it takes two to tango. So he gets his too. I will not let that pass.\"\n\nTara nodded again, with a little more energy this time.\n\n\"I have some idea's, but I'd like to hear what you have to say. Not now. Think on it, although I'm sure you already have. Now, read the book, get it sorted for publication. I'll be back in a bit to talk about it. The IRS thing, well, it's going to happen. But you deserve the pain. And you need to know I am serious. Don't get in my way or not do what I tell you, or it'll go the worse for you. I'm your worst nightmare Tara \u2013 I'm a smart bitch with resources who, right now, hates you for what you did to a good man -, don't ever forget that.\"\n\nThere was another silence and Tara took a ragged breath. Then she looked at April and said, \"I honestly thought we were on the same page, back then. I really didn't understand. We used to sit around and talk about the future, about what we wanted. We both had dreams, he knew mine and I knew his. I just thought, 'that's where we are going, that's what we want'. I just made mine happen. He didn't. ",
        "\"I honestly thought that because I was making mine happen, he'd understand. I knew he'd be hurt, but it would be over quickly and eventually he'd understand. It was business \u2013 the business of getting what you want. I thought we both understood that what we'd said we wanted was what we really wanted. That if his dream came up, he'd have grabbed it too. I would have understood.\"\n\nTara realized she was babbling and also had no idea why she felt the need to say this to April. April just sat there, wondering how far she needed to go with Tara. Tara needed help and she could give it. The trouble was, she didn't want to. She was spitting mad and ready to rip her limb from limb if she had to. But the professional won out.\n\n\"No, you wouldn't have, Tara. You think you would but you'd disconnected ambition and desire from reality and emotional content. You say you would because that's the reaction you expected \u2013 needed - from Joe. It's what you needed to believe to be able to follow through on the betrayal and abandonment of Joe that you did end up doing. You wouldn't have understood it if he'd done it to you, and what's more, you knew deep down he'd never do that to do you. That's why it's easy to say 'I would have understood' and to even buy into the lie, because it was never going to happen. And you know it, on some subconscious level.\n\n\"The bottom line here is that you measured what you had with Joe against the ambition you had, and the paths you saw to get there, and it just didn't measure up. This wasn't one of those 'what he doesn't know won't hurt him' justifications. There was no other ending to this than what you did. It was cold and calculated and inevitable. There's nothing else to really say. What it says about you, well, I've said my piece on that. I suspect you've been coming to your own realizations about that recently. The fact is, you are who you are and nothing would have saved your marriage to Joe. You killed it way too efficiently.\"\n\nTara broken down sobbing again, and managed to get out between sobs, \"I really did love him. I did. I let him go because I thought it was best. Neither of us was going to get what we wanted together.\"\n\n\"Tara, did it ever occur to you that what he wanted was just you? The dreams you talked of were additions to the relationship you had. They weren't 'instead of', at least not for him. He already had what he wanted. It's just you that's the greedy bitch.\"\n\nAnd with that, April got up, grabbed her bag and went to leave, watching Tara heave silently in her chair. She stopped at the door of the conference room and said, \"Nice blouse by the way.\"\n\n*****\n\nMy new therapist, Marianne Thomas, has told me to keep a journal. She says it's therapeutic. I don't know about that, but right now I'm such a mess that I'll take anything that helps.\n\nSo I guess I should give it some background. I'm Julian Sullivan. Joe to my friends. I was called Jules at school, but honestly couldn't wait to leave that behind. I was in the army, in the original Desert Storm. I got invalided out due to an injury. I was lucky to get away with that, originally my CO wanted to bounce me out on a dishonorable discharge, because of 'desertion of post'. \n\nHe just couldn't get it into his head that I left my post so I could arm the nurses and doctors in the hospital we were defending, because it was increasingly likely we were going to be overrun, and I wanted to give them a chance. The local warlord out there was not going to give them one. Educated women? Yeah, first up against the wall. Hell, I only got wounded because I went out after the first sortie and gathered up AK47's and pistols from the enemy dead, in order to arm those inside.\n\nWhatever. The past. Not worth getting upset about now. I have way more things to be upset about.\n\nI'm 32 years old. I still hold over some of my army habits \u2013 I run, I swim, I work out and try and keep trim. I'm up early and I am responsible.\n\nUp till two weeks ago, I was a rising star at Mercanos, having worked there for the past 5 years. Mercanos is a local conglomerate that designs and manufactures Doctors offices. I was part of the design team there. I met my wife \u2013 or now soon to be ex-wife \u2013 at Mercanos. She was part of the design group management. And she was mine from the moment I saw her. \n\nI don't know what it was, but it was love at first sight. Or lust, anyway.\n\nTara Beran was tall, beautiful, long lush brown chestnut hair, pale, blue eyed, sexy, awesome, efficient, clever, smart and lithe. She had smallish breasts, but she knew all about those push up bra, oh yes she did. Always in a tight skirt, pantyhose (although I found out later, almost always holdups. She constantly complained about how pantyhose made her crotch itch. TMI but nice that she wore stockings. I took advantage of that over the years. As, I now know, did others.)\n\nShe'd been at Mercanos for 18 months when we met, and already I could see the signs of frustration, of her wanting more from the job and encountering the glass ceiling. She loved what she did but was pissed off with those above her.\n\nBut it was ok. We'd sit in the bar on a Friday and moan about those in our way and bond. And it was great. She was flirty, but in a very restrained way. You'd have to really understand her and look at what she said in a deep way to really get the humor. And I did. Sometimes she'd say something in a meeting and everyone else would miss it, but I wouldn't. And she'd deliberately not look at me because she knew if she did, one of us \u2013 or both of us \u2013 would start cracking up.\n\nIt didn't take long before we were in bed and the sex, oh the sex. It was great. Traditional, but great. Vanilla, but some how that didn't matter. She didn't take it up the ass, she didn't swallow, but we did a lot of everything else. Even know, with everything that has happened, I still remember the sex.\n\nIt took 9 months before we decided to tie the knot, 3 months after moving in. It moved fast, but that's the way we were. Saw what we wanted, made a decision, move on it. It was bliss. I was so into her and couldn't quite believe she was into me. We were going to conquer the world.\n\nAnd for 4 years, we did. It was great. And then the end came.\n\nI was completely oblivious. I didn't see it coming. I had no idea. I was just working and loving life. I didn't see anything obvious. No drop off in sex. No late nights on her part. No real huge changes. Maybe they were there, but I just didn't see them. I can second-guess myself forever, but whatever; I didn't see it coming. It totally blindsided me.\n\nOne Friday night she just didn't come home. I called her cell \u2013 she had one of the first ones, those big Motorola things. No answer. She didn't show up the whole weekend and I was frantic. Called the cops and everything.\n\nSunday night, she just waltzes in, like nothing is wrong and says those words that no man wants to hear, 'We have to talk.'\n\nShe told me where she was. Our boss's house \u2013 Peter Western. 'Test driving living with him.' They'd been at it for the past 3 months. She'd decided that the glass ceiling was not going to be broken any other way, so she was sleeping with him and intending to pursue a relationship with him. She loved me and didn't think it was fair to me, so she was going to divorce me. She loves me, but I'm not going to get her where she wants to be, and he can, and he's got a big dick too. Surely I can see her position?\n\nI don't even know where to begin. I was just in shock. I had no idea her mental processes were that hard. I had no idea she was even capable of this. Obviously I didn't know her at all. Maybe that's my fault. Maybe it's hers, for hiding her career needs so well. We used to sit there and make fun of him, together. And now she's sleeping with him. And making it clear she intends to marry him. But she's going to rape our savings first. She's 'entitled', apparently.\n\nI just didn't even know how to respond. Well, I did, but no one was getting smacked that day. I mean, I couldn't even ask why. She'd told me. I just couldn't do for her what this other guy could, and out of loyalty to me, she was ending it. I did point out that she'd already admitted that she had been sleeping with him for months \u2013 loyalty my ass. She just wanted to actually marry the fuck and I was in the way. \n\nMarianne says I should express my feelings here. Well, I was surprised, upset, bewildered, numb, angry, scared, and apoplectic, all at the same time. She never said anything. There was no hint. It just came out of the blue.\n\nWhen I got to work on Monday, I found the asshole boss waiting at my desk, concerned that 'I might be taking this all wrong and make this an unpleasant work place.' Fucking right I was. 'How, exactly, was I supposed to take this?' It was obvious he just wanted me to shut up and not cause waves. We'll fuck that. I did wonder if he understood the mercenary reasons she was wanting to be with him, but hell, why the fuck should I clue him in? Let him find out the hard way. Cunt.\n\nObviously I went to HR and his boss. And they didn't give a shit. There was no morality clause in place. It took 3 days but eventually they got back to me that it sucked, but they neither had a no staff fraternization policy in place, nor did they have a morality clause, so they were just going to stay out of this. Sorry, but tough shit. Basically, some one looked at who they needed more \u2013 one designer or a design group manager and her VP boss, and made a business decision to just ignore it.\n\nOh they were sorry, and it sucked, and between you and me, he's a scumbag for stealing my wife, but hey, that's life in the big city. Sorry.\n\nOver those three days, I had several people come up and say 'Sorry'. They all had wanted to say something to me \u2013 which meant they all knew about it before I did; apparently this was all being done on work time and I just hadn't seen it because I'd been heads down in the design lab, actually doing my job \u2013 and no fucker had said a word to me. No one. The guys that I worked with, they just all avoided my gaze. They knew and no one said a thing.\n\nWhen HR said they wouldn't do anything, I quit on the spot. Obviously I can't continue working there. Tara came by as I was packing up and told me I was being dumb, and just reacting instead of thinking it through. There was plenty of room at Mercanos for both of us. She was sorry, but it was happening and I should make the best of it. She actually had the gall to ask if I knew how she was feeling, the choice she had to make, how hard it had been to make it. Either way, someone loses. I tried to point out that _she_ put herself in that position, and if she hadn't gone and seduced the boss to get a leg up, she wouldn't have to make that choice, and _I_ wouldn't be the one paying for it, but I think that logic was a bit too much for her. For her to admit that, she'd have to admit she was a scheming bitch who just dropped me like a hot potato so she could get the next job up\n\nShe has no fucking idea what I was feeling or why. Not a clue. I still can't get over how I never saw this side to her. I'm an asshole, obviously. I guess love really is blind. I had no idea. Not a clue. No inkling.\n\nI told her she was a dumb cunt and I wanted nothing to do with her or that assfuck boyfriend of hers. I said some things about watching their backs \u2013 I wouldn't have done anything; I've seen enough death and violence in my life but it was all I had left. Shit them up a bit. It got me a visit from the cops the next day but it's their word against mine. Fuck them.\n\nI spent a long weekend with Manny in Wisconsin, pretty much drunk the whole time, and he recommended I see a therapist. So, when I got back, I did. And she said this was a first start to recovering my 'poise'. What a phrase. 'Poise'. I didn't know anyone still had that. I thought that went out in the 1950's.\n\nSo here I am, writing in here, trying to describe the unbelievable betrayal I feel at my wife, who chose career over love. Or was it even love? I mean, how can it be if she just abandons it like that? Either she can turn off her emotions, or she's a cold bitch. Or both. Probably both. \n\n*****\n\nThe funeral was a damp day in the fall. It had rained that morning, and the grass was still wet. It was overcast and the clouds looked threatening \u2013 low in the sky and dark and heavy with the promise of more rain. But it held off and for that April was grateful.\n\nShe had arrived early at Arlington National Cemetery. Julian Sullivan had been a veteran and she'd spent a day on the phone with various government agencies ensuring that he would be buried there. She had no clue where else he should be buried if they'd said no, so she'd simply not accepted their initial refusals. She had Max with her, on a new leash. He kept wanting to get up and wander and she had to jerk the leash a few times to get him to understand that no, this was not play time.\n\nShe'd sent out a few emails letting people know when the funeral was, but didn't expect anyone else but her and the priest she'd hired.\n\nShe was surprised when a black limousine had rolled up and disgorged a black clad Tara Western, n\u00e9e Sullivan, carrying a red rose. She'd studiously avoided looking at her. Then another car arrived, and out stepped Penny Glasso with her son, Aaron. That was another surprise. No Mark. Just as well.\n\nDermot arrived, escorting both Jessica Ingrams herself, and Desirea. Desirea had given her a peck on the cheek and whispered, \"Megan wanted to be here, but she's still in the field. She's thinking of you and will see you when she gets back.\"\n\nAfter that, a cadre of nuns arrived, plus several down-on-their-luck women. One of the nuns April recognized as the nun that she'd talked to at the homeless shelter. \n\nThey were followed by a sprinkling of people arriving in cars with West Virginia plates; April could only surmise these were people from where Joe had been living, in Charles Town.\n\nSarah Atwood showed up, along with several other older women, each helping each other along. 'The Joe Sullivan for Sainthood brigade,' April mentally dubbed them.\n\nMarianne Dubowski turned up, looking dapper. April noticed her nodding at Jessica Ingrams, who nodded back. She filed that piece of information away for investigation later. No wonder Marianne had pegged her - she knew Jessica.\n\nA van arrived and twenty-odd men tumbled out. All older, all grizzled and some obviously damaged. There was missing legs and one missing arm. April was worried \u2013 she'd only ordered twenty chairs because she'd been convinced she'd be there alone. As it was now, there was standing room only.\n\nThen Ambrose Hillier arrived, looking more presentable than she'd seen him before.\n\nAnd then, to her surprise, a short man with curly hair and a fedora hat she'd never met before came up to her and said, 'Hi. I'm Manny Trueso. You don't know me, but I know you. I know what you did \u2013 he told me.\" Trueso indicated Hillier who just smiled in an embarrassed way. \"I need to say thank you. You got him justice for those bitches.\" He nodded at the two women, who were doing the best job they could of not knowing each other existed, when sitting next to each other. \"Do you mind if I sit here?\" he asked, gesturing at the chair next to her. She just nodded at him and as he sat down, he said, \"we can talk later. There are stories about Julian you need to hear.\"\n\nThe hearse arrived, from the Slow Trail Funeral Home. She'd taken care of that as well, paying for the funeral expenses. She'd figured it was the least she could do.\n\nThe men who had stumbled out of the van walked up to the hearse and politely but firmly explained to the men from the funeral home that they would be handling the pall bearing duties.\n\nAt the same time the hearse arrived, to her total amazement, so did a squad of marines, complete with weapons. The lead sergeant nodded at Manny and the squad took up a formation.\n\nManny leaned in and said quietly, \"The military remembers its own. That sergeant there is alive because of Joe. He's one of the Cambridge crew. I'll explain later.\"\n\nThe funeral went of slowly and quietly, until the 21-gun salute from the Marines. They had draped the coffin in a flag, folded it up and then presented it to Aaron, who took it in tears.\n\nMax kept straining at the leash and whining. Eventually he got free and rushed the table where the coffin was placed while the funeral was underway, and plopped himself down underneath it. He knew where his master was, and he just wanted to be with him, as loyal dogs do. It broke every heart present. April didn't have the heart to call him back.\n\nWhen the funeral was done, April had Ambrose speak and announce there would be a gathering at a local Irish pub that was very close to Arlington. April didn't trust herself to speak. She was still too angry with almost everyone. Most of the people who had shown up to pay their last respects to Joe in death, well that respect had been noticeably absent for him in life.\n\nAt the gathering at the pub, April grabbed Ambrose and took him over to where Tara was sampling the wine and not enjoying it very much, and not being very discreet about it.\n\nMax was sitting at the bar and some of the funeral goers were having fun dropping a little beer in the water dish on the floor for him. He kept looking from person to person, and it was obvious who he was looking for.\n\n\"Ambrose, I'm not sure if you met Tara or not? She was Joe's first wife. She has something she wanted to say to you.\"\n\nHillier looked at Tara dubiously. She was tall and had a face that tended to look down on people. Right now though, she was desperately trying to be herself. She looked around for a place to set the wine down, and settled on mantelpiece.\n\n\"Yes, um. April has explained to me all that you did for Julian. How you wouldn't let it go. How you found his hideaway and how you got the Marines to show up at this funeral. I wanted you to know that Julian would have liked you. He liked tenacious people. I wish you could have known him. He was the best man I ever met.\"\n\nShe sniffled and wiped her nose with the napkin from her drink. \"I was such a moron. So consumed with work and with career. Never seeing what I had right in front of me.\" She sighed and shook her head, obviously still ashamed. \"Anyway, I wanted to ask you if...perhaps, you might consent to dinner? My understanding is that you've had similar experiences?\"\n\nHillier looked at April, who smiled back. The smiled wilted a bit and became a bit forced as he just stared at her.\n\n\"So, this is THE Tara, yes? The one that fucked up our boy?\"\n\nTara immediately sniffed again and turned away, muttering, \"I told you this was a bad idea.\" \n\nShe turned back and said, \"I just thought...Look, yes, I was an asshole. I learned. You obviously haven't. Never mind. I had thought....never mind. Forget it.\"\n\nAnd she went to walk away, before April said sharply, \"Stop right there, Tara.\"\n\nTara stiffened and stopped, but didn't turn around.\n\n\"And you, asswipe. Hillier. You such a fucking catch that you can afford to be rude to someone who took a chance? What a dick. No wonder your relationships haven't been covered in glory. Look at you. You look like a bum and you behave worse. What the fuck have you got to loose? Look at her. She's beautiful. She's successful. And she's learned a few damn hard lessons. Think you have nothing to learn? Jesus Christ, what does it take for you to wake up and understand that everyone has to take a chance sometime? The pair of you disgust me because you are too stupid to live. I'm going to get a drink.\"\n\nApril stalked off without looking back, doing her best to keep the smug expression off her face.",
        "Hillier and Tara were both left looking embarrassed. Tara still had her back turned and Hillier didn't know where to look, so he stared at his beer instead.\n\nEventually Tara said, \"Has she gone?\"\n\nHillier grunted in return. Tara turned around, her faced pinched. She looked to see if anyone had noticed. No one appeared to, or at least no one looked back. She grabbed her wine from the mantelpiece, to give herself something to do.\n\nThey both drank their drinks in silence for a moment, just standing close to each other but not close enough to be together. Then Hillier said, \"She's right, you know. I'm damaged goods. One completely messed up marriage due to the work and not being able to see straight for case work.\"\n\nTara smiled and said, \"I hear that. You and me both.\"\n\nHillier sighed. \"I make snap judgments. I don't come home on time. I have a backlog of scumbags I need to put away and I don't sleep well.\"\n\n\"Oh yeah?\" said Tara. \"Lightweight. I work all hours, I have a phone on constantly and my best friend is a vibrator. And I work at home too. And I snore. Apparently.\"\n\n\"That's kids stuff. I have guns stashed all over my apartments. I deliberately leave the hallway dirty with stuff that makes noise so I can hear people coming. I eat blended pizza for breakfast. And I haven't had a suit dry cleaned in a month.\"\n\n\"Oh reeeealy? You think you're such hot shit don't you? I bet you I can drink more than you too.\"\n\n\"Oh bullshit. Be real,\" retorted Hillier, \"I can out drink a beanpole like you any day of the week.\"\n\n\"Fine. You think so? Great. Hossaks bar, Wednesday. I'll have my driver on hand, so neither of us have to drive. Get ready to be put on your ass by a woman, Mr. Hillier.\"\n\n\"Fine.\"\n\n\"Fine then!\"\n\nThey both stood there, sipping their drinks, wondering what, exactly, had just happened.\n\nAcross the room April stood at the bar, looking in the mirror at the two of them and smiled to herself. On paper it had looked perfect, but you never knew until you got two people together.\n\n\"Miss Carlisle?\" she heard someone ask, interrupting her musing.\n\nShe turned, and there was Manny, with his fedora scrunched in his hand.\n\n\"Hi there. Manny right? One of Julian's Army buddies?\"\n\n\"Yes, ma'am. There are some people I want you to meet. This here is John Graves. John was one of the lookouts at the Cambridge event. He and Joe went way back. This fella, - who needs a shave \u2013 is Sal Samri. Sal was in the hospital with me in Kuwait. All of these guys are part of the Cambridge event. Show her, guys.\"\n\nAll of them rolled up their sleeves. All had the same tattoo.\n\n\"Ma'am,\" said one of the men, \"We know what you did. We just wanted to say thank you, and give you this.\"\n\nAnother of them produced a t-shirt, complete with the Cambridge tattoo and motto on it. \"We figured you probably wouldn't go for the tattoo, but since you are one of us now, we figured you should have this.\"\n\nApril didn't know what to say. Eventually she found her voice and said, \"One of you?\"\n\n\"Sure. Joe Sullivan saved you too. We figure that makes you part of the Cambridge crew.\"\n\n\"I...\" April honestly didn't know what to say. \"I don't deserve this. I really don't. I never even got to say thank you to him.\"\n\n\"Well, as far as I know, as Joe used to say, as long as there are people out there willing to do those things, you never have to,\" said Manny.\n\nApril smiled a large genuine smile. \"Ok, well, drinks are definitely on me. Who's having one? Someone mentioned some Joe stories? I want to hear. And also, don't count me out on the tattoo just yet. Might have to find the right location for it though...\"\n\nPost Script\n\n\"An American Life\", as it was published, was a quiet success. It was number one on the New York Times book list for two weeks, and then went into higher success when Oprah named it one of her \"favorite things.\" It became required reading at several premier colleges but to date, no one has attempted to buy the movie rights.\n\nAll profits were fed back into the Julian Sullivan Foundation, run by Tara Western, which dedicates itself to providing scholarships for aspiring writers, favoring those from the armed forces.\n\nAfter \"An American Life\" was published and promoted by Oprah, even the President of the U.S. got involved, mentioning Joe Sullivan at the State of the Union address that year, calling Joe Sullivan \"the kind of quiet American hero, who does for others but never asks for themselves, even under the most difficult conditions, that this country is built on.\" \n\nThe military opened an investigation into the Cambridge Event, and ended up awarding Joe Sullivan, posthumously, the Purple Heart and Congressional Medal of Honor for his actions that day. They even had his son, Aaron, come to Washington to accept it. Manny and some of his crew were also awarded medals of valor, and there was a public apology from the Army's top general that this incident had been overlooked for so long.\n\nIt didn't stop there. Joe Sullivan's CO of the time, two-star General James Patterson (ret), who was a common talking head on CNN, was asked to be part of a debate on the subject of Military Injustice. He went ahead and appeared and was completely taken apart by the other three panelists, all of whom had served in the military. He had no answers for why he had penalized the people involved, and CNN dropped his contract.\n\nThe military, quietly, retroactively reduced him in rank to colonel.\n\nThree weeks after \"American Life\" was published, three of the four designers that Mark Glasso had working for him quit en masse. All were married and none of them wanted Glasso around. They resigned together and when Glasso protested that he was a happily married man, and they had nothing to fear from him, he was told, \"Yeah, I'm sure Joe Sullivan thought the same.\"\n\nTwo weeks after that, eighty five percent of his clients had canceled their orders. Glasso was living in a Best Western, having been thrown out by Penny once the evidence of his own cheating had been provided, and suddenly he was hit with three lawsuits at once. One was for alienation of affection, from the husband of his personal assistant. The second was for being named in the divorce of the same couple and the third was for not enforcing his own company's rulebook regarding interpersonal relationships within the company. \n\nHe'd been astounded by that, and pulled out his companies bylaws and rule book and found, to his astonishment, that there was indeed a clause in there. When he'd left Joe Sullivan's employ, Mark had taken everything he could put his hands on \u2013 clients, wife, and also the bylaws and rulebook that Joe had written. He'd not even thought about it at the time, just glanced at it to ensure that it seemed appropriate, renamed the company heading at the top and used it.\n\nHe wondered how they had known that clause was there, but again, that damn book, \"An American Life\" had made mention of it. He was hoist on Joe Sullivan's petard.\n\nThe IRS found several inconsistencies with his bookkeeping, and while they weren't much, with the loss of designers and loss of clients, it amounted to enough to kill the company. Three days before he was about to declare bankruptcy, he was offered thirty-two grand for the company, a particular dollar amount not lost on him. He had no choice to accept it. The company was taken over by the Julian Sullivan foundation, and renamed 'Sullivan's Designs'. The three designers who had quit were offered their jobs back and two accepted, the other having already taken another job.\n\nSullivan's Designs is now the preferred design group for Mercanos. \n\nPeter Western was found in a motel in Sweetwater, Texas, four months later. Sweetwater was a small town just outside of Abilene. What he was doing there, he couldn't rightly say. He woke up after a night of drinking beer in a hotel bar in Fort Worth. He wasn't robbed, but he did have scratches over a lot of his body. He had some particularly heavy cuts on his penis and around his anus. \n\nIt took him a week to understand that he couldn't maintain an erection any more. Some of the cuts around the dorsal artery were such that when they healed, they blocked the artery to the top of the penis, stopping the blood flow. A large amount of the arterial wall had also been removed, so while blood flowed, it just went everywhere instead of where it was supposed to go to maintain an erection. When he got a professional opinion, they all were stumped. It was as if the cuts where made deliberately in order for the scar tissue to form in such a way as to prevent an erection.\n\nSpecialist plastic surgeons worked on it, but found that every time they made an incision into the scar tissue, more scar tissue formed that kept blocking the artery. Eventually they made another small artery into the main muscle of the penis, to ensure it got blood and didn't go gangrenous, but that his ability to maintain an erection would be impaired for the rest of his life.\n\nHector Gonzales was never found, either in Mexico or Paraguay. However, it is worth noting that very soon after the Julian Sullivan murder, a new sex worker at the premier niche brothel in Bogota, in Columbia, arrived. The sex worker was a man, who took up residence in the Paine Room. The Paine room was the specialist room, where those with sadistic sexual tendencies took their business. The inhabitants of that room never lasted long, but there was nothing off the table. Blood was often drawn in that room and it took a very masochistic person to want to be the victim in there.\n\nThis particular individual lasted longer than most, before being found three months later, dead, from running at a mirror, cracking it, and using the shards to cut his own wrists. There was talk about him being drugged or him not being there by choice, but since half the fun to be had in the abuse of the people in the Paine Room was their own reluctance, it was hard to tell if it was put on or not. Either way, it got the users of that room even more excited.\n\nMany of the sadists who had abused this man had talked of his mania, of how his crazed eyes had been so wild, and how amazing it was to force a blowjob from a man with no teeth and no tongue. They did wonder at why there were so many copies of a picture of a man in American desert combat gear all over the room, posted so the sex worker would always see it, but the Madam of the brothel just spread her hands and told them it was a condition of his employment there.\n\nThe body was dumped in a shallow grave and no one mentioned him again.\n\nAaron Glasso changed his name at the earliest opportunity to Aaron Sullivan. Manny and his crew came to see him one Saturday, to take him out with them and tell him stories of his old man. When Penny wouldn't allow it, Manny stepped into the kitchen with her, talked for ten minutes, quietly, and after that, she never stopped him going out with the Cambridge Crew. Every time one was in town, they'd stop by and take him out to some museum or such and regale him with stories. April even went with them, when she wasn't out in the field. She made the cabin available to anyone of the crew who asked, and it was in frequent use. She was sure Joe would have liked that.\n\nTara Western retired days before \"An American Life\" was published, after first having agreed with April that she was allowed to \u2013 that her duties with the local homeless sheltered would be picked up by the Cambridge Crew. She relocated to Austin, Texas, where she bought a market gardening farm. They grew palm and fruit trees that were sold in Lowe's and Home Depot. She found more local homeless shelters to volunteer with. April was not about to let her off her pledge, and to her credit, Tara wasn't either. Hillier also quit and retired to Austin. Tara married him as soon as she was decently able, if only to get his last name and rid of hers. Anytime Ambrose Hillier was mad at Tara's behavior towards him, he called her Mrs. Sullivan, and it made her stop and think.\n\nThey try and keep in touch with April, and invite her every year to their annual 4th of July party, as well as Thanksgiving, but she never comes. She's not over her anger yet. She wasn't ready to see Tara happy. She knew it was wrong of her, and very unprofessional, but it was there.\n\nApril Carlisle went back to work at Ingrams. She still sees Marianne Dubowski professionally from time to time.\n\nApril Carlise and Ingrams &amp; Assoc will be back in Life After Death. "
    ],
    "authorname": "jezzaz",
    "tags": [
        "btb",
        "ingrams",
        "cheating",
        "wife",
        "revenge",
        "criminal"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ingrams-and-assoc-3-american-life-04"
}